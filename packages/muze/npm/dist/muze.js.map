{"version":3,"sources":["webpack://muze/webpack/universalModuleDefinition","webpack://muze/webpack/bootstrap","webpack://muze/webpack://DataModel/webpack/universalModuleDefinition","webpack://muze/webpack://DataModel/webpack/bootstrap","webpack://muze/webpack://DataModel/node_modules/d3-dsv/src/autoType.js","webpack://muze/webpack://DataModel/node_modules/d3-dsv/src/csv.js","webpack://muze/webpack://DataModel/node_modules/d3-dsv/src/dsv.js","webpack://muze/webpack://DataModel/node_modules/d3-dsv/src/index.js","webpack://muze/webpack://DataModel/node_modules/d3-dsv/src/tsv.js","webpack://muze/webpack://DataModel/src/constants/index.js","webpack://muze/webpack://DataModel/src/converter/auto-resolver.js","webpack://muze/webpack://DataModel/src/converter/dsv-arr.js","webpack://muze/webpack://DataModel/src/converter/dsv-str.js","webpack://muze/webpack://DataModel/src/converter/flat-json.js","webpack://muze/webpack://DataModel/src/converter/index.js","webpack://muze/webpack://DataModel/src/datamodel.js","webpack://muze/webpack://DataModel/src/default-config.js","webpack://muze/webpack://DataModel/src/enums/data-format.js","webpack://muze/webpack://DataModel/src/enums/dimension-subtype.js","webpack://muze/webpack://DataModel/src/enums/field-type.js","webpack://muze/webpack://DataModel/src/enums/filtering-mode.js","webpack://muze/webpack://DataModel/src/enums/group-by-functions.js","webpack://muze/webpack://DataModel/src/enums/index.js","webpack://muze/webpack://DataModel/src/enums/measure-subtype.js","webpack://muze/webpack://DataModel/src/export.js","webpack://muze/webpack://DataModel/src/field-creator.js","webpack://muze/webpack://DataModel/src/field-store.js","webpack://muze/webpack://DataModel/src/fields/binned/index.js","webpack://muze/webpack://DataModel/src/fields/categorical/index.js","webpack://muze/webpack://DataModel/src/fields/continuous/index.js","webpack://muze/webpack://DataModel/src/fields/dimension/index.js","webpack://muze/webpack://DataModel/src/fields/field/index.js","webpack://muze/webpack://DataModel/src/fields/index.js","webpack://muze/webpack://DataModel/src/fields/measure/index.js","webpack://muze/webpack://DataModel/src/fields/parsers/binned-parser/index.js","webpack://muze/webpack://DataModel/src/fields/parsers/categorical-parser/index.js","webpack://muze/webpack://DataModel/src/fields/parsers/continuous-parser/index.js","webpack://muze/webpack://DataModel/src/fields/parsers/field-parser/index.js","webpack://muze/webpack://DataModel/src/fields/parsers/temporal-parser/index.js","webpack://muze/webpack://DataModel/src/fields/partial-field/index.js","webpack://muze/webpack://DataModel/src/fields/temporal/index.js","webpack://muze/webpack://DataModel/src/helper.js","webpack://muze/webpack://DataModel/src/index.js","webpack://muze/webpack://DataModel/src/invalid-aware-types.js","webpack://muze/webpack://DataModel/src/operator/bucket-creator.js","webpack://muze/webpack://DataModel/src/operator/compose.js","webpack://muze/webpack://DataModel/src/operator/cross-product.js","webpack://muze/webpack://DataModel/src/operator/data-builder.js","webpack://muze/webpack://DataModel/src/operator/difference.js","webpack://muze/webpack://DataModel/src/operator/get-common-schema.js","webpack://muze/webpack://DataModel/src/operator/group-by-function.js","webpack://muze/webpack://DataModel/src/operator/group-by.js","webpack://muze/webpack://DataModel/src/operator/index.js","webpack://muze/webpack://DataModel/src/operator/merge-sort.js","webpack://muze/webpack://DataModel/src/operator/natural-join-filter-function.js","webpack://muze/webpack://DataModel/src/operator/natural-join.js","webpack://muze/webpack://DataModel/src/operator/outer-join.js","webpack://muze/webpack://DataModel/src/operator/pure-operators.js","webpack://muze/webpack://DataModel/src/operator/row-diffset-iterator.js","webpack://muze/webpack://DataModel/src/operator/sort.js","webpack://muze/webpack://DataModel/src/operator/union.js","webpack://muze/webpack://DataModel/src/relation.js","webpack://muze/webpack://DataModel/src/stats/index.js","webpack://muze/webpack://DataModel/src/utils/column-major.js","webpack://muze/webpack://DataModel/src/utils/date-time-formatter.js","webpack://muze/webpack://DataModel/src/utils/domain-generator.js","webpack://muze/webpack://DataModel/src/utils/extend2.js","webpack://muze/webpack://DataModel/src/utils/helper.js","webpack://muze/webpack://DataModel/src/utils/index.js","webpack://muze/webpack://DataModel/src/utils/reducer-store.js","webpack://muze/webpack://DataModel/src/value.js","webpack://muze/(webpack)/buildin/module.js","webpack://muze/./packages/muze-utils/node_modules/fusioncharts-smartlabel/lib/SmartlabelManager.js","webpack://muze/./packages/muze-utils/node_modules/fusioncharts-smartlabel/lib/lib.js","webpack://muze/webpack://hyperdis/webpack/universalModuleDefinition","webpack://muze/webpack://hyperdis/webpack/bootstrap","webpack://muze/webpack://hyperdis/src/utils/set.js","webpack://muze/webpack://hyperdis/src/utils/index.js","webpack://muze/webpack://hyperdis/src/graph-node.js","webpack://muze/webpack://hyperdis/src/electric-node.js","webpack://muze/webpack://hyperdis/src/graph.js","webpack://muze/webpack://hyperdis/src/model.js","webpack://muze/webpack://hyperdis/src/index.js","webpack://muze/./packages/muze/src/index.js","webpack://muze/./packages/muze-utils/node_modules/fusioncharts-smartlabel/lib/container-manager.js","webpack://muze/./packages/muze-utils/node_modules/d3-array/src/ascending.js","webpack://muze/./packages/muze-utils/node_modules/d3-array/src/bisector.js","webpack://muze/./packages/muze-utils/node_modules/d3-array/src/bisect.js","webpack://muze/./packages/muze-utils/node_modules/d3-array/src/cross.js","webpack://muze/./packages/muze-utils/node_modules/d3-array/src/number.js","webpack://muze/./packages/muze-utils/node_modules/d3-array/src/array.js","webpack://muze/./packages/muze-utils/node_modules/d3-array/src/range.js","webpack://muze/./packages/muze-utils/node_modules/d3-array/src/ticks.js","webpack://muze/./packages/muze-utils/node_modules/d3-array/src/threshold/sturges.js","webpack://muze/./packages/muze-utils/node_modules/d3-array/src/quantile.js","webpack://muze/./packages/muze-utils/node_modules/d3-collection/src/map.js","webpack://muze/./packages/muze-utils/node_modules/d3-collection/src/nest.js","webpack://muze/./packages/muze-utils/node_modules/d3-collection/src/set.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale/src/array.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale/src/ordinal.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale/src/band.js","webpack://muze/./packages/muze-utils/node_modules/d3-color/src/define.js","webpack://muze/./packages/muze-utils/node_modules/d3-color/src/color.js","webpack://muze/./packages/muze-utils/node_modules/d3-color/src/math.js","webpack://muze/./packages/muze-utils/node_modules/d3-color/src/lab.js","webpack://muze/./packages/muze-utils/node_modules/d3-color/src/cubehelix.js","webpack://muze/./packages/muze-utils/node_modules/d3-interpolate/src/basis.js","webpack://muze/./packages/muze-utils/node_modules/d3-interpolate/src/constant.js","webpack://muze/./packages/muze-utils/node_modules/d3-interpolate/src/color.js","webpack://muze/./packages/muze-utils/node_modules/d3-interpolate/src/rgb.js","webpack://muze/./packages/muze-utils/node_modules/d3-interpolate/src/number.js","webpack://muze/./packages/muze-utils/node_modules/d3-interpolate/src/basisClosed.js","webpack://muze/./packages/muze-utils/node_modules/d3-interpolate/src/object.js","webpack://muze/./packages/muze-utils/node_modules/d3-interpolate/src/string.js","webpack://muze/./packages/muze-utils/node_modules/d3-interpolate/src/value.js","webpack://muze/./packages/muze-utils/node_modules/d3-interpolate/src/transform/parse.js","webpack://muze/./packages/muze-utils/node_modules/d3-interpolate/src/date.js","webpack://muze/./packages/muze-utils/node_modules/d3-interpolate/src/array.js","webpack://muze/./packages/muze-utils/node_modules/d3-interpolate/src/round.js","webpack://muze/./packages/muze-utils/node_modules/d3-interpolate/src/transform/decompose.js","webpack://muze/./packages/muze-utils/node_modules/d3-interpolate/src/transform/index.js","webpack://muze/./packages/muze-utils/node_modules/d3-interpolate/src/zoom.js","webpack://muze/./packages/muze-utils/node_modules/d3-interpolate/src/hsl.js","webpack://muze/./packages/muze-utils/node_modules/d3-interpolate/src/hcl.js","webpack://muze/./packages/muze-utils/node_modules/d3-interpolate/src/cubehelix.js","webpack://muze/./packages/muze-utils/node_modules/d3-interpolate/src/piecewise.js","webpack://muze/./packages/muze-utils/node_modules/d3-interpolate/src/quantize.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale/src/constant.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale/src/number.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale/src/continuous.js","webpack://muze/./packages/muze-utils/node_modules/d3-format/src/formatDecimal.js","webpack://muze/./packages/muze-utils/node_modules/d3-format/src/exponent.js","webpack://muze/./packages/muze-utils/node_modules/d3-format/src/formatSpecifier.js","webpack://muze/./packages/muze-utils/node_modules/d3-format/src/formatTrim.js","webpack://muze/./packages/muze-utils/node_modules/d3-format/src/formatPrefixAuto.js","webpack://muze/./packages/muze-utils/node_modules/d3-format/src/defaultLocale.js","webpack://muze/./packages/muze-utils/node_modules/d3-format/src/formatRounded.js","webpack://muze/./packages/muze-utils/node_modules/d3-format/src/formatTypes.js","webpack://muze/./packages/muze-utils/node_modules/d3-format/src/identity.js","webpack://muze/./packages/muze-utils/node_modules/d3-format/src/locale.js","webpack://muze/./packages/muze-utils/node_modules/d3-format/src/formatGroup.js","webpack://muze/./packages/muze-utils/node_modules/d3-format/src/formatNumerals.js","webpack://muze/./packages/muze-utils/node_modules/d3-format/src/precisionFixed.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale/src/tickFormat.js","webpack://muze/./packages/muze-utils/node_modules/d3-format/src/precisionPrefix.js","webpack://muze/./packages/muze-utils/node_modules/d3-format/src/precisionRound.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale/src/linear.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale/src/identity.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale/src/nice.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale/src/log.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale/src/pow.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale/src/quantile.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale/src/quantize.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale/src/threshold.js","webpack://muze/./packages/muze-utils/node_modules/d3-time/src/interval.js","webpack://muze/./packages/muze-utils/node_modules/d3-time/src/millisecond.js","webpack://muze/./packages/muze-utils/node_modules/d3-time/src/duration.js","webpack://muze/./packages/muze-utils/node_modules/d3-time/src/second.js","webpack://muze/./packages/muze-utils/node_modules/d3-time/src/minute.js","webpack://muze/./packages/muze-utils/node_modules/d3-time/src/hour.js","webpack://muze/./packages/muze-utils/node_modules/d3-time/src/day.js","webpack://muze/./packages/muze-utils/node_modules/d3-time/src/week.js","webpack://muze/./packages/muze-utils/node_modules/d3-time/src/month.js","webpack://muze/./packages/muze-utils/node_modules/d3-time/src/year.js","webpack://muze/./packages/muze-utils/node_modules/d3-time/src/utcMinute.js","webpack://muze/./packages/muze-utils/node_modules/d3-time/src/utcHour.js","webpack://muze/./packages/muze-utils/node_modules/d3-time/src/utcDay.js","webpack://muze/./packages/muze-utils/node_modules/d3-time/src/utcWeek.js","webpack://muze/./packages/muze-utils/node_modules/d3-time/src/utcMonth.js","webpack://muze/./packages/muze-utils/node_modules/d3-time/src/utcYear.js","webpack://muze/./packages/muze-utils/node_modules/d3-time-format/src/locale.js","webpack://muze/./packages/muze-utils/node_modules/d3-time-format/src/defaultLocale.js","webpack://muze/./packages/muze-utils/node_modules/d3-time-format/src/isoFormat.js","webpack://muze/./packages/muze-utils/node_modules/d3-time-format/src/isoParse.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale/src/time.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale/src/colors.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale/src/category10.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale/src/category20b.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale/src/category20.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale/src/category20c.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale/src/cubehelix.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale/src/rainbow.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale/src/viridis.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale/src/sequential.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/colors.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/categorical/Accent.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/categorical/category10.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/categorical/Dark2.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/categorical/Paired.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/categorical/Pastel1.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/categorical/Pastel2.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/categorical/Set1.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/categorical/Set2.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/categorical/Set3.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/ramp.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/diverging/BrBG.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/diverging/PRGn.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/diverging/PiYG.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/diverging/PuOr.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/diverging/RdBu.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/diverging/RdGy.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/diverging/RdYlBu.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/diverging/RdYlGn.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/diverging/Spectral.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/sequential-multi/BuGn.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/sequential-multi/BuPu.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/sequential-multi/GnBu.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/sequential-multi/OrRd.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/sequential-multi/PuBuGn.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/sequential-multi/PuBu.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/sequential-multi/PuRd.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/sequential-multi/RdPu.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/sequential-multi/YlGnBu.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/sequential-multi/YlGn.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/sequential-multi/YlOrBr.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/sequential-multi/YlOrRd.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/sequential-single/Blues.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/sequential-single/Greens.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/sequential-single/Greys.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/sequential-single/Purples.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/sequential-single/Reds.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/sequential-single/Oranges.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/sequential-multi/cubehelix.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/sequential-multi/rainbow.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/sequential-multi/sinebow.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/sequential-multi/viridis.js","webpack://muze/./packages/muze-utils/src/enums/namespace.js","webpack://muze/./packages/muze-utils/src/enums/reserved-fields.js","webpack://muze/./packages/muze-utils/src/enums/common-props.js","webpack://muze/./packages/muze-utils/src/enums/constants.js","webpack://muze/./packages/muze-utils/node_modules/d3-axis/src/array.js","webpack://muze/./packages/muze-utils/node_modules/d3-axis/src/identity.js","webpack://muze/./packages/muze-utils/node_modules/d3-axis/src/axis.js","webpack://muze/./packages/muze-utils/node_modules/d3-path/src/path.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/constant.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/math.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/arc.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/curve/linear.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/point.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/line.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/area.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/descending.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/identity.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/curve/radial.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/lineRadial.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/array.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/symbol/circle.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/symbol/cross.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/symbol/diamond.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/symbol/star.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/symbol/square.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/symbol/triangle.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/symbol/wye.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/noop.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/curve/basis.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/curve/basisClosed.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/curve/basisOpen.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/curve/bundle.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/curve/cardinal.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/curve/cardinalClosed.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/curve/cardinalOpen.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/curve/catmullRom.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/curve/catmullRomClosed.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/curve/catmullRomOpen.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/curve/linearClosed.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/curve/monotone.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/curve/natural.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/curve/step.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/offset/none.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/order/none.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/stack.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/order/ascending.js","webpack://muze/./packages/muze-utils/node_modules/d3-ease/src/cubic.js","webpack://muze/./packages/muze-utils/node_modules/d3-ease/src/poly.js","webpack://muze/./packages/muze-utils/node_modules/d3-ease/src/sin.js","webpack://muze/./packages/muze-utils/node_modules/d3-ease/src/bounce.js","webpack://muze/./packages/muze-utils/node_modules/d3-ease/src/back.js","webpack://muze/./packages/muze-utils/node_modules/d3-ease/src/elastic.js","webpack://muze/./packages/muze-utils/node_modules/d3-voronoi/src/constant.js","webpack://muze/./packages/muze-utils/node_modules/d3-voronoi/src/point.js","webpack://muze/./packages/muze-utils/node_modules/d3-voronoi/src/RedBlackTree.js","webpack://muze/./packages/muze-utils/node_modules/d3-voronoi/src/Edge.js","webpack://muze/./packages/muze-utils/node_modules/d3-voronoi/src/Cell.js","webpack://muze/./packages/muze-utils/node_modules/d3-voronoi/src/Circle.js","webpack://muze/./packages/muze-utils/node_modules/d3-voronoi/src/Beach.js","webpack://muze/./packages/muze-utils/node_modules/d3-voronoi/src/Diagram.js","webpack://muze/./packages/muze-utils/node_modules/d3-voronoi/src/voronoi.js","webpack://muze/./packages/muze-utils/src/DataSystem/selection.js","webpack://muze/./packages/muze-utils/src/enums/stack-config.js","webpack://muze/./packages/muze-utils/src/common-utils.js","webpack://muze/./packages/muze-utils/node_modules/d3-ease/src/linear.js","webpack://muze/./packages/muze-utils/node_modules/d3-ease/src/circle.js","webpack://muze/./packages/muze-utils/src/DataSystem/dataSelect.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/symbol.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/order/descending.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/offset/diverging.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/offset/expand.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/offset/wiggle.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/pie.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/namespaces.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/namespace.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/creator.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selector.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selectorAll.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/matcher.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/sparse.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/enter.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/constant.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/data.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/sort.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/attr.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/window.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/style.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/classed.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/text.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/html.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/raise.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/lower.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/insert.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/remove.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/clone.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/on.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/dispatch.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/index.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/select.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/selectAll.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/filter.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/exit.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/join.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/merge.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/order.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/call.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/nodes.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/node.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/size.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/empty.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/each.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/property.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/append.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/datum.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/select.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/local.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/sourceEvent.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/point.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/mouse.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/touch.js","webpack://muze/./packages/muze-utils/node_modules/d3-dispatch/src/dispatch.js","webpack://muze/./packages/muze-utils/node_modules/d3-drag/src/noevent.js","webpack://muze/./packages/muze-utils/node_modules/d3-drag/src/nodrag.js","webpack://muze/./packages/muze-utils/node_modules/d3-drag/src/constant.js","webpack://muze/./packages/muze-utils/node_modules/d3-drag/src/event.js","webpack://muze/./packages/muze-utils/node_modules/d3-drag/src/drag.js","webpack://muze/./packages/muze-utils/node_modules/d3-timer/src/timer.js","webpack://muze/./packages/muze-utils/node_modules/d3-timer/src/timeout.js","webpack://muze/./packages/muze-utils/node_modules/d3-transition/src/transition/schedule.js","webpack://muze/./packages/muze-utils/node_modules/d3-transition/src/transition/tween.js","webpack://muze/./packages/muze-utils/node_modules/d3-transition/src/transition/interpolate.js","webpack://muze/./packages/muze-utils/node_modules/d3-transition/src/transition/remove.js","webpack://muze/./packages/muze-utils/node_modules/d3-transition/src/transition/selection.js","webpack://muze/./packages/muze-utils/node_modules/d3-transition/src/transition/style.js","webpack://muze/./packages/muze-utils/node_modules/d3-transition/src/transition/text.js","webpack://muze/./packages/muze-utils/node_modules/d3-transition/src/transition/index.js","webpack://muze/./packages/muze-utils/node_modules/d3-transition/src/transition/select.js","webpack://muze/./packages/muze-utils/node_modules/d3-transition/src/transition/selectAll.js","webpack://muze/./packages/muze-utils/node_modules/d3-transition/src/transition/filter.js","webpack://muze/./packages/muze-utils/node_modules/d3-transition/src/transition/merge.js","webpack://muze/./packages/muze-utils/node_modules/d3-transition/src/transition/transition.js","webpack://muze/./packages/muze-utils/node_modules/d3-transition/src/transition/on.js","webpack://muze/./packages/muze-utils/node_modules/d3-transition/src/transition/attr.js","webpack://muze/./packages/muze-utils/node_modules/d3-transition/src/transition/attrTween.js","webpack://muze/./packages/muze-utils/node_modules/d3-transition/src/transition/styleTween.js","webpack://muze/./packages/muze-utils/node_modules/d3-transition/src/transition/delay.js","webpack://muze/./packages/muze-utils/node_modules/d3-transition/src/transition/duration.js","webpack://muze/./packages/muze-utils/node_modules/d3-transition/src/transition/ease.js","webpack://muze/./packages/muze-utils/node_modules/d3-transition/src/transition/end.js","webpack://muze/./packages/muze-utils/node_modules/d3-transition/src/selection/transition.js","webpack://muze/./packages/muze-utils/node_modules/d3-transition/src/selection/index.js","webpack://muze/./packages/muze-utils/node_modules/d3-transition/src/selection/interrupt.js","webpack://muze/./packages/muze-utils/node_modules/d3-transition/src/interrupt.js","webpack://muze/./packages/muze-utils/src/renderer-utils.js","webpack://muze/./packages/muze-utils/src/store.js","webpack://muze/./packages/muze-utils/src/lifecycle-manager/event-list.js","webpack://muze/./packages/muze-utils/src/lifecycle-manager/lifecycle-manager.js","webpack://muze/./packages/muze-utils/src/lifecycle-manager/index.js","webpack://muze/./packages/muze-utils/src/lifecycle-manager/helper.js","webpack://muze/./packages/muze-utils/src/index.js","webpack://muze/./packages/muze-firebolt/src/enums/actions.js","webpack://muze/./packages/muze-firebolt/src/enums/selection.js","webpack://muze/./packages/muze-firebolt/src/selection-set/index.js","webpack://muze/./packages/muze-firebolt/src/selection-set/selection-set.js","webpack://muze/./packages/muze-firebolt/src/helper/index.js","webpack://muze/./packages/muze-firebolt/src/firebolt.js","webpack://muze/./packages/muze-firebolt/src/actions/behavioural/generic.js","webpack://muze/./packages/muze-firebolt/src/actions/behavioural/volatile.js","webpack://muze/./packages/muze-firebolt/src/enums/behaviours.js","webpack://muze/./packages/muze-firebolt/src/actions/behavioural/highlight.js","webpack://muze/./packages/muze-firebolt/src/actions/behavioural/brush.js","webpack://muze/./packages/muze-firebolt/src/actions/behavioural/filter.js","webpack://muze/./packages/muze-firebolt/src/actions/behavioural/persistent.js","webpack://muze/./packages/muze-firebolt/src/actions/behavioural/select.js","webpack://muze/./packages/muze-firebolt/src/actions/physical/helpers/drag-action-config.js","webpack://muze/./packages/muze-firebolt/src/actions/physical/helpers/drag-event.js","webpack://muze/./packages/muze-firebolt/src/actions/physical/hover.js","webpack://muze/./packages/muze-firebolt/src/enums/constants.js","webpack://muze/./packages/muze-firebolt/src/actions/physical/helpers/index.js","webpack://muze/./packages/muze-firebolt/src/actions/physical/click.js","webpack://muze/./packages/muze-firebolt/src/actions/physical/index.js","webpack://muze/./packages/muze-firebolt/src/actions/physical/drag.js","webpack://muze/./packages/muze-firebolt/src/actions/physical/longtouch.js","webpack://muze/./packages/muze-firebolt/src/actions/physical/touch-drag.js","webpack://muze/./packages/muze-firebolt/src/enums/side-effects.js","webpack://muze/./packages/muze-firebolt/src/side-effects/generic/props.js","webpack://muze/./packages/muze-firebolt/src/side-effects/generic/index.js","webpack://muze/./packages/muze-firebolt/src/side-effects/generic/generic-sideeffect.js","webpack://muze/./packages/muze-firebolt/src/side-effects/surrogate.js","webpack://muze/./packages/muze-firebolt/src/side-effects/spawnable.js","webpack://muze/./packages/muze-firebolt/src/side-effects/selection-box/helper.js","webpack://muze/./packages/muze-firebolt/src/side-effects/selection-box/index.js","webpack://muze/./packages/muze-firebolt/src/actions/physical/selection-box-drag.js","webpack://muze/./packages/muze-tooltip/src/constants.js","webpack://muze/./packages/muze-tooltip/src/default-config.js","webpack://muze/./packages/muze-tooltip/src/helper.js","webpack://muze/./packages/muze-tooltip/src/content.js","webpack://muze/./packages/muze-tooltip/src/tooltip.js","webpack://muze/./packages/muze-firebolt/src/enums/tooltip-strategies.js","webpack://muze/./packages/muze-firebolt/src/side-effects/tooltip/strategies.js","webpack://muze/./packages/muze-firebolt/src/side-effects/tooltip/index.js","webpack://muze/./packages/muze-firebolt/src/side-effects/helper/index.js","webpack://muze/./packages/muze-firebolt/src/side-effects/crossline/index.js","webpack://muze/./packages/muze-firebolt/src/side-effects/plot-highlighter/strategy.js","webpack://muze/./packages/muze-firebolt/src/side-effects/plot-highlighter/index.js","webpack://muze/./packages/muze-firebolt/src/side-effects/filter/index.js","webpack://muze/./packages/muze-firebolt/src/side-effects/anchors/index.js","webpack://muze/./packages/muze-firebolt/src/side-effects/persistent-anchors.js","webpack://muze/./packages/muze-firebolt/src/side-effects/brush-anchors.js","webpack://muze/./packages/muze-firebolt/src/behaviour-effect-map.js","webpack://muze/./packages/visual-layer/src/enums/constants.js","webpack://muze/./packages/visual-layer/src/layers/area/default-config.js","webpack://muze/./packages/visual-layer/src/simple-layer/simple-layer.js","webpack://muze/./packages/visual-layer/src/base-layer/props.js","webpack://muze/./packages/visual-layer/src/enums/props.js","webpack://muze/./packages/muze-axis/src/enums/axis-orientation.js","webpack://muze/./packages/muze-axis/src/enums/scale-type.js","webpack://muze/./packages/muze-axis/src/enums/constants.js","webpack://muze/./packages/muze-axis/src/scale-creator.js","webpack://muze/./packages/muze-axis/src/cartesian-axis/default-config.js","webpack://muze/./packages/muze-axis/src/axis-renderer.js","webpack://muze/./packages/muze-axis/src/cartesian-axis/skip-ticks.js","webpack://muze/./packages/muze-axis/src/cartesian-axis/space-setter.js","webpack://muze/./packages/muze-axis/src/cartesian-axis/helper.js","webpack://muze/./packages/muze-axis/src/cartesian-axis/props.js","webpack://muze/./packages/muze-axis/src/cartesian-axis/simple-axis.js","webpack://muze/./packages/muze-axis/src/cartesian-axis/interpolators/linear.js","webpack://muze/./packages/muze-axis/src/cartesian-axis/interpolators/log.js","webpack://muze/./packages/muze-axis/src/cartesian-axis/interpolators/pow.js","webpack://muze/./packages/muze-axis/src/cartesian-axis/continous-axis.js","webpack://muze/./packages/muze-axis/src/cartesian-axis/band-axis.js","webpack://muze/./packages/muze-axis/src/cartesian-axis/time-axis.js","webpack://muze/./packages/muze-axis/src/color-axis/color-maps.js","webpack://muze/./packages/muze-axis/src/color-axis/defaults.js","webpack://muze/./packages/muze-axis/src/color-axis/props.js","webpack://muze/./packages/muze-axis/src/helper.js","webpack://muze/./packages/muze-axis/src/color-axis/color-strategy.js","webpack://muze/./packages/muze-axis/src/color-axis/color-axis.js","webpack://muze/./packages/muze-axis/src/size-axis/defaults.js","webpack://muze/./packages/muze-axis/src/size-axis/size-strategy.js","webpack://muze/./packages/muze-axis/src/size-axis/props.js","webpack://muze/./packages/muze-axis/src/size-axis/size-axis.js","webpack://muze/./packages/muze-axis/src/shape-axis/defaults.js","webpack://muze/./packages/muze-axis/src/shape-axis/props.js","webpack://muze/./packages/muze-axis/src/shape-axis/shape-axis.js","webpack://muze/./packages/muze-axis/src/shape-axis/helper.js","webpack://muze/./packages/muze-axis/src/polar-axis/props.js","webpack://muze/./packages/muze-axis/src/polar-axis/angle-axis.js","webpack://muze/./packages/visual-group/src/enums/constants.js","webpack://muze/./packages/muze-axis/src/polar-axis/radius-axis.js","webpack://muze/./packages/muze-axis/src/data-type-scale-map.js","webpack://muze/./packages/transform/src/group-transform/index.js","webpack://muze/./packages/transform/src/identity-transform/index.js","webpack://muze/./packages/transform/src/transform-factory/index.js","webpack://muze/./packages/transform/src/enums/transform-type.js","webpack://muze/./packages/transform/src/stack-transform/index.js","webpack://muze/./packages/visual-layer/src/helpers/index.js","webpack://muze/./packages/visual-layer/src/base-layer/local-options.js","webpack://muze/./packages/visual-layer/src/base-layer/listener-map.js","webpack://muze/./packages/visual-layer/src/base-layer/base-layer.js","webpack://muze/./packages/visual-layer/src/layers/line/renderer.js","webpack://muze/./packages/visual-layer/src/layers/line/default-config.js","webpack://muze/./packages/visual-layer/src/layers/line/line.js","webpack://muze/./packages/visual-layer/src/layers/area/renderer.js","webpack://muze/./packages/visual-layer/src/layers/area/area.js","webpack://muze/./packages/visual-layer/src/layers/arc/default-config.js","webpack://muze/./packages/visual-layer/src/layers/arc/arc.js","webpack://muze/./packages/visual-layer/src/layers/arc/arc-helper.js","webpack://muze/./packages/visual-layer/src/layers/text/renderer.js","webpack://muze/./packages/visual-layer/src/layers/text/default-config.js","webpack://muze/./packages/visual-layer/src/layers/text/text.js","webpack://muze/./packages/visual-layer/src/layers/point/renderer.js","webpack://muze/./packages/visual-layer/src/layers/point/default-config.js","webpack://muze/./packages/visual-layer/src/layers/point/point.js","webpack://muze/./packages/visual-layer/src/layers/bar/renderer.js","webpack://muze/./packages/visual-layer/src/layers/bar/default-config.js","webpack://muze/./packages/visual-layer/src/layers/bar/bar-helper.js","webpack://muze/./packages/visual-layer/src/layers/bar/bar.js","webpack://muze/./packages/visual-layer/src/layers/tick/default-config.js","webpack://muze/./packages/visual-layer/src/layers/tick/renderer.js","webpack://muze/./packages/visual-layer/src/layers/tick/tick.js","webpack://muze/./packages/visual-layer/src/enums/layer-types.js","webpack://muze/./packages/visual-layer/src/layer-factory/layer-factory.js","webpack://muze/./packages/visual-layer/src/layer-factory/index.js","webpack://muze/./packages/visual-layer/src/defaults.js","webpack://muze/./packages/visual-group/src/visual-group/local-options.js","webpack://muze/./packages/visual-group/src/simple-group/simple-group.js","webpack://muze/./packages/visual-unit/src/firebolt/action-behaviour-map.js","webpack://muze/./packages/visual-unit/src/helper/index.js","webpack://muze/./packages/visual-unit/src/enums/constants.js","webpack://muze/./packages/visual-unit/src/helper/grid-lines.js","webpack://muze/./packages/visual-unit/src/listener-map.js","webpack://muze/./packages/visual-unit/src/enums/reactive-props.js","webpack://muze/./packages/visual-unit/src/props.js","webpack://muze/./packages/visual-unit/src/firebolt/payload-generator.js","webpack://muze/./packages/visual-unit/src/firebolt/data-propagator.js","webpack://muze/./packages/visual-unit/src/firebolt/index.js","webpack://muze/./packages/visual-unit/src/firebolt/helper.js","webpack://muze/./packages/visual-unit/src/default-config.js","webpack://muze/./packages/visual-unit/src/local-options.js","webpack://muze/./packages/visual-unit/src/visual-unit.js","webpack://muze/./packages/visual-group/src/variable/variable.js","webpack://muze/./packages/visual-group/src/variable/composed-vars.js","webpack://muze/./packages/visual-group/src/variable/simple-var.js","webpack://muze/./packages/visual-group/src/encoder/field-sanitizer.js","webpack://muze/./packages/visual-group/src/encoder/visual-encoder.js","webpack://muze/./packages/visual-group/src/enums/scale-maps.js","webpack://muze/./packages/visual-group/src/data-type-scale-map.js","webpack://muze/./packages/visual-group/src/encoder/encoder-helper.js","webpack://muze/./packages/visual-group/src/encoder/cartesian-encoder.js","webpack://muze/./packages/visual-group/src/encoder/polar-encoder.js","webpack://muze/./packages/visual-group/src/encoder/retinal-encoder.js","webpack://muze/./packages/visual-group/src/group-helper/group-utils.js","webpack://muze/./packages/visual-group/src/group-helper/matrix-model.js","webpack://muze/./packages/visual-group/src/group-helper/cell-creator.js","webpack://muze/./packages/visual-group/src/group-helper/resolver-props.js","webpack://muze/./packages/visual-group/src/group-helper/matrix-resolver.js","webpack://muze/./packages/visual-group/src/visual-group/value-matrix.js","webpack://muze/./packages/visual-group/src/visual-group/helper.js","webpack://muze/./packages/visual-group/src/visual-group/change-listener.js","webpack://muze/./packages/visual-group/src/visual-group/props.js","webpack://muze/./packages/visual-group/src/visual-group/visual-group.js","webpack://muze/./packages/muze-legend/src/firebolt/behavioural/select.js","webpack://muze/./packages/muze-legend/src/firebolt/action-behaviour-map.js","webpack://muze/./packages/muze-legend/src/firebolt/behaviour-effect-map.js","webpack://muze/./packages/muze-legend/src/enums/behaviours.js","webpack://muze/./packages/muze-legend/src/enums/side-effects.js","webpack://muze/./packages/muze-legend/src/enums/constants.js","webpack://muze/./packages/muze-legend/src/firebolt/helper.js","webpack://muze/./packages/muze-legend/src/firebolt/legend-firebolt.js","webpack://muze/./packages/muze-legend/src/firebolt/physical/drag.js","webpack://muze/./packages/muze-legend/src/firebolt/physical/hover.js","webpack://muze/./packages/muze-legend/src/firebolt/physical/click.js","webpack://muze/./packages/muze-legend/src/firebolt/physical/index.js","webpack://muze/./packages/muze-legend/src/enums/actions.js","webpack://muze/./packages/muze-legend/src/firebolt/physical/selection-box-drag.js","webpack://muze/./packages/muze-legend/src/firebolt/side-effects/selection-box/index.js","webpack://muze/./packages/muze-legend/src/firebolt/side-effects/legend-highlighter/strategies.js","webpack://muze/./packages/muze-legend/src/firebolt/side-effects/legend-highlighter/index.js","webpack://muze/./packages/muze-legend/src/legend/props.js","webpack://muze/./packages/muze-legend/src/legend/defaults.js","webpack://muze/./packages/muze-legend/src/legend/legend-helper.js","webpack://muze/./packages/muze-legend/src/legend/simple-legend.js","webpack://muze/./packages/muze-legend/src/legend/position-config.js","webpack://muze/./packages/muze-legend/src/legend/renderer.js","webpack://muze/./packages/muze-legend/src/legend/discrete-legend.js","webpack://muze/./packages/muze-legend/src/legend/gradient-helper.js","webpack://muze/./packages/muze-legend/src/legend/gradient-legend.js","webpack://muze/./packages/muze-legend/src/legend/step-legend.js","webpack://muze/./packages/muze/src/constants.js","webpack://muze/./packages/muze/src/operators.js","webpack://muze/./packages/muze/src/action-model.js","webpack://muze/./packages/muze/src/canvas/defaults.js","webpack://muze/./packages/muze/src/canvas/local-options.js","webpack://muze/./packages/layout/src/tree-layout/layout-component/layoutComponent.js","webpack://muze/./packages/layout/src/tree-layout/layout-component/dummy-component.js","webpack://muze/./packages/muze/src/defaults.js","webpack://muze/./packages/layout/src/tree-layout/constants/defaults.js","webpack://muze/./packages/layout/src/tree-layout/layout-definition/definition-manager/definitionModel.js","webpack://muze/./packages/layout/src/tree-layout/layout-definition/helper/index.js","webpack://muze/./packages/layout/src/tree-layout/layout-definition/tree/index.js","webpack://muze/./packages/layout/src/tree-layout/layout-definition/layout-model/index.js","webpack://muze/./packages/layout/src/enums/constants.js","webpack://muze/./packages/layout/src/tree-layout/utils/index.js","webpack://muze/./packages/layout/src/tree-layout/data-adapters/data-point.js","webpack://muze/./packages/layout/src/tree-layout/data-adapters/data-parser.js","webpack://muze/./packages/layout/src/tree-layout/data-adapters/helper.js","webpack://muze/./packages/layout/src/tree-layout/data-adapters/html-data.js","webpack://muze/./packages/layout/src/tree-layout/renderers/renderer.js","webpack://muze/./packages/layout/src/tree-layout/renderers/html-renderer.js","webpack://muze/./packages/layout/src/tree-layout/drawing-manager/helper.js","webpack://muze/./packages/layout/src/tree-layout/drawing-manager/index.js","webpack://muze/./packages/layout/src/tree-layout/layout-definition/definition-manager/index.js","webpack://muze/./packages/layout/src/tree-layout/layout-manager/layout-def.js","webpack://muze/./packages/layout/src/tree-layout/layout-manager/helper.js","webpack://muze/./packages/layout/src/tree-layout/layout-manager/index.js","webpack://muze/./packages/muze/src/canvas/helper.js","webpack://muze/./packages/muze/src/options.js","webpack://muze/./packages/layout/src/generic-layout/index.js","webpack://muze/./packages/layout/src/grid-layout/defaults.js","webpack://muze/./packages/layout/src/utils/index.js","webpack://muze/./packages/layout/src/visual-matrix/props.js","webpack://muze/./packages/layout/src/visual-matrix/default-config.js","webpack://muze/./packages/layout/src/visual-matrix/visual-matrix.js","webpack://muze/./packages/layout/src/visual-matrix/row-matrix.js","webpack://muze/./packages/layout/src/visual-matrix/column-matrix.js","webpack://muze/./packages/layout/src/grid-layout/computations.js","webpack://muze/./packages/layout/src/grid-layout/view-info-getter.js","webpack://muze/./packages/layout/src/grid-layout/layout.js","webpack://muze/./packages/layout/src/grid-layout/layout-helper.js","webpack://muze/./packages/layout/src/grid-layout/border-helper.js","webpack://muze/./packages/layout/src/grid-layout/span-maker.js","webpack://muze/./packages/muze/src/transaction-support.js","webpack://muze/./packages/muze/src/canvas/component-resolver.js","webpack://muze/./packages/visual-cell/src/enums/constants.js","webpack://muze/./packages/visual-cell/src/enums/cell-type.js","webpack://muze/./packages/visual-cell/src/simple-cell.js","webpack://muze/./packages/visual-cell/src/enums/defaults.js","webpack://muze/./packages/visual-cell/src/props.js","webpack://muze/./packages/visual-cell/src/axis-cell.js","webpack://muze/./packages/visual-cell/src/blank-cell.js","webpack://muze/./packages/visual-cell/src/text-cell.js","webpack://muze/./packages/visual-cell/src/geom-cell.js","webpack://muze/./packages/visual-cell/src/defaults.js","webpack://muze/./packages/visual-cell/src/constants.js","webpack://muze/./packages/visual-cell/src/cell-registry.js","webpack://muze/./packages/muze/src/canvas/title-maker.js","webpack://muze/./packages/muze/src/canvas/legend-maker.js","webpack://muze/./packages/muze/src/canvas/components/muze-chart-component.js","webpack://muze/./packages/muze/src/canvas/components/headerComponent.js","webpack://muze/./packages/muze/src/canvas/components/legendComponent.js","webpack://muze/./packages/muze/src/canvas/components/scroll-bar-maker/helper.js","webpack://muze/./packages/muze/src/canvas/components/scroll-bar-maker/props.js","webpack://muze/./packages/muze/src/canvas/components/scroll-bar-maker/scroll-maker.js","webpack://muze/./packages/muze/src/canvas/components/scroll-component.js","webpack://muze/./packages/muze/src/canvas/components/scroll-bar-maker/horizontal-scroll-maker.js","webpack://muze/./packages/muze/src/canvas/components/scroll-bar-maker/vertical-scroll-maker.js","webpack://muze/./packages/muze/src/canvas/components/matrix-component.js","webpack://muze/./packages/muze/src/canvas/components/grid-component.js","webpack://muze/./packages/muze/src/enums/constants.js","webpack://muze/./packages/muze/src/canvas/components/message-component.js","webpack://muze/./packages/muze/src/canvas/component-wrapper-maker.js","webpack://muze/./packages/muze/src/canvas/scroll-manager.js","webpack://muze/./packages/muze/src/canvas/layout-maker.js","webpack://muze/./packages/muze/src/canvas/firebolt/group-firebolt.js","webpack://muze/./packages/muze/src/canvas/firebolt/index.js","webpack://muze/./packages/muze/src/canvas/app-state.js","webpack://muze/./packages/muze/src/canvas/canvas.js","webpack://muze/./packages/muze/src/default-registry.js","webpack://muze/./packages/visual-layer/src/layer-registry.js","webpack://muze/./packages/muze/src/muze.js"],"names":["webpackUniversalModuleDefinition","root","factory","exports","module","define","amd","window","installedModules","__webpack_require__","moduleId","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","getDefault","getModuleExports","object","property","prototype","hasOwnProperty","p","s","_typeof2","__WEBPACK_AMD_DEFINE_ARRAY__","undefined","__WEBPACK_AMD_DEFINE_RESULT__","__WEBPACK_AMD_DEFINE_FACTORY__","apply","autoType","number","trim","NaN","isNaN","test","Date","__webpack_exports__","csvParse","csvParseRows","csvFormat","csvFormatBody","csvFormatRows","_dsv__WEBPACK_IMPORTED_MODULE_0__","csv","dsv","parse","parseRows","format","formatBody","formatRows","EOL","EOF","QUOTE","NEWLINE","RETURN","objectConverter","columns","Function","map","JSON","join","inferColumns","rows","columnSet","row","column","pad","width","length","Array","formatDate","date","hours","getUTCHours","minutes","getUTCMinutes","seconds","getUTCSeconds","milliseconds","getUTCMilliseconds","formatYear","year","delimiter","reFormat","RegExp","DELIMITER","text","f","N","I","eof","eol","token","j","preformatBody","formatValue","formatRow","convert","customConverter","concat","_csv__WEBPACK_IMPORTED_MODULE_1__","_tsv__WEBPACK_IMPORTED_MODULE_2__","_autoType__WEBPACK_IMPORTED_MODULE_3__","tsvParse","tsvParseRows","tsvFormat","tsvFormatBody","tsvFormatRows","tsv","PROPAGATION","ROW_ID","DM_DERIVATIVES","JOINS","LOGICAL_OPERATORS","_enums__WEBPACK_IMPORTED_MODULE_0__","SELECT","PROJECT","GROUPBY","COMPOSE","CAL_VAR","BIN","SORT","CROSS","LEFTOUTER","RIGHTOUTER","NATURAL","FULLOUTER","AND","OR","_flat_json__WEBPACK_IMPORTED_MODULE_0__","_dsv_arr__WEBPACK_IMPORTED_MODULE_1__","_dsv_str__WEBPACK_IMPORTED_MODULE_2__","_utils__WEBPACK_IMPORTED_MODULE_3__","Auto","data","schema","options","converters","FlatJSON","DSVStr","DSVArr","dataFormat","detectDataFormat","Error","arr","schemaFields","unitSchema","firstRowHeader","push","columnMajor","field","d3_dsv__WEBPACK_IMPORTED_MODULE_0__","str","fieldSeparator","d3Dsv","_utils__WEBPACK_IMPORTED_MODULE_0__","header","insertionIndex","schemaFieldsName","item","fields","_dsv_arr__WEBPACK_IMPORTED_MODULE_0__","_dsv_str__WEBPACK_IMPORTED_MODULE_1__","_flat_json__WEBPACK_IMPORTED_MODULE_2__","_auto_resolver__WEBPACK_IMPORTED_MODULE_3__","DataModel","_ref","_classCallCheck","this","_len","arguments","args","_key","_this","_possibleConstructorReturn","__proto__","getPrototypeOf","_onPropagation","Relation","order","formatter","withUid","getAllFields","sort","getPartialFieldspace","dataGenerated","_operator__WEBPACK_IMPORTED_MODULE_3__","_rowDiffset","_colIdentifier","columnWise","addUid","uids","fieldNames","e","fmtFieldIdx","reduce","acc","next","idx","elem","fIdx","fmtFn","datum","datumIdx","rowDiffset","ids","diffSets","set","_set$split$map","Number","_set$split$map2","_slicedToArray","start","end","fill","_","fieldsArr","reducers","config","saveChild","groupByString","params","newDataModel","groupBy","persistDerivations","defaultReducer","reducerStore","sortingDetails","rawData","getData","dataInCSVArr","sortedDm","constructor","type","getFieldspace","colData","formattedData","rowsCount","serializedData","rowIdx","colIdx","DataFormat","FLAT_JSON","DSV_STR","DSV_ARR","fieldName","partialFieldspace","_partialFieldspace","cachedValueObjects","_cachedValueObjects","fieldIndex","findIndex","fieldinst","obj","Value","__calculateFieldspace","calculateFieldsConfig","dependency","_this2","sanitizeUnitSchema","replaceVar","fieldsConfig","getFieldsConfig","depVars","retrieveFn","depFieldIndices","fieldSpec","index","clone","fs","suppliedFields","cachedStore","cloneProvider","detachedRoot","computedValues","rowDiffsetIterator","fieldsData","_createFields","createFields","identifiers","addToNameSpace","propConfig","isMutableAction","propagationSourceId","sourceId","payload","rootModel","getRootDataModel","propagationNameSpace","_propagationNameSpace","rootModels","groupByModel","getRootGroupByModel","model","addToPropNamespace","propagateToAllDataModels","assign","propagateImmutableActions","eventName","callback","propModel","_this3","propListeners","fn","measureFieldName","binFieldName","measureField","fieldsObj","_createBinnedFieldDat","createBinnedFieldData","binnedData","bins","binField","_field_creator__WEBPACK_IMPORTED_MODULE_7__","FieldType","DIMENSION","subtype","DimensionSubtype","BINNED","serialize","getSchema","dimensionArr","reducerFn","defConfig","FilteringMode","NORMAL","splitWithSelect","uniqueFields","commonFields","fieldConfig","allFields","normalizedProjFieldSets","fieldSet","getNormalizedProFields","splitWithProject","InvalidAwareTypes","AUTO","CATEGORICAL","TEMPORAL","GEO","MEASURE","INVERSE","ALL","GROUP_BY_FUNCTIONS","SUM","AVG","MIN","MAX","FIRST","LAST","COUNT","STD","_data_format__WEBPACK_IMPORTED_MODULE_0__","_dimension_subtype__WEBPACK_IMPORTED_MODULE_1__","_measure_subtype__WEBPACK_IMPORTED_MODULE_2__","_field_type__WEBPACK_IMPORTED_MODULE_3__","_filtering_mode__WEBPACK_IMPORTED_MODULE_4__","_group_by_functions__WEBPACK_IMPORTED_MODULE_5__","MeasureSubtype","CONTINUOUS","_datamodel__WEBPACK_IMPORTED_MODULE_0__","_operator__WEBPACK_IMPORTED_MODULE_1__","_stats__WEBPACK_IMPORTED_MODULE_2__","_enums__WEBPACK_IMPORTED_MODULE_3__","_utils__WEBPACK_IMPORTED_MODULE_4__","_constants__WEBPACK_IMPORTED_MODULE_5__","_invalid_aware_types__WEBPACK_IMPORTED_MODULE_6__","_package_json__WEBPACK_IMPORTED_MODULE_7__","Operators","compose","bin","select","project","calculateVariable","crossProduct","difference","naturalJoin","leftOuterJoin","rightOuterJoin","fullOuterJoin","union","version","pkg","Stats","DateTimeFormatter","createUnitFieldFromPartial","_fields__WEBPACK_IMPORTED_MODULE_1__","partialField","Continuous","Categorical","Temporal","Binned","dataColumn","headers","headersObj","createUnitField","PartialField","ContinuousParser","CategoricalParser","TemporalParser","BinnedParser","_utils__WEBPACK_IMPORTED_MODULE_1__","fieldStore","createNamespace","fieldArr","dataId","getUniqueId","_cachedFieldsObj","forEach","getMeasure","measureFields","_cachedMeasure","getDimension","dimensionFields","_cachedDimension","Dimension","binsArr","hash","Set","domain","Measure","min","POSITIVE_INFINITY","max","NEGATIVE_INFINITY","Field","_cachedDomain","calculateDataDomain","description","displayName","_field__WEBPACK_IMPORTED_MODULE_0__","_dimension__WEBPACK_IMPORTED_MODULE_1__","_categorical__WEBPACK_IMPORTED_MODULE_2__","_temporal__WEBPACK_IMPORTED_MODULE_3__","_binned__WEBPACK_IMPORTED_MODULE_4__","_measure__WEBPACK_IMPORTED_MODULE_5__","_continuous__WEBPACK_IMPORTED_MODULE_6__","_parsers_field_parser__WEBPACK_IMPORTED_MODULE_7__","_parsers_categorical_parser__WEBPACK_IMPORTED_MODULE_8__","_parsers_temporal_parser__WEBPACK_IMPORTED_MODULE_9__","_parsers_binned_parser__WEBPACK_IMPORTED_MODULE_10__","_parsers_continuous_parser__WEBPACK_IMPORTED_MODULE_11__","_partial_field__WEBPACK_IMPORTED_MODULE_12__","unit","defAggFn","defaultReducerName","numberFormat","formatNumber","FieldParser","val","String","result","matched","parsedVal","parseFloat","_dtf","nativeDate","getNativeDate","parser","_sanitize","_cachedMinDiff","sortedData","filter","a","b","arrLn","minDiff","prevDatum","nextDatum","processedCount","Math","parsedDatum","prepareSelectionData","resp","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_step","_iterator","entries","iterator","done","_ref2","err","prepareJoinData","formattedValue","rawValue","updateFields","_ref3","fieldStoreName","_ref4","colIdentifier","collID","partialFieldMap","newFields","coll","persistCurrentDerivation","operation","_model$_derivation","criteriaFn","_derivation","_toConsumableArray","op","meta","criteria","persistAncestorDerivation","sourceDm","newDm","_newDm$_ancestorDeriv","_ancestorDerivation","selectModeMap","_defineProperty","_selectModeMap","diffIndex","calcDiff","generateRowDiffset","lastInsertedValue","li","selectRowDiffsetIterator","checker","newRowDiffSet","rejRowDiffSet","_selectModeMap$mode$c","shouldSelect","shouldReject","checkerResult","rejectRowDiffset","rowSplitDiffsetIterator","fieldStoreObj","splitRowDiffset","dimensionMap","dimensionSet","keys","selectHelper","clonedDm","selectFn","formattedFieldsData","rawFieldsData","selectorHelperFn","cloneWithAllFields","getKey","len","filterPropagationModel","propModels","fns","filterByMeasure","clonedModel","modelFieldsConfig","dataModel","keyFn","dataObj","dimensions","dLen","indices","measures","fieldsSpace","v","valuesMap","internalValue","present","every","some","_selectHelper","clonedDMs","cloned","derivation","derivationFormula","addDiffsetToClonedDm","selectConfig","cloneWithSelect","cloneConfig","extraCloneDm","setOfRowDiffsets","cloneWithProject","projField","projectionSet","actualProjField","projFieldSet","projFields","extend2","validateUnitSchema","supportedMeasureSubTypes","supportedDimSubTypes","sanitizeAndValidateSchema","resolveFieldName","dataHeader","fieldNameAs","as","updateData","relation","defaultConfig","converterFn","converter","_converterFn","_converterFn2","nameSpace","valueObjects","fieldInSchema","getDerivationArguments","applyExistingOperationOnModel","selectionModel","getDerivations","derivations","_selectionModel","_getDerivationArgumen","propagateIdentifiers","propModelInf","nonTraversingModel","excludeModels","propagate","_children","children","child","find","_parent","getPathToRootModel","path","propagationInf","propagateToSource","propagateInterpolatedValues","criterias","_ref5","actionCriterias","mutableActions","filteredCriteria","filterFn","entry","action","sourceActionCriterias","actionInf","actionConf","models","sourceIdentifiers","rootGroupByModel","inf","propagationModel","filteredModel","getFilteredModel","reverse","immutableActions","filterImmutableAction","criteriaModel","sourceNamespace","normalizedProjField","from","getNumberFormattedVal","require","_value","_invalidAwareValsMap","invalid","NA","nil","NIL","null","NULL","generateBuckets","binSize","buckets","findBucketRange","bucketRanges","leftIdx","rightIdx","midIdx","range","binsCount","_measureField$domain","_measureField$domain2","dMin","dMax","dm","_len2","_key2","_len3","_key3","_len4","_key4","_len5","operations","_key5","currentDM","firstChild","_get_common_schema__WEBPACK_IMPORTED_MODULE_2__","_row_diffset_iterator__WEBPACK_IMPORTED_MODULE_3__","_constants__WEBPACK_IMPORTED_MODULE_4__","_helper__WEBPACK_IMPORTED_MODULE_5__","defaultFilterFn","dm1","dm2","replaceCommonSchema","jointype","applicableFilterFn","dm1FieldStore","dm2FieldStore","dm1FieldStoreName","dm2FieldStoreName","commonSchemaList","getCommonSchema","tmpSchema","rowAdded","rowPosition","ii","tuple","userArg","dm1Fields","dm2Fields","cloneProvider1","cloneProvider2","tupleObj","cellVal","iii","dataBuilder","retObj","reqSorting","tmpDataArr","colIArr","colName","insertInd","sortData","tmpData","_row_diffset_iterator__WEBPACK_IMPORTED_MODULE_2__","_utils_helper__WEBPACK_IMPORTED_MODULE_3__","hashTable","schemaNameArr","dm1FieldStoreFieldObj","dm2FieldStoreFieldObj","isArrEqual","prepareDataHelper","addData","hashData","schemaName","fs1","fs2","retArr","fs1Arr","getFilteredValues","sum","isArray","filteredNumber","curr","avg","totalSum","fnList","filteredValues","first","last","count","std","variance","mean","num","pow","_fnList","getFieldArr","getReducerObj","defReducer","measureName","existingDataModel","sFieldArr","reducerObj","dbName","measureArr","hashMap","rowCount","_bucket_creator__WEBPACK_IMPORTED_MODULE_0__","_compose__WEBPACK_IMPORTED_MODULE_1__","_pure_operators__WEBPACK_IMPORTED_MODULE_2__","_cross_product__WEBPACK_IMPORTED_MODULE_3__","_data_builder__WEBPACK_IMPORTED_MODULE_4__","_difference__WEBPACK_IMPORTED_MODULE_5__","_get_common_schema__WEBPACK_IMPORTED_MODULE_6__","_group_by_function__WEBPACK_IMPORTED_MODULE_7__","_group_by__WEBPACK_IMPORTED_MODULE_8__","_merge_sort__WEBPACK_IMPORTED_MODULE_9__","_natural_join_filter_function__WEBPACK_IMPORTED_MODULE_10__","_natural_join__WEBPACK_IMPORTED_MODULE_11__","_outer_join__WEBPACK_IMPORTED_MODULE_12__","_row_diffset_iterator__WEBPACK_IMPORTED_MODULE_13__","_union__WEBPACK_IMPORTED_MODULE_14__","defSortFn","a1","b1","mergeSort","sortFn","lo","hi","mid","merge","mainArr","auxArr","naturalJoinFilter","_get_common_schema__WEBPACK_IMPORTED_MODULE_0__","commonSchemaArr","retainTuple","_cross_product__WEBPACK_IMPORTED_MODULE_0__","_natural_join_filter_function__WEBPACK_IMPORTED_MODULE_1__","dataModel1","dataModel2","_constants__WEBPACK_IMPORTED_MODULE_1__","_union__WEBPACK_IMPORTED_MODULE_2__","rowDiffArr","diffStr","diffStsArr","resolveStrSortOrder","fDetails","strSortOrder","sortOrder","getSortFn","dataType","sortType","retFunc","groupData","Map","groupedData","fieldVal","createSortingFnArg","groupedDatum","targetFields","targetFieldDetails","arg","label","applyStandardSort","sortMeta","isCallable","sortingFn","makeGroupMapAndSort","depColumns","targetCol","currRow","fVal","nMap","sDetial","groupSortingIdx","standardSortingDetails","groupSortingDetails","applyGroupSort","detail","sortedGroupMap","nextMap","shift","pop","_export__WEBPACK_IMPORTED_MODULE_0__","source","_dataFormat","_fieldStoreName","_fieldspace","joinWith","unionWith","differenceWith","_helper__WEBPACK_IMPORTED_MODULE_2__","_fieldConfig","fieldObj","def","removeChild","sibling","splice","parent","sd","_operator_group_by_function__WEBPACK_IMPORTED_MODULE_0__","store","convertToNativeDate","dtParams","YEAR","MONTH","DAY","HOUR","MINUTE","SECOND","MILLISECOND","defVal","isFinite","parseInt","nVal","toLowerCase","daysDef","short","long","monthsDef","H","extract","defaultNumberParser","toString","getHours","P","M","getMinutes","S","getSeconds","K","getMilliseconds","day","getDay","A","getDate","month","getMonth","B","y","presentDate","presentYear","getFullYear","Y","definitions","getTokenDefinitions","HOUR_12","AMPM_UPPERCASE","AMPM_LOWERCASE","SHORT_DAY","LONG_DAY","DAY_OF_MONTH","DAY_OF_MONTH_CONSTANT_WIDTH","SHORT_MONTH","LONG_MONTH","MONTH_OF_YEAR","SHORT_YEAR","LONG_YEAR","defaultResolver","targetParam","hourFormat24","hourFormat12","ampmLower","ampmUpper","amOrpm","isPM","tokenPrefix","TOKEN_PREFIX","tokenLiterals","occurrence","forwardChar","nDate","formattedStr","formattedVal","dateTimeStamp","tokenResolver","extractTokenValue","dtParamSeq","DATETIME_PARAM_SEQUENCE","noBreak","dtParamArr","resolverKey","resolverParams","resolverFn","param","resolvedVal","checkIfOnlyYear","tokenObj","lastOccurrenceIndex","occObj","occIndex","targetText","regexFormat","tokenArr","occurrenceLength","extractValues","match","OBJECTSTRING","objectToStrFn","objectToStr","arrayToStr","checkCyclicRef","parentArr","bIndex","obj1","obj2","skipUndef","_typeof","tgtArr","srcArr","srcVal","tgtVal","cRef","isObject","isString","uniqueValues","getTime","arr1","arr2","_date_time_formatter__WEBPACK_IMPORTED_MODULE_0__","_column_major__WEBPACK_IMPORTED_MODULE_1__","_domain_generator__WEBPACK_IMPORTED_MODULE_2__","_extend2__WEBPACK_IMPORTED_MODULE_3__","_helper__WEBPACK_IMPORTED_MODULE_4__","ReducerStore","reducer","__unregister","has","getStore","configurable","writable","_formattedValue","_internalValue","webpackPolyfill","deprecate","paths","_interopRequireDefault","default","_lib2","_containerManager2","slLib","init","doc","win","document","round","htmlSplCharSpace"," ","documentSupport","getDocumentSupport","SVG_BBOX_CORRECTION","isWebKit","SmartLabelManager","id","container","useEllipses","wrapper","prop","prevInstance","isBrowserLess","dispose","maxCacheLimit","maxDefaultCacheLimit","getElementById","createContainer","innerHTML","testStrAvg","isHeadLess","isIE","offsetHeight","offsetWidth","parentContainerStyle","style","parentContainer","_containerManager","_showNoEllipses","_init","setStyle","textToLines","smartlabel","lines","split","_calCharDimWithCache","calculateDifference","size","csArr","tw","twi","cachedStyle","asymmetricDifference","maxAdvancedCacheLimit","_container","cache","_advancedCache","advancedCacheKey","_advancedCacheKey","cacheName","fontSize","fontFamily","fontWeight","fontStyle","cacheInitName","repeat","height","_getWidthFn","contObj","_containerObj","svgText","bbox","textContent","getBBox","_styleNotSet","setLineHeight","sCont","node","_context","context","_cache","charCache","_lineHeight","lineHeight","useEllipsesOnOverflow","getSmartText","maxWidth","maxHeight","noWrap","trimStr","tempArr","tmpText","maxWidthWithEll","toolText","oriWidth","oriHeight","newCharIndex","nearestChar","tempChar","getWidth","initialLeft","initialTop","getOriSizeImproveObj","spanArr","x","minWidth","chr","elemRightMostPoint","elemLowestPoint","lastBR","removeFromIndex","removeFromIndexForEllipses","hasHTMLTag","maxStrWidth","lastDash","lastSpace","lastIndexBroken","strWidth","strHeight","oriTextArr","ellipsesStr","ellipsesWidth","dotWidth","characterArr","dashIndex","spaceIndex","lastLineBreak","fastTrim","ws","replace","charAt","slice","smartLabel","oriTextWidth","oriTextHeight","oriText","isTruncated","xmlTagRegEx","ltgtRegex","getOriSize","substr","getNearestBreakIndex","detailObj","tooltext","lastIndexOf","spanAdditionRegx","spanAdditionReplacer","classNameWithTag","classNameWithTagBR","childRetriverFn","childRetriverString","noClassTesting","classNameReg","className","spaceIdx","dashIdx","offsetLeft","offsetTop","parentNode","insertBefore","createElement","classNameBrReg","spanRemovalRegx","error","detailedCalculationFlag","textArr","letter","lSize","cumulativeSize","indiSizeStore","lib","userAgent","navigator","ceil","floor","clsNameSpace","containerClass","brReplaceRegex","position","top","whiteSpace","padding","overflow","supportedStyle","font","font-family","font-weight","font-size","line-height","font-style","getElementsByClassName","opera","hasSVG","Boolean","SVGAngle","implementation","hasFeature","containerParent","body","appendChild","setAttribute","getElementsByTagName","sl","charLen","increment","avgWidth","styleObj","fSize","makeEntry","sCon","_set","set1","set2","filteredKeys","s1","s2","ForeignSet","isSimpleObject","reqAnimFrame","requestAnimationFrame","webkitRequestAnimationFrame","mozRequestAnimationFrame","oRequestAnimationFrame","msRequestAnimationFrame","setTimeout","getTimeBasedId","__lastTime","__id","flat","res","scheduler","onFinishCallback","queue","animationFrame","listeners","tempQ","unique","fetch","namedNode","qualifiedName","seed","fetchAggregator","dependencies","getUpstreamNodes","list","rec","qname","placedIndex","preArr","postArr","outgoingEdges","resolver","accumulate","nodeDetails","identity","CustomResolver","utils_classCallCheck","dep","_dep","graph_node_classCallCheck","edges","_seed","requireResolve","retriever","history","electricEdges","_edges","retrieveDetails","edge","head","hist","TypeError","electric_node_classCallCheck","nextFrame","currentFrame","lstnrs","nodes","nFn","qualifiedNodeMap","graph_node","_wholeSet","_propagate","propagationOverride","currentFrameListeners","nextFrameListeners","_schedule","flushTarget","flush","mount","resolveReqList","objn","perv","addDependencies","_node","getDependencies","getResolvedList","resolve","props","fnSpec","eNode","electric_node","addEdges","addElectricNode","changedSet","upstreamNodes","upstreamNode","append","__execUniqueElectricEdges","cfLstnrs","nfLstnrs","toArray","repeatHead","resetPropagationOverride","qnames","_this4","update","resolved","resolveDependencyOrder","resolveMap","neighbour","isRoot","model_classCallCheck","_graph","graph","_lockFlag","_reqQ","mountPoint","_addPropInModel","calculationConfig","customResolver","varName","fetchFn","_customResolver","createNodesFrom","instantCall","_graph$stopPropagatio","propsArr","unsub","createElectricNodeOf","stopPropagation","setPropagationOverride","resetNodeValue","_graph$stopPropagatio2","setProp","getNodeValue","getNodeFromQualifiedName","Model","Muze","ContainerManager","maxContainers","svg","containers","rootNode","createElementNS","setAttributeNS","svgRoot","diff","containerObj","keyStr","prev","removeContainer","addContainer","avgCharWidth","display","cObj","ascending","bisector","compare","ascendingComparator","left","right","ascendingBisect","bisectRight","array","src_range","stop","step","e10","sqrt","e5","e2","src_ticks","ticks","tickIncrement","power","log","LN10","tickStep","step0","abs","step1","quantile","values","valueof","i0","value0","each","remove","clear","empty","src_nest","sortValues","rollup","nest","sortKeys","depth","createResult","setResult","keyValue","valuesByKey","createObject","setObject","createMap","setMap","sortKey","k","proto","add","implicit","ordinal","unknown","scale","copy","band","bandwidth","ordinalRange","paddingInner","paddingOuter","align","rescale","sequence","rangeRound","invertExtent","r0","r1","hiIndex","getClosestIndexOf","invert","side","highVal","d1","low","high","extend","definition","Color","reI","reN","reP","reHex3","reHex6","reRgbInteger","reRgbPercent","reRgbaInteger","reRgbaPercent","reHslPercent","reHslaPercent","named","aliceblue","antiquewhite","aqua","aquamarine","azure","beige","bisque","black","blanchedalmond","blue","blueviolet","brown","burlywood","cadetblue","chartreuse","chocolate","coral","cornflowerblue","cornsilk","crimson","cyan","darkblue","darkcyan","darkgoldenrod","darkgray","darkgreen","darkgrey","darkkhaki","darkmagenta","darkolivegreen","darkorange","darkorchid","darkred","darksalmon","darkseagreen","darkslateblue","darkslategray","darkslategrey","darkturquoise","darkviolet","deeppink","deepskyblue","dimgray","dimgrey","dodgerblue","firebrick","floralwhite","forestgreen","fuchsia","gainsboro","ghostwhite","gold","goldenrod","gray","green","greenyellow","grey","honeydew","hotpink","indianred","indigo","ivory","khaki","lavender","lavenderblush","lawngreen","lemonchiffon","lightblue","lightcoral","lightcyan","lightgoldenrodyellow","lightgray","lightgreen","lightgrey","lightpink","lightsalmon","lightseagreen","lightskyblue","lightslategray","lightslategrey","lightsteelblue","lightyellow","lime","limegreen","linen","magenta","maroon","mediumaquamarine","mediumblue","mediumorchid","mediumpurple","mediumseagreen","mediumslateblue","mediumspringgreen","mediumturquoise","mediumvioletred","midnightblue","mintcream","mistyrose","moccasin","navajowhite","navy","oldlace","olive","olivedrab","orange","orangered","orchid","palegoldenrod","palegreen","paleturquoise","palevioletred","papayawhip","peachpuff","peru","pink","plum","powderblue","purple","rebeccapurple","red","rosybrown","royalblue","saddlebrown","salmon","sandybrown","seagreen","seashell","sienna","silver","skyblue","slateblue","slategray","slategrey","snow","springgreen","steelblue","tan","teal","thistle","tomato","turquoise","violet","wheat","white","whitesmoke","yellow","yellowgreen","color","exec","Rgb","rgbn","rgba","hsla","g","rgbConvert","rgb","opacity","hex","h","Hsl","hsl","hslConvert","hsl2rgb","m1","m2","displayable","brighter","darker","deg2rad","PI","rad2deg","Xn","Yn","Zn","t0","t1","t2","t3","labConvert","Lab","Hcl","cos","sin","z","rgb2lrgb","xyz2lab","lab","lab2xyz","lrgb2rgb","hclConvert","atan2","hcl","C","D","E","ED","EB","BC_DA","cubehelix","cubehelixConvert","Cubehelix","bl","basis","v0","v1","v2","v3","cosh","sinh","src_constant","linear","hue","constant","gamma","nogamma","exponential","src_rgb","rgbGamma","colorRgb","rgbSpline","spline","colors","rgbBasis","src_number","reA","reB","src_string","am","bm","bs","bi","lastIndex","q","one","zero","cssNode","cssRoot","cssView","svgNode","src_value","value_typeof","string","setTime","nb","na","valueOf","src_round","degrees","translateX","translateY","rotate","skewX","scaleX","scaleY","decompose","atan","interpolateTransform","pxComma","pxParen","degParen","translate","xa","ya","xb","yb","interpolateTransformCss","parseCss","documentElement","defaultView","transform","getComputedStyle","getPropertyValue","interpolateTransformSvg","parseSvg","baseVal","consolidate","matrix","SQRT2","colorHsl","hslLong","colorHcl","cubehelixGamma","colorCubehelix","cubehelixLong","piecewise","interpolate","d3_scale_src_constant","d3_scale_src_number","deinterpolateLinear","bimap","deinterpolate","reinterpolate","d0","polymap","bisect","target","clamp","continuous","output","input","interpolateValue","deinterpolateClamp","reinterpolateClamp","interpolateRound","formatDecimal","toExponential","indexOf","coefficient","src_exponent","re","formatSpecifier","specifier","FormatSpecifier","sign","symbol","comma","precision","prefixExponent","locale","formatPrefix","formatTrim","out","i1","formatRounded","exponent","formatTypes","%","toFixed","toPrecision","X","toUpperCase","src_identity","prefixes","src_locale","group","grouping","thousands","substring","formatGroup","currency","decimal","numerals","formatNumerals","percent","newFormat","prefix","suffix","formatType","maybeSuffix","valuePrefix","valueSuffix","valueNegative","charCodeAt","Infinity","defaultLocale","formatLocale","src_tickFormat","precisionPrefix","precisionRound","precisionFixed","linearish","tickFormat","nice","interval","x0","x1","pow10","powp","base","exp","logp","log10","log2","reflect","logs","pows","u","raise","thresholds","threshold","quantiles","quantize","newInterval","floori","offseti","offset","previous","millisecond","durationMinute","durationWeek","second","minute","hour","setHours","setDate","getTimezoneOffset","weekday","sunday","monday","tuesday","wednesday","thursday","friday","saturday","setMonth","setFullYear","utcMinute","setUTCSeconds","utcHour","setUTCMinutes","utcDay","setUTCHours","setUTCDate","getUTCDate","utcWeekday","getUTCDay","utcSunday","utcMonday","utcTuesday","utcWednesday","utcThursday","utcFriday","utcSaturday","utcMonth","setUTCMonth","getUTCMonth","getUTCFullYear","utcYear","setUTCFullYear","localDate","L","utcDate","UTC","newYear","timeFormat","utcFormat","utcParse","pads","-","0","numberRe","percentRe","requoteRe","requote","formatRe","names","formatLookup","parseWeekdayNumberSunday","w","parseWeekdayNumberMonday","parseWeekNumberSunday","U","parseWeekNumberISO","V","parseWeekNumberMonday","W","parseFullYear","parseYear","parseZone","Z","parseMonthNumber","parseDayOfMonth","parseDayOfYear","parseHour24","parseMinutes","parseSeconds","parseMilliseconds","parseMicroseconds","parseLiteralPercent","parseUnixTimestamp","Q","parseUnixTimestampSeconds","formatDayOfMonth","formatHour24","formatHour12","formatDayOfYear","timeDay","timeYear","formatMilliseconds","formatMicroseconds","formatMonthNumber","formatMinutes","formatSeconds","formatWeekdayNumberMonday","formatWeekNumberSunday","timeSunday","formatWeekNumberISO","timeThursday","formatWeekdayNumberSunday","formatWeekNumberMonday","timeMonday","formatFullYear","formatZone","formatUTCDayOfMonth","formatUTCHour24","formatUTCHour12","formatUTCDayOfYear","formatUTCMilliseconds","formatUTCMicroseconds","formatUTCMonthNumber","formatUTCMinutes","formatUTCSeconds","formatUTCWeekdayNumberMonday","dow","formatUTCWeekNumberSunday","formatUTCWeekNumberISO","formatUTCWeekdayNumberSunday","formatUTCWeekNumberMonday","formatUTCYear","formatUTCFullYear","formatUTCZone","formatLiteralPercent","formatUnixTimestamp","formatUnixTimestampSeconds","locale_dateTime","dateTime","locale_date","locale_time","time","locale_periods","periods","locale_weekdays","days","locale_shortWeekdays","shortDays","locale_months","months","locale_shortMonths","shortMonths","periodRe","periodLookup","weekdayRe","weekdayLookup","shortWeekdayRe","shortWeekdayLookup","monthRe","monthLookup","shortMonthRe","shortMonthLookup","formats","formatShortWeekday","formatWeekday","formatShortMonth","formatMonth","formatPeriod","utcFormats","formatUTCShortWeekday","formatUTCWeekday","formatUTCShortMonth","formatUTCMonth","formatUTCPeriod","parses","parseShortWeekday","parseWeekday","parseShortMonth","parseMonth","parseLocaleDateTime","parseSpecifier","parsePeriod","parseLocaleDate","parseLocaleTime","newParse","newDate","week","toISOString","durationSecond","durationHour","durationDay","durationMonth","durationYear","calendar","formatMillisecond","formatSecond","formatMinute","formatHour","formatDay","formatWeek","tickIntervals","tickInterval","src_time","timeMonth","timeWeek","timeHour","timeMinute","timeSecond","timeMillisecond","src_colors","interpolateCubehelixLong","ramp","sequential","interpolator","d3_scale_chromatic_src_colors","src_ramp","scheme","interpolateRgbBasis","warm","cool","sequential_multi_rainbow","ts","magma","inferno","plasma","UNIT_GLOBAL_NAMESPACE","UNIT_LOCAL_NAMESPACE","LAYER_LOCAL_NAMESPACE","LAYER_GLOBAL_NAMESPACE","GROUP_GLOBAL_NAMESPACE","GROUP_LOCAL_NAMESPACE","CANVAS_LOCAL_NAMESPACE","CANVAS_GLOBAL_NAMESPACE","ReservedFields","CommonProps","ACTION_INF","ON_LAYER_DRAW","MATRIX_CREATED","COORD_TYPES","DATA_TYPE","d3_axis_src_identity","bottom","epsilon","entering","__axis","axis","orient","tickArguments","tickValues","tickTransform","tickSizeInner","tickSizeOuter","tickPadding","spacing","range0","range1","center","selection","selectAll","tick","tickExit","exit","tickEnter","enter","attr","line","insert","transition","getAttribute","tickSize","pi","tau","tauEpsilon","Path","_x0","_y0","_x1","_y1","moveTo","closePath","lineTo","quadraticCurveTo","y1","bezierCurveTo","x2","y2","arcTo","y0","x21","y21","x01","y01","l01_2","x20","y20","l21_2","l20_2","l21","l01","acos","t01","t21","arc","a0","ccw","dx","dy","cw","da","rect","d3_shape_src_constant","halfPi","asin","arcInnerRadius","innerRadius","arcOuterRadius","outerRadius","arcStartAngle","startAngle","arcEndAngle","endAngle","arcPadAngle","padAngle","cornerTangents","rc","ox","oy","x11","y11","x10","y10","x00","y00","d2","cx0","cy0","cx1","cy1","dx0","dy0","dx1","dy1","cx","cy","Linear","areaStart","_line","areaEnd","lineStart","_point","lineEnd","point","curve_linear","src_line","pointX","pointY","defined","curve","curveLinear","buffer","defined0","src_area","area","x0z","y0z","arealine","lineX0","lineY0","lineY1","lineX1","src_descending","d3_shape_src_identity","curveRadial","Radial","_curve","radial","symbol_circle","draw","symbol_cross","tan30","tan30_2","diamond","kr","kx","ky","star","square","sqrt3","triangle","wye","noop","that","Basis","BasisClosed","_x2","_x3","_x4","_y2","_y3","_y4","BasisOpen","Bundle","beta","_basis","_beta","_x","_y","custom","bundle","_k","Cardinal","tension","cardinal","CardinalClosed","_x5","_y5","CardinalOpen","_l01_a","_l01_2a","_l12_a","_l12_2a","_l23_a","_l23_2a","CatmullRom","alpha","_alpha","x23","y23","curve_catmullRom","catmullRom","CatmullRomClosed","CatmullRomOpen","LinearClosed","slope3","h0","h1","s0","slope2","MonotoneX","MonotoneY","ReflectContext","Natural","controlPoints","_t0","px","py","Step","_t","curve_step","stepBefore","stepAfter","none","series","order_none","stackValue","order_ascending","sums","cubicInOut","polyIn","polyOut","polyInOut","b2","b3","b4","b5","b6","b7","b8","b9","b0","bounceOut","backIn","overshoot","backOut","backInOut","elasticOut","elasticIn","amplitude","period","d3_voronoi_src_constant","elasticInOut","RedBlackTree","RedBlackNode","R","RedBlackRotateLeft","tree","RedBlackRotateRight","RedBlackFirst","after","grandpa","uncle","createEdge","setEdgeEnd","cells","halfedges","createBorderEdge","vertex","clipEdge","ax","ay","connectEdge","fm","fb","lx","ly","rx","ry","fx","fy","cellHalfedgeAngle","cell","site","va","vb","cellHalfedgeStart","cellHalfedgeEnd","firstCircle","circlePool","attachCircle","lArc","rArc","lSite","cSite","rSite","bx","by","epsilon2","ha","hc","circle","Circle","before","circles","detachCircle","beachPool","createBeach","beach","Beach","detachBeach","beaches","removeBeach","disappearing","unshift","iArc","nArcs","addBeach","dxl","dxr","directrix","leftBreakPoint","rightBreakPoint","createCell","newArc","hb","rfocx","rfocy","pby2","lfocx","lfocy","plby2","hl","aby2","triangleArea","lexicographic","Diagram","sites","extent","sortCellHalfedges","clipEdges","clipCells","iCell","iHalfedge","nHalfedges","startX","startY","endX","endY","nCells","cover","dc","v00","v01","v11","v10","polygons","polygon","triangles","e1","links","radius","_found","vx","vy","src_voronoi","voronoi","Selection","idGetter","_dataObjects","_updateData","_enterData","_exitData","_idGetter","newData","entryData","exitdata","tempMap","duplicateData","updatedData","newSelection","dataObjects","defaultValue","_mode","mergedObjects","mergedData","newdata","sortSel","sortSelection","kA","kB","objects","STRING","FUNCTION","HTMLElement","common_utils_typeof","random","sanitizeIP","typeObj","nonExistentKeys","checkExistence","getMax","common_utils_toConsumableArray","getMin","getDomainFromData","fieldType","domArr","_loop","_fields","field0","field1","arr0","firstMin","secondMin","firstMax","secondMax","sanitizeDomainWhenEqual","unionDomain","domains","dom","symbolFns","symbolCircle","cross","symbolCross","symbolDiamond","symbolSquare","symbolStar","symbolWye","symbolTriangle","easeFns","cubic","easeCubic","bounce","easeBounce","elastic","easeElastic","back","easeBack","poly","easePoly","circleInOut","getNearestValue","filterData","getWindow","getQualifiedClassName","cancelAnimationFrame","cls","objectIterator","Voronoi","common_utils_classCallCheck","_voronoi","_voronoiFn","getObjProp","intSanitizer","generateGetterSetters","propInfo","_propInfo$","sanitization","preset","onset","typeChecker","isEqual","oldVal","newVal","arraysEqual","is","ERROR_MSG","INTERFACE_IMPL","mergeRecursive","sink","createSelection","sel","appendObj","idFn","dataSelect","mergedSelection","exitSelection","getObjects","inst","numberInterpolator","interpolateNumber","piecewiseInterpolator","rgbToHsv","detectColor","col","getDataModelFromRange","selFields","selFn","getDataModelFromIdentifiers","filteredDataModel","dataArr","filteredSchema","include","propField","isValidValue","getSymbol","stackOrders","_stackOrders","stackOrderNone","stackOrderAscending","stackOffsets","_stackOffsets","yp","yn","stackOffsetNone","si","sij0","s3","sk","stack","orderNone","offsetNone","oz","kz","sz","sij","ki","d3Stack","nestCollection","nestFn","pathInterpolators","curveStepAfter","curveStepBefore","curveStep","curveCatmullRom","Symbols","axisLeft","axisRight","axisTop","axisBottom","pie","descending","arcs","pa","cornerRadius","padRadius","a01","a11","a00","a10","da0","da1","ap","rp","rc0","rc1","p0","p1","oc","intersect","x3","y3","x32","y32","kc","lc","centroid","Scales","scaleBand","getSmallestDiff","points","timeFormats","timeDurations","formatTemporal","nearestInterval","getNearestInterval","formatAs","getValueParser","retrieveNearestGroupByReducers","measureFieldNames","filteredReducers","getAncestorDerivations","nearestReducers","derv","retrieveFieldDisplayName","sortOrderMap","_sortOrderMap","firstVal","secondVal","localeCompare","_accessors","fn1","fn2","xhtml","src_namespaces","xlink","xml","xmlns","src_namespace","namespaces","space","local","creator","fullname","namespace","creatorFixed","ownerDocument","creatorInherit","uri","namespaceURI","src_selector","selector","querySelector","selectorAll","querySelectorAll","matcher","matches","sparse","EnterNode","_next","__data__","keyPrefix","bindIndex","groupLength","dataLength","bindKey","nodeByKeyValue","keyValues","src_window","styleValue","classArray","classList","ClassList","_names","classedAdd","classedRemove","contains","textRemove","htmlRemove","nextSibling","lower","previousSibling","constantNull","selection_cloneShallow","cloneNode","selection_cloneDeep","filterEvents","event","mouseenter","mouseleave","filterContextListener","listener","contextListener","related","relatedTarget","compareDocumentPosition","event1","event0","onRemove","typename","on","__on","removeEventListener","capture","onAdd","wrap","addEventListener","customEvent","sourceEvent","dispatchEvent","CustomEvent","createEvent","initEvent","bubbles","cancelable","groups","parents","_groups","_parents","subgroups","subnode","subgroup","enterGroup","updateGroup","_enter","_exit","onenter","onupdate","onexit","groups0","groups1","m0","merges","group0","group1","compareNode","sortgroups","sortgroup","getAttributeNS","attrRemoveNS","removeAttributeNS","attrRemove","removeAttribute","attrFunctionNS","attrFunction","attrConstantNS","attrConstant","priority","styleRemove","removeProperty","styleFunction","setProperty","styleConstant","propertyRemove","propertyFunction","propertyConstant","classed","classedFunction","classedTrue","classedFalse","textFunction","textConstant","html","htmlFunction","htmlConstant","deep","typenames","parseTypenames","dispatch","dispatchFunction","dispatchConstant","src_select","nextId","Local","current","src_point","ownerSVGElement","createSVGPoint","clientX","clientY","matrixTransform","getScreenCTM","inverse","getBoundingClientRect","clientLeft","clientTop","mouse","changedTouches","src_touch","touches","identifier","touch","Dispatch","T","types","nopropagation","stopImmediatePropagation","noevent","preventDefault","nodrag","view","__noselect","MozUserSelect","d3_drag_src_constant","DragEvent","subject","active","defaultFilter","button","defaultContainer","defaultSubject","defaultTouchable","src_drag","mousedownx","mousedowny","mousemoving","touchending","touchable","gestures","clickDistance2","drag","mousedowned","touchstarted","touchmoved","touchended","gesture","beforestart","mousemoved","mouseupped","yesdrag","noclick","clearTimeout","sublisteners","clickDistance","taskHead","taskTail","frame","timeout","pokeDelay","clockLast","clockNow","clockSkew","clock","performance","timer_typeof","now","setFrame","clearNow","Timer","_call","_time","timer","delay","restart","wake","timerFlush","nap","sleep","poke","clearInterval","setInterval","src_timeout","elapsed","emptyOn","emptyTween","CREATED","SCHEDULED","STARTING","STARTED","RUNNING","ENDING","ENDED","transition_schedule","timing","schedules","__transition","self","tween","state","duration","ease","schedule","tweenValue","_id","transition_interpolate","interpolateRgb","interpolateString","Transition","_name","newId","selection_prototype","inherit","id0","id1","onFunction","on0","on1","sit","attrTween","string00","string10","interpolate0","string0","string1","value1","attrTweenNS","attrInterpolateNS","attrInterpolate","styleTween","styleNull","styleMaybeRemove","listener0","styleInterpolate","removeFunction","tweenRemove","tween0","tween1","tweenFunction","delayFunction","delayConstant","durationFunction","durationConstant","easeConstant","Promise","reject","cancel","interrupt","defaultTiming","easeCubicInOut","selectElement","element","makeElement","elemType","callbacks","SVGElement","selectorVal","selectorType","actualSelector","enterSel","mergeSel","exitSel","applyStyle","setElementAttrs","attrs","setAttrs","setStyles","styles","createElements","getClientPoint","pos","clientPoint","getEvent","d3event","getD3Drag","d3drag","getSmartComputedStyle","css","textEl","mandatoryStyle","fill-opacity","renderer_utils_typeof","computedStyle","styleForSmartLabel","hasTouch","initProp","fetchPropValues","propNames","deps","setContexts","contexts","propObj","contextMap","depProps","registerListener","propList","callBack","_options$","namespaceInf","callbackFn","namespaceVal","commits","_savedCommits","propListenerMap","_propListenerMap","listenersObj","_registeredListeners","_contextMap","contextsObj","commitsObj","subNamespaces","propDeps","nm","fnInf","store_toConsumableArray","registerPropInMaps","registeredListeners","subNamespace","allProps","_fnCount","addListenerToNamespace","_listeners","namespaceListeners","listenerTypes","removePropValue","propInf","sns","Store","store_classCallCheck","_commits","_queuedProps","_locked","store_createClass","lockModel","lock","unlockModel","unlock","lockCommits","locked","unlockCommits","queuedProps","_params","store_slicedToArray","propName","_params2","commit","addSubNamespace","propFns","nsObj","retrieveNamespaces","disableListener","sanitizedVal","savedCommits","disabled","registerChangeListener","registerImmediateListener","computed","calculatedProp","_this$model","unsubscribeAll","unsubscribe","listenersMap","_iteratorNormalCompletion2","_didIteratorError2","_iteratorError2","_step2","_iterator2","removeSubNamespace","listenerMap","snsMap","transactor","holder","conf","stateProps","nameSpaceProp","nsProp","compareTo","paramsLen","prevVal","spreadParams","typeCheck","typeExpected","oldValues","events","EVENT_LIST","composition","resolveFn","notification","hasOwn","LifeCycleManager","lifecycle_manager_classCallCheck","_eventList","_promises","_notifiers","_lifeCycles","_unreleasedLifeCycles","_boot","_preparePromises","promise","_makeNotifierPromise","createPromise","then","prm","formalName","client","_releasePromisesFromCache","_notify","stage","_resolvePromise","retrieve","_callLifeCycleCallback","_cachePromise","_resetTargetPromise","lifeCycles","DRAG","HOVER","SELECTIONDRAG","CLICK","LONGTOUCH","TOUCHDRAG","ALL_ACTIONS","SELECTION_NEW_ENTRY","SELECTION_NEW_EXIT","SELECTION_NULL","SELECTION_OLD_ENTRY","SELECTION_OLD_EXIT","SelectionSet","completeSet","_volatile","selection_set_classCallCheck","_completeSetCount","_lockedSelection","_resetted","entrySet","exitSet","lockedSel","addSet","removeSet","updateSet","changeSideEffectAvailability","toEnable","sideEffects","change","enable","disable","getMergedSet","helper_toConsumableArray","conditionsMap","mergedEnter","SELECTION","mergedExit","complete","getSetInfo","selectionSet","propagationData","resetted","getModelFromSet","conditions","condition","Firebolt","actions","behaviourEffectMap","firebolt_classCallCheck","_sideEffectDefinitions","_sideEffects","_propagationInf","_actions","behavioural","physical","_selectionSet","_volatileSelectionSet","_propagationFields","_sourceSideEffects","_propagationBehaviourMap","_sourceBehaviours","_actionBehaviourMap","_config","_behaviourEffectMap","_entryExitSet","_actionHistory","_queuedSideEffects","mapSideEffects","registerBehaviouralActions","registerSideEffects","registerPhysicalBehaviouralMap","physicalBehaviouralMap","registerPhysicalActions","setSideEffectConfig","sideEffect","sideEffectConf","behEffectMap","preventDefaultActions","effectNames","effects","firebolt_toConsumableArray","behaviours","initializeBehaviouralActions","dispatchableBehaviours","Action","prepareSelectionSets","initializeSideEffects","sideEffectStore","actionHistory","queuedSideEffects","combinedSet","unionSets","behaviour","entryExitSet","existingModel","aggFns","effect","firebolt_typeof","sideEffectInstance","isEnabled","mutates","dispatchSideEffect","propagationInfo","getSideEffects","propagationSelectionSet","getPropagationSelectionSet","shouldApplySideEffects","sourceSelectionSet","applicableSideEffects","getApplicableSideEffects","applySideEffects","behaviourConditions","sideEffectConditions","physicalAction","actionBehaviourMap","behaviourMap","mapActionsAndBehaviour","onDataModelPropagation","propValue","dispatchBehaviour","uniqueIds","behaviouralActions","volatileSelectionSet","sideEffectDefinitions","sideEffectsMap","SideEffect","initedActions","initializePhysicalActions","physicalActions","phyAction","initedPhysicalActions","mapObj","getDefaultTargetContainer","bindActionWithBehaviour","targets","behaviourList","entryRowIds","getUids","propagationSource","applicableSelectionSets","GenericBehaviour","firebolt","generic_classCallCheck","_enabled","selectionSets","getSelectionSets","_this$firebolt$getAdd","getAddSetFromCriteria","getPropagationInf","setSelectionSet","getEntryExitSet","_selectionSet$getSets","getSets","setConfig","getFullData","getSourceFields","VolatileBehaviour","reset","existingAddSet","updateExit","getCompleteSet","BRUSH","HIGHLIGHT","TOOLTIP","FILTER","HighlightBehaviour","BrushBehaviour","BEHAVIOURNAMES","FilterBehaviour","PersistentBehaviour","updateEntry","mergedExitSet","completeSetCount","SelectBehaviour","getDragActionConfig","sourceInfo","axes","xAxis","yAxis","axisFields","xField","getMembers","yField","xFieldType","yFieldType","stPos","startPos","endPos","dragDim","isXDimension","isYDimension","xRange","yRange","selectedDomains","rangeObj","xdom","ydom","snap","getNearestRange","attachDragEvent","targetEl","drawingInf","touchStart","d3Drag","getDrawingContext","getSourceInfo","beh","dragEnd","hover","interaction","tooltip","svgContainer","nearestPoint","getNearestPoint","getAllPoints","showInPosition","generatePayloadFromEvent","click","physical_defineProperty","_physicalActions","ACTIONNAMES","longtouch","touchEnd","touchdrag","ANCHORS","BRUSH_ANCHORS","PERSISTENT_ANCHORS","HIGHLIGHTER","CROSSLINE","PROPS","valueParser","GenericSideEffect","generic_sideeffect_classCallCheck","_strategy","_strategies","SurrogateSideEffect","interactionType","layers","layer","interactive","applyInteractionStyle","SpawnableSideEffect","_drawingContext","changeVisibility","sideEffectGroup","visible","defClassName","classPrefix","SelectionBox","boxConf","box","drawingContext","unitWidth","unitHeight","selectionGroupClassName","hide","sourceInf","_getBoxDimensionsFrom","getBoxDimensionsFromPayload","direction","xDim","yDim","xLinear","yLinear","xCriteria","yCriteria","x1Val","x2Val","bandScale","x1DomainIndex","x2DomainIndex","_sort2","helper_slicedToArray","getScaleValue","getUnitWidth","y1Val","y2Val","y1DomainIndex","y2DomainIndex","_sort4","_xDim","_yDim","dimension","show","selectionBox","selectionBoxDrag","onDrag","boxClassName","INITIAL_STYLE","connectorClassName","margin","content","iconContainerSize","iconScale","iconShape","iconColor","rowMargin","separator","parentClassName","arrow","getArrowPos","dim","measurement","arrowPos","boxHeight","boxWidth","arrowWidth","plotBottom","boxBottom","plotRight","boxRight","placeArrow","tooltipArrow","_tooltipArrow","tooltipBackground","_tooltipBackground","arrowConf","_arrowOrientation","Content","content_classCallCheck","_model","_formatter","ctx","_mount","displayFormat","table","tbody","margin-right","el","shape","Tooltip","htmlContainer","tooltip_classCallCheck","connectorContainer","tooltipConf","contentClass","_tooltipContainer","_contentContainer","_contents","_tooltipConnectorContainer","qualifiedClassName","addClass","defConf","contentConfig","reorderContainers","contentConf","render","_target","repositionArrow","arrowDisabled","arrowOrient","outsidePlot","connector","_offset","orientation","_extent","arrowSize","topSpace","dimX","rightSpace","leftSpace","positionTop","positionRight","positionLeft","positionHorizontal","positionVertical","_position","_arrowPos","HIGHLIGHT_SUMMARY","formatters","strategies_defineProperty","getKeyValue","keyObj","margin-left","generateRetinalFieldsValues","valueArr","retinalFields","dimensionMeasureMap","fieldInf","dataLen","colorAxis","shapeAxis","sizeAxis","retField","retIndex","retinalFieldValue","measuresArr","icon","getColor","getShape","getSize","_fieldInf$retField","formattedRetinalValue","hasMultipleMeasures","measure","measureIndex","_fieldInf$measure","dName","formatterFn","strategies_toConsumableArray","buildTooltipData","nestedDataObj","fieldValues","_dataModel$getData","fieldspace","_context$firebolt$con","detailFields","containsDetailField","getFieldInf","timeDiffs","defFormatter","nf","getTabularData","allMeasures","_construct","filteredMeasures","generateTooltipContent","nestedData","_nestedData$i","_fieldInf$field","_loop2","len2","_fieldInf$name","strategies","aggregatedModel","fieldsConf","measureNames","configResolvers","tooltip_defineProperty","_configResolvers","specificConf","_default","_getPrototypeOf2","side_effects_tooltip_classCallCheck","tooltip_possibleConstructorReturn","tooltip_getPrototypeOf","_tooltips","sanitizeConfig","strategyObj","sanitizedConf","setStrategy","totalHeight","totalWidth","isEmpty","tooltips","boundBox","dataModels","fragmented","showVertically","tooltipPos","boxes","tooltip_toConsumableArray","sourceFields","plotDimensions","getPlotPointsFromIdentifiers","strategy","strategyConf","dataTransform","projectFields","plotDim","dt","layoutContainer","parentContainerDimensions","layoutBoundBox","unitBoundBox","tooltipInst","TooltipRenderer","timeDiffsByField","strategyFn","positionRelativeTo","tooltipBoundBox","getContents","spaceOutBoxes","spaceOutIfOverlap","firstBox","secondBox","opposite","highlightSummary","selectionSummary","projectedFields","Crossline","bandWidth","_this$config","bandClass","lineClass","elemData","axisIndex","fieldInst","xOffset","plotWidth","crossline_toConsumableArray","getPlotSpan","getPlotPadding","startPx","endPx","dataPoint","parentGroup","fade","fadeFn","focus","highlight","PlotHighlighter","plot_highlighter_classCallCheck","plot_highlighter_possibleConstructorReturn","plot_highlighter_getPrototypeOf","FilterEffect","entryModel","clearCaching","resetData","enableCaching","AnchorEffect","anchors_classCallCheck","anchors_possibleConstructorReturn","anchors_getPrototypeOf","_layersMap","addAnchorLayers","addLayer","layerRegistry","layerDefs","layerDef","mark","layerCls","shouldDrawAnchors","depLayerEncoding","encoding","defaultSizeValue","commonName","groupId","calculateDomain","getTransitionConfig","owner","registry","_linkedLayer$getTrans2","anchors_slicedToArray","getLayerByName","getTransformedDataFromIdentifiers","transformedData","transformedDataModel","PersistentAnchors","BrushAnchors","behaviour_effect_map_defineProperty","BEHAVIOURS","SIZE","COLOR","SHAPE","TEXT","ENCODING","X0","Y0","RADIUS","RADIUS0","ANGLE","ANGLE0","nearestPointThreshold","strokeOpacity","connectNullData","SimpleLayer","props_defineProperty","metaInf","coord","_customConfig","newConf","defaultPolicy","BOTTOM","TOP","LEFT","RIGHT","axisOrientationMap","axis_orientation_defineProperty","_axisOrientationMap","AxisOrientation","LINEAR","BAND","TIME","ORDINAL","QUANTIZE","QUANTILE","LOG","POW","IDENTITY","SEQUENTIAL","THRESHOLD","CONTINOUS","DISCRETE","HIDDEN","DEFAULT_ANGLE_DOMAIN","scaleLinear","scales","scaleThreshold","scaleLog","scalePow","scaleIdentity","scaleOrdinal","scaleSequential","scaleQuantize","scaleQuantile","scaleTime","scaleMap","scale_creator_defineProperty","_scaleMap","ScaleType","createScale","scaleFactory","adjustRange","axisName","axisNamePadding","fixedBaseline","labels","rotation","smartTicks","numberOfTicks","showAxisName","showInnerTicks","showOuterTicks","yOffset","rotateAxis","instance","tickText","labelManager","renderConfig","getTickSize","yShift","xShift","tickLabelDim","quadrant","rotationNormalizer","angleToRadian","angle","changeTickOrientation","selectContainer","axisInstance","_smartTicks","isSmartTicks","registerAnimationDoneHook","setFixedBaseline","setAxisNamePos","textNode","axisNameHeight","availableSpace","longestWord","quarter","halfYearly","mintues","getTickIntervalFnBasedOnNumberOfTicks","possibleTickLevelIndex","maxPossibleTicks","tickIntervalLevelInfo","tickIntervalInfo","numOfPossibleTicks","getActualTickInterval","noOfTicks","minWidthBetweenTicks","_minTickDistance","getTickIntervalBasedOnCurrentLevel","_dependencies","longestWordType","applyTickSkipping","minTickDistance","minTickSpace","_minTickSpace","minTickWidth","maxTicks","getSkippedTicks","actualNumberOfTicks","_minDiff","millisecondInterval","numOfTicksAccordingToMinDiff","adjustHorizontalRange","adjustVerticalRange","rangeAdjustmentMap","space_setter_defineProperty","_rangeAdjustmentMap","setAxisRange","rangeBounds","getAdjustedRange","getAxisOffset","timeDiff","avWidth","bars","spaceSetter","spaceConfig","heightForTicks","_context$availableSpa2","availWidth","availHeight","isOffset","_context$renderConfig2","_context$getAxisDimen","getAxisDimensions","tickDimensions","allTickDimensions","axisNameDimensions","tickDimHeight","tickDimWidth","namePadding","labelConfig","minTickHeight","getTickValues","tickShifter","maxTickSpaces","widthForTicks","totalTickWidth","getRotatedSpaces","rotatedHeight","rotatedWidth","setOffset","logicalSpace","getAxisComponentDimensions","axisTicks","largestTick","largestTickDimensions","smartTick","_context$renderConfig","labelFunc","_tickLabelStyle","originalLabel","getFormattedText","_axisNameStyle","getHorizontalAxisSpace","axisDimensions","_context$config2","axisDimHeight","minTickDiff","getMinTickDifference","cartesian_axis_helper_toConsumableArray","getVerticalAxisSpace","_context$config3","calculateBandSpace","largestDimHeight","_getHorizontalAxisSpa","_getVerticalAxisSpace","getValidDomain","userDom","setContinousAxisDomain","_domain","axisComponentDimensions","oldConfig","mockedOldConfig","shouldAxesScaleUpdate","hasAxesConfigChanged","properties","tickFormatter","sanitizeTickFormatter","_scale","_axis","createAxis","_tickFormatter","resetRenderConfig","_renderConfig","_maxTickSpaces","SimpleAxis","simple_axis_classCallCheck","_range","_domainLock","_axisDimensions","defCon","simpleConfig","bodyElem","dist","_animationDonePromises","domainValue","setAxisComponentDimensions","smartAxisName","axisClass","_objectSpread","setTickConfig","setSmartAxisName","_this$config2","dimType","widthDim","getSmartAxisName","oriSize","domainVal","computeAxisDimensions","_getAxisComponentDime","labelHeight","labelWidth","calculateContinousSpace","_context$renderConfig6","axisNameWidth","_getHorizontalAxisSpa2","_getVerticalAxisSpace2","renderAxis","tickLabelStyle","axisTickFormatter","labelProps","labelOffset","all","LinearInterpolator","LogInterpolator","PowInterpolator","interpolatorMap","continous_axis_defineProperty","_interpolatorMap","ContinousAxis","continous_axis_classCallCheck","continous_axis_possibleConstructorReturn","continous_axis_getPrototypeOf","InterpolatorCls","_interpolator","_this$renderConfig","sanitizeDomain","_get2","_get","_this$renderConfig2","newTickValues","tickSpace","getNumberOfTicks","labelDim","numberOfValues","tickLength","_this$smartTicks$","BandAxis","_this$maxTickSpaces","_getRotatedSpaces","paddingNormalized","formatTickValue","TimeAxis","time_axis_classCallCheck","time_axis_possibleConstructorReturn","time_axis_getPrototypeOf","time_axis_get","rawTicks","resetTickInterval","_context$config8","_context$availableSpa","adjustedRange","x11Colors","Pink","LightPink","HotPink","DeepPink","PaleVioletRed","MediumVioletRed","LightSalmon","Salmon","DarkSalmon","LightCoral","IndianRed","Crimson","FireBrick","DarkRed","Red","OrangeRed","Tomato","Coral","DarkOrange","Orange","Gold","Yellow","LightYellow","LemonChiffon","LightGoldenrodYellow","PapayaWhip","Moccasin","PeachPuff","PaleGoldenrod","Khaki","DarkKhaki","Cornsilk","BlanchedAlmond","Bisque","NavajoWhite","Wheat","BurlyWood","Tan","RosyBrown","SandyBrown","Goldenrod","DarkGoldenrod","Peru","Chocolate","SaddleBrown","Sienna","Brown","Maroon","DarkOliveGreen","Olive","OliveDrab","YellowGreen","LimeGreen","Lime","LawnGreen","Chartreuse","GreenYellow","SpringGreen","MediumSpringGreen","LightGreen","PaleGreen","DarkSeaGreen","MediumSeaGreen","SeaGreen","ForestGreen","Green","DarkGreen","MediumAquamarine","Aqua","Cyan","LightCyan","PaleTurquoise","Aquamarine","Turquoise","MediumTurquoise","DarkTurquoise","LightSeaGreen","CadetBlue","DarkCyan","Teal","LightSteelBlue","PowderBlue","LightBlue","SkyBlue","LightSkyBlue","DeepSkyBlue","DodgerBlue","CornflowerBlue","SteelBlue","RoyalBlue","Blue","MediumBlue","DarkBlue","Navy","MidnightBlue","Lavender","Thistle","Plum","Violet","Orchid","Fuchsia","Magenta","MediumOrchid","MediumPurple","BlueViolet","DarkViolet","DarkOrchid","DarkMagenta","Purple","Indigo","DarkSlateBlue","SlateBlue","MediumSlateBlue","White","Snow","Honeydew","MintCream","Azure","AliceBlue","GhostWhite","WhiteSmoke","Seashell","Beige","OldLace","FloralWhite","Ivory","AntiqueWhite","Linen","LavenderBlush","MistyRose","Gainsboro","LightGray","Silver","DarkGrey","Grey","DimGrey","LightSlateGrey","SlateGrey","DarkSlateGrey","Black","palette","DEFAULT_GRADIENT_COLOR","DEFAULT_CONFIG","stops","getHslString","hslArr","convertToXllString","baseString","getActualHslColor","paletteColor","hexToHsv","props_toConsumableArray","newConfig","treatNullMeasures","scaledVal","minDomainScaledVal","resolveAxisConfig","propVal","defaultVal","getStops","newStops","color_strategy_toConsumableArray","rangeStops","newStopsLength","newRange","hslInterpolator","interpolateHslLong","indexedDomain","uniqueVals","scaleDomain","indexedDomainMeasure","normalDomain","steppedDomain","_getStops","continousSteppedDomain","_getStops2","uniqueRange","indexedRange","numVal","normalRange","strategyGetter","domainType","rangeType","schemeType","color_strategy_defineProperty","domainRange","ColorAxis","color_axis_classCallCheck","_domainType","_rangeType","_schemeType","getSchemeType","_colorStrategy","setColorStrategy","updateDomain","colorStrategy","getScheme","colorSchemes","hslColorArray","getRawColor","color_axis_toConsumableArray","scaleInfo","domainRangeFn","transformationArr","newH","newS","newL","newA","size_strategy_defineProperty","size_strategy_strategies","pieceWiseRange","size_strategy_toConsumableArray","intervals","newIntervals","discreteRange","SizeAxis","size_axis_classCallCheck","_sizeStrategy","domainInfo","domainFn","generator","ShapeAxis","shape_axis_classCallCheck","_generatedShapes","shapeType","shapeGenerator","generatorFn","generatedShapes","createAngleValues","angleData","_angleFn","_angleValues","AngleAxis","angle_axis_classCallCheck","customDomain","customRange","_this$_range","angle_axis_slicedToArray","ROWS","COLUMNS","COL","ROW","CELL","X_AXES","Y_AXES","ENTRY_CELLS","EXIT_CELLS","PRIMARY","SECONDARY","adjustDomain","minOuterRadius","RadiusAxis","radius_axis_classCallCheck","_radiusFactor","sanitizedRange","rangeVal","DATA_TYPES","group_transform","data_type_scale_map_defineProperty","_dataTypeScaleMap","groupByIndices","isInvalid","getInvalidType","identityTransform","transformMap","transform_factory_defineProperty","_transformMap","uniqueField","valueField","normalizedData","normalizeData","uniqueFieldIndex","valueFieldIndex","seriesKeyIndex","seriesKeys","tuples","rowObj","_tuple","seriesKey","newArr","orderBy","orderIndex","groupByIndex","stackData","seriesData","transformFactory","POLAR","CARTESIAN","transfromColor","styleType","intensity","stateColor","originalColor","fillColorInfo","transformColor","interactionStyles","elements","getPlotElementsFromSet","_d$meta","colorTransform","helpers_slicedToArray","getAxesScales","_map2","_map4","xScale","yScale","encodingFieldInfRetriever","helpers_defineProperty","_encodingFieldInfRetr","encodingInf","getIndividualClassName","individualClassName","classNameStr","dataNormalizers","_dataNormalizers","encodingFieldInf","radiusFieldIndex","angleFieldIndex","radius0FieldIndex","angle0FieldIndex","fieldsLen","pointObj","radius0","angle0","enc","rowId","transformType","xFieldIndex","yFieldIndex","x0FieldIndex","y0FieldIndex","domainCalculator","_domainCalculator","layerInst","angleValues","radius0Field","encodingFieldsInf","xFieldSubType","yFieldSubType","x0Field","y0Field","yEnc","xEnc","attachDataToVoronoi","helpers_toConsumableArray","updateStyle","positionPoints","positioner","encodingTransform","getPlotMeasurement","dimensionalValues","fieldInfo","_bandScale","span","groupSpan","offsetValues","actualGroupWidth","dataProps","innerPadding","getGroupSpan","isAxisBandScale","axisPadding","groupPadding","resolveInvalidTransformType","transformResolverPredicates","groupByField","dimensionField","getValidTransformForAggFn","resolvedInvalidTransformType","_context$encodingFiel","isCustomTransformTypeProvided","resolveEncodingValues","transformedValues","getColorMetaInf","getHslArray","getCoordValue","trig","coordValueGetter","toCartesianCoordinates","rangePlot","_point$update","_coordValueGetter","axisArr","localOptions","local_options_defineProperty","STATE_NAMESPACES","listener_map_slicedToArray","_cacheEnabled","_cachedData","encodingValue","resolveTransformType","_transformedData","getTransformedData","_normalizedData","getNormalizedData","calculateDomainFromData","layerNs","groupNs","BaseLayer","base_layer_classCallCheck","base_layer_possibleConstructorReturn","base_layer_getPrototypeOf","base_layer_assertThisInitialized","alias","_points","_measurement","_graphicElems","_store","_this$metaInf2","parentNamespace","_encodingFieldsInf","_encodingTransform","_alias","transformData","encodingType","_this$metaInf3","transformedDataArr","_updateLock","_transformType","getValidTransform","_this$metaInf4","unitDom","pointMap","_pointMap","_dataProps","_this$encodingFieldsI","base_layer_slicedToArray","xMeasure","yMeasure","_identifiers$","_identifiers$2","xMeasureIndex","yMeasureIndex","getAllAttrs","filteredPoints","base_layer_toConsumableArray","sizeVal","_identifiers$getData","identifierData","identifierSchema","_this$encodingFieldsI2","tupleArr","transformedVal","graphicElems","elems","_this$metaInf5","rowIndex","unitRowIndex","colIndex","unitColIndex","renderLayer","throwback","_context$metaInf","base_layer_defineProperty","getState","base_layer_construct","userConf","drawLine","curveInterpolatorFn","linepath","LineLayer","line_classCallCheck","line_possibleConstructorReturn","line_getPrototypeOf","isXDim","isYDim","xPx","yPx","resolvedEncodings","stroke","cachePoint","seriesClassName","containerSelection","colorField","colorFieldIndex","animateGroup","groupTransition","groupAnimateStyle","stroke-opacity","getPathStyle","translatePoints","colorValFn","colorVal","getDrawFn","searchRadius","_point$data$data","getIdentifiersFromData","layerId","drawArea","easeEffect","renderer_slicedToArray","enterAreaPath","updateAreaPath","selectionEnter","AreaLayer","area_get","area_getPrototypeOf","_getAxesScales","classNameFn","minYVal","basePos","y0Px","invalidY","invalidY0","resolvedValues","stroke-width","stroke-linejoin","states","fadeout","selected","ArcLayer","arc_classCallCheck","arc_possibleConstructorReturn","arc_getPrototypeOf","_prevPieData","_this$axes","radiusAxis","pieIndex","prevData","angleV","angles","_angles","uid","getOuterRadius","getInnerRadius","startAngle0","endAngle0","_previousInfo","getPreviousPoint","currIndex","prevArc","nextArc","_context$axes$angle$r2","arc_helper_slicedToArray","qualClassName","_arcFn","consecutiveExits","exitCounter","tweenPie","individualClass","tweenExit","exitArr","oldExitCounter","tweenExitPie","consecutiveExitArr","gElem","pieSlices","pieSliceInf","tData","drawText","selectionMerge","backgroundVal","textanchor","textStyle","background","backgroundPadding","_smartLabel$getOriSiz","backgroundEl","alignment-baseline","defaultEncoding","alignmentBaseLine","defRotation","pointTranslators","polar","textEncoding","angleAxis","textFormatter","backgroundEncoding","backgroundValue","cartesian","textField","textFieldIndex","textValue","text_slicedToArray","TextLayer","text-anchor","drawSymbols","createShape","groupElement","Element","newShape","nodeName","src","href","shapeElement","pathStr","checkPath","exitGroup","defColorStyle","fillOpacity","shapes","sizes","PointLayer","point_classCallCheck","point_possibleConstructorReturn","point_getPrototypeOf","_config$offset","offsetX","offsetY","point_slicedToArray","maxSize","generateDataPoints","point_toConsumableArray","drawFn","getMarkId","_maxSize","_getPlotMeasurement2","widthMetrics","heightMetrics","offsetXValues","offsetYValues","measurementConf","getMeasurementConfig","widthSpan","heightSpan","distanceLimit","drawRects","barEnterFn","transitionBars","selTransition","positionRetriever","isNegativeVal","barBasePos","resolveDimByField","axesInfo","spaceType","sizeEncoding","sizeConfig","sizeValue","enterSpace","minVal","maxVal","diffPx","minDomVal","_positionRetriever$ty2","bar_helper_slicedToArray","resolveDimensions","_resolveDimByField","enterWidth","enterX","xPos","_resolveDimByField2","enterHeight","BarLayer","bar_classCallCheck","bar_possibleConstructorReturn","bar_getPrototypeOf","_plotPadding","_plotSpan","bar_get","getTranslatedPoints","normalizedDataArr","clipElement","clipPathElement","bar_slicedToArray","barWidthMetrics","barHeightMetrics","barWidthOffsets","barHeightOffsets","barWidth","barWidthOffset","barHeight","barHeightOffset","uniqueFieldType","pointFound","bar_toConsumableArray","p2","tick_renderer","ticksEnter","angle0Axis","angle0V","angles0","_angles2","_layerInst$encodingFi","_config$span","xSpan","ySpan","x0Px","TickLayer","drawTicks","AREA_LAYER","ARC_LAYER","LINE_LAYER","TEXT_LAYER","POINT_LAYER","BAR_LAYER","TICK_LAYER","SIMPLE_LAYER","BASE_LAYER","sanitizeEncoding","layerFactory","compositeLayers","factoryObj","setLayerRegistry","reg","_layerRegistry","getSerializedConf","serializedDefs","defs","unitLayerDef","sDef","parseLayerDefinition","layerType","strs","layer_factory_toConsumableArray","getLayerInstance","instances","layerObj","layerConstructor","getLayerClass","composeLayers","sanitizeLayerConfig","DEFAULT_LAYERS","defaults_defineProperty","_DEFAULT_LAYERS","LAYER_TYPES","local_options","visual_group_local_options_defineProperty","_CONFIG$ROWS$COLUMNS$","SimpleGroup","action_behaviour_map_defineProperty","ACTIONS","sanitizeLayerDef","sanitizedDefs","sConf","unionDomainFromLayers","layerAxisIndex","getDataDomain","domainValues","layerDomain","fieldDomain","encodingDomain","fieldStr","domain1","renderLayers","_lifeCycleManager","notify","orderedLayers","layerParentGroup","layerDepOrder","getDependencyOrder","dependencyOrder","visited","visit","_layerDepOrder","_timeDiffs","getLayersBy","searchBy","removeLayersBy","createRenderPromise","_renderedPromise","_renderedResolve","radiusAxes","getRadiusRange","isXandYMeasures","_context$fields","src_helper_slicedToArray","xMeasures","yMeasures","GRID_BAND","GRID_LINE","getGridLayerDefinitions","axisType","getDefaultVisibilty","getLayerDefinition","_definition","_axes","_encoding","gridLines","gridBands","gridLineColor","zeroLineColor","gridBandColor","isLinearScale","grid_lines_defineProperty","isNegativeDomain","_context$axes","dimensionSubTypes","getValidSubtype","attachDataToGridLineLayers","_gridLines","_gridBands","gridLayerData","getGridLayerData","gridData","jsonData","_jsonData$push","grid_lines_toConsumableArray","calculateDomainListener","_layerAxisIndex","src_listener_map_slicedToArray","fieldsVal","removeExitLayers","layersMap","markSet","queuedLayerDefs","_queuedLayerDefs","layerDefArr","defFn","listener_map_toConsumableArray","hasPlotSpan","axesObj","temporalFields","filteredFields","_ref6","minimumConsecutiveDifference","_ref7","_ref8","_timeDiffsByField","originalData","cachedData","createSelectionSet","attachPropagationListener","_ref9","createGridLineLayer","vuConf","atomicDef","_ref11","_ref12","transformDataModels","transformVal","_ref15","_ref16","layerAxisIndexVal","axesVal","attachDataToLayers","transformedDataModels","dataSource","_dimensionMeasureMap","getDimensionMeasureMap","retinalEncodingsAndMeasures","_layer$encodingFields","sizeField","shapeField","_retinalEncodingsAndM","src_helper_toConsumableArray","attachAxisToLayers","axisInf","src_props_defineProperty","_PROPS","payloadGenerator","brush","selectionDataModel","propPayload","getRangeFromData","propCriteria","fieldMap","isDimension","payload_generator_toConsumableArray","__default","propagateValues","propagationFieldInf","propagationFields","sideEfffects","mergedModel","sourceUnit","sourceCanvas","parentAlias","propagationBehaviour","propFields","facetByFields","getModelWithFacetData","schema1","data1","derivedSchema","dataAtFirstPos","data_propagator_toConsumableArray","behaviourInstance","propagationConf","sourceBehaviour","enabled","propConf","applyOnSource","sideEffectPolicy","sourceIdentifierFields","hasCommonCanvas","UnitFireBolt","src_firebolt_classCallCheck","firebolt_possibleConstructorReturn","firebolt_getPrototypeOf","SIDE_EFFECTS","changeSideEffectStateOnPropagation","unitId","aliasName","propagationSourceCanvas","sourceUnitId","sourceSideEffects","sideEffectInstances","actionOnSource","mappedEffects","se","sideEffectCheckers","_getSelectionRejectio","getSelectionRejectionModel","propValuesMap","rejectionModel","_propModel$getData","exitRowIds","rowIdsObj","_cachedValuesMap","enabledFn","sourceBehaviours","persistent","trackerClassName","arcLayerClassName","sideEffectClassName","src_local_options","src_local_options_defineProperty","_CONFIG$LAYERDEFS$TRA","getValuesMap","_model$getData","fieldIndices","local_options_toConsumableArray","oldData","unitNs","VisualUnit","visual_unit_classCallCheck","lifeCycleManager","_gridLinesSelection","_gridBandsSelection","_this$_dependencies","fireboltDeps","_firebolt","_rootSvg","class","renderGridLineLayers","gridLineParentGroup","_entry","grid_lines_slicedToArray","parentGroupClass","_sideEffectGroup","createSideEffectGroup","initSideEffects","rootSvg","_this$parentContainer","parentContainerInf","layerDefinition","layerDefinitions","components","layerIndex","layersArr","_layersArr","markId","defArr","getLayerFromDef","existingLayer","instanceArr","instanceValues","visual_unit_toConsumableArray","layerdeps","depArr","resolveEncodingTransform","resolvable","getLayerAxisIndex","_layer$config","specificField","encodingField","_this$_dependencies2","parentModel","dimValue","getNearestDimensionalValue","entryVal","pointInf","getMarkInfFromLayers","markInf","parsedIdentifiers","transposeArray","getPointsFromIdentifiers","localNs","visual_unit_slicedToArray","visual_unit_defineProperty","dispatchQueuedSideEffects","firebolt_helper_toConsumableArray","clearActionHistory","visual_unit_construct","Variable","ComposedVars","composed_vars_classCallCheck","composed_vars_possibleConstructorReturn","composed_vars_getPrototypeOf","vars","_vars","_data","member","getMinDiff","SimpleVariable","simple_var_classCallCheck","simple_var_possibleConstructorReturn","simple_var_getPrototypeOf","oneVar","_oneVar","dtFormat","dateFormat","fieldDef","varInst","convertToVar","datamodel","transformFields","field_sanitizer_slicedToArray","normalizedFields","normalizeFields","norFields","orderFields","fieldArray","temporalArr","categoricalArr","fieldList","numOfMeasures","allDimensions","field_sanitizer_toConsumableArray","temporal","categorical","rowsInfo","columnsInfo","rowDimensions","rowMeasures","rowTemporalFields","rowCategoricalFields","columnDimensions","columnMeasures","columnTemporalFields","columnCategoricalFields","VisualEncoder","_fieldInfo","_axisFrom","_headerFrom","__headerFrom","axisFrom","_getHeaderAxisFrom2","visual_encoder_slicedToArray","getHeaderAxisFrom","rowHeader","rowAxis","_getHeaderAxisFrom4","colHeader","colAxis","headerFrom","scaleMaps","dataTypeScaleMap","generateAxisFromMap","axesCreators","facetFields","axisKey","groupAxes","currentAxes","cacheMaps","commonAxisKey","getAxisKey","axisConfig","getAxisConfig","axisInfo","axisOrientation","columnIndex","rawUserAxisConfig","userAxisConfig","_rotationLock","createSimpleAxis","Cls","sanitizeIndividualLayerConfig","encodingConfigs","getIndex","arrIndex","CartesianEncoder","geomCellAxes","projections","rowFields","columnFields","geomCell","xAxes","yAxes","units","1","rIdx","unitsArr","cIdx","encodingDomains","axisTypeIndex","typeOfField","_resolver$axes","axesArr","adjustedDomain","typeOfAxis","alignZeroLine","getAdjustedDomain","y1ratio","y2ratio","allSameSign","currentFieldName","sortingOrder","sortCategoricalField","sortOrderType","facets","counter","primaryFacets","secondaryFacets","primaryFields","secondaryFields","primaryLen","secondaryLen","projArr","primaryField","secondaryField","facet","existIndex","axisFromIndex","cartesian_encoder_get","cartesian_encoder_getPrototypeOf","groupedModel","encodingObj","retriveDomainFromData","layerArray","serializedLayers","userLayerConfig","layerConfig","retinalConfig","colField","colFieldName","rowField","configs","rowFieldName","rowFieldType","getDefaultMark","colFieldType","defConfigs","layerConfigs","getLayerConfFromFields","colFields","encodingArr","encoder_helper_toConsumableArray","xFields","yFields","colFieldExist","rowFieldExist","layerConf","mergedLayerConf","serializedLayerConfig","cartesian_encoder_toConsumableArray","axesCls","polar_encoder_defineProperty","_axesCls","PolarEncoder","pieAxes","matrixLayers","resolverAxes","varInstances","encType","userConfig","domainProps","matrixInstance","unitDomains","setRadiusFactor","sizeFieldIndex","sizeMultiplier","getSizeMultiplier","sizeAxisDomain","encodingFields","_layers","sanitizedRows","sanitizedColumns","polar_encoder_get","polar_encoder_getPrototypeOf","sanitizedFields","typeIndex","polar_encoder_toConsumableArray","layerEncoding","sanitizedConfig","angleField","angle0Field","RetinalEncoder","newAxes","createRetinalAxis","fieldProps","getAxisType","isDistributionEqual","group_utils_toConsumableArray","rowType","initializeCacheMaps","cellMap","xAxesMap","yAxesMap","entryCellMap","exitCellMap","headerCreator","fieldHeaders","TextCell","getHeaderText","rowLength","getEncoder","encoder","hasPolarEncodings","userAxisFromConfig","group_utils_slicedToArray","firstField","secondField","firstFieldType","secondFieldType","setFacetsAndProjections","_encoder$simpleEncode","simpleEncoder","getFacetsAndProjections","group_utils_defineProperty","getBorders","matrices","showRowBorders","showColBorders","showValueBorders","valueMatrix","_rows","leftRows","rightRows","_columns","topColumns","bottomColumns","_encoder$fieldInfo","allDimensionLength","allMeasuresLength","allTemporalFieldsLength","getRowBorders","borders","getColumnsBorders","getValueBorders","borderTypeRow","borderTypeCol","sortFacetFields","sortInfo","sortConfig","facetSortConfig","getSchemaDef","getFieldNames","fieldVar","matrix_model_toConsumableArray","prepareHashMaps","facetNames","rowKey","joinedRowKey","createJoinedKeys","keyArr","joinedKey","formatKeys","formatterList","formattedKeys","rKeys","createColumnDataModels","colContext","sourceDM","rowFacets","colFacets","rowKeyArr","colKeyObj","newRowIndex","splitModelsHashMap","currentColumnIndex","colKeyArr","colKey","hashMapKey","splitByColumn","optionalProjections","facetInfo","projectionInfo","geomCellCreator","_indices$i","projectionIndexObject","matrix_model_objectSpread","getMatrixModel","globalConfig","currentRowIndex","prepareProjectionInfo","colProjections","rowProjections","rowProj","rIndex","newRIndex","colProj","cIndex","newCIndex","newRowProj","newColProj","prepareFacetInfo","rowFacetNames","colFacetNames","allFacets","_getSplitModelHashMap","getSplitModelHashMap","splitModels","rowKeyHashMap","colKeyHashMap","rowKeys","colKeys","splitContext","splitByRow","generalContext","rowKeyObj","createRowDataModels","rowContext","rowIndexForCurrentKey","_createColumnDataMode","_createColumnDataMode2","_createColumnDataMode3","_createColumnDataMode4","formattedColKeys","facetField","rawFormat","columnKeys","createValueCells","suppliedLayers","GeomCell","horizontalAxis","verticalAxis","datamodelTransform","layerConfigArr","getLayerConfig","normalizedColumns","normalizedRows","cell_creator_toConsumableArray","geomCellKey","getCellKey","columnId","updateCells","facetKey","extractAxisIndex","createAxisCells","currObj","axisInst","_axisInst$config","AxisCell","BlankCell","extractFacetIndex","headerPlaceholderGn","selectionObj","selectionKeys","keySet","textCells","createTextCells","textCell","generatePlaceholders","facetsAndProjections","encoders","valuesMatrix","takeAxisFrom","takeHeaderFrom","axisPlaceholderGn","selObj","axesMatrix","selObjProp","axesForDraw","rowsPrimary","rowPrime","rowsSecondary","rowSec","columnsPrimary","colPrime","columnsSecondary","colSec","_selectionObj","section","hContext","getAxisFields","fieldHolder","ac","transformDataModel","resolvedData","extractFields","layerFields","flattenArray","getFieldsFromSuppliedLayers","suppliedLayerConfig","aggregationFns","nearestAggFns","resolvedAggFns","sortDmTemporalFields","computeMatrices","componentRegistry","autoGroupBy","otherEncodings","matrixGnContext","getCellDef","isRowSizeEqual","isColumnSizeEqual","colCells","rowCells","resetSimpleAxes","newCacheMap","valueCellContext","serializeLayerConfig","cellCreator","valueCellsCreator","valueMatrixInfo","removeExitCells","exitCells","qualifiedStateProps","getQualifiedStateProps","placeholder","_mutateAxesFromMap","mutateAxesFromMap","xAxisSet","yAxisSet","axisId","createUnits","_generateMatrices","generateMatrices","leftHeaders","topHeaders","bottomHeaders","rightHeaders","cell_creator_slicedToArray","leftFacets","rightFacets","rowPriority","colPriority","leftMatrix","rightMatrix","topMatrix","bottomMatrix","currentBottomLength","setAvailableSpace","rowMatrix","columnMatrix","RESOLVER_PROPS","MatrixResolver","matrix_resolver_classCallCheck","_registry","_layerConfig","_matrixLayers","_rowMatrix","_columnMatrix","_valueMatrix","_facets","_projections","_datamodelTransform","_units","_cacheMaps","_fireboltDeps","maps","matrix_resolver_toConsumableArray","_horizontalAxis","_verticalAxis","matrixType","matrix_resolver_defineProperty","_this5","sideEffectRegistry","_this$dependencies","unitConfig","extractUnitConfig","_this$getAllFields","retContext","getRetinalFieldsDomain","retinalEncoder","setCommonDomain","_this6","retinalAxes","updateModel","placeholders","bottomLeft","bottomRight","_this$dependencies3","showHeaders","matrix_resolver_slicedToArray","topCols","bottomCols","rowHeaders","blankCellCreator","footers","topLeft","topRight","ValueMatrix","matrixArr","value_matrix_classCallCheck","instancesById","cellValue","_instancesById","_matrix","_filterFn","rowWidth","currentRowWidth","getLogicalSpace","rowHeight","currentRowHeight","setMatrixInstances","_composition","createMatrices","matrixConfig","unsubscribeChangeListeners","sanitizeRetinalConfig","retinalConf","confValue","groupType","fieldSanitizer","setAxisAndHeaders","placeholderInfo","getMatrices","_groupedDataModel","createRetinalAxes","setDomains","cornerMatrices","createHeaders","metaData","border","unionUnitDomains","registerDomainChangeListener","visual_group_props_defineProperty","visual_group_props_PROPS","cellRegistry","VisualGroup","visual_group_classCallCheck","visual_group_possibleConstructorReturn","visual_group_getPrototypeOf","componentSubRegistry","visual_group_assertThisInitialized","_selection","initializeGlobalState","globalState","createUnitState","_VisualUnit$getState2","visual_group_helper_slicedToArray","localState","createLayerState","_BaseLayer$getState2","setupChangeListeners","stores","comp","getListeners","storeInst","listenerInf","variable","findInGroup","channel","group_utils_this","facetType","projType","getRetinalAxes","getSimpleAxes","_this$resolver$getAll","visual_group_defineProperty","info","existingRemoveSet","select_toConsumableArray","firebolt_action_behaviour_map_defineProperty","action_behaviour_map_actionBehaviourMap","propagationBehaviourMap","_propagationBehaviour","firebolt_behaviour_effect_map_defineProperty","firebolt_behaviour_effect_map_behaviourEffectMap","propagationSideEffects","_propagationSideEffec","SCALE_FUNCTIONS","VALUE","canvasAlias","rawVal","check","assembleModelFromIdentifiers","temp","src_firebolt_helper_toConsumableArray","LegendFireBolt","_Firebolt","legend_firebolt_classCallCheck","legend_firebolt_possibleConstructorReturn","legend_firebolt_getPrototypeOf","legend_firebolt_inherits","legend_firebolt_createClass","behaviourName","getCriteriaFromData","firebolt_physical_defineProperty","physical_physicalActions","boundingBox","gradientDimensions","axisScale","rangeShifter","drag_defineProperty","getSelectionCriteria","selectionBoxMeasure","drawingInfMeasure","subjectStartPoint","gradientDimension","legendGradContainer","legendSelGroup","enterFn","getMousePos","boundingClientRect","selection_box_drag_defineProperty","fadeOut","brighten","LegendHighlighter","legend_highlighter_classCallCheck","legend_highlighter_possibleConstructorReturn","legend_highlighter_getPrototypeOf","legendContainer","resetLogicalSpace","title","_title","ALIGN","DEFAULT_MEASUREMENT","LEGEND_TITLE","borderStyle","borderColor","bounds","upper","ICON_MAP","getScaleInfo","scaleType","steps","scaleFn","getInterpolatedArrayData","domainForLegend","scaleParams","requiredWidth","requiredHeight","upperBound","maxTickDiff","alignment","smartLabelCalc","minimumTickSize","_smartLabelCalc$getOr","isInteger","getcomputedArray","computationhelper","requiredMeasure","availableMeasure","currentTickValue","nextTickValue","measureParam","pixelPerTick","getInterpolatedData","recomputeSteps","getTickMeasure","_scaleParams$measures","interpolatedFn","tickValue","getDomainBounds","domainBounds","domainLeg","ele","legend_helper_defineProperty","getScaleFactor","SimpleLegend","simple_legend_classCallCheck","_metaData","_fieldName","_labelManager","_cells","defaultMeasurement","_computedStyle","legendBehaviours","_canvasAlias","getItemMeasures","_labelManager$getOriS","_this$measurement","effPadding","effBorder","effMargin","dataFromScale","titleSpace","getTitleSpace","titleHeight","titleWidth","labelSpaces","getLabelSpaces","_computeItemSpaces","computeItemSpaces","maxItemSpaces","textOrientation","itemSpaces","iconSpaces","maxIconWidth","labelSpace","itemSpace","iconSpace","newLabelWidth","titleSpaces","_this$measurement2","_this$config3","titleCreator","titleContainer","marginPosition","_this$config4","_this$measurement3","renderTitle","simple_legend_defineProperty","legendOrientation","position_config_defineProperty","_legendOrientation","datasets","itemContainerMeasures","getStepSpacesInfo","iconHeight","iconWidth","stepPadding","horizontal","vertical","positionConfig","_positionConfig","alignmentMap","_alignmentMap","itemStack","_itemStack","createLegendSkeleton","gradWidth","gradHeight","maxGradHeight","maxGradWidth","legendBody","legendItem","getItemContainers","legendInstance","positionObj","createItemSkeleton","_context$config","itemSkeleton","alignClass","applyItemStyle","measureType","stepColorCheck","_context$measurement","renderIcon","defaultIcon","DiscreteLegend","_getScaleInfo","discrete_legend_toConsumableArray","_field$schema","discrete_legend_defineProperty","discrete_legend_get","discrete_legend_getPrototypeOf","renderDiscreteItem","_context$measurement2","_item$icon","text-align","getGradientDomain","accumulator","currentValue","MAX_VALUE","MIN_VALUE","legendGradSvg","legendGradCont","linearGradient","makeLinearGradient","legendRect","GradientLegend","gradient_legend_toConsumableArray","gradient_legend_defineProperty","newAxis","axisSpace","axisDomainLength","_legendGradientSvg","gradient_legend_get","gradient_legend_getPrototypeOf","renderGradient","_createLegendSkeleton","StepLegend","step_legend_toConsumableArray","step_legend_defineProperty","lowerBounds","upperBounds","step_legend_get","step_legend_getPrototypeOf","stepData","renderStepItem","_context$measurement3","_item$icon2","_positionConfig$posit","PADDING","BORDER","MARGIN","TITLE_TEMPLATE_NOT_ALLOWED_TAGS","LEGEND_TYPE_MAP","constants_defineProperty","_LEGEND_TYPE_MAP","HORIZONTAL_CENTER","VERTICAL_CENTER","share","operators_construct","operators_toConsumableArray","strings","htmlCode","expLn","frag","createDocumentFragment","treeShakeNode","nodeType","Node","ELEMENT_NODE","tagName","childNodes","canvasIterator","canvases","iteratorFn","cFn","canvas","visualGroup","_throwback","listenerFn","registerActions","fnName","_registrableComponents","setFireboltDependencies","actionModel","ActionModel","action_model_classCallCheck","registerPropagationBehaviourMap","dissociateBehaviour","dissociateSideEffect","policy","registrableComponents","mergedPolicy","aliases","*","propagationPayload","propagationCanvas","crossInteractionPolicy","TITLE_CONFIG","SUB_TITLE_CONFIG","maxLines","MESSAGE_CONFIG","canvas_local_options_defineProperty","_localOptions","canvasOptions","_canvasOptions","titleConfig","subtitle","sub","subtitleConfig","LayoutComponent","layoutComponent_classCallCheck","_boundBox","_renderAt","_alignWith","_alignment","_componentName","_className","DummyComponent","newDimensions","renderAt","component","componentName","pagination","scrollBar","thickness","speed","legend","minHeight","minCharacters","verticalAlign","collapse","invalidValues","DEFAULT_WIDTH","DEFAULT_HEIGHT","DEFAULT_CLASS_NAME","NODE_PREFIX","DefinitionModel","definitionModel_classCallCheck","_host","host","_cut","cut","_ratioWeight","ratioWeight","_preferred","preferred","_lanes","lanes","_remainingHeight","_remainingWidth","remainingHeight","remainingWidth","getNodeId","_uid","yExtraSpace","smallestHeight","getCutType","smallestExtraHeightHorizontally","MAX_SAFE_INTEGER","containerHeight","hostHeight","xExtraSpace","smallestWidth","smallestExtraWidthVertically","containerWidth","hostWidth","createPlaceHolderComponent","placeComponent","definitionModel","leftOvercomponentRationWidth","isPreferred","isGridComponent","componentRatioWidth","leftHeight","leftWidth","_component$getLogical","componentHeight","componentWidth","firstLaneConfig","firstLane","secondLane","tree_classCallCheck","_parentCut","_this$_children","tree_toConsumableArray","parentCut","bound","nodeconfig","searchNode","childNode","nodeId","deleteSearchNode","LayoutModel","measurements","layout_model_classCallCheck","_measurements","_root","createTree","setBoundBox","addChildren","lane","allocateBoundingBox","totalWeight","carry","lastSibling","ratio","setHostSpatialConfig","setHostPosition","negotiateDimension","alteredDim","nonAlteredDim","cumultiveExtraSpaceAmt","childrenLength","extraSpaceAmt","computePosition","determineBoundBox","bb","_lastSibling$boundBox","_top","_left","_height","_width","_instance$parent$boun","setSpatialConfig","VIEW_INDEX","ROW_MATRIX_INDEX","2","COLUMN_MATRIX_INDEX","HEIGHT","ROW_ROOT","COLUMN_ROOT","VERTICAL","HORIZONTAL","Utils","utils_createClass","isDOMElement","getID","getElement","findContainer","coordinate","removeDiv","divId","DataPoint","data_point_classCallCheck","DataParser","data_parser_classCallCheck","data_parser_createClass","defaultDataPointLogic","nodepoints","getnodePoints","datapoint","HTMLDataAdapter","_DataParser","html_data_classCallCheck","html_data_possibleConstructorReturn","html_data_getPrototypeOf","html_data_inherits","html_data_createClass","getCoordinates","html_data_get","Renderer","renderer_classCallCheck","renderer_createClass","initRenderer","__logicalTree","HTMLRenderer","_Renderer","html_renderer_classCallCheck","html_renderer_possibleConstructorReturn","html_renderer_getPrototypeOf","_coordinates","html_renderer_inherits","html_renderer_createClass","createhtml","mainDiv","html_renderer_get","parentDiv","createAndCustomiseParent","hasHost","createAndPositionDiv","html_renderer_objectSpread","div","coordinates","findNode","nodeID","renderer","drawLayout","renderHTML","resolveAligment","componentData","alignWith","componentToAlign","componentMap","refNode","newNodeConfig","setAlignConfig","DrawingManager","drawing_manager_classCallCheck","_componentMap","_layoutClassName","layoutClassName","_renderer","drawing_manager_createClass","drawComponent","DefinitionManager","definition_manager_classCallCheck","_prioritySequence","_totalHeight","_totalWidth","_targetComponentMap","prepareTargetComponentMap","targetComponentMap","canvasComponent","tempDefModel","componentRef","getComponent","placeGridComponent","gridComponents","iscolumnPreffered","_placeComponent","rowpreffred","LayoutDef","layout_def_classCallCheck","_layoutDefinition","layout_def_createClass","addComponent","layoutDefinition","addMultipleComponent","componentArray","sanitizedDefinition","hostObj","hostID","childHost","resetComponentMap","LayoutManager","layout_manager_classCallCheck","_dimension","_skeletonType","skeletonType","_layoutDef","_drawingManager","_rootNodeID","con","resetNode","updateNode","compute","_layout","calLayOutDef","_context$dimension","layoutDef","prioritySequence","generateConfigModel","negotiate","broadcast","layoutComponents","componentArr","compo","elementName","removeElement","elemID","co","deleteElement","setupChangeListener","allOptions","_allOptions","canvas_helper_toConsumableArray","nameSpaceProps","equalityProps","equalityChecker","option","updateProps","updateChecker","dispatchProps","_cachedProps","notifyAnimationEnd","viewInfo","layout","centerMatrix","viewMatricesInfo","promises","cellArr","lifeCycle","animDonePromises","animationDone","applyInteractionPolicy","interactionPolicy","_interactionPolicy","_crossInteractionPolicy","unitFireBolt","changeBehaviourStateOnPropagation","createLayoutManager","src_options","minUnitWidth","minUnitHeight","oldConf","fixScrollBarConfig","GenericLayout","generic_layout_classCallCheck","_matrices","_centerMatrix","_mountPoint","DEFAULT_CONFIGURATION","grid_layout_defaults_defineProperty","_DEFAULT_CONFIGURATIO","_FieldNames$BORDER","DEFAULT_MEASUREMENTS","_DEFAULT_MEASUREMENTS","findInPage","page","combineMatrices","isTransposed","joinedMatrix","utils_toConsumableArray","rowData","computeLogicalSpace","maxMeasures","_config$isTransposed","unitMeasures","_getMeasureInfo","getMeasureInfo","firstMeasure","secondMeasure","minMeasures","getMinMeasures","_logicalSpace","utils_defineProperty","valueItem","maxMeasure","firstMeasureValue","secondMeasureValue","valueArray","_item$space","fMeasure","sMeasure","minSecondMeasure","createMatrixEachLevel","_arr$i","extraCellsRemover","beg","distribution","extraCellLengths","VisualMatrix","visual_matrix_classCallCheck","_lastLevelKey","_primaryMatrix","_secondaryMatrix","_maxMeasures","_availableSpace","_layoutMatrix","_tree","_createTree2","matrixTree","lastLevelKey","layoutMatrix","primaryMatrix","secondaryMatrix","breakPage","primaryMatrixLength","newMatrix","keyLength","heightMeasures","populateMaxMeasures","widthMeasures","calculateDepth","viewableMatrix","createViewPortMatrix","viewableMeasures","redistributeSpaces","childDepth","createMatrixInstances","matrixInfo","breakPointer","_breakPointer","brokenMatrix","breakMatrix","nextLevel","removeExtraCells","RowVisualMatrix","row_matrix_classCallCheck","row_matrix_possibleConstructorReturn","row_matrix_getPrototypeOf","maxHeights","maxWidths","matrixInst","cellDimOptions","matrixIndex","_this2$getCellDimensi","getCellDimensions","widths","rowHeights","columnWidths","primary","secondary","begCellLen","endCellLen","remainingAvailWidth","cWidths","maxPrioritySpace","availableWidth","currentWidth","prioritySpace","logicalWidths","getPriorityDistribution","mWidth","mHeight","redistributeViewSpaces","computeViewableSpaces","rHeights","gutter","spaceTakenByColumn","spaces","getDistributedHeight","heightWithoutGutter","distSum","gutterSum","availableHeight","colLen","distHeight","borderWidth","colHeight","colWidth","heights","ColumnVisualMatrix","column_matrix_classCallCheck","column_matrix_possibleConstructorReturn","column_matrix_getPrototypeOf","heightDist","divider","spaceTakenByRow","getDistributedWidth","layoutConfig","distWidth","rowLen","oldLogicalSpace","heightDistribution","getMatrixMeasurement","setViewSpaces","pointerType","viewSpaces","pointer","computations_defineProperty","paginationDetailsMap","scrollType","paginationMeasureGetter","relatedMaxMeasure","getMatrixMeasureForPagination","measureDetails","actualMeasure","scrollInfo","getMatrixHeightDetails","columnMatrixWidth","_getHeightRequiredByC","getHeightRequiredByColMatrix","maxColumnMatrixHeight","columnViewSpace","getViewableSpaces","columnPointer","columnMatrixHeight","maxHeightAvailableForRowMatrix","rowMatrixHeight","bufferCondition","isScroll","getActualBufferFromConfig","computations_slicedToArray","getBufferFromCondition","currentBufferType","horizontalBuffer","verticalBuffer","computeLayoutMeasurements","_getMatrixWidthDetail","getMatrixWidthDetails","_layout$config3","rowMatrixWidth","maxRowMatrixWidth","maxWidthAvailableForColumnMatrix","_getMatrixHeightDetai","_getActualBufferFromC","rowViewableSpaces","columnViewableSpaces","setValueMatrixMeasurements","computations_toConsumableArray","rowWidthsPrimary","rowWidthsSecondary","columnHeightsPrimary","columnHeightsSecondary","measureSum","total","GridLayout","layout_classCallCheck","layout_possibleConstructorReturn","layout_getPrototypeOf","_layoutId","_scrollInfo","generateVisualMatrices","begColCells","endColCells","gutterSpace","layout_helper_slicedToArray","_center","_bottom","layout_helper_toConsumableArray","RowMatrix","ColumnMatrix","layout_get","_computeLayoutMeasure","setViewInformation","pageNumber","pageType","totalPages","layout_defineProperty","renderGrid","currentPage","_viewInfo","maxRowHeight","maxColWidth","rowPointer","getViewMatrices","rowMatrices","getViewableMatrices","columnMatrices","centralMatrixPointer","rowMatrixLen","columnMatrixLen","rowPages","columnPages","layoutDimensions","getViewMeasurements","_layout$config","rowSpaces","colSpaces","rightWidth","topHeight","bottomHeight","centerHeight","centerWidth","viewWidth","viewHeight","actualCenterMeasures","totalMeasures","unitHeights","unitWidths","borderMap","border_helper_defineProperty","_borderMap","specificBorderApplier","borderTypes","showBorders","borderInfo","borderType","applySpecificBorder","applyBorders","borderApplierFn","borderApplier","borderMapVal","orderMaker","nestByStack","updateArr","optionalParams","currStack","prevStack","arrVal","stackVal","currElemIndex","newElem","arrElem","returnArr","spanCalculator","isNull","maskCreator","_nestByStack","viewMatrix","hierarchy","_nestByStack2","spanGenerator","spans","ridx","currSpan","getOrder","matrixSpanGeneratorMap","span_maker_defineProperty","_matrixSpanGeneratorM","orderGetter","viewMatrixMaker","spanMaker","matrixSpanGenerator","spanApplier","cellCounter","spaceAllocationDueToSpan","primaryUnitWidth","cumulativeWidth","spanApplierMap","_spanApplierMap","TransactionSupport","INTERFACE_IMPl","CLASSPREFIX","HEADER","DATA","AXES","FACET_BY_FIELDS","FIELDS","TRANSFORM","LAYER_DEF","CONFIG","DETAIL_FIELDS","AXIS","GEOM","BLANK","SimpleCell","simple_cell_classCallCheck","enums_defaults_defineProperty","_DEFAULT_CONFIG","_CONSTANTS$MARGIN","CONSTANTS","DEFAULT_PROPS","minSpacing","visual_cell_src_props_defineProperty","visual_cell_src_props_PROPS","caption","smartText","axis_cell_classCallCheck","axis_cell_possibleConstructorReturn","axis_cell_getPrototypeOf","_availHeight","_availWidth","axis_cell_assertThisInitialized","computeAxisSpace","logicalWidth","logicalHeight","spaceFixer","_axis$getLogicalSpace","actualWidth","actualHeight","_axis$config2","wrapperDiv","blank_cell_classCallCheck","blank_cell_possibleConstructorReturn","blank_cell_getPrototypeOf","blank_cell_assertThisInitialized","setSmartText","_context$minSpacing","minHeightSpace","minWidthSpace","paddedHeight","paddedWidth","text_cell_classCallCheck","text_cell_possibleConstructorReturn","text_cell_getPrototypeOf","text_cell_assertThisInitialized","computeTextSpace","_context$minSpacing2","minText","_minTextSpace","smartSpace","textAlign","vAlign","_this$smartText","translation","middle","geom_cell_classCallCheck","geom_cell_possibleConstructorReturn","geom_cell_getPrototypeOf","_unit","_datamodel","_facetByFields","_transform","_caption","geom_cell_assertThisInitialized","captionSpace","computeGeomSpace","getCaptionSpace","captionDom","DEFAULT_PLACEHOLDERS","src_defaults_defineProperty","_DEFAULT_PLACEHOLDERS","resolveTitleSubTitleContent","rawContent","escapeHTML","htmlEscapes","&","<",">","\"","'","/","createHeading","prevCell","cellType","_minTickDiff","legendInitializer","legendConfig","prevLegends","legends","headerHeight","legendInfo","legendCreator","LegendCls","dataset","scaleProps","_scale$config","stepMapper","dataInfo","legendMeasures","titleText","getGroupByData","setLegendMeasures","MuzeComponent","_this$boundBox","HeaderComponent","headerComponent_classCallCheck","headerComponent_possibleConstructorReturn","headerComponent_getPrototypeOf","setParams","cont","renderHeader","LegendComponent","legendComponent_classCallCheck","legendComponent_possibleConstructorReturn","legendComponent_getPrototypeOf","legendSpace","sectionComponents","_this$params$config","legendMount","legWidth","legHeight","sections","currHeight","currWidth","leg","legendHeight","legendWidth","renderLegend","_defaultAlignmentHelp","defaultAlignmentHelper","arrowSizeMap","getUnitPositions","totalLength","viewLength","currentLen","unitPosition","createScrollBarArrow","createScrollBarRect","mover","applyScrollMouseDownAction","moverRect","scrollMaker","_mover$node$getBoundi","_rect$node$getBoundin","rectX","rectY","changeMoverPosition","registerListenerOnArrow","arrowType","_components","isTouchDevice","registerListeners","applyMoverDrag","moverStartPos","rectStartPos","distanceMoved","actualPosition","pageXOffset","pageYOffset","applyRectClick","emptyScrollAreaClick","manager","unitPositions","ScrollMaker","scroll_maker_classCallCheck","_attachedScrollAction","_unitPositions","scroll_maker_createClass","scrollTo","scrollDeltaTo","createScroll","scrollBarContainer","scrollContainerHelper","attachScrollAction","externalScrollAction","detachScrollAction","scrollMakerMap","_ScrollMaker","HorizontalScrollMaker","horizontal_scroll_maker_classCallCheck","horizontal_scroll_maker_possibleConstructorReturn","horizontal_scroll_maker_getPrototypeOf","horizontal_scroll_maker_inherits","horizontal_scroll_maker_createClass","horizontal_scroll_maker_get","prevArrow","nextArrow","_this$logicalSpace","scrollBarWithouArrowLength","_scrollBarWithouArrowLength","_this$_components$mov","positionAdjuster","newPosition","currentPos","_this$_components$mov2","moverPos","movedViewLength","performAttachedScrollFunction","delta","_this$_components$mov3","scrollPercentage","movement","VerticalScrollMaker","vertical_scroll_maker_classCallCheck","vertical_scroll_maker_possibleConstructorReturn","vertical_scroll_maker_getPrototypeOf","vertical_scroll_maker_inherits","vertical_scroll_maker_createClass","vertical_scroll_maker_get","ScrollComponent","scroll_component_classCallCheck","scrollBarComponentConfig","scroll_component_possibleConstructorReturn","scroll_component_getPrototypeOf","unitIndex","sanitizedUnitIndex","externalAction","MatrixComponent","matrix_component_classCallCheck","matrix_component_possibleConstructorReturn","matrix_component_getPrototypeOf","_this$params$config$s","containerForMatrix","applyScroll","_cellSpanMaker","cellSpanMaker","_matrixSpanGenerator","renderTable","applySpans","applier","renderPlaceholders","renderMatrix","applyScrollAction","scollDistance","GridComponent","grid_component_classCallCheck","grid_component_possibleConstructorReturn","grid_component_getPrototypeOf","_this$component$viewI","matrixDim","matrixName","updateWrapper","matrixWrapper","allComponents","_scrollBarManager","scrollBarManager","wheelDeltaX","wheelDeltaY","preventBrowserScroll","triggerScrollBarAction","movedView","scrollActionApplier","_this$component$0$0$b","sanitizeGrid","attachScrollListener","MessageComponent","message_component_classCallCheck","message_component_possibleConstructorReturn","message_component_getPrototypeOf","_config$dimensions","message","_params$config","headerMap","headerCell","configType","headerAlignmentMap","component_wrapper_maker_defineProperty","_headerAlignmentMap","isGridPresent","renderDetails","_renderDetails$compon","checkParamsValidation","createHeaderWrapper","headerType","layoutManager","_headerMap$headerType","headerConfig","wrapperParams","component_wrapper_maker_objectSpread","existingComponent","createScrollBarWrapper","scrollBarType","grid","_scrollBarMap$scrollB","scrollBarMap","layoutBasedMeasure","viewMeasure","rowAlign","colAlign","componentWrapperMaker","_layoutManager","createMessageWrapper","defaultDimensions","gridComponent","getBoundBox","createLegendWrapper","legendWrapper","gridLayoutWrapper","verticalScrollBar","horizontalScrollBar","ScrollManager","scroll_manager_classCallCheck","_scrollBarComponents","_attachedComponents","scroll_manager_createClass","scrollBarComponents","attachedComponents","performScrollAction","getRenderDetails","_mount$getBoundingCli","heightAttr","widthAttr","visGroup","_visGroup$placeholder","legendPosition","layoutArrangement","arrangeComponents","_titleLayouts","titleLayouts","component_resolver_defineProperty","legendLayouts","titlePosition","subtitlePosition","availableHeightForCanvas","availableWidthForCanvas","_createHeaders","canvasHeight","canvasWidth","isSubtitle","headerOptions","_createHeading","createLegend","getLegendSpace","mountSpace","componentIndexes","componentNames","3","4","5","6","renderLayout","gridLayout","compWrappers","componentWrappers","createScrollManager","horizontalScrollWrapper","verticalScrollWrapper","gridWrapper","hScrollBar","vScrollBar","componentWrapper","deleteElementName","removeComponent","registerComponents","attachListeners","attachListener","defaultInteractionPolicy","isMeasure","group_firebolt_toConsumableArray","getFieldsFromChannel","colDim","unitColFacets","equals","unitRowFacets","propagateWith","defaultCrossInteractionPolicy","propagationCanvasAlias","propagationUnit","GroupFireBolt","group_firebolt_classCallCheck","group_firebolt_possibleConstructorReturn","group_firebolt_getPrototypeOf","behaviouralAction","validFields","APP_INITIAL_STATE","app","Canvas","globalDependencies","canvas_classCallCheck","canvas_possibleConstructorReturn","canvas_getPrototypeOf","canvas_defineProperty","canvas_assertThisInitialized","initedComponents","initCanvas","createGroupState","_VisualGroup$getState2","canvas_helper_slicedToArray","register","prepareLayout","triggerReflow","setLayoutInfForUnits","getRootNodeId","setLabelRotationForAxes","rotationVal","getAxes","initialSettings","regEntry","COMPONENTS","SUBREGISTRIES","regObj","globalCache","defaultRegistry","overrideRegistryDefinitions","overrideRegistry","muze","_transactor2","muze_slicedToArray","env","globalStore","componentSubRegistryDef","settings","withSettings","enableChainedTransaction","transactionModel","transactionEndpoint","transactionItems","Smartlabel","SideEffects","standards","Behaviours","operators","utils","lookupWhat","lookupDetails","lookupTarget"],"mappings":"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,qBACA,2BACA,iCACA,uCACA,6CACA,mDACA,yDACA,+DACA,sEACAzC,IAAIglD,gCCAS+W,cAVK,IAAIp7D,MAAM,GAAG8B,OAC/B,qBACA,2BACA,iCACA,uCACA,6CACA,mDACA,0DACAzC,IAAIglD,gCCES+W,cAVK,IAAIp7D,MAAM,GAAG8B,OAC/B,qBACA,2BACA,iCACA,uCACA,6CACA,mDACA,0DACAzC,IAAIglD,gCCES+W,cAVK,IAAIp7D,MAAM,GAAG8B,OAC/B,qBACA,2BACA,iCACA,uCACA,6CACA,mDACA,0DACAzC,IAAIglD,gCCES+W,cAVK,IAAIp7D,MAAM,GAAG8B,OAC/B,qBACA,2BACA,iCACA,uCACA,6CACA,mDACA,0DACAzC,IAAIglD,gCCES+W,gBAVK,IAAIp7D,MAAM,GAAG8B,OAC/B,qBACA,2BACA,iCACA,uCACA,6CACA,mDACA,0DACAzC,IAAIglD,gCCES+W,cAVK,IAAIp7D,MAAM,GAAG8B,OAC/B,qBACA,2BACA,iCACA,uCACA,6CACA,mDACA,0DACAzC,IAAIglD,gCCES+W,cAVK,IAAIp7D,MAAM,GAAG8B,OAC/B,qBACA,2BACA,iCACA,uCACA,6CACA,mDACA,0DACAzC,IAAIglD,gCCES+W,cAVK,IAAIp7D,MAAM,GAAG8B,OAC/B,qBACA,2BACA,iCACA,uCACA,6CACA,mDACA,0DACAzC,IAAIglD,gCCES+W,gBAVK,IAAIp7D,MAAM,GAAG8B,OAC/B,qBACA,2BACA,iCACA,uCACA,6CACA,mDACA,0DACAzC,IAAIglD,gCCES+W,cAVK,IAAIp7D,MAAM,GAAG8B,OAC/B,qBACA,2BACA,iCACA,uCACA,6CACA,mDACA,0DACAzC,IAAIglD,gCCES+W,gBAVK,IAAIp7D,MAAM,GAAG8B,OAC/B,qBACA,2BACA,iCACA,uCACA,6CACA,mDACA,0DACAzC,IAAIglD,gCCES+W,gBAVK,IAAIp7D,MAAM,GAAG8B,OAC/B,qBACA,2BACA,iCACA,uCACA,6CACA,mDACA,0DACAzC,IAAIglD,gCCRKoX,aAAS,IAAIz7D,MAAM,GAAG8B,OAC/B,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","file":"muze.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"muze\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"muze\"] = factory();\n\telse\n\t\troot[\"muze\"] = factory();\n})(window, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 7);\n","(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"DataModel\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"DataModel\"] = factory();\n\telse\n\t\troot[\"DataModel\"] = factory();\n})(window, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"./src/index.js\");\n","export default function autoType(object) {\n  for (var key in object) {\n    var value = object[key].trim(), number;\n    if (!value) value = null;\n    else if (value === \"true\") value = true;\n    else if (value === \"false\") value = false;\n    else if (value === \"NaN\") value = NaN;\n    else if (!isNaN(number = +value)) value = number;\n    else if (/^([-+]\\d{2})?\\d{4}(-\\d{2}(-\\d{2})?)?(T\\d{2}:\\d{2}(:\\d{2}(\\.\\d{3})?)?(Z|[-+]\\d{2}:\\d{2})?)?$/.test(value)) value = new Date(value);\n    else continue;\n    object[key] = value;\n  }\n  return object;\n}\n","import dsv from \"./dsv\";\n\nvar csv = dsv(\",\");\n\nexport var csvParse = csv.parse;\nexport var csvParseRows = csv.parseRows;\nexport var csvFormat = csv.format;\nexport var csvFormatBody = csv.formatBody;\nexport var csvFormatRows = csv.formatRows;\n","var EOL = {},\n    EOF = {},\n    QUOTE = 34,\n    NEWLINE = 10,\n    RETURN = 13;\n\nfunction objectConverter(columns) {\n  return new Function(\"d\", \"return {\" + columns.map(function(name, i) {\n    return JSON.stringify(name) + \": d[\" + i + \"]\";\n  }).join(\",\") + \"}\");\n}\n\nfunction customConverter(columns, f) {\n  var object = objectConverter(columns);\n  return function(row, i) {\n    return f(object(row), i, columns);\n  };\n}\n\n// Compute unique columns in order of discovery.\nfunction inferColumns(rows) {\n  var columnSet = Object.create(null),\n      columns = [];\n\n  rows.forEach(function(row) {\n    for (var column in row) {\n      if (!(column in columnSet)) {\n        columns.push(columnSet[column] = column);\n      }\n    }\n  });\n\n  return columns;\n}\n\nfunction pad(value, width) {\n  var s = value + \"\", length = s.length;\n  return length < width ? new Array(width - length + 1).join(0) + s : s;\n}\n\nfunction formatYear(year) {\n  return year < 0 ? \"-\" + pad(-year, 6)\n    : year > 9999 ? \"+\" + pad(year, 6)\n    : pad(year, 4);\n}\n\nfunction formatDate(date) {\n  var hours = date.getUTCHours(),\n      minutes = date.getUTCMinutes(),\n      seconds = date.getUTCSeconds(),\n      milliseconds = date.getUTCMilliseconds();\n  return isNaN(date) ? \"Invalid Date\"\n      : formatYear(date.getUTCFullYear(), 4) + \"-\" + pad(date.getUTCMonth() + 1, 2) + \"-\" + pad(date.getUTCDate(), 2)\n      + (milliseconds ? \"T\" + pad(hours, 2) + \":\" + pad(minutes, 2) + \":\" + pad(seconds, 2) + \".\" + pad(milliseconds, 3) + \"Z\"\n      : seconds ? \"T\" + pad(hours, 2) + \":\" + pad(minutes, 2) + \":\" + pad(seconds, 2) + \"Z\"\n      : minutes || hours ? \"T\" + pad(hours, 2) + \":\" + pad(minutes, 2) + \"Z\"\n      : \"\");\n}\n\nexport default function(delimiter) {\n  var reFormat = new RegExp(\"[\\\"\" + delimiter + \"\\n\\r]\"),\n      DELIMITER = delimiter.charCodeAt(0);\n\n  function parse(text, f) {\n    var convert, columns, rows = parseRows(text, function(row, i) {\n      if (convert) return convert(row, i - 1);\n      columns = row, convert = f ? customConverter(row, f) : objectConverter(row);\n    });\n    rows.columns = columns || [];\n    return rows;\n  }\n\n  function parseRows(text, f) {\n    var rows = [], // output rows\n        N = text.length,\n        I = 0, // current character index\n        n = 0, // current line number\n        t, // current token\n        eof = N <= 0, // current token followed by EOF?\n        eol = false; // current token followed by EOL?\n\n    // Strip the trailing newline.\n    if (text.charCodeAt(N - 1) === NEWLINE) --N;\n    if (text.charCodeAt(N - 1) === RETURN) --N;\n\n    function token() {\n      if (eof) return EOF;\n      if (eol) return eol = false, EOL;\n\n      // Unescape quotes.\n      var i, j = I, c;\n      if (text.charCodeAt(j) === QUOTE) {\n        while (I++ < N && text.charCodeAt(I) !== QUOTE || text.charCodeAt(++I) === QUOTE);\n        if ((i = I) >= N) eof = true;\n        else if ((c = text.charCodeAt(I++)) === NEWLINE) eol = true;\n        else if (c === RETURN) { eol = true; if (text.charCodeAt(I) === NEWLINE) ++I; }\n        return text.slice(j + 1, i - 1).replace(/\"\"/g, \"\\\"\");\n      }\n\n      // Find next delimiter or newline.\n      while (I < N) {\n        if ((c = text.charCodeAt(i = I++)) === NEWLINE) eol = true;\n        else if (c === RETURN) { eol = true; if (text.charCodeAt(I) === NEWLINE) ++I; }\n        else if (c !== DELIMITER) continue;\n        return text.slice(j, i);\n      }\n\n      // Return last token before EOF.\n      return eof = true, text.slice(j, N);\n    }\n\n    while ((t = token()) !== EOF) {\n      var row = [];\n      while (t !== EOL && t !== EOF) row.push(t), t = token();\n      if (f && (row = f(row, n++)) == null) continue;\n      rows.push(row);\n    }\n\n    return rows;\n  }\n\n  function preformatBody(rows, columns) {\n    return rows.map(function(row) {\n      return columns.map(function(column) {\n        return formatValue(row[column]);\n      }).join(delimiter);\n    });\n  }\n\n  function format(rows, columns) {\n    if (columns == null) columns = inferColumns(rows);\n    return [columns.map(formatValue).join(delimiter)].concat(preformatBody(rows, columns)).join(\"\\n\");\n  }\n\n  function formatBody(rows, columns) {\n    if (columns == null) columns = inferColumns(rows);\n    return preformatBody(rows, columns).join(\"\\n\");\n  }\n\n  function formatRows(rows) {\n    return rows.map(formatRow).join(\"\\n\");\n  }\n\n  function formatRow(row) {\n    return row.map(formatValue).join(delimiter);\n  }\n\n  function formatValue(value) {\n    return value == null ? \"\"\n        : value instanceof Date ? formatDate(value)\n        : reFormat.test(value += \"\") ? \"\\\"\" + value.replace(/\"/g, \"\\\"\\\"\") + \"\\\"\"\n        : value;\n  }\n\n  return {\n    parse: parse,\n    parseRows: parseRows,\n    format: format,\n    formatBody: formatBody,\n    formatRows: formatRows\n  };\n}\n","export {default as dsvFormat} from \"./dsv\";\nexport {csvParse, csvParseRows, csvFormat, csvFormatBody, csvFormatRows} from \"./csv\";\nexport {tsvParse, tsvParseRows, tsvFormat, tsvFormatBody, tsvFormatRows} from \"./tsv\";\nexport {default as autoType} from \"./autoType\";\n","import dsv from \"./dsv\";\n\nvar tsv = dsv(\"\\t\");\n\nexport var tsvParse = tsv.parse;\nexport var tsvParseRows = tsv.parseRows;\nexport var tsvFormat = tsv.format;\nexport var tsvFormatBody = tsv.formatBody;\nexport var tsvFormatRows = tsv.formatRows;\n","export { DataFormat, FilteringMode } from '../enums';\n/**\n * The event name for data propagation.\n */\nexport const PROPAGATION = 'propagation';\n\n/**\n * The name of the unique row id column in DataModel.\n */\nexport const ROW_ID = '__id__';\n\n/**\n * The enums for operation names performed on DataModel.\n */\nexport const DM_DERIVATIVES = {\n    SELECT: 'select',\n    PROJECT: 'project',\n    GROUPBY: 'group',\n    COMPOSE: 'compose',\n    CAL_VAR: 'calculatedVariable',\n    BIN: 'bin',\n    SORT: 'sort'\n};\n\nexport const JOINS = {\n    CROSS: 'cross',\n    LEFTOUTER: 'leftOuter',\n    RIGHTOUTER: 'rightOuter',\n    NATURAL: 'natural',\n    FULLOUTER: 'fullOuter'\n};\n\nexport const LOGICAL_OPERATORS = {\n    AND: 'and',\n    OR: 'or'\n};\n","import FlatJSON from './flat-json';\nimport DSVArr from './dsv-arr';\nimport DSVStr from './dsv-str';\nimport { detectDataFormat } from '../utils';\n\n/**\n * Parses the input data and detect the format automatically.\n *\n * @param {string|Array} data - The input data.\n * @param {Object} options - An optional config specific to data format.\n * @return {Array.<Object>} Returns an array of headers and column major data.\n */\nfunction Auto (data, schema, options) {\n    const converters = { FlatJSON, DSVStr, DSVArr };\n    const dataFormat = detectDataFormat(data);\n\n    if (!dataFormat) {\n        throw new Error('Couldn\\'t detect the data format');\n    }\n\n    return converters[dataFormat](data, schema, options);\n}\n\nexport default Auto;\n","import { columnMajor } from '../utils';\n\n/**\n * Parses and converts data formatted in DSV array to a manageable internal format.\n *\n * @param {Array.<Array>} arr - A 2D array containing of the DSV data.\n * @param {Object} options - Option to control the behaviour of the parsing.\n * @param {boolean} [options.firstRowHeader=true] - Whether the first row of the dsv data is header or not.\n * @return {Array} Returns an array of headers and column major data.\n * @example\n *\n * // Sample input data:\n * const data = [\n *    [\"a\", \"b\", \"c\"],\n *    [1, 2, 3],\n *    [4, 5, 6],\n *    [7, 8, 9]\n * ];\n */\nfunction DSVArr (arr, schema, options) {\n    if (!schema || !Array.isArray(schema)) {\n        throw new Error('Schema missing or is in an unsupported format');\n    }\n    const defaultOption = {\n        firstRowHeader: true,\n    };\n    const schemaFields = schema.map(unitSchema => unitSchema.name);\n    options = Object.assign({}, defaultOption, options);\n\n    const columns = [];\n    const push = columnMajor(columns);\n\n    if (options.firstRowHeader) {\n        // If header present then remove the first header row.\n        // Do in-place mutation to save space.\n        arr.splice(0, 1)[0];\n    }\n\n    arr.forEach(field => push(...field));\n\n    if (schemaFields) {\n        return [schemaFields, columns];\n    }\n    return columns;\n}\n\nexport default DSVArr;\n","import { dsvFormat as d3Dsv } from 'd3-dsv';\nimport DSVArr from './dsv-arr';\n\n/**\n * Parses and converts data formatted in DSV string to a manageable internal format.\n *\n * @todo Support to be given for https://tools.ietf.org/html/rfc4180.\n * @todo Sample implementation https://github.com/knrz/CSV.js/.\n *\n * @param {string} str - The input DSV string.\n * @param {Object} options - Option to control the behaviour of the parsing.\n * @param {boolean} [options.firstRowHeader=true] - Whether the first row of the dsv string data is header or not.\n * @param {string} [options.fieldSeparator=\",\"] - The separator of two consecutive field.\n * @return {Array} Returns an array of headers and column major data.\n * @example\n *\n * // Sample input data:\n * const data = `\n * a,b,c\n * 1,2,3\n * 4,5,6\n * 7,8,9\n * `\n */\nfunction DSVStr (str, schema, options) {\n    const defaultOption = {\n        firstRowHeader: true,\n        fieldSeparator: ','\n    };\n    options = Object.assign({}, defaultOption, options);\n\n    const dsv = d3Dsv(options.fieldSeparator);\n    return DSVArr(dsv.parseRows(str), schema, options);\n}\n\nexport default DSVStr;\n","import { columnMajor } from '../utils';\n\n/**\n * Parses and converts data formatted in JSON to a manageable internal format.\n *\n * @param {Array.<Object>} arr - The input data formatted in JSON.\n * @return {Array.<Object>} Returns an array of headers and column major data.\n * @example\n *\n * // Sample input data:\n * const data = [\n *    {\n *      \"a\": 1,\n *      \"b\": 2,\n *      \"c\": 3\n *    },\n *    {\n *      \"a\": 4,\n *      \"b\": 5,\n *      \"c\": 6\n *    },\n *    {\n *      \"a\": 7,\n *      \"b\": 8,\n *      \"c\": 9\n *    }\n * ];\n */\nfunction FlatJSON (arr, schema) {\n    if (!schema || !Array.isArray(schema)) {\n        throw new Error('Schema missing or is in an unsupported format');\n    }\n\n    const header = {};\n    let i = 0;\n    let insertionIndex;\n    const columns = [];\n    const push = columnMajor(columns);\n    const schemaFieldsName = schema.map(unitSchema => unitSchema.name);\n\n    arr.forEach((item) => {\n        const fields = [];\n        schemaFieldsName.forEach((unitSchema) => {\n            if (unitSchema in header) {\n                insertionIndex = header[unitSchema];\n            } else {\n                header[unitSchema] = i++;\n                insertionIndex = i - 1;\n            }\n            fields[insertionIndex] = item[unitSchema];\n        });\n        push(...fields);\n    });\n\n    return [Object.keys(header), columns];\n}\n\nexport default FlatJSON;\n","export { default as DSVArr } from './dsv-arr';\nexport { default as DSVStr } from './dsv-str';\nexport { default as FlatJSON } from './flat-json';\nexport { default as Auto } from './auto-resolver';\n","/* eslint-disable default-case */\n\nimport { FieldType, DimensionSubtype, DataFormat, FilteringMode } from './enums';\nimport {\n    persistDerivations,\n    getRootGroupByModel,\n    propagateToAllDataModels,\n    getRootDataModel,\n    propagateImmutableActions,\n    addToPropNamespace,\n    sanitizeUnitSchema,\n    splitWithSelect,\n    splitWithProject,\n    getNormalizedProFields\n} from './helper';\nimport { DM_DERIVATIVES, PROPAGATION } from './constants';\nimport {\n    dataBuilder,\n    rowDiffsetIterator,\n    groupBy\n} from './operator';\nimport { createBinnedFieldData } from './operator/bucket-creator';\nimport Relation from './relation';\nimport reducerStore from './utils/reducer-store';\nimport { createFields } from './field-creator';\nimport InvalidAwareTypes from './invalid-aware-types';\nimport Value from './value';\n\n/**\n * DataModel is an in-browser representation of tabular data. It supports\n * {@link https://en.wikipedia.org/wiki/Relational_algebra | relational algebra} operators as well as generic data\n * processing opearators.\n * DataModel extends {@link Relation} class which defines all the relational algebra opreators. DataModel gives\n * definition of generic data processing operators which are not relational algebra complient.\n *\n * @public\n * @class\n * @extends Relation\n * @memberof Datamodel\n */\nclass DataModel extends Relation {\n    /**\n     * Creates a new DataModel instance by providing data and schema. Data could be in the form of\n     * - Flat JSON\n     * - DSV String\n     * - 2D Array\n     *\n     * By default DataModel finds suitable adapter to serialize the data. DataModel also expects a\n     * {@link Schema | schema} for identifying the variables present in data.\n     *\n     * @constructor\n     * @example\n     * const data = loadData('cars.csv');\n     * const schema = [\n     *      { name: 'Name', type: 'dimension' },\n     *      { name: 'Miles_per_Gallon', type: 'measure', unit : 'cm', scale: '1000', numberformat: val => `${val}G`},\n     *      { name: 'Cylinders', type: 'dimension' },\n     *      { name: 'Displacement', type: 'measure' },\n     *      { name: 'Horsepower', type: 'measure' },\n     *      { name: 'Weight_in_lbs', type: 'measure' },\n     *      { name: 'Acceleration', type: 'measure' },\n     *      { name: 'Year', type: 'dimension', subtype: 'datetime', format: '%Y' },\n     *      { name: 'Origin', type: 'dimension' }\n     * ];\n     * const dm = new DataModel(data, schema, { name: 'Cars' });\n     * table(dm);\n     *\n     * @public\n     *\n     * @param {Array.<Object> | string | Array.<Array>} data Input data in any of the mentioned formats\n     * @param {Array.<Schema>} schema Defination of the variables. Order of the variables in data and order of the\n     *      variables in schema has to be same.\n     * @param {object} [options] Optional arguments to specify more settings regarding the creation part\n     * @param {string} [options.name] Name of the datamodel instance. If no name is given an auto generated name is\n     *      assigned to the instance.\n     * @param {string} [options.fieldSeparator=','] specify field separator type if the data is of type dsv string.\n     */\n    constructor (...args) {\n        super(...args);\n\n        this._onPropagation = [];\n    }\n\n    /**\n     * Reducers are simple functions which reduces an array of numbers to a representative number of the set.\n     * Like an array of numbers `[10, 20, 5, 15]` can be reduced to `12.5` if average / mean reducer function is\n     * applied. All the measure fields in datamodel (variables in data) needs a reducer to handle aggregation.\n     *\n     * @public\n     *\n     * @return {ReducerStore} Singleton instance of {@link ReducerStore}.\n     */\n    static get Reducers () {\n        return reducerStore;\n    }\n\n    /**\n     * Configure null, undefined, invalid values in the source data\n     *\n     * @public\n     *\n     * @param {Object} [config] - Configuration to control how null, undefined and non-parsable values are\n     * represented in DataModel.\n     * @param {string} [config.undefined] - Define how an undefined value will be represented.\n     * @param {string} [config.null] - Define how a null value will be represented.\n     * @param {string} [config.invalid] - Define how a non-parsable value will be represented.\n     */\n    static configureInvalidAwareTypes (config) {\n        return InvalidAwareTypes.invalidAwareVals(config);\n    }\n\n    /**\n     * Retrieve the data attached to an instance in JSON format.\n     *\n     * @example\n     * // DataModel instance is already prepared and assigned to dm variable\n     *  const data = dm.getData({\n     *      order: 'column',\n     *      formatter: {\n     *          origin: (val) => val === 'European Union' ? 'EU' : val;\n     *      }\n     *  });\n     *  console.log(data);\n     *\n     * @public\n     *\n     * @param {Object} [options] Options to control how the raw data is to be returned.\n     * @param {string} [options.order='row'] Defines if data is retieved in row order or column order. Possible values\n     *      are `'rows'` and `'columns'`\n     * @param {Function} [options.formatter=null] Formats the output data. This expects an object, where the keys are\n     *      the name of the variable needs to be formatted. The formatter function is called for each row passing the\n     *      value of the cell for a particular row as arguments. The formatter is a function in the form of\n     *      `function (value, rowId, schema) => { ... }`\n     *      Know more about {@link Fomatter}.\n     *\n     * @return {Array} Returns a multidimensional array of the data with schema. The return format looks like\n     *      ```\n     *          {\n     *              data,\n     *              schema\n     *          }\n     *      ```\n     */\n    getData (options) {\n        const defOptions = {\n            order: 'row',\n            formatter: null,\n            withUid: false,\n            getAllFields: false,\n            sort: []\n        };\n        options = Object.assign({}, defOptions, options);\n        const fields = this.getPartialFieldspace().fields;\n\n        const dataGenerated = dataBuilder.call(\n            this,\n            this.getPartialFieldspace().fields,\n            this._rowDiffset,\n            options.getAllFields ? fields.map(d => d.name()).join() : this._colIdentifier,\n            options.sort,\n            {\n                columnWise: options.order === 'column',\n                addUid: !!options.withUid\n            }\n        );\n\n        if (!options.formatter) {\n            return dataGenerated;\n        }\n\n        const { formatter } = options;\n        const { data, schema, uids } = dataGenerated;\n        const fieldNames = schema.map((e => e.name));\n        const fmtFieldNames = Object.keys(formatter);\n        const fmtFieldIdx = fmtFieldNames.reduce((acc, next) => {\n            const idx = fieldNames.indexOf(next);\n            if (idx !== -1) {\n                acc.push([idx, formatter[next]]);\n            }\n            return acc;\n        }, []);\n\n        if (options.order === 'column') {\n            fmtFieldIdx.forEach((elem) => {\n                const fIdx = elem[0];\n                const fmtFn = elem[1];\n\n                data[fIdx].forEach((datum, datumIdx) => {\n                    data[fIdx][datumIdx] = fmtFn.call(\n                        undefined,\n                        datum,\n                        uids[datumIdx],\n                        schema[fIdx]\n                    );\n                });\n            });\n        } else {\n            data.forEach((datum, datumIdx) => {\n                fmtFieldIdx.forEach((elem) => {\n                    const fIdx = elem[0];\n                    const fmtFn = elem[1];\n\n                    datum[fIdx] = fmtFn.call(\n                        undefined,\n                        datum[fIdx],\n                        uids[datumIdx],\n                        schema[fIdx]\n                    );\n                });\n            });\n        }\n\n        return dataGenerated;\n    }\n\n    /**\n     * Returns the unique ids in an array.\n     *\n     * @return {Array} Returns an array of ids.\n     */\n    getUids () {\n        const rowDiffset = this._rowDiffset;\n        const ids = [];\n\n        if (rowDiffset.length) {\n            const diffSets = rowDiffset.split(',');\n\n            diffSets.forEach((set) => {\n                let [start, end] = set.split('-').map(Number);\n\n                end = end !== undefined ? end : start;\n                ids.push(...Array(end - start + 1).fill().map((_, idx) => start + idx));\n            });\n        }\n\n        return ids;\n    }\n    /**\n     * Groups the data using particular dimensions and by reducing measures. It expects a list of dimensions using which\n     * it projects the datamodel and perform aggregations to reduce the duplicate tuples. Refer this\n     * {@link link_to_one_example_with_group_by | document} to know the intuition behind groupBy.\n     *\n     * DataModel by default provides definition of few {@link reducer | Reducers}.\n     * {@link ReducerStore | User defined reducers} can also be registered.\n     *\n     * This is the chained implementation of `groupBy`.\n     * `groupBy` also supports {@link link_to_compose_groupBy | composability}\n     *\n     * @example\n     * const groupedDM = dm.groupBy(['Year'], { horsepower: 'max' } );\n     * console.log(groupedDm);\n     *\n     * @public\n     *\n     * @param {Array.<string>} fieldsArr - Array containing the name of dimensions\n     * @param {Object} [reducers={}] - A map whose key is the variable name and value is the name of the reducer. If its\n     *      not passed, or any variable is ommitted from the object, default aggregation function is used from the\n     *      schema of the variable.\n     *\n     * @return {DataModel} Returns a new DataModel instance after performing the groupby.\n     */\n    groupBy (fieldsArr, reducers = {}, config = { saveChild: true }) {\n        const groupByString = `${fieldsArr.join()}`;\n        let params = [this, fieldsArr, reducers];\n        const newDataModel = groupBy(...params);\n\n        persistDerivations(\n            this,\n            newDataModel,\n            DM_DERIVATIVES.GROUPBY,\n            { fieldsArr, groupByString, defaultReducer: reducerStore.defaultReducer() },\n            reducers\n        );\n\n        if (config.saveChild) {\n            newDataModel.setParent(this);\n        } else {\n            newDataModel.setParent(null);\n        }\n\n        return newDataModel;\n    }\n\n    /**\n     * Performs sorting operation on the current {@link DataModel} instance according to the specified sorting details.\n     * Like every other operator it doesn't mutate the current DataModel instance on which it was called, instead\n     * returns a new DataModel instance containing the sorted data.\n     *\n     * DataModel support multi level sorting by listing the variables using which sorting needs to be performed and\n     * the type of sorting `ASC` or `DESC`.\n     *\n     * In the following example, data is sorted by `Origin` field in `DESC` order in first level followed by another\n     * level of sorting by `Acceleration` in `ASC` order.\n     *\n     * @example\n     * // here dm is the pre-declared DataModel instance containing the data of 'cars.json' file\n     * let sortedDm = dm.sort([\n     *    [\"Origin\", \"DESC\"]\n     *    [\"Acceleration\"] // Default value is ASC\n     * ]);\n     *\n     * console.log(dm.getData());\n     * console.log(sortedDm.getData());\n     *\n     * // Sort with a custom sorting function\n     * sortedDm = dm.sort([\n     *    [\"Origin\", \"DESC\"]\n     *    [\"Acceleration\", (a, b) => a - b] // Custom sorting function\n     * ]);\n     *\n     * console.log(dm.getData());\n     * console.log(sortedDm.getData());\n     *\n     * @text\n     * DataModel also provides another sorting mechanism out of the box where sort is applied to a variable using\n     * another variable which determines the order.\n     * Like the above DataModel contains three fields `Origin`, `Name` and `Acceleration`. Now, the data in this\n     * model can be sorted by `Origin` field according to the average value of all `Acceleration` for a\n     * particular `Origin` value.\n     *\n     * @example\n     * // here dm is the pre-declared DataModel instance containing the data of 'cars.json' file\n     * const sortedDm = dm.sort([\n     *     ['Origin', ['Acceleration', (a, b) => avg(...a.Acceleration) - avg(...b.Acceleration)]]\n     * ]);\n     *\n     * console.log(dm.getData());\n     * console.log(sortedDm.getData());\n     *\n     * @public\n     *\n     * @param {Array.<Array>} sortingDetails - Sorting details based on which the sorting will be performed.\n     * @return {DataModel} Returns a new instance of DataModel with sorted data.\n     */\n    sort (sortingDetails, config = { saveChild: false }) {\n        const rawData = this.getData({\n            order: 'row',\n            sort: sortingDetails\n        });\n        const header = rawData.schema.map(field => field.name);\n        const dataInCSVArr = [header].concat(rawData.data);\n\n        const sortedDm = new this.constructor(dataInCSVArr, rawData.schema, { dataFormat: 'DSVArr' });\n\n        persistDerivations(\n            this,\n            sortedDm,\n            DM_DERIVATIVES.SORT,\n            config,\n            sortingDetails\n        );\n\n        if (config.saveChild) {\n            sortedDm.setParent(this);\n        } else {\n            sortedDm.setParent(null);\n        }\n\n        return sortedDm;\n    }\n\n    /**\n     * Performs the serialization operation on the current {@link DataModel} instance according to the specified data\n     * type. When an {@link DataModel} instance is created, it de-serializes the input data into its internal format,\n     * and during its serialization process, it converts its internal data format to the specified data type and returns\n     * that data regardless what type of data is used during the {@link DataModel} initialization.\n     *\n     * @example\n     * // here dm is the pre-declared DataModel instance.\n     * const csvData = dm.serialize(DataModel.DataFormat.DSV_STR, { fieldSeparator: \",\" });\n     * console.log(csvData); // The csv formatted data.\n     *\n     * const jsonData = dm.serialize(DataModel.DataFormat.FLAT_JSON);\n     * console.log(jsonData); // The json data.\n     *\n     * @public\n     *\n     * @param {string} type - The data type name for serialization.\n     * @param {Object} options - The optional option object.\n     * @param {string} options.fieldSeparator - The field separator character for DSV data type.\n     * @return {Array|string} Returns the serialized data.\n     */\n    serialize (type, options) {\n        type = type || this._dataFormat;\n        options = Object.assign({}, { fieldSeparator: ',' }, options);\n\n        const fields = this.getFieldspace().fields;\n        const colData = fields.map(f => f.formattedData());\n        const rowsCount = colData[0].length;\n        let serializedData;\n        let rowIdx;\n        let colIdx;\n\n        if (type === DataFormat.FLAT_JSON) {\n            serializedData = [];\n            for (rowIdx = 0; rowIdx < rowsCount; rowIdx++) {\n                const row = {};\n                for (colIdx = 0; colIdx < fields.length; colIdx++) {\n                    row[fields[colIdx].name()] = colData[colIdx][rowIdx];\n                }\n                serializedData.push(row);\n            }\n        } else if (type === DataFormat.DSV_STR) {\n            serializedData = [fields.map(f => f.name()).join(options.fieldSeparator)];\n            for (rowIdx = 0; rowIdx < rowsCount; rowIdx++) {\n                const row = [];\n                for (colIdx = 0; colIdx < fields.length; colIdx++) {\n                    row.push(colData[colIdx][rowIdx]);\n                }\n                serializedData.push(row.join(options.fieldSeparator));\n            }\n            serializedData = serializedData.join('\\n');\n        } else if (type === DataFormat.DSV_ARR) {\n            serializedData = [fields.map(f => f.name())];\n            for (rowIdx = 0; rowIdx < rowsCount; rowIdx++) {\n                const row = [];\n                for (colIdx = 0; colIdx < fields.length; colIdx++) {\n                    row.push(colData[colIdx][rowIdx]);\n                }\n                serializedData.push(row);\n            }\n        } else {\n            throw new Error(`Data type ${type} is not supported`);\n        }\n\n        return serializedData;\n    }\n\n    addField (field) {\n        const fieldName = field.name();\n        this._colIdentifier += `,${fieldName}`;\n        const partialFieldspace = this._partialFieldspace;\n        const cachedValueObjects = partialFieldspace._cachedValueObjects;\n        const formattedData = field.formattedData();\n        const rawData = field.partialField.data;\n\n        if (!partialFieldspace.fieldsObj()[field.name()]) {\n            partialFieldspace.fields.push(field);\n            cachedValueObjects.forEach((obj, i) => {\n                obj[field.name()] = new Value(formattedData[i], rawData[i], field);\n            });\n        } else {\n            const fieldIndex = partialFieldspace.fields.findIndex(fieldinst => fieldinst.name() === fieldName);\n            fieldIndex >= 0 && (partialFieldspace.fields[fieldIndex] = field);\n        }\n\n        // flush out cached namespace values on addition of new fields\n        partialFieldspace._cachedFieldsObj = null;\n        partialFieldspace._cachedDimension = null;\n        partialFieldspace._cachedMeasure = null;\n\n        this.__calculateFieldspace().calculateFieldsConfig();\n        return this;\n    }\n\n    /**\n    * Creates a new variable calculated from existing variables. This method expects the definition of the newly created\n    * variable and a function which resolves the value of the new variable from existing variables.\n    *\n    * Can create a new measure based on existing variables:\n    * @example\n    *  // DataModel already prepared and assigned to dm variable;\n    *  const newDm = dataModel.calculateVariable({\n    *      name: 'powerToWeight',\n    *      type: 'measure'\n    *  }, ['horsepower', 'weight_in_lbs', (hp, weight) => hp / weight ]);\n    *\n    *\n    * Can create a new dimension based on existing variables:\n    * @example\n    *  // DataModel already prepared and assigned to dm variable;\n    *  const child = dataModel.calculateVariable(\n    *     {\n    *       name: 'Efficiency',\n    *       type: 'dimension'\n    *     }, ['horsepower', (hp) => {\n    *      if (hp < 80) { return 'low'; },\n    *      else if (hp < 120) { return 'moderate'; }\n    *      else { return 'high' }\n    *  }]);\n    *\n    * @public\n    *\n    * @param {Object} schema - The schema of newly defined variable.\n    * @param {Array.<string|function>} dependency - An array containing the dependency variable names and a resolver\n    * function as the last element.\n    * @param {Object} config - An optional config object.\n    * @param {boolean} [config.saveChild] - Whether the newly created DataModel will be a child.\n    * @param {boolean} [config.replaceVar] - Whether the newly created variable will replace the existing variable.\n    * @return {DataModel} Returns an instance of DataModel with the new field.\n    */\n    calculateVariable (schema, dependency, config) {\n        schema = sanitizeUnitSchema(schema);\n        config = Object.assign({}, { saveChild: true, replaceVar: false }, config);\n\n        const fieldsConfig = this.getFieldsConfig();\n        const depVars = dependency.slice(0, dependency.length - 1);\n        const retrieveFn = dependency[dependency.length - 1];\n\n        if (fieldsConfig[schema.name] && !config.replaceVar) {\n            throw new Error(`${schema.name} field already exists in datamodel`);\n        }\n\n        const depFieldIndices = depVars.map((field) => {\n            const fieldSpec = fieldsConfig[field];\n            if (!fieldSpec) {\n                // @todo dont throw error here, use warning in production mode\n                throw new Error(`${field} is not a valid column name.`);\n            }\n            return fieldSpec.index;\n        });\n\n        const clone = this.clone(config.saveChild);\n\n        const fs = clone.getFieldspace().fields;\n        const suppliedFields = depFieldIndices.map(idx => fs[idx]);\n\n        let cachedStore = {};\n        let cloneProvider = () => this.detachedRoot();\n\n        const computedValues = [];\n        rowDiffsetIterator(clone._rowDiffset, (i) => {\n            const fieldsData = suppliedFields.map(field => field.partialField.data[i]);\n            computedValues[i] = retrieveFn(...fieldsData, i, cloneProvider, cachedStore);\n        });\n        const [field] = createFields([computedValues], [schema], [schema.name]);\n        clone.addField(field);\n\n        persistDerivations(\n            this,\n            clone,\n            DM_DERIVATIVES.CAL_VAR,\n            { config: schema, fields: depVars },\n            retrieveFn\n        );\n\n        return clone;\n    }\n\n    /**\n     * Propagates changes across all the connected DataModel instances.\n     *\n     * @param {Array} identifiers - A list of identifiers that were interacted with.\n     * @param {Object} payload - The interaction specific details.\n     *\n     * @return {DataModel} DataModel instance.\n     */\n    propagate (identifiers, config = {}, addToNameSpace, propConfig = {}) {\n        const isMutableAction = config.isMutableAction;\n        const propagationSourceId = config.sourceId;\n        const payload = config.payload;\n        const rootModel = getRootDataModel(this);\n        const propagationNameSpace = rootModel._propagationNameSpace;\n        const rootGroupByModel = getRootGroupByModel(this);\n        const rootModels = {\n            groupByModel: rootGroupByModel,\n            model: rootModel\n        };\n\n        addToNameSpace && addToPropNamespace(propagationNameSpace, config, this);\n        propagateToAllDataModels(identifiers, rootModels, { propagationNameSpace, sourceId: propagationSourceId },\n            Object.assign({\n                payload\n            }, config));\n\n        if (isMutableAction) {\n            propagateImmutableActions(propagationNameSpace, rootModels, {\n                config,\n                propConfig\n            }, this);\n        }\n\n        return this;\n    }\n\n    /**\n     * Associates a callback with an event name.\n     *\n     * @param {string} eventName - The name of the event.\n     * @param {Function} callback - The callback to invoke.\n     * @return {DataModel} Returns this current DataModel instance itself.\n     */\n    on (eventName, callback) {\n        switch (eventName) {\n        case PROPAGATION:\n            this._onPropagation.push(callback);\n            break;\n        }\n        return this;\n    }\n\n    /**\n     * Unsubscribes the callbacks for the provided event name.\n     *\n     * @param {string} eventName - The name of the event to unsubscribe.\n     * @return {DataModel} Returns the current DataModel instance itself.\n     */\n    unsubscribe (eventName) {\n        switch (eventName) {\n        case PROPAGATION:\n            this._onPropagation = [];\n            break;\n\n        }\n        return this;\n    }\n\n    /**\n     * This method is used to invoke the method associated with propagation.\n     *\n     * @param {Object} payload The interaction payload.\n     * @param {DataModel} identifiers The propagated DataModel.\n     * @memberof DataModel\n     */\n    handlePropagation (propModel, payload) {\n        let propListeners = this._onPropagation;\n        propListeners.forEach(fn => fn.call(this, propModel, payload));\n    }\n\n    /**\n     * Performs the binning operation on a measure field based on the binning configuration. Binning means discretizing\n     * values of a measure. Binning configuration contains an array; subsequent values from the array marks the boundary\n     * of buckets in [inclusive, exclusive) range format. This operation does not mutate the subject measure field,\n     * instead, it creates a new field (variable) of type dimension and subtype binned.\n     *\n     * Binning can be configured by\n     * - providing custom bin configuration with non-uniform buckets,\n     * - providing bins count,\n     * - providing each bin size,\n     *\n     * When custom `buckets` are provided as part of binning configuration:\n     * @example\n     *  // DataModel already prepared and assigned to dm variable\n     *  const config = { name: 'binnedHP', buckets: [30, 80, 100, 110] }\n     *  const binnedDM = dataModel.bin('horsepower', config);\n     *\n     * @text\n     * When `binsCount` is defined as part of binning configuration:\n     * @example\n     *  // DataModel already prepared and assigned to dm variable\n     *  const config = { name: 'binnedHP', binsCount: 5, start: 0, end: 100 }\n     *  const binDM = dataModel.bin('horsepower', config);\n     *\n     * @text\n     * When `binSize` is defined as part of binning configuration:\n     * @example\n     *  // DataModel already prepared and assigned to dm variable\n     *  const config = { name: 'binnedHorsepower', binSize: 20, start: 5}\n     *  const binDM = dataModel.bin('horsepower', config);\n     *\n     * @public\n     *\n     * @param {string} measureFieldName - The name of the target measure field.\n     * @param {Object} config - The config object.\n     * @param {string} [config.name] - The name of the new field which will be created.\n     * @param {string} [config.buckets] - An array containing the bucket ranges.\n     * @param {string} [config.binSize] - The size of each bin. It is ignored when buckets are given.\n     * @param {string} [config.binsCount] - The total number of bins to generate. It is ignored when buckets are given.\n     * @param {string} [config.start] - The start value of the bucket ranges. It is ignored when buckets are given.\n     * @param {string} [config.end] - The end value of the bucket ranges. It is ignored when buckets are given.\n     * @return {DataModel} Returns a new {@link DataModel} instance with the new field.\n     */\n    bin (measureFieldName, config) {\n        const fieldsConfig = this.getFieldsConfig();\n\n        if (!fieldsConfig[measureFieldName]) {\n            throw new Error(`Field ${measureFieldName} doesn't exist`);\n        }\n\n        const binFieldName = config.name || `${measureFieldName}_binned`;\n\n        if (fieldsConfig[binFieldName]) {\n            throw new Error(`Field ${binFieldName} already exists`);\n        }\n\n        const measureField = this.getFieldspace().fieldsObj()[measureFieldName];\n        const { binnedData, bins } = createBinnedFieldData(measureField, this._rowDiffset, config);\n\n        const binField = createFields([binnedData], [\n            {\n                name: binFieldName,\n                type: FieldType.DIMENSION,\n                subtype: DimensionSubtype.BINNED,\n                bins\n            }], [binFieldName])[0];\n\n        const clone = this.clone(config.saveChild);\n        clone.addField(binField);\n\n        persistDerivations(\n            this,\n            clone,\n            DM_DERIVATIVES.BIN,\n             { measureFieldName, config, binFieldName },\n             null\n        );\n\n        return clone;\n    }\n\n    /**\n     * Creates a new {@link DataModel} instance with completely detached root from current {@link DataModel} instance,\n     * the new {@link DataModel} instance has no parent-children relationship with the current one, but has same data as\n     * the current one.\n     * This API is useful when a completely different {@link DataModel} but with same data as the current instance is\n     * needed.\n     *\n     * @example\n     *  const dm = new DataModel(data, schema);\n     *  const detachedDm = dm.detachedRoot();\n     *\n     * // has different namespace\n     * console.log(dm.getPartialFieldspace().name);\n     * console.log(detachedDm.getPartialFieldspace().name);\n     *\n     * // has same data\n     * console.log(dm.getData());\n     * console.log(detachedDm.getData());\n     *\n     * @public\n     *\n     * @return {DataModel} Returns a detached {@link DataModel} instance.\n     */\n    detachedRoot () {\n        const data = this.serialize(DataFormat.FLAT_JSON);\n        const schema = this.getSchema();\n\n        return new DataModel(data, schema);\n    }\n\n    /**\n     * Creates a set of new {@link DataModel} instances by splitting the set of rows in the source {@link DataModel}\n     * instance based on a set of dimensions.\n     *\n     * For each unique dimensional value, a new split is created which creates a unique {@link DataModel} instance for\n     *  that split\n     *\n     * If multiple dimensions are provided, it splits the source {@link DataModel} instance with all possible\n     * combinations of the dimensional values for all the dimensions provided\n     *\n     * Additionally, it also accepts a predicate function to reduce the set of rows provided. A\n     * {@link link_to_selection | Selection} is performed on all the split {@link DataModel} instances based on\n     * the predicate function\n     *\n     * @example\n     *  // without predicate function:\n     *  const splitDt = dt.splitByRow(['Origin'])\n     *  console.log(splitDt));\n     * // This should give three unique DataModel instances, one each having rows only for 'USA',\n     * // 'Europe' and 'Japan' respectively\n     *\n     * @example\n     *  // without predicate function:\n     *  const splitDtMulti = dt.splitByRow(['Origin', 'Cylinders'])\n     *  console.log(splitDtMulti));\n     * // This should give DataModel instances for all unique combinations of Origin and Cylinder values\n     *\n     * @example\n     * // with predicate function:\n     * const splitWithPredDt = dt.select(['Origin'], fields => fields.Origin.value === \"USA\")\n     * console.log(splitWithPredDt);\n     * // This should not include the DataModel for the Origin : 'USA'\n     *\n     *\n     * @public\n     *\n     * @param {Array} dimensionArr - Set of dimensions based on which the split should occur\n     * @param {Object} config - The configuration object\n     * @param {string} [config.saveChild] - Configuration to save child or not\n     * @param {string}[config.mode=FilteringMode.NORMAL] -The mode of the selection.\n     * @return {Array}  Returns the new DataModel instances after operation.\n     */\n    splitByRow (dimensionArr, reducerFn, config) {\n        const fieldsConfig = this.getFieldsConfig();\n\n        dimensionArr.forEach((fieldName) => {\n            if (!fieldsConfig[fieldName]) {\n                throw new Error(`Field ${fieldName} doesn't exist in the schema`);\n            }\n        });\n\n        const defConfig = {\n            mode: FilteringMode.NORMAL,\n            saveChild: true\n        };\n\n        config = Object.assign({}, defConfig, config);\n\n        return splitWithSelect(this, dimensionArr, reducerFn, config);\n    }\n\n    /**\n     * Creates a set of new {@link DataModel} instances by splitting the set of fields in the source {@link DataModel}\n     * instance based on a set of common and unique field names provided.\n     *\n     * Each DataModel created contains a set of fields which are common to all and a set of unique fields.\n     * It also accepts configurations such as saveChild and mode(inverse or normal) to include/exclude the respective\n     * fields\n     *\n     * @example\n     *  // without predicate function:\n     *  const splitDt = dt.splitByColumn( [['Acceleration'], ['Horsepower']], ['Origin'])\n     *  console.log(splitDt));\n     * // This should give two unique DataModel instances, both having the field 'Origin' and\n     * // one each having 'Acceleration' and 'Horsepower' fields respectively\n     *\n     * @example\n     *  // without predicate function:\n     *  const splitDtInv = dt.splitByColumn( [['Acceleration'], ['Horsepower'],['Origin', 'Cylinders'],\n     *                           {mode: 'inverse'})\n     *  console.log(splitDtInv));\n     * // This should give DataModel instances in the following way:\n     * // All DataModel Instances do not have the fields 'Origin' and 'Cylinders'\n     * // One DataModel Instance has rest of the fields except 'Acceleration' and the other DataModel instance\n     * // has rest of the fields except 'Horsepower'\n     *\n     *\n     *\n     * @public\n     *\n     * @param {Array} uniqueFields - Set of unique fields included in each datamModel instance\n     * @param {Array} commonFields - Set of common fields included in all datamModel instances\n     * @param {Object} config - The configuration object\n     * @param {string} [config.saveChild] - Configuration to save child or not\n     * @param {string}[config.mode=FilteringMode.NORMAL] -The mode of the selection.\n     * @return {Array}  Returns the new DataModel instances after operation.\n     */\n    splitByColumn (uniqueFields = [], commonFields = [], config) {\n        const defConfig = {\n            mode: FilteringMode.NORMAL,\n            saveChild: true\n        };\n        const fieldConfig = this.getFieldsConfig();\n        const allFields = Object.keys(fieldConfig);\n        const normalizedProjFieldSets = [[commonFields]];\n\n        config = Object.assign({}, defConfig, config);\n        uniqueFields = uniqueFields.length ? uniqueFields : [[]];\n\n\n        uniqueFields.forEach((fieldSet, i) => {\n            normalizedProjFieldSets[i] = getNormalizedProFields(\n                [...fieldSet, ...commonFields],\n                allFields,\n                fieldConfig);\n        });\n\n        return splitWithProject(this, normalizedProjFieldSets, config, allFields);\n    }\n\n\n}\n\nexport default DataModel;\n","import { DataFormat } from './enums';\n\nexport default {\n    dataFormat: DataFormat.AUTO\n};\n","/**\n * DataFormat Enum defines the format of the input data.\n * Based on the format of the data the respective adapter is loaded.\n *\n * @readonly\n * @enum {string}\n */\nconst DataFormat = {\n    FLAT_JSON: 'FlatJSON',\n    DSV_STR: 'DSVStr',\n    DSV_ARR: 'DSVArr',\n    AUTO: 'Auto'\n};\n\nexport default DataFormat;\n","/**\n * DimensionSubtype enum defines the sub types of the Dimensional Field.\n *\n * @readonly\n * @enum {string}\n */\nconst DimensionSubtype = {\n    CATEGORICAL: 'categorical',\n    TEMPORAL: 'temporal',\n    GEO: 'geo',\n    BINNED: 'binned'\n};\n\nexport default DimensionSubtype;\n","/**\n * FieldType enum defines the high level field based on which visuals are controlled.\n * Measure in a high level is numeric field and Dimension in a high level is string field.\n *\n * @readonly\n * @enum {string}\n */\nconst FieldType = {\n    MEASURE: 'measure',\n    DIMENSION: 'dimension'\n};\n\nexport default FieldType;\n","/**\n * Filtering mode enum defines the filering modes of DataModel.\n *\n * @readonly\n * @enum {string}\n */\nconst FilteringMode = {\n    NORMAL: 'normal',\n    INVERSE: 'inverse',\n    ALL: 'all'\n};\n\nexport default FilteringMode;\n","/**\n * Group by function names\n *\n * @readonly\n * @enum {string}\n */\nconst GROUP_BY_FUNCTIONS = {\n    SUM: 'sum',\n    AVG: 'avg',\n    MIN: 'min',\n    MAX: 'max',\n    FIRST: 'first',\n    LAST: 'last',\n    COUNT: 'count',\n    STD: 'std'\n};\n\nexport default GROUP_BY_FUNCTIONS;\n","/**\n * FilteringMode determines if resultant DataModel should be created from selection set or rejection set.\n *\n * The following modes are available\n * - `NORMAL`: Only entries from selection set are included in the resulatant DataModel instance\n * - `INVERSE`: Only entries from rejection set are included in the resulatant DataModel instance\n * - ALL: Both the entries from selection and rejection set are returned in two different DataModel instance\n */\n\nexport { default as DataFormat } from './data-format';\nexport { default as DimensionSubtype } from './dimension-subtype';\nexport { default as MeasureSubtype } from './measure-subtype';\nexport { default as FieldType } from './field-type';\nexport { default as FilteringMode } from './filtering-mode';\nexport { default as GROUP_BY_FUNCTIONS } from './group-by-functions';\n","/**\n * MeasureSubtype enum defines the sub types of the Measure Field.\n *\n * @readonly\n * @enum {string}\n */\nconst MeasureSubtype = {\n    CONTINUOUS: 'continuous'\n};\n\nexport default MeasureSubtype;\n","import DataModel from './datamodel';\nimport {\n  compose,\n  bin,\n  select,\n  project,\n  groupby as groupBy,\n  calculateVariable,\n  sort,\n  crossProduct,\n  difference,\n  naturalJoin,\n  leftOuterJoin,\n  rightOuterJoin,\n  fullOuterJoin,\n  union\n} from './operator';\nimport * as Stats from './stats';\nimport * as enums from './enums';\nimport { DateTimeFormatter } from './utils';\nimport { DataFormat, FilteringMode, DM_DERIVATIVES } from './constants';\nimport InvalidAwareTypes from './invalid-aware-types';\nimport pkg from '../package.json';\n\nconst Operators = {\n    compose,\n    bin,\n    select,\n    project,\n    groupBy,\n    calculateVariable,\n    sort,\n    crossProduct,\n    difference,\n    naturalJoin,\n    leftOuterJoin,\n    rightOuterJoin,\n    fullOuterJoin,\n    union\n};\n\nconst version = pkg.version;\nObject.assign(DataModel, {\n    Operators,\n    Stats,\n    DM_DERIVATIVES,\n    DateTimeFormatter,\n    DataFormat,\n    FilteringMode,\n    InvalidAwareTypes,\n    version\n}, enums);\n\nexport default DataModel;\n","import { FieldType, DimensionSubtype, MeasureSubtype } from './enums';\nimport {\n    Categorical,\n    Temporal,\n    Binned,\n    Continuous,\n    CategoricalParser,\n    TemporalParser,\n    BinnedParser,\n    ContinuousParser,\n    PartialField\n} from './fields';\n\n/**\n * Creates a field instance according to the provided data and schema.\n *\n * @param {Array} data - The field data array.\n * @param {Object} schema - The field schema object.\n * @return {Field} Returns the newly created field instance.\n */\nfunction createUnitField(data, schema) {\n    data = data || [];\n    let partialField;\n\n    switch (schema.type) {\n    case FieldType.MEASURE:\n        switch (schema.subtype) {\n        case MeasureSubtype.CONTINUOUS:\n            partialField = new PartialField(schema.name, data, schema, new ContinuousParser());\n            return new Continuous(partialField, `0-${data.length - 1}`);\n        default:\n            partialField = new PartialField(schema.name, data, schema, new ContinuousParser());\n            return new Continuous(partialField, `0-${data.length - 1}`);\n        }\n    case FieldType.DIMENSION:\n        switch (schema.subtype) {\n        case DimensionSubtype.CATEGORICAL:\n            partialField = new PartialField(schema.name, data, schema, new CategoricalParser());\n            return new Categorical(partialField, `0-${data.length - 1}`);\n        case DimensionSubtype.TEMPORAL:\n            partialField = new PartialField(schema.name, data, schema, new TemporalParser(schema));\n            return new Temporal(partialField, `0-${data.length - 1}`);\n        case DimensionSubtype.BINNED:\n            partialField = new PartialField(schema.name, data, schema, new BinnedParser());\n            return new Binned(partialField, `0-${data.length - 1}`);\n        default:\n            partialField = new PartialField(schema.name, data, schema, new CategoricalParser());\n            return new Categorical(partialField, `0-${data.length - 1}`);\n        }\n    default:\n        partialField = new PartialField(schema.name, data, schema, new CategoricalParser());\n        return new Categorical(partialField, `0-${data.length - 1}`);\n    }\n}\n\n\n/**\n * Creates a field instance from partialField and rowDiffset.\n *\n * @param {PartialField} partialField - The corresponding partial field.\n * @param {string} rowDiffset - The data subset config.\n * @return {Field} Returns the newly created field instance.\n */\nexport function createUnitFieldFromPartial(partialField, rowDiffset) {\n    const { schema } = partialField;\n\n    switch (schema.type) {\n    case FieldType.MEASURE:\n        switch (schema.subtype) {\n        case MeasureSubtype.CONTINUOUS:\n            return new Continuous(partialField, rowDiffset);\n        default:\n            return new Continuous(partialField, rowDiffset);\n        }\n    case FieldType.DIMENSION:\n        switch (schema.subtype) {\n        case DimensionSubtype.CATEGORICAL:\n            return new Categorical(partialField, rowDiffset);\n        case DimensionSubtype.TEMPORAL:\n            return new Temporal(partialField, rowDiffset);\n        case DimensionSubtype.BINNED:\n            return new Binned(partialField, rowDiffset);\n        default:\n            return new Categorical(partialField, rowDiffset);\n        }\n    default:\n        return new Categorical(partialField, rowDiffset);\n    }\n}\n\n/**\n * Creates the field instances with input data and schema.\n *\n * @param {Array} dataColumn - The data array for fields.\n * @param {Array} schema - The schema array for fields.\n * @param {Array} headers - The array of header names.\n * @return {Array.<Field>} Returns an array of newly created field instances.\n */\nexport function createFields(dataColumn, schema, headers) {\n    const headersObj = {};\n\n    if (!(headers && headers.length)) {\n        headers = schema.map(item => item.name);\n    }\n\n    headers.forEach((header, i) => {\n        headersObj[header] = i;\n    });\n\n    return schema.map(item => createUnitField(dataColumn[headersObj[item.name]], item));\n}\n","import { FieldType } from './enums';\nimport { getUniqueId } from './utils';\n\nconst fieldStore = {\n    data: {},\n\n    createNamespace (fieldArr, name) {\n        const dataId = name || getUniqueId();\n\n        this.data[dataId] = {\n            name: dataId,\n            fields: fieldArr,\n\n            fieldsObj () {\n                let fieldsObj = this._cachedFieldsObj;\n\n                if (!fieldsObj) {\n                    fieldsObj = this._cachedFieldsObj = {};\n                    this.fields.forEach((field) => {\n                        fieldsObj[field.name()] = field;\n                    });\n                }\n                return fieldsObj;\n            },\n            getMeasure () {\n                let measureFields = this._cachedMeasure;\n\n                if (!measureFields) {\n                    measureFields = this._cachedMeasure = {};\n                    this.fields.forEach((field) => {\n                        if (field.schema().type === FieldType.MEASURE) {\n                            measureFields[field.name()] = field;\n                        }\n                    });\n                }\n                return measureFields;\n            },\n            getDimension () {\n                let dimensionFields = this._cachedDimension;\n\n                if (!this._cachedDimension) {\n                    dimensionFields = this._cachedDimension = {};\n                    this.fields.forEach((field) => {\n                        if (field.schema().type === FieldType.DIMENSION) {\n                            dimensionFields[field.name()] = field;\n                        }\n                    });\n                }\n                return dimensionFields;\n            },\n        };\n        return this.data[dataId];\n    },\n};\n\nexport default fieldStore;\n","import Dimension from '../dimension';\n\n/**\n * Represents binned field subtype.\n *\n * @public\n * @class\n * @extends Dimension\n */\nexport default class Binned extends Dimension {\n    /**\n     * Calculates the corresponding field domain.\n     *\n     * @public\n     * @override\n     * @return {Array} Returns the last and first values of bins config array.\n     */\n    calculateDataDomain () {\n        const binsArr = this.partialField.schema.bins;\n        return [binsArr[0], binsArr[binsArr.length - 1]];\n    }\n\n    /**\n     * Returns the bins config provided while creating the field instance.\n     *\n     * @public\n     * @return {Array} Returns the bins array config.\n     */\n    bins () {\n        return this.partialField.schema.bins;\n    }\n}\n","import { rowDiffsetIterator } from '../../operator/row-diffset-iterator';\nimport { DimensionSubtype } from '../../enums';\nimport Dimension from '../dimension';\n/**\n * Represents categorical field subtype.\n *\n * @public\n * @class\n * @extends Dimension\n */\nexport default class Categorical extends Dimension {\n    /**\n     * Returns the subtype of the field.\n     *\n     * @public\n     * @override\n     * @return {string} Returns the subtype of the field.\n     */\n    subtype () {\n        return DimensionSubtype.CATEGORICAL;\n    }\n\n    /**\n     * Calculates the corresponding field domain.\n     *\n     * @public\n     * @override\n     * @return {Array} Returns the unique values.\n     */\n    calculateDataDomain () {\n        const hash = new Set();\n        const domain = [];\n\n        // here don't use this.data() as the iteration will be occurred two times on same data.\n        rowDiffsetIterator(this.rowDiffset, (i) => {\n            const datum = this.partialField.data[i];\n            if (!hash.has(datum)) {\n                hash.add(datum);\n                domain.push(datum);\n            }\n        });\n        return domain;\n    }\n}\n","import { rowDiffsetIterator } from '../../operator/row-diffset-iterator';\nimport { MeasureSubtype } from '../../enums';\nimport Measure from '../measure';\nimport InvalidAwareTypes from '../../invalid-aware-types';\n\n/**\n * Represents continuous field subtype.\n *\n * @public\n * @class\n * @extends Measure\n */\nexport default class Continuous extends Measure {\n    /**\n     * Returns the subtype of the field.\n     *\n     * @public\n     * @override\n     * @return {string} Returns the subtype of the field.\n     */\n    subtype () {\n        return MeasureSubtype.CONTINUOUS;\n    }\n\n    /**\n     * Calculates the corresponding field domain.\n     *\n     * @public\n     * @override\n     * @return {Array} Returns the min and max values.\n     */\n    calculateDataDomain () {\n        let min = Number.POSITIVE_INFINITY;\n        let max = Number.NEGATIVE_INFINITY;\n\n        // here don't use this.data() as the iteration will be occurred two times on same data.\n        rowDiffsetIterator(this.rowDiffset, (i) => {\n            const datum = this.partialField.data[i];\n            if (datum instanceof InvalidAwareTypes) {\n                return;\n            }\n\n            if (datum < min) {\n                min = datum;\n            }\n            if (datum > max) {\n                max = datum;\n            }\n        });\n\n        return [min, max];\n    }\n}\n","import Field from '../field';\n\n/**\n * Represents dimension field type.\n *\n * @public\n * @class\n * @extends Field\n */\nexport default class Dimension extends Field {\n    /**\n     * Returns the domain for the dimension field.\n     *\n     * @override\n     * @public\n     * @return {any} Returns the calculated domain.\n     */\n    domain () {\n        if (!this._cachedDomain) {\n            this._cachedDomain = this.calculateDataDomain();\n        }\n        return this._cachedDomain;\n    }\n\n    /**\n     * Calculates the corresponding field domain.\n     *\n     * @public\n     * @abstract\n     */\n    calculateDataDomain () {\n        throw new Error('Not yet implemented');\n    }\n\n     /**\n     * Returns the formatted version of the underlying field data.\n     *\n     * @public\n     * @override\n     * @return {Array} Returns the formatted data.\n     */\n    formattedData () {\n        return this.data();\n    }\n}\n","import { rowDiffsetIterator } from '../../operator/row-diffset-iterator';\n\n/**\n * In {@link DataModel}, every tabular data consists of column, a column is stored as field.\n * Field contains all the data for a given column in an array.\n *\n * Each record consists of several fields; the fields of all records form the columns.\n * Examples of fields: name, gender, sex etc.\n *\n * In DataModel, each field can have multiple attributes which describes its data and behaviour.\n * A field can have two types of data: Measure and Dimension.\n *\n * A Dimension Field is the context on which a data is categorized and the measure is the numerical values that\n * quantify the data set.\n * In short a dimension is the lens through which you are looking at your measure data.\n *\n * Refer to {@link Schema} to get info about possible field attributes.\n *\n * @public\n * @class\n */\nexport default class Field {\n    /**\n     * Initialize a new instance.\n     *\n     * @public\n     * @param {PartialField} partialField - The partialField instance which holds the whole data.\n     * @param {string} rowDiffset - The data subset definition.\n     */\n    constructor (partialField, rowDiffset) {\n        this.partialField = partialField;\n        this.rowDiffset = rowDiffset;\n    }\n\n    /**\n     * Generates the field type specific domain.\n     *\n     * @public\n     * @abstract\n     */\n    domain () {\n        throw new Error('Not yet implemented');\n    }\n\n    /**\n     * Returns the the field schema.\n     *\n     * @public\n     * @return {string} Returns the field schema.\n     */\n    schema () {\n        return this.partialField.schema;\n    }\n\n    /**\n     * Returns the name of the field.\n     *\n     * @public\n     * @return {string} Returns the name of the field.\n     */\n    name () {\n        return this.partialField.name;\n    }\n\n    /**\n     * Returns the type of the field.\n     *\n     * @public\n     * @return {string} Returns the type of the field.\n     */\n    type () {\n        return this.partialField.schema.type;\n    }\n\n    /**\n     * Returns the subtype of the field.\n     *\n     * @public\n     * @return {string} Returns the subtype of the field.\n     */\n    subtype () {\n        return this.partialField.schema.subtype;\n    }\n\n    /**\n     * Returns the description of the field.\n     *\n     * @public\n     * @return {string} Returns the description of the field.\n     */\n    description () {\n        return this.partialField.schema.description;\n    }\n\n    /**\n     * Returns the display name of the field.\n     *\n     * @public\n     * @return {string} Returns the display name of the field.\n     */\n    displayName () {\n        return this.partialField.schema.displayName || this.partialField.schema.name;\n    }\n\n    /**\n     * Returns the data associated with the field.\n     *\n     * @public\n     * @return {Array} Returns the data.\n     */\n    data () {\n        const data = [];\n        rowDiffsetIterator(this.rowDiffset, (i) => {\n            data.push(this.partialField.data[i]);\n        });\n        return data;\n    }\n\n    /**\n     * Returns the formatted version of the underlying field data.\n     *\n     * @public\n     * @abstract\n     */\n    formattedData () {\n        throw new Error('Not yet implemented');\n    }\n}\n","export { default as Field } from './field';\nexport { default as Dimension } from './dimension';\nexport { default as Categorical } from './categorical';\nexport { default as Temporal } from './temporal';\nexport { default as Binned } from './binned';\nexport { default as Measure } from './measure';\nexport { default as Continuous } from './continuous';\nexport { default as FieldParser } from './parsers/field-parser';\nexport { default as CategoricalParser } from './parsers/categorical-parser';\nexport { default as TemporalParser } from './parsers/temporal-parser';\nexport { default as BinnedParser } from './parsers/binned-parser';\nexport { default as ContinuousParser } from './parsers/continuous-parser';\nexport { default as PartialField } from './partial-field';\n","import { formatNumber } from '../../utils';\nimport { defaultReducerName } from '../../operator/group-by-function';\nimport Field from '../field';\n\n/**\n * Represents measure field type.\n *\n * @public\n * @class\n * @extends Field\n */\nexport default class Measure extends Field {\n  /**\n   * Returns the domain for the measure field.\n   *\n   * @override\n   * @public\n   * @return {any} Returns the calculated domain.\n   */\n    domain () {\n        if (!this._cachedDomain) {\n            this._cachedDomain = this.calculateDataDomain();\n        }\n        return this._cachedDomain;\n    }\n\n  /**\n   * Returns the unit of the measure field.\n   *\n   * @public\n   * @return {string} Returns unit of the field.\n   */\n    unit () {\n        return this.partialField.schema.unit;\n    }\n\n  /**\n   * Returns the aggregation function name of the measure field.\n   *\n   * @public\n   * @return {string} Returns aggregation function name of the field.\n   */\n    defAggFn () {\n        return this.partialField.schema.defAggFn || defaultReducerName;\n    }\n\n  /**\n   * Returns the number format of the measure field.\n   *\n   * @public\n   * @return {Function} Returns number format of the field.\n   */\n    numberFormat () {\n        const { numberFormat } = this.partialField.schema;\n        return numberFormat instanceof Function ? numberFormat : formatNumber;\n    }\n\n  /**\n   * Calculates the corresponding field domain.\n   *\n   * @public\n   * @abstract\n   */\n    calculateDataDomain () {\n        throw new Error('Not yet implemented');\n    }\n\n    /**\n     * Returns the formatted version of the underlying field data.\n     *\n     * @public\n     * @override\n     * @return {Array} Returns the formatted data.\n     */\n    formattedData () {\n        return this.data();\n    }\n}\n","import FieldParser from '../field-parser';\nimport InvalidAwareTypes from '../../../invalid-aware-types';\n\n/**\n * A FieldParser which parses the binned values.\n *\n * @public\n * @class\n * @implements {FieldParser}\n */\nexport default class BinnedParser extends FieldParser {\n  /**\n   * Parses a single binned value of a field and returns the sanitized value.\n   *\n   * @public\n   * @param {string} val - The value of the field.\n   * @return {string} Returns the sanitized value.\n   */\n    parse (val) {\n        const regex = /^\\s*([+-]?\\d+(?:\\.\\d+)?)\\s*-\\s*([+-]?\\d+(?:\\.\\d+)?)\\s*$/;\n        val = String(val);\n        let result;\n        // check if invalid date value\n        if (!InvalidAwareTypes.isInvalid(val)) {\n            let matched = val.match(regex);\n            result = matched ? `${Number.parseFloat(matched[1])}-${Number.parseFloat(matched[2])}`\n                             : InvalidAwareTypes.NA;\n        } else {\n            result = InvalidAwareTypes.getInvalidType(val);\n        }\n        return result;\n    }\n}\n","import FieldParser from '../field-parser';\nimport InvalidAwareTypes from '../../../invalid-aware-types';\n\n/**\n * A FieldParser which parses the categorical values.\n *\n * @public\n * @class\n * @implements {FieldParser}\n */\nexport default class CategoricalParser extends FieldParser {\n  /**\n   * Parses a single value of a field and returns the stringified form.\n   *\n   * @public\n   * @param {string|number} val - The value of the field.\n   * @return {string} Returns the stringified value.\n   */\n    parse (val) {\n        let result;\n        // check if invalid date value\n        if (!InvalidAwareTypes.isInvalid(val)) {\n            result = String(val).trim();\n        } else {\n            result = InvalidAwareTypes.getInvalidType(val);\n        }\n        return result;\n    }\n}\n","import FieldParser from '../field-parser';\nimport InvalidAwareTypes from '../../../invalid-aware-types';\n\n/**\n * A FieldParser which parses the continuous values.\n *\n * @public\n * @class\n * @implements {FieldParser}\n */\nexport default class ContinuousParser extends FieldParser {\n  /**\n   * Parses a single value of a field and returns the number form.\n   *\n   * @public\n   * @param {string|number} val - The value of the field.\n   * @return {string} Returns the number value.\n   */\n    parse (val) {\n        let result;\n        // check if invalid date value\n        if (!InvalidAwareTypes.isInvalid(val)) {\n            let parsedVal = parseFloat(val, 10);\n            result = Number.isNaN(parsedVal) ? InvalidAwareTypes.NA : parsedVal;\n        } else {\n            result = InvalidAwareTypes.getInvalidType(val);\n        }\n        return result;\n    }\n}\n","/**\n * A interface to represent a parser which is responsible to parse the field.\n *\n * @public\n * @interface\n */\nexport default class FieldParser {\n    /**\n     * Parses a single value of a field and return the sanitized form.\n     *\n     * @public\n     * @abstract\n     */\n    parse () {\n        throw new Error('Not yet implemented');\n    }\n}\n","import { DateTimeFormatter } from '../../../utils';\nimport FieldParser from '../field-parser';\nimport InvalidAwareTypes from '../../../invalid-aware-types';\n\n/**\n * A FieldParser which parses the temporal values.\n *\n * @public\n * @class\n * @implements {FieldParser}\n */\nexport default class TemporalParser extends FieldParser {\n    /**\n     * Initialize a new instance.\n     *\n     * @public\n     * @param {Object} schema - The schema object for the corresponding field.\n     */\n    constructor (schema) {\n        super();\n        this.schema = schema;\n        this._dtf = new DateTimeFormatter(this.schema.format);\n    }\n\n    /**\n     * Parses a single value of a field and returns the millisecond value.\n     *\n     * @public\n     * @param {string|number} val - The value of the field.\n     * @return {number} Returns the millisecond value.\n     */\n    parse (val) {\n        let result;\n        // check if invalid date value\n        if (!InvalidAwareTypes.isInvalid(val)) {\n            let nativeDate = this._dtf.getNativeDate(val);\n            result = nativeDate ? nativeDate.getTime() : InvalidAwareTypes.NA;\n        } else {\n            result = InvalidAwareTypes.getInvalidType(val);\n        }\n        return result;\n    }\n}\n","/**\n * Stores the full data and the metadata of a field. It provides\n * a single source of data from which the future Field\n * instance can get a subset of it with a rowDiffset config.\n *\n * @class\n * @public\n */\nexport default class PartialField {\n    /**\n     * Initialize a new instance.\n     *\n     * @public\n     * @param {string} name - The name of the field.\n     * @param {Array} data - The data array.\n     * @param {Object} schema - The schema object of the corresponding field.\n     * @param {FieldParser} parser - The parser instance corresponding to that field.\n     */\n    constructor (name, data, schema, parser) {\n        this.name = name;\n        this.schema = schema;\n        this.parser = parser;\n        this.data = this._sanitize(data);\n    }\n\n    /**\n     * Sanitizes the field data.\n     *\n     * @private\n     * @param {Array} data - The actual input data.\n     * @return {Array} Returns the sanitized data.\n     */\n    _sanitize (data) {\n        return data.map(datum => this.parser.parse(datum));\n    }\n}\n","import { rowDiffsetIterator } from '../../operator/row-diffset-iterator';\nimport Dimension from '../dimension';\nimport { DateTimeFormatter } from '../../utils';\nimport InvalidAwareTypes from '../../invalid-aware-types';\n\n/**\n * Represents temporal field subtype.\n *\n * @public\n * @class\n * @extends Dimension\n */\nexport default class Temporal extends Dimension {\n     /**\n     * Initialize a new instance.\n     *\n     * @public\n     * @param {PartialField} partialField - The partialField instance which holds the whole data.\n     * @param {string} rowDiffset - The data subset definition.\n     */\n    constructor (partialField, rowDiffset) {\n        super(partialField, rowDiffset);\n\n        this._cachedMinDiff = null;\n    }\n\n     /**\n     * Calculates the corresponding field domain.\n     *\n     * @public\n     * @override\n     * @return {Array} Returns the unique values.\n     */\n    calculateDataDomain () {\n        const hash = new Set();\n        const domain = [];\n\n        // here don't use this.data() as the iteration will be\n        // occurred two times on same data.\n        rowDiffsetIterator(this.rowDiffset, (i) => {\n            const datum = this.partialField.data[i];\n            if (!hash.has(datum)) {\n                hash.add(datum);\n                domain.push(datum);\n            }\n        });\n\n        return domain;\n    }\n\n\n    /**\n     * Calculates the minimum consecutive difference from the associated field data.\n     *\n     * @public\n     * @return {number} Returns the minimum consecutive diff in milliseconds.\n     */\n    minimumConsecutiveDifference () {\n        if (this._cachedMinDiff) {\n            return this._cachedMinDiff;\n        }\n\n        const sortedData = this.data().filter(item => !(item instanceof InvalidAwareTypes)).sort((a, b) => a - b);\n        const arrLn = sortedData.length;\n        let minDiff = Number.POSITIVE_INFINITY;\n        let prevDatum;\n        let nextDatum;\n        let processedCount = 0;\n\n        for (let i = 1; i < arrLn; i++) {\n            prevDatum = sortedData[i - 1];\n            nextDatum = sortedData[i];\n\n            if (nextDatum === prevDatum) {\n                continue;\n            }\n\n            minDiff = Math.min(minDiff, nextDatum - sortedData[i - 1]);\n            processedCount++;\n        }\n\n        if (!processedCount) {\n            minDiff = null;\n        }\n        this._cachedMinDiff = minDiff;\n\n        return this._cachedMinDiff;\n    }\n\n    /**\n     * Returns the format specified in the input schema while creating field.\n     *\n     * @public\n     * @return {string} Returns the datetime format.\n     */\n    format () {\n        return this.partialField.schema.format;\n    }\n\n    /**\n     * Returns the formatted version of the underlying field data\n     * If data is of type invalid or has missing format use the raw value\n     * @public\n     * @override\n     * @return {Array} Returns the formatted data.\n     */\n    formattedData () {\n        const data = [];\n        const dataFormat = this.format();\n\n        rowDiffsetIterator(this.rowDiffset, (i) => {\n            const datum = this.partialField.data[i];\n            // If value is of invalid type or format is missing\n            if (InvalidAwareTypes.isInvalid(datum) || (!dataFormat && Number.isFinite(datum))) {\n                // Use the invalid map value or the raw value\n                const parsedDatum = InvalidAwareTypes.getInvalidType(datum) || datum;\n                data.push(parsedDatum);\n            } else {\n                data.push(DateTimeFormatter.formatAs(datum, dataFormat));\n            }\n        });\n        return data;\n    }\n}\n\n","import { FieldType, FilteringMode, DimensionSubtype, MeasureSubtype, DataFormat } from './enums';\nimport fieldStore from './field-store';\nimport Value from './value';\nimport {\n    rowDiffsetIterator\n} from './operator';\nimport { DM_DERIVATIVES, LOGICAL_OPERATORS } from './constants';\nimport { createFields, createUnitFieldFromPartial } from './field-creator';\nimport defaultConfig from './default-config';\nimport * as converter from './converter';\nimport { extend2, detectDataFormat } from './utils';\n\n/**\n * Prepares the selection data.\n */\nfunction prepareSelectionData (fields, formattedData, rawData, i) {\n    const resp = {};\n\n    for (const [key, field] of fields.entries()) {\n        resp[field.name()] = new Value(formattedData[key][i], rawData[key][i], field);\n    }\n    return resp;\n}\n\nexport function prepareJoinData (fields) {\n    const resp = {};\n\n    for (const key in fields) {\n        resp[key] = new Value(fields[key].formattedValue, fields[key].rawValue, key);\n    }\n    return resp;\n}\n\nexport const updateFields = ([rowDiffset, colIdentifier], partialFieldspace, fieldStoreName) => {\n    let collID = colIdentifier.length ? colIdentifier.split(',') : [];\n    let partialFieldMap = partialFieldspace.fieldsObj();\n    let newFields = collID.map(coll => createUnitFieldFromPartial(partialFieldMap[coll].partialField, rowDiffset));\n    return fieldStore.createNamespace(newFields, fieldStoreName);\n};\n\nexport const persistCurrentDerivation = (model, operation, config = {}, criteriaFn) => {\n    if (operation === DM_DERIVATIVES.COMPOSE) {\n        model._derivation.length = 0;\n        model._derivation.push(...criteriaFn);\n    } else {\n        model._derivation.push({\n            op: operation,\n            meta: config,\n            criteria: criteriaFn\n        });\n    }\n};\nexport const persistAncestorDerivation = (sourceDm, newDm) => {\n    newDm._ancestorDerivation.push(...sourceDm._ancestorDerivation, ...sourceDm._derivation);\n};\n\nexport const persistDerivations = (sourceDm, model, operation, config = {}, criteriaFn) => {\n    persistCurrentDerivation(model, operation, config, criteriaFn);\n    persistAncestorDerivation(sourceDm, model);\n};\n\nconst selectModeMap = {\n    [FilteringMode.NORMAL]: {\n        diffIndex: ['rowDiffset'],\n        calcDiff: [true, false]\n    },\n    [FilteringMode.INVERSE]: {\n        diffIndex: ['rejectRowDiffset'],\n        calcDiff: [false, true]\n    },\n    [FilteringMode.ALL]: {\n        diffIndex: ['rowDiffset', 'rejectRowDiffset'],\n        calcDiff: [true, true]\n    }\n};\n\nconst generateRowDiffset = (rowDiffset, i, lastInsertedValue) => {\n    if (lastInsertedValue !== -1 && i === (lastInsertedValue + 1)) {\n        const li = rowDiffset.length - 1;\n\n        rowDiffset[li] = `${rowDiffset[li].split('-')[0]}-${i}`;\n    } else {\n        rowDiffset.push(`${i}`);\n    }\n};\n\nexport const selectRowDiffsetIterator = (rowDiffset, checker, mode) => {\n    let lastInsertedValueSel = -1;\n    let lastInsertedValueRej = -1;\n    const newRowDiffSet = [];\n    const rejRowDiffSet = [];\n\n    const [shouldSelect, shouldReject] = selectModeMap[mode].calcDiff;\n\n    rowDiffsetIterator(rowDiffset, (i) => {\n        const checkerResult = checker(i);\n        checkerResult && shouldSelect && generateRowDiffset(newRowDiffSet, i, lastInsertedValueSel);\n        !checkerResult && shouldReject && generateRowDiffset(rejRowDiffSet, i, lastInsertedValueRej);\n    });\n    return {\n        rowDiffset: newRowDiffSet.join(','),\n        rejectRowDiffset: rejRowDiffSet.join(',')\n    };\n};\n\n\nexport const rowSplitDiffsetIterator = (rowDiffset, checker, mode, dimensionArr, fieldStoreObj) => {\n    let lastInsertedValue = {};\n    const splitRowDiffset = {};\n    const dimensionMap = {};\n\n    rowDiffsetIterator(rowDiffset, (i) => {\n        if (checker(i)) {\n            let hash = '';\n\n            let dimensionSet = { keys: {} };\n\n            dimensionArr.forEach((_) => {\n                const data = fieldStoreObj[_].partialField.data[i];\n                hash = `${hash}-${data}`;\n                dimensionSet.keys[_] = data;\n            });\n\n            if (splitRowDiffset[hash] === undefined) {\n                splitRowDiffset[hash] = [];\n                lastInsertedValue[hash] = -1;\n                dimensionMap[hash] = dimensionSet;\n            }\n\n            generateRowDiffset(splitRowDiffset[hash], i, lastInsertedValue[hash]);\n            lastInsertedValue[hash] = i;\n        }\n    });\n\n    return {\n        splitRowDiffset,\n        dimensionMap\n    };\n};\n\n\nexport const selectHelper = (clonedDm, selectFn, config, sourceDm, iterator) => {\n    let cachedStore = {};\n    let cloneProvider = () => sourceDm.detachedRoot();\n    const { mode } = config;\n    const rowDiffset = clonedDm._rowDiffset;\n    const fields = clonedDm.getPartialFieldspace().fields;\n    const formattedFieldsData = fields.map(field => field.formattedData());\n    const rawFieldsData = fields.map(field => field.data());\n\n    const selectorHelperFn = index => selectFn(\n        prepareSelectionData(fields, formattedFieldsData, rawFieldsData, index),\n        index,\n        cloneProvider,\n        cachedStore\n    );\n\n    return iterator(rowDiffset, selectorHelperFn, mode);\n};\n\nexport const cloneWithAllFields = (model) => {\n    const clonedDm = model.clone(false);\n    const partialFieldspace = model.getPartialFieldspace();\n    clonedDm._colIdentifier = partialFieldspace.fields.map(f => f.name()).join(',');\n\n    // flush out cached namespace values on addition of new fields\n    partialFieldspace._cachedFieldsObj = null;\n    partialFieldspace._cachedDimension = null;\n    partialFieldspace._cachedMeasure = null;\n    clonedDm.__calculateFieldspace().calculateFieldsConfig();\n\n    return clonedDm;\n};\n\nconst getKey = (arr, data, fn) => {\n    let key = fn(arr, data, 0);\n\n    for (let i = 1, len = arr.length; i < len; i++) {\n        key = `${key},${fn(arr, data, i)}`;\n    }\n    return key;\n};\n\nexport const filterPropagationModel = (model, propModels, config = {}) => {\n    let fns = [];\n    const operation = config.operation || LOGICAL_OPERATORS.AND;\n    const filterByMeasure = config.filterByMeasure || false;\n    const clonedModel = cloneWithAllFields(model);\n    const modelFieldsConfig = clonedModel.getFieldsConfig();\n\n    if (!propModels.length) {\n        fns = [() => false];\n    } else {\n        fns = propModels.map(propModel => ((dataModel) => {\n            let keyFn;\n            const dataObj = dataModel.getData();\n            const fieldsConfig = dataModel.getFieldsConfig();\n            const dimensions = Object.keys(dataModel.getFieldspace().getDimension())\n                .filter(d => d in modelFieldsConfig);\n            const dLen = dimensions.length;\n            const indices = dimensions.map(d =>\n                fieldsConfig[d].index);\n            const measures = Object.keys(dataModel.getFieldspace().getMeasure())\n                .filter(d => d in modelFieldsConfig);\n            const fieldsSpace = dataModel.getFieldspace().fieldsObj();\n            const data = dataObj.data;\n            const domain = measures.reduce((acc, v) => {\n                acc[v] = fieldsSpace[v].domain();\n                return acc;\n            }, {});\n            const valuesMap = {};\n\n            keyFn = (arr, row, idx) => row[arr[idx]];\n            if (dLen) {\n                data.forEach((row) => {\n                    const key = getKey(indices, row, keyFn);\n                    valuesMap[key] = 1;\n                });\n            }\n\n            keyFn = (arr, fields, idx) => fields[arr[idx]].internalValue;\n            return data.length ? (fields) => {\n                const present = dLen ? valuesMap[getKey(dimensions, fields, keyFn)] : true;\n\n                if (filterByMeasure) {\n                    return measures.every(field => fields[field].internalValue >= domain[field][0] &&\n                        fields[field].internalValue <= domain[field][1]) && present;\n                }\n                return present;\n            } : () => false;\n        })(propModel));\n    }\n\n    let filteredModel;\n    if (operation === LOGICAL_OPERATORS.AND) {\n        filteredModel = clonedModel.select(fields => fns.every(fn => fn(fields)), {\n            saveChild: false\n        });\n    } else {\n        filteredModel = clonedModel.select(fields => fns.some(fn => fn(fields)), {\n            saveChild: false\n        });\n    }\n\n    return filteredModel;\n};\n\n\nexport const splitWithSelect = (sourceDm, dimensionArr, reducerFn = val => val, config) => {\n    const {\n        saveChild,\n    } = config;\n    const fieldStoreObj = sourceDm.getFieldspace().fieldsObj();\n\n    const {\n        splitRowDiffset,\n        dimensionMap\n    } = selectHelper(\n        sourceDm.clone(saveChild),\n        reducerFn,\n        config,\n        sourceDm,\n        (...params) => rowSplitDiffsetIterator(...params, dimensionArr, fieldStoreObj)\n        );\n\n    const clonedDMs = [];\n    Object.keys(splitRowDiffset).forEach((e) => {\n        if (splitRowDiffset[e]) {\n            const cloned = sourceDm.clone(saveChild);\n            const derivation = dimensionMap[e];\n            cloned._rowDiffset = splitRowDiffset[e].join(',');\n            cloned.__calculateFieldspace().calculateFieldsConfig();\n\n            const derivationFormula = fields => dimensionArr.every(_ => fields[_].internalValue === derivation.keys[_]);\n            // Store reference to child model and selector function\n            if (saveChild) {\n                persistDerivations(sourceDm, cloned, DM_DERIVATIVES.SELECT, config, derivationFormula);\n            }\n            cloned._derivation[cloned._derivation.length - 1].meta = dimensionMap[e];\n\n            clonedDMs.push(cloned);\n        }\n    });\n\n\n    return clonedDMs;\n};\nexport const addDiffsetToClonedDm = (clonedDm, rowDiffset, sourceDm, selectConfig, selectFn) => {\n    clonedDm._rowDiffset = rowDiffset;\n    clonedDm.__calculateFieldspace().calculateFieldsConfig();\n    persistDerivations(\n        sourceDm,\n        clonedDm,\n        DM_DERIVATIVES.SELECT,\n         { config: selectConfig },\n          selectFn\n    );\n};\n\n\nexport const cloneWithSelect = (sourceDm, selectFn, selectConfig, cloneConfig) => {\n    let extraCloneDm = {};\n\n    let { mode } = selectConfig;\n\n    const cloned = sourceDm.clone(cloneConfig.saveChild);\n    const setOfRowDiffsets = selectHelper(\n        cloned,\n        selectFn,\n        selectConfig,\n        sourceDm,\n        selectRowDiffsetIterator\n    );\n    const diffIndex = selectModeMap[mode].diffIndex;\n\n    addDiffsetToClonedDm(cloned, setOfRowDiffsets[diffIndex[0]], sourceDm, selectConfig, selectFn);\n\n    if (diffIndex.length > 1) {\n        extraCloneDm = sourceDm.clone(cloneConfig.saveChild);\n        addDiffsetToClonedDm(extraCloneDm, setOfRowDiffsets[diffIndex[1]], sourceDm, selectConfig, selectFn);\n        return [cloned, extraCloneDm];\n    }\n\n    return cloned;\n};\n\nexport const cloneWithProject = (sourceDm, projField, config, allFields) => {\n    const cloned = sourceDm.clone(config.saveChild);\n    let projectionSet = projField;\n    if (config.mode === FilteringMode.INVERSE) {\n        projectionSet = allFields.filter(fieldName => projField.indexOf(fieldName) === -1);\n    }\n    // cloned._colIdentifier = sourceDm._colIdentifier.split(',')\n    //                         .filter(coll => projectionSet.indexOf(coll) !== -1).join();\n    cloned._colIdentifier = projectionSet.join(',');\n    cloned.__calculateFieldspace().calculateFieldsConfig();\n\n    persistDerivations(\n        sourceDm,\n        cloned,\n        DM_DERIVATIVES.PROJECT,\n        { projField, config, actualProjField: projectionSet },\n        null\n    );\n\n    return cloned;\n};\n\n\nexport const splitWithProject = (sourceDm, projFieldSet, config, allFields) =>\n    projFieldSet.map(projFields =>\n        cloneWithProject(sourceDm, projFields, config, allFields));\n\nexport const sanitizeUnitSchema = (unitSchema) => {\n    // Do deep clone of the unit schema as the user might change it later.\n    unitSchema = extend2({}, unitSchema);\n    if (!unitSchema.type) {\n        unitSchema.type = FieldType.DIMENSION;\n    }\n\n    if (!unitSchema.subtype) {\n        switch (unitSchema.type) {\n        case FieldType.MEASURE:\n            unitSchema.subtype = MeasureSubtype.CONTINUOUS;\n            break;\n        default:\n        case FieldType.DIMENSION:\n            unitSchema.subtype = DimensionSubtype.CATEGORICAL;\n            break;\n        }\n    }\n\n    return unitSchema;\n};\n\nexport const validateUnitSchema = (unitSchema) => {\n    const supportedMeasureSubTypes = [MeasureSubtype.CONTINUOUS];\n    const supportedDimSubTypes = [\n        DimensionSubtype.CATEGORICAL,\n        DimensionSubtype.BINNED,\n        DimensionSubtype.TEMPORAL,\n        DimensionSubtype.GEO\n    ];\n    const { type, subtype, name } = unitSchema;\n\n    switch (type) {\n    case FieldType.DIMENSION:\n        if (supportedDimSubTypes.indexOf(subtype) === -1) {\n            throw new Error(`DataModel doesn't support dimension field subtype ${subtype} used for ${name} field`);\n        }\n        break;\n    case FieldType.MEASURE:\n        if (supportedMeasureSubTypes.indexOf(subtype) === -1) {\n            throw new Error(`DataModel doesn't support measure field subtype ${subtype} used for ${name} field`);\n        }\n        break;\n    default:\n        throw new Error(`DataModel doesn't support field type ${type} used for ${name} field`);\n    }\n};\n\nexport const sanitizeAndValidateSchema = schema => schema.map((unitSchema) => {\n    unitSchema = sanitizeUnitSchema(unitSchema);\n    validateUnitSchema(unitSchema);\n    return unitSchema;\n});\n\nexport const resolveFieldName = (schema, dataHeader) => {\n    schema.forEach((unitSchema) => {\n        const fieldNameAs = unitSchema.as;\n        if (!fieldNameAs) { return; }\n\n        const idx = dataHeader.indexOf(unitSchema.name);\n        dataHeader[idx] = fieldNameAs;\n        unitSchema.name = fieldNameAs;\n        delete unitSchema.as;\n    });\n};\n\nexport const updateData = (relation, data, schema, options) => {\n    schema = sanitizeAndValidateSchema(schema);\n    options = Object.assign(Object.assign({}, defaultConfig), options);\n    const converterFn = converter[options.dataFormat];\n\n    if (!(converterFn && typeof converterFn === 'function')) {\n        throw new Error(`No converter function found for ${options.dataFormat} format`);\n    }\n\n    const [header, formattedData] = converterFn(data, schema, options);\n    resolveFieldName(schema, header);\n    const fieldArr = createFields(formattedData, schema, header);\n\n    // This will create a new fieldStore with the fields\n    const nameSpace = fieldStore.createNamespace(fieldArr, options.name);\n    relation._partialFieldspace = nameSpace;\n\n    // If data is provided create the default colIdentifier and rowDiffset\n    relation._rowDiffset = formattedData.length && formattedData[0].length ? `0-${formattedData[0].length - 1}` : '';\n\n    // This stores the value objects which is passed to the filter method when selection operation is done.\n    const valueObjects = [];\n    const { fields } = nameSpace;\n    const rawFieldsData = fields.map(field => field.data());\n    const formattedFieldsData = fields.map(field => field.formattedData());\n    rowDiffsetIterator(relation._rowDiffset, (i) => {\n        valueObjects[i] = prepareSelectionData(fields, formattedFieldsData, rawFieldsData, i);\n    });\n    nameSpace._cachedValueObjects = valueObjects;\n\n    relation._colIdentifier = (schema.map(_ => _.name)).join();\n    relation._dataFormat = options.dataFormat === DataFormat.AUTO ? detectDataFormat(data) : options.dataFormat;\n    return relation;\n};\n\nexport const fieldInSchema = (schema, field) => {\n    let i = 0;\n\n    for (; i < schema.length; ++i) {\n        if (field === schema[i].name) {\n            return {\n                name: field,\n                type: schema[i].subtype || schema[i].type,\n                index: i,\n            };\n        }\n    }\n    return null;\n};\n\nexport const getDerivationArguments = (derivation) => {\n    let params = [];\n    let operation;\n    operation = derivation.op;\n    switch (operation) {\n    case DM_DERIVATIVES.SELECT:\n        params = [derivation.criteria];\n        break;\n    case DM_DERIVATIVES.PROJECT:\n        params = [derivation.meta.actualProjField];\n        break;\n    case DM_DERIVATIVES.GROUPBY:\n        operation = 'groupBy';\n        params = [derivation.meta.groupByString.split(','), derivation.criteria];\n        break;\n    default:\n        operation = null;\n    }\n\n    return {\n        operation,\n        params\n    };\n};\n\nconst applyExistingOperationOnModel = (propModel, dataModel) => {\n    const derivations = dataModel.getDerivations();\n    let selectionModel = propModel;\n\n    derivations.forEach((derivation) => {\n        if (!derivation) {\n            return;\n        }\n\n        const { operation, params } = getDerivationArguments(derivation);\n        if (operation) {\n            selectionModel = selectionModel[operation](...params, {\n                saveChild: false\n            });\n        }\n    });\n\n    return selectionModel;\n};\n\nconst getFilteredModel = (propModel, path) => {\n    for (let i = 0, len = path.length; i < len; i++) {\n        const model = path[i];\n        propModel = applyExistingOperationOnModel(propModel, model);\n    }\n    return propModel;\n};\n\nconst propagateIdentifiers = (dataModel, propModel, config = {}, propModelInf = {}) => {\n    const nonTraversingModel = propModelInf.nonTraversingModel;\n    const excludeModels = propModelInf.excludeModels || [];\n\n    if (dataModel === nonTraversingModel) {\n        return;\n    }\n\n    const propagate = excludeModels.length ? excludeModels.indexOf(dataModel) === -1 : true;\n\n    propagate && dataModel.handlePropagation(propModel, config);\n\n    const children = dataModel._children;\n    children.forEach((child) => {\n        const selectionModel = applyExistingOperationOnModel(propModel, child);\n        propagateIdentifiers(child, selectionModel, config, propModelInf);\n    });\n};\n\nexport const getRootGroupByModel = (model) => {\n    while (model._parent && model._derivation.find(d => d.op !== DM_DERIVATIVES.GROUPBY)) {\n        model = model._parent;\n    }\n    return model;\n};\n\nexport const getRootDataModel = (model) => {\n    while (model._parent) {\n        model = model._parent;\n    }\n    return model;\n};\n\nexport const getPathToRootModel = (model, path = []) => {\n    while (model._parent) {\n        path.push(model);\n        model = model._parent;\n    }\n    return path;\n};\n\nexport const propagateToAllDataModels = (identifiers, rootModels, propagationInf, config) => {\n    let criteria;\n    let propModel;\n    const { propagationNameSpace, propagateToSource } = propagationInf;\n    const propagationSourceId = propagationInf.sourceId;\n    const propagateInterpolatedValues = config.propagateInterpolatedValues;\n    const filterFn = (entry) => {\n        const filter = config.filterFn || (() => true);\n        return filter(entry, config);\n    };\n\n    let criterias = [];\n\n    if (identifiers === null && config.persistent !== true) {\n        criterias = [{\n            criteria: []\n        }];\n        criteria = [];\n    } else {\n        let actionCriterias = Object.values(propagationNameSpace.mutableActions);\n        if (propagateToSource !== false) {\n            actionCriterias = actionCriterias.filter(d => d.config.sourceId !== propagationSourceId);\n        }\n\n        const filteredCriteria = actionCriterias.filter(filterFn).map(action => action.config.criteria);\n\n        const excludeModels = [];\n\n        if (propagateToSource !== false) {\n            const sourceActionCriterias = Object.values(propagationNameSpace.mutableActions);\n\n            sourceActionCriterias.forEach((actionInf) => {\n                const actionConf = actionInf.config;\n                if (actionConf.applyOnSource === false && actionConf.action === config.action &&\n                        actionConf.sourceId !== propagationSourceId) {\n                    excludeModels.push(actionInf.model);\n                    criteria = sourceActionCriterias.filter(d => d !== actionInf).map(d => d.config.criteria);\n                    criteria.length && criterias.push({\n                        criteria,\n                        models: actionInf.model,\n                        path: getPathToRootModel(actionInf.model)\n                    });\n                }\n            });\n        }\n\n\n        criteria = [].concat(...[...filteredCriteria, identifiers]).filter(d => d !== null);\n        criterias.push({\n            criteria,\n            excludeModels: [...excludeModels, ...config.excludeModels || []]\n        });\n    }\n\n    const rootModel = rootModels.model;\n\n    const propConfig = Object.assign({\n        sourceIdentifiers: identifiers,\n        propagationSourceId\n    }, config);\n\n    const rootGroupByModel = rootModels.groupByModel;\n    if (propagateInterpolatedValues && rootGroupByModel) {\n        propModel = filterPropagationModel(rootGroupByModel, criteria, {\n            filterByMeasure: propagateInterpolatedValues\n        });\n        propagateIdentifiers(rootGroupByModel, propModel, propConfig);\n    }\n\n    criterias.forEach((inf) => {\n        const propagationModel = filterPropagationModel(rootModel, inf.criteria);\n        const path = inf.path;\n\n        if (path) {\n            const filteredModel = getFilteredModel(propagationModel, path.reverse());\n            inf.models.handlePropagation(filteredModel, propConfig);\n        } else {\n            propagateIdentifiers(rootModel, propagationModel, propConfig, {\n                excludeModels: inf.excludeModels,\n                nonTraversingModel: propagateInterpolatedValues && rootGroupByModel\n            });\n        }\n    });\n};\n\nexport const propagateImmutableActions = (propagationNameSpace, rootModels, propagationInf) => {\n    const immutableActions = propagationNameSpace.immutableActions;\n\n    for (const action in immutableActions) {\n        const actionInf = immutableActions[action];\n        const actionConf = actionInf.config;\n        const propagationSourceId = propagationInf.config.sourceId;\n        const filterImmutableAction = propagationInf.propConfig.filterImmutableAction ?\n            propagationInf.propConfig.filterImmutableAction(actionConf, propagationInf.config) : true;\n        if (actionConf.sourceId !== propagationSourceId && filterImmutableAction) {\n            const criteriaModel = actionConf.criteria;\n            propagateToAllDataModels(criteriaModel, rootModels, {\n                propagationNameSpace,\n                propagateToSource: false,\n                sourceId: propagationSourceId\n            }, actionConf);\n        }\n    }\n};\n\nexport const addToPropNamespace = (propagationNameSpace, config = {}, model) => {\n    let sourceNamespace;\n    const isMutableAction = config.isMutableAction;\n    const criteria = config.criteria;\n    const key = `${config.action}-${config.sourceId}`;\n\n    if (isMutableAction) {\n        sourceNamespace = propagationNameSpace.mutableActions;\n    } else {\n        sourceNamespace = propagationNameSpace.immutableActions;\n    }\n\n    if (criteria === null) {\n        delete sourceNamespace[key];\n    } else {\n        sourceNamespace[key] = {\n            model,\n            config\n        };\n    }\n\n    return this;\n};\n\n\nexport const getNormalizedProFields = (projField, allFields, fieldConfig) => {\n    const normalizedProjField = projField.reduce((acc, field) => {\n        if (field.constructor.name === 'RegExp') {\n            acc.push(...allFields.filter(fieldName => fieldName.search(field) !== -1));\n        } else if (field in fieldConfig) {\n            acc.push(field);\n        }\n        return acc;\n    }, []);\n    return Array.from(new Set(normalizedProjField)).map(field => field.trim());\n};\n\n/**\n * Get the numberFormatted value if numberFormat present,\n * else returns the supplied value.\n * @param {Object} field Field Instance\n * @param {Number|String} value\n * @return {Number|String}\n */\nexport const getNumberFormattedVal = (field, value) => {\n    if (field.numberFormat) {\n        return field.numberFormat()(value);\n    }\n    return value;\n};\n","const DataModel = require('./export');\n\nmodule.exports = DataModel.default ? DataModel.default : DataModel;\n","/**\n * A parser to parser null, undefined, invalid and NIL values.\n *\n * @public\n * @class\n */\nclass InvalidAwareTypes {\n    /**\n     * Static method which gets/sets the invalid value registry.\n     *\n     * @public\n     * @param {Object} config - The custom configuration supplied by user.\n     * @return {Object} Returns the invalid values registry.\n     */\n    static invalidAwareVals (config) {\n        if (!config) {\n            return InvalidAwareTypes._invalidAwareValsMap;\n        }\n        return Object.assign(InvalidAwareTypes._invalidAwareValsMap, config);\n    }\n\n    /**\n     * Initialize a new instance.\n     *\n     * @public\n     * @param {string} value - The value of the invalid data type.\n     */\n    constructor (value) {\n        this._value = value;\n    }\n\n    /**\n     * Returns the current value of the instance.\n     *\n     * @public\n     * @return {string} Returns the value of the invalid data type.\n     */\n    value () {\n        return this._value;\n    }\n\n    /**\n     * Returns the current value of the instance in string format.\n     *\n     * @public\n     * @return {string} Returns the value of the invalid data type.\n     */\n    toString () {\n        return String(this._value);\n    }\n\n    static isInvalid(val) {\n        return (val instanceof InvalidAwareTypes) || !!InvalidAwareTypes.invalidAwareVals()[val];\n    }\n\n    static getInvalidType(val) {\n        return val instanceof InvalidAwareTypes ? val : InvalidAwareTypes.invalidAwareVals()[val];\n    }\n}\n\n/**\n * Enums for Invalid types.\n */\nInvalidAwareTypes.NULL = new InvalidAwareTypes('null');\nInvalidAwareTypes.NA = new InvalidAwareTypes('na');\nInvalidAwareTypes.NIL = new InvalidAwareTypes('nil');\n\n/**\n * Default Registry for mapping the invalid values.\n *\n * @private\n */\nInvalidAwareTypes._invalidAwareValsMap = {\n    invalid: InvalidAwareTypes.NA,\n    nil: InvalidAwareTypes.NIL,\n    null: InvalidAwareTypes.NULL,\n    undefined: InvalidAwareTypes.NA\n};\n\nexport default InvalidAwareTypes;\n","import { rowDiffsetIterator } from './row-diffset-iterator';\nimport InvalidAwareTypes from '../invalid-aware-types';\n\nconst generateBuckets = (binSize, start, end) => {\n    const buckets = [];\n    let next = start;\n\n    while (next < end) {\n        buckets.push(next);\n        next += binSize;\n    }\n    buckets.push(next);\n\n    return buckets;\n};\n\nconst findBucketRange = (bucketRanges, value) => {\n    let leftIdx = 0;\n    let rightIdx = bucketRanges.length - 1;\n    let midIdx;\n    let range;\n\n    // Here use binary search as the bucketRanges is a sorted array\n    while (leftIdx <= rightIdx) {\n        midIdx = leftIdx + Math.floor((rightIdx - leftIdx) / 2);\n        range = bucketRanges[midIdx];\n\n        if (value >= range.start && value < range.end) {\n            return range;\n        } else if (value >= range.end) {\n            leftIdx = midIdx + 1;\n        } else if (value < range.start) {\n            rightIdx = midIdx - 1;\n        }\n    }\n\n    return null;\n};\n\n /**\n  * Creates the bin data from input measure field and supplied configs.\n  *\n  * @param {Measure} measureField - The Measure field instance.\n  * @param {string} rowDiffset - The datamodel rowDiffset values.\n  * @param {Object} config - The config object.\n  * @return {Object} Returns the binned data and the corresponding bins.\n  */\nexport function createBinnedFieldData (measureField, rowDiffset, config) {\n    let { buckets, binsCount, binSize, start, end } = config;\n    const [dMin, dMax] = measureField.domain();\n\n    if (!buckets) {\n        start = (start !== 0 && (!start || start > dMin)) ? dMin : start;\n        end = (end !== 0 && (!end || end < dMax)) ? (dMax + 1) : end;\n\n        if (binsCount) {\n            binSize = Math.ceil(Math.abs(end - start) / binsCount);\n        }\n\n        buckets = generateBuckets(binSize, start, end);\n    }\n\n    if (buckets[0] > dMin) {\n        buckets.unshift(dMin);\n    }\n    if (buckets[buckets.length - 1] <= dMax) {\n        buckets.push(dMax + 1);\n    }\n\n    const bucketRanges = [];\n    for (let i = 0; i < buckets.length - 1; i++) {\n        bucketRanges.push({\n            start: buckets[i],\n            end: buckets[i + 1]\n        });\n    }\n\n    const binnedData = [];\n    rowDiffsetIterator(rowDiffset, (i) => {\n        const datum = measureField.partialField.data[i];\n        if (datum instanceof InvalidAwareTypes) {\n            binnedData.push(datum);\n            return;\n        }\n\n        const range = findBucketRange(bucketRanges, datum);\n        binnedData.push(`${range.start}-${range.end}`);\n    });\n\n    return { binnedData, bins: buckets };\n}\n","import { persistDerivations } from '../helper';\nimport { DM_DERIVATIVES } from '../constants';\n\n/**\n * DataModel's opearators are exposed as composable functional operators as well as chainable operators. Chainable\n * operators are called on the instances of {@link Datamodel} and {@link Relation} class.\n *\n * Those same operators can be used as composable operators from `DataModel.Operators` namespace.\n *\n * All these operators have similar behaviour. All these operators when called with the argument returns a function\n * which expects a DataModel instance.\n *\n * @public\n * @module Operators\n * @namespace DataModel\n */\n\n/**\n * This is functional version of selection operator. {@link link_to_selection | Selection} is a row filtering operation.\n * It takes {@link SelectionPredicate | predicate} for filtering criteria and returns a function.\n * The returned function is called with the DataModel instance on which the action needs to be performed.\n *\n * {@link SelectionPredicate} is a function which returns a boolean value. For selection opearation the selection\n * function is called for each row of DataModel instance with the current row passed as argument.\n *\n * After executing {@link SelectionPredicate} the rows are labeled as either an entry of selection set or an entry\n * of rejection set.\n *\n * {@link FilteringMode} operates on the selection and rejection set to determine which one would reflect in the\n * resulatant datamodel.\n *\n * @warning\n * [Warn] Selection and rejection set is only a logical idea for concept explanation purpose.\n *\n * @error\n * [Error] `FilteringMode.ALL` is not a valid working mode for functional version of `select`. Its only avialable on the\n * chained version.\n *\n * @example\n * const select = DataModel.Operators.select;\n * usaCarsFn = select(fields => fields.Origin.value === 'USA');\n * usaCarsDm = usaCarsFn(dm);\n * console.log(usaCarsDm);\n *\n * @public\n * @namespace DataModel\n * @module Operators\n *\n * @param {SelectionPredicate} selectFn - Predicate funciton which is called for each row with the current row\n *      ```\n *          function (row, i)  { ... }\n *      ```\n * @param {Object} [config] - The configuration object to control the inclusion exclusion of a row in resultant\n *      DataModel instance\n * @param {FilteringMode} [config.mode=FilteringMode.NORMAL] - The mode of the selection\n *\n * @return {PreparatorFunction} Function which expects an instance of DataModel on which the operator needs to be\n *      applied.\n */\nexport const select = (...args) => dm => dm.select(...args);\n\n/**\n * This is functional version of projection operator. {@link link_to_projection | Projection} is a column filtering\n * operation.It expects list of fields name and either include those or exclude those based on {@link FilteringMode} on\n * the  resultant variable.It returns a function which is called with the DataModel instance on which the action needs\n * to be performed.\n *\n * Projection expects array of fields name based on which it creates the selection and rejection set. All the field\n * whose name is present in array goes in selection set and rest of the fields goes in rejection set.\n *\n * {@link FilteringMode} operates on the selection and rejection set to determine which one would reflect in the\n * resulatant datamodel.\n *\n * @warning\n * Selection and rejection set is only a logical idea for concept explanation purpose.\n *\n * @error\n * `FilteringMode.ALL` is not a valid working mode for functional version of `select`. Its only avialable on the\n * chained version.\n *\n * @public\n * @namespace DataModel\n * @module Operators\n *\n * @param {Array.<string | Regexp>} projField - An array of column names in string or regular expression.\n * @param {Object} [config] - An optional config to control the creation of new DataModel\n * @param {FilteringMode} [config.mode=FilteringMode.NORMAL] - Mode of the projection\n *\n * @return {PreparatorFunction} Function which expects an instance of DataModel on which the operator needs to be\n *      applied.\n */\nexport const project = (...args) => dm => dm.project(...args);\n\n/**\n * This is functional version of binnig operator. Binning happens on a measure field based on a binning configuration.\n * Binning in DataModel does not aggregate the number of rows present in DataModel instance after binning, it just adds\n * a new field with the binned value. Refer binning {@link example_of_binning | example} to have a intuition of what\n * binning is and the use case.\n *\n * Binning can be configured by\n * - providing custom bin configuration with non uniform buckets\n * - providing bin count\n * - providing each bin size\n *\n * When custom buckets are provided as part of binning configuration\n * @example\n *  // DataModel already prepared and assigned to dm vairable\n *  const buckets = {\n *      start: 30\n *      stops: [80, 100, 110]\n *  };\n *  const config = { buckets, name: 'binnedHP' }\n *  const binFn = bin('horsepower', config);\n *  const binnedDm = binFn(dm);\n *\n * @text\n * When `binCount` is defined as part of binning configuration\n * @example\n *  // DataModel already prepared and assigned to dm vairable\n *  const config = { binCount: 5, name: 'binnedHP' }\n *  const binFn = bin('horsepower', config);\n *  const binnedDm = binFn(Dm);\n *\n * @text\n * When `binSize` is defined as part of binning configuration\n * @example\n *  // DataModel already prepared and assigned to dm vairable\n *  const config = { binSize: 200, name: 'binnedHorsepower' }\n *  const binnedDm = dataModel.bin('horsepower', config);\n *  const binnedDm = binFn(Dm);\n *\n * @public\n * @namespace DataModel\n * @module Operators\n *\n * @param {String} name Name of measure which will be used to create bin\n * @param {Object} config Config required for bin creation\n * @param {Array.<Number>} config.bucketObj.stops Defination of bucket ranges. Two subsequent number from arrays\n *      are picked and a range is created. The first number from range is inclusive and the second number from range\n *      is exclusive.\n * @param {Number} [config.bucketObj.startAt] Force the start of the bin from a particular number.\n *      If not mentioned, the start of the bin or the lower domain of the data if stops is not mentioned, else its\n *      the first value of the stop.\n * @param {Number} config.binSize Bucket size for each bin\n * @param {Number} config.binCount Number of bins which will be created\n * @param {String} config.name Name of the new binned field to be created\n *\n * @return {PreparatorFunction} Function which expects an instance of DataModel on which the operator needs to be\n *      applied.\n */\nexport const bin = (...args) => dm => dm.bin(...args);\n\n/**\n * This is functional version of `groupBy` operator.Groups the data using particular dimensions and by reducing\n * measures. It expects a list of dimensions using which it projects the datamodel and perform aggregations to reduce\n * the duplicate tuples. Refer this {@link link_to_one_example_with_group_by | document} to know the intuition behind\n * groupBy.\n *\n * DataModel by default provides definition of few {@link reducer | Reducers}.\n * {@link ReducerStore | User defined reducers} can also be registered.\n *\n * This is the chained implementation of `groupBy`.\n * `groupBy` also supports {@link link_to_compose_groupBy | composability}\n *\n * @example\n * const groupBy = DataModel.Operators.groupBy;\n * const groupedFn = groupBy(['Year'], { horsepower: 'max' } );\n * groupedDM = groupByFn(dm);\n *\n * @public\n *\n * @param {Array.<string>} fieldsArr - Array containing the name of dimensions\n * @param {Object} [reducers={}] - A map whose key is the variable name and value is the name of the reducer. If its\n *      not passed, or any variable is ommitted from the object, default aggregation function is used from the\n *      schema of the variable.\n *\n * @return {PreparatorFunction} Function which expects an instance of DataModel on which the operator needs to be\n *      applied.\n */\nexport const groupBy = (...args) => dm => dm.groupBy(...args);\n\n/**\n * Enables composing operators to run multiple operations and save group of operataion as named opration on a DataModel.\n * The resulting DataModel will be the result of all the operation provided. The operations provided will be executed in\n * a serial manner ie. result of one operation will be the input for the next operations (like pipe operator in unix).\n *\n * Suported operations in compose are\n * - `select`\n * - `project`\n * - `groupBy`\n * - `bin`\n * - `compose`\n *\n * @example\n * const compose = DataModel.Operators.compose;\n * const select = DataModel.Operators.select;\n * const project = DataModel.Operators.project;\n *\n * let composedFn = compose(\n *    select(fields => fields.netprofit.value <= 15),\n *    project(['netprofit', 'netsales']));\n *\n * const dataModel = new DataModel(data1, schema1);\n *\n * let composedDm = composedFn(dataModel);\n *\n * @public\n * @namespace DataModel\n * @module Operators\n *\n * @param {Array.<Operators>} operators: An array of operation that will be applied on the\n * datatable.\n *\n * @returns {DataModel} Instance of resultant DataModel\n */\nexport const compose = (...operations) =>\n    (dm, config = { saveChild: true }) => {\n        let currentDM = dm;\n        let firstChild;\n        const derivations = [];\n\n        operations.forEach((operation) => {\n            currentDM = operation(currentDM);\n            derivations.push(...currentDM._derivation);\n            if (!firstChild) {\n                firstChild = currentDM;\n            }\n        });\n\n        if (firstChild && firstChild !== currentDM) {\n            firstChild.dispose();\n        }\n\n        // reset all ancestorDerivation saved in-between compose\n        currentDM._ancestorDerivation = [];\n        persistDerivations(\n            dm,\n            currentDM,\n            DM_DERIVATIVES.COMPOSE,\n            null,\n            derivations\n        );\n\n        if (config.saveChild) {\n            currentDM.setParent(dm);\n        } else {\n            currentDM.setParent(null);\n        }\n\n        return currentDM;\n    };\n","import DataModel from '../datamodel';\nimport { extend2 } from '../utils';\nimport { getCommonSchema } from './get-common-schema';\nimport { rowDiffsetIterator } from './row-diffset-iterator';\nimport { JOINS } from '../constants';\nimport { prepareJoinData } from '../helper';\n/**\n * Default filter function for crossProduct.\n *\n * @return {boolean} Always returns true.\n */\nfunction defaultFilterFn() { return true; }\n\n/**\n * Implementation of cross product operation between two DataModel instances.\n * It internally creates the data and schema for the new DataModel.\n *\n * @param {DataModel} dataModel1 - The left DataModel instance.\n * @param {DataModel} dataModel2 - The right DataModel instance.\n * @param {Function} filterFn - The filter function which is used to filter the tuples.\n * @param {boolean} [replaceCommonSchema=false] - The flag if the common name schema should be there.\n * @return {DataModel} Returns The newly created DataModel instance from the crossProduct operation.\n */\nexport function crossProduct (dm1, dm2, filterFn, replaceCommonSchema = false, jointype = JOINS.CROSS) {\n    const schema = [];\n    const data = [];\n    const applicableFilterFn = filterFn || defaultFilterFn;\n    const dm1FieldStore = dm1.getFieldspace();\n    const dm2FieldStore = dm2.getFieldspace();\n    const dm1FieldStoreName = dm1FieldStore.name;\n    const dm2FieldStoreName = dm2FieldStore.name;\n    const name = `${dm1FieldStore.name}.${dm2FieldStore.name}`;\n    const commonSchemaList = getCommonSchema(dm1FieldStore, dm2FieldStore);\n\n    if (dm1FieldStoreName === dm2FieldStoreName) {\n        throw new Error('DataModels must have different alias names');\n    }\n    // Here prepare the schema\n    dm1FieldStore.fields.forEach((field) => {\n        const tmpSchema = extend2({}, field.schema());\n        if (commonSchemaList.indexOf(tmpSchema.name) !== -1 && !replaceCommonSchema) {\n            tmpSchema.name = `${dm1FieldStore.name}.${tmpSchema.name}`;\n        }\n        schema.push(tmpSchema);\n    });\n    dm2FieldStore.fields.forEach((field) => {\n        const tmpSchema = extend2({}, field.schema());\n        if (commonSchemaList.indexOf(tmpSchema.name) !== -1) {\n            if (!replaceCommonSchema) {\n                tmpSchema.name = `${dm2FieldStore.name}.${tmpSchema.name}`;\n                schema.push(tmpSchema);\n            }\n        } else {\n            schema.push(tmpSchema);\n        }\n    });\n\n    // Here prepare Data\n    rowDiffsetIterator(dm1._rowDiffset, (i) => {\n        let rowAdded = false;\n        let rowPosition;\n        rowDiffsetIterator(dm2._rowDiffset, (ii) => {\n            const tuple = [];\n            const userArg = {};\n            userArg[dm1FieldStoreName] = {};\n            userArg[dm2FieldStoreName] = {};\n            dm1FieldStore.fields.forEach((field) => {\n                tuple.push(field.partialField.data[i]);\n                userArg[dm1FieldStoreName][field.name()] = {\n                    rawValue: field.partialField.data[i],\n                    formattedValue: field.formattedData()[i],\n                };\n            });\n            dm2FieldStore.fields.forEach((field) => {\n                if (!(commonSchemaList.indexOf(field.schema().name) !== -1 && replaceCommonSchema)) {\n                    tuple.push(field.partialField.data[ii]);\n                }\n                userArg[dm2FieldStoreName][field.name()] = {\n                    rawValue: field.partialField.data[ii],\n                    formattedValue: field.formattedData()[ii],\n                };\n            });\n\n            let cachedStore = {};\n            let cloneProvider1 = () => dm1.detachedRoot();\n            let cloneProvider2 = () => dm2.detachedRoot();\n\n            const dm1Fields = prepareJoinData(userArg[dm1FieldStoreName]);\n            const dm2Fields = prepareJoinData(userArg[dm2FieldStoreName]);\n            if (applicableFilterFn(dm1Fields, dm2Fields, cloneProvider1, cloneProvider2, cachedStore)) {\n                const tupleObj = {};\n                tuple.forEach((cellVal, iii) => {\n                    tupleObj[schema[iii].name] = cellVal;\n                });\n                if (rowAdded && JOINS.CROSS !== jointype) {\n                    data[rowPosition] = tupleObj;\n                }\n                else {\n                    data.push(tupleObj);\n                    rowAdded = true;\n                    rowPosition = i;\n                }\n            } else if ((jointype === JOINS.LEFTOUTER || jointype === JOINS.RIGHTOUTER) && !rowAdded) {\n                const tupleObj = {};\n                let len = dm1FieldStore.fields.length - 1;\n                tuple.forEach((cellVal, iii) => {\n                    if (iii <= len) {\n                        tupleObj[schema[iii].name] = cellVal;\n                    }\n                    else {\n                        tupleObj[schema[iii].name] = null;\n                    }\n                });\n                rowAdded = true;\n                rowPosition = i;\n                data.push(tupleObj);\n            }\n        });\n    });\n\n    return new DataModel(data, schema, { name });\n}\n","import { rowDiffsetIterator } from './row-diffset-iterator';\nimport { sortData } from './sort';\n\n/**\n * Builds the actual data array.\n *\n * @param {Array} fieldStore - An array of field.\n * @param {string} rowDiffset - A string consisting of which rows to be included eg. '0-2,4,6';\n * @param {string} colIdentifier - A string consisting of the details of which column\n * to be included eg 'date,sales,profit';\n * @param {Object} sortingDetails - An object containing the sorting details of the DataModel instance.\n * @param {Object} options - The options required to create the type of the data.\n * @return {Object} Returns an object containing the multidimensional array and the relative schema.\n */\nexport function dataBuilder (fieldStore, rowDiffset, colIdentifier, sortingDetails, options) {\n    const defOptions = {\n        addUid: false,\n        columnWise: false\n    };\n    options = Object.assign({}, defOptions, options);\n\n    const retObj = {\n        schema: [],\n        data: [],\n        uids: []\n    };\n    const addUid = options.addUid;\n    const reqSorting = sortingDetails && sortingDetails.length > 0;\n    // It stores the fields according to the colIdentifier argument\n    const tmpDataArr = [];\n    // Stores the fields according to the colIdentifier argument\n    const colIArr = colIdentifier.split(',');\n\n    colIArr.forEach((colName) => {\n        for (let i = 0; i < fieldStore.length; i += 1) {\n            if (fieldStore[i].name() === colName) {\n                tmpDataArr.push(fieldStore[i]);\n                break;\n            }\n        }\n    });\n\n    // Inserts the schema to the schema object\n    tmpDataArr.forEach((field) => {\n        /** @todo Need to use extend2 here otherwise user can overwrite the schema. */\n        retObj.schema.push(field.schema());\n    });\n\n    if (addUid) {\n        retObj.schema.push({\n            name: 'uid',\n            type: 'identifier'\n        });\n    }\n\n    rowDiffsetIterator(rowDiffset, (i) => {\n        retObj.data.push([]);\n        const insertInd = retObj.data.length - 1;\n        let start = 0;\n        tmpDataArr.forEach((field, ii) => {\n            retObj.data[insertInd][ii + start] = field.partialField.data[i];\n        });\n        if (addUid) {\n            retObj.data[insertInd][tmpDataArr.length] = i;\n        }\n        // Creates an array of unique identifiers for each row\n        retObj.uids.push(i);\n\n        // If sorting needed then there is the need to expose the index\n        // mapping from the old index to its new index\n        if (reqSorting) { retObj.data[insertInd].push(i); }\n    });\n\n    // Handles the sort functionality\n    if (reqSorting) {\n        sortData(retObj, sortingDetails);\n    }\n\n    if (options.columnWise) {\n        const tmpData = Array(...Array(retObj.schema.length)).map(() => []);\n        retObj.data.forEach((tuple) => {\n            tuple.forEach((data, i) => {\n                tmpData[i].push(data);\n            });\n        });\n        retObj.data = tmpData;\n    }\n\n    return retObj;\n}\n","import DataModel from '../datamodel';\nimport { extend2 } from '../utils';\nimport { rowDiffsetIterator } from './row-diffset-iterator';\nimport { isArrEqual } from '../utils/helper';\n\n/**\n * Performs the union operation between two dm instances.\n *\n * @todo Fix the conflicts between union and difference terminology here.\n *\n * @param {dm} dm1 - The first dm instance.\n * @param {dm} dm2 - The second dm instance.\n * @return {dm} Returns the newly created dm after union operation.\n */\nexport function difference (dm1, dm2) {\n    const hashTable = {};\n    const schema = [];\n    const schemaNameArr = [];\n    const data = [];\n    const dm1FieldStore = dm1.getFieldspace();\n    const dm2FieldStore = dm2.getFieldspace();\n    const dm1FieldStoreFieldObj = dm1FieldStore.fieldsObj();\n    const dm2FieldStoreFieldObj = dm2FieldStore.fieldsObj();\n    const name = `${dm1FieldStore.name} union ${dm2FieldStore.name}`;\n\n   // For union the columns should match otherwise return a clone of the dm1\n    if (!isArrEqual(dm1._colIdentifier.split(',').sort(), dm2._colIdentifier.split(',').sort())) {\n        return null;\n    }\n\n    // Prepare the schema\n    (dm1._colIdentifier.split(',')).forEach((fieldName) => {\n        const field = dm1FieldStoreFieldObj[fieldName];\n        schema.push(extend2({}, field.schema()));\n        schemaNameArr.push(field.schema().name);\n    });\n\n    /**\n     * The helper function to create the data.\n     *\n     * @param {dm} dm - The dm instance for which the data is inserted.\n     * @param {Object} fieldsObj - The fieldStore object format.\n     * @param {boolean} addData - If true only tuple will be added to the data.\n     */\n    function prepareDataHelper(dm, fieldsObj, addData) {\n        rowDiffsetIterator(dm._rowDiffset, (i) => {\n            const tuple = {};\n            let hashData = '';\n            schemaNameArr.forEach((schemaName) => {\n                const value = fieldsObj[schemaName].partialField.data[i];\n                hashData += `-${value}`;\n                tuple[schemaName] = value;\n            });\n            if (!hashTable[hashData]) {\n                if (addData) { data.push(tuple); }\n                hashTable[hashData] = true;\n            }\n        });\n    }\n\n    // Prepare the data\n    prepareDataHelper(dm2, dm2FieldStoreFieldObj, false);\n    prepareDataHelper(dm1, dm1FieldStoreFieldObj, true);\n\n    return new DataModel(data, schema, { name });\n}\n\n","/**\n * The helper function that returns an array of common schema\n * from two fieldStore instances.\n *\n * @param {FieldStore} fs1 - The first FieldStore instance.\n * @param {FieldStore} fs2 - The second FieldStore instance.\n * @return {Array} An array containing the common schema.\n */\nexport function getCommonSchema (fs1, fs2) {\n    const retArr = [];\n    const fs1Arr = [];\n    fs1.fields.forEach((field) => {\n        fs1Arr.push(field.schema().name);\n    });\n    fs2.fields.forEach((field) => {\n        if (fs1Arr.indexOf(field.schema().name) !== -1) {\n            retArr.push(field.schema().name);\n        }\n    });\n    return retArr;\n}\n","import { isArray } from '../utils';\nimport InvalidAwareTypes from '../invalid-aware-types';\nimport { GROUP_BY_FUNCTIONS } from '../enums';\n\nconst { SUM, AVG, FIRST, LAST, COUNT, STD, MIN, MAX } = GROUP_BY_FUNCTIONS;\n\nfunction getFilteredValues(arr) {\n    return arr.filter(item => !(item instanceof InvalidAwareTypes));\n}\n/**\n * Reducer function that returns the sum of all the values.\n *\n * @public\n * @param  {Array.<number>} arr - The input array.\n * @return {number} Returns the sum of the array.\n */\nfunction sum (arr) {\n    if (isArray(arr) && !(arr[0] instanceof Array)) {\n        const filteredNumber = getFilteredValues(arr);\n        const totalSum = filteredNumber.length ?\n                            filteredNumber.reduce((acc, curr) => acc + curr, 0)\n                            : InvalidAwareTypes.NULL;\n        return totalSum;\n    }\n    return InvalidAwareTypes.NULL;\n}\n\n/**\n * Reducer function that returns the average of all the values.\n *\n * @public\n * @param  {Array.<number>} arr - The input array.\n * @return {number} Returns the mean value of the array.\n */\nfunction avg (arr) {\n    if (isArray(arr) && !(arr[0] instanceof Array)) {\n        const totalSum = sum(arr);\n        const len = arr.length || 1;\n        return (Number.isNaN(totalSum) || totalSum instanceof InvalidAwareTypes) ?\n                 InvalidAwareTypes.NULL : totalSum / len;\n    }\n    return InvalidAwareTypes.NULL;\n}\n\n/**\n * Reducer function that gives the min value amongst all the values.\n *\n * @public\n * @param  {Array.<number>} arr - The input array.\n * @return {number} Returns the minimum value of the array.\n */\nfunction min (arr) {\n    if (isArray(arr) && !(arr[0] instanceof Array)) {\n        // Filter out undefined, null and NaN values\n        const filteredValues = getFilteredValues(arr);\n\n        return (filteredValues.length) ? Math.min(...filteredValues) : InvalidAwareTypes.NULL;\n    }\n    return InvalidAwareTypes.NULL;\n}\n\n/**\n * Reducer function that gives the max value amongst all the values.\n *\n * @public\n * @param  {Array.<number>} arr - The input array.\n * @return {number} Returns the maximum value of the array.\n */\nfunction max (arr) {\n    if (isArray(arr) && !(arr[0] instanceof Array)) {\n        // Filter out undefined, null and NaN values\n        const filteredValues = getFilteredValues(arr);\n\n        return (filteredValues.length) ? Math.max(...filteredValues) : InvalidAwareTypes.NULL;\n    }\n    return InvalidAwareTypes.NULL;\n}\n\n/**\n * Reducer function that gives the first value of the array.\n *\n * @public\n * @param  {Array} arr - The input array.\n * @return {number} Returns the first value of the array.\n */\nfunction first (arr) {\n    return arr[0];\n}\n\n/**\n * Reducer function that gives the last value of the array.\n *\n * @public\n * @param  {Array} arr - The input array.\n * @return {number} Returns the last value of the array.\n */\nfunction last (arr) {\n    return arr[arr.length - 1];\n}\n\n/**\n * Reducer function that gives the count value of the array.\n *\n * @public\n * @param  {Array} arr - The input array.\n * @return {number} Returns the length of the array.\n */\nfunction count (arr) {\n    if (isArray(arr)) {\n        return arr.length;\n    }\n    return InvalidAwareTypes.NULL;\n}\n\n/**\n * Calculates the variance of the input array.\n *\n * @param  {Array.<number>} arr - The input array.\n * @return {number} Returns the variance of the input array.\n */\nfunction variance (arr) {\n    let mean = avg(arr);\n    return avg(arr.map(num => (num - mean) ** 2));\n}\n\n/**\n * Calculates the square root of the variance of the input array.\n *\n * @public\n * @param  {Array.<number>} arr - The input array.\n * @return {number} Returns the square root of the variance.\n */\nfunction std (arr) {\n    return Math.sqrt(variance(arr));\n}\n\n\nconst fnList = {\n    [SUM]: sum,\n    [AVG]: avg,\n    [MIN]: min,\n    [MAX]: max,\n    [FIRST]: first,\n    [LAST]: last,\n    [COUNT]: count,\n    [STD]: std\n};\n\nconst defaultReducerName = SUM;\n\nexport {\n    defaultReducerName,\n    sum as defReducer,\n    fnList,\n};\n","import { extend2 } from '../utils';\nimport { rowDiffsetIterator } from './row-diffset-iterator';\nimport DataModel from '../export';\nimport reducerStore from '../utils/reducer-store';\nimport { defaultReducerName } from './group-by-function';\nimport { FieldType } from '../enums';\n\n/**\n * This function sanitize the user given field and return a common Array structure field\n * list\n * @param  {DataModel} dataModel the dataModel operating on\n * @param  {Array} fieldArr  user input of field Array\n * @return {Array}           arrays of field name\n */\nfunction getFieldArr (dataModel, fieldArr) {\n    const retArr = [];\n    const fieldStore = dataModel.getFieldspace();\n    const dimensions = fieldStore.getDimension();\n\n    Object.entries(dimensions).forEach(([key]) => {\n        if (fieldArr && fieldArr.length) {\n            if (fieldArr.indexOf(key) !== -1) {\n                retArr.push(key);\n            }\n        } else {\n            retArr.push(key);\n        }\n    });\n\n    return retArr;\n}\n\n/**\n * This sanitize the reducer provide by the user and create a common type of object.\n * user can give function Also\n * @param  {DataModel} dataModel     dataModel to worked on\n * @param  {Object|function} [reducers={}] reducer provided by the users\n * @return {Object}               object containing reducer function for every measure\n */\nfunction getReducerObj (dataModel, reducers = {}) {\n    const retObj = {};\n    const fieldStore = dataModel.getFieldspace();\n    const measures = fieldStore.getMeasure();\n    const defReducer = reducerStore.defaultReducer();\n\n    Object.keys(measures).forEach((measureName) => {\n        if (typeof reducers[measureName] !== 'string') {\n            reducers[measureName] = measures[measureName].defAggFn();\n        }\n        const reducerFn = reducerStore.resolve(reducers[measureName]);\n        if (reducerFn) {\n            retObj[measureName] = reducerFn;\n        } else {\n            retObj[measureName] = defReducer;\n            reducers[measureName] = defaultReducerName;\n        }\n    });\n    return retObj;\n}\n\n/**\n * main function which perform the group-by operations which reduce the measures value is the\n * fields are common according to the reducer function provided\n * @param  {DataModel} dataModel the dataModel to worked\n * @param  {Array} fieldArr  fields according to which the groupby should be worked\n * @param  {Object|Function} reducers  reducers function\n * @param {DataModel} existingDataModel Existing datamodel instance\n * @return {DataModel} new dataModel with the group by\n */\nfunction groupBy (dataModel, fieldArr, reducers, existingDataModel) {\n    const sFieldArr = getFieldArr(dataModel, fieldArr);\n    const reducerObj = getReducerObj(dataModel, reducers);\n    const fieldStore = dataModel.getFieldspace();\n    const fieldStoreObj = fieldStore.fieldsObj();\n    const dbName = fieldStore.name;\n    const dimensionArr = [];\n    const measureArr = [];\n    const schema = [];\n    const hashMap = {};\n    const data = [];\n    let newDataModel;\n\n    // Prepare the schema\n    Object.entries(fieldStoreObj).forEach(([key, value]) => {\n        if (sFieldArr.indexOf(key) !== -1 || reducerObj[key]) {\n            schema.push(extend2({}, value.schema()));\n\n            switch (value.schema().type) {\n            case FieldType.MEASURE:\n                measureArr.push(key);\n                break;\n            default:\n            case FieldType.DIMENSION:\n                dimensionArr.push(key);\n            }\n        }\n    });\n    // Prepare the data\n    let rowCount = 0;\n    rowDiffsetIterator(dataModel._rowDiffset, (i) => {\n        let hash = '';\n        dimensionArr.forEach((_) => {\n            hash = `${hash}-${fieldStoreObj[_].partialField.data[i]}`;\n        });\n        if (hashMap[hash] === undefined) {\n            hashMap[hash] = rowCount;\n            data.push({});\n            dimensionArr.forEach((_) => {\n                data[rowCount][_] = fieldStoreObj[_].partialField.data[i];\n            });\n            measureArr.forEach((_) => {\n                data[rowCount][_] = [fieldStoreObj[_].partialField.data[i]];\n            });\n            rowCount += 1;\n        } else {\n            measureArr.forEach((_) => {\n                data[hashMap[hash]][_].push(fieldStoreObj[_].partialField.data[i]);\n            });\n        }\n    });\n\n    // reduction\n    let cachedStore = {};\n    let cloneProvider = () => dataModel.detachedRoot();\n    data.forEach((row) => {\n        const tuple = row;\n        measureArr.forEach((_) => {\n            tuple[_] = reducerObj[_](row[_], cloneProvider, cachedStore);\n        });\n    });\n    if (existingDataModel) {\n        existingDataModel.__calculateFieldspace();\n        newDataModel = existingDataModel;\n    }\n    else {\n        newDataModel = new DataModel(data, schema, { name: dbName });\n    }\n    return newDataModel;\n}\n\nexport { groupBy, getFieldArr, getReducerObj };\n","export { createBinnedFieldData } from './bucket-creator';\nexport { compose, bin, select, project, groupBy as groupby } from './compose';\nexport { calculateVariable, sort } from './pure-operators';\nexport { crossProduct } from './cross-product';\nexport { dataBuilder } from './data-builder';\nexport { difference } from './difference';\nexport { getCommonSchema } from './get-common-schema';\nexport { defReducer, fnList } from './group-by-function';\nexport { groupBy, getFieldArr, getReducerObj } from './group-by';\nexport { mergeSort } from './merge-sort';\nexport { naturalJoinFilter } from './natural-join-filter-function';\nexport { naturalJoin } from './natural-join';\nexport { leftOuterJoin, rightOuterJoin, fullOuterJoin } from './outer-join';\nexport { rowDiffsetIterator } from './row-diffset-iterator';\nexport { union } from './union';\n","/**\n * The default sort function.\n *\n * @param {*} a - The first value.\n * @param {*} b - The second value.\n * @return {number} Returns the comparison result e.g. 1 or 0 or -1.\n */\nfunction defSortFn (a, b) {\n    const a1 = `${a}`;\n    const b1 = `${b}`;\n    if (a1 < b1) {\n        return -1;\n    }\n    if (a1 > b1) {\n        return 1;\n    }\n    return 0;\n}\n\n/**\n * The helper function for merge sort which creates the sorted array\n * from the two halves of the input array.\n *\n * @param {Array} arr - The target array which needs to be merged.\n * @param {number} lo - The starting index of the first array half.\n * @param {number} mid - The ending index of the first array half.\n * @param {number} hi - The ending index of the second array half.\n * @param {Function} sortFn - The sort function.\n */\nfunction merge (arr, lo, mid, hi, sortFn) {\n    const mainArr = arr;\n    const auxArr = [];\n    for (let i = lo; i <= hi; i += 1) {\n        auxArr[i] = mainArr[i];\n    }\n    let a = lo;\n    let b = mid + 1;\n\n    for (let i = lo; i <= hi; i += 1) {\n        if (a > mid) {\n            mainArr[i] = auxArr[b];\n            b += 1;\n        } else if (b > hi) {\n            mainArr[i] = auxArr[a];\n            a += 1;\n        } else if (sortFn(auxArr[a], auxArr[b]) <= 0) {\n            mainArr[i] = auxArr[a];\n            a += 1;\n        } else {\n            mainArr[i] = auxArr[b];\n            b += 1;\n        }\n    }\n}\n\n/**\n * The helper function for merge sort which would be called\n * recursively for sorting the array halves.\n *\n * @param {Array} arr - The target array which needs to be sorted.\n * @param {number} lo - The starting index of the array half.\n * @param {number} hi - The ending index of the array half.\n * @param {Function} sortFn - The sort function.\n * @return {Array} Returns the target array itself.\n */\nfunction sort (arr, lo, hi, sortFn) {\n    if (hi === lo) { return arr; }\n\n    const mid = lo + Math.floor((hi - lo) / 2);\n    sort(arr, lo, mid, sortFn);\n    sort(arr, mid + 1, hi, sortFn);\n    merge(arr, lo, mid, hi, sortFn);\n\n    return arr;\n}\n\n/**\n * The implementation of merge sort.\n * It is used in DataModel for stable sorting as it is not sure\n * what the sorting algorithm used by browsers is stable or not.\n *\n * @param {Array} arr - The target array which needs to be sorted.\n * @param {Function} [sortFn=defSortFn] - The sort function.\n * @return {Array} Returns the input array itself in sorted order.\n */\nexport function mergeSort (arr, sortFn = defSortFn) {\n    if (arr.length > 1) {\n        sort(arr, 0, arr.length - 1, sortFn);\n    }\n    return arr;\n}\n","import { getCommonSchema } from './get-common-schema';\n\n/**\n * The filter function used in natural join.\n * It generates a function that will have the logic to join two\n * DataModel instances by the process of natural join.\n *\n * @param {DataModel} dm1 - The left DataModel instance.\n * @param {DataModel} dm2 - The right DataModel instance.\n * @return {Function} Returns a function that is used in cross-product operation.\n */\nexport function naturalJoinFilter (dm1, dm2) {\n    const dm1FieldStore = dm1.getFieldspace();\n    const dm2FieldStore = dm2.getFieldspace();\n    // const dm1FieldStoreName = dm1FieldStore.name;\n    // const dm2FieldStoreName = dm2FieldStore.name;\n    const commonSchemaArr = getCommonSchema(dm1FieldStore, dm2FieldStore);\n\n    return (dm1Fields, dm2Fields) => {\n        let retainTuple = true;\n        commonSchemaArr.forEach((fieldName) => {\n            if (dm1Fields[fieldName].internalValue ===\n                dm2Fields[fieldName].internalValue && retainTuple) {\n                retainTuple = true;\n            } else {\n                retainTuple = false;\n            }\n        });\n        return retainTuple;\n    };\n}\n","import { crossProduct } from './cross-product';\nimport { naturalJoinFilter } from './natural-join-filter-function';\n\nexport function naturalJoin (dataModel1, dataModel2) {\n    return crossProduct(dataModel1, dataModel2, naturalJoinFilter(dataModel1, dataModel2), true);\n}\n","import { crossProduct } from './cross-product';\nimport { JOINS } from '../constants';\nimport { union } from './union';\n\n\nexport function leftOuterJoin (dataModel1, dataModel2, filterFn) {\n    return crossProduct(dataModel1, dataModel2, filterFn, false, JOINS.LEFTOUTER);\n}\n\nexport function rightOuterJoin (dataModel1, dataModel2, filterFn) {\n    return crossProduct(dataModel2, dataModel1, filterFn, false, JOINS.RIGHTOUTER);\n}\n\nexport function fullOuterJoin (dataModel1, dataModel2, filterFn) {\n    return union(leftOuterJoin(dataModel1, dataModel2, filterFn), rightOuterJoin(dataModel1, dataModel2, filterFn));\n}\n","/**\n * Wrapper on calculateVariable() method of DataModel to behave\n * the pure-function functionality.\n *\n * @param {Array} args - The argument list.\n * @return {any} Returns the returned value of calling function.\n */\nexport const calculateVariable = (...args) => dm => dm.calculateVariable(...args);\n\n/**\n * Wrapper on sort() method of DataModel to behave\n * the pure-function functionality.\n *\n * @param {Array} args - The argument list.\n * @return {any} Returns the returned value of calling function.\n */\nexport const sort = (...args) => dm => dm.sort(...args);\n","/**\n * Iterates through the diffSet array and call the callback with the current\n * index.\n *\n * @param {string} rowDiffset - The row diffset string e.g. '0-4,6,10-13'.\n * @param {Function} callback - The callback function to be called with every index.\n */\nexport function rowDiffsetIterator (rowDiffset, callback) {\n    if (rowDiffset.length > 0) {\n        const rowDiffArr = rowDiffset.split(',');\n        rowDiffArr.forEach((diffStr) => {\n            const diffStsArr = diffStr.split('-');\n            const start = +(diffStsArr[0]);\n            const end = +(diffStsArr[1] || diffStsArr[0]);\n            if (end >= start) {\n                for (let i = start; i <= end; i += 1) {\n                    callback(i);\n                }\n            }\n        });\n    }\n}\n","import { DimensionSubtype, MeasureSubtype } from '../enums';\nimport { mergeSort } from './merge-sort';\nimport { fieldInSchema } from '../helper';\nimport { isCallable, isArray } from '../utils';\n\n/**\n * Generates the sorting functions to sort the data of a DataModel instance\n * according to the input data type.\n *\n * @param {string} dataType - The data type e.g. 'measure', 'datetime' etc.\n * @param {string} sortType - The sorting order i.e. 'asc' or 'desc'.\n * @return {Function} Returns the the sorting function.\n */\nfunction getSortFn (dataType, sortType) {\n    let retFunc;\n\n    switch (dataType) {\n    case MeasureSubtype.CONTINUOUS:\n    case DimensionSubtype.TEMPORAL:\n        if (sortType === 'asc') {\n            retFunc = (a, b) => a - b;\n        } else {\n            retFunc = (a, b) => b - a;\n        }\n        break;\n    default:\n        if (sortType === 'asc') {\n            retFunc = (a, b) => {\n                a = `${a}`;\n                b = `${b}`;\n                if (a === b) {\n                    return 0;\n                }\n                return a > b ? 1 : -1;\n            };\n        } else {\n            retFunc = (a, b) => {\n                a = `${a}`;\n                b = `${b}`;\n                if (a === b) {\n                    return 0;\n                }\n                return a > b ? -1 : 1;\n            };\n        }\n    }\n\n    return retFunc;\n}\n\n/**\n * Resolves the actual sorting function based on sorting string value.\n *\n * @param {Object} fDetails - The target field info.\n * @param {string} strSortOrder - The sort order value.\n * @return {Function} Returns the sorting function.\n */\nfunction resolveStrSortOrder (fDetails, strSortOrder) {\n    const sortOrder = String(strSortOrder).toLowerCase() === 'desc' ? 'desc' : 'asc';\n    return getSortFn(fDetails.type, sortOrder);\n}\n\n/**\n * Groups the data according to the specified target field.\n *\n * @param {Array} data - The input data array.\n * @param {number} fieldIndex - The target field index within schema array.\n * @return {Array} Returns an array containing the grouped data.\n */\nfunction groupData (data, fieldIndex) {\n    const hashMap = new Map();\n    const groupedData = [];\n\n    data.forEach((datum) => {\n        const fieldVal = datum[fieldIndex];\n        if (hashMap.has(fieldVal)) {\n            groupedData[hashMap.get(fieldVal)][1].push(datum);\n        } else {\n            groupedData.push([fieldVal, [datum]]);\n            hashMap.set(fieldVal, groupedData.length - 1);\n        }\n    });\n\n    return groupedData;\n}\n\n/**\n * Creates the argument value used for sorting function when sort is done\n * with another fields.\n *\n * @param {Array} groupedDatum - The grouped datum for a single dimension field value.\n * @param {Array} targetFields - An array of the sorting fields.\n * @param {Array} targetFieldDetails - An array of the sorting field details in schema.\n * @return {Object} Returns an object containing the value of sorting fields and the target field name.\n */\nfunction createSortingFnArg (groupedDatum, targetFields, targetFieldDetails) {\n    const arg = {\n        label: groupedDatum[0]\n    };\n\n    targetFields.reduce((acc, next, idx) => {\n        acc[next] = groupedDatum[1].map(datum => datum[targetFieldDetails[idx].index]);\n        return acc;\n    }, arg);\n\n    return arg;\n}\n\n/**\n * Sorts the data by applying the standard sorting mechanism.\n *\n * @param {Array} data - The input data array.\n * @param {Array} schema - The data schema.\n * @param {Array} sortingDetails - An array containing the sorting configs.\n */\nfunction applyStandardSort (data, schema, sortingDetails) {\n    let fieldName;\n    let sortMeta;\n    let fDetails;\n    let i = sortingDetails.length - 1;\n\n    for (; i >= 0; i--) {\n        fieldName = sortingDetails[i][0];\n        sortMeta = sortingDetails[i][1];\n        fDetails = fieldInSchema(schema, fieldName);\n\n        if (!fDetails) {\n            // eslint-disable-next-line no-continue\n            continue;\n        }\n\n        if (isCallable(sortMeta)) {\n            // eslint-disable-next-line no-loop-func\n            mergeSort(data, (a, b) => sortMeta(a[fDetails.index], b[fDetails.index]));\n        } else if (isArray(sortMeta)) {\n            const groupedData = groupData(data, fDetails.index);\n            const sortingFn = sortMeta[sortMeta.length - 1];\n            const targetFields = sortMeta.slice(0, sortMeta.length - 1);\n            const targetFieldDetails = targetFields.map(f => fieldInSchema(schema, f));\n\n            groupedData.forEach((groupedDatum) => {\n                groupedDatum.push(createSortingFnArg(groupedDatum, targetFields, targetFieldDetails));\n            });\n\n            mergeSort(groupedData, (a, b) => {\n                const m = a[2];\n                const n = b[2];\n                return sortingFn(m, n);\n            });\n\n            // Empty the array\n            data.length = 0;\n            groupedData.forEach((datum) => {\n                data.push(...datum[1]);\n            });\n        } else {\n            const sortFn = resolveStrSortOrder(fDetails, sortMeta);\n            // eslint-disable-next-line no-loop-func\n            mergeSort(data, (a, b) => sortFn(a[fDetails.index], b[fDetails.index]));\n        }\n    }\n}\n\n/**\n * Creates a map based on grouping.\n *\n * @param {Array} depColumns - The dependency columns' info.\n * @param {Array} data - The input data.\n * @param {Array} schema - The data schema.\n * @param {Array} sortingDetails - The sorting details for standard sorting.\n * @return {Map} Returns a map.\n */\nconst makeGroupMapAndSort = (depColumns, data, schema, sortingDetails) => {\n    if (depColumns.length === 0) { return data; }\n\n    const targetCol = depColumns[0];\n    const map = new Map();\n\n    data.reduce((acc, currRow) => {\n        const fVal = currRow[targetCol.index];\n        if (acc.has(fVal)) {\n            acc.get(fVal).push(currRow);\n        } else {\n            acc.set(fVal, [currRow]);\n        }\n        return acc;\n    }, map);\n\n    for (let [key, val] of map) {\n        const nMap = makeGroupMapAndSort(depColumns.slice(1), val, schema, sortingDetails);\n        map.set(key, nMap);\n        if (Array.isArray(nMap)) {\n            applyStandardSort(nMap, schema, sortingDetails);\n        }\n    }\n\n    return map;\n};\n\n/**\n * Sorts the data by retaining the position/order of a particular field.\n *\n * @param {Array} data - The input data array.\n * @param {Array} schema - The data schema.\n * @param {Array} sortingDetails - An array containing the sorting configs.\n * @param {Array} depColumns - The dependency column list.\n * @return {Array} Returns the sorted data.\n */\nfunction applyGroupSort (data, schema, sortingDetails, depColumns) {\n    sortingDetails = sortingDetails.filter((detail) => {\n        if (detail[1] === null) {\n            depColumns.push(detail[0]);\n            return false;\n        }\n        return true;\n    });\n    if (sortingDetails.length === 0) { return data; }\n\n    depColumns = depColumns.map(c => fieldInSchema(schema, c));\n\n    const sortedGroupMap = makeGroupMapAndSort(depColumns, data, schema, sortingDetails);\n    return data.map((row) => {\n        let i = 0;\n        let nextMap = sortedGroupMap;\n\n        while (!Array.isArray(nextMap)) {\n            nextMap = nextMap.get(row[depColumns[i++].index]);\n        }\n\n        return nextMap.shift();\n    });\n}\n\n/**\n * Sorts the data.\n *\n * @param {Object} dataObj - An object containing the data and schema.\n * @param {Array} sortingDetails - An array containing the sorting configs.\n */\nexport function sortData (dataObj, sortingDetails) {\n    let { schema, data } = dataObj;\n\n    sortingDetails = sortingDetails.filter(sDetial => !!fieldInSchema(schema, sDetial[0]));\n    if (sortingDetails.length === 0) { return; }\n\n    let groupSortingIdx = sortingDetails.findIndex(sDetial => sDetial[1] === null);\n    groupSortingIdx = groupSortingIdx !== -1 ? groupSortingIdx : sortingDetails.length;\n\n    const standardSortingDetails = sortingDetails.slice(0, groupSortingIdx);\n    const groupSortingDetails = sortingDetails.slice(groupSortingIdx);\n\n    applyStandardSort(data, schema, standardSortingDetails);\n    data = applyGroupSort(data, schema, groupSortingDetails, standardSortingDetails.map(detail => detail[0]));\n\n    dataObj.uids = data.map(row => row.pop());\n    dataObj.data = data;\n}\n","import DataModel from '../export';\nimport { extend2 } from '../utils';\nimport { rowDiffsetIterator } from './row-diffset-iterator';\nimport { isArrEqual } from '../utils/helper';\n/**\n * Performs the union operation between two dm instances.\n *\n * @param {dm} dm1 - The first dm instance.\n * @param {dm} dm2 - The second dm instance.\n * @return {dm} Returns the newly created dm after union operation.\n */\nexport function union (dm1, dm2) {\n    const hashTable = {};\n    const schema = [];\n    const schemaNameArr = [];\n    const data = [];\n    const dm1FieldStore = dm1.getFieldspace();\n    const dm2FieldStore = dm2.getFieldspace();\n    const dm1FieldStoreFieldObj = dm1FieldStore.fieldsObj();\n    const dm2FieldStoreFieldObj = dm2FieldStore.fieldsObj();\n    const name = `${dm1FieldStore.name} union ${dm2FieldStore.name}`;\n\n    // For union the columns should match otherwise return a clone of the dm1\n    if (!isArrEqual(dm1._colIdentifier.split(',').sort(), dm2._colIdentifier.split(',').sort())) {\n        return null;\n    }\n\n    // Prepare the schema\n    (dm1._colIdentifier.split(',')).forEach((fieldName) => {\n        const field = dm1FieldStoreFieldObj[fieldName];\n        schema.push(extend2({}, field.schema()));\n        schemaNameArr.push(field.schema().name);\n    });\n\n    /**\n     * The helper function to create the data.\n     *\n     * @param {dm} dm - The dm instance for which the data is inserted.\n     * @param {Object} fieldsObj - The fieldStore object format.\n     */\n    function prepareDataHelper (dm, fieldsObj) {\n        rowDiffsetIterator(dm._rowDiffset, (i) => {\n            const tuple = {};\n            let hashData = '';\n            schemaNameArr.forEach((schemaName) => {\n                const value = fieldsObj[schemaName].partialField.data[i];\n                hashData += `-${value}`;\n                tuple[schemaName] = value;\n            });\n            if (!hashTable[hashData]) {\n                data.push(tuple);\n                hashTable[hashData] = true;\n            }\n        });\n    }\n\n    // Prepare the data\n    prepareDataHelper(dm1, dm1FieldStoreFieldObj);\n    prepareDataHelper(dm2, dm2FieldStoreFieldObj);\n\n    return new DataModel(data, schema, { name });\n}\n","import { FilteringMode } from './enums';\nimport { getUniqueId } from './utils';\nimport {\n    updateFields,\n    cloneWithSelect,\n    cloneWithProject,\n    updateData,\n    getNormalizedProFields\n} from './helper';\nimport { crossProduct, difference, naturalJoinFilter, union } from './operator';\n\n/**\n * Relation provides the definitions of basic operators of relational algebra like *selection*, *projection*, *union*,\n * *difference* etc.\n *\n * It is extended by {@link DataModel} to inherit the functionalities of relational algebra concept.\n *\n * @class\n * @public\n * @module Relation\n * @namespace DataModel\n */\nclass Relation {\n\n    /**\n     * Creates a new Relation instance by providing underlying data and schema.\n     *\n     * @private\n     *\n     * @param {Object | string | Relation} data - The input tabular data in dsv or json format or\n     * an existing Relation instance object.\n     * @param {Array} schema - An array of data schema.\n     * @param {Object} [options] - The optional options.\n     */\n    constructor (...params) {\n        let source;\n\n        this._parent = null;\n        this._derivation = [];\n        this._ancestorDerivation = [];\n        this._children = [];\n\n        if (params.length === 1 && ((source = params[0]) instanceof Relation)) {\n            // parent datamodel was passed as part of source\n            this._colIdentifier = source._colIdentifier;\n            this._rowDiffset = source._rowDiffset;\n            this._dataFormat = source._dataFormat;\n            this._parent = source;\n            this._partialFieldspace = this._parent._partialFieldspace;\n            this._fieldStoreName = getUniqueId();\n            this.__calculateFieldspace().calculateFieldsConfig();\n        } else {\n            updateData(this, ...params);\n            this._fieldStoreName = this._partialFieldspace.name;\n            this.__calculateFieldspace().calculateFieldsConfig();\n            this._propagationNameSpace = {\n                mutableActions: {},\n                immutableActions: {}\n            };\n        }\n    }\n\n    /**\n     * Retrieves the {@link Schema | schema} details for every {@link Field | field} as an array.\n     *\n     * @public\n     *\n     * @return {Array.<Schema>} Array of fields schema.\n     *      ```\n     *      [\n     *          { name: 'Name', type: 'dimension' },\n     *          { name: 'Miles_per_Gallon', type: 'measure', numberFormat: (val) => `${val} miles / gallon` },\n     *          { name: 'Cylinder', type: 'dimension' },\n     *          { name: 'Displacement', type: 'measure', defAggFn: 'max' },\n     *          { name: 'HorsePower', type: 'measure', defAggFn: 'max' },\n     *          { name: 'Weight_in_lbs', type: 'measure', defAggFn: 'avg',  },\n     *          { name: 'Acceleration', type: 'measure', defAggFn: 'avg' },\n     *          { name: 'Year', type: 'dimension', subtype: 'datetime', format: '%Y' },\n     *          { name: 'Origin' }\n     *      ]\n     *      ```\n     */\n    getSchema () {\n        return this.getFieldspace().fields.map(d => d.schema());\n    }\n\n    /**\n     * Returns the name of the {@link DataModel} instance. If no name was specified during {@link DataModel}\n     * initialization, then it returns a auto-generated name.\n     *\n     * @public\n     *\n     * @return {string} Name of the DataModel instance.\n     */\n    getName() {\n        return this._fieldStoreName;\n    }\n\n    getFieldspace () {\n        return this._fieldspace;\n    }\n\n    __calculateFieldspace () {\n        this._fieldspace = updateFields([this._rowDiffset, this._colIdentifier],\n             this.getPartialFieldspace(), this._fieldStoreName);\n        return this;\n    }\n\n    getPartialFieldspace () {\n        return this._partialFieldspace;\n    }\n\n    /**\n     * Performs {@link link_of_cross_product | cross-product} between two {@link DataModel} instances and returns a\n     * new {@link DataModel} instance containing the results. This operation is also called theta join.\n     *\n     * Cross product takes two set and create one set where each value of one set is paired with each value of another\n     * set.\n     *\n     * This method takes an optional predicate which filters the generated result rows. If the predicate returns true\n     * the combined row is included in the resulatant table.\n     *\n     * @example\n     *  let originDM = dm.project(['Origin','Origin_Formal_Name']);\n     *  let carsDM = dm.project(['Name','Miles_per_Gallon','Origin'])\n     *\n     *  console.log(carsDM.join(originDM)));\n     *\n     *  console.log(carsDM.join(originDM,\n     *      obj => obj.[originDM.getName()].Origin === obj.[carsDM.getName()].Origin));\n     *\n     * @text\n     * This is chained version of `join` operator. `join` can also be used as\n     * {@link link_to_join_op | functional operator}.\n     *\n     * @public\n     *\n     * @param {DataModel} joinWith - The DataModel to be joined with the current instance DataModel.\n     * @param {SelectionPredicate} filterFn - The predicate function that will filter the result of the crossProduct.\n     *\n     * @return {DataModel} New DataModel instance created after joining.\n     */\n    join (joinWith, filterFn) {\n        return crossProduct(this, joinWith, filterFn);\n    }\n\n    /**\n     * {@link natural_join | Natural join} is a special kind of cross-product join where filtering of rows are performed\n     * internally by resolving common fields are from both table and the rows with common value are included.\n     *\n     * @example\n     *  let originDM = dm.project(['Origin','Origin_Formal_Name']);\n     *  let carsDM = dm.project(['Name','Miles_per_Gallon','Origin'])\n     *\n     *  console.log(carsDM.naturalJoin(originDM));\n     *\n     * @text\n     * This is chained version of `naturalJoin` operator. `naturalJoin` can also be used as\n     * {@link link_to_join_op | functional operator}.\n     *\n     * @public\n     *\n     * @param {DataModel} joinWith - The DataModel with which the current instance of DataModel on which the method is\n     *      called will be joined.\n     * @return {DataModel} New DataModel instance created after joining.\n     */\n    naturalJoin (joinWith) {\n        return crossProduct(this, joinWith, naturalJoinFilter(this, joinWith), true);\n    }\n\n    /**\n     * {@link link_to_union | Union} operation can be termed as vertical stacking of all rows from both the DataModel\n     * instances, provided that both of the {@link DataModel} instances should have same column names.\n     *\n     * @example\n     * console.log(EuropeanMakerDM.union(USAMakerDM));\n     *\n     * @text\n     * This is chained version of `naturalJoin` operator. `naturalJoin` can also be used as\n     * {@link link_to_join_op | functional operator}.\n     *\n     * @public\n     *\n     * @param {DataModel} unionWith - DataModel instance for which union has to be applied with the instance on which\n     *      the method is called\n     *\n     * @return {DataModel} New DataModel instance with the result of the operation\n     */\n    union (unionWith) {\n        return union(this, unionWith);\n    }\n\n    /**\n     * {@link link_to_difference | Difference } operation only include rows which are present in the datamodel on which\n     * it was called but not on the one passed as argument.\n     *\n     * @example\n     * console.log(highPowerDM.difference(highExpensiveDM));\n     *\n     * @text\n     * This is chained version of `naturalJoin` operator. `naturalJoin` can also be used as\n     * {@link link_to_join_op | functional operator}.\n     *\n     * @public\n     *\n     * @param {DataModel} differenceWith - DataModel instance for which difference has to be applied with the instance\n     *      on which the method is called\n     * @return {DataModel} New DataModel instance with the result of the operation\n     */\n    difference (differenceWith) {\n        return difference(this, differenceWith);\n    }\n\n    /**\n     * {@link link_to_selection | Selection} is a row filtering operation. It expects a predicate and an optional mode\n     * which control which all rows should be included in the resultant DataModel instance.\n     *\n     * {@link SelectionPredicate} is a function which returns a boolean value. For selection operation the selection\n     * function is called for each row of DataModel instance with the current row passed as argument.\n     *\n     * After executing {@link SelectionPredicate} the rows are labeled as either an entry of selection set or an entry\n     * of rejection set.\n     *\n     * {@link FilteringMode} operates on the selection and rejection set to determine which one would reflect in the\n     * resultant datamodel.\n     *\n     * @warning\n     * Selection and rejection set is only a logical idea for concept explanation purpose.\n     *\n     * @example\n     *  // with selection mode NORMAL:\n     *  const normDt = dt.select(fields => fields.Origin.value === \"USA\")\n     *  console.log(normDt));\n     *\n     * // with selection mode INVERSE:\n     * const inverDt = dt.select(fields => fields.Origin.value === \"USA\", { mode: DataModel.FilteringMode.INVERSE })\n     * console.log(inverDt);\n     *\n     * // with selection mode ALL:\n     * const dtArr = dt.select(fields => fields.Origin.value === \"USA\", { mode: DataModel.FilteringMode.ALL })\n     * // print the selected parts\n     * console.log(dtArr[0]);\n     * // print the inverted parts\n     * console.log(dtArr[1]);\n     *\n     * @text\n     * This is chained version of `select` operator. `select` can also be used as\n     * {@link link_to_join_op | functional operator}.\n     *\n     * @public\n     *\n     * @param {Function} selectFn - The predicate function which is called for each row with the current row.\n     * ```\n     *  function (row, i, cloneProvider, store)  { ... }\n     * ```\n     * @param {Object} config - The configuration object to control the inclusion exclusion of a row in resultant\n     * DataModel instance.\n     * @param {FilteringMode} [config.mode=FilteringMode.NORMAL] - The mode of the selection.\n     * @return {DataModel} Returns the new DataModel instance(s) after operation.\n     */\n    select (selectFn, config) {\n        const defConfig = {\n            mode: FilteringMode.NORMAL,\n            saveChild: true\n        };\n        config = Object.assign({}, defConfig, config);\n        config.mode = config.mode || defConfig.mode;\n\n        const cloneConfig = { saveChild: config.saveChild };\n        return cloneWithSelect(\n            this,\n            selectFn,\n            config,\n            cloneConfig\n        );\n    }\n\n    /**\n     * Retrieves a boolean value if the current {@link DataModel} instance has data.\n     *\n     * @example\n     * const schema = [\n     *    { name: 'CarName', type: 'dimension' },\n     *    { name: 'HorsePower', type: 'measure' },\n     *    { name: \"Origin\", type: 'dimension' }\n     * ];\n     * const data = [];\n     *\n     * const dt = new DataModel(data, schema);\n     * console.log(dt.isEmpty());\n     *\n     * @public\n     *\n     * @return {Boolean} True if the datamodel has no data, otherwise false.\n     */\n    isEmpty () {\n        return !this._rowDiffset.length || !this._colIdentifier.length;\n    }\n\n    /**\n     * Creates a clone from the current DataModel instance with child parent relationship.\n     *\n     * @private\n     * @param {boolean} [saveChild=true] - Whether the cloned instance would be recorded in the parent instance.\n     * @return {DataModel} - Returns the newly cloned DataModel instance.\n     */\n    clone (saveChild = true) {\n        const clonedDm = new this.constructor(this);\n        if (saveChild) {\n            clonedDm.setParent(this);\n        } else {\n            clonedDm.setParent(null);\n        }\n        return clonedDm;\n    }\n\n    /**\n     * {@link Projection} is filter column (field) operation. It expects list of fields' name and either include those\n     * or exclude those based on {@link FilteringMode} on the resultant variable.\n     *\n     * Projection expects array of fields name based on which it creates the selection and rejection set. All the field\n     * whose name is present in array goes in selection set and rest of the fields goes in rejection set.\n     *\n     * {@link FilteringMode} operates on the selection and rejection set to determine which one would reflect in the\n     * resulatant datamodel.\n     *\n     * @warning\n     * Selection and rejection set is only a logical idea for concept explanation purpose.\n     *\n     * @example\n     *  const dm = new DataModel(data, schema);\n     *\n     *  // with projection mode NORMAL:\n     *  const normDt = dt.project([\"Name\", \"HorsePower\"]);\n     *  console.log(normDt.getData());\n     *\n     *  // with projection mode INVERSE:\n     *  const inverDt = dt.project([\"Name\", \"HorsePower\"], { mode: DataModel.FilteringMode.INVERSE })\n     *  console.log(inverDt.getData());\n     *\n     *  // with selection mode ALL:\n     *  const dtArr = dt.project([\"Name\", \"HorsePower\"], { mode: DataModel.FilteringMode.ALL })\n     *  // print the normal parts\n     *  console.log(dtArr[0].getData());\n     *  // print the inverted parts\n     *  console.log(dtArr[1].getData());\n     *\n     * @text\n     * This is chained version of `select` operator. `select` can also be used as\n     * {@link link_to_join_op | functional operator}.\n     *\n     * @public\n     *\n     * @param {Array.<string | Regexp>} projField - An array of column names in string or regular expression.\n     * @param {Object} [config] - An optional config to control the creation of new DataModel\n     * @param {FilteringMode} [config.mode=FilteringMode.NORMAL] - Mode of the projection\n     *\n     * @return {DataModel} Returns the new DataModel instance after operation.\n     */\n    project (projField, config) {\n        const defConfig = {\n            mode: FilteringMode.NORMAL,\n            saveChild: true\n        };\n        config = Object.assign({}, defConfig, config);\n        const fieldConfig = this.getFieldsConfig();\n        const allFields = Object.keys(fieldConfig);\n        const { mode } = config;\n        const normalizedProjField = getNormalizedProFields(projField, allFields, fieldConfig);\n\n        let dataModel;\n\n        if (mode === FilteringMode.ALL) {\n            let projectionClone = cloneWithProject(this, normalizedProjField, {\n                mode: FilteringMode.NORMAL,\n                saveChild: config.saveChild\n            }, allFields);\n            let rejectionClone = cloneWithProject(this, normalizedProjField, {\n                mode: FilteringMode.INVERSE,\n                saveChild: config.saveChild\n            }, allFields);\n            dataModel = [projectionClone, rejectionClone];\n        } else {\n            let projectionClone = cloneWithProject(this, normalizedProjField, config, allFields);\n            dataModel = projectionClone;\n        }\n\n        return dataModel;\n    }\n\n    getFieldsConfig () {\n        return this._fieldConfig;\n    }\n\n    calculateFieldsConfig () {\n        this._fieldConfig = this._fieldspace.fields.reduce((acc, fieldObj, i) => {\n            acc[fieldObj.name()] = {\n                index: i,\n                def: fieldObj.schema(),\n            };\n            return acc;\n        }, {});\n        return this;\n    }\n\n\n    /**\n     * Frees up the resources associated with the current DataModel instance and breaks all the links instance has in\n     * the DAG.\n     *\n     * @public\n     */\n    dispose () {\n        this._parent && this._parent.removeChild(this);\n        this._parent = null;\n        this._children.forEach((child) => {\n            child._parent = null;\n        });\n        this._children = [];\n    }\n\n    /**\n     * Removes the specified child {@link DataModel} from the child list of the current {@link DataModel} instance.\n     *\n     * @example\n     * const schema = [\n     *    { name: 'Name', type: 'dimension' },\n     *    { name: 'HorsePower', type: 'measure' },\n     *    { name: \"Origin\", type: 'dimension' }\n     * ];\n     *\n     * const data = [\n     *    { Name: \"chevrolet chevelle malibu\", Horsepower: 130, Origin: \"USA\" },\n     *    { Name: \"citroen ds-21 pallas\", Horsepower: 115, Origin: \"Europe\" },\n     *    { Name: \"datsun pl510\", Horsepower: 88, Origin: \"Japan\" },\n     *    { Name: \"amc rebel sst\", Horsepower: 150, Origin: \"USA\"},\n     * ]\n     *\n     * const dt = new DataModel(data, schema);\n     *\n     * const dt2 = dt.select(fields => fields.Origin.value === \"USA\")\n     * dt.removeChild(dt2);\n     *\n     * @private\n     *\n     * @param {DataModel} child - Delegates the parent to remove this child.\n     */\n    removeChild (child) {\n        let idx = this._children.findIndex(sibling => sibling === child);\n        idx !== -1 ? this._children.splice(idx, 1) : true;\n    }\n\n    /**\n     * Sets the specified {@link DataModel} as a parent for the current {@link DataModel} instance.\n     *\n     * @param {DataModel} parent - The datamodel instance which will act as parent.\n     */\n    setParent (parent) {\n        this._parent && this._parent.removeChild(this);\n        this._parent = parent;\n        parent && parent._children.push(this);\n    }\n\n    /**\n     * Returns the parent {@link DataModel} instance.\n     *\n     * @example\n     * const schema = [\n     *    { name: 'Name', type: 'dimension' },\n     *    { name: 'HorsePower', type: 'measure' },\n     *    { name: \"Origin\", type: 'dimension' }\n     * ];\n     *\n     * const data = [\n     *    { Name: \"chevrolet chevelle malibu\", Horsepower: 130, Origin: \"USA\" },\n     *    { Name: \"citroen ds-21 pallas\", Horsepower: 115, Origin: \"Europe\" },\n     *    { Name: \"datsun pl510\", Horsepower: 88, Origin: \"Japan\" },\n     *    { Name: \"amc rebel sst\", Horsepower: 150, Origin: \"USA\"},\n     * ]\n     *\n     * const dt = new DataModel(data, schema);\n     *\n     * const dt2 = dt.select(fields => fields.Origin.value === \"USA\");\n     * const parentDm = dt2.getParent();\n     *\n     * @return {DataModel} Returns the parent DataModel instance.\n     */\n    getParent () {\n        return this._parent;\n    }\n\n    /**\n     * Returns the immediate child {@link DataModel} instances.\n     *\n     * @example\n     * const schema = [\n     *    { name: 'Name', type: 'dimension' },\n     *    { name: 'HorsePower', type: 'measure' },\n     *    { name: \"Origin\", type: 'dimension' }\n     * ];\n     *\n     * const data = [\n     *    { Name: \"chevrolet chevelle malibu\", Horsepower: 130, Origin: \"USA\" },\n     *    { Name: \"citroen ds-21 pallas\", Horsepower: 115, Origin: \"Europe\" },\n     *    { Name: \"datsun pl510\", Horsepower: 88, Origin: \"Japan\" },\n     *    { Name: \"amc rebel sst\", Horsepower: 150, Origin: \"USA\"},\n     * ]\n     *\n     * const dt = new DataModel(data, schema);\n     *\n     * const childDm1 = dt.select(fields => fields.Origin.value === \"USA\");\n     * const childDm2 = dt.select(fields => fields.Origin.value === \"Japan\");\n     * const childDm3 = dt.groupBy([\"Origin\"]);\n     *\n     * @return {DataModel[]} Returns the immediate child DataModel instances.\n     */\n    getChildren () {\n        return this._children;\n    }\n\n    /**\n     * Returns the in-between operation meta data while creating the current {@link DataModel} instance.\n     *\n     * @example\n     * const schema = [\n     *   { name: 'Name', type: 'dimension' },\n     *   { name: 'HorsePower', type: 'measure' },\n     *   { name: \"Origin\", type: 'dimension' }\n     * ];\n     *\n     * const data = [\n     *   { Name: \"chevrolet chevelle malibu\", Horsepower: 130, Origin: \"USA\" },\n     *   { Name: \"citroen ds-21 pallas\", Horsepower: 115, Origin: \"Europe\" },\n     *   { Name: \"datsun pl510\", Horsepower: 88, Origin: \"Japan\" },\n     *   { Name: \"amc rebel sst\", Horsepower: 150, Origin: \"USA\"},\n     * ]\n     *\n     * const dt = new DataModel(data, schema);\n     * const dt2 = dt.select(fields => fields.Origin.value === \"USA\");\n     * const dt3 = dt2.groupBy([\"Origin\"]);\n     * const derivations = dt3.getDerivations();\n     *\n     * @return {Any[]} Returns the derivation meta data.\n     */\n    getDerivations () {\n        return this._derivation;\n    }\n\n    /**\n     * Returns the in-between operation meta data happened from root {@link DataModel} to current instance.\n     *\n     * @example\n     * const schema = [\n     *   { name: 'Name', type: 'dimension' },\n     *   { name: 'HorsePower', type: 'measure' },\n     *   { name: \"Origin\", type: 'dimension' }\n     * ];\n     *\n     * const data = [\n     *   { Name: \"chevrolet chevelle malibu\", Horsepower: 130, Origin: \"USA\" },\n     *   { Name: \"citroen ds-21 pallas\", Horsepower: 115, Origin: \"Europe\" },\n     *   { Name: \"datsun pl510\", Horsepower: 88, Origin: \"Japan\" },\n     *   { Name: \"amc rebel sst\", Horsepower: 150, Origin: \"USA\"},\n     * ]\n     *\n     * const dt = new DataModel(data, schema);\n     * const dt2 = dt.select(fields => fields.Origin.value === \"USA\");\n     * const dt3 = dt2.groupBy([\"Origin\"]);\n     * const ancDerivations = dt3.getAncestorDerivations();\n     *\n     * @return {Any[]} Returns the previous derivation meta data.\n     */\n    getAncestorDerivations () {\n        return this._ancestorDerivation;\n    }\n}\n\nexport default Relation;\n","import { fnList } from '../operator/group-by-function';\n\nexport const { sum, avg, min, max, first, last, count, std: sd } = fnList;\n","/**\n * The utility function to calculate major column.\n *\n * @param {Object} store - The store object.\n * @return {Function} Returns the push function.\n */\nexport default (store) => {\n    let i = 0;\n    return (...fields) => {\n        fields.forEach((val, fieldIndex) => {\n            if (!(store[fieldIndex] instanceof Array)) {\n                store[fieldIndex] = Array.from({ length: i });\n            }\n            store[fieldIndex].push(val);\n        });\n        i++;\n    };\n};\n","/**\n * Creates a JS native date object from input\n *\n * @param {string | number | Date} date Input using which date object to be created\n * @return {Date} : JS native date object\n */\nfunction convertToNativeDate (date) {\n    if (date instanceof Date) {\n        return date;\n    }\n\n    return new Date(date);\n}\n/**\n * Apply padding before a number if its less than 1o. This is used when constant digit's number to be returned\n * between 0 - 99\n *\n * @param {number} n Input to be padded\n * @return {string} Padded number\n */\nfunction pad (n) {\n    return (n < 10) ? (`0${n}`) : n;\n}\n/*\n * DateFormatter utility to convert any date format to any other date format\n * DateFormatter parse a date time stamp specified by a user abiding by rules which are defined\n * by user in terms of token. It creates JS native date object from the user specified format.\n * That native date can also be displayed\n * in any specified format.\n * This utility class only takes care of format conversion only\n */\n\n/*\n * Escapes all the special character that are used in regular expression.\n * Like\n * RegExp.escape('sgfd-$') // Output: sgfd\\-\\$\n *\n * @param text {String} : text which is to be escaped\n */\nRegExp.escape = function (text) {\n    return text.replace(/[-[\\]{}()*+?.,\\\\^$|#\\s]/g, '\\\\$&');\n};\n\n/**\n * DateTimeFormatter class to convert any user format of date time stamp to any other format\n * of date time stamp.\n *\n * @param {string} format Format of the date given. For the above date,\n * 'year: %Y, month: %b, day: %d'.\n * @class\n */\n/* istanbul ignore next */ function DateTimeFormatter (format) {\n    this.format = format;\n    this.dtParams = undefined;\n    this.nativeDate = undefined;\n}\n\n// The identifier of the tokens\nDateTimeFormatter.TOKEN_PREFIX = '%';\n\n// JS native Date constructor takes the date params (year, month, etc) in a certail sequence.\n// This defines the sequence of the date parameters in the constructor.\nDateTimeFormatter.DATETIME_PARAM_SEQUENCE = {\n    YEAR: 0,\n    MONTH: 1,\n    DAY: 2,\n    HOUR: 3,\n    MINUTE: 4,\n    SECOND: 5,\n    MILLISECOND: 6\n};\n\n/*\n * This is a default number parsing utility. It tries to parse a number in integer, if parsing is unsuccessful, it\n * gives back a default value.\n *\n * @param: defVal {Number} : Default no if the parsing to integer is not successful\n * @return {Function} : An closure function which is to be called by passing an the value which needs to be parsed.\n */\nDateTimeFormatter.defaultNumberParser = function (defVal) {\n    return function (val) {\n        let parsedVal;\n        if (isFinite(parsedVal = parseInt(val, 10))) {\n            return parsedVal;\n        }\n\n        return defVal;\n    };\n};\n\n/*\n * This is a default number range utility. It tries to find an element in the range. If not found it returns a\n * default no as an index.\n *\n * @param: range {Array} : The list which is to be serached\n * @param: defVal {Number} : Default no if the serach and find does not return anything\n * @return {Function} : An closure function which is to be called by passing an the value which needs to be found\n */\nDateTimeFormatter.defaultRangeParser = function (range, defVal) {\n    return (val) => {\n        let i;\n        let l;\n\n        if (!val) { return defVal; }\n\n        const nVal = val.toLowerCase();\n\n        for (i = 0, l = range.length; i < l; i++) {\n            if (range[i].toLowerCase() === nVal) {\n                return i;\n            }\n        }\n\n        if (i === undefined) {\n            return defVal;\n        }\n        return null;\n    };\n};\n\n/*\n * Defines the tokens which are supporter by the dateformatter. Using this definitation a value gets extracted from\n * the user specifed date string. This also formats the value for display purpose from native JS date.\n * The definition of each token contains the following named properties\n * {\n *     %token_name% : {\n *         name: name of the token, this is used in reverse lookup,\n *         extract: a function that returns the regular expression to extract that piece of information. All the\n *                  regex should be gouped by using ()\n *         parser: a function which receives value extracted by the above regex and parse it to get the date params\n *         formatter: a formatter function that takes milliseconds or JS Date object and format the param\n *                  represented by the token only.\n *     }\n * }\n *\n * @return {Object} : Definition of the all the supported tokens.\n */\nDateTimeFormatter.getTokenDefinitions = function () {\n    const daysDef = {\n        short: [\n            'Sun',\n            'Mon',\n            'Tue',\n            'Wed',\n            'Thu',\n            'Fri',\n            'Sat'\n        ],\n        long: [\n            'Sunday',\n            'Monday',\n            'Tuesday',\n            'Wednesday',\n            'Thursday',\n            'Friday',\n            'Saturday'\n        ]\n    };\n    const monthsDef = {\n        short: [\n            'Jan',\n            'Feb',\n            'Mar',\n            'Apr',\n            'May',\n            'Jun',\n            'Jul',\n            'Aug',\n            'Sep',\n            'Oct',\n            'Nov',\n            'Dec'\n        ],\n        long: [\n            'January',\n            'February',\n            'March',\n            'April',\n            'May',\n            'June',\n            'July',\n            'August',\n            'September',\n            'October',\n            'November',\n            'December'\n        ]\n    };\n\n    const definitions = {\n        H: {\n            // 24 hours format\n            name: 'H',\n            index: 3,\n            extract () { return '(\\\\d+)'; },\n            parser: DateTimeFormatter.defaultNumberParser(),\n            formatter (val) {\n                const d = convertToNativeDate(val);\n\n                return d.getHours().toString();\n            }\n        },\n        l: {\n            // 12 hours format\n            name: 'l',\n            index: 3,\n            extract () { return '(\\\\d+)'; },\n            parser: DateTimeFormatter.defaultNumberParser(),\n            formatter (val) {\n                const d = convertToNativeDate(val);\n                const hours = d.getHours() % 12;\n\n                return (hours === 0 ? 12 : hours).toString();\n            }\n        },\n        p: {\n            // AM or PM\n            name: 'p',\n            index: 3,\n            extract () { return '(AM|PM)'; },\n            parser: (val) => {\n                if (val) {\n                    return val.toLowerCase();\n                }\n                return null;\n            },\n            formatter: (val) => {\n                const d = convertToNativeDate(val);\n                const hours = d.getHours();\n\n                return (hours < 12 ? 'AM' : 'PM');\n            }\n        },\n        P: {\n            // am or pm\n            name: 'P',\n            index: 3,\n            extract () { return '(am|pm)'; },\n            parser: (val) => {\n                if (val) {\n                    return val.toLowerCase();\n                }\n                return null;\n            },\n            formatter: (val) => {\n                const d = convertToNativeDate(val);\n                const hours = d.getHours();\n\n                return (hours < 12 ? 'am' : 'pm');\n            }\n        },\n        M: {\n            // Two digit minutes 00 - 59\n            name: 'M',\n            index: 4,\n            extract () { return '(\\\\d+)'; },\n            parser: DateTimeFormatter.defaultNumberParser(),\n            formatter (val) {\n                const d = convertToNativeDate(val);\n                const mins = d.getMinutes();\n\n                return pad(mins);\n            }\n        },\n        S: {\n            // Two digit seconds 00 - 59\n            name: 'S',\n            index: 5,\n            extract () { return '(\\\\d+)'; },\n            parser: DateTimeFormatter.defaultNumberParser(),\n            formatter (val) {\n                const d = convertToNativeDate(val);\n                const seconds = d.getSeconds();\n\n                return pad(seconds);\n            }\n        },\n        K: {\n            // Milliseconds\n            name: 'K',\n            index: 6,\n            extract () { return '(\\\\d+)'; },\n            parser: DateTimeFormatter.defaultNumberParser(),\n            formatter (val) {\n                const d = convertToNativeDate(val);\n                const ms = d.getMilliseconds();\n\n                return ms.toString();\n            }\n        },\n        a: {\n            // Short name of day, like Mon\n            name: 'a',\n            index: 2,\n            extract () { return `(${daysDef.short.join('|')})`; },\n            parser: DateTimeFormatter.defaultRangeParser(daysDef.short),\n            formatter (val) {\n                const d = convertToNativeDate(val);\n                const day = d.getDay();\n\n                return (daysDef.short[day]).toString();\n            }\n        },\n        A: {\n            // Long name of day, like Monday\n            name: 'A',\n            index: 2,\n            extract () { return `(${daysDef.long.join('|')})`; },\n            parser: DateTimeFormatter.defaultRangeParser(daysDef.long),\n            formatter (val) {\n                const d = convertToNativeDate(val);\n                const day = d.getDay();\n\n                return (daysDef.long[day]).toString();\n            }\n        },\n        e: {\n            // 8 of March, 11 of November\n            name: 'e',\n            index: 2,\n            extract () { return '(\\\\d+)'; },\n            parser: DateTimeFormatter.defaultNumberParser(),\n            formatter (val) {\n                const d = convertToNativeDate(val);\n                const day = d.getDate();\n\n                return day.toString();\n            }\n        },\n        d: {\n            // 08 of March, 11 of November\n            name: 'd',\n            index: 2,\n            extract () { return '(\\\\d+)'; },\n            parser: DateTimeFormatter.defaultNumberParser(),\n            formatter (val) {\n                const d = convertToNativeDate(val);\n                const day = d.getDate();\n\n                return pad(day);\n            }\n        },\n        b: {\n            // Short month, like Jan\n            name: 'b',\n            index: 1,\n            extract () { return `(${monthsDef.short.join('|')})`; },\n            parser: DateTimeFormatter.defaultRangeParser(monthsDef.short),\n            formatter (val) {\n                const d = convertToNativeDate(val);\n                const month = d.getMonth();\n\n                return (monthsDef.short[month]).toString();\n            }\n        },\n        B: {\n            // Long month, like January\n            name: 'B',\n            index: 1,\n            extract () { return `(${monthsDef.long.join('|')})`; },\n            parser: DateTimeFormatter.defaultRangeParser(monthsDef.long),\n            formatter (val) {\n                const d = convertToNativeDate(val);\n                const month = d.getMonth();\n\n                return (monthsDef.long[month]).toString();\n            }\n        },\n        m: {\n            // Two digit month of year like 01 for January\n            name: 'm',\n            index: 1,\n            extract () { return '(\\\\d+)'; },\n            parser (val) { return DateTimeFormatter.defaultNumberParser()(val) - 1; },\n            formatter (val) {\n                const d = convertToNativeDate(val);\n                const month = d.getMonth();\n\n                return pad(month + 1);\n            }\n        },\n        y: {\n            // Short year like 90 for 1990\n            name: 'y',\n            index: 0,\n            extract () { return '(\\\\d{2})'; },\n            parser (val) {\n                let result;\n                if (val) {\n                    const l = val.length;\n                    val = val.substring(l - 2, l);\n                }\n                let parsedVal = DateTimeFormatter.defaultNumberParser()(val);\n                let presentDate = new Date();\n                let presentYear = Math.trunc((presentDate.getFullYear()) / 100);\n\n                result = `${presentYear}${parsedVal}`;\n\n                if (convertToNativeDate(result).getFullYear() > presentDate.getFullYear()) {\n                    result = `${presentYear - 1}${parsedVal}`;\n                }\n                return convertToNativeDate(result).getFullYear();\n            },\n            formatter (val) {\n                const d = convertToNativeDate(val);\n                let year = d.getFullYear().toString();\n                let l;\n\n                if (year) {\n                    l = year.length;\n                    year = year.substring(l - 2, l);\n                }\n\n                return year;\n            }\n        },\n        Y: {\n            // Long year like 1990\n            name: 'Y',\n            index: 0,\n            extract () { return '(\\\\d{4})'; },\n            parser: DateTimeFormatter.defaultNumberParser(),\n            formatter (val) {\n                const d = convertToNativeDate(val);\n                const year = d.getFullYear().toString();\n\n                return year;\n            }\n        }\n    };\n\n    return definitions;\n};\n\n/*\n * The tokens which works internally is not user friendly in terms of memorizing the names. This gives a formal\n * definition to the informal notations.\n *\n * @return {Object} : Formal definition of the tokens\n */\nDateTimeFormatter.getTokenFormalNames = function () {\n    const definitions = DateTimeFormatter.getTokenDefinitions();\n\n    return {\n        HOUR: definitions.H,\n        HOUR_12: definitions.l,\n        AMPM_UPPERCASE: definitions.p,\n        AMPM_LOWERCASE: definitions.P,\n        MINUTE: definitions.M,\n        SECOND: definitions.S,\n        SHORT_DAY: definitions.a,\n        LONG_DAY: definitions.A,\n        DAY_OF_MONTH: definitions.e,\n        DAY_OF_MONTH_CONSTANT_WIDTH: definitions.d,\n        SHORT_MONTH: definitions.b,\n        LONG_MONTH: definitions.B,\n        MONTH_OF_YEAR: definitions.m,\n        SHORT_YEAR: definitions.y,\n        LONG_YEAR: definitions.Y\n    };\n};\n\n/*\n * This defines the rules and declares dependencies that resolves a date parameter (year, month etc) from\n * the date time parameter array.\n *\n * @return {Object} : An object that contains dependencies and a resolver function. The dependencies values are fed\n *                  to the resolver function in that particular sequence only.\n */\nDateTimeFormatter.tokenResolver = function () {\n    const definitions = DateTimeFormatter.getTokenDefinitions();\n    const defaultResolver = (...args) => { // eslint-disable-line require-jsdoc\n        let i = 0;\n        let arg;\n        let targetParam;\n        const l = args.length;\n\n        for (; i < l; i++) {\n            arg = args[i];\n            if (args[i]) {\n                targetParam = arg;\n            }\n        }\n\n        if (!targetParam) { return null; }\n\n        return targetParam[0].parser(targetParam[1]);\n    };\n\n    return {\n        YEAR: [definitions.y, definitions.Y,\n            defaultResolver\n        ],\n        MONTH: [definitions.b, definitions.B, definitions.m,\n            defaultResolver\n        ],\n        DAY: [definitions.a, definitions.A, definitions.e, definitions.d,\n            defaultResolver\n        ],\n        HOUR: [definitions.H, definitions.l, definitions.p, definitions.P,\n            function (hourFormat24, hourFormat12, ampmLower, ampmUpper) {\n                let targetParam;\n                let amOrpm;\n                let isPM;\n                let val;\n\n                if (hourFormat12 && (amOrpm = (ampmLower || ampmUpper))) {\n                    if (amOrpm[0].parser(amOrpm[1]) === 'pm') {\n                        isPM = true;\n                    }\n\n                    targetParam = hourFormat12;\n                } else if (hourFormat12) {\n                    targetParam = hourFormat12;\n                } else {\n                    targetParam = hourFormat24;\n                }\n\n                if (!targetParam) { return null; }\n\n                val = targetParam[0].parser(targetParam[1]);\n                if (isPM) {\n                    val += 12;\n                }\n                return val;\n            }\n        ],\n        MINUTE: [definitions.M,\n            defaultResolver\n        ],\n        SECOND: [definitions.S,\n            defaultResolver\n        ]\n    };\n};\n\n/*\n * Finds token from the format rule specified by a user.\n * @param format {String} : The format of the input date specified by the user\n * @return {Array} : An array of objects which contains the available token and their occurence index in the format\n */\nDateTimeFormatter.findTokens = function (format) {\n    const tokenPrefix = DateTimeFormatter.TOKEN_PREFIX;\n    const definitions = DateTimeFormatter.getTokenDefinitions();\n    const tokenLiterals = Object.keys(definitions);\n    const occurrence = [];\n    let i;\n    let forwardChar;\n\n    while ((i = format.indexOf(tokenPrefix, i + 1)) >= 0) {\n        forwardChar = format[i + 1];\n        if (tokenLiterals.indexOf(forwardChar) === -1) { continue; }\n\n        occurrence.push({\n            index: i,\n            token: forwardChar\n        });\n    }\n\n    return occurrence;\n};\n\n/*\n * Format any JS date to a specified date given by user.\n *\n * @param date {Number | Date} : The date object which is to be formatted\n * @param format {String} : The format using which the date will be formatted for display\n */\nDateTimeFormatter.formatAs = function (date, format) {\n    const nDate = convertToNativeDate(date);\n    const occurrence = DateTimeFormatter.findTokens(format);\n    const definitions = DateTimeFormatter.getTokenDefinitions();\n    let formattedStr = String(format);\n    const tokenPrefix = DateTimeFormatter.TOKEN_PREFIX;\n    let token;\n    let formattedVal;\n    let i;\n    let l;\n\n    for (i = 0, l = occurrence.length; i < l; i++) {\n        token = occurrence[i].token;\n        formattedVal = definitions[token].formatter(nDate);\n        formattedStr = formattedStr.replace(new RegExp(tokenPrefix + token, 'g'), formattedVal);\n    }\n\n    return formattedStr;\n};\n\n/*\n * Parses the user specified date string to extract the date time params.\n *\n * @return {Array} : Value of date time params in an array [year, month, day, hour, minutes, seconds, milli]\n */\nDateTimeFormatter.prototype.parse = function (dateTimeStamp, options) {\n    const tokenResolver = DateTimeFormatter.tokenResolver();\n    const dtParams = this.extractTokenValue(dateTimeStamp);\n    const dtParamSeq = DateTimeFormatter.DATETIME_PARAM_SEQUENCE;\n    const noBreak = options && options.noBreak;\n    const dtParamArr = [];\n    const args = [];\n    let resolverKey;\n    let resolverParams;\n    let resolverFn;\n    let val;\n    let i;\n    let param;\n    let resolvedVal;\n    let l;\n    let result = [];\n\n    for (resolverKey in tokenResolver) {\n        if (!{}.hasOwnProperty.call(tokenResolver, resolverKey)) { continue; }\n\n        args.length = 0;\n        resolverParams = tokenResolver[resolverKey];\n        resolverFn = resolverParams.splice(resolverParams.length - 1, 1)[0];\n\n        for (i = 0, l = resolverParams.length; i < l; i++) {\n            param = resolverParams[i];\n            val = dtParams[param.name];\n\n            if (val === undefined) {\n                args.push(null);\n            } else {\n                args.push([param, val]);\n            }\n        }\n\n        resolvedVal = resolverFn.apply(this, args);\n\n        if ((resolvedVal === undefined || resolvedVal === null) && !noBreak) {\n            break;\n        }\n\n        dtParamArr[dtParamSeq[resolverKey]] = resolvedVal;\n    }\n\n    if (dtParamArr.length && this.checkIfOnlyYear(dtParamArr.length))\n     {\n        result.unshift(dtParamArr[0], 0, 1); }\n    else {\n        result.unshift(...dtParamArr);\n    }\n\n    return result;\n};\n\n/*\n * Extract the value of the token from user specified date time string.\n *\n * @return {Object} : An key value pair which contains the tokens as key and value as pair\n */\nDateTimeFormatter.prototype.extractTokenValue = function (dateTimeStamp) {\n    const format = this.format;\n    const definitions = DateTimeFormatter.getTokenDefinitions();\n    const tokenPrefix = DateTimeFormatter.TOKEN_PREFIX;\n    const occurrence = DateTimeFormatter.findTokens(format);\n    const tokenObj = {};\n\n    let lastOccurrenceIndex;\n    let occObj;\n    let occIndex;\n    let targetText;\n    let regexFormat;\n\n    let l;\n    let i;\n\n    regexFormat = String(format);\n\n    const tokenArr = occurrence.map(obj => obj.token);\n    const occurrenceLength = occurrence.length;\n    for (i = occurrenceLength - 1; i >= 0; i--) {\n        occIndex = occurrence[i].index;\n\n        if (occIndex + 1 === regexFormat.length - 1) {\n            lastOccurrenceIndex = occIndex;\n            continue;\n        }\n\n        if (lastOccurrenceIndex === undefined) {\n            lastOccurrenceIndex = regexFormat.length;\n        }\n\n        targetText = regexFormat.substring(occIndex + 2, lastOccurrenceIndex);\n        regexFormat = regexFormat.substring(0, occIndex + 2) +\n            RegExp.escape(targetText) +\n            regexFormat.substring(lastOccurrenceIndex, regexFormat.length);\n\n        lastOccurrenceIndex = occIndex;\n    }\n\n    for (i = 0; i < occurrenceLength; i++) {\n        occObj = occurrence[i];\n        regexFormat = regexFormat.replace(tokenPrefix + occObj.token, definitions[occObj.token].extract());\n    }\n\n    const extractValues = dateTimeStamp.match(new RegExp(regexFormat)) || [];\n    extractValues.shift();\n\n    for (i = 0, l = tokenArr.length; i < l; i++) {\n        tokenObj[tokenArr[i]] = extractValues[i];\n    }\n    return tokenObj;\n};\n\n/*\n * Give back the JS native date formed from  user specified date string\n *\n * @return {Date} : Native JS Date\n */\nDateTimeFormatter.prototype.getNativeDate = function (dateTimeStamp) {\n    let date = null;\n    if (Number.isFinite(dateTimeStamp)) {\n        date = new Date(dateTimeStamp);\n    } else if (!this.format && Date.parse(dateTimeStamp)) {\n        date = new Date(dateTimeStamp);\n    }\n    else {\n        const dtParams = this.dtParams = this.parse(dateTimeStamp);\n        if (dtParams.length) {\n            this.nativeDate = new Date(...dtParams);\n            date = this.nativeDate;\n        }\n    }\n    return date;\n};\n\nDateTimeFormatter.prototype.checkIfOnlyYear = function(len) {\n    return len === 1 && this.format.match(/y|Y/g).length;\n};\n\n/*\n * Represents JS native date to a user specified format.\n *\n * @param format {String} : The format according to which the date is to be represented\n * @return {String} : The formatted date string\n */\nDateTimeFormatter.prototype.formatAs = function (format, dateTimeStamp) {\n    let nativeDate;\n\n    if (dateTimeStamp) {\n        nativeDate = this.nativeDate = this.getNativeDate(dateTimeStamp);\n    } else if (!(nativeDate = this.nativeDate)) {\n        nativeDate = this.getNativeDate(dateTimeStamp);\n    }\n\n    return DateTimeFormatter.formatAs(nativeDate, format);\n};\n\nexport { DateTimeFormatter as default };\n","/**\n * Generates domain for measure field.\n *\n * @param {Array} data - The array of data.\n * @return {Array} Returns the measure domain.\n */\nexport default (data) => {\n    let min = Number.POSITIVE_INFINITY;\n    let max = Number.NEGATIVE_INFINITY;\n\n    data.forEach((d) => {\n        if (d < min) {\n            min = d;\n        }\n        if (d > max) {\n            max = d;\n        }\n    });\n\n    return [min, max];\n};\n","/* eslint-disable */\nconst OBJECTSTRING = 'object';\nconst objectToStrFn = Object.prototype.toString;\nconst objectToStr = '[object Object]';\nconst arrayToStr = '[object Array]';\n\nfunction checkCyclicRef(obj, parentArr) {\n    let i = parentArr.length;\n    let bIndex = -1;\n\n    while (i) {\n        if (obj === parentArr[i]) {\n            bIndex = i;\n            return bIndex;\n        }\n        i -= 1;\n    }\n\n    return bIndex;\n}\n\nfunction merge(obj1, obj2, skipUndef, tgtArr, srcArr) {\n    var item,\n        srcVal,\n        tgtVal,\n        str,\n        cRef;\n    // check whether obj2 is an array\n    // if array then iterate through it's index\n    // **** MOOTOOLS precution\n\n    if (!srcArr) {\n        tgtArr = [obj1];\n        srcArr = [obj2];\n    }\n    else {\n        tgtArr.push(obj1);\n        srcArr.push(obj2);\n    }\n\n    if (obj2 instanceof Array) {\n        for (item = 0; item < obj2.length; item += 1) {\n            try {\n                srcVal = obj1[item];\n                tgtVal = obj2[item];\n            }\n            catch (e) {\n                continue;\n            }\n\n            if (typeof tgtVal !== OBJECTSTRING) {\n                if (!(skipUndef && tgtVal === undefined)) {\n                    obj1[item] = tgtVal;\n                }\n            }\n            else {\n                if (srcVal === null || typeof srcVal !== OBJECTSTRING) {\n                    srcVal = obj1[item] = tgtVal instanceof Array ? [] : {};\n                }\n                cRef = checkCyclicRef(tgtVal, srcArr);\n                if (cRef !== -1) {\n                    srcVal = obj1[item] = tgtArr[cRef];\n                }\n                else {\n                    merge(srcVal, tgtVal, skipUndef, tgtArr, srcArr);\n                }\n            }\n        }\n    }\n    else {\n        for (item in obj2) {\n            try {\n                srcVal = obj1[item];\n                tgtVal = obj2[item];\n            }\n            catch (e) {\n                continue;\n            }\n\n            if (tgtVal !== null && typeof tgtVal === OBJECTSTRING) {\n                // Fix for issue BUG: FWXT-602\n                // IE < 9 Object.prototype.toString.call(null) gives\n                // '[object Object]' instead of '[object Null]'\n                // that's why null value becomes Object in IE < 9\n                str = objectToStrFn.call(tgtVal);\n                if (str === objectToStr) {\n                    if (srcVal === null || typeof srcVal !== OBJECTSTRING) {\n                        srcVal = obj1[item] = {};\n                    }\n                    cRef = checkCyclicRef(tgtVal, srcArr);\n                    if (cRef !== -1) {\n                        srcVal = obj1[item] = tgtArr[cRef];\n                    }\n                    else {\n                        merge(srcVal, tgtVal, skipUndef, tgtArr, srcArr);\n                    }\n                }\n                else if (str === arrayToStr) {\n                    if (srcVal === null || !(srcVal instanceof Array)) {\n                        srcVal = obj1[item] = [];\n                    }\n                    cRef = checkCyclicRef(tgtVal, srcArr);\n                    if (cRef !== -1) {\n                        srcVal = obj1[item] = tgtArr[cRef];\n                    }\n                    else {\n                        merge(srcVal, tgtVal, skipUndef, tgtArr, srcArr);\n                    }\n                }\n                else {\n                    obj1[item] = tgtVal;\n                }\n            }\n            else {\n                if (skipUndef && tgtVal === undefined) {\n                    continue;\n                }\n                obj1[item] = tgtVal;\n            }\n        }\n    }\n    return obj1;\n}\n\n\nfunction extend2 (obj1, obj2, skipUndef) {\n    //if none of the arguments are object then return back\n    if (typeof obj1 !== OBJECTSTRING && typeof obj2 !== OBJECTSTRING) {\n        return null;\n    }\n\n    if (typeof obj2 !== OBJECTSTRING || obj2 === null) {\n        return obj1;\n    }\n\n    if (typeof obj1 !== OBJECTSTRING) {\n        obj1 = obj2 instanceof Array ? [] : {};\n    }\n    merge(obj1, obj2, skipUndef);\n    return obj1;\n}\n\nexport { extend2 as default };\n","import { DataFormat } from '../enums';\n\n/**\n * Checks whether the value is an array.\n *\n * @param  {*} val - The value to be checked.\n * @return {boolean} Returns true if the value is an array otherwise returns false.\n */\nexport function isArray (val) {\n    return Array.isArray(val);\n}\n\n/**\n * Checks whether the value is an object.\n *\n * @param  {*} val - The value to be checked.\n * @return {boolean} Returns true if the value is an object otherwise returns false.\n */\nexport function isObject (val) {\n    return val === Object(val);\n}\n\n/**\n * Checks whether the value is a string value.\n *\n * @param  {*} val - The value to be checked.\n * @return {boolean} Returns true if the value is a string value otherwise returns false.\n */\nexport function isString (val) {\n    return typeof val === 'string';\n}\n\n/**\n * Checks whether the value is callable.\n *\n * @param {*} val - The value to be checked.\n * @return {boolean} Returns true if the value is callable otherwise returns false.\n */\nexport function isCallable (val) {\n    return typeof val === 'function';\n}\n\n/**\n * Returns the unique values from the input array.\n *\n * @param {Array} data - The input array.\n * @return {Array} Returns a new array of unique values.\n */\nexport function uniqueValues (data) {\n    return [...new Set(data)];\n}\n\nexport const getUniqueId = () => `id-${new Date().getTime()}${Math.round(Math.random() * 10000)}`;\n\n/**\n * Checks Whether two arrays have same content.\n *\n * @param {Array} arr1 - The first array.\n * @param {Array} arr2 - The 2nd array.\n * @return {boolean} Returns whether two array have same content.\n */\nexport function isArrEqual(arr1, arr2) {\n    if (!isArray(arr1) || !isArray(arr2)) {\n        return arr1 === arr2;\n    }\n\n    if (arr1.length !== arr2.length) {\n        return false;\n    }\n\n    for (let i = 0; i < arr1.length; i++) {\n        if (arr1[i] !== arr2[i]) {\n            return false;\n        }\n    }\n\n    return true;\n}\n\n/**\n * It is the default number format function for the measure field type.\n *\n * @param {any} val - The input value.\n * @return {number} Returns a number value.\n */\nexport function formatNumber(val) {\n    return val;\n}\n\n/**\n * Returns the detected data format.\n *\n * @param {any} data - The input data to be tested.\n * @return {string} Returns the data format name.\n */\nexport const detectDataFormat = (data) => {\n    if (isString(data)) {\n        return DataFormat.DSV_STR;\n    } else if (isArray(data) && isArray(data[0])) {\n        return DataFormat.DSV_ARR;\n    } else if (isArray(data) && (data.length === 0 || isObject(data[0]))) {\n        return DataFormat.FLAT_JSON;\n    }\n    return null;\n};\n","export { default as DateTimeFormatter } from './date-time-formatter';\nexport { default as columnMajor } from './column-major';\nexport { default as generateMeasureDomain } from './domain-generator';\nexport { default as extend2 } from './extend2';\nexport * from './helper';\n","import { defReducer, fnList } from '../operator';\n\n/**\n * A page level storage which stores, registers, unregisters reducers for all the datamodel instances. There is only one\n * reducer store available in a page. All the datamodel instances receive same instance of reducer store. DataModel\n * out of the box provides handful of {@link reducer | reducers} which can be used as reducer funciton.\n *\n * @public\n * @namespace DataModel\n */\nclass ReducerStore {\n    constructor () {\n        this.store = new Map();\n        this.store.set('defReducer', defReducer);\n\n        Object.entries(fnList).forEach((key) => {\n            this.store.set(key[0], key[1]);\n        });\n    }\n\n    /**\n     * Changes the `defaultReducer` globally. For all the fields which does not have `defAggFn` mentioned in schema, the\n     * value of `defaultReducer` is used for aggregation.\n     *\n     * @public\n     * @param {string} [reducer='sum'] - The name of the default reducer. It picks up the definition from store by doing\n     * name lookup. If no name is found then it takes `sum` as the default reducer.\n     * @return {ReducerStore} Returns instance of the singleton store in page.\n     */\n    defaultReducer (...params) {\n        if (!params.length) {\n            return this.store.get('defReducer');\n        }\n\n        let reducer = params[0];\n\n        if (typeof reducer === 'function') {\n            this.store.set('defReducer', reducer);\n        } else {\n            reducer = String(reducer);\n            if (Object.keys(fnList).indexOf(reducer) !== -1) {\n                this.store.set('defReducer', fnList[reducer]);\n            } else {\n                throw new Error(`Reducer ${reducer} not found in registry`);\n            }\n        }\n        return this;\n    }\n\n    /**\n     *\n     * Registers a {@link reducer | reducer}.\n     * A {@link reducer | reducer} has to be registered before it is used.\n     *\n     * @example\n     *  // find the mean squared value of a given set\n     *  const reducerStore = DataModel.Reducers();\n     *\n     *  reducers.register('meanSquared', (arr) => {\n     *      const squaredVal = arr.map(item => item * item);\n     *      let sum = 0;\n     *      for (let i = 0, l = squaredVal.length; i < l; i++) {\n     *          sum += squaredVal[i++];\n     *      }\n     *\n     *      return sum;\n     *  })\n     *\n     *  // datamodel (dm) is already prepared with cars.json\n     *  const dm1 = dm.groupBy(['origin'], {\n     *      accleration: 'meanSquared'\n     *  });\n     *\n     * @public\n     *\n     * @param {string} name formal name for a reducer. If the given name already exists in store it is overridden by new\n     *      definition.\n     * @param {Function} reducer definition of {@link reducer} function.\n     *\n     * @return {Function} function for unregistering the reducer.\n     */\n    register (name, reducer) {\n        if (typeof reducer !== 'function') {\n            throw new Error('Reducer should be a function');\n        }\n\n        name = String(name);\n        this.store.set(name, reducer);\n\n        return () => { this.__unregister(name); };\n    }\n\n    __unregister (name) {\n        if (this.store.has(name)) {\n            this.store.delete(name);\n        }\n    }\n\n    resolve (name) {\n        if (name instanceof Function) {\n            return name;\n        }\n        return this.store.get(name);\n    }\n}\n\nconst reducerStore = (function () {\n    let store = null;\n\n    function getStore () {\n        if (store === null) {\n            store = new ReducerStore();\n        }\n        return store;\n    }\n    return getStore();\n}());\n\nexport default reducerStore;\n","import { getNumberFormattedVal } from './helper';\n\n/**\n * The wrapper class on top of the primitive value of a field.\n *\n * @todo Need to have support for StringValue, NumberValue, DateTimeValue\n * and GeoValue. These types should expose predicate API mostly.\n */\nclass Value {\n\n  /**\n   * Creates new Value instance.\n   *\n   * @param {*} val - the primitive value from the field cell.\n   * @param {string | Field} field - The field from which the value belongs.\n   */\n    constructor (value, rawValue, field) {\n        const formattedValue = getNumberFormattedVal(field, value);\n\n        Object.defineProperties(this, {\n            _value: {\n                enumerable: false,\n                configurable: false,\n                writable: false,\n                value\n            },\n            _formattedValue: {\n                enumerable: false,\n                configurable: false,\n                writable: false,\n                value: formattedValue\n            },\n            _internalValue: {\n                enumerable: false,\n                configurable: false,\n                writable: false,\n                value: rawValue\n            }\n        });\n\n        this.field = field;\n    }\n\n  /**\n   * Returns the field value.\n   *\n   * @return {*} Returns the current value.\n   */\n    get value () {\n        return this._value;\n    }\n\n    /**\n     * Returns the parsed value of field\n     */\n    get formattedValue () {\n        return this._formattedValue;\n    }\n\n    /**\n     * Returns the internal value of field\n     */\n    get internalValue () {\n        return this._internalValue;\n    }\n\n  /**\n   * Converts to human readable string.\n   *\n   * @override\n   * @return {string} Returns a human readable string of the field value.\n   *\n   */\n    toString () {\n        return String(this.value);\n    }\n\n  /**\n   * Returns the value of the field.\n   *\n   * @override\n   * @return {*} Returns the field value.\n   */\n    valueOf () {\n        return this.value;\n    }\n}\n\nexport default Value;\n","module.exports = function(module) {\n\tif (!module.webpackPolyfill) {\n\t\tmodule.deprecate = function() {};\n\t\tmodule.paths = [];\n\t\t// module.parent = undefined by default\n\t\tif (!module.children) module.children = [];\n\t\tObject.defineProperty(module, \"loaded\", {\n\t\t\tenumerable: true,\n\t\t\tget: function() {\n\t\t\t\treturn module.l;\n\t\t\t}\n\t\t});\n\t\tObject.defineProperty(module, \"id\", {\n\t\t\tenumerable: true,\n\t\t\tget: function() {\n\t\t\t\treturn module.i;\n\t\t\t}\n\t\t});\n\t\tmodule.webpackPolyfill = 1;\n\t}\n\treturn module;\n};\n","'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n    value: true\n});\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\nvar _lib = require('./lib');\n\nvar _lib2 = _interopRequireDefault(_lib);\n\nvar _containerManager = require('./container-manager');\n\nvar _containerManager2 = _interopRequireDefault(_containerManager);\n\nvar slLib = _lib2['default'].init(typeof window !== \"undefined\" ? window : undefined),\n    doc = slLib.win.document,\n    M = slLib.win.Math,\n    max = M.max,\n    round = M.round,\n    BLANK = '',\n    htmlSplCharSpace = { ' ': '&nbsp;' },\n    documentSupport = slLib.getDocumentSupport(),\n    SVG_BBOX_CORRECTION = documentSupport.isWebKit ? 0 : 4.5;\n\n/*\n * Create new instance of SmartLabelManager.\n *\n * SmartLabelManager controls the lifetime of the execution space where the text's metrics will be calculated.\n * This takes a string for a given style and returns the height, width.\n * If a bound box is defined it wraps the text and returns the wrapped height and width.\n * It allows to append ellipsis at the end if the text is truncated.\n *\n * @param {String | Number} id - Id of the instance. If the same id is passed, it disposes the old instance and\n *                              save the new one;\n * @param {String | HTMLElement} container - The id or the instance of the container where the intermediate dom\n *                              elements are to be attached. If not passed, it appends in div\n *\n * @param {Boolean} useEllipses - This decides if a ellipses to be appended if the text is truncated.\n * @param {Object} options - Control options\n *                          {\n *                              maxCacheLimit: No of letter to be cached. Default: 500.\n *                          }\n * @constructor\n */\nfunction SmartLabelManager(id, container, useEllipses, options) {\n    var wrapper,\n        prop,\n        max,\n        prevInstance,\n        isBrowserLess = false,\n        store = SmartLabelManager.store;\n\n    if (typeof id === 'undefined' || typeof id === 'object') {\n        return;\n    }\n\n    if (prevInstance = store[id]) {\n        prevInstance.dispose();\n    }\n\n    store[id] = this;\n    options = options || {};\n    options.maxCacheLimit = isFinite(max = options.maxCacheLimit) ? max : slLib.maxDefaultCacheLimit;\n\n    if (typeof container === 'string') {\n        container = doc.getElementById(container);\n    }\n\n    wrapper = slLib.createContainer(container);\n    wrapper.innerHTML = slLib.testStrAvg;\n\n    if (documentSupport.isHeadLess || !documentSupport.isIE && !wrapper.offsetHeight && !wrapper.offsetWidth) {\n        isBrowserLess = true;\n    }\n\n    wrapper.innerHTML = '';\n    for (prop in slLib.parentContainerStyle) {\n        wrapper.style[prop] = slLib.parentContainerStyle[prop];\n    }\n\n    this.id = id;\n    this.parentContainer = wrapper;\n\n    this._containerManager = new _containerManager2['default'](wrapper, isBrowserLess, 10);\n    this._showNoEllipses = !useEllipses;\n    this._init = true;\n    this.style = {};\n    this.options = options;\n\n    this.setStyle();\n}\n\n/*\n * getSmartText returns the text separated by <br/> whenever a break is necessary. This is to recgonize one\n * generalized format independent of the implementation (canvas based solution, svg based solution). This method\n * converts the output of getSmartText().text to array of lines if the text is wrapped. It sets a named property\n * `lines` on the object passed as parameter.\n *\n * @param {Object} smartlabel - the object returned by getSmartText based on which line arr which to be formed.\n *\n * @return {Object} - The same object which was passed in the arguments. Also a named property `lines` is set.\n */\nSmartLabelManager.textToLines = function (smartlabel) {\n    smartlabel = smartlabel || {};\n\n    if (!smartlabel.text) {\n        smartlabel.text = '';\n    } else if (typeof smartlabel.text !== 'string') {\n        smartlabel.text = smartlabel.text.toString();\n    }\n\n    smartlabel.lines = smartlabel.text.split(/\\n|<br\\s*?\\/?>/ig);\n    return smartlabel;\n};\n\n// Saves all the instance created so far\nSmartLabelManager.store = {};\n\n// Calculates space taken by a character with an approximation value which is calculated by repeating the\n// character by string length times.\nSmartLabelManager.prototype._calCharDimWithCache = function (text, calculateDifference, length) {\n    if (!this._init) {\n        return false;\n    }\n\n    var size,\n        csArr,\n        tw,\n        twi,\n        cachedStyle,\n        asymmetricDifference,\n        maxAdvancedCacheLimit = this.options.maxCacheLimit,\n        container = this._container,\n        style = this.style || {},\n        cache = this._advancedCache || (this._advancedCache = {}),\n        advancedCacheKey = this._advancedCacheKey || (this._advancedCacheKey = []),\n        cacheName = text + (style.fontSize || BLANK) + (style.fontFamily || BLANK) + (style.fontWeight || BLANK) + (style.fontStyle || BLANK),\n        cacheInitName = text + 'init' + (style.fontSize || BLANK) + (style.fontFamily || BLANK) + (style.fontWeight || BLANK) + (style.fontStyle || BLANK);\n\n    htmlSplCharSpace[text] && (text = htmlSplCharSpace[text]);\n\n    if (!calculateDifference) {\n        asymmetricDifference = 0;\n    } else {\n        if ((asymmetricDifference = cache[cacheInitName]) === undefined) {\n            container.innerHTML = text.repeat ? text.repeat(length) : Array(length + 1).join(text); // jshint ignore:line\n            tw = container.offsetWidth;\n\n            container.innerHTML = text;\n            twi = container.offsetWidth;\n\n            asymmetricDifference = cache[cacheInitName] = (tw - length * twi) / (length + 1);\n            advancedCacheKey.push(cacheInitName);\n            if (advancedCacheKey.length > maxAdvancedCacheLimit) {\n                delete cache[advancedCacheKey.shift()];\n            }\n        }\n    }\n\n    if (cachedStyle = cache[cacheName]) {\n        csArr = cachedStyle.split(',');\n        return {\n            width: parseFloat(csArr[0], 10),\n            height: parseFloat(csArr[1], 10)\n        };\n    }\n\n    container.innerHTML = text;\n\n    size = {\n        height: container.offsetHeight,\n        width: container.offsetWidth + asymmetricDifference\n    };\n\n    cache[cacheName] = size.width + ',' + size.height;\n    advancedCacheKey.push(cacheName);\n    if (advancedCacheKey.length > maxAdvancedCacheLimit) {\n        delete cache[advancedCacheKey.shift()];\n    }\n\n    return size;\n};\n\n// Provide function to calculate the height and width based on the environment and available support from dom.\nSmartLabelManager.prototype._getWidthFn = function () {\n    var contObj = this._containerObj,\n        container = this._container,\n        svgText = contObj.svgText;\n\n    if (svgText) {\n        return function (str) {\n            var bbox, width;\n\n            svgText.textContent = str;\n            bbox = svgText.getBBox();\n            width = bbox.width - SVG_BBOX_CORRECTION;\n            if (width < 1) {\n                width = bbox.width;\n            }\n\n            return width;\n        };\n    } else {\n        return function (str) {\n            container.innerHTML = str;\n            return container.offsetWidth;\n        };\n    }\n};\n\n/*\n * Sets the style based on which the text's metrics to be calculated.\n *\n * @param {Object} style - The style object which affects the text size\n *                      {\n *                          fontSize / 'font-size' : MUST BE FOLLOWED BY PX (10px, 11px)\n *                          fontFamily / 'font-family'\n *                          fontWeight / 'font-weight'\n *                          fontStyle / 'font-style'\n *                      }\n *\n * @return {SmartLabelManager} - Current instance of SmartLabelManager\n */\nSmartLabelManager.prototype.setStyle = function (style) {\n    if (!this._init) {\n        return this;\n    }\n\n    var sCont;\n\n    if (style === this.style && !this._styleNotSet) {\n        return;\n    }\n\n    if (!style) {\n        style = this.style;\n    }\n\n    slLib.setLineHeight(style);\n    this.style = style;\n\n    this._containerObj = sCont = this._containerManager.get(style);\n\n    if (this._containerObj) {\n        this._container = sCont.node;\n        this._context = sCont.context;\n        this._cache = sCont.charCache;\n        this._lineHeight = sCont.lineHeight;\n        this._styleNotSet = false;\n    } else {\n        this._styleNotSet = true;\n    }\n\n    return this;\n};\n\n/*\n * Decides whether ellipses to be shown if the node is truncated\n *\n * @param {Boolean} useEllipses - decides if a ellipses to be appended if the text is truncated. Default: false\n *\n * @return {SmartLabelManager} - Current instance of SmartLabelManager\n */\nSmartLabelManager.prototype.useEllipsesOnOverflow = function (useEllipses) {\n    if (!this._init) {\n        return this;\n    }\n    this._showNoEllipses = !useEllipses;\n    return this;\n};\n\n/*\n * Get wrapped or truncated text if a bound box is defined around it. The result text would be separated by <br/>\n * if wrapped\n *\n * @param {String} text - the subject text\n * @param {Number} maxWidth - width in px of the the bound box\n * @param {Number} maxHeight - height in px of the the bound box\n * @param {Boolean} noWrap - whether the text to be wrapped. Default false.\n *\n * @return {Object} - The metrics of the text bounded by the box\n *                  {\n *                      height : height of the wrapped text\n *                      width : width of the wrapped text\n *                      isTruncated : whether the text is truncated\n *                      maxHeight : Maximum height given\n *                      maxWidth : Maximum width given\n *                      oriText : Original text sent\n *                      oriTextHeight : Original text height\n *                      oriTextWidth : Original text width\n *                      text : SMART TEXT\n *                  }\n */\nSmartLabelManager.prototype.getSmartText = function (text, maxWidth, maxHeight, noWrap) {\n    if (!this._init) {\n        return false;\n    }\n\n    if (text === undefined || text === null) {\n        text = '';\n    } else if (typeof text !== 'string') {\n        text = text.toString();\n    }\n\n    var len,\n        trimStr,\n        tempArr,\n        tmpText,\n        maxWidthWithEll,\n        toolText,\n        oriWidth,\n        oriHeight,\n        newCharIndex,\n        nearestChar,\n        tempChar,\n        getWidth,\n        initialLeft,\n        initialTop,\n        getOriSizeImproveObj,\n        spanArr,\n        x,\n        y,\n        minWidth,\n        elem,\n        chr,\n        elemRightMostPoint,\n        elemLowestPoint,\n        lastBR,\n        removeFromIndex,\n        removeFromIndexForEllipses,\n        hasHTMLTag = false,\n        maxStrWidth = 0,\n        lastDash = -1,\n        lastSpace = -1,\n        lastIndexBroken = -1,\n        strWidth = 0,\n        strHeight = 0,\n        oriTextArr = [],\n        i = 0,\n        ellipsesStr = this._showNoEllipses ? '' : '...',\n        lineHeight = this._lineHeight,\n        context = this._context,\n        container = this._container,\n        sCont = this._containerObj,\n        ellipsesWidth = sCont.ellipsesWidth,\n        dotWidth = sCont.dotWidth,\n        characterArr = [],\n        dashIndex = -1,\n        spaceIndex = -1,\n        lastLineBreak = -1,\n        fastTrim = function fastTrim(str) {\n        str = str.replace(/^\\s\\s*/, '');\n        var ws = /\\s/,\n            i = str.length;\n        while (ws.test(str.charAt(i -= 1))) {/* jshint noempty:false */}\n        return str.slice(0, i + 1);\n    },\n        smartLabel = {\n        text: text,\n        maxWidth: maxWidth,\n        maxHeight: maxHeight,\n        width: null,\n        height: null,\n        oriTextWidth: null,\n        oriTextHeight: null,\n        oriText: text,\n        isTruncated: false\n    };\n\n    getWidth = this._getWidthFn();\n\n    // In some browsers, offsetheight of a single-line text is getting little (1 px) heigher value of the\n    // lineheight. As a result, smartLabel is unable to return single-line text.\n    // To fix this, increase the maxHeight a little amount. Hence maxHeight =  lineHeight * 1.2\n    if (maxHeight === lineHeight) {\n        maxHeight *= 1.2;\n    }\n\n    if (container) {\n        if (!documentSupport.isBrowserLess) {\n            hasHTMLTag = slLib.xmlTagRegEx.test(text);\n            if (!hasHTMLTag) {\n                // Due to support of <,> for xml we convert &lt;, &gt; to <,> respectively so to get the correct\n                // width it is required to convert the same before calculation for the new improve version of the\n                // get text width.\n                tmpText = text.replace(slLib.ltgtRegex, function (match) {\n                    return match === '&lt;' ? '<' : '>';\n                });\n                getOriSizeImproveObj = this.getOriSize(tmpText, true);\n\n                smartLabel.oriTextWidth = oriWidth = getOriSizeImproveObj.width;\n                smartLabel.oriTextHeight = oriHeight = getOriSizeImproveObj.height;\n            } else {\n                container.innerHTML = text;\n                smartLabel.oriTextWidth = oriWidth = container.offsetWidth;\n                smartLabel.oriTextHeight = oriHeight = container.offsetHeight;\n            }\n\n            if (oriHeight <= maxHeight && oriWidth <= maxWidth) {\n                smartLabel.width = smartLabel.oriTextWidth = oriWidth;\n                smartLabel.height = smartLabel.oriTextHeight = oriHeight;\n                return smartLabel;\n            }\n\n            if (lineHeight > maxHeight) {\n                smartLabel.text = '';\n                smartLabel.width = smartLabel.oriTextWidth = 0;\n                smartLabel.height = smartLabel.oriTextHeight = 0;\n                return smartLabel;\n            }\n        }\n\n        // Calculate width with ellipses\n        text = fastTrim(text).replace(/(\\s+)/g, ' ');\n        maxWidthWithEll = this._showNoEllipses ? maxWidth : maxWidth - ellipsesWidth;\n\n        if (!hasHTMLTag) {\n            oriTextArr = text.split('');\n            len = oriTextArr.length;\n            trimStr = '', tempArr = [];\n            tempChar = oriTextArr[0];\n\n            if (this._cache[tempChar]) {\n                minWidth = this._cache[tempChar].width;\n            } else {\n                minWidth = getWidth(tempChar);\n                this._cache[tempChar] = { width: minWidth };\n            }\n\n            if (maxWidthWithEll > minWidth) {\n                tempArr = text.substr(0, slLib.getNearestBreakIndex(text, maxWidthWithEll, this)).split('');\n                i = tempArr.length;\n            } else if (minWidth > maxWidth) {\n                smartLabel.text = '';\n                smartLabel.width = smartLabel.oriTextWidth = smartLabel.height = smartLabel.oriTextHeight = 0;\n                return smartLabel;\n            } else if (ellipsesStr) {\n                maxWidthWithEll = maxWidth - 2 * dotWidth;\n                if (maxWidthWithEll > minWidth) {\n                    ellipsesStr = '..';\n                } else {\n                    maxWidthWithEll = maxWidth - dotWidth;\n                    if (maxWidthWithEll > minWidth) {\n                        ellipsesStr = '.';\n                    } else {\n                        maxWidthWithEll = 0;\n                        ellipsesStr = '';\n                    }\n                }\n            }\n\n            strWidth = getWidth(tempArr.join(''));\n            strHeight = this._lineHeight;\n\n            if (noWrap) {\n                for (; i < len; i += 1) {\n                    tempChar = tempArr[i] = oriTextArr[i];\n                    if (this._cache[tempChar]) {\n                        minWidth = this._cache[tempChar].width;\n                    } else {\n                        if (!getOriSizeImproveObj || !(minWidth = getOriSizeImproveObj.detailObj[tempChar])) {\n                            minWidth = getWidth(tempChar);\n                        }\n                        this._cache[tempChar] = {\n                            width: minWidth\n                        };\n                    }\n                    strWidth += minWidth;\n                    if (strWidth > maxWidthWithEll) {\n                        if (!trimStr) {\n                            trimStr = tempArr.slice(0, -1).join('');\n                        }\n                        if (strWidth > maxWidth) {\n                            smartLabel.text = fastTrim(trimStr) + ellipsesStr;\n                            smartLabel.tooltext = smartLabel.oriText;\n                            smartLabel.width = getWidth(smartLabel.text);\n                            smartLabel.height = this._lineHeight;\n                            return smartLabel;\n                        }\n                    }\n                }\n\n                smartLabel.text = tempArr.join('');\n                smartLabel.width = strWidth;\n                smartLabel.height = this._lineHeight;\n                return smartLabel;\n            } else {\n                for (; i < len; i += 1) {\n                    tempChar = tempArr[i] = oriTextArr[i];\n                    if (tempChar === ' ' && !context) {\n                        tempChar = '&nbsp;';\n                    }\n\n                    if (this._cache[tempChar]) {\n                        minWidth = this._cache[tempChar].width;\n                    } else {\n                        if (!getOriSizeImproveObj || !(minWidth = getOriSizeImproveObj.detailObj[tempChar])) {\n                            minWidth = getWidth(tempChar);\n                        }\n                        this._cache[tempChar] = {\n                            width: minWidth\n                        };\n                    }\n                    strWidth += minWidth;\n\n                    if (strWidth > maxWidthWithEll) {\n                        if (!trimStr) {\n                            trimStr = tempArr.slice(0, -1).join('');\n                        }\n                        if (strWidth > maxWidth) {\n                            /** @todo use regular expressions for better performance. */\n                            lastSpace = text.substr(0, tempArr.length).lastIndexOf(' ');\n                            lastDash = text.substr(0, tempArr.length).lastIndexOf('-');\n                            if (lastSpace > lastIndexBroken) {\n                                strWidth = getWidth(tempArr.slice(lastIndexBroken + 1, lastSpace).join(''));\n                                tempArr.splice(lastSpace, 1, '<br/>');\n                                lastIndexBroken = lastSpace;\n                                newCharIndex = lastSpace + 1;\n                            } else if (lastDash > lastIndexBroken) {\n                                if (lastDash === tempArr.length - 1) {\n                                    strWidth = getWidth(tempArr.slice(lastIndexBroken + 1, lastSpace).join(''));\n                                    tempArr.splice(lastDash, 1, '<br/>-');\n                                } else {\n                                    strWidth = getWidth(tempArr.slice(lastIndexBroken + 1, lastSpace).join(''));\n                                    tempArr.splice(lastDash, 1, '-<br/>');\n                                }\n                                lastIndexBroken = lastDash;\n                                newCharIndex = lastDash + 1;\n                            } else {\n                                tempArr.splice(tempArr.length - 1, 1, '<br/>' + oriTextArr[i]);\n                                lastLineBreak = tempArr.length - 2;\n                                strWidth = getWidth(tempArr.slice(lastIndexBroken + 1, lastLineBreak + 1).join(''));\n                                lastIndexBroken = lastLineBreak;\n                                newCharIndex = i;\n                            }\n                            strHeight += this._lineHeight;\n                            if (strHeight > maxHeight) {\n                                smartLabel.text = fastTrim(trimStr) + ellipsesStr;\n                                smartLabel.tooltext = smartLabel.oriText;\n                                // The max width among all the lines will be the width of the string.\n                                smartLabel.width = maxWidth;\n                                smartLabel.height = strHeight - this._lineHeight;\n                                return smartLabel;\n                            } else {\n                                maxStrWidth = max(maxStrWidth, strWidth);\n                                trimStr = null;\n                                nearestChar = slLib.getNearestBreakIndex(text.substr(newCharIndex), maxWidthWithEll, this);\n                                strWidth = getWidth(text.substr(newCharIndex, nearestChar || 1));\n                                if (tempArr.length < newCharIndex + nearestChar) {\n                                    tempArr = tempArr.concat(text.substr(tempArr.length, newCharIndex + nearestChar - tempArr.length).split(''));\n                                    i = tempArr.length - 1;\n                                }\n                            }\n                        }\n                    }\n                }\n\n                maxStrWidth = max(maxStrWidth, strWidth);\n\n                smartLabel.text = tempArr.join('');\n                smartLabel.width = maxStrWidth;\n                smartLabel.height = strHeight;\n                return smartLabel;\n            }\n        } else {\n            toolText = text.replace(slLib.spanAdditionRegx, '$2');\n            text = text.replace(slLib.spanAdditionRegx, slLib.spanAdditionReplacer);\n            text = text.replace(/(<br\\s*\\/*\\>)/g, '<span class=\"' + [slLib.classNameWithTag, ' ', slLib.classNameWithTagBR].join('') + '\">$1</span>');\n\n            container.innerHTML = text;\n\n            spanArr = container[documentSupport.childRetriverFn](documentSupport.childRetriverString);\n\n            for (x = 0, y = spanArr.length; x < y; x += 1) {\n                elem = spanArr[x];\n                //chech whether this span is temporary inserted span from it's class\n                if (documentSupport.noClassTesting || slLib.classNameReg.test(elem.className)) {\n                    chr = elem.innerHTML;\n                    if (chr !== '') {\n                        if (chr === ' ') {\n                            spaceIndex = characterArr.length;\n                        } else if (chr === '-') {\n                            dashIndex = characterArr.length;\n                        }\n\n                        characterArr.push({\n                            spaceIdx: spaceIndex,\n                            dashIdx: dashIndex,\n                            elem: elem\n                        });\n                        oriTextArr.push(chr);\n                    }\n                }\n            }\n\n            i = 0;\n            len = characterArr.length;\n            minWidth = characterArr[0].elem.offsetWidth;\n\n            if (minWidth > maxWidth) {\n                smartLabel.text = '';\n                smartLabel.width = smartLabel.oriTextWidth = smartLabel.height = smartLabel.oriTextHeight = 0;\n\n                return smartLabel;\n            } else if (minWidth > maxWidthWithEll && !this._showNoEllipses) {\n\n                maxWidthWithEll = maxWidth - 2 * dotWidth;\n                if (maxWidthWithEll > minWidth) {\n                    ellipsesStr = '..';\n                } else {\n                    maxWidthWithEll = maxWidth - dotWidth;\n                    if (maxWidthWithEll > minWidth) {\n                        ellipsesStr = '.';\n                    } else {\n                        maxWidthWithEll = 0;\n                        ellipsesStr = '';\n                    }\n                }\n            }\n\n            initialLeft = characterArr[0].elem.offsetLeft;\n            initialTop = characterArr[0].elem.offsetTop;\n\n            if (noWrap) {\n                for (; i < len; i += 1) {\n                    elem = characterArr[i].elem;\n                    elemRightMostPoint = elem.offsetLeft - initialLeft + elem.offsetWidth;\n\n                    if (elemRightMostPoint > maxWidthWithEll) {\n                        if (!removeFromIndexForEllipses) {\n                            removeFromIndexForEllipses = i;\n                        }\n                        if (container.offsetWidth > maxWidth) {\n                            removeFromIndex = i;\n                            i = len;\n                        }\n                    }\n                }\n            } else {\n                for (; i < len; i += 1) {\n                    elem = characterArr[i].elem;\n                    elemLowestPoint = elem.offsetHeight + (elem.offsetTop - initialTop);\n                    elemRightMostPoint = elem.offsetLeft - initialLeft + elem.offsetWidth;\n\n                    lastBR = null;\n\n                    if (elemRightMostPoint > maxWidthWithEll) {\n                        if (!removeFromIndexForEllipses) {\n                            removeFromIndexForEllipses = i;\n                        }\n\n                        if (elemRightMostPoint > maxWidth) {\n                            lastSpace = characterArr[i].spaceIdx;\n                            lastDash = characterArr[i].dashIdx;\n                            if (lastSpace > lastIndexBroken) {\n                                characterArr[lastSpace].elem.innerHTML = '<br/>';\n                                lastIndexBroken = lastSpace;\n                            } else if (lastDash > lastIndexBroken) {\n                                if (lastDash === i) {\n                                    // in case the overflowing character itself is the '-'\n                                    characterArr[lastDash].elem.innerHTML = '<br/>-';\n                                } else {\n                                    characterArr[lastDash].elem.innerHTML = '-<br/>';\n                                }\n                                lastIndexBroken = lastDash;\n                            } else {\n                                elem.parentNode.insertBefore(lastBR = doc.createElement('br'), elem);\n                            }\n\n                            //check whether this break made current element outside the area height\n                            if (elem.offsetHeight + elem.offsetTop > maxHeight) {\n                                //remove the lastly inserted line break\n                                if (lastBR) {\n                                    lastBR.parentNode.removeChild(lastBR);\n                                } else if (lastIndexBroken === lastDash) {\n                                    characterArr[lastDash].elem.innerHTML = '-';\n                                } else {\n                                    characterArr[lastSpace].elem.innerHTML = ' ';\n                                }\n                                removeFromIndex = i;\n                                //break the looping condition\n                                i = len;\n                            } else {\n                                removeFromIndexForEllipses = null;\n                            }\n                        }\n                    } else {\n                        //check whether this break made current element outside the area height\n                        if (elemLowestPoint > maxHeight) {\n                            removeFromIndex = i;\n                            i = len;\n                        }\n                    }\n                }\n            }\n\n            if (removeFromIndex < len) {\n                //set the trancated property of the smartlabel\n                smartLabel.isTruncated = true;\n\n                /** @todo is this really needed? */\n                removeFromIndexForEllipses = removeFromIndexForEllipses ? removeFromIndexForEllipses : removeFromIndex;\n\n                for (i = len - 1; i >= removeFromIndexForEllipses; i -= 1) {\n                    elem = characterArr[i].elem;\n                    //chech whether this span is temporary inserted span from it's class\n                    elem.parentNode.removeChild(elem);\n                }\n\n                for (; i >= 0; i -= 1) {\n                    elem = characterArr[i].elem;\n                    if (slLib.classNameBrReg.test(elem.className)) {\n                        //chech whether this span is temporary inserted span from it's class\n                        elem.parentNode.removeChild(elem);\n                    } else {\n                        i = 0;\n                    }\n                }\n            }\n\n            //get the smart text\n            smartLabel.text = container.innerHTML.replace(slLib.spanRemovalRegx, '$1').replace(/\\&amp\\;/g, '&');\n            if (smartLabel.isTruncated) {\n                smartLabel.text += ellipsesStr;\n                smartLabel.tooltext = toolText;\n            }\n        }\n\n        smartLabel.height = container.offsetHeight;\n        smartLabel.width = container.offsetWidth;\n\n        return smartLabel;\n    } else {\n        smartLabel.error = new Error('Body Tag Missing!');\n        return smartLabel;\n    }\n};\n\n/*\n * Get the height and width of a text.\n *\n * @param {String} text - Text whose metrics to be measured\n * @param {Boolean} Optional detailedCalculationFlag - this flag if set it calculates per letter position\n *                          information and returns it. Ideally you dont need it unless you want to post process the\n *                          string. And its an EXPENSIVE OPERATION.\n *\n * @return {Object} - If detailedCalculationFlag is set to true the returned object would be\n *                  {\n *                      height: height of the text\n *                      width: width of the text\n *                      detailObj: detail calculation of letters in the format {lettername: width}\n *                  }\n *                  If detailedCalculationFlag is set to false the returned object wont have the detailObj prop.\n */\nSmartLabelManager.prototype.getOriSize = function (text, detailedCalculationFlag) {\n    if (!this._init) {\n        return false;\n    }\n\n    var textArr,\n        letter,\n        lSize,\n        i,\n        l,\n        cumulativeSize = 0,\n        height = 0,\n        indiSizeStore = {};\n\n    if (!detailedCalculationFlag) {\n        return this._calCharDimWithCache(text);\n    }\n\n    // Calculate the width of every letter with an approximation\n    textArr = text.split('');\n    for (i = 0, l = textArr.length; i < l; i++) {\n        letter = textArr[i];\n        lSize = this._calCharDimWithCache(letter, true, textArr.length);\n        height = max(height, lSize.height);\n        cumulativeSize += lSize.width;\n        indiSizeStore[letter] = lSize.width;\n    }\n\n    return {\n        width: round(cumulativeSize),\n        height: height,\n        detailObj: indiSizeStore\n    };\n};\n\n/*\n * Dispose the container and object allocated by the smartlabel\n */\nSmartLabelManager.prototype.dispose = function () {\n    if (!this._init) {\n        return this;\n    }\n\n    this._containerManager && this._containerManager.dispose && this._containerManager.dispose();\n\n    delete this._container;\n    delete this._context;\n    delete this._cache;\n    delete this._containerManager;\n    delete this._containerObj;\n    delete this.id;\n    delete this.style;\n    delete this.parentContainer;\n    delete this._showNoEllipses;\n\n    return this;\n};\n\nexports['default'] = SmartLabelManager;\nmodule.exports = exports['default'];","'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n\tvalue: true\n});\nvar lib = {\n\tinit: function init(win) {\n\t\tvar doc = win.document,\n\t\t    nav = win.navigator,\n\t\t    userAgent = nav.userAgent,\n\t\t    DIV = 'DIV',\n\t\t    ceil = Math.ceil,\n\t\t    floor = Math.floor,\n\t\t    containerInstanceCount = 0,\n\t\t    clsNameSpace = 'fusioncharts-smartlabel-',\n\t\t    containerClass = clsNameSpace + 'container',\n\t\t    classNameWithTag = clsNameSpace + 'tag',\n\t\t    classNameWithTagBR = clsNameSpace + 'br';\n\n\t\tlib = {\n\t\t\twin: win,\n\n\t\t\tcontainerClass: containerClass,\n\n\t\t\tclassNameWithTag: classNameWithTag,\n\n\t\t\tclassNameWithTagBR: classNameWithTagBR,\n\n\t\t\tmaxDefaultCacheLimit: 500,\n\n\t\t\tclassNameReg: new RegExp('\\b' + classNameWithTag + '\\b'),\n\n\t\t\tclassNameBrReg: new RegExp('\\b' + classNameWithTagBR + '\\b'),\n\n\t\t\tspanAdditionRegx: /(<[^<\\>]+?\\>)|(&(?:[a-z]+|#[0-9]+);|.)/ig,\n\n\t\t\tspanAdditionReplacer: '$1<span class=\"' + classNameWithTag + '\">$2</span>',\n\n\t\t\tspanRemovalRegx: new RegExp('\\\\<span[^\\\\>]+?' + classNameWithTag + '[^\\\\>]{0,}\\\\>(.*?)\\\\<\\\\/span\\\\>', 'ig'),\n\n\t\t\txmlTagRegEx: new RegExp('<[^>][^<]*[^>]+>', 'i'),\n\n\t\t\tltgtRegex: /&lt;|&gt;/g,\n\n\t\t\tbrReplaceRegex: /<br\\/>/ig,\n\n\t\t\ttestStrAvg: 'WgI',\n\n\t\t\t// This style is applied over the parent smartlabel container. The container is kept hidden from the viewport\n\t\t\tparentContainerStyle: {\n\t\t\t\tposition: 'absolute',\n\t\t\t\ttop: '-9999em',\n\t\t\t\twhiteSpace: 'nowrap',\n\t\t\t\tpadding: '0px',\n\t\t\t\twidth: '1px',\n\t\t\t\theight: '1px',\n\t\t\t\toverflow: 'hidden'\n\t\t\t},\n\n\t\t\t// All the style which might affect the text metrics\n\t\t\tsupportedStyle: {\n\t\t\t\tfont: 'font',\n\t\t\t\tfontFamily: 'font-family',\n\t\t\t\t'font-family': 'font-family',\n\t\t\t\tfontWeight: 'font-weight',\n\t\t\t\t'font-weight': 'font-weight',\n\t\t\t\tfontSize: 'font-size',\n\t\t\t\t'font-size': 'font-size',\n\t\t\t\tlineHeight: 'line-height',\n\t\t\t\t'line-height': 'line-height',\n\t\t\t\tfontStyle: 'font-style',\n\t\t\t\t'font-style': 'font-style'\n\t\t\t},\n\n\t\t\t// Get the support list for html the document where the text calcution is to be done.\n\t\t\tgetDocumentSupport: function getDocumentSupport() {\n\t\t\t\tvar childRetriverFn, childRetriverString, noClassTesting;\n\n\t\t\t\tif (doc.getElementsByClassName) {\n\t\t\t\t\tchildRetriverFn = 'getElementsByClassName';\n\t\t\t\t\tchildRetriverString = classNameWithTag;\n\t\t\t\t\tnoClassTesting = true;\n\t\t\t\t} else {\n\t\t\t\t\tchildRetriverFn = 'getElementsByTagName';\n\t\t\t\t\tchildRetriverString = 'span';\n\t\t\t\t\tnoClassTesting = false;\n\t\t\t\t}\n\n\t\t\t\treturn {\n\t\t\t\t\tisIE: /msie/i.test(userAgent) && !win.opera,\n\t\t\t\t\thasSVG: Boolean(win.SVGAngle || doc.implementation.hasFeature('http://www.w3.org/TR/SVG11/feature#BasicStructure', '1.1')),\n\t\t\t\t\tisHeadLess: new RegExp(' HtmlUnit').test(userAgent),\n\t\t\t\t\tisWebKit: new RegExp(' AppleWebKit/').test(userAgent),\n\t\t\t\t\tchildRetriverFn: childRetriverFn,\n\t\t\t\t\tchildRetriverString: childRetriverString,\n\t\t\t\t\tnoClassTesting: noClassTesting\n\t\t\t\t};\n\t\t\t},\n\n\t\t\t/*\n    * Create a html div element and attach it with a parent. All the subsequent operations are performed\n    * by upding this dom tree only.\n    *\n    * @param {HTMLElement} - The html element where the newly created div is to be attached. If not passed,\n    *                      the new div is appended on the body.\n    */\n\t\t\tcreateContainer: function createContainer(containerParent) {\n\t\t\t\tvar body, container;\n\n\t\t\t\tif (containerParent && (containerParent.offsetWidth || containerParent.offsetHeight)) {\n\t\t\t\t\tif (containerParent.appendChild) {\n\t\t\t\t\t\tcontainerParent.appendChild(container = doc.createElement(DIV));\n\t\t\t\t\t\tcontainer.className = containerClass;\n\t\t\t\t\t\tcontainer.setAttribute('aria-hidden', 'true');\n\t\t\t\t\t\tcontainer.setAttribute('role', 'presentation');\n\t\t\t\t\t\treturn container;\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tbody = doc.getElementsByTagName('body')[0];\n\n\t\t\t\t\tif (body && body.appendChild) {\n\t\t\t\t\t\tcontainer = doc.createElement(DIV);\n\t\t\t\t\t\tcontainer.className = containerClass;\n\t\t\t\t\t\tcontainer.setAttribute('aria-hidden', 'true');\n\t\t\t\t\t\tcontainer.setAttribute('role', 'presentation');\n\t\t\t\t\t\tcontainerInstanceCount += 1;\n\t\t\t\t\t\tbody.appendChild(container);\n\t\t\t\t\t\treturn container;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t},\n\n\t\t\t// Finds a approximate position where the text is to be broken\n\t\t\tgetNearestBreakIndex: function getNearestBreakIndex(text, maxWidth, sl) {\n\t\t\t\tif (!text || !text.length) {\n\t\t\t\t\treturn 0;\n\t\t\t\t}\n\n\t\t\t\tvar difference,\n\t\t\t\t    getWidth = sl._getWidthFn(),\n\t\t\t\t    charLen = 0,\n\t\t\t\t    increment = 0,\n\t\t\t\t    oriWidth = getWidth(text),\n\t\t\t\t    avgWidth = oriWidth / text.length;\n\n\t\t\t\tdifference = maxWidth;\n\t\t\t\tcharLen = ceil(maxWidth / avgWidth);\n\n\t\t\t\tif (oriWidth < maxWidth) {\n\t\t\t\t\treturn text.length - 1;\n\t\t\t\t}\n\n\t\t\t\tif (charLen > text.length) {\n\t\t\t\t\tdifference = maxWidth - oriWidth;\n\t\t\t\t\tcharLen = text.length;\n\t\t\t\t}\n\n\t\t\t\twhile (difference > 0) {\n\t\t\t\t\tdifference = maxWidth - getWidth(text.substr(0, charLen));\n\t\t\t\t\tincrement = floor(difference / avgWidth);\n\t\t\t\t\tif (increment) {\n\t\t\t\t\t\tcharLen += increment;\n\t\t\t\t\t} else {\n\t\t\t\t\t\treturn charLen;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\twhile (difference < 0) {\n\t\t\t\t\tdifference = maxWidth - getWidth(text.substr(0, charLen));\n\t\t\t\t\tincrement = floor(difference / avgWidth);\n\t\t\t\t\tif (increment) {\n\t\t\t\t\t\tcharLen += increment;\n\t\t\t\t\t} else {\n\t\t\t\t\t\treturn charLen;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn charLen;\n\t\t\t},\n\n\t\t\t/*\n    * Determine lineheight of a text for a given style. It adds propery lineHeight to the style passed\n    *\n    * @param {Object} - The style based on which the text's metric needs to be calculated. The calculation happens\n    *                  based on fontSize property, if its not present a default font size is assumed.\n    *\n    * @return {Object} - The style that was passed with lineHeight as a named propery set on the object.\n    */\n\t\t\tsetLineHeight: function setLineHeight(styleObj) {\n\t\t\t\tvar fSize = styleObj.fontSize = styleObj.fontSize || '12px';\n\t\t\t\tstyleObj.lineHeight = styleObj.lineHeight || styleObj['line-height'] || parseInt(fSize, 10) * 1.2 + 'px';\n\t\t\t\treturn styleObj;\n\t\t\t}\n\t\t};\n\n\t\treturn lib;\n\t}\n};\n\nexports['default'] = lib;\nmodule.exports = exports['default'];","(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"hyperdis\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"hyperdis\"] = factory();\n\telse\n\t\troot[\"hyperdis\"] = factory();\n})(window, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n","const makeEntry = (arr, sCon) => {\n    arr.forEach((elem) => {\n        if (elem === undefined || elem === null) {\n            return;\n        }\n        sCon[elem] = 1;\n    });\n};\n\nexport default class ForeignSet {\n    constructor (arr) {\n        this._set = {};\n        makeEntry(arr, this._set);\n    }\n\n    append (arr) {\n        makeEntry(arr, this._set);\n        return this;\n    }\n\n    toArray () {\n        return Object.keys(this._set);\n    }\n\n    static difference (set1, set2) {\n        let key;\n        const filteredKeys = [],\n            s1 = set1._set,\n            s2 = set2._set;\n        for (key in s1) {\n            if (!({}).hasOwnProperty.call(s1, key)) {\n                continue;\n            }\n            if (key in s2) {\n                continue;\n            }\n            filteredKeys.push(key);\n        }\n        return new ForeignSet(filteredKeys);\n    }\n}\n","/* global window */\n\nimport ForeignSet from './set';\n\nconst\n    isSimpleObject = (obj) => {\n        let token;\n        if (typeof obj === 'object') {\n            if (obj === null) { return false; }\n            token = Object.prototype.toString.call(obj);\n            if (token === '[object Object]') {\n                return (obj.constructor.toString().match(/^function (.*)\\(\\)/m) || [])[1] === 'Object';\n            }\n        }\n        return false;\n    },\n    minMsThreshold = 16,\n    /* istanbul ignore next */win = typeof window === 'undefined' ? (this || {}) : window,\n    /* istanbul ignore next */ reqAnimFrame = win.requestAnimationFrame || win.webkitRequestAnimationFrame ||\n        win.mozRequestAnimationFrame || win.oRequestAnimationFrame ||\n        win.msRequestAnimationFrame ||\n        function (callback) {\n            setTimeout(callback, minMsThreshold);\n        },\n\n    getTimeBasedId = () => {\n        if (getTimeBasedId.__lastTime === new Date().getTime()) {\n            return (getTimeBasedId.__lastTime).toString() + (getTimeBasedId.__id++).toString();\n        }\n\n        getTimeBasedId.__id = 0;\n        getTimeBasedId.__lastTime = new Date().getTime();\n        return (getTimeBasedId.__lastTime).toString() + (getTimeBasedId.__id++).toString();\n    },\n    pullableRecent = (nodes, fn) => {\n        let nFn = () => {\n            fn(...nodes.map((node) => {\n                const\n                    hist = node.history,\n                    l = hist.length - 1;\n                return [hist[l - 1 < 0 ? 0 : l - 1], hist[l]];\n            }));\n        };\n        nFn.__id = getTimeBasedId();\n        return nFn;\n    },\n    pullableEnd = (nodes, fn) => {\n        let nFn = () => {\n            fn(...nodes.map((node) => {\n                const hist = node.history;\n                return [hist[0], hist[hist.length - 1]];\n            }));\n        };\n        nFn.__id = getTimeBasedId();\n        return nFn;\n    },\n    unique = fns => fns\n                    .reduce((store, fn) => {\n                // @warn function with side effect, it mutates the store passed during initialization\n                        if (fn.__id in store.map) {\n                            return store;\n                        }\n\n                        store.map[fn.__id] = 1;\n                        store.unique.push(fn);\n\n                        return store;\n                    }, { map: {}, unique: [] })\n                    .unique,\n    compose = fns => () => {\n        fns.forEach(fn => fn());\n    },\n    flat = (...params) => {\n        const res = [];\n        params.forEach(param => res.push(...param));\n        return res;\n    },\n    identityMap = arrays => arrays,\n    splitPathProp = (path) => {\n        const pathArr = path.split('.'),\n            len = pathArr.length;\n        return [pathArr.slice(0, len - 1), pathArr[len - 1]];\n    },\n    scheduler = (onFinishCallback) => {\n        let queue = [],\n            animationFrame = null;\n\n        onFinishCallback = onFinishCallback &&\n            typeof onFinishCallback === 'function' && onFinishCallback || (() => { });\n\n        return (listeners, payload) => {\n            [].push.apply(queue, listeners);\n            if (animationFrame === null) {\n                animationFrame = reqAnimFrame(() => {\n                    const tempQ = queue.slice(0);\n                    queue.length = 0;\n                    animationFrame = null;\n\n                    unique(tempQ).forEach(fn => fn());\n                    onFinishCallback(payload);\n                });\n            }\n        };\n    },\n    fetch = namedNode => (...params) => params.map((param) => {\n        const node = namedNode[param];\n        return {\n            name: node.name,\n            qualifiedName: node.qualifiedName,\n            value: node.seed\n        };\n    }),\n    fetchAggregator = (...params) => ({\n        dependencies: params.slice(0, params.length - 1),\n        fn: params[params.length - 1]\n    }),\n    getUpstreamNodes = (list) => {\n        let res = [];\n        const map = {};\n        list.forEach(node => map[node.qualifiedName] = -1);\n        function rec (arr) {\n            arr.forEach((node) => {\n                let qname,\n                    placedIndex,\n                    preArr,\n                    postArr;\n                if (!((qname = node.qualifiedName) in map)) {\n                    map[qname] = res.push(node) - 1;\n                } else {\n                    placedIndex = map[qname];\n                    if (placedIndex !== -1 && placedIndex !== res.length - 1) {\n                        // If not the last element, readjust the array so that the later dependency position is saved\n                        preArr = res.slice(0, placedIndex);\n                        postArr = res.slice(placedIndex + 1);\n                        res = preArr.concat(postArr);\n\n                        // reset the index in map\n                        postArr.forEach((elem, i) => map[elem.qualifiedName] = i + preArr.length);\n                        map[qname] = res.push(node) - 1;\n                    }\n                }\n                rec(node.outgoingEdges);\n            });\n        }\n        rec(list);\n        return res;\n    },\n    resolver = {\n        accumulate: (...params) => {\n            const resp = {};\n            params.forEach((nodeDetails) => {\n                Object.assign(resp, { [nodeDetails.name]: nodeDetails.value });\n            });\n            return resp;\n        },\n        identity: nodeDetails => nodeDetails.value\n    };\n\nfunction resolveDependencyOrder (node, resolved, resolveMap) {\n    let qname;\n    node.edges.forEach((neighbour) => {\n        resolveDependencyOrder(neighbour, resolved, resolveMap);\n    });\n\n    if (node.isRoot() || (qname = node.qualifiedName) in resolveMap) {\n        return;\n    }\n    resolved.push(node);\n    resolveMap[qname] = 1;\n}\n\nclass CustomResolver {\n    constructor (resolver) {\n        this.fn = resolver;\n        this.dep = [];\n    }\n\n    addDependencies(...dep) {\n        this.dep.push(...dep);\n        return this;\n    }\n\n    getDependencies () {\n        return this.dep;\n    }\n\n    get () {\n        return this.fn;\n    }\n}\n\nexport {\n    isSimpleObject,\n    scheduler,\n    compose,\n    flat,\n    identityMap,\n    pullableEnd,\n    pullableRecent,\n    unique,\n    splitPathProp,\n    resolver,\n    ForeignSet,\n    resolveDependencyOrder,\n    fetch,\n    fetchAggregator,\n    CustomResolver,\n    getUpstreamNodes\n};\n","export default class GraphNode {\n    constructor (name, qualifiedName, options) {\n        /* istanbul ignore next */options = options || {};\n        this.name = name;\n        this.qualifiedName = qualifiedName;\n        this.edges = [];\n        this.outgoingEdges = [];\n        this._seed = null;\n        this.requireResolve = true;\n        this.retriever = options.retriever;\n        this.history = [];\n        this.resolver = null;\n        this.electricEdges = [];\n    }\n\n    addDependencies (...dep) {\n        this.edges.push(...dep);\n        dep.forEach(entry => entry.outgoingEdges.push(this));\n        return this;\n    }\n\n    addElectricNode (node) {\n        this.electricEdges.push(node);\n        return this;\n    }\n\n    get seed () {\n        return this._seed;\n    }\n\n    set seed (value) {\n        this._seed = value;\n        this.requireResolve = true;\n        return this;\n    }\n\n    resolve () {\n        this.seed = this.resolver(...this.retrieveDetails());\n        this.history.push(this.seed);\n        this.requireResolve = false;\n        return this;\n    }\n\n    retrieveDetails () {\n        if (this.edges.length === 0) {\n            return [{\n                name: this.name,\n                qualifiedName: this.qualifiedName,\n                value: this.seed\n            }];\n        }\n        return this.retriever(...this.edges.map(edge => edge.qualifiedName));\n    }\n\n    repeatHead () {\n        const\n            history = this.history,\n            head = history[history.length - 1];\n        // @todo- Akash, write test case if history.length === 0 to pass code coverage\n        if (history.length === 0) {\n            return this;\n        }\n        history.push(head);\n        return this;\n    }\n\n    flush () {\n        const hist = this.history,\n            head = hist[hist.length - 1];\n        hist.length = 0;\n        hist.push(head);\n        return this;\n    }\n\n    isRoot () {\n        return this.name === null;\n    }\n}\n","import {\n    pullableRecent,\n    pullableEnd\n} from './utils';\n\nexport default class ElectricNode {\n    constructor () {\n        this.edges = [];\n        this.listeners = {\n            nextFrame: [],\n            currentFrame: []\n        };\n    }\n\n    addEdges (...nodes) {\n        this.edges.push(...nodes);\n        return this;\n    }\n\n    regListenerForCurrFrame (fn) {\n        const lstnrs = this.listeners.currentFrame;\n        let index = lstnrs.push(pullableRecent(this.edges, fn)) - 1;\n\n        return () => {\n            this.listeners.currentFrame = lstnrs.filter((fn, i) => i !== index);\n        };\n    }\n\n    regListenerForNextFrame (fn) {\n        const lstnrs = this.listeners.nextFrame;\n        let index = lstnrs.push(pullableEnd(this.edges, fn)) - 1;\n\n        return () => {\n            this.listeners.nextFrame = lstnrs.filter((fn, i) => i !== index);\n        };\n    }\n\n    hasNextFrameListener () {\n        return !!this.listeners.nextFrame.length;\n    }\n}\n","import {\n    isSimpleObject,\n    resolver,\n    // upstreamNodes,\n    flat,\n    resolveDependencyOrder,\n    getUpstreamNodes,\n    ForeignSet,\n    fetch,\n    CustomResolver,\n    scheduler\n} from './utils';\nimport Node from './graph-node';\nimport ElectricNode from './electric-node';\n\nexport default class Graph {\n    constructor () {\n        this.qualifiedNodeMap = {};\n        this.retriever = fetch(this.qualifiedNodeMap);\n        this.root = new Node(null, null, { retriever: this.retriever });\n        this.root.resolver = resolver.accumulate;\n\n        this._wholeSet = null;\n        this._propagate = true;\n        this.propagationOverride = {\n            currentFrameListeners: false,\n            nextFrameListeners: false\n        };\n\n        this._schedule = scheduler((payload) => {\n            let qname;\n            for (qname in payload.flushTarget) {\n                if (!({}).hasOwnProperty.call(this.qualifiedNodeMap, qname)) {\n                    return;\n                }\n                this.qualifiedNodeMap[qname].flush();\n            }\n        });\n    }\n\n    createNodesFrom (obj, mount) {\n        let val,\n            resolveReqList;\n        const qualifiedNodeMap = this.qualifiedNodeMap,\n            root = this.root,\n            retriever = this.retriever;\n\n        (function rec (objn, qualifiedName, history) {\n            let key,\n                qname,\n                perv,\n                node;\n\n            for (key in objn) {\n                if (!({}).hasOwnProperty.call(objn, key)) {\n                    continue;\n                }\n                qname = `${qualifiedName}${key}`;\n                node = new Node(key, qname, { retriever });\n                qualifiedNodeMap[qname] = node;\n\n                if ((perv = history.perv) !== undefined) {\n                    perv.addDependencies(node);\n                } else {\n                    // top most level entries\n                    root.addDependencies(node);\n                }\n\n                if (isSimpleObject(val = objn[key])) {\n                    rec(val, `${qualifiedName}${key}.`, { perv: node });\n                    node.resolver = resolver.accumulate;\n                } else if (val instanceof CustomResolver) {\n                    node.resolver = val.get();\n                    node.addDependencies(...val.getDependencies().map(qname => qualifiedNodeMap[qname]));\n                } else {\n                    node.resolver = resolver.identity;\n                    node.seed = val;\n                    // node.resolve();\n                }\n            }\n        }(obj, mount === null ? '' : `${mount}.`, {\n            perv: qualifiedNodeMap[mount]\n        }));\n\n        this._wholeSet = new ForeignSet(Object.keys(this.qualifiedNodeMap));\n\n        // Recalculate the model without firing the listeners\n        // @todo selective branch resolve. Currently resolve gets called even for a branch which was updated\n        resolveReqList = this.constructor.getResolvedList(root).concat(root).filter(node => node.requireResolve);\n        resolveReqList.forEach(node => node.resolve());\n        getUpstreamNodes(resolveReqList).forEach(node => node.resolve());\n        return this;\n    }\n\n    getNodeValue (prop) {\n        if (prop in this.qualifiedNodeMap) {\n            return this.qualifiedNodeMap[prop].seed;\n        }\n        return undefined;\n    }\n\n    createElectricNodeOf (props, fnSpec) {\n        const nodes = props.map(prop => this.qualifiedNodeMap[prop]),\n            eNode = new ElectricNode().addEdges(...nodes);\n\n        nodes.forEach(node => node.addElectricNode(eNode));\n        return eNode[`regListenerFor${fnSpec.type}`](fnSpec.fn);\n    }\n\n    update (...params) {\n        let changedSet,\n            upstreamNodes;\n        const\n            electricEdges = [],\n            nodes = params.map((entry) => {\n                entry[0].seed = entry[1];\n                return entry[0];\n            });\n        nodes.forEach(node => node.resolve());\n        electricEdges.push(...flat(...nodes.map(node => node.electricEdges)));\n        changedSet = new ForeignSet(nodes.map(node => node.qualifiedName));\n\n        if (!this._propagate) {\n            this.__execUniqueElectricEdges(electricEdges);\n            this._propagate = true;\n            return this;\n        }\n\n        upstreamNodes = getUpstreamNodes(nodes);\n        upstreamNodes.forEach(upstreamNode => upstreamNode.resolve());\n        changedSet.append(upstreamNodes.map(node => node.qualifiedName));\n        electricEdges.push(...flat(...upstreamNodes.map(node => node.electricEdges)));\n\n        this.__execUniqueElectricEdges(Array.from(new Set(electricEdges)), changedSet);\n        return this;\n    }\n\n    __execUniqueElectricEdges (electricEdges, changedSet) {\n        const\n            cfLstnrs = [], // current frame listeners\n            nfLstnrs = []; // next frame listeners\n        if (changedSet) {\n            const\n                differenceSet = ForeignSet.difference(this._wholeSet, changedSet),\n                entries = differenceSet.toArray();\n\n            entries.forEach(entry => this.qualifiedNodeMap[entry].repeatHead());\n        }\n\n        electricEdges.forEach((e) => {\n            cfLstnrs.push(...e.listeners.currentFrame);\n        });\n        electricEdges.forEach((e) => {\n            nfLstnrs.push(...e.listeners.nextFrame);\n        });\n\n        !this.propagationOverride.currentFrameListeners && cfLstnrs.forEach(fn => fn());\n        !this.propagationOverride.nextFrameListeners && this._schedule(nfLstnrs, { flushTarget: changedSet });\n        this.resetPropagationOverride();\n        return this;\n    }\n\n    resetNodeValue (...qnames) {\n        const nodes = qnames.map(qname => this.qualifiedNodeMap[qname]),\n            args = nodes.map(node => [node, node.seed]);\n        this.update(...args);\n        return this;\n    }\n\n    static getResolvedList (node) {\n        const resolved = [];\n        resolveDependencyOrder(node, resolved, {});\n        return resolved;\n    }\n\n    stopPropagation () {\n        this._propagate = false;\n        return this;\n    }\n\n    resetPropagationOverride () {\n        this.propagationOverride.currentFrameListeners = false;\n        this.propagationOverride.nextFrameListeners = false;\n        return this;\n    }\n\n    setPropagationOverride (key) {\n        this.propagationOverride[`${key}Listeners`] = true;\n        return this;\n    }\n\n    getNodeFromQualifiedName (qname) {\n        return this.qualifiedNodeMap[qname];\n    }\n}\n","import Graph from './graph';\nimport { CustomResolver, fetchAggregator } from './utils';\n\n/**\n * The container class for Hyperdis. Hyperdis is an enabler for observable object with few interesting features like,\n * calculated property, next frame and same frame listeners, multiple listeners etc with a dependency resolving system.\n * It internally uses a graph to hold the hierarchial relationship of a object. Model is merely a container which\n * ties all the components together.\n *\n * @todo Circular dependency detection is not present\n *\n * @example check src/index.spec.js\n * @class\n */\nclass Model {\n    constructor () {\n        this._graph = new Graph();\n        this._lockFlag = false;\n        this._reqQ = [];\n    }\n\n    /**\n     * Static method to create and init the model with an observable seed\n     *\n     * @param {Object} obj The target object which is required to be made observable\n     * @return {Model} instance of the observable object model\n     */\n    static create (obj) {\n        return new Model()._addPropInModel(null, obj);\n    }\n\n    /**\n     * Appends more observable property on the already observable instance. This mutates the original model.\n     *\n     * This function works in two mode. One being\n     * @param {String} mountPoint the property on which the new set of properties will be mounted. If its a nested\n     *                          property then the mountPoint has to be written such a way so it feels like you are\n     *                          accessing the object. If the mount point is not found then he obeservables are added in\n     *                          the root.\n     * @param {Object} The target object which is required to be made observable\n     *\n     * Another being\n     * @param {Object} The target object which is required to be made observable\n     *\n     * @return {Model} instance of the observable object model\n     */\n    append (...params) {\n        let mountPoint,\n            obj;\n\n        if (params.length === 1) {\n            mountPoint = null;\n            obj = params[0];\n        } else {\n            mountPoint = params[0];\n            obj = params[1];\n        }\n\n        this._addPropInModel(mountPoint, obj);\n        return this;\n    }\n\n    /**\n     * Creates a calculated variable from existing variable. This variable can't be updated from outside.\n     * @param {string} mountpoint property path on which the new variable will be placed\n     * @param {string} name name of the variable. If the variable could have hierarchy like `limits.start`\n     * @param {Function} fn funtion where the dependent variables are injected based on the dependency requirement\n     */\n    calculatedProp (...params) {\n        let calculationConfig,\n            customResolver,\n            varName,\n            mount,\n            fetchFn;\n\n        if (params.length > 2) {\n            mount = params[0];\n            varName = params[1];\n            fetchFn = params[2];\n        } else {\n            mount = null;\n            varName = params[0];\n            fetchFn = params[1];\n        }\n\n        calculationConfig = fetchFn(fetchAggregator);\n        customResolver = new CustomResolver(calculationConfig.fn);\n        customResolver.addDependencies(...calculationConfig.dependencies);\n\n        this._addPropInModel(mount, { [varName]: customResolver });\n        return this;\n    }\n\n    // eslint-disable-next-line require-jsdoc\n    _addPropInModel (mountPoint, obj) {\n        this._graph.createNodesFrom(obj, mountPoint);\n        return this;\n    }\n\n    /**\n     * Register a listener in the current frame when a property or group of properties is changed.\n     *\n     * @example\n     * This function takes a single or group of property and handler which is called when any of the properties are\n     * changed.\n     * When a single property is changed the handler is called with two parameter, what was the old value of the state\n     * property and what is the new value.\n     * myState.on('range.start', (oldValue, newValue) => {\n     *      console.log('Value before prop change', oldValue);\n     *      console.log('Value after prop change', newValue);\n     * });\n     *\n     * myState.prop('range.start', 9);\n     * // Output\n     * Value before prop change 1\n     * Value after prop change 9\n     *\n     * If a handler is registered on change of a property which has another state property as value, then the handler\n     * gets called whenever any state property connected to it gets changed\n     *\n     * myState.on('range', (oldValue, newValue) => {\n     *      console.log('Value before prop change', oldValue);\n     *      console.log('Value after prop change', newValue);\n     * });\n     *\n     * myState.prop('range.start', 10);\n     * myState.prop('range.type.absolute', false);\n     *\n     * // Output\n     * Value before prop change\n     * range {\n     *      start: 9,\n     *      end: 5,\n     *      type: {\n     *          absolute: true\n     *      }\n     * }\n     * Value after prop change\n     * range: {\n     *      start: 10,\n     *      end: 5,\n     *      type: {\n     *          absolute: false\n     *      }\n     * }\n     * If a handler is registered with more than one property change then, the handler is called when any of the\n     * properties gets changed. In this cast the handler is called with more than one parameter: each for one state\n     * property which is registered for listening. Each parameter is of type array containing [oldValue, newValue]\n     *\n     * myState.on('range.start', 'range.end', (start, end) => {\n     *      console.log('Start', start);\n     *      console.log('End', end);\n     * });\n     *\n     * myState.prop('range.start', 12);\n     *\n     * // Output\n     * Start [10, 12]\n     * End [5, 5]\n     *\n     * myState.prop('range.end', 7);\n     *\n     * // Output\n     * Start [12, 12]\n     * End [5, 7]\n     *\n     * The on returns a function which is when called the listener registered gets unregistered\n     *\n     * let unsub = myState.on(['range.start', 'range.end'], (start, end) => {\n     *      console.log('Start', start);\n     *      console.log('End', end);\n     * });\n     *\n     * // Unsubscribe\n     * unsub()\n     *\n     * On takes an optional boolean value as the last parameter, which if passed as a true value the handler gets called\n     * during registration itself.\n     *\n     * @param {Array.<String>} props List of properties which is of interest\n     * @param {Function} fn Listener to be executed when any of them is changed. The listener is called with the old\n     *                      value and new value of the properties\n     * @param {*} instantCall When registered if the function is to be triggered with the value of the property\n     *\n     * @return {Function} function to unsubscribe from the listeners registry\n     */\n    on (props, fn, instantCall) {\n        const\n            propsArr = props instanceof Array ? props : [props],\n            // All there listeners will be executed in the current stack frame\n            unsub = this._graph.createElectricNodeOf(propsArr, {\n                type: 'CurrFrame',\n                fn\n            });\n\n        if (instantCall) {\n            // Bar current next frame listeners from getting fired\n            this._graph.stopPropagation().setPropagationOverride('nextFrame').resetNodeValue(...props);\n        }\n        return unsub;\n    }\n\n    /**\n     * Register a listener for the next frame when a property or group of properties is changed.\n     *\n     * @example\n     * See the examples for the on listener\n     *\n     * @param {Array.<String>} props List of properties which is of interest\n     * @param {Function} fn Listener to be executed when any of them is changed. The listener is called with the old\n     *                      value and new value of the properties. Here the oldvalue is last value of the last frame\n     * @param {*} instantCall When registered if the function is to be triggered with the value of the property\n     *\n     * @return {Function} function to unsubscribe from the listeners registry\n     */\n    next (props, fn, instantCall) {\n        const\n            propsArr = props instanceof Array ? props : [props],\n            // All there listeners will be executed at the tick of next animation frame\n            unsub = this._graph.createElectricNodeOf(propsArr, {\n                type: 'NextFrame',\n                fn\n            });\n\n        // @todo check support for this from the graph side\n        if (instantCall) {\n            // Bar current frame listeners from getting fired\n            this._graph.stopPropagation().setPropagationOverride('currentFrame').resetNodeValue(...props);\n        }\n\n        return unsub;\n    }\n\n    /**\n     * Lock queues the request of property change and releases the change when unlock is called. This is helpful when\n     * multiple property is getting called and the model listeners are to be fired once at the end of update.\n     *\n     * @return {Model} instance of the model\n     */\n    lock () {\n        this._lockFlag = true;\n        this._reqQ.length = 0;\n        return this;\n    }\n\n    /**\n     * Unlock unleashes the change done after the lock was called.\n\n     * @return {Model} instance of the model\n     */\n    unlock () {\n        this._lockFlag = false;\n        this.setProp(...this._reqQ);\n        this._reqQ.length = 0;\n        return this;\n    }\n\n    /**\n     * This acts as getter and setter. If the function is called by passing only one argument, it retrieve the value\n     * associated with the property. If the same function is called using two parameters, first one being the property\n     * and second one being the value, then the value is set for the property and the handlers are called (if any)\n     * which got registered using the on function\n     *\n     * Getter\n     * @param {string} prop property path whose value to be retrieved\n     * @return {Object} value of the property at the time of call\n     *\n     * Setter\n     * @param {string} property property path whose value to be ser\n     * @return {Model} instance of the model\n     */\n    prop (...params) {\n        let prop,\n            val,\n            len;\n\n        switch (len = params.length) {\n        case 1:\n            prop = params[0];\n            break;\n\n        case 2:\n            prop = params[0];\n            val = params[1];\n            break;\n\n        default:\n            return this;\n        }\n\n        if (len === 2) {\n            this._lockFlag ? this._reqQ.push([prop, val]) : this.setProp([prop, val]);\n            return this;\n        }\n\n        return this._graph.getNodeValue(prop);\n    }\n\n    // eslint-disable-next-line require-jsdoc\n    setProp (...props) {\n        // Filter out the calculated variables, so that it cant be changed from outside\n        // @todo if a node is not leafValue, and change is called, ignore it too\n        // props = props.filter(prop => !(VirtualObj.walkTill(prop[0].split('.'), this._vObj).leafValue()\n        //     instanceof CalculatedVar));\n\n        if (props.length === 0) {\n            return this;\n        }\n\n        this._graph.update(...props.map(prop => [this._graph.getNodeFromQualifiedName(prop[0]), prop[1]]));\n        return this;\n    }\n\n    /**\n     * Retrieves the graph representation of the object\n     * @return {Graph} instance of the graph associated to the model\n     */\n    graph () {\n        return this._graph;\n    }\n\n    /**\n     * Get serialized data from the model\n     *\n     * @return {Object} Serialized data\n     */\n    serialize () {\n        return this._graph.root.seed;\n    }\n}\n\nexport default Model;\n","import Model from './model';\n\nexport default Model;\n","const Muze = require('./muze');\n\nmodule.exports = Muze.default ? Muze.default : Muze;\n","'use strict';\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\nvar _lib = require('./lib');\n\nvar _lib2 = _interopRequireDefault(_lib);\n\nvar slLib = _lib2['default'].init(typeof window !== \"undefined\" ? window : undefined),\n    doc = slLib.win.document,\n    documentSupport = slLib.getDocumentSupport(),\n    SVG_BBOX_CORRECTION = documentSupport.isWebKit ? 0 : 4.5;\n\nfunction ContainerManager(parentContainer, isBrowserLess, maxContainers) {\n    var svg;\n\n    maxContainers = maxContainers > 5 ? maxContainers : 5;\n    maxContainers = maxContainers < 20 ? maxContainers : 20;\n\n    this.maxContainers = maxContainers;\n    this.first = null;\n    this.last = null;\n    this.containers = {};\n    this.length = 0;\n    this.rootNode = parentContainer;\n\n    if (isBrowserLess) {\n        svg = doc.createElementNS('http://www.w3.org/2000/svg', 'svg');\n        svg.setAttributeNS('http://www.w3.org/2000/svg', 'xlink', 'http://www.w3.org/1999/xlink');\n        svg.setAttributeNS('http://www.w3.org/2000/svg', 'height', '0');\n        svg.setAttributeNS('http://www.w3.org/2000/svg', 'width', '0');\n        this.svgRoot = svg;\n        this.rootNode.appendChild(svg);\n    }\n}\n\nContainerManager.prototype.get = function (style) {\n    var diff,\n        key,\n        containerObj,\n        containers = this.containers,\n        len = this.length,\n        max = this.maxContainers,\n        keyStr = '';\n\n    for (key in slLib.supportedStyle) {\n        if (style[key] !== undefined) {\n            keyStr += slLib.supportedStyle[key] + ':' + style[key] + ';';\n        }\n    }\n\n    if (!keyStr) {\n        return false;\n    }\n\n    if (containerObj = containers[keyStr]) {\n        if (this.first !== containerObj) {\n            containerObj.prev && (containerObj.prev.next = containerObj.next);\n            containerObj.next && (containerObj.next.prev = containerObj.prev);\n            containerObj.next = this.first;\n            containerObj.next.prev = containerObj;\n            this.last === containerObj && (this.last = containerObj.prev);\n            containerObj.prev = null;\n            this.first = containerObj;\n        }\n    } else {\n        if (len >= max) {\n            diff = len - max + 1;\n            // +1 is to remove an extra entry to make space for the new container to be added.\n            while (diff--) {\n                this.removeContainer(this.last);\n            }\n        }\n        containerObj = this.addContainer(keyStr);\n    }\n\n    return containerObj;\n};\n\nContainerManager.prototype.addContainer = function (keyStr) {\n    var node, container;\n\n    this.containers[keyStr] = container = {\n        next: null,\n        prev: null,\n        node: null,\n        ellipsesWidth: 0,\n        lineHeight: 0,\n        dotWidth: 0,\n        avgCharWidth: 4,\n        keyStr: keyStr,\n        charCache: {}\n    };\n\n    // Since the container objects are arranged from most recent to least recent order, we need to add the new\n    // object at the beginning of the list.\n    container.next = this.first;\n    container.next && (container.next.prev = container);\n    this.first = container;\n    if (!this.last) {\n        this.last = container;\n    }\n    this.length += 1;\n\n    node = container.node = doc.createElement('div');\n    this.rootNode.appendChild(node);\n\n    if (documentSupport.isIE && !documentSupport.hasSVG) {\n        node.style.setAttribute('cssText', keyStr);\n    } else {\n        node.setAttribute('style', keyStr);\n    }\n\n    node.setAttribute('aria-hidden', 'true');\n    node.setAttribute('role', 'presentation');\n    node.style.display = 'inline-block';\n\n    node.innerHTML = slLib.testStrAvg; // A test string.\n    container.lineHeight = node.offsetHeight;\n    container.avgCharWidth = node.offsetWidth / 3;\n\n    if (documentSupport.isBrowserLess) {\n        node = container.svgText = doc.createElementNS('http://www.w3.org/2000/svg', 'text');\n        node.setAttribute('style', keyStr);\n        this.svgRoot.appendChild(node);\n\n        node.textContent = slLib.testStrAvg; // A test string.\n        container.lineHeight = node.getBBox().height;\n        container.avgCharWidth = (node.getBBox().width - SVG_BBOX_CORRECTION) / 3;\n\n        node.textContent = '...';\n        container.ellipsesWidth = node.getBBox().width - SVG_BBOX_CORRECTION;\n        node.textContent = '.';\n        container.dotWidth = node.getBBox().width - SVG_BBOX_CORRECTION;\n    } else {\n        node.innerHTML = '...';\n        container.ellipsesWidth = node.offsetWidth;\n        node.innerHTML = '.';\n        container.dotWidth = node.offsetWidth;\n        node.innerHTML = '';\n    }\n\n    return container;\n};\n\nContainerManager.prototype.removeContainer = function (cObj) {\n    var keyStr = cObj.keyStr;\n\n    if (!keyStr || !this.length || !cObj) {\n        return;\n    }\n    this.length -= 1;\n\n    cObj.prev && (cObj.prev.next = cObj.next);\n    cObj.next && (cObj.next.prev = cObj.prev);\n    this.first === cObj && (this.first = cObj.next);\n    this.last === cObj && (this.last = cObj.prev);\n\n    cObj.node.parentNode.removeChild(cObj.node);\n\n    delete this.containers[keyStr];\n};\n\nContainerManager.prototype.dispose = function () {\n    var key,\n        containers = this.containers;\n\n    this.maxContainers = null;\n    for (key in containers) {\n        this.removeContainer(containers[key]);\n    }\n\n    this.rootNode.parentNode.removeChild(this.rootNode);\n\n    this.rootNode = null;\n    this.first = null;\n    this.last = null;\n};\n\nmodule.exports = ContainerManager;","export default function(a, b) {\n  return a < b ? -1 : a > b ? 1 : a >= b ? 0 : NaN;\n}\n","import ascending from \"./ascending\";\n\nexport default function(compare) {\n  if (compare.length === 1) compare = ascendingComparator(compare);\n  return {\n    left: function(a, x, lo, hi) {\n      if (lo == null) lo = 0;\n      if (hi == null) hi = a.length;\n      while (lo < hi) {\n        var mid = lo + hi >>> 1;\n        if (compare(a[mid], x) < 0) lo = mid + 1;\n        else hi = mid;\n      }\n      return lo;\n    },\n    right: function(a, x, lo, hi) {\n      if (lo == null) lo = 0;\n      if (hi == null) hi = a.length;\n      while (lo < hi) {\n        var mid = lo + hi >>> 1;\n        if (compare(a[mid], x) > 0) hi = mid;\n        else lo = mid + 1;\n      }\n      return lo;\n    }\n  };\n}\n\nfunction ascendingComparator(f) {\n  return function(d, x) {\n    return ascending(f(d), x);\n  };\n}\n","import ascending from \"./ascending\";\nimport bisector from \"./bisector\";\n\nvar ascendingBisect = bisector(ascending);\nexport var bisectRight = ascendingBisect.right;\nexport var bisectLeft = ascendingBisect.left;\nexport default bisectRight;\n","import {pair} from \"./pairs\";\n\nexport default function(values0, values1, reduce) {\n  var n0 = values0.length,\n      n1 = values1.length,\n      values = new Array(n0 * n1),\n      i0,\n      i1,\n      i,\n      value0;\n\n  if (reduce == null) reduce = pair;\n\n  for (i0 = i = 0; i0 < n0; ++i0) {\n    for (value0 = values0[i0], i1 = 0; i1 < n1; ++i1, ++i) {\n      values[i] = reduce(value0, values1[i1]);\n    }\n  }\n\n  return values;\n}\n","export default function(x) {\n  return x === null ? NaN : +x;\n}\n","var array = Array.prototype;\n\nexport var slice = array.slice;\nexport var map = array.map;\n","export default function(start, stop, step) {\n  start = +start, stop = +stop, step = (n = arguments.length) < 2 ? (stop = start, start = 0, 1) : n < 3 ? 1 : +step;\n\n  var i = -1,\n      n = Math.max(0, Math.ceil((stop - start) / step)) | 0,\n      range = new Array(n);\n\n  while (++i < n) {\n    range[i] = start + i * step;\n  }\n\n  return range;\n}\n","var e10 = Math.sqrt(50),\n    e5 = Math.sqrt(10),\n    e2 = Math.sqrt(2);\n\nexport default function(start, stop, count) {\n  var reverse,\n      i = -1,\n      n,\n      ticks,\n      step;\n\n  stop = +stop, start = +start, count = +count;\n  if (start === stop && count > 0) return [start];\n  if (reverse = stop < start) n = start, start = stop, stop = n;\n  if ((step = tickIncrement(start, stop, count)) === 0 || !isFinite(step)) return [];\n\n  if (step > 0) {\n    start = Math.ceil(start / step);\n    stop = Math.floor(stop / step);\n    ticks = new Array(n = Math.ceil(stop - start + 1));\n    while (++i < n) ticks[i] = (start + i) * step;\n  } else {\n    start = Math.floor(start * step);\n    stop = Math.ceil(stop * step);\n    ticks = new Array(n = Math.ceil(start - stop + 1));\n    while (++i < n) ticks[i] = (start - i) / step;\n  }\n\n  if (reverse) ticks.reverse();\n\n  return ticks;\n}\n\nexport function tickIncrement(start, stop, count) {\n  var step = (stop - start) / Math.max(0, count),\n      power = Math.floor(Math.log(step) / Math.LN10),\n      error = step / Math.pow(10, power);\n  return power >= 0\n      ? (error >= e10 ? 10 : error >= e5 ? 5 : error >= e2 ? 2 : 1) * Math.pow(10, power)\n      : -Math.pow(10, -power) / (error >= e10 ? 10 : error >= e5 ? 5 : error >= e2 ? 2 : 1);\n}\n\nexport function tickStep(start, stop, count) {\n  var step0 = Math.abs(stop - start) / Math.max(0, count),\n      step1 = Math.pow(10, Math.floor(Math.log(step0) / Math.LN10)),\n      error = step0 / step1;\n  if (error >= e10) step1 *= 10;\n  else if (error >= e5) step1 *= 5;\n  else if (error >= e2) step1 *= 2;\n  return stop < start ? -step1 : step1;\n}\n","export default function(values) {\n  return Math.ceil(Math.log(values.length) / Math.LN2) + 1;\n}\n","import number from \"./number\";\n\nexport default function(values, p, valueof) {\n  if (valueof == null) valueof = number;\n  if (!(n = values.length)) return;\n  if ((p = +p) <= 0 || n < 2) return +valueof(values[0], 0, values);\n  if (p >= 1) return +valueof(values[n - 1], n - 1, values);\n  var n,\n      i = (n - 1) * p,\n      i0 = Math.floor(i),\n      value0 = +valueof(values[i0], i0, values),\n      value1 = +valueof(values[i0 + 1], i0 + 1, values);\n  return value0 + (value1 - value0) * (i - i0);\n}\n","export var prefix = \"$\";\n\nfunction Map() {}\n\nMap.prototype = map.prototype = {\n  constructor: Map,\n  has: function(key) {\n    return (prefix + key) in this;\n  },\n  get: function(key) {\n    return this[prefix + key];\n  },\n  set: function(key, value) {\n    this[prefix + key] = value;\n    return this;\n  },\n  remove: function(key) {\n    var property = prefix + key;\n    return property in this && delete this[property];\n  },\n  clear: function() {\n    for (var property in this) if (property[0] === prefix) delete this[property];\n  },\n  keys: function() {\n    var keys = [];\n    for (var property in this) if (property[0] === prefix) keys.push(property.slice(1));\n    return keys;\n  },\n  values: function() {\n    var values = [];\n    for (var property in this) if (property[0] === prefix) values.push(this[property]);\n    return values;\n  },\n  entries: function() {\n    var entries = [];\n    for (var property in this) if (property[0] === prefix) entries.push({key: property.slice(1), value: this[property]});\n    return entries;\n  },\n  size: function() {\n    var size = 0;\n    for (var property in this) if (property[0] === prefix) ++size;\n    return size;\n  },\n  empty: function() {\n    for (var property in this) if (property[0] === prefix) return false;\n    return true;\n  },\n  each: function(f) {\n    for (var property in this) if (property[0] === prefix) f(this[property], property.slice(1), this);\n  }\n};\n\nfunction map(object, f) {\n  var map = new Map;\n\n  // Copy constructor.\n  if (object instanceof Map) object.each(function(value, key) { map.set(key, value); });\n\n  // Index array by numeric index or specified key function.\n  else if (Array.isArray(object)) {\n    var i = -1,\n        n = object.length,\n        o;\n\n    if (f == null) while (++i < n) map.set(i, object[i]);\n    else while (++i < n) map.set(f(o = object[i], i, object), o);\n  }\n\n  // Convert object to map.\n  else if (object) for (var key in object) map.set(key, object[key]);\n\n  return map;\n}\n\nexport default map;\n","import map from \"./map\";\n\nexport default function() {\n  var keys = [],\n      sortKeys = [],\n      sortValues,\n      rollup,\n      nest;\n\n  function apply(array, depth, createResult, setResult) {\n    if (depth >= keys.length) {\n      if (sortValues != null) array.sort(sortValues);\n      return rollup != null ? rollup(array) : array;\n    }\n\n    var i = -1,\n        n = array.length,\n        key = keys[depth++],\n        keyValue,\n        value,\n        valuesByKey = map(),\n        values,\n        result = createResult();\n\n    while (++i < n) {\n      if (values = valuesByKey.get(keyValue = key(value = array[i]) + \"\")) {\n        values.push(value);\n      } else {\n        valuesByKey.set(keyValue, [value]);\n      }\n    }\n\n    valuesByKey.each(function(values, key) {\n      setResult(result, key, apply(values, depth, createResult, setResult));\n    });\n\n    return result;\n  }\n\n  function entries(map, depth) {\n    if (++depth > keys.length) return map;\n    var array, sortKey = sortKeys[depth - 1];\n    if (rollup != null && depth >= keys.length) array = map.entries();\n    else array = [], map.each(function(v, k) { array.push({key: k, values: entries(v, depth)}); });\n    return sortKey != null ? array.sort(function(a, b) { return sortKey(a.key, b.key); }) : array;\n  }\n\n  return nest = {\n    object: function(array) { return apply(array, 0, createObject, setObject); },\n    map: function(array) { return apply(array, 0, createMap, setMap); },\n    entries: function(array) { return entries(apply(array, 0, createMap, setMap), 0); },\n    key: function(d) { keys.push(d); return nest; },\n    sortKeys: function(order) { sortKeys[keys.length - 1] = order; return nest; },\n    sortValues: function(order) { sortValues = order; return nest; },\n    rollup: function(f) { rollup = f; return nest; }\n  };\n}\n\nfunction createObject() {\n  return {};\n}\n\nfunction setObject(object, key, value) {\n  object[key] = value;\n}\n\nfunction createMap() {\n  return map();\n}\n\nfunction setMap(map, key, value) {\n  map.set(key, value);\n}\n","import {default as map, prefix} from \"./map\";\n\nfunction Set() {}\n\nvar proto = map.prototype;\n\nSet.prototype = set.prototype = {\n  constructor: Set,\n  has: proto.has,\n  add: function(value) {\n    value += \"\";\n    this[prefix + value] = value;\n    return this;\n  },\n  remove: proto.remove,\n  clear: proto.clear,\n  values: proto.keys,\n  size: proto.size,\n  empty: proto.empty,\n  each: proto.each\n};\n\nfunction set(object, f) {\n  var set = new Set;\n\n  // Copy constructor.\n  if (object instanceof Set) object.each(function(value) { set.add(value); });\n\n  // Otherwise, assume it’s an array.\n  else if (object) {\n    var i = -1, n = object.length;\n    if (f == null) while (++i < n) set.add(object[i]);\n    else while (++i < n) set.add(f(object[i], i, object));\n  }\n\n  return set;\n}\n\nexport default set;\n","var array = Array.prototype;\n\nexport var map = array.map;\nexport var slice = array.slice;\n","import {map} from \"d3-collection\";\nimport {slice} from \"./array\";\n\nexport var implicit = {name: \"implicit\"};\n\nexport default function ordinal(range) {\n  var index = map(),\n      domain = [],\n      unknown = implicit;\n\n  range = range == null ? [] : slice.call(range);\n\n  function scale(d) {\n    var key = d + \"\", i = index.get(key);\n    if (!i) {\n      if (unknown !== implicit) return unknown;\n      index.set(key, i = domain.push(d));\n    }\n    return range[(i - 1) % range.length];\n  }\n\n  scale.domain = function(_) {\n    if (!arguments.length) return domain.slice();\n    domain = [], index = map();\n    var i = -1, n = _.length, d, key;\n    while (++i < n) if (!index.has(key = (d = _[i]) + \"\")) index.set(key, domain.push(d));\n    return scale;\n  };\n\n  scale.range = function(_) {\n    return arguments.length ? (range = slice.call(_), scale) : range.slice();\n  };\n\n  scale.unknown = function(_) {\n    return arguments.length ? (unknown = _, scale) : unknown;\n  };\n\n  scale.copy = function() {\n    return ordinal()\n        .domain(domain)\n        .range(range)\n        .unknown(unknown);\n  };\n\n  return scale;\n}\n","import {range as sequence} from \"d3-array\";\nimport ordinal from \"./ordinal\";\n\nexport default function band() {\n  var scale = ordinal().unknown(undefined),\n      domain = scale.domain,\n      ordinalRange = scale.range,\n      range = [0, 1],\n      step,\n      bandwidth,\n      round = false,\n      paddingInner = 0,\n      paddingOuter = 0,\n      align = 0.5;\n\n  delete scale.unknown;\n  function rescale() {\n    var n = domain().length,\n        reverse = range[1] < range[0],\n        start = range[reverse - 0],\n        stop = range[1 - reverse];\n    step = (stop - start) / Math.max(1, n - paddingInner + paddingOuter * 2);\n    if (round) step = Math.floor(step);\n    start += (stop - start - step * (n - paddingInner)) * align;\n    bandwidth = step * (1 - paddingInner);\n    if (round) start = Math.round(start), bandwidth = Math.round(bandwidth);\n    var values = sequence(n).map(function(i) { return start + step * i; });\n    return ordinalRange(reverse ? values.reverse() : values);\n  }\n\n  scale.domain = function(_) {\n    return arguments.length ? (domain(_), rescale()) : domain();\n  };\n\n  scale.range = function(_) {\n    return arguments.length ? (range = [+_[0], +_[1]], rescale()) : range.slice();\n  };\n\n  scale.rangeRound = function(_) {\n    return range = [+_[0], +_[1]], round = true, rescale();\n  };\n\n  scale.bandwidth = function() {\n    return bandwidth;\n  };\n\n  scale.step = function() {\n    return step;\n  };\n\n  scale.round = function(_) {\n    return arguments.length ? (round = !!_, rescale()) : round;\n  };\n\n  scale.padding = function(_) {\n    return arguments.length ? (paddingInner = paddingOuter = Math.max(0, Math.min(1, _)), rescale()) : paddingInner;\n  };\n\n  scale.paddingInner = function(_) {\n    return arguments.length ? (paddingInner = Math.max(0, Math.min(1, _)), rescale()) : paddingInner;\n  };\n\n  scale.paddingOuter = function(_) {\n    return arguments.length ? (paddingOuter = Math.max(0, Math.min(1, _)), rescale()) : paddingOuter;\n  };\n\n  scale.align = function(_) {\n    return arguments.length ? (align = Math.max(0, Math.min(1, _)), rescale()) : align;\n  };\n\n  scale.copy = function() {\n    return band()\n        .domain(domain())\n        .range(range)\n        .round(round)\n        .paddingInner(paddingInner)\n        .paddingOuter(paddingOuter)\n        .align(align);\n  };\n\n  scale.invertExtent = function(r0, r1) {\n    var lo = +r0,\n        hi = arguments.length > 1 ? +r1 : lo,\n        reverse = range[1] < range[0],\n        values = reverse ? ordinalRange().reverse() : ordinalRange(),\n        n = values.length - 1, a, b, t,\n        hiIndex;\n    values.push(values[n] + this.step());\n    // order range inputs, bail if outside of scale range\n    if (hi < lo) t = lo, lo = hi, hi = t;\n    if (hi < values[0] || lo > range[1-reverse]) return undefined;\n\n    // binary search to index into scale range\n    a = Math.max(0, getClosestIndexOf(values, lo));\n    hiIndex = getClosestIndexOf(values, hi);\n    b = lo===hi ? a : Math.max(a, hiIndex - 1);\n\n    // increment index a if lo is within padding gap\n    // if (lo - values[a] > bandwidth + 1e-10) ++a;\n\n    if (reverse) t = a, a = n - b, b = n - t; // map + swap\n    return (a > b) ? undefined : domain().slice(a, b+1);\n  };\n\n  scale.invert = function (r0, r1) {\n    var lo = +r0,\n        hi = arguments.length > 1 ? +r1 : lo,\n        reverse = range[1] < range[0],\n        values = reverse ? ordinalRange().reverse() : ordinalRange(),\n        n = values.length - 1,\n        a,\n        t;\n\n    // order range inputs, bail if outside of scale range\n    if (hi < lo) t = lo, lo = hi, hi = t;\n    if (hi < values[0] || lo > range[1-reverse]) return undefined;\n\n    // binary search to index into scale range\n    a = Math.max(0, getClosestIndexOf(values, lo, 'left'));\n\n    // increment index a if lo is within padding gap\n    // if (lo - values[a] > bandwidth + 1e-10) ++a;\n\n    return domain()[reverse ? n - a : a];\n  }\n  return rescale();\n}\n\nfunction pointish(scale) {\n  var copy = scale.copy;\n\n  scale.padding = scale.paddingOuter;\n  delete scale.paddingInner;\n  delete scale.paddingOuter;\n\n  scale.copy = function() {\n    return pointish(copy());\n  };\n\n  return scale;\n}\n\nexport function point() {\n  return pointish(band().paddingInner(1));\n}\n\nfunction getClosestIndexOf (arr, value, side) {\n  var low = 0,\n      arrLen = arr.length,\n      high = arrLen - 1,\n      highVal,\n      mid,\n      d1,\n      d2;\n\n  while (low < high) {\n      mid = Math.floor((low + high) / 2);\n      d1 = Math.abs(arr[mid] - value);\n      d2 = Math.abs(arr[mid + 1] - value);\n\n      if (d2 <= d1) {\n          low = mid + 1;\n      }\n      else {\n          high = mid;\n      }\n  }\n\n  if (!side) {\n      return high;\n  }\n\n  highVal = arr[high];\n  if (highVal === value) {\n      return high;\n  } else if (highVal > value) {\n      if (high === 0) { return high; }\n      return side === 'left'? high - 1 : high;\n  } else {\n      if (high === arr.length - 1) { return high; }\n      return side === 'left'? high : high + 1;\n  }\n}","export default function(constructor, factory, prototype) {\n  constructor.prototype = factory.prototype = prototype;\n  prototype.constructor = constructor;\n}\n\nexport function extend(parent, definition) {\n  var prototype = Object.create(parent.prototype);\n  for (var key in definition) prototype[key] = definition[key];\n  return prototype;\n}\n","import define, {extend} from \"./define\";\n\nexport function Color() {}\n\nexport var darker = 0.7;\nexport var brighter = 1 / darker;\n\nvar reI = \"\\\\s*([+-]?\\\\d+)\\\\s*\",\n    reN = \"\\\\s*([+-]?\\\\d*\\\\.?\\\\d+(?:[eE][+-]?\\\\d+)?)\\\\s*\",\n    reP = \"\\\\s*([+-]?\\\\d*\\\\.?\\\\d+(?:[eE][+-]?\\\\d+)?)%\\\\s*\",\n    reHex3 = /^#([0-9a-f]{3})$/,\n    reHex6 = /^#([0-9a-f]{6})$/,\n    reRgbInteger = new RegExp(\"^rgb\\\\(\" + [reI, reI, reI] + \"\\\\)$\"),\n    reRgbPercent = new RegExp(\"^rgb\\\\(\" + [reP, reP, reP] + \"\\\\)$\"),\n    reRgbaInteger = new RegExp(\"^rgba\\\\(\" + [reI, reI, reI, reN] + \"\\\\)$\"),\n    reRgbaPercent = new RegExp(\"^rgba\\\\(\" + [reP, reP, reP, reN] + \"\\\\)$\"),\n    reHslPercent = new RegExp(\"^hsl\\\\(\" + [reN, reP, reP] + \"\\\\)$\"),\n    reHslaPercent = new RegExp(\"^hsla\\\\(\" + [reN, reP, reP, reN] + \"\\\\)$\");\n\nvar named = {\n  aliceblue: 0xf0f8ff,\n  antiquewhite: 0xfaebd7,\n  aqua: 0x00ffff,\n  aquamarine: 0x7fffd4,\n  azure: 0xf0ffff,\n  beige: 0xf5f5dc,\n  bisque: 0xffe4c4,\n  black: 0x000000,\n  blanchedalmond: 0xffebcd,\n  blue: 0x0000ff,\n  blueviolet: 0x8a2be2,\n  brown: 0xa52a2a,\n  burlywood: 0xdeb887,\n  cadetblue: 0x5f9ea0,\n  chartreuse: 0x7fff00,\n  chocolate: 0xd2691e,\n  coral: 0xff7f50,\n  cornflowerblue: 0x6495ed,\n  cornsilk: 0xfff8dc,\n  crimson: 0xdc143c,\n  cyan: 0x00ffff,\n  darkblue: 0x00008b,\n  darkcyan: 0x008b8b,\n  darkgoldenrod: 0xb8860b,\n  darkgray: 0xa9a9a9,\n  darkgreen: 0x006400,\n  darkgrey: 0xa9a9a9,\n  darkkhaki: 0xbdb76b,\n  darkmagenta: 0x8b008b,\n  darkolivegreen: 0x556b2f,\n  darkorange: 0xff8c00,\n  darkorchid: 0x9932cc,\n  darkred: 0x8b0000,\n  darksalmon: 0xe9967a,\n  darkseagreen: 0x8fbc8f,\n  darkslateblue: 0x483d8b,\n  darkslategray: 0x2f4f4f,\n  darkslategrey: 0x2f4f4f,\n  darkturquoise: 0x00ced1,\n  darkviolet: 0x9400d3,\n  deeppink: 0xff1493,\n  deepskyblue: 0x00bfff,\n  dimgray: 0x696969,\n  dimgrey: 0x696969,\n  dodgerblue: 0x1e90ff,\n  firebrick: 0xb22222,\n  floralwhite: 0xfffaf0,\n  forestgreen: 0x228b22,\n  fuchsia: 0xff00ff,\n  gainsboro: 0xdcdcdc,\n  ghostwhite: 0xf8f8ff,\n  gold: 0xffd700,\n  goldenrod: 0xdaa520,\n  gray: 0x808080,\n  green: 0x008000,\n  greenyellow: 0xadff2f,\n  grey: 0x808080,\n  honeydew: 0xf0fff0,\n  hotpink: 0xff69b4,\n  indianred: 0xcd5c5c,\n  indigo: 0x4b0082,\n  ivory: 0xfffff0,\n  khaki: 0xf0e68c,\n  lavender: 0xe6e6fa,\n  lavenderblush: 0xfff0f5,\n  lawngreen: 0x7cfc00,\n  lemonchiffon: 0xfffacd,\n  lightblue: 0xadd8e6,\n  lightcoral: 0xf08080,\n  lightcyan: 0xe0ffff,\n  lightgoldenrodyellow: 0xfafad2,\n  lightgray: 0xd3d3d3,\n  lightgreen: 0x90ee90,\n  lightgrey: 0xd3d3d3,\n  lightpink: 0xffb6c1,\n  lightsalmon: 0xffa07a,\n  lightseagreen: 0x20b2aa,\n  lightskyblue: 0x87cefa,\n  lightslategray: 0x778899,\n  lightslategrey: 0x778899,\n  lightsteelblue: 0xb0c4de,\n  lightyellow: 0xffffe0,\n  lime: 0x00ff00,\n  limegreen: 0x32cd32,\n  linen: 0xfaf0e6,\n  magenta: 0xff00ff,\n  maroon: 0x800000,\n  mediumaquamarine: 0x66cdaa,\n  mediumblue: 0x0000cd,\n  mediumorchid: 0xba55d3,\n  mediumpurple: 0x9370db,\n  mediumseagreen: 0x3cb371,\n  mediumslateblue: 0x7b68ee,\n  mediumspringgreen: 0x00fa9a,\n  mediumturquoise: 0x48d1cc,\n  mediumvioletred: 0xc71585,\n  midnightblue: 0x191970,\n  mintcream: 0xf5fffa,\n  mistyrose: 0xffe4e1,\n  moccasin: 0xffe4b5,\n  navajowhite: 0xffdead,\n  navy: 0x000080,\n  oldlace: 0xfdf5e6,\n  olive: 0x808000,\n  olivedrab: 0x6b8e23,\n  orange: 0xffa500,\n  orangered: 0xff4500,\n  orchid: 0xda70d6,\n  palegoldenrod: 0xeee8aa,\n  palegreen: 0x98fb98,\n  paleturquoise: 0xafeeee,\n  palevioletred: 0xdb7093,\n  papayawhip: 0xffefd5,\n  peachpuff: 0xffdab9,\n  peru: 0xcd853f,\n  pink: 0xffc0cb,\n  plum: 0xdda0dd,\n  powderblue: 0xb0e0e6,\n  purple: 0x800080,\n  rebeccapurple: 0x663399,\n  red: 0xff0000,\n  rosybrown: 0xbc8f8f,\n  royalblue: 0x4169e1,\n  saddlebrown: 0x8b4513,\n  salmon: 0xfa8072,\n  sandybrown: 0xf4a460,\n  seagreen: 0x2e8b57,\n  seashell: 0xfff5ee,\n  sienna: 0xa0522d,\n  silver: 0xc0c0c0,\n  skyblue: 0x87ceeb,\n  slateblue: 0x6a5acd,\n  slategray: 0x708090,\n  slategrey: 0x708090,\n  snow: 0xfffafa,\n  springgreen: 0x00ff7f,\n  steelblue: 0x4682b4,\n  tan: 0xd2b48c,\n  teal: 0x008080,\n  thistle: 0xd8bfd8,\n  tomato: 0xff6347,\n  turquoise: 0x40e0d0,\n  violet: 0xee82ee,\n  wheat: 0xf5deb3,\n  white: 0xffffff,\n  whitesmoke: 0xf5f5f5,\n  yellow: 0xffff00,\n  yellowgreen: 0x9acd32\n};\n\ndefine(Color, color, {\n  displayable: function() {\n    return this.rgb().displayable();\n  },\n  hex: function() {\n    return this.rgb().hex();\n  },\n  toString: function() {\n    return this.rgb() + \"\";\n  }\n});\n\nexport default function color(format) {\n  var m;\n  format = (format + \"\").trim().toLowerCase();\n  return (m = reHex3.exec(format)) ? (m = parseInt(m[1], 16), new Rgb((m >> 8 & 0xf) | (m >> 4 & 0x0f0), (m >> 4 & 0xf) | (m & 0xf0), ((m & 0xf) << 4) | (m & 0xf), 1)) // #f00\n      : (m = reHex6.exec(format)) ? rgbn(parseInt(m[1], 16)) // #ff0000\n      : (m = reRgbInteger.exec(format)) ? new Rgb(m[1], m[2], m[3], 1) // rgb(255, 0, 0)\n      : (m = reRgbPercent.exec(format)) ? new Rgb(m[1] * 255 / 100, m[2] * 255 / 100, m[3] * 255 / 100, 1) // rgb(100%, 0%, 0%)\n      : (m = reRgbaInteger.exec(format)) ? rgba(m[1], m[2], m[3], m[4]) // rgba(255, 0, 0, 1)\n      : (m = reRgbaPercent.exec(format)) ? rgba(m[1] * 255 / 100, m[2] * 255 / 100, m[3] * 255 / 100, m[4]) // rgb(100%, 0%, 0%, 1)\n      : (m = reHslPercent.exec(format)) ? hsla(m[1], m[2] / 100, m[3] / 100, 1) // hsl(120, 50%, 50%)\n      : (m = reHslaPercent.exec(format)) ? hsla(m[1], m[2] / 100, m[3] / 100, m[4]) // hsla(120, 50%, 50%, 1)\n      : named.hasOwnProperty(format) ? rgbn(named[format])\n      : format === \"transparent\" ? new Rgb(NaN, NaN, NaN, 0)\n      : null;\n}\n\nfunction rgbn(n) {\n  return new Rgb(n >> 16 & 0xff, n >> 8 & 0xff, n & 0xff, 1);\n}\n\nfunction rgba(r, g, b, a) {\n  if (a <= 0) r = g = b = NaN;\n  return new Rgb(r, g, b, a);\n}\n\nexport function rgbConvert(o) {\n  if (!(o instanceof Color)) o = color(o);\n  if (!o) return new Rgb;\n  o = o.rgb();\n  return new Rgb(o.r, o.g, o.b, o.opacity);\n}\n\nexport function rgb(r, g, b, opacity) {\n  return arguments.length === 1 ? rgbConvert(r) : new Rgb(r, g, b, opacity == null ? 1 : opacity);\n}\n\nexport function Rgb(r, g, b, opacity) {\n  this.r = +r;\n  this.g = +g;\n  this.b = +b;\n  this.opacity = +opacity;\n}\n\ndefine(Rgb, rgb, extend(Color, {\n  brighter: function(k) {\n    k = k == null ? brighter : Math.pow(brighter, k);\n    return new Rgb(this.r * k, this.g * k, this.b * k, this.opacity);\n  },\n  darker: function(k) {\n    k = k == null ? darker : Math.pow(darker, k);\n    return new Rgb(this.r * k, this.g * k, this.b * k, this.opacity);\n  },\n  rgb: function() {\n    return this;\n  },\n  displayable: function() {\n    return (0 <= this.r && this.r <= 255)\n        && (0 <= this.g && this.g <= 255)\n        && (0 <= this.b && this.b <= 255)\n        && (0 <= this.opacity && this.opacity <= 1);\n  },\n  hex: function() {\n    return \"#\" + hex(this.r) + hex(this.g) + hex(this.b);\n  },\n  toString: function() {\n    var a = this.opacity; a = isNaN(a) ? 1 : Math.max(0, Math.min(1, a));\n    return (a === 1 ? \"rgb(\" : \"rgba(\")\n        + Math.max(0, Math.min(255, Math.round(this.r) || 0)) + \", \"\n        + Math.max(0, Math.min(255, Math.round(this.g) || 0)) + \", \"\n        + Math.max(0, Math.min(255, Math.round(this.b) || 0))\n        + (a === 1 ? \")\" : \", \" + a + \")\");\n  }\n}));\n\nfunction hex(value) {\n  value = Math.max(0, Math.min(255, Math.round(value) || 0));\n  return (value < 16 ? \"0\" : \"\") + value.toString(16);\n}\n\nfunction hsla(h, s, l, a) {\n  if (a <= 0) h = s = l = NaN;\n  else if (l <= 0 || l >= 1) h = s = NaN;\n  else if (s <= 0) h = NaN;\n  return new Hsl(h, s, l, a);\n}\n\nexport function hslConvert(o) {\n  if (o instanceof Hsl) return new Hsl(o.h, o.s, o.l, o.opacity);\n  if (!(o instanceof Color)) o = color(o);\n  if (!o) return new Hsl;\n  if (o instanceof Hsl) return o;\n  o = o.rgb();\n  var r = o.r / 255,\n      g = o.g / 255,\n      b = o.b / 255,\n      min = Math.min(r, g, b),\n      max = Math.max(r, g, b),\n      h = NaN,\n      s = max - min,\n      l = (max + min) / 2;\n  if (s) {\n    if (r === max) h = (g - b) / s + (g < b) * 6;\n    else if (g === max) h = (b - r) / s + 2;\n    else h = (r - g) / s + 4;\n    s /= l < 0.5 ? max + min : 2 - max - min;\n    h *= 60;\n  } else {\n    s = l > 0 && l < 1 ? 0 : h;\n  }\n  return new Hsl(h, s, l, o.opacity);\n}\n\nexport function hsl(h, s, l, opacity) {\n  return arguments.length === 1 ? hslConvert(h) : new Hsl(h, s, l, opacity == null ? 1 : opacity);\n}\n\nfunction Hsl(h, s, l, opacity) {\n  this.h = +h;\n  this.s = +s;\n  this.l = +l;\n  this.opacity = +opacity;\n}\n\ndefine(Hsl, hsl, extend(Color, {\n  brighter: function(k) {\n    k = k == null ? brighter : Math.pow(brighter, k);\n    return new Hsl(this.h, this.s, this.l * k, this.opacity);\n  },\n  darker: function(k) {\n    k = k == null ? darker : Math.pow(darker, k);\n    return new Hsl(this.h, this.s, this.l * k, this.opacity);\n  },\n  rgb: function() {\n    var h = this.h % 360 + (this.h < 0) * 360,\n        s = isNaN(h) || isNaN(this.s) ? 0 : this.s,\n        l = this.l,\n        m2 = l + (l < 0.5 ? l : 1 - l) * s,\n        m1 = 2 * l - m2;\n    return new Rgb(\n      hsl2rgb(h >= 240 ? h - 240 : h + 120, m1, m2),\n      hsl2rgb(h, m1, m2),\n      hsl2rgb(h < 120 ? h + 240 : h - 120, m1, m2),\n      this.opacity\n    );\n  },\n  displayable: function() {\n    return (0 <= this.s && this.s <= 1 || isNaN(this.s))\n        && (0 <= this.l && this.l <= 1)\n        && (0 <= this.opacity && this.opacity <= 1);\n  }\n}));\n\n/* From FvD 13.37, CSS Color Module Level 3 */\nfunction hsl2rgb(h, m1, m2) {\n  return (h < 60 ? m1 + (m2 - m1) * h / 60\n      : h < 180 ? m2\n      : h < 240 ? m1 + (m2 - m1) * (240 - h) / 60\n      : m1) * 255;\n}\n","export var deg2rad = Math.PI / 180;\nexport var rad2deg = 180 / Math.PI;\n","import define, {extend} from \"./define\";\nimport {Color, rgbConvert, Rgb} from \"./color\";\nimport {deg2rad, rad2deg} from \"./math\";\n\n// https://beta.observablehq.com/@mbostock/lab-and-rgb\nvar K = 18,\n    Xn = 0.96422,\n    Yn = 1,\n    Zn = 0.82521,\n    t0 = 4 / 29,\n    t1 = 6 / 29,\n    t2 = 3 * t1 * t1,\n    t3 = t1 * t1 * t1;\n\nfunction labConvert(o) {\n  if (o instanceof Lab) return new Lab(o.l, o.a, o.b, o.opacity);\n  if (o instanceof Hcl) {\n    if (isNaN(o.h)) return new Lab(o.l, 0, 0, o.opacity);\n    var h = o.h * deg2rad;\n    return new Lab(o.l, Math.cos(h) * o.c, Math.sin(h) * o.c, o.opacity);\n  }\n  if (!(o instanceof Rgb)) o = rgbConvert(o);\n  var r = rgb2lrgb(o.r),\n      g = rgb2lrgb(o.g),\n      b = rgb2lrgb(o.b),\n      y = xyz2lab((0.2225045 * r + 0.7168786 * g + 0.0606169 * b) / Yn), x, z;\n  if (r === g && g === b) x = z = y; else {\n    x = xyz2lab((0.4360747 * r + 0.3850649 * g + 0.1430804 * b) / Xn);\n    z = xyz2lab((0.0139322 * r + 0.0971045 * g + 0.7141733 * b) / Zn);\n  }\n  return new Lab(116 * y - 16, 500 * (x - y), 200 * (y - z), o.opacity);\n}\n\nexport function gray(l, opacity) {\n  return new Lab(l, 0, 0, opacity == null ? 1 : opacity);\n}\n\nexport default function lab(l, a, b, opacity) {\n  return arguments.length === 1 ? labConvert(l) : new Lab(l, a, b, opacity == null ? 1 : opacity);\n}\n\nexport function Lab(l, a, b, opacity) {\n  this.l = +l;\n  this.a = +a;\n  this.b = +b;\n  this.opacity = +opacity;\n}\n\ndefine(Lab, lab, extend(Color, {\n  brighter: function(k) {\n    return new Lab(this.l + K * (k == null ? 1 : k), this.a, this.b, this.opacity);\n  },\n  darker: function(k) {\n    return new Lab(this.l - K * (k == null ? 1 : k), this.a, this.b, this.opacity);\n  },\n  rgb: function() {\n    var y = (this.l + 16) / 116,\n        x = isNaN(this.a) ? y : y + this.a / 500,\n        z = isNaN(this.b) ? y : y - this.b / 200;\n    x = Xn * lab2xyz(x);\n    y = Yn * lab2xyz(y);\n    z = Zn * lab2xyz(z);\n    return new Rgb(\n      lrgb2rgb( 3.1338561 * x - 1.6168667 * y - 0.4906146 * z),\n      lrgb2rgb(-0.9787684 * x + 1.9161415 * y + 0.0334540 * z),\n      lrgb2rgb( 0.0719453 * x - 0.2289914 * y + 1.4052427 * z),\n      this.opacity\n    );\n  }\n}));\n\nfunction xyz2lab(t) {\n  return t > t3 ? Math.pow(t, 1 / 3) : t / t2 + t0;\n}\n\nfunction lab2xyz(t) {\n  return t > t1 ? t * t * t : t2 * (t - t0);\n}\n\nfunction lrgb2rgb(x) {\n  return 255 * (x <= 0.0031308 ? 12.92 * x : 1.055 * Math.pow(x, 1 / 2.4) - 0.055);\n}\n\nfunction rgb2lrgb(x) {\n  return (x /= 255) <= 0.04045 ? x / 12.92 : Math.pow((x + 0.055) / 1.055, 2.4);\n}\n\nfunction hclConvert(o) {\n  if (o instanceof Hcl) return new Hcl(o.h, o.c, o.l, o.opacity);\n  if (!(o instanceof Lab)) o = labConvert(o);\n  if (o.a === 0 && o.b === 0) return new Hcl(NaN, 0, o.l, o.opacity);\n  var h = Math.atan2(o.b, o.a) * rad2deg;\n  return new Hcl(h < 0 ? h + 360 : h, Math.sqrt(o.a * o.a + o.b * o.b), o.l, o.opacity);\n}\n\nexport function lch(l, c, h, opacity) {\n  return arguments.length === 1 ? hclConvert(l) : new Hcl(h, c, l, opacity == null ? 1 : opacity);\n}\n\nexport function hcl(h, c, l, opacity) {\n  return arguments.length === 1 ? hclConvert(h) : new Hcl(h, c, l, opacity == null ? 1 : opacity);\n}\n\nexport function Hcl(h, c, l, opacity) {\n  this.h = +h;\n  this.c = +c;\n  this.l = +l;\n  this.opacity = +opacity;\n}\n\ndefine(Hcl, hcl, extend(Color, {\n  brighter: function(k) {\n    return new Hcl(this.h, this.c, this.l + K * (k == null ? 1 : k), this.opacity);\n  },\n  darker: function(k) {\n    return new Hcl(this.h, this.c, this.l - K * (k == null ? 1 : k), this.opacity);\n  },\n  rgb: function() {\n    return labConvert(this).rgb();\n  }\n}));\n","import define, {extend} from \"./define\";\nimport {Color, rgbConvert, Rgb, darker, brighter} from \"./color\";\nimport {deg2rad, rad2deg} from \"./math\";\n\nvar A = -0.14861,\n    B = +1.78277,\n    C = -0.29227,\n    D = -0.90649,\n    E = +1.97294,\n    ED = E * D,\n    EB = E * B,\n    BC_DA = B * C - D * A;\n\nfunction cubehelixConvert(o) {\n  if (o instanceof Cubehelix) return new Cubehelix(o.h, o.s, o.l, o.opacity);\n  if (!(o instanceof Rgb)) o = rgbConvert(o);\n  var r = o.r / 255,\n      g = o.g / 255,\n      b = o.b / 255,\n      l = (BC_DA * b + ED * r - EB * g) / (BC_DA + ED - EB),\n      bl = b - l,\n      k = (E * (g - l) - C * bl) / D,\n      s = Math.sqrt(k * k + bl * bl) / (E * l * (1 - l)), // NaN if l=0 or l=1\n      h = s ? Math.atan2(k, bl) * rad2deg - 120 : NaN;\n  return new Cubehelix(h < 0 ? h + 360 : h, s, l, o.opacity);\n}\n\nexport default function cubehelix(h, s, l, opacity) {\n  return arguments.length === 1 ? cubehelixConvert(h) : new Cubehelix(h, s, l, opacity == null ? 1 : opacity);\n}\n\nexport function Cubehelix(h, s, l, opacity) {\n  this.h = +h;\n  this.s = +s;\n  this.l = +l;\n  this.opacity = +opacity;\n}\n\ndefine(Cubehelix, cubehelix, extend(Color, {\n  brighter: function(k) {\n    k = k == null ? brighter : Math.pow(brighter, k);\n    return new Cubehelix(this.h, this.s, this.l * k, this.opacity);\n  },\n  darker: function(k) {\n    k = k == null ? darker : Math.pow(darker, k);\n    return new Cubehelix(this.h, this.s, this.l * k, this.opacity);\n  },\n  rgb: function() {\n    var h = isNaN(this.h) ? 0 : (this.h + 120) * deg2rad,\n        l = +this.l,\n        a = isNaN(this.s) ? 0 : this.s * l * (1 - l),\n        cosh = Math.cos(h),\n        sinh = Math.sin(h);\n    return new Rgb(\n      255 * (l + a * (A * cosh + B * sinh)),\n      255 * (l + a * (C * cosh + D * sinh)),\n      255 * (l + a * (E * cosh)),\n      this.opacity\n    );\n  }\n}));\n","export function basis(t1, v0, v1, v2, v3) {\n  var t2 = t1 * t1, t3 = t2 * t1;\n  return ((1 - 3 * t1 + 3 * t2 - t3) * v0\n      + (4 - 6 * t2 + 3 * t3) * v1\n      + (1 + 3 * t1 + 3 * t2 - 3 * t3) * v2\n      + t3 * v3) / 6;\n}\n\nexport default function(values) {\n  var n = values.length - 1;\n  return function(t) {\n    var i = t <= 0 ? (t = 0) : t >= 1 ? (t = 1, n - 1) : Math.floor(t * n),\n        v1 = values[i],\n        v2 = values[i + 1],\n        v0 = i > 0 ? values[i - 1] : 2 * v1 - v2,\n        v3 = i < n - 1 ? values[i + 2] : 2 * v2 - v1;\n    return basis((t - i / n) * n, v0, v1, v2, v3);\n  };\n}\n","export default function(x) {\n  return function() {\n    return x;\n  };\n}\n","import constant from \"./constant\";\n\nfunction linear(a, d) {\n  return function(t) {\n    return a + t * d;\n  };\n}\n\nfunction exponential(a, b, y) {\n  return a = Math.pow(a, y), b = Math.pow(b, y) - a, y = 1 / y, function(t) {\n    return Math.pow(a + t * b, y);\n  };\n}\n\nexport function hue(a, b) {\n  var d = b - a;\n  return d ? linear(a, d > 180 || d < -180 ? d - 360 * Math.round(d / 360) : d) : constant(isNaN(a) ? b : a);\n}\n\nexport function gamma(y) {\n  return (y = +y) === 1 ? nogamma : function(a, b) {\n    return b - a ? exponential(a, b, y) : constant(isNaN(a) ? b : a);\n  };\n}\n\nexport default function nogamma(a, b) {\n  var d = b - a;\n  return d ? linear(a, d) : constant(isNaN(a) ? b : a);\n}\n","import {rgb as colorRgb} from \"d3-color\";\nimport basis from \"./basis\";\nimport basisClosed from \"./basisClosed\";\nimport nogamma, {gamma} from \"./color\";\n\nexport default (function rgbGamma(y) {\n  var color = gamma(y);\n\n  function rgb(start, end) {\n    var r = color((start = colorRgb(start)).r, (end = colorRgb(end)).r),\n        g = color(start.g, end.g),\n        b = color(start.b, end.b),\n        opacity = nogamma(start.opacity, end.opacity);\n    return function(t) {\n      start.r = r(t);\n      start.g = g(t);\n      start.b = b(t);\n      start.opacity = opacity(t);\n      return start + \"\";\n    };\n  }\n\n  rgb.gamma = rgbGamma;\n\n  return rgb;\n})(1);\n\nfunction rgbSpline(spline) {\n  return function(colors) {\n    var n = colors.length,\n        r = new Array(n),\n        g = new Array(n),\n        b = new Array(n),\n        i, color;\n    for (i = 0; i < n; ++i) {\n      color = colorRgb(colors[i]);\n      r[i] = color.r || 0;\n      g[i] = color.g || 0;\n      b[i] = color.b || 0;\n    }\n    r = spline(r);\n    g = spline(g);\n    b = spline(b);\n    color.opacity = 1;\n    return function(t) {\n      color.r = r(t);\n      color.g = g(t);\n      color.b = b(t);\n      return color + \"\";\n    };\n  };\n}\n\nexport var rgbBasis = rgbSpline(basis);\nexport var rgbBasisClosed = rgbSpline(basisClosed);\n","export default function(a, b) {\n  return a = +a, b -= a, function(t) {\n    return a + b * t;\n  };\n}\n","import {basis} from \"./basis\";\n\nexport default function(values) {\n  var n = values.length;\n  return function(t) {\n    var i = Math.floor(((t %= 1) < 0 ? ++t : t) * n),\n        v0 = values[(i + n - 1) % n],\n        v1 = values[i % n],\n        v2 = values[(i + 1) % n],\n        v3 = values[(i + 2) % n];\n    return basis((t - i / n) * n, v0, v1, v2, v3);\n  };\n}\n","import value from \"./value\";\n\nexport default function(a, b) {\n  var i = {},\n      c = {},\n      k;\n\n  if (a === null || typeof a !== \"object\") a = {};\n  if (b === null || typeof b !== \"object\") b = {};\n\n  for (k in b) {\n    if (k in a) {\n      i[k] = value(a[k], b[k]);\n    } else {\n      c[k] = b[k];\n    }\n  }\n\n  return function(t) {\n    for (k in i) c[k] = i[k](t);\n    return c;\n  };\n}\n","import number from \"./number\";\n\nvar reA = /[-+]?(?:\\d+\\.?\\d*|\\.?\\d+)(?:[eE][-+]?\\d+)?/g,\n    reB = new RegExp(reA.source, \"g\");\n\nfunction zero(b) {\n  return function() {\n    return b;\n  };\n}\n\nfunction one(b) {\n  return function(t) {\n    return b(t) + \"\";\n  };\n}\n\nexport default function(a, b) {\n  var bi = reA.lastIndex = reB.lastIndex = 0, // scan index for next number in b\n      am, // current match in a\n      bm, // current match in b\n      bs, // string preceding current number in b, if any\n      i = -1, // index in s\n      s = [], // string constants and placeholders\n      q = []; // number interpolators\n\n  // Coerce inputs to strings.\n  a = a + \"\", b = b + \"\";\n\n  // Interpolate pairs of numbers in a & b.\n  while ((am = reA.exec(a))\n      && (bm = reB.exec(b))) {\n    if ((bs = bm.index) > bi) { // a string precedes the next number in b\n      bs = b.slice(bi, bs);\n      if (s[i]) s[i] += bs; // coalesce with previous string\n      else s[++i] = bs;\n    }\n    if ((am = am[0]) === (bm = bm[0])) { // numbers in a & b match\n      if (s[i]) s[i] += bm; // coalesce with previous string\n      else s[++i] = bm;\n    } else { // interpolate non-matching numbers\n      s[++i] = null;\n      q.push({i: i, x: number(am, bm)});\n    }\n    bi = reB.lastIndex;\n  }\n\n  // Add remains of b.\n  if (bi < b.length) {\n    bs = b.slice(bi);\n    if (s[i]) s[i] += bs; // coalesce with previous string\n    else s[++i] = bs;\n  }\n\n  // Special optimization for only a single match.\n  // Otherwise, interpolate each of the numbers and rejoin the string.\n  return s.length < 2 ? (q[0]\n      ? one(q[0].x)\n      : zero(b))\n      : (b = q.length, function(t) {\n          for (var i = 0, o; i < b; ++i) s[(o = q[i]).i] = o.x(t);\n          return s.join(\"\");\n        });\n}\n","import {color} from \"d3-color\";\nimport rgb from \"./rgb\";\nimport array from \"./array\";\nimport date from \"./date\";\nimport number from \"./number\";\nimport object from \"./object\";\nimport string from \"./string\";\nimport constant from \"./constant\";\n\nexport default function(a, b) {\n  var t = typeof b, c;\n  return b == null || t === \"boolean\" ? constant(b)\n      : (t === \"number\" ? number\n      : t === \"string\" ? ((c = color(b)) ? (b = c, rgb) : string)\n      : b instanceof color ? rgb\n      : b instanceof Date ? date\n      : Array.isArray(b) ? array\n      : typeof b.valueOf !== \"function\" && typeof b.toString !== \"function\" || isNaN(b) ? object\n      : number)(a, b);\n}\n","import decompose, {identity} from \"./decompose\";\n\nvar cssNode,\n    cssRoot,\n    cssView,\n    svgNode;\n\nexport function parseCss(value) {\n  if (value === \"none\") return identity;\n  if (!cssNode) cssNode = document.createElement(\"DIV\"), cssRoot = document.documentElement, cssView = document.defaultView;\n  cssNode.style.transform = value;\n  value = cssView.getComputedStyle(cssRoot.appendChild(cssNode), null).getPropertyValue(\"transform\");\n  cssRoot.removeChild(cssNode);\n  value = value.slice(7, -1).split(\",\");\n  return decompose(+value[0], +value[1], +value[2], +value[3], +value[4], +value[5]);\n}\n\nexport function parseSvg(value) {\n  if (value == null) return identity;\n  if (!svgNode) svgNode = document.createElementNS(\"http://www.w3.org/2000/svg\", \"g\");\n  svgNode.setAttribute(\"transform\", value);\n  if (!(value = svgNode.transform.baseVal.consolidate())) return identity;\n  value = value.matrix;\n  return decompose(value.a, value.b, value.c, value.d, value.e, value.f);\n}\n","export default function(a, b) {\n  var d = new Date;\n  return a = +a, b -= a, function(t) {\n    return d.setTime(a + b * t), d;\n  };\n}\n","import value from \"./value\";\n\nexport default function(a, b) {\n  var nb = b ? b.length : 0,\n      na = a ? Math.min(nb, a.length) : 0,\n      x = new Array(na),\n      c = new Array(nb),\n      i;\n\n  for (i = 0; i < na; ++i) x[i] = value(a[i], b[i]);\n  for (; i < nb; ++i) c[i] = b[i];\n\n  return function(t) {\n    for (i = 0; i < na; ++i) c[i] = x[i](t);\n    return c;\n  };\n}\n","export default function(a, b) {\n  return a = +a, b -= a, function(t) {\n    return Math.round(a + b * t);\n  };\n}\n","var degrees = 180 / Math.PI;\n\nexport var identity = {\n  translateX: 0,\n  translateY: 0,\n  rotate: 0,\n  skewX: 0,\n  scaleX: 1,\n  scaleY: 1\n};\n\nexport default function(a, b, c, d, e, f) {\n  var scaleX, scaleY, skewX;\n  if (scaleX = Math.sqrt(a * a + b * b)) a /= scaleX, b /= scaleX;\n  if (skewX = a * c + b * d) c -= a * skewX, d -= b * skewX;\n  if (scaleY = Math.sqrt(c * c + d * d)) c /= scaleY, d /= scaleY, skewX /= scaleY;\n  if (a * d < b * c) a = -a, b = -b, skewX = -skewX, scaleX = -scaleX;\n  return {\n    translateX: e,\n    translateY: f,\n    rotate: Math.atan2(b, a) * degrees,\n    skewX: Math.atan(skewX) * degrees,\n    scaleX: scaleX,\n    scaleY: scaleY\n  };\n}\n","import number from \"../number\";\nimport {parseCss, parseSvg} from \"./parse\";\n\nfunction interpolateTransform(parse, pxComma, pxParen, degParen) {\n\n  function pop(s) {\n    return s.length ? s.pop() + \" \" : \"\";\n  }\n\n  function translate(xa, ya, xb, yb, s, q) {\n    if (xa !== xb || ya !== yb) {\n      var i = s.push(\"translate(\", null, pxComma, null, pxParen);\n      q.push({i: i - 4, x: number(xa, xb)}, {i: i - 2, x: number(ya, yb)});\n    } else if (xb || yb) {\n      s.push(\"translate(\" + xb + pxComma + yb + pxParen);\n    }\n  }\n\n  function rotate(a, b, s, q) {\n    if (a !== b) {\n      if (a - b > 180) b += 360; else if (b - a > 180) a += 360; // shortest path\n      q.push({i: s.push(pop(s) + \"rotate(\", null, degParen) - 2, x: number(a, b)});\n    } else if (b) {\n      s.push(pop(s) + \"rotate(\" + b + degParen);\n    }\n  }\n\n  function skewX(a, b, s, q) {\n    if (a !== b) {\n      q.push({i: s.push(pop(s) + \"skewX(\", null, degParen) - 2, x: number(a, b)});\n    } else if (b) {\n      s.push(pop(s) + \"skewX(\" + b + degParen);\n    }\n  }\n\n  function scale(xa, ya, xb, yb, s, q) {\n    if (xa !== xb || ya !== yb) {\n      var i = s.push(pop(s) + \"scale(\", null, \",\", null, \")\");\n      q.push({i: i - 4, x: number(xa, xb)}, {i: i - 2, x: number(ya, yb)});\n    } else if (xb !== 1 || yb !== 1) {\n      s.push(pop(s) + \"scale(\" + xb + \",\" + yb + \")\");\n    }\n  }\n\n  return function(a, b) {\n    var s = [], // string constants and placeholders\n        q = []; // number interpolators\n    a = parse(a), b = parse(b);\n    translate(a.translateX, a.translateY, b.translateX, b.translateY, s, q);\n    rotate(a.rotate, b.rotate, s, q);\n    skewX(a.skewX, b.skewX, s, q);\n    scale(a.scaleX, a.scaleY, b.scaleX, b.scaleY, s, q);\n    a = b = null; // gc\n    return function(t) {\n      var i = -1, n = q.length, o;\n      while (++i < n) s[(o = q[i]).i] = o.x(t);\n      return s.join(\"\");\n    };\n  };\n}\n\nexport var interpolateTransformCss = interpolateTransform(parseCss, \"px, \", \"px)\", \"deg)\");\nexport var interpolateTransformSvg = interpolateTransform(parseSvg, \", \", \")\", \")\");\n","var rho = Math.SQRT2,\n    rho2 = 2,\n    rho4 = 4,\n    epsilon2 = 1e-12;\n\nfunction cosh(x) {\n  return ((x = Math.exp(x)) + 1 / x) / 2;\n}\n\nfunction sinh(x) {\n  return ((x = Math.exp(x)) - 1 / x) / 2;\n}\n\nfunction tanh(x) {\n  return ((x = Math.exp(2 * x)) - 1) / (x + 1);\n}\n\n// p0 = [ux0, uy0, w0]\n// p1 = [ux1, uy1, w1]\nexport default function(p0, p1) {\n  var ux0 = p0[0], uy0 = p0[1], w0 = p0[2],\n      ux1 = p1[0], uy1 = p1[1], w1 = p1[2],\n      dx = ux1 - ux0,\n      dy = uy1 - uy0,\n      d2 = dx * dx + dy * dy,\n      i,\n      S;\n\n  // Special case for u0 ≅ u1.\n  if (d2 < epsilon2) {\n    S = Math.log(w1 / w0) / rho;\n    i = function(t) {\n      return [\n        ux0 + t * dx,\n        uy0 + t * dy,\n        w0 * Math.exp(rho * t * S)\n      ];\n    }\n  }\n\n  // General case.\n  else {\n    var d1 = Math.sqrt(d2),\n        b0 = (w1 * w1 - w0 * w0 + rho4 * d2) / (2 * w0 * rho2 * d1),\n        b1 = (w1 * w1 - w0 * w0 - rho4 * d2) / (2 * w1 * rho2 * d1),\n        r0 = Math.log(Math.sqrt(b0 * b0 + 1) - b0),\n        r1 = Math.log(Math.sqrt(b1 * b1 + 1) - b1);\n    S = (r1 - r0) / rho;\n    i = function(t) {\n      var s = t * S,\n          coshr0 = cosh(r0),\n          u = w0 / (rho2 * d1) * (coshr0 * tanh(rho * s + r0) - sinh(r0));\n      return [\n        ux0 + u * dx,\n        uy0 + u * dy,\n        w0 * coshr0 / cosh(rho * s + r0)\n      ];\n    }\n  }\n\n  i.duration = S * 1000;\n\n  return i;\n}\n","import {hsl as colorHsl} from \"d3-color\";\nimport color, {hue} from \"./color\";\n\nfunction hsl(hue) {\n  return function(start, end) {\n    var h = hue((start = colorHsl(start)).h, (end = colorHsl(end)).h),\n        s = color(start.s, end.s),\n        l = color(start.l, end.l),\n        opacity = color(start.opacity, end.opacity);\n    return function(t) {\n      start.h = h(t);\n      start.s = s(t);\n      start.l = l(t);\n      start.opacity = opacity(t);\n      return start + \"\";\n    };\n  }\n}\n\nexport default hsl(hue);\nexport var hslLong = hsl(color);\n","import {hcl as colorHcl} from \"d3-color\";\nimport color, {hue} from \"./color\";\n\nfunction hcl(hue) {\n  return function(start, end) {\n    var h = hue((start = colorHcl(start)).h, (end = colorHcl(end)).h),\n        c = color(start.c, end.c),\n        l = color(start.l, end.l),\n        opacity = color(start.opacity, end.opacity);\n    return function(t) {\n      start.h = h(t);\n      start.c = c(t);\n      start.l = l(t);\n      start.opacity = opacity(t);\n      return start + \"\";\n    };\n  }\n}\n\nexport default hcl(hue);\nexport var hclLong = hcl(color);\n","import {cubehelix as colorCubehelix} from \"d3-color\";\nimport color, {hue} from \"./color\";\n\nfunction cubehelix(hue) {\n  return (function cubehelixGamma(y) {\n    y = +y;\n\n    function cubehelix(start, end) {\n      var h = hue((start = colorCubehelix(start)).h, (end = colorCubehelix(end)).h),\n          s = color(start.s, end.s),\n          l = color(start.l, end.l),\n          opacity = color(start.opacity, end.opacity);\n      return function(t) {\n        start.h = h(t);\n        start.s = s(t);\n        start.l = l(Math.pow(t, y));\n        start.opacity = opacity(t);\n        return start + \"\";\n      };\n    }\n\n    cubehelix.gamma = cubehelixGamma;\n\n    return cubehelix;\n  })(1);\n}\n\nexport default cubehelix(hue);\nexport var cubehelixLong = cubehelix(color);\n","export default function piecewise(interpolate, values) {\n  var i = 0, n = values.length - 1, v = values[0], I = new Array(n < 0 ? 0 : n);\n  while (i < n) I[i] = interpolate(v, v = values[++i]);\n  return function(t) {\n    var i = Math.max(0, Math.min(n - 1, Math.floor(t *= n)));\n    return I[i](t - i);\n  };\n}\n","export default function(interpolator, n) {\n  var samples = new Array(n);\n  for (var i = 0; i < n; ++i) samples[i] = interpolator(i / (n - 1));\n  return samples;\n}\n","export default function(x) {\n  return function() {\n    return x;\n  };\n}\n","export default function(x) {\n  return +x;\n}\n","import {bisect} from \"d3-array\";\nimport {interpolate as interpolateValue, interpolateRound} from \"d3-interpolate\";\nimport {map, slice} from \"./array\";\nimport constant from \"./constant\";\nimport number from \"./number\";\n\nvar unit = [0, 1];\n\nexport function deinterpolateLinear(a, b) {\n  return (b -= (a = +a))\n      ? function(x) { return (x - a) / b; }\n      : constant(b);\n}\n\nfunction deinterpolateClamp(deinterpolate) {\n  return function(a, b) {\n    var d = deinterpolate(a = +a, b = +b);\n    return function(x) { return x <= a ? 0 : x >= b ? 1 : d(x); };\n  };\n}\n\nfunction reinterpolateClamp(reinterpolate) {\n  return function(a, b) {\n    var r = reinterpolate(a = +a, b = +b);\n    return function(t) { return t <= 0 ? a : t >= 1 ? b : r(t); };\n  };\n}\n\nfunction bimap(domain, range, deinterpolate, reinterpolate) {\n  var d0 = domain[0], d1 = domain[1], r0 = range[0], r1 = range[1];\n  if (d1 < d0) d0 = deinterpolate(d1, d0), r0 = reinterpolate(r1, r0);\n  else d0 = deinterpolate(d0, d1), r0 = reinterpolate(r0, r1);\n  return function(x) { return r0(d0(x)); };\n}\n\nfunction polymap(domain, range, deinterpolate, reinterpolate) {\n  var j = Math.min(domain.length, range.length) - 1,\n      d = new Array(j),\n      r = new Array(j),\n      i = -1;\n\n  // Reverse descending domains.\n  if (domain[j] < domain[0]) {\n    domain = domain.slice().reverse();\n    range = range.slice().reverse();\n  }\n\n  while (++i < j) {\n    d[i] = deinterpolate(domain[i], domain[i + 1]);\n    r[i] = reinterpolate(range[i], range[i + 1]);\n  }\n\n  return function(x) {\n    var i = bisect(domain, x, 1, j) - 1;\n    return r[i](d[i](x));\n  };\n}\n\nexport function copy(source, target) {\n  return target\n      .domain(source.domain())\n      .range(source.range())\n      .interpolate(source.interpolate())\n      .clamp(source.clamp());\n}\n\n// deinterpolate(a, b)(x) takes a domain value x in [a,b] and returns the corresponding parameter t in [0,1].\n// reinterpolate(a, b)(t) takes a parameter t in [0,1] and returns the corresponding domain value x in [a,b].\nexport default function continuous(deinterpolate, reinterpolate) {\n  var domain = unit,\n      range = unit,\n      interpolate = interpolateValue,\n      clamp = false,\n      piecewise,\n      output,\n      input;\n\n  function rescale() {\n    piecewise = Math.min(domain.length, range.length) > 2 ? polymap : bimap;\n    output = input = null;\n    return scale;\n  }\n\n  function scale(x) {\n    return (output || (output = piecewise(domain, range, clamp ? deinterpolateClamp(deinterpolate) : deinterpolate, interpolate)))(+x);\n  }\n\n  scale.invert = function(y) {\n    return (input || (input = piecewise(range, domain, deinterpolateLinear, clamp ? reinterpolateClamp(reinterpolate) : reinterpolate)))(+y);\n  };\n\n  scale.domain = function(_) {\n    return arguments.length ? (domain = map.call(_, number), rescale()) : domain.slice();\n  };\n\n  scale.range = function(_) {\n    return arguments.length ? (range = slice.call(_), rescale()) : range.slice();\n  };\n\n  scale.rangeRound = function(_) {\n    return range = slice.call(_), interpolate = interpolateRound, rescale();\n  };\n\n  scale.clamp = function(_) {\n    return arguments.length ? (clamp = !!_, rescale()) : clamp;\n  };\n\n  scale.interpolate = function(_) {\n    return arguments.length ? (interpolate = _, rescale()) : interpolate;\n  };\n\n  return rescale();\n}\n","// Computes the decimal coefficient and exponent of the specified number x with\n// significant digits p, where x is positive and p is in [1, 21] or undefined.\n// For example, formatDecimal(1.23) returns [\"123\", 0].\nexport default function(x, p) {\n  if ((i = (x = p ? x.toExponential(p - 1) : x.toExponential()).indexOf(\"e\")) < 0) return null; // NaN, ±Infinity\n  var i, coefficient = x.slice(0, i);\n\n  // The string returned by toExponential either has the form \\d\\.\\d+e[-+]\\d+\n  // (e.g., 1.2e+3) or the form \\de[-+]\\d+ (e.g., 1e+3).\n  return [\n    coefficient.length > 1 ? coefficient[0] + coefficient.slice(2) : coefficient,\n    +x.slice(i + 1)\n  ];\n}\n","import formatDecimal from \"./formatDecimal\";\n\nexport default function(x) {\n  return x = formatDecimal(Math.abs(x)), x ? x[1] : NaN;\n}\n","// [[fill]align][sign][symbol][0][width][,][.precision][~][type]\nvar re = /^(?:(.)?([<>=^]))?([+\\-( ])?([$#])?(0)?(\\d+)?(,)?(\\.\\d+)?(~)?([a-z%])?$/i;\n\nexport default function formatSpecifier(specifier) {\n  return new FormatSpecifier(specifier);\n}\n\nformatSpecifier.prototype = FormatSpecifier.prototype; // instanceof\n\nfunction FormatSpecifier(specifier) {\n  if (!(match = re.exec(specifier))) throw new Error(\"invalid format: \" + specifier);\n  var match;\n  this.fill = match[1] || \" \";\n  this.align = match[2] || \">\";\n  this.sign = match[3] || \"-\";\n  this.symbol = match[4] || \"\";\n  this.zero = !!match[5];\n  this.width = match[6] && +match[6];\n  this.comma = !!match[7];\n  this.precision = match[8] && +match[8].slice(1);\n  this.trim = !!match[9];\n  this.type = match[10] || \"\";\n}\n\nFormatSpecifier.prototype.toString = function() {\n  return this.fill\n      + this.align\n      + this.sign\n      + this.symbol\n      + (this.zero ? \"0\" : \"\")\n      + (this.width == null ? \"\" : Math.max(1, this.width | 0))\n      + (this.comma ? \",\" : \"\")\n      + (this.precision == null ? \"\" : \".\" + Math.max(0, this.precision | 0))\n      + (this.trim ? \"~\" : \"\")\n      + this.type;\n};\n","// Trims insignificant zeros, e.g., replaces 1.2000k with 1.2k.\nexport default function(s) {\n  out: for (var n = s.length, i = 1, i0 = -1, i1; i < n; ++i) {\n    switch (s[i]) {\n      case \".\": i0 = i1 = i; break;\n      case \"0\": if (i0 === 0) i0 = i; i1 = i; break;\n      default: if (i0 > 0) { if (!+s[i]) break out; i0 = 0; } break;\n    }\n  }\n  return i0 > 0 ? s.slice(0, i0) + s.slice(i1 + 1) : s;\n}\n","import formatDecimal from \"./formatDecimal\";\n\nexport var prefixExponent;\n\nexport default function(x, p) {\n  var d = formatDecimal(x, p);\n  if (!d) return x + \"\";\n  var coefficient = d[0],\n      exponent = d[1],\n      i = exponent - (prefixExponent = Math.max(-8, Math.min(8, Math.floor(exponent / 3))) * 3) + 1,\n      n = coefficient.length;\n  return i === n ? coefficient\n      : i > n ? coefficient + new Array(i - n + 1).join(\"0\")\n      : i > 0 ? coefficient.slice(0, i) + \".\" + coefficient.slice(i)\n      : \"0.\" + new Array(1 - i).join(\"0\") + formatDecimal(x, Math.max(0, p + i - 1))[0]; // less than 1y!\n}\n","import formatLocale from \"./locale\";\n\nvar locale;\nexport var format;\nexport var formatPrefix;\n\ndefaultLocale({\n  decimal: \".\",\n  thousands: \",\",\n  grouping: [3],\n  currency: [\"$\", \"\"]\n});\n\nexport default function defaultLocale(definition) {\n  locale = formatLocale(definition);\n  format = locale.format;\n  formatPrefix = locale.formatPrefix;\n  return locale;\n}\n","import formatDecimal from \"./formatDecimal\";\n\nexport default function(x, p) {\n  var d = formatDecimal(x, p);\n  if (!d) return x + \"\";\n  var coefficient = d[0],\n      exponent = d[1];\n  return exponent < 0 ? \"0.\" + new Array(-exponent).join(\"0\") + coefficient\n      : coefficient.length > exponent + 1 ? coefficient.slice(0, exponent + 1) + \".\" + coefficient.slice(exponent + 1)\n      : coefficient + new Array(exponent - coefficient.length + 2).join(\"0\");\n}\n","import formatPrefixAuto from \"./formatPrefixAuto\";\nimport formatRounded from \"./formatRounded\";\n\nexport default {\n  \"%\": function(x, p) { return (x * 100).toFixed(p); },\n  \"b\": function(x) { return Math.round(x).toString(2); },\n  \"c\": function(x) { return x + \"\"; },\n  \"d\": function(x) { return Math.round(x).toString(10); },\n  \"e\": function(x, p) { return x.toExponential(p); },\n  \"f\": function(x, p) { return x.toFixed(p); },\n  \"g\": function(x, p) { return x.toPrecision(p); },\n  \"o\": function(x) { return Math.round(x).toString(8); },\n  \"p\": function(x, p) { return formatRounded(x * 100, p); },\n  \"r\": formatRounded,\n  \"s\": formatPrefixAuto,\n  \"X\": function(x) { return Math.round(x).toString(16).toUpperCase(); },\n  \"x\": function(x) { return Math.round(x).toString(16); }\n};\n","export default function(x) {\n  return x;\n}\n","import exponent from \"./exponent\";\nimport formatGroup from \"./formatGroup\";\nimport formatNumerals from \"./formatNumerals\";\nimport formatSpecifier from \"./formatSpecifier\";\nimport formatTrim from \"./formatTrim\";\nimport formatTypes from \"./formatTypes\";\nimport {prefixExponent} from \"./formatPrefixAuto\";\nimport identity from \"./identity\";\n\nvar prefixes = [\"y\",\"z\",\"a\",\"f\",\"p\",\"n\",\"µ\",\"m\",\"\",\"k\",\"M\",\"G\",\"T\",\"P\",\"E\",\"Z\",\"Y\"];\n\nexport default function(locale) {\n  var group = locale.grouping && locale.thousands ? formatGroup(locale.grouping, locale.thousands) : identity,\n      currency = locale.currency,\n      decimal = locale.decimal,\n      numerals = locale.numerals ? formatNumerals(locale.numerals) : identity,\n      percent = locale.percent || \"%\";\n\n  function newFormat(specifier) {\n    specifier = formatSpecifier(specifier);\n\n    var fill = specifier.fill,\n        align = specifier.align,\n        sign = specifier.sign,\n        symbol = specifier.symbol,\n        zero = specifier.zero,\n        width = specifier.width,\n        comma = specifier.comma,\n        precision = specifier.precision,\n        trim = specifier.trim,\n        type = specifier.type;\n\n    // The \"n\" type is an alias for \",g\".\n    if (type === \"n\") comma = true, type = \"g\";\n\n    // The \"\" type, and any invalid type, is an alias for \".12~g\".\n    else if (!formatTypes[type]) precision == null && (precision = 12), trim = true, type = \"g\";\n\n    // If zero fill is specified, padding goes after sign and before digits.\n    if (zero || (fill === \"0\" && align === \"=\")) zero = true, fill = \"0\", align = \"=\";\n\n    // Compute the prefix and suffix.\n    // For SI-prefix, the suffix is lazily computed.\n    var prefix = symbol === \"$\" ? currency[0] : symbol === \"#\" && /[boxX]/.test(type) ? \"0\" + type.toLowerCase() : \"\",\n        suffix = symbol === \"$\" ? currency[1] : /[%p]/.test(type) ? percent : \"\";\n\n    // What format function should we use?\n    // Is this an integer type?\n    // Can this type generate exponential notation?\n    var formatType = formatTypes[type],\n        maybeSuffix = /[defgprs%]/.test(type);\n\n    // Set the default precision if not specified,\n    // or clamp the specified precision to the supported range.\n    // For significant precision, it must be in [1, 21].\n    // For fixed precision, it must be in [0, 20].\n    precision = precision == null ? 6\n        : /[gprs]/.test(type) ? Math.max(1, Math.min(21, precision))\n        : Math.max(0, Math.min(20, precision));\n\n    function format(value) {\n      var valuePrefix = prefix,\n          valueSuffix = suffix,\n          i, n, c;\n\n      if (type === \"c\") {\n        valueSuffix = formatType(value) + valueSuffix;\n        value = \"\";\n      } else {\n        value = +value;\n\n        // Perform the initial formatting.\n        var valueNegative = value < 0;\n        value = formatType(Math.abs(value), precision);\n\n        // Trim insignificant zeros.\n        if (trim) value = formatTrim(value);\n\n        // If a negative value rounds to zero during formatting, treat as positive.\n        if (valueNegative && +value === 0) valueNegative = false;\n\n        // Compute the prefix and suffix.\n        valuePrefix = (valueNegative ? (sign === \"(\" ? sign : \"-\") : sign === \"-\" || sign === \"(\" ? \"\" : sign) + valuePrefix;\n        valueSuffix = (type === \"s\" ? prefixes[8 + prefixExponent / 3] : \"\") + valueSuffix + (valueNegative && sign === \"(\" ? \")\" : \"\");\n\n        // Break the formatted value into the integer “value” part that can be\n        // grouped, and fractional or exponential “suffix” part that is not.\n        if (maybeSuffix) {\n          i = -1, n = value.length;\n          while (++i < n) {\n            if (c = value.charCodeAt(i), 48 > c || c > 57) {\n              valueSuffix = (c === 46 ? decimal + value.slice(i + 1) : value.slice(i)) + valueSuffix;\n              value = value.slice(0, i);\n              break;\n            }\n          }\n        }\n      }\n\n      // If the fill character is not \"0\", grouping is applied before padding.\n      if (comma && !zero) value = group(value, Infinity);\n\n      // Compute the padding.\n      var length = valuePrefix.length + value.length + valueSuffix.length,\n          padding = length < width ? new Array(width - length + 1).join(fill) : \"\";\n\n      // If the fill character is \"0\", grouping is applied after padding.\n      if (comma && zero) value = group(padding + value, padding.length ? width - valueSuffix.length : Infinity), padding = \"\";\n\n      // Reconstruct the final output based on the desired alignment.\n      switch (align) {\n        case \"<\": value = valuePrefix + value + valueSuffix + padding; break;\n        case \"=\": value = valuePrefix + padding + value + valueSuffix; break;\n        case \"^\": value = padding.slice(0, length = padding.length >> 1) + valuePrefix + value + valueSuffix + padding.slice(length); break;\n        default: value = padding + valuePrefix + value + valueSuffix; break;\n      }\n\n      return numerals(value);\n    }\n\n    format.toString = function() {\n      return specifier + \"\";\n    };\n\n    return format;\n  }\n\n  function formatPrefix(specifier, value) {\n    var f = newFormat((specifier = formatSpecifier(specifier), specifier.type = \"f\", specifier)),\n        e = Math.max(-8, Math.min(8, Math.floor(exponent(value) / 3))) * 3,\n        k = Math.pow(10, -e),\n        prefix = prefixes[8 + e / 3];\n    return function(value) {\n      return f(k * value) + prefix;\n    };\n  }\n\n  return {\n    format: newFormat,\n    formatPrefix: formatPrefix\n  };\n}\n","export default function(grouping, thousands) {\n  return function(value, width) {\n    var i = value.length,\n        t = [],\n        j = 0,\n        g = grouping[0],\n        length = 0;\n\n    while (i > 0 && g > 0) {\n      if (length + g + 1 > width) g = Math.max(1, width - length);\n      t.push(value.substring(i -= g, i + g));\n      if ((length += g + 1) > width) break;\n      g = grouping[j = (j + 1) % grouping.length];\n    }\n\n    return t.reverse().join(thousands);\n  };\n}\n","export default function(numerals) {\n  return function(value) {\n    return value.replace(/[0-9]/g, function(i) {\n      return numerals[+i];\n    });\n  };\n}\n","import exponent from \"./exponent\";\n\nexport default function(step) {\n  return Math.max(0, -exponent(Math.abs(step)));\n}\n","import {tickStep} from \"d3-array\";\nimport {format, formatPrefix, formatSpecifier, precisionFixed, precisionPrefix, precisionRound} from \"d3-format\";\n\nexport default function(domain, count, specifier) {\n  var start = domain[0],\n      stop = domain[domain.length - 1],\n      step = tickStep(start, stop, count == null ? 10 : count),\n      precision;\n  specifier = formatSpecifier(specifier == null ? \",f\" : specifier);\n  switch (specifier.type) {\n    case \"s\": {\n      var value = Math.max(Math.abs(start), Math.abs(stop));\n      if (specifier.precision == null && !isNaN(precision = precisionPrefix(step, value))) specifier.precision = precision;\n      return formatPrefix(specifier, value);\n    }\n    case \"\":\n    case \"e\":\n    case \"g\":\n    case \"p\":\n    case \"r\": {\n      if (specifier.precision == null && !isNaN(precision = precisionRound(step, Math.max(Math.abs(start), Math.abs(stop))))) specifier.precision = precision - (specifier.type === \"e\");\n      break;\n    }\n    case \"f\":\n    case \"%\": {\n      if (specifier.precision == null && !isNaN(precision = precisionFixed(step))) specifier.precision = precision - (specifier.type === \"%\") * 2;\n      break;\n    }\n  }\n  return format(specifier);\n}\n","import exponent from \"./exponent\";\n\nexport default function(step, value) {\n  return Math.max(0, Math.max(-8, Math.min(8, Math.floor(exponent(value) / 3))) * 3 - exponent(Math.abs(step)));\n}\n","import exponent from \"./exponent\";\n\nexport default function(step, max) {\n  step = Math.abs(step), max = Math.abs(max) - step;\n  return Math.max(0, exponent(max) - exponent(step)) + 1;\n}\n","import {ticks, tickIncrement} from \"d3-array\";\nimport {interpolateNumber as reinterpolate} from \"d3-interpolate\";\nimport {default as continuous, copy, deinterpolateLinear as deinterpolate} from \"./continuous\";\nimport tickFormat from \"./tickFormat\";\n\nexport function linearish(scale) {\n  var domain = scale.domain;\n\n  scale.ticks = function(count) {\n    var d = domain();\n    return ticks(d[0], d[d.length - 1], count == null ? 10 : count);\n  };\n\n  scale.tickFormat = function(count, specifier) {\n    return tickFormat(domain(), count, specifier);\n  };\n\n  scale.nice = function(count) {\n    if (count == null) count = 10;\n\n    var d = domain(),\n        i0 = 0,\n        i1 = d.length - 1,\n        start = d[i0],\n        stop = d[i1],\n        step;\n\n    if (stop < start) {\n      step = start, start = stop, stop = step;\n      step = i0, i0 = i1, i1 = step;\n    }\n\n    step = tickIncrement(start, stop, count);\n\n    if (step > 0) {\n      start = Math.floor(start / step) * step;\n      stop = Math.ceil(stop / step) * step;\n      step = tickIncrement(start, stop, count);\n    } else if (step < 0) {\n      start = Math.ceil(start * step) / step;\n      stop = Math.floor(stop * step) / step;\n      step = tickIncrement(start, stop, count);\n    }\n\n    if (step > 0) {\n      d[i0] = Math.floor(start / step) * step;\n      d[i1] = Math.ceil(stop / step) * step;\n      domain(d);\n    } else if (step < 0) {\n      d[i0] = Math.ceil(start * step) / step;\n      d[i1] = Math.floor(stop * step) / step;\n      domain(d);\n    }\n\n    return scale;\n  };\n\n  return scale;\n}\n\nexport default function linear() {\n  var scale = continuous(deinterpolate, reinterpolate);\n\n  scale.copy = function() {\n    return copy(scale, linear());\n  };\n\n  return linearish(scale);\n}\n","import {map} from \"./array\";\nimport {linearish} from \"./linear\";\nimport number from \"./number\";\n\nexport default function identity() {\n  var domain = [0, 1];\n\n  function scale(x) {\n    return +x;\n  }\n\n  scale.invert = scale;\n\n  scale.domain = scale.range = function(_) {\n    return arguments.length ? (domain = map.call(_, number), scale) : domain.slice();\n  };\n\n  scale.copy = function() {\n    return identity().domain(domain);\n  };\n\n  return linearish(scale);\n}\n","export default function(domain, interval) {\n  domain = domain.slice();\n\n  var i0 = 0,\n      i1 = domain.length - 1,\n      x0 = domain[i0],\n      x1 = domain[i1],\n      t;\n\n  if (x1 < x0) {\n    t = i0, i0 = i1, i1 = t;\n    t = x0, x0 = x1, x1 = t;\n  }\n\n  domain[i0] = interval.floor(x0);\n  domain[i1] = interval.ceil(x1);\n  return domain;\n}\n","import {ticks} from \"d3-array\";\nimport {format} from \"d3-format\";\nimport constant from \"./constant\";\nimport nice from \"./nice\";\nimport {default as continuous, copy} from \"./continuous\";\n\nfunction deinterpolate(a, b) {\n  return (b = Math.log(b / a))\n      ? function(x) { return Math.log(x / a) / b; }\n      : constant(b);\n}\n\nfunction reinterpolate(a, b) {\n  return a < 0\n      ? function(t) { return -Math.pow(-b, t) * Math.pow(-a, 1 - t); }\n      : function(t) { return Math.pow(b, t) * Math.pow(a, 1 - t); };\n}\n\nfunction pow10(x) {\n  return isFinite(x) ? +(\"1e\" + x) : x < 0 ? 0 : x;\n}\n\nfunction powp(base) {\n  return base === 10 ? pow10\n      : base === Math.E ? Math.exp\n      : function(x) { return Math.pow(base, x); };\n}\n\nfunction logp(base) {\n  return base === Math.E ? Math.log\n      : base === 10 && Math.log10\n      || base === 2 && Math.log2\n      || (base = Math.log(base), function(x) { return Math.log(x) / base; });\n}\n\nfunction reflect(f) {\n  return function(x) {\n    return -f(-x);\n  };\n}\n\nexport default function log() {\n  var scale = continuous(deinterpolate, reinterpolate).domain([1, 10]),\n      domain = scale.domain,\n      base = 10,\n      logs = logp(10),\n      pows = powp(10);\n\n  function rescale() {\n    logs = logp(base), pows = powp(base);\n    if (domain()[0] < 0) logs = reflect(logs), pows = reflect(pows);\n    return scale;\n  }\n\n  scale.base = function(_) {\n    return arguments.length ? (base = +_, rescale()) : base;\n  };\n\n  scale.domain = function(_) {\n    return arguments.length ? (domain(_), rescale()) : domain();\n  };\n\n  scale.ticks = function(count) {\n    var d = domain(),\n        u = d[0],\n        v = d[d.length - 1],\n        r;\n\n    if (r = v < u) i = u, u = v, v = i;\n\n    var i = logs(u),\n        j = logs(v),\n        p,\n        k,\n        t,\n        n = count == null ? 10 : +count,\n        z = [];\n\n    if (!(base % 1) && j - i < n) {\n      i = Math.round(i) - 1, j = Math.round(j) + 1;\n      if (u > 0) for (; i < j; ++i) {\n        for (k = 1, p = pows(i); k < base; ++k) {\n          t = p * k;\n          if (t < u) continue;\n          if (t > v) break;\n          z.push(t);\n        }\n      } else for (; i < j; ++i) {\n        for (k = base - 1, p = pows(i); k >= 1; --k) {\n          t = p * k;\n          if (t < u) continue;\n          if (t > v) break;\n          z.push(t);\n        }\n      }\n    } else {\n      z = ticks(i, j, Math.min(j - i, n)).map(pows);\n    }\n\n    return r ? z.reverse() : z;\n  };\n\n  scale.tickFormat = function(count, specifier) {\n    if (specifier == null) specifier = base === 10 ? \".0e\" : \",\";\n    if (typeof specifier !== \"function\") specifier = format(specifier);\n    if (count === Infinity) return specifier;\n    if (count == null) count = 10;\n    var k = Math.max(1, base * count / scale.ticks().length); // TODO fast estimate?\n    return function(d) {\n      var i = d / pows(Math.round(logs(d)));\n      if (i * base < base - 0.5) i *= base;\n      return i <= k ? specifier(d) : \"\";\n    };\n  };\n\n  scale.nice = function() {\n    return domain(nice(domain(), {\n      floor: function(x) { return pows(Math.floor(logs(x))); },\n      ceil: function(x) { return pows(Math.ceil(logs(x))); }\n    }));\n  };\n\n  scale.copy = function() {\n    return copy(scale, log().base(base));\n  };\n\n  return scale;\n}\n","import constant from \"./constant\";\nimport {linearish} from \"./linear\";\nimport {default as continuous, copy} from \"./continuous\";\n\nfunction raise(x, exponent) {\n  return x < 0 ? -Math.pow(-x, exponent) : Math.pow(x, exponent);\n}\n\nexport default function pow() {\n  var exponent = 1,\n      scale = continuous(deinterpolate, reinterpolate),\n      domain = scale.domain;\n\n  function deinterpolate(a, b) {\n    return (b = raise(b, exponent) - (a = raise(a, exponent)))\n        ? function(x) { return (raise(x, exponent) - a) / b; }\n        : constant(b);\n  }\n\n  function reinterpolate(a, b) {\n    b = raise(b, exponent) - (a = raise(a, exponent));\n    return function(t) { return raise(a + b * t, 1 / exponent); };\n  }\n\n  scale.exponent = function(_) {\n    return arguments.length ? (exponent = +_, domain(domain())) : exponent;\n  };\n\n  scale.copy = function() {\n    return copy(scale, pow().exponent(exponent));\n  };\n\n  return linearish(scale);\n}\n\nexport function sqrt() {\n  return pow().exponent(0.5);\n}\n","import {ascending, bisect, quantile as threshold} from \"d3-array\";\nimport {slice} from \"./array\";\n\nexport default function quantile() {\n  var domain = [],\n      range = [],\n      thresholds = [];\n\n  function rescale() {\n    var i = 0, n = Math.max(1, range.length);\n    thresholds = new Array(n - 1);\n    while (++i < n) thresholds[i - 1] = threshold(domain, i / n);\n    return scale;\n  }\n\n  function scale(x) {\n    if (!isNaN(x = +x)) return range[bisect(thresholds, x)];\n  }\n\n  scale.invertExtent = function(y) {\n    var i = range.indexOf(y);\n    return i < 0 ? [NaN, NaN] : [\n      i > 0 ? thresholds[i - 1] : domain[0],\n      i < thresholds.length ? thresholds[i] : domain[domain.length - 1]\n    ];\n  };\n\n  scale.domain = function(_) {\n    if (!arguments.length) return domain.slice();\n    domain = [];\n    for (var i = 0, n = _.length, d; i < n; ++i) if (d = _[i], d != null && !isNaN(d = +d)) domain.push(d);\n    domain.sort(ascending);\n    return rescale();\n  };\n\n  scale.range = function(_) {\n    return arguments.length ? (range = slice.call(_), rescale()) : range.slice();\n  };\n\n  scale.quantiles = function() {\n    return thresholds.slice();\n  };\n\n  scale.copy = function() {\n    return quantile()\n        .domain(domain)\n        .range(range);\n  };\n\n  return scale;\n}\n","import {bisect} from \"d3-array\";\nimport {slice} from \"./array\";\nimport {linearish} from \"./linear\";\n\nexport default function quantize() {\n  var x0 = 0,\n      x1 = 1,\n      n = 1,\n      domain = [0.5],\n      range = [0, 1];\n\n  function scale(x) {\n    if (x <= x) return range[bisect(domain, x, 0, n)];\n  }\n\n  function rescale() {\n    var i = -1;\n    domain = new Array(n);\n    while (++i < n) domain[i] = ((i + 1) * x1 - (i - n) * x0) / (n + 1);\n    return scale;\n  }\n\n  scale.domain = function(_) {\n    return arguments.length ? (x0 = +_[0], x1 = +_[1], rescale()) : [x0, x1];\n  };\n\n  scale.range = function(_) {\n    return arguments.length ? (n = (range = slice.call(_)).length - 1, rescale()) : range.slice();\n  };\n\n  scale.invertExtent = function(y) {\n    var i = range.indexOf(y);\n    return i < 0 ? [NaN, NaN]\n        : i < 1 ? [x0, domain[0]]\n        : i >= n ? [domain[n - 1], x1]\n        : [domain[i - 1], domain[i]];\n  };\n\n  scale.copy = function() {\n    return quantize()\n        .domain([x0, x1])\n        .range(range);\n  };\n\n  return linearish(scale);\n}\n","import {bisect} from \"d3-array\";\nimport {slice} from \"./array\";\n\nexport default function threshold() {\n  var domain = [0.5],\n      range = [0, 1],\n      n = 1;\n\n  function scale(x) {\n    if (x <= x) return range[bisect(domain, x, 0, n)];\n  }\n\n  scale.domain = function(_) {\n    return arguments.length ? (domain = slice.call(_), n = Math.min(domain.length, range.length - 1), scale) : domain.slice();\n  };\n\n  scale.range = function(_) {\n    return arguments.length ? (range = slice.call(_), n = Math.min(domain.length, range.length - 1), scale) : range.slice();\n  };\n\n  scale.invertExtent = function(y) {\n    var i = range.indexOf(y);\n    return [domain[i - 1], domain[i]];\n  };\n\n  scale.copy = function() {\n    return threshold()\n        .domain(domain)\n        .range(range);\n  };\n\n  return scale;\n}\n","var t0 = new Date,\n    t1 = new Date;\n\nexport default function newInterval(floori, offseti, count, field) {\n\n  function interval(date) {\n    return floori(date = new Date(+date)), date;\n  }\n\n  interval.floor = interval;\n\n  interval.ceil = function(date) {\n    return floori(date = new Date(date - 1)), offseti(date, 1), floori(date), date;\n  };\n\n  interval.round = function(date) {\n    var d0 = interval(date),\n        d1 = interval.ceil(date);\n    return date - d0 < d1 - date ? d0 : d1;\n  };\n\n  interval.offset = function(date, step) {\n    return offseti(date = new Date(+date), step == null ? 1 : Math.floor(step)), date;\n  };\n\n  interval.range = function(start, stop, step) {\n    var range = [], previous;\n    start = interval.ceil(start);\n    step = step == null ? 1 : Math.floor(step);\n    if (!(start < stop) || !(step > 0)) return range; // also handles Invalid Date\n    do range.push(previous = new Date(+start)), offseti(start, step), floori(start);\n    while (previous < start && start < stop);\n    return range;\n  };\n\n  interval.filter = function(test) {\n    return newInterval(function(date) {\n      if (date >= date) while (floori(date), !test(date)) date.setTime(date - 1);\n    }, function(date, step) {\n      if (date >= date) {\n        if (step < 0) while (++step <= 0) {\n          while (offseti(date, -1), !test(date)) {} // eslint-disable-line no-empty\n        } else while (--step >= 0) {\n          while (offseti(date, +1), !test(date)) {} // eslint-disable-line no-empty\n        }\n      }\n    });\n  };\n\n  if (count) {\n    interval.count = function(start, end) {\n      t0.setTime(+start), t1.setTime(+end);\n      floori(t0), floori(t1);\n      return Math.floor(count(t0, t1));\n    };\n\n    interval.every = function(step) {\n      step = Math.floor(step);\n      return !isFinite(step) || !(step > 0) ? null\n          : !(step > 1) ? interval\n          : interval.filter(field\n              ? function(d) { return field(d) % step === 0; }\n              : function(d) { return interval.count(0, d) % step === 0; });\n    };\n  }\n\n  return interval;\n}\n","import interval from \"./interval\";\n\nvar millisecond = interval(function() {\n  // noop\n}, function(date, step) {\n  date.setTime(+date + step);\n}, function(start, end) {\n  return end - start;\n});\n\n// An optimized implementation for this simple case.\nmillisecond.every = function(k) {\n  k = Math.floor(k);\n  if (!isFinite(k) || !(k > 0)) return null;\n  if (!(k > 1)) return millisecond;\n  return interval(function(date) {\n    date.setTime(Math.floor(date / k) * k);\n  }, function(date, step) {\n    date.setTime(+date + step * k);\n  }, function(start, end) {\n    return (end - start) / k;\n  });\n};\n\nexport default millisecond;\nexport var milliseconds = millisecond.range;\n","export var durationSecond = 1e3;\nexport var durationMinute = 6e4;\nexport var durationHour = 36e5;\nexport var durationDay = 864e5;\nexport var durationWeek = 6048e5;\n","import interval from \"./interval\";\nimport {durationSecond} from \"./duration\";\n\nvar second = interval(function(date) {\n  date.setTime(date - date.getMilliseconds());\n}, function(date, step) {\n  date.setTime(+date + step * durationSecond);\n}, function(start, end) {\n  return (end - start) / durationSecond;\n}, function(date) {\n  return date.getUTCSeconds();\n});\n\nexport default second;\nexport var seconds = second.range;\n","import interval from \"./interval\";\nimport {durationMinute, durationSecond} from \"./duration\";\n\nvar minute = interval(function(date) {\n  date.setTime(date - date.getMilliseconds() - date.getSeconds() * durationSecond);\n}, function(date, step) {\n  date.setTime(+date + step * durationMinute);\n}, function(start, end) {\n  return (end - start) / durationMinute;\n}, function(date) {\n  return date.getMinutes();\n});\n\nexport default minute;\nexport var minutes = minute.range;\n","import interval from \"./interval\";\nimport {durationHour, durationMinute, durationSecond} from \"./duration\";\n\nvar hour = interval(function(date) {\n  date.setTime(date - date.getMilliseconds() - date.getSeconds() * durationSecond - date.getMinutes() * durationMinute);\n}, function(date, step) {\n  date.setTime(+date + step * durationHour);\n}, function(start, end) {\n  return (end - start) / durationHour;\n}, function(date) {\n  return date.getHours();\n});\n\nexport default hour;\nexport var hours = hour.range;\n","import interval from \"./interval\";\nimport {durationDay, durationMinute} from \"./duration\";\n\nvar day = interval(function(date) {\n  date.setHours(0, 0, 0, 0);\n}, function(date, step) {\n  date.setDate(date.getDate() + step);\n}, function(start, end) {\n  return (end - start - (end.getTimezoneOffset() - start.getTimezoneOffset()) * durationMinute) / durationDay;\n}, function(date) {\n  return date.getDate() - 1;\n});\n\nexport default day;\nexport var days = day.range;\n","import interval from \"./interval\";\nimport {durationMinute, durationWeek} from \"./duration\";\n\nfunction weekday(i) {\n  return interval(function(date) {\n    date.setDate(date.getDate() - (date.getDay() + 7 - i) % 7);\n    date.setHours(0, 0, 0, 0);\n  }, function(date, step) {\n    date.setDate(date.getDate() + step * 7);\n  }, function(start, end) {\n    return (end - start - (end.getTimezoneOffset() - start.getTimezoneOffset()) * durationMinute) / durationWeek;\n  });\n}\n\nexport var sunday = weekday(0);\nexport var monday = weekday(1);\nexport var tuesday = weekday(2);\nexport var wednesday = weekday(3);\nexport var thursday = weekday(4);\nexport var friday = weekday(5);\nexport var saturday = weekday(6);\n\nexport var sundays = sunday.range;\nexport var mondays = monday.range;\nexport var tuesdays = tuesday.range;\nexport var wednesdays = wednesday.range;\nexport var thursdays = thursday.range;\nexport var fridays = friday.range;\nexport var saturdays = saturday.range;\n","import interval from \"./interval\";\n\nvar month = interval(function(date) {\n  date.setDate(1);\n  date.setHours(0, 0, 0, 0);\n}, function(date, step) {\n  date.setMonth(date.getMonth() + step);\n}, function(start, end) {\n  return end.getMonth() - start.getMonth() + (end.getFullYear() - start.getFullYear()) * 12;\n}, function(date) {\n  return date.getMonth();\n});\n\nexport default month;\nexport var months = month.range;\n","import interval from \"./interval\";\n\nvar year = interval(function(date) {\n  date.setMonth(0, 1);\n  date.setHours(0, 0, 0, 0);\n}, function(date, step) {\n  date.setFullYear(date.getFullYear() + step);\n}, function(start, end) {\n  return end.getFullYear() - start.getFullYear();\n}, function(date) {\n  return date.getFullYear();\n});\n\n// An optimized implementation for this simple case.\nyear.every = function(k) {\n  return !isFinite(k = Math.floor(k)) || !(k > 0) ? null : interval(function(date) {\n    date.setFullYear(Math.floor(date.getFullYear() / k) * k);\n    date.setMonth(0, 1);\n    date.setHours(0, 0, 0, 0);\n  }, function(date, step) {\n    date.setFullYear(date.getFullYear() + step * k);\n  });\n};\n\nexport default year;\nexport var years = year.range;\n","import interval from \"./interval\";\nimport {durationMinute} from \"./duration\";\n\nvar utcMinute = interval(function(date) {\n  date.setUTCSeconds(0, 0);\n}, function(date, step) {\n  date.setTime(+date + step * durationMinute);\n}, function(start, end) {\n  return (end - start) / durationMinute;\n}, function(date) {\n  return date.getUTCMinutes();\n});\n\nexport default utcMinute;\nexport var utcMinutes = utcMinute.range;\n","import interval from \"./interval\";\nimport {durationHour} from \"./duration\";\n\nvar utcHour = interval(function(date) {\n  date.setUTCMinutes(0, 0, 0);\n}, function(date, step) {\n  date.setTime(+date + step * durationHour);\n}, function(start, end) {\n  return (end - start) / durationHour;\n}, function(date) {\n  return date.getUTCHours();\n});\n\nexport default utcHour;\nexport var utcHours = utcHour.range;\n","import interval from \"./interval\";\nimport {durationDay} from \"./duration\";\n\nvar utcDay = interval(function(date) {\n  date.setUTCHours(0, 0, 0, 0);\n}, function(date, step) {\n  date.setUTCDate(date.getUTCDate() + step);\n}, function(start, end) {\n  return (end - start) / durationDay;\n}, function(date) {\n  return date.getUTCDate() - 1;\n});\n\nexport default utcDay;\nexport var utcDays = utcDay.range;\n","import interval from \"./interval\";\nimport {durationWeek} from \"./duration\";\n\nfunction utcWeekday(i) {\n  return interval(function(date) {\n    date.setUTCDate(date.getUTCDate() - (date.getUTCDay() + 7 - i) % 7);\n    date.setUTCHours(0, 0, 0, 0);\n  }, function(date, step) {\n    date.setUTCDate(date.getUTCDate() + step * 7);\n  }, function(start, end) {\n    return (end - start) / durationWeek;\n  });\n}\n\nexport var utcSunday = utcWeekday(0);\nexport var utcMonday = utcWeekday(1);\nexport var utcTuesday = utcWeekday(2);\nexport var utcWednesday = utcWeekday(3);\nexport var utcThursday = utcWeekday(4);\nexport var utcFriday = utcWeekday(5);\nexport var utcSaturday = utcWeekday(6);\n\nexport var utcSundays = utcSunday.range;\nexport var utcMondays = utcMonday.range;\nexport var utcTuesdays = utcTuesday.range;\nexport var utcWednesdays = utcWednesday.range;\nexport var utcThursdays = utcThursday.range;\nexport var utcFridays = utcFriday.range;\nexport var utcSaturdays = utcSaturday.range;\n","import interval from \"./interval\";\n\nvar utcMonth = interval(function(date) {\n  date.setUTCDate(1);\n  date.setUTCHours(0, 0, 0, 0);\n}, function(date, step) {\n  date.setUTCMonth(date.getUTCMonth() + step);\n}, function(start, end) {\n  return end.getUTCMonth() - start.getUTCMonth() + (end.getUTCFullYear() - start.getUTCFullYear()) * 12;\n}, function(date) {\n  return date.getUTCMonth();\n});\n\nexport default utcMonth;\nexport var utcMonths = utcMonth.range;\n","import interval from \"./interval\";\n\nvar utcYear = interval(function(date) {\n  date.setUTCMonth(0, 1);\n  date.setUTCHours(0, 0, 0, 0);\n}, function(date, step) {\n  date.setUTCFullYear(date.getUTCFullYear() + step);\n}, function(start, end) {\n  return end.getUTCFullYear() - start.getUTCFullYear();\n}, function(date) {\n  return date.getUTCFullYear();\n});\n\n// An optimized implementation for this simple case.\nutcYear.every = function(k) {\n  return !isFinite(k = Math.floor(k)) || !(k > 0) ? null : interval(function(date) {\n    date.setUTCFullYear(Math.floor(date.getUTCFullYear() / k) * k);\n    date.setUTCMonth(0, 1);\n    date.setUTCHours(0, 0, 0, 0);\n  }, function(date, step) {\n    date.setUTCFullYear(date.getUTCFullYear() + step * k);\n  });\n};\n\nexport default utcYear;\nexport var utcYears = utcYear.range;\n","import {\n  timeDay,\n  timeSunday,\n  timeMonday,\n  timeThursday,\n  timeYear,\n  utcDay,\n  utcSunday,\n  utcMonday,\n  utcThursday,\n  utcYear\n} from \"d3-time\";\n\nfunction localDate(d) {\n  if (0 <= d.y && d.y < 100) {\n    var date = new Date(-1, d.m, d.d, d.H, d.M, d.S, d.L);\n    date.setFullYear(d.y);\n    return date;\n  }\n  return new Date(d.y, d.m, d.d, d.H, d.M, d.S, d.L);\n}\n\nfunction utcDate(d) {\n  if (0 <= d.y && d.y < 100) {\n    var date = new Date(Date.UTC(-1, d.m, d.d, d.H, d.M, d.S, d.L));\n    date.setUTCFullYear(d.y);\n    return date;\n  }\n  return new Date(Date.UTC(d.y, d.m, d.d, d.H, d.M, d.S, d.L));\n}\n\nfunction newYear(y) {\n  return {y: y, m: 0, d: 1, H: 0, M: 0, S: 0, L: 0};\n}\n\nexport default function formatLocale(locale) {\n  var locale_dateTime = locale.dateTime,\n      locale_date = locale.date,\n      locale_time = locale.time,\n      locale_periods = locale.periods,\n      locale_weekdays = locale.days,\n      locale_shortWeekdays = locale.shortDays,\n      locale_months = locale.months,\n      locale_shortMonths = locale.shortMonths;\n\n  var periodRe = formatRe(locale_periods),\n      periodLookup = formatLookup(locale_periods),\n      weekdayRe = formatRe(locale_weekdays),\n      weekdayLookup = formatLookup(locale_weekdays),\n      shortWeekdayRe = formatRe(locale_shortWeekdays),\n      shortWeekdayLookup = formatLookup(locale_shortWeekdays),\n      monthRe = formatRe(locale_months),\n      monthLookup = formatLookup(locale_months),\n      shortMonthRe = formatRe(locale_shortMonths),\n      shortMonthLookup = formatLookup(locale_shortMonths);\n\n  var formats = {\n    \"a\": formatShortWeekday,\n    \"A\": formatWeekday,\n    \"b\": formatShortMonth,\n    \"B\": formatMonth,\n    \"c\": null,\n    \"d\": formatDayOfMonth,\n    \"e\": formatDayOfMonth,\n    \"f\": formatMicroseconds,\n    \"H\": formatHour24,\n    \"I\": formatHour12,\n    \"j\": formatDayOfYear,\n    \"L\": formatMilliseconds,\n    \"m\": formatMonthNumber,\n    \"M\": formatMinutes,\n    \"p\": formatPeriod,\n    \"Q\": formatUnixTimestamp,\n    \"s\": formatUnixTimestampSeconds,\n    \"S\": formatSeconds,\n    \"u\": formatWeekdayNumberMonday,\n    \"U\": formatWeekNumberSunday,\n    \"V\": formatWeekNumberISO,\n    \"w\": formatWeekdayNumberSunday,\n    \"W\": formatWeekNumberMonday,\n    \"x\": null,\n    \"X\": null,\n    \"y\": formatYear,\n    \"Y\": formatFullYear,\n    \"Z\": formatZone,\n    \"%\": formatLiteralPercent\n  };\n\n  var utcFormats = {\n    \"a\": formatUTCShortWeekday,\n    \"A\": formatUTCWeekday,\n    \"b\": formatUTCShortMonth,\n    \"B\": formatUTCMonth,\n    \"c\": null,\n    \"d\": formatUTCDayOfMonth,\n    \"e\": formatUTCDayOfMonth,\n    \"f\": formatUTCMicroseconds,\n    \"H\": formatUTCHour24,\n    \"I\": formatUTCHour12,\n    \"j\": formatUTCDayOfYear,\n    \"L\": formatUTCMilliseconds,\n    \"m\": formatUTCMonthNumber,\n    \"M\": formatUTCMinutes,\n    \"p\": formatUTCPeriod,\n    \"Q\": formatUnixTimestamp,\n    \"s\": formatUnixTimestampSeconds,\n    \"S\": formatUTCSeconds,\n    \"u\": formatUTCWeekdayNumberMonday,\n    \"U\": formatUTCWeekNumberSunday,\n    \"V\": formatUTCWeekNumberISO,\n    \"w\": formatUTCWeekdayNumberSunday,\n    \"W\": formatUTCWeekNumberMonday,\n    \"x\": null,\n    \"X\": null,\n    \"y\": formatUTCYear,\n    \"Y\": formatUTCFullYear,\n    \"Z\": formatUTCZone,\n    \"%\": formatLiteralPercent\n  };\n\n  var parses = {\n    \"a\": parseShortWeekday,\n    \"A\": parseWeekday,\n    \"b\": parseShortMonth,\n    \"B\": parseMonth,\n    \"c\": parseLocaleDateTime,\n    \"d\": parseDayOfMonth,\n    \"e\": parseDayOfMonth,\n    \"f\": parseMicroseconds,\n    \"H\": parseHour24,\n    \"I\": parseHour24,\n    \"j\": parseDayOfYear,\n    \"L\": parseMilliseconds,\n    \"m\": parseMonthNumber,\n    \"M\": parseMinutes,\n    \"p\": parsePeriod,\n    \"Q\": parseUnixTimestamp,\n    \"s\": parseUnixTimestampSeconds,\n    \"S\": parseSeconds,\n    \"u\": parseWeekdayNumberMonday,\n    \"U\": parseWeekNumberSunday,\n    \"V\": parseWeekNumberISO,\n    \"w\": parseWeekdayNumberSunday,\n    \"W\": parseWeekNumberMonday,\n    \"x\": parseLocaleDate,\n    \"X\": parseLocaleTime,\n    \"y\": parseYear,\n    \"Y\": parseFullYear,\n    \"Z\": parseZone,\n    \"%\": parseLiteralPercent\n  };\n\n  // These recursive directive definitions must be deferred.\n  formats.x = newFormat(locale_date, formats);\n  formats.X = newFormat(locale_time, formats);\n  formats.c = newFormat(locale_dateTime, formats);\n  utcFormats.x = newFormat(locale_date, utcFormats);\n  utcFormats.X = newFormat(locale_time, utcFormats);\n  utcFormats.c = newFormat(locale_dateTime, utcFormats);\n\n  function newFormat(specifier, formats) {\n    return function(date) {\n      var string = [],\n          i = -1,\n          j = 0,\n          n = specifier.length,\n          c,\n          pad,\n          format;\n\n      if (!(date instanceof Date)) date = new Date(+date);\n\n      while (++i < n) {\n        if (specifier.charCodeAt(i) === 37) {\n          string.push(specifier.slice(j, i));\n          if ((pad = pads[c = specifier.charAt(++i)]) != null) c = specifier.charAt(++i);\n          else pad = c === \"e\" ? \" \" : \"0\";\n          if (format = formats[c]) c = format(date, pad);\n          string.push(c);\n          j = i + 1;\n        }\n      }\n\n      string.push(specifier.slice(j, i));\n      return string.join(\"\");\n    };\n  }\n\n  function newParse(specifier, newDate) {\n    return function(string) {\n      var d = newYear(1900),\n          i = parseSpecifier(d, specifier, string += \"\", 0),\n          week, day;\n      if (i != string.length) return null;\n\n      // If a UNIX timestamp is specified, return it.\n      if (\"Q\" in d) return new Date(d.Q);\n\n      // The am-pm flag is 0 for AM, and 1 for PM.\n      if (\"p\" in d) d.H = d.H % 12 + d.p * 12;\n\n      // Convert day-of-week and week-of-year to day-of-year.\n      if (\"V\" in d) {\n        if (d.V < 1 || d.V > 53) return null;\n        if (!(\"w\" in d)) d.w = 1;\n        if (\"Z\" in d) {\n          week = utcDate(newYear(d.y)), day = week.getUTCDay();\n          week = day > 4 || day === 0 ? utcMonday.ceil(week) : utcMonday(week);\n          week = utcDay.offset(week, (d.V - 1) * 7);\n          d.y = week.getUTCFullYear();\n          d.m = week.getUTCMonth();\n          d.d = week.getUTCDate() + (d.w + 6) % 7;\n        } else {\n          week = newDate(newYear(d.y)), day = week.getDay();\n          week = day > 4 || day === 0 ? timeMonday.ceil(week) : timeMonday(week);\n          week = timeDay.offset(week, (d.V - 1) * 7);\n          d.y = week.getFullYear();\n          d.m = week.getMonth();\n          d.d = week.getDate() + (d.w + 6) % 7;\n        }\n      } else if (\"W\" in d || \"U\" in d) {\n        if (!(\"w\" in d)) d.w = \"u\" in d ? d.u % 7 : \"W\" in d ? 1 : 0;\n        day = \"Z\" in d ? utcDate(newYear(d.y)).getUTCDay() : newDate(newYear(d.y)).getDay();\n        d.m = 0;\n        d.d = \"W\" in d ? (d.w + 6) % 7 + d.W * 7 - (day + 5) % 7 : d.w + d.U * 7 - (day + 6) % 7;\n      }\n\n      // If a time zone is specified, all fields are interpreted as UTC and then\n      // offset according to the specified time zone.\n      if (\"Z\" in d) {\n        d.H += d.Z / 100 | 0;\n        d.M += d.Z % 100;\n        return utcDate(d);\n      }\n\n      // Otherwise, all fields are in local time.\n      return newDate(d);\n    };\n  }\n\n  function parseSpecifier(d, specifier, string, j) {\n    var i = 0,\n        n = specifier.length,\n        m = string.length,\n        c,\n        parse;\n\n    while (i < n) {\n      if (j >= m) return -1;\n      c = specifier.charCodeAt(i++);\n      if (c === 37) {\n        c = specifier.charAt(i++);\n        parse = parses[c in pads ? specifier.charAt(i++) : c];\n        if (!parse || ((j = parse(d, string, j)) < 0)) return -1;\n      } else if (c != string.charCodeAt(j++)) {\n        return -1;\n      }\n    }\n\n    return j;\n  }\n\n  function parsePeriod(d, string, i) {\n    var n = periodRe.exec(string.slice(i));\n    return n ? (d.p = periodLookup[n[0].toLowerCase()], i + n[0].length) : -1;\n  }\n\n  function parseShortWeekday(d, string, i) {\n    var n = shortWeekdayRe.exec(string.slice(i));\n    return n ? (d.w = shortWeekdayLookup[n[0].toLowerCase()], i + n[0].length) : -1;\n  }\n\n  function parseWeekday(d, string, i) {\n    var n = weekdayRe.exec(string.slice(i));\n    return n ? (d.w = weekdayLookup[n[0].toLowerCase()], i + n[0].length) : -1;\n  }\n\n  function parseShortMonth(d, string, i) {\n    var n = shortMonthRe.exec(string.slice(i));\n    return n ? (d.m = shortMonthLookup[n[0].toLowerCase()], i + n[0].length) : -1;\n  }\n\n  function parseMonth(d, string, i) {\n    var n = monthRe.exec(string.slice(i));\n    return n ? (d.m = monthLookup[n[0].toLowerCase()], i + n[0].length) : -1;\n  }\n\n  function parseLocaleDateTime(d, string, i) {\n    return parseSpecifier(d, locale_dateTime, string, i);\n  }\n\n  function parseLocaleDate(d, string, i) {\n    return parseSpecifier(d, locale_date, string, i);\n  }\n\n  function parseLocaleTime(d, string, i) {\n    return parseSpecifier(d, locale_time, string, i);\n  }\n\n  function formatShortWeekday(d) {\n    return locale_shortWeekdays[d.getDay()];\n  }\n\n  function formatWeekday(d) {\n    return locale_weekdays[d.getDay()];\n  }\n\n  function formatShortMonth(d) {\n    return locale_shortMonths[d.getMonth()];\n  }\n\n  function formatMonth(d) {\n    return locale_months[d.getMonth()];\n  }\n\n  function formatPeriod(d) {\n    return locale_periods[+(d.getHours() >= 12)];\n  }\n\n  function formatUTCShortWeekday(d) {\n    return locale_shortWeekdays[d.getUTCDay()];\n  }\n\n  function formatUTCWeekday(d) {\n    return locale_weekdays[d.getUTCDay()];\n  }\n\n  function formatUTCShortMonth(d) {\n    return locale_shortMonths[d.getUTCMonth()];\n  }\n\n  function formatUTCMonth(d) {\n    return locale_months[d.getUTCMonth()];\n  }\n\n  function formatUTCPeriod(d) {\n    return locale_periods[+(d.getUTCHours() >= 12)];\n  }\n\n  return {\n    format: function(specifier) {\n      var f = newFormat(specifier += \"\", formats);\n      f.toString = function() { return specifier; };\n      return f;\n    },\n    parse: function(specifier) {\n      var p = newParse(specifier += \"\", localDate);\n      p.toString = function() { return specifier; };\n      return p;\n    },\n    utcFormat: function(specifier) {\n      var f = newFormat(specifier += \"\", utcFormats);\n      f.toString = function() { return specifier; };\n      return f;\n    },\n    utcParse: function(specifier) {\n      var p = newParse(specifier, utcDate);\n      p.toString = function() { return specifier; };\n      return p;\n    }\n  };\n}\n\nvar pads = {\"-\": \"\", \"_\": \" \", \"0\": \"0\"},\n    numberRe = /^\\s*\\d+/, // note: ignores next directive\n    percentRe = /^%/,\n    requoteRe = /[\\\\^$*+?|[\\]().{}]/g;\n\nfunction pad(value, fill, width) {\n  var sign = value < 0 ? \"-\" : \"\",\n      string = (sign ? -value : value) + \"\",\n      length = string.length;\n  return sign + (length < width ? new Array(width - length + 1).join(fill) + string : string);\n}\n\nfunction requote(s) {\n  return s.replace(requoteRe, \"\\\\$&\");\n}\n\nfunction formatRe(names) {\n  return new RegExp(\"^(?:\" + names.map(requote).join(\"|\") + \")\", \"i\");\n}\n\nfunction formatLookup(names) {\n  var map = {}, i = -1, n = names.length;\n  while (++i < n) map[names[i].toLowerCase()] = i;\n  return map;\n}\n\nfunction parseWeekdayNumberSunday(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 1));\n  return n ? (d.w = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseWeekdayNumberMonday(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 1));\n  return n ? (d.u = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseWeekNumberSunday(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.U = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseWeekNumberISO(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.V = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseWeekNumberMonday(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.W = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseFullYear(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 4));\n  return n ? (d.y = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseYear(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.y = +n[0] + (+n[0] > 68 ? 1900 : 2000), i + n[0].length) : -1;\n}\n\nfunction parseZone(d, string, i) {\n  var n = /^(Z)|([+-]\\d\\d)(?::?(\\d\\d))?/.exec(string.slice(i, i + 6));\n  return n ? (d.Z = n[1] ? 0 : -(n[2] + (n[3] || \"00\")), i + n[0].length) : -1;\n}\n\nfunction parseMonthNumber(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.m = n[0] - 1, i + n[0].length) : -1;\n}\n\nfunction parseDayOfMonth(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.d = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseDayOfYear(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 3));\n  return n ? (d.m = 0, d.d = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseHour24(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.H = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseMinutes(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.M = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseSeconds(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.S = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseMilliseconds(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 3));\n  return n ? (d.L = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseMicroseconds(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 6));\n  return n ? (d.L = Math.floor(n[0] / 1000), i + n[0].length) : -1;\n}\n\nfunction parseLiteralPercent(d, string, i) {\n  var n = percentRe.exec(string.slice(i, i + 1));\n  return n ? i + n[0].length : -1;\n}\n\nfunction parseUnixTimestamp(d, string, i) {\n  var n = numberRe.exec(string.slice(i));\n  return n ? (d.Q = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseUnixTimestampSeconds(d, string, i) {\n  var n = numberRe.exec(string.slice(i));\n  return n ? (d.Q = (+n[0]) * 1000, i + n[0].length) : -1;\n}\n\nfunction formatDayOfMonth(d, p) {\n  return pad(d.getDate(), p, 2);\n}\n\nfunction formatHour24(d, p) {\n  return pad(d.getHours(), p, 2);\n}\n\nfunction formatHour12(d, p) {\n  return pad(d.getHours() % 12 || 12, p, 2);\n}\n\nfunction formatDayOfYear(d, p) {\n  return pad(1 + timeDay.count(timeYear(d), d), p, 3);\n}\n\nfunction formatMilliseconds(d, p) {\n  return pad(d.getMilliseconds(), p, 3);\n}\n\nfunction formatMicroseconds(d, p) {\n  return formatMilliseconds(d, p) + \"000\";\n}\n\nfunction formatMonthNumber(d, p) {\n  return pad(d.getMonth() + 1, p, 2);\n}\n\nfunction formatMinutes(d, p) {\n  return pad(d.getMinutes(), p, 2);\n}\n\nfunction formatSeconds(d, p) {\n  return pad(d.getSeconds(), p, 2);\n}\n\nfunction formatWeekdayNumberMonday(d) {\n  var day = d.getDay();\n  return day === 0 ? 7 : day;\n}\n\nfunction formatWeekNumberSunday(d, p) {\n  return pad(timeSunday.count(timeYear(d), d), p, 2);\n}\n\nfunction formatWeekNumberISO(d, p) {\n  var day = d.getDay();\n  d = (day >= 4 || day === 0) ? timeThursday(d) : timeThursday.ceil(d);\n  return pad(timeThursday.count(timeYear(d), d) + (timeYear(d).getDay() === 4), p, 2);\n}\n\nfunction formatWeekdayNumberSunday(d) {\n  return d.getDay();\n}\n\nfunction formatWeekNumberMonday(d, p) {\n  return pad(timeMonday.count(timeYear(d), d), p, 2);\n}\n\nfunction formatYear(d, p) {\n  return pad(d.getFullYear() % 100, p, 2);\n}\n\nfunction formatFullYear(d, p) {\n  return pad(d.getFullYear() % 10000, p, 4);\n}\n\nfunction formatZone(d) {\n  var z = d.getTimezoneOffset();\n  return (z > 0 ? \"-\" : (z *= -1, \"+\"))\n      + pad(z / 60 | 0, \"0\", 2)\n      + pad(z % 60, \"0\", 2);\n}\n\nfunction formatUTCDayOfMonth(d, p) {\n  return pad(d.getUTCDate(), p, 2);\n}\n\nfunction formatUTCHour24(d, p) {\n  return pad(d.getUTCHours(), p, 2);\n}\n\nfunction formatUTCHour12(d, p) {\n  return pad(d.getUTCHours() % 12 || 12, p, 2);\n}\n\nfunction formatUTCDayOfYear(d, p) {\n  return pad(1 + utcDay.count(utcYear(d), d), p, 3);\n}\n\nfunction formatUTCMilliseconds(d, p) {\n  return pad(d.getUTCMilliseconds(), p, 3);\n}\n\nfunction formatUTCMicroseconds(d, p) {\n  return formatUTCMilliseconds(d, p) + \"000\";\n}\n\nfunction formatUTCMonthNumber(d, p) {\n  return pad(d.getUTCMonth() + 1, p, 2);\n}\n\nfunction formatUTCMinutes(d, p) {\n  return pad(d.getUTCMinutes(), p, 2);\n}\n\nfunction formatUTCSeconds(d, p) {\n  return pad(d.getUTCSeconds(), p, 2);\n}\n\nfunction formatUTCWeekdayNumberMonday(d) {\n  var dow = d.getUTCDay();\n  return dow === 0 ? 7 : dow;\n}\n\nfunction formatUTCWeekNumberSunday(d, p) {\n  return pad(utcSunday.count(utcYear(d), d), p, 2);\n}\n\nfunction formatUTCWeekNumberISO(d, p) {\n  var day = d.getUTCDay();\n  d = (day >= 4 || day === 0) ? utcThursday(d) : utcThursday.ceil(d);\n  return pad(utcThursday.count(utcYear(d), d) + (utcYear(d).getUTCDay() === 4), p, 2);\n}\n\nfunction formatUTCWeekdayNumberSunday(d) {\n  return d.getUTCDay();\n}\n\nfunction formatUTCWeekNumberMonday(d, p) {\n  return pad(utcMonday.count(utcYear(d), d), p, 2);\n}\n\nfunction formatUTCYear(d, p) {\n  return pad(d.getUTCFullYear() % 100, p, 2);\n}\n\nfunction formatUTCFullYear(d, p) {\n  return pad(d.getUTCFullYear() % 10000, p, 4);\n}\n\nfunction formatUTCZone() {\n  return \"+0000\";\n}\n\nfunction formatLiteralPercent() {\n  return \"%\";\n}\n\nfunction formatUnixTimestamp(d) {\n  return +d;\n}\n\nfunction formatUnixTimestampSeconds(d) {\n  return Math.floor(+d / 1000);\n}\n","import formatLocale from \"./locale\";\n\nvar locale;\nexport var timeFormat;\nexport var timeParse;\nexport var utcFormat;\nexport var utcParse;\n\ndefaultLocale({\n  dateTime: \"%x, %X\",\n  date: \"%-m/%-d/%Y\",\n  time: \"%-I:%M:%S %p\",\n  periods: [\"AM\", \"PM\"],\n  days: [\"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\"],\n  shortDays: [\"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\"],\n  months: [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"],\n  shortMonths: [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"]\n});\n\nexport default function defaultLocale(definition) {\n  locale = formatLocale(definition);\n  timeFormat = locale.format;\n  timeParse = locale.parse;\n  utcFormat = locale.utcFormat;\n  utcParse = locale.utcParse;\n  return locale;\n}\n","import {utcFormat} from \"./defaultLocale\";\n\nexport var isoSpecifier = \"%Y-%m-%dT%H:%M:%S.%LZ\";\n\nfunction formatIsoNative(date) {\n  return date.toISOString();\n}\n\nvar formatIso = Date.prototype.toISOString\n    ? formatIsoNative\n    : utcFormat(isoSpecifier);\n\nexport default formatIso;\n","import {isoSpecifier} from \"./isoFormat\";\nimport {utcParse} from \"./defaultLocale\";\n\nfunction parseIsoNative(string) {\n  var date = new Date(string);\n  return isNaN(date) ? null : date;\n}\n\nvar parseIso = +new Date(\"2000-01-01T00:00:00.000Z\")\n    ? parseIsoNative\n    : utcParse(isoSpecifier);\n\nexport default parseIso;\n","import {bisector, tickStep} from \"d3-array\";\nimport {interpolateNumber as reinterpolate} from \"d3-interpolate\";\nimport {timeYear, timeMonth, timeWeek, timeDay, timeHour, timeMinute, timeSecond, timeMillisecond} from \"d3-time\";\nimport {timeFormat} from \"d3-time-format\";\nimport {map} from \"./array\";\nimport {default as continuous, copy, deinterpolateLinear as deinterpolate} from \"./continuous\";\nimport nice from \"./nice\";\n\nvar durationSecond = 1000,\n    durationMinute = durationSecond * 60,\n    durationHour = durationMinute * 60,\n    durationDay = durationHour * 24,\n    durationWeek = durationDay * 7,\n    durationMonth = durationDay * 30,\n    durationYear = durationDay * 365;\n\nfunction date(t) {\n  return new Date(t);\n}\n\nfunction number(t) {\n  return t instanceof Date ? +t : +new Date(+t);\n}\n\nexport function calendar(year, month, week, day, hour, minute, second, millisecond, format) {\n  var scale = continuous(deinterpolate, reinterpolate),\n      invert = scale.invert,\n      domain = scale.domain;\n\n  var formatMillisecond = format(\".%L\"),\n      formatSecond = format(\":%S\"),\n      formatMinute = format(\"%I:%M\"),\n      formatHour = format(\"%I %p\"),\n      formatDay = format(\"%a %d\"),\n      formatWeek = format(\"%b %d\"),\n      formatMonth = format(\"%B\"),\n      formatYear = format(\"%Y\");\n\n  var tickIntervals = [\n    [second,  1,      durationSecond],\n    [second,  5,  5 * durationSecond],\n    [second, 15, 15 * durationSecond],\n    [second, 30, 30 * durationSecond],\n    [minute,  1,      durationMinute],\n    [minute,  5,  5 * durationMinute],\n    [minute, 15, 15 * durationMinute],\n    [minute, 30, 30 * durationMinute],\n    [  hour,  1,      durationHour  ],\n    [  hour,  3,  3 * durationHour  ],\n    [  hour,  6,  6 * durationHour  ],\n    [  hour, 12, 12 * durationHour  ],\n    [   day,  1,      durationDay   ],\n    [   day,  2,  2 * durationDay   ],\n    [  week,  1,      durationWeek  ],\n    [ month,  1,      durationMonth ],\n    [ month,  3,  3 * durationMonth ],\n    [  year,  1,      durationYear  ]\n  ];\n\n  function tickFormat(date) {\n    return (second(date) < date ? formatMillisecond\n        : minute(date) < date ? formatSecond\n        : hour(date) < date ? formatMinute\n        : day(date) < date ? formatHour\n        : month(date) < date ? (week(date) < date ? formatDay : formatWeek)\n        : year(date) < date ? formatMonth\n        : formatYear)(date);\n  }\n\n  function tickInterval(interval, start, stop, step) {\n    if (interval == null) interval = 10;\n\n    // If a desired tick count is specified, pick a reasonable tick interval\n    // based on the extent of the domain and a rough estimate of tick size.\n    // Otherwise, assume interval is already a time interval and use it.\n    if (typeof interval === \"number\") {\n      var target = Math.abs(stop - start) / interval,\n          i = bisector(function(i) { return i[2]; }).right(tickIntervals, target);\n      if (i === tickIntervals.length) {\n        step = tickStep(start / durationYear, stop / durationYear, interval);\n        interval = year;\n      } else if (i) {\n        i = tickIntervals[target / tickIntervals[i - 1][2] < tickIntervals[i][2] / target ? i - 1 : i];\n        step = i[1];\n        interval = i[0];\n      } else {\n        step = Math.max(tickStep(start, stop, interval), 1);\n        interval = millisecond;\n      }\n    }\n\n    return step == null ? interval : interval.every(step);\n  }\n\n  scale.invert = function(y) {\n    return new Date(invert(y));\n  };\n\n  scale.domain = function(_) {\n    return arguments.length ? domain(map.call(_, number)) : domain().map(date);\n  };\n\n  scale.ticks = function(interval, step) {\n    var d = domain(),\n        t0 = d[0],\n        t1 = d[d.length - 1],\n        r = t1 < t0,\n        t;\n    if (r) t = t0, t0 = t1, t1 = t;\n    t = tickInterval(interval, t0, t1, step);\n    t = t ? t.range(t0, t1 + 1) : []; // inclusive stop\n    return r ? t.reverse() : t;\n  };\n\n  scale.tickFormat = function(count, specifier) {\n    return specifier == null ? tickFormat : format(specifier);\n  };\n\n  scale.nice = function(interval, step) {\n    var d = domain();\n    return (interval = tickInterval(interval, d[0], d[d.length - 1], step))\n        ? domain(nice(d, interval))\n        : scale;\n  };\n\n  scale.copy = function() {\n    return copy(scale, calendar(year, month, week, day, hour, minute, second, millisecond, format));\n  };\n\n  return scale;\n}\n\nexport default function() {\n  return calendar(timeYear, timeMonth, timeWeek, timeDay, timeHour, timeMinute, timeSecond, timeMillisecond, timeFormat).domain([new Date(2000, 0, 1), new Date(2000, 0, 2)]);\n}\n","export default function(s) {\n  return s.match(/.{6}/g).map(function(x) {\n    return \"#\" + x;\n  });\n}\n","import colors from \"./colors\";\n\nexport default colors(\"1f77b4ff7f0e2ca02cd627289467bd8c564be377c27f7f7fbcbd2217becf\");\n","import colors from \"./colors\";\n\nexport default colors(\"393b795254a36b6ecf9c9ede6379398ca252b5cf6bcedb9c8c6d31bd9e39e7ba52e7cb94843c39ad494ad6616be7969c7b4173a55194ce6dbdde9ed6\");\n","import colors from \"./colors\";\n\nexport default colors(\"1f77b4aec7e8ff7f0effbb782ca02c98df8ad62728ff98969467bdc5b0d58c564bc49c94e377c2f7b6d27f7f7fc7c7c7bcbd22dbdb8d17becf9edae5\");\n","import colors from \"./colors\";\n\nexport default colors(\"3182bd6baed69ecae1c6dbefe6550dfd8d3cfdae6bfdd0a231a35474c476a1d99bc7e9c0756bb19e9ac8bcbddcdadaeb636363969696bdbdbdd9d9d9\");\n","import {cubehelix} from \"d3-color\";\nimport {interpolateCubehelixLong} from \"d3-interpolate\";\n\nexport default interpolateCubehelixLong(cubehelix(300, 0.5, 0.0), cubehelix(-240, 0.5, 1.0));\n","import {cubehelix} from \"d3-color\";\nimport {interpolateCubehelixLong} from \"d3-interpolate\";\n\nexport var warm = interpolateCubehelixLong(cubehelix(-100, 0.75, 0.35), cubehelix(80, 1.50, 0.8));\n\nexport var cool = interpolateCubehelixLong(cubehelix(260, 0.75, 0.35), cubehelix(80, 1.50, 0.8));\n\nvar rainbow = cubehelix();\n\nexport default function(t) {\n  if (t < 0 || t > 1) t -= Math.floor(t);\n  var ts = Math.abs(t - 0.5);\n  rainbow.h = 360 * t - 100;\n  rainbow.s = 1.5 - 1.5 * ts;\n  rainbow.l = 0.8 - 0.9 * ts;\n  return rainbow + \"\";\n}\n","import colors from \"./colors\";\n\nfunction ramp(range) {\n  var n = range.length;\n  return function(t) {\n    return range[Math.max(0, Math.min(n - 1, Math.floor(t * n)))];\n  };\n}\n\nexport default ramp(colors(\"44015444025645045745055946075a46085c460a5d460b5e470d60470e6147106347116447136548146748166848176948186a481a6c481b6d481c6e481d6f481f70482071482173482374482475482576482677482878482979472a7a472c7a472d7b472e7c472f7d46307e46327e46337f463480453581453781453882443983443a83443b84433d84433e85423f854240864241864142874144874045884046883f47883f48893e49893e4a893e4c8a3d4d8a3d4e8a3c4f8a3c508b3b518b3b528b3a538b3a548c39558c39568c38588c38598c375a8c375b8d365c8d365d8d355e8d355f8d34608d34618d33628d33638d32648e32658e31668e31678e31688e30698e306a8e2f6b8e2f6c8e2e6d8e2e6e8e2e6f8e2d708e2d718e2c718e2c728e2c738e2b748e2b758e2a768e2a778e2a788e29798e297a8e297b8e287c8e287d8e277e8e277f8e27808e26818e26828e26828e25838e25848e25858e24868e24878e23888e23898e238a8d228b8d228c8d228d8d218e8d218f8d21908d21918c20928c20928c20938c1f948c1f958b1f968b1f978b1f988b1f998a1f9a8a1e9b8a1e9c891e9d891f9e891f9f881fa0881fa1881fa1871fa28720a38620a48621a58521a68522a78522a88423a98324aa8325ab8225ac8226ad8127ad8128ae8029af7f2ab07f2cb17e2db27d2eb37c2fb47c31b57b32b67a34b67935b77937b87838b9773aba763bbb753dbc743fbc7340bd7242be7144bf7046c06f48c16e4ac16d4cc26c4ec36b50c46a52c56954c56856c66758c7655ac8645cc8635ec96260ca6063cb5f65cb5e67cc5c69cd5b6ccd5a6ece5870cf5773d05675d05477d1537ad1517cd2507fd34e81d34d84d44b86d54989d5488bd6468ed64590d74393d74195d84098d83e9bd93c9dd93ba0da39a2da37a5db36a8db34aadc32addc30b0dd2fb2dd2db5de2bb8de29bade28bddf26c0df25c2df23c5e021c8e020cae11fcde11dd0e11cd2e21bd5e21ad8e219dae319dde318dfe318e2e418e5e419e7e419eae51aece51befe51cf1e51df4e61ef6e620f8e621fbe723fde725\"));\n\nexport var magma = ramp(colors(\"00000401000501010601010802010902020b02020d03030f03031204041405041606051806051a07061c08071e0907200a08220b09240c09260d0a290e0b2b100b2d110c2f120d31130d34140e36150e38160f3b180f3d19103f1a10421c10441d11471e114920114b21114e22115024125325125527125829115a2a115c2c115f2d11612f116331116533106734106936106b38106c390f6e3b0f703d0f713f0f72400f74420f75440f764510774710784910784a10794c117a4e117b4f127b51127c52137c54137d56147d57157e59157e5a167e5c167f5d177f5f187f601880621980641a80651a80671b80681c816a1c816b1d816d1d816e1e81701f81721f817320817521817621817822817922827b23827c23827e24828025828125818326818426818627818827818928818b29818c29818e2a81902a81912b81932b80942c80962c80982d80992d809b2e7f9c2e7f9e2f7fa02f7fa1307ea3307ea5317ea6317da8327daa337dab337cad347cae347bb0357bb2357bb3367ab5367ab73779b83779ba3878bc3978bd3977bf3a77c03a76c23b75c43c75c53c74c73d73c83e73ca3e72cc3f71cd4071cf4070d0416fd2426fd3436ed5446dd6456cd8456cd9466bdb476adc4869de4968df4a68e04c67e24d66e34e65e44f64e55064e75263e85362e95462ea5661eb5760ec5860ed5a5fee5b5eef5d5ef05f5ef1605df2625df2645cf3655cf4675cf4695cf56b5cf66c5cf66e5cf7705cf7725cf8745cf8765cf9785df9795df97b5dfa7d5efa7f5efa815ffb835ffb8560fb8761fc8961fc8a62fc8c63fc8e64fc9065fd9266fd9467fd9668fd9869fd9a6afd9b6bfe9d6cfe9f6dfea16efea36ffea571fea772fea973feaa74feac76feae77feb078feb27afeb47bfeb67cfeb77efeb97ffebb81febd82febf84fec185fec287fec488fec68afec88cfeca8dfecc8ffecd90fecf92fed194fed395fed597fed799fed89afdda9cfddc9efddea0fde0a1fde2a3fde3a5fde5a7fde7a9fde9aafdebacfcecaefceeb0fcf0b2fcf2b4fcf4b6fcf6b8fcf7b9fcf9bbfcfbbdfcfdbf\"));\n\nexport var inferno = ramp(colors(\"00000401000501010601010802010a02020c02020e03021004031204031405041706041907051b08051d09061f0a07220b07240c08260d08290e092b10092d110a30120a32140b34150b37160b39180c3c190c3e1b0c411c0c431e0c451f0c48210c4a230c4c240c4f260c51280b53290b552b0b572d0b592f0a5b310a5c320a5e340a5f3609613809623909633b09643d09653e0966400a67420a68440a68450a69470b6a490b6a4a0c6b4c0c6b4d0d6c4f0d6c510e6c520e6d540f6d550f6d57106e59106e5a116e5c126e5d126e5f136e61136e62146e64156e65156e67166e69166e6a176e6c186e6d186e6f196e71196e721a6e741a6e751b6e771c6d781c6d7a1d6d7c1d6d7d1e6d7f1e6c801f6c82206c84206b85216b87216b88226a8a226a8c23698d23698f24699025689225689326679526679727669827669a28659b29649d29649f2a63a02a63a22b62a32c61a52c60a62d60a82e5fa92e5eab2f5ead305dae305cb0315bb1325ab3325ab43359b63458b73557b93556ba3655bc3754bd3853bf3952c03a51c13a50c33b4fc43c4ec63d4dc73e4cc83f4bca404acb4149cc4248ce4347cf4446d04545d24644d34743d44842d54a41d74b3fd84c3ed94d3dda4e3cdb503bdd513ade5238df5337e05536e15635e25734e35933e45a31e55c30e65d2fe75e2ee8602de9612bea632aeb6429eb6628ec6726ed6925ee6a24ef6c23ef6e21f06f20f1711ff1731df2741cf3761bf37819f47918f57b17f57d15f67e14f68013f78212f78410f8850ff8870ef8890cf98b0bf98c0af98e09fa9008fa9207fa9407fb9606fb9706fb9906fb9b06fb9d07fc9f07fca108fca309fca50afca60cfca80dfcaa0ffcac11fcae12fcb014fcb216fcb418fbb61afbb81dfbba1ffbbc21fbbe23fac026fac228fac42afac62df9c72ff9c932f9cb35f8cd37f8cf3af7d13df7d340f6d543f6d746f5d949f5db4cf4dd4ff4df53f4e156f3e35af3e55df2e661f2e865f2ea69f1ec6df1ed71f1ef75f1f179f2f27df2f482f3f586f3f68af4f88ef5f992f6fa96f8fb9af9fc9dfafda1fcffa4\"));\n\nexport var plasma = ramp(colors(\"0d088710078813078916078a19068c1b068d1d068e20068f2206902406912605912805922a05932c05942e05952f059631059733059735049837049938049a3a049a3c049b3e049c3f049c41049d43039e44039e46039f48039f4903a04b03a14c02a14e02a25002a25102a35302a35502a45601a45801a45901a55b01a55c01a65e01a66001a66100a76300a76400a76600a76700a86900a86a00a86c00a86e00a86f00a87100a87201a87401a87501a87701a87801a87a02a87b02a87d03a87e03a88004a88104a78305a78405a78606a68707a68808a68a09a58b0aa58d0ba58e0ca48f0da4910ea3920fa39410a29511a19613a19814a099159f9a169f9c179e9d189d9e199da01a9ca11b9ba21d9aa31e9aa51f99a62098a72197a82296aa2395ab2494ac2694ad2793ae2892b02991b12a90b22b8fb32c8eb42e8db52f8cb6308bb7318ab83289ba3388bb3488bc3587bd3786be3885bf3984c03a83c13b82c23c81c33d80c43e7fc5407ec6417dc7427cc8437bc9447aca457acb4679cc4778cc4977cd4a76ce4b75cf4c74d04d73d14e72d24f71d35171d45270d5536fd5546ed6556dd7566cd8576bd9586ada5a6ada5b69db5c68dc5d67dd5e66de5f65de6164df6263e06363e16462e26561e26660e3685fe4695ee56a5de56b5de66c5ce76e5be76f5ae87059e97158e97257ea7457eb7556eb7655ec7754ed7953ed7a52ee7b51ef7c51ef7e50f07f4ff0804ef1814df1834cf2844bf3854bf3874af48849f48948f58b47f58c46f68d45f68f44f79044f79143f79342f89441f89540f9973ff9983ef99a3efa9b3dfa9c3cfa9e3bfb9f3afba139fba238fca338fca537fca636fca835fca934fdab33fdac33fdae32fdaf31fdb130fdb22ffdb42ffdb52efeb72dfeb82cfeba2cfebb2bfebd2afebe2afec029fdc229fdc328fdc527fdc627fdc827fdca26fdcb26fccd25fcce25fcd025fcd225fbd324fbd524fbd724fad824fada24f9dc24f9dd25f8df25f8e125f7e225f7e425f6e626f6e826f5e926f5eb27f4ed27f3ee27f3f027f2f227f1f426f1f525f0f724f0f921\"));\n","import {linearish} from \"./linear\";\n\nexport default function sequential(interpolator) {\n  var x0 = 0,\n      x1 = 1,\n      clamp = false;\n\n  function scale(x) {\n    var t = (x - x0) / (x1 - x0);\n    return interpolator(clamp ? Math.max(0, Math.min(1, t)) : t);\n  }\n\n  scale.domain = function(_) {\n    return arguments.length ? (x0 = +_[0], x1 = +_[1], scale) : [x0, x1];\n  };\n\n  scale.clamp = function(_) {\n    return arguments.length ? (clamp = !!_, scale) : clamp;\n  };\n\n  scale.interpolator = function(_) {\n    return arguments.length ? (interpolator = _, scale) : interpolator;\n  };\n\n  scale.copy = function() {\n    return sequential(interpolator).domain([x0, x1]).clamp(clamp);\n  };\n\n  return linearish(scale);\n}\n","export default function(specifier) {\n  var n = specifier.length / 6 | 0, colors = new Array(n), i = 0;\n  while (i < n) colors[i] = \"#\" + specifier.slice(i * 6, ++i * 6);\n  return colors;\n}\n","import colors from \"../colors\";\n\nexport default colors(\"7fc97fbeaed4fdc086ffff99386cb0f0027fbf5b17666666\");\n","import colors from \"../colors\";\n\nexport default colors(\"1f77b4ff7f0e2ca02cd627289467bd8c564be377c27f7f7fbcbd2217becf\");\n","import colors from \"../colors\";\n\nexport default colors(\"1b9e77d95f027570b3e7298a66a61ee6ab02a6761d666666\");\n","import colors from \"../colors\";\n\nexport default colors(\"a6cee31f78b4b2df8a33a02cfb9a99e31a1cfdbf6fff7f00cab2d66a3d9affff99b15928\");\n","import colors from \"../colors\";\n\nexport default colors(\"fbb4aeb3cde3ccebc5decbe4fed9a6ffffcce5d8bdfddaecf2f2f2\");\n","import colors from \"../colors\";\n\nexport default colors(\"b3e2cdfdcdaccbd5e8f4cae4e6f5c9fff2aef1e2cccccccc\");\n","import colors from \"../colors\";\n\nexport default colors(\"e41a1c377eb84daf4a984ea3ff7f00ffff33a65628f781bf999999\");\n","import colors from \"../colors\";\n\nexport default colors(\"66c2a5fc8d628da0cbe78ac3a6d854ffd92fe5c494b3b3b3\");\n","import colors from \"../colors\";\n\nexport default colors(\"8dd3c7ffffb3bebadafb807280b1d3fdb462b3de69fccde5d9d9d9bc80bdccebc5ffed6f\");\n","import {interpolateRgbBasis} from \"d3-interpolate\";\n\nexport default function(scheme) {\n  return interpolateRgbBasis(scheme[scheme.length - 1]);\n}\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"d8b365f5f5f55ab4ac\",\n  \"a6611adfc27d80cdc1018571\",\n  \"a6611adfc27df5f5f580cdc1018571\",\n  \"8c510ad8b365f6e8c3c7eae55ab4ac01665e\",\n  \"8c510ad8b365f6e8c3f5f5f5c7eae55ab4ac01665e\",\n  \"8c510abf812ddfc27df6e8c3c7eae580cdc135978f01665e\",\n  \"8c510abf812ddfc27df6e8c3f5f5f5c7eae580cdc135978f01665e\",\n  \"5430058c510abf812ddfc27df6e8c3c7eae580cdc135978f01665e003c30\",\n  \"5430058c510abf812ddfc27df6e8c3f5f5f5c7eae580cdc135978f01665e003c30\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"af8dc3f7f7f77fbf7b\",\n  \"7b3294c2a5cfa6dba0008837\",\n  \"7b3294c2a5cff7f7f7a6dba0008837\",\n  \"762a83af8dc3e7d4e8d9f0d37fbf7b1b7837\",\n  \"762a83af8dc3e7d4e8f7f7f7d9f0d37fbf7b1b7837\",\n  \"762a839970abc2a5cfe7d4e8d9f0d3a6dba05aae611b7837\",\n  \"762a839970abc2a5cfe7d4e8f7f7f7d9f0d3a6dba05aae611b7837\",\n  \"40004b762a839970abc2a5cfe7d4e8d9f0d3a6dba05aae611b783700441b\",\n  \"40004b762a839970abc2a5cfe7d4e8f7f7f7d9f0d3a6dba05aae611b783700441b\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"e9a3c9f7f7f7a1d76a\",\n  \"d01c8bf1b6dab8e1864dac26\",\n  \"d01c8bf1b6daf7f7f7b8e1864dac26\",\n  \"c51b7de9a3c9fde0efe6f5d0a1d76a4d9221\",\n  \"c51b7de9a3c9fde0eff7f7f7e6f5d0a1d76a4d9221\",\n  \"c51b7dde77aef1b6dafde0efe6f5d0b8e1867fbc414d9221\",\n  \"c51b7dde77aef1b6dafde0eff7f7f7e6f5d0b8e1867fbc414d9221\",\n  \"8e0152c51b7dde77aef1b6dafde0efe6f5d0b8e1867fbc414d9221276419\",\n  \"8e0152c51b7dde77aef1b6dafde0eff7f7f7e6f5d0b8e1867fbc414d9221276419\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"998ec3f7f7f7f1a340\",\n  \"5e3c99b2abd2fdb863e66101\",\n  \"5e3c99b2abd2f7f7f7fdb863e66101\",\n  \"542788998ec3d8daebfee0b6f1a340b35806\",\n  \"542788998ec3d8daebf7f7f7fee0b6f1a340b35806\",\n  \"5427888073acb2abd2d8daebfee0b6fdb863e08214b35806\",\n  \"5427888073acb2abd2d8daebf7f7f7fee0b6fdb863e08214b35806\",\n  \"2d004b5427888073acb2abd2d8daebfee0b6fdb863e08214b358067f3b08\",\n  \"2d004b5427888073acb2abd2d8daebf7f7f7fee0b6fdb863e08214b358067f3b08\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"ef8a62f7f7f767a9cf\",\n  \"ca0020f4a58292c5de0571b0\",\n  \"ca0020f4a582f7f7f792c5de0571b0\",\n  \"b2182bef8a62fddbc7d1e5f067a9cf2166ac\",\n  \"b2182bef8a62fddbc7f7f7f7d1e5f067a9cf2166ac\",\n  \"b2182bd6604df4a582fddbc7d1e5f092c5de4393c32166ac\",\n  \"b2182bd6604df4a582fddbc7f7f7f7d1e5f092c5de4393c32166ac\",\n  \"67001fb2182bd6604df4a582fddbc7d1e5f092c5de4393c32166ac053061\",\n  \"67001fb2182bd6604df4a582fddbc7f7f7f7d1e5f092c5de4393c32166ac053061\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"ef8a62ffffff999999\",\n  \"ca0020f4a582bababa404040\",\n  \"ca0020f4a582ffffffbababa404040\",\n  \"b2182bef8a62fddbc7e0e0e09999994d4d4d\",\n  \"b2182bef8a62fddbc7ffffffe0e0e09999994d4d4d\",\n  \"b2182bd6604df4a582fddbc7e0e0e0bababa8787874d4d4d\",\n  \"b2182bd6604df4a582fddbc7ffffffe0e0e0bababa8787874d4d4d\",\n  \"67001fb2182bd6604df4a582fddbc7e0e0e0bababa8787874d4d4d1a1a1a\",\n  \"67001fb2182bd6604df4a582fddbc7ffffffe0e0e0bababa8787874d4d4d1a1a1a\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"fc8d59ffffbf91bfdb\",\n  \"d7191cfdae61abd9e92c7bb6\",\n  \"d7191cfdae61ffffbfabd9e92c7bb6\",\n  \"d73027fc8d59fee090e0f3f891bfdb4575b4\",\n  \"d73027fc8d59fee090ffffbfe0f3f891bfdb4575b4\",\n  \"d73027f46d43fdae61fee090e0f3f8abd9e974add14575b4\",\n  \"d73027f46d43fdae61fee090ffffbfe0f3f8abd9e974add14575b4\",\n  \"a50026d73027f46d43fdae61fee090e0f3f8abd9e974add14575b4313695\",\n  \"a50026d73027f46d43fdae61fee090ffffbfe0f3f8abd9e974add14575b4313695\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"fc8d59ffffbf91cf60\",\n  \"d7191cfdae61a6d96a1a9641\",\n  \"d7191cfdae61ffffbfa6d96a1a9641\",\n  \"d73027fc8d59fee08bd9ef8b91cf601a9850\",\n  \"d73027fc8d59fee08bffffbfd9ef8b91cf601a9850\",\n  \"d73027f46d43fdae61fee08bd9ef8ba6d96a66bd631a9850\",\n  \"d73027f46d43fdae61fee08bffffbfd9ef8ba6d96a66bd631a9850\",\n  \"a50026d73027f46d43fdae61fee08bd9ef8ba6d96a66bd631a9850006837\",\n  \"a50026d73027f46d43fdae61fee08bffffbfd9ef8ba6d96a66bd631a9850006837\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"fc8d59ffffbf99d594\",\n  \"d7191cfdae61abdda42b83ba\",\n  \"d7191cfdae61ffffbfabdda42b83ba\",\n  \"d53e4ffc8d59fee08be6f59899d5943288bd\",\n  \"d53e4ffc8d59fee08bffffbfe6f59899d5943288bd\",\n  \"d53e4ff46d43fdae61fee08be6f598abdda466c2a53288bd\",\n  \"d53e4ff46d43fdae61fee08bffffbfe6f598abdda466c2a53288bd\",\n  \"9e0142d53e4ff46d43fdae61fee08be6f598abdda466c2a53288bd5e4fa2\",\n  \"9e0142d53e4ff46d43fdae61fee08bffffbfe6f598abdda466c2a53288bd5e4fa2\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"e5f5f999d8c92ca25f\",\n  \"edf8fbb2e2e266c2a4238b45\",\n  \"edf8fbb2e2e266c2a42ca25f006d2c\",\n  \"edf8fbccece699d8c966c2a42ca25f006d2c\",\n  \"edf8fbccece699d8c966c2a441ae76238b45005824\",\n  \"f7fcfde5f5f9ccece699d8c966c2a441ae76238b45005824\",\n  \"f7fcfde5f5f9ccece699d8c966c2a441ae76238b45006d2c00441b\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"e0ecf49ebcda8856a7\",\n  \"edf8fbb3cde38c96c688419d\",\n  \"edf8fbb3cde38c96c68856a7810f7c\",\n  \"edf8fbbfd3e69ebcda8c96c68856a7810f7c\",\n  \"edf8fbbfd3e69ebcda8c96c68c6bb188419d6e016b\",\n  \"f7fcfde0ecf4bfd3e69ebcda8c96c68c6bb188419d6e016b\",\n  \"f7fcfde0ecf4bfd3e69ebcda8c96c68c6bb188419d810f7c4d004b\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"e0f3dba8ddb543a2ca\",\n  \"f0f9e8bae4bc7bccc42b8cbe\",\n  \"f0f9e8bae4bc7bccc443a2ca0868ac\",\n  \"f0f9e8ccebc5a8ddb57bccc443a2ca0868ac\",\n  \"f0f9e8ccebc5a8ddb57bccc44eb3d32b8cbe08589e\",\n  \"f7fcf0e0f3dbccebc5a8ddb57bccc44eb3d32b8cbe08589e\",\n  \"f7fcf0e0f3dbccebc5a8ddb57bccc44eb3d32b8cbe0868ac084081\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"fee8c8fdbb84e34a33\",\n  \"fef0d9fdcc8afc8d59d7301f\",\n  \"fef0d9fdcc8afc8d59e34a33b30000\",\n  \"fef0d9fdd49efdbb84fc8d59e34a33b30000\",\n  \"fef0d9fdd49efdbb84fc8d59ef6548d7301f990000\",\n  \"fff7ecfee8c8fdd49efdbb84fc8d59ef6548d7301f990000\",\n  \"fff7ecfee8c8fdd49efdbb84fc8d59ef6548d7301fb300007f0000\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"ece2f0a6bddb1c9099\",\n  \"f6eff7bdc9e167a9cf02818a\",\n  \"f6eff7bdc9e167a9cf1c9099016c59\",\n  \"f6eff7d0d1e6a6bddb67a9cf1c9099016c59\",\n  \"f6eff7d0d1e6a6bddb67a9cf3690c002818a016450\",\n  \"fff7fbece2f0d0d1e6a6bddb67a9cf3690c002818a016450\",\n  \"fff7fbece2f0d0d1e6a6bddb67a9cf3690c002818a016c59014636\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"ece7f2a6bddb2b8cbe\",\n  \"f1eef6bdc9e174a9cf0570b0\",\n  \"f1eef6bdc9e174a9cf2b8cbe045a8d\",\n  \"f1eef6d0d1e6a6bddb74a9cf2b8cbe045a8d\",\n  \"f1eef6d0d1e6a6bddb74a9cf3690c00570b0034e7b\",\n  \"fff7fbece7f2d0d1e6a6bddb74a9cf3690c00570b0034e7b\",\n  \"fff7fbece7f2d0d1e6a6bddb74a9cf3690c00570b0045a8d023858\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"e7e1efc994c7dd1c77\",\n  \"f1eef6d7b5d8df65b0ce1256\",\n  \"f1eef6d7b5d8df65b0dd1c77980043\",\n  \"f1eef6d4b9dac994c7df65b0dd1c77980043\",\n  \"f1eef6d4b9dac994c7df65b0e7298ace125691003f\",\n  \"f7f4f9e7e1efd4b9dac994c7df65b0e7298ace125691003f\",\n  \"f7f4f9e7e1efd4b9dac994c7df65b0e7298ace125698004367001f\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"fde0ddfa9fb5c51b8a\",\n  \"feebe2fbb4b9f768a1ae017e\",\n  \"feebe2fbb4b9f768a1c51b8a7a0177\",\n  \"feebe2fcc5c0fa9fb5f768a1c51b8a7a0177\",\n  \"feebe2fcc5c0fa9fb5f768a1dd3497ae017e7a0177\",\n  \"fff7f3fde0ddfcc5c0fa9fb5f768a1dd3497ae017e7a0177\",\n  \"fff7f3fde0ddfcc5c0fa9fb5f768a1dd3497ae017e7a017749006a\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"edf8b17fcdbb2c7fb8\",\n  \"ffffcca1dab441b6c4225ea8\",\n  \"ffffcca1dab441b6c42c7fb8253494\",\n  \"ffffccc7e9b47fcdbb41b6c42c7fb8253494\",\n  \"ffffccc7e9b47fcdbb41b6c41d91c0225ea80c2c84\",\n  \"ffffd9edf8b1c7e9b47fcdbb41b6c41d91c0225ea80c2c84\",\n  \"ffffd9edf8b1c7e9b47fcdbb41b6c41d91c0225ea8253494081d58\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"f7fcb9addd8e31a354\",\n  \"ffffccc2e69978c679238443\",\n  \"ffffccc2e69978c67931a354006837\",\n  \"ffffccd9f0a3addd8e78c67931a354006837\",\n  \"ffffccd9f0a3addd8e78c67941ab5d238443005a32\",\n  \"ffffe5f7fcb9d9f0a3addd8e78c67941ab5d238443005a32\",\n  \"ffffe5f7fcb9d9f0a3addd8e78c67941ab5d238443006837004529\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"fff7bcfec44fd95f0e\",\n  \"ffffd4fed98efe9929cc4c02\",\n  \"ffffd4fed98efe9929d95f0e993404\",\n  \"ffffd4fee391fec44ffe9929d95f0e993404\",\n  \"ffffd4fee391fec44ffe9929ec7014cc4c028c2d04\",\n  \"ffffe5fff7bcfee391fec44ffe9929ec7014cc4c028c2d04\",\n  \"ffffe5fff7bcfee391fec44ffe9929ec7014cc4c02993404662506\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"ffeda0feb24cf03b20\",\n  \"ffffb2fecc5cfd8d3ce31a1c\",\n  \"ffffb2fecc5cfd8d3cf03b20bd0026\",\n  \"ffffb2fed976feb24cfd8d3cf03b20bd0026\",\n  \"ffffb2fed976feb24cfd8d3cfc4e2ae31a1cb10026\",\n  \"ffffccffeda0fed976feb24cfd8d3cfc4e2ae31a1cb10026\",\n  \"ffffccffeda0fed976feb24cfd8d3cfc4e2ae31a1cbd0026800026\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"deebf79ecae13182bd\",\n  \"eff3ffbdd7e76baed62171b5\",\n  \"eff3ffbdd7e76baed63182bd08519c\",\n  \"eff3ffc6dbef9ecae16baed63182bd08519c\",\n  \"eff3ffc6dbef9ecae16baed64292c62171b5084594\",\n  \"f7fbffdeebf7c6dbef9ecae16baed64292c62171b5084594\",\n  \"f7fbffdeebf7c6dbef9ecae16baed64292c62171b508519c08306b\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"e5f5e0a1d99b31a354\",\n  \"edf8e9bae4b374c476238b45\",\n  \"edf8e9bae4b374c47631a354006d2c\",\n  \"edf8e9c7e9c0a1d99b74c47631a354006d2c\",\n  \"edf8e9c7e9c0a1d99b74c47641ab5d238b45005a32\",\n  \"f7fcf5e5f5e0c7e9c0a1d99b74c47641ab5d238b45005a32\",\n  \"f7fcf5e5f5e0c7e9c0a1d99b74c47641ab5d238b45006d2c00441b\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"f0f0f0bdbdbd636363\",\n  \"f7f7f7cccccc969696525252\",\n  \"f7f7f7cccccc969696636363252525\",\n  \"f7f7f7d9d9d9bdbdbd969696636363252525\",\n  \"f7f7f7d9d9d9bdbdbd969696737373525252252525\",\n  \"fffffff0f0f0d9d9d9bdbdbd969696737373525252252525\",\n  \"fffffff0f0f0d9d9d9bdbdbd969696737373525252252525000000\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"efedf5bcbddc756bb1\",\n  \"f2f0f7cbc9e29e9ac86a51a3\",\n  \"f2f0f7cbc9e29e9ac8756bb154278f\",\n  \"f2f0f7dadaebbcbddc9e9ac8756bb154278f\",\n  \"f2f0f7dadaebbcbddc9e9ac8807dba6a51a34a1486\",\n  \"fcfbfdefedf5dadaebbcbddc9e9ac8807dba6a51a34a1486\",\n  \"fcfbfdefedf5dadaebbcbddc9e9ac8807dba6a51a354278f3f007d\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"fee0d2fc9272de2d26\",\n  \"fee5d9fcae91fb6a4acb181d\",\n  \"fee5d9fcae91fb6a4ade2d26a50f15\",\n  \"fee5d9fcbba1fc9272fb6a4ade2d26a50f15\",\n  \"fee5d9fcbba1fc9272fb6a4aef3b2ccb181d99000d\",\n  \"fff5f0fee0d2fcbba1fc9272fb6a4aef3b2ccb181d99000d\",\n  \"fff5f0fee0d2fcbba1fc9272fb6a4aef3b2ccb181da50f1567000d\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"fee6cefdae6be6550d\",\n  \"feeddefdbe85fd8d3cd94701\",\n  \"feeddefdbe85fd8d3ce6550da63603\",\n  \"feeddefdd0a2fdae6bfd8d3ce6550da63603\",\n  \"feeddefdd0a2fdae6bfd8d3cf16913d948018c2d04\",\n  \"fff5ebfee6cefdd0a2fdae6bfd8d3cf16913d948018c2d04\",\n  \"fff5ebfee6cefdd0a2fdae6bfd8d3cf16913d94801a636037f2704\"\n).map(colors);\n\nexport default ramp(scheme);\n","import {cubehelix} from \"d3-color\";\nimport {interpolateCubehelixLong} from \"d3-interpolate\";\n\nexport default interpolateCubehelixLong(cubehelix(300, 0.5, 0.0), cubehelix(-240, 0.5, 1.0));\n","import {cubehelix} from \"d3-color\";\nimport {interpolateCubehelixLong} from \"d3-interpolate\";\n\nexport var warm = interpolateCubehelixLong(cubehelix(-100, 0.75, 0.35), cubehelix(80, 1.50, 0.8));\n\nexport var cool = interpolateCubehelixLong(cubehelix(260, 0.75, 0.35), cubehelix(80, 1.50, 0.8));\n\nvar c = cubehelix();\n\nexport default function(t) {\n  if (t < 0 || t > 1) t -= Math.floor(t);\n  var ts = Math.abs(t - 0.5);\n  c.h = 360 * t - 100;\n  c.s = 1.5 - 1.5 * ts;\n  c.l = 0.8 - 0.9 * ts;\n  return c + \"\";\n}\n","import {rgb} from \"d3-color\";\n\nvar c = rgb(),\n    pi_1_3 = Math.PI / 3,\n    pi_2_3 = Math.PI * 2 / 3;\n\nexport default function(t) {\n  var x;\n  t = (0.5 - t) * Math.PI;\n  c.r = 255 * (x = Math.sin(t)) * x;\n  c.g = 255 * (x = Math.sin(t + pi_1_3)) * x;\n  c.b = 255 * (x = Math.sin(t + pi_2_3)) * x;\n  return c + \"\";\n}\n","import colors from \"../colors\";\n\nfunction ramp(range) {\n  var n = range.length;\n  return function(t) {\n    return range[Math.max(0, Math.min(n - 1, Math.floor(t * n)))];\n  };\n}\n\nexport default ramp(colors(\"44015444025645045745055946075a46085c460a5d460b5e470d60470e6147106347116447136548146748166848176948186a481a6c481b6d481c6e481d6f481f70482071482173482374482475482576482677482878482979472a7a472c7a472d7b472e7c472f7d46307e46327e46337f463480453581453781453882443983443a83443b84433d84433e85423f854240864241864142874144874045884046883f47883f48893e49893e4a893e4c8a3d4d8a3d4e8a3c4f8a3c508b3b518b3b528b3a538b3a548c39558c39568c38588c38598c375a8c375b8d365c8d365d8d355e8d355f8d34608d34618d33628d33638d32648e32658e31668e31678e31688e30698e306a8e2f6b8e2f6c8e2e6d8e2e6e8e2e6f8e2d708e2d718e2c718e2c728e2c738e2b748e2b758e2a768e2a778e2a788e29798e297a8e297b8e287c8e287d8e277e8e277f8e27808e26818e26828e26828e25838e25848e25858e24868e24878e23888e23898e238a8d228b8d228c8d228d8d218e8d218f8d21908d21918c20928c20928c20938c1f948c1f958b1f968b1f978b1f988b1f998a1f9a8a1e9b8a1e9c891e9d891f9e891f9f881fa0881fa1881fa1871fa28720a38620a48621a58521a68522a78522a88423a98324aa8325ab8225ac8226ad8127ad8128ae8029af7f2ab07f2cb17e2db27d2eb37c2fb47c31b57b32b67a34b67935b77937b87838b9773aba763bbb753dbc743fbc7340bd7242be7144bf7046c06f48c16e4ac16d4cc26c4ec36b50c46a52c56954c56856c66758c7655ac8645cc8635ec96260ca6063cb5f65cb5e67cc5c69cd5b6ccd5a6ece5870cf5773d05675d05477d1537ad1517cd2507fd34e81d34d84d44b86d54989d5488bd6468ed64590d74393d74195d84098d83e9bd93c9dd93ba0da39a2da37a5db36a8db34aadc32addc30b0dd2fb2dd2db5de2bb8de29bade28bddf26c0df25c2df23c5e021c8e020cae11fcde11dd0e11cd2e21bd5e21ad8e219dae319dde318dfe318e2e418e5e419e7e419eae51aece51befe51cf1e51df4e61ef6e620f8e621fbe723fde725\"));\n\nexport var magma = ramp(colors(\"00000401000501010601010802010902020b02020d03030f03031204041405041606051806051a07061c08071e0907200a08220b09240c09260d0a290e0b2b100b2d110c2f120d31130d34140e36150e38160f3b180f3d19103f1a10421c10441d11471e114920114b21114e22115024125325125527125829115a2a115c2c115f2d11612f116331116533106734106936106b38106c390f6e3b0f703d0f713f0f72400f74420f75440f764510774710784910784a10794c117a4e117b4f127b51127c52137c54137d56147d57157e59157e5a167e5c167f5d177f5f187f601880621980641a80651a80671b80681c816a1c816b1d816d1d816e1e81701f81721f817320817521817621817822817922827b23827c23827e24828025828125818326818426818627818827818928818b29818c29818e2a81902a81912b81932b80942c80962c80982d80992d809b2e7f9c2e7f9e2f7fa02f7fa1307ea3307ea5317ea6317da8327daa337dab337cad347cae347bb0357bb2357bb3367ab5367ab73779b83779ba3878bc3978bd3977bf3a77c03a76c23b75c43c75c53c74c73d73c83e73ca3e72cc3f71cd4071cf4070d0416fd2426fd3436ed5446dd6456cd8456cd9466bdb476adc4869de4968df4a68e04c67e24d66e34e65e44f64e55064e75263e85362e95462ea5661eb5760ec5860ed5a5fee5b5eef5d5ef05f5ef1605df2625df2645cf3655cf4675cf4695cf56b5cf66c5cf66e5cf7705cf7725cf8745cf8765cf9785df9795df97b5dfa7d5efa7f5efa815ffb835ffb8560fb8761fc8961fc8a62fc8c63fc8e64fc9065fd9266fd9467fd9668fd9869fd9a6afd9b6bfe9d6cfe9f6dfea16efea36ffea571fea772fea973feaa74feac76feae77feb078feb27afeb47bfeb67cfeb77efeb97ffebb81febd82febf84fec185fec287fec488fec68afec88cfeca8dfecc8ffecd90fecf92fed194fed395fed597fed799fed89afdda9cfddc9efddea0fde0a1fde2a3fde3a5fde5a7fde7a9fde9aafdebacfcecaefceeb0fcf0b2fcf2b4fcf4b6fcf6b8fcf7b9fcf9bbfcfbbdfcfdbf\"));\n\nexport var inferno = ramp(colors(\"00000401000501010601010802010a02020c02020e03021004031204031405041706041907051b08051d09061f0a07220b07240c08260d08290e092b10092d110a30120a32140b34150b37160b39180c3c190c3e1b0c411c0c431e0c451f0c48210c4a230c4c240c4f260c51280b53290b552b0b572d0b592f0a5b310a5c320a5e340a5f3609613809623909633b09643d09653e0966400a67420a68440a68450a69470b6a490b6a4a0c6b4c0c6b4d0d6c4f0d6c510e6c520e6d540f6d550f6d57106e59106e5a116e5c126e5d126e5f136e61136e62146e64156e65156e67166e69166e6a176e6c186e6d186e6f196e71196e721a6e741a6e751b6e771c6d781c6d7a1d6d7c1d6d7d1e6d7f1e6c801f6c82206c84206b85216b87216b88226a8a226a8c23698d23698f24699025689225689326679526679727669827669a28659b29649d29649f2a63a02a63a22b62a32c61a52c60a62d60a82e5fa92e5eab2f5ead305dae305cb0315bb1325ab3325ab43359b63458b73557b93556ba3655bc3754bd3853bf3952c03a51c13a50c33b4fc43c4ec63d4dc73e4cc83f4bca404acb4149cc4248ce4347cf4446d04545d24644d34743d44842d54a41d74b3fd84c3ed94d3dda4e3cdb503bdd513ade5238df5337e05536e15635e25734e35933e45a31e55c30e65d2fe75e2ee8602de9612bea632aeb6429eb6628ec6726ed6925ee6a24ef6c23ef6e21f06f20f1711ff1731df2741cf3761bf37819f47918f57b17f57d15f67e14f68013f78212f78410f8850ff8870ef8890cf98b0bf98c0af98e09fa9008fa9207fa9407fb9606fb9706fb9906fb9b06fb9d07fc9f07fca108fca309fca50afca60cfca80dfcaa0ffcac11fcae12fcb014fcb216fcb418fbb61afbb81dfbba1ffbbc21fbbe23fac026fac228fac42afac62df9c72ff9c932f9cb35f8cd37f8cf3af7d13df7d340f6d543f6d746f5d949f5db4cf4dd4ff4df53f4e156f3e35af3e55df2e661f2e865f2ea69f1ec6df1ed71f1ef75f1f179f2f27df2f482f3f586f3f68af4f88ef5f992f6fa96f8fb9af9fc9dfafda1fcffa4\"));\n\nexport var plasma = ramp(colors(\"0d088710078813078916078a19068c1b068d1d068e20068f2206902406912605912805922a05932c05942e05952f059631059733059735049837049938049a3a049a3c049b3e049c3f049c41049d43039e44039e46039f48039f4903a04b03a14c02a14e02a25002a25102a35302a35502a45601a45801a45901a55b01a55c01a65e01a66001a66100a76300a76400a76600a76700a86900a86a00a86c00a86e00a86f00a87100a87201a87401a87501a87701a87801a87a02a87b02a87d03a87e03a88004a88104a78305a78405a78606a68707a68808a68a09a58b0aa58d0ba58e0ca48f0da4910ea3920fa39410a29511a19613a19814a099159f9a169f9c179e9d189d9e199da01a9ca11b9ba21d9aa31e9aa51f99a62098a72197a82296aa2395ab2494ac2694ad2793ae2892b02991b12a90b22b8fb32c8eb42e8db52f8cb6308bb7318ab83289ba3388bb3488bc3587bd3786be3885bf3984c03a83c13b82c23c81c33d80c43e7fc5407ec6417dc7427cc8437bc9447aca457acb4679cc4778cc4977cd4a76ce4b75cf4c74d04d73d14e72d24f71d35171d45270d5536fd5546ed6556dd7566cd8576bd9586ada5a6ada5b69db5c68dc5d67dd5e66de5f65de6164df6263e06363e16462e26561e26660e3685fe4695ee56a5de56b5de66c5ce76e5be76f5ae87059e97158e97257ea7457eb7556eb7655ec7754ed7953ed7a52ee7b51ef7c51ef7e50f07f4ff0804ef1814df1834cf2844bf3854bf3874af48849f48948f58b47f58c46f68d45f68f44f79044f79143f79342f89441f89540f9973ff9983ef99a3efa9b3dfa9c3cfa9e3bfb9f3afba139fba238fca338fca537fca636fca835fca934fdab33fdac33fdae32fdaf31fdb130fdb22ffdb42ffdb52efeb72dfeb82cfeba2cfebb2bfebd2afebe2afec029fdc229fdc328fdc527fdc627fdc827fdca26fdcb26fccd25fcce25fcd025fcd225fbd324fbd524fbd724fad824fada24f9dc24f9dd25f8df25f8e125f7e225f7e425f6e626f6e826f5e926f5eb27f4ed27f3ee27f3f027f2f227f1f426f1f525f0f724f0f921\"));\n","export const UNIT_GLOBAL_NAMESPACE = 'app.units';\nexport const UNIT_LOCAL_NAMESPACE = 'local.units';\nexport const LAYER_LOCAL_NAMESPACE = 'local.layers';\nexport const LAYER_GLOBAL_NAMESPACE = 'app.layers';\nexport const GROUP_GLOBAL_NAMESPACE = 'app.group';\nexport const GROUP_LOCAL_NAMESPACE = 'local.group';\nexport const CANVAS_LOCAL_NAMESPACE = 'local.canvas';\nexport const CANVAS_GLOBAL_NAMESPACE = 'app.canvas';\n\n","const ReservedFields = {\n    ROW_ID: '__id__'\n};\n\nexport default ReservedFields;\n","const CommonProps = {\n    ACTION_INF: 'actionInf',\n    ON_LAYER_DRAW: 'onLayerDraw',\n    MATRIX_CREATED: 'matrixCreated'\n};\n\nexport default CommonProps;\n","export const COORD_TYPES = {\n    POLAR: 'polar',\n    CARTESIAN: 'cartesian'\n};\nexport const DATA_TYPE = {\n    FUNCTION: 'function',\n    STRING: 'string',\n    NUMBER: 'number',\n    BOOLEAN: 'Boolean'\n};\nexport const SORT_ORDER_ASCENDING = 'asc';\nexport const SORT_ORDER_DESCENDING = 'desc';\n","export var slice = Array.prototype.slice;\n","export default function(x) {\n  return x;\n}\n","import {slice} from \"./array\";\nimport identity from \"./identity\";\n\nvar top = 1,\n    right = 2,\n    bottom = 3,\n    left = 4,\n    epsilon = 1e-6;\n\nfunction translateX(x) {\n  return \"translate(\" + (x + 0.5) + \",0)\";\n}\n\nfunction translateY(y) {\n  return \"translate(0,\" + (y + 0.5) + \")\";\n}\n\nfunction number(scale) {\n  return function(d) {\n    return +scale(d);\n  };\n}\n\nfunction center(scale) {\n  var offset = Math.max(0, scale.bandwidth() - 1) / 2; // Adjust for 0.5px offset.\n  if (scale.round()) offset = Math.round(offset);\n  return function(d) {\n    return +scale(d) + offset;\n  };\n}\n\nfunction entering() {\n  return !this.__axis;\n}\n\nfunction axis(orient, scale) {\n  var tickArguments = [],\n      tickValues = null,\n      tickFormat = null,\n      tickTransform = null,\n      tickSizeInner = 6,\n      tickSizeOuter = 6,\n      tickPadding = 3,\n      k = orient === top || orient === left ? -1 : 1,\n      x = orient === left || orient === right ? \"x\" : \"y\",\n      transform = orient === top || orient === bottom ? translateX : translateY;\n\n  function axis(context) {\n    var values = tickValues == null ? (scale.ticks ? scale.ticks.apply(scale, tickArguments) : scale.domain()) : tickValues,\n        format = tickFormat == null ? (scale.tickFormat ? scale.tickFormat.apply(scale, tickArguments) : identity) : tickFormat,\n        spacing = Math.max(tickSizeInner, 0) + tickPadding,\n        range = scale.range(),\n        range0 = +range[0] + 0.5,\n        range1 = +range[range.length - 1] + 0.5,\n        position = (scale.bandwidth ? center : number)(scale.copy()),\n        selection = context.selection ? context.selection() : context,\n        path = selection.selectAll(\".domain\").data([null]),\n        tick = selection.selectAll(\".tick\").data(values, scale).order(),\n        tickExit = tick.exit(),\n        tickEnter = tick.enter().append(\"g\").attr(\"class\", \"tick\"),\n        line = tick.select(\"line\"),\n        text = tick.select(\"text\");\n\n    path = path.merge(path.enter().insert(\"path\", \".tick\")\n        .attr(\"class\", \"domain\")\n        .attr(\"stroke\", \"#000\"));\n\n    tick = tick.merge(tickEnter);\n\n    line = line.merge(tickEnter.append(\"line\")\n        .attr(\"stroke\", \"#000\")\n        .attr(x + \"2\", k * tickSizeInner));\n\n    text = text.merge(tickEnter.append(\"text\")\n        .attr(\"fill\", \"#000\")\n        .attr(x, k * spacing)\n        .attr(\"dy\", orient === top ? \"0em\" : orient === bottom ? \"0.71em\" : \"0.32em\"))\n        .style('transform', tickTransform);\n\n    if (context !== selection) {\n      path = path.transition(context);\n      tick = tick.transition(context);\n      line = line.transition(context);\n      text = text.transition(context);\n\n      tickExit = tickExit.transition(context)\n          .attr(\"opacity\", epsilon)\n          .attr(\"transform\", function(d) { return isFinite(d = position(d)) ? transform(d) : this.getAttribute(\"transform\"); });\n\n      tickEnter\n          .attr(\"opacity\", epsilon)\n          .attr(\"transform\", function(d) { var p = this.parentNode.__axis; return transform(p && isFinite(p = p(d)) ? p : position(d)); });\n    }\n\n    tickExit.remove();\n\n    path\n        .attr(\"d\", orient === left || orient == right\n            ? \"M\" + k * tickSizeOuter + \",\" + range0 + \"H0.5V\" + range1 + \"H\" + k * tickSizeOuter\n            : \"M\" + range0 + \",\" + k * tickSizeOuter + \"V0.5H\" + range1 + \"V\" + k * tickSizeOuter);\n\n    tick\n        .attr(\"opacity\", 1)\n        .attr(\"transform\", function(d) { return transform(position(d)); });\n\n    line\n        .attr(x + \"2\", k * tickSizeInner);\n\n    text\n        .attr(x, k * spacing)\n        .text(format);\n\n    selection.filter(entering)\n        .attr(\"fill\", \"none\")\n        .attr(\"font-size\", 10)\n        .attr(\"font-family\", \"sans-serif\")\n        .attr(\"text-anchor\", orient === right ? \"start\" : orient === left ? \"end\" : \"middle\");\n\n    selection\n        .each(function() { this.__axis = position; });\n  }\n\n  axis.scale = function(_) {\n    return arguments.length ? (scale = _, axis) : scale;\n  };\n\n  axis.tickTransform = function(_) {\n    return arguments.length ? (tickTransform = _, axis) : tickTransform;\n  };\n\n  axis.ticks = function() {\n    return tickArguments = slice.call(arguments), axis;\n  };\n\n  axis.tickArguments = function(_) {\n    return arguments.length ? (tickArguments = _ == null ? [] : slice.call(_), axis) : tickArguments.slice();\n  };\n\n  axis.tickValues = function(_) {\n    return arguments.length ? (tickValues = _ == null ? null : slice.call(_), axis) : tickValues && tickValues.slice();\n  };\n\n  axis.tickFormat = function(_) {\n    return arguments.length ? (tickFormat = _, axis) : tickFormat;\n  };\n\n  axis.tickSize = function(_) {\n    return arguments.length ? (tickSizeInner = tickSizeOuter = +_, axis) : tickSizeInner;\n  };\n\n  axis.tickSizeInner = function(_) {\n    return arguments.length ? (tickSizeInner = +_, axis) : tickSizeInner;\n  };\n\n  axis.tickSizeOuter = function(_) {\n    return arguments.length ? (tickSizeOuter = +_, axis) : tickSizeOuter;\n  };\n\n  axis.tickPadding = function(_) {\n    return arguments.length ? (tickPadding = +_, axis) : tickPadding;\n  };\n\n  return axis;\n}\n\nexport function axisTop(scale) {\n  return axis(top, scale);\n}\n\nexport function axisRight(scale) {\n  return axis(right, scale);\n}\n\nexport function axisBottom(scale) {\n  return axis(bottom, scale);\n}\n\nexport function axisLeft(scale) {\n  return axis(left, scale);\n}\n","var pi = Math.PI,\n    tau = 2 * pi,\n    epsilon = 1e-6,\n    tauEpsilon = tau - epsilon;\n\nfunction Path() {\n  this._x0 = this._y0 = // start of current subpath\n  this._x1 = this._y1 = null; // end of current subpath\n  this._ = \"\";\n}\n\nfunction path() {\n  return new Path;\n}\n\nPath.prototype = path.prototype = {\n  constructor: Path,\n  moveTo: function(x, y) {\n    this._ += \"M\" + (this._x0 = this._x1 = +x) + \",\" + (this._y0 = this._y1 = +y);\n  },\n  closePath: function() {\n    if (this._x1 !== null) {\n      this._x1 = this._x0, this._y1 = this._y0;\n      this._ += \"Z\";\n    }\n  },\n  lineTo: function(x, y) {\n    this._ += \"L\" + (this._x1 = +x) + \",\" + (this._y1 = +y);\n  },\n  quadraticCurveTo: function(x1, y1, x, y) {\n    this._ += \"Q\" + (+x1) + \",\" + (+y1) + \",\" + (this._x1 = +x) + \",\" + (this._y1 = +y);\n  },\n  bezierCurveTo: function(x1, y1, x2, y2, x, y) {\n    this._ += \"C\" + (+x1) + \",\" + (+y1) + \",\" + (+x2) + \",\" + (+y2) + \",\" + (this._x1 = +x) + \",\" + (this._y1 = +y);\n  },\n  arcTo: function(x1, y1, x2, y2, r) {\n    x1 = +x1, y1 = +y1, x2 = +x2, y2 = +y2, r = +r;\n    var x0 = this._x1,\n        y0 = this._y1,\n        x21 = x2 - x1,\n        y21 = y2 - y1,\n        x01 = x0 - x1,\n        y01 = y0 - y1,\n        l01_2 = x01 * x01 + y01 * y01;\n\n    // Is the radius negative? Error.\n    if (r < 0) throw new Error(\"negative radius: \" + r);\n\n    // Is this path empty? Move to (x1,y1).\n    if (this._x1 === null) {\n      this._ += \"M\" + (this._x1 = x1) + \",\" + (this._y1 = y1);\n    }\n\n    // Or, is (x1,y1) coincident with (x0,y0)? Do nothing.\n    else if (!(l01_2 > epsilon));\n\n    // Or, are (x0,y0), (x1,y1) and (x2,y2) collinear?\n    // Equivalently, is (x1,y1) coincident with (x2,y2)?\n    // Or, is the radius zero? Line to (x1,y1).\n    else if (!(Math.abs(y01 * x21 - y21 * x01) > epsilon) || !r) {\n      this._ += \"L\" + (this._x1 = x1) + \",\" + (this._y1 = y1);\n    }\n\n    // Otherwise, draw an arc!\n    else {\n      var x20 = x2 - x0,\n          y20 = y2 - y0,\n          l21_2 = x21 * x21 + y21 * y21,\n          l20_2 = x20 * x20 + y20 * y20,\n          l21 = Math.sqrt(l21_2),\n          l01 = Math.sqrt(l01_2),\n          l = r * Math.tan((pi - Math.acos((l21_2 + l01_2 - l20_2) / (2 * l21 * l01))) / 2),\n          t01 = l / l01,\n          t21 = l / l21;\n\n      // If the start tangent is not coincident with (x0,y0), line to.\n      if (Math.abs(t01 - 1) > epsilon) {\n        this._ += \"L\" + (x1 + t01 * x01) + \",\" + (y1 + t01 * y01);\n      }\n\n      this._ += \"A\" + r + \",\" + r + \",0,0,\" + (+(y01 * x20 > x01 * y20)) + \",\" + (this._x1 = x1 + t21 * x21) + \",\" + (this._y1 = y1 + t21 * y21);\n    }\n  },\n  arc: function(x, y, r, a0, a1, ccw) {\n    x = +x, y = +y, r = +r;\n    var dx = r * Math.cos(a0),\n        dy = r * Math.sin(a0),\n        x0 = x + dx,\n        y0 = y + dy,\n        cw = 1 ^ ccw,\n        da = ccw ? a0 - a1 : a1 - a0;\n\n    // Is the radius negative? Error.\n    if (r < 0) throw new Error(\"negative radius: \" + r);\n\n    // Is this path empty? Move to (x0,y0).\n    if (this._x1 === null) {\n      this._ += \"M\" + x0 + \",\" + y0;\n    }\n\n    // Or, is (x0,y0) not coincident with the previous point? Line to (x0,y0).\n    else if (Math.abs(this._x1 - x0) > epsilon || Math.abs(this._y1 - y0) > epsilon) {\n      this._ += \"L\" + x0 + \",\" + y0;\n    }\n\n    // Is this arc empty? We’re done.\n    if (!r) return;\n\n    // Does the angle go the wrong way? Flip the direction.\n    if (da < 0) da = da % tau + tau;\n\n    // Is this a complete circle? Draw two arcs to complete the circle.\n    if (da > tauEpsilon) {\n      this._ += \"A\" + r + \",\" + r + \",0,1,\" + cw + \",\" + (x - dx) + \",\" + (y - dy) + \"A\" + r + \",\" + r + \",0,1,\" + cw + \",\" + (this._x1 = x0) + \",\" + (this._y1 = y0);\n    }\n\n    // Is this arc non-empty? Draw an arc!\n    else if (da > epsilon) {\n      this._ += \"A\" + r + \",\" + r + \",0,\" + (+(da >= pi)) + \",\" + cw + \",\" + (this._x1 = x + r * Math.cos(a1)) + \",\" + (this._y1 = y + r * Math.sin(a1));\n    }\n  },\n  rect: function(x, y, w, h) {\n    this._ += \"M\" + (this._x0 = this._x1 = +x) + \",\" + (this._y0 = this._y1 = +y) + \"h\" + (+w) + \"v\" + (+h) + \"h\" + (-w) + \"Z\";\n  },\n  toString: function() {\n    return this._;\n  }\n};\n\nexport default path;\n","export default function(x) {\n  return function constant() {\n    return x;\n  };\n}\n","export var abs = Math.abs;\nexport var atan2 = Math.atan2;\nexport var cos = Math.cos;\nexport var max = Math.max;\nexport var min = Math.min;\nexport var sin = Math.sin;\nexport var sqrt = Math.sqrt;\n\nexport var epsilon = 1e-12;\nexport var pi = Math.PI;\nexport var halfPi = pi / 2;\nexport var tau = 2 * pi;\n\nexport function acos(x) {\n  return x > 1 ? 0 : x < -1 ? pi : Math.acos(x);\n}\n\nexport function asin(x) {\n  return x >= 1 ? halfPi : x <= -1 ? -halfPi : Math.asin(x);\n}\n","import {path} from \"d3-path\";\nimport constant from \"./constant\";\nimport {abs, acos, asin, atan2, cos, epsilon, halfPi, max, min, pi, sin, sqrt, tau} from \"./math\";\n\nfunction arcInnerRadius(d) {\n  return d.innerRadius;\n}\n\nfunction arcOuterRadius(d) {\n  return d.outerRadius;\n}\n\nfunction arcStartAngle(d) {\n  return d.startAngle;\n}\n\nfunction arcEndAngle(d) {\n  return d.endAngle;\n}\n\nfunction arcPadAngle(d) {\n  return d && d.padAngle; // Note: optional!\n}\n\nfunction intersect(x0, y0, x1, y1, x2, y2, x3, y3) {\n  var x10 = x1 - x0, y10 = y1 - y0,\n      x32 = x3 - x2, y32 = y3 - y2,\n      t = y32 * x10 - x32 * y10;\n  if (t * t < epsilon) return;\n  t = (x32 * (y0 - y2) - y32 * (x0 - x2)) / t;\n  return [x0 + t * x10, y0 + t * y10];\n}\n\n// Compute perpendicular offset line of length rc.\n// http://mathworld.wolfram.com/Circle-LineIntersection.html\nfunction cornerTangents(x0, y0, x1, y1, r1, rc, cw) {\n  var x01 = x0 - x1,\n      y01 = y0 - y1,\n      lo = (cw ? rc : -rc) / sqrt(x01 * x01 + y01 * y01),\n      ox = lo * y01,\n      oy = -lo * x01,\n      x11 = x0 + ox,\n      y11 = y0 + oy,\n      x10 = x1 + ox,\n      y10 = y1 + oy,\n      x00 = (x11 + x10) / 2,\n      y00 = (y11 + y10) / 2,\n      dx = x10 - x11,\n      dy = y10 - y11,\n      d2 = dx * dx + dy * dy,\n      r = r1 - rc,\n      D = x11 * y10 - x10 * y11,\n      d = (dy < 0 ? -1 : 1) * sqrt(max(0, r * r * d2 - D * D)),\n      cx0 = (D * dy - dx * d) / d2,\n      cy0 = (-D * dx - dy * d) / d2,\n      cx1 = (D * dy + dx * d) / d2,\n      cy1 = (-D * dx + dy * d) / d2,\n      dx0 = cx0 - x00,\n      dy0 = cy0 - y00,\n      dx1 = cx1 - x00,\n      dy1 = cy1 - y00;\n\n  // Pick the closer of the two intersection points.\n  // TODO Is there a faster way to determine which intersection to use?\n  if (dx0 * dx0 + dy0 * dy0 > dx1 * dx1 + dy1 * dy1) cx0 = cx1, cy0 = cy1;\n\n  return {\n    cx: cx0,\n    cy: cy0,\n    x01: -ox,\n    y01: -oy,\n    x11: cx0 * (r1 / r - 1),\n    y11: cy0 * (r1 / r - 1)\n  };\n}\n\nexport default function() {\n  var innerRadius = arcInnerRadius,\n      outerRadius = arcOuterRadius,\n      cornerRadius = constant(0),\n      padRadius = null,\n      startAngle = arcStartAngle,\n      endAngle = arcEndAngle,\n      padAngle = arcPadAngle,\n      context = null;\n\n  function arc() {\n    var buffer,\n        r,\n        r0 = +innerRadius.apply(this, arguments),\n        r1 = +outerRadius.apply(this, arguments),\n        a0 = startAngle.apply(this, arguments) - halfPi,\n        a1 = endAngle.apply(this, arguments) - halfPi,\n        da = abs(a1 - a0),\n        cw = a1 > a0;\n\n    if (!context) context = buffer = path();\n\n    // Ensure that the outer radius is always larger than the inner radius.\n    if (r1 < r0) r = r1, r1 = r0, r0 = r;\n\n    // Is it a point?\n    if (!(r1 > epsilon)) context.moveTo(0, 0);\n\n    // Or is it a circle or annulus?\n    else if (da > tau - epsilon) {\n      context.moveTo(r1 * cos(a0), r1 * sin(a0));\n      context.arc(0, 0, r1, a0, a1, !cw);\n      if (r0 > epsilon) {\n        context.moveTo(r0 * cos(a1), r0 * sin(a1));\n        context.arc(0, 0, r0, a1, a0, cw);\n      }\n    }\n\n    // Or is it a circular or annular sector?\n    else {\n      var a01 = a0,\n          a11 = a1,\n          a00 = a0,\n          a10 = a1,\n          da0 = da,\n          da1 = da,\n          ap = padAngle.apply(this, arguments) / 2,\n          rp = (ap > epsilon) && (padRadius ? +padRadius.apply(this, arguments) : sqrt(r0 * r0 + r1 * r1)),\n          rc = min(abs(r1 - r0) / 2, +cornerRadius.apply(this, arguments)),\n          rc0 = rc,\n          rc1 = rc,\n          t0,\n          t1;\n\n      // Apply padding? Note that since r1 ≥ r0, da1 ≥ da0.\n      if (rp > epsilon) {\n        var p0 = asin(rp / r0 * sin(ap)),\n            p1 = asin(rp / r1 * sin(ap));\n        if ((da0 -= p0 * 2) > epsilon) p0 *= (cw ? 1 : -1), a00 += p0, a10 -= p0;\n        else da0 = 0, a00 = a10 = (a0 + a1) / 2;\n        if ((da1 -= p1 * 2) > epsilon) p1 *= (cw ? 1 : -1), a01 += p1, a11 -= p1;\n        else da1 = 0, a01 = a11 = (a0 + a1) / 2;\n      }\n\n      var x01 = r1 * cos(a01),\n          y01 = r1 * sin(a01),\n          x10 = r0 * cos(a10),\n          y10 = r0 * sin(a10);\n\n      // Apply rounded corners?\n      if (rc > epsilon) {\n        var x11 = r1 * cos(a11),\n            y11 = r1 * sin(a11),\n            x00 = r0 * cos(a00),\n            y00 = r0 * sin(a00),\n            oc;\n\n        // Restrict the corner radius according to the sector angle.\n        if (da < pi && (oc = intersect(x01, y01, x00, y00, x11, y11, x10, y10))) {\n          var ax = x01 - oc[0],\n              ay = y01 - oc[1],\n              bx = x11 - oc[0],\n              by = y11 - oc[1],\n              kc = 1 / sin(acos((ax * bx + ay * by) / (sqrt(ax * ax + ay * ay) * sqrt(bx * bx + by * by))) / 2),\n              lc = sqrt(oc[0] * oc[0] + oc[1] * oc[1]);\n          rc0 = min(rc, (r0 - lc) / (kc - 1));\n          rc1 = min(rc, (r1 - lc) / (kc + 1));\n        }\n      }\n\n      // Is the sector collapsed to a line?\n      if (!(da1 > epsilon)) context.moveTo(x01, y01);\n\n      // Does the sector’s outer ring have rounded corners?\n      else if (rc1 > epsilon) {\n        t0 = cornerTangents(x00, y00, x01, y01, r1, rc1, cw);\n        t1 = cornerTangents(x11, y11, x10, y10, r1, rc1, cw);\n\n        context.moveTo(t0.cx + t0.x01, t0.cy + t0.y01);\n\n        // Have the corners merged?\n        if (rc1 < rc) context.arc(t0.cx, t0.cy, rc1, atan2(t0.y01, t0.x01), atan2(t1.y01, t1.x01), !cw);\n\n        // Otherwise, draw the two corners and the ring.\n        else {\n          context.arc(t0.cx, t0.cy, rc1, atan2(t0.y01, t0.x01), atan2(t0.y11, t0.x11), !cw);\n          context.arc(0, 0, r1, atan2(t0.cy + t0.y11, t0.cx + t0.x11), atan2(t1.cy + t1.y11, t1.cx + t1.x11), !cw);\n          context.arc(t1.cx, t1.cy, rc1, atan2(t1.y11, t1.x11), atan2(t1.y01, t1.x01), !cw);\n        }\n      }\n\n      // Or is the outer ring just a circular arc?\n      else context.moveTo(x01, y01), context.arc(0, 0, r1, a01, a11, !cw);\n\n      // Is there no inner ring, and it’s a circular sector?\n      // Or perhaps it’s an annular sector collapsed due to padding?\n      if (!(r0 > epsilon) || !(da0 > epsilon)) context.lineTo(x10, y10);\n\n      // Does the sector’s inner ring (or point) have rounded corners?\n      else if (rc0 > epsilon) {\n        t0 = cornerTangents(x10, y10, x11, y11, r0, -rc0, cw);\n        t1 = cornerTangents(x01, y01, x00, y00, r0, -rc0, cw);\n\n        context.lineTo(t0.cx + t0.x01, t0.cy + t0.y01);\n\n        // Have the corners merged?\n        if (rc0 < rc) context.arc(t0.cx, t0.cy, rc0, atan2(t0.y01, t0.x01), atan2(t1.y01, t1.x01), !cw);\n\n        // Otherwise, draw the two corners and the ring.\n        else {\n          context.arc(t0.cx, t0.cy, rc0, atan2(t0.y01, t0.x01), atan2(t0.y11, t0.x11), !cw);\n          context.arc(0, 0, r0, atan2(t0.cy + t0.y11, t0.cx + t0.x11), atan2(t1.cy + t1.y11, t1.cx + t1.x11), cw);\n          context.arc(t1.cx, t1.cy, rc0, atan2(t1.y11, t1.x11), atan2(t1.y01, t1.x01), !cw);\n        }\n      }\n\n      // Or is the inner ring just a circular arc?\n      else context.arc(0, 0, r0, a10, a00, cw);\n    }\n\n    context.closePath();\n\n    if (buffer) return context = null, buffer + \"\" || null;\n  }\n\n  arc.centroid = function() {\n    var r = (+innerRadius.apply(this, arguments) + +outerRadius.apply(this, arguments)) / 2,\n        a = (+startAngle.apply(this, arguments) + +endAngle.apply(this, arguments)) / 2 - pi / 2;\n    return [cos(a) * r, sin(a) * r];\n  };\n\n  arc.innerRadius = function(_) {\n    return arguments.length ? (innerRadius = typeof _ === \"function\" ? _ : constant(+_), arc) : innerRadius;\n  };\n\n  arc.outerRadius = function(_) {\n    return arguments.length ? (outerRadius = typeof _ === \"function\" ? _ : constant(+_), arc) : outerRadius;\n  };\n\n  arc.cornerRadius = function(_) {\n    return arguments.length ? (cornerRadius = typeof _ === \"function\" ? _ : constant(+_), arc) : cornerRadius;\n  };\n\n  arc.padRadius = function(_) {\n    return arguments.length ? (padRadius = _ == null ? null : typeof _ === \"function\" ? _ : constant(+_), arc) : padRadius;\n  };\n\n  arc.startAngle = function(_) {\n    return arguments.length ? (startAngle = typeof _ === \"function\" ? _ : constant(+_), arc) : startAngle;\n  };\n\n  arc.endAngle = function(_) {\n    return arguments.length ? (endAngle = typeof _ === \"function\" ? _ : constant(+_), arc) : endAngle;\n  };\n\n  arc.padAngle = function(_) {\n    return arguments.length ? (padAngle = typeof _ === \"function\" ? _ : constant(+_), arc) : padAngle;\n  };\n\n  arc.context = function(_) {\n    return arguments.length ? ((context = _ == null ? null : _), arc) : context;\n  };\n\n  return arc;\n}\n","function Linear(context) {\n  this._context = context;\n}\n\nLinear.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n      case 1: this._point = 2; // proceed\n      default: this._context.lineTo(x, y); break;\n    }\n  }\n};\n\nexport default function(context) {\n  return new Linear(context);\n}\n","export function x(p) {\n  return p[0];\n}\n\nexport function y(p) {\n  return p[1];\n}\n","import {path} from \"d3-path\";\nimport constant from \"./constant\";\nimport curveLinear from \"./curve/linear\";\nimport {x as pointX, y as pointY} from \"./point\";\n\nexport default function() {\n  var x = pointX,\n      y = pointY,\n      defined = constant(true),\n      context = null,\n      curve = curveLinear,\n      output = null;\n\n  function line(data) {\n    var i,\n        n = data.length,\n        d,\n        defined0 = false,\n        buffer;\n\n    if (context == null) output = curve(buffer = path());\n\n    for (i = 0; i <= n; ++i) {\n      if (!(i < n && defined(d = data[i], i, data)) === defined0) {\n        if (defined0 = !defined0) output.lineStart();\n        else output.lineEnd();\n      }\n      if (defined0) output.point(+x(d, i, data), +y(d, i, data));\n    }\n\n    if (buffer) return output = null, buffer + \"\" || null;\n  }\n\n  line.x = function(_) {\n    return arguments.length ? (x = typeof _ === \"function\" ? _ : constant(+_), line) : x;\n  };\n\n  line.y = function(_) {\n    return arguments.length ? (y = typeof _ === \"function\" ? _ : constant(+_), line) : y;\n  };\n\n  line.defined = function(_) {\n    return arguments.length ? (defined = typeof _ === \"function\" ? _ : constant(!!_), line) : defined;\n  };\n\n  line.curve = function(_) {\n    return arguments.length ? (curve = _, context != null && (output = curve(context)), line) : curve;\n  };\n\n  line.context = function(_) {\n    return arguments.length ? (_ == null ? context = output = null : output = curve(context = _), line) : context;\n  };\n\n  return line;\n}\n","import {path} from \"d3-path\";\nimport constant from \"./constant\";\nimport curveLinear from \"./curve/linear\";\nimport line from \"./line\";\nimport {x as pointX, y as pointY} from \"./point\";\n\nexport default function() {\n  var x0 = pointX,\n      x1 = null,\n      y0 = constant(0),\n      y1 = pointY,\n      defined = constant(true),\n      context = null,\n      curve = curveLinear,\n      output = null;\n\n  function area(data) {\n    var i,\n        j,\n        k,\n        n = data.length,\n        d,\n        defined0 = false,\n        buffer,\n        x0z = new Array(n),\n        y0z = new Array(n);\n\n    if (context == null) output = curve(buffer = path());\n\n    for (i = 0; i <= n; ++i) {\n      if (!(i < n && defined(d = data[i], i, data)) === defined0) {\n        if (defined0 = !defined0) {\n          j = i;\n          output.areaStart();\n          output.lineStart();\n        } else {\n          output.lineEnd();\n          output.lineStart();\n          for (k = i - 1; k >= j; --k) {\n            output.point(x0z[k], y0z[k]);\n          }\n          output.lineEnd();\n          output.areaEnd();\n        }\n      }\n      if (defined0) {\n        x0z[i] = +x0(d, i, data), y0z[i] = +y0(d, i, data);\n        output.point(x1 ? +x1(d, i, data) : x0z[i], y1 ? +y1(d, i, data) : y0z[i]);\n      }\n    }\n\n    if (buffer) return output = null, buffer + \"\" || null;\n  }\n\n  function arealine() {\n    return line().defined(defined).curve(curve).context(context);\n  }\n\n  area.x = function(_) {\n    return arguments.length ? (x0 = typeof _ === \"function\" ? _ : constant(+_), x1 = null, area) : x0;\n  };\n\n  area.x0 = function(_) {\n    return arguments.length ? (x0 = typeof _ === \"function\" ? _ : constant(+_), area) : x0;\n  };\n\n  area.x1 = function(_) {\n    return arguments.length ? (x1 = _ == null ? null : typeof _ === \"function\" ? _ : constant(+_), area) : x1;\n  };\n\n  area.y = function(_) {\n    return arguments.length ? (y0 = typeof _ === \"function\" ? _ : constant(+_), y1 = null, area) : y0;\n  };\n\n  area.y0 = function(_) {\n    return arguments.length ? (y0 = typeof _ === \"function\" ? _ : constant(+_), area) : y0;\n  };\n\n  area.y1 = function(_) {\n    return arguments.length ? (y1 = _ == null ? null : typeof _ === \"function\" ? _ : constant(+_), area) : y1;\n  };\n\n  area.lineX0 =\n  area.lineY0 = function() {\n    return arealine().x(x0).y(y0);\n  };\n\n  area.lineY1 = function() {\n    return arealine().x(x0).y(y1);\n  };\n\n  area.lineX1 = function() {\n    return arealine().x(x1).y(y0);\n  };\n\n  area.defined = function(_) {\n    return arguments.length ? (defined = typeof _ === \"function\" ? _ : constant(!!_), area) : defined;\n  };\n\n  area.curve = function(_) {\n    return arguments.length ? (curve = _, context != null && (output = curve(context)), area) : curve;\n  };\n\n  area.context = function(_) {\n    return arguments.length ? (_ == null ? context = output = null : output = curve(context = _), area) : context;\n  };\n\n  return area;\n}\n","export default function(a, b) {\n  return b < a ? -1 : b > a ? 1 : b >= a ? 0 : NaN;\n}\n","export default function(d) {\n  return d;\n}\n","import curveLinear from \"./linear\";\n\nexport var curveRadialLinear = curveRadial(curveLinear);\n\nfunction Radial(curve) {\n  this._curve = curve;\n}\n\nRadial.prototype = {\n  areaStart: function() {\n    this._curve.areaStart();\n  },\n  areaEnd: function() {\n    this._curve.areaEnd();\n  },\n  lineStart: function() {\n    this._curve.lineStart();\n  },\n  lineEnd: function() {\n    this._curve.lineEnd();\n  },\n  point: function(a, r) {\n    this._curve.point(r * Math.sin(a), r * -Math.cos(a));\n  }\n};\n\nexport default function curveRadial(curve) {\n\n  function radial(context) {\n    return new Radial(curve(context));\n  }\n\n  radial._curve = curve;\n\n  return radial;\n}\n","import curveRadial, {curveRadialLinear} from \"./curve/radial\";\nimport line from \"./line\";\n\nexport function lineRadial(l) {\n  var c = l.curve;\n\n  l.angle = l.x, delete l.x;\n  l.radius = l.y, delete l.y;\n\n  l.curve = function(_) {\n    return arguments.length ? c(curveRadial(_)) : c()._curve;\n  };\n\n  return l;\n}\n\nexport default function() {\n  return lineRadial(line().curve(curveRadialLinear));\n}\n","export var slice = Array.prototype.slice;\n","import {pi, tau} from \"../math\";\n\nexport default {\n  draw: function(context, size) {\n    var r = Math.sqrt(size / pi);\n    context.moveTo(r, 0);\n    context.arc(0, 0, r, 0, tau);\n  }\n};\n","export default {\n  draw: function(context, size) {\n    var r = Math.sqrt(size / 5) / 2;\n    context.moveTo(-3 * r, -r);\n    context.lineTo(-r, -r);\n    context.lineTo(-r, -3 * r);\n    context.lineTo(r, -3 * r);\n    context.lineTo(r, -r);\n    context.lineTo(3 * r, -r);\n    context.lineTo(3 * r, r);\n    context.lineTo(r, r);\n    context.lineTo(r, 3 * r);\n    context.lineTo(-r, 3 * r);\n    context.lineTo(-r, r);\n    context.lineTo(-3 * r, r);\n    context.closePath();\n  }\n};\n","var tan30 = Math.sqrt(1 / 3),\n    tan30_2 = tan30 * 2;\n\nexport default {\n  draw: function(context, size) {\n    var y = Math.sqrt(size / tan30_2),\n        x = y * tan30;\n    context.moveTo(0, -y);\n    context.lineTo(x, 0);\n    context.lineTo(0, y);\n    context.lineTo(-x, 0);\n    context.closePath();\n  }\n};\n","import {pi, tau} from \"../math\";\n\nvar ka = 0.89081309152928522810,\n    kr = Math.sin(pi / 10) / Math.sin(7 * pi / 10),\n    kx = Math.sin(tau / 10) * kr,\n    ky = -Math.cos(tau / 10) * kr;\n\nexport default {\n  draw: function(context, size) {\n    var r = Math.sqrt(size * ka),\n        x = kx * r,\n        y = ky * r;\n    context.moveTo(0, -r);\n    context.lineTo(x, y);\n    for (var i = 1; i < 5; ++i) {\n      var a = tau * i / 5,\n          c = Math.cos(a),\n          s = Math.sin(a);\n      context.lineTo(s * r, -c * r);\n      context.lineTo(c * x - s * y, s * x + c * y);\n    }\n    context.closePath();\n  }\n};\n","export default {\n  draw: function(context, size) {\n    var w = Math.sqrt(size),\n        x = -w / 2;\n    context.rect(x, x, w, w);\n  }\n};\n","var sqrt3 = Math.sqrt(3);\n\nexport default {\n  draw: function(context, size) {\n    var y = -Math.sqrt(size / (sqrt3 * 3));\n    context.moveTo(0, y * 2);\n    context.lineTo(-sqrt3 * y, -y);\n    context.lineTo(sqrt3 * y, -y);\n    context.closePath();\n  }\n};\n","var c = -0.5,\n    s = Math.sqrt(3) / 2,\n    k = 1 / Math.sqrt(12),\n    a = (k / 2 + 1) * 3;\n\nexport default {\n  draw: function(context, size) {\n    var r = Math.sqrt(size / a),\n        x0 = r / 2,\n        y0 = r * k,\n        x1 = x0,\n        y1 = r * k + r,\n        x2 = -x1,\n        y2 = y1;\n    context.moveTo(x0, y0);\n    context.lineTo(x1, y1);\n    context.lineTo(x2, y2);\n    context.lineTo(c * x0 - s * y0, s * x0 + c * y0);\n    context.lineTo(c * x1 - s * y1, s * x1 + c * y1);\n    context.lineTo(c * x2 - s * y2, s * x2 + c * y2);\n    context.lineTo(c * x0 + s * y0, c * y0 - s * x0);\n    context.lineTo(c * x1 + s * y1, c * y1 - s * x1);\n    context.lineTo(c * x2 + s * y2, c * y2 - s * x2);\n    context.closePath();\n  }\n};\n","export default function() {}\n","export function point(that, x, y) {\n  that._context.bezierCurveTo(\n    (2 * that._x0 + that._x1) / 3,\n    (2 * that._y0 + that._y1) / 3,\n    (that._x0 + 2 * that._x1) / 3,\n    (that._y0 + 2 * that._y1) / 3,\n    (that._x0 + 4 * that._x1 + x) / 6,\n    (that._y0 + 4 * that._y1 + y) / 6\n  );\n}\n\nexport function Basis(context) {\n  this._context = context;\n}\n\nBasis.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 =\n    this._y0 = this._y1 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 3: point(this, this._x1, this._y1); // proceed\n      case 2: this._context.lineTo(this._x1, this._y1); break;\n    }\n    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n      case 1: this._point = 2; break;\n      case 2: this._point = 3; this._context.lineTo((5 * this._x0 + this._x1) / 6, (5 * this._y0 + this._y1) / 6); // proceed\n      default: point(this, x, y); break;\n    }\n    this._x0 = this._x1, this._x1 = x;\n    this._y0 = this._y1, this._y1 = y;\n  }\n};\n\nexport default function(context) {\n  return new Basis(context);\n}\n","import noop from \"../noop\";\nimport {point} from \"./basis\";\n\nfunction BasisClosed(context) {\n  this._context = context;\n}\n\nBasisClosed.prototype = {\n  areaStart: noop,\n  areaEnd: noop,\n  lineStart: function() {\n    this._x0 = this._x1 = this._x2 = this._x3 = this._x4 =\n    this._y0 = this._y1 = this._y2 = this._y3 = this._y4 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 1: {\n        this._context.moveTo(this._x2, this._y2);\n        this._context.closePath();\n        break;\n      }\n      case 2: {\n        this._context.moveTo((this._x2 + 2 * this._x3) / 3, (this._y2 + 2 * this._y3) / 3);\n        this._context.lineTo((this._x3 + 2 * this._x2) / 3, (this._y3 + 2 * this._y2) / 3);\n        this._context.closePath();\n        break;\n      }\n      case 3: {\n        this.point(this._x2, this._y2);\n        this.point(this._x3, this._y3);\n        this.point(this._x4, this._y4);\n        break;\n      }\n    }\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; this._x2 = x, this._y2 = y; break;\n      case 1: this._point = 2; this._x3 = x, this._y3 = y; break;\n      case 2: this._point = 3; this._x4 = x, this._y4 = y; this._context.moveTo((this._x0 + 4 * this._x1 + x) / 6, (this._y0 + 4 * this._y1 + y) / 6); break;\n      default: point(this, x, y); break;\n    }\n    this._x0 = this._x1, this._x1 = x;\n    this._y0 = this._y1, this._y1 = y;\n  }\n};\n\nexport default function(context) {\n  return new BasisClosed(context);\n}\n","import {point} from \"./basis\";\n\nfunction BasisOpen(context) {\n  this._context = context;\n}\n\nBasisOpen.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 =\n    this._y0 = this._y1 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (this._line || (this._line !== 0 && this._point === 3)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; break;\n      case 1: this._point = 2; break;\n      case 2: this._point = 3; var x0 = (this._x0 + 4 * this._x1 + x) / 6, y0 = (this._y0 + 4 * this._y1 + y) / 6; this._line ? this._context.lineTo(x0, y0) : this._context.moveTo(x0, y0); break;\n      case 3: this._point = 4; // proceed\n      default: point(this, x, y); break;\n    }\n    this._x0 = this._x1, this._x1 = x;\n    this._y0 = this._y1, this._y1 = y;\n  }\n};\n\nexport default function(context) {\n  return new BasisOpen(context);\n}\n","import {Basis} from \"./basis\";\n\nfunction Bundle(context, beta) {\n  this._basis = new Basis(context);\n  this._beta = beta;\n}\n\nBundle.prototype = {\n  lineStart: function() {\n    this._x = [];\n    this._y = [];\n    this._basis.lineStart();\n  },\n  lineEnd: function() {\n    var x = this._x,\n        y = this._y,\n        j = x.length - 1;\n\n    if (j > 0) {\n      var x0 = x[0],\n          y0 = y[0],\n          dx = x[j] - x0,\n          dy = y[j] - y0,\n          i = -1,\n          t;\n\n      while (++i <= j) {\n        t = i / j;\n        this._basis.point(\n          this._beta * x[i] + (1 - this._beta) * (x0 + t * dx),\n          this._beta * y[i] + (1 - this._beta) * (y0 + t * dy)\n        );\n      }\n    }\n\n    this._x = this._y = null;\n    this._basis.lineEnd();\n  },\n  point: function(x, y) {\n    this._x.push(+x);\n    this._y.push(+y);\n  }\n};\n\nexport default (function custom(beta) {\n\n  function bundle(context) {\n    return beta === 1 ? new Basis(context) : new Bundle(context, beta);\n  }\n\n  bundle.beta = function(beta) {\n    return custom(+beta);\n  };\n\n  return bundle;\n})(0.85);\n","export function point(that, x, y) {\n  that._context.bezierCurveTo(\n    that._x1 + that._k * (that._x2 - that._x0),\n    that._y1 + that._k * (that._y2 - that._y0),\n    that._x2 + that._k * (that._x1 - x),\n    that._y2 + that._k * (that._y1 - y),\n    that._x2,\n    that._y2\n  );\n}\n\nexport function Cardinal(context, tension) {\n  this._context = context;\n  this._k = (1 - tension) / 6;\n}\n\nCardinal.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 = this._x2 =\n    this._y0 = this._y1 = this._y2 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 2: this._context.lineTo(this._x2, this._y2); break;\n      case 3: point(this, this._x1, this._y1); break;\n    }\n    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n      case 1: this._point = 2; this._x1 = x, this._y1 = y; break;\n      case 2: this._point = 3; // proceed\n      default: point(this, x, y); break;\n    }\n    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n  }\n};\n\nexport default (function custom(tension) {\n\n  function cardinal(context) {\n    return new Cardinal(context, tension);\n  }\n\n  cardinal.tension = function(tension) {\n    return custom(+tension);\n  };\n\n  return cardinal;\n})(0);\n","import noop from \"../noop\";\nimport {point} from \"./cardinal\";\n\nexport function CardinalClosed(context, tension) {\n  this._context = context;\n  this._k = (1 - tension) / 6;\n}\n\nCardinalClosed.prototype = {\n  areaStart: noop,\n  areaEnd: noop,\n  lineStart: function() {\n    this._x0 = this._x1 = this._x2 = this._x3 = this._x4 = this._x5 =\n    this._y0 = this._y1 = this._y2 = this._y3 = this._y4 = this._y5 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 1: {\n        this._context.moveTo(this._x3, this._y3);\n        this._context.closePath();\n        break;\n      }\n      case 2: {\n        this._context.lineTo(this._x3, this._y3);\n        this._context.closePath();\n        break;\n      }\n      case 3: {\n        this.point(this._x3, this._y3);\n        this.point(this._x4, this._y4);\n        this.point(this._x5, this._y5);\n        break;\n      }\n    }\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; this._x3 = x, this._y3 = y; break;\n      case 1: this._point = 2; this._context.moveTo(this._x4 = x, this._y4 = y); break;\n      case 2: this._point = 3; this._x5 = x, this._y5 = y; break;\n      default: point(this, x, y); break;\n    }\n    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n  }\n};\n\nexport default (function custom(tension) {\n\n  function cardinal(context) {\n    return new CardinalClosed(context, tension);\n  }\n\n  cardinal.tension = function(tension) {\n    return custom(+tension);\n  };\n\n  return cardinal;\n})(0);\n","import {point} from \"./cardinal\";\n\nexport function CardinalOpen(context, tension) {\n  this._context = context;\n  this._k = (1 - tension) / 6;\n}\n\nCardinalOpen.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 = this._x2 =\n    this._y0 = this._y1 = this._y2 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (this._line || (this._line !== 0 && this._point === 3)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; break;\n      case 1: this._point = 2; break;\n      case 2: this._point = 3; this._line ? this._context.lineTo(this._x2, this._y2) : this._context.moveTo(this._x2, this._y2); break;\n      case 3: this._point = 4; // proceed\n      default: point(this, x, y); break;\n    }\n    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n  }\n};\n\nexport default (function custom(tension) {\n\n  function cardinal(context) {\n    return new CardinalOpen(context, tension);\n  }\n\n  cardinal.tension = function(tension) {\n    return custom(+tension);\n  };\n\n  return cardinal;\n})(0);\n","import {epsilon} from \"../math\";\nimport {Cardinal} from \"./cardinal\";\n\nexport function point(that, x, y) {\n  var x1 = that._x1,\n      y1 = that._y1,\n      x2 = that._x2,\n      y2 = that._y2;\n\n  if (that._l01_a > epsilon) {\n    var a = 2 * that._l01_2a + 3 * that._l01_a * that._l12_a + that._l12_2a,\n        n = 3 * that._l01_a * (that._l01_a + that._l12_a);\n    x1 = (x1 * a - that._x0 * that._l12_2a + that._x2 * that._l01_2a) / n;\n    y1 = (y1 * a - that._y0 * that._l12_2a + that._y2 * that._l01_2a) / n;\n  }\n\n  if (that._l23_a > epsilon) {\n    var b = 2 * that._l23_2a + 3 * that._l23_a * that._l12_a + that._l12_2a,\n        m = 3 * that._l23_a * (that._l23_a + that._l12_a);\n    x2 = (x2 * b + that._x1 * that._l23_2a - x * that._l12_2a) / m;\n    y2 = (y2 * b + that._y1 * that._l23_2a - y * that._l12_2a) / m;\n  }\n\n  that._context.bezierCurveTo(x1, y1, x2, y2, that._x2, that._y2);\n}\n\nfunction CatmullRom(context, alpha) {\n  this._context = context;\n  this._alpha = alpha;\n}\n\nCatmullRom.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 = this._x2 =\n    this._y0 = this._y1 = this._y2 = NaN;\n    this._l01_a = this._l12_a = this._l23_a =\n    this._l01_2a = this._l12_2a = this._l23_2a =\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 2: this._context.lineTo(this._x2, this._y2); break;\n      case 3: this.point(this._x2, this._y2); break;\n    }\n    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n\n    if (this._point) {\n      var x23 = this._x2 - x,\n          y23 = this._y2 - y;\n      this._l23_a = Math.sqrt(this._l23_2a = Math.pow(x23 * x23 + y23 * y23, this._alpha));\n    }\n\n    switch (this._point) {\n      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n      case 1: this._point = 2; break;\n      case 2: this._point = 3; // proceed\n      default: point(this, x, y); break;\n    }\n\n    this._l01_a = this._l12_a, this._l12_a = this._l23_a;\n    this._l01_2a = this._l12_2a, this._l12_2a = this._l23_2a;\n    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n  }\n};\n\nexport default (function custom(alpha) {\n\n  function catmullRom(context) {\n    return alpha ? new CatmullRom(context, alpha) : new Cardinal(context, 0);\n  }\n\n  catmullRom.alpha = function(alpha) {\n    return custom(+alpha);\n  };\n\n  return catmullRom;\n})(0.5);\n","import {CardinalClosed} from \"./cardinalClosed\";\nimport noop from \"../noop\";\nimport {point} from \"./catmullRom\";\n\nfunction CatmullRomClosed(context, alpha) {\n  this._context = context;\n  this._alpha = alpha;\n}\n\nCatmullRomClosed.prototype = {\n  areaStart: noop,\n  areaEnd: noop,\n  lineStart: function() {\n    this._x0 = this._x1 = this._x2 = this._x3 = this._x4 = this._x5 =\n    this._y0 = this._y1 = this._y2 = this._y3 = this._y4 = this._y5 = NaN;\n    this._l01_a = this._l12_a = this._l23_a =\n    this._l01_2a = this._l12_2a = this._l23_2a =\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 1: {\n        this._context.moveTo(this._x3, this._y3);\n        this._context.closePath();\n        break;\n      }\n      case 2: {\n        this._context.lineTo(this._x3, this._y3);\n        this._context.closePath();\n        break;\n      }\n      case 3: {\n        this.point(this._x3, this._y3);\n        this.point(this._x4, this._y4);\n        this.point(this._x5, this._y5);\n        break;\n      }\n    }\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n\n    if (this._point) {\n      var x23 = this._x2 - x,\n          y23 = this._y2 - y;\n      this._l23_a = Math.sqrt(this._l23_2a = Math.pow(x23 * x23 + y23 * y23, this._alpha));\n    }\n\n    switch (this._point) {\n      case 0: this._point = 1; this._x3 = x, this._y3 = y; break;\n      case 1: this._point = 2; this._context.moveTo(this._x4 = x, this._y4 = y); break;\n      case 2: this._point = 3; this._x5 = x, this._y5 = y; break;\n      default: point(this, x, y); break;\n    }\n\n    this._l01_a = this._l12_a, this._l12_a = this._l23_a;\n    this._l01_2a = this._l12_2a, this._l12_2a = this._l23_2a;\n    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n  }\n};\n\nexport default (function custom(alpha) {\n\n  function catmullRom(context) {\n    return alpha ? new CatmullRomClosed(context, alpha) : new CardinalClosed(context, 0);\n  }\n\n  catmullRom.alpha = function(alpha) {\n    return custom(+alpha);\n  };\n\n  return catmullRom;\n})(0.5);\n","import {CardinalOpen} from \"./cardinalOpen\";\nimport {point} from \"./catmullRom\";\n\nfunction CatmullRomOpen(context, alpha) {\n  this._context = context;\n  this._alpha = alpha;\n}\n\nCatmullRomOpen.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 = this._x2 =\n    this._y0 = this._y1 = this._y2 = NaN;\n    this._l01_a = this._l12_a = this._l23_a =\n    this._l01_2a = this._l12_2a = this._l23_2a =\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (this._line || (this._line !== 0 && this._point === 3)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n\n    if (this._point) {\n      var x23 = this._x2 - x,\n          y23 = this._y2 - y;\n      this._l23_a = Math.sqrt(this._l23_2a = Math.pow(x23 * x23 + y23 * y23, this._alpha));\n    }\n\n    switch (this._point) {\n      case 0: this._point = 1; break;\n      case 1: this._point = 2; break;\n      case 2: this._point = 3; this._line ? this._context.lineTo(this._x2, this._y2) : this._context.moveTo(this._x2, this._y2); break;\n      case 3: this._point = 4; // proceed\n      default: point(this, x, y); break;\n    }\n\n    this._l01_a = this._l12_a, this._l12_a = this._l23_a;\n    this._l01_2a = this._l12_2a, this._l12_2a = this._l23_2a;\n    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n  }\n};\n\nexport default (function custom(alpha) {\n\n  function catmullRom(context) {\n    return alpha ? new CatmullRomOpen(context, alpha) : new CardinalOpen(context, 0);\n  }\n\n  catmullRom.alpha = function(alpha) {\n    return custom(+alpha);\n  };\n\n  return catmullRom;\n})(0.5);\n","import noop from \"../noop\";\n\nfunction LinearClosed(context) {\n  this._context = context;\n}\n\nLinearClosed.prototype = {\n  areaStart: noop,\n  areaEnd: noop,\n  lineStart: function() {\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (this._point) this._context.closePath();\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    if (this._point) this._context.lineTo(x, y);\n    else this._point = 1, this._context.moveTo(x, y);\n  }\n};\n\nexport default function(context) {\n  return new LinearClosed(context);\n}\n","function sign(x) {\n  return x < 0 ? -1 : 1;\n}\n\n// Calculate the slopes of the tangents (Hermite-type interpolation) based on\n// the following paper: Steffen, M. 1990. A Simple Method for Monotonic\n// Interpolation in One Dimension. Astronomy and Astrophysics, Vol. 239, NO.\n// NOV(II), P. 443, 1990.\nfunction slope3(that, x2, y2) {\n  var h0 = that._x1 - that._x0,\n      h1 = x2 - that._x1,\n      s0 = (that._y1 - that._y0) / (h0 || h1 < 0 && -0),\n      s1 = (y2 - that._y1) / (h1 || h0 < 0 && -0),\n      p = (s0 * h1 + s1 * h0) / (h0 + h1);\n  return (sign(s0) + sign(s1)) * Math.min(Math.abs(s0), Math.abs(s1), 0.5 * Math.abs(p)) || 0;\n}\n\n// Calculate a one-sided slope.\nfunction slope2(that, t) {\n  var h = that._x1 - that._x0;\n  return h ? (3 * (that._y1 - that._y0) / h - t) / 2 : t;\n}\n\n// According to https://en.wikipedia.org/wiki/Cubic_Hermite_spline#Representations\n// \"you can express cubic Hermite interpolation in terms of cubic Bézier curves\n// with respect to the four values p0, p0 + m0 / 3, p1 - m1 / 3, p1\".\nfunction point(that, t0, t1) {\n  var x0 = that._x0,\n      y0 = that._y0,\n      x1 = that._x1,\n      y1 = that._y1,\n      dx = (x1 - x0) / 3;\n  that._context.bezierCurveTo(x0 + dx, y0 + dx * t0, x1 - dx, y1 - dx * t1, x1, y1);\n}\n\nfunction MonotoneX(context) {\n  this._context = context;\n}\n\nMonotoneX.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 =\n    this._y0 = this._y1 =\n    this._t0 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 2: this._context.lineTo(this._x1, this._y1); break;\n      case 3: point(this, this._t0, slope2(this, this._t0)); break;\n    }\n    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    var t1 = NaN;\n\n    x = +x, y = +y;\n    if (x === this._x1 && y === this._y1) return; // Ignore coincident points.\n    switch (this._point) {\n      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n      case 1: this._point = 2; break;\n      case 2: this._point = 3; point(this, slope2(this, t1 = slope3(this, x, y)), t1); break;\n      default: point(this, this._t0, t1 = slope3(this, x, y)); break;\n    }\n\n    this._x0 = this._x1, this._x1 = x;\n    this._y0 = this._y1, this._y1 = y;\n    this._t0 = t1;\n  }\n}\n\nfunction MonotoneY(context) {\n  this._context = new ReflectContext(context);\n}\n\n(MonotoneY.prototype = Object.create(MonotoneX.prototype)).point = function(x, y) {\n  MonotoneX.prototype.point.call(this, y, x);\n};\n\nfunction ReflectContext(context) {\n  this._context = context;\n}\n\nReflectContext.prototype = {\n  moveTo: function(x, y) { this._context.moveTo(y, x); },\n  closePath: function() { this._context.closePath(); },\n  lineTo: function(x, y) { this._context.lineTo(y, x); },\n  bezierCurveTo: function(x1, y1, x2, y2, x, y) { this._context.bezierCurveTo(y1, x1, y2, x2, y, x); }\n};\n\nexport function monotoneX(context) {\n  return new MonotoneX(context);\n}\n\nexport function monotoneY(context) {\n  return new MonotoneY(context);\n}\n","function Natural(context) {\n  this._context = context;\n}\n\nNatural.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x = [];\n    this._y = [];\n  },\n  lineEnd: function() {\n    var x = this._x,\n        y = this._y,\n        n = x.length;\n\n    if (n) {\n      this._line ? this._context.lineTo(x[0], y[0]) : this._context.moveTo(x[0], y[0]);\n      if (n === 2) {\n        this._context.lineTo(x[1], y[1]);\n      } else {\n        var px = controlPoints(x),\n            py = controlPoints(y);\n        for (var i0 = 0, i1 = 1; i1 < n; ++i0, ++i1) {\n          this._context.bezierCurveTo(px[0][i0], py[0][i0], px[1][i0], py[1][i0], x[i1], y[i1]);\n        }\n      }\n    }\n\n    if (this._line || (this._line !== 0 && n === 1)) this._context.closePath();\n    this._line = 1 - this._line;\n    this._x = this._y = null;\n  },\n  point: function(x, y) {\n    this._x.push(+x);\n    this._y.push(+y);\n  }\n};\n\n// See https://www.particleincell.com/2012/bezier-splines/ for derivation.\nfunction controlPoints(x) {\n  var i,\n      n = x.length - 1,\n      m,\n      a = new Array(n),\n      b = new Array(n),\n      r = new Array(n);\n  a[0] = 0, b[0] = 2, r[0] = x[0] + 2 * x[1];\n  for (i = 1; i < n - 1; ++i) a[i] = 1, b[i] = 4, r[i] = 4 * x[i] + 2 * x[i + 1];\n  a[n - 1] = 2, b[n - 1] = 7, r[n - 1] = 8 * x[n - 1] + x[n];\n  for (i = 1; i < n; ++i) m = a[i] / b[i - 1], b[i] -= m, r[i] -= m * r[i - 1];\n  a[n - 1] = r[n - 1] / b[n - 1];\n  for (i = n - 2; i >= 0; --i) a[i] = (r[i] - a[i + 1]) / b[i];\n  b[n - 1] = (x[n] + a[n - 1]) / 2;\n  for (i = 0; i < n - 1; ++i) b[i] = 2 * x[i + 1] - a[i + 1];\n  return [a, b];\n}\n\nexport default function(context) {\n  return new Natural(context);\n}\n","function Step(context, t) {\n  this._context = context;\n  this._t = t;\n}\n\nStep.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x = this._y = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (0 < this._t && this._t < 1 && this._point === 2) this._context.lineTo(this._x, this._y);\n    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n    if (this._line >= 0) this._t = 1 - this._t, this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n      case 1: this._point = 2; // proceed\n      default: {\n        if (this._t <= 0) {\n          this._context.lineTo(this._x, y);\n          this._context.lineTo(x, y);\n        } else {\n          var x1 = this._x * (1 - this._t) + x * this._t;\n          this._context.lineTo(x1, this._y);\n          this._context.lineTo(x1, y);\n        }\n        break;\n      }\n    }\n    this._x = x, this._y = y;\n  }\n};\n\nexport default function(context) {\n  return new Step(context, 0.5);\n}\n\nexport function stepBefore(context) {\n  return new Step(context, 0);\n}\n\nexport function stepAfter(context) {\n  return new Step(context, 1);\n}\n","export default function(series, order) {\n  if (!((n = series.length) > 1)) return;\n  for (var i = 1, j, s0, s1 = series[order[0]], n, m = s1.length; i < n; ++i) {\n    s0 = s1, s1 = series[order[i]];\n    for (j = 0; j < m; ++j) {\n      s1[j][1] += s1[j][0] = isNaN(s0[j][1]) ? s0[j][0] : s0[j][1];\n    }\n  }\n}\n","export default function(series) {\n  var n = series.length, o = new Array(n);\n  while (--n >= 0) o[n] = n;\n  return o;\n}\n","import {slice} from \"./array\";\nimport constant from \"./constant\";\nimport offsetNone from \"./offset/none\";\nimport orderNone from \"./order/none\";\n\nfunction stackValue(d, key) {\n  return d[key];\n}\n\nexport default function() {\n  var keys = constant([]),\n      order = orderNone,\n      offset = offsetNone,\n      value = stackValue;\n\n  function stack(data) {\n    var kz = keys.apply(this, arguments),\n        i,\n        m = data.length,\n        n = kz.length,\n        sz = new Array(n),\n        oz;\n\n    for (i = 0; i < n; ++i) {\n      for (var ki = kz[i], si = sz[i] = new Array(m), j = 0, sij; j < m; ++j) {\n        si[j] = sij = [0, +value(data[j], ki, j, data)];\n        sij.data = data[j];\n      }\n      si.key = ki;\n    }\n\n    for (i = 0, oz = order(sz); i < n; ++i) {\n      sz[oz[i]].index = i;\n    }\n\n    offset(sz, oz);\n    return sz;\n  }\n\n  stack.keys = function(_) {\n    return arguments.length ? (keys = typeof _ === \"function\" ? _ : constant(slice.call(_)), stack) : keys;\n  };\n\n  stack.value = function(_) {\n    return arguments.length ? (value = typeof _ === \"function\" ? _ : constant(+_), stack) : value;\n  };\n\n  stack.order = function(_) {\n    return arguments.length ? (order = _ == null ? orderNone : typeof _ === \"function\" ? _ : constant(slice.call(_)), stack) : order;\n  };\n\n  stack.offset = function(_) {\n    return arguments.length ? (offset = _ == null ? offsetNone : _, stack) : offset;\n  };\n\n  return stack;\n}\n","import none from \"./none\";\n\nexport default function(series) {\n  var sums = series.map(sum);\n  return none(series).sort(function(a, b) { return sums[a] - sums[b]; });\n}\n\nexport function sum(series) {\n  var s = 0, i = -1, n = series.length, v;\n  while (++i < n) if (v = +series[i][1]) s += v;\n  return s;\n}\n","export function cubicIn(t) {\n  return t * t * t;\n}\n\nexport function cubicOut(t) {\n  return --t * t * t + 1;\n}\n\nexport function cubicInOut(t) {\n  return ((t *= 2) <= 1 ? t * t * t : (t -= 2) * t * t + 2) / 2;\n}\n","var exponent = 3;\n\nexport var polyIn = (function custom(e) {\n  e = +e;\n\n  function polyIn(t) {\n    return Math.pow(t, e);\n  }\n\n  polyIn.exponent = custom;\n\n  return polyIn;\n})(exponent);\n\nexport var polyOut = (function custom(e) {\n  e = +e;\n\n  function polyOut(t) {\n    return 1 - Math.pow(1 - t, e);\n  }\n\n  polyOut.exponent = custom;\n\n  return polyOut;\n})(exponent);\n\nexport var polyInOut = (function custom(e) {\n  e = +e;\n\n  function polyInOut(t) {\n    return ((t *= 2) <= 1 ? Math.pow(t, e) : 2 - Math.pow(2 - t, e)) / 2;\n  }\n\n  polyInOut.exponent = custom;\n\n  return polyInOut;\n})(exponent);\n","var pi = Math.PI,\n    halfPi = pi / 2;\n\nexport function sinIn(t) {\n  return 1 - Math.cos(t * halfPi);\n}\n\nexport function sinOut(t) {\n  return Math.sin(t * halfPi);\n}\n\nexport function sinInOut(t) {\n  return (1 - Math.cos(pi * t)) / 2;\n}\n","var b1 = 4 / 11,\n    b2 = 6 / 11,\n    b3 = 8 / 11,\n    b4 = 3 / 4,\n    b5 = 9 / 11,\n    b6 = 10 / 11,\n    b7 = 15 / 16,\n    b8 = 21 / 22,\n    b9 = 63 / 64,\n    b0 = 1 / b1 / b1;\n\nexport function bounceIn(t) {\n  return 1 - bounceOut(1 - t);\n}\n\nexport function bounceOut(t) {\n  return (t = +t) < b1 ? b0 * t * t : t < b3 ? b0 * (t -= b2) * t + b4 : t < b6 ? b0 * (t -= b5) * t + b7 : b0 * (t -= b8) * t + b9;\n}\n\nexport function bounceInOut(t) {\n  return ((t *= 2) <= 1 ? 1 - bounceOut(1 - t) : bounceOut(t - 1) + 1) / 2;\n}\n","var overshoot = 1.70158;\n\nexport var backIn = (function custom(s) {\n  s = +s;\n\n  function backIn(t) {\n    return t * t * ((s + 1) * t - s);\n  }\n\n  backIn.overshoot = custom;\n\n  return backIn;\n})(overshoot);\n\nexport var backOut = (function custom(s) {\n  s = +s;\n\n  function backOut(t) {\n    return --t * t * ((s + 1) * t + s) + 1;\n  }\n\n  backOut.overshoot = custom;\n\n  return backOut;\n})(overshoot);\n\nexport var backInOut = (function custom(s) {\n  s = +s;\n\n  function backInOut(t) {\n    return ((t *= 2) < 1 ? t * t * ((s + 1) * t - s) : (t -= 2) * t * ((s + 1) * t + s) + 2) / 2;\n  }\n\n  backInOut.overshoot = custom;\n\n  return backInOut;\n})(overshoot);\n","var tau = 2 * Math.PI,\n    amplitude = 1,\n    period = 0.3;\n\nexport var elasticIn = (function custom(a, p) {\n  var s = Math.asin(1 / (a = Math.max(1, a))) * (p /= tau);\n\n  function elasticIn(t) {\n    return a * Math.pow(2, 10 * --t) * Math.sin((s - t) / p);\n  }\n\n  elasticIn.amplitude = function(a) { return custom(a, p * tau); };\n  elasticIn.period = function(p) { return custom(a, p); };\n\n  return elasticIn;\n})(amplitude, period);\n\nexport var elasticOut = (function custom(a, p) {\n  var s = Math.asin(1 / (a = Math.max(1, a))) * (p /= tau);\n\n  function elasticOut(t) {\n    return 1 - a * Math.pow(2, -10 * (t = +t)) * Math.sin((t + s) / p);\n  }\n\n  elasticOut.amplitude = function(a) { return custom(a, p * tau); };\n  elasticOut.period = function(p) { return custom(a, p); };\n\n  return elasticOut;\n})(amplitude, period);\n\nexport var elasticInOut = (function custom(a, p) {\n  var s = Math.asin(1 / (a = Math.max(1, a))) * (p /= tau);\n\n  function elasticInOut(t) {\n    return ((t = t * 2 - 1) < 0\n        ? a * Math.pow(2, 10 * t) * Math.sin((s - t) / p)\n        : 2 - a * Math.pow(2, -10 * t) * Math.sin((s + t) / p)) / 2;\n  }\n\n  elasticInOut.amplitude = function(a) { return custom(a, p * tau); };\n  elasticInOut.period = function(p) { return custom(a, p); };\n\n  return elasticInOut;\n})(amplitude, period);\n","export default function(x) {\n  return function() {\n    return x;\n  };\n}\n","export function x(d) {\n  return d[0];\n}\n\nexport function y(d) {\n  return d[1];\n}\n","function RedBlackTree() {\n  this._ = null; // root node\n}\n\nexport function RedBlackNode(node) {\n  node.U = // parent node\n  node.C = // color - true for red, false for black\n  node.L = // left node\n  node.R = // right node\n  node.P = // previous node\n  node.N = null; // next node\n}\n\nRedBlackTree.prototype = {\n  constructor: RedBlackTree,\n\n  insert: function(after, node) {\n    var parent, grandpa, uncle;\n\n    if (after) {\n      node.P = after;\n      node.N = after.N;\n      if (after.N) after.N.P = node;\n      after.N = node;\n      if (after.R) {\n        after = after.R;\n        while (after.L) after = after.L;\n        after.L = node;\n      } else {\n        after.R = node;\n      }\n      parent = after;\n    } else if (this._) {\n      after = RedBlackFirst(this._);\n      node.P = null;\n      node.N = after;\n      after.P = after.L = node;\n      parent = after;\n    } else {\n      node.P = node.N = null;\n      this._ = node;\n      parent = null;\n    }\n    node.L = node.R = null;\n    node.U = parent;\n    node.C = true;\n\n    after = node;\n    while (parent && parent.C) {\n      grandpa = parent.U;\n      if (parent === grandpa.L) {\n        uncle = grandpa.R;\n        if (uncle && uncle.C) {\n          parent.C = uncle.C = false;\n          grandpa.C = true;\n          after = grandpa;\n        } else {\n          if (after === parent.R) {\n            RedBlackRotateLeft(this, parent);\n            after = parent;\n            parent = after.U;\n          }\n          parent.C = false;\n          grandpa.C = true;\n          RedBlackRotateRight(this, grandpa);\n        }\n      } else {\n        uncle = grandpa.L;\n        if (uncle && uncle.C) {\n          parent.C = uncle.C = false;\n          grandpa.C = true;\n          after = grandpa;\n        } else {\n          if (after === parent.L) {\n            RedBlackRotateRight(this, parent);\n            after = parent;\n            parent = after.U;\n          }\n          parent.C = false;\n          grandpa.C = true;\n          RedBlackRotateLeft(this, grandpa);\n        }\n      }\n      parent = after.U;\n    }\n    this._.C = false;\n  },\n\n  remove: function(node) {\n    if (node.N) node.N.P = node.P;\n    if (node.P) node.P.N = node.N;\n    node.N = node.P = null;\n\n    var parent = node.U,\n        sibling,\n        left = node.L,\n        right = node.R,\n        next,\n        red;\n\n    if (!left) next = right;\n    else if (!right) next = left;\n    else next = RedBlackFirst(right);\n\n    if (parent) {\n      if (parent.L === node) parent.L = next;\n      else parent.R = next;\n    } else {\n      this._ = next;\n    }\n\n    if (left && right) {\n      red = next.C;\n      next.C = node.C;\n      next.L = left;\n      left.U = next;\n      if (next !== right) {\n        parent = next.U;\n        next.U = node.U;\n        node = next.R;\n        parent.L = node;\n        next.R = right;\n        right.U = next;\n      } else {\n        next.U = parent;\n        parent = next;\n        node = next.R;\n      }\n    } else {\n      red = node.C;\n      node = next;\n    }\n\n    if (node) node.U = parent;\n    if (red) return;\n    if (node && node.C) { node.C = false; return; }\n\n    do {\n      if (node === this._) break;\n      if (node === parent.L) {\n        sibling = parent.R;\n        if (sibling.C) {\n          sibling.C = false;\n          parent.C = true;\n          RedBlackRotateLeft(this, parent);\n          sibling = parent.R;\n        }\n        if ((sibling.L && sibling.L.C)\n            || (sibling.R && sibling.R.C)) {\n          if (!sibling.R || !sibling.R.C) {\n            sibling.L.C = false;\n            sibling.C = true;\n            RedBlackRotateRight(this, sibling);\n            sibling = parent.R;\n          }\n          sibling.C = parent.C;\n          parent.C = sibling.R.C = false;\n          RedBlackRotateLeft(this, parent);\n          node = this._;\n          break;\n        }\n      } else {\n        sibling = parent.L;\n        if (sibling.C) {\n          sibling.C = false;\n          parent.C = true;\n          RedBlackRotateRight(this, parent);\n          sibling = parent.L;\n        }\n        if ((sibling.L && sibling.L.C)\n          || (sibling.R && sibling.R.C)) {\n          if (!sibling.L || !sibling.L.C) {\n            sibling.R.C = false;\n            sibling.C = true;\n            RedBlackRotateLeft(this, sibling);\n            sibling = parent.L;\n          }\n          sibling.C = parent.C;\n          parent.C = sibling.L.C = false;\n          RedBlackRotateRight(this, parent);\n          node = this._;\n          break;\n        }\n      }\n      sibling.C = true;\n      node = parent;\n      parent = parent.U;\n    } while (!node.C);\n\n    if (node) node.C = false;\n  }\n};\n\nfunction RedBlackRotateLeft(tree, node) {\n  var p = node,\n      q = node.R,\n      parent = p.U;\n\n  if (parent) {\n    if (parent.L === p) parent.L = q;\n    else parent.R = q;\n  } else {\n    tree._ = q;\n  }\n\n  q.U = parent;\n  p.U = q;\n  p.R = q.L;\n  if (p.R) p.R.U = p;\n  q.L = p;\n}\n\nfunction RedBlackRotateRight(tree, node) {\n  var p = node,\n      q = node.L,\n      parent = p.U;\n\n  if (parent) {\n    if (parent.L === p) parent.L = q;\n    else parent.R = q;\n  } else {\n    tree._ = q;\n  }\n\n  q.U = parent;\n  p.U = q;\n  p.L = q.R;\n  if (p.L) p.L.U = p;\n  q.R = p;\n}\n\nfunction RedBlackFirst(node) {\n  while (node.L) node = node.L;\n  return node;\n}\n\nexport default RedBlackTree;\n","import {cells, edges, epsilon} from \"./Diagram\";\n\nexport function createEdge(left, right, v0, v1) {\n  var edge = [null, null],\n      index = edges.push(edge) - 1;\n  edge.left = left;\n  edge.right = right;\n  if (v0) setEdgeEnd(edge, left, right, v0);\n  if (v1) setEdgeEnd(edge, right, left, v1);\n  cells[left.index].halfedges.push(index);\n  cells[right.index].halfedges.push(index);\n  return edge;\n}\n\nexport function createBorderEdge(left, v0, v1) {\n  var edge = [v0, v1];\n  edge.left = left;\n  return edge;\n}\n\nexport function setEdgeEnd(edge, left, right, vertex) {\n  if (!edge[0] && !edge[1]) {\n    edge[0] = vertex;\n    edge.left = left;\n    edge.right = right;\n  } else if (edge.left === right) {\n    edge[1] = vertex;\n  } else {\n    edge[0] = vertex;\n  }\n}\n\n// Liang–Barsky line clipping.\nfunction clipEdge(edge, x0, y0, x1, y1) {\n  var a = edge[0],\n      b = edge[1],\n      ax = a[0],\n      ay = a[1],\n      bx = b[0],\n      by = b[1],\n      t0 = 0,\n      t1 = 1,\n      dx = bx - ax,\n      dy = by - ay,\n      r;\n\n  r = x0 - ax;\n  if (!dx && r > 0) return;\n  r /= dx;\n  if (dx < 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  } else if (dx > 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  }\n\n  r = x1 - ax;\n  if (!dx && r < 0) return;\n  r /= dx;\n  if (dx < 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  } else if (dx > 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  }\n\n  r = y0 - ay;\n  if (!dy && r > 0) return;\n  r /= dy;\n  if (dy < 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  } else if (dy > 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  }\n\n  r = y1 - ay;\n  if (!dy && r < 0) return;\n  r /= dy;\n  if (dy < 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  } else if (dy > 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  }\n\n  if (!(t0 > 0) && !(t1 < 1)) return true; // TODO Better check?\n\n  if (t0 > 0) edge[0] = [ax + t0 * dx, ay + t0 * dy];\n  if (t1 < 1) edge[1] = [ax + t1 * dx, ay + t1 * dy];\n  return true;\n}\n\nfunction connectEdge(edge, x0, y0, x1, y1) {\n  var v1 = edge[1];\n  if (v1) return true;\n\n  var v0 = edge[0],\n      left = edge.left,\n      right = edge.right,\n      lx = left[0],\n      ly = left[1],\n      rx = right[0],\n      ry = right[1],\n      fx = (lx + rx) / 2,\n      fy = (ly + ry) / 2,\n      fm,\n      fb;\n\n  if (ry === ly) {\n    if (fx < x0 || fx >= x1) return;\n    if (lx > rx) {\n      if (!v0) v0 = [fx, y0];\n      else if (v0[1] >= y1) return;\n      v1 = [fx, y1];\n    } else {\n      if (!v0) v0 = [fx, y1];\n      else if (v0[1] < y0) return;\n      v1 = [fx, y0];\n    }\n  } else {\n    fm = (lx - rx) / (ry - ly);\n    fb = fy - fm * fx;\n    if (fm < -1 || fm > 1) {\n      if (lx > rx) {\n        if (!v0) v0 = [(y0 - fb) / fm, y0];\n        else if (v0[1] >= y1) return;\n        v1 = [(y1 - fb) / fm, y1];\n      } else {\n        if (!v0) v0 = [(y1 - fb) / fm, y1];\n        else if (v0[1] < y0) return;\n        v1 = [(y0 - fb) / fm, y0];\n      }\n    } else {\n      if (ly < ry) {\n        if (!v0) v0 = [x0, fm * x0 + fb];\n        else if (v0[0] >= x1) return;\n        v1 = [x1, fm * x1 + fb];\n      } else {\n        if (!v0) v0 = [x1, fm * x1 + fb];\n        else if (v0[0] < x0) return;\n        v1 = [x0, fm * x0 + fb];\n      }\n    }\n  }\n\n  edge[0] = v0;\n  edge[1] = v1;\n  return true;\n}\n\nexport function clipEdges(x0, y0, x1, y1) {\n  var i = edges.length,\n      edge;\n\n  while (i--) {\n    if (!connectEdge(edge = edges[i], x0, y0, x1, y1)\n        || !clipEdge(edge, x0, y0, x1, y1)\n        || !(Math.abs(edge[0][0] - edge[1][0]) > epsilon\n            || Math.abs(edge[0][1] - edge[1][1]) > epsilon)) {\n      delete edges[i];\n    }\n  }\n}\n","import {createBorderEdge} from \"./Edge\";\nimport {cells, edges, epsilon} from \"./Diagram\";\n\nexport function createCell(site) {\n  return cells[site.index] = {\n    site: site,\n    halfedges: []\n  };\n}\n\nfunction cellHalfedgeAngle(cell, edge) {\n  var site = cell.site,\n      va = edge.left,\n      vb = edge.right;\n  if (site === vb) vb = va, va = site;\n  if (vb) return Math.atan2(vb[1] - va[1], vb[0] - va[0]);\n  if (site === va) va = edge[1], vb = edge[0];\n  else va = edge[0], vb = edge[1];\n  return Math.atan2(va[0] - vb[0], vb[1] - va[1]);\n}\n\nexport function cellHalfedgeStart(cell, edge) {\n  return edge[+(edge.left !== cell.site)];\n}\n\nexport function cellHalfedgeEnd(cell, edge) {\n  return edge[+(edge.left === cell.site)];\n}\n\nexport function sortCellHalfedges() {\n  for (var i = 0, n = cells.length, cell, halfedges, j, m; i < n; ++i) {\n    if ((cell = cells[i]) && (m = (halfedges = cell.halfedges).length)) {\n      var index = new Array(m),\n          array = new Array(m);\n      for (j = 0; j < m; ++j) index[j] = j, array[j] = cellHalfedgeAngle(cell, edges[halfedges[j]]);\n      index.sort(function(i, j) { return array[j] - array[i]; });\n      for (j = 0; j < m; ++j) array[j] = halfedges[index[j]];\n      for (j = 0; j < m; ++j) halfedges[j] = array[j];\n    }\n  }\n}\n\nexport function clipCells(x0, y0, x1, y1) {\n  var nCells = cells.length,\n      iCell,\n      cell,\n      site,\n      iHalfedge,\n      halfedges,\n      nHalfedges,\n      start,\n      startX,\n      startY,\n      end,\n      endX,\n      endY,\n      cover = true;\n\n  for (iCell = 0; iCell < nCells; ++iCell) {\n    if (cell = cells[iCell]) {\n      site = cell.site;\n      halfedges = cell.halfedges;\n      iHalfedge = halfedges.length;\n\n      // Remove any dangling clipped edges.\n      while (iHalfedge--) {\n        if (!edges[halfedges[iHalfedge]]) {\n          halfedges.splice(iHalfedge, 1);\n        }\n      }\n\n      // Insert any border edges as necessary.\n      iHalfedge = 0, nHalfedges = halfedges.length;\n      while (iHalfedge < nHalfedges) {\n        end = cellHalfedgeEnd(cell, edges[halfedges[iHalfedge]]), endX = end[0], endY = end[1];\n        start = cellHalfedgeStart(cell, edges[halfedges[++iHalfedge % nHalfedges]]), startX = start[0], startY = start[1];\n        if (Math.abs(endX - startX) > epsilon || Math.abs(endY - startY) > epsilon) {\n          halfedges.splice(iHalfedge, 0, edges.push(createBorderEdge(site, end,\n              Math.abs(endX - x0) < epsilon && y1 - endY > epsilon ? [x0, Math.abs(startX - x0) < epsilon ? startY : y1]\n              : Math.abs(endY - y1) < epsilon && x1 - endX > epsilon ? [Math.abs(startY - y1) < epsilon ? startX : x1, y1]\n              : Math.abs(endX - x1) < epsilon && endY - y0 > epsilon ? [x1, Math.abs(startX - x1) < epsilon ? startY : y0]\n              : Math.abs(endY - y0) < epsilon && endX - x0 > epsilon ? [Math.abs(startY - y0) < epsilon ? startX : x0, y0]\n              : null)) - 1);\n          ++nHalfedges;\n        }\n      }\n\n      if (nHalfedges) cover = false;\n    }\n  }\n\n  // If there weren’t any edges, have the closest site cover the extent.\n  // It doesn’t matter which corner of the extent we measure!\n  if (cover) {\n    var dx, dy, d2, dc = Infinity;\n\n    for (iCell = 0, cover = null; iCell < nCells; ++iCell) {\n      if (cell = cells[iCell]) {\n        site = cell.site;\n        dx = site[0] - x0;\n        dy = site[1] - y0;\n        d2 = dx * dx + dy * dy;\n        if (d2 < dc) dc = d2, cover = cell;\n      }\n    }\n\n    if (cover) {\n      var v00 = [x0, y0], v01 = [x0, y1], v11 = [x1, y1], v10 = [x1, y0];\n      cover.halfedges.push(\n        edges.push(createBorderEdge(site = cover.site, v00, v01)) - 1,\n        edges.push(createBorderEdge(site, v01, v11)) - 1,\n        edges.push(createBorderEdge(site, v11, v10)) - 1,\n        edges.push(createBorderEdge(site, v10, v00)) - 1\n      );\n    }\n  }\n\n  // Lastly delete any cells with no edges; these were entirely clipped.\n  for (iCell = 0; iCell < nCells; ++iCell) {\n    if (cell = cells[iCell]) {\n      if (!cell.halfedges.length) {\n        delete cells[iCell];\n      }\n    }\n  }\n}\n","import {RedBlackNode} from \"./RedBlackTree\";\nimport {circles, epsilon2} from \"./Diagram\";\n\nvar circlePool = [];\n\nexport var firstCircle;\n\nfunction Circle() {\n  RedBlackNode(this);\n  this.x =\n  this.y =\n  this.arc =\n  this.site =\n  this.cy = null;\n}\n\nexport function attachCircle(arc) {\n  var lArc = arc.P,\n      rArc = arc.N;\n\n  if (!lArc || !rArc) return;\n\n  var lSite = lArc.site,\n      cSite = arc.site,\n      rSite = rArc.site;\n\n  if (lSite === rSite) return;\n\n  var bx = cSite[0],\n      by = cSite[1],\n      ax = lSite[0] - bx,\n      ay = lSite[1] - by,\n      cx = rSite[0] - bx,\n      cy = rSite[1] - by;\n\n  var d = 2 * (ax * cy - ay * cx);\n  if (d >= -epsilon2) return;\n\n  var ha = ax * ax + ay * ay,\n      hc = cx * cx + cy * cy,\n      x = (cy * ha - ay * hc) / d,\n      y = (ax * hc - cx * ha) / d;\n\n  var circle = circlePool.pop() || new Circle;\n  circle.arc = arc;\n  circle.site = cSite;\n  circle.x = x + bx;\n  circle.y = (circle.cy = y + by) + Math.sqrt(x * x + y * y); // y bottom\n\n  arc.circle = circle;\n\n  var before = null,\n      node = circles._;\n\n  while (node) {\n    if (circle.y < node.y || (circle.y === node.y && circle.x <= node.x)) {\n      if (node.L) node = node.L;\n      else { before = node.P; break; }\n    } else {\n      if (node.R) node = node.R;\n      else { before = node; break; }\n    }\n  }\n\n  circles.insert(before, circle);\n  if (!before) firstCircle = circle;\n}\n\nexport function detachCircle(arc) {\n  var circle = arc.circle;\n  if (circle) {\n    if (!circle.P) firstCircle = circle.N;\n    circles.remove(circle);\n    circlePool.push(circle);\n    RedBlackNode(circle);\n    arc.circle = null;\n  }\n}\n","import {RedBlackNode} from \"./RedBlackTree\";\nimport {createCell} from \"./Cell\";\nimport {attachCircle, detachCircle} from \"./Circle\";\nimport {createEdge, setEdgeEnd} from \"./Edge\";\nimport {beaches, epsilon} from \"./Diagram\";\n\nvar beachPool = [];\n\nfunction Beach() {\n  RedBlackNode(this);\n  this.edge =\n  this.site =\n  this.circle = null;\n}\n\nfunction createBeach(site) {\n  var beach = beachPool.pop() || new Beach;\n  beach.site = site;\n  return beach;\n}\n\nfunction detachBeach(beach) {\n  detachCircle(beach);\n  beaches.remove(beach);\n  beachPool.push(beach);\n  RedBlackNode(beach);\n}\n\nexport function removeBeach(beach) {\n  var circle = beach.circle,\n      x = circle.x,\n      y = circle.cy,\n      vertex = [x, y],\n      previous = beach.P,\n      next = beach.N,\n      disappearing = [beach];\n\n  detachBeach(beach);\n\n  var lArc = previous;\n  while (lArc.circle\n      && Math.abs(x - lArc.circle.x) < epsilon\n      && Math.abs(y - lArc.circle.cy) < epsilon) {\n    previous = lArc.P;\n    disappearing.unshift(lArc);\n    detachBeach(lArc);\n    lArc = previous;\n  }\n\n  disappearing.unshift(lArc);\n  detachCircle(lArc);\n\n  var rArc = next;\n  while (rArc.circle\n      && Math.abs(x - rArc.circle.x) < epsilon\n      && Math.abs(y - rArc.circle.cy) < epsilon) {\n    next = rArc.N;\n    disappearing.push(rArc);\n    detachBeach(rArc);\n    rArc = next;\n  }\n\n  disappearing.push(rArc);\n  detachCircle(rArc);\n\n  var nArcs = disappearing.length,\n      iArc;\n  for (iArc = 1; iArc < nArcs; ++iArc) {\n    rArc = disappearing[iArc];\n    lArc = disappearing[iArc - 1];\n    setEdgeEnd(rArc.edge, lArc.site, rArc.site, vertex);\n  }\n\n  lArc = disappearing[0];\n  rArc = disappearing[nArcs - 1];\n  rArc.edge = createEdge(lArc.site, rArc.site, null, vertex);\n\n  attachCircle(lArc);\n  attachCircle(rArc);\n}\n\nexport function addBeach(site) {\n  var x = site[0],\n      directrix = site[1],\n      lArc,\n      rArc,\n      dxl,\n      dxr,\n      node = beaches._;\n\n  while (node) {\n    dxl = leftBreakPoint(node, directrix) - x;\n    if (dxl > epsilon) node = node.L; else {\n      dxr = x - rightBreakPoint(node, directrix);\n      if (dxr > epsilon) {\n        if (!node.R) {\n          lArc = node;\n          break;\n        }\n        node = node.R;\n      } else {\n        if (dxl > -epsilon) {\n          lArc = node.P;\n          rArc = node;\n        } else if (dxr > -epsilon) {\n          lArc = node;\n          rArc = node.N;\n        } else {\n          lArc = rArc = node;\n        }\n        break;\n      }\n    }\n  }\n\n  createCell(site);\n  var newArc = createBeach(site);\n  beaches.insert(lArc, newArc);\n\n  if (!lArc && !rArc) return;\n\n  if (lArc === rArc) {\n    detachCircle(lArc);\n    rArc = createBeach(lArc.site);\n    beaches.insert(newArc, rArc);\n    newArc.edge = rArc.edge = createEdge(lArc.site, newArc.site);\n    attachCircle(lArc);\n    attachCircle(rArc);\n    return;\n  }\n\n  if (!rArc) { // && lArc\n    newArc.edge = createEdge(lArc.site, newArc.site);\n    return;\n  }\n\n  // else lArc !== rArc\n  detachCircle(lArc);\n  detachCircle(rArc);\n\n  var lSite = lArc.site,\n      ax = lSite[0],\n      ay = lSite[1],\n      bx = site[0] - ax,\n      by = site[1] - ay,\n      rSite = rArc.site,\n      cx = rSite[0] - ax,\n      cy = rSite[1] - ay,\n      d = 2 * (bx * cy - by * cx),\n      hb = bx * bx + by * by,\n      hc = cx * cx + cy * cy,\n      vertex = [(cy * hb - by * hc) / d + ax, (bx * hc - cx * hb) / d + ay];\n\n  setEdgeEnd(rArc.edge, lSite, rSite, vertex);\n  newArc.edge = createEdge(lSite, site, null, vertex);\n  rArc.edge = createEdge(site, rSite, null, vertex);\n  attachCircle(lArc);\n  attachCircle(rArc);\n}\n\nfunction leftBreakPoint(arc, directrix) {\n  var site = arc.site,\n      rfocx = site[0],\n      rfocy = site[1],\n      pby2 = rfocy - directrix;\n\n  if (!pby2) return rfocx;\n\n  var lArc = arc.P;\n  if (!lArc) return -Infinity;\n\n  site = lArc.site;\n  var lfocx = site[0],\n      lfocy = site[1],\n      plby2 = lfocy - directrix;\n\n  if (!plby2) return lfocx;\n\n  var hl = lfocx - rfocx,\n      aby2 = 1 / pby2 - 1 / plby2,\n      b = hl / plby2;\n\n  if (aby2) return (-b + Math.sqrt(b * b - 2 * aby2 * (hl * hl / (-2 * plby2) - lfocy + plby2 / 2 + rfocy - pby2 / 2))) / aby2 + rfocx;\n\n  return (rfocx + lfocx) / 2;\n}\n\nfunction rightBreakPoint(arc, directrix) {\n  var rArc = arc.N;\n  if (rArc) return leftBreakPoint(rArc, directrix);\n  var site = arc.site;\n  return site[1] === directrix ? site[0] : Infinity;\n}\n","import {addBeach, removeBeach} from \"./Beach\";\nimport {sortCellHalfedges, cellHalfedgeStart, clipCells} from \"./Cell\";\nimport {firstCircle} from \"./Circle\";\nimport {clipEdges} from \"./Edge\";\nimport RedBlackTree from \"./RedBlackTree\";\n\nexport var epsilon = 1e-6;\nexport var epsilon2 = 1e-12;\nexport var beaches;\nexport var cells;\nexport var circles;\nexport var edges;\n\nfunction triangleArea(a, b, c) {\n  return (a[0] - c[0]) * (b[1] - a[1]) - (a[0] - b[0]) * (c[1] - a[1]);\n}\n\nfunction lexicographic(a, b) {\n  return b[1] - a[1]\n      || b[0] - a[0];\n}\n\nexport default function Diagram(sites, extent) {\n  var site = sites.sort(lexicographic).pop(),\n      x,\n      y,\n      circle;\n\n  edges = [];\n  cells = new Array(sites.length);\n  beaches = new RedBlackTree;\n  circles = new RedBlackTree;\n\n  while (true) {\n    circle = firstCircle;\n    if (site && (!circle || site[1] < circle.y || (site[1] === circle.y && site[0] < circle.x))) {\n      if (site[0] !== x || site[1] !== y) {\n        addBeach(site);\n        x = site[0], y = site[1];\n      }\n      site = sites.pop();\n    } else if (circle) {\n      removeBeach(circle.arc);\n    } else {\n      break;\n    }\n  }\n\n  sortCellHalfedges();\n\n  if (extent) {\n    var x0 = +extent[0][0],\n        y0 = +extent[0][1],\n        x1 = +extent[1][0],\n        y1 = +extent[1][1];\n    clipEdges(x0, y0, x1, y1);\n    clipCells(x0, y0, x1, y1);\n  }\n\n  this.edges = edges;\n  this.cells = cells;\n\n  beaches =\n  circles =\n  edges =\n  cells = null;\n}\n\nDiagram.prototype = {\n  constructor: Diagram,\n\n  polygons: function() {\n    var edges = this.edges;\n\n    return this.cells.map(function(cell) {\n      var polygon = cell.halfedges.map(function(i) { return cellHalfedgeStart(cell, edges[i]); });\n      polygon.data = cell.site.data;\n      return polygon;\n    });\n  },\n\n  triangles: function() {\n    var triangles = [],\n        edges = this.edges;\n\n    this.cells.forEach(function(cell, i) {\n      if (!(m = (halfedges = cell.halfedges).length)) return;\n      var site = cell.site,\n          halfedges,\n          j = -1,\n          m,\n          s0,\n          e1 = edges[halfedges[m - 1]],\n          s1 = e1.left === site ? e1.right : e1.left;\n\n      while (++j < m) {\n        s0 = s1;\n        e1 = edges[halfedges[j]];\n        s1 = e1.left === site ? e1.right : e1.left;\n        if (s0 && s1 && i < s0.index && i < s1.index && triangleArea(site, s0, s1) < 0) {\n          triangles.push([site.data, s0.data, s1.data]);\n        }\n      }\n    });\n\n    return triangles;\n  },\n\n  links: function() {\n    return this.edges.filter(function(edge) {\n      return edge.right;\n    }).map(function(edge) {\n      return {\n        source: edge.left.data,\n        target: edge.right.data\n      };\n    });\n  },\n\n  find: function(x, y, radius) {\n    var that = this, i0, i1 = that._found || 0, n = that.cells.length, cell;\n\n    // Use the previously-found cell, or start with an arbitrary one.\n    while (!(cell = that.cells[i1])) if (++i1 >= n) return null;\n    var dx = x - cell.site[0], dy = y - cell.site[1], d2 = dx * dx + dy * dy;\n\n    // Traverse the half-edges to find a closer cell, if any.\n    do {\n      cell = that.cells[i0 = i1], i1 = null;\n      cell.halfedges.forEach(function(e) {\n        var edge = that.edges[e], v = edge.left;\n        if ((v === cell.site || !v) && !(v = edge.right)) return;\n        var vx = x - v[0], vy = y - v[1], v2 = vx * vx + vy * vy;\n        if (v2 < d2) d2 = v2, i1 = v.index;\n      });\n    } while (i1 !== null);\n\n    that._found = i0;\n\n    return radius == null || d2 <= radius * radius ? cell.site : null;\n  }\n}\n","import constant from \"./constant\";\nimport {x as pointX, y as pointY} from \"./point\";\nimport Diagram, {epsilon} from \"./Diagram\";\n\nexport default function() {\n  var x = pointX,\n      y = pointY,\n      extent = null;\n\n  function voronoi(data) {\n    return new Diagram(data.map(function(d, i) {\n      var s = [Math.round(x(d, i, data) / epsilon) * epsilon, Math.round(y(d, i, data) / epsilon) * epsilon];\n      s.index = i;\n      s.data = d;\n      return s;\n    }), extent);\n  }\n\n  voronoi.polygons = function(data) {\n    return voronoi(data).polygons();\n  };\n\n  voronoi.links = function(data) {\n    return voronoi(data).links();\n  };\n\n  voronoi.triangles = function(data) {\n    return voronoi(data).triangles();\n  };\n\n  voronoi.x = function(_) {\n    return arguments.length ? (x = typeof _ === \"function\" ? _ : constant(+_), voronoi) : x;\n  };\n\n  voronoi.y = function(_) {\n    return arguments.length ? (y = typeof _ === \"function\" ? _ : constant(+_), voronoi) : y;\n  };\n\n  voronoi.extent = function(_) {\n    return arguments.length ? (extent = _ == null ? null : [[+_[0][0], +_[0][1]], [+_[1][0], +_[1][1]]], voronoi) : extent && [[extent[0][0], extent[0][1]], [extent[1][0], extent[1][1]]];\n  };\n\n  voronoi.size = function(_) {\n    return arguments.length ? (extent = _ == null ? null : [[0, 0], [+_[0], +_[1]]], voronoi) : extent && [extent[1][0] - extent[0][0], extent[1][1] - extent[0][1]];\n  };\n\n  return voronoi;\n}\n","import { defaultValue } from '../common-utils';\n\nconst sortSelection = (dataObjects, updateData, sortFn) =>\n    (a, b) => {\n        const kA = a[0];\n        const kB = b[0];\n        return sortFn([a[0], dataObjects.get(kA), updateData.get(kA)], [kB, dataObjects.get(kB), updateData.get(kB)]);\n    };\n\n/**\n * This class represents a selection applied on a data array.\n *\n * @class Selection\n */\nclass Selection {\n    /**\n     * Creates an instance of Selection.\n     * @param {Array<DataObject>} data Array of DataObjects.\n     * @memberof Selection\n     */\n    constructor (idGetter) {\n        this._dataObjects = new Map();\n        this._updateData = new Map();\n        this._enterData = new Map();\n        this._exitData = new Map();\n        this._idGetter = idGetter;\n    }\n\n    /**\n     * This method is used to supply seed data to a selection.\n     *\n     * @param {Array} newData Seed data to create the enter selection.\n     * @param {Functon | undefined } idGetter This function is used to uniqely identify a data entry.\n     * @return {Selection} Modified selection.\n     * @memberof Selection\n     */\n    data (newData) {\n        const entryData = new Map();\n        const exitdata = new Map();\n        const tempMap = new Map();\n        const duplicateData = new Map();\n        const updatedData = this._updateData;\n        const idGetter = this._idGetter;\n\n        newData.forEach((...params) => {\n            const key = idGetter ? idGetter(...params) : params[1];\n            if (!tempMap.has(key)) {\n                tempMap.set(key, params[0]);\n            } else {\n                duplicateData.push(key, params[0]);\n            }\n        });\n\n        let val;\n        // prepare enter data\n        let entries = tempMap.entries();\n        while (val = entries.next().value) {\n            if (!updatedData.has(val[0])) {\n                entryData.set(val[0], val[1]);\n            } else {\n                updatedData.set(val[0], val[1]);\n            }\n        }\n        // prepare exit data\n        entries = updatedData.entries();\n        while (val = entries.next().value) {\n            if (!tempMap.has(val[0])) {\n                exitdata.set(val[0], val[1]);\n            }\n        }\n\n        // put duplicate data to exit list\n        entries = duplicateData.entries();\n        while (val = entries.next().value) {\n            exitdata.set(val[0], val[1]);\n        }\n\n        const newSelection = new Selection(this._idGetter);\n        newSelection._updateData = updatedData;\n        newSelection._dataObjects = this._dataObjects;\n        newSelection._enterData = entryData;\n        newSelection._exitData = exitdata;\n\n        return newSelection;\n    }\n\n    /**\n     * Applies the supplied callback to each data element\n     * and returns a new selection.\n     *\n     * @param {Function} callback Callback to execute on each item.\n     * @return {Selection} New selection with data created using callback.\n     * @memberof Selection\n     */\n    append (callback) {\n        let val;\n        const dataObjects = new Map();\n        const data = new Map();\n        const mode = defaultValue(this._mode, 'update');\n        const currentData = this[`_${mode}Data`];\n        const entries = currentData.entries();\n\n        while (val = entries.next().value) {\n            dataObjects.set(val[0], callback(val[1]));\n            data.set(val[0], val[1]);\n        }\n\n        const newSelection = new Selection(this._idGetter);\n        newSelection._updateData = data;\n        newSelection._dataObjects = dataObjects;\n\n        return newSelection;\n    }\n\n     /**\n     * This method returns an enter selection that\n     * allows or update operations.\n     *\n     * @return {Selection} Instance of enter selection.\n     * @memberof Selection\n     */\n    enter () {\n        this._mode = 'enter';\n        return this;\n    }\n\n    /**\n     * Returns a selection with exit data.\n     *\n     * @return {Selection} Instance of selection.\n     * @memberof Selection\n     */\n    exit () {\n        this._mode = 'exit';\n        return this;\n    }\n\n     /**\n     * This method merges the data of one selection with another.\n     *\n     * @param {Selection} selection Instance of selection.\n     * @return {Selection} Modified selection.\n     * @memberof Selection\n     */\n    merge (target) {\n        const mergedObjects = new Map();\n        const mergedData = new Map();\n        let val;\n        let entries;\n\n        // merge Object and data present in this selection\n        entries = this._updateData.entries();\n        while (val = entries.next().value) {\n            if (!this._exitData.has(val[0])) {\n                mergedData.set(val[0], val[1]);\n                mergedObjects.set(val[0], this._dataObjects.get(val[0]));\n            }\n        }\n\n        // merge object from target selection\n        entries = target._updateData.entries();\n        while (val = entries.next().value) {\n            if (!(mergedData.has(val[0]) || target._exitData.has(val[0]))) {\n                mergedData.set(val[0], val[1]);\n                mergedObjects.set(val[0], target._dataObjects.get(val[0]));\n            }\n        }\n\n        const newSelection = new Selection(this._idGetter);\n        newSelection._updateData = mergedData;\n        newSelection._dataObjects = mergedObjects;\n\n        return newSelection;\n    }\n\n    each (fn) {\n        let val;\n        const entries = this._dataObjects.entries();\n\n        while (val = entries.next().value) {\n            fn(val[1], this._updateData.get(val[0]), val[0]);\n        }\n    }\n\n    map (fn) {\n        const newdata = new Map();\n        let val;\n        const entries = this._dataObjects.entries();\n\n        while (val = entries.next().value) {\n            newdata.set(val[0], fn(val[1], this._updateData.get(val[0]), val[0]));\n        }\n        const newSelection = new Selection(this._idGetter);\n        newSelection._updateData = this._updateData;\n        newSelection._dataObjects = newdata;\n\n        return newSelection;\n    }\n\n    remove () {\n        const mode = defaultValue(this._mode, 'update');\n        const currentData = this[`_${mode}Data`];\n\n        currentData.clear();\n\n        return this;\n    }\n\n    sort (sortFn) {\n        const updateData = this._updateData;\n        const dataObjects = this._dataObjects;\n        const sortSel = sortSelection(dataObjects, updateData, sortFn);\n\n        this._updateData = new Map([...updateData.entries()].sort(sortSel));\n        this._dataObjects = new Map([...dataObjects.entries()].sort(sortSel));\n        return this;\n    }\n\n    /**\n     *  Gets the object bound to a class\n     *\n     * @return {Object} current data set bound to the class\n     * @memberof Selection\n     */\n    getObjects () {\n        let val;\n        const objects = [];\n        const dataObjects = this._dataObjects;\n        // select the data to create object\n        const mode = defaultValue(this._mode, 'update');\n        const currentData = this[`_${mode}Data`];\n        const entries = currentData.entries();\n\n        while (val = entries.next().value) {\n            if (dataObjects.has(val[0])) {\n                objects.push(dataObjects.get(val[0]));\n            }\n        }\n\n        return objects;\n    }\n}\n\nexport default Selection;\n","export const ORDER_ASCENDING = 'ascending';\nexport const ORDER_DESCENDING = 'descending';\nexport const ORDER_NONE = 'none';\nexport const OFFSET_DIVERGING = 'diverging';\nexport const OFFSET_NONE = 'none';\nexport const OFFSET_EXPAND = 'expand';\nexport const OFFSET_WIGGLE = 'wiggle';\n","/* global window, requestAnimationFrame, cancelAnimationFrame */\nimport { FieldType, DimensionSubtype, DateTimeFormatter, DM_DERIVATIVES, default as DataModel } from 'datamodel';\nimport {\n    axisLeft,\n    axisRight,\n    axisTop,\n    axisBottom\n} from 'd3-axis';\nimport {\n    symbolCircle,\n    symbolCross,\n    symbolDiamond,\n    symbolSquare,\n    symbolStar,\n    symbolWye,\n    symbolTriangle,\n    symbol,\n    stack as d3Stack,\n    stackOffsetDiverging,\n    stackOrderNone,\n    stackOrderAscending,\n    stackOrderDescending,\n    stackOffsetNone,\n    stackOffsetExpand,\n    stackOffsetWiggle,\n    pie,\n    arc,\n    line,\n    curveLinear,\n    curveStepAfter,\n    curveStepBefore,\n    curveStep,\n    curveCatmullRom,\n    area\n} from 'd3-shape';\nimport { scaleBand } from 'd3-scale';\nimport { nest } from 'd3-collection';\nimport {\n    interpolate,\n    interpolateRgb,\n    piecewise,\n    interpolateNumber,\n    interpolateHslLong\n} from 'd3-interpolate';\nimport {\n    easeCubic,\n    easeBounce,\n    easePoly,\n    easeBack,\n    easeCircle,\n    easeLinear,\n    easeElastic\n} from 'd3-ease';\nimport {\n   color,\n   rgb,\n   hsl\n} from 'd3-color';\nimport { voronoi } from 'd3-voronoi';\nimport { dataSelect } from './DataSystem';\nimport { DATA_TYPE, SORT_ORDER_ASCENDING, SORT_ORDER_DESCENDING } from './enums';\nimport * as STACK_CONFIG from './enums/stack-config';\n\nconst { CATEGORICAL, TEMPORAL } = DimensionSubtype;\nconst { STRING, FUNCTION } = DATA_TYPE;\nconst { InvalidAwareTypes } = DataModel;\nconst HTMLElement = window.HTMLElement;\n\nconst isSimpleObject = (obj) => {\n    let token;\n    if (typeof obj === 'object') {\n        if (obj === null) { return false; }\n        token = Object.prototype.toString.call(obj);\n        if (token === '[object Object]') {\n            return (obj.constructor.toString().match(/^function (.*)\\(\\)/m) || [])[1] === 'Object';\n        }\n    }\n    return false;\n};\n\n/**\n * Returns unique id\n * @return {string} Unique id string\n */\nconst\n    getUniqueId = () => `id-${new Date().getTime()}${Math.round(Math.random() * 10000)}`;\n\n/**\n * Deep copies an object and returns a new object.\n * @param {Object} o Object to clone\n * @return {Object} New Object.\n */\nconst clone = (o) => {\n    const output = {};\n    let v;\n    for (const key in o) {\n        if ({}.hasOwnProperty.call(o, key)) {\n            v = o[key];\n            output[key] = isSimpleObject(v) ? clone(v) : v;\n        }\n    }\n    return output;\n};\n\n/**\n* Checks the existence of keys in an object\n* @param {Array} keys Set of keys which are to be checked\n* @param {Object} obj whose keys are checked from the set of keys provided\n* @return {Object} Error if the keys are absent, or the object itself\n*/\nconst checkExistence = (keys, obj) => {\n    const nonExistentKeys = [];\n    keys.forEach((key) => {\n        if (key in obj) {\n            return;\n        }\n        nonExistentKeys.push(key);\n    });\n    return nonExistentKeys;\n};\n\nconst sanitizeIP = {\n    typeObj: (keys, obj) => {\n        if (typeof obj !== 'object') {\n            return Error('Argument type object expected');\n        }\n\n        const nonExistentKeys = checkExistence(keys, obj);\n        if (nonExistentKeys.length) {\n            return Error(`Missing keys from parameter ${nonExistentKeys.join(', ')}`);\n        }\n        return obj;\n    },\n\n    /* istanbul ignore next */ htmlElem: (elem) => {\n        if (!(elem instanceof HTMLElement)) {\n            return Error('HTMLElement required');\n        }\n        return elem;\n    }\n};\n\n/**\n * Gets the maximum value from an array of objects for a given property name\n * @param  {Array.<Object>} data   Array of objects\n * @param  {string} field Field name\n * @return {number} Maximum value\n */\nconst getMax = (data, field) => Math.max(...data.map(d => d[field]));\n\n/**\n * Gets the minimum value from an array of objects for a given property name\n * @param  {Array.<Object>} data   Array of objects\n * @param  {string} field Field name\n * @return {number} Minimum value\n */\nconst getMin = (data, field) => Math.min(...data.map(d => d[field]));\n\n/**\n * Gets the domain from the data based on the field name and type of field\n * @param  {Array.<Object> | Array.<Array>} data       Data Array\n * @param  {Array.<string>} fields    Array of fields from where the domain will be calculated\n * @param {string} fieldType Type of field - nominal, quantitiative, temporal.\n * @return {Array} Usually contains a min and max value if field is quantitative or\n * an array of values if field type is nominal or ordinal\n */\nconst getDomainFromData = (data, fields, fieldType) => {\n    let domain;\n    const domArr = [];\n    data = data[0] instanceof Array ? data : [data];\n    switch (fieldType) {\n    case CATEGORICAL:\n        domain = [].concat(...data.map(arr => arr.map(d => d[fields[0]]).filter(d => d !== undefined)));\n        break;\n    default:\n        for (let i = 0, len = data.length; i < len; i++) {\n            const arr = data[i];\n            const [field0, field1] = fields;\n            const arr0 = arr.filter(d => !isNaN(d[field0]));\n            const arr1 = arr.filter(d => !isNaN(d[field1]));\n            if (arr0.length || arr1.length) {\n                const firstMin = getMin(arr0, field0);\n                const secondMin = getMin(arr1, field1);\n                const firstMax = getMax(arr0, field0);\n                const secondMax = getMax(arr1, field1);\n                domArr.push([Math.min(firstMin, secondMin), Math.max(firstMax, secondMax)]);\n            }\n        }\n        domain = domArr.length ? [Math.min(...domArr.map(d => d[0])), Math.max(...domArr.map(d => d[1]))] : [];\n        break;\n    }\n    return domain;\n};\n\nconst sanitizeDomainWhenEqual = (domain) => {\n    if (domain[0] === domain[1]) {\n        domain[0] = domain[0] > 0 ? 0 : domain[0];\n        domain[1] = domain[1] > 0 ? domain[1] : 0;\n    }\n    return domain;\n};\n\n/**\n * Union Domain values\n * @param {Array.<Array>} domains Array of domain values\n * @param {string} fieldType type of field - dimension,measure or datetime.\n * @return {Array} Unioned domain of all domain values.\n */\nconst unionDomain = (domains, fieldType) => {\n    let domain = [];\n    domains = domains.filter(dom => dom && dom.length);\n    if (domains.length) {\n        if (fieldType === CATEGORICAL) {\n            domain = [].concat(...domains);\n        } else {\n            domain = [Math.min(...domains.map(d => d[0])), Math.max(...domains.map(d => d[1]))];\n        }\n    }\n\n    return domain;\n};\n\nconst symbolFns = {\n    circle: symbolCircle,\n    cross: symbolCross,\n    diamond: symbolDiamond,\n    square: symbolSquare,\n    star: symbolStar,\n    wye: symbolWye,\n    triangle: symbolTriangle\n};\n\nconst easeFns = {\n    cubic: easeCubic,\n    bounce: easeBounce,\n    linear: easeLinear,\n    elastic: easeElastic,\n    back: easeBack,\n    poly: easePoly,\n    circle: easeCircle\n};\n\n/**\n * Returns the maximum or minimum points of a compare value from an array of objects.\n * @param {Array} points Array of objects\n * @param {string} compareValue Key in the object on which the comparing will be done.\n * @param {string} minOrMax minimum or maximum.\n * @return {Object} Minimum or maximum point.\n */\nconst getExtremePoint = (points, compareValue, minOrMax) => {\n    let extremePoint;\n    let point;\n    const len = points.length;\n    let minOrMaxVal = minOrMax === 'max' ? -Infinity : Infinity;\n    let val;\n\n    for (let i = 0; i < len; i++) {\n        point = points[i];\n        val = point[compareValue];\n        if (minOrMax === 'min' ? val < minOrMaxVal : val > minOrMaxVal) {\n            minOrMaxVal = val;\n            extremePoint = point;\n        }\n    }\n\n    return extremePoint;\n};\n\n/**\n * Returns the minimum point of a compare value from an array of objects.\n * @param {Array} points Array of objects\n * @param {string} compareValue Key in the object on which the comparing will be done.\n * @return {Object} Minimum point.\n */\nconst getMinPoint = (points, compareValue) => getExtremePoint(points, compareValue, 'min');\n\n/**\n * Returns the maximum point of a compare value from an array of objects.\n * @param {Array} points Array of objects\n * @param {string} compareValue Key in the object on which the comparing will be done.\n * @return {Object} Maximum point.\n */\nconst getMaxPoint = (points, compareValue) => getExtremePoint(points, compareValue, 'max');\n\n/**\n * Gets the index of the closest value of the given value from the array.\n * @param {Array} arr Array of values\n * @param {number} value Value from which the nearest value will be calculated.\n * @param {string} side side property.\n * @return {number} index of the closest value\n */\n/* istanbul ignore next */const getClosestIndexOf = (arr, value, side) => {\n    let low = 0;\n    const arrLen = arr.length;\n    let high = arrLen - 1;\n\n    let mid;\n    let d1;\n    let d2;\n\n    while (low < high) {\n        mid = Math.floor((low + high) / 2);\n        d1 = Math.abs(arr[mid] - value);\n        d2 = Math.abs(arr[mid + 1] - value);\n\n        if (d2 <= d1) {\n            low = mid + 1;\n        } else {\n            high = mid;\n        }\n    }\n\n    if (!side) {\n        return high;\n    }\n\n    const highVal = arr[high];\n    if (highVal === value) {\n        return high;\n    } else if (highVal > value) {\n        if (high === 0) { return high; }\n        return side === 'left' ? high - 1 : high;\n    }\n    if (high === arr.length - 1) { return high; }\n    return side === 'left' ? high : high + 1;\n};\n\nconst getNearestValue = (data, key) => {\n    const filterData = data.filter(d => typeof d === 'number');\n    return filterData[getClosestIndexOf(filterData, key)];\n};\n\n/**\n * Returns the browser window object\n * @return {Window} Window object\n*/\nconst getWindow = () => window;\n\n/**\n * Returns the browser window object\n * @return {Window} Window object\n*/\nconst reqAnimFrame = (() => requestAnimationFrame)();\n\nconst cancelAnimFrame = (() => cancelAnimationFrame)();\n\n/**\n * Capitalizes the first letter of the word\n * @param {string} text word\n * @return {string} Capitalized word\n */\nconst capitalizeFirst = (text) => {\n    text = text.toLowerCase();\n\n    return text.replace(/\\w\\S*/g, txt => txt.charAt(0).toUpperCase() + txt.substr(1));\n};\n\n/**\n *\n *\n * @param {*} arr\n */\nconst unique = arr => ([...new Set(arr)]);\n\n/**\n * Gets the minimum difference between two consecutive numbers  in an array.\n * @param {Array} arr Array of numbers\n * @param {number} index index of the value\n * @return {number} minimum difference between values\n */\n/* istanbul ignore next */ const getMinDiff = (arr, index) => {\n    let diff;\n    let uniqueVals;\n    if (index !== undefined) {\n        uniqueVals = unique(arr.map(d => d[index]));\n    } else {\n        uniqueVals = unique(arr);\n    }\n    if (uniqueVals.length > 1) {\n        diff = Math.abs(uniqueVals[1] - uniqueVals[0]);\n        for (let i = 2, len = uniqueVals.length; i < len; i++) {\n            diff = Math.min(diff, Math.abs(uniqueVals[i] - uniqueVals[i - 1]));\n        }\n    } else {\n        diff = uniqueVals[0];\n    }\n\n    return diff;\n};\n\n/**\n * Returns the class name appended with a given id.\n * @param {string} cls class name\n * @param {string} id unique identifier\n * @param {string} prefix string needed to add before the classname\n * @return {string} qualified class name\n */\n/* istanbul ignore next */const getQualifiedClassName = (cls, id, prefix) => {\n    cls = cls.replace(/^\\.*/, '');\n    return [`${prefix}-${cls}`, `${prefix}-${cls}-${id}`];\n};\n\n/**\n * This method is used to set the default value for variables\n * without sullying the code with conditional statements.\n *\n * @export\n * @param {any} param The parameter to test.\n * @param {any} value The default value to assign.\n * @return {any} The value.\n */\n/* istanbul ignore next */ const defaultValue = (param, value) => {\n    if (typeof param === 'undefined' || (typeof param === 'object' && !param)) {\n        return value;\n    }\n    return param;\n};\n\n/**\n * DESCRIPTION TODO\n *\n * @export\n * @param {Object} graph graph whose dependency order has to be generated\n * @return {Object}\n */\nconst getDependencyOrder = (graph) => {\n    const dependencyOrder = [];\n    const visited = {};\n    const keys = Object.keys(graph);\n    /**\n     * DESCRIPTION TODO\n     *\n     * @export\n     * @param {Object} name\n     * @return {Object}\n     */\n    const visit = (name) => {\n        if (dependencyOrder.length === keys.length) {\n            return true;\n        }\n        visited[name] = true;\n        const edges = graph[name];\n        for (let e = 0; e < edges.length; e++) {\n            const dep = edges[e];\n            if (!visited[dep]) {\n                visit(dep);\n            }\n        }\n\n        dependencyOrder.push(name);\n        return false;\n    };\n\n    for (let i = 0; i < keys.length; i++) {\n        if (visit(keys[i], i)) break;\n    }\n\n    return dependencyOrder;\n};\n\n/**\n * Iterates over the properties of an object and applies the function\n *\n * @param {any} obj object to be iterated upon\n * @param {any} fn  function to be applied on it\n */\nconst objectIterator = (obj, fn) => {\n    for (const key in obj) {\n        if (Object.hasOwnProperty.call(obj, key)) {\n            fn(key, obj);\n        }\n    }\n};\n\n/**\n * This class creates a d3 voronoi for retrieving the nearest neighbour of any point from a set of two\n * dimensional points\n * @class Voronoi\n */\n/* istanbul ignore next */ class Voronoi {\n    /**\n     * Initialize the voronoi with the data given.\n     * @param {Array.<Object>} data Array of points.\n     */\n    constructor (data = []) {\n        this._voronoi = voronoi().x(d => d.x).y(d => d.y);\n        this.data(data);\n    }\n\n    /**\n     * Sets the data to voronoi\n     * @param {Array.<Object>} data Array of objects.\n     * @return {Voronoi} Instance of voronoi.\n     */\n    data (data) {\n        if (data) {\n            this._voronoiFn = this._voronoi(data);\n        }\n        return this;\n    }\n\n    /**\n     * Finds the closest point to the x and y position given.\n     * @param {number} x x value\n     * @param {number} y y value\n     * @param {number} radius search radius.\n     * @return {Object} Details of the nearest point.\n     */\n    find (x, y, radius) {\n        return this._voronoiFn.find(x, y, radius);\n    }\n}\n\nconst getObjProp = (obj, ...fields) => {\n    if (obj === undefined || obj === null) {\n        return obj;\n    }\n    let retObj = obj;\n    for (let i = 0, len = fields.length; i < len; i++) {\n        retObj = retObj[fields[i]];\n        if (retObj === undefined || retObj === null) {\n            break;\n        }\n    }\n    return retObj;\n};\n\n/**\n * Sanitize an input number / string mixed number. Currently dot in the no is not supported.\n *\n * @param {number | string} val pure number or string mixed number\n * @return {number | null}  Number if it can be extracted. Otherwise null\n */\nconst intSanitizer = (val) => {\n    const arr = val.toString().match(/(\\d+)(px)*/g);\n    if (!arr) {\n        // If only characters are passed\n        return null;\n    }\n\n    return parseInt(arr[0], 10);\n};\n\nconst generateGetterSetters = (context, props) => {\n    Object.entries(props).forEach((propInfo) => {\n        const prop = propInfo[0];\n        const { sanitization, preset, onset, typeChecker, defaultValue: defVal } = propInfo[1];\n        const prototype = context.constructor.prototype;\n        if (!(Object.hasOwnProperty.call(prototype, prop))) {\n            if (defVal) {\n                context[`_${prop}`] = defVal;\n            }\n            context[prop] = (...params) => {\n                if (params.length) {\n                    let value = params[0];\n                    if (sanitization) {\n                        value = sanitization(context, params[0], context[`_${prop}`]);\n                    }\n                    if (preset) {\n                        preset(context, value);\n                    }\n                    if (typeChecker && !typeChecker(value)) {\n                        return context[`_${prop}`];\n                    }\n                    context[`_${prop}`] = value;\n                    if (onset) {\n                        onset(context, value);\n                    }\n                    return context;\n                } return context[`_${prop}`];\n            };\n        }\n    });\n};\n\n/**\n *\n *\n * @param {*} arr\n * @param {*} prop\n */\nconst getArraySum = (arr, prop) => arr.reduce((total, elem) => {\n    total += prop ? elem[prop] : elem;\n    return total;\n}, 0);\n\n/**\n *\n *\n * @param {*} arr1\n * @param {*} arr2\n *\n */\nconst arraysEqual = (arr1, arr2) => {\n    if (arr1.length !== arr2.length) { return false; }\n    for (let i = arr1.length; i >= 0; i--) {\n        if (arr1[i] !== arr2[i]) { return false; }\n    }\n\n    return true;\n};\n\n/* eslint valid-typeof:0 */\n/**\n * Returns a validation function which can be used to validate variables against a type and value\n *\n * @param {any} type type of value that the object should have\n * @return {Object} validation function\n */\nconst isEqual = type => (oldVal, newVal) => {\n    if (type === 'Array') {\n        if (!oldVal) {\n            return false;\n        }\n        return arraysEqual(oldVal, newVal);\n    } else if (type === 'Object') {\n        return Object.is(oldVal, newVal);\n    } return oldVal === newVal;\n};\n\n/**\n * Description @todo\n *\n * @param {any} transactionModel @todo\n * @param {any} transactionEndpoint @todo\n * @param {any} transactionItems @todo\n * @return {any} @todo\n */\nconst enableChainedTransaction = (transactionModel, transactionEndpoint, transactionItems) =>\n    transactionItems.forEach(item => transactionModel\n        .registerImmediateListener(item, ([, newVal]) => transactionEndpoint[item](newVal)));\n\n/**\n * Chceks if the element is istanceof HTMLElement\n *\n * @param {Object} elem any JS Object\n */\nconst isHTMLElem = elem => elem instanceof HTMLElement;\n\nconst ERROR_MSG = {\n    INTERFACE_IMPL: 'Method not implemented'\n};\n\n/**\n * Merges the sink object in the source by recursively iterating through the object properties\n * @param {Object} source Source Object\n * @param {Object} sink Sink Object\n * @return {Object} Merged object\n */\nconst mergeRecursive = (source, sink) => {\n    for (const prop in sink) {\n        if (isSimpleObject(source[prop]) && isSimpleObject(sink[prop])) {\n            mergeRecursive(source[prop], sink[prop]);\n        } else if (sink[prop] instanceof Object && sink[prop].constructor === Object) {\n            source[prop] = {};\n            mergeRecursive(source[prop], sink[prop]);\n        } else {\n            source[prop] = sink[prop];\n        }\n    }\n    return source;\n};\n\n/**\n * Creates a selection set from a data set with corresponding attributes\n *\n * @export\n * @param {Selection} sel contains previous selection\n * @param {Object} appendObj Object to be appended\n * @param {Array} data Data based on which the selection is entered/updated/removed\n * @param {Object} [attrs={}] Attributes to be set on the data\n * @return {Selection} Merged selection\n */\nconst createSelection = (sel, appendObj, data, idFn) => {\n    let selection = sel || dataSelect(idFn);\n\n    selection = selection.data(data);\n\n    const enter = selection.enter().append(appendObj);\n    const mergedSelection = enter.merge(selection);\n\n    const exitSelection = selection.exit();\n    exitSelection.getObjects().forEach(inst => inst.remove());\n    exitSelection.remove();\n    return mergedSelection;\n};\n\nconst interpolateArray = (data, fitCount) => {\n    const linearInterpolate = function (before, after, atPoint) {\n        return before + (after - before) * atPoint;\n    };\n    const newData = [];\n    const springFactor = ((data.length - 1) / (fitCount - 1));\n    newData[0] = data[0]; // for new allocation\n    for (let i = 1; i < fitCount - 1; i++) {\n        const tmp = i * springFactor;\n        const before = (Math.floor(tmp)).toFixed();\n        const after = (Math.ceil(tmp)).toFixed();\n        const atPoint = tmp - before;\n        newData[i] = linearInterpolate(data[before], data[after], atPoint);\n    }\n    newData[fitCount - 1] = data[data.length - 1]; // for new allocation\n    return newData;\n};\n\n/**\n *\n *\n * @param {*} fn\n */\nconst nextFrame = (fn) => {\n    setTimeout(() => {\n        fn();\n    }, 0);\n};\n\n/**\n *\n *\n * @param {*} angle\n */\nconst angleToRadian = angle => angle * Math.PI / 180;\n\n/**\n *\n *\n * @param {*} newName\n * @param {*} oldName\n */\nconst replaceCSSPrefix = () => {\n    // @todo\n};\n\n/**\n * Gets the  interpolator function from d3 color\n *\n */\nconst interpolator = () => interpolate;\n\n/**\n * Gets the number interpolator from d3 color\n *\n */\nconst numberInterpolator = () => interpolateNumber;\n\n/**\n * Gets the rgb interpolator from d3 color\n *\n */\nconst colorInterpolator = () => interpolateRgb;\n\n/**\n * Gets the hsl interpolator from d3 color\n *\n */\nconst hslInterpolator = () => interpolateHslLong;\n\nconst transformColors = () => ({\n    color,\n    rgb,\n    hsl\n});\n\n/**\n * Gets the piecewise interpolator from d3 color\n *\n */\nconst piecewiseInterpolator = () => piecewise;\n\nfunction hue2rgb (p, q, t) {\n    if (t < 0) t += 1;\n    if (t > 1) t -= 1;\n    if (t < 1 / 6) return p + (q - p) * 6 * t;\n    if (t < 1 / 2) return q;\n    if (t < 2 / 3) return p + (q - p) * (2 / 3 - t) * 6;\n    return p;\n}\n\n  /**\n   * Converts an HSL color value to RGB. Conversion formula\n   * adapted from http://en.wikipedia.org/wiki/HSL_color_space.\n   * Assumes h, s, and l are contained in the set [0, 1] and\n   * returns r, g, and b in the set [0, 255].\n   *\n   * @param   Number  h       The hue\n   * @param   Number  s       The saturation\n   * @param   Number  l       The lightness\n   * @return  Array           The RGB representation\n   */\nconst hslToRgb = (h, s, l, a = 1) => {\n    let r;\n    let g;\n    let b;\n\n    if (s === 0) {\n        r = g = b = l; // achromatic\n    } else {\n        const q = l < 0.5 ? l * (1 + s) : l + s - l * s;\n        const p = 2 * l - q;\n\n        r = hue2rgb(p, q, h + 1 / 3);\n        g = hue2rgb(p, q, h);\n        b = hue2rgb(p, q, h - 1 / 3);\n    }\n\n    return [r * 255, g * 255, b * 255, a];\n};\n\n  /**\n   * Converts an RGB color value to HSV. Conversion formula\n   * adapted from http://en.wikipedia.org/wiki/HSV_color_space.\n   * Assumes r, g, and b are contained in the set [0, 255] and\n   * returns h, s, and v in the set [0, 1].\n   *\n   * @param   Number  r       The red color value\n   * @param   Number  g       The green color value\n   * @param   Number  b       The blue color value\n   * @return  Array           The HSV representation\n   */\nconst rgbToHsv = (r, g, b, a = 1) => {\n    r = +r; g = +g; b = +b; a = +a;\n    r /= 255; g /= 255; b /= 255;\n    const max = Math.max(r, g, b);\n    const min = Math.min(r, g, b);\n    let h;\n    let s;\n    const l = (max + min) / 2;\n\n    if (max === min) {\n        h = s = 0; // achromatic\n    } else {\n        const d = max - min;\n        s = l > 0.5 ? d / (2 - max - min) : d / (max + min);\n        switch (max) {\n        case r: h = (g - b) / d + (g < b ? 6 : 0); break;\n        case g: h = (b - r) / d + 2; break;\n        case b: h = (r - g) / d + 4; break;\n        default: break;\n        }\n        h /= 6;\n    }\n    return [h, s, l, a];\n};\n\n  /**\n   * Converts an HSV color value to RGB. Conversion formula\n   * adapted from http://en.wikipedia.org/wiki/HSV_color_space.\n   * Assumes h, s, and v are contained in the set [0, 1] and\n   * returns r, g, and b in the set [0, 255].\n   *\n   * @param   Number  h       The hue\n   * @param   Number  s       The saturation\n   * @param   Number  v       The value\n   * @return  Array           The RGB representation\n   */\nconst hsvToRgb = (h, s, v, a = 1) => {\n    let r;\n    let g;\n    let b;\n\n    const i = Math.floor(h * 6);\n    const f = h * 6 - i;\n    const p = v * (1 - s);\n    const q = v * (1 - f * s);\n    const t = v * (1 - (1 - f) * s);\n\n    switch (i % 6) {\n    case 0: r = v; g = t; b = p; break;\n    case 1: r = q; g = v; b = p; break;\n    case 2: r = p; g = v; b = t; break;\n    case 3: r = p; g = q; b = v; break;\n    case 4: r = t; g = p; b = v; break;\n    case 5: r = v; g = p; b = q; break;\n    default: break;\n    }\n\n    return [r * 255, g * 255, b * 255, a];\n};\n\nconst hexToHsv = (hex) => {\n    const shorthandRegex = /^#?([a-f\\d])([a-f\\d])([a-f\\d])$/i;\n    hex = hex.replace(shorthandRegex, (m, r, g, b) => r + r + g + g + b + b);\n\n    const result = /^#?([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})$/i.exec(hex);\n    return result ? rgbToHsv(parseInt(result[1], 16), parseInt(result[2], 16), parseInt(result[3], 16)) : '';\n};\n\nconst detectColor = (col) => {\n    const matchRgb = /rgb\\((\\d{1,3}), (\\d{1,3}), (\\d{1,3})\\)/;\n    const matchHsl = /hsl\\((\\d+),\\s*([\\d.]+)%,\\s*([\\d.]+)%\\)/g;\n\n    // Source :  https://gist.github.com/sethlopezme/d072b945969a3cc2cc11\n     // eslint-disable-next-line\n    const matchRgba = /rgba?\\(((25[0-5]|2[0-4]\\d|1\\d{1,2}|\\d\\d?)\\s*,\\s*?){2}(25[0-5]|2[0-4]\\d|1\\d{1,2}|\\d\\d?)\\s*,?\\s*([01]\\.?\\d*?)?\\)/;\n     // eslint-disable-next-line\n    const matchHsla = /^hsla\\((\\d.+),\\s*([\\d.]+)%,\\s*([\\d.]+)%,\\s*(\\d*(?:\\.\\d+)?)\\)$/;\n    const matchHex = /^#([0-9a-f]{3}){1,2}$/i;\n\n    if (matchRgb.test(col) || matchRgba.test(col)) {\n        return 'rgb';\n    } else if (matchHsl.test(col) || matchHsla.test(col)) {\n        return 'hsl';\n    } else if (matchHex.test(col)) {\n        return 'hex';\n    } return col;\n};\n\nconst assembleModelFromIdentifiers = (model, identifiers) => {\n    let schema = [];\n    let data;\n    const fieldMap = model.getFieldsConfig();\n    if (identifiers.length) {\n        const fields = identifiers[0];\n        const len = fields.length;\n        for (let i = 0; i < len; i++) {\n            const field = fields[i];\n            const fieldObj = fieldMap[field] && Object.assign({}, fieldMap[field].def);\n            if (fieldObj) {\n                schema.push(Object.assign(fieldObj));\n            }\n        }\n\n        data = [];\n        const header = identifiers[0];\n        for (let i = 1; i < identifiers.length; i += 1) {\n            const vals = identifiers[i];\n            const temp = {};\n            vals.forEach((fieldVal, cIdx) => {\n                temp[header[cIdx]] = fieldVal;\n            });\n            data.push(temp);\n        }\n    } else {\n        data = [];\n        schema = [];\n    }\n\n    return new model.constructor(data, schema);\n};\n\n/**\n *\n *\n * @param {*} dataModel\n * @param {*} criteria\n *\n */\nconst getDataModelFromRange = (dataModel, criteria, mode) => {\n    if (criteria === null) {\n        return null;\n    }\n    const selFields = Object.keys(criteria);\n    const selFn = fields => selFields.every((field) => {\n        const val = fields[field].internalValue;\n        const range = criteria[field][0] instanceof Array ? criteria[field][0] : criteria[field];\n        if (typeof range[0] === STRING) {\n            return range.find(d => d === val) !== undefined;\n        }\n        return range ? val >= range[0] && val <= range[1] : true;\n    });\n\n    return dataModel.select(selFn, {\n        saveChild: false,\n        mode\n    });\n};\n\n/**\n *\n *\n * @param {*} dataModel\n * @param {*} identifiers\n *\n */\nconst getDataModelFromIdentifiers = (dataModel, identifiers, mode) => {\n    let filteredDataModel;\n    if (identifiers instanceof Array) {\n        const fieldsConfig = dataModel.getFieldsConfig();\n\n        const dataArr = identifiers.slice(1, identifiers.length);\n        if (identifiers instanceof Function) {\n            filteredDataModel = identifiers(dataModel, {}, false);\n        } else if (identifiers instanceof Array && identifiers[0].length) {\n            const filteredSchema = identifiers[0].filter(d => d in fieldsConfig);\n            filteredDataModel = dataModel.select((fields) => {\n                let include = true;\n                filteredSchema.forEach((propField, idx) => {\n                    const value = fields[propField].internalValue;\n                    const index = dataArr.findIndex(d => d[idx] === value);\n                    include = include && index !== -1;\n                });\n                return include;\n            }, {\n                saveChild: false,\n                mode\n            });\n        } else {\n            filteredDataModel = dataModel.select(() => false, {\n                saveChild: false,\n                mode\n            });\n        }\n    } else {\n        filteredDataModel = getDataModelFromRange(dataModel, identifiers, mode);\n    }\n    return filteredDataModel;\n};\n\n/**\n *\n *\n * @param {*} context\n * @param {*} listenerMap\n */\nconst registerListeners = (context, listenerMap, ...params) => {\n    const propListenerMap = listenerMap(context, ...params);\n    for (const key in propListenerMap) {\n        if ({}.hasOwnProperty.call(propListenerMap, key)) {\n            const { namespace } = params[1];\n            let ns = null;\n            if (namespace) {\n                ns = namespace;\n            }\n            const mapObj = propListenerMap[key];\n            const propType = mapObj.type;\n            const props = mapObj.props;\n            const listenerFn = mapObj.listener;\n            context.store()[propType](props, listenerFn, false, {\n                namespace: ns\n            });\n        }\n    }\n};\n\nconst isValidValue = value => !isNaN(value) && value !== -Infinity && value !== Infinity;\n/**\n *\n *\n * @param {*} str\n *\n */\nconst escapeHTML = (str) => {\n    const htmlEscapes = {\n        '&': '&amp;',\n        '<': '&lt;',\n        '>': '&gt;',\n        '\"': '&quot;',\n        \"'\": '&#x27;',\n        '/': '&#x2F;'\n    };\n    const htmlEscaper = /[&<>\"'/]/g;\n    return (`${str}`).replace(htmlEscaper, match => htmlEscapes[match]);\n};\n\n/**\n *\n *\n * @param {*} arr\n */\nconst transposeArray = arr => arr[0].map((col, i) => arr.map(row => row[i]));\nconst toArray = arr => (arr instanceof Array ? arr : [arr]);\nconst extendsClass = (cls, extendsFrom, found) => {\n    if (!cls) {\n        return false;\n    }\n    const prototype = cls.prototype;\n    if (prototype instanceof extendsFrom) {\n        found = true;\n    } else {\n        found = extendsClass(prototype, extendsFrom, found);\n    }\n    return found;\n};\n\n/**\n *\n * @param {*} dm1\n * @param {*} dm2\n */\nconst concatModels = (dm1, dm2) => {\n    const dataObj1 = dm1.getData();\n    const dataObj2 = dm2.getData();\n    const data1 = dataObj1.data;\n    const data2 = dataObj2.data;\n    const schema1 = dataObj1.schema;\n    const schema2 = dataObj2.schema;\n    const tuples1 = {};\n    const tuples2 = {};\n    const commonTuples = {};\n    for (let i = 0; i < data1.length; i++) {\n        for (let ii = 0; ii < data2.length; ii++) {\n            const row1 = data1[i];\n            const row2 = data2[ii];\n            const dim1Values = row1.filter((d, idx) => schema1[idx].type === FieldType.DIMENSION);\n            const dim2Values = row2.filter((d, idx) => schema2[idx].type === FieldType.DIMENSION);\n            const allDimSame = dim1Values.every(value => dim2Values.indexOf(value) !== -1);\n            if (allDimSame) {\n                const key = dim1Values.join();\n                !commonTuples[key] && (commonTuples[key] = {});\n                row1.forEach((value, idx) => {\n                    commonTuples[key][schema1[idx].name] = value;\n                });\n                row2.forEach((value, idx) => {\n                    commonTuples[key][schema2[idx].name] = value;\n                });\n            } else {\n                const dm1Key = dim1Values.join();\n                const dm2Key = dim2Values.join();\n                if (!commonTuples[dm1Key] && !commonTuples[dm2Key]) {\n                    !tuples1[dm1Key] && (tuples1[dm1Key] = {});\n                    !tuples2[dm2Key] && (tuples2[dm2Key] = {});\n                    row1.forEach((value, idx) => {\n                        tuples1[dm1Key][schema1[idx].name] = value;\n                    });\n                    row2.forEach((value, idx) => {\n                        tuples2[dm2Key][schema2[idx].name] = value;\n                    });\n                }\n            }\n        }\n    }\n\n    const commonSchema = [...schema1, ...schema2.filter(s2 => schema1.findIndex(s1 => s1.name === s2.name) === -1)];\n    const data = [...Object.values(tuples1), ...Object.values(tuples2), ...Object.values(commonTuples)];\n    return [data, commonSchema];\n};\n\nconst getSymbol = type => symbol().type(symbolFns[type]);\n\nconst stackOrders = {\n    [STACK_CONFIG.ORDER_NONE]: stackOrderNone,\n    [STACK_CONFIG.ORDER_ASCENDING]: stackOrderAscending,\n    [STACK_CONFIG.ORDER_DESCENDING]: stackOrderDescending\n};\nconst stackOffsets = {\n    [STACK_CONFIG.OFFSET_DIVERGING]: stackOffsetDiverging,\n    [STACK_CONFIG.OFFSET_NONE]: stackOffsetNone,\n    [STACK_CONFIG.OFFSET_EXPAND]: stackOffsetExpand,\n    [STACK_CONFIG.OFFSET_WIGGLE]: stackOffsetWiggle\n};\n\n// eslint-disable-next-line require-jsdoc\nconst stack = params => d3Stack().keys(params.keys).offset(stackOffsets[params.offset])\n                .order(stackOrders[params.order])(params.data);\n\n/**\n * Groups the data into a hierarchical tree structure based on one or more fields.\n * @param { Object } params Configuration properties for nesting data\n * @param { Array.<Array> } params.data Data which needs to be grouped\n * @param { Array.<number> } params.keys Field indices by which the data will be grouped\n * @return { Array.<Object> } Grouped data array\n */\nconst nestCollection = (params) => {\n    const nestFn = nest();\n    params.keys.forEach(key => nestFn.key(d => d[key]));\n    return nestFn.entries(params.data);\n};\n\nconst pathInterpolators = {\n    curveLinear,\n    curveStepAfter,\n    curveStepBefore,\n    curveStep,\n    curveCatmullRom,\n    stepAfter: curveStepAfter,\n    catmullRom: curveCatmullRom,\n    step: curveStep,\n    stepBefore: curveStepBefore,\n    linear: curveLinear\n};\n\nconst Symbols = {\n    axisLeft,\n    axisRight,\n    axisTop,\n    axisBottom,\n    line,\n    area,\n    pie,\n    arc,\n    nest\n};\n\nconst Scales = {\n    band: scaleBand\n};\n\nconst getSmallestDiff = (points) => {\n    points = points.sort((a, b) => a - b);\n    let minDiff = points[1] - points[0];\n    for (let i = 2; i < points.length; i++) {\n        minDiff = Math.min(minDiff, points[i] - points[i - 1]);\n    }\n\n    return minDiff;\n};\n\nconst timeFormats = {\n    millisecond: '%A, %b %e, %H:%M:%S.%L',\n    second: '%A, %b %e, %H:%M:%S',\n    minute: '%A, %b %e, %H:%M',\n    hour: '%A, %b %e, %H:%M',\n    day: '%A, %b %e, %Y',\n    month: '%B %Y',\n    year: '%Y'\n};\n\nconst timeDurations = [\n    ['millisecond', 'second', 'minute', 'hour', 'day', 'month', 'year'],\n    [1, 1000, 60000, 3600000, 86400000, 2592000000, 31536000000]\n];\n\nconst getNearestInterval = (interval) => {\n    const index = getClosestIndexOf(timeDurations[1], interval);\n    return timeDurations[0][index];\n};\n\nconst formatTemporal = (value, interval) => {\n    const nearestInterval = getNearestInterval(interval);\n    return DateTimeFormatter.formatAs(value, timeFormats[nearestInterval]);\n};\n\nconst temporalFields = (dataModel) => {\n    const filteredFields = {};\n    Object.entries(dataModel.getFieldspace().getDimension()).forEach(([fieldName, fieldObj]) => {\n        if (fieldObj.subtype() === TEMPORAL) {\n            filteredFields[fieldName] = fieldObj;\n        }\n    });\n    return filteredFields;\n};\n\nconst require = (lookupWhat, lookupDetails) => ({\n    resolvable: (store) => {\n        const lookupTarget = store[lookupWhat];\n        const depArr = lookupDetails.slice(0, lookupDetails.length - 1);\n        const fn = lookupDetails[lookupDetails.length - 1]; // fn\n\n        const deps = depArr.map(str => lookupTarget[str]);\n        return {\n            fn: fn(...deps),\n            depArr\n        };\n    }\n});\n\nconst nextAnimFrame = window.requestAnimationFrame || window.webkitRequestAnimationFrame ||\n    window.mozRequestAnimationFrame || window.oRequestAnimationFrame || window.msRequestAnimationFrame ||\n    function (callback) {\n        setTimeout(callback, 16);\n    };\n\nconst getValueParser = config => (val) => {\n    if (val instanceof InvalidAwareTypes) {\n        return val in config ? config[val] : `${val}`;\n    }\n    return val;\n};\n\nconst retrieveNearestGroupByReducers = (dataModel, ...measureFieldNames) => {\n    const filteredReducers = {};\n    if (dataModel instanceof DataModel) {\n        const derivations = [...dataModel.getDerivations().reverse(), ...dataModel.getAncestorDerivations().reverse()];\n        const nearestReducers = defaultValue(\n            getObjProp(derivations.find(derv => derv.op === DM_DERIVATIVES.GROUPBY), 'criteria'), {});\n\n        const measures = dataModel.getFieldspace().getMeasure();\n        measureFieldNames = measureFieldNames.length ? measureFieldNames : Object.keys(measures);\n        measureFieldNames.forEach((measureName) => {\n            if (nearestReducers[measureName]) {\n                filteredReducers[measureName] = nearestReducers[measureName];\n            } else {\n                const measureField = measures[measureName];\n                if (measureField) {\n                    filteredReducers[measureName] = measureField.defAggFn();\n                }\n            }\n        });\n    }\n    return filteredReducers;\n};\n\nconst retrieveFieldDisplayName = (dm, fieldName) => dm.getFieldspace().fieldsObj()[fieldName].displayName();\n/**\n * Fetches the nearest sort operation details by traversing the chain of parent DataModels\n * @param {Object} dataModel Instance of DataModel\n *\n * @return {Array|null} sort criteria, null if no sort operation found\n */\nconst nearestSortingDetails = (dataModel) => {\n    const allDerivations = [...dataModel.getAncestorDerivations(), ...dataModel.getDerivations()];\n    const nearestSortDerivation = allDerivations.reverse().find(derivation => derivation.op === DM_DERIVATIVES.SORT);\n\n    return nearestSortDerivation ? nearestSortDerivation.criteria : null;\n};\n\n/**\n * Map containing key, value sortingOrder pairs\n */\nconst sortOrderMap = {\n    [SORT_ORDER_ASCENDING]: (firstVal, secondVal) => firstVal.localeCompare(secondVal),\n    [SORT_ORDER_DESCENDING]: (firstVal, secondVal) => secondVal.localeCompare(firstVal)\n};\n\n/**\n * Sort categorical field based on it's sorting order\n * @param {string} sortOrder Order by which field is to be sorted (asc or desc or func)\n * @param {string} firstVal First sort parameter\n * @param {string} secondVal Second sort parameter\n * @return {number} position\n*/\nconst sortCategoricalField = (sortOrder, firstVal, secondVal) => {\n    const sortOrderType = typeof sortOrder;\n\n    if (sortOrderType === FUNCTION) {\n        return sortOrder(firstVal, secondVal);\n    } else if (sortOrderType === STRING) {\n        return sortOrderMap[sortOrder](firstVal, secondVal);\n    }\n    return null;\n};\n\nconst intersect = (arr1, arr2, accessors = [v => v, v => v]) => {\n    const [fn1, fn2] = accessors;\n    const set = new Set(arr2.map(v => fn2(v)));\n    return arr1.filter(value => set.has(fn1(value)));\n};\n\nexport {\n    getValueParser,\n    require,\n    intersect,\n    Scales,\n    Symbols,\n    pathInterpolators,\n    stack,\n    nestCollection,\n    getSymbol,\n    transformColors,\n    detectColor,\n    hexToHsv,\n    hslToRgb,\n    rgbToHsv,\n    hsvToRgb,\n    concatModels,\n    toArray,\n    angleToRadian,\n    escapeHTML,\n    generateGetterSetters,\n    getArraySum,\n    interpolator,\n    piecewiseInterpolator,\n    getDataModelFromIdentifiers,\n    getDataModelFromRange,\n    colorInterpolator,\n    numberInterpolator,\n    ERROR_MSG,\n    reqAnimFrame,\n    nextAnimFrame,\n    transposeArray,\n    cancelAnimFrame,\n    getMax,\n    getMin,\n    getDomainFromData,\n    getUniqueId,\n    mergeRecursive,\n    unionDomain,\n    symbolFns,\n    easeFns,\n    clone,\n    isEqual,\n    interpolateArray,\n    getMinPoint,\n    defaultValue,\n    getMaxPoint,\n    getClosestIndexOf,\n    Voronoi,\n    checkExistence,\n    sanitizeIP,\n    getMinDiff,\n    capitalizeFirst,\n    getWindow,\n    getQualifiedClassName,\n    getDependencyOrder,\n    objectIterator,\n    intSanitizer,\n    enableChainedTransaction,\n    isHTMLElem,\n    isSimpleObject,\n    nextFrame,\n    registerListeners,\n    replaceCSSPrefix,\n    getObjProp,\n    extendsClass,\n    assembleModelFromIdentifiers,\n    isValidValue,\n    hslInterpolator,\n    getSmallestDiff,\n    getNearestValue,\n    retrieveNearestGroupByReducers,\n    nearestSortingDetails,\n    createSelection,\n    formatTemporal,\n    temporalFields,\n    retrieveFieldDisplayName,\n    sanitizeDomainWhenEqual,\n    sortCategoricalField\n};\n","export function linear(t) {\n  return +t;\n}\n","export function circleIn(t) {\n  return 1 - Math.sqrt(1 - t * t);\n}\n\nexport function circleOut(t) {\n  return Math.sqrt(1 - --t * t);\n}\n\nexport function circleInOut(t) {\n  return ((t *= 2) <= 1 ? 1 - Math.sqrt(1 - t * t) : Math.sqrt(1 - (t -= 2) * t) + 1) / 2;\n}\n","import Selection from './selection';\n/**\n * This function applies a selection operation on a data array.\n *\n * @export\n * @param {Array} [data=[]] The data array to be observed.\n * @return {Selection} Instance of a selection.\n */\nexport default function dataSelect (idFn) {\n    return new Selection(idFn);\n}\n\n","import {path} from \"d3-path\";\nimport circle from \"./symbol/circle\";\nimport cross from \"./symbol/cross\";\nimport diamond from \"./symbol/diamond\";\nimport star from \"./symbol/star\";\nimport square from \"./symbol/square\";\nimport triangle from \"./symbol/triangle\";\nimport wye from \"./symbol/wye\";\nimport constant from \"./constant\";\n\nexport var symbols = [\n  circle,\n  cross,\n  diamond,\n  square,\n  star,\n  triangle,\n  wye\n];\n\nexport default function() {\n  var type = constant(circle),\n      size = constant(64),\n      context = null;\n\n  function symbol() {\n    var buffer;\n    if (!context) context = buffer = path();\n    type.apply(this, arguments).draw(context, +size.apply(this, arguments));\n    if (buffer) return context = null, buffer + \"\" || null;\n  }\n\n  symbol.type = function(_) {\n    return arguments.length ? (type = typeof _ === \"function\" ? _ : constant(_), symbol) : type;\n  };\n\n  symbol.size = function(_) {\n    return arguments.length ? (size = typeof _ === \"function\" ? _ : constant(+_), symbol) : size;\n  };\n\n  symbol.context = function(_) {\n    return arguments.length ? (context = _ == null ? null : _, symbol) : context;\n  };\n\n  return symbol;\n}\n","import ascending from \"./ascending\";\n\nexport default function(series) {\n  return ascending(series).reverse();\n}\n","export default function(series, order) {\n  if (!((n = series.length) > 1)) return;\n  for (var i, j = 0, d, dy, yp, yn, n, m = series[order[0]].length; j < m; ++j) {\n    for (yp = yn = 0, i = 0; i < n; ++i) {\n      if ((dy = (d = series[order[i]][j])[1] - d[0]) >= 0) {\n        d[0] = yp, d[1] = yp += dy;\n      } else if (dy < 0) {\n        d[1] = yn, d[0] = yn += dy;\n      } else {\n        d[0] = yp;\n      }\n    }\n  }\n}\n","import none from \"./none\";\n\nexport default function(series, order) {\n  if (!((n = series.length) > 0)) return;\n  for (var i, n, j = 0, m = series[0].length, y; j < m; ++j) {\n    for (y = i = 0; i < n; ++i) y += series[i][j][1] || 0;\n    if (y) for (i = 0; i < n; ++i) series[i][j][1] /= y;\n  }\n  none(series, order);\n}\n","import none from \"./none\";\n\nexport default function(series, order) {\n  if (!((n = series.length) > 0) || !((m = (s0 = series[order[0]]).length) > 0)) return;\n  for (var y = 0, j = 1, s0, m, n; j < m; ++j) {\n    for (var i = 0, s1 = 0, s2 = 0; i < n; ++i) {\n      var si = series[order[i]],\n          sij0 = si[j][1] || 0,\n          sij1 = si[j - 1][1] || 0,\n          s3 = (sij0 - sij1) / 2;\n      for (var k = 0; k < i; ++k) {\n        var sk = series[order[k]],\n            skj0 = sk[j][1] || 0,\n            skj1 = sk[j - 1][1] || 0;\n        s3 += skj0 - skj1;\n      }\n      s1 += sij0, s2 += s3 * sij0;\n    }\n    s0[j - 1][1] += s0[j - 1][0] = y;\n    if (s1) y -= s2 / s1;\n  }\n  s0[j - 1][1] += s0[j - 1][0] = y;\n  none(series, order);\n}\n","import constant from \"./constant\";\nimport descending from \"./descending\";\nimport identity from \"./identity\";\nimport {tau} from \"./math\";\n\nexport default function() {\n  var value = identity,\n      sortValues = descending,\n      sort = null,\n      startAngle = constant(0),\n      endAngle = constant(tau),\n      padAngle = constant(0);\n\n  function pie(data) {\n    var i,\n        n = data.length,\n        j,\n        k,\n        sum = 0,\n        index = new Array(n),\n        arcs = new Array(n),\n        a0 = +startAngle.apply(this, arguments),\n        da = Math.min(tau, Math.max(-tau, endAngle.apply(this, arguments) - a0)),\n        a1,\n        p = Math.min(Math.abs(da) / n, padAngle.apply(this, arguments)),\n        pa = p * (da < 0 ? -1 : 1),\n        v;\n\n    for (i = 0; i < n; ++i) {\n      if ((v = arcs[index[i] = i] = +value(data[i], i, data)) > 0) {\n        sum += v;\n      }\n    }\n\n    // Optionally sort the arcs by previously-computed values or by data.\n    if (sortValues != null) index.sort(function(i, j) { return sortValues(arcs[i], arcs[j]); });\n    else if (sort != null) index.sort(function(i, j) { return sort(data[i], data[j]); });\n\n    // Compute the arcs! They are stored in the original data's order.\n    for (i = 0, k = sum ? (da - n * pa) / sum : 0; i < n; ++i, a0 = a1) {\n      j = index[i], v = arcs[j], a1 = a0 + (v > 0 ? v * k : 0) + pa, arcs[j] = {\n        data: data[j],\n        index: i,\n        value: v,\n        startAngle: a0,\n        endAngle: a1,\n        padAngle: p\n      };\n    }\n\n    return arcs;\n  }\n\n  pie.value = function(_) {\n    return arguments.length ? (value = typeof _ === \"function\" ? _ : constant(+_), pie) : value;\n  };\n\n  pie.sortValues = function(_) {\n    return arguments.length ? (sortValues = _, sort = null, pie) : sortValues;\n  };\n\n  pie.sort = function(_) {\n    return arguments.length ? (sort = _, sortValues = null, pie) : sort;\n  };\n\n  pie.startAngle = function(_) {\n    return arguments.length ? (startAngle = typeof _ === \"function\" ? _ : constant(+_), pie) : startAngle;\n  };\n\n  pie.endAngle = function(_) {\n    return arguments.length ? (endAngle = typeof _ === \"function\" ? _ : constant(+_), pie) : endAngle;\n  };\n\n  pie.padAngle = function(_) {\n    return arguments.length ? (padAngle = typeof _ === \"function\" ? _ : constant(+_), pie) : padAngle;\n  };\n\n  return pie;\n}\n","export var xhtml = \"http://www.w3.org/1999/xhtml\";\n\nexport default {\n  svg: \"http://www.w3.org/2000/svg\",\n  xhtml: xhtml,\n  xlink: \"http://www.w3.org/1999/xlink\",\n  xml: \"http://www.w3.org/XML/1998/namespace\",\n  xmlns: \"http://www.w3.org/2000/xmlns/\"\n};\n","import namespaces from \"./namespaces\";\n\nexport default function(name) {\n  var prefix = name += \"\", i = prefix.indexOf(\":\");\n  if (i >= 0 && (prefix = name.slice(0, i)) !== \"xmlns\") name = name.slice(i + 1);\n  return namespaces.hasOwnProperty(prefix) ? {space: namespaces[prefix], local: name} : name;\n}\n","import namespace from \"./namespace\";\nimport {xhtml} from \"./namespaces\";\n\nfunction creatorInherit(name) {\n  return function() {\n    var document = this.ownerDocument,\n        uri = this.namespaceURI;\n    return uri === xhtml && document.documentElement.namespaceURI === xhtml\n        ? document.createElement(name)\n        : document.createElementNS(uri, name);\n  };\n}\n\nfunction creatorFixed(fullname) {\n  return function() {\n    return this.ownerDocument.createElementNS(fullname.space, fullname.local);\n  };\n}\n\nexport default function(name) {\n  var fullname = namespace(name);\n  return (fullname.local\n      ? creatorFixed\n      : creatorInherit)(fullname);\n}\n","function none() {}\n\nexport default function(selector) {\n  return selector == null ? none : function() {\n    return this.querySelector(selector);\n  };\n}\n","function empty() {\n  return [];\n}\n\nexport default function(selector) {\n  return selector == null ? empty : function() {\n    return this.querySelectorAll(selector);\n  };\n}\n","export default function(selector) {\n  return function() {\n    return this.matches(selector);\n  };\n}\n","export default function(update) {\n  return new Array(update.length);\n}\n","import sparse from \"./sparse\";\nimport {Selection} from \"./index\";\n\nexport default function() {\n  return new Selection(this._enter || this._groups.map(sparse), this._parents);\n}\n\nexport function EnterNode(parent, datum) {\n  this.ownerDocument = parent.ownerDocument;\n  this.namespaceURI = parent.namespaceURI;\n  this._next = null;\n  this._parent = parent;\n  this.__data__ = datum;\n}\n\nEnterNode.prototype = {\n  constructor: EnterNode,\n  appendChild: function(child) { return this._parent.insertBefore(child, this._next); },\n  insertBefore: function(child, next) { return this._parent.insertBefore(child, next); },\n  querySelector: function(selector) { return this._parent.querySelector(selector); },\n  querySelectorAll: function(selector) { return this._parent.querySelectorAll(selector); }\n};\n","export default function(x) {\n  return function() {\n    return x;\n  };\n}\n","import {Selection} from \"./index\";\nimport {EnterNode} from \"./enter\";\nimport constant from \"../constant\";\n\nvar keyPrefix = \"$\"; // Protect against keys like “__proto__”.\n\nfunction bindIndex(parent, group, enter, update, exit, data) {\n  var i = 0,\n      node,\n      groupLength = group.length,\n      dataLength = data.length;\n\n  // Put any non-null nodes that fit into update.\n  // Put any null nodes into enter.\n  // Put any remaining data into enter.\n  for (; i < dataLength; ++i) {\n    if (node = group[i]) {\n      node.__data__ = data[i];\n      update[i] = node;\n    } else {\n      enter[i] = new EnterNode(parent, data[i]);\n    }\n  }\n\n  // Put any non-null nodes that don’t fit into exit.\n  for (; i < groupLength; ++i) {\n    if (node = group[i]) {\n      exit[i] = node;\n    }\n  }\n}\n\nfunction bindKey(parent, group, enter, update, exit, data, key) {\n  var i,\n      node,\n      nodeByKeyValue = {},\n      groupLength = group.length,\n      dataLength = data.length,\n      keyValues = new Array(groupLength),\n      keyValue;\n\n  // Compute the key for each node.\n  // If multiple nodes have the same key, the duplicates are added to exit.\n  for (i = 0; i < groupLength; ++i) {\n    if (node = group[i]) {\n      keyValues[i] = keyValue = keyPrefix + key.call(node, node.__data__, i, group);\n      if (keyValue in nodeByKeyValue) {\n        exit[i] = node;\n      } else {\n        nodeByKeyValue[keyValue] = node;\n      }\n    }\n  }\n\n  // Compute the key for each datum.\n  // If there a node associated with this key, join and add it to update.\n  // If there is not (or the key is a duplicate), add it to enter.\n  for (i = 0; i < dataLength; ++i) {\n    keyValue = keyPrefix + key.call(parent, data[i], i, data);\n    if (node = nodeByKeyValue[keyValue]) {\n      update[i] = node;\n      node.__data__ = data[i];\n      nodeByKeyValue[keyValue] = null;\n    } else {\n      enter[i] = new EnterNode(parent, data[i]);\n    }\n  }\n\n  // Add any remaining nodes that were not bound to data to exit.\n  for (i = 0; i < groupLength; ++i) {\n    if ((node = group[i]) && (nodeByKeyValue[keyValues[i]] === node)) {\n      exit[i] = node;\n    }\n  }\n}\n\nexport default function(value, key) {\n  if (!value) {\n    data = new Array(this.size()), j = -1;\n    this.each(function(d) { data[++j] = d; });\n    return data;\n  }\n\n  var bind = key ? bindKey : bindIndex,\n      parents = this._parents,\n      groups = this._groups;\n\n  if (typeof value !== \"function\") value = constant(value);\n\n  for (var m = groups.length, update = new Array(m), enter = new Array(m), exit = new Array(m), j = 0; j < m; ++j) {\n    var parent = parents[j],\n        group = groups[j],\n        groupLength = group.length,\n        data = value.call(parent, parent && parent.__data__, j, parents),\n        dataLength = data.length,\n        enterGroup = enter[j] = new Array(dataLength),\n        updateGroup = update[j] = new Array(dataLength),\n        exitGroup = exit[j] = new Array(groupLength);\n\n    bind(parent, group, enterGroup, updateGroup, exitGroup, data, key);\n\n    // Now connect the enter nodes to their following update node, such that\n    // appendChild can insert the materialized enter node before this node,\n    // rather than at the end of the parent node.\n    for (var i0 = 0, i1 = 0, previous, next; i0 < dataLength; ++i0) {\n      if (previous = enterGroup[i0]) {\n        if (i0 >= i1) i1 = i0 + 1;\n        while (!(next = updateGroup[i1]) && ++i1 < dataLength);\n        previous._next = next || null;\n      }\n    }\n  }\n\n  update = new Selection(update, parents);\n  update._enter = enter;\n  update._exit = exit;\n  return update;\n}\n","import {Selection} from \"./index\";\n\nexport default function(compare) {\n  if (!compare) compare = ascending;\n\n  function compareNode(a, b) {\n    return a && b ? compare(a.__data__, b.__data__) : !a - !b;\n  }\n\n  for (var groups = this._groups, m = groups.length, sortgroups = new Array(m), j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, sortgroup = sortgroups[j] = new Array(n), node, i = 0; i < n; ++i) {\n      if (node = group[i]) {\n        sortgroup[i] = node;\n      }\n    }\n    sortgroup.sort(compareNode);\n  }\n\n  return new Selection(sortgroups, this._parents).order();\n}\n\nfunction ascending(a, b) {\n  return a < b ? -1 : a > b ? 1 : a >= b ? 0 : NaN;\n}\n","import namespace from \"../namespace\";\n\nfunction attrRemove(name) {\n  return function() {\n    this.removeAttribute(name);\n  };\n}\n\nfunction attrRemoveNS(fullname) {\n  return function() {\n    this.removeAttributeNS(fullname.space, fullname.local);\n  };\n}\n\nfunction attrConstant(name, value) {\n  return function() {\n    this.setAttribute(name, value);\n  };\n}\n\nfunction attrConstantNS(fullname, value) {\n  return function() {\n    this.setAttributeNS(fullname.space, fullname.local, value);\n  };\n}\n\nfunction attrFunction(name, value) {\n  return function() {\n    var v = value.apply(this, arguments);\n    if (v == null) this.removeAttribute(name);\n    else this.setAttribute(name, v);\n  };\n}\n\nfunction attrFunctionNS(fullname, value) {\n  return function() {\n    var v = value.apply(this, arguments);\n    if (v == null) this.removeAttributeNS(fullname.space, fullname.local);\n    else this.setAttributeNS(fullname.space, fullname.local, v);\n  };\n}\n\nexport default function(name, value) {\n  var fullname = namespace(name);\n\n  if (arguments.length < 2) {\n    var node = this.node();\n    return fullname.local\n        ? node.getAttributeNS(fullname.space, fullname.local)\n        : node.getAttribute(fullname);\n  }\n\n  return this.each((value == null\n      ? (fullname.local ? attrRemoveNS : attrRemove) : (typeof value === \"function\"\n      ? (fullname.local ? attrFunctionNS : attrFunction)\n      : (fullname.local ? attrConstantNS : attrConstant)))(fullname, value));\n}\n","export default function(node) {\n  return (node.ownerDocument && node.ownerDocument.defaultView) // node is a Node\n      || (node.document && node) // node is a Window\n      || node.defaultView; // node is a Document\n}\n","import defaultView from \"../window\";\n\nfunction styleRemove(name) {\n  return function() {\n    this.style.removeProperty(name);\n  };\n}\n\nfunction styleConstant(name, value, priority) {\n  return function() {\n    this.style.setProperty(name, value, priority);\n  };\n}\n\nfunction styleFunction(name, value, priority) {\n  return function() {\n    var v = value.apply(this, arguments);\n    if (v == null) this.style.removeProperty(name);\n    else this.style.setProperty(name, v, priority);\n  };\n}\n\nexport default function(name, value, priority) {\n  return arguments.length > 1\n      ? this.each((value == null\n            ? styleRemove : typeof value === \"function\"\n            ? styleFunction\n            : styleConstant)(name, value, priority == null ? \"\" : priority))\n      : styleValue(this.node(), name);\n}\n\nexport function styleValue(node, name) {\n  return node.style.getPropertyValue(name)\n      || defaultView(node).getComputedStyle(node, null).getPropertyValue(name);\n}\n","function classArray(string) {\n  return string.trim().split(/^|\\s+/);\n}\n\nfunction classList(node) {\n  return node.classList || new ClassList(node);\n}\n\nfunction ClassList(node) {\n  this._node = node;\n  this._names = classArray(node.getAttribute(\"class\") || \"\");\n}\n\nClassList.prototype = {\n  add: function(name) {\n    var i = this._names.indexOf(name);\n    if (i < 0) {\n      this._names.push(name);\n      this._node.setAttribute(\"class\", this._names.join(\" \"));\n    }\n  },\n  remove: function(name) {\n    var i = this._names.indexOf(name);\n    if (i >= 0) {\n      this._names.splice(i, 1);\n      this._node.setAttribute(\"class\", this._names.join(\" \"));\n    }\n  },\n  contains: function(name) {\n    return this._names.indexOf(name) >= 0;\n  }\n};\n\nfunction classedAdd(node, names) {\n  var list = classList(node), i = -1, n = names.length;\n  while (++i < n) list.add(names[i]);\n}\n\nfunction classedRemove(node, names) {\n  var list = classList(node), i = -1, n = names.length;\n  while (++i < n) list.remove(names[i]);\n}\n\nfunction classedTrue(names) {\n  return function() {\n    classedAdd(this, names);\n  };\n}\n\nfunction classedFalse(names) {\n  return function() {\n    classedRemove(this, names);\n  };\n}\n\nfunction classedFunction(names, value) {\n  return function() {\n    (value.apply(this, arguments) ? classedAdd : classedRemove)(this, names);\n  };\n}\n\nexport default function(name, value) {\n  var names = classArray(name + \"\");\n\n  if (arguments.length < 2) {\n    var list = classList(this.node()), i = -1, n = names.length;\n    while (++i < n) if (!list.contains(names[i])) return false;\n    return true;\n  }\n\n  return this.each((typeof value === \"function\"\n      ? classedFunction : value\n      ? classedTrue\n      : classedFalse)(names, value));\n}\n","function textRemove() {\n  this.textContent = \"\";\n}\n\nfunction textConstant(value) {\n  return function() {\n    this.textContent = value;\n  };\n}\n\nfunction textFunction(value) {\n  return function() {\n    var v = value.apply(this, arguments);\n    this.textContent = v == null ? \"\" : v;\n  };\n}\n\nexport default function(value) {\n  return arguments.length\n      ? this.each(value == null\n          ? textRemove : (typeof value === \"function\"\n          ? textFunction\n          : textConstant)(value))\n      : this.node().textContent;\n}\n","function htmlRemove() {\n  this.innerHTML = \"\";\n}\n\nfunction htmlConstant(value) {\n  return function() {\n    this.innerHTML = value;\n  };\n}\n\nfunction htmlFunction(value) {\n  return function() {\n    var v = value.apply(this, arguments);\n    this.innerHTML = v == null ? \"\" : v;\n  };\n}\n\nexport default function(value) {\n  return arguments.length\n      ? this.each(value == null\n          ? htmlRemove : (typeof value === \"function\"\n          ? htmlFunction\n          : htmlConstant)(value))\n      : this.node().innerHTML;\n}\n","function raise() {\n  if (this.nextSibling) this.parentNode.appendChild(this);\n}\n\nexport default function() {\n  return this.each(raise);\n}\n","function lower() {\n  if (this.previousSibling) this.parentNode.insertBefore(this, this.parentNode.firstChild);\n}\n\nexport default function() {\n  return this.each(lower);\n}\n","import creator from \"../creator\";\nimport selector from \"../selector\";\n\nfunction constantNull() {\n  return null;\n}\n\nexport default function(name, before) {\n  var create = typeof name === \"function\" ? name : creator(name),\n      select = before == null ? constantNull : typeof before === \"function\" ? before : selector(before);\n  return this.select(function() {\n    return this.insertBefore(create.apply(this, arguments), select.apply(this, arguments) || null);\n  });\n}\n","function remove() {\n  var parent = this.parentNode;\n  if (parent) parent.removeChild(this);\n}\n\nexport default function() {\n  return this.each(remove);\n}\n","function selection_cloneShallow() {\n  return this.parentNode.insertBefore(this.cloneNode(false), this.nextSibling);\n}\n\nfunction selection_cloneDeep() {\n  return this.parentNode.insertBefore(this.cloneNode(true), this.nextSibling);\n}\n\nexport default function(deep) {\n  return this.select(deep ? selection_cloneDeep : selection_cloneShallow);\n}\n","var filterEvents = {};\n\nexport var event = null;\n\nif (typeof document !== \"undefined\") {\n  var element = document.documentElement;\n  if (!(\"onmouseenter\" in element)) {\n    filterEvents = {mouseenter: \"mouseover\", mouseleave: \"mouseout\"};\n  }\n}\n\nfunction filterContextListener(listener, index, group) {\n  listener = contextListener(listener, index, group);\n  return function(event) {\n    var related = event.relatedTarget;\n    if (!related || (related !== this && !(related.compareDocumentPosition(this) & 8))) {\n      listener.call(this, event);\n    }\n  };\n}\n\nfunction contextListener(listener, index, group) {\n  return function(event1) {\n    var event0 = event; // Events can be reentrant (e.g., focus).\n    event = event1;\n    try {\n      listener.call(this, this.__data__, index, group);\n    } finally {\n      event = event0;\n    }\n  };\n}\n\nfunction parseTypenames(typenames) {\n  return typenames.trim().split(/^|\\s+/).map(function(t) {\n    var name = \"\", i = t.indexOf(\".\");\n    if (i >= 0) name = t.slice(i + 1), t = t.slice(0, i);\n    return {type: t, name: name};\n  });\n}\n\nfunction onRemove(typename) {\n  return function() {\n    var on = this.__on;\n    if (!on) return;\n    for (var j = 0, i = -1, m = on.length, o; j < m; ++j) {\n      if (o = on[j], (!typename.type || o.type === typename.type) && o.name === typename.name) {\n        this.removeEventListener(o.type, o.listener, o.capture);\n      } else {\n        on[++i] = o;\n      }\n    }\n    if (++i) on.length = i;\n    else delete this.__on;\n  };\n}\n\nfunction onAdd(typename, value, capture) {\n  var wrap = filterEvents.hasOwnProperty(typename.type) ? filterContextListener : contextListener;\n  return function(d, i, group) {\n    var on = this.__on, o, listener = wrap(value, i, group);\n    if (on) for (var j = 0, m = on.length; j < m; ++j) {\n      if ((o = on[j]).type === typename.type && o.name === typename.name) {\n        this.removeEventListener(o.type, o.listener, o.capture);\n        this.addEventListener(o.type, o.listener = listener, o.capture = capture);\n        o.value = value;\n        return;\n      }\n    }\n    this.addEventListener(typename.type, listener, capture);\n    o = {type: typename.type, name: typename.name, value: value, listener: listener, capture: capture};\n    if (!on) this.__on = [o];\n    else on.push(o);\n  };\n}\n\nexport default function(typename, value, capture) {\n  var typenames = parseTypenames(typename + \"\"), i, n = typenames.length, t;\n\n  if (arguments.length < 2) {\n    var on = this.node().__on;\n    if (on) for (var j = 0, m = on.length, o; j < m; ++j) {\n      for (i = 0, o = on[j]; i < n; ++i) {\n        if ((t = typenames[i]).type === o.type && t.name === o.name) {\n          return o.value;\n        }\n      }\n    }\n    return;\n  }\n\n  on = value ? onAdd : onRemove;\n  if (capture == null) capture = false;\n  for (i = 0; i < n; ++i) this.each(on(typenames[i], value, capture));\n  return this;\n}\n\nexport function customEvent(event1, listener, that, args) {\n  var event0 = event;\n  event1.sourceEvent = event;\n  event = event1;\n  try {\n    return listener.apply(that, args);\n  } finally {\n    event = event0;\n  }\n}\n","import defaultView from \"../window\";\n\nfunction dispatchEvent(node, type, params) {\n  var window = defaultView(node),\n      event = window.CustomEvent;\n\n  if (typeof event === \"function\") {\n    event = new event(type, params);\n  } else {\n    event = window.document.createEvent(\"Event\");\n    if (params) event.initEvent(type, params.bubbles, params.cancelable), event.detail = params.detail;\n    else event.initEvent(type, false, false);\n  }\n\n  node.dispatchEvent(event);\n}\n\nfunction dispatchConstant(type, params) {\n  return function() {\n    return dispatchEvent(this, type, params);\n  };\n}\n\nfunction dispatchFunction(type, params) {\n  return function() {\n    return dispatchEvent(this, type, params.apply(this, arguments));\n  };\n}\n\nexport default function(type, params) {\n  return this.each((typeof params === \"function\"\n      ? dispatchFunction\n      : dispatchConstant)(type, params));\n}\n","import selection_select from \"./select\";\nimport selection_selectAll from \"./selectAll\";\nimport selection_filter from \"./filter\";\nimport selection_data from \"./data\";\nimport selection_enter from \"./enter\";\nimport selection_exit from \"./exit\";\nimport selection_join from \"./join\";\nimport selection_merge from \"./merge\";\nimport selection_order from \"./order\";\nimport selection_sort from \"./sort\";\nimport selection_call from \"./call\";\nimport selection_nodes from \"./nodes\";\nimport selection_node from \"./node\";\nimport selection_size from \"./size\";\nimport selection_empty from \"./empty\";\nimport selection_each from \"./each\";\nimport selection_attr from \"./attr\";\nimport selection_style from \"./style\";\nimport selection_property from \"./property\";\nimport selection_classed from \"./classed\";\nimport selection_text from \"./text\";\nimport selection_html from \"./html\";\nimport selection_raise from \"./raise\";\nimport selection_lower from \"./lower\";\nimport selection_append from \"./append\";\nimport selection_insert from \"./insert\";\nimport selection_remove from \"./remove\";\nimport selection_clone from \"./clone\";\nimport selection_datum from \"./datum\";\nimport selection_on from \"./on\";\nimport selection_dispatch from \"./dispatch\";\n\nexport var root = [null];\n\nexport function Selection(groups, parents) {\n  this._groups = groups;\n  this._parents = parents;\n}\n\nfunction selection() {\n  return new Selection([[document.documentElement]], root);\n}\n\nSelection.prototype = selection.prototype = {\n  constructor: Selection,\n  select: selection_select,\n  selectAll: selection_selectAll,\n  filter: selection_filter,\n  data: selection_data,\n  enter: selection_enter,\n  exit: selection_exit,\n  join: selection_join,\n  merge: selection_merge,\n  order: selection_order,\n  sort: selection_sort,\n  call: selection_call,\n  nodes: selection_nodes,\n  node: selection_node,\n  size: selection_size,\n  empty: selection_empty,\n  each: selection_each,\n  attr: selection_attr,\n  style: selection_style,\n  property: selection_property,\n  classed: selection_classed,\n  text: selection_text,\n  html: selection_html,\n  raise: selection_raise,\n  lower: selection_lower,\n  append: selection_append,\n  insert: selection_insert,\n  remove: selection_remove,\n  clone: selection_clone,\n  datum: selection_datum,\n  on: selection_on,\n  dispatch: selection_dispatch\n};\n\nexport default selection;\n","import {Selection} from \"./index\";\nimport selector from \"../selector\";\n\nexport default function(select) {\n  if (typeof select !== \"function\") select = selector(select);\n\n  for (var groups = this._groups, m = groups.length, subgroups = new Array(m), j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, subgroup = subgroups[j] = new Array(n), node, subnode, i = 0; i < n; ++i) {\n      if ((node = group[i]) && (subnode = select.call(node, node.__data__, i, group))) {\n        if (\"__data__\" in node) subnode.__data__ = node.__data__;\n        subgroup[i] = subnode;\n      }\n    }\n  }\n\n  return new Selection(subgroups, this._parents);\n}\n","import {Selection} from \"./index\";\nimport selectorAll from \"../selectorAll\";\n\nexport default function(select) {\n  if (typeof select !== \"function\") select = selectorAll(select);\n\n  for (var groups = this._groups, m = groups.length, subgroups = [], parents = [], j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, node, i = 0; i < n; ++i) {\n      if (node = group[i]) {\n        subgroups.push(select.call(node, node.__data__, i, group));\n        parents.push(node);\n      }\n    }\n  }\n\n  return new Selection(subgroups, parents);\n}\n","import {Selection} from \"./index\";\nimport matcher from \"../matcher\";\n\nexport default function(match) {\n  if (typeof match !== \"function\") match = matcher(match);\n\n  for (var groups = this._groups, m = groups.length, subgroups = new Array(m), j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, subgroup = subgroups[j] = [], node, i = 0; i < n; ++i) {\n      if ((node = group[i]) && match.call(node, node.__data__, i, group)) {\n        subgroup.push(node);\n      }\n    }\n  }\n\n  return new Selection(subgroups, this._parents);\n}\n","import sparse from \"./sparse\";\nimport {Selection} from \"./index\";\n\nexport default function() {\n  return new Selection(this._exit || this._groups.map(sparse), this._parents);\n}\n","export default function(onenter, onupdate, onexit) {\n  var enter = this.enter(), update = this, exit = this.exit();\n  enter = typeof onenter === \"function\" ? onenter(enter) : enter.append(onenter + \"\");\n  if (onupdate != null) update = onupdate(update);\n  if (onexit == null) exit.remove(); else onexit(exit);\n  return enter && update ? enter.merge(update).order() : update;\n}\n","import {Selection} from \"./index\";\n\nexport default function(selection) {\n\n  for (var groups0 = this._groups, groups1 = selection._groups, m0 = groups0.length, m1 = groups1.length, m = Math.min(m0, m1), merges = new Array(m0), j = 0; j < m; ++j) {\n    for (var group0 = groups0[j], group1 = groups1[j], n = group0.length, merge = merges[j] = new Array(n), node, i = 0; i < n; ++i) {\n      if (node = group0[i] || group1[i]) {\n        merge[i] = node;\n      }\n    }\n  }\n\n  for (; j < m0; ++j) {\n    merges[j] = groups0[j];\n  }\n\n  return new Selection(merges, this._parents);\n}\n","export default function() {\n\n  for (var groups = this._groups, j = -1, m = groups.length; ++j < m;) {\n    for (var group = groups[j], i = group.length - 1, next = group[i], node; --i >= 0;) {\n      if (node = group[i]) {\n        if (next && node.compareDocumentPosition(next) ^ 4) next.parentNode.insertBefore(node, next);\n        next = node;\n      }\n    }\n  }\n\n  return this;\n}\n","export default function() {\n  var callback = arguments[0];\n  arguments[0] = this;\n  callback.apply(null, arguments);\n  return this;\n}\n","export default function() {\n  var nodes = new Array(this.size()), i = -1;\n  this.each(function() { nodes[++i] = this; });\n  return nodes;\n}\n","export default function() {\n\n  for (var groups = this._groups, j = 0, m = groups.length; j < m; ++j) {\n    for (var group = groups[j], i = 0, n = group.length; i < n; ++i) {\n      var node = group[i];\n      if (node) return node;\n    }\n  }\n\n  return null;\n}\n","export default function() {\n  var size = 0;\n  this.each(function() { ++size; });\n  return size;\n}\n","export default function() {\n  return !this.node();\n}\n","export default function(callback) {\n\n  for (var groups = this._groups, j = 0, m = groups.length; j < m; ++j) {\n    for (var group = groups[j], i = 0, n = group.length, node; i < n; ++i) {\n      if (node = group[i]) callback.call(node, node.__data__, i, group);\n    }\n  }\n\n  return this;\n}\n","function propertyRemove(name) {\n  return function() {\n    delete this[name];\n  };\n}\n\nfunction propertyConstant(name, value) {\n  return function() {\n    this[name] = value;\n  };\n}\n\nfunction propertyFunction(name, value) {\n  return function() {\n    var v = value.apply(this, arguments);\n    if (v == null) delete this[name];\n    else this[name] = v;\n  };\n}\n\nexport default function(name, value) {\n  return arguments.length > 1\n      ? this.each((value == null\n          ? propertyRemove : typeof value === \"function\"\n          ? propertyFunction\n          : propertyConstant)(name, value))\n      : this.node()[name];\n}\n","import creator from \"../creator\";\n\nexport default function(name) {\n  var create = typeof name === \"function\" ? name : creator(name);\n  return this.select(function() {\n    return this.appendChild(create.apply(this, arguments));\n  });\n}\n","export default function(value) {\n  return arguments.length\n      ? this.property(\"__data__\", value)\n      : this.node().__data__;\n}\n","import {Selection, root} from \"./selection/index\";\n\nexport default function(selector) {\n  return typeof selector === \"string\"\n      ? new Selection([[document.querySelector(selector)]], [document.documentElement])\n      : new Selection([[selector]], root);\n}\n","var nextId = 0;\n\nexport default function local() {\n  return new Local;\n}\n\nfunction Local() {\n  this._ = \"@\" + (++nextId).toString(36);\n}\n\nLocal.prototype = local.prototype = {\n  constructor: Local,\n  get: function(node) {\n    var id = this._;\n    while (!(id in node)) if (!(node = node.parentNode)) return;\n    return node[id];\n  },\n  set: function(node, value) {\n    return node[this._] = value;\n  },\n  remove: function(node) {\n    return this._ in node && delete node[this._];\n  },\n  toString: function() {\n    return this._;\n  }\n};\n","import {event} from \"./selection/on\";\n\nexport default function() {\n  var current = event, source;\n  while (source = current.sourceEvent) current = source;\n  return current;\n}\n","export default function(node, event) {\n  var svg = node.ownerSVGElement || node;\n\n  if (svg.createSVGPoint) {\n    var point = svg.createSVGPoint();\n    point.x = event.clientX, point.y = event.clientY;\n    point = point.matrixTransform(node.getScreenCTM().inverse());\n    return [point.x, point.y];\n  }\n\n  var rect = node.getBoundingClientRect();\n  return [event.clientX - rect.left - node.clientLeft, event.clientY - rect.top - node.clientTop];\n}\n","import sourceEvent from \"./sourceEvent\";\nimport point from \"./point\";\n\nexport default function(node) {\n  var event = sourceEvent();\n  if (event.changedTouches) event = event.changedTouches[0];\n  return point(node, event);\n}\n","import sourceEvent from \"./sourceEvent\";\nimport point from \"./point\";\n\nexport default function(node, touches, identifier) {\n  if (arguments.length < 3) identifier = touches, touches = sourceEvent().changedTouches;\n\n  for (var i = 0, n = touches ? touches.length : 0, touch; i < n; ++i) {\n    if ((touch = touches[i]).identifier === identifier) {\n      return point(node, touch);\n    }\n  }\n\n  return null;\n}\n","var noop = {value: function() {}};\n\nfunction dispatch() {\n  for (var i = 0, n = arguments.length, _ = {}, t; i < n; ++i) {\n    if (!(t = arguments[i] + \"\") || (t in _)) throw new Error(\"illegal type: \" + t);\n    _[t] = [];\n  }\n  return new Dispatch(_);\n}\n\nfunction Dispatch(_) {\n  this._ = _;\n}\n\nfunction parseTypenames(typenames, types) {\n  return typenames.trim().split(/^|\\s+/).map(function(t) {\n    var name = \"\", i = t.indexOf(\".\");\n    if (i >= 0) name = t.slice(i + 1), t = t.slice(0, i);\n    if (t && !types.hasOwnProperty(t)) throw new Error(\"unknown type: \" + t);\n    return {type: t, name: name};\n  });\n}\n\nDispatch.prototype = dispatch.prototype = {\n  constructor: Dispatch,\n  on: function(typename, callback) {\n    var _ = this._,\n        T = parseTypenames(typename + \"\", _),\n        t,\n        i = -1,\n        n = T.length;\n\n    // If no callback was specified, return the callback of the given type and name.\n    if (arguments.length < 2) {\n      while (++i < n) if ((t = (typename = T[i]).type) && (t = get(_[t], typename.name))) return t;\n      return;\n    }\n\n    // If a type was specified, set the callback for the given type and name.\n    // Otherwise, if a null callback was specified, remove callbacks of the given name.\n    if (callback != null && typeof callback !== \"function\") throw new Error(\"invalid callback: \" + callback);\n    while (++i < n) {\n      if (t = (typename = T[i]).type) _[t] = set(_[t], typename.name, callback);\n      else if (callback == null) for (t in _) _[t] = set(_[t], typename.name, null);\n    }\n\n    return this;\n  },\n  copy: function() {\n    var copy = {}, _ = this._;\n    for (var t in _) copy[t] = _[t].slice();\n    return new Dispatch(copy);\n  },\n  call: function(type, that) {\n    if ((n = arguments.length - 2) > 0) for (var args = new Array(n), i = 0, n, t; i < n; ++i) args[i] = arguments[i + 2];\n    if (!this._.hasOwnProperty(type)) throw new Error(\"unknown type: \" + type);\n    for (t = this._[type], i = 0, n = t.length; i < n; ++i) t[i].value.apply(that, args);\n  },\n  apply: function(type, that, args) {\n    if (!this._.hasOwnProperty(type)) throw new Error(\"unknown type: \" + type);\n    for (var t = this._[type], i = 0, n = t.length; i < n; ++i) t[i].value.apply(that, args);\n  }\n};\n\nfunction get(type, name) {\n  for (var i = 0, n = type.length, c; i < n; ++i) {\n    if ((c = type[i]).name === name) {\n      return c.value;\n    }\n  }\n}\n\nfunction set(type, name, callback) {\n  for (var i = 0, n = type.length; i < n; ++i) {\n    if (type[i].name === name) {\n      type[i] = noop, type = type.slice(0, i).concat(type.slice(i + 1));\n      break;\n    }\n  }\n  if (callback != null) type.push({name: name, value: callback});\n  return type;\n}\n\nexport default dispatch;\n","import {event} from \"d3-selection\";\n\nexport function nopropagation() {\n  event.stopImmediatePropagation();\n}\n\nexport default function() {\n  event.preventDefault();\n  event.stopImmediatePropagation();\n}\n","import {select} from \"d3-selection\";\nimport noevent from \"./noevent\";\n\nexport default function(view) {\n  var root = view.document.documentElement,\n      selection = select(view).on(\"dragstart.drag\", noevent, true);\n  if (\"onselectstart\" in root) {\n    selection.on(\"selectstart.drag\", noevent, true);\n  } else {\n    root.__noselect = root.style.MozUserSelect;\n    root.style.MozUserSelect = \"none\";\n  }\n}\n\nexport function yesdrag(view, noclick) {\n  var root = view.document.documentElement,\n      selection = select(view).on(\"dragstart.drag\", null);\n  if (noclick) {\n    selection.on(\"click.drag\", noevent, true);\n    setTimeout(function() { selection.on(\"click.drag\", null); }, 0);\n  }\n  if (\"onselectstart\" in root) {\n    selection.on(\"selectstart.drag\", null);\n  } else {\n    root.style.MozUserSelect = root.__noselect;\n    delete root.__noselect;\n  }\n}\n","export default function(x) {\n  return function() {\n    return x;\n  };\n}\n","export default function DragEvent(target, type, subject, id, active, x, y, dx, dy, dispatch) {\n  this.target = target;\n  this.type = type;\n  this.subject = subject;\n  this.identifier = id;\n  this.active = active;\n  this.x = x;\n  this.y = y;\n  this.dx = dx;\n  this.dy = dy;\n  this._ = dispatch;\n}\n\nDragEvent.prototype.on = function() {\n  var value = this._.on.apply(this._, arguments);\n  return value === this._ ? this : value;\n};\n","import {dispatch} from \"d3-dispatch\";\nimport {event, customEvent, select, mouse, touch} from \"d3-selection\";\nimport nodrag, {yesdrag} from \"./nodrag\";\nimport noevent, {nopropagation} from \"./noevent\";\nimport constant from \"./constant\";\nimport DragEvent from \"./event\";\n\n// Ignore right-click, since that should open the context menu.\nfunction defaultFilter() {\n  return !event.button;\n}\n\nfunction defaultContainer() {\n  return this.parentNode;\n}\n\nfunction defaultSubject(d) {\n  return d == null ? {x: event.x, y: event.y} : d;\n}\n\nfunction defaultTouchable() {\n  return \"ontouchstart\" in this;\n}\n\nexport default function() {\n  var filter = defaultFilter,\n      container = defaultContainer,\n      subject = defaultSubject,\n      touchable = defaultTouchable,\n      gestures = {},\n      listeners = dispatch(\"start\", \"drag\", \"end\"),\n      active = 0,\n      mousedownx,\n      mousedowny,\n      mousemoving,\n      touchending,\n      clickDistance2 = 0;\n\n  function drag(selection) {\n    selection\n        .on(\"mousedown.drag\", mousedowned)\n      .filter(touchable)\n        .on(\"touchstart.drag\", touchstarted)\n        .on(\"touchmove.drag\", touchmoved)\n        .on(\"touchend.drag touchcancel.drag\", touchended)\n        .style(\"touch-action\", \"none\")\n        .style(\"-webkit-tap-highlight-color\", \"rgba(0,0,0,0)\");\n  }\n\n  function mousedowned() {\n    if (touchending || !filter.apply(this, arguments)) return;\n    var gesture = beforestart(\"mouse\", container.apply(this, arguments), mouse, this, arguments);\n    if (!gesture) return;\n    select(event.view).on(\"mousemove.drag\", mousemoved, true).on(\"mouseup.drag\", mouseupped, true);\n    nodrag(event.view);\n    nopropagation();\n    mousemoving = false;\n    mousedownx = event.clientX;\n    mousedowny = event.clientY;\n    gesture(\"start\");\n  }\n\n  function mousemoved() {\n    noevent();\n    if (!mousemoving) {\n      var dx = event.clientX - mousedownx, dy = event.clientY - mousedowny;\n      mousemoving = dx * dx + dy * dy > clickDistance2;\n    }\n    gestures.mouse(\"drag\");\n  }\n\n  function mouseupped() {\n    select(event.view).on(\"mousemove.drag mouseup.drag\", null);\n    yesdrag(event.view, mousemoving);\n    noevent();\n    gestures.mouse(\"end\");\n  }\n\n  function touchstarted() {\n    if (!filter.apply(this, arguments)) return;\n    var touches = event.changedTouches,\n        c = container.apply(this, arguments),\n        n = touches.length, i, gesture;\n\n    for (i = 0; i < n; ++i) {\n      if (gesture = beforestart(touches[i].identifier, c, touch, this, arguments)) {\n        nopropagation();\n        gesture(\"start\");\n      }\n    }\n  }\n\n  function touchmoved() {\n    var touches = event.changedTouches,\n        n = touches.length, i, gesture;\n\n    for (i = 0; i < n; ++i) {\n      if (gesture = gestures[touches[i].identifier]) {\n        noevent();\n        gesture(\"drag\");\n      }\n    }\n  }\n\n  function touchended() {\n    var touches = event.changedTouches,\n        n = touches.length, i, gesture;\n\n    if (touchending) clearTimeout(touchending);\n    touchending = setTimeout(function() { touchending = null; }, 500); // Ghost clicks are delayed!\n    for (i = 0; i < n; ++i) {\n      if (gesture = gestures[touches[i].identifier]) {\n        nopropagation();\n        gesture(\"end\");\n      }\n    }\n  }\n\n  function beforestart(id, container, point, that, args) {\n    var p = point(container, id), s, dx, dy,\n        sublisteners = listeners.copy();\n\n    if (!customEvent(new DragEvent(drag, \"beforestart\", s, id, active, p[0], p[1], 0, 0, sublisteners), function() {\n      if ((event.subject = s = subject.apply(that, args)) == null) return false;\n      dx = s.x - p[0] || 0;\n      dy = s.y - p[1] || 0;\n      return true;\n    })) return;\n\n    return function gesture(type) {\n      var p0 = p, n;\n      switch (type) {\n        case \"start\": gestures[id] = gesture, n = active++; break;\n        case \"end\": delete gestures[id], --active; // nobreak\n        case \"drag\": p = point(container, id), n = active; break;\n      }\n      customEvent(new DragEvent(drag, type, s, id, n, p[0] + dx, p[1] + dy, p[0] - p0[0], p[1] - p0[1], sublisteners), sublisteners.apply, sublisteners, [type, that, args]);\n    };\n  }\n\n  drag.filter = function(_) {\n    return arguments.length ? (filter = typeof _ === \"function\" ? _ : constant(!!_), drag) : filter;\n  };\n\n  drag.container = function(_) {\n    return arguments.length ? (container = typeof _ === \"function\" ? _ : constant(_), drag) : container;\n  };\n\n  drag.subject = function(_) {\n    return arguments.length ? (subject = typeof _ === \"function\" ? _ : constant(_), drag) : subject;\n  };\n\n  drag.touchable = function(_) {\n    return arguments.length ? (touchable = typeof _ === \"function\" ? _ : constant(!!_), drag) : touchable;\n  };\n\n  drag.on = function() {\n    var value = listeners.on.apply(listeners, arguments);\n    return value === listeners ? drag : value;\n  };\n\n  drag.clickDistance = function(_) {\n    return arguments.length ? (clickDistance2 = (_ = +_) * _, drag) : Math.sqrt(clickDistance2);\n  };\n\n  return drag;\n}\n","var frame = 0, // is an animation frame pending?\n    timeout = 0, // is a timeout pending?\n    interval = 0, // are any timers active?\n    pokeDelay = 1000, // how frequently we check for clock skew\n    taskHead,\n    taskTail,\n    clockLast = 0,\n    clockNow = 0,\n    clockSkew = 0,\n    clock = typeof performance === \"object\" && performance.now ? performance : Date,\n    setFrame = typeof window === \"object\" && window.requestAnimationFrame ? window.requestAnimationFrame.bind(window) : function(f) { setTimeout(f, 17); };\n\nexport function now() {\n  return clockNow || (setFrame(clearNow), clockNow = clock.now() + clockSkew);\n}\n\nfunction clearNow() {\n  clockNow = 0;\n}\n\nexport function Timer() {\n  this._call =\n  this._time =\n  this._next = null;\n}\n\nTimer.prototype = timer.prototype = {\n  constructor: Timer,\n  restart: function(callback, delay, time) {\n    if (typeof callback !== \"function\") throw new TypeError(\"callback is not a function\");\n    time = (time == null ? now() : +time) + (delay == null ? 0 : +delay);\n    if (!this._next && taskTail !== this) {\n      if (taskTail) taskTail._next = this;\n      else taskHead = this;\n      taskTail = this;\n    }\n    this._call = callback;\n    this._time = time;\n    sleep();\n  },\n  stop: function() {\n    if (this._call) {\n      this._call = null;\n      this._time = Infinity;\n      sleep();\n    }\n  }\n};\n\nexport function timer(callback, delay, time) {\n  var t = new Timer;\n  t.restart(callback, delay, time);\n  return t;\n}\n\nexport function timerFlush() {\n  now(); // Get the current time, if not already set.\n  ++frame; // Pretend we’ve set an alarm, if we haven’t already.\n  var t = taskHead, e;\n  while (t) {\n    if ((e = clockNow - t._time) >= 0) t._call.call(null, e);\n    t = t._next;\n  }\n  --frame;\n}\n\nfunction wake() {\n  clockNow = (clockLast = clock.now()) + clockSkew;\n  frame = timeout = 0;\n  try {\n    timerFlush();\n  } finally {\n    frame = 0;\n    nap();\n    clockNow = 0;\n  }\n}\n\nfunction poke() {\n  var now = clock.now(), delay = now - clockLast;\n  if (delay > pokeDelay) clockSkew -= delay, clockLast = now;\n}\n\nfunction nap() {\n  var t0, t1 = taskHead, t2, time = Infinity;\n  while (t1) {\n    if (t1._call) {\n      if (time > t1._time) time = t1._time;\n      t0 = t1, t1 = t1._next;\n    } else {\n      t2 = t1._next, t1._next = null;\n      t1 = t0 ? t0._next = t2 : taskHead = t2;\n    }\n  }\n  taskTail = t0;\n  sleep(time);\n}\n\nfunction sleep(time) {\n  if (frame) return; // Soonest alarm already set, or will be.\n  if (timeout) timeout = clearTimeout(timeout);\n  var delay = time - clockNow; // Strictly less than if we recomputed clockNow.\n  if (delay > 24) {\n    if (time < Infinity) timeout = setTimeout(wake, time - clock.now() - clockSkew);\n    if (interval) interval = clearInterval(interval);\n  } else {\n    if (!interval) clockLast = clock.now(), interval = setInterval(poke, pokeDelay);\n    frame = 1, setFrame(wake);\n  }\n}\n","import {Timer} from \"./timer\";\n\nexport default function(callback, delay, time) {\n  var t = new Timer;\n  delay = delay == null ? 0 : +delay;\n  t.restart(function(elapsed) {\n    t.stop();\n    callback(elapsed + delay);\n  }, delay, time);\n  return t;\n}\n","import {dispatch} from \"d3-dispatch\";\nimport {timer, timeout} from \"d3-timer\";\n\nvar emptyOn = dispatch(\"start\", \"end\", \"cancel\", \"interrupt\");\nvar emptyTween = [];\n\nexport var CREATED = 0;\nexport var SCHEDULED = 1;\nexport var STARTING = 2;\nexport var STARTED = 3;\nexport var RUNNING = 4;\nexport var ENDING = 5;\nexport var ENDED = 6;\n\nexport default function(node, name, id, index, group, timing) {\n  var schedules = node.__transition;\n  if (!schedules) node.__transition = {};\n  else if (id in schedules) return;\n  create(node, id, {\n    name: name,\n    index: index, // For context during callback.\n    group: group, // For context during callback.\n    on: emptyOn,\n    tween: emptyTween,\n    time: timing.time,\n    delay: timing.delay,\n    duration: timing.duration,\n    ease: timing.ease,\n    timer: null,\n    state: CREATED\n  });\n}\n\nexport function init(node, id) {\n  var schedule = get(node, id);\n  if (schedule.state > CREATED) throw new Error(\"too late; already scheduled\");\n  return schedule;\n}\n\nexport function set(node, id) {\n  var schedule = get(node, id);\n  if (schedule.state > STARTED) throw new Error(\"too late; already running\");\n  return schedule;\n}\n\nexport function get(node, id) {\n  var schedule = node.__transition;\n  if (!schedule || !(schedule = schedule[id])) throw new Error(\"transition not found\");\n  return schedule;\n}\n\nfunction create(node, id, self) {\n  var schedules = node.__transition,\n      tween;\n\n  // Initialize the self timer when the transition is created.\n  // Note the actual delay is not known until the first callback!\n  schedules[id] = self;\n  self.timer = timer(schedule, 0, self.time);\n\n  function schedule(elapsed) {\n    self.state = SCHEDULED;\n    self.timer.restart(start, self.delay, self.time);\n\n    // If the elapsed delay is less than our first sleep, start immediately.\n    if (self.delay <= elapsed) start(elapsed - self.delay);\n  }\n\n  function start(elapsed) {\n    var i, j, n, o;\n\n    // If the state is not SCHEDULED, then we previously errored on start.\n    if (self.state !== SCHEDULED) return stop();\n\n    for (i in schedules) {\n      o = schedules[i];\n      if (o.name !== self.name) continue;\n\n      // While this element already has a starting transition during this frame,\n      // defer starting an interrupting transition until that transition has a\n      // chance to tick (and possibly end); see d3/d3-transition#54!\n      if (o.state === STARTED) return timeout(start);\n\n      // Interrupt the active transition, if any.\n      if (o.state === RUNNING) {\n        o.state = ENDED;\n        o.timer.stop();\n        o.on.call(\"interrupt\", node, node.__data__, o.index, o.group);\n        delete schedules[i];\n      }\n\n      // Cancel any pre-empted transitions.\n      else if (+i < id) {\n        o.state = ENDED;\n        o.timer.stop();\n        o.on.call(\"cancel\", node, node.__data__, o.index, o.group);\n        delete schedules[i];\n      }\n    }\n\n    // Defer the first tick to end of the current frame; see d3/d3#1576.\n    // Note the transition may be canceled after start and before the first tick!\n    // Note this must be scheduled before the start event; see d3/d3-transition#16!\n    // Assuming this is successful, subsequent callbacks go straight to tick.\n    timeout(function() {\n      if (self.state === STARTED) {\n        self.state = RUNNING;\n        self.timer.restart(tick, self.delay, self.time);\n        tick(elapsed);\n      }\n    });\n\n    // Dispatch the start event.\n    // Note this must be done before the tween are initialized.\n    self.state = STARTING;\n    self.on.call(\"start\", node, node.__data__, self.index, self.group);\n    if (self.state !== STARTING) return; // interrupted\n    self.state = STARTED;\n\n    // Initialize the tween, deleting null tween.\n    tween = new Array(n = self.tween.length);\n    for (i = 0, j = -1; i < n; ++i) {\n      if (o = self.tween[i].value.call(node, node.__data__, self.index, self.group)) {\n        tween[++j] = o;\n      }\n    }\n    tween.length = j + 1;\n  }\n\n  function tick(elapsed) {\n    var t = elapsed < self.duration ? self.ease.call(null, elapsed / self.duration) : (self.timer.restart(stop), self.state = ENDING, 1),\n        i = -1,\n        n = tween.length;\n\n    while (++i < n) {\n      tween[i].call(node, t);\n    }\n\n    // Dispatch the end event.\n    if (self.state === ENDING) {\n      self.on.call(\"end\", node, node.__data__, self.index, self.group);\n      stop();\n    }\n  }\n\n  function stop() {\n    self.state = ENDED;\n    self.timer.stop();\n    delete schedules[id];\n    for (var i in schedules) return; // eslint-disable-line no-unused-vars\n    delete node.__transition;\n  }\n}\n","import {get, set} from \"./schedule\";\n\nfunction tweenRemove(id, name) {\n  var tween0, tween1;\n  return function() {\n    var schedule = set(this, id),\n        tween = schedule.tween;\n\n    // If this node shared tween with the previous node,\n    // just assign the updated shared tween and we’re done!\n    // Otherwise, copy-on-write.\n    if (tween !== tween0) {\n      tween1 = tween0 = tween;\n      for (var i = 0, n = tween1.length; i < n; ++i) {\n        if (tween1[i].name === name) {\n          tween1 = tween1.slice();\n          tween1.splice(i, 1);\n          break;\n        }\n      }\n    }\n\n    schedule.tween = tween1;\n  };\n}\n\nfunction tweenFunction(id, name, value) {\n  var tween0, tween1;\n  if (typeof value !== \"function\") throw new Error;\n  return function() {\n    var schedule = set(this, id),\n        tween = schedule.tween;\n\n    // If this node shared tween with the previous node,\n    // just assign the updated shared tween and we’re done!\n    // Otherwise, copy-on-write.\n    if (tween !== tween0) {\n      tween1 = (tween0 = tween).slice();\n      for (var t = {name: name, value: value}, i = 0, n = tween1.length; i < n; ++i) {\n        if (tween1[i].name === name) {\n          tween1[i] = t;\n          break;\n        }\n      }\n      if (i === n) tween1.push(t);\n    }\n\n    schedule.tween = tween1;\n  };\n}\n\nexport default function(name, value) {\n  var id = this._id;\n\n  name += \"\";\n\n  if (arguments.length < 2) {\n    var tween = get(this.node(), id).tween;\n    for (var i = 0, n = tween.length, t; i < n; ++i) {\n      if ((t = tween[i]).name === name) {\n        return t.value;\n      }\n    }\n    return null;\n  }\n\n  return this.each((value == null ? tweenRemove : tweenFunction)(id, name, value));\n}\n\nexport function tweenValue(transition, name, value) {\n  var id = transition._id;\n\n  transition.each(function() {\n    var schedule = set(this, id);\n    (schedule.value || (schedule.value = {}))[name] = value.apply(this, arguments);\n  });\n\n  return function(node) {\n    return get(node, id).value[name];\n  };\n}\n","import {color} from \"d3-color\";\nimport {interpolateNumber, interpolateRgb, interpolateString} from \"d3-interpolate\";\n\nexport default function(a, b) {\n  var c;\n  return (typeof b === \"number\" ? interpolateNumber\n      : b instanceof color ? interpolateRgb\n      : (c = color(b)) ? (b = c, interpolateRgb)\n      : interpolateString)(a, b);\n}\n","function removeFunction(id) {\n  return function() {\n    var parent = this.parentNode;\n    for (var i in this.__transition) if (+i !== id) return;\n    if (parent) parent.removeChild(this);\n  };\n}\n\nexport default function() {\n  return this.on(\"end.remove\", removeFunction(this._id));\n}\n","import {selection} from \"d3-selection\";\n\nvar Selection = selection.prototype.constructor;\n\nexport default function() {\n  return new Selection(this._groups, this._parents);\n}\n","import {interpolateTransformCss as interpolateTransform} from \"d3-interpolate\";\nimport {style} from \"d3-selection\";\nimport {set} from \"./schedule\";\nimport {tweenValue} from \"./tween\";\nimport interpolate from \"./interpolate\";\n\nfunction styleNull(name, interpolate) {\n  var string00,\n      string10,\n      interpolate0;\n  return function() {\n    var string0 = style(this, name),\n        string1 = (this.style.removeProperty(name), style(this, name));\n    return string0 === string1 ? null\n        : string0 === string00 && string1 === string10 ? interpolate0\n        : interpolate0 = interpolate(string00 = string0, string10 = string1);\n  };\n}\n\nfunction styleRemove(name) {\n  return function() {\n    this.style.removeProperty(name);\n  };\n}\n\nfunction styleConstant(name, interpolate, value1) {\n  var string00,\n      string1 = value1 + \"\",\n      interpolate0;\n  return function() {\n    var string0 = style(this, name);\n    return string0 === string1 ? null\n        : string0 === string00 ? interpolate0\n        : interpolate0 = interpolate(string00 = string0, value1);\n  };\n}\n\nfunction styleFunction(name, interpolate, value) {\n  var string00,\n      string10,\n      interpolate0;\n  return function() {\n    var string0 = style(this, name),\n        value1 = value(this),\n        string1 = value1 + \"\";\n    if (value1 == null) string1 = value1 = (this.style.removeProperty(name), style(this, name));\n    return string0 === string1 ? null\n        : string0 === string00 && string1 === string10 ? interpolate0\n        : (string10 = string1, interpolate0 = interpolate(string00 = string0, value1));\n  };\n}\n\nfunction styleMaybeRemove(id, name) {\n  var on0, on1, listener0, key = \"style.\" + name, event = \"end.\" + key, remove;\n  return function() {\n    var schedule = set(this, id),\n        on = schedule.on,\n        listener = schedule.value[key] == null ? remove || (remove = styleRemove(name)) : undefined;\n\n    // If this node shared a dispatch with the previous node,\n    // just assign the updated shared dispatch and we’re done!\n    // Otherwise, copy-on-write.\n    if (on !== on0 || listener0 !== listener) (on1 = (on0 = on).copy()).on(event, listener0 = listener);\n\n    schedule.on = on1;\n  };\n}\n\nexport default function(name, value, priority) {\n  var i = (name += \"\") === \"transform\" ? interpolateTransform : interpolate;\n  return value == null ? this\n      .styleTween(name, styleNull(name, i))\n      .on(\"end.style.\" + name, styleRemove(name))\n    : typeof value === \"function\" ? this\n      .styleTween(name, styleFunction(name, i, tweenValue(this, \"style.\" + name, value)))\n      .each(styleMaybeRemove(this._id, name))\n    : this\n      .styleTween(name, styleConstant(name, i, value), priority)\n      .on(\"end.style.\" + name, null);\n}\n","import {tweenValue} from \"./tween\";\n\nfunction textConstant(value) {\n  return function() {\n    this.textContent = value;\n  };\n}\n\nfunction textFunction(value) {\n  return function() {\n    var value1 = value(this);\n    this.textContent = value1 == null ? \"\" : value1;\n  };\n}\n\nexport default function(value) {\n  return this.tween(\"text\", typeof value === \"function\"\n      ? textFunction(tweenValue(this, \"text\", value))\n      : textConstant(value == null ? \"\" : value + \"\"));\n}\n","import {selection} from \"d3-selection\";\nimport transition_attr from \"./attr\";\nimport transition_attrTween from \"./attrTween\";\nimport transition_delay from \"./delay\";\nimport transition_duration from \"./duration\";\nimport transition_ease from \"./ease\";\nimport transition_filter from \"./filter\";\nimport transition_merge from \"./merge\";\nimport transition_on from \"./on\";\nimport transition_remove from \"./remove\";\nimport transition_select from \"./select\";\nimport transition_selectAll from \"./selectAll\";\nimport transition_selection from \"./selection\";\nimport transition_style from \"./style\";\nimport transition_styleTween from \"./styleTween\";\nimport transition_text from \"./text\";\nimport transition_transition from \"./transition\";\nimport transition_tween from \"./tween\";\nimport transition_end from \"./end\";\n\nvar id = 0;\n\nexport function Transition(groups, parents, name, id) {\n  this._groups = groups;\n  this._parents = parents;\n  this._name = name;\n  this._id = id;\n}\n\nexport default function transition(name) {\n  return selection().transition(name);\n}\n\nexport function newId() {\n  return ++id;\n}\n\nvar selection_prototype = selection.prototype;\n\nTransition.prototype = transition.prototype = {\n  constructor: Transition,\n  select: transition_select,\n  selectAll: transition_selectAll,\n  filter: transition_filter,\n  merge: transition_merge,\n  selection: transition_selection,\n  transition: transition_transition,\n  call: selection_prototype.call,\n  nodes: selection_prototype.nodes,\n  node: selection_prototype.node,\n  size: selection_prototype.size,\n  empty: selection_prototype.empty,\n  each: selection_prototype.each,\n  on: transition_on,\n  attr: transition_attr,\n  attrTween: transition_attrTween,\n  style: transition_style,\n  styleTween: transition_styleTween,\n  text: transition_text,\n  remove: transition_remove,\n  tween: transition_tween,\n  delay: transition_delay,\n  duration: transition_duration,\n  ease: transition_ease,\n  end: transition_end\n};\n","import {selector} from \"d3-selection\";\nimport {Transition} from \"./index\";\nimport schedule, {get} from \"./schedule\";\n\nexport default function(select) {\n  var name = this._name,\n      id = this._id;\n\n  if (typeof select !== \"function\") select = selector(select);\n\n  for (var groups = this._groups, m = groups.length, subgroups = new Array(m), j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, subgroup = subgroups[j] = new Array(n), node, subnode, i = 0; i < n; ++i) {\n      if ((node = group[i]) && (subnode = select.call(node, node.__data__, i, group))) {\n        if (\"__data__\" in node) subnode.__data__ = node.__data__;\n        subgroup[i] = subnode;\n        schedule(subgroup[i], name, id, i, subgroup, get(node, id));\n      }\n    }\n  }\n\n  return new Transition(subgroups, this._parents, name, id);\n}\n","import {selectorAll} from \"d3-selection\";\nimport {Transition} from \"./index\";\nimport schedule, {get} from \"./schedule\";\n\nexport default function(select) {\n  var name = this._name,\n      id = this._id;\n\n  if (typeof select !== \"function\") select = selectorAll(select);\n\n  for (var groups = this._groups, m = groups.length, subgroups = [], parents = [], j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, node, i = 0; i < n; ++i) {\n      if (node = group[i]) {\n        for (var children = select.call(node, node.__data__, i, group), child, inherit = get(node, id), k = 0, l = children.length; k < l; ++k) {\n          if (child = children[k]) {\n            schedule(child, name, id, k, children, inherit);\n          }\n        }\n        subgroups.push(children);\n        parents.push(node);\n      }\n    }\n  }\n\n  return new Transition(subgroups, parents, name, id);\n}\n","import {matcher} from \"d3-selection\";\nimport {Transition} from \"./index\";\n\nexport default function(match) {\n  if (typeof match !== \"function\") match = matcher(match);\n\n  for (var groups = this._groups, m = groups.length, subgroups = new Array(m), j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, subgroup = subgroups[j] = [], node, i = 0; i < n; ++i) {\n      if ((node = group[i]) && match.call(node, node.__data__, i, group)) {\n        subgroup.push(node);\n      }\n    }\n  }\n\n  return new Transition(subgroups, this._parents, this._name, this._id);\n}\n","import {Transition} from \"./index\";\n\nexport default function(transition) {\n  if (transition._id !== this._id) throw new Error;\n\n  for (var groups0 = this._groups, groups1 = transition._groups, m0 = groups0.length, m1 = groups1.length, m = Math.min(m0, m1), merges = new Array(m0), j = 0; j < m; ++j) {\n    for (var group0 = groups0[j], group1 = groups1[j], n = group0.length, merge = merges[j] = new Array(n), node, i = 0; i < n; ++i) {\n      if (node = group0[i] || group1[i]) {\n        merge[i] = node;\n      }\n    }\n  }\n\n  for (; j < m0; ++j) {\n    merges[j] = groups0[j];\n  }\n\n  return new Transition(merges, this._parents, this._name, this._id);\n}\n","import {Transition, newId} from \"./index\";\nimport schedule, {get} from \"./schedule\";\n\nexport default function() {\n  var name = this._name,\n      id0 = this._id,\n      id1 = newId();\n\n  for (var groups = this._groups, m = groups.length, j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, node, i = 0; i < n; ++i) {\n      if (node = group[i]) {\n        var inherit = get(node, id0);\n        schedule(node, name, id1, i, group, {\n          time: inherit.time + inherit.delay + inherit.duration,\n          delay: 0,\n          duration: inherit.duration,\n          ease: inherit.ease\n        });\n      }\n    }\n  }\n\n  return new Transition(groups, this._parents, name, id1);\n}\n","import {get, set, init} from \"./schedule\";\n\nfunction start(name) {\n  return (name + \"\").trim().split(/^|\\s+/).every(function(t) {\n    var i = t.indexOf(\".\");\n    if (i >= 0) t = t.slice(0, i);\n    return !t || t === \"start\";\n  });\n}\n\nfunction onFunction(id, name, listener) {\n  var on0, on1, sit = start(name) ? init : set;\n  return function() {\n    var schedule = sit(this, id),\n        on = schedule.on;\n\n    // If this node shared a dispatch with the previous node,\n    // just assign the updated shared dispatch and we’re done!\n    // Otherwise, copy-on-write.\n    if (on !== on0) (on1 = (on0 = on).copy()).on(name, listener);\n\n    schedule.on = on1;\n  };\n}\n\nexport default function(name, listener) {\n  var id = this._id;\n\n  return arguments.length < 2\n      ? get(this.node(), id).on.on(name)\n      : this.each(onFunction(id, name, listener));\n}\n","import {interpolateTransformSvg as interpolateTransform} from \"d3-interpolate\";\nimport {namespace} from \"d3-selection\";\nimport {tweenValue} from \"./tween\";\nimport interpolate from \"./interpolate\";\n\nfunction attrRemove(name) {\n  return function() {\n    this.removeAttribute(name);\n  };\n}\n\nfunction attrRemoveNS(fullname) {\n  return function() {\n    this.removeAttributeNS(fullname.space, fullname.local);\n  };\n}\n\nfunction attrConstant(name, interpolate, value1) {\n  var string00,\n      string1 = value1 + \"\",\n      interpolate0;\n  return function() {\n    var string0 = this.getAttribute(name);\n    return string0 === string1 ? null\n        : string0 === string00 ? interpolate0\n        : interpolate0 = interpolate(string00 = string0, value1);\n  };\n}\n\nfunction attrConstantNS(fullname, interpolate, value1) {\n  var string00,\n      string1 = value1 + \"\",\n      interpolate0;\n  return function() {\n    var string0 = this.getAttributeNS(fullname.space, fullname.local);\n    return string0 === string1 ? null\n        : string0 === string00 ? interpolate0\n        : interpolate0 = interpolate(string00 = string0, value1);\n  };\n}\n\nfunction attrFunction(name, interpolate, value) {\n  var string00,\n      string10,\n      interpolate0;\n  return function() {\n    var string0, value1 = value(this), string1;\n    if (value1 == null) return void this.removeAttribute(name);\n    string0 = this.getAttribute(name);\n    string1 = value1 + \"\";\n    return string0 === string1 ? null\n        : string0 === string00 && string1 === string10 ? interpolate0\n        : (string10 = string1, interpolate0 = interpolate(string00 = string0, value1));\n  };\n}\n\nfunction attrFunctionNS(fullname, interpolate, value) {\n  var string00,\n      string10,\n      interpolate0;\n  return function() {\n    var string0, value1 = value(this), string1;\n    if (value1 == null) return void this.removeAttributeNS(fullname.space, fullname.local);\n    string0 = this.getAttributeNS(fullname.space, fullname.local);\n    string1 = value1 + \"\";\n    return string0 === string1 ? null\n        : string0 === string00 && string1 === string10 ? interpolate0\n        : (string10 = string1, interpolate0 = interpolate(string00 = string0, value1));\n  };\n}\n\nexport default function(name, value) {\n  var fullname = namespace(name), i = fullname === \"transform\" ? interpolateTransform : interpolate;\n  return this.attrTween(name, typeof value === \"function\"\n      ? (fullname.local ? attrFunctionNS : attrFunction)(fullname, i, tweenValue(this, \"attr.\" + name, value))\n      : value == null ? (fullname.local ? attrRemoveNS : attrRemove)(fullname)\n      : (fullname.local ? attrConstantNS : attrConstant)(fullname, i, value));\n}\n","import {namespace} from \"d3-selection\";\n\nfunction attrInterpolate(name, i) {\n  return function(t) {\n    this.setAttribute(name, i(t));\n  };\n}\n\nfunction attrInterpolateNS(fullname, i) {\n  return function(t) {\n    this.setAttributeNS(fullname.space, fullname.local, i(t));\n  };\n}\n\nfunction attrTweenNS(fullname, value) {\n  var t0, i0;\n  function tween() {\n    var i = value.apply(this, arguments);\n    if (i !== i0) t0 = (i0 = i) && attrInterpolateNS(fullname, i);\n    return t0;\n  }\n  tween._value = value;\n  return tween;\n}\n\nfunction attrTween(name, value) {\n  var t0, i0;\n  function tween() {\n    var i = value.apply(this, arguments);\n    if (i !== i0) t0 = (i0 = i) && attrInterpolate(name, i);\n    return t0;\n  }\n  tween._value = value;\n  return tween;\n}\n\nexport default function(name, value) {\n  var key = \"attr.\" + name;\n  if (arguments.length < 2) return (key = this.tween(key)) && key._value;\n  if (value == null) return this.tween(key, null);\n  if (typeof value !== \"function\") throw new Error;\n  var fullname = namespace(name);\n  return this.tween(key, (fullname.local ? attrTweenNS : attrTween)(fullname, value));\n}\n","function styleInterpolate(name, i, priority) {\n  return function(t) {\n    this.style.setProperty(name, i(t), priority);\n  };\n}\n\nfunction styleTween(name, value, priority) {\n  var t, i0;\n  function tween() {\n    var i = value.apply(this, arguments);\n    if (i !== i0) t = (i0 = i) && styleInterpolate(name, i, priority);\n    return t;\n  }\n  tween._value = value;\n  return tween;\n}\n\nexport default function(name, value, priority) {\n  var key = \"style.\" + (name += \"\");\n  if (arguments.length < 2) return (key = this.tween(key)) && key._value;\n  if (value == null) return this.tween(key, null);\n  if (typeof value !== \"function\") throw new Error;\n  return this.tween(key, styleTween(name, value, priority == null ? \"\" : priority));\n}\n","import {get, init} from \"./schedule\";\n\nfunction delayFunction(id, value) {\n  return function() {\n    init(this, id).delay = +value.apply(this, arguments);\n  };\n}\n\nfunction delayConstant(id, value) {\n  return value = +value, function() {\n    init(this, id).delay = value;\n  };\n}\n\nexport default function(value) {\n  var id = this._id;\n\n  return arguments.length\n      ? this.each((typeof value === \"function\"\n          ? delayFunction\n          : delayConstant)(id, value))\n      : get(this.node(), id).delay;\n}\n","import {get, set} from \"./schedule\";\n\nfunction durationFunction(id, value) {\n  return function() {\n    set(this, id).duration = +value.apply(this, arguments);\n  };\n}\n\nfunction durationConstant(id, value) {\n  return value = +value, function() {\n    set(this, id).duration = value;\n  };\n}\n\nexport default function(value) {\n  var id = this._id;\n\n  return arguments.length\n      ? this.each((typeof value === \"function\"\n          ? durationFunction\n          : durationConstant)(id, value))\n      : get(this.node(), id).duration;\n}\n","import {get, set} from \"./schedule\";\n\nfunction easeConstant(id, value) {\n  if (typeof value !== \"function\") throw new Error;\n  return function() {\n    set(this, id).ease = value;\n  };\n}\n\nexport default function(value) {\n  var id = this._id;\n\n  return arguments.length\n      ? this.each(easeConstant(id, value))\n      : get(this.node(), id).ease;\n}\n","import {set} from \"./schedule\";\n\nexport default function() {\n  var on0, on1, that = this, id = that._id, size = that.size();\n  return new Promise(function(resolve, reject) {\n    var cancel = {value: reject},\n        end = {value: function() { if (--size === 0) resolve(); }};\n\n    that.each(function() {\n      var schedule = set(this, id),\n          on = schedule.on;\n\n      // If this node shared a dispatch with the previous node,\n      // just assign the updated shared dispatch and we’re done!\n      // Otherwise, copy-on-write.\n      if (on !== on0) {\n        on1 = (on0 = on).copy();\n        on1._.cancel.push(cancel);\n        on1._.interrupt.push(cancel);\n        on1._.end.push(end);\n      }\n\n      schedule.on = on1;\n    });\n  });\n}\n","import {Transition, newId} from \"../transition/index\";\nimport schedule from \"../transition/schedule\";\nimport {easeCubicInOut} from \"d3-ease\";\nimport {now} from \"d3-timer\";\n\nvar defaultTiming = {\n  time: null, // Set on use.\n  delay: 0,\n  duration: 250,\n  ease: easeCubicInOut\n};\n\nfunction inherit(node, id) {\n  var timing;\n  while (!(timing = node.__transition) || !(timing = timing[id])) {\n    if (!(node = node.parentNode)) {\n      return defaultTiming.time = now(), defaultTiming;\n    }\n  }\n  return timing;\n}\n\nexport default function(name) {\n  var id,\n      timing;\n\n  if (name instanceof Transition) {\n    id = name._id, name = name._name;\n  } else {\n    id = newId(), (timing = defaultTiming).time = now(), name = name == null ? null : name + \"\";\n  }\n\n  for (var groups = this._groups, m = groups.length, j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, node, i = 0; i < n; ++i) {\n      if (node = group[i]) {\n        schedule(node, name, id, i, group, timing || inherit(node, id));\n      }\n    }\n  }\n\n  return new Transition(groups, this._parents, name, id);\n}\n","import {selection} from \"d3-selection\";\nimport selection_interrupt from \"./interrupt\";\nimport selection_transition from \"./transition\";\n\nselection.prototype.interrupt = selection_interrupt;\nselection.prototype.transition = selection_transition;\n","import interrupt from \"../interrupt\";\n\nexport default function(name) {\n  return this.each(function() {\n    interrupt(this, name);\n  });\n}\n","import {STARTING, ENDING, ENDED} from \"./transition/schedule\";\n\nexport default function(node, name) {\n  var schedules = node.__transition,\n      schedule,\n      active,\n      empty = true,\n      i;\n\n  if (!schedules) return;\n\n  name = name == null ? null : name + \"\";\n\n  for (i in schedules) {\n    if ((schedule = schedules[i]).name !== name) { empty = false; continue; }\n    active = schedule.state > STARTING && schedule.state < ENDING;\n    schedule.state = ENDED;\n    schedule.timer.stop();\n    schedule.on.call(active ? \"interrupt\" : \"cancel\", node, node.__data__, schedule.index, schedule.group);\n    delete schedules[i];\n  }\n\n  if (empty) delete node.__transition;\n}\n","import { select, event as d3event, selection, clientPoint } from 'd3-selection';\nimport { drag as d3drag } from 'd3-drag';\nimport 'd3-transition';\nimport { mergeRecursive } from './common-utils';\n/**\n * This function takes a raw DOM element or\n * a string and returns a d3 selection of that element.\n *\n * @param {HTMLElement | string} element The element to wrap in d3 selection.\n * @return {Selection} Instance of d3 selection.\n */\nconst selectElement = element => select(element);\n\n/**\n * It creates a new d3 element on the parent element\n * @param  {Selection} parent Element to which the element is to be appended\n * @param  {Object} elemType Type of the new element\n * @param  {Array} data Data for the new element\n * @param  {Object} selector classname/id/tagname for the element\n * @return {HTMLElement} Newly Created Element\n */\nconst makeElement = (parent, elemType, data, selector, callbacks = {}, keyFn) => {\n    if ((parent instanceof HTMLElement || parent instanceof SVGElement)) {\n        parent = selectElement(parent);\n    }\n\n    const selectorVal = selector ? selector[0] : null;\n    let selectorType = null;\n    let actualSelector = null;\n    let element = null;\n    let enterSel = null;\n    let mergeSel = null;\n    let filter;\n    if (selectorVal) {\n        if (selectorVal === '#') {\n            selectorType = 'id';\n            actualSelector = selector;\n        } else {\n            selectorType = 'class';\n            actualSelector = selector[0] === '.' ? selector : `.${selector}`;\n        }\n    } else {\n        actualSelector = elemType;\n        filter = true;\n    }\n    element = parent.selectAll(actualSelector);\n\n    filter && (element = element.filter(function () {\n        return this.parentNode === parent.node();\n    }));\n    element = element.data(data, keyFn);\n\n    enterSel = element.enter()\n                            .append(elemType || 'div');\n    callbacks.enter && enterSel.each(function (...params) {\n        callbacks.enter(selectElement(this), ...params);\n    });\n\n    mergeSel = enterSel.merge(element);\n    callbacks.update && mergeSel.each(function (...params) {\n        callbacks.update(selectElement(this), ...params);\n    });\n    if (selectorType === 'class') {\n        mergeSel.classed(selectorVal === '.' ? selector.substring(1, selector.length) : selector, true);\n    } else if (selectorType === 'id') {\n        mergeSel.attr('id', selector.substring(1, selector.length));\n    }\n    const exitSel = element.exit();\n\n    if (callbacks.exit) {\n        exitSel.each(function (...params) {\n            callbacks.exit(selectElement(this), ...params);\n        });\n    } else {\n        exitSel.remove();\n    }\n    return mergeSel;\n};\n\n/**\n * This function applies styles to an element\n *  @param  {Object} elem Element Selection\n * @param  {Object} styleObj Style Object to be applied\n * @return {Element} Newly Created Element\n*/\nconst applyStyle = (elem, styleObj) => {\n    Object.entries(styleObj).forEach((d) => {\n        elem.style(d[0], d[1]);\n    }, this);\n    return elem;\n};\n\n/**\n * This function appends a dom element in another element.\n * @param {HTMLElement | SVGElement} element1 The element in which to append the second element\n * @param {HTMLElement | SVGElement} element2 The element which will be appended.\n */\nconst appendElement = (element1, element2) => {\n    element1.appendChild(element2);\n};\n\n/**\n * Sets the attributes to the element.\n * @param {HTMLElement | SVGElement} element Element on which attributes will be applied\n * @param {Object} attrs Attributes which need to be applied\n */\nconst setElementAttrs = (element, attrs) => {\n    for (const key in attrs) {\n        if ({}.hasOwnProperty.call(attrs, key)) {\n            element.attr(key, attrs[key]);\n        }\n    }\n};\n\n/**\n * Sets attributes in the svg or html element\n * @param {SVGElement | HTMLElement} element The element on which attrs will be applied\n * @param {Array.<Object>} attrs Array of attributes\n * @param {string} className className of elements to select.\n * @return {SVGElement | HTMLElement} SVGElement or html element.\n */\nconst setAttrs = (element, attrs, className) => {\n    if (!(element instanceof selection)) {\n        element = selectElement(element);\n    }\n    className !== undefined ? element.selectAll(`.${className}`).each(function () {\n        setElementAttrs(select(this), attrs);\n    }) : setElementAttrs(element, attrs);\n    return element;\n};\n\n/**\n * Adds a css class to elements which passes the filter function.If filter function is not given,\n * then all elements will be applied the class.\n * @param {HTMLElement | SVGElement} element element\n * @param {string} className css class\n * @param {string} selector css selector\n * @param {Function} filterFn filter method.\n */\nconst addClass = (element, className, selector, filterFn) => {\n    select(element).selectAll(selector).each(function (data) {\n        const elem = select(this);\n        filterFn ? filterFn(data) && elem.classed(className, true) :\n                elem.classed(className, true);\n    });\n};\n\n/**\n * Removes the css class from elements which passes the filter function.If filter function is not given,\n * then all elements will be applied the class.\n * @param {HTMLElement | SVGElement} element element\n * @param {string} className css class\n * @param {string} selector css selector\n * @param {Function} filterFn filter method.\n */\nconst removeClass = (element, className, selector, filterFn) => {\n    select(element).selectAll(selector).each(function (data) {\n        const elem = select(this);\n        filterFn ? filterFn(data) && elem.classed(className, false) :\n                elem.classed(className, false);\n    });\n};\n\n/**\n * Sets styles in the svg or html element\n * @param {SVGElement | HTMLElement} element The element on which styles will be applied\n * @param {Array.<Object>} styles Array of style attributes\n * @return {SVGElement | HTMLElement} SVGElement or html element.\n */\nconst setStyles = (element, styles) => {\n    if (!(element instanceof selection)) {\n        element = selectElement(element);\n    }\n    for (const key in styles) {\n        if ({}.hasOwnProperty.call(styles, key)) {\n            element.style(key, styles[key]);\n        }\n    }\n    return element;\n};\n\n/**\n * Creates svg or html elements by binding data to the selection.Removes extra elements\n * on exit.\n * @param {Object} params Parameter object\n * @param {SVGElement | HTMLElement} params.container Container element where all elements will be appended\n * @param {string} params.selector Selector by which elements will be selected from dom\n * @param {string} params.append Append tag\n * @param {Function} params.each Function which will be executed for each data point and element.\n */\nconst createElements = (params) => {\n    const container = select(params.container);\n    let data;\n    let sel;\n\n    data = params.data;\n    if (typeof data === 'number') {\n        data = Array(data).fill().map((d, i) => i);\n    }\n    sel = container.selectAll(params.selector).data(data);\n\n    sel = container.selectAll(params.selector).filter(function () {\n        return this.parentNode === container.node();\n    }).data(params.data);\n\n    const selectionMerge = sel.enter().append(params.append).merge(sel).each(function (d, i) {\n        params.each(d, select(this), i);\n    });\n\n    selectionMerge.attr('class', params.className || '');\n    sel.exit().remove();\n};\n\n/**\n * Clips an element with given measurement. Basically it is used to hide overflowing portions\n * of any element.\n * @param {SVGElement} container svg element which needs to be clipped.\n * @param {Object} measurement Dimensions of the clipped rectangle.\n * @param {string} id Unique id of the clip element\n */\nconst clipElement = (container, measurement, id) => {\n    const clipPathElement = makeElement(select(container), 'clipPath', [1], `#${id}`);\n    const clipPathRect = makeElement(clipPathElement, 'rect', [1]);\n    clipPathRect.attr('x', measurement.x)\n                    .attr('y', measurement.x)\n                    .attr('width', measurement.width)\n                    .attr('height', measurement.height);\n    clipPathElement.attr('clip-path', `url(#${id})`);\n};\n\n/**\n * Returns the element of the corresponding classname.\n * @param {HTMLElement | SVGElement} node html or svg node element.\n * @param {string} className css class to be applied.\n * @return {HTMLElement | SVGElement} html or svg element.\n */\nconst getElementsByClassName = (node, className) => select(node).selectAll(className).nodes();\n\n/**\n * Gets the mouse position relative to an svg type of element\n * @param {SVGElement} element Any svg element like rect, circle, etc.\n * @param {Event} event Event object.\n * @return {Object} x and y position relative to the container element passed.\n */\nconst getMousePos = (element, event) => {\n    const boundingClientRect = element.getBoundingClientRect();\n    return {\n        x: event.x - boundingClientRect.x,\n        y: event.y - boundingClientRect.y\n    };\n};\n\nconst getClientPoint = (...params) => {\n    const pos = clientPoint(...params);\n    return {\n        x: pos[0],\n        y: pos[1]\n    };\n};\n\n/** This function appends a dom element in another element.\n * @param {Object} tag The tag name of the element to append\n * @param {Object} mount Mount point fo the element\n * @return {Object} selection of the appended element\n */\nconst createElement = (tag, mount) => select(mount).append(tag).node();\n\n/**\n * Gets the d3 event function\n * @return {Object} d3 event\n */\nconst getEvent = () => d3event;\n\n/**\n * Gets the d3 drag function\n * @return {Object} d3 drag\n */\nconst getD3Drag = () => d3drag;\n\nconst getSmartComputedStyle = (group, css) => {\n    let textEl;\n    const testText = 'W';\n    const mandatoryStyle = {\n        'fill-opacity': 0\n    };\n    const className = typeof css === 'string' ? css : (css instanceof Array ? css.join(' ') : undefined);\n\n    if (group.node() instanceof HTMLElement) {\n        textEl = group.append('div').html(testText);\n    } else {\n        textEl = group.append('text').text(testText);\n    }\n\n    if (className) {\n        textEl.attr('class', className);\n    } else if (typeof css === 'object') {\n        delete css['fill-opacity'];\n        mergeRecursive(mandatoryStyle, css);\n    }\n\n    textEl.style(mandatoryStyle);\n    const computedStyle = window.getComputedStyle(textEl.node());\n    const styleForSmartLabel = {\n        fontSize: computedStyle.fontSize,\n        fontFamily: computedStyle.fontFamily,\n        fontWeight: computedStyle.fontWeight,\n        fontStyle: computedStyle.fontStyle\n    };\n\n    textEl.remove();\n\n    return styleForSmartLabel;\n};\n\nconst hasTouch = () => 'ontouchstart' in document.documentElement;\n\nexport {\n    hasTouch,\n    selectElement,\n    makeElement,\n    applyStyle,\n    addClass,\n    removeClass,\n    appendElement,\n    setAttrs,\n    setStyles,\n    createElement,\n    createElements,\n    clipElement,\n    getElementsByClassName,\n    getMousePos,\n    getEvent,\n    getD3Drag,\n    getSmartComputedStyle,\n    getClientPoint\n};\n","import Model from 'hyperdis';\nimport { defaultValue, getObjProp } from './common-utils';\n\nconst initProp = (obj, props, val = () => ({})) => {\n    props.forEach((prop) => {\n        if (!obj[prop]) {\n            obj[prop] = val();\n        }\n        obj = obj[prop];\n    });\n    return obj;\n};\n\nconst fetchPropValues = (propNames, params, deps) => params.map((param, i) => {\n    const prop = propNames[i];\n\n    return param.map(val => (val === undefined || val === null ? val : val[deps[prop]]));\n});\n\nconst addListenerToNamespace = (namespaceInf, fn, context) => {\n    let key = namespaceInf.key;\n    const namespace = namespaceInf.id;\n    const listeners = context._listeners;\n\n    if (namespace) {\n        !listeners.get(namespace) && (listeners.set(namespace, new Map()));\n        const namespaceListeners = listeners.get(namespace);\n\n        if (!key) {\n            key = namespaceListeners.size;\n        }\n        namespaceListeners.set(key, fn);\n    } else {\n        key = key || listeners.size;\n        listeners.set(key, fn);\n    }\n};\n\nconst setContexts = (contexts, propObj, contextMap) => {\n    for (const key of propObj.keys()) {\n        contexts[key] = {\n            context: contextMap[key],\n            deps: propObj.get(key).depProps\n        };\n    }\n    return contexts;\n};\n\nconst registerPropInMaps = (store, props, namespaceInf, type) => {\n    const {\n        _registeredListeners: registeredListeners,\n        _propListenerMap: propListenerMap\n    } = store;\n    const {\n        subNamespace,\n        namespace: ns\n    } = namespaceInf;\n\n    initProp(registeredListeners, [ns]);\n    props.forEach((prop) => {\n        const subNamespaces = defaultValue(getObjProp(registeredListeners, ns, prop, 'subNamespace'), []);\n        let fns = defaultValue(getObjProp(propListenerMap, prop, type, 'fns'), 0);\n\n        fns++;\n        subNamespace && subNamespaces.push(subNamespace);\n        registeredListeners[ns][prop] = {\n            subNamespace: subNamespaces,\n            allProps: props,\n            subNamespaces: {}\n        };\n        initProp(propListenerMap, [prop, type]);\n        propListenerMap[prop][type] = {\n            fns,\n            _fnCount: fns\n        };\n    });\n};\n\nconst registerListener = (context, type, ...options) => {\n    const [propList, callBack, instantCall, namespaceInf = {}] = options;\n    let props = propList;\n\n    if (!Array.isArray(propList)) {\n        props = [propList];\n    }\n\n    const { namespace: ns } = namespaceInf;\n    const callbackFn = ((propNames, namespaceVal) => (...params) => {\n        const { _savedCommits: commits, _propListenerMap: propListenerMap } = context;\n\n        if (!propNames.some(prop => getObjProp(propListenerMap, prop, 'disabled'))) {\n            if (namespaceVal) {\n                const listenersObj = context._registeredListeners[namespaceVal];\n                const contextMap = context._contextMap[namespaceVal];\n                const contextsObj = {};\n\n                propNames.forEach((prop) => {\n                    const commitsObj = defaultValue(getObjProp(commits, prop, type), {});\n                    const listeners = listenersObj[prop].subNamespaces;\n                    const propDeps = propListenerMap[prop][type];\n\n                    for (const nm in commitsObj) {\n                        const fnInf = defaultValue(propDeps[nm], { fns: 0 });\n                        let { fns } = fnInf;\n\n                        if (fns > 0) {\n                            setContexts(contextsObj, listeners[nm], contextMap);\n                            fns--;\n                        }\n\n                        if (fns <= 0) {\n                            delete commitsObj[nm];\n                        }\n                        fnInf.fns = fns;\n                    }\n                });\n                for (const key in contextsObj) {\n                    const obj = contextsObj[key];\n\n                    callBack(obj.context, ...fetchPropValues(propNames, params, obj.deps));\n                }\n            } else {\n                callBack(...params);\n            }\n        }\n    })(props, ns, type);\n\n    const fn = context.model[type](props, callbackFn, instantCall);\n\n    if (ns) {\n        registerPropInMaps(context, props, namespaceInf, type);\n    }\n    addListenerToNamespace(namespaceInf, fn, context);\n};\n\nconst retrieveNamespaces = (names, key) => {\n    if (names instanceof Object) {\n        return [names[key]];\n    } else if (names instanceof Array) {\n        return names;\n    }\n    return [names];\n};\n\nconst createMap = () => new Map();\n\nconst listenerTypes = ['next', 'on'];\n\nconst removePropValue = (context, map, propInf) => {\n    const { subNamespace: sns, prop, propListenerMap } = propInf;\n    const propObj = propListenerMap[prop];\n\n    listenerTypes.forEach((type) => {\n        if (type in propObj) {\n            delete propObj[type][sns];\n        }\n    });\n    if (map.has(sns)) {\n        const value = context.get(prop);\n\n        if (value instanceof Object && sns in value) {\n            delete value[sns];\n        }\n        map.delete(sns);\n    }\n};\n\n/**\n * Methods to handle changes to table configuration and reactivity are handled by this\n * class.\n */\n/**\n *  Common store class\n *\n * @class Store\n */\nexport class Store {\n    /**\n     * Creates an instance of Store.\n     * @param {Object} config The object to create the state store with.\n     * @memberof Store\n     */\n    constructor (config) {\n        // create reactive model\n        this.model = Model.create(config);\n        this._listeners = new Map();\n        this._registeredListeners = {};\n        this._contextMap = {};\n        this._commits = {};\n        this._savedCommits = {};\n        this._queuedProps = {};\n        this._propListenerMap = {};\n        this._locked = false;\n    }\n\n    lockModel () {\n        this.model.lock();\n        this._locked = true;\n        return this;\n    }\n\n    unlockModel () {\n        this._locked = false;\n        this.model.unlock();\n        return this;\n    }\n\n    /**\n     * This method returns a plain JSON object\n     * with all the fields in the state store.\n     *\n     * @return {Object} Serialized representation of state store.\n     * @memberof Store\n     */\n    serialize () {\n        return this.model.serialize();\n    }\n\n    lockCommits (props) {\n        props.forEach((prop) => {\n            this._commits[prop] = {\n                locked: true,\n                queue: []\n            };\n        });\n        return this;\n    }\n\n    unlockCommits (props) {\n        const commitsObj = this._commits;\n\n        this.lockModel();\n        props.forEach((prop) => {\n            commitsObj[prop].locked = false;\n            const queuedProps = {};\n            const { queue } = commitsObj[prop];\n\n            queue.forEach((params) => {\n                const [propName, value, namespace] = params;\n\n                if (namespace) {\n                    const propObj = initProp(queuedProps, [propName, namespace]);\n\n                    Object.assign(propObj, value);\n                }\n            });\n            queue.forEach((params) => {\n                const [propName, value, namespace] = params;\n\n                this.commit(propName, propName in queuedProps ? queuedProps[propName][namespace] : value,\n                    namespace);\n            });\n            delete commitsObj[prop];\n        });\n        this.unlockModel();\n        return this;\n    }\n\n    addSubNamespace (sns, namespace, context) {\n        // Get all the listeners registered by the component\n        const listeners = this._registeredListeners[namespace];\n        const propListenerMap = this._propListenerMap;\n\n        initProp(this._contextMap, [namespace]);\n        this._contextMap[namespace][sns] = context;\n        for (const key in listeners) {\n            const obj = listeners[key];\n            const propObj = propListenerMap[key];\n            const propFns = listenerTypes.reduce((acc, type) => {\n                const val = defaultValue(getObjProp(propObj, type, 'fns'), 0);\n                val && (acc[type] = val);\n                return acc;\n            }, {});\n            const { allProps, subNamespaces, subNamespace } = obj;\n            const snsArr = subNamespace.length ? subNamespace : [sns];\n\n            snsArr.forEach((ns) => {\n                const nsObj = ns instanceof Function ? ns(context) : ns;\n                const names = retrieveNamespaces(nsObj, key);\n                const depProps = allProps.reduce((acc, prop) => {\n                    acc[prop] = ns instanceof Function ? nsObj[prop] : ns;\n                    return acc;\n                }, {});\n\n                names.forEach((nm) => {\n                    initProp(subNamespaces, [nm], createMap).set(sns, {\n                        depProps\n                    });\n\n                    for (const type in propFns) {\n                        initProp(propObj, [type, nm]);\n                        const fns = propFns[type];\n\n                        propObj[type][nm] = {\n                            fns,\n                            _fnCount: fns\n                        };\n                    }\n                });\n            });\n        }\n        return this;\n    }\n\n    /**\n     * This method is used to update the value of a property in the state store.\n     *\n     * @param {string} propName The name of the property.\n     * @param {number} value The new value of the property.\n     * @memberof Store\n     */\n    commit (propName, value, namespace, disableListener = false) {\n        let sanitizedVal = value;\n        const commits = this._commits;\n        const savedCommits = this._savedCommits;\n        const locked = getObjProp(commits, propName, 'locked');\n        const propListenerMap = this._propListenerMap[propName] || {};\n\n        propListenerMap.disabled = disableListener;\n\n        if (locked) {\n            commits[propName].queue.push([propName, value, namespace]);\n            return this;\n        }\n\n        if (namespace) {\n            if (this._locked) {\n                const queuedProps = initProp(this._queuedProps, [propName]);\n                queuedProps[namespace] = value;\n                sanitizedVal = queuedProps;\n            } else {\n                sanitizedVal = defaultValue(this.get(propName), {});\n                sanitizedVal[namespace] = value;\n            }\n\n            listenerTypes.forEach((type) => {\n                initProp(savedCommits, [propName, type]);\n                savedCommits[propName][type][namespace] = true;\n                if (getObjProp(propListenerMap, type, namespace)) {\n                    propListenerMap[type][namespace].fns = propListenerMap[type][namespace]._fnCount;\n                }\n            });\n        }\n\n        this.model.prop(propName, sanitizedVal);\n        return this;\n    }\n\n    /**\n     * This method is used to register a callback that will execute\n     * when one or more properties change.\n     *\n     * @param {string | Array} propNames name of property or array of props.\n     * @param {Function} callBack The callback to execute.\n     * @memberof Store\n     */\n    /* istanbul ignore next */registerChangeListener (...params) {\n        registerListener(this, 'next', ...params);\n        return this;\n    }\n\n    /**\n     * This method is used to register a callback that will execute\n     * when one or more properties change.\n     *\n     * @param {string | Array} propNames name of property or array of props.\n     * @param {Function} callBack The callback to execute.\n     * @memberof Store\n     */\n    /* istanbul ignore next */ registerImmediateListener (...params) {\n        registerListener(this, 'on', ...params);\n    }\n\n    /**\n     * This method is used to get the name of the property\n     * from the state store.\n     *\n     * @param {string} propName The name of the field in state store.\n     * @return {any} The value of the field.\n     * @memberof Store\n     */\n    get (propName, subNamespace) {\n        const value = this.model.prop(propName);\n        return subNamespace ? value && value[subNamespace] : value;\n    }\n\n    /**\n     * This method is used to register a computed property that is computed every time\n     * the store value changes.\n     *\n     * @param {string} propName The name of the property to create.\n     * @param {Function} callBack The function to execute when depemdent props change.\n     * @memberof Store\n     */\n    computed (propName, callBack) {\n        return this.model.calculatedProp(propName, callBack);\n    }\n\n    append (...params) {\n        this.model.append(...params);\n        return this;\n    }\n\n    unsubscribeAll () {\n        Object.values(this._listeners).forEach(fn => fn());\n        return this;\n    }\n\n    unsubscribe (namespaceInf = {}) {\n        const { id, key } = namespaceInf;\n        const listenersMap = this._listeners;\n        const listeners = listenersMap.get(id);\n\n        if (key) {\n            const fn = listenersMap.get(key);\n\n            fn && fn();\n        } else {\n            for (const fn of listeners.values()) {\n                fn();\n            }\n            listenersMap.set(id, []);\n        }\n        return this;\n    }\n\n    removeSubNamespace (subNamespace, namespace) {\n        const {\n            _registeredListeners: listenerMap,\n            _contextMap: contextMap,\n            _propListenerMap: propListenerMap\n        } = this;\n        const listenersObj = listenerMap[namespace];\n\n        for (const prop in listenersObj) {\n            const { subNamespaces } = listenersObj[prop];\n            const propInf = {\n                subNamespace,\n                prop,\n                propListenerMap\n            };\n\n            if (subNamespaces[subNamespace]) {\n                removePropValue(this, subNamespaces[subNamespace], propInf);\n                delete subNamespaces[subNamespace];\n            } else {\n                for (const ns in subNamespaces) {\n                    const snsMap = subNamespaces[ns];\n\n                    removePropValue(this, snsMap, propInf);\n                    if (!snsMap.size) {\n                        delete subNamespaces[ns];\n                    }\n                }\n            }\n        }\n        delete contextMap[namespace][subNamespace];\n        return this;\n    }\n}\n\n/**\n * Setter getter creator from config\n * Format\n *  PROPERTRY_NAME: {\n *      value: // default value of the property,\n *      meta: {\n *          typeCheck: // The setter value will be checked using this. If the value is function then the setter value\n *                     // is passed as args. (Optional)\n *          typeExpected: // The output of typecheck action will be tested against this. Truthy value will set the\n *                       // value to the setter\n *          sanitizaiton: // Need for sanitization before type is checked\n *      }\n *  }\n *\n * @param {Object} holder an empty object on which the getters and setters will be mounted\n * @param {Object} options options config based on which the getters and setters are determined.\n * @param {Hyperdis} model optional model to attach the property. If not sent new moel is created.\n * @return {Array}\n */\nexport const transactor = (holder, options, model, namespaceInf = {}) => {\n    let conf;\n    const store = model instanceof Store ? model : new Store({});\n    const stateProps = {};\n    const { namespace, subNamespace } = namespaceInf;\n\n    for (const prop in options) {\n        if ({}.hasOwnProperty.call(options, prop)) {\n            conf = options[prop];\n            const nameSpaceProp = namespace ? `${namespace}.${prop}` : prop;\n\n            if (subNamespace) {\n                const value = defaultValue(store.get(nameSpaceProp), {});\n                value[subNamespace] = conf.value;\n                stateProps[nameSpaceProp] = value;\n            } else {\n                stateProps[prop] = conf.value;\n            }\n\n            holder[prop] = ((context, meta, nsProp) => (...params) => {\n                let val;\n                let compareTo;\n                const paramsLen = params.length;\n                const prevVal = context.get(nsProp, subNamespace);\n                if (paramsLen) {\n                    // If parameters are passed then it's a setter\n                    const spreadParams = meta && meta.spreadParams;\n                    val = params;\n                    const values = [];\n                    if (meta) {\n                        for (let i = 0; i < paramsLen; i++) {\n                            val = params[i];\n                            const sanitization = meta.sanitization && (spreadParams ? meta.sanitization[i] :\n                                meta.sanitization);\n                            const typeCheck = meta.typeCheck && (spreadParams ? meta.typeCheck[i] : meta.typeCheck);\n                            if (sanitization && typeof sanitization === 'function') {\n                                // Sanitize if required\n                                val = sanitization(val, prevVal, holder);\n                            }\n\n                            if (typeCheck) {\n                                // Checking if a setter is valid\n                                if (typeof typeCheck === 'function') {\n                                    let typeExpected = meta.typeExpected;\n                                    if (typeExpected && spreadParams) {\n                                        typeExpected = typeExpected[i];\n                                    }\n                                    if (typeExpected) {\n                                        compareTo = typeExpected;\n                                    } else {\n                                        compareTo = true;\n                                    }\n\n                                    if (typeCheck(val) === compareTo) {\n                                        values.push(val);\n                                    }\n                                } else if (typeof typeCheck === 'string') {\n                                    if (typeCheck === 'constructor') {\n                                        const typeExpected = spreadParams ? meta.typeExpected[i] :\n                                            meta.typeExpected;\n                                        if (val && (val.constructor.name === typeExpected)) {\n                                            values.push(val);\n                                        }\n                                    }\n                                } else {\n                                    // context.prop(key, val);\n                                    values.push(val);\n                                }\n                            } else {\n                                values.push(val);\n                            }\n                        }\n                        const preset = meta.preset;\n                        const oldValues = context.get(nsProp, subNamespace);\n                        preset && preset(values[0], holder);\n                        if (spreadParams) {\n                            oldValues.forEach((value, i) => {\n                                if (values[i] === undefined) {\n                                    values[i] = value;\n                                }\n                            });\n                        }\n                        values.length && context.commit(nsProp, spreadParams ? values : values[0], subNamespace);\n                    } else {\n                        context.commit(nsProp, spreadParams ? val : val[0], subNamespace);\n                    }\n                    return holder;\n                }\n                // No parameters are passed hence its a getter\n                return context.get(nsProp, subNamespace);\n            })(store, conf.meta, nameSpaceProp, subNamespace);\n        }\n    }\n\n    if (subNamespace) {\n        for (const key in stateProps) {\n            store.commit(key, stateProps[key][subNamespace], subNamespace);\n        }\n    } else if (namespace === undefined) {\n        store.append(stateProps);\n    } else {\n        store.append(namespace, stateProps);\n    }\n\n    return [holder, store];\n};\n","const events = [\n    'initialized',\n    'beforeupdate',\n    'updated',\n    'beforedraw',\n    'drawn',\n    'beforeremove',\n    'removed',\n    'animationend'\n];\n\nconst compositions = [\n    'canvas',\n    'unit',\n    'layer',\n    'axis',\n    'facet-headers',\n    'legend',\n    'caption'\n];\n\nconst EVENT_LIST = [];\n\ncompositions.forEach((composition) => {\n    events.forEach((event) => {\n        EVENT_LIST.push(`${composition}.${event}`);\n    });\n});\n\nexport default EVENT_LIST;\n","import EVENT_LIST from './event-list';\nimport { createPromise } from './helper';\n\n/**\n * At first call it accepts one function\n * calling it second time accepts notification object.\n * notification object then called with first accepted function\n *\n * @param {Function} resolveFn a promise's resolve function\n * @return {Function} a function to accept notification object\n */\nconst resolver = resolveFn => notification => resolveFn(notification);\n\n/**\n * Checks if the property string is present in the source object\n *\n * @param {Object} source source object whom you want to check the property\n * @param {string} property key name that need to be checked\n * @return {boolean} returns true if the property found in the source object\n */\nconst hasOwn = (source, property) => Object.prototype.hasOwnProperty.call(source, property);\n\n/**\n * LifeCycleManager which goes as a dependendecy to a muze\n * it accepts notification from the entire library throughout\n * the exeecution life\n *\n * @export\n * @class LifeCycleManager\n */\nexport default class LifeCycleManager {\n\n    /**\n     * Creates an instance of LifeCycleManager.\n     * @memberof LifeCycleManager\n     */\n    constructor () {\n        this._eventList = EVENT_LIST;\n        this._promises = new Map();\n        this._notifiers = {};\n        this._lifeCycles = {};\n        this._unreleasedLifeCycles = {};\n        this._boot();\n    }\n\n    /**\n     * Fills all the notifiers with resolver callback\n     *\n     * @memberof LifeCycleManager\n     */\n    _boot () {\n        this._notifiers = this._eventList.reduce((acc, name) => {\n            acc[name] = resolver;\n            return acc;\n        }, {});\n        this._preparePromises();\n    }\n\n    /**\n     * Public method which gives the promise corresponding\n     * to the event name\n     *\n     * @param {string} eventName name of the event like `canvas.drawn`\n     * @return {promise} promise that is passed to the user\n     * @memberof LifeCycleManager\n     */\n    retrieve (eventName) {\n        return this._promises.get(eventName);\n    }\n\n    /**\n     * Creates a promise that will be passed to user's callback\n     *\n     * @param {string} eventName name of the event like `canvas.drawn`\n     * @return {promise} a pending promise waiting for resolve to be called\n     * @memberof LifeCycleManager\n     */\n    _makeNotifierPromise (eventName) {\n        return new Promise((resolve) => {\n            this._notifiers[eventName] = resolver(resolve);\n        });\n    }\n\n    /**\n     * Prepares the promise map with pending promises\n     * all the promises are in a pending state where their's\n     * resolve function waiting to be called with notification object\n     * @memberof LifeCycleManager\n     */\n    _preparePromises () {\n        this._eventList.forEach((eventName) => {\n            const promise = this._makeNotifierPromise(eventName);\n            this._promises.set(eventName, promise);\n            createPromise(promise, eventName, this);\n        });\n    }\n\n    /**\n     * Resolves the promise with notification object\n     *\n     * @param {string} eventName name of the event in the system\n     * @param {Object} notification notification object\n     * @param {string} notification.formalName name of the sender creating the notification\n     * @param {Object} notification.client instance or array of instances sending the notification\n     * @param {string} notification.action the stage name when the event happened like `beforedraw`\n     *\n     * @memberof LifeCycleManager\n     */\n    _resolvePromise (eventName, notification) {\n        this._notifiers[eventName](notification);\n    }\n\n    /**\n     * Public method which is being called by different\n     * subcompoents of the system at different execution atages\n     * @param {Object} notification notification object\n     * @param {string} notification.formalName name of the sender creating the notification\n     * @param {Object} notification.client instance or array of instances sending the notification\n     * @param {string} notification.action the stage name when the event happened like `beforedraw`\n     * @memberof LifeCycleManager\n     */\n    notify (notification) {\n        // get the composition name from notification\n        // or from static formalName() method\n        const composition = notification.formalName || notification.client.constructor.formalName();\n        notification.formalName = composition;\n        this._releasePromisesFromCache();\n        this._notify(composition, notification);\n    }\n\n    /**\n     * Notify user the with promsie in a callback\n     * if callback not found then cache it\n     *\n     * @param {string} composition\n     * @param {Object} notification notification object\n     * @param {string} notification.formalName name of the sender creating the notification\n     * @param {Object} notification.client instance or array of instances sending the notification\n     * @param {string} notification.action the stage name when the event happened like `beforedraw`\n     * @memberof LifeCycleManager\n     */\n    _notify (composition, notification) {\n        const stage = notification.action;\n        const eventName = `${composition}.${stage}`;\n\n        // resolves promise with the notification object\n        this._resolvePromise(eventName, notification);\n\n        // get the promise from the promise map\n        const promise = this.retrieve(eventName);\n\n        if (this._lifeCycles[composition]) {\n            if (this._lifeCycles[composition][stage]) {\n                // if user given call back exists, then call with promise\n                this._callLifeCycleCallback(composition, stage, promise);\n            } else {\n                // otherwise cache the promise\n                this._cachePromise(composition, stage, promise);\n            }\n        } else {\n            this._cachePromise(composition, stage, promise);\n        }\n    }\n\n    /**\n     * Calls the user's callback with callback\n     *\n     * @param {string} composition name of the compositon like `canvas`\n     * @param {string} stage the stage name when the event happened like `beforedraw`\n     * @param {promise} promise promise that is passed to the user\n     * @memberof LifeCycleManager\n     */\n    _callLifeCycleCallback (composition, stage, promise) {\n        const eventName = `${composition}.${stage}`;\n        this._lifeCycles[composition][stage](promise);\n        this._resetTargetPromise(eventName);\n    }\n\n    /**\n     * Try to clear the cached promsies once we have\n     * macthed callbacks from the user\n     *\n     * @memberof LifeCycleManager\n     */\n    _releasePromisesFromCache () {\n        const compositions = Object.keys(this._unreleasedLifeCycles);\n        compositions.forEach((composition) => {\n            const stages = Object.keys(this._unreleasedLifeCycles[composition]);\n            stages.forEach((stage) => {\n                if (this._lifeCycles[composition]) {\n                    if (this._lifeCycles[composition][stage]) {\n                        // take the promise from unreleased lifeCycles\n                        const promise = this._unreleasedLifeCycles[composition][stage];\n                        // call the user given callback with that promise\n                        this._callLifeCycleCallback(composition, stage, promise);\n                        // delete promise from unreleased lifeCycles\n                        delete this._unreleasedLifeCycles[composition][stage];\n                    }\n                }\n            });\n        });\n    }\n\n    /**\n     * Cache the promise in the map. This cache\n     * then get consumed if we get user callbacks\n     * @param {string} composition name of the compositon like `canvas`\n     * @param {string} stage the stage name when the event happened like `beforedraw`\n     * @param {promise} promise promise that is passed to the user\n     * @memberof LifeCycleManager\n     */\n    _cachePromise (composition, stage, promise) {\n        if (!hasOwn(this._unreleasedLifeCycles, composition)) {\n            this._unreleasedLifeCycles[composition] = {};\n        }\n\n        if (!hasOwn(this._unreleasedLifeCycles[composition], stage)) {\n            this._unreleasedLifeCycles[composition][stage] = {};\n        }\n        this._unreleasedLifeCycles[composition][stage] = promise;\n    }\n\n    /**\n     * It register's the callbacks gievn the user\n     *\n     * @param {Object} [lifeCycles={}] a object with list of callbacks\n     * @memberof LifeCycleManager\n     */\n    register (lifeCycles = {}) {\n        this._lifeCycles = lifeCycles;\n        // as we get all the callbacks, try to call them\n        // from unreleased promise map\n        this._releasePromisesFromCache();\n    }\n\n    /**\n     * Reset the promise into pending state\n     *\n     * @param {string} eventName name of the event happening\n     * @memberof LifeCycleManager\n     */\n    _resetTargetPromise (eventName) {\n        setTimeout(() => {\n            this._notifiers[eventName] = resolver;\n            this._promises.set(eventName, this._makeNotifierPromise(eventName));\n        }, 0);\n    }\n}\n","import LifeCycleManager from './lifecycle-manager';\n\nexport default LifeCycleManager;\n","/**\n * Creates a new promise when the given promise is resolved. This needs to be done so that after the lifecycle event\n * is completed, then again when the event gets completed, then a new promise gets resolved.\n *\n * @param {Promise} promise Instance of promise\n * @param {string} eventName name of event\n * @param {LifeCycleManager} context Instance of lifecyclemanager\n */\nexport const createPromise = (promise, eventName, context) => {\n    promise.then(() => {\n        const prm = context._makeNotifierPromise(eventName);\n        context._promises.set(eventName, prm);\n        createPromise(prm, eventName, context);\n    });\n};\n","import { default as DataModel } from 'datamodel';\nimport * as scales from './scales';\nimport * as colorSchemes from './color-schemes';\nimport * as STATE_NAMESPACES from './enums/namespace';\n\nconst InvalidAwareTypes = DataModel.InvalidAwareTypes;\n\nexport {\n    InvalidAwareTypes,\n    DataModel\n};\n\nexport {\n    ReservedFields,\n    CommonProps,\n    COORD_TYPES\n} from './enums';\n\nexport { STATE_NAMESPACES };\n\nexport {\n    scales,\n    colorSchemes\n};\n\nexport {\n    getNearestValue,\n    getValueParser,\n    transformColors,\n    detectColor,\n    hslToRgb,\n    rgbToHsv,\n    hexToHsv,\n    hsvToRgb,\n    escapeHTML,\n    angleToRadian,\n    generateGetterSetters,\n    getArraySum,\n    ERROR_MSG,\n    interpolator,\n    colorInterpolator,\n    numberInterpolator,\n    piecewiseInterpolator,\n    reqAnimFrame,\n    cancelAnimFrame,\n    nextAnimFrame,\n    getMax,\n    getMin,\n    getDomainFromData,\n    getUniqueId,\n    mergeRecursive,\n    unionDomain,\n    replaceCSSPrefix,\n    symbolFns,\n    defaultValue,\n    easeFns,\n    clone,\n    interpolateArray,\n    getMinPoint,\n    getMaxPoint,\n    getClosestIndexOf,\n    registerListeners,\n    Voronoi,\n    checkExistence,\n    sanitizeIP,\n    getMinDiff,\n    capitalizeFirst,\n    getWindow,\n    getQualifiedClassName,\n    getDependencyOrder,\n    objectIterator,\n    intSanitizer,\n    enableChainedTransaction,\n    isHTMLElem,\n    isEqual,\n    isSimpleObject,\n    nextFrame,\n    getObjProp,\n    getDataModelFromIdentifiers,\n    getDataModelFromRange,\n    transposeArray,\n    toArray,\n    extendsClass,\n    concatModels,\n    assembleModelFromIdentifiers,\n    isValidValue,\n    nestCollection,\n    stack,\n    getSymbol,\n    Scales,\n    Symbols,\n    pathInterpolators,\n    hslInterpolator,\n    getSmallestDiff,\n    require,\n    formatTemporal,\n    nearestSortingDetails,\n    createSelection,\n    temporalFields,\n    retrieveNearestGroupByReducers,\n    retrieveFieldDisplayName,\n    sanitizeDomainWhenEqual,\n    sortCategoricalField,\n    intersect\n} from './common-utils';\n\nexport {\n    selectElement,\n    makeElement,\n    applyStyle,\n    addClass,\n    removeClass,\n    appendElement,\n    setAttrs,\n    setStyles,\n    createElement,\n    createElements,\n    clipElement,\n    getElementsByClassName,\n    getMousePos,\n    getEvent,\n    getD3Drag,\n    getSmartComputedStyle,\n    getClientPoint,\n    hasTouch\n} from './renderer-utils';\n\nexport {\n    Store,\n    transactor\n} from './store';\n\nexport {\n    timeMillisecond,\n    timeSecond,\n    timeMinute,\n    timeHour,\n    timeDay,\n    timeWeek,\n    timeMonth,\n    timeYear\n} from 'd3-time';\n\nexport { default as Smartlabel } from 'fusioncharts-smartlabel';\nexport { dataSelect } from './DataSystem';\n\nexport { default as LifeCycleManager } from './lifecycle-manager';\n\nexport {\n    DimensionSubtype,\n    FieldType,\n    MeasureSubtype,\n    DateTimeFormatter,\n    DM_DERIVATIVES,\n    GROUP_BY_FUNCTIONS\n} from 'datamodel';\n\n","export const DRAG = 'drag';\nexport const HOVER = 'hover';\nexport const SELECTIONDRAG = 'selectiondrag';\nexport const CLICK = 'click';\nexport const LONGTOUCH = 'longtouch';\nexport const TOUCHDRAG = 'touchdrag';\nexport const ALL_ACTIONS = '*';\n","const SELECTION_NEW_ENTRY = 1;\nconst SELECTION_NEW_EXIT = -1;\nconst SELECTION_NULL = 0;\nconst SELECTION_OLD_ENTRY = 2;\nconst SELECTION_OLD_EXIT = -2;\n\nexport {\n    SELECTION_NEW_ENTRY,\n    SELECTION_NEW_EXIT,\n    SELECTION_NULL,\n    SELECTION_OLD_ENTRY,\n    SELECTION_OLD_EXIT\n};\n","import SelectionSet from './selection-set';\n\nexport default SelectionSet;\n","import {\n    SELECTION_NEW_ENTRY, SELECTION_NEW_EXIT, SELECTION_NULL, SELECTION_OLD_ENTRY, SELECTION_OLD_EXIT\n} from '../enums/selection';\n/* eslint-disable guard-for-in */\n\n/**\n * This component is used to keep track of the row tuples of the data which gets added and removed. This keeps\n * information of which rows are in previous and new entry set and previous and new exit set. This is initialized by\n * {@link Firebolt}.\n *\n * @public\n *\n * @class SelectionSet\n */\nclass SelectionSet {\n    /**\n     * Creates an instance of selection set\n     *\n     * @param {Array.<string>} completeSet Set of unique ids.\n     */\n    constructor (completeSet, _volatile) {\n        this.completeSet = completeSet;\n        this._set = completeSet.reduce((obj, key) => {\n            obj[key] = SELECTION_NULL;\n            return obj;\n        }, {});\n        this._volatile = _volatile;\n        this._completeSetCount = completeSet.length;\n        this._lockedSelection = {};\n        this._resetted = true;\n    }\n\n    /**\n     * Adds a set of ids to the selection set. This also moves the other rows to exit set.\n     *\n     * @public\n     * @param {Array.<number|string>} ids Array of unique ids.\n     *\n     * @return {SelectionSet} Instance of selection set.\n     */\n    add (ids) {\n        this._resetted = false;\n\n        const set = this._set;\n        // from exitset to entryset\n        ids.forEach((i) => {\n            set[i] = SELECTION_NEW_ENTRY;\n        });\n\n        for (const key in set) {\n            if (set[key] !== SELECTION_NEW_ENTRY && set[key] !== SELECTION_OLD_ENTRY) {\n                set[key] = set[key] < 0 ? SELECTION_OLD_EXIT : SELECTION_NEW_EXIT;\n            }\n        }\n        return this;\n    }\n\n    /**\n     * Adds an array of ids to the old entry set.\n     *\n     * @param {Array.<number|string>} ids Array of unique ids\n     *\n     * @return {SelectionSet} Instance of selection set.\n     */\n    update (ids) {\n        const set = this._set;\n        // from exitset to entryset\n        ids.forEach((i) => {\n            set[i] = SELECTION_OLD_ENTRY;\n        });\n\n        return this;\n    }\n\n    /**\n     * Moves all ids which in new entry set  to old entry set.\n     *\n     * @public\n     * @param {Array.<number|string>} ids Array of unique ids\n     *\n     * @return {SelectionSet} Instance of selection set.\n     */\n    updateEntry () {\n        const set = this._set;\n\n        // from exitset to entryset\n        for (const key in set) {\n            set[key] = set[key] === SELECTION_NEW_ENTRY ? SELECTION_OLD_ENTRY : set[key];\n        }\n        return this;\n    }\n\n    /**\n     * Moves an array of ids which are in new exit set to old exit set.\n     *\n     * @public\n     *\n     * @param {Array.<number|string>} ids Array of unique ids.\n     *\n     * @return {SelectionSet} Instance of selection set.\n     */\n    updateExit () {\n        const set = this._set;\n        // from exitset to entryset\n        for (const key in set) {\n            set[key] = set[key] === SELECTION_NEW_EXIT ? SELECTION_OLD_EXIT : set[key];\n        }\n        return this;\n    }\n\n    /**\n     * Removes an array of ids from the selection set. It also moves the remaining row ids to entry set.\n     *\n     * @public\n     * @param {Array.<string>} ids Array of unique ids\n     *\n     * @return {SelectionSet}  Instance of selection set\n     */\n    remove (ids) {\n        this._resetted = false;\n\n        const set = this._set;\n        ids.forEach((i) => {\n            set[i] = SELECTION_NEW_EXIT;\n        });\n\n        for (const key in set) {\n            if (set[key] !== SELECTION_NEW_EXIT && set[key] !== SELECTION_OLD_EXIT) {\n                set[key] = set[key] === 0 ? SELECTION_NEW_ENTRY : SELECTION_OLD_ENTRY;\n            }\n        }\n\n        return this;\n    }\n\n    getSets () {\n        const set = this._set;\n        const retObj = {\n            entrySet: [[], []],\n            exitSet: [[], []],\n            completeSet: []\n        };\n\n        for (const key in set) {\n            if (set[key] > 0) {\n                set[key] === SELECTION_OLD_ENTRY && retObj.entrySet[0].push(key);\n                set[key] === SELECTION_NEW_ENTRY && retObj.entrySet[1].push(key);\n            } else if (set[key] < 0) {\n                set[key] === SELECTION_OLD_EXIT && retObj.exitSet[0].push(key);\n                set[key] === SELECTION_NEW_EXIT && retObj.exitSet[1].push(key);\n            }\n            retObj.completeSet.push(key);\n        }\n\n        ['entrySet', 'exitSet'].forEach((type) => {\n            retObj[type] = retObj[type].map(e => e.map(Number));\n        });\n        retObj.completeSet = retObj.completeSet.map(Number);\n\n        return retObj;\n    }\n\n    /**\n     * Resets an array of ids in the selection set to initial state. It sets the value of every unique id value to\n     * null in the selection set which means they are neither in entry set nor in exit set. If no ids are passed,\n     * then it resets all the ids to null.\n     *\n     * @public\n     *\n     * @param {Array} ids Array of unique ids.\n     * @return {SelectionSet} Instance of selection set.\n     */\n    reset (ids) {\n        const set = this._set;\n        if (ids) {\n            ids.forEach((i) => {\n                set[i] = SELECTION_NULL;\n            });\n        } else {\n            const lockedSel = this._lockedSelection;\n            for (const key in set) {\n                if (!(key in lockedSel)) {\n                    set[key] = SELECTION_NULL;\n                }\n            }\n        }\n        this._resetted = true;\n        return this;\n    }\n\n    /**\n     * Gets the set of ids which are added in the selection set.\n     *\n     * @public\n     *\n     * @return {Array.<string>} Array of unique ids\n     */\n    getEntrySet () {\n        const set = this._set;\n        const addSet = [];\n\n        for (const key in set) {\n            set[key] === SELECTION_NEW_ENTRY && addSet.push(key);\n        }\n\n        return addSet;\n    }\n\n    /**\n     * Returns a set of unique ids which are already present in entry set.\n     *\n     * @public\n     * @param {Array} addSet Array of unique ids which are added\n     *\n     * @return {Array} Array of unique ids which are already in old entry set or new entry set\n     */\n    getExistingEntrySet (addSet) {\n        const set = this._set;\n        return addSet.filter(d => set[d] === SELECTION_NEW_ENTRY || set[d] === SELECTION_OLD_ENTRY);\n    }\n\n    /**\n     * Returns a set of unique ids which are already present in exit set.\n     *\n     * @public\n     * @param {Array} addSet Array of unique ids which are added\n     *\n     * @return {Array} Array of unique ids which are already in old exit set or new exit set\n     */\n    getExistingExitSet (removeSet) {\n        const set = this._set;\n        return removeSet.filter(d => set[d] === SELECTION_NEW_EXIT || set[d] === SELECTION_OLD_EXIT);\n    }\n\n    /**\n     * Gets the set of ids which are added in the selection set.\n     * @return {Array.<string>} Array of unique ids\n     */\n    getOldEntry () {\n        const set = this._set;\n        const updateSet = [];\n\n        for (const key in set) {\n            set[key] === SELECTION_OLD_ENTRY && updateSet.push(key);\n        }\n        return updateSet;\n    }\n\n    /**\n     * Gets the set of ids which are added in the selection set.\n     * @return {Array.<string>} Array of unique ids\n     */\n    getOldExit () {\n        const set = this._set;\n        const updateSet = [];\n\n        for (const key in set) {\n            set[key] === SELECTION_OLD_EXIT && updateSet.push(key);\n        }\n\n        return updateSet;\n    }\n\n    /**\n     * Gets the array of ids which are in the exit set.\n     *\n     * @public\n     * @return {Array.<string>} Array of unique ids\n     */\n    getExitSet () {\n        const set = this._set;\n        const removeSet = [];\n\n        for (const key in set) {\n            set[key] === SELECTION_NEW_EXIT && removeSet.push(key);\n        }\n        return removeSet;\n    }\n\n    /**\n     * Gets all the ids which are either in exit or entry set.\n     *\n     * @public\n     * @return {Array} Array of unique ids\n     */\n    getCompleteSet () {\n        const set = this._set;\n        const completeSet = [];\n\n        for (const key in set) {\n            completeSet.push(key);\n        }\n\n        return completeSet;\n    }\n\n    getCompleteSetCount () {\n        return this._completeSetCount;\n    }\n\n    resetted () {\n        return this._resetted;\n    }\n\n    /**\n     * Swaps the add set and remove set in the selection set.\n     * @return {SelectionSet} Instance of selection set.\n     */\n    toggle () {\n        const set = this._set;\n\n        for (const key in set) {\n            if (set[key] === SELECTION_NEW_ENTRY) {\n                set[key] = SELECTION_NEW_EXIT;\n            } else if (set[key] === SELECTION_NEW_EXIT) {\n                set[key] = SELECTION_NEW_ENTRY;\n            } else if (set[key] === SELECTION_OLD_ENTRY) {\n                set[key] = SELECTION_OLD_EXIT;\n            } else {\n                set[key] = SELECTION_OLD_ENTRY;\n            }\n        }\n\n        return this;\n    }\n}\n\nexport default SelectionSet;\n","import { clone, retrieveNearestGroupByReducers } from 'muze-utils';\nimport * as SELECTION from '../enums/selection';\n\nexport const initializeSideEffects = (context, sideEffects) => {\n    const sideEffectsMap = context._sideEffects;\n    sideEffects = sideEffects instanceof Array ? sideEffects : Object.values(sideEffects);\n    sideEffects.forEach((SideEffect) => {\n        const formalName = SideEffect.formalName();\n        const sideEffectInstance = sideEffectsMap[formalName];\n        sideEffectsMap[formalName] = sideEffectInstance || new SideEffect(context);\n    });\n    return sideEffectsMap;\n};\n\nexport const setSideEffectConfig = (sideEffects, config) => {\n    for (const key in sideEffects) {\n        const sideEffect = sideEffects[key];\n        const formalName = sideEffect.constructor.formalName();\n        const sideEffectConf = config[formalName];\n\n        sideEffectConf && sideEffect.config(sideEffectConf);\n    }\n};\n\nexport const initializeBehaviouralActions = (context, actions) => {\n    const dispatchableBehaviours = {};\n\n    actions = actions instanceof Array ? actions : Object.values(actions);\n    actions.forEach((Action) => {\n        dispatchableBehaviours[Action.formalName()] = new Action(context);\n    });\n    return dispatchableBehaviours;\n};\n\nexport const initializePhysicalActions = (context, actions) => {\n    const physicalActions = {};\n\n    for (const name in actions) {\n        if (!({}).hasOwnProperty.call(name, actions)) {\n            physicalActions[name] = actions[name](context);\n        }\n    }\n    return physicalActions;\n};\n\nexport const changeSideEffectAvailability = (context, fn, toEnable) => {\n    const sideEffects = context.sideEffects();\n    for (const key in sideEffects) {\n        if ({}.hasOwnProperty.call(sideEffects, key)) {\n            let change = true;\n            if (fn && fn(key) === false) {\n                change = false;\n            }\n            if (change) {\n                toEnable ? sideEffects[key].enable() : sideEffects[key].disable();\n            }\n        }\n    }\n};\n\nexport const getMergedSet = set => [...new Set([...set[0], ...set[1]])];\n\nexport const getSourceFields = (propagationInf, criteria = {}) => {\n    const sourceIdentifiers = propagationInf.sourceIdentifiers;\n    let sourceFields;\n    if (sourceIdentifiers) {\n        sourceFields = sourceIdentifiers.getSchema().map(d => d.name);\n    } else if (criteria instanceof Array) {\n        sourceFields = criteria[0];\n    } else {\n        sourceFields = Object.keys(criteria || {});\n    }\n    return sourceFields;\n};\n\nconst conditionsMap = {\n    mergedEnter: [SELECTION.SELECTION_NEW_ENTRY, SELECTION.SELECTION_OLD_ENTRY],\n    mergedExit: [SELECTION.SELECTION_NEW_EXIT, SELECTION.SELECTION_OLD_EXIT],\n    complete: []\n};\n\nexport const getModelFromSet = (type, model, set) => {\n    const conditions = conditionsMap[type];\n    if (model && conditions) {\n        return model.select((fields, i) =>\n           (conditions.some(condition => set[i] === condition)), {\n               saveChild: false\n           });\n    }\n    return null;\n};\n\nexport const getSetInfo = (type, set, config) => {\n    let model = null;\n    const filteredDataModel = config.filteredDataModel;\n    const selectionSet = config.selectionSet;\n    if (!config.propagationData) {\n        if (selectionSet.resetted()) {\n            model = null;\n        } else if (type === 'mergedEnter') {\n            model = getModelFromSet(type, config.dataModel, config.selectionSet._set);\n        }\n    } else if (filteredDataModel) {\n        model = type === 'mergedEnter' ? filteredDataModel[0] : filteredDataModel[1];\n    }\n    return {\n        uids: set,\n        length: set.length,\n        model\n    };\n};\n\nexport const getSideEffects = (behaviour, behaviourEffectMap) => {\n    const sideEffects = [];\n    for (const key in behaviourEffectMap) {\n        const behaviours = key.split(',');\n        const found = behaviours.some(d => d === behaviour);\n        if (found) {\n            sideEffects.push({\n                effects: behaviourEffectMap[key],\n                behaviours\n            });\n        }\n    }\n    return sideEffects;\n};\n\nexport const unionSets = (context, behaviours) => {\n    let combinedSet = {};\n    const models = {\n        mergedEnter: null,\n        mergedExit: null\n    };\n    behaviours.forEach((behaviour) => {\n        const entryExitSet = context._entryExitSet[behaviour];\n        if (entryExitSet) {\n            combinedSet = Object.assign(combinedSet, clone(entryExitSet));\n            ['mergedEnter', 'mergedExit'].forEach((type) => {\n                const model = entryExitSet[type].model;\n                let existingModel = models[type];\n                let aggFns = retrieveNearestGroupByReducers(model);\n                if (!existingModel) {\n                    existingModel = models[type] = model;\n                } else if (`${model.getSchema().map(d => d.name).sort()}` ===\n                    `${existingModel.getSchema().map(d => d.name).sort()}`) {\n                    aggFns = Object.assign({}, retrieveNearestGroupByReducers(existingModel));\n                    existingModel = models[type] = model.union(existingModel);\n                } else {\n                    existingModel = model;\n                }\n                combinedSet[type].model = existingModel;\n                combinedSet[type].aggFns = aggFns;\n            });\n        }\n    });\n    return combinedSet;\n};\n","import {\n    mergeRecursive,\n    hasTouch,\n    selectElement,\n    isSimpleObject\n} from 'muze-utils';\nimport { ALL_ACTIONS } from './enums/actions';\nimport SelectionSet from './selection-set';\nimport {\n    initializeBehaviouralActions,\n    initializeSideEffects,\n    changeSideEffectAvailability,\n    initializePhysicalActions,\n    unionSets,\n    getSideEffects,\n    setSideEffectConfig\n} from './helper';\n\n/**\n * This class is responsible for dispatching behavioural actions and side effects. It also keeps the information of\n * registered physical actions, behavioural actions and side effects. Also, it keeps the map of physical and behavioural\n * actions and behavioural actions and side effects. Whenever any behavioural action is dispatched, it also propagates\n * the rows which got affected to the other datamodels. This class is initialized by {@link VisualUnit} and legend to\n * manage it's interaction.\n *\n * @public\n * @class Firebolt\n * @module Firebolt\n */\nexport default class Firebolt {\n    constructor (context, actions, sideEffects, behaviourEffectMap) {\n        this.context = context;\n        this._sideEffectDefinitions = {};\n        this._sideEffects = {};\n        this._propagationInf = {};\n        this._actions = {\n            behavioural: {},\n            physical: {}\n        };\n        this._selectionSet = {};\n        this._volatileSelectionSet = {};\n        this._propagationFields = {};\n        this._sourceSideEffects = {};\n        this._propagationBehaviourMap = {};\n        this._sourceBehaviours = {};\n        this._actionBehaviourMap = {};\n        this._config = {};\n        this._behaviourEffectMap = {};\n        this._entryExitSet = {};\n        this._actionHistory = {};\n        this._queuedSideEffects = {};\n\n        this.mapSideEffects(behaviourEffectMap);\n        this.registerBehaviouralActions(actions.behavioural);\n        this.registerSideEffects(sideEffects);\n        this.registerPhysicalBehaviouralMap(actions.physicalBehaviouralMap);\n        this.registerPhysicalActions(actions.physical);\n    }\n\n    config (...config) {\n        if (config.length) {\n            this._config = mergeRecursive(this._config, config[0]);\n            setSideEffectConfig(this.sideEffects(), this._config);\n            return this;\n        }\n        return this._config;\n    }\n\n    mapSideEffects (behEffectMap) {\n        const behaviourEffectMap = this._behaviourEffectMap;\n        for (const key in behEffectMap) {\n            if ({}.hasOwnProperty.call(behEffectMap, key)) {\n                const sideEffects = behEffectMap[key] || [];\n                let preventDefaultActions = false;\n                let effectNames;\n                if (isSimpleObject(sideEffects)) {\n                    effectNames = sideEffects.effects;\n                    preventDefaultActions = sideEffects.preventDefaultActions;\n                } else {\n                    effectNames = sideEffects;\n                }\n                !behaviourEffectMap[key] && (behaviourEffectMap[key] = []);\n                this._behaviourEffectMap[key] = [...new Set(preventDefaultActions ? effectNames :\n                    [...behaviourEffectMap[key], ...effectNames])];\n            }\n        }\n        return this;\n    }\n\n    registerBehaviouralActions (actions) {\n        const behaviours = initializeBehaviouralActions(this, actions);\n        this.prepareSelectionSets(behaviours);\n        Object.assign(this._actions.behavioural, behaviours);\n        return this;\n    }\n\n    prepareSelectionSets () {\n        return this;\n    }\n\n    registerSideEffects (sideEffects) {\n        for (const key in sideEffects) {\n            this._sideEffectDefinitions[sideEffects[key].formalName()] = sideEffects[key];\n        }\n        this.initializeSideEffects();\n        return this;\n    }\n\n    applySideEffects (sideEffects, selectionSet, payload) {\n        const sideEffectStore = this.sideEffects();\n        const actionHistory = this._actionHistory;\n        const queuedSideEffects = this._queuedSideEffects;\n        sideEffects.forEach((sideEffect) => {\n            let options;\n            let name;\n            const effects = sideEffect.effects;\n            const behaviours = sideEffect.behaviours;\n            const combinedSet = unionSets(this, behaviours, selectionSet);\n            effects.forEach((effect) => {\n                if (typeof effect === 'object') {\n                    name = effect.name;\n                    options = effect.options;\n                } else {\n                    name = effect;\n                }\n\n                const sideEffectInstance = sideEffectStore[name];\n                if (sideEffectInstance.isEnabled()) {\n                    if (!sideEffectInstance.constructor.mutates() &&\n                        Object.values(actionHistory).some(d => d.isMutableAction)) {\n                        queuedSideEffects[`${name}-${behaviours.join()}`] = {\n                            name,\n                            params: [combinedSet, payload, options]\n                        };\n                    } else {\n                        this.dispatchSideEffect(name, combinedSet, payload, options);\n                    }\n                }\n            });\n        });\n        return this;\n    }\n\n    dispatchSideEffect (name, selectionSet, payload, options = {}) {\n        const sideEffectStore = this.sideEffects();\n        const sideEffect = sideEffectStore[name];\n        let disable = false;\n        if (options.filter && options.filter(sideEffect)) {\n            disable = true;\n        }\n        !disable && sideEffectStore[name].apply(selectionSet, payload, options);\n    }\n\n    registerPropagationBehaviourMap (map) {\n        this._propagationBehaviourMap = Object.assign(this._propagationBehaviourMap, map || {});\n        return this;\n    }\n\n    dispatchBehaviour (behaviour, payload, propagationInfo = {}) {\n        const propagate = propagationInfo.propagate !== undefined ? propagationInfo.propagate : true;\n        const behaviouralActions = this._actions.behavioural;\n        const action = behaviouralActions[behaviour];\n        const behaviourEffectMap = this._behaviourEffectMap;\n        const sideEffects = getSideEffects(behaviour, behaviourEffectMap);\n        this._propagationInf = propagationInfo;\n\n        if (action) {\n            const selectionSet = action.dispatch(payload);\n            const propagationSelectionSet = this.getPropagationSelectionSet(selectionSet);\n            this._entryExitSet[behaviour] = propagationSelectionSet;\n            const shouldApplySideEffects = this.shouldApplySideEffects(propagate);\n\n            if (propagate) {\n                this.propagate(behaviour, payload, selectionSet.find(d => d.sourceSelectionSet), sideEffects);\n            }\n            if (shouldApplySideEffects) {\n                const applicableSideEffects = this.getApplicableSideEffects(sideEffects, payload, propagationInfo);\n                this.applySideEffects(applicableSideEffects, propagationSelectionSet, payload);\n            }\n        }\n\n        return this;\n    }\n\n    getPropagationSelectionSet (selectionSet) {\n        return selectionSet.find(d => !d.sourceSelectionSet);\n    }\n\n    shouldApplySideEffects () {\n        return true;\n    }\n\n    changeBehaviourStateOnPropagation (behaviour, value, key = 'default') {\n        const behaviourConditions = this._sourceBehaviours[behaviour] || (this._sourceBehaviours[behaviour] = {});\n        if (value instanceof Function) {\n            behaviourConditions[key] = value;\n        } else {\n            behaviourConditions[key] = () => value;\n        }\n        return this;\n    }\n\n    changeSideEffectStateOnPropagation (sideEffect, value, key = 'default') {\n        const sideEffectConditions = this._sourceSideEffects[sideEffect] || (this._sourceSideEffects[sideEffect] = {});\n        if (value instanceof Function) {\n            sideEffectConditions[key] = value;\n        } else {\n            sideEffectConditions[key] = () => value;\n        }\n    }\n\n    removeSideEffectPolicy (sideEffect, key) {\n        delete this._sourceSideEffects[sideEffect][key];\n        return this;\n    }\n\n    removeBehaviourPolicy (behaviour, key) {\n        delete this._sourceBehaviours[behaviour][key];\n        return this;\n    }\n\n    propagate () {\n        return this;\n    }\n\n    sideEffects (...sideEffects) {\n        if (sideEffects.length) {\n            this._sideEffects = sideEffects[0];\n            return this;\n        }\n        return this._sideEffects;\n    }\n\n    enableSideEffects (fn) {\n        changeSideEffectAvailability(this, fn, true);\n        return this;\n    }\n\n    disableSideEffects (fn) {\n        changeSideEffectAvailability(this, fn, false);\n        return this;\n    }\n\n    dissociateBehaviour (behaviour, physicalAction) {\n        const actionBehaviourMap = this._actionBehaviourMap;\n        for (const key in actionBehaviourMap) {\n            if (key === physicalAction) {\n                const behaviourMap = actionBehaviourMap[key];\n                behaviourMap.behaviours = behaviourMap.behaviours.filter(d => d !== behaviour);\n                this.mapActionsAndBehaviour(key);\n            }\n        }\n\n        return this;\n    }\n\n    dissociateSideEffect (sideEffect, behaviour) {\n        const behaviourEffectMap = this._behaviourEffectMap;\n        behaviourEffectMap[behaviour] = behaviourEffectMap[behaviour].filter(d => (d.name || d) !== sideEffect);\n        return this;\n    }\n\n    getApplicableSideEffects (sideEffects) {\n        return sideEffects;\n    }\n\n    attachPropagationListener (dataModel) {\n        dataModel.unsubscribe('propagation');\n        dataModel.on('propagation', this.onDataModelPropagation());\n        return this;\n    }\n\n    onDataModelPropagation () {\n        return (propValue) => {\n            const payload = propValue.payload;\n            const action = payload.action;\n\n            this.dispatchBehaviour(action, payload, {\n                propagate: false\n            });\n        };\n    }\n\n    createSelectionSet (uniqueIds, behaviouralActions) {\n        const behaviours = behaviouralActions || this._actions.behavioural;\n        const selectionSet = this._selectionSet;\n        const volatileSelectionSet = this._volatileSelectionSet;\n\n        for (const key in behaviours) {\n            if ({}.hasOwnProperty.call(behaviours, key)) {\n                selectionSet[key] = new SelectionSet(uniqueIds);\n                volatileSelectionSet[key] = new SelectionSet(uniqueIds, true);\n                this._entryExitSet[key] = null;\n            }\n        }\n        this._volatileSelectionSet = volatileSelectionSet;\n        this.selectionSet(selectionSet);\n        return this;\n    }\n\n    selectionSet (...selectionSet) {\n        if (selectionSet.length) {\n            this._selectionSet = selectionSet[0];\n            return this;\n        }\n        return this._selectionSet;\n    }\n\n    initializeSideEffects () {\n        const sideEffectDefinitions = this._sideEffectDefinitions;\n        this.sideEffects(initializeSideEffects(this, sideEffectDefinitions));\n        return this;\n    }\n\n    registerPhysicalActions (actions) {\n        const initedActions = initializePhysicalActions(this, actions);\n        Object.assign(this._actions.physical, initedActions);\n        return this;\n    }\n\n    /**\n     * Allows to propagate the datamodel with only the supplied fields. When propagation is done, then the fields\n     * which are supplied for the specified behavioural action is propagated.\n     *\n     * @public\n     *\n     * @param {string} action Name of behavioural action. If '*' is specified, then for all behavioural actions it is\n     * applied.\n     * @param {Array} fields Array of field names which will be propagated.\n     * @param {boolean} append If true, then it is appended to the existing propagation data model fields else only\n     * those fields are projected from propagation data model and propagated.\n     *\n     * @return {Firebolt} Instance of firebolt\n     */\n    propagateWith (action, fields, append = false) {\n        const behaviouralActions = this._actions.behavioural;\n        if (action === ALL_ACTIONS) {\n            for (const key in behaviouralActions) {\n                this._propagationFields[key] = {\n                    fields,\n                    append\n                };\n            }\n        } else {\n            this._propagationFields[action] = {\n                fields,\n                append\n            };\n        }\n        return this;\n    }\n\n    /**\n     * Map actions and behaviours\n     * @return {Firebolt} Firebolt instance\n     */\n    mapActionsAndBehaviour (phyAction) {\n        const initedPhysicalActions = this._actions.physical;\n        const map = this._actionBehaviourMap;\n\n        for (const action in map) {\n            if (!({}).hasOwnProperty.call(action, map) && action === (phyAction || action)) {\n                let target;\n                const mapObj = map[action];\n                target = mapObj.target;\n                const touch = mapObj.touch;\n                if (!target) {\n                    target = this.context.getDefaultTargetContainer();\n                }\n                const bind = hasTouch() ? touch === true || touch === undefined : !touch;\n                bind && this.bindActionWithBehaviour(initedPhysicalActions[action],\n                    target, mapObj.behaviours);\n            }\n        }\n        return this;\n    }\n\n    registerPhysicalBehaviouralMap (map) {\n        this._actionBehaviourMap = mergeRecursive(this._actionBehaviourMap, map);\n        return this;\n    }\n\n    /**\n     * Binds a target element with an action.\n     *\n     * @param {Function} action Action method\n     * @param {string} target Class name of element\n     * @param {Array} behaviourList Array of behaviours\n     * @return {FireBolt} Instance of firebolt\n     */\n    bindActionWithBehaviour (action, targets, behaviourList) {\n        if (typeof (targets) === 'string') {\n            targets = [targets];\n        }\n        targets.forEach((target) => {\n            const mount = this.context.mount();\n            const nodes = target.node instanceof Function ? target : selectElement(mount).selectAll(target);\n            if (!nodes.empty()) {\n                if (nodes instanceof Array) {\n                    nodes.forEach((node) => {\n                        action(selectElement(node), behaviourList);\n                    });\n                } else {\n                    action(nodes, behaviourList);\n                }\n            }\n        });\n        return this;\n    }\n\n    getPropagationInf () {\n        return this._propagationInf;\n    }\n\n    getAddSetFromCriteria (criteria, propagationInf = {}) {\n        const context = this.context;\n        const filteredDataModel = propagationInf.data ? propagationInf.data :\n            context.getDataModelFromIdentifiers(criteria, 'all');\n        return {\n            model: filteredDataModel,\n            uids: criteria === null ? null : (propagationInf.data ? propagationInf.entryRowIds :\n                filteredDataModel[0].getUids())\n        };\n    }\n\n    getSelectionSets (action) {\n        const sourceId = this.context.id();\n        const propagationInf = this._propagationInf || {};\n        const propagationSource = propagationInf.sourceId;\n        let applicableSelectionSets = [];\n        if (propagationSource !== sourceId) {\n            applicableSelectionSets = [this._volatileSelectionSet[action]];\n        }\n\n        if (propagationSource) {\n            applicableSelectionSets.push(this.selectionSet()[action]);\n        }\n        return applicableSelectionSets;\n    }\n\n    getFullData () {\n        return this.context.data();\n    }\n\n    resetted () {\n        return this._resetted;\n    }\n\n    /**\n     * Returns the entry and exit set information of the specified behavioural action.\n     *\n     * @public\n     *\n     * @param {string} behaviour Name of behavioural action.\n     *\n     * @return {Object} Entry exit set information.\n     */\n    getEntryExitSet (behaviour) {\n        return this._entryExitSet[behaviour];\n    }\n}\n","import { getSetInfo, getMergedSet, getSourceFields } from '../../helper';\n\n/**\n * This is the base class has all the common functionalities needed for all behavioural actions. Any other behavioural\n * action needs to extend this class.\n *\n * @public\n * @class GenericBehaviour\n * @module GenericBehaviour\n */\nexport default class GenericBehaviour {\n    constructor (firebolt) {\n        this.firebolt = firebolt;\n        this._enabled = true;\n    }\n\n    /**\n     * Returns entry and exit set information. This method is called by firebolt when ```dispatchBehaviour``` is called\n     * dynamically or when any physical action is triggered on the chart.\n     *\n     * @param {Object} payload Payload information.\n     * @param {Object|Array} payload.criteria Identifiers of data interacted with.\n     *\n     * @return {Array} Entry and exit set information.\n     */\n    dispatch (payload) {\n        const criteria = payload.criteria;\n        const firebolt = this.firebolt;\n        const formalName = this.constructor.formalName();\n        const selectionSets = firebolt.getSelectionSets(formalName);\n        const {\n            model: filteredDataModel,\n            uids\n        } = this.firebolt.getAddSetFromCriteria(criteria, this.firebolt.getPropagationInf());\n        const entryExitSets = selectionSets.map((selectionSet) => {\n            this.setSelectionSet(uids, selectionSet);\n            return this.getEntryExitSet(selectionSet, filteredDataModel, payload);\n        });\n\n        return entryExitSets;\n    }\n\n    /**\n     * Updates the selection set by adding uids to the instance of {@link SelectionSet} or removing them.\n     * {@link SelectionSet} keeps the information of which rows are in the entry set and exit set.\n     *\n     * @public\n     * @param {Array} addSet Array of row ids which got affected during interaction.\n     * @param {SelectionSet} selectionSet Instance of selection set.\n     *\n     * @return {GenericBehaviour} Instance of behaviour.\n     */\n    setSelectionSet () {\n        return this;\n    }\n\n    getEntryExitSet (selectionSet, filteredDataModel, payload) {\n        const {\n            entrySet,\n            exitSet,\n            completeSet\n        } = selectionSet.getSets();\n        const propagationInf = this.firebolt.getPropagationInf();\n        const dataModel = this.firebolt.getFullData();\n        const setConfig = {\n            dataModel,\n            filteredDataModel,\n            propagationData: propagationInf.data,\n            selectionSet\n        };\n\n        return {\n            entrySet: [getSetInfo('oldEntry', entrySet[0], setConfig),\n                getSetInfo('newEntry', entrySet[1], setConfig)],\n            exitSet: [getSetInfo('oldEntry', exitSet[0], setConfig),\n                getSetInfo('newExit', exitSet[1], setConfig)],\n            mergedEnter: getSetInfo('mergedEnter', getMergedSet(entrySet), setConfig),\n            mergedExit: getSetInfo('mergedExit', getMergedSet(exitSet), setConfig),\n            completeSet: getSetInfo('complete', completeSet, setConfig),\n            fields: getSourceFields(propagationInf, payload.criteria),\n            sourceSelectionSet: selectionSet._volatile === true\n        };\n    }\n\n    static mutates () {\n        return false;\n    }\n\n    enable () {\n        this._enabled = true;\n    }\n\n    disable () {\n        this._enabled = false;\n    }\n\n    isEnabled () {\n        return this._enabled;\n    }\n}\n\n","import GenericBehaviour from './generic';\nimport { getMergedSet } from '../../helper';\nimport * as SELECTION from '../../enums/selection';\n\nexport default class VolatileBehaviour extends GenericBehaviour {\n    setSelectionSet (addSet, selectionSet) {\n        if (addSet === null) {\n            selectionSet.reset();\n        } else if (addSet.length) {\n                // new add set\n            const existingAddSet = addSet.filter(d => selectionSet._set[d] === SELECTION.SELECTION_NEW_ENTRY\n                    || selectionSet._set[d] === SELECTION.SELECTION_OLD_ENTRY);\n            selectionSet.updateExit();\n            const { entrySet } = selectionSet.getSets();\n            selectionSet.reset(getMergedSet(entrySet));\n            selectionSet.add(addSet);\n            selectionSet.update(existingAddSet);\n        } else {\n            selectionSet.remove(selectionSet.getCompleteSet());\n        }\n    }\n}\n","export const BRUSH = 'brush';\nexport const HIGHLIGHT = 'highlight';\nexport const TOOLTIP = 'tooltip';\nexport const FILTER = 'filter';\nexport const SELECT = 'select';\n","import VolatileBehaviour from './volatile';\nimport { HIGHLIGHT } from '../../enums/behaviours';\n\nexport default class HighlightBehaviour extends VolatileBehaviour {\n    static formalName () {\n        return HIGHLIGHT;\n    }\n}\n","import VolatileBehaviour from './volatile';\nimport * as BEHAVIOURNAMES from '../../enums/behaviours';\n\n/**\n * This is the behaviour for brushing a region on the chart. It accepts a payload\n * which contains the x and y range of the data and other configuration. It will then\n * create a selection box from the range and select the points which fall within the range.\n */\nexport default class BrushBehaviour extends VolatileBehaviour {\n    static formalName () {\n        return BEHAVIOURNAMES.BRUSH;\n    }\n}\n","import VolatileBehaviour from './volatile';\nimport { FILTER } from '../../enums/behaviours';\n\nexport default class FilterBehaviour extends VolatileBehaviour {\n    static formalName () {\n        return FILTER;\n    }\n\n    static mutates () {\n        return true;\n    }\n}\n","import GenericBehaviour from './generic';\nimport { getMergedSet } from '../../helper';\nimport * as SELECTION from '../../enums/selection';\n\nexport default class PersistentBehaviour extends GenericBehaviour {\n    setSelectionSet (addSet, selectionSet) {\n        if (addSet === null) {\n            selectionSet.reset();\n        } else if (addSet.length) {\n            const propagationInf = this.firebolt.getPropagationInf();\n            // new add set\n            const existingAddSet = addSet.filter(d => selectionSet._set[d] === SELECTION.SELECTION_NEW_ENTRY\n                || selectionSet._set[d] === SELECTION.SELECTION_OLD_ENTRY);\n            if (propagationInf.propagate === false) {\n                selectionSet.updateExit();\n                const { entrySet } = selectionSet.getSets();\n                selectionSet.reset(getMergedSet(entrySet));\n                selectionSet.add(addSet);\n                selectionSet.update(existingAddSet);\n            } else {\n                // existing add set\n                if (existingAddSet.length) {\n                    selectionSet.updateExit();\n                    selectionSet.remove(existingAddSet);\n                } else {\n                    selectionSet.updateEntry();\n                    selectionSet.add(addSet);\n                }\n                const { exitSet } = selectionSet.getSets();\n                const mergedExitSet = getMergedSet(exitSet);\n                const completeSetCount = selectionSet.getCompleteSet().length;\n                if (mergedExitSet.length === completeSetCount) {\n                    selectionSet.reset();\n                }\n            }\n        } else {\n            selectionSet.remove(selectionSet.getCompleteSet());\n        }\n\n        return this;\n    }\n}\n","import PersistentBehaviour from './persistent';\nimport { SELECT } from '../../enums/behaviours';\n\nexport default class SelectBehaviour extends PersistentBehaviour {\n    static formalName () {\n        return SELECT;\n    }\n}\n\n","import { DimensionSubtype, MeasureSubtype } from 'muze-utils';\n/**\n * Gets the drag action configuration\n * @param {VisualUnit} instance instance of visual unit\n * @param {Object} config x y positions\n * @return {Object} Payload of behaviour\n*/\n/* istanbul ignore next */ const getDragActionConfig = (sourceInfo, config, fieldsConfig) => {\n    if (!(sourceInfo.axes.x || sourceInfo.axes.y)) {\n        return {\n            criteria: null\n        };\n    }\n\n    const axes = sourceInfo.axes;\n    const xAxis = axes.x[0];\n    const yAxis = axes.y[0];\n    const axisFields = sourceInfo.fields;\n    const xField = axisFields.x[0].getMembers()[0];\n    const yField = axisFields.y[0].getMembers()[0];\n    const xFieldType = fieldsConfig[xField].def.subtype;\n    const yFieldType = fieldsConfig[yField].def.subtype;\n    const dimensions = {};\n    const stPos = config.startPos;\n    const endPos = config.endPos;\n\n    if (stPos.x === endPos.x && stPos.y === endPos.y) {\n        return {\n            criteria: null\n        };\n    }\n\n    const dragDim = xFieldType === MeasureSubtype.CONTINUOUS ? (yFieldType === MeasureSubtype.CONTINUOUS ?\n        ['x', 'y'] : ['y']) : ['x'];\n    const criteria = {};\n    const isXDimension = xFieldType === DimensionSubtype.CATEGORICAL;\n    const isYDimension = yFieldType === DimensionSubtype.CATEGORICAL;\n    const xRange = xAxis.invertExtent(stPos.x, endPos.x);\n    const yRange = yAxis.invertExtent(stPos.y, endPos.y);\n    const selectedDomains = {\n        x: stPos.x === endPos.x ? [] : (isXDimension ? xRange : xRange.sort((a, b) => a - b)),\n        y: stPos.y === endPos.y ? [] : (isYDimension ? yRange : yRange.sort((a, b) => a - b))\n    };\n    const rangeObj = {};\n\n    if (dragDim.length === 2) {\n        rangeObj[xField] = selectedDomains.x;\n        rangeObj[yField] = selectedDomains.y;\n        if (xField === yField) {\n            const xdom = selectedDomains.x;\n            const ydom = selectedDomains.y;\n            const min = xdom[0] > ydom[0] ? ydom : xdom;\n            const max = min === ydom ? xdom : ydom;\n            if (min[1] < max[0]) {\n                rangeObj[xField] = [];\n            } else {\n                rangeObj[xField] = [max[0], min[1] < max[1] ? min[1] : max[1]];\n            }\n            dimensions.x = [stPos.x, endPos.x];\n            dimensions.y = [stPos.y, endPos.y];\n        }\n    } else {\n        criteria[dragDim[0]] = selectedDomains[dragDim[0]] || [];\n\n        if (dragDim[0] === 'x') {\n            rangeObj[xField] = criteria.x;\n            if (xFieldType === DimensionSubtype.CATEGORICAL) {\n                dimensions.x = (config.snap && stPos.x !== endPos.x) ? xAxis.getNearestRange(stPos.x, endPos.x) :\n                    [stPos.x, endPos.x];\n            }\n        } else {\n            rangeObj[yField] = criteria.y;\n            if (yFieldType === DimensionSubtype.CATEGORICAL) {\n                dimensions.y = (config.snap && stPos.y !== endPos.y) ? yAxis.getNearestRange(stPos.y, endPos.y) :\n                    [stPos.y, endPos.y];\n            }\n        }\n    }\n\n    return {\n        criteria: rangeObj,\n        dimensions\n    };\n};\n\nexport default getDragActionConfig;\n","import {\n    getEvent,\n    getD3Drag\n } from 'muze-utils';\n\nimport getDragActionConfig from './drag-action-config';\n\n/**\n * Adds dragging action to the target element.\n * @param {VisualUnit} instance Instance of visual unit.\n * @param {SVGElement} targetEl Element on which brushing action is needed.\n * @param {Array} behaviours Array of behaviours\n */\nexport const attachDragEvent = (targetEl, behaviours, firebolt, touch) => {\n    let startPos = {};\n    let endPos = {};\n    let drawingInf;\n\n    const d3Drag = getD3Drag();\n    let touchStart;\n    targetEl.call(d3Drag().on('start', () => {\n        const event = getEvent();\n        startPos = {\n            x: event.x,\n            y: event.y\n        };\n        drawingInf = firebolt.context.getDrawingContext();\n        touchStart = new Date().getTime();\n    }).on('drag', () => {\n        const event = getEvent();\n        endPos = {\n            x: event.x,\n            y: event.y\n        };\n        if (touch && Math.abs(startPos.x - endPos.x) <= 5) {\n            return;\n        }\n        endPos.x = Math.max(0, Math.min(endPos.x, drawingInf.width));\n        endPos.y = Math.max(0, Math.min(endPos.y, drawingInf.height));\n\n        const payload = getDragActionConfig(firebolt.context.getSourceInfo(), {\n            startPos,\n            endPos\n        }, firebolt.context.data().getFieldsConfig());\n        behaviours.forEach(beh => firebolt.dispatchBehaviour(beh, payload));\n    }).on('end', () => {\n        const event = getEvent();\n        endPos = {\n            x: event.x,\n            y: event.y\n        };\n        const duration = new Date().getTime() - touchStart;\n\n        if (touch && duration > 100 && Math.abs(startPos.x - endPos.x) <= 5) {\n            return;\n        }\n        endPos.x = Math.max(0, Math.min(endPos.x, drawingInf.width));\n        endPos.y = Math.max(0, Math.min(endPos.y, drawingInf.height));\n\n        const payload = getDragActionConfig(firebolt.context.getSourceInfo(), {\n            startPos,\n            endPos,\n            snap: true\n        }, firebolt.context.data().getFieldsConfig());\n        payload.dragEnd = true;\n        behaviours.forEach(beh => firebolt.dispatchBehaviour(beh, payload));\n    }));\n};\n\n","import { getClientPoint, getEvent } from 'muze-utils';\nimport { CONSOLIDATED, FRAGMENTED } from '../../enums/constants';\n\n/**\n * Adds mouse interactions to target element.\n * @param {Firebolt} instance instance of firebolt.\n * @param {SVGElement} targetEl Element on which the event listeners will be attached.\n * @param {Array} behaviours Array of behaviours\n */\n/* istanbul ignore next */ const hover = firebolt => (targetEl, behaviours) => {\n    const dispatchBehaviour = function (args) {\n        const event = getEvent();\n        const context = firebolt.context;\n        const tooltipConf = context.config().interaction.tooltip;\n        const mode = tooltipConf.mode;\n        const pos = getClientPoint(context.getDrawingContext().svgContainer, event);\n        const nearestPoint = context.getNearestPoint(pos.x, pos.y, {\n            getAllPoints: mode === CONSOLIDATED || mode === FRAGMENTED,\n            data: args,\n            event\n        });\n        const payload = {\n            criteria: nearestPoint ? nearestPoint.id : null,\n            showInPosition: nearestPoint.showInPosition,\n            target: nearestPoint.target,\n            position: pos,\n            mode\n        };\n\n        behaviours.forEach(beh => firebolt.dispatchBehaviour(beh, payload));\n        event.stopPropagation();\n    };\n\n    targetEl.on('mouseover', dispatchBehaviour)\n                    .on('mousemove', dispatchBehaviour)\n                    .on('mouseout', () => {\n                        behaviours.forEach(beh => firebolt.dispatchBehaviour(beh, {\n                            criteria: null\n                        }));\n                    });\n};\n\nexport default hover;\n","export const CLASSPREFIX = 'muze';\nexport const CONSOLIDATED = 'consolidated';\nexport const FRAGMENTED = 'fragmented';\n\n","import { getClientPoint } from 'muze-utils';\n\nexport const generatePayloadFromEvent = function (args, event, firebolt) {\n    const context = firebolt.context;\n    const pos = getClientPoint(context.getDrawingContext().svgContainer, event.touches ? event.touches[0] : event);\n    const nearestPoint = context.getNearestPoint(pos.x, pos.y, {\n        data: args,\n        event\n    });\n    return {\n        criteria: nearestPoint ? nearestPoint.id : null,\n        showInPosition: nearestPoint.showInPosition,\n        target: nearestPoint.target,\n        position: pos\n    };\n};\n","import { getEvent } from 'muze-utils';\nimport { generatePayloadFromEvent } from './helpers';\n\n/**\n * Adds mouse interactions to target element.\n * @param {VisualUnit} instance instance of visual unit.\n * @param {SVGElement} targetEl Element on which the event listeners will be attached.\n * @param {Array} behaviours Array of behaviours\n */\n/* istanbul ignore next */ const click = firebolt => (targetEl, behaviours) => {\n    const dispatchBehaviour = function (args) {\n        const event = getEvent();\n        const payload = generatePayloadFromEvent(args, event, firebolt);\n        behaviours.forEach(beh => firebolt.dispatchBehaviour(beh, payload));\n        event.stopPropagation();\n    };\n\n    targetEl.on('click', dispatchBehaviour);\n};\nexport default click;\n","import drag from './drag';\nimport hover from './hover';\nimport { longtouch } from './longtouch';\nimport { touchdrag } from './touch-drag';\nimport * as ACTIONNAMES from '../../enums/actions';\nimport click from './click';\n\nexport const physicalActions = {\n    [ACTIONNAMES.DRAG]: drag,\n    [ACTIONNAMES.HOVER]: hover,\n    [ACTIONNAMES.CLICK]: click,\n    [ACTIONNAMES.LONGTOUCH]: longtouch,\n    [ACTIONNAMES.TOUCHDRAG]: touchdrag\n};\n\n","import { attachDragEvent } from './helpers/drag-event';\n\n/**\n * Adds dragging action to the target element.\n * @param {VisualUnit} instance Instance of visual unit.\n * @param {SVGElement} targetEl Element on which brushing action is needed.\n * @param {Array} behaviours Array of behaviours\n */\n/* istanbul ignore next */ const drag = firebolt => (targetEl, behaviours) => {\n    attachDragEvent(targetEl, behaviours, firebolt);\n};\n\nexport default drag;\n","/* global setTimeout */\nimport { getEvent } from 'muze-utils';\nimport { generatePayloadFromEvent } from './helpers';\n\n/**\n * Adds mouse interactions to target element.\n * @param {VisualUnit} instance instance of visual unit.\n * @param {SVGElement} targetEl Element on which the event listeners will be attached.\n * @param {Array} behaviours Array of behaviours\n */\nexport const longtouch = firebolt => (targetEl, behaviours) => {\n    let event;\n    let touchEnd;\n    const dispatchBehaviour = function (args) {\n        const payload = generatePayloadFromEvent(args, event, firebolt);\n        behaviours.forEach(beh => firebolt.dispatchBehaviour(beh, payload));\n        event.stopPropagation();\n    };\n\n    touchEnd = false;\n    event = getEvent();\n    targetEl.on('touchstart', (args) => {\n        event = getEvent();\n        touchEnd = false;\n        setTimeout(() => {\n            if (!touchEnd) {\n                dispatchBehaviour(args);\n            } else {\n                behaviours.forEach(beh => firebolt.dispatchBehaviour(beh, {\n                    criteria: null\n                }));\n            }\n        }, 100);\n    }).on('touchend', () => {\n        touchEnd = true;\n    });\n};\n","import { attachDragEvent } from './helpers/drag-event';\n\n/**\n * Adds dragging action to the target element.\n * @param {VisualUnit} instance Instance of visual unit.\n * @param {SVGElement} targetEl Element on which brushing action is needed.\n * @param {Array} behaviours Array of behaviours\n */\nexport const touchdrag = firebolt => (targetEl, behaviours) => {\n    attachDragEvent(targetEl, behaviours, firebolt, true);\n};\n\n","const ANCHORS = 'anchors';\nconst TOOLTIP = 'tooltip';\nconst BRUSH_ANCHORS = 'brush-anchors';\nconst PERSISTENT_ANCHORS = 'persistent-anchors';\nconst FILTER = 'filter';\nconst HIGHLIGHTER = 'highlighter';\nconst CROSSLINE = 'crossline';\n\nexport {\n    ANCHORS,\n    BRUSH_ANCHORS,\n    PERSISTENT_ANCHORS,\n    FILTER,\n    HIGHLIGHTER,\n    CROSSLINE,\n    TOOLTIP\n};\n","export const PROPS = {\n    valueParser: {\n        defaultValue: val => val\n    }\n};\n","import GenericSideEffect from './generic-sideeffect';\n\nexport default GenericSideEffect;\n","import { mergeRecursive, getUniqueId, generateGetterSetters } from 'muze-utils';\nimport { PROPS } from './props';\n\n/**\n * This is the base class of all side effects. It contains all common methods like setting configuration, disabling,\n * enabling side effect, etc. Every new side effect has to inherit this class or {@link SpawnableSideEffect} or\n * {@link SurrogateSideEffect} class. All side effects are initialized by firebolt. The instance of firebolt is\n * passed on initialization. The firebolt instance contains ```context``` which is the instance of visual unit with\n * which the firebolt is attached.\n *\n * @public\n * @class\n * @module GenericSideEffect\n */\nexport default class GenericSideEffect {\n    constructor (firebolt) {\n        this.firebolt = firebolt;\n        this._enabled = true;\n        this._strategy = 'default';\n        this._config = {};\n        this._id = getUniqueId();\n        this._strategies = {};\n        generateGetterSetters(this, PROPS);\n        this.config(this.constructor.defaultConfig());\n    }\n\n    /**\n     * Returns the default configuration of the side effect.\n     *\n     * @public\n     * @return {Object} Default configuration of side effect.\n     */\n    static defaultConfig () {\n        return {};\n    }\n\n    /**\n     * Returns the formal name of a side effect. This method must be implemented by all side effects which changes\n     * or adds any element in the visualization.\n     *\n     * @return {string} Formal name of side effect.\n     */\n    static formalName () {\n        return 'generic';\n    }\n\n    static target () {\n        return 'all';\n    }\n\n    /**\n     * Returns true if the side effects mutates the data of chart.\n     *\n     * @public\n     *\n     * @return {boolean} If the side effect mutates the data of chart.\n     */\n    static mutates () {\n        return false;\n    }\n\n    /**\n     * Sets or gets the configuration of side effect.\n     *\n     * When setter,\n     * @param {Object} config Configuration of side effect.\n     * @return {GenericSideEffect} Side effect instance.\n     *\n     * When getter,\n     * @return {Object} Side effect configuration.\n     */\n    config (...params) {\n        if (params.length) {\n            this._config = mergeRecursive(this._config, params[0]);\n            return this;\n        }\n        return this._config;\n    }\n\n    disable () {\n        this._enabled = false;\n        return this;\n    }\n\n    enable () {\n        this._enabled = true;\n        return this;\n    }\n\n    isEnabled () {\n        return this._enabled;\n    }\n\n    /**\n     * Applies the interaction effect on the chart. This is where the implemntation of the side effect is defined.\n     *\n     * @param {Object} selectionSet Contains the entry and exit set of data which got affected during interaction.\n     * @param {Object} selectionSet.mergedEnter Combined previous entry and new entry set.\n     * @param {DataModel} selectionSet.mergedEnter.model Instance of data model containing all rows which got\n     * affected during interaction.\n     * @param {Array} selectionSet.mergedEnter.uids Ids of all rows which were affected during interaction.\n     * @param {Object} selectionSet.mergedExit Combined previous exit and new exit set.\n     * @param {DataModel} selectionSet.mergedExit.model Instance of data model containing rows which were not affected\n     * during interaction.\n     * @param {Array} selectionSet.mergedExit.uids Ids of all rows which were not affected during interaction.\n     * @param {Object} selectionSet.entrySet Entry set information.\n     * @param {Array} selectionSet.entrySet[0].uids All row ids which got affected during previous interaction.\n     * @param {Array} selectionSet.entrySet[1].uids All row ids which got affected during current interaction.\n     * @param {Array} selectionSet.exitSet[0].uids All row ids which were not affected during previous interaction.\n     * @param {Array} selectionSet.exitSet[1].uids All row ids which were not affected during current interaction.\n     * @param {Object} payload Payload information of the behavioural action on trigger of which this side effect\n     * is applied.\n     * @param {Object} options Optional information for side effect like strategy, etc.\n     */\n    apply () {\n        return this;\n    }\n\n    /**\n     * Adds a new strategy method for this side effect. The strategy method is implemented by side effect class.\n     *\n     * @param {string} name Name of the strategy.\n     * @param {Function} fn Strategy method.\n     *\n     * @return {GenericSideEffect} Instance of side effect.\n     */\n    setStrategy (name, fn) {\n        if (fn) {\n            this._strategies[name] = fn;\n        }\n        return this;\n    }\n}\n","import GenericSideEffect from './generic';\n\n/**\n * This class is inherited by all side effects which changes the look of any existing elements in the visualization.\n * For example, if a side effect wants to change the color of bar plots, then it is a surrogate side effect.\n *\n * To use this,\n * ```\n *      const SurrogateSideEffect = muze.SideEffects.standards.SurrogateSideEffect;\n *\n *      class BarColorChanger extends SurrogateSideEffect {\n *          static formalName () {\n *              return 'colorChanger';\n *          }\n *\n *          // Implement the logic of applying the style here.\n *          apply () {\n *          }\n *      }\n * ```\n * @public\n *\n * @module SurrogateSideEffect\n * @class\n * @extends GenericSideEffect\n */\nexport default class SurrogateSideEffect extends GenericSideEffect {\n    /**\n     * Applies or removes interaction styles from plot elements. An array of row ids needs to be passed\n     * which identifies the plot elements and applies styles to them.\n     *\n     * To apply the interaction style,\n     * ```\n     *      const entryRowIds = entrySet[0].uids;\n     *      const interactionStyle = [{\n     *          type: 'fill',\n     *          intensity: [0, 0, 15, 0] // hsla configuration\n     *      }];\n     *\n     *      this.applyInteractionStyle(entryRowIds, interactionStyle, 'brighten', true);\n     * ```\n     * @public\n     * @param {Array} set Array of row ids.\n     * @param {Array} config Style configuration.\n     * @param {Object} config[0] fill or stroke configuration.\n     * @param {string} config[0].type Type of style - fill or stroke.\n     * @param {Array} config[0].intensity hsla configuration.\n     * @param {string} interactionType Type of interaction. This is needed for storing the styles for\n     * each type of interaction in the plot elements.\n     * @param {boolean} apply Whether to apply or remove the interaction style.\n     *\n     * @return {SurrogateSideEffect} Instance of surrogate side effect.\n     */\n    applyInteractionStyle (set, config = {}, interactionType, apply) {\n        const layers = this.firebolt.context.layers();\n        layers.forEach(layer => layer.config().interactive !== false &&\n            layer.applyInteractionStyle(interactionType, set.uids, apply));\n        return this;\n    }\n}\n","import { makeElement } from 'muze-utils';\n\nimport GenericSideEffect from './generic';\n\n/**\n * Any side effect which will add any new element to the chart like drawing a rectangular box or any annotation over\n * the chart needs to inherit this class. This class has methods which returns the container where the dom elements\n * needs to be created.\n *\n * To use this,\n * ```\n *      const SpawnableSideEffect = muze.SideEffects.standards.SpawnableSideEffect;\n *\n *      class SelectionBox extends SpawnableSideEffect {\n *          static formalName () {\n *              return 'selectionBox';\n *          }\n *\n *          // Implement the logic of applying the style here.\n *          apply () {\n *          }\n *      }\n * ```\n * @public\n * @class\n * @extends GenericSideEffect\n * @module SpawnableSideEffect\n */\nexport default class SpawnableSideEffect extends GenericSideEffect {\n    /**\n     * Creates a html or svg element in the container.\n     *\n     * @public\n     * @param {SVGElement|HTMLElement} container Container where the dom element will be rendered.\n     * @param {string} elemType Type of dom element.\n     * @param {Array} data Array of objects with which the dom elements will be binded.\n     * @param {string} className class name of the element.\n     *\n     * @return {Selection} D3 Selection of the element.\n     */\n    createElement (container, elemType, data, className, callbacks) {\n        return makeElement(container, elemType, data, className, callbacks);\n    }\n\n    /**\n     * Returns the drawing information for side effect like svg container, dimensions of the visual unit.\n     *\n     * @public\n     * @return {Object} Drawing information for side effect.\n     * ```\n     *      sideEffectGroup: // svg container where the side effect needs to be appended.\n     *      svgContainer: // svg container of the {@link VisualUnit}.\n     *      htmlContainer: // html div container of the {@link VisualUnit}.\n     *      width: // Width of the {@link VisualUnit}\n     *      height: // Height of the {@link VisualUnit}\n     * ```\n     */\n    drawingContext (...drawingContext) {\n        if (drawingContext.length) {\n            this._drawingContext = drawingContext[0];\n            return this;\n        }\n        return this._drawingContext();\n    }\n\n    show () {\n        return this;\n    }\n\n    hide () {\n        return this;\n    }\n}\n","import { selectElement } from 'muze-utils';\n\nexport const getBoxDimensionsFromPayload = (payload, axes, axisFields) => {\n    let x1;\n    let x2;\n    let y1;\n    let y2;\n    let xRange;\n    let yRange;\n    let direction;\n    const criteria = payload.criteria;\n    const dimensions = payload.dimensions || {};\n    const xDim = dimensions.x;\n    const yDim = dimensions.y;\n\n    if (criteria === null) {\n        return null;\n    }\n\n    const xAxis = axes.x[0];\n    const yAxis = axes.y[0];\n    const xLinear = xAxis.constructor.type() === 'linear';\n    const yLinear = yAxis.constructor.type() === 'linear';\n    const xField = `${axisFields.x[0]}`;\n    const yField = `${axisFields.y[0]}`;\n    const xCriteria = criteria[xField];\n    const yCriteria = criteria[yField];\n\n    if (xCriteria && xCriteria[0] instanceof Array) {\n        xRange = xCriteria[0];\n        yRange = xCriteria[1];\n    } else {\n        xRange = xCriteria || [];\n        yRange = yCriteria || [];\n    }\n    direction = xCriteria && yCriteria ? 'both' : (xCriteria ? 'vertical' : 'horizontal');\n    if (xRange && xRange.length) {\n        if ((yAxis.constructor.type() === 'band' && xLinear)) {\n            x1 = x2 = undefined;\n            direction = 'horizontal';\n        } else {\n            const domain = xAxis.domain();\n            const bandScale = xAxis.constructor.type() === 'band';\n            let x1Val;\n            let x2Val;\n            if (bandScale) {\n                let x1DomainIndex = domain.indexOf(xRange[0]);\n                let x2DomainIndex = domain.indexOf(xRange[xRange.length - 1]);\n                [x1DomainIndex, x2DomainIndex] = [x1DomainIndex, x2DomainIndex].sort((a, b) => a - b);\n                x1Val = domain[x1DomainIndex];\n                x2Val = domain[x2DomainIndex];\n            } else {\n                x1Val = xRange[0];\n                x2Val = xRange[xRange.length - 1];\n            }\n            x1 = xAxis.getScaleValue(x1Val);\n            x2 = xAxis.getScaleValue(x2Val);\n            x2 += bandScale ? xAxis.getUnitWidth() : 0;\n        }\n    } else {\n        x1 = x2 = undefined;\n    }\n    if (yRange && yRange.length) {\n        if ((xAxis.constructor.type() === 'band' && yLinear)) {\n            y1 = y2 = undefined;\n            direction = 'vertical';\n        } else {\n            const domain = yAxis.domain();\n            const bandScale = yAxis.constructor.type() === 'band';\n            let y1Val;\n            let y2Val;\n            if (bandScale) {\n                let y1DomainIndex = domain.indexOf(yRange[0]);\n                let y2DomainIndex = domain.indexOf(yRange[yRange.length - 1]);\n                [y1DomainIndex, y2DomainIndex] = [y1DomainIndex, y2DomainIndex].sort(((a, b) => b - a));\n                y1Val = domain[y1DomainIndex];\n                y2Val = domain[y2DomainIndex];\n            } else {\n                y1Val = yRange[0];\n                y2Val = yRange[yRange.length - 1];\n            }\n            y1 = yAxis.getScaleValue(y1Val);\n            y2 = yAxis.getScaleValue(y2Val);\n            y2 += yAxis.constructor.type() === 'band' ? yAxis.getUnitWidth() : 0;\n        }\n    } else {\n        y1 = y2 = undefined;\n    }\n\n    if ((yLinear && xLinear) || !payload.dragEnd) {\n        if (xDim) {\n            [x1, x2] = xDim;\n        }\n        if (yDim) {\n            [y1, y2] = yDim;\n        }\n    }\n\n    return {\n        dimension: {\n            x1,\n            x2,\n            y1,\n            y2\n        },\n        direction\n    };\n};\n\nexport const changeVisibility = (context, sideEffectGroup, visible) => {\n    const config = context.config();\n    const className = config.defClassName;\n    const classPrefix = config.classPrefix;\n    selectElement(sideEffectGroup).selectAll(`.${classPrefix}-${className}`)\n                    .style('display', visible ? 'block' : 'none');\n};\n","import {\n    getQualifiedClassName,\n    selectElement,\n    makeElement,\n    isValidValue\n} from 'muze-utils';\nimport { CLASSPREFIX } from '../../enums/constants';\nimport './styles.scss';\nimport SpawnableSideEffect from '../spawnable';\nimport { selectionBoxDrag } from '../../actions/physical/selection-box-drag';\nimport { getBoxDimensionsFromPayload, changeVisibility } from './helper';\n\n/**\n * This class is used to create a selection box which is used by visual unit for brushing and\n * selection in the canvas.\n * @class SelectionBox\n */\nclass SelectionBox extends SpawnableSideEffect {\n    /**\n     * It returns the default configuration needed by selectionbox.\n     * @return {Object} Default configuration of the selection box.\n     */\n    static defaultConfig () {\n        return {\n            defClassName: 'selection-box-group',\n            className: '',\n            classPrefix: CLASSPREFIX,\n            box: {\n                defClassName: 'selection-box',\n                className: ''\n            },\n            transition: {\n                duration: 200\n            }\n        };\n    }\n\n    static formalName () {\n        return 'selectionBox';\n    }\n\n    /**\n     * Draws the selectionbox with the specified dimensions.\n     * @param {Object} dimension Dimensions of the selection box.\n     * @param {number} dimension.x1 Starting x position\n     * @param {number} dimension.x2 Ending x position\n     * @param {number} dimension.y1 Starting y position\n     * @param {number} dimension.y2 Ending y position\n     * @param {Object} conf Configuration needed to draw the selection box\n     * @param {number} unitWidth Width of the visual unit.\n     * @param {number} unitHeight Height of the visual unit.\n     */\n    apply (selectionSet, payload) {\n        let x;\n        let y;\n        let width;\n        let height;\n        const config = this._config;\n        const boxConf = config.box;\n        const firebolt = this.firebolt;\n        const drawingInf = this.drawingContext();\n        const mountPoint = drawingInf.sideEffectGroup;\n        const unitWidth = drawingInf.width;\n        const unitHeight = drawingInf.height;\n        const classPrefix = config.classPrefix;\n        const selectionGroupClassName = config.defClassName;\n\n        if (payload.criteria === null) {\n            this.hide(drawingInf);\n            return this;\n        }\n\n        const sourceInf = firebolt.context.getSourceInfo();\n        const { dimension, direction } = getBoxDimensionsFromPayload(payload, sourceInf.axes,\n            sourceInf.fields);\n        const transition = payload.dragEnd && config.transition;\n\n        if (direction === 'both' || direction === 'vertical') {\n            x = Math.min(dimension.x1, dimension.x2);\n            width = Math.abs(dimension.x2 - dimension.x1);\n        } else {\n            x = 0;\n            width = unitWidth;\n        }\n        if (direction === 'both' || direction === 'horizontal') {\n            y = Math.min(dimension.y1, dimension.y2);\n            height = Math.abs(dimension.y2 - dimension.y1);\n        } else {\n            height = unitHeight;\n            y = 0;\n        }\n        this.show(drawingInf);\n        // Create the data array for drawing the rectangle\n        const points = [\n            {\n                x,\n                y,\n                width,\n                height\n            }\n        ];\n        // Create the container group for selection box.\n        const selectionGroup = makeElement(selectElement(mountPoint), 'g', [1],\n            `.${classPrefix}-${selectionGroupClassName}`);\n        const sideEffect = this;\n        const selection = selectionGroup.selectAll('rect').data(points);\n        const selectionBox = selection.enter().append('rect')\n                        .each(function () {\n                            selectionBoxDrag(firebolt)(selectElement(this), ['brush'], sideEffect);\n                        })\n                        .merge(selection)\n                        .each(function (attrs) {\n                            let element = selectElement(this);\n                            transition && (element = element.transition().duration(transition.duration));\n                            for (const key in attrs) {\n                                if ({}.hasOwnProperty.call(attrs, key)) {\n                                    isValidValue(attrs[key]) && element.attr(key, attrs[key]);\n                                }\n                            }\n                        });\n        // Get the qualified class name for selection box rectangle\n        const boxClassName = getQualifiedClassName(boxConf.defClassName, this._id, classPrefix);\n        selectionBox.classed(boxClassName.join(' '), true);\n        selectionBox.classed(boxConf.className, true);\n\n        return this;\n    }\n\n    hide (drawingInf) {\n        changeVisibility(this, drawingInf.sideEffectGroup, false);\n    }\n\n    show (drawingInf) {\n        changeVisibility(this, drawingInf.sideEffectGroup, true);\n    }\n}\n\nexport default SelectionBox;\n\n","import {\n    getEvent,\n    getD3Drag\n } from 'muze-utils';\n\nimport getDragActionConfig from './helpers/drag-action-config';\n\nexport const selectionBoxDrag = firebolt => (targetEl, behaviours) => {\n    let subject;\n    let drawingInf;\n    const context = firebolt.context;\n    const onDrag = (payload) => {\n        behaviours.forEach(action => firebolt.dispatchBehaviour(action, payload));\n    };\n    const d3Drag = getD3Drag();\n\n    targetEl.call(d3Drag().on('start', () => {\n        const event = getEvent();\n        drawingInf = context.getDrawingContext();\n        subject = event.subject;\n    }).on('drag', () => {\n        const event = getEvent();\n        subject.x += event.dx;\n        subject.y += event.dy;\n        const width = drawingInf.width;\n        const height = drawingInf.height;\n        const x = Math.min(width - subject.width, Math.max(subject.x, 0));\n        const y = Math.min(height - subject.height, Math.max(subject.y, 0));\n        const y2 = y + subject.height;\n        const x2 = x + subject.width;\n\n        if (x >= 0 && x2 <= width && y >= 0 && y2 <= height) {\n            const payload = getDragActionConfig(context.getSourceInfo(), {\n                startPos: {\n                    x,\n                    y\n                },\n                endPos: {\n                    x: x2,\n                    y: y2\n                }\n            }, context.data().getFieldsConfig());\n            onDrag(payload);\n        }\n    }).on('end', () => {\n        const width = drawingInf.width;\n        const height = drawingInf.height;\n        const x = Math.min(width - subject.width, Math.max(subject.x, 0));\n        const y = Math.min(height - subject.height, Math.max(subject.y, 0));\n        const y2 = y + subject.height;\n        const x2 = x + subject.width;\n\n        if (x >= 0 && x2 <= width && y >= 0 && y2 <= height) {\n            const payload = getDragActionConfig(context.getSourceInfo(), {\n                startPos: {\n                    x,\n                    y\n                },\n                endPos: {\n                    x: x2,\n                    y: y2\n                },\n                snap: true\n            }, context.data().getFieldsConfig());\n            payload.dragEnd = true;\n            onDrag(payload);\n        }\n    }));\n};\n","export const CLASSPREFIX = 'muze';\nexport const ARROW_RIGHT = 'right';\nexport const ARROW_TOP = 'top';\nexport const ARROW_BOTTOM = 'bottom';\nexport const ARROW_LEFT = 'left';\nexport const TOOLTIP_LEFT = 'left';\nexport const TOOLTIP_RIGHT = 'right';\nexport const TOOLTIP_BOTTOM = 'bottom';\nexport const TOOLTIP_TOP = 'top';\nexport const INITIAL_STYLE = {\n    position: 'absolute',\n    width: 0,\n    height: 0\n};\nexport const TABLE_FORMAT = 'table';\n","import { CLASSPREFIX } from './constants';\n\nexport const defaultConfig = {\n    classPrefix: CLASSPREFIX,\n    defClassName: 'tooltip-box',\n    connectorClassName: 'tooltip-connectors',\n    className: '',\n    row: {\n        margin: 0\n    },\n    content: {\n        spacing: 5,\n        iconContainerSize: 10,\n        iconScale: 1,\n        iconShape: 'circle',\n        iconColor: '#ff0000',\n        rowMargin: '0px',\n        margin: 10,\n        separator: ':',\n        className: 'tooltip-content-container',\n        parentClassName: 'tooltip-content-parent-container'\n    },\n    arrow: {\n        size: 10,\n        disabled: false,\n        defClassName: 'tooltip-arrow',\n        className: '',\n        color: 'rgba(195,195,195,0.85)'\n    }\n};\n","import { getQualifiedClassName } from 'muze-utils';\nimport { TOOLTIP_LEFT, TOOLTIP_RIGHT, ARROW_RIGHT, ARROW_LEFT, TOOLTIP_BOTTOM } from './constants';\n\nexport const getArrowPos = (orient, dim, measurement, config) => {\n    let arrowPos;\n    const { x, y, boxHeight, boxWidth } = measurement;\n    const arrowDisabled = config.arrow.disabled;\n    const arrowWidth = arrowDisabled ? 0 : config.arrow.size;\n\n    if (orient === ARROW_LEFT || orient === ARROW_RIGHT) {\n        let start = 0;\n        let diff = boxHeight / 2;\n        const plotBottom = dim.y + dim.height;\n        const boxBottom = y + boxHeight;\n\n        if (dim.y > y) {\n            start = dim.y - y;\n            diff = (plotBottom >= boxBottom ? (boxBottom - dim.y) : dim.height) / 2;\n        } else if (boxBottom > plotBottom) {\n            diff = Math.abs(y - (dim.y + dim.height)) / 2;\n        }\n        arrowPos = start + diff - arrowWidth / 2;\n    } else {\n        let start = 0;\n        let diff = boxWidth / 2;\n        const plotRight = dim.x + dim.width;\n        const boxRight = x + boxWidth;\n\n        if (dim.x > x) {\n            start = dim.x - x;\n            diff = (plotRight >= boxRight ? (boxRight - dim.x) : dim.width) / 2;\n        } else if (boxRight > plotRight) {\n            diff = Math.abs(x - (dim.x + dim.width)) / 2;\n        }\n        arrowPos = start + diff - arrowWidth / 2;\n    }\n    return arrowPos;\n};\n\n/**\n * Places the arrow in the specified arrow position. It also applies appropriate arrow\n * class name to the arrow element.\n * @param {string} position Left, bottom or right position of the arrow;\n * @param {number} arrowPos position of arrow in pixels\n * @return {Tooltip} Instance of tooltip.\n */\nexport const placeArrow = (context, position, arrowPos) => {\n    const tooltipArrow = context._tooltipArrow;\n    const tooltipBackground = context._tooltipBackground;\n    const config = context._config;\n    const classPrefix = config.classPrefix;\n    const arrowConf = config.arrow;\n    const className = getQualifiedClassName(arrowConf.defClassName, context._id, config.classPrefix);\n\n    tooltipArrow.style('display', 'block');\n    tooltipArrow.attr('class', `${className.join(' ')}`);\n    if (position === TOOLTIP_LEFT || position === TOOLTIP_RIGHT) {\n        tooltipArrow.style('top', `${arrowPos}px`);\n        tooltipArrow.style('left', '');\n        tooltipBackground.style('top', `${arrowPos}px`);\n        tooltipBackground.style('left', '');\n    } else {\n        position === TOOLTIP_BOTTOM ? tooltipArrow.style('top', '100%') : tooltipArrow.style('top',\n            `-${arrowConf.size}px`);\n        tooltipArrow.style('left', `${arrowPos}px`);\n        position === TOOLTIP_BOTTOM ? tooltipBackground.style('top', '100%') : tooltipBackground.style('top',\n            `-${arrowConf.size + 3}px`);\n        tooltipBackground.style('left', `${arrowPos}px`);\n    }\n    tooltipArrow.classed(`${classPrefix}-tooltip-arrow`, true);\n    tooltipArrow.classed(`${classPrefix}-tooltip-arrow-${context._arrowOrientation}`, false);\n    tooltipArrow.classed(`${classPrefix}-tooltip-arrow-${position}`, true);\n    tooltipBackground.classed(`${classPrefix}-tooltip-background-arrow`, true);\n    tooltipBackground.classed(`${classPrefix}-tooltip-background-arrow-${context._arrowOrientation}`, false);\n    tooltipBackground.classed(`${classPrefix}-tooltip-background-arrow-${position}`, true);\n    return this;\n};\n\nexport const reorderContainers = (parentContainer, className) => {\n    parentContainer.selectAll(className).sort((a, b) => a - b);\n};\n","import {\n    selectElement,\n    mergeRecursive,\n    makeElement,\n    setAttrs,\n    setStyles,\n    getSymbol,\n    isSimpleObject\n} from 'muze-utils';\nimport { TABLE_FORMAT } from './constants';\nimport { defaultConfig } from './default-config';\n\n/**\n * This class is used to manage the content of tooltip.\n */\nexport default class Content {\n    /**\n     * Creates an instance of content.\n     */\n    constructor () {\n        this._model = null;\n        this._formatter = null;\n        this._config = this.constructor.defaultConfig();\n    }\n   /**\n     * Returns the default configuration of tooltip\n     * @return {Object} Configuration of tooltip.\n     */\n    static defaultConfig () {\n        const config = defaultConfig.content;\n        config.classPrefix = defaultConfig.classPrefix;\n        return config;\n    }\n\n    config (...c) {\n        if (c.length > 0) {\n            this._config = mergeRecursive(this._config, c[0]);\n            return this;\n        }\n        return this._config;\n    }\n\n    /**\n     * Update model. The format contains presentation strategy which determines how to show the content.\n     * If no strategy is mentioned then default is to show key value pair\n    */\n    update (item) {\n        this._model = item.model;\n        this._formatter = item.formatter;\n        return this;\n    }\n\n    context (ctx) {\n        this._context = ctx;\n        return this;\n    }\n\n    render (mount) {\n        let data;\n        const config = this._config;\n        const iconContainerSize = config.iconContainerSize;\n        const formatter = this._formatter;\n        const rowMargin = config.rowMargin;\n        const model = this._model;\n\n        this._mount = mount;\n        if (model instanceof Array) {\n            data = model;\n        } else {\n            data = formatter(this._model, this.config(), this._context);\n        }\n\n        if (data instanceof Function) {\n            mount.html(data());\n        } else {\n            let content = data;\n            let displayFormat = 'default';\n\n            if (isSimpleObject(data)) {\n                content = data.content;\n                displayFormat = data.displayFormat;\n            }\n\n            const body = makeElement(mount, 'div', [displayFormat], `${config.classPrefix}-tooltip-content`, {},\n                d => d);\n\n            if (displayFormat === TABLE_FORMAT) {\n                const table = makeElement(body, 'table', [1], `${config.classPrefix}-tooltip-table`);\n                const tbody = makeElement(table, 'tbody', [1], `${config.classPrefix}-tooltip-table-tbody`);\n                const rows = makeElement(tbody, 'tr', content, `${config.classPrefix}-tooltip-table-row`);\n                rows.each(function (d, i) {\n                    selectElement(this).classed(`${config.classPrefix}-tooltip-table-row-${i}`, true);\n                });\n                const cells = makeElement(rows, 'td', d => d, `${config.classPrefix}-tooltip-table-cell`);\n                cells.each(function (d) {\n                    selectElement(this).html(d);\n                });\n            } else {\n                const rows = makeElement(body, 'div', content, `${config.classPrefix}-tooltip-row`);\n                const cells = makeElement(rows, 'span', d => d, `${config.classPrefix}-tooltip-content`);\n                cells.attr('class', `${config.classPrefix}-tooltip-content`);\n                setStyles(rows, {\n                    margin: rowMargin\n                });\n                setStyles(cells, {\n                    display: 'inline-block',\n                    'margin-right': `${config.spacing}px`\n                });\n\n                cells.each(function (d) {\n                    const el = selectElement(this);\n                    el.html('');\n                    if (d instanceof Object) {\n                        if (d.type === 'icon') {\n                            const svg = makeElement(el, 'svg', [1]);\n                            const path = makeElement(svg, 'path', [1]);\n                            const shape = d.shape instanceof Function ? d.shape : getSymbol(d.shape);\n\n                            setAttrs(svg, {\n                                x: 0,\n                                y: 0,\n                                width: iconContainerSize,\n                                height: iconContainerSize\n                            });\n                            setAttrs(path, {\n                                d: shape.size(d.size)(),\n                                transform: `translate(${iconContainerSize / 2}, ${iconContainerSize / 2})`\n                            });\n                            setStyles(path, {\n                                fill: d.color\n                            });\n                            setStyles(svg, {\n                                width: `${iconContainerSize}px`,\n                                height: `${iconContainerSize}px`\n                            });\n                        } else {\n                            el.html(d.value);\n                            d.className && el.classed(d.className, true);\n                            setStyles(el, d.style);\n                        }\n                    } else {\n                        el.html(d);\n                    }\n                });\n            }\n        }\n        return this;\n    }\n\n    clear () {\n        this._model = null;\n        return this;\n    }\n}\n","import {\n    mergeRecursive,\n    getQualifiedClassName,\n    getUniqueId,\n    selectElement,\n    setStyles,\n    makeElement\n} from 'muze-utils';\nimport { ARROW_BOTTOM, ARROW_LEFT, ARROW_RIGHT, TOOLTIP_LEFT, TOOLTIP_RIGHT, TOOLTIP_BOTTOM, TOOLTIP_TOP,\n    INITIAL_STYLE } from './constants';\nimport { defaultConfig } from './default-config';\nimport { getArrowPos, placeArrow, reorderContainers } from './helper';\nimport './styles.scss';\nimport Content from './content';\n\n/**\n * This component is responsible for creating a tooltip element. It appends the tooltip\n * in the body element.\n * @class Tooltip\n */\nexport default class Tooltip {\n    /**\n     * Initializes the tooltip with the container element and configuration\n     * @param {HTMLElement} container container where the tooltip will be mounted.\n     * @param {string} className Class name of the tooltip.\n     */\n    constructor (htmlContainer, svgContainer) {\n        let connectorContainer = svgContainer;\n        this._id = getUniqueId();\n        this._config = {};\n        this.config({});\n        const tooltipConf = this._config;\n        const classPrefix = tooltipConf.classPrefix;\n        const contentClass = tooltipConf.content.parentClassName;\n        const container = makeElement(htmlContainer, 'div', [1], `${classPrefix}-tooltip-container`);\n        this._container = container;\n        this._tooltipContainer = container.append('div').style('position', 'absolute');\n        this._contentContainer = this._tooltipContainer.append('div').attr('class', `${classPrefix}-${contentClass}`);\n        this._tooltipBackground = this._tooltipContainer.append('div').style('position', 'relative');\n        this._tooltipArrow = this._tooltipContainer.append('div');\n\n        if (!svgContainer) {\n            connectorContainer = htmlContainer.append('svg').style('pointer-events', 'none');\n        }\n        this._contents = {};\n        this._tooltipConnectorContainer = selectElement(connectorContainer)\n            .append('g')\n            .attr('class', `${tooltipConf.classPrefix}-${tooltipConf.connectorClassName}`);\n        const id = this._id;\n        const defClassName = tooltipConf.defClassName;\n        const qualifiedClassName = getQualifiedClassName(defClassName, id, tooltipConf.classPrefix);\n\n        setStyles(this._tooltipArrow, INITIAL_STYLE);\n        setStyles(this._tooltipBackground, INITIAL_STYLE);\n        this.addClass(qualifiedClassName.join(' '));\n        this.addClass(tooltipConf.className);\n        this.hide();\n    }\n\n    /**\n     * Sets the configuration of tooltip.\n     * @param {Object} config Configuration of tooltip\n     * @return {Tooltip} Instance of tooltip\n     */\n    config (...config) {\n        if (config.length > 0) {\n            const defConf = mergeRecursive({}, this.constructor.defaultConfig());\n            this._config = mergeRecursive(defConf, config[0]);\n            return this;\n        }\n        return this._config;\n    }\n\n    /**\n     * Returns the default configuration of tooltip\n     * @return {Object} Configuration of tooltip.\n     */\n    static defaultConfig () {\n        return defaultConfig;\n    }\n    /**\n     * Sets the class name of tooltip\n     * @param {string} className tooltip class name\n     * @return {Tooltip} Instance of tooltip.\n     */\n    addClass (className) {\n        this._tooltipContainer.classed(className, true);\n        return this;\n    }\n\n    context (...ctx) {\n        if (ctx.length) {\n            this._context = ctx[0];\n            return this;\n        }\n        return this._context;\n    }\n\n    content (name, data, contentConfig = {}) {\n        const config = this.config();\n        const { classPrefix } = config;\n        const contentClass = config.content.className;\n        const formatter = config.formatter;\n        const className = contentConfig.className || `${classPrefix}-${contentClass}-${name}`;\n        const content = this._contents[name] = this._contents[name] || new Content();\n        const container = makeElement(this._contentContainer, 'div', [contentConfig.order], className);\n        container.attr('class', `${classPrefix}-${contentClass} ${className}`);\n        reorderContainers(this._contentContainer, `.${classPrefix}-${contentClass}`);\n        const contentConf = config.content;\n        contentConfig.classPrefix = this._config.classPrefix;\n        content.config(contentConf);\n\n        if (data === null) {\n            content.clear();\n            container.remove();\n            delete this._contents[name];\n        } else {\n            content.update({\n                model: data,\n                formatter: contentConfig.formatter || formatter\n            });\n            content.context(this._context);\n            content.render(container);\n        }\n\n        if (!Object.keys(this._contents).length) {\n            this.hide();\n        }\n        return this;\n    }\n\n    getContents () {\n        return Object.values(this._contents);\n    }\n\n    /**\n     * Positions the tooltip at the given x and y position.\n     * @param {number} x x position\n     * @param {number} y y position\n     * @return {Tooltip} Instance of tooltip.\n     */\n    position (x, y, conf = {}) {\n        if (!Object.keys(this._contents).length) {\n            this.hide();\n            return this;\n        }\n        this.show();\n        const target = this._target;\n        const repositionArrow = conf.repositionArrow;\n\n        if (target && repositionArrow) {\n            const node = this._tooltipContainer.node();\n            const config = this._config;\n            const arrowDisabled = config.arrow.disabled;\n            const arrowWidth = arrowDisabled ? 0 : config.arrow.size;\n            const arrowOrient = this._arrowOrientation;\n            const outsidePlot = arrowOrient === ARROW_LEFT || arrowOrient === ARROW_RIGHT ?\n                (y + node.offsetHeight - arrowWidth) < target.y || y > (target.y + target.height) :\n                (x + node.offsetWidth - arrowWidth) < target.x || x > (target.x + target.width);\n\n            if (!arrowDisabled) {\n                if (outsidePlot) {\n                    let path;\n                    this._tooltipArrow.style('display', 'none');\n                    this._tooltipBackground.style('display', 'none');\n                    this._tooltipConnectorContainer.style('display', 'block');\n                    const connector = this._tooltipConnectorContainer.selectAll('path').data([1]);\n                    const enter = connector.enter().append('path');\n                    if (arrowOrient === ARROW_LEFT) {\n                        path = `M ${x} ${y + node.offsetHeight / 2} L ${target.x + target.width}`\n                            + ` ${target.y + target.height / 2}`;\n                    } else if (arrowOrient === ARROW_RIGHT) {\n                        path = `M ${x + node.offsetWidth} ${y + node.offsetHeight / 2}`\n                                + ` L ${target.x} ${target.y + target.height / 2}`;\n                    } else if (arrowOrient === ARROW_BOTTOM) {\n                        path = `M ${x + node.offsetWidth / 2} ${y + node.offsetHeight}`\n                            + ` L ${target.x + target.width / 2} ${target.y}`;\n                    }\n                    enter.merge(connector).attr('d', path).style('display', 'block');\n                } else {\n                    const arrowPos = getArrowPos(arrowOrient, target, {\n                        x,\n                        y,\n                        boxHeight: node.offsetHeight,\n                        boxWidth: node.offsetWidth\n                    }, this._config);\n\n                    placeArrow(this, this._arrowOrientation, arrowPos);\n                    this._tooltipConnectorContainer.style('display', 'none');\n                }\n            }\n        }\n\n        const offset = this._offset || {\n            x: 0,\n            y: 0\n        };\n        this._tooltipContainer.style('left', `${offset.x + x}px`).style('top',\n            `${offset.y + y}px`);\n\n        return this;\n    }\n\n    /**\n     * Positions the tooltip relative to a rectangular box. It takes care of tooltip overflowing the\n     * boundaries.\n     * @param {Object} dim Dimensions of the plot.\n     */\n    positionRelativeTo (dim, tooltipConf = {}) {\n        let obj;\n        let orientation = tooltipConf.orientation;\n        this.show();\n        if (!dim) {\n            this.hide();\n            return this;\n        }\n\n        const extent = this._extent;\n        const node = this._tooltipContainer.node();\n\n        this._tooltipContainer.style('top', '0px')\n                        .style('left', '0px');\n        const offsetWidth = node.offsetWidth + 2;\n        const offsetHeight = node.offsetHeight + 2;\n        const config = this._config;\n        const offset = this._offset;\n        const arrowDisabled = config.arrow.disabled;\n        const arrowSize = arrowDisabled ? 0 : config.arrow.size;\n        const draw = tooltipConf.draw !== undefined ? tooltipConf.draw : true;\n        const topSpace = dim.y;\n        // When there is no space in right\n        const dimX = dim.x + dim.width + offset.x;\n        const rightSpace = extent.width - dimX;\n        const leftSpace = dim.x + offset.x - extent.x;\n        const positionTop = topSpace > (offsetHeight + arrowSize);\n        const positionRight = rightSpace >= offsetWidth + arrowSize;\n        const positionLeft = leftSpace >= offsetWidth + arrowSize;\n\n        const positionHorizontal = () => {\n            let position;\n            let x = dim.x + dim.width;\n            let y = dim.y;\n\n            if (positionRight) {\n                position = TOOLTIP_LEFT;\n                x += arrowSize;\n            } else if (positionLeft) {\n                x = dim.x - offsetWidth;\n                position = TOOLTIP_RIGHT;\n                x -= arrowSize;\n            } else {\n                position = 'left';\n                x += arrowSize;\n            }\n            if (dim.height < offsetHeight) {\n                y = Math.max(0, dim.y + dim.height / 2 - offsetHeight / 2);\n            }\n\n            const arrowPos = getArrowPos(position, dim, {\n                x,\n                y,\n                boxHeight: offsetHeight,\n                boxWidth: offsetWidth\n            }, this._config);\n\n            return {\n                position,\n                arrowPos,\n                x,\n                y\n            };\n        };\n\n        const positionVertical = () => {\n            let position;\n            let y;\n            // Position tooltip at the center of plot\n            let x = dim.x - offsetWidth / 2 + dim.width / 2;\n\n            // Overflows to the right\n            if ((extent.width - (dim.x + offset.x)) < offsetWidth) {\n                x = extent.width - offsetWidth - offset.x;\n            } else if ((x + offset.x) < extent.x) { // Overflows to the left\n                x = extent.x;\n            }\n\n            if (positionTop) {\n                y = dim.y - offsetHeight - arrowSize;\n                position = TOOLTIP_BOTTOM;\n            } else {\n                y = dim.y + dim.height + arrowSize;\n                position = TOOLTIP_TOP;\n            }\n\n            const arrowPos = getArrowPos(position, dim, {\n                x,\n                y,\n                boxHeight: offsetHeight,\n                boxWidth: offsetWidth\n            }, this._config);\n\n            return {\n                position,\n                arrowPos,\n                x,\n                y\n            };\n        };\n\n        this._target = dim;\n        if (!orientation) {\n            if (positionTop) {\n                orientation = 'vertical';\n            } else if (positionRight || positionLeft) {\n                orientation = 'horizontal';\n            } else {\n                orientation = 'vertical';\n            }\n        }\n\n        if (orientation === 'horizontal') {\n            obj = positionHorizontal();\n        } else if (orientation === 'vertical') {\n            obj = positionVertical();\n        }\n\n        this._position = {\n            x: obj.x,\n            y: obj.y\n        };\n\n        this._arrowPos = obj.arrowPos;\n        if (!arrowDisabled) {\n            placeArrow(this, obj.position, obj.arrowPos);\n        } else {\n            this._tooltipArrow.style('display', 'none');\n            this._tooltipBackground.style('display', 'none');\n        }\n        this._arrowOrientation = obj.position;\n        draw && this.position(obj.x, obj.y);\n        return this;\n    }\n\n    /**\n     * Hides the tooltip element.\n     * @return {Tooltip} Instance of tooltip.\n     */\n    hide () {\n        this._tooltipContainer.style('display', 'none');\n        this._tooltipConnectorContainer.style('display', 'none');\n        return this;\n    }\n\n    /**\n     * Shows the tooltip element.\n     * @return {Tooltip} Instance of tooltip.\n     */\n    show () {\n        this._tooltipContainer.style('display', 'block');\n        return this;\n    }\n\n    extent (extent) {\n        this._extent = extent;\n        return this;\n    }\n\n    offset (offset) {\n        this._offset = offset;\n        return this;\n    }\n\n    remove () {\n        this._tooltipContainer.remove();\n        this._tooltipBackground.remove();\n        this._tooltipConnectorContainer.remove();\n        return this;\n    }\n}\n","export const SELECTION_SUMMARY = 'selectionSummary';\nexport const HIGHLIGHT_SUMMARY = 'highlightSummary';\n","import {\n    FieldType,\n    GROUP_BY_FUNCTIONS,\n    formatTemporal,\n    DimensionSubtype,\n    MeasureSubtype,\n    DataModel,\n    defaultValue,\n    retrieveFieldDisplayName,\n    nestCollection,\n    getObjProp,\n    intersect\n} from 'muze-utils';\nimport { TABLE_FORMAT } from '@chartshq/muze-tooltip';\nimport { SELECTION_SUMMARY, HIGHLIGHT_SUMMARY } from '../../enums/tooltip-strategies';\n\nconst { SUM, COUNT } = GROUP_BY_FUNCTIONS;\nconst { InvalidAwareTypes } = DataModel;\n\nconst formatters = (formatter, interval, valueParser) => ({\n    [DimensionSubtype.TEMPORAL]: value => (value instanceof InvalidAwareTypes ? valueParser(value) :\n        formatTemporal(Number(value), interval)),\n    [MeasureSubtype.CONTINUOUS]: value => (value instanceof InvalidAwareTypes ? valueParser(value) :\n        formatter(value.toFixed(2))),\n    [DimensionSubtype.CATEGORICAL]: value => valueParser(value)\n});\n\nconst getTabularData = (dataObj, fieldInf) => {\n    const rows = [];\n    const { data, schema } = dataObj;\n    rows.push(schema.map(d => fieldInf[d.name].displayName));\n\n    data.forEach((d) => {\n        const row = [];\n        schema.forEach((fieldObj, i) => {\n            const value = fieldInf[fieldObj.name].fn(d[i]);\n            row.push(value);\n        });\n        rows.push(row);\n    });\n    return rows;\n};\n\nconst getKeyValue = (field, value, classPrefix, margin) => {\n    const keyObj = {\n        value: field,\n        className: `${classPrefix}-tooltip-key`\n    };\n    if (margin !== undefined) {\n        keyObj.style = {\n            'margin-left': `${margin}px`\n        };\n    }\n    return [keyObj, {\n        value,\n        className: `${classPrefix}-tooltip-value`\n    }];\n};\n\nconst generateRetinalFieldsValues = (valueArr, retinalFields, content, context) => {\n    const { fieldsConfig, dimensionMeasureMap, axes, config, fieldInf, dataLen } = context;\n    const { classPrefix, margin, separator } = config;\n    const colorAxis = axes.color[0];\n    const shapeAxis = axes.shape[0];\n    const sizeAxis = axes.size[0];\n\n    for (const retField in retinalFields) {\n        const retIndex = fieldsConfig[retField].index;\n        const retinalFieldValue = valueArr[retIndex];\n        const measuresArr = dimensionMeasureMap[retField];\n        const icon = {\n            type: 'icon',\n            color: colorAxis.getColor(retinalFieldValue),\n            shape: shapeAxis.getShape(retinalFieldValue),\n            size: sizeAxis.getSize(retinalFieldValue) * config.iconScale\n        };\n        const { displayName, fn } = fieldInf[retField];\n        const formattedRetinalValue = fn(retinalFieldValue);\n\n        if (dataLen === 1) {\n            content.push(getKeyValue(displayName, formattedRetinalValue, classPrefix));\n        } else {\n            const hasMultipleMeasures = measuresArr.length > 1;\n            hasMultipleMeasures && (content.push([icon, formattedRetinalValue]));\n            measuresArr.forEach((measure) => {\n                const measureIndex = fieldsConfig[measure].index;\n                const { displayName: dName, fn: formatterFn } = fieldInf[measure];\n                const value = formatterFn(valueArr[measureIndex]);\n                content.push(hasMultipleMeasures ?\n                        getKeyValue(`${dName}${separator}`, value, classPrefix, margin) :\n                [icon, ...getKeyValue(formattedRetinalValue, value, classPrefix)\n                ]);\n            });\n        }\n    }\n};\n\nconst getFieldInf = (schema, dataModel, context) => {\n    const { valueParser, timeDiffs } = context;\n    const fieldsObj = dataModel.getFieldspace().fieldsObj();\n    const defFormatter = formatters(null, null, valueParser)[DimensionSubtype.CATEGORICAL];\n\n    return schema.reduce((inf, field) => {\n        const { subtype, name, type } = field;\n        const interval = subtype === DimensionSubtype.TEMPORAL ? timeDiffs[name] : 0;\n        const nf = type === FieldType.MEASURE ? fieldsObj[name].numberFormat() : val => val;\n        inf[name] = {\n            fn: defaultValue(formatters(nf, interval, valueParser)[subtype], defFormatter),\n            displayName: `${retrieveFieldDisplayName(dataModel, name)}`\n        };\n        return inf;\n    }, {});\n};\n\nexport const buildTooltipData = (dataModel, config = {}, context) => {\n    let nestedDataObj;\n    let fieldValues = [];\n    const { data, schema } = dataModel.getData();\n    const fieldspace = dataModel.getFieldspace();\n    const fieldsConfig = dataModel.getFieldsConfig();\n    const { color, shape, size } = context.firebolt.context.retinalFields();\n    const detailFields = context.detailFields || [];\n    const dimensions = schema.filter(d => d.type === FieldType.DIMENSION);\n    const measures = schema.filter(d => d.type === FieldType.MEASURE);\n    const containsDetailField = !!intersect(schema, detailFields).length;\n    const dataLen = data.length;\n    const {\n        dimensionMeasureMap,\n        axes\n    } = context;\n    const fieldInf = getFieldInf(schema, dataModel, context);\n\n    let displayFormat;\n    if (dataLen > 1 && containsDetailField) {\n        fieldValues = getTabularData({\n            data,\n            schema,\n            fieldspace\n        }, fieldInf);\n        displayFormat = TABLE_FORMAT;\n    } else {\n        const retinalFields = [color.field, shape.field, size.field].reduce((acc, field) => {\n            field && fieldsConfig[field].def.type === FieldType.DIMENSION && (acc[field] = 1);\n            return acc;\n        }, {});\n        const filteredDimensions = dimensions.filter(field => !retinalFields[field.name]);\n        const indices = filteredDimensions.map(dim => fieldsConfig[dim.name].index);\n        const allMeasures = [...new Set(...Object.values(dimensionMeasureMap))];\n        const filteredMeasures = dataLen > 1 ? measures.filter(d => allMeasures.indexOf(d.name) === -1) : measures;\n\n        nestedDataObj = nestCollection({\n            data,\n            keys: indices\n        });\n        nestedDataObj = !getObjProp(nestedDataObj[0], 'key') ? [{\n            values: nestedDataObj\n        }] : nestedDataObj;\n\n        const generateTooltipContent = (nestedData, index = 0, content = []) => {\n            const { classPrefix, separator } = config;\n\n            for (let i = 0, len = nestedData.length; i < len; i++) {\n                const { values, key } = nestedData[i];\n                const field = getObjProp(schema, indices[index], 'name');\n\n                if (field) {\n                    const { displayName, fn } = fieldInf[field];\n                    const formattedValue = fn(key);\n                    content.push(getKeyValue(`${displayName}${separator}`, formattedValue, classPrefix));\n                }\n\n                if (values[0] && values[0].key) {\n                    generateTooltipContent(values, index + 1, content);\n                } else {\n                    for (let j = 0, len2 = values.length; j < len2; j++) {\n                        const valueArr = values[j];\n                        generateRetinalFieldsValues(valueArr, retinalFields, content, {\n                            fieldInf,\n                            axes,\n                            config,\n                            fieldsConfig,\n                            dimensionMeasureMap,\n                            dataLen\n                        });\n\n                        filteredMeasures.forEach((measure) => {\n                            const { name } = measure;\n                            const { displayName, fn } = fieldInf[name];\n                            content.push(getKeyValue(`${displayName}${separator}`,\n                                fn(valueArr[fieldsConfig[name].index]), classPrefix));\n                        });\n                    }\n                }\n            }\n        };\n        generateTooltipContent(nestedDataObj, 0, fieldValues);\n    }\n\n    return {\n        content: fieldValues,\n        displayFormat\n    };\n};\n\nexport const strategies = {\n    [SELECTION_SUMMARY]: (dm, config, context) => {\n        const { selectionSet } = context;\n        const aggFns = selectionSet.mergedEnter.aggFns;\n        const dataObj = dm.getData();\n        const measures = dataObj.schema.filter(d => d.type === FieldType.MEASURE);\n        const aggregatedModel = dm.groupBy([''], measures.reduce((acc, v) => {\n            acc[v.name] = aggFns[v.name] === COUNT ? SUM : aggFns[v.name];\n            return acc;\n        }, {\n            saveChild: false\n        }));\n        const fieldsConf = aggregatedModel.getFieldsConfig();\n        let values = [[{\n            value: `${dataObj.data.length}`,\n            style: {\n                'font-weight': 'bold'\n            }\n        }, 'Items Selected']];\n        const measureNames = measures.map(d => d.name);\n        const data = aggregatedModel.getData().data;\n        measureNames.forEach((measure) => {\n            const value = data[0][fieldsConf[measure].index];\n            value instanceof InvalidAwareTypes ? values.push([]) : values.push([`(${aggFns[measure].toUpperCase()})`,\n                `${retrieveFieldDisplayName(dm, measure)}`,\n                {\n                    value: `${value.toFixed(2)}`,\n                    style: {\n                        'font-weight': 'bold'\n                    }\n                }]);\n        });\n        if (measureNames.length === 1) {\n            values = [[...values[0], ...values[1]]];\n        }\n        return values;\n    },\n    [HIGHLIGHT_SUMMARY]: (data, config, context) => buildTooltipData(data, config, context)\n};\n","import { Tooltip as TooltipRenderer } from '@chartshq/muze-tooltip';\nimport { FieldType, mergeRecursive, defaultValue } from 'muze-utils';\nimport { spaceOutBoxes } from '../helper';\nimport { strategies } from './strategies';\nimport { FRAGMENTED } from '../../enums/constants';\nimport { TOOLTIP } from '../../enums/side-effects';\nimport SpawnableSideEffect from '../spawnable';\n\nimport './styles.scss';\nimport { HIGHLIGHT_SUMMARY } from '../../enums/tooltip-strategies';\n\nconst configResolvers = {\n    [HIGHLIGHT_SUMMARY]: (specificConf, config) => defaultValue(specificConf, config),\n    default: specificConf => defaultValue(specificConf, {})\n};\n\nconst sanitizeConfig = (config, context) => {\n    const strategyObj = context._strategies;\n    const sanitizedConf = Object.assign({}, config);\n    for (const key in strategyObj) {\n        sanitizedConf[key] = defaultValue(configResolvers[key], configResolvers.default)(config[key], config);\n    }\n    return sanitizedConf;\n};\n\nexport default class Tooltip extends SpawnableSideEffect {\n    constructor (...params) {\n        super(...params);\n        this._tooltips = {};\n        this._strategies = mergeRecursive({}, strategies);\n        this._strategy = HIGHLIGHT_SUMMARY;\n    }\n\n    static defaultConfig () {\n        return {\n            padding: 5,\n            offset: {\n                x: 0,\n                y: 0\n            },\n            highlightSummary: {\n                dataTransform: (dt, fields) => (fields ? dt.project(fields, { saveChild: false }) : dt\n                )\n            },\n            selectionSummary: {\n                dataTransform: (dt, fields) => {\n                    const fieldspace = dt.getFieldspace();\n                    const dimensions = Object.keys(fieldspace.getDimension());\n                    const measures = Object.keys(fieldspace.getMeasure());\n                    const projectedFields = defaultValue(fields, measures.length ? [measures[0]] : []);\n                    return dt.project([...dimensions, ...projectedFields], {\n                        saveChild: false\n                    });\n                }\n            }\n        };\n    }\n\n    static formalName () {\n        return TOOLTIP;\n    }\n\n    config (...params) {\n        if (params.length) {\n            const config = this._config = mergeRecursive(this._config, sanitizeConfig(params[0], this));\n            const strategyObj = this._strategies;\n            for (const key in strategyObj) {\n                const formatter = config[key].formatter;\n                this.setStrategy(key, formatter);\n            }\n            return this;\n        }\n        return this._config;\n    }\n\n    apply (selectionSet, payload, options = {}) {\n        let totalHeight = 0;\n        let totalWidth = 0;\n        const dataModel = selectionSet.mergedEnter.model;\n        const context = this.firebolt.context;\n        const drawingInf = this.drawingContext();\n        if ((dataModel.isEmpty() || payload.criteria === null)) {\n            this.hide(options, null);\n            return this;\n        }\n\n        const tooltips = this._tooltips;\n        const config = this.config();\n        const boundBox = {\n            width: drawingInf.width,\n            height: drawingInf.height\n        };\n        const showInPosition = payload.showInPosition;\n        const pad = config.padding;\n        const dataModels = [];\n        const fragmented = config.mode === FRAGMENTED;\n        const sourceInf = context.getSourceInfo();\n        const fields = sourceInf.fields;\n        const xFieldDim = fields.x[0] ? fields.x[0].type() === FieldType.DIMENSION : false;\n        const showVertically = !!xFieldDim;\n        const tooltipPos = payload.position;\n        const boxes = [];\n        const enter = {};\n        const uids = dataModel.getData().uids;\n        if (fragmented) {\n            dataModels.push(...uids.map(d => dataModel.select((fieldsArr, i) => i === d, {\n                saveChild: false\n            })));\n        } else {\n            dataModels.push(dataModel);\n        }\n\n        let target = payload.target;\n        let targetFields = [];\n        if (target) {\n            targetFields = target[0] || [];\n            const sourceFields = payload.sourceFields;\n            const indices = [];\n            for (let i = 0, len = targetFields.length; i < len; i++) {\n                if (sourceFields.indexOf(targetFields[i]) !== -1) {\n                    indices.push(i);\n                }\n            }\n            target = target.map(d => d.filter((v, i) => indices.indexOf(i) !== -1));\n        }\n\n        const plotDimensions = context.getPlotPointsFromIdentifiers(target || payload.criteria, {\n            getBBox: true\n        });\n\n        const strategy = defaultValue(options.strategy, this._strategy);\n        const strategyConf = config[strategy];\n        const { dataTransform, fields: projectFields } = strategyConf;\n        const strategyObj = this._strategies;\n        // Show tooltip for each datamodel\n        for (let i = 0; i < dataModels.length; i++) {\n            let plotDim = plotDimensions[i];\n            if (fragmented) {\n                const dimensions = dataModels[i].getData().schema.filter(d => d.type === FieldType.DIMENSION)\n                    .map(d => d.name);\n                plotDim = context.getPlotPointsFromIdentifiers(dataModels[i].project(dimensions), { getBBox: true });\n                plotDim = plotDim && plotDim[0];\n            }\n\n            const dt = dataTransform(dataModels[i], projectFields, this);\n\n            enter[i] = true;\n            const { parentContainer: layoutContainer, parentContainerDimensions } = drawingInf;\n            const layoutBoundBox = layoutContainer.getBoundingClientRect();\n            const unitBoundBox = drawingInf.htmlContainer.getBoundingClientRect();\n\n            const offsetLeft = unitBoundBox.left - layoutBoundBox.left;\n            const offsetTop = unitBoundBox.top - layoutBoundBox.top;\n            const tooltipInst = tooltips[i] = tooltips[i] || new TooltipRenderer(layoutContainer,\n                    drawingInf.svgContainer);\n\n            sourceInf.payload = payload;\n            sourceInf.firebolt = this.firebolt;\n            sourceInf.detailFields = context.detailFields();\n            sourceInf.timeDiffs = context.timeDiffsByField();\n            sourceInf.valueParser = context.valueParser();\n            sourceInf.selectionSet = selectionSet;\n            tooltipInst.context(sourceInf);\n            const strategyFn = strategyObj[strategy];\n            tooltipInst.content(strategy, dt, {\n                formatter: strategyFn,\n                order: options.order\n            })\n                            .config(this.config())\n                            .extent({\n                                x: 0,\n                                y: 0,\n                                width: parentContainerDimensions.width,\n                                height: parentContainerDimensions.height\n                            })\n                            .offset({\n                                x: offsetLeft + (config.offset.x || 0),\n                                y: offsetTop + (config.offset.y || 0)\n                            });\n\n            if (showInPosition) {\n                tooltipInst.position(tooltipPos.x + pad, tooltipPos.y + pad);\n            } else if (plotDim) {\n                tooltipInst.positionRelativeTo({\n                    x: plotDim.x,\n                    y: plotDim.y,\n                    width: plotDim.width || 0,\n                    height: plotDim.height || 0\n                }, {\n                    orientation: fragmented ?\n                        (showVertically ? 'horizontal' : 'vertical') : undefined\n                });\n            } else {\n                tooltipInst.hide();\n                break;\n            }\n\n            if (fragmented) {\n                const position = tooltipInst._position;\n                const tooltipBoundBox = tooltipInst._tooltipContainer.node().getBoundingClientRect();\n\n                totalHeight += tooltipBoundBox.height + pad;\n                totalWidth += tooltipBoundBox.width + pad;\n                if (showVertically ? totalHeight > drawingInf.height : totalWidth > drawingInf.width) {\n                    break;\n                }\n                boxes.push({\n                    x: position.x,\n                    y: position.y,\n                    width: tooltipBoundBox.width,\n                    height: tooltipBoundBox.height,\n                    tooltip: tooltipInst\n                });\n            }\n        }\n\n        for (const key in tooltips) {\n            if (!enter[key]) {\n                const tooltip = tooltips[key];\n                tooltip.content(payload.action, null);\n                if (!tooltip.getContents().length) {\n                    tooltip.remove();\n                    delete tooltips[key];\n                }\n            }\n        }\n        if (fragmented) {\n            spaceOutBoxes(boxes, boundBox, showVertically);\n            boxes.forEach(box => box.tooltip.position(box.x, box.y, {\n                repositionArrow: true\n            }));\n        }\n        return this;\n    }\n\n    hide (options) {\n        const tooltips = this._tooltips;\n        for (const key in tooltips) {\n            if ({}.hasOwnProperty.call(tooltips, key)) {\n                const strategy = options.strategy || this._strategy;\n                tooltips[key].content(strategy, null);\n                tooltips[key].hide();\n            }\n        }\n    }\n}\n","export const spaceOutBoxes = (boxes, extent, showVertically) => {\n    let y;\n    let height;\n    let x;\n    let width;\n    let i;\n    const pad = 5;\n    const len = boxes.length;\n    const spaceOutIfOverlap = (firstBox, secondBox, opposite) => {\n        x = firstBox.x;\n        width = firstBox.width;\n        y = firstBox.y;\n        height = firstBox.height;\n        const bottom = y + height;\n        const right = x + width;\n\n        if (showVertically) {\n            if (opposite ? y < (secondBox.y + secondBox.height) : bottom > secondBox.y) {\n                secondBox.y = opposite ? firstBox.y - secondBox.height - pad :\n                        bottom + pad;\n            }\n        } else if (opposite ? x < (secondBox.x + secondBox.width) : right > secondBox.x) {\n            secondBox.x = opposite ? firstBox.x - secondBox.width - pad :\n                    right + pad;\n        }\n    };\n\n    boxes.sort((a, b) => (showVertically ? a.y - b.y : a.x - b.x));\n    i = 0;\n\n    for (i = 0; i < len - 1; i++) {\n        spaceOutIfOverlap(boxes[i], boxes[i + 1]);\n    }\n\n    if ((boxes[i].y + boxes[i].height) > extent.height ||\n            (boxes[i].x + boxes[i].width) > extent.width) {\n        if (showVertically) {\n            boxes[i].y -= (boxes[i].height + boxes[i].y) - extent.height;\n        } else {\n            boxes[i].x -= (boxes[i].width + boxes[i].x) - extent.width;\n        }\n        for (i = len - 1; i > 0; i--) {\n            spaceOutIfOverlap(boxes[i], boxes[i - 1], true);\n        }\n    }\n    return boxes;\n}\n;\n","import { selectElement, FieldType } from 'muze-utils';\n\nimport './styles.scss';\nimport { CLASSPREFIX } from '../../enums/constants';\nimport { CROSSLINE } from '../../enums/side-effects';\nimport SpawnableSideEffect from '../spawnable';\n\nexport default class Crossline extends SpawnableSideEffect {\n    static defaultConfig () {\n        return {\n            className: `${CLASSPREFIX}-crossline-group`,\n            bandClass: `${CLASSPREFIX}-crossband`,\n            lineClass: `${CLASSPREFIX}-crossline`\n        };\n    }\n\n    static formalName () {\n        return CROSSLINE;\n    }\n\n    apply (selectionSet, payload) {\n        let height;\n        let bandWidth;\n        let px;\n        let width;\n        const {\n            className,\n            bandClass,\n            lineClass\n        } = this.config();\n        const dataModel = selectionSet.mergedEnter.model;\n        const drawingInf = this.drawingContext();\n        if (payload.criteria && dataModel && dataModel.isEmpty()) {\n            return this;\n        }\n        if (payload.criteria === null || !dataModel) {\n            this.hide();\n            return this;\n        }\n\n        const dataObj = dataModel.getData();\n        const sourceInf = this.firebolt.context.getSourceInfo();\n        const axes = sourceInf.axes;\n        const axisFields = sourceInf.fields;\n        const fields = selectionSet.fields;\n        const data = dataObj.data;\n        const fieldsConfig = dataModel.getFieldsConfig();\n        const svgContainer = drawingInf.sideEffectGroup;\n\n        const elemData = [];\n        fields.forEach((field) => {\n            const fieldIndex = fieldsConfig[field] && fieldsConfig[field].index;\n            const dataArr = data.map(d => d[fieldIndex]);\n            const axisIndex = [['x', 0], ['x', 1], ['y', 0], ['y', 1]].find((arr) => {\n                const fieldInst = axisFields[arr[0]][arr[1]];\n                return fieldInst && fieldInst.type() === FieldType.DIMENSION &&\n                    fieldInst.getMembers().indexOf(field) !== -1;\n            });\n            if (axisIndex !== undefined && data.length) {\n                const type = axisIndex[0];\n                const axis = axes[type][axisIndex[1]];\n                const value = dataArr[0];\n                bandWidth = axis.getUnitWidth() || 0;\n                px = axis.getScaleValue(value) + bandWidth / 2 + drawingInf.xOffset;\n                const layers = this.firebolt.context.layers();\n                const plotWidth = Math.max(...layers.map(layer => layer.getPlotSpan()[type]));\n                const pad = Math.max(...layers.map(layer => layer.getPlotPadding()[type]));\n                height = drawingInf.height;\n                width = drawingInf.width;\n                const startPx = px - plotWidth / 2 - pad / 2;\n                const endPx = px + plotWidth / 2 + pad / 2;\n                const dataPoint = {};\n                if (type === 'y') {\n                    dataPoint.d = `M 0 ${startPx} L 0 ${endPx} L ${width} ${endPx} L ${width} ${startPx} Z`;\n                } else {\n                    dataPoint.d = `M ${startPx} 0 L ${endPx} 0 L ${endPx} ${height} L ${startPx} ${height} Z`;\n                }\n                dataPoint.className = plotWidth ? bandClass : lineClass;\n                !isNaN(px) && elemData.push(dataPoint);\n            }\n        });\n        if (elemData.length) {\n            const parentGroup = this.createElement(svgContainer, 'g', [1], className);\n            const elem = this.createElement(parentGroup, 'path', elemData);\n            elem.attr('d', d => d.d).style('pointer-events', 'none')\n                            .attr('class', d => d.className);\n        }\n        return this;\n    }\n\n    hide () {\n        const className = this.config().className;\n        const drawingInf = this.drawingContext();\n        selectElement(drawingInf.sideEffectGroup).selectAll(`.${className}`).remove();\n    }\n}\n","const fadeFn = (set, context, strategy) => {\n    const {\n        mergedEnter,\n        mergedExit,\n        exitSet,\n        completeSet\n    } = set;\n\n    if (!mergedEnter.length && !mergedExit.length) {\n        context.applyInteractionStyle(completeSet, {}, strategy, false);\n    } else {\n        context.applyInteractionStyle(exitSet[1], {}, strategy, true);\n        context.applyInteractionStyle(mergedEnter, {}, strategy, false);\n    }\n};\n\nexport const strategies = {\n    fade: fadeFn,\n    focus: (set, context) => {\n        const {\n            mergedEnter,\n            mergedExit,\n            completeSet\n        } = set;\n        if (!mergedEnter.length && !mergedExit.length) {\n            context.applyInteractionStyle(completeSet, {}, 'focus', false);\n        } else {\n            context.applyInteractionStyle(mergedExit, {}, 'focus', true);\n            context.applyInteractionStyle(mergedEnter, {}, 'focus', false);\n        }\n    },\n    highlight: (set, context) => {\n        const {\n            mergedEnter,\n            mergedExit,\n            entrySet,\n            exitSet,\n            completeSet\n        } = set;\n        if (!mergedEnter.length && !mergedExit.length) {\n            context.applyInteractionStyle(completeSet, {}, 'highlight', false);\n        } else {\n            context.applyInteractionStyle(entrySet[1], {}, 'highlight', true);\n            context.applyInteractionStyle(exitSet[1], {}, 'highlight', false);\n        }\n    }\n};\n","import SurrogateSideEffect from '../surrogate';\nimport { strategies } from './strategy';\nimport { HIGHLIGHTER } from '../../enums/side-effects';\n\nexport default class PlotHighlighter extends SurrogateSideEffect {\n    constructor (...params) {\n        super(...params);\n        this._strategy = 'highlight';\n        this._strategies = strategies;\n    }\n\n    static formalName () {\n        return HIGHLIGHTER;\n    }\n\n    static target () {\n        return 'visual-unit';\n    }\n\n    apply (selectionSet, payload, options = {}) {\n        const strategy = this._strategies[options.strategy || this._strategy];\n\n        strategy(selectionSet, this, options.strategy || this._strategy);\n\n        return this;\n    }\n}\n","import SurrogateSideEffect from '../surrogate';\n\nexport default class FilterEffect extends SurrogateSideEffect {\n    static formalName () {\n        return 'filter';\n    }\n\n    static target () {\n        return 'visual-unit';\n    }\n\n    static mutates () {\n        return true;\n    }\n\n    apply (selectionSet, payload) {\n        const context = this.firebolt.context;\n        const entryModel = selectionSet.mergedEnter.model;\n        if (payload.criteria === null) {\n            context.clearCaching().resetData();\n        } else {\n            context.enableCaching().data(entryModel);\n        }\n        return this;\n    }\n}\n","import { DataModel, getObjProp } from 'muze-utils';\nimport { CLASSPREFIX } from '../../enums/constants';\nimport { ANCHORS } from '../../enums/side-effects';\nimport SpawnableSideEffect from '../spawnable';\n\nimport './styles.scss';\n\nconst addLayer = (layerRegistry, context, sideEffect) => {\n    context.addLayer((layerDefs) => {\n        const layers = [];\n\n        if (layerDefs) {\n            layerDefs.forEach((layerDef) => {\n                const mark = layerDef.mark;\n                const layerCls = layerRegistry[mark];\n\n                if (layerCls && layerCls.shouldDrawAnchors()) {\n                    const depLayerEncoding = layerDef.def.encoding;\n                    const encoding = {\n                        x: getObjProp(depLayerEncoding, 'x', 'field'),\n                        y: getObjProp(depLayerEncoding, 'y', 'field'),\n                        color: getObjProp(depLayerEncoding, 'color', 'field'),\n                        size: {\n                            field: getObjProp(depLayerEncoding, 'size', 'field'),\n                            value: sideEffect.defaultSizeValue()\n                        }\n                    };\n                    const commonName = sideEffect.constructor.formalName();\n                    const name = `${layerDef.def.name}-${commonName}`;\n\n                    layers.push({\n                        name,\n                        mark: 'point',\n                        groupId: commonName,\n                        className: sideEffect.constructor.defaultConfig().className,\n                        encoding,\n                        transform: {\n                            type: 'identity'\n                        },\n                        calculateDomain: false,\n                        transition: sideEffect.getTransitionConfig(),\n                        source: dm => dm.select(() => false, {\n                            saveChild: false\n                        }),\n                        interactive: false,\n                        owner: layerDef.def.name\n                    });\n                }\n            });\n        }\n        return layers;\n    });\n};\n\nexport default class AnchorEffect extends SpawnableSideEffect {\n    constructor (...params) {\n        super(...params);\n        this._layersMap = {};\n        this.addAnchorLayers();\n    }\n\n    static target () {\n        return 'visual-unit';\n    }\n\n    static defaultConfig () {\n        return {\n            className: `${CLASSPREFIX}-anchors-group`\n        };\n    }\n\n    static formalName () {\n        return ANCHORS;\n    }\n\n    addAnchorLayers () {\n        const context = this.firebolt.context;\n        const layerRegistry = context.registry().layerRegistry;\n\n        addLayer(layerRegistry, context, this);\n        return this;\n    }\n\n    getTransitionConfig () {\n        return {\n            disabled: true\n        };\n    }\n\n    /**\n     * Returns the default area value of the anchor point.\n     * @return { number } Default area value of anchor.\n     */\n    defaultSizeValue () {\n        return 100;\n    }\n\n    apply (selectionSet) {\n        const dataModel = selectionSet.mergedEnter.model;\n        const formalName = this.constructor.formalName();\n\n        const context = this.firebolt.context;\n        const layers = context.layers().filter(layer => layer.config().groupId === formalName);\n\n        layers.forEach((layer) => {\n            const linkedLayer = context.getLayerByName(layer.config().owner);\n            const [transformedData, schema] = linkedLayer.getTransformedDataFromIdentifiers(dataModel);\n            const transformedDataModel = new DataModel(transformedData, schema);\n\n            layer.data(transformedDataModel);\n        });\n        return this;\n    }\n}\n","import AnchorEffect from './anchors';\nimport { CLASSPREFIX } from '../enums/constants';\nimport { PERSISTENT_ANCHORS } from '../enums/side-effects';\n\nexport default class PersistentAnchors extends AnchorEffect {\n    static formalName () {\n        return PERSISTENT_ANCHORS;\n    }\n\n    static defaultConfig () {\n        return {\n            className: `${CLASSPREFIX}-persistent-anchors`\n        };\n    }\n\n    getTransitionConfig () {\n        return {\n            disabled: true\n        };\n    }\n}\n","import AnchorEffect from './anchors';\nimport { CLASSPREFIX } from '../enums/constants';\nimport { BRUSH_ANCHORS } from '../enums/side-effects';\n\nexport default class BrushAnchors extends AnchorEffect {\n    static formalName () {\n        return BRUSH_ANCHORS;\n    }\n\n    static defaultConfig () {\n        return {\n            className: `${CLASSPREFIX}-brush-anchors`\n        };\n    }\n\n    getTransitionConfig () {\n        return {\n            disabled: true\n        };\n    }\n}\n","import * as BEHAVIOURS from './enums/behaviours';\n\nexport const behaviourEffectMap = {\n    [BEHAVIOURS.BRUSH]: ['selectionBox', {\n        name: 'highlighter',\n        options: {\n            strategy: 'fade'\n        }\n    }, 'brush-anchors'],\n    [`${BEHAVIOURS.BRUSH},${BEHAVIOURS.SELECT}`]: [{\n        name: 'tooltip',\n        options: {\n            strategy: 'selectionSummary',\n            order: 0,\n            filter: context => context.config().mode === 'fragmented'\n        }\n    }],\n    [BEHAVIOURS.HIGHLIGHT]: [{\n        name: 'highlighter',\n        options: {\n            strategy: 'highlight'\n        }\n    }, 'crossline', {\n        name: 'tooltip',\n        options: {\n            order: 9999\n        }\n    }, 'anchors'],\n    [BEHAVIOURS.FILTER]: ['filter'],\n    [BEHAVIOURS.SELECT]: [{\n        name: 'highlighter',\n        options: {\n            strategy: 'focus'\n        }\n    }, 'persistent-anchors']\n};\n","export const CLASSPREFIX = 'muze';\nexport const STACK = 'stack';\nexport const GROUP = 'group';\nexport const IDENTITY = 'identity';\nexport const ANGLE = 'angle';\nexport const RADIUS = 'radius';\nexport const SIZE = 'size';\nexport const COLOR = 'color';\nexport const SHAPE = 'shape';\nexport const TEXT = 'text';\nexport const OUTER_RADIUS_VALUE = 'outerRadiusValue';\nexport const TEXT_ANCHOR_MIDDLE = 'middle';\nexport const ENCODING = {\n    X: 'x',\n    Y: 'y',\n    X0: 'x0',\n    Y0: 'y0',\n    RADIUS: 'radius',\n    RADIUS0: 'radius0',\n    ANGLE: 'angle',\n    ANGLE0: 'angle0'\n};\n\nexport const ASCENDING = 'asc';\n\nexport const AGG_FN_SUM = 'sum';\n\nexport const AREA_LAYER = 'area';\nexport const ARC_LAYER = 'arc';\nexport const LINE_LAYER = 'line';\nexport const TEXT_LAYER = 'text';\nexport const POINT_LAYER = 'point';\nexport const BAR_LAYER = 'bar';\nexport const TICK_LAYER = 'tick';\nexport const SIMPLE_LAYER = 'simple';\nexport const BASE_LAYER = 'base';\n","import { CLASSPREFIX, STACK } from '../../enums/constants';\n\nexport const defaultConfig = {\n    classPrefix: CLASSPREFIX,\n    defClassName: 'layer-area',\n    className: '',\n    interpolate: 'linear',\n    transform: {\n        type: STACK\n    },\n    interaction: {\n\n    },\n    nearestPointThreshold: 10,\n    encoding: {\n        color: {},\n        x: {},\n        y: {},\n        y0: {},\n        strokeOpacity: {\n            value: 1\n        }\n    },\n    transition: {\n        effect: 'cubic',\n        duration: 1000\n    },\n    connectNullData: false\n};\n","import { ERROR_MSG } from 'muze-utils';\n\n/**\n * This is an interface class which any new layer class has to extend.\n *\n * @example\n * class BarLayer extends BaseLayer {\n *   update (params) {\n *       // super.update(params);\n *       // Update the bar layer\n *   }\n * }\n * @class\n */\nexport default class SimpleLayer {\n\n    formalName () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    /**\n     * Sets or gets the dependencies.\n     * @param {Object} dependencies Dependencies needed by layer\n     * @return {BaseLayer} Instance of base layer.\n     */\n    dependencies () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    /**\n     * Returns the config of the layer\n     *\n     * @param {Object} config Configuration of layer\n     * @return {Object} configuration of layer\n     */\n    config () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    /**\n     * Acts as a getter or setter function\n     * When setter\n     * Returns the datamodel of the layer\n     * @param { DataModel } dataModel instance of DataModel\n     * @return { DataModel } DataModel instance of the layer\n     */\n    data () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    /**\n     * Returns a serialized schema of the layer\n     * @return {Object} Serialized schema\n     */\n    serialize () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    /**\n     * Returns the unique identifier of this layer\n     * @return {string} id of the layer\n     */\n    id () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n    /*\n     * This method resolves the x, y, x0 and y0 values from the transformed data.\n     * It also checks the type of transformed data for example, if it is a stacked data\n     * then it fetches the y and y0 values from the stacked data.\n     * @param {Array.<Array>} transformedData transformed data\n     * @param {Object} fieldMap field definitions\n     * @param {string} transformType type of transformed data - stack, group or identity.\n     * @return {Array.<Object>} Normalized data\n     * @private\n     */\n    normalizeTransformedData () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    /**\n     * Gets the transform method from transform factory based on type of transform. It then calls the\n     * transform method with the data and passes the configuration parameters of transform such as\n     * groupBy, value field, etc.\n     *\n     * @param {DataModel} dataModel Instance of dataModel\n     * @param {Object} config configuration for transforming data\n     * @return {Array.<Array>} Transformed data.\n     * @private\n     */\n    getTransformedData () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    /**\n     * Calculates the domain from the data.\n     * It checks the type of field and calculates the domain based on that. For example, if it\n     * is a quantitative or temporal field, then it calculates the min and max from the data or\n     * if it is a nominal field then it gets all the values from the data of that field.\n     * @param {Array} data DataArray\n     * @return {Array} Domain values array.\n     */\n    _calculateDomainFromData () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    /**\n     * Returns the domain for the axis.\n     *\n     * @param {string} encodingType type of encoding x, y, color, etc.\n     * @return {Object} Axis domains\n     */\n    getDomain () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    /**\n     * Abstract method for getting nearest point\n     * @return {BaseLayer} Instance of base layer\n     */\n    getNearestPoint () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    /**\n     * Abstract method for highlighting points\n     * @return {BaseLayer} Instance of base layer\n     */\n    highlightPoint () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    /**\n     * Abstract method for deselecting points\n     * @return {BaseLayer} Instance of base layer\n     */\n    dehighlightPoint () {\n        return this;\n    }\n\n    linkLayerStore () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    /**\n     * Sets the container element for the layer to be renderered.\n     * @param {SVGElement} mountPoint SVG element or group element.\n     */\n    mount () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    render () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n}\n","import { COORD_TYPES, mergeRecursive } from 'muze-utils';\nimport * as PROPS from '../enums/props';\n\nconst { CARTESIAN } = COORD_TYPES;\nexport const props = {\n    axes: {},\n    mount: {},\n    measurement: {},\n    metaInf: {},\n    valueParser: {\n        defaultValue: val => val\n    },\n    coord: {\n        defaultValue: CARTESIAN\n    },\n    [PROPS.CONFIG]: {\n        value: null,\n        sanitization: (context, config) => {\n            context._customConfig = config;\n            const constructor = context.constructor;\n            const newConf = mergeRecursive({}, constructor.defaultConfig());\n\n            return constructor.defaultPolicy(newConf, config);\n        }\n    }\n};\n","export const DATA = 'data';\nexport const CONFIG = 'config';\nexport const MEASUREMENT = 'measurement';\nexport const DOMAIN = 'domain';\nexport const MOUNT = 'mount';\n","/**\n * @module Axis\n * This file declares a class that is used to render an axis to add  meaning to\n * plots.\n */\nimport { Symbols } from 'muze-utils';\nimport * as AxisOrientation from '../enums/axis-orientation';\n\n/**\n * @module Axis\n * This file exports constants that are used to reference axis orientations\n * in a consistent manner.\n */\nexport const BOTTOM = 'bottom';\nexport const TOP = 'top';\nexport const LEFT = 'left';\nexport const RIGHT = 'right';\n\n/**\n  * This object is used to associate the axis orientation with the d3 class\n  * used to represent that axis.\n  */\nexport const axisOrientationMap = {\n    [AxisOrientation.LEFT]: Symbols.axisLeft,\n    [AxisOrientation.BOTTOM]: Symbols.axisBottom,\n    [AxisOrientation.RIGHT]: Symbols.axisRight,\n    [AxisOrientation.TOP]: Symbols.axisTop\n};\n","/**\n * @module axis\n * This file exports constants used to reference scale type\n * consistently throughout the project.\n */\nexport const LINEAR = 'linear';\nexport const BAND = 'band';\nexport const TIME = 'temporal';\nexport const COLOR = 'color';\nexport const ORDINAL = 'ordinal';\nexport const QUANTIZE = 'quantize';\nexport const QUANTILE = 'quantile';\nexport const LOG = 'log';\nexport const POW = 'pow';\nexport const IDENTITY = 'identity';\nexport const SEQUENTIAL = 'sequential';\nexport const THRESHOLD = 'threshold';\n","export const CLASSPREFIX = 'muze';\n\nexport const CONTINOUS = 'continous';\nexport const DISCRETE = 'discrete';\nexport const SEQUENTIAL = 'sequential';\nexport const ORDINAL = 'ordinal';\nexport const LINEAR = 'linear';\nexport const BAND = 'band';\nexport const THRESHOLD = 'threshold';\nexport const QUANTIZE = 'quantize';\nexport const QUANTILE = 'quantile';\n\nexport const COLOR = 'color';\nexport const SHAPE = 'shape';\nexport const SIZE = 'size';\n\nexport const DOMAIN = 'domain';\nexport const HIDDEN = 'hidden';\nexport const NUMBER = 'number';\nexport const BOTTOM = 'bottom';\nexport const TOP = 'top';\n\nexport const RGB = 'rgb';\nexport const HEX = 'hex';\nexport const HSLA = 'hsla';\nexport const HSL = 'hsl';\n\nexport const DEFAULT_ANGLE_DOMAIN = [1];\nexport const MIN_NO_OF_TICKS = 2;\nexport const DEFAULT_NO_OF_TICKS = 10;\n\n","import { scales, colorSchemes } from 'muze-utils';\n\nimport {\n    SEQUENTIAL,\n    ORDINAL,\n    LINEAR,\n    CONTINOUS,\n    THRESHOLD,\n    QUANTIZE\n} from './enums/constants';\n\nimport * as ScaleType from './enums/scale-type';\n\nconst {\n    scaleLinear,\n    scaleThreshold,\n    scaleLog,\n    scalePow,\n    scaleIdentity,\n    scaleOrdinal,\n    scaleSequential,\n    scaleQuantize,\n    scaleQuantile,\n    schemeCategory10,\n    schemeCategory20,\n    schemeCategory20b,\n    scaleBand,\n    scaleTime\n} = scales;\nexport const scaleMap = {\n    [ScaleType.LINEAR]: scaleLinear,\n    [ScaleType.BAND]: scaleBand,\n    [ScaleType.QUANTIZE]: scaleQuantize,\n    [ScaleType.QUANTILE]: scaleQuantile,\n    [ScaleType.THRESHOLD]: scaleThreshold,\n    [ScaleType.SEQUENTIAL]: scaleSequential,\n    [ScaleType.LOG]: scaleLog,\n    [ScaleType.POW]: scalePow,\n    [ScaleType.IDENTITY]: scaleIdentity,\n    [ScaleType.TIME]: scaleTime,\n    [ScaleType.COLOR]: scaleLinear,\n    [ScaleType.ORDINAL]: scaleOrdinal\n};\nexport const SCHEMES = {\n    SCHEME1: schemeCategory10,\n    SCHEME2: schemeCategory20,\n    SCHEME3: schemeCategory20b\n};\n\n/**\n * Accepts a scheme in a string format and returns the scale from d3-scale-chromatic\n *\n * @export\n * @param {string} scheme a string representing the kind of scheme for the color axis\n * @return {Object} The corresponding scale from a scheme type from d3 chromatic scale\n */\nexport function getScheme (scheme) {\n    if (scheme[0] === 'i') {\n        return scaleSequential(colorSchemes[scheme]);\n    }\n    return scaleOrdinal(colorSchemes[scheme]);\n}\n\n/**\n *\n *\n * @export\n * @param {*} scheme\n *\n */\nexport function getSchemeType (scheme) {\n    let schemeType = '';\n    if (scheme && typeof (scheme) === 'string') {\n        schemeType = scheme[0] === 'i' ? SEQUENTIAL : ORDINAL;\n    } else {\n        schemeType = ORDINAL;\n    }\n    return schemeType;\n}\n\n/**\n * This function is used to create a scale that is assigned to\n * an instance of axis.\n *\n * @export\n * @param {Object} params the input parameters to create a Scale object\n * @param {string} params.type the type of scale\n * @param {Array} params.range the range of scale\n * @return {Object} instance of scale\n */\nexport function createScale (params) {\n    if (!params.type || !scaleMap[params.type]) {\n        throw new Error(`${params.type} is not a valid scale type`);\n    }\n    if (!Array.isArray(params.range)) {\n        throw new Error('range parameter must be an array');\n    }\n    let scaleFactory = null;\n    const range = params.range;\n    // @todo: do it using scale decorator\n    if (params.type === LINEAR && params.interpolator) {\n        scaleFactory = scaleMap[params.interpolator];\n        if (params.interpolator === ScaleType.POW) {\n            return scaleFactory().range(range).exponent(params.exponent);\n        } else if (params.interpolator === ScaleType.LOG) {\n            return scaleFactory().range(range).base([params.base]);\n        }\n    } else {\n        scaleFactory = scaleMap[params.type];\n    }\n\n    if (params.type === QUANTIZE) {\n        scaleFactory().nice();\n    }\n    return scaleFactory().range(range);\n}\n\n/**\n * This method is used to update the range of a scale\n * so that the core module can remain agnostic of the d3\n * scale api.\n *\n * @export\n * @param {Scale} scale Instance of d3 Scale.\n * @param {Array} range new range of the scale.\n * @return {Scale} Updated scale.\n */\nexport function updateScaleRange (scale, range) {\n    return scale.range(range);\n}\n\n/**\n *\n *\n * @export\n * @param {*} domainType\n * @param {*} rangeType\n * @param {*} steps\n *\n */\nexport function getScaleType (domainType, rangeType, steps) {\n    if (rangeType === CONTINOUS) {\n        return LINEAR;\n    }\n    if (domainType === CONTINOUS) {\n        if (steps instanceof Array) {\n            return THRESHOLD;\n        }\n        return QUANTIZE;\n    }\n    return ORDINAL;\n}\n","import { getUniqueId } from 'muze-utils';\nimport { CLASSPREFIX } from '../enums/constants';\n\n/**\n *\n *\n */\nexport const defaultConfig = {\n    id: getUniqueId(),\n    adjustRange: false,\n    axisName: {\n        defClassName: 'axis-name'\n    },\n    axisNamePadding: 12,\n    base: 10,\n    classPrefix: CLASSPREFIX,\n    className: `${CLASSPREFIX}-axis`,\n    exponent: 1,\n    interpolator: 'linear',\n    fixedBaseline: true,\n    labels: {\n        rotation: null,\n        smartTicks: null\n    },\n    orientation: 'left',\n    numberFormat: val => val,\n    padding: 0.3,\n    nice: true,\n    numberOfTicks: null,\n    rotate: false,\n    show: true,\n    showAxisName: true,\n    showInnerTicks: true,\n    showOuterTicks: true,\n    style: {},\n    type: 'linear',\n    tickFormat: null,\n    tickValues: null,\n    xOffset: 0,\n    yOffset: 0\n};\n\n","/**\n * This file exports functionality that is used to render axis.\n */\nimport { selectElement, makeElement, angleToRadian } from 'muze-utils';\nimport * as AxisOrientation from './enums/axis-orientation';\nimport { LINEAR, HIDDEN, BOTTOM, TOP } from './enums/constants';\n\n/**\n *\n *\n * @param {*} instance\n * @param {*} container\n * @param {*} labelManager\n * @param {*} config\n */\nconst rotateAxis = (instance, tickText, labelManager) => {\n    let rotation;\n    const axis = instance.axis();\n    const config = instance.config();\n    const renderConfig = instance.renderConfig();\n    const smartTicks = instance.smartTicks();\n    const scale = axis.scale();\n    const labelFunc = scale.ticks || scale.quantile || scale.domain;\n    const ticks = labelFunc();\n    const {\n        orientation,\n        fixedBaseline,\n        type\n    } = config;\n    const {\n        labels\n    } = renderConfig;\n\n    rotation = labels.rotation;\n\n    const tickSize = instance.getTickSize();\n    tickText.each(function (d, index) {\n        let yShift;\n        let xShift;\n        let datum = smartTicks[index] ? smartTicks[index].text : d;\n\n        datum = datum.toString();\n\n        const tickLabelDim = labelManager.getOriSize(datum);\n\n        const width = tickLabelDim.width * 0.5;\n        const height = tickLabelDim.height * 0.5;\n\n        if (rotation < 0) {\n            rotation = 360 + rotation;\n        }\n\n        const quadrant = 4 - Math.floor(rotation / 90);\n        const rotationNormalizer = ((quadrant % 2 === 0) ? rotation : 180 * Math.ceil(rotation / 180) - rotation) % 180;\n\n        yShift = Math.sqrt(height ** 2 + width ** 2) * Math.sin(angleToRadian(rotationNormalizer));\n\n        if ((quadrant === 3 || quadrant === 2) && !(rotationNormalizer > 67.5 && rotationNormalizer <= 90)) {\n            yShift += height * 2;\n        }\n        xShift = width;\n\n        if (rotation === 90) {\n            xShift = height;\n        } else if (rotation === 270) {\n            xShift = -height;\n        } else {\n            xShift = 0;\n        }\n\n        if (orientation === AxisOrientation.TOP) {\n            xShift = (fixedBaseline && ticks[0] === d && type === LINEAR) ? xShift + xShift / 2 : xShift;\n            selectElement(this)\n                            .attr('transform', `translate(${-xShift + tickSize}\n                                ${-yShift - tickSize}) rotate(${rotation})`);\n        } else {\n            xShift = (fixedBaseline && ticks[0] === d && type === LINEAR) ? xShift - xShift / 2 : xShift;\n\n            selectElement(this)\n                            .attr('transform', `translate(${xShift - tickSize}\n                                ${yShift + tickSize}) rotate(${rotation})`);\n        }\n        selectElement(this).transition()\n                        .duration(1000).text(datum);\n    });\n    return tickText;\n};\n\n/**\n *\n *\n * @param {*} tickText\n * @param {*} axisInstance\n */\nconst changeTickOrientation = (selectContainer, axisInstance, tickSize) => {\n    const {\n        _smartTicks\n    } = axisInstance;\n    const config = axisInstance.config();\n    const renderConfig = axisInstance.renderConfig();\n    const labelManager = axisInstance.dependencies().labelManager;\n    const {\n        orientation,\n        classPrefix\n    } = config;\n    const {\n        labels\n    } = renderConfig;\n    const {\n        rotation,\n        smartTicks: isSmartTicks\n    } = labels;\n\n    const tickText = selectContainer.selectAll('.tick text');\n    tickText.selectAll('tspan').remove();\n\n    // rotate labels if not enough space is available\n    if (rotation && (orientation === TOP || orientation === BOTTOM)) {\n        rotateAxis(axisInstance, tickText, labelManager);\n    } else if (!rotation && !isSmartTicks) {\n        tickText.attr('transform', '');\n    } else {\n        tickText.text('');\n        if (orientation === TOP || orientation === BOTTOM) {\n            tickText.attr('y', 0)\n                            .attr('x', 0)\n                            .attr('transform', '')\n                            .text('');\n            const tspan = makeElement(tickText, 'tspan', (d, i) => {\n                if (_smartTicks[i]) {\n                    return _smartTicks[i].lines;\n                } return [];\n            }, `${classPrefix}-smart-text`);\n\n            tspan.attr('dy', '0')\n                            .style('opacity', '0')\n\n                            .transition()\n                            .duration(1000)\n                            .on('end', axisInstance.registerAnimationDoneHook())\n                            .attr('dy', (d, i) => {\n                                if (orientation === BOTTOM || i !== 0) {\n                                    return _smartTicks[0].oriTextHeight;\n                                }\n                                return -_smartTicks[0].oriTextHeight * (_smartTicks[0].lines.length - 1) - tickSize;\n                            })\n                            .style('opacity', 1)\n                            .text(e => e)\n                            .attr('x', 0);\n        } else {\n            const tspan = makeElement(tickText, 'tspan', (d, i) => _smartTicks[i].lines, `${classPrefix}-smart-text`);\n            tspan.text(e => e);\n        }\n    }\n\n    return tickText;\n};\n\nconst setFixedBaseline = (axisInstance) => {\n    const {\n        fixedBaseline\n    } = axisInstance.config();\n    const {\n        showInnerTicks\n    } = axisInstance.renderConfig();\n    const domain = axisInstance.domain();\n    if (fixedBaseline && domain.length && showInnerTicks) {\n        axisInstance.setFixedBaseline();\n    }\n};\n\n/**\n *\n *\n * @param {*} textNode\n * @param {*} orientation\n * @param {*} measures\n */\nconst setAxisNamePos = (textNode, orientation, measures) => {\n    const {\n        axisNameHeight,\n        availableSpace\n    } = measures;\n\n    switch (orientation) {\n    case AxisOrientation.LEFT:\n        textNode.attr('transform',\n            `translate(${-(availableSpace.width - axisNameHeight)},${availableSpace.height / 2})rotate(-90)`);\n        break;\n    case AxisOrientation.RIGHT:\n        textNode.attr('transform',\n             `translate(${(availableSpace.width - axisNameHeight)},${availableSpace.height / 2})rotate(90)`);\n        break;\n    case AxisOrientation.TOP:\n        textNode.attr('transform',\n             `translate(${availableSpace.width / 2},${-availableSpace.height + axisNameHeight})`);\n        break;\n    case AxisOrientation.BOTTOM:\n        textNode.attr('transform',\n             `translate(${availableSpace.width / 2},${availableSpace.height - axisNameHeight / 2})`);\n        break;\n    default:\n    }\n    return textNode;\n};\n\n/**\n * This method is used to render the axis inside an\n * svg container.\n *\n * @export\n * @param {Object} axisInstance the nput object required to render axis\n * @param {string} axisInstance.orientation the orientation of axis\n * @param {Object} axisInstance.scale instance of d3 scale\n * @param {SVGElement} axisInstance.container the container in which to render\n */\nexport function renderAxis (axisInstance) {\n    const config = axisInstance.config();\n    const renderConfig = axisInstance.renderConfig();\n    const labelManager = axisInstance.dependencies().labelManager;\n    const mount = axisInstance.mount();\n    const range = axisInstance.range();\n    const axis = axisInstance.axis();\n    const scale = axisInstance.scale();\n    const {\n        _tickLabelStyle: tickLabelStyle,\n        _tickFormatter: axisTickFormatter\n     } = axisInstance;\n    const {\n        orientation,\n        axisNamePadding,\n        className,\n        id,\n        classPrefix\n     } = config;\n    const {\n        show,\n        xOffset,\n        yOffset,\n        showAxisName,\n        labels,\n        smartAxisName\n    } = renderConfig;\n\n    if (!show) {\n        return;\n    }\n\n    const tickSize = axisInstance.getTickSize();\n\n    const selectContainer = makeElement(selectElement(mount), 'g', [axisInstance], `${className}`, {},\n        key => key.config().id);\n\n    // Set style for tick labels\n    labelManager.setStyle(tickLabelStyle);\n\n    const labelFunc = scale.ticks || scale.quantile || scale.domain;\n\n    const ticks = axis.tickValues() || labelFunc();\n\n    axis.tickFormat(axisTickFormatter(ticks));\n\n    // Get range(length of range)\n    const availableSpace = Math.abs(range[0] - range[1]);\n\n    // Get width and height taken by axis labels\n    const labelProps = axisInstance.axisComponentDimensions().largestTickDimensions;\n\n    // Draw axis ticks\n    selectContainer.attr('transform', `translate(${xOffset},${yOffset})`);\n    setFixedBaseline(axisInstance);\n    if (labels.smartTicks === false || tickSize === 0) {\n        selectContainer.transition()\n                        .duration(1000)\n                        .on('end', axisInstance.registerAnimationDoneHook())\n                        .call(axis);\n    } else {\n        selectContainer.call(axis);\n    }\n    selectContainer.selectAll('.tick').classed(`${classPrefix}-ticks`, true);\n    selectContainer.selectAll('.tick line').classed(`${classPrefix}-tick-lines`, true);\n\n    // Set classes for ticks\n    const tickText = selectContainer.selectAll('.tick text');\n    tickText.classed(`${classPrefix}-ticks`, true)\n                    .classed(`${classPrefix}-ticks-${id}`, true);\n\n    changeTickOrientation(selectContainer, axisInstance, tickSize);\n\n    // Create axis name\n    const textNode = makeElement(selectContainer, 'text', [smartAxisName], `${classPrefix}-axis-name`)\n                    .attr('text-anchor', 'middle')\n                    .classed(`${classPrefix}-axis-name-${id}`, true)\n                    .text(d => d.text);\n\n    // Hide axis name if show is off\n    textNode.classed(HIDDEN, !showAxisName);\n\n    // render labels based on orientation of axis\n    const labelOffset = availableSpace / 2;\n\n    const measures = {\n        labelProps,\n        tickSize,\n        axisNamePadding,\n        axisNameHeight: smartAxisName.height,\n        yOffset,\n        xOffset,\n        labelOffset,\n        availableSpace: axisInstance.availableSpace()\n    };\n    // Set position for axis name\n    setAxisNamePos(textNode, orientation, measures);\n}\n","import {\n    timeMillisecond,\n    timeSecond,\n    timeMinute,\n    timeHour,\n    timeDay,\n    timeWeek,\n    timeMonth,\n    timeYear\n} from 'muze-utils';\n\nconst durationSecond = 1000;\nconst durationMinute = durationSecond * 60;\nconst durationHour = durationMinute * 60;\nconst durationDay = durationHour * 24;\nconst durationWeek = durationDay * 7;\nconst durationMonth = durationDay * 30;\nconst durationYear = durationDay * 365;\n\n// Longest Word for each level based on which tick skipping is decided\nconst longestWord = {\n    month: 'September',\n    quarter: 'October',\n    halfYearly: 'July',\n    year: 9999,\n    day: 'September',\n    hour: '24 AM',\n    mintues: '60:60',\n    seconds: ':60',\n    week: 'Wed 31'\n};\n\n// These are the various levels of ticks that can be shown by Muze.\n// Each level is described as how frequently the ticks appear\n// The format is as follows:\n// [Frequency, Milliseconds, Name of Seconds, Tick Generator, Level Type]\nconst tickIntervals = [\n    [1, 1, 'milliseconds', timeMillisecond.every(1), 'seconds'],\n    [1, durationSecond, 'seconds', timeSecond.every(1), 'seconds'],\n    [5, 5 * durationSecond, 'five seconds', timeSecond.every(5), 'seconds'],\n    [10, 10 * durationSecond, 'ten seconds', timeSecond.every(10), 'seconds'],\n    [15, 15 * durationSecond, 'fifteen seconds', timeSecond.every(15), 'seconds'],\n    [30, 30 * durationSecond, 'thirty seconds', timeSecond.every(30), 'seconds'],\n    [1, durationMinute, 'minute', timeMinute.every(1), 'minutes'],\n    [5, 5 * durationMinute, 'five minutes', timeMinute.every(5), 'minutes'],\n    [10, 10 * durationMinute, 'ten minutes', timeMinute.every(10), 'minutes'],\n    [15, 15 * durationMinute, 'fifteen minutes', timeMinute.every(15), 'minutes'],\n    [30, 30 * durationMinute, 'thirty minutes', timeMinute.every(30), 'minutes'],\n    [1, durationHour, 'hour', timeHour.every(1), 'hour'],\n    [3, 3 * durationHour, 'three hours', timeHour.every(3), 'hour'],\n    [6, 6 * durationHour, 'six hours', timeHour.every(6), 'hour'],\n    [12, 12 * durationHour, 'twelve hours', timeHour.every(12), 'hour'],\n    [1, durationDay, 'daily', timeDay.every(1), 'day'],\n    [1, durationWeek, 'weekly', timeWeek.every(1), 'week'],\n    [1, durationMonth, 'monthly', timeMonth.every(1), 'week'],\n    [3, 3 * durationMonth, 'quaterly', timeMonth.every(3), 'quarter'],\n    [6, 6 * durationMonth, 'half yearly', timeMonth.every(6), 'halfYearly'],\n    [1, durationYear, 'yearly', timeYear.every(1), 'year'],\n    [2, 2 * durationYear, '2 year', timeYear.every(2), 'year'],\n    [3, 3 * durationYear, '3 year', timeYear.every(3), 'year'],\n    [5, 5 * durationYear, '5 year', timeYear.every(5), 'year'],\n    [10, 10 * durationYear, 'decade', timeYear.every(10), 'year'],\n    [100, 100 * durationYear, 'century', timeYear.every(100), 'year'],\n    [1000, 1000 * durationYear, 'millenium', timeYear.every(1000), 'year']\n];\n/**\n * Get the actual tick interval based on the available width, number of ticks\n * and the distance between two ticks\n *\n * @param {Object} context Axis Context\n * @param {number} noOfTicks Number of Ticks based on which interval is calculated\n * @return {number} The width for the tick interval\n */\nconst getActualTickInterval = (context, noOfTicks) => {\n    const minTickDistance = context._minTickDistance;\n    const minWidthBetweenTicks = minTickDistance.width;\n\n    const { width } = context.availableSpace();\n    const actualTickInterval = Math.floor(((width - (noOfTicks - 1) * (minWidthBetweenTicks)) / noOfTicks));\n\n    return actualTickInterval;\n};\n\n/**\n * Get the tick interval based on the current level of ticks. Levels are decided on\n * the number of ticks that are possible to show\n *\n * @param {Object} context Axis Context\n * @param {string} type Type of level (yearly, monthly, etc)\n * @return {number} The width for the tick interval\n */\nconst getTickIntervalBasedOnCurrentLevel = (context, type) => {\n    const labelManager = context._dependencies.labelManager;\n    const longestWordType = longestWord[type];\n    const measure = labelManager.getOriSize(longestWordType);\n\n    return measure.width;\n};\n\nconst getTickIntervalFnBasedOnNumberOfTicks = (interval, count, context) => {\n    let possibleTickLevelIndex = tickIntervals.length - 1;\n    let maxPossibleTicks = 1;\n    let tickIntervalLevelInfo = null;\n\n    // Decide possible tick level based on min tick width (with ellipses)\n    for (let i = tickIntervals.length - 1; i >= 0; i--) {\n        const tickIntervalInfo = tickIntervals[i];\n        const numOfPossibleTicks = Math.floor(interval / tickIntervalInfo[1]);\n        if (numOfPossibleTicks <= count) {\n            possibleTickLevelIndex = i;\n            maxPossibleTicks = numOfPossibleTicks;\n        }\n    }\n\n    tickIntervalLevelInfo = tickIntervals[possibleTickLevelIndex];\n\n    // Get actual tick interval based on the level of ticks generated\n    const actualTickInterval = getActualTickInterval(context, maxPossibleTicks);\n\n    // Maximum Possible tick Interval for a particular level based on a pre decided set of values\n    const maxTickInterval = getTickIntervalBasedOnCurrentLevel(context, tickIntervalLevelInfo[4]);\n\n    // Display the next level involving tick skipping if current level does not meet the requirement\n    // for displaying max tick\n    if (actualTickInterval < maxTickInterval && possibleTickLevelIndex < tickIntervals.length - 1) {\n        tickIntervalLevelInfo = tickIntervals[possibleTickLevelIndex + 1];\n    }\n    return tickIntervalLevelInfo[3];\n};\n\nexport const getSkippedTicks = (context, maxPossibleTicks) => {\n    let actualNumberOfTicks = maxPossibleTicks;\n    const domain = context.domain();\n    const minDiff = context._minDiff;\n    // Get the interval in ms from the domain\n    const millisecondInterval = domain[1] - domain[0];\n    // Get number of ticks based on the minimum difference in the data\n    const numOfTicksAccordingToMinDiff = Math.floor(millisecondInterval / minDiff);\n\n    // Show ticks according to min diff if possible\n    if (maxPossibleTicks >= numOfTicksAccordingToMinDiff) {\n        actualNumberOfTicks = numOfTicksAccordingToMinDiff;\n    }\n\n    return getTickIntervalFnBasedOnNumberOfTicks(millisecondInterval, actualNumberOfTicks, context);\n};\n","import { BOTTOM, TOP, LEFT, RIGHT } from '../enums/axis-orientation';\nimport { getSkippedTicks } from './skip-ticks';\nimport { TIME, LINEAR, BAND } from '../enums/scale-type';\n\nexport const applyTickSkipping = (context) => {\n    const minTickDistance = context._minTickDistance;\n    const minTickSpace = context._minTickSpace;\n    const minWidthBetweenTicks = minTickDistance.width;\n    const minTickWidth = minTickSpace.width;\n\n    const { width } = context.availableSpace();\n\n    const maxTicks = Math.floor((width + minWidthBetweenTicks) / (minTickWidth + minWidthBetweenTicks));\n\n    const ticks = context.scale().ticks(getSkippedTicks(context, maxTicks));\n\n    context.renderConfig({\n        tickValues: ticks\n    });\n};\n\nconst adjustHorizontalRange = (range, diff) => {\n    range[0] += diff;\n    range[1] -= diff;\n    return range;\n};\n\nconst adjustVerticalRange = (range, diff) => {\n    range[0] -= diff;\n    range[1] += diff;\n    return range;\n};\n\nconst rangeAdjustmentMap = {\n    [TOP]: adjustHorizontalRange,\n    [BOTTOM]: adjustHorizontalRange,\n    [LEFT]: adjustVerticalRange,\n    [RIGHT]: adjustVerticalRange\n};\n\nexport const setAxisRange = (context, type, rangeBounds, offset) => {\n    context.range(rangeBounds);\n    offset && context.renderConfig({ [`${type}Offset`]: offset });\n};\n\nconst getAxisOffset = (timeDiff, range, domain) => {\n    const avWidth = Math.abs(range[1] - range[0]);\n    const pvr = avWidth / (domain[1] - domain[0]);\n    const width = (pvr * timeDiff);\n    const bars = avWidth / width;\n    const barWidth = avWidth / (bars + 1);\n    const diff = avWidth - barWidth * bars;\n\n    return diff / 2;\n};\n\nexport const getAdjustedRange = (minDiff, range, domain, config) => {\n    const {\n        orientation,\n        adjustRange\n    } = config;\n    const diff = getAxisOffset(minDiff, range, domain);\n\n    if (adjustRange) {\n        return rangeAdjustmentMap[orientation](range, diff);\n    }\n    return range;\n};\n\nexport const spaceSetter = (context, spaceConfig) => {\n    let tickInterval;\n    let heightForTicks;\n    const config = context.config();\n    const {\n        width: availWidth,\n        height: availHeight,\n        padding\n    } = context.availableSpace();\n    const {\n        top,\n        left,\n        bottom,\n        right\n    } = padding;\n    const {\n        isOffset\n    } = spaceConfig;\n    const {\n        showAxisName,\n        labels\n    } = context.renderConfig();\n    const {\n        rotation\n    } = labels;\n    const {\n        fixedBaseline,\n        axisNamePadding,\n        tickValues\n    } = config;\n    const {\n        tickDimensions,\n        allTickDimensions,\n        axisNameDimensions,\n        tickSize\n    } = context.getAxisDimensions();\n    const {\n        height: tickDimHeight,\n        width: tickDimWidth\n    } = tickDimensions;\n\n    const namePadding = showAxisName ? axisNamePadding : 0;\n    const labelConfig = { smartTicks: true, rotation: labels.rotation };\n    const minTickDistance = context._minTickDistance;\n    const minTickSpace = context._minTickSpace;\n    const minDiff = context._minDiff;\n    const domain = context.domain();\n    const axisNameHeight = axisNameDimensions.height;\n    const minWidthBetweenTicks = minTickDistance.width;\n    const minTickWidth = Math.min(minTickSpace.width, tickDimWidth);\n    const minTickHeight = Math.min(minTickSpace.height, tickDimHeight);\n\n    return {\n        [TIME]: {\n            x: () => {\n                !tickValues && context.applyTickSkipping();\n                const noOfTicks = context.getTickValues().length;\n\n                // Get the Tick Interval\n                tickInterval = ((availWidth - (noOfTicks - 1) * (minWidthBetweenTicks)) / noOfTicks);\n\n                // Get height for ticks\n                heightForTicks = availHeight - axisNameHeight - tickSize - namePadding;\n\n                if (tickInterval < minTickWidth && rotation !== 0) {\n                    // set smart ticks and rotation config\n                    labelConfig.rotation = rotation;\n                    // Remove ticks if not enough height\n                    if (tickInterval < minTickHeight) {\n                        heightForTicks = availHeight;\n                        tickInterval = minTickHeight;\n                        context.renderConfig({ showInnerTicks: false, showOuterTicks: false });\n                    }\n                }\n                if (availHeight < axisNameHeight) {\n                    context.renderConfig({ show: false });\n                }\n\n                const tickShifter = Math.min(tickInterval, tickDimWidth);\n                // set range for axis\n                setAxisRange(context, 'y', getAdjustedRange(minDiff, [tickShifter / 2,\n                    availWidth - left - right - tickShifter / 2], domain, config),\n                        isOffset ? availHeight : null);\n\n                context.maxTickSpaces({\n                    width: tickInterval,\n                    height: heightForTicks,\n                    noWrap: rotation !== null\n                });\n\n                return labelConfig;\n            },\n            y: () => {\n                let widthForTicks = availWidth;\n                const tickShifter = tickDimHeight / 2;\n\n                setAxisRange(context, 'x', getAdjustedRange(minDiff,\n                    [availHeight - top - bottom - tickShifter, tickShifter], domain, config),\n                        isOffset ? availWidth : null);\n\n                if ((availWidth - axisNameHeight - namePadding) <= minWidthBetweenTicks) {\n                    widthForTicks = 0;\n                    context.renderConfig({ showInnerTicks: false, showOuterTicks: false });\n                }\n\n                context.maxTickSpaces({\n                    width: widthForTicks,\n                    height: availHeight,\n                    noWrap: true\n                });\n                if (availWidth < axisNameHeight) {\n                    context.renderConfig({ show: false });\n                }\n                return labelConfig;\n            }\n        },\n        [BAND]: {\n            x: () => {\n                setAxisRange(context, 'y', [0, availWidth - left - right], isOffset ? availHeight : null);\n                const range = context.range();\n\n                // Get Tick Interval\n                tickInterval = ((range[1] - range[0]) / (tickValues || domain).length) - minWidthBetweenTicks;\n\n                // Get height available for ticks\n                heightForTicks = availHeight - axisNameHeight - tickSize - namePadding;\n\n                if (tickInterval < minTickWidth && rotation !== 0) {\n                    // set smart ticks and rotation config\n                    labelConfig.rotation = rotation === null ? -90 : rotation;\n                    labelConfig.smartTicks = false;\n\n                    tickInterval = Math.max(heightForTicks, minTickWidth);\n\n                    if (heightForTicks < minTickWidth) {\n                        context.renderConfig({ showAxisName: false });\n                    }\n                } else if (tickValues) {\n                    const interval = (availWidth / domain.length) - minWidthBetweenTicks;\n                    if (interval < minTickWidth) {\n                        context.range([minTickHeight / 2, availWidth - minTickHeight / 2]);\n                    }\n                }\n                if (availHeight < axisNameHeight) {\n                    context.renderConfig({ show: false });\n                }\n\n                context.maxTickSpaces({\n                    width: tickInterval,\n                    height: heightForTicks,\n                    noWrap: rotation !== null\n                });\n                return labelConfig;\n            },\n            y: () => {\n                setAxisRange(context, 'x', [availHeight - bottom, top], isOffset ? availWidth : null);\n\n                let widthForTicks = availWidth - axisNameHeight - tickSize - namePadding;\n                if (widthForTicks <= minWidthBetweenTicks) {\n                    widthForTicks = 0;\n                    context.renderConfig({ showInnerTicks: false, showOuterTicks: false });\n                }\n\n                context.maxTickSpaces({\n                    width: widthForTicks,\n                    height: availHeight,\n                    noWrap: true\n                });\n                if (availWidth < axisNameHeight) {\n                    context.renderConfig({ show: false });\n                }\n                return labelConfig;\n            }\n        },\n        [LINEAR]: {\n            x: () => {\n                labelConfig.smartTicks = false;\n                const tickShifter = tickDimWidth / 2;\n\n                const baseline = fixedBaseline ? 0 : tickShifter;\n\n                setAxisRange(context, 'y', [baseline + left, availWidth - right - tickShifter],\n                    isOffset ? availHeight : null);\n\n                const range = context.range();\n\n                // Get Tick widths and available space\n                const totalTickWidth = allTickDimensions.length * (tickDimWidth + minWidthBetweenTicks);\n                const availableWidth = range[1] - range[0];\n\n                 // Rotate labels if not enough width\n                if (availableWidth < totalTickWidth && labels.rotation !== null) {\n                    if (availHeight - tickDimWidth - namePadding - tickSize > axisNameHeight) {\n                        labelConfig.rotation = null;\n                        context.renderConfig({\n                            showInnerTicks: true,\n                            showAxisName: true\n                        });\n                    } else {\n                        labelConfig.rotation = -90;\n                        context.renderConfig({\n                            showInnerTicks: true,\n                            showAxisName: false\n\n                        });\n                    }\n                }\n\n                if (availHeight < axisNameHeight) {\n                    context.renderConfig({ show: false });\n                }\n                return labelConfig;\n            },\n            y: () => {\n                labelConfig.smartTicks = false;\n                const tickShifter = tickDimensions.height / 2;\n                const baseline = fixedBaseline ? 1 : tickShifter;\n\n                setAxisRange(context, 'x', [availHeight - bottom - baseline, tickShifter + top],\n                    isOffset ? availWidth : null);\n\n                // Remove display of ticks if no space is left\n                if (availWidth < tickDimWidth + axisNameHeight + namePadding) {\n                    context.renderConfig({ showInnerTicks: false });\n                    if (availWidth < axisNameHeight) {\n                        context.renderConfig({ show: false });\n                    }\n                }\n                return labelConfig;\n            }\n        }\n    };\n};\n","import { defaultValue } from 'muze-utils';\nimport { TOP, LEFT, BOTTOM } from '../enums/axis-orientation';\nimport { MIN_NO_OF_TICKS, DEFAULT_NO_OF_TICKS } from '../enums/constants';\nimport { setAxisRange, getAdjustedRange } from './space-setter';\n\nexport const getRotatedSpaces = (rotation = 0, width, height) => {\n    let rotatedHeight = height;\n    let rotatedWidth = width;\n    if (rotation) {\n        const angle = ((rotation || 0) * Math.PI) / 180;\n        rotatedWidth = Math.abs(height * Math.sin(angle)) + Math.abs(width * Math.cos(angle));\n        rotatedHeight = Math.abs(width * Math.sin(angle)) + Math.abs(height * Math.cos(angle));\n    }\n    return { width: rotatedWidth, height: rotatedHeight };\n};\n\nexport const setOffset = (context) => {\n    let x = 0;\n    let y = 0;\n    const logicalSpace = context.logicalSpace();\n    const config = context.config();\n    const {\n        orientation,\n        xOffset,\n        yOffset\n    } = config;\n    if (orientation === LEFT) {\n        x = xOffset === undefined ? logicalSpace.width : xOffset;\n    }\n    if (orientation === TOP) {\n        y = yOffset === undefined ? logicalSpace.height : yOffset;\n    }\n    context.renderConfig({ xOffset: x, yOffset: y });\n};\n\nexport const getNumberOfTicks = (availableSpace, labelDim, axis, axisInstance) => {\n    let numberOfValues = 0;\n    let tickValues = [];\n    let { numberOfTicks } = axisInstance.config();\n    const ticks = axis.scale().ticks();\n    const tickLength = ticks.length;\n    const minTickDistance = axisInstance._minTickDistance.width;\n\n    numberOfValues = tickLength;\n\n    if (tickLength * (labelDim + minTickDistance) > availableSpace) {\n        numberOfValues = Math.floor(availableSpace / (labelDim + minTickDistance));\n    }\n\n    numberOfTicks = numberOfTicks || numberOfValues;\n    numberOfValues = Math.min(numberOfTicks, Math.max(MIN_NO_OF_TICKS, numberOfValues));\n\n    tickValues = axis.scale().ticks(numberOfValues);\n\n    if (tickValues.length > numberOfValues) {\n        tickValues = tickValues.filter((e, i) => i % 2 === 0);\n    }\n\n    if (numberOfValues === MIN_NO_OF_TICKS) {\n        tickValues = axis.scale().ticks(DEFAULT_NO_OF_TICKS);\n        tickValues = [tickValues[0], tickValues[tickValues.length - 1]];\n    }\n    return tickValues;\n};\n\nexport const getAxisComponentDimensions = (context) => {\n    let largestTick = '';\n    let largestTickDimensions = { width: 0, height: 0 };\n    let smartTick = {};\n    let axisTicks;\n    const allTickDimensions = [];\n    const scale = context.scale();\n    const { tickValues, showAxisName } = context.renderConfig();\n    const { name } = context.config();\n    const { labelManager } = context.dependencies();\n    const labelFunc = scale.ticks || scale.quantile || scale.domain;\n\n    // set the style on the shared label manager instance\n    labelManager.setStyle(context._tickLabelStyle);\n\n    // get the values along the domain\n    axisTicks = tickValues || labelFunc();\n\n    // Get the tick labels\n    axisTicks = axisTicks.map((originalLabel, i) => {\n        const label = context.getFormattedText(originalLabel, i, axisTicks);\n\n    // convert to string for quant values\n        const tickDimensions = labelManager.getOriSize(label);\n\n    // Get spaces for all labels\n        allTickDimensions.push(tickDimensions);\n\n    // Getting largest label\n        if (tickDimensions.width > largestTickDimensions.width) {\n            largestTick = label;\n            smartTick = context.smartTicks() ? context.smartTicks()[i] : {};\n\n            largestTickDimensions = tickDimensions;\n            smartTick = smartTick || tickDimensions;\n        }\n        return label;\n    });\n\n    labelManager.setStyle(context._axisNameStyle);\n    const axisNameDimensions = showAxisName ? labelManager.getOriSize(name) : { width: 0, height: 0 };\n\n    return {\n        axisNameDimensions,\n        largestTick,\n        largestTickDimensions,\n        allTickDimensions,\n        axisTicks,\n        smartTick,\n        tickSize: context.getTickSize()\n    };\n};\n\nexport const computeAxisDimensions = (context) => {\n    let tickDimensions = {};\n    const { labels } = context.renderConfig();\n    const { smartTicks, rotation } = labels;\n    const {\n        largestTickDimensions,\n        axisTicks,\n        smartTick,\n        axisNameDimensions,\n        allTickDimensions,\n        tickSize\n    } = getAxisComponentDimensions(context);\n    const { height: labelHeight, width: labelWidth } = largestTickDimensions;\n\n    // get the domain of axis\n    const domain = context.domain();\n    // const angle = ((rotation || 0) * Math.PI) / 180;\n\n    if (domain.length === 0) {\n        return null;\n    }\n\n    if (smartTicks) {\n        tickDimensions = smartTick;\n    } else {\n        tickDimensions = { width: labelWidth, height: labelHeight };\n    }\n    tickDimensions = getRotatedSpaces(rotation, tickDimensions.width, tickDimensions.height);\n\n    if (tickSize === 0) {\n        tickDimensions = { width: 0, height: 0 };\n    }\n    return {\n        allTickDimensions,\n        tickSize,\n        tickDimensions,\n        axisNameDimensions,\n        largestTickDimensions,\n        axisTicks\n    };\n};\n\n/**\n *\n *\n * @param {*} axisDimensions\n * @param {*} config\n * @param {*} range\n *\n */\nexport const getHorizontalAxisSpace = (context, axisDimensions, range) => {\n    let width;\n    let height;\n    const domain = context.domain();\n    const minTickDistance = context._minTickDistance.width;\n    const { tickSize, tickDimensions, axisNameDimensions } = axisDimensions;\n    const { axisNamePadding, tickValues } = context.config();\n    const { showAxisName } = context.renderConfig();\n    const { height: axisDimHeight } = axisNameDimensions;\n    const { height: tickDimHeight, width: tickDimWidth } = tickDimensions;\n\n    width = range && range.length ? range[1] - range[0] : ((tickDimWidth + minTickDistance) * 3);\n\n    height = 0;\n    if (tickValues) {\n        const minTickDiff = context.getMinTickDifference();\n        const [min, max] = [\n            Math.min(...tickValues, ...domain),\n            Math.max(...tickValues, ...domain)\n        ];\n\n        width = ((max - min) / Math.abs(minTickDiff)) * (tickDimWidth + context._minTickDistance.width);\n    }\n    if (!range || !range.length) {\n        height = Math.max(tickDimWidth, tickDimHeight);\n    } else {\n        height = tickDimHeight;\n    }\n\n    height += (showAxisName ? axisDimHeight + axisNamePadding : 0) + tickSize;\n\n    return {\n        width,\n        height\n    };\n};\n\n/**\n *\n *\n * @param {*} axisDimensions\n * @param {*} config\n * @param {*} range\n *\n */\nexport const getVerticalAxisSpace = (context, axisDimensions) => {\n    let height;\n    let width;\n    const domain = context.domain();\n    const { tickSize, tickDimensions, axisNameDimensions } = axisDimensions;\n    const { axisNamePadding, tickValues } = context.config();\n    const { showAxisName } = context.renderConfig();\n    const { height: axisDimHeight } = axisNameDimensions;\n    const { height: tickDimHeight, width: tickDimWidth } = tickDimensions;\n\n    height = 0;\n    width = tickDimWidth;\n    if (tickValues) {\n        const minTickDiff = context.getMinTickDifference();\n        const [min, max] = [\n            Math.min(...tickValues, ...domain),\n            Math.max(...tickValues, ...domain)\n        ];\n\n        height = ((max - min) / Math.abs(minTickDiff)) * tickDimHeight;\n    }\n    width += (showAxisName ? axisDimHeight : 0) + tickSize + axisNamePadding;\n\n    return {\n        height,\n        width\n    };\n};\n\n/**\n * Calculates the logical space of the axis\n * @return {Object} Width and height occupied by the axis.\n */\nexport const calculateBandSpace = (context) => {\n    const range = context.range();\n    const axisDimensions = context.getAxisDimensions();\n\n    const { orientation } = context.config();\n    const { show } = context.renderConfig();\n    const { largestTickDimensions, axisTicks, allTickDimensions } = axisDimensions;\n    const { height: largestDimHeight } = largestTickDimensions;\n    const minTickWidth = context._minTickDistance.width;\n    if (orientation === TOP || orientation === BOTTOM) {\n        let {\n            width,\n            height\n        } = getHorizontalAxisSpace(context, axisDimensions, range);\n\n        if (!range || !range.length) {\n            width = allTickDimensions.reduce((t, n) =>\n                t + Math.min(n.width, n.height) + minTickWidth, 0);\n        }\n\n        if (show === false) {\n            height = 0;\n            width = 0;\n        }\n        return {\n            width,\n            height\n        };\n    }\n\n    let {\n        width,\n        height\n    } = getVerticalAxisSpace(context, axisDimensions, range);\n\n    if (!height || height === 0) {\n        height = axisTicks.length * (largestDimHeight + context._minTickDistance.height);\n    }\n    if (show === false) {\n        width = 0;\n    }\n    return {\n        width,\n        height\n    };\n};\n\n/**\n * Calculates the logical space of the axis\n * @return {Object} Width and height occupied by the axis.\n */\nexport const calculateContinousSpace = (context) => {\n    const range = context.range();\n    const axisDimensions = context.getAxisDimensions();\n    const { orientation } = context.config();\n    const { show, showAxisName } = context.renderConfig();\n    const { axisNameDimensions } = axisDimensions;\n\n    if (show === false) {\n        return {\n            width: 0,\n            height: 0\n        };\n    }\n\n    const { width: axisNameWidth } = axisNameDimensions;\n\n    if (orientation === TOP || orientation === BOTTOM) {\n        const {\n            width,\n            height\n        } = getHorizontalAxisSpace(context, axisDimensions, range);\n        const axisWidth = Math.max(width, axisNameWidth);\n\n        return {\n            width: axisWidth,\n            height\n        };\n    }\n    const {\n        width,\n        height\n    } = getVerticalAxisSpace(context, axisDimensions, range);\n\n    const effHeight = Math.max(height, showAxisName ? axisNameWidth : 0);\n\n    return {\n        width,\n        height: effHeight\n    };\n};\n\n/**\n * Overwrites domain with user defined domain (if present)\n * @param {Object} context reference to current axes\n * @param {Array} domain default domain\n *\n * @return {Array} domain\n */\nexport const getValidDomain = (context, domain) => {\n    const { domain: userDom } = context.config();\n\n    if (userDom) {\n        domain = userDom;\n    }\n\n    return defaultValue(domain, []);\n};\n\nexport const setContinousAxisDomain = (context, domain) => {\n    const { nice } = context.config();\n    const scale = context.scale.bind(context);\n\n    scale().domain(domain);\n    nice && scale().nice();\n    context._domain = scale().domain();\n};\n\n/**\n * Checks if any of the properties have changed between two objects\n * @param {Object} obj first object\n * @param {Object} obj1 second object\n * @param {Array} properties properties to be compared between two objects\n *\n * @return {Boolean} boolean value\n */\nexport const hasAxesConfigChanged = (obj = {}, obj1 = {}, properties) => {\n    if (!Object.keys(obj).length || !Object.keys(obj1).length) {\n        return false;\n    }\n    return properties.some(key => obj[key] !== obj1[key]);\n};\n\nexport const resetTickInterval = (context, domain) => {\n    const {\n        orientation,\n        isOffset\n    } = context.config();\n\n    const minDiff = context._minDiff;\n     // Set available space on interaction\n    if (context.range().length && (orientation === TOP || orientation === BOTTOM)) {\n        context.applyTickSkipping();\n        const {\n            largestTickDimensions\n        } = context.getAxisDimensions();\n\n        const noOfTicks = context.getTickValues().length;\n\n        const { width, height, padding } = context.availableSpace();\n        const {\n            left,\n            right\n        } = padding;\n        // Get the Tick Interval\n        const tickInterval = Math.min(largestTickDimensions.width,\n            ((width - (noOfTicks - 1) * (context._minTickDistance.width)) / noOfTicks));\n\n        context.maxTickSpaces({\n            width: tickInterval\n        });\n\n        const adjustedRange = getAdjustedRange(minDiff, [tickInterval / 2,\n            width - left - right - tickInterval / 2], domain, context.config());\n\n         // set range for axis\n        setAxisRange(context, 'y', adjustedRange, isOffset ? height : null);\n\n        context.setTickConfig();\n    }\n};\n\nexport const getSmartAxisName = (name, width, labelManager) => {\n    const oriSize = labelManager.getOriSize(name);\n\n    labelManager.useEllipsesOnOverflow(true);\n\n    return labelManager.getSmartText(name, width, oriSize.height, true);\n};\n","import { mergeRecursive } from 'muze-utils';\nimport { hasAxesConfigChanged } from './helper';\n\nexport const PROPS = {\n    availableSpace: {},\n    axisDimensions: {},\n    axisComponentDimensions: {},\n    config: {\n        sanitization: (context, value) => {\n            const oldConfig = Object.assign({}, context._config || {});\n            const mockedOldConfig = mergeRecursive({}, oldConfig);\n            value = mergeRecursive(mockedOldConfig, value);\n\n            value.axisNamePadding = Math.max(value.axisNamePadding, 0);\n            const shouldAxesScaleUpdate = hasAxesConfigChanged(\n                value, oldConfig, ['interpolator', 'exponent', 'base', 'orientation']\n            );\n            const tickFormatter = context.sanitizeTickFormatter(value);\n\n            if (shouldAxesScaleUpdate) {\n                context._scale = context.createScale(value);\n                context._axis = context.createAxis(value);\n            }\n\n            context._tickFormatter = ticks => tickFormatter(ticks);\n\n            context.resetRenderConfig(value);\n            return value;\n        }\n    },\n    renderConfig: {\n        sanitization: (context, value) => {\n            const oldConfig = Object.assign({}, context._renderConfig || {});\n            value = mergeRecursive(oldConfig, value);\n            return value;\n        }\n    },\n    logicalSpace: {},\n    mount: {\n    },\n    range: {\n        sanitization: (context, value) => {\n            context.scale().range(value);\n            context.logicalSpace(null);\n            return value;\n        }\n    },\n\n    smartTicks: {},\n    tickSize: {},\n    maxTickSpaces: {\n        sanitization: (context, value) => {\n            const oldConfig = Object.assign({}, context._maxTickSpaces || {});\n            value = mergeRecursive(oldConfig, value);\n            return value;\n        }\n    },\n    valueParser: {\n        defaultValue: val => val\n    }\n};\n","import {\n    mergeRecursive,\n    getSmartComputedStyle,\n    selectElement,\n    generateGetterSetters,\n    getUniqueId\n} from 'muze-utils';\nimport { createScale } from '../scale-creator';\nimport { axisOrientationMap, BOTTOM, TOP } from '../enums/axis-orientation';\nimport { defaultConfig } from './default-config';\nimport { renderAxis } from '../axis-renderer';\nimport { spaceSetter } from './space-setter';\nimport {\n    getAxisComponentDimensions,\n    computeAxisDimensions,\n    calculateContinousSpace,\n    setOffset,\n    getValidDomain,\n    getSmartAxisName\n} from './helper';\nimport { PROPS } from './props';\n\nexport default class SimpleAxis {\n\n    /**\n     * Creates an instance of SimpleAxis.\n     * @memberof SimpleAxis\n     */\n    constructor (config, dependencies) {\n        this._id = getUniqueId();\n\n        this._dependencies = dependencies;\n        this._mount = null;\n        this._range = [];\n        this._domain = [];\n        this._domainLock = false;\n        this._axisDimensions = {};\n        this._smartTicks = [];\n\n        const defCon = mergeRecursive({}, this.constructor.defaultConfig());\n        const simpleConfig = mergeRecursive(defCon, config);\n\n        const bodyElem = selectElement('body');\n        const classPrefix = simpleConfig.classPrefix;\n        this._tickLabelStyle = getSmartComputedStyle(bodyElem, `${classPrefix}-ticks`);\n        this._axisNameStyle = getSmartComputedStyle(bodyElem, `${classPrefix}-axis-name`);\n\n        dependencies.labelManager.setStyle(this._tickLabelStyle);\n        const dist = dependencies.labelManager.getOriSize('w');\n\n        this._minTickDistance = { width: dist.width * 3 / 4, height: dist.height / 2 };\n        this._minTickSpace = dependencies.labelManager.getOriSize('www...');\n\n        generateGetterSetters(this, PROPS);\n        this.config(simpleConfig);\n\n        this._scale = this.createScale(this._config);\n        this._axis = this.createAxis(this._config);\n        this._animationDonePromises = [];\n    }\n\n    /**\n     * Returns the default configuration of simple axis\n     *  @return {Object} default configurations\n     */\n    static defaultConfig () {\n        return defaultConfig;\n    }\n\n    /**\n     * Sets a fixed baseline for the first ticks so that they can render effectively within\n     * the given area\n     *\n     * @param {*} tickText\n     * @param {*} config\n     * @param {*} labelManager\n     */\n    setFixedBaseline () {\n        return this;\n    }\n\n    /**\n     *\n     *\n     * @readonly\n     * @memberof SimpleAxis\n     */\n    scale (...params) {\n        if (params.length) {\n            this._scale = params[0];\n            return this;\n        }\n        return this._scale;\n    }\n\n    resetDomain () {\n        this._domain = [];\n        return this;\n    }\n\n    /**\n     *\n     *\n     * @readonly\n     * @memberof SimpleAxis\n     */\n    axis (...params) {\n        if (params.length) {\n            this._axis = params[0];\n            return this;\n        }\n        return this._axis;\n    }\n\n    /**\n     *\n     *\n     * @param {*} d\n     *\n     * @memberof SimpleAxis\n     */\n    domain (...domain) {\n        if (domain.length) {\n            const domainValue = getValidDomain(this, domain[0]);\n            this.scale().domain(domainValue);\n            this._domain = this.scale().domain();\n            this.setAxisComponentDimensions();\n            this.logicalSpace(null);\n            return this;\n        }\n        return this._domain;\n    }\n\n    setAxisComponentDimensions () {\n        this.axisComponentDimensions(getAxisComponentDimensions(this));\n    }\n\n    /**\n     *\n     *\n     *\n     * @memberof SimpleAxis\n     */\n    dependencies () {\n        return this._dependencies;\n    }\n\n    /**\n     *\n     *\n     *\n     * @memberof SimpleAxis\n     */\n    createScale (config) {\n        const {\n            base,\n            padding,\n            interpolator,\n            exponent\n        } = config;\n        const range = this.range();\n        const scale = createScale({\n            padding,\n            interpolator,\n            exponent,\n            base,\n            range,\n            type: this.constructor.type()\n        });\n\n        return scale;\n    }\n\n    sanitizeTickFormatter (value) {\n        const { tickFormat, numberFormat } = value;\n\n        if (tickFormat) {\n            return ticks => (val, i) => tickFormat(numberFormat(val), val, i, ticks);\n        }\n\n        return () => val => numberFormat(val);\n    }\n\n    resetRenderConfig (config) {\n        const {\n            labels,\n            show,\n            showInnerTicks,\n            showOuterTicks,\n            showAxisName,\n            xOffset,\n            yOffset,\n            tickValues,\n            smartAxisName\n        } = config;\n        this.renderConfig({\n            labels,\n            show,\n            showInnerTicks,\n            showOuterTicks,\n            showAxisName,\n            xOffset,\n            yOffset,\n            tickValues,\n            smartAxisName\n        });\n        return this;\n    }\n\n    resetLogicalSpace () {\n        this.logicalSpace(null);\n        this.range([]);\n\n        this.resetRenderConfig(this.config());\n    }\n\n    getFormattedText (text, index, axisTicks) {\n        const formatter = this._tickFormatter;\n\n        return formatter(axisTicks)(text, index);\n    }\n\n    /**\n     *\n     *\n     *\n     * @memberof SimpleAxis\n     */\n    createAxis (config) {\n        const { orientation } = config;\n        const axisClass = axisOrientationMap[orientation];\n\n        if (axisClass) {\n            const axis = axisClass(this.scale());\n            return axis;\n        }\n        return null;\n    }\n\n    setTickValues (tickValues) {\n        const renderConfig = this.renderConfig();\n        this.config({ ...renderConfig, tickValues });\n        this.tickValues = tickValues;\n        this.axis().tickValues(tickValues);\n    }\n\n    /**\n     * This method is used to set the space availiable to render\n     * the SimpleCell.\n     *\n     * @param {number} width The width of SimpleCell.\n     * @param {number} height The height of SimpleCell.\n     * @memberof AxisCell\n     */\n    setAvailableSpace (width = 0, height, padding, isOffset) {\n        let labelConfig = {};\n        const {\n           orientation\n       } = this.config();\n\n        this.availableSpace({ width, height, padding });\n        const type = this.constructor.type();\n\n        if (orientation === TOP || orientation === BOTTOM) {\n            labelConfig = spaceSetter(this, { isOffset })[type].x();\n        } else {\n            labelConfig = spaceSetter(this, { isOffset })[type].y();\n        }\n\n        // Set config\n        this.renderConfig({\n            labels: labelConfig\n        });\n        this.setTickConfig();\n        this.setSmartAxisName();\n        return this;\n    }\n\n    setSmartAxisName () {\n        const { orientation, name } = this.config();\n        const dimType = (orientation === TOP || orientation === BOTTOM) ? 'width' : 'height';\n        const widthDim = this.availableSpace()[dimType];\n        const labelManager = this.dependencies().labelManager;\n        labelManager.setStyle(this._axisNameStyle);\n        this.renderConfig({\n            smartAxisName: getSmartAxisName(name, widthDim, labelManager)\n        });\n        return this;\n    }\n\n    /**\n     *\n     *\n     * @memberof SimpleAxis\n     */\n    setTickConfig () {\n        return this;\n    }\n\n    getScaleValue (domainVal) {\n        if (domainVal === null || domainVal === undefined) {\n            return undefined;\n        }\n        return this.scale()(domainVal);\n    }\n\n    /**\n     *\n     *\n     *\n     * @memberof SimpleAxis\n     */\n    getTickSize () {\n        return this.axis().tickSize();\n    }\n\n    /**\n     * Gets the space occupied by the parts of an axis\n     *\n     * @return {Object} object with details about sizes of the axis.\n     * @memberof SimpleAxis\n     */\n    getAxisDimensions (...params) {\n        this.axisDimensions(computeAxisDimensions(this, ...params));\n        return this.axisDimensions();\n    }\n\n    /**\n     * Gets the space occupied by the axis\n     *\n     * @return {Object} object with details about size of the axis.\n     * @memberof SimpleAxis\n     */\n    getLogicalSpace () {\n        if (!this.logicalSpace()) {\n            this.logicalSpace(calculateContinousSpace(this));\n        }\n        setOffset(this);\n\n        return this.logicalSpace();\n    }\n\n    /**\n     * Returns the value from the domain when given a value from the range.\n     * @param {number} value Value from the range.\n     * @return {number} Value\n     */\n    invert (value) {\n        return this.scale().invert(value);\n    }\n\n    /**\n     * Gets the nearest range value from the given range values.\n     * @param {number} v1 Start range value\n     * @param {number} v2 End range value\n     *\n     * @return {Array} range values\n     */\n    getNearestRange (v1, v2) {\n        return [v1, v2];\n    }\n\n    invertExtent (v1, v2) {\n        return [this.invert(v1), this.invert(v2)];\n    }\n\n    getMinTickDifference () {\n        return this.domain();\n    }\n\n    getFormattedTickValues (tickValues) {\n        return tickValues;\n    }\n\n    /**\n     * This method returns the width in pixels for one\n     * unit along the axis. It is only applicable to band scale\n     * and returns undefined for other scale type.\n     *\n     * @return {number} the width of one band along band scale axis\n     * @memberof SimpleAxis\n     */\n    getUnitWidth () {\n        return 0;\n    }\n\n    /**\n     * This method returns an object that can be used to\n     * reconstruct this instance.\n     *\n     * @return {Object} the serializable props of axis\n     * @memberof SimpleAxis\n     */\n    serialize () {\n        return {\n            name: this.name,\n            type: this.type,\n            range: this.range(),\n            config: this.config()\n        };\n    }\n\n    /**\n     * Returns the id of the axis.\n     * @return {string} Unique identifier of the axis.\n     */\n    get id () {\n        return this._id;\n    }\n\n    /**\n     * This method is used to render the axis inside\n     * the supplied svg container.\n     *\n     * @param {SVGElement} svg the svg element in which to render the path\n     * @memberof SimpleAxis\n     */\n    /* istanbul ignore next */render () {\n        if (this.mount()) {\n            this.setTickConfig();\n            renderAxis(this);\n        }\n        return this;\n    }\n\n    /**\n     *\n     *\n     *\n     * @memberof SimpleAxis\n     */\n    remove () {\n        selectElement(this.mount()).remove();\n        return this;\n    }\n\n    /**\n     *\n     *\n     * @memberof SimpleAxis\n     */\n    unsubscribe () {\n        return this;\n    }\n\n    /**\n     *\n     *\n     *\n     * @memberof SimpleAxis\n     */\n    isReverse () {\n        const range = this.range();\n        return range[0] > range[1];\n    }\n\n    /**\n     *\n     *\n     *\n     * @memberof SimpleAxis\n     */\n    getPixelToValueRatio () {\n        const scale = this.scale();\n        const range = scale.range();\n        const domain = scale.domain();\n\n        return Math.abs(range[1] - range[0]) / (domain[1] - domain[0]);\n    }\n\n     /**\n     * Notifies when all animations/transitions of the axis are completed.\n     *\n     * @public\n     * @return {Promise} Returns a promise to notify the animation completion.\n     */\n    animationDone () {\n        return Promise.all(this._animationDonePromises);\n    }\n\n    registerAnimationDoneHook () {\n        let resolveFn;\n        const promise = new Promise((resolve) => {\n            resolveFn = resolve;\n        });\n        this._animationDonePromises.push(promise);\n\n        return () => {\n            resolveFn();\n        };\n    }\n}\n\n","import { sanitizeDomainWhenEqual } from 'muze-utils';\nimport { scaleMap } from '../../scale-creator';\n\nexport default class LinearInterpolator {\n\n    createScale (config) {\n        const {\n            range\n        } = config;\n        const scaleFactory = scaleMap.linear;\n        this._scale = scaleFactory().range(range);\n        return this._scale;\n    }\n\n    getScaleValue (domainVal) {\n        return this._scale(domainVal) + 0.5;\n    }\n\n    sanitizeDomain (domain) {\n        if (domain.length) {\n            domain = sanitizeDomainWhenEqual(domain);\n        }\n        return domain;\n    }\n}\n","import { scaleMap } from '../../scale-creator';\n\nexport default class LogInterpolator {\n\n    createScale (config) {\n        const {\n            range,\n            base\n        } = config;\n        const scaleFactory = scaleMap.log;\n        this._scale = scaleFactory().range(range).base(base);\n        return this._scale;\n    }\n\n    getScaleValue (domainVal) {\n        const scale = this._scale;\n        if (domainVal <= 0) {\n            return scale(scale.domain()[0]);\n        }\n\n        return scale(domainVal) + 0.5;\n    }\n\n    sanitizeDomain (domain) {\n        if (domain[0] <= 0) {\n            domain[0] = Math.max(1, domain[0]);\n        }\n        if (domain[1] <= 0) {\n            domain[1] = Math.max(1, domain[1]);\n        }\n        return domain;\n    }\n}\n","import { scaleMap } from '../../scale-creator';\n\nexport default class PowInterpolator {\n\n    createScale (config) {\n        const {\n            range,\n            exponent\n        } = config;\n        const scaleFactory = scaleMap.pow;\n        this._scale = scaleFactory().range(range).exponent(exponent);\n        return this._scale;\n    }\n\n    getScaleValue (domainVal) {\n        return this._scale(domainVal) + 0.5;\n    }\n\n    sanitizeDomain (domain) {\n        return domain;\n    }\n}\n","import { getSmallestDiff } from 'muze-utils';\nimport SimpleAxis from './simple-axis';\nimport { BOTTOM, TOP, LEFT, RIGHT } from '../enums/axis-orientation';\nimport { LINEAR, LOG, POW } from '../enums/scale-type';\nimport { LogInterpolator, PowInterpolator, LinearInterpolator } from './interpolators';\nimport {\n    getNumberOfTicks,\n    getValidDomain,\n    setContinousAxisDomain\n} from './helper';\n\nexport const interpolatorMap = {\n    [LOG]: LogInterpolator,\n    [POW]: PowInterpolator,\n    [LINEAR]: LinearInterpolator\n};\n\nexport default class ContinousAxis extends SimpleAxis {\n    constructor (config, dependencies) {\n        config.tickFormat = config.tickFormat || (val => val);\n        super(config, dependencies);\n    }\n    /**\n     *\n     *\n     *\n     * @memberof SimpleAxis\n     */\n    createScale (config) {\n        const {\n            base,\n            padding,\n            interpolator,\n            exponent\n        } = config;\n        const range = this.range();\n        const InterpolatorCls = interpolatorMap[interpolator];\n\n        this._interpolator = new InterpolatorCls();\n        let scale = this._interpolator.createScale({\n            padding,\n            exponent,\n            base,\n            range\n        });\n\n        scale = scale.nice();\n        return scale;\n    }\n\n    /**\n     *\n     *\n     * @static\n     *\n     * @memberof ContinousAxis\n     */\n    static type () {\n        return LINEAR;\n    }\n\n    getScaleValue (domainVal) {\n        if (domainVal === null || domainVal === undefined) {\n            return undefined;\n        }\n        return this._interpolator.getScaleValue(domainVal);\n    }\n /**\n     *\n     *\n     *\n     * @memberof SimpleAxis\n     */\n    getTickSize () {\n        const {\n            showInnerTicks,\n            showOuterTicks\n        } = this.renderConfig();\n        const axis = this.axis();\n        axis.tickSizeInner(showInnerTicks === false ? 0 : 6);\n        axis.tickSizeOuter(showOuterTicks === false ? 0 : 6);\n\n        return axis.tickSize();\n    }\n\n    /**\n     *\n     *\n     * @param {*} d\n     *\n     * @memberof SimpleAxis\n     */\n    domain (...domain) {\n        if (domain.length) {\n            const domainVal = this._interpolator.sanitizeDomain(getValidDomain(this, domain[0]));\n            setContinousAxisDomain(this, domainVal);\n            this.setAxisComponentDimensions();\n            this.logicalSpace(null);\n            return this;\n        }\n        return this._domain;\n    }\n\n    /**\n     * This method is used to set the space availiable to render\n     * the SimpleCell.\n     *\n     * @param {number} width The width of SimpleCell.\n     * @param {number} height The height of SimpleCell.\n     * @memberof AxisCell\n     */\n    setAvailableSpace (...params) {\n        super.setAvailableSpace(...params);\n        this.getTickSize();\n        return this;\n    }\n\n    /**\n     *\n     *\n     * @param {*} tickValues\n     *\n     * @memberof SimpleAxis\n     */\n    setTickConfig () {\n        const {\n            tickValues,\n            showInnerTicks\n        } = this.renderConfig();\n        const axis = this.axis();\n\n        if (!showInnerTicks) {\n            axis.tickValues([]);\n            return this;\n        }\n\n        if (tickValues) {\n            tickValues instanceof Array && this.axis().tickValues(tickValues);\n        }\n        const newTickValues = this.getTickValues();\n\n        axis.tickValues(newTickValues);\n        const smartLabel = this.dependencies().labelManager;\n        smartLabel.setStyle(this._tickLabelStyle);\n        const formatter = this._tickFormatter(newTickValues);\n        const smartTicks = newTickValues.map((val, i) => {\n            const text = formatter(val, i);\n            const tickSpace = smartLabel.getOriSize(text);\n\n            tickSpace.text = text;\n            return tickSpace;\n        });\n\n        this.smartTicks(smartTicks);\n        return this;\n    }\n\n    /**\n     *\n     *\n     *\n     * @memberof SimpleAxis\n     */\n    getTickValues () {\n        let labelDim = 0;\n        const {\n            orientation\n\n        } = this.config();\n        const {\n            tickValues\n        } = this.renderConfig();\n        const range = this.range();\n        const axis = this.axis();\n\n        const availableSpace = Math.abs(range[0] - range[1]);\n\n        const labelProps = this.axisComponentDimensions().largestTickDimensions;\n\n        if (tickValues) {\n            return tickValues;\n        }\n        labelDim = labelProps[orientation === BOTTOM || orientation === TOP ? 'width' : 'height'];\n\n        return getNumberOfTicks(availableSpace, labelDim, axis, this);\n    }\n\n    getMinTickDifference () {\n        return getSmallestDiff(this.renderConfig().tickValues);\n    }\n\n    /**\n     * Sets a fixed baseline for the first ticks so that they can render effectively within\n     * the given area\n     *\n     * @param {*} tickText\n     * @param {*} config\n     * @param {*} labelManager\n     */\n    setFixedBaseline (tickText) {\n        const {\n            orientation\n        } = this.config();\n        const {\n            labels\n        } = this.renderConfig();\n\n        const {\n            rotation\n        } = labels;\n        const axis = this.axis();\n        const ticks = axis.tickValues();\n        const smartTicks = this.smartTicks();\n\n        if (smartTicks && smartTicks.length) {\n            const { width, height } = this.smartTicks()[0];\n\n            axis.tickTransform((d) => {\n                if (d === ticks[0]) {\n                    if ((orientation === LEFT || orientation === RIGHT)) {\n                        return `translate(0, -${(height) / 3}px)`;\n                    }\n\n                    if ((orientation === TOP || orientation === BOTTOM) && !rotation) {\n                        return `translate(${width / 2}px,  ${0}px)`;\n                    }\n                } return '';\n            });\n        }\n        return tickText;\n    }\n\n}\n","import SimpleAxis from './simple-axis';\nimport { BAND } from '../enums/scale-type';\nimport { calculateBandSpace, setOffset, getRotatedSpaces } from './helper';\n\nexport default class BandAxis extends SimpleAxis {\n    /**\n     *\n     *\n     * @static\n     *\n     * @memberof BandAxis\n     */\n    static type () {\n        return BAND;\n    }\n\n    /**\n     *\n     *\n     *\n     * @memberof BandAxis\n     */\n    setTickConfig () {\n        let smartTicks = '';\n        let smartlabel;\n        const domain = this.domain();\n        const { labelManager } = this._dependencies;\n        const { padding } = this.config();\n        const { labels, tickValues } = this.renderConfig();\n        const { height: availHeight, width: availWidth, noWrap } = this.maxTickSpaces();\n        const { width, height } = getRotatedSpaces(labels.rotation, availWidth, availHeight);\n\n        tickValues && this.axis().tickValues(tickValues);\n        smartTicks = tickValues || domain;\n\n        // set the style on the shared label manager instance\n        labelManager.setStyle(this._tickLabelStyle);\n\n        // Update padding between plots\n        if (typeof padding === 'number') {\n            const paddingNormalized = Math.min(1, Math.max(0, padding));\n            this.scale().padding(paddingNormalized);\n        }\n\n        if (domain && domain.length) {\n            const values = tickValues || domain;\n            const tickFormatter = this._tickFormatter(values);\n            smartTicks = values.map((d, i) => {\n                labelManager.useEllipsesOnOverflow(true);\n\n                smartlabel = labelManager.getSmartText(tickFormatter(d, i), width, height, noWrap);\n                return labelManager.constructor.textToLines(smartlabel);\n            });\n        }\n        this.smartTicks(smartTicks);\n        return this;\n    }\n\n    /**\n     * Gets the space occupied by the axis\n     *\n     * @return {Object} object with details about size of the axis.\n     * @memberof SimpleAxis\n     */\n    getLogicalSpace () {\n        if (!this.logicalSpace()) {\n            this.logicalSpace(calculateBandSpace(this));\n        }\n        setOffset(this);\n\n        return this.logicalSpace();\n    }\n\n    /**\n     *\n     *\n     * @memberof BandAxis\n     */\n    getTickValues () {\n        return this.axis().scale().domain();\n    }\n\n    formatTickValue (val) {\n        return this.valueParser()(val);\n    }\n\n    sanitizeTickFormatter (value) {\n        const { tickFormat } = value;\n\n        if (tickFormat) {\n            return ticks => (val, i) => tickFormat(this.formatTickValue(val), val, i, ticks);\n        }\n        return () => val => this.formatTickValue(val);\n    }\n\n    /**\n     *\n     *\n     *\n     * @memberof BandAxis\n     */\n    getUnitWidth () {\n        return this.scale().bandwidth();\n    }\n\n    /**\n     *\n     *\n     *\n     * @memberof SimpleAxis\n     */\n    getTickSize () {\n        const {\n            showInnerTicks,\n            showOuterTicks\n        } = this.renderConfig();\n        const axis = this.axis();\n\n        axis.tickSizeInner(showInnerTicks ? 6 : 0);\n        axis.tickSizeOuter(showOuterTicks ? 6 : 0);\n        return axis.tickSize();\n    }\n\n    invertExtent (v1, v2) {\n        return this.scale().invertExtent(v1, v2);\n    }\n\n    /**\n     * Gets the nearest range value from the given range values.\n     * @param {number} v1 Start range value\n     * @param {number} v2 End range value\n     * @return {Array} range values\n     */\n    getNearestRange (v1, v2) {\n        const scale = this.scale();\n        const range = scale.range();\n        const reverse = range[0] > range[1];\n\n        const extent = this.invertExtent(v1, v2);\n        const p1 = scale(reverse ? extent[extent.length - 1] : extent[0]);\n        const p2 = scale(reverse ? extent[0] : extent[extent.length - 1]) + scale.bandwidth();\n        return [p1, p2];\n    }\n}\n","import { getSmallestDiff } from 'muze-utils';\nimport SimpleAxis from './simple-axis';\nimport { TIME } from '../enums/scale-type';\nimport { calculateBandSpace, getRotatedSpaces, getValidDomain, setContinousAxisDomain, setOffset,\n    resetTickInterval } from './helper';\nimport { applyTickSkipping } from './space-setter';\n\n/**\n *\n *\n * @export\n * @class TimeAxis\n * @extends {SimpleAxis}\n */\nexport default class TimeAxis extends SimpleAxis {\n\n    constructor (...params) {\n        super(...params);\n        this._minDiff = Infinity;\n    }\n\n    /**\n     *\n     *\n     * @param {*} range\n     *\n     * @memberof TimeAxis\n     */\n    createScale (range) {\n        let scale = super.createScale(range);\n\n        scale = scale.nice();\n        return scale;\n    }\n\n    /**\n     *\n     *\n     * @static\n     *\n     * @memberof TimeAxis\n     */\n    static type () {\n        return TIME;\n    }\n\n    formatTickValue (val) {\n        return this.scale().tickFormat()(val);\n    }\n\n    sanitizeTickFormatter (value) {\n        const { tickFormat } = value;\n\n        if (tickFormat) {\n            return (ticks) => {\n                const rawTicks = ticks.map(t => t.getTime());\n                return (val, i) => tickFormat(this.formatTickValue(val), val.getTime(), i, rawTicks);\n            };\n        }\n        return () => val => this.formatTickValue(val);\n    }\n\n     /**\n     *\n     *\n     *\n     * @memberof SimpleAxis\n     */\n    getTickSize () {\n        const {\n            showInnerTicks,\n            showOuterTicks\n        } = this.renderConfig();\n        const axis = this.axis();\n        axis.tickSizeInner(showInnerTicks === false ? 0 : 6);\n        axis.tickSizeOuter(showOuterTicks === false ? 0 : 6);\n        return super.getTickSize();\n    }\n\n    /**\n     *\n     *\n     *\n     * @memberof TimeAxis\n     */\n    getTickValues () {\n        return this.renderConfig().tickValues || this.scale().ticks();\n    }\n\n    /**\n     *\n     *\n     * @param {*} diff\n     *\n     * @memberof TimeAxis\n     */\n    minDiff (diff) {\n        this._minDiff = Math.min(this._minDiff, diff);\n        return this;\n    }\n\n    applyTickSkipping () {\n        applyTickSkipping(this);\n    }\n\n    /**\n     *\n     *\n     * @param {*} d\n     *\n     * @memberof SimpleAxis\n     */\n    domain (...domain) {\n        if (domain.length) {\n            const domainValue = getValidDomain(this, domain[0]);\n            setContinousAxisDomain(this, domainValue);\n            this.setAxisComponentDimensions();\n            this.logicalSpace(null);\n\n            resetTickInterval(this, domainValue);\n            return this;\n        }\n        return this._domain;\n    }\n\n    /**\n     * Gets the space occupied by the axis\n     *\n     * @return {Object} object with details about size of the axis.\n     * @memberof SimpleAxis\n     */\n    getLogicalSpace () {\n        if (!this.logicalSpace()) {\n            this.logicalSpace(calculateBandSpace(this));\n        }\n        setOffset(this);\n\n        return this.logicalSpace();\n    }\n\n    getMinTickDifference () {\n        return getSmallestDiff(this.config().tickValues);\n    }\n\n    /**\n     * This method is used to set the space availiable to render\n     * the SimpleCell.\n     *\n     * @param {number} width The width of SimpleCell.\n     * @param {number} height The height of SimpleCell.\n     * @memberof AxisCell\n     */\n    setAvailableSpace (...params) {\n        super.setAvailableSpace(...params);\n        this.getTickSize();\n        return this;\n    }\n\n    /**\n     *\n     *\n     * @returns\n     * @memberof BandAxis\n     */\n    setTickConfig () {\n        let smartTicks;\n        let smartlabel;\n\n        const { labels, tickValues } = this.renderConfig();\n        const { height: availHeight, width: availWidth, noWrap } = this.maxTickSpaces();\n        const { labelManager } = this._dependencies;\n        const domain = this.getTickValues();\n\n        tickValues && this.axis().tickValues(tickValues);\n\n        const { width, height } = getRotatedSpaces(labels.rotation, availWidth, availHeight);\n\n        smartTicks = tickValues || domain;\n\n        // set the style on the shared label manager instance\n        labelManager.setStyle(this._tickLabelStyle);\n\n        if (domain && domain.length) {\n            const values = tickValues || domain;\n            const tickFormatter = this._tickFormatter(values);\n            smartTicks = values.map((d, i) => {\n                labelManager.useEllipsesOnOverflow(true);\n\n                smartlabel = labelManager.getSmartText(tickFormatter(d, i), width, height, noWrap);\n                return labelManager.constructor.textToLines(smartlabel);\n            });\n        }\n\n        this.smartTicks(smartTicks);\n        return this;\n    }\n}\n","export const x11Colors = {\n    Pink: { hex: 'ffc0cb', rgb: '255,192,203' },\n    LightPink: { hex: 'ffb6c1', rgb: '255,182,193' },\n    HotPink: { hex: 'ff69b4', rgb: '255,105,180' },\n    DeepPink: { hex: 'ff1493', rgb: '255,20,147' },\n    PaleVioletRed: { hex: 'db7093', rgb: '219,112,147' },\n    MediumVioletRed: { hex: 'c71585', rgb: '199,21,133' },\n    LightSalmon: { hex: 'ffa07a', rgb: '255,160,122' },\n    Salmon: { hex: 'fa8072', rgb: '250,128,114' },\n    DarkSalmon: { hex: 'e9967a', rgb: '233,150,122' },\n    LightCoral: { hex: 'f08080', rgb: '240,128,128' },\n    IndianRed: { hex: 'cd5c5c', rgb: '205,92,92' },\n    Crimson: { hex: 'dc143c', rgb: '220,20,60' },\n    FireBrick: { hex: 'b22222', rgb: '178,34,34' },\n    DarkRed: { hex: '8b0000', rgb: '139,0,0' },\n    Red: { hex: 'ff0000', rgb: '255,0,0' },\n    OrangeRed: { hex: 'ff4500', rgb: '255,69,0' },\n    Tomato: { hex: 'ff6347', rgb: '255,99,71' },\n    Coral: { hex: 'ff7f50', rgb: '255,127,80' },\n    DarkOrange: { hex: 'ff8c00', rgb: '255,140,0' },\n    Orange: { hex: 'ffa500', rgb: '255,165,0' },\n    Gold: { hex: 'ffd700', rgb: '255,215,0' },\n    Yellow: { hex: 'ffff00', rgb: '255,255,0' },\n    LightYellow: { hex: 'ffffe0', rgb: '255,255,224' },\n    LemonChiffon: { hex: 'fffacd', rgb: '255,250,205' },\n    LightGoldenrodYellow: { hex: 'fafad2', rgb: '250,250,210' },\n    PapayaWhip: { hex: 'ffefd5', rgb: '255,239,213' },\n    Moccasin: { hex: 'ffe4b5', rgb: '255,228,181' },\n    PeachPuff: { hex: 'ffdab9', rgb: '255,218,185' },\n    PaleGoldenrod: { hex: 'eee8aa', rgb: '238,232,170' },\n    Khaki: { hex: 'f0e68c', rgb: '240,230,140' },\n    DarkKhaki: { hex: 'bdb76b', rgb: '189,183,107' },\n    Cornsilk: { hex: 'fff8dc', rgb: '255,248,220' },\n    BlanchedAlmond: { hex: 'ffebcd', rgb: '255,235,205' },\n    Bisque: { hex: 'ffe4c4', rgb: '255,228,196' },\n    NavajoWhite: { hex: 'ffdead', rgb: '255,222,173' },\n    Wheat: { hex: 'f5deb3', rgb: '245,222,179' },\n    BurlyWood: { hex: 'deb887', rgb: '222,184,135' },\n    Tan: { hex: 'd2b48c', rgb: '210,180,140' },\n    RosyBrown: { hex: 'bc8f8f', rgb: '188,143,143' },\n    SandyBrown: { hex: 'f4a460', rgb: '244,164,96' },\n    Goldenrod: { hex: 'daa520', rgb: '218,165,32' },\n    DarkGoldenrod: { hex: 'b8860b', rgb: '184,134,11' },\n    Peru: { hex: 'cd853f', rgb: '205,133,63' },\n    Chocolate: { hex: 'd2691e', rgb: '210,105,30' },\n    SaddleBrown: { hex: '8b4513', rgb: '139,69,19' },\n    Sienna: { hex: 'a0522d', rgb: '160,82,45' },\n    Brown: { hex: 'a52a2a', rgb: '165,42,42' },\n    Maroon: { hex: '800000', rgb: '128,0,0' },\n    DarkOliveGreen: { hex: '556b2f', rgb: '85,107,47' },\n    Olive: { hex: '808000', rgb: '128,128,0' },\n    OliveDrab: { hex: '6b8e23', rgb: '107,142,35' },\n    YellowGreen: { hex: '9acd32', rgb: '154,205,50' },\n    LimeGreen: { hex: '32cd32', rgb: '50,205,50' },\n    Lime: { hex: '00ff00', rgb: '0,255,0' },\n    LawnGreen: { hex: '7cfc00', rgb: '124,252,0' },\n    Chartreuse: { hex: '7fff00', rgb: '127,255,0' },\n    GreenYellow: { hex: 'adff2f', rgb: '173,255,47' },\n    SpringGreen: { hex: '00ff7f', rgb: '0,255,127' },\n    MediumSpringGreen: { hex: '00fa9a', rgb: '0,250,154' },\n    LightGreen: { hex: '90ee90', rgb: '144,238,144' },\n    PaleGreen: { hex: '98fb98', rgb: '152,251,152' },\n    DarkSeaGreen: { hex: '8fbc8f', rgb: '143,188,143' },\n    MediumSeaGreen: { hex: '3cb371', rgb: '60,179,113' },\n    SeaGreen: { hex: '2e8b57', rgb: '46,139,87' },\n    ForestGreen: { hex: '228b22', rgb: '34,139,34' },\n    Green: { hex: '008000', rgb: '0,128,0' },\n    DarkGreen: { hex: '006400', rgb: '0,100,0' },\n    MediumAquamarine: { hex: '66cdaa', rgb: '102,205,170' },\n    Aqua: { hex: '00ffff', rgb: '0,255,255' },\n    Cyan: { hex: '00ffff', rgb: '0,255,255' },\n    LightCyan: { hex: 'e0ffff', rgb: '224,255,255' },\n    PaleTurquoise: { hex: 'afeeee', rgb: '175,238,238' },\n    Aquamarine: { hex: '7fffd4', rgb: '127,255,212' },\n    Turquoise: { hex: '40e0d0', rgb: '64,224,208' },\n    MediumTurquoise: { hex: '48d1cc', rgb: '72,209,204' },\n    DarkTurquoise: { hex: '00ced1', rgb: '0,206,209' },\n    LightSeaGreen: { hex: '20b2aa', rgb: '32,178,170' },\n    CadetBlue: { hex: '5f9ea0', rgb: '95,158,160' },\n    DarkCyan: { hex: '008b8b', rgb: '0,139,139' },\n    Teal: { hex: '008080', rgb: '0,128,128' },\n    LightSteelBlue: { hex: 'b0c4de', rgb: '176,196,222' },\n    PowderBlue: { hex: 'b0e0e6', rgb: '176,224,230' },\n    LightBlue: { hex: 'add8e6', rgb: '173,216,230' },\n    SkyBlue: { hex: '87ceeb', rgb: '135,206,235' },\n    LightSkyBlue: { hex: '87cefa', rgb: '135,206,250' },\n    DeepSkyBlue: { hex: '00bfff', rgb: '0,191,255' },\n    DodgerBlue: { hex: '1e90ff', rgb: '30,144,255' },\n    CornflowerBlue: { hex: '6495ed', rgb: '100,149,237' },\n    SteelBlue: { hex: '4682b4', rgb: '70,130,180' },\n    RoyalBlue: { hex: '4169e1', rgb: '65,105,225' },\n    Blue: { hex: '0000ff', rgb: '0,0,255' },\n    MediumBlue: { hex: '0000cd', rgb: '0,0,205' },\n    DarkBlue: { hex: '00008b', rgb: '0,0,139' },\n    Navy: { hex: '000080', rgb: '0,0,128' },\n    MidnightBlue: { hex: '191970', rgb: '25,25,112' },\n    Lavender: { hex: 'e6e6fa', rgb: '230,230,250' },\n    Thistle: { hex: 'd8bfd8', rgb: '216,191,216' },\n    Plum: { hex: 'dda0dd', rgb: '221,160,221' },\n    Violet: { hex: 'ee82ee', rgb: '238,130,238' },\n    Orchid: { hex: 'da70d6', rgb: '218,112,214' },\n    Fuchsia: { hex: 'ff00ff', rgb: '255,0,255' },\n    Magenta: { hex: 'ff00ff', rgb: '255,0,255' },\n    MediumOrchid: { hex: 'ba55d3', rgb: '186,85,211' },\n    MediumPurple: { hex: '9370db', rgb: '147,112,219' },\n    BlueViolet: { hex: '8a2be2', rgb: '138,43,226' },\n    DarkViolet: { hex: '9400d3', rgb: '148,0,211' },\n    DarkOrchid: { hex: '9932cc', rgb: '153,50,204' },\n    DarkMagenta: { hex: '8b008b', rgb: '139,0,139' },\n    Purple: { hex: '800080', rgb: '128,0,128' },\n    Indigo: { hex: '4b0082', rgb: '75,0,130' },\n    DarkSlateBlue: { hex: '483d8b', rgb: '72,61,139' },\n    SlateBlue: { hex: '6a5acd', rgb: '106,90,205' },\n    MediumSlateBlue: { hex: '7b68ee', rgb: '123,104,238' },\n    White: { hex: 'ffffff', rgb: '255,255,255' },\n    Snow: { hex: 'fffafa', rgb: '255,250,250' },\n    Honeydew: { hex: 'f0fff0', rgb: '240,255,240' },\n    MintCream: { hex: 'f5fffa', rgb: '245,255,250' },\n    Azure: { hex: 'f0ffff', rgb: '240,255,255' },\n    AliceBlue: { hex: 'f0f8ff', rgb: '240,248,255' },\n    GhostWhite: { hex: 'f8f8ff', rgb: '248,248,255' },\n    WhiteSmoke: { hex: 'f5f5f5', rgb: '245,245,245' },\n    Seashell: { hex: 'fff5ee', rgb: '255,245,238' },\n    Beige: { hex: 'f5f5dc', rgb: '245,245,220' },\n    OldLace: { hex: 'fdf5e6', rgb: '253,245,230' },\n    FloralWhite: { hex: 'fffaf0', rgb: '255,250,240' },\n    Ivory: { hex: 'fffff0', rgb: '255,255,240' },\n    AntiqueWhite: { hex: 'faebd7', rgb: '250,235,215' },\n    Linen: { hex: 'faf0e6', rgb: '250,240,230' },\n    LavenderBlush: { hex: 'fff0f5', rgb: '255,240,245' },\n    MistyRose: { hex: 'ffe4e1', rgb: '255,228,225' },\n    Gainsboro: { hex: 'dcdcdc', rgb: '220,220,220' },\n    LightGray: { hex: 'd3d3d3', rgb: '211,211,211' },\n    Silver: { hex: 'c0c0c0', rgb: '192,192,192' },\n    DarkGrey: { hex: 'a9a9a9', rgb: '169,169,169' },\n    Grey: { hex: '808080', rgb: '128,128,128' },\n    DimGrey: { hex: '696969', rgb: '105,105,105' },\n    LightSlateGrey: { hex: '778899', rgb: '119,136,153' },\n    SlateGrey: { hex: '708090', rgb: '112,128,144' },\n    DarkSlateGrey: { hex: '2f4f4f', rgb: '47,79,79' },\n    Black: { hex: '000000', rgb: '0,0,0' }\n};\n","import {\n    LINEAR\n} from '../enums/constants';\n/**\n * Set of default colors\n */\nexport const palette = [\n    '#086bb6',\n    '#f37d45',\n    '#f5ce02',\n    '#67bda0',\n    '#c54e4e',\n    '#ae70af'\n];\n\nexport const DEFAULT_GRADIENT_COLOR = '#eaeaea';\n\nexport const DEFAULT_CONFIG = {\n    range: palette,\n    value: palette[0],\n    step: false,\n    stops: 5,\n    type: LINEAR\n};\n","import { mergeRecursive, detectColor, hexToHsv, rgbToHsv } from 'muze-utils';\nimport { x11Colors } from './color-maps';\nimport { palette, DEFAULT_GRADIENT_COLOR } from './defaults';\nimport { LINEAR, RGB, HEX, HSL, HSLA } from '../enums/constants';\n\nexport const getHslString = hslArr => `hsla(${hslArr[0] * 360},${hslArr[1] * 100}%,${hslArr[2] * 100}%,\\\n${hslArr[3] || 1})`;\n\nexport const convertToXllString = baseString => (baseString.split(' ') || [])\n                .reduce((x, e) => `${x}${e.charAt(0).toUpperCase()}${e.slice(1)}`, '');\n\nexport const getActualHslColor = (e, paletteColor) => {\n    let color = '';\n    if (typeof e === 'string') {\n        e = e.replace(/ /g, '');\n        e = e.toLowerCase();\n        if (detectColor(e) === HSL || detectColor(e) === HSLA) {\n            color = e.match(/(\\d+(\\.\\d+)?)/g);\n            color = [color[0] / 360, color[1] / 100, color[2] / 100, color[3] || 1];\n        } else if (detectColor(e) === HEX) {\n            color = hexToHsv(e);\n        } else if (detectColor(e) === RGB) {\n            const col = e.substring(e.indexOf('(') + 1, e.lastIndexOf(')')).split(/,\\s*/);\n            color = rgbToHsv(...col);\n        } else if (x11Colors[convertToXllString(e)]) {\n            color = rgbToHsv(...x11Colors[convertToXllString(e)].rgb.split(','));\n        }\n    } else if (!(e instanceof Array)) {\n        color = rgbToHsv(paletteColor);\n    } else {\n        color = e;\n    }\n    return color;\n};\n\nexport const PROPS = {\n    config: {\n        sanitization: (context, config) => {\n            const defCon = mergeRecursive({}, context.constructor.defaultConfig());\n            if (config.type === LINEAR) {\n                config.range = config.range || [defCon.range[0]];\n                config.range = config.range.length > 1 ? config.range : [DEFAULT_GRADIENT_COLOR, ...config.range];\n            }\n            const oldConfig = mergeRecursive(defCon, context.config());\n            const newConfig = mergeRecursive(oldConfig, config);\n\n            if (newConfig.range instanceof Array) {\n                newConfig.range = newConfig.range.map((e, i) => getActualHslColor(e, palette[i]));\n                newConfig.stops = config.stops || newConfig.range.length;\n            }\n            newConfig.value = getActualHslColor(newConfig.value, newConfig.value);\n            return newConfig;\n        }\n    },\n    domain: {},\n    scale: {},\n    uniqueValues: {}\n};\n","import { InvalidAwareTypes, getObjProp } from 'muze-utils';\n\nexport const treatNullMeasures = (domainVal, scaledVal, minDomainScaledVal) => {\n    if (domainVal instanceof InvalidAwareTypes) {\n        return minDomainScaledVal;\n    }\n    return scaledVal;\n};\n\nexport const resolveAxisConfig = (propVal, defaultVal, context) => {\n    const constructor = getObjProp(propVal, 'constructor');\n    switch (constructor) {\n    case Function:\n        return propVal(defaultVal, context);\n    case Array:\n        return propVal;\n    default:\n        return defaultVal;\n    }\n};\n","import { numberInterpolator, piecewiseInterpolator, hslInterpolator, sanitizeDomainWhenEqual } from 'muze-utils';\nimport { CONTINOUS, DISCRETE } from '../enums/constants';\nimport { LINEAR, SEQUENTIAL, ORDINAL, QUANTILE } from '../enums/scale-type';\nimport { getHslString } from './props';\nimport { treatNullMeasures } from '../helper';\n\nconst getStops = (domain, stops) => {\n    let newStops = [];\n\n    if (stops instanceof Array) {\n        newStops = stops.slice().sort();\n        newStops = [...new Set([domain[0], ...stops, domain[1]])].sort();\n    } else {\n        const interpolator = numberInterpolator()(...domain);\n        for (let i = 0; i <= stops; i++) {\n            newStops[i] = interpolator(i / stops);\n        }\n    }\n\n    if (newStops[0] < domain[0]) {\n        newStops.shift();\n    }\n    return { domain, newStops };\n};\n\nconst rangeStops = (newStopsLength, range) => {\n    let newRange = [];\n    const maxRangeLength = Math.min(range.length, 18);\n\n    if (newStopsLength > maxRangeLength) {\n        const interpolator = piecewiseInterpolator()(hslInterpolator(), range.map(e => getHslString(e)));\n        for (let i = 0; i < newStopsLength; i++) {\n            newRange[i] = interpolator(i / (newStopsLength - 1));\n        }\n    } else {\n        newRange = range.slice(0, newStopsLength);\n    }\n    return { newRange };\n};\n\n/**\n*\n*\n* @param {*} domain\n*\n*/\nconst indexedDomain = (domain) => {\n    const uniqueVals = domain;\n    const retDomain = domain.map((d, i) => (i) / (domain.length - 1));\n    return { domain: retDomain, uniqueVals, scaleDomain: [0, 1] };\n};\n\n/**\n *\n *\n * @param {*} domain\n *\n */\nconst indexedDomainMeasure = (domain, stops, range) => {\n    const uniqueVals = domain;\n    return { domain, uniqueVals, scaleDomain: [0, 1], range };\n};\n\n/**\n *\n *\n * @param {*} domain\n *\n */\nconst normalDomain = (domain, stops, range) => {\n    const uniqueVals = domain;\n    return { uniqueVals, domain, nice: true, range };\n};\n\n/**\n *\n *\n * @param {*} domain\n * @param {*} stops\n *\n */\nconst steppedDomain = (domain, stops, range) => {\n    const { domain: uniqueVals, newStops } = getStops(domain, stops);\n    const { newRange } = rangeStops(newStops.length - 1, range);\n\n    return { uniqueVals, domain: newStops, nice: true, range: newRange };\n};\n\nconst continousSteppedDomain = (domain, stops, range) => {\n    const { domain: uniqueVals, newStops } = getStops(sanitizeDomainWhenEqual(domain), range.length - 1);\n    const hslRange = range.map(e => getHslString(e));\n    return { uniqueVals, domain: newStops, nice: true, range: hslRange };\n};\n\n/**\n *\n *\n * @param {*} domainValue\n * @param {*} scale\n * @param {*} domain\n * @param {*} uniqueVals\n *\n */\nconst uniqueRange = (domainValue, scale, domain, uniqueVals) => {\n    const index = uniqueVals.indexOf(domainValue);\n    const numVal = domain[index];\n    return scale(numVal);\n};\n\n/**\n *\n *\n * @param {*} domainValue\n * @param {*} scale\n * @param {*} domain\n *\n */\nconst indexedRange = (domainValue, scale, domain) => {\n    const numVal = (domainValue - domain[0]) / (domain[domain.length - 1] - domain[0]);\n\n    return treatNullMeasures(domainValue, scale(numVal), scale(0));\n};\n\n/**\n *\n *\n * @param {*} domainValue\n * @param {*} scale\n */\nconst normalRange = (domainValue, scale, domain) => treatNullMeasures(domainValue, scale(domainValue),\n    scale(domain[0]));\n\n/**\n *\n *\n * @param {*} stops\n */\nconst strategies = () => ({\n    [`${CONTINOUS}-${CONTINOUS}-${SEQUENTIAL}`]: {\n        scale: SEQUENTIAL,\n        domainRange: () => indexedDomainMeasure,\n        value: () => indexedRange\n    },\n    [`${CONTINOUS}-${DISCRETE}-${SEQUENTIAL}`]: {\n        scale: SEQUENTIAL,\n        domainRange: () => indexedDomainMeasure,\n        value: () => indexedRange\n    },\n    [`${DISCRETE}-${DISCRETE}-${SEQUENTIAL}`]: {\n        scale: SEQUENTIAL,\n        domainRange: () => indexedDomain,\n        value: () => uniqueRange\n    },\n    [`${DISCRETE}-${DISCRETE}-${ORDINAL}`]: {\n        scale: ORDINAL,\n        domainRange: () => normalDomain,\n        value: () => normalRange\n    },\n    [`${CONTINOUS}-${CONTINOUS}-${ORDINAL}`]: {\n        scale: LINEAR,\n        domainRange: () => continousSteppedDomain,\n        value: () => normalRange\n    },\n    [`${CONTINOUS}-${DISCRETE}-${ORDINAL}`]: {\n        scale: QUANTILE,\n        domainRange: () => steppedDomain,\n        value: () => normalRange\n\n    }\n});\n\n/**\n *\n *\n * @param {*} domainType\n * @param {*} rangeType\n * @param {*} schemeType\n * @param {*} stops\n */\nexport const strategyGetter = (domainType, rangeType, schemeType) =>\n    strategies()[`${domainType}-${rangeType}-${schemeType || ''}`];\n","/**\n * @module Axis\n * This file declares a class that is used to render an axis to add  meaning to\n * plots.\n */\nimport { getUniqueId, generateGetterSetters, rgbToHsv } from 'muze-utils';\nimport { createScale, getScheme, getSchemeType } from '../scale-creator';\nimport { CONTINOUS, DISCRETE, COLOR } from '../enums/constants';\nimport { strategyGetter } from './color-strategy';\nimport { DEFAULT_CONFIG } from './defaults';\nimport { PROPS, getHslString, getActualHslColor } from './props';\n\n/**\n* This class is used to instantiate a SimpleAxis.\n* @class SimpleAxis\n*/\nexport default class ColorAxis {\n\n    /**\n    * Creates an instance of SimpleAxis.\n    * @param {Object} config input parameters.\n    * @param {Object | undefined} params.range Type of color range.\n    * @param {string} params.name the label to show on axis.\n    * @param {string} params.type The type of scale to handle.\n    * @memberof ColorAxis\n    */\n    constructor (config) {\n        generateGetterSetters(this, PROPS);\n        this.config(config);\n\n        this._domainType = this._config.type === 'linear' ? CONTINOUS : DISCRETE;\n        this._rangeType = (this._config.type === 'linear' && !this._config.step) ? CONTINOUS : DISCRETE;\n\n        this._schemeType = getSchemeType(this._config.range);\n\n        this._colorStrategy = this.setColorStrategy(this._domainType, this._rangeType, this._schemeType);\n        this._scale = this.createScale(this._colorStrategy);\n\n        this._id = getUniqueId();\n\n        this.updateDomain(config.domain);\n    }\n\n    /**\n     *\n     *\n     * @static\n     *\n     * @memberof ColorAxis\n     */\n    static defaultConfig () {\n        return DEFAULT_CONFIG;\n    }\n\n    /**\n     *\n     *\n     * @static\n     *\n     * @memberof ColorAxis\n     */\n    static type () {\n        return COLOR;\n    }\n\n    /**\n     *\n     *\n     * @param {*} colorStrategy\n     *\n     * @memberof ColorAxis\n     */\n    createScale (colorStrategy) {\n        const { range } = this.config();\n        if (range && typeof (range) === 'string') {\n            return getScheme(range);\n        }\n        return createScale({\n            type: colorStrategy.scale,\n            range\n        });\n    }\n\n    /**\n     *\n     *\n     * @param {*} domainType\n     * @param {*} rangeType\n     * @param {*} schemeType\n     *\n     * @memberof ColorAxis\n     */\n    setColorStrategy (domainType, rangeType, schemeType) {\n        return strategyGetter(domainType, rangeType, schemeType);\n    }\n\n    /**\n     *\n     *\n     * @param {*} domainVal\n     *\n     * @memberof ColorAxis\n     */\n    getHslString (hslColorArray) {\n        return getHslString(hslColorArray);\n    }\n    /**\n     *\n     *\n     * @param {*} domainVal\n     *\n     * @memberof ColorAxis\n     */\n    getColor (domainVal) {\n        return this.getHslString(this.getRawColor(domainVal));\n    }\n    /**\n     *\n     *\n     * @param {*} domainVal\n     *\n     * @memberof ColorAxis\n     */\n    getRawColor (domainVal) {\n        if (this.domain() && domainVal !== undefined) {\n            const scale = this.scale();\n            const range = scale.range ? scale.range() : null;\n            const color = this._colorStrategy.value(range)(domainVal, scale, this.domain(), this.uniqueValues());\n            if (color) {\n                if (typeof color === 'string') {\n                    const col = color.substring(color.indexOf('(') + 1, color.lastIndexOf(')')).split(/,\\s*/);\n                    return rgbToHsv(...col);\n                }\n                return [...color];\n            }\n        }\n        return [...this.config().value];\n    }\n\n    /**\n     *\n     *\n     * @param {*} [domain=[]]\n     *\n     * @memberof ColorAxis\n     */\n    updateDomain (domain = []) {\n        if (domain.length) {\n            const scale = this.scale();\n            const range = scale.range ? scale.range() : null;\n            const domainRangeFn = this._colorStrategy.domainRange();\n            const scaleInfo = domainRangeFn(domain, this.config().stops, range);\n\n            this.domain(scaleInfo.domain);\n            scaleInfo.range && this.scale().range(scaleInfo.range);\n            this.uniqueValues(scaleInfo.uniqueVals);\n            this.scale().domain(scaleInfo.scaleDomain || this.domain());\n        }\n        return this;\n    }\n\n    /**\n     * This method returns an object that can be used to\n     * reconstruct this instance.\n     *\n     * @return {Object} the serializable props of axis\n     * @memberof ShapeAxis\n     */\n    serialize () {\n        return {\n            type: this.constructor.type(),\n            scale: this.scale(),\n            domain: this.domain(),\n            config: this.config()\n        };\n    }\n\n    transformColor (color, transformationArr) {\n        const h = color[0] * 360;\n        const s = color[1] * 100;\n        const l = color[2] * 100;\n        const a = color[3] || 1;\n        const newH = h + transformationArr[0];\n        const newS = s + transformationArr[1];\n        const newL = l + transformationArr[2];\n        const newA = a + transformationArr[3] || 0;\n\n        return { color: `hsla(${newH},${newS}%,${newL}%,${newA})`, hsla: [newH / 360, newS / 100, newL / 100, newA] };\n    }\n\n    /**\n     * Returns the id of the axis.\n     * @return {string} Unique identifier of the axis.\n     */\n    id () {\n        return this._id;\n    }\n\n    getHslArray (color) {\n        return getActualHslColor(color);\n    }\n\n}\n","export const DEFAULT_CONFIG = {\n    value: 36,\n    range: [36, 1000]\n};\n","import { numberInterpolator, piecewiseInterpolator } from 'muze-utils';\nimport { CONTINOUS, DISCRETE } from '../enums/constants';\nimport { LINEAR, THRESHOLD } from '../enums/scale-type';\nimport { treatNullMeasures } from '../helper';\n\n/**\n *\n *\n * @param {*} domain\n *\n */\nconst indexedDomain = (domain) => {\n    const uniqueVals = domain;\n    const retDomain = domain.map((d, i) => (i) / (domain.length - 1));\n    return { domain: retDomain, uniqueVals, scaleDomain: [0, 1] };\n};\n\n/**\n *\n *\n * @param {*} domain\n *\n */\nconst normalDomain = (domain) => {\n    const uniqueVals = domain;\n    return { uniqueVals, domain };\n};\n\n/**\n *\n *\n * @param {*} domain\n * @param {*} intervals\n *\n */\nconst steppedDomain = (domain, intervals) => {\n    let newIntervals = [];\n    if (intervals instanceof Array) {\n        newIntervals = intervals.slice().sort();\n    } else {\n        const interpolator = numberInterpolator()(...domain);\n        for (let i = 0; i < intervals; i++) {\n            newIntervals[i] = interpolator(i / (intervals - 1));\n        }\n    }\n    if (newIntervals[0] < domain[0]) {\n        newIntervals.shift();\n    }\n    const retDomain = newIntervals;\n    return { uniqueVals: newIntervals, domain: retDomain, nice: true };\n};\n\n/**\n *\n *\n * @param {*} domainValue\n * @param {*} scale\n * @param {*} domain\n * @param {*} uniqueVals\n *\n */\nconst discreteRange = (domainValue, scale, domain) => {\n    const numVal = (domainValue - domain[0]) / (domain[domain.length - 1] - domain[0]);\n    const interpolator = numberInterpolator()(...scale.range());\n    return treatNullMeasures(domainValue, interpolator(numVal), interpolator(domain[0]));\n};\n\n/**\n *\n *\n * @param {*} domainValue\n * @param {*} scale\n * @param {*} domain\n *\n */\nconst pieceWiseRange = (domainValue, scale, domain, uniqueVals) => {\n    const index = uniqueVals.indexOf(domainValue);\n    const numVal = domain[index];\n    const fn = piecewiseInterpolator()(numberInterpolator(), [...scale.range()]);\n    return fn(numVal);\n};\n\n/**\n *\n *\n * @param {*} domainValue\n * @param {*} scale\n */\nconst normalRange = (domainValue, scale, domain) =>\n    treatNullMeasures(domainValue, scale(domainValue), scale(domain[0]));\n\n/**\n *\n *\n * @param {*} intervals\n */\nconst strategies = {\n    [`${DISCRETE}-${CONTINOUS}`]: {\n        scale: LINEAR,\n        domain: indexedDomain,\n        range: pieceWiseRange\n    },\n    [`${CONTINOUS}-${CONTINOUS}`]: {\n        scale: LINEAR,\n        domain: normalDomain,\n        range: normalRange\n    },\n    [`${CONTINOUS}-${DISCRETE}`]: {\n        scale: THRESHOLD,\n        domain: steppedDomain,\n        range: discreteRange\n    }\n};\n\n/**\n *\n *\n * @param {*} domainType\n * @param {*} rangeType\n * @param {*} schemeType\n * @param {*} intervals\n */\nexport const strategyGetter = (domainType, rangeType) =>\n     strategies[`${domainType}-${rangeType}`];\n","export const PROPS = {\n    config: {},\n    domain: {\n        sanitization: (context, value) => {\n            context.scale().domain(value);\n            return value;\n        }\n    },\n    range: {},\n    scale: {},\n    uniqueValues: {}\n};\n","/**\n * @module Axis\n * This file declares a class that is used to render an axis to add  meaning to\n * plots.\n */\nimport { getUniqueId, generateGetterSetters } from 'muze-utils';\nimport { createScale } from '../scale-creator';\nimport { DEFAULT_CONFIG } from './defaults';\nimport { SIZE, CONTINOUS, DISCRETE } from '../enums/constants';\nimport { strategyGetter } from './size-strategy';\nimport { PROPS } from './props';\n\n/**\n* This class is used to instantiate a SimpleAxis.\n* @class SimpleAxis\n*/\nexport default class SizeAxis {\n\n    /**\n     * Creates an instance of SimpleAxis.\n     * @param {Object} config input parameters.\n     * @memberof SizeAxis\n     */\n    constructor (config) {\n        generateGetterSetters(this, PROPS);\n\n        this._id = getUniqueId();\n        this._config = Object.assign({}, this.constructor.defaultConfig(), config);\n        // @todo: Will use configuration override using scale decorator\n        this._domainType = this._config.type === 'linear' ? CONTINOUS : DISCRETE;\n        this._rangeType = CONTINOUS;\n\n        this._sizeStrategy = this.setStrategy(this._domainType, this._rangeType);\n        this._scale = this.createScale(this._sizeStrategy);\n        this._range = this._config.range;\n\n        this.updateDomain(config.domain);\n    }\n\n     /**\n     *\n     *\n     * @param {*} domainType\n     * @param {*} rangeType\n     * @param {*} schemeType\n     *\n     * @memberof ColorAxis\n     */\n    setStrategy (domainType, rangeType) {\n        return strategyGetter(domainType, rangeType);\n    }\n\n    /**\n     *\n     *\n     *\n     * @memberof SizeAxis\n     */\n    createScale (strategy) {\n        const {\n            range\n        } = this.config();\n        return createScale({\n            type: strategy.scale,\n            range\n        });\n    }\n\n    /**\n     *\n     *\n     * @static\n     *\n     * @memberof ColorAxis\n     */\n    static defaultConfig () {\n        return DEFAULT_CONFIG;\n    }\n\n     /**\n     *\n     *\n     * @static\n     *\n     * @memberof ColorAxis\n     */\n    static type () {\n        return SIZE;\n    }\n\n    /**\n     *\n     *\n     * @param {*} domainVal\n     *\n     * @memberof SizeAxis\n     */\n    getSize (domainVal = 0) {\n        let sizeVal = 1;\n        const {\n            value\n        } = this.config();\n        const scale = this.scale();\n        const domain = this.domain() || [1, 1];\n\n        if (!scale || domain[0] === domain[1]) {\n            sizeVal = value;\n        } else {\n            return this._sizeStrategy.range(domainVal, scale, this.domain(), this.uniqueValues());\n        }\n        return sizeVal;\n    }\n\n    /**\n     * This method is used to assign a domain to the axis.\n     *\n     * @param {Array} domain the domain of the scale\n     * @memberof SizeAxis\n     */\n    updateDomain (domain) {\n        if (domain) {\n            const domainFn = this._sizeStrategy.domain;\n\n            const domainInfo = domainFn(domain, this.config().intervals);\n\n            this.domain(domainInfo.domain);\n            this.uniqueValues(domainInfo.uniqueVals);\n\n            this.scale().domain(domainInfo.scaleDomain || this.domain());\n        }\n        return this;\n    }\n\n    /**\n     * This method returns an object that can be used to\n     * reconstruct this instance.\n     *\n     * @return {Object} the serializable props of axis\n     * @memberof ShapeAxis\n     */\n    serialize () {\n        return {\n            type: this.constructor.type(),\n            scale: this.scale(),\n            domain: this.domain(),\n            range: this.range(),\n            config: this.config()\n        };\n    }\n\n    /**\n     * Returns the id of the axis.\n     * @return {string} Unique identifier of the axis.\n     */\n    id () {\n        return this._id;\n    }\n}\n","export const DEFAULT_CONFIG = {\n    generator: null,\n    value: 'circle',\n    range: ['circle', 'diamond', 'star', 'cross', 'square', 'wye', 'triangle']\n};\n","export const PROPS = {\n    config: {},\n    domain: {},\n    scale: {},\n    uniqueValues: {},\n    generator: {}\n};\n\n","/**\n * @module Axis\n * This file declares a class that is used to render an axis to add  meaning to\n * plots.\n */\nimport { getUniqueId, getSymbol, generateGetterSetters, mergeRecursive, InvalidAwareTypes } from 'muze-utils';\nimport { createScale } from '../scale-creator';\nimport { DEFAULT_CONFIG } from './defaults';\nimport { SHAPE } from '../enums/constants';\nimport { shapeGenerator } from './helper';\nimport { PROPS } from './props';\n\n/**\n* This class is used to instantiate a SimpleAxis.\n* @class SimpleAxis\n*/\nexport default class ShapeAxis {\n    /**\n    * Creates an instance of SimpleAxis.\n    * @param {Object} params input parameters.\n    * @param {Object | undefined} params.range Type of color scheme.\n    * @memberof ShapeAxis\n    */\n    constructor (config) {\n        generateGetterSetters(this, PROPS);\n\n        this._id = getUniqueId();\n        this._config = Object.assign({}, this.constructor.defaultConfig());\n        this._config = mergeRecursive(this._config, config);\n\n        this._scale = createScale({\n            type: 'ordinal',\n            range: this._config.range\n        });\n        this.updateDomain(config.domain);\n    }\n\n     /**\n     *\n     *\n     * @static\n     *\n     * @memberof ColorAxis\n     */\n    static defaultConfig () {\n        return DEFAULT_CONFIG;\n    }\n\n     /**\n     *\n     *\n     * @static\n     *\n     * @memberof ColorAxis\n     */\n    static type () {\n        return SHAPE;\n    }\n\n    /**\n     *\n     *\n     * @param {*} value\n     *\n     * @memberof ShapeAxis\n     */\n    getShape (value) {\n        if (!this.scale() || !this.domain() || !value || value instanceof InvalidAwareTypes) {\n            return this.config().value;\n        }\n\n        if (this._generatedShapes) {\n            return this._generatedShapes[value];\n        }\n\n        const shapeType = this.scale()(value);\n        if (shapeType === 'string') {\n            return getSymbol(shapeType);\n        }\n\n        return shapeType;\n    }\n\n    /**\n     * This method is used to assign a domain to the axis.\n     *\n     * @param {Array} domain the domain of the scale\n     * @memberof ShapeAxis\n     */\n    updateDomain (domain = []) {\n        if (domain.length) {\n            this.uniqueValues(domain);\n            this.domain(domain);\n            this.scale().domain(domain);\n\n            if (this.config().generator) {\n                this._generatedShapes = shapeGenerator(domain, this.config().generator);\n            }\n        }\n        return this;\n    }\n\n    /**\n     * This method returns an object that can be used to\n     * reconstruct this instance.\n     *\n     * @return {Object} the serializable props of axis\n     * @memberof ShapeAxis\n     */\n    serialize () {\n        return {\n            type: this.constructor.type(),\n            scale: this.scale(),\n            domain: this.domain(),\n            range: this.config().range,\n            config: this.config()\n        };\n    }\n\n    /**\n     * Returns the id of the axis.\n     * @return {string} Unique identifier of the axis.\n     */\n    id () {\n        return this._id;\n    }\n}\n","/**\n *\n *\n * @param {*} domain\n * @param {*} generatorFn\n *\n */\nexport const shapeGenerator = (domain, generatorFn) => {\n    const generatedShapes = {};\n    domain.forEach((value) => {\n        generatedShapes[value] = generatorFn(value);\n    });\n    return generatedShapes;\n};\n","import { mergeRecursive } from 'muze-utils';\n\nexport const PROPS = {\n    config: {\n        sanitization: (context, config) => mergeRecursive(context.config(), config),\n        preset: (context, config) => {\n            const { range, domain } = config;\n            range && context.range(range);\n            domain && context.domain(domain);\n        }\n    },\n    domain: {},\n    range: {}\n};\n","/**\n * @module Axis\n * This file declares a class that is used to render an axis to add  meaning to\n * plots.\n */\nimport { getUniqueId, Symbols, mergeRecursive, generateGetterSetters } from 'muze-utils';\nimport { createScale } from '../scale-creator';\nimport { DEFAULT_ANGLE_DOMAIN } from '../enums/constants';\nimport { PROPS } from './props';\nimport { resolveAxisConfig } from '../helper';\n\nconst { pie } = Symbols;\n\nconst createAngleValues = (context) => {\n    const angleData = context._angleFn(context._domain);\n    angleData.forEach((v) => {\n        v.startAngle -= Math.PI / 2;\n        v.endAngle -= Math.PI / 2;\n    });\n    context._angleValues = angleData.reduce((values, d) => {\n        const key = d.data;\n        !values[key] && (values[key] = []);\n        values[key].push(d);\n        return values;\n    }, {});\n};\n\n/**\n* This class is used to instantiate a AngleAxis.\n* @class AngleAxis\n*/\nexport default class AngleAxis {\n\n    /**\n     * Creates an instance of AngleAxis.\n     * @param {Object} config input parameters.\n     * @memberof AngleAxis\n     */\n    constructor (config = {}) {\n        this._id = getUniqueId();\n        generateGetterSetters(this, PROPS);\n        this._config = mergeRecursive({}, this.constructor.defaultConfig());\n        this.config(config);\n        this._range = [0, 360];\n        this._angleFn = pie()\n                .value(d => (typeof d === 'string' ? 1 : d))\n                .sortValues(null);\n        this._angleValues = {};\n    }\n\n    static defaultConfig () {\n        return {};\n    }\n\n    createScale (strategy) {\n        const {\n            range\n        } = this.config();\n        return createScale({\n            type: strategy.scale,\n            range\n        });\n    }\n\n    getScaleValue (domainVal) {\n        return this._angleValues[domainVal];\n    }\n\n    padAngle (angle) {\n        this._angleFn = this._angleFn.padAngle(angle);\n    }\n\n    domain (...domainVal) {\n        if (domainVal.length) {\n            const { domain: customDomain } = this.config();\n            const domain = domainVal[0].length ? domainVal[0] : DEFAULT_ANGLE_DOMAIN;\n            this._domain = resolveAxisConfig(customDomain, domain, this);\n            createAngleValues(this);\n            return this;\n        }\n        return this._domain;\n    }\n\n    range (...range) {\n        if (range.length) {\n            const { range: customRange } = this.config();\n            this._range = resolveAxisConfig(customRange, range[0], this);\n            const domain = this.domain();\n            const [startAngle, endAngle] = this._range;\n            this._angleFn\n                    .startAngle((startAngle / 180) * Math.PI)\n                    .endAngle(Math.PI * endAngle / 180);\n            if (domain && domain.length) {\n                createAngleValues(this);\n            }\n            return this;\n        }\n        return this._range;\n    }\n}\n","/**\n * This file exports constants that are used as enums in the\n *  crosstab group implementation.\n */\n/**\n * Width of the crosstab.\n */\nexport const X = 'x';\n/**\n * Width of the crosstab.\n */\nexport const Y = 'y';\n/**\n * Width of the crosstab.\n */\nexport const WIDTH = 'width';\n\n/**\n * Height of the crosstab.\n */\nexport const HEIGHT = 'height';\n\n/**\n * Field referring to object storing measurement configuration.\n */\nexport const MEASUREMENT = 'measurement';\n\n/**\n * Field referring to object storing configuration properties.\n */\nexport const CONFIG = 'config';\n\n/**\n * Width of visual unit in crosstab.\n */\nexport const MIN_UNIT_WIDTH = 'minUnitWidth';\n\n/**\n * Height of visual unit.\n */\nexport const MIN_UNIT_HEIGHT = 'minUnitHeight';\n\n/**\n * Field to store the array of dimensions to facet by.\n */\nexport const DIMENSIONS = 'dimensions';\n\n/**\n * Field to store array of measures to use as x axis.\n */\nexport const MEASURES = 'measures';\n\n/**\n * Field to store the array of dimensions to facet by.\n */\nexport const DIMENSION = 'dimension';\n\n/**\n * Field to store array of measures to use as x axis.\n */\nexport const MEASURE = 'measure';\n\n/**\n * Flag to specify if model should be pivoted.\n */\nexport const PIVOT = 'pivot';\n\n/**\n * Flag to specify format\n */\nexport const FORMAT = 'format';\n\n/**\n * Mount point where the variable will be hosted\n */\nexport const MOUNT = 'mount';\n\n/**\n * Data update flag\n */\nexport const HAS_DATA_UPDATED = 'hasDataUpdated';\n\n/**\n * Field referring to object storing set of rows\n */\nexport const ROWS = 'rows';\n\n/**\n * Field referring to object storing set of columns\n */\nexport const COLUMNS = 'columns';\n\n/**\n * Field referring to object storing set of columns\n */\nexport const COL = 'col';\n\n/**\n * Field referring to object storing set of rows\n */\nexport const ROW = 'row';\n\n/**\n * Field referring to object storing set of columns\n */\nexport const COLUMN = 'column';\n\n/**\n * Field referring to object storing color field\n */\nexport const COLOR = 'color';\n\n/**\n * Field referring to object storing shape field\n */\nexport const SHAPE = 'shape';\n\n/**\n * Field referring to object storing size field\n */\nexport const SIZE = 'size';\n\n/**\n * Field referring to object storing detail field\n */\nexport const DETAIL = 'detail';\n\n/**\n * Field referring to object storing set of layers\n */\nexport const LAYERS = 'layers';\n\n/**\n * Field referring to object storing the transforms\n */\nexport const TRANSFORM = 'transform';\n\n/**\n * Field referring to object storing the transforms\n */\nexport const ORDINAL = 'ordinal';\n\n/**\n * Field referring to object storing the transforms\n */\nexport const LINEAR = 'linear';\n/**\n * Field referring to object storing the transforms\n */\nexport const LEFT = 'left';\n/**\n * Field referring to object storing the transforms\n */\nexport const RIGHT = 'right';\n/**\n * Field referring to object storing the transforms\n */\nexport const TOP = 'top';\n/**\n * Field referring to object storing the transforms\n */\nexport const BOTTOM = 'bottom';\n\n/**\n * Field referring to object storing the transforms\n */\nexport const RETINAL = 'retinal';\n/**\n * Field referring to object storing the transforms\n */\nexport const CELL = 'cell';\n/**\n * Field referring to object storing the transforms\n */\nexport const X_AXES = 'xAxes';\n/**\n * Field referring to object storing the transforms\n */\nexport const Y_AXES = 'yAxes';\n/**\n * Field referring to object storing the transforms\n */\nexport const ENTRY_CELLS = 'entryCell';\n/**\n * Field referring to object storing the transforms\n */\nexport const INITIALIZED = 'initialized';\n/**\n * Field referring to object storing the transforms\n */\nexport const EXIT_CELLS = 'exitCell';\n/**\n * Field referring to object storing the transforms\n */\nexport const AXIS = 'axis';\n/**\n * Field referring to object storing the transforms\n */\nexport const UNIT = 'unit';\n/**\n * Field referring to object storing the transforms\n */\nexport const UPDATED = 'updated';\n/**\n * Field referring to object storing the transforms\n */\nexport const BEFORE_UPDATE = 'beforeupdate';\n/**\n * Field referring to object storing the transforms\n */\nexport const VALUE_MATRIX = 'valueMatrix';\n/**\n * Field referring to object storing the transforms\n */\nexport const FACET_HEADERS = 'facet-headers';\n/**\n * Field referring to object storing the transforms\n */\nexport const RADIUS = 'radius';\n/**\n * Field referring to object storing the transforms\n */\nexport const ANGLE = 'angle';\n\nexport const ANGLE0 = 'angle0';\n/**\n * Field referring to object storing the transforms\n */\nexport const ARC = 'arc';\n/**\n * Field referring to object storing the transforms\n */\nexport const CATEGORICAL = 'categorical';\n/**\n * Field referring to object storing the transforms\n */\nexport const TEMPORAL = 'temporal';\n/**\n * Field referring to object storing the transforms\n */\nexport const BAR = 'bar';\n/**\n * Field referring to object storing the transforms\n */\nexport const LINE = 'line';\n/**\n * Field referring to object storing the transforms\n */\nexport const POINT = 'point';\n/**\n * Field referring to object storing the transforms\n */\nexport const PRIMARY = 'Primary';\n/**\n * Field referring to object storing the transforms\n */\nexport const SECONDARY = 'Secondary';\n/**\n * Field referring to object storing the transforms\n */\nexport const BOTH = 'both';\n/**\n * Field referring to object storing the transforms\n */\nexport const INTERACTION = 'interaction';\n/**\n * Field referring to object storing the transforms\n */\nexport const GRID_LINES = 'gridLines';\n/**\n * Field referring to object storing the transforms\n */\nexport const GRID_BANDS = 'gridBands';\n/**\n * Field referring to object storing the transforms\n */\nexport const HEADER = 'header';\n/**\n * Field referring to object storing the transforms\n */\nexport const FACET = 'facet';\n/**\n * Ordering type\n */\nexport const ASCENDING = 'asc';\n/**\n * Ordering type\n */\nexport const DESCENDING = 'desc';\n","/**\n * @module Axis\n * This file declares a class that is used to render an axis to add  meaning to\n * plots.\n */\nimport { getUniqueId, mergeRecursive, generateGetterSetters, sanitizeDomainWhenEqual } from 'muze-utils';\nimport { createScale } from '../scale-creator';\nimport { LINEAR } from '../../../visual-group/src/enums/constants';\nimport { PROPS } from './props';\nimport { resolveAxisConfig } from '../helper';\n\nconst adjustDomain = (context) => {\n    const minOuterRadius = context.config().minOuterRadius;\n    const domain = context._domain;\n    if (context._range.length) {\n        const scale = context._scale;\n        const value = scale.invert(minOuterRadius) - scale.invert(0);\n        context._domain = [domain[0] - value, domain[1]];\n        scale.domain(context._domain);\n    }\n};\n\n/**\n* This class is used to instantiate a RadiusAxis.\n* @class RadiusAxis\n*/\nexport default class RadiusAxis {\n\n    /**\n     * Creates an instance of RadiusAxis.\n     * @param {Object} config input parameters.\n     * @memberof RadiusAxis\n     */\n    constructor (config = {}) {\n        this._id = getUniqueId();\n        generateGetterSetters(this, PROPS);\n        this._range = [];\n        this._radiusFactor = 1;\n        this._config = mergeRecursive({}, this.constructor.defaultConfig());\n        this.config(config);\n        this._scale = this.createScale({\n            scale: LINEAR\n        });\n    }\n\n    static defaultConfig () {\n        return {\n            padding: [0, 1],\n            minOuterRadius: 10\n        };\n    }\n\n    config (...params) {\n        if (params.length) {\n            const config = mergeRecursive(this.config(), params[0]);\n            this._config = config;\n            return this;\n        }\n        return this._config;\n    }\n\n    createScale (strategy) {\n        return createScale({\n            type: strategy.scale,\n            range: this.range()\n        });\n    }\n\n    domain (...domainVal) {\n        if (domainVal.length) {\n            const { domain: customDomain } = this.config();\n            let domain = resolveAxisConfig(customDomain, domainVal[0], this);\n            domain = sanitizeDomainWhenEqual(domain);\n            this._scale.domain(domain);\n            this._domain = domain;\n            adjustDomain(this);\n        }\n        return this._domain;\n    }\n\n    getInnerRadius (domainVal) {\n        if (domainVal === undefined) {\n            return this.range()[0];\n        }\n        return this._scale(domainVal);\n    }\n\n    getOuterRadius (domainVal) {\n        if (domainVal === undefined) {\n            return this.range()[1];\n        }\n        const radius = this._scale(domainVal) * this._radiusFactor;\n        return radius;\n    }\n\n    range (...range) {\n        if (range.length) {\n            const { padding, range: customRange } = this.config();\n            const sanitizedRange = range[0].map((v, i) => v + (i ? -padding[i] : padding[i]));\n            const rangeVal = resolveAxisConfig(customRange, sanitizedRange, this);\n            this._range = rangeVal;\n            this._scale.range(rangeVal);\n            adjustDomain(this);\n        }\n        return this._range;\n    }\n\n    setRadiusFactor (val) {\n        this._radiusFactor = val;\n        return this;\n    }\n}\n","import * as ScaleType from './enums/scale-type';\n\nconst DATA_TYPES = {\n    DIMENSION: 'dimension',\n    CATEGORICAL: 'categorical',\n    MEASURE: 'measure',\n    TEMPORAL: 'temporal'\n};\n\n/**\n * Map of DataModel types to associated field types.\n */\nexport const dataTypeScaleMap = {\n    [DATA_TYPES.DIMENSION]: ScaleType.BAND,\n    [DATA_TYPES.MEASURE]: ScaleType.LINEAR,\n    [DATA_TYPES.TEMPORAL]: ScaleType.TIME\n};\n\n","import { nestCollection, InvalidAwareTypes } from 'muze-utils';\n\n/**\n * Create multiple datasets from a single dataset by grouping the data using\n * a dimensional field.\n * @param {Array} schema Name and type of fields are stored in schema\n * @param {Array} data Data array\n * @param {Object} config Configuration object\n * @return {Array} Grouped data array\n */\nexport default (schema, data, config) => {\n    const groupBy = config.groupBy instanceof Array ? config.groupBy : [config.groupBy];\n    const groupByIndices = groupBy.map(fieldName => schema.findIndex(d => d.name === fieldName));\n\n    if (groupByIndices.find(d => d === -1) !== undefined) {\n        throw new Error(`Groupby field ${groupBy} not found in schema`);\n    }\n\n    const groupedData = nestCollection({\n        keys: groupByIndices,\n        data\n    });\n\n    groupedData.forEach((d) => {\n        const key = d.key;\n        if (InvalidAwareTypes.isInvalid(key)) {\n            d.key = InvalidAwareTypes.getInvalidType(key);\n        }\n    });\n    return groupedData;\n};\n","/**\n * @module Transform\n * This file exports a function that is used to implement\n * the identity transform\n */\n /* eslint no-unused-vars: 0 */\n /**\n  * This function accepts data and returns the data unchanged.\n  * @param {Object} schema The schema.\n  * @param {Array} data The data array.\n  * @param {Object} config The config object.\n  * @return {Array} The unchanged data.\n  */\n function identityTransform (schema, data, config) {\n     return data;\n }\n\n export default identityTransform;\n","/**\n * @module Transform\n * This file exports the transform factory.\n */\nimport * as TransformType from '../enums/transform-type';\nimport identity from '../identity-transform';\nimport group from '../group-transform';\nimport stack from '../stack-transform';\n\n/* istanbul ignore next */\nconst transformMap = {\n    [TransformType.IDENTITY]: identity,\n    [TransformType.GROUP]: group,\n    [TransformType.STACK]: stack\n};\n\n/**\n * This function is used to retirn a transform associated\n * with the given type.\n *\n * @param {string} type The type of the transform.\n * @return {Function} The transform function.\n */\nfunction transformFactory (type) {\n    const transform = transformMap[type];\n    if (typeof transform !== 'function') {\n        throw new Error('Invalid transform type supplied.');\n    }\n    return transform;\n}\n\nexport default transformFactory;\n","/**\n * @module Transform\n * This module exports constants that are used to reference transforms in\n * a consistent manner throughout the project.\n */\n/* eslint one-var: 0 */\n export const IDENTITY = 'identity';\n export const GROUP = 'group';\n export const STACK = 'stack';\n export const FRACTURE = 'fracture';\n","import { stack } from 'muze-utils';\n\nimport group from '../group-transform';\n/*\n    Normalize the data to a form which can be given to d3 stack for stacking the data\n    ['Product', 'Sales', 'Region'],\n    0 ['A', 2000, 'North'],\n    1 ['A', 3000, 'South'],\n    2 ['B', 3000, 'South'],\n    3 ['B', 2000, 'North'],\n    4 ['C', 3000, 'South'],\n    5 ['C', 2000, 'North']\n            |\n            |\n    ['Product', 'North', 'South'],\n    ['A', 2000, 3000],\n    ['B', 2000, 3000],\n    ['C', 2000, 3000]\n*/\n// eslint-disable-next-line require-jsdoc\nconst normalizeData = (data, schema, valueField, uniqueField, groupBy) => {\n    const groupedData = group(schema, data, {\n        groupBy: uniqueField\n    });\n    const uniqueFieldIndex = schema.findIndex(d => d.name === uniqueField);\n    const valueFieldIndex = schema.findIndex(d => d.name === valueField);\n    const seriesKeyIndex = schema.findIndex(d => d.name === groupBy);\n    const seriesKeys = data.map(d => d[seriesKeyIndex]).filter((item, pos, arr) => arr.indexOf(item) === pos).sort();\n    const fieldNames = schema.reduce((acc, obj, i) => {\n        acc[i] = obj.name;\n        return acc;\n    }, {});\n    const dataArr = groupedData.map((arr) => {\n        const tuples = {};\n        const rowObj = arr.values.reduce((acc, row) => {\n            acc = row.reduce((obj, value, i) => {\n                if (i === seriesKeyIndex) {\n                    obj[value] = row[valueFieldIndex];\n                    tuples[value] = row;\n                } else if (i !== valueFieldIndex) {\n                    obj[fieldNames[i]] = value;\n                }\n                return obj;\n            }, acc);\n            return acc;\n        }, {});\n        rowObj._tuple = tuples;\n            // Set missing values field to zero value\n        seriesKeys.forEach((seriesKey) => {\n            if (rowObj[seriesKey] === undefined) {\n                rowObj[seriesKey] = 0;\n                const newArr = new Array(arr.values[0].length);\n                newArr[uniqueFieldIndex] = arr.key;\n                newArr[seriesKeyIndex] = seriesKey;\n                rowObj._tuple[seriesKey] = newArr;\n            }\n        });\n        return rowObj;\n    });\n\n    return {\n        data: dataArr,\n        keys: seriesKeys\n    };\n};\n/**\n * Generate a stacked representation of data\n * @param {Array} schema schema Array\n * @param {Array} data data array\n * @param {Object} config Configuration object\n * @return {Array} stacked data\n */\nexport default (schema, data, config) => {\n    const uniqueField = config.uniqueField;\n    const valueField = config.value;\n    const groupBy = config.groupBy;\n    const sort = config.sort || 'descending';\n    const normalizedData = normalizeData(data, schema, valueField, uniqueField, groupBy);\n    const keys = normalizedData.keys;\n    const map = {};\n    const orderBy = config.orderBy;\n    const orderIndex = schema.findIndex(d => d.name === orderBy);\n    const groupByIndex = schema.findIndex(d => d.name === groupBy);\n    if (orderIndex !== -1) {\n        keys.forEach((key) => {\n            const name = data.find(d => d[groupByIndex] === key);\n            map[key] = name[orderIndex];\n        });\n        normalizedData.keys.sort((a, b) => map[a].localeCompare(map[b]));\n    }\n\n    const stackData = stack({\n        keys: normalizedData.keys,\n        offset: config.offset || 'diverging',\n        order: sort,\n        data: normalizedData.data\n    });\n    stackData.forEach((seriesData) => {\n        seriesData.forEach((dataObj) => {\n            dataObj.data = dataObj.data._tuple[seriesData.key];\n        });\n    });\n    return stackData;\n};\n\n","import {\n    FieldType,\n    getDomainFromData,\n    setStyles,\n    easeFns,\n    selectElement,\n    DimensionSubtype,\n    retrieveNearestGroupByReducers,\n    getObjProp,\n    COORD_TYPES,\n    CommonProps\n} from 'muze-utils';\nimport { ScaleType } from '@chartshq/muze-axis';\nimport { transformFactory } from '@chartshq/transform';\nimport { IDENTITY, STACK, GROUP, COLOR, SHAPE, SIZE, ENCODING, AGG_FN_SUM, ASCENDING, TEXT } from '../enums/constants';\n\nconst BAND = ScaleType.BAND;\nconst { POLAR, CARTESIAN } = COORD_TYPES;\n\nconst transfromColor = (colorAxis, datum, styleType, intensity) => {\n    datum.meta.stateColor[styleType] = datum.meta.stateColor[styleType] || datum.meta.originalColor;\n    const fillColorInfo = colorAxis.transformColor(datum.meta.stateColor[styleType], intensity);\n    datum.meta.stateColor[styleType] = fillColorInfo.hsla;\n\n    return fillColorInfo;\n};\n\nexport const applyInteractionStyle = (context, selectionSet, interactionStyles, config) => {\n    const elements = context.getPlotElementsFromSet(selectionSet);\n    const axes = context.axes();\n    const colorAxis = axes.color;\n    const apply = config.apply;\n    const interactionType = config.interactionType;\n    interactionStyles.forEach((style) => {\n        const styleType = style.type;\n        elements.forEach((elem) => {\n            elem.style(styleType, ((d) => {\n                const { colorTransform, stateColor, originalColor } = d.meta;\n                colorTransform[interactionType] = colorTransform[interactionType] || {};\n                if (apply && !colorTransform[interactionType][styleType]) {\n                    // fade selections\n                    colorTransform[interactionType][styleType] = style.intensity;\n                    const color = transfromColor(colorAxis, d, styleType, style.intensity).color;\n                    return color;\n                }\n                if (!apply && colorTransform[interactionType][styleType]) {\n                     // unfade selections\n                    colorTransform[interactionType][styleType] = null;\n                    return transfromColor(colorAxis, d, styleType, style.intensity.map(e => -e)).color;\n                }\n                const [h, s, l, a] = stateColor[styleType] ? stateColor[styleType] : originalColor;\n                return `hsla(${h * 360},${s * 100}%,${l * 100}%, ${a || 1})`;\n            }));\n        });\n    });\n};\n\n/**\n *\n *\n * @param {*} selectionSet\n * @param {*} className\n * @param {*} hasFaded\n */\nexport const fadeUnfadeSelection = (context, selectionSet, hasFaded, interaction) => {\n    const interactionConfig = { interaction, apply: hasFaded };\n    applyInteractionStyle(context, selectionSet, 'fade', interactionConfig);\n};\n\n/**\n *\n *\n * @param {*} selectionSet\n * @param {*} className\n * @param {*} hasFaded\n */\nexport const focusUnfocusSelection = (context, selectionSet, isFocussed, interaction) => {\n    const interactionConfig = { interaction, apply: isFocussed };\n    applyInteractionStyle(context, selectionSet, 'focus', interactionConfig);\n};\n\n/**\n *\n *\n * @param {*} axes\n *\n */\nexport const getAxesScales = (axes) => {\n    const [xAxis, yAxis] = [ENCODING.X, ENCODING.Y].map(e => axes[e]);\n    const [xScale, yScale] = [xAxis, yAxis].map(e => e && e.scale());\n    return {\n        xAxis,\n        yAxis,\n        xScale,\n        yScale\n    };\n};\n\nexport const encodingFieldInfRetriever = {\n    [POLAR]: (encoding, fieldsConfig) => {\n        const encodingInf = {};\n        [ENCODING.RADIUS, ENCODING.RADIUS0, ENCODING.ANGLE, ENCODING.ANGLE0, COLOR, SHAPE, SIZE, TEXT]\n            .forEach((e) => {\n                const field = getObjProp(encoding, e, 'field');\n                encodingInf[`${e}Field`] = field;\n                encodingInf[`${e}FieldIndex`] = getObjProp(fieldsConfig, field, 'index');\n            });\n        return encodingInf;\n    },\n    [CARTESIAN]: (encoding, fieldsConfig) => {\n        const encodingInf = {};\n        [ENCODING.X, ENCODING.Y, ENCODING.X0, ENCODING.Y0, COLOR, SHAPE, SIZE, TEXT].forEach((e) => {\n            const field = getObjProp(encoding, e, 'field');\n            encodingInf[`${e}Field`] = field;\n            encodingInf[`${e}FieldIndex`] = getObjProp(fieldsConfig, field, 'index');\n            encodingInf[`${e}FieldType`] = getObjProp(fieldsConfig, field, 'def', 'type');\n            encodingInf[`${e}FieldSubType`] = getObjProp(fieldsConfig, field, 'def', 'subtype');\n        });\n\n        return encodingInf;\n    }\n};\n\n/**\n *\n *\n * @param {*} dataModel\n * @param {*} config\n * @param {*} transformType\n *\n */\nexport const transformData = (dataModel, config, transformType, encodingFieldInf) => {\n    const data = dataModel.getData({ withUid: true });\n    const schema = data.schema;\n    const transform = config.transform;\n    const {\n        xField,\n        yField,\n        xFieldType,\n        yFieldType\n    } = encodingFieldInf;\n    const uniqueField = xFieldType === FieldType.MEASURE ? yField : xField;\n\n    return transformFactory(transformType)(schema, data.data, {\n        groupBy: transform.groupBy,\n        uniqueField,\n        sort: transform.sort || 'none',\n        offset: transform.offset,\n        orderBy: transform.orderBy,\n        value: yFieldType === FieldType.MEASURE ? yField : xField\n    }, data.uids);\n};\n\nexport const getIndividualClassName = (d, i, data, context) => {\n    const className = context.config().individualClassName;\n    let classNameStr = '';\n    if (className instanceof Function) {\n        classNameStr = className(d, i, data, context);\n    }\n    return classNameStr;\n};\n\nconst dataNormalizers = {\n    [POLAR]: (transformedData, encodingFieldInf, fieldsConfig) => {\n        const {\n            radiusFieldIndex,\n            angleFieldIndex,\n            radius0FieldIndex,\n            angle0FieldIndex\n        } = encodingFieldInf;\n        const fieldsLen = Object.keys(fieldsConfig).length;\n\n        /**\n         * Returns normalized data from transformed data. It recursively traverses through\n         * the transformed data if there it is nested.\n         */\n        return transformedData.map(data => data.map((d) => {\n            const pointObj = {\n                radius: d[radiusFieldIndex],\n                angle: angleFieldIndex !== undefined ? d[angleFieldIndex] : 1,\n                radius0: d[radius0FieldIndex],\n                angle0: d[angle0FieldIndex]\n            };\n            [COLOR, SHAPE, SIZE, TEXT].forEach((enc) => {\n                pointObj[enc] = d[encodingFieldInf[`${enc}FieldIndex`]];\n            });\n            pointObj.source = d;\n            pointObj.rowId = d[fieldsLen];\n            return pointObj;\n        })).filter(d => d.length);\n    },\n    [CARTESIAN]: (transformedData, encodingFieldInf, fieldsConfig, transformType) => {\n        const {\n            xFieldType,\n            xFieldIndex,\n            yFieldIndex,\n            x0FieldIndex,\n            y0FieldIndex\n        } = encodingFieldInf;\n        const fieldsLen = Object.keys(fieldsConfig).length;\n        /**\n         * Returns normalized data from transformed data. It recursively traverses through\n         * the transformed data if there it is nested.\n         */\n        return transformedData.map((data) => {\n            const values = transformType === GROUP ? data.values : data;\n            return values.map((d) => {\n                let pointObj = {};\n                let tuple;\n                if (transformType === STACK) {\n                    tuple = d.data || [];\n                    let y;\n                    let y0;\n                    let x;\n                    let x0;\n                    if (d[1] >= d[0]) {\n                        y = x0 = d[1];\n                        x = y0 = d[0];\n                    } else {\n                        y = x0 = d[0];\n                        x = y0 = d[1];\n                    }\n\n                    pointObj = xFieldType === FieldType.MEASURE ? {\n                        x,\n                        x0,\n                        y: tuple[yFieldIndex],\n                        y0: tuple[yFieldIndex]\n                    } : {\n                        x: tuple[xFieldIndex],\n                        x0: tuple[xFieldIndex],\n                        y,\n                        y0\n                    };\n                    pointObj.source = tuple;\n                    pointObj.rowId = tuple[fieldsLen];\n                    [COLOR, SHAPE, SIZE, TEXT].forEach((enc) => {\n                        pointObj[enc] = tuple[encodingFieldInf[`${enc}FieldIndex`]];\n                    });\n                } else {\n                    pointObj = {\n                        x: d[xFieldIndex],\n                        y: d[yFieldIndex],\n                        x0: d[x0FieldIndex],\n                        y0: d[y0FieldIndex]\n                    };\n                    pointObj.source = d;\n                    pointObj.rowId = d[fieldsLen];\n                    [COLOR, SHAPE, SIZE, TEXT].forEach((enc) => {\n                        pointObj[enc] = d[encodingFieldInf[`${enc}FieldIndex`]];\n                    });\n                }\n                return pointObj;\n            });\n        }).filter(d => d.length);\n    }\n};\n/*\n * This method resolves the x, y, x0 and y0 values from the transformed data.\n * It also checks the type of transformed data for example, if it is a stacked data\n * then it fetches the y and y0 values from the stacked data.\n * @param {Array.<Array>} transformedData transformed data\n * @param {Object} fieldsConfig field definitions\n * @param {string} transformType type of transformed data - stack, group or identity.\n * @return {Array.<Object>} Normalized data\n*/\nexport const getNormalizedData = (transformedData, context) => {\n    const transformType = context.transformType();\n    const transformedDataArr = transformType === IDENTITY ? [transformedData] : transformedData;\n    const encodingFieldInf = context.encodingFieldsInf();\n    const fieldsConfig = context.data().getFieldsConfig();\n    return dataNormalizers[context.coord()](transformedDataArr, encodingFieldInf, fieldsConfig, transformType);\n};\n\nexport const domainCalculator = {\n    [POLAR]: (data, layerInst) => {\n        const config = layerInst.config();\n        const { sort } = config;\n        let angleValues = data[0];\n        const radius0Field = getObjProp(config.encoding.radius0, 'field');\n        if (sort) {\n            angleValues = angleValues.sort((a, b) => (sort === ASCENDING ? a.radius - b.radius : b.radius - a.radius));\n        }\n        const radiusDomain = getDomainFromData(data, [ENCODING.RADIUS, radius0Field ?\n            ENCODING.RADIUS0 : ENCODING.RADIUS]);\n        return {\n            radius: radiusDomain,\n            angle: angleValues.map(d => d.angle),\n            angle0: angleValues.map(d => d.angle0)\n        };\n    },\n    [CARTESIAN]: (data, layerInst) => {\n        const transformType = layerInst.transformType();\n        const encodingFieldInf = layerInst.encodingFieldsInf();\n        const {\n            xFieldSubType,\n            yFieldSubType,\n            xField,\n            yField,\n            x0Field,\n            y0Field\n        } = encodingFieldInf;\n        const domains = {};\n        const yEnc = ENCODING.Y;\n        const xEnc = ENCODING.X;\n        if (xField) {\n            domains.x = getDomainFromData(data, x0Field || transformType === STACK ? [xEnc, ENCODING.X0] : [xEnc, xEnc],\n                xFieldSubType);\n        }\n        if (yField) {\n            domains.y = getDomainFromData(data, y0Field || transformType === STACK ? [ENCODING.Y0, ENCODING.Y] :\n                [yEnc, yEnc], yFieldSubType);\n        }\n\n        return domains;\n    }\n};\n\nexport const attachDataToVoronoi = (voronoi, points) => {\n    voronoi.data([].concat(...points).filter(d => d.rowId !== undefined).map((d) => {\n        const point = d.update;\n        return {\n            x: point.x,\n            y: point.y,\n            data: d\n        };\n    }));\n};\n\n/**\n *\n *\n * @param {*} target\n * @param {*} styles\n * @param {*} remove\n */\nexport const updateStyle = (target, styles, remove) => {\n    for (const key in styles) {\n        if ({}.hasOwnProperty.call(styles, key)) {\n            target.style(key, remove ? null : styles[key]);\n        }\n    }\n};\n\n/**\n *\n *\n * @param {*} mount\n * @param {*} context\n */\nexport const animateGroup = (mount, context) => {\n    let groupTransition;\n    let update;\n    const { transition, groupAnimateStyle } = context;\n    const { duration, effect, disabled } = transition;\n    if (groupAnimateStyle) {\n        setStyles(mount.node(), groupAnimateStyle.enter);\n        update = groupAnimateStyle.update;\n        if (!disabled) {\n            groupTransition = mount.transition()\n                .ease(easeFns[effect])\n                .duration(duration)\n                .on('end', function () {\n                    updateStyle(selectElement(this), update, true);\n                });\n        } else {\n            groupTransition = mount;\n        }\n        updateStyle(groupTransition, update);\n    }\n};\n\nexport const positionPoints = (context, points) => {\n    const positioner = context.encodingTransform();\n    if (positioner) {\n        return positioner(points, context, { smartLabel: context._dependencies.smartLabel });\n    }\n    return points;\n};\n\n/**\n  * Gets the width of each group. It gets the width from axis if it is available for\n  * example when the scale is nominal else it calculates the width from the\n  * range of the axis and number of data points.\n  *\n  * @param {SimpleAxis} axis instance of axis\n  * @param {number} minDiff Minimum difference between data points\n  * @return {number} width of each bar\n  * @private\n*/\nexport const getGroupSpan = (axis, minDiff) => {\n    let groupSpan;\n    const width = axis.getUnitWidth();\n    const scale = axis.scale();\n    const range = scale.range();\n    const domain = scale.domain();\n    !width ? groupSpan = (Math.abs(range[1] - range[0]) / Math.abs(domain[1] - domain[0])) * minDiff :\n        (groupSpan = width);\n\n    return groupSpan;\n};\n\nexport const getPlotMeasurement = (context, dimensionalValues) => {\n    const fieldInfo = context.encodingFieldsInf();\n    const axes = context.axes();\n    const transformType = context.transformType();\n    const config = context.config();\n    const bandScale = context._bandScale;\n\n    return ['x', 'y'].map((type) => {\n        let span = 0;\n        let groupSpan = 0;\n        let padding = 0;\n        let offsetValues = [];\n        if (fieldInfo[`${type}FieldType`] === FieldType.DIMENSION) {\n            let actualGroupWidth;\n            const isTemporal = fieldInfo[`${type}FieldSubType`] === DimensionSubtype.TEMPORAL;\n            const timeDiff = isTemporal ? context.dataProps().timeDiffs[type] : 0;\n            const axis = axes[type];\n            const pad = config[`pad${type.toUpperCase()}`];\n            const innerPadding = config.innerPadding;\n            const keys = dimensionalValues;\n            const scale = axis.scale();\n            groupSpan = getGroupSpan(axis, timeDiff);\n            const isAxisBandScale = axis.constructor.type() === BAND;\n            const axisPadding = axis.config().padding;\n            // If it is a grouped bar then the width of each bar in a grouping is retrieved from\n            // a band scale. The band scale will have range equal to width of one group of bars and\n            // the domain is set to series keys.\n            if (transformType === 'group') {\n                const groupPadding = isAxisBandScale ? 0 : axisPadding * groupSpan / 2;\n                bandScale.range([groupPadding, groupSpan - groupPadding]).domain(keys).paddingInner(innerPadding);\n                span = bandScale.bandwidth();\n                actualGroupWidth = groupSpan - (isAxisBandScale ? 0 : axisPadding * groupSpan);\n                offsetValues = keys.map(key => bandScale(key) - (isAxisBandScale ? 0 : (groupSpan / 2)));\n            } else if (pad !== undefined) {\n                let offset;\n                if (isAxisBandScale) {\n                    const step = scale.step();\n                    offset = scale.padding() * step;\n                    span = scale.bandwidth() + offset;\n                } else {\n                    span = groupSpan;\n                }\n                offsetValues = keys.map(() => (isAxisBandScale ? -(offset / 2) : -(span / 2)));\n            } else {\n                padding = isAxisBandScale ? 0 : axisPadding * groupSpan;\n                span = groupSpan - padding;\n                actualGroupWidth = span;\n                offsetValues = keys.map(() => (isAxisBandScale ? 0 : -(span / 2)));\n            }\n\n            groupSpan = actualGroupWidth;\n            padding = isAxisBandScale ? axisPadding * axis.scale().step() : axisPadding * groupSpan;\n        }\n\n        return {\n            span,\n            offsetValues,\n            groupSpan,\n            padding\n        };\n    });\n};\n\nexport const renderLayer = (context) => {\n    const mount = context.mount();\n    if (mount) {\n        context.render(mount);\n        context.dependencies().throwback.commit(CommonProps.ON_LAYER_DRAW, true, context.metaInf().parentNamespace);\n    }\n};\n\nconst transformResolverPredicates = (encodingFieldInf, context, groupByField) => {\n    const fieldsConfig = context.data().getFieldsConfig();\n    const { xField, yField, xFieldType, yFieldType } = encodingFieldInf;\n    const dimensionField = ['xField', 'yField'].find(type =>\n        encodingFieldInf[`${type}Type`] === FieldType.DIMENSION);\n\n    return [\n        !xField,\n        !yField,\n        !groupByField,\n        getObjProp(fieldsConfig[groupByField], 'def', 'type') === FieldType.MEASURE,\n        xFieldType === FieldType.DIMENSION && yFieldType === FieldType.DIMENSION,\n        dimensionField && encodingFieldInf[dimensionField] === groupByField\n    ];\n};\n\nexport const resolveInvalidTransformType = (context) => {\n    const encodingFieldInf = context.encodingFieldsInf();\n    const groupByField = context.config().transform.groupBy;\n\n    if (transformResolverPredicates(encodingFieldInf, context, groupByField).some(value => value)) {\n        return IDENTITY;\n    }\n    return null;\n};\n\nexport const getValidTransform = context => resolveInvalidTransformType(context) || context.config().transform.type;\n\nexport const getValidTransformForAggFn = (context) => {\n    const resolvedInvalidTransformType = resolveInvalidTransformType(context);\n    if (resolvedInvalidTransformType) {\n        return resolvedInvalidTransformType;\n    }\n\n    const {\n        xField,\n        yField,\n        xFieldType,\n        yFieldType\n    } = context.encodingFieldsInf();\n    const groupByField = context.config().transform.groupBy;\n    const isCustomTransformTypeProvided = !!getObjProp(context._customConfig, 'transform', 'type');\n    let transformType = context.config().transform.type;\n\n    if (!isCustomTransformTypeProvided && groupByField && xFieldType !== yFieldType) {\n        const measureField = xFieldType === FieldType.MEASURE ? xField : yField;\n        const { [measureField]: aggFn } = retrieveNearestGroupByReducers(context.data(), measureField);\n        transformType = aggFn === AGG_FN_SUM ? STACK : GROUP;\n    }\n\n    return transformType;\n};\n\nexport const getMarkId = (source, schema) => source.filter((val, i) => schema[i] &&\n    schema[i].type === FieldType.DIMENSION).join();\n\nexport const resolveEncodingValues = (data, i, dataArr, layerInst) => {\n    const transformedValues = {};\n    const values = data.values;\n    const encoding = layerInst.config().encoding;\n    for (const key in values) {\n        const value = getObjProp(encoding[key], 'value');\n        if (value instanceof Function) {\n            transformedValues[key] = value(values, i, dataArr, layerInst);\n        } else {\n            transformedValues[key] = values[key];\n        }\n    }\n    return transformedValues;\n};\n\nexport const getColorMetaInf = (color, colorAxis) => ({\n    originalColor: colorAxis.getHslArray(color),\n    stateColor: {},\n    colorTransform: {}\n});\n\nconst getCoordValue = (radius, trig, angle, offset) => radius * Math[trig](angle) + offset;\n\nconst coordValueGetter = (radius, angle, xOffset, yOffset) => ({\n    x: getCoordValue(radius, 'cos', angle, xOffset),\n    y: getCoordValue(radius, 'sin', angle, yOffset)\n});\n\nexport const toCartesianCoordinates = (points, measurement, rangePlot = false) => {\n    const xOffset = measurement.width / 2;\n    const yOffset = measurement.height / 2;\n    for (let i = 0, len = points.length; i < len; i++) {\n        const point = points[i];\n        const { angle, radius, radius0, angle0 } = point.update;\n        point.update = coordValueGetter(radius, angle, xOffset, yOffset);\n        if (rangePlot) {\n            const update = point.update = coordValueGetter(radius0, angle0, xOffset, yOffset);\n            const { x: x0, y: y0 } = coordValueGetter(radius, angle, xOffset, yOffset);\n            update.x0 = x0;\n            update.y0 = y0;\n        }\n    }\n    return points;\n};\n\nexport const sortData = (data, axes) => {\n    const { x: xAxis, y: yAxis } = axes;\n    const axisArr = [xAxis, yAxis];\n    for (let i = 0, len = axisArr.length; i < len; i++) {\n        const axis = axisArr[i];\n        if (axis.constructor.type() === BAND) {\n            const key = i ? 'y' : 'x';\n            const dom = axis.domain();\n            const indices = dom.reduce((acc, v, idx) => {\n                acc[v] = idx;\n                return acc;\n            }, {});\n            data.sort((a, b) => indices[a[key]] - indices[b[key]]);\n            break;\n        }\n    }\n    return data;\n};\n","import * as PROPS from '../enums/props';\n\nexport const localOptions = {\n    [PROPS.DATA]: {\n        value: null\n    }\n};\n","import { STATE_NAMESPACES } from 'muze-utils';\nimport * as PROPS from '../enums/props';\nimport { encodingFieldInfRetriever } from '../helpers';\n\nexport const listenerMap = [\n    {\n        props: [`${STATE_NAMESPACES.LAYER_LOCAL_NAMESPACE}.${PROPS.DATA}`],\n        type: 'registerImmediateListener',\n        listener: (context, [, data]) => {\n            const config = context.config();\n            if (data && config) {\n                if (context._cacheEnabled) {\n                    context._cachedData.push(data);\n                } else {\n                    context._cachedData = [data];\n                }\n                const encodingValue = config.encoding;\n                if (encodingValue) {\n                    const fieldsConfig = data.getFieldsConfig();\n                    const encodingFieldsInf = encodingFieldInfRetriever[context.coord()](encodingValue, fieldsConfig);\n                    context.encodingFieldsInf(encodingFieldsInf);\n                    context.resolveTransformType();\n                    context._transformedData = context.getTransformedData(data, config,\n                        context.transformType(), encodingFieldsInf);\n                    context._normalizedData = context.getNormalizedData(context._transformedData, fieldsConfig);\n                    if (config.calculateDomain !== false) {\n                        const domain = context.calculateDomainFromData(context._normalizedData,\n                            context.encodingFieldsInf(), context.data().getFieldsConfig());\n                        context.domain(domain);\n                    }\n                }\n            }\n        },\n        namespace: context => context.metaInf().namespace\n    }\n];\n","import {\n    getUniqueId,\n    mergeRecursive,\n    FieldType,\n    selectElement,\n    ReservedFields,\n    DataModel,\n    clone,\n    generateGetterSetters,\n    STATE_NAMESPACES,\n    COORD_TYPES,\n    transactor,\n    defaultValue,\n    getObjProp\n} from 'muze-utils';\nimport { SimpleLayer } from '../simple-layer';\nimport * as PROPS from '../enums/props';\nimport { props } from './props';\nimport {\n    transformData,\n    getNormalizedData,\n    applyInteractionStyle,\n    getValidTransform,\n    domainCalculator,\n    renderLayer\n} from '../helpers';\nimport { localOptions } from './local-options';\nimport { listenerMap } from './listener-map';\n\nconst layerNs = [STATE_NAMESPACES.LAYER_GLOBAL_NAMESPACE, STATE_NAMESPACES.LAYER_LOCAL_NAMESPACE];\nconst groupNs = STATE_NAMESPACES.GROUP_GLOBAL_NAMESPACE;\n\n/**\n * An abstract class which gives definition of common layer functionality like\n * - transforming data for various modes. Supported modes: identity, group and stack.\n * - calculating data domain\n * - linking dependent layers\n * - merging policy of configuration\n * - interaction sideffect helpers\n * - retrieving dom elements from data using id\n * - retrieving the physical dimensions of marks\n * - disposing layer\n *\n * Every layer has to extend base layer and give concrete definition.\n * This layer does not have any default visual. A new layer has to define the logic of `render` for rendering the\n * visuals\n *\n * @public\n * @class\n * @module BaseLayer\n */\nexport default class BaseLayer extends SimpleLayer {\n\n    /**\n     * Creates a layer using a configuration and data.\n     *\n     * @public\n     * @constructor\n     * @param {DataModel} data Instance of DataModel to be used. This DataModel instance serves as the data for a layer.\n     * @param {Object} axes Axes instances to be used for rendering the layer. Axes are used for mapping data from\n     *      value to px.\n     * @param {SimpleAxis} axes.x X axis of the layer. Based on the type of variable it gets instance of BandAxis,\n     *      TimeAxis, ContinuousAxis\n     * @param {SimpleAxis} axes.y X axis of the layer. Based on the type of variable it gets instance of BandAxis,\n     *      TimeAxis, ContinuousAxis\n     * @param {ColorAxis} axes.color Axis for coloring a layer using color interpolators\n     * @param {ShapeAxis} axes.shape Axis for providing a shape\n     * @param {SizeAxis} axes.size Axis for determining size of a mark using size interpolator\n     * @param {LayerConfig} config Configuration of the layer\n     * @param {Object} dependencies Dependencies of the layer\n     * @param {SmartLabel} dependencies.smartLabel Smartlabel singleton instance\n     */\n    constructor (data, axes, config, dependencies = {}) {\n        super();\n\n        generateGetterSetters(this, props);\n        this.axes(axes);\n        this.alias(this.constructor.formalName() + getUniqueId());\n        this.dependencies(dependencies);\n        this._points = [];\n        this._cachedData = [];\n        this._id = getUniqueId();\n        this._measurement = {};\n        this._animationDonePromises = [];\n        this._graphicElems = {};\n        this._customConfig = null;\n    }\n\n    static getState () {\n        return [\n            {\n                domain: null\n            },\n            Object.keys(localOptions).reduce((acc, v) => {\n                acc[v] = localOptions[v].value;\n                return acc;\n            }, {})\n        ];\n    }\n\n    static getListeners () {\n        return {\n            store: [...listenerMap, {\n                type: 'registerChangeListener',\n                props: [`${layerNs[1]}.${PROPS.DATA}`,\n                    ...['x', 'y', 'radius'].map(type => `${groupNs}.domain.${type}`)],\n                listener: (context) => {\n                    renderLayer(context);\n                },\n                subNamespace: (context) => {\n                    const { unitRowIndex, unitColIndex, namespace } = context.metaInf();\n                    return {\n                        [`${layerNs[1]}.${PROPS.DATA}`]: namespace,\n                        [`${groupNs}.domain.x`]: `${unitColIndex}0`,\n                        [`${groupNs}.domain.y`]: `${unitRowIndex}0`,\n                        [`${groupNs}.domain.radius`]: `${unitRowIndex}-${unitColIndex}`\n                    };\n                }\n            }],\n            throwback: []\n        };\n    }\n\n    static getQualifiedStateProps () {\n        const layerState = BaseLayer.getState();\n        return layerState.map((state, i) => Object.keys(state).map(prop => `${layerNs[i]}.${prop}`));\n    }\n\n    store (...params) {\n        if (params.length) {\n            const store = this._store = params[0];\n            const { namespace } = this.metaInf();\n            store.addSubNamespace(namespace, BaseLayer.formalName(), this);\n\n            transactor(this, localOptions, store, {\n                subNamespace: namespace,\n                namespace: `${STATE_NAMESPACES.LAYER_LOCAL_NAMESPACE}`\n            });\n            return this;\n        }\n        return this._store;\n    }\n\n    domain (...dom) {\n        const prop = `${STATE_NAMESPACES.LAYER_GLOBAL_NAMESPACE}.${PROPS.DOMAIN}`;\n        const store = this.store();\n        if (dom.length) {\n            const { parentNamespace, namespace } = this.metaInf();\n            const domain = defaultValue(store.get(prop, parentNamespace), {});\n            domain[namespace] = dom[0];\n            this.store().commit(prop, domain, parentNamespace);\n            return this;\n        }\n        return this.store().get(prop, this.metaInf().namespace);\n    }\n\n    /**\n     * Creates a layer instance\n     * @return {BaseLayer} Instance of a layer\n     */\n    static create (...params) {\n        return new this(...params);\n    }\n\n    /**\n     * Default configuration of the layer. This configuration gets merged to the user passed configuration using a\n     * plolicy. Base layer only returns part of configuraion, any layer overridding base layer should return its own\n     * configuration.\n     *\n     * @public\n     * @static\n     *\n     * @return {Object} Default configuration\n     */\n    static defaultConfig () {\n        return {\n            transform: {\n                type: 'identity'\n            }\n        };\n    }\n\n    /**\n     * Policy defines how user config gets merged to default config. The default policy here does a deep copy\n     * operation.\n     * Any policy which does more than deep copying should define the policy as a static member.\n     *\n     * @static\n     * @public\n     *\n     * @param {LayerConfig} conf Configuration with which the user config will be merged\n     * @param {LayerConfig} userConf Configuration given by the user\n     *\n     * @return {LayerConfig} Merged layer configuration\n     */\n    static defaultPolicy (conf, userConf) {\n        return mergeRecursive(conf, userConf);\n    }\n\n    /**\n     * Determines a name for a layer. This name of the layer is used in the input data to refer to this layer.\n     * ```\n     *  .layers([\n     *      mark: 'bar',\n     *      encoding: { ... }\n     *  ])\n     * ```\n     *\n     * @static\n     * @public\n     *\n     * @return {string} name of layer\n     */\n    static formalName () {\n        return 'base';\n    }\n\n    encodingFieldsInf (...fieldsInf) {\n        if (fieldsInf.length) {\n            this._encodingFieldsInf = fieldsInf[0];\n            return this;\n        }\n        return this._encodingFieldsInf;\n    }\n\n    encodingTransform (...encodingTransform) {\n        if (encodingTransform.length) {\n            this._encodingTransform = encodingTransform[0];\n            return this;\n        }\n        return this._encodingTransform;\n    }\n\n    /**\n     * Provides a alias for a layer. Like it's possible to have same layer (like bar) multiple times, but among multiple\n     * layers of same type if one layer has to be referred, alias is used. If no alias is given then `formalName` is set\n     * as the alias name.\n     *\n     *\n     * If used as setter\n     * @param  {string} alias Name of the alias\n     * @return {BaseLayer} Instance of current base layer\n     *\n     * If used as getter\n     * @return {string} Alias of the current layer\n     *\n     * @public\n     */\n    alias (...params) {\n        if (params.length) {\n            this._alias = params[0];\n            return this;\n        }\n        return this._alias || this.constructor.formalName();\n    }\n\n    dependencies (...params) {\n        if (params.length) {\n            this._dependencies = params[0];\n            return this;\n        }\n        return this._dependencies;\n    }\n\n    enableCaching () {\n        this._cacheEnabled = true;\n        return this;\n    }\n\n    clearCaching () {\n        this._cacheEnabled = false;\n        return this.data(this._cachedData[0]);\n    }\n\n    /**\n     * Serialize the schema. Merge config is used for serialization.\n     *\n     * @public\n     *\n     * @return {LayerConfig} Serialized schema\n     */\n    serialize () {\n        return this.config();\n    }\n\n    /**\n     * Returns the unique identifier of this layer. Id is auto generated during the creation proceess of a schema.\n     *\n     * @public\n     *\n     * @return {string} id of the layer\n     */\n    id () {\n        return this._id;\n    }\n\n    /**\n     * Returns the transformed data based on given transform type.\n     * It first gets the transform method from transform factory based on type of transform. It then calls the\n     * transform method with the data and passes the configuration parameters of transform such as\n     * groupBy, value field, etc.\n     *\n     * @param {DataModel} dataModel Instance of DataModel\n     * @param {Object} config Configuration for transforming data\n     * @return {Array.<Array>} Transformed data.\n     */\n    getTransformedData (dataModel, config, transformType, encodingFieldsInf) {\n        return transformData(dataModel, config, transformType, encodingFieldsInf);\n    }\n\n    /**\n     * Calculates the domain from the data.\n     * It checks the type of field and calculates the domain based on that. For example, if it\n     * is a quantitative or temporal field, then it calculates the min and max from the data or\n     * if it is a categorical field then it gets all the values from the data of that field.\n     * @param {Array} data DataArray\n     * @param {Object} fieldsConfig Configuration of fields\n     * @return {Array} Domain values array.\n     */\n    calculateDomainFromData (data) {\n        let domains = {};\n        const isEmpty = this.data().isEmpty();\n\n        if (!isEmpty) {\n            domains = domainCalculator[this.coord()](data, this);\n        }\n        return domains;\n    }\n\n    static shouldDrawAnchors () {\n        return false;\n    }\n\n    /**\n     * Returns the domain for the axis.\n     *\n     * @param {string} encodingType type of encoding x, y, etc.\n     * @return {Object} Axis domains\n     */\n    getDataDomain (encodingType) {\n        const { parentNamespace, namespace } = this.metaInf();\n        const domains = getObjProp(this.store()\n            .get(`${STATE_NAMESPACES.LAYER_GLOBAL_NAMESPACE}.${PROPS.DOMAIN}`, parentNamespace), namespace);\n        return encodingType !== undefined ? domains[encodingType] || [] : domains;\n    }\n\n    /**\n     * Normalizes the transformed data and returns it.\n     *\n     * @param {string} encodingType type of encoding x, y, etc.\n     * @return {Object} Axis domains\n     */\n    getNormalizedData (transformedData) {\n        return getNormalizedData(transformedData, this);\n    }\n\n    /**\n     * Gets the nearest point closest to the given x and y coordinate. If no nearest point is found, then it returns\n     * null.\n     *\n     * @public\n     *\n     * @param {number} x X Coordinate.\n     * @param {number} y Y Coordinate.\n     *\n     * @return {Object} Information of the nearest point.\n     * ```\n     *      {\n     *          // id property contains the field names and their corresponding values in a 2d array. This is the data\n     *          // associated with the nearest point.\n     *          id: // Example data: [['Origin'], ['USA']],\n     *          dimensions: // Physical dimensions of the point.\n     *          layerId: // Id of the layer instance.\n     *      }\n     * ```\n     */\n    getNearestPoint () {\n        return null;\n    }\n\n    applyInteractionStyle (interactionType, selectionSet, apply, styles) {\n        const interactionConfig = this.config().interaction || {};\n\n        let interactionStyles = interactionConfig[interactionType];\n        interactionStyles = styles || interactionStyles;\n        if (interactionStyles) {\n            applyInteractionStyle(this, selectionSet, interactionStyles, {\n                apply,\n                interactionType\n            });\n        }\n    }\n\n    disableUpdate () {\n        this._updateLock = true;\n        return this;\n    }\n\n    enableUpdate () {\n        this._updateLock = false;\n        return this;\n    }\n\n    resolveTransformType () {\n        this._transformType = getValidTransform(this);\n    }\n\n    transformType () {\n        return this._transformType;\n    }\n\n    /**\n     * Renders the layer\n     * @return {BaseLayer} Instance of the layer.\n     */\n    render () {\n        return this;\n    }\n\n    /**\n     *\n     *\n     *\n     * @memberof BaseLayer\n     */\n    elemType () {\n        return 'g';\n    }\n\n    /**\n     * Disposes the entire layer.\n     *\n     * @return {BaseLayer} Instance of layer.\n     */\n    remove () {\n        const { namespace, parentNamespace } = this.metaInf();\n        const store = this.store();\n        store.removeSubNamespace(namespace, BaseLayer.formalName());\n        const layersDomain = store.get(`${STATE_NAMESPACES.LAYER_GLOBAL_NAMESPACE}.domain`);\n        const unitDom = layersDomain[parentNamespace];\n        unitDom && (delete unitDom[namespace]);\n        selectElement(this.mount()).remove();\n        return this;\n    }\n\n    /**\n     * Stores point in an object with key as the categorical value or temporal value\n     *\n     * @param {string} key categorical value or temporal value\n     * @param {Object} data Information of the data point\n     * @return {BarLayer} Instance of bar layer\n     */\n    cachePoint (key, data) {\n        if (key === null) {\n            return this;\n        }\n        const pointMap = this._pointMap;\n        !pointMap[key] && (pointMap[key] = []);\n        pointMap[key].push(data);\n        return this;\n    }\n\n    /**\n     *\n     *\n     * @param {*} dataProps\n     *\n     * @memberof BaseLayer\n     */\n    dataProps (...dataProps) {\n        if (dataProps.length) {\n            this._dataProps = dataProps[0];\n            return this;\n        }\n        return this._dataProps;\n    }\n\n    /**\n     *\n     *\n     * @param {*} data\n     * @param {*} id\n     *\n     * @memberof BaseLayer\n     */\n    getIdentifiersFromData (data) {\n        const schema = this.data().getSchema();\n        const fieldsConfig = this.data().getFieldsConfig();\n        const identifiers = [[], []];\n        const {\n                xFieldType,\n                yFieldType,\n                xField,\n                yField\n            } = this.encodingFieldsInf();\n\n        const [xMeasure, yMeasure] = [xFieldType, yFieldType].map(type => type === FieldType.MEASURE);\n        schema.forEach((d, i) => {\n            const name = d.name;\n            if (fieldsConfig[name].def.type === FieldType.DIMENSION) {\n                identifiers[0].push(name);\n                identifiers[1].push(data[i]);\n            }\n        });\n\n        if (xMeasure && yMeasure) {\n            const xMeasureIndex = fieldsConfig[xField].index;\n            const yMeasureIndex = fieldsConfig[yField].index;\n            identifiers[0].push(...[xField, yField]);\n            identifiers[1].push(...[data[xMeasureIndex], data[yMeasureIndex]]);\n        }\n        return identifiers;\n    }\n\n    hasPlotSpan () {\n        return false;\n    }\n\n    getPlotSpan () {\n        return {\n            x: 0,\n            y: 0\n        };\n    }\n\n    getPlotPadding () {\n        return {\n            x: 0,\n            y: 0\n        };\n    }\n\n    /**\n     * Returns the information of the marks corresponding to the supplied identifiers. Identifiers are a set of field\n     * names and their corresponding values in an array. It can also be an instance of datamodel.\n     *\n     * For example,\n     * ```\n     *  const identifiers = [\n     *      ['Origin', 'Cylinders'],\n     *      ['USA', '8']\n     *  ];\n     *  const points = barLayer.getPointsFromIdentifiers(identifiers);\n     * ```\n     * @public\n     * @param {Array|DataModel} identifiers Identifiers of the marks.\n     * @param {Object} config Optional configuration which describes how to get the information.\n     * @param {boolean} config.getAllAttrs If true, then returns all the information of the points, else returns only\n     * the positions of the points.\n     * @param {boolean} config.getBBox If true, then returns the bounding box of all the marks.\n     *\n     * @return {Array} Array of points contains\n     */\n    getPointsFromIdentifiers (identifiers, config = {}) {\n        const getAllAttrs = config.getAllAttrs;\n        const getBBox = config.getBBox;\n        if (!this.data()) {\n            return [];\n        }\n        let fieldNames;\n        let values;\n        if (identifiers instanceof DataModel) {\n            const dataObj = identifiers.getData();\n            fieldNames = dataObj.schema.map(d => d.name);\n            values = dataObj.data;\n        } else {\n            fieldNames = identifiers[0];\n            values = identifiers.slice(1, identifiers.length);\n        }\n\n        const points = this._points;\n        const fieldsConfig = this.data().getFieldsConfig();\n\n        const filteredPoints = [].concat(...points).filter((point) => {\n            const { source, rowId } = point;\n\n            return fieldNames.every((field, idx) => {\n                if (field in fieldsConfig && fieldsConfig[field].def.type === FieldType.DIMENSION) {\n                    return values.findIndex(d => d[idx] === source[fieldsConfig[field].index]) !== -1;\n                } else if (field === ReservedFields.ROW_ID) {\n                    return values.findIndex(d => d[idx] === rowId) !== -1;\n                } return true;\n            });\n        });\n        return getAllAttrs ? filteredPoints : filteredPoints.map((d) => {\n            const obj = clone(d);\n            if (getBBox) {\n                const update = obj.update || obj;\n                if (obj.size !== undefined) {\n                    const sizeVal = Math.sqrt(obj.size / Math.PI) * 2;\n                    update.width = sizeVal;\n                    update.height = sizeVal;\n                    update.x -= sizeVal / 2;\n                    update.y -= sizeVal / 2;\n                } else {\n                    if (update.width === undefined) {\n                        update.width = 2;\n                    }\n                    if (update.height === undefined) {\n                        update.height = 2;\n                    }\n                }\n            }\n\n            return obj.update || obj;\n        }).sort((a, b) => a.y - b.y);\n    }\n\n    getTransformedDataFromIdentifiers (identifiers) {\n        const { data: identifierData, schema: identifierSchema } = identifiers.getData();\n        const normalizedData = this._normalizedData;\n        const fieldsConfig = this.data().getFieldsConfig();\n        const {\n            yField,\n            xField,\n            yFieldType,\n            xFieldType\n        } = this.encodingFieldsInf();\n        let measureIndex;\n        let enc;\n        if (xFieldType === FieldType.MEASURE) {\n            measureIndex = fieldsConfig[xField].index;\n            enc = 'x';\n        } else if (yFieldType === FieldType.MEASURE) {\n            measureIndex = fieldsConfig[yField].index;\n            enc = 'y';\n        }\n\n        const transformedData = [];\n        normalizedData.forEach((dataArr) => {\n            dataArr.forEach((dataObj) => {\n                const tupleArr = dataObj.source;\n                const exist = identifierSchema.every((obj, i) =>\n                    identifierData.findIndex(d => tupleArr[fieldsConfig[obj.name].index] === d[i]) !== -1);\n                if (exist) {\n                    const transformedVal = dataObj[enc];\n                    const row = dataObj.source;\n                    const tuple = {};\n                    for (const key in fieldsConfig) {\n                        const index = fieldsConfig[key].index;\n                        tuple[key] = row[index];\n                        if (index === measureIndex) {\n                            tuple[key] = transformedVal;\n                        }\n                    }\n                    transformedData.push(tuple);\n                }\n            });\n        });\n\n        return [transformedData, this.data().getSchema()];\n    }\n\n    /**\n     * Returns the dom elements associated with the supplied set of row ids.\n     * Each element in the layer is mapped with a row of the datamodel. When given an array of row ids, it returns all\n     * the elements which is mapped with those row ids.\n     *\n     * @public\n     * @param {Array} set Array of row ids\n     *\n     * @return {Selection} D3 Selection of dom elements.\n     */\n    getPlotElementsFromSet (set) {\n        const graphicElems = this._graphicElems;\n        const elems = [];\n        for (let i = 0, len = set.length; i < len; i++) {\n            const elem = graphicElems[set[i]];\n            if (elem) {\n                elems.push(elem);\n            }\n        }\n        return elems;\n    }\n\n    /**\n     * Notifies when all animations/transitions of the layer are completed.\n     *\n     * @public\n     * @return {Promise} Returns a promise to notify the animation completion.\n     */\n    animationDone () {\n        return Promise.all(this._animationDonePromises);\n    }\n\n    registerAnimationDoneHook () {\n        let resolveFn;\n        const promise = new Promise((resolve) => {\n            resolveFn = resolve;\n        });\n        this._animationDonePromises.push(promise);\n\n        return () => {\n            resolveFn();\n        };\n    }\n\n    getRenderProps () {\n        if (this.coord() === COORD_TYPES.POLAR) {\n            return [`${STATE_NAMESPACES.GROUP_GLOBAL_NAMESPACE}.domain.radius`];\n        }\n        const { unitRowIndex: rowIndex, unitColIndex: colIndex } = this.metaInf();\n        return [`${STATE_NAMESPACES.GROUP_GLOBAL_NAMESPACE}.domain.y.${rowIndex}0`,\n            `${STATE_NAMESPACES.GROUP_GLOBAL_NAMESPACE}.domain.x.${colIndex}0`];\n    }\n}\n","import {\n    selectElement,\n    makeElement,\n    pathInterpolators,\n    Symbols\n} from 'muze-utils';\nimport { updateStyle } from '../../helpers';\n\nconst line = Symbols.line;\n\nconst filterFn = (d) => {\n    const { update } = d;\n    return update.y !== null && update.x !== null;\n};\n\n/**\n * Draws a line from the points\n * Generates a svg path string\n * @param {Object} params Contains container, points and interpolate attribute.\n */\nexport const drawLine = (context) => {\n    let filteredPoints;\n    const { layer, container, points, interpolate, connectNullData, className, style, transition } = context;\n    const mount = selectElement(container).attr('class', className);\n    const curveInterpolatorFn = pathInterpolators[interpolate];\n    const linepath = line()\n                .curve(curveInterpolatorFn)\n                .x(d => d.update.x)\n                .y(d => d.update.y)\n                .defined(filterFn);\n\n    filteredPoints = points;\n    if (connectNullData) {\n        filteredPoints = points.filter(filterFn);\n    }\n\n    updateStyle(mount, style);\n    let element = makeElement(mount, 'path', points.length ? [points[0].className] : []);\n    element.attr('class', d => d);\n    if (!transition.disabled) {\n        element = element.transition()\n        .duration(transition.duration)\n        .on('end', layer.registerAnimationDoneHook());\n    }\n    element.attr('d', linepath(filteredPoints))\n                    .style('fill-opacity', 0);\n    return element;\n};\n","import { CLASSPREFIX } from '../../enums/constants';\n\nexport const defaultConfig = {\n    classPrefix: CLASSPREFIX,\n    defClassName: 'layer-line',\n    className: '',\n    interpolate: 'linear',\n    transform: {\n        type: 'group'\n    },\n    interaction: {\n        highlight: [{\n            type: 'stroke',\n            intensity: [0, 0, -15, 0]\n        }],\n        fade: [{\n            type: 'stroke',\n            intensity: [0, 0, +15, 0]\n        }],\n        focus: [{\n            type: 'stroke',\n            intensity: [0, 0, +15, 0]\n        }]\n    },\n    nearestPointThreshold: 20,\n    encoding: {\n        color: {},\n        x: {},\n        y: {},\n        strokeOpacity: {\n            value: 1\n        }\n    },\n    transition: {\n        effect: 'cubic',\n        duration: 1000\n    },\n    connectNullData: false\n};\n\n","import {\n    Voronoi,\n    getQualifiedClassName,\n    selectElement,\n    makeElement,\n    FieldType,\n    InvalidAwareTypes,\n    getObjProp\n} from 'muze-utils';\nimport { BaseLayer } from '../../base-layer';\nimport { drawLine } from './renderer';\nimport { defaultConfig } from './default-config';\nimport { ENCODING } from '../../enums/constants';\nimport {\n    attachDataToVoronoi,\n    animateGroup,\n    positionPoints,\n    getIndividualClassName,\n    getColorMetaInf,\n    resolveEncodingValues,\n    sortData\n} from '../../helpers';\n\nimport './styles.scss';\n\n/**\n * This layer is used to render straight or smoothed line paths. The mark type of this layer is ```line```.\n *\n * @public\n *\n * @class\n * @module LineLayer\n * @extends BaseLayer\n */\nexport default class LineLayer extends BaseLayer {\n\n    /**\n     * Creates an instance of LineLayer.\n     * @param {*} args\n     * @memberof LineLayer\n     */\n    constructor (...args) {\n        super(...args);\n        this._voronoi = new Voronoi();\n    }\n\n    static formalName () {\n        return 'line';\n    }\n\n    elemType () {\n        return 'path';\n    }\n\n    /**\n     * Default configuration of line layer\n     * @return {Object} Default configuration of layer\n     */\n    static defaultConfig () {\n        return defaultConfig;\n    }\n\n    static defaultPolicy (conf, userConf) {\n        const config = BaseLayer.defaultPolicy(conf, userConf);\n        const encoding = config.encoding;\n        const transform = config.transform;\n        const colorField = encoding.color && encoding.color.field;\n\n        if (colorField && !transform.groupBy) {\n            transform.groupBy = colorField;\n        }\n        return config;\n    }\n\n    /**\n     * Returns the draw method for line\n     * @return {Function} Draw method of line layer\n     */\n    getDrawFn () {\n        return drawLine;\n    }\n\n    static shouldDrawAnchors () {\n        return true;\n    }\n\n    /**\n     * Generates the x and y positions for each point\n     * @param {Array} data Data Array\n     * @param {Object} encoding Visual Encodings of the layer\n     * @param {Object} axes Contains the axis\n     * @param {number} seriesIndex index of series\n     * @return {Array} Array of points\n     */\n    translatePoints (data) {\n        let points = [];\n        const axes = this.axes();\n        const xAxis = axes.x;\n        const yAxis = axes.y;\n        const colorAxis = axes.color;\n        const { xFieldType, yFieldType } = this.encodingFieldsInf();\n        const isXDim = xFieldType === FieldType.DIMENSION;\n        const isYDim = yFieldType === FieldType.DIMENSION;\n        const key = isXDim ? ENCODING.X : (isYDim ? ENCODING.Y : null);\n        sortData(data, axes);\n        points = data.map((d, i) => {\n            const xPx = xAxis.getScaleValue(d.x) + xAxis.getUnitWidth() / 2;\n            const yPx = yAxis.getScaleValue(d.y) + yAxis.getUnitWidth() / 2;\n            const color = colorAxis.getColor(d.color);\n\n            const resolvedEncodings = resolveEncodingValues({\n                values: {\n                    x: xPx,\n                    y: yPx,\n                    color\n                },\n                data: d\n            }, i, data, this);\n\n            const point = {\n                enter: {},\n                update: {\n                    x: d.x instanceof InvalidAwareTypes ? null : resolvedEncodings.x,\n                    y: d.y instanceof InvalidAwareTypes ? null : resolvedEncodings.y\n                },\n                style: {\n                    stroke: resolvedEncodings.color,\n                    'fill-opacity': 0\n                },\n                rowId: d.rowId,\n                source: d.source,\n                meta: getColorMetaInf(resolvedEncodings.color, colorAxis)\n            };\n            point.className = getIndividualClassName(d, i, data, this);\n            this.cachePoint(d[key], point);\n            return point;\n        });\n        points = positionPoints(this, points);\n\n        points = points.filter((point) => {\n            const { update } = point;\n            return !isNaN(update.x) && !isNaN(update.y);\n        });\n        return points;\n    }\n\n    /**\n     * Renders the line plot\n     * @param {SVGElement} container svg element\n     * @return {LineLayer} instance of line layer\n     */\n    render (container) {\n        let points;\n        let seriesClassName;\n        let style;\n\n        const config = this.config();\n        const {\n            encoding,\n            interpolate,\n            className,\n            defClassName,\n            transition\n        } = config;\n        const normalizedData = this._normalizedData;\n        const transformedData = this._transformedData;\n        const fieldsConfig = this.data().getFieldsConfig();\n        const axes = this.axes();\n        const keys = transformedData.map(d => d.key);\n        const qualifiedClassName = getQualifiedClassName(defClassName, this.id(), config.classPrefix);\n        const containerSelection = selectElement(container);\n        const colorField = encoding.color.field;\n        const colorFieldIndex = fieldsConfig[colorField] && fieldsConfig[colorField].index;\n\n        this._points = [];\n        this._pointMap = {};\n        containerSelection.classed(qualifiedClassName.join(' '), true);\n        containerSelection.classed(className, true);\n        makeElement(container, 'g', normalizedData, null, {\n            enter: (group) => {\n                animateGroup(group, {\n                    transition,\n                    groupAnimateStyle: {\n                        enter: {\n                            'stroke-opacity': 0,\n                            'fill-opacity': this.getPathStyle()['fill-opacity']\n                        },\n                        update: {\n                            'stroke-opacity': encoding.strokeOpacity.value\n                        }\n                    }\n                });\n            },\n            update: (group, dataArr, i) => {\n                points = this.translatePoints(dataArr);\n                this._points.push(points);\n                seriesClassName = `${qualifiedClassName[0]}-${keys[i] || i}`.toLowerCase();\n\n                let color;\n                const colorValFn = encoding.color.value;\n                const colorVal = points.find(d => d.source[colorFieldIndex] !== null &&\n                        d.source[colorFieldIndex] !== undefined);\n\n                if (colorValFn) {\n                    color = colorValFn(dataArr, i, normalizedData);\n                } else {\n                    color = axes.color.getColor(colorVal && colorVal.source[colorFieldIndex]);\n                }\n\n                style = this.getPathStyle(color);\n                this.getDrawFn()({\n                    layer: this,\n                    container: group.node(),\n                    interpolate,\n                    points,\n                    className: seriesClassName,\n                    transition,\n                    style: style || {},\n                    connectNullData: config.connectNullData\n                });\n            }\n        }, d => d[0].source[colorFieldIndex] || d[0].rowId);\n\n        attachDataToVoronoi(this._voronoi, this._points);\n        return this;\n    }\n\n    /**\n     * Get the css styles need to be applied on the line path\n     * @param {string} color Color value\n     * @return {Object} Path styles\n     */\n    getPathStyle (color) {\n        return {\n            stroke: color,\n            'fill-opacity': '0'\n        };\n    }\n\n    /**\n     * Gets the nearest point closest to the given position\n     * @param {number} x x position\n     * @param {number} y y position\n     * @return {Object} Nearest point information\n     */\n    getNearestPoint (x, y, config) {\n        let searchRadius = config.searchRadius;\n        const data = this.data();\n\n        if (!data || (data && data.isEmpty())) {\n            return null;\n        }\n\n        searchRadius = searchRadius !== undefined ? searchRadius : this.config().nearestPointThreshold;\n        const point = this._voronoi.find(x, y, searchRadius);\n        const dimensions = getObjProp(point, 'data', 'data', 'update');\n\n        if (point) {\n            const { source, rowId } = point.data.data;\n            const identifiers = this.getIdentifiersFromData(source, rowId);\n            return {\n                id: identifiers,\n                dimensions: [{\n                    x: dimensions.x,\n                    y: dimensions.y,\n                    width: 2,\n                    height: 2\n                }],\n                layerId: this.id()\n            };\n        }\n        return null;\n    }\n}\n","import {\n    easeFns,\n    selectElement,\n    pathInterpolators,\n    Symbols\n} from 'muze-utils';\n\nconst area = Symbols.area;\n/**\n * Draws a line from the points\n * Generates a svg path string\n * @param {Object} params Contains container, points and interpolate attribute.\n */\nconst /* istanbul ignore next */ drawArea = (params) => {\n    let filteredPoints;\n    const { layer, container, points, style, transition, className, connectNullData, interpolate } = params;\n\n    const { effect: easeEffect, duration } = transition;\n    const mount = selectElement(container);\n    const curveInterpolatorFn = pathInterpolators[interpolate];\n    const selection = mount.selectAll('path').data(points.length ? [points[0].className] : []);\n    const [enterAreaPath, updateAreaPath] = ['enter', 'update'].map(e => area().curve(curveInterpolatorFn)\n                    .x(d => d[e].x)\n                    .y1(d => d[e].y)\n                    .y0(d => d[e].y0)\n                    .defined(d => d[e].y !== null\n            ));\n\n    filteredPoints = points;\n    mount.attr('class', className);\n    if (connectNullData) {\n        filteredPoints = points.filter(d => d.update.y !== null);\n    }\n    const selectionEnter = selection.enter().append('path').attr('d', enterAreaPath(filteredPoints));\n    selection.merge(selectionEnter).transition().ease(easeFns[easeEffect])\n                    .duration(duration)\n                    .on('end', layer.registerAnimationDoneHook())\n                    .attr('d', updateAreaPath(filteredPoints))\n                    .each(function (d) {\n                        const element = selectElement(this);\n                        element.attr('class', d);\n                        Object.keys(style).forEach(key => element.style(key, style[key]));\n                    });\n};\n\nexport default drawArea;\n","import { FieldType, InvalidAwareTypes, getObjProp } from 'muze-utils';\nimport { defaultConfig } from './default-config';\nimport { LineLayer } from '../line';\nimport drawArea from './renderer';\nimport './styles.scss';\nimport { STACK, ENCODING } from '../../enums/constants';\nimport {\n    getAxesScales,\n    positionPoints,\n    getIndividualClassName,\n    getValidTransformForAggFn,\n    getColorMetaInf,\n    resolveEncodingValues,\n    sortData\n} from '../../helpers';\n\n/**\n * Area layer renders a closed path. The mark type of this layer is ```area```. This layer can be used\n * to create stacked or multi-series areas and vertical range area plots by using the encoding properties.\n *\n * To create this layer using layer configuration from canvas,\n * ```\n *      canvas.layers([{\n *          mark: 'area',\n *          transform: {\n *              type: 'stack' // Produces a stacked area.\n *          }\n *      }]);\n * ```\n *\n * @public\n *\n * @class\n * @module AreaLayer\n * @extends LineLayer\n */\nexport default class AreaLayer extends LineLayer {\n    /** oation of line layer\n     * @return {Object} Default configuration of layer\n     */\n    static defaultConfig () {\n        return defaultConfig;\n    }\n\n    /**\n     *\n     *\n     * @static\n     *\n     * @memberof AreaLayer\n     */\n    static formalName () {\n        return 'area';\n    }\n\n    /**\n     * Calculates the domain from data. It calls its parent class's method which is line layer\n     * to get the domain and overwrites the domain according to its need.\n     * @return {Array} Domain values\n     */\n    calculateDomainFromData (data, encodingFieldsInf, fieldsConfig) {\n        const domains = super.calculateDomainFromData(data, fieldsConfig);\n        [ENCODING.X, ENCODING.Y].forEach((type) => {\n            const { [`${type}FieldType`]: fieldType } = encodingFieldsInf;\n            if (fieldType === FieldType.MEASURE && getObjProp(domains[type], 'length')) {\n                domains[type][0] = Math.min(domains[type][0], 0);\n                domains[type][1] = Math.max(0, domains[type][1]);\n            }\n        });\n        return domains;\n    }\n\n    /**\n     * Returns the drawing method of this layer\n     * @return {Function} Draw method\n     */\n    getDrawFn () {\n        return drawArea;\n    }\n\n    /**\n     * Generates the x and y positions for each point\n     * @param {Array} data Data Array\n     * @param {Object} encoding Visual Encodings of the layer\n     * @param {Object} axes Contains the axis\n     * @return {Array} Array of points\n     */\n    translatePoints (data) {\n        let points = [];\n        const transformType = this.transformType();\n        const axes = this.axes();\n        const colorAxis = axes.color;\n        const config = this.config();\n        const fieldsConfig = this.data().getFieldsConfig();\n        const { xField, yField, y0Field } = this.encodingFieldsInf();\n        const {\n            xAxis,\n            yAxis\n       } = getAxesScales(axes);\n        const classNameFn = config.individualClassName;\n        const isXDim = fieldsConfig[xField] && fieldsConfig[xField].def.type === FieldType.DIMENSION;\n        const isYDim = fieldsConfig[yField] && fieldsConfig[yField].def.type === FieldType.DIMENSION;\n        const key = isXDim ? 'x' : (isYDim ? 'y' : null);\n        const minYVal = yAxis.domain()[0];\n        const basePos = minYVal < 0 ? yAxis.getScaleValue(0) : yAxis.getScaleValue(minYVal);\n        sortData(data, axes);\n        points = data.map((d, i) => {\n            let color;\n            const xPx = xAxis.getScaleValue(d.x) + xAxis.getUnitWidth() / 2;\n            const yPx = yAxis.getScaleValue(d.y);\n            const y0Px = (y0Field || transformType === STACK) ? yAxis.getScaleValue(d.y0) : basePos;\n            color = colorAxis.getColor(d.color);\n            const invalidY = d.y instanceof InvalidAwareTypes;\n            const invalidY0 = d.y0 instanceof InvalidAwareTypes;\n            const resolvedValues = resolveEncodingValues({\n                values: {\n                    x: xPx,\n                    y: yPx,\n                    y0: y0Px,\n                    color\n                },\n                data: d\n            }, i, data, this);\n            color = resolvedValues.color;\n            const point = {\n                enter: {\n                    x: xPx,\n                    y: invalidY ? null : basePos,\n                    y0: invalidY0 ? null : basePos\n                },\n                update: {\n                    x: xPx,\n                    y: invalidY ? null : resolvedValues.y,\n                    y0: invalidY0 ? null : resolvedValues.y0\n                },\n                source: d.source,\n                rowId: d.rowId,\n                className: classNameFn ? classNameFn(d, i, data, this) : '',\n                style: {\n                    fill: color\n                },\n                meta: getColorMetaInf(color, colorAxis)\n            };\n            point.className = getIndividualClassName(d, i, data, this);\n            this.cachePoint(d[key], point);\n            return point;\n        });\n        points = positionPoints(this, points);\n        points = points.filter((point) => {\n            const update = point.update;\n            return !isNaN(update.x) && !isNaN(update.y);\n        });\n        return points;\n    }\n\n    resolveTransformType () {\n        this._transformType = getValidTransformForAggFn(this);\n    }\n\n    /**\n     * Get the css styles need to be applied on the line path\n     * @param {string} color Color value\n     * @return {Object} Path styles\n     */\n    getPathStyle (color) {\n        return {\n            fill: color\n        };\n    }\n}\n\n","import { CLASSPREFIX } from '../../enums/constants';\n\nexport const defaultConfig = {\n    classPrefix: CLASSPREFIX,\n    defClassName: 'layer-arc',\n    padding: { top: 1, bottom: 1, left: 1, right: 1 },\n    className: '',\n    interaction: {\n        highlight: [{\n            type: 'fill',\n            intensity: [0, 0, -15, 0]\n        }],\n        fade: [{\n            type: 'fill',\n            intensity: [0, 0, +15, 0]\n        }],\n        focus: [{\n            type: 'fill',\n            intensity: [0, 0, +15, 0]\n        }]\n    },\n    height: 100,\n    width: 100,\n    sort: '',\n    colors: ['#F44336', 'blue', 'green', 'yellow', 'orange', 'purple'],\n    transform: {\n        type: 'identity'\n    },\n    encoding: {\n        'stroke-width': {\n            value: '2px'\n        },\n        'stroke-linejoin': {\n            value: 'round'\n        },\n        angle: {\n            value: '1'\n        },\n        radius: {\n            value: '1'\n        },\n        opacity: {\n            value: '1'\n        },\n        color: {\n            value: '1'\n        },\n        shape: {\n            value: '1'\n        },\n        size: {\n            value: '1'\n        }\n    },\n    transition: {\n        effect: 'cubic',\n        duration: 500\n    },\n    states: {\n        highlight: {\n            className: `${CLASSPREFIX}-layer-arc-highlight`\n        },\n        fadeout: {\n            className: `${CLASSPREFIX}-layer-arc-fadeout`\n        },\n        selected: {\n            className: `${CLASSPREFIX}-layer-arc-selected`\n        }\n    }\n};\n\n","import {\n    makeElement,\n    selectElement,\n    getQualifiedClassName,\n    isSimpleObject,\n    Symbols,\n    FieldType,\n    ReservedFields\n} from 'muze-utils';\nimport { defaultConfig } from './default-config';\nimport { BaseLayer } from '../../base-layer';\nimport { getIndividualClassName, resolveEncodingValues, getColorMetaInf } from '../../helpers';\nimport { tweenPie, tweenExitPie, getPreviousPoint } from './arc-helper';\nimport './styles.scss';\n\nconst arc = Symbols.arc;\n\n/**\n * Arc Layer creates a plot with polar coordinates.\n *\n * @public\n *\n * @class\n * @module ArcLayer\n * @extends BaseLayer\n */\nexport default class ArcLayer extends BaseLayer {\n\n    constructor (data, axes, config, dependencies) {\n        super(data, axes, config, dependencies);\n        this._prevPieData = {};\n    }\n\n    /**\n     * returns the default configuration of the layer\n     *\n     * @static\n     * @return {Object} Default configuration for arc layer\n     * @memberof ArcLayer\n     */\n    static defaultConfig () {\n        return defaultConfig;\n    }\n\n    static formalName () {\n        return 'arc';\n    }\n\n    elemType () {\n        return 'path';\n    }\n\n    /**\n     *\n     *\n     * @param {Object} x\n     * @param {Object} y\n     * @return {}\n     * @memberof ArcLayer\n     */\n    getNearestPoint (x, y, config = {}) {\n        const dataPoint = selectElement(config.event.target).data()[0];\n        if (isSimpleObject(dataPoint)) {\n            const { source, rowId } = dataPoint;\n            return {\n                id: this.getIdentifiersFromData(source, rowId),\n                layerId: this.id()\n            };\n        }\n        return null;\n    }\n\n    translatePoints (data) {\n        const { angle, color: colorAxis, radius: radiusAxis } = this.axes();\n        const pieIndex = {};\n        const prevData = this._points[0] || [];\n        const points = [];\n        const angleV = {};\n\n        this._prevPieData = {};\n        prevData.forEach((e, index) => {\n            this._prevPieData[e.rowId] = [e, index];\n            pieIndex[e.index] = e;\n        });\n        data.forEach((d, i) => {\n            const angles = angle.getScaleValue(d.angle);\n            if (angles) {\n                !angleV[d.angle] && (angleV[d.angle] = 0);\n                const { startAngle, endAngle } = angles[angleV[d.angle]++];\n                const uid = d.rowId;\n                const resolvedEncodings = resolveEncodingValues({\n                    values: {\n                        radius: radiusAxis.getOuterRadius(d.radius),\n                        radius0: radiusAxis.getInnerRadius(d.radius0),\n                        color: colorAxis.getColor(d.color),\n                        angle0: startAngle,\n                        angle: endAngle,\n                        startAngle,\n                        endAngle,\n                        startAngle0: startAngle,\n                        endAngle0: endAngle\n                    },\n                    data: d\n                }, i, data, this);\n                const color = resolvedEncodings.color;\n                points.push({\n                    source: d.source,\n                    index: i,\n                    enter: {},\n                    update: {\n                        angle0: resolvedEncodings.angle0,\n                        angle: resolvedEncodings.angle,\n                        radius0: resolvedEncodings.radius0,\n                        radius: resolvedEncodings.radius\n                    },\n                    color,\n                    meta: getColorMetaInf(color, colorAxis),\n                    rowId: uid,\n                    _previousInfo: this._prevPieData[uid] ? this._prevPieData[uid][0] :\n                        getPreviousPoint(pieIndex, i, this)\n                });\n            }\n        });\n        return points;\n    }\n\n    /**\n     *\n     *\n     * @param {Object} container\n     * @return {}\n     * @memberof ArcLayer\n     */\n    render (container) {\n        const measurement = this.measurement();\n        const {\n            classPrefix,\n            defClassName,\n            cornerRadius,\n            padAngle,\n            padRadius,\n            transition\n       } = this.config();\n        const qualClassName = getQualifiedClassName(defClassName, this.id(), classPrefix);\n        // This returns a function that generates the arc path based on the datum provided\n        const path = this._arcFn = arc()\n                .cornerRadius(cornerRadius)\n                .startAngle(d => d.update.angle0 + Math.PI / 2)\n                .endAngle(d => d.update.angle + Math.PI / 2)\n                .padAngle(padAngle)\n                .padRadius(padRadius)\n                .outerRadius(d => d.update.radius)\n                .innerRadius(d => d.update.radius0);\n\n        this._points = this._normalizedData.map(arr => this.translatePoints(arr));\n        const graphicElems = this._graphicElems = {};\n        // Creating the group that holds all the arcs\n        const g = makeElement(selectElement(container), 'g', this._points, `${qualClassName[0]}-group`)\n                .classed(`${qualClassName[1]}-group`, true)\n                .attr('transform', `translate(${measurement.width / 2},\n                    ${measurement.height / 2})`);\n        const tween = (elem) => {\n            makeElement(elem, 'path', d => [d], `${qualClassName[0]}-path`)\n                .style('fill', d => d.color)\n                .each(function (d) {\n                    graphicElems[d.rowId] = selectElement(this);\n                })\n                .transition()\n                .duration(transition.duration)\n                .on('end', this.registerAnimationDoneHook())\n                .attrTween('d', (...params) => tweenPie(path, params))\n                .attr('class', (d, i) => {\n                    const individualClass = getIndividualClassName(d, i, this._points, this);\n                    return `${qualClassName[0]}-path ${qualClassName[1]}-path-${d.index}\n                        ${individualClass}`;\n                });\n        };\n        const consecutiveExits = [];\n        let exitCounter = 0;\n        const tweenExit = (elem, d) => {\n            let exitArr = consecutiveExits[exitCounter];\n            const oldExitCounter = exitCounter;\n            if (!exitArr) {\n                exitArr = [{ elem, datum: d }];\n            } else if (exitArr[exitArr.length - 1].datum.index === d.index - 1) {\n                exitArr.push({ elem, datum: d });\n            } else {\n                exitCounter++;\n            }\n            consecutiveExits[oldExitCounter] = exitArr;\n        };\n        // Creating groups for all the arcs present individually\n        makeElement(g, 'g', d => d, `${qualClassName[0]}`,\n            {\n                update: tween,\n                exit: tweenExit\n            })\n                        .attr('class', (d, i) => `${qualClassName[0]} ${qualClassName[1]}-${i}`);\n        tweenExitPie(consecutiveExits, transition, path);\n        return this;\n    }\n\n    getPointsFromIdentifiers (identifiers) {\n        if (!this.data()) {\n            return [];\n        }\n        const fieldNames = identifiers[0];\n        const values = identifiers.slice(1, identifiers.length);\n        const pieSlices = selectElement(this.mount()).selectAll('path').data();\n        const fieldsConfig = this.data().getFieldsConfig();\n\n        const filteredPies = pieSlices.filter((tData) => {\n            const { source, rowId } = tData;\n            return fieldNames.every((field, idx) => {\n                if (field in fieldsConfig && fieldsConfig[field].def.type === FieldType.DIMENSION) {\n                    return values.findIndex(d => d[idx] === source[fieldsConfig[field].index]) !== -1;\n                } else if (field === ReservedFields.ROW_ID) {\n                    return values.findIndex(d => d[idx] === rowId) !== -1;\n                } return true;\n            });\n        });\n\n        const pieSliceInf = filteredPies[0];\n        if (pieSliceInf) {\n            const measurement = this.measurement();\n            const centroid = this._arcFn.centroid(pieSliceInf);\n            return [{\n                x: centroid[0] + measurement.width / 2,\n                y: centroid[1] + measurement.height / 2,\n                width: 2,\n                height: 2\n            }];\n        }\n        return [];\n    }\n}\n","import { getObjProp, interpolator, FieldType, selectElement } from 'muze-utils';\nimport { ANGLE, RADIUS, SIZE, COLOR } from '../../enums/constants';\n\nexport const getPreviousPoint = (prevData, currIndex, context) => {\n    const prevArc = prevData[currIndex - 1];\n    const nextArc = prevData[currIndex];\n    const [startAngle, endAngle] = context.axes().angle.range();\n    if (prevArc && nextArc) {\n        return {\n            update: {\n                angle0: getObjProp(prevArc, 'update', 'angle'),\n                angle: getObjProp(nextArc, 'update', 'angle0')\n            }\n        };\n    } else if (!nextArc) {\n        return {\n            update: {\n                angle0: (endAngle - 90) * Math.PI * 2 / 360,\n                angle: (endAngle - 90) * Math.PI * 2 / 360\n            }\n        };\n    }\n    return {\n        update: {\n            angle0: (startAngle - 90) * Math.PI * 2 / 360,\n            angle: (startAngle - 90) * Math.PI * 2 / 360\n        }\n    };\n};\n\nexport const tweenPie = (path, b) => {\n    const datum = b[0];\n    return function (t) {\n        return path(interpolator()(datum._previousInfo, datum)(t));\n    };\n};\n\nexport const tweenExitPie = (consecutiveExits, transition, path) => {\n    if (consecutiveExits.length > 0) {\n        consecutiveExits.forEach((consecutiveExitArr) => {\n            const startAngle = consecutiveExitArr[0].datum.update.angle0;\n            const endAngle = consecutiveExitArr[consecutiveExitArr.length - 1].datum.update.angle;\n            const mid = (Math.PI * 2 * startAngle) / ((Math.PI * 2) + startAngle - endAngle);\n\n            consecutiveExitArr.forEach((e) => {\n                const { elem, datum } = e;\n\n                elem.each(function () {\n                    const gElem = selectElement(this);\n                    gElem.selectAll('path')\n                                    .transition()\n                                    .duration(transition.duration)\n                                    .attrTween('d', () => function (t) {\n                                        return path(interpolator()(datum, {\n                                            update: {\n                                                angle0: mid,\n                                                angle: mid,\n                                                radius: datum.radius,\n                                                radius0: datum.radius0\n                                            }\n                                        })(t));\n                                    })\n                                    .remove();\n                    gElem.remove();\n                });\n            });\n        });\n    }\n};\n\nexport const getFieldIndices = (encoding, fieldsConfig) => {\n    const [angleField, radiusField, colorField, sizeField] = [ANGLE, RADIUS, COLOR, SIZE]\n            .map(e => encoding[e].field);\n    const [angleIndex, sizeIndex, radiusIndex] = [angleField, sizeField, radiusField]\n        .map((e) => {\n            const conf = fieldsConfig[e];\n            if (conf && conf.def.type === FieldType.MEASURE) {\n                return conf.index;\n            }\n            return null;\n        });\n    const colorIndex = getObjProp(fieldsConfig, colorField, 'index');\n    return {\n        angleIndex,\n        sizeIndex,\n        radiusIndex,\n        colorIndex\n    };\n};\n","import {\n    setAttrs,\n    setStyles,\n    selectElement,\n    makeElement,\n    getSmartComputedStyle\n} from 'muze-utils';\n\n/**\n * Draws svg text in the specified container.\n * @param {SVGElement} container Container where labels will be appended.\n * @param {Array.<Object>} data Data of the elements.\n * @return {Selection} d3 selection of the elements.\n */\nconst drawText = (container, data, config, layerInst) => {\n    const selection = selectElement(container).selectAll('g').data(data);\n    const { smartLabel } = layerInst._dependencies;\n    const graphicElems = layerInst._graphicElems;\n\n    const selectionMerge = selection.enter().append('g')\n        .each(function (dataObj) {\n            setAttrs(this, dataObj.enter);\n        })\n        .merge(selection);\n    const style = getSmartComputedStyle(selectElement(container), config.className);\n    const fontSize = parseInt(style.fontSize, 10);\n\n    smartLabel.setStyle(style);\n    selectionMerge.each(function (dataObj) {\n        const element = selectElement(this);\n        graphicElems[dataObj.rowId] = element;\n        const { update, text, color, textanchor, style: textStyle } = dataObj;\n        const background = dataObj.background;\n        let backgroundVal;\n        if (backgroundVal = background.value) {\n            const backgroundPadding = background.padding;\n            let diff;\n            const { width, height } = smartLabel.getOriSize(dataObj.text);\n            const backgroundEl = makeElement(element, 'rect', [1]);\n\n            if (textanchor === 'end') {\n                diff = width;\n            } else if (textanchor === 'start') {\n                diff = 0;\n            } else {\n                diff = width / 2;\n            }\n\n            setAttrs(backgroundEl.node(), {\n                x: update.x - diff - backgroundPadding / 2,\n                y: update.y - fontSize - backgroundPadding / 2,\n                width: width + backgroundPadding,\n                height: height + backgroundPadding\n            });\n            background && setStyles(backgroundEl, {\n                background: backgroundVal\n            });\n        }\n        const textEl = makeElement(element, 'text', d => [d]).text(text);\n        const textNode = textEl.node();\n        textStyle && setStyles(textNode, textStyle);\n        color && setStyles(textNode, {\n            fill: color\n        });\n        dataObj.className && textEl.classed(dataObj.className, true);\n        setAttrs(textNode, update);\n        textEl.attr('text-anchor', textanchor);\n        textEl.attr('alignment-baseline', dataObj['alignment-baseline']);\n        textEl.attr('transform', `rotate(${dataObj.rotation} ${update.x} ${update.y})`);\n    });\n    selection.exit().remove();\n    return selection;\n};\n\nexport default drawText;\n","import { CLASSPREFIX } from '../../enums/constants';\n\nexport const defaultConfig = {\n    defClassName: 'layer-text',\n    classPrefix: CLASSPREFIX,\n    className: '',\n    transform: {\n        type: 'identity'\n    },\n    interaction: {\n        highlight: [{\n            type: 'fill',\n            intensity: [0, 0, -15, 0]\n        }],\n        fade: [{\n            type: 'fill',\n            intensity: [0, 0, +15, 0]\n        }],\n        focus: [{\n            type: 'fill',\n            intensity: [0, 0, +15, 0]\n        }]\n    },\n    transition: {\n        effect: 'cubic',\n        duration: 1000\n    },\n    encoding: {\n        color: {},\n        size: {},\n        radius: {},\n        angle: {},\n        text: {\n            value: '',\n            formatter: (val, i, data, context) => {\n                const valueParser = context.valueParser();\n                return valueParser(val);\n            },\n            background: {\n                padding: 10\n            }\n        },\n        rotation: {\n            value: 0\n        },\n        'alignment-baseline': {\n            value: 'middle'\n        }\n    },\n    states: {\n        highlight: {\n            className: `${CLASSPREFIX}-layer-text-highlight`\n        },\n        fadeout: {\n            className: `${CLASSPREFIX}-layer-text-fadeout`\n        },\n        selected: {\n            className: `${CLASSPREFIX}-layer-text-selected`\n        }\n    }\n};\n","import {\n    getQualifiedClassName,\n    selectElement,\n    setStyles,\n    createElements\n} from 'muze-utils';\nimport { BaseLayer } from '../../base-layer';\nimport drawText from './renderer';\nimport { defaultConfig } from './default-config';\nimport { positionPoints, getIndividualClassName, resolveEncodingValues, getColorMetaInf, toCartesianCoordinates }\n    from '../../helpers';\nimport { TEXT_ANCHOR_MIDDLE, ENCODING } from '../../enums/constants';\n\nimport './styles.scss';\n\nconst defaultEncoding = defaultConfig.encoding;\nconst alignmentBaseLine = defaultEncoding['alignment-baseline'].value;\nconst defRotation = defaultEncoding.rotation.value;\n\nconst pointTranslators = {\n    polar: (data, config, layerInst) => {\n        let points = [];\n        const axes = layerInst.axes();\n        const encoding = layerInst.config().encoding;\n        const textEncoding = encoding.text;\n        const { radius: radiusAxis, color: colorAxis, angle: angleAxis } = axes;\n        const { formatter: textFormatter } = textEncoding;\n        const backgroundEncoding = encoding.text.background;\n        const backgroundPadding = backgroundEncoding.padding;\n        const backgroundValue = backgroundEncoding.value;\n        const angleV = {};\n        for (let i = 0, len = data.length; i < len; i++) {\n            const d = data[i];\n            const source = d.source;\n            const text = d.text;\n\n            const color = colorAxis.getColor(d.color);\n            const radius = radiusAxis.getOuterRadius(d.radius);\n            const angles = angleAxis.getScaleValue(d.angle);\n            !angleV[d.angle] && (angleV[d.angle] = 0);\n            const { startAngle, endAngle } = angles[angleV[d.angle]++];\n\n            const angle = (startAngle + endAngle) / 2;\n            const resolvedVal = resolveEncodingValues({\n                values: {\n                    angle,\n                    radius,\n                    color,\n                    text,\n                    startAngle,\n                    endAngle,\n                    rotation: defRotation,\n                    'alignment-baseline': alignmentBaseLine\n                },\n                data: d\n            }, i, data, layerInst);\n            const point = {\n                enter: {},\n                update: {\n                    angle: resolvedVal.angle,\n                    radius: resolvedVal.radius\n                },\n                text: textFormatter ? textFormatter(text, i, data, layerInst) : resolvedVal.text,\n                color: resolvedVal.color,\n                rotation: resolvedVal.rotation,\n                background: {\n                    value: backgroundValue instanceof Function ? backgroundValue(d, i, data, layerInst) : null,\n                    padding: backgroundPadding\n                },\n                'alignment-baseline': resolvedVal['alignment-baseline'],\n                meta: getColorMetaInf(resolvedVal.color, colorAxis),\n                style: {},\n                source,\n                rowId: d.rowId\n            };\n\n            point.className = getIndividualClassName(d, i, data, layerInst);\n            points.push(point);\n        }\n\n        points = toCartesianCoordinates(positionPoints(layerInst, points), layerInst.measurement());\n\n        points = points.filter((d) => {\n            const update = d.update;\n            return !isNaN(update.x) && !isNaN(update.y);\n        });\n        return points;\n    },\n    cartesian: (data, config, layerInst) => {\n        let points = [];\n        const axes = layerInst.axes();\n        const colorAxis = axes.color;\n        const encoding = layerInst.config().encoding;\n        const textEncoding = encoding.text;\n        const { field: textField, value, formatter: textFormatter } = textEncoding;\n        const fieldsConfig = layerInst.data().getFieldsConfig();\n\n        const backgroundEncoding = encoding.text.background;\n        const backgroundPadding = backgroundEncoding.padding;\n        const backgroundValue = backgroundEncoding.value;\n        const textFieldIndex = textField ? fieldsConfig[textField] && fieldsConfig[textField].index : -1;\n        const xEnc = ENCODING.X;\n        const yEnc = ENCODING.Y;\n        for (let i = 0, len = data.length; i < len; i++) {\n            const d = data[i];\n            const row = d.source;\n            const textValue = textField ? row[textFieldIndex] : value;\n\n            const [xPx, yPx] = [xEnc, yEnc].map(type => (axes[type] ? axes[type].getScaleValue(d[type]) +\n                    axes[type].getUnitWidth() / 2 : 0));\n\n            const color = colorAxis.getColor(d.color, colorAxis);\n            const resolvedEncodings = resolveEncodingValues({\n                values: {\n                    x: xPx,\n                    y: yPx,\n                    text: textValue,\n                    color,\n                    rotation: defRotation,\n                    'alignment-baseline': alignmentBaseLine\n                },\n                data: d\n            }, i, data, layerInst);\n            const point = {\n                enter: {},\n                update: {\n                    x: resolvedEncodings.x,\n                    y: resolvedEncodings.y\n                },\n                text: textFormatter(resolvedEncodings.text, i, data, layerInst),\n                color: resolvedEncodings.color,\n                background: {\n                    value: backgroundValue instanceof Function ? backgroundValue(d, i, data, layerInst) : null,\n                    padding: backgroundPadding\n                },\n                'alignment-baseline': resolvedEncodings['alignment-baseline'],\n                rotation: resolvedEncodings.rotation,\n                meta: getColorMetaInf(resolvedEncodings.color, colorAxis),\n                style: {},\n                source: d.source,\n                rowId: d.rowId\n            };\n\n            point.className = getIndividualClassName(d, i, data, layerInst);\n            points.push(point);\n        }\n\n        points = positionPoints(layerInst, points);\n        points = points.filter((d) => {\n            const update = d.update;\n            return !isNaN(update.x) && !isNaN(update.y);\n        });\n        return points;\n    }\n};\n\n/**\n * This layer is used to create labels for each data point. It has an encoding property ```text```\n * which determines from which field's data the value of the label will be taken. The text encoding\n * property is necessary for the layer to render the text.The mark type of this layer is ```text```.\n *\n * @public\n *\n * @class\n * @module TextLayer\n * @extends BaseLayer\n */\nexport default class TextLayer extends BaseLayer {\n    /**\n     * Returns the default configuration of the text layer\n     * @return {Object} Default configuration of the text layer\n     */\n    static defaultConfig () {\n        return defaultConfig;\n    }\n\n    static formalName () {\n        return 'text';\n    }\n\n    elemType () {\n        return 'text';\n    }\n\n    getPointTranslator (val) {\n        return pointTranslators[val];\n    }\n\n    /**\n     * Generates an array of objects containing x, y, width and height of the points from the data\n     * @param  {Array.<Array>} data Data Array\n     * @param  {Object} encoding  Config\n     * @param  {Object} axes     Axes object\n     * @return {Array.<Object>}  Array of points\n     */\n    translatePoints (data, config = {}) {\n        return pointTranslators[this.coord()](data, config, this);\n    }\n\n    /**\n     * Renders the plot in the given container\n     * @param  {SVGElement} container SVGElement which will hold the plot\n     * @return {textLayer} Instance of text layer\n     */\n    render (container) {\n        const config = this.config();\n        const normalizedData = this._normalizedData;\n        const className = config.className;\n        const qualifiedClassName = getQualifiedClassName(config.defClassName, this.id(), config.classPrefix);\n        const containerSelection = selectElement(container);\n\n        containerSelection.classed(`${qualifiedClassName.join(' ')} ${className}`, true);\n        this._graphicElems = {};\n\n        createElements({\n            data: normalizedData,\n            append: 'g',\n            selector: 'g',\n            container,\n            each: (dataArr, group) => {\n                const node = group.node();\n                const points = this.translatePoints(dataArr, {}, this);\n                setStyles(node, {\n                    'text-anchor': TEXT_ANCHOR_MIDDLE\n                });\n                drawText(node, points, {\n                    className: qualifiedClassName[0]\n                }, this);\n            }\n        });\n        return this;\n    }\n}\n","/* global Element, document  */\nimport {\n    makeElement,\n    selectElement,\n    easeFns,\n    objectIterator,\n    getSymbol\n} from 'muze-utils';\n\n/**\n *\n *\n * @param {*} str\n *\n */\nconst checkPath = (str) => {\n    if (/^[mzlhvcsqta]\\s*[-+.0-9][^mlhvzcsqta]+/i.test(str) && /[\\dz]$/i.test(str) && str.length > 4) {\n        return true;\n    }\n    return false;\n};\n\n/**\n *\n *\n * @param {*} d\n * @param {*} elem\n */\nconst createShape = function (d, groupElement) {\n    const { shape, size, update } = d;\n\n    if (shape instanceof Promise) {\n        shape.then((res) => {\n            d.shape = res;\n            createShape(d, groupElement);\n        });\n    } else if (shape instanceof Element) {\n        let newShape = shape.cloneNode(true);\n\n        if (newShape.nodeName.toLowerCase() === 'img') {\n            const src = newShape.src || newShape.href;\n            newShape = document.createElementNS('http://www.w3.org/2000/svg', 'image');\n            newShape.setAttribute('href', src);\n        }\n        const shapeElement = selectElement(newShape);\n        if (newShape.nodeName === 'path' || newShape.nodeName === 'image') {\n            shapeElement.attr('transform', `scale(${size / 100})`);\n        } else {\n            shapeElement.attr('height', size);\n            shapeElement.attr('width', size);\n        }\n        shapeElement.attr('x', -size / 2);\n        shapeElement.attr('y', -size / 2);\n        makeElement(groupElement, () => newShape, [1]);\n    } else if (typeof shape === 'string') {\n        let pathStr;\n        if (checkPath(shape)) {\n            pathStr = shape;\n        } else {\n            pathStr = getSymbol(shape).size(size)(update);\n        }\n        makeElement(groupElement, 'path', data => [data]).attr('d', pathStr);\n    } else {\n        d.shape = 'circle';\n        createShape(d, groupElement);\n    }\n};\n\n/**\n * Draws symbols using d3 symbol api\n * @param {Object} params Contains the svg container, points and other symbol related attributes.\n */\n/* istanbul ignore next */ const drawSymbols = (params) => {\n    const { layer, container, points, transition, className } = params;\n    const { duration, effect, disabled } = transition;\n    const mount = selectElement(container);\n    const graphicElems = layer._graphicElems;\n    mount.attr('class', className);\n    return makeElement(mount, 'g', points, null, {\n        enter: (group, d) => {\n            const { enter } = d;\n            group.attr('transform', `translate(${enter.x},${enter.y})`);\n        },\n        update: (group, d) => {\n            createShape(d, group);\n            graphicElems[d.rowId] = group;\n            const { update, style } = d;\n            objectIterator(style, key => group.style(key, style[key]));\n            group.attr('class', className);\n            group.classed(d.className, true);\n            if (!disabled) {\n                group = group.transition()\n                    .duration(transition.duration)\n                    .on('end', layer.registerAnimationDoneHook());\n            }\n            group.attr('transform', `translate(${update.x},${update.y})`);\n        },\n        exit: (exitGroup) => {\n            if (!disabled) {\n                exitGroup.transition().ease(easeFns[effect])\n                .duration(duration)\n                .on('end', () => exitGroup.remove())\n                .style('fill-opacity', 0)\n                .style('stroke-opacity', 0);\n            } else {\n                exitGroup.remove();\n            }\n        }\n    }, params.keyFn);\n};\n\nexport default drawSymbols;\n","import { CLASSPREFIX } from '../../enums/constants';\n\nexport const defaultConfig = {\n    defClassName: 'layer-point',\n    className: '',\n    classPrefix: CLASSPREFIX,\n    defColorStyle: 'stroke',\n    interaction: {\n        highlight: [{\n            type: 'fill',\n            intensity: [0, 0, -20, 0]\n        }],\n        fade: [{\n            type: 'fill',\n            intensity: [0, 0, +20, 0]\n        }],\n        focus: [{\n            type: 'fill',\n            intensity: [0, 0, +20, 0]\n        }\n        ]\n    },\n    innerPadding: 0.1,\n    nearestPointThreshold: 10,\n    transform: {\n        type: 'identity'\n    },\n    transition: {\n        effect: 'cubic',\n        duration: 1000\n    },\n    encoding: {\n        size: {\n            value: 30\n        },\n        color: { },\n        shape: {\n            value: 'circle'\n        },\n        x: {},\n        y: {},\n        strokeOpacity: {\n            value: 0.5\n        },\n        fillOpacity: {\n            value: 0.5\n        }\n    },\n    shapes: ['circle', 'cross', 'diamond', 'square', 'star', 'wye', 'triangle'],\n    sizes: [20, 30, 40, 50, 60, 70]\n};\n","import {\n    Voronoi,\n    selectElement,\n    getQualifiedClassName,\n    makeElement,\n    FieldType,\n    Scales\n} from 'muze-utils';\nimport { BaseLayer } from '../../base-layer';\nimport drawSymbols from './renderer';\nimport { defaultConfig } from './default-config';\nimport { ENCODING } from '../../enums/constants';\nimport {\n    attachDataToVoronoi,\n    positionPoints,\n    getPlotMeasurement,\n    getIndividualClassName,\n    getMarkId,\n    getColorMetaInf,\n    resolveEncodingValues\n} from '../../helpers';\n\nimport './styles.scss';\n\n/**\n * This layer is used to create various symbols for each data point. This is commonly used in\n * scatterplot visualizations. The mark type of this layer is ```point```.\n *\n * @public\n *\n * @class\n * @module PointLayer\n * @extends BaseLayer\n */\nexport default class PointLayer extends BaseLayer {\n\n    /**\n     * Creates an instance of PointLayer.\n     * @param {*} args\n     * @memberof PointLayer\n     */\n    constructor (...args) {\n        super(...args);\n        this._voronoi = new Voronoi();\n        this._bandScale = Scales.band();\n    }\n\n    elemType () {\n        return 'g';\n    }\n\n    /**\n     * Returns the default configuration of the point layer\n     * @return {Object} Default configuration of the point layer\n     */\n    static defaultConfig () {\n        return defaultConfig;\n    }\n\n    static defaultPolicy (conf, userConf) {\n        const config = BaseLayer.defaultPolicy(conf, userConf);\n        const encoding = config.encoding;\n        const transform = config.transform;\n        const colorField = encoding.color && encoding.color.field;\n\n        if (colorField) {\n            transform.groupBy = colorField;\n        }\n        return config;\n    }\n\n    static formalName () {\n        return 'point';\n    }\n\n    static drawFn () {\n        return drawSymbols;\n    }\n\n    /**\n     * Generates an array of objects containing x, y, width and height of the points from the data\n     * @param  {Array.<Array>} data Data Array\n     * @param  {Object} encoding  Config\n     * @param  {Object} axes     Axes object\n     * @return {Array.<Object>}  Array of points\n     */\n    translatePoints (data, config = {}) {\n        let points = [];\n        const encoding = this.config().encoding;\n        const axes = this.axes();\n        const {\n            x,\n            y\n        } = encoding;\n        const xField = x.field;\n        const yField = y.field;\n        const { size: sizeAxis, shape: shapeAxis } = axes;\n        const fieldsConfig = this.data().getFieldsConfig();\n        const isXDim = fieldsConfig[xField] && fieldsConfig[xField].def.type === FieldType.DIMENSION;\n        const isYDim = fieldsConfig[yField] && fieldsConfig[yField].def.type === FieldType.DIMENSION;\n        const key = isXDim ? ENCODING.X : (isYDim ? ENCODING.Y : null);\n        const measurement = this.measurement();\n        const colorAxis = axes.color;\n        const { x: offsetX, y: offsetY } = config.offset;\n\n        for (let i = 0, len = data.length; i < len; i++) {\n            const d = data[i];\n            const size = sizeAxis.getSize(d.size);\n            const shape = shapeAxis.getShape(d.shape);\n\n            let [xPx, yPx] = [ENCODING.X, ENCODING.Y].map((type) => {\n                const value = d[type] === null ? undefined : d[type];\n                const measure = type === ENCODING.X ? measurement.width : measurement.height;\n                return !encoding[type].field ? measure / 2 : axes[type].getScaleValue(value);\n            });\n\n            xPx += offsetX;\n            yPx += offsetY;\n\n            let color = colorAxis.getColor(d.color);\n\n            const resolvedEncodings = resolveEncodingValues({\n                values: {\n                    x: xPx,\n                    y: yPx,\n                    color,\n                    shape,\n                    size,\n                    data: d\n                },\n                data: d\n            }, i, data, this);\n            color = resolvedEncodings.color;\n            const style = {\n                fill: color,\n                stroke: color\n            };\n            const pos = {\n                x: resolvedEncodings.x,\n                y: resolvedEncodings.y\n            };\n\n            if (!isNaN(xPx) && !isNaN(yPx)) {\n                const point = {\n                    enter: pos,\n                    update: pos,\n                    shape: resolvedEncodings.shape,\n                    size: Math.abs(resolvedEncodings.size),\n                    meta: getColorMetaInf(color, colorAxis),\n                    style,\n                    source: d.source,\n                    rowId: d.rowId\n                };\n                point.className = getIndividualClassName(d, i, data, this);\n                points.push(point);\n                this.cachePoint(d[key], point);\n            }\n        }\n        points = positionPoints(this, points);\n        return points;\n    }\n\n    /**\n     * Renders the plot in the given container.\n     *\n     * @param  {SVGElement} container SVGElement which will hold the plot\n     * @return {BarLayer} Instance of bar layer\n     */\n    render (container) {\n        let maxSize = 0;\n        let seriesClassName;\n        const config = this.config();\n        const keys = this._transformedData.map(d => d.key);\n        const { transition, className, defClassName, classPrefix } = config;\n        const normalizedData = this._normalizedData;\n        const containerSelection = selectElement(container);\n        const qualifiedClassName = getQualifiedClassName(defClassName, this.id(), classPrefix);\n        this._points = [];\n        this._pointMap = {};\n\n        containerSelection.classed(qualifiedClassName.join(' '), true).classed(className, true);\n\n        this._points = this.generateDataPoints(normalizedData, keys);\n        this._graphicElems = {};\n\n        const schema = this.data().getSchema();\n        makeElement(container, 'g', this._points, null, {\n            update: (group, points) => {\n                maxSize = Math.max(maxSize, ...points.map(d => d.size));\n                seriesClassName = `${qualifiedClassName[0]}`;\n                this.constructor.drawFn()({\n                    layer: this,\n                    container: group.node(),\n                    points,\n                    interpolate: config.interpolate,\n                    className: seriesClassName,\n                    transition,\n                    keyFn: v => getMarkId(v.source, schema)\n                });\n            }\n        }, data => data[0].rowId);\n        this._maxSize = Math.sqrt(maxSize / Math.PI) * 2;\n        attachDataToVoronoi(this._voronoi, this._points);\n        return this;\n    }\n\n    generateDataPoints (normalizedData, keys) {\n        const [widthMetrics, heightMetrics] = getPlotMeasurement(this, keys);\n        const offsetXValues = widthMetrics.offsetValues || [];\n        const offsetYValues = heightMetrics.offsetValues || [];\n        return normalizedData.map((dataArr, i) => {\n            const measurementConf = this.getMeasurementConfig(offsetXValues[i], offsetYValues[i], widthMetrics.span,\n                heightMetrics.span);\n            return this.translatePoints(dataArr, measurementConf);\n        }).filter(d => d.length);\n    }\n\n    getMeasurementConfig (offsetX, offsetY, widthSpan, heightSpan) {\n        return {\n            offset: {\n                x: (offsetX || 0) + widthSpan / 2,\n                y: (offsetY || 0) + heightSpan / 2\n            },\n            span: {\n                x: widthSpan,\n                y: heightSpan\n            }\n        };\n    }\n\n    /**\n     * Gets the nearest point from a position.\n     * @param {number} x x position\n     * @param {number} y y position\n     * @return {Object} Point details\n     */\n    getNearestPoint (x, y) {\n        const distanceLimit = Math.max(this._maxSize, this.config().nearestPointThreshold);\n\n        if (!this.data()) {\n            return null;\n        }\n\n        const point = this._voronoi.find(x, y, distanceLimit);\n        const dimensions = point && point.data.data.update;\n        const radius = point ? Math.sqrt(point.data.data.size / Math.PI) : 0;\n\n        if (point) {\n            const { source, rowId } = point.data.data;\n            const identifiers = this.getIdentifiersFromData(source, rowId);\n            return {\n                id: identifiers,\n                dimensions: [{\n                    x: dimensions.x,\n                    y: dimensions.y,\n                    width: radius,\n                    height: radius\n                }],\n                layerId: this.id()\n            };\n        }\n        return null;\n    }\n}\n","import { makeElement, easeFns } from 'muze-utils';\n\n/**\n *\n *\n * @param {*} elem\n * @param {*} datum\n * @param {*} index\n * @param {*} context\n */\nconst transitionBars = (layer, elem, datum, index, context) => {\n    const { transition } = context;\n    const { duration, disabled, effect } = transition;\n    const selection = elem;\n\n    const selTransition = disabled ? selection :\n        selection.transition()\n        .duration(duration)\n        .ease(easeFns[effect])\n        .on('end', layer.registerAnimationDoneHook());\n    const update = datum.update || datum;\n    const updateStyle = datum.style || {};\n    datum.className && selection.classed(datum.className, true);\n    Object.entries(update).forEach(attr => (!isNaN(attr[1]) && selTransition.attr(attr[0], attr[1])));\n    Object.entries(updateStyle).forEach(styleObj => selection.style(styleObj[0], styleObj[1]));\n};\n\n/**\n *\n *\n * @param {*} elem\n * @param {*} d\n */\nconst barEnterFn = (elem, d) => {\n    const selection = elem;\n    const enter = d.enter || {};\n    Object.entries(enter).forEach(attr => (!isNaN(attr[1]) && selection.attr(attr[0], attr[1])));\n};\n\n/**\n * Draws rectangles by using d3 selection\n * @param  {Object} params Contains container element and points\n * @return {Selection} Bar Selection\n */\n/* istanbul ignore next */ export const drawRects = (params) => {\n    const { layer, points, container, keyFn } = params;\n    const graphicElems = layer._graphicElems;\n    const updateFns = {\n        enter (elem, d) { barEnterFn(elem, d); },\n        update (elem, d, i) {\n            graphicElems[d.rowId] = elem;\n            transitionBars(layer, elem, d, i, params);\n        }\n    };\n    return makeElement(container, 'rect', points, null, updateFns, keyFn);\n};\n","import { CLASSPREFIX } from '../../enums/constants';\n\nexport const defaultConfig = {\n    classPrefix: CLASSPREFIX,\n    defClassName: 'layer-bar',\n    className: '',\n    interaction: {\n        highlight: [{\n            type: 'fill',\n            intensity: [0, 0, -15, 0]\n        }],\n        fade: [{\n            type: 'fill',\n            intensity: [0, 0, +15, 0]\n        }],\n        focus: [{\n            type: 'fill',\n            intensity: [0, 0, +15, 0]\n        }]\n    },\n    transform: {\n        type: 'stack'\n    },\n    transition: {\n        effect: 'cubic',\n        duration: 1000\n    },\n    innerPadding: 0.1,\n    encoding: {\n        color: {},\n        x: {},\n        y: {},\n        x0: {},\n        y0: {}\n    },\n    states: {\n        highlight: {\n            className: `${CLASSPREFIX}-layer-bar-highlight`\n        },\n        fadeout: {\n            className: `${CLASSPREFIX}-layer-bar-fadeout`\n        },\n        selected: {\n            className: `${CLASSPREFIX}-layer-bar-selected`\n        }\n    }\n};\n\n","import { MeasureSubtype, DimensionSubtype } from 'muze-utils';\nimport { STACK } from '../../enums/constants';\nimport { positionPoints, getIndividualClassName, getColorMetaInf, resolveEncodingValues } from '../../helpers';\n\nconst positionRetriever = {\n    x: (xPx, isNegativeVal, barBasePos) => (isNegativeVal ? [xPx, barBasePos] : [barBasePos, xPx]),\n    y: (yPx, isNegativeVal, barBasePos) => (isNegativeVal ? [barBasePos, yPx] : [yPx, barBasePos])\n};\n\n/**\n *\n *\n * @param {*} type\n * @param {*} fieldInfo\n * @param {*} config\n * @param {*} data\n *\n */\nconst resolveDimByField = (type, axesInfo, config, data) => {\n    const spaceType = type === 'x' ? 'width' : 'height';\n    const [fieldType, axis] = [config[`${type}FieldType`], axesInfo[`${type}Axis`]];\n    const {\n        transformType,\n        sizeEncoding,\n        sizeConfig,\n        measurement\n    } = config;\n\n    const sizeValue = sizeEncoding.value;\n    let enter = 0;\n    let pos;\n    let space = 0;\n    let enterSpace = 0;\n    if (fieldType !== undefined) {\n        if (config[`${type}0Field`]) {\n            const minVal = data[type];\n            const maxVal = data[`${type}0`];\n            let min;\n            let max;\n            if (minVal === null || maxVal === null) {\n                return {\n                    enterSpace: undefined,\n                    enter: undefined,\n                    pos: undefined,\n                    space: undefined\n                };\n            } else if (fieldType === MeasureSubtype.CONTINUOUS || fieldType === DimensionSubtype.TEMPORAL) {\n                min = Math.min(minVal, maxVal);\n                max = Math.max(minVal, maxVal);\n            } else {\n                min = minVal;\n                max = maxVal;\n            }\n            const scales = type === 'x' ? [min, max] : [max, min];\n            pos = axis.getScaleValue(scales[0]) + axis.getUnitWidth() / 2;\n            space = Math.abs(axis.getScaleValue(scales[1]) - pos) + axis.getUnitWidth() / 2;\n\n            enter = pos;\n            enterSpace = 0;\n        } else if (fieldType === DimensionSubtype.CATEGORICAL || fieldType === DimensionSubtype.TEMPORAL) {\n            pos = axis.getScaleValue(data[type]) +\n                (sizeConfig[type === 'x' ? 'barWidthOffset' : 'barHeightOffset'] || 0);\n\n            space = sizeConfig[type === 'x' ? 'barWidth' : 'barHeight'];\n            if (sizeValue !== undefined) {\n                const diffPx = sizeValue * space;\n                space -= diffPx;\n                pos += diffPx / 2;\n            }\n            enter = pos;\n            enterSpace = space;\n        } else {\n            const minDomVal = axis.domain()[0];\n            const barBasePos = minDomVal < 0 ? axis.getScaleValue(0) : axis.getScaleValue(minDomVal);\n            pos = axis.getScaleValue(data[type]);\n            let endPos = axis.getScaleValue(data[`${type}0`]);\n\n            enterSpace = 0;\n            const isNegativeVal = data[type] < 0;\n            if (transformType !== STACK) {\n                [pos, endPos] = positionRetriever[type](pos, isNegativeVal, barBasePos);\n            }\n            space = Math.abs(pos - endPos);\n            enter = barBasePos;\n        }\n    } else {\n        pos = 0;\n        space = measurement[spaceType];\n    }\n\n    return {\n        enterSpace,\n        enter,\n        pos,\n        space\n    };\n};\n\n/**\n *\n *\n * @param {*} data\n * @param {*} config\n * @param {*} axes\n *\n */\nconst resolveDimensions = (data, config, axes) => {\n    const axesInfo = {\n        xAxis: axes.x,\n        yAxis: axes.y\n    };\n    const {\n        enterSpace: enterWidth,\n        enter: enterX,\n        pos: xPos,\n        space: width\n    } = resolveDimByField('x', axesInfo, config, data);\n\n    const {\n        enterSpace: enterHeight,\n        enter: enterY,\n        pos: yPos,\n        space: height\n    } = resolveDimByField('y', axesInfo, config, data);\n    return {\n        enter: {\n            x: enterX,\n            y: enterY,\n            width: enterWidth,\n            height: enterHeight\n        },\n        update: {\n            x: xPos,\n            y: yPos,\n            width,\n            height\n        }\n    };\n};\n\n/**\n * Generates an array of objects containing x, y, width and height of the bars from the data\n * @param  {Array.<Array>} data Data Array\n * @param  {Object} encoding  Config\n * @param  {Object} axes     Axes object\n * @param {Object} conf config object for point generation\n * @return {Array.<Object>}  Array of points\n */\nexport const getTranslatedPoints = (context, data, sizeConfig) => {\n    let points = [];\n    const encoding = context.config().encoding;\n    const axes = context.axes();\n    const colorAxis = axes.color;\n    const sizeEncoding = encoding.size || {};\n    const {\n            x0Field,\n            y0Field,\n            xFieldSubType,\n            yFieldSubType\n        } = context.encodingFieldsInf();\n    const measurement = context.measurement();\n    const isXDim = xFieldSubType === DimensionSubtype.CATEGORICAL || xFieldSubType === DimensionSubtype.TEMPORAL;\n    const isYDim = yFieldSubType === DimensionSubtype.CATEGORICAL || yFieldSubType === DimensionSubtype.TEMPORAL;\n    const key = isXDim ? 'x' : (isYDim ? 'y' : null);\n    const transformType = context.transformType();\n\n    for (let i = 0, len = data.length; i < len; i++) {\n        const d = data[i];\n        const dimensions = resolveDimensions(d, {\n            xFieldType: xFieldSubType,\n            yFieldType: yFieldSubType,\n            x0Field,\n            y0Field,\n            transformType,\n            measurement,\n            sizeConfig,\n            sizeEncoding\n        }, axes);\n\n        let color = colorAxis.getColor(d.color);\n\n        const update = dimensions.update;\n        const resolvedEncodings = resolveEncodingValues({\n            values: {\n                x: update.x,\n                y: update.y,\n                width: update.width,\n                height: update.height,\n                color\n            },\n            data: d\n        }, i, data, context);\n        color = resolvedEncodings.color;\n        const { x, y, width, height } = resolvedEncodings;\n        if (!isNaN(x) && !isNaN(y) && d.rowId !== undefined) {\n            let point = null;\n            point = {\n                enter: dimensions.enter,\n                update: {\n                    x,\n                    y,\n                    width,\n                    height\n                },\n                source: d.source,\n                rowId: d.rowId,\n                style: {\n                    fill: color\n                },\n                meta: getColorMetaInf(color, colorAxis)\n            };\n            point.className = getIndividualClassName(d, i, data, context);\n            points.push(point);\n            // Store each point in a hashmap with key as the dimensional or temporal field value\n            context.cachePoint(d[key], point);\n        }\n    }\n\n    points = positionPoints(context, points);\n    return points;\n};\n","import {\n    getQualifiedClassName,\n    selectElement,\n    createElements,\n    clipElement,\n    DimensionSubtype,\n    FieldType,\n    MeasureSubtype,\n    Scales,\n    getNearestValue,\n    getObjProp\n} from 'muze-utils';\nimport { BaseLayer } from '../../base-layer';\nimport { drawRects } from './renderer';\nimport { defaultConfig } from './default-config';\nimport { getPlotMeasurement, getValidTransformForAggFn } from '../../helpers';\nimport './styles.scss';\nimport { getTranslatedPoints } from './bar-helper';\n\nconst MEASURE = FieldType.MEASURE;\nconst scaleBand = Scales.band;\n\n/**\n * Bar layer creates rectangle marks. The mark type of this layer is ```bar```. This layer can be used\n * to create stacked or grouped bars, range bars, heatmap plots and also reference bands by using\n * the encoding properties.\n *\n * @public\n *\n * @class\n * @module BarLayer\n * @extends BaseLayer\n */\nexport default class BarLayer extends BaseLayer {\n    /**\n     * Creates an instance of bar layer\n     */\n    constructor (...params) {\n        super(...params);\n        this._bandScale = scaleBand();\n        this._plotPadding = {\n            x: 0,\n            y: 0\n        };\n        this._plotSpan = {\n            x: 0,\n            y: 0\n        };\n        this._pointMap = {};\n    }\n\n    /**\n     *\n     *\n     *\n     * @memberof BarLayer\n     */\n    elemType () {\n        return 'rect';\n    }\n\n    /**\n     *\n     *\n     * @static\n     *\n     * @memberof BarLayer\n     */\n    static formalName () {\n        return 'bar';\n    }\n\n    /**\n     * Returns the default configuration of the bar layer\n     * @return {Object} Default configuration of the bar layer\n     */\n    static defaultConfig () {\n        return defaultConfig;\n    }\n\n    /**\n     *\n     *\n     * @static\n     * @param {*} conf\n     * @param {*} userConf\n     *\n     * @memberof BarLayer\n     */\n    static defaultPolicy (conf, userConf) {\n        const config = BaseLayer.defaultPolicy(conf, userConf);\n        const encoding = config.encoding;\n        const colorField = encoding.color.field;\n        const transform = config.transform;\n\n        if (colorField) {\n            transform.groupBy = colorField;\n        }\n        return config;\n    }\n\n    /**\n     *\n     *\n     * @param {*} data\n     * @param {*} fieldsConfig\n     *\n     * @memberof BarLayer\n     */\n    calculateDomainFromData (data, encodingFieldInf, fieldsConfig) {\n        const domain = super.calculateDomainFromData(data, encodingFieldInf, fieldsConfig);\n        ['x', 'y'].forEach((d) => {\n            if (encodingFieldInf[`${d}FieldType`] === MEASURE && getObjProp(domain[d], 'length')) {\n                if (encodingFieldInf[`${d}0Field`]) {\n                    domain[d] = domain[d].sort((a, b) => a - b);\n                } else {\n                    domain[d][0] = Math.min(domain[d][0], 0);\n                    domain[d][1] = Math.max(0, domain[d][1]);\n                }\n            }\n        });\n        return domain;\n    }\n\n    /**\n     * Generates an array of objects containing x, y, width and height of the bars from the data\n     * @param  {Array.<Array>} data Data Array\n     * @param  {Object} encoding  Config\n     * @param  {Object} axes     Axes object\n     * @param {Object} conf config object for point generation\n     * @return {Array.<Object>}  Array of points\n     */\n    translatePoints (data, sizeConfig) {\n        return getTranslatedPoints(this, data, sizeConfig);\n    }\n\n    /**\n     * Renders the plot in the given container\n     * @param  {SVGGroup} container SVGGroup where plot will be rendered.\n     * @return {BarLayer} Instance of bar layer.\n     */\n    render (container) {\n        const config = this.config();\n        const transition = config.transition;\n        const normalizedDataArr = this._normalizedData;\n        const transformedData = this._transformedData;\n        const keys = transformedData.map(d => d.key);\n        const fieldsConfig = this.data().getFieldsConfig();\n        const axes = this.axes();\n        const height = axes.y && axes.y.scale().range()[0];\n        const width = axes.x && axes.x.scale().range()[1];\n        const defClassName = config.defClassName;\n        const qualifiedClassName = getQualifiedClassName(defClassName, this.id(), config.classPrefix);\n        const className = config.className;\n        const containerSelection = selectElement(container);\n        const dimensions = Object.values(fieldsConfig).filter(e => e.def.type === FieldType.DIMENSION)\n            .map(e => e.index);\n        containerSelection.classed(qualifiedClassName.join(' '), true);\n        containerSelection.classed(className, true);\n        clipElement(container, {\n            x: 0,\n            y: 0,\n            width,\n            height\n        }, `id-${this.id()}`);\n\n        this._points = this.generateDataPoints(normalizedDataArr, keys);\n        this._graphicElems = {};\n\n        createElements({\n            data: this._points,\n            container,\n            selector: 'g',\n            append: 'g',\n            each: (points, group, i) => {\n                const seriesClassName = `${qualifiedClassName[0]}-${keys[i] || i}`.toLowerCase();\n                group.style('display', 'block');\n                drawRects({\n                    layer: this,\n                    container: group.node(),\n                    points,\n                    className: seriesClassName,\n                    transition,\n                    style: {},\n                    keyFn: d => dimensions.map(key => d.source[key]).join('-')\n                });\n            }\n        });\n        return this;\n    }\n\n    /**\n     *\n     *\n     * @param {*} normalizedData\n     * @param {*} keys\n     *\n     * @memberof BarLayer\n     */\n    generateDataPoints (normalizedData, keys) {\n        const [barWidthMetrics, barHeightMetrics] = getPlotMeasurement(this, keys);\n        const barWidthOffsets = barWidthMetrics.offsetValues || [];\n        const barHeightOffsets = barHeightMetrics.offsetValues || [];\n        this._plotSpan = {\n            x: barWidthMetrics.groupSpan || 0,\n            y: barHeightMetrics.groupSpan || 0\n        };\n        this._plotPadding = {\n            x: barWidthMetrics.padding || 0,\n            y: barHeightMetrics.padding || 0\n        };\n\n        this._pointMap = {};\n        return normalizedData.map((data, i) => this.translatePoints(data,\n            {\n                barWidth: barWidthMetrics.span,\n                barWidthOffset: barWidthOffsets[i] || 0,\n                barHeight: barHeightMetrics.span,\n                barHeightOffset: barHeightOffsets[i] || 0\n            }));\n    }\n\n    getPlotPadding () {\n        return this._plotPadding;\n    }\n\n    resolveTransformType () {\n        this._transformType = getValidTransformForAggFn(this);\n    }\n\n    /**\n     * Gets the nearest point of the position passed.\n     * @param {number} x x position\n     * @param {number} y y position\n     * @return {Object} Nearest point.\n     */\n    getNearestPoint (x, y) {\n        if (!this.data()) {\n            return null;\n        }\n        let axis;\n        let value;\n        let points;\n        let uniqueFieldType;\n        let uniqueFieldIndex;\n        let filterData;\n        let identifiers;\n        let pointFound = null;\n        const dataModel = this.data();\n        const dataObj = dataModel.getData();\n        const fieldsConfig = dataModel.getFieldsConfig();\n        const axes = this.axes();\n        const data = dataObj.data;\n        const pointMap = this._pointMap;\n        const {\n                xField,\n                yField,\n                xFieldSubType,\n                yFieldSubType\n            } = this.encodingFieldsInf();\n\n        if (xFieldSubType === MeasureSubtype.CONTINUOUS) {\n            axis = axes.y;\n            value = axis.invert(y);\n            uniqueFieldIndex = fieldsConfig[yField].index;\n            uniqueFieldType = yFieldSubType;\n        } else {\n            axis = axes.x;\n            value = axis.invert(x);\n            uniqueFieldIndex = fieldsConfig[xField].index;\n            uniqueFieldType = xFieldSubType;\n        }\n\n        if (uniqueFieldType === DimensionSubtype.CATEGORICAL) {\n            points = pointMap[value];\n        }\n\n        if (uniqueFieldType === DimensionSubtype.TEMPORAL) {\n            filterData = [...new Set(data.map(d => d[uniqueFieldIndex]))];\n            value = getNearestValue(filterData, value);\n            points = pointMap[value];\n        }\n        const len = points && points.length;\n        points && points.sort((p1, p2) => p1.update.y - p2.update.y);\n        for (let i = 0; i < len; i++) {\n            const point = points[i];\n            const update = point.update;\n            if (x >= update.x && x <= (update.width + update.x) && y >= update.y && y <= (update.height + update.y)) {\n                pointFound = point;\n                break;\n            }\n            pointFound = null;\n        }\n\n        const values = pointFound && pointFound.source;\n        if (values) {\n            identifiers = this.getIdentifiersFromData(values, pointFound.rowId);\n        }\n        return pointFound ? {\n            dimensions: [pointFound.update],\n            id: identifiers,\n            layerId: this.id()\n        } : pointFound;\n    }\n\n    getPlotSpan () {\n        return this._plotSpan;\n    }\n\n    hasPlotSpan () {\n        return true;\n    }\n}\n","import { CLASSPREFIX } from '../../enums/constants';\n\nexport const defaultConfig = {\n    defClassName: 'layer-tick',\n    className: '',\n    classPrefix: CLASSPREFIX,\n    interaction: {\n        highlight: [{\n            type: 'stroke',\n            intensity: [0, 0, -15, 0]\n        }],\n        fade: [{\n            type: 'stroke',\n            intensity: [0, 0, 15, 0]\n        }],\n        focus: [{\n            type: 'stroke',\n            intensity: [0, 0, 15, 0]\n        }]\n    },\n    innerPadding: 0.1,\n    transform: {\n        type: 'identity'\n    },\n    transition: {\n        effect: 'cubic',\n        duration: 1000\n    },\n    interpolate: 'linear',\n    encoding: {\n        color: { },\n        x: {},\n        y: {},\n        x0: {},\n        y0: {},\n        radius: {},\n        radius0: {},\n        angle: {},\n        angle0: {},\n        strokeOpacity: {\n            value: 0.5\n        },\n        fillOpacity: {\n            value: 0.5\n        }\n    },\n    states: {\n        highlight: {\n            className: `${CLASSPREFIX}-layer-tick-highlight`\n        },\n        fadeout: {\n            className: `${CLASSPREFIX}-layer-tick-fadeout`\n        },\n        selected: {\n            className: `${CLASSPREFIX}-layer-tick-selected`\n        }\n    }\n};\n\n","import { selectElement, Symbols, pathInterpolators } from 'muze-utils';\n\nconst line = Symbols.line;\n\n/**\n * Draws ticks by using d3 selection\n * @param  {Object} params Contains container element and points\n * @return {Selection} Ticks Selection\n */\nexport default /* istanbul ignore next */ (params) => {\n    const { points, container, keyFn, className, interpolate, layer } = params;\n    const mount = selectElement(container);\n    const ticks = mount.selectAll('path').data(points, keyFn);\n    const ticksEnter = ticks.enter().append('path');\n    const graphicElems = layer._graphicElems;\n    mount.attr('class', className || '');\n    ticksEnter.each(function (d) {\n        const selection = selectElement(this);\n        const enter = d.enter || {};\n        Object.entries(enter).forEach(attr => (!isNaN(attr[1]) && selection.attr(attr[0], attr[1])));\n    });\n\n    ticks.exit().remove();\n    return ticks.merge(ticksEnter)\n                    .each(function (d) {\n                        const selection = selectElement(this);\n                        graphicElems[d.rowId] = selection;\n                        const update = d.update;\n                        const updateStyle = d.style || {};\n                        const x0 = update.x0 !== undefined ? update.x0 : update.x;\n                        const y0 = update.y0 !== undefined ? update.y0 : update.y;\n                        const curveInterpolatorFn = pathInterpolators[interpolate];\n                        const linepath = line()\n                            .curve(curveInterpolatorFn)\n                            .x(e => e[0])\n                            .y(e => e[1]);\n                        d.className && selection.classed(d.className, true);\n                        selection.attr('d', linepath([[update.x, update.y], [x0, y0]]));\n                        Object.entries(updateStyle).forEach(styleObj => selection.style(styleObj[0], styleObj[1]));\n                    });\n};\n\n","import { FieldType } from 'muze-utils';\nimport { PointLayer } from '../point';\nimport { defaultConfig } from './default-config';\nimport { ENCODING } from '../../enums/constants';\nimport drawTicks from './renderer';\nimport './styles.scss';\nimport { getAxesScales, positionPoints, getIndividualClassName,\n    getColorMetaInf, resolveEncodingValues, toCartesianCoordinates } from '../../helpers';\n\nconst pointTranslators = {\n    polar: (data, config = {}, layerInst) => {\n        const axes = layerInst.axes();\n        let points = [];\n        const { radius: radiusAxis, angle: angleAxis, angle0: angle0Axis } = axes;\n        const measurement = layerInst.measurement();\n\n        const colorAxis = axes.color;\n        const angleV = {};\n        const angle0V = {};\n        for (let i = 0, len = data.length; i < len; i++) {\n            const d = data[i];\n            const color = colorAxis.getColor(d.color);\n            const angles = angleAxis.getScaleValue(d.angle);\n            !angleV[d.angle] && (angleV[d.angle] = 0);\n            const { startAngle, endAngle } = angles[angleV[d.angle]++];\n            const angles0 = angle0Axis.getScaleValue(d.angle0);\n            !angle0V[d.angle0] && (angle0V[d.angle0] = 0);\n            const { startAngle: startAngle0, endAngle: endAngle0 } = angles0[angle0V[d.angle0]++];\n            const radius = radiusAxis.getOuterRadius(d.radius);\n            const angle = (startAngle + endAngle) / 2;\n            const angle0 = (startAngle0 + endAngle0) / 2;\n            const resolvedVal = resolveEncodingValues({\n                values: {\n                    radius,\n                    radius0: radiusAxis.getInnerRadius(d.radius0),\n                    color,\n                    angle,\n                    angle0,\n                    startAngle,\n                    endAngle,\n                    startAngle0,\n                    endAngle0\n                },\n                data: d\n            }, i, data, layerInst);\n            const point = {\n                enter: {},\n                update: {\n                    radius: resolvedVal.radius,\n                    radius0: resolvedVal.radius0,\n                    angle: resolvedVal.angle,\n                    angle0: resolvedVal.angle0\n                },\n                style: {\n                    stroke: resolvedVal.color\n                },\n                source: d.source,\n                rowId: d.rowId,\n                meta: getColorMetaInf(resolvedVal.color, colorAxis)\n            };\n            point.className = getIndividualClassName(d, i, data, layerInst);\n            points.push(point);\n        }\n        points = toCartesianCoordinates(positionPoints(layerInst, points), measurement, true);\n        return points;\n    },\n    cartesian: (data, config = {}, layerInst) => {\n        const axes = layerInst.axes();\n        let points = [];\n        const {\n                xAxis,\n                yAxis\n            } = getAxesScales(axes);\n        const {\n                xField,\n                yField,\n                x0Field,\n                y0Field,\n                xFieldType,\n                yFieldType\n            } = layerInst.encodingFieldsInf();\n        const isXDim = xFieldType === FieldType.DIMENSION;\n        const isYDim = yFieldType === FieldType.DIMENSION;\n        const key = isXDim ? ENCODING.X : (isYDim ? ENCODING.Y : null);\n        const measurement = layerInst.measurement();\n        const colorAxis = axes.color;\n        const { x: offsetX, y: offsetY } = config.offset;\n        const { x: xSpan, y: ySpan } = config.span;\n        for (let i = 0, len = data.length; i < len; i++) {\n            let xPx;\n            let x0Px;\n            let y0Px;\n            let yPx;\n            const d = data[i];\n            const row = d.source;\n            if (xField) {\n                xPx = xAxis.getScaleValue(d.x) + offsetX;\n                x0Px = xPx + xSpan;\n            }\n\n            if (yField) {\n                yPx = yAxis.getScaleValue(d.y) + offsetY;\n                y0Px = yPx !== null ? yPx + ySpan : null;\n            }\n\n            if (!xField) {\n                xPx = 0;\n                x0Px = measurement.width;\n                if (!isNaN(yPx)) {\n                    yPx += ySpan / 2;\n                    y0Px = yPx;\n                }\n            }\n\n            if (!yField) {\n                yPx = 0;\n                y0Px = measurement.height;\n                x0Px = xPx += xSpan / 2;\n            }\n\n            if (x0Field) {\n                x0Px = xAxis.getScaleValue(d.x0) + xSpan;\n                yPx += ySpan / 2;\n                y0Px -= ySpan / 2;\n            }\n\n            if (y0Field) {\n                y0Px = yAxis.getScaleValue(d.y0) + ySpan;\n                xPx += xSpan / 2;\n                x0Px -= xSpan / 2;\n            }\n            const color = colorAxis.getColor(d.color);\n            const resolvedEncodings = resolveEncodingValues({\n                values: {\n                    x: xPx,\n                    y: yPx,\n                    x0: x0Px,\n                    y0: y0Px,\n                    color\n                },\n                data: d\n            }, i, data, layerInst);\n\n            if (!isNaN(xPx) && !isNaN(yPx)) {\n                const point = {\n                    enter: {},\n                    update: {\n                        x: resolvedEncodings.x,\n                        y: resolvedEncodings.y,\n                        x0: resolvedEncodings.x0,\n                        y0: resolvedEncodings.y0\n                    },\n                    style: {\n                        stroke: resolvedEncodings.color\n                    },\n                    source: row,\n                    rowId: d.rowId,\n                    meta: getColorMetaInf(resolvedEncodings.color, colorAxis)\n                };\n                point.className = getIndividualClassName(d, i, data, layerInst);\n                points.push(point);\n                layerInst.cachePoint(d[key], point);\n            }\n        }\n        points = positionPoints(layerInst, points);\n        return points;\n    }\n};\n\n/**\n * This layer is used to create small lines. The orientation of the line is determined by the positional\n * encoding properties x0 and y0. The mark type of the layer is ```tick```.\n *\n * @public\n *\n * @class\n * @module TickLayer\n * @extends BaseLayer\n */\nexport default class TickLayer extends PointLayer {\n\n    /**\n     *\n     *\n     * @staticg\n     *\n     * @memberof TickLayer\n     */\n    static defaultConfig () {\n        return defaultConfig;\n    }\n\n    /**\n     *\n     *\n     * @static\n     *\n     * @memberof TickLayer\n     */\n    static formalName () {\n        return 'tick';\n    }\n\n    /**\n     *\n     *\n     * @static\n     *\n     * @memberof TickLayer\n     */\n    static drawFn () {\n        return drawTicks;\n    }\n\n    /**\n     *\n     *\n     *\n     * @memberof TickLayer\n     */\n    elemType () {\n        return 'path';\n    }\n\n    /**\n     * Generates an array of objects containing x, y, width and height of the points from the data\n     * @param  {Array.<Array>} data Data Array\n     * @param  {Object} encoding  Config\n     * @param  {Object} axes     Axes object\n     * @return {Array.<Object>}  Array of points\n     */\n    translatePoints (data, config) {\n        return pointTranslators[this.coord()](data, config, this);\n    }\n\n    getMeasurementConfig (offsetX, offsetY, widthSpan, heightSpan) {\n        return {\n            offset: {\n                x: (offsetX || 0),\n                y: (offsetY || 0)\n            },\n            span: {\n                x: widthSpan,\n                y: heightSpan\n            }\n        };\n    }\n}\n","export const AREA_LAYER = 'area';\nexport const ARC_LAYER = 'arc';\nexport const LINE_LAYER = 'line';\nexport const TEXT_LAYER = 'text';\nexport const POINT_LAYER = 'point';\nexport const BAR_LAYER = 'bar';\nexport const TICK_LAYER = 'tick';\nexport const SIMPLE_LAYER = 'simple';\nexport const BASE_LAYER = 'base';\n","import { isSimpleObject, mergeRecursive, getObjProp } from 'muze-utils';\n\nconst parseLayerDefinition = (sink, definition, layerDef, layerType) => {\n    for (const key in definition) {\n        if (Object.hasOwnProperty.call(definition, key)) {\n            let strs;\n            let propValue;\n            const def = definition[key];\n            if (isSimpleObject(def)) {\n                sink[key] = {};\n                parseLayerDefinition(sink[key], def, layerDef, layerType);\n            } else if (typeof def === 'string' && (strs = def.split('.')) && strs[0] === layerType) {\n                propValue = getObjProp(layerDef, ...strs.slice(1, strs.length));\n                if (propValue !== undefined) {\n                    sink[key] = propValue;\n                }\n            } else {\n                sink[key] = def;\n            }\n        }\n    }\n};\n\nconst sanitizeEncoding = (encoding) => {\n    // Create object for each encoding value if encoding value is a string\n    for (const key in encoding) {\n        if (typeof encoding[key] === 'string') {\n            encoding[key] = {\n                field: encoding[key]\n            };\n        }\n    }\n};\n\n/**\n * Layer Factory creates layers based on the layer type. All types of layers needs to register in\n * the layer factory. For getting a layer instance, getLayer method needs to invoked with the\n * layerType and other arguments. It also registers the definition of composite layers.\n *\n * @public\n *\n * @module LayerFactory\n */\nconst layerFactory = (() => {\n    const compositeLayers = {};\n    const factoryObj = {\n        setLayerRegistry: (reg) => {\n            factoryObj._layerRegistry = reg;\n        },\n        getSerializedConf: (mark, layerDef) => {\n            let serializedDefs;\n            const defs = compositeLayers[mark];\n            const newConf = mergeRecursive({}, layerDef);\n\n                // If it is a composite layer then resolve all the definitions of each unit layer\n            if (defs) {\n                serializedDefs = defs.map((unitLayerDef) => {\n                    const sDef = {};\n                    parseLayerDefinition(sDef, unitLayerDef, newConf, mark);\n                    sanitizeEncoding(sDef.encoding);\n                    return sDef;\n                });\n            } else {\n                const encoding = newConf.encoding;\n                // Create object for each encoding value if encoding value is a string\n                sanitizeEncoding(encoding);\n                serializedDefs = newConf;\n            }\n\n            return serializedDefs;\n        },\n        getLayerInstance: (layerDef, ...params) => {\n            const layerRegistry = factoryObj._layerRegistry;\n            layerDef = !(layerDef instanceof Array) ? [layerDef] : layerDef;\n            const instances = layerDef.map((layerObj) => {\n                const layerConstructor = layerRegistry[layerObj.mark];\n                return layerConstructor.create(...params);\n            });\n            return instances.length === 1 ? instances[0] : instances;\n        },\n        getLayerClass: mark => factoryObj._layerRegistry[mark],\n        /**\n         * Registers a new composite layer definition in the layer factory.\n         *\n         * @public\n         *\n         * @param {string} layerType Mark type of the new composite layer.\n         * @param {Array} layerDefs Layer definitions of the composite layer.\n         */\n        composeLayers: (layerType, layerDefs) => {\n            compositeLayers[layerType] = layerDefs;\n        },\n        sanitizeLayerConfig: (layerDef) => {\n            const newConf = mergeRecursive({}, layerDef);\n            sanitizeEncoding(newConf.encoding);\n            return newConf;\n        }\n    };\n    return factoryObj;\n})();\n\nexport default layerFactory;\n","import layerFactory from './layer-factory';\n\nexport default layerFactory;\n","import { AreaLayer } from './layers/area';\nimport { ArcLayer } from './layers/arc';\nimport { LineLayer } from './layers/line';\nimport { TextLayer } from './layers/text';\nimport { PointLayer } from './layers/point';\nimport { BarLayer } from './layers/bar';\nimport { BaseLayer } from './base-layer';\nimport * as LAYER_TYPES from './enums/layer-types';\nimport { TickLayer } from './layers/tick';\n\nexport const DEFAULT_LAYERS = {\n    [LAYER_TYPES.AREA_LAYER]: AreaLayer,\n    [LAYER_TYPES.ARC_LAYER]: ArcLayer,\n    [LAYER_TYPES.LINE_LAYER]: LineLayer,\n    [LAYER_TYPES.TEXT_LAYER]: TextLayer,\n    [LAYER_TYPES.POINT_LAYER]: PointLayer,\n    [LAYER_TYPES.TICK_LAYER]: TickLayer,\n    [LAYER_TYPES.BAR_LAYER]: BarLayer,\n    [LAYER_TYPES.BASE_LAYER]: BaseLayer\n};\n","import { ROWS, COLUMNS, COLOR, SHAPE, SIZE, DETAIL, LAYERS, TRANSFORM, CONFIG } from '../enums/constants';\n\n/**\n * This is the local options semantics based on which setters getters are created and reactivity is initiated.\n * This local object is only valid for Artboard.\n * Artboard merges global and local object both to the model\n *\n * Format\n *  PROPERTRY_NAME: {\n *      value: // default value of the property,\n *      meta: {\n *          typeCheck: // The setter value will be checked using this. If the value is function then the setter value\n *                     // is passed as args.\n *          typeExpected: // The output of typecheck action will be tested against this. Truthy value will set the\n *                       // value to the setter\n *          sanitizaiton: // Need for sanitization before type is checked\n *      }\n *  }\n *\n * @module\n */\n\nexport default {\n    [CONFIG]: {},\n    [ROWS]: {},\n    [COLUMNS]: {},\n    [COLOR]: {},\n    [SHAPE]: {},\n    [SIZE]: {},\n    [DETAIL]: {},\n    [LAYERS]: {},\n    [TRANSFORM]: {}\n};\n","import { ERROR_MSG } from 'muze-utils';\n\n/**\n * Interfaces for VisualGroup. Any new VisualGroup has to implement this class.\n * @class  SimpleGroup\n */\nclass SimpleGroup {\n\n    /**\n     * This method is used to set or get the DataModel instance.\n     *\n     * @param {DataModel | undefined} dataModel Instance of datamodel.\n\n     * @memberof  SimpleGroup\n     */\n    data () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    /**\n     * This method is used to set or get the group specific configuration\n     * properties\n     *\n     * @param {Object | undefined} configObj The input configuration.\n     *                                or instance of visual group.\n     * @memberof  SimpleGroup\n     */\n    config () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    /**\n     * This method is used to return a serialized representation of the\n     * instance's properties.\n     *\n     * @memberof  SimpleGroup\n     */\n    serialize () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    /**\n     * This method is used to get or set the measurement object which houses\n     * layout properties like width and height.\n     *\n     * @param {Object  | undefined} mObj The measurement properties.\n     * @memberof  SimpleGroup\n     */\n    measurement () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n}\n\nexport default SimpleGroup;\n","import { BEHAVIOURS, ACTIONS } from '@chartshq/muze-firebolt';\n\nexport const actionBehaviourMap = {\n    [ACTIONS.DRAG]: {\n        behaviours: [BEHAVIOURS.BRUSH],\n        touch: false\n    },\n    [ACTIONS.HOVER]: {\n        behaviours: [BEHAVIOURS.HIGHLIGHT]\n    },\n    [ACTIONS.LONGTOUCH]: {\n        behaviours: [BEHAVIOURS.SELECT],\n        touch: true\n    },\n    [ACTIONS.TOUCHDRAG]: {\n        behaviours: [BEHAVIOURS.BRUSH],\n        touch: true\n    },\n    [ACTIONS.CLICK]: {\n        behaviours: [BEHAVIOURS.SELECT],\n        touch: false\n    }\n};\n","import {\n    FieldType,\n    getDependencyOrder,\n    getObjProp,\n    defaultValue,\n    objectIterator,\n    unionDomain,\n    makeElement,\n    DimensionSubtype,\n    toArray,\n    MeasureSubtype,\n    getNearestValue\n} from 'muze-utils';\nimport { layerFactory, ENCODING } from '@chartshq/visual-layer';\n\nexport const getDimensionMeasureMap = (layers, fieldsConfig) => {\n    const retinalEncodingsAndMeasures = {};\n\n    layers.forEach((layer) => {\n        const {\n            colorField,\n            sizeField,\n            shapeField,\n            xField,\n            yField\n        } = layer.encodingFieldsInf();\n        const measures = [xField, yField].filter(field => fieldsConfig[field] && fieldsConfig[field].def.type ===\n            FieldType.MEASURE);\n        [colorField, sizeField, shapeField].forEach((field) => {\n            if (getObjProp(fieldsConfig, field, 'def', 'type') === FieldType.DIMENSION && measures.length) {\n                !retinalEncodingsAndMeasures[field] && (retinalEncodingsAndMeasures[field] = []);\n                retinalEncodingsAndMeasures[field].push(...measures);\n            }\n        });\n    });\n\n    for (const key in retinalEncodingsAndMeasures) {\n        if ({}.hasOwnProperty.call(retinalEncodingsAndMeasures, key)) {\n            retinalEncodingsAndMeasures[key] = [...new Set(retinalEncodingsAndMeasures[key])];\n        }\n    }\n    return retinalEncodingsAndMeasures;\n};\n\nexport const transformDataModels = (transform, dataModel) => {\n    const dataModels = {};\n    for (const key in transform) {\n        if ({}.hasOwnProperty.call(transform, key)) {\n            const transformVal = transform[key];\n            dataModels[key] = transformVal(dataModel);\n        }\n    }\n\n    return dataModels;\n};\n\nexport const getLayerFromDef = (context, definition, existingLayer, namespaces) => {\n    let instances = existingLayer;\n    const dependencies = context._dependencies;\n    const metaInf = context.metaInf();\n    if (!existingLayer) {\n        instances = layerFactory.getLayerInstance(definition);\n        toArray(instances).forEach((inst, i) => {\n            inst.metaInf({\n                unitRowIndex: metaInf.rowIndex,\n                unitColIndex: metaInf.colIndex,\n                namespace: namespaces[i],\n                parentNamespace: metaInf.namespace\n            })\n                .dependencies(dependencies)\n                .store(context.store());\n        });\n    }\n    const layers = {};\n    const instanceArr = toArray(instances);\n    definition = toArray(definition);\n    definition.reduce((acc, def, idx) => {\n        const instance = instanceArr[idx];\n        instance.coord(context.coord());\n        instance.config(def);\n        instance.valueParser(context.valueParser());\n        instance.dataProps({\n            timeDiffs: context._timeDiffs\n        });\n        if (def.name) {\n            instance.alias(def.name);\n        }\n        layers[instance.alias()] = instance;\n        return acc;\n    }, {});\n    return layers;\n};\n\nexport const resolveEncodingTransform = (layerInst, store) => {\n    const encodingTransform = layerInst.config().encodingTransform || {};\n    const resolvable = encodingTransform.resolvable;\n    let depArr = [];\n    if (resolvable) {\n        const resolved = resolvable(store);\n        depArr = resolved.depArr;\n        layerInst.encodingTransform(resolved.fn);\n    } else if (encodingTransform instanceof Function) {\n        layerInst.encodingTransform(encodingTransform);\n    }\n    return depArr;\n};\n\nexport const sanitizeLayerDef = (layerDefs) => {\n    const sanitizedDefs = [];\n    layerDefs.forEach((layerDef, i) => {\n        const def = layerDef.def;\n        const mark = layerDef.mark;\n        if (!def) {\n            const sConf = layerFactory.getSerializedConf(layerDef.mark, layerDef);\n            if (!sConf.name) {\n                sConf.name = `${mark}-${i}`;\n            }\n            sanitizedDefs.push({\n                mark: layerDef.mark,\n                def: sConf\n            });\n        } else {\n            if (!def.name) {\n                def.name = `${mark}-${i}`;\n            }\n            sanitizedDefs.push(layerDef);\n        }\n    });\n    return sanitizedDefs;\n};\n\nexport const attachDataToLayers = (layers, dm, transformedDataModels) => {\n    layers.forEach((layer) => {\n        const dataSource = layer.config().source;\n        const dataModel = dataSource instanceof Function ? dataSource(dm) :\n            (transformedDataModels[dataSource] || dm);\n        layer.data(dataModel);\n    });\n};\n\nexport const attachAxisToLayers = (axes, layers, layerAxisIndex) => {\n    layers.forEach((layer) => {\n        const layerId = layer.id();\n        const axesObj = {};\n\n        objectIterator(axes, (key) => {\n            const axisInf = layerAxisIndex[layerId];\n            if (axisInf) {\n                const axisArr = axes[key] || [];\n                const axisIndex = axisInf[key] >= 0 ? axisInf[key] : axisArr.length - 1;\n                axes[key] && (axesObj[key] = defaultValue(axes[key][axisIndex]));\n            }\n        });\n        Object.keys(axesObj).length && layer.axes(axesObj);\n    });\n};\n\nconst { X, Y, RADIUS, ANGLE, ANGLE0, RADIUS0 } = ENCODING;\n\nexport const getLayerAxisIndex = (layers, fields) => {\n    const layerAxisIndex = {};\n    layers.forEach((layer) => {\n        const { axis, encoding } = layer.config();\n        const id = layer.id();\n        [X, Y, ANGLE, ANGLE0, RADIUS].forEach((type) => {\n            let index;\n            const specificField = getObjProp(encoding, type, 'field');\n            const encodingField = type === RADIUS ? defaultValue(specificField, getObjProp(encoding, RADIUS0, 'field'))\n                : getObjProp(encoding, type, 'field');\n            const field = defaultValue(getObjProp(axis, type), encodingField);\n            if (fields[type] && fields[type].length) {\n                index = fields[type].findIndex(fieldInst => fieldInst.getMembers().indexOf(field) !== -1);\n            } else {\n                index = 0;\n            }\n            !layerAxisIndex[id] && (layerAxisIndex[id] = {});\n            layerAxisIndex[id][type] = index;\n        });\n    });\n    return layerAxisIndex;\n};\n\nconst getValidDomain = (domain, domain1, encodingType, fieldType) => {\n    if (encodingType === ANGLE || encodingType === ANGLE0) {\n        return domain.concat(domain1.filter(d => domain.indexOf(d) === -1));\n    }\n    return unionDomain([domain, domain1], fieldType);\n};\n\nexport const unionDomainFromLayers = (layers, axisFields, layerAxisIndex, fieldsConfig) => {\n    let domains = {};\n    layers = layers.filter(layer => layer.getDataDomain() !== null);\n    layers.forEach((layer) => {\n        let domainValues = {};\n        const config = layer.config();\n        // const encoding = config.encoding;\n        const layerDomain = layer.getDataDomain();\n        const layerId = layer.id();\n\n        if (layerDomain !== null && config.calculateDomain !== false) {\n            domainValues = Object.entries(layerDomain);\n            domains = domainValues.reduce((fieldDomain, domain) => {\n                const encodingType = domain[0];\n                const axisIndex = layerAxisIndex[layerId][encodingType];\n                const field = getObjProp(axisFields, encodingType, axisIndex);\n                !fieldDomain[encodingType] && (fieldDomain[encodingType] = {});\n                const encodingDomain = fieldDomain[encodingType];\n                if (field) {\n                    const fieldStr = `${field}`;\n                    encodingDomain[fieldStr] = encodingDomain[fieldStr] || [];\n                    encodingDomain[fieldStr] = getValidDomain(encodingDomain[fieldStr],\n                        domain[1], encodingType, fieldsConfig[field.getMembers()[0]].def.subtype);\n                }\n                return fieldDomain;\n            }, domains);\n        }\n    });\n    return domains;\n};\n\nexport const renderLayers = (context, container, layers, measurement) => {\n    context._lifeCycleManager.notify({ client: layers, action: 'beforedraw', formalName: 'layer' });\n    const config = context.config();\n    const classPrefix = config.classPrefix;\n    const orderedLayers = context.layers().sort((a, b) => a.config().order - b.config().order);\n    const layerParentGroup = makeElement(container, 'g', [1], `${classPrefix}-layer-group`);\n    const layerDepOrder = getDependencyOrder(context._layerDepOrder);\n    const groups = {};\n    makeElement(layerParentGroup, 'g', orderedLayers, null, {\n        update: (group, layer) => {\n            groups[layer.alias()] = {\n                group,\n                layer\n            };\n        }\n    });\n\n    const layerSeq = layerDepOrder.map(name => groups[name]);\n    layerSeq.forEach((o) => {\n        const layer = o.layer;\n        const group = o.group;\n        layer.measurement(measurement);\n        layer.dataProps({\n            timeDiffs: context._timeDiffs\n        });\n        layer.config().render !== false && layer.mount(group.node());\n    });\n    return this;\n};\n\nexport const getNearestDimensionalValue = (context, position) => {\n    const fields = context.fields();\n    if (!fields.x.length || !fields.y.length) {\n        return null;\n    }\n    const data = context.data();\n    const axes = context.axes();\n    const fieldsConfig = data.getFieldsConfig();\n    const xField = getObjProp(fields, 'x', 0).getMembers()[0];\n    const yField = getObjProp(fields, 'y', 0).getMembers()[0];\n    const xFieldType = fieldsConfig[xField].def.subtype;\n    const yFieldType = fieldsConfig[yField].def.subtype;\n\n    const entryVal = [['x', xFieldType, xField], ['y', yFieldType, yField]].find(entry =>\n        entry[1] === DimensionSubtype.CATEGORICAL || entry[1] === DimensionSubtype.TEMPORAL);\n\n    if (!entryVal || (xFieldType !== MeasureSubtype.CONTINUOUS && yFieldType !== MeasureSubtype.CONTINUOUS)) {\n        return null;\n    }\n    const field = entryVal[2];\n    const index = fieldsConfig[field].index;\n    let key = axes[entryVal[0]][0].invert(position[entryVal[0]]);\n    if (entryVal[1] === DimensionSubtype.TEMPORAL) {\n        const filterData = [...new Set(data.getData().data.map(d => d[index]))];\n        key = getNearestValue(filterData, key);\n    }\n\n    return key !== undefined ? [[field], [key]] : null;\n};\n\nexport const getLayersBy = (layers, searchBy, value) => layers.filter((layer) => {\n    const name = searchBy === 'type' ? layer.constructor.formalName() : layer.alias();\n    return name === value;\n});\n\nexport const removeLayersBy = (layers, searchBy, value) => {\n    layers.filter((inst) => {\n        const name = searchBy === 'type' ? inst.config().mark : inst.alias();\n        if (name === value) {\n            inst.remove();\n            return false;\n        }\n        return true;\n    });\n};\n\nexport const createSideEffectGroup = (container, className) => makeElement(container, 'g', [1], className).node();\n\nexport const createRenderPromise = (unit) => {\n    const renderedPromise = unit._renderedPromise;\n    renderedPromise.then(() => {\n        unit._renderedPromise = new Promise((resolve) => {\n            unit._renderedResolve = resolve;\n        });\n        createRenderPromise(unit);\n    });\n};\n\nexport const getRadiusRange = (width, height, config = {}) => {\n    const {\n        innerRadius,\n        outerRadius\n    } = config;\n\n    return [innerRadius || 0, outerRadius || Math.min(height,\n        width) / 2];\n};\n\nexport const setAxisRange = (context) => {\n    const axes = context.axes();\n    const { radius: radiusAxes } = axes;\n    if (radiusAxes) {\n        radiusAxes.forEach((axis) => {\n            axis.range(getRadiusRange(context.width(), context.height()));\n        });\n    }\n};\n\nexport const isXandYMeasures = (context) => {\n    const { x: xFields, y: yFields } = context.fields();\n    const [xMeasures, yMeasures] = [xFields, yFields].map(fields => fields\n        .every(field => field.type() === FieldType.MEASURE));\n    return xMeasures && yMeasures;\n};\n\nconst getKey = (arr, row) => {\n    let key = row[arr[0]];\n    for (let i = 1, len = arr.length; i < len; i++) {\n        key = `${key},${row[arr[i]]}`;\n    }\n    return key;\n};\n\nexport const getValuesMap = (model, context) => {\n    const valuesMap = {};\n    const { data: dataArr, schema, uids } = model.getData();\n    const fieldsConfig = model.getFieldsConfig();\n    const fieldIndices = isXandYMeasures(context) ? schema.map((d, i) => i) :\n                            Object.keys(model.getFieldspace().getDimension()).map(d => fieldsConfig[d].index);\n    dataArr.forEach((row, i) => {\n        const key = getKey(fieldIndices, row);\n        valuesMap[key] = uids[i];\n    });\n    return valuesMap;\n};\n\nexport const getSelectionRejectionModel = (model, propModel, measures, propValuesMap) => {\n    let rejectionModel;\n    const { data, schema } = propModel.getData();\n    const entryRowIds = [];\n    const exitRowIds = [];\n\n    if (schema.length) {\n        const fieldMap = model.getFieldsConfig();\n        const rowIdsObj = {};\n        const filteredSchema = measures ? schema.map((d, idx) => idx) :\n            Object.keys(model.getFieldspace().getDimension()).map(d => fieldMap[d].index);\n        data.forEach((row) => {\n            const key = getKey(filteredSchema, row);\n            const id = propValuesMap[key];\n            if (key in propValuesMap) {\n                entryRowIds.push(id);\n                rowIdsObj[id] = 1;\n            }\n        });\n        rejectionModel = model.select((fields, i) => {\n            if (!rowIdsObj[i]) {\n                exitRowIds.push(i);\n                return true;\n            }\n            return false;\n        }, {\n            saveChild: false\n        });\n    } else {\n        rejectionModel = propModel;\n    }\n\n    return {\n        model: [propModel, rejectionModel],\n        entryRowIds,\n        exitRowIds\n    };\n};\n\n","export const CLASSPREFIX = 'muze';\nexport const IDFIELD = '__id__';\nexport const GRID_LINE_PARENT_GROUP_CLASS = 'grid-lines';\nexport const GRID_BAND_PARENT_GROUP_CLASS = 'grid-bands';\nexport const GRID_PARENT_GROUP = 'grid-parent-group';\nexport const BAND = 'band';\nexport const TICK = 'tick';\nexport const GRID_BAND = 'gridBands';\nexport const GRID_LINE = 'gridLines';\nexport const CONSOLIDATED = 'consolidated';\nexport const FRAGMENTED = 'fragmented';\nexport const FACET_BY_FIELDS = 'facetByFields';\nexport const RETINAL_FIELDS = 'retinalFields';\nexport const PARENT_ALIAS = 'parentAlias';\nexport const LAYERS = 'layers';\nexport const CACHED_DATA = 'cachedData';\nexport const STORE = 'store';\n","import { getObjProp, defaultValue, makeElement, DimensionSubtype, DataModel, createSelection } from 'muze-utils';\nimport { ScaleType } from '@chartshq/muze-axis';\nimport { layerFactory, LAYER_TYPES } from '@chartshq/visual-layer';\nimport {\n    GRID_BAND,\n    GRID_LINE,\n    GRID_BAND_PARENT_GROUP_CLASS,\n    GRID_LINE_PARENT_GROUP_CLASS,\n    GRID_PARENT_GROUP\n} from '../enums/constants';\n\nconst { BAR_LAYER, TICK_LAYER } = LAYER_TYPES;\n\nconst LINEAR = ScaleType.LINEAR;\n\nconst getLayerDefinition = (context, axes, type, orientation) => {\n    let encoding;\n    const config = context.config();\n    const { classPrefix, gridLines, gridBands } = config;\n    const gridLineColor = gridLines.color;\n    const zeroLineColor = gridLines.zeroLineColor;\n    const defClassName = type === GRID_BAND ? gridBands.defClassName : gridLines.defClassName;\n    const gridBandColor = gridBands[orientation].color;\n    const axis = axes[orientation][0];\n    const isLinearScale = axis.constructor.type() === LINEAR;\n\n    if (type === GRID_BAND && isLinearScale) {\n        encoding = {\n            [orientation]: `${orientation}value`,\n            [`${orientation}0`]: `${orientation}value0`\n        };\n    } else {\n        encoding = {\n            [orientation]: isLinearScale ? `${orientation}value` : `${orientation}dim`\n        };\n    }\n    encoding.color = {\n        value: (data, i) => {\n            const isNegativeDomain = isLinearScale && axis.domain()[0] < 0;\n            if (type === GRID_BAND) {\n                return gridBandColor[i % 2];\n            }\n            return isNegativeDomain && data[orientation] === 0 ? zeroLineColor : gridLineColor;\n        }\n    };\n    const { color, shape, size } = context.axes();\n    return {\n        definition: {\n            defClassName: `${defClassName}-${orientation}`,\n            className: config.className,\n            name: orientation,\n            calculateDomain: false,\n            individualClassName: (data, i) => {\n                let className;\n                const isNegativeDomain = isLinearScale && axis.domain()[0] < 0;\n                if (isNegativeDomain && data.y === 0 && type !== GRID_BAND) {\n                    className = `${classPrefix}-axis-zero-line`;\n                } else {\n                    className = `${classPrefix}-grid-${type}-${orientation}-${i % 2}`;\n                }\n                return className;\n            },\n            [`pad${orientation.toUpperCase()}`]: type === GRID_BAND ? 0 : undefined,\n            encoding\n        },\n        axes: {\n            [orientation]: axis,\n            color: color[0],\n            shape: shape[0],\n            size: size[0]\n        },\n        interactive: false\n    };\n};\n\nconst getDefaultVisibilty = (show, axis) => {\n    if (axis.constructor.type() === LINEAR) {\n        return show;\n    }\n    return false;\n};\n\nexport const getGridLayerDefinitions = (context, config, type) => ['x', 'y'].map((axisType) => {\n    const axes = context.axes();\n    if (!axes[axisType]) {\n        return null;\n    }\n    const show = defaultValue(config[axisType] && config[axisType].show,\n        getDefaultVisibilty(config.show, axes[axisType][0]));\n\n    return show ? getLayerDefinition(context, axes, type, axisType) : null;\n}).filter(d => d !== null);\n\nconst dimensionSubTypes = Object.values(DimensionSubtype).reduce((acc, v) => {\n    acc[v] = 1;\n    return acc;\n}, {});\nconst getValidSubtype = subtype => (!dimensionSubTypes[subtype] ? DimensionSubtype.CATEGORICAL : subtype);\n\nexport const getGridLayerData = (axes, fields, fieldsConfig) => {\n    const gridData = {};\n\n    ['x', 'y'].forEach((type) => {\n        let ticks = axes[type][0].getTickValues();\n        const subtype = getObjProp(fieldsConfig, getObjProp(fields, type, 0).getMembers()[0], 'def', 'subtype');\n        const jsonData = [];\n        const schema = [\n            {\n                name: 'yvalue',\n                type: 'measure'\n            }, {\n                name: 'xvalue',\n                type: 'measure'\n            },\n            {\n                name: 'yvalue0',\n                type: 'measure'\n            }, {\n                name: 'xvalue0',\n                type: 'measure'\n            }, {\n                name: 'xdim',\n                type: 'dimension',\n                subtype: getValidSubtype(subtype)\n            }, {\n                name: 'ydim',\n                type: 'dimension',\n                subtype: getValidSubtype(subtype)\n            }\n        ];\n        const len = Math.max(ticks.length);\n        ticks = subtype === DimensionSubtype.TEMPORAL ? ticks.map(d => d.getTime()) : ticks;\n        for (let i = 0; i < len; i += 1) {\n            jsonData.push({\n                [`${type}value`]: ticks[i],\n                [`${type}value0`]: ticks[i + 1],\n                [`${type}dim`]: ticks[i],\n                [`${type}dim`]: ticks[i]\n            });\n        }\n        gridData[type] = new DataModel(jsonData, schema);\n    });\n    return gridData;\n};\n\nexport const createGridLineLayer = (context) => {\n    const vuConf = context.config();\n    const metaInf = context.metaInf();\n    const store = context.store();\n    const timeDiffs = context._timeDiffs;\n    [GRID_BAND, GRID_LINE].forEach((type) => {\n        let mark;\n        let config;\n        if (type === GRID_BAND) {\n            mark = BAR_LAYER;\n            config = vuConf.gridBands;\n        } else {\n            mark = TICK_LAYER;\n            config = vuConf.gridLines;\n        }\n        const definitions = getGridLayerDefinitions(context, config, type);\n\n        const sel = `_${type}Selection`;\n        context[sel] = createSelection(context[sel], (atomicDef) => {\n            const inst = layerFactory.getLayerInstance({ mark });\n            inst.dependencies(context._dependencies);\n            const name = atomicDef.definition.name;\n            inst.metaInf({\n                unitRowIndex: metaInf.rowIndex,\n                unitColIndex: metaInf.colIndex,\n                namespace: `${metaInf.namespace}${type}${name}`,\n                parentNamespace: metaInf.namespace\n            })\n                .store(store);\n            return inst;\n        }, definitions, atomicDef => atomicDef.definition.name);\n        context[sel].each((layer, atomicDef) => {\n            const definition = atomicDef.definition;\n            const sConf = layerFactory.getSerializedConf(mark, definition);\n            const axesObj = atomicDef.axes;\n            layer.config(sConf)\n                .dataProps({\n                    timeDiffs\n                })\n                .axes(axesObj);\n        });\n        context[`_${type}`] = context[sel].getObjects();\n    });\n};\n\nexport const attachDataToGridLineLayers = (context) => {\n    const axes = context.axes();\n    const gridLines = context._gridLines;\n    const gridBands = context._gridBands;\n    if (gridLines.length || gridBands.length) {\n        const gridLayerData = getGridLayerData(axes, context.fields(), context.data().getFieldsConfig());\n        [].concat(...gridBands, ...gridLines).forEach((inst) => {\n            inst.data(inst.axes().x ? gridLayerData.x : gridLayerData.y);\n        });\n    }\n};\n\nexport const renderGridLineLayers = (context, container) => {\n    const config = context.config();\n    const classPrefix = config.classPrefix;\n    const gridLines = context._gridLines;\n    const gridBands = context._gridBands;\n    const measurement = {\n        width: context.width(),\n        height: context.height()\n    };\n    const gridLineParentGroup = makeElement(container, 'g', [1], `${classPrefix}-${GRID_PARENT_GROUP}`);\n\n    [[gridLines, `${classPrefix}-${GRID_LINE_PARENT_GROUP_CLASS}`],\n            [gridBands, `${classPrefix}-${GRID_BAND_PARENT_GROUP_CLASS}`]].forEach((entry) => {\n                const [instances, parentGroupClass] = entry;\n                const mountPoint = makeElement(gridLineParentGroup, 'g', [1], `.${parentGroupClass}`);\n                const className = `${parentGroupClass}-group`;\n                makeElement(mountPoint, 'g', instances, `.${className}`, {\n                    update: (group, instance) => {\n                        instance.dataProps({ timeDiffs: context._timeDiffs })\n                            .measurement(measurement)\n                            .mount(group.node());\n                    }\n                });\n            });\n};\n","import { STATE_NAMESPACES, temporalFields, getObjProp, defaultValue } from 'muze-utils';\nimport * as PROPS from './enums/reactive-props';\nimport {\n    transformDataModels,\n    getDimensionMeasureMap,\n    attachDataToLayers,\n    attachAxisToLayers,\n    unionDomainFromLayers\n} from './helper';\n\nimport { createGridLineLayer } from './helper/grid-lines';\n\nconst removeExitLayers = (layerDefs, context) => {\n    const layersMap = context._layersMap;\n    const markSet = {};\n    layerDefs.forEach((layerDef, i) => {\n        const id = defaultValue(layerDef.name, `${layerDef.mark}-${i}`);\n        markSet[id] = true;\n    });\n\n    for (const key in layersMap) {\n        if (!(key in markSet)) {\n            layersMap[key].forEach(layer => layer.remove());\n            delete layersMap[key];\n        }\n    }\n};\n\nexport const calculateDomainListener = (context) => {\n    const { namespace } = context.metaInf();\n    const domain = unionDomainFromLayers(context.layers(), context.fields(), context._layerAxisIndex,\n        context.data().getFieldsConfig());\n    context.store().commit(`${STATE_NAMESPACES.UNIT_GLOBAL_NAMESPACE}.${PROPS.DOMAIN}`, domain, namespace);\n};\n\nexport const listenerMap = [\n    {\n        type: 'registerImmediateListener',\n        props: [PROPS.LAYERDEFS],\n        listener: (context, [, layerDefs]) => {\n            const fieldsVal = context.fields();\n            if (layerDefs && fieldsVal) {\n                removeExitLayers(layerDefs, context);\n                const queuedLayerDefs = context._queuedLayerDefs;\n                let layerDefArr = layerDefs;\n                queuedLayerDefs.forEach((defFn) => {\n                    layerDefArr = [...layerDefArr, ...defFn(layerDefs)];\n                });\n                context.addLayer(layerDefArr);\n                const adjustRange = context.layers().some(inst => inst.hasPlotSpan());\n                ['x', 'y'].forEach((type) => {\n                    const axisArr = defaultValue(getObjProp(context.axes(), type), []);\n                    axisArr.forEach((axis) => {\n                        axis.config({\n                            adjustRange\n                        });\n                    });\n                });\n                context._lifeCycleManager.notify({\n                    client: context.layers(),\n                    action: 'initialized',\n                    formalName: 'layer'\n                });\n            }\n        }\n    },\n    {\n        type: 'registerImmediateListener',\n        props: [PROPS.DATA],\n        listener: (context, [, dataModel]) => {\n            if (dataModel) {\n                const axesObj = context.axes();\n                const timeDiffs = {};\n                const timeDiffsByField = {};\n\n                Object.entries(temporalFields(dataModel)).forEach(([fieldName, fieldObj]) => {\n                    timeDiffsByField[fieldName] = fieldObj.minimumConsecutiveDifference();\n                });\n\n                Object.entries(context.fields()).forEach(([type, [field]]) => {\n                    if (field) {\n                        const timeDiff = timeDiffsByField[`${field}`];\n                        if (timeDiff) {\n                            timeDiffs[type] = timeDiff;\n                            axesObj[type].forEach(axis => axis.minDiff(timeDiff));\n                        }\n                    }\n                });\n\n                context._timeDiffsByField = timeDiffsByField;\n                context._timeDiffs = timeDiffs;\n                const firebolt = context.firebolt();\n                const originalData = context.cachedData()[0];\n                firebolt.createSelectionSet(context.data().getUids());\n                firebolt.attachPropagationListener(originalData);\n            }\n        }\n    },\n    {\n        type: 'registerImmediateListener',\n        props: [PROPS.CONFIG],\n        listener: (context, [, config]) => {\n            if (config) {\n                context.firebolt().config(config.interaction);\n                createGridLineLayer(context);\n            }\n        }\n    },\n    {\n        type: 'registerImmediateListener',\n        props: [PROPS.DATA, PROPS.TRANSFORM],\n        listener: (context, [, dataModel], [, transform]) => {\n            if (dataModel) {\n                const dataModels = transformDataModels(transform, dataModel);\n                const metaInf = context.metaInf();\n                context.store().commit(`${STATE_NAMESPACES.UNIT_LOCAL_NAMESPACE}.${PROPS.TRANSFORMEDDATA}`,\n                    dataModels, metaInf.namespace);\n            }\n        }\n    },\n    {\n        type: 'registerImmediateListener',\n        props: [PROPS.TRANSFORMEDDATA, PROPS.LAYERS],\n        listener: (context, [, transformedData], [, layers]) => {\n            const layerAxisIndexVal = context._layerAxisIndex;\n            const axesVal = context.axes();\n            const dataModel = context.data();\n            if (transformedData && layers && axesVal && layerAxisIndexVal) {\n                context._lifeCycleManager.notify({ client: layers, action: 'beforeupdate', formalName: 'layer' });\n                attachDataToLayers(layers, dataModel, transformedData);\n                context._dimensionMeasureMap = getDimensionMeasureMap(layers,\n                    dataModel.getFieldsConfig(), context.retinalFields());\n                attachAxisToLayers(axesVal, layers, layerAxisIndexVal);\n                context._lifeCycleManager.notify({ client: layers, action: 'updated', formalName: 'layer' });\n            }\n        }\n    }\n];\n","export const CONFIG = 'config';\nexport const DATA = 'data';\nexport const AXES = 'axes';\nexport const LAYERDEFS = 'layerDef';\nexport const WIDTH = 'width';\nexport const HEIGHT = 'height';\nexport const MOUNT = 'mount';\nexport const TRANSFORM = 'transform';\nexport const TRANSFORMEDDATA = 'transformedData';\nexport const DATADOMAIN = 'dataDomain';\nexport const FIELDS = 'fields';\nexport const LAYERAXISINDEX = 'layerAxisIndex';\nexport const LAYERS = 'layers';\nexport const DOMAIN = 'domain';\n\n","import { mergeRecursive } from 'muze-utils';\nimport { FACET_BY_FIELDS, RETINAL_FIELDS, PARENT_ALIAS, CACHED_DATA } from './enums/constants';\n\nexport const PROPS = {\n    [FACET_BY_FIELDS]: {},\n    [RETINAL_FIELDS]: {},\n    [PARENT_ALIAS]: {},\n    [CACHED_DATA]: {},\n    detailFields: {},\n    axes: {\n        defaultValue: {\n            x: [],\n            y: []\n        }\n    },\n    fields: {\n        defaultValue: {\n            x: [],\n            y: []\n        },\n        sanitization: (context, value) => mergeRecursive({\n            x: [],\n            y: []\n        }, value)\n    },\n    metaInf: {},\n    registry: {},\n    parentContainerInf: {},\n    valueParser: {\n        defaultValue: val => val\n    },\n    coord: {}\n};\n","import { DimensionSubtype } from 'muze-utils';\n\nconst getRangeFromData = (instance, selectionDataModel, propConfig) => {\n    let criteria;\n    const dataObj = selectionDataModel[0].getData();\n    const propCriteria = propConfig.payload.criteria;\n    const sourceIdentifiers = propConfig.sourceIdentifiers;\n    const schema = dataObj.schema;\n    const fieldMap = instance.data().getFieldsConfig();\n    const data = dataObj.data;\n    const isActionSourceSame = instance.id() === propConfig.sourceId;\n\n    if (isActionSourceSame) {\n        criteria = propCriteria;\n    } else {\n        criteria = (sourceIdentifiers !== null) ? schema.reduce((acc, obj, index) => {\n            let range;\n            const field = obj.name;\n            const fieldObj = fieldMap[field];\n            const type = fieldObj && (fieldObj.def.subtype ? fieldObj.def.subtype : fieldObj.def.type);\n            const isDimension = type === DimensionSubtype.CATEGORICAL;\n\n            if (!fieldObj) {\n                return acc;\n            }\n\n            if (!isDimension) {\n                range = [Math.min(...data.map(d => d[index])), Math.max(...data.map(d => d[index]))];\n            } else {\n                range = data.map(d => d[index]);\n            }\n            acc[field] = range;\n            return acc;\n        }, {}) : null;\n    }\n    return criteria;\n};\n\nexport const payloadGenerator = {\n    brush: (instance, selectionDataModel, propConfig) => {\n        const propPayload = propConfig.payload;\n        const criteria = getRangeFromData(instance, selectionDataModel, propConfig);\n        const payload = Object.assign({}, propPayload);\n        payload.criteria = criteria;\n        return payload;\n    },\n\n    __default: (instance, selectionDataModel, propConfig) => {\n        const propPayload = propConfig.payload;\n        const sourceIdentifiers = propConfig.sourceIdentifiers;\n        const dataObj = selectionDataModel[0].getData();\n        let schema = dataObj.schema;\n        const payload = Object.assign({}, propPayload);\n        schema = dataObj.schema;\n        const data = dataObj.data;\n        const sourceFields = schema.map(d => d.name);\n        payload.criteria = !sourceIdentifiers && selectionDataModel[0].isEmpty() ? null :\n            [sourceFields, ...data];\n        payload.sourceFields = sourceIdentifiers ? sourceIdentifiers.getSchema().map(d => d.name) : [];\n        return payload;\n    }\n};\n\n","import { isSimpleObject, FieldType, DataModel } from 'muze-utils';\n\nconst getModelWithFacetData = (dm, data) => {\n    const dataObj = dm.getData();\n    const schema1 = dataObj.schema;\n    const data1 = dataObj.data;\n    const jsonData = [];\n    const derivedSchema = data[0].map(d => ({\n        name: `${d}`,\n        type: FieldType.DIMENSION,\n        subtype: d.subtype()\n    }));\n    const dataAtFirstPos = data[1];\n\n    data1.forEach((d) => {\n        const tuple = {};\n        schema1.forEach((obj, i) => {\n            tuple[obj.name] = d[i];\n        });\n        derivedSchema.forEach((obj, i) => {\n            tuple[obj.name] = dataAtFirstPos[i];\n        });\n        jsonData.push(tuple);\n    });\n\n    return new DataModel(jsonData, [...schema1, ...derivedSchema]);\n};\n\nexport const propagateValues = (instance, action, config = {}) => {\n    let propagationData;\n    const payload = config.payload;\n    const selectionSet = config.selectionSet;\n    const propagationFieldInf = config.propagationFields[action] || {};\n    const propagationFields = propagationFieldInf.fields || [];\n    const append = propagationFieldInf.append;\n    const criteria = payload.criteria;\n    const context = instance.context;\n    const dataModel = context.cachedData()[0];\n    const sourceId = context.id();\n    const sideEfffects = instance.sideEffects();\n    const behaviourEffectMap = instance._behaviourEffectMap;\n    const mergedModel = selectionSet.mergedEnter.model;\n    const fieldsConfig = dataModel.getFieldsConfig();\n    payload.sourceUnit = sourceId;\n    payload.action = action;\n    payload.sourceCanvas = context.parentAlias();\n    const propagationBehaviourMap = instance._propagationBehaviourMap;\n    const propagationBehaviour = propagationBehaviourMap[action] || action;\n\n    let propFields = [];\n    if (criteria === null) {\n        propagationData = null;\n    } else if (isSimpleObject(criteria)) {\n        propFields = Object.keys(criteria || {});\n        propagationData = mergedModel ? mergedModel.project(propFields) : null;\n    } else {\n        propFields = criteria[0];\n        propagationData = mergedModel ? mergedModel.project(propFields) : null;\n    }\n\n    const facetByFields = context.facetByFields();\n    if (propagationData !== null && propagationFields.length) {\n        const fields = propagationData.getData().schema.map(d => d.name);\n        propagationData = getModelWithFacetData(propagationData, facetByFields);\n        propFields = append ? [...fields, ...propagationFields] : propagationFields;\n        propagationData = propagationData.project(propFields);\n    }\n\n    let propagateInterpolatedValues = false;\n    if (propFields.length && propFields.every(field => fieldsConfig[field] &&\n        fieldsConfig[field].def.type === FieldType.MEASURE)) {\n        propagateInterpolatedValues = true;\n    }\n\n    const groupId = context.parentAlias();\n    payload.action = action;\n    const behaviourInstance = instance._actions.behavioural[propagationBehaviour];\n    const isMutableAction = behaviourInstance ? behaviourInstance.constructor.mutates() : false;\n\n    const filterFn = (entry, propagationConf) => {\n        const effects = behaviourEffectMap[entry.config.action];\n        const mutates = entry.config.groupId ?\n            effects.some(d => sideEfffects[d.name || d].constructor.mutates()) : true;\n        return entry.config.groupId !== propagationConf.groupId && mutates;\n    };\n\n    const sourceBehaviour = instance._actions.behavioural[action];\n    const mutates = sourceBehaviour ? sourceBehaviour.constructor.mutates() : false;\n    let propConfig = {\n        payload,\n        action,\n        criteria: propagationData,\n        isMutableAction: mutates,\n        propagateInterpolatedValues,\n        groupId,\n        sourceId: mutates ? groupId : sourceId,\n        filterFn,\n        enabled: (propConf, firebolt) => (action !== propagationBehaviour ?\n            propConf.payload.sourceCanvas === firebolt.context.parentAlias() : true)\n    };\n\n    dataModel.propagate(propagationData, propConfig, true);\n\n    if (action !== propagationBehaviour) {\n        propConfig = {\n            payload,\n            sourceId: isMutableAction ? groupId : sourceId,\n            criteria: propagationData,\n            isMutableAction,\n            propagateInterpolatedValues,\n            action: propagationBehaviour,\n            groupId,\n            applyOnSource: action === propagationBehaviour,\n            enabled: (propConf, firebolt) => propConf.payload.sourceCanvas !== firebolt.context.parentAlias(),\n            filterFn\n        };\n\n        dataModel.propagate(propagationData, propConfig, true, {\n            filterImmutableAction: (actionInf, propInf) => actionInf.groupId !== propInf.groupId\n        });\n    }\n};\n","import { FieldType, intersect } from 'muze-utils';\nimport { Firebolt, SIDE_EFFECTS } from '@chartshq/muze-firebolt';\nimport { isXandYMeasures, getSelectionRejectionModel } from '../helper';\nimport { payloadGenerator } from './payload-generator';\nimport { propagateValues } from './data-propagator';\n\nconst sideEffectPolicy = (propPayload, context, propagationInf) => {\n    const { sourceIdentifiers, propagationData } = propagationInf;\n    const fieldsConfig = sourceIdentifiers.getFieldsConfig();\n    const sourceIdentifierFields = Object.keys(fieldsConfig).filter(field =>\n        fieldsConfig[field].def.type !== FieldType.MEASURE);\n    const propFields = Object.keys(propagationData[0].getFieldsConfig());\n    const hasCommonCanvas = propPayload.sourceCanvas === context.parentAlias();\n    return intersect(sourceIdentifierFields, propFields).length || hasCommonCanvas;\n};\n\n/**\n * This class manages the interactions of visual unit. It associates physical actions with\n * behavioural actions. It also propagates the behavioural actions to other datamodels.\n */\nexport default class UnitFireBolt extends Firebolt {\n    constructor (...params) {\n        super(...params);\n        const {\n            TOOLTIP,\n            HIGHLIGHTER,\n            ANCHORS,\n            BRUSH_ANCHORS,\n            PERSISTENT_ANCHORS\n        } = SIDE_EFFECTS;\n\n        const disabledSideEffects = [TOOLTIP, HIGHLIGHTER, ANCHORS, BRUSH_ANCHORS, PERSISTENT_ANCHORS];\n        disabledSideEffects.forEach((sideEffect) => {\n            this.changeSideEffectStateOnPropagation(sideEffect, sideEffectPolicy, 'sourceTargetPolicy');\n        });\n    }\n    propagate (behaviour, payload, selectionSet, sideEffects) {\n        propagateValues(this, behaviour, {\n            payload,\n            selectionSet,\n            sideEffects,\n            propagationFields: this._propagationFields\n        });\n    }\n\n    getApplicableSideEffects (sideEffects, payload, propagationInf) {\n        const context = this.context;\n        const unitId = context.id();\n        const aliasName = context.parentAlias();\n        const propagationSourceCanvas = propagationInf.propPayload && propagationInf.propPayload.sourceCanvas;\n        const sourceUnitId = propagationInf.propPayload && propagationInf.propPayload.sourceUnit;\n        const sourceSideEffects = this._sourceSideEffects;\n        const sideEffectInstances = this.sideEffects();\n        const actionOnSource = sourceUnitId ? sourceUnitId === unitId : true;\n\n        const applicableSideEffects = payload.sideEffects ? [{\n            effects: payload.sideEffects,\n            behaviours: [payload.action]\n        }] : sideEffects;\n        applicableSideEffects.forEach((d) => {\n            let mappedEffects = d.effects;\n            mappedEffects = mappedEffects.filter((se) => {\n                const mutates = sideEffectInstances[se.name || se].constructor.mutates();\n                if (mutates && propagationInf.isMutableAction === false) {\n                    return false;\n                }\n                if (!actionOnSource && payload.criteria !== null) {\n                    const sideEffectCheckers = Object.values(sourceSideEffects[se.name || se] || {});\n                    const { sourceIdentifiers, data: propagationData } = propagationInf;\n                    return sideEffectCheckers.length ? sideEffectCheckers.every(checker =>\n                        checker(propagationInf.propPayload, context, {\n                            sourceIdentifiers,\n                            propagationData\n                        })) : true;\n                }\n                if (propagationSourceCanvas === aliasName || actionOnSource) {\n                    return se.applyOnSource !== false;\n                }\n\n                return true;\n            });\n            d.effects = mappedEffects;\n        });\n        return applicableSideEffects;\n    }\n\n    shouldApplySideEffects (propagate) {\n        return propagate === false;\n    }\n\n    onDataModelPropagation () {\n        return (data, config) => {\n            let isMutableAction = false;\n            const context = this.context;\n            if (!context.mount()) {\n                return;\n            }\n            const {\n                model: propagationData,\n                entryRowIds,\n                exitRowIds\n            } = getSelectionRejectionModel(context.data(), data, isXandYMeasures(context), context._cachedValuesMap());\n            const {\n                enabled: enabledFn,\n                sourceIdentifiers,\n                action,\n                payload: propPayload\n            } = config;\n\n            const payloadFn = payloadGenerator[action] || payloadGenerator.__default;\n            const payload = payloadFn(context, propagationData, config);\n            const sourceBehaviours = this._sourceBehaviours;\n            const filterFns = Object.values(sourceBehaviours[action] || sourceBehaviours['*'] || {});\n            let enabled = filterFns.every(fn => fn(propPayload || {}, context, {\n                sourceIdentifiers,\n                propagationData\n            }));\n\n            if (enabledFn) {\n                enabled = enabledFn(config, this) && enabled !== false;\n            }\n\n            if (enabled) {\n                const effects = this._behaviourEffectMap[action];\n                const sideEffectInstances = this.sideEffects();\n                isMutableAction = config.groupId ?\n                    effects.some(d => sideEffectInstances[d.name || d].constructor.mutates()) : config.isMutableAction;\n\n                const propagationInf = {\n                    propagate: false,\n                    data: propagationData,\n                    entryRowIds,\n                    exitRowIds,\n                    propPayload,\n                    sourceIdentifiers,\n                    persistent: false,\n                    sourceId: config.propagationSourceId,\n                    isMutableAction: config.isMutableAction\n                };\n\n                this._actionHistory[action] = {\n                    payload,\n                    propagationInf,\n                    isMutableAction\n                };\n                this.dispatchBehaviour(action, payload, propagationInf);\n            }\n        };\n    }\n\n    prepareSelectionSets (behaviours) {\n        const data = this.context.data();\n        if (data) {\n            this.createSelectionSet(data.getData().uids, behaviours);\n        }\n        return this;\n    }\n\n    remove () {\n        this.context.cachedData()[0].unsubscribe('propagation');\n        return this;\n    }\n}\n","import { SpawnableSideEffect } from '@chartshq/muze-firebolt';\n\nexport const initSideEffects = (sideEffects, firebolt) => {\n    for (const key in sideEffects) {\n        if ({}.hasOwnProperty.call(sideEffects, key)) {\n            sideEffects[key] instanceof SpawnableSideEffect && sideEffects[key].drawingContext(() => {\n                const context = firebolt.context;\n                return context.getDrawingContext();\n            });\n            sideEffects[key].valueParser(firebolt.context.valueParser());\n        }\n    }\n};\n\nexport const clearActionHistory = (context) => {\n    const actionHistory = context._actionHistory;\n    for (const key in actionHistory) {\n        if (actionHistory[key].isMutableAction) {\n            delete context._actionHistory[key];\n        }\n    }\n};\n\nexport const dispatchQueuedSideEffects = (context) => {\n    const queuedSideEffects = context._queuedSideEffects;\n    Object.entries(queuedSideEffects).forEach((entry) => {\n        const sideEffect = entry[1];\n        context.dispatchSideEffect(sideEffect.name, ...sideEffect.params);\n    });\n    context._queuedSideEffects = {};\n};\n","import { CLASSPREFIX, CONSOLIDATED } from './enums/constants';\n\n/**\n * Returns the default configuration of the visual unit\n * @return {Object} Default configuration of visual unit\n */\nexport const defaultConfig = {\n    classPrefix: CLASSPREFIX,\n    defClassName: 'visual-unit',\n    className: '',\n    trackerClassName: 'visual-unit-tracker',\n    minOuterRadius: 10,\n    gridLines: {\n        defClassName: 'axis-grid-lines',\n        className: '',\n        show: true,\n        color: '#efefef',\n        zeroLineColor: '#b6b6b6'\n    },\n    gridBands: {\n        defClassName: 'axis-grid-bands',\n        className: '',\n        show: false,\n        y: {\n            color: ['#fff', '#fbfbfb']\n        },\n        x: {\n            color: ['#fff', '#f9f9f9']\n        }\n    },\n    arcLayerClassName: 'layer-arc',\n    interaction: {\n        tooltip: {\n            mode: CONSOLIDATED\n        }\n    },\n    sideEffectClassName: 'side-effect-container'\n};\n","import { mergeRecursive, DataModel } from 'muze-utils';\nimport { defaultConfig } from './default-config';\nimport { CONFIG, LAYERDEFS, TRANSFORM, DATA, LAYERS, TRANSFORMEDDATA } from './enums/reactive-props';\nimport { sanitizeLayerDef, getValuesMap } from './helper';\n\nexport default {\n    [CONFIG]: {\n        value: null,\n        meta: {\n            sanitization: (config, oldConfig) => (\n                mergeRecursive(oldConfig || mergeRecursive({}, defaultConfig), config)\n            )\n        }\n    },\n    [LAYERDEFS]: {\n        value: null,\n        meta: {\n            preset: layerDef => sanitizeLayerDef(layerDef)\n        }\n    },\n    [TRANSFORM]: {\n        value: null\n    },\n    [LAYERS]: {\n        value: null\n    },\n    [DATA]: {\n        value: null,\n        meta: {\n            typeCheck: d => d instanceof DataModel,\n            preset: (data, context) => {\n                context._cachedValuesMap = ((model) => {\n                    let valuesMap = null;\n                    return () => {\n                        if (valuesMap) {\n                            return valuesMap;\n                        }\n                        valuesMap = getValuesMap(model, context);\n                        return valuesMap;\n                    };\n                })(data);\n                if (context._cache) {\n                    const cachedData = context.cachedData();\n                    context.cachedData([...cachedData, data]);\n                } else {\n                    const oldData = context.cachedData()[0];\n                    oldData && oldData.unsubscribe('propagation');\n                    context.cachedData([data]);\n                }\n            }\n        }\n    },\n    [TRANSFORMEDDATA]: {\n        value: null\n    },\n    width: {\n        value: null\n    },\n    height: {\n        value: null\n    }\n};\n","import { layerFactory } from '@chartshq/visual-layer';\nimport {\n    setAttrs,\n    getUniqueId,\n    getQualifiedClassName,\n    selectElement,\n    transactor,\n    makeElement,\n    generateGetterSetters,\n    getDataModelFromIdentifiers,\n    isSimpleObject,\n    transposeArray,\n    CommonProps,\n    toArray,\n    STATE_NAMESPACES\n} from 'muze-utils';\nimport { physicalActions, sideEffects, behaviouralActions, behaviourEffectMap } from '@chartshq/muze-firebolt';\nimport { actionBehaviourMap } from './firebolt/action-behaviour-map';\nimport {\n    renderLayers,\n    getNearestDimensionalValue,\n    removeLayersBy,\n    getLayersBy,\n    getLayerFromDef,\n    getLayerAxisIndex,\n    sanitizeLayerDef,\n    createSideEffectGroup,\n    resolveEncodingTransform,\n    createRenderPromise,\n    setAxisRange\n} from './helper';\nimport { renderGridLineLayers, attachDataToGridLineLayers } from './helper/grid-lines';\nimport { calculateDomainListener, listenerMap } from './listener-map';\nimport { PROPS } from './props';\nimport UnitFireBolt from './firebolt';\nimport { initSideEffects, dispatchQueuedSideEffects, clearActionHistory } from './firebolt/helper';\nimport './styles.scss';\nimport localOptions from './local-options';\nimport { WIDTH, HEIGHT } from './enums/reactive-props';\n\nconst FORMAL_NAME = 'unit';\nconst unitNs = [STATE_NAMESPACES.UNIT_GLOBAL_NAMESPACE, STATE_NAMESPACES.UNIT_LOCAL_NAMESPACE];\nconst groupNs = STATE_NAMESPACES.GROUP_GLOBAL_NAMESPACE;\n\n/**\n * Visual Unit is hierarchical component created by {@link VisualGroup}. This component accepts layer definitions\n * and creates concrete layer instances from them, binds data and attaches axis to them. It also retreives the domain\n * from the layers and unions them and sets them on corresponding axis instances. This also creates the parent svg\n * groups for all the layers and delegates the rendering to all the layers.\n *\n * @public\n * @module VisualUnit\n * @class\n */\nexport default class VisualUnit {\n\n    /**\n     * Creates instance of visualization unit.\n     *\n     * @param {Object} registry  Component registry\n     * @param {Object} dependencies  Dependencies required by visual unit.\n     */\n    constructor (registry, dependencies) {\n        this._id = getUniqueId();\n        this._dependencies = dependencies;\n        this._renderedResolve = null;\n        this._renderedPromise = new Promise((resolve) => {\n            this._renderedResolve = resolve;\n        });\n        createRenderPromise(this);\n        this._lifeCycleManager = dependencies.lifeCycleManager;\n        this._layersMap = {};\n        this._gridLinesSelection = null;\n        this._gridBandsSelection = null;\n        this._gridLines = [];\n        this._gridBands = [];\n        this._layerAxisIndex = {};\n        this._queuedLayerDefs = [];\n        layerFactory.setLayerRegistry(registry.layerRegistry);\n        generateGetterSetters(this, PROPS);\n        this.registry(registry);\n        this.cachedData([]);\n    }\n\n    static formalName () {\n        return FORMAL_NAME;\n    }\n\n    static getState () {\n        return [\n            {\n                domain: null\n            },\n            Object.keys((localOptions)).reduce((acc, v) => {\n                acc[v] = localOptions[v].value;\n                return acc;\n            }, {})\n        ];\n    }\n\n    static getQualifiedStateProps () {\n        const unitState = VisualUnit.getState();\n        return unitState.map((state, i) => Object.keys(state).map(prop => `${unitNs[i]}.${prop}`));\n    }\n\n    static getListeners () {\n        return {\n            store: [...listenerMap.map((d) => {\n                const o = Object.assign({}, d);\n                const localNs = unitNs[1];\n                o.props = o.props.map(prop => `${localNs}.${prop}`);\n                return o;\n            }), {\n                type: 'registerImmediateListener',\n                props: [`${STATE_NAMESPACES.LAYER_GLOBAL_NAMESPACE}.domain`],\n                listener: calculateDomainListener\n            }, {\n                type: 'registerImmediateListener',\n                props: [`${unitNs[1]}.${WIDTH}`,\n                    `${unitNs[1]}.${HEIGHT}`,\n                    ...['x', 'y'].map(type => `${groupNs}.domain.${type}`)],\n                listener: (context, [, width], [, height]) => {\n                    if (width && height) {\n                        attachDataToGridLineLayers(context);\n                    }\n                },\n                subNamespace: (context) => {\n                    const { rowIndex, colIndex, namespace } = context.metaInf();\n                    return {\n                        [`${unitNs[1]}.${WIDTH}`]: namespace,\n                        [`${unitNs[1]}.${HEIGHT}`]: namespace,\n                        [`${groupNs}.domain.x`]: `${colIndex}0`,\n                        [`${groupNs}.domain.y`]: `${rowIndex}0`\n                    };\n                }\n            }],\n            throwback: [\n                {\n                    type: 'registerChangeListener',\n                    props: [CommonProps.ON_LAYER_DRAW],\n                    listener: (context, [, drawn]) => {\n                        if (drawn) {\n                            const firebolt = context.firebolt();\n                            dispatchQueuedSideEffects(firebolt);\n                            clearActionHistory(firebolt);\n                        }\n                        context._renderedResolve();\n                        context._lifeCycleManager.notify({\n                            client: context.layers(),\n                            action: 'drawn',\n                            formalName: 'layer'\n                        });\n                    }\n                }\n            ]\n        };\n    }\n\n    store (...params) {\n        if (params.length) {\n            const store = this._store = params[0];\n            const { throwback, fireboltDeps } = this._dependencies;\n            const { namespace } = this.metaInf();\n\n            store.addSubNamespace(namespace, FORMAL_NAME, this);\n            throwback.addSubNamespace(namespace, FORMAL_NAME, this);\n            transactor(this, localOptions, store, {\n                subNamespace: namespace,\n                namespace: `${STATE_NAMESPACES.UNIT_LOCAL_NAMESPACE}`\n            });\n\n            this.firebolt(new UnitFireBolt(this, {\n                physical: Object.assign({}, physicalActions, fireboltDeps.physicalActions),\n                behavioural: Object.assign({}, behaviouralActions, fireboltDeps.behaviouralActions),\n                physicalBehaviouralMap: actionBehaviourMap\n            }, Object.assign({}, sideEffects, fireboltDeps.sideEffects), behaviourEffectMap));\n            return this;\n        }\n        return this._store;\n    }\n\n    /**\n     * Static helper for creates a unit instance\n     *\n     * @param {Object} [id] optional unique identifier for a unit; , id is calculated internally\n     * @param {DataModel} data instance of datamodel\n     * @param {Array.<Layer>} layers layer configuration\n     * @param {Object} config configurtion for the visual unit\n     * @return {VisualUnit} Instance of a unit\n     */\n    static create (...params) {\n        return new this(...params);\n    }\n\n    /**\n     * Returns the instance of firebolt associated with this visual unit. Firebolt dispatches the behavioural actions\n     * when any physical action happens on the elements of visual unit.\n     *\n     * @public\n     *\n     * @return {Firebolt} Instance of firebolt.\n     */\n    firebolt (...firebolt) {\n        if (firebolt.length) {\n            this._firebolt = firebolt[0];\n            return this;\n        }\n        return this._firebolt;\n    }\n\n    /**\n     * Returns the unique id of this visual unit.\n     *\n     * @public\n     * @return {string} Unique identifier.\n     */\n    id () {\n        return this._id;\n    }\n\n    lockModel () {\n        this.store().lockModel();\n        return this;\n    }\n\n    unlockModel () {\n        this.store().unlockModel();\n        return this;\n    }\n\n    timeDiffsByField (...params) {\n        if (params.length) {\n            return this;\n        }\n        return this._timeDiffsByField;\n    }\n\n    /**\n     * Renders the visual unit. It creates the layout and renders the axes and layers.\n     *\n     * @return {VisualUnit} Instance of visual unit.\n     */\n    render (container) {\n        const config = this.config();\n        const { className, defClassName, sideEffectClassName, classPrefix } = config;\n        const qualifiedClassName = getQualifiedClassName(defClassName, this.id(), config.classPrefix);\n        const width = this.width();\n        const height = this.height();\n        const containerSelection = selectElement(container).style('position', 'relative');\n\n        this._rootSvg = makeElement(containerSelection, 'svg', [null], className)\n                        .style('width', `${width}px`).style('height', `${height}px`);\n\n        const node = this._rootSvg.node();\n        setAttrs(node, {\n            width,\n            height,\n            class: qualifiedClassName.join(' ')\n        });\n\n        setAxisRange(this);\n        renderGridLineLayers(this, node);\n        renderLayers(this, node, this.layers(), {\n            width,\n            height\n        });\n        this._sideEffectGroup = createSideEffectGroup(node, `${classPrefix}-${sideEffectClassName}`);\n        const firebolt = this.firebolt();\n        initSideEffects(firebolt.sideEffects(), firebolt);\n        return this;\n    }\n\n    done () {\n        return this._renderedPromise;\n    }\n\n    /**\n     * Caches all the datamodels in an array from the next `data()` call on visual unit until `clearCaching()` or\n     * `resetData()` is called on it.\n     *\n     * @public\n     * @return {VisualUnit} Instance of visual unit.\n     */\n\n    enableCaching () {\n        this._cache = true;\n        return this;\n    }\n\n    /**\n     * Clears all the previous cached data.\n     *\n     * @public\n     * @segment VisualUnit\n     * @return {VisualUnit} Instance of visual unit.\n     */\n    clearCaching () {\n        this._cache = false;\n        this.cachedData([this.cachedData()[0]]);\n        return this;\n    }\n\n    /**\n     * Returns the drawing information from visual unit.Drawing context contains the dimensions of unit and the svg\n     * container of the visual unit.\n     *\n     * @public\n     *\n     * @return {Object} Drawing information.\n     *      ```\n     *          {\n     *              htmlContainer: // Html container of svg container of the visual unit\n     *              svgContainer: // Root svg container\n     *              width: // Width of the visual unit\n     *              height: // Height of the visual unit\n     *              sideEffectGroup: // Svg group for drawing side effect elements.\n     *              parentContainer: // Parent html container of the visual unit.\n     *              xOffset: // x offset space from the starting x position of the container,\n     *              yOffset: // y offset space from the starting y position of the container\n     *          }\n     *      ```\n     */\n    getDrawingContext () {\n        const rootSvg = this._rootSvg && this._rootSvg.node();\n        const width = this.width();\n        const height = this.height();\n        const { el, dimensions } = this.parentContainerInf();\n        return {\n            htmlContainer: this.mount(),\n            svgContainer: rootSvg,\n            width,\n            height,\n            sideEffectGroup: this._sideEffectGroup,\n            parentContainer: el,\n            parentContainerDimensions: dimensions,\n            xOffset: 0,\n            yOffset: 0\n        };\n    }\n\n    /**\n     * Returns the serialized configuration of visual unit.\n     *\n     * @return {Object} serialized configuration\n     */\n    serialize () {\n        return {\n            layers: this.layers().map(layer => layer.serialize()),\n            config: this.config(),\n            axes: this.axes().map(axis => axis.serialize())\n        };\n    }\n\n    mount (...mount) {\n        if (mount.length) {\n            this._mount = mount[0];\n            this.render(mount[0]);\n            this.firebolt().mapActionsAndBehaviour();\n            return this;\n        }\n        return this._mount;\n    }\n\n    /**\n     * Adds a new layer to the visual unit. It takes a layer definition and creates layer instances from them. It does\n     * not render the layers. It returns the layer instances in an array. If the layer definition is a composite layer,\n     * then multiple layer instances will be returned in the array.\n     *\n     * To add a layer in the unit,\n     * ```\n     *      unit.addLayer({\n     *          name: 'bullet',\n     *          mark: 'bar',\n     *          encoding: {\n     *              x: 'Year',\n     *              y: 'Acceleration',\n     *              color: 'Origin'\n     *          }\n     *      });\n     * ```\n     * @public\n     * @param {Object} layerDef Definition of new layer.\n     *\n     * @return {Array} Array of layer instances.\n     */\n    addLayer (layerDefinition) {\n        if (layerDefinition instanceof Function) {\n            this._queuedLayerDefs.push(layerDefinition);\n            return this;\n        }\n        const layerDefinitions = sanitizeLayerDef(toArray(layerDefinition));\n\n        const layersMap = this._layersMap;\n        const markSet = {};\n        const store = {\n            layers: {},\n            components: {\n                unit: this\n            }\n        };\n        let layerIndex = 0;\n        const metaInf = this.metaInf();\n        const layers = layerDefinitions.sort((a, b) => a.order - b.order).reduce((layersArr, layerDef) => {\n            const definition = layerDef.def;\n            const markId = definition.name;\n            const defArr = toArray(definition);\n            const namespaces = [];\n            defArr.forEach((def) => {\n                def.order = layerDef.order + layerIndex;\n                const namespace = `${metaInf.namespace}-${def.mark}-${getUniqueId()}`;\n                namespaces.push(namespace);\n            });\n            layerIndex += defArr.length;\n            const instances = getLayerFromDef(this, definition, layersMap[markId], namespaces);\n            store.layers = Object.assign(store.layers, instances);\n            const instanceValues = Object.values(instances);\n            layersArr = layersArr.concat(...instanceValues);\n            layersMap[markId] = instanceValues;\n            markSet[markId] = markId;\n            return layersArr;\n        }, []);\n\n        store.unit = this;\n        const layerdeps = {};\n        const layersArr = [].concat(...Object.values(this._layersMap));\n        layersArr.forEach((layer) => {\n            const alias = layer.alias();\n            store.layers[alias] = layer;\n            layerdeps[alias] = [];\n        });\n        layers.forEach((layer) => {\n            const depArr = resolveEncodingTransform(layer, store);\n            layerdeps[layer.alias()] = depArr;\n        });\n\n        this._layerDepOrder = layerdeps;\n        this._layerAxisIndex = Object.assign(this._layerAxisIndex, getLayerAxisIndex(layers, this.fields()));\n        this.layers(layersArr);\n        return layers;\n    }\n\n    /**\n     *\n     *\n     *\n     * @memberof VisualUnit\n     */\n    remove () {\n        const formalName = this.constructor.formalName();\n        const { lifeCycleManager, throwback } = this._dependencies;\n        const { namespace } = this.metaInf();\n        lifeCycleManager.notify({ client: this, action: 'beforeremove', formalName: 'unit' });\n        const layers = this.layers();\n        this.store().removeSubNamespace(namespace, formalName);\n        throwback.removeSubNamespace(namespace, FORMAL_NAME);\n        selectElement(this.mount()).remove();\n        this.firebolt().remove();\n        // Remove layers\n        lifeCycleManager.notify({ client: layers, action: 'beforeremove', formalName: 'layer' });\n        [...layers, ...this._gridLines, ...this._gridBands].forEach(layer => layer.remove());\n        lifeCycleManager.notify({ client: layers, action: 'removed', formalName: 'layer' });\n        lifeCycleManager.notify({ client: this, action: 'removed', formalName: 'unit' });\n        return this;\n    }\n\n    /**\n     *\n     *\n     * @param {*} identifiers\n     *\n     * @memberof VisualUnit\n     */\n    getDataModelFromIdentifiers (identifiers, mode, parentModel) {\n        if (identifiers === null) {\n            return null;\n        }\n        const dataModel = parentModel || this.data();\n        return getDataModelFromIdentifiers(dataModel, identifiers, mode);\n    }\n\n    /**\n     * Resets the data of visual unit to original data model. It also clears the cached data.\n     *\n     * @public\n     * @segment VisualUnit\n     * @return {VisualUnit} Instance of visual unit.\n     */\n    resetData () {\n        this.data(this.cachedData()[0]);\n        return this;\n    }\n\n    /**\n     *\n     *\n     *\n     * @memberof VisualUnit\n     */\n    getSourceInfo () {\n        return {\n            dimensionMeasureMap: this._dimensionMeasureMap,\n            fields: this.fields(),\n            data: this.data(),\n            axes: this.axes()\n        };\n    }\n\n    getDataDomain () {\n        return this.store().get(`${STATE_NAMESPACES.UNIT_GLOBAL_NAMESPACE}.domain`, this.metaInf().namespace);\n    }\n\n    /**\n     *\n     *\n     *\n     * @memberof VisualUnit\n     */\n    getDefaultTargetContainer () {\n        const { classPrefix, defClassName } = this.config();\n        return [`.${classPrefix}-${defClassName}`];\n    }\n\n    /**\n     * Returns an array of layer instances which matches the supplied mark type.\n     *\n     * @public\n     *\n     * @param {string} type Mark type of layer.\n     *\n     * @return {Array} Array of layer instances.\n     */\n    getLayersByType (type) {\n        const layers = getLayersBy(this.layers(), 'type', type);\n        return layers;\n    }\n\n    /**\n     * Returns the layer instance which matches the supplied layer name. If no layer is found, then it returns\n     * undefined.\n     *\n     * @public\n     * @param {string} name Name of layer.\n     *\n     * @return {VisualUnit} Layer instance.\n     */\n    getLayerByName (name) {\n        const layers = getLayersBy(this.layers(), 'name', name);\n        return layers[0];\n    }\n\n    /**\n     * Returns the point located nearest to the supplied x and y position. It returns the unique identifiers of the\n     * point. This function also accepts an additional configuration `getAllPoints` inside `config` object in the third\n     * argument which if set to true, then it returns the identifiers of all the points which falls on the nearest\n     * x value or y value if any one of the field is a dimension. Additionally, a target property is also returned\n     * which contains the identifier of the nearest point. If no nearest point is found, then it returns identifier\n     * as null.\n     *\n     * @public\n     *\n     * @param {number} x X Position of the point from where nearest point is to be found.\n     * @param {number} y Y Position of the point from where nearest point is to be found.\n     * @param {Object} config Additional configuration options.\n     * @param {boolean} config.getAllPoints If true, then returns all the points nearest to the x value or y value if\n     * it is dimension.\n     * @param {Object} config.data Data associated with the nearest point.\n     * @return {Object} Nearest point information\n     * ```\n     *      {\n     *          id: [['Origin'], ['USA'], ['Japan']], // Identifiers of all the points closest to the x value.\n     *          target: [['Origin'], ['Japan']] // Identifier of the nearest point.\n     *      }\n     * ```\n     */\n    getNearestPoint (x, y, config) {\n        let pointObj = {\n            id: null\n        };\n        const dimValue = getNearestDimensionalValue(this, {\n            x,\n            y\n        });\n\n        if (dimValue !== null && config.getAllPoints) {\n            pointObj.id = dimValue;\n            const pointInf = this.getMarkInfFromLayers(x, y, config);\n            pointObj.target = pointInf && pointInf.id ? pointInf.id : pointObj.id;\n            return pointObj;\n        }\n\n        const markInf = this.getMarkInfFromLayers(x, y, config) || { id: null };\n        pointObj = Object.assign({}, markInf);\n\n        pointObj.target = markInf.id;\n        return pointObj;\n    }\n\n    getMarkInfFromLayers (x, y, args) {\n        const layers = this.layers();\n        const len = layers.length;\n        let point = null;\n        // Iterate through the layers array and fetch the nearest point from each layer. If a valid\n        // nearest point is found from any layer, then return that point.\n        for (let i = 0; i < len; i++) {\n            const layer = layers[i];\n            const config = layer.config();\n            if (config.interactive !== false) {\n                point = layer.getNearestPoint(x, y, args);\n            }\n            if (point) {\n                return point;\n            }\n        }\n        return point;\n    }\n\n    /**\n     * Get the information of all the marks such as x, y position and size from supplied identifiers. It\n     * returns an array of points whose data matches the given identifiers.\n     *\n     * @public\n     *\n     * @param {Array|Object} identifiers Field names and their corresponding values.\n     * ```\n     * identifiers can be given in an array of array,\n     *      ['Origin', 'Name'], // Names of the fields supplied in first array\n     *      ['USA', 'ford'], // Data values of each field supplied in rest of the arrays.\n     *      ['Japan', 'ford']\n     * or in an object,\n     *      {\n     *          Origin: ['USA']\n     *      }\n     * ```\n     * @param {Object} config Optional configurations which decides which information of the mark will\n     * be retrieved.\n     * @param {boolean} [config.getAllAttrs = false] If true, then returns all the information of each mark.\n     * @param {boolean} [config.getBBox = false] If true, then returns the bounding box of each mark.\n     *\n     * @return {Array} Array of objects containing the information of each point.\n     * ```\n     * By default, the method returns the array of points in this structure,\n     *      [\n     *          {\n     *              x: 20,\n     *              y: 100,\n     *              width: 200,\n     *              height: 100\n     *          }\n     *      ]\n     * If 'config.getAllAttrs' is true, then it returns all the information of each mark,\n     *      [\n     *      // Positions of mark on initial state of transition.\n     *          enter: {\n     *              x: 0,\n     *              y: 0\n     *          },\n     *          // Final positions of the mark\n     *          update: {\n     *              x: 20,\n     *              y: 10\n     *          },\n     *          style: // css styles of each mark\n     *          source: [200, 'USA'] // Row information of each mark\n     *          id: 20 // Row id of each mark\n     *      ]\n     * ```\n     */\n    getPlotPointsFromIdentifiers (identifiers, config = {}) {\n        let points = [];\n        let parsedIdentifiers = identifiers;\n        if (identifiers === null) {\n            return [];\n        }\n        const layers = this.layers();\n        const len = layers.length;\n        if (isSimpleObject(identifiers)) {\n            parsedIdentifiers = [Object.keys(identifiers)];\n            parsedIdentifiers = [...parsedIdentifiers, ...transposeArray(Object.values(identifiers))];\n        }\n        for (let i = 0; i < len; i++) {\n            const layer = layers[i];\n            if (layer.config().interactive !== false) {\n                points = [...points, ...layer.getPointsFromIdentifiers(parsedIdentifiers, config)];\n            }\n        }\n        return points;\n    }\n\n    /**\n     * Removes the layer instance which matches the supplied layer name.\n     *\n     * @public\n     * @param {string} name Name of layer\n     *\n     * @return {VisualUnit} Instance of visual unit.\n     */\n    removeLayerByName (name) {\n        removeLayersBy('name', name);\n        return this;\n    }\n\n    /**\n     * Removes all the layer instances which matches the supplied mark type.\n     *\n     * @public\n     * @param {string} type Mark type of layer.\n     *\n     * @return {VisualUnit} Instance of visual unit.\n     */\n    removeLayersByType (type) {\n        removeLayersBy('type', type);\n        return this;\n    }\n}\n","import { ERROR_MSG } from 'muze-utils';\n\n/**\n *\n *\n * @export\n * @class Variable\n */\nexport default class Variable {\n\n    /**\n     *\n     *\n     * @memberof Variable\n     */\n    type () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    /**\n     *\n     *\n     * @memberof Variable\n     */\n    toString () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n}\n","import Variable from './variable';\n\n/**\n * This is a wrapper on top of multiple variables which are of same type but they are shown in the same axis.This is\n * required in case of range plots or ohlc plots where one plot is mapped to multiple measure fields. At that time,\n * we need to create a composed variable from multiple variables. This class just wraps them into one variable instance\n * and provides methods to get the type and other common functionalities which can be performed on a simple variable\n * instance.\n *\n * @public\n * @class ComposeVars\n */\nclass ComposedVars extends Variable {\n\n    /**\n     * Creates an instance of ComposeVars.\n     *\n     * @param {Array} vars Array of SimpleVars.\n     */\n    constructor (...vars) {\n        super();\n        this.vars(vars);\n    }\n\n    vars (...params) {\n        if (params.length) {\n            this._vars = params[0];\n            return this;\n        }\n        return this._vars;\n    }\n\n    data (...dm) {\n        if (dm.length) {\n            this.vars().forEach(d => d.data(dm[0]));\n            this._data = dm[0];\n            return this;\n        }\n        return this._data;\n    }\n\n    /**\n     * Get all the field names from composed variable instance.\n     *\n     * @public\n     * @return {Array} Array of field names.\n     */\n    getMembers () {\n        const vars = this.vars();\n        return vars.map(member => member.getMembers()[0]);\n    }\n\n    /**\n     * Type of field associated with this composed variable.\n     *\n     * @return {string} Type of variable (Measure/Dimension).\n     */\n    type () {\n        return this.vars()[0].type();\n    }\n\n    toString () {\n        return this.vars().map(d => d.toString()).join(',');\n    }\n\n    /**\n     * Returns the number formatter function of the variable.\n     *\n     * @return {Function} Number formatter function of the variable.\n     */\n    numberFormat () {\n        return this.vars()[0].numberFormat();\n    }\n\n    format (values) {\n        return this.vars()[0].format(values);\n    }\n\n    getSchemaDef () {\n        return this.data().getFieldsConfig()[this.vars()[0]].def;\n    }\n\n    /**\n     * Returns the subtype of the fields associated with this variable instance.\n     *\n     * @public\n     * @return {string} Subtype of the variable.\n     */\n    subtype () {\n        return this.vars()[0].subtype();\n    }\n\n    /**\n     * Returns the consecutive minimum difference of the field values.\n     *\n     * @public\n     * @return {number} Minimum consecutive difference.\n     */\n    getMinDiff () {\n        return this.vars()[0].getMinDiff();\n    }\n\n    /**\n     * Returns the display name of the fields.\n     *\n     * @return {string} returns the display name.\n     */\n    displayName () {\n        return this.vars().map(d => d.displayName()).join(',');\n    }\n}\n\nexport default ComposedVars;\n","import { DateTimeFormatter, retrieveFieldDisplayName, DimensionSubtype } from 'muze-utils';\nimport Variable from './variable';\n\n/**\n * This is a wrapper on top of fields passed in rows or columns in canvas. This is used to get the type of field or\n * get min difference from the field values.\n *\n * @public\n * @class SimpleVariable\n */\nexport default class SimpleVariable extends Variable {\n\n    /**\n     * Creates an instance of simple variable instance.\n     *\n     * @param {string} name Field name.\n     */\n    constructor (name) {\n        super();\n        this.oneVar(name);\n    }\n\n    /**\n     * Gets the field name associated with this variable instance.\n     *\n     * @public\n     * @return {string} Name of the field.\n     */\n    oneVar (...oneV) {\n        if (oneV.length) {\n            this._oneVar = oneV[0];\n            return this;\n        }\n        return this._oneVar;\n    }\n\n    data (...dm) {\n        if (dm.length) {\n            this._data = dm[0];\n            return this;\n        }\n        return this._data;\n    }\n\n    toString () {\n        return this.oneVar();\n    }\n\n    /**\n     * Gets the number formatter function of this variable.\n     *\n     * @public\n     * @return {Function} Number formatter function.\n     */\n    numberFormat () {\n        if (this.type() === 'measure') {\n            const formatter = this.data().getFieldspace().getMeasure()[this.oneVar()];\n            return formatter.numberFormat();\n        } return val => val;\n    }\n\n    format (values) {\n        if (values && this.subtype() === 'temporal') {\n            const formatter = this.data().getFieldspace().getDimension()[this.oneVar()].schema().format;\n            const dtFormat = new DateTimeFormatter(formatter);\n            values = values.map(e => dtFormat.getNativeDate(e));\n        }\n        return values;\n    }\n\n    /**\n     * Returns a formatter function which transforms the input value to its original form.\n     *\n     * @public\n     * @return {Function} Returns raw formatter function.\n     */\n    rawFormat () {\n        if (this.subtype() === DimensionSubtype.TEMPORAL) {\n            const dateFormat = this.data().getFieldspace().getDimension()[this.oneVar()].schema().format;\n            return val => DateTimeFormatter.formatAs(val, dateFormat);\n        }\n        return val => val;\n    }\n\n    /**\n     * Return the field names associated with this variable instance.\n     *\n     * @public\n     * @return {Array} Array of fields.\n     */\n    getMembers () {\n        return [this.oneVar()];\n    }\n\n    /**\n     * Returns the type of the variable. Whether it is measure or dimension.\n     *\n     * @public\n     * @return {string} Type of variable.\n     */\n    type () {\n        const fieldDef = this.data().getFieldsConfig()[this.oneVar()].def;\n        return fieldDef.type;\n    }\n\n    /**\n     * Returns the subtype of the variable. Subtype can be categorical or temporal. If no subtype is found, then it\n     * returns the type of the variable.\n     *\n     * @public\n     * @return {string} Subtype of variable.\n     */\n    subtype () {\n        const fieldDef = this.data().getFieldsConfig()[this.oneVar()].def;\n        return fieldDef.subtype || fieldDef.type;\n    }\n\n    /**\n     * Returns the minimum consecutive difference between the data values of this variable.\n     *\n     * @return {number} Minimum consecutive difference.\n     */\n    getMinDiff () {\n        const fieldSpace = this.data().getFieldspace();\n        return fieldSpace.fieldsObj()[this.oneVar()].minimumConsecutiveDifference();\n    }\n\n    /**\n     * Returns true if two variable instances are same.If both variable has the same field names, they are equal.\n     *\n     * @return {Boolean} Whether two variable instances are same.\n     */\n    equals (varInst) {\n        return this.oneVar() === varInst.oneVar();\n    }\n\n    /**\n     * Returns the display name of the field.\n     *\n     * @return {string} returns the display name.\n     */\n    displayName () {\n        return retrieveFieldDisplayName(this.data(), this.oneVar());\n    }\n\n    /**\n     * Returns the schema defination of the field.\n     *\n     * @return {Object} schema def\n     */\n    getSchemaDef () {\n        return this.data().getFieldsConfig()[this.oneVar()].def;\n    }\n}\n","import { ComposedVars, SimpleVariable } from '../variable';\nimport { DIMENSION, COLUMNS, ROWS, TEMPORAL } from '../enums/constants';\n\n/**\n * Gets the list of fields in a sorted order by measurement and dimension\n *\n * @param {Array} fieldList List of fields in the view\n * @param {Object} fieldMap Mapping of fields in the datamodel\n * @return {Array} fields sorted by measurement and dimensions\n */\nconst orderFields = (fieldArray, type) => {\n    const dimensionArr = [[], []];\n    const measureArr = [[], []];\n    const temporalArr = [[], []];\n    const categoricalArr = [[], []];\n\n    fieldArray.forEach((fieldList, index) => {\n        fieldList.forEach((field) => {\n            if (field.type() === DIMENSION) {\n                dimensionArr[index].push(field);\n                field.subtype() === TEMPORAL ? temporalArr[index].push(field) : categoricalArr[index].push(field);\n            } else {\n                measureArr[index].push(field);\n            }\n        });\n    });\n\n    const numOfMeasures = measureArr[0].length + (measureArr[1] ? measureArr[1].length : 0);\n\n    // Single array of fields\n    if (!fieldArray[1]) {\n        // Push measures to bottom\n        measureArr[1] = type === COLUMNS ? measureArr[0] : [];\n        // Push measures to left\n        measureArr[0] = type !== COLUMNS ? measureArr[0] : [];\n        // Bottom and right dimensions empty\n        dimensionArr[1] = [];\n        // Left and top filled with dimensions\n        dimensionArr[0] = dimensionArr[0];\n        if (numOfMeasures === 0) {\n            const allDimensions = [...dimensionArr[0], ...dimensionArr[1]];\n            if (type === COLUMNS) {\n                dimensionArr[1] = allDimensions[allDimensions.length - 1] ? [allDimensions[allDimensions.length - 1]]\n                        : [];\n                allDimensions.splice(-1, 1);\n            } else {\n                dimensionArr[1] = [];\n            }\n            dimensionArr[0] = [...allDimensions];\n        }\n    }\n\n    if (dimensionArr[0].length && dimensionArr[1].length && numOfMeasures > 0) {\n        dimensionArr[0] = [...dimensionArr[0], ...dimensionArr[1]];\n        dimensionArr[1] = [];\n    }\n    return {\n        fields: dimensionArr.map((list, i) => (i === 1 ?\n            measureArr[i].concat(dimensionArr[i]) : dimensionArr[i].concat(measureArr[i]))),\n        dimensions: [...dimensionArr[0], ...dimensionArr[1]],\n        measures: [...measureArr[0], ...measureArr[1]],\n        temporal: [...temporalArr[0], ...temporalArr[1]],\n        categorical: [...categoricalArr[0], ...categoricalArr[1]]\n    };\n};\n\n/**\n * Gets the list of normalized fields\n *\n * @param {Array} fields List of fields in the view\n * @param {Object} fieldMap Mapping of fields in the datamodel\n * @return {Array} fields normalized by measurement and dimensions\n */\nconst normalizeFields = (config, type) => {\n    const fieldsArr = [];\n    const fields = config[type];\n\n    if (!(fields[0] instanceof Array)) {\n        fieldsArr[0] = fields;\n    } else {\n        fieldsArr[0] = fields[0] || [];\n        fieldsArr[1] = fields[1] || [];\n    }\n    return fieldsArr;\n};\n\n/**\n *\n *\n * @param {*} fields\n * @param {*} datamodel\n *\n */\nconst convertToVar = (datamodel, fields) => {\n    const vars = [];\n\n    fields && fields.forEach((field) => {\n        if (field instanceof ComposedVars) {\n            vars.push(field);\n            field.data(datamodel);\n        } else {\n            vars.push(new SimpleVariable(field).data(datamodel));\n        }\n    });\n    return vars;\n};\n\n/**\n *\n *\n * @param {*} rows\n * @param {*} columns\n * @param {*} datamodel\n *\n */\nexport const transformFields = (datamodel, config) => {\n    const [rowsInfo, columnsInfo] = [ROWS, COLUMNS].map((fields) => {\n        const normalizedFields = normalizeFields(config, fields);\n        const norFields = [convertToVar(datamodel, normalizedFields[0])];\n\n        if (normalizedFields[1]) {\n            norFields[1] = convertToVar(datamodel, normalizedFields[1]);\n        }\n        return orderFields(norFields, fields);\n    });\n    const {\n        fields: rows,\n        dimensions: rowDimensions,\n        measures: rowMeasures,\n        temporal: rowTemporalFields,\n        categorical: rowCategoricalFields\n    } = rowsInfo;\n    const {\n        fields: columns,\n        dimensions: columnDimensions,\n        measures: columnMeasures,\n        temporal: columnTemporalFields,\n        categorical: columnCategoricalFields\n    } = columnsInfo;\n    return {\n        rows,\n        rowDimensions,\n        rowMeasures,\n        rowTemporalFields,\n        rowCategoricalFields,\n        columns,\n        columnTemporalFields,\n        columnCategoricalFields,\n        columnDimensions,\n        columnMeasures\n    };\n};\n","import { ERROR_MSG, mergeRecursive } from 'muze-utils';\nimport { transformFields } from './field-sanitizer';\nimport { getHeaderAxisFrom } from '../group-helper/group-utils';\nimport { ROW, COLUMN } from '../enums/constants';\n\n/**\n *\n *\n * @export\n * @class VisualEncoder\n */\nexport default class VisualEncoder {\n\n    /**\n     *\n     *\n     * @memberof VisualEncoder\n     */\n    createAxis () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    /**\n     *\n     *\n     * @memberof VisualEncoder\n     */\n    setCommonDomain () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    /**\n     *\n     *\n     * @memberof VisualEncoder\n     */\n    getLayerConfig () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    fieldInfo (...info) {\n        if (info.length) {\n            this._fieldInfo = mergeRecursive(this._fieldInfo || {}, info[0]);\n            return this;\n        }\n        return this._fieldInfo;\n    }\n\n    /**\n     *\n     *\n     * @param {*} datamodel\n     * @param {*} config\n     *\n     * @memberof VisualEncoder\n     */\n    fieldSanitizer (datamodel, config) {\n        this.fieldInfo(transformFields(datamodel, config));\n        return this.fieldInfo();\n    }\n\n    /**\n     *\n     *\n     * @param {*} params\n     *\n     * @memberof VisualEncoder\n     */\n    axisFrom (...params) {\n        if (params.length) {\n            this._axisFrom = params[0];\n            return this;\n        }\n        return this._axisFrom;\n    }\n\n    /**\n     *\n     *\n     * @param {*} params\n     *\n     * @memberof VisualEncoder\n     */\n    headerFrom (...params) {\n        if (params.length) {\n            this._headerFrom = params[0];\n            return this;\n        }\n        return this.__headerFrom;\n    }\n\n    /**\n     *\n     *\n     * @param {*} axisFrom\n     *\n     * @memberof CartesianEncoder\n     */\n    setAxisAndHeaders (axisFrom = {}, fields) {\n        const [rowHeader, rowAxis] = getHeaderAxisFrom(ROW, fields.rows, axisFrom);\n        const [colHeader, colAxis] = getHeaderAxisFrom(COLUMN, fields.columns, axisFrom);\n\n        this.axisFrom({\n            row: rowAxis,\n            column: colAxis\n        });\n        this.headerFrom({\n            row: rowHeader,\n            column: colHeader\n        });\n        return this;\n    }\n}\n","import { ContinousAxis, BandAxis, TimeAxis, ColorAxis, SizeAxis, ShapeAxis } from '@chartshq/muze-axis';\n\nexport const scaleMaps = {\n    linear: ContinousAxis,\n    band: BandAxis,\n    temporal: TimeAxis,\n    size: SizeAxis,\n    color: ColorAxis,\n    shape: ShapeAxis\n};\n","import { ScaleType } from '@chartshq/muze-axis';\n\n/**\n * Map of DataModel types to associated field types.\n */\nexport const dataTypeScaleMap = {\n    dimension: ScaleType.BAND,\n    categorical: ScaleType.BAND,\n    temporal: ScaleType.TIME,\n    measure: ScaleType.LINEAR,\n    continuous: ScaleType.LINEAR\n};\n","import { mergeRecursive, getObjProp } from 'muze-utils';\nimport { AxisOrientation } from '@chartshq/muze-axis';\nimport { ENCODING } from '@chartshq/visual-layer';\nimport { scaleMaps } from '../enums/scale-maps';\nimport { getAxisType, getAxisKey } from '../group-helper';\nimport { dataTypeScaleMap } from '../data-type-scale-map';\nimport { CATEGORICAL, TEMPORAL, BAR, LINE, POINT, BOTH, Y, COLOR, SHAPE, SIZE, ANGLE0 } from '../enums/constants';\n\n/**\n *\n *\n * @param {*} axisInfo\n * @param {*} field\n * @param {*} axesCreators\n *\n */\nconst getAxisConfig = (axisInfo, field, axesCreators, indices, facetFields) => {\n    let axisOrientation;\n    const { index, axisIndex, axisType } = axisInfo;\n    const { config, position } = axesCreators;\n    const { rowIndex, columnIndex } = indices;\n    const rawUserAxisConfig = config.axes ? (config.axes[axisType] || {}) : {};\n\n    // Change config object to a function if not already one\n    const userAxisConfigFn = typeof rawUserAxisConfig !== 'function' ?\n    () => rawUserAxisConfig : rawUserAxisConfig;\n    const userAxisConfig = userAxisConfigFn(rowIndex, columnIndex, {\n        axisFields: field.getMembers(),\n        facetFields\n    });\n\n    // If current config does not specifes config for an axis, retain old config\n    if (!userAxisConfig) {\n        return {};\n    }\n\n    const {\n        LEFT,\n        RIGHT,\n        TOP,\n        BOTTOM\n    } = AxisOrientation;\n    const allOrientations = axisType === Y ? [LEFT, RIGHT] : [TOP, BOTTOM];\n\n    if (position === BOTH) {\n        axisOrientation = allOrientations[axisIndex];\n    } else {\n        axisOrientation = position;\n    }\n    const axisConfig = {\n        id: `${axisType}-${index}-${axisIndex}`,\n        name: field.displayName(),\n        field: field.toString(),\n        numberFormat: field.numberFormat(),\n        orientation: axisOrientation,\n        showAxisName: true,\n        show: true,\n        type: dataTypeScaleMap[field.subtype()]\n    };\n    userAxisConfig.tickValues = field.format(userAxisConfig.tickValues);\n    userAxisConfig.domain = field.format(userAxisConfig.domain);\n\n    return mergeRecursive(axisConfig, userAxisConfig);\n};\n\n/**\n *\n *\n * @param {*} axisInfo\n * @param {*} field\n * @param {*} axesCreators\n *\n */\nconst createSimpleAxis = (axisConfig, field, axesCreators) => {\n    const { labelManager } = axesCreators;\n    const Cls = scaleMaps[dataTypeScaleMap[field.subtype()]];\n    const simpleAxis = new Cls(axisConfig, { labelManager });\n    return simpleAxis;\n};\n\nexport const getAdjustedDomain = (max, min) => {\n    const y1ratio = max[0] / (max[0] - min[0]);\n    const y2ratio = max[1] / (max[1] - min[1]);\n\n    // adjust min/max values for positive negative values zero line etc\n    let allSameSign = false;\n\n    // if all numbers are positive set floor to zero\n    if (min[0] > 0 && min[1] > 0 && min[1] > 0 && max[1] > 0) {\n        allSameSign = true;\n        min[0] = 0;\n        min[1] = 0;\n    }\n\n    // if all numbers are negative set ceiling to zero\n    if (min[0] < 0 && min[1] < 0 && min[1] < 0 && max[1] < 0) {\n        allSameSign = true;\n        max[0] = 0;\n        max[1] = 0;\n    }\n\n    // align zero line if necessary\n    if (!allSameSign && y1ratio !== y2ratio) {\n        if (y1ratio < y2ratio) {\n                    // adjust min[1]\n            min[1] = min[0] / max[0] * max[1];\n        } else {\n                    // adjust min[0]\n            min[0] = min[1] / max[1] * max[0];\n        }\n    }\n    return [\n        [min[0], max[0]],\n        [min[1], max[1]]\n    ];\n};\n\n/**\n *\n *\n * @param {*} axisType\n * @param {*} fieldInfo\n * @param {*} axesCreators\n * @param {*} groupAxes\n *\n */\nexport const generateAxisFromMap = (axisType, fieldInfo, axesCreators, axesInfo, indices, facetFields) => {\n    let axisKey;\n    const { groupAxes, valueParser } = axesInfo;\n    const currentAxes = [];\n    const { fields, index } = fieldInfo;\n    const { cacheMaps } = axesCreators;\n    const map = cacheMaps[`${axisType}AxesMap`];\n\n    const commonAxisKey = getAxisKey(axisType, index);\n    fields.forEach((field, axisIndex) => {\n        axisKey = getAxisKey(axisType, index, axisIndex, dataTypeScaleMap[field.subtype()]);\n        const axisConfig = getAxisConfig({ index, axisIndex, axisType }, field, axesCreators, indices, facetFields);\n\n        let axis;\n        if (!map.has(axisKey)) {\n            axis = createSimpleAxis(axisConfig, field, axesCreators);\n        } else {\n            axis = map.get(axisKey);\n            axis._rotationLock = false;\n            axis.config(axisConfig);\n        }\n        axis.valueParser(valueParser);\n        currentAxes.push(axis);\n        map.set(axisKey, axis);\n    });\n\n    if (currentAxes.length) {\n        map.set(commonAxisKey, currentAxes);\n        groupAxes.add(commonAxisKey);\n    }\n\n    return currentAxes;\n};\n\nexport const sanitizeIndividualLayerConfig = (encodingConfigs, def) => {\n    [COLOR, SHAPE, SIZE].forEach((axis) => {\n        if (encodingConfigs[axis] && encodingConfigs[axis].field) {\n            def.forEach((conf) => {\n                conf.encoding = conf.encoding || {};\n                !conf.encoding[axis] && (conf.encoding[axis] = {});\n                conf.encoding[axis].field = encodingConfigs[axis].field;\n            });\n        }\n    });\n};\n\n/**\n *\n *\n * @memberof MatrixResolver\n */\nexport const mutateAxesFromMap = (cacheMaps, axes) => {\n    const {\n        xAxesMap,\n        yAxesMap\n    } = cacheMaps;\n    const {\n        x: xAxisSet,\n        y: yAxisSet\n    } = axes;\n    const xAxes = [];\n    const yAxes = [];\n\n    xAxisSet.forEach((axisId) => {\n        const xAxis = xAxesMap.get(axisId);\n        xAxes.push(xAxis);\n    });\n    yAxisSet.forEach((axisId) => {\n        const yAxis = yAxesMap.get(axisId);\n        yAxes.push(yAxis);\n    });\n    return {\n        xAxes, yAxes\n    };\n};\n\n/**\n * return a default mark based on predefined set of rules of type and subtype of the fields\n *\n * @param {string} colFieldType dimension/measure - temporal/ordinal/nominal\n * @param {string} rowFieldType dimension/measure - temporal/ordinal/nominal\n * @return {Object} return mark type\n */\nexport const getDefaultMark = (colFieldType, rowFieldType) => {\n    let mark;\n\n    if (colFieldType === CATEGORICAL || rowFieldType === CATEGORICAL) {\n        mark = BAR;\n    } else if (colFieldType === TEMPORAL || rowFieldType === TEMPORAL) {\n        mark = LINE;\n    } else {\n        mark = POINT;\n    }\n\n    return mark;\n};\n\n/**\n *\n *\n * @param {*} axesCreators\n * @param {*} [fieldInfo=[]]\n *\n */\nexport const createRetinalAxis = (axesCreators, fieldProps = {}) => {\n    const { axisType, fieldsConfig } = axesCreators;\n    const field = fieldProps.field;\n    const axis = [];\n    const Cls = scaleMaps[axisType];\n\n    fieldProps.type = fieldProps.type ? fieldProps.type : getAxisType(fieldsConfig, field || null);\n    axis.push(new Cls(fieldProps));\n    return axis;\n};\n\n/**\n *\n *\n * @param {*} arr\n * @param {*} val\n *\n */\nexport const getIndex = (arr, val) => {\n    let i = 0;\n    let arrIndex = -1;\n\n    while (arrIndex === -1 && i < arr.length) {\n        if (arr[i].toString() === val.toString()) {\n            arrIndex = i;\n        }\n        i++;\n    }\n    return arrIndex;\n};\n\n/**\n *\n *\n * @param {*} colFields\n * @param {*} rowFields\n * @param {*} userLayerConfig\n *\n * @memberof CartesianEncoder\n */\nexport const getLayerConfFromFields = (colFields, rowFields, userLayerConfig) => userLayerConfig.filter((conf) => {\n    const userConf = conf instanceof Array ? conf : [conf];\n    const encodingArr = [].concat(...userConf.map(d => d.encoding).filter(d => d !== undefined));\n\n    if (!encodingArr.length) {\n        return true;\n    }\n\n    const xFields = [].concat(...encodingArr.map(d => [d.x && d.x.field, d.x0 && d.x0.field]))\n                .filter(d => d !== undefined && d !== null);\n    const yFields = [].concat(...encodingArr.map(d => [d.y && d.y.field, d.y0 && d.y0.field]))\n                .filter(d => d !== undefined && d !== null);\n\n    if (!xFields.length && !yFields.length) {\n        return true;\n    }\n\n    const colFieldExist = xFields.length ? xFields.every(d => colFields.indexOf(d) !== -1) : false;\n    const rowFieldExist = yFields.length ? yFields.every(d => rowFields.indexOf(d) !== -1) : false;\n    if (xFields.length && yFields.length) {\n        return colFieldExist && rowFieldExist;\n    }\n    return colFieldExist || rowFieldExist;\n});\n\nexport const resolveAxisConfig = (context, fieldInf, axisInfo) => {\n    const { rowIndex, columnIndex, axesObj } = axisInfo;\n    const { config, facetFields, resolver } = context;\n    const resolverAxes = resolver.axes();\n    const { RADIUS, ANGLE } = ENCODING;\n    [RADIUS, ANGLE, ANGLE0].forEach((enc) => {\n        const axesArr = resolverAxes[enc];\n        if (!axesArr[rowIndex]) {\n            axesArr[rowIndex] = [];\n        }\n        axesArr[rowIndex][columnIndex] = axesObj[enc];\n        const axisConfig = getObjProp(config.axes, enc) || {};\n\n        axesObj[enc].forEach((axis, i) => {\n            let userConfig = axisConfig;\n            if (axisConfig instanceof Function) {\n                userConfig = axisConfig(rowIndex, columnIndex, {\n                    axisFields: [fieldInf[enc][i]],\n                    facetFields\n                });\n            }\n            axis.config(userConfig);\n        });\n    });\n};\n","import { layerFactory } from '@chartshq/visual-layer';\nimport {\n    mergeRecursive,\n    STATE_NAMESPACES,\n    unionDomain,\n    COORD_TYPES,\n    toArray,\n    sortCategoricalField\n} from 'muze-utils';\nimport { ScaleType } from '@chartshq/muze-axis';\nimport {\n    generateAxisFromMap,\n    getDefaultMark,\n    getIndex,\n    getLayerConfFromFields,\n    getAdjustedDomain,\n    sanitizeIndividualLayerConfig\n} from './encoder-helper';\nimport { retriveDomainFromData } from '../group-helper';\n\nimport { ROW, COLUMN, COL, LEFT, TOP, MEASURE, BOTH, X, Y } from '../enums/constants';\nimport VisualEncoder from './visual-encoder';\n\nconst CARTESIAN = COORD_TYPES.CARTESIAN;\n\n/**\n *\n *\n * @export\n * @class CartesianEncoder\n * @extends {VisualEncoder}\n */\nexport default class CartesianEncoder extends VisualEncoder {\n\n    /**\n     *\n     *\n     *\n     * @memberof CartesianEncoder\n     */\n    static type () {\n        return CARTESIAN;\n    }\n\n    /**\n     *\n     *\n     * @param {*} axesCreators\n     * @param {*} fieldInfo\n     *\n     * @memberof CartesianEncoder\n     */\n    createAxis (axesCreators, fieldInfo, context) {\n        const geomCellAxes = {};\n        const {\n            axes\n        } = axesCreators;\n        const {\n            projections,\n            indices\n        } = fieldInfo;\n        const {\n            rowFields,\n            columnFields\n        } = projections;\n        const {\n             rowIndex,\n             columnIndex\n        } = indices;\n        const axisFields = [{\n            fields: rowFields,\n            index: rowIndex\n        }, {\n            fields: columnFields,\n            index: columnIndex\n        }];\n        const { resolver, facetFields, geomCell } = context;\n        const xAxes = axes.x || [];\n        const yAxes = axes.y || [];\n\n        [rowFields, columnFields].forEach((fields, i) => {\n            const type = i === 0 ? ROW : COLUMN;\n            const axis = i === 0 ? Y : X;\n\n            if (fields.length > 1) {\n                axesCreators.position = BOTH;\n            } else {\n                axesCreators.position = this.axisFrom()[type];\n            }\n            geomCellAxes[axis] = generateAxisFromMap(axis, axisFields[i], axesCreators, {\n                groupAxes: axis === X ? xAxes : yAxes,\n                valueParser: resolver.valueParser()\n            }, indices, facetFields);\n        });\n        geomCell.axes(geomCellAxes);\n        return geomCellAxes;\n    }\n\n    unionUnitDomains (context) {\n        const store = context.store();\n        const resolver = context.resolver();\n        const units = resolver.units();\n        const domains = {\n            0: {},\n            1: {}\n        };\n        const config = context.config();\n        const fieldsObj = {\n            0: {},\n            1: {}\n        };\n\n        for (let rIdx = 0, len = units.length; rIdx < len; rIdx++) {\n            const unitsArr = units[rIdx];\n            for (let cIdx = 0, len2 = unitsArr.length; cIdx < len2; cIdx++) {\n                const unit = unitsArr[cIdx];\n                const axisFields = unit.fields();\n                const encodingDomains = unit.getDataDomain();\n                ['x', 'y'].forEach((axisType, axisTypeIndex) => {\n                    const fieldArr = axisFields[axisType];\n                    fieldArr.forEach((field, axisIndex) => {\n                        const key = !axisTypeIndex ? `0${cIdx}${axisIndex}` : `${rIdx}0${axisIndex}`;\n                        const dom = encodingDomains[axisType];\n                        const typeOfField = field.subtype();\n                        fieldsObj[axisTypeIndex][key] = field;\n\n                        if (dom && Object.keys(dom).length !== 0) {\n                            domains[axisTypeIndex][key] = unionDomain([(domains[axisTypeIndex] &&\n                                domains[axisTypeIndex][key]) || [], dom[`${field}`]], typeOfField);\n                        }\n                    });\n                });\n            }\n        }\n\n        const { x: xAxes, y: yAxes } = resolver.axes();\n        store.lockModel();\n        [xAxes, yAxes].forEach((axesArr, axisType) => {\n            axesArr.forEach((axes, idx) => {\n                let key;\n                let domain = [];\n                let adjustedDomain = [];\n                const min = [];\n                const max = [];\n                const typeOfAxis = axes[0].constructor.type();\n\n                if (axes.length > 1 && typeOfAxis === ScaleType.LINEAR && axes[0].config().alignZeroLine) {\n                    axes.forEach((axis, i) => {\n                        key = !axisType ? `0${idx}${i}` : `${idx}0${i}`;\n                        domain = domains[axisType][key];\n                        min[i] = domain[0];\n                        max[i] = domain[1];\n                    });\n                    adjustedDomain = getAdjustedDomain(max, min);\n                } else if (typeOfAxis === ScaleType.BAND) {\n                    /* Sort categorical fields to ensure consistency across all rows\n                    only if sorted by user */\n                    key = !axisType ? `0${idx}0` : `${idx}00`;\n                    const currentFieldName = fieldsObj[axisType][key].oneVar();\n                    const sortingOrder = config.sort && config.sort[currentFieldName];\n\n                    if (sortingOrder) {\n                        domains[axisType][key].sort((a, b) => sortCategoricalField(sortingOrder, a, b));\n                    }\n                }\n\n                axes.forEach((axis, index) => {\n                    key = !axisType ? `0${idx}${index}` : `${idx}0${index}`;\n                    domain = adjustedDomain[index] || domains[axisType][key];\n\n                    domain && axis.domain(domain);\n                    const type = !axisType ? 'x' : 'y';\n                    store.commit(`${STATE_NAMESPACES.GROUP_GLOBAL_NAMESPACE}.domain.${type}`, domain, `${idx}${index}`);\n                });\n            });\n        });\n        store.unlockModel();\n    }\n\n    /**\n     *\n     *\n     * @param {*} fields\n     *\n     * @memberof CartesianEncoder\n     */\n    getFacetsAndProjections (fields, type) {\n        let facets = [];\n        let projections = [];\n        let counter = 0;\n        const primaryFacets = [];\n        const secondaryFacets = [];\n        const primaryFields = fields[0];\n        const secondaryFields = fields[1];\n        const primaryLen = primaryFields.length;\n        const secondaryLen = secondaryFields.length;\n        const axisFrom = this.axisFrom();\n\n        for (let i = 0; i < primaryLen; i++) {\n            let projArr = [primaryFields[i]];\n            const primaryField = primaryFields[i];\n\n            if (primaryField.type() === MEASURE) {\n                const secondaryField = secondaryFields[counter];\n                if (secondaryField && secondaryField.type() === MEASURE) {\n                    counter++;\n                    projArr = [primaryField, secondaryField];\n                }\n                projections.push(projArr);\n            } else {\n                facets.push(primaryField);\n                primaryFacets.push(primaryField);\n            }\n        }\n        if (secondaryLen > counter) {\n            for (let i = counter; i < secondaryLen; i++) {\n                const secondaryField = secondaryFields[i];\n                const projArr = [secondaryField];\n                if (secondaryField.type() === MEASURE) {\n                    projections.push(projArr);\n                } else {\n                    facets.push(secondaryField);\n                    secondaryFacets.push(secondaryField);\n                }\n            }\n        }\n        if ((primaryFacets.length || secondaryFacets.length) && !projections.length) {\n            type = type === COL ? COLUMN : type;\n            if ((axisFrom[type] === LEFT || axisFrom[type] === TOP) && primaryFacets.length) {\n                const axisFromIndex = primaryFacets.length - 1;\n                const facet = primaryFacets[axisFromIndex];\n                projections = [[facet]];\n                const existIndex = getIndex(secondaryFacets, facet);\n                if (existIndex > -1) {\n                    projections = [[facet, facet]];\n                    secondaryFacets.splice(existIndex, 1);\n                }\n                primaryFacets.splice(axisFromIndex, 1);\n            } else {\n                const axisFromIndex = 0;\n                const facet = secondaryFacets[axisFromIndex];\n                projections = [[facet]];\n                const existIndex = getIndex(primaryFacets, facet);\n                if (existIndex > -1) {\n                    projections = [[facet, facet]];\n                    primaryFacets.splice(existIndex, 1);\n                }\n                secondaryFacets.splice(axisFromIndex, 1);\n            }\n        }\n\n        facets = [...primaryFacets, ...secondaryFacets];\n        facets = facets.filter((el, index, self) => index === self.findIndex(t => (t.toString() === el.toString())));\n        return {\n            facets,\n            projections\n        };\n    }\n\n    /**\n     *\n     *\n     * @param {*} datamodel\n     * @param {*} config\n     *\n     * @memberof CartesianEncoder\n     */\n    fieldSanitizer (datamodel, config) {\n        return super.fieldSanitizer(datamodel, config);\n    }\n\n    /**\n     *\n     *\n     * @param {*} datamodel\n     *\n     * @memberof CartesianEncoder\n     */\n    getRetinalFieldsDomain (dataModels, encoding) {\n        const groupedModel = dataModels.groupedModel;\n        const domains = {};\n        for (const key in encoding) {\n            if ({}.hasOwnProperty.call(encoding, key)) {\n                const encodingObj = encoding[key];\n                const field = encodingObj.field;\n                if (!encodingObj.domain && field) {\n                    const domain = retriveDomainFromData(groupedModel, field);\n                    domains[field] = domain;\n                }\n            }\n        }\n        return domains;\n    }\n\n    /**\n     *\n     *\n     * @param {*} layerArray\n     * @memberof CartesianEncoder\n     */\n    serializeLayerConfig (layerArray) {\n        const serializedLayers = [];\n        // let currentLayerIndex = 0;\n        layerArray.length && layerArray.forEach((layer, i) => {\n            const def = layerFactory.sanitizeLayerConfig(layer);\n            def.order = i;\n            serializedLayers.push(def);\n        });\n        return serializedLayers;\n    }\n\n    sanitizeLayerConfig (encodingConfigs, userLayerConfig) {\n        const layerConfig = [];\n        userLayerConfig.forEach((config) => {\n            const def = toArray(config.def);\n            sanitizeIndividualLayerConfig(encodingConfigs, def);\n            layerConfig.push(config);\n        });\n        return layerConfig;\n    }\n\n    /**\n     *\n     *\n     * @param {*} fields\n     * @param {*} userLayerConfig\n     *\n     * @memberof CartesianEncoder\n     */\n    getLayerConfig (fields, userLayerConfig, retinalConfig) {\n        const layerConfig = [];\n        const {\n            columnFields,\n            rowFields\n        } = fields;\n\n        // let currentLayerIndex = 0;\n        columnFields.forEach((colField) => {\n            const colFieldName = colField.toString();\n            rowFields.forEach((rowField) => {\n                let configs = [];\n                const rowFieldName = rowField.toString();\n                const encoding = {\n                    x: {\n                        field: colFieldName\n                    },\n                    y: {\n                        field: rowFieldName\n                    }\n                };\n                const rowFieldType = rowField.subtype();\n                const colFieldType = colField.subtype();\n                const mark = getDefaultMark(colFieldType, rowFieldType);\n\n                const defConfigs = [{\n                    mark,\n                    def: {\n                        mark,\n                        encoding\n                    }\n                }];\n\n                const layerConfigs = getLayerConfFromFields(colField.getMembers(),\n                    rowField.getMembers(), userLayerConfig || []);\n                if (layerConfigs.length) {\n                    configs = layerConfigs.map((layerConf) => {\n                        const mergedLayerConf = mergeRecursive(mergeRecursive({}, defConfigs[0].def), layerConf);\n                        const serializedLayerConfig = layerFactory.getSerializedConf(mergedLayerConf.mark,\n                            mergedLayerConf);\n                        return {\n                            mark: mergedLayerConf.mark,\n                            order: mergedLayerConf.order,\n                            def: serializedLayerConfig\n                        };\n                    });\n                } else {\n                    configs = defConfigs;\n                }\n\n                layerConfig.push(...configs);\n            });\n        });\n        return this.sanitizeLayerConfig(retinalConfig, layerConfig);\n    }\n}\n","import { AngleAxis, RadiusAxis } from '@chartshq/muze-axis';\nimport { layerFactory, ENCODING } from '@chartshq/visual-layer';\nimport {\n    mergeRecursive,\n    STATE_NAMESPACES,\n    GROUP_BY_FUNCTIONS,\n    COORD_TYPES,\n    toArray,\n    getObjProp,\n    defaultValue\n} from 'muze-utils';\nimport VisualEncoder from './visual-encoder';\nimport { SIZE, MEASURE, ARC, COLOR } from '../enums/constants';\nimport { sanitizeIndividualLayerConfig, resolveAxisConfig } from './encoder-helper';\nimport { SimpleVariable } from '../variable';\n\nconst POLAR = COORD_TYPES.POLAR;\nconst { RADIUS, ANGLE, ANGLE0 } = ENCODING;\n\nconst axesCls = {\n    [RADIUS]: RadiusAxis,\n    [ANGLE]: AngleAxis,\n    [ANGLE0]: AngleAxis\n};\n\nconst getSizeMultiplier = (sizeVal, sizeAxis) => {\n    const sizeAxisDomain = sizeAxis.domain();\n    const sizeMultiplier = sizeAxis.getSize(sizeVal) / (sizeAxisDomain ? sizeAxis.range()[1] : sizeAxis.config().value);\n    return sizeMultiplier;\n};\n\nconst setRadiusFactor = (context) => {\n    const data = context.data();\n    const sizeField = context.retinalFields().size.field;\n    const { radius, size } = context.axes();\n\n    if (sizeField && radius && radius.length) {\n        const sizeFieldIndex = data.getFieldsConfig()[sizeField].index;\n        const sizeVal = data.getData().data.reduce((acc, val) => acc + val[sizeFieldIndex], 1);\n        const sizeMultiplier = getSizeMultiplier(sizeVal, size[0]);\n        radius.forEach(axis => axis.setRadiusFactor(sizeMultiplier));\n    }\n};\n\n/**\n *\n *\n * @export\n * @class PolarEncoder\n * @extends {VisualEncoder}\n */\nexport default class PolarEncoder extends VisualEncoder {\n\n    /**\n     *\n     *\n     * @param {*} axesCreators\n     * @param {*} fieldInfo\n     *\n     * @memberof PolarEncoder\n     */\n    createAxis (axesCreators, fieldInfo, context) {\n        const {\n            axes\n        } = axesCreators;\n        const geomCellAxes = axes;\n        const {\n            indices\n        } = fieldInfo;\n        const {\n            rowIndex,\n            columnIndex\n        } = indices;\n        // Dummy axes for polar, to create blank cells\n        const pieAxes = geomCellAxes.pie || [];\n\n        pieAxes[rowIndex] = pieAxes[rowIndex] || [];\n        pieAxes[rowIndex][columnIndex] = [];\n\n        const axesObj = {};\n        const { geomCell, resolver } = context;\n        const layers = resolver.matrixLayers();\n        const resolverAxes = resolver.axes();\n        const cellLayers = layers[rowIndex][columnIndex];\n        const fields = {\n            radius: {},\n            angle: {},\n            angle0: {}\n        };\n\n        cellLayers.forEach((layerConf) => {\n            const def = layerConf.def;\n            [ANGLE, ANGLE0, RADIUS].forEach((enc) => {\n                const field = getObjProp(def.encoding, enc, 'field');\n                field && (fields[enc][field] = 0);\n            });\n        });\n        const fieldInf = {};\n        const varInstances = {};\n\n        for (const encType in fields) {\n            fieldInf[encType] = Object.keys(fields[encType]);\n            axesObj[encType] = [];\n            varInstances[encType] = [];\n            fieldInf[encType].forEach((field, i) => {\n                varInstances[encType][i] = new SimpleVariable(field);\n                axesObj[encType][i] = new axesCls[encType]();\n            });\n            axesObj[encType][axesObj[encType].length] = new axesCls[encType]();\n        }\n        resolveAxisConfig(context, fieldInf, {\n            axesObj,\n            rowIndex,\n            columnIndex\n        });\n        geomCell.axes(axesObj)\n            .fields(Object.assign({}, varInstances, geomCell.fields()));\n        resolverAxes.pie = pieAxes;\n        return geomCellAxes;\n    }\n\n    /**\n     *\n     *\n     * @param {*} fields\n     *\n     * @memberof CartesianEncoder\n     */\n    getFacetsAndProjections (fields) {\n        let counter = 0;\n        const facets = [];\n        const projections = [];\n        const primaryFields = fields[0];\n        const secondaryFields = fields[1];\n        const primaryLen = primaryFields.length;\n        const secondaryLen = secondaryFields.length;\n\n        for (let i = 0; i < primaryLen; i++) {\n            const primaryField = primaryFields[i];\n            if (primaryField.type() === MEASURE) {\n                const secondaryField = secondaryFields[counter++];\n                const projArr = secondaryField ? [primaryField, secondaryField] : [primaryField];\n                projections.push(projArr);\n            } else {\n                facets.push(primaryField);\n            }\n        }\n        if (secondaryLen > counter) {\n            for (let i = counter; i < secondaryLen; i++) {\n                const secondaryField = secondaryFields[i];\n                const projArr = [secondaryField];\n                if (secondaryField.type() === MEASURE) {\n                    projections.push(projArr);\n                } else {\n                    facets.push(secondaryField);\n                }\n            }\n        }\n        return {\n            facets,\n            projections\n        };\n    }\n\n    unionUnitDomains (context) {\n        const store = context.store();\n        store.lockModel();\n        const domainProps = {\n            radius: [],\n            angle: [],\n            angle0: []\n        };\n        const axes = context.resolver().axes();\n        context.matrixInstance().value.each((cell, rIdx, cIdx) => {\n            const unit = cell.valueOf();\n            const unitDomains = unit.getDataDomain();\n            const fields = unit.fields();\n            setRadiusFactor(unit);\n            [RADIUS, ANGLE, ANGLE0].forEach((encType) => {\n                const encodingFields = fields[encType];\n                const domains = unitDomains[encType] || {};\n                encodingFields.forEach((field, i) => {\n                    !domainProps[encType][rIdx] && (domainProps[encType][rIdx] = []);\n                    !domainProps[encType][rIdx][cIdx] && (domainProps[encType][rIdx][cIdx] = []);\n                    domainProps[encType][rIdx][cIdx][i] = domains[`${field}`] || [];\n                });\n            });\n        });\n\n        for (const key in domainProps) {\n            const specificAxes = axes[key];\n            specificAxes.forEach((axesArr, rIdx) => {\n                axesArr.forEach((axisArr, cIdx) => {\n                    axisArr.forEach((axis, i) => {\n                        axis.domain(defaultValue(getObjProp(domainProps[key], rIdx, cIdx, i), []));\n\n                        store.commit(`${STATE_NAMESPACES.GROUP_GLOBAL_NAMESPACE}.domain.${key}`, domainProps[key],\n                            `${rIdx}-${cIdx}`);\n                    });\n                });\n            });\n        }\n        store.unlockModel();\n    }\n\n    /**\n     *\n     *\n     *\n     * @memberof PolarEncoder\n     */\n    setCommonDomain () {\n        // No domain to be set\n        return this;\n    }\n\n    /**\n     *\n     *\n     *\n     * @memberof PolarEncoder\n     */\n    static type () {\n        return POLAR;\n    }\n\n    layers (...layers) {\n        if (layers.length) {\n            this._layers = layers[0];\n            return this;\n        }\n        return this._layers;\n    }\n\n    /**\n     *\n     *\n     * @param {*} datamodel\n     * @param {*} config\n     * @memberof PolarEncoder\n     */\n    fieldSanitizer (datamodel, config) {\n        let sanitizedRows = [[], []];\n        let sanitizedColumns = [[], []];\n        const fields = super.fieldSanitizer(datamodel, config);\n        const {\n            layers\n        } = config;\n        const {\n            rows,\n            columns\n        } = fields;\n        const layer = layers[0];\n        const encoding = layer.encoding;\n        const radius = encoding && encoding.radius ? encoding.radius.field : null;\n        const angle = encoding && encoding.angle ? encoding.angle.field : null;\n        const sanitizedFields = [sanitizedRows, sanitizedColumns];\n\n        [rows, columns].forEach((fieldType, typeIndex) => {\n            fieldType.forEach((fieldSet, i) => fieldSet.forEach((field) => {\n                if (field.toString() !== radius && field.toString() !== angle && field.type() !== MEASURE) {\n                    sanitizedFields[typeIndex][i].push(field);\n                }\n            }));\n        });\n        sanitizedColumns = [...new Set(sanitizedColumns)];\n        sanitizedRows = [...new Set(sanitizedRows)];\n        this.fieldInfo({ rows: sanitizedRows, columns: sanitizedColumns });\n        return this.fieldInfo();\n    }\n\n    getRetinalFieldsDomain (dataModels, encoding, facetFields, groupBy) {\n        let sizeField;\n        let colorField;\n        const fields = [];\n        const layers = this.layers();\n        const dataModel = dataModels.groupedModel;\n        const fieldsConfig = dataModel.getFieldsConfig();\n        const domains = {};\n        if (layers && layers[0]) {\n            const layer = layers[0];\n            const layerEncoding = layer.def.encoding || {};\n\n            [RADIUS, ANGLE, SIZE, COLOR].forEach((encType) => {\n                const field = layerEncoding[encType] ? layerEncoding[encType].field : '';\n                const measureField = fieldsConfig[field] && fieldsConfig[field].def.type === MEASURE;\n                if (encType === SIZE && measureField) {\n                    sizeField = field;\n                }\n                if (encType === COLOR) {\n                    colorField = field;\n                }\n                fieldsConfig[field] && !measureField && fields.push(field);\n            });\n        }\n\n        if (sizeField) {\n            domains[sizeField] = dataModel.groupBy(facetFields, {\n                [sizeField]: GROUP_BY_FUNCTIONS.SUM\n            }).getFieldspace().fieldsObj()[sizeField].domain();\n        }\n\n        if (colorField) {\n            const dm = dataModel.groupBy([...facetFields, ...fields], groupBy.measures);\n            domains[colorField] = dm.getFieldspace().fieldsObj()[colorField].domain();\n        }\n        return domains;\n    }\n\n    /**\n     *\n     *\n     * @param {*} fields\n     * @param {*} userLayerConfig\n     *\n     * @memberof PolarEncoder\n     */\n    getLayerConfig (fields, userLayerConfig, retinalConfig) {\n        let layerConfig = [];\n        const {\n                columnFields,\n                rowFields\n            } = fields;\n        const allFields = [...columnFields, ...rowFields];\n\n        allFields.forEach(() => {\n            const encoding = {};\n            let config = {\n                mark: ARC,\n                def: {\n                    encoding\n                }\n            };\n            if (userLayerConfig && userLayerConfig.length > 0) {\n                config = mergeRecursive(config, userLayerConfig[0]);\n            }\n            layerConfig.push(config);\n        });\n        if (layerConfig.length === 0) {\n            layerConfig = userLayerConfig;\n        }\n        const sanitizedConfig = this.sanitizeLayerConfig(retinalConfig, layerConfig);\n        this.layers(sanitizedConfig);\n        return sanitizedConfig;\n    }\n\n    /**\n     *\n     *\n     * @param {*} layerArray\n     *\n     * @memberof PolarEncoder\n     */\n    serializeLayerConfig (layerArray) {\n        const serializedLayers = [];\n\n        layerArray.length && layerArray.forEach((layer) => {\n            const def = layerFactory.getSerializedConf(layer.mark, layer);\n            serializedLayers.push({\n                mark: layer.mark,\n                def\n            });\n        });\n        return serializedLayers;\n    }\n\n    sanitizeLayerConfig (encodingConfigs, userLayerConfig) {\n        const layerConfig = [];\n\n        userLayerConfig.forEach((config) => {\n            const def = toArray(config.def);\n            sanitizeIndividualLayerConfig(encodingConfigs, def);\n            def.forEach((conf) => {\n                const encoding = conf.encoding || (conf.encoding = {});\n                !encoding.angle && (encoding.angle = {});\n                const angleField = getObjProp(encoding.angle, 'field');\n                const angle0Field = getObjProp(encoding.angle0, 'field');\n                if (!angleField) {\n                    Object.assign(encoding.angle, {\n                        field: encodingConfigs.color && encodingConfigs.color.field\n                    });\n                }\n                if (!angle0Field) {\n                    !encoding.angle0 && (encoding.angle0 = {});\n                    Object.assign(encoding.angle0, {\n                        field: encoding.angle.field\n                    });\n                }\n            });\n\n            layerConfig.push(config);\n        });\n        return layerConfig;\n    }\n}\n","import { createRetinalAxis } from './encoder-helper';\nimport { COLOR, SHAPE, SIZE } from '../enums/constants';\nimport VisualEncoder from './visual-encoder';\n\n/**\n *\n *\n * @export\n * @class RetinalEncoder\n * @extends {VisualEncoder}\n */\nexport default class RetinalEncoder extends VisualEncoder {\n\n    /**\n     *\n     *\n     * @param {*} axesCreators\n     *\n     * @memberof RetinalEncoder\n     */\n    createAxis (axesCreators) {\n        const { fieldsConfig, config } = axesCreators;\n        const newAxes = {};\n\n        [COLOR, SHAPE, SIZE].forEach((axisType) => {\n            newAxes[`${axisType}`] = createRetinalAxis({ axisType, fieldsConfig }, config[axisType]);\n        });\n        return newAxes;\n    }\n\n    /**\n     *\n     *\n     * @static\n     *\n     * @memberof RetinalEncoder\n     */\n    static type () {\n        return 'retinal';\n    }\n\n    /**\n     *\n     *\n     * @param {*} context\n     *\n     * @memberof RetinalEncoder\n     */\n    setCommonDomain (context) {\n        const { domains, axes, encoding } = context;\n\n        Object.entries(encoding).forEach((enc) => {\n            if (enc[1] && enc[1].field) {\n                const encType = enc[0];\n                const field = enc[1].field;\n\n                if (field) {\n                    axes[encType].forEach((axis) => {\n                        const domain = domains[field];\n                        !enc[1].domain && axis.updateDomain(domain);\n                    });\n                }\n            }\n        });\n        return axes;\n    }\n}\n","import { Store, FieldType, COORD_TYPES, getObjProp, DataModel } from 'muze-utils';\nimport { VisualUnit } from '@chartshq/visual-unit';\nimport { BaseLayer } from '@chartshq/visual-layer';\nimport { DATA_UPDATE_COUNTER } from '../enums/defaults';\nimport { Variable } from '../variable';\nimport { PolarEncoder, CartesianEncoder } from '../encoder';\nimport {\n    DIMENSION,\n    MEASURE,\n    ORDINAL,\n    LINEAR,\n    ROW,\n    COLUMN,\n    COL,\n    LEFT,\n    RIGHT,\n    TOP,\n    BOTTOM,\n    COLOR,\n    SIZE,\n    TEMPORAL,\n    SHAPE,\n    INTERACTION,\n    GRID_LINES,\n    GRID_BANDS,\n    HEADER,\n    FACET,\n    X,\n    Y,\n    ARC,\n    RADIUS,\n    ANGLE\n} from '../enums/constants';\n\nconst POLAR = COORD_TYPES.POLAR;\n\n/**\n * Creates an instance of a store which contains the arguments to make the class reactive\n *\n * @return {Object} instance of store\n * @memberof VisualGroup\n */\nexport const initStore = () => new Store({\n    [DATA_UPDATE_COUNTER]: DATA_UPDATE_COUNTER\n});\n\n/**\n *\n *\n * @param {*} arr\n */\nexport const isDistributionEqual = arr => [...arr[0], ...arr[1]].reduce((isEqual, row) => {\n    const rowType = row.type();\n\n    if (rowType === MEASURE || rowType === TEMPORAL) {\n        isEqual = true;\n    }\n    return isEqual;\n}, false);\n\n/**\n *\n *\n */\nexport const initializeCacheMaps = () => ({\n    cellMap: new Map(),\n    xAxesMap: new Map(),\n    yAxesMap: new Map(),\n    entryCellMap: new Map(),\n    exitCellMap: new Map()\n});\n\n/**\n *\n *\n * @param {*} axisName\n * @param {*} id\n */\nexport const getAxisKey = (axisName, ...params) => `${axisName}-axis-${params.join('-')}`;\n\n/**\n *\n *\n * @param {*} rowId\n * @param {*} columnId\n */\nexport const getCellKey = (rowId, columnId) => `cell-${rowId}-${columnId}`;\n\n/**\n *\n *\n * @param {*} config\n *\n */\nexport const extractUnitConfig = (config) => {\n    const unitConfig = {};\n    const attrNames = [INTERACTION, GRID_LINES, GRID_BANDS];\n\n    attrNames.forEach((attr) => {\n        if (config[attr] !== undefined) {\n            unitConfig[attr] = config[attr];\n        }\n    });\n    return unitConfig;\n};\n\n/**\n *\n *\n * @param {*} headers\n * @param {*} index\n * @param {*} rowLength\n *\n * @memberof MatrixResolver\n */\nexport const getHeaderText = (headers, index, rowLength) => {\n    let header = '';\n\n    if (index === rowLength - 1 && headers.length > rowLength) {\n        for (let i = index; i < headers.length - 1; i++) {\n            header += `${headers[i].toString()} / `;\n        }\n        header += headers[headers.length - 1].toString();\n        return header;\n    } else if (headers[index]) {\n        return headers[index].toString();\n    }\n    return '';\n};\n\n/**\n *\n *\n * @param {*} fields\n * @param {*} fieldHeaders\n * @param {*} TextCell\n * @param {*} labelManager\n *\n */\nexport const headerCreator = (fields, fieldHeaders, TextCell, { classPrefix, labelManager }) => {\n    const headers = fields.length > 0 ? fields[0].map((cell, i) => new TextCell({\n        type: HEADER,\n        className: `${classPrefix}-grid-headers`\n    }, {\n        labelManager\n    }).source(getHeaderText(fieldHeaders, i, fields[0].length))\n                    .config({ show: cell.config().show })) : [];\n    return headers;\n};\n\n/**\n *\n *\n * @param {*} variable\n * @param {*} allFields\n *\n */\nexport const findInGroup = (variable, allFields) => {\n    let channel = null;\n\n    [COLOR, SIZE, SHAPE].forEach((e) => {\n        if (this.store.get(e) && variable === this.store.get(e)[0]) {\n            channel = e;\n        }\n    });\n\n    if (channel) {\n        return { channel };\n    }\n    [ROW, COL].forEach((facetType) => {\n        allFields[`${facetType}Facets`].forEach((e) => {\n            if (e.toString() === variable) {\n                channel = { channel: FACET, type: facetType === COL ? COLUMN : ROW };\n            }\n        });\n    });\n\n    if (channel) {\n        return channel;\n    }\n\n    [ROW, COL].forEach((projType) => {\n        allFields[`${projType}Projections`].forEach((e) => {\n            e.forEach((m) => {\n                if (m.toString() === variable) {\n                    channel = projType === COL ? X : Y;\n                }\n            });\n        });\n    });\n\n    if (channel) {\n        return { channel };\n    }\n    return null;\n};\n\n/**\n *\n *\n * @param {*} datamodel\n * @param {*} field\n */\nexport const getAxisType = (fieldsConfig, field) => {\n    let fieldType = ORDINAL;\n\n    if (field && fieldsConfig[field].def.type !== DIMENSION) {\n        fieldType = LINEAR;\n    }\n    return fieldType;\n};\n\n/**\n *\n *\n * @param {*} datamodel\n * @param {*} fieldName\n *\n */\nexport const retriveDomainFromData = (datamodel, fieldName) => {\n    const field = datamodel.getFieldspace().fields.find(d => d.name() === fieldName.toString());\n    return field.domain();\n};\n\n/**\n *\n *\n * @memberof MatrixResolver\n */\nexport const mutateAxesFromMap = (cacheMaps, axes) => {\n    let xAxes = null;\n    let yAxes = null;\n    const {\n        xAxesMap,\n        yAxesMap\n    } = cacheMaps;\n    const {\n        x: xAxisSet,\n        y: yAxisSet\n    } = axes;\n\n    xAxisSet && xAxisSet.forEach((axisId) => {\n        const xAxis = xAxesMap.get(axisId);\n        xAxes = xAxes || [];\n        xAxes.push(xAxis);\n    });\n\n    yAxisSet && yAxisSet.forEach((axisId) => {\n        const yAxis = yAxesMap.get(axisId);\n        yAxes = yAxes || [];\n        yAxes.push(yAxis);\n    });\n\n    return {\n        xAxes, yAxes\n    };\n};\n\nconst hasPolarEncodings = layerConf => layerConf.mark === ARC || [RADIUS, ANGLE].some(field =>\n        getObjProp(layerConf.encoding, field));\n\n/**\n *\n *\n * @param {*} layers\n *\n */\nexport const getEncoder = (layers) => {\n    let encoder = new CartesianEncoder();\n\n    if (layers.length) {\n        // Figuring out the kind of layers the group will have\n        encoder = layers.some(layerConf => hasPolarEncodings(layerConf)) ? new PolarEncoder() : encoder;\n    }\n    return encoder;\n};\n\n/**\n *\n *\n * @param {*} type\n * @param {*} fields\n * @param {*} userAxisFromConfig\n *\n */\nexport const getHeaderAxisFrom = (type, fields, userAxisFromConfig) => {\n    let axisFrom = userAxisFromConfig[type];\n    let headerFrom = '';\n    const options = type === ROW ? [LEFT, RIGHT] : [BOTTOM, TOP];\n    const [firstField, secondField] = fields;\n    const firstFieldType = i => (firstField.length ? firstField[i].type() : null);\n    const secondFieldType = i => (secondField.length ? secondField[i].type() : null);\n\n    if (firstFieldType(firstField.length - 1) === DIMENSION && secondFieldType(0) === DIMENSION) {\n        headerFrom = axisFrom ? options[1 - options.indexOf(axisFrom)] : options[1];\n\n        if (type === COLUMN && (firstField[firstField.length - 1].toString() === secondField[0].toString())) {\n            axisFrom = TOP;\n        } else {\n            axisFrom = axisFrom || options[0];\n        }\n    } else if (secondFieldType(secondField.length - 1) === DIMENSION) {\n        headerFrom = type === ROW ? RIGHT : BOTTOM;\n        axisFrom = type === ROW ? RIGHT : BOTTOM;\n    } else {\n        headerFrom = type === ROW ? LEFT : TOP;\n        axisFrom = type === ROW ? LEFT : TOP;\n    }\n    if (firstFieldType(firstField.length - 1) === MEASURE && secondFieldType(0) === MEASURE) {\n        axisFrom = type === ROW ? LEFT : TOP;\n    } else if (secondFieldType(0) === MEASURE) {\n        axisFrom = type === ROW ? RIGHT : BOTTOM;\n    } else if (firstFieldType(firstField.length - 1) === MEASURE) {\n        axisFrom = type === ROW ? LEFT : TOP;\n    }\n    return [headerFrom, axisFrom];\n};\n\n/**\n *\n *\n * @param {*} type\n * @param {*} fields\n * @param {*} layers\n *\n * @memberof MatrixResolver\n */\nexport const setFacetsAndProjections = (context, fieldInfo, encoder) => {\n    const {\n        fields,\n        type\n    } = fieldInfo;\n    const { facets, projections } = encoder.simpleEncoder.getFacetsAndProjections(fields, type);\n\n    context.facets({ [`${type}Facets`]: facets });\n    context.projections({ [`${type}Projections`]: projections });\n\n    return { facets, projections, fields };\n};\n\nconst getRowBorders = (left, right) => {\n    const borders = {};\n    borders.top = false;\n    borders.bottom = false;\n    if (left.length > 1 || right.length > 1) {\n        borders.top = true;\n        borders.bottom = true;\n    }\n    return borders;\n};\n\nconst getColumnsBorders = (top, bottom) => {\n    const borders = {};\n    borders.left = false;\n    borders.right = false;\n    if (top.length || bottom.length) {\n        if ((top[0] && top[0].length > 1) || (bottom[0] && bottom[0].length > 1)) {\n            borders.left = true;\n            borders.right = true;\n        }\n    }\n    return borders;\n};\n\nconst getValueBorders = (rows, columns) => {\n    const borders = { top: true, left: true, bottom: true, right: true };\n    const borderTypeRow = [LEFT, RIGHT];\n    const borderTypeCol = [TOP, BOTTOM];\n    rows.forEach((e, i) => {\n        if (e[0] && e[0].length) {\n            borders[borderTypeRow[i]] = true;\n        } else {\n            borders[borderTypeRow[i]] = false;\n        }\n    });\n    columns.forEach((e, i) => {\n        if (e.length) {\n            borders[borderTypeCol[i]] = true;\n        } else {\n            borders[borderTypeCol[i]] = false;\n        }\n    });\n\n    return borders;\n};\n\nexport const getBorders = (matrices, encoder) => {\n    let showRowBorders = { top: false, bottom: false };\n    let showColBorders = { left: false, right: false };\n    let showValueBorders = { top: false, bottom: false, left: false, right: false };\n    const {\n        rows,\n        columns,\n        values: valueMatrix\n    } = matrices;\n    const [leftRows, rightRows] = rows;\n    const [topColumns, bottomColumns] = columns;\n    const {\n        rowDimensions,\n        columnDimensions,\n        rowTemporalFields,\n        columnTemporalFields,\n        columnMeasures,\n        rowMeasures\n    } = encoder.fieldInfo();\n    const allDimensionLength = rowDimensions.length + columnDimensions.length;\n    const allMeasuresLength = rowMeasures.length + columnMeasures.length;\n    const allTemporalFieldsLength = rowTemporalFields.length + columnTemporalFields.length;\n\n    if (encoder.constructor.type() === POLAR) {\n        if (!allDimensionLength) {\n            return { showRowBorders, showColBorders, showValueBorders };\n        }\n    } else if (!allMeasuresLength && !allTemporalFieldsLength && allDimensionLength <= 2) {\n        return { showRowBorders, showColBorders, showValueBorders };\n    }\n\n    showRowBorders = getRowBorders(leftRows, rightRows);\n    showColBorders = getColumnsBorders(topColumns, bottomColumns);\n    showValueBorders = getValueBorders([leftRows, rightRows], [topColumns, bottomColumns]);\n\n    if (valueMatrix.length > 1) {\n        showValueBorders.top = true;\n        showValueBorders.bottom = true;\n    }\n    if (valueMatrix.length && valueMatrix[0].length > 1) {\n        showValueBorders.left = true;\n        showValueBorders.right = true;\n    }\n    return { showRowBorders, showColBorders, showValueBorders };\n};\n\nexport const getFieldsFromSuppliedLayers = (suppliedLayerConfig, fieldsConfig) => {\n    let fields = [];\n    const encodingArr = suppliedLayerConfig.map(conf => (conf.encoding || {}));\n    fields = [...fields, [].concat(...encodingArr.map(enc => Object.values(enc).map(d => d.field)))];\n    fields = fields.filter(field => fieldsConfig[field] && fieldsConfig[field].def.type === FieldType.DIMENSION);\n    return fields;\n};\n\nexport const extractFields = (facetsAndProjections, layerFields) => {\n    const fields = Object.values(facetsAndProjections).map((arr) => {\n        const flattenArray = [].concat(...arr);\n        return [].concat(...flattenArray.map((field) => {\n            if (field instanceof Variable) {\n                return field.getMembers();\n            }\n            return field;\n        }));\n    });\n    return [].concat(...fields, ...layerFields);\n};\n\n/**\n * This method sorts the facets fields inplace if field is of categorical type\n * @param {Object} facets Array of facets\n * @param {Array} keys Array of the facet field values\n * @param {Object} config configuration object\n * @return {Array} Returns sorted facets\n */\nexport const sortFacetFields = (facets, keys, config) => {\n    /**\n     * Check if the facet sorted by the user is plotted\n     * If an incorrect field is sorted, return the keys as is\n     */\n    const schema = [];\n    const facetNames = [];\n    const sortInfo = [];\n    const sortConfig = config.sort;\n\n    facets.forEach((facet) => {\n        const name = `${facet}`;\n        const facetSortConfig = sortConfig[name];\n\n        if (facetSortConfig) {\n            sortInfo.push([name, facetSortConfig]);\n        } else {\n            sortInfo.push([name, null]);\n        }\n        schema.push(facet.getSchemaDef());\n    });\n\n    return new DataModel([facetNames, ...keys], schema).getData({ sort: sortInfo }).data;\n};\n\nexport const removeExitCells = (resolver) => {\n    const exitCells = resolver.cacheMaps().exitCellMap;\n    const store = resolver.store();\n    const qualifiedStateProps = [].concat(...VisualUnit.getQualifiedStateProps(),\n        ...BaseLayer.getQualifiedStateProps());\n    store.lockCommits(qualifiedStateProps);\n    exitCells.forEach((placeholder) => {\n        placeholder.remove();\n    });\n    store.unlockCommits(qualifiedStateProps);\n};\n","import { DataModel } from 'muze-utils';\nimport { sortFacetFields } from './group-utils';\n\n/**\n* Gets name of fields form the variables\n*\n* @param {*} fields1\n* @param {*} [fields2=[]]\n*\n*/\nconst getFieldNames = fieldVar => fieldVar.reduce((acc, d) => {\n    acc = [...acc, ...d.getMembers()];\n    return acc;\n}, []);\n\n/**\n*\n*\n* @param {*} fieldInfo\n* @returns\n*/\nconst prepareProjectionInfo = (fieldInfo) => {\n    const {\n        colProjections,\n        rowProjections\n    } = fieldInfo;\n    const uniqueFields = [];\n    let indices = [];\n    let projections = [];\n\n    rowProjections.forEach((rowProj, rIndex) => {\n        const newRIndex = rIndex;\n        colProjections.forEach((colProj, cIndex) => {\n            const newCIndex = cIndex;\n            const newRowProj = getFieldNames(rowProj);\n            const newColProj = getFieldNames(colProj);\n\n            uniqueFields.push([...newRowProj, ...newColProj]);\n            indices.push({ rowIndex: newRIndex, colIndex: newCIndex });\n            projections.push({ rowFields: rowProj, columnFields: colProj });\n        });\n    });\n    indices = indices.length ? indices : [{ rowIndex: 0, colIndex: 0 }];\n    projections = projections.length ? projections : [{ rowFields: [], columnFields: [] }];\n    return { uniqueFields, indices, projections };\n};\n\n/**\n*\n*\n* @param {*} fieldInfo\n* @returns\n*/\nconst prepareFacetInfo = (fieldInfo) => {\n    const {\n        rowFacets,\n        colFacets\n    } = fieldInfo;\n\n    const rowFacetNames = getFieldNames(rowFacets);\n    const colFacetNames = getFieldNames(colFacets);\n    const allFacets = [...rowFacetNames, ...colFacetNames];\n\n    return { rowFacetNames, colFacetNames, allFacets, rowFacets, colFacets };\n};\n\n/**\n*\n*\n* @param {*} context\n* @param {*} facetNames\n* @param {*} hashMap\n* @param {*} keys\n* @param {*} index\n* @returns\n*/\nconst prepareHashMaps = (context, facetNames, hashMap, keys, index) => {\n    const rowKey = [];\n    facetNames.forEach((name) => {\n        const key = context._derivation[context._derivation.length - 1].meta.keys[name];\n\n        rowKey.push(key);\n    });\n\n    const joinedRowKey = rowKey.join(',');\n\n    if (hashMap[joinedRowKey] === undefined) {\n        hashMap[joinedRowKey] = index++;\n        keys.push(rowKey);\n    }\n    return rowKey;\n};\n\nconst createJoinedKeys = keys => keys.map(e => ({\n    keyArr: e,\n    joinedKey: e.join(',')\n}));\n\n/**\n*\n*\n* @param {*} splitModels\n* @param {*} facetInfo\n* @returns\n*/\nconst getSplitModelHashMap = (splitModels, facetInfo, config) => {\n    const {\n        rowFacetNames,\n        colFacetNames,\n        rowFacets,\n        colFacets\n    } = facetInfo;\n\n    const rowKeyHashMap = {};\n    const colKeyHashMap = {};\n\n    const rowKeys = [];\n    const colKeys = [];\n    const rowIndex = 0;\n\n    const splitModelsHashMap = {};\n\n    splitModels.forEach((splitContext) => {\n        const rowKey = prepareHashMaps(splitContext, rowFacetNames, rowKeyHashMap, rowKeys, rowIndex);\n        const colKey = prepareHashMaps(splitContext, colFacetNames, colKeyHashMap, colKeys, 1);\n\n        splitModelsHashMap[`${rowKey}-${colKey}`] = splitContext;\n    });\n\n    return {\n        splitModelsHashMap,\n        rowKeys: createJoinedKeys(sortFacetFields(rowFacets, rowKeys, config)),\n        colKeys: createJoinedKeys(sortFacetFields(colFacets, colKeys, config))\n    };\n};\n\n/**\n * Formats row or columns keys with the provided formatter.\n *\n * @param {Array} keys - The collection of row or column keys.\n * @param {Array} formatterList - The list of corresponding formatter.\n */\nconst formatKeys = (keys, formatterList) => {\n    const formattedKeys = [];\n    keys.forEach((rKeys, rIdx) => {\n        formattedKeys[rIdx] = [];\n        rKeys.forEach((key, idx) => {\n            formattedKeys[rIdx][idx] = formatterList[idx](key);\n        });\n    });\n    return formattedKeys;\n};\n\n/**\n*\n*\n* @param {Object} context\n* @param {Object} fieldInfo\n* @returns\n*/\nconst splitByColumn = (context, optionalProjections) => {\n    const {\n        matrix,\n        dataModel,\n        rowIndex,\n        colIndex,\n        facetInfo,\n        projectionInfo,\n        geomCellCreator\n    } = context;\n    const {\n        indices,\n        uniqueFields,\n        projections\n    } = projectionInfo;\n\n    const commonFields = optionalProjections;\n\n    dataModel.splitByColumn(uniqueFields, commonFields).forEach((model, i) => {\n        let { rowIndex: row, colIndex: col } = indices[i];\n        row += rowIndex;\n        col += colIndex;\n\n        matrix[row] = matrix[row] || [];\n\n        const projectionIndexObject = {\n            indices: {\n                rowIndex: row,\n                columnIndex: col\n            },\n            projections: projections[i]\n        };\n\n        matrix[row][col] = geomCellCreator(model, projectionIndexObject, facetInfo);\n    });\n    const lastIndex = indices[indices.length - 1];\n\n    return {\n        rowIndex: lastIndex.rowIndex + rowIndex,\n        colIndex: lastIndex.colIndex + colIndex\n    };\n};\n\nconst createColumnDataModels = (colContext, fieldInfo, sourceDM) => {\n    let context = {};\n    const {\n        rowFacets,\n        colFacets\n    } = fieldInfo;\n    const {\n        rowKeyArr,\n        rowKey,\n        colKeyObj,\n        newRowIndex,\n        splitModelsHashMap,\n        currentColumnIndex\n    } = colContext;\n\n    const { keyArr: colKeyArr, joinedKey: colKey } = colKeyObj;\n    const hashMapKey = splitModelsHashMap[`${rowKey}-${colKey}`];\n\n    if (hashMapKey) {\n        context = { dataModel: hashMapKey };\n    } else {\n        const emptyDm = new DataModel([], sourceDM.getData().schema);\n        context = { dataModel: emptyDm };\n    }\n\n    context = {\n        ...context,\n        ...colContext,\n        facetInfo: {\n            rowFacets: [rowFacets, rowKeyArr],\n            colFacets: [colFacets, colKeyArr]\n        },\n        rowIndex: newRowIndex,\n        colIndex: currentColumnIndex\n    };\n    const dataModels = splitByColumn(context, fieldInfo.optionalProjections);\n\n    return {\n        columnIndex: dataModels.colIndex + 1,\n        rowIndex: dataModels.rowIndex\n    };\n};\n\nconst createRowDataModels = (rowContext, fieldInfo, sourceDM) => {\n    let currentColumnIndex = 0;\n    let rowIndexForCurrentKey = 0;\n    const {\n        colKeys,\n        rowKeyObj,\n        currentRowIndex\n    } = rowContext;\n    const newRowIndex = currentRowIndex;\n    const { keyArr: rowKeyArr, joinedKey: rowKey } = rowKeyObj;\n    const colContext = {\n        ...rowContext,\n        rowKeyArr,\n        rowKey,\n        newRowIndex\n    };\n    rowIndexForCurrentKey = currentRowIndex;\n    if (colKeys.length) {\n        colKeys.forEach((colKeyObj) => {\n            colContext.colKeyObj = colKeyObj;\n            colContext.currentColumnIndex = currentColumnIndex;\n            const { columnIndex, rowIndex } = createColumnDataModels(colContext, fieldInfo, sourceDM);\n\n            currentColumnIndex = columnIndex;\n            rowIndexForCurrentKey = rowIndex;\n        });\n    } else {\n        colContext.colKeyObj = { keyArr: [], joinedKey: '' };\n        colContext.currentColumnIndex = currentColumnIndex;\n\n        const { columnIndex, rowIndex } = createColumnDataModels(colContext, fieldInfo, sourceDM);\n\n        currentColumnIndex = columnIndex;\n        rowIndexForCurrentKey = rowIndex;\n    }\n    return {\n        rowIndex: ++rowIndexForCurrentKey\n    };\n};\n\n/**\n* Gets Matrixes for corresponding datamodel, facets and projections\n*\n* @param {Object} dataModel input datamodel\n* @param {Object} fieldInfo Information about the fields\n* @param {Function} geomCellCreator Callback executed after datamodels are prepared after sel/proj\n* @return {Object} set of matrices with the corresponding row and column keys\n*/\nexport const getMatrixModel = (dataModel, fieldInfo, geomCellCreator, globalConfig) => {\n    let currentRowIndex = 0;\n    const matrix = [];\n    const {\n        rowFacets,\n        colFacets\n    } = fieldInfo;\n\n    const projectionInfo = prepareProjectionInfo(fieldInfo);\n    const facetInfo = prepareFacetInfo(fieldInfo);\n    const allSplitModels = dataModel.splitByRow(facetInfo.allFacets);\n\n    const {\n        splitModelsHashMap,\n        rowKeys,\n        colKeys\n    } = getSplitModelHashMap(allSplitModels, facetInfo, globalConfig);\n\n    const generalContext = {\n        matrix,\n        geomCellCreator,\n        projectionInfo,\n        splitModelsHashMap,\n        colKeys\n    };\n    if (rowKeys.length) {\n        rowKeys.forEach((rowKeyObj) => {\n            const rowContext = {\n                ...generalContext,\n                rowKeyObj,\n                currentRowIndex\n            };\n            const { rowIndex } = createRowDataModels(rowContext, fieldInfo, dataModel);\n\n            currentRowIndex = rowIndex;\n        });\n    } else if (colKeys.length) {\n        let currentColumnIndex = 0;\n        const newRowIndex = currentRowIndex;\n\n        colKeys.forEach((colKeyObj) => {\n            const colContext = {\n                ...generalContext,\n                rowKeyArr: [],\n                rowKey: '',\n                colKeyObj,\n                newRowIndex,\n                currentColumnIndex\n            };\n            const { columnIndex, rowIndex } = createColumnDataModels(colContext, fieldInfo, dataModel);\n            currentRowIndex = rowIndex;\n            currentColumnIndex = columnIndex;\n        });\n    } else {\n        let currentColumnIndex = 0;\n        const newRowIndex = currentRowIndex;\n        const colContext = {\n            ...generalContext,\n            rowKeyArr: [],\n            rowKey: '',\n            colKeyObj: { keyArr: [], joinedKey: '' },\n            newRowIndex,\n            currentColumnIndex\n        };\n        const { columnIndex, rowIndex } = createColumnDataModels(colContext, fieldInfo, dataModel);\n        currentRowIndex = rowIndex;\n        currentColumnIndex = columnIndex;\n    }\n\n    const formattedColKeys = formatKeys(colKeys.map(e => e.keyArr),\n        colFacets.map(facetField => facetField.rawFormat()));\n    const formattedRowKeys = formatKeys(rowKeys.map(e => e.keyArr),\n        rowFacets.map(facetField => facetField.rawFormat()));\n\n     // Getting column keys\n    const transposedColKeys = formattedColKeys.length > 0 ? formattedColKeys[0].map((col, i) =>\n     formattedColKeys.map(row => row[i])) : formattedColKeys;\n\n    return { matrix, rowKeys: formattedRowKeys, columnKeys: transposedColKeys };\n};\n","import { AxisOrientation } from '@chartshq/muze-axis';\nimport {\n    getObjProp,\n    FieldType,\n    retrieveNearestGroupByReducers,\n    mergeRecursive,\n    createSelection,\n    DataModel\n} from 'muze-utils';\nimport { getMatrixModel } from './matrix-model';\nimport {\n    getCellKey,\n    isDistributionEqual,\n    mutateAxesFromMap,\n    getFieldsFromSuppliedLayers,\n    extractFields,\n    removeExitCells\n} from './group-utils';\nimport { ROW, ROWS, COLUMNS, COL, LEFT, RIGHT, TOP,\n    BOTTOM, PRIMARY, SECONDARY, X, Y, TEMPORAL } from '../enums/constants';\nimport { SimpleVariable } from '../variable';\n\n/**\n * Updates row and column cells with the geom cell corresponding to the facet keys\n *\n * @param {*} resolver\n * @param {*} facets\n */\nconst updateCells = (resolver, facets, geomCell) => {\n    [ROW, COL].forEach((field) => {\n        const cells = resolver[`${field}Cells`]();\n        const facetKey = facets[`${field}Facets`][1].join();\n\n        !cells[facetKey] && (cells[facetKey] = []);\n        cells[facetKey].push(geomCell);\n        resolver[`${field}Cells`](cells);\n    });\n};\n\n/**\n *\n *\n * @param {*} context\n * @param {*} datamodel\n * @param {*} fieldInfo\n * @param {*} facets\n *\n */\nexport const createValueCells = (context, datamodel, fieldInfo, facets) => {\n    const {\n        projections,\n        indices\n    } = fieldInfo;\n    const {\n        rowFields,\n        columnFields\n    } = projections;\n    const {\n         rowIndex,\n         columnIndex\n    } = indices;\n    const {\n        suppliedLayers,\n        cell: GeomCell,\n        resolver,\n        config,\n        encoder,\n        detailFields\n    } = context;\n    const axes = resolver.axes();\n    const cacheMaps = resolver.cacheMaps();\n    const matrixLayers = resolver.matrixLayers();\n    const labelManager = resolver.dependencies().smartlabel;\n    const horizontalAxis = resolver.horizontalAxis();\n    const verticalAxis = resolver.verticalAxis();\n    const datamodelTransform = resolver.datamodelTransform();\n    const {\n        entryCellMap,\n        exitCellMap\n    } = cacheMaps;\n    const layerConfigArr = encoder.getLayerConfig({ columnFields, rowFields }, suppliedLayers || [],\n        context.retinalConfig);\n    const axesCreators = { config, labelManager, axes, cacheMaps };\n\n    fieldInfo.normalizedColumns = verticalAxis.fields;\n    fieldInfo.normalizedRows = horizontalAxis.fields;\n\n    const allFacets = [\n        [...facets.rowFacets[0], ...facets.colFacets[0]],\n        [...facets.rowFacets[1], ...facets.colFacets[1]]\n    ];\n    const facetFields = allFacets.slice();\n    facetFields[0] = facetFields[0].map(facetField => facetField.oneVar());\n\n    matrixLayers[rowIndex] = matrixLayers[rowIndex] ? matrixLayers[rowIndex] : [];\n    matrixLayers[rowIndex][columnIndex] = layerConfigArr;\n\n    // return from map if already there otherwise create and put in map\n    const geomCellKey = getCellKey(rowIndex, columnIndex);\n    const fields = {\n        y: rowFields,\n        x: columnFields\n    };\n\n    const geomCell = !exitCellMap.has(geomCellKey) ? new GeomCell() : exitCellMap.get(geomCellKey);\n\n    geomCell.data(datamodel)\n                    .fields(fields)\n                    .transform(datamodelTransform)\n                    .detailFields(detailFields)\n                    .facetByFields(allFacets);\n\n    encoder.createAxis(axesCreators, fieldInfo, Object.assign({}, context, { geomCell, facetFields }));\n    entryCellMap.set(geomCellKey, geomCell);\n    exitCellMap.delete(geomCellKey);\n\n    updateCells(resolver, facets, geomCell);\n\n    return entryCellMap.get(geomCellKey);\n};\n\nconst extractAxisIndex = id => getObjProp(id.match(/^[0-9]*?(?=-)/g), 0);\n\n/**\n * Creates axis cells based on the set of axes\n *\n * @param {Selection} selection Contains a selection of the axis units\n * @param {Array} axes Actual axis units\n * @param {number} axisIndex 0-> primary axis, 1-> secondary axis(when dual axis is made)\n * @param {Object} cells Contains a collection of the cells\n * @return {Object} return either set of axis/blank cells depending on the config\n */\nconst createAxisCells = (selection, axes, axisIndex, cells) =>\n    createSelection(selection, axis => axis, axes, (item, i) => i + item.reduce((e, n) => {\n        const id = n.id + axisIndex;\n        return `${e}-${id}`;\n    }, '')).map((currObj, axis) => {\n        if (axis && axis[axisIndex]) {\n            const axisInst = axis[axisIndex];\n            const { orientation, show } = axisInst.config();\n\n            return new cells.AxisCell().source(axisInst).config({\n                isOffset: orientation === AxisOrientation.LEFT || orientation === AxisOrientation.TOP,\n                show\n            });\n        }\n        return new cells.BlankCell().config({ show: false });\n    }).sort((a, b) => extractAxisIndex(a[0]) - extractAxisIndex(b[0]));\n\n/**\n *\n *\n * @param {*} context\n * @param {*} selectionObj\n * @param {*} cells\n * @retur\n */\nconst axisPlaceholderGn = (context, selObj, cells) => {\n    const {\n        matrices\n    } = context;\n    const {\n        axesMatrix\n    } = matrices;\n\n    return (type, axisFrom) => {\n        const axes = axesMatrix[`${type}`];\n\n        if (axes && axes.length) {\n            if (type === X || type === Y) {\n                const fieldNames = type === Y ? ROWS : COLUMNS;\n\n                [PRIMARY, SECONDARY].forEach((fieldType, index) => {\n                    const selObjProp = `${fieldNames}${fieldType}`;\n                    let axisIndex = index;\n                    let axesForDraw = axes;\n                    if (axisFrom === RIGHT || axisFrom === BOTTOM) {\n                        axisIndex = 1 - axisIndex;\n                    }\n                    if (!getObjProp(axes, 0, axisIndex)) {\n                        axesForDraw = [];\n                    }\n                    selObj[selObjProp] = createAxisCells(selObj[selObjProp], axesForDraw, axisIndex, cells);\n                });\n            } else {\n                selObj.rowsPrimary = createAxisCells(selObj.rowPrime, axes.map(() => []), 0, cells);\n                selObj.rowsSecondary = createAxisCells(selObj.rowSec, axes.map(() => []), 0, cells);\n                selObj.columnsPrimary = createAxisCells(selObj.colPrime, axes[0], 0, cells);\n                selObj.columnsSecondary = createAxisCells(selObj.colSec, axes[0], 0, cells);\n            }\n        }\n        return selObj;\n    };\n};\n\n/**\n * Creates header cells based on the set of headers\n *\n * @param {Object} selection Contains a selection of the header units\n * @param {string} headers Contains a list of the headers\n * @param {Object} cells Contains a collection of the cells\n * @param {Object} labelManager smart label instance\n * @return {Object} return either set of header cells depending on the config\n */\nconst createTextCells = (selection, headers, cells, labelManager) => createSelection(selection,\n        (label) => {\n            const textCell = new cells.TextCell({}, { labelManager });\n            textCell.source(label);\n            return textCell;\n        }, headers, (key, i) => key + i);\n\nconst extractFacetIndex = id => id.split('-').pop();\n\n/**\n *\n *\n * @param {*} context\n * @param {*} selectionObj\n * @param {*} cells\n * @param {*} labelManager\n *\n */\nconst headerPlaceholderGn = (context, selectionObj, cells, labelManager) => {\n    const {\n        axis,\n        keys,\n        type,\n        facet\n    } = context;\n    const counter = axis.length / keys.length;\n    const selectionKeys = keys.length ? axis.map((d, i) => keys[Math.floor(i / counter)]) : [];\n\n    const selObjUpdater = createSelection(selectionObj[`${type}Headers`], keySet => keySet, selectionKeys,\n    (keySet, i) => `${keySet.join(',')}-${i}`)\n        .sort((a, b) => extractFacetIndex(a[0]) - extractFacetIndex(b[0]));\n\n    return selObjUpdater.map((keySet, data) => {\n        let textCells = createTextCells(null, data, cells, labelManager);\n        textCells = textCells.map((cell, k) => cell.source(k).config(facet));\n        return textCells;\n    });\n};\n\n/**\n * Creates a set of placeholders as a part of selection object\n *\n * @param {Array} normalizedOptions contains normalized rows and columns\n * @param {Array} matrices contains axis and value matrices\n * @param {aArrayny} projections contains set of row and column projections\n * @param {Object} cells Contains a collection of the cells\n * @param {Object} labelManager smart label instance\n * @return {Object} Creates a set of placeholders as a part of selections\n */\nconst generatePlaceholders = (context, cells, labelManager) => {\n    let selectionObj;\n    const {\n        matrices,\n        fields,\n        facetsAndProjections,\n        selection,\n        facet,\n        encoders,\n        resolver\n    } = context;\n    const {\n        rows,\n        columns\n    } = fields;\n    const {\n        valuesMatrix\n    } = matrices;\n    const {\n        rowProjections,\n        colProjections\n    } = facetsAndProjections;\n    const {\n        rowKeys,\n        columnKeys\n    } = valuesMatrix;\n    const takeAxisFrom = encoders.simpleEncoder._axisFrom;\n    const takeHeaderFrom = encoders.simpleEncoder._headerFrom;\n\n    selectionObj = selection || {};\n\n    ['pie', X, Y].forEach((axis) => {\n        const axisFrom = axis === X ? takeAxisFrom.column : takeAxisFrom.row;\n        selectionObj = axisPlaceholderGn(context, selectionObj, cells)(axis, axisFrom);\n    });\n\n    const {\n        rowsPrimary,\n        rowsSecondary,\n        columnsPrimary,\n        columnsSecondary\n    } = selectionObj;\n\n    const rowAxis = rowsPrimary && rowsPrimary.getObjects().length ? rowsPrimary.getObjects() :\n        (rowsSecondary && rowsSecondary.getObjects().length ? rowsSecondary.getObjects() : []);\n    const colAxis = columnsPrimary && columnsPrimary.getObjects().length ? columnsPrimary.getObjects() :\n        (columnsSecondary && columnsSecondary.getObjects().length ? columnsSecondary.getObjects() : []);\n\n    const headerConfig = [\n        { type: LEFT, section: rows[0], axis: rowAxis, headerFrom: takeHeaderFrom.row },\n        { type: RIGHT, section: rows[1], axis: rowAxis, headerFrom: takeHeaderFrom.row },\n        { type: TOP, section: columns[0], axis: colAxis, headerFrom: takeHeaderFrom.column },\n        { type: BOTTOM, section: columns[1], axis: colAxis, headerFrom: takeHeaderFrom.column }\n    ];\n\n    headerConfig.forEach((config, index) => {\n        let keys;\n        let length;\n        const {\n            type,\n            section,\n            axis,\n            headerFrom\n        } = config;\n\n        if (index < 2) {\n            keys = rowKeys;\n            length = rowProjections.length > 0 ? rowProjections.length : 1;\n        } else {\n            keys = columnKeys;\n            length = colProjections.length > 0 ? colProjections.length : 1;\n        }\n        keys = keys.map(arr => arr.map(val => resolver.valueParser()(val)));\n        if (section.length && headerFrom === type && axis && keys.length) {\n            const hContext = { axis, length, type };\n            let headers = [];\n            if (index < 2) {\n                hContext.keys = keys;\n                hContext.facet = facet.rows;\n                headers = headerPlaceholderGn(hContext, selectionObj, cells, labelManager);\n            } else {\n                hContext.facet = facet.columns;\n                hContext.keys = keys[0].map((key, i) => keys.map(e => e[i]));\n\n                headers = headerPlaceholderGn(hContext, selectionObj, cells, labelManager);\n            }\n            selectionObj[`${type}Headers`] = headers;\n        } else {\n            selectionObj[`${type}Headers`] = null;\n        }\n    });\n    return selectionObj;\n};\n\n/**\n * Generates matrices\n *\n * @param {Object} config Configuration to generate matrices\n * @param {Array} matrices Matrices containing the set of visual units and axes units\n * @param {Object} cells Contains a collection of the cells\n * @param {Object} labelManager smart label instance\n * @return {Object} contains a collection of matrices\n */\nexport const generateMatrices = (context, matrices, cells, labelManager) => {\n    const {\n        unitHeight,\n        unitWidth,\n        facetsAndProjections,\n        normalizedRows,\n        normalizedColumns,\n        selection,\n        axisFrom,\n        facet,\n        encoders,\n        resolver\n     } = context;\n    const placeholderContext = {\n        fields: {\n            rows: normalizedRows,\n            columns: normalizedColumns\n        },\n        matrices,\n        facetsAndProjections,\n        selection,\n        axisFrom,\n        facet,\n        encoders,\n        resolver\n    };\n    // Generate placeholders for all matrices\n    const selectionObj = generatePlaceholders(placeholderContext, cells, labelManager);\n    const {\n        columnsPrimary,\n        columnsSecondary,\n        rowsPrimary,\n        rowsSecondary,\n        leftHeaders,\n        topHeaders,\n        bottomHeaders,\n        rightHeaders\n    } = selectionObj;\n    const [rowPrime, rowSec, colPrime, colSec] = [rowsPrimary, rowsSecondary, columnsPrimary, columnsSecondary]\n        .map(d => (d ? d.getObjects() : []));\n    const [leftFacets, rightFacets] = [leftHeaders, rightHeaders]\n        .map(e => (e ? e.getObjects()\n                        .map(f => f.getObjects()) : []));\n    let rowPriority = rowSec.length ? 1 : -1;\n    rowPrime.length && rowPriority++;\n    let colPriority = colSec.length ? 1 : -1;\n    colPrime.length && colPriority++;\n\n    // Compute left matrix using left headers and the axes on the rows\n    let leftMatrix = leftFacets.length ? leftFacets.map((d, i) => {\n        rowPrime[i] = rowPrime[i] ? [rowPrime[i]] : [];\n        return [...d, ...rowPrime[i]];\n    }) : (rowPrime ? rowPrime.map(d => [d]) : []);\n\n    // Compute right matrix using right headers and the axes on the rows\n    const rightMatrix = rowSec.length ? rowSec.map((d, i) => [d, ...(rightFacets[i] || [])]) : (rightFacets.length ?\n        rightFacets.map(d => [...d]) : []);\n\n    const topMatrix = [];\n    if (topHeaders) {\n        const headers = topHeaders.getObjects();\n        headers.forEach((e) => {\n            const innerHeaders = e.getObjects();\n            innerHeaders.forEach((x, i) => {\n                topMatrix[i] = topMatrix[i] || [];\n                topMatrix[i].push(x);\n            });\n        });\n    }\n    // Compute top matrix using the top headers and axes on the columns\n    if (colPrime.length) {\n        topMatrix.push(colPrime);\n    }\n\n    // Bottom and right matrices are prepared using the user config.\n    let bottomMatrix = [];\n    if (colSec.length) {\n        bottomMatrix.push(colSec);\n    }\n    const currentBottomLength = bottomMatrix.length;\n    if (bottomHeaders) {\n        const headers = bottomHeaders.getObjects();\n        headers.forEach((e) => {\n            const innerHeaders = e.getObjects();\n            innerHeaders.forEach((x, i) => {\n                bottomMatrix[i + currentBottomLength] = bottomMatrix[i + currentBottomLength] || [];\n                bottomMatrix[i + currentBottomLength].push(x);\n            });\n        });\n    }\n\n    if (!leftMatrix.length && !rightMatrix.length) {\n        const cell = new cells.BlankCell();\n        cell.setAvailableSpace(unitWidth, unitHeight);\n        leftMatrix = [[cell]];\n    }\n\n    if (!topMatrix.length && (!bottomMatrix.length || !bottomMatrix[0].length)) {\n        const cell = new cells.BlankCell();\n        cell.setAvailableSpace(unitWidth, unitHeight);\n        bottomMatrix = [[cell]];\n    }\n\n    return {\n        rows: [leftMatrix, rightMatrix],\n        columns: [topMatrix, bottomMatrix],\n        selectionObj,\n        colPriority,\n        rowPriority\n    };\n};\n\nconst getAxisFields = (projections, fieldHolder = []) =>\n                            projections.reduce((acc, item) =>\n                                [...acc, ...item.reduce((ac, field) =>\n                                   (field instanceof SimpleVariable ? [...ac, field.oneVar()] : ac), [])], fieldHolder);\n\nconst sortDmTemporalFields = (resolver, datamodel) => {\n    let axisFields = [];\n    const projections = resolver.projections();\n    axisFields = getAxisFields(projections.rowProjections, getAxisFields(projections.colProjections));\n\n    const fieldConfig = datamodel.getFieldsConfig();\n    const temporalFields = axisFields.reduce((acc, field) =>\n        ((fieldConfig[field].def.subtype === TEMPORAL) ? [...acc, [field]] : acc), []);\n    return temporalFields.length ? datamodel.sort(temporalFields, { saveChild: true }) : datamodel;\n};\n\nconst transformDataModel = (dataModel, config, resolver) => {\n    let groupedModel;\n\n    const fieldsConfig = dataModel.getFieldsConfig();\n    const resolvedData = resolver.data();\n    const { groupBy, suppliedLayers, facetsAndProjections } = config;\n\n    if (resolvedData instanceof DataModel) {\n        resolvedData.dispose();\n    }\n    groupedModel = dataModel.project(dataModel.getSchema().map(d => d.name));\n    resolver.data(groupedModel);\n    if (!groupBy.disabled) {\n        const fields = getFieldsFromSuppliedLayers(suppliedLayers, groupedModel.getFieldsConfig());\n        const allFields = extractFields(facetsAndProjections, fields);\n        const dimensions = allFields.filter(field =>\n            getObjProp(fieldsConfig, field, 'def', 'type') === FieldType.DIMENSION);\n        const aggregationFns = groupBy.measures;\n        const measureNames = Object.keys(groupedModel.getFieldspace().getMeasure());\n        const nearestAggFns = retrieveNearestGroupByReducers(groupedModel, ...measureNames);\n        const resolvedAggFns = mergeRecursive(nearestAggFns, aggregationFns);\n\n        groupedModel = groupedModel.groupBy(dimensions.length ? dimensions : [''], resolvedAggFns)\n                                            .project(allFields);\n    }\n    // sort temporal fields if any in the given rows and columns\n    groupedModel = sortDmTemporalFields(resolver, groupedModel);\n    return groupedModel;\n};\n\n/**\n * Computes matrices for a group\n *\n * @param {Object} datamodel on which the matrices are to be computed\n * @param {Object} config configuration of the matrices\n * @param {Object} layerRegistry contains the registered layers\n * @return {Object} conputed matrices\n * @memberof MatrixResolver\n */\nexport const computeMatrices = (context, config) => {\n    const {\n        resolver,\n        datamodel,\n        componentRegistry,\n        encoders\n    } = context;\n    const {\n            globalConfig,\n            selection,\n            transform\n        } = config;\n    const groupBy = globalConfig.autoGroupBy;\n    const { smartlabel: labelManager } = resolver.dependencies();\n    const fieldMap = datamodel.getFieldsConfig();\n    const layerConfig = resolver.layerConfig();\n    const registry = resolver.registry();\n    const { fields: normalizedRows } = resolver.horizontalAxis();\n    const { fields: normalizedColumns } = resolver.verticalAxis();\n    const otherEncodings = resolver.optionalProjections(config, layerConfig);\n    const facetsAndProjections = resolver.getAllFields();\n    const matrixGnContext = {\n        // Configuration to be passed to generate the  different matrices.\n        // A common config is used for both value matrices and other matrices\n        normalizedColumns,\n        normalizedRows,\n        facetsAndProjections,\n        layers: layerConfig,\n        fieldMap,\n        otherEncodings,\n        encoders,\n        facet: globalConfig.facet || {},\n        axisFrom: globalConfig.axisFrom || {},\n        selection,\n        resolver\n    };\n    const cells = {\n        GeomCell: resolver.getCellDef(registry.GeomCell),\n        AxisCell: resolver.getCellDef(registry.AxisCell),\n        BlankCell: resolver.getCellDef(registry.BlankCell),\n        TextCell: resolver.getCellDef(registry.TextCell)\n    };\n    const isRowSizeEqual = isDistributionEqual(normalizedRows);\n    const isColumnSizeEqual = isDistributionEqual(normalizedColumns);\n\n    resolver.colCells({});\n    resolver.rowCells({});\n    resolver.datamodelTransform(transform || {});\n\n    // Cell creation begins here\n    resolver.resetSimpleAxes();\n\n    const {\n        entryCellMap\n    } = resolver.cacheMaps();\n    const newCacheMap = {\n        exitCellMap: entryCellMap,\n        entryCellMap: new Map()\n    };\n\n    resolver.cacheMaps(newCacheMap);\n\n    const valueCellContext = {\n        config: globalConfig,\n        suppliedLayers: encoders.simpleEncoder.serializeLayerConfig(resolver.layerConfig()),\n        resolver,\n        cell: cells.GeomCell,\n        encoder: encoders.simpleEncoder,\n        newCacheMap,\n        detailFields: config.detail,\n        retinalConfig: {\n            color: config.color,\n            size: config.size,\n            shape: config.shape\n        }\n    };\n\n    const groupedModel = transformDataModel(datamodel, {\n        facetsAndProjections,\n        suppliedLayers: valueCellContext.suppliedLayers,\n        groupBy\n    }, resolver);\n\n    // return a callback function to create the cells from the matrix\n    const cellCreator = resolver.valueCellsCreator(valueCellContext);\n    // Creates value matrices from the datamodel and configs\n    const valueMatrixInfo = getMatrixModel(groupedModel, facetsAndProjections, cellCreator, globalConfig);\n\n    removeExitCells(resolver);\n    resolver.cacheMaps().exitCellMap.clear();\n    resolver.valueMatrix(valueMatrixInfo.matrix);\n\n    const { xAxes, yAxes } = mutateAxesFromMap(resolver.cacheMaps(), resolver.axes());\n\n    resolver.axes({\n        x: xAxes,\n        y: yAxes\n    });\n\n    resolver.createUnits(componentRegistry, config);\n\n    const matrices = {\n        valuesMatrix: valueMatrixInfo,\n        axesMatrix: resolver.axes()\n    };\n    // Create all matrices\n    const {\n        rows,\n        columns,\n        selectionObj,\n        rowPriority,\n        colPriority\n    } = generateMatrices(matrixGnContext, matrices, cells, labelManager);\n\n    resolver.rowMatrix(rows);\n    resolver.columnMatrix(columns);\n\n    return {\n        rows: resolver.rowMatrix(),\n        columns: resolver.columnMatrix(),\n        values: resolver.valueMatrix(),\n        isColumnSizeEqual,\n        isRowSizeEqual,\n        priority: {\n            row: rowPriority,\n            col: colPriority\n        },\n        selection: selectionObj,\n        dataModels: {\n            groupedModel,\n            parentModel: datamodel\n        }\n    };\n};\n","export const RESOLVER_PROPS = {\n    dependencies: {},\n    units: {},\n    datamodelTransform: {},\n    layerConfig: {},\n    matrixLayers: {},\n    colCells: {},\n    rowCells: {},\n    rowMatrix: {},\n    columnMatrix: {},\n    valueMatrix: {},\n    encoder: {},\n    valueParser: {},\n    data: {}\n};\n","import { VisualUnit } from '@chartshq/visual-unit';\nimport { generateGetterSetters, STATE_NAMESPACES, getUniqueId } from 'muze-utils';\nimport {\n     initializeCacheMaps,\n     headerCreator,\n     extractUnitConfig,\n     setFacetsAndProjections\n} from './group-utils';\nimport {\n     ROW, COL, LEFT, RIGHT, COLOR, SIZE, SHAPE, DETAIL, CELL, X_AXES, Y_AXES, ENTRY_CELLS, EXIT_CELLS, INITIALIZED,\n     AXIS, UNIT, BEFORE_UPDATE, UPDATED, VALUE_MATRIX, FACET_HEADERS\n} from '../enums/constants';\nimport { createValueCells, computeMatrices } from './cell-creator';\nimport { RESOLVER_PROPS } from './resolver-props';\n\n/**\n * Resolves the matrices from configuration provided\n *\n * @export\n * @class MatrixResolver\n */\nexport default class MatrixResolver {\n\n    /**\n     * Creates an instance of MatrixResolver.\n     * @param {Object} dependencies needed to run the resolver\n     * @memberof MatrixResolver\n     */\n    constructor (dependencies) {\n        this._registry = {};\n        this._layerConfig = [];\n        this._matrixLayers = [];\n        this._dependencies = dependencies;\n        this._rowMatrix = [];\n        this._columnMatrix = [];\n        this._valueMatrix = [];\n        this._facets = { rowFacets: [], colFacets: [] };\n        this._projections = { rowProjections: [], colProjections: [] };\n        this._datamodelTransform = {};\n        this._units = [];\n        this._cacheMaps = {};\n        this._fireboltDeps = {};\n        this._axes = {\n            x: {},\n            y: {},\n            color: [],\n            size: [],\n            shape: [],\n            radius: [],\n            angle: [],\n            angle0: []\n        };\n        generateGetterSetters(this, RESOLVER_PROPS);\n        this.cacheMaps(initializeCacheMaps());\n    }\n\n    /**\n     * Set:  Registers placeholders, Get: return {Object} those placeholders\n     *\n     * @param {Object} placeholders cells that will construct the group\n     * @return {Object} Either current instance or the set of placeholders\n     * @memberof MatrixResolver\n     */\n    registry (...placeholders) {\n        if (placeholders.length) {\n            Object.entries(placeholders[0]).forEach((val) => {\n                this._registry[val[0]] = val[1];\n            });\n            return this;\n        }\n        return this._registry;\n    }\n\n    /**\n     * Used to set the layer config from outside or get current layer info\n     *\n     * @param {Object} type configuration of layer provided externally\n     * @return {Object} either the layer or current instance\n     * @memberof MatrixResolver\n     */\n    cacheMaps (...maps) {\n        if (maps.length) {\n            [CELL, X_AXES, Y_AXES, ENTRY_CELLS, EXIT_CELLS].forEach((e) => {\n                this._cacheMaps[`${e}Map`] = maps[0][`${e}Map`] || this._cacheMaps[`${e}Map`];\n            });\n            return this;\n        }\n        return this._cacheMaps;\n    }\n\n    /**\n     * Used to set the layer config from outside or get current layer info\n     *\n     * @param {Object} type configuration of layer provided externally\n     * @return {Object} either the layer or current instance\n     * @memberof MatrixResolver\n     */\n    axes (...axes) {\n        if (axes.length) {\n            this._axes = Object.assign({}, this._axes, axes[0]);\n            return this;\n        }\n        return this._axes;\n    }\n\n    /**\n     *\n     *\n     * @param {*} facets\n     *\n     * @memberof MatrixResolver\n     */\n    facets (...facets) {\n        if (facets.length) {\n            Object.entries(facets[0]).forEach((e) => {\n                this._facets[e[0]] = e[1];\n            });\n            return this;\n        }\n        return this._facets;\n    }\n\n    /**\n     *\n     *\n     * @param {*} projections\n     *\n     * @memberof MatrixResolver\n     */\n    projections (...projections) {\n        if (projections.length) {\n            Object.entries(projections[0]).forEach((e) => {\n                this._projections[e[0]] = e[1];\n            });\n            return this;\n        }\n        return this._projections;\n    }\n\n    /**\n     *\n     *\n     * @param {*} config\n     * @param {*} layerConfig\n     *\n     * @memberof MatrixResolver\n     */\n    optionalProjections (config, layerConfig) {\n        const otherEncodings = {};\n        const optionalProjections = [];\n        const otherEncodingTypes = [SIZE, COLOR, SHAPE];\n\n        otherEncodingTypes.forEach((type) => {\n            if (config[type] && config[type].field) {\n                const enc = config[type];\n                otherEncodings[type] = enc.field;\n                optionalProjections.push(enc.field);\n            }\n        });\n\n        if (config[DETAIL]) {\n            optionalProjections.push(...config.detail);\n        }\n\n        if (layerConfig.length) {\n            layerConfig.forEach((layer) => {\n                if (layer.encoding) {\n                    Object.values(layer.encoding).forEach((enc) => {\n                        if (enc && optionalProjections.indexOf(enc.field) === -1) {\n                            optionalProjections.push(enc.field ? enc.field : enc);\n                        }\n                    });\n                }\n            });\n        }\n        this.projections({ optionalProjections });\n        return otherEncodings;\n    }\n\n    /**\n     * return the normalized set of rows and facets and projections\n     *\n     * @param {Object} rows parameters needed to set horizontal axis consisiting of rows\n     * @return {Object} facets, projections and normalized rows\n     * @memberof MatrixResolver\n     */\n    horizontalAxis (rows, encoder) {\n        if (rows) {\n            this._horizontalAxis = setFacetsAndProjections(this, { type: ROW, fields: rows }, encoder);\n            return this;\n        }\n        return this._horizontalAxis;\n    }\n\n    /**\n     * return the normalized set of columns and facets and projections\n     *\n     * @param {Object} columns parameters needed to set vertical axis consisiting of columns\n     * @return {Object} facets, projections and normalized columns\n     * @memberof MatrixResolver\n     */\n    verticalAxis (columns, encoder) {\n        if (columns) {\n            this._verticalAxis = setFacetsAndProjections(this, { type: COL, fields: columns }, encoder);\n            return this;\n        }\n        return this._verticalAxis;\n    }\n\n    /**\n     * Gets the class definition of a particular cell type(if the particular type has been extended, that particular\n     * definition is returned)\n     *\n     * @param {Object} cell cell whose class definition is to be retrieved\n     * @return {Object} cell definition\n     * @memberof MatrixResolver\n     */\n    getCellDef (cell) {\n        const registry = this.registry();\n\n        Object.values(registry).forEach((e) => {\n            if (e.prototype instanceof cell) {\n                cell = e;\n            }\n        });\n        return cell;\n    }\n\n    /**\n     * return a visual cell creator along with its axis information to be injected to the datamodel creation\n     * function\n     *\n     * @param {Object} GeomCell Type of cell to be created\n     * @return {Object} Created cell\n     * @memberof MatrixResolver\n     */\n    valueCellsCreator (context) {\n        // reset matrix layers\n        this.matrixLayers([]);\n\n        return (datamodel, fieldInfo, facets) => createValueCells(context, datamodel, fieldInfo, facets);\n    }\n\n    /**\n     * Callback to be applied on each cell of a matrix of a particular type\n     *\n     * @param {string} matrixType type of matrix on which callback is to be applied\n     * @param {Function} callback function to be applied to each cell\n     * @memberof MatrixResolver\n     */\n    forEach (matrixType, callback) {\n        this[matrixType]().forEach((row, rIndex) => {\n            row.forEach((col, cIndex) => {\n                callback(rIndex, cIndex, col);\n            });\n        });\n    }\n\n    /**\n     *\n     *\n     *\n     * @memberof MatrixResolver\n     */\n    getAllFields () {\n        const retObj = this.projections();\n\n        Object.entries(this.facets()).forEach((e) => {\n            retObj[e[0]] = e[1];\n        });\n        return retObj;\n    }\n\n    /**\n     *\n     *\n     * @memberof MatrixResolver\n     */\n    resetSimpleAxes () {\n        return this.axes({\n            x: new Set(),\n            y: new Set(),\n            radius: [],\n            angle: [],\n            angle0: [],\n            pie: []\n        });\n    }\n\n    setFireboltDependencies (prop, deps) {\n        Object.assign(this._fireboltDeps, {\n            [prop]: deps\n        });\n        return this;\n    }\n\n    /**\n     *\n     *\n     * @param {*} componentRegistry\n     * @param {*} config\n     * @memberof MatrixResolver\n     */\n    createUnits (componentRegistry, config) {\n        const {\n            globalConfig,\n            alias,\n            coord\n        } = config;\n        const {\n            layerRegistry,\n            sideEffectRegistry\n        } = componentRegistry;\n        const {\n            smartlabel: smartLabel,\n            lifeCycleManager,\n            throwback\n        } = this.dependencies();\n        const fireboltDeps = this._fireboltDeps;\n\n        // Provide the source for the matrix\n        const units = [[]];\n        // Setting unit configuration\n        const unitConfig = extractUnitConfig(globalConfig || {});\n        const store = this.store();\n        store.lockModel();\n\n        this.forEach(VALUE_MATRIX, (i, j, el) => {\n            let unit = el.source();\n            if (!unit) {\n                const namespace = `unit${i}-${j}-${getUniqueId()}`;\n\n                unit = VisualUnit.create({\n                    layerRegistry,\n                    sideEffectRegistry\n                }, {\n                    smartLabel,\n                    lifeCycleManager,\n                    throwback,\n                    fireboltDeps\n                });\n                unit.metaInf({\n                    rowIndex: i,\n                    colIndex: j,\n                    namespace\n                });\n                unit.store(store);\n                unit.coord(coord);\n                el.source(unit);\n            }\n            !units[i] && (units[i] = []);\n            units[i][j] = unit;\n            unit.parentAlias(alias)\n                .valueParser(this.valueParser())\n                .coord(coord);\n            el.config(unitConfig);\n        });\n        store.unlockModel();\n        lifeCycleManager.notify({ client: units, action: INITIALIZED, formalName: UNIT });\n        return this.units(units);\n    }\n\n    /**\n     *\n     *\n     * @param {*} config\n     * @memberof MatrixResolver\n     */\n    setDomains (config, datamodel, encoders) {\n        const {\n            color,\n            shape,\n            size,\n            globalConfig\n        } = config;\n        const groupBy = globalConfig.autoGroupBy;\n        const {\n            rowFacets,\n            colFacets\n        } = this.getAllFields();\n        const encoding = {\n            color,\n            shape,\n            size\n        };\n        const facetFields = [...rowFacets.map(e => e.toString()), ...colFacets.map(e => e.toString())];\n        const retContext = {\n            domains: encoders.simpleEncoder.getRetinalFieldsDomain(datamodel, encoding, facetFields, groupBy),\n            axes: this.axes(),\n            encoding\n        };\n        encoders.retinalEncoder.setCommonDomain(retContext);\n        return this;\n    }\n\n    resetFacetsAndProjections () {\n        this._facets = {};\n        this._projections = {};\n        return this;\n    }\n\n    /**\n     *\n     *\n     *\n     * @memberof MatrixResolver\n     */\n    getRetinalAxes () {\n        const {\n            color,\n            shape,\n            size\n        } = this.axes();\n\n        return {\n            color: [...color],\n            shape: [...shape],\n            size: [...size]\n        };\n    }\n\n    /**\n     *\n     *\n     * @param {*} type\n     *\n     * @memberof MatrixResolver\n     */\n    getSimpleAxes (type) {\n        return this.axes()[`${type}`];\n    }\n\n    /**\n     *\n     *\n     * @param {*} datamodel\n     * @param {*} config\n     * @memberof MatrixResolver\n     */\n    createRetinalAxes (fieldsConfig, config, encoders) {\n        const layerConfig = this.layerConfig();\n        this.optionalProjections(config, layerConfig);\n        const retinalAxes = encoders.retinalEncoder.createAxis({\n            fieldsConfig,\n            config,\n            axes: this.axes()\n        });\n        const {\n            lifeCycleManager\n        } = this.dependencies();\n\n        [COLOR, SHAPE, SIZE].forEach((e) => {\n            this.axes()[e] = retinalAxes[e];\n        });\n\n        lifeCycleManager.notify({ client: this.axes(), action: INITIALIZED, formalName: AXIS });\n        lifeCycleManager.notify({ client: this.units(), action: BEFORE_UPDATE, formalName: UNIT });\n\n        const units = [];\n        const matrixLayers = this.matrixLayers();\n        const props = [`${STATE_NAMESPACES.LAYER_GLOBAL_NAMESPACE}.domain`,\n            `${STATE_NAMESPACES.UNIT_GLOBAL_NAMESPACE}.domain`];\n        const store = this.store();\n        store.lockCommits(props);\n        store.lockModel();\n        this.forEach(VALUE_MATRIX, (i, j, el) => {\n            el.axes(Object.assign(el.axes(), retinalAxes));\n            el.source() && el.source().retinalFields(config);\n            el.layerDef(matrixLayers[i][j]);\n            el.updateModel();\n\n            units.push(el.source());\n        });\n        store.unlockModel()\n            .unlockCommits([props[0]])\n            .unlockCommits([props[1]]);\n        lifeCycleManager.notify({ client: units, action: UPDATED, formalName: UNIT });\n        return this;\n    }\n\n    /**\n     *\n     *\n     * @param {*} placeholders\n     * @param {*} fieldNames\n     *\n     * @memberof MatrixResolver\n     */\n    createHeaders (placeholders, fieldNames, config) {\n        let bottomLeft = [];\n        let bottomRight = [];\n        const {\n            rows,\n            columns\n        } = placeholders;\n        const {\n            smartlabel: labelManager,\n            lifeCycleManager\n        } = this.dependencies();\n        const {\n            showHeaders,\n            classPrefix\n        } = config;\n        const TextCell = this.getCellDef(this.registry().TextCell);\n        const BlankCell = this.getCellDef(this.registry().BlankCell);\n        const [leftRows, rightRows] = rows;\n        const [topCols, bottomCols] = columns;\n        const rowHeaders = fieldNames.rows;\n        const blankCellCreator = cell => new BlankCell().config({ show: cell.config().show });\n\n        // Headers and footers are created based on the rows. Thereafter, using the column information\n        // they are tabularized into the current structure\n        const headers = {\n            left: headerCreator(leftRows, rowHeaders[0], showHeaders ? TextCell : BlankCell,\n                { classPrefix, labelManager }),\n            right: headerCreator(rightRows, rowHeaders[1], showHeaders ? TextCell : BlankCell,\n                { classPrefix, labelManager })\n        };\n        const footers = {\n            left: leftRows.length > 0 ? leftRows[0].map(blankCellCreator) : [],\n            right: rightRows.length > 0 ? rightRows[0].map(blankCellCreator) : []\n        };\n        const [topLeft, topRight] = [LEFT, RIGHT].map(type => topCols.map((col, i) => {\n            if (i === topCols.length - 1) {\n                return headers[type];\n            }\n            return footers[type];\n        }));\n\n        // Creating only bottom matrices if there is no information on the top\n        if (topCols.length === 0) {\n            [bottomLeft, bottomRight] = [LEFT, RIGHT].map(type => bottomCols.map((col, i) => {\n                if (i === 0) {\n                    return headers[type];\n                }\n                return footers[type];\n            }));\n        } else {\n            bottomLeft = bottomCols.map(() => (leftRows.length > 0 ? leftRows[0].map(blankCellCreator) : []));\n            bottomRight = bottomCols.map(() => (rightRows.length > 0 ? rightRows[0].map(blankCellCreator) : []));\n        }\n\n        lifeCycleManager.notify({\n            client: [topLeft, topRight, bottomLeft, bottomRight],\n            action: INITIALIZED,\n            formalName: FACET_HEADERS\n        });\n\n        return { topLeft, topRight, bottomLeft, bottomRight };\n    }\n\n    /**\n     *\n     *\n     * @param {*} datamodel\n     * @param {*} config\n     * @param {*} componentRegistry\n     * @param {*} encoders\n     *\n     * @memberof MatrixResolver\n     */\n    getMatrices (datamodel, config, componentRegistry, encoders) {\n        const context = {\n            datamodel,\n            componentRegistry,\n            encoders,\n            resolver: this\n        };\n\n        return computeMatrices(context, config);\n    }\n\n    store (...params) {\n        if (params.length) {\n            this._store = params[0];\n            return this;\n        }\n        return this._store;\n    }\n\n    clear () {\n        const cacheMaps = this._cacheMaps;\n        for (const key in cacheMaps) {\n            cacheMaps[key].clear();\n        }\n    }\n\n}\n","/**\n * This is a wrapper class over the matrix of cells which gets created in visual group. Visual Group creates left,\n * right, bottom and top and center matrices and wraps them using this class.\n *\n * @public\n * @class ValueMatrix\n */\nclass ValueMatrix {\n\n    /**\n     * Creates an instance of ValueMatrix.\n     *\n     * @param {Array} matrixArr Matrix array.\n     */\n    constructor (matrixArr) {\n        const instancesById = {};\n\n        this.matrix(matrixArr || []);\n        this.filter(() => true);\n\n        this.each((el, rIdx, cIdx) => {\n            const cellValue = el.valueOf();\n            if (cellValue && cellValue.id) {\n                const id = cellValue.id();\n                instancesById[id] = {\n                    instance: cellValue,\n                    rowIndex: rIdx,\n                    colIndex: cIdx\n                };\n            }\n        });\n\n        this.instancesById(instancesById);\n    }\n\n    instancesById (...id) {\n        if (id.length) {\n            this._instancesById = id[0];\n            return this;\n        }\n        return this._instancesById;\n    }\n\n    /**\n     * Returns the array of matrices contained in this instance.\n     *\n     * @public\n     * @return {Array} Array of matrices.\n     */\n    matrix (...matrix) {\n        if (matrix.length) {\n            this._matrix = matrix[0];\n            return this;\n        }\n        return this._matrix;\n    }\n\n    /**\n     * Sets a filter criteria. This filter criteria gets applied when each function is called.\n     *\n     * @public\n     * @param {Function} fn Filter function.\n     *\n     * @return {ValueMatrix} Instance of value matrix.\n     */\n    filter (...fn) {\n        if (fn.length) {\n            this._filterFn = fn[0];\n            return this;\n        }\n        return this._filterFn;\n    }\n\n    /**\n     * Returns the total width occupied by all the cells of the matrix.\n     *\n     * @return {Number} Width of the matrix.\n     */\n    width () {\n        let rowWidth = 0;\n\n        this.matrix().forEach((row) => {\n            let currentRowWidth = 0;\n            row.forEach((cell) => {\n                currentRowWidth += cell.getLogicalSpace().width;\n            });\n            rowWidth = Math.max(rowWidth, currentRowWidth);\n        });\n        return rowWidth;\n    }\n\n    /**\n     * Returns the total width occupied by all the cells of the matrix.\n     *\n     * @return {Number} Width of the matrix.\n     */\n    height () {\n        let rowHeight = 0;\n\n        this.matrix().forEach((row) => {\n            let currentRowHeight = 0;\n            row.forEach((cell) => {\n                currentRowHeight = Math.max(currentRowHeight, cell.getLogicalSpace().height);\n            });\n            rowHeight += currentRowHeight;\n        });\n        return rowHeight;\n    }\n\n    /**\n     * Iterates through the two dimensional matrix array and calls the given callback function with the cell instance,\n     * row index, column index and the matrix array.\n     *\n     * @param {Function} fn Callback function which will get called for every cell.\n     * @return {ValueMatrix} Instance of the value matrix.\n     */\n    each (fn) {\n        const matrix = this.matrix();\n        const filterFn = this.filter();\n\n        matrix.forEach((row, rIndex) => {\n            row.forEach((col, cIndex) => {\n                if (filterFn(col)) {\n                    fn(col, rIndex, cIndex, matrix);\n                }\n            });\n        });\n        return this;\n    }\n\n    findPlaceHolderById (id) {\n        return this.instancesById()[id];\n    }\n\n    clear () {\n        this.each(cell => cell.remove());\n        this.matrix([]);\n    }\n}\n\nexport default ValueMatrix;\n","import { VisualUnit } from '@chartshq/visual-unit';\nimport { STATE_NAMESPACES, CommonProps } from 'muze-utils';\nimport { BaseLayer } from '@chartshq/visual-layer';\nimport { getEncoder, getBorders } from '../group-helper';\nimport { RetinalEncoder } from '../encoder';\nimport { registerDomainChangeListener, unsubscribeChangeListeners } from './change-listener';\nimport ValueMatrix from './value-matrix';\n\nexport const createUnitState = (context) => {\n    const [globalState, localState] = VisualUnit.getState();\n    const store = context.store();\n    store.append(STATE_NAMESPACES.UNIT_GLOBAL_NAMESPACE, globalState)\n        .append(STATE_NAMESPACES.UNIT_LOCAL_NAMESPACE, localState);\n};\n\nexport const initializeGlobalState = (context) => {\n    const globalState = context.constructor.getState()[0];\n    const store = context.store();\n    store.append(STATE_NAMESPACES.GROUP_GLOBAL_NAMESPACE, globalState);\n};\n\nexport const createLayerState = (context) => {\n    const [globalState, localState] = BaseLayer.getState();\n    context.store().append(STATE_NAMESPACES.LAYER_GLOBAL_NAMESPACE, globalState)\n        .append(STATE_NAMESPACES.LAYER_LOCAL_NAMESPACE, localState);\n};\n\nconst sanitizeRetinalConfig = (retinalConf) => {\n    const conf = {};\n    for (const key in retinalConf) {\n        const confValue = retinalConf[key];\n        if (typeof confValue === 'string' || !confValue) {\n            conf[key] = {\n                field: retinalConf[key]\n            };\n        } else {\n            conf[key] = confValue;\n        }\n    }\n    return conf;\n};\n\nexport const setMatrixInstances = (context, placeholder) => {\n    let {\n        values,\n        rows,\n        columns\n    } = placeholder;\n    values = values || [];\n    rows = rows || [];\n    columns = columns || [];\n    context._composition.matrices = {\n        value: new ValueMatrix(values),\n        left: new ValueMatrix(rows[0]),\n        right: new ValueMatrix(rows[1]),\n        top: new ValueMatrix(columns[0]),\n        bottom: new ValueMatrix(columns[1])\n    };\n\n    context._dependencies.throwback.commit(CommonProps.MATRIX_CREATED, true);\n    return context;\n};\n\nexport const createMatrices = (context) => {\n    const rows = context.rows();\n    const columns = context.columns();\n    const color = context.color();\n    const datamodel = context.data();\n    const size = context.size();\n    const detail = context.detail();\n    const layers = context.layers();\n    const transform = context.transform();\n    const config = context.config();\n    const shape = context.shape();\n\n    // Get the resolver for the matrices\n    const resolver = context.resolver();\n    resolver.store(context.store());\n    resolver.valueParser(context.valueParser());\n    // Prepare configuration for matrix preparation\n    let matrixConfig = {\n        selection: context.selection(),\n        alias: context.alias(),\n        globalConfig: config || {},\n        rows,\n        columns,\n        detail,\n        layers,\n        transform\n    };\n\n    unsubscribeChangeListeners(context);\n\n    const retinalConfig = sanitizeRetinalConfig({\n        color,\n        shape,\n        size\n    });\n\n    matrixConfig = Object.assign(matrixConfig, retinalConfig);\n    // Create the encoders for the group\n    const encoders = {};\n    encoders.retinalEncoder = new RetinalEncoder();\n    encoders.simpleEncoder = getEncoder(layers);\n    matrixConfig.coord = encoders.simpleEncoder.constructor.type();\n    resolver.encoder(encoders.simpleEncoder);\n\n    // Set the group type\n    context.groupType(encoders.simpleEncoder.constructor.type());\n\n    // Get sanitized fields as instances of the Vars Class\n    const fields = encoders.simpleEncoder.fieldSanitizer(datamodel, matrixConfig);\n    encoders.simpleEncoder.setAxisAndHeaders(config ? config.axisFrom : {}, fields);\n    // Setting layers for the code\n    layers && resolver.layerConfig(layers);\n    // Set the row and column axes\n    resolver.horizontalAxis(fields.rows, encoders).verticalAxis(fields.columns, encoders);\n    // Getting the placeholders\n    const placeholderInfo = resolver.getMatrices(datamodel, matrixConfig, context.registry(), encoders);\n    context._groupedDataModel = placeholderInfo.dataModels.groupedModel;\n    // Set the selection object\n    context.selection(placeholderInfo.selection);\n\n    // Create retinal axes\n    resolver.createRetinalAxes(placeholderInfo.dataModels.parentModel.getFieldsConfig(), retinalConfig,\n            encoders);\n\n    // Domains are evaluated for each of the axes for commonality\n    resolver.setDomains(matrixConfig, placeholderInfo.dataModels, encoders);\n\n    // Create matrix instances\n    setMatrixInstances(context, placeholderInfo);\n\n    // Prepare corner matrices\n    context.cornerMatrices(resolver.createHeaders(placeholderInfo, fields, config));\n\n    // Set placeholder information\n    context.placeholderInfo(placeholderInfo);\n\n    context._composition.axes = resolver.axes();\n    context.metaData({\n        border: getBorders(placeholderInfo, encoders.simpleEncoder)\n    });\n\n    resolver.encoder().unionUnitDomains(context);\n\n    registerDomainChangeListener(context);\n    return context;\n};\n","import { VisualUnit } from '@chartshq/visual-unit';\nimport { BaseLayer } from '@chartshq/visual-layer';\n\nimport { STATE_NAMESPACES } from 'muze-utils';\n\nexport const setupChangeListeners = (context) => {\n    const store = context.store();\n    const stores = {\n        throwback: context._dependencies.throwback,\n        store\n    };\n\n    ['x', 'y'].forEach((axisType) => {\n        store.registerChangeListener([`${STATE_NAMESPACES.GROUP_GLOBAL_NAMESPACE}.domain.${axisType}`], () => {\n            const groupAxes = context.resolver().axes();\n            groupAxes[axisType].forEach(axes => axes.forEach((axis) => {\n                axis.render();\n            }));\n        });\n    });\n\n    [VisualUnit, BaseLayer].forEach((comp) => {\n        const formalName = comp.formalName();\n        ['store', 'throwback'].forEach((type) => {\n            const listeners = comp.getListeners()[type];\n            const storeInst = stores[type];\n            listeners.forEach((listenerInf) => {\n                storeInst[listenerInf.type](listenerInf.props, listenerInf.listener, false, {\n                    namespace: formalName,\n                    subNamespace: listenerInf.subNamespace\n                });\n            });\n        });\n    });\n};\n\nexport const registerDomainChangeListener = (context) => {\n    const store = context.store();\n    store.registerChangeListener([`${STATE_NAMESPACES.UNIT_GLOBAL_NAMESPACE}.domain`], () => {\n        context.resolver().encoder().unionUnitDomains(context);\n    }, false, {\n        key: 'unionDomain'\n    });\n};\n\nexport const unsubscribeChangeListeners = (context) => {\n    context.store().unsubscribe({\n        key: 'unionDomain'\n    });\n};\n","import { ROWS, COLUMNS, COLOR, SHAPE, SIZE, DETAIL, LAYERS, TRANSFORM, CONFIG } from '../enums/constants';\n\nexport const PROPS = {\n    alias: {},\n    data: {},\n    cornerMatrices: {\n        defaultValue: {\n            topLeft: [],\n            topRight: [],\n            bottomLeft: [],\n            bottomRight: []\n        }\n    },\n    groupType: {},\n\n    metaData: {\n        defaultValue: {\n            border: {}\n        }\n    },\n    placeholderInfo: {\n        defaultValue: {}\n    },\n    resolver: {},\n    valueParser: {\n        defaultValue: val => val\n    },\n    registry: {\n        sanitization: (context, value) => {\n            if (context.resolver) {\n                context.resolver().registry(value.cellRegistry);\n            }\n            return value;\n        }\n    },\n    selection: {},\n    [CONFIG]: {},\n    [ROWS]: {},\n    [COLUMNS]: {},\n    [COLOR]: {},\n    [SHAPE]: {},\n    [SIZE]: {},\n    [DETAIL]: {},\n    [LAYERS]: {},\n    [TRANSFORM]: {}\n};\n","import { generateGetterSetters } from 'muze-utils';\nimport localOptions from './local-options';\nimport { SimpleGroup } from '../simple-group';\nimport {\n    MatrixResolver,\n    findInGroup\n} from '../group-helper';\nimport { createUnitState, initializeGlobalState, setMatrixInstances, createMatrices, createLayerState } from './helper';\nimport { setupChangeListeners } from './change-listener';\nimport { PROPS } from './props';\nimport {\n    CONFIG,\n    MOUNT,\n    RETINAL,\n    Y\n} from '../enums/constants';\n\n/**\n * VisualGroup is instantiated by canvas for creating {@link VisualUnit} and axes instances.It creates the\n * the matrix of visual units and axes. It also creates the layout instance which manages the allocation\n * of space of matrices.\n *\n * To get instance of visual group,\n * ```\n *      const visualGroup = canvas.composition().visualGroup;\n * ```\n * @public\n *\n * @class VisualGroup\n */\nclass VisualGroup extends SimpleGroup {\n\n    /**\n     * Creates an instance of VisualGroup. Requires dependencies and other registry options for placeholders\n     * and layers that create individual units.\n     *\n     * @param {Object} registry Key value pair of compostions for the group\n     * @param {Object} dependencies Dependencies needed to run the group\n     * @memberof VisualGroup\n     */\n    constructor (registry, dependencies) {\n        super();\n\n        const {\n            componentSubRegistry\n        } = registry;\n\n        this._dependencies = dependencies;\n        // Generate getter/setter methods for all properties of the class\n        // One can get each property by calling the method and can set it\n        // by passing paramaters for the same. Thus, one can chain setter\n        // getter methods.\n        generateGetterSetters(this, PROPS);\n        generateGetterSetters(this, localOptions);\n        // Populate the store with default values\n        // initialize group compositions\n        this._composition = {};\n        // store reference to data\n        this._data = [];\n        // store reference to mountpoint\n        this._mount = null;\n        // selection object that takes care of updating of components\n        this._selection = {};\n        // Create instance of matrix resolver\n        this.resolver(new MatrixResolver(this._dependencies));\n        // matrix instance store each of the matrices\n        setMatrixInstances(this, {});\n         // Getting indiviual registered items\n        this.registry({\n            layerRegistry: componentSubRegistry.layerRegistry.get(),\n            cellRegistry: componentSubRegistry.cellRegistry.get()\n        });\n    }\n\n    static getState () {\n        return [{\n            domain: {\n                x: null,\n                y: null,\n                radius: null,\n                angle: null,\n                angle0: null\n            }\n        }, {}];\n    }\n\n    store (...params) {\n        if (params.length) {\n            this._store = params[0];\n            initializeGlobalState(this);\n            createUnitState(this);\n            createLayerState(this);\n            // Register listeners\n            setupChangeListeners(this);\n            return this;\n        }\n        return this._store;\n    }\n\n    /**\n     * Return the instances of matrices created by the visual group.\n     *\n     * @return {Object} Instance of matrices.\n     */\n    matrixInstance (...matrices) {\n        if (matrices.length) {\n            return this;\n        }\n        return this.composition().matrices;\n    }\n\n    /**\n     * Returns the composition of visual group.\n     *\n     * @public\n     *\n     * @return {Object} Composition of visual group. It contains instance of matrices {@link ValueMatrix}\n     * and instances of axis.\n     * ```\n     *          {\n     *              matrices: {\n     *                  value: // Instance of center value matrix.\n     *                  left: // Instance of left value matrix\n     *                  right: // Instance of right value matrix\n     *                  bottom: // Instance of bottom value matrix\n     *                  top: // Instance of top value matrix.\n     *              },\n     *              axes: {\n     *                  x: // Array of x axis.\n     *                  y: // Array of y axis\n     *                  color: // Array of color axis\n     *                  shape: // Array of shape axis\n     *                  size: // Array of size axis.\n     *              }\n     *          }\n     * ```\n     */\n    composition (...params) {\n        if (params.length) {\n            return this;\n        }\n        return this._composition;\n    }\n\n    /**\n     * Locks the model to prevent change listeners to be triggered until unlocked\n     *\n     * @return {Object} Instance of class VisualGroup\n     * @memberof VisualGroup\n     */\n    lockModel () {\n        this.store().model.lock();\n        return this;\n    }\n\n    /**\n     * Unlocks the model so that all change listeners can be triggered\n     *\n     * @return {Object} Instance of class VisualGroup\n     */\n    unlockModel () {\n        this.store().model.unlock();\n        return this;\n    }\n\n    /**\n     * Returns the channel name of the variable. Channels are rows, columns, color, shape and size.\n     *\n     * @public\n     * @param {string} variable Name of the variable.\n     *\n     * @return {string} Name of the channel.\n     */\n    where (variable) {\n        return findInGroup(variable, this.resolver().getAllFields());\n    }\n\n    /**\n     * Gets the axis instances of the visual group based on the given axis type.\n     *\n     * @public\n     * @param {string} type Type of axis. X,Y or retinal axes.\n     *\n     * @return {Array} Array of axis instances.\n     */\n    getAxes (type) {\n        if (type === RETINAL) {\n            return this.resolver().getRetinalAxes();\n        }\n        return this.resolver().getSimpleAxes(type);\n    }\n\n    /**\n     * Returns the instances of cells based on the given type. Type can be given as `row' or `col`.\n     *\n     * @public\n     * @return {Array} Two dimensional array of cells.\n     */\n    getCells (type) {\n        return this.resolver()[`${type}Cells`]();\n    }\n\n    getFieldsFromChannel (channel) {\n        const {\n            rowProjections,\n            colProjections\n        } = this.resolver().getAllFields();\n        return channel === Y ? rowProjections : colProjections;\n    }\n\n    getCellsByFacetKey (facetKey) {\n        const resolver = this.resolver();\n        const cells = resolver.rowCells()[facetKey] || resolver.colCells()[facetKey] || [];\n        return cells;\n    }\n\n    getAxesByFacetKey (axisType, facetKey) {\n        const resolver = this.resolver();\n        const cells = resolver.rowCells()[facetKey] || resolver.colCells()[facetKey];\n        const axes = cells[0].valueOf().axes()[axisType] || [];\n\n        return axes;\n    }\n\n    /**\n     * This method is used to return a serialized representation of the instance's properties.\n     *\n     * @return {Object} Object with config proprties.\n     * @memberof VisualGroup\n     */\n    serialize () {\n        const store = this.store();\n\n        return {\n            [CONFIG]: store.get(CONFIG),\n            [MOUNT]: store.get(MOUNT)\n        };\n    }\n\n    /**\n     * Returns the grouped datamodel prepared by visual group. If there is no group by performed, then it returns the\n     * original data model passed to visual group.\n     *\n     * @return {DataModel} Grouped data model.\n     */\n    getGroupByData () {\n        return this._groupedDataModel;\n    }\n\n    createMatrices () {\n        createMatrices(this);\n    }\n\n    remove () {\n        this.matrixInstance().value.clear();\n        this.resolver().clear();\n        const info = this.placeholderInfo();\n        info.rows = null;\n        info.columns = null;\n        info.values = null;\n    }\n}\n\nexport default VisualGroup;\n","import { PersistentBehaviour, SELECTION } from '@chartshq/muze-firebolt';\n\nexport default class SelectBehaviour extends PersistentBehaviour {\n    static formalName () {\n        return 'select';\n    }\n\n    setSelectionSet (addSet, selectionSet) {\n        if (addSet === null) {\n            selectionSet.reset();\n        } else if (addSet.length) {\n            // new add set\n            const existingRemoveSet = addSet.filter(d => selectionSet._set[d] === SELECTION.SELECTION_OLD_EXIT\n                || selectionSet._set[d] === SELECTION.SELECTION_NEW_EXIT);\n                // existing add set\n            if (existingRemoveSet.length) {\n                selectionSet.updateEntry();\n                selectionSet.add(existingRemoveSet);\n            } else {\n                selectionSet.updateExit();\n                selectionSet.remove(addSet);\n            }\n            const { exitSet } = selectionSet.getSets();\n            const mergedExitSet = [...new Set(exitSet[1]), ...new Set(exitSet[0])];\n            const completeSetCount = selectionSet.getCompleteSet().length;\n            if (exitSet[1].length !== completeSetCount && mergedExitSet.length === completeSetCount) {\n                selectionSet.reset();\n            }\n        } else {\n            selectionSet.remove(selectionSet.getCompleteSet());\n        }\n        return this;\n    }\n}\n","import { BEHAVIOURS, ACTIONS } from '@chartshq/muze-firebolt';\n\nconst CLASSPREFIX = 'muze';\n\nexport const actionBehaviourMap = {\n    [ACTIONS.DRAG]: {\n        target: `.${CLASSPREFIX}-gradient-rect`,\n        behaviours: [BEHAVIOURS.BRUSH]\n    },\n    [ACTIONS.HOVER]: {\n        target: [`.${CLASSPREFIX}-legend-columns`],\n        behaviours: [BEHAVIOURS.HIGHLIGHT]\n    },\n    [ACTIONS.CLICK]: {\n        target: [`.${CLASSPREFIX}-legend-columns`],\n        behaviours: [BEHAVIOURS.SELECT]\n    }\n};\n\nexport const propagationBehaviourMap = {\n    [BEHAVIOURS.SELECT]: BEHAVIOURS.FILTER,\n    [BEHAVIOURS.BRUSH]: BEHAVIOURS.HIGHLIGHT\n};\n","import * as BEHAVIOURS from '../enums/behaviours';\nimport * as sideEffects from '../enums/side-effects';\n\nexport const behaviourEffectMap = {\n    [BEHAVIOURS.BRUSH]: [sideEffects.SELECTIONBOX, {\n        name: sideEffects.Highlighter,\n        options: {\n            strategy: 'fade'\n        }\n    }],\n    [BEHAVIOURS.HIGHLIGHT]: [sideEffects.Highlighter],\n    select: [{\n        name: sideEffects.Highlighter,\n        options: {\n            strategy: 'fade'\n        }\n    }]\n};\n\nexport const propagationSideEffects = {\n    [BEHAVIOURS.BRUSH]: [{\n        name: sideEffects.Highlighter,\n        options: {\n            strategy: 'fade'\n        }\n    }],\n    [BEHAVIOURS.HIGHLIGHT]: [{\n        name: sideEffects.Highlighter,\n        options: {\n            strategy: 'fade'\n        }\n    }],\n    [BEHAVIOURS.SELECT]: ['filter']\n};\n\n","export const BRUSH = 'brush';\nexport const HIGHLIGHT = 'highlight';\nexport const TOOLTIP = 'tooltip';\nexport const FILTER = 'filter';\nexport const SELECT = 'select';\n\n","export const SELECTIONBOX = 'selectionBox';\nexport const Highlighter = 'highlighter';\n\n","export const CLASSPREFIX = 'muze';\nexport const IDFIELD = '__id__';\nexport const CONFIG = 'config';\nexport const DATAMODEL = 'dataModel';\nexport const AXES = 'axes';\nexport const LAYERDEFS = 'layerDef';\nexport const WIDTH = 'width';\nexport const MAXWIDTH = 'max-width';\nexport const HEIGHT = 'height';\nexport const MOUNTPOINT = 'mountPoint';\nexport const GRIDLINEPARENTGROUPCLASS = 'grid-lines';\nexport const TRANSFORM = 'transform';\nexport const CONSOLIDATED = 'consolidated';\nexport const FRAGMENTED = 'fragmented';\nexport const DEFAULTCOLOR = '#F44336';\nexport const DEFAULTSIZE = 50;\nexport const DEFAULTSHAPE = 'circle';\nexport const STEP = 'step';\nexport const GRADIENT = 'gradient';\nexport const ORDINAL = 'ordinal';\nexport const SCALE_FUNCTIONS = {\n    size: 'getSize',\n    shape: 'getShape',\n    color: 'getColor'\n};\nexport const TOP = 'top';\nexport const LEFT = 'left';\nexport const RIGHT = 'right';\nexport const BOTTOM = 'bottom';\nexport const HORIZONTAL = 'horizontal';\nexport const VERTICAL = 'vertical';\nexport const CENTER = 'center';\nexport const VALUE = 'value';\nexport const PATH = 'path';\nexport const SHAPE = 'shape';\nexport const ICON = 'icon';\nexport const RECT = 'rect';\nexport const START = 'start';\nexport const UPPER = 'upper';\nexport const LOWER = 'lower';\nexport const END = 'end';\nexport const SIZE = 'size';\nexport const DISCRETE = 'discrete';\nexport const MEASURE = 'measure';\n\n","import { assembleModelFromIdentifiers, getDataModelFromRange } from 'muze-utils';\nimport { propagationBehaviourMap } from './action-behaviour-map';\nimport { propagationSideEffects } from './behaviour-effect-map';\nimport { STEP, GRADIENT, DISCRETE, MEASURE } from '../enums/constants';\n\nexport const propagate = (firebolt, action, selectionSet, config = {}) => {\n    let propagationData;\n    const context = firebolt.context;\n    const type = context.constructor.type();\n    const payload = config.payload;\n    const data = context.data();\n    const metaData = context.metaData();\n    const fieldType = metaData.getData().schema[0].type;\n\n    const propPayload = {};\n    const sourceId = context._id;\n    propPayload.action = propagationBehaviourMap[action] || action;\n    propPayload.sideEffects = propagationSideEffects[action];\n    propPayload.sourceCanvas = context.canvasAlias();\n    const isMutableAction = firebolt._actions.behavioural[propPayload.action].constructor.mutates();\n    if (payload.criteria === null) {\n        propagationData = null;\n    } else {\n        const entrySet = selectionSet.mergedEnter;\n        let values = data.filter(d => entrySet.uids.indexOf(d.id) !== -1).map(d => d.rawVal);\n        if (type === STEP || (type === DISCRETE && fieldType === MEASURE)) {\n            const field = Object.keys(payload.criteria || {})[0];\n            values = data.filter(d => entrySet.uids.indexOf(d.id) !== -1).map(d => d.range);\n            propagationData = values.length ? metaData.select((fields) => {\n                let check = false;\n                for (let i = 0; i < values.length; i++) {\n                    check = fields[field].internalValue >= values[i][0] && fields[field].internalValue <= values[i][1];\n                    if (check === true) {\n                        break;\n                    }\n                }\n                return check;\n            }, {\n                saveChild: false\n            }) : null;\n        } else if (type === GRADIENT) {\n            propagationData = getDataModelFromRange(metaData, payload.criteria);\n        } else if (values.length) {\n            propagationData = assembleModelFromIdentifiers(metaData, [payload.criteria[0], ...values.map(d => [d])]);\n        } else {\n            propPayload.criteria = null;\n            propagationData = metaData.select(() => true, {\n                saveChild: false\n            });\n        }\n    }\n\n    let propagateInterpolatedValues = false;\n\n    if (propagationData) {\n        const schema = propagationData.getSchema();\n        propagateInterpolatedValues = schema.every(d => d.type === MEASURE);\n    }\n\n    const propConfig = {\n        sourceId: `legend-${sourceId}`,\n        payload: propPayload,\n        criteria: propPayload.criteria === null ? null : propagationData,\n        isMutableAction,\n        propagateInterpolatedValues,\n        action: propPayload.action\n    };\n\n    metaData.propagate(propagationData, propConfig, true);\n};\n","import { Firebolt } from '@chartshq/muze-firebolt';\nimport { propagate } from './helper';\nimport { STEP, GRADIENT } from '../enums/constants';\n\n/**\n * This class manages the interactions of legend.\n * @export\n * @class LegendFireBolt\n * @extends {Firebolt}\n */\nexport class LegendFireBolt extends Firebolt {\n    constructor (...params) {\n        super(...params);\n        this.initializeSideEffects();\n    }\n\n    getPropagationSelectionSet (selectionSet) {\n        return selectionSet[0];\n    }\n\n    propagate (behaviourName, payload, selectionSet) {\n        propagate(this, behaviourName, selectionSet, {\n            payload\n        });\n    }\n\n    getAddSetFromCriteria (criteria) {\n        let values;\n        let uniqueIds;\n        const type = this.context.constructor.type();\n\n        if (criteria === null) {\n            uniqueIds = null;\n        } else if (type === STEP) {\n            values = Object.values(criteria);\n            uniqueIds = this.context.data().filter(d => values.indexOf(d.range) !== -1).map(d => d.id);\n        } else if (type === GRADIENT) {\n            uniqueIds = [];\n        } else {\n            values = criteria[1];\n            if (values) {\n                uniqueIds = this.context.data().filter(d => values.indexOf(d.rawVal) !== -1).map(d => d.id);\n            } else {\n                values = Object.values(criteria);\n                uniqueIds = this.context.data().filter(d => values.indexOf(d.range) !== -1).map(d => d.id);\n            }\n        }\n        return {\n            uids: uniqueIds,\n            model: null\n        };\n    }\n\n    getFullData () {\n        return null;\n    }\n}\n","import {\n    getEvent,\n    getD3Drag\n } from 'muze-utils';\n\n/**\n * Adds dragging action to the target element.\n * @param {firebolt} firebolt firebolt\n * @param {SVGElement} targetEl Element on which brushing action is needed.\n * @param {Array} behaviours Array of behaviours\n */\n/* istanbul ignore next */ const drag = firebolt => (targetEl, behaviours) => {\n    let startPos = {};\n    let endPos = {};\n    let payload;\n    const d3Drag = getD3Drag();\n    const context = firebolt.context;\n    const boundingBox = context.measurement().gradientDimensions;\n    const axisType = context.config().align === 'horizontal' ? 'x' : 'y';\n    const axisScale = context.axis().source().scale();\n    const rangeShifter = axisScale.range()[axisType === 'x' ? 0 : 1];\n\n    targetEl.call(d3Drag().on('start', () => {\n        const event = getEvent();\n        startPos = {\n            x: event.x,\n            y: event.y\n        };\n    }).on('drag', () => {\n        const event = getEvent();\n\n        endPos = {\n            x: event.x,\n            y: event.y\n        };\n        endPos.x = Math.max(0, Math.min(endPos.x, boundingBox.width));\n        endPos.y = Math.max(0, Math.min(endPos.y, boundingBox.height));\n\n        payload = {\n            criteria: {\n                [context.fieldName()]: [axisScale.invert(startPos[axisType] + rangeShifter * 2),\n                    axisScale.invert(endPos[axisType] + rangeShifter * 2)].sort((a, b) => a - b)\n            }\n        };\n        behaviours.forEach(behaviour => firebolt.dispatchBehaviour(behaviour, payload));\n    }).on('end', () => {\n        const event = getEvent();\n\n        endPos = {\n            x: event.x,\n            y: event.y\n        };\n        endPos.x = Math.max(0, Math.min(endPos.x, boundingBox.width));\n        endPos.y = Math.max(0, Math.min(endPos.y, boundingBox.height));\n        if (startPos[axisType] === endPos[axisType]) {\n            payload = {\n                criteria: {}\n            };\n        } else {\n            payload = {\n                criteria: {\n                    [context.fieldName()]: [axisScale.invert(startPos[axisType] + rangeShifter * 2),\n                        axisScale.invert(endPos[axisType] + rangeShifter * 2)].sort((a, b) => a - b)\n                }\n            };\n        }\n        behaviours.forEach(behaviour => firebolt.dispatchBehaviour(behaviour, payload));\n    }));\n};\n\nexport default drag;\n","import { getEvent } from 'muze-utils';\n\n/**\n * Adds mouse interactions to target element.\n * @param {Firebolt} Firebolt instance of firebolt.\n * @param {SVGElement} targetEl Element on which the event listeners will be attached.\n * @param {Array} behaviours Array of behaviours\n */\n/* istanbul ignore next */ const hover = firebolt => (targetEl, behaviours) => {\n    const dispatchBehaviour = function (args) {\n        const event = getEvent();\n        const payload = {\n            criteria: firebolt.context.getCriteriaFromData(args)\n        };\n        behaviours.forEach(behaviour => firebolt.dispatchBehaviour(behaviour, payload));\n        event.stopPropagation();\n    };\n\n    targetEl.on('mouseover', dispatchBehaviour)\n                    .on('mousemove', dispatchBehaviour)\n                    .on('mouseout', () => {\n                        const event = getEvent();\n                        behaviours.forEach(behaviour => firebolt.dispatchBehaviour(behaviour, {\n                            criteria: null\n                        }));\n                        event.stopPropagation();\n                    });\n};\n\nexport default hover;\n","/**\n * Adds mouse interactions to target element.\n * @param {VisualUnit} instance instance of visual unit.\n * @param {SVGElement} targetEl Element on which the event listeners will be attached.\n * @param {Array} behaviours Array of behaviours\n */\nconst click = firebolt => (targetEl, behaviours) => {\n    const dispatchBehaviour = function (args) {\n        const payload = {\n            criteria: firebolt.context.getCriteriaFromData(args)\n        };\n        behaviours.forEach(behaviour => firebolt.dispatchBehaviour(behaviour, payload));\n    };\n\n    targetEl.on('click', dispatchBehaviour);\n};\n\nexport default click;\n","import drag from './drag';\nimport hover from './hover';\nimport click from './click';\nimport * as ACTIONNAMES from '../../enums/actions';\n\nexport const physicalActions = {\n    [ACTIONNAMES.DRAG]: drag,\n    [ACTIONNAMES.HOVER]: hover,\n    [ACTIONNAMES.CLICK]: click\n};\n\n","export const DRAG = 'drag';\nexport const HOVER = 'hover';\nexport const SELECTIONDRAG = 'selectiondrag';\nexport const CLICK = 'click';\n","import {\n    getMousePos,\n    getEvent,\n    getD3Drag\n } from 'muze-utils';\nimport { HEIGHT, WIDTH, HORIZONTAL } from '../../enums/constants';\n\nconst getSelectionCriteria = (subject, axis, measures) => {\n    let criteria = [];\n    const {\n        axisScale,\n        axisType\n    } = axis;\n    const {\n        startPos,\n        endPos,\n        selectionBoxMeasure,\n        drawingInfMeasure,\n        offset\n    } = measures;\n    const subjectStartPoint = subject[axisType];\n\n    if (startPos[axisType] === endPos[axisType]) {\n        criteria = [];\n    } else if (subjectStartPoint + selectionBoxMeasure >= drawingInfMeasure + offset) {\n        criteria = [axisScale.invert(drawingInfMeasure + offset - selectionBoxMeasure),\n            axisScale.invert(drawingInfMeasure + offset)];\n    } else if (subjectStartPoint - offset < offset) {\n        criteria = [axisScale.invert(offset * 2), axisScale.invert(selectionBoxMeasure + offset * 2)];\n    } else {\n        criteria = [axisScale.invert(subjectStartPoint), axisScale.invert(subjectStartPoint + selectionBoxMeasure)];\n    }\n    axisType === 'x' ? criteria : criteria.reverse();\n    return criteria;\n};\n\nexport const selectionBoxDrag = firebolt => (targetEl, behaviours) => {\n    let startPos = {};\n    let payload;\n    const endPos = {};\n    const d3Drag = getD3Drag();\n    const context = firebolt.context;\n    const axisScale = context.axis().source().scale();\n    const axisType = context.config().align === HORIZONTAL ? 'x' : 'y';\n    const drawingInfMeasure = context.measurement().gradientDimensions[axisType === 'x' ?\n        WIDTH : HEIGHT];\n    const offset = axisScale.range()[axisType === 'x' ? 0 : 1];\n    const measures = {\n        drawingInfMeasure,\n        offset\n    };\n    let subject = {};\n\n    targetEl.call(d3Drag().on('start', function () {\n        const event = getEvent();\n        startPos = getMousePos(this, event.sourceEvent);\n        subject = event.subject;\n    }).on('drag', () => {\n        const event = getEvent();\n        const selectionBoxMeasure = subject[axisType === 'x' ? WIDTH : HEIGHT];\n\n        subject.x += event.dx;\n        subject.y += event.dy;\n\n        measures.selectionBoxMeasure = selectionBoxMeasure;\n        measures.startPos = startPos;\n        measures.endPos = endPos;\n        const criteria = getSelectionCriteria(subject, { axisScale, axisType }, measures);\n\n        payload = {\n            criteria: {\n                [context.fieldName()]: criteria\n            },\n            fadeOut: true\n        };\n        firebolt.dispatchBehaviour(behaviours[0], payload);\n    }).on('end', () => {\n        const event = getEvent();\n        const selectionBoxMeasure = subject[axisType === 'x' ? WIDTH : HEIGHT];\n        measures.selectionBoxMeasure = selectionBoxMeasure;\n        measures.startPos = startPos;\n        measures.endPos = endPos;\n        const criteria = getSelectionCriteria(event, { axisScale, axisType }, measures);\n        payload = {\n            criteria: {\n                [context.fieldName()]: criteria\n            },\n            fadeOut: true,\n            config: {\n                transition: {\n                    duration: 200\n                }\n            }\n        };\n        firebolt.dispatchBehaviour(behaviours[0], payload);\n    }));\n};\n\n","import { makeElement } from 'muze-utils';\nimport { SpawnableSideEffect } from '@chartshq/muze-firebolt';\nimport { CLASSPREFIX, HEIGHT, WIDTH, HORIZONTAL, RECT } from '../../../enums/constants';\nimport { SELECTIONBOX } from '../../../enums/side-effects';\nimport { selectionBoxDrag } from '../../physical/selection-box-drag';\nimport './styles.scss';\n\n/**\n * This class is used to create a selection box which is used by visual unit for brushing and\n * selection in the canvas.\n * @class SelectionBox\n */\n/* istanbul ignore next */ class SelectionBox extends SpawnableSideEffect {\n    static formalName () {\n        return SELECTIONBOX;\n    }\n\n    /**\n     * It returns the default configuration needed by selectionbox.\n     * @return {Object} Default configuration of the selection box.\n     */\n    static defaultConfig () {\n        return {\n            className: 'legend-selection-box',\n            classPrefix: CLASSPREFIX\n        };\n    }\n\n    /**\n     * Draws the selectionbox with the specified dimensions.\n     */\n    /* istanbul ignore next */ apply (selectionSet, payload) {\n        let x;\n        let y;\n        let width;\n        let height;\n        const firebolt = this.firebolt;\n        const context = firebolt.context;\n        const config = this.config();\n        const axis = context.axis().source();\n        const className = `${config.classPrefix}-${config.className}`;\n\n        const domain = payload.criteria[firebolt.context.fieldName()];\n        const axisScale = axis.scale();\n        const range = domain ? [axis.getScaleValue(domain[0]), axis.getScaleValue(domain[1])] : [];\n\n        const axisType = context.config().align === HORIZONTAL ? 'x' : 'y';\n\n        const gradientDimension = firebolt.context.measurement().gradientDimensions[axisType === 'x' ?\n            HEIGHT : WIDTH];\n\n        const rangeShifter = axisScale.range()[axisType === 'x' ? 0 : 1];\n        const legendGradContainer = context.getDrawingContext().svgContainer;\n        const legendSelGroup = makeElement(legendGradContainer, 'g', [1], `${config.classPrefix}-selection-box-group`);\n\n        if (firebolt.context.config().align === HORIZONTAL) {\n            x = range[0] - rangeShifter || 0;\n            y = 0;\n            width = range[1] - range[0] || 0;\n            height = gradientDimension;\n        } else {\n            x = 0;\n            y = range[1] - rangeShifter || 0;\n            height = range[0] - range[1] || 0;\n            width = gradientDimension;\n        }\n        const enterFn = function (el) {\n            selectionBoxDrag(firebolt)(el, ['brush']);\n        };\n        const selBox = makeElement(legendSelGroup, RECT, [{ domain, x, y, width, height }], className,\n            { enter: enterFn });\n        selBox.attr('y', y)\n                        .attr('x', x)\n                        .attr(WIDTH, width)\n                        .attr(HEIGHT, height);\n    }\n}\n\nexport default SelectionBox;\n\n","import { selectElement } from 'muze-utils';\n\nexport const strategies = (firebolt) => {\n    const context = firebolt.context;\n    const classed = (set, className, change) => {\n        const classPrefix = context.config().classPrefix;\n        selectElement(context.mount())\n                        .selectAll(`.${classPrefix}-legend-columns`)\n                        .filter(d => set.uids.indexOf(d.id) !== -1)\n                        .selectAll('div')\n                        .classed(className, change);\n    };\n\n    return {\n        fade: (set, config = {}) => {\n            const classPrefix = context.config().classPrefix;\n            if (!set.mergedEnter.length && !set.mergedExit.length) {\n                classed(set.completeSet, config.className || `${classPrefix}-legend-fadeout`, false);\n            } else {\n                classed(set.mergedExit, config.className || `${classPrefix}-legend-brighten`, false);\n                classed(set.mergedExit, config.className || `${classPrefix}-legend-fadeout`, true);\n                classed(set.mergedEnter, config.className || `${classPrefix}-legend-fadeout`, false);\n            }\n        },\n        brighten: (set, config = {}) => {\n            const classPrefix = context.config().classPrefix;\n            if (!set.mergedEnter.length && !set.mergedExit.length) {\n                classed(set.completeSet, config.className || `${classPrefix}-legend-brighten`, false);\n            } else {\n                classed(set.mergedEnter, config.className || `${classPrefix}-legend-brighten`, true);\n                classed(set.mergedExit, config.className || `${classPrefix}-legend-brighten`, false);\n            }\n        }\n    };\n};\n","import { GenericSideEffect } from '@chartshq/muze-firebolt';\nimport { strategies } from './strategies';\nimport { Highlighter } from '../../../enums/side-effects';\n\nexport default class LegendHighlighter extends GenericSideEffect {\n    constructor (...params) {\n        super(...params);\n        this._strategies = strategies(this.firebolt);\n        this._strategy = 'brighten';\n    }\n\n    static formalName () {\n        return Highlighter;\n    }\n\n    apply (selectionSet, payload, options = {}) {\n        const strategy = this._strategies[options.strategy || this._strategy];\n\n        strategy(selectionSet, this);\n    }\n}\n","import { mergeRecursive } from 'muze-utils';\n\nexport const PROPS = {\n    config: {\n        sanitization: (context, value) => mergeRecursive(context._config || {}, value)\n    },\n    data: {},\n    fieldName: {},\n    legendContainer: {},\n    measurement: {\n        sanitization: (context, value) => {\n            const measurement = mergeRecursive(context._measurement, value);\n            ['padding', 'border', 'margin'].forEach((space) => {\n                measurement[space] = Math.min(measurement[space] > 0 ? measurement[space] : 0,\n                     measurement.maxWidth * 0.1, measurement.maxHeight * 0.1);\n            });\n            return measurement;\n        }\n    },\n    logicalSpace: {},\n    metaData: {},\n    range: {\n        sanitization: (context, value) => {\n            context.scale().range(value);\n            context.resetLogicalSpace();\n            context.store().commit('range', value);\n            return value;\n        }\n    },\n    scale: {},\n    smartTicks: {},\n    store: {},\n    title: {\n        sanitization: (context, value) => mergeRecursive(context._title || {}, value)\n    },\n    labelManager: {},\n    minTickDistance: {},\n    valueParser: {\n        defaultValue: val => val\n    }\n};\n","import { getSymbol } from 'muze-utils';\nimport {\n    CENTER,\n    LEFT,\n    RIGHT\n} from '../enums/constants';\n\nexport const ALIGN = {\n    HORIZONTAL: 'horizontal',\n    VERTICAL: 'vertical'\n};\n\nexport const DEFAULT_MEASUREMENT = {\n    height: 30,\n    width: 30,\n    maxWidth: Infinity,\n    maxHeight: Infinity,\n    padding: 2,\n    margin: 2,\n    border: 1\n};\n\nexport const LEGEND_TITLE = {\n    text: '',\n    orientation: (pos) => {\n        if (pos === LEFT || pos === RIGHT) {\n            return LEFT;\n        } return CENTER;\n    }\n};\n\nexport const DEFAULT_CONFIG = {\n    classPrefix: 'muze',\n    borderStyle: 'solid',\n    borderColor: 'rgba(0,0,0,0)',\n    formatter: {\n        bounds: {\n            lower: 'less than',\n            upper: 'more than'\n        }\n    },\n    item: {\n        text: {\n            orientation: 'right',\n            width: 10,\n            formatter: (val, i, data, context) => context.valueParser()(val)\n        },\n        icon: {\n            className: 'legend-icon',\n            height: 20,\n            width: 20,\n            color: 'rgba(0,0,0,.5)',\n            type: 'square'\n        }\n    }\n};\n\n/**\n * Creates a map of pre defined icons\n *\n * @param {string} icon Accepts a icon name like 'square', 'cross', 'diamond' etc\n * @return {Object} icon object which can be used to draw the icons\n */\nexport const ICON_MAP = (icon) => {\n    if (icon && typeof (icon) === 'string') {\n        return getSymbol(icon);\n    } return icon;\n};\n","import { makeElement, numberInterpolator } from 'muze-utils';\n\nimport {\n    SCALE_FUNCTIONS,\n    WIDTH,\n    HEIGHT,\n    LEFT,\n    RIGHT,\n    TOP,\n    BOTTOM,\n    MAXWIDTH\n} from '../enums/constants';\n\n/**\n *\n *\n * @param {*} scale\n *\n */\nexport const getScaleInfo = (scale) => {\n    const scaleType = scale.constructor.type();\n    const domain = scale.uniqueValues();\n    const steps = scale.config().stops || 1;\n    const scaleFn = SCALE_FUNCTIONS[scaleType];\n\n    return { scaleType, domain, steps, scaleFn };\n};\n\n/**\n * Function to recompute the stops in array in case to left and right alignment of legend.\n *\n * @param  {string} param - parameter to measure\n * @param  {Object} requiredMeasure - required measure parameters\n * @param  {Object} availableMeasure - available meassure parameters\n * @param  {Array} domainForLegend - array\n * @param  {Object} smartLabelCalc - smartLabel Manager\n * @return {Array} - Array\n */\nconst getcomputedArray = (computationhelper, requiredMeasure, availableMeasure, domainForLegend) => {\n    // declaring Current and Next Tick Value variable\n    let currentTickValue;\n    let nextTickValue;\n    const upperBound = domainForLegend[domainForLegend.length - 1];\n    const param = computationhelper.measureParam;\n    const smartLabelCalc = computationhelper.smartLabelCalc;\n\n    // calculating pixel required per Tick Values\n    const pixelPerTick = (availableMeasure[param] / upperBound);\n\n    // checking if available max width is smaller than required width for legend.\n    if (availableMeasure[param] >= requiredMeasure[param]) {\n        return domainForLegend;\n    }\n\n    currentTickValue = (smartLabelCalc.getOriSize((domainForLegend[0]))[param]);\n    for (let i = 1; i < domainForLegend.length - 1; i++) {\n        nextTickValue = Math.floor((currentTickValue / pixelPerTick) + domainForLegend[i - 1]);\n        if (domainForLegend[i] < nextTickValue) {\n            domainForLegend.splice(i, 1);\n            i -= 1;\n        }\n        currentTickValue = (smartLabelCalc.getOriSize((domainForLegend[i]))[param]);\n    }\n    return domainForLegend;\n};\n\n/**\n * function to recompute the Stops Array provided to prevent the Overlapping of values\n * @param  {Array} domainForLegend - Stops Array\n * @param  {Object} scaleParams - Scale Parameters\n * @return {Array} - modified Stops Array\n */\nexport const getInterpolatedArrayData = (domainForLegend, scaleParams) => {\n    // defining param for height/width selector\n    let measureParam;\n\n    // declaring variable for required Width\n    let requiredWidth;\n\n    // declaring variable for required height\n    let requiredHeight;\n\n    // declaring the variable for upperbound\n    let upperBound = domainForLegend[domainForLegend.length - 1];\n\n    // Initializing Minimum Tick Difference Variable and checking if it's less than 1 or not\n    let minTickDiff = Math.ceil(domainForLegend[1] - domainForLegend[0]);\n\n    // calculating max tick difference\n    const maxTickDiff = Math.ceil(upperBound - domainForLegend[0]);\n\n    // gradient Alignment\n    const { alignment } = scaleParams;\n\n    // getting SmartLabel Manager to calculate tick Params\n    const smartLabelCalc = scaleParams.smartLabel;\n\n    // scale Measurements (i.e MaxWidth and MaxHeight available)\n    const availableSpace = scaleParams.measures;\n\n    // getting minimum Tick size (i.e height and width)\n    const minimumTickSize = scaleParams.minTickDistance;\n\n    // getting domain upperbound dimensions\n    const { height: tickDimHeight, width: tickDimWidth } = smartLabelCalc.getOriSize((upperBound));\n\n    /* Checking if UpperBound of Domain is Floating or Not.\n    In case of floating constricting it to 2 decimals after point. */\n    if (!Number.isInteger(upperBound)) {\n        upperBound = ((upperBound).toFixed(2));\n    }\n\n    // Calculating minimum tick difference\n    minTickDiff = minTickDiff < 1 ? 1 : minTickDiff;\n\n    // required width to render legend\n    requiredWidth = (Math.abs(maxTickDiff) / Math.abs(minTickDiff)) * (tickDimWidth + (minimumTickSize.width));\n\n    requiredWidth -= Math.abs(maxTickDiff);\n\n    // require height to render legend\n    requiredHeight = (Math.abs(maxTickDiff) / Math.abs(minTickDiff)) * tickDimHeight;\n\n    requiredHeight -= Math.abs(maxTickDiff);\n\n    // checking the alignment of legend\n    if (alignment === TOP || alignment === BOTTOM) {\n        measureParam = WIDTH;\n    } else {\n        measureParam = HEIGHT;\n    }\n\n    // calculating computed array\n    domainForLegend = getcomputedArray({\n        smartLabelCalc,\n        measureParam\n    }, {\n        height: requiredHeight,\n        width: requiredWidth\n    }, {\n        height: availableSpace.maxHeight,\n        width: availableSpace.maxWidth\n    }, domainForLegend);\n\n    return domainForLegend;\n};\n\n/**\n * function to recalculate steps on providing more number of stops than canvas can accomodate.\n * @param  {Array} domain - Array\n * @param  {Array} steps - Array\n * @param  {Object} scaleParams - Scale Parameters\n * @return {Array} - recalculated Step Array\n */\nexport const getInterpolatedData = (domain, steps, scaleParams) => {\n    // declaring recomputeSteps Variable\n    let recomputeSteps = 0;\n\n    const getTickMeasure = scaleParams.smartLabel;\n    const { maxWidth, maxHeight } = scaleParams.measures;\n    const { alignment } = scaleParams;\n    const domainForLegend = [];\n    const interpolatedFn = numberInterpolator()(domain[0], domain[1]);\n\n    // getting tick measure(i.e height and width)\n    const tickValue = getTickMeasure.getOriSize(domain[1].toFixed(2));\n\n    // To round the floating values to Integer and checking if value is 1.\n    steps = Math.round(steps);\n    steps = steps < 1 ? (steps + 1) : steps;\n\n    // checking alignment of the Axis\n    if (alignment === TOP || alignment === BOTTOM) {\n        recomputeSteps = Math.floor(maxWidth / (tickValue.width));\n    } else {\n        recomputeSteps = Math.floor(maxHeight / (tickValue.height));\n    }\n    steps = Math.min(steps, recomputeSteps);\n\n    // scaling the axis based on steps provided\n    for (let i = 0; i <= steps; i++) {\n        domainForLegend[i] = interpolatedFn(i / steps);\n    }\n    return domainForLegend;\n};\n\n/**\n *\n *\n * @param {*} container\n * @param {*} text\n * @param {*} measurement\n * @param {*} classPrefix\n */\nexport const titleCreator = (container, title, measurement, config) => {\n    const titleWidth = Math.min(measurement.maxWidth, measurement.width);\n\n    const titleContainer = makeElement(container, 'table', [1], `${config.classPrefix}-legend-title`)\n            .style(WIDTH, `${titleWidth}px`)\n            .style(HEIGHT, `${measurement.height}px`)\n            .style('border-bottom', `${measurement.border}px ${config.borderStyle} ${config.borderColor}`)\n            .style('text-align', title.orientation instanceof Function ?\n            title.orientation(config.position) : title.orientation);\n    return makeElement(titleContainer, 'td', [1], `${config.classPrefix}-legend-title-text`)\n                    .style(WIDTH, `${titleWidth}px`)\n                    .style(MAXWIDTH, `${titleWidth}px`)\n                    .style(HEIGHT, '100%')\n                    .style('line-height', 1)\n                    .style('padding', `${measurement.padding}px`)\n                    .text(title.text)\n                    .style('overflow-x', 'scroll')\n                    .node();\n};\n\n/**\n *\n *\n * @param {*} data\n * @param {*} prop\n * @param {*} labelManager\n *\n */\nexport const getMaxMeasures = (data, prop, labelManager) => {\n    let maxHeight = -Infinity;\n    let maxWidth = -Infinity;\n\n    data.forEach((item) => {\n        const value = prop ? item[prop] : item;\n        const space = labelManager.getOriSize(value);\n        maxHeight = Math.max(space.height + 2, maxHeight);\n        maxWidth = Math.max(space.width + 2, maxWidth);\n    });\n\n    return { height: maxHeight, width: maxWidth };\n};\n\n/**\n *\n *\n * @param {*} data\n * @param {*} prop\n * @param {*} labelManager\n *\n */\nexport const getItemMeasures = (context, prop, formatter) => {\n    const space = [];\n    const data = context.data();\n    const labelManager = context._labelManager;\n\n    data.forEach((item, index) => {\n        const value = prop ? item[prop] : item;\n        const { height, width } = labelManager.getOriSize(formatter(value, index, data, context));\n        space[index] = { height: height + 1, width: width + 1 };\n    });\n    return space;\n};\n\n/**\n *\n *\n * @param {*} textOrientation\n * @param {*} effPadding\n * @param {*} titleSpace\n *\n * @memberof Legend\n */\nexport const computeItemSpaces = (config, measures, data) => {\n    let totalHeight = 0;\n    let totalWidth = 0;\n    let maxItemSpaces = {\n        width: 0, height: 0\n    };\n    const {\n        effPadding,\n        titleWidth,\n        labelSpaces,\n        titleHeight,\n        maxWidth\n    } = measures;\n    const {\n        item,\n        align\n    } = config;\n    const {\n        icon,\n        text\n    } = item;\n    const textOrientation = text.orientation;\n    const itemSpaces = [];\n    const iconSpaces = [];\n    let maxIconWidth = 0;\n    labelSpaces.forEach((labelSpace, i) => {\n        const itemSpace = { width: 0, height: 0 };\n        const iconSpace = { width: 0, height: 0 };\n        const datum = data[i] || {};\n            // Compute each legend item height/width\n        if (textOrientation === LEFT || textOrientation === RIGHT) {\n            // Get label, icon and item widths\n            labelSpace.width += effPadding;\n            iconSpace.width = (datum.size ? 2 * Math.sqrt(datum.size / Math.PI) : icon.width) + effPadding;\n            maxIconWidth = Math.max(iconSpace.width, maxIconWidth);\n            itemSpace.width = labelSpace.width + maxIconWidth;\n\n            // Get label, icon and item heights\n            labelSpace.height = Math.max(labelSpace.height, icon.height) + effPadding;\n            iconSpace.height = labelSpace.height;\n            itemSpace.height = labelSpace.height;\n        } else {\n            // Get label, icon and item widths\n            labelSpace.width = Math.max(labelSpace.width, datum.size ? 2 * Math.sqrt(datum.size / Math.PI)\n            : icon.width) + effPadding;\n            iconSpace.width = labelSpace.width;\n            itemSpace.width = labelSpace.width;\n            maxIconWidth = Math.max(iconSpace.width, maxIconWidth);\n\n            // Get label, icon and item heights\n            labelSpace.height += effPadding;\n            iconSpace.height = icon.height + effPadding;\n            itemSpace.height = labelSpace.height + iconSpace.height;\n        }\n        // Compute height and width of legend for each alignment\n        if (align === 'horizontal') {\n            totalHeight = Math.max(totalHeight, itemSpace.height);\n        } else {\n            totalHeight += itemSpace.height;\n            totalWidth = Math.max(totalWidth, itemSpace.width, titleWidth);\n        }\n        maxItemSpaces = {\n            width: Math.max(itemSpace.width, maxItemSpaces.width),\n            height: Math.max(itemSpace.height, maxItemSpaces.height)\n        };\n        itemSpaces.push(itemSpace);\n        iconSpaces.push(iconSpace);\n    });\n    itemSpaces.forEach((itemSpace, i) => {\n        if (align === 'horizontal') {\n            itemSpace.height = totalHeight;\n            iconSpaces[i].width = maxIconWidth;\n            if (textOrientation === LEFT || textOrientation === RIGHT) {\n                labelSpaces[i].height = totalHeight;\n                iconSpaces[i].height = totalHeight;\n                itemSpaces[i].width = labelSpaces[i].width + maxIconWidth;\n            } else {\n                labelSpaces[i].width = maxIconWidth;\n                itemSpaces[i].width = maxIconWidth;\n                labelSpaces[i].width = maxIconWidth;\n            }\n            totalWidth = Math.max(totalWidth + itemSpaces[i].width);\n        } else {\n            itemSpace.width = Math.max(totalWidth, maxWidth);\n            if (textOrientation === TOP || textOrientation === BOTTOM) {\n                labelSpaces[i].width = totalWidth;\n                iconSpaces[i].width = totalWidth;\n                maxIconWidth = totalWidth;\n            } else {\n                const labelWidth = labelSpaces[i].width;\n                const newLabelWidth = (maxItemSpaces.width - maxIconWidth);\n                iconSpaces[i].width = maxIconWidth;\n                itemSpaces[i].width = labelSpaces[i].width + maxIconWidth;\n                labelSpaces[i].width = Math.max(labelWidth, newLabelWidth);\n                totalWidth = Math.max(totalWidth, itemSpace.width);\n            }\n        }\n    });\n    totalWidth = Math.ceil(Math.max(totalWidth, titleWidth)) + effPadding;\n    totalHeight += titleHeight + effPadding;\n    totalHeight = Math.ceil(totalHeight);\n    return { totalHeight, totalWidth, itemSpaces, iconSpaces, maxItemSpaces, maxIconWidth };\n};\n\n/**\n *\n *\n * @param {*} type\n * @param {*} scaleInfo\n * @param {*} domainInfo\n *\n */\nexport const getDomainBounds = (type, scaleInfo, domainInfo) => {\n    const {\n        scaleFn,\n        scaleType,\n        scale\n    } = scaleInfo;\n    const {\n        domain,\n        domainBounds,\n        domainLeg,\n        steps\n    } = domainInfo;\n    const ele = domain[type === 'lower' ? 0 : domain.length - 1];\n    const step = steps[type === 'lower' ? 0 : steps.length - 1];\n\n    return {\n        [scaleType]: scaleType === 'size' ? scale[scaleFn](ele) * scale.getScaleFactor() : scale[scaleFn](ele),\n        value: domainBounds[type],\n        id: type === 'lower' ? 0 : domainLeg.length + 2,\n        range: [ele, step]\n    };\n};\n","import {\n    makeElement,\n    selectElement,\n    getUniqueId,\n    getSmartComputedStyle,\n    generateGetterSetters,\n    mergeRecursive\n} from 'muze-utils';\nimport { behaviouralActions } from '@chartshq/muze-firebolt';\nimport * as legendBehaviours from '../firebolt/behavioural';\n\nimport { LegendFireBolt } from '../firebolt/legend-firebolt';\nimport { actionBehaviourMap } from '../firebolt/action-behaviour-map';\nimport { physicalActions } from '../firebolt/physical';\nimport * as sideEffects from '../firebolt/side-effects';\nimport { behaviourEffectMap } from '../firebolt/behaviour-effect-map';\nimport { VALUE, PATH, RIGHT, LEFT, TOP, BOTTOM } from '../enums/constants';\nimport { PROPS } from './props';\nimport { DEFAULT_MEASUREMENT, DEFAULT_CONFIG, LEGEND_TITLE } from './defaults';\nimport { getItemMeasures, titleCreator, computeItemSpaces } from './legend-helper';\n\n/**\n * Creates a Legend from the axes of a canvas\n *\n * @param {Object} dependencies : legend data\n * @class SimpleLegend\n */\nexport default class SimpleLegend {\n\n    /**\n     * Creates an instance of Legend.\n     * @param {Object} dependencies Set of dependencies required by the legend\n     * @memberof Legend\n     */\n    constructor (dependencies) {\n        this._data = [];\n        this._metaData = [];\n        this._mount = null;\n        this._fieldName = null;\n        this._title = Object.assign({}, LEGEND_TITLE);\n        this._metaData = null;\n        this._labelManager = dependencies.labelManager;\n        this._cells = dependencies.cells;\n        this._id = getUniqueId();\n        this._measurement = Object.assign({}, this.constructor.defaultMeasurement());\n        this._config = mergeRecursive({}, this.constructor.defaultConfig());\n\n        const dist = dependencies.labelManager.getOriSize('w');\n        this._minTickDistance = { width: dist.width * 3 / 4, height: dist.height / 2 };\n\n        generateGetterSetters(this, PROPS);\n        this._computedStyle = getSmartComputedStyle(selectElement('body'),\n            `${this.config().classPrefix}-legend-item-info`);\n\n        this._firebolt = new LegendFireBolt(this, {\n            behavioural: Object.assign({}, behaviouralActions, legendBehaviours),\n            physical: physicalActions,\n            physicalBehaviouralMap: actionBehaviourMap\n        }, sideEffects, behaviourEffectMap);\n    }\n\n    id () {\n        return this._id;\n    }\n    /**\n     * Initializes an instance of the class\n     *\n     * @static\n     * @param {Object} dependencies Set of dependencies required by the legend\n     * @return {Instance} returns a new instance of Legend\n     * @memberof Legend\n     */\n    static create (dependencies) {\n        return new SimpleLegend(dependencies);\n    }\n\n    /**\n     *\n     *\n     * @static\n     *\n     * @memberof SimpleLegend\n     */\n    static defaultConfig () {\n        return DEFAULT_CONFIG;\n    }\n\n    /**\n     *\n     *\n     * @static\n     *\n     * @memberof SimpleLegend\n     */\n    static defaultMeasurement () {\n        return DEFAULT_MEASUREMENT;\n    }\n\n    /**\n     *\n     *\n     * @readonly\n     * @memberof SimpleLegend\n     */\n    firebolt (...params) {\n        if (params.length) {\n            return this;\n        }\n        return this._firebolt;\n    }\n\n    /**\n     *\n     *\n     *\n     * @memberof Legend\n     */\n    elemType () {\n        return PATH;\n    }\n\n    canvasAlias (...alias) {\n        if (alias.length) {\n            this._canvasAlias = alias[0];\n            return this;\n        }\n        return this._canvasAlias;\n    }\n\n    /**\n     *\n     *\n     *\n     * @memberof Legend\n     */\n    mount (...params) {\n        if (params.length) {\n            this._mount = params[0];\n            this.render();\n            return this;\n        }\n        return this._mount;\n    }\n\n    /**\n     *\n     *\n     * @param {*} effPadding\n     * @param {*} align\n     *\n     * @memberof Legend\n     */\n    getLabelSpaces () {\n        const {\n            item,\n            classPrefix\n        } = this.config();\n        this._labelManager.setStyle(getSmartComputedStyle(selectElement('body'),\n            `${classPrefix}-legend-item-info`));\n        return getItemMeasures(this, VALUE, item.text.formatter);\n    }\n\n    /**\n     * Sets the height and width of a legend based on provided max\n     * height and width and based on its contents\n     *\n     * @return {Instance} Current instance\n     * @memberof Legend\n     */\n    setLegendMeasures () {\n        const {\n            width,\n            height,\n            maxWidth,\n            maxHeight,\n            padding,\n            margin,\n            border\n        } = this.measurement();\n        const {\n            align\n        } = this.config();\n\n        // Effective padding, margin and padding\n        const effPadding = padding * 2;\n        const effBorder = border * 2;\n        const effMargin = margin * 2;\n\n        this.data(this.dataFromScale());\n        // Get space occupied by title\n        const titleSpace = this.getTitleSpace();\n        const titleHeight = titleSpace.height > 0 ? titleSpace.height + effPadding : 0;\n        const titleWidth = titleSpace.width + effPadding;\n\n        // Get space occupied by labels\n        const labelSpaces = this.getLabelSpaces(effPadding, align);\n        const {\n            totalHeight, totalWidth, itemSpaces, iconSpaces, maxItemSpaces, maxIconWidth\n        } = computeItemSpaces(this.config(),\n        { effPadding, titleWidth, labelSpaces, titleHeight, maxWidth, maxHeight }, this.data());\n\n        this.measurement({\n            width: Math.max(totalWidth, width) + effMargin + effBorder,\n            height: Math.max(totalHeight, height) + effMargin + effBorder,\n            labelSpaces,\n            iconSpaces,\n            itemSpaces,\n            maxItemSpaces,\n            maxIconWidth,\n            titleSpaces: {\n                width: Math.min(maxWidth, this.measurement().width) - effMargin - effBorder,\n                height: titleHeight\n            }\n        });\n        return this;\n    }\n\n    /**\n     * Returns the space occupied by the legend title\n     *\n     * @return {Object} Space occupied by title\n     * @memberof Legend\n     */\n    getTitleSpace () {\n        this._labelManager.setStyle(getSmartComputedStyle(selectElement('body'),\n                                                `${this.config().classPrefix}-legend-title`));\n        return this._labelManager.getOriSize(this.title().text ? this.title().text : '');\n    }\n\n    /**\n     * Creates the title for the legend\n     *\n     * @param {DOM} container Container made for the title\n     * @return {Selection} Title and it's node\n     * @memberof Legend\n     */\n    renderTitle (container) {\n        const { titleSpaces, border, padding, width, maxWidth } = this.measurement();\n        const { borderStyle, borderColor } = this.config();\n        return titleCreator(container, this.title(), {\n            height: titleSpaces.height,\n            width,\n            maxWidth,\n            border,\n            padding,\n            borderStyle,\n            borderColor\n        }, this.config());\n    }\n\n    /**\n     * Render the legend with its title\n     *\n     * @param {DOM} mountPoint Point where the legend and title are to be appended\n     * @return {Instance} Current instance of legend\n     * @memberof Legend\n     */\n    render () {\n        const firebolt = this.firebolt();\n        const {\n            classPrefix,\n            borderStyle,\n            borderColor,\n            position\n        } = this.config();\n        const {\n            maxWidth,\n            maxHeight,\n            width,\n            height,\n            margin,\n            border\n        } = this.measurement();\n        const legendContainer = makeElement(selectElement(this.mount()), 'div', [1], `${classPrefix}-legend-box`);\n        let marginPosition;\n        switch (position) {\n        case TOP:\n            marginPosition = `margin-${BOTTOM}`;\n            break;\n        case LEFT:\n            marginPosition = `margin-${RIGHT}`;\n            break;\n        case BOTTOM:\n            marginPosition = `margin-${TOP}`;\n            break;\n        default:\n            marginPosition = `margin-${LEFT}`;\n        }\n        legendContainer.classed(`${classPrefix}-legend-box-${this._id}`, true);\n        legendContainer.style('float', 'left');\n        // set height and width\n        legendContainer.style('width', `${Math.min(maxWidth, width) - margin * 2}px`)\n                        .style('height', `${Math.min(maxHeight, height) - margin * 2}px`)\n                        .style(`${marginPosition}`, `${margin}px`)\n                        .style('border', `${border}px ${borderStyle} ${borderColor}`);\n        this.legendContainer(legendContainer.node());\n\n        // create title\n        this.renderTitle(legendContainer);\n        firebolt.createSelectionSet(this.data().map(d => d.id));\n        return legendContainer;\n    }\n  /**\n     *\n     *\n     * @param {*} data\n     *\n     * @memberof StepLegend\n     */\n    getCriteriaFromData (data) {\n        const fieldName = this.fieldName();\n        const type = this.metaData().getData().schema[0].type;\n        if (type === 'measure') {\n            return {\n                [fieldName]: data.range\n            };\n        }\n        return [[fieldName], [data.rawVal]];\n    }\n}\n","import {\n    LEFT,\n    RIGHT,\n    START,\n    END,\n    TOP,\n    BOTTOM,\n    HORIZONTAL,\n    VERTICAL,\n    CENTER,\n    SHAPE,\n    VALUE\n} from '../enums/constants';\n\nconst legendOrientation = {\n    [HORIZONTAL]: {\n        datasets: data => ({\n            row: [1],\n            column: data\n        }),\n        itemContainerMeasures: (measurement) => {\n            const {\n                itemSpaces,\n                width\n            } = measurement;\n            return {\n                row: {\n                    width: `${width}px`,\n                    padding: `${0}px`\n                },\n                column: {\n                    width: (d, i) => `${itemSpaces[i].width}px`,\n                    padding: `${0}px`\n                }\n            };\n        },\n        getStepSpacesInfo: (measurement) => {\n            const { maxItemSpaces, height } = measurement;\n            return {\n                iconHeight: height,\n                iconWidth: maxItemSpaces.width,\n                stepPadding: {\n                    horizontal: true,\n                    vertical: false\n                }\n            };\n        }\n    },\n    [VERTICAL]: {\n        datasets: data => ({\n            row: data,\n            column: d => [d]\n        }),\n        itemContainerMeasures: (measurement, config) => {\n            const {\n                width\n            } = measurement;\n            const { padding } = config;\n\n            return {\n                row: {\n                    width: `${width}px`,\n                    padding: `${padding}px`\n                },\n                column: {\n                    width: `${width}px`,\n                    padding: `${0}px`\n                }\n            };\n        },\n        getStepSpacesInfo: (measurement) => {\n            const { maxItemSpaces, width } = measurement;\n            return {\n                iconHeight: maxItemSpaces.height,\n                iconWidth: width,\n                stepPadding: {\n                    horizontal: false,\n                    vertical: true\n                }\n            };\n        }\n    }\n};\n\nexport const positionConfig = {\n    [LEFT]: legendOrientation[VERTICAL],\n    [RIGHT]: legendOrientation[VERTICAL],\n    [TOP]: legendOrientation[HORIZONTAL],\n    [BOTTOM]: legendOrientation[HORIZONTAL]\n};\n\nexport const alignmentMap = {\n    [LEFT]: END,\n    [RIGHT]: START,\n    [TOP]: CENTER,\n    [BOTTOM]: CENTER\n};\n\n// Reverses data for step legend\nexport const stepData = data => ({\n    [LEFT]: data.reverse(),\n    [RIGHT]: data.reverse(),\n    [TOP]: data,\n    [BOTTOM]: data\n});\n\n// Changes the item layout based on the position of the text\nexport const itemStack = {\n    [LEFT]: [VALUE, SHAPE],\n    [RIGHT]: [SHAPE, VALUE],\n    [TOP]: [VALUE, SHAPE],\n    [BOTTOM]: [SHAPE, VALUE]\n};\n","import { makeElement, selectElement, applyStyle } from 'muze-utils';\nimport { ICON_MAP } from './defaults';\nimport { positionConfig, alignmentMap, itemStack } from './position-config';\nimport {\n    WIDTH,\n    HEIGHT,\n    CENTER,\n    VALUE,\n    RECT,\n    LEFT,\n    RIGHT\n} from '../enums/constants';\n\n/**\n *\n *\n * @param {*} container\n * @param {*} data\n * @param {*} legendInstance\n * @param {*} align\n *\n */\nexport const getItemContainers = (container, data, legendInstance) => {\n    const measurement = legendInstance.measurement();\n    const config = legendInstance.config();\n    const {\n        itemSpaces\n    } = measurement;\n    const {\n        classPrefix,\n        position\n    } = config;\n    const positionObj = positionConfig[position];\n    const datasets = positionObj.datasets(data);\n    const measures = positionObj.itemContainerMeasures(measurement, config);\n\n    const rows = makeElement(container, 'div', datasets.row, `${classPrefix}-legend-row`);\n    rows.style(HEIGHT, (d, i) => `${itemSpaces[i].height}px`);\n    rows.style(WIDTH, measures.row.width);\n    rows.style('padding', measures.row.padding);\n\n    const columns = makeElement(rows, 'div', datasets.column, `${classPrefix}-legend-columns`);\n    columns.style(WIDTH, measures.column.width);\n    columns.style('padding', measures.column.padding);\n\n    return columns;\n};\n\n/**\n *\n *\n * @param {*} container\n * @param {*} classPrefix\n * @param {*} data\n *\n * @memberof DiscreteLegend\n */\nexport const createLegendSkeleton = (context, container, classPrefix, data) => {\n    let gradWidth = 0;\n    let gradHeight = 0;\n    let maxGradHeight = 0;\n    let maxGradWidth = 0;\n    const measurement = context.measurement();\n    const {\n            margin,\n            border,\n            titleSpaces,\n            width,\n            height,\n            maxWidth,\n            maxHeight\n        } = measurement;\n\n    gradHeight = height - (titleSpaces.height + 2 * margin + 2 * border);\n    gradWidth = width - (margin * 2 + border * 2);\n\n    maxGradHeight = maxHeight - (titleSpaces.height + margin * 2 + border * 2);\n    maxGradWidth = maxWidth - (margin * 2 + border * 2);\n\n    let legendBody = makeElement(container, 'div', [1], `${classPrefix}-legend-body`);\n    legendBody.select(`.${classPrefix}-legend-overflow`).remove();\n        // Create a div with scroll when overflow\n    if (maxGradWidth && maxGradWidth < gradWidth) {\n        legendBody = legendBody.style(WIDTH, `${maxGradWidth}px`).style('overflow-x', 'scroll');\n    }\n        // Create a div with scroll when overflow\n    if (maxGradHeight && maxGradHeight < gradHeight) {\n        legendBody.style(HEIGHT, `${maxGradHeight}px`).style('overflow-y', 'scroll');\n    }\n\n    legendBody = makeElement(legendBody, 'div', [1], `${classPrefix}-legend-overflow`);\n\n    legendBody.style(WIDTH, `${gradWidth}px`);\n    legendBody.style(HEIGHT, `${gradHeight}px`);\n\n    const legendItem = getItemContainers(legendBody, data, context);\n    return { legendItem };\n};\n\n/**\n * Creates legend item based on alignment and text orientation\n *\n * @param {Selection} container Point where items are to be mounted\n * @return {Instance} Current instance\n * @memberof Legend\n */\nexport const createItemSkeleton = (context, container) => {\n    const {\n        classPrefix,\n        item\n    } = context.config();\n    const textOrientation = item.text.orientation;\n\n    const stack = itemStack[textOrientation];\n    const itemSkeleton = makeElement(container, 'div', (d, i) => stack.map(e => [e, d[e], d.color, d.size,\n        d.value, context.fieldName(), i]), `${classPrefix}-legend-item-info`);\n\n    const alignClass = alignmentMap[textOrientation];\n\n    itemSkeleton.classed(alignClass, true);\n    return { itemSkeleton };\n};\n\n/**\n *\n *\n * @param {*} measureType\n * @param {*} stepColorCheck\n */\nexport const applyItemStyle = (item, measureType, stepColorCheck, context) => {\n    const {\n        padding,\n        labelSpaces,\n        iconSpaces,\n        maxIconWidth\n    } = context.measurement();\n    const diff = stepColorCheck ? -padding * 2 : 0;\n\n    if (item[0] === VALUE) {\n        return `${labelSpaces[item[6]][measureType]}px`;\n    }\n    return `${measureType === 'width' && !stepColorCheck ? maxIconWidth : iconSpaces[item[6]][measureType] - diff}px`;\n};\n\n/**\n *\n *\n * @param {*} str\n *\n */\nconst checkPath = (str) => {\n    if (/^[mzlhvcsqta]\\s*[-+.0-9][^mlhvzcsqta]+/i.test(str) && /[\\dz]$/i.test(str) && str.length > 4) {\n        return true;\n    }\n    return false;\n};\n\n/**\n *\n *\n * @param {*} d\n * @param {*} elem\n */\nconst createShape = function (d, elem, defaultIcon, width, height) {\n    const groupElement = elem;\n    // const { shape, size, update } = d;\n    const size = d[3] || Math.min(width, height) * Math.PI;\n    const shape = d[1] || defaultIcon;\n\n    if (shape instanceof Promise) {\n        shape.then((res) => {\n            d.shape = res;\n            return createShape(d, elem);\n        });\n    } else if (shape instanceof Element) {\n        let newShape = shape.cloneNode(true);\n\n        if (newShape.nodeName.toLowerCase() === 'img') {\n            const src = newShape.src || newShape.href;\n            newShape = document.createElementNS('http://www.w3.org/2000/svg', 'image');\n            newShape.setAttribute('href', src);\n        }\n        const shapeElement = selectElement(newShape);\n        shapeElement.attr('transform', `scale(${size / 100})`);\n        return selectElement(groupElement.node().appendChild(newShape));\n    } else if (typeof shape === 'string') {\n        let pathStr;\n        if (checkPath(shape)) {\n            pathStr = shape;\n        } else {\n            pathStr = ICON_MAP(shape).size(size)();\n        }\n        return makeElement(groupElement, 'path', data => [data]).attr('d', pathStr);\n    }\n    d[1] = 'circle';\n    return createShape(d, elem, 'circle');\n};\n\n/**\n * Returns the icon of the legend item\n *\n * @param {Object} datum Data property attached to the item\n * @param {number} width width of the item\n * @param {number} height height of the item\n * @return {Object|string} returns the path string or the string name of the icon\n * @memberof Legend\n */\nexport const getLegendIcon = (datum, width, height, defaultIcon) => {\n    const icon = ICON_MAP(datum[1]);\n\n    if (icon) {\n        return icon.size(datum[3] || Math.min(width, height) * Math.PI);\n    }\n    return ICON_MAP(datum[3] ? 'circle' : defaultIcon).size(datum[3] || Math.min(width, height) * Math.PI);\n};\n\n/**\n *\n *\n */\nexport const renderIcon = (icon, container, datum, context) => {\n    const {\n        classPrefix,\n        iconHeight,\n        iconWidth,\n        maxIconWidth,\n        padding,\n        color\n    } = context;\n    const svg = makeElement(container, 'svg', f => [f], `${classPrefix}-legend-icon-svg`)\n    .attr(WIDTH, maxIconWidth)\n    .attr(HEIGHT, iconHeight)\n    .style(WIDTH, `${maxIconWidth}px`)\n    .style(HEIGHT, `${iconHeight}px`);\n\n    if (icon !== RECT) {\n        const group = makeElement(svg, 'g', [datum[1]], `${classPrefix}-legend-icon`);\n        createShape(datum, group, datum[3] ? 'circle' : 'square', iconWidth, iconHeight)\n                        .attr('transform', `translate(${maxIconWidth / 2 - padding} ${iconHeight / 2})`)\n                        .attr('fill', datum[2] || color);\n    } else {\n        makeElement(svg, RECT, [datum[1]], `${classPrefix}-legend-icon`)\n                        .attr('x', 0)\n                        .attr('y', 0)\n                        .attr(WIDTH, maxIconWidth)\n                        .attr(HEIGHT, iconHeight)\n                        .attr('fill', datum[2] || color);\n    }\n};\n\n/**\n * Renders the items in the legend i.e, icon and text\n *\n * @param {DOM} container Point where item is to be mounted\n * @memberof Legend\n */\nexport const renderDiscreteItem = (context, container) => {\n    const labelManager = context._labelManager;\n    const {\n           item,\n           classPrefix\n    } = context.config();\n    const {\n        maxIconWidth,\n        padding\n    } = context.measurement();\n    const {\n            width: iconWidth,\n            height: iconHeight,\n            color,\n            className\n        } = item.icon;\n\n    const textOrientation = item.text.orientation;\n    const formatter = item.text.formatter;\n\n    labelManager.useEllipsesOnOverflow(true);\n    applyStyle(container, {\n        width: d => applyItemStyle(d, WIDTH, false, context),\n        height: d => applyItemStyle(d, HEIGHT, false, context),\n        'text-align': CENTER,\n        padding: `${padding}px`\n    });\n\n    labelManager.setStyle(context._computedStyle);\n    const dataArr = container.data();\n    container.each(function (d, i) {\n        if (d[0] === VALUE) {\n            selectElement(this).text(formatter(d[1], i, dataArr, context))\n                            .style(`padding-${textOrientation === RIGHT ? LEFT : RIGHT}`, '0px');\n        } else {\n            // const icon = getLegendIcon(d, iconWidth, iconHeight, type);\n            selectElement(this).classed(`${classPrefix}-${className}`, true);\n            selectElement(this).classed(`${classPrefix}-${className}-${i}`, true);\n            renderIcon('circle', selectElement(this), d, {\n                classPrefix,\n                iconWidth,\n                // iconWidth: 2 * Math.sqrt(d[3] / Math.PI) || iconWidth,\n                iconHeight,\n                maxIconWidth,\n                padding,\n                color\n            });\n        }\n    });\n};\n\n/**\n* Renders the items in the legend i.e, icon and text\n*\n* @param {DOM} container Point where item is to be mounted\n* @memberof Legend\n*/\nexport const renderStepItem = (context, container) => {\n    const labelManager = context._labelManager;\n    const {\n      item,\n      position,\n      classPrefix\n   } = context.config();\n    const {\n      maxItemSpaces,\n      maxIconWidth,\n      padding\n   } = context.measurement();\n    const {\n       width,\n       height,\n       color\n   } = item.icon;\n    const {\n        formatter\n   } = item.text;\n\n    labelManager.useEllipsesOnOverflow(true);\n    const { iconHeight, iconWidth, stepPadding } = positionConfig[position].getStepSpacesInfo({\n        maxItemSpaces, height, width\n    });\n\n    applyStyle(container, {\n        width: d => applyItemStyle(d, WIDTH, stepPadding.horizontal, context),\n        height: d => applyItemStyle(d, HEIGHT, stepPadding.vertical, context),\n        'text-align': 'center',\n        padding: `${padding}px`\n    });\n\n    labelManager.setStyle(context._computedStyle);\n    const dataArr = container.data();\n    container.each(function (d, i) {\n        if (d[0] === VALUE) {\n            selectElement(this).text(formatter(d[1], i, dataArr, context));\n        } else {\n            renderIcon(RECT, selectElement(this), d, {\n                classPrefix,\n                iconWidth,\n                iconHeight,\n                maxIconWidth,\n                color\n            });\n        }\n    });\n};\n","import {\n    FieldType,\n    DimensionSubtype,\n    formatTemporal\n} from 'muze-utils';\nimport SimpleLegend from './simple-legend';\nimport { DISCRETE, LEFT, SIZE } from '../enums/constants';\nimport { getScaleInfo } from './legend-helper';\nimport { createLegendSkeleton, createItemSkeleton, renderDiscreteItem } from './renderer';\nimport '../styles.scss';\n\n/**\n * Creates a Legend from the axes of a canvas\n *\n * @param {Object} dependencies : legend data\n * @class Legend\n */\nexport default class DiscreteLegend extends SimpleLegend {\n\n    /**\n     * Initializes an instance of the class\n     *\n     * @static\n     * @param {Object} dependencies Set of dependencies required by the legend\n     * @return {Instance} returns a new instance of Legend\n     * @memberof Legend\n     */\n    static create (dependencies) {\n        return new DiscreteLegend(dependencies);\n    }\n\n    /**\n     *\n     *\n     * @static\n     *\n     * @memberof DiscreteLegend\n     */\n    static type () {\n        return DISCRETE;\n    }\n\n    /**\n     *\n     *\n     * @param {*} scale\n     *\n     * @memberof DiscreteLegend\n     */\n    dataFromScale () {\n        const scale = this.scale();\n        const { scaleType, domain, scaleFn } = getScaleInfo(scale);\n        let domainForLegend = [...new Set(domain)];\n        const field = this.metaData().getFieldspace().fields[0];\n        const { type, subtype } = field.schema();\n\n        domainForLegend = domainForLegend.map((ele, i) => {\n            let value = 0;\n            let range = 0;\n            const rawVal = domainForLegend[i];\n            if (type === FieldType.MEASURE) {\n                value = (+domainForLegend[i]).toFixed(0);\n                const nextVal = domainForLegend[i + 1] ? +domainForLegend[i + 1] : +value;\n                range = [value, nextVal.toFixed(0)];\n            } else {\n                let domainVal = rawVal;\n                if (subtype === DimensionSubtype.TEMPORAL) {\n                    domainVal = formatTemporal(domainForLegend[i], field.minimumConsecutiveDifference());\n                }\n                value = domainVal;\n                range = [domainVal];\n            }\n            return {\n                [scaleType]: scale[scaleFn](ele),\n                value,\n                id: i,\n                range,\n                rawVal\n            };\n        }).filter(d => d.value !== null);\n\n        domainForLegend = scaleType === SIZE ? domainForLegend.sort((a, b) => a[scaleType] - b[scaleType])\n            : domainForLegend;\n        return domainForLegend;\n    }\n\n    /**\n     * Render the legend with its title\n     *\n     * @param {DOM} mountPoint Point where the legend and title are to be appended\n     * @return {Instance} Current instance of legend\n     * @memberof Legend\n     */\n    render () {\n        const firebolt = this.firebolt();\n        const data = this.data();\n        const { classPrefix } = this.config();\n        const legendContainer = super.render(this.mount());\n        // create Legend\n        const { legendItem } = createLegendSkeleton(this, legendContainer, classPrefix, data);\n        const { itemSkeleton } = createItemSkeleton(this, legendItem);\n        renderDiscreteItem(this, itemSkeleton);\n        legendContainer.selectAll('div').style('float', LEFT);\n        firebolt.mapActionsAndBehaviour();\n        firebolt.createSelectionSet(this.data().map(d => d.id));\n        return legendContainer;\n    }\n}\n","import { makeElement, applyStyle } from 'muze-utils';\nimport { ContinousAxis } from '@chartshq/muze-axis';\nimport { BOTTOM, RIGHT } from '../enums/constants';\nimport { ALIGN } from './defaults';\nimport '../styles.scss';\n\n/**\n *\n *\n * @param {*} data\n *\n */\nexport const getGradientDomain = (data) => {\n    if (typeof data[0].value === 'number') {\n        return data.reduce((accumulator, currentValue) =>\n            [Math.min(currentValue.value, accumulator[0]), Math.max(currentValue.value, accumulator[1])],\n                [Number.MAX_VALUE, Number.MIN_VALUE]);\n    }\n    return data.map(e => e.value);\n};\n\n/**\n *\n *\n * @param {*} container\n * @param {*} data\n * @param {*} domain\n *\n */\nexport const makeLinearGradient = (container, data, domain) => {\n    const defs = makeElement(container, 'defs', [1]);\n    const linearGradient = makeElement(defs, 'linearGradient', [1])\n                .attr('id', 'linear-gradient')\n                .attr('x1', '0%')\n                .attr('y2', '0%');\n\n    makeElement(linearGradient, 'stop', data, 'stop-gradient')\n                    .attr('offset', d => `${(d.value - domain[0]) * 100 / (domain[1] - domain[0]) || 1}%`)\n                    .attr('stop-color', d => d.color);\n    return linearGradient;\n};\n\n/**\n * Creates an axis cell with a linear axis for computing space and\n * creating gradient legend\n *\n * @return {AxisCell} Instance of Axis Cell for the gradient axis\n * @memberof Legend\n */\nexport const createAxis = (context) => {\n    const data = context.data();\n    const { align } = context.config();\n    const AxisCell = context._cells.AxisCell;\n    const newAxis = new ContinousAxis({\n        id: `legend-${context._id}`,\n        orientation: align === ALIGN.VERTICAL ? RIGHT : BOTTOM,\n        style: context._computedStyle,\n        nice: false,\n        showAxisName: false,\n        tickValues: data.map(d => d.value),\n        fixedBaseline: false,\n        labels: {\n            rotation: null\n        }\n    }, { labelManager: context._labelManager });\n\n    newAxis.domain(getGradientDomain(data));\n    newAxis.range([1, 1]);\n    return new AxisCell().source(newAxis).config({\n        margin: { left: 0, bottom: 0, top: 0, right: 0 }\n    });\n};\n\n/**\n *\n *\n * @param {*} container\n * @param {*} data\n * @param {*} classPrefix\n *\n * @memberof GradientLegend\n */\nconst createLegendSkeleton = (container, classPrefix, data) => {\n    const domain = getGradientDomain(data);\n    const legendContainer = makeElement(container, 'div', [1], `${classPrefix}-legend-body`);\n    const legendGradSvg = makeElement(legendContainer, 'svg', [1], `${classPrefix}-gradient`);\n    const legendGradCont = makeElement(legendGradSvg, 'g', [1], `${classPrefix}-gradient-group`);\n    const linearGradient = makeLinearGradient(legendGradSvg, data, domain);\n    const legendRect = makeElement(legendGradCont, 'rect', [1], `${classPrefix}-gradient-rect`);\n\n    return {\n        legendContainer,\n        legendGradCont,\n        legendGradSvg,\n        linearGradient,\n        legendRect\n    };\n};\n\n/**\n * Renders the axis for the gradient\n *\n * @param {Selection} container Point where axis is to be mounted\n * @param {number} height Height for axis\n * @param {number} width Width for axis\n * @memberof Legend\n */\nexport const renderAxis = (context, container, height, width) => {\n    const axis = context.axis();\n\n    axis.setAvailableSpace(width, height);\n    axis.render(container.node());\n    axis.source().render();\n};\n\n/**\n * Renders gradient legends\n *\n * @param {Selection} container Point where the legend is to be appended\n * @memberof GradientLegend\n */\nexport const renderGradient = (context, container) => {\n    let gradHeight = 0;\n    let gradWidth = 0;\n    const {\n        align,\n        classPrefix,\n        item\n    } = context.config();\n    const data = context.data();\n    // Create the skeleton for the legend\n    const {\n        legendContainer,\n        legendGradSvg,\n        legendGradCont,\n        linearGradient,\n        legendRect\n    } = createLegendSkeleton(container, classPrefix, data);\n    const labelDim = context.axis().source().getAxisDimensions().tickDimensions;\n    const {\n        padding,\n        margin,\n        border,\n        titleSpaces,\n        maxItemSpaces,\n        maxHeight,\n        maxWidth,\n        height,\n        width\n    } = context.measurement();\n    const gradientDimensions = {};\n\n    gradHeight = Math.floor(Math.min(height, maxHeight) - (titleSpaces.height + 2 * margin + 2 * border));\n    gradWidth = Math.floor(Math.min(width, maxWidth) - (margin * 2 + border * 2));\n\n    if (align === ALIGN.HORIZONTAL) {\n        gradientDimensions.height = item.icon.height;\n        gradientDimensions.width = gradWidth - 2 * padding - labelDim.width / 2;\n        linearGradient.attr('x2', '100%').attr('y1', '0%');\n        legendGradCont.attr('transform', `translate( ${labelDim.width / 2} 0)`);\n        renderAxis(context, legendContainer, gradHeight - item.icon.height - padding, gradWidth - 2 * padding - 1);\n\n        applyStyle(legendContainer, {\n            height: `${maxItemSpaces.height + border + padding}px`,\n            width: `${Math.min(width, maxWidth)}px`,\n            padding: `${padding}px`\n        });\n\n        legendRect.attr('height', gradientDimensions.height);\n        legendRect.attr('width', gradientDimensions.width - labelDim.width / 2);\n    } else {\n        gradientDimensions.height = gradHeight - 2 * padding - labelDim.height / 2;\n        gradientDimensions.width = item.icon.width;\n        linearGradient.attr('x2', '0%').attr('y1', '100%');\n        legendGradCont.attr('transform', `translate(0 ${labelDim.height / 2})`);\n        renderAxis(context, legendContainer, gradHeight - 2 * padding - 1, gradWidth - item.icon.width - padding * 2);\n\n        applyStyle(legendContainer, {\n            height: `${Math.min(height, maxHeight)}px`,\n            width: `${maxWidth}px`,\n            padding: `${padding}px`\n        });\n        legendRect.attr('height', gradientDimensions.height - labelDim.height / 2);\n        legendRect.attr('width', gradientDimensions.width);\n    }\n\n    // Apply Styles to the legend plot area\n    applyStyle(legendGradSvg, {\n        height: `${gradientDimensions.height}px`,\n        width: `${gradientDimensions.width}px`\n    });\n\n        // Apply styles to the legend rect\n    applyStyle(legendRect, {\n        fill: 'url(#linear-gradient)'\n    });\n    legendGradSvg.attr('height', gradientDimensions.height);\n    legendGradSvg.attr('width', gradientDimensions.width);\n\n    context.measurement({\n        gradientDimensions\n    });\n    context._legendGradientSvg = legendGradSvg;\n    return context;\n};\n","import SimpleLegend from './simple-legend';\nimport { getScaleInfo, getInterpolatedData, getInterpolatedArrayData } from './legend-helper';\nimport { GRADIENT, LEFT, SIZE } from '../enums/constants';\nimport { renderGradient, createAxis } from './gradient-helper';\nimport '../styles.scss';\n\n/**\n * Creates a Legend from the axes of a canvas\n *\n * @param {Object} dependencies : legend data\n * @class Legend\n */\nexport default class GradientLegend extends SimpleLegend {\n\n    /**\n     * Initializes an instance of the class\n     *\n     * @static\n     * @param {Object} dependencies Set of dependencies required by the legend\n     * @return {Instance} returns a new instance of Legend\n     * @memberof Legend\n     */\n    static create (dependencies) {\n        return new GradientLegend(dependencies);\n    }\n\n    /**\n     *\n     *\n     * @static\n     *\n     * @memberof GradientLegend\n     */\n    static type () {\n        return GRADIENT;\n    }\n\n    /**\n     *\n     *\n     * @param {*} axis\n     *\n     * @memberof GradientLegend\n     */\n    axis (...axis) {\n        if (axis.length) {\n            this._axis = axis[0];\n            return this;\n        }\n        return this._axis;\n    }\n\n    /**\n     *\n     *\n     * @param {*} scale\n     *\n     * @memberof GradientLegend\n     */\n    dataFromScale () {\n        let domainForLegend = [];\n        const scale = this.scale();\n        const { scaleType, domain, steps, scaleFn } = getScaleInfo(scale);\n\n        // defining scaleParams\n        const scaleParams = {\n            smartLabel: this.labelManager(),\n            measures: this.measurement(),\n            alignment: this.config().position,\n            minTickDistance: this.minTickDistance()\n        };\n\n        if (steps instanceof Array) {\n            if (domain[0] < steps[0]) {\n                domainForLegend[0] = domain[0];\n            }\n            domainForLegend = [...domainForLegend, ...steps];\n            if (domain[domain.length - 1] > steps[steps.length - 1]) {\n                domainForLegend.push(domain[1]);\n            }\n            // Sorting the domain Array\n            domainForLegend = [...new Set(domainForLegend)].sort((a, b) => a - b);\n\n            domainForLegend = getInterpolatedArrayData(domainForLegend, scaleParams);\n        } else {\n            domainForLegend = getInterpolatedData(domain, steps - 1, scaleParams);\n        }\n        domainForLegend = [...new Set(domainForLegend)].sort((a, b) => a - b);\n\n        return domainForLegend.map((ele, i) => {\n            const value = domainForLegend[i];\n            return {\n                [scaleType]: scaleType === SIZE ? scale[scaleFn](ele) * scale.getScaleFactor()\n                    : scale[scaleFn](Math.floor(ele)),\n                value: +value.toFixed(2),\n                id: i\n            };\n        }).filter(d => d.value !== null);\n    }\n\n    /**\n     *\n     *\n     * @param {*} effPadding\n     * @param {*} align\n     *\n     * @memberof Legend\n     */\n    getLabelSpaces (effPadding) {\n        this.config({\n            item: {\n                text: {\n                    orientation: this.config().position\n                }\n            }\n        });\n        const axis = createAxis(this);\n        const axisSpace = axis.getLogicalSpace();\n        const space = { width: axisSpace.width - effPadding, height: axisSpace.height - effPadding };\n        const axisDomainLength = axis.source().domain().length;\n        const labelSpaces = new Array(axisDomainLength).fill(space);\n\n        this.axis(axis);\n        return labelSpaces;\n    }\n\n    /**\n     *\n     *\n     *\n     * @memberof GradientLegend\n     */\n    getDrawingContext () {\n        return {\n            svgContainer: this._legendGradientSvg\n        };\n    }\n\n    /**\n     * Render the legend with its title\n     *\n     * @param {DOM} mountPoint Point where the legend and title are to be appended\n     * @return {Instance} Current instance of legend\n     * @memberof Legend\n     */\n    render () {\n        const firebolt = this.firebolt();\n        const legendContainer = super.render(this.mount());\n        // create Legend\n        renderGradient(this, legendContainer);\n        legendContainer.selectAll('div').style('float', LEFT);\n        firebolt.mapActionsAndBehaviour();\n        firebolt.createSelectionSet(this.data().map(d => d.id));\n        return legendContainer;\n    }\n /**\n     *\n     *\n     * @param {*} data\n     *\n     * @memberof SimpleLegend\n     */\n    getCriteriaFromData (data) {\n        return [[this.fieldName()], [data.value]];\n    }\n}\n","import SimpleLegend from './simple-legend';\nimport {\n    getScaleInfo,\n    getInterpolatedData,\n    getDomainBounds\n} from './legend-helper';\nimport {\n    createLegendSkeleton,\n    createItemSkeleton,\n    renderStepItem\n} from './renderer';\nimport { STEP, RECT, LEFT, SIZE, UPPER, LOWER } from '../enums/constants';\nimport { stepData } from './position-config';\nimport '../styles.scss';\n\n/**\n * Creates a Legend from the axes of a canvas\n *\n * @param {Object} dependencies : legend data\n * @class Legend\n */\nexport default class StepLegend extends SimpleLegend {\n\n    /**\n     * Initializes an instance of the class\n     *\n     * @static\n     * @param {Object} dependencies Set of dependencies required by the legend\n     * @return {Instance} returns a new instance of Legend\n     * @memberof Legend\n     */\n    static create (dependencies) {\n        return new StepLegend(dependencies);\n    }\n\n    /**\n     *\n     *\n     * @static\n     *\n     * @memberof StepLegend\n     */\n    static type () {\n        return STEP;\n    }\n\n    /**\n     *\n     *\n     * @param {*} scale\n     *\n     * @memberof StepLegend\n     */\n    dataFromScale () {\n        let domainLeg = [];\n        const scale = this.scale();\n        const { scaleType, domain, steps, scaleFn } = getScaleInfo(scale);\n\n        const { formatter } = this.config();\n        const domainBounds = {\n            lower: null, upper: null\n        };\n\n        // defining scaleParams\n        const scaleParams = {\n            smartLabel: this.labelManager(),\n            measures: this.measurement(),\n            alignment: this.config().position,\n            minTickDistance: this.minTickDistance()\n        };\n\n        if (steps instanceof Array) {\n            if (domain[0] < steps[0]) {\n                domainBounds.lower = [`${formatter.bounds.lower} ${steps[0]}`];\n            }\n            domainLeg = [...domainLeg, ...steps];\n            if (domain[domain.length - 1] > steps[steps.length - 1]) {\n                domainBounds.upper = [`${formatter.bounds.upper} ${steps[steps.length - 1]}`];\n            }\n        } else {\n            domainLeg = getInterpolatedData(domain, steps, scaleParams);\n        }\n\n        domainLeg = [...new Set(domainLeg)].sort((a, b) => a - b);\n        domainLeg = domainLeg.map((ele, i) => {\n            let value = null;\n            if (i < domainLeg.length - 1) {\n                value = `${(ele.toFixed(1))} - ${(+domainLeg[i + 1].toFixed(1))}`;\n            } else if (domainLeg.length === 1) {\n                value = ele.toFixed(1);\n            }\n            return {\n                [scaleType]: scaleType === SIZE ? scale[scaleFn](ele) * scale.getScaleFactor() : scale[scaleFn](ele),\n                value,\n                id: i + 1,\n                range: [ele, domainLeg[i + 1]]\n            };\n        }).filter(d => d.value !== null);\n\n        if (domainBounds.lower) {\n            const lowerBounds = getDomainBounds(LOWER, { scale, scaleFn, scaleType },\n                { domain, steps, domainBounds });\n            domainLeg = [lowerBounds, ...domainLeg];\n        }\n        if (domainBounds.upper) {\n            const upperBounds = getDomainBounds(UPPER, { scale, scaleFn, scaleType },\n            { domain, steps, domainBounds, domainLeg });\n            domainLeg = [...domainLeg, upperBounds];\n        }\n\n        return domainLeg;\n    }\n\n     /**\n     *\n     *\n     * @param {*} effPadding\n     * @param {*} align\n     *\n     * @memberof Legend\n     */\n    getLabelSpaces (effPadding, align) {\n        this.config({\n            item: {\n                text: {\n                    orientation: this.config().position\n                }\n            }\n        });\n        return super.getLabelSpaces(effPadding, align);\n    }\n\n    /**\n     *\n     *\n     *\n     * @memberof Legend\n     */\n    elemType () {\n        return RECT;\n    }\n\n     /**\n     * Render the legend with its title\n     *\n     * @param {DOM} mountPoint Point where the legend and title are to be appended\n     * @return {Instance} Current instance of legend\n     * @memberof Legend\n     */\n    render () {\n        const firebolt = this.firebolt();\n        const { classPrefix, position } = this.config();\n        const data = stepData(this.data())[position];\n\n        const legendContainer = super.render(this.mount());\n\n        // create Legend\n        const { legendItem } = createLegendSkeleton(this, legendContainer, classPrefix, data);\n        const { itemSkeleton } = createItemSkeleton(this, legendItem);\n\n        renderStepItem(this, itemSkeleton);\n        legendContainer.selectAll('div').style('float', LEFT);\n        firebolt.mapActionsAndBehaviour();\n        firebolt.createSelectionSet(this.data().map(d => d.id));\n        return legendContainer;\n    }\n\n    /**\n     *\n     *\n     * @param {*} data\n     *\n     * @memberof StepLegend\n     */\n    getCriteriaFromData (data) {\n        const fieldName = this.fieldName();\n        return {\n            [fieldName]: data.range\n        };\n    }\n}\n","import { GradientLegend, DiscreteLegend, StepLegend } from '@chartshq/muze-legend';\n\n/**\n * Contants to be used as attr\n */\nexport const ROWS = 'rows';\nexport const COLUMNS = 'columns';\nexport const DATA = 'data';\nexport const COLOR = 'color';\nexport const SHAPE = 'shape';\nexport const SIZE = 'size';\nexport const DETAIL = 'detail';\nexport const LAYERS = 'layers';\nexport const TRANSFORM = 'transform';\nexport const INITIALIZED = 'isInitialized';\nexport const SOURCE = 'source';\nexport const WIDTH = 'width';\nexport const HEIGHT = 'height';\nexport const PADDING = 'padding';\nexport const BORDER = 'border';\nexport const MARGIN = 'margin';\nexport const CONFIG = 'config';\nexport const MOUNT = 'mount';\nexport const CANVAS_UPDATED = 'canvasUpdated';\nexport const CLASSPREFIX = 'classPrefix';\nexport const POLICIES = '_policies';\nexport const LEGEND = 'legend';\nexport const TITLE = 'title';\nexport const SUB_TITLE = 'subtitle';\nexport const RESOLVE = 'resolve';\nexport const DISCRETE = 'discrete';\nexport const STEP_COLOR = 'step-color';\nexport const GRADIENT = 'gradient';\nexport const LINEAR = 'linear';\nexport const ORDINAL = 'ordinal';\nexport const MUZE_PREFIX = 'muze';\n\nexport const TITLE_TEMPLATE_NOT_ALLOWED_TAGS = [\n    'script',\n    'style'\n];\n\nexport const LEGEND_TYPE_MAP = {\n    [`${ORDINAL}-${true}-${COLOR}`]: DiscreteLegend,\n    [`${ORDINAL}-${true}-${SIZE}`]: DiscreteLegend,\n    [`${ORDINAL}-${true}-${SHAPE}`]: DiscreteLegend,\n    [`${ORDINAL}-${false}-${COLOR}`]: DiscreteLegend,\n    [`${ORDINAL}-${false}-${SHAPE}`]: DiscreteLegend,\n    [`${ORDINAL}-${false}-${SIZE}`]: DiscreteLegend,\n    [`${LINEAR}-${false}-${SIZE}`]: DiscreteLegend,\n    [`${LINEAR}-${true}-${SIZE}`]: DiscreteLegend,\n    [`${LINEAR}-${false}-${SHAPE}`]: DiscreteLegend,\n    [`${LINEAR}-${true}-${COLOR}`]: StepLegend,\n    [`${LINEAR}-${false}-${COLOR}`]: GradientLegend\n};\n\nexport const LEFT = 'left';\nexport const RIGHT = 'right';\nexport const BOTTOM = 'bottom';\nexport const TOP = 'top';\nexport const GROUP = 'group';\nexport const LAYOUT = 'layout';\nexport const RETINAL = 'retinal';\nexport const DIMENSION = 'dimension';\nexport const MEASURE = 'measure';\nexport const VERTICAL = 'vertical';\nexport const HORIZONTAL = 'horizontal';\nexport const HORIZONTAL_CENTER = 'h-center';\nexport const VERTICAL_CENTER = 'v-center';\nexport const HIDDEN = 'hidden';\nexport const OVERFLOW = 'overflow';\nexport const OVERFLOW_X = 'overflow-x';\nexport const OVERFLOW_Y = 'overflow-y';\nexport const AUTO = 'auto';\nexport const VISIBLE = 'visible';\nexport const VERTICAL_SCROLL_BAR = 'verticalScrollBar';\nexport const HORIZONTAL_SCROLL_BAR = 'horizontalScrollBar';\nexport const GRID = 'grid';\nexport const MESSAGE = 'message';\nexport const NO_DATA_MESSAGE = 'No data to display';\n\n","import { ComposedVars, SimpleVariable } from '@chartshq/visual-group';\nimport { TITLE_TEMPLATE_NOT_ALLOWED_TAGS } from './constants';\n\n/**\n * This method creates a new composed variable instance from multiple variables. This is required when we have multiple\n * variables on a single axis and the union of domain of all the variables needs to be set on the axis.\n *\n * To create a new composed variable from multiple fields,\n * ```\n *  const sharedVar = share('open', 'high', 'low', 'close');\n *  canvas.rows([sharedVar])\n *      .columns(['date']);\n * ```\n *\n * @module Operators\n * @public\n * @function share\n * @param {Array} vars Variable names.\n *\n * @return {ComposedVars} Instance of composed variable\n */\nexport const share = (...vars) => new ComposedVars(...vars.map(variable => new SimpleVariable(variable)));\n\n/**\n *\n *\n * @param {*} node\n *\n */\nfunction treeShakeNode (node) {\n    if (node.nodeType !== Node.ELEMENT_NODE) { return; }\n\n    if (TITLE_TEMPLATE_NOT_ALLOWED_TAGS.indexOf(node.tagName.toLowerCase()) !== -1) {\n        node.parentNode.removeChild(node);\n    } else {\n        for (const childNode of node.childNodes) {\n            treeShakeNode(childNode);\n        }\n    }\n}\n\n/**\n * A string template tagged function which sanitizes input html formatted string according to the allowed html tags.\n * This is used to render html in canvas components like title and tooltip.\n *\n * To render html in canvas components,\n * ```\n *     canvas.title(html`<span style=font-size:20px;>TITLE</span>`);\n * ```\n *\n * @public\n * @module Operators\n * @function html\n * @param {Array.<string>} strings - The string parts of the template.\n * @param {Array} exps - The list of evaluated expression values.\n *\n * @return {Function} Returns a function which returns the sanitized html string.\n */\nexport function html (strings, ...exps) {\n    let htmlCode = '';\n    const expLn = exps.length;\n    let i = 0;\n\n    for (; i < expLn; ++i) {\n        htmlCode += strings[i] + exps[i];\n    }\n    htmlCode += strings[i];\n\n    const frag = document.createDocumentFragment();\n    const wrapper = document.createElement('div');\n\n    frag.appendChild(wrapper);\n    wrapper.innerHTML = htmlCode;\n\n    treeShakeNode(wrapper);\n    const { innerHTML } = wrapper;\n\n    return () => innerHTML;\n}\n","import { mergeRecursive, CommonProps } from 'muze-utils';\n\nconst defaultPolicy = (registrableComponents) => {\n    const aliases = registrableComponents.map(comp => comp.alias());\n    return {\n        behaviours: {\n            '*': (propagationPayload) => {\n                const propagationCanvas = propagationPayload.sourceCanvas;\n                return propagationCanvas ? aliases.indexOf(propagationCanvas) !== -1 : true;\n            }\n        }\n    };\n};\n\nconst listenerFn = (canvas, fn) => () => {\n    const valueMatrix = canvas.composition().visualGroup.matrixInstance().value;\n    valueMatrix.each(cell => fn(cell.valueOf().firebolt()));\n};\n\nconst canvasIterator = (canvases, iteratorFn, cFn) => {\n    canvases.forEach((canvas) => {\n        const matrix = canvas.composition().visualGroup.matrixInstance().value;\n        matrix.each(cell => iteratorFn(cell.valueOf().firebolt()));\n        cFn && cFn(canvas);\n        // Also register actions on canvas update\n        const throwback = canvas._throwback;\n\n        throwback.registerImmediateListener([CommonProps.MATRIX_CREATED],\n            listenerFn(canvas, iteratorFn));\n    });\n};\n\nconst registerActions = (context, type, fnName, deps) => {\n    const canvases = context._registrableComponents;\n\n    canvases.forEach((canvas) => {\n        const vGroup = canvas.composition().visualGroup;\n\n        vGroup.resolver().setFireboltDependencies(type, deps);\n        canvas.firebolt()[fnName](deps);\n    });\n};\n\n/**\n * This class is initiated only once in lifecycle and is reponsible for regisration of physical and behavioural\n * actions and side effects and the mapping between them.\n *\n * To get the instance of action model\n * ```\n *  const ActionModel = muze.ActionModel;\n * ```\n *\n * @public\n * @module ActionModel\n */\nclass ActionModel {\n    constructor () {\n        this._registrableComponents = [];\n    }\n\n    /**\n     * Takes an array of canvases on which the physical and behavioural actions will get registered.\n     *\n     * @public\n     * @param  {Canvas} components Array of canvases\n     *\n     * @return {ActionModel} Instance of action model.\n     */\n    for (...components) {\n        this._registrableComponents = components;\n        return this;\n    }\n\n    /**\n     * Registers physical actions on the canvases. It takes an object with key as the name of action and value having\n     * the definition of the action.\n     *\n     * To register a {@link PhysicalAction},\n     * ```\n     *  const ActionModel = muze.ActionModel;\n     *  ActionModel\n     *       // Physical actions will be registered on these canvases.\n     *      .for(canvas)\n     *      .registerPhysicalActions({\n     *          // Key is the name of physical action.\n     *          ctrlClick: (firebolt) => (targetEl, behaviours) => {\n     *              targetEl.on('click', function (data) {\n     *                  const event = utils.getEvent();\n     *                  const pos = utils.getClientPoint(event, this);\n     *                  // Get the data point nearest to the mouse position.\n     *                  const nearestPoint = firebolt.context.getNearestPoint(pos, {\n     *                      data\n     *                  });\n     *                  // Prepare the payload\n     *                  const payload = {\n     *                      criteria: nearestPoint.id\n     *                  };\n     *                  behaviours.forEach((behaviour) => firebolt.dispatchBehaviour(behaviour, payload));\n     *              });\n     *          }\n     *      });\n     * ```\n     * @public\n     *\n     * @param {Object} action Names of physical actions and their definitions.\n     *\n     * @return {ActionModel} Instance of the action model.\n     */\n    registerPhysicalActions (action) {\n        registerActions(this, 'physicalActions', 'registerPhysicalActions', action);\n        return this;\n    }\n\n    /**\n     * Registers behavioural actions on the canvases. It takes definitions of the behavioural actions and registers\n     * them on the canvases. Every behavioural action must inherit the {@link GenericBehaviour} class.\n     *\n     * To register a behavioural action\n     * ```\n     *  // Define a new behavioural action\n     *  class SingleSelectBehaviour extends GenericBehaviour {\n     *      static formalName () {\n     *          return 'singleSelect';\n     *      }\n     *\n     *      setSelectionSet (addSet, selectionSet) {\n     *          if (addSet === null) {\n     *              selectionSet.reset();\n     *          } else if (addSet.length) {\n     *              const existingAddSet = selectionSet.getExistingEntrySet(addSet);\n     *              if (existingAddSet.length){\n     *                  selectionSet.reset();\n     *              } else {\n     *               selectionSet.add(addSet);\n     *              }\n     *          } else {\n     *              selectionSet.reset();\n     *          }\n     *      }\n     * }\n     * muze.ActionModel.registerBehaviouralActions(SingleSelectBehaviour);\n     * ```\n     *\n     * @public\n     *\n     * @param {GenericBehaviour} actions Definition of behavioural actions.\n     *\n     * @return {ActionModel} Instance of action model.\n     */\n    registerBehaviouralActions (...actions) {\n        registerActions(this, 'behaviouralActions', 'registerBehaviouralActions', actions);\n        return this;\n    }\n\n    /**\n     * Registers the mapping of physical and behavioural actions. This mapping is used to establish which behavioural\n     * actions should be dispatched on any triggering of physical actions.\n     *\n     * To map physical actions with behavioural actions,\n     * ```\n     *  muze.ActionModel.registerPhysicalBehaviouralMap({\n     *      ctrlClick: {\n     *          behaviours: ['select'] // This array must be the formal names of the behavioural actions.\n     *      }\n     *  });\n     * ```\n     *\n     * @public\n     * @param {Object} map Contains the physical and behavioural action map.\n     * ```\n     *   {\n     *      // Name of the physical action\n     *      click: {\n     *          // Target element selector. This is an optional field. If not passed, then by default takes the\n     *          // container element of visual unit.\n     *          target: '.muze-layers-area path',\n     *          // Behaviours which should be dispatched on triggering of the mapped physical action.\n     *          behaviours: ['select']\n     *      }\n     *   }\n     * ```\n     *\n     * @return {ActionModel} Instance of action model.\n     */\n    registerPhysicalBehaviouralMap (map) {\n        canvasIterator(this._registrableComponents, (firebolt) => {\n            firebolt.registerPhysicalBehaviouralMap(map);\n        }, (canvas) => {\n            canvas.firebolt().registerPhysicalBehaviouralMap(map);\n        });\n        return this;\n    }\n\n    /**\n     * Registers what behaviour to propagate on dispatch of a certain behavioural action. By default, when any\n     * behavioural action is dispatched, then the same behavioural action gets propagated to all the other canvases.\n     * This can be changed using this api.\n     *\n     * To register what behaviour should be propagated on dispatch of any behavioural action,\n     * ```\n     *  ActionModel.for(canvas1, canvas2).registerPropagationBehaviourMap({\n     *      select: 'filter',\n     *      brush: 'filter'\n     *  });\n     * ```\n     *\n     * @public\n     * @param {Object} map Propagation behaviour map.\n     *\n     * @return {ActionModel} Instance of action model.\n     */\n    registerPropagationBehaviourMap (map) {\n        canvasIterator(this._registrableComponents, (firebolt) => {\n            firebolt.registerPropagationBehaviourMap(map);\n        }, (canvas) => {\n            canvas.firebolt().registerPropagationBehaviourMap(map);\n        });\n\n        return this;\n    }\n\n    /**\n     * Registers the mapping of side effects and behavioural actions. It takes an object which contains key as the\n     * name of behavioural action and the side effects which will be linked to it.\n     *\n     * To map side effects to select behaviour,\n     * ```\n     *  muze.ActionModel.mapSideEffects({\n     *      select: ['infoBox'] // This array must be the formal names of the side effects\n     *  });\n     * ```\n     *\n     * To map side effects to select behaviour, but disable all the default side effects attached with this behaviour,\n     * ```\n     *  muze.ActionModel.mapSideEffects({\n     *      select: {\n     *          effects: ['infoBox'],\n     *          preventDefaultActions: true\n     *      }\n     *  });\n     * @public\n     * @param {Object} map Mapping of behavioural actions and side effects.\n     * ```\n     *     {\n     *          select: ['infoBox']\n     *     }\n     * ```\n     * @return {ActionModel} Instance of action model.\n     */\n    mapSideEffects (map) {\n        canvasIterator(this._registrableComponents, (firebolt) => {\n            firebolt.mapSideEffects(map);\n        }, (canvas) => {\n            canvas.firebolt().mapSideEffects(map);\n        });\n        return this;\n    }\n\n    /**\n     * Registers the side effects on the registered canvases. It takes definitions of side effects and registers them\n     * on the canvases. Every side effect must inherit the base class {@link GenericSideEffect} or\n     * {@link SpawnableSideEffect} or {@link SurrogateSideEffect} class.\n     *\n     * ```\n     * // Define a custom side effect\n     *  class InfoBox extends SpawnableSideEffect {\n     *      static formalName () {\n     *          return 'infoBox';\n     *      }\n     *\n     *      apply (selectionSet) {\n     *      }\n     *  }\n     *  muze.ActionModel.registerSideEffects(InfoBox);\n     * ```\n     * @public\n     * @param  {GenericSideEffect} sideEffects Definition of side effects.\n     *\n     * @return {ActionModel} Instance of action model.\n     */\n    registerSideEffects (...sideEffects) {\n        registerActions(this, 'sideEffects', 'registerSideEffects', sideEffects);\n        return this;\n    }\n\n    /**\n     * Breaks the link between behavioural actions and physical actions. It takes an array of behavioural action\n     * and it's physical action.\n     *\n     * To dissociate behavioural actions from physical actions\n     * ```\n     *  muze.ActionModel.dissociateBehaviour(['select', 'click'], ['highlight', 'hover']);\n     * ```\n     * @public\n     * @param  {Array} maps Array of behavioural action and physical action.\n     *\n     * @return {ActionModel} Instance of action model.\n     */\n    dissociateBehaviour (...maps) {\n        canvasIterator(this._registrableComponents, (firebolt) => {\n            maps.forEach(val => firebolt.dissociateBehaviour(val[0], val[1]));\n        }, (canvas) => {\n            maps.forEach(val => canvas.firebolt().dissociateBehaviour(val[0], val[1]));\n        });\n        return this;\n    }\n\n    /**\n     * Breaks the link between side effects and behavioural actions. It takes an array of formal names of the side\n     * effects and it's linked behavioural action.\n     *\n     * To dissociate side effects from behavioural actions\n     * ```\n     *  muze.ActionModel.dissociateSideEffect(['crossline', 'highlight'], ['selectionBox', 'brush']);\n     * ```\n     * @public\n     * @param  {Array} maps Array of side effects and behavioural actions.\n     *\n     * @return {ActionModel} Instance of action model.\n     */\n    dissociateSideEffect (...maps) {\n        canvasIterator(this._registrableComponents, (firebolt) => {\n            maps.forEach(val => firebolt.dissociateSideEffect(val[0], val[1]));\n        }, (canvas) => {\n            maps.forEach(val => canvas.firebolt().dissociateSideEffect(val[0], val[1]));\n        });\n        return this;\n    }\n\n    /**\n     * By default cross interactivity is disabled between canvases. This enables cross interaction between the canvases\n     * so that any action happening in one canvas gets dispatched on other canvases as well. An optional policy can also\n     * be passed in this method. The policy can be used to control on which canvases the behavioural actions and\n     * side effects gets dispatched.\n     *\n     * To just enable cross interactivity between two canvases,\n     * ```\n     *  ActionModel.for(canvas1, canvas2)\n     *      .enableCrossInteractivity();\n     * ```\n     *\n     * To enable cross interactivity but enable any behavioural action only when it is triggered from canvas1.\n     * ```\n     *  ActionModel.for(canvas1, canvas2)\n     *      .enableCrossInteractivity({\n     *          behaviours: {\n     *              // Here * stands for any behavioural action name. We can also give any name of behavioural action\n     *              // in place of this.\n     *              '*': (propPayload, context) => {\n     *                  return propPayload.sourceCanvas === canvas1.alias();\n     *              }\n     *          }\n     *      });\n     * ```\n     *\n     * To enable cross interactivity but enable tooltip effect if the action is propagated from canvas1,\n     * ```\n     *  ActionModel.for(canvas1, canvas2)\n     *      .enableCrossInteractivity({\n     *          sideEffects: {\n     *              tooltip: (propPayload, context) => {\n     *                  return propPayload.sourceCanvas === canvas1.alias();\n     *              }\n     *          }\n     *      });\n     * ```\n     * @public\n     * @param {Object} policy Policy definition.\n     *\n     * @return {ActionModel} Instance of action model.\n     */\n    enableCrossInteractivity (policy = {}) {\n        const registrableComponents = this._registrableComponents;\n        const mergedPolicy = mergeRecursive(mergeRecursive({}, defaultPolicy(registrableComponents)), policy);\n\n        registrableComponents.forEach((canvas) => {\n            canvas.firebolt().crossInteractionPolicy(mergedPolicy);\n        });\n\n        return this;\n    }\n}\n\nexport const actionModel = (() => new ActionModel())();\n","import { MUZE_PREFIX } from '../constants';\n\nexport const TITLE_CONFIG = {\n    position: 'top',\n    align: 'left',\n    padding: 4,\n    className: `${MUZE_PREFIX}-title-container`\n};\n\nexport const SUB_TITLE_CONFIG = {\n    position: 'top',\n    align: 'left',\n    padding: 16,\n    maxLines: 2,\n    className: `${MUZE_PREFIX}-subtitle-container`\n};\n\nexport const MESSAGE_CONFIG = {\n    className: `${MUZE_PREFIX}-message-container`\n};\n\nexport const CANVAS = 'canvas';\n","import { mergeRecursive } from 'muze-utils';\nimport {\n    ROWS,\n    COLUMNS,\n    COLOR,\n    SHAPE,\n    SIZE,\n    DETAIL,\n    LAYERS,\n    TRANSFORM,\n    TITLE,\n    SUB_TITLE\n} from '../constants';\nimport { TITLE_CONFIG, SUB_TITLE_CONFIG } from './defaults';\n/**\n * This is the local options semantics based on which setters getters are created and reactivity is initiated.\n * This local object is only valid for Canvas.\n * Canvas merges global and local object both to the model\n *\n * Format\n *  PROPERTRY_NAME: {\n *      value: // default value of the property,\n *      meta: {\n *          typeCheck: // The setter value will be checked using this. If the value is function then the setter value\n *                     // is passed as args.\n *          typeExpected: // The output of typecheck action will be tested against this. Truthy value will set the\n *                       // value to the setter\n *          sanitizaiton: // Need for sanitization before type is checked\n *      }\n *  }\n *\n * @module LocalOptions\n */\n\nexport const localOptions = {\n    [ROWS]: {\n        value: null,\n        meta: {\n            typeCheck: 'constructor',\n            typeExpected: 'Array'\n        }\n    },\n    [COLUMNS]: {\n        value: null,\n        meta: {\n            typeCheck: 'constructor',\n            typeExpected: 'Array'\n        }\n    },\n    [COLOR]: {\n        value: null,\n        meta: {\n            typeCheck: 'constructor',\n            typeExpected: 'Object',\n            sanitization: (config) => {\n                if (typeof config === 'string' || !config) {\n                    return {\n                        field: config\n                    };\n                }\n                return config;\n            }\n        }\n    },\n    [SHAPE]: {\n        value: null,\n        meta: {\n            typeCheck: 'constructor',\n            typeExpected: 'Object',\n            sanitization: (config) => {\n                if (typeof config === 'string' || !config) {\n                    return {\n                        field: config\n                    };\n                }\n                return config;\n            }\n        }\n    },\n    [SIZE]: {\n        value: null,\n        meta: {\n            typeCheck: 'constructor',\n            typeExpected: 'Object',\n            sanitization: (config) => {\n                if (typeof config === 'string' || !config) {\n                    return {\n                        field: config\n                    };\n                }\n                return config;\n            }\n        }\n    },\n    [DETAIL]: {\n        value: [],\n        meta: {\n            typeCheck: 'constructor',\n            typeExpected: 'Array'\n        }\n    },\n\n    [LAYERS]: {\n        value: [],\n        meta: {\n            typeCheck: 'constructor',\n            typeExpected: 'Array'\n        }\n    },\n    [TRANSFORM]: {\n        value: null,\n        meta: {\n            typeCheck: 'constructor',\n            typeExpected: 'Object'\n        }\n    }\n};\n\nexport const canvasOptions = {\n    [TITLE]: {\n        value: [null, null],\n        meta: {\n            typeCheck: ['constructor', 'constructor'],\n            typeExpected: ['Function', 'Object'],\n            spreadParams: true,\n            sanitization: [(title) => {\n                if (typeof title === 'string' || !title) {\n                    const t = () => title;\n                    return t;\n                }\n                return title;\n            }, (titleConfig) => {\n                const defConfig = mergeRecursive({}, TITLE_CONFIG);\n                return mergeRecursive(defConfig, titleConfig);\n            }]\n        }\n    },\n    [SUB_TITLE]: {\n        value: [null, null],\n        meta: {\n            typeCheck: ['constructor', 'constructor'],\n            typeExpected: ['Function', 'Object'],\n            spreadParams: true,\n            sanitization: [(subtitle) => {\n                if (typeof subtitle === 'string' || !subtitle) {\n                    const sub = () => subtitle;\n                    return sub;\n                }\n                return subtitle;\n            }, (subtitleConfig) => {\n                const defConfig = mergeRecursive({}, SUB_TITLE_CONFIG);\n                return mergeRecursive(defConfig, subtitleConfig);\n            }]\n        }\n    }\n};\n","export default class LayoutComponent {\n    constructor (name, dimensions, seed) {\n        this._seed = seed;\n        this._boundBox = {\n            height: dimensions.height,\n            width: dimensions.width,\n            top: null,\n            left: null\n        };\n        this._renderAt = null;\n        this._alignWith = null;\n        this._alignment = null;\n        this._target = null;\n        this._position = null;\n        this._componentName = name;\n        this._className = null;\n    }\n\n    getLogicalSpace () {\n        throw new Error('getLogicalSpace is not defined');\n    }\n\n    setSpatialConfig () {\n        throw new Error('setSpatialSpace is not defined');\n    }\n\n    name (param) {\n        if (param) {\n            this._componentName = param;\n        }\n        return this._componentName;\n    }\n\n    target (param) {\n        if (param) {\n            this._target = param;\n        }\n        return this._target;\n    }\n\n    position (param) {\n        if (param) {\n            this._position = param;\n        }\n        return this._position;\n    }\n\n    alignment (param) {\n        if (param) {\n            this._alignment = param;\n        }\n        return this._alignment;\n    }\n\n    alignWith (param) {\n        if (param) {\n            this._alignWith = param;\n        }\n        return this._alignWith;\n    }\n\n    renderAt (param) {\n        if (param) {\n            this._renderAt = param;\n        }\n        return this._renderAt;\n    }\n\n    boundBox (param) {\n        if (param) {\n            Object.assign(this._boundBox, param);\n        }\n        return this._boundBox;\n    }\n\n    className (param) {\n        if (param) {\n            this._className = param;\n        }\n        return this._className;\n    }\n\n    draw () {\n        throw new Error('draw is not defined');\n    }\n\n    attachListener () {\n        return this;\n    }\n  }\n\n","import LayoutComponent from './layoutComponent';\n\nclass DummyComponent extends LayoutComponent {\n    getLogicalSpace () {\n        return {\n            width: this.boundBox().width,\n            height: this.boundBox().height\n        };\n    }\n\n    setSpatialConfig (conf) {\n        this.boundBox({ top: conf.y, left: conf.x });\n        this.newDimensions = {\n            width: conf.width,\n            height: conf.height\n        };\n        this.renderAt(conf.renderAt);\n        return this;\n    }\n\n    draw () {\n        if (!this.component) {\n            throw new Error(`Component not set for ${this.componentName}`);\n        }\n        this.component.mount(document.getElementById(this.renderAt)); // Change the draw method to component draw\n        return this;\n    }\n}\n\nexport default DummyComponent;\n","export const DEFAULT_CONFIG = {\n    classPrefix: 'muze',\n    interaction: {\n        sideEffect: 'individual'\n    },\n    pagination: 'scroll',\n    scrollBar: {\n        thickness: 10,\n        speed: 2,\n        vertical: {\n            align: 'right'\n        },\n        horizontal: {\n            align: 'bottom'\n        }\n    },\n    legend: {\n        position: 'right',\n        color: {\n            show: true,\n            padding: 1,\n            margin: 3,\n            border: 1,\n            height: 20,\n            width: 20\n        },\n        shape: {\n            show: true,\n            padding: 1,\n            margin: 3,\n            border: 1,\n            height: 20,\n            width: 20\n        },\n        size: {\n            show: true,\n            padding: 1,\n            margin: 3,\n            border: 1,\n            height: 20,\n            width: 20\n        }\n    },\n    showHeaders: false,\n    minWidth: 100,\n    minHeight: 100,\n    facet: {\n        rows: {\n            minCharacters: 3\n        },\n        columns: {\n            maxLines: 2,\n            verticalAlign: 'middle',\n            minCharacters: 1\n        }\n    },\n    border: {\n        style: 'solid',\n        color: '#d6d6d6',\n        width: 2,\n        collapse: true,\n        spacing: 0\n    },\n    autoGroupBy: {\n        disabled: false\n    },\n    invalidValues: {},\n    sort: {}\n};\n","import { DEFAULT_CONFIG } from '../../../../muze/src/defaults';\n\nconst DEFAULT_WIDTH = 600;\nconst DEFAULT_HEIGHT = 400;\nconst DEFAULT_CLASS_NAME = `${DEFAULT_CONFIG.classPrefix}-layout-container-component`;\nconst NODE_PREFIX = `${DEFAULT_CONFIG.classPrefix}-layout-container`;\n\nexport {\n  DEFAULT_WIDTH,\n  DEFAULT_HEIGHT,\n  DEFAULT_CLASS_NAME,\n  NODE_PREFIX\n};\n","export default class DefinitionModel {\n    constructor (config) {\n        this._host = config.host || null;\n        this._cut = config.cut || null;\n        this._ratioWeight = config.ratioWeight === 0 ? 0 : config.ratioWeight || 1;\n        this._preferred = config.preferred || false;\n        this._lanes = config.lanes || [];\n        this._remainingHeight = 0;\n        this._remainingWidth = 0;\n    }\n\n    host (host) {\n        if (host) {\n            this._host = host;\n        }\n        return this._host;\n    }\n\n    preferred (preferred) {\n        if (preferred) {\n            this._preferred = preferred;\n        }\n        return this._preferred;\n    }\n\n    cut (cut) {\n        if (cut) {\n            this._cut = cut;\n        }\n        return this._cut;\n    }\n\n    ratioWeight (ratioWeight) {\n        if (ratioWeight) {\n            this._ratioWeight = ratioWeight;\n        }\n        return this._ratioWeight;\n    }\n\n    lanes (lanes) {\n        if (lanes) {\n            this._lanes = lanes;\n        }\n        return this._lanes;\n    }\n\n    remainingHeight (remainingHeight) {\n        if (remainingHeight) {\n            this._remainingHeight = remainingHeight;\n        }\n        return this._remainingHeight;\n    }\n\n    remainingWidth (remainingWidth) {\n        if (remainingWidth) {\n            this._remainingWidth = remainingWidth;\n        }\n        return this._remainingWidth;\n    }\n}\n","import { NODE_PREFIX } from '../../constants/defaults';\nimport DefinitionModel from '../definition-manager/definitionModel';\nimport DummyComponent from '../../layout-component/dummy-component';\n/**\n * Compares two strings in lowercase\n *\n * @export\n * @param {string} value the value to be compared\n * @param {string} compareTo whom the value would be compared\n * @return {boolean} true if values are equal\n */\nexport function isEqual (value, compareTo) {\n    if (typeof value !== 'string' || typeof compareTo !== 'string') {\n        throw new TypeError('value and compareTo must be string');\n    }\n    return value.toLowerCase() === compareTo.toLowerCase();\n}\n\nexport const getNodeId = (() => {\n    let _uid = 0;\n    return () => `${NODE_PREFIX}-${++_uid}`;\n})();\n\nexport function yExtraSpace (node) {\n    let smallestHeight = 0;\n    if (node.getCutType() === 'v') {\n        smallestHeight = smallestExtraHeightHorizontally(node); // eslint-disable-line no-use-before-define\n    } else if (node.getCutType() === 'h') {\n        node.children().forEach((child) => {\n            smallestHeight += yExtraSpace(child);\n        });\n    } else if (node.model().host() && node.model().host().getLogicalSpace) {\n        const containerHeight = node.boundBox().height;\n        const hostHeight = node.model().host().getLogicalSpace().height;\n\n        smallestHeight = containerHeight - hostHeight;\n        if (smallestHeight < 0) {\n            smallestHeight = 0;\n        }\n    } else {\n        smallestHeight = 0;\n    }\n    return smallestHeight;\n}\n\nexport function smallestExtraHeightHorizontally (node) {\n    let smallestHeight = Number.MAX_SAFE_INTEGER;\n    node.children().forEach((child) => {\n        const h = yExtraSpace(child);\n        if (h < smallestHeight) {\n            smallestHeight = h;\n        }\n    });\n    return smallestHeight;\n}\n\nexport function xExtraSpace (node) {\n    let smallestWidth = 0;\n    if (node.getCutType() === 'h') {\n        smallestWidth = smallestExtraWidthVertically(node); // eslint-disable-line no-use-before-define\n    } else if (node.getCutType() === 'v') {\n        node.children().forEach((child) => {\n            smallestWidth += xExtraSpace(child);\n        });\n    } else if (node.model().host() && node.model().host().getLogicalSpace) {\n        const containerWidth = node.boundBox().width;\n        const hostWidth = node.model().host().getLogicalSpace().width;\n        smallestWidth = containerWidth - hostWidth;\n        if (smallestWidth < 0) {\n            smallestWidth = 0;\n        }\n    } else {\n        smallestWidth = 0;\n    }\n    return smallestWidth;\n}\n\nexport function smallestExtraWidthVertically (node) {\n    let smallestWidth = Number.MAX_SAFE_INTEGER;\n    node.children().forEach((child) => {\n        const w = xExtraSpace(child);\n        if (w < smallestWidth) {\n            smallestWidth = w;\n        }\n    });\n    return smallestWidth;\n}\n\nexport function determineBoundBox (bb, i, arr, instance) {\n    if (i) {\n    // if not first sibling, take boundbox from previous sibling\n        const lastSibling = arr[i - 1];\n        const { top: _top, left: _left, height: _height, width: _width } = lastSibling.boundBox();\n        return {\n            width: bb.width,\n            height: bb.height,\n\n            top: instance.parentCut() === 'h'\n        ? _top + _height : _top,\n\n            left: instance.parentCut() === 'h'\n        ? _left : _left + _width\n        };\n    }\n  // if first sibling, take boundbox from parent\n    const { top: _top, left: _left } = instance.parent().boundBox();\n    return {\n        width: bb.width,\n        height: bb.height,\n        top: _top,\n        left: _left\n    };\n}\n\n// prepares the targetComponent Map for target Mapping ie. where a component should lie\nexport function prepareTargetComponentMap (context) {\n    context.targetComponentMap(new Map());\n    context.componentMap().forEach((value) => {\n        if (context.targetComponentMap().has(value.target())) {\n            context.targetComponentMap().get(value.target()).push(value);\n        } else {\n            const temp = [];\n            temp.push(value);\n            context.targetComponentMap().set(value.target(), temp);\n        }\n    });\n}\n\nexport function getComponent (canvasComponent, componentName) {\n    const comp = canvasComponent.find(component => component.name() === componentName);\n    return (comp && comp !== -1) ? comp : null;\n}\nexport function createPlaceHolderComponent (height, width, position) {\n    const comp = new DummyComponent(0, { height, width });\n    comp.name('placeHolder');\n    comp.position(position);\n    return comp;\n}\n\nexport function placeComponent (definitionModel, component, isPreferred = false, isGridComponent = false) {\n    let cut = '';\n    let componentRatioWidth = 1;\n    let leftOvercomponentRationWidth = 1;\n    let leftHeight = 0;\n    let leftWidth = 0;\n\n    if (!component) {\n        return { first: definitionModel, second: definitionModel };\n    }\n\n    const { height: componentHeight, width: componentWidth } = component.getLogicalSpace();\n    const position = component.position();\n    if (position === 'top' || position === 'bottom') {\n        cut = 'h';\n        componentRatioWidth = componentHeight / definitionModel.remainingHeight();\n        leftHeight = definitionModel.remainingHeight() - componentHeight;\n        leftWidth = definitionModel.remainingWidth();\n    } else {\n        cut = 'v';\n        componentRatioWidth = componentWidth / definitionModel.remainingWidth();\n        leftWidth = definitionModel.remainingWidth() - componentWidth;\n        leftHeight = definitionModel.remainingHeight();\n    }\n    leftOvercomponentRationWidth = 1 - componentRatioWidth;\n\n// update parentModel\n    definitionModel.cut(cut);\n    const firstLaneConfig = {\n        host: component.name(),\n        cut: null,\n        ratioWeight: componentRatioWidth,\n        preferred: isGridComponent ? false : isPreferred,\n        lanes: []\n    };\n    const firstLane = new DefinitionModel(firstLaneConfig);\n    firstLane.remainingHeight(componentHeight);\n    firstLane.remainingWidth(componentWidth);\n\n    const secondLaneConfig = {\n        host: null,\n        cut: null,\n        ratioWeight: leftOvercomponentRationWidth,\n        preferred: isGridComponent ? false : !isPreferred,\n        lanes: []\n    };\n    const secondLane = new DefinitionModel(secondLaneConfig);\n    secondLane.remainingHeight(leftHeight);\n    secondLane.remainingWidth(leftWidth);\n    if (isPreferred) {\n        definitionModel.lanes([firstLane]);\n    } else if (position === 'top' || position === 'left') {\n        definitionModel.lanes([firstLane, secondLane]);\n    } else {\n        definitionModel.lanes([secondLane, firstLane]);\n    }\n    return { first: firstLane, second: secondLane };\n}\n\nexport function placeGridComponent (definitionModel, gridComponents) {\n    let tempDefModel = definitionModel;\n    const rows = gridComponents.length;\n    const column = rows ? gridComponents[0].length : 0;\n    const height = gridComponents.reduce((acc, val) => (acc + val[0].getLogicalSpace().height), 0);\n\n    for (let i = 0; i < column; i++) {\n        const iscolumnPreffered = i === column - 1;\n        const columnPlaceHolderComponent = createPlaceHolderComponent(height,\n                                                    gridComponents[0][i].getLogicalSpace().width, 'left');\n        const { first, second } = placeComponent(tempDefModel, columnPlaceHolderComponent, iscolumnPreffered);\n        tempDefModel = first;\n        for (let j = 0; j < rows; j++) {\n            const rowpreffred = j === (rows - 1);\n            tempDefModel = placeComponent(tempDefModel, gridComponents[j][i], rowpreffred, true).second;\n        }\n        tempDefModel = second;\n    }\n    return tempDefModel;\n}\n\nexport function negotiateDimension (node) {\n    let preferred;\n    let cumultiveExtraSpaceAmt = 0;\n    let alteredDim;\n    let nonAlteredDim;\n\n    const childrenLength = node.children().length;\n\n    for (let index = 0; index < childrenLength; index++) {\n        let fn;\n        let extraSpaceAmt;\n        const child = node.children()[index];\n\n        if (child.parentCut() === 'h') {\n            fn = yExtraSpace;\n            alteredDim = 'height';\n            nonAlteredDim = 'width';\n        } else {\n            fn = xExtraSpace;\n            alteredDim = 'width';\n            nonAlteredDim = 'height';\n        }\n  // if vertical then get extra height from other node and push it to the preferred node.\n  // for horizontal cut the same thing is to be done with width\n        if (child.isPreferred()) {\n    // push extra space in sink. Execute it when all non preferred space are computed.\n            preferred = child;\n\n            continue; // eslint-disable-line no-continue\n        }\n  // reduce own height and save it in a var\n        cumultiveExtraSpaceAmt += (extraSpaceAmt = fn(child));\n        child.boundBox()[alteredDim] -= extraSpaceAmt;\n  // update nonaltered dim from parent for any change which happened during negotiation\n        child.boundBox()[nonAlteredDim] = child.parent().boundBox()[nonAlteredDim];\n\n        negotiateDimension(child);\n    }\n\n    if (preferred) {\n        preferred.boundBox()[alteredDim] += cumultiveExtraSpaceAmt;\n        preferred.boundBox()[nonAlteredDim] = preferred.parent().boundBox()[nonAlteredDim];\n        negotiateDimension(preferred);\n    }\n}\n\nexport function computePosition (node) {\n    node.children().forEach((child, i, children) => {\n        const boundBox = determineBoundBox(child.boundBox(), i, children, child);\n        child.boundBox(boundBox);\n        computePosition(child);\n    });\n}\n\nexport function allocateBoundingBox (node) {\n    const totalWeight = node.children()\n                            .map(child => child.model().ratioWeight())\n                            .reduce((carry, val) => carry + val, 0);\n\n    node.children().forEach((child, i, children) => {\n        const lastSibling = children[i - 1];\n        const ratio = child.model().ratioWeight() / totalWeight;\n\n        if (child.parentCut() === 'h') {\n            child.boundBox({\n                top: i ? lastSibling.boundBox().top + lastSibling.boundBox().height : 0,\n                left: child.parent().boundBox().left,\n                height: child.parent().boundBox().height * ratio,\n                width: child.parent().boundBox().width\n            });\n        } else {\n            child.boundBox({\n                top: child.parent().boundBox().top,\n                left: i ? lastSibling.boundBox().left + lastSibling.boundBox().width : 0,\n                height: child.parent().boundBox().height,\n                width: child.parent().boundBox().width * ratio\n            });\n        }\n        allocateBoundingBox(child);\n    });\n}\n\n","import { getNodeId } from '../helper';\nimport { LayoutComponent } from '../../layout-component';\n\nclass Node {\n    constructor (data) {\n        this._model = data;\n        this._parent = null;\n        this._children = [];\n        this._parentCut = null;\n        this._boundBox = {\n            top: null,\n            left: null,\n            height: null,\n            width: null\n        };\n\n        this._id = this._model.host() instanceof LayoutComponent && this._model.host().renderAt() ?\n                    this._model.host().renderAt() :\n                    getNodeId();\n    }\n\n    addChildren (entries) {\n        this._children.push(...entries);\n        entries.forEach((e) => { e.parent(this); });\n    }\n\n    isRoot () {\n        return this._parent === null;\n    }\n\n    isLeaf () {\n        return !this._children.length;\n    }\n\n    getCutType () {\n        return this._model.cut();\n    }\n\n    isPreferred () {\n        return !!this._model.preferred();\n    }\n\n    children (children) {\n        if (children) {\n            this._children = children;\n        }\n        return this._children;\n    }\n\n    parent (parent) {\n        if (parent) {\n            this._parent = parent;\n        }\n        return this._parent;\n    }\n\n    parentCut (parentCut) {\n        if (parentCut) {\n            this._parentCut = parentCut;\n        }\n        return this._parentCut;\n    }\n\n    id (id) {\n        if (id) {\n            this._id = id;\n        }\n        return this._id;\n    }\n\n    model (model) {\n        if (model) {\n            this._model = model;\n        }\n        return this._model;\n    }\n\n    boundBox (bound) {\n        if (bound) {\n            this._boundBox = {\n                top: bound.top,\n                left: bound.left,\n                height: bound.height,\n                width: bound.width\n            };\n        }\n        return this._boundBox;\n    }\n  /**\n     * function to search a node and update it with the config provided.\n     * @param  {Object} nodeconfig\n     */\n    updateNode (nodeconfig) {\n        if (this._id === nodeconfig._id) {\n            this._model.cut(nodeconfig.cut);\n            this._model.ratioWeight(nodeconfig.ratioWeight);\n        } else {\n            this._children.forEach((node) => {\n                if (node._id === nodeconfig._id) {\n                    node.model.cut(nodeconfig.cut);\n                    node.model.ratioWeight(nodeconfig.ratioWeight);\n                    return;\n                }\n                this.searchNode(node, nodeconfig);\n            });\n        }\n    }\n\n  // Recursive function to search a node\n    searchNode (node, nodeconfig) {\n        node.children().forEach((childNode) => {\n            if (childNode.id() === nodeconfig._id) {\n                childNode.model().cut(nodeconfig.cut);\n                childNode.model().ratioWeight(nodeconfig.ratioWeight);\n            } else {\n                this.searchNode(childNode, nodeconfig);\n            }\n        });\n    }\n\n  /**\n     * function to delete a node from tree Structure.\n     * @param  {String} nodeId - node Id of the Node\n     */\n    delete (nodeId) {\n        this._children.forEach((node) => {\n            if (node.id() === nodeId) {\n                const index = this._children.indexOf(node);\n                this._model.lanes().splice(index, 1);\n            }\n            this.deleteSearchNode(node, nodeId);\n        });\n    }\n\n  // Recursive function to search a node\n    deleteSearchNode (node, nodeId) {\n        node.children().forEach((childNode) => {\n            if (childNode.id() === nodeId) {\n                const index = node.children().indexOf(childNode);\n                node.model().lanes().splice(index, 1);\n            } else {\n                this.deleteSearchNode(childNode, nodeId);\n            }\n        });\n    }\n}\n\nexport default Node;\n","import Node from '../tree';\nimport {\n    allocateBoundingBox,\n    negotiateDimension,\n    computePosition\n} from '../helper';\n\nexport default class LayoutModel {\n    constructor (measurements, config) {\n        this._measurements = measurements;\n        this._config = config;\n        this._root = this.createTree(this._config, null);\n        this.setBoundBox();\n    }\n\n    createTree (config, parent) {\n        const node = new Node(config);\n        if (parent) {\n            node.parentCut(parent.getCutType());\n            parent.addChildren([node]);\n        } else {\n            this._root = node;\n        }\n        for (const lane of config.lanes()) {\n            this.createTree(lane, node);\n        }\n\n        return this._root;\n    }\n\n    setBoundBox () {\n        this._root.boundBox({\n            top: 0,\n            left: 0,\n            width: this._measurements.width,\n            height: this._measurements.height\n        });\n        allocateBoundingBox(this._root);\n    }\n\n    setHostPosition (node) {\n        node.children().forEach((child) => {\n            LayoutModel.setHostSpatialConfig(child);\n            this.setHostPosition(child);\n        });\n    }\n\n    static setHostSpatialConfig (node) {\n        const bb = node.boundBox();\n        const host = node.model().host();\n        if (host && host.setSpatialConfig) {\n            const conf = {\n                x: bb.left,\n                y: bb.top,\n                width: bb.width,\n                height: bb.height,\n                renderAt: node.id()\n            };\n            host.setSpatialConfig(conf);\n        }\n    }\n\n    negotiate () {\n        negotiateDimension(this._root);\n        computePosition(this._root);\n        return this;\n    }\n\n    broadcast () {\n        this.setHostPosition(this._root);\n        return this;\n    }\n\n    tree () {\n        return this._root;\n    }\n}\n","/**\n * This file exports constants that will be used to\n * create the state store of the table layout.\n */\n/**\n * The index of top, bottom and center in the matrix\n */\nexport const VIEW_INDEX = {\n    top: 0,\n    center: 1,\n    bottom: 2\n};\n\nexport const ROW_MATRIX_INDEX = {\n    0: 'top',\n    1: 'center',\n    2: 'bottom'\n};\n\nexport const COLUMN_MATRIX_INDEX = {\n    0: 'left',\n    1: 'middle',\n    2: 'right'\n};\n\n/**\n * The width of the grid suppied by the user.\n */\nexport const GRID_WIDTH = 'width';\n\n/**\n * The height of the grid supplied by the user.\n */\nexport const GRID_HEIGHT = 'height';\n\n/**\n  * The border for the grid\n  */\nexport const BORDER = 'border';\n\n /**\n  *  The index of the first visible row in view matrix.\n  */\nexport const ROW_POINTER = 'rowPointer';\n\n/**\n * The index of the first visible column in the view matrix.\n */\nexport const COLUMN_POINTER = 'columnPointer';\n\n/**\n * Flag to specify whether row sizes should be equal.\n */\nexport const ROW_SIZE_IS_EQUAL = 'isRowSizeEqual';\n\n/**\n * Flag to specify whether column sizes are equal.\n */\nexport const COLUMN_SIZE_IS_EQUAL = 'isColumnSizeEqual';\n\n/**\n * Field to store an array an of the widths of visible columns.\n * @computed\n */\nexport const COLUMN_WIDTHS = 'visibleColumnWidths';\n\n/**\n * Field to store an array of heights of visible rows.\n * @computed\n */\nexport const ROW_HEIGHTS = 'visibleRowHeights';\n\n/**\n * Field to store the width of the left matrix.\n * @computed\n */\nexport const LEFT_MATRIX_WIDTH = 'leftMatrixWidth';\n\n/**\n * Field to store the width of the right matrix.\n * @computed\n */\nexport const RIGHT_MATRIX_WIDTH = 'rightMatrixWidth';\n\n/**\n * Field to store the height of the top matrix.\n * @computed\n */\nexport const TOP_MATRIX_HEIGHT = 'topMatrixHeight';\n\n/**\n * Field to store the height of the bottom matrix.\n * @computed\n */\nexport const BOTTOM_MATRIX_HEIGHT = 'bottomMatrixHeight';\n\n/**\n * The dom element to render the layout inside.\n */\nexport const MOUNT_POINT = 'mount';\n\n/**\n * The id attribute of the left table element.\n */\nexport const LEFT_TABLE_ID = 'grid-left';\n\n/**\n * The id attribute of the right table element.\n */\nexport const RIGHT_TABLE_ID = 'grid-right';\n\n/**\n * The id attribute of the top table.\n */\nexport const TOP_TABLE_ID = 'grid-top';\n\n/**\n * The id attribute of the bottom table.\n */\nexport const BOTTOM_TABLE_ID = 'grid-bottom';\n\n/**\n * The id attribute of the center table.\n */\nexport const CENTER_TABLE_ID = 'grid-center';\n\n/**\n * The id attribute of the top div.\n */\nexport const TOP_DIV_ID = 'muze-div-top';\n\n/**\n * The id attribute of the bottom div.\n */\nexport const BOTTOM_DIV_ID = 'muze-div-bottom';\n\n/**\n * The id attribute of the center div.\n */\nexport const CENTER_DIV_ID = 'muze-div-center';\n\n/**\n * Field that indicates if the row configuration has changed\n */\nexport const HAVE_ROWS_CHANGED = 'haveRowsChanged';\n\n/**\n * Field that indicates if the column configuration has changed\n */\nexport const HAVE_COLUMNS_CHANGED = 'haveColumnsChanged';\n\n/**\n * Field that indicates if the values configuration for the center matrix has changed\n */\nexport const HAVE_VALUES_CHANGED = 'haveValuesChanged';\n\n/**\n * Field that indicates the width of row matrix\n */\nexport const ROW_MATRIX_WIDTH = 'rowMatrixWidth';\n\n/**\n * Field that indicates the height of row matrix\n */\nexport const COLUMN_MATRIX_HEIGHT = 'columnMatrixHeight';\n\n/**\n * Field that indicates the unit width of layout\n */\nexport const UNIT_WIDTH = 'unitWidth';\n\n/**\n * Field that indicates the unit height of layout\n */\nexport const UNIT_HEIGHT = 'unitHeight';\n\n/**\n * Field that indicates the style object\n */\nexport const STYLE = 'style';\n\n/**\n * Field that indicates the color configuration\n */\nexport const COLOR = 'color';\n\n/**\n * Field that indicates width\n */\nexport const WIDTH = 'width';\n\n/**\n * Field that indicates collpase property for border\n */\nexport const COLLAPSE = 'collapse';\n\n/**\n * Field that indicates spacing property for border\n */\nexport const SPACING = 'spacing';\n\n/**\n * Field that indicates spacing property for border\n */\nexport const DISTRIBUTION = 'distribution';\n\n/**\n * Field that indicates spacing property for border\n */\nexport const GUTTERSPACE = 'gutterSpace';\n\n/**\n * Field that indicates spacing property for border\n */\nexport const BREAK_PAGE = 'breakPage';\n\n/**\n * Field that indicates spacing property for border\n */\nexport const SHOW_ROW_BORDERS = 'showRowBorders';\n\n/**\n * Field that indicates spacing property for border\n */\nexport const SHOW_COL_BORDERS = 'showColBorders';\n\n/**\n * Field that indicates spacing property for border\n */\nexport const SHOW_VALUE_BORDERS = 'showValueBorders';\n\nexport const HEIGHT = 'height';\nexport const COLUMN = 'column';\nexport const ROW = 'row';\nexport const TOP = 'top';\nexport const LEFT = 'left';\nexport const RIGHT = 'right';\nexport const BOTTOM = 'bottom';\nexport const CENTER = 'center';\nexport const CLICK = 'click';\nexport const ROW_LEFT = 'rowLeft';\nexport const ROW_RIGHT = 'rowRight';\nexport const COLUMN_BOTTOM = 'colBottom';\nexport const COLUMN_TOP = 'colTop';\nexport const AUTO = 'auto';\nexport const ROW_SPAN = 'rowSpan';\nexport const COL_SPAN = 'colSpan';\nexport const ROW_ROOT = 'rowRoot';\nexport const COLUMN_ROOT = 'columnRoot';\nexport const PRIMARY = 'primary';\nexport const SECONDARY = 'secondary';\nexport const VERTICAL = 'vertical';\nexport const HORIZONTAL = 'horizontal';\nexport const GRID = 'grid';\n\nexport const BLANK_BORDERS = 'rgba(0,0,0,0)';\n\nexport const PAGINATION = 'pagination';\nexport const BUFFER = 'buffer';\nexport const HOLISTIC = 'holistic';\nexport const SCROLL = 'scroll';\nexport const MIDDLE = 'middle';\nexport const NO_BORDERS = null;\n\nexport const MAX_WIDTH_AVAIL_FOR_COL_MATRIX = 'maxWidthAvailableForColumnMatrix';\nexport const COLUMN_MATRIX = 'columnMatrix';\nexport const MAX_HEIGHT_AVAIL_FOR_ROW_MATRIX = 'maxHeightAvailableForRowMatrix';\nexport const ROW_MATRIX = 'rowMatrix';\n","/* eslint no-undef: \"off\" */\n/* eslint default-case: \"off\" */\nexport class Utils {\n    static isDOMElement (element) {\n        return element instanceof Element;\n    }\n\n    static getID (element) {\n        return element.id;\n    }\n\n    static getElement (id) {\n        return document.getElementById(id);\n    }\n\n    static findContainer (data) {\n        return data.filter(coordinate => coordinate.parent == null)[0];\n    }\n  /**\n   * static method to remove the div\n   * @param  {} divId - div ID to be removed.\n   */\n    static removeDiv (divId) {\n        if (document.getElementById(divId) !== null) { document.getElementById(divId).remove(); }\n    }\n}\n","import { DEFAULT_CLASS_NAME } from '../constants/defaults';\nimport { LayoutComponent } from '../layout-component';\n\nexport default class DataPoint {\n    constructor (node) {\n        this._node = node;\n        this._className = node.model().host() instanceof LayoutComponent ?\n                            node.model().host().className() : DEFAULT_CLASS_NAME;\n    }\n\n    node () {\n        return this._node;\n    }\n\n    hasHost () {\n        return this._node.model().host() instanceof LayoutComponent;\n    }\n\n    className () {\n        return this._className || DEFAULT_CLASS_NAME;\n    }\n}\n","import { getnodePoints } from './helper';\n\nexport class DataParser {\n    constructor (data) {\n        this._data = data;\n    }\n\n    defaultDataPointLogic () {\n        const nodepoints = [];\n        getnodePoints(this._data, nodepoints);\n        return nodepoints;\n    }\n\n}\n","import DataPoint from './data-point';\n\nexport const getnodePoints = (node, nodepoints) => {\n    const datapoint = new DataPoint(node);\n    nodepoints.push(datapoint);\n    node.children().forEach((child) => {\n        getnodePoints(child, nodepoints);\n    });\n};\n","import { DataParser } from './data-parser';\n\nexport class HTMLDataAdapter extends DataParser {\n    getCoordinates () {\n        return super.defaultDataPointLogic();\n    }\n}\n","export class Renderer {\n\n    initRenderer (node, tree) {\n        node.__logicalTree = tree;\n    }\n}\n","import { HTMLDataAdapter } from '../data-adapters/html-data';\nimport { Utils } from '../utils';\nimport { Renderer } from './renderer';\n\nexport class HTMLRenderer extends Renderer {\n    constructor (data) {\n        super();\n        this._data = data;\n        this._coordinates = new HTMLDataAdapter(this._data).getCoordinates();\n    }\n\n    createhtml (mount, className) {\n        const mainDiv = mount;\n        super.initRenderer(mainDiv, this._data); // Initialise node with layout id\n        this.parentDiv = this.createAndCustomiseParent(className);\n        this._coordinates.forEach((node) => {\n            if (node.hasHost()) {\n                const host = node.node();\n                this.parentDiv.appendChild(this.createAndPositionDiv({ ...host.boundBox(),\n                    id: host.id(),\n                    className: node.className() }));\n            }\n        });\n        mainDiv.appendChild(this.parentDiv);\n    }\n\n    createAndPositionDiv (config) {\n        const { top, left, height, width, className, id } = config;\n        const existingDiv = document.getElementById(id);\n        const div = existingDiv || document.createElement('div');\n        div.style.position = 'absolute';\n        div.style.left = `${left}px`;\n        div.style.top = `${top}px`;\n        div.style.height = `${height}px`;\n        div.style.width = `${width}px`;\n        div.id = id;\n        div.className = className;\n        return div;\n    }\n\n    createAndCustomiseParent (className) {\n        const container = Utils.findContainer(this._coordinates);\n        const host = container.node();\n        const parentDiv = this.createAndPositionDiv({ ...host.boundBox(),\n            id: host.id(),\n            className: container.className() });\n        parentDiv.className = className;\n        parentDiv.style.position = 'relative';\n        return parentDiv;\n    }\n\n    coordinates () {\n        return this._coordinates;\n    }\n}\n","import { selectElement } from 'muze-utils';\nimport { HTMLRenderer } from '../renderers/html-renderer';\nimport { LayoutComponent } from '../layout-component';\n\nexport const getChildNode = (context, config) =>\n    context.renderer().createAndPositionDiv(config);\n\nexport const findNode = (context, nodeID) =>\n    context.renderer().coordinates().find(point => point.node().id() === nodeID);\n\nexport const renderHTML = (context) => {\n    context.renderer(new HTMLRenderer(context.data()));\n    context.renderer().createhtml(context.mount(), context.className());\n};\n\nexport const drawLayout = context => renderHTML(context);\n\nexport const drawComponent = (componentData) => {\n    componentData.children().forEach((node) => {\n        const host = node.model().host();\n        if (host instanceof LayoutComponent) {\n            host.draw();\n        }\n        drawComponent(node);\n    });\n};\n\nexport const removeElement = (elemID) => {\n    if (elemID) {\n        selectElement(`#${elemID}`).remove();\n    }\n};\n\nconst setAlignConfig = (alignment, params) => {\n    let newNodeConfig = {};\n    const { node, refNode } = params;\n    switch (alignment) {\n    case 'left':\n        newNodeConfig = {\n            top: node.top,\n            left: refNode.left,\n            height: node.height,\n            width: Math.abs(node.width - Math.abs(refNode.left - node.left))\n        };\n        break;\n\n    case 'right':\n        newNodeConfig = {\n            top: node.top,\n            left: node.left,\n            height: node.height,\n            width: Math.abs(node.width - Math.abs(node.left + node.width - (refNode.left + refNode.width)))\n        };\n        break;\n\n    case 'top':\n        newNodeConfig = {\n            top: refNode.top,\n            left: node.left,\n            height: Math.abs(node.height - Math.abs(refNode.top - node.top)),\n            width: node.width\n        };\n        break;\n\n    case 'bottom':\n        newNodeConfig = {\n            top: node.top,\n            left: node.left,\n            height: Math.abs(node.top - refNode.top + refNode.height),\n            width: node.width\n        };\n        break;\n\n    case 'h-center':\n        newNodeConfig = {\n            top: node.top,\n            left: refNode.left,\n            height: node.height,\n            width: refNode.width\n        };\n        break;\n\n    case 'v-center':\n        newNodeConfig = {\n            top: refNode.top,\n            left: node.left,\n            height: refNode.top,\n            width: node.width\n        };\n        break;\n    default:\n        break;\n    }\n    return newNodeConfig;\n};\n\nexport const resolveAligment = (context, componentData) => {\n    componentData.children().forEach((component) => {\n        const host = component.model().host();\n\n        if (host instanceof LayoutComponent && host.alignWith()) {\n            const componentToAlign = context.componentMap().get(host.alignWith());\n\n            if (componentToAlign) {\n                const point = findNode(context, component.id()).node();\n                const node = point.boundBox();\n                const refNode = findNode(context, componentToAlign.renderAt())\n                    .node()\n                    .boundBox();\n                const newNodeConfig = setAlignConfig(host.alignment(), { node, refNode });\n\n                // check if model in parent component\n                Object.assign(newNodeConfig, { id: point.id(), className: host.className() });\n                context.renderer().createAndPositionDiv(newNodeConfig);\n                context.componentMap().get(host.name()).setSpatialConfig({\n                    x: newNodeConfig.left,\n                    y: newNodeConfig.top,\n                    height: newNodeConfig.height,\n                    width: newNodeConfig.width\n\n                });\n            }\n        }\n\n        resolveAligment(context, component);\n    });\n};\n","import { Utils } from '../utils';\nimport { drawLayout, resolveAligment, drawComponent } from './helper';\n\nexport class DrawingManager {\n    constructor (data, renderer, container) {\n        this._data = data.tree;\n        this._componentMap = data.componentMap;\n        this._layoutClassName = data.layoutClassName;\n        this._renderer = renderer;\n        this._mount = Utils.isDOMElement(container) ? container : Utils.getElement(container);\n    }\n\n    draw () {\n        drawLayout(this);\n        resolveAligment(this, this._data);\n        drawComponent(this._data);\n        return this;\n    }\n\n    data (data) {\n        if (data) {\n            this._data = data;\n        }\n        return this._data;\n    }\n\n    componentMap (param) {\n        if (param) {\n            this._componentMap = param;\n        }\n        return this._componentMap;\n    }\n\n    className (param) {\n        if (param) {\n            this._layoutClassName = param;\n        }\n        return this._layoutClassName;\n    }\n\n    renderer (param) {\n        if (param) {\n            this._renderer = param;\n        }\n        return this._renderer;\n    }\n\n    mount (param) {\n        if (param) {\n            this._mount = param;\n        }\n        return this._mount;\n    }\n}\n","import DefinitionModel from './definitionModel';\nimport { prepareTargetComponentMap, getComponent, placeComponent, placeGridComponent } from '../helper';\n\nexport default class DefinitionManager {\n    constructor (componentMap, sequence, totalHeight, totalWidth) {\n        this._componentMap = componentMap;\n        this._prioritySequence = sequence;\n        this._totalHeight = totalHeight;\n        this._totalWidth = totalWidth;\n        this._targetComponentMap = null;\n    }\n\n    // create the config model\n    generateConfigModel () {\n        prepareTargetComponentMap(this);\n        const canvasComponent = this._targetComponentMap.get('canvas');\n        const definitionModel = new DefinitionModel({});\n        let tempDefModel = definitionModel;\n        definitionModel.remainingHeight(this._totalHeight);\n        definitionModel.remainingWidth(this._totalWidth);\n\n        let componentRef = null;\n\n        this._prioritySequence.forEach((name) => {\n            componentRef = getComponent(canvasComponent, name);\n            if (name !== 'grid') {\n                tempDefModel = placeComponent(tempDefModel, componentRef).second;\n            } else {\n                tempDefModel = placeGridComponent(tempDefModel, componentRef.component);\n            }\n        });\n        return definitionModel;\n    }\n\n    componentMap (param) {\n        if (param) {\n            this._componentMap = param;\n        }\n        return this._componentMap;\n    }\n\n    targetComponentMap (param) {\n        if (param) {\n            this._targetComponentMap = param;\n        }\n        return this._targetComponentMap;\n    }\n}\n","import { sanitizeConfig } from './helper';\n\nexport class LayoutDef {\n    constructor () {\n        this._componentMap = new Map();\n        this._layoutDefinition = null;\n    }\n\n    addComponent (component) {\n        this._componentMap.set(component.name(), component);\n    }\n\n    layoutDefinition (def) {\n        if (def) {\n            this._layoutDefinition = def;\n        }\n        return this._layoutDefinition;\n    }\n\n    addMultipleComponent (componentArray) {\n        componentArray.forEach((comp) => {\n            this.addComponent(comp);\n        });\n    }\n\n    sanitizedDefinition () {\n        sanitizeConfig(this, this._layoutDefinition);\n        return this.layoutDefinition();\n    }\n\n    componentMap () {\n        return this._componentMap;\n    }\n    resetComponentMap () {\n        this._componentMap.clear();\n    }\n}\n","import DefinitionManager from '../layout-definition/definition-manager';\n\nexport function sanitizeConfig (context, hostObj) {\n    const hostID = hostObj.host();\n    if (hostObj.lanes() && hostObj.lanes().length) {\n        hostObj.lanes().forEach(childHost => sanitizeConfig(context, childHost));\n    }\n    if (hostID != null && typeof (hostID) === 'string') {\n        if (context.componentMap().get(hostID) !== undefined) {\n            hostObj.host(context.componentMap().get(hostID));\n        }\n    }\n}\n\nexport function calLayOutDef (context) {\n    const { height, width } = context.dimension();\n    const defManager = new DefinitionManager(context.layoutDef().componentMap(),\n                                              context.prioritySequence(),\n                                              height,\n                                              width);\n    const genLayoutdef = defManager.generateConfigModel();\n    return genLayoutdef;\n}\n","import {\n  LayoutModel\n} from '../layout-definition';\n\nimport {\n  DEFAULT_WIDTH,\n  DEFAULT_HEIGHT\n} from '../constants/defaults';\n\nimport {\n   GRID\n} from '../../enums/constants';\n\nimport { DrawingManager } from '../drawing-manager';\nimport { removeElement } from '../drawing-manager/helper';\nimport { Utils } from '../utils';\nimport { LayoutDef } from './layout-def';\nimport { calLayOutDef } from './helper';\n\nexport default class LayoutManager {\n    constructor (conf) {\n        this._renderAt = conf.renderAt;\n        this._layoutClassName = conf.className;\n        this._dimension = {\n            width: conf.width || DEFAULT_WIDTH,\n            height: conf.height || DEFAULT_HEIGHT\n        };\n\n        this._skeletonType = conf.skeletonType || 'html';\n        this._layoutDefinition = null;\n        this._layoutDef = new LayoutDef();\n        this._drawingManager = null;\n        this._prioritySequence = [];\n        this.tree = null;\n        this._rootNodeID = null;\n    }\n\n    layoutDef (param) {\n        if (param) {\n            this._layoutDef = param;\n        }\n        return this._layoutDef;\n    }\n\n    prioritySequence (param) {\n        if (param) {\n            this._prioritySequence = param;\n        }\n        return this._prioritySequence;\n    }\n\n    dimension (param) {\n        if (param) {\n            Object.assign(this._dimension, param);\n        }\n        return this._dimension;\n    }\n\n    addComponent (component) {\n        this._layoutDef.addComponent(component);\n    }\n\n    addMultipleComponent (componentArray) {\n        this._layoutDef.addMultipleComponent(componentArray);\n    }\n\n    resetNode (node) {\n        if (this.con) {\n            this.con.resetNode(node);\n        }\n    }\n\n  /**\n   * function to update the node and rerender the layout.\n   * @param  {} config - node configuration to change.\n   */\n    updateNode (config) {\n        this.tree.updateNode(config);\n        this._layoutDefinition = this.tree.model;\n        this.compute();\n    }\n\n    compute () {\n        //----\n        if (Utils.isDOMElement(this._renderAt)) {\n            this._renderAt._layout = this;\n        } else {\n            document.getElementById(this._renderAt)._layout = this;\n        }\n        //-----\n        this._layoutDefinition = calLayOutDef(this);\n        this._layoutDef.layoutDefinition(this._layoutDefinition);\n        this._layoutDefinition = this._layoutDef.sanitizedDefinition();\n        this._layout = new LayoutModel({\n            width: this._dimension.width,\n            height: this._dimension.height\n        },\n            this._layoutDefinition);\n        this.tree = this._layout.negotiate().tree();\n        this._layout.broadcast();\n        this._drawingManager = new DrawingManager({\n            tree: this.tree,\n            componentMap: this._layoutDef.componentMap(),\n            layoutClassName: this._layoutClassName\n        }, this._skeletonType, this._renderAt);\n\n        if (this._rootNodeID) {\n            this.tree.id(this._rootNodeID);\n        } else {\n            this._rootNodeID = this.tree.id();\n        }\n    // this will draw all the components by calling their draw method\n        this._drawingManager.draw();\n    }\n\n    getRootNodeId () {\n        return this._rootNodeID;\n    }\n\n  /**\n  * This function takes the LayoutComponents and Register them in component store\n  * @param {Array<LayoutComponent>} layoutComponents\n  */\n    registerComponents (layoutComponents) {\n        this._prioritySequence.length = 0;\n        this._layoutDef.resetComponentMap();\n        layoutComponents.forEach((container) => {\n            if (container) {\n                this._prioritySequence.push(container.name());\n                this.addComponent(container);\n                if (container.name() === 'grid') {\n                    container.component.forEach((componentArr) => {\n                        componentArr.forEach((compo) => {\n                            this.addComponent(compo);\n                        });\n                    });\n                }\n            }\n        });\n        return this;\n    }\n\n    getComponent (componentName) {\n        return this._layoutDef.componentMap().get(componentName);\n    }\n\n    deleteElement (component, elementName) {\n        this._layoutDef.componentMap().delete(elementName);\n        const deleteElementId = component.renderAt();\n        return removeElement(deleteElementId);\n    }\n\n    removeComponent (name) {\n        const component = this.getComponent(name);\n        if (component) {\n            if (name === GRID) {\n                return component.component.map(comp => comp.map(\n                    co => this.deleteElement(co, co.name())\n                ));\n            }\n            return this.deleteElement(component, name);\n        }\n        return this;\n    }\n\n    renderAt (mount) {\n        if (mount) {\n            this._renderAt = mount;\n        }\n        return this._renderAt;\n    }\n}\n","import { isEqual, STATE_NAMESPACES, selectElement, getValueParser } from 'muze-utils';\nimport { VisualGroup } from '@chartshq/visual-group';\nimport { ROWS, COLUMNS, COLOR, SHAPE, SIZE, DETAIL, DATA, CONFIG, GRID }\n    from '../constants';\nimport { canvasOptions } from './local-options';\nimport { LayoutManager } from '../../../layout/src/tree-layout';\n\n/**\n * Instantiate high level components. Canvas knows what all high level component it has.\n * @nice-to-have dynamic high level components.\n *  - Is it even required ?\n *  - Reactive to source (canvas) streaming ?\n * @param {*} context Canvas instance\n * @return {Object.<Array>} Arrays of Title, visualGroup, Legend\n */\nexport const initCanvas = (context) => {\n    const reg = context._registry.components;\n\n    return [new reg.VisualGroup(context._registry, Object.assign({\n        throwback: context._throwback\n    }, context.dependencies()))];\n};\n\nexport const fixScrollBarConfig = (config) => {\n    config.scrollBar.thickness = Math.min(50, Math.max(10, config.scrollBar.thickness));\n    return config;\n};\n\nexport const setLayoutInfForUnits = (context) => {\n    const layoutManager = context._layoutManager;\n    const gridLayout = layoutManager.getComponent(GRID);\n    const boundBox = gridLayout && gridLayout.getBoundBox();\n    const valueMatrix = context.composition().visualGroup.matrixInstance().value;\n    const parentContainer = selectElement(`#${layoutManager.getRootNodeId()}`).node();\n    valueMatrix.each((cell) => {\n        cell.valueOf().parentContainerInf({\n            el: parentContainer,\n            dimensions: boundBox\n        });\n    });\n};\n\n/**\n *\n *\n * @memberof Canvas\n */\nexport const dispatchProps = (context) => {\n    const lifeCycleManager = context.dependencies().lifeCycleManager;\n    lifeCycleManager.notify({ client: context, action: 'beforeupdate' });\n    const visualGroup = context.composition().visualGroup;\n\n    const allOptions = context._allOptions;\n    for (const key in allOptions) {\n        const value = context[key]();\n        if (value !== null) {\n            visualGroup[key] && visualGroup[key](value);\n        }\n    }\n    const { invalidValues } = context.config();\n\n    visualGroup.valueParser(getValueParser(invalidValues));\n    visualGroup.createMatrices();\n    context._cachedProps = {};\n    lifeCycleManager.notify({ client: context, action: 'initialized' });\n    lifeCycleManager.notify({ client: context, action: 'updated' });\n};\n\nconst equalityChecker = (props, params) => {\n    let checker = () => false;\n    return !props.every((option, i) => {\n        switch (option) {\n        case ROWS:\n        case COLUMNS:\n        case DETAIL:\n            checker = isEqual('Array');\n            break;\n\n        case SHAPE:\n        case SIZE:\n        case COLOR:\n        case DATA:\n        case CONFIG:\n            checker = isEqual('Object');\n            break;\n        default:\n            checker = () => true;\n            break;\n        }\n        const oldVal = params[i][0];\n        const newVal = params[i][1];\n\n        return checker(oldVal, newVal);\n    });\n};\n\nconst updateChecker = (props, params) => props.every((option, i) => {\n    const val = params[i][1];\n    switch (option) {\n    case ROWS:\n    case COLUMNS:\n        return val !== null;\n\n    case DATA:\n        return val && !val.isEmpty();\n\n    default:\n        return true;\n\n    }\n});\n\nexport const notifyAnimationEnd = (context) => {\n    const viewInfo = context.layout().viewInfo();\n    const centerMatrix = viewInfo && viewInfo.viewMatricesInfo.matrices.center[1] || [];\n    const promises = [];\n    centerMatrix.forEach((cellArr) => {\n        cellArr.forEach((cell) => {\n            promises.push(cell.valueOf().done());\n        });\n    });\n    const lifeCycleManager = context.lifeCycle();\n    if (promises.length) {\n        Promise.all(promises).then(() => {\n            // Update life cycle\n            lifeCycleManager.notify({ client: context, action: 'drawn' });\n            const animDonePromises = [];\n\n            centerMatrix.forEach((cellArr) => {\n                cellArr.forEach((cell) => {\n                    cell.valueOf().layers().forEach((layer) => {\n                        animDonePromises.push(layer.animationDone());\n                    });\n                });\n            });\n\n            [context.xAxes(), context.yAxes()].forEach((axisArr) => {\n                axisArr = axisArr || [];\n                axisArr.forEach((axes) => {\n                    axes.forEach((axisInst) => {\n                        animDonePromises.push(axisInst.animationDone());\n                    });\n                });\n            });\n\n            Promise.all(animDonePromises).then(() => {\n                lifeCycleManager.notify({ client: context, action: 'animationend' });\n            });\n        });\n    } else {\n        lifeCycleManager.notify({ client: context, action: 'animationend' });\n    }\n};\n\nexport const setupChangeListener = (context) => {\n    const store = context._store;\n\n    const allOptions = Object.keys(context._allOptions);\n    const props = [...allOptions, ...Object.keys(canvasOptions)];\n    const nameSpaceProps = [...allOptions, ...Object.keys(canvasOptions)].map(prop =>\n        `${STATE_NAMESPACES.CANVAS_LOCAL_NAMESPACE}.${prop}`);\n    store.registerChangeListener(nameSpaceProps, (...params) => {\n        const equalityProps = equalityChecker(props, params);\n        const updateProps = updateChecker(props, params);\n        // inform attached board to rerender\n        if (equalityProps && context.mount()) {\n            if (updateProps) {\n                dispatchProps(context);\n            } else {\n                context.composition().visualGroup.remove();\n            }\n            context.render();\n        }\n        notifyAnimationEnd(context);\n    }, true);\n};\n\nexport const applyInteractionPolicy = (firebolt) => {\n    const canvas = firebolt.context;\n    const visualGroup = canvas.composition().visualGroup;\n    if (visualGroup) {\n        const valueMatrix = visualGroup.matrixInstance().value;\n        const interactionPolicy = firebolt._interactionPolicy;\n        interactionPolicy(valueMatrix, firebolt);\n        const crossInteractionPolicy = firebolt._crossInteractionPolicy;\n        const behaviours = crossInteractionPolicy.behaviours;\n        const sideEffects = crossInteractionPolicy.sideEffects;\n        valueMatrix.each((cell) => {\n            const unitFireBolt = cell.valueOf().firebolt();\n            for (const key in behaviours) {\n                unitFireBolt.changeBehaviourStateOnPropagation(key, behaviours[key]);\n            }\n            for (const key in sideEffects) {\n                unitFireBolt.changeSideEffectStateOnPropagation(key, sideEffects[key]);\n            }\n        });\n    }\n};\n\n/**\n * Sets the rotation for all x axes if any axis has the rotation config set in the\n * entire view\n *\n * @param {Array} columns Column cells that contain the axes cells\n */\nexport const setLabelRotationForAxes = (context) => {\n    let rotation = 0;\n\n    const xAxes = context.xAxes() || [];\n\n    (() => {\n        for (let i = 0; i < xAxes.length; i++) {\n            for (let j = 0; j < xAxes[i].length; j++) {\n                const rotationVal = xAxes[i][j].renderConfig().labels.rotation;\n                if (rotationVal && rotationVal !== 0) {\n                    rotation = rotationVal;\n                    return;\n                }\n            }\n        }\n    })();\n\n    if (rotation) {\n        xAxes.forEach((axes) => {\n            axes.forEach((axis) => {\n                axis.renderConfig({ labels: { rotation } });\n                axis.smartTicks(axis.setTickConfig());\n            });\n        });\n    }\n};\n\nexport const createGroupState = (context) => {\n    const [globalState, localState] = VisualGroup.getState();\n    const store = context._store;\n    store.append('app.group', globalState);\n    store.append('local.group', localState);\n};\n\nexport const removeChild = (mount) => {\n    while (mount.firstChild) {\n        mount.removeChild(mount.firstChild);\n    }\n};\n\nexport const createLayoutManager = () => {\n    const layoutManager = new LayoutManager({\n        className: 'muze-group-container'\n    });\n    return layoutManager;\n};\n","/**\n * This is the global options semantics based on which setters getters are created and reactivity is initiated.\n * Format\n *  PROPERTRY_NAME: {\n *      value: // default value of the property,\n *      meta: {\n *          typeCheck: // The setter value will be checked using this. If the value is function then the setter value\n *                     // is passed as args.\n *          typeExpected: // The output of typecheck action will be tested against this. Truthy value will set the\n *                       // value to the setter\n *          sanitizaiton: // Need for sanitization before type is checked\n *      }\n *  }\n * @module GlobalOptions\n */\n\nimport { intSanitizer, mergeRecursive, DataModel } from 'muze-utils';\nimport { fixScrollBarConfig } from './canvas/helper';\nimport { DEFAULT_CONFIG } from './defaults';\n\nexport default {\n    data: {\n        value: null,\n        meta: {\n            typeCheck: d => d instanceof DataModel\n        }\n    },\n    width: {\n        value: 0,\n        meta: {\n            sanitization: intSanitizer,\n            typeCheck: Number.isInteger\n        }\n    },\n    height: {\n        value: 0,\n        meta: {\n            sanitization: intSanitizer,\n            typeCheck: Number.isInteger\n        }\n    },\n    minUnitWidth: {\n        value: 50,\n        meta: {\n            sanitization: intSanitizer,\n            typeCheck: Number.isInteger\n        }\n    },\n    minUnitHeight: {\n        value: 50,\n        meta: {\n            sanitization: intSanitizer,\n            typeCheck: Number.isInteger\n        }\n    },\n    config: {\n        value: null,\n        meta: {\n            typeCheck: 'constructor',\n            typeExpected: 'Object',\n            sanitization: (config, oldConfig) => {\n                // Reset the configuration when null is passed\n                const oldConf = mergeRecursive({}, config === null ? {} : oldConfig);\n                const defConfig = mergeRecursive(oldConf, DEFAULT_CONFIG);\n                let newConf = mergeRecursive(defConfig, config);\n                newConf = fixScrollBarConfig(newConf);\n\n                return newConf;\n            }\n\n        }\n    }\n};\n","import { sanitizeIP, mergeRecursive } from 'muze-utils';\nimport { TOP, CENTER, BOTTOM } from '../enums/constants';\n\n/*\n * This is the abstract implementation of the root layout. This takes care of common work which all the layouts\n * has to handle. The common work includes sanitizaion of inputs, update, rerender, dispose etc. This class can't be\n * used directly (as ofcourse this is an abstract implementaiton), the class which is implementing it has to implement\n * the necessary methods and gives its on visual.\n */\n\n/**\n * This class is used to create a generic layout. It can be extended to create layouts\n * of different types\n * @class GenericLayout\n */\nexport default class GenericLayout {\n\n    /**\n     * Creates an instance of TableLayout.\n     * @param {HTMLElement} mountPoint DOM element/d3 selection where the layout is to be mounted\n     * @param {Object} measurement The dimensions of the layout\n     * @param {Object} config configuration to be given for the layout\n     * @param {Object} dependencies external dependencies.\n     *\n     * @memberof GenericLayout\n     *\n     */\n    constructor (mountPoint, measurement, config, dependencies) {\n        this._config = {};\n        this._measurement = {};\n        this._matrices = [];\n        // External dependencies to be included for the layout. This includes the ext global dependencies like\n        // smartlabel which has one single implementation of throughout the page or per isntance\n        this._dependencies = dependencies;\n\n        this.measurement(measurement);\n        this.mountPoint(mountPoint);\n        this.config(config);\n    }\n\n    /**\n     * Returns an object which is used to recreate the layout.\n     * @return {Object} the serialized components\n     */\n    serialize () {\n        return {\n            measurement: this.measurement(),\n            config: this.config(),\n            matrices: this.matrices()\n        };\n    }\n\n     /**\n     * Sets/Gets the config for the layout\n     * @param {Object} config configuration for the layout\n     * @return {Layout|Object} Gets the Config/ Returns this instance when set\n     */\n    config (config) {\n        if (config) {\n            this._config = mergeRecursive(this._config || {}, config);\n            this._config.border.width = Math.max(0, this._config.border.width);\n            return this;\n        }\n        return this._config;\n    }\n\n    /**\n     * Sets/Gets the measurement for the layout\n     * @param {Object} measurement measurement for the layout\n     * @return {Layout|Object} Gets the measurement/ Returns this instance when set\n     */\n    measurement (measurement) {\n        if (measurement) {\n            this._measurement = mergeRecursive(this._measurement || {}, measurement);\n\n            return this;\n        }\n        return this._measurement;\n    }\n\n    /**\n     * Sets/Gets the matrices for the layout\n     * @param {Object} matrices matrices for the layout\n     * @return {Layout|Object} Gets the matrices/ Returns this instance when set\n     */\n    matrices (matrices) {\n        if (matrices) {\n            this._matrices = sanitizeIP.typeObj([TOP, CENTER, BOTTOM], matrices);\n\n            return this;\n        }\n        return this._matrices;\n    }\n\n    /**\n     * Sets/Gets the matrix for row\n     * @param {Object} matrix matrices for the layout\n     * @return {Layout|Object} Gets the matrix/ Returns this instance when set\n     */\n    rowMatrix (matrix) {\n        if (matrix) {\n            this._rowMatrix = matrix;\n            return this;\n        }\n        return this._rowMatrix;\n    }\n\n    /**\n     * Sets/Gets the matrix for columns\n     * @param {Object} matrix matrices for the layout\n     * @return {Layout|Object} Gets the matrix/ Returns this instance when set\n     */\n    columnMatrix (matrix) {\n        if (matrix) {\n            this._columnMatrix = matrix;\n            return this;\n        }\n        return this._columnMatrix;\n    }\n\n   /**\n     * Sets/Gets the matrix for value\n     * @param {Object} matrix matrices for the layout\n     * @return {Layout|Object} Gets the matrix/ Returns this instance when set\n     */\n    centerMatrix (matrix) {\n        if (matrix) {\n            this._centerMatrix = matrix;\n            return this;\n        }\n        return this._centerMatrix;\n    }\n\n    /**\n     * Sets/Gets the mountPoint for the layout\n     * @param {Object} mountPoint mountPoint for the layout\n     * @return {Layout|Object} Gets the mountPoint/ Returns this instance when set\n     */\n    mountPoint (mountPoint) {\n        if (mountPoint) {\n            this._mountPoint = mountPoint;\n\n            return this;\n        }\n        return this._mountPoint;\n    }\n}\n","import * as FieldNames from '../enums/constants';\n\n/**\n * Default configuration of the layout\n * @return {Object} returns the default configuration\n */\nexport const DEFAULT_CONFIGURATION = {\n    [FieldNames.BORDER]: {\n        [FieldNames.STYLE]: 'solid',\n        [FieldNames.COLOR]: '#d6d6d6',\n        [FieldNames.WIDTH]: 2,\n        [FieldNames.COLLAPSE]: true,\n        [FieldNames.SPACING]: 0\n    },\n    [FieldNames.PAGINATION]: 'scroll',\n    [FieldNames.BUFFER]: 20,\n    [FieldNames.GUTTERSPACE]: { rows: [], columns: [] },\n    [FieldNames.DISTRIBUTION]: { rows: [], columns: [] },\n    [FieldNames.BREAK_PAGE]: { rows: [], columns: [] },\n    [FieldNames.ROW_SIZE_IS_EQUAL]: false,\n    [FieldNames.COLUMN_SIZE_IS_EQUAL]: false,\n    [FieldNames.COLUMN_POINTER]: 0,\n    [FieldNames.ROW_POINTER]: 0\n};\n\n/**\n * Default measurements for the layout\n * @return {Object} returns the default measurements\n */\nexport const DEFAULT_MEASUREMENTS = {\n    [FieldNames.GRID_WIDTH]: 100,\n    [FieldNames.GRID_HEIGHT]: 100,\n    [FieldNames.UNIT_WIDTH]: 100,\n    [FieldNames.UNIT_HEIGHT]: 100\n};\n\nexport const BLANK_BORDERS = 'rgba(0,0,0,0)';\n","/**\n * This file exports utility functions that are used across the layout module\n */\nimport { Symbols } from 'muze-utils';\nimport { PRIMARY, SECONDARY, HEIGHT, WIDTH } from '../enums/constants';\n\nconst nest = Symbols.nest;\n/**\n *\n *\n * @param {*} isTransposed\n *\n */\nconst getMeasureInfo = (isTransposed) => {\n    if (isTransposed) {\n        return {\n            firstMeasure: HEIGHT,\n            secondMeasure: WIDTH\n        };\n    }\n    return {\n        firstMeasure: WIDTH,\n        secondMeasure: HEIGHT\n    };\n};\n\n/**\n *\n *\n * @param {*} i\n * @param {*} page\n *\n */\nconst findInPage = (i, page) => {\n    let count = 0;\n    for (const x in page) {\n        if (i < page[x]) {\n            count = x;\n            break;\n        }\n    }\n    return count;\n};\n\n/**\n * Creates a single matrix from two matrices\n *\n * @param {Array<Array>} matrix Input matrix\n * @return {Array<Array>} Joined matrix\n * @memberof VisualMatrix\n */\nexport const combineMatrices = (matrix, config) => {\n    const { isTransposed } = config;\n    let joinedMatrix = matrix[0].length > 0 ? matrix[0] : matrix[1];\n    if (isTransposed) {\n        joinedMatrix = matrix[0].length > 0 ? [...matrix[0]] : [];\n        joinedMatrix = matrix[1].length > 0 ? [...joinedMatrix, ...matrix[1]] : joinedMatrix;\n    } else {\n        joinedMatrix = joinedMatrix.map((row, rowIndex) => {\n            let rowData = [];\n            if (matrix[0].length > 0) {\n                rowData = [...matrix[0][rowIndex]];\n            }\n            if (matrix[1].length > 0) {\n                rowData = [...rowData, ...matrix[1][rowIndex]];\n            }\n            return rowData;\n        });\n    }\n    return joinedMatrix;\n};\n\n/**\n * Creates a hirachical tree from the context\n *\n * @param {Object} context context for creating tree\n * @return {Object} nested tree\n */\nexport const createTree = (context) => {\n    let matrixTree = {};\n    let lastLevelKey = 0;\n    let facet = PRIMARY;\n    const nestFn = nest();\n    const keys = [];\n    const layoutMatrix = context._layoutMatrix;\n    const primaryMatrix = context.primaryMatrix();\n    const secondaryMatrix = context.secondaryMatrix();\n    const { isTransposed, breakPage } = context.config();\n\n    if (!isTransposed) {\n        if (primaryMatrix.length === 0) {\n            facet = PRIMARY;\n        } else if (secondaryMatrix.length === 0) {\n            facet = SECONDARY;\n        } else {\n            facet = primaryMatrix.length >= secondaryMatrix.length ? PRIMARY : SECONDARY;\n        }\n        if (primaryMatrix.length > 0) {\n            for (let i = 0; i < primaryMatrix[0].length - 1; i++) {\n                keys.push(i);\n            }\n            keys.push(primaryMatrix[0].length - 1);\n            if (facet === SECONDARY || secondaryMatrix.length === 0) {\n                lastLevelKey = primaryMatrix[0].length - 1;\n            }\n        }\n        if (secondaryMatrix.length > 0) {\n            const keyLength = primaryMatrix.length > 0 ? primaryMatrix[0].length : 0;\n            for (let i = secondaryMatrix[0].length - 1; i > 0; i--) {\n                keys.push(i + keyLength);\n            }\n            keys.push(keyLength);\n\n            if (facet === PRIMARY) {\n                lastLevelKey = keyLength;\n            }\n        } else {\n            lastLevelKey = primaryMatrix.length > 0 ? primaryMatrix[0].length - 1 : 0;\n        }\n        keys.forEach((key) => {\n            let counter = -1;\n            return nestFn.key((d) => {\n                counter++;\n                return `${d[key].valueOf()}-${findInPage(counter, breakPage)}`;\n            });\n        });\n        matrixTree = nestFn.entries(layoutMatrix);\n    } else {\n        if (primaryMatrix.length === 0) {\n            facet = PRIMARY;\n        } else if (secondaryMatrix.length === 0) {\n            facet = SECONDARY;\n        } else {\n            facet = primaryMatrix.length >= secondaryMatrix.length ? PRIMARY : SECONDARY;\n        }\n        if (primaryMatrix.length > 0) {\n            for (let i = 0; i < primaryMatrix.length - 1; i++) {\n                keys.push(i);\n            }\n            // if (facet === PRIMARY) {\n            keys.push(primaryMatrix.length - 1);\n            // } else {\n            if (facet === SECONDARY) {\n                lastLevelKey = primaryMatrix.length - 1;\n            }\n        }\n        if (secondaryMatrix.length > 0) {\n            const primaryMatrixLength = primaryMatrix.length;\n            for (let i = secondaryMatrix.length - 1; i > 0; i--) {\n                keys.push(i + primaryMatrixLength);\n            }\n            // if (facet === SECONDARY) {\n            keys.push(primaryMatrixLength);\n            // }\n            if (facet === PRIMARY) {\n                lastLevelKey = primaryMatrixLength;\n            }\n        }\n        keys.forEach((key) => {\n            let counter = -1;\n            return nestFn.key((d) => {\n                counter++;\n                return `${d[key].valueOf()}-${findInPage(counter, breakPage)}`;\n            });\n        });\n        let newMatrix = [];\n        newMatrix = layoutMatrix[0].map((col, colIndex) => layoutMatrix.map(row => row[colIndex]));\n        matrixTree = nestFn.entries(newMatrix);\n    }\n    return { tree: matrixTree, lastLevelKey };\n};\n\n/**\n * Gives the min measues\n *\n * @param {boolean} isTransposed is column matrix\n * @param {Object} unitMeasures min measures to be given to cells\n * @return {Object} dimension min cell\n */\nexport const getMinMeasures = (isTransposed, unitMeasures) => {\n    if (!isTransposed) {\n        return {\n            height: unitMeasures.height,\n            width: 0\n        };\n    }\n    return {\n        height: 0,\n        width: unitMeasures.width\n    };\n};\n\n/**\n * Get the logical space from the tree\n *\n * @param {Node} item tree to be calculated\n * @param {number} measures width and height\n * @param {Array} minMeasures min measures for a cell\n * @param {Array} maxMeasure max measures for a col/row\n * @return {Object} dimension\n */\nexport const getLogicalSpace = (item, measures, minMeasures, maxMeasure = []) => {\n    const { firstMeasure, secondMeasure } = measures;\n    let firstMeasureValue = 0;\n    let secondMeasureValue = 0;\n    item.values.forEach((valueArray) => {\n        let fMeasure = 0;\n        let sMeasure = 0;\n        valueArray.forEach((placeholder, colIndex) => {\n            placeholder.setAvailableSpace();\n            const space = placeholder.getLogicalSpace();\n            const minSecondMeasure = placeholder.getMinMeasures(minMeasures[secondMeasure]);\n\n            sMeasure = Math.max(sMeasure, +space[secondMeasure], minSecondMeasure);\n            maxMeasure[colIndex] = Math.max(maxMeasure[colIndex] || 0, space[firstMeasure]);\n            fMeasure += +maxMeasure[colIndex];\n        });\n        secondMeasureValue += sMeasure;\n        firstMeasureValue = Math.max(firstMeasureValue, fMeasure);\n        item.space = {\n            [secondMeasure]: Math.ceil(secondMeasureValue),\n            [firstMeasure]: Math.ceil(firstMeasureValue)\n        };\n    });\n    return {\n        [secondMeasure]: secondMeasureValue,\n        [firstMeasure]: firstMeasureValue\n    };\n};\n\n/**\n * Computes the logical spcae taken by the matrix tree\n *\n * @param {*} [item={}] tree to be viewed\n * @param {boolean} [isTransposed=false] is column matrix\n * @param {*} unitMeasures min measues for a cell\n * @param {Array} maxMeasure max measures for a col/row\n * @return {Object} logical space taken\n */\nexport const computeLogicalSpace = (item = {}, config, maxMeasures) => {\n    const { isTransposed = false, unitMeasures } = config;\n    const { firstMeasure, secondMeasure } = getMeasureInfo(isTransposed);\n    const { values } = item;\n    const minMeasures = getMinMeasures(isTransposed, unitMeasures);\n\n    if (values[0].key) {\n        const logicalSpace = { [firstMeasure]: 0, [secondMeasure]: 0 };\n\n        values.forEach((valueItem) => {\n            // Compute logical space for lowest level\n            const space = computeLogicalSpace(valueItem, config, maxMeasures);\n            // Set logical space for first measure\n            logicalSpace[firstMeasure] = Math.max(logicalSpace[firstMeasure], space[firstMeasure],\n                minMeasures[firstMeasure]);\n\n            // Set logical space for second measure\n            logicalSpace[secondMeasure] += +space[secondMeasure];\n        });\n        item.space = logicalSpace;\n        return logicalSpace;\n    }\n\n    return getLogicalSpace(item, { firstMeasure, secondMeasure }, minMeasures, maxMeasures);\n};\n\n/**\n * Gives the space taken by a row\n *\n * @param {Array} row matrix array of rows\n * @return {Object} dimension of the row\n */\nexport const spaceTakenByRow = (row) => {\n    let height = 0;\n    let width = 0;\n    row.forEach((col) => {\n        const spaces = col.getLogicalSpace();\n        height = Math.max(height, spaces.height);\n        width += spaces.width;\n    });\n    return {\n        width,\n        height\n    };\n};\n\n/**\n * Gives the space taken by a column\n *\n * @param {Array<Array>} matrix column matrix\n * @param {number} colIndex column index\n * @return {Object} dimension of the column\n */\nexport const spaceTakenByColumn = (matrix, colIndex) => {\n    let height = 0;\n    let width = 0;\n    matrix.forEach((row) => {\n        const col = row[colIndex];\n        const spaces = col.getLogicalSpace();\n        width = Math.max(width, spaces.width);\n        height += spaces.height;\n    });\n    return {\n        width,\n        height\n    };\n};\n\n/**\n * Creates different level matrices\n *\n * @param {Object} item matrix tree\n * @param {boolean} isTransposed is column matrix\n * @return {Object} matrix of each level\n */\nexport const createMatrixEachLevel = (item, isTransposed) => {\n    if (item.values[0].key) {\n        const arr = [];\n        item.values.forEach((child) => {\n            if (!isTransposed) {\n                arr.push(...createMatrixEachLevel(child, isTransposed));\n            } else {\n                const eachLevel = createMatrixEachLevel(child, isTransposed);\n                eachLevel.forEach((e, i) => {\n                    arr[i] = arr[i] || [];\n                    arr[i].push(...e);\n                });\n            }\n        });\n        item.matrix = arr;\n        return arr;\n    }\n    if (!isTransposed) {\n        item.matrix = item.values;\n    } else {\n        item.matrix = item.values[0].map((col, colIndex) => item.values.map(row => row[colIndex]));\n    }\n    return item.matrix;\n};\n\n/**\n * Breaks the matrix into two part\n *\n * @param {Array<Array>} matrix input matrix\n * @param {boolean} isTransposed is column matrix\n * @param {number} breakPointer point in matrix where it is to be broken\n * @return {Array} two broken matrix\n */\nexport const breakMatrix = (matrix, isTransposed, breakPointer) => {\n    const primaryMatrix = [];\n    const secondaryMatrix = [];\n    if (isTransposed) {\n        matrix.forEach((row, rowIndex) => {\n            if (rowIndex >= breakPointer) {\n                secondaryMatrix.push(row);\n            } else {\n                primaryMatrix.push(row);\n            }\n        });\n    } else {\n        matrix.forEach((row, rowIndex) => {\n            row.forEach((column, columnIndex) => {\n                if (columnIndex >= breakPointer) {\n                    secondaryMatrix[rowIndex] = secondaryMatrix[rowIndex] || [];\n                    secondaryMatrix[rowIndex].push(column);\n                } else {\n                    primaryMatrix[rowIndex] = primaryMatrix[rowIndex] || [];\n                    primaryMatrix[rowIndex].push(column);\n                }\n            });\n        });\n    }\n    return [primaryMatrix, secondaryMatrix];\n};\n\n/**\n * Distributed width returned\n *\n * @param {Object} context context for the width distibution\n * @return {number} distributed widths\n */\nexport const getDistributedWidth = (context, layoutConfig) => {\n    const {\n        availableWidth,\n        width,\n        row\n    } = context;\n    const {\n        isDistributionEqual,\n        isTransposed,\n        distribution\n    } = layoutConfig;\n    let distSum = 0;\n    if (distribution && distribution[0]) {\n        distSum = distribution.reduce((t, n) => {\n            t += n;\n            return t;\n        });\n    }\n    return row.map((col, colIndex) => {\n        const space = col.getLogicalSpace().width;\n        let distWidth = (space + (availableWidth - width) * (space / width));\n        if (isTransposed) {\n            if (distribution.length > 0) {\n                distWidth = (availableWidth * distribution[colIndex] / distSum);\n            } else if (isDistributionEqual || width === 0) {\n                const rowLen = row.length;\n                distWidth = (availableWidth / rowLen);\n            }\n        }\n        return Math.floor(distWidth);\n    });\n};\n\n/**\n * Distributeed heights returned\n *\n * @param {Object} context input for the height distribution\n * @return {Object} distribured heights\n */\nexport const getDistributedHeight = (context) => {\n    let distSum = 0;\n    let gutterSum = 0;\n    let heightWithoutGutter = 0;\n    const {\n        isTransposed,\n        distribution,\n        availableHeight,\n        height,\n        isDistributionEqual,\n        gutter,\n        matrix,\n        cIdx\n    } = context;\n\n    if (distribution && distribution[0] !== undefined) {\n        distSum = distribution.reduce((t, n) => {\n            t += n;\n            return t;\n        });\n    }\n    if (gutter && gutter[0] !== undefined) {\n        gutterSum = gutter.reduce((t, n) => {\n            t += n;\n            return t;\n        });\n    }\n    heightWithoutGutter = availableHeight - Math.floor(availableHeight * gutterSum);\n\n    const colLen = matrix.length;\n    return matrix.map((row, rIdx) => {\n        const col = row[cIdx];\n        const space = col.getLogicalSpace().height;\n        let distHeight = (space + (heightWithoutGutter - height) * (space / height));\n\n        if (!isTransposed) {\n            if (distribution.length > 0 && colLen === distribution.length) {\n                distHeight = (heightWithoutGutter * distribution[rIdx] / distSum);\n            } else if (isDistributionEqual || context.height === 0) {\n                distHeight = (heightWithoutGutter / colLen);\n            }\n        }\n        return Math.floor(distHeight);\n    });\n};\n\n/**\n *\n *\n * @param {*} arr\n * @param {*} beg\n * @param {*} end\n */\nexport const extraCellsRemover = (arr, beg, end) => arr.slice(beg, -end);\n\n/**\n * Creates matrix instancess\n *\n * @param {Array} [arr=[]] mutated arry\n * @param {number} depth depth of the tree\n * @param {Array} matrixInfo Details about the matrix(tree, etc) to be inserted\n * @param {boolean} layout Instance of layout\n */\nexport const createMatrixInstances = (arr = [], depth, matrixInfo, layout) => {\n    const breakPointer = layout._breakPointer;\n    const config = layout.config();\n    const {\n        isTransposed\n    } = config;\n    const {\n        tree,\n        layoutMatrix\n    } = matrixInfo;\n\n    if (depth === 0) {\n        const brokenMatrix = breakMatrix(tree.matrix, isTransposed, breakPointer);\n        arr.push({\n            matrix: tree.matrix,\n            primaryMatrix: brokenMatrix[0],\n            secondaryMatrix: brokenMatrix[1],\n            space: tree.space\n        });\n        return arr;\n    }\n    const nextLevel = depth - 1;\n    tree.values.forEach((e) => {\n        createMatrixInstances(arr, nextLevel, {\n            tree: e,\n            layoutMatrix\n        }, layout);\n    });\n    return arr;\n};\n","import { mergeRecursive } from 'muze-utils';\n\nexport const PROPS = {\n    config: {\n        sanitization: (context, value) => mergeRecursive(context._config || {}, value)\n    },\n    maxMeasures: {},\n    availableSpace: {},\n    logicalSpace: {}\n};\n","import { PRIMARY } from '../enums/constants';\n/**\n *\n *\n */\nexport const defaultConfig = {\n    distribution: [],\n    classPrefix: 'muze',\n    isDistributionEqual: true,\n    unitMeasures: {\n        height: 100,\n        width: 100,\n        border: 1\n    },\n    isTransposed: false,\n    facet: PRIMARY,\n    extraCellLengths: []\n};\n","import { mergeRecursive, generateGetterSetters, ERROR_MSG } from 'muze-utils';\nimport {\n    createTree,\n    combineMatrices,\n    createMatrixInstances\n  } from '../utils';\nimport { PROPS } from './props';\nimport { HEIGHT, WIDTH } from '../enums/constants';\nimport { defaultConfig } from './default-config';\n\n/**\n * This class used to create column / row matrix for GridLayout\n *\n * @class VisualMatrix\n */\nexport default class VisualMatrix {\n\n    /**\n     *Creates an instance of VisualMatrix.\n     * @param {any} matrix Two set of matrices\n     * @param {any} [config={}] Configuration for VisualMatrix\n     * @memberof VisualMatrix\n     */\n    constructor (matrix, config = {}) {\n        // Prepare matrices\n        this._lastLevelKey = 0;\n        this._primaryMatrix = matrix[0] || [];\n        this._secondaryMatrix = matrix[1] || [];\n        this._maxMeasures = [];\n        this._availableSpace = {};\n\n        // Store the config\n        generateGetterSetters(this, PROPS);\n        const defCon = Object.assign({}, this.constructor.defaultConfig());\n        this.config(mergeRecursive(defCon, config));\n\n        this._layoutMatrix = combineMatrices([matrix[0] || [], matrix[1] || []], this.config());\n    }\n\n     /**\n     * Computes the logical space taken by the entire matrixTree\n     *\n     * @return {Object} Logical space taken\n     * @memberof VisualMatrix\n     */\n    computeLogicalSpace () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    computeViewableSpaces () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    /**\n     *\n     *\n     * @return\n     * @memberof VisualMatrix\n     */\n    removeExtraCells () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    getPriorityDistribution () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    /**\n     * Calculates the depth of the tree that can be viewed\n     *\n     * @param {Array} widthMeasures array of widths\n     * @param {Array} heightMeasures array of heights\n     * @return {number} depth of the tree\n     * @memberof VisualMatrix\n     */\n    calculateDepth () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    /**\n     * Redistributes the provied space to all cells\n     *\n     * @param {*} viewableMatrix current viewport matrix\n     * @param {*} width provied width\n     * @param {*} height provied height\n     * @return {Object} current viewports matrixes with measures\n     * @memberof VisualMatrix\n     */\n    redistributeSpaces () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    /**\n     * Distibutes the given space row wisely\n     *\n     * @param {Object} measures Redistribution information\n     * @memberof VisualMatrix\n     */\n    redistributeViewSpaces () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    /**\n     * Dispatch the calculated cell dimensions to all the cells\n     *\n     * @param {Object} measures cell dimension information\n     * @return {Object} row and column heights / widths\n     * @memberof VisualMatrix\n     */\n    getCellDimensions () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    /**\n     *\n     *\n     * @param {*} params\n     * @returns\n     * @memberof VisualMatrix\n     */\n    primaryMatrix (...params) {\n        if (params.length) {\n            return this;\n        }\n        return this._primaryMatrix;\n    }\n\n    secondaryMatrix (...params) {\n        if (params.length) {\n            return this;\n        }\n        return this._secondaryMatrix;\n    }\n\n    tree (...params) {\n        if (params.length) {\n            return this;\n        }\n        return this._tree;\n    }\n\n    static defaultConfig () {\n        return defaultConfig;\n    }\n\n    createTree () {\n        const { tree, lastLevelKey } = createTree(this);\n        this._lastLevelKey = lastLevelKey;\n        return tree;\n    }\n\n    /**\n     * Returns the space taken by visual matrix\n     *\n     * @return {Object} space taken by the matrix\n     * @memberof VisualMatrix\n     */\n    getLogicalSpace () {\n        return this.logicalSpace();\n    }\n\n    /**\n     * Sets the provied space to the visual matrix\n     *\n     * @param {number} width width provided\n     * @param {number} height height provided\n     * @memberof VisualMatrix\n     */\n    setAvailableSpace (width, height) {\n        this.availableSpace({ width, height });\n        const tree = this.tree();\n        const heightMeasures = this.populateMaxMeasures(HEIGHT, tree);\n        const widthMeasures = this.populateMaxMeasures(WIDTH, tree);\n        const depth = this.calculateDepth(widthMeasures, heightMeasures);\n\n        this.viewableMatrix = this.createViewPortMatrix(depth);\n        this.viewableMeasures = this.redistributeSpaces(width, height);\n        return this;\n    }\n\n    /**\n     * Populate the max measures in the array\n     *\n     * @param {Array} measures array to be filled with max measures\n     * @param {Object} matrixTree matrix tree of visual matrix\n     * @param {number} measure width or height\n     * @param {number} [depth=0] depth of the tree that to be calculated\n     * @memberof VisualMatrix\n     */\n    populateMaxMeasures (type, matrixTree, depth = 0, measures = []) {\n        measures[depth] = Math.max(measures[depth] || 0, matrixTree.space[type]);\n        if (matrixTree.values) {\n            const childDepth = depth + 1;\n            matrixTree.values.forEach((child) => {\n                if (child.space) {\n                    measures = this.populateMaxMeasures(type, child, childDepth, measures);\n                }\n            });\n        }\n        return measures;\n    }\n\n    /**\n     * Gets the viewable measures for the current viewable matrix\n     *\n     * @return {Object} Set of viewable measures\n     * @memberof VisualMatrix\n     */\n    getViewableSpaces () {\n        return this.viewableMeasures;\n    }\n\n    /**\n     * Returns the matrix that can be viewed in the current viewport\n     *\n     * @return {Array} Set of matrices that can be viewed\n     * @memberof VisualMatrix\n     */\n    getViewableMatrices () {\n        return this.viewableMatrix;\n    }\n\n    /**\n     * Creates the viewport that can be viewed together\n     *\n     * @param {number} depth maxDepth that can be viewed in the viewport\n     * @return {Array<Object>} Set of matrices that can be viewed\n     * @memberof VisualMatrix\n     */\n    createViewPortMatrix (depth) {\n        const arr = [];\n        createMatrixInstances(arr, depth, this.removeExtraCells(), this);\n        return arr;\n    }\n}\n\n","import { mergeRecursive } from 'muze-utils';\nimport {\n    extraCellsRemover,\n    combineMatrices,\n    spaceTakenByColumn,\n    getDistributedHeight,\n    computeLogicalSpace,\n    createMatrixEachLevel\n  } from '../utils';\nimport { ROW_ROOT } from '../enums/constants';\nimport VisualMatrix from './visual-matrix';\n\n/**\n * This class used to create column / row matrix for GridLayout\n *\n * @class VisualMatrix\n */\nexport default class RowVisualMatrix extends VisualMatrix {\n\n    /**\n     *Creates an instance of VisualMatrix.\n     * @param {any} matrix Two set of matrices\n     * @param {any} [config={}] Configuration for VisualMatrix\n     * @memberof VisualMatrix\n     */\n    constructor (matrix, config = {}) {\n        super(matrix, config);\n\n        this._breakPointer = (matrix[0].length > 0 ? matrix[0][0].length : 0);\n        this._layoutMatrix = combineMatrices([matrix[0] || [], matrix[1] || []], this.config());\n\n        // Create Tree\n        this._tree = {\n            key: ROW_ROOT,\n            values: this.createTree()\n        };\n        this._logicalSpace = this.computeLogicalSpace();\n    }\n\n    /**\n     * Computes the logical space taken by the entire matrixTree\n     *\n     * @return {Object} Logical space taken\n     * @memberof VisualMatrix\n     */\n    computeLogicalSpace () {\n        const matrixTree = this.tree();\n        createMatrixEachLevel(matrixTree, false);\n        return computeLogicalSpace(matrixTree, this.config(), this.maxMeasures());\n    }\n\n    computeViewableSpaces (measures) {\n        const {\n            maxHeights,\n            maxWidths,\n            height\n        } = measures;\n        return this.viewableMatrix.map((matrixInst, i) => {\n            const cellDimOptions = { matrixInst, maxWidths, maxHeights, matrixIndex: i };\n            const { widths, rowHeights, columnWidths } = this.getCellDimensions(cellDimOptions);\n            const heightMeasures = [height, height];\n            const columnMeasures = widths;\n\n            return {\n                rowHeights: {\n                    primary: rowHeights[0],\n                    secondary: rowHeights[1]\n                },\n                columnWidths: {\n                    primary: columnWidths[0],\n                    secondary: columnWidths[1]\n                },\n                height: {\n                    primary: heightMeasures[0],\n                    secondary: heightMeasures[1]\n                },\n                width: {\n                    primary: columnMeasures[0],\n                    secondary: columnMeasures[1]\n                }\n            };\n        });\n    }\n\n    /**\n     *\n     *\n     * @return\n     * @memberof VisualMatrix\n     */\n    removeExtraCells () {\n        const {\n            isTransposed,\n            extraCellLengths\n        } = this.config();\n        const matrix = this._layoutMatrix;\n        const tree = mergeRecursive({}, this.tree());\n        const begCellLen = extraCellLengths[0];\n        const endCellLen = extraCellLengths[1] || Number.NEGATIVE_INFINITY;\n        const layoutMatrix = !isTransposed ? extraCellsRemover(matrix, begCellLen, endCellLen) :\n        matrix.slice(0).map(e => extraCellsRemover(e, begCellLen, endCellLen));\n\n        tree.values = extraCellsRemover(tree.values, begCellLen, endCellLen);\n        tree.matrix = extraCellsRemover(tree.matrix, begCellLen, endCellLen);\n\n        return {\n            tree,\n            layoutMatrix\n        };\n    }\n\n    getPriorityDistribution (measures) {\n        let remainingAvailWidth;\n        let remainingWidth;\n        let cWidths = [];\n        let conditions = [];\n        let maxPrioritySpace = 0;\n        const {\n            matrix,\n            width: availableWidth,\n            maxMeasures: maxWidths,\n            maxWidth: currentWidth,\n            height\n        } = measures;\n        const priority = this.config().priority;\n        const primaryMatrixLength = this.primaryMatrix().length ? this.primaryMatrix()[0].length : 0;\n\n        const dist = [];\n\n        remainingAvailWidth = availableWidth;\n        remainingWidth = currentWidth;\n\n        if (priority === 2) {\n            conditions = [primaryMatrixLength - 1, primaryMatrixLength];\n            // divider = Math.min(2, matrixLen);\n        } else {\n            conditions = priority === 0 ? [primaryMatrixLength - 1] : [primaryMatrixLength];\n            // divider = Math.min(1, matrixLen);\n        }\n        conditions.forEach((i) => {\n            dist[i] = maxWidths[i];\n            maxPrioritySpace += maxWidths[i];\n            remainingAvailWidth -= dist[i];\n            remainingWidth -= dist[i];\n        });\n        matrix[0].forEach((e, i) => {\n            if (conditions.indexOf(i) === -1) {\n                dist[i] = remainingAvailWidth * (maxWidths[i] / remainingWidth);\n            }\n        });\n        matrix.forEach(row => row.forEach((col, cIdx) => {\n            if (conditions.indexOf(cIdx) === -1) {\n                col.setAvailableSpace(dist[cIdx], height);\n\n                cWidths[cIdx] = Math.max(cWidths[cIdx] || 0, Math.floor(col.getLogicalSpace().width));\n            } else {\n                cWidths[cIdx] = 0;\n            }\n        }));\n\n        const prioritySpace = availableWidth - cWidths.reduce((t, n) => t + n);\n        if (prioritySpace < 0) {\n            cWidths = cWidths.map(() => 0);\n        } else {\n            conditions.forEach((i) => {\n                cWidths[i] = Math.floor(prioritySpace * (dist[i] / maxPrioritySpace || 1));\n            });\n        }\n        return cWidths;\n    }\n\n    /**\n     * Calculates the depth of the tree that can be viewed\n     *\n     * @param {Array} widthMeasures array of widths\n     * @param {Array} heightMeasures array of heights\n     * @return {number} depth of the tree\n     * @memberof VisualMatrix\n     */\n    calculateDepth (widthMeasures, heightMeasures) {\n        let i;\n        const { height } = this.availableSpace();\n\n        for (i = 0; i < heightMeasures.length; i++) {\n            if (heightMeasures[i] <= height) break;\n        }\n\n        return Math.min(widthMeasures.length - 1, i);\n    }\n\n    /**\n     * Redistributes the provied space to all cells\n     *\n     * @param {*} viewableMatrix current viewport matrix\n     * @param {*} width provied width\n     * @param {*} height provied height\n     * @return {Object} current viewports matrixes with measures\n     * @memberof VisualMatrix\n     */\n    redistributeSpaces (width, height) {\n        let maxHeights = [];\n        let maxWidths = [];\n        const maxMeasures = this.maxMeasures();\n\n        const maxWidth = maxMeasures.reduce((t, n) => {\n            t += n;\n            return t;\n        });\n        const logicalWidths = this.getPriorityDistribution({\n            matrix: this._layoutMatrix,\n            maxWidth,\n            maxMeasures,\n            width,\n            height\n        });\n\n        this.viewableMatrix.forEach((matrixInst) => {\n            const matrix = matrixInst.matrix;\n            const mWidth = 0;\n            const mHeight = 0;\n            const options = { mWidth, mHeight, matrix, width, height, maxHeights, maxWidths, logicalWidths };\n            const measures = this.redistributeViewSpaces(options);\n            maxWidths = measures.maxWidths;\n            maxHeights = measures.maxHeights;\n        });\n        return this.computeViewableSpaces({ height, width, maxHeights, maxWidths });\n    }\n\n    /**\n     * Distibutes the given space row wisely\n     *\n     * @param {Object} measures Redistribution information\n     * @memberof VisualMatrix\n     */\n    redistributeViewSpaces (measures) {\n        let cWidths = [];\n        let rHeights = [];\n        let mHeight = 0;\n        const maxMeasures = this.maxMeasures();\n\n        const {\n            isDistributionEqual,\n            distribution,\n            isTransposed,\n            gutter\n        } = this.config();\n        const { matrix, height, maxHeights, maxWidths, logicalWidths } = measures;\n        mHeight = spaceTakenByColumn(matrix, this._lastLevelKey).height;\n\n        const maxWidth = maxMeasures.reduce((t, n) => {\n            t += n;\n            return t;\n        });\n        measures.maxMeasures = maxMeasures;\n        measures.maxWidth = maxWidth;\n        if (maxWidth > 0) {\n            cWidths = logicalWidths;\n        } else {\n            cWidths = maxMeasures.map(() => 0);\n        }\n        rHeights = getDistributedHeight({\n            matrix,\n            cIdx: this._lastLevelKey,\n            height: mHeight,\n            availableHeight: height,\n            isDistributionEqual,\n            distribution,\n            isTransposed,\n            gutter\n        });\n        if (maxWidths.length > 0) {\n            cWidths = cWidths.map((e, i) => Math.max(e, maxWidths[0][i] || 0));\n        }\n        maxWidths.push(cWidths);\n        for (let x = 0; x < maxWidths.length; x++) {\n            maxWidths[x] = cWidths;\n        }\n        maxHeights.push(rHeights);\n        return { maxWidths, maxHeights };\n    }\n\n    /**\n     * Dispatch the calculated cell dimensions to all the cells\n     *\n     * @param {Object} measures cell dimension information\n     * @return {Object} row and column heights / widths\n     * @memberof VisualMatrix\n     */\n    getCellDimensions (measures) {\n        const {\n            unitMeasures\n        } = this.config();\n        const borderWidth = unitMeasures.border;\n        const { matrixInst, maxWidths, maxHeights, matrixIndex } = measures;\n        const matrix = matrixInst.matrix;\n        const rowHeights = [[0], [0]];\n        const columnWidths = [[0], [0]];\n        const heights = [0, 0];\n        const widths = [0, 0];\n        const breakPointer = this._breakPointer;\n\n        matrix.forEach((row, rIdx) => {\n            row.forEach((cell, cIdx) => {\n                const colHeight = maxHeights[matrixIndex][rIdx] || 0;\n                const colWidth = maxWidths[matrixIndex][cIdx];\n\n                cell.setAvailableSpace(colWidth, colHeight - borderWidth);\n\n                if (rIdx === 0 && cIdx < breakPointer) {\n                    columnWidths[0][cIdx] = colWidth;\n                    widths[0] = (widths[0] || 0) + colWidth;\n                } else if (rIdx === 0 && cIdx >= breakPointer) {\n                    columnWidths[1][cIdx - breakPointer] = colWidth;\n                    widths[1] = (widths[1] || 0) + colWidth;\n                }\n                if (cIdx === this._lastLevelKey) {\n                    rowHeights[0][rIdx] = colHeight;\n                    rowHeights[1][rIdx] = colHeight;\n                }\n            });\n        });\n        return {\n            heights,\n            widths,\n            rowHeights,\n            columnWidths\n        };\n    }\n}\n\n","import { mergeRecursive } from 'muze-utils';\nimport {\n    extraCellsRemover,\n    getDistributedWidth,\n    spaceTakenByRow,\n    createMatrixEachLevel,\n    computeLogicalSpace\n  } from '../utils';\nimport { COLUMN_ROOT } from '../enums/constants';\nimport VisualMatrix from './visual-matrix';\n\n/**\n * This class used to create column / row matrix for GridLayout\n *\n * @class VisualMatrix\n */\nexport default class ColumnVisualMatrix extends VisualMatrix {\n\n    /**\n     *Creates an instance of VisualMatrix.\n     * @param {any} matrix Two set of matrices\n     * @param {any} [config={}] Configuration for VisualMatrix\n     * @memberof VisualMatrix\n     */\n    constructor (matrix, config = {}) {\n        super(matrix, config);\n\n        this._breakPointer = matrix[0].length;\n\n        // Create Tree\n        this._tree = {\n            key: COLUMN_ROOT,\n            values: this.createTree()\n        };\n        this._logicalSpace = this.computeLogicalSpace();\n    }\n\n    /**\n     * Computes the logical space taken by the entire matrixTree\n     *\n     * @return {Object} Logical space taken\n     * @memberof VisualMatrix\n     */\n    computeLogicalSpace () {\n        const matrixTree = this.tree();\n        createMatrixEachLevel(matrixTree, true);\n        return computeLogicalSpace(matrixTree, this.config(), this.maxMeasures());\n    }\n\n    computeViewableSpaces (measures) {\n        const {\n            maxHeights,\n            maxWidths,\n            height,\n            width\n        } = measures;\n\n        return this.viewableMatrix.map((matrixInst, i) => {\n            const cellDimOptions = { matrixInst, maxWidths, maxHeights, matrixIndex: i, height };\n            const {\n                heights,\n                rowHeights,\n                columnWidths\n            } = this.getCellDimensions(cellDimOptions);\n            const heightMeasures = heights;\n            const columnMeasures = [width, width];\n\n            return {\n                rowHeights: {\n                    primary: rowHeights[0],\n                    secondary: rowHeights[1]\n                },\n                columnWidths: {\n                    primary: columnWidths[0],\n                    secondary: columnWidths[1]\n                },\n                height: {\n                    primary: heightMeasures[0],\n                    secondary: heightMeasures[1]\n                },\n                width: {\n                    primary: columnMeasures[0],\n                    secondary: columnMeasures[1]\n                }\n            };\n        });\n    }\n\n    /**\n     *\n     *\n     * @return\n     * @memberof VisualMatrix\n     */\n    removeExtraCells () {\n        const {\n            isTransposed,\n            extraCellLengths\n        } = this.config();\n        const matrix = this._layoutMatrix;\n        const tree = mergeRecursive({}, this.tree());\n        const begCellLen = extraCellLengths[0];\n        const endCellLen = extraCellLengths[1] || Number.NEGATIVE_INFINITY;\n        const layoutMatrix = !isTransposed ? extraCellsRemover(matrix, begCellLen, endCellLen) :\n        matrix.slice(0).map(e => extraCellsRemover(e, begCellLen, endCellLen));\n\n        tree.values = extraCellsRemover(tree.values, begCellLen, endCellLen);\n\n        tree.matrix = tree.matrix.map(e => extraCellsRemover(e, begCellLen, endCellLen));\n\n        return {\n            tree,\n            layoutMatrix\n        };\n    }\n\n    getPriorityDistribution (measures) {\n        const {\n            height,\n            maxHeights\n        } = measures;\n        let remainingHeight = height;\n        let heightDist = [];\n        let conditions = [];\n        let divider = 2;\n        const priority = this.config().priority;\n        const primaryMatrixLength = this.primaryMatrix().length;\n\n        if (priority === 2) {\n            conditions = [primaryMatrixLength - 1, primaryMatrixLength];\n            divider = 2;\n        } else {\n            conditions = priority === 0 ? [primaryMatrixLength - 1] : [primaryMatrixLength];\n            divider = 1;\n        }\n        maxHeights.forEach((heights, index) => {\n            if (conditions.indexOf(index) === -1) {\n                heightDist[index] = heights;\n                remainingHeight -= heights;\n            }\n        });\n        if (remainingHeight < 0) {\n            heightDist = heightDist.map(() => 0);\n        } else {\n            conditions.forEach((condition) => {\n                heightDist[condition] = Math.min(maxHeights[condition], (remainingHeight) / divider);\n            });\n        }\n        return heightDist;\n    }\n\n    /**\n     * Calculates the depth of the tree that can be viewed\n     *\n     * @param {Array} widthMeasures array of widths\n     * @param {Array} heightMeasures array of heights\n     * @return {number} depth of the tree\n     * @memberof VisualMatrix\n     */\n    calculateDepth (widthMeasures) {\n        let j;\n        const { width } = this.availableSpace();\n\n        for (j = 0; j < widthMeasures.length; j++) {\n            if (widthMeasures[j] <= width) break;\n        }\n        return Math.min(widthMeasures.length - 1, j);\n    }\n\n     /**\n     * Redistributes the provied space to all cells\n     *\n     * @param {*} viewableMatrix current viewport matrix\n     * @param {*} width provied width\n     * @param {*} height provied height\n     * @return {Object} current viewports matrixes with measures\n     * @memberof VisualMatrix\n     */\n    redistributeSpaces (width, height) {\n        let maxHeights = [];\n        let maxWidths = [];\n\n        this.viewableMatrix.forEach((matrixInst) => {\n            const matrix = matrixInst.matrix;\n            const mWidth = 0;\n            const mHeight = 0;\n            const options = { mWidth, mHeight, matrix, width, height, maxHeights, maxWidths };\n            const maxMeasures = this.redistributeViewSpaces(options);\n            maxWidths = maxMeasures.maxWidths;\n            maxHeights = maxMeasures.maxHeights;\n        });\n\n        return this.computeViewableSpaces({ height, width, maxHeights, maxWidths });\n    }\n\n    /**\n     * Distibutes the given space column wisely\n     *\n     * @param {Object} measures Redistribution information\n     * @memberof VisualMatrix\n     */\n    redistributeViewSpaces (measures) {\n        let rHeights = [];\n        const {\n            matrix,\n            width,\n            maxHeights,\n            maxWidths\n        } = measures;\n        const borderWidth = this.config().unitMeasures.border;\n\n        const mWidth = spaceTakenByRow(matrix[this._lastLevelKey]).width;\n        const cWidths = getDistributedWidth({\n            row: matrix[this._lastLevelKey],\n            width: mWidth,\n            availableWidth: width\n        }, this.config());\n\n        matrix.forEach((row, rIdx) => row.forEach((col, cIdx) => {\n            const oldLogicalSpace = col.getLogicalSpace();\n\n            col.setAvailableSpace(cWidths[cIdx] - borderWidth, oldLogicalSpace.height);\n\n            rHeights[rIdx] = Math.max(rHeights[rIdx] || 0, Math.floor(col.getLogicalSpace().height));\n        }));\n        if (maxHeights.length > 0) {\n            rHeights = rHeights.map((e, i) => Math.max(e, maxHeights[0][i]));\n        }\n        maxHeights.push(rHeights);\n        for (let x = 0; x < maxHeights.length; x++) {\n            maxHeights[x] = rHeights;\n        }\n        maxWidths.push(cWidths);\n        return { maxHeights, maxWidths };\n    }\n\n    /**\n     * Dispatch the calculated cell dimensions to all the cells\n     *\n     * @param {Object} measures cell dimension information\n     * @return {Object} row and column heights / widths\n     * @memberof VisualMatrix\n     */\n    getCellDimensions (measures) {\n        const {\n            unitMeasures\n        } = this.config();\n        const borderWidth = unitMeasures.border;\n        const { matrixInst, height, maxWidths, maxHeights, matrixIndex } = measures;\n        const matrix = matrixInst.matrix;\n        const rowHeights = [[0], [0]];\n        const columnWidths = [[0], [0]];\n        const heights = [0, 0];\n        const widths = [0, 0];\n        const breakPointer = this._breakPointer;\n\n        const heightDistribution = this.getPriorityDistribution({ height, maxHeights: maxHeights[0] || [] });\n\n        matrix.forEach((row, rIdx) => {\n            row.forEach((cell, cIdx) => {\n                const colHeight = heightDistribution[rIdx] || 0;\n                const colWidth = maxWidths[matrixIndex][cIdx];\n\n                cell.setAvailableSpace(colWidth - borderWidth, colHeight);\n\n                if (cIdx === 0 && rIdx < breakPointer) {\n                    rowHeights[0][rIdx] = colHeight;\n                    heights[0] = (heights[0] || 0) + colHeight;\n                } else if (cIdx === 0 && rIdx >= breakPointer) {\n                    rowHeights[1][rIdx - breakPointer] = colHeight;\n                    heights[1] = (heights[1] || 0) + colHeight;\n                }\n                if (rIdx === this._lastLevelKey) {\n                    columnWidths[0][cIdx] = colWidth;\n                    columnWidths[1][cIdx] = colWidth;\n                }\n            });\n        });\n        return {\n            heights,\n            widths,\n            rowHeights,\n            columnWidths\n        };\n    }\n}\n\n","import {\n    HEIGHT, WIDTH, COLUMN, ROW, HORIZONTAL, VERTICAL, HOLISTIC,\n    MAX_WIDTH_AVAIL_FOR_COL_MATRIX, COLUMN_MATRIX, MAX_HEIGHT_AVAIL_FOR_ROW_MATRIX, ROW_MATRIX, SCROLL\n} from '../enums/constants';\n\n/**\n * Gets measurement for an instance of visual matrix\n *\n * @param {Array} matrix instance of visual matrix\n * @param {string} type height/width\n * @return {Object} Logical height/width of the matrix\n */\nexport function getMatrixMeasurement (matrix, type) {\n    if (matrix) {\n        return matrix.getLogicalSpace()[type];\n    }\n    return 0;\n}\n\n/**\n * Sets available space for an instance of visual matrix\n *\n * @param {Array} matrix instance of visual matrix\n * @param {string} type height/width\n * @param {number} value Value of measurement\n */\nexport function setMatrixMeasurement (matrix, type, value) {\n    if (matrix) {\n        const spaces = matrix.getLogicalSpace();\n        if (value && spaces[type] !== value) {\n            type === HEIGHT ? matrix.setAvailableSpace(spaces.width, value) :\n                matrix.setAvailableSpace(value, spaces.height);\n        }\n    }\n}\n\nconst setAvailableSpace = (matrix, widths, heights) => {\n    matrix.forEach((row, rIdx) => {\n        row.forEach((placeholder, cIdx) => {\n            placeholder.setAvailableSpace(widths[cIdx], heights[rIdx]);\n        });\n    });\n};\n\nconst setViewSpaces = (layout, pointerType, viewSpaces) => {\n    let pointer = layout.config()[`${pointerType}Pointer`];\n    if (viewSpaces.length - 1 < pointer) {\n        pointer = 0;\n        layout.config({ [`${pointerType}Pointer`]: pointer });\n    }\n    return pointer;\n};\n\nconst paginationDetailsMap = {\n    column: {\n        maxMeasure: MAX_WIDTH_AVAIL_FOR_COL_MATRIX,\n        matrix: COLUMN_MATRIX,\n        measureType: WIDTH,\n        scrollType: HORIZONTAL\n    },\n    row: {\n        maxMeasure: MAX_HEIGHT_AVAIL_FOR_ROW_MATRIX,\n        matrix: ROW_MATRIX,\n        measureType: HEIGHT,\n        scrollType: VERTICAL\n    }\n};\n\n/**\n * This method provides the required width/height in the different pagination stages.\n * If the pagination is holistic, then only the max width/height will be provided for layouting\n * If scroll is enabled, then the entire width/height shall be provided for layouting\n * Note: width is required for scrolling the columns while height is required for scrolling rows\n *\n *\n * @param {Layout} layout Layout instance required for configuration details\n * @param {Object} measureDetails different measure details for row/column\n * @param {number} maxMeasure maximum width/height present for column/row respectively\n * @return {number} Provides the width/height based on which further calculation can occur\n */\nconst getMatrixMeasureForPagination = (layout, measureDetails, maxMeasure, buffer) => {\n    const {\n        pagination\n    } = layout.config();\n    const {\n        matrix,\n        measureType,\n        scrollType\n    } = measureDetails;\n\n    switch (pagination) {\n    case HOLISTIC:\n        return maxMeasure;\n    default: {\n        const actualMeasure = getMatrixMeasurement(layout[matrix](), measureType) + buffer;\n\n        if (actualMeasure > maxMeasure) {\n            layout.scrollInfo({ [scrollType]: true });\n        }\n        return Math.max(maxMeasure, actualMeasure);\n    }\n    }\n};\n\n/**\n * This method uses the getMatrixMeasureForPagination function to calculate maximum measure\n * depending on the layouting algorithm used\n *\n *\n * @param {Layout} layout Layout instance required for configuration details\n * @param {string} matrixType row/column\n * @param {number} relatedMaxMeasure maximum width/height present for column/row respectively\n * @return {number} Provides the width/height based on which further calculation can occur\n */\nconst paginationMeasureGetter = (layout, matrixType, relatedMaxMeasure, buffer) =>\n    getMatrixMeasureForPagination(layout, paginationDetailsMap[matrixType], relatedMaxMeasure, buffer);\n\nconst getMatrixWidthDetails = (layout) => {\n    const rowMatrix = layout.rowMatrix();\n    const {\n        width\n    } = layout.measurement();\n    const {\n        border,\n        buffer\n    } = layout.config();\n\n    // Border adjustment for each cell in the central matrix\n    const borderWidth = border.width;\n\n    // Get width of row matrix\n    const rowMatrixWidth = getMatrixMeasurement(rowMatrix, WIDTH);\n\n    // Get maximum width allowed for the row matrix\n    const maxRowMatrixWidth = Math.min(rowMatrixWidth + buffer, width / 2);\n\n    // Get maximum width available for the column matrix\n    const maxWidthAvailableForColumnMatrix = width - maxRowMatrixWidth - borderWidth;\n\n    // Set width for column matrix\n    const columnMatrixWidth = paginationMeasureGetter(layout, COLUMN, maxWidthAvailableForColumnMatrix, 0);\n\n    return {\n        rowMatrixWidth,\n        maxRowMatrixWidth,\n        columnMatrixWidth,\n        maxWidthAvailableForColumnMatrix\n    };\n};\n\nconst getHeightRequiredByColMatrix = (layout, columnMatrixWidth) => {\n    const {\n        height\n    } = layout.measurement();\n    const columnMatrix = layout.columnMatrix();\n\n    // Get maximum allowed height for colum matrix\n    const maxColumnMatrixHeight = Math.min(columnMatrix.getLogicalSpace().height, height / 2);\n\n    // Set the computed width and max height to column matrix to determine the actual height\n    // that will be taken by the column matrix\n    columnMatrix.setAvailableSpace(columnMatrixWidth, maxColumnMatrixHeight);\n\n    // Get the set of pages column view\n    const columnViewPages = columnMatrix.getViewableSpaces();\n\n    // Figuring out total space needed by current view space\n    const columnViewSpace = columnViewPages[layout.config().columnPointer];\n\n    // Getting height of column matrix\n    const columnMatrixHeight = columnViewSpace.height.primary + columnViewSpace.height.secondary;\n\n    return {\n        columnMatrixHeight,\n        maxColumnMatrixHeight\n    };\n};\n\nconst getMatrixHeightDetails = (layout, columnMatrixWidth) => {\n    const {\n        height\n    } = layout.measurement();\n    const {\n        buffer\n    } = layout.config();\n\n    // Get actual height required by column matrix\n    const { columnMatrixHeight, maxColumnMatrixHeight } = getHeightRequiredByColMatrix(layout, columnMatrixWidth);\n\n    // Based on column height, compute max height available for row matrix\n    const maxHeightAvailableForRowMatrix = height - Math.min(maxColumnMatrixHeight, columnMatrixHeight);\n\n    // Get height for row matrix\n    const rowMatrixHeight = paginationMeasureGetter(layout, ROW, maxHeightAvailableForRowMatrix, buffer);\n\n    return {\n        columnMatrixHeight,\n        maxColumnMatrixHeight,\n        rowMatrixHeight,\n        maxHeightAvailableForRowMatrix\n    };\n};\n\nconst setValueMatrixMeasurements = (layout, rowViewableSpaces, columnViewableSpaces) => {\n    const centerMatrix = layout.centerMatrix();\n\n    const {\n        border\n    } = layout.config();\n    const matrices = layout.matrices();\n    const {\n        top,\n        bottom\n    } = matrices;\n\n    // Border adjustment for each cell in the central matrix\n    const borderWidth = border.width;\n\n    // Get the heights for each cell in the row matrix\n    const rowHeights = [].concat(...rowViewableSpaces.map(e => e.rowHeights.primary));\n\n    // Get the widths for each of the row matrix cells(primary and secondary)\n    const rowWidthsPrimary = [].concat(...rowViewableSpaces.map(e => e.columnWidths.primary));\n    const rowWidthsSecondary = [].concat(...rowViewableSpaces.map(e => e.columnWidths.secondary));\n\n    // Get the widths for each cell in the column matrix\n    const columnWidths = [].concat(...columnViewableSpaces.map(e => e.columnWidths.primary));\n\n    // Get the widths for each of the column matrix cells(primary and secondary)\n    const columnHeightsPrimary = columnViewableSpaces[0].rowHeights.primary;\n    const columnHeightsSecondary = [].concat(...columnViewableSpaces.map(e => e.rowHeights.secondary));\n\n    // Setting the available space for each cell in the centre matrix computed throught the row and\n    // column matrices\n    centerMatrix.forEach((matrix, rIdx) => {\n        matrix.forEach((placeholder, cIdx) => {\n            placeholder.setAvailableSpace(columnWidths[cIdx] - borderWidth, rowHeights[rIdx] - borderWidth);\n        });\n    });\n\n    // Set the heights and widths for the corner matrices namely:\n    // TOP_LEFT\n    setAvailableSpace(top[0], rowWidthsPrimary, columnHeightsPrimary);\n    // TOP_RIGHT\n    setAvailableSpace(top[2], rowWidthsSecondary, columnHeightsPrimary);\n    // BOTTOM_LEFT\n    setAvailableSpace(bottom[0], rowWidthsPrimary, columnHeightsSecondary);\n     // BOTTOM_RIGHT\n    setAvailableSpace(bottom[2], rowWidthsSecondary, columnHeightsSecondary);\n};\n\nconst bufferCondition = {\n    isScroll: true,\n    pagination: SCROLL\n};\n\nconst getBufferFromCondition = (layout, type) => {\n    const scrollInfo = layout.scrollInfo();\n    const {\n        pagination\n    } = layout.config();\n\n    const currentBufferType = {\n        pagination,\n        isScroll: scrollInfo[type]\n    };\n\n    return Object.keys(bufferCondition).every(e => bufferCondition[e] === currentBufferType[e]);\n};\n\nconst getActualBufferFromConfig = (layout) => {\n    const {\n        buffer\n    } = layout.config();\n    const [horizontalBuffer, verticalBuffer] = [HORIZONTAL, VERTICAL].map((type) => {\n        if (getBufferFromCondition(layout, type)) {\n            return buffer;\n        }\n        return 0;\n    });\n\n    return {\n        horizontalBuffer,\n        verticalBuffer\n    };\n};\n/**\n * Computes the measurements of space for all matrices in the\n * layout\n *\n * @param {Object} layout Instance of grid layout\n * @return {Object} set of measurements for the layout\n */\nexport const computeLayoutMeasurements = (layout) => {\n    const rowMatrix = layout.rowMatrix();\n    const columnMatrix = layout.columnMatrix();\n\n    // Compute the widths of the row and column matrices\n    const {\n        rowMatrixWidth,\n        maxRowMatrixWidth,\n        maxWidthAvailableForColumnMatrix,\n        columnMatrixWidth\n    } = getMatrixWidthDetails(layout);\n\n    // Compute the heights of the row and column matrices\n    const {\n        columnMatrixHeight,\n        rowMatrixHeight,\n        maxHeightAvailableForRowMatrix\n    } = getMatrixHeightDetails(layout, columnMatrixWidth);\n\n    const {\n        horizontalBuffer,\n        verticalBuffer\n    } = getActualBufferFromConfig(layout);\n    rowMatrix.setAvailableSpace(maxRowMatrixWidth - verticalBuffer, rowMatrixHeight - horizontalBuffer);\n\n    // Get row and columns viewable spaces\n    const rowViewableSpaces = rowMatrix.getViewableSpaces();\n    const columnViewableSpaces = columnMatrix.getViewableSpaces();\n\n    // Set view spaces for row and columns\n    setViewSpaces(layout, ROW, rowViewableSpaces);\n    setViewSpaces(layout, COLUMN, columnViewableSpaces);\n\n    // Set measures for each cell of the value matrix\n    setValueMatrixMeasurements(layout, rowViewableSpaces, columnViewableSpaces);\n\n    return {\n        rowMatrixHeight: rowMatrixHeight - horizontalBuffer,\n        rowMatrixWidth: rowMatrixWidth - verticalBuffer,\n        maxHeightAvailableForRowMatrix: maxHeightAvailableForRowMatrix - horizontalBuffer,\n\n        columnMatrixHeight,\n        columnMatrixWidth,\n        maxWidthAvailableForColumnMatrix\n    };\n};\n","/**\n * Gets view matrices based on current pointers for row and column\n *\n * @param {Object} layout instance of layout\n * @param {number} rowPointer current row pointer\n * @param {number} columnPointer current column pointer\n * @return {Object} returns the view matrix and its relevant information\n */\nexport const getViewMatrices = (layout, rowPointer, columnPointer) => {\n    const rowMatrix = layout.rowMatrix();\n    const columnMatrix = layout.columnMatrix();\n    const centerMatrix = layout.centerMatrix();\n    const matrices = layout.matrices();\n    const rowMatrices = rowMatrix.getViewableMatrices();\n    const columnMatrices = columnMatrix.getViewableMatrices();\n    const centralMatrixPointer = {\n        row: 0,\n        column: 0\n    };\n\n    for (let i = rowPointer - 1; i >= 0; i--) {\n        const length = Math.max(rowMatrices[i].primaryMatrix.length,\n            rowMatrices[i].secondaryMatrix.length);\n        centralMatrixPointer.row += length;\n    }\n     /* istanbul ignore next */\n    for (let i = columnPointer - 1; i >= 0; i--) {\n        const matrix = columnMatrices[i];\n        const { primaryMatrix, secondaryMatrix } = matrix;\n        const length = Math.max(primaryMatrix[0] ? primaryMatrix[0].length : 0,\n            secondaryMatrix[0] ? secondaryMatrix[0].length : 0);\n        centralMatrixPointer.column += length;\n    }\n\n    matrices.top[1] = columnMatrices[columnPointer].primaryMatrix;\n    matrices.bottom[1] = columnMatrices[columnPointer].secondaryMatrix;\n\n    matrices.center[0] = rowMatrices[rowPointer].primaryMatrix;\n    matrices.center[2] = rowMatrices[rowPointer].secondaryMatrix;\n\n    const rowMatrixLen = Math.max(matrices.center[0].length, matrices.center[2].length);\n     /* istanbul ignore next */\n    const columnMatrixLen = Math.max(matrices.top[1][0] ? matrices.top[1][0].length : 0, matrices.bottom[1][0] ?\n            matrices.bottom[1][0].length : 0);\n    matrices.center[1] = centerMatrix.slice(centralMatrixPointer.row, centralMatrixPointer.row + rowMatrixLen)\n        .map(matrix => matrix.slice(centralMatrixPointer.column, centralMatrixPointer.column + columnMatrixLen));\n\n    return {\n        matrices,\n        rowPages: rowMatrices.length,\n        columnPages: columnMatrices.length\n    };\n};\n\nconst measureSum = measureArr => measureArr.reduce((total, measure) => total + measure, 0);\n/**\n * Returns measurements of the cells of the current matrix\n *\n * @param {Object} layout instance of layout\n * @return {Object} returns the measurements for current view matrix\n */\nexport const getViewMeasurements = (layout, maxRowHeight, maxColWidth) => {\n    const rowMatrix = layout.rowMatrix();\n    const columnMatrix = layout.columnMatrix();\n    const {\n        columnPointer,\n        rowPointer\n    } = layout.config();\n\n    const rowSpaces = rowMatrix.getViewableSpaces()[rowPointer];\n    const colSpaces = columnMatrix.getViewableSpaces()[columnPointer];\n\n    const {\n        rowHeights,\n        width: rowMatrixWidth\n    } = rowSpaces;\n    const {\n        columnWidths,\n        height: columnMatrixHeight\n    } = colSpaces;\n\n    const { primary: leftWidth, secondary: rightWidth } = rowMatrixWidth;\n    const { primary: topHeight, secondary: bottomHeight } = columnMatrixHeight;\n\n    const centerHeight = measureSum(rowHeights.primary);\n    const centerWidth = measureSum(columnWidths.primary);\n    const viewWidth = [leftWidth, Math.min(centerWidth, maxColWidth), rightWidth];\n    const viewHeight = [topHeight, Math.min(centerHeight, maxRowHeight), bottomHeight];\n\n    return {\n        viewWidth,\n        viewHeight,\n        actualCenterMeasures: {\n            height: centerHeight,\n            width: centerWidth\n        },\n        totalMeasures: {\n            width: measureSum(viewWidth),\n            height: measureSum(viewHeight)\n        },\n        unitHeights: rowHeights,\n        unitWidths: columnWidths\n    };\n};\n","/**\n * This file declares a table that can be extended to create a Datagrid, crosstab\n * and man other visualzations that require a tabular structure.\n */\n\nimport { getUniqueId, mergeRecursive } from 'muze-utils';\nimport GenericLayout from '../generic-layout';\nimport { DEFAULT_CONFIGURATION, DEFAULT_MEASUREMENTS } from './defaults';\nimport { generateVisualMatrices } from './layout-helper';\nimport { computeLayoutMeasurements } from './computations';\nimport { getViewMeasurements, getViewMatrices } from './view-info-getter';\n/**\n * This class is used to create a tabular structure that\n * can house charts and values.\n *\n * @class GridLayout\n */\nexport default class GridLayout extends GenericLayout {\n\n    /**\n     * Creates an instance of TableLayout.\n     * @param {HTMLElement} matrices Set of upto 9 matrices containing the cells to be rendered\n     * @param {HTMLElement} mountPoint DOM element/d3 selection where the layout is to be mounted\n     * @param {Object} measurement The dimensions of the layout\n     * @param {Object} config external configurations.\n     * @memberof GenericLayout\n     */\n    constructor (matrices, mountPoint, measurement, config) {\n        super(mountPoint, measurement, config);\n        this.matrices(matrices);\n        this.config(this.constructor.defaultConfig());\n        this._layoutId = getUniqueId();\n        this._scrollInfo = { horizontal: false, vertical: false };\n    }\n\n    static defaultViewInfo () {\n        return Object.assign({}, {\n            layoutDimensions: {\n                border: this.defaultConfig().border,\n                viewHeight: [0, 0, 0],\n                viewWidth: [0, 0, 0]\n            },\n            viewMatricesInfo: {\n                columnPages: 0,\n                rowPages: 0,\n                matrices: { top: [], center: [], bottom: [] }\n            }\n        });\n    }\n\n    /**\n     * Returns initial set of measurements for the grid layout\n     *\n     * @static\n     * @return {Object} Returns initial set of measurements\n     * @memberof GridLayout\n     */\n    static defaultMeasurement () {\n        return DEFAULT_MEASUREMENTS;\n    }\n\n    /**\n     * Returns initialconfiguration for grid layout\n     *\n     * @static\n     * @return {Object} Returns initial configuration for grid layout\n     * @memberof GridLayout\n     */\n    static defaultConfig () {\n        return DEFAULT_CONFIGURATION;\n    }\n\n    /**\n     * This function is used to return an instance of GridLayout\n     *\n     * @return {GridLayout} Instance of grid layout.\n     * @static\n     * @memberof GridLayout\n     */\n    static create () {\n        return new GridLayout(null, null, this.defaultMeasurement(), this.defaultConfig());\n    }\n\n    /**\n     * Sets/Gets the matrices for the layout\n     *\n     * @param {Array} matrices Set of matrices\n     * @return {Object} Getter/Setter\n     * @memberof GridLayout\n     */\n    matrices (matrices) {\n        if (matrices) {\n            this._matrices = generateVisualMatrices(this, matrices);\n            return this;\n        }\n        return super.matrices(matrices);\n    }\n\n    /**\n     * Triggers the computations for the layout based on the matrices available\n     * This causes a reflow in the entire layout system.\n     *\n     * @return {Object} Layout instance\n     * @memberof GridLayout\n     */\n    triggerReflow () {\n        this.scrollInfo({ horizontal: false, vertical: false });\n        const {\n            maxHeightAvailableForRowMatrix,\n            maxWidthAvailableForColumnMatrix\n        } = computeLayoutMeasurements(this);\n\n        this.setViewInformation(maxHeightAvailableForRowMatrix, maxWidthAvailableForColumnMatrix);\n        return this;\n    }\n\n    gotoPage (type, pageNumber) {\n        const pageType = type.toLowerCase();\n        const { viewMatricesInfo } = this.viewInfo();\n        const totalPages = viewMatricesInfo[`${pageType}Pages`];\n        const pointer = Math.min(Math.max(1, pageNumber), totalPages);\n        this.config({\n            [`${pageType}Pointer`]: pointer - 1\n        });\n        this.setViewInformation();\n        this.renderGrid();\n        return this;\n    }\n\n    pages (type) {\n        const { viewMatricesInfo } = this.viewInfo();\n        const pageType = type.toLowerCase();\n        return {\n            totalPages: viewMatricesInfo[`${pageType}Pages`],\n            currentPage: this.config()[`${pageType}Pointer`] + 1\n        };\n    }\n\n    viewInfo (...viewInfo) {\n        if (viewInfo.length) {\n            this._viewInfo = viewInfo[0];\n            return this;\n        }\n        return this._viewInfo;\n    }\n\n    scrollInfo (...scrollInfo) {\n        if (scrollInfo.length) {\n            this._scrollInfo = mergeRecursive(this._scrollInfo, scrollInfo[0]);\n            return this;\n        }\n        return this._scrollInfo;\n    }\n\n    /**\n     *\n     *\n     * @returns\n     * @memberof GridLayout\n     */\n    setViewInformation (maxRowHeight, maxColWidth) {\n        const {\n            rowPointer,\n            columnPointer,\n            border\n        } = this.config();\n        const viewMatricesInfo = getViewMatrices(this, rowPointer, columnPointer);\n        const layoutDimensions = getViewMeasurements(this, maxRowHeight, maxColWidth);\n        layoutDimensions.border = border;\n        this.viewInfo({\n            viewMatricesInfo,\n            layoutDimensions\n        });\n        return this;\n    }\n}\n","import RowMatrix from '../visual-matrix/row-matrix';\nimport ColumnMatrix from '../visual-matrix/column-matrix';\n\nexport const generateVisualMatrices = (context, matrices) => {\n    // Set of matrices for layout is generated starting with the left matrix\n    let leftMatrix = [];\n    let rightMatrix = [];\n    let topMatrix = [];\n    let bottomMatrix = [];\n    let begColCells;\n    let endColCells;\n    const {\n        isRowSizeEqual,\n        isColumnSizeEqual,\n        gutterSpace,\n        distribution,\n        border,\n        breakPage,\n        priority\n    } = context.config();\n    const {\n        minUnitHeight,\n        minUnitWidth\n    } = context.measurement();\n    const { top, center, bottom } = matrices;\n    const [topLeft, topColumns, topRight] = top;\n    const [leftRows, valueMatrix, rightRows] = center;\n    const [bottomLeft, bottomColumns, bottomRight] = bottom;\n\n    if (leftRows.length > 0) {\n        // If no left matrix is present, context will be empty\n        leftMatrix = [...topLeft, ...leftRows, ...bottomLeft];\n    }\n    if (rightRows.length > 0) {\n        // If no right matrix is present, context will be empty\n        rightMatrix = [...topRight, ...rightRows, ...bottomRight];\n    }\n    if (topColumns.length > 0 && topColumns[0].length > 0) {\n        // If no top matrix is present, context will be empty\n        topMatrix = topColumns.map((d, i) => [...topLeft[i], ...d, ...topRight[i]]);\n    }\n    if (bottomColumns.length > 0 && bottomColumns[0].length > 0) {\n        // If no bottom matrix is present, context will be empty\n        bottomMatrix = bottomColumns.map((d, i) => [...bottomLeft[i], ...d, ...bottomRight[i]]);\n    }\n\n    context.rowMatrix(new RowMatrix([leftMatrix, rightMatrix], {\n        isDistributionEqual: isRowSizeEqual,\n        distribution: distribution.rows,\n        gutter: gutterSpace.rows,\n        unitMeasures: {\n            width: minUnitWidth,\n            height: minUnitHeight,\n            border: border.width\n        },\n        priority: priority.row,\n        breakPage: breakPage.rows.map(e => e + Math.max(topLeft.length, topRight.length)),\n        extraCellLengths: [topLeft.length, bottomLeft.length]\n    }));\n\n    if (topLeft.length > 0) {\n        begColCells = topLeft[0].length;\n    } else {\n        begColCells = bottomLeft.length > 0 ? bottomLeft[0].length : 0;\n    }\n\n    if (topRight.length > 0) {\n        endColCells = topRight[0].length;\n    } else {\n        endColCells = bottomRight.length > 0 ? bottomRight[0].length : 0;\n    }\n\n    context.columnMatrix(new ColumnMatrix([topMatrix, bottomMatrix], {\n        isDistributionEqual: isColumnSizeEqual,\n        distribution: distribution.columns,\n        gutter: gutterSpace.columns,\n        isTransposed: true,\n        unitMeasures: {\n            width: minUnitWidth,\n            height: minUnitHeight,\n            border: border.width\n        },\n        priority: priority.col,\n        breakPage: breakPage.columns,\n        extraCellLengths: [begColCells, endColCells]\n    }));\n    context.centerMatrix(valueMatrix);\n\n    return matrices;\n};\n","import {\n    TOP, BOTTOM, LEFT, RIGHT, CENTER, BLANK_BORDERS, COLUMN, ROW,\n    VIEW_INDEX, ROW_MATRIX_INDEX, COLUMN_MATRIX_INDEX, MIDDLE, NO_BORDERS\n} from '../enums/constants';\n\nconst borderMap = {\n    [`${TOP}-${LEFT}`]: NO_BORDERS,\n    [`${TOP}-${MIDDLE}`]: COLUMN,\n    [`${TOP}-${RIGHT}`]: NO_BORDERS,\n    [`${CENTER}-${LEFT}`]: ROW,\n    [`${CENTER}-${MIDDLE}`]: CENTER,\n    [`${CENTER}-${RIGHT}`]: ROW,\n    [`${BOTTOM}-${LEFT}`]: NO_BORDERS,\n    [`${BOTTOM}-${MIDDLE}`]: COLUMN,\n    [`${BOTTOM}-${RIGHT}`]: NO_BORDERS\n};\n\nconst applySpecificBorder = (cells, color, type, style) => {\n    cells.style(`border-${type}`, `${style} ${color}`);\n};\n\nconst specificBorderApplier = (borderTypes, showBorders, cells, borderInfo) => {\n    const {\n        color,\n        width,\n        style\n    } = borderInfo;\n    const borderStyle = `${width}px ${style}`;\n\n    borderTypes.forEach((borderType) => {\n        applySpecificBorder(cells, showBorders[borderType] ? color : BLANK_BORDERS, borderType, borderStyle);\n    });\n};\n\nconst borderApplier = (cells, borderInfo) => {\n    const {\n       showRowBorders,\n      showColBorders,\n      showValueBorders\n  } = borderInfo;\n    return {\n        row: () => specificBorderApplier([TOP, BOTTOM], showRowBorders, cells, borderInfo),\n        column: () => specificBorderApplier([LEFT, RIGHT], showColBorders, cells, borderInfo),\n        center: () => specificBorderApplier([LEFT, RIGHT, TOP, BOTTOM], showValueBorders, cells, borderInfo)\n    };\n};\n\nexport const applyBorders = (cells, border, row, column) => {\n    const borderApplierFn = borderApplier(cells, border);\n    const borderMapVal = borderMap[`${ROW_MATRIX_INDEX[VIEW_INDEX[row]]}-${COLUMN_MATRIX_INDEX[column]}`];\n    if (borderMapVal) {\n        borderApplierFn[borderMapVal]();\n    }\n};\n","import { selectElement } from 'muze-utils';\nimport {\n     TOP, BOTTOM, ROW_SPAN, COL_SPAN, CENTER, ROW, COLUMN\n} from '../enums/constants';\n\nconst orderMaker = arr => Array.from(Array(arr.length).keys());\n\nconst nestByStack = (stack, updateArr, optionalParams = {}) => {\n    let {\n        order,\n        keyFn\n    } = optionalParams;\n    const arr = updateArr.slice();\n    const currStack = stack.slice();\n    const prevStack = currStack.slice();\n    // Order in which element are to be checked for nesting, default normal looping\n    // Order is always in the order of nest, i.e., left to right\n    order = order || Array.from(Array(arr.length).keys());\n\n    // Key function, if array of objects\n    keyFn = keyFn || (v => v);\n\n    // Return same array if stack is empty\n    if (currStack.length === 0) {\n        const newArr = [];\n        order.forEach((e) => {\n            newArr.push(arr[e]);\n        });\n        return { prevStack, currStack: arr, arr: newArr };\n    }\n\n    let arrVal = '';\n    let stackVal = '';\n    const newArr = [];\n\n    // Loop in order\n    for (let i = order.length - 1; i >= 0; i--) {\n        // Get current element index from the order given\n        const currElemIndex = order[i];\n\n        // Crete a hashmap for the hierarchy by joining strings of the array for both stack and input array\n        arrVal += keyFn(arr[currElemIndex]);\n        stackVal += keyFn(currStack[currElemIndex]);\n\n        // If the current value and value in stack is same, convert it to null\n        if (arrVal === stackVal) {\n            newArr[currElemIndex] = null;\n        } else {\n            stackVal = '';\n            // Loop from the current index in order to the last element in order to change the\n            // whole hierarchy\n            for (let j = i; j < order.length; j++) {\n                const newElem = order[j];\n                const arrElem = arr[newElem];\n\n                newArr[newElem] = arrElem;\n\n                // Reset stack to new stack\n                currStack[newElem] = arrElem;\n                stackVal = arrVal;\n            }\n        }\n    }\n    const returnArr = [];\n    order.forEach((e) => {\n        returnArr.push(newArr[e]);\n    });\n    return { prevStack, currStack, arr: returnArr };\n};\n\nconst spanCalculator = (colData, colIdx, matrix, rIdx) => {\n    // if data is not header cell then rowspan\n    // has to be 1\n    if (!colData) {\n        return () => null;\n    }\n\n    const conditions = {\n        row: count => matrix[rIdx + count] && matrix[rIdx + count][colIdx],\n        column: count => matrix[rIdx][colIdx + count]\n    };\n\n    return (type) => {\n        let count = 1;\n        let isNull = false;\n\n        while (!isNull) {\n            if (conditions[type](count) === null) {\n                count += 1;\n            } else {\n                isNull = true;\n            }\n        }\n        return count;\n    };\n};\n\nconst maskCreator = (matrix, order) => ({\n    row: () => {\n        let stack = [];\n        return matrix.map((e) => {\n            const {\n                    currStack,\n                    arr\n                } = nestByStack(stack, e, { keyFn: val => val.valueOf(), order });\n\n            stack = currStack;\n            return arr;\n        });\n    },\n    column: () => {\n        let stack = [];\n        const viewMatrix = [];\n        matrix.length && matrix[0].forEach((cell, colIndex) => {\n            const hierarchy = [];\n            matrix.forEach((row) => {\n                hierarchy.push(row[colIndex]);\n            });\n            const {\n                    currStack,\n                    arr\n                } = nestByStack(stack, hierarchy, { keyFn: val => val.valueOf(), order });\n            stack = currStack;\n\n            matrix.forEach((row, rowIndex) => {\n                viewMatrix[rowIndex] = viewMatrix[rowIndex] || [];\n                viewMatrix[rowIndex][colIndex] = arr[rowIndex];\n            });\n        });\n        return viewMatrix;\n    }\n});\n\nconst spanGenerator = viewMatrix => ({\n    row: () => {\n        const spans = [];\n        viewMatrix.forEach((row, ridx) => {\n            spans[ridx] = spans[ridx] || [];\n            row.forEach((col, i) => {\n                if (viewMatrix[ridx][i]) {\n                    const currSpan = spanCalculator(col, i, viewMatrix, ridx)('row');\n                    currSpan && spans[ridx].push(currSpan);\n                }\n            });\n        });\n        return spans;\n    },\n    column: () => viewMatrix.map((row, ridx) => row.map((col, i) => spanCalculator(col, i, viewMatrix, ridx)('column'))\n                    .filter(col => col !== null))\n});\n\nconst getOrder = () => ({\n    row: matrix => orderMaker(matrix[0]),\n    column: matrix => orderMaker(matrix)\n});\n\nconst matrixSpanGeneratorMap = {\n    [`${TOP}-1`]: {\n        orderGetter: getOrder()[COLUMN],\n        viewMatrixMaker: (...params) => maskCreator(...params)[COLUMN],\n        spanMaker: (...params) => spanGenerator(...params)[COLUMN]\n    },\n    [`${BOTTOM}-1`]: {\n        orderGetter: getOrder()[COLUMN],\n        viewMatrixMaker: (...params) => maskCreator(...params)[COLUMN],\n        spanMaker: (...params) => spanGenerator(...params)[COLUMN]\n    },\n    [`${CENTER}-0`]: {\n        orderGetter: getOrder()[ROW],\n        viewMatrixMaker: (...params) => maskCreator(...params)[ROW],\n        spanMaker: (...params) => spanGenerator(...params)[ROW]\n    },\n    [`${CENTER}-2`]: {\n        orderGetter: getOrder()[ROW],\n        viewMatrixMaker: (...params) => maskCreator(...params)[ROW],\n        spanMaker: (...params) => spanGenerator(...params)[ROW]\n    }\n};\n\nconst matrixSpanGenerator = (type) => {\n    const generator = matrixSpanGeneratorMap[type];\n    if (generator) {\n        return generator;\n    }\n    return {\n        orderGetter: () => null,\n        viewMatrixMaker: matrix => () => matrix,\n        spanMaker: () => () => null\n    };\n};\n\n/**\n * This function is used to set the col and row spans\n * for the matrices based on repeated/hierarchichal data\n *\n * @export\n * @param {Array} matrix The 2d array for which filtering is to be done\n * @param {string} type Type of array (center, top, bottom)\n * @param {number} index Index of array in the row\n * @return {Object} containing the view matrix and their spans\n */\nexport function cellSpanMaker (matrix, type, index) {\n    let spans = null;\n    let viewMatrix = matrix;\n    const {\n        orderGetter,\n        viewMatrixMaker,\n        spanMaker\n    } = matrixSpanGenerator(`${type}-${index}`);\n\n    if (matrix.length) {\n        const order = orderGetter(matrix);\n        viewMatrix = viewMatrixMaker(matrix, order)();\n        spans = spanMaker(viewMatrix)();\n    }\n    return { viewMatrix, spans };\n}\n\nconst spaceAllocationDueToSpan = (span = 1, placeholder, config, index) => {\n    const height = placeholder.availHeight();\n    const width = placeholder.availWidth();\n    const borderWidth = config.border.width;\n    const { unitWidths } = config.dimensions;\n    const { col } = index;\n\n    return {\n        [ROW_SPAN] () {\n            placeholder.setAvailableSpace(width, height * span);\n            if (span === 1) {\n                selectElement(this).style('height', `${height * span + borderWidth}px`);\n            }\n        },\n        [COL_SPAN] () {\n            const primaryUnitWidth = unitWidths.primary[col];\n            if (span > 1) {\n                let cumulativeWidth = 0;\n                for (let i = col; i < col + span; i++) {\n                    cumulativeWidth += unitWidths.primary[i] - borderWidth;\n                }\n                placeholder.setAvailableSpace(cumulativeWidth + borderWidth, height);\n            } else if (primaryUnitWidth) {\n                placeholder.setAvailableSpace(primaryUnitWidth - borderWidth, height);\n            }\n            selectElement(this).style('height', `${height}px`);\n        }\n    };\n};\n\nconst spanApplier = (cells, spans, config, type) => {\n    let cellCounter = 0;\n    cells.attr(type, function (cell, colIndex) {\n        if (colIndex === 0) {\n            cellCounter = 0;\n        }\n        const span = spans[cell.rowIndex][colIndex];\n        const placeholder = cell.placeholder;\n        const index = {\n            row: cell.rowIndex,\n            col: cellCounter\n        };\n\n        spaceAllocationDueToSpan(span, placeholder, config, index)[type].bind(this)();\n        cellCounter += span;\n        return span;\n    });\n};\n\nconst spanApplierMap = {\n    [`${TOP}-0`]: null,\n    [`${TOP}-1`]: (...params) => spanApplier(...params, COL_SPAN),\n    [`${TOP}-2`]: null,\n    [`${CENTER}-0`]: (...params) => spanApplier(...params, ROW_SPAN),\n    [`${CENTER}-1`]: null,\n    [`${CENTER}-2`]: (...params) => spanApplier(...params, ROW_SPAN),\n    [`${BOTTOM}-0`]: null,\n    [`${BOTTOM}-1`]: (...params) => spanApplier(...params, COL_SPAN),\n    [`${BOTTOM}-2`]: null\n};\n\nexport const applySpans = (cells, spans, config, type) => {\n    const applier = spanApplierMap[type];\n    if (applier) {\n        applier(cells, spans, config);\n    }\n};\n","import { ERROR_MSG } from 'muze-utils';\n/**\n * An Interface to be implemented if the transaction support is necessary. This class ensures reactivity to\n * global properties.\n */\nexport default class TransactionSupport {\n    /**\n     * Property accessor for data member of the class. Data is passed to the system by calling this method.\n     */\n    data () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPl);\n    }\n\n    /**\n     * Property accessor for width of the class. Width is passed as an integer.\n     */\n    width () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPl);\n    }\n\n    /**\n     * Property accessor for height of the class. Height is passed as an integer.\n     */\n    height () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPl);\n    }\n\n    /**\n     * Property accessor for config of the class. Config is passed as an object.\n     */\n    config () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPl);\n    }\n}\n","import { TOP, BOTTOM, LEFT, TITLE, SUB_TITLE, GROUP, LAYOUT, LEGEND } from '../constants';\n\n/**\n *\n *\n * @param {*} context\n *\n */\nexport const arrangeComponents = (context) => {\n    const legendConfig = context.config().legend;\n    const titleConfig = context.title()[1];\n    const subtitleConfig = context.subtitle()[1];\n    const titleLayouts = {\n        [`${TOP}-${TOP}`]: [TITLE, SUB_TITLE, GROUP],\n        [`${BOTTOM}-${BOTTOM}`]: [GROUP, SUB_TITLE, TITLE],\n        [`${TOP}-${BOTTOM}`]: [TITLE, GROUP, SUB_TITLE],\n        [`${BOTTOM}-${TOP}`]: [SUB_TITLE, GROUP, TITLE]\n    };\n    const legendLayouts = [\n        [LEGEND, LAYOUT],\n        [LAYOUT, LEGEND]\n    ];\n    const titlePosition = titleConfig.position || TOP;\n    const subtitlePosition = subtitleConfig.position || TOP;\n\n    return {\n        headers: titleLayouts[`${titlePosition}-${subtitlePosition}`],\n        legends: legendConfig.position === LEFT || legendConfig.position === TOP ?\n        legendLayouts[0] : legendLayouts[1]\n    };\n};\n","/**\n * Flag to specify whether direction is vertical.\n */\nexport const MARGIN = 'margin';\nexport const LEFT = 'left';\nexport const RIGHT = 'right';\nexport const BOTTOM = 'bottom';\nexport const TOP = 'top';\nexport const SPACE_FIXER = 'spaceFixer';\nexport const CLASSPREFIX = 'muze';\nexport const VERTICAL_ALIGN = 'verticalAlign';\nexport const TEXT_ALIGN = 'textAlign';\nexport const IS_OFFSET = 'isOffset';\nexport const MIDDLE = 'middle';\nexport const BASELINE = 'baseline';\nexport const SHOW = 'show';\nexport const CENTER = 'center';\nexport const TEXT = 'text';\nexport const HEADER = 'header';\nexport const HEIGHT = 'height';\nexport const WIDTH = 'width';\nexport const DATA = 'data';\nexport const AXES = 'axes';\nexport const FACET_BY_FIELDS = 'facetByFields';\nexport const FIELDS = 'fields';\nexport const TRANSFORM = 'transform';\nexport const LAYER_DEF = 'layerDef';\nexport const CONFIG = 'config';\nexport const DETAIL_FIELDS = 'detailFields';\nexport const MAX_LINES = 'maxLines';\nexport const MIN_CHARS = 'minCharacters';\nexport const ROTATION = 'rotation';\n\nexport const TEXT_CELL = 'text-cell';\nexport const AXIS_CELL = 'axis-cell';\nexport const GEOM_CELL = 'geom-cell';\nexport const BLANK_CELL = 'blank-cell';\n","// eneum to refer to simple cell\nexport const SIMPLE = 'simple';\n// eneum to refer to header cell\nexport const TEXT = 'text';\n// enum to refer to axis cell\nexport const AXIS = 'axis';\n// enum to refer to visual cell\nexport const GEOM = 'geom';\n// enum to refer blank cell\nexport const BLANK = 'blank';\n","import {\n    ERROR_MSG,\n    getUniqueId,\n    mergeRecursive\n} from 'muze-utils';\nimport { SIMPLE } from './enums/cell-type';\n\n/**\n * This file declares a class that is used as an interface to create new\n * SimpleCell elements.\n * @module SimpleCell\n */\n/**\n * Base class for all table cells.\n *\n * @interface\n * @class SimpleCell\n */\nclass SimpleCell {\n\n    /**\n     * Creates an instance of SimpleCell.\n     *\n     * @param {*} config The input configuration.\n     * @memberof SimpleCell\n     */\n    constructor (config) {\n        this._id = getUniqueId();\n\n        const defConfig = mergeRecursive({}, this.constructor.defaultConfig());\n        this._config = mergeRecursive(defConfig, config || {});\n\n        this._mount = null;\n    }\n\n    /**\n     * Returns the type of the placehlder.\n     *\n     * @readonly\n     * @memberof SimpleCell\n     */\n    get type () {\n        return SIMPLE;\n    }\n\n    /**\n     * Returns the type of the placehlder.\n     *\n     * @readonly\n     * @memberof SimpleCell\n     * @return {Object} Default config for the placeholder\n     */\n    static defaultConfig () {\n        return {};\n    }\n\n    /**\n     * Returns the value contained by the SimpleCell.\n     *\n     * @memberof SimpleCell\n     */\n    valueOf () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    /**\n     * Returns a unique identifier for the instance used\n     * to control selective rendering.\n     *\n     * @memberof SimpleCell\n     */\n    id () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    /**\n     * Returns a serialized representation of the instance.\n     *\n     * @memberof SimpleCell\n     */\n    serialize () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    /**\n     * Returns an object with width and height fields\n     * specifying the space taken up by this metod.\n     *\n     * @memberof SimpleCell\n     */\n    getLogicalSpace () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    /**\n     * Method used to set the space available to render the SimpleCell\n     *\n     * @param {number} width The available width.\n     * @param {number} height The available height.\n     * @memberof SimpleCell\n     */\n    setAvailableSpace () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    /**\n     * Render the SimpleCell inthe supplied mount point.\n     *\n     * @param {HTMLElement} mount The mount point to render in.\n     * @memberof SimpleCell\n     */\n    render () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    /**\n     * Render the SimpleCell inthe supplied mount point.\n     *\n     * @param {HTMLElement} mount The mount point to render in.\n     * @memberof SimpleCell\n     */\n    remove () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    getMinMeasures (providedMinMeasure = 0) {\n        return providedMinMeasure;\n    }\n\n}\n\nexport default SimpleCell;\n","/**\n * This file exports variables that are used as defaults for\n * the placeholders\n */\nimport * as CONSTANTS from './constants';\n\n /**\n * Default Configuration for the cells\n * @return {Object} Default configuration\n */\nexport const DEFAULT_CONFIG = {\n    [CONSTANTS.MARGIN]: {\n        [CONSTANTS.LEFT]: 0,\n        [CONSTANTS.RIGHT]: 0,\n        [CONSTANTS.TOP]: 0,\n        [CONSTANTS.BOTTOM]: 0\n    },\n    [CONSTANTS.SPACE_FIXER]: 2,\n    [CONSTANTS.IS_OFFSET]: false,\n    [CONSTANTS.VERTICAL_ALIGN]: null,\n    [CONSTANTS.TEXT_ALIGN]: CONSTANTS.CENTER,\n    [CONSTANTS.SHOW]: true,\n    [CONSTANTS.MAX_LINES]: 0,\n    [CONSTANTS.MIN_CHARS]: 0,\n    [CONSTANTS.ROTATION]: null\n};\n","import { mergeRecursive } from 'muze-utils';\nimport { GEOM, TEXT, AXIS, BLANK } from './enums/cell-type';\n\nconst DEFAULT_PROPS = {\n    mount: {},\n    availHeight: {},\n    availWidth: {},\n    config: {\n        sanitization: (context, value) => mergeRecursive(context._config, value)\n    },\n    logicalSpace: {},\n    minSpacing: {},\n    source: {}\n};\n\nconst geomProps = {\n    data: {},\n    caption: {},\n    config: {},\n    axes: {},\n    facetByFields: {},\n    fields: {},\n    transform: {},\n    layerDef: {},\n    detailFields: {}\n};\n\nconst textProps = {\n    smartText: {}\n};\nexport const PROPS = {\n    [GEOM]: mergeRecursive(geomProps, DEFAULT_PROPS),\n    [TEXT]: mergeRecursive(textProps, DEFAULT_PROPS),\n    [AXIS]: DEFAULT_PROPS,\n    [BLANK]: DEFAULT_PROPS\n};\n","/**\n * This file declares a class that represents a table cell\n * used to house an axis.\n * @module VisualCell\n */\nimport { selectElement, makeElement, generateGetterSetters } from 'muze-utils';\nimport { CLASSPREFIX, HEIGHT, WIDTH, AXIS_CELL, BOTTOM, TOP } from './enums/constants';\nimport SimpleCell from './simple-cell';\nimport { DEFAULT_CONFIG } from './enums/defaults';\nimport { AXIS } from './enums/cell-type';\nimport { PROPS } from './props';\n\n/**\n * Computes the logical space of the an axis instance within an axis cell\n *\n * @param {Object} context Required to get the needed parameters to compute axis space\n * @return {Object} Returns the logical space for axis\n */\nconst computeAxisSpace = (context) => {\n    let logicalWidth;\n    let logicalHeight;\n    const axis = context.source();\n    const {\n        spaceFixer,\n        margin\n    } = context.config();\n    const {\n        width,\n        height\n    } = axis.getLogicalSpace();\n    const {\n            show\n        } = axis.config();\n    if (show === true) {\n        logicalHeight = Math.floor(height + margin.top + margin.bottom + spaceFixer);\n        logicalWidth = Math.floor(width + margin.left + margin.right + spaceFixer);\n    } else {\n        [logicalWidth, logicalHeight] = [width, height];\n    }\n    return {\n        width: logicalWidth,\n        height: logicalHeight\n    };\n};\n\n/**\n * Represents an axis cell.\n *\n * @class Axis\n */\nclass AxisCell extends SimpleCell {\n\n    /**\n     * Creates an instance of AxisCell.\n     *\n     * @param {Object} config The input config.\n     * @memberof AxisCell\n     */\n    constructor (config) {\n        super(config);\n\n        this._axis = null;\n        this._availHeight = null;\n        this._availWidth = null;\n        this._logicalSpace = null;\n\n        generateGetterSetters(this, PROPS[AXIS]);\n    }\n\n    /**\n     * return the type pf SimpleCell cell.\n     *\n     * @readonly\n     * @memberof AxisCell\n     */\n    get type () {\n        return AXIS;\n    }\n\n    /**\n     * This method return the value conatined by this SimpleCell.\n     *\n     * @return {SimpleAxis | ColorAxis} Instance of SimpleAxis or ColorAxis.\n     * @memberof AxisCell\n     */\n    valueOf () {\n        return this.source().id;\n    }\n\n    /**\n     * This method return the unique identififer of the axis\n     *\n     * @return {string} Id of the axis.\n     * @memberof AxisCell\n     */\n    get id () {\n        return this._id;\n    }\n\n    /**\n     * Retrns the serialized representation of this cell.\n     *\n     * @return {Object}Object with serializable props.\n     * @memberof AxisCell\n     */\n    serialize () {\n        return {\n            type: AXIS,\n            axis: this.source().serialize()\n        };\n    }\n\n    /**\n     * return the default configuration for the text cell\n     *\n     * @static\n     * @return {Object} Default configuration of the cell\n     * @memberof AxisCell\n     */\n    static defaultConfig () {\n        return DEFAULT_CONFIG;\n    }\n\n    /**\n     * return the space taken up by an axis element in the dom.\n     *\n     * @return {Object} Object with width and height fields.\n     * @memberof AxisCell\n     */\n    getLogicalSpace () {\n        if (!this.logicalSpace()) {\n            this.logicalSpace(computeAxisSpace(this));\n        }\n        return this.logicalSpace();\n    }\n\n    /**\n     * This method is used to set the space availiable to render\n     * the SimpleCell.\n     *\n     * @param {number} width The width of SimpleCell.\n     * @param {number} height The height of SimpleCell.\n     * @return {Instance} Returns current Instance\n     * @memberof AxisCell\n     */\n    setAvailableSpace (width, height) {\n        this.availWidth(width);\n        this.availHeight(height);\n        const {\n            margin,\n            isOffset\n        } = this.config();\n\n        if (width || height) {\n            this.source().setAvailableSpace(width, height, margin, isOffset);\n            this.source().logicalSpace(null);\n        } else {\n            this.source().resetLogicalSpace();\n        }\n        this.logicalSpace(null);\n        return this;\n    }\n\n    /**\n     * This method is used to render the axis inside the axis cell.\n     *\n     * @param {HTMLElement} mount The mount point.\n     * @return {Selection} node where axis mounted\n     * @memberof AxisCell\n     */\n    /* istanbul ignore next */render (mount) {\n        if (!mount) {\n            return this;\n        }\n        let actualWidth = 0;\n        let actualHeight = 0;\n        const axis = this.source();\n        const availHeight = this.availHeight();\n        const availWidth = this.availWidth();\n        const {\n            margin\n        } = this.config();\n        const {\n            top,\n            bottom,\n            left,\n            right\n        } = margin;\n        const {\n            show,\n            orientation\n        } = axis.config();\n        const wrapperDiv = makeElement(selectElement(mount), 'div', [this], `${CLASSPREFIX}-${AXIS_CELL}`);\n        const selection = makeElement(wrapperDiv, 'svg', [1], `${CLASSPREFIX}-axis-container`);\n        selection.classed(`${CLASSPREFIX}-axis-container-${orientation}`, true);\n\n        this.mount(mount);\n        if (!availWidth) {\n            selection.attr(WIDTH, `${0}px`);\n        }\n        if (!availHeight) {\n            selection.attr(HEIGHT, `${0}px`);\n        }\n        actualWidth = availWidth;\n        actualHeight = availHeight;\n        if (!show) {\n            actualWidth = (orientation === TOP || orientation === BOTTOM) ? availWidth : 0;\n            actualHeight = (orientation === TOP || orientation === BOTTOM) ? 0 : availHeight;\n        }\n        wrapperDiv.style(WIDTH, `${actualWidth}px`)\n                        .style(HEIGHT, `${actualHeight}px`)\n                        .style('margin-top', top)\n                        .style('margin-bottom', bottom)\n                        .style('margin-left', left)\n                        .style('margin-right', right);\n\n        axis.mount(selection.node());\n        return selection;\n    }\n\n    /**\n     * Disposes the cell\n     *\n     * @return {Instance} Current instance of AxisCell\n     * @memberof AxisCell\n     */\n    remove () {\n        this.source() && this.source().remove();\n        this.mount() && this.mount().remove();\n        return this;\n    }\n}\n\nexport default AxisCell;\n\n","/**\n * This file declares a class that represents a BLANK element in a  table.\n * @module VisualCell\n */\nimport {\n    selectElement,\n    makeElement,\n    applyStyle,\n    generateGetterSetters\n    } from 'muze-utils';\nimport SimpleCell from './simple-cell';\nimport { CLASSPREFIX, BLANK_CELL } from './enums/constants';\nimport { BLANK } from './enums/cell-type';\nimport { DEFAULT_CONFIG } from './enums/defaults';\nimport { PROPS } from './props';\n\n/**\n * Represents a table haeder.\n *\n * @class BLANK\n */\nclass BlankCell extends SimpleCell {\n\n    /**\n     * Creates an instance of BLANK.\n     * @param {Object} config The input configuration.\n     * @memberof BLANK\n     */\n    constructor (config) {\n        super(config);\n\n        generateGetterSetters(this, PROPS[BLANK]);\n    }\n\n    /**\n     * return the type pf SimpleCell cell.\n     *\n     * @readonly\n     * @memberof BlankCell\n     */\n    get type () {\n        return BLANK;\n    }\n\n    /**\n     * This method return the value contained by this SimpleCell.\n     *\n     * @return {string} The text value contained by this cell.\n     * @memberof BlankCell\n     */\n    valueOf () {\n        return this.id;\n    }\n\n    /**\n     * return the default configuration for the text cell\n     *\n     * @static\n     * @return {Object} Default configuration of the cell\n     * @memberof BlankCell\n     */\n    static defaultConfig () {\n        return DEFAULT_CONFIG;\n    }\n\n    /**\n     * This method is used to return a unique identifier for\n     * the BLANK cell.\n     *\n     * @return {string} The unique identifier for the BLANK.\n     * @memberof BlankCell\n     */\n    get id () {\n        return this._id;\n    }\n\n    /**\n     * This method is used to obtain a serialized representation of this instance.\n     *\n     * @return {Object} Object with serilizable props.\n     * @memberof BLANK\n     */\n    serialize () {\n        return {\n            type: BLANK\n        };\n    }\n\n    /**\n     * This method return the space taken up\n     * by the text with the style applied.\n     *\n     * @return {Object} width and height taken up by the text.\n     * @memberof BLANK\n     */\n    getLogicalSpace () {\n        if (!this.logicalSpace()) {\n            return {\n                width: this.width || 0,\n                height: this.height || 0\n            };\n        }\n        return this.logicalSpace();\n    }\n\n    /**\n     * This method is used to set the available space.\n     *\n     * @param {number} width The available width.\n     * @param {number} height The available height.\n     * @return {Instance} Returns current Instance\n     * @memberof BlankCell\n     */\n    setAvailableSpace (width, height) {\n        this.availWidth(width);\n        this.availHeight(height);\n        this.logicalSpace(null);\n        return this;\n    }\n\n    /**\n     * This method is used to render the BLANK cell inside\n     * the provided mount point.\n     *\n     * @param {HTMLElement} mount The mount point for this cell.\n     * @return {Instance} Returns current Instance\n     * @memberof BLANK\n     */\n    /* istanbul ignore next */render (mount) {\n        if (mount) {\n            const { style } = this.config();\n            // append span element to mount point\n            this.mount(mount);\n            const container = selectElement(mount);\n            const elem = makeElement(container, 'div', [this.id]);\n            elem.classed(`${CLASSPREFIX}-${BLANK_CELL}`, true);\n            elem.style('width', `${this.availWidth()}px`);\n            elem.style('height', `${this.availHeight()}px`);\n            elem.html('');\n            // apply style on the returned element\n            if (style) {\n                applyStyle(elem, style);\n            }\n        } return this;\n    }\n\n    /**\n     * Removes the cell(Disposal)\n     *\n     * @return {Instance} Returns current Instance\n     * @memberof BlankCell\n     */\n    remove () {\n        this.mount() && this.mount().remove();\n        return this;\n    }\n\n    getMinMeasures () {\n        return 0;\n    }\n }\nexport default BlankCell;\n","/**\n * This file declares a class that represents a Text element in a  table.\n * @module VisualCell\n */\n\nimport {\n    selectElement,\n    makeElement,\n    getSmartComputedStyle,\n    generateGetterSetters\n} from 'muze-utils';\nimport SimpleCell from './simple-cell';\nimport { TEXT } from './enums/cell-type';\nimport { PROPS } from './props';\nimport { DEFAULT_CONFIG } from './enums/defaults';\nimport { CLASSPREFIX, TOP, BOTTOM, LEFT, RIGHT, HEADER, WIDTH, TEXT_CELL } from './enums/constants';\nimport './text-cell.scss';\n\nconst setSmartText = (context) => {\n    const source = context.source();\n    const {\n        height: minHeightSpace,\n        width: minWidthSpace\n    } = context.minSpacing();\n    const {\n       margin,\n       rotation\n   } = context.config();\n    const {\n        left,\n        right,\n        top,\n        bottom\n     } = margin;\n    const paddedHeight = top + bottom + minHeightSpace;\n    const paddedWidth = left + right + minWidthSpace;\n    const availHeight = context.availHeight() - paddedHeight;\n    const availWidth = context.availWidth() - paddedWidth;\n    const labelManager = context.dependencies().labelManager;\n\n    labelManager.setStyle(context._computedStyle);\n\n    !rotation && context.smartText(labelManager.getSmartText(source, availWidth, availHeight, false));\n    rotation && context.smartText(labelManager.getSmartText(source, availHeight, availWidth, true));\n\n    return context;\n};\n\n/**\n* Computes the Logical Space for the text\n*\n* @param {Object} context Required to get the needed parameters to compute text space\n* @return {Object} Logical space taken up by text\n* @memberof TextCell\n*/\nconst computeTextSpace = (context) => {\n    const { labelManager } = context.dependencies();\n    const {\n        height: minHeightSpace,\n        width: minWidthSpace\n    } = context.minSpacing();\n    const {\n       margin,\n       show,\n       maxLines,\n       minCharacters\n   } = context.config();\n    const {\n       left,\n       right,\n       top,\n       bottom\n    } = margin;\n    const paddedHeight = top + bottom + minHeightSpace;\n    const paddedWidth = left + right + minWidthSpace;\n    const availHeight = context.availHeight() - paddedHeight;\n    const availWidth = context.availWidth() - paddedWidth;\n    const source = context.source();\n    const space = context.smartText();\n    const minText = new Array(minCharacters).fill('W').join('');\n    const _minTextSpace = labelManager.getOriSize(minText);\n\n    context.config({ rotation: false });\n    if (space.width > (availWidth || 0) && maxLines) {\n        space.height = space.oriTextHeight * maxLines;\n    }\n    if (availWidth && availWidth < space.width) {\n        space.width = _minTextSpace.width;\n    }\n    if (availWidth && availWidth < Math.min(_minTextSpace.width, space.oriTextWidth)) {\n        const smartSpace = labelManager.getSmartText(source, availHeight, _minTextSpace.height, true);\n        space.width = smartSpace.height;\n        space.height = smartSpace.width;\n        context.config({ rotation: true });\n        context.smartText(smartSpace);\n    }\n\n    if (show) {\n        return {\n            width: Math.ceil(space.width) + paddedWidth,\n            height: Math.ceil(space.height) + paddedHeight\n        };\n    } return {\n        width: 0,\n        height: 0\n    };\n};\n\n/**\n * Represents a table haeder.\n *\n * @class Text\n */\nclass TextCell extends SimpleCell {\n\n    /**\n     * Creates an instance of Text.\n     * @param {Object} config The input configuration.\n     * @param {string} dependencies Dependencies for the class(labelManager)\n     * @memberof Text\n     */\n    constructor (config, dependencies) {\n        super(config);\n\n        this._dependencies = dependencies;\n        this._className = this._config.className ||\n                    (this._config.type === HEADER ? `${CLASSPREFIX}-${HEADER}-cell` : `${CLASSPREFIX}-${TEXT}-cell`);\n        this._computedStyle = getSmartComputedStyle(selectElement('body'), this._className);\n        this._dependencies.labelManager.setStyle(this._computedStyle);\n        generateGetterSetters(this, PROPS[TEXT]);\n        const space = this._dependencies.labelManager.getOriSize('w');\n        this.minSpacing({ width: Math.floor(space.width * 3 / 4), height: Math.floor(space.height / 2) });\n        setSmartText(this);\n    }\n\n    /**\n     * return the type pf SimpleCell cell.\n     *\n     * @readonly\n     * @memberof TextCell\n     */\n    get type () {\n        return TEXT;\n    }\n\n    /**\n     * This method return the value contained by this SimpleCell.\n     *\n     * @return {string} The text value contained by this cell.\n     * @memberof TextCell\n     */\n    valueOf () {\n        return this.source();\n    }\n\n    /**\n     * This method is used to return a unique identifier for\n     * the Text cell.\n     *\n     * @return {string} The unique identifier for the Text.\n     * @memberof TextCell\n     */\n    get id () {\n        return this._id;\n    }\n\n    /**\n     * Returns the dependencies of the instance\n     *\n     * @return {Object} Dependencies needed by the class\n     * @memberof TextCell\n     */\n    dependencies () {\n        return this._dependencies;\n    }\n\n    /**\n     * This method is used to obtain a serialized representation of this instance.\n     *\n     * @return {Object} Object with serilizable props.\n     * @memberof TextCell\n     */\n    serialize () {\n        return {\n            text: this.source(),\n            type: TEXT\n        };\n    }\n\n    /**\n     * return the default configuration for the text cell\n     *\n     * @static\n     * @return {Object} Default configuration of the cell\n     * @memberof TextCell\n     */\n    static defaultConfig () {\n        return DEFAULT_CONFIG;\n    }\n\n    /**\n     * This method return the space taken up\n     * by the text with the style applied.\n     *\n     * @return {Object} width and height taken up by the text.\n     * @memberof Text\n     */\n    getLogicalSpace () {\n        if (!this.logicalSpace()) {\n            this.logicalSpace(computeTextSpace(this));\n        }\n        return this.logicalSpace();\n    }\n\n    /**\n     * This method is used to set the available space.\n     *\n     * @param {number} width The available width.\n     * @param {number} height The available height.\n     * @return {Instance} Returns current Instance\n     * @memberof TextCell\n     */\n    setAvailableSpace (width, height) {\n        this.availWidth(width);\n        this.availHeight(height);\n        setSmartText(this);\n        this.logicalSpace(null);\n        return this;\n    }\n\n    /**\n     * This method is used to render the Text cell inside\n     * the provided mount point.\n     *\n     * @param {HTMLElement} mount The mount point for this cell.\n     * @return {Instance} Returns current Instance\n     * @memberof Text\n     */\n    render (mount) {\n        const availWidth = this.availWidth();\n        const availHeight = this.availHeight();\n        const {\n            margin,\n            show,\n            verticalAlign,\n            textAlign,\n            rotation\n        } = this.config();\n\n        this.mount(mount);\n        if (show) {\n            const container = selectElement(mount);\n            const elem = makeElement(container, 'div', [this.id], `${CLASSPREFIX}-${TEXT_CELL}`);\n            const vAlign = verticalAlign || rotation ? 'middle' : 'top';\n            const {\n                width,\n                height\n            } = this.smartText();\n            const {\n                height: minHeightSpace\n            } = this.minSpacing();\n            const translation = {\n                top: width + minHeightSpace / 2,\n                middle: width / 2 + minHeightSpace,\n                bottom: minHeightSpace\n            };\n\n            container.style('vertical-align', vAlign);\n\n            // Set class name\n            elem.classed(this._className, true);\n\n            // Apply styles\n            elem.style('text-align', textAlign);\n            elem.style('display', 'inline');\n            elem.style('transform', rotation ? `translate(${height / 2}px,\n                ${translation[vAlign]}px) rotate(-90deg)` : '');\n            elem.style(WIDTH, availWidth ? `${availWidth}px` : '100%');\n            [TOP, BOTTOM, LEFT, RIGHT].forEach((type) => {\n                container.style(`margin-${type}`, `${margin[type]}px`);\n            });\n            elem.style('text-align', textAlign);\n            elem.style('display', 'inline');\n            // set the text as the innerHTML\n            this._dependencies.labelManager.setStyle(this._computedStyle);\n            elem.html(this._dependencies.labelManager.getSmartText(this.source(), availWidth, availHeight, true).text);\n        }\n        return this;\n    }\n\n    /**\n     * Disposes the cell\n     *\n     * @return {Instance} Returns current Instance\n     * @memberof TextCell\n     */\n    remove () {\n        this.mount() && this.mount().remove();\n        return this;\n    }\n }\n\nexport default TextCell;\n","/**\n * This file declares a class that is used to represent a table cell\n * that houses a visual unit.\n * @module VisualCell\n */\n\nimport { selectElement, makeElement, generateGetterSetters } from 'muze-utils';\nimport SimpleCell from './simple-cell';\nimport { GEOM } from './enums/cell-type';\nimport { PROPS } from './props';\nimport {\n    CLASSPREFIX, HEIGHT, WIDTH, DATA, AXES, FACET_BY_FIELDS, FIELDS, TRANSFORM, LAYER_DEF, CONFIG, GEOM_CELL,\n    DETAIL_FIELDS\n} from './enums/constants';\nimport { DEFAULT_CONFIG } from './enums/defaults';\n\n/**\n * Calculates the logical space of the cell\n *\n * @param {Object} context Required to get the needed parameters to compute unit space\n * @return {Object} Logical space taken up by the unit\n * @memberof GeomCell\n */\nconst computeGeomSpace = (context) => {\n    const config = context.source().config();\n    const { width, height } = config;\n    return {\n        width: Math.ceil(width),\n        height: Math.ceil(height + context.getCaptionSpace().height)\n    };\n};\n\n /**\n * This class represents a SimpleCell for visual unit.\n *\n * @class GeomCell\n */\nclass GeomCell extends SimpleCell {\n\n    /**\n     * Creates an instance of GeomCell.\n     * @param {Object} config The input configuration.\n     * @memberof GeomCell\n     */\n    constructor (config) {\n        super(config);\n\n        this._unit = null;\n        this._layers = null;\n        this._axes = {};\n        this._datamodel = {};\n        this._facetByFields = {};\n        this._fields = null;\n        this._transform = null;\n        this._caption = null;\n\n        generateGetterSetters(this, PROPS[GEOM]);\n    }\n\n    /**\n     * return the type pf SimpleCell cell.\n     *\n     * @readonly\n     * @memberof GeomCell\n     */\n    get type () {\n        return GEOM;\n    }\n\n    /**\n     * This method return the value contained by this cell.\n     *\n     * @return {VisualUnit} Instance of visual unit contained by visual unit.\n     * @memberof GeomCell\n     */\n    valueOf () {\n        return this.source();\n    }\n\n    /**\n     * This method is used to return the id of the\n     * visual unit housed by this cell.\n     *\n     * @return {string} The unique id of the visual unit.\n     * @memberof GeomCell\n     */\n    get id () {\n        return this.source().id();\n    }\n\n    /**\n     * This method return a serialized representation of\n     * this instance.\n     *\n     * @return {Object} Object with serializable props.\n     * @memberof GeomCell\n     */\n    serialize () {\n        return {\n            type: GEOM,\n            unit: this.source().serialize(),\n            caption: this.caption()\n        };\n    }\n\n    /**\n     * return the default configuration for the geom cell\n     *\n     * @static\n     * @return {Object} Default configuration of the cell\n     * @memberof GeomCell\n     */\n    static defaultConfig () {\n        return DEFAULT_CONFIG;\n    }\n\n    /**\n     * Updates the model based on the changed parameters\n     *\n     * @return {Instance} return instance\n     * @memberof GeomCell\n     */\n    updateModel () {\n        const unit = this.source();\n        unit.clearCaching();\n        [LAYER_DEF, TRANSFORM, AXES, FIELDS, CONFIG, DATA, AXES, FACET_BY_FIELDS, DETAIL_FIELDS].forEach((prop) => {\n            this[prop]() && unit[prop](this[prop]());\n        });\n        return this;\n    }\n\n    /**\n     * It gives the space taken by the caption of the unit\n     *\n     * @return {Object} return the space taken by caption\n     * @memberof GeomCell\n     */\n    getCaptionSpace () {\n        const caption = this.caption();\n\n        let captionSpace = { width: 0, height: 0 };\n        if (caption) {\n            captionSpace = caption.getLogicalSpace();\n        }\n        return captionSpace;\n    }\n\n    /**\n     * return the space taken up by the element in the dom.\n     *\n     * @return {Object} Object with width and height fields.\n     * @memberof GeomCell\n     */\n    getLogicalSpace () {\n        if (!this.logicalSpace()) {\n            this.logicalSpace(computeGeomSpace(this));\n        }\n        return this.logicalSpace();\n    }\n\n    /**\n     * This method is used to set the space available to\n     * render the SimpleCell.\n     *\n     * @param {number} width The available width.\n     * @param {number} height The available height.\n     * @return {Instance} Returns current Instance\n     * @memberof GeomCell\n     */\n    setAvailableSpace (width, height) {\n        const unit = this.source();\n\n        this.availWidth(width);\n        this.availHeight(height);\n        unit.lockModel()\n            .width(width).height(height - this.getCaptionSpace().height)\n            .unlockModel();\n        this.logicalSpace(null);\n        return this;\n    }\n\n    /**\n     * his method is used to render the visual unit inside the provided cell.\n     *\n     * @param {HTMLElement} mount The mountpoint in the table.\n     * @return {Instance} Returns current Instance\n     * @memberof GeomCell\n     */\n    render (mount) {\n        if (mount) {\n            this.mount(mount);\n            const availHeight = this.availHeight();\n            const availWidth = this.availWidth();\n            const caption = this.caption();\n            const wrapperDiv = makeElement(selectElement(mount), 'div', [1], `${CLASSPREFIX}-${GEOM_CELL}`);\n\n            if (caption) {\n                const captionDom = makeElement(wrapperDiv, 'div', [caption], `${CLASSPREFIX}-unit-caption`).node();\n                caption.render(captionDom);\n            }\n            const selection = makeElement(wrapperDiv, 'div', [1], `${CLASSPREFIX}-unit`);\n            wrapperDiv.style(WIDTH, `${availWidth}px`).style(HEIGHT, `${availHeight}px`);\n            selection.style(WIDTH, `${availWidth}px`)\n                            .style(HEIGHT, `${availHeight - this.getCaptionSpace().height}px`);\n            this.source().mount(selection.node());\n        }\n        return this;\n    }\n\n    /**\n     * Disposes the cell\n     *\n     * @return {Object} Current instance\n     * @memberof GeomCell\n     */\n    remove () {\n        this.mount() && this.mount().remove();\n        this.source().remove();\n        return this;\n    }\n}\n\nexport default GeomCell;\n","import AxisCell from './axis-cell';\nimport BlankCell from './blank-cell';\nimport TextCell from './text-cell';\nimport GeomCell from './geom-cell';\nimport SimpleCell from './simple-cell';\n\nimport * as CONSTANTS from './constants';\n\nexport const DEFAULT_PLACEHOLDERS = {\n    [CONSTANTS.SIMPLE_CELL]: SimpleCell,\n    [CONSTANTS.TEXT_CELL]: TextCell,\n    [CONSTANTS.AXIS_CELL]: AxisCell,\n    [CONSTANTS.GEOM_CELL]: GeomCell,\n    [CONSTANTS.BLANK_CELL]: BlankCell\n};\n\n","export const SIMPLE_CELL = 'SimpleCell';\nexport const TEXT_CELL = 'TextCell';\nexport const AXIS_CELL = 'AxisCell';\nexport const BLANK_CELL = 'BlankCell';\nexport const GEOM_CELL = 'GeomCell';\n\n","import { DEFAULT_PLACEHOLDERS } from './defaults';\n\n/**\n * Creates a registry for the cells, which can be used for\n * setting a new cell or getting the registered cells\n *\n * @return {Object} Setters and getters for registered cells\n */\nconst cellRegistry = () => {\n    const reg = DEFAULT_PLACEHOLDERS;\n    return {\n        set: (key, def) => {\n            if (key in reg) {\n                reg[key] = def;\n            }\n            return cellRegistry;\n        },\n        get: () => reg\n    };\n};\nexport default cellRegistry;\n","import { TextCell } from '@chartshq/visual-cell';\nimport { escapeHTML } from 'muze-utils';\nimport { TOP } from '../constants';\n\n/**\n *\n *\n * @param {*} rawContent\n *\n */\nconst resolveTitleSubTitleContent = (rawContent) => {\n    if (typeof rawContent === 'function' && !rawContent._sanitize) {\n        return rawContent();\n    }\n    return escapeHTML(rawContent());\n};\n\n/**\n *\n *\n * @param {*} config\n * @param {*} cellType\n * @param {*} labelManager\n * @param {*} prevCell\n *\n */\nconst headerCreator = (config, cellType, labelManager, prevCell) => {\n    let margin = {};\n    const {\n        content,\n        classPrefix,\n        maxLines\n    } = config;\n    const cell = prevCell || new TextCell(\n        {\n            type: cellType === 'title' ? 'header' : 'text',\n            className: `${classPrefix}-${cellType}-cell`\n        }, {\n            labelManager\n        })\n     .config({ maxLines }).minSpacing({ width: 0, height: 0 });\n\n    cell.source(content);\n    cell._minTickDiff = { height: 0, width: 0 };\n\n    if (config.position === TOP) {\n        margin = { top: 0, bottom: config.padding };\n    } else {\n        margin = { top: config.padding, bottom: 0 };\n    }\n    cell.config({ margin });\n\n    return {\n        height: cell.getLogicalSpace().height,\n        cell\n    };\n};\n\n/**\n *\n *\n * @param {*} config\n * @param {*} type\n * @param {*} labelManager\n * @param {*} cell\n *\n */\nconst createHeading = (config, type, labelManager, prevCell) => {\n    if (!config) { return ''; }\n\n    return headerCreator(\n        config,\n        type,\n        labelManager,\n        prevCell\n    );\n};\n\n/**\n *\n *\n * @param {*} context\n */\nexport const createHeaders = (context, canvasHeight, canvasWidth) => {\n    let headerHeight = 0;\n    const headers = {};\n    const subtitle = context.subtitle();\n    const isSubtitle = resolveTitleSubTitleContent(subtitle[0]);\n\n    canvasHeight >= 200 && canvasWidth >= 200 && ['title', 'subtitle'].forEach((type) => {\n        const headerOptions = context[type]();\n        const content = resolveTitleSubTitleContent(headerOptions[0]);\n        if (content) {\n            const config = headerOptions[1];\n\n            config.width = context.width();\n            config.height = context.height();\n            config.classPrefix = context.config().classPrefix;\n            config.content = content;\n            config.padding = (type === 'title' && !isSubtitle.length) ? subtitle[1].padding : config.padding;\n\n            const { height, cell } = createHeading(config, type, context.dependencies().smartlabel,\n                context[`${type}Cell`]);\n\n            headers[`${type}Cell`] = cell;\n            context._composition[type] = cell;\n            headerHeight += height;\n        }\n    });\n    return { headerHeight, headers };\n};\n\n","import { TextCell, AxisCell } from '@chartshq/visual-cell';\nimport { getValueParser, retrieveFieldDisplayName, DataModel, getObjProp } from 'muze-utils';\nimport {\n    VERTICAL, HORIZONTAL, LEFT, RIGHT, LEGEND_TYPE_MAP, PADDING, BORDER, MARGIN\n} from '../constants';\n\n/**\n *\n *\n * @param {*} legendConfig\n * @param {*} canvases\n *\n */\nexport const legendCreator = (canvas) => {\n    let LegendCls;\n    const dataset = [];\n    const axes = canvas.getRetinalAxes();\n\n    Object.entries(axes).forEach((axisInfo) => {\n        const scale = axisInfo[1][0];\n        const scaleType = axisInfo[0];\n        const scaleProps = canvas[scaleType]();\n\n        if (scaleProps.field && scale) {\n            const {\n                type,\n                step\n            } = scale.config();\n\n            const stepMapper = typeof step === 'boolean' ? step : false;\n            LegendCls = LEGEND_TYPE_MAP[`${type}-${stepMapper}-${scaleType}`];\n            dataset.push({\n                scale,\n                canvas,\n                fieldName: scaleProps.field,\n                title: retrieveFieldDisplayName(canvas.data(), scaleProps.field),\n                LegendCls,\n                scaleType\n            });\n        }\n    });\n\n    return dataset;\n};\n\n/**\n *\n *\n * @param {*} legendConfig\n * @param {*} canvases\n * @param {*} measurement\n * @param {*} prevLegends\n *\n */\nexport const legendInitializer = (legendConfig, canvas, measurement, prevLegends) => {\n    const legends = [];\n    const {\n        height,\n        width,\n        headerHeight\n    } = measurement;\n    const {\n        position,\n        align\n    } = legendConfig;\n\n    const legendInfo = legendCreator(canvas);\n    const { invalidValues } = canvas.config();\n\n    const parser = getValueParser(invalidValues);\n    legendInfo.forEach((dataInfo, index) => {\n        const legendMeasures = {};\n        const {\n                LegendCls,\n                scale,\n                fieldName,\n                title: titleText,\n                scaleType\n            } = dataInfo;\n        const config = legendConfig[scaleType] || {};\n        const title = config.title || {};\n        title.text = title.text || titleText;\n        if (config.show) {\n            config.position = position;\n            config.align = align;\n            let legend = getObjProp(prevLegends[scaleType], index);\n            if (!legend) {\n                legend = LegendCls.create({\n                    labelManager: canvas._dependencies.smartlabel,\n                    cells: {\n                        AxisCell, TextCell\n                    }\n                });\n            }\n            legendMeasures.maxHeight = align === VERTICAL ? (height - headerHeight) : height * 0.2;\n            legendMeasures.maxWidth = align === HORIZONTAL ? width : width * 0.2;\n            legendMeasures.width = Math.min(legendMeasures.maxWidth, config.width);\n            legendMeasures.height = Math.min(legendMeasures.maxHeight, config.height);\n\n            [PADDING, BORDER, MARGIN].forEach((e) => {\n                legendMeasures[e] = config[e];\n            });\n            const metaData = legend.metaData();\n            if (metaData instanceof DataModel) {\n                metaData.dispose();\n            }\n            legend.scale(scale)\n                            .valueParser(parser)\n                            .title(title)\n                            .fieldName(fieldName)\n                            .config(config)\n                            .metaData(canvas.composition().visualGroup.getGroupByData().project([fieldName]))\n                            .measurement(legendMeasures)\n                            .canvasAlias(canvas.alias())\n                            .setLegendMeasures();\n\n            legends.push({ canvas, legend, scaleType });\n        }\n    });\n    return legends;\n};\n\n/**\n *\n *\n * @param {*} legends\n * @param {*} legendConfig\n * @param {*} availableHeight\n * @param {*} availableWidth\n *\n */\nexport const getLegendSpace = (legends, legendConfig, availableHeight, availableWidth) => {\n    const legendMeasures = legends.map(legendInfo => legendInfo.legend.measurement());\n    const legendSpace = { width: 0, height: 0 };\n\n    legendMeasures.forEach((space) => {\n        let height = 0;\n        let width = 0;\n        width = Math.min(space.width, space.maxWidth);\n        height = Math.min(space.height, space.maxHeight);\n\n        if (legendConfig.align === HORIZONTAL) {\n            if (legendSpace.width + width > availableWidth) {\n                legendSpace.width = availableWidth;\n                legendSpace.height += height;\n            } else {\n                legendSpace.width += width;\n                legendSpace.height = Math.max(legendSpace.height, height);\n            }\n        } else if (legendSpace.height + height > availableHeight) {\n            legendSpace.height = height;\n            legendSpace.width += width;\n        } else {\n            legendSpace.height += height;\n            legendSpace.width = Math.max(legendSpace.width, width);\n        }\n    });\n    if (legendConfig.align === HORIZONTAL) {\n        legendSpace.width = availableWidth;\n    }\n    return legendSpace;\n};\n\n/**\n *\n *\n * @param {*} context\n * @param {*} headerHeight\n *\n */\nexport const createLegend = (context, headerHeight, height, width) => {\n    const measurement = {\n        height,\n        width,\n        headerHeight\n    };\n    const { legend } = context.config();\n    const { show, position } = legend;\n\n    legend.classPrefix = context.config().classPrefix;\n    const align = (position === LEFT || position === RIGHT) ? VERTICAL : HORIZONTAL;\n\n    legend.show = show ? ((align === VERTICAL && width > 200) || (align === HORIZONTAL && height > 200)) : show;\n    legend.align = align;\n    return legendInitializer(legend, context, measurement, context.composition().legend || {});\n};\n","import { LayoutComponent } from '../../../../layout/src/tree-layout';\n\nexport default class MuzeComponent extends LayoutComponent {\n    getLogicalSpace () {\n        const { width, height } = this.boundBox();\n        return { width, height };\n    }\n\n    setSpatialConfig (conf) {\n        this.boundBox({ top: conf.y, left: conf.x });\n        this.newDimensions = {\n            width: conf.width,\n            height: conf.height\n        };\n        this.renderAt(conf.renderAt);\n    }\n\n    getBoundBox () {\n        return this.boundBox();\n    }\n\n    updateWrapper () {\n        throw Error('Update is not implemented');\n    }\n\n    setParams () {\n        throw Error('set params is not implemented');\n    }\n}\n","import { selectElement } from 'muze-utils';\nimport MuzeComponent from './muze-chart-component';\nimport { LEFT } from '../../constants';\n\nexport default class HeaderComponent extends MuzeComponent {\n    constructor (params) {\n        super(params.name, params.component.getLogicalSpace(), 0);\n        this.setParams(params);\n    }\n\n    renderHeader (container) {\n        const layoutConfig = this.params.config;\n        container = selectElement(container);\n        const { align } = layoutConfig;\n        const sel = container\n          .selectAll(`.${layoutConfig.classPrefix}-inner-container`)\n          .data([this.name]);\n        sel.exit().remove();\n        const selEnter = sel.enter().append('div');\n\n        const cont = selEnter.merge(sel);\n        cont.classed(`${layoutConfig.classPrefix}-inner-container`, true);\n        const { height, width } = this.boundBox();\n        this.component.setAvailableSpace(width, height);\n\n        this.component && this.component.render(cont.node());\n\n        cont.selectAll('div').classed(`${layoutConfig.classPrefix}-inner-content`, true);\n        cont.style('width', `${100}%`);\n\n        if (layoutConfig && this.component) {\n            cont.style('float', LEFT)\n                            .style('text-align', align);\n                            // .style(`padding-${position === TOP ? BOTTOM : TOP}`, `${padding}px`);\n        }\n    }\n\n    draw (container) {\n        this.renderHeader(container || document.getElementById(this.renderAt()));\n    }\n\n    updateWrapper (params) {\n        this.setParams(params);\n        this.name(params.name);\n        this.boundBox(params.component.getLogicalSpace());\n        return this;\n    }\n\n    setParams (params) {\n        this.component = params.component;\n        this.params = params;\n        this.target(params.config.target);\n        this.position(params.config.position);\n        this.className(params.config.className);\n        this.alignWith(params.config.alignWith);\n        this.alignment(params.config.alignment);\n    }\n\n    setSpatialConfig (conf) {\n        this.boundBox({ top: conf.y,\n            left: conf.x,\n            width: conf.width,\n            height: conf.height });\n        this.renderAt(conf.renderAt);\n    }\n}\n","import { makeElement, selectElement } from 'muze-utils';\nimport MuzeComponent from './muze-chart-component';\nimport {\n     LEFT, RIGHT, VERTICAL, HORIZONTAL, TOP, BOTTOM, HORIZONTAL_CENTER, VERTICAL_CENTER\n} from '../../constants';\nimport { ROW_MATRIX_INDEX, COLUMN_MATRIX_INDEX } from '../../../../layout/src/enums/constants';\n\nfunction defaultAlignmentHelper (position) {\n    let alignment = null;\n    const alignWith = `${ROW_MATRIX_INDEX[1]}-${COLUMN_MATRIX_INDEX[1]}`;\n    switch (position) {\n    case TOP:\n    case BOTTOM:\n        alignment = HORIZONTAL_CENTER;\n        break;\n    case LEFT:\n    case RIGHT:\n        alignment = VERTICAL_CENTER;\n        break;\n    default:\n        alignment = VERTICAL_CENTER;\n    }\n    return { alignment, alignWith };\n}\nexport default class LegendComponent extends MuzeComponent {\n    constructor (params) {\n        super(params.name, params.config.measurement.legendSpace, 0);\n        this.setParams(params);\n    }\n\n    renderLegend (container) {\n        container = selectElement(container);\n        const sectionComponents = [];\n        const { position, classPrefix } = this.params.config;\n        const legendMount = makeElement(container, 'div', [this.components],\n                                        `${classPrefix}-inner-content`, {}, d => d);\n        legendMount.classed(`${classPrefix}-legend`, true);\n        const align = (position === LEFT || position === RIGHT) ? VERTICAL : HORIZONTAL;\n        const legWidth = this.newDimensions.width;\n        const legHeight = this.newDimensions.height;\n\n        [container, legendMount].forEach((elem) => {\n            elem.style('width', `${Math.floor(legWidth)}px`)\n                            .style('height', `${legHeight}px`)\n                            .style('float', LEFT);\n        });\n\n        if (align === VERTICAL) {\n            let sections = -1;\n            let currHeight = legHeight;\n            let currWidth = 0;\n\n            this.components.forEach((legendInfo) => {\n                const leg = legendInfo.legend;\n                if (leg.measurement().height > currHeight) {\n                    sections++;\n                    currWidth = 0;\n                    currHeight = legHeight;\n                } else {\n                    sections < 0 && sections++;\n                }\n                sectionComponents[sections] = sectionComponents[sections] || [];\n                currHeight -= Math.min(leg.measurement().height, currHeight);\n                currWidth = Math.max(Math.min(leg.measurement().width, leg.measurement().maxWidth), currWidth);\n                sectionComponents[sections].push({\n                    legend: leg,\n                    legendHeight: legHeight,\n                    legendWidth: currWidth\n                });\n            });\n\n            const mount = makeElement(legendMount, ['div'], sectionComponents, `${classPrefix}-legend-section`);\n            // mount.each((d, i) => selectElement(this).classed(`${classPrefix}-legend-section-${i}`, true));\n            mount.classed(`${classPrefix}-legend-vertical-section`, true)\n                            .style('width', d => `${d[0].legendWidth}px`);\n            makeElement(mount, ['div'], d => d, `${classPrefix}-legend-components`, {}, d => d.legend.id())\n                            .each(function (d) {\n                                d.legend.mount(this);\n                            })\n                            .style('width', d => `${d.legendWidth}px`);\n        } else {\n            const mount = makeElement(legendMount, 'div', [1], `${classPrefix}-legend-section`);\n            mount.classed(`${classPrefix}-legend-horizontal-section`, true);\n            mount.classed(`${classPrefix}-legend-section-${0}`, true)\n                            .style('width', `${legWidth}px`);\n\n            makeElement(mount, 'div', this.components, `${classPrefix}-legend-components`, {}, d => d.legend.id())\n                            .each(function (d) { d.legend.mount(this); })\n                            .style('width', d => `${d.legend.measurement().width}px`);\n        }\n    }\n\n    draw (container) {\n        this.renderLegend(container || document.getElementById(this.renderAt()));\n    }\n\n    updateWrapper (params) {\n        this.name(params.name);\n        this.boundBox(params.config.measurement.legendSpace);\n        this.setParams(params);\n        return this;\n    }\n\n    setParams (params) {\n        this.components = params.component;\n        this.params = params;\n        this.target(params.config.target);\n        this.position(params.config.position);\n        const { alignWith, alignment } = defaultAlignmentHelper(params.config.position);\n        this.className(params.config.className);\n        this.alignWith(params.config.alignWith || alignWith);\n        this.alignment(params.config.alignment || alignment);\n    }\n\n}\n","import {\n    selectElement,\n    makeElement,\n    getD3Drag,\n    getEvent,\n    getWindow,\n    hasTouch\n} from 'muze-utils';\nimport './scroll-bar.scss';\nimport { WIDTH, HEIGHT } from '../../../constants';\n\nconst d3Drag = getD3Drag();\n\nconst arrowSizeMap = {\n    left: WIDTH,\n    right: WIDTH,\n    top: HEIGHT,\n    bottom: HEIGHT\n};\n\nexport const getUnitPositions = (unitMeasures, totalLength, viewLength) => {\n    let currentLen = 0;\n    const measures = unitMeasures.primary && unitMeasures.primary.length ?\n        unitMeasures.primary : unitMeasures.secondary;\n\n    return measures.map((e) => {\n        const unitPosition = currentLen * 100 / (totalLength - viewLength);\n        currentLen += e;\n        return unitPosition;\n    });\n};\n\nexport const createScrollBarArrow = (mount, type, config) => {\n    const {\n        classPrefix,\n        thickness\n    } = config;\n    const arrow = makeElement(mount, 'div', [type], `${classPrefix}-scroll-arrow-${type}`);\n\n    arrow.classed(`${classPrefix}-scroll-arrow`, true);\n    arrow.style(arrowSizeMap[type], `${thickness}px`);\n\n    const chevron = makeElement(arrow, 'div', [1], `${classPrefix}-scroll-arrow-chevron`);\n\n    chevron.attr('id', `${classPrefix}-scroll-arrow-chevron-${type}`);\n\n    return arrow;\n};\n\nexport const createScrollBarRect = (mount, config) => {\n    const {\n        classPrefix\n    } = config;\n    const rect = makeElement(mount, 'div', [1], `${classPrefix}-scroll-rect`);\n    const mover = makeElement(rect, 'div', [1], `${classPrefix}-scroll-mover`);\n\n    return { rect, mover };\n};\n\nexport const applyRectClick = (scrollMaker, moverRect) => {\n    const {\n        rect\n    } = moverRect;\n\n    rect.on('click', () => {\n        const event = getEvent();\n        scrollMaker.emptyScrollAreaClick(event);\n    });\n};\n\nconst applyMoverDrag = (scrollMaker, moverRect) => {\n    let startPos = {};\n    let moverStartPos = 0;\n    let rectStartPos = 0;\n    let endPos = {};\n    const {\n        mover,\n        rect\n    } = moverRect;\n\n    mover.call(d3Drag()\n                    .on('start', () => {\n                        const event = getEvent();\n\n                        moverStartPos = mover.node().getBoundingClientRect();\n                        rectStartPos = rect.node().getBoundingClientRect();\n                        startPos = {\n                            x: event.x,\n                            y: event.y\n                        };\n                    })\n                    .on('drag', () => {\n                        const event = getEvent();\n                        const window = getWindow();\n\n                        endPos = {\n                            x: event.x,\n                            y: event.y\n                        };\n                        const distanceMoved = {\n                            x: endPos.x - startPos.x,\n                            y: endPos.y - startPos.y\n                        };\n                        const actualPosition = {\n                            x: moverStartPos.x + distanceMoved.x - rectStartPos.x + window.pageXOffset,\n                            y: moverStartPos.y + distanceMoved.y - rectStartPos.y + window.pageYOffset\n                        };\n\n                        scrollMaker.changeMoverPosition(actualPosition);\n                    }));\n};\n\nconst applyScrollMouseDownAction = (moverRect, scrollMaker, speed) => {\n    const {\n        mover,\n        rect\n    } = moverRect;\n    const { x, y } = mover.node().getBoundingClientRect();\n    const { x: rectX, y: rectY } = rect.node().getBoundingClientRect();\n\n    scrollMaker.changeMoverPosition({ x: x - rectX + speed, y: y - rectY + speed });\n};\n\nconst registerListenerOnArrow = (scrollMaker, moverRect, arrowType, speed) => {\n    let timer = '';\n    const arrow = scrollMaker._components[arrowType];\n    const isTouchDevice = hasTouch();\n\n    arrow.on(isTouchDevice ? 'touchstart' : 'mousedown', () => {\n        const event = getEvent();\n\n        event.preventDefault();\n\n        timer = setInterval(() => {\n            applyScrollMouseDownAction(moverRect, scrollMaker, speed);\n        }, 100);\n    }).on(isTouchDevice ? 'touchend' : 'mouseup', () => {\n        const event = getEvent();\n\n        event.preventDefault();\n\n        clearInterval(timer);\n    }).on('click', () => {\n        applyScrollMouseDownAction(moverRect, scrollMaker, speed);\n    });\n};\n\nexport const registerListeners = (scrollMaker) => {\n    const {\n        moverRect\n    } = scrollMaker._components;\n\n    const speed = scrollMaker.config().speed;\n\n    registerListenerOnArrow(scrollMaker, moverRect, 'prevArrow', -speed);\n    applyMoverDrag(scrollMaker, moverRect);\n    applyRectClick(scrollMaker, moverRect);\n    registerListenerOnArrow(scrollMaker, moverRect, 'nextArrow', speed);\n};\n\nexport const scrollContainerHelper = (mountPoint, config, dimensions, type) => {\n    const {\n        classPrefix\n    } = config;\n    const scrollBarContainer = makeElement(selectElement(mountPoint), 'div', [1], `#${classPrefix}-scroll-bar-${type}`);\n\n    scrollBarContainer.classed(`${classPrefix}-scroll-bar`, true);\n    scrollBarContainer.style(WIDTH, `${dimensions.width}px`);\n    scrollBarContainer.style(HEIGHT, `${dimensions.height}px`);\n    return scrollBarContainer;\n};\n\n","import { mergeRecursive } from 'muze-utils';\n\nexport const PROPS = {\n\n    config: {\n        sanitization: (context, value) => {\n            value = mergeRecursive(context._config, value);\n            return value;\n        }\n    },\n    manager: {},\n    unitPositions: {},\n    logicalSpace: {}\n};\n\n","import { ERROR_MSG, generateGetterSetters } from 'muze-utils';\nimport {\n    scrollContainerHelper,\n    registerListeners\n} from './helper';\nimport { PROPS } from './props';\n\nexport class ScrollMaker {\n\n    constructor () {\n        this._components = {};\n        this._logicalSpace = {};\n        this._attachedScrollAction = () => {};\n        this._config = {\n            thickness: 10,\n            speed: 2\n        };\n        this._unitPositions = null;\n\n        generateGetterSetters(this, PROPS);\n    }\n\n    static type () {\n        throw new ERROR_MSG('Method not implemented');\n    }\n\n    emptyScrollAreaClick () {\n        throw new ERROR_MSG('Method not implemented');\n    }\n\n    changeMoverPosition () {\n        throw new ERROR_MSG('Method not implemented');\n    }\n\n    scrollTo () {\n        throw new ERROR_MSG('Method not implemented');\n    }\n\n    scrollDeltaTo () {\n        throw new ERROR_MSG('Method not implemented');\n    }\n\n    createScroll (mountPoint) {\n        const config = this.config();\n\n        return {\n            scrollBarContainer: scrollContainerHelper(mountPoint, config, this.logicalSpace(), this.constructor.type())\n        };\n    }\n\n    attachScrollAction (externalScrollAction) {\n        this._attachedScrollAction = externalScrollAction;\n        return this;\n    }\n\n    detachScrollAction () {\n        this._attachedScrollAction = () => {};\n        return this;\n    }\n\n    getLogicalSpace () {\n        return this.logicalSpace();\n    }\n\n    registerListeners () {\n        registerListeners(this);\n        return this;\n    }\n\n    remove () {\n        this._components.scrollBarContainer.remove();\n        return this;\n    }\n}\n\n","import MuzeComponent from './muze-chart-component';\nimport { HorizontalScrollMaker } from './scroll-bar-maker/horizontal-scroll-maker';\nimport { VerticalScrollMaker } from './scroll-bar-maker/vertical-scroll-maker';\n\nconst scrollMakerMap = {\n    horizontal: HorizontalScrollMaker,\n    vertical: VerticalScrollMaker\n};\n\n/**\n * Scroll Component acts as a wrapper over the scoll bars created using the respective Scroll Makers\n * This provides a consistent API for layouting using the tree layout system.\n *\n *\n * @class\n * @public\n * @module ScrollComponent\n */\nexport default class ScrollComponent extends MuzeComponent {\n\n    constructor (params) {\n        const ScrollMaker = scrollMakerMap[params.config.type];\n\n        params.component = new ScrollMaker();\n        params.component.config(params.config.scrollBarComponentConfig);\n        params.component.logicalSpace(params.dimensions);\n        super(params.name, params.component.getLogicalSpace(), 0);\n        this.setParams(params);\n    }\n\n    manager (...manager) {\n        if (manager.length) {\n            this.component.manager(manager[0]);\n            return this;\n        }\n        return this.component.manager();\n    }\n\n    /**\n     * Scrolls based on the actual pixel value provided. Since it's a delta change, the input will be\n     * a delta between (-Infinity, Infinity), based on which the scroll will occur. Only a delta movement in\n     * scroll occurs\n     *\n     * @public\n     *\n     * @param {number} delta Based on which the scroll will have a delta change in position\n     * @return {ScrollComponent} Instance of the ScrollComponent\n     */\n    scrollDeltaTo (delta) {\n        this.component.scrollDeltaTo(delta);\n        return this;\n    }\n\n    /**\n     * Scrolls to the specific point in the page. The input is provided as a percentage (0 - 100)\n     *\n     * @public\n     *\n     * @param {number} scrollPercentage Its the percentage based on which the scroll action will occur\n     * @return {ScrollComponent} Instance of the ScrollComponent\n     */\n    scrollTo (scrollPercentage) {\n        this.component.scrollTo(scrollPercentage);\n        return this;\n    }\n\n    /**\n     * Scrolls to the specific point in the page based on the unit index.\n     * The input is provided as a number represting the index for the unit.\n     * For vertical scroll, it's the row index that will be required.\n     * For horizontal scroll, it's the column index that will be required\n     *\n     * @public\n     *\n     * @param {number} unitIndex Index of the unit appearing in the grid\n     * @return {ScrollComponent} Instance of the ScrollComponent\n     */\n    scrollToUnitIndex (unitIndex) {\n        const unitPositions = this.component.unitPositions();\n        const sanitizedUnitIndex = Math.min(Math.max(0, unitIndex), unitPositions.length - 1);\n        this.component.scrollTo(unitPositions[sanitizedUnitIndex]);\n        return this;\n    }\n\n    /**\n     * Provides the positions of the units(either horizontal or vertical based on the type\n     * of scroll bar it wraps) relative to it's container. The position of the first unit starts at 0\n     *\n     *\n     * @public\n     *\n     * @return {Array} Positions of units either horizontal or vertical\n     */\n    getScrollPositionsForUnits () {\n        return this.component.unitPositions();\n    }\n\n    draw (container) {\n        this.component.createScroll(container || document.getElementById(this.renderAt()));\n        return this;\n    }\n\n    /**\n     * Can be used to attach a scroll action whenever scrolling occurs in the canvas\n     *\n     * @public\n     * @param {number} externalAction Action to be attached during scroll\n     * @return {ScrollComponent} Instance of the ScrollComponent\n     */\n    attachScrollAction (externalAction) {\n        this.component.attachScrollAction(externalAction);\n        return this;\n    }\n\n    /**\n     * Can be used to detach the scroll action already bound to the scroll bar\n     *\n     * @public\n     * @return {ScrollComponent} Instance of the ScrollComponent\n     */\n    detachScrollAction () {\n        this.component.detachScrollAction();\n        return this;\n    }\n\n    updateWrapper (params) {\n        this.name(params.name);\n        this.component.config(params.config.scrollBarComponentConfig);\n        this.component.logicalSpace(params.dimensions);\n        this.boundBox(this.component.getLogicalSpace());\n        this.setParams(params);\n        return this;\n    }\n\n    setParams (params) {\n        this.component = params.component || this.component;\n        this.params = params;\n        this.target(params.config.target);\n        this.position(params.config.position);\n        this.className(params.config.className);\n        this.alignWith(params.config.alignWith);\n        this.alignment(params.config.alignment);\n    }\n\n    remove () {\n        this.component.remove();\n    }\n}\n","import { ScrollMaker } from './scroll-maker';\nimport { createScrollBarRect, createScrollBarArrow, getUnitPositions } from './helper';\nimport { HORIZONTAL, HEIGHT, WIDTH, LEFT } from '../../../constants';\n\nexport class HorizontalScrollMaker extends ScrollMaker {\n\n    /**\n     * Describes the type of the ScrollMaker\n     *\n     * @public\n     *\n     * @return {String} Returns the type of scroll maker: horizontal\n     */\n    static type () {\n        return HORIZONTAL;\n    }\n\n    createScroll (mountPoint, dimensions = this.logicalSpace()) {\n        const config = this.config();\n        const { scrollBarContainer } = super.createScroll(mountPoint, config, dimensions);\n        const prevArrow = createScrollBarArrow(scrollBarContainer, 'left', config);\n        const moverRect = createScrollBarRect(scrollBarContainer, config);\n        const nextArrow = createScrollBarArrow(scrollBarContainer, 'right', config);\n        const {\n            mover,\n            rect\n        } = moverRect;\n\n        const { height, width, totalLength, viewLength, unitWidths } = this.logicalSpace();\n        const scrollBarWithouArrowLength = width - height * 2;\n\n        rect.style(WIDTH, `${dimensions.width - height * 2}px`);\n        rect.style(HEIGHT, `${100}%`);\n        mover.style(WIDTH, `${(viewLength * scrollBarWithouArrowLength) / totalLength}px`);\n        mover.style(HEIGHT, `${100}%`);\n        mover.style(LEFT, `${0}px`);\n\n        this._components = {\n            prevArrow,\n            nextArrow,\n            moverRect,\n            scrollBarContainer\n        };\n        this._scrollBarWithouArrowLength = scrollBarWithouArrowLength;\n        this.unitPositions(getUnitPositions(unitWidths, totalLength, viewLength));\n        this.registerListeners();\n    }\n\n    emptyScrollAreaClick (event) {\n        const {\n            mover,\n            rect\n        } = this._components.moverRect;\n        const speed = this.config().speed;\n        const { x, y } = mover.node().getBoundingClientRect();\n        const { x: rectX, y: rectY } = rect.node().getBoundingClientRect();\n        let positionAdjuster = speed * 10;\n        if (event.x < x) {\n            positionAdjuster = -speed * 10;\n        }\n        this.changeMoverPosition({ x: x - rectX + positionAdjuster, y: y - rectY + positionAdjuster });\n    }\n\n    changeMoverPosition (newPosition) {\n        let currentPos;\n        const {\n            mover,\n            rect\n        } = this._components.moverRect;\n        const rectStartPos = rect.node().getBoundingClientRect();\n        const moverPos = mover.node().getBoundingClientRect();\n        const {\n            totalLength\n         } = this.logicalSpace();\n\n        if (newPosition.x < 0) {\n            currentPos = 0;\n        } else if (newPosition.x + moverPos.width > rectStartPos.width) {\n            currentPos = rectStartPos.width - moverPos.width;\n        } else {\n            currentPos = newPosition.x;\n        }\n\n        mover.style(LEFT, `${currentPos}px`);\n        const totalDistance = this._scrollBarWithouArrowLength;\n        const movedViewLength = (currentPos * totalLength) / totalDistance;\n\n        this.manager().performAttachedScrollFunction(this.constructor.type(), movedViewLength);\n    }\n\n    scrollDeltaTo (delta) {\n        const {\n            mover,\n            rect\n        } = this._components.moverRect;\n        const moverPos = mover.node().getBoundingClientRect();\n        const rectStartPos = rect.node().getBoundingClientRect();\n\n        this.changeMoverPosition({ y: 0, x: moverPos.x - rectStartPos.x - delta });\n        return this;\n    }\n\n    /**\n     * Scrolls to the specific point in the page. The input is provided as a percentage (0 - 100)\n     *\n     * @public\n     *\n     * @param {number} scrollPercentage Its the percentage based on which the scroll action will occur\n     * @return {HorizontalScrollMaker} Instance of the HorizontalScrollMaker\n     */\n    scrollTo (scrollPercentage) {\n        const {\n            mover\n        } = this._components.moverRect;\n        const moverPos = mover.node().getBoundingClientRect();\n        const movement = (scrollPercentage * (this._scrollBarWithouArrowLength - moverPos.width)) / 100;\n\n        this.changeMoverPosition({ y: 0, x: movement });\n        return this;\n    }\n\n}\n\n","import { ScrollMaker } from './scroll-maker';\nimport { createScrollBarRect, createScrollBarArrow, getUnitPositions } from './helper';\nimport { VERTICAL, TOP, HEIGHT, WIDTH } from '../../../constants';\n\nexport class VerticalScrollMaker extends ScrollMaker {\n\n    /**\n     * Describes the type of the ScrollMaker\n     *\n     * @public\n     *\n     * @return {String} Returns the type of scroll maker: vertical\n     */\n    static type () {\n        return VERTICAL;\n    }\n\n    createScroll (mountPoint, dimensions = this.logicalSpace()) {\n        const config = this.config();\n        const { scrollBarContainer } = super.createScroll(mountPoint, dimensions);\n        const prevArrow = createScrollBarArrow(scrollBarContainer, 'top', config);\n        const moverRect = createScrollBarRect(scrollBarContainer, config);\n        const nextArrow = createScrollBarArrow(scrollBarContainer, 'bottom', config);\n        const {\n            mover,\n            rect\n        } = moverRect;\n        const { height, width, totalLength, viewLength, unitHeights } = this.logicalSpace();\n        const scrollBarWithouArrowLength = height - width * 2;\n\n        rect.style(HEIGHT, `${scrollBarWithouArrowLength}px`);\n        rect.style(WIDTH, `${100}%`);\n        mover.style(WIDTH, `${100}%`);\n        mover.style(HEIGHT, `${(viewLength * scrollBarWithouArrowLength) / totalLength}px`);\n        mover.style(TOP, `${0}px`);\n\n        this._components = {\n            prevArrow,\n            nextArrow,\n            moverRect,\n            scrollBarContainer\n        };\n        this._scrollBarWithouArrowLength = scrollBarWithouArrowLength;\n\n        this.unitPositions(getUnitPositions(unitHeights, totalLength, viewLength));\n        this.registerListeners();\n    }\n\n    emptyScrollAreaClick (event) {\n        const {\n            mover,\n            rect\n        } = this._components.moverRect;\n        const speed = this.config().speed;\n        const { x, y } = mover.node().getBoundingClientRect();\n        const { x: rectX, y: rectY } = rect.node().getBoundingClientRect();\n\n        let positionAdjuster = speed * 10;\n        if (event.y < y) {\n            positionAdjuster = -speed * 10;\n        }\n        this.changeMoverPosition({ x: x - rectX + positionAdjuster, y: y - rectY + positionAdjuster });\n    }\n\n    changeMoverPosition (newPosition) {\n        let currentPos;\n        const {\n            mover,\n            rect\n        } = this._components.moverRect;\n        const {\n            totalLength\n         } = this.logicalSpace();\n        const rectStartPos = rect.node().getBoundingClientRect();\n        const moverPos = mover.node().getBoundingClientRect();\n\n        if (newPosition.y < 0) {\n            currentPos = 0;\n        } else if (newPosition.y + moverPos.height > rectStartPos.height) {\n            currentPos = rectStartPos.height - moverPos.height;\n        } else {\n            currentPos = newPosition.y;\n        }\n        mover.style(TOP, `${currentPos}px`);\n        const totalDistance = this._scrollBarWithouArrowLength;\n        const movedViewLength = (currentPos * totalLength) / totalDistance;\n\n        this.manager().performAttachedScrollFunction(this.constructor.type(), movedViewLength);\n    }\n\n    /**\n     * Scrolls based on the actual pixel value provided. Since it's a delta change, the input will be\n     * a delta between (-Infinity, Infinity), based on which the scroll will occur. Only a delta movement in\n     * scroll occurs\n     *\n     * @public\n     *\n     * @param {number} delta Based on which the scroll will have a delta change in position\n     * @return {VerticalScrollMaker} Instance of the VerticalScrollMaker\n     */\n    scrollDeltaTo (delta) {\n        const {\n            mover,\n            rect\n        } = this._components.moverRect;\n        const moverPos = mover.node().getBoundingClientRect();\n        const rectStartPos = rect.node().getBoundingClientRect();\n\n        this.changeMoverPosition({ y: moverPos.y - rectStartPos.y - delta, x: 0 });\n        return this;\n    }\n\n    /**\n     * Scrolls to the specific point in the page. The input is provided as a percentage (0 - 100)\n     *\n     * @public\n     *\n     * @param {number} scrollPercentage Its the percentage based on which the scroll action will occur\n     * @return {VerticalScrollMaker} Instance of the VerticalScrollMaker\n     */\n    scrollTo (scrollPercentage) {\n        const {\n            mover\n        } = this._components.moverRect;\n        const moverPos = mover.node().getBoundingClientRect();\n        const movement = (scrollPercentage * (this._scrollBarWithouArrowLength - moverPos.height)) / 100;\n\n        this.changeMoverPosition({ x: 0, y: movement });\n        return this;\n    }\n\n}\n","import { makeElement } from 'muze-utils';\nimport { cellSpanMaker, applySpans } from '../../../../layout/src/grid-layout/span-maker';\nimport { applyBorders } from '../../../../layout/src/grid-layout/border-helper';\n\nimport {\n     TOP, CENTER\n} from '../../../../layout/src/enums/constants';\nimport MuzeComponent from './muze-chart-component';\nimport { WIDTH, HEIGHT, HIDDEN, OVERFLOW, AUTO, VISIBLE } from '../../constants';\n\nconst renderPlaceholders = (cells) => {\n    // Rendering content within placeholders\n    cells.each(function (cell) {\n        cell.placeholder.render(this);\n    });\n};\n\nexport default class MatrixComponent extends MuzeComponent {\n\n    constructor (params) {\n        super(params.name, params.config.dimensions, 0);\n        this.setParams(params);\n        this.className(params.config.className);\n    }\n\n    applyScroll (container) {\n        const row = this.params.config.row;\n        const column = this.params.config.column;\n        const { horizontal, vertical } = this.params.config.scrollInfo;\n        container.style(OVERFLOW, VISIBLE);\n        container.style(WIDTH, AUTO);\n        container.style(HEIGHT, AUTO);\n\n        if (horizontal && column === 1) {\n            container.style(OVERFLOW, HIDDEN);\n            container.style(WIDTH, '100%');\n        }\n\n        if (vertical && row === CENTER) {\n            container.style(OVERFLOW, HIDDEN);\n            container.style(HEIGHT, '100%');\n        }\n    }\n\n    renderMatrix (mountPoint) {\n        // Creating containers for each matrix individually\n        const classPrefix = this.params.config.classPrefix;\n        const row = this.params.config.row;\n        const column = this.params.config.column;\n        const dimensions = this.params.config.dimensions;\n        const border = this.params.config.border;\n\n        // Creating containers for each matrix individually\n        const containerForMatrix = makeElement(mountPoint, 'div', [1], `${classPrefix}-grid-${row}-${column + 1}`)\n            .classed(`${classPrefix}-grid-${row}`, true)\n            .classed(`${classPrefix}-grid`, true);\n\n        this.applyScroll(containerForMatrix);\n\n        const {\n            viewMatrix,\n            spans\n        } = cellSpanMaker(this.component, row, column);\n\n        // Rendering the table components\n        const { cells } = this.renderTable(containerForMatrix, `${classPrefix}-grid`, viewMatrix);\n\n        applySpans(cells, spans, { dimensions, border }, `${row}-${column}`);\n        renderPlaceholders(cells);\n\n        cells.exit().each((cell) => {\n            cell.placeholder.remove();\n        });\n\n        applyBorders(cells, border, row, column);\n    }\n\n    renderTable (mount, className, rowData) {\n        const table = makeElement(mount, 'table', ['layout'], `${className}-table`);\n        const body = makeElement(table, 'tbody', ['layout'], `${className}-body`);\n        const rows = makeElement(body, 'tr', rowData, `${className}-tr`);\n        const cells = makeElement(rows, 'td', (d, i) => d.filter(e => e !== null).map(e =>\n                                  ({ placeholder: e, rowIndex: i })), `${className}-td`, {}, key => key.placeholder.id);\n\n        return { table, body, rows, cells };\n    }\n\n    draw (container) {\n        this.renderMatrix(container || document.getElementById(this.renderAt()));\n    }\n\n    updateWrapper (params) {\n        this.name(params.name);\n        this.boundBox(params.config.dimensions);\n        this.setParams(params);\n        return this;\n    }\n\n    setParams (params) {\n        this.component = params.component;\n        this.params = params;\n        this.target(params.config.target);\n        this.position(TOP);\n        this.className(params.config.className);\n    }\n}\n","import { selectElement, getEvent } from 'muze-utils';\nimport MuzeComponent from './muze-chart-component';\nimport MatrixComponent from './matrix-component';\nimport { ROW_MATRIX_INDEX, COLUMN_MATRIX_INDEX } from '../../../../layout/src/enums/constants';\nimport { WHEEL_DELTA_MODIFIER } from '../../enums/constants';\n\n/**\n * Based on the type of scroll, it changes the scrollLeft/scrollTop property of the specific\n * elements based on the scroll distance provided\n *\n *\n */\nconst applyScrollAction = (elem, classPrefix, scollDistance, type) => {\n    selectElement(elem)\n                    .selectAll(`.${classPrefix}-grid`)\n                    .property(type, scollDistance);\n};\n\n/**\n * Applies the action of the scroll by actually scrolling the respective matrices based on the\n * type of scroll. It returns a function which has both the scroll methods available\n *\n * @return {Object} contains the horizontal and vertical scroll actions on the grid component\n */\nconst scrollActionApplier = (movement, context) => {\n    const classPrefix = context.params.config.classPrefix;\n\n    return {\n        horizontal: () => {\n            [0, 1, 2].forEach(e =>\n                applyScrollAction(`#${context.component[e][1].renderAt()}`, classPrefix, movement, 'scrollLeft'));\n        },\n        vertical: () => {\n            [0, 1, 2].forEach(e =>\n                applyScrollAction(`#${context.component[1][e].renderAt()}`, classPrefix, movement, 'scrollTop'));\n        }\n    };\n};\n\nexport default class GridComponent extends MuzeComponent {\n\n    constructor (params) {\n        super(params.name, params.config.dimensions, 0);\n        this.gridComponents = [];\n        this.setParams(params);\n    }\n\n    sanitizeGrid () {\n        let height = 0;\n        let width = 0;\n        const { viewMatricesInfo, layoutDimensions } = this.component.viewInfo();\n        const scrollInfo = this.component.scrollInfo();\n        const {\n            viewHeight,\n            viewWidth,\n            unitHeights,\n            unitWidths\n        } = layoutDimensions;\n\n        for (let i = 0; i < 3; i++) {\n            if (!(this.gridComponents.length && this.gridComponents[i] instanceof Array)) {\n                this.gridComponents[i] = [];\n            }\n            for (let j = 0; j < 3; j++) {\n                const matrixDim = {\n                    height: viewHeight[i],\n                    width: viewWidth[j],\n                    unitHeights,\n                    unitWidths\n                };\n                const matrix = viewMatricesInfo.matrices[`${ROW_MATRIX_INDEX[i]}`][j];\n                const matrixName = `${ROW_MATRIX_INDEX[i]}-${COLUMN_MATRIX_INDEX[j]}`;\n                const matrixConfig = {\n                    dimensions: matrixDim,\n                    border: layoutDimensions.border,\n                    classPrefix: this.params.config.classPrefix,\n                    scrollInfo,\n                    row: ROW_MATRIX_INDEX[i],\n                    column: j\n                };\n                if (this.gridComponents[i][j] instanceof MuzeComponent) {\n                    this.gridComponents[i][j].updateWrapper({\n                        name: matrixName,\n                        component: matrix,\n                        config: matrixConfig\n                    });\n                } else {\n                    const matrixWrapper = new MatrixComponent({\n                        name: matrixName,\n                        component: matrix,\n                        config: matrixConfig\n                    });\n                    this.gridComponents[i].push(matrixWrapper);\n                }\n                if (i === 0) {\n                    width += matrixDim.width;\n                }\n                if (j === 0) {\n                    height += matrixDim.height;\n                }\n            }\n        }\n        this.boundBox({ height, width });\n\n        this.component = this.gridComponents;\n        this.allComponents = this.gridComponents;\n    }\n\n    scrollBarManager (...manager) {\n        if (manager.length) {\n            this._scrollBarManager = manager[0];\n            return this;\n        }\n        return this._scrollBarManager;\n    }\n\n    /**\n     * Attaches a mousewheel listener to the center matrix, based on which the scrolling can occur.\n     * It uses the scroll component to change the position of the scroller, which ultimately scrolls the center matrix\n     *\n     *\n     * @return {GridComponent} Instance of the GridComponent\n     */\n    attachScrollListener () {\n        const scrollBarManager = this.scrollBarManager();\n        selectElement(`#${this.component[1][1].renderAt()}`)\n            .on('wheel', () => {\n                const event = getEvent();\n                const {\n                    wheelDeltaX,\n                    wheelDeltaY\n                } = event;\n\n                // Scrolling horizontally\n                if (wheelDeltaX !== 0 && Math.abs(wheelDeltaX) > Math.abs(wheelDeltaY)) {\n                    scrollBarManager.preventBrowserScroll('horizontal', event)\n                        .triggerScrollBarAction('horizontal', wheelDeltaX / WHEEL_DELTA_MODIFIER);\n                }\n\n                // Scrolling Vertically\n                if (wheelDeltaY !== 0 && Math.abs(wheelDeltaX) < Math.abs(wheelDeltaY)) {\n                    scrollBarManager.preventBrowserScroll('vertical', event)\n                        .triggerScrollBarAction('vertical', wheelDeltaY / WHEEL_DELTA_MODIFIER);\n                }\n            });\n        return this;\n    }\n\n    performScrollAction (direction, movedView) {\n        scrollActionApplier(movedView, this)[direction]();\n        return this;\n    }\n\n    getBoundBox () {\n        const { top, left } = this.component[0][0].boundBox();\n        const { height, width } = this.boundBox();\n\n        return {\n            top,\n            left,\n            height,\n            width\n        };\n    }\n\n    updateWrapper (params) {\n        this.name(params.name);\n        this.boundBox(params.config.dimensions);\n        this.setParams(params);\n        return this;\n    }\n\n    setParams (params) {\n        this.component = params.component;\n        this.params = params;\n        this.target(params.config.target);\n        this.className(params.config.className);\n        this.sanitizeGrid();\n        return this;\n    }\n\n    attachListener () {\n        this.attachScrollListener();\n        return this;\n    }\n}\n","export const SIDE_EFFECT_COMMON = 'common';\nexport const SIDE_EFFECT_INDIVIDUAL = 'individual';\nexport const TOOLTIP_CONSOLIDATED = 'consolidated';\nexport const TOOLTIP_FRAGMENTED = 'fragmented';\nexport const WHEEL_DELTA_MODIFIER = 30;\n","import { selectElement, makeElement, applyStyle } from 'muze-utils';\nimport MuzeComponent from './muze-chart-component';\n\nexport default class MessageComponent extends MuzeComponent {\n    constructor (params) {\n        super(params.name, params.config.dimensions, 0);\n        this.setParams(params);\n    }\n\n    render (container) {\n        const parent = selectElement(container);\n\n        const { config } = this.params;\n        const { className } = config.classPrefix;\n\n        const node = makeElement(parent, 'div', [1], className);\n        const { height, width } = config.dimensions;\n        const { message } = config;\n\n        applyStyle(node, { width: `${width}px`, height: `${height}px` });\n\n        const child = makeElement(node, 'div', [1], `${className}-child`);\n        const textElement = makeElement(child, 'text', [1]);\n\n        textElement.html(message);\n    }\n\n    draw (container) {\n        this.render(container || document.getElementById(this.renderAt()));\n    }\n\n    updateWrapper (params) {\n        this.name(params.name);\n        this.boundBox(params.config.dimensions);\n        this.setParams(params);\n        return this;\n    }\n\n    setParams (params) {\n        this.component = params.component;\n        this.params = params;\n        const { target, className } = params.config;\n        this.target(target);\n        this.className(className);\n        return this;\n    }\n}\n","import {\n    TITLE,\n    SUB_TITLE,\n    LEGEND, VERTICAL,\n    HORIZONTAL,\n    WIDTH,\n    HEIGHT,\n    TOP,\n    LEFT,\n    RIGHT,\n    MESSAGE,\n    GRID,\n    NO_DATA_MESSAGE,\n    HORIZONTAL_CENTER\n} from '../constants';\nimport HeaderComponent from './components/headerComponent';\nimport LegendComponent from './components/legendComponent';\nimport ScrollComponent from './components/scroll-component';\nimport GridComponent from './components/grid-component';\nimport MessageComponent from './components/message-component';\nimport { TITLE_CONFIG, SUB_TITLE_CONFIG, CANVAS, MESSAGE_CONFIG } from './defaults';\nimport { ROW_MATRIX_INDEX, COLUMN_MATRIX_INDEX, CENTER } from '../../../layout/src/enums/constants';\n\n// Mapping between types of headers and their required configs for wrapper creation\nconst headerMap = {\n    title: {\n        headerCell: 'titleCell',\n        configType: TITLE_CONFIG\n    },\n    subtitle: {\n        headerCell: 'subtitleCell',\n        configType: SUB_TITLE_CONFIG\n    }\n};\n\n// Mapping of header alignment values\nconst headerAlignmentMap = {\n    [LEFT]: LEFT,\n    [RIGHT]: RIGHT,\n    [CENTER]: HORIZONTAL_CENTER\n};\n\n/**\n * returns if data is Valid\n *\n *\n * @param {Object} params object where data has to be checked for validity\n * @return {Boolean} Returns true if all of the params are valid\n */\nconst checkParamsValidation = params => Object.keys(params).every((param => params[param]));\n\n/**\n * returns if message Component is needed or not\n *\n *\n * @param {Object} renderDetails Extra details required for rendering the headers\n * @return {Boolean} Returns if grid is present\n */\nconst isGridPresent = (renderDetails) => {\n    const { rows, columns, values } = renderDetails.components;\n    return checkParamsValidation({ rows, columns, values });\n};\n\n/**\n * Creates the wrapper for the header, i.e., title and subtitle to be used in the tree layout\n *\n *\n * @param {string} headerType type of header: title/subtite\n * @param {LayoutManager} layoutManager instance of Layout Manager which manages the layouting of the components\n * @param {Object} renderDetails Extra details required for rendering the headers\n * @return {Instance} Returns the respective wrappers\n */\nconst createHeaderWrapper = (headerType, layoutManager, renderDetails) => {\n    let wrapper = null;\n\n    const { components, layoutConfig } = renderDetails;\n    const { headerCell, configType } = headerMap[headerType];\n    const target = { target: CANVAS };\n\n    if (components.headers && components.headers[headerCell]) {\n        let headerConfig = layoutConfig[headerType];\n        const header = components.headers[headerCell];\n\n        headerConfig = Object.assign({}, headerConfig, {\n            classPrefix: layoutConfig.classPrefix,\n            ...target,\n            alignWith: `${ROW_MATRIX_INDEX[0]}-${COLUMN_MATRIX_INDEX[1]}`,\n            alignment: headerAlignmentMap[headerConfig.align],\n            className: configType.className\n        });\n\n        const wrapperParams = {\n            name: headerType,\n            component: header,\n            config: headerConfig\n        };\n\n        const existingComponent = layoutManager.getComponent(headerType);\n        if (existingComponent) {\n            wrapper = existingComponent\n                        .updateWrapper(wrapperParams);\n        } else {\n            wrapper = new HeaderComponent(wrapperParams);\n        }\n    }\n    return wrapper;\n};\n\n/**\n * Creates the wrapper for the grid layout to be used in the tree layout\n *\n *\n * @param {LayoutManager} layoutManager instance of Layout Manager which manages the layouting of the components\n * @param {GridLayout} canvas canvas instance\n * @return {Instance} Returns the respective wrappers\n */\nconst createMessageWrapper = (layoutManager, canvas, renderDetails, renderGrid) => {\n    let messageWrapper = null;\n\n    if (!renderGrid) {\n        const defaultDimensions = { height: canvas.height(), width: canvas.width() };\n        const gridComponent = layoutManager.getComponent(GRID);\n        const { height, width } = (gridComponent && gridComponent.getBoundBox()) || defaultDimensions;\n        const target = { target: CANVAS };\n        const config = {\n            ...target,\n            dimensions: { height, width },\n            message: NO_DATA_MESSAGE,\n            classPrefix: MESSAGE_CONFIG\n        };\n        const wrapperParams = {\n            name: MESSAGE,\n            component: null,\n            config\n        };\n        const existingComponent = layoutManager.getComponent(MESSAGE);\n\n        if (existingComponent) {\n            messageWrapper = existingComponent\n                                    .updateWrapper(wrapperParams);\n        } else {\n            messageWrapper = new MessageComponent(wrapperParams);\n        }\n        return messageWrapper;\n    }\n    return null;\n};\n\n// Mapping between types of scrollBars and their required configs for wrapper creation\nconst scrollBarMap = config => ({\n    vertical: {\n        componentName: 'verticalScrollBar',\n        width: 'thickness',\n        height: 'layoutBasedMeasure',\n        layoutBasedMeasure: HEIGHT,\n        viewMeasure: 'viewHeight',\n        rowAlign: 1,\n        colAlign: config.align === 'right' ? 2 : 0,\n        position: config.align,\n        alignment: TOP\n    },\n    horizontal: {\n        componentName: 'horizontalScrollBar',\n        width: 'layoutBasedMeasure',\n        layoutBasedMeasure: WIDTH,\n        viewMeasure: 'viewWidth',\n        height: 'thickness',\n        rowAlign: config.align === 'top' ? 0 : 2,\n        colAlign: 1,\n        position: config.align,\n        alignment: LEFT\n    }\n});\n\n/**\n * Creates the wrapper for the scroller, i.e., horizontal and vertical to be used in the tree layout\n *\n *\n * @param {string} scrollBarType type of scrollbar: horizontal/vertical\n * @param {LayoutManager} layoutManager instance of Layout Manager which manages the layouting of the components\n * @param {Object} renderDetails Extra details required for rendering the headers\n * @param {GridLayout} grid Instance of the grid layout\n * @return {Instance} Returns the respective wrappers\n */\nconst createScrollBarWrapper = (scrollBarType, layoutManager, renderDetails, grid, renderGrid) => {\n    if (renderGrid) {\n        let scrollBarWrapper = null;\n        const { layoutConfig } = renderDetails;\n        const target = { target: CANVAS };\n        const { scrollBar } = layoutConfig;\n        const { layoutDimensions } = grid.viewInfo();\n        const {\n            actualCenterMeasures,\n            unitHeights,\n            unitWidths\n        } = layoutDimensions;\n        const {\n            componentName, layoutBasedMeasure, width, height, rowAlign, colAlign,\n            viewMeasure, position, alignment\n        } = scrollBarMap(scrollBar[scrollBarType])[scrollBarType];\n        const dimensions = {\n            thickness: scrollBar.thickness,\n            layoutBasedMeasure: layoutDimensions[viewMeasure][1]\n        };\n        const isScroll = grid.scrollInfo()[scrollBarType];\n        const totalLength = actualCenterMeasures[layoutBasedMeasure];\n        const viewLength = layoutDimensions[viewMeasure][1];\n\n        const scrollConfig = Object.assign({}, {\n            classPrefix: layoutConfig.classPrefix,\n            ...target,\n            scrollBarComponentConfig: {\n                ...scrollBar,\n                classPrefix: layoutConfig.classPrefix\n            },\n\n            type: scrollBarType,\n            alignWith: `${ROW_MATRIX_INDEX[rowAlign]}-${COLUMN_MATRIX_INDEX[colAlign]}`,\n            alignment,\n            position\n        });\n\n        const wrapperParams = {\n            name: componentName,\n            config: scrollConfig,\n            dimensions: {\n                width: dimensions[width],\n                height: dimensions[height],\n                totalLength,\n                viewLength,\n                unitHeights,\n                unitWidths\n            }\n        };\n\n        const existingComponent = layoutManager.getComponent(componentName);\n\n        if (!isScroll) {\n            existingComponent && existingComponent.remove();\n            return null;\n        }\n\n        if (existingComponent) {\n            scrollBarWrapper = existingComponent\n                                    .updateWrapper(wrapperParams);\n        } else {\n            scrollBarWrapper = new ScrollComponent(wrapperParams);\n        }\n\n        return scrollBarWrapper;\n    }\n    return null;\n};\n\n/**\n * Creates the wrapper for the legend to be used in the tree layout\n *\n *\n * @param {LayoutManager} layoutManager instance of Layout Manager which manages the layouting of the components\n * @param {Object} renderDetails Extra details required for rendering the headers\n * @return {Instance} Returns the respective wrappers\n */\nconst createLegendWrapper = (layoutManager, renderDetails, renderGrid) => {\n    if (renderGrid) {\n        let legendWrapper = null;\n        const { components, layoutConfig, measurement } = renderDetails;\n        const target = { target: CANVAS };\n\n        if (components.legends && components.legends.length) {\n            const legendConfig = { ...layoutConfig.legend, ...target, measurement };\n            const wrapperParams = {\n                name: LEGEND,\n                component: components.legends,\n                config: legendConfig\n            };\n\n            const existingComponent = layoutManager.getComponent(LEGEND);\n\n            if (existingComponent) {\n                legendWrapper = existingComponent\n                        .updateWrapper(wrapperParams);\n            } else {\n                legendWrapper = new LegendComponent(wrapperParams);\n            }\n        }\n        return legendWrapper;\n    }\n    return null;\n};\n\n/**\n * Creates the wrapper for the grid layout to be used in the tree layout\n *\n *\n * @param {LayoutManager} layoutManager instance of Layout Manager which manages the layouting of the components\n * @param {Object} renderDetails Extra details required for rendering the headers\n * @param {GridLayout} grid Instance of the grid layout\n * @return {Instance} Returns the respective wrappers\n */\nconst gridLayoutWrapper = (layoutManager, renderDetails, grid, renderGrid) => {\n    if (renderGrid) {\n        let gridWrapper = null;\n        const target = { target: CANVAS };\n        const { layoutConfig } = renderDetails;\n\n        const config = {\n            ...target,\n            pagination: layoutConfig.pagination,\n            classPrefix: layoutConfig.classPrefix,\n            dimensions: { height: 0, width: 0 }\n        };\n        const wrapperParams = {\n            name: GRID,\n            component: grid,\n            config\n        };\n        const existingComponent = layoutManager.getComponent(GRID);\n        if (existingComponent) {\n            gridWrapper = existingComponent\n                        .updateWrapper(wrapperParams);\n        } else {\n            gridWrapper = new GridComponent(wrapperParams);\n        }\n        return gridWrapper;\n    }\n    return null;\n};\n/**\n * Responsible for providing the wrapper creators for every component in Muze.\n * This function, when called, returns the set of components and their respective wrappers.\n *\n *\n *\n * @param {LayoutManager} layoutManager instance of Layout Manager which manages the layouting of the components\n * @param {GridLayout} grid Instance of the grid layout\n * @param {Object} renderDetails Extra details required for rendering the headers\n * @return {Instance} Returns the respective wrappers for each component\n */\nexport const componentWrapperMaker = (canvas, grid, renderDetails) => {\n    const layoutManager = canvas._layoutManager;\n    const renderGrid = isGridPresent(renderDetails);\n    return {\n        title: createHeaderWrapper(TITLE, layoutManager, renderDetails),\n        subtitle: createHeaderWrapper(SUB_TITLE, layoutManager, renderDetails),\n        message: createMessageWrapper(layoutManager, canvas, renderDetails, renderGrid),\n        legend: createLegendWrapper(layoutManager, renderDetails, renderGrid),\n        grid: gridLayoutWrapper(layoutManager, renderDetails, grid, renderGrid),\n        verticalScrollBar: createScrollBarWrapper(VERTICAL, layoutManager, renderDetails, grid, renderGrid),\n        horizontalScrollBar: createScrollBarWrapper(HORIZONTAL, layoutManager, renderDetails, grid, renderGrid)\n    };\n};\n","export class ScrollManager {\n\n    constructor () {\n        this._scrollBarComponents = {};\n        this._attachedComponents = {};\n    }\n\n    scrollBarComponents (...sbc) {\n        if (sbc.length) {\n            this._scrollBarComponents = sbc[0];\n            return this;\n        }\n        return this._scrollBarComponents;\n    }\n\n    attachedComponents (...abc) {\n        if (abc.length) {\n            this._attachedComponents = abc[0];\n            return this;\n        }\n        return this._attachedComponents;\n    }\n\n    preventBrowserScroll (type, event) {\n        if (this.scrollBarComponents()[type]) {\n        // Prevent default behaviour and stop propagating\n            event.preventDefault();\n            event.stopPropagation();\n        }\n        return this;\n    }\n\n    performAttachedScrollFunction (type, movedViewLength) {\n        Object.values(this.attachedComponents()).forEach((e) => {\n            e.performScrollAction(type, movedViewLength);\n        });\n        return this;\n    }\n\n    triggerScrollBarAction (type, delta) {\n        this.scrollBarComponents()[type] && this.scrollBarComponents()[type].scrollDeltaTo(delta);\n        return this;\n    }\n}\n","import { mergeRecursive } from 'muze-utils';\nimport { arrangeComponents } from './component-resolver';\nimport { createHeaders } from './title-maker';\nimport { createLegend, getLegendSpace } from './legend-maker';\nimport { componentWrapperMaker } from './component-wrapper-maker';\nimport {\n    TOP,\n    BOTTOM,\n    LEFT,\n    RIGHT,\n    TITLE,\n    SUB_TITLE,\n    LEGEND,\n    VERTICAL_SCROLL_BAR,\n    HORIZONTAL_SCROLL_BAR,\n    GRID,\n    MESSAGE\n} from '../constants';\nimport { ScrollManager } from './scroll-manager';\n\n/**\n *\n *\n * @param {*} context\n *\n */\nexport const prepareLayout = (layout, renderDetails) => {\n    const { components, layoutConfig, measurement } = renderDetails;\n    const {\n        rows,\n        columns,\n        values,\n        cornerMatrices\n    } = components;\n    const {\n        topLeft,\n        topRight,\n        bottomLeft,\n        bottomRight\n    } = cornerMatrices;\n    if (rows && columns) {\n        layout.measurement(measurement)\n                        .config(layoutConfig)\n                        .matrices({\n                            top: [topLeft, columns[0], topRight],\n                            center: [rows[0], values, rows[1]],\n                            bottom: [bottomLeft, columns[1], bottomRight]\n                        })\n                        .triggerReflow();\n    }\n};\n\n/**\n *\n *\n * @param {*} context\n * @param {*} mount\n *\n */\nexport const getRenderDetails = (context, mount) => {\n    let layoutConfig = mergeRecursive({}, context.config());\n    // Get height width of the mount point\n    let { height, width } = mount.getBoundingClientRect();\n    const heightAttr = context.height();\n    const widthAttr = context.width();\n    const visGroup = context.composition().visualGroup;\n    const {\n        isColumnSizeEqual,\n        isRowSizeEqual,\n        priority,\n        rows,\n        columns,\n        values\n    } = visGroup.placeholderInfo();\n    const {\n        minWidth,\n        minHeight,\n        classPrefix,\n        showHeaders,\n        legend,\n        pagination,\n        scrollBar\n    } = context.config();\n\n    // Get title configuration\n    const titleConfig = context.title()[1];\n     // Get subtitle configuration\n    const subtitleConfig = context.subtitle()[1];\n    // Get legend position\n    const legendPosition = legend.position;\n    // Arrange components according to config\n    const layoutArrangement = arrangeComponents(context);\n\n    height = Math.floor(height);\n    width = Math.floor(width);\n\n    const availableHeightForCanvas = Math.max(heightAttr > 0 ? heightAttr : height, minHeight);\n    const availableWidthForCanvas = Math.max(widthAttr > 0 ? widthAttr : width, minWidth);\n\n    // Create headers and determine header height\n    const { headers, headerHeight } = createHeaders(context, availableHeightForCanvas, availableWidthForCanvas);\n\n    // Create legends and determine legend space\n    const legends = createLegend(context, headerHeight, availableHeightForCanvas, availableWidthForCanvas);\n    context._composition.legend = {};\n    legends.forEach((e) => {\n        context._composition.legend[e.scaleType] = e.legend;\n    });\n\n    const legendSpace = getLegendSpace(legends, legend, availableHeightForCanvas, availableWidthForCanvas);\n    const legendWidth = (legendPosition === LEFT || legendPosition === RIGHT) ? legendSpace.width : 0;\n    const legendHeight = (legendPosition === TOP || legendPosition === BOTTOM) ? legendSpace.height : 0;\n\n    // Set components for layouting\n    const components = {\n        headers,\n        legends,\n        canvases: [context],\n        rows,\n        columns,\n        values,\n        cornerMatrices: visGroup.cornerMatrices()\n    };\n\n    const measurement = {\n        mountSpace: {\n            height,\n            width\n        },\n        headerHeight,\n        legendSpace,\n        canvasWidth: availableWidthForCanvas,\n        canvasHeight: availableHeightForCanvas,\n        width: availableWidthForCanvas - legendWidth,\n        height: availableHeightForCanvas - headerHeight - legendHeight,\n        minUnitHeight: context.minUnitHeight(),\n        minUnitWidth: context.minUnitWidth()\n    };\n    layoutConfig = mergeRecursive(layoutConfig, {\n        classPrefix,\n        showHeaders,\n        border: mergeRecursive(visGroup.metaData().border, context.config().border),\n        layoutArrangement,\n        legend,\n        buffer: scrollBar.thickness,\n        pagination,\n        title: titleConfig,\n        subtitle: subtitleConfig,\n        isColumnSizeEqual,\n        isRowSizeEqual,\n        mount,\n        priority\n    });\n    return {\n        layoutConfig,\n        components,\n        measurement\n    };\n};\n\nconst componentIndexes = {\n    title: 0,\n    subtitle: 1,\n    legend: 2,\n    verticalScrollBar: 3,\n    horizontalScrollBar: 4,\n    grid: 5,\n    message: 6\n};\n\nconst componentNames = {\n    0: TITLE,\n    1: SUB_TITLE,\n    2: LEGEND,\n    3: VERTICAL_SCROLL_BAR,\n    4: HORIZONTAL_SCROLL_BAR,\n    5: GRID,\n    6: MESSAGE\n};\n\nconst attachListeners = (componentWrappers) => {\n    componentWrappers.forEach((componentWrapper) => {\n        if (componentWrapper) {\n            componentWrapper.attachListener();\n        }\n    });\n};\n\n/**\n * Responsible for creating a scroll manager that manages interactions between the grid\n * component and the scroll bar components\n *\n * @param {Array} componentWrappers Contains the wrappers for all the components\n * @param {Canvas} canvas Instance of the current canvas\n * @return {Array} Positions of units either horizontal or vertical\n */\nconst createScrollManager = (componentWrappers, canvas) => {\n    const {\n        horizontalScrollBar,\n        verticalScrollBar,\n        grid\n    } = componentIndexes;\n\n    const horizontalScrollWrapper = componentWrappers[horizontalScrollBar];\n    const verticalScrollWrapper = componentWrappers[verticalScrollBar];\n    const gridWrapper = componentWrappers[grid];\n    const scrollBarManager = new ScrollManager();\n    const scrollBarComponents = {};\n\n    verticalScrollWrapper && (scrollBarComponents.vertical = verticalScrollWrapper);\n    horizontalScrollWrapper && (scrollBarComponents.horizontal = horizontalScrollWrapper);\n\n    scrollBarManager\n                    .scrollBarComponents(scrollBarComponents)\n                    .attachedComponents({\n                        grid: gridWrapper\n                    });\n    canvas.composition().hScrollBar = horizontalScrollWrapper;\n    canvas.composition().vScrollBar = verticalScrollWrapper;\n\n    [horizontalScrollWrapper, verticalScrollWrapper].forEach((wrapper) => {\n        wrapper && wrapper.manager(scrollBarManager);\n    });\n\n    gridWrapper.scrollBarManager(scrollBarManager);\n};\n\nexport const renderLayout = (canvas, renderDetails) => {\n    const layoutManager = canvas._layoutManager;\n    const gridLayout = canvas.layout();\n    const {\n\n        grid\n    } = componentIndexes;\n\n    // Get the component wrappers\n    const compWrappers = componentWrapperMaker(canvas, gridLayout, renderDetails);\n    const componentWrappers = Object.keys(componentIndexes).map(e => compWrappers[e]);\n    const gridWrapper = componentWrappers[grid];\n    if (gridWrapper) {\n        createScrollManager(componentWrappers, canvas);\n    }\n\n    componentWrappers.forEach((componentWrapper, index) => {\n        if (!componentWrapper) {\n            const deleteElementName = componentNames[index];\n            layoutManager.removeComponent(deleteElementName);\n        }\n    });\n    layoutManager.registerComponents(componentWrappers).compute();\n    attachListeners(componentWrappers);\n};\n","import {\n    getDataModelFromIdentifiers,\n    FieldType,\n    mergeRecursive,\n    isSimpleObject,\n    CommonProps\n} from 'muze-utils';\nimport { Firebolt } from '@chartshq/muze-firebolt';\n\nimport { applyInteractionPolicy } from '../helper';\n\nconst defaultInteractionPolicy = (valueMatrix, firebolt) => {\n    const isMeasure = field => field.type() === FieldType.MEASURE;\n    const canvas = firebolt.context;\n    const visualGroup = canvas.composition().visualGroup;\n    const xFields = [].concat(...visualGroup.getFieldsFromChannel('x'));\n    const yFields = [].concat(...visualGroup.getFieldsFromChannel('y'));\n    const colDim = xFields.every(field => field.type() === FieldType.DIMENSION);\n    const fieldInf = visualGroup.resolver().getAllFields();\n    const rowFacets = fieldInf.rowFacets;\n    const colFacets = fieldInf.colFacets;\n    valueMatrix.each((cell) => {\n        const unitFireBolt = cell.valueOf().firebolt();\n        if (!(xFields.every(isMeasure) && yFields.every(isMeasure))) {\n            const facetFields = cell.valueOf().facetByFields()[0];\n            const unitColFacets = facetFields.filter(d => colFacets.findIndex(v => v.equals(d)) !== -1);\n            const unitRowFacets = facetFields.filter(d => rowFacets.findIndex(v => v.equals(d)) !== -1);\n            let propFields;\n            if (colDim) {\n                propFields = unitColFacets.map(d => `${d}`);\n            } else {\n                propFields = unitRowFacets.map(d => `${d}`);\n            }\n\n            unitFireBolt.propagateWith('*', propFields, true);\n        }\n    });\n};\n\nconst defaultCrossInteractionPolicy = {\n    behaviours: {\n        '*': (propagationPayload, context) => {\n            const propagationCanvasAlias = propagationPayload.sourceCanvas;\n            const canvasAlias = context.parentAlias();\n            return propagationCanvasAlias ? canvasAlias === propagationCanvasAlias : true;\n        }\n    },\n    sideEffects: {\n        tooltip: (propagationPayload, context) => {\n            const propagationUnit = propagationPayload.sourceUnit;\n            const propagationCanvas = propagationPayload.sourceCanvas;\n            const unitId = context.id();\n            const canvasAlias = context.parentAlias();\n            if (propagationCanvas) {\n                return propagationCanvas !== canvasAlias ? true : unitId === propagationUnit;\n            }\n            return true;\n        },\n        selectionBox: () => false\n    }\n};\n\n/**\n * This class is responsible for dispatching any behavioural action to all the visual units housed by the canvas.\n * It is created by {@link Canvas}. This class does not handle any physical actions. Physical actions get triggered\n * in {@link VisualUnit} which is managed by it's own firebolt instance. The firebolt instance of canvas only\n * propagates the action to all the visual units in it's composition.\n *\n * To get the firebolt instance of {@link Canvas}\n * ```\n *  const firebolt = canvas.firebolt();\n * ```\n *\n * @class GroupFireBolt\n * @public\n */\nexport default class GroupFireBolt extends Firebolt {\n    constructor (...params) {\n        super(...params);\n        this._interactionPolicy = this.constructor.defaultInteractionPolicy();\n        this.crossInteractionPolicy(this.constructor.defaultCrossInteractionPolicy());\n    }\n\n    static defaultInteractionPolicy () {\n        return defaultInteractionPolicy;\n    }\n\n    static defaultCrossInteractionPolicy () {\n        return defaultCrossInteractionPolicy;\n    }\n\n    interactionPolicy (...policy) {\n        if (policy.length) {\n            this._interactionPolicy = policy[0] || this.constructor.defaultInteractionPolicy();\n            return this;\n        }\n        return this._interactionPolicy;\n    }\n\n    crossInteractionPolicy (...policy) {\n        if (policy.length) {\n            this._crossInteractionPolicy = mergeRecursive(mergeRecursive({},\n                this.constructor.defaultCrossInteractionPolicy()), policy[0] || {});\n            const context = this.context;\n            applyInteractionPolicy(this);\n            context._throwback.registerImmediateListener([CommonProps.MATRIX_CREATED], () => {\n                applyInteractionPolicy(this);\n            });\n            return this;\n        }\n        return this._crossInteractionPolicy;\n    }\n\n    /**\n     * Dispatches a behavioural action with a payload. It takes the name of the behavioural action and a payload\n     * object which contains the criteria aend an array of side effects which determines what side effects are\n     * going to be shown in each visual unit of the canvas. It prepares the datamodel from the given criteria\n     * and initiates a propagation from the datamodel of canvas. Then all the visual units of canvas which listens\n     * to the propagation gets informed on which rows got selected and dispatches the behavioural action sent during\n     * propagation.\n     *\n     * To dispatch a behavioural action on the canvas\n     * ```\n     *  // Get the firebolt instance of the canvas\n     *  const firebolt = canvas.firebolt();\n     *  // Dispatch a brush behaviour\n     *  firebolt.dispatchBehaviour('brush', {\n     *      // Selects all the rows with Horsepower having range between 100 and 200.\n     *      criteria: {\n     *          Horsepower: [100, 200]\n     *      }\n     *  });\n     * // On dispatch of this behavioural action, a selection box gets created and plots gets faded out which are the\n     * // default side effects mapped to this behavioural action.\n     * ```\n     *\n     * ```\n     * Additionally, it can also be passed an array of side effects in the payload.\n     *  // Dispatch a select behaviour with only crossline as side effect.\n     *  firebolt.dispatchBehaviour('select', {\n     *      criteria: {\n     *          Cylinders: ['8']\n     *      },\n     *      sideEffects: ['crossline']\n     *  });\n     * ```\n     *\n     * @public\n     *\n     * @param {string} behaviour Name of the behavioural action\n     * @param {Object} payload Object which contains the interaction information.\n     * @param {Object | Array.<Array>} payload.criteria Identifiers by which the selection happens.\n     * @param {Array.<string|Object>} payload.sideEffects Side effects which needs to be shown.\n     *\n     * @return {GroupFireBolt} Instance of firebolt.\n     */\n    dispatchBehaviour (behaviour, payload) {\n        const propPayload = Object.assign(payload);\n        const criteria = propPayload.criteria;\n        const data = this.context.composition().visualGroup.getGroupByData();\n        const fieldsConfig = data.getFieldsConfig();\n        const model = getDataModelFromIdentifiers(data, criteria);\n        const behaviouralAction = this._actions.behavioural[behaviour];\n\n        if (behaviouralAction) {\n            const fields = isSimpleObject(criteria) ? Object.keys(criteria) : (criteria ? criteria[0] : []);\n            const validFields = fields.filter(field => field in fieldsConfig);\n            const mutates = behaviouralAction.constructor.mutates();\n            const propConfig = {\n                payload: propPayload,\n                action: behaviour,\n                criteria: model,\n                sourceId: this.context.alias(),\n                isMutableAction: mutates,\n                propagateInterpolatedValues: validFields.every(field => fieldsConfig[field].def.type ===\n                    FieldType.MEASURE)\n            };\n            data.propagate(model, propConfig, true);\n        }\n        return this;\n    }\n\n    registerSideEffects (sideEffects) {\n        for (const key in sideEffects) {\n            this._sideEffectDefinitions[sideEffects[key].formalName()] = sideEffects[key];\n        }\n        return this;\n    }\n}\n","import GroupFireBolt from './group-firebolt';\n\nexport default GroupFireBolt;\n","export const APP_INITIAL_STATE = {\n    app: {\n        group: {},\n        units: {},\n        layers: {},\n        canvas: {}\n    },\n    local: {\n        canvas: {},\n        group: {},\n        units: {},\n        layers: {}\n    }\n};\n\n","import { GridLayout } from '@chartshq/layout';\nimport { transactor, Store, getUniqueId, selectElement, STATE_NAMESPACES, CommonProps } from 'muze-utils';\nimport { physicalActions, sideEffects, behaviouralActions, behaviourEffectMap } from '@chartshq/muze-firebolt';\nimport { RETINAL } from '../constants';\nimport TransactionSupport from '../transaction-support';\nimport { getRenderDetails, prepareLayout, renderLayout } from './layout-maker';\nimport { localOptions, canvasOptions } from './local-options';\nimport GroupFireBolt from './firebolt';\nimport options from '../options';\nimport { APP_INITIAL_STATE } from './app-state';\nimport { initCanvas,\n        setupChangeListener,\n        setLabelRotationForAxes,\n        createGroupState,\n        createLayoutManager,\n        setLayoutInfForUnits\n} from './helper';\n/**\n * Canvas is a logical component which houses a visualization by taking multiple variable in different encoding channel.\n * Canvas manages lifecycle of many other logical component and exposes one consistent interface for creation of chart.\n * Canvas is intialized from environment with settings from environment and singleton dependencies.\n *\n * To create an instance of canvas\n * ```\n *  const env = Muze();\n *  const canvas = env.canvas()\n * ```\n *\n *\n * @class\n * @public\n * @module Canvas\n */\nexport default class Canvas extends TransactionSupport {\n\n    /**\n     * Creates reactive property accessors.\n     * - data\n     * - height\n     * - width\n     * - config\n     * This configs are retrieved from options.\n     */\n    constructor (globalDependencies) {\n        super();\n\n        this._allOptions = Object.assign({}, options, localOptions);\n        this._registry = {};\n        this._composition = {};\n        this._cachedProps = {};\n        this._alias = null;\n        this._renderedResolve = null;\n        this._renderedPromise = new Promise((resolve) => {\n            this._renderedResolve = resolve;\n        });\n        this._composition.layout = new GridLayout();\n        this._store = new Store(APP_INITIAL_STATE);\n\n        this._throwback = new Store({\n            [CommonProps.MATRIX_CREATED]: false,\n            [CommonProps.ON_LAYER_DRAW]: null\n        });\n\n        // Setters and getters will be mounted on this. The object will be mutated.\n        const namespace = STATE_NAMESPACES.CANVAS_LOCAL_NAMESPACE;\n        const allOptions = Object.assign({}, options, localOptions, canvasOptions);\n\n        transactor(this, allOptions, this._store, {\n            namespace\n        });\n\n        this.dependencies(Object.assign({}, globalDependencies, this._dependencies));\n        this.firebolt(new GroupFireBolt(this, {\n            behavioural: behaviouralActions,\n            physical: physicalActions,\n            physicalBehaviouralMap: {}\n        }, sideEffects, behaviourEffectMap));\n        this.alias(`canvas-${getUniqueId()}`);\n        this.title('', {});\n        this.subtitle('', {});\n        this.legend({});\n        this.color({});\n        this.shape({});\n        this.size({});\n        setupChangeListener(this);\n         // init layoutManager\n        this._layoutManager = createLayoutManager();\n    }\n\n    /**\n     * Retrieves an instance of layout which is responsible for layouting. Layout is responsible for creating faceted\n     * presentation using table layout.\n     *\n     * @public\n     *\n     * @return {GridLayout} Instance of layout attached to canvas.\n     */\n    layout (...params) {\n        if (params.length) {\n            return this;\n        }\n        return this.composition().layout;\n    }\n\n    /**\n     * Retrieves the composition for a canvas\n     *\n     * @public\n     *\n     * @return {object} Instances of the components which canvas requires to draw the full visualization.\n     *      ```\n     *          {\n     *              layout: // Instance of {@link GridLayout}\n     *              legend: // Instance of {@link Legend}\n     *              subtitle: // Instance of {@link TextCell} using which the title is rendered\n     *              title: // Instance of {@link TextCell} using which the title is rendered\n     *              visualGroup: // Instance of {@link visualGroup}\n     *          }\n     *      ```\n     */\n    composition (...params) {\n        if (params.length) {\n            return this;\n        }\n        return this._composition;\n    }\n\n    done () {\n        return this._renderedPromise;\n    }\n\n    /**\n     * Sets or gets the alias of the canvas. Alias is a name by which the canvas can be referred.\n     *\n     * When setter\n     * @param {string} alias Name of the alias.\n     *\n     * @return {Canvas} Instance of the canvas.\n     *\n     * When getter\n     *\n     * @return {string} Alias of canvas.\n     *\n     * @public\n     */\n    alias (...params) {\n        if (params.length) {\n            const visualGroup = this.composition().visualGroup;\n            this._alias = params[0];\n            visualGroup && visualGroup.alias(this.alias());\n            return this;\n        }\n        return this._alias;\n    }\n\n    /**\n     * Creates an instance initiated with given settings.\n     *\n     * @param {Object} initialSettings Initial settings to be populated in the model\n     * @param {Object} regEntry newly created instance with the initial settings\n     * @param {Object} globalDependencies dependencies which will be created only once in the page\n     *\n     * @return {Object} newly created instance with the initial settings\n     */\n    static withSettings (initialSettings, regEntry, globalDependencies) {\n        const instance = new Canvas(globalDependencies);\n\n        for (const key in initialSettings) {\n            instance[key](initialSettings[key]);\n        }\n        // set registry for instance\n        instance.registry(regEntry);\n        return instance;\n    }\n\n    /**\n     *\n     *\n     * @static\n     *\n     * @memberof Canvas\n     */\n    static formalName () {\n        return 'canvas';\n    }\n\n    /**\n     * Returns the instance of firebolt associated with this canvas. The firebolt instance can be used to dispatch a\n     * behaviour dynamically on the canvas. This firebolt does not handle any physical actions. It is just used to\n     * propagate the action to all the visual units in it's composition.\n     *\n     * @public\n     *\n     * @return {GroupFireBolt} Instance of firebolt associated with canvas.\n     */\n    firebolt (...firebolt) {\n        if (firebolt.length) {\n            this._firebolt = firebolt[0];\n            return this;\n        }\n        return this._firebolt;\n    }\n\n    /**\n     * Registry peoperty accessor\n     *\n     * @param {Object} reg plain old javascript object keyvalue pairs. Key containing module name and value contains\n     * module definition class. The reg object has to be flat object of level 1.\n     */\n    registry (...params) {\n        if (params.length) {\n            const components = Object.assign({}, params[0].components);\n            const componentSubRegistry = Object.assign({}, params[0].componentSubRegistry);\n\n            this._registry = { components, componentSubRegistry };\n            const initedComponents = initCanvas(this);\n            // @todo is it okay to continue this tight behaviour? If not use a resolver to resolve diff component type.\n            this._composition.visualGroup = initedComponents[0];\n            createGroupState(this);\n            this.composition().visualGroup.alias(this.alias()).store(this._store);\n            return this;\n        }\n        return this._registry;\n    }\n\n    /*\n     * Prepare dependencies for top level elements\n     */\n    dependencies (...param) {\n        if (param.length) {\n            this._dependencies = param[0];\n            return this;\n        }\n        // @todo prepare dependencies here.\n        return this._dependencies;\n    }\n\n    /**\n     *\n     *\n     * @param {*} lifeCycles\n     *\n     * @memberof Canvas\n     */\n    lifeCycle (lifeCycles) {\n        const lifeCycleManager = this.dependencies().lifeCycleManager;\n        if (lifeCycles) {\n            lifeCycleManager.register(lifeCycles);\n            return this;\n        }\n        return lifeCycleManager;\n    }\n\n    /**\n     *\n     *\n     * @readonly\n     * @memberof Canvas\n     */\n    legend (...params) {\n        if (params.length) {\n            return this;\n        }\n        return this.composition().legend;\n    }\n\n    /**\n     * Returns a promise for various {@link LifecycleEvents} of the various components of canvas. The promise gets\n     * resolved once the particular event gets completed.\n     *\n     * To use this,\n     * ```\n     *      canvas.once('layer.drawn').then(() => {\n     *          // Do any post drawing work here.\n     *      });\n     * ```\n     * @public\n     *\n     * @param {string} eventName Name of the lifecycle event.\n     *\n     * @return {Promise} A pending promise waiting for resolve to be called.\n     */\n    once (eventName) {\n        const lifeCycleManager = this.dependencies().lifeCycleManager;\n        return lifeCycleManager.retrieve(eventName);\n    }\n\n    /**\n     * Internal function to trigger render, this method is cognizant of all the properties of the core modules and\n     * establish a passive reactivity. Passive reactivity is not always a bad thing :)\n     * @internal\n     */\n    render () {\n        const mount = this.mount();\n        // removeChild(mount);\n        const lifeCycleManager = this.dependencies().lifeCycleManager;\n        // Get render details including arrangement and measurement\n        const renderDetails = getRenderDetails(this, mount);\n        lifeCycleManager.notify({ client: this, action: 'beforedraw' });\n        // Prepare the layout by triggering the matrix calculation\n        prepareLayout(this.layout(), renderDetails);\n\n        this._layoutManager.dimension({\n            height: renderDetails.measurement.canvasHeight,\n            width: renderDetails.measurement.canvasWidth\n        });\n\n        this._layoutManager.renderAt(mount);\n\n        // Render each component\n        renderLayout(this, renderDetails);\n\n        setLayoutInfForUnits(this);\n\n        // setLabelRotation\n        setLabelRotationForAxes(this);\n    }\n\n    /**\n     * Returns the instances of x axis of the canvas. It returns the instances in a two dimensional array form.\n     *\n     * ```\n     *   // The first element in the sub array represents the top axis and the second element represents the bottom\n     *   // axis.\n     *   [\n     *      [X1, X2],\n     *      [X3, X4]\n     *   ]\n     * ```\n     * @public\n     *\n     * @return {Array.<Array>} Instances of x axis.\n     */\n    xAxes () {\n        return this.composition().visualGroup.getAxes('x');\n    }\n\n    /**\n     * Returns the instances of y axis of the canvas. It returns the instances in a two dimensional array form.\n     *\n     * ```\n     *   // The first element in the sub array represents the left axis and the second element represents the right\n     *   // axis.\n     *   [\n     *      [Y1, Y2],\n     *      [Y3, Y4]\n     *   ]\n     * ```\n     * @public\n     * @return {Array.<Array>} Instances of y axis.\n     */\n    yAxes () {\n        return this.composition().visualGroup.getAxes('y');\n    }\n\n    /**\n     * Returns all the retinal axis of the canvas. Color, shape and size axis are combinedly called retinal axis.\n     *\n     * @public\n     * @return {Object} Instances of retinal axis.\n     *          ```\n     *              {\n     *                  color: [ColorAxis], // Array of color axis.\n     *                  shape: [ShapeAxis], // Array of shape axis.\n     *                  size: [SizeAxis] // Array of size axis.\n     *              }\n     *          ```\n     */\n    getRetinalAxes () {\n        const visualGroup = this.composition().visualGroup;\n        return visualGroup.getAxes(RETINAL);\n    }\n\n    mount (...params) {\n        if (params.length) {\n            let value = params[0];\n            if (typeof params[0] === 'string') {\n                value = selectElement(params[0]).node();\n            }\n            this._mount = value;\n            return this;\n        }\n        return this._mount;\n    }\n}\n","import { cellRegistry, SimpleCell } from '@chartshq/visual-cell';\nimport { VisualUnit } from '@chartshq/visual-unit';\nimport { layerRegistry } from '@chartshq/visual-layer';\nimport { SimpleGroup, VisualGroup } from '@chartshq/visual-group';\n\nexport const COMPONENTS = {\n    VisualGroup,\n    VisualUnit\n};\nexport const SUBREGISTRIES = {\n    cellRegistry,\n    layerRegistry\n};\nexport const INTERFACES = {\n    SimpleGroup,\n    SimpleCell\n};\n\n","import { DEFAULT_LAYERS } from './defaults';\n\nexport default () => {\n    const reg = DEFAULT_LAYERS;\n    const regObj = {\n        set: (key, def) => {\n            reg[key] = def;\n            return regObj;\n        },\n        get: () => reg\n    };\n    return regObj;\n};\n","import {\n    transactor,\n    Smartlabel,\n    enableChainedTransaction,\n    LifeCycleManager,\n    DataModel,\n    makeElement,\n    getClientPoint,\n    selectElement,\n    getEvent,\n    require,\n    DateTimeFormatter,\n    Store\n} from 'muze-utils';\n\nimport {\n    SurrogateSideEffect,\n    SpawnableSideEffect,\n    sideEffects,\n    PersistentBehaviour,\n    GenericBehaviour,\n    VolatileBehaviour,\n    behaviouralActions,\n    GenericSideEffect\n} from '@chartshq/muze-firebolt';\nimport { layerFactory } from '@chartshq/visual-layer';\nimport pkg from '../package.json';\nimport * as operators from './operators';\nimport { actionModel as ActionModel } from './action-model';\nimport options from './options';\nimport { Canvas } from './canvas';\nimport { COMPONENTS, SUBREGISTRIES } from './default-registry';\nimport './muze.scss';\n\n// Cache singleton instances which should be included only once in a page\nconst globalCache = {};\nconst defaultRegistry = COMPONENTS;\n\nconst overrideRegistryDefinitions = (overrideRegistry, registry) => {\n    for (const prop in overrideRegistry) {\n        registry.set(prop, overrideRegistry[prop]);\n    }\n};\n\n/**\n * Entry point to renderer. Initializes an environment with settings and registries for canvas. This is a simple wrapper\n * over {@link Canvas} which enables common configuration passing to multiple such canvases.\n *\n * Everytime `muze()` is called it creates an environment. These environment supports subset of APIs of Canvas. If\n * common configuration is used to render multiple canvases then it can be set directly in the env. Like if data is\n * common across all the visulization then its better to set the data in env. When a canvas is created it receives all\n * those configuration from env.\n *\n * ```\n *  // Creates an environment\n *  const env = muze()\n *  // Set data property in environment, so that all the canvas created from the same environment gets this data\n *  // automatically\n *  env.data(dm);\n *  // Creates canvas, by default env pushes data to canvas instance\n *  const canvas = env.canvas();\n * ```\n *\n * If a property is set on both environment and canvas instance, property set on canvas instance gets more priority.\n *\n * @public\n * @module muze\n * @namespace Muze\n *\n * @return {Env} Instance of an environment\n */\nconst muze = () => {\n    // Setters and getters will be mounted on this. Object will be mutated.\n    const [env, globalStore] = transactor({}, options);\n    const components = Object.assign({}, COMPONENTS);\n    const componentSubRegistryDef = Object.assign(SUBREGISTRIES);\n    const componentSubRegistry = {};\n\n    for (const prop in componentSubRegistryDef) {\n        componentSubRegistry[prop] = componentSubRegistryDef[prop]();\n    }\n\n    // Apart form the setter getter, an instance method is injected to create real renderer instances\n    env.canvas = () => {\n        // Create a canvas instance with this settings\n        const settings = globalStore.serialize();\n        const canvas = Canvas.withSettings(settings, { /* registry */\n            components,\n            componentSubRegistry\n        }, env.globalDependencies());\n\n        // Whenever settings is changed canvas is updated\n        enableChainedTransaction(globalStore, canvas, Object.keys(settings));\n\n        return canvas;\n    };\n\n    // Global dependencies for for compositions. Only one copy of the same should be in the page\n    env.globalDependencies = () => {\n        if (!globalCache.smartlabel) {\n            globalCache.smartlabel = new Smartlabel(1, 'body');\n        }\n        return {\n            smartlabel: globalCache.smartlabel,\n            lifeCycleManager: new LifeCycleManager()\n        };\n    };\n\n    // Retrieves global settings. This getter is readonly so that user can't change this as change should happen\n    // only from setter to avoid unwanted sync issues.\n    env.settings = () => globalStore.serialize();\n\n    env.registry = (...overrideRegistry) => {\n        // Selectively copy the properties from COMPONENTS\n        if (overrideRegistry.length) {\n            for (const prop in overrideRegistry) {\n                if (prop in defaultRegistry) {\n                    components[prop] = overrideRegistry[prop];\n                }\n            }\n            return env;\n        }\n        return components;\n    };\n\n    env.cellRegistry = (...overrideRegistry) => {\n        const cellRegistry = componentSubRegistry.cellRegistry;\n        if (overrideRegistry.length) {\n            overrideRegistryDefinitions(overrideRegistry[0], cellRegistry);\n            return env;\n        }\n        return cellRegistry.get();\n    };\n\n    env.layerRegistry = (...overrideRegistry) => {\n        const layerRegistry = componentSubRegistry.layerRegistry;\n        if (overrideRegistry.length) {\n            overrideRegistryDefinitions(overrideRegistry[0], layerRegistry);\n            return env;\n        }\n        return layerRegistry.get();\n    };\n\n    return env;\n};\n\nconst SideEffects = {\n    sideEffects,\n    standards: {\n        SurrogateSideEffect,\n        SpawnableSideEffect,\n        GenericSideEffect\n    }\n};\n\nconst Behaviours = {\n    behaviouralActions,\n    standards: {\n        GenericBehaviour,\n        PersistentBehaviour,\n        VolatileBehaviour\n    }\n};\n\nmuze.DataModel = DataModel;\nmuze.version = pkg.version;\nmuze.SideEffects = SideEffects;\nmuze.ActionModel = ActionModel;\nmuze.layerFactory = layerFactory;\nmuze.Operators = operators;\nmuze.Behaviours = Behaviours;\nmuze.utils = {\n    getClientPoint,\n    getEvent,\n    makeElement,\n    selectElement,\n    DateTimeFormatter,\n    require\n};\nmuze.Model = new Store().model.constructor;\nexport default muze;\n"],"sourceRoot":""}