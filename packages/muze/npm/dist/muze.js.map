{"version":3,"sources":["webpack://muze/webpack/universalModuleDefinition","webpack://muze/webpack/bootstrap","webpack://muze/webpack://DataModel/webpack/universalModuleDefinition","webpack://muze/webpack://DataModel/webpack/bootstrap","webpack://muze/webpack://DataModel/src/index.js","webpack://muze/webpack://DataModel/src/enums/data-format.js","webpack://muze/webpack://DataModel/src/enums/dimension-subtype.js","webpack://muze/webpack://DataModel/src/enums/measure-subtype.js","webpack://muze/webpack://DataModel/src/enums/field-type.js","webpack://muze/webpack://DataModel/src/enums/filtering-mode.js","webpack://muze/webpack://DataModel/src/enums/group-by-functions.js","webpack://muze/webpack://DataModel/src/utils/date-time-formatter.js","webpack://muze/webpack://DataModel/src/utils/column-major.js","webpack://muze/webpack://DataModel/src/utils/extend2.js","webpack://muze/webpack://DataModel/src/utils/helper.js","webpack://muze/webpack://DataModel/src/field-store.js","webpack://muze/webpack://DataModel/src/value.js","webpack://muze/webpack://DataModel/src/operator/row-diffset-iterator.js","webpack://muze/webpack://DataModel/src/invalid-aware-types.js","webpack://muze/webpack://DataModel/src/operator/compose.js","webpack://muze/webpack://DataModel/src/constants/index.js","webpack://muze/webpack://DataModel/src/operator/get-common-schema.js","webpack://muze/webpack://DataModel/src/operator/cross-product.js","webpack://muze/webpack://DataModel/src/operator/merge-sort.js","webpack://muze/webpack://DataModel/src/operator/data-builder.js","webpack://muze/webpack://DataModel/src/operator/difference.js","webpack://muze/webpack://DataModel/src/operator/group-by-function.js","webpack://muze/webpack://DataModel/src/utils/reducer-store.js","webpack://muze/webpack://DataModel/src/operator/natural-join-filter-function.js","webpack://muze/webpack://DataModel/src/operator/union.js","webpack://muze/webpack://DataModel/src/operator/outer-join.js","webpack://muze/webpack://DataModel/src/fields/field/index.js","webpack://muze/webpack://DataModel/src/fields/dimension/index.js","webpack://muze/webpack://DataModel/src/fields/categorical/index.js","webpack://muze/webpack://DataModel/src/fields/temporal/index.js","webpack://muze/webpack://DataModel/src/fields/binned/index.js","webpack://muze/webpack://DataModel/src/fields/measure/index.js","webpack://muze/webpack://DataModel/src/fields/continuous/index.js","webpack://muze/webpack://DataModel/src/fields/parsers/field-parser/index.js","webpack://muze/webpack://DataModel/src/fields/parsers/categorical-parser/index.js","webpack://muze/webpack://DataModel/src/fields/parsers/temporal-parser/index.js","webpack://muze/webpack://DataModel/src/fields/parsers/binned-parser/index.js","webpack://muze/webpack://DataModel/src/fields/parsers/continuous-parser/index.js","webpack://muze/webpack://DataModel/src/fields/partial-field/index.js","webpack://muze/webpack://DataModel/src/field-creator.js","webpack://muze/webpack://DataModel/src/default-config.js","webpack://muze/webpack://DataModel/src/converter/dsv-arr.js","webpack://muze/webpack://DataModel/node_modules/d3-dsv/src/dsv.js","webpack://muze/webpack://DataModel/node_modules/d3-dsv/src/csv.js","webpack://muze/webpack://DataModel/node_modules/d3-dsv/src/tsv.js","webpack://muze/webpack://DataModel/src/converter/dsv-str.js","webpack://muze/webpack://DataModel/src/converter/flat-json.js","webpack://muze/webpack://DataModel/src/converter/auto-resolver.js","webpack://muze/webpack://DataModel/src/helper.js","webpack://muze/webpack://DataModel/src/relation.js","webpack://muze/webpack://DataModel/src/datamodel.js","webpack://muze/webpack://DataModel/src/operator/group-by.js","webpack://muze/webpack://DataModel/src/operator/bucket-creator.js","webpack://muze/webpack://DataModel/src/stats/index.js","webpack://muze/webpack://DataModel/src/export.js","webpack://muze/webpack://DataModel/src/operator/pure-operators.js","webpack://muze/webpack://DataModel/src/operator/natural-join.js","webpack://muze/webpack://hyperdis/webpack/universalModuleDefinition","webpack://muze/webpack://hyperdis/webpack/bootstrap","webpack://muze/webpack://hyperdis/src/utils/set.js","webpack://muze/webpack://hyperdis/src/utils/index.js","webpack://muze/webpack://hyperdis/src/graph-node.js","webpack://muze/webpack://hyperdis/src/electric-node.js","webpack://muze/webpack://hyperdis/src/graph.js","webpack://muze/webpack://hyperdis/src/model.js","webpack://muze/webpack://hyperdis/src/index.js","webpack://muze/(webpack)/buildin/module.js","webpack://muze/./packages/muze-utils/node_modules/fusioncharts-smartlabel/lib/SmartlabelManager.js","webpack://muze/./packages/muze-utils/node_modules/fusioncharts-smartlabel/lib/lib.js","webpack://muze/./packages/muze/src/index.js","webpack://muze/./packages/muze-utils/node_modules/fusioncharts-smartlabel/lib/container-manager.js","webpack://muze/./packages/muze-utils/node_modules/d3-array/src/ascending.js","webpack://muze/./packages/muze-utils/node_modules/d3-array/src/bisector.js","webpack://muze/./packages/muze-utils/node_modules/d3-array/src/bisect.js","webpack://muze/./packages/muze-utils/node_modules/d3-array/src/cross.js","webpack://muze/./packages/muze-utils/node_modules/d3-array/src/number.js","webpack://muze/./packages/muze-utils/node_modules/d3-array/src/array.js","webpack://muze/./packages/muze-utils/node_modules/d3-array/src/range.js","webpack://muze/./packages/muze-utils/node_modules/d3-array/src/ticks.js","webpack://muze/./packages/muze-utils/node_modules/d3-array/src/threshold/sturges.js","webpack://muze/./packages/muze-utils/node_modules/d3-array/src/quantile.js","webpack://muze/./packages/muze-utils/node_modules/d3-collection/src/map.js","webpack://muze/./packages/muze-utils/node_modules/d3-collection/src/nest.js","webpack://muze/./packages/muze-utils/node_modules/d3-collection/src/set.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale/src/array.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale/src/ordinal.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale/src/band.js","webpack://muze/./packages/muze-utils/node_modules/d3-color/src/define.js","webpack://muze/./packages/muze-utils/node_modules/d3-color/src/color.js","webpack://muze/./packages/muze-utils/node_modules/d3-color/src/math.js","webpack://muze/./packages/muze-utils/node_modules/d3-color/src/lab.js","webpack://muze/./packages/muze-utils/node_modules/d3-color/src/cubehelix.js","webpack://muze/./packages/muze-utils/node_modules/d3-interpolate/src/basis.js","webpack://muze/./packages/muze-utils/node_modules/d3-interpolate/src/constant.js","webpack://muze/./packages/muze-utils/node_modules/d3-interpolate/src/color.js","webpack://muze/./packages/muze-utils/node_modules/d3-interpolate/src/rgb.js","webpack://muze/./packages/muze-utils/node_modules/d3-interpolate/src/number.js","webpack://muze/./packages/muze-utils/node_modules/d3-interpolate/src/basisClosed.js","webpack://muze/./packages/muze-utils/node_modules/d3-interpolate/src/object.js","webpack://muze/./packages/muze-utils/node_modules/d3-interpolate/src/string.js","webpack://muze/./packages/muze-utils/node_modules/d3-interpolate/src/value.js","webpack://muze/./packages/muze-utils/node_modules/d3-interpolate/src/transform/parse.js","webpack://muze/./packages/muze-utils/node_modules/d3-interpolate/src/date.js","webpack://muze/./packages/muze-utils/node_modules/d3-interpolate/src/array.js","webpack://muze/./packages/muze-utils/node_modules/d3-interpolate/src/round.js","webpack://muze/./packages/muze-utils/node_modules/d3-interpolate/src/transform/decompose.js","webpack://muze/./packages/muze-utils/node_modules/d3-interpolate/src/transform/index.js","webpack://muze/./packages/muze-utils/node_modules/d3-interpolate/src/zoom.js","webpack://muze/./packages/muze-utils/node_modules/d3-interpolate/src/hsl.js","webpack://muze/./packages/muze-utils/node_modules/d3-interpolate/src/hcl.js","webpack://muze/./packages/muze-utils/node_modules/d3-interpolate/src/cubehelix.js","webpack://muze/./packages/muze-utils/node_modules/d3-interpolate/src/piecewise.js","webpack://muze/./packages/muze-utils/node_modules/d3-interpolate/src/quantize.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale/src/constant.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale/src/number.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale/src/continuous.js","webpack://muze/./packages/muze-utils/node_modules/d3-format/src/formatDecimal.js","webpack://muze/./packages/muze-utils/node_modules/d3-format/src/exponent.js","webpack://muze/./packages/muze-utils/node_modules/d3-format/src/formatSpecifier.js","webpack://muze/./packages/muze-utils/node_modules/d3-format/src/formatTrim.js","webpack://muze/./packages/muze-utils/node_modules/d3-format/src/formatPrefixAuto.js","webpack://muze/./packages/muze-utils/node_modules/d3-format/src/defaultLocale.js","webpack://muze/./packages/muze-utils/node_modules/d3-format/src/formatRounded.js","webpack://muze/./packages/muze-utils/node_modules/d3-format/src/formatTypes.js","webpack://muze/./packages/muze-utils/node_modules/d3-format/src/identity.js","webpack://muze/./packages/muze-utils/node_modules/d3-format/src/locale.js","webpack://muze/./packages/muze-utils/node_modules/d3-format/src/formatGroup.js","webpack://muze/./packages/muze-utils/node_modules/d3-format/src/formatNumerals.js","webpack://muze/./packages/muze-utils/node_modules/d3-format/src/precisionFixed.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale/src/tickFormat.js","webpack://muze/./packages/muze-utils/node_modules/d3-format/src/precisionPrefix.js","webpack://muze/./packages/muze-utils/node_modules/d3-format/src/precisionRound.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale/src/linear.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale/src/identity.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale/src/nice.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale/src/log.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale/src/pow.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale/src/quantile.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale/src/quantize.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale/src/threshold.js","webpack://muze/./packages/muze-utils/node_modules/d3-time/src/interval.js","webpack://muze/./packages/muze-utils/node_modules/d3-time/src/millisecond.js","webpack://muze/./packages/muze-utils/node_modules/d3-time/src/duration.js","webpack://muze/./packages/muze-utils/node_modules/d3-time/src/second.js","webpack://muze/./packages/muze-utils/node_modules/d3-time/src/minute.js","webpack://muze/./packages/muze-utils/node_modules/d3-time/src/hour.js","webpack://muze/./packages/muze-utils/node_modules/d3-time/src/day.js","webpack://muze/./packages/muze-utils/node_modules/d3-time/src/week.js","webpack://muze/./packages/muze-utils/node_modules/d3-time/src/month.js","webpack://muze/./packages/muze-utils/node_modules/d3-time/src/year.js","webpack://muze/./packages/muze-utils/node_modules/d3-time/src/utcMinute.js","webpack://muze/./packages/muze-utils/node_modules/d3-time/src/utcHour.js","webpack://muze/./packages/muze-utils/node_modules/d3-time/src/utcDay.js","webpack://muze/./packages/muze-utils/node_modules/d3-time/src/utcWeek.js","webpack://muze/./packages/muze-utils/node_modules/d3-time/src/utcMonth.js","webpack://muze/./packages/muze-utils/node_modules/d3-time/src/utcYear.js","webpack://muze/./packages/muze-utils/node_modules/d3-time-format/src/locale.js","webpack://muze/./packages/muze-utils/node_modules/d3-time-format/src/defaultLocale.js","webpack://muze/./packages/muze-utils/node_modules/d3-time-format/src/isoFormat.js","webpack://muze/./packages/muze-utils/node_modules/d3-time-format/src/isoParse.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale/src/time.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale/src/colors.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale/src/category10.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale/src/category20b.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale/src/category20.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale/src/category20c.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale/src/cubehelix.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale/src/rainbow.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale/src/viridis.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale/src/sequential.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/colors.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/categorical/Accent.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/categorical/category10.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/categorical/Dark2.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/categorical/Paired.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/categorical/Pastel1.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/categorical/Pastel2.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/categorical/Set1.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/categorical/Set2.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/categorical/Set3.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/ramp.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/diverging/BrBG.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/diverging/PRGn.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/diverging/PiYG.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/diverging/PuOr.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/diverging/RdBu.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/diverging/RdGy.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/diverging/RdYlBu.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/diverging/RdYlGn.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/diverging/Spectral.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/sequential-multi/BuGn.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/sequential-multi/BuPu.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/sequential-multi/GnBu.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/sequential-multi/OrRd.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/sequential-multi/PuBuGn.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/sequential-multi/PuBu.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/sequential-multi/PuRd.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/sequential-multi/RdPu.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/sequential-multi/YlGnBu.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/sequential-multi/YlGn.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/sequential-multi/YlOrBr.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/sequential-multi/YlOrRd.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/sequential-single/Blues.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/sequential-single/Greens.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/sequential-single/Greys.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/sequential-single/Purples.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/sequential-single/Reds.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/sequential-single/Oranges.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/sequential-multi/cubehelix.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/sequential-multi/rainbow.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/sequential-multi/sinebow.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/sequential-multi/viridis.js","webpack://muze/./packages/muze-utils/src/enums/namespace.js","webpack://muze/./packages/muze-utils/src/enums/reserved-fields.js","webpack://muze/./packages/muze-utils/src/enums/common-props.js","webpack://muze/./packages/muze-utils/src/enums/constants.js","webpack://muze/./packages/muze-utils/node_modules/d3-axis/src/array.js","webpack://muze/./packages/muze-utils/node_modules/d3-axis/src/identity.js","webpack://muze/./packages/muze-utils/node_modules/d3-axis/src/axis.js","webpack://muze/./packages/muze-utils/node_modules/d3-path/src/path.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/constant.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/math.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/arc.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/curve/linear.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/point.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/line.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/area.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/descending.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/identity.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/curve/radial.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/lineRadial.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/array.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/symbol/circle.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/symbol/cross.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/symbol/diamond.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/symbol/star.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/symbol/square.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/symbol/triangle.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/symbol/wye.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/noop.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/curve/basis.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/curve/basisClosed.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/curve/basisOpen.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/curve/bundle.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/curve/cardinal.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/curve/cardinalClosed.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/curve/cardinalOpen.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/curve/catmullRom.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/curve/catmullRomClosed.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/curve/catmullRomOpen.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/curve/linearClosed.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/curve/monotone.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/curve/natural.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/curve/step.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/offset/none.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/order/none.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/stack.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/order/ascending.js","webpack://muze/./packages/muze-utils/node_modules/d3-ease/src/cubic.js","webpack://muze/./packages/muze-utils/node_modules/d3-ease/src/poly.js","webpack://muze/./packages/muze-utils/node_modules/d3-ease/src/sin.js","webpack://muze/./packages/muze-utils/node_modules/d3-ease/src/bounce.js","webpack://muze/./packages/muze-utils/node_modules/d3-ease/src/back.js","webpack://muze/./packages/muze-utils/node_modules/d3-ease/src/elastic.js","webpack://muze/./packages/muze-utils/node_modules/d3-voronoi/src/constant.js","webpack://muze/./packages/muze-utils/node_modules/d3-voronoi/src/point.js","webpack://muze/./packages/muze-utils/node_modules/d3-voronoi/src/RedBlackTree.js","webpack://muze/./packages/muze-utils/node_modules/d3-voronoi/src/Edge.js","webpack://muze/./packages/muze-utils/node_modules/d3-voronoi/src/Cell.js","webpack://muze/./packages/muze-utils/node_modules/d3-voronoi/src/Circle.js","webpack://muze/./packages/muze-utils/node_modules/d3-voronoi/src/Beach.js","webpack://muze/./packages/muze-utils/node_modules/d3-voronoi/src/Diagram.js","webpack://muze/./packages/muze-utils/node_modules/d3-voronoi/src/voronoi.js","webpack://muze/./packages/muze-utils/src/DataSystem/selection.js","webpack://muze/./packages/muze-utils/src/enums/stack-config.js","webpack://muze/./packages/muze-utils/src/common-utils.js","webpack://muze/./packages/muze-utils/node_modules/d3-ease/src/linear.js","webpack://muze/./packages/muze-utils/node_modules/d3-ease/src/circle.js","webpack://muze/./packages/muze-utils/src/DataSystem/dataSelect.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/symbol.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/order/descending.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/offset/diverging.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/offset/expand.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/offset/wiggle.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/pie.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/namespaces.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/namespace.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/creator.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selector.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selectorAll.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/matcher.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/sparse.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/enter.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/constant.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/data.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/sort.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/attr.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/window.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/style.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/classed.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/text.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/html.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/raise.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/lower.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/insert.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/remove.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/clone.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/on.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/dispatch.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/index.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/select.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/selectAll.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/filter.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/exit.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/merge.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/order.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/call.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/nodes.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/node.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/size.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/empty.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/each.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/property.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/append.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/datum.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/select.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/local.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/sourceEvent.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/point.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/mouse.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/touch.js","webpack://muze/./packages/muze-utils/node_modules/d3-dispatch/src/dispatch.js","webpack://muze/./packages/muze-utils/node_modules/d3-drag/src/noevent.js","webpack://muze/./packages/muze-utils/node_modules/d3-drag/src/nodrag.js","webpack://muze/./packages/muze-utils/node_modules/d3-drag/src/constant.js","webpack://muze/./packages/muze-utils/node_modules/d3-drag/src/event.js","webpack://muze/./packages/muze-utils/node_modules/d3-drag/src/drag.js","webpack://muze/./packages/muze-utils/node_modules/d3-timer/src/timer.js","webpack://muze/./packages/muze-utils/node_modules/d3-timer/src/timeout.js","webpack://muze/./packages/muze-utils/node_modules/d3-transition/src/transition/schedule.js","webpack://muze/./packages/muze-utils/node_modules/d3-transition/src/transition/tween.js","webpack://muze/./packages/muze-utils/node_modules/d3-transition/src/transition/interpolate.js","webpack://muze/./packages/muze-utils/node_modules/d3-transition/src/transition/remove.js","webpack://muze/./packages/muze-utils/node_modules/d3-transition/src/transition/selection.js","webpack://muze/./packages/muze-utils/node_modules/d3-transition/src/transition/text.js","webpack://muze/./packages/muze-utils/node_modules/d3-transition/src/transition/index.js","webpack://muze/./packages/muze-utils/node_modules/d3-transition/src/transition/select.js","webpack://muze/./packages/muze-utils/node_modules/d3-transition/src/transition/selectAll.js","webpack://muze/./packages/muze-utils/node_modules/d3-transition/src/transition/filter.js","webpack://muze/./packages/muze-utils/node_modules/d3-transition/src/transition/merge.js","webpack://muze/./packages/muze-utils/node_modules/d3-transition/src/transition/transition.js","webpack://muze/./packages/muze-utils/node_modules/d3-transition/src/transition/on.js","webpack://muze/./packages/muze-utils/node_modules/d3-transition/src/transition/attr.js","webpack://muze/./packages/muze-utils/node_modules/d3-transition/src/transition/attrTween.js","webpack://muze/./packages/muze-utils/node_modules/d3-transition/src/transition/style.js","webpack://muze/./packages/muze-utils/node_modules/d3-transition/src/transition/styleTween.js","webpack://muze/./packages/muze-utils/node_modules/d3-transition/src/transition/delay.js","webpack://muze/./packages/muze-utils/node_modules/d3-transition/src/transition/duration.js","webpack://muze/./packages/muze-utils/node_modules/d3-transition/src/transition/ease.js","webpack://muze/./packages/muze-utils/node_modules/d3-transition/src/selection/transition.js","webpack://muze/./packages/muze-utils/node_modules/d3-transition/src/selection/index.js","webpack://muze/./packages/muze-utils/node_modules/d3-transition/src/selection/interrupt.js","webpack://muze/./packages/muze-utils/node_modules/d3-transition/src/interrupt.js","webpack://muze/./packages/muze-utils/src/renderer-utils.js","webpack://muze/./packages/muze-utils/src/lifecycle-manager/event-list.js","webpack://muze/./packages/muze-utils/src/lifecycle-manager/lifecycle-manager.js","webpack://muze/./packages/muze-utils/src/lifecycle-manager/index.js","webpack://muze/./packages/muze-utils/src/lifecycle-manager/helper.js","webpack://muze/./packages/muze-utils/src/index.js","webpack://muze/./packages/muze-firebolt/src/enums/actions.js","webpack://muze/./packages/muze-firebolt/src/enums/selection.js","webpack://muze/./packages/muze-firebolt/src/selection-set/index.js","webpack://muze/./packages/muze-firebolt/src/selection-set/selection-set.js","webpack://muze/./packages/muze-firebolt/src/helper/index.js","webpack://muze/./packages/muze-firebolt/src/firebolt.js","webpack://muze/./packages/muze-firebolt/src/actions/behavioural/generic.js","webpack://muze/./packages/muze-firebolt/src/actions/behavioural/volatile.js","webpack://muze/./packages/muze-firebolt/src/enums/behaviours.js","webpack://muze/./packages/muze-firebolt/src/actions/behavioural/highlight.js","webpack://muze/./packages/muze-firebolt/src/actions/behavioural/brush.js","webpack://muze/./packages/muze-firebolt/src/actions/behavioural/filter.js","webpack://muze/./packages/muze-firebolt/src/actions/behavioural/persistent.js","webpack://muze/./packages/muze-firebolt/src/actions/behavioural/select.js","webpack://muze/./packages/muze-firebolt/src/actions/physical/helpers/drag-action-config.js","webpack://muze/./packages/muze-firebolt/src/actions/physical/helpers/drag-event.js","webpack://muze/./packages/muze-firebolt/src/actions/physical/hover.js","webpack://muze/./packages/muze-firebolt/src/enums/constants.js","webpack://muze/./packages/muze-firebolt/src/actions/physical/helpers/index.js","webpack://muze/./packages/muze-firebolt/src/actions/physical/click.js","webpack://muze/./packages/muze-firebolt/src/actions/physical/index.js","webpack://muze/./packages/muze-firebolt/src/actions/physical/drag.js","webpack://muze/./packages/muze-firebolt/src/actions/physical/longtouch.js","webpack://muze/./packages/muze-firebolt/src/actions/physical/touch-drag.js","webpack://muze/./packages/muze-firebolt/src/side-effects/generic/props.js","webpack://muze/./packages/muze-firebolt/src/side-effects/generic/index.js","webpack://muze/./packages/muze-firebolt/src/side-effects/generic/generic-sideeffect.js","webpack://muze/./packages/muze-firebolt/src/side-effects/surrogate.js","webpack://muze/./packages/muze-firebolt/src/side-effects/spawnable.js","webpack://muze/./packages/muze-firebolt/src/side-effects/selection-box/helper.js","webpack://muze/./packages/muze-firebolt/src/side-effects/selection-box/index.js","webpack://muze/./packages/muze-firebolt/src/actions/physical/selection-box-drag.js","webpack://muze/./packages/muze-tooltip/src/constants.js","webpack://muze/./packages/muze-tooltip/src/default-config.js","webpack://muze/./packages/muze-tooltip/src/helper.js","webpack://muze/./packages/muze-tooltip/src/content.js","webpack://muze/./packages/muze-tooltip/src/tooltip.js","webpack://muze/./packages/muze-firebolt/src/side-effects/tooltip/strategies.js","webpack://muze/./packages/muze-firebolt/src/side-effects/tooltip/index.js","webpack://muze/./packages/muze-firebolt/src/side-effects/helper/index.js","webpack://muze/./packages/muze-firebolt/src/side-effects/crossline/index.js","webpack://muze/./packages/muze-firebolt/src/side-effects/plot-highlighter/strategy.js","webpack://muze/./packages/muze-firebolt/src/side-effects/plot-highlighter/index.js","webpack://muze/./packages/muze-firebolt/src/side-effects/filter/index.js","webpack://muze/./packages/muze-firebolt/src/side-effects/anchors/index.js","webpack://muze/./packages/muze-firebolt/src/side-effects/persistent-anchors.js","webpack://muze/./packages/muze-firebolt/src/side-effects/brush-anchors.js","webpack://muze/./packages/muze-firebolt/src/behaviour-effect-map.js","webpack://muze/./packages/visual-layer/src/enums/constants.js","webpack://muze/./packages/visual-layer/src/layers/area/default-config.js","webpack://muze/./packages/visual-layer/src/simple-layer/simple-layer.js","webpack://muze/./packages/visual-layer/src/base-layer/props.js","webpack://muze/./packages/muze-axis/src/enums/axis-orientation.js","webpack://muze/./packages/muze-axis/src/enums/scale-type.js","webpack://muze/./packages/muze-axis/src/enums/constants.js","webpack://muze/./packages/muze-axis/src/scale-creator.js","webpack://muze/./packages/muze-axis/src/cartesian-axis/default-config.js","webpack://muze/./packages/muze-axis/src/axis-renderer.js","webpack://muze/./packages/muze-axis/src/cartesian-axis/skip-ticks.js","webpack://muze/./packages/muze-axis/src/cartesian-axis/space-setter.js","webpack://muze/./packages/muze-axis/src/cartesian-axis/helper.js","webpack://muze/./packages/muze-axis/src/cartesian-axis/props.js","webpack://muze/./packages/muze-axis/src/cartesian-axis/simple-axis.js","webpack://muze/./packages/muze-axis/src/cartesian-axis/interpolators/linear.js","webpack://muze/./packages/muze-axis/src/cartesian-axis/interpolators/log.js","webpack://muze/./packages/muze-axis/src/cartesian-axis/interpolators/pow.js","webpack://muze/./packages/muze-axis/src/cartesian-axis/continous-axis.js","webpack://muze/./packages/muze-axis/src/cartesian-axis/band-axis.js","webpack://muze/./packages/muze-axis/src/cartesian-axis/time-axis.js","webpack://muze/./packages/muze-axis/src/color-axis/color-maps.js","webpack://muze/./packages/muze-axis/src/color-axis/defaults.js","webpack://muze/./packages/muze-axis/src/color-axis/props.js","webpack://muze/./packages/muze-axis/src/helper.js","webpack://muze/./packages/muze-axis/src/color-axis/color-strategy.js","webpack://muze/./packages/muze-axis/src/color-axis/color-axis.js","webpack://muze/./packages/muze-axis/src/size-axis/defaults.js","webpack://muze/./packages/muze-axis/src/size-axis/size-strategy.js","webpack://muze/./packages/muze-axis/src/size-axis/props.js","webpack://muze/./packages/muze-axis/src/size-axis/size-axis.js","webpack://muze/./packages/muze-axis/src/shape-axis/defaults.js","webpack://muze/./packages/muze-axis/src/shape-axis/props.js","webpack://muze/./packages/muze-axis/src/shape-axis/shape-axis.js","webpack://muze/./packages/muze-axis/src/shape-axis/helper.js","webpack://muze/./packages/muze-axis/src/polar-axis/props.js","webpack://muze/./packages/muze-axis/src/polar-axis/angle-axis.js","webpack://muze/./packages/visual-group/src/enums/constants.js","webpack://muze/./packages/muze-axis/src/polar-axis/radius-axis.js","webpack://muze/./packages/muze-axis/src/data-type-scale-map.js","webpack://muze/./packages/transform/src/group-transform/index.js","webpack://muze/./packages/transform/src/identity-transform/index.js","webpack://muze/./packages/transform/src/transform-factory/index.js","webpack://muze/./packages/transform/src/enums/transform-type.js","webpack://muze/./packages/transform/src/stack-transform/index.js","webpack://muze/./packages/visual-layer/src/helpers/index.js","webpack://muze/./packages/visual-layer/src/base-layer/listener-map.js","webpack://muze/./packages/visual-layer/src/enums/props.js","webpack://muze/./packages/visual-layer/src/base-layer/default-options.js","webpack://muze/./packages/visual-layer/src/base-layer/base-layer.js","webpack://muze/./packages/visual-layer/src/layers/line/renderer.js","webpack://muze/./packages/visual-layer/src/layers/line/default-config.js","webpack://muze/./packages/visual-layer/src/layers/line/line.js","webpack://muze/./packages/visual-layer/src/layers/area/renderer.js","webpack://muze/./packages/visual-layer/src/layers/area/area.js","webpack://muze/./packages/visual-layer/src/layers/arc/default-config.js","webpack://muze/./packages/visual-layer/src/layers/arc/arc.js","webpack://muze/./packages/visual-layer/src/layers/arc/arc-helper.js","webpack://muze/./packages/visual-layer/src/layers/text/renderer.js","webpack://muze/./packages/visual-layer/src/layers/text/default-config.js","webpack://muze/./packages/visual-layer/src/layers/text/text.js","webpack://muze/./packages/visual-layer/src/layers/point/renderer.js","webpack://muze/./packages/visual-layer/src/layers/point/default-config.js","webpack://muze/./packages/visual-layer/src/layers/point/point.js","webpack://muze/./packages/visual-layer/src/layers/bar/renderer.js","webpack://muze/./packages/visual-layer/src/layers/bar/default-config.js","webpack://muze/./packages/visual-layer/src/layers/bar/bar-helper.js","webpack://muze/./packages/visual-layer/src/layers/bar/bar.js","webpack://muze/./packages/visual-layer/src/layers/tick/default-config.js","webpack://muze/./packages/visual-layer/src/layers/tick/renderer.js","webpack://muze/./packages/visual-layer/src/layers/tick/tick.js","webpack://muze/./packages/visual-layer/src/enums/layer-types.js","webpack://muze/./packages/visual-layer/src/layer-factory/layer-factory.js","webpack://muze/./packages/visual-layer/src/layer-factory/index.js","webpack://muze/./packages/visual-layer/src/defaults.js","webpack://muze/./packages/visual-group/src/visual-group/local-options.js","webpack://muze/./packages/visual-group/src/simple-group/simple-group.js","webpack://muze/./packages/visual-group/src/variable/variable.js","webpack://muze/./packages/visual-group/src/variable/composed-vars.js","webpack://muze/./packages/visual-group/src/variable/simple-var.js","webpack://muze/./packages/visual-group/src/encoder/field-sanitizer.js","webpack://muze/./packages/visual-group/src/encoder/visual-encoder.js","webpack://muze/./packages/visual-group/src/enums/scale-maps.js","webpack://muze/./packages/visual-group/src/data-type-scale-map.js","webpack://muze/./packages/visual-group/src/encoder/encoder-helper.js","webpack://muze/./packages/visual-group/src/encoder/cartesian-encoder.js","webpack://muze/./packages/visual-group/src/encoder/polar-encoder.js","webpack://muze/./packages/visual-group/src/encoder/retinal-encoder.js","webpack://muze/./packages/visual-group/src/group-helper/group-utils.js","webpack://muze/./packages/visual-unit/src/firebolt/action-behaviour-map.js","webpack://muze/./packages/visual-unit/src/helper/index.js","webpack://muze/./packages/visual-unit/src/enums/constants.js","webpack://muze/./packages/visual-unit/src/helper/grid-lines.js","webpack://muze/./packages/visual-unit/src/default-config.js","webpack://muze/./packages/visual-unit/src/local-options.js","webpack://muze/./packages/visual-unit/src/enums/reactive-props.js","webpack://muze/./packages/visual-unit/src/listener-map.js","webpack://muze/./packages/visual-unit/src/props.js","webpack://muze/./packages/visual-unit/src/firebolt/helper.js","webpack://muze/./packages/visual-unit/src/firebolt/payload-generator.js","webpack://muze/./packages/visual-unit/src/firebolt/data-propagator.js","webpack://muze/./packages/visual-unit/src/firebolt/index.js","webpack://muze/./packages/visual-unit/src/visual-unit.js","webpack://muze/./packages/visual-group/src/group-helper/matrix-model.js","webpack://muze/./packages/visual-group/src/group-helper/cell-creator.js","webpack://muze/./packages/visual-group/src/group-helper/resolver-props.js","webpack://muze/./packages/visual-group/src/group-helper/matrix-resolver.js","webpack://muze/./packages/visual-group/src/visual-group/value-matrix.js","webpack://muze/./packages/visual-group/src/visual-group/helper.js","webpack://muze/./packages/visual-group/src/visual-group/change-listener.js","webpack://muze/./packages/visual-group/src/visual-group/props.js","webpack://muze/./packages/visual-group/src/visual-group/visual-group.js","webpack://muze/./packages/muze-legend/src/firebolt/behavioural/select.js","webpack://muze/./packages/muze-legend/src/firebolt/action-behaviour-map.js","webpack://muze/./packages/muze-legend/src/firebolt/behaviour-effect-map.js","webpack://muze/./packages/muze-legend/src/enums/behaviours.js","webpack://muze/./packages/muze-legend/src/enums/side-effects.js","webpack://muze/./packages/muze-legend/src/enums/constants.js","webpack://muze/./packages/muze-legend/src/firebolt/helper.js","webpack://muze/./packages/muze-legend/src/firebolt/legend-firebolt.js","webpack://muze/./packages/muze-legend/src/firebolt/physical/drag.js","webpack://muze/./packages/muze-legend/src/firebolt/physical/hover.js","webpack://muze/./packages/muze-legend/src/firebolt/physical/click.js","webpack://muze/./packages/muze-legend/src/firebolt/physical/index.js","webpack://muze/./packages/muze-legend/src/enums/actions.js","webpack://muze/./packages/muze-legend/src/firebolt/physical/selection-box-drag.js","webpack://muze/./packages/muze-legend/src/firebolt/side-effects/selection-box/index.js","webpack://muze/./packages/muze-legend/src/firebolt/side-effects/legend-highlighter/strategies.js","webpack://muze/./packages/muze-legend/src/firebolt/side-effects/legend-highlighter/index.js","webpack://muze/./packages/muze-legend/src/legend/props.js","webpack://muze/./packages/muze-legend/src/legend/defaults.js","webpack://muze/./packages/muze-legend/src/legend/legend-helper.js","webpack://muze/./packages/muze-legend/src/legend/simple-legend.js","webpack://muze/./packages/muze-legend/src/legend/position-config.js","webpack://muze/./packages/muze-legend/src/legend/renderer.js","webpack://muze/./packages/muze-legend/src/legend/discrete-legend.js","webpack://muze/./packages/muze-legend/src/legend/gradient-helper.js","webpack://muze/./packages/muze-legend/src/legend/gradient-legend.js","webpack://muze/./packages/muze-legend/src/legend/step-legend.js","webpack://muze/./packages/muze/src/constants.js","webpack://muze/./packages/muze/src/operators.js","webpack://muze/./packages/muze/src/action-model.js","webpack://muze/./packages/muze/src/canvas/defaults.js","webpack://muze/./packages/muze/src/canvas/local-options.js","webpack://muze/./packages/layout/src/tree-layout/layout-component/layoutComponent.js","webpack://muze/./packages/layout/src/tree-layout/layout-component/dummy-component.js","webpack://muze/./packages/muze/src/defaults.js","webpack://muze/./packages/layout/src/tree-layout/constants/defaults.js","webpack://muze/./packages/layout/src/tree-layout/layout-definition/definition-manager/definitionModel.js","webpack://muze/./packages/layout/src/tree-layout/layout-definition/helper/index.js","webpack://muze/./packages/layout/src/tree-layout/layout-definition/tree/index.js","webpack://muze/./packages/layout/src/tree-layout/layout-definition/layout-model/index.js","webpack://muze/./packages/layout/src/tree-layout/utils/index.js","webpack://muze/./packages/layout/src/tree-layout/data-adapters/data-point.js","webpack://muze/./packages/layout/src/tree-layout/data-adapters/data-parser.js","webpack://muze/./packages/layout/src/tree-layout/data-adapters/helper.js","webpack://muze/./packages/layout/src/tree-layout/data-adapters/html-data.js","webpack://muze/./packages/layout/src/tree-layout/renderers/renderer.js","webpack://muze/./packages/layout/src/tree-layout/renderers/html-renderer.js","webpack://muze/./packages/layout/src/tree-layout/drawing-manager/helper.js","webpack://muze/./packages/layout/src/tree-layout/drawing-manager/index.js","webpack://muze/./packages/layout/src/tree-layout/layout-definition/definition-manager/index.js","webpack://muze/./packages/layout/src/tree-layout/layout-manager/layout-def.js","webpack://muze/./packages/layout/src/tree-layout/layout-manager/helper.js","webpack://muze/./packages/layout/src/tree-layout/layout-manager/index.js","webpack://muze/./packages/muze/src/canvas/helper.js","webpack://muze/./packages/muze/src/options.js","webpack://muze/./packages/layout/src/enums/constants.js","webpack://muze/./packages/layout/src/generic-layout/index.js","webpack://muze/./packages/layout/src/grid-layout/defaults.js","webpack://muze/./packages/layout/src/utils/index.js","webpack://muze/./packages/layout/src/visual-matrix/props.js","webpack://muze/./packages/layout/src/visual-matrix/default-config.js","webpack://muze/./packages/layout/src/visual-matrix/visual-matrix.js","webpack://muze/./packages/layout/src/visual-matrix/row-matrix.js","webpack://muze/./packages/layout/src/visual-matrix/column-matrix.js","webpack://muze/./packages/layout/src/grid-layout/computations.js","webpack://muze/./packages/layout/src/grid-layout/view-info-getter.js","webpack://muze/./packages/layout/src/grid-layout/layout.js","webpack://muze/./packages/layout/src/grid-layout/layout-helper.js","webpack://muze/./packages/layout/src/grid-layout/border-helper.js","webpack://muze/./packages/layout/src/grid-layout/span-maker.js","webpack://muze/./packages/muze/src/transaction-support.js","webpack://muze/./packages/muze/src/canvas/component-resolver.js","webpack://muze/./packages/visual-cell/src/enums/constants.js","webpack://muze/./packages/visual-cell/src/enums/cell-type.js","webpack://muze/./packages/visual-cell/src/simple-cell.js","webpack://muze/./packages/visual-cell/src/enums/defaults.js","webpack://muze/./packages/visual-cell/src/props.js","webpack://muze/./packages/visual-cell/src/axis-cell.js","webpack://muze/./packages/visual-cell/src/blank-cell.js","webpack://muze/./packages/visual-cell/src/text-cell.js","webpack://muze/./packages/visual-cell/src/geom-cell.js","webpack://muze/./packages/visual-cell/src/defaults.js","webpack://muze/./packages/visual-cell/src/constants.js","webpack://muze/./packages/visual-cell/src/cell-registry.js","webpack://muze/./packages/muze/src/canvas/title-maker.js","webpack://muze/./packages/muze/src/canvas/legend-maker.js","webpack://muze/./packages/muze/src/canvas/components/muze-chart-component.js","webpack://muze/./packages/muze/src/canvas/components/headerComponent.js","webpack://muze/./packages/muze/src/canvas/components/legendComponent.js","webpack://muze/./packages/muze/src/canvas/components/scroll-bar-maker/helper.js","webpack://muze/./packages/muze/src/canvas/components/scroll-bar-maker/props.js","webpack://muze/./packages/muze/src/canvas/components/scroll-bar-maker/scroll-maker.js","webpack://muze/./packages/muze/src/canvas/components/scroll-component.js","webpack://muze/./packages/muze/src/canvas/components/scroll-bar-maker/horizontal-scroll-maker.js","webpack://muze/./packages/muze/src/canvas/components/scroll-bar-maker/vertical-scroll-maker.js","webpack://muze/./packages/muze/src/canvas/components/matrix-component.js","webpack://muze/./packages/muze/src/canvas/components/grid-component.js","webpack://muze/./packages/muze/src/enums/constants.js","webpack://muze/./packages/muze/src/canvas/component-wrapper-maker.js","webpack://muze/./packages/muze/src/canvas/scroll-manager.js","webpack://muze/./packages/muze/src/canvas/layout-maker.js","webpack://muze/./packages/muze/src/canvas/firebolt/group-firebolt.js","webpack://muze/./packages/muze/src/canvas/firebolt/index.js","webpack://muze/./packages/muze/src/canvas/app-state.js","webpack://muze/./packages/muze/src/canvas/canvas.js","webpack://muze/./packages/muze/src/default-registry.js","webpack://muze/./packages/visual-layer/src/layer-registry.js","webpack://muze/./packages/muze/src/muze.js"],"names":["webpackUniversalModuleDefinition","root","factory","exports","module","define","amd","window","installedModules","__webpack_require__","moduleId","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","getDefault","getModuleExports","object","property","prototype","hasOwnProperty","p","s","e","_typeof","a","default","description","homepage","version","license","main","author","keywords","repository","type","url","contributors","email","dependencies","d3-dsv","devDependencies","babel-cli","babel-core","babel-eslint","babel-loader","babel-plugin-transform-runtime","babel-preset-env","babel-preset-es2015","babel-preset-flow","chai","cross-env","eslint","eslint-config-airbnb","eslint-plugin-import","eslint-plugin-jsx-a11y","eslint-plugin-react","istanbul-instrumenter-loader","jsdoc","json2yaml","karma","karma-chai","karma-chrome-launcher","karma-coverage-istanbul-reporter","karma-mocha","karma-spec-reporter","karma-webpack","marked","mocha","mocha-webpack","transform-runtime","webpack","webpack-cli","webpack-dev-server","scripts","test","ut","utd","build","start","lint","lint-errors","docs","DataModel","data_format","FLAT_JSON","DSV_STR","DSV_ARR","AUTO","dimension_subtype","CATEGORICAL","TEMPORAL","GEO","BINNED","measure_subtype","CONTINUOUS","field_type","MEASURE","DIMENSION","filtering_mode","NORMAL","INVERSE","ALL","group_by_functions","SUM","AVG","MIN","MAX","FIRST","LAST","COUNT","STD","convertToNativeDate","date","Date","pad","DateTimeFormatter","format","this","dtParams","nativeDate","RegExp","escape","text","replace","TOKEN_PREFIX","DATETIME_PARAM_SEQUENCE","YEAR","MONTH","DAY","HOUR","MINUTE","SECOND","MILLISECOND","defaultNumberParser","defVal","val","parsedVal","isFinite","parseInt","defaultRangeParser","range","nVal","toLowerCase","length","getTokenDefinitions","daysDef","short","long","monthsDef","H","index","extract","parser","formatter","getHours","toString","hours","P","M","getMinutes","S","getSeconds","K","getMilliseconds","join","day","getDay","A","getDate","b","month","getMonth","B","y","result","substring","presentDate","presentYear","Math","trunc","getFullYear","year","Y","getTokenFormalNames","definitions","HOUR_12","AMPM_UPPERCASE","AMPM_LOWERCASE","SHORT_DAY","LONG_DAY","DAY_OF_MONTH","DAY_OF_MONTH_CONSTANT_WIDTH","SHORT_MONTH","LONG_MONTH","MONTH_OF_YEAR","SHORT_YEAR","LONG_YEAR","tokenResolver","defaultResolver","arg","targetParam","arguments","hourFormat24","hourFormat12","ampmLower","ampmUpper","amOrpm","isPM","findTokens","tokenPrefix","tokenLiterals","keys","occurrence","forwardChar","indexOf","push","token","formatAs","nDate","formattedStr","String","formattedVal","parse","dateTimeStamp","options","extractTokenValue","dtParamSeq","noBreak","dtParamArr","args","resolverKey","resolverParams","resolverFn","param","resolvedVal","splice","apply","checkIfOnlyYear","unshift","tokenObj","lastOccurrenceIndex","occObj","occIndex","targetText","regexFormat","tokenArr","map","obj","occurrenceLength","extractValues","match","shift","getNativeDate","Number","len","v","store","fields","Array","forEach","fieldIndex","from","OBJECTSTRING","objectToStrFn","objectToStr","arrayToStr","checkCyclicRef","parentArr","bIndex","extend2","obj1","obj2","skipUndef","merge","tgtArr","srcArr","item","srcVal","tgtVal","str","cRef","isArray","isCallable","getUniqueId","getTime","round","random","isArrEqual","arr1","arr2","formatNumber","helper_detectDataFormat","data","field_store","createNamespace","fieldArr","dataId","fieldsObj","_cachedFieldsObj","field","getMeasure","measureFields","_cachedMeasure","schema","getDimension","dimensionFields","_cachedDimension","src_value","_classCallCheck","configurable","writable","_value","rowDiffsetIterator","rowDiffset","callback","split","diffStr","diffStsArr","end","InvalidAwareTypes","invalid_aware_types_classCallCheck","config","assign","_invalidAwareValsMap","invalidAwareVals","NULL","NA","NIL","invalid","nil","null","undefined","I","C","iterator","u","next","done","return","TypeError","DM_DERIVATIVES","SELECT","PROJECT","GROUPBY","COMPOSE","CAL_VAR","BIN","SORT","JOINS","CROSS","LEFTOUTER","RIGHTOUTER","NATURAL","FULLOUTER","getCommonSchema","fs1","fs2","retArr","fs1Arr","defaultFilterFn","crossProduct","dm1","dm2","filterFn","replaceCommonSchema","jointype","applicableFilterFn","dm1FieldStore","getFieldspace","dm2FieldStore","dm1FieldStoreName","dm2FieldStoreName","commonSchemaList","Error","tmpSchema","_rowDiffset","rowAdded","rowPosition","ii","tuple","userArg","partialField","dm1Fields","prepareJoinData","dm2Fields","detachedRoot","tupleObj","cellVal","iii","datamodel","defSortFn","a1","b1","mergeSort","arr","sortFn","merge_sort_sort","lo","hi","mid","floor","mainArr","auxArr","getSortFn","dataType","sortType","retFunc","groupData","hashMap","Map","groupedData","datum","fieldVal","has","set","createSortingFnArg","groupedDatum","targetFields","targetFieldDetails","label","reduce","acc","idx","difference_difference","hashTable","schemaNameArr","dm1FieldStoreFieldObj","dm2FieldStoreFieldObj","_colIdentifier","sort","prepareDataHelper","dm","addData","hashData","schemaName","fieldName","getFilteredValues","filter","invalid_aware_types","sum","filteredNumber","curr","avg","totalSum","isNaN","fnList","filteredValues","min","max","sqrt","mean","pow","num","defaultReducerName","reducer_store_ReducerStore","entries","_this","ve","reducer","_this2","__unregister","delete","Function","reducer_store","ge","naturalJoinFilter","commonSchemaArr","retainTuple","union_union","src_export","leftOuterJoin","dataModel1","dataModel2","rightOuterJoin","fields_field","field_classCallCheck","subtype","displayName","je","dimension","_cachedDomain","calculateDataDomain","categorical","hash","Set","domain","add","temporal","temporal_classCallCheck","_cachedMinDiff","sortedData","arrLn","minDiff","POSITIVE_INFINITY","prevDatum","nextDatum","processedCount","_this3","binned","binsArr","bins","measure","unit","defAggFn","numberFormat","continuous","NEGATIVE_INFINITY","field_parser","Ve","categorical_parser","isInvalid","getInvalidType","trim","temporal_parser","temporal_parser_classCallCheck","_dtf","binned_parser","matched","parseFloat","continuous_parser","partial_field","partial_field_classCallCheck","_sanitize","createFields","dataColumn","headers","headersObj","header","$e","dataFormat","Qe","firstRowHeader","columns","column_major","EOL","EOF","QUOTE","NEWLINE","RETURN","objectConverter","JSON","stringify","it","delimiter","reFormat","DELIMITER","charCodeAt","parseRows","f","rows","N","eof","eol","j","slice","row","formatRow","formatValue","convert","columnSet","column","concat","formatRows","csv","src_dsv","tsv","ct","fieldSeparator","dsv","dsv_arr","ft","insertionIndex","lt","converters","FlatJSON","DSVStr","DSVArr","resp","persistDerivations","sourceDm","model","operation","_model$_derivation","criteriaFn","_derivation","op","meta","criteria","newDm","_newDm$_ancestorDeriv","_ancestorDerivation","cloneWithAllFields","clonedDm","clone","partialFieldspace","getPartialFieldspace","__calculateFieldspace","calculateFieldsConfig","helper_filterPropagationModel","propModels","filterByMeasure","fns","dataModel","dataObj","getData","fieldsConfig","getFieldsConfig","fieldsSpace","values","def","some","every","propField","valueOf","propModel","select","fn","saveChild","helper_cloneWithSelect","selectFn","selectConfig","cloneConfig","cloned","helper_selectHelper","newRowDiffSet","lastInsertedValue","li","cachedStore","cloneProvider","selectorHelperFn","_iteratorNormalCompletion","checker","helper_cloneWithProject","projField","allFields","projectionSet","actualProjField","helper_sanitizeUnitSchema","unitSchema","sanitizeAndValidateSchema","supportedMeasureSubTypes","supportedDimSubTypes","helper_updateData","relation","default_config","converterFn","converter_namespaceObject","st","formattedData","dataHeader","fieldNameAs","as","nameSpace","_partialFieldspace","_","_dataFormat","fieldInSchema","applyExistingOperationOnModel","derivations","getDerivations","selectionModel","rejectionModel","derivation","_selectionModel","params","groupByString","_rejectionModel","propagateIdentifiers","propModelInf","nonTraversingModel","excludeModels","handlePropagation","_children","child","propagateToAllDataModels","identifiers","rootModels","propagationInf","propagationNameSpace","propagateToSource","propagationSourceId","sourceId","propagateInterpolatedValues","criterias","persistent","actionCriterias","mutableActions","filteredCriteria","entry","action","sourceActionCriterias","actionInf","actionConf","applyOnSource","models","path","_parent","_ref3","rootModel","propConfig","sourceIdentifiers","rootGroupByModel","groupByModel","inf","propagationModel","filteredModel","reverse","src_relation","relation_classCallCheck","source","Relation","_fieldStoreName","updateData","_propagationNameSpace","immutableActions","_fieldspace","helper_updateFields","fieldStoreName","colIdentifier","collID","partialFieldMap","newFields","coll","joinWith","unionWith","differenceWith","defConfig","oDm","constructor","setParent","fieldConfig","normalizedProjField","search","_fieldConfig","fieldObj","removeChild","findIndex","sibling","parent","ReferenceError","__proto__","getPrototypeOf","_onPropagation","setPrototypeOf","order","withUid","getAllFields","dataGenerated","dataBuilder","fieldStore","sortingDetails","retObj","uids","addUid","columnWise","reqSorting","tmpDataArr","colName","insertInd","sortMeta","fDetails","sortingFn","pop","tmpData","fieldNames","fmtFieldIdx","elem","fIdx","fmtFn","datumIdx","fieldsArr","reducers","newDataModel","group_by_groupBy","existingDataModel","sFieldArr","dimensions","reducerObj","measures","defReducer","defaultReducer","measureName","reducerFn","resolve","fieldStoreObj","dbName","dimensionArr","measureArr","rowCount","rawData","dataInCSVArr","sortedDm","colData","rowsCount","serializedData","rowIdx","colIdx","fieldinst","dependency","replaceVar","depVars","retrieveFn","depFieldIndices","fieldSpec","fs","suppliedFields","computedValues","fieldsData","h","Dt","addField","addToNameSpace","isMutableAction","payload","find","sourceNamespace","filterImmutableAction","criteriaModel","eventName","measureFieldName","binFieldName","_createBinnedFieldDat","measureField","buckets","binsCount","binSize","dMin","dMax","ceil","abs","generateBuckets","bucketRanges","binnedData","findBucketRange","leftIdx","rightIdx","midIdx","binField","serialize","getSchema","stats_sum","stats_avg","stats_min","stats_max","stats_first","stats_last","stats_count","sd","std","Operators","compose","operations","currentDM","firstChild","dispose","bin","project","groupBy","calculateVariable","difference","naturalJoin","fullOuterJoin","union","Stats","DataFormat","FilteringMode","enums_namespaceObject","Bt","Rt","makeEntry","sCon","_set","set1","set2","filteredKeys","s1","s2","ForeignSet","isSimpleObject","win","reqAnimFrame","requestAnimationFrame","webkitRequestAnimationFrame","mozRequestAnimationFrame","oRequestAnimationFrame","msRequestAnimationFrame","setTimeout","getTimeBasedId","__lastTime","__id","flat","res","scheduler","onFinishCallback","queue","animationFrame","listeners","tempQ","unique","fetch","node","namedNode","qualifiedName","seed","fetchAggregator","getUpstreamNodes","list","rec","qname","placedIndex","preArr","postArr","outgoingEdges","resolver","accumulate","nodeDetails","identity","CustomResolver","utils_classCallCheck","dep","_dep","graph_node_classCallCheck","edges","_seed","requireResolve","retriever","history","electricEdges","_edges","retrieveDetails","edge","head","hist","electric_node_classCallCheck","nextFrame","currentFrame","lstnrs","nodes","nFn","qualifiedNodeMap","graph_node","_wholeSet","_propagate","propagationOverride","currentFrameListeners","nextFrameListeners","_schedule","flushTarget","flush","mount","resolveReqList","objn","perv","addDependencies","_node","getDependencies","getResolvedList","prop","props","fnSpec","eNode","_ref","electric_node","addEdges","addElectricNode","changedSet","upstreamNodes","upstreamNode","append","__execUniqueElectricEdges","cfLstnrs","nfLstnrs","toArray","repeatHead","resetPropagationOverride","qnames","_this4","update","resolved","resolveDependencyOrder","resolveMap","neighbour","isRoot","model_classCallCheck","_graph","graph","_lockFlag","_reqQ","mountPoint","_addPropInModel","calculationConfig","customResolver","varName","fetchFn","_customResolver","createNodesFrom","instantCall","_graph$stopPropagatio","propsArr","unsub","createElectricNodeOf","stopPropagation","setPropagationOverride","resetNodeValue","_graph$stopPropagatio2","setProp","getNodeValue","getNodeFromQualifiedName","Model","__webpack_exports__","webpackPolyfill","deprecate","paths","children","_interopRequireDefault","_lib2","require","_containerManager2","slLib","init","doc","document","htmlSplCharSpace"," ","documentSupport","getDocumentSupport","SVG_BBOX_CORRECTION","isWebKit","SmartLabelManager","id","container","useEllipses","wrapper","prevInstance","isBrowserLess","maxCacheLimit","maxDefaultCacheLimit","getElementById","createContainer","innerHTML","testStrAvg","isHeadLess","isIE","offsetHeight","offsetWidth","parentContainerStyle","style","parentContainer","_containerManager","_showNoEllipses","_init","setStyle","textToLines","smartlabel","lines","_calCharDimWithCache","calculateDifference","size","csArr","tw","twi","cachedStyle","asymmetricDifference","maxAdvancedCacheLimit","_container","cache","_advancedCache","advancedCacheKey","_advancedCacheKey","cacheName","fontSize","fontFamily","fontWeight","fontStyle","cacheInitName","repeat","width","height","_getWidthFn","contObj","_containerObj","svgText","bbox","textContent","getBBox","_styleNotSet","setLineHeight","sCont","_context","context","_cache","charCache","_lineHeight","lineHeight","useEllipsesOnOverflow","getSmartText","maxWidth","maxHeight","noWrap","trimStr","tempArr","tmpText","maxWidthWithEll","toolText","oriWidth","oriHeight","newCharIndex","nearestChar","tempChar","getWidth","initialLeft","initialTop","getOriSizeImproveObj","spanArr","x","minWidth","chr","elemRightMostPoint","elemLowestPoint","lastBR","removeFromIndex","removeFromIndexForEllipses","hasHTMLTag","maxStrWidth","lastDash","lastSpace","lastIndexBroken","strWidth","strHeight","oriTextArr","ellipsesStr","ellipsesWidth","dotWidth","characterArr","dashIndex","spaceIndex","lastLineBreak","fastTrim","ws","charAt","smartLabel","oriTextWidth","oriTextHeight","oriText","isTruncated","xmlTagRegEx","ltgtRegex","getOriSize","substr","getNearestBreakIndex","detailObj","tooltext","lastIndexOf","spanAdditionRegx","spanAdditionReplacer","classNameWithTag","classNameWithTagBR","childRetriverFn","childRetriverString","noClassTesting","classNameReg","className","spaceIdx","dashIdx","offsetLeft","offsetTop","parentNode","insertBefore","createElement","classNameBrReg","spanRemovalRegx","error","detailedCalculationFlag","textArr","letter","lSize","cumulativeSize","indiSizeStore","lib","userAgent","navigator","clsNameSpace","containerClass","brReplaceRegex","position","top","whiteSpace","padding","overflow","supportedStyle","font","font-family","font-weight","font-size","line-height","font-style","getElementsByClassName","opera","hasSVG","Boolean","SVGAngle","implementation","hasFeature","containerParent","body","appendChild","setAttribute","getElementsByTagName","sl","charLen","increment","avgWidth","styleObj","fSize","Muze","ContainerManager","maxContainers","svg","first","last","containers","rootNode","createElementNS","setAttributeNS","svgRoot","diff","containerObj","keyStr","prev","removeContainer","addContainer","avgCharWidth","display","cObj","ascending","NaN","bisector","compare","ascendingComparator","left","right","ascendingBisect","bisectRight","number","array","src_range","stop","step","e10","e5","e2","src_ticks","count","ticks","tickIncrement","power","log","LN10","tickStep","step0","step1","quantile","valueof","i0","value0","each","remove","clear","empty","src_nest","sortValues","rollup","nest","sortKeys","depth","createResult","setResult","keyValue","valuesByKey","createObject","setObject","createMap","setMap","sortKey","k","proto","implicit","ordinal","unknown","scale","copy","band","bandwidth","ordinalRange","paddingInner","paddingOuter","align","rescale","sequence","rangeRound","invertExtent","r0","r1","hiIndex","getClosestIndexOf","invert","side","highVal","d1","low","high","extend","definition","Color","reI","reN","reP","reHex3","reHex6","reRgbInteger","reRgbPercent","reRgbaInteger","reRgbaPercent","reHslPercent","reHslaPercent","named","aliceblue","antiquewhite","aqua","aquamarine","azure","beige","bisque","black","blanchedalmond","blue","blueviolet","brown","burlywood","cadetblue","chartreuse","chocolate","coral","cornflowerblue","cornsilk","crimson","cyan","darkblue","darkcyan","darkgoldenrod","darkgray","darkgreen","darkgrey","darkkhaki","darkmagenta","darkolivegreen","darkorange","darkorchid","darkred","darksalmon","darkseagreen","darkslateblue","darkslategray","darkslategrey","darkturquoise","darkviolet","deeppink","deepskyblue","dimgray","dimgrey","dodgerblue","firebrick","floralwhite","forestgreen","fuchsia","gainsboro","ghostwhite","gold","goldenrod","gray","green","greenyellow","grey","honeydew","hotpink","indianred","indigo","ivory","khaki","lavender","lavenderblush","lawngreen","lemonchiffon","lightblue","lightcoral","lightcyan","lightgoldenrodyellow","lightgray","lightgreen","lightgrey","lightpink","lightsalmon","lightseagreen","lightskyblue","lightslategray","lightslategrey","lightsteelblue","lightyellow","lime","limegreen","linen","magenta","maroon","mediumaquamarine","mediumblue","mediumorchid","mediumpurple","mediumseagreen","mediumslateblue","mediumspringgreen","mediumturquoise","mediumvioletred","midnightblue","mintcream","mistyrose","moccasin","navajowhite","navy","oldlace","olive","olivedrab","orange","orangered","orchid","palegoldenrod","palegreen","paleturquoise","palevioletred","papayawhip","peachpuff","peru","pink","plum","powderblue","purple","rebeccapurple","red","rosybrown","royalblue","saddlebrown","salmon","sandybrown","seagreen","seashell","sienna","silver","skyblue","slateblue","slategray","slategrey","snow","springgreen","steelblue","tan","teal","thistle","tomato","turquoise","violet","wheat","white","whitesmoke","yellow","yellowgreen","color","exec","Rgb","rgbn","rgba","hsla","g","rgbConvert","rgb","opacity","hex","Hsl","hsl","hslConvert","hsl2rgb","m1","m2","displayable","brighter","darker","deg2rad","PI","rad2deg","Xn","Yn","Zn","t0","t1","t2","t3","labConvert","Lab","Hcl","cos","sin","z","rgb2lrgb","xyz2lab","lab","lab2xyz","lrgb2rgb","hclConvert","atan2","hcl","D","E","ED","EB","BC_DA","cubehelix","cubehelixConvert","Cubehelix","bl","basis","v0","v1","v2","v3","cosh","sinh","src_constant","linear","hue","constant","gamma","nogamma","exponential","src_rgb","rgbGamma","colorRgb","rgbSpline","spline","colors","rgbBasis","src_number","reA","reB","src_string","am","bm","bs","bi","lastIndex","q","one","zero","cssNode","cssRoot","cssView","svgNode","value_typeof","string","setTime","nb","na","src_round","degrees","translateX","translateY","rotate","skewX","scaleX","scaleY","decompose","atan","interpolateTransform","pxComma","pxParen","degParen","translate","xa","ya","xb","yb","interpolateTransformCss","parseCss","documentElement","defaultView","transform","getComputedStyle","getPropertyValue","interpolateTransformSvg","parseSvg","baseVal","consolidate","matrix","SQRT2","colorHsl","hslLong","colorHcl","cubehelixGamma","colorCubehelix","cubehelixLong","piecewise","interpolate","d3_scale_src_constant","d3_scale_src_number","deinterpolateLinear","bimap","deinterpolate","reinterpolate","d0","polymap","bisect","target","clamp","output","input","interpolateValue","deinterpolateClamp","reinterpolateClamp","interpolateRound","formatDecimal","toExponential","coefficient","src_exponent","re","formatSpecifier","specifier","FormatSpecifier","fill","sign","symbol","comma","precision","prefixExponent","locale","formatPrefix","formatTrim","out","i1","formatRounded","exponent","formatTypes","%","toFixed","toPrecision","X","toUpperCase","src_identity","prefixes","src_locale","group","grouping","thousands","formatGroup","currency","decimal","numerals","formatNumerals","percent","newFormat","prefix","suffix","formatType","maybeSuffix","valuePrefix","valueSuffix","valueNegative","Infinity","defaultLocale","formatLocale","src_tickFormat","precisionPrefix","precisionRound","precisionFixed","linearish","tickFormat","nice","interval","x0","x1","pow10","powp","base","exp","logp","log10","log2","reflect","logs","pows","raise","thresholds","threshold","quantiles","quantize","newInterval","floori","offseti","offset","previous","millisecond","durationMinute","durationWeek","second","getUTCSeconds","minute","hour","getTimezoneOffset","setHours","setDate","weekday","sunday","monday","tuesday","wednesday","thursday","friday","saturday","setMonth","setFullYear","utcMinute","setUTCSeconds","getUTCMinutes","utcHour","setUTCMinutes","getUTCHours","utcDay","setUTCHours","setUTCDate","getUTCDate","utcWeekday","getUTCDay","utcSunday","utcMonday","utcTuesday","utcWednesday","utcThursday","utcFriday","utcSaturday","utcMonth","setUTCMonth","getUTCMonth","getUTCFullYear","utcYear","setUTCFullYear","localDate","L","utcDate","UTC","newYear","timeFormat","utcFormat","utcParse","pads","-","0","numberRe","percentRe","requoteRe","requote","formatRe","names","formatLookup","parseWeekdayNumberSunday","w","parseWeekdayNumberMonday","parseWeekNumberSunday","U","parseWeekNumberISO","V","parseWeekNumberMonday","W","parseFullYear","parseYear","parseZone","Z","parseMonthNumber","parseDayOfMonth","parseDayOfYear","parseHour24","parseMinutes","parseSeconds","parseMilliseconds","parseMicroseconds","parseLiteralPercent","parseUnixTimestamp","Q","parseUnixTimestampSeconds","formatDayOfMonth","formatHour24","formatHour12","formatDayOfYear","timeDay","timeYear","formatMilliseconds","formatMicroseconds","formatMonthNumber","formatMinutes","formatSeconds","formatWeekdayNumberMonday","formatWeekNumberSunday","timeSunday","formatWeekNumberISO","timeThursday","formatWeekdayNumberSunday","formatWeekNumberMonday","timeMonday","formatYear","formatFullYear","formatZone","formatUTCDayOfMonth","formatUTCHour24","formatUTCHour12","formatUTCDayOfYear","formatUTCMilliseconds","getUTCMilliseconds","formatUTCMicroseconds","formatUTCMonthNumber","formatUTCMinutes","formatUTCSeconds","formatUTCWeekdayNumberMonday","dow","formatUTCWeekNumberSunday","formatUTCWeekNumberISO","formatUTCWeekdayNumberSunday","formatUTCWeekNumberMonday","formatUTCYear","formatUTCFullYear","formatUTCZone","formatLiteralPercent","formatUnixTimestamp","formatUnixTimestampSeconds","locale_dateTime","dateTime","locale_date","locale_time","time","locale_periods","periods","locale_weekdays","days","locale_shortWeekdays","shortDays","locale_months","months","locale_shortMonths","shortMonths","periodRe","periodLookup","weekdayRe","weekdayLookup","shortWeekdayRe","shortWeekdayLookup","monthRe","monthLookup","shortMonthRe","shortMonthLookup","formats","formatShortWeekday","formatWeekday","formatShortMonth","formatMonth","formatPeriod","utcFormats","formatUTCShortWeekday","formatUTCWeekday","formatUTCShortMonth","formatUTCMonth","formatUTCPeriod","parses","parseShortWeekday","parseWeekday","parseShortMonth","parseMonth","parseLocaleDateTime","parseSpecifier","parsePeriod","parseLocaleDate","parseLocaleTime","newParse","newDate","week","toISOString","durationSecond","durationHour","durationDay","durationMonth","durationYear","calendar","formatMillisecond","formatSecond","formatMinute","formatHour","formatDay","formatWeek","tickIntervals","tickInterval","src_time","timeMonth","timeWeek","timeHour","timeMinute","timeSecond","timeMillisecond","src_colors","interpolateCubehelixLong","ramp","sequential","interpolator","d3_scale_chromatic_src_colors","src_ramp","scheme","interpolateRgbBasis","warm","cool","sequential_multi_rainbow","ts","magma","inferno","plasma","UNIT_GLOBAL_NAMESPACE","UNIT_LOCAL_NAMESPACE","LAYER_LOCAL_NAMESPACE","LAYER_GLOBAL_NAMESPACE","GROUP_GLOBAL_NAMESPACE","GROUP_LOCAL_NAMESPACE","CANVAS_LOCAL_NAMESPACE","CANVAS_GLOBAL_NAMESPACE","ReservedFields","ROW_ID","CommonProps","ACTION_INF","ON_LAYER_DRAW","MATRIX_CREATED","COORD_TYPES","d3_axis_src_identity","bottom","epsilon","entering","__axis","axis","orient","tickArguments","tickValues","tickTransform","tickSizeInner","tickSizeOuter","tickPadding","spacing","range0","range1","center","selection","selectAll","tick","tickExit","exit","tickEnter","enter","attr","line","insert","transition","getAttribute","tickSize","pi","tau","tauEpsilon","Path","_x0","_y0","_x1","_y1","moveTo","closePath","lineTo","quadraticCurveTo","y1","bezierCurveTo","x2","y2","arcTo","y0","x21","y21","x01","y01","l01_2","x20","y20","l21_2","l20_2","l21","l01","acos","t01","t21","arc","a0","ccw","dx","dy","cw","da","rect","d3_shape_src_constant","halfPi","asin","arcInnerRadius","innerRadius","arcOuterRadius","outerRadius","arcStartAngle","startAngle","arcEndAngle","endAngle","arcPadAngle","padAngle","cornerTangents","rc","ox","oy","x11","y11","x10","y10","x00","y00","d2","cx0","cy0","cx1","cy1","dx0","dy0","dx1","dy1","cx","cy","Linear","areaStart","_line","areaEnd","lineStart","_point","lineEnd","point","curve_linear","src_line","pointX","pointY","defined","curve","curveLinear","buffer","defined0","src_area","area","x0z","y0z","arealine","lineX0","lineY0","lineY1","lineX1","src_descending","d3_shape_src_identity","curveRadial","Radial","_curve","radial","symbol_circle","draw","symbol_cross","tan30","tan30_2","diamond","kr","kx","ky","star","square","sqrt3","triangle","wye","noop","that","Basis","BasisClosed","_x2","_x3","_x4","_y2","_y3","_y4","BasisOpen","Bundle","beta","_basis","_beta","_x","_y","custom","bundle","_k","Cardinal","tension","cardinal","CardinalClosed","_x5","_y5","CardinalOpen","_l01_a","_l01_2a","_l12_a","_l12_2a","_l23_a","_l23_2a","CatmullRom","alpha","_alpha","x23","y23","curve_catmullRom","catmullRom","CatmullRomClosed","CatmullRomOpen","LinearClosed","slope3","h0","h1","s0","slope2","MonotoneX","MonotoneY","ReflectContext","Natural","controlPoints","_t0","px","py","Step","_t","curve_step","stepBefore","stepAfter","none","series","order_none","stackValue","order_ascending","sums","cubicInOut","polyIn","polyOut","polyInOut","b2","b3","b4","b5","b6","b7","b8","b9","b0","bounceOut","backIn","overshoot","backOut","backInOut","elasticOut","elasticIn","amplitude","period","d3_voronoi_src_constant","elasticInOut","RedBlackTree","RedBlackNode","R","RedBlackRotateLeft","tree","RedBlackRotateRight","RedBlackFirst","after","grandpa","uncle","createEdge","setEdgeEnd","cells","halfedges","createBorderEdge","vertex","clipEdge","ax","ay","connectEdge","fm","fb","lx","ly","rx","ry","fx","fy","cellHalfedgeAngle","cell","site","va","vb","cellHalfedgeStart","cellHalfedgeEnd","firstCircle","circlePool","attachCircle","lArc","rArc","lSite","cSite","rSite","bx","by","epsilon2","ha","hc","circle","Circle","before","circles","detachCircle","beachPool","createBeach","beach","Beach","detachBeach","beaches","removeBeach","disappearing","iArc","nArcs","addBeach","dxl","dxr","directrix","leftBreakPoint","rightBreakPoint","createCell","newArc","hb","rfocx","rfocy","pby2","lfocx","lfocy","plby2","hl","aby2","triangleArea","lexicographic","Diagram","sites","extent","sortCellHalfedges","clipEdges","clipCells","iCell","iHalfedge","nHalfedges","startX","startY","endX","endY","nCells","cover","dc","v00","v01","v11","v10","polygons","polygon","triangles","e1","links","radius","_found","vx","vy","src_voronoi","voronoi","Selection","idGetter","_dataObjects","_updatedata","_mode","_enterdata","_exitdata","_idGetter","newData","entryData","exitdata","tempMap","duplicateData","updatedData","newSelection","currentData","dataObjects","mergedObjects","mergedData","newdata","objects","HTMLElement","common_utils_typeof","sanitizeIP","typeObj","nonExistentKeys","checkExistence","getMax","_toConsumableArray","getMin","getDomainFromData","fieldType","domArr","DimensionSubtype","_loop","_fields","_slicedToArray","field0","field1","arr0","firstMin","secondMin","firstMax","secondMax","unionDomain","domains","_ref2","dom","symbolFns","symbolCircle","cross","symbolCross","symbolDiamond","symbolSquare","symbolStar","symbolWye","symbolTriangle","easeFns","cubic","easeCubic","bounce","easeBounce","elastic","easeElastic","back","easeBack","poly","easePoly","circleInOut","getNearestValue","filterData","getWindow","getQualifiedClassName","cancelAnimationFrame","cls","defaultValue","objectIterator","Voronoi","common_utils_classCallCheck","_voronoi","_voronoiFn","addListenerToNamespace","namespaceInf","namespace","_listeners","getObjProp","_len","_key","Store","propName","propNames","callBack","on","calculatedProp","intSanitizer","transactor","holder","conf","stateProps","addAsMethod","nameSpaceProp","nsProp","compareTo","_len2","_key2","paramsLen","prevVal","spreadParams","sanitization","typeCheck","typeExpected","preset","oldValues","generateGetterSetters","propInfo","typeChecker","isEqual","oldVal","newVal","arraysEqual","is","ERROR_MSG","INTERFACE_IMPL","mergeRecursive","sink","createSelection","sel","appendObj","idFn","dataSelect","mergedSelection","exitSelection","getObjects","inst","numberInterpolator","interpolateNumber","piecewiseInterpolator","rgbToHsv","detectColor","col","getDataModelFromRange","selFields","selFn","getDataModelFromIdentifiers","filteredDataModel","dataArr","filteredSchema","include","registerListeners","listenerMap","_len3","_key3","propListenerMap","local","mapObj","propType","listenerFn","listener","isValidValue","getSymbol","stackOrders","_defineProperty","_stackOrders","stackOrderNone","stackOrderAscending","stackOffsets","_stackOffsets","yp","yn","stackOffsetNone","si","sij0","s3","sk","stack","orderNone","offsetNone","oz","kz","sz","sij","ki","d3Stack","pathInterpolators","curveStepAfter","curveStepBefore","curveStep","curveCatmullRom","Symbols","axisLeft","axisRight","axisTop","axisBottom","pie","descending","arcs","pa","cornerRadius","padRadius","a01","a11","a00","a10","da0","da1","ap","rp","rc0","rc1","p0","p1","oc","intersect","x3","y3","x32","y32","kc","lc","centroid","Scales","scaleBand","getSmallestDiff","points","timeFormats","timeDurations","formatTemporal","nearestInterval","getNearestInterval","getValueParser","retrieveNearestGroupByReducers","_len4","measureFieldNames","_key4","filteredReducers","getAncestorDerivations","nearestReducers","derv","retrieveFieldDisplayName","nearestSortingDetails","nearestSortDerivation","xhtml","src_namespaces","xlink","xml","xmlns","src_namespace","namespaces","space","creator","fullname","creatorFixed","ownerDocument","creatorInherit","uri","namespaceURI","src_selector","selector","querySelector","selectorAll","querySelectorAll","matcher","matches","element","vendorMatches","webkitMatchesSelector","msMatchesSelector","mozMatchesSelector","oMatchesSelector","sparse","EnterNode","_next","__data__","keyPrefix","bindIndex","groupLength","dataLength","bindKey","nodeByKeyValue","keyValues","src_window","styleValue","classArray","classList","ClassList","_names","classedAdd","classedRemove","contains","textRemove","htmlRemove","nextSibling","lower","previousSibling","constantNull","selection_cloneShallow","cloneNode","selection_cloneDeep","filterEvents","event","mouseenter","mouseleave","filterContextListener","contextListener","related","relatedTarget","compareDocumentPosition","event1","event0","onRemove","typename","__on","removeEventListener","capture","onAdd","wrap","addEventListener","customEvent","sourceEvent","dispatchEvent","CustomEvent","createEvent","initEvent","bubbles","cancelable","detail","groups","parents","_groups","_parents","subgroups","subnode","subgroup","enterGroup","updateGroup","_enter","_exit","groups0","groups1","m0","merges","group0","group1","compareNode","sortgroups","sortgroup","getAttributeNS","attrRemoveNS","removeAttributeNS","attrRemove","removeAttribute","attrFunctionNS","attrFunction","attrConstantNS","attrConstant","priority","styleRemove","removeProperty","styleFunction","setProperty","styleConstant","propertyRemove","propertyFunction","propertyConstant","classed","classedFunction","classedTrue","classedFalse","textFunction","textConstant","html","htmlFunction","htmlConstant","deep","typenames","parseTypenames","dispatch","dispatchFunction","dispatchConstant","src_select","nextId","Local","current","src_point","ownerSVGElement","createSVGPoint","clientX","clientY","matrixTransform","getScreenCTM","inverse","getBoundingClientRect","clientLeft","clientTop","mouse","changedTouches","src_touch","touches","identifier","touch","Dispatch","T","types","nopropagation","stopImmediatePropagation","noevent","preventDefault","nodrag","view","__noselect","MozUserSelect","d3_drag_src_constant","DragEvent","subject","active","defaultFilter","button","defaultContainer","defaultSubject","defaultTouchable","src_drag","mousedownx","mousedowny","mousemoving","touchending","touchable","gestures","clickDistance2","drag","mousedowned","touchstarted","touchmoved","touchended","gesture","beforestart","mousemoved","mouseupped","yesdrag","noclick","clearTimeout","sublisteners","clickDistance","taskHead","taskTail","frame","timeout","pokeDelay","clockLast","clockNow","clockSkew","clock","performance","timer_typeof","now","setFrame","clearNow","Timer","_call","_time","timer","delay","restart","wake","timerFlush","nap","sleep","poke","clearInterval","setInterval","src_timeout","elapsed","emptyOn","emptyTween","CREATED","SCHEDULED","STARTING","STARTED","RUNNING","ENDING","ENDED","transition_schedule","timing","schedules","__transition","self","tween","state","duration","ease","schedule","tweenValue","_id","transition_interpolate","interpolateRgb","interpolateString","Transition","_name","newId","selection_prototype","inherit","id0","id1","onFunction","on0","on1","sit","attrTween","value00","value10","interpolate0","value1","attrTweenNS","styleTween","styleRemoveEnd","removeFunction","tweenRemove","tween0","tween1","tweenFunction","delayFunction","delayConstant","durationFunction","durationConstant","easeConstant","defaultTiming","easeCubicInOut","interrupt","selectElement","makeElement","elemType","callbacks","keyFn","SVGElement","selectorVal","selectorType","actualSelector","enterSel","mergeSel","exitSel","applyStyle","setElementAttrs","attrs","setAttrs","setStyles","styles","createElements","getClientPoint","pos","clientPoint","getEvent","d3event","getD3Drag","d3drag","getSmartComputedStyle","css","textEl","mandatoryStyle","fill-opacity","renderer_utils_typeof","computedStyle","styleForSmartLabel","hasTouch","events","EVENT_LIST","composition","resolveFn","notification","hasOwn","LifeCycleManager","lifecycle_manager_classCallCheck","_eventList","_promises","_notifiers","_lifeCycles","_unreleasedLifeCycles","_boot","_preparePromises","Promise","promise","_makeNotifierPromise","createPromise","then","prm","formalName","client","_releasePromisesFromCache","_notify","stage","_resolvePromise","retrieve","_callLifeCycleCallback","_cachePromise","_resetTargetPromise","lifeCycles","DRAG","HOVER","SELECTIONDRAG","CLICK","LONGTOUCH","TOUCHDRAG","ALL_ACTIONS","SELECTION_NEW_ENTRY","SELECTION_NEW_EXIT","SELECTION_NULL","SELECTION_OLD_ENTRY","SELECTION_OLD_EXIT","SelectionSet","completeSet","_volatile","selection_set_classCallCheck","_completeSetCount","_lockedSelection","_resetted","ids","entrySet","exitSet","lockedSel","addSet","removeSet","updateSet","changeSideEffectAvailability","toEnable","sideEffects","change","enable","disable","getMergedSet","helper_toConsumableArray","conditionsMap","newEntry","SELECTION","oldEntry","mergedEnter","newExit","oldExit","mergedExit","complete","getSetInfo","selectionSet","propagationData","resetted","getModelFromSet","condition","Firebolt","actions","behaviourEffectMap","firebolt_classCallCheck","_sideEffectDefinitions","_sideEffects","_propagationInf","_actions","behavioural","physical","_selectionSet","_volatileSelectionSet","_propagationFields","_sourceSideEffects","selectionBox","_propagationBehaviourMap","_sourceBehaviours","_actionBehaviourMap","_config","_behaviourEffectMap","_entryExitSet","_actionHistory","_queuedSideEffects","mapSideEffects","registerBehaviouralActions","registerSideEffects","registerPhysicalBehaviouralMap","physicalBehaviouralMap","registerPhysicalActions","behEffectMap","preventDefaultActions","effectNames","effects","firebolt_toConsumableArray","behaviours","initializeBehaviouralActions","dispatchableBehaviours","Action","prepareSelectionSets","initializeSideEffects","sideEffectStore","actionHistory","queuedSideEffects","sideEffect","combinedSet","unionSets","behaviour","entryExitSet","existingModel","aggFns","effect","firebolt_typeof","sideEffectInstance","isEnabled","mutates","dispatchSideEffect","propagationInfo","propagate","getSideEffects","propagationSelectionSet","getPropagationSelectionSet","shouldApplySideEffects","sourceSelectionSet","applicableSideEffects","getApplicableSideEffects","applySideEffects","physicalAction","actionBehaviourMap","behaviourMap","mapActionsAndBehaviour","unsubscribe","onDataModelPropagation","propValue","dispatchBehaviour","uniqueIds","behaviouralActions","volatileSelectionSet","sideEffectDefinitions","sideEffectsMap","SideEffect","sideEffectConf","initedActions","initializePhysicalActions","physicalActions","phyAction","initedPhysicalActions","getDefaultTargetContainer","bindActionWithBehaviour","targets","behaviourList","xFields","yFields","xMeasures","FieldType","yMeasures","filterPropagationModel","_propModel$getData","fieldMap","getFullData","propagationSource","applicableSelectionSets","GenericBehaviour","firebolt","generic_classCallCheck","_enabled","selectionSets","getSelectionSets","_this$firebolt$getAdd","getAddSetFromCriteria","getPropagationInf","setSelectionSet","getEntryExitSet","_selectionSet$getSets","getSets","setConfig","isSourceFieldPresent","getSourceFields","VolatileBehaviour","reset","existingAddSet","updateExit","getCompleteSet","BRUSH","HIGHLIGHT","TOOLTIP","FILTER","HighlightBehaviour","BrushBehaviour","BEHAVIOURNAMES","FilterBehaviour","PersistentBehaviour","updateEntry","mergedExitSet","completeSetCount","SelectBehaviour","getDragActionConfig","sourceInfo","axes","xAxis","yAxis","axisFields","xField","getMembers","yField","xFieldType","yFieldType","stPos","startPos","endPos","dragDim","MeasureSubtype","isXDimension","isYDimension","xRange","yRange","selectedDomains","rangeObj","xdom","ydom","snap","getNearestRange","attachDragEvent","targetEl","drawingInf","touchStart","d3Drag","getDrawingContext","getSourceInfo","beh","dragEnd","hover","interaction","tooltip","svgContainer","nearestPoint","getNearestPoint","getAllPoints","showInPosition","generatePayloadFromEvent","click","physical_defineProperty","_physicalActions","ACTIONNAMES","longtouch","touchEnd","touchdrag","PROPS","valueParser","GenericSideEffect","generic_sideeffect_classCallCheck","_strategy","_strategies","defaultConfig","SurrogateSideEffect","interactionType","layers","layer","interactive","applyInteractionStyle","SpawnableSideEffect","_drawingContext","changeVisibility","sideEffectGroup","visible","defClassName","classPrefix","SelectionBox","boxConf","box","drawingContext","unitWidth","unitHeight","selectionGroupClassName","hide","sourceInf","_getBoxDimensionsFrom","getBoxDimensionsFromPayload","direction","xDim","yDim","xLinear","yLinear","xCriteria","yCriteria","x1Val","x2Val","bandScale","x1DomainIndex","x2DomainIndex","_sort2","helper_slicedToArray","getScaleValue","getUnitWidth","y1Val","y2Val","y1DomainIndex","y2DomainIndex","_sort4","_xDim","_yDim","show","selectionBoxDrag","onDrag","boxClassName","INITIAL_STYLE","connectorClassName","margin","content","iconContainerSize","iconScale","iconShape","iconColor","rowMargin","separator","parentClassName","arrow","disabled","getArrowPos","dim","measurement","arrowPos","boxHeight","boxWidth","arrowWidth","plotBottom","boxBottom","plotRight","boxRight","placeArrow","tooltipArrow","_tooltipArrow","tooltipBackground","_tooltipBackground","arrowConf","_arrowOrientation","Content","content_classCallCheck","_model","_formatter","ctx","_mount","displayFormat","table","tbody","margin-right","el","shape","Tooltip","htmlContainer","tooltip_classCallCheck","connectorContainer","tooltipConf","contentClass","_tooltipContainer","_contentContainer","_contents","_tooltipConnectorContainer","qualifiedClassName","addClass","defConf","contentConfig","reorderContainers","contentConf","render","_target","repositionArrow","arrowDisabled","arrowOrient","outsidePlot","connector","_offset","orientation","_extent","arrowSize","topSpace","dimX","rightSpace","leftSpace","positionTop","positionRight","positionLeft","positionHorizontal","positionVertical","_position","_arrowPos","GROUP_BY_FUNCTIONS","formatters","strategies_defineProperty","getDefaultTooltipFormatterFn","defaultFormatter","getRowContent","fieldInf","dataInf","formattedValue","measureIndex","dimensionMeasureMap","timeDiffs","defFormatter","fieldspace","dataLen","formatterFn","uniqueVals","strategies_toConsumableArray","colorAxis","shapeAxis","sizeAxis","isRetinalField","associatedMeasures","icon","getColor","getShape","getSize","formattedKey","measureFormatter","margin-left","buildTooltipData","fieldValues","detailFields","containsDetailField","getTabularData","allMeasures","_construct","strategies","selectionSummary","aggregatedModel","fieldsConf","measureNames","highlightSummary","configResolvers","specificConf","_default","_getPrototypeOf2","side_effects_tooltip_classCallCheck","tooltip_possibleConstructorReturn","tooltip_getPrototypeOf","_tooltips","sanitizeConfig","strategyObj","sanitizedConf","setStrategy","totalHeight","totalWidth","isEmpty","tooltips","boundBox","dataModels","fragmented","showVertically","tooltipPos","boxes","tooltip_toConsumableArray","sourceFields","indices","plotDimensions","getPlotPointsFromIdentifiers","strategy","strategyConf","dataTransform","projectFields","plotDim","dt","layoutContainer","parentContainerDimensions","layoutBoundBox","unitBoundBox","tooltipInst","TooltipRenderer","timeDiffsByField","strategyFn","positionRelativeTo","tooltipBoundBox","getContents","spaceOutBoxes","spaceOutIfOverlap","firstBox","secondBox","opposite","projectedFields","Crossline","bandWidth","_this$config","bandClass","lineClass","elemData","axisIndex","fieldInst","xOffset","plotWidth","crossline_toConsumableArray","getPlotSpan","getPlotPadding","startPx","endPx","dataPoint","parentGroup","fade","fadeFn","focus","highlight","PlotHighlighter","plot_highlighter_classCallCheck","plot_highlighter_possibleConstructorReturn","plot_highlighter_getPrototypeOf","FilterEffect","entryModel","clearCaching","resetData","enableCaching","addLayer","layerDefs","layerRegistry","layerDef","mark","layerCls","shouldDrawAnchors","depLayerEncoding","encoding","defaultSizeValue","layerObj","instances","getTransitionConfig","calculateDomain","linkedLayer","AnchorEffect","anchors_classCallCheck","anchors_possibleConstructorReturn","anchors_getPrototypeOf","_layersMap","addAnchorLayers","metaInf","registry","layerDefsVal","registerImmediateListener","STATE_NAMESPACES","anchors_slicedToArray","_layers","elems","_linkedLayer$getTrans2","getLayerByName","getTransformedDataFromIdentifiers","transformedData","transformedDataModel","PersistentAnchors","BrushAnchors","behaviour_effect_map_defineProperty","BEHAVIOURS","SIZE","COLOR","SHAPE","TEXT","ENCODING","X0","Y0","RADIUS","RADIUS0","ANGLE","ANGLE0","nearestPointThreshold","strokeOpacity","connectNullData","SimpleLayer","coord","BOTTOM","TOP","LEFT","RIGHT","axisOrientationMap","axis_orientation_defineProperty","_axisOrientationMap","AxisOrientation","LINEAR","BAND","TIME","ORDINAL","QUANTIZE","QUANTILE","LOG","POW","IDENTITY","SEQUENTIAL","THRESHOLD","CONTINOUS","DISCRETE","HIDDEN","DEFAULT_ANGLE_DOMAIN","scaleLinear","scales","scaleThreshold","scaleLog","scalePow","scaleIdentity","scaleOrdinal","scaleSequential","scaleQuantize","scaleQuantile","scaleTime","scaleMap","scale_creator_defineProperty","_scaleMap","ScaleType","createScale","scaleFactory","adjustRange","axisName","axisNamePadding","fixedBaseline","labels","rotation","smartTicks","numberOfTicks","showAxisName","showInnerTicks","showOuterTicks","yOffset","rotateAxis","instance","tickText","labelManager","renderConfig","getTickSize","yShift","xShift","tickLabelDim","quadrant","rotationNormalizer","angleToRadian","angle","changeTickOrientation","selectContainer","axisInstance","_smartTicks","isSmartTicks","registerAnimationDoneHook","setFixedBaseline","setAxisNamePos","textNode","axisNameHeight","labelOffset","availableSpace","longestWord","quarter","halfYearly","mintues","seconds","getTickIntervalFnBasedOnNumberOfTicks","possibleTickLevelIndex","maxPossibleTicks","tickIntervalLevelInfo","tickIntervalInfo","numOfPossibleTicks","getActualTickInterval","noOfTicks","minWidthBetweenTicks","_minTickDistance","getTickIntervalBasedOnCurrentLevel","_dependencies","longestWordType","applyTickSkipping","minTickDistance","minTickSpace","_minTickSpace","minTickWidth","maxTicks","getSkippedTicks","actualNumberOfTicks","_minDiff","millisecondInterval","numOfTicksAccordingToMinDiff","adjustHorizontalRange","adjustVerticalRange","rangeAdjustmentMap","space_setter_defineProperty","_rangeAdjustmentMap","setAxisRange","rangeBounds","getAdjustedRange","getAxisOffset","timeDiff","avWidth","bars","spaceSetter","spaceConfig","heightForTicks","_context$availableSpa2","availWidth","availHeight","isOffset","_context$renderConfig2","_context$getAxisDimen","getAxisDimensions","tickDimensions","allTickDimensions","axisNameDimensions","tickDimHeight","tickDimWidth","namePadding","labelConfig","minTickHeight","getTickValues","tickShifter","maxTickSpaces","widthForTicks","totalTickWidth","getRotatedSpaces","rotatedHeight","rotatedWidth","setOffset","logicalSpace","getAxisComponentDimensions","axisTicks","largestTick","largestTickDimensions","smartTick","_context$renderConfig","labelFunc","_tickLabelStyle","originalLabel","getFormattedText","_axisNameStyle","getHorizontalAxisSpace","axisDimensions","_context$config2","axisDimHeight","minTickDiff","getMinTickDifference","cartesian_axis_helper_toConsumableArray","getVerticalAxisSpace","_context$config3","calculateBandSpace","largestDimHeight","_getHorizontalAxisSpa","_getVerticalAxisSpace","getValidDomain","userDom","setContinousAxisDomain","_domain","axisComponentDimensions","oldConfig","mockedOldConfig","shouldAxesScaleUpdate","hasAxesConfigChanged","properties","tickFormatter","sanitizeTickFormatter","_scale","_axis","createAxis","_tickFormatter","resetRenderConfig","_renderConfig","_maxTickSpaces","SimpleAxis","simple_axis_classCallCheck","_range","_domainLock","_axisDimensions","defCon","simpleConfig","bodyElem","dist","_animationDonePromises","domainValue","setAxisComponentDimensions","smartAxisName","axisClass","_objectSpread","setTickConfig","setSmartAxisName","_this$config2","dimType","widthDim","getSmartAxisName","oriSize","domainVal","computeAxisDimensions","_getAxisComponentDime","labelHeight","labelWidth","calculateContinousSpace","_context$renderConfig6","axisNameWidth","_getHorizontalAxisSpa2","_getVerticalAxisSpace2","renderAxis","axisNameStyle","tickLabelStyle","axisTickFormatter","labelProps","axisNameSpace","all","LinearInterpolator","LogInterpolator","PowInterpolator","interpolatorMap","continous_axis_defineProperty","_interpolatorMap","ContinousAxis","continous_axis_classCallCheck","continous_axis_possibleConstructorReturn","continous_axis_getPrototypeOf","InterpolatorCls","_interpolator","_this$renderConfig","sanitizeDomain","_get2","_get","_this$renderConfig2","newTickValues","tickSpace","getNumberOfTicks","labelDim","numberOfValues","tickLength","_this$smartTicks$","BandAxis","_this$maxTickSpaces","_getRotatedSpaces","paddingNormalized","formatTickValue","TimeAxis","time_axis_classCallCheck","time_axis_possibleConstructorReturn","time_axis_getPrototypeOf","time_axis_get","rawTicks","resetTickInterval","_context$config8","_context$availableSpa","adjustedRange","x11Colors","Pink","LightPink","HotPink","DeepPink","PaleVioletRed","MediumVioletRed","LightSalmon","Salmon","DarkSalmon","LightCoral","IndianRed","Crimson","FireBrick","DarkRed","Red","OrangeRed","Tomato","Coral","DarkOrange","Orange","Gold","Yellow","LightYellow","LemonChiffon","LightGoldenrodYellow","PapayaWhip","Moccasin","PeachPuff","PaleGoldenrod","Khaki","DarkKhaki","Cornsilk","BlanchedAlmond","Bisque","NavajoWhite","Wheat","BurlyWood","Tan","RosyBrown","SandyBrown","Goldenrod","DarkGoldenrod","Peru","Chocolate","SaddleBrown","Sienna","Brown","Maroon","DarkOliveGreen","Olive","OliveDrab","YellowGreen","LimeGreen","Lime","LawnGreen","Chartreuse","GreenYellow","SpringGreen","MediumSpringGreen","LightGreen","PaleGreen","DarkSeaGreen","MediumSeaGreen","SeaGreen","ForestGreen","Green","DarkGreen","MediumAquamarine","Aqua","Cyan","LightCyan","PaleTurquoise","Aquamarine","Turquoise","MediumTurquoise","DarkTurquoise","LightSeaGreen","CadetBlue","DarkCyan","Teal","LightSteelBlue","PowderBlue","LightBlue","SkyBlue","LightSkyBlue","DeepSkyBlue","DodgerBlue","CornflowerBlue","SteelBlue","RoyalBlue","Blue","MediumBlue","DarkBlue","Navy","MidnightBlue","Lavender","Thistle","Plum","Violet","Orchid","Fuchsia","Magenta","MediumOrchid","MediumPurple","BlueViolet","DarkViolet","DarkOrchid","DarkMagenta","Purple","Indigo","DarkSlateBlue","SlateBlue","MediumSlateBlue","White","Snow","Honeydew","MintCream","Azure","AliceBlue","GhostWhite","WhiteSmoke","Seashell","Beige","OldLace","FloralWhite","Ivory","AntiqueWhite","Linen","LavenderBlush","MistyRose","Gainsboro","LightGray","Silver","DarkGrey","Grey","DimGrey","LightSlateGrey","SlateGrey","DarkSlateGrey","Black","palette","DEFAULT_GRADIENT_COLOR","DEFAULT_CONFIG","stops","getHslString","hslArr","convertToXllString","baseString","getActualHslColor","paletteColor","hexToHsv","props_toConsumableArray","newConfig","uniqueValues","treatNullMeasures","scaledVal","minDomainScaledVal","resolveAxisConfig","propVal","defaultVal","getStops","newStops","color_strategy_toConsumableArray","rangeStops","newStopsLength","newRange","hslInterpolator","interpolateHslLong","indexedDomain","scaleDomain","indexedDomainMeasure","normalDomain","steppedDomain","_getStops","continousSteppedDomain","_getStops2","uniqueRange","indexedRange","numVal","normalRange","strategyGetter","domainType","rangeType","schemeType","color_strategy_defineProperty","domainRange","ColorAxis","color_axis_classCallCheck","_domainType","_rangeType","_schemeType","getSchemeType","_colorStrategy","setColorStrategy","updateDomain","colorStrategy","getScheme","colorSchemes","hslColorArray","getRawColor","color_axis_toConsumableArray","scaleInfo","domainRangeFn","transformationArr","newH","newS","newL","newA","size_strategy_defineProperty","pieceWiseRange","size_strategy_toConsumableArray","intervals","newIntervals","discreteRange","SizeAxis","size_axis_classCallCheck","_sizeStrategy","domainInfo","domainFn","generator","ShapeAxis","shape_axis_classCallCheck","_generatedShapes","shapeType","shapeGenerator","generatorFn","generatedShapes","createAngleValues","angleData","_angleFn","_angleValues","AngleAxis","angle_axis_classCallCheck","customDomain","customRange","_this$_range","angle_axis_slicedToArray","ROWS","COLUMNS","COL","ROW","CELL","X_AXES","Y_AXES","ENTRY_CELLS","EXIT_CELLS","PRIMARY","SECONDARY","adjustDomain","minOuterRadius","RadiusAxis","radius_axis_classCallCheck","_radiusFactor","sanitizedRange","rangeVal","DATA_TYPES","group_transform","data_type_scale_map_defineProperty","_dataTypeScaleMap","groupByIndices","nestCollection","nestFn","identityTransform","transformMap","transform_factory_defineProperty","_transformMap","uniqueField","valueField","normalizedData","normalizeData","uniqueFieldIndex","valueFieldIndex","seriesKeyIndex","seriesKeys","tuples","rowObj","_tuple","seriesKey","newArr","orderBy","orderIndex","groupByIndex","localeCompare","stackData","seriesData","transformFactory","POLAR","CARTESIAN","transfromColor","styleType","intensity","stateColor","originalColor","fillColorInfo","transformColor","interactionStyles","elements","getPlotElementsFromSet","_d$meta","colorTransform","helpers_slicedToArray","getAxesScales","_map2","_map4","xScale","yScale","encodingFieldInfRetriever","helpers_defineProperty","_encodingFieldInfRetr","encodingInf","getIndividualClassName","individualClassName","classNameStr","dataNormalizers","_dataNormalizers","encodingFieldInf","radiusFieldIndex","angleFieldIndex","radius0FieldIndex","angle0FieldIndex","fieldsLen","pointObj","radius0","angle0","enc","rowId","transformType","xFieldIndex","yFieldIndex","x0FieldIndex","y0FieldIndex","domainCalculator","_domainCalculator","layerInst","angleValues","radius0Field","encodingFieldsInf","xFieldSubType","yFieldSubType","x0Field","y0Field","yEnc","xEnc","attachDataToVoronoi","helpers_toConsumableArray","updateStyle","positionPoints","positioner","encodingTransform","getPlotMeasurement","dimensionalValues","fieldInfo","_bandScale","span","groupSpan","offsetValues","actualGroupWidth","dataProps","innerPadding","getGroupSpan","isAxisBandScale","axisPadding","groupPadding","resolveInvalidTransformType","_context$encodingFiel","groupByField","groupByFieldMeasure","getValidTransformForAggFn","resolvedInvalidTransformType","_context$encodingFiel2","isCustomTransformTypeProvided","_customConfig","resolveEncodingValues","transformedValues","getColorMetaInf","getHslArray","getCoordValue","trig","coordValueGetter","toCartesianCoordinates","rangePlot","_point$update","_coordValueGetter","sortData","axisArr","listener_map_slicedToArray","encodingValue","resolveTransformType","_transformedData","getTransformedData","_normalizedData","getNormalizedData","calculateDomainFromData","_updateLock","getRenderProps","registerChangeListener","renderLayer","throwback","commit","defaultOptions","default_options_defineProperty","_defaultOptions","newConf","defaultPolicy","_cacheEnabled","_cachedData","BaseLayer","base_layer_classCallCheck","base_layer_possibleConstructorReturn","base_layer_getPrototypeOf","base_layer_assertThisInitialized","alias","_points","_measurement","_store","localNs","initializeGlobalState","globalState","getState","base_layer_defineProperty","global","unitRowIndex","unitColIndex","_encodingFieldsInf","_encodingTransform","_alias","transformData","encodingType","transformedDataArr","_transformType","getValidTransform","pointMap","_pointMap","_dataProps","_this$encodingFieldsI","base_layer_slicedToArray","xMeasure","yMeasure","_identifiers$","_identifiers$2","xMeasureIndex","yMeasureIndex","getAllAttrs","filteredPoints","base_layer_toConsumableArray","sizeVal","_identifiers$getData","identifierData","identifierSchema","_this$encodingFieldsI2","tupleArr","transformedVal","base_layer_construct","userConf","drawLine","curveInterpolatorFn","linepath","LineLayer","line_classCallCheck","line_possibleConstructorReturn","line_getPrototypeOf","isXDim","isYDim","xPx","yPx","resolvedEncodings","stroke","cachePoint","seriesClassName","containerSelection","colorField","colorFieldIndex","animateGroup","groupTransition","groupAnimateStyle","stroke-opacity","getPathStyle","translatePoints","colorValFn","colorVal","getDrawFn","searchRadius","_point$data$data","getIdentifiersFromData","layerId","drawArea","easeEffect","renderer_slicedToArray","enterAreaPath","updateAreaPath","selectionEnter","AreaLayer","area_get","area_getPrototypeOf","_getAxesScales","classNameFn","minYVal","basePos","y0Px","invalidY","invalidY0","resolvedValues","stroke-width","stroke-linejoin","states","fadeout","selected","ArcLayer","arc_classCallCheck","arc_possibleConstructorReturn","arc_getPrototypeOf","_prevPieData","_this$axes","radiusAxis","pieIndex","prevData","angleV","angles","_angles","uid","getOuterRadius","getInnerRadius","startAngle0","endAngle0","_previousInfo","getPreviousPoint","currIndex","prevArc","nextArc","_context$axes$angle$r2","arc_helper_slicedToArray","qualClassName","_arcFn","consecutiveExits","exitCounter","tweenPie","individualClass","tweenExit","exitArr","oldExitCounter","tweenExitPie","consecutiveExitArr","gElem","pieSlices","pieSliceInf","tData","drawText","selectionMerge","backgroundVal","textanchor","textStyle","background","backgroundPadding","_smartLabel$getOriSiz","backgroundEl","alignment-baseline","defaultEncoding","alignmentBaseLine","defRotation","pointTranslators","polar","textEncoding","angleAxis","textFormatter","backgroundEncoding","backgroundValue","cartesian","textField","textFieldIndex","textValue","text_slicedToArray","TextLayer","text-anchor","drawSymbols","createShape","groupElement","Element","newShape","nodeName","src","href","shapeElement","pathStr","checkPath","exitGroup","defColorStyle","fillOpacity","shapes","sizes","PointLayer","point_classCallCheck","point_possibleConstructorReturn","point_getPrototypeOf","_config$offset","offsetX","offsetY","point_slicedToArray","maxSize","generateDataPoints","point_toConsumableArray","drawFn","getMarkId","_maxSize","_getPlotMeasurement2","widthMetrics","heightMetrics","offsetXValues","offsetYValues","measurementConf","getMeasurementConfig","widthSpan","heightSpan","distanceLimit","drawRects","barEnterFn","transitionBars","selTransition","positionRetriever","isNegativeVal","barBasePos","resolveDimByField","axesInfo","spaceType","sizeEncoding","sizeConfig","sizeValue","enterSpace","minVal","maxVal","diffPx","minDomVal","_positionRetriever$ty2","bar_helper_slicedToArray","resolveDimensions","_resolveDimByField","enterWidth","enterX","xPos","_resolveDimByField2","enterHeight","BarLayer","bar_classCallCheck","bar_possibleConstructorReturn","bar_getPrototypeOf","_plotPadding","_plotSpan","bar_get","getTranslatedPoints","normalizedDataArr","clipElement","clipPathElement","bar_slicedToArray","barWidthMetrics","barHeightMetrics","barWidthOffsets","barHeightOffsets","barWidth","barWidthOffset","barHeight","barHeightOffset","uniqueFieldType","pointFound","bar_toConsumableArray","p2","tick_renderer","ticksEnter","angle0Axis","angle0V","angles0","_angles2","_layerInst$encodingFi","_config$span","xSpan","ySpan","x0Px","TickLayer","drawTicks","AREA_LAYER","ARC_LAYER","LINE_LAYER","TEXT_LAYER","POINT_LAYER","BAR_LAYER","TICK_LAYER","SIMPLE_LAYER","BASE_LAYER","sanitizeEncoding","layerFactory","compositeLayers","factoryObj","setLayerRegistry","reg","_layerRegistry","getSerializedConf","serializedDefs","defs","unitLayerDef","sDef","parseLayerDefinition","layerType","strs","layer_factory_toConsumableArray","getLayerInstance","layerConstructor","getLayerClass","composeLayers","sanitizeLayerConfig","DEFAULT_LAYERS","defaults_defineProperty","_DEFAULT_LAYERS","LAYER_TYPES","local_options","local_options_defineProperty","_CONFIG$ROWS$COLUMNS$","SimpleGroup","Variable","ComposedVars","composed_vars_classCallCheck","composed_vars_possibleConstructorReturn","composed_vars_getPrototypeOf","vars","_vars","_data","member","getMinDiff","SimpleVariable","simple_var_classCallCheck","simple_var_possibleConstructorReturn","simple_var_getPrototypeOf","oneVar","_oneVar","dtFormat","dateFormat","fieldDef","minimumConsecutiveDifference","varInst","convertToVar","transformFields","field_sanitizer_slicedToArray","normalizedFields","normalizeFields","norFields","orderFields","fieldArray","temporalArr","categoricalArr","fieldList","numOfMeasures","allDimensions","field_sanitizer_toConsumableArray","rowsInfo","columnsInfo","rowDimensions","rowMeasures","rowTemporalFields","rowCategoricalFields","columnDimensions","columnMeasures","columnTemporalFields","columnCategoricalFields","VisualEncoder","_fieldInfo","_axisFrom","_headerFrom","__headerFrom","axisFrom","_getHeaderAxisFrom2","visual_encoder_slicedToArray","getHeaderAxisFrom","rowHeader","rowAxis","_getHeaderAxisFrom4","colHeader","colAxis","headerFrom","scaleMaps","dataTypeScaleMap","generateAxisFromMap","axisType","axesCreators","facetFields","axisKey","groupAxes","currentAxes","cacheMaps","commonAxisKey","getAxisKey","axisConfig","getAxisConfig","axisInfo","axisOrientation","rowIndex","columnIndex","rawUserAxisConfig","userAxisConfig","_rotationLock","createSimpleAxis","Cls","sanitizeIndividualLayerConfig","encodingConfigs","getIndex","arrIndex","CartesianEncoder","geomCellAxes","projections","rowFields","columnFields","geomCell","xAxes","yAxes","lock","unlock","units","1","getGroupByData","rIdx","unitsArr","_loop2","cIdx","len2","encodingDomains","getDataDomain","axisTypeIndex","typeOfField","_resolver$axes","axesArr","adjustedDomain","typeOfAxis","alignZeroLine","getAdjustedDomain","y1ratio","y2ratio","allSameSign","facets","counter","primaryFacets","secondaryFacets","primaryFields","secondaryFields","primaryLen","secondaryLen","projArr","primaryField","secondaryField","facet","existIndex","axisFromIndex","cartesian_encoder_get","cartesian_encoder_getPrototypeOf","groupedModel","encodingObj","retriveDomainFromData","layerArray","serializedLayers","userLayerConfig","layerConfig","retinalConfig","colField","colFieldName","rowField","configs","rowFieldName","rowFieldType","getDefaultMark","colFieldType","defConfigs","layerConfigs","getLayerConfFromFields","colFields","encodingArr","encoder_helper_toConsumableArray","colFieldExist","rowFieldExist","layerConf","mergedLayerConf","serializedLayerConfig","cartesian_encoder_toConsumableArray","axesCls","polar_encoder_defineProperty","_axesCls","PolarEncoder","pieAxes","axesObj","matrixLayers","resolverAxes","varInstances","encType","userConfig","domainProps","matrixInstance","unitDomains","setRadiusFactor","sizeField","retinalFields","_context$axes","sizeFieldIndex","sizeMultiplier","getSizeMultiplier","sizeAxisDomain","encodingFields","sanitizedRows","sanitizedColumns","polar_encoder_get","polar_encoder_getPrototypeOf","sanitizedFields","typeIndex","fieldSet","polar_encoder_toConsumableArray","layerEncoding","sanitizedConfig","angleField","angle0Field","RetinalEncoder","newAxes","createRetinalAxis","fieldProps","getAxisType","isDistributionEqual","group_utils_toConsumableArray","rowType","initializeCacheMaps","cellMap","xAxesMap","yAxesMap","entryCellMap","exitCellMap","headerCreator","fieldHeaders","TextCell","getHeaderText","rowLength","getEncoder","encoder","hasPolarEncodings","userAxisFromConfig","group_utils_slicedToArray","firstField","secondField","firstFieldType","secondFieldType","setFacetsAndProjections","_encoder$simpleEncode","simpleEncoder","getFacetsAndProjections","group_utils_defineProperty","getBorders","matrices","showRowBorders","showColBorders","showValueBorders","valueMatrix","_rows","leftRows","rightRows","_columns","topColumns","bottomColumns","_encoder$fieldInfo","allDimensionLength","allMeasuresLength","allTemporalFieldsLength","getRowBorders","borders","getColumnsBorders","getValueBorders","borderTypeRow","borderTypeCol","sortFacetFields","action_behaviour_map_defineProperty","ACTIONS","sanitizeLayerDef","sanitizedDefs","sConf","unionDomainFromLayers","layerAxisIndex","domainValues","layerDomain","fieldDomain","encodingDomain","fieldStr","domain1","renderLayers","_lifeCycleManager","notify","orderedLayers","layerParentGroup","layerDepOrder","getDependencyOrder","dependencyOrder","visited","visit","_layerDepOrder","_timeDiffs","getLayersBy","searchBy","removeLayersBy","createRenderPromise","_renderedPromise","_renderedResolve","radiusAxes","getRadiusRange","GRID_BAND","GRID_LINE","getGridLayerDefinitions","getDefaultVisibilty","getLayerDefinition","_definition","_axes","_encoding","gridLines","gridBands","gridLineColor","zeroLineColor","gridBandColor","isLinearScale","grid_lines_defineProperty","isNegativeDomain","getValidSubtype","attachDataToGridLineLayers","_gridLines","_gridBands","gridLayerData","getGridLayerData","gridData","jsonData","_jsonData$push","grid_lines_toConsumableArray","trackerClassName","arcLayerClassName","sideEffectClassName","src_local_options","src_local_options_defineProperty","_CONFIG$LAYERDEFS$TRA","cachedData","local_options_toConsumableArray","oldData","src_listener_map_slicedToArray","fieldsVal","removeExitLayers","layersMap","markSet","colIndex","listenerInf","hasPlotSpan","_ref5","temporalFields","filteredFields","_ref6","_ref7","_ref8","_ref9","_ref10","_timeDiffsByField","createGridLineLayer","vuConf","_layerDeps","atomicDef","_ref11","_ref12","transformDataModels","transformVal","_ref15","_ref16","layerAxisIndexVal","_layerAxisIndex","axesVal","lyr","disableUpdate","attachDataToLayers","transformedDataModels","dataSource","enableUpdate","_dimensionMeasureMap","getDimensionMeasureMap","retinalEncodingsAndMeasures","_layer$encodingFields","shapeField","_retinalEncodingsAndM","src_helper_toConsumableArray","attachAxisToLayers","axisInf","props_defineProperty","_PROPS","createSelectionSet","originalData","attachPropagationListener","firebolt_helper_slicedToArray","dispatchQueuedSideEffects","firebolt_helper_toConsumableArray","clearActionHistory","payloadGenerator","brush","selectionDataModel","propPayload","getRangeFromData","propCriteria","isDimension","payload_generator_toConsumableArray","__default","propagateValues","propagationFieldInf","propagationFields","sideEfffects","mergedModel","sourceUnit","sourceCanvas","parentAlias","propagationBehaviour","propFields","facetByFields","getModelWithFacetData","schema1","data1","schema2","data2","data_propagator_toConsumableArray","groupId","behaviourInstance","propagationConf","sourceBehaviour","enabled","propConf","propInf","UnitFireBolt","src_firebolt_classCallCheck","firebolt_possibleConstructorReturn","firebolt_getPrototypeOf","firebolt_assertThisInitialized","unitId","aliasName","propagationSourceCanvas","sourceUnitId","sourceSideEffects","sideEffectInstances","actionOnSource","mappedEffects","se","sideEffectChecker","enabledFn","payloadFn","sourceIdentifierFields","sourceBehaviours","firebolt_get","VisualUnit","visual_unit_classCallCheck","visual_unit_defineProperty","lifeCycleManager","_gridLinesSelection","_gridBandsSelection","_layerNamespaces","_transformedDataModels","localOptions","_firebolt","_rootSvg","class","renderGridLineLayers","gridLineParentGroup","_entry","grid_lines_slicedToArray","parentGroupClass","_sideEffectGroup","createSideEffectGroup","initSideEffects","rootSvg","_this$parentContainer","parentContainerInf","layerDefinition","layerDefinitions","components","layerIndex","startIndex","visual_unit_toConsumableArray","layersArr","_layersArr","markId","defArr","getLayerFromDef","existingLayer","instanceArr","instanceValues","layerdeps","depArr","resolveEncodingTransform","resolvable","getLayerAxisIndex","_layer$config","specificField","encodingField","stateStore","calculateDomainListener","parentModel","dimValue","getNearestDimensionalValue","entryVal","pointInf","getMarkInfFromLayers","markInf","parsedIdentifiers","transposeArray","getPointsFromIdentifiers","visual_unit_construct","getFieldNames","fields1","matrix_model_toConsumableArray","createSelectedDataModel","uniqueKeyGenerator","keyArray","nextDepthUniqueValues","newContext","projectRows","allColumnProjections","rowProjections","optionalProjections","_getFieldNames2","matrix_model_slicedToArray","projFieldNames","colProjFieldNames","pushToMatrix","valueCellCreator","_matrix$rowIndex","facetInfo","colProjections","rowProj","projIdx","_getFieldNames4","rowProjFieldNames","projectedDm","formatKeys","formatterList","rKeys","createValueCells","suppliedLayers","GeomCell","horizontalAxis","verticalAxis","datamodelTransform","layerConfigArr","getLayerConfig","normalizedColumns","normalizedRows","allFacets","cell_creator_toConsumableArray","rowFacets","colFacets","facetField","geomCellKey","getCellKey","columnId","updateCells","facetKey","createAxisCells","currObj","axisInst","_axisInst$config","AxisCell","BlankCell","headerPlaceholderGn","selectionObj","selectionKeys","keySet","textCells","createTextCells","textCell","generatePlaceholders","facetsAndProjections","encoders","valuesMatrix","rowKeys","columnKeys","takeAxisFrom","takeHeaderFrom","axisPlaceholderGn","selObj","axesMatrix","selObjProp","axesForDraw","rowsPrimary","rowPrime","rowsSecondary","rowSec","columnsPrimary","colPrime","columnsSecondary","colSec","_selectionObj","section","hContext","getAxisFields","fieldHolder","ac","computeMatrices","componentRegistry","globalConfig","autoGroupBy","otherEncodings","matrixGnContext","getCellDef","isRowSizeEqual","isColumnSizeEqual","colCells","rowCells","resetSimpleAxes","newCacheMap","valueCellContext","serializeLayerConfig","extractFields","layerFields","_ref4","flattenArray","getFieldsFromSuppliedLayers","suppliedLayerConfig","aggregationFns","nearestAggFns","resolvedAggFns","valueMatrixInfo","getMatrixModel","rowDataModels","colProj","firstLevelRowKeys","_rowDataModels","rowFacetFieldNames","selectedDataModel","newProjectedDataModels","_rowDataModels2","colFacetNames","firstLevelColumnKeys","dme","rIndex","cIndex","rawFormat","transposedColKeys","sortDmTemporalFields","valueCellsCreator","placeholder","_mutateAxesFromMap","mutateAxesFromMap","xAxisSet","yAxisSet","axisId","createUnits","_generateMatrices","generateMatrices","leftHeaders","topHeaders","bottomHeaders","rightHeaders","cell_creator_slicedToArray","leftFacets","rightFacets","rowPriority","colPriority","leftMatrix","rightMatrix","topMatrix","bottomMatrix","currentBottomLength","setAvailableSpace","rowMatrix","columnMatrix","RESOLVER_PROPS","MatrixResolver","matrix_resolver_classCallCheck","_registry","_layerConfig","_matrixLayers","_rowMatrix","_columnMatrix","_valueMatrix","_facets","_projections","_datamodelTransform","_units","_cacheMaps","maps","matrix_resolver_toConsumableArray","_horizontalAxis","_verticalAxis","matrixType","_this5","sideEffectRegistry","_this$dependencies","unitConfig","extractUnitConfig","globalStates","_this$getAllFields","retContext","getRetinalFieldsDomain","retinalEncoder","setCommonDomain","_this6","retinalAxes","updateModel","placeholders","bottomLeft","bottomRight","_this$dependencies3","showHeaders","matrix_resolver_slicedToArray","topCols","bottomCols","rowHeaders","blankCellCreator","footers","topLeft","topRight","ValueMatrix","matrixArr","value_matrix_classCallCheck","instancesById","cellValue","_instancesById","_matrix","_filterFn","rowWidth","currentRowWidth","getLogicalSpace","rowHeight","currentRowHeight","setMatrixInstances","_composition","createMatrices","matrixConfig","unsubscribeChangeListeners","sanitizeRetinalConfig","retinalConf","confValue","groupType","fieldSanitizer","setAxisAndHeaders","placeholderInfo","getMatrices","_groupedDataModel","createRetinalAxes","setDomains","cornerMatrices","createHeaders","metaData","border","unionUnitDomains","registerDomainChangeListener","visual_group_props_defineProperty","visual_group_props_PROPS","cellRegistry","VisualGroup","visual_group_classCallCheck","visual_group_possibleConstructorReturn","visual_group_getPrototypeOf","componentSubRegistry","visual_group_assertThisInitialized","_selection","createUnitState","visual_group_helper_slicedToArray","createLayerState","setupChangeListeners","variable","findInGroup","channel","group_utils_this","facetType","projType","getRetinalAxes","getSimpleAxes","_this$resolver$getAll","visual_group_defineProperty","existingRemoveSet","select_toConsumableArray","firebolt_action_behaviour_map_defineProperty","action_behaviour_map_actionBehaviourMap","propagationBehaviourMap","_propagationBehaviour","firebolt_behaviour_effect_map_defineProperty","firebolt_behaviour_effect_map_behaviourEffectMap","propagationSideEffects","_propagationSideEffec","SCALE_FUNCTIONS","VALUE","canvasAlias","rawVal","check","assembleModelFromIdentifiers","temp","src_firebolt_helper_toConsumableArray","LegendFireBolt","_Firebolt","legend_firebolt_classCallCheck","legend_firebolt_possibleConstructorReturn","legend_firebolt_getPrototypeOf","legend_firebolt_inherits","legend_firebolt_createClass","behaviourName","getCriteriaFromData","firebolt_physical_defineProperty","physical_physicalActions","boundingBox","gradientDimensions","axisScale","rangeShifter","drag_defineProperty","getSelectionCriteria","selectionBoxMeasure","drawingInfMeasure","subjectStartPoint","gradientDimension","legendGradContainer","legendSelGroup","enterFn","getMousePos","boundingClientRect","selection_box_drag_defineProperty","fadeOut","brighten","LegendHighlighter","legend_highlighter_classCallCheck","legend_highlighter_possibleConstructorReturn","legend_highlighter_getPrototypeOf","legendContainer","resetLogicalSpace","title","_title","ALIGN","DEFAULT_MEASUREMENT","LEGEND_TITLE","borderStyle","borderColor","bounds","upper","ICON_MAP","getScaleInfo","scaleType","steps","scaleFn","getInterpolatedArrayData","domainForLegend","scaleParams","requiredWidth","requiredHeight","upperBound","maxTickDiff","alignment","smartLabelCalc","minimumTickSize","_smartLabelCalc$getOr","isInteger","getcomputedArray","computationhelper","requiredMeasure","availableMeasure","currentTickValue","nextTickValue","measureParam","pixelPerTick","getInterpolatedData","recomputeSteps","getTickMeasure","_scaleParams$measures","interpolatedFn","tickValue","getDomainBounds","domainBounds","domainLeg","ele","legend_helper_defineProperty","getScaleFactor","SimpleLegend","simple_legend_classCallCheck","_metaData","_fieldName","_labelManager","_cells","defaultMeasurement","_computedStyle","legendBehaviours","_canvasAlias","getItemMeasures","_labelManager$getOriS","_this$measurement","effPadding","effBorder","effMargin","dataFromScale","titleSpace","getTitleSpace","titleHeight","titleWidth","labelSpaces","getLabelSpaces","_computeItemSpaces","computeItemSpaces","maxItemSpaces","textOrientation","itemSpaces","iconSpaces","maxIconWidth","labelSpace","itemSpace","iconSpace","newLabelWidth","titleSpaces","_this$measurement2","_this$config3","titleCreator","titleContainer","marginPosition","_this$config4","_this$measurement3","renderTitle","simple_legend_defineProperty","legendOrientation","position_config_defineProperty","_legendOrientation","datasets","itemContainerMeasures","getStepSpacesInfo","iconHeight","iconWidth","stepPadding","horizontal","vertical","positionConfig","_positionConfig","alignmentMap","_alignmentMap","itemStack","_itemStack","createLegendSkeleton","gradWidth","gradHeight","maxGradHeight","maxGradWidth","legendBody","legendItem","getItemContainers","legendInstance","positionObj","createItemSkeleton","_context$config","itemSkeleton","alignClass","applyItemStyle","measureType","stepColorCheck","_context$measurement","renderIcon","defaultIcon","DiscreteLegend","_getScaleInfo","discrete_legend_toConsumableArray","_field$schema","discrete_legend_defineProperty","discrete_legend_get","discrete_legend_getPrototypeOf","renderDiscreteItem","_context$measurement2","_item$icon","text-align","getGradientDomain","accumulator","currentValue","MAX_VALUE","MIN_VALUE","legendGradSvg","legendGradCont","linearGradient","makeLinearGradient","legendRect","GradientLegend","gradient_legend_toConsumableArray","gradient_legend_defineProperty","newAxis","axisSpace","axisDomainLength","_legendGradientSvg","gradient_legend_get","gradient_legend_getPrototypeOf","renderGradient","_createLegendSkeleton","StepLegend","step_legend_toConsumableArray","step_legend_defineProperty","lowerBounds","upperBounds","step_legend_get","step_legend_getPrototypeOf","stepData","renderStepItem","_context$measurement3","_item$icon2","_positionConfig$posit","PADDING","BORDER","MARGIN","TITLE_TEMPLATE_NOT_ALLOWED_TAGS","LEGEND_TYPE_MAP","constants_defineProperty","_LEGEND_TYPE_MAP","HORIZONTAL_CENTER","VERTICAL_CENTER","share","operators_construct","operators_toConsumableArray","strings","htmlCode","expLn","frag","createDocumentFragment","treeShakeNode","nodeType","Node","ELEMENT_NODE","tagName","_didIteratorError","_iteratorError","_step","_iterator","childNodes","err","canvasIterator","canvases","iteratorFn","cFn","canvas","visualGroup","_throwback","actionModel","ActionModel","action_model_classCallCheck","_registrableComponents","registerPropagationBehaviourMap","dissociateBehaviour","_len5","_key5","dissociateSideEffect","policy","registrableComponents","mergedPolicy","aliases","comp","*","propagationPayload","propagationCanvas","crossInteractionPolicy","TITLE_CONFIG","SUB_TITLE_CONFIG","maxLines","LAYOUT_ALIGN","canvas_local_options_defineProperty","_localOptions","prevDm","sanitizedDm","canvasOptions","_canvasOptions","titleConfig","subtitle","sub","subtitleConfig","LayoutComponent","layoutComponent_classCallCheck","_boundBox","_renderAt","_alignWith","_alignment","_componentName","_className","DummyComponent","newDimensions","renderAt","component","componentName","pagination","scrollBar","thickness","speed","legend","minHeight","minCharacters","verticalAlign","collapse","invalidValues","DEFAULT_WIDTH","DEFAULT_HEIGHT","DEFAULT_CLASS_NAME","NODE_PREFIX","DefinitionModel","definitionModel_classCallCheck","_host","host","_cut","cut","_ratioWeight","ratioWeight","_preferred","preferred","_lanes","lanes","_remainingHeight","_remainingWidth","remainingHeight","remainingWidth","getNodeId","_uid","yExtraSpace","smallestHeight","getCutType","smallestExtraHeightHorizontally","MAX_SAFE_INTEGER","containerHeight","hostHeight","xExtraSpace","smallestWidth","smallestExtraWidthVertically","containerWidth","hostWidth","createPlaceHolderComponent","placeComponent","definitionModel","leftOvercomponentRationWidth","isPreferred","isGridComponent","componentRatioWidth","leftHeight","leftWidth","_component$getLogical","componentHeight","componentWidth","firstLaneConfig","firstLane","secondLane","tree_classCallCheck","_parentCut","_this$_children","tree_toConsumableArray","parentCut","bound","nodeconfig","searchNode","childNode","nodeId","deleteSearchNode","LayoutModel","measurements","layout_model_classCallCheck","_measurements","_root","createTree","setBoundBox","addChildren","lane","allocateBoundingBox","totalWeight","carry","lastSibling","ratio","setHostSpatialConfig","setHostPosition","negotiateDimension","alteredDim","nonAlteredDim","cumultiveExtraSpaceAmt","childrenLength","extraSpaceAmt","computePosition","determineBoundBox","bb","_lastSibling$boundBox","_top","_left","_height","_width","_instance$parent$boun","setSpatialConfig","Utils","utils_createClass","isDOMElement","getID","getElement","findContainer","coordinate","removeDiv","divId","DataPoint","data_point_classCallCheck","DataParser","data_parser_classCallCheck","data_parser_createClass","defaultDataPointLogic","nodepoints","getnodePoints","datapoint","HTMLDataAdapter","_DataParser","html_data_classCallCheck","html_data_possibleConstructorReturn","html_data_getPrototypeOf","html_data_inherits","html_data_createClass","getCoordinates","html_data_get","Renderer","renderer_classCallCheck","renderer_createClass","initRenderer","__logicalTree","HTMLRenderer","_Renderer","html_renderer_classCallCheck","html_renderer_possibleConstructorReturn","html_renderer_getPrototypeOf","_coordinates","html_renderer_inherits","html_renderer_createClass","createhtml","mainDiv","html_renderer_get","parentDiv","createAndCustomiseParent","hasHost","createAndPositionDiv","html_renderer_objectSpread","div","coordinates","findNode","nodeID","renderer","renderHTML","DrawingManager","drawing_manager_classCallCheck","_componentMap","componentMap","_layoutClassName","layoutClassName","_renderer","drawing_manager_createClass","drawLayout","resolveAligment","componentData","alignWith","newNodeConfig","refNode","drawComponent","DefinitionManager","definition_manager_classCallCheck","_prioritySequence","_totalHeight","_totalWidth","_targetComponentMap","prepareTargetComponentMap","targetComponentMap","canvasComponent","tempDefModel","componentRef","getComponent","placeGridComponent","gridComponents","iscolumnPreffered","_placeComponent","rowpreffred","LayoutDef","layout_def_classCallCheck","_layoutDefinition","layout_def_createClass","addComponent","layoutDefinition","addMultipleComponent","componentArray","sanitizedDefinition","hostObj","hostID","childHost","resetComponentMap","LayoutManager","layout_manager_classCallCheck","_dimension","_skeletonType","skeletonType","_layoutDef","_drawingManager","_rootNodeID","con","resetNode","updateNode","compute","_layout","calLayOutDef","_context$dimension","layoutDef","prioritySequence","generateConfigModel","negotiate","broadcast","layoutComponents","componentArr","compo","removeElement","elemID","setupChangeListener","allOptions","_allOptions","canvas_helper_toConsumableArray","nameSpaceProps","equalityChecker","option","updateChecker","dispatchProps","_cachedProps","notifyAnimationEnd","centerMatrix","layout","viewInfo","viewMatricesInfo","promises","cellArr","lifeCycle","animDonePromises","animationDone","applyInteractionPolicy","interactionPolicy","_interactionPolicy","_crossInteractionPolicy","unitFireBolt","changeBehaviourStateOnPropagation","changeSideEffectStateOnPropagation","createLayoutManager","src_options","minUnitWidth","minUnitHeight","oldConf","fixScrollBarConfig","VIEW_INDEX","ROW_MATRIX_INDEX","2","COLUMN_MATRIX_INDEX","HEIGHT","ROW_ROOT","COLUMN_ROOT","VERTICAL","HORIZONTAL","GenericLayout","generic_layout_classCallCheck","_matrices","_centerMatrix","_mountPoint","DEFAULT_CONFIGURATION","grid_layout_defaults_defineProperty","_DEFAULT_CONFIGURATIO","_FieldNames$BORDER","DEFAULT_MEASUREMENTS","_DEFAULT_MEASUREMENTS","findInPage","page","combineMatrices","isTransposed","joinedMatrix","utils_toConsumableArray","rowData","computeLogicalSpace","maxMeasures","_config$isTransposed","unitMeasures","_getMeasureInfo","getMeasureInfo","firstMeasure","secondMeasure","minMeasures","getMinMeasures","_logicalSpace","utils_defineProperty","valueItem","maxMeasure","firstMeasureValue","secondMeasureValue","valueArray","_item$space","fMeasure","sMeasure","minSecondMeasure","createMatrixEachLevel","_arr$i","extraCellsRemover","beg","distribution","extraCellLengths","VisualMatrix","visual_matrix_classCallCheck","_lastLevelKey","_primaryMatrix","_secondaryMatrix","_maxMeasures","_availableSpace","_layoutMatrix","_tree","_createTree2","matrixTree","lastLevelKey","layoutMatrix","primaryMatrix","secondaryMatrix","breakPage","primaryMatrixLength","newMatrix","keyLength","heightMeasures","populateMaxMeasures","widthMeasures","calculateDepth","viewableMatrix","createViewPortMatrix","viewableMeasures","redistributeSpaces","childDepth","createMatrixInstances","matrixInfo","breakPointer","_breakPointer","brokenMatrix","breakMatrix","nextLevel","removeExtraCells","RowVisualMatrix","row_matrix_classCallCheck","row_matrix_possibleConstructorReturn","row_matrix_getPrototypeOf","maxHeights","maxWidths","matrixInst","cellDimOptions","matrixIndex","_this2$getCellDimensi","getCellDimensions","widths","rowHeights","columnWidths","primary","secondary","begCellLen","endCellLen","remainingAvailWidth","cWidths","conditions","maxPrioritySpace","availableWidth","currentWidth","prioritySpace","logicalWidths","getPriorityDistribution","mWidth","mHeight","redistributeViewSpaces","computeViewableSpaces","rHeights","gutter","spaceTakenByColumn","spaces","getDistributedHeight","heightWithoutGutter","distSum","gutterSum","availableHeight","colLen","distHeight","borderWidth","colHeight","colWidth","heights","ColumnVisualMatrix","column_matrix_classCallCheck","column_matrix_possibleConstructorReturn","column_matrix_getPrototypeOf","heightDist","divider","spaceTakenByRow","getDistributedWidth","layoutConfig","distWidth","rowLen","oldLogicalSpace","heightDistribution","getMatrixMeasurement","setViewSpaces","pointerType","viewSpaces","pointer","computations_defineProperty","paginationDetailsMap","scrollType","paginationMeasureGetter","relatedMaxMeasure","getMatrixMeasureForPagination","measureDetails","actualMeasure","scrollInfo","getMatrixHeightDetails","columnMatrixWidth","_getHeightRequiredByC","getHeightRequiredByColMatrix","maxColumnMatrixHeight","columnViewSpace","getViewableSpaces","columnPointer","columnMatrixHeight","maxHeightAvailableForRowMatrix","rowMatrixHeight","bufferCondition","isScroll","getActualBufferFromConfig","computations_slicedToArray","getBufferFromCondition","currentBufferType","horizontalBuffer","verticalBuffer","computeLayoutMeasurements","_getMatrixWidthDetail","getMatrixWidthDetails","_layout$config3","rowMatrixWidth","maxRowMatrixWidth","maxWidthAvailableForColumnMatrix","_getMatrixHeightDetai","_getActualBufferFromC","rowViewableSpaces","columnViewableSpaces","setValueMatrixMeasurements","computations_toConsumableArray","rowWidthsPrimary","rowWidthsSecondary","columnHeightsPrimary","columnHeightsSecondary","measureSum","total","GridLayout","layout_classCallCheck","layout_possibleConstructorReturn","layout_getPrototypeOf","_layoutId","_viewInfo","defaultViewInfo","_scrollInfo","generateVisualMatrices","begColCells","endColCells","gutterSpace","layout_helper_slicedToArray","_center","_bottom","layout_helper_toConsumableArray","RowMatrix","ColumnMatrix","layout_get","_computeLayoutMeasure","setViewInformation","pageNumber","pageType","totalPages","layout_defineProperty","renderGrid","currentPage","maxRowHeight","maxColWidth","rowPointer","getViewMatrices","rowMatrices","getViewableMatrices","columnMatrices","centralMatrixPointer","rowMatrixLen","columnMatrixLen","rowPages","columnPages","layoutDimensions","getViewMeasurements","_layout$config","rowSpaces","colSpaces","rightWidth","topHeight","bottomHeight","centerHeight","centerWidth","viewWidth","viewHeight","actualCenterMeasures","totalMeasures","unitHeights","unitWidths","borderMap","border_helper_defineProperty","_borderMap","specificBorderApplier","borderTypes","showBorders","borderInfo","borderType","applySpecificBorder","applyBorders","borderApplierFn","borderApplier","borderMapVal","orderMaker","nestByStack","updateArr","optionalParams","currStack","prevStack","arrVal","stackVal","currElemIndex","newElem","arrElem","returnArr","spanCalculator","isNull","maskCreator","_nestByStack","viewMatrix","hierarchy","_nestByStack2","spanGenerator","spans","ridx","currSpan","getOrder","isReverse","matrixSpanGeneratorMap","span_maker_defineProperty","_matrixSpanGeneratorM","orderGetter","viewMatrixMaker","spanMaker","matrixSpanGenerator","spanApplier","cellCounter","spaceAllocationDueToSpan","cumulativeWidth","spanApplierMap","_spanApplierMap","TransactionSupport","INTERFACE_IMPl","CLASSPREFIX","HEADER","DATA","AXES","FACET_BY_FIELDS","FIELDS","TRANSFORM","LAYER_DEF","CONFIG","DETAIL_FIELDS","AXIS","GEOM","BLANK","SimpleCell","simple_cell_classCallCheck","enums_defaults_defineProperty","_DEFAULT_CONFIG","_CONSTANTS$MARGIN","CONSTANTS","DEFAULT_PROPS","minSpacing","src_props_defineProperty","visual_cell_src_props_PROPS","caption","smartText","axis_cell_classCallCheck","axis_cell_possibleConstructorReturn","axis_cell_getPrototypeOf","_availHeight","_availWidth","axis_cell_assertThisInitialized","computeAxisSpace","logicalWidth","logicalHeight","spaceFixer","_axis$getLogicalSpace","actualWidth","actualHeight","_axis$config2","wrapperDiv","blank_cell_classCallCheck","blank_cell_possibleConstructorReturn","blank_cell_getPrototypeOf","blank_cell_assertThisInitialized","setSmartText","_context$minSpacing","minHeightSpace","minWidthSpace","paddedHeight","paddedWidth","text_cell_classCallCheck","text_cell_possibleConstructorReturn","text_cell_getPrototypeOf","text_cell_assertThisInitialized","computeTextSpace","_context$minSpacing2","minText","_minTextSpace","smartSpace","textAlign","vAlign","_this$smartText","translation","middle","geom_cell_classCallCheck","geom_cell_possibleConstructorReturn","geom_cell_getPrototypeOf","_unit","_datamodel","_facetByFields","_transform","_caption","geom_cell_assertThisInitialized","lockModel","unlockModel","captionSpace","computeGeomSpace","getCaptionSpace","captionDom","DEFAULT_PLACEHOLDERS","src_defaults_defineProperty","_DEFAULT_PLACEHOLDERS","resolveTitleSubTitleContent","rawContent","escapeHTML","htmlEscapes","&","<",">","\"","'","/","createHeading","prevCell","cellType","_minTickDiff","legendInitializer","legendConfig","prevLegends","legends","headerHeight","legendInfo","legendCreator","LegendCls","dataset","scaleProps","_scale$config","stepMapper","dataInfo","legendMeasures","titleText","setLegendMeasures","MuzeComponent","_this$boundBox","HeaderComponent","headerComponent_classCallCheck","headerComponent_possibleConstructorReturn","headerComponent_getPrototypeOf","setParams","cont","renderHeader","LegendComponent","legendComponent_classCallCheck","legendComponent_possibleConstructorReturn","legendComponent_getPrototypeOf","legendSpace","sectionComponents","_this$params$config","legendMount","legWidth","legHeight","sections","currHeight","currWidth","leg","legendHeight","legendWidth","renderLegend","_defaultAlignmentHelp","defaultAlignmentHelper","arrowSizeMap","getUnitPositions","totalLength","viewLength","currentLen","unitPosition","createScrollBarArrow","createScrollBarRect","mover","applyScrollMouseDownAction","moverRect","scrollMaker","_mover$node$getBoundi","_rect$node$getBoundin","rectX","rectY","changeMoverPosition","registerListenerOnArrow","arrowType","_components","isTouchDevice","applyMoverDrag","moverStartPos","rectStartPos","distanceMoved","actualPosition","pageXOffset","pageYOffset","applyRectClick","emptyScrollAreaClick","manager","unitPositions","ScrollMaker","scroll_maker_classCallCheck","_attachedScrollAction","_unitPositions","scroll_maker_createClass","scrollTo","scrollDeltaTo","createScroll","scrollBarContainer","scrollContainerHelper","attachScrollAction","externalScrollAction","detachScrollAction","scrollMakerMap","_ScrollMaker","HorizontalScrollMaker","horizontal_scroll_maker_classCallCheck","horizontal_scroll_maker_possibleConstructorReturn","horizontal_scroll_maker_getPrototypeOf","horizontal_scroll_maker_inherits","horizontal_scroll_maker_createClass","horizontal_scroll_maker_get","prevArrow","nextArrow","_this$logicalSpace","scrollBarWithouArrowLength","_scrollBarWithouArrowLength","_this$_components$mov","positionAdjuster","newPosition","currentPos","_this$_components$mov2","moverPos","movedViewLength","performAttachedScrollFunction","delta","_this$_components$mov3","scrollPercentage","movement","VerticalScrollMaker","vertical_scroll_maker_classCallCheck","vertical_scroll_maker_possibleConstructorReturn","vertical_scroll_maker_getPrototypeOf","vertical_scroll_maker_inherits","vertical_scroll_maker_createClass","vertical_scroll_maker_get","ScrollComponent","scroll_component_classCallCheck","scrollBarComponentConfig","scroll_component_possibleConstructorReturn","scroll_component_getPrototypeOf","unitIndex","sanitizedUnitIndex","externalAction","MatrixComponent","matrix_component_classCallCheck","matrix_component_possibleConstructorReturn","matrix_component_getPrototypeOf","_this$params$config$s","containerForMatrix","applyScroll","_cellSpanMaker","cellSpanMaker","_matrixSpanGenerator","renderTable","applySpans","applier","renderPlaceholders","renderMatrix","applyScrollAction","scollDistance","GridComponent","grid_component_classCallCheck","grid_component_possibleConstructorReturn","grid_component_getPrototypeOf","_this$component$viewI","matrixDim","matrixName","updateWrapper","matrixWrapper","allComponents","_scrollBarManager","wheelDeltaX","wheelDeltaY","scrollBarManager","triggerScrollBarAction","movedView","scrollActionApplier","_this$component$0$0$b","sanitizeGrid","headerMap","headerCell","configType","createHeaderWrapper","headerType","layoutManager","renderDetails","_headerMap$headerType","headerConfig","component_wrapper_maker_objectSpread","wrapperParams","existingComponent","createScrollBarWrapper","scrollBarType","grid","_scrollBarMap$scrollB","scrollBarMap","layoutBasedMeasure","viewMeasure","rowAlign","colAlign","componentWrapperMaker","createLegendWrapper","legendWrapper","gridLayoutWrapper","verticalScrollBar","horizontalScrollBar","ScrollManager","scroll_manager_classCallCheck","_scrollBarComponents","_attachedComponents","scroll_manager_createClass","scrollBarComponents","attachedComponents","performScrollAction","getRenderDetails","_mount$getBoundingCli","heightAttr","widthAttr","visGroup","_visGroup$placeholder","legendPosition","layoutArrangement","arrangeComponents","_titleLayouts","titleLayouts","component_resolver_defineProperty","legendLayouts","titlePosition","subtitlePosition","availableHeightForCanvas","availableWidthForCanvas","_createHeaders","canvasHeight","canvasWidth","isSubtitle","headerOptions","_createHeading","createLegend","getLegendSpace","mountSpace","componentIndexes","componentNames","3","4","5","renderLayout","_layoutManager","gridLayout","compWrappers","componentWrappers","gridWrapper","createScrollManager","horizontalScrollWrapper","verticalScrollWrapper","hScrollBar","vScrollBar","componentWrapper","deleteElementName","deleteElementId","removeComponent","registerComponents","attachScrollListener","defaultInteractionPolicy","isMeasure","group_firebolt_toConsumableArray","getFieldsFromChannel","colDim","unitColFacets","equals","unitRowFacets","propagateWith","defaultCrossInteractionPolicy","propagationCanvasAlias","propagationUnit","GroupFireBolt","group_firebolt_classCallCheck","group_firebolt_possibleConstructorReturn","group_firebolt_getPrototypeOf","behaviouralAction","validFields","APP_INITIAL_STATE","app","Canvas","globalDependencies","canvas_classCallCheck","canvas_possibleConstructorReturn","canvas_getPrototypeOf","canvas_defineProperty","canvas_assertThisInitialized","initedComponents","initCanvas","createGroupState","_VisualGroup$getState2","canvas_helper_slicedToArray","localState","register","prepareLayout","triggerReflow","setLayoutInfForUnits","getBoundBox","getRootNodeId","setLabelRotationForAxes","rotationVal","getAxes","initialSettings","regEntry","COMPONENTS","SUBREGISTRIES","regObj","globalCache","defaultRegistry","overrideRegistryDefinitions","overrideRegistry","muze","_transactor2","muze_slicedToArray","env","globalStore","componentSubRegistryDef","settings","withSettings","enableChainedTransaction","transactionModel","transactionEndpoint","transactionItems","Smartlabel","SideEffects","standards","Behaviours","pkg","operators","utils","lookupWhat","lookupDetails","lookupTarget","deps"],"mappings":"CAAA,SAAAA,iCAAAC,KAAAC,SACA,iBAAAC,SAAA,iBAAAC,OACAA,OAAAD,QAAAD,UACA,mBAAAG,eAAAC,IACAD,OAAA,UAAAH,SACA,iBAAAC,QACAA,QAAA,KAAAD,UAEAD,KAAA,KAAAC,UARA,CASCK,OAAA,WACD,yBCTA,IAAAC,oBAGA,SAAAC,oBAAAC,UAGA,GAAAF,iBAAAE,UACA,OAAAF,iBAAAE,UAAAP,QAGA,IAAAC,OAAAI,iBAAAE,WACAC,EAAAD,SACAE,GAAA,EACAT,YAUA,OANAU,QAAAH,UAAAI,KAAAV,OAAAD,QAAAC,cAAAD,QAAAM,qBAGAL,OAAAQ,GAAA,EAGAR,OAAAD,QA0DA,OArDAM,oBAAAM,EAAAF,QAGAJ,oBAAAO,EAAAR,iBAGAC,oBAAAQ,EAAA,SAAAd,QAAAe,KAAAC,QACAV,oBAAAW,EAAAjB,QAAAe,OACAG,OAAAC,eAAAnB,QAAAe,MAA0CK,YAAA,EAAAC,IAAAL,UAK1CV,oBAAAgB,EAAA,SAAAtB,SACA,oBAAAuB,eAAAC,aACAN,OAAAC,eAAAnB,QAAAuB,OAAAC,aAAwDC,MAAA,WAExDP,OAAAC,eAAAnB,QAAA,cAAiDyB,OAAA,KAQjDnB,oBAAAoB,EAAA,SAAAD,MAAAE,MAEA,GADA,EAAAA,OAAAF,MAAAnB,oBAAAmB,QACA,EAAAE,KAAA,OAAAF,MACA,KAAAE,MAAA,iBAAAF,oBAAAG,WAAA,OAAAH,MACA,IAAAI,GAAAX,OAAAY,OAAA,MAGA,GAFAxB,oBAAAgB,EAAAO,IACAX,OAAAC,eAAAU,GAAA,WAAyCT,YAAA,EAAAK,cACzC,EAAAE,MAAA,iBAAAF,MAAA,QAAAM,OAAAN,MAAAnB,oBAAAQ,EAAAe,GAAAE,IAAA,SAAAA,KAAgH,OAAAN,MAAAM,MAAqBC,KAAA,KAAAD,MACrI,OAAAF,IAIAvB,oBAAA2B,EAAA,SAAAhC,QACA,IAAAe,OAAAf,eAAA2B,WACA,SAAAM,aAA2B,OAAAjC,OAAA,SAC3B,SAAAkC,mBAAiC,OAAAlC,QAEjC,OADAK,oBAAAQ,EAAAE,OAAA,IAAAA,QACAA,QAIAV,oBAAAW,EAAA,SAAAmB,OAAAC,UAAsD,OAAAnB,OAAAoB,UAAAC,eAAA5B,KAAAyB,OAAAC,WAGtD/B,oBAAAkC,EAAA,GAIAlC,wCAAAmC,EAAA,sbClFA,SAAAC,EAAAhB,GACA,UAAAiB,QAAA3C,UAAA,UAAA2C,QAAA1C,QACAA,oBAEAC,yRAJA,CASCE,kBACD,gBAAAsC,GCTA,IAAAhB,KAGA,SAAAO,EAAAX,GAGA,GAAAI,EAAAJ,GACA,OAAAI,EAAAJ,GAAAtB,QAGA,IAAA4C,EAAAlB,EAAAJ,IACAd,IACAC,KACAT,YAUA,OANAU,mCAGAT,OAGA2C,EAAA5C,QA0DA,OArDAM,MAGAA,MAGAA,oBACAA,UACAY,2BAA0CE,uBAK1Cd,gBACA,oBAAAiB,eAAAC,aACAN,4CAAwDO,iBAExDP,sCAAiDO,YAQjDnB,kBAEA,GADA,EAAAoB,IAAAgB,EAAAT,EAAAS,IACA,EAAAhB,EAAA,OAAAgB,EACA,KAAAhB,GAAA,UAAAiB,QAAAD,SAAAd,WAAA,OAAAc,EACA,IAAApB,EAAAJ,OAAAY,OAAA,MAGA,GAFAxB,OACAY,mCAAyCE,wBACzC,EAAAM,GAAA,iBAAAgB,EAAA,QAAAE,KAAAF,EAAAT,EAAAnB,EAAAQ,EAAAsB,EAAA,SAAAlB,GAAgH,OAAAgB,EAAAhB,IAAqBM,cACrI,OAAAV,GAIAhB,gBACA,IAAAoB,EAAAgB,KAAAd,WACA,WAA2B,OAAAc,EAAAG,SAC3B,WAAiC,OAAAH,GAEjC,OADApC,aACAoB,GAIApB,kBAAsD,OAAAY,OAAAoB,UAAAC,eAAA5B,KAAA+B,EAAAhB,IAGtDpB,OAIA2B,IAAAQ,EAAA,GDxEA,ECwEA,SAAAC,KAAA1C,SAAAe,KAAA,YAAA+B,YAAA,4DAAAC,SAAA,wCAAAC,QAAA,QAAAC,QAAA,MAAAC,KAAA,oBAAAC,OAAA,kCAAAC,UAAA,uGAAAC,YAAAC,KAAA,MAAAC,IAAA,6CAAAC,eAAAzC,KAAA,gBAAA0C,MAAA,qBAAA1C,KAAA,iBAAA0C,MAAA,uBAAA1C,KAAA,aAAA0C,MAAA,oBAAAF,IAAA,sBAAAxC,KAAA,oBAAA0C,MAAA,qBAAAC,cAAAC,SAAA,UAAAC,iBAAAC,YAAA,SAAAC,aAAA,UAAAC,eAAA,QAAAC,eAAA,SAAAC,iCAAA,UAAAC,mBAAA,SAAAC,sBAAA,UAAAC,oBAAA,UAAAC,KAAA,QAAAC,YAAA,SAAAC,OAAA,SAAAC,uBAAA,SAAAC,uBAAA,QAAAC,yBAAA,QAAAC,sBAAA,QAAAC,+BAAA,SAAAC,MAAA,QAAAC,UAAA,SAAAC,MAAA,QAAAC,aAAA,QAAAC,wBAAA,QAAAC,mCAAA,SAAAC,cAAA,QAAAC,sBAAA,SAAAC,gBAAA,QAAAC,OAAA,SAAAC,MAAA,QAAAC,gBAAA,QAAAC,oBAAA,QAAAC,QAAA,UAAAC,cAAA,SAAAC,qBAAA,UAAAC,SAAAC,KAAA,6BAAAC,GAAA,4BAAAC,IAAA,kEAAAC,MAAA,4BAAAC,MAAA,8EAAAC,KAAA,eAAAC,cAAA,uBAAAC,KAAA,oEAAA3D,EAAAhB,EAAAO,GClFA,IAAMqE,EAAYhG,EAAQ,GAE1BL,EAAOD,QAAUsG,EAAUzD,QAAUyD,EAAUzD,QAAUyD,qxBCKzD,IAOeC,GANXC,UAAW,WACXC,QAAS,SACTC,QAAS,SACTC,KAAM,QCEKC,GANXC,YAAa,cACbC,SAAU,WACVC,IAAK,MACLC,OAAQ,UCAGC,GAHXC,WAAY,cCKDC,GAJXC,QAAS,UACTC,UAAW,aCGAC,GALXC,OAAQ,SACRC,QAAS,UACTC,IAAK,OCQMC,GAVXC,IAAK,MACLC,IAAK,MACLC,IAAK,MACLC,IAAK,MACLC,MAAO,QACPC,KAAM,OACNC,MAAO,QACPC,IAAK,OCRT,SAASC,EAAqBC,GAC1B,OAAIA,aAAgBC,KACTD,EAGJ,IAAIC,KAAKD,GASpB,SAASE,EAAKrG,GACV,OAAQA,EAAI,GAAL,IAAgBA,EAAOA,EA8BP,SAASsG,EAAmBC,GACnDC,KAAKD,OAASA,EACdC,KAAKC,gBACLD,KAAKE,kBAfTC,OAAOC,OAAS,SAAUC,GACtB,OAAOA,EAAKC,QAAQ,2BAA4B,SAkBpDR,EAAkBS,aAAe,IAIjCT,EAAkBU,yBACdC,KAAM,EACNC,MAAO,EACPC,IAAK,EACLC,KAAM,EACNC,OAAQ,EACRC,OAAQ,EACRC,YAAa,GAUjBjB,EAAkBkB,oBAAsB,SAAUC,GAC9C,OAAO,SAAUC,GACb,IAAIC,EACJ,OAAIC,SAASD,EAAYE,SAASH,EAAK,KAC5BC,EAGJF,IAYfnB,EAAkBwB,mBAAqB,SAAUC,EAAON,GACpD,OAAO,SAACC,GACJ,IACIlJ,EADAD,SAGJ,IAAKmJ,EAAO,OAAOD,EAEnB,IAAMO,EAAON,EAAIO,cAEjB,IAAK1J,EAAI,EAAGC,EAAIuJ,EAAMG,OAAQ3J,EAAIC,EAAGD,IACjC,GAAIwJ,EAAMxJ,GAAG0J,gBAAkBD,EAC3B,OAAOzJ,EAIf,gBAAIA,EACOkJ,EAEJ,OAqBfnB,EAAkB6B,oBAAsB,WACpC,IAAMC,GACFC,OACI,MACA,MACA,MACA,MACA,MACA,MACA,OAEJC,MACI,SACA,SACA,UACA,YACA,WACA,SACA,aAGFC,GACFF,OACI,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,OAEJC,MACI,UACA,WACA,QACA,QACA,MACA,OACA,OACA,SACA,YACA,UACA,WACA,aAsPR,OAjPIE,GAEI1J,KAAM,IACN2J,MAAO,EACPC,QAJD,SAAAA,UAIc,MAAO,UACpBC,OAAQrC,EAAkBkB,sBAC1BoB,UAND,SAAAA,UAMYlB,GAGP,OAFUxB,EAAoBwB,GAErBmB,WAAWC,aAG5BtK,GAEIM,KAAM,IACN2J,MAAO,EACPC,QAJD,SAAAA,UAIc,MAAO,UACpBC,OAAQrC,EAAkBkB,sBAC1BoB,UAND,SAAAA,UAMYlB,GACP,IACMqB,EADI7C,EAAoBwB,GACdmB,WAAa,GAE7B,OAAkB,IAAVE,EAAc,GAAKA,GAAOD,aAG1CvI,GAEIzB,KAAM,IACN2J,MAAO,EACPC,QAJD,SAAAA,UAIc,MAAO,WACpBC,OAAQ,SAAAA,OAACjB,GACL,OAAIA,EACOA,EAAIO,cAER,MAEXW,UAAW,SAAAA,UAAClB,GAIR,OAHUxB,EAAoBwB,GACdmB,WAEA,GAAK,KAAO,OAGpCG,GAEIlK,KAAM,IACN2J,MAAO,EACPC,QAJD,SAAAA,UAIc,MAAO,WACpBC,OAAQ,SAAAA,OAACjB,GACL,OAAIA,EACOA,EAAIO,cAER,MAEXW,UAAW,SAAAA,UAAClB,GAIR,OAHUxB,EAAoBwB,GACdmB,WAEA,GAAK,KAAO,OAGpCI,GAEInK,KAAM,IACN2J,MAAO,EACPC,QAJD,SAAAA,UAIc,MAAO,UACpBC,OAAQrC,EAAkBkB,sBAC1BoB,UAND,SAAAA,UAMYlB,GAIP,OAAOrB,EAHGH,EAAoBwB,GACfwB,gBAKvBC,GAEIrK,KAAM,IACN2J,MAAO,EACPC,QAJD,SAAAA,UAIc,MAAO,UACpBC,OAAQrC,EAAkBkB,sBAC1BoB,UAND,SAAAA,UAMYlB,GAIP,OAAOrB,EAHGH,EAAoBwB,GACZ0B,gBAK1BC,GAEIvK,KAAM,IACN2J,MAAO,EACPC,QAJD,SAAAA,UAIc,MAAO,UACpBC,OAAQrC,EAAkBkB,sBAC1BoB,UAND,SAAAA,UAMYlB,GAIP,OAHUxB,EAAoBwB,GACjB4B,kBAEHR,aAGlBnI,GAEI7B,KAAM,IACN2J,MAAO,EACPC,QAJD,SAAAA,UAIc,UAAWN,EAAQC,MAAMkB,KAAK,KAA9B,KACbZ,OAAQrC,EAAkBwB,mBAAmBM,EAAQC,OACrDO,UAND,SAAAA,UAMYlB,GACP,IACM8B,EADItD,EAAoBwB,GAChB+B,SAEd,OAAQrB,EAAQC,MAAMmB,GAAMV,aAGpCY,GAEI5K,KAAM,IACN2J,MAAO,EACPC,QAJD,SAAAA,UAIc,UAAWN,EAAQE,KAAKiB,KAAK,KAA7B,KACbZ,OAAQrC,EAAkBwB,mBAAmBM,EAAQE,MACrDM,UAND,SAAAA,UAMYlB,GACP,IACM8B,EADItD,EAAoBwB,GAChB+B,SAEd,OAAQrB,EAAQE,KAAKkB,GAAMV,aAGnCrI,GAEI3B,KAAM,IACN2J,MAAO,EACPC,QAJD,SAAAA,UAIc,MAAO,UACpBC,OAAQrC,EAAkBkB,sBAC1BoB,UAND,SAAAA,UAMYlB,GAIP,OAHUxB,EAAoBwB,GAChBiC,UAEHb,aAGnBjK,GAEIC,KAAM,IACN2J,MAAO,EACPC,QAJD,SAAAA,UAIc,MAAO,UACpBC,OAAQrC,EAAkBkB,sBAC1BoB,UAND,SAAAA,UAMYlB,GAIP,OAAOrB,EAHGH,EAAoBwB,GAChBiC,aAKtBC,GAEI9K,KAAM,IACN2J,MAAO,EACPC,QAJD,SAAAA,UAIc,UAAWH,EAAUF,MAAMkB,KAAK,KAAhC,KACbZ,OAAQrC,EAAkBwB,mBAAmBS,EAAUF,OACvDO,UAND,SAAAA,UAMYlB,GACP,IACMmC,EADI3D,EAAoBwB,GACdoC,WAEhB,OAAQvB,EAAUF,MAAMwB,GAAQf,aAGxCiB,GAEIjL,KAAM,IACN2J,MAAO,EACPC,QAJD,SAAAA,UAIc,UAAWH,EAAUD,KAAKiB,KAAK,KAA/B,KACbZ,OAAQrC,EAAkBwB,mBAAmBS,EAAUD,MACvDM,UAND,SAAAA,UAMYlB,GACP,IACMmC,EADI3D,EAAoBwB,GACdoC,WAEhB,OAAQvB,EAAUD,KAAKuB,GAAQf,aAGvCnK,GAEIG,KAAM,IACN2J,MAAO,EACPC,QAJD,SAAAA,UAIc,MAAO,UACpBC,OALD,SAAAA,OAKSjB,GAAO,OAAOpB,wBAAwCoB,GAAO,GACrEkB,UAND,SAAAA,UAMYlB,GAIP,OAAOrB,EAHGH,EAAoBwB,GACdoC,WAEG,KAG3BE,GAEIlL,KAAM,IACN2J,MAAO,EACPC,QAJD,SAAAA,UAIc,MAAO,YACpBC,OALD,SAAAA,OAKSjB,GACJ,IAAIuC,SACJ,GAAIvC,EAAK,CACL,IAAMlJ,EAAIkJ,EAAIQ,OACdR,EAAMA,EAAIwC,UAAU1L,EAAI,EAAGA,GAE/B,IAAImJ,EAAYrB,wBAAwCoB,GACpDyC,EAAc,IAAI/D,KAClBgE,EAAcC,KAAKC,MAAOH,EAAYI,cAAiB,KAO3D,OAHIrE,EAFJ+D,KAAYG,EAAczC,GAEM4C,cAAgBJ,EAAYI,gBACxDN,MAAYG,EAAc,GAAIzC,GAE3BzB,EAAoB+D,GAAQM,eAEvC3B,UAtBD,SAAAA,UAsBYlB,GACP,IACI8C,EADMtE,EAAoBwB,GACjB6C,cAAczB,WACvBtK,SAOJ,OALIgM,IACAhM,EAAIgM,EAAKtC,OACTsC,EAAOA,EAAKN,UAAU1L,EAAI,EAAGA,IAG1BgM,IAGfC,GAEI3L,KAAM,IACN2J,MAAO,EACPC,QAJD,SAAAA,UAIc,MAAO,YACpBC,OAAQrC,EAAkBkB,sBAC1BoB,UAND,SAAAA,UAMYlB,GAIP,OAHUxB,EAAoBwB,GACf6C,cAAczB,eAgB7CxC,EAAkBoE,oBAAsB,WACpC,IAAMC,EAAcrE,EAAkB6B,sBAEtC,OACIf,KAAMuD,EAAYnC,EAClBoC,QAASD,EAAYnM,EACrBqM,eAAgBF,EAAYpK,EAC5BuK,eAAgBH,EAAY3B,EAC5B3B,OAAQsD,EAAY1B,EACpB3B,OAAQqD,EAAYxB,EACpB4B,UAAWJ,EAAYhK,EACvBqK,SAAUL,EAAYjB,EACtBuB,aAAcN,EAAYlK,EAC1ByK,4BAA6BP,EAAY9L,EACzCsM,YAAaR,EAAYf,EACzBwB,WAAYT,EAAYZ,EACxBsB,cAAeV,EAAYhM,EAC3B2M,WAAYX,EAAYX,EACxBuB,UAAWZ,EAAYF,IAW/BnE,EAAkBkF,cAAgB,WAC9B,IAAMb,EAAcrE,EAAkB6B,sBAChCsD,EAAkB,SAAAhM,IAMpB,IALA,IAAIlB,EAAI,EACJmN,SACAC,SACEnN,EAAIoN,UAAK1D,OAER3J,EAAIC,EAAGD,IACVmN,oBAAWnN,SAAXmN,UAAWnN,IACXqN,kBAASrN,SAATqN,UAASrN,MACLoN,EAAcD,GAItB,OAAKC,EAEEA,EAAY,GAAGhD,OAAOgD,EAAY,IAFd,MAK/B,OACI1E,MAAO0D,EAAYX,EAAGW,EAAYF,EAC9BgB,GAEJvE,OAAQyD,EAAYf,EAAGe,EAAYZ,EAAGY,EAAYhM,EAC9C8M,GAEJtE,KAAMwD,EAAYhK,EAAGgK,EAAYjB,EAAGiB,EAAYlK,EAAGkK,EAAY9L,EAC3D4M,GAEJrE,MAAOuD,EAAYnC,EAAGmC,EAAYnM,EAAGmM,EAAYpK,EAAGoK,EAAY3B,EAC5D,SAAU6C,EAAcC,EAAcC,EAAWC,GAC7C,IAAIL,SACAM,SACAC,SACAxE,SAcJ,OAZIoE,IAAiBG,EAAUF,GAAaC,IACJ,OAAhCC,EAAO,GAAGtD,OAAOsD,EAAO,MACxBC,MAGJP,EAAcG,GAEdH,EADOG,GAGOD,EAGbF,GAELjE,EAAMiE,EAAY,GAAGhD,OAAOgD,EAAY,IACpCO,IACAxE,GAAO,IAEJA,GANoB,OASnCL,QAASsD,EAAY1B,EACjBwC,GAEJnE,QAASqD,EAAYxB,EACjBsC,KAUZnF,EAAkB6F,WAAa,SAAU5F,GAQrC,IAPA,IAAM6F,EAAc9F,EAAkBS,aAChC4D,EAAcrE,EAAkB6B,sBAChCkE,EAAgBpN,OAAOqN,KAAK3B,GAC5B4B,KACFhO,SACAiO,UAEIjO,EAAIgI,EAAOkG,QAAQL,EAAa7N,EAAI,KAAO,GAC/CiO,EAAcjG,EAAOhI,EAAI,IACmB,IAAxC8N,EAAcI,QAAQD,IAE1BD,EAAWG,MACPjE,MAAOlK,EACPoO,MAAOH,IAIf,OAAOD,GASXjG,EAAkBsG,SAAW,SAAUzG,EAAMI,GACzC,IAQI/H,EAREqO,EAAQ3G,EAAoBC,GAC5BoG,EAAajG,EAAkB6F,WAAW5F,GAC1CoE,EAAcrE,EAAkB6B,sBAClC2E,EAAeC,OAAOxG,GACpB6F,EAAc9F,EAAkBS,aAClC4F,SACAK,SACAzO,SAGJ,IAAKA,EAAI,EAAGC,EAAI+N,EAAWrE,OAAQ3J,EAAIC,EAAGD,IAEtCyO,EAAerC,EADfgC,EAAQJ,EAAWhO,GAAGoO,OACY/D,UAAUiE,GAC5CC,EAAeA,EAAahG,QAAQ,IAAIH,OAAOyF,EAAcO,EAAO,KAAMK,GAG9E,OAAOF,GAQXxG,EAAkBjG,UAAU4M,MAAQ,SAAUC,EAAeC,GACzD,IAAM3B,EAAgBlF,EAAkBkF,gBAClC/E,EAAWD,KAAK4G,kBAAkBF,GAClCG,EAAa/G,EAAkBU,wBAC/BsG,EAAUH,GAAWA,EAAQG,QAC7BC,KACAC,KACFC,SACAC,SACAC,SACAjG,SACAnJ,SACAqP,SACAC,SACArP,SACAyL,KAEJ,IAAKwD,KAAejC,EAChB,MAAQlL,eAAe5B,KAAK8M,EAAeiC,GAA3C,CAMA,IAJAD,EAAKtF,OAAS,EAEdyF,GADAD,EAAiBlC,EAAciC,IACHK,OAAOJ,EAAexF,OAAS,EAAG,GAAG,GAE5D3J,EAAI,EAAGC,EAAIkP,EAAexF,OAAQ3J,EAAIC,EAAGD,cAE1CmJ,EAAMjB,GADNmH,EAAQF,EAAenP,IACFO,OAGjB0O,EAAKd,KAAK,MAEVc,EAAKd,MAAMkB,EAAOlG,IAM1B,cAFAmG,EAAcF,EAAWI,MAAMvH,KAAMgH,KAEa,OAAhBK,KAA0BP,EACxD,MAGJC,EAAWF,EAAWI,IAAgBI,EAU1C,OAPIN,EAAWrF,QAAU1B,KAAKwH,gBAAgBT,EAAWrF,QAErD+B,EAAOgE,QAAQV,EAAW,GAAI,EAAG,GAEjCtD,EAAOgE,QAAPhE,QAAkBsD,GAGftD,GAQX3D,EAAkBjG,UAAU+M,kBAAoB,SAAUF,GACtD,IAYI1O,EAZE+H,EAASC,KAAKD,OACdoE,EAAcrE,EAAkB6B,sBAChCiE,EAAc9F,EAAkBS,aAChCwF,EAAajG,EAAkB6F,WAAW5F,GAC1C2H,KAEFC,SACAC,SACAC,SACAC,SACAC,SAGAhQ,SAEJgQ,EAAcxB,OAAOxG,GAErB,IAAMiI,EAAWjC,EAAWkC,IAAI,SAAAhO,GAAA,OAAOiO,EAAI/B,QACrCgC,EAAmBpC,EAAWrE,OACpC,IAAK3J,EAAIoQ,EAAmB,EAAGpQ,GAAK,EAAGA,KACnC8P,EAAW9B,EAAWhO,GAAGkK,OAEV,IAAM8F,EAAYrG,OAAS,YAKtCiG,IACAA,EAAsBI,EAAYrG,QAGtCoG,EAAaC,EAAYrE,UAAUmE,EAAW,EAAGF,GACjDI,EAAcA,EAAYrE,UAAU,EAAGmE,EAAW,GAC9C1H,OAAOC,OAAO0H,GACdC,EAAYrE,UAAUiE,EAAqBI,EAAYrG,QAE3DiG,EAAsBE,GAblBF,EAAsBE,EAgB9B,IAAK9P,EAAI,EAAGA,EAAIoQ,EAAkBpQ,IAC9B6P,EAAS7B,EAAWhO,GACpBgQ,EAAcA,EAAYzH,QAAQsF,EAAcgC,EAAOzB,MAAOhC,EAAYyD,EAAOzB,OAAOjE,WAG5F,IAAMkG,EAAgB1B,EAAc2B,MAAM,IAAIlI,OAAO4H,QAGrD,IAFAK,EAAcE,QAETvQ,EAAI,EAAGC,EAAIgQ,EAAStG,OAAQ3J,EAAIC,EAAGD,IACpC2P,EAASM,EAASjQ,IAAMqQ,EAAcrQ,GAE1C,OAAO2P,GAQX5H,EAAkBjG,UAAU0O,cAAgB,SAAU7B,GAClD,IAAI/G,EAAO,KACX,GAAI6I,OAAOpH,SAASsF,GAChB/G,EAAO,IAAIC,KAAK8G,QACb,IAAK1G,KAAKD,QAAUH,KAAK6G,MAAMC,GAClC/G,EAAO,IAAIC,KAAK8G,OAEf,CACD,IAAMzG,EAAWD,KAAKC,SAAWD,KAAKyG,MAAMC,GACxCzG,EAASyB,SACT1B,KAAKE,WAALF,kCAAsBJ,MAAtBI,oIAA8BC,MAC9BN,EAAOK,KAAKE,YAGpB,OAAOP,GAGXG,EAAkBjG,UAAU2N,gBAAkB,SAASiB,GACnD,OAAe,IAARA,GAAazI,KAAKD,OAAOsI,MAAM,QAAQ3G,QASlD5B,EAAkBjG,UAAUuM,SAAW,SAAUrG,EAAQ2G,GACrD,IAAIxG,SAQJ,OANIwG,EACAxG,EAAaF,KAAKE,WAAaF,KAAKuI,cAAc7B,IACzCxG,EAAaF,KAAKE,cAC3BA,EAAaF,KAAKuI,cAAc7B,IAG7B5G,EAAkBsG,SAASlG,EAAYH,ICruBnC,IAAA2I,EAAA,SAAAA,EAACC,GACZ,IAAI5Q,EAAI,EACR,OAAO,WAAe,QAAAyB,EAAA4L,UAAA1D,OAAXkH,EAAWC,MAAArP,GAAAW,EAAA,EAAAA,EAAAX,EAAAW,IAAXyO,EAAWzO,GAAAiL,UAAAjL,GAClByO,EAAOE,QAAQ,SAAC5H,EAAK6H,GACXJ,EAAMI,aAAuBF,QAC/BF,EAAMI,GAAcF,MAAMG,MAAOtH,OAAQ3J,KAE7C4Q,EAAMI,GAAY7C,KAAKhF,KAE3BnJ,wNCdFkR,EAAe,SACfC,EAAgBzQ,OAAOoB,UAAUyI,SACjC6G,EAAc,kBACdC,EAAa,iBAEnB,SAASC,EAAenB,EAAKoB,GAIzB,IAHA,IAAIvR,EAAIuR,EAAU5H,OACd6H,GAAU,EAEPxR,GAAG,CACN,GAAImQ,IAAQoB,EAAUvR,GAElB,OADSA,EAGbA,GAAK,EAGT,OAAOwR,EA2GX,SAASC,EAASC,EAAMC,EAAMC,GAE1B,gBAAWF,EAAP,YAAAtR,EAAOsR,MAASR,aAAuBS,EAAP,YAAAvR,EAAOuR,MAAST,EACzC,eAGAS,EAAP,YAAAvR,EAAOuR,MAAST,GAAyB,OAATS,EACzBD,aAGAA,EAAP,YAAAtR,EAAOsR,MAASR,IAChBQ,EAAOC,aAAgBb,aAnH/B,SAASe,EAAMH,EAAMC,EAAMC,EAAWE,EAAQC,GAC1C,IAAIC,EACAC,EACAC,EACAC,EACAC,EAcJ,GATKL,GAKDD,EAAO3D,KAAKuD,GACZK,EAAO5D,KAAKwD,KALZG,GAAUJ,GACVK,GAAUJ,IAOVA,aAAgBb,MAChB,IAAKkB,EAAO,EAAGA,EAAOL,EAAKhI,OAAQqI,GAAQ,EAAG,CAC1C,IACIC,EAASP,EAAKM,GACdE,EAASP,EAAKK,GAElB,MAAO9P,GACH,mBAGOgQ,EAAP,YAAA9R,EAAO8R,MAAWhB,EACZU,YAAaM,IACfR,EAAKM,GAAQE,IAIF,OAAXD,aAA0BA,EAAP,YAAA7R,EAAO6R,MAAWf,IACrCe,EAASP,EAAKM,GAAQE,aAAkBpB,cAG9B,KADdsB,EAAOd,EAAeY,EAAQH,IAE1BE,EAASP,EAAKM,GAAQF,EAAOM,GAG7BP,EAAMI,EAAQC,EAAQN,EAAWE,EAAQC,SAMrD,IAAKC,KAAQL,EAAM,CACf,IACIM,EAASP,EAAKM,GACdE,EAASP,EAAKK,GAElB,MAAO9P,GACH,SAGJ,GAAe,OAAXgQ,aAA0BA,EAAP,YAAA9R,EAAO8R,MAAWhB,GAKrCiB,EAAMhB,EAAchR,KAAK+R,MACbd,GACO,OAAXa,aAA0BA,EAAP,YAAA7R,EAAO6R,MAAWf,IACrCe,EAASP,EAAKM,QAGJ,KADdI,EAAOd,EAAeY,EAAQH,IAE1BE,EAASP,EAAKM,GAAQF,EAAOM,GAG7BP,EAAMI,EAAQC,EAAQN,EAAWE,EAAQC,IAGxCI,IAAQd,GACE,OAAXY,GAAqBA,aAAkBnB,QACvCmB,EAASP,EAAKM,QAGJ,KADdI,EAAOd,EAAeY,EAAQH,IAE1BE,EAASP,EAAKM,GAAQF,EAAOM,GAG7BP,EAAMI,EAAQC,EAAQN,EAAWE,EAAQC,IAI7CL,EAAKM,GAAQE,MAGhB,CACD,GAAIN,YAAaM,EACb,SAEJR,EAAKM,GAAQE,GAIzB,OAAOR,EApGX,CAqHUA,EAAMC,EAAMC,GACXF,GCnIJ,SAASW,EAASlJ,GACrB,OAAO2H,MAAMuB,QAAQlJ,GA6BlB,SAASmJ,EAAYnJ,GACxB,MAAsB,mBAARA,EAaX,IAAMoJ,EAAc,SAAdA,IAAc,aAAY,IAAI1K,MAAO2K,UAAY1G,KAAK2G,MAAsB,IAAhB3G,KAAK4G,WASvE,SAASC,EAAWC,EAAMC,GAC7B,IAAKR,EAAQO,KAAUP,EAAQQ,GAC3B,OAAOD,IAASC,EAGpB,GAAID,EAAKjJ,SAAWkJ,EAAKlJ,OACrB,SAGJ,IAAK,IAAI3J,EAAI,EAAGA,EAAI4S,EAAKjJ,OAAQ3J,IAC7B,GAAI4S,EAAK5S,KAAO6S,EAAK7S,GACjB,SAIR,SASG,SAAS8S,EAAa3J,GACzB,OAAOA,EASJ,IAAM4J,EAAmB,SAAnBA,EAAoBC,GAC7B,OApEG,SAAmB7J,GACtB,MAAsB,iBAARA,EADX,CAoEU6J,GACFjN,EAAWE,QACXoM,EAAQW,IAASX,EAAQW,EAAK,IAC9BjN,EAAWG,QACXmM,EAAQW,KAA0B,IAAhBA,EAAKrJ,QAlF/B,SAAmBR,GACtB,OAAOA,IAAQzI,OAAOyI,GADnB,CAkFwD6J,EAAK,KACrDjN,EAAWC,UAEf,MChDIiN,GAnDXD,QAEAE,gBAHe,SAAAA,gBAGEC,EAAU5S,GACvB,IAAM6S,EAAS7S,GAAQgS,IA4CvB,OA1CAtK,KAAK+K,KAAKI,IACN7S,KAAM6S,EACNvC,OAAQsC,EAERE,UAJgB,SAAAA,YAKZ,IAAIA,EAAYpL,KAAKqL,iBAQrB,OANKD,IACDA,EAAYpL,KAAKqL,oBACjBrL,KAAK4I,OAAOE,QAAQ,SAACwC,GACjBF,EAAUE,EAAMhT,QAAUgT,KAG3BF,GAEXG,WAfgB,SAAAA,aAgBZ,IAAIC,EAAgBxL,KAAKyL,eAUzB,OARKD,IACDA,EAAgBxL,KAAKyL,kBACrBzL,KAAK4I,OAAOE,QAAQ,SAACwC,GACbA,EAAMI,SAAS7Q,OAAS6D,EAAUC,UAClC6M,EAAcF,EAAMhT,QAAUgT,MAInCE,GAEXG,aA5BgB,SAAAA,eA6BZ,IAAIC,EAAkB5L,KAAK6L,iBAU3B,OARK7L,KAAK6L,mBACND,EAAkB5L,KAAK6L,oBACvB7L,KAAK4I,OAAOE,QAAQ,SAACwC,GACbA,EAAMI,SAAS7Q,OAAS6D,EAAUE,YAClCgN,EAAgBN,EAAMhT,QAAUgT,MAIrCM,IAGR5L,KAAK+K,KAAKI,0PCKVW,aA1CX,SAAA7R,EAAaiH,EAAKoK,iGAAOS,QACrBtT,OAAOC,eAAesH,KAAM,UACxBrH,cACAqT,gBACAC,YACAjT,MAAOkI,IAGXlB,KAAKsL,MAAQA,qDAoBb,OAAO/E,OAAOvG,KAAKhH,+CAUnB,OAAOgH,KAAKhH,wCArBZ,OAAOgH,KAAKkM,aAyBLJ,GCjDR,SAASK,EAAoBC,EAAYC,GACxCD,EAAW1K,OAAS,GACD0K,EAAWE,MAAM,KACzBxD,QAAQ,SAACyD,GAChB,IAAMC,EAAaD,EAAQD,MAAM,KAC3B7O,GAAU+O,EAAW,GACrBC,IAAQD,EAAW,IAAMA,EAAW,IAC1C,GAAIC,GAAOhP,EACP,IAAK,IAAI1F,EAAI0F,EAAO1F,GAAK0U,EAAK1U,GAAK,EAC/BsU,EAAStU,8PCVvB2U,aAqBF,SAAAzS,EAAajB,iGAAO2T,QAChB3M,KAAKkM,OAASlT,gEAdO4T,GACrB,OAAKA,EAGEnU,OAAOoU,OAAOH,EAAkBI,qBAAsBF,GAFlDF,EAAkBI,kEAsB7B,OAAO9M,KAAKkM,gDAUZ,OAAO3F,OAAOvG,KAAKkM,kDAGNhL,GACb,OAAQA,aAAewL,KAAwBA,EAAkBK,mBAAmB7L,gDAGlEA,GAClB,OAAOA,aAAewL,EAAoBxL,EAAMwL,EAAkBK,mBAAmB7L,SAlDvFwL,GAyDNA,EAAkBM,KAAO,IAAIN,EAAkB,QAC/CA,EAAkBO,GAAK,IAAIP,EAAkB,MAC7CA,EAAkBQ,IAAM,IAAIR,EAAkB,OAO9CA,EAAkBI,sBACdK,QAAST,EAAkBO,GAC3BG,IAAKV,EAAkBQ,IACvBG,KAAMX,EAAkBM,KACxBM,UAAWZ,EAAkBO,IAGlB,ICpBRjL,EDoBQS,EAAA8K,EAAAC,EAAA,SAAAvT,EAAAhB,GAAA,GAAA4P,MAAAuB,QAAAnQ,GAAA,OAAAA,EAAA,GAAAnB,OAAA2U,YAAAhV,OAAAwB,GAAA,gBAAAA,EAAAhB,GAAA,IAAAO,KAAAX,GAAA,EAAAsB,GAAA,EAAApC,OAAA,cAAAS,EAAAkV,EAAAzT,EAAAnB,OAAA2U,cAAA5U,GAAAL,EAAAkV,EAAAC,QAAAC,QAAApU,EAAA0M,KAAA1N,EAAAQ,QAAAC,GAAAO,EAAAkI,SAAAzI,GAAAJ,GAAA,UAAAoB,GAAAE,GAAA,EAAApC,EAAAkC,EAAA,aAAApB,GAAA6U,EAAAG,QAAAH,EAAAG,SAAA,WAAA1T,EAAA,MAAApC,GAAA,OAAAyB,EAAA,CAAAS,EAAAhB,GAAA,UAAA6U,UAAA,yDEjEFC,GACTC,OAAQ,SACRC,QAAS,UACTC,QAAS,QACTC,QAAS,UACTC,QAAS,qBACTC,IAAK,MACLC,KAAM,QAGGC,GACTC,MAAO,QACPC,UAAW,YACXC,WAAY,aACZC,QAAS,UACTC,UAAW,aCrBR,SAASC,EAAiBC,EAAKC,GAClC,IAAMC,KACAC,KASN,OARAH,EAAIlG,OAAOE,QAAQ,SAACwC,GAChB2D,EAAO/I,KAAKoF,EAAMI,SAASpT,QAE/ByW,EAAInG,OAAOE,QAAQ,SAACwC,IAC6B,IAAzC2D,EAAOhJ,QAAQqF,EAAMI,SAASpT,OAC9B0W,EAAO9I,KAAKoF,EAAMI,SAASpT,QAG5B0W,ECRX,SAASE,IAAoB,SAYtB,SAASC,EAAcC,EAAKC,EAAKC,GAA+D,IAArDC,EAAqDnK,UAAA1D,OAAA,YAAA0D,UAAA,IAAAA,UAAA,GAAxBoK,EAAwBpK,UAAA1D,OAAA,YAAA0D,UAAA,GAAAA,UAAA,GAAbmJ,EAAMC,MACtF9C,KACAX,KACA0E,EAAqBH,GAAYJ,EACjCQ,EAAgBN,EAAIO,gBACpBC,EAAgBP,EAAIM,gBACpBE,EAAoBH,EAAcpX,KAClCwX,EAAoBF,EAActX,KAClCA,EAAUoX,EAAcpX,KAAxBA,IAAgCsX,EAActX,KAC9CyX,EAAmBlB,EAAgBa,EAAeE,GAExD,GAAIC,IAAsBC,EACtB,MAAM,IAAIE,MAAM,8CA+EpB,OA5EAN,EAAc9G,OAAOE,QAAQ,SAACwC,GAC1B,IAAM2E,EAAYzG,KAAY8B,EAAMI,WACc,IAA9CqE,EAAiB9J,QAAQgK,EAAU3X,OAAiBiX,IACpDU,EAAU3X,KAAUoX,EAAcpX,KAAlC2X,IAA0CA,EAAU3X,MAExDoT,EAAOxF,KAAK+J,KAEhBL,EAAchH,OAAOE,QAAQ,SAACwC,GAC1B,IAAM2E,EAAYzG,KAAY8B,EAAMI,WACc,IAA9CqE,EAAiB9J,QAAQgK,EAAU3X,MAC9BiX,IACDU,EAAU3X,KAAUsX,EAActX,KAAlC2X,IAA0CA,EAAU3X,KACpDoT,EAAOxF,KAAK+J,IAGhBvE,EAAOxF,KAAK+J,KAKpB9D,EAAmBiD,EAAIc,YAAa,SAACnY,GACjC,IAAIoY,KACAC,SACJjE,EAAmBkD,EAAIa,YAAa,SAACG,GACjC,IAAMC,KACAC,KACNA,EAAQV,MACRU,EAAQT,MACRJ,EAAc9G,OAAOE,QAAQ,SAACwC,GAC1BgF,EAAMpK,KAAKoF,EAAMkF,aAAazF,KAAKhT,IACnCwY,EAAQV,GAAmBvE,EAAMhT,QAAUgT,EAAMkF,aAAazF,KAAKhT,KAEvE6X,EAAchH,OAAOE,QAAQ,SAACwC,IAC+B,IAAnDyE,EAAiB9J,QAAQqF,EAAMI,SAASpT,OAAgBiX,GAC1De,EAAMpK,KAAKoF,EAAMkF,aAAazF,KAAKsF,IAEvCE,EAAQT,GAAmBxE,EAAMhT,QAAUgT,EAAMkF,aAAazF,KAAKsF,KAGvE,IAIMI,EAAYC,GAAgBH,EAAQV,IACpCc,EAAYD,GAAgBH,EAAQT,IAC1C,GAAIL,EAAmBgB,EAAWE,EALb,kBAAMvB,EAAIwB,gBACV,kBAAMvB,EAAIuB,oBAI4D,CACvF,IAAMC,KACNP,EAAMxH,QAAQ,SAACgI,EAASC,GACpBF,EAASnF,EAAOqF,GAAKzY,MAAQwY,IAE7BX,GAAY5B,EAAMC,QAAUgB,EAC5BzE,EAAKqF,GAAeS,GAGpB9F,EAAK7E,KAAK2K,GACVV,KACAC,EAAcrY,QAEf,IAAKyX,IAAajB,EAAME,WAAae,IAAajB,EAAMG,cAAgByB,EAAU,CACrF,IAAMU,KACFpI,EAAMiH,EAAc9G,OAAOlH,OAAS,EACxC4O,EAAMxH,QAAQ,SAACgI,EAASC,GAEhBF,EAASnF,EAAOqF,GAAKzY,MADrByY,GAAOtI,EACsBqI,EAGA,OAGrCX,KACAC,EAAcrY,EACdgT,EAAK7E,KAAK2K,QAKf,IAAIG,GAAUjG,EAAMW,GAAUpT,SC3GzC,SAAS2Y,EAAW9W,EAAGiJ,GACnB,IAAM8N,KAAQ/W,EACRgX,KAAQ/N,EACd,OAAI8N,EAAKC,GACG,EAERD,EAAKC,EACE,EAEJ,EAqEJ,SAASC,EAAWC,GAAyB,IAApBC,EAAoBlM,UAAA1D,OAAA,YAAA0D,UAAA,GAAAA,UAAA,GAAX6L,EAIrC,OAHII,EAAI3P,OAAS,GArBrB,SAAS6P,EAAMF,EAAKG,EAAIC,EAAIH,GACxB,GAAIG,IAAOD,EAAM,OAAOH,EAExB,IAAMK,EAAMF,EAAK3N,KAAK8N,OAAOF,EAAKD,GAAM,GAKxC,OAJAD,EAAKF,EAAKG,EAAIE,EAAKJ,GACnBC,EAAKF,EAAKK,EAAM,EAAGD,EAAIH,GAzC3B,SAAgBD,EAAKG,EAAIE,EAAKD,EAAIH,GAG9B,IAFA,IAAMM,EAAUP,EACVQ,KACG9Z,EAAIyZ,EAAIzZ,GAAK0Z,EAAI1Z,GAAK,EAC3B8Z,EAAO9Z,GAAK6Z,EAAQ7Z,GAKxB,IAHA,IAAIoC,EAAIqX,EACJpO,EAAIsO,EAAM,EAEL3Z,EAAIyZ,EAAIzZ,GAAK0Z,EAAI1Z,GAAK,EACvBoC,EAAIuX,GACJE,EAAQ7Z,GAAK8Z,EAAOzO,GACpBA,GAAK,GACEA,EAAIqO,GACXG,EAAQ7Z,GAAK8Z,EAAO1X,GACpBA,GAAK,GACEmX,EAAOO,EAAO1X,GAAI0X,EAAOzO,KAAO,GACvCwO,EAAQ7Z,GAAK8Z,EAAO1X,GACpBA,GAAK,IAELyX,EAAQ7Z,GAAK8Z,EAAOzO,GACpBA,GAAK,GArBjB,CA0CUiO,EAAKG,EAAIE,EAAKD,EAAIH,GAEjBD,EARX,CAsBaA,EAAK,EAAGA,EAAI3P,OAAS,EAAG4P,GAE1BD,0HC3EX,SAASS,EAAWC,EAAUC,EAAU/P,GACpC,IAAIgQ,SACJ,OAAQF,GACR,KAAKvT,EAAeC,WACpB,KAAKN,EAAiBE,SAEd4T,EADa,SAAbD,EACU,SAAC7X,EAAGiJ,GAAJ,OAAUA,EAAEnB,GAAS9H,EAAE8H,IAEvB,SAAC9H,EAAGiJ,GAAJ,OAAUjJ,EAAE8H,GAASmB,EAAEnB,IAErC,MACJ,QACIgQ,EAAU,SAAApZ,EAACsB,EAAGiJ,IACV,IAAM8N,KAAQ/W,EAAE8H,GACVkP,KAAQ/N,GAAEnB,GAChB,OAAIiP,EAAKC,EACe,SAAba,EAAsB,GAAK,EAElCd,EAAKC,EACe,SAAba,GAAuB,EAAI,EAE/B,GAGf,OAAOC,EAUX,SAASC,EAAUnH,EAAMhC,GACrB,IAAMoJ,EAAU,IAAIC,IACdC,KAYN,OAVAtH,EAAKjC,QAAQ,SAACwJ,GACV,IAAMC,EAAWD,EAAMvJ,GACnBoJ,EAAQK,IAAID,GACZF,EAAYF,EAAQvZ,IAAI2Z,IAAW,GAAGrM,KAAKoM,IAE3CD,EAAYnM,MAAMqM,GAAWD,KAC7BH,EAAQM,IAAIF,EAAUF,EAAY3Q,OAAS,MAI5C2Q,EAYX,SAASK,EAAmBC,EAAcC,EAAcC,GACpD,IAAM3N,GACF4N,MAAOH,EAAa,IAQxB,OALAC,EAAaG,OAAO,SAACC,EAAKrF,EAAMsF,GAE5B,OADAD,EAAIrF,GAAQgF,EAAa,GAAG1K,IAAI,SAAAhO,GAAA,OAASqY,EAAMO,EAAmBI,GAAKhR,SAChE+Q,GACR9N,GAEIA,ECtEJ,SAASgO,EAAY9D,EAAKC,GAC7B,IAAM8D,KACAzH,KACA0H,KACArI,KACA2E,EAAgBN,EAAIO,gBACpBC,EAAgBP,EAAIM,gBACpB0D,EAAwB3D,EAActE,YACtCkI,EAAwB1D,EAAcxE,YACtC9S,EAAUoX,EAAcpX,KAAxBA,UAAsCsX,EAActX,KAG1D,IAAKoS,EAAW0E,EAAImE,eAAejH,MAAM,KAAKkH,OAAQnE,EAAIkE,eAAejH,MAAM,KAAKkH,QAChF,OAAO,KAiBX,SAASC,EAAkBC,EAAItI,EAAWuI,GACtCxH,EAAmBuH,EAAGxD,YAAa,SAACnY,GAChC,IAAMuY,KACFsD,EAAW,GACfR,EAActK,QAAQ,SAAC+K,GACnB,IAAM7a,EAAQoS,EAAUyI,GAAYrD,aAAazF,KAAKhT,GACtD6b,OAAgB5a,EAChBsX,EAAMuD,GAAc7a,IAEnBma,EAAUS,KACPD,GAAW5I,EAAK7E,KAAKoK,GACzB6C,EAAUS,SAStB,OAjCCxE,EAAImE,eAAejH,MAAM,KAAMxD,QAAQ,SAACgL,GACrC,IAAMxI,EAAQ+H,EAAsBS,GACpCpI,EAAOxF,KAAKsD,KAAY8B,EAAMI,WAC9B0H,EAAclN,KAAKoF,EAAMI,SAASpT,QA2BtCmb,EAAkBpE,EAAKiE,MACvBG,EAAkBrE,EAAKiE,MAEhB,IAAIrC,GAAUjG,EAAMW,GAAUpT,+PC5DjC4G,GAAgDD,EAAhDC,IAAKC,GAA2CF,EAA3CE,IAAKG,GAAsCL,EAAtCK,MAAOC,GAA+BN,EAA/BM,KAAMC,GAAyBP,EAAzBO,MAAOC,GAAkBR,EAAlBQ,IAAKL,GAAaH,EAAbG,IAAKC,GAAQJ,EAARI,IAEhD,SAAS0U,GAAkB1C,GACvB,OAAOA,EAAI2C,OAAO,SAAA/Z,GAAA,QAAU8P,aAAgBkK,KAShD,SAASC,GAAK7C,GACV,GAAIjH,EAAQiH,MAAUA,EAAI,aAAcxI,OAAQ,CAC5C,IAAMsL,EAAiBJ,GAAkB1C,GAIzC,OAHiB8C,EAAezS,OACZyS,EAAepB,OAAO,SAACC,EAAKoB,GAAN,OAAepB,EAAMoB,GAAM,GAC/CH,EAAkBjH,KAG5C,OAAOiH,EAAkBjH,KAU7B,SAASqH,GAAKhD,GACV,GAAIjH,EAAQiH,MAAUA,EAAI,aAAcxI,OAAQ,CAC5C,IAAMyL,EAAWJ,GAAI7C,GACf5I,EAAM4I,EAAI3P,QAAU,EAC1B,OAAQ8G,OAAO+L,MAAMD,IAAaA,aAAoBL,EAC7CA,EAAkBjH,KAAOsH,EAAW7L,EAEjD,OAAOwL,EAAkBjH,KAgG7B,IAAMwH,YACDtV,GAAMgV,IADLM,KAEDrV,GAAMkV,IAFLG,KAGDpV,GAzFL,SAAciS,GACV,GAAIjH,EAAQiH,MAAUA,EAAI,aAAcxI,OAAQ,CAE5C,IAAM4L,EAAiBV,GAAkB1C,GAEzC,OAAQoD,EAAe/S,OAAUmC,KAAK6Q,IAAL7Q,cAAY4Q,IAAkBR,EAAkBjH,KAErF,OAAOiH,EAAkBjH,OA+EvBwH,KAIDnV,GAzEL,SAAcgS,GACV,GAAIjH,EAAQiH,MAAUA,EAAI,aAAcxI,OAAQ,CAE5C,IAAM4L,EAAiBV,GAAkB1C,GAEzC,OAAQoD,EAAe/S,OAAUmC,KAAK8Q,IAAL9Q,cAAY4Q,IAAkBR,EAAkBjH,KAErF,OAAOiH,EAAkBjH,OA8DvBwH,KAKDlV,GAzDL,SAAgB+R,GACZ,OAAOA,EAAI,KAmDTmD,KAMDjV,GA/CL,SAAe8R,GACX,OAAOA,EAAIA,EAAI3P,OAAS,KAwCtB8S,KAODhV,GArCL,SAAgB6R,GACZ,OAAIjH,EAAQiH,GACDA,EAAI3P,OAERuS,EAAkBjH,OA0BvBwH,KAQD/U,GAbL,SAAc4R,GACV,OAAOxN,KAAK+Q,KAbhB,SAAmBvD,GACf,IAAIwD,EAAOR,GAAIhD,GACf,OAAOgD,GAAIhD,EAAIpJ,IAAI,SAAAhO,GAAA,OAAA4J,KAAAiR,IAAQC,EAAMF,EAAS,MAF9C,CAa8BxD,MAIxBmD,GAWAQ,GAAqB9V,yPC1IrB+V,cACF,SAAAhb,IAAe,IAAAhB,EAAA+G,MAAA,SAAA/F,EAAAhB,GAAA,KAAAgB,aAAAhB,GAAA,UAAA6U,UAAA,sCAAA9N,KAAA/F,GACX+F,KAAK2I,MAAQ,IAAIyJ,IACjBpS,KAAK2I,MAAM8J,IAAI,aAAcyB,IAE7Bzb,OAAOyc,QAAQV,IAAQ1L,QAAQ,SAACxP,GAC5B6b,EAAKxM,MAAM8J,IAAInZ,EAAI,GAAIA,EAAI,aAAA8b,GAAAnb,IAAAX,IAAA,iBAAAN,MAAA,SAAAA,QAc/B,IAAKoM,UAAO1D,OACR,OAAO1B,KAAK2I,MAAM/P,IAAI,cAG1B,IAAIyc,0CAEJ,GAAuB,mBAAZA,EACPrV,KAAK2I,MAAM8J,IAAI,aAAc4C,OAC1B,CAEH,GADAA,EAAU9O,OAAO8O,IAC6B,IAA1C5c,OAAOqN,KAAK0O,IAAQvO,QAAQoP,GAG5B,MAAM,IAAIrF,MAAJ,WAAqBqF,EAArB,0BAFNrV,KAAK2I,MAAM8J,IAAI,aAAc+B,GAAOa,IAK5C,OAAOrV,4CAmCD1H,EAAM+c,GAAS,IAAA7b,EAAAwG,KACrB,GAAuB,mBAAZqV,EACP,MAAM,IAAIrF,MAAM,gCAMpB,OAHA1X,EAAOiO,OAAOjO,GACd0H,KAAK2I,MAAM8J,IAAIna,EAAM+c,GAEd,WAAQC,EAAKC,aAAajd,+CAGvBA,GACN0H,KAAK2I,MAAM6J,IAAIla,IACf0H,KAAK2I,MAAM6M,OAAOld,yCAIjBA,GACL,OAAIA,aAAgBmd,SACTnd,EAEJ0H,KAAK2I,MAAM/P,IAAIN,SA5FxB2c,GA4GSS,GAZO,WAClB,IAAI/M,EAAQ,KAQZ,OALkB,OAAVA,IACAA,EAAQ,IAAIsM,IAETtM,EAPO,GAAAgN,GAAA,SAAA1b,EAAAhB,GAAA,GAAA4P,MAAAuB,QAAAnQ,GAAA,OAAAA,EAAA,GAAAnB,OAAA2U,YAAAhV,OAAAwB,GAAA,gBAAAA,EAAAhB,GAAA,IAAAO,KAAAX,GAAA,EAAAsB,GAAA,EAAApC,OAAA,cAAAS,EAAAkV,EAAAzT,EAAAnB,OAAA2U,cAAA5U,GAAAL,EAAAkV,EAAAC,QAAAC,QAAApU,EAAA0M,KAAA1N,EAAAQ,QAAAC,GAAAO,EAAAkI,SAAAzI,GAAAJ,GAAA,UAAAoB,GAAAE,GAAA,EAAApC,EAAAkC,EAAA,aAAApB,GAAA6U,EAAAG,QAAAH,EAAAG,SAAA,WAAA1T,EAAA,MAAApC,GAAA,OAAAyB,EAAA,CAAAS,EAAAhB,GAAA,UAAA6U,UAAA,yDC/Ff,SAAS8H,GAAmBxG,EAAKC,GACpC,IAIMwG,EAAkBhH,EAJFO,EAAIO,gBACJN,EAAIM,iBAK1B,OAAO,SAACc,EAAWE,GACf,IAAImF,KASJ,OARAD,EAAgB/M,QAAQ,SAACgL,GAGjBgC,IAFArF,EAAUqD,GAAW9a,QACrB2X,EAAUmD,GAAW9a,QAAS8c,KAM/BA,GCjBR,SAASC,GAAO3G,EAAKC,GACxB,IAAM8D,KACAzH,KACA0H,KACArI,KACA2E,EAAgBN,EAAIO,gBACpBC,EAAgBP,EAAIM,gBACpB0D,EAAwB3D,EAActE,YACtCkI,EAAwB1D,EAAcxE,YACtC9S,EAAUoX,EAAcpX,KAAxBA,UAAsCsX,EAActX,KAG1D,IAAKoS,EAAW0E,EAAImE,eAAejH,MAAM,KAAKkH,OAAQnE,EAAIkE,eAAejH,MAAM,KAAKkH,QAChF,OAAO,KAgBX,SAASC,EAAmBC,EAAItI,GAC5Be,EAAmBuH,EAAGxD,YAAa,SAACnY,GAChC,IAAMuY,KACFsD,EAAW,GACfR,EAActK,QAAQ,SAAC+K,GACnB,IAAM7a,EAAQoS,EAAUyI,GAAYrD,aAAazF,KAAKhT,GACtD6b,OAAgB5a,EAChBsX,EAAMuD,GAAc7a,IAEnBma,EAAUS,KACX7I,EAAK7E,KAAKoK,GACV6C,EAAUS,SAStB,OAhCCxE,EAAImE,eAAejH,MAAM,KAAMxD,QAAQ,SAACgL,GACrC,IAAMxI,EAAQ+H,EAAsBS,GACpCpI,EAAOxF,KAAKsD,KAAY8B,EAAMI,WAC9B0H,EAAclN,KAAKoF,EAAMI,SAASpT,QA0BtCmb,EAAkBrE,EAAKiE,GACvBI,EAAkBpE,EAAKiE,GAEhB,IAAI0C,GAAUjL,EAAMW,GAAUpT,SCvDlC,SAAS2d,GAAeC,EAAYC,EAAY7G,GACnD,OAAOH,EAAa+G,EAAYC,EAAY7G,KAAiBf,EAAME,WAGhE,SAAS2H,GAAgBF,EAAYC,EAAY7G,GACpD,OAAOH,EAAagH,EAAYD,EAAY5G,KAAiBf,EAAMG,sQCWlD2H,cAQjB,SAAApc,EAAauW,EAAcpE,iGAAYkK,QACnCtW,KAAKwQ,aAAeA,EACpBxQ,KAAKoM,WAAaA,oDAUlB,MAAM,IAAI4D,MAAM,0BAAA1W,IAAA,SAAAN,MAAA,SAAAA,QAUhB,OAAOgH,KAAKwQ,aAAa9E,4CAUzB,OAAO1L,KAAKwQ,aAAalY,0CAUzB,OAAO0H,KAAKwQ,aAAa9E,OAAO7Q,6CAUhC,OAAOmF,KAAKwQ,aAAa9E,OAAO6K,oDAUhC,OAAOvW,KAAKwQ,aAAa9E,OAAOrR,wDAUhC,OAAO2F,KAAKwQ,aAAa9E,OAAO8K,aAAexW,KAAKwQ,aAAa9E,OAAOpT,0CASpE,IAAA2B,EAAA+F,KACE+K,KAIN,OAHAoB,EAAmBnM,KAAKoM,WAAY,SAACrU,GACjCgT,EAAK7E,KAAKiP,EAAK3E,aAAazF,KAAKhT,MAE9BgT,gDAUP,MAAM,IAAIiF,MAAM,2BAAA/V,EAxGHoc,GAwGGI,GAAA,oBAAAxc,IAAAhB,GAAA,QAAAO,EAAA,EAAAA,EAAAP,EAAAyI,OAAAlI,IAAA,KAAAX,EAAAI,EAAAO,GAAAX,EAAAF,WAAAE,EAAAF,aAAA,EAAAE,EAAAmT,cAAA,YAAAnT,MAAAoT,UAAA,GAAAxT,OAAAC,eAAAuB,EAAApB,EAAAS,IAAAT,IAAA,gBAAAI,EAAAO,EAAAX,GAAA,OAAAW,GAAAS,EAAAhB,EAAAY,UAAAL,GAAAX,GAAAoB,EAAAhB,EAAAJ,GAAAI,GAAA,GCpHHyd,qrBAAkBL,+CAY/B,OAHKrW,KAAK2W,gBACN3W,KAAK2W,cAAgB3W,KAAK4W,uBAEvB5W,KAAK2W,kEAUZ,MAAM,IAAI3G,MAAM,0BAAA1W,IAAA,gBAAAN,MAAA,SAAAA,QAWhB,OAAOgH,KAAK+K,aAjCC2L,GAiCD3L,sPChCC8L,qrBAAoBH,gDASjC,OAAOvY,EAAiBC,gEAUL,IAAAnE,EAAA+F,KACb8W,EAAO,IAAIC,IACXC,KAUN,OAPA7K,EAAmBnM,KAAKoM,WAAY,SAACrU,GACjC,IAAMua,EAAQgD,EAAK9E,aAAazF,KAAKhT,GAChC+e,EAAKtE,IAAIF,KACVwE,EAAKG,IAAI3E,GACT0E,EAAO9Q,KAAKoM,MAGb0E,QA/BMH,GA+BNG,sPC7BME,eAQjB,SAAAje,EAAauX,EAAcpE,iGAAY+K,yOAC7B3G,EAAcpE,IADe+K,OAGnChC,EAAKiC,eAAiB,KAHaD,uUARLT,4DAqBX,IAAAzc,EAAA+F,KACb8W,EAAO,IAAIC,IACXC,KAYN,OARA7K,EAAmBnM,KAAKoM,WAAY,SAACrU,GACjC,IAAMua,EAAQgD,EAAK9E,aAAazF,KAAKhT,GAChC+e,EAAKtE,IAAIF,KACVwE,EAAKG,IAAI3E,GACT0E,EAAO9Q,KAAKoM,MAIb0E,+DAWP,GAAIhX,KAAKoX,eACL,OAAOpX,KAAKoX,eAUhB,IAPA,IAAMC,EAAarX,KAAK+K,OAAOiJ,OAAO,SAAA/Z,GAAA,QAAU8P,aAAgBkK,KAAoBT,KAAK,SAACrZ,EAAGiJ,GAAJ,OAAUjJ,EAAIiJ,IACjGkU,EAAQD,EAAW3V,OACrB6V,EAAU/O,OAAOgP,kBACjBC,SACAC,SACAC,EAAiB,EAEZ5f,EAAI,EAAGA,EAAIuf,EAAOvf,IACvB0f,EAAYJ,EAAWtf,EAAI,IAC3B2f,EAAYL,EAAWtf,MAEL0f,IAIlBF,EAAU1T,KAAK6Q,IAAI6C,EAASG,EAAYL,EAAWtf,EAAI,IACvD4f,KAQJ,OALKA,IACDJ,EAAU,MAEdvX,KAAKoX,eAAiBG,EAEfvX,KAAKoX,sDAUZ,OAAOpX,KAAKwQ,aAAa9E,OAAO3L,qDAUnB,IAAA9F,EAAA+F,KACP+K,KASN,OARAoB,EAAmBnM,KAAKoM,WAAY,SAACrU,GACjC,IAAMua,EAAQsF,EAAKpH,aAAazF,KAAKhT,GACjCua,aAAiB2B,EACjBlJ,EAAK7E,KAAKoM,GAEVvH,EAAK7E,KAAKpG,EAAkBsG,SAASkM,EAAOsF,EAAK7X,aAGlDgL,QAxGMmM,GAwGNnM,sPC3GM8M,qrBAAenB,4DAS5B,IAAMoB,EAAU9X,KAAKwQ,aAAa9E,OAAOqM,KACzC,OAAQD,EAAQ,GAAIA,EAAQA,EAAQpW,OAAS,OAAApI,IAAA,OAAAN,MAAA,SAAAA,QAU7C,OAAOgH,KAAKwQ,aAAa9E,OAAOqM,WApBnBF,GAoBmBE,sPClBnBC,qrBAAgB3B,+CAY7B,OAHKrW,KAAK2W,gBACN3W,KAAK2W,cAAgB3W,KAAK4W,uBAEvB5W,KAAK2W,mDAUZ,OAAO3W,KAAKwQ,aAAa9E,OAAOuM,8CAUhC,OAAOjY,KAAKwQ,aAAa9E,OAAOwM,UAAYlD,gDAShC,IACJmD,EAAiBnY,KAAKwQ,aAAa9E,OAAnCyM,aACR,OAAOA,aAAwB1C,SAAW0C,EAAetN,sDAUzD,MAAM,IAAImF,MAAM,0BAAA1W,IAAA,gBAAAN,MAAA,SAAAA,QAWhB,OAAOgH,KAAK+K,aAhECiN,GAgEDjN,sPC/DCqN,qrBAAmBJ,gDAShC,OAAOxZ,EAAeC,+DAUH,IAAAxE,EAAA+F,KACf0U,EAAMlM,OAAOgP,kBACb7C,EAAMnM,OAAO6P,kBAiBjB,OAdAlM,EAAmBnM,KAAKoM,WAAY,SAACrU,GACjC,IAAMua,EAAQgD,EAAK9E,aAAazF,KAAKhT,GACjCua,aAAiB2B,IAIjB3B,EAAQoC,IACRA,EAAMpC,GAENA,EAAQqC,IACRA,EAAMrC,OAINoC,EAAKC,SAtCAyD,GAsCAzD,sPC5CA2D,kLAQb,MAAM,IAAItI,MAAM,2BAAA/V,EARHqe,GAQGC,GAAA,oBAAAte,IAAAhB,GAAA,QAAAO,EAAA,EAAAA,EAAAP,EAAAyI,OAAAlI,IAAA,KAAAX,EAAAI,EAAAO,GAAAX,EAAAF,WAAAE,EAAAF,aAAA,EAAAE,EAAAmT,cAAA,YAAAnT,MAAAoT,UAAA,GAAAxT,OAAAC,eAAAuB,EAAApB,EAAAS,IAAAT,IAAA,gBAAAI,EAAAO,EAAAX,GAAA,OAAAW,GAAAS,EAAAhB,EAAAY,UAAAL,GAAAX,GAAAoB,EAAAhB,EAAAJ,GAAAI,GAAA,GCJHuf,qrBAA0BF,4CAQpCpX,GAQH,OALK+S,EAAkBwE,UAAUvX,GAGpB+S,EAAkByE,eAAexX,GAFjCqF,OAAOrF,GAAKyX,aAZZH,GAYYG,sPCXZC,eAOjB,SAAA3f,EAAayS,iGAAQmN,kPAEjB1D,EAAKzJ,OAASA,EACdyJ,EAAK2D,KAAO,IAAIhZ,EAAkBqV,EAAKzJ,OAAO3L,QAH7B8Y,uUAPmBP,4CAoBjCpX,GACH,IAAIuC,SAEJ,GAAKwQ,EAAkBwE,UAAUvX,GAI7BuC,EAASwQ,EAAkByE,eAAexX,OAJP,CACnC,IAAIhB,EAAaF,KAAK8Y,KAAKvQ,cAAcrH,GACzCuC,EAASvD,EAAaA,EAAWqK,UAAY0J,EAAkBhH,GAInE,OAAOxJ,QA7BMmV,GA6BNnV,sPC9BMsV,qrBAAqBT,4CAQ/BpX,GAEHA,EAAMqF,OAAOrF,GACb,IAAIuC,SAEJ,GAAKwQ,EAAkBwE,UAAUvX,GAK7BuC,EAASwQ,EAAkByE,eAAexX,OALP,CACnC,IAAI8X,EAAU9X,EAAImH,MALR,2DAMV5E,EAASuV,EAAaxQ,OAAOyQ,WAAWD,EAAQ,IAAvCA,IAA8CxQ,OAAOyQ,WAAWD,EAAQ,IAC9D/E,EAAkBhH,GAIzC,OAAOxJ,QApBMsV,GAoBNtV,sPCpBMyV,qrBAAyBZ,4CAQnCpX,GACH,IAAIuC,SAEJ,GAAKwQ,EAAkBwE,UAAUvX,GAI7BuC,EAASwQ,EAAkByE,eAAexX,OAJP,CACnC,IAAIC,EAAY8X,WAAW/X,EAAK,IAChCuC,EAAS+E,OAAO+L,MAAMpT,GAAa8S,EAAkBhH,GAAK9L,EAI9D,OAAOsC,QAjBMyV,GAiBNzV,sPCnBM0V,cAUjB,SAAAlf,EAAa3B,EAAMyS,EAAMW,EAAQvJ,iGAAQiX,QACrCpZ,KAAK1H,KAAOA,EACZ0H,KAAK0L,OAASA,EACd1L,KAAKmC,OAASA,EACdnC,KAAK+K,KAAO/K,KAAKqZ,UAAUtO,sDAUpBA,GAAM,IAAA9R,EAAA+G,KACb,OAAO+K,EAAK9C,IAAI,SAAAhO,GAAA,OAASkb,EAAKhT,OAAOsE,MAAM6L,WAzB9B6G,GC0Fd,SAASG,GAAaC,EAAY7N,EAAQ8N,GAC7C,IAAMC,KAUN,OARMD,GAAWA,EAAQ9X,SACrB8X,EAAU9N,EAAOzD,IAAI,SAAAhO,GAAA,OAAQ8P,EAAKzR,QAGtCkhB,EAAQ1Q,QAAQ,SAAC4Q,EAAQ3hB,GACrB0hB,EAAWC,GAAU3hB,IAGlB2T,EAAOzD,IAAI,SAAAhP,GAAA,OAzFtB,SAAyB8R,EAAMW,GAC3BX,EAAOA,MACP,IAAIyF,SAEJ,OAAQ9E,EAAO7Q,MACf,KAAK6D,EAAUC,QACX,OAAQ+M,EAAO6K,SACf,KAAK/X,EAAeC,WAGpB,QAEI,OADA+R,EAAe,IAAI2I,GAAazN,EAAOpT,KAAMyS,EAAMW,EAAQ,IAAIwN,IACxD,IAAId,GAAW5H,EAAf,MAAkCzF,EAAKrJ,OAAS,IAE/D,KAAKhD,EAAUE,UACX,OAAQ8M,EAAO6K,SACf,KAAKpY,EAAiBC,YAElB,OADAoS,EAAe,IAAI2I,GAAazN,EAAOpT,KAAMyS,EAAMW,EAAQ,IAAI8M,IACxD,IAAI3B,GAAYrG,EAAhB,MAAmCzF,EAAKrJ,OAAS,IAC5D,KAAKvD,EAAiBE,SAElB,OADAmS,EAAe,IAAI2I,GAAazN,EAAOpT,KAAMyS,EAAMW,EAAQ,IAAIkN,GAAelN,IACvE,IAAIwL,GAAS1G,EAAb,MAAgCzF,EAAKrJ,OAAS,IACzD,KAAKvD,EAAiBI,OAElB,OADAiS,EAAe,IAAI2I,GAAazN,EAAOpT,KAAMyS,EAAMW,EAAQ,IAAIqN,IACxD,IAAIlB,GAAOrH,EAAX,MAA8BzF,EAAKrJ,OAAS,IACvD,QAEI,OADA8O,EAAe,IAAI2I,GAAazN,EAAOpT,KAAMyS,EAAMW,EAAQ,IAAI8M,IACxD,IAAI3B,GAAYrG,EAAhB,MAAmCzF,EAAKrJ,OAAS,IAEhE,QAEI,OADA8O,EAAe,IAAI2I,GAAazN,EAAOpT,KAAMyS,EAAMW,EAAQ,IAAI8M,IACxD,IAAI3B,GAAYrG,EAAhB,MAAmCzF,EAAKrJ,OAAS,KA/BhE,CAyF8C6X,EAAWE,EAAW1P,EAAKzR,OAAQyR,KC3GlE,IAAA4P,IACXC,WAAY9b,EAAWI,MCuCZ2b,GAvBf,SAuBeA,GAvBExI,EAAK1K,GAIlBA,EAAUlO,OAAOoU,WAFbiN,mBAEuCnT,GAE3C,IAAI+S,EACEK,KACA7T,EAAO8T,EAAYD,GAYzB,OAPIL,EAHA/S,EAAQmT,eAGCzI,EAAI/J,OAAO,EAAG,GAAG,MAK9B+J,EAAIvI,QAAQ,SAAA7O,GAAA,OAASiM,sIAAQoF,OAErBoO,EAAQK,ICvChBE,MACAC,MACAC,GAAQ,GACRC,GAAU,GACVC,GAAS,GAEb,SAASC,GAAgBP,GACvB,OAAO,IAAItE,SAAS,IAAK,WAAasE,EAAQ9R,IAAI,SAAS3P,EAAMP,GAC/D,OAAOwiB,KAAKC,UAAUliB,GAAQ,OAASP,EAAI,MAC1CgL,KAAK,KAAO,KA0BF,IAAA0X,GAAA,SAAAA,GAASC,GACtB,IAAIC,EAAW,IAAIxa,OAAO,KAAQua,EAAY,SAC1CE,EAAYF,EAAUG,WAAW,GAWrC,SAASC,EAAUza,EAAM0a,GACvB,IAII9hB,EAJA+hB,KACAC,EAAI5a,EAAKqB,OACT6L,EAAI,EACJ/T,EAAI,EAEJ0hB,EAAMD,GAAK,EACXE,KAMJ,SAAShV,IACP,GAAI+U,EAAK,OAAOhB,GAChB,GAAIiB,EAAK,OAAOA,KAAalB,GAG7B,IAAIliB,EAAUK,EAAPgjB,EAAI7N,EACX,GAAIlN,EAAKwa,WAAWO,KAAOjB,GAAO,CAChC,KAAO5M,IAAM0N,GAAK5a,EAAKwa,WAAWtN,KAAO4M,IAAS9Z,EAAKwa,aAAatN,KAAO4M,KAI3E,OAHKpiB,EAAIwV,IAAM0N,EAAGC,MACR9iB,EAAIiI,EAAKwa,WAAWtN,QAAU6M,GAASe,KACxC/iB,IAAMiiB,KAAUc,KAAgB9a,EAAKwa,WAAWtN,KAAO6M,MAAW7M,GACpElN,EAAKgb,MAAMD,EAAI,EAAGrjB,EAAI,GAAGuI,QAAQ,MAAO,KAIjD,KAAOiN,EAAI0N,GAAG,CACZ,IAAK7iB,EAAIiI,EAAKwa,WAAW9iB,EAAIwV,QAAU6M,GAASe,UAC3C,GAAI/iB,IAAMiiB,GAAUc,KAAgB9a,EAAKwa,WAAWtN,KAAO6M,MAAW7M,OACtE,GAAInV,IAAMwiB,EAAW,SAC1B,OAAOva,EAAKgb,MAAMD,EAAGrjB,GAIvB,OAAOmjB,KAAY7a,EAAKgb,MAAMD,EAAGH,GAGnC,IA7BI5a,EAAKwa,WAAWI,EAAI,KAAOb,MAAWa,EACtC5a,EAAKwa,WAAWI,EAAI,KAAOZ,MAAUY,GA4BjChiB,EAAIkN,OAAa+T,IAAK,CAE5B,IADA,IAAIoB,KACGriB,IAAMghB,IAAOhhB,IAAMihB,IAAKoB,EAAIpV,KAAKjN,GAAIA,EAAIkN,IAC5C4U,GAA4B,OAAtBO,EAAMP,EAAEO,EAAK9hB,OACvBwhB,EAAK9U,KAAKoV,GAGZ,OAAON,EAgBT,SAASO,EAAUD,GACjB,OAAOA,EAAIrT,IAAIuT,GAAazY,KAAK2X,GAGnC,SAASc,EAAYnb,GACnB,OAAe,MAARA,EAAe,GAChBsa,EAAStd,KAAKgD,GAAQ,IAAM,IAAOA,EAAKC,QAAQ,KAAM,MAAU,IAChED,EAGR,OACEoG,MAlFF,SAAAA,MAAepG,EAAM0a,GACnB,IAAIU,EAAS1B,EAASiB,EAAOF,EAAUza,EAAM,SAASib,EAAKvjB,GACzD,GAAI0jB,EAAS,OAAOA,EAAQH,EAAKvjB,EAAI,GACrCgiB,EAAUuB,EAAKG,EAAUV,EA9B/B,SAAyBhB,EAASgB,GAChC,IAAIphB,EAAS2gB,GAAgBP,GAC7B,OAAO,SAASuB,EAAKvjB,GACnB,OAAOgjB,EAAEphB,EAAO2hB,GAAMvjB,EAAGgiB,IAH7B,CA8BmDuB,EAAKP,GAAKT,GAAgBgB,KAGzE,OADAN,EAAKjB,QAAUA,MACRiB,GA6EPF,UAAWA,EACX/a,OA1BF,SAAAA,OAAgBib,EAAMjB,GAEpB,OADe,MAAXA,IAAiBA,EA9EzB,SAAsBiB,GACpB,IAAIU,EAAYjjB,OAAOY,OAAO,MAC1B0gB,KAUJ,OARAiB,EAAKlS,QAAQ,SAASwS,GACpB,IAAK,IAAIK,KAAUL,EACXK,KAAUD,GACd3B,EAAQ7T,KAAKwV,EAAUC,GAAUA,KAKhC5B,EAZT,CA8EgDiB,KACpCjB,EAAQ9R,IAAIuT,GAAazY,KAAK2X,IAAYkB,OAAOZ,EAAK/S,IAAI,SAASqT,GACzE,OAAOvB,EAAQ9R,IAAI,SAAS0T,GAC1B,OAAOH,EAAYF,EAAIK,MACtB5Y,KAAK2X,MACN3X,KAAK,OAqBT8Y,WAlBF,SAAAA,WAAoBb,GAClB,OAAOA,EAAK/S,IAAIsT,GAAWxY,KAAK,SCzGhC+Y,GAAMC,GAAI,KCAVC,IDEkBF,GAAIrV,MACAqV,GAAIhB,UACPgB,GAAI/b,OACA+b,GAAID,WCLrBE,GAAI,OAEQC,GAAIvV,MACAuV,GAAIlB,UACPkB,GAAIjc,OACAic,GAAIH,WC4BhB,IAAAI,GAXf,SAWeA,GAXE/R,EAAKvD,GAKlBA,EAAUlO,OAAOoU,WAHbiN,kBACAoC,eAAgB,KAEuBvV,GAE3C,IAAMwV,EAAMJ,GAAMpV,EAAQuV,gBAC1B,OAAOE,GAAOD,EAAIrB,UAAU5Q,GAAMvD,ICoBvB0V,GAxBf,SAwBeA,GAxBIhL,GACf,IAAMqI,KACF3hB,EAAI,EACJukB,SACEvC,KACA7T,EAAO8T,EAAYD,GAgBzB,OAdA1I,EAAIvI,QAAQ,SAACiB,GACT,IAAMnB,KACN,IAAK,IAAItP,KAAOyQ,EACRzQ,KAAOogB,EACP4C,EAAiB5C,EAAOpgB,IAExBogB,EAAOpgB,GAAOvB,IACdukB,EAAiBvkB,EAAI,GAEzB6Q,EAAO0T,GAAkBvS,EAAKzQ,GAElC4M,eAAQ0C,MAGJnQ,OAAOqN,KAAK4T,GAASK,IC1BlBwC,GAXf,SAWeA,GAXAxR,EAAMpE,GACjB,IAAM6V,GAAeC,YAAUC,UAAQC,WACjC/C,EAAa9O,EAAiBC,GAEpC,IAAK6O,EACD,MAAM,IAAI5J,MAAM,mCAGpB,OAAOwM,EAAW5C,GAAY7O,EAAMpE,4gBCGjC,SAAS+J,GAAiB9H,GAC7B,IAAMgU,KAEN,OADAnkB,OAAOqN,KAAK8C,GAAQE,QAAQ,SAACxP,GAAUsjB,EAAKtjB,GAAO,IAAIwS,EAAMlD,EAAOtP,GAAMA,KACnEsjB,EAGJ,IAwBMC,GAAqB,SAArBA,GAAsBC,EAAUC,EAAOC,IAjBZ,SAACD,EAAOC,GAAuC,IACzCC,EADarQ,EAA4BxH,UAAA1D,OAAA,YAAA0D,UAAA,GAAAA,UAAA,MAAf8X,EAAe9X,UAAA,GAC/E4X,IAAcjP,EAAeI,SAC7B4O,EAAMI,YAAYzb,OAAS,GAC3Bub,IAAME,aAAYjX,KAAlB+W,WAA0BC,KAE1BH,EAAMI,YAAYjX,MACdkX,GAAIJ,EACJK,KAAMzQ,EACN0Q,SAAUJ,IARkB,CAkBXH,EAAOC,EADuD5X,wEAJlD,SAAC0X,EAAUS,GAAU,IAAA/jB,GAC1DgkB,IAAMC,qBAAoBvX,KAA1BsX,WAAkCV,EAASW,qBAA3CD,UAAmEV,EAASK,eADvC,CAMXL,EAAUC,IAsC3BW,GAAqB,SAArBA,GAAsBX,GAC/B,IAAMY,EAAWZ,EAAMa,UACjBC,EAAoBd,EAAMe,uBAShC,OARAH,EAASpK,eAAiBsK,EAAkBjV,OAAOX,IAAI,SAAAhO,GAAA,OAAK8gB,EAAEziB,SAAQyK,KAAK,KAG3E8a,EAAkBxS,iBAAmB,KACrCwS,EAAkBhS,iBAAmB,KACrCgS,EAAkBpS,eAAiB,KACnCkS,EAASI,wBAAwBC,wBAE1BL,GAGEM,GAAyB,SAAzBA,GAA0BlB,EAAOmB,GAA4B,IAAhBtR,EAAgBxH,UAAA1D,OAAA,YAAA0D,UAAA,GAAAA,UAAA,MAChE4X,EAAYpQ,EAAOoQ,WjC3EpB,MiC4ECmB,EAAkBvR,EAAOuR,oBAC3BC,KAiDJ,OA7CIA,EAHCF,EAAWxc,OAGNwc,EAAWjW,IAAI,SAAAhO,GAAA,OAAc,SAACokB,GAChC,IAAMC,EAAUD,EAAUE,UACpB7S,EAAS4S,EAAQ5S,OACjB8S,EAAeH,EAAUI,kBACzBC,EAAcL,EAAU1O,gBAAgBvE,YACxCL,EAAOuT,EAAQvT,KACfiM,EAASve,OAAOkmB,OAAOH,GAAczL,OAAO,SAACC,EAAKtK,GAEpD,OADAsK,EAAItK,EAAEkW,IAAItmB,MAAQomB,EAAYhW,EAAEkW,IAAItmB,MAAM0e,SACnChE,OAGX,OAAO,SAACpK,GAgBJ,QAfiBmC,EAAKrJ,QAAiBqJ,EAAK8T,KAAK,SAAA5lB,GAAA,OAAOyS,EAAOoT,MAAM,SAACC,GAClE,KAAMA,EAAUzmB,QAAQsQ,GACpB,SAEJ,IAAM5P,EAAQ4P,EAAOmW,EAAUzmB,MAAM0mB,UACrC,GAAIb,GAAmBY,EAAUlkB,OAAS6D,EAAUC,QAChD,OAAO3F,GAASge,EAAO+H,EAAUzmB,MAAM,IAAMU,GAASge,EAAO+H,EAAUzmB,MAAM,GAGjF,GAAIymB,EAAUlkB,OAAS6D,EAAUE,UAC7B,SAEJ,IAAMqU,EAAMuL,EAAaO,EAAUzmB,MAAM2J,MACzC,OAAOqZ,EAAIrI,KAASrK,EAAOmW,EAAUzmB,MAAM0mB,eAzBpB,CA6BhCC,MA/BI,sBjC/EN,QiCkHDjC,EACgBU,GAAmBX,GAAOmC,OAAO,SAAAjlB,GAAA,OAAUmkB,EAAIU,MAAM,SAAA7lB,GAAA,OAAMkmB,EAAGvW,OAC1EwW,aACAlmB,KAAM2F,EAAcG,MAGR0e,GAAmBX,GAAOmC,OAAO,SAAAjlB,GAAA,OAAUmkB,EAAIS,KAAK,SAAA5lB,GAAA,OAAMkmB,EAAGvW,OACzE1P,KAAM2F,EAAcG,IACpBogB,gBAOCC,GAAkB,SAAlBA,GAAmBvC,EAAUwC,EAAUC,EAAcC,GAC9D,IAAMC,EAAS3C,EAASc,MAAM4B,EAAYJ,WACpChT,EA1GkB,SAAfsT,GAAgBtT,EAAYxD,EAAQ0W,EAAU1S,EAAQkQ,GAC/D,IAAM6C,KACFC,GAAqB,EACnB1mB,EAAS0T,EAAT1T,KACF2mB,SACAC,KACAC,EAAgB,SAAhBA,IAAgB,OAAMjD,EAASlM,gBAC7BoP,EAAmB,SAAnBA,EAAmB/lB,GAAA,OAASqlB,EAlDtC,SAA+B1W,EAAQ7Q,GACnC,IAAM6kB,KADgCqD,uBAEtC,QAAAznB,EAAAkV,EAAkB9E,EAAlB9P,OAAA2U,cAAA5U,GAAAL,EAAAkV,EAAAC,QAAAC,MAAA/U,GAAA,EAA0B,KAAjByS,EAAiB9S,EAAAQ,MACtB4jB,EAAKtR,EAAMhT,QAAU,IAAIwT,EAAMR,EAAMkF,aAAazF,KAAKhT,GAAIuT,IAHzB2U,6EAKtC,OAAOrD,EALX,CAmD6BhU,EAAQ3G,GAC7BA,EACA8d,EACAD,IAGAI,SAkBJ,OAhBIA,EADAhnB,IAAS2F,EAAcE,QACb,SAAA9E,GAAA,OAAU+lB,EAAiB/d,IAE3B,SAAAhI,GAAA,OAAS+lB,EAAiB/d,IAGxCkK,EAAmBC,EAAY,SAACrU,GACxBmoB,EAAQnoB,MACmB,IAAvB6nB,GAA4B7nB,IAAO6nB,EAAoB,GACvDC,EAAKF,EAAcje,OAAS,EAC5Bie,EAAcE,GAASF,EAAcE,GAAIvT,MAAM,KAAK,GAApDqT,IAA0D5nB,GAE1D4nB,EAAczZ,KAAdyZ,GAAsB5nB,GAE1B6nB,EAAoB7nB,KAGrB4nB,EAAc5c,KAAK,KA0EP2c,CACfD,EAAOvP,YACPuP,EAAO3B,uBAAuBlV,OAC9B0W,EACAC,EACAzC,GAaJ,OAXA2C,EAAOvP,YAAc9D,EACrBqT,EAAO1B,wBAAwBC,wBAE/BnB,GACIC,EACA2C,EACA1R,EAAeC,QACZpB,OAAQ2S,GACTD,GAGCG,GAGEU,GAAmB,SAAnBA,GAAoBrD,EAAUsD,EAAWxT,EAAQyT,GAC1D,IAAMZ,EAAS3C,EAASc,MAAMhR,EAAOwS,WACjCkB,EAAgBF,EAiBpB,OAhBIxT,EAAO1T,OAAS2F,EAAcE,UAC9BuhB,EAAgBD,EAAUrM,OAAO,SAAA/Z,GAAA,OAA+C,IAAlCmmB,EAAUna,QAAQ6N,MAIpE2L,EAAOlM,eAAiB+M,EAAcvd,KAAK,KAC3C0c,EAAO1B,wBAAwBC,wBAE/BnB,GACIC,EACA2C,EACA1R,EAAeE,SACbmS,YAAWxT,SAAQ2T,gBAAiBD,GACtC,MAGGb,GAGEe,GAAqB,SAArBA,GAAsBC,GAO/B,IALAA,EAAajX,KAAYiX,IACT5lB,OACZ4lB,EAAW5lB,KAAO6D,EAAUE,YAG3B6hB,EAAWlK,QACZ,OAAQkK,EAAW5lB,MACnB,KAAK6D,EAAUC,QACX8hB,EAAWlK,QAAU/X,EAAeC,WACpC,MACJ,QACA,KAAKC,EAAUE,UACX6hB,EAAWlK,QAAUpY,EAAiBC,YAK9C,OAAOqiB,GA6BEC,GAA4B,SAA5BA,GAA4BzmB,GAAA,OAAUyR,EAAOzD,IAAI,SAACwY,GAG3D,OA7B8B,SAACA,GAC/B,IAAME,GAA4BniB,EAAeC,YAC3CmiB,GACFziB,EAAiBC,YACjBD,EAAiBI,OACjBJ,EAAiBE,SACjBF,EAAiBG,KAEbzD,EAAkB4lB,EAAlB5lB,KAAM0b,EAAYkK,EAAZlK,QAEd,OAAQ1b,GACR,KAAK6D,EAAUE,UACX,IAA+C,IAA3CgiB,EAAqB3a,QAAQsQ,GAC7B,MAAM,IAAIvG,MAAJ,4CAAsDuG,GAEhE,MACJ,KAAK7X,EAAUC,QACX,IAAmD,IAA/CgiB,EAAyB1a,QAAQsQ,GACjC,MAAM,IAAIvG,MAAJ,4CAAsDuG,GAEhE,MACJ,QACI,MAAM,IAAIvG,MAAJ,yCAAmDnV,IAtB/B,CA2B9B4lB,EAAaD,GAAmBC,IAEzBA,KAeEI,GAAa,SAAbA,GAAcC,EAAU/V,EAAMW,EAAQ/E,GAC/C+E,EAASgV,GAA0BhV,GACnC/E,EAAUlO,OAAOoU,OAAOpU,OAAOoU,UAAWkU,IAAgBpa,GAC1D,IAAMqa,EAAcC,EAAUta,EAAQiT,YAEtC,IAAMoH,GAAsC,mBAAhBA,EACxB,MAAM,IAAIhR,MAAJ,mCAA6CrJ,EAAQiT,WAArD,WANiD,IAAAlM,EAS3BsT,EAAYjW,EAAMpE,GATSvO,EAAA8oB,GAAAxT,EAAA,GASpDgM,EAToDthB,EAAA,GAS5C+oB,EAT4C/oB,EAAA,IAZ/B,SAACsT,EAAQ0V,GAsBpB1V,EArBV5C,QAAQ,SAAC2X,GACZ,IAAMY,EAAcZ,EAAWa,GAC/B,GAAKD,EAAL,CAEA,IAAMpO,EAAMmO,EAAWnb,QAAQwa,EAAWnoB,MAC1C8oB,EAAWnO,GAAOoO,EAClBZ,EAAWnoB,KAAO+oB,SACXZ,EAAWa,MARM,CAsBX5V,EAAQgO,GACzB,IAAMxO,EAAWoO,GAAa6H,EAAezV,EAAQgO,GAG/C6H,EAAYvW,EAAWC,gBAAgBC,EAAUvE,EAAQrO,MAM/D,OALAwoB,EAASU,mBAAqBD,EAE9BT,EAAS5Q,YAAciR,EAAczf,QAAUyf,EAAc,GAAGzf,OAAzCyf,MAAuDA,EAAc,GAAGzf,OAAS,GAAM,GAC9Gof,EAASvN,eAAkB7H,EAAOzD,IAAI,SAAAhO,GAAA,OAAKwnB,EAAEnpB,OAAOyK,OACpD+d,EAASY,YAAc/a,EAAQiT,aAAe9b,EAAWI,KAAO4M,EAAiBC,GAAQpE,EAAQiT,WAC1FkH,GAGEa,GAAgB,SAAhBA,GAAiBjW,EAAQJ,GAGlC,IAFA,IAAIvT,EAAI,EAEDA,EAAI2T,EAAOhK,SAAU3J,EACxB,GAAIuT,IAAUI,EAAO3T,GAAGO,KACpB,OACIuC,KAAM6Q,EAAO3T,GAAGwe,SAAW7K,EAAO3T,GAAG8C,KACrCoH,MAAOlK,GAInB,OAAO,MA6BL6pB,GAAgC,SAAhCA,GAAiC3C,EAAWZ,GAC9C,IAAMwD,EAAcxD,EAAUyD,iBAC1BC,EAAiB9C,EAAU,GAC3B+C,EAAiB/C,EAAU,GAkB/B,OAhBA4C,EAAY/Y,QAAQ,SAACmZ,GACjB,GAAKA,EAAL,CADgC,IAMjBC,IANiBnqB,EA9BF,SAACkqB,GACnC,IAAIE,KACAnF,SAEJ,OADAA,EAAYiF,EAAW7E,IAEvB,KAAKrP,EAAeC,OAChBmU,GAAUF,EAAW3E,UACrB,MACJ,KAAKvP,EAAeE,QAChBkU,GAAUF,EAAW5E,KAAKkD,iBAC1B,MACJ,KAAKxS,EAAeG,QAChB8O,EAAY,UACZmF,GAAUF,EAAW5E,KAAK+E,cAAc9V,MAAM,KAAM2V,EAAW3E,UAC/D,MACJ,QACIN,EAAY,KAGhB,OACIA,YACAmF,UArB8B,CAmCuBF,GAA7CjF,EALwBjlB,EAKxBilB,UAAWmF,EALapqB,EAKboqB,OACfnF,IACA+E,GAAiBG,KAAelF,GAAfkF,WAA6BC,GAA7BD,SACb9C,iBAEJ4C,GAAiBK,KAAerF,GAAfqF,WAA6BF,GAA7BE,SACbjD,sBAKJ2C,EAAgBC,IAWtBM,GAAuB,SAAvBA,EAAwBjE,EAAWY,GAA8C,IAAnCrS,EAAmCxH,UAAA1D,OAAA,YAAA0D,UAAA,GAAAA,UAAA,MAAtBmd,EAAsBnd,UAAA1D,OAAA,YAAA0D,UAAA,GAAAA,UAAA,MAC7Eod,EAAqBD,EAAaC,mBAClCC,EAAgBF,EAAaE,kBAE/BpE,IAAcmE,MAIAC,EAAc/gB,SAA+C,IAAtC+gB,EAAcxc,QAAQoY,KAElDA,EAAUqE,kBAAkBzD,EAAWrS,GAEnCyR,EAAUsE,UAClB7Z,QAAQ,SAAC8Z,GAAU,IAAA7qB,EACe6pB,GAA8B3C,EAAW2D,GADxDpqB,EAAA0oB,GAAAnpB,EAAA,GACnBgqB,EADmBvpB,EAAA,GACHwpB,EADGxpB,EAAA,GAExB8pB,EAAqBM,GAAQb,EAAgBC,GAAiBpV,EAAQ2V,OA0BjEM,GAA2B,SAA3BA,GAA4BC,EAAaC,EAAYC,EAAgBpW,GAC9E,IAAI0Q,SACA2B,SACIgE,EAA4CD,EAA5CC,qBAAsBC,EAAsBF,EAAtBE,kBACxBC,EAAsBH,EAAeI,SACrCC,EAA8BzW,EAAOyW,4BAMvCC,KAEJ,GAAoB,OAAhBR,QAAwBlW,EAAO2W,WAC/BD,IACIhG,kBAED,KAAAtjB,EACCwpB,EAAkB/qB,OAAOkmB,OAAOsE,EAAqBQ,qBACrDP,IACAM,EAAkBA,EAAgBxP,OAAO,SAAA/Z,GAAA,OAAK5B,EAAEuU,OAAOwW,WAAaD,KAGxE,IAAMO,EAAmBF,EAAgBxP,OAjB5B,SAAC2P,GAEd,OADe/W,EAAO0C,UAAa,sBACrBqU,EAAO/W,KAeqC3E,IAAI,SAAAhO,GAAA,OAAU2pB,EAAOhX,OAAO0Q,WAEhFmF,KAEN,QAAIS,EAA6B,CAC7B,IAAMW,EAAwBprB,OAAOkmB,OAAOsE,EAAqBQ,gBAEjEI,EAAsB/a,QAAQ,SAACgb,GAC3B,IAAMC,EAAaD,EAAUlX,YACzBmX,EAAWC,eAA2BD,EAAWH,SAAWhX,EAAOgX,QAC/DG,EAAWX,WAAaD,IAC5BV,EAAcvc,KAAK4d,EAAU/G,QAC7BO,EAAWuG,EAAsB7P,OAAO,SAAA/a,GAAA,OAAKZ,IAAMyrB,IAAW7b,IAAI,SAAAhO,GAAA,OAAK5B,EAAEuU,OAAO0Q,YACvE5b,QAAU4hB,EAAUpd,MACzBoX,WACA2G,OAAQH,EAAU/G,MAClBmH,KA/CU,SAACnH,GAC/B,IADoD,IAAdmH,EAAc9e,UAAA1D,OAAA,YAAA0D,UAAA,GAAAA,UAAA,MAC7C2X,EAAMoH,SACTD,EAAKhe,KAAK6W,GACVA,EAAQA,EAAMoH,QAElB,OAAOD,EALuB,CA+CeJ,EAAU/G,YAOnDO,GAAW8G,MAAGxI,OAAHwI,qBAAiBV,IAAkBZ,KAAc9O,OAAO,SAAA/Z,GAAA,OAAW,OAAN5B,IACxEirB,EAAUpd,MACNoX,WACAmF,wBAAmBA,EAAnBA,GAAqC7V,EAAO6V,sBAIpD,IAAM4B,EAAYtB,EAAWhG,MAEvBuH,EAAa7rB,OAAOoU,QACtB0X,kBAAmBzB,EACnBK,uBACDvW,GAEG4X,EAAmBzB,EAAW0B,aAChCpB,GAA+BmB,IAC/BvF,EAAYhB,GAAuBuG,EAAkBlH,GACjDa,gBAAiBkF,IAErBf,GAAqBkC,EAAkBvF,EAAWqF,IAGtDhB,EAAUxa,QAAQ,SAAC4b,GACf,IAAMC,EAAmB1G,GAAuBoG,EAAWK,EAAIpH,UACzD4G,EAAOQ,EAAIR,KAEjB,GAAIA,EAAM,CACN,IAAMU,EA1HO,SAAC3F,EAAWiF,GACjC,IAAK,IAAInsB,EAAI,EAAG0Q,EAAMyb,EAAKxiB,OAAQ3J,EAAI0Q,EAAK1Q,IAAK,CAC7C,IAAMglB,EAAQmH,EAAKnsB,GACnBknB,EAAY2C,GAA8B3C,EAAWlC,GAEzD,OAAOkC,EALc,CA0H0B0F,EAAkBT,EAAKW,WAC9DH,EAAIT,OAAOvB,kBAAkBkC,EAAeN,QAE5ChC,GAAqB+B,EAAWM,EAAkBL,GAC9C7B,cAAeiC,EAAIjC,cACnBD,mBAAoBa,GAA+BmB,6PCgHpDM,cA3jBX,SAAA7qB,KAAA,SAAAA,EAAAhB,GAAA,KAAAgB,aAAAhB,GAAA,UAAA6U,UAAA,sCAAwBiX,QACpB,IAAIC,SAEJhlB,KAAKmkB,QAAU,KACfnkB,KAAKmd,eACLnd,KAAKyd,uBACLzd,KAAK2iB,aANeoC,2BAAR5C,EAAQ4C,qBAAR5C,EAAQ4C,gBAQE,IAAlB5C,EAAOzgB,SAAkBsjB,EAAS7C,EAAO,cAAe8C,GAExDjlB,KAAKuT,eAAiByR,EAAOzR,eAC7BvT,KAAKkQ,YAAc8U,EAAO9U,YAC1BlQ,KAAK0hB,YAAcsD,EAAOtD,YAC1B1hB,KAAKmkB,QAAUa,EACfhlB,KAAKwhB,mBAAqBxhB,KAAKmkB,QAAQ3C,mBACvCxhB,KAAKklB,gBAAkB5a,IACvBtK,KAAK+d,wBAAwBC,0BAE7B6C,GAAUsE,cAACnlB,MAAX6gB,OAAoBsB,IACpBniB,KAAKklB,gBAAkBllB,KAAKwhB,mBAAmBlpB,KAC/C0H,KAAK+d,wBAAwBC,wBAC7Bhe,KAAKolB,uBACD3B,kBACA4B,2EA0BR,OAAOrlB,KAAK2P,gBAAgB/G,OAAOX,IAAI,SAAAhO,GAAA,OAAK5B,EAAEqT,mDAY9C,OAAO1L,KAAKklB,8DAIZ,OAAOllB,KAAKslB,kEAMZ,OAFAtlB,KAAKslB,YDpEe,SAAfC,GAAetrB,EAA8B4jB,EAAmB2H,GAAmB,IAAA3sB,EAAAqoB,GAAAjnB,EAAA,GAAlEmS,EAAkEvT,EAAA,GAAtD4sB,EAAsD5sB,EAAA,GACxF6sB,EAASD,EAAc/jB,OAAS+jB,EAAcnZ,MAAM,QACpDqZ,EAAkB9H,EAAkBzS,YACpCwa,EAAYF,EAAOzd,IAAI,SAAAhO,GAAA,OT+BxB,SAAoCuW,EAAcpE,GAAY,IACzDV,EAAW8E,EAAX9E,OAER,OAAQA,EAAO7Q,MACf,KAAK6D,EAAUC,QACX,OAAQ+M,EAAO6K,SACf,KAAK/X,EAAeC,WAEpB,QACI,OAAO,IAAI2Z,GAAW5H,EAAcpE,GAE5C,KAAK1N,EAAUE,UACX,OAAQ8M,EAAO6K,SACf,KAAKpY,EAAiBC,YAClB,OAAO,IAAIyY,GAAYrG,EAAcpE,GACzC,KAAKjO,EAAiBE,SAClB,OAAO,IAAI6Y,GAAS1G,EAAcpE,GACtC,KAAKjO,EAAiBI,OAClB,OAAO,IAAIsZ,GAAOrH,EAAcpE,GACpC,QACI,OAAO,IAAIyK,GAAYrG,EAAcpE,GAE7C,QACI,OAAO,IAAIyK,GAAYrG,EAAcpE,IAvBtC,CS/B2DuZ,EAAgBE,GAAMrV,aAAcpE,KAClG,OAAOpB,EAAWC,gBAAgB2a,EAAWJ,GCgEtBD,EAAcvlB,KAAKkQ,YAAalQ,KAAKuT,gBACnDvT,KAAK8d,uBAAwB9d,KAAKklB,iBAChCllB,0DAIP,OAAOA,KAAKwhB,sDAiCVsE,EAAUxW,GACZ,OAAOH,EAAanP,KAAM8lB,EAAUxW,6CAuB3BwW,GACT,OAAO3W,EAAanP,KAAM8lB,EAAUlQ,GAAkB5V,KAAM8lB,UAAWxsB,IAAA,QAAAN,MAAA,SAAAA,MAqBpE+sB,GACH,OAAOhQ,GAAM/V,KAAM+lB,4CAoBXC,GACR,OAAO9S,EAAWlT,KAAMgmB,wCAkDpB1G,EAAU1S,GACd,IAAMqZ,GACF/sB,KAAM2F,EAAcC,OACpBsgB,cAIEI,GAAgBJ,WAFtBxS,EAASnU,OAAOoU,UAAWoZ,EAAWrZ,IAEEwS,WA0BxC,OAvBIxS,EAAO1T,OAAS2F,EAAcG,KACbqgB,GACbrf,KACAsf,GACEpmB,KAAM2F,EAAcC,QACtB0gB,GAEaH,GACbrf,KACAsf,GACEpmB,KAAM2F,EAAcE,SACtBygB,IAIEH,GACFrf,KACAsf,EACA1S,EACA4S,MAID0G,qCAsBP,OAAQlmB,KAAKkQ,YAAYxO,SAAW1B,KAAKuT,eAAe7R,6CAUnC,IAAlB0d,IAAkBha,UAAA1D,OAAA,YAAA0D,UAAA,KAAAA,UAAA,GACfuY,EAAW,IAAI3d,KAAKmmB,YAAYnmB,MAMtC,OALIof,EACAzB,EAASyI,UAAUpmB,MAEnB2d,EAASyI,UAAU,MAEhBzI,wCA8CFyC,EAAWxT,GAChB,IAAMqZ,GACF/sB,KAAM2F,EAAcC,OACpBsgB,cAEJxS,EAASnU,OAAOoU,UAAWoZ,EAAWrZ,GACtC,IAAMyZ,EAAcrmB,KAAKye,kBACnB4B,EAAY5nB,OAAOqN,KAAKugB,GACtBntB,EAAS0T,EAAT1T,KAEJotB,EAAsBlG,EAAUrN,OAAO,SAACC,EAAK1H,GAM7C,MAL+B,WAA3BA,EAAM6a,YAAY7tB,KAClB0a,EAAI9M,KAAJ8M,+HAAYqN,EAAUrM,OAAO,SAAA/Z,GAAA,OAA0C,IAA7B6Z,EAAUyS,OAAOjb,OACpDA,KAAS+a,GAChBrT,EAAI9M,KAAKoF,GAEN0H,OAGXsT,EAAsBzd,MAAMG,KAAK,IAAI+N,IAAIuP,IAAsBre,IAAI,SAAAhO,GAAA,OAASqR,EAAMqN,SAkBlF,OAfIzf,IAAS2F,EAAcG,KACDmhB,GAAiBngB,KAAMsmB,GACzCptB,KAAM2F,EAAcC,OACpBsgB,UAAWxS,EAAOwS,WACnBiB,GACkBF,GAAiBngB,KAAMsmB,GACxCptB,KAAM2F,EAAcE,QACpBqgB,UAAWxS,EAAOwS,WACnBiB,IAGmBF,GAAiBngB,KAAMsmB,EAAqB1Z,EAAQyT,MAIvEhC,6CAIP,OAAOre,KAAKwmB,mEAWZ,OAPAxmB,KAAKwmB,aAAexmB,KAAKslB,YAAY1c,OAAOmK,OAAO,SAACC,EAAKyT,EAAU1uB,GAK/D,OAJAib,EAAIyT,EAASnuB,SACT2J,MAAOlK,EACP6mB,IAAK6H,EAAS/a,UAEXsH,OAEJhT,6CAWPA,KAAKmkB,SAAWnkB,KAAKmkB,QAAQuC,YAAY1mB,MACzCA,KAAKmkB,QAAU,KACfnkB,KAAK2iB,UAAU7Z,QAAQ,SAAC8Z,GACpBA,EAAMuB,QAAU,OAEpBnkB,KAAK2iB,uDA6BIC,GACT,IAAI3P,EAAMjT,KAAK2iB,UAAUgE,UAAU,SAAA1tB,GAAA,OAAW2tB,IAAYhE,KACjD,IAAT3P,GAAajT,KAAK2iB,UAAUrb,OAAO2L,EAAK,MAAA3Z,IAAA,YAAAN,MAAA,SAAAA,MAQjC6tB,GACP7mB,KAAKmkB,SAAWnkB,KAAKmkB,QAAQuC,YAAY1mB,MACzCA,KAAKmkB,QAAU0C,EACfA,GAAUA,EAAOlE,UAAUzc,KAAKlG,gDA4BhC,OAAOA,KAAKmkB,oDA6BZ,OAAOnkB,KAAK2iB,yDA4BZ,OAAO3iB,KAAKmd,mEA4BZ,OAAOnd,KAAKyd,0BAILqH,GAJKrH,qoBCwGLzM,eAlnBX,SAAA/X,IAAsB,IAAAgB,GAAA,SAAAA,EAAAhB,GAAA,KAAAgB,aAAAhB,GAAA,UAAA6U,UAAA,sCAAA9N,KAAA/G,GAAA,QAAAO,EAAA4L,UAAA1D,OAANsF,EAAM6B,MAAArP,GAAAW,EAAA,EAAAA,EAAAX,EAAAW,IAAN6M,EAAM7M,GAAAiL,UAAAjL,GAAA,IAAApC,EAAA,SAAAkC,EAAAhB,GAAA,IAAAgB,EAAA,UAAA6sB,eAAA,oEAAA7tB,GAAA,UAAAiB,QAAAjB,IAAA,mBAAAA,EAAAgB,EAAAhB,EAAA,CAAA+G,MAAA/F,EAAAhB,EAAA8tB,WAAAtuB,OAAAuuB,eAAA/tB,IAAAf,KAAAqP,MAAAtN,GAAA+F,MAAA4b,OACT5U,KADS,OAGlBmO,EAAK8R,kBAHalvB,EAAA,gBAAAkC,EAAAhB,GAAA,sBAAAA,GAAA,OAAAA,EAAA,UAAA6U,UAAA,2DAAA5T,QAAAjB,IAAAgB,EAAAJ,UAAApB,OAAAY,OAAAJ,KAAAY,WAAAssB,aAAAntB,MAAAiB,EAAAtB,YAAA,EAAAsT,UAAA,EAAAD,cAAA,KAAA/S,IAAAR,OAAAyuB,eAAAzuB,OAAAyuB,eAAAjtB,EAAAhB,GAAAgB,EAAA8sB,UAAA9tB,GAAA,CAAAA,EArCF6rB,8CAuGXne,GAQLA,EAAUlO,OAAOoU,WANbsa,MAAO,MACP/kB,UAAW,KACXglB,WACAC,gBACA7T,SAEoC7M,GACxC,IAAMiC,EAAS5I,KAAK8d,uBAAuBlV,OAErC0e,E/BQP,SAASC,EAAaC,EAAYpb,EAAYqZ,EAAegC,EAAgB9gB,GAChF,IAMM+gB,GACFhc,UACAX,QACA4c,SAEEC,GAPNjhB,EAAUlO,OAAOoU,WAHb+a,UACAC,eAEoClhB,IAOjBihB,OACjBE,EAAaL,GAAkBA,EAAe/lB,OAAS,EAEvDqmB,KAiDN,GA/CgBtC,EAAcnZ,MAAM,KAE5BxD,QAAQ,SAACkf,GACb,IAAK,IAAIjwB,EAAI,EAAGA,EAAIyvB,EAAW9lB,OAAQ3J,GAAK,EACxC,GAAIyvB,EAAWzvB,GAAGO,SAAW0vB,EAAS,CAClCD,EAAW7hB,KAAKshB,EAAWzvB,IAC3B,SAMZgwB,EAAWjf,QAAQ,SAACwC,GAEhBoc,EAAOhc,OAAOxF,KAAKoF,EAAMI,YAGzBkc,GACAF,EAAOhc,OAAOxF,MACV5N,KAAM,MACNuC,KAAM,eAIdsR,EAAmBC,EAAY,SAACrU,GAC5B2vB,EAAO3c,KAAK7E,SACZ,IAAM+hB,EAAYP,EAAO3c,KAAKrJ,OAAS,EAEvCqmB,EAAWjf,QAAQ,SAACwC,EAAO+E,GACvBqX,EAAO3c,KAAKkd,GAAW5X,EAFf,GAE6B/E,EAAMkF,aAAazF,KAAKhT,KAE7D6vB,IACAF,EAAO3c,KAAKkd,GAAWF,EAAWrmB,QAAU3J,GAGhD2vB,EAAOC,KAAKzhB,KAAKnO,GAIb+vB,GAAcJ,EAAO3c,KAAKkd,GAAW/hB,KAAKnO,KAI9C+vB,GA7HR,SAAkBxJ,EAASmJ,GAOvB,IAPuC,IAC/B1c,EAAiBuT,EAAjBvT,KAAMW,EAAW4S,EAAX5S,OACVoI,SACAoU,SACAC,SACApwB,EAAI0vB,EAAe/lB,OAAS,EAEzB3J,GAAK,EAAGA,IACX+b,EAAY2T,EAAe1vB,GAAG,GAC9BmwB,EAAWT,EAAe1vB,GAAG,IAC7BowB,EAAWxG,GAAcjW,EAAQoI,MAO7BzJ,EAAW6d,GAEX9W,EAAUrG,EAAM,SAAC5Q,EAAGiJ,GAAJ,OAAU8kB,EAAS/tB,EAAEguB,EAASlmB,OAAQmB,EAAE+kB,EAASlmB,UAC1DmI,EAAQ8d,GAAW,WAC1B,IAAM7V,EAAcH,EAAUnH,EAAMod,EAASlmB,OACvCmmB,EAAYF,EAASA,EAASxmB,OAAS,GACvCkR,EAAesV,EAAS7M,MAAM,EAAG6M,EAASxmB,OAAS,GACnDmR,EAAqBD,EAAa3K,IAAI,SAAAhO,GAAA,OAAK0nB,GAAcjW,EAAQqP,KAEvE1I,EAAYvJ,QAAQ,SAAC6J,GACjBA,EAAazM,KAAKwM,EAAmBC,EAAcC,EAAcC,MAGrEzB,EAAUiB,EAAa,SAAClY,EAAGiJ,GACvB,IAAMjL,EAAIgC,EAAE,GACNX,EAAI4J,EAAE,GACZ,OAAOglB,EAAUjwB,EAAGqB,KAIxBuR,EAAKrJ,OAAS,EACd2Q,EAAYvJ,QAAQ,SAACwJ,GACjBvH,EAAK7E,KAAL6E,UAAauH,EAAM,OAnBG,IAsB1B4V,EAA8C,SAAnC3hB,OAAO2hB,GAAUzmB,cAA2B,OAAS,MAChE2P,EAAUrG,EAAM+G,EAAUqW,EAASttB,KAAMqtB,EAAUC,EAASlmB,UAIpEqc,EAAQqJ,QACR5c,EAAKjC,QAAQ,SAAC9P,GACVslB,EAAQqJ,KAAKzhB,KAAKlN,EAAMqvB,SAjDhC,CA8HiBX,EAAQD,GAGjB9gB,EAAQkhB,WAAY,CACpB,IAAMS,EAAUzf,qBAASA,MAAM6e,EAAOhc,OAAOhK,UAASuG,IAAI,sBAC1Dyf,EAAO3c,KAAKjC,QAAQ,SAACwH,GACjBA,EAAMxH,QAAQ,SAACiC,EAAMhT,GACjBuwB,EAAQvwB,GAAGmO,KAAK6E,OAGxB2c,EAAO3c,KAAOud,EAGlB,OAAOZ,G+BlF+BxvB,KAC9B8H,KACAA,KAAK8d,uBAAuBlV,OAC5B5I,KAAKkQ,YACLvJ,EAAQ0gB,aAAeze,EAAOX,IAAI,SAAAhO,GAAA,OAAK5B,EAAEC,SAAQyK,OAAS/C,KAAKuT,eAC/D5M,EAAQ6M,MAEJqU,WAA8B,WAAlBlhB,EAAQwgB,MACpBS,SAAUjhB,EAAQygB,UAI1B,IAAKzgB,EAAQvE,UACT,OAAOklB,EAxBG,IA2BNllB,EAAcuE,EAAdvE,UACA2I,EAAuBuc,EAAvBvc,KAAMW,EAAiB4b,EAAjB5b,OAAQic,EAASL,EAATK,KAChBY,EAAa7c,EAAOzD,IAAK,SAAAhO,GAAA,OAAKA,EAAE3B,OAEhCkwB,EADgB/vB,OAAOqN,KAAK1D,GACA2Q,OAAO,SAACC,EAAKrF,GAC3C,IAAMsF,EAAMsV,EAAWtiB,QAAQ0H,GAI/B,OAHa,IAATsF,GACAD,EAAI9M,MAAM+M,EAAK7Q,EAAUuL,KAEtBqF,OAiCX,MA9BsB,WAAlBrM,EAAQwgB,MACRqB,EAAY1f,QAAQ,SAAC2f,GACjB,IAAMC,EAAOD,EAAK,GACZE,EAAQF,EAAK,GAEnB1d,EAAK2d,GAAM5f,QAAQ,SAACwJ,EAAOsW,GACvB7d,EAAK2d,GAAME,GAAYD,EAAMzwB,YAEzBoa,EACAqV,EAAKiB,GACLld,EAAOgd,QAKnB3d,EAAKjC,QAAQ,SAACwJ,EAAOsW,GACjBJ,EAAY1f,QAAQ,SAAC2f,GACjB,IAAMC,EAAOD,EAAK,GACZE,EAAQF,EAAK,GAEnBnW,EAAMoW,GAAQC,EAAMzwB,YAEhBoa,EAAMoW,GACNf,EAAKiB,GACLld,EAAOgd,QAMhBpB,wCA2BFuB,GAAwD,IAA7CC,EAA6C1jB,UAAA1D,OAAA,YAAA0D,UAAA,GAAAA,UAAA,MAA9BwH,EAA8BxH,UAAA1D,OAAA,YAAA0D,UAAA,GAAAA,UAAA,IAAnBga,cACpCgD,KAAmByG,EAAU9lB,OAE7BgmB,ECzKd,SAASC,GAAS3K,EAAWnT,EAAU4d,EAAUG,GAC7C,IAAMC,EAxDV,SAAsB7K,EAAWnT,GAC7B,IAAM8D,KAEAma,EADa9K,EAAU1O,gBACChE,eAY9B,OAVAlT,OAAOyc,QAAQiU,GAAYrgB,QAAQ,SAAA7O,GAAW,IAATX,EAASqc,GAAA1b,EAAA,MACtCiR,GAAYA,EAASxJ,QACU,IAA3BwJ,EAASjF,QAAQ3M,IACjB0V,EAAO9I,KAAK5M,GAGhB0V,EAAO9I,KAAK5M,KAIb0V,EAfX,CAwDkCqP,EAAWnT,GACnCke,EAhCV,SAAwB/K,GAA0B,IAAfyK,EAAe1jB,UAAA1D,OAAA,YAAA0D,UAAA,GAAAA,UAAA,MACxCsiB,KAEA2B,EADahL,EAAU1O,gBACDpE,aACtB+d,EAAa5T,GAAa6T,iBAchC,OAZA9wB,OAAOqN,KAAKujB,GAAUvgB,QAAQ,SAAC0gB,GACU,iBAA1BV,EAASU,KAChBV,EAASU,GAAeH,EAASG,GAAatR,YAElD,IAAMuR,EAAY/T,GAAagU,QAAQZ,EAASU,IAC5CC,EACA/B,EAAO8B,GAAeC,GAEtB/B,EAAO8B,GAAeF,EACtBR,EAASU,GAAexU,MAGzB0S,EAlBX,CAgCqCrJ,EAAWyK,GACtCtB,EAAanJ,EAAU1O,gBACvBga,EAAgBnC,EAAWpc,YAC3Bwe,EAASpC,EAAWlvB,KACpBuxB,KACAC,KACApe,KACAyG,KACApH,KACFge,SAGJtwB,OAAOyc,QAAQyU,GAAe7gB,QAAQ,SAAA7O,GAAkB,IAAAhB,EAAA0c,GAAA1b,EAAA,GAAhBX,EAAgBL,EAAA,GAAXD,EAAWC,EAAA,GACpD,IAAgC,IAA5BiwB,EAAUjjB,QAAQ3M,IAAe8vB,EAAW9vB,GAG5C,OAFAoS,EAAOxF,KAAKsD,KAAYxQ,EAAM0S,WAEtB1S,EAAM0S,SAAS7Q,MACvB,KAAK6D,EAAUC,QACXmrB,EAAW5jB,KAAK5M,GAChB,MACJ,QACA,KAAKoF,EAAUE,UACXirB,EAAa3jB,KAAK5M,MAK9B,IAAIywB,EAAW,EACf5d,EAAmBkS,EAAUnO,YAAa,SAACnY,GACvC,IAAI+e,EAAO,GACX+S,EAAa/gB,QAAQ,SAAC2Y,GAClB3K,EAAUA,EAAVA,IAAkB6S,EAAclI,GAAGjR,aAAazF,KAAKhT,cAErDoa,EAAQ2E,IACR3E,EAAQ2E,GAAQiT,EAChBhf,EAAK7E,SACL2jB,EAAa/gB,QAAQ,SAAC2Y,GAClB1W,EAAKgf,GAAUtI,GAAKkI,EAAclI,GAAGjR,aAAazF,KAAKhT,KAE3D+xB,EAAWhhB,QAAQ,SAAC2Y,GAChB1W,EAAKgf,GAAUtI,IAAMkI,EAAclI,GAAGjR,aAAazF,KAAKhT,MAE5DgyB,GAAY,GAEZD,EAAWhhB,QAAQ,SAAC2Y,GAChB1W,EAAKoH,EAAQ2E,IAAO2K,GAAGvb,KAAKyjB,EAAclI,GAAGjR,aAAazF,KAAKhT,QAM3E,IAAI+nB,KACAC,EAAgB,SAAhBA,IAAgB,OAAM1B,EAAUzN,gBAcpC,OAbA7F,EAAKjC,QAAQ,SAACwS,GACV,IAAMhL,EAAQgL,EACdwO,EAAWhhB,QAAQ,SAAC2Y,GAChBnR,EAAMmR,GAAK2H,EAAW3H,GAAGnG,EAAImG,GAAI1B,EAAeD,OAGpDmJ,GACAA,EAAkBlL,wBAClBgL,EAAeE,GAGfF,EAAe,IAAI/S,GAAUjL,EAAMW,GAAUpT,KAAMsxB,IAEhDb,GDqGkBC,cADPhpB,KAAM6oB,EAAWC,IAiB/B,OAdAjM,GACI7c,KACA+oB,EACAhb,EAAeG,SACb2a,YAAWzG,gBAAemH,eAAgB7T,GAAa6T,kBACzDT,GAGAlc,EAAOwS,UACP2J,EAAa3C,UAAUpmB,MAEvB+oB,EAAa3C,UAAU,MAGpB2C,qCAsDLtB,GAA+C,IAA/B7a,EAA+BxH,UAAA1D,OAAA,YAAA0D,UAAA,GAAAA,UAAA,IAApBga,cACvB4K,EAAUhqB,KAAKue,SACjB4I,MAAO,MACP3T,KAAMiU,IAGJwC,GADSD,EAAQte,OAAOzD,IAAI,SAAAhO,GAAA,OAASqR,EAAMhT,QACnBsjB,OAAOoO,EAAQjf,MAEvCmf,EAAW,IAAIlqB,KAAKmmB,YAAY8D,EAAcD,EAAQte,QAAUkO,WAAY,WAgBlF,OAdAiD,GACI7c,KACAkqB,EACAnc,EAAeO,KACf1B,EACA6a,GAGA7a,EAAOwS,UACP8K,EAAS9D,UAAUpmB,MAEnBkqB,EAAS9D,UAAU,MAGhB8D,0CAwBArvB,EAAM8L,GACb9L,EAAOA,GAAQmF,KAAK0hB,YACpB/a,EAAUlO,OAAOoU,WAAaqP,eAAgB,KAAOvV,GAErD,IAAMiC,EAAS5I,KAAK2P,gBAAgB/G,OAC9BuhB,EAAUvhB,EAAOX,IAAI,SAAAhO,GAAA,OAAK8gB,EAAEoG,kBAC5BiJ,EAAYD,EAAQ,GAAGzoB,OACzB2oB,SACAC,SACAC,SAEJ,GAAI1vB,IAASiD,EAAWC,UAEpB,IADAssB,KACKC,EAAS,EAAGA,EAASF,EAAWE,IAAU,CAC3C,IAAMhP,KACN,IAAKiP,EAAS,EAAGA,EAAS3hB,EAAOlH,OAAQ6oB,IACrCjP,EAAI1S,EAAO2hB,GAAQjyB,QAAU6xB,EAAQI,GAAQD,GAEjDD,EAAenkB,KAAKoV,QAErB,GAAIzgB,IAASiD,EAAWE,QAAS,CAEpC,IADAqsB,GAAkBzhB,EAAOX,IAAI,SAAAhO,GAAA,OAAK8gB,EAAEziB,SAAQyK,KAAK4D,EAAQuV,iBACpDoO,EAAS,EAAGA,EAASF,EAAWE,IAAU,CAC3C,IAAMhP,KACN,IAAKiP,EAAS,EAAGA,EAAS3hB,EAAOlH,OAAQ6oB,IACrCjP,EAAIpV,KAAKikB,EAAQI,GAAQD,IAE7BD,EAAenkB,KAAKoV,EAAIvY,KAAK4D,EAAQuV,iBAEzCmO,EAAiBA,EAAetnB,KAAK,UAClC,IAAIlI,IAASiD,EAAWG,QAU3B,MAAM,IAAI+R,MAAJ,aAAuBnV,EAAvB,qBARN,IADAwvB,GAAkBzhB,EAAOX,IAAI,SAAAhO,GAAA,OAAK8gB,EAAEziB,UAC/BgyB,EAAS,EAAGA,EAASF,EAAWE,IAAU,CAC3C,IAAMhP,KACN,IAAKiP,EAAS,EAAGA,EAAS3hB,EAAOlH,OAAQ6oB,IACrCjP,EAAIpV,KAAKikB,EAAQI,GAAQD,IAE7BD,EAAenkB,KAAKoV,IAM5B,OAAO+O,yCAGD/e,GACN,IAAMwI,EAAYxI,EAAMhT,OACxB0H,KAAKuT,gBAALvT,IAA2B8T,EAC3B,IAAM+J,EAAoB7d,KAAKwhB,mBAE/B,GAAK3D,EAAkBzS,YAAYE,EAAMhT,QAElC,CACH,IAAMyQ,EAAa8U,EAAkBjV,OAAO+d,UAAU,SAAA1sB,GAAA,OAAauwB,EAAUlyB,SAAWwb,IACxF/K,GAAc,IAAM8U,EAAkBjV,OAAOG,GAAcuC,QAH3DuS,EAAkBjV,OAAO1C,KAAKoF,GAYlC,OALAuS,EAAkBxS,iBAAmB,KACrCwS,EAAkBhS,iBAAmB,KACrCgS,EAAkBpS,eAAiB,KAEnCzL,KAAK+d,wBAAwBC,wBACtBhe,qDAuCQ0L,EAAQ+e,EAAY7d,GAAQ,IAAA/T,EAAAmH,KAC3C0L,EAAS8U,GAAmB9U,GAC5BkB,EAASnU,OAAOoU,WAAauS,aAAiBsL,eAAqB9d,GAEnE,IAAM4R,EAAexe,KAAKye,kBACpBkM,EAAUF,EAAWpP,MAAM,EAAGoP,EAAW/oB,OAAS,GAClDkpB,EAAaH,EAAWA,EAAW/oB,OAAS,GAElD,GAAI8c,EAAa9S,EAAOpT,QAAUsU,EAAO8d,WACrC,MAAM,IAAI1a,MAAStE,EAAOpT,KAApB,sCAGV,IAAMuyB,EAAkBF,EAAQ1iB,IAAI,SAACqD,GACjC,IAAMwf,EAAYtM,EAAalT,GAC/B,IAAKwf,EAED,MAAM,IAAI9a,MAAS1E,EAAb,gCAEV,OAAOwf,EAAU7oB,QAGf2b,EAAQ5d,KAAK4d,MAAMhR,EAAOwS,WAE1B2L,EAAKnN,EAAMjO,gBAAgB/G,OAC3BoiB,EAAiBH,EAAgB5iB,IAAI,SAAAhO,GAAA,OAAO8wB,EAAG9X,KAEjD6M,KACAC,EAAgB,SAAhBA,IAAgB,OAAMzK,EAAK1E,gBAEzBqa,KACN9e,EAAmByR,EAAM1N,YAAa,SAACnY,GACnC,IAAMmzB,EAAaF,EAAe/iB,IAAI,SAAAhP,GAAA,OAASqS,EAAMkF,aAAazF,KAAKhT,KACvEkzB,EAAelzB,GAAK6yB,sIAAcM,GAAdN,QAA0B7yB,EAAGgoB,EAAeD,OAhCzB,IAAAqL,EAkC3B7R,IAAc2R,IAAkBvf,IAAUA,EAAOpT,OAA1DgT,EAlCoC8f,GAAAD,EAAA,MA6C3C,OAVAvN,EAAMyN,SAAS/f,GAEfuR,GACI7c,KACA4d,EACA7P,EAAeK,SACbxB,OAAQlB,EAAQ9C,OAAQ+hB,GAC1BC,GAGGhN,0CAWAkF,GAA2D,IAA9ClW,EAA8CxH,UAAA1D,OAAA,YAAA0D,UAAA,GAAAA,UAAA,MAAjCkmB,EAAiClmB,UAAA,GAAjBkf,EAAiBlf,UAAA1D,OAAA,YAAA0D,UAAA,GAAAA,UAAA,MAC5DmmB,EAAkB3e,EAAO2e,gBACzBpI,EAAsBvW,EAAOwW,SAC7BoI,EAAU5e,EAAO4e,QACjBnH,EF7HkB,SAACtH,GAC7B,KAAOA,EAAMoH,SACTpH,EAAQA,EAAMoH,QAElB,OAAOpH,EAJqB,CE6HW/c,MAC7BijB,EAAuBoB,EAAUe,sBAEjCrC,GACF0B,aFxIuB,SAAC1H,GAChC,KAAOA,EAAMoH,SAAWpH,EAAMI,YAAYsO,KAAK,SAAAxxB,GAAA,OAAK5B,EAAE+kB,KAAOrP,EAAeG,WACxE6O,EAAQA,EAAMoH,QAElB,OAAOpH,EAJwB,CEsIkB/c,MAGzC+c,MAAOsH,GAgBX,OAbAiH,GFd0B,SAACrI,GAA6C,IAAvBrW,EAAuBxH,UAAA1D,OAAA,YAAA0D,UAAA,GAAAA,UAAA,MAAV2X,EAAU3X,UAAA,GACxEsmB,SACEH,EAAkB3e,EAAO2e,gBACzBjO,EAAW1Q,EAAO0Q,SAClBhkB,EAASsT,EAAOgX,OAAhBtqB,IAA0BsT,EAAOwW,SAGnCsI,EADAH,EACkBtI,EAAqBQ,eAErBR,EAAqBoC,iBAG1B,OAAb/H,SACOoO,EAAgBpyB,GAEvBoyB,EAAgBpyB,IACZyjB,QACAnQ,UAjBsB,CEcWqW,EAAsBrW,EAAQ5M,MACnE6iB,GAAyBC,EAAaC,GAAcE,uBAAsBG,SAAUD,GAChF1qB,OAAOoU,QACH2e,WACD5e,IAEH2e,GFxC6B,SAACtI,EAAsBF,EAAYC,GACxE,IAAMqC,EAAmBpC,EAAqBoC,iBAE9C,IAAK,IAAMzB,KAAUyB,EAAkB,CACnC,IACMtB,EADYsB,EAAiBzB,GACNhX,OACvBuW,EAAsBH,EAAepW,OAAOwW,SAC5CuI,GAAwB3I,EAAesB,WAAWqH,uBACpD3I,EAAesB,WAAWqH,sBAAsB5H,EAAYf,EAAepW,QAC/E,GAAImX,EAAWX,WAAaD,GAAuBwI,EAAuB,CACtE,IAAMC,EAAgB7H,EAAWzG,SACjCuF,GAAyB+I,EAAe7I,GACpCE,uBACAC,qBACAE,SAAUD,GACXY,KAf0B,CEyCHd,EAAsBF,GAC5CnW,SACA0X,eAIDtkB,sCAUP6rB,EAAWxf,GACX,OAAQwf,GACR,InCpiBmB,cmCqiBf7rB,KAAKinB,eAAe/gB,KAAKmG,GAG7B,OAAOrM,+CASE6rB,GACT,OAAQA,GACR,InCnjBmB,cmCojBf7rB,KAAKinB,kBAIT,OAAOjnB,qDAUQif,EAAWuM,GAAS,IAAAhyB,EAAAwG,KACfA,KAAKinB,eACXne,QAAQ,SAAAjQ,GAAA,OAAMsmB,EAAGjnB,KAAK0f,EAAMqH,EAAWuM,uCA8CpDM,EAAkBlf,GACnB,IAAM4R,EAAexe,KAAKye,kBAE1B,IAAKD,EAAasN,GACd,MAAM,IAAI9b,MAAJ,SAAmB8b,EAAnB,kBAGV,IAAMC,EAAenf,EAAOtU,MAAWwzB,EAAlBlf,UAErB,GAAI4R,EAAauN,GACb,MAAM,IAAI/b,MAAJ,SAAmB+b,EAAnB,mBAGV,IAb2BC,EEvkB5B,SAAgCC,EAAc7f,EAAYQ,GAAQ,IAC/Dsf,EAA4Ctf,EAA5Csf,QAASC,EAAmCvf,EAAnCuf,UAAWC,EAAwBxf,EAAxBwf,QAAS3uB,EAAemP,EAAfnP,MAAOgP,EAAQG,EAARH,IAD2BrU,EAEhD6zB,EAAajV,SAFmC+D,EAAAvN,EAAApV,EAAA,GAE9Di0B,EAF8DtR,EAAA,GAExDuR,EAFwDvR,EAAA,GAIhEmR,IACDzuB,EAAmB,IAAVA,KAAiBA,GAASA,EAAQ4uB,GAASA,EAAO5uB,EAC3DgP,EAAe,IAARA,KAAeA,GAAOA,EAAM6f,GAAUA,EAAO,EAAK7f,EAErD0f,IACAC,EAAUvoB,KAAK0oB,KAAK1oB,KAAK2oB,IAAI/f,EAAMhP,GAAS0uB,IAGhDD,EAxDgB,SAAlBO,EAAmBL,EAAS3uB,EAAOgP,GAIrC,IAHA,IAAMyf,KACFve,EAAOlQ,EAEJkQ,EAAOlB,GACVyf,EAAQhmB,KAAKyH,GACbA,GAAQye,EAIZ,OAFAF,EAAQhmB,KAAKyH,GAENue,EA8COO,CAAgBL,EAAS3uB,EAAOgP,IAG1Cyf,EAAQ,GAAKG,GACbH,EAAQzkB,QAAQ4kB,GAEhBH,EAAQA,EAAQxqB,OAAS,IAAM4qB,GAC/BJ,EAAQhmB,KAAKomB,EAAO,GAIxB,IADA,IAAMI,KACG30B,EAAI,EAAGA,EAAIm0B,EAAQxqB,OAAS,EAAG3J,IACpC20B,EAAaxmB,MACTzI,MAAOyuB,EAAQn0B,GACf0U,IAAKyf,EAAQn0B,EAAI,KAIzB,IAAM40B,KAYN,OAXAxgB,EAAmBC,EAAY,SAACrU,GAC5B,IAAMua,EAAQ2Z,EAAazb,aAAazF,KAAKhT,GAC7C,GAAIua,aAAiB2B,EACjB0Y,EAAWzmB,KAAKoM,OADpB,CAKA,IAAM/Q,EArEU,SAAlBqrB,EAAmBF,EAAc1zB,GAOnC,IANA,IAAI6zB,EAAU,EACVC,EAAWJ,EAAahrB,OAAS,EACjCqrB,SACAxrB,SAGGsrB,GAAWC,GAAU,CAIxB,GAAI9zB,IAFJuI,EAAQmrB,EADRK,EAASF,EAAUhpB,KAAK8N,OAAOmb,EAAWD,GAAW,KAGlCpvB,OAASzE,EAAQuI,EAAMkL,IACtC,OAAOlL,EACAvI,GAASuI,EAAMkL,IACtBogB,EAAUE,EAAS,EACZ/zB,EAAQuI,EAAM9D,QACrBqvB,EAAWC,EAAS,GAI5B,OAAO,KAiDWH,CAAgBF,EAAcpa,GAC5Cqa,EAAWzmB,KAAQ3E,EAAM9D,MAAzBkvB,IAAkCprB,EAAMkL,SAGnCkgB,aAAY5U,KAAMmU,GA1CxB,CFolBsBlsB,KAAK2P,gBAAgBvE,YAAY0gB,GACW9rB,KAAKkQ,YAAatD,GAA3E+f,EAdmBX,EAcnBW,WAAY5U,EAdOiU,EAcPjU,KAEdiV,EAAW1T,IAAcqT,KAEvBr0B,KAAMyzB,EACNlxB,KAAM6D,EAAUE,UAChB2X,QAASpY,EAAiBI,OAC1BwZ,UACCgU,IAAe,GAElBnO,EAAQ5d,KAAK4d,MAAMhR,EAAOwS,WAWhC,OAVAxB,EAAMyN,SAAS2B,GAEfnQ,GACI7c,KACA4d,EACA7P,EAAeM,KACZyd,mBAAkBlf,SAAQmf,gBAC5B,MAGEnO,+CA8BP,OAAO,IAAI/f,EAHEmC,KAAKitB,UAAUnvB,EAAWC,WACxBiC,KAAKktB,wEA9kBWtgB,GAC/B,OAAOqH,EAAkBlH,iBAAiBH,wCAf1C,OAAO8I,SAkmBA1E,GGzrBAmc,GAAoD3Y,GAApD2Y,IAAKC,GAA+C5Y,GAA/C4Y,IAAKC,GAA0C7Y,GAA1C6Y,IAAKC,GAAqC9Y,GAArC8Y,IAAKC,GAAgC/Y,GAAhC+Y,MAAOC,GAAyBhZ,GAAzBgZ,KAAMC,GAAmBjZ,GAAnBiZ,MAAYC,GAAOlZ,GAAZmZ,ICsBjDC,IACFC,QxC8LmB,SAAAA,UAAA,QAAA5zB,EAAAmL,UAAA1D,OAAIosB,EAAJjlB,MAAA5O,GAAAT,EAAA,EAAAA,EAAAS,EAAAT,IAAIs0B,EAAJt0B,GAAA4L,UAAA5L,GAAA,OACnB,SAACka,GAAqC,IAAjC9G,EAAiCxH,UAAA1D,OAAA,YAAA0D,UAAA,GAAAA,UAAA,IAAtBga,cACR2O,EAAYra,EACZsa,SACEnM,KA8BN,OA5BAiM,EAAWhlB,QAAQ,SAACkU,GAChB+Q,EAAY/Q,EAAU+Q,GACtBlM,EAAY3b,KAAZ2b,+HAAoBkM,EAAU5Q,cACzB6Q,IACDA,EAAaD,KAIjBC,GAAcA,IAAeD,GAC7BC,EAAWC,UAIfF,EAAUtQ,uBACVZ,GACInJ,EACAqa,EACAhgB,EAAeI,QACf,KACA0T,GAGAjV,EAAOwS,UACP2O,EAAU3H,UAAU1S,GAEpBqa,EAAU3H,UAAU,MAGjB2H,IwC/NXG,IxC4He,SAAAA,MAAA,QAAAj0B,EAAAmL,UAAA1D,OAAIsF,EAAJ6B,MAAA5O,GAAAT,EAAA,EAAAA,EAAAS,EAAAT,IAAIwN,EAAJxN,GAAA4L,UAAA5L,GAAA,OAAa,SAAAS,GAAA,OAAMyZ,EAAGwa,IAAHxa,QAAU1M,KwC3H5CkY,OxCgCkB,SAAAA,SAAA,QAAAjlB,EAAAmL,UAAA1D,OAAIsF,EAAJ6B,MAAA5O,GAAAT,EAAA,EAAAA,EAAAS,EAAAT,IAAIwN,EAAJxN,GAAA4L,UAAA5L,GAAA,OAAa,SAAAS,GAAA,OAAMyZ,EAAGwL,OAAHxL,QAAa1M,KwC/BlDmnB,QxC+DmB,SAAAA,UAAA,QAAAl0B,EAAAmL,UAAA1D,OAAIsF,EAAJ6B,MAAA5O,GAAAT,EAAA,EAAAA,EAAAS,EAAAT,IAAIwN,EAAJxN,GAAA4L,UAAA5L,GAAA,OAAa,SAAAS,GAAA,OAAMyZ,EAAGya,QAAHza,QAAc1M,KwC9DpDonB,QxCsJmB,SAAAA,UAAA,QAAAn0B,EAAAmL,UAAA1D,OAAIsF,EAAJ6B,MAAA5O,GAAAT,EAAA,EAAAA,EAAAS,EAAAT,IAAIwN,EAAJxN,GAAA4L,UAAA5L,GAAA,OAAa,SAAAS,GAAA,OAAMyZ,EAAG0a,QAAH1a,QAAc1M,KwCrJpDqnB,kBCvB6B,SAAAA,oBAAA,QAAAp0B,EAAAmL,UAAA1D,OAAIsF,EAAJ6B,MAAA5O,GAAAT,EAAA,EAAAA,EAAAS,EAAAT,IAAIwN,EAAJxN,GAAA4L,UAAA5L,GAAA,OAAa,SAAAS,GAAA,OAAMyZ,EAAG2a,kBAAH3a,QAAwB1M,KDwBxEwM,KCfgB,SAAAA,OAAA,QAAAvZ,EAAAmL,UAAA1D,OAAIsF,EAAJ6B,MAAA5O,GAAAT,EAAA,EAAAA,EAAAS,EAAAT,IAAIwN,EAAJxN,GAAA4L,UAAA5L,GAAA,OAAa,SAAAS,GAAA,OAAMyZ,EAAGF,KAAHE,QAAW1M,KDgB9CmI,eACAmf,aACAC,YE/BG,SAAAA,YAAsBrY,EAAYC,GACrC,OAAOhH,EAAa+G,EAAYC,EAAYP,GAAkBM,EAAYC,QF+B1EF,iBACAG,kBACAoY,c7BxBG,SAAAA,cAAwBtY,EAAYC,EAAY7G,GACnD,OAAOyG,GAAME,GAAcC,EAAYC,EAAY7G,GAAW8G,GAAeF,EAAYC,EAAY7G,K6BwBrGmf,UAGEl0B,QAAcA,QACpB9B,OAAOoU,OAAOmE,IACV4c,aACAc,QACA3gB,iBACAjO,oBACA6uB,aACAC,gBACAliB,oBACAnS,YACDs0B,GAEY,IAAAC,GAAA71B,EAAAmB,QAAA20B,qhBGrDf,SAAA90B,EAAAhB,GACA,UAAAiB,QAAA3C,UAAA,UAAA2C,QAAA1C,QACAA,oBAEAC,yRAJA,CASCE,kBACD,gBAAAsC,GCTA,IAAAhB,KAGA,SAAAJ,EAAAW,GAGA,GAAAP,EAAAO,GACA,OAAAP,EAAAO,GAAAjC,QAGA,IAAAQ,EAAAkB,EAAAO,IACAzB,IACAC,KACAT,YAUA,OANAU,mCAGAT,OAGAO,EAAAR,QA0DA,OArDAM,MAGAA,MAGAA,oBACAA,UACAY,2BAA0CE,uBAK1Cd,gBACA,oBAAAiB,eAAAC,aACAN,4CAAwDO,iBAExDP,sCAAiDO,YAQjDnB,kBAEA,GADA,EAAAoB,IAAAgB,EAAApB,EAAAoB,IACA,EAAAhB,EAAA,OAAAgB,EACA,KAAAhB,GAAA,UAAAiB,QAAAD,SAAAd,WAAA,OAAAc,EACA,IAAAT,EAAAf,OAAAY,OAAA,MAGA,GAFAxB,OACAY,mCAAyCE,wBACzC,EAAAM,GAAA,iBAAAgB,EAAA,QAAAlC,KAAAkC,EAAApB,EAAAR,EAAAmB,EAAAzB,EAAA,SAAAkB,GAAgH,OAAAgB,EAAAhB,IAAqBM,cACrI,OAAAC,GAIA3B,gBACA,IAAAoB,EAAAgB,KAAAd,WACA,WAA2B,OAAAc,EAAAG,SAC3B,WAAiC,OAAAH,GAEjC,OADApC,aACAoB,GAIApB,kBAAsD,OAAAY,OAAAoB,UAAAC,eAAA5B,KAAA+B,EAAAhB,IAGtDpB,OAIAgB,IAAAmB,EAAA,GDxEA,ECwEA,SAAAC,EAAAhB,EAAAJ,GAAA,aAAAA,IAAAI,GAAA,IAAAO,EAAA,oBAAAS,IAAAhB,GAAA,QAAAJ,EAAA,EAAAA,EAAAI,EAAAyI,OAAA7I,IAAA,KAAAW,EAAAP,EAAAJ,GAAAW,EAAAb,WAAAa,EAAAb,aAAA,EAAAa,EAAAwS,cAAA,YAAAxS,MAAAyS,UAAA,GAAAxT,OAAAC,eAAAuB,EAAAT,EAAAF,IAAAE,IAAA,gBAAAP,EAAAJ,EAAAW,GAAA,OAAAX,GAAAoB,EAAAhB,EAAAY,UAAAhB,GAAAW,GAAAS,EAAAhB,EAAAO,GAAAP,GAAA,GClFM+1B,EAAY,SAAZA,EAAa3d,EAAK4d,GACpB5d,EAAIvI,QAAQ,SAAC2f,YACLA,GAA+B,OAATA,IAG1BwG,EAAKxG,GAAQ,MAAAjwB,EAAA,WAKjB,SAAAyB,EAAaoX,iGAAKtF,QACd/L,KAAKkvB,QACLF,EAAU3d,EAAKrR,KAAKkvB,qDAGhB7d,GAEJ,OADA2d,EAAU3d,EAAKrR,KAAKkvB,MACblvB,6CAIP,OAAOvH,OAAOqN,KAAK9F,KAAKkvB,iDAGTC,EAAMC,GACrB,IAAI91B,SACE+1B,KACFC,EAAKH,EAAKD,KACVK,EAAKH,EAAKF,KACd,IAAK51B,KAAOg2B,OACEx1B,eAAe5B,KAAKo3B,EAAIh2B,KAG9BA,KAAOi2B,GAGXF,EAAanpB,KAAK5M,IAEtB,OAAO,IAAIk2B,EAAWH,SAjCT,GAiCSA,+jBClC9B,IACII,EAAiB,SAAjBA,EAAkBvnB,GAEd,GAAmB,qBAARA,EAAP,YAAA/N,EAAO+N,IAAkB,CACzB,GAAY,OAARA,EAAgB,SAEpB,GAAc,oBADNzP,OAAOoB,UAAUyI,SAASpK,KAAKgQ,GAEnC,MAA8E,YAAtEA,EAAIie,YAAY7jB,WAAW+F,MAAM,4BAA8B,GAG/E,UAGsBqnB,EAAwB,oBAAX/3B,UAAwCA,OACpDg4B,EAAeD,EAAIE,uBAAyBF,EAAIG,6BACvEH,EAAII,0BAA4BJ,EAAIK,wBACpCL,EAAIM,yBACJ,SAAU3jB,GACN4jB,WAAW5jB,EANF,KASjB6jB,EAAiB,SAAjBA,IACI,OAAIA,EAAeC,cAAe,IAAIvwB,MAAO2K,UACjC2lB,EAAeC,WAAY7tB,YAAc4tB,EAAeE,QAAQ9tB,YAG5E4tB,EAAeE,KAAO,GACtBF,EAAeC,YAAa,IAAIvwB,MAAO2K,WACJjI,YAAc4tB,EAAeE,QAAQ9tB,aAwC5E+tB,EAAO,SAAPA,IAAsB,QAAAp2B,EAAAmL,UAAA1D,OAAXygB,EAAWtZ,MAAA5O,GAAApB,EAAA,EAAAA,EAAAoB,EAAApB,IAAXspB,EAAWtpB,GAAAuM,UAAAvM,GAClB,IAAMy3B,KAEN,OADAnO,EAAOrZ,QAAQ,SAAA7O,GAAA,OAASq2B,EAAIpqB,KAAJoqB,UAAYlpB,MAC7BkpB,GAQXC,EAAY,SAAZA,EAAaC,GACT,IAAIC,KACAC,EAAiB,KAKrB,OAHAF,EAAmBA,GACa,mBAArBA,GAAmCA,GAAqB,aAE5D,SAACG,EAAWnF,MACZtlB,KAAKqB,MAAMkpB,EAAOE,GACE,OAAnBD,IACAA,EAAiBf,EAAa,WAC1B,IAAMiB,EAAQH,EAAMpV,MAAM,GAC1BoV,EAAM/uB,OAAS,EACfgvB,EAAiB,KAEVE,EAzCN7d,OAAO,SAACpK,EAAOwW,GAEZ,OAAIA,EAAGiR,QAAQznB,EAAMV,IACVU,GAGXA,EAAMV,IAAIkX,EAAGiR,MAAQ,EACrBznB,EAAMkoB,OAAO3qB,KAAKiZ,GAEXxW,KACNV,OAAS4oB,YACbA,OA8Ba/nB,QAAQ,SAAA7O,GAAA,OAAMklB,MAC5BqR,EAAiBhF,QAKjCsF,EAAQ,SAARA,EAAQ72B,GAAA,OAAa,mBAAAhB,EAAAmM,UAAA1D,OAAIygB,EAAJtZ,MAAA5P,GAAAO,EAAA,EAAAA,EAAAP,EAAAO,IAAI2oB,EAAJ3oB,GAAA4L,UAAA5L,GAAA,OAAe2oB,EAAOla,IAAI,SAACb,GAC5C,IAAM2pB,EAAOC,EAAU5pB,GACvB,OACI9O,KAAMy4B,EAAKz4B,KACX24B,cAAeF,EAAKE,cACpBj4B,MAAO+3B,EAAKG,UAGpBC,EAAkB,SAAlBA,IAAkB,QAAAl3B,EAAAmL,UAAA1D,OAAIygB,EAAJtZ,MAAA5O,GAAApB,EAAA,EAAAA,EAAAoB,EAAApB,IAAIspB,EAAJtpB,GAAAuM,UAAAvM,GAAA,OACdoC,aAAcknB,EAAO9G,MAAM,EAAG8G,EAAOzgB,OAAS,GAC9Cyd,GAAIgD,EAAOA,EAAOzgB,OAAS,KAE/B0vB,EAAmB,SAAnBA,EAAoBC,GAChB,IAAIf,KACEroB,KA2BN,OA1BAopB,EAAKvoB,QAAQ,SAAA7O,GAAA,OAAQgO,EAAI8oB,EAAKE,gBAAkB,IAChD,SAASK,EAAKjgB,GACVA,EAAIvI,QAAQ,SAACioB,GACT,IAAIQ,EACAC,SACAC,SACAC,UACGH,EAAQR,EAAKE,iBAAkBhpB,GAIb,KADrBupB,EAAcvpB,EAAIspB,KACQC,IAAgBlB,EAAI5uB,OAAS,IAEnD+vB,EAASnB,EAAIjV,MAAM,EAAGmW,GACtBE,EAAUpB,EAAIjV,MAAMmW,EAAc,GAClClB,EAAMmB,EAAO7V,OAAO8V,GAGpBA,EAAQ5oB,QAAQ,SAAC2f,EAAM1wB,GAAP,OAAakQ,EAAIwgB,EAAKwI,eAAiBl5B,EAAI05B,EAAO/vB,SAClEuG,EAAIspB,GAASjB,EAAIpqB,KAAK6qB,GAAQ,GAXlC9oB,EAAIspB,GAASjB,EAAIpqB,KAAK6qB,GAAQ,EAclCO,EAAIP,EAAKY,iBArBjB,CAwBIN,GACGf,GAEXsB,GACIC,WAAY,SAAAA,aAAe,QAAA53B,EAAAmL,UAAA1D,OAAXygB,EAAWtZ,MAAA5O,GAAApB,EAAA,EAAAA,EAAAoB,EAAApB,IAAXspB,EAAWtpB,GAAAuM,UAAAvM,GACvB,IAAM+jB,KAIN,OAHAuF,EAAOrZ,QAAQ,SAACgpB,GACZr5B,OAAOoU,OAAO+P,4HAASkV,EAAYx5B,KAAOw5B,EAAY94B,UAEnD4jB,GAEXmV,SAAU,SAAAA,SAAA93B,GAAA,OAAe63B,EAAY94B,QAgBvCg5B,aACF,SAAA/3B,EAAa23B,iGAAUK,QACnBjyB,KAAKmf,GAAKyS,EACV5xB,KAAKkyB,iEAGe,IAAAj4B,EAEpB,OADAk4B,OAAKD,KAAIhsB,KAATisB,mBACOnyB,qDAIP,OAAOA,KAAKkyB,wCAIZ,OAAOlyB,KAAKmf,SAhBd6S,GAgBc7S,8XC1LhB,SAAAllB,EAAa3B,EAAM24B,EAAetqB,iGAASyrB,QACbzrB,EAAUA,MACpC3G,KAAK1H,KAAOA,EACZ0H,KAAKixB,cAAgBA,EACrBjxB,KAAKqyB,SACLryB,KAAK2xB,iBACL3xB,KAAKsyB,MAAQ,KACbtyB,KAAKuyB,kBACLvyB,KAAKwyB,UAAY7rB,EAAQ6rB,UACzBxyB,KAAKyyB,WACLzyB,KAAK4xB,SAAW,KAChB5xB,KAAK0yB,2EAGgB,QAAAz4B,EAAAhB,EAAA+G,KAAAnH,EAAAuM,UAAA1D,OAALwwB,EAAKrpB,MAAAhQ,GAAAd,EAAA,EAAAA,EAAAc,EAAAd,IAALm6B,EAAKn6B,GAAAqN,UAAArN,GAGrB,OAFA46B,OAAKN,OAAMnsB,KAAXysB,QAAmBT,GACnBA,EAAIppB,QAAQ,SAAA7O,GAAA,OAAS0pB,EAAMgO,cAAczrB,KAAKiP,KACvCnV,mDAGM+wB,GAEb,OADA/wB,KAAK0yB,cAAcxsB,KAAK6qB,GACjB/wB,6CAiBP,OAHAA,KAAKkxB,KAAOlxB,KAAK4xB,SAAL5xB,aAAiBA,KAAK4yB,oBAClC5yB,KAAKyyB,QAAQvsB,KAAKlG,KAAKkxB,MACvBlxB,KAAKuyB,kBACEvyB,qDAIP,OAA0B,IAAtBA,KAAKqyB,MAAM3wB,SAEPpJ,KAAM0H,KAAK1H,KACX24B,cAAejxB,KAAKixB,cACpBj4B,MAAOgH,KAAKkxB,OAGblxB,KAAKwyB,UAALxyB,aAAkBA,KAAKqyB,MAAMpqB,IAAI,SAAAhO,GAAA,OAAQ44B,EAAK5B,6DAIrD,IACIwB,EAAUzyB,KAAKyyB,QACfK,EAAOL,EAAQA,EAAQ/wB,OAAS,GAEpC,OAAuB,IAAnB+wB,EAAQ/wB,OACD1B,MAEXyyB,EAAQvsB,KAAK4sB,GACN9yB,4CAIP,IAAM+yB,EAAO/yB,KAAKyyB,QACdK,EAAOC,EAAKA,EAAKrxB,OAAS,GAG9B,OAFAqxB,EAAKrxB,OAAS,EACdqxB,EAAK7sB,KAAK4sB,GACH9yB,4CAIP,OAAqB,OAAdA,KAAK1H,sCAhDZ,OAAO0H,KAAKsyB,wBAGNt5B,GAGN,OAFAgH,KAAKsyB,MAAQt5B,EACbgH,KAAKuyB,kBACEvyB,WD0JKmf,GC1JLnf,kQC3BX,SAAA/F,KAAA,SAAAA,EAAAhB,GAAA,KAAAgB,aAAAhB,GAAA,UAAA6U,UAAA,sCAAeklB,QACXhzB,KAAKqyB,SACLryB,KAAK2wB,WACDsC,aACAC,oEAIY,IAAAj5B,EAEhB,OADA04B,OAAKN,OAAMnsB,KAAXysB,mBACO3yB,2DAGcmf,GAAI,IAAAlmB,EAAA+G,KACnBmzB,EAASnzB,KAAK2wB,UAAUuC,aAC1BjxB,EAAQkxB,EAAOjtB,KFaN,SAACktB,EAAOjU,GACrB,IAAIkU,EAAM,SAANA,IACAlU,iBAAMiU,EAAMnrB,IAAI,SAAC8oB,GACb,IACIgC,EAAOhC,EAAK0B,QACZz6B,EAAI+6B,EAAKrxB,OAAS,EACtB,OAAQqxB,EAAK/6B,EAAI,EAAI,EAAI,EAAIA,EAAI,GAAI+6B,EAAK/6B,SAIlD,OADAq7B,EAAIjD,KAAOF,IACJmD,EAVM,CEb0BrzB,KAAKqyB,MAAOlT,IAAO,EAE1D,OAAO,WACHhK,EAAKwb,UAAUuC,aAAeC,EAAOnf,OAAO,SAACmL,EAAIpnB,GAAL,OAAWA,IAAMkK,2DAI5Ckd,GAAI,IAAAlmB,EAAA+G,KACnBmzB,EAASnzB,KAAK2wB,UAAUsC,UAC1BhxB,EAAQkxB,EAAOjtB,KFgBT,SAACktB,EAAOjU,GAClB,IAAIkU,EAAM,SAANA,IACAlU,iBAAMiU,EAAMnrB,IAAI,SAAC8oB,GACb,IAAMgC,EAAOhC,EAAK0B,QAClB,OAAQM,EAAK,GAAIA,EAAKA,EAAKrxB,OAAS,SAI5C,OADA2xB,EAAIjD,KAAOF,IACJmD,EARG,CEhB0BrzB,KAAKqyB,MAAOlT,IAAO,EAEvD,OAAO,WACH7J,EAAKqb,UAAUsC,UAAYE,EAAOnf,OAAO,SAACmL,EAAIpnB,GAAL,OAAWA,IAAMkK,0DAK9D,QAASjC,KAAK2wB,UAAUsC,UAAUvxB,aDL3B1B,GCK2B0B,8XCtBtC,SAAAzH,IAAe,IAAAhB,EAAA+G,MAAA,SAAA/F,EAAAhB,GAAA,KAAAgB,aAAAhB,GAAA,UAAA6U,UAAA,sCAAA9N,KAAA/F,GACX+F,KAAKszB,oBACLtzB,KAAKwyB,UAAY1B,EAAM9wB,KAAKszB,kBAC5BtzB,KAAK3I,KAAO,IAAIk8B,EAAK,KAAM,MAAQf,UAAWxyB,KAAKwyB,YACnDxyB,KAAK3I,KAAKu6B,SAAWA,EAASC,WAE9B7xB,KAAKwzB,UAAY,KACjBxzB,KAAKyzB,cACLzzB,KAAK0zB,qBACDC,yBACAC,uBAGJ5zB,KAAK6zB,UAAYtD,EAAU,SAAC/E,GACxB,IAAI+F,SACJ,IAAKA,KAAS/F,EAAQsI,YAAa,CAC/B,OAAUh6B,eAAe5B,KAAKid,EAAKme,iBAAkB/B,GACjD,OAEJpc,EAAKme,iBAAiB/B,GAAOwC,mEAKxB7rB,EAAK8rB,GAClB,IACIC,EADA/yB,SAEEoyB,EAAmBtzB,KAAKszB,iBAC1Bj8B,EAAO2I,KAAK3I,KACZm7B,EAAYxyB,KAAKwyB,UA8CrB,OA5CC,SAASlB,EAAK4C,EAAMjD,EAAewB,GAChC,IAAIn5B,SACAi4B,SACA4C,SACApD,SAEJ,IAAKz3B,KAAO46B,EACR,MAAUp6B,eAAe5B,KAAKg8B,EAAM56B,GAcpC,GAVAy3B,EAAO,IAAIwC,EAAKj6B,EADhBi4B,KAAWN,EAAgB33B,GACGk5B,cAC9Bc,EAAiB/B,GAASR,YAErBoD,EAAO1B,EAAQ0B,MAChBA,EAAKC,gBAAgBrD,GAGrB15B,EAAK+8B,gBAAgBrD,GAGrBtB,EAAevuB,EAAMgzB,EAAK56B,IAC1Bg4B,EAAIpwB,EAAJowB,GAAYL,EAAgB33B,EAA5Bg4B,KAAsC6C,KAAMpD,IAC5CA,EAAKa,SAAWA,EAASC,gBACtB,GAAI3wB,aAAe8wB,EAAgB,KAAA35B,EACtC04B,EAAKa,SAAW1wB,EAAItI,OACpBy7B,KAAKD,gBAALC,UAAwBnzB,EAAIozB,kBAAkBrsB,IAAI,SAAAhO,GAAA,OAASq5B,EAAiB/B,YAE5ER,EAAKa,SAAWA,EAASG,SACzBhB,EAAKG,KAAOhwB,EA7BvB,CAiCCgH,EAAe,OAAV8rB,EAAiB,GAAQA,EAAzBA,KACHG,KAAMb,EAAiBU,KAG3Bh0B,KAAKwzB,UAAY,IAAI/gB,EAAWha,OAAOqN,KAAK9F,KAAKszB,oBAIjDW,EAAiBj0B,KAAKmmB,YAAYoO,gBAAgBl9B,GAAMukB,OAAOvkB,GAAM2c,OAAO,SAAA/Z,GAAA,OAAQ82B,EAAKwB,kBAC1EzpB,QAAQ,SAAA7O,GAAA,OAAQ82B,EAAKrH,YACpC0H,EAAiB6C,GAAgBnrB,QAAQ,SAAA7O,GAAA,OAAQ82B,EAAKrH,YAC/C1pB,gDAGGw0B,GACV,GAAIA,KAAQx0B,KAAKszB,iBACb,OAAOtzB,KAAKszB,iBAAiBkB,GAAMtD,wDAKrBuD,EAAOC,GAAQ,IAAA77B,EAAAW,EAAAwG,KAC3BozB,EAAQqB,EAAMxsB,IAAI,SAAAhO,GAAA,OAAQqb,EAAKge,iBAAiBkB,KAClDG,GAAQC,MAAIC,GAAeC,SAAnBF,UAA+BxB,IAG3C,OADAA,EAAMtqB,QAAQ,SAAA7O,GAAA,OAAQ82B,EAAKgE,gBAAgBJ,KACpCA,mBAAuBD,EAAO75B,MAAQ65B,EAAOvV,2CAGrC,IACf,IAAI6V,SACAC,SAFWp8B,EAAAuM,UAAA1D,OAARygB,EAAQtZ,MAAAhQ,GAAAd,EAAA,EAAAA,EAAAc,EAAAd,IAARoqB,EAAQpqB,GAAAqN,UAAArN,GAGf,IACI26B,KACAU,EAAQjR,EAAOla,IAAI,SAAC0b,GAEhB,OADAA,EAAM,GAAGuN,KAAOvN,EAAM,GACfA,EAAM,KAMrB,OAJAyP,EAAMtqB,QAAQ,SAAA7O,GAAA,OAAQ82B,EAAKrH,YAC3BgJ,EAAcxsB,KAAdwsB,UAAsBrC,iBAAQ+C,EAAMnrB,IAAI,SAAAhO,GAAA,OAAQ82B,EAAK2B,oBACrDsC,EAAa,IAAIviB,EAAW2gB,EAAMnrB,IAAI,SAAAhO,GAAA,OAAQ82B,EAAKE,iBAE9CjxB,KAAKyzB,aAMVwB,EAAgB7D,EAAiBgC,IACnBtqB,QAAQ,SAAA7O,GAAA,OAAgBi7B,EAAaxL,YACnDsL,EAAWG,OAAOF,EAAchtB,IAAI,SAAAhO,GAAA,OAAQ82B,EAAKE,iBACjDyB,EAAcxsB,KAAdwsB,UAAsBrC,iBAAQ4E,EAAchtB,IAAI,SAAAhO,GAAA,OAAQ82B,EAAK2B,oBAE7D1yB,KAAKo1B,0BAA0BvsB,MAAMG,KAAK,IAAI+N,IAAI2b,IAAiBsC,GAC5Dh1B,OAXHA,KAAKo1B,0BAA0B1C,GAC/B1yB,KAAKyzB,cACEzzB,8DAYY0yB,EAAesC,GAAY,IAAAn8B,EAAAmH,KAE9Cq1B,KACAC,KAmBJ,OAlBIN,GAEoBviB,EAAW6b,WAAWtuB,KAAKwzB,UAAWwB,GAC9BO,UAEpBzsB,QAAQ,SAAA7O,GAAA,OAAS2d,EAAK0b,iBAAiB3P,GAAO6R,eAG1D9C,EAAc5pB,QAAQ,SAAC7O,GACnBo7B,EAASnvB,KAATmvB,UAAiBp7B,EAAE02B,UAAUuC,iBAEjCR,EAAc5pB,QAAQ,SAAC7O,GACnBq7B,EAASpvB,KAATovB,UAAiBr7B,EAAE02B,UAAUsC,eAGhCjzB,KAAK0zB,oBAAoBC,uBAAyB0B,EAASvsB,QAAQ,SAAA7O,GAAA,OAAMklB,OACzEnf,KAAK0zB,oBAAoBE,oBAAsB5zB,KAAK6zB,UAAUyB,GAAYxB,YAAakB,IACxFh1B,KAAKy1B,2BACEz1B,oDAGgB,QAAA/F,EAAA+F,KAAA/G,EAAAmM,UAAA1D,OAARg0B,EAAQ7sB,MAAA5P,GAAAO,EAAA,EAAAA,EAAAP,EAAAO,IAARk8B,EAAQl8B,GAAA4L,UAAA5L,GACvB,IACIwN,EADU0uB,EAAOztB,IAAI,SAAAhP,GAAA,OAAS08B,EAAKrC,iBAAiB/B,KACvCtpB,IAAI,SAAAhO,GAAA,OAAS82B,EAAMA,EAAKG,QAEzC,OADAlxB,KAAK41B,OAAL51B,aAAegH,IACRhH,qDAWP,OADAA,KAAKyzB,cACEzzB,8DAMP,OAFAA,KAAK0zB,oBAAoBC,yBACzB3zB,KAAK0zB,oBAAoBE,sBAClB5zB,0DAGa1G,GAEpB,OADA0G,KAAK0zB,oBAAuBp6B,EAA5B0G,gBACOA,4DAGeuxB,GACtB,OAAOvxB,KAAKszB,iBAAiB/B,mDAvBTR,GACpB,IAAM8E,KAEN,OHdR,SAASC,EAAwB/E,EAAM8E,EAAUE,GAC7C,IAAIxE,SACJR,EAAKsB,MAAMvpB,QAAQ,SAACktB,GAChBF,EAAuBE,EAAWH,EAAUE,KAG5ChF,EAAKkF,WAAa1E,EAAQR,EAAKE,iBAAkB8E,IAGrDF,EAAS3vB,KAAK6qB,GACdgF,EAAWxE,GAAS,GAVxB,CGa+BR,EAAM8E,MACtBA,QDtI2Bn0B,GCsI3Bm0B,iXC+Jf9Y,aA5TI,SAAA9iB,KAAA,SAAAA,EAAAhB,GAAA,KAAAgB,aAAAhB,GAAA,UAAA6U,UAAA,sCAAeooB,QACXl2B,KAAKm2B,OAAS,IAAIC,EAClBp2B,KAAKq2B,aACLr2B,KAAKs2B,0DA6BL,IAAIC,SACAruB,SAWJ,OATsB,IAAlB9C,UAAO1D,QACP60B,EAAa,KACbruB,4CAEAquB,0CACAruB,2CAGJlI,KAAKw2B,gBAAgBD,EAAYruB,GAC1BlI,oDASgB,IAAA/F,EACnBw8B,EACAC,EACAC,SACA3C,SACA4C,SAiBJ,OAfIxxB,UAAO1D,OAAS,GAChBsyB,0CACA2C,0CACAC,4CAEA5C,EAAQ,KACR2C,0CACAC,2CAGJH,EAAoBG,EAAQzF,IAE5B0F,EADAH,EAAiB,IAAI1E,EAAeyE,EAAkBtX,KACvCiV,gBAAfyC,UAAkCJ,EAAkBx7B,eAEpD+E,KAAKw2B,gBAAgBxC,4HAAU2C,EAAUD,IAClC12B,mDAIMu2B,EAAYruB,GAEzB,OADAlI,KAAKm2B,OAAOW,gBAAgB5uB,EAAKquB,GAC1Bv2B,sCA0FPy0B,EAAOtV,EAAI4X,GACX,IAQiBC,EAPbC,EAAWxC,aAAiB5rB,MAAQ4rB,GAASA,GAE7CyC,EAAQl3B,KAAKm2B,OAAOgB,qBAAqBF,GACrCp8B,KAAM,YACNskB,OAOR,OAJI4X,IAEAC,OAAKb,OAAOiB,kBAAkBC,uBAAuB,cAAaC,eAAlEN,UAAoFvC,IAEjFyC,qCAgBLzC,EAAOtV,EAAI4X,GACb,IASiBQ,EARbN,EAAWxC,aAAiB5rB,MAAQ4rB,GAASA,GAE7CyC,EAAQl3B,KAAKm2B,OAAOgB,qBAAqBF,GACrCp8B,KAAM,YACNskB,OASR,OALI4X,IAEAQ,OAAKpB,OAAOiB,kBAAkBC,uBAAuB,iBAAgBC,eAArEC,UAAuF9C,IAGpFyC,uCAYP,OAFAl3B,KAAKq2B,aACLr2B,KAAKs2B,MAAM50B,OAAS,EACb1B,4CAYP,OAHAA,KAAKq2B,aACLr2B,KAAKw3B,QAALx3B,aAAgBA,KAAKs2B,QACrBt2B,KAAKs2B,MAAM50B,OAAS,EACb1B,0CAkBP,IAEIyI,EAFA+rB,SACAtzB,SAGJ,OAAQuH,EAAMrD,UAAO1D,QACrB,KAAK,EACD8yB,0CACA,MAEJ,KAAK,EACDA,0CACAtzB,0CACA,MAEJ,QACI,OAAOlB,KAGX,OAAY,IAARyI,GACAzI,KAAKq2B,UAAYr2B,KAAKs2B,MAAMpwB,MAAMsuB,EAAMtzB,IAAQlB,KAAKw3B,SAAShD,EAAMtzB,IAC7DlB,MAGJA,KAAKm2B,OAAOsB,aAAajD,2CAIjB,QAAAv6B,EAAAhB,EAAA+G,KAAAnH,EAAAuM,UAAA1D,OAAP+yB,EAAO5rB,MAAAhQ,GAAAd,EAAA,EAAAA,EAAAc,EAAAd,IAAP08B,EAAO18B,GAAAqN,UAAArN,GAMf,OAAqB,IAAjB08B,EAAM/yB,OACC1B,OAGXm2B,OAAKA,QAAOP,OAAZO,UAAsB1B,EAAMxsB,IAAI,SAAAhO,GAAA,OAASkb,EAAKghB,OAAOuB,yBAAyBlD,EAAK,IAAKA,EAAK,QACtFx0B,4CAQP,OAAOA,KAAKm2B,iDASZ,OAAOn2B,KAAKm2B,OAAO9+B,KAAK65B,4CA5SbhpB,GACX,OAAO,IAAIyvB,GAAQnB,gBAAgB,KAAMtuB,SA+SjD6U,GCzUA6a,uFCFApgC,OAAOD,QAAU,SAASC,QAoBzB,OAnBKA,OAAOqgC,kBACXrgC,OAAOsgC,UAAY,aACnBtgC,OAAOugC,SAEFvgC,OAAOwgC,WAAUxgC,OAAOwgC,aAC7Bv/B,OAAOC,eAAelB,OAAQ,UAC7BmB,YAAY,EACZC,IAAK,SAAAA,MACJ,OAAOpB,OAAOQ,KAGhBS,OAAOC,eAAelB,OAAQ,MAC7BmB,YAAY,EACZC,IAAK,SAAAA,MACJ,OAAOpB,OAAOO,KAGhBP,OAAOqgC,gBAAkB,GAEnBrgC,sVCdR,SAASygC,uBAAuB/vB,KAAO,OAAOA,KAAOA,IAAI/O,WAAa+O,KAAQ9N,QAAW8N,KAJzFzP,OAAOC,eAAenB,QAAS,cAC3ByB,OAAO,IAKX,IAEIk/B,MAAQD,uBAFDE,oBAAQ,IAMfC,mBAAqBH,uBAFDE,oBAAQ,IAI5BE,MAAQH,MAAK,QAAYI,KAAuB,oBAAX3gC,OAAyBA,YAAS2V,GACvEirB,IAAMF,MAAM3I,IAAI8I,SAChB/1B,EAAI41B,MAAM3I,IAAI7rB,KACd8Q,IAAMlS,EAAEkS,IACRnK,MAAQ/H,EAAE+H,MAEViuB,kBAAqBC,IAAK,UAC1BC,gBAAkBN,MAAMO,qBACxBC,oBAAsBF,gBAAgBG,SAAW,EAAI,IAsBzD,SAASC,kBAAkBC,GAAIC,UAAWC,YAAavyB,SACnD,IAAIwyB,QACA3E,KACA7f,IACAykB,aACAC,eAAgB,EAChB1wB,MAAQowB,kBAAkBpwB,MAE9B,QAAkB,IAAPqwB,IAAoC,WAAd9+B,QAAO8+B,IAAxC,CAwBA,IAAKxE,QApBD4E,aAAezwB,MAAMqwB,MACrBI,aAAanL,UAGjBtlB,MAAMqwB,IAAMh5B,MACZ2G,QAAUA,aACF2yB,cAAgBl4B,SAASuT,IAAMhO,QAAQ2yB,eAAiB3kB,IAAM0jB,MAAMkB,qBAEnD,iBAAdN,YACPA,UAAYV,IAAIiB,eAAeP,aAGnCE,QAAUd,MAAMoB,gBAAgBR,YACxBS,UAAYrB,MAAMsB,YAEtBhB,gBAAgBiB,aAAejB,gBAAgBkB,MAASV,QAAQW,cAAiBX,QAAQY,eACzFV,eAAgB,GAGpBF,QAAQO,UAAY,GACPrB,MAAM2B,qBACfb,QAAQc,MAAMzF,MAAQ6D,MAAM2B,qBAAqBxF,MAGrDx0B,KAAKg5B,GAAKA,GACVh5B,KAAKk6B,gBAAkBf,QAEvBn5B,KAAKm6B,kBAAoB,IAAI/B,mBAAkB,QAAYe,QAASE,cAAe,IACnFr5B,KAAKo6B,iBAAmBlB,YACxBl5B,KAAKq6B,OAAQ,EACbr6B,KAAKi6B,SACLj6B,KAAK2G,QAAUA,QAEf3G,KAAKs6B,YAaTvB,kBAAkBwB,YAAc,SAAUC,YAUtC,OATAA,WAAaA,gBAEGn6B,KAEsB,iBAApBm6B,WAAWn6B,OACzBm6B,WAAWn6B,KAAOm6B,WAAWn6B,KAAKiC,YAFlCk4B,WAAWn6B,KAAO,GAKtBm6B,WAAWC,MAAQD,WAAWn6B,KAAKiM,MAAM,oBAClCkuB,YAIXzB,kBAAkBpwB,SAIlBowB,kBAAkBl/B,UAAU6gC,qBAAuB,SAAUr6B,KAAMs6B,oBAAqBj5B,QACpF,IAAK1B,KAAKq6B,MACN,OAAO,EAGX,IAAIO,KACAC,MACAC,GACAC,IACAC,YACAC,qBACAC,sBAAwBl7B,KAAK2G,QAAQ2yB,cACrCL,UAAYj5B,KAAKm7B,WACjBlB,MAAQj6B,KAAKi6B,UACbmB,MAAQp7B,KAAKq7B,iBAAmBr7B,KAAKq7B,mBACrCC,iBAAmBt7B,KAAKu7B,oBAAsBv7B,KAAKu7B,sBACnDC,UAAYn7B,MAAQ45B,MAAMwB,UArHtB,KAqH4CxB,MAAMyB,YArHlD,KAqH0EzB,MAAM0B,YArHhF,KAqHwG1B,MAAM2B,WArH9G,IAsHJC,cAAgBx7B,KAAO,QAAU45B,MAAMwB,UAtHnC,KAsHyDxB,MAAMyB,YAtH/D,KAsHuFzB,MAAM0B,YAtH7F,KAsHqH1B,MAAM2B,WAtH3H,IA4IR,OApBAnD,iBAAiBp4B,QAAUA,KAAOo4B,iBAAiBp4B,OAE9Cs6B,yBAGqDrtB,KAAjD2tB,qBAAuBG,MAAMS,kBAC9B5C,UAAUS,UAAYr5B,KAAKy7B,OAASz7B,KAAKy7B,OAAOp6B,QAAUmH,MAAMnH,OAAS,GAAGqB,KAAK1C,MACjFy6B,GAAK7B,UAAUc,YAEfd,UAAUS,UAAYr5B,KACtB06B,IAAM9B,UAAUc,YAEhBkB,qBAAuBG,MAAMS,gBAAkBf,GAAKp5B,OAASq5B,MAAQr5B,OAAS,GAC9E45B,iBAAiBp1B,KAAK21B,eAClBP,iBAAiB55B,OAASw5B,8BACnBE,MAAME,iBAAiBhzB,UAZtC2yB,qBAAuB,GAiBvBD,YAAcI,MAAMI,aACpBX,MAAQG,YAAY1uB,MAAM,MAEtByvB,MAAO9iB,WAAW4hB,MAAM,GAAI,IAC5BmB,OAAQ/iB,WAAW4hB,MAAM,GAAI,OAIrC5B,UAAUS,UAAYr5B,KAEtBu6B,MACIoB,OAAQ/C,UAAUa,aAClBiC,MAAO9C,UAAUc,YAAckB,sBAGnCG,MAAMI,WAAaZ,KAAKmB,MAAQ,IAAMnB,KAAKoB,OAC3CV,iBAAiBp1B,KAAKs1B,WAClBF,iBAAiB55B,OAASw5B,8BACnBE,MAAME,iBAAiBhzB,SAG3BsyB,OAIX7B,kBAAkBl/B,UAAUoiC,YAAc,WACtC,IAAIC,QAAUl8B,KAAKm8B,cACflD,UAAYj5B,KAAKm7B,WACjBiB,QAAUF,QAAQE,QAEtB,OAAIA,QACO,SAAUlyB,KACb,IAAImyB,KAAMN,MASV,OAPAK,QAAQE,YAAcpyB,KAEtB6xB,OADAM,KAAOD,QAAQG,WACFR,MAAQlD,qBACT,IACRkD,MAAQM,KAAKN,OAGVA,OAGJ,SAAU7xB,KAEb,OADA+uB,UAAUS,UAAYxvB,IACf+uB,UAAUc,cAkB7BhB,kBAAkBl/B,UAAUygC,SAAW,SAAUL,OAC7C,OAAKj6B,KAAKq6B,MAMNJ,QAAUj6B,KAAKi6B,OAAUj6B,KAAKw8B,cAI7BvC,QACDA,MAAQj6B,KAAKi6B,OAGjB5B,MAAMoE,cAAcxC,OACpBj6B,KAAKi6B,MAAQA,MAEbj6B,KAAKm8B,cAAgBO,MAAQ18B,KAAKm6B,kBAAkBvhC,IAAIqhC,OAEpDj6B,KAAKm8B,eACLn8B,KAAKm7B,WAAauB,MAAM3L,KACxB/wB,KAAK28B,SAAWD,MAAME,QACtB58B,KAAK68B,OAASH,MAAMI,UACpB98B,KAAK+8B,YAAcL,MAAMM,WACzBh9B,KAAKw8B,cAAe,GAEpBx8B,KAAKw8B,cAAe,EAGjBx8B,WAvBP,EALWA,KAGX,IAAI08B,OAmCR3D,kBAAkBl/B,UAAUojC,sBAAwB,SAAU/D,aAC1D,OAAKl5B,KAAKq6B,OAGVr6B,KAAKo6B,iBAAmBlB,YACjBl5B,MAHIA,MA4Bf+4B,kBAAkBl/B,UAAUqjC,aAAe,SAAU78B,KAAM88B,SAAUC,UAAWC,QAC5E,IAAKr9B,KAAKq6B,MACN,OAAO,OAGE/sB,IAATjN,MAA+B,OAATA,KACtBA,KAAO,GACgB,iBAATA,OACdA,KAAOA,KAAKiC,YAGhB,IAAImG,IACA60B,QACAC,QACAC,QACAC,gBACAC,SACAC,SACAC,UACAC,aACAC,YACAC,SACAC,SACAC,YACAC,WACAC,qBACAC,QACAC,EACA76B,EACA86B,SACA7V,KACA8V,IACAC,mBACAC,gBACAC,OACAC,gBACAC,2BACAC,YAAa,EACbC,YAAc,EACdC,UAAY,EACZC,WAAa,EACbC,iBAAmB,EACnBC,SAAW,EACXC,UAAY,EACZC,cACArnC,EAAI,EACJsnC,YAAcr/B,KAAKo6B,gBAAkB,GAAK,MAC1C4C,WAAah9B,KAAK+8B,YAClBH,QAAU58B,KAAK28B,SACf1D,UAAYj5B,KAAKm7B,WACjBuB,MAAQ18B,KAAKm8B,cACbmD,cAAgB5C,MAAM4C,cACtBC,SAAW7C,MAAM6C,SACjBC,gBACAC,WAAa,EACbC,YAAc,EACdC,eAAiB,EACjBC,SAAW,SAASA,SAAS11B,KAI7B,IAFA,IAAI21B,GAAK,KACL9nC,GAFJmS,IAAMA,IAAI5J,QAAQ,SAAU,KAEhBoB,OACLm+B,GAAGxiC,KAAK6M,IAAI41B,OAAO/nC,GAAK,MAC/B,OAAOmS,IAAImR,MAAM,EAAGtjB,EAAI,IAExBgoC,YACA1/B,KAAMA,KACN88B,SAAUA,SACVC,UAAWA,UACXrB,MAAO,KACPC,OAAQ,KACRgE,aAAc,KACdC,cAAe,KACfC,QAAS7/B,KACT8/B,aAAa,GAYjB,GATAnC,SAAWh+B,KAAKi8B,cAKZmB,YAAcJ,aACdI,WAAa,KAGbnE,UAAW,CACX,IAAKN,gBAAgBU,cAAe,CAmBhC,IAlBAwF,WAAaxG,MAAM+H,YAAY/iC,KAAKgD,QAahC44B,UAAUS,UAAYr5B,KACtB0/B,WAAWC,aAAerC,SAAW1E,UAAUc,YAC/CgG,WAAWE,cAAgBrC,UAAY3E,UAAUa,eAVjD0D,QAAUn9B,KAAKC,QAAQ+3B,MAAMgI,UAAW,SAAUh4B,OAC9C,MAAiB,SAAVA,MAAmB,IAAM,MAEpC81B,qBAAuBn+B,KAAKsgC,WAAW9C,SAAS,GAEhDuC,WAAWC,aAAerC,SAAWQ,qBAAqBpC,MAC1DgE,WAAWE,cAAgBrC,UAAYO,qBAAqBnC,QAO5D4B,WAAaR,WAAaO,UAAYR,SAGtC,OAFA4C,WAAWhE,MAAQgE,WAAWC,aAAerC,SAC7CoC,WAAW/D,OAAS+D,WAAWE,cAAgBrC,UACxCmC,WAGX,GAAI/C,WAAaI,UAIb,OAHA2C,WAAW1/B,KAAO,GAClB0/B,WAAWhE,MAAQgE,WAAWC,aAAe,EAC7CD,WAAW/D,OAAS+D,WAAWE,cAAgB,EACxCF,WAQf,GAHA1/B,KAAOu/B,SAASv/B,MAAMC,QAAQ,SAAU,KACxCm9B,gBAAkBz9B,KAAKo6B,gBAAkB+C,SAAWA,SAAWmC,eAE1DT,WAAY,CAab,GAXAp2B,KADA22B,WAAa/+B,KAAKiM,MAAM,KACP5K,OACjB47B,QAAU,GAAIC,WACdQ,SAAWqB,WAAW,GAElBp/B,KAAK68B,OAAOkB,UACZO,SAAWt+B,KAAK68B,OAAOkB,UAAUhC,OAEjCuC,SAAWN,SAASD,UACpB/9B,KAAK68B,OAAOkB,WAAchC,MAAOuC,WAGjCb,gBAAkBa,SAElBvmC,GADAwlC,QAAUl9B,KAAKkgC,OAAO,EAAGlI,MAAMmI,qBAAqBngC,KAAMo9B,gBAAiBz9B,OAAOsM,MAAM,KAC5E5K,WACT,IAAI48B,SAAWnB,SAGlB,OAFA4C,WAAW1/B,KAAO,GAClB0/B,WAAWhE,MAAQgE,WAAWC,aAAeD,WAAW/D,OAAS+D,WAAWE,cAAgB,EACrFF,WACAV,eACP5B,gBAAkBN,SAAW,EAAIoC,UACXjB,SAClBe,YAAc,MAEd5B,gBAAkBN,SAAWoC,UACPjB,SAClBe,YAAc,KAEd5B,gBAAkB,EAClB4B,YAAc,KAQ1B,GAHAH,SAAWlB,SAAST,QAAQx6B,KAAK,KACjCo8B,UAAYn/B,KAAK+8B,YAEbM,OAAQ,CACR,KAAOtlC,EAAI0Q,IAAK1Q,GAAK,EAajB,GAZAgmC,SAAWR,QAAQxlC,GAAKqnC,WAAWrnC,GAC/BiI,KAAK68B,OAAOkB,UACZO,SAAWt+B,KAAK68B,OAAOkB,UAAUhC,OAE5BoC,uBAA0BG,SAAWH,qBAAqBsC,UAAU1C,aACrEO,SAAWN,SAASD,WAExB/9B,KAAK68B,OAAOkB,WACRhC,MAAOuC,YAGfY,UAAYZ,UACGb,kBACNH,UACDA,QAAUC,QAAQliB,MAAM,GAAI,GAAGtY,KAAK,KAEpCm8B,SAAW/B,UAKX,OAJA4C,WAAW1/B,KAAOu/B,SAAStC,SAAW+B,YACtCU,WAAWW,SAAWX,WAAWG,QACjCH,WAAWhE,MAAQiC,SAAS+B,WAAW1/B,MACvC0/B,WAAW/D,OAASh8B,KAAK+8B,YAClBgD,WAQnB,OAHAA,WAAW1/B,KAAOk9B,QAAQx6B,KAAK,IAC/Bg9B,WAAWhE,MAAQmD,SACnBa,WAAW/D,OAASh8B,KAAK+8B,YAClBgD,WAEP,KAAOhoC,EAAI0Q,IAAK1Q,GAAK,EAkBjB,GAhBiB,OADjBgmC,SAAWR,QAAQxlC,GAAKqnC,WAAWrnC,KACV6kC,UACrBmB,SAAW,UAGX/9B,KAAK68B,OAAOkB,UACZO,SAAWt+B,KAAK68B,OAAOkB,UAAUhC,OAE5BoC,uBAA0BG,SAAWH,qBAAqBsC,UAAU1C,aACrEO,SAAWN,SAASD,WAExB/9B,KAAK68B,OAAOkB,WACRhC,MAAOuC,YAGfY,UAAYZ,UAEGb,kBACNH,UACDA,QAAUC,QAAQliB,MAAM,GAAI,GAAGtY,KAAK,KAEpCm8B,SAAW/B,UAAU,CA2BrB,GAzBA6B,UAAY3+B,KAAKkgC,OAAO,EAAGhD,QAAQ77B,QAAQi/B,YAAY,KACvD5B,SAAW1+B,KAAKkgC,OAAO,EAAGhD,QAAQ77B,QAAQi/B,YAAY,KAClD3B,UAAYC,iBACZC,SAAWlB,SAAST,QAAQliB,MAAM4jB,gBAAkB,EAAGD,WAAWj8B,KAAK,KACvEw6B,QAAQj2B,OAAO03B,UAAW,EAAG,SAC7BC,gBAAkBD,UAClBnB,aAAemB,UAAY,GACpBD,SAAWE,iBACdF,WAAaxB,QAAQ77B,OAAS,GAC9Bw9B,SAAWlB,SAAST,QAAQliB,MAAM4jB,gBAAkB,EAAGD,WAAWj8B,KAAK,KACvEw6B,QAAQj2B,OAAOy3B,SAAU,EAAG,YAE5BG,SAAWlB,SAAST,QAAQliB,MAAM4jB,gBAAkB,EAAGD,WAAWj8B,KAAK,KACvEw6B,QAAQj2B,OAAOy3B,SAAU,EAAG,WAEhCE,gBAAkBF,SAClBlB,aAAekB,SAAW,IAE1BxB,QAAQj2B,OAAOi2B,QAAQ77B,OAAS,EAAG,EAAG,QAAU09B,WAAWrnC,IAC3D4nC,cAAgBpC,QAAQ77B,OAAS,EACjCw9B,SAAWlB,SAAST,QAAQliB,MAAM4jB,gBAAkB,EAAGU,cAAgB,GAAG58B,KAAK,KAC/Ek8B,gBAAkBU,cAClB9B,aAAe9lC,IAEnBonC,WAAan/B,KAAK+8B,aACFK,UAMZ,OALA2C,WAAW1/B,KAAOu/B,SAAStC,SAAW+B,YACtCU,WAAWW,SAAWX,WAAWG,QAEjCH,WAAWhE,MAAQoB,SACnB4C,WAAW/D,OAASmD,UAAYn/B,KAAK+8B,YAC9BgD,WAEPjB,YAAcnqB,IAAImqB,YAAaI,UAC/B5B,QAAU,KACVQ,YAAczF,MAAMmI,qBAAqBngC,KAAKkgC,OAAO1C,cAAeJ,gBAAiBz9B,MACrFk/B,SAAWlB,SAAS39B,KAAKkgC,OAAO1C,aAAcC,aAAe,IACzDP,QAAQ77B,OAASm8B,aAAeC,cAEhC/lC,GADAwlC,QAAUA,QAAQ3hB,OAAOvb,KAAKkgC,OAAOhD,QAAQ77B,OAAQm8B,aAAeC,YAAcP,QAAQ77B,QAAQ4K,MAAM,MAC5F5K,OAAS,GAYzC,OALAo9B,YAAcnqB,IAAImqB,YAAaI,UAE/Ba,WAAW1/B,KAAOk9B,QAAQx6B,KAAK,IAC/Bg9B,WAAWhE,MAAQ+C,YACnBiB,WAAW/D,OAASmD,UACbY,WAWX,IARArC,SAAWr9B,KAAKC,QAAQ+3B,MAAMuI,iBAAkB,MAEhDvgC,MADAA,KAAOA,KAAKC,QAAQ+3B,MAAMuI,iBAAkBvI,MAAMwI,uBACtCvgC,QAAQ,iBAAkB,iBAAmB+3B,MAAMyI,iBAAkB,IAAKzI,MAAM0I,oBAAoBh+B,KAAK,IAAM,eAE3Hk2B,UAAUS,UAAYr5B,KAIjBg+B,EAAI,EAAG76B,GAFZ46B,QAAUnF,UAAUN,gBAAgBqI,iBAAiBrI,gBAAgBsI,sBAE7Cv/B,OAAQ28B,EAAI76B,EAAG66B,GAAK,EACxC5V,KAAO2V,QAAQC,IAEX1F,gBAAgBuI,gBAAkB7I,MAAM8I,aAAa9jC,KAAKorB,KAAK2Y,aAEnD,MADZ7C,IAAM9V,KAAKiR,aAEK,MAAR6E,IACAmB,WAAaF,aAAa99B,OACX,MAAR68B,MACPkB,UAAYD,aAAa99B,QAG7B89B,aAAat5B,MACTm7B,SAAU3B,WACV4B,QAAS7B,UACThX,KAAMA,OAEV2W,WAAWl5B,KAAKq4B,MAS5B,GAJAxmC,EAAI,EACJ0Q,IAAM+2B,aAAa99B,QACnB48B,SAAWkB,aAAa,GAAG/W,KAAKsR,aAEjBoD,SAIX,OAHA4C,WAAW1/B,KAAO,GAClB0/B,WAAWhE,MAAQgE,WAAWC,aAAeD,WAAW/D,OAAS+D,WAAWE,cAAgB,EAErFF,WAoBX,GAnBWzB,SAAWb,kBAAoBz9B,KAAKo6B,mBAE3CqD,gBAAkBN,SAAW,EAAIoC,UACXjB,SAClBe,YAAc,MAEd5B,gBAAkBN,SAAWoC,UACPjB,SAClBe,YAAc,KAEd5B,gBAAkB,EAClB4B,YAAc,KAK1BpB,YAAcuB,aAAa,GAAG/W,KAAK8Y,WACnCrD,WAAasB,aAAa,GAAG/W,KAAK+Y,UAE9BnE,OACA,KAAOtlC,EAAI0Q,IAAK1Q,GAAK,GAEjBymC,oBADA/V,KAAO+W,aAAaznC,GAAG0wB,MACG8Y,WAAatD,YAAcxV,KAAKsR,aAEjC0D,kBAChBmB,6BACDA,2BAA6B7mC,GAE7BkhC,UAAUc,YAAcoD,WACxBwB,gBAAkB5mC,EAClBA,EAAI0Q,WAKhB,KAAO1Q,EAAI0Q,IAAK1Q,GAAK,EAEjB0mC,iBADAhW,KAAO+W,aAAaznC,GAAG0wB,MACAqR,cAAgBrR,KAAK+Y,UAAYtD,YAGxDQ,OAAS,MAFTF,mBAAqB/V,KAAK8Y,WAAatD,YAAcxV,KAAKsR,aAIjC0D,iBAChBmB,6BACDA,2BAA6B7mC,GAG7BymC,mBAAqBrB,WACrB6B,UAAYQ,aAAaznC,GAAGspC,SAC5BtC,SAAWS,aAAaznC,GAAGupC,QACvBtC,UAAYC,iBACZO,aAAaR,WAAWvW,KAAKiR,UAAY,QACzCuF,gBAAkBD,WACXD,SAAWE,iBAGdO,aAAaT,UAAUtW,KAAKiR,UAF5BqF,WAAahnC,EAE2B,SAEA,SAE5CknC,gBAAkBF,UAElBtW,KAAKgZ,WAAWC,aAAahD,OAASnG,IAAIoJ,cAAc,MAAOlZ,MAI/DA,KAAKqR,aAAerR,KAAK+Y,UAAYpE,WAEjCsB,OACAA,OAAO+C,WAAW/a,YAAYgY,QACvBO,kBAAoBF,SAC3BS,aAAaT,UAAUtW,KAAKiR,UAAY,IAExC8F,aAAaR,WAAWvW,KAAKiR,UAAY,IAE7CiF,gBAAkB5mC,EAElBA,EAAI0Q,KAEJm2B,2BAA6B,OAKjCH,gBAAkBrB,YAClBuB,gBAAkB5mC,EAClBA,EAAI0Q,KAMpB,GAAIk2B,gBAAkBl2B,IAAK,CAOvB,IALAs3B,WAAWI,aAAc,EAGzBvB,2BAA6BA,4BAA0DD,gBAElF5mC,EAAI0Q,IAAM,EAAG1Q,GAAK6mC,2BAA4B7mC,GAAK,GACpD0wB,KAAO+W,aAAaznC,GAAG0wB,MAElBgZ,WAAW/a,YAAY+B,MAGhC,KAAO1wB,GAAK,EAAGA,GAAK,EAChB0wB,KAAO+W,aAAaznC,GAAG0wB,KACnB4P,MAAMuJ,eAAevkC,KAAKorB,KAAK2Y,WAE/B3Y,KAAKgZ,WAAW/a,YAAY+B,MAE5B1wB,EAAI,EAgBpB,OAVIgoC,WAAW1/B,KAAO44B,UAAUS,UAAUp5B,QAAQ+3B,MAAMwJ,gBAAiB,MAAMvhC,QAAQ,WAAY,KAC3Fy/B,WAAWI,cACXJ,WAAW1/B,MAAQg/B,YACnBU,WAAWW,SAAWhD,UAI9BqC,WAAW/D,OAAS/C,UAAUa,aAC9BiG,WAAWhE,MAAQ9C,UAAUc,YAEtBgG,WAGP,OADAA,WAAW+B,MAAQ,IAAI9xB,MAAM,qBACtB+vB,YAoBfhH,kBAAkBl/B,UAAUymC,WAAa,SAAUjgC,KAAM0hC,yBACrD,IAAK/hC,KAAKq6B,MACN,OAAO,EAGX,IAAI2H,QACAC,OACAC,MACAnqC,EACAC,EACAmqC,eAAiB,EACjBnG,OAAS,EACToG,iBAEJ,IAAKL,wBACD,OAAO/hC,KAAK06B,qBAAqBr6B,MAKrC,IAAKtI,EAAI,EAAGC,GADZgqC,QAAU3hC,KAAKiM,MAAM,KACG5K,OAAQ3J,EAAIC,EAAGD,IACnCkqC,OAASD,QAAQjqC,GACjBmqC,MAAQliC,KAAK06B,qBAAqBuH,QAAQ,EAAMD,QAAQtgC,QACxDs6B,OAASrnB,IAAIqnB,OAAQkG,MAAMlG,QAC3BmG,gBAAkBD,MAAMnG,MACxBqG,cAAcH,QAAUC,MAAMnG,MAGlC,OACIA,MAAOvxB,MAAM23B,gBACbnG,OAAQA,OACRyE,UAAW2B,gBAOnBrJ,kBAAkBl/B,UAAUo0B,QAAU,WAClC,OAAKjuB,KAAKq6B,OAIVr6B,KAAKm6B,mBAAqBn6B,KAAKm6B,kBAAkBlM,SAAWjuB,KAAKm6B,kBAAkBlM,iBAE5EjuB,KAAKm7B,kBACLn7B,KAAK28B,gBACL38B,KAAK68B,cACL78B,KAAKm6B,yBACLn6B,KAAKm8B,qBACLn8B,KAAKg5B,UACLh5B,KAAKi6B,aACLj6B,KAAKk6B,uBACLl6B,KAAKo6B,gBAELp6B,MAfIA,MAkBfzI,QAAO,QAAcwhC,kBACrBvhC,OAAOD,QAAUA,QAAO,mEC7yBxBkB,OAAOC,eAAenB,QAAS,cAC9ByB,OAAO,IAER,IAAIqpC,KACH/J,KAAM,SAASA,KAAK5I,KACnB,IAAI6I,IAAM7I,IAAI8I,SAEV8J,UADM5S,IAAI6S,UACMD,UAEhB/V,KAAO1oB,KAAK0oB,KACZ5a,MAAQ9N,KAAK8N,MAEb6wB,aAAe,2BACfC,eAAiBD,aAAe,YAChC1B,iBAAmB0B,aAAe,MAkLtC,OA/KAH,KACC3S,IAAKA,IAEL+S,eAAgBA,eAEhB3B,iBAAkBA,iBAElBC,mBATwByB,6BAWxBjJ,qBAAsB,IAEtB4H,aAAc,IAAIhhC,OAAO,KAAO2gC,iBAAmB,MAEnDc,eAAgB,IAAIzhC,OAAO,kCAE3BygC,iBAAkB,2CAElBC,qBAAsB,kBAAoBC,iBAAmB,cAE7De,gBAAiB,IAAI1hC,OAAO,kBAAoB2gC,iBAAmB,kCAAmC,MAEtGV,YAAa,IAAIjgC,OAAO,mBAAoB,KAE5CkgC,UAAW,aAEXqC,eAAgB,WAEhB/I,WAAY,MAGZK,sBACC2I,SAAU,WACVC,IAAK,UACLC,WAAY,SACZC,QAAS,MACT/G,MAAO,MACPC,OAAQ,MACR+G,SAAU,UAIXC,gBACCC,KAAM,OACNvH,WAAY,cACZwH,cAAe,cACfvH,WAAY,cACZwH,cAAe,cACf1H,SAAU,YACV2H,YAAa,YACbpG,WAAY,cACZqG,cAAe,cACfzH,UAAW,aACX0H,aAAc,cAIf1K,mBAAoB,SAASA,qBAC5B,IAAIoI,gBAAiBC,oBAAqBC,eAY1C,OAVI3I,IAAIgL,wBACPvC,gBAAkB,yBAClBC,oBAAsBH,iBACtBI,gBAAiB,IAEjBF,gBAAkB,uBAClBC,oBAAsB,OACtBC,gBAAiB,IAIjBrH,KAAM,QAAQx8B,KAAKilC,aAAe5S,IAAI8T,MACtCC,OAAQC,QAAQhU,IAAIiU,UAAYpL,IAAIqL,eAAeC,WAAW,oDAAqD,QACnHjK,WAAY,IAAIz5B,OAAO,aAAa9C,KAAKilC,WACzCxJ,SAAU,IAAI34B,OAAO,iBAAiB9C,KAAKilC,WAC3CtB,gBAAiBA,gBACjBC,oBAAqBA,oBACrBC,eAAgBA,iBAWlBzH,gBAAiB,SAASA,gBAAgBqK,iBACzC,IAAIC,KAAM9K,UAEV,GAAI6K,kBAAoBA,gBAAgB/J,aAAe+J,gBAAgBhK,eACtE,GAAIgK,gBAAgBE,YAKnB,OAJAF,gBAAgBE,YAAY/K,UAAYV,IAAIoJ,cArGtC,QAsGN1I,UAAUmI,UAAYqB,eACtBxJ,UAAUgL,aAAa,cAAe,QACtChL,UAAUgL,aAAa,OAAQ,gBACxBhL,eAKR,IAFA8K,KAAOxL,IAAI2L,qBAAqB,QAAQ,KAE5BH,KAAKC,YAOhB,OANA/K,UAAYV,IAAIoJ,cA/GV,QAgHIP,UAAYqB,eACtBxJ,UAAUgL,aAAa,cAAe,QACtChL,UAAUgL,aAAa,OAAQ,gBACL,EAC1BF,KAAKC,YAAY/K,WACVA,WAMVuH,qBAAsB,SAASA,qBAAqBngC,KAAM88B,SAAUgH,IACnE,IAAK9jC,OAASA,KAAKqB,OAClB,OAAO,EAGR,IAAI4sB,WACA0P,SAAWmG,GAAGlI,cACdmI,QAAU,EACVC,UAAY,EACZ1G,SAAWK,SAAS39B,MACpBikC,SAAW3G,SAAWt9B,KAAKqB,OAK/B,GAHA4sB,WAAa6O,SACbiH,QAAU7X,KAAK4Q,SAAWmH,UAEtB3G,SAAWR,SACd,OAAO98B,KAAKqB,OAAS,EAQtB,IALI0iC,QAAU/jC,KAAKqB,SAClB4sB,WAAa6O,SAAWQ,SACxByG,QAAU/jC,KAAKqB,QAGT4sB,WAAa,GAAG,CAGtB,GAFAA,WAAa6O,SAAWa,SAAS39B,KAAKkgC,OAAO,EAAG6D,YAChDC,UAAY1yB,MAAM2c,WAAagW,WAI9B,OAAOF,QAFPA,SAAWC,UAMb,KAAO/V,WAAa,GAAG,CAGtB,GAFAA,WAAa6O,SAAWa,SAAS39B,KAAKkgC,OAAO,EAAG6D,YAChDC,UAAY1yB,MAAM2c,WAAagW,WAI9B,OAAOF,QAFPA,SAAWC,UAKb,OAAOD,SAWR3H,cAAe,SAASA,cAAc8H,UACrC,IAAIC,MAAQD,SAAS9I,SAAW8I,SAAS9I,UAAY,OAErD,OADA8I,SAASvH,WAAauH,SAASvH,YAAcuH,SAAS,gBAAwC,IAAtBljC,SAASmjC,MAAO,IAAY,KAC7FD,aAQXhtC,QAAO,QAAc8qC,IACrB7qC,OAAOD,QAAUA,QAAO,wvCCvMxB,IAAMktC,KAAOtM,oBAAQ,IAErB3gC,OAAOD,QAAUktC,KAAKrqC,QAAUqqC,KAAKrqC,QAAUqqC,gECE/C,IAIIpM,MANJ,SAASJ,uBAAuB/vB,KAAO,OAAOA,KAAOA,IAAI/O,WAAa+O,KAAQ9N,QAAW8N,KAI7E+vB,CAFDE,oBAAQ,IAIF,QAAYG,KAAuB,oBAAX3gC,OAAyBA,YAAS2V,GACvEirB,IAAMF,MAAM3I,IAAI8I,SAChBG,gBAAkBN,MAAMO,qBACxBC,oBAAsBF,gBAAgBG,SAAW,EAAI,IAEzD,SAAS4L,iBAAiBxK,gBAAiBb,cAAesL,eACtD,IAAIC,IAGJD,eADAA,cAAgBA,cAAgB,EAAIA,cAAgB,GACpB,GAAKA,cAAgB,GAErD3kC,KAAK2kC,cAAgBA,cACrB3kC,KAAK6kC,MAAQ,KACb7kC,KAAK8kC,KAAO,KACZ9kC,KAAK+kC,cACL/kC,KAAK0B,OAAS,EACd1B,KAAKglC,SAAW9K,gBAEZb,iBACAuL,IAAMrM,IAAI0M,gBAAgB,6BAA8B,QACpDC,eAAe,6BAA8B,QAAS,gCAC1DN,IAAIM,eAAe,6BAA8B,SAAU,KAC3DN,IAAIM,eAAe,6BAA8B,QAAS,KAC1DllC,KAAKmlC,QAAUP,IACf5kC,KAAKglC,SAAShB,YAAYY,MAIlCF,iBAAiB7qC,UAAUjB,IAAM,SAAUqhC,OACvC,IAAImL,KACA9rC,IACA+rC,aACAN,WAAa/kC,KAAK+kC,WAClBt8B,IAAMzI,KAAK0B,OACXiT,IAAM3U,KAAK2kC,cACXW,OAAS,GAEb,IAAKhsC,OAAO++B,MAAM2K,oBACK11B,IAAf2sB,MAAM3gC,OACNgsC,QAAUjN,MAAM2K,eAAe1pC,KAAO,IAAM2gC,MAAM3gC,KAAO,KAIjE,IAAKgsC,OACD,OAAO,EAGX,GAAID,aAAeN,WAAWO,QACtBtlC,KAAK6kC,QAAUQ,eACfA,aAAaE,OAASF,aAAaE,KAAK53B,KAAO03B,aAAa13B,MAC5D03B,aAAa13B,OAAS03B,aAAa13B,KAAK43B,KAAOF,aAAaE,MAC5DF,aAAa13B,KAAO3N,KAAK6kC,MACzBQ,aAAa13B,KAAK43B,KAAOF,aACzBrlC,KAAK8kC,OAASO,eAAiBrlC,KAAK8kC,KAAOO,aAAaE,MACxDF,aAAaE,KAAO,KACpBvlC,KAAK6kC,MAAQQ,kBAEd,CACH,GAAI58B,KAAOkM,IAGP,IAFAywB,KAAO38B,IAAMkM,IAAM,EAEZywB,QACHplC,KAAKwlC,gBAAgBxlC,KAAK8kC,MAGlCO,aAAerlC,KAAKylC,aAAaH,QAGrC,OAAOD,cAGXX,iBAAiB7qC,UAAU4rC,aAAe,SAAUH,QAChD,IAAIvU,KAAMkI,UA8DV,OA5DAj5B,KAAK+kC,WAAWO,QAAUrM,WACtBtrB,KAAM,KACN43B,KAAM,KACNxU,KAAM,KACNuO,cAAe,EACftC,WAAY,EACZuC,SAAU,EACVmG,aAAc,EACdJ,OAAQA,OACRxI,cAKJ7D,UAAUtrB,KAAO3N,KAAK6kC,MACtB5L,UAAUtrB,OAASsrB,UAAUtrB,KAAK43B,KAAOtM,WACzCj5B,KAAK6kC,MAAQ5L,UACRj5B,KAAK8kC,OACN9kC,KAAK8kC,KAAO7L,WAEhBj5B,KAAK0B,QAAU,EAEfqvB,KAAOkI,UAAUlI,KAAOwH,IAAIoJ,cAAc,OAC1C3hC,KAAKglC,SAAShB,YAAYjT,MAEtB4H,gBAAgBkB,OAASlB,gBAAgB8K,OACzC1S,KAAKkJ,MAAMgK,aAAa,UAAWqB,QAEnCvU,KAAKkT,aAAa,QAASqB,QAG/BvU,KAAKkT,aAAa,cAAe,QACjClT,KAAKkT,aAAa,OAAQ,gBAC1BlT,KAAKkJ,MAAM0L,QAAU,eAErB5U,KAAK2I,UAAYrB,MAAMsB,WACvBV,UAAU+D,WAAajM,KAAK+I,aAC5Bb,UAAUyM,aAAe3U,KAAKgJ,YAAc,EAExCpB,gBAAgBU,gBAChBtI,KAAOkI,UAAUmD,QAAU7D,IAAI0M,gBAAgB,6BAA8B,SACxEhB,aAAa,QAASqB,QAC3BtlC,KAAKmlC,QAAQnB,YAAYjT,MAEzBA,KAAKuL,YAAcjE,MAAMsB,WACzBV,UAAU+D,WAAajM,KAAKwL,UAAUP,OACtC/C,UAAUyM,cAAgB3U,KAAKwL,UAAUR,MAAQlD,qBAAuB,EAExE9H,KAAKuL,YAAc,MACnBrD,UAAUqG,cAAgBvO,KAAKwL,UAAUR,MAAQlD,oBACjD9H,KAAKuL,YAAc,IACnBrD,UAAUsG,SAAWxO,KAAKwL,UAAUR,MAAQlD,sBAE5C9H,KAAK2I,UAAY,MACjBT,UAAUqG,cAAgBvO,KAAKgJ,YAC/BhJ,KAAK2I,UAAY,IACjBT,UAAUsG,SAAWxO,KAAKgJ,YAC1BhJ,KAAK2I,UAAY,IAGdT,WAGXyL,iBAAiB7qC,UAAU2rC,gBAAkB,SAAUI,MACnD,IAAIN,OAASM,KAAKN,OAEbA,QAAWtlC,KAAK0B,QAAWkkC,OAGhC5lC,KAAK0B,QAAU,EAEfkkC,KAAKL,OAASK,KAAKL,KAAK53B,KAAOi4B,KAAKj4B,MACpCi4B,KAAKj4B,OAASi4B,KAAKj4B,KAAK43B,KAAOK,KAAKL,MACpCvlC,KAAK6kC,QAAUe,OAAS5lC,KAAK6kC,MAAQe,KAAKj4B,MAC1C3N,KAAK8kC,OAASc,OAAS5lC,KAAK8kC,KAAOc,KAAKL,MAExCK,KAAK7U,KAAK0Q,WAAW/a,YAAYkf,KAAK7U,aAE/B/wB,KAAK+kC,WAAWO,UAG3BZ,iBAAiB7qC,UAAUo0B,QAAU,WACjC,IAAI30B,IACAyrC,WAAa/kC,KAAK+kC,WAGtB,IAAKzrC,OADL0G,KAAK2kC,cAAgB,KACTI,WACR/kC,KAAKwlC,gBAAgBT,WAAWzrC,MAGpC0G,KAAKglC,SAASvD,WAAW/a,YAAY1mB,KAAKglC,UAE1ChlC,KAAKglC,SAAW,KAChBhlC,KAAK6kC,MAAQ,KACb7kC,KAAK8kC,KAAO,MAGhBttC,OAAOD,QAAUmtC,o2dCnLFmB,UAAA,SAAS1rC,EAAGiJ,GACzB,OAAOjJ,EAAIiJ,GAAK,EAAIjJ,EAAIiJ,EAAI,EAAIjJ,GAAKiJ,EAAI,EAAI0iC,KCChCC,SAAA,SAASC,SAEtB,OADuB,IAAnBA,QAAQtkC,SAAcskC,QAyB5B,SAASC,oBAAoBlrB,GAC3B,OAAO,SAAS1iB,EAAGgmC,GACjB,OAAOwH,UAAU9qB,EAAE1iB,GAAIgmC,IA3BW4H,CAAoBD,WAEtDE,KAAM,SAAAA,KAAS/rC,EAAGkkC,EAAG7sB,GAAIC,IAGvB,IAFU,MAAND,KAAYA,GAAK,GACX,MAANC,KAAYA,GAAKtX,EAAEuH,QAChB8P,GAAKC,IAAI,CACd,IAAIC,IAAMF,GAAKC,KAAO,EAClBu0B,QAAQ7rC,EAAEuX,KAAM2sB,GAAK,EAAG7sB,GAAKE,IAAM,EAClCD,GAAKC,IAEZ,OAAOF,IAET20B,MAAO,SAAAA,MAAShsC,EAAGkkC,EAAG7sB,GAAIC,IAGxB,IAFU,MAAND,KAAYA,GAAK,GACX,MAANC,KAAYA,GAAKtX,EAAEuH,QAChB8P,GAAKC,IAAI,CACd,IAAIC,IAAMF,GAAKC,KAAO,EAClBu0B,QAAQ7rC,EAAEuX,KAAM2sB,GAAK,EAAG5sB,GAAKC,IAC5BF,GAAKE,IAAM,EAElB,OAAOF,MCpBb,IAAI40B,gBAAkBL,SAASF,WACpBQ,YAAcD,gBAAgBD,MAE1BE,QADSD,gBAAgBF,KACzBG,aCJA,ICFAC,OAAA,SAASjI,GACtB,OAAa,OAANA,EAAayH,KAAOzH,GCDzBkI,YAAQ19B,MAAMhP,UCAH2sC,WDEID,YAAMlrB,MACRkrB,YAAMt+B,ICHR,SAASxK,MAAOgpC,KAAMC,MACnCjpC,OAASA,MAAOgpC,MAAQA,KAAMC,MAAQltC,EAAI4L,UAAU1D,QAAU,GAAK+kC,KAAOhpC,MAAOA,MAAQ,EAAG,GAAKjE,EAAI,EAAI,GAAKktC,KAM9G,IAJA,IAAI3uC,GAAK,EACLyB,EAAoD,EAAhDqK,KAAK8Q,IAAI,EAAG9Q,KAAK0oB,MAAMka,KAAOhpC,OAASipC,OAC3CnlC,MAAQ,IAAIsH,MAAMrP,KAEbzB,EAAIyB,GACX+H,MAAMxJ,GAAK0F,MAAQ1F,EAAI2uC,KAGzB,OAAOnlC,QCXLolC,IAAM9iC,KAAK+Q,KAAK,IAChBgyB,GAAK/iC,KAAK+Q,KAAK,IACfiyB,GAAKhjC,KAAK+Q,KAAK,GAEJkyB,UAAA,SAASrpC,MAAOgpC,KAAMM,OACnC,IAAIliB,QAEArrB,EACAwtC,MACAN,KAHA3uC,GAAK,EAMT,GAD8BgvC,OAASA,OAAzBtpC,OAASA,UAAvBgpC,MAAQA,OACcM,MAAQ,EAAG,OAAQtpC,OAEzC,IADIonB,QAAU4hB,KAAOhpC,SAAOjE,EAAIiE,MAAOA,MAAQgpC,KAAMA,KAAOjtC,GACT,KAA9CktC,KAAOO,cAAcxpC,MAAOgpC,KAAMM,UAAkB3lC,SAASslC,MAAO,SAEzE,GAAIA,KAAO,EAIT,IAHAjpC,MAAQoG,KAAK0oB,KAAK9uB,MAAQipC,MAC1BD,KAAO5iC,KAAK8N,MAAM80B,KAAOC,MACzBM,MAAQ,IAAIn+B,MAAMrP,EAAIqK,KAAK0oB,KAAKka,KAAOhpC,MAAQ,MACtC1F,EAAIyB,GAAGwtC,MAAMjvC,IAAM0F,MAAQ1F,GAAK2uC,UAKzC,IAHAjpC,MAAQoG,KAAK8N,MAAMlU,MAAQipC,MAC3BD,KAAO5iC,KAAK0oB,KAAKka,KAAOC,MACxBM,MAAQ,IAAIn+B,MAAMrP,EAAIqK,KAAK0oB,KAAK9uB,MAAQgpC,KAAO,MACtC1uC,EAAIyB,GAAGwtC,MAAMjvC,IAAM0F,MAAQ1F,GAAK2uC,KAK3C,OAFI7hB,SAASmiB,MAAMniB,UAEZmiB,OAGF,SAASC,cAAcxpC,MAAOgpC,KAAMM,OACzC,IAAIL,MAAQD,KAAOhpC,OAASoG,KAAK8Q,IAAI,EAAGoyB,OACpCG,MAAQrjC,KAAK8N,MAAM9N,KAAKsjC,IAAIT,MAAQ7iC,KAAKujC,MACzCtF,MAAQ4E,KAAO7iC,KAAKiR,IAAI,GAAIoyB,OAChC,OAAOA,OAAS,GACTpF,OAAS6E,IAAM,GAAK7E,OAAS8E,GAAK,EAAI9E,OAAS+E,GAAK,EAAI,GAAKhjC,KAAKiR,IAAI,GAAIoyB,QAC1ErjC,KAAKiR,IAAI,IAAKoyB,QAAUpF,OAAS6E,IAAM,GAAK7E,OAAS8E,GAAK,EAAI9E,OAAS+E,GAAK,EAAI,GAGlF,SAASQ,SAAS5pC,MAAOgpC,KAAMM,OACpC,IAAIO,MAAQzjC,KAAK2oB,IAAIia,KAAOhpC,OAASoG,KAAK8Q,IAAI,EAAGoyB,OAC7CQ,MAAQ1jC,KAAKiR,IAAI,GAAIjR,KAAK8N,MAAM9N,KAAKsjC,IAAIG,OAASzjC,KAAKujC,OACvDtF,MAAQwF,MAAQC,MAIpB,OAHIzF,OAAS6E,IAAKY,OAAS,GAClBzF,OAAS8E,GAAIW,OAAS,EACtBzF,OAAS+E,KAAIU,OAAS,GACxBd,KAAOhpC,OAAS8pC,MAAQA,MCjDlB,ICEAC,SAAA,SAAS7oB,OAAQ5kB,EAAG0tC,SAEjC,GADe,MAAXA,UAAiBA,QAAUnB,QACzB9sC,EAAImlB,OAAOjd,OAAjB,CACA,IAAK3H,GAAKA,IAAM,GAAKP,EAAI,EAAG,OAAQiuC,QAAQ9oB,OAAO,GAAI,EAAGA,QAC1D,GAAI5kB,GAAK,EAAG,OAAQ0tC,QAAQ9oB,OAAOnlB,EAAI,GAAIA,EAAI,EAAGmlB,QAClD,IAAInlB,EACAzB,GAAKyB,EAAI,GAAKO,EACd2tC,GAAK7jC,KAAK8N,MAAM5Z,GAChB4vC,QAAUF,QAAQ9oB,OAAO+oB,IAAKA,GAAI/oB,QAEtC,OAAOgpB,SADOF,QAAQ9oB,OAAO+oB,GAAK,GAAIA,GAAK,EAAG/oB,QACpBgpB,SAAW5vC,EAAI2vC,MCV3C,SAASt1B,WAkDT,SAASnK,QAAItO,OAAQohB,GACnB,IAAI9S,IAAM,IAAImK,QAGd,GAAIzY,kBAAkByY,QAAKzY,OAAOiuC,KAAK,SAAS5uC,MAAOM,KAAO2O,IAAIwK,IAAInZ,IAAKN,cAGtE,GAAI6P,MAAMuB,QAAQzQ,QAAS,CAC9B,IAEInB,EAFAT,GAAK,EACLyB,EAAIG,OAAO+H,OAGf,GAAS,MAALqZ,EAAW,OAAShjB,EAAIyB,GAAGyO,IAAIwK,IAAI1a,EAAG4B,OAAO5B,SAC5C,OAASA,EAAIyB,GAAGyO,IAAIwK,IAAIsI,EAAEviB,EAAImB,OAAO5B,GAAIA,EAAG4B,QAASnB,QAIvD,GAAImB,OAAQ,IAAK,IAAIL,OAAOK,OAAQsO,IAAIwK,IAAInZ,IAAKK,OAAOL,MAE7D,OAAO2O,IAnETmK,QAAIvY,UAAYoO,QAAIpO,WAClBssB,YAAa/T,QACbI,IAAK,SAAAA,IAASlZ,KACZ,MAPgB,IAOCA,OAAQ0G,MAE3BpH,IAAK,SAAAA,IAASU,KACZ,OAAO0G,KAVS,IAUK1G,MAEvBmZ,IAAK,SAAAA,IAASnZ,IAAKN,OAEjB,OADAgH,KAbgB,IAaF1G,KAAON,MACdgH,MAET6nC,OAAQ,SAAAA,OAASvuC,KACf,IAAIM,SAjBY,IAiBQN,IACxB,OAAOM,YAAYoG,aAAeA,KAAKpG,WAEzCkuC,MAAO,SAAAA,QACL,IAAK,IAAIluC,YAAYoG,KArBL,MAqBepG,SAAS,WAAsBoG,KAAKpG,WAErEkM,KAAM,SAAAA,OACJ,IAAIA,QACJ,IAAK,IAAIlM,YAAYoG,KAzBL,MAyBepG,SAAS,IAAekM,KAAKI,KAAKtM,SAASyhB,MAAM,IAChF,OAAOvV,MAET6Y,OAAQ,SAAAA,SACN,IAAIA,UACJ,IAAK,IAAI/kB,YAAYoG,KA9BL,MA8BepG,SAAS,IAAe+kB,OAAOzY,KAAKlG,KAAKpG,WACxE,OAAO+kB,QAETzJ,QAAS,SAAAA,UACP,IAAIA,WACJ,IAAK,IAAItb,YAAYoG,KAnCL,MAmCepG,SAAS,IAAesb,QAAQhP,MAAM5M,IAAKM,SAASyhB,MAAM,GAAIriB,MAAOgH,KAAKpG,YACzG,OAAOsb,SAET0lB,KAAM,SAAAA,OACJ,IAAIA,KAAO,EACX,IAAK,IAAIhhC,YAAYoG,KAxCL,MAwCepG,SAAS,MAAiBghC,KACzD,OAAOA,MAETmN,MAAO,SAAAA,QACL,IAAK,IAAInuC,YAAYoG,KAAM,GA5CX,MA4CepG,SAAS,GAAe,OAAO,EAC9D,OAAO,GAETguC,KAAM,SAAAA,KAAS7sB,GACb,IAAK,IAAInhB,YAAYoG,KAhDL,MAgDepG,SAAS,IAAemhB,EAAE/a,KAAKpG,UAAWA,SAASyhB,MAAM,GAAIrb,QA0BjFiI,oBCxEA+/B,SAAA,WACb,IAEIC,YACAC,QACAC,KAJAriC,QACAsiC,aAKJ,SAAS7gC,MAAMg/B,MAAO8B,MAAOC,aAAcC,WACzC,GAAIF,OAASviC,KAAKpE,OAEhB,OADkB,MAAdumC,aAAoB1B,MAAM/yB,KAAKy0B,aAClB,MAAVC,QAAiBA,QAAO3B,OAASA,MAY1C,IATA,IAGIiC,SACAxvC,MAEA2lB,OANA5mB,GAAK,EACLyB,EAAI+sC,MAAM7kC,OACVpI,IAAMwM,KAAKuiC,SAGXI,YAAcxgC,UAEdxE,OAAS6kC,iBAEJvwC,EAAIyB,IACPmlB,OAAS8pB,YAAY7vC,IAAI4vC,SAAWlvC,IAAIN,MAAQutC,MAAMxuC,IAAM,KAC9D4mB,OAAOzY,KAAKlN,OAEZyvC,YAAYh2B,IAAI+1B,UAAWxvC,QAQ/B,OAJAyvC,YAAYb,KAAK,SAASjpB,OAAQrlB,KAChCivC,UAAU9kC,OAAQnK,IAAKiO,MAAMoX,OAAQ0pB,MAAOC,aAAcC,cAGrD9kC,OAWT,OAAO0kC,MACLxuC,OAAQ,SAAAA,OAAS4sC,OAAS,OAAOh/B,MAAMg/B,MAAO,EAAGmC,aAAcC,YAC/D1gC,IAAK,SAAAA,IAASs+B,OAAS,OAAOh/B,MAAMg/B,MAAO,EAAGqC,UAAWC,SACzD3zB,QAAS,SAAAA,QAASqxB,OAAS,OAX7B,SAASrxB,SAAQjN,IAAKogC,OACpB,KAAMA,MAAQviC,KAAKpE,OAAQ,OAAOuG,IAClC,IAAIs+B,MAAOuC,QAAUV,UAASC,MAAQ,GAGtC,OAFc,MAAVH,SAAkBG,OAASviC,KAAKpE,OAAQ6kC,MAAQt+B,IAAIiN,WACnDqxB,SAAYt+B,IAAI2/B,KAAK,SAASl/B,EAAGqgC,GAAKxC,MAAMrgC,MAAM5M,IAAKyvC,EAAGpqB,OAAQzJ,SAAQxM,EAAG2/B,YAChE,MAAXS,QAAkBvC,MAAM/yB,KAAK,SAASrZ,EAAGiJ,GAAK,OAAO0lC,QAAQ3uC,EAAEb,IAAK8J,EAAE9J,OAAWitC,MAMtDrxB,CAAQ3N,MAAMg/B,MAAO,EAAGqC,UAAWC,QAAS,IAC9EvvC,IAAK,SAAAA,IAASjB,GAAmB,OAAdyN,KAAKI,KAAK7N,GAAW8vC,MACxCC,SAAU,SAAAA,SAASjhB,OAA4C,OAAnCihB,UAAStiC,KAAKpE,OAAS,GAAKylB,MAAcghB,MACtEF,WAAY,SAAAA,WAAS9gB,OAA6B,OAApB8gB,YAAa9gB,MAAcghB,MACzDD,OAAQ,SAAAA,OAASntB,GAAiB,OAAZmtB,QAASntB,EAAUotB,QAI7C,SAASO,eACP,SAGF,SAASC,UAAUhvC,OAAQL,IAAKN,OAC9BW,OAAOL,KAAON,MAGhB,SAAS4vC,YACP,OAAO3gC,UAGT,SAAS4gC,OAAO5gC,IAAK3O,IAAKN,OACxBiP,IAAIwK,IAAInZ,IAAKN,OCrEf,SAAS+d,WAET,IAAIiyB,MAAQ/gC,QAAIpO,UAkBhB,SAAS4Y,QAAI9Y,OAAQohB,GACnB,IAAItI,IAAM,IAAIsE,QAGd,GAAIpd,kBAAkBod,QAAKpd,OAAOiuC,KAAK,SAAS5uC,OAASyZ,IAAIwE,IAAIje,cAG5D,GAAIW,OAAQ,CACf,IAAI5B,GAAK,EAAGyB,EAAIG,OAAO+H,OACvB,GAAS,MAALqZ,EAAW,OAAShjB,EAAIyB,GAAGiZ,IAAIwE,IAAItd,OAAO5B,SACzC,OAASA,EAAIyB,GAAGiZ,IAAIwE,IAAI8D,EAAEphB,OAAO5B,GAAIA,EAAG4B,SAG/C,OAAO8Y,IA7BTsE,QAAIld,UAAY4Y,QAAI5Y,WAClBssB,YAAapP,QACbvE,IAAKw2B,MAAMx2B,IACXyE,IAAK,SAAAA,IAASje,OAGZ,OADAgH,KFXgB,KEUhBhH,OAAS,KACcA,MAChBgH,MAET6nC,OAAQmB,MAAMnB,OACdC,MAAOkB,MAAMlB,MACbnpB,OAAQqqB,MAAMljC,KACd80B,KAAMoO,MAAMpO,KACZmN,MAAOiB,MAAMjB,MACbH,KAAMoB,MAAMpB,MAmBCn1B,ICtCX8zB,gBAAQ19B,MAAMhP,UAEPoO,cAAMs+B,gBAAMt+B,IACZoT,YAAQkrB,gBAAMlrB,MCAd4tB,UAAY3wC,KAAM,YAEd,SAAS4wC,QAAQ3nC,OAC9B,IAAIU,MAAQgG,UACR+O,UACAmyB,QAAUF,SAId,SAASG,MAAM/wC,GACb,IAAIiB,IAAMjB,EAAI,GAAIN,EAAIkK,MAAMrJ,IAAIU,KAChC,IAAKvB,EAAG,CACN,GAAIoxC,UAAYF,SAAU,OAAOE,QACjClnC,MAAMwQ,IAAInZ,IAAKvB,EAAIif,OAAO9Q,KAAK7N,IAEjC,OAAOkJ,OAAOxJ,EAAI,GAAKwJ,MAAMG,QA0B/B,OAlCAH,MAAiB,MAATA,SAAqB8Z,YAAMnjB,KAAKqJ,OAWxC6nC,MAAMpyB,OAAS,SAASyK,GACtB,IAAKrc,UAAU1D,OAAQ,OAAOsV,OAAOqE,QACrCrE,UAAa/U,MAAQgG,UAErB,IADA,IAA0B5P,EAAGiB,IAAzBvB,GAAK,EAAGyB,EAAIioB,EAAE/f,SACT3J,EAAIyB,GAAQyI,MAAMuQ,IAAIlZ,KAAOjB,EAAIopB,EAAE1pB,IAAM,KAAKkK,MAAMwQ,IAAInZ,IAAK0d,OAAO9Q,KAAK7N,IAClF,OAAO+wC,OAGTA,MAAM7nC,MAAQ,SAASkgB,GACrB,OAAOrc,UAAU1D,QAAUH,MAAQ8Z,YAAMnjB,KAAKupB,GAAI2nB,OAAS7nC,MAAM8Z,SAGnE+tB,MAAMD,QAAU,SAAS1nB,GACvB,OAAOrc,UAAU1D,QAAUynC,QAAU1nB,EAAG2nB,OAASD,SAGnDC,MAAMC,KAAO,WACX,OAAOH,UACFlyB,OAAOA,QACPzV,MAAMA,OACN4nC,QAAQA,UAGRC,MCzCM,SAASE,OACtB,IAII5C,KACA6C,UALAH,MAAQF,UAAUC,aAAQ77B,GAC1B0J,OAASoyB,MAAMpyB,OACfwyB,aAAeJ,MAAM7nC,MACrBA,OAAS,EAAG,GAGZiJ,OAAQ,EACRi/B,aAAe,EACfC,aAAe,EACfC,MAAQ,GAGZ,SAASC,UACP,IAAIpwC,EAAIwd,SAAStV,OACbmjB,QAAUtjB,MAAM,GAAKA,MAAM,GAC3B9D,MAAQ8D,MAAMsjB,QAAU,GACxB4hB,KAAOllC,MAAM,EAAIsjB,SACrB6hB,MAAQD,KAAOhpC,OAASoG,KAAK8Q,IAAI,EAAGnb,EAAIiwC,aAA8B,EAAfC,cACnDl/B,QAAOk8B,KAAO7iC,KAAK8N,MAAM+0B,OAC7BjpC,QAAUgpC,KAAOhpC,MAAQipC,MAAQltC,EAAIiwC,eAAiBE,MACtDJ,UAAY7C,MAAQ,EAAI+C,cACpBj/B,QAAO/M,MAAQoG,KAAK2G,MAAM/M,OAAQ8rC,UAAY1lC,KAAK2G,MAAM++B,YAC7D,IAAI5qB,OAASkrB,UAASrwC,GAAGyO,IAAI,SAASlQ,GAAK,OAAO0F,MAAQipC,KAAO3uC,IACjE,OAAOyxC,aAAa3kB,QAAUlG,OAAOkG,UAAYlG,QAkGnD,cA9GOyqB,MAAMD,QAebC,MAAMpyB,OAAS,SAASyK,GACtB,OAAOrc,UAAU1D,QAAUsV,OAAOyK,GAAImoB,WAAa5yB,UAGrDoyB,MAAM7nC,MAAQ,SAASkgB,GACrB,OAAOrc,UAAU1D,QAAUH,QAAUkgB,EAAE,IAAKA,EAAE,IAAKmoB,WAAaroC,MAAM8Z,SAGxE+tB,MAAMU,WAAa,SAASroB,GAC1B,OAAOlgB,QAAUkgB,EAAE,IAAKA,EAAE,IAAKjX,OAAQ,EAAMo/B,WAG/CR,MAAMG,UAAY,WAChB,OAAOA,WAGTH,MAAM1C,KAAO,WACX,OAAOA,MAGT0C,MAAM5+B,MAAQ,SAASiX,GACrB,OAAOrc,UAAU1D,QAAU8I,QAAUiX,EAAGmoB,WAAap/B,OAGvD4+B,MAAMtG,QAAU,SAASrhB,GACvB,OAAOrc,UAAU1D,QAAU+nC,aAAeC,aAAe7lC,KAAK8Q,IAAI,EAAG9Q,KAAK6Q,IAAI,EAAG+M,IAAKmoB,WAAaH,cAGrGL,MAAMK,aAAe,SAAShoB,GAC5B,OAAOrc,UAAU1D,QAAU+nC,aAAe5lC,KAAK8Q,IAAI,EAAG9Q,KAAK6Q,IAAI,EAAG+M,IAAKmoB,WAAaH,cAGtFL,MAAMM,aAAe,SAASjoB,GAC5B,OAAOrc,UAAU1D,QAAUgoC,aAAe7lC,KAAK8Q,IAAI,EAAG9Q,KAAK6Q,IAAI,EAAG+M,IAAKmoB,WAAaF,cAGtFN,MAAMO,MAAQ,SAASloB,GACrB,OAAOrc,UAAU1D,QAAUioC,MAAQ9lC,KAAK8Q,IAAI,EAAG9Q,KAAK6Q,IAAI,EAAG+M,IAAKmoB,WAAaD,OAG/EP,MAAMC,KAAO,WACX,OAAOC,OACFtyB,OAAOA,UACPzV,MAAMA,OACNiJ,MAAMA,OACNi/B,aAAaA,cACbC,aAAaA,cACbC,MAAMA,QAGbP,MAAMW,aAAe,SAASC,GAAIC,IAChC,IAI2B9vC,EAAGiJ,EAAGnK,EAC7BixC,QALA14B,IAAMw4B,GACNv4B,GAAKrM,UAAU1D,OAAS,GAAKuoC,GAAKz4B,GAClCqT,QAAUtjB,MAAM,GAAKA,MAAM,GAC3Bod,OAASkG,QAAU2kB,eAAe3kB,UAAY2kB,eAC9ChwC,EAAImlB,OAAOjd,OAAS,EAKxB,GAHAid,OAAOzY,KAAKyY,OAAOnlB,GAAKwG,KAAK0mC,QAEzBj1B,GAAKD,KAAIvY,EAAIuY,GAAIA,GAAKC,GAAIA,GAAKxY,KAC/BwY,GAAKkN,OAAO,IAAMnN,GAAKjQ,MAAM,EAAEsjB,UAWnC,OARA1qB,EAAI0J,KAAK8Q,IAAI,EAAGw1B,kBAAkBxrB,OAAQnN,KAC1C04B,QAAUC,kBAAkBxrB,OAAQlN,IACpCrO,EAAIoO,KAAKC,GAAKtX,EAAI0J,KAAK8Q,IAAIxa,EAAG+vC,QAAU,GAKpCrlB,UAAS5rB,EAAIkB,EAAGA,EAAIX,EAAI4J,EAAGA,EAAI5J,EAAIP,GAC/BkB,EAAIiJ,OAAKkK,EAAY0J,SAASqE,MAAMlhB,EAAGiJ,EAAE,IAGnDgmC,MAAMgB,OAAS,SAAUJ,GAAIC,IAC3B,IAKI9vC,EACAlB,EANAuY,IAAMw4B,GACNv4B,GAAKrM,UAAU1D,OAAS,GAAKuoC,GAAKz4B,GAClCqT,QAAUtjB,MAAM,GAAKA,MAAM,GAC3Bod,OAASkG,QAAU2kB,eAAe3kB,UAAY2kB,eAC9ChwC,EAAImlB,OAAOjd,OAAS,EAMxB,GADI+P,GAAKD,KAAIvY,EAAIuY,GAAIA,GAAKC,GAAIA,GAAKxY,KAC/BwY,GAAKkN,OAAO,IAAMnN,GAAKjQ,MAAM,EAAEsjB,UAQnC,OALA1qB,EAAI0J,KAAK8Q,IAAI,EAAGw1B,kBAAkBxrB,OAAQnN,GAAI,SAKvCwF,SAAS6N,QAAUrrB,EAAIW,EAAIA,IAE7ByvC,UAqBT,SAASO,kBAAmB94B,IAAKrY,MAAOqxC,MAStC,IARA,IAGIC,QACA54B,IACA64B,GALAC,IAAM,EAENC,KADSp5B,IAAI3P,OACG,EAMb8oC,IAAMC,MACT/4B,IAAM7N,KAAK8N,OAAO64B,IAAMC,MAAQ,GAChCF,GAAK1mC,KAAK2oB,IAAInb,IAAIK,KAAO1Y,OACpB6K,KAAK2oB,IAAInb,IAAIK,IAAM,GAAK1Y,QAEnBuxC,GACNC,IAAM94B,IAAM,EAGZ+4B,KAAO/4B,IAIf,OAAK24B,MAILC,QAAUj5B,IAAIo5B,SACEzxC,MACLyxC,KACAH,QAAUtxC,MACJ,IAATyxC,KAAqBA,KACT,SAATJ,KAAiBI,KAAO,EAAIA,KAE/BA,OAASp5B,IAAI3P,OAAS,EAAY+oC,KACtB,SAATJ,KAAiBI,KAAOA,KAAO,EAX/BA,KCzKE,IAAAhzC,OAAA,SAAS0uB,YAAa7uB,QAASuC,WAC5CssB,YAAYtsB,UAAYvC,QAAQuC,UAAYA,UAC5CA,UAAUssB,YAAcA,aAGnB,SAASukB,OAAO7jB,OAAQ8jB,YAC7B,IAAI9wC,UAAYpB,OAAOY,OAAOwtB,OAAOhtB,WACrC,IAAK,IAAIP,OAAOqxC,WAAY9wC,UAAUP,KAAOqxC,WAAWrxC,KACxD,OAAOO,UCNF,SAAS+wC,SAET,IAGHC,IAAM,sBACNC,IAAM,gDACNC,IAAM,iDACNC,OAAS,mBACTC,OAAS,mBACTC,aAAe,IAAI/qC,OAAO,WAAa0qC,IAAKA,IAAKA,KAAO,QACxDM,aAAe,IAAIhrC,OAAO,WAAa4qC,IAAKA,IAAKA,KAAO,QACxDK,cAAgB,IAAIjrC,OAAO,YAAc0qC,IAAKA,IAAKA,IAAKC,KAAO,QAC/DO,cAAgB,IAAIlrC,OAAO,YAAc4qC,IAAKA,IAAKA,IAAKD,KAAO,QAC/DQ,aAAe,IAAInrC,OAAO,WAAa2qC,IAAKC,IAAKA,KAAO,QACxDQ,cAAgB,IAAIprC,OAAO,YAAc2qC,IAAKC,IAAKA,IAAKD,KAAO,QAE/DU,OACFC,UAAW,SACXC,aAAc,SACdC,KAAM,MACNC,WAAY,QACZC,MAAO,SACPC,MAAO,SACPC,OAAQ,SACRC,MAAO,EACPC,eAAgB,SAChBC,KAAM,IACNC,WAAY,QACZC,MAAO,SACPC,UAAW,SACXC,UAAW,QACXC,WAAY,QACZC,UAAW,SACXC,MAAO,SACPC,eAAgB,QAChBC,SAAU,SACVC,QAAS,SACTC,KAAM,MACNC,SAAU,IACVC,SAAU,MACVC,cAAe,SACfC,SAAU,SACVC,UAAW,MACXC,SAAU,SACVC,UAAW,SACXC,YAAa,QACbC,eAAgB,QAChBC,WAAY,SACZC,WAAY,SACZC,QAAS,QACTC,WAAY,SACZC,aAAc,QACdC,cAAe,QACfC,cAAe,QACfC,cAAe,QACfC,cAAe,MACfC,WAAY,QACZC,SAAU,SACVC,YAAa,MACbC,QAAS,QACTC,QAAS,QACTC,WAAY,QACZC,UAAW,SACXC,YAAa,SACbC,YAAa,QACbC,QAAS,SACTC,UAAW,SACXC,WAAY,SACZC,KAAM,SACNC,UAAW,SACXC,KAAM,QACNC,MAAO,MACPC,YAAa,SACbC,KAAM,QACNC,SAAU,SACVC,QAAS,SACTC,UAAW,SACXC,OAAQ,QACRC,MAAO,SACPC,MAAO,SACPC,SAAU,SACVC,cAAe,SACfC,UAAW,QACXC,aAAc,SACdC,UAAW,SACXC,WAAY,SACZC,UAAW,SACXC,qBAAsB,SACtBC,UAAW,SACXC,WAAY,QACZC,UAAW,SACXC,UAAW,SACXC,YAAa,SACbC,cAAe,QACfC,aAAc,QACdC,eAAgB,QAChBC,eAAgB,QAChBC,eAAgB,SAChBC,YAAa,SACbC,KAAM,MACNC,UAAW,QACXC,MAAO,SACPC,QAAS,SACTC,OAAQ,QACRC,iBAAkB,QAClBC,WAAY,IACZC,aAAc,SACdC,aAAc,QACdC,eAAgB,QAChBC,gBAAiB,QACjBC,kBAAmB,MACnBC,gBAAiB,QACjBC,gBAAiB,SACjBC,aAAc,QACdC,UAAW,SACXC,UAAW,SACXC,SAAU,SACVC,YAAa,SACbC,KAAM,IACNC,QAAS,SACTC,MAAO,QACPC,UAAW,QACXC,OAAQ,SACRC,UAAW,SACXC,OAAQ,SACRC,cAAe,SACfC,UAAW,SACXC,cAAe,SACfC,cAAe,SACfC,WAAY,SACZC,UAAW,SACXC,KAAM,SACNC,KAAM,SACNC,KAAM,SACNC,WAAY,SACZC,OAAQ,QACRC,cAAe,QACfC,IAAK,SACLC,UAAW,SACXC,UAAW,QACXC,YAAa,QACbC,OAAQ,SACRC,WAAY,SACZC,SAAU,QACVC,SAAU,SACVC,OAAQ,SACRC,OAAQ,SACRC,QAAS,QACTC,UAAW,QACXC,UAAW,QACXC,UAAW,QACXC,KAAM,SACNC,YAAa,MACbC,UAAW,QACXC,IAAK,SACLC,KAAM,MACNC,QAAS,SACTC,OAAQ,SACRC,UAAW,QACXC,OAAQ,SACRC,MAAO,SACPC,MAAO,SACPC,WAAY,SACZC,OAAQ,SACRC,YAAa,UAeA,SAASC,YAAM90C,QAC5B,IAAI5H,EAEJ,OADA4H,QAAUA,OAAS,IAAI4Y,OAAOlX,eACtBtJ,EAAI6yC,OAAO8J,KAAK/0C,SAAoC,IAAIg1C,KAA5B58C,EAAIkJ,SAASlJ,EAAE,GAAI,MAAmB,EAAI,GAAQA,GAAK,EAAI,IAASA,GAAK,EAAI,GAAY,IAAJA,GAAiB,GAAJA,IAAY,EAAU,GAAJA,EAAU,IAC3JA,EAAI8yC,OAAO6J,KAAK/0C,SAAWi1C,KAAK3zC,SAASlJ,EAAE,GAAI,MAC/CA,EAAI+yC,aAAa4J,KAAK/0C,SAAW,IAAIg1C,IAAI58C,EAAE,GAAIA,EAAE,GAAIA,EAAE,GAAI,IAC3DA,EAAIgzC,aAAa2J,KAAK/0C,SAAW,IAAIg1C,IAAW,IAAP58C,EAAE,GAAW,IAAY,IAAPA,EAAE,GAAW,IAAY,IAAPA,EAAE,GAAW,IAAK,IAC/FA,EAAIizC,cAAc0J,KAAK/0C,SAAWk1C,KAAK98C,EAAE,GAAIA,EAAE,GAAIA,EAAE,GAAIA,EAAE,KAC3DA,EAAIkzC,cAAcyJ,KAAK/0C,SAAWk1C,KAAY,IAAP98C,EAAE,GAAW,IAAY,IAAPA,EAAE,GAAW,IAAY,IAAPA,EAAE,GAAW,IAAKA,EAAE,KAC/FA,EAAImzC,aAAawJ,KAAK/0C,SAAWm1C,KAAK/8C,EAAE,GAAIA,EAAE,GAAK,IAAKA,EAAE,GAAK,IAAK,IACpEA,EAAIozC,cAAcuJ,KAAK/0C,SAAWm1C,KAAK/8C,EAAE,GAAIA,EAAE,GAAK,IAAKA,EAAE,GAAK,IAAKA,EAAE,IACxEqzC,MAAM1xC,eAAeiG,QAAUi1C,KAAKxJ,MAAMzrC,SAC/B,gBAAXA,OAA2B,IAAIg1C,IAAIjP,IAAKA,IAAKA,IAAK,GAClD,KAGR,SAASkP,KAAKx7C,GACZ,OAAO,IAAIu7C,IAAIv7C,GAAK,GAAK,IAAMA,GAAK,EAAI,IAAU,IAAJA,EAAU,GAG1D,SAASy7C,KAAKp8C,EAAGs8C,EAAG/xC,EAAGjJ,GAErB,OADIA,GAAK,IAAGtB,EAAIs8C,EAAI/xC,EAAI0iC,KACjB,IAAIiP,IAAIl8C,EAAGs8C,EAAG/xC,EAAGjJ,GAGnB,SAASi7C,WAAW58C,GAEzB,OADMA,aAAaoyC,QAAQpyC,EAAIq8C,YAAMr8C,IAChCA,EAEE,IAAIu8C,KADXv8C,EAAIA,EAAE68C,OACWx8C,EAAGL,EAAE28C,EAAG38C,EAAE4K,EAAG5K,EAAE88C,SAFjB,IAAIP,IAKd,SAASM,UAAIx8C,EAAGs8C,EAAG/xC,EAAGkyC,SAC3B,OAA4B,IAArBlwC,UAAU1D,OAAe0zC,WAAWv8C,GAAK,IAAIk8C,IAAIl8C,EAAGs8C,EAAG/xC,EAAc,MAAXkyC,QAAkB,EAAIA,SAGlF,SAASP,IAAIl8C,EAAGs8C,EAAG/xC,EAAGkyC,SAC3Bt1C,KAAKnH,GAAKA,EACVmH,KAAKm1C,GAAKA,EACVn1C,KAAKoD,GAAKA,EACVpD,KAAKs1C,SAAWA,QAkClB,SAASC,KAAIv8C,OAEX,QADAA,MAAQ6K,KAAK8Q,IAAI,EAAG9Q,KAAK6Q,IAAI,IAAK7Q,KAAK2G,MAAMxR,QAAU,KACvC,GAAK,IAAM,IAAMA,MAAMsJ,SAAS,IAGlD,SAAS4yC,KAAK/pB,EAAGnxB,EAAGhC,EAAGmC,GAIrB,OAHIA,GAAK,EAAGgxB,EAAInxB,EAAIhC,EAAI8tC,IACf9tC,GAAK,GAAKA,GAAK,EAAGmzB,EAAInxB,EAAI8rC,IAC1B9rC,GAAK,IAAGmxB,EAAI2a,KACd,IAAI0P,IAAIrqB,EAAGnxB,EAAGhC,EAAGmC,GA6BnB,SAASs7C,IAAItqB,EAAGnxB,EAAGhC,EAAGs9C,SAC3B,OAA4B,IAArBlwC,UAAU1D,OA3BZ,SAASg0C,WAAWl9C,GACzB,GAAIA,aAAag9C,IAAK,OAAO,IAAIA,IAAIh9C,EAAE2yB,EAAG3yB,EAAEwB,EAAGxB,EAAER,EAAGQ,EAAE88C,SAEtD,GADM98C,aAAaoyC,QAAQpyC,EAAIq8C,YAAMr8C,KAChCA,EAAG,OAAO,IAAIg9C,IACnB,GAAIh9C,aAAag9C,IAAK,OAAOh9C,EAE7B,IAAIK,GADJL,EAAIA,EAAE68C,OACIx8C,EAAI,IACVs8C,EAAI38C,EAAE28C,EAAI,IACV/xC,EAAI5K,EAAE4K,EAAI,IACVsR,IAAM7Q,KAAK6Q,IAAI7b,EAAGs8C,EAAG/xC,GACrBuR,IAAM9Q,KAAK8Q,IAAI9b,EAAGs8C,EAAG/xC,GACrB+nB,EAAI2a,IACJ9rC,EAAI2a,IAAMD,IACV1c,GAAK2c,IAAMD,KAAO,EAUtB,OATI1a,GACamxB,EAAXtyB,IAAM8b,KAAUwgC,EAAI/xC,GAAKpJ,EAAc,GAATm7C,EAAI/xC,GAC7B+xC,IAAMxgC,KAAUvR,EAAIvK,GAAKmB,EAAI,GAC5BnB,EAAIs8C,GAAKn7C,EAAI,EACvBA,GAAKhC,EAAI,GAAM2c,IAAMD,IAAM,EAAIC,IAAMD,IACrCyW,GAAK,IAELnxB,EAAIhC,EAAI,GAAKA,EAAI,EAAI,EAAImzB,EAEpB,IAAIqqB,IAAIrqB,EAAGnxB,EAAGhC,EAAGQ,EAAE88C,SAIMI,CAAWvqB,GAAK,IAAIqqB,IAAIrqB,EAAGnxB,EAAGhC,EAAc,MAAXs9C,QAAkB,EAAIA,SAGzF,SAASE,IAAIrqB,EAAGnxB,EAAGhC,EAAGs9C,SACpBt1C,KAAKmrB,GAAKA,EACVnrB,KAAKhG,GAAKA,EACVgG,KAAKhI,GAAKA,EACVgI,KAAKs1C,SAAWA,QAiClB,SAASK,QAAQxqB,EAAGyqB,GAAIC,IACtB,OAGY,KAHJ1qB,EAAI,GAAKyqB,IAAMC,GAAKD,IAAMzqB,EAAI,GAChCA,EAAI,IAAM0qB,GACV1qB,EAAI,IAAMyqB,IAAMC,GAAKD,KAAO,IAAMzqB,GAAK,GACvCyqB,IAzKRn+C,OAAOmzC,MAAOiK,aACZiB,YAAa,SAAAA,cACX,OAAO91C,KAAKq1C,MAAMS,eAEpBP,IAAK,SAAAA,MACH,OAAOv1C,KAAKq1C,MAAME,OAEpBjzC,SAAU,SAAAA,WACR,OAAOtC,KAAKq1C,MAAQ,MA+CxB59C,OAAOs9C,IAAKM,UAAK3K,OAAOE,OACtBmL,SAAU,SAAAA,SAAShN,GAEjB,OADAA,EAAS,MAALA,EA9Nc,EADF,GA+NWllC,KAAKiR,IA9Nd,EADF,GA+N8Bi0B,GACvC,IAAIgM,IAAI/0C,KAAKnH,EAAIkwC,EAAG/oC,KAAKm1C,EAAIpM,EAAG/oC,KAAKoD,EAAI2lC,EAAG/oC,KAAKs1C,UAE1DU,OAAQ,SAAAA,OAASjN,GAEf,OADAA,EAAS,MAALA,EAnOY,GAmOSllC,KAAKiR,IAnOd,GAmO0Bi0B,GACnC,IAAIgM,IAAI/0C,KAAKnH,EAAIkwC,EAAG/oC,KAAKm1C,EAAIpM,EAAG/oC,KAAKoD,EAAI2lC,EAAG/oC,KAAKs1C,UAE1DD,IAAK,SAAAA,MACH,OAAOr1C,MAET81C,YAAa,SAAAA,cACX,OAAQ,GAAK91C,KAAKnH,GAAKmH,KAAKnH,GAAK,KACzB,GAAKmH,KAAKm1C,GAAKn1C,KAAKm1C,GAAK,KACzB,GAAKn1C,KAAKoD,GAAKpD,KAAKoD,GAAK,KACzB,GAAKpD,KAAKs1C,SAAWt1C,KAAKs1C,SAAW,GAE/CC,IAAK,SAAAA,MACH,MAAO,IAAMA,KAAIv1C,KAAKnH,GAAK08C,KAAIv1C,KAAKm1C,GAAKI,KAAIv1C,KAAKoD,IAEpDd,SAAU,SAAAA,WACR,IAAInI,EAAI6F,KAAKs1C,QACb,OAAc,KADQn7C,EAAIoa,MAAMpa,GAAK,EAAI0J,KAAK8Q,IAAI,EAAG9Q,KAAK6Q,IAAI,EAAGva,KAC/C,OAAS,SACrB0J,KAAK8Q,IAAI,EAAG9Q,KAAK6Q,IAAI,IAAK7Q,KAAK2G,MAAMxK,KAAKnH,IAAM,IAAM,KACtDgL,KAAK8Q,IAAI,EAAG9Q,KAAK6Q,IAAI,IAAK7Q,KAAK2G,MAAMxK,KAAKm1C,IAAM,IAAM,KACtDtxC,KAAK8Q,IAAI,EAAG9Q,KAAK6Q,IAAI,IAAK7Q,KAAK2G,MAAMxK,KAAKoD,IAAM,KACzC,IAANjJ,EAAU,IAAM,KAAOA,EAAI,SAqDtC1C,OAAO+9C,IAAKC,IAAK/K,OAAOE,OACtBmL,SAAU,SAAAA,SAAShN,GAEjB,OADAA,EAAS,MAALA,EA9Sc,EADF,GA+SWllC,KAAKiR,IA9Sd,EADF,GA+S8Bi0B,GACvC,IAAIyM,IAAIx1C,KAAKmrB,EAAGnrB,KAAKhG,EAAGgG,KAAKhI,EAAI+wC,EAAG/oC,KAAKs1C,UAElDU,OAAQ,SAAAA,OAASjN,GAEf,OADAA,EAAS,MAALA,EAnTY,GAmTSllC,KAAKiR,IAnTd,GAmT0Bi0B,GACnC,IAAIyM,IAAIx1C,KAAKmrB,EAAGnrB,KAAKhG,EAAGgG,KAAKhI,EAAI+wC,EAAG/oC,KAAKs1C,UAElDD,IAAK,SAAAA,MACH,IAAIlqB,EAAInrB,KAAKmrB,EAAI,IAAqB,KAAdnrB,KAAKmrB,EAAI,GAC7BnxB,EAAIua,MAAM4W,IAAM5W,MAAMvU,KAAKhG,GAAK,EAAIgG,KAAKhG,EACzChC,EAAIgI,KAAKhI,EACT69C,GAAK79C,GAAKA,EAAI,GAAMA,EAAI,EAAIA,GAAKgC,EACjC47C,GAAK,EAAI59C,EAAI69C,GACjB,OAAO,IAAId,IACTY,QAAQxqB,GAAK,IAAMA,EAAI,IAAMA,EAAI,IAAKyqB,GAAIC,IAC1CF,QAAQxqB,EAAGyqB,GAAIC,IACfF,QAAQxqB,EAAI,IAAMA,EAAI,IAAMA,EAAI,IAAKyqB,GAAIC,IACzC71C,KAAKs1C,UAGTQ,YAAa,SAAAA,cACX,OAAQ,GAAK91C,KAAKhG,GAAKgG,KAAKhG,GAAK,GAAKua,MAAMvU,KAAKhG,KACzC,GAAKgG,KAAKhI,GAAKgI,KAAKhI,GAAK,GACzB,GAAKgI,KAAKs1C,SAAWt1C,KAAKs1C,SAAW,MC1U1C,IAAIW,QAAUpyC,KAAKqyC,GAAK,IACpBC,QAAU,IAAMtyC,KAAKqyC,GCK5BE,GAAK,OACLC,GAAK,EACLC,GAAK,OACLC,OAAK,EAAI,GACTC,OAAK,EAAI,GACTC,GAAK,EAAID,OAAKA,OACdE,GAAKF,OAAKA,OAAKA,OAEnB,SAASG,WAAWn+C,GAClB,GAAIA,aAAao+C,IAAK,OAAO,IAAIA,IAAIp+C,EAAER,EAAGQ,EAAE2B,EAAG3B,EAAE4K,EAAG5K,EAAE88C,SACtD,GAAI98C,aAAaq+C,IAAK,CACpB,GAAItiC,MAAM/b,EAAE2yB,GAAI,OAAO,IAAIyrB,IAAIp+C,EAAER,EAAG,EAAG,EAAGQ,EAAE88C,SAC5C,IAAInqB,EAAI3yB,EAAE2yB,EAAI8qB,QACd,OAAO,IAAIW,IAAIp+C,EAAER,EAAG6L,KAAKizC,IAAI3rB,GAAK3yB,EAAEJ,EAAGyL,KAAKkzC,IAAI5rB,GAAK3yB,EAAEJ,EAAGI,EAAE88C,SAExD98C,aAAau8C,MAAMv8C,EAAI48C,WAAW58C,IACxC,IAGuE6lC,EAAG2Y,EAHtEn+C,EAAIo+C,SAASz+C,EAAEK,GACfs8C,EAAI8B,SAASz+C,EAAE28C,GACf/xC,EAAI6zC,SAASz+C,EAAE4K,GACfI,EAAI0zC,SAAS,SAAYr+C,EAAI,SAAYs8C,EAAI,SAAY/xC,GAAKizC,IAKlE,OAJIx9C,IAAMs8C,GAAKA,IAAM/xC,EAAGi7B,EAAI2Y,EAAIxzC,GAC9B66B,EAAI6Y,SAAS,SAAYr+C,EAAI,SAAYs8C,EAAI,SAAY/xC,GAAKgzC,IAC9DY,EAAIE,SAAS,SAAYr+C,EAAI,SAAYs8C,EAAI,SAAY/xC,GAAKkzC,KAEzD,IAAIM,IAAI,IAAMpzC,EAAI,GAAI,KAAO66B,EAAI76B,GAAI,KAAOA,EAAIwzC,GAAIx+C,EAAE88C,SAOhD,SAAS6B,IAAIn/C,EAAGmC,EAAGiJ,EAAGkyC,SACnC,OAA4B,IAArBlwC,UAAU1D,OAAei1C,WAAW3+C,GAAK,IAAI4+C,IAAI5+C,EAAGmC,EAAGiJ,EAAc,MAAXkyC,QAAkB,EAAIA,SAGlF,SAASsB,IAAI5+C,EAAGmC,EAAGiJ,EAAGkyC,SAC3Bt1C,KAAKhI,GAAKA,EACVgI,KAAK7F,GAAKA,EACV6F,KAAKoD,GAAKA,EACVpD,KAAKs1C,SAAWA,QA0BlB,SAAS4B,QAAQj+C,GACf,OAAOA,EAAIy9C,GAAK7yC,KAAKiR,IAAI7b,EAAG,EAAI,GAAKA,EAAIw9C,GAAKF,OAGhD,SAASa,QAAQn+C,GACf,OAAOA,EAAIu9C,OAAKv9C,EAAIA,EAAIA,EAAIw9C,IAAMx9C,EAAIs9C,QAGxC,SAASc,SAAShZ,GAChB,OAAO,KAAOA,GAAK,SAAY,MAAQA,EAAI,MAAQx6B,KAAKiR,IAAIupB,EAAG,EAAI,KAAO,MAG5E,SAAS4Y,SAAS5Y,GAChB,OAAQA,GAAK,MAAQ,OAAUA,EAAI,MAAQx6B,KAAKiR,KAAKupB,EAAI,MAAS,MAAO,KAG3E,SAASiZ,WAAW9+C,GAClB,GAAIA,aAAaq+C,IAAK,OAAO,IAAIA,IAAIr+C,EAAE2yB,EAAG3yB,EAAEJ,EAAGI,EAAER,EAAGQ,EAAE88C,SAEtD,GADM98C,aAAao+C,MAAMp+C,EAAIm+C,WAAWn+C,IAC5B,IAARA,EAAE2B,GAAmB,IAAR3B,EAAE4K,EAAS,OAAO,IAAIyzC,IAAI/Q,IAAK,EAAGttC,EAAER,EAAGQ,EAAE88C,SAC1D,IAAInqB,EAAItnB,KAAK0zC,MAAM/+C,EAAE4K,EAAG5K,EAAE2B,GAAKg8C,QAC/B,OAAO,IAAIU,IAAI1rB,EAAI,EAAIA,EAAI,IAAMA,EAAGtnB,KAAK+Q,KAAKpc,EAAE2B,EAAI3B,EAAE2B,EAAI3B,EAAE4K,EAAI5K,EAAE4K,GAAI5K,EAAER,EAAGQ,EAAE88C,SAOxE,SAASkC,IAAIrsB,EAAG/yB,EAAGJ,EAAGs9C,SAC3B,OAA4B,IAArBlwC,UAAU1D,OAAe41C,WAAWnsB,GAAK,IAAI0rB,IAAI1rB,EAAG/yB,EAAGJ,EAAc,MAAXs9C,QAAkB,EAAIA,SAGlF,SAASuB,IAAI1rB,EAAG/yB,EAAGJ,EAAGs9C,SAC3Bt1C,KAAKmrB,GAAKA,EACVnrB,KAAK5H,GAAKA,EACV4H,KAAKhI,GAAKA,EACVgI,KAAKs1C,SAAWA,QA3DlB79C,OAAOm/C,IAAKO,IAAKzM,OAAOE,OACtBmL,SAAU,SAAAA,SAAShN,GACjB,OAAO,IAAI6N,IAAI52C,KAAKhI,EA7ChB,IA6C8B,MAAL+wC,EAAY,EAAIA,GAAI/oC,KAAK7F,EAAG6F,KAAKoD,EAAGpD,KAAKs1C,UAExEU,OAAQ,SAAAA,OAASjN,GACf,OAAO,IAAI6N,IAAI52C,KAAKhI,EAhDhB,IAgD8B,MAAL+wC,EAAY,EAAIA,GAAI/oC,KAAK7F,EAAG6F,KAAKoD,EAAGpD,KAAKs1C,UAExED,IAAK,SAAAA,MACH,IAAI7xC,GAAKxD,KAAKhI,EAAI,IAAM,IACpBqmC,EAAI9pB,MAAMvU,KAAK7F,GAAKqJ,EAAIA,EAAIxD,KAAK7F,EAAI,IACrC68C,EAAIziC,MAAMvU,KAAKoD,GAAKI,EAAIA,EAAIxD,KAAKoD,EAAI,IAIzC,OAAO,IAAI2xC,IACTsC,SAAU,WAJZhZ,EAAI+X,GAAKgB,QAAQ/Y,IAIW,WAH5B76B,EAAI6yC,GAAKe,QAAQ5zC,IAG2B,UAF5CwzC,EAAIV,GAAKc,QAAQJ,KAGfK,UAAU,SAAYhZ,EAAI,UAAY76B,EAAI,QAAYwzC,GACtDK,SAAU,SAAYhZ,EAAI,SAAY76B,EAAI,UAAYwzC,GACtDh3C,KAAKs1C,aA4CX79C,OAAOo/C,IAAKW,IAAK9M,OAAOE,OACtBmL,SAAU,SAAAA,SAAShN,GACjB,OAAO,IAAI8N,IAAI72C,KAAKmrB,EAAGnrB,KAAK5H,EAAG4H,KAAKhI,EA3GhC,IA2G8C,MAAL+wC,EAAY,EAAIA,GAAI/oC,KAAKs1C,UAExEU,OAAQ,SAAAA,OAASjN,GACf,OAAO,IAAI8N,IAAI72C,KAAKmrB,EAAGnrB,KAAK5H,EAAG4H,KAAKhI,EA9GhC,IA8G8C,MAAL+wC,EAAY,EAAIA,GAAI/oC,KAAKs1C,UAExED,IAAK,SAAAA,MACH,OAAOsB,WAAW32C,MAAMq1C,UClH5B,IAAInyC,GAAK,OACLK,EAAI,QACJiK,GAAK,OACLiqC,aAAK,OACLC,EAAI,QACJC,GAAKD,EAAID,YACTG,GAAKF,EAAIn0C,EACTs0C,MAAQt0C,EAAIiK,EAAIiqC,YAAIv0C,EAgBT,SAAS40C,oBAAU3sB,EAAGnxB,EAAGhC,EAAGs9C,SACzC,OAA4B,IAArBlwC,UAAU1D,OAfnB,SAASq2C,iBAAiBv/C,GACxB,GAAIA,aAAaw/C,UAAW,OAAO,IAAIA,UAAUx/C,EAAE2yB,EAAG3yB,EAAEwB,EAAGxB,EAAER,EAAGQ,EAAE88C,SAC5D98C,aAAau8C,MAAMv8C,EAAI48C,WAAW58C,IACxC,IAAIK,EAAIL,EAAEK,EAAI,IACVs8C,EAAI38C,EAAE28C,EAAI,IACV/xC,EAAI5K,EAAE4K,EAAI,IACVpL,GAAK6/C,MAAQz0C,EAAIu0C,GAAK9+C,EAAI++C,GAAKzC,IAAM0C,MAAQF,GAAKC,IAClDK,GAAK70C,EAAIpL,EACT+wC,GAAK2O,GAAKvC,EAAIn9C,GAAKwV,EAAIyqC,IAAMR,YAC7Bz9C,EAAI6J,KAAK+Q,KAAKm0B,EAAIA,EAAIkP,GAAKA,KAAOP,EAAI1/C,GAAK,EAAIA,IAC/CmzB,EAAInxB,EAAI6J,KAAK0zC,MAAMxO,EAAGkP,IAAM9B,QAAU,IAAMrQ,IAChD,OAAO,IAAIkS,UAAU7sB,EAAI,EAAIA,EAAI,IAAMA,EAAGnxB,EAAGhC,EAAGQ,EAAE88C,SAIlByC,CAAiB5sB,GAAK,IAAI6sB,UAAU7sB,EAAGnxB,EAAGhC,EAAc,MAAXs9C,QAAkB,EAAIA,SAG9F,SAAS0C,UAAU7sB,EAAGnxB,EAAGhC,EAAGs9C,SACjCt1C,KAAKmrB,GAAKA,EACVnrB,KAAKhG,GAAKA,EACVgG,KAAKhI,GAAKA,EACVgI,KAAKs1C,SAAWA,QCnCX,SAAS4C,MAAM1B,GAAI2B,GAAIC,GAAIC,GAAIC,IACpC,IAAI7B,GAAKD,GAAKA,GAAIE,GAAKD,GAAKD,GAC5B,QAAS,EAAI,EAAIA,GAAK,EAAIC,GAAKC,IAAMyB,IAC9B,EAAI,EAAI1B,GAAK,EAAIC,IAAM0B,IACvB,EAAI,EAAI5B,GAAK,EAAIC,GAAK,EAAIC,IAAM2B,GACjC3B,GAAK4B,IAAM,EDiCnB7gD,OAAOugD,UAAWF,oBAAWpN,OAAOE,OAClCmL,SAAU,SAAAA,SAAShN,GAEjB,OADAA,EAAS,MAALA,EHnCc,EADF,GGoCWllC,KAAKiR,IHnCd,EADF,GGoC8Bi0B,GACvC,IAAIiP,UAAUh4C,KAAKmrB,EAAGnrB,KAAKhG,EAAGgG,KAAKhI,EAAI+wC,EAAG/oC,KAAKs1C,UAExDU,OAAQ,SAAAA,OAASjN,GAEf,OADAA,EAAS,MAALA,EHxCY,GGwCSllC,KAAKiR,IHxCd,GGwC0Bi0B,GACnC,IAAIiP,UAAUh4C,KAAKmrB,EAAGnrB,KAAKhG,EAAGgG,KAAKhI,EAAI+wC,EAAG/oC,KAAKs1C,UAExDD,IAAK,SAAAA,MACH,IAAIlqB,EAAI5W,MAAMvU,KAAKmrB,GAAK,GAAKnrB,KAAKmrB,EAAI,KAAO8qB,QACzCj+C,GAAKgI,KAAKhI,EACVmC,EAAIoa,MAAMvU,KAAKhG,GAAK,EAAIgG,KAAKhG,EAAIhC,GAAK,EAAIA,GAC1CugD,KAAO10C,KAAKizC,IAAI3rB,GAChBqtB,KAAO30C,KAAKkzC,IAAI5rB,GACpB,OAAO,IAAI4pB,IACT,KAAO/8C,EAAImC,GAAK+I,EAAIq1C,KAAOh1C,EAAIi1C,OAC/B,KAAOxgD,EAAImC,GAAKqT,EAAI+qC,KAAOd,YAAIe,OAC/B,KAAOxgD,EAAImC,GAAKu9C,EAAIa,OACpBv4C,KAAKs1C,aCjDI,ICRAmD,aAAA,SAASpa,GACtB,OAAO,WACL,OAAOA,ICAX,SAASqa,OAAOv+C,EAAG9B,GACjB,OAAO,SAASY,GACd,OAAOkB,EAAIlB,EAAIZ,GAUZ,SAASsgD,UAAIx+C,EAAGiJ,GACrB,IAAI/K,EAAI+K,EAAIjJ,EACZ,OAAO9B,EAAIqgD,OAAOv+C,EAAG9B,EAAI,KAAOA,GAAK,IAAMA,EAAI,IAAMwL,KAAK2G,MAAMnS,EAAI,KAAOA,GAAKugD,aAASrkC,MAAMpa,GAAKiJ,EAAIjJ,GAGnG,SAAS0+C,MAAMr1C,GACpB,OAAoB,IAAZA,GAAKA,GAAWs1C,QAAU,SAAS3+C,EAAGiJ,GAC5C,OAAOA,EAAIjJ,EAbf,SAAS4+C,YAAY5+C,EAAGiJ,EAAGI,GACzB,OAAOrJ,EAAI0J,KAAKiR,IAAI3a,EAAGqJ,GAAIJ,EAAIS,KAAKiR,IAAI1R,EAAGI,GAAKrJ,EAAGqJ,EAAI,EAAIA,EAAG,SAASvK,GACrE,OAAO4K,KAAKiR,IAAI3a,EAAIlB,EAAImK,EAAGI,IAWZu1C,CAAY5+C,EAAGiJ,EAAGI,GAAKo1C,aAASrkC,MAAMpa,GAAKiJ,EAAIjJ,IAInD,SAAS2+C,QAAQ3+C,EAAGiJ,GACjC,IAAI/K,EAAI+K,EAAIjJ,EACZ,OAAO9B,EAAIqgD,OAAOv+C,EAAG9B,GAAKugD,aAASrkC,MAAMpa,GAAKiJ,EAAIjJ,GCtBrC,IAAA6+C,QAAA,SAAUC,SAASz1C,GAChC,IAAIqxC,MAAQgE,MAAMr1C,GAElB,SAAS6xC,IAAI53C,MAAOgP,KAClB,IAAI5T,EAAIg8C,OAAOp3C,MAAQy7C,UAASz7C,QAAQ5E,GAAI4T,IAAMysC,UAASzsC,MAAM5T,GAC7Ds8C,EAAIN,MAAMp3C,MAAM03C,EAAG1oC,IAAI0oC,GACvB/xC,EAAIyxC,MAAMp3C,MAAM2F,EAAGqJ,IAAIrJ,GACvBkyC,QAAUwD,QAAQr7C,MAAM63C,QAAS7oC,IAAI6oC,SACzC,OAAO,SAASr8C,GAKd,OAJAwE,MAAM5E,EAAIA,EAAEI,GACZwE,MAAM03C,EAAIA,EAAEl8C,GACZwE,MAAM2F,EAAIA,EAAEnK,GACZwE,MAAM63C,QAAUA,QAAQr8C,GACjBwE,MAAQ,IAMnB,OAFA43C,IAAIwD,MAAQI,SAEL5D,IAnBM,CAoBZ,GAEH,SAAS8D,UAAUC,QACjB,OAAO,SAASC,QACd,IAIIthD,EAAG88C,MAJHr7C,EAAI6/C,OAAO33C,OACX7I,EAAI,IAAIgQ,MAAMrP,GACd27C,EAAI,IAAItsC,MAAMrP,GACd4J,EAAI,IAAIyF,MAAMrP,GAElB,IAAKzB,EAAI,EAAGA,EAAIyB,IAAKzB,EACnB88C,MAAQqE,UAASG,OAAOthD,IACxBc,EAAEd,GAAK88C,MAAMh8C,GAAK,EAClBs8C,EAAEp9C,GAAK88C,MAAMM,GAAK,EAClB/xC,EAAErL,GAAK88C,MAAMzxC,GAAK,EAMpB,OAJAvK,EAAIugD,OAAOvgD,GACXs8C,EAAIiE,OAAOjE,GACX/xC,EAAIg2C,OAAOh2C,GACXyxC,MAAMS,QAAU,EACT,SAASr8C,GAId,OAHA47C,MAAMh8C,EAAIA,EAAEI,GACZ47C,MAAMM,EAAIA,EAAEl8C,GACZ47C,MAAMzxC,EAAIA,EAAEnK,GACL47C,MAAQ,KAKd,IAAIyE,SAAWH,UH7CP,SAASx6B,QACtB,IAAInlB,EAAImlB,OAAOjd,OAAS,EACxB,OAAO,SAASzI,GACd,IAAIlB,EAAIkB,GAAK,EAAKA,EAAI,EAAKA,GAAK,GAAKA,EAAI,EAAGO,EAAI,GAAKqK,KAAK8N,MAAM1Y,EAAIO,GAChE4+C,GAAKz5B,OAAO5mB,GACZsgD,GAAK15B,OAAO5mB,EAAI,GAChBogD,GAAKpgD,EAAI,EAAI4mB,OAAO5mB,EAAI,GAAK,EAAIqgD,GAAKC,GACtCC,GAAKvgD,EAAIyB,EAAI,EAAImlB,OAAO5mB,EAAI,GAAK,EAAIsgD,GAAKD,GAC9C,OAAOF,OAAOj/C,EAAIlB,EAAIyB,GAAKA,EAAG2+C,GAAIC,GAAIC,GAAIC,OIhB/BiB,YDsDaJ,UEpDb,SAASx6B,QACtB,IAAInlB,EAAImlB,OAAOjd,OACf,OAAO,SAASzI,GACd,IAAIlB,EAAI8L,KAAK8N,QAAQ1Y,GAAK,GAAK,IAAMA,EAAIA,GAAKO,GAC1C2+C,GAAKx5B,QAAQ5mB,EAAIyB,EAAI,GAAKA,GAC1B4+C,GAAKz5B,OAAO5mB,EAAIyB,GAChB6+C,GAAK15B,QAAQ5mB,EAAI,GAAKyB,GACtB8+C,GAAK35B,QAAQ5mB,EAAI,GAAKyB,GAC1B,OAAO0+C,OAAOj/C,EAAIlB,EAAIyB,GAAKA,EAAG2+C,GAAIC,GAAIC,GAAIC,ODV/B,SAASn+C,EAAGiJ,GACzB,OAAeA,GAARjJ,GAAKA,EAAW,SAASlB,GAC9B,OAAOkB,EAAIiJ,EAAInK,wREAJ,ICAXugD,IAAM,8CACNC,IAAM,IAAIt5C,OAAOq5C,IAAIx0B,OAAQ,KAclB,IAAA00B,WAAA,SAASv/C,EAAGiJ,GACzB,IACIu2C,GACAC,GACAC,GAHAC,GAAKN,IAAIO,UAAYN,IAAIM,UAAY,EAIrChiD,GAAK,EACLiC,KACAggD,KAMJ,IAHA7/C,GAAQ,GAAIiJ,GAAQ,IAGZu2C,GAAKH,IAAI1E,KAAK36C,MACdy/C,GAAKH,IAAI3E,KAAK1xC,MACfy2C,GAAKD,GAAG33C,OAAS63C,KACpBD,GAAKz2C,EAAEiY,MAAMy+B,GAAID,IACb7/C,EAAEjC,GAAIiC,EAAEjC,IAAM8hD,GACb7/C,IAAIjC,GAAK8hD,KAEXF,GAAKA,GAAG,OAASC,GAAKA,GAAG,IACxB5/C,EAAEjC,GAAIiC,EAAEjC,IAAM6hD,GACb5/C,IAAIjC,GAAK6hD,IAEd5/C,IAAIjC,GAAK,KACTiiD,EAAE9zC,MAAMnO,EAAGA,EAAGsmC,EAAGiI,WAAOqT,GAAIC,OAE9BE,GAAKL,IAAIM,UAYX,OARID,GAAK12C,EAAE1B,SACTm4C,GAAKz2C,EAAEiY,MAAMy+B,IACT9/C,EAAEjC,GAAIiC,EAAEjC,IAAM8hD,GACb7/C,IAAIjC,GAAK8hD,IAKT7/C,EAAE0H,OAAS,EAAKs4C,EAAE,GA7C3B,SAASC,IAAI72C,GACX,OAAO,SAASnK,GACd,OAAOmK,EAAEnK,GAAK,IA4CVghD,CAAID,EAAE,GAAG3b,GApDjB,SAAS6b,YAAK92C,GACZ,OAAO,WACL,OAAOA,GAmDH82C,CAAK92C,IACJA,EAAI42C,EAAEt4C,OAAQ,SAASzI,GACtB,IAAK,IAAWT,EAAPT,EAAI,EAAMA,EAAIqL,IAAKrL,EAAGiC,GAAGxB,EAAIwhD,EAAEjiD,IAAIA,GAAKS,EAAE6lC,EAAEplC,GACrD,OAAOe,EAAE+I,KAAK,oSCpDT,ICPXo3C,QACAC,QACAC,QACAC,QDIWxuC,UAAA,SAAS3R,EAAGiJ,GACzB,IAAkBhL,EAAda,EAAIshD,aAAOn3C,GACf,OAAY,MAALA,GAAmB,YAANnK,EAAkB2/C,aAASx1C,IAClC,WAANnK,EAAiBqtC,WACZ,WAANrtC,GAAmBb,EAAIy8C,YAAMzxC,KAAOA,EAAIhL,EAAGi9C,SAAOmF,WAClDp3C,aAAayxC,YAAQQ,QACrBjyC,aAAaxD,KEfN,SAASzF,EAAGiJ,GACzB,IAAI/K,EAAI,IAAIuH,KACZ,OAAewD,GAARjJ,GAAKA,EAAW,SAASlB,GAC9B,OAAOZ,EAAEoiD,QAAQtgD,EAAIiJ,EAAInK,GAAIZ,IFazBwQ,MAAMuB,QAAQhH,GGdP,SAASjJ,EAAGiJ,GACzB,IAIIrL,EAJA2iD,GAAKt3C,EAAIA,EAAE1B,OAAS,EACpBi5C,GAAKxgD,EAAI0J,KAAK6Q,IAAIgmC,GAAIvgD,EAAEuH,QAAU,EAClC28B,EAAI,IAAIx1B,MAAM8xC,IACdviD,EAAI,IAAIyQ,MAAM6xC,IAGlB,IAAK3iD,EAAI,EAAGA,EAAI4iD,KAAM5iD,EAAGsmC,EAAEtmC,GAAKiB,UAAMmB,EAAEpC,GAAIqL,EAAErL,IAC9C,KAAOA,EAAI2iD,KAAM3iD,EAAGK,EAAEL,GAAKqL,EAAErL,GAE7B,OAAO,SAASkB,GACd,IAAKlB,EAAI,EAAGA,EAAI4iD,KAAM5iD,EAAGK,EAAEL,GAAKsmC,EAAEtmC,GAAGkB,GACrC,OAAOb,IHGkB,mBAAdgL,EAAE4b,SAAgD,mBAAf5b,EAAEd,UAA2BiS,MAAMnR,GFftE,SAASjJ,EAAGiJ,GACzB,IAEI2lC,EAFAhxC,KACAK,KAMJ,IAAK2wC,KAHK,OAAN5uC,GAA2B,WAAbD,QAAOC,KAAgBA,MAC/B,OAANiJ,GAA2B,WAAblJ,QAAOkJ,KAAgBA,MAE/BA,EACJ2lC,KAAK5uC,EACPpC,EAAEgxC,GAAK/vC,UAAMmB,EAAE4uC,GAAI3lC,EAAE2lC,IAErB3wC,EAAE2wC,GAAK3lC,EAAE2lC,GAIb,OAAO,SAAS9vC,GACd,IAAK8vC,KAAKhxC,EAAGK,EAAE2wC,GAAKhxC,EAAEgxC,GAAG9vC,GACzB,OAAOb,IEFHkuC,YAAQnsC,EAAGiJ,IIlBJw3C,UAAA,SAASzgD,EAAGiJ,GACzB,OAAeA,GAARjJ,GAAKA,EAAW,SAASlB,GAC9B,OAAO4K,KAAK2G,MAAMrQ,EAAIiJ,EAAInK,KCF1B4hD,QAAU,IAAMh3C,KAAKqyC,GAEdnkB,oBACT+oB,WAAY,EACZC,WAAY,EACZC,OAAQ,EACRC,MAAO,EACPC,OAAQ,EACRC,OAAQ,GAGKC,UAAA,SAASjhD,EAAGiJ,EAAGhL,EAAGC,EAAG4B,EAAG8gB,GACrC,IAAImgC,OAAQC,OAAQF,MAKpB,OAJIC,OAASr3C,KAAK+Q,KAAKza,EAAIA,EAAIiJ,EAAIA,MAAIjJ,GAAK+gD,OAAQ93C,GAAK83C,SACrDD,MAAQ9gD,EAAI/B,EAAIgL,EAAI/K,KAAGD,GAAK+B,EAAI8gD,MAAO5iD,GAAK+K,EAAI63C,QAChDE,OAASt3C,KAAK+Q,KAAKxc,EAAIA,EAAIC,EAAIA,MAAID,GAAK+iD,OAAQ9iD,GAAK8iD,OAAQF,OAASE,QACtEhhD,EAAI9B,EAAI+K,EAAIhL,IAAG+B,GAAKA,EAAGiJ,GAAKA,EAAG63C,OAASA,MAAOC,QAAUA,SAE3DJ,WAAY7gD,EACZ8gD,WAAYhgC,EACZigC,OAAQn3C,KAAK0zC,MAAMn0C,EAAGjJ,GAAK0gD,QAC3BI,MAAOp3C,KAAKw3C,KAAKJ,OAASJ,QAC1BK,OAAQA,OACRC,OAAQA,SCpBZ,SAASG,qBAAqB70C,MAAO80C,QAASC,QAASC,UAErD,SAASpzB,IAAIruB,GACX,OAAOA,EAAE0H,OAAS1H,EAAEquB,MAAQ,IAAM,GAsCpC,OAAO,SAASluB,EAAGiJ,GACjB,IAAIpJ,KACAggD,KAOJ,OANA7/C,EAAIsM,MAAMtM,GAAIiJ,EAAIqD,MAAMrD,GAtC1B,SAASs4C,UAAUC,GAAIC,GAAIC,GAAIC,GAAI9hD,EAAGggD,GACpC,GAAI2B,KAAOE,IAAMD,KAAOE,GAAI,CAC1B,IAAI/jD,EAAIiC,EAAEkM,KAAK,aAAc,KAAMq1C,QAAS,KAAMC,SAClDxB,EAAE9zC,MAAMnO,EAAGA,EAAI,EAAGsmC,EAAGiI,WAAOqV,GAAIE,MAAO9jD,EAAGA,EAAI,EAAGsmC,EAAGiI,WAAOsV,GAAIE,WACtDD,IAAMC,KACf9hD,EAAEkM,KAAK,aAAe21C,GAAKN,QAAUO,GAAKN,SAkC5CE,CAAUvhD,EAAE2gD,WAAY3gD,EAAE4gD,WAAY33C,EAAE03C,WAAY13C,EAAE23C,WAAY/gD,EAAGggD,GA9BvE,SAASgB,OAAO7gD,EAAGiJ,EAAGpJ,EAAGggD,GACnB7/C,IAAMiJ,GACJjJ,EAAIiJ,EAAI,IAAKA,GAAK,IAAcA,EAAIjJ,EAAI,MAAKA,GAAK,KACtD6/C,EAAE9zC,MAAMnO,EAAGiC,EAAEkM,KAAKmiB,IAAIruB,GAAK,UAAW,KAAMyhD,UAAY,EAAGpd,EAAGiI,WAAOnsC,EAAGiJ,MAC/DA,GACTpJ,EAAEkM,KAAKmiB,IAAIruB,GAAK,UAAYoJ,EAAIq4C,UA0BlCT,CAAO7gD,EAAE6gD,OAAQ53C,EAAE43C,OAAQhhD,EAAGggD,GAtBhC,SAASiB,MAAM9gD,EAAGiJ,EAAGpJ,EAAGggD,GAClB7/C,IAAMiJ,EACR42C,EAAE9zC,MAAMnO,EAAGiC,EAAEkM,KAAKmiB,IAAIruB,GAAK,SAAU,KAAMyhD,UAAY,EAAGpd,EAAGiI,WAAOnsC,EAAGiJ,KAC9DA,GACTpJ,EAAEkM,KAAKmiB,IAAIruB,GAAK,SAAWoJ,EAAIq4C,UAmBjCR,CAAM9gD,EAAE8gD,MAAO73C,EAAE63C,MAAOjhD,EAAGggD,GAf7B,SAAS5Q,MAAMuS,GAAIC,GAAIC,GAAIC,GAAI9hD,EAAGggD,GAChC,GAAI2B,KAAOE,IAAMD,KAAOE,GAAI,CAC1B,IAAI/jD,EAAIiC,EAAEkM,KAAKmiB,IAAIruB,GAAK,SAAU,KAAM,IAAK,KAAM,KACnDggD,EAAE9zC,MAAMnO,EAAGA,EAAI,EAAGsmC,EAAGiI,WAAOqV,GAAIE,MAAO9jD,EAAGA,EAAI,EAAGsmC,EAAGiI,WAAOsV,GAAIE,WAC/C,IAAPD,IAAmB,IAAPC,IACrB9hD,EAAEkM,KAAKmiB,IAAIruB,GAAK,SAAW6hD,GAAK,IAAMC,GAAK,KAW7C1S,CAAMjvC,EAAE+gD,OAAQ/gD,EAAEghD,OAAQ/3C,EAAE83C,OAAQ93C,EAAE+3C,OAAQnhD,EAAGggD,GACjD7/C,EAAIiJ,EAAI,KACD,SAASnK,GAEd,IADA,IAA0BT,EAAtBT,GAAK,EAAGyB,EAAIwgD,EAAEt4C,SACT3J,EAAIyB,GAAGQ,GAAGxB,EAAIwhD,EAAEjiD,IAAIA,GAAKS,EAAE6lC,EAAEplC,GACtC,OAAOe,EAAE+I,KAAK,MAKb,IAAIg5C,wBAA0BT,qBLtD9B,SAASU,SAAShjD,OACvB,MAAc,SAAVA,MAAyB+4B,oBACxBooB,UAASA,QAAU3hB,SAASmJ,cAAc,OAAQyY,QAAU5hB,SAASyjB,gBAAiB5B,QAAU7hB,SAAS0jB,aAC9G/B,QAAQlgB,MAAMkiB,UAAYnjD,MAC1BA,MAAQqhD,QAAQ+B,iBAAiBhC,QAAQpW,YAAYmW,SAAU,MAAMkC,iBAAiB,aACtFjC,QAAQ1zB,YAAYyzB,SACpBnhD,MAAQA,MAAMqiB,MAAM,GAAI,GAAG/O,MAAM,KAC1B8uC,WAAWpiD,MAAM,IAAKA,MAAM,IAAKA,MAAM,IAAKA,MAAM,IAAKA,MAAM,IAAKA,MAAM,MK+Cb,OAAQ,MAAO,QACxEsjD,wBAA0BhB,qBL7C9B,SAASiB,SAASvjD,OACvB,OAAa,MAATA,MAAsB+4B,oBACrBuoB,UAASA,QAAU9hB,SAASyM,gBAAgB,6BAA8B,MAC/EqV,QAAQrW,aAAa,YAAajrC,QAC5BA,MAAQshD,QAAQ6B,UAAUK,QAAQC,gBACxCzjD,MAAQA,MAAM0jD,OACPtB,UAAUpiD,MAAMmB,EAAGnB,MAAMoK,EAAGpK,MAAMZ,EAAGY,MAAMX,EAAGW,MAAMiB,EAAGjB,MAAM+hB,IAFLgX,qBKyCG,KAAM,IAAK,KC9DrEluB,KAAK84C,MCGf,SAASlH,QAAIkD,KACX,OAAO,SAASl7C,MAAOgP,KACrB,IAAI0e,EAAIwtB,KAAKl7C,MAAQm/C,IAASn/C,QAAQ0tB,GAAI1e,IAAMmwC,IAASnwC,MAAM0e,GAC3DnxB,EAAI66C,QAAMp3C,MAAMzD,EAAGyS,IAAIzS,GACvBhC,EAAI68C,QAAMp3C,MAAMzF,EAAGyU,IAAIzU,GACvBs9C,QAAUT,QAAMp3C,MAAM63C,QAAS7oC,IAAI6oC,SACvC,OAAO,SAASr8C,GAKd,OAJAwE,MAAM0tB,EAAIA,EAAElyB,GACZwE,MAAMzD,EAAIA,EAAEf,GACZwE,MAAMzF,EAAIA,EAAEiB,GACZwE,MAAM63C,QAAUA,QAAQr8C,GACjBwE,MAAQ,KAKNg4C,QAAIkD,WAAJlD,IACJoH,QAAUpH,QAAIZ,SCjBzB,SAAS2C,QAAImB,KACX,OAAO,SAASl7C,MAAOgP,KACrB,IAAI0e,EAAIwtB,KAAKl7C,MAAQq/C,IAASr/C,QAAQ0tB,GAAI1e,IAAMqwC,IAASrwC,MAAM0e,GAC3D/yB,EAAIy8C,QAAMp3C,MAAMrF,EAAGqU,IAAIrU,GACvBJ,EAAI68C,QAAMp3C,MAAMzF,EAAGyU,IAAIzU,GACvBs9C,QAAUT,QAAMp3C,MAAM63C,QAAS7oC,IAAI6oC,SACvC,OAAO,SAASr8C,GAKd,OAJAwE,MAAM0tB,EAAIA,EAAElyB,GACZwE,MAAMrF,EAAIA,EAAEa,GACZwE,MAAMzF,EAAIA,EAAEiB,GACZwE,MAAM63C,QAAUA,QAAQr8C,GACjBwE,MAAQ,KAKN+5C,QAAImB,WACEnB,QAAI3C,SCjBzB,SAASiD,wBAAUa,KACjB,OAAQ,SAASoE,eAAev5C,GAG9B,SAASs0C,UAAUr6C,MAAOgP,KACxB,IAAI0e,EAAIwtB,KAAKl7C,MAAQu/C,oBAAev/C,QAAQ0tB,GAAI1e,IAAMuwC,oBAAevwC,MAAM0e,GACvEnxB,EAAI66C,QAAMp3C,MAAMzD,EAAGyS,IAAIzS,GACvBhC,EAAI68C,QAAMp3C,MAAMzF,EAAGyU,IAAIzU,GACvBs9C,QAAUT,QAAMp3C,MAAM63C,QAAS7oC,IAAI6oC,SACvC,OAAO,SAASr8C,GAKd,OAJAwE,MAAM0tB,EAAIA,EAAElyB,GACZwE,MAAMzD,EAAIA,EAAEf,GACZwE,MAAMzF,EAAIA,EAAE6L,KAAKiR,IAAI7b,EAAGuK,IACxB/F,MAAM63C,QAAUA,QAAQr8C,GACjBwE,MAAQ,IAMnB,OAlBA+F,GAAKA,EAgBLs0C,UAAUe,MAAQkE,eAEXjF,UAnBD,CAoBL,GAGUA,wBAAUa,WAAVb,IACJmF,cAAgBnF,wBAAUjD,SC5BtB,SAASqI,oBAAUC,YAAax+B,QAE7C,IADA,IAAI5mB,EAAI,EAAGyB,EAAImlB,OAAOjd,OAAS,EAAGgH,EAAIiW,OAAO,GAAIpR,EAAI,IAAI1E,MAAMrP,EAAI,EAAI,EAAIA,GACpEzB,EAAIyB,GAAG+T,EAAExV,GAAKolD,YAAYz0C,EAAGA,EAAIiW,SAAS5mB,IACjD,OAAO,SAASkB,GACd,IAAIlB,EAAI8L,KAAK8Q,IAAI,EAAG9Q,KAAK6Q,IAAIlb,EAAI,EAAGqK,KAAK8N,MAAM1Y,GAAKO,KACpD,OAAO+T,EAAExV,GAAGkB,EAAIlB,ICLL,ICAAqlD,sBAAA,SAAS/e,GACtB,OAAO,WACL,OAAOA,ICFIgf,oBAAA,SAAShf,GACtB,OAAQA,GCKNpmB,iBAAQ,EAAG,GAER,SAASqlC,oBAAoBnjD,EAAGiJ,GACrC,OAAQA,GAAMjJ,GAAKA,GACb,SAASkkC,GAAK,OAAQA,EAAIlkC,GAAKiJ,GAC/Bw1C,sBAASx1C,GAiBjB,SAASm6C,MAAMvmC,OAAQzV,MAAOi8C,cAAeC,eAC3C,IAAIC,GAAK1mC,OAAO,GAAIuzB,GAAKvzB,OAAO,GAAIgzB,GAAKzoC,MAAM,GAAI0oC,GAAK1oC,MAAM,GAG9D,OAFIgpC,GAAKmT,IAAIA,GAAKF,cAAcjT,GAAImT,IAAK1T,GAAKyT,cAAcxT,GAAID,MAC3D0T,GAAKF,cAAcE,GAAInT,IAAKP,GAAKyT,cAAczT,GAAIC,KACjD,SAAS5L,GAAK,OAAO2L,GAAG0T,GAAGrf,KAGpC,SAASsf,QAAQ3mC,OAAQzV,MAAOi8C,cAAeC,eAC7C,IAAIriC,EAAIvX,KAAK6Q,IAAIsC,OAAOtV,OAAQH,MAAMG,QAAU,EAC5CrJ,EAAI,IAAIwQ,MAAMuS,GACdviB,EAAI,IAAIgQ,MAAMuS,GACdrjB,GAAK,EAQT,IALIif,OAAOoE,GAAKpE,OAAO,KACrBA,OAASA,OAAOqE,QAAQwJ,UACxBtjB,MAAQA,MAAM8Z,QAAQwJ,aAGf9sB,EAAIqjB,GACX/iB,EAAEN,GAAKylD,cAAcxmC,OAAOjf,GAAIif,OAAOjf,EAAI,IAC3Cc,EAAEd,GAAK0lD,cAAcl8C,MAAMxJ,GAAIwJ,MAAMxJ,EAAI,IAG3C,OAAO,SAASsmC,GACd,IAAItmC,EAAI6lD,OAAO5mC,OAAQqnB,EAAG,EAAGjjB,GAAK,EAClC,OAAOviB,EAAEd,GAAGM,EAAEN,GAAGsmC,KAId,SAASgL,KAAKrkB,OAAQ64B,QAC3B,OAAOA,OACF7mC,OAAOgO,OAAOhO,UACdzV,MAAMyjB,OAAOzjB,SACb47C,YAAYn4B,OAAOm4B,eACnBW,MAAM94B,OAAO84B,SAKL,SAAS1lC,WAAWolC,cAAeC,eAChD,IAIIP,UACAa,OACAC,MANAhnC,OAASiB,gBACT1W,MAAQ0W,gBACRklC,YAAcc,UACdH,OAAQ,EAKZ,SAASlU,UAGP,OAFAsT,UAAYr5C,KAAK6Q,IAAIsC,OAAOtV,OAAQH,MAAMG,QAAU,EAAIi8C,QAAUJ,MAClEQ,OAASC,MAAQ,KACV5U,MAGT,SAASA,MAAM/K,GACb,OAAQ0f,SAAWA,OAASb,UAAUlmC,OAAQzV,MAAOu8C,MAtEzD,SAASI,mBAAmBV,eAC1B,OAAO,SAASrjD,EAAGiJ,GACjB,IAAI/K,EAAImlD,cAAcrjD,GAAKA,EAAGiJ,GAAKA,GACnC,OAAO,SAASi7B,GAAK,OAAOA,GAAKlkC,EAAI,EAAIkkC,GAAKj7B,EAAI,EAAI/K,EAAEgmC,KAmEK6f,CAAmBV,eAAiBA,cAAeL,gBAAgB9e,GA2BlI,OAxBA+K,MAAMgB,OAAS,SAAS5mC,GACtB,OAAQw6C,QAAUA,MAAQd,UAAU37C,MAAOyV,OAAQsmC,oBAAqBQ,MAnE5E,SAASK,mBAAmBV,eAC1B,OAAO,SAAStjD,EAAGiJ,GACjB,IAAIvK,EAAI4kD,cAActjD,GAAKA,EAAGiJ,GAAKA,GACnC,OAAO,SAASnK,GAAK,OAAOA,GAAK,EAAIkB,EAAIlB,GAAK,EAAImK,EAAIvK,EAAEI,KAgEwBklD,CAAmBV,eAAiBA,kBAAkBj6C,IAGxI4lC,MAAMpyB,OAAS,SAASyK,GACtB,OAAOrc,UAAU1D,QAAUsV,OAAS/O,cAAI/P,KAAKupB,EAAG6kB,qBAASsD,WAAa5yB,OAAOqE,SAG/E+tB,MAAM7nC,MAAQ,SAASkgB,GACrB,OAAOrc,UAAU1D,QAAUH,MAAQ8Z,YAAMnjB,KAAKupB,GAAImoB,WAAaroC,MAAM8Z,SAGvE+tB,MAAMU,WAAa,SAASroB,GAC1B,OAAOlgB,MAAQ8Z,YAAMnjB,KAAKupB,GAAI07B,YAAciB,UAAkBxU,WAGhER,MAAM0U,MAAQ,SAASr8B,GACrB,OAAOrc,UAAU1D,QAAUo8C,QAAUr8B,EAAGmoB,WAAakU,OAGvD1U,MAAM+T,YAAc,SAAS17B,GAC3B,OAAOrc,UAAU1D,QAAUy7C,YAAc17B,EAAGmoB,WAAauT,aAGpDvT,UC5GM,IAAAyU,cAAA,SAAShgB,EAAGtkC,GACzB,IAAKhC,GAAKsmC,EAAItkC,EAAIskC,EAAEigB,cAAcvkD,EAAI,GAAKskC,EAAEigB,iBAAiBr4C,QAAQ,MAAQ,EAAG,OAAO,KACxF,IAAIlO,EAAGwmD,YAAclgB,EAAEhjB,MAAM,EAAGtjB,GAIhC,OACEwmD,YAAY78C,OAAS,EAAI68C,YAAY,GAAKA,YAAYljC,MAAM,GAAKkjC,aAChElgB,EAAEhjB,MAAMtjB,EAAI,KCTFymD,aAAA,SAASngB,GACtB,OAAOA,EAAIggB,cAAcx6C,KAAK2oB,IAAI6R,KAASA,EAAE,GAAKyH,KCFhD2Y,GAAK,2EAEM,SAASC,gBAAgBC,WACtC,OAAO,IAAIC,gBAAgBD,WAK7B,SAASC,gBAAgBD,WACvB,KAAMt2C,MAAQo2C,GAAG3J,KAAK6J,YAAa,MAAM,IAAI3uC,MAAM,mBAAqB2uC,WACxE,IAAIt2C,MACJrI,KAAK6+C,KAAOx2C,MAAM,IAAM,IACxBrI,KAAK2pC,MAAQthC,MAAM,IAAM,IACzBrI,KAAK8+C,KAAOz2C,MAAM,IAAM,IACxBrI,KAAK++C,OAAS12C,MAAM,IAAM,GAC1BrI,KAAKk6C,OAAS7xC,MAAM,GACpBrI,KAAK+7B,MAAQ1zB,MAAM,KAAOA,MAAM,GAChCrI,KAAKg/C,QAAU32C,MAAM,GACrBrI,KAAKi/C,UAAY52C,MAAM,KAAOA,MAAM,GAAGgT,MAAM,GAC7Crb,KAAK2Y,OAAStQ,MAAM,GACpBrI,KAAKnF,KAAOwN,MAAM,KAAO,GAd3Bq2C,gBAAgB7kD,UAAY+kD,gBAAgB/kD,UAiB5C+kD,gBAAgB/kD,UAAUyI,SAAW,WACnC,OAAOtC,KAAK6+C,KACN7+C,KAAK2pC,MACL3pC,KAAK8+C,KACL9+C,KAAK++C,QACJ/+C,KAAKk6C,KAAO,IAAM,KACJ,MAAdl6C,KAAK+7B,MAAgB,GAAKl4B,KAAK8Q,IAAI,EAAgB,EAAb3U,KAAK+7B,SAC3C/7B,KAAKg/C,MAAQ,IAAM,KACD,MAAlBh/C,KAAKi/C,UAAoB,GAAK,IAAMp7C,KAAK8Q,IAAI,EAAoB,EAAjB3U,KAAKi/C,aACrDj/C,KAAK2Y,KAAO,IAAM,IACnB3Y,KAAKnF,MCjCE,ICCJqkD,eCAPC,qBACOp/C,qBACAq/C,2BFHIC,WAAA,SAASrlD,GACtBslD,IAAK,IAAK,IAAkCC,GAA9B/lD,EAAIQ,EAAE0H,OAAQ3J,EAAI,EAAG2vC,IAAM,EAAO3vC,EAAIyB,IAAKzB,EACvD,OAAQiC,EAAEjC,IACR,IAAK,IAAK2vC,GAAK6X,GAAKxnD,EAAG,MACvB,IAAK,IAAgB,IAAP2vC,KAAUA,GAAK3vC,GAAGwnD,GAAKxnD,EAAG,MACxC,QAAS,GAAI2vC,GAAK,EAAG,CAAE,KAAM1tC,EAAEjC,GAAI,MAAMunD,IAAK5X,GAAK,GAGvD,OAAOA,GAAK,EAAI1tC,EAAEqhB,MAAM,EAAGqsB,IAAM1tC,EAAEqhB,MAAMkkC,GAAK,GAAKvlD,GGPtCwlD,cAAA,SAASnhB,EAAGtkC,GACzB,IAAI1B,EAAIgmD,cAAchgB,EAAGtkC,GACzB,IAAK1B,EAAG,OAAOgmC,EAAI,GACnB,IAAIkgB,YAAclmD,EAAE,GAChBonD,SAAWpnD,EAAE,GACjB,OAAOonD,SAAW,EAAI,KAAO,IAAI52C,OAAO42C,UAAU18C,KAAK,KAAOw7C,YACxDA,YAAY78C,OAAS+9C,SAAW,EAAIlB,YAAYljC,MAAM,EAAGokC,SAAW,GAAK,IAAMlB,YAAYljC,MAAMokC,SAAW,GAC5GlB,YAAc,IAAI11C,MAAM42C,SAAWlB,YAAY78C,OAAS,GAAGqB,KAAK,MCNzD28C,aACbC,IAAK,SAAAl+B,EAAS4c,EAAGtkC,GAAK,OAAY,IAAJskC,GAASuhB,QAAQ7lD,IAC/CqJ,EAAK,SAAAA,EAASi7B,GAAK,OAAOx6B,KAAK2G,MAAM6zB,GAAG/7B,SAAS,IACjDlK,EAAK,SAAAA,EAASimC,GAAK,OAAOA,EAAI,IAC9BhmC,EAAK,SAAAA,EAASgmC,GAAK,OAAOx6B,KAAK2G,MAAM6zB,GAAG/7B,SAAS,KACjDrI,EAAK,SAAAA,EAASokC,EAAGtkC,GAAK,OAAOskC,EAAEigB,cAAcvkD,IAC7CghB,EAAK,SAAAA,EAASsjB,EAAGtkC,GAAK,OAAOskC,EAAEuhB,QAAQ7lD,IACvCo7C,EAAK,SAAAA,EAAS9W,EAAGtkC,GAAK,OAAOskC,EAAEwhB,YAAY9lD,IAC3CvB,EAAK,SAAAA,EAAS6lC,GAAK,OAAOx6B,KAAK2G,MAAM6zB,GAAG/7B,SAAS,IACjDvI,EAAK,SAAAA,EAASskC,EAAGtkC,IAAK,OAAOylD,cAAkB,IAAJnhB,EAAStkC,KACpDlB,EAAK2mD,cACLxlD,EHVa,SAASqkC,EAAGtkC,GACzB,IAAI1B,EAAIgmD,cAAchgB,EAAGtkC,GACzB,IAAK1B,EAAG,OAAOgmC,EAAI,GACnB,IAAIkgB,YAAclmD,EAAE,GAChBonD,SAAWpnD,EAAE,GACbN,EAAI0nD,UAAYP,eAAuE,EAAtDr7C,KAAK8Q,KAAK,EAAG9Q,KAAK6Q,IAAI,EAAG7Q,KAAK8N,MAAM8tC,SAAW,MAAY,EAC5FjmD,EAAI+kD,YAAY78C,OACpB,OAAO3J,IAAMyB,EAAI+kD,YACXxmD,EAAIyB,EAAI+kD,YAAc,IAAI11C,MAAM9Q,EAAIyB,EAAI,GAAGuJ,KAAK,KAChDhL,EAAI,EAAIwmD,YAAYljC,MAAM,EAAGtjB,GAAK,IAAMwmD,YAAYljC,MAAMtjB,GAC1D,KAAO,IAAI8Q,MAAM,EAAI9Q,GAAGgL,KAAK,KAAOs7C,cAAchgB,EAAGx6B,KAAK8Q,IAAI,EAAG5a,EAAIhC,EAAI,IAAI,IGCnF+nD,EAAK,SAAAA,EAASzhB,GAAK,OAAOx6B,KAAK2G,MAAM6zB,GAAG/7B,SAAS,IAAIy9C,eACrD1hB,EAAK,SAAAA,EAASA,IAAK,OAAOx6B,KAAK2G,MAAM6zB,IAAG/7B,SAAS,MChBpC09C,aAAA,SAAS3hB,GACtB,OAAOA,GCQL4hB,UAAY,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,GAAG,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,KAEhEC,WAAA,SAASf,QACtB,IAAIgB,MAAQhB,OAAOiB,UAAYjB,OAAOkB,UCZzB,SAASD,SAAUC,WAChC,OAAO,SAASrnD,MAAO+iC,OAOrB,IANA,IAAIhkC,EAAIiB,MAAM0I,OACVzI,KACAmiB,EAAI,EACJ+5B,EAAIiL,SAAS,GACb1+C,OAAS,EAEN3J,EAAI,GAAKo9C,EAAI,IACdzzC,OAASyzC,EAAI,EAAIpZ,QAAOoZ,EAAItxC,KAAK8Q,IAAI,EAAGonB,MAAQr6B,SACpDzI,EAAEiN,KAAKlN,MAAM0K,UAAU3L,GAAKo9C,EAAGp9C,EAAIo9C,OAC9BzzC,QAAUyzC,EAAI,GAAKpZ,SACxBoZ,EAAIiL,SAAShlC,GAAKA,EAAI,GAAKglC,SAAS1+C,QAGtC,OAAOzI,EAAE4rB,UAAU9hB,KAAKs9C,YDHwBC,CAAYnB,OAAOiB,SAAUjB,OAAOkB,WAAatuB,aAC/FwuB,SAAWpB,OAAOoB,SAClBC,QAAUrB,OAAOqB,QACjBC,SAAWtB,OAAOsB,SEfT,SAASA,UACtB,OAAO,SAASznD,OACd,OAAOA,MAAMsH,QAAQ,SAAU,SAASvI,GACtC,OAAO0oD,UAAU1oD,MFYY2oD,CAAevB,OAAOsB,UAAY1uB,aAC/D4uB,QAAUxB,OAAOwB,SAAW,IAEhC,SAASC,UAAUjC,WAGjB,IAAIE,MAFJF,UAAYD,gBAAgBC,YAEPE,KACjBlV,MAAQgV,UAAUhV,MAClBmV,KAAOH,UAAUG,KACjBC,OAASJ,UAAUI,OACnB7E,KAAOyE,UAAUzE,KACjBne,MAAQ4iB,UAAU5iB,MAClBijB,MAAQL,UAAUK,MAClBC,UAAYN,UAAUM,UACtBtmC,KAAOgmC,UAAUhmC,KACjB9d,KAAO8jD,UAAU9jD,KAGR,MAATA,MAAcmkD,OAAQ,EAAMnkD,KAAO,KAG7B6kD,YAAY7kD,QAAoB,MAAbokD,YAAsBA,UAAY,IAAKtmC,MAAO,EAAM9d,KAAO,MAGpFq/C,MAAkB,MAAT2E,MAA0B,MAAVlV,SAAgBuQ,MAAO,EAAM2E,KAAO,IAAKlV,MAAQ,KAI9E,IAAIkX,OAAoB,MAAX9B,OAAiBwB,SAAS,GAAgB,MAAXxB,QAAkB,SAAS1hD,KAAKxC,MAAQ,IAAMA,KAAK4G,cAAgB,GAC3Gq/C,OAAoB,MAAX/B,OAAiBwB,SAAS,GAAK,OAAOljD,KAAKxC,MAAQ8lD,QAAU,GAKtEI,WAAarB,YAAY7kD,MACzBmmD,YAAc,aAAa3jD,KAAKxC,MAUpC,SAASkF,OAAO/G,OACd,IAEIjB,EAAGyB,EAAGpB,EAFN6oD,YAAcJ,OACdK,YAAcJ,OAGlB,GAAa,MAATjmD,KACFqmD,YAAcH,WAAW/nD,OAASkoD,YAClCloD,MAAQ,OACH,CAIL,IAAImoD,eAHJnoD,OAASA,OAGmB,EAe5B,GAdAA,MAAQ+nD,WAAWl9C,KAAK2oB,IAAIxzB,OAAQimD,WAGhCtmC,OAAM3f,MAAQqmD,WAAWrmD,QAGzBmoD,eAA4B,IAAVnoD,QAAamoD,eAAgB,GAGnDF,aAAeE,cAA0B,MAATrC,KAAeA,KAAO,IAAgB,MAATA,MAAyB,MAATA,KAAe,GAAKA,MAAQmC,YACzGC,aAAwB,MAATrmD,KAAeolD,SAAS,EAAIf,eAAiB,GAAK,IAAMgC,aAAeC,eAA0B,MAATrC,KAAe,IAAM,IAIxHkC,YAEF,IADAjpD,GAAK,EAAGyB,EAAIR,MAAM0I,SACT3J,EAAIyB,GACX,GAA6B,IAAzBpB,EAAIY,MAAM6hB,WAAW9iB,KAAcK,EAAI,GAAI,CAC7C8oD,aAAqB,KAAN9oD,EAAWooD,QAAUxnD,MAAMqiB,MAAMtjB,EAAI,GAAKiB,MAAMqiB,MAAMtjB,IAAMmpD,YAC3EloD,MAAQA,MAAMqiB,MAAM,EAAGtjB,GACvB,OAOJinD,QAAU9E,OAAMlhD,MAAQmnD,MAAMnnD,MAAOooD,MAGzC,IAAI1/C,OAASu/C,YAAYv/C,OAAS1I,MAAM0I,OAASw/C,YAAYx/C,OACzDohC,QAAUphC,OAASq6B,MAAQ,IAAIlzB,MAAMkzB,MAAQr6B,OAAS,GAAGqB,KAAK87C,MAAQ,GAM1E,OAHIG,OAAS9E,OAAMlhD,MAAQmnD,MAAMrd,QAAU9pC,MAAO8pC,QAAQphC,OAASq6B,MAAQmlB,YAAYx/C,OAAS0/C,KAAWte,QAAU,IAG7G6G,OACN,IAAK,IAAK3wC,MAAQioD,YAAcjoD,MAAQkoD,YAAcpe,QAAS,MAC/D,IAAK,IAAK9pC,MAAQioD,YAAcne,QAAU9pC,MAAQkoD,YAAa,MAC/D,IAAK,IAAKloD,MAAQ8pC,QAAQznB,MAAM,EAAG3Z,OAASohC,QAAQphC,QAAU,GAAKu/C,YAAcjoD,MAAQkoD,YAAcpe,QAAQznB,MAAM3Z,QAAS,MAC9H,QAAS1I,MAAQ8pC,QAAUme,YAAcjoD,MAAQkoD,YAGnD,OAAOT,SAASznD,OAOlB,OApEAimD,UAAyB,MAAbA,UAAoB,EAC1B,SAAS5hD,KAAKxC,MAAQgJ,KAAK8Q,IAAI,EAAG9Q,KAAK6Q,IAAI,GAAIuqC,YAC/Cp7C,KAAK8Q,IAAI,EAAG9Q,KAAK6Q,IAAI,GAAIuqC,YA8D/Bl/C,OAAOuC,SAAW,WAChB,OAAOq8C,UAAY,IAGd5+C,OAaT,OACEA,OAAQ6gD,UACRxB,aAZF,SAASA,aAAaT,UAAW3lD,OAC/B,IAAI+hB,EAAI6lC,YAAWjC,UAAYD,gBAAgBC,YAAsB9jD,KAAO,IAAK8jD,YAC7E1kD,EAAiE,EAA7D4J,KAAK8Q,KAAK,EAAG9Q,KAAK6Q,IAAI,EAAG7Q,KAAK8N,MAAM8tC,aAASzmD,OAAS,KAC1D+vC,EAAIllC,KAAKiR,IAAI,IAAK7a,GAClB4mD,OAASZ,SAAS,EAAIhmD,EAAI,GAC9B,OAAO,SAASjB,OACd,OAAO+hB,EAAEguB,EAAI/vC,OAAS6nD,YJxHb,SAASQ,cAAc1W,YAIpC,OAHAwU,qBAASmC,WAAa3W,YACtB5qC,qBAASo/C,qBAAOp/C,OAChBq/C,2BAAeD,qBAAOC,aACfD,qBAXTkC,EACEb,QAAS,IACTH,UAAW,IACXD,UAAW,GACXG,UAAW,IAAK,MORH,ICCAgB,eAAA,SAASvqC,OAAQ+vB,MAAO4X,WACrC,IAGIM,UAHAxhD,MAAQuZ,OAAO,GACfyvB,KAAOzvB,OAAOA,OAAOtV,OAAS,GAC9BglC,KAAOW,SAAS5pC,MAAOgpC,KAAe,MAATM,MAAgB,GAAKA,OAGtD,QADA4X,UAAYD,gBAA6B,MAAbC,UAAoB,KAAOA,YACrC9jD,MAChB,IAAK,IACH,IAAI7B,MAAQ6K,KAAK8Q,IAAI9Q,KAAK2oB,IAAI/uB,OAAQoG,KAAK2oB,IAAIia,OAE/C,OAD2B,MAAvBkY,UAAUM,WAAsB1qC,MAAM0qC,UCVjC,SAASvY,KAAM1tC,OAC5B,OAAO6K,KAAK8Q,IAAI,EAAgE,EAA7D9Q,KAAK8Q,KAAK,EAAG9Q,KAAK6Q,IAAI,EAAG7Q,KAAK8N,MAAM8tC,aAASzmD,OAAS,KAAWymD,aAAS57C,KAAK2oB,IAAIka,QDS5C8a,CAAgB9a,KAAM1tC,UAAS2lD,UAAUM,UAAYA,WACpGG,2BAAaT,UAAW3lD,OAEjC,IAAK,GACL,IAAK,IACL,IAAK,IACL,IAAK,IACL,IAAK,IACwB,MAAvB2lD,UAAUM,WAAsB1qC,MAAM0qC,UElBjC,SAASvY,KAAM/xB,KAE5B,OADA+xB,KAAO7iC,KAAK2oB,IAAIka,MAAO/xB,IAAM9Q,KAAK2oB,IAAI7X,KAAO+xB,KACtC7iC,KAAK8Q,IAAI,EAAG8qC,aAAS9qC,KAAO8qC,aAAS/Y,OAAS,EFgBK+a,CAAe/a,KAAM7iC,KAAK8Q,IAAI9Q,KAAK2oB,IAAI/uB,OAAQoG,KAAK2oB,IAAIia,WAAUkY,UAAUM,UAAYA,WAAgC,MAAnBN,UAAU9jD,OACrK,MAEF,IAAK,IACL,IAAK,IACwB,MAAvB8jD,UAAUM,WAAsB1qC,MAAM0qC,UDvBjC,SAASvY,MACtB,OAAO7iC,KAAK8Q,IAAI,GAAI8qC,aAAS57C,KAAK2oB,IAAIka,QCsBoBgb,CAAehb,SAAQiY,UAAUM,UAAYA,UAAuC,GAAP,MAAnBN,UAAU9jD,OAI9H,OAAOkF,qBAAO4+C,YGxBT,SAASgD,UAAUvY,OACxB,IAAIpyB,OAASoyB,MAAMpyB,OAmDnB,OAjDAoyB,MAAMpC,MAAQ,SAASD,OACrB,IAAI1uC,EAAI2e,SACR,OAAOgwB,UAAM3uC,EAAE,GAAIA,EAAEA,EAAEqJ,OAAS,GAAa,MAATqlC,MAAgB,GAAKA,QAG3DqC,MAAMwY,WAAa,SAAS7a,MAAO4X,WACjC,OAAOiD,eAAW5qC,SAAU+vB,MAAO4X,YAGrCvV,MAAMyY,KAAO,SAAS9a,OACP,MAATA,QAAeA,MAAQ,IAE3B,IAKIL,KALAruC,EAAI2e,SACJ0wB,GAAK,EACL6X,GAAKlnD,EAAEqJ,OAAS,EAChBjE,MAAQpF,EAAEqvC,IACVjB,KAAOpuC,EAAEknD,IA8Bb,OA3BI9Y,KAAOhpC,QACTipC,KAAOjpC,MAAOA,MAAQgpC,KAAMA,KAAOC,KACnCA,KAAOgB,GAAIA,GAAK6X,GAAIA,GAAK7Y,OAG3BA,KAAOO,cAAcxpC,MAAOgpC,KAAMM,QAEvB,EAGTL,KAAOO,cAFPxpC,MAAQoG,KAAK8N,MAAMlU,MAAQipC,MAAQA,KACnCD,KAAO5iC,KAAK0oB,KAAKka,KAAOC,MAAQA,KACEK,OACzBL,KAAO,IAGhBA,KAAOO,cAFPxpC,MAAQoG,KAAK0oB,KAAK9uB,MAAQipC,MAAQA,KAClCD,KAAO5iC,KAAK8N,MAAM80B,KAAOC,MAAQA,KACCK,QAGhCL,KAAO,GACTruC,EAAEqvC,IAAM7jC,KAAK8N,MAAMlU,MAAQipC,MAAQA,KACnCruC,EAAEknD,IAAM17C,KAAK0oB,KAAKka,KAAOC,MAAQA,KACjC1vB,OAAO3e,IACEquC,KAAO,IAChBruC,EAAEqvC,IAAM7jC,KAAK0oB,KAAK9uB,MAAQipC,MAAQA,KAClCruC,EAAEknD,IAAM17C,KAAK8N,MAAM80B,KAAOC,MAAQA,KAClC1vB,OAAO3e,IAGF+wC,OAGFA,MAGM,SAASsP,gBACtB,IAAItP,MAAQhxB,WAAWolC,oBAAeC,YAMtC,OAJArU,MAAMC,KAAO,WACX,OAAOA,KAAKD,MAAOsP,kBAGdiJ,UAAUvY,OC/DJ,SAASrX,oBACtB,IAAI/a,QAAU,EAAG,GAEjB,SAASoyB,MAAM/K,GACb,OAAQA,EAaV,OAVA+K,MAAMgB,OAAShB,MAEfA,MAAMpyB,OAASoyB,MAAM7nC,MAAQ,SAASkgB,GACpC,OAAOrc,UAAU1D,QAAUsV,OAAS/O,cAAI/P,KAAKupB,EAAG6kB,qBAAS8C,OAASpyB,OAAOqE,SAG3E+tB,MAAMC,KAAO,WACX,OAAOtX,oBAAW/a,OAAOA,SAGpB2qC,UAAUvY,OCrBJ,IAAAyY,KAAA,SAAS7qC,OAAQ8qC,UAG9B,IAII7oD,EAJAyuC,GAAK,EACL6X,IAHJvoC,OAASA,OAAOqE,SAGA3Z,OAAS,EACrBqgD,GAAK/qC,OAAO0wB,IACZsa,GAAKhrC,OAAOuoC,IAUhB,OAPIyC,GAAKD,KACP9oD,EAAIyuC,GAAIA,GAAK6X,GAAIA,GAAKtmD,EACtBA,EAAI8oD,GAAIA,GAAKC,GAAIA,GAAK/oD,GAGxB+d,OAAO0wB,IAAMoa,SAASnwC,MAAMowC,IAC5B/qC,OAAOuoC,IAAMuC,SAASv1B,KAAKy1B,IACpBhrC,QCVT,SAASwmC,kBAAcrjD,EAAGiJ,GACxB,OAAQA,EAAIS,KAAKsjC,IAAI/jC,EAAIjJ,IACnB,SAASkkC,GAAK,OAAOx6B,KAAKsjC,IAAI9I,EAAIlkC,GAAKiJ,GACvCw1C,sBAASx1C,GAGjB,SAASq6C,kBAActjD,EAAGiJ,GACxB,OAAOjJ,EAAI,EACL,SAASlB,GAAK,OAAQ4K,KAAKiR,KAAK1R,EAAGnK,GAAK4K,KAAKiR,KAAK3a,EAAG,EAAIlB,IACzD,SAASA,GAAK,OAAO4K,KAAKiR,IAAI1R,EAAGnK,GAAK4K,KAAKiR,IAAI3a,EAAG,EAAIlB,IAG9D,SAASgpD,MAAM5jB,GACb,OAAOj9B,SAASi9B,KAAO,KAAOA,GAAKA,EAAI,EAAI,EAAIA,EAGjD,SAAS6jB,KAAKC,MACZ,OAAgB,KAATA,KAAcF,MACfE,OAASt+C,KAAK6zC,EAAI7zC,KAAKu+C,IACvB,SAAS/jB,GAAK,OAAOx6B,KAAKiR,IAAIqtC,KAAM9jB,IAG5C,SAASgkB,KAAKF,MACZ,OAAOA,OAASt+C,KAAK6zC,EAAI7zC,KAAKsjC,IACf,KAATgb,MAAet+C,KAAKy+C,OACV,IAATH,MAAct+C,KAAK0+C,OAClBJ,KAAOt+C,KAAKsjC,IAAIgb,MAAO,SAAS9jB,GAAK,OAAOx6B,KAAKsjC,IAAI9I,GAAK8jB,OAGpE,SAASK,QAAQznC,GACf,OAAO,SAASsjB,GACd,OAAQtjB,GAAGsjB,IAIA,SAAS8I,MACtB,IAAIiC,MAAQhxB,WAAWolC,kBAAeC,mBAAezmC,QAAQ,EAAG,KAC5DA,OAASoyB,MAAMpyB,OACfmrC,KAAO,GACPM,KAAOJ,KAAK,IACZK,KAAOR,KAAK,IAEhB,SAAStY,UAGP,OAFA6Y,KAAOJ,KAAKF,MAAOO,KAAOR,KAAKC,MAC3BnrC,SAAS,GAAK,IAAGyrC,KAAOD,QAAQC,MAAOC,KAAOF,QAAQE,OACnDtZ,MA2ET,OAxEAA,MAAM+Y,KAAO,SAAS1gC,GACpB,OAAOrc,UAAU1D,QAAUygD,MAAQ1gC,EAAGmoB,WAAauY,MAGrD/Y,MAAMpyB,OAAS,SAASyK,GACtB,OAAOrc,UAAU1D,QAAUsV,OAAOyK,GAAImoB,WAAa5yB,UAGrDoyB,MAAMpC,MAAQ,SAASD,OACrB,IAGIluC,EAHAR,EAAI2e,SACJtJ,EAAIrV,EAAE,GACNqQ,EAAIrQ,EAAEA,EAAEqJ,OAAS,IAGjB7I,EAAI6P,EAAIgF,KAAG3V,EAAI2V,EAAGA,EAAIhF,EAAGA,EAAI3Q,GAEjC,IAEIgC,EACAgvC,EACA9vC,EAJAlB,EAAI0qD,KAAK/0C,GACT0N,EAAIqnC,KAAK/5C,GAITlP,EAAa,MAATutC,MAAgB,IAAMA,MAC1BiQ,KAEJ,KAAMmL,KAAO,IAAM/mC,EAAIrjB,EAAIyB,GAEzB,GADAzB,EAAI8L,KAAK2G,MAAMzS,GAAK,EAAGqjB,EAAIvX,KAAK2G,MAAM4Q,GAAK,EACvC1N,EAAI,GAAG,KAAO3V,EAAIqjB,IAAKrjB,EACzB,IAAKgxC,EAAI,EAAGhvC,EAAI2oD,KAAK3qD,GAAIgxC,EAAIoZ,OAAQpZ,EAEnC,MADA9vC,EAAIc,EAAIgvC,GACAr7B,GAAR,CACA,GAAIzU,EAAIyP,EAAG,MACXsuC,EAAE9wC,KAAKjN,SAEJ,KAAOlB,EAAIqjB,IAAKrjB,EACrB,IAAKgxC,EAAIoZ,KAAO,EAAGpoD,EAAI2oD,KAAK3qD,GAAIgxC,GAAK,IAAKA,EAExC,MADA9vC,EAAIc,EAAIgvC,GACAr7B,GAAR,CACA,GAAIzU,EAAIyP,EAAG,MACXsuC,EAAE9wC,KAAKjN,SAIX+9C,EAAIhQ,UAAMjvC,EAAGqjB,EAAGvX,KAAK6Q,IAAI0G,EAAIrjB,EAAGyB,IAAIyO,IAAIy6C,MAG1C,OAAO7pD,EAAIm+C,EAAEnyB,UAAYmyB,GAG3B5N,MAAMwY,WAAa,SAAS7a,MAAO4X,WAGjC,GAFiB,MAAbA,YAAmBA,UAAqB,KAATwD,KAAc,MAAQ,KAChC,mBAAdxD,YAA0BA,UAAY5+C,qBAAO4+C,YACpD5X,QAAUqa,IAAU,OAAOzC,UAClB,MAAT5X,QAAeA,MAAQ,IAC3B,IAAIgC,EAAIllC,KAAK8Q,IAAI,EAAGwtC,KAAOpb,MAAQqC,MAAMpC,QAAQtlC,QACjD,OAAO,SAASrJ,GACd,IAAIN,EAAIM,EAAIqqD,KAAK7+C,KAAK2G,MAAMi4C,KAAKpqD,KAEjC,OADIN,EAAIoqD,KAAOA,KAAO,KAAKpqD,GAAKoqD,MACzBpqD,GAAKgxC,EAAI4V,UAAUtmD,GAAK,KAInC+wC,MAAMyY,KAAO,WACX,OAAO7qC,OAAO6qC,KAAK7qC,UACjBrF,MAAO,SAAAA,MAAS0sB,GAAK,OAAOqkB,KAAK7+C,KAAK8N,MAAM8wC,KAAKpkB,MACjD9R,KAAM,SAAAA,KAAS8R,GAAK,OAAOqkB,KAAK7+C,KAAK0oB,KAAKk2B,KAAKpkB,UAInD+K,MAAMC,KAAO,WACX,OAAOA,KAAKD,MAAOjC,MAAMgb,KAAKA,QAGzB/Y,MC1HT,SAASuZ,MAAMtkB,EAAGohB,UAChB,OAAOphB,EAAI,GAAKx6B,KAAKiR,KAAKupB,EAAGohB,UAAY57C,KAAKiR,IAAIupB,EAAGohB,UAGxC,SAAS3qC,MACtB,IAAI2qC,SAAW,EACXrW,MAAQhxB,WAGZ,SAASolC,cAAcrjD,EAAGiJ,GACxB,OAAQA,EAAIu/C,MAAMv/C,EAAGq8C,WAAatlD,EAAIwoD,MAAMxoD,EAAGslD,YACzC,SAASphB,GAAK,OAAQskB,MAAMtkB,EAAGohB,UAAYtlD,GAAKiJ,GAChDw1C,sBAASx1C,IAGjB,SAASq6C,cAActjD,EAAGiJ,GAExB,OADAA,EAAIu/C,MAAMv/C,EAAGq8C,WAAatlD,EAAIwoD,MAAMxoD,EAAGslD,WAChC,SAASxmD,GAAK,OAAO0pD,MAAMxoD,EAAIiJ,EAAInK,EAAG,EAAIwmD,aAV/CzoC,OAASoyB,MAAMpyB,OAqBnB,OARAoyB,MAAMqW,SAAW,SAASh+B,GACxB,OAAOrc,UAAU1D,QAAU+9C,UAAYh+B,EAAGzK,OAAOA,WAAayoC,UAGhErW,MAAMC,KAAO,WACX,OAAOA,KAAKD,MAAOt0B,MAAM2qC,SAASA,YAG7BkC,UAAUvY,OC7BJ,SAAS5B,oBACtB,IAAIxwB,UACAzV,SACAqhD,cAEJ,SAAShZ,UACP,IAAI7xC,EAAI,EAAGyB,EAAIqK,KAAK8Q,IAAI,EAAGpT,MAAMG,QAEjC,IADAkhD,WAAa,IAAI/5C,MAAMrP,EAAI,KAClBzB,EAAIyB,GAAGopD,WAAW7qD,EAAI,GAAK8qD,SAAU7rC,OAAQjf,EAAIyB,GAC1D,OAAO4vC,MAGT,SAASA,MAAM/K,GACb,IAAK9pB,MAAM8pB,GAAKA,GAAI,OAAO98B,MAAMq8C,OAAOgF,WAAYvkB,IAiCtD,OA9BA+K,MAAMW,aAAe,SAASvmC,GAC5B,IAAIzL,EAAIwJ,MAAM0E,QAAQzC,GACtB,OAAOzL,EAAI,GAAK+tC,IAAKA,MACnB/tC,EAAI,EAAI6qD,WAAW7qD,EAAI,GAAKif,OAAO,GACnCjf,EAAI6qD,WAAWlhD,OAASkhD,WAAW7qD,GAAKif,OAAOA,OAAOtV,OAAS,KAInE0nC,MAAMpyB,OAAS,SAASyK,GACtB,IAAKrc,UAAU1D,OAAQ,OAAOsV,OAAOqE,QACrCrE,UACA,IAAK,IAAyB3e,EAArBN,EAAI,EAAGyB,EAAIioB,EAAE/f,OAAW3J,EAAIyB,IAAKzB,EAAsB,OAAfM,EAAIopB,EAAE1pB,KAAkBwc,MAAMlc,GAAKA,IAAI2e,OAAO9Q,KAAK7N,GAEpG,OADA2e,OAAOxD,KAAKqyB,WACL+D,WAGTR,MAAM7nC,MAAQ,SAASkgB,GACrB,OAAOrc,UAAU1D,QAAUH,MAAQ8Z,YAAMnjB,KAAKupB,GAAImoB,WAAaroC,MAAM8Z,SAGvE+tB,MAAM0Z,UAAY,WAChB,OAAOF,WAAWvnC,SAGpB+tB,MAAMC,KAAO,WACX,OAAO7B,oBACFxwB,OAAOA,QACPzV,MAAMA,QAGN6nC,MC7CM,SAAS2Z,oBACtB,IAAIhB,GAAK,EACLC,GAAK,EACLxoD,EAAI,EACJwd,QAAU,IACVzV,OAAS,EAAG,GAEhB,SAAS6nC,MAAM/K,GACb,GAAIA,GAAKA,EAAG,OAAO98B,MAAMq8C,OAAO5mC,OAAQqnB,EAAG,EAAG7kC,IAGhD,SAASowC,UACP,IAAI7xC,GAAK,EAET,IADAif,OAAS,IAAInO,MAAMrP,KACVzB,EAAIyB,GAAGwd,OAAOjf,KAAOA,EAAI,GAAKiqD,IAAMjqD,EAAIyB,GAAKuoD,KAAOvoD,EAAI,GACjE,OAAO4vC,MAyBT,OAtBAA,MAAMpyB,OAAS,SAASyK,GACtB,OAAOrc,UAAU1D,QAAUqgD,IAAMtgC,EAAE,GAAIugC,IAAMvgC,EAAE,GAAImoB,YAAcmY,GAAIC,KAGvE5Y,MAAM7nC,MAAQ,SAASkgB,GACrB,OAAOrc,UAAU1D,QAAUlI,GAAK+H,MAAQ8Z,YAAMnjB,KAAKupB,IAAI/f,OAAS,EAAGkoC,WAAaroC,MAAM8Z,SAGxF+tB,MAAMW,aAAe,SAASvmC,GAC5B,IAAIzL,EAAIwJ,MAAM0E,QAAQzC,GACtB,OAAOzL,EAAI,GAAK+tC,IAAKA,KACf/tC,EAAI,GAAKgqD,GAAI/qC,OAAO,IACpBjf,GAAKyB,GAAKwd,OAAOxd,EAAI,GAAIwoD,KACxBhrC,OAAOjf,EAAI,GAAIif,OAAOjf,KAG/BqxC,MAAMC,KAAO,WACX,OAAO0Z,oBACF/rC,QAAQ+qC,GAAIC,KACZzgD,MAAMA,QAGNogD,UAAUvY,OCzCJ,SAASyZ,sBACtB,IAAI7rC,QAAU,IACVzV,OAAS,EAAG,GACZ/H,EAAI,EAER,SAAS4vC,MAAM/K,GACb,GAAIA,GAAKA,EAAG,OAAO98B,MAAMq8C,OAAO5mC,OAAQqnB,EAAG,EAAG7kC,IAsBhD,OAnBA4vC,MAAMpyB,OAAS,SAASyK,GACtB,OAAOrc,UAAU1D,QAAUsV,OAASqE,YAAMnjB,KAAKupB,GAAIjoB,EAAIqK,KAAK6Q,IAAIsC,OAAOtV,OAAQH,MAAMG,OAAS,GAAI0nC,OAASpyB,OAAOqE,SAGpH+tB,MAAM7nC,MAAQ,SAASkgB,GACrB,OAAOrc,UAAU1D,QAAUH,MAAQ8Z,YAAMnjB,KAAKupB,GAAIjoB,EAAIqK,KAAK6Q,IAAIsC,OAAOtV,OAAQH,MAAMG,OAAS,GAAI0nC,OAAS7nC,MAAM8Z,SAGlH+tB,MAAMW,aAAe,SAASvmC,GAC5B,IAAIzL,EAAIwJ,MAAM0E,QAAQzC,GACtB,OAAQwT,OAAOjf,EAAI,GAAIif,OAAOjf,KAGhCqxC,MAAMC,KAAO,WACX,OAAOwZ,sBACF7rC,OAAOA,QACPzV,MAAMA,QAGN6nC,MC/BT,IAAImN,YAAK,IAAI32C,KACT42C,YAAK,IAAI52C,KAEE,SAASojD,YAAYC,OAAQC,QAASnc,MAAOz7B,OAE1D,SAASw2C,SAASniD,MAChB,OAAOsjD,OAAOtjD,KAAO,IAAIC,MAAMD,OAAQA,KA4DzC,OAzDAmiD,SAASnwC,MAAQmwC,SAEjBA,SAASv1B,KAAO,SAAS5sB,MACvB,OAAOsjD,OAAOtjD,KAAO,IAAIC,KAAKD,KAAO,IAAKujD,QAAQvjD,KAAM,GAAIsjD,OAAOtjD,MAAOA,MAG5EmiD,SAASt3C,MAAQ,SAAS7K,MACxB,IAAI+9C,GAAKoE,SAASniD,MACd4qC,GAAKuX,SAASv1B,KAAK5sB,MACvB,OAAOA,KAAO+9C,GAAKnT,GAAK5qC,KAAO+9C,GAAKnT,IAGtCuX,SAASqB,OAAS,SAASxjD,KAAM+mC,MAC/B,OAAOwc,QAAQvjD,KAAO,IAAIC,MAAMD,MAAe,MAAR+mC,KAAe,EAAI7iC,KAAK8N,MAAM+0B,OAAQ/mC,MAG/EmiD,SAASvgD,MAAQ,SAAS9D,MAAOgpC,KAAMC,MACrC,IAAgB0c,SAAZ7hD,SAGJ,GAFA9D,MAAQqkD,SAASv1B,KAAK9uB,OACtBipC,KAAe,MAARA,KAAe,EAAI7iC,KAAK8N,MAAM+0B,QAC/BjpC,MAAQgpC,MAAWC,KAAO,GAAI,OAAOnlC,MAC3C,GAAGA,MAAM2E,KAAKk9C,SAAW,IAAIxjD,MAAMnC,QAASylD,QAAQzlD,MAAOipC,MAAOuc,OAAOxlD,aAClE2lD,SAAW3lD,OAASA,MAAQgpC,MACnC,OAAOllC,OAGTugD,SAAS9tC,OAAS,SAAS3W,MACzB,OAAO2lD,YAAY,SAASrjD,MAC1B,GAAIA,MAAQA,KAAM,KAAOsjD,OAAOtjD,OAAQtC,KAAKsC,OAAOA,KAAK86C,QAAQ96C,KAAO,IACvE,SAASA,KAAM+mC,MAChB,GAAI/mC,MAAQA,KACV,GAAI+mC,KAAO,EAAG,OAASA,MAAQ,GAC7B,KAAOwc,QAAQvjD,MAAO,IAAKtC,KAAKsC,aAC3B,OAAS+mC,MAAQ,GACtB,KAAOwc,QAAQvjD,KAAM,IAAMtC,KAAKsC,YAMpConC,QACF+a,SAAS/a,MAAQ,SAAStpC,MAAOgP,KAG/B,OAFA8pC,YAAGkE,SAASh9C,OAAQ+4C,YAAGiE,SAAShuC,KAChCw2C,OAAO1M,aAAK0M,OAAOzM,aACZ3yC,KAAK8N,MAAMo1B,MAAMwP,YAAIC,eAG9BsL,SAAShjC,MAAQ,SAAS4nB,MAExB,OADAA,KAAO7iC,KAAK8N,MAAM+0B,MACVtlC,SAASslC,OAAWA,KAAO,EAC3BA,KAAO,EACTob,SAAS9tC,OAAO1I,MACZ,SAASjT,GAAK,OAAOiT,MAAMjT,GAAKquC,MAAS,GACzC,SAASruC,GAAK,OAAOypD,SAAS/a,MAAM,EAAG1uC,GAAKquC,MAAS,IAH3Cob,SADoB,OAQrCA,SChET,IAAIuB,wBAAcvB,YAAS,aAExB,SAASniD,KAAM+mC,MAChB/mC,KAAK86C,SAAS96C,KAAO+mC,OACpB,SAASjpC,MAAOgP,KACjB,OAAOA,IAAMhP,QAIf4lD,wBAAYvkC,MAAQ,SAASiqB,GAE3B,OADAA,EAAIllC,KAAK8N,MAAMo3B,GACV3nC,SAAS2nC,IAAQA,EAAI,EACpBA,EAAI,EACH+Y,YAAS,SAASniD,MACvBA,KAAK86C,QAAQ52C,KAAK8N,MAAMhS,KAAOopC,GAAKA,IACnC,SAASppC,KAAM+mC,MAChB/mC,KAAK86C,SAAS96C,KAAO+mC,KAAOqC,IAC3B,SAAStrC,MAAOgP,KACjB,OAAQA,IAAMhP,OAASsrC,IANJsa,wBADgB,MAWxBA,4CCvBJC,gBDwBeD,wBAAY9hD,MCxBV,KAGjBgiD,aAAe,OCDtBC,cAAS1B,YAAS,SAASniD,MAC7BA,KAAK86C,QDJqB,ICIb52C,KAAK8N,MAAMhS,KDJE,OCKzB,SAASA,KAAM+mC,MAChB/mC,KAAK86C,SAAS96C,KDNY,ICML+mC,OACpB,SAASjpC,MAAOgP,KACjB,OAAQA,IAAMhP,ODRY,KCSzB,SAASkC,MACV,OAAOA,KAAK8jD,kBAGCD,yBCVXE,eDWiBF,cAAOjiD,MCXfugD,YAAS,SAASniD,MAC7BA,KAAK86C,QAAQ52C,KAAK8N,MAAMhS,KAAO2jD,gBAAkBA,iBAChD,SAAS3jD,KAAM+mC,MAChB/mC,KAAK86C,SAAS96C,KAAO+mC,KAAO4c,iBAC3B,SAAS7lD,MAAOgP,KACjB,OAAQA,IAAMhP,OAAS6lD,gBACtB,SAAS3jD,MACV,OAAOA,KAAK+C,gBAGCghD,yBCVXC,WDWiBD,cAAOniD,MCXjBugD,YAAS,SAASniD,MAC3B,IAAIwjD,OAASxjD,KAAKikD,oBAAsBN,eHFhB,KGGpBH,OAAS,IAAGA,QHHQ,MGIxBxjD,KAAK86C,QHJmB,KGIX52C,KAAK8N,QAAQhS,KAAOwjD,QHJT,MGIkDA,SACzE,SAASxjD,KAAM+mC,MAChB/mC,KAAK86C,SAAS96C,KHNU,KGMH+mC,OACpB,SAASjpC,MAAOgP,KACjB,OAAQA,IAAMhP,OHRU,MGSvB,SAASkC,MACV,OAAOA,KAAK0C,cAGCshD,mBCZX3gD,SDae2gD,UAAKpiD,MCbdugD,YAAS,SAASniD,MAC1BA,KAAKkkD,SAAS,EAAG,EAAG,EAAG,IACtB,SAASlkD,KAAM+mC,MAChB/mC,KAAKmkD,QAAQnkD,KAAKwD,UAAYujC,OAC7B,SAASjpC,MAAOgP,KACjB,OAAQA,IAAMhP,OAASgP,IAAIm3C,oBAAsBnmD,MAAMmmD,qBAAuBN,gBJLvD,OIMtB,SAAS3jD,MACV,OAAOA,KAAKwD,UAAY,KAGXH,gBACGA,QAAIzB,MCXtB,SAASwiD,QAAQhsD,GACf,OAAO+pD,YAAS,SAASniD,MACvBA,KAAKmkD,QAAQnkD,KAAKwD,WAAaxD,KAAKsD,SAAW,EAAIlL,GAAK,GACxD4H,KAAKkkD,SAAS,EAAG,EAAG,EAAG,IACtB,SAASlkD,KAAM+mC,MAChB/mC,KAAKmkD,QAAQnkD,KAAKwD,UAAmB,EAAPujC,OAC7B,SAASjpC,MAAOgP,KACjB,OAAQA,IAAMhP,OAASgP,IAAIm3C,oBAAsBnmD,MAAMmmD,qBAAuBN,gBAAkBC,eAI7F,IAAIS,OAASD,QAAQ,GACjBE,OAASF,QAAQ,GACjBG,QAAUH,QAAQ,GAClBI,UAAYJ,QAAQ,GACpBK,SAAWL,QAAQ,GACnBM,OAASN,QAAQ,GACjBO,SAAWP,QAAQ,GClB1B1gD,aDoBiB2gD,OAAOziD,MACP0iD,OAAO1iD,MACN2iD,QAAQ3iD,MACN4iD,UAAU5iD,MACX6iD,SAAS7iD,MACX8iD,OAAO9iD,MACL+iD,SAAS/iD,MC1BpBugD,YAAS,SAASniD,MAC5BA,KAAKmkD,QAAQ,GACbnkD,KAAKkkD,SAAS,EAAG,EAAG,EAAG,IACtB,SAASlkD,KAAM+mC,MAChB/mC,KAAK4kD,SAAS5kD,KAAK2D,WAAaojC,OAC/B,SAASjpC,MAAOgP,KACjB,OAAOA,IAAInJ,WAAa7F,MAAM6F,WAAyD,IAA3CmJ,IAAI1I,cAAgBtG,MAAMsG,gBACrE,SAASpE,MACV,OAAOA,KAAK2D,cAGCD,sBCXXW,WDYgBX,YAAM9B,MCZfugD,YAAS,SAASniD,MAC3BA,KAAK4kD,SAAS,EAAG,GACjB5kD,KAAKkkD,SAAS,EAAG,EAAG,EAAG,IACtB,SAASlkD,KAAM+mC,MAChB/mC,KAAK6kD,YAAY7kD,KAAKoE,cAAgB2iC,OACrC,SAASjpC,MAAOgP,KACjB,OAAOA,IAAI1I,cAAgBtG,MAAMsG,eAChC,SAASpE,MACV,OAAOA,KAAKoE,iBAIdC,UAAK8a,MAAQ,SAASiqB,GACpB,OAAQ3nC,SAAS2nC,EAAIllC,KAAK8N,MAAMo3B,KAASA,EAAI,EAAY+Y,YAAS,SAASniD,MACzEA,KAAK6kD,YAAY3gD,KAAK8N,MAAMhS,KAAKoE,cAAgBglC,GAAKA,GACtDppC,KAAK4kD,SAAS,EAAG,GACjB5kD,KAAKkkD,SAAS,EAAG,EAAG,EAAG,IACtB,SAASlkD,KAAM+mC,MAChB/mC,KAAK6kD,YAAY7kD,KAAKoE,cAAgB2iC,KAAOqC,KALG,MASrC/kC,uBCrBXygD,WDsBezgD,UAAKzC,MCtBRugD,YAAS,SAASniD,MAChCA,KAAK+kD,cAAc,EAAG,IACrB,SAAS/kD,KAAM+mC,MAChB/mC,KAAK86C,SAAS96C,KAAO+mC,KAAO4c,iBAC3B,SAAS7lD,MAAOgP,KACjB,OAAQA,IAAMhP,OAAS6lD,gBACtB,SAAS3jD,MACV,OAAOA,KAAKglD,mBCPVC,SDWoBH,UAAUljD,MCXpBugD,YAAS,SAASniD,MAC9BA,KAAKklD,cAAc,EAAG,EAAG,IACxB,SAASllD,KAAM+mC,MAChB/mC,KAAK86C,SAAS96C,KTJU,KSIH+mC,OACpB,SAASjpC,MAAOgP,KACjB,OAAQA,IAAMhP,OTNU,MSOvB,SAASkC,MACV,OAAOA,KAAKmlD,iBCPVC,QDWkBH,QAAQrjD,MCXjBugD,YAAS,SAASniD,MAC7BA,KAAKqlD,YAAY,EAAG,EAAG,EAAG,IACzB,SAASrlD,KAAM+mC,MAChB/mC,KAAKslD,WAAWtlD,KAAKulD,aAAexe,OACnC,SAASjpC,MAAOgP,KACjB,OAAQA,IAAMhP,OVLS,OUMtB,SAASkC,MACV,OAAOA,KAAKulD,aAAe,KAGdH,kBACMA,OAAOxjD,MCX5B,SAAS4jD,WAAWptD,GAClB,OAAO+pD,YAAS,SAASniD,MACvBA,KAAKslD,WAAWtlD,KAAKulD,cAAgBvlD,KAAKylD,YAAc,EAAIrtD,GAAK,GACjE4H,KAAKqlD,YAAY,EAAG,EAAG,EAAG,IACzB,SAASrlD,KAAM+mC,MAChB/mC,KAAKslD,WAAWtlD,KAAKulD,aAAsB,EAAPxe,OACnC,SAASjpC,MAAOgP,KACjB,OAAQA,IAAMhP,OAAS8lD,eAIpB,IAAI8B,UAAYF,WAAW,GACvBG,UAAYH,WAAW,GACvBI,WAAaJ,WAAW,GACxBK,aAAeL,WAAW,GAC1BM,YAAcN,WAAW,GACzBO,UAAYP,WAAW,GACvBQ,YAAcR,WAAW,GClBhCS,UDoBoBP,UAAU9jD,MACV+jD,UAAU/jD,MACTgkD,WAAWhkD,MACTikD,aAAajkD,MACdkkD,YAAYlkD,MACdmkD,UAAUnkD,MACRokD,YAAYpkD,MC1BvBugD,YAAS,SAASniD,MAC/BA,KAAKslD,WAAW,GAChBtlD,KAAKqlD,YAAY,EAAG,EAAG,EAAG,IACzB,SAASrlD,KAAM+mC,MAChB/mC,KAAKkmD,YAAYlmD,KAAKmmD,cAAgBpf,OACrC,SAASjpC,MAAOgP,KACjB,OAAOA,IAAIq5C,cAAgBroD,MAAMqoD,cAAkE,IAAjDr5C,IAAIs5C,iBAAmBtoD,MAAMsoD,mBAC9E,SAASpmD,MACV,OAAOA,KAAKmmD,iBCRVE,SDYmBJ,SAASrkD,MCZlBugD,YAAS,SAASniD,MAC9BA,KAAKkmD,YAAY,EAAG,GACpBlmD,KAAKqlD,YAAY,EAAG,EAAG,EAAG,IACzB,SAASrlD,KAAM+mC,MAChB/mC,KAAKsmD,eAAetmD,KAAKomD,iBAAmBrf,OAC3C,SAASjpC,MAAOgP,KACjB,OAAOA,IAAIs5C,iBAAmBtoD,MAAMsoD,kBACnC,SAASpmD,MACV,OAAOA,KAAKomD,oBAIdC,QAAQlnC,MAAQ,SAASiqB,GACvB,OAAQ3nC,SAAS2nC,EAAIllC,KAAK8N,MAAMo3B,KAASA,EAAI,EAAY+Y,YAAS,SAASniD,MACzEA,KAAKsmD,eAAepiD,KAAK8N,MAAMhS,KAAKomD,iBAAmBhd,GAAKA,GAC5DppC,KAAKkmD,YAAY,EAAG,GACpBlmD,KAAKqlD,YAAY,EAAG,EAAG,EAAG,IACzB,SAASrlD,KAAM+mC,MAChB/mC,KAAKsmD,eAAetmD,KAAKomD,iBAAmBrf,KAAOqC,KALH,MASrCid,wBACOA,QAAQzkD,MCZ9B,SAAS2kD,UAAU7tD,GACjB,GAAI,GAAKA,EAAEmL,GAAKnL,EAAEmL,EAAI,IAAK,CACzB,IAAI7D,KAAO,IAAIC,MAAM,EAAGvH,EAAEF,EAAGE,EAAEA,EAAGA,EAAE2J,EAAG3J,EAAEoK,EAAGpK,EAAEsK,EAAGtK,EAAE8tD,GAEnD,OADAxmD,KAAK6kD,YAAYnsD,EAAEmL,GACZ7D,KAET,OAAO,IAAIC,KAAKvH,EAAEmL,EAAGnL,EAAEF,EAAGE,EAAEA,EAAGA,EAAE2J,EAAG3J,EAAEoK,EAAGpK,EAAEsK,EAAGtK,EAAE8tD,GAGlD,SAASC,QAAQ/tD,GACf,GAAI,GAAKA,EAAEmL,GAAKnL,EAAEmL,EAAI,IAAK,CACzB,IAAI7D,KAAO,IAAIC,KAAKA,KAAKymD,KAAK,EAAGhuD,EAAEF,EAAGE,EAAEA,EAAGA,EAAE2J,EAAG3J,EAAEoK,EAAGpK,EAAEsK,EAAGtK,EAAE8tD,IAE5D,OADAxmD,KAAKsmD,eAAe5tD,EAAEmL,GACf7D,KAET,OAAO,IAAIC,KAAKA,KAAKymD,IAAIhuD,EAAEmL,EAAGnL,EAAEF,EAAGE,EAAEA,EAAGA,EAAE2J,EAAG3J,EAAEoK,EAAGpK,EAAEsK,EAAGtK,EAAE8tD,IAG3D,SAASG,QAAQ9iD,GACf,OAAQA,EAAGA,EAAGrL,EAAG,EAAGE,EAAG,EAAG2J,EAAG,EAAGS,EAAG,EAAGE,EAAG,EAAGwjD,EAAG,GA2UjD,ICzWIhH,yBACOoH,WAEAC,UACAC,SDqWPC,MAAQC,IAAK,GAAIllC,EAAK,IAAKmlC,EAAK,KAChCC,SAAW,UACXC,UAAY,KACZC,UAAY,sBAEhB,SAASlnD,WAAI7G,MAAO6lD,KAAM9iB,OACxB,IAAI+iB,KAAO9lD,MAAQ,EAAI,IAAM,GACzBwhD,QAAUsE,MAAQ9lD,MAAQA,OAAS,GACnC0I,OAAS84C,OAAO94C,OACpB,OAAOo9C,MAAQp9C,OAASq6B,MAAQ,IAAIlzB,MAAMkzB,MAAQr6B,OAAS,GAAGqB,KAAK87C,MAAQrE,OAASA,QAGtF,SAASwM,QAAQhtD,GACf,OAAOA,EAAEsG,QAAQymD,UAAW,QAG9B,SAASE,SAASC,OAChB,OAAO,IAAI/mD,OAAO,OAAS+mD,MAAMj/C,IAAI++C,SAASjkD,KAAK,KAAO,IAAK,KAGjE,SAASokD,aAAaD,OAEpB,IADA,IAAIj/C,OAAUlQ,GAAK,EAAGyB,EAAI0tD,MAAMxlD,SACvB3J,EAAIyB,GAAGyO,IAAIi/C,MAAMnvD,GAAG0J,eAAiB1J,EAC9C,OAAOkQ,IAGT,SAASm/C,yBAAyB/uD,EAAGmiD,OAAQziD,GAC3C,IAAIyB,EAAIqtD,SAAS/R,KAAK0F,OAAOn/B,MAAMtjB,EAAGA,EAAI,IAC1C,OAAOyB,GAAKnB,EAAEgvD,GAAK7tD,EAAE,GAAIzB,EAAIyB,EAAE,GAAGkI,SAAW,EAG/C,SAAS4lD,yBAAyBjvD,EAAGmiD,OAAQziD,GAC3C,IAAIyB,EAAIqtD,SAAS/R,KAAK0F,OAAOn/B,MAAMtjB,EAAGA,EAAI,IAC1C,OAAOyB,GAAKnB,EAAEqV,GAAKlU,EAAE,GAAIzB,EAAIyB,EAAE,GAAGkI,SAAW,EAG/C,SAAS6lD,sBAAsBlvD,EAAGmiD,OAAQziD,GACxC,IAAIyB,EAAIqtD,SAAS/R,KAAK0F,OAAOn/B,MAAMtjB,EAAGA,EAAI,IAC1C,OAAOyB,GAAKnB,EAAEmvD,GAAKhuD,EAAE,GAAIzB,EAAIyB,EAAE,GAAGkI,SAAW,EAG/C,SAAS+lD,mBAAmBpvD,EAAGmiD,OAAQziD,GACrC,IAAIyB,EAAIqtD,SAAS/R,KAAK0F,OAAOn/B,MAAMtjB,EAAGA,EAAI,IAC1C,OAAOyB,GAAKnB,EAAEqvD,GAAKluD,EAAE,GAAIzB,EAAIyB,EAAE,GAAGkI,SAAW,EAG/C,SAASimD,sBAAsBtvD,EAAGmiD,OAAQziD,GACxC,IAAIyB,EAAIqtD,SAAS/R,KAAK0F,OAAOn/B,MAAMtjB,EAAGA,EAAI,IAC1C,OAAOyB,GAAKnB,EAAEuvD,GAAKpuD,EAAE,GAAIzB,EAAIyB,EAAE,GAAGkI,SAAW,EAG/C,SAASmmD,cAAcxvD,EAAGmiD,OAAQziD,GAChC,IAAIyB,EAAIqtD,SAAS/R,KAAK0F,OAAOn/B,MAAMtjB,EAAGA,EAAI,IAC1C,OAAOyB,GAAKnB,EAAEmL,GAAKhK,EAAE,GAAIzB,EAAIyB,EAAE,GAAGkI,SAAW,EAG/C,SAASomD,UAAUzvD,EAAGmiD,OAAQziD,GAC5B,IAAIyB,EAAIqtD,SAAS/R,KAAK0F,OAAOn/B,MAAMtjB,EAAGA,EAAI,IAC1C,OAAOyB,GAAKnB,EAAEmL,GAAKhK,EAAE,KAAOA,EAAE,GAAK,GAAK,KAAO,KAAOzB,EAAIyB,EAAE,GAAGkI,SAAW,EAG5E,SAASqmD,UAAU1vD,EAAGmiD,OAAQziD,GAC5B,IAAIyB,EAAI,+BAA+Bs7C,KAAK0F,OAAOn/B,MAAMtjB,EAAGA,EAAI,IAChE,OAAOyB,GAAKnB,EAAE2vD,EAAIxuD,EAAE,GAAK,IAAMA,EAAE,IAAMA,EAAE,IAAM,OAAQzB,EAAIyB,EAAE,GAAGkI,SAAW,EAG7E,SAASumD,iBAAiB5vD,EAAGmiD,OAAQziD,GACnC,IAAIyB,EAAIqtD,SAAS/R,KAAK0F,OAAOn/B,MAAMtjB,EAAGA,EAAI,IAC1C,OAAOyB,GAAKnB,EAAEF,EAAIqB,EAAE,GAAK,EAAGzB,EAAIyB,EAAE,GAAGkI,SAAW,EAGlD,SAASwmD,gBAAgB7vD,EAAGmiD,OAAQziD,GAClC,IAAIyB,EAAIqtD,SAAS/R,KAAK0F,OAAOn/B,MAAMtjB,EAAGA,EAAI,IAC1C,OAAOyB,GAAKnB,EAAEA,GAAKmB,EAAE,GAAIzB,EAAIyB,EAAE,GAAGkI,SAAW,EAG/C,SAASymD,eAAe9vD,EAAGmiD,OAAQziD,GACjC,IAAIyB,EAAIqtD,SAAS/R,KAAK0F,OAAOn/B,MAAMtjB,EAAGA,EAAI,IAC1C,OAAOyB,GAAKnB,EAAEF,EAAI,EAAGE,EAAEA,GAAKmB,EAAE,GAAIzB,EAAIyB,EAAE,GAAGkI,SAAW,EAGxD,SAAS0mD,YAAY/vD,EAAGmiD,OAAQziD,GAC9B,IAAIyB,EAAIqtD,SAAS/R,KAAK0F,OAAOn/B,MAAMtjB,EAAGA,EAAI,IAC1C,OAAOyB,GAAKnB,EAAE2J,GAAKxI,EAAE,GAAIzB,EAAIyB,EAAE,GAAGkI,SAAW,EAG/C,SAAS2mD,aAAahwD,EAAGmiD,OAAQziD,GAC/B,IAAIyB,EAAIqtD,SAAS/R,KAAK0F,OAAOn/B,MAAMtjB,EAAGA,EAAI,IAC1C,OAAOyB,GAAKnB,EAAEoK,GAAKjJ,EAAE,GAAIzB,EAAIyB,EAAE,GAAGkI,SAAW,EAG/C,SAAS4mD,aAAajwD,EAAGmiD,OAAQziD,GAC/B,IAAIyB,EAAIqtD,SAAS/R,KAAK0F,OAAOn/B,MAAMtjB,EAAGA,EAAI,IAC1C,OAAOyB,GAAKnB,EAAEsK,GAAKnJ,EAAE,GAAIzB,EAAIyB,EAAE,GAAGkI,SAAW,EAG/C,SAAS6mD,kBAAkBlwD,EAAGmiD,OAAQziD,GACpC,IAAIyB,EAAIqtD,SAAS/R,KAAK0F,OAAOn/B,MAAMtjB,EAAGA,EAAI,IAC1C,OAAOyB,GAAKnB,EAAE8tD,GAAK3sD,EAAE,GAAIzB,EAAIyB,EAAE,GAAGkI,SAAW,EAG/C,SAAS8mD,kBAAkBnwD,EAAGmiD,OAAQziD,GACpC,IAAIyB,EAAIqtD,SAAS/R,KAAK0F,OAAOn/B,MAAMtjB,EAAGA,EAAI,IAC1C,OAAOyB,GAAKnB,EAAE8tD,EAAItiD,KAAK8N,MAAMnY,EAAE,GAAK,KAAOzB,EAAIyB,EAAE,GAAGkI,SAAW,EAGjE,SAAS+mD,oBAAoBpwD,EAAGmiD,OAAQziD,GACtC,IAAIyB,EAAIstD,UAAUhS,KAAK0F,OAAOn/B,MAAMtjB,EAAGA,EAAI,IAC3C,OAAOyB,EAAIzB,EAAIyB,EAAE,GAAGkI,QAAU,EAGhC,SAASgnD,mBAAmBrwD,EAAGmiD,OAAQziD,GACrC,IAAIyB,EAAIqtD,SAAS/R,KAAK0F,OAAOn/B,MAAMtjB,IACnC,OAAOyB,GAAKnB,EAAEswD,GAAKnvD,EAAE,GAAIzB,EAAIyB,EAAE,GAAGkI,SAAW,EAG/C,SAASknD,0BAA0BvwD,EAAGmiD,OAAQziD,GAC5C,IAAIyB,EAAIqtD,SAAS/R,KAAK0F,OAAOn/B,MAAMtjB,IACnC,OAAOyB,GAAKnB,EAAEswD,EAAc,KAARnvD,EAAE,GAAYzB,EAAIyB,EAAE,GAAGkI,SAAW,EAGxD,SAASmnD,iBAAiBxwD,EAAG0B,GAC3B,OAAO8F,WAAIxH,EAAE8K,UAAWpJ,EAAG,GAG7B,SAAS+uD,aAAazwD,EAAG0B,GACvB,OAAO8F,WAAIxH,EAAEgK,WAAYtI,EAAG,GAG9B,SAASgvD,aAAa1wD,EAAG0B,GACvB,OAAO8F,WAAIxH,EAAEgK,WAAa,IAAM,GAAItI,EAAG,GAGzC,SAASivD,gBAAgB3wD,EAAG0B,GAC1B,OAAO8F,WAAI,EAAIopD,QAAQliB,MAAMmiB,SAAS7wD,GAAIA,GAAI0B,EAAG,GAGnD,SAASovD,mBAAmB9wD,EAAG0B,GAC7B,OAAO8F,WAAIxH,EAAEyK,kBAAmB/I,EAAG,GAGrC,SAASqvD,mBAAmB/wD,EAAG0B,GAC7B,OAAOovD,mBAAmB9wD,EAAG0B,GAAK,MAGpC,SAASsvD,kBAAkBhxD,EAAG0B,GAC5B,OAAO8F,WAAIxH,EAAEiL,WAAa,EAAGvJ,EAAG,GAGlC,SAASuvD,cAAcjxD,EAAG0B,GACxB,OAAO8F,WAAIxH,EAAEqK,aAAc3I,EAAG,GAGhC,SAASwvD,cAAclxD,EAAG0B,GACxB,OAAO8F,WAAIxH,EAAEuK,aAAc7I,EAAG,GAGhC,SAASyvD,0BAA0BnxD,GACjC,IAAI2K,IAAM3K,EAAE4K,SACZ,OAAe,IAARD,IAAY,EAAIA,IAGzB,SAASymD,uBAAuBpxD,EAAG0B,GACjC,OAAO8F,WAAI6pD,OAAW3iB,MAAMmiB,SAAS7wD,GAAIA,GAAI0B,EAAG,GAGlD,SAAS4vD,oBAAoBtxD,EAAG0B,GAC9B,IAAIiJ,IAAM3K,EAAE4K,SAEZ,OADA5K,EAAK2K,KAAO,GAAa,IAARA,IAAa4mD,SAAavxD,GAAKuxD,SAAar9B,KAAKl0B,GAC3DwH,WAAI+pD,SAAa7iB,MAAMmiB,SAAS7wD,GAAIA,IAA+B,IAAzB6wD,SAAS7wD,GAAG4K,UAAiBlJ,EAAG,GAGnF,SAAS8vD,0BAA0BxxD,GACjC,OAAOA,EAAE4K,SAGX,SAAS6mD,uBAAuBzxD,EAAG0B,GACjC,OAAO8F,WAAIkqD,OAAWhjB,MAAMmiB,SAAS7wD,GAAIA,GAAI0B,EAAG,GAGlD,SAASiwD,kBAAW3xD,EAAG0B,GACrB,OAAO8F,WAAIxH,EAAE0L,cAAgB,IAAKhK,EAAG,GAGvC,SAASkwD,eAAe5xD,EAAG0B,GACzB,OAAO8F,WAAIxH,EAAE0L,cAAgB,IAAOhK,EAAG,GAGzC,SAASmwD,WAAW7xD,GAClB,IAAI2+C,EAAI3+C,EAAEurD,oBACV,OAAQ5M,EAAI,EAAI,KAAOA,IAAM,EAAG,MAC1Bn3C,WAAIm3C,EAAI,GAAK,EAAG,IAAK,GACrBn3C,WAAIm3C,EAAI,GAAI,IAAK,GAGzB,SAASmT,oBAAoB9xD,EAAG0B,GAC9B,OAAO8F,WAAIxH,EAAE6sD,aAAcnrD,EAAG,GAGhC,SAASqwD,gBAAgB/xD,EAAG0B,GAC1B,OAAO8F,WAAIxH,EAAEysD,cAAe/qD,EAAG,GAGjC,SAASswD,gBAAgBhyD,EAAG0B,GAC1B,OAAO8F,WAAIxH,EAAEysD,cAAgB,IAAM,GAAI/qD,EAAG,GAG5C,SAASuwD,mBAAmBjyD,EAAG0B,GAC7B,OAAO8F,WAAI,EAAIklD,WAAOhe,MAAMif,YAAQ3tD,GAAIA,GAAI0B,EAAG,GAGjD,SAASwwD,sBAAsBlyD,EAAG0B,GAChC,OAAO8F,WAAIxH,EAAEmyD,qBAAsBzwD,EAAG,GAGxC,SAAS0wD,sBAAsBpyD,EAAG0B,GAChC,OAAOwwD,sBAAsBlyD,EAAG0B,GAAK,MAGvC,SAAS2wD,qBAAqBryD,EAAG0B,GAC/B,OAAO8F,WAAIxH,EAAEytD,cAAgB,EAAG/rD,EAAG,GAGrC,SAAS4wD,iBAAiBtyD,EAAG0B,GAC3B,OAAO8F,WAAIxH,EAAEssD,gBAAiB5qD,EAAG,GAGnC,SAAS6wD,iBAAiBvyD,EAAG0B,GAC3B,OAAO8F,WAAIxH,EAAEorD,gBAAiB1pD,EAAG,GAGnC,SAAS8wD,6BAA6BxyD,GACpC,IAAIyyD,IAAMzyD,EAAE+sD,YACZ,OAAe,IAAR0F,IAAY,EAAIA,IAGzB,SAASC,0BAA0B1yD,EAAG0B,GACpC,OAAO8F,WAAIwlD,UAAUte,MAAMif,YAAQ3tD,GAAIA,GAAI0B,EAAG,GAGhD,SAASixD,uBAAuB3yD,EAAG0B,GACjC,IAAIiJ,IAAM3K,EAAE+sD,YAEZ,OADA/sD,EAAK2K,KAAO,GAAa,IAARA,IAAayiD,YAAYptD,GAAKotD,YAAYl5B,KAAKl0B,GACzDwH,WAAI4lD,YAAY1e,MAAMif,YAAQ3tD,GAAIA,IAAiC,IAA3B2tD,YAAQ3tD,GAAG+sD,aAAoBrrD,EAAG,GAGnF,SAASkxD,6BAA6B5yD,GACpC,OAAOA,EAAE+sD,YAGX,SAAS8F,0BAA0B7yD,EAAG0B,GACpC,OAAO8F,WAAIylD,UAAUve,MAAMif,YAAQ3tD,GAAIA,GAAI0B,EAAG,GAGhD,SAASoxD,cAAc9yD,EAAG0B,GACxB,OAAO8F,WAAIxH,EAAE0tD,iBAAmB,IAAKhsD,EAAG,GAG1C,SAASqxD,kBAAkB/yD,EAAG0B,GAC5B,OAAO8F,WAAIxH,EAAE0tD,iBAAmB,IAAOhsD,EAAG,GAG5C,SAASsxD,gBACP,MAAO,QAGT,SAASC,uBACP,MAAO,IAGT,SAASC,oBAAoBlzD,GAC3B,OAAQA,EAGV,SAASmzD,2BAA2BnzD,GAClC,OAAOwL,KAAK8N,OAAOtZ,EAAI,MC3mBV,SAASgpD,4BAAc1W,YAMpC,OALAwU,yBDea,SAASmC,aAAanC,QACnC,IAAIsM,gBAAkBtM,OAAOuM,SACzBC,YAAcxM,OAAOx/C,KACrBisD,YAAczM,OAAO0M,KACrBC,eAAiB3M,OAAO4M,QACxBC,gBAAkB7M,OAAO8M,KACzBC,qBAAuB/M,OAAOgN,UAC9BC,cAAgBjN,OAAOkN,OACvBC,mBAAqBnN,OAAOoN,YAE5BC,SAAWvF,SAAS6E,gBACpBW,aAAetF,aAAa2E,gBAC5BY,UAAYzF,SAAS+E,iBACrBW,cAAgBxF,aAAa6E,iBAC7BY,eAAiB3F,SAASiF,sBAC1BW,mBAAqB1F,aAAa+E,sBAClCY,QAAU7F,SAASmF,eACnBW,YAAc5F,aAAaiF,eAC3BY,aAAe/F,SAASqF,oBACxBW,iBAAmB9F,aAAamF,oBAEhCY,SACF/yD,EAkPF,SAASgzD,mBAAmB90D,GAC1B,OAAO6zD,qBAAqB7zD,EAAE4K,WAlP9BC,EAqPF,SAASkqD,cAAc/0D,GACrB,OAAO2zD,gBAAgB3zD,EAAE4K,WArPzBG,EAwPF,SAASiqD,iBAAiBh1D,GACxB,OAAOi0D,mBAAmBj0D,EAAEiL,aAxP5BC,EA2PF,SAAS+pD,YAAYj1D,GACnB,OAAO+zD,cAAc/zD,EAAEiL,aA3PvBlL,EAAK,KACLC,EAAKwwD,iBACL5uD,EAAK4uD,iBACL9tC,EAAKquC,mBACLpnD,EAAK8mD,aACLv7C,EAAKw7C,aACL3tC,EAAK4tC,gBACL7C,EAAKgD,mBACLhxD,EAAKkxD,kBACL5mD,EAAK6mD,cACLvvD,EAoPF,SAASwzD,aAAal1D,GACpB,OAAOyzD,iBAAiBzzD,EAAEgK,YAAc,MApPxCsmD,EAAK4C,oBACLvxD,EAAKwxD,2BACL7oD,EAAK4mD,cACL77C,EAAK87C,0BACLhC,EAAKiC,uBACL/B,EAAKiC,oBACLtC,EAAKwC,0BACLjC,EAAKkC,uBACLzrB,EAAK,KACLyhB,EAAK,KACLt8C,EAAKwmD,kBACL/lD,EAAKgmD,eACLjC,EAAKkC,WACLvK,IAAK2L,sBAGHkC,YACFrzD,EAsOF,SAASszD,sBAAsBp1D,GAC7B,OAAO6zD,qBAAqB7zD,EAAE+sD,cAtO9BliD,EAyOF,SAASwqD,iBAAiBr1D,GACxB,OAAO2zD,gBAAgB3zD,EAAE+sD,cAzOzBhiD,EA4OF,SAASuqD,oBAAoBt1D,GAC3B,OAAOi0D,mBAAmBj0D,EAAEytD,gBA5O5BviD,EA+OF,SAASqqD,eAAev1D,GACtB,OAAO+zD,cAAc/zD,EAAEytD,gBA/OvB1tD,EAAK,KACLC,EAAK8xD,oBACLlwD,EAAKkwD,oBACLpvC,EAAK0vC,sBACLzoD,EAAKooD,gBACL78C,EAAK88C,gBACLjvC,EAAKkvC,mBACLnE,EAAKoE,sBACLpyD,EAAKuyD,qBACLjoD,EAAKkoD,iBACL5wD,EAwOF,SAAS8zD,gBAAgBx1D,GACvB,OAAOyzD,iBAAiBzzD,EAAEysD,eAAiB,MAxO3C6D,EAAK4C,oBACLvxD,EAAKwxD,2BACL7oD,EAAKioD,iBACLl9C,EAAKm9C,6BACLrD,EAAKuD,0BACLrD,EAAKsD,uBACL3D,EAAK4D,6BACLrD,EAAKsD,0BACL7sB,EAAK,KACLyhB,EAAK,KACLt8C,EAAK2nD,cACLlnD,EAAKmnD,kBACLpD,EAAKqD,cACL1L,IAAK2L,sBAGHwC,QACF3zD,EAkJF,SAAS4zD,kBAAkB11D,EAAGmiD,OAAQziD,GACpC,IAAIyB,EAAIozD,eAAe9X,KAAK0F,OAAOn/B,MAAMtjB,IACzC,OAAOyB,GAAKnB,EAAEgvD,EAAIwF,mBAAmBrzD,EAAE,GAAGiI,eAAgB1J,EAAIyB,EAAE,GAAGkI,SAAW,GAnJ9EwB,EAsJF,SAAS8qD,aAAa31D,EAAGmiD,OAAQziD,GAC/B,IAAIyB,EAAIkzD,UAAU5X,KAAK0F,OAAOn/B,MAAMtjB,IACpC,OAAOyB,GAAKnB,EAAEgvD,EAAIsF,cAAcnzD,EAAE,GAAGiI,eAAgB1J,EAAIyB,EAAE,GAAGkI,SAAW,GAvJzE0B,EA0JF,SAAS6qD,gBAAgB51D,EAAGmiD,OAAQziD,GAClC,IAAIyB,EAAIwzD,aAAalY,KAAK0F,OAAOn/B,MAAMtjB,IACvC,OAAOyB,GAAKnB,EAAEF,EAAI80D,iBAAiBzzD,EAAE,GAAGiI,eAAgB1J,EAAIyB,EAAE,GAAGkI,SAAW,GA3J5E6B,EA8JF,SAAS2qD,WAAW71D,EAAGmiD,OAAQziD,GAC7B,IAAIyB,EAAIszD,QAAQhY,KAAK0F,OAAOn/B,MAAMtjB,IAClC,OAAOyB,GAAKnB,EAAEF,EAAI40D,YAAYvzD,EAAE,GAAGiI,eAAgB1J,EAAIyB,EAAE,GAAGkI,SAAW,GA/JvEtJ,EAkKF,SAAS+1D,oBAAoB91D,EAAGmiD,OAAQziD,GACtC,OAAOq2D,eAAe/1D,EAAGozD,gBAAiBjR,OAAQziD,IAlKlDM,EAAK6vD,gBACLjuD,EAAKiuD,gBACLntC,EAAKytC,kBACLxmD,EAAKomD,YACL76C,EAAK66C,YACLhtC,EAAK+sC,eACLhC,EAAKoC,kBACLpwD,EAAK8vD,iBACLxlD,EAAK4lD,aACLtuD,EA+HF,SAASs0D,YAAYh2D,EAAGmiD,OAAQziD,GAC9B,IAAIyB,EAAIgzD,SAAS1X,KAAK0F,OAAOn/B,MAAMtjB,IACnC,OAAOyB,GAAKnB,EAAE0B,EAAI0yD,aAAajzD,EAAE,GAAGiI,eAAgB1J,EAAIyB,EAAE,GAAGkI,SAAW,GAhIxEinD,EAAKD,mBACL1uD,EAAK4uD,0BACLjmD,EAAK2lD,aACL56C,EAAK45C,yBACLE,EAAKD,sBACLG,EAAKD,mBACLJ,EAAKD,yBACLQ,EAAKD,sBACLtpB,EAmJF,SAASiwB,gBAAgBj2D,EAAGmiD,OAAQziD,GAClC,OAAOq2D,eAAe/1D,EAAGszD,YAAanR,OAAQziD,IAnJ9C+nD,EAsJF,SAASyO,gBAAgBl2D,EAAGmiD,OAAQziD,GAClC,OAAOq2D,eAAe/1D,EAAGuzD,YAAapR,OAAQziD,IAtJ9CyL,EAAKskD,UACL7jD,EAAK4jD,cACLG,EAAKD,UACLpI,IAAK8I,qBAWP,SAAS7H,UAAUjC,UAAWuO,SAC5B,OAAO,SAASvtD,MACd,IAIIvH,EACAyH,IACAE,OANAy6C,UACAziD,GAAK,EACLqjB,EAAI,EACJ5hB,EAAImlD,UAAUj9C,OAOlB,IAFM/B,gBAAgBC,OAAOD,KAAO,IAAIC,MAAMD,SAErC5H,EAAIyB,GACqB,KAA5BmlD,UAAU9jC,WAAW9iB,KACvByiD,OAAOt0C,KAAKy4C,UAAUtjC,MAAMD,EAAGrjB,IACgB,OAA1C8H,IAAM6mD,KAAKtuD,EAAIumD,UAAU7e,SAAS/nC,KAAcK,EAAIumD,UAAU7e,SAAS/nC,GACvE8H,IAAY,MAANzH,EAAY,IAAM,KACzB2H,OAASmtD,QAAQ90D,MAAIA,EAAI2H,OAAOJ,KAAME,MAC1C26C,OAAOt0C,KAAK9N,GACZgjB,EAAIrjB,EAAI,GAKZ,OADAyiD,OAAOt0C,KAAKy4C,UAAUtjC,MAAMD,EAAGrjB,IACxByiD,OAAOz3C,KAAK,KAIvB,SAASyrD,SAAS7P,UAAW8P,SAC3B,OAAO,SAASjU,QACd,IAEIkU,KAAM1rD,IAFN3K,EAAIiuD,QAAQ,MAGhB,GAFQ8H,eAAe/1D,EAAGsmD,UAAWnE,QAAU,GAAI,IAE1CA,OAAO94C,OAAQ,OAAO,KAG/B,GAAI,MAAOrJ,EAAG,OAAO,IAAIuH,KAAKvH,EAAEswD,GAMhC,GAHI,MAAOtwD,IAAGA,EAAE2J,EAAI3J,EAAE2J,EAAI,GAAW,GAAN3J,EAAE0B,GAG7B,MAAO1B,EAAG,CACZ,GAAIA,EAAEqvD,EAAI,GAAKrvD,EAAEqvD,EAAI,GAAI,OAAO,KAC1B,MAAOrvD,IAAIA,EAAEgvD,EAAI,GACnB,MAAOhvD,GAETq2D,MAD8B1rD,KAA9B0rD,KAAOtI,QAAQE,QAAQjuD,EAAEmL,KAAgB4hD,aAC5B,GAAa,IAARpiD,IAAYsiD,UAAU/4B,KAAKmiC,MAAQpJ,UAAUoJ,MAC/DA,KAAO3J,WAAO5B,OAAOuL,KAAkB,GAAXr2D,EAAEqvD,EAAI,IAClCrvD,EAAEmL,EAAIkrD,KAAK3I,iBACX1tD,EAAEF,EAAIu2D,KAAK5I,cACXztD,EAAEA,EAAIq2D,KAAKxJ,cAAgB7sD,EAAEgvD,EAAI,GAAK,IAGtCqH,MAD8B1rD,KAA9B0rD,KAAOD,QAAQnI,QAAQjuD,EAAEmL,KAAgBP,UAC5B,GAAa,IAARD,IAAY+mD,OAAWx9B,KAAKmiC,MAAQ3E,OAAW2E,MACjEA,KAAOzF,QAAQ9F,OAAOuL,KAAkB,GAAXr2D,EAAEqvD,EAAI,IACnCrvD,EAAEmL,EAAIkrD,KAAK3qD,cACX1L,EAAEF,EAAIu2D,KAAKprD,WACXjL,EAAEA,EAAIq2D,KAAKvrD,WAAa9K,EAAEgvD,EAAI,GAAK,QAE5B,MAAOhvD,GAAK,MAAOA,KACtB,MAAOA,IAAIA,EAAEgvD,EAAI,MAAOhvD,EAAIA,EAAEqV,EAAI,EAAI,MAAOrV,EAAI,EAAI,GAC3D2K,IAAM,MAAO3K,EAAI+tD,QAAQE,QAAQjuD,EAAEmL,IAAI4hD,YAAcqJ,QAAQnI,QAAQjuD,EAAEmL,IAAIP,SAC3E5K,EAAEF,EAAI,EACNE,EAAEA,EAAI,MAAOA,GAAKA,EAAEgvD,EAAI,GAAK,EAAU,EAANhvD,EAAEuvD,GAAS5kD,IAAM,GAAK,EAAI3K,EAAEgvD,EAAU,EAANhvD,EAAEmvD,GAASxkD,IAAM,GAAK,GAKzF,MAAI,MAAO3K,GACTA,EAAE2J,GAAK3J,EAAE2vD,EAAI,IAAM,EACnB3vD,EAAEoK,GAAKpK,EAAE2vD,EAAI,IACN5B,QAAQ/tD,IAIVo2D,QAAQp2D,IAInB,SAAS+1D,eAAe/1D,EAAGsmD,UAAWnE,OAAQp/B,GAO5C,IANA,IAGIhjB,EACAqO,MAJA1O,EAAI,EACJyB,EAAImlD,UAAUj9C,OACdvJ,EAAIqiD,OAAO94C,OAIR3J,EAAIyB,GAAG,CACZ,GAAI4hB,GAAKjjB,EAAG,OAAQ,EAEpB,GAAU,MADVC,EAAIumD,UAAU9jC,WAAW9iB,OAIvB,GAFAK,EAAIumD,UAAU7e,OAAO/nC,OACrB0O,MAAQqnD,OAAO11D,KAAKsuD,KAAO/H,UAAU7e,OAAO/nC,KAAOK,MACnCgjB,EAAI3U,MAAMpO,EAAGmiD,OAAQp/B,IAAM,EAAI,OAAQ,OAClD,GAAIhjB,GAAKoiD,OAAO3/B,WAAWO,KAChC,OAAQ,EAIZ,OAAOA,EAgFT,OA1LA8xC,QAAQ7uB,EAAIuiB,UAAU+K,YAAauB,SACnCA,QAAQpN,EAAIc,UAAUgL,YAAasB,SACnCA,QAAQ90D,EAAIwoD,UAAU6K,gBAAiByB,SACvCM,WAAWnvB,EAAIuiB,UAAU+K,YAAa6B,YACtCA,WAAW1N,EAAIc,UAAUgL,YAAa4B,YACtCA,WAAWp1D,EAAIwoD,UAAU6K,gBAAiB+B,aAsLxCztD,OAAQ,SAAAA,OAAS4+C,WACf,IAAI5jC,EAAI6lC,UAAUjC,WAAa,GAAIuO,SAEnC,OADAnyC,EAAEzY,SAAW,WAAa,OAAOq8C,WAC1B5jC,GAETtU,MAAO,SAAAA,MAASk4C,WACd,IAAI5kD,EAAIy0D,SAAS7P,WAAa,GAAIuH,WAElC,OADAnsD,EAAEuI,SAAW,WAAa,OAAOq8C,WAC1B5kD,GAETysD,UAAW,SAAAA,UAAS7H,WAClB,IAAI5jC,EAAI6lC,UAAUjC,WAAa,GAAI6O,YAEnC,OADAzyC,EAAEzY,SAAW,WAAa,OAAOq8C,WAC1B5jC,GAET0rC,SAAU,SAAAA,SAAS9H,WACjB,IAAI5kD,EAAIy0D,SAAS7P,UAAWyH,SAE5B,OADArsD,EAAEuI,SAAW,WAAa,OAAOq8C,WAC1B5kD,IClVFunD,CAAa3W,YACtB4b,WAAapH,yBAAOp/C,OACRo/C,yBAAO14C,MACnB+/C,UAAYrH,yBAAOqH,UACnBC,SAAWtH,yBAAOsH,SACXtH,yBAjBTkC,EACEqK,SAAU,SACV/rD,KAAM,aACNksD,KAAM,eACNE,SAAU,KAAM,MAChBE,MAAO,SAAU,SAAU,UAAW,YAAa,WAAY,SAAU,YACzEE,WAAY,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,OACtDE,QAAS,UAAW,WAAY,QAAS,QAAS,MAAO,OAAQ,OAAQ,SAAU,YAAa,UAAW,WAAY,YACvHE,aAAc,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,SCR7E3sD,KAAK/F,UAAU80D,aAEzBnI,UARoB,0BCMV,IAAI5mD,KAAK,6BAEnB6mD,SDRoB,yBCM1B,ICAImI,oBAAiB,IACjBtL,oBAAkC,GAAjBsL,oBACjBC,kBAAgC,GAAjBvL,oBACfwL,iBAA6B,GAAfD,kBACdtL,kBAA6B,EAAduL,iBACfC,cAA8B,GAAdD,iBAChBE,aAA6B,IAAdF,iBAEnB,SAASnvD,UAAK1G,GACZ,OAAO,IAAI2G,KAAK3G,GAGlB,SAASqtC,YAAOrtC,GACd,OAAOA,aAAa2G,MAAQ3G,GAAK,IAAI2G,MAAM3G,GAGtC,SAASg2D,SAASjrD,KAAMX,MAAOqrD,KAAM1rD,IAAK2gD,KAAMD,OAAQF,OAAQH,YAAatjD,QAClF,IAAIqpC,MAAQhxB,WAAWolC,oBAAeC,YAClCrT,OAAShB,MAAMgB,OACfpzB,OAASoyB,MAAMpyB,OAEfk4C,kBAAoBnvD,OAAO,OAC3BovD,aAAepvD,OAAO,OACtBqvD,aAAervD,OAAO,SACtBsvD,WAAatvD,OAAO,SACpBuvD,UAAYvvD,OAAO,SACnBwvD,WAAaxvD,OAAO,SACpButD,YAAcvtD,OAAO,MACrBiqD,WAAajqD,OAAO,MAEpByvD,gBACDhM,OAAS,EAAQoL,sBACjBpL,OAAS,EAAI,EAAIoL,sBACjBpL,OAAQ,GAAI,GAAKoL,sBACjBpL,OAAQ,GAAI,GAAKoL,sBACjBlL,OAAS,EAAQJ,sBACjBI,OAAS,EAAI,EAAIJ,sBACjBI,OAAQ,GAAI,GAAKJ,sBACjBI,OAAQ,GAAI,GAAKJ,sBACfK,KAAO,EAAQkL,oBACflL,KAAO,EAAI,EAAIkL,oBACflL,KAAO,EAAI,EAAIkL,oBACflL,KAAM,GAAI,GAAKkL,oBACd7rD,IAAM,EAAQ8rD,mBACd9rD,IAAM,EAAI,EAAI8rD,mBACfJ,KAAO,EAAQnL,oBAChBlgD,MAAQ,EAAQ0rD,gBAChB1rD,MAAQ,EAAI,EAAI0rD,gBACf/qD,KAAO,EAAQgrD,eAGpB,SAASpN,WAAWjiD,MAClB,OAAQ6jD,OAAO7jD,MAAQA,KAAOuvD,kBACxBxL,OAAO/jD,MAAQA,KAAOwvD,aACtBxL,KAAKhkD,MAAQA,KAAOyvD,aACpBpsD,IAAIrD,MAAQA,KAAO0vD,WACnBhsD,MAAM1D,MAAQA,KAAQ+uD,KAAK/uD,MAAQA,KAAO2vD,UAAYC,WACtDvrD,KAAKrE,MAAQA,KAAO2tD,YACpBtD,YAAYrqD,MAGpB,SAAS8vD,aAAa3N,SAAUrkD,MAAOgpC,KAAMC,MAM3C,GALgB,MAAZob,WAAkBA,SAAW,IAKT,iBAAbA,SAAuB,CAChC,IAAIjE,OAASh6C,KAAK2oB,IAAIia,KAAOhpC,OAASqkD,SAClC/pD,EAAIguC,SAAS,SAAShuC,GAAK,OAAOA,EAAE,KAAOouC,MAAMqpB,cAAe3R,QAChE9lD,IAAMy3D,cAAc9tD,QACtBglC,KAAOW,SAAS5pC,MAAQuxD,aAAcvoB,KAAOuoB,aAAclN,UAC3DA,SAAW99C,MACFjM,GAET2uC,MADA3uC,EAAIy3D,cAAc3R,OAAS2R,cAAcz3D,EAAI,GAAG,GAAKy3D,cAAcz3D,GAAG,GAAK8lD,OAAS9lD,EAAI,EAAIA,IACnF,GACT+pD,SAAW/pD,EAAE,KAEb2uC,KAAO7iC,KAAK8Q,IAAI0yB,SAAS5pC,MAAOgpC,KAAMqb,UAAW,GACjDA,SAAWuB,aAIf,OAAe,MAAR3c,KAAeob,SAAWA,SAAShjC,MAAM4nB,MAsClD,OAnCA0C,MAAMgB,OAAS,SAAS5mC,GACtB,OAAO,IAAI5D,KAAKwqC,OAAO5mC,KAGzB4lC,MAAMpyB,OAAS,SAASyK,GACtB,OAAOrc,UAAU1D,OAASsV,OAAO/O,cAAI/P,KAAKupB,EAAG6kB,cAAWtvB,SAAS/O,IAAItI,YAGvEypC,MAAMpC,MAAQ,SAAS8a,SAAUpb,MAC/B,IAIIztC,EAJAZ,EAAI2e,SACJu/B,GAAKl+C,EAAE,GACPm+C,GAAKn+C,EAAEA,EAAEqJ,OAAS,GAClB7I,EAAI29C,GAAKD,GAKb,OAHI19C,IAAGI,EAAIs9C,GAAIA,GAAKC,GAAIA,GAAKv9C,GAE7BA,GADAA,EAAIw2D,aAAa3N,SAAUvL,GAAIC,GAAI9P,OAC3BztC,EAAEsI,MAAMg1C,GAAIC,GAAK,MAClB39C,EAAII,EAAE4rB,UAAY5rB,GAG3BmwC,MAAMwY,WAAa,SAAS7a,MAAO4X,WACjC,OAAoB,MAAbA,UAAoBiD,WAAa7hD,OAAO4+C,YAGjDvV,MAAMyY,KAAO,SAASC,SAAUpb,MAC9B,IAAIruC,EAAI2e,SACR,OAAQ8qC,SAAW2N,aAAa3N,SAAUzpD,EAAE,GAAIA,EAAEA,EAAEqJ,OAAS,GAAIglC,OAC3D1vB,OAAO6qC,KAAKxpD,EAAGypD,WACf1Y,OAGRA,MAAMC,KAAO,WACX,OAAOA,KAAKD,MAAO6lB,SAASjrD,KAAMX,MAAOqrD,KAAM1rD,IAAK2gD,KAAMD,OAAQF,OAAQH,YAAatjD,UAGlFqpC,MAGM,IAAAsmB,SAAA,WACb,OAAOT,SAAS/F,SAAUyG,UAAWC,OAAU3G,QAAS4G,SAAUC,WAAYC,WAAYC,gBAAiBzJ,YAAYvvC,QAAQ,IAAIpX,KAAK,IAAM,EAAG,GAAI,IAAIA,KAAK,IAAM,EAAG,MCrI1JqwD,WAAA,SAASj2D,GACtB,OAAOA,EAAEqO,MAAM,SAASJ,IAAI,SAASo2B,GACnC,MAAO,IAAMA,KCAFgb,sBAAO,gECAPA,uBAAO,4HCAPA,YCAAA,WAAO,4HDAPA,WAAO,6HECP6W,cAAyBpY,oBAAU,IAAK,GAAK,GAAMA,qBAAW,IAAK,GAAK,ICArEoY,cAAyBpY,qBAAW,IAAK,IAAM,KAAOA,oBAAU,GAAI,IAAM,KAE1EoY,cAAyBpY,oBAAU,IAAK,IAAM,KAAOA,oBAAU,GAAI,IAAM,KAE7EA,sBCLd,SAASqY,KAAK5uD,OACZ,IAAI/H,EAAI+H,MAAMG,OACd,OAAO,SAASzI,GACd,OAAOsI,MAAMsC,KAAK8Q,IAAI,EAAG9Q,KAAK6Q,IAAIlb,EAAI,EAAGqK,KAAK8N,MAAM1Y,EAAIO,OAI7C22D,KAAK9W,WAAO,qgDAER8W,KAAK9W,WAAO,qgDAEV8W,KAAK9W,WAAO,qgDAEb8W,KAAK9W,WAAO,qgDCbjB,SAAS+W,WAAWC,cACjC,IAAItO,GAAK,EACLC,GAAK,EACLlE,OAAQ,EAEZ,SAAS1U,MAAM/K,GACb,IAAIplC,GAAKolC,EAAI0jB,KAAOC,GAAKD,IACzB,OAAOsO,aAAavS,MAAQj6C,KAAK8Q,IAAI,EAAG9Q,KAAK6Q,IAAI,EAAGzb,IAAMA,GAmB5D,OAhBAmwC,MAAMpyB,OAAS,SAASyK,GACtB,OAAOrc,UAAU1D,QAAUqgD,IAAMtgC,EAAE,GAAIugC,IAAMvgC,EAAE,GAAI2nB,QAAU2Y,GAAIC,KAGnE5Y,MAAM0U,MAAQ,SAASr8B,GACrB,OAAOrc,UAAU1D,QAAUo8C,QAAUr8B,EAAG2nB,OAAS0U,OAGnD1U,MAAMinB,aAAe,SAAS5uC,GAC5B,OAAOrc,UAAU1D,QAAU2uD,aAAe5uC,EAAG2nB,OAASinB,cAGxDjnB,MAAMC,KAAO,WACX,OAAO+mB,WAAWC,cAAcr5C,QAAQ+qC,GAAIC,KAAKlE,MAAMA,QAGlD6D,UAAUvY,OC5BJ,IAAAknB,8BAAA,SAAS3R,WAEtB,IADA,IAAInlD,EAAImlD,UAAUj9C,OAAS,EAAI,EAAG23C,OAAS,IAAIxwC,MAAMrP,GAAIzB,EAAI,EACtDA,EAAIyB,GAAG6/C,OAAOthD,GAAK,IAAM4mD,UAAUtjC,MAAU,EAAJtjB,EAAa,IAAJA,GACzD,OAAOshD,QCDMA,QCAAA,8BAAO,gEDAPA,8BAAO,qDEAPA,oCAAO,oDCAPA,qCAAO,4ECAPA,sCAAO,0DCAPA,sCAAO,oDCAPA,mCAAO,0DCAPA,mCAAO,oDCAPA,mCAAO,4ECAPkX,SAAA,SAASC,QACtB,OAAOC,SAAoBD,OAAOA,OAAO9uD,OAAS,KCAzC8uD,YAAS,IAAI3nD,MAAM,GAAG+S,OAC/B,qBACA,2BACA,iCACA,uCACA,6CACA,mDACA,yDACA,+DACA,sEACA3T,IAAIoxC,+BAES8W,cAAKK,aCZTA,YAAS,IAAI3nD,MAAM,GAAG+S,OAC/B,qBACA,2BACA,iCACA,uCACA,6CACA,mDACA,yDACA,+DACA,sEACA3T,IAAIoxC,+BAES8W,cAAKK,aCZTA,YAAS,IAAI3nD,MAAM,GAAG+S,OAC/B,qBACA,2BACA,iCACA,uCACA,6CACA,mDACA,yDACA,+DACA,sEACA3T,IAAIoxC,+BAES8W,cAAKK,aCALL,cAZK,IAAItnD,MAAM,GAAG+S,OAC/B,qBACA,2BACA,iCACA,uCACA,6CACA,mDACA,yDACA,+DACA,sEACA3T,IAAIoxC,gCCES8W,cAZK,IAAItnD,MAAM,GAAG+S,OAC/B,qBACA,2BACA,iCACA,uCACA,6CACA,mDACA,yDACA,+DACA,sEACA3T,IAAIoxC,gCCES8W,cAZK,IAAItnD,MAAM,GAAG+S,OAC/B,qBACA,2BACA,iCACA,uCACA,6CACA,mDACA,yDACA,+DACA,sEACA3T,IAAIoxC,gCCES8W,gBAZK,IAAItnD,MAAM,GAAG+S,OAC/B,qBACA,2BACA,iCACA,uCACA,6CACA,mDACA,yDACA,+DACA,sEACA3T,IAAIoxC,gCCES8W,gBAZK,IAAItnD,MAAM,GAAG+S,OAC/B,qBACA,2BACA,iCACA,uCACA,6CACA,mDACA,yDACA,+DACA,sEACA3T,IAAIoxC,gCCES8W,kBAZK,IAAItnD,MAAM,GAAG+S,OAC/B,qBACA,2BACA,iCACA,uCACA,6CACA,mDACA,yDACA,+DACA,sEACA3T,IAAIoxC,gCCAS8W,cAVK,IAAItnD,MAAM,GAAG+S,OAC/B,qBACA,2BACA,iCACA,uCACA,6CACA,mDACA,0DACA3T,IAAIoxC,gCCES8W,cAVK,IAAItnD,MAAM,GAAG+S,OAC/B,qBACA,2BACA,iCACA,uCACA,6CACA,mDACA,0DACA3T,IAAIoxC,gCCES8W,cAVK,IAAItnD,MAAM,GAAG+S,OAC/B,qBACA,2BACA,iCACA,uCACA,6CACA,mDACA,0DACA3T,IAAIoxC,gCCES8W,cAVK,IAAItnD,MAAM,GAAG+S,OAC/B,qBACA,2BACA,iCACA,uCACA,6CACA,mDACA,0DACA3T,IAAIoxC,gCCES8W,gBAVK,IAAItnD,MAAM,GAAG+S,OAC/B,qBACA,2BACA,iCACA,uCACA,6CACA,mDACA,0DACA3T,IAAIoxC,gCCES8W,cAVK,IAAItnD,MAAM,GAAG+S,OAC/B,qBACA,2BACA,iCACA,uCACA,6CACA,mDACA,0DACA3T,IAAIoxC,gCCES8W,cAVK,I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","file":"muze.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"muze\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"muze\"] = factory();\n\telse\n\t\troot[\"muze\"] = factory();\n})(window, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 7);\n","(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"DataModel\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"DataModel\"] = factory();\n\telse\n\t\troot[\"DataModel\"] = factory();\n})(window, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 1);\n","const DataModel = require('./export');\n\nmodule.exports = DataModel.default ? DataModel.default : DataModel;\n","/**\n * DataFormat Enum defines the format of the input data.\n * Based on the format of the data the respective adapter is loaded.\n *\n * @readonly\n * @enum {string}\n */\nconst DataFormat = {\n    FLAT_JSON: 'FlatJSON',\n    DSV_STR: 'DSVStr',\n    DSV_ARR: 'DSVArr',\n    AUTO: 'Auto'\n};\n\nexport default DataFormat;\n","/**\n * DimensionSubtype enum defines the sub types of the Dimensional Field.\n *\n * @readonly\n * @enum {string}\n */\nconst DimensionSubtype = {\n    CATEGORICAL: 'categorical',\n    TEMPORAL: 'temporal',\n    GEO: 'geo',\n    BINNED: 'binned'\n};\n\nexport default DimensionSubtype;\n","/**\n * MeasureSubtype enum defines the sub types of the Measure Field.\n *\n * @readonly\n * @enum {string}\n */\nconst MeasureSubtype = {\n    CONTINUOUS: 'continuous'\n};\n\nexport default MeasureSubtype;\n","/**\n * FieldType enum defines the high level field based on which visuals are controlled.\n * Measure in a high level is numeric field and Dimension in a high level is string field.\n *\n * @readonly\n * @enum {string}\n */\nconst FieldType = {\n    MEASURE: 'measure',\n    DIMENSION: 'dimension'\n};\n\nexport default FieldType;\n","/**\n * Filtering mode enum defines the filering modes of DataModel.\n *\n * @readonly\n * @enum {string}\n */\nconst FilteringMode = {\n    NORMAL: 'normal',\n    INVERSE: 'inverse',\n    ALL: 'all'\n};\n\nexport default FilteringMode;\n","/**\n * Group by function names\n *\n * @readonly\n * @enum {string}\n */\nconst GROUP_BY_FUNCTIONS = {\n    SUM: 'sum',\n    AVG: 'avg',\n    MIN: 'min',\n    MAX: 'max',\n    FIRST: 'first',\n    LAST: 'last',\n    COUNT: 'count',\n    STD: 'std'\n};\n\nexport default GROUP_BY_FUNCTIONS;\n","/**\n * Creates a JS native date object from input\n *\n * @param {string | number | Date} date Input using which date object to be created\n * @return {Date} : JS native date object\n */\nfunction convertToNativeDate (date) {\n    if (date instanceof Date) {\n        return date;\n    }\n\n    return new Date(date);\n}\n/**\n * Apply padding before a number if its less than 1o. This is used when constant digit's number to be returned\n * between 0 - 99\n *\n * @param {number} n Input to be padded\n * @return {string} Padded number\n */\nfunction pad (n) {\n    return (n < 10) ? (`0${n}`) : n;\n}\n/*\n * DateFormatter utility to convert any date format to any other date format\n * DateFormatter parse a date time stamp specified by a user abiding by rules which are defined\n * by user in terms of token. It creates JS native date object from the user specified format.\n * That native date can also be displayed\n * in any specified format.\n * This utility class only takes care of format conversion only\n */\n\n/*\n * Escapes all the special character that are used in regular expression.\n * Like\n * RegExp.escape('sgfd-$') // Output: sgfd\\-\\$\n *\n * @param text {String} : text which is to be escaped\n */\nRegExp.escape = function (text) {\n    return text.replace(/[-[\\]{}()*+?.,\\\\^$|#\\s]/g, '\\\\$&');\n};\n\n/**\n * DateTimeFormatter class to convert any user format of date time stamp to any other format\n * of date time stamp.\n *\n * @param {string} format Format of the date given. For the above date,\n * 'year: %Y, month: %b, day: %d'.\n * @class\n */\n/* istanbul ignore next */ function DateTimeFormatter (format) {\n    this.format = format;\n    this.dtParams = undefined;\n    this.nativeDate = undefined;\n}\n\n// The identifier of the tokens\nDateTimeFormatter.TOKEN_PREFIX = '%';\n\n// JS native Date constructor takes the date params (year, month, etc) in a certail sequence.\n// This defines the sequence of the date parameters in the constructor.\nDateTimeFormatter.DATETIME_PARAM_SEQUENCE = {\n    YEAR: 0,\n    MONTH: 1,\n    DAY: 2,\n    HOUR: 3,\n    MINUTE: 4,\n    SECOND: 5,\n    MILLISECOND: 6\n};\n\n/*\n * This is a default number parsing utility. It tries to parse a number in integer, if parsing is unsuccessful, it\n * gives back a default value.\n *\n * @param: defVal {Number} : Default no if the parsing to integer is not successful\n * @return {Function} : An closure function which is to be called by passing an the value which needs to be parsed.\n */\nDateTimeFormatter.defaultNumberParser = function (defVal) {\n    return function (val) {\n        let parsedVal;\n        if (isFinite(parsedVal = parseInt(val, 10))) {\n            return parsedVal;\n        }\n\n        return defVal;\n    };\n};\n\n/*\n * This is a default number range utility. It tries to find an element in the range. If not found it returns a\n * default no as an index.\n *\n * @param: range {Array} : The list which is to be serached\n * @param: defVal {Number} : Default no if the serach and find does not return anything\n * @return {Function} : An closure function which is to be called by passing an the value which needs to be found\n */\nDateTimeFormatter.defaultRangeParser = function (range, defVal) {\n    return (val) => {\n        let i;\n        let l;\n\n        if (!val) { return defVal; }\n\n        const nVal = val.toLowerCase();\n\n        for (i = 0, l = range.length; i < l; i++) {\n            if (range[i].toLowerCase() === nVal) {\n                return i;\n            }\n        }\n\n        if (i === undefined) {\n            return defVal;\n        }\n        return null;\n    };\n};\n\n/*\n * Defines the tokens which are supporter by the dateformatter. Using this definitation a value gets extracted from\n * the user specifed date string. This also formats the value for display purpose from native JS date.\n * The definition of each token contains the following named properties\n * {\n *     %token_name% : {\n *         name: name of the token, this is used in reverse lookup,\n *         extract: a function that returns the regular expression to extract that piece of information. All the\n *                  regex should be gouped by using ()\n *         parser: a function which receives value extracted by the above regex and parse it to get the date params\n *         formatter: a formatter function that takes milliseconds or JS Date object and format the param\n *                  represented by the token only.\n *     }\n * }\n *\n * @return {Object} : Definition of the all the supported tokens.\n */\nDateTimeFormatter.getTokenDefinitions = function () {\n    const daysDef = {\n        short: [\n            'Sun',\n            'Mon',\n            'Tue',\n            'Wed',\n            'Thu',\n            'Fri',\n            'Sat'\n        ],\n        long: [\n            'Sunday',\n            'Monday',\n            'Tuesday',\n            'Wednesday',\n            'Thursday',\n            'Friday',\n            'Saturday'\n        ]\n    };\n    const monthsDef = {\n        short: [\n            'Jan',\n            'Feb',\n            'Mar',\n            'Apr',\n            'May',\n            'Jun',\n            'Jul',\n            'Aug',\n            'Sep',\n            'Oct',\n            'Nov',\n            'Dec'\n        ],\n        long: [\n            'January',\n            'February',\n            'March',\n            'April',\n            'May',\n            'June',\n            'July',\n            'August',\n            'September',\n            'October',\n            'November',\n            'December'\n        ]\n    };\n\n    const definitions = {\n        H: {\n            // 24 hours format\n            name: 'H',\n            index: 3,\n            extract () { return '(\\\\d+)'; },\n            parser: DateTimeFormatter.defaultNumberParser(),\n            formatter (val) {\n                const d = convertToNativeDate(val);\n\n                return d.getHours().toString();\n            }\n        },\n        l: {\n            // 12 hours format\n            name: 'l',\n            index: 3,\n            extract () { return '(\\\\d+)'; },\n            parser: DateTimeFormatter.defaultNumberParser(),\n            formatter (val) {\n                const d = convertToNativeDate(val);\n                const hours = d.getHours() % 12;\n\n                return (hours === 0 ? 12 : hours).toString();\n            }\n        },\n        p: {\n            // AM or PM\n            name: 'p',\n            index: 3,\n            extract () { return '(AM|PM)'; },\n            parser: (val) => {\n                if (val) {\n                    return val.toLowerCase();\n                }\n                return null;\n            },\n            formatter: (val) => {\n                const d = convertToNativeDate(val);\n                const hours = d.getHours();\n\n                return (hours < 12 ? 'AM' : 'PM');\n            }\n        },\n        P: {\n            // am or pm\n            name: 'P',\n            index: 3,\n            extract () { return '(am|pm)'; },\n            parser: (val) => {\n                if (val) {\n                    return val.toLowerCase();\n                }\n                return null;\n            },\n            formatter: (val) => {\n                const d = convertToNativeDate(val);\n                const hours = d.getHours();\n\n                return (hours < 12 ? 'am' : 'pm');\n            }\n        },\n        M: {\n            // Two digit minutes 00 - 59\n            name: 'M',\n            index: 4,\n            extract () { return '(\\\\d+)'; },\n            parser: DateTimeFormatter.defaultNumberParser(),\n            formatter (val) {\n                const d = convertToNativeDate(val);\n                const mins = d.getMinutes();\n\n                return pad(mins);\n            }\n        },\n        S: {\n            // Two digit seconds 00 - 59\n            name: 'S',\n            index: 5,\n            extract () { return '(\\\\d+)'; },\n            parser: DateTimeFormatter.defaultNumberParser(),\n            formatter (val) {\n                const d = convertToNativeDate(val);\n                const seconds = d.getSeconds();\n\n                return pad(seconds);\n            }\n        },\n        K: {\n            // Milliseconds\n            name: 'K',\n            index: 6,\n            extract () { return '(\\\\d+)'; },\n            parser: DateTimeFormatter.defaultNumberParser(),\n            formatter (val) {\n                const d = convertToNativeDate(val);\n                const ms = d.getMilliseconds();\n\n                return ms.toString();\n            }\n        },\n        a: {\n            // Short name of day, like Mon\n            name: 'a',\n            index: 2,\n            extract () { return `(${daysDef.short.join('|')})`; },\n            parser: DateTimeFormatter.defaultRangeParser(daysDef.short),\n            formatter (val) {\n                const d = convertToNativeDate(val);\n                const day = d.getDay();\n\n                return (daysDef.short[day]).toString();\n            }\n        },\n        A: {\n            // Long name of day, like Monday\n            name: 'A',\n            index: 2,\n            extract () { return `(${daysDef.long.join('|')})`; },\n            parser: DateTimeFormatter.defaultRangeParser(daysDef.long),\n            formatter (val) {\n                const d = convertToNativeDate(val);\n                const day = d.getDay();\n\n                return (daysDef.long[day]).toString();\n            }\n        },\n        e: {\n            // 8 of March, 11 of November\n            name: 'e',\n            index: 2,\n            extract () { return '(\\\\d+)'; },\n            parser: DateTimeFormatter.defaultNumberParser(),\n            formatter (val) {\n                const d = convertToNativeDate(val);\n                const day = d.getDate();\n\n                return day.toString();\n            }\n        },\n        d: {\n            // 08 of March, 11 of November\n            name: 'd',\n            index: 2,\n            extract () { return '(\\\\d+)'; },\n            parser: DateTimeFormatter.defaultNumberParser(),\n            formatter (val) {\n                const d = convertToNativeDate(val);\n                const day = d.getDate();\n\n                return pad(day);\n            }\n        },\n        b: {\n            // Short month, like Jan\n            name: 'b',\n            index: 1,\n            extract () { return `(${monthsDef.short.join('|')})`; },\n            parser: DateTimeFormatter.defaultRangeParser(monthsDef.short),\n            formatter (val) {\n                const d = convertToNativeDate(val);\n                const month = d.getMonth();\n\n                return (monthsDef.short[month]).toString();\n            }\n        },\n        B: {\n            // Long month, like January\n            name: 'B',\n            index: 1,\n            extract () { return `(${monthsDef.long.join('|')})`; },\n            parser: DateTimeFormatter.defaultRangeParser(monthsDef.long),\n            formatter (val) {\n                const d = convertToNativeDate(val);\n                const month = d.getMonth();\n\n                return (monthsDef.long[month]).toString();\n            }\n        },\n        m: {\n            // Two digit month of year like 01 for January\n            name: 'm',\n            index: 1,\n            extract () { return '(\\\\d+)'; },\n            parser (val) { return DateTimeFormatter.defaultNumberParser()(val) - 1; },\n            formatter (val) {\n                const d = convertToNativeDate(val);\n                const month = d.getMonth();\n\n                return pad(month + 1);\n            }\n        },\n        y: {\n            // Short year like 90 for 1990\n            name: 'y',\n            index: 0,\n            extract () { return '(\\\\d{2})'; },\n            parser (val) {\n                let result;\n                if (val) {\n                    const l = val.length;\n                    val = val.substring(l - 2, l);\n                }\n                let parsedVal = DateTimeFormatter.defaultNumberParser()(val);\n                let presentDate = new Date();\n                let presentYear = Math.trunc((presentDate.getFullYear()) / 100);\n\n                result = `${presentYear}${parsedVal}`;\n\n                if (convertToNativeDate(result).getFullYear() > presentDate.getFullYear()) {\n                    result = `${presentYear - 1}${parsedVal}`;\n                }\n                return convertToNativeDate(result).getFullYear();\n            },\n            formatter (val) {\n                const d = convertToNativeDate(val);\n                let year = d.getFullYear().toString();\n                let l;\n\n                if (year) {\n                    l = year.length;\n                    year = year.substring(l - 2, l);\n                }\n\n                return year;\n            }\n        },\n        Y: {\n            // Long year like 1990\n            name: 'Y',\n            index: 0,\n            extract () { return '(\\\\d{4})'; },\n            parser: DateTimeFormatter.defaultNumberParser(),\n            formatter (val) {\n                const d = convertToNativeDate(val);\n                const year = d.getFullYear().toString();\n\n                return year;\n            }\n        }\n    };\n\n    return definitions;\n};\n\n/*\n * The tokens which works internally is not user friendly in terms of memorizing the names. This gives a formal\n * definition to the informal notations.\n *\n * @return {Object} : Formal definition of the tokens\n */\nDateTimeFormatter.getTokenFormalNames = function () {\n    const definitions = DateTimeFormatter.getTokenDefinitions();\n\n    return {\n        HOUR: definitions.H,\n        HOUR_12: definitions.l,\n        AMPM_UPPERCASE: definitions.p,\n        AMPM_LOWERCASE: definitions.P,\n        MINUTE: definitions.M,\n        SECOND: definitions.S,\n        SHORT_DAY: definitions.a,\n        LONG_DAY: definitions.A,\n        DAY_OF_MONTH: definitions.e,\n        DAY_OF_MONTH_CONSTANT_WIDTH: definitions.d,\n        SHORT_MONTH: definitions.b,\n        LONG_MONTH: definitions.B,\n        MONTH_OF_YEAR: definitions.m,\n        SHORT_YEAR: definitions.y,\n        LONG_YEAR: definitions.Y\n    };\n};\n\n/*\n * This defines the rules and declares dependencies that resolves a date parameter (year, month etc) from\n * the date time parameter array.\n *\n * @return {Object} : An object that contains dependencies and a resolver function. The dependencies values are fed\n *                  to the resolver function in that particular sequence only.\n */\nDateTimeFormatter.tokenResolver = function () {\n    const definitions = DateTimeFormatter.getTokenDefinitions();\n    const defaultResolver = (...args) => { // eslint-disable-line require-jsdoc\n        let i = 0;\n        let arg;\n        let targetParam;\n        const l = args.length;\n\n        for (; i < l; i++) {\n            arg = args[i];\n            if (args[i]) {\n                targetParam = arg;\n            }\n        }\n\n        if (!targetParam) { return null; }\n\n        return targetParam[0].parser(targetParam[1]);\n    };\n\n    return {\n        YEAR: [definitions.y, definitions.Y,\n            defaultResolver\n        ],\n        MONTH: [definitions.b, definitions.B, definitions.m,\n            defaultResolver\n        ],\n        DAY: [definitions.a, definitions.A, definitions.e, definitions.d,\n            defaultResolver\n        ],\n        HOUR: [definitions.H, definitions.l, definitions.p, definitions.P,\n            function (hourFormat24, hourFormat12, ampmLower, ampmUpper) {\n                let targetParam;\n                let amOrpm;\n                let isPM;\n                let val;\n\n                if (hourFormat12 && (amOrpm = (ampmLower || ampmUpper))) {\n                    if (amOrpm[0].parser(amOrpm[1]) === 'pm') {\n                        isPM = true;\n                    }\n\n                    targetParam = hourFormat12;\n                } else if (hourFormat12) {\n                    targetParam = hourFormat12;\n                } else {\n                    targetParam = hourFormat24;\n                }\n\n                if (!targetParam) { return null; }\n\n                val = targetParam[0].parser(targetParam[1]);\n                if (isPM) {\n                    val += 12;\n                }\n                return val;\n            }\n        ],\n        MINUTE: [definitions.M,\n            defaultResolver\n        ],\n        SECOND: [definitions.S,\n            defaultResolver\n        ]\n    };\n};\n\n/*\n * Finds token from the format rule specified by a user.\n * @param format {String} : The format of the input date specified by the user\n * @return {Array} : An array of objects which contains the available token and their occurence index in the format\n */\nDateTimeFormatter.findTokens = function (format) {\n    const tokenPrefix = DateTimeFormatter.TOKEN_PREFIX;\n    const definitions = DateTimeFormatter.getTokenDefinitions();\n    const tokenLiterals = Object.keys(definitions);\n    const occurrence = [];\n    let i;\n    let forwardChar;\n\n    while ((i = format.indexOf(tokenPrefix, i + 1)) >= 0) {\n        forwardChar = format[i + 1];\n        if (tokenLiterals.indexOf(forwardChar) === -1) { continue; }\n\n        occurrence.push({\n            index: i,\n            token: forwardChar\n        });\n    }\n\n    return occurrence;\n};\n\n/*\n * Format any JS date to a specified date given by user.\n *\n * @param date {Number | Date} : The date object which is to be formatted\n * @param format {String} : The format using which the date will be formatted for display\n */\nDateTimeFormatter.formatAs = function (date, format) {\n    const nDate = convertToNativeDate(date);\n    const occurrence = DateTimeFormatter.findTokens(format);\n    const definitions = DateTimeFormatter.getTokenDefinitions();\n    let formattedStr = String(format);\n    const tokenPrefix = DateTimeFormatter.TOKEN_PREFIX;\n    let token;\n    let formattedVal;\n    let i;\n    let l;\n\n    for (i = 0, l = occurrence.length; i < l; i++) {\n        token = occurrence[i].token;\n        formattedVal = definitions[token].formatter(nDate);\n        formattedStr = formattedStr.replace(new RegExp(tokenPrefix + token, 'g'), formattedVal);\n    }\n\n    return formattedStr;\n};\n\n/*\n * Parses the user specified date string to extract the date time params.\n *\n * @return {Array} : Value of date time params in an array [year, month, day, hour, minutes, seconds, milli]\n */\nDateTimeFormatter.prototype.parse = function (dateTimeStamp, options) {\n    const tokenResolver = DateTimeFormatter.tokenResolver();\n    const dtParams = this.extractTokenValue(dateTimeStamp);\n    const dtParamSeq = DateTimeFormatter.DATETIME_PARAM_SEQUENCE;\n    const noBreak = options && options.noBreak;\n    const dtParamArr = [];\n    const args = [];\n    let resolverKey;\n    let resolverParams;\n    let resolverFn;\n    let val;\n    let i;\n    let param;\n    let resolvedVal;\n    let l;\n    let result = [];\n\n    for (resolverKey in tokenResolver) {\n        if (!{}.hasOwnProperty.call(tokenResolver, resolverKey)) { continue; }\n\n        args.length = 0;\n        resolverParams = tokenResolver[resolverKey];\n        resolverFn = resolverParams.splice(resolverParams.length - 1, 1)[0];\n\n        for (i = 0, l = resolverParams.length; i < l; i++) {\n            param = resolverParams[i];\n            val = dtParams[param.name];\n\n            if (val === undefined) {\n                args.push(null);\n            } else {\n                args.push([param, val]);\n            }\n        }\n\n        resolvedVal = resolverFn.apply(this, args);\n\n        if ((resolvedVal === undefined || resolvedVal === null) && !noBreak) {\n            break;\n        }\n\n        dtParamArr[dtParamSeq[resolverKey]] = resolvedVal;\n    }\n\n    if (dtParamArr.length && this.checkIfOnlyYear(dtParamArr.length))\n     {\n        result.unshift(dtParamArr[0], 0, 1); }\n    else {\n        result.unshift(...dtParamArr);\n    }\n\n    return result;\n};\n\n/*\n * Extract the value of the token from user specified date time string.\n *\n * @return {Object} : An key value pair which contains the tokens as key and value as pair\n */\nDateTimeFormatter.prototype.extractTokenValue = function (dateTimeStamp) {\n    const format = this.format;\n    const definitions = DateTimeFormatter.getTokenDefinitions();\n    const tokenPrefix = DateTimeFormatter.TOKEN_PREFIX;\n    const occurrence = DateTimeFormatter.findTokens(format);\n    const tokenObj = {};\n\n    let lastOccurrenceIndex;\n    let occObj;\n    let occIndex;\n    let targetText;\n    let regexFormat;\n\n    let l;\n    let i;\n\n    regexFormat = String(format);\n\n    const tokenArr = occurrence.map(obj => obj.token);\n    const occurrenceLength = occurrence.length;\n    for (i = occurrenceLength - 1; i >= 0; i--) {\n        occIndex = occurrence[i].index;\n\n        if (occIndex + 1 === regexFormat.length - 1) {\n            lastOccurrenceIndex = occIndex;\n            continue;\n        }\n\n        if (lastOccurrenceIndex === undefined) {\n            lastOccurrenceIndex = regexFormat.length;\n        }\n\n        targetText = regexFormat.substring(occIndex + 2, lastOccurrenceIndex);\n        regexFormat = regexFormat.substring(0, occIndex + 2) +\n            RegExp.escape(targetText) +\n            regexFormat.substring(lastOccurrenceIndex, regexFormat.length);\n\n        lastOccurrenceIndex = occIndex;\n    }\n\n    for (i = 0; i < occurrenceLength; i++) {\n        occObj = occurrence[i];\n        regexFormat = regexFormat.replace(tokenPrefix + occObj.token, definitions[occObj.token].extract());\n    }\n\n    const extractValues = dateTimeStamp.match(new RegExp(regexFormat)) || [];\n    extractValues.shift();\n\n    for (i = 0, l = tokenArr.length; i < l; i++) {\n        tokenObj[tokenArr[i]] = extractValues[i];\n    }\n    return tokenObj;\n};\n\n/*\n * Give back the JS native date formed from  user specified date string\n *\n * @return {Date} : Native JS Date\n */\nDateTimeFormatter.prototype.getNativeDate = function (dateTimeStamp) {\n    let date = null;\n    if (Number.isFinite(dateTimeStamp)) {\n        date = new Date(dateTimeStamp);\n    } else if (!this.format && Date.parse(dateTimeStamp)) {\n        date = new Date(dateTimeStamp);\n    }\n    else {\n        const dtParams = this.dtParams = this.parse(dateTimeStamp);\n        if (dtParams.length) {\n            this.nativeDate = new Date(...dtParams);\n            date = this.nativeDate;\n        }\n    }\n    return date;\n};\n\nDateTimeFormatter.prototype.checkIfOnlyYear = function(len) {\n    return len === 1 && this.format.match(/y|Y/g).length;\n};\n\n/*\n * Represents JS native date to a user specified format.\n *\n * @param format {String} : The format according to which the date is to be represented\n * @return {String} : The formatted date string\n */\nDateTimeFormatter.prototype.formatAs = function (format, dateTimeStamp) {\n    let nativeDate;\n\n    if (dateTimeStamp) {\n        nativeDate = this.nativeDate = this.getNativeDate(dateTimeStamp);\n    } else if (!(nativeDate = this.nativeDate)) {\n        nativeDate = this.getNativeDate(dateTimeStamp);\n    }\n\n    return DateTimeFormatter.formatAs(nativeDate, format);\n};\n\nexport { DateTimeFormatter as default };\n","/**\n * The utility function to calculate major column.\n *\n * @param {Object} store - The store object.\n * @return {Function} Returns the push function.\n */\nexport default (store) => {\n    let i = 0;\n    return (...fields) => {\n        fields.forEach((val, fieldIndex) => {\n            if (!(store[fieldIndex] instanceof Array)) {\n                store[fieldIndex] = Array.from({ length: i });\n            }\n            store[fieldIndex].push(val);\n        });\n        i++;\n    };\n};\n","/* eslint-disable */\nconst OBJECTSTRING = 'object';\nconst objectToStrFn = Object.prototype.toString;\nconst objectToStr = '[object Object]';\nconst arrayToStr = '[object Array]';\n\nfunction checkCyclicRef(obj, parentArr) {\n    let i = parentArr.length;\n    let bIndex = -1;\n\n    while (i) {\n        if (obj === parentArr[i]) {\n            bIndex = i;\n            return bIndex;\n        }\n        i -= 1;\n    }\n\n    return bIndex;\n}\n\nfunction merge(obj1, obj2, skipUndef, tgtArr, srcArr) {\n    var item,\n        srcVal,\n        tgtVal,\n        str,\n        cRef;\n    // check whether obj2 is an array\n    // if array then iterate through it's index\n    // **** MOOTOOLS precution\n\n    if (!srcArr) {\n        tgtArr = [obj1];\n        srcArr = [obj2];\n    }\n    else {\n        tgtArr.push(obj1);\n        srcArr.push(obj2);\n    }\n\n    if (obj2 instanceof Array) {\n        for (item = 0; item < obj2.length; item += 1) {\n            try {\n                srcVal = obj1[item];\n                tgtVal = obj2[item];\n            }\n            catch (e) {\n                continue;\n            }\n\n            if (typeof tgtVal !== OBJECTSTRING) {\n                if (!(skipUndef && tgtVal === undefined)) {\n                    obj1[item] = tgtVal;\n                }\n            }\n            else {\n                if (srcVal === null || typeof srcVal !== OBJECTSTRING) {\n                    srcVal = obj1[item] = tgtVal instanceof Array ? [] : {};\n                }\n                cRef = checkCyclicRef(tgtVal, srcArr);\n                if (cRef !== -1) {\n                    srcVal = obj1[item] = tgtArr[cRef];\n                }\n                else {\n                    merge(srcVal, tgtVal, skipUndef, tgtArr, srcArr);\n                }\n            }\n        }\n    }\n    else {\n        for (item in obj2) {\n            try {\n                srcVal = obj1[item];\n                tgtVal = obj2[item];\n            }\n            catch (e) {\n                continue;\n            }\n\n            if (tgtVal !== null && typeof tgtVal === OBJECTSTRING) {\n                // Fix for issue BUG: FWXT-602\n                // IE < 9 Object.prototype.toString.call(null) gives\n                // '[object Object]' instead of '[object Null]'\n                // that's why null value becomes Object in IE < 9\n                str = objectToStrFn.call(tgtVal);\n                if (str === objectToStr) {\n                    if (srcVal === null || typeof srcVal !== OBJECTSTRING) {\n                        srcVal = obj1[item] = {};\n                    }\n                    cRef = checkCyclicRef(tgtVal, srcArr);\n                    if (cRef !== -1) {\n                        srcVal = obj1[item] = tgtArr[cRef];\n                    }\n                    else {\n                        merge(srcVal, tgtVal, skipUndef, tgtArr, srcArr);\n                    }\n                }\n                else if (str === arrayToStr) {\n                    if (srcVal === null || !(srcVal instanceof Array)) {\n                        srcVal = obj1[item] = [];\n                    }\n                    cRef = checkCyclicRef(tgtVal, srcArr);\n                    if (cRef !== -1) {\n                        srcVal = obj1[item] = tgtArr[cRef];\n                    }\n                    else {\n                        merge(srcVal, tgtVal, skipUndef, tgtArr, srcArr);\n                    }\n                }\n                else {\n                    obj1[item] = tgtVal;\n                }\n            }\n            else {\n                if (skipUndef && tgtVal === undefined) {\n                    continue;\n                }\n                obj1[item] = tgtVal;\n            }\n        }\n    }\n    return obj1;\n}\n\n\nfunction extend2 (obj1, obj2, skipUndef) {\n    //if none of the arguments are object then return back\n    if (typeof obj1 !== OBJECTSTRING && typeof obj2 !== OBJECTSTRING) {\n        return null;\n    }\n\n    if (typeof obj2 !== OBJECTSTRING || obj2 === null) {\n        return obj1;\n    }\n\n    if (typeof obj1 !== OBJECTSTRING) {\n        obj1 = obj2 instanceof Array ? [] : {};\n    }\n    merge(obj1, obj2, skipUndef);\n    return obj1;\n}\n\nexport { extend2 as default };\n","import { DataFormat } from '../enums';\n\n/**\n * Checks whether the value is an array.\n *\n * @param  {*} val - The value to be checked.\n * @return {boolean} Returns true if the value is an array otherwise returns false.\n */\nexport function isArray (val) {\n    return Array.isArray(val);\n}\n\n/**\n * Checks whether the value is an object.\n *\n * @param  {*} val - The value to be checked.\n * @return {boolean} Returns true if the value is an object otherwise returns false.\n */\nexport function isObject (val) {\n    return val === Object(val);\n}\n\n/**\n * Checks whether the value is a string value.\n *\n * @param  {*} val - The value to be checked.\n * @return {boolean} Returns true if the value is a string value otherwise returns false.\n */\nexport function isString (val) {\n    return typeof val === 'string';\n}\n\n/**\n * Checks whether the value is callable.\n *\n * @param {*} val - The value to be checked.\n * @return {boolean} Returns true if the value is callable otherwise returns false.\n */\nexport function isCallable (val) {\n    return typeof val === 'function';\n}\n\n/**\n * Returns the unique values from the input array.\n *\n * @param {Array} data - The input array.\n * @return {Array} Returns a new array of unique values.\n */\nexport function uniqueValues (data) {\n    return [...new Set(data)];\n}\n\nexport const getUniqueId = () => `id-${new Date().getTime()}${Math.round(Math.random() * 10000)}`;\n\n/**\n * Checks Whether two arrays have same content.\n *\n * @param {Array} arr1 - The first array.\n * @param {Array} arr2 - The 2nd array.\n * @return {boolean} Returns whether two array have same content.\n */\nexport function isArrEqual(arr1, arr2) {\n    if (!isArray(arr1) || !isArray(arr2)) {\n        return arr1 === arr2;\n    }\n\n    if (arr1.length !== arr2.length) {\n        return false;\n    }\n\n    for (let i = 0; i < arr1.length; i++) {\n        if (arr1[i] !== arr2[i]) {\n            return false;\n        }\n    }\n\n    return true;\n}\n\n/**\n * It is the default number format function for the measure field type.\n *\n * @param {any} val - The input value.\n * @return {number} Returns a number value.\n */\nexport function formatNumber(val) {\n    return val;\n}\n\n/**\n * Returns the detected data format.\n *\n * @param {any} data - The input data to be tested.\n * @return {string} Returns the data format name.\n */\nexport const detectDataFormat = (data) => {\n    if (isString(data)) {\n        return DataFormat.DSV_STR;\n    } else if (isArray(data) && isArray(data[0])) {\n        return DataFormat.DSV_ARR;\n    } else if (isArray(data) && (data.length === 0 || isObject(data[0]))) {\n        return DataFormat.FLAT_JSON;\n    }\n    return null;\n};\n","import { FieldType } from './enums';\nimport { getUniqueId } from './utils';\n\nconst fieldStore = {\n    data: {},\n\n    createNamespace (fieldArr, name) {\n        const dataId = name || getUniqueId();\n\n        this.data[dataId] = {\n            name: dataId,\n            fields: fieldArr,\n\n            fieldsObj () {\n                let fieldsObj = this._cachedFieldsObj;\n\n                if (!fieldsObj) {\n                    fieldsObj = this._cachedFieldsObj = {};\n                    this.fields.forEach((field) => {\n                        fieldsObj[field.name()] = field;\n                    });\n                }\n                return fieldsObj;\n            },\n            getMeasure () {\n                let measureFields = this._cachedMeasure;\n\n                if (!measureFields) {\n                    measureFields = this._cachedMeasure = {};\n                    this.fields.forEach((field) => {\n                        if (field.schema().type === FieldType.MEASURE) {\n                            measureFields[field.name()] = field;\n                        }\n                    });\n                }\n                return measureFields;\n            },\n            getDimension () {\n                let dimensionFields = this._cachedDimension;\n\n                if (!this._cachedDimension) {\n                    dimensionFields = this._cachedDimension = {};\n                    this.fields.forEach((field) => {\n                        if (field.schema().type === FieldType.DIMENSION) {\n                            dimensionFields[field.name()] = field;\n                        }\n                    });\n                }\n                return dimensionFields;\n            },\n        };\n        return this.data[dataId];\n    },\n};\n\nexport default fieldStore;\n","/**\n * The wrapper class on top of the primitive value of a field.\n *\n * @todo Need to have support for StringValue, NumberValue, DateTimeValue\n * and GeoValue. These types should expose predicate API mostly.\n */\nclass Value {\n\n  /**\n   * Creates new Value instance.\n   *\n   * @param {*} val - the primitive value from the field cell.\n   * @param {string | Field} field - The field from which the value belongs.\n   */\n    constructor (val, field) {\n        Object.defineProperty(this, '_value', {\n            enumerable: false,\n            configurable: false,\n            writable: false,\n            value: val\n        });\n\n        this.field = field;\n    }\n\n  /**\n   * Returns the field value.\n   *\n   * @return {*} Returns the current value.\n   */\n    get value () {\n        return this._value;\n    }\n\n  /**\n   * Converts to human readable string.\n   *\n   * @override\n   * @return {string} Returns a human readable string of the field value.\n   *\n   */\n    toString () {\n        return String(this.value);\n    }\n\n  /**\n   * Returns the value of the field.\n   *\n   * @override\n   * @return {*} Returns the field value.\n   */\n    valueOf () {\n        return this.value;\n    }\n}\n\nexport default Value;\n","/**\n * Iterates through the diffSet array and call the callback with the current\n * index.\n *\n * @param {string} rowDiffset - The row diffset string e.g. '0-4,6,10-13'.\n * @param {Function} callback - The callback function to be called with every index.\n */\nexport function rowDiffsetIterator (rowDiffset, callback) {\n    if (rowDiffset.length > 0) {\n        const rowDiffArr = rowDiffset.split(',');\n        rowDiffArr.forEach((diffStr) => {\n            const diffStsArr = diffStr.split('-');\n            const start = +(diffStsArr[0]);\n            const end = +(diffStsArr[1] || diffStsArr[0]);\n            if (end >= start) {\n                for (let i = start; i <= end; i += 1) {\n                    callback(i);\n                }\n            }\n        });\n    }\n}\n","/**\n * A parser to parser null, undefined, invalid and NIL values.\n *\n * @public\n * @class\n */\nclass InvalidAwareTypes {\n    /**\n     * Static method which gets/sets the invalid value registry.\n     *\n     * @public\n     * @param {Object} config - The custom configuration supplied by user.\n     * @return {Object} Returns the invalid values registry.\n     */\n    static invalidAwareVals (config) {\n        if (!config) {\n            return InvalidAwareTypes._invalidAwareValsMap;\n        }\n        return Object.assign(InvalidAwareTypes._invalidAwareValsMap, config);\n    }\n\n    /**\n     * Initialize a new instance.\n     *\n     * @public\n     * @param {string} value - The value of the invalid data type.\n     */\n    constructor (value) {\n        this._value = value;\n    }\n\n    /**\n     * Returns the current value of the instance.\n     *\n     * @public\n     * @return {string} Returns the value of the invalid data type.\n     */\n    value () {\n        return this._value;\n    }\n\n    /**\n     * Returns the current value of the instance in string format.\n     *\n     * @public\n     * @return {string} Returns the value of the invalid data type.\n     */\n    toString () {\n        return String(this._value);\n    }\n\n    static isInvalid(val) {\n        return (val instanceof InvalidAwareTypes) || !!InvalidAwareTypes.invalidAwareVals()[val];\n    }\n\n    static getInvalidType(val) {\n        return val instanceof InvalidAwareTypes ? val : InvalidAwareTypes.invalidAwareVals()[val];\n    }\n}\n\n/**\n * Enums for Invalid types.\n */\nInvalidAwareTypes.NULL = new InvalidAwareTypes('null');\nInvalidAwareTypes.NA = new InvalidAwareTypes('na');\nInvalidAwareTypes.NIL = new InvalidAwareTypes('nil');\n\n/**\n * Default Registry for mapping the invalid values.\n *\n * @private\n */\nInvalidAwareTypes._invalidAwareValsMap = {\n    invalid: InvalidAwareTypes.NA,\n    nil: InvalidAwareTypes.NIL,\n    null: InvalidAwareTypes.NULL,\n    undefined: InvalidAwareTypes.NA\n};\n\nexport default InvalidAwareTypes;\n","import { persistDerivations } from '../helper';\nimport { DM_DERIVATIVES } from '../constants';\n\n/**\n * DataModel's opearators are exposed as composable functional operators as well as chainable operators. Chainable\n * operators are called on the instances of {@link Datamodel} and {@link Relation} class.\n *\n * Those same operators can be used as composable operators from `DataModel.Operators` namespace.\n *\n * All these operators have similar behaviour. All these operators when called with the argument returns a function\n * which expects a DataModel instance.\n *\n * @public\n * @module Operators\n * @namespace DataModel\n */\n\n/**\n * This is functional version of selection operator. {@link link_to_selection | Selection} is a row filtering operation.\n * It takes {@link SelectionPredicate | predicate} for filtering criteria and returns a function.\n * The returned function is called with the DataModel instance on which the action needs to be performed.\n *\n * {@link SelectionPredicate} is a function which returns a boolean value. For selection opearation the selection\n * function is called for each row of DataModel instance with the current row passed as argument.\n *\n * After executing {@link SelectionPredicate} the rows are labeled as either an entry of selection set or an entry\n * of rejection set.\n *\n * {@link FilteringMode} operates on the selection and rejection set to determine which one would reflect in the\n * resulatant datamodel.\n *\n * @warning\n * [Warn] Selection and rejection set is only a logical idea for concept explanation purpose.\n *\n * @error\n * [Error] `FilteringMode.ALL` is not a valid working mode for functional version of `select`. Its only avialable on the\n * chained version.\n *\n * @example\n * const select = DataModel.Operators.select;\n * usaCarsFn = select(fields => fields.Origin.value === 'USA');\n * usaCarsDm = usaCarsFn(dm);\n * console.log(usaCarsDm);\n *\n * @public\n * @namespace DataModel\n * @module Operators\n *\n * @param {SelectionPredicate} selectFn - Predicate funciton which is called for each row with the current row\n *      ```\n *          function (row, i)  { ... }\n *      ```\n * @param {Object} [config] - The configuration object to control the inclusion exclusion of a row in resultant\n *      DataModel instance\n * @param {FilteringMode} [config.mode=FilteringMode.NORMAL] - The mode of the selection\n *\n * @return {PreparatorFunction} Function which expects an instance of DataModel on which the operator needs to be\n *      applied.\n */\nexport const select = (...args) => dm => dm.select(...args);\n\n/**\n * This is functional version of projection operator. {@link link_to_projection | Projection} is a column filtering\n * operation.It expects list of fields name and either include those or exclude those based on {@link FilteringMode} on\n * the  resultant variable.It returns a function which is called with the DataModel instance on which the action needs\n * to be performed.\n *\n * Projection expects array of fields name based on which it creates the selection and rejection set. All the field\n * whose name is present in array goes in selection set and rest of the fields goes in rejection set.\n *\n * {@link FilteringMode} operates on the selection and rejection set to determine which one would reflect in the\n * resulatant datamodel.\n *\n * @warning\n * Selection and rejection set is only a logical idea for concept explanation purpose.\n *\n * @error\n * `FilteringMode.ALL` is not a valid working mode for functional version of `select`. Its only avialable on the\n * chained version.\n *\n * @public\n * @namespace DataModel\n * @module Operators\n *\n * @param {Array.<string | Regexp>} projField - An array of column names in string or regular expression.\n * @param {Object} [config] - An optional config to control the creation of new DataModel\n * @param {FilteringMode} [config.mode=FilteringMode.NORMAL] - Mode of the projection\n *\n * @return {PreparatorFunction} Function which expects an instance of DataModel on which the operator needs to be\n *      applied.\n */\nexport const project = (...args) => dm => dm.project(...args);\n\n/**\n * This is functional version of binnig operator. Binning happens on a measure field based on a binning configuration.\n * Binning in DataModel does not aggregate the number of rows present in DataModel instance after binning, it just adds\n * a new field with the binned value. Refer binning {@link example_of_binning | example} to have a intuition of what\n * binning is and the use case.\n *\n * Binning can be configured by\n * - providing custom bin configuration with non uniform buckets\n * - providing bin count\n * - providing each bin size\n *\n * When custom buckets are provided as part of binning configuration\n * @example\n *  // DataModel already prepared and assigned to dm vairable\n *  const buckets = {\n *      start: 30\n *      stops: [80, 100, 110]\n *  };\n *  const config = { buckets, name: 'binnedHP' }\n *  const binFn = bin('horsepower', config);\n *  const binnedDm = binFn(dm);\n *\n * @text\n * When `binCount` is defined as part of binning configuration\n * @example\n *  // DataModel already prepared and assigned to dm vairable\n *  const config = { binCount: 5, name: 'binnedHP' }\n *  const binFn = bin('horsepower', config);\n *  const binnedDm = binFn(Dm);\n *\n * @text\n * When `binSize` is defined as part of binning configuration\n * @example\n *  // DataModel already prepared and assigned to dm vairable\n *  const config = { binSize: 200, name: 'binnedHorsepower' }\n *  const binnedDm = dataModel.bin('horsepower', config);\n *  const binnedDm = binFn(Dm);\n *\n * @public\n * @namespace DataModel\n * @module Operators\n *\n * @param {String} name Name of measure which will be used to create bin\n * @param {Object} config Config required for bin creation\n * @param {Array.<Number>} config.bucketObj.stops Defination of bucket ranges. Two subsequent number from arrays\n *      are picked and a range is created. The first number from range is inclusive and the second number from range\n *      is exclusive.\n * @param {Number} [config.bucketObj.startAt] Force the start of the bin from a particular number.\n *      If not mentioned, the start of the bin or the lower domain of the data if stops is not mentioned, else its\n *      the first value of the stop.\n * @param {Number} config.binSize Bucket size for each bin\n * @param {Number} config.binCount Number of bins which will be created\n * @param {String} config.name Name of the new binned field to be created\n *\n * @return {PreparatorFunction} Function which expects an instance of DataModel on which the operator needs to be\n *      applied.\n */\nexport const bin = (...args) => dm => dm.bin(...args);\n\n/**\n * This is functional version of `groupBy` operator.Groups the data using particular dimensions and by reducing\n * measures. It expects a list of dimensions using which it projects the datamodel and perform aggregations to reduce\n * the duplicate tuples. Refer this {@link link_to_one_example_with_group_by | document} to know the intuition behind\n * groupBy.\n *\n * DataModel by default provides definition of few {@link reducer | Reducers}.\n * {@link ReducerStore | User defined reducers} can also be registered.\n *\n * This is the chained implementation of `groupBy`.\n * `groupBy` also supports {@link link_to_compose_groupBy | composability}\n *\n * @example\n * const groupBy = DataModel.Operators.groupBy;\n * const groupedFn = groupBy(['Year'], { horsepower: 'max' } );\n * groupedDM = groupByFn(dm);\n *\n * @public\n *\n * @param {Array.<string>} fieldsArr - Array containing the name of dimensions\n * @param {Object} [reducers={}] - A map whose key is the variable name and value is the name of the reducer. If its\n *      not passed, or any variable is ommitted from the object, default aggregation function is used from the\n *      schema of the variable.\n *\n * @return {PreparatorFunction} Function which expects an instance of DataModel on which the operator needs to be\n *      applied.\n */\nexport const groupBy = (...args) => dm => dm.groupBy(...args);\n\n/**\n * Enables composing operators to run multiple operations and save group of operataion as named opration on a DataModel.\n * The resulting DataModel will be the result of all the operation provided. The operations provided will be executed in\n * a serial manner ie. result of one operation will be the input for the next operations (like pipe operator in unix).\n *\n * Suported operations in compose are\n * - `select`\n * - `project`\n * - `groupBy`\n * - `bin`\n * - `compose`\n *\n * @example\n * const compose = DataModel.Operators.compose;\n * const select = DataModel.Operators.select;\n * const project = DataModel.Operators.project;\n *\n * let composedFn = compose(\n *    select(fields => fields.netprofit.value <= 15),\n *    project(['netprofit', 'netsales']));\n *\n * const dataModel = new DataModel(data1, schema1);\n *\n * let composedDm = composedFn(dataModel);\n *\n * @public\n * @namespace DataModel\n * @module Operators\n *\n * @param {Array.<Operators>} operators: An array of operation that will be applied on the\n * datatable.\n *\n * @returns {DataModel} Instance of resultant DataModel\n */\nexport const compose = (...operations) =>\n    (dm, config = { saveChild: true }) => {\n        let currentDM = dm;\n        let firstChild;\n        const derivations = [];\n\n        operations.forEach((operation) => {\n            currentDM = operation(currentDM);\n            derivations.push(...currentDM._derivation);\n            if (!firstChild) {\n                firstChild = currentDM;\n            }\n        });\n\n        if (firstChild && firstChild !== currentDM) {\n            firstChild.dispose();\n        }\n\n        // reset all ancestorDerivation saved in-between compose\n        currentDM._ancestorDerivation = [];\n        persistDerivations(\n            dm,\n            currentDM,\n            DM_DERIVATIVES.COMPOSE,\n            null,\n            derivations\n        );\n\n        if (config.saveChild) {\n            currentDM.setParent(dm);\n        } else {\n            currentDM.setParent(null);\n        }\n\n        return currentDM;\n    };\n","export { DataFormat, FilteringMode } from '../enums';\n/**\n * The event name for data propagation.\n */\nexport const PROPAGATION = 'propagation';\n\n/**\n * The name of the unique row id column in DataModel.\n */\nexport const ROW_ID = '__id__';\n\n/**\n * The enums for operation names performed on DataModel.\n */\nexport const DM_DERIVATIVES = {\n    SELECT: 'select',\n    PROJECT: 'project',\n    GROUPBY: 'group',\n    COMPOSE: 'compose',\n    CAL_VAR: 'calculatedVariable',\n    BIN: 'bin',\n    SORT: 'sort'\n};\n\nexport const JOINS = {\n    CROSS: 'cross',\n    LEFTOUTER: 'leftOuter',\n    RIGHTOUTER: 'rightOuter',\n    NATURAL: 'natural',\n    FULLOUTER: 'fullOuter'\n};\n\nexport const LOGICAL_OPERATORS = {\n    AND: 'and',\n    OR: 'or'\n};\n","/**\n * The helper function that returns an array of common schema\n * from two fieldStore instances.\n *\n * @param {FieldStore} fs1 - The first FieldStore instance.\n * @param {FieldStore} fs2 - The second FieldStore instance.\n * @return {Array} An array containing the common schema.\n */\nexport function getCommonSchema (fs1, fs2) {\n    const retArr = [];\n    const fs1Arr = [];\n    fs1.fields.forEach((field) => {\n        fs1Arr.push(field.schema().name);\n    });\n    fs2.fields.forEach((field) => {\n        if (fs1Arr.indexOf(field.schema().name) !== -1) {\n            retArr.push(field.schema().name);\n        }\n    });\n    return retArr;\n}\n","import DataModel from '../datamodel';\nimport { extend2 } from '../utils';\nimport { getCommonSchema } from './get-common-schema';\nimport { rowDiffsetIterator } from './row-diffset-iterator';\nimport { JOINS } from '../constants';\nimport { prepareJoinData } from '../helper';\n/**\n * Default filter function for crossProduct.\n *\n * @return {boolean} Always returns true.\n */\nfunction defaultFilterFn() { return true; }\n\n/**\n * Implementation of cross product operation between two DataModel instances.\n * It internally creates the data and schema for the new DataModel.\n *\n * @param {DataModel} dataModel1 - The left DataModel instance.\n * @param {DataModel} dataModel2 - The right DataModel instance.\n * @param {Function} filterFn - The filter function which is used to filter the tuples.\n * @param {boolean} [replaceCommonSchema=false] - The flag if the common name schema should be there.\n * @return {DataModel} Returns The newly created DataModel instance from the crossProduct operation.\n */\nexport function crossProduct (dm1, dm2, filterFn, replaceCommonSchema = false, jointype = JOINS.CROSS) {\n    const schema = [];\n    const data = [];\n    const applicableFilterFn = filterFn || defaultFilterFn;\n    const dm1FieldStore = dm1.getFieldspace();\n    const dm2FieldStore = dm2.getFieldspace();\n    const dm1FieldStoreName = dm1FieldStore.name;\n    const dm2FieldStoreName = dm2FieldStore.name;\n    const name = `${dm1FieldStore.name}.${dm2FieldStore.name}`;\n    const commonSchemaList = getCommonSchema(dm1FieldStore, dm2FieldStore);\n\n    if (dm1FieldStoreName === dm2FieldStoreName) {\n        throw new Error('DataModels must have different alias names');\n    }\n    // Here prepare the schema\n    dm1FieldStore.fields.forEach((field) => {\n        const tmpSchema = extend2({}, field.schema());\n        if (commonSchemaList.indexOf(tmpSchema.name) !== -1 && !replaceCommonSchema) {\n            tmpSchema.name = `${dm1FieldStore.name}.${tmpSchema.name}`;\n        }\n        schema.push(tmpSchema);\n    });\n    dm2FieldStore.fields.forEach((field) => {\n        const tmpSchema = extend2({}, field.schema());\n        if (commonSchemaList.indexOf(tmpSchema.name) !== -1) {\n            if (!replaceCommonSchema) {\n                tmpSchema.name = `${dm2FieldStore.name}.${tmpSchema.name}`;\n                schema.push(tmpSchema);\n            }\n        } else {\n            schema.push(tmpSchema);\n        }\n    });\n\n    // Here prepare Data\n    rowDiffsetIterator(dm1._rowDiffset, (i) => {\n        let rowAdded = false;\n        let rowPosition;\n        rowDiffsetIterator(dm2._rowDiffset, (ii) => {\n            const tuple = [];\n            const userArg = {};\n            userArg[dm1FieldStoreName] = {};\n            userArg[dm2FieldStoreName] = {};\n            dm1FieldStore.fields.forEach((field) => {\n                tuple.push(field.partialField.data[i]);\n                userArg[dm1FieldStoreName][field.name()] = field.partialField.data[i];\n            });\n            dm2FieldStore.fields.forEach((field) => {\n                if (!(commonSchemaList.indexOf(field.schema().name) !== -1 && replaceCommonSchema)) {\n                    tuple.push(field.partialField.data[ii]);\n                }\n                userArg[dm2FieldStoreName][field.name()] = field.partialField.data[ii];\n            });\n\n            let cachedStore = {};\n            let cloneProvider1 = () => dm1.detachedRoot();\n            let cloneProvider2 = () => dm2.detachedRoot();\n\n            const dm1Fields = prepareJoinData(userArg[dm1FieldStoreName]);\n            const dm2Fields = prepareJoinData(userArg[dm2FieldStoreName]);\n            if (applicableFilterFn(dm1Fields, dm2Fields, cloneProvider1, cloneProvider2, cachedStore)) {\n                const tupleObj = {};\n                tuple.forEach((cellVal, iii) => {\n                    tupleObj[schema[iii].name] = cellVal;\n                });\n                if (rowAdded && JOINS.CROSS !== jointype) {\n                    data[rowPosition] = tupleObj;\n                }\n                else {\n                    data.push(tupleObj);\n                    rowAdded = true;\n                    rowPosition = i;\n                }\n            } else if ((jointype === JOINS.LEFTOUTER || jointype === JOINS.RIGHTOUTER) && !rowAdded) {\n                const tupleObj = {};\n                let len = dm1FieldStore.fields.length - 1;\n                tuple.forEach((cellVal, iii) => {\n                    if (iii <= len) {\n                        tupleObj[schema[iii].name] = cellVal;\n                    }\n                    else {\n                        tupleObj[schema[iii].name] = null;\n                    }\n                });\n                rowAdded = true;\n                rowPosition = i;\n                data.push(tupleObj);\n            }\n        });\n    });\n\n    return new DataModel(data, schema, { name });\n}\n","/**\n * The default sort function.\n *\n * @param {*} a - The first value.\n * @param {*} b - The second value.\n * @return {number} Returns the comparison result e.g. 1 or 0 or -1.\n */\nfunction defSortFn (a, b) {\n    const a1 = `${a}`;\n    const b1 = `${b}`;\n    if (a1 < b1) {\n        return -1;\n    }\n    if (a1 > b1) {\n        return 1;\n    }\n    return 0;\n}\n\n/**\n * The helper function for merge sort which creates the sorted array\n * from the two halves of the input array.\n *\n * @param {Array} arr - The target array which needs to be merged.\n * @param {number} lo - The starting index of the first array half.\n * @param {number} mid - The ending index of the first array half.\n * @param {number} hi - The ending index of the second array half.\n * @param {Function} sortFn - The sort function.\n */\nfunction merge (arr, lo, mid, hi, sortFn) {\n    const mainArr = arr;\n    const auxArr = [];\n    for (let i = lo; i <= hi; i += 1) {\n        auxArr[i] = mainArr[i];\n    }\n    let a = lo;\n    let b = mid + 1;\n\n    for (let i = lo; i <= hi; i += 1) {\n        if (a > mid) {\n            mainArr[i] = auxArr[b];\n            b += 1;\n        } else if (b > hi) {\n            mainArr[i] = auxArr[a];\n            a += 1;\n        } else if (sortFn(auxArr[a], auxArr[b]) <= 0) {\n            mainArr[i] = auxArr[a];\n            a += 1;\n        } else {\n            mainArr[i] = auxArr[b];\n            b += 1;\n        }\n    }\n}\n\n/**\n * The helper function for merge sort which would be called\n * recursively for sorting the array halves.\n *\n * @param {Array} arr - The target array which needs to be sorted.\n * @param {number} lo - The starting index of the array half.\n * @param {number} hi - The ending index of the array half.\n * @param {Function} sortFn - The sort function.\n * @return {Array} Returns the target array itself.\n */\nfunction sort (arr, lo, hi, sortFn) {\n    if (hi === lo) { return arr; }\n\n    const mid = lo + Math.floor((hi - lo) / 2);\n    sort(arr, lo, mid, sortFn);\n    sort(arr, mid + 1, hi, sortFn);\n    merge(arr, lo, mid, hi, sortFn);\n\n    return arr;\n}\n\n/**\n * The implementation of merge sort.\n * It is used in DataModel for stable sorting as it is not sure\n * what the sorting algorithm used by browsers is stable or not.\n *\n * @param {Array} arr - The target array which needs to be sorted.\n * @param {Function} [sortFn=defSortFn] - The sort function.\n * @return {Array} Returns the input array itself in sorted order.\n */\nexport function mergeSort (arr, sortFn = defSortFn) {\n    if (arr.length > 1) {\n        sort(arr, 0, arr.length - 1, sortFn);\n    }\n    return arr;\n}\n","import { DimensionSubtype, MeasureSubtype } from '../enums';\nimport { rowDiffsetIterator } from './row-diffset-iterator';\nimport { mergeSort } from './merge-sort';\nimport { fieldInSchema } from '../helper';\nimport { isCallable, isArray, } from '../utils';\n/**\n * Generates the sorting functions to sort the data of a DataModel instance\n * according to the input data type.\n *\n * @param {string} dataType - The data type e.g. 'measure', 'datetime' etc.\n * @param {string} sortType - The sorting order i.e. 'asc' or 'desc'.\n * @param {integer} index - The index of the data which will be sorted.\n * @return {Function} Returns the the sorting function.\n */\nfunction getSortFn (dataType, sortType, index) {\n    let retFunc;\n    switch (dataType) {\n    case MeasureSubtype.CONTINUOUS:\n    case DimensionSubtype.TEMPORAL:\n        if (sortType === 'desc') {\n            retFunc = (a, b) => b[index] - a[index];\n        } else {\n            retFunc = (a, b) => a[index] - b[index];\n        }\n        break;\n    default:\n        retFunc = (a, b) => {\n            const a1 = `${a[index]}`;\n            const b1 = `${b[index]}`;\n            if (a1 < b1) {\n                return sortType === 'desc' ? 1 : -1;\n            }\n            if (a1 > b1) {\n                return sortType === 'desc' ? -1 : 1;\n            }\n            return 0;\n        };\n    }\n    return retFunc;\n}\n\n/**\n * Groups the data according to the specified target field.\n *\n * @param {Array} data - The input data array.\n * @param {number} fieldIndex - The target field index within schema array.\n * @return {Array} Returns an array containing the grouped data.\n */\nfunction groupData(data, fieldIndex) {\n    const hashMap = new Map();\n    const groupedData = [];\n\n    data.forEach((datum) => {\n        const fieldVal = datum[fieldIndex];\n        if (hashMap.has(fieldVal)) {\n            groupedData[hashMap.get(fieldVal)][1].push(datum);\n        } else {\n            groupedData.push([fieldVal, [datum]]);\n            hashMap.set(fieldVal, groupedData.length - 1);\n        }\n    });\n\n    return groupedData;\n}\n\n/**\n * Creates the argument value used for sorting function when sort is done\n * with another fields.\n *\n * @param {Array} groupedDatum - The grouped datum for a single dimension field value.\n * @param {Array} targetFields - An array of the sorting fields.\n * @param {Array} targetFieldDetails - An array of the sorting field details in schema.\n * @return {Object} Returns an object containing the value of sorting fields and the target field name.\n */\nfunction createSortingFnArg(groupedDatum, targetFields, targetFieldDetails) {\n    const arg = {\n        label: groupedDatum[0]\n    };\n\n    targetFields.reduce((acc, next, idx) => {\n        acc[next] = groupedDatum[1].map(datum => datum[targetFieldDetails[idx].index]);\n        return acc;\n    }, arg);\n\n    return arg;\n}\n\n/**\n * Sorts the data before return in dataBuilder.\n *\n * @param {Object} dataObj - An object containing the data and schema.\n * @param {Array} sortingDetails - An array containing the sorting configs.\n */\nfunction sortData(dataObj, sortingDetails) {\n    const { data, schema } = dataObj;\n    let fieldName;\n    let sortMeta;\n    let fDetails;\n    let i = sortingDetails.length - 1;\n\n    for (; i >= 0; i--) {\n        fieldName = sortingDetails[i][0];\n        sortMeta = sortingDetails[i][1];\n        fDetails = fieldInSchema(schema, fieldName);\n\n        if (!fDetails) {\n            // eslint-disable-next-line no-continue\n            continue;\n        }\n\n        if (isCallable(sortMeta)) {\n            // eslint-disable-next-line no-loop-func\n            mergeSort(data, (a, b) => sortMeta(a[fDetails.index], b[fDetails.index]));\n        } else if (isArray(sortMeta)) {\n            const groupedData = groupData(data, fDetails.index);\n            const sortingFn = sortMeta[sortMeta.length - 1];\n            const targetFields = sortMeta.slice(0, sortMeta.length - 1);\n            const targetFieldDetails = targetFields.map(f => fieldInSchema(schema, f));\n\n            groupedData.forEach((groupedDatum) => {\n                groupedDatum.push(createSortingFnArg(groupedDatum, targetFields, targetFieldDetails));\n            });\n\n            mergeSort(groupedData, (a, b) => {\n                const m = a[2];\n                const n = b[2];\n                return sortingFn(m, n);\n            });\n\n            // Empty the array\n            data.length = 0;\n            groupedData.forEach((datum) => {\n                data.push(...datum[1]);\n            });\n        } else {\n            sortMeta = String(sortMeta).toLowerCase() === 'desc' ? 'desc' : 'asc';\n            mergeSort(data, getSortFn(fDetails.type, sortMeta, fDetails.index));\n        }\n    }\n\n    dataObj.uids = [];\n    data.forEach((value) => {\n        dataObj.uids.push(value.pop());\n    });\n}\n\n\n/**\n * Builds the actual data array.\n *\n * @param {Array} fieldStore - An array of field.\n * @param {string} rowDiffset - A string consisting of which rows to be included eg. '0-2,4,6';\n * @param {string} colIdentifier - A string consisting of the details of which column\n * to be included eg 'date,sales,profit';\n * @param {Object} sortingDetails - An object containing the sorting details of the DataModel instance.\n * @param {Object} options - The options required to create the type of the data.\n * @return {Object} Returns an object containing the multidimensional array and the relative schema.\n */\nexport function dataBuilder (fieldStore, rowDiffset, colIdentifier, sortingDetails, options) {\n    const defOptions = {\n        addUid: false,\n        columnWise: false\n    };\n    options = Object.assign({}, defOptions, options);\n\n    const retObj = {\n        schema: [],\n        data: [],\n        uids: []\n    };\n    const addUid = options.addUid;\n    const reqSorting = sortingDetails && sortingDetails.length > 0;\n    // It stores the fields according to the colIdentifier argument\n    const tmpDataArr = [];\n    // Stores the fields according to the colIdentifier argument\n    const colIArr = colIdentifier.split(',');\n\n    colIArr.forEach((colName) => {\n        for (let i = 0; i < fieldStore.length; i += 1) {\n            if (fieldStore[i].name() === colName) {\n                tmpDataArr.push(fieldStore[i]);\n                break;\n            }\n        }\n    });\n\n    // Inserts the schema to the schema object\n    tmpDataArr.forEach((field) => {\n        /** @todo Need to use extend2 here otherwise user can overwrite the schema. */\n        retObj.schema.push(field.schema());\n    });\n\n    if (addUid) {\n        retObj.schema.push({\n            name: 'uid',\n            type: 'identifier'\n        });\n    }\n\n    rowDiffsetIterator(rowDiffset, (i) => {\n        retObj.data.push([]);\n        const insertInd = retObj.data.length - 1;\n        let start = 0;\n        tmpDataArr.forEach((field, ii) => {\n            retObj.data[insertInd][ii + start] = field.partialField.data[i];\n        });\n        if (addUid) {\n            retObj.data[insertInd][tmpDataArr.length] = i;\n        }\n        // Creates an array of unique identifiers for each row\n        retObj.uids.push(i);\n\n        // If sorting needed then there is the need to expose the index\n        // mapping from the old index to its new index\n        if (reqSorting) { retObj.data[insertInd].push(i); }\n    });\n\n    // Handles the sort functionality\n    if (reqSorting) {\n        sortData(retObj, sortingDetails);\n    }\n\n    if (options.columnWise) {\n        const tmpData = Array(...Array(retObj.schema.length)).map(() => []);\n        retObj.data.forEach((tuple) => {\n            tuple.forEach((data, i) => {\n                tmpData[i].push(data);\n            });\n        });\n        retObj.data = tmpData;\n    }\n\n    return retObj;\n}\n","import DataModel from '../datamodel';\nimport { extend2 } from '../utils';\nimport { rowDiffsetIterator } from './row-diffset-iterator';\nimport { isArrEqual } from '../utils/helper';\n\n/**\n * Performs the union operation between two dm instances.\n *\n * @todo Fix the conflicts between union and difference terminology here.\n *\n * @param {dm} dm1 - The first dm instance.\n * @param {dm} dm2 - The second dm instance.\n * @return {dm} Returns the newly created dm after union operation.\n */\nexport function difference (dm1, dm2) {\n    const hashTable = {};\n    const schema = [];\n    const schemaNameArr = [];\n    const data = [];\n    const dm1FieldStore = dm1.getFieldspace();\n    const dm2FieldStore = dm2.getFieldspace();\n    const dm1FieldStoreFieldObj = dm1FieldStore.fieldsObj();\n    const dm2FieldStoreFieldObj = dm2FieldStore.fieldsObj();\n    const name = `${dm1FieldStore.name} union ${dm2FieldStore.name}`;\n\n   // For union the columns should match otherwise return a clone of the dm1\n    if (!isArrEqual(dm1._colIdentifier.split(',').sort(), dm2._colIdentifier.split(',').sort())) {\n        return null;\n    }\n\n    // Prepare the schema\n    (dm1._colIdentifier.split(',')).forEach((fieldName) => {\n        const field = dm1FieldStoreFieldObj[fieldName];\n        schema.push(extend2({}, field.schema()));\n        schemaNameArr.push(field.schema().name);\n    });\n\n    /**\n     * The helper function to create the data.\n     *\n     * @param {dm} dm - The dm instance for which the data is inserted.\n     * @param {Object} fieldsObj - The fieldStore object format.\n     * @param {boolean} addData - If true only tuple will be added to the data.\n     */\n    function prepareDataHelper(dm, fieldsObj, addData) {\n        rowDiffsetIterator(dm._rowDiffset, (i) => {\n            const tuple = {};\n            let hashData = '';\n            schemaNameArr.forEach((schemaName) => {\n                const value = fieldsObj[schemaName].partialField.data[i];\n                hashData += `-${value}`;\n                tuple[schemaName] = value;\n            });\n            if (!hashTable[hashData]) {\n                if (addData) { data.push(tuple); }\n                hashTable[hashData] = true;\n            }\n        });\n    }\n\n    // Prepare the data\n    prepareDataHelper(dm2, dm2FieldStoreFieldObj, false);\n    prepareDataHelper(dm1, dm1FieldStoreFieldObj, true);\n\n    return new DataModel(data, schema, { name });\n}\n\n","import { isArray } from '../utils';\nimport InvalidAwareTypes from '../invalid-aware-types';\nimport { GROUP_BY_FUNCTIONS } from '../enums';\n\nconst { SUM, AVG, FIRST, LAST, COUNT, STD, MIN, MAX } = GROUP_BY_FUNCTIONS;\n\nfunction getFilteredValues(arr) {\n    return arr.filter(item => !(item instanceof InvalidAwareTypes));\n}\n/**\n * Reducer function that returns the sum of all the values.\n *\n * @public\n * @param  {Array.<number>} arr - The input array.\n * @return {number} Returns the sum of the array.\n */\nfunction sum (arr) {\n    if (isArray(arr) && !(arr[0] instanceof Array)) {\n        const filteredNumber = getFilteredValues(arr);\n        const totalSum = filteredNumber.length ?\n                            filteredNumber.reduce((acc, curr) => acc + curr, 0)\n                            : InvalidAwareTypes.NULL;\n        return totalSum;\n    }\n    return InvalidAwareTypes.NULL;\n}\n\n/**\n * Reducer function that returns the average of all the values.\n *\n * @public\n * @param  {Array.<number>} arr - The input array.\n * @return {number} Returns the mean value of the array.\n */\nfunction avg (arr) {\n    if (isArray(arr) && !(arr[0] instanceof Array)) {\n        const totalSum = sum(arr);\n        const len = arr.length || 1;\n        return (Number.isNaN(totalSum) || totalSum instanceof InvalidAwareTypes) ?\n                 InvalidAwareTypes.NULL : totalSum / len;\n    }\n    return InvalidAwareTypes.NULL;\n}\n\n/**\n * Reducer function that gives the min value amongst all the values.\n *\n * @public\n * @param  {Array.<number>} arr - The input array.\n * @return {number} Returns the minimum value of the array.\n */\nfunction min (arr) {\n    if (isArray(arr) && !(arr[0] instanceof Array)) {\n        // Filter out undefined, null and NaN values\n        const filteredValues = getFilteredValues(arr);\n\n        return (filteredValues.length) ? Math.min(...filteredValues) : InvalidAwareTypes.NULL;\n    }\n    return InvalidAwareTypes.NULL;\n}\n\n/**\n * Reducer function that gives the max value amongst all the values.\n *\n * @public\n * @param  {Array.<number>} arr - The input array.\n * @return {number} Returns the maximum value of the array.\n */\nfunction max (arr) {\n    if (isArray(arr) && !(arr[0] instanceof Array)) {\n        // Filter out undefined, null and NaN values\n        const filteredValues = getFilteredValues(arr);\n\n        return (filteredValues.length) ? Math.max(...filteredValues) : InvalidAwareTypes.NULL;\n    }\n    return InvalidAwareTypes.NULL;\n}\n\n/**\n * Reducer function that gives the first value of the array.\n *\n * @public\n * @param  {Array} arr - The input array.\n * @return {number} Returns the first value of the array.\n */\nfunction first (arr) {\n    return arr[0];\n}\n\n/**\n * Reducer function that gives the last value of the array.\n *\n * @public\n * @param  {Array} arr - The input array.\n * @return {number} Returns the last value of the array.\n */\nfunction last (arr) {\n    return arr[arr.length - 1];\n}\n\n/**\n * Reducer function that gives the count value of the array.\n *\n * @public\n * @param  {Array} arr - The input array.\n * @return {number} Returns the length of the array.\n */\nfunction count (arr) {\n    if (isArray(arr)) {\n        return arr.length;\n    }\n    return InvalidAwareTypes.NULL;\n}\n\n/**\n * Calculates the variance of the input array.\n *\n * @param  {Array.<number>} arr - The input array.\n * @return {number} Returns the variance of the input array.\n */\nfunction variance (arr) {\n    let mean = avg(arr);\n    return avg(arr.map(num => (num - mean) ** 2));\n}\n\n/**\n * Calculates the square root of the variance of the input array.\n *\n * @public\n * @param  {Array.<number>} arr - The input array.\n * @return {number} Returns the square root of the variance.\n */\nfunction std (arr) {\n    return Math.sqrt(variance(arr));\n}\n\n\nconst fnList = {\n    [SUM]: sum,\n    [AVG]: avg,\n    [MIN]: min,\n    [MAX]: max,\n    [FIRST]: first,\n    [LAST]: last,\n    [COUNT]: count,\n    [STD]: std\n};\n\nconst defaultReducerName = SUM;\n\nexport {\n    defaultReducerName,\n    sum as defReducer,\n    fnList,\n};\n","import { defReducer, fnList } from '../operator';\n\n/**\n * A page level storage which stores, registers, unregisters reducers for all the datamodel instances. There is only one\n * reducer store available in a page. All the datamodel instances receive same instance of reducer store. DataModel\n * out of the box provides handful of {@link reducer | reducers} which can be used as reducer funciton.\n *\n * @public\n * @namespace DataModel\n */\nclass ReducerStore {\n    constructor () {\n        this.store = new Map();\n        this.store.set('defReducer', defReducer);\n\n        Object.entries(fnList).forEach((key) => {\n            this.store.set(key[0], key[1]);\n        });\n    }\n\n    /**\n     * Changes the `defaultReducer` globally. For all the fields which does not have `defAggFn` mentioned in schema, the\n     * value of `defaultReducer` is used for aggregation.\n     *\n     * @public\n     * @param {string} [reducer='sum'] - The name of the default reducer. It picks up the definition from store by doing\n     * name lookup. If no name is found then it takes `sum` as the default reducer.\n     * @return {ReducerStore} Returns instance of the singleton store in page.\n     */\n    defaultReducer (...params) {\n        if (!params.length) {\n            return this.store.get('defReducer');\n        }\n\n        let reducer = params[0];\n\n        if (typeof reducer === 'function') {\n            this.store.set('defReducer', reducer);\n        } else {\n            reducer = String(reducer);\n            if (Object.keys(fnList).indexOf(reducer) !== -1) {\n                this.store.set('defReducer', fnList[reducer]);\n            } else {\n                throw new Error(`Reducer ${reducer} not found in registry`);\n            }\n        }\n        return this;\n    }\n\n    /**\n     *\n     * Registers a {@link reducer | reducer}.\n     * A {@link reducer | reducer} has to be registered before it is used.\n     *\n     * @example\n     *  // find the mean squared value of a given set\n     *  const reducerStore = DataModel.Reducers();\n     *\n     *  reducers.register('meanSquared', (arr) => {\n     *      const squaredVal = arr.map(item => item * item);\n     *      let sum = 0;\n     *      for (let i = 0, l = squaredVal.length; i < l; i++) {\n     *          sum += squaredVal[i++];\n     *      }\n     *\n     *      return sum;\n     *  })\n     *\n     *  // datamodel (dm) is already prepared with cars.json\n     *  const dm1 = dm.groupBy(['origin'], {\n     *      accleration: 'meanSquared'\n     *  });\n     *\n     * @public\n     *\n     * @param {string} name formal name for a reducer. If the given name already exists in store it is overridden by new\n     *      definition.\n     * @param {Function} reducer definition of {@link reducer} function.\n     *\n     * @return {Function} function for unregistering the reducer.\n     */\n    register (name, reducer) {\n        if (typeof reducer !== 'function') {\n            throw new Error('Reducer should be a function');\n        }\n\n        name = String(name);\n        this.store.set(name, reducer);\n\n        return () => { this.__unregister(name); };\n    }\n\n    __unregister (name) {\n        if (this.store.has(name)) {\n            this.store.delete(name);\n        }\n    }\n\n    resolve (name) {\n        if (name instanceof Function) {\n            return name;\n        }\n        return this.store.get(name);\n    }\n}\n\nconst reducerStore = (function () {\n    let store = null;\n\n    function getStore () {\n        if (store === null) {\n            store = new ReducerStore();\n        }\n        return store;\n    }\n    return getStore();\n}());\n\nexport default reducerStore;\n","import { getCommonSchema } from './get-common-schema';\n\n/**\n * The filter function used in natural join.\n * It generates a function that will have the logic to join two\n * DataModel instances by the process of natural join.\n *\n * @param {DataModel} dm1 - The left DataModel instance.\n * @param {DataModel} dm2 - The right DataModel instance.\n * @return {Function} Returns a function that is used in cross-product operation.\n */\nexport function naturalJoinFilter (dm1, dm2) {\n    const dm1FieldStore = dm1.getFieldspace();\n    const dm2FieldStore = dm2.getFieldspace();\n    // const dm1FieldStoreName = dm1FieldStore.name;\n    // const dm2FieldStoreName = dm2FieldStore.name;\n    const commonSchemaArr = getCommonSchema(dm1FieldStore, dm2FieldStore);\n\n    return (dm1Fields, dm2Fields) => {\n        let retainTuple = true;\n        commonSchemaArr.forEach((fieldName) => {\n            if (dm1Fields[fieldName].value ===\n                dm2Fields[fieldName].value && retainTuple) {\n                retainTuple = true;\n            } else {\n                retainTuple = false;\n            }\n        });\n        return retainTuple;\n    };\n}\n","import DataModel from '../export';\nimport { extend2 } from '../utils';\nimport { rowDiffsetIterator } from './row-diffset-iterator';\nimport { isArrEqual } from '../utils/helper';\n/**\n * Performs the union operation between two dm instances.\n *\n * @param {dm} dm1 - The first dm instance.\n * @param {dm} dm2 - The second dm instance.\n * @return {dm} Returns the newly created dm after union operation.\n */\nexport function union (dm1, dm2) {\n    const hashTable = {};\n    const schema = [];\n    const schemaNameArr = [];\n    const data = [];\n    const dm1FieldStore = dm1.getFieldspace();\n    const dm2FieldStore = dm2.getFieldspace();\n    const dm1FieldStoreFieldObj = dm1FieldStore.fieldsObj();\n    const dm2FieldStoreFieldObj = dm2FieldStore.fieldsObj();\n    const name = `${dm1FieldStore.name} union ${dm2FieldStore.name}`;\n\n    // For union the columns should match otherwise return a clone of the dm1\n    if (!isArrEqual(dm1._colIdentifier.split(',').sort(), dm2._colIdentifier.split(',').sort())) {\n        return null;\n    }\n\n    // Prepare the schema\n    (dm1._colIdentifier.split(',')).forEach((fieldName) => {\n        const field = dm1FieldStoreFieldObj[fieldName];\n        schema.push(extend2({}, field.schema()));\n        schemaNameArr.push(field.schema().name);\n    });\n\n    /**\n     * The helper function to create the data.\n     *\n     * @param {dm} dm - The dm instance for which the data is inserted.\n     * @param {Object} fieldsObj - The fieldStore object format.\n     */\n    function prepareDataHelper (dm, fieldsObj) {\n        rowDiffsetIterator(dm._rowDiffset, (i) => {\n            const tuple = {};\n            let hashData = '';\n            schemaNameArr.forEach((schemaName) => {\n                const value = fieldsObj[schemaName].partialField.data[i];\n                hashData += `-${value}`;\n                tuple[schemaName] = value;\n            });\n            if (!hashTable[hashData]) {\n                data.push(tuple);\n                hashTable[hashData] = true;\n            }\n        });\n    }\n\n    // Prepare the data\n    prepareDataHelper(dm1, dm1FieldStoreFieldObj);\n    prepareDataHelper(dm2, dm2FieldStoreFieldObj);\n\n    return new DataModel(data, schema, { name });\n}\n","import { crossProduct } from './cross-product';\nimport { JOINS } from '../constants';\nimport { union } from './union';\n\n\nexport function leftOuterJoin (dataModel1, dataModel2, filterFn) {\n    return crossProduct(dataModel1, dataModel2, filterFn, false, JOINS.LEFTOUTER);\n}\n\nexport function rightOuterJoin (dataModel1, dataModel2, filterFn) {\n    return crossProduct(dataModel2, dataModel1, filterFn, false, JOINS.RIGHTOUTER);\n}\n\nexport function fullOuterJoin (dataModel1, dataModel2, filterFn) {\n    return union(leftOuterJoin(dataModel1, dataModel2, filterFn), rightOuterJoin(dataModel1, dataModel2, filterFn));\n}\n","import { rowDiffsetIterator } from '../../operator/row-diffset-iterator';\n\n/**\n * In {@link DataModel}, every tabular data consists of column, a column is stored as field.\n * Field contains all the data for a given column in an array.\n *\n * Each record consists of several fields; the fields of all records form the columns.\n * Examples of fields: name, gender, sex etc.\n *\n * In DataModel, each field can have multiple attributes which describes its data and behaviour.\n * A field can have two types of data: Measure and Dimension.\n *\n * A Dimension Field is the context on which a data is categorized and the measure is the numerical values that\n * quantify the data set.\n * In short a dimension is the lens through which you are looking at your measure data.\n *\n * Refer to {@link Schema} to get info about possible field attributes.\n *\n * @public\n * @class\n */\nexport default class Field {\n    /**\n     * Initialize a new instance.\n     *\n     * @public\n     * @param {PartialField} partialField - The partialField instance which holds the whole data.\n     * @param {string} rowDiffset - The data subset definition.\n     */\n    constructor (partialField, rowDiffset) {\n        this.partialField = partialField;\n        this.rowDiffset = rowDiffset;\n    }\n\n    /**\n     * Generates the field type specific domain.\n     *\n     * @public\n     * @abstract\n     */\n    domain () {\n        throw new Error('Not yet implemented');\n    }\n\n    /**\n     * Returns the the field schema.\n     *\n     * @public\n     * @return {string} Returns the field schema.\n     */\n    schema () {\n        return this.partialField.schema;\n    }\n\n    /**\n     * Returns the name of the field.\n     *\n     * @public\n     * @return {string} Returns the name of the field.\n     */\n    name () {\n        return this.partialField.name;\n    }\n\n    /**\n     * Returns the type of the field.\n     *\n     * @public\n     * @return {string} Returns the type of the field.\n     */\n    type () {\n        return this.partialField.schema.type;\n    }\n\n    /**\n     * Returns the subtype of the field.\n     *\n     * @public\n     * @return {string} Returns the subtype of the field.\n     */\n    subtype () {\n        return this.partialField.schema.subtype;\n    }\n\n    /**\n     * Returns the description of the field.\n     *\n     * @public\n     * @return {string} Returns the description of the field.\n     */\n    description () {\n        return this.partialField.schema.description;\n    }\n\n    /**\n     * Returns the display name of the field.\n     *\n     * @public\n     * @return {string} Returns the display name of the field.\n     */\n    displayName () {\n        return this.partialField.schema.displayName || this.partialField.schema.name;\n    }\n\n    /**\n     * Returns the data associated with the field.\n     *\n     * @public\n     * @return {Array} Returns the data.\n     */\n    data () {\n        const data = [];\n        rowDiffsetIterator(this.rowDiffset, (i) => {\n            data.push(this.partialField.data[i]);\n        });\n        return data;\n    }\n\n    /**\n     * Returns the formatted version of the underlying field data.\n     *\n     * @public\n     * @abstract\n     */\n    formattedData () {\n        throw new Error('Not yet implemented');\n    }\n}\n","import Field from '../field';\n\n/**\n * Represents dimension field type.\n *\n * @public\n * @class\n * @extends Field\n */\nexport default class Dimension extends Field {\n    /**\n     * Returns the domain for the dimension field.\n     *\n     * @override\n     * @public\n     * @return {any} Returns the calculated domain.\n     */\n    domain () {\n        if (!this._cachedDomain) {\n            this._cachedDomain = this.calculateDataDomain();\n        }\n        return this._cachedDomain;\n    }\n\n    /**\n     * Calculates the corresponding field domain.\n     *\n     * @public\n     * @abstract\n     */\n    calculateDataDomain () {\n        throw new Error('Not yet implemented');\n    }\n\n     /**\n     * Returns the formatted version of the underlying field data.\n     *\n     * @public\n     * @override\n     * @return {Array} Returns the formatted data.\n     */\n    formattedData () {\n        return this.data();\n    }\n}\n","import { rowDiffsetIterator } from '../../operator/row-diffset-iterator';\nimport { DimensionSubtype } from '../../enums';\nimport Dimension from '../dimension';\n/**\n * Represents categorical field subtype.\n *\n * @public\n * @class\n * @extends Dimension\n */\nexport default class Categorical extends Dimension {\n    /**\n     * Returns the subtype of the field.\n     *\n     * @public\n     * @override\n     * @return {string} Returns the subtype of the field.\n     */\n    subtype () {\n        return DimensionSubtype.CATEGORICAL;\n    }\n\n    /**\n     * Calculates the corresponding field domain.\n     *\n     * @public\n     * @override\n     * @return {Array} Returns the unique values.\n     */\n    calculateDataDomain () {\n        const hash = new Set();\n        const domain = [];\n\n        // here don't use this.data() as the iteration will be occurred two times on same data.\n        rowDiffsetIterator(this.rowDiffset, (i) => {\n            const datum = this.partialField.data[i];\n            if (!hash.has(datum)) {\n                hash.add(datum);\n                domain.push(datum);\n            }\n        });\n        return domain;\n    }\n}\n","import { rowDiffsetIterator } from '../../operator/row-diffset-iterator';\nimport Dimension from '../dimension';\nimport { DateTimeFormatter } from '../../utils';\nimport InvalidAwareTypes from '../../invalid-aware-types';\n\n/**\n * Represents temporal field subtype.\n *\n * @public\n * @class\n * @extends Dimension\n */\nexport default class Temporal extends Dimension {\n     /**\n     * Initialize a new instance.\n     *\n     * @public\n     * @param {PartialField} partialField - The partialField instance which holds the whole data.\n     * @param {string} rowDiffset - The data subset definition.\n     */\n    constructor (partialField, rowDiffset) {\n        super(partialField, rowDiffset);\n\n        this._cachedMinDiff = null;\n    }\n\n     /**\n     * Calculates the corresponding field domain.\n     *\n     * @public\n     * @override\n     * @return {Array} Returns the unique values.\n     */\n    calculateDataDomain () {\n        const hash = new Set();\n        const domain = [];\n\n        // here don't use this.data() as the iteration will be\n        // occurred two times on same data.\n        rowDiffsetIterator(this.rowDiffset, (i) => {\n            const datum = this.partialField.data[i];\n            if (!hash.has(datum)) {\n                hash.add(datum);\n                domain.push(datum);\n            }\n        });\n\n        return domain;\n    }\n\n\n    /**\n     * Calculates the minimum consecutive difference from the associated field data.\n     *\n     * @public\n     * @return {number} Returns the minimum consecutive diff in milliseconds.\n     */\n    minimumConsecutiveDifference () {\n        if (this._cachedMinDiff) {\n            return this._cachedMinDiff;\n        }\n\n        const sortedData = this.data().filter(item => !(item instanceof InvalidAwareTypes)).sort((a, b) => a - b);\n        const arrLn = sortedData.length;\n        let minDiff = Number.POSITIVE_INFINITY;\n        let prevDatum;\n        let nextDatum;\n        let processedCount = 0;\n\n        for (let i = 1; i < arrLn; i++) {\n            prevDatum = sortedData[i - 1];\n            nextDatum = sortedData[i];\n\n            if (nextDatum === prevDatum) {\n                continue;\n            }\n\n            minDiff = Math.min(minDiff, nextDatum - sortedData[i - 1]);\n            processedCount++;\n        }\n\n        if (!processedCount) {\n            minDiff = null;\n        }\n        this._cachedMinDiff = minDiff;\n\n        return this._cachedMinDiff;\n    }\n\n    /**\n     * Returns the format specified in the input schema while creating field.\n     *\n     * @public\n     * @return {string} Returns the datetime format.\n     */\n    format () {\n        return this.partialField.schema.format;\n    }\n\n    /**\n     * Returns the formatted version of the underlying field data.\n     *\n     * @public\n     * @override\n     * @return {Array} Returns the formatted data.\n     */\n    formattedData () {\n        const data = [];\n        rowDiffsetIterator(this.rowDiffset, (i) => {\n            const datum = this.partialField.data[i];\n            if (datum instanceof InvalidAwareTypes) {\n                data.push(datum);\n            } else {\n                data.push(DateTimeFormatter.formatAs(datum, this.format()));\n            }\n        });\n        return data;\n    }\n}\n\n","import Dimension from '../dimension';\n\n/**\n * Represents binned field subtype.\n *\n * @public\n * @class\n * @extends Dimension\n */\nexport default class Binned extends Dimension {\n    /**\n     * Calculates the corresponding field domain.\n     *\n     * @public\n     * @override\n     * @return {Array} Returns the last and first values of bins config array.\n     */\n    calculateDataDomain () {\n        const binsArr = this.partialField.schema.bins;\n        return [binsArr[0], binsArr[binsArr.length - 1]];\n    }\n\n    /**\n     * Returns the bins config provided while creating the field instance.\n     *\n     * @public\n     * @return {Array} Returns the bins array config.\n     */\n    bins () {\n        return this.partialField.schema.bins;\n    }\n}\n","import { formatNumber } from '../../utils';\nimport { defaultReducerName } from '../../operator/group-by-function';\nimport Field from '../field';\n\n/**\n * Represents measure field type.\n *\n * @public\n * @class\n * @extends Field\n */\nexport default class Measure extends Field {\n  /**\n   * Returns the domain for the measure field.\n   *\n   * @override\n   * @public\n   * @return {any} Returns the calculated domain.\n   */\n    domain () {\n        if (!this._cachedDomain) {\n            this._cachedDomain = this.calculateDataDomain();\n        }\n        return this._cachedDomain;\n    }\n\n  /**\n   * Returns the unit of the measure field.\n   *\n   * @public\n   * @return {string} Returns unit of the field.\n   */\n    unit () {\n        return this.partialField.schema.unit;\n    }\n\n  /**\n   * Returns the aggregation function name of the measure field.\n   *\n   * @public\n   * @return {string} Returns aggregation function name of the field.\n   */\n    defAggFn () {\n        return this.partialField.schema.defAggFn || defaultReducerName;\n    }\n\n  /**\n   * Returns the number format of the measure field.\n   *\n   * @public\n   * @return {Function} Returns number format of the field.\n   */\n    numberFormat () {\n        const { numberFormat } = this.partialField.schema;\n        return numberFormat instanceof Function ? numberFormat : formatNumber;\n    }\n\n  /**\n   * Calculates the corresponding field domain.\n   *\n   * @public\n   * @abstract\n   */\n    calculateDataDomain () {\n        throw new Error('Not yet implemented');\n    }\n\n    /**\n     * Returns the formatted version of the underlying field data.\n     *\n     * @public\n     * @override\n     * @return {Array} Returns the formatted data.\n     */\n    formattedData () {\n        return this.data();\n    }\n}\n","import { rowDiffsetIterator } from '../../operator/row-diffset-iterator';\nimport { MeasureSubtype } from '../../enums';\nimport Measure from '../measure';\nimport InvalidAwareTypes from '../../invalid-aware-types';\n\n/**\n * Represents continuous field subtype.\n *\n * @public\n * @class\n * @extends Measure\n */\nexport default class Continuous extends Measure {\n    /**\n     * Returns the subtype of the field.\n     *\n     * @public\n     * @override\n     * @return {string} Returns the subtype of the field.\n     */\n    subtype () {\n        return MeasureSubtype.CONTINUOUS;\n    }\n\n    /**\n     * Calculates the corresponding field domain.\n     *\n     * @public\n     * @override\n     * @return {Array} Returns the min and max values.\n     */\n    calculateDataDomain () {\n        let min = Number.POSITIVE_INFINITY;\n        let max = Number.NEGATIVE_INFINITY;\n\n        // here don't use this.data() as the iteration will be occurred two times on same data.\n        rowDiffsetIterator(this.rowDiffset, (i) => {\n            const datum = this.partialField.data[i];\n            if (datum instanceof InvalidAwareTypes) {\n                return;\n            }\n\n            if (datum < min) {\n                min = datum;\n            }\n            if (datum > max) {\n                max = datum;\n            }\n        });\n\n        return [min, max];\n    }\n}\n","/**\n * A interface to represent a parser which is responsible to parse the field.\n *\n * @public\n * @interface\n */\nexport default class FieldParser {\n    /**\n     * Parses a single value of a field and return the sanitized form.\n     *\n     * @public\n     * @abstract\n     */\n    parse () {\n        throw new Error('Not yet implemented');\n    }\n}\n","import FieldParser from '../field-parser';\nimport InvalidAwareTypes from '../../../invalid-aware-types';\n\n/**\n * A FieldParser which parses the categorical values.\n *\n * @public\n * @class\n * @implements {FieldParser}\n */\nexport default class CategoricalParser extends FieldParser {\n  /**\n   * Parses a single value of a field and returns the stringified form.\n   *\n   * @public\n   * @param {string|number} val - The value of the field.\n   * @return {string} Returns the stringified value.\n   */\n    parse (val) {\n        let result;\n        // check if invalid date value\n        if (!InvalidAwareTypes.isInvalid(val)) {\n            result = String(val).trim();\n        } else {\n            result = InvalidAwareTypes.getInvalidType(val);\n        }\n        return result;\n    }\n}\n","import { DateTimeFormatter } from '../../../utils';\nimport FieldParser from '../field-parser';\nimport InvalidAwareTypes from '../../../invalid-aware-types';\n\n/**\n * A FieldParser which parses the temporal values.\n *\n * @public\n * @class\n * @implements {FieldParser}\n */\nexport default class TemporalParser extends FieldParser {\n    /**\n     * Initialize a new instance.\n     *\n     * @public\n     * @param {Object} schema - The schema object for the corresponding field.\n     */\n    constructor (schema) {\n        super();\n        this.schema = schema;\n        this._dtf = new DateTimeFormatter(this.schema.format);\n    }\n\n    /**\n     * Parses a single value of a field and returns the millisecond value.\n     *\n     * @public\n     * @param {string|number} val - The value of the field.\n     * @return {number} Returns the millisecond value.\n     */\n    parse (val) {\n        let result;\n        // check if invalid date value\n        if (!InvalidAwareTypes.isInvalid(val)) {\n            let nativeDate = this._dtf.getNativeDate(val);\n            result = nativeDate ? nativeDate.getTime() : InvalidAwareTypes.NA;\n        } else {\n            result = InvalidAwareTypes.getInvalidType(val);\n        }\n        return result;\n    }\n}\n","import FieldParser from '../field-parser';\nimport InvalidAwareTypes from '../../../invalid-aware-types';\n\n/**\n * A FieldParser which parses the binned values.\n *\n * @public\n * @class\n * @implements {FieldParser}\n */\nexport default class BinnedParser extends FieldParser {\n  /**\n   * Parses a single binned value of a field and returns the sanitized value.\n   *\n   * @public\n   * @param {string} val - The value of the field.\n   * @return {string} Returns the sanitized value.\n   */\n    parse (val) {\n        const regex = /^\\s*([+-]?\\d+(?:\\.\\d+)?)\\s*-\\s*([+-]?\\d+(?:\\.\\d+)?)\\s*$/;\n        val = String(val);\n        let result;\n        // check if invalid date value\n        if (!InvalidAwareTypes.isInvalid(val)) {\n            let matched = val.match(regex);\n            result = matched ? `${Number.parseFloat(matched[1])}-${Number.parseFloat(matched[2])}`\n                             : InvalidAwareTypes.NA;\n        } else {\n            result = InvalidAwareTypes.getInvalidType(val);\n        }\n        return result;\n    }\n}\n","import FieldParser from '../field-parser';\nimport InvalidAwareTypes from '../../../invalid-aware-types';\n\n/**\n * A FieldParser which parses the continuous values.\n *\n * @public\n * @class\n * @implements {FieldParser}\n */\nexport default class ContinuousParser extends FieldParser {\n  /**\n   * Parses a single value of a field and returns the number form.\n   *\n   * @public\n   * @param {string|number} val - The value of the field.\n   * @return {string} Returns the number value.\n   */\n    parse (val) {\n        let result;\n        // check if invalid date value\n        if (!InvalidAwareTypes.isInvalid(val)) {\n            let parsedVal = parseFloat(val, 10);\n            result = Number.isNaN(parsedVal) ? InvalidAwareTypes.NA : parsedVal;\n        } else {\n            result = InvalidAwareTypes.getInvalidType(val);\n        }\n        return result;\n    }\n}\n","/**\n * Stores the full data and the metadata of a field. It provides\n * a single source of data from which the future Field\n * instance can get a subset of it with a rowDiffset config.\n *\n * @class\n * @public\n */\nexport default class PartialField {\n    /**\n     * Initialize a new instance.\n     *\n     * @public\n     * @param {string} name - The name of the field.\n     * @param {Array} data - The data array.\n     * @param {Object} schema - The schema object of the corresponding field.\n     * @param {FieldParser} parser - The parser instance corresponding to that field.\n     */\n    constructor (name, data, schema, parser) {\n        this.name = name;\n        this.schema = schema;\n        this.parser = parser;\n        this.data = this._sanitize(data);\n    }\n\n    /**\n     * Sanitizes the field data.\n     *\n     * @private\n     * @param {Array} data - The actual input data.\n     * @return {Array} Returns the sanitized data.\n     */\n    _sanitize (data) {\n        return data.map(datum => this.parser.parse(datum));\n    }\n}\n","import { FieldType, DimensionSubtype, MeasureSubtype } from './enums';\nimport {\n    Categorical,\n    Temporal,\n    Binned,\n    Continuous,\n    CategoricalParser,\n    TemporalParser,\n    BinnedParser,\n    ContinuousParser,\n    PartialField\n} from './fields';\n\n/**\n * Creates a field instance according to the provided data and schema.\n *\n * @param {Array} data - The field data array.\n * @param {Object} schema - The field schema object.\n * @return {Field} Returns the newly created field instance.\n */\nfunction createUnitField(data, schema) {\n    data = data || [];\n    let partialField;\n\n    switch (schema.type) {\n    case FieldType.MEASURE:\n        switch (schema.subtype) {\n        case MeasureSubtype.CONTINUOUS:\n            partialField = new PartialField(schema.name, data, schema, new ContinuousParser());\n            return new Continuous(partialField, `0-${data.length - 1}`);\n        default:\n            partialField = new PartialField(schema.name, data, schema, new ContinuousParser());\n            return new Continuous(partialField, `0-${data.length - 1}`);\n        }\n    case FieldType.DIMENSION:\n        switch (schema.subtype) {\n        case DimensionSubtype.CATEGORICAL:\n            partialField = new PartialField(schema.name, data, schema, new CategoricalParser());\n            return new Categorical(partialField, `0-${data.length - 1}`);\n        case DimensionSubtype.TEMPORAL:\n            partialField = new PartialField(schema.name, data, schema, new TemporalParser(schema));\n            return new Temporal(partialField, `0-${data.length - 1}`);\n        case DimensionSubtype.BINNED:\n            partialField = new PartialField(schema.name, data, schema, new BinnedParser());\n            return new Binned(partialField, `0-${data.length - 1}`);\n        default:\n            partialField = new PartialField(schema.name, data, schema, new CategoricalParser());\n            return new Categorical(partialField, `0-${data.length - 1}`);\n        }\n    default:\n        partialField = new PartialField(schema.name, data, schema, new CategoricalParser());\n        return new Categorical(partialField, `0-${data.length - 1}`);\n    }\n}\n\n\n/**\n * Creates a field instance from partialField and rowDiffset.\n *\n * @param {PartialField} partialField - The corresponding partial field.\n * @param {string} rowDiffset - The data subset config.\n * @return {Field} Returns the newly created field instance.\n */\nexport function createUnitFieldFromPartial(partialField, rowDiffset) {\n    const { schema } = partialField;\n\n    switch (schema.type) {\n    case FieldType.MEASURE:\n        switch (schema.subtype) {\n        case MeasureSubtype.CONTINUOUS:\n            return new Continuous(partialField, rowDiffset);\n        default:\n            return new Continuous(partialField, rowDiffset);\n        }\n    case FieldType.DIMENSION:\n        switch (schema.subtype) {\n        case DimensionSubtype.CATEGORICAL:\n            return new Categorical(partialField, rowDiffset);\n        case DimensionSubtype.TEMPORAL:\n            return new Temporal(partialField, rowDiffset);\n        case DimensionSubtype.BINNED:\n            return new Binned(partialField, rowDiffset);\n        default:\n            return new Categorical(partialField, rowDiffset);\n        }\n    default:\n        return new Categorical(partialField, rowDiffset);\n    }\n}\n\n/**\n * Creates the field instances with input data and schema.\n *\n * @param {Array} dataColumn - The data array for fields.\n * @param {Array} schema - The schema array for fields.\n * @param {Array} headers - The array of header names.\n * @return {Array.<Field>} Returns an array of newly created field instances.\n */\nexport function createFields(dataColumn, schema, headers) {\n    const headersObj = {};\n\n    if (!(headers && headers.length)) {\n        headers = schema.map(item => item.name);\n    }\n\n    headers.forEach((header, i) => {\n        headersObj[header] = i;\n    });\n\n    return schema.map(item => createUnitField(dataColumn[headersObj[item.name]], item));\n}\n","import { DataFormat } from './enums';\n\nexport default {\n    dataFormat: DataFormat.AUTO\n};\n","import { columnMajor } from '../utils';\n\n/**\n * Parses and converts data formatted in DSV array to a manageable internal format.\n *\n * @param {Array.<Array>} arr - A 2D array containing of the DSV data.\n * @param {Object} options - Option to control the behaviour of the parsing.\n * @param {boolean} [options.firstRowHeader=true] - Whether the first row of the dsv data is header or not.\n * @return {Array} Returns an array of headers and column major data.\n * @example\n *\n * // Sample input data:\n * const data = [\n *    [\"a\", \"b\", \"c\"],\n *    [1, 2, 3],\n *    [4, 5, 6],\n *    [7, 8, 9]\n * ];\n */\nfunction DSVArr (arr, options) {\n    const defaultOption = {\n        firstRowHeader: true,\n    };\n    options = Object.assign({}, defaultOption, options);\n\n    let header;\n    const columns = [];\n    const push = columnMajor(columns);\n\n    if (options.firstRowHeader) {\n        // If header present then mutate the array.\n        // Do in-place mutation to save space.\n        header = arr.splice(0, 1)[0];\n    } else {\n        header = [];\n    }\n\n    arr.forEach(field => push(...field));\n\n    return [header, columns];\n}\n\nexport default DSVArr;\n","var EOL = {},\n    EOF = {},\n    QUOTE = 34,\n    NEWLINE = 10,\n    RETURN = 13;\n\nfunction objectConverter(columns) {\n  return new Function(\"d\", \"return {\" + columns.map(function(name, i) {\n    return JSON.stringify(name) + \": d[\" + i + \"]\";\n  }).join(\",\") + \"}\");\n}\n\nfunction customConverter(columns, f) {\n  var object = objectConverter(columns);\n  return function(row, i) {\n    return f(object(row), i, columns);\n  };\n}\n\n// Compute unique columns in order of discovery.\nfunction inferColumns(rows) {\n  var columnSet = Object.create(null),\n      columns = [];\n\n  rows.forEach(function(row) {\n    for (var column in row) {\n      if (!(column in columnSet)) {\n        columns.push(columnSet[column] = column);\n      }\n    }\n  });\n\n  return columns;\n}\n\nexport default function(delimiter) {\n  var reFormat = new RegExp(\"[\\\"\" + delimiter + \"\\n\\r]\"),\n      DELIMITER = delimiter.charCodeAt(0);\n\n  function parse(text, f) {\n    var convert, columns, rows = parseRows(text, function(row, i) {\n      if (convert) return convert(row, i - 1);\n      columns = row, convert = f ? customConverter(row, f) : objectConverter(row);\n    });\n    rows.columns = columns || [];\n    return rows;\n  }\n\n  function parseRows(text, f) {\n    var rows = [], // output rows\n        N = text.length,\n        I = 0, // current character index\n        n = 0, // current line number\n        t, // current token\n        eof = N <= 0, // current token followed by EOF?\n        eol = false; // current token followed by EOL?\n\n    // Strip the trailing newline.\n    if (text.charCodeAt(N - 1) === NEWLINE) --N;\n    if (text.charCodeAt(N - 1) === RETURN) --N;\n\n    function token() {\n      if (eof) return EOF;\n      if (eol) return eol = false, EOL;\n\n      // Unescape quotes.\n      var i, j = I, c;\n      if (text.charCodeAt(j) === QUOTE) {\n        while (I++ < N && text.charCodeAt(I) !== QUOTE || text.charCodeAt(++I) === QUOTE);\n        if ((i = I) >= N) eof = true;\n        else if ((c = text.charCodeAt(I++)) === NEWLINE) eol = true;\n        else if (c === RETURN) { eol = true; if (text.charCodeAt(I) === NEWLINE) ++I; }\n        return text.slice(j + 1, i - 1).replace(/\"\"/g, \"\\\"\");\n      }\n\n      // Find next delimiter or newline.\n      while (I < N) {\n        if ((c = text.charCodeAt(i = I++)) === NEWLINE) eol = true;\n        else if (c === RETURN) { eol = true; if (text.charCodeAt(I) === NEWLINE) ++I; }\n        else if (c !== DELIMITER) continue;\n        return text.slice(j, i);\n      }\n\n      // Return last token before EOF.\n      return eof = true, text.slice(j, N);\n    }\n\n    while ((t = token()) !== EOF) {\n      var row = [];\n      while (t !== EOL && t !== EOF) row.push(t), t = token();\n      if (f && (row = f(row, n++)) == null) continue;\n      rows.push(row);\n    }\n\n    return rows;\n  }\n\n  function format(rows, columns) {\n    if (columns == null) columns = inferColumns(rows);\n    return [columns.map(formatValue).join(delimiter)].concat(rows.map(function(row) {\n      return columns.map(function(column) {\n        return formatValue(row[column]);\n      }).join(delimiter);\n    })).join(\"\\n\");\n  }\n\n  function formatRows(rows) {\n    return rows.map(formatRow).join(\"\\n\");\n  }\n\n  function formatRow(row) {\n    return row.map(formatValue).join(delimiter);\n  }\n\n  function formatValue(text) {\n    return text == null ? \"\"\n        : reFormat.test(text += \"\") ? \"\\\"\" + text.replace(/\"/g, \"\\\"\\\"\") + \"\\\"\"\n        : text;\n  }\n\n  return {\n    parse: parse,\n    parseRows: parseRows,\n    format: format,\n    formatRows: formatRows\n  };\n}\n","import dsv from \"./dsv\";\n\nvar csv = dsv(\",\");\n\nexport var csvParse = csv.parse;\nexport var csvParseRows = csv.parseRows;\nexport var csvFormat = csv.format;\nexport var csvFormatRows = csv.formatRows;\n","import dsv from \"./dsv\";\n\nvar tsv = dsv(\"\\t\");\n\nexport var tsvParse = tsv.parse;\nexport var tsvParseRows = tsv.parseRows;\nexport var tsvFormat = tsv.format;\nexport var tsvFormatRows = tsv.formatRows;\n","import { dsvFormat as d3Dsv } from 'd3-dsv';\nimport DSVArr from './dsv-arr';\n\n/**\n * Parses and converts data formatted in DSV string to a manageable internal format.\n *\n * @todo Support to be given for https://tools.ietf.org/html/rfc4180.\n * @todo Sample implementation https://github.com/knrz/CSV.js/.\n *\n * @param {string} str - The input DSV string.\n * @param {Object} options - Option to control the behaviour of the parsing.\n * @param {boolean} [options.firstRowHeader=true] - Whether the first row of the dsv string data is header or not.\n * @param {string} [options.fieldSeparator=\",\"] - The separator of two consecutive field.\n * @return {Array} Returns an array of headers and column major data.\n * @example\n *\n * // Sample input data:\n * const data = `\n * a,b,c\n * 1,2,3\n * 4,5,6\n * 7,8,9\n * `\n */\nfunction DSVStr (str, options) {\n    const defaultOption = {\n        firstRowHeader: true,\n        fieldSeparator: ','\n    };\n    options = Object.assign({}, defaultOption, options);\n\n    const dsv = d3Dsv(options.fieldSeparator);\n    return DSVArr(dsv.parseRows(str), options);\n}\n\nexport default DSVStr;\n","import { columnMajor } from '../utils';\n\n/**\n * Parses and converts data formatted in JSON to a manageable internal format.\n *\n * @param {Array.<Object>} arr - The input data formatted in JSON.\n * @return {Array.<Object>} Returns an array of headers and column major data.\n * @example\n *\n * // Sample input data:\n * const data = [\n *    {\n *      \"a\": 1,\n *      \"b\": 2,\n *      \"c\": 3\n *    },\n *    {\n *      \"a\": 4,\n *      \"b\": 5,\n *      \"c\": 6\n *    },\n *    {\n *      \"a\": 7,\n *      \"b\": 8,\n *      \"c\": 9\n *    }\n * ];\n */\nfunction FlatJSON (arr) {\n    const header = {};\n    let i = 0;\n    let insertionIndex;\n    const columns = [];\n    const push = columnMajor(columns);\n\n    arr.forEach((item) => {\n        const fields = [];\n        for (let key in item) {\n            if (key in header) {\n                insertionIndex = header[key];\n            } else {\n                header[key] = i++;\n                insertionIndex = i - 1;\n            }\n            fields[insertionIndex] = item[key];\n        }\n        push(...fields);\n    });\n\n    return [Object.keys(header), columns];\n}\n\nexport default FlatJSON;\n","import FlatJSON from './flat-json';\nimport DSVArr from './dsv-arr';\nimport DSVStr from './dsv-str';\nimport { detectDataFormat } from '../utils';\n\n/**\n * Parses the input data and detect the format automatically.\n *\n * @param {string|Array} data - The input data.\n * @param {Object} options - An optional config specific to data format.\n * @return {Array.<Object>} Returns an array of headers and column major data.\n */\nfunction Auto (data, options) {\n    const converters = { FlatJSON, DSVStr, DSVArr };\n    const dataFormat = detectDataFormat(data);\n\n    if (!dataFormat) {\n        throw new Error('Couldn\\'t detect the data format');\n    }\n\n    return converters[dataFormat](data, options);\n}\n\nexport default Auto;\n","import { FieldType, FilteringMode, DimensionSubtype, MeasureSubtype, DataFormat } from './enums';\nimport fieldStore from './field-store';\nimport Value from './value';\nimport {\n    rowDiffsetIterator\n} from './operator';\nimport { DM_DERIVATIVES, LOGICAL_OPERATORS } from './constants';\nimport { createFields, createUnitFieldFromPartial } from './field-creator';\nimport defaultConfig from './default-config';\nimport * as converter from './converter';\nimport { extend2, detectDataFormat } from './utils';\n\n/**\n * Prepares the selection data.\n */\nfunction prepareSelectionData (fields, i) {\n    const resp = {};\n    for (let field of fields) {\n        resp[field.name()] = new Value(field.partialField.data[i], field);\n    }\n    return resp;\n}\n\nexport function prepareJoinData (fields) {\n    const resp = {};\n    Object.keys(fields).forEach((key) => { resp[key] = new Value(fields[key], key); });\n    return resp;\n}\n\nexport const updateFields = ([rowDiffset, colIdentifier], partialFieldspace, fieldStoreName) => {\n    let collID = colIdentifier.length ? colIdentifier.split(',') : [];\n    let partialFieldMap = partialFieldspace.fieldsObj();\n    let newFields = collID.map(coll => createUnitFieldFromPartial(partialFieldMap[coll].partialField, rowDiffset));\n    return fieldStore.createNamespace(newFields, fieldStoreName);\n};\n\nexport const persistCurrentDerivation = (model, operation, config = {}, criteriaFn) => {\n    if (operation === DM_DERIVATIVES.COMPOSE) {\n        model._derivation.length = 0;\n        model._derivation.push(...criteriaFn);\n    } else {\n        model._derivation.push({\n            op: operation,\n            meta: config,\n            criteria: criteriaFn\n        });\n    }\n};\n\nexport const persistAncestorDerivation = (sourceDm, newDm) => {\n    newDm._ancestorDerivation.push(...sourceDm._ancestorDerivation, ...sourceDm._derivation);\n};\n\nexport const persistDerivations = (sourceDm, model, operation, config = {}, criteriaFn) => {\n    persistCurrentDerivation(model, operation, config, criteriaFn);\n    persistAncestorDerivation(sourceDm, model);\n};\n\nexport const selectHelper = (rowDiffset, fields, selectFn, config, sourceDm) => {\n    const newRowDiffSet = [];\n    let lastInsertedValue = -1;\n    let { mode } = config;\n    let li;\n    let cachedStore = {};\n    let cloneProvider = () => sourceDm.detachedRoot();\n    const selectorHelperFn = index => selectFn(\n        prepareSelectionData(fields, index),\n        index,\n        cloneProvider,\n        cachedStore\n    );\n\n    let checker;\n    if (mode === FilteringMode.INVERSE) {\n        checker = index => !selectorHelperFn(index);\n    } else {\n        checker = index => selectorHelperFn(index);\n    }\n\n    rowDiffsetIterator(rowDiffset, (i) => {\n        if (checker(i)) {\n            if (lastInsertedValue !== -1 && i === (lastInsertedValue + 1)) {\n                li = newRowDiffSet.length - 1;\n                newRowDiffSet[li] = `${newRowDiffSet[li].split('-')[0]}-${i}`;\n            } else {\n                newRowDiffSet.push(`${i}`);\n            }\n            lastInsertedValue = i;\n        }\n    });\n    return newRowDiffSet.join(',');\n};\n\nexport const cloneWithAllFields = (model) => {\n    const clonedDm = model.clone(false);\n    const partialFieldspace = model.getPartialFieldspace();\n    clonedDm._colIdentifier = partialFieldspace.fields.map(f => f.name()).join(',');\n\n    // flush out cached namespace values on addition of new fields\n    partialFieldspace._cachedFieldsObj = null;\n    partialFieldspace._cachedDimension = null;\n    partialFieldspace._cachedMeasure = null;\n    clonedDm.__calculateFieldspace().calculateFieldsConfig();\n\n    return clonedDm;\n};\n\nexport const filterPropagationModel = (model, propModels, config = {}) => {\n    const operation = config.operation || LOGICAL_OPERATORS.AND;\n    const filterByMeasure = config.filterByMeasure || false;\n    let fns = [];\n    if (!propModels.length) {\n        fns = [() => false];\n    } else {\n        fns = propModels.map(propModel => ((dataModel) => {\n            const dataObj = dataModel.getData();\n            const schema = dataObj.schema;\n            const fieldsConfig = dataModel.getFieldsConfig();\n            const fieldsSpace = dataModel.getFieldspace().fieldsObj();\n            const data = dataObj.data;\n            const domain = Object.values(fieldsConfig).reduce((acc, v) => {\n                acc[v.def.name] = fieldsSpace[v.def.name].domain();\n                return acc;\n            }, {});\n\n            return (fields) => {\n                const include = !data.length ? false : data.some(row => schema.every((propField) => {\n                    if (!(propField.name in fields)) {\n                        return true;\n                    }\n                    const value = fields[propField.name].valueOf();\n                    if (filterByMeasure && propField.type === FieldType.MEASURE) {\n                        return value >= domain[propField.name][0] && value <= domain[propField.name][1];\n                    }\n\n                    if (propField.type !== FieldType.DIMENSION) {\n                        return true;\n                    }\n                    const idx = fieldsConfig[propField.name].index;\n                    return row[idx] === fields[propField.name].valueOf();\n                }));\n                return include;\n            };\n        })(propModel));\n    }\n\n    let filteredModel;\n    if (operation === LOGICAL_OPERATORS.AND) {\n        filteredModel = cloneWithAllFields(model).select(fields => fns.every(fn => fn(fields)), {\n            saveChild: false,\n            mode: FilteringMode.ALL\n        });\n    } else {\n        filteredModel = cloneWithAllFields(model).select(fields => fns.some(fn => fn(fields)), {\n            mode: FilteringMode.ALL,\n            saveChild: false\n        });\n    }\n\n    return filteredModel;\n};\n\nexport const cloneWithSelect = (sourceDm, selectFn, selectConfig, cloneConfig) => {\n    const cloned = sourceDm.clone(cloneConfig.saveChild);\n    const rowDiffset = selectHelper(\n        cloned._rowDiffset,\n        cloned.getPartialFieldspace().fields,\n        selectFn,\n        selectConfig,\n        sourceDm\n    );\n    cloned._rowDiffset = rowDiffset;\n    cloned.__calculateFieldspace().calculateFieldsConfig();\n\n    persistDerivations(\n        sourceDm,\n        cloned,\n        DM_DERIVATIVES.SELECT,\n         { config: selectConfig },\n          selectFn\n    );\n\n    return cloned;\n};\n\nexport const cloneWithProject = (sourceDm, projField, config, allFields) => {\n    const cloned = sourceDm.clone(config.saveChild);\n    let projectionSet = projField;\n    if (config.mode === FilteringMode.INVERSE) {\n        projectionSet = allFields.filter(fieldName => projField.indexOf(fieldName) === -1);\n    }\n    // cloned._colIdentifier = sourceDm._colIdentifier.split(',')\n    //                         .filter(coll => projectionSet.indexOf(coll) !== -1).join();\n    cloned._colIdentifier = projectionSet.join(',');\n    cloned.__calculateFieldspace().calculateFieldsConfig();\n\n    persistDerivations(\n        sourceDm,\n        cloned,\n        DM_DERIVATIVES.PROJECT,\n        { projField, config, actualProjField: projectionSet },\n        null\n    );\n\n    return cloned;\n};\n\nexport const sanitizeUnitSchema = (unitSchema) => {\n    // Do deep clone of the unit schema as the user might change it later.\n    unitSchema = extend2({}, unitSchema);\n    if (!unitSchema.type) {\n        unitSchema.type = FieldType.DIMENSION;\n    }\n\n    if (!unitSchema.subtype) {\n        switch (unitSchema.type) {\n        case FieldType.MEASURE:\n            unitSchema.subtype = MeasureSubtype.CONTINUOUS;\n            break;\n        default:\n        case FieldType.DIMENSION:\n            unitSchema.subtype = DimensionSubtype.CATEGORICAL;\n            break;\n        }\n    }\n\n    return unitSchema;\n};\n\nexport const validateUnitSchema = (unitSchema) => {\n    const supportedMeasureSubTypes = [MeasureSubtype.CONTINUOUS];\n    const supportedDimSubTypes = [\n        DimensionSubtype.CATEGORICAL,\n        DimensionSubtype.BINNED,\n        DimensionSubtype.TEMPORAL,\n        DimensionSubtype.GEO\n    ];\n    const { type, subtype } = unitSchema;\n\n    switch (type) {\n    case FieldType.DIMENSION:\n        if (supportedDimSubTypes.indexOf(subtype) === -1) {\n            throw new Error(`DataModel doesn't support field subtype: ${subtype}`);\n        }\n        break;\n    case FieldType.MEASURE:\n        if (supportedMeasureSubTypes.indexOf(subtype) === -1) {\n            throw new Error(`DataModel doesn't support field subtype: ${subtype}`);\n        }\n        break;\n    default:\n        throw new Error(`DataModel doesn't support field type: ${type}`);\n    }\n};\n\nexport const sanitizeAndValidateSchema = schema => schema.map((unitSchema) => {\n    unitSchema = sanitizeUnitSchema(unitSchema);\n    validateUnitSchema(unitSchema);\n    return unitSchema;\n});\n\nexport const resolveFieldName = (schema, dataHeader) => {\n    schema.forEach((unitSchema) => {\n        const fieldNameAs = unitSchema.as;\n        if (!fieldNameAs) { return; }\n\n        const idx = dataHeader.indexOf(unitSchema.name);\n        dataHeader[idx] = fieldNameAs;\n        unitSchema.name = fieldNameAs;\n        delete unitSchema.as;\n    });\n};\n\nexport const updateData = (relation, data, schema, options) => {\n    schema = sanitizeAndValidateSchema(schema);\n    options = Object.assign(Object.assign({}, defaultConfig), options);\n    const converterFn = converter[options.dataFormat];\n\n    if (!(converterFn && typeof converterFn === 'function')) {\n        throw new Error(`No converter function found for ${options.dataFormat} format`);\n    }\n\n    const [header, formattedData] = converterFn(data, options);\n    resolveFieldName(schema, header);\n    const fieldArr = createFields(formattedData, schema, header);\n\n    // This will create a new fieldStore with the fields\n    const nameSpace = fieldStore.createNamespace(fieldArr, options.name);\n    relation._partialFieldspace = nameSpace;\n    // If data is provided create the default colIdentifier and rowDiffset\n    relation._rowDiffset = formattedData.length && formattedData[0].length ? `0-${formattedData[0].length - 1}` : '';\n    relation._colIdentifier = (schema.map(_ => _.name)).join();\n    relation._dataFormat = options.dataFormat === DataFormat.AUTO ? detectDataFormat(data) : options.dataFormat;\n    return relation;\n};\n\nexport const fieldInSchema = (schema, field) => {\n    let i = 0;\n\n    for (; i < schema.length; ++i) {\n        if (field === schema[i].name) {\n            return {\n                type: schema[i].subtype || schema[i].type,\n                index: i\n            };\n        }\n    }\n    return null;\n};\n\n\nexport const getDerivationArguments = (derivation) => {\n    let params = [];\n    let operation;\n    operation = derivation.op;\n    switch (operation) {\n    case DM_DERIVATIVES.SELECT:\n        params = [derivation.criteria];\n        break;\n    case DM_DERIVATIVES.PROJECT:\n        params = [derivation.meta.actualProjField];\n        break;\n    case DM_DERIVATIVES.GROUPBY:\n        operation = 'groupBy';\n        params = [derivation.meta.groupByString.split(','), derivation.criteria];\n        break;\n    default:\n        operation = null;\n    }\n\n    return {\n        operation,\n        params\n    };\n};\n\nconst applyExistingOperationOnModel = (propModel, dataModel) => {\n    const derivations = dataModel.getDerivations();\n    let selectionModel = propModel[0];\n    let rejectionModel = propModel[1];\n\n    derivations.forEach((derivation) => {\n        if (!derivation) {\n            return;\n        }\n\n        const { operation, params } = getDerivationArguments(derivation);\n        if (operation) {\n            selectionModel = selectionModel[operation](...params, {\n                saveChild: false\n            });\n            rejectionModel = rejectionModel[operation](...params, {\n                saveChild: false\n            });\n        }\n    });\n\n    return [selectionModel, rejectionModel];\n};\n\nconst getFilteredModel = (propModel, path) => {\n    for (let i = 0, len = path.length; i < len; i++) {\n        const model = path[i];\n        propModel = applyExistingOperationOnModel(propModel, model);\n    }\n    return propModel;\n};\n\nconst propagateIdentifiers = (dataModel, propModel, config = {}, propModelInf = {}) => {\n    const nonTraversingModel = propModelInf.nonTraversingModel;\n    const excludeModels = propModelInf.excludeModels || [];\n\n    if (dataModel === nonTraversingModel) {\n        return;\n    }\n\n    const propagate = excludeModels.length ? excludeModels.indexOf(dataModel) === -1 : true;\n\n    propagate && dataModel.handlePropagation(propModel, config);\n\n    const children = dataModel._children;\n    children.forEach((child) => {\n        let [selectionModel, rejectionModel] = applyExistingOperationOnModel(propModel, child);\n        propagateIdentifiers(child, [selectionModel, rejectionModel], config, propModelInf);\n    });\n};\n\nexport const getRootGroupByModel = (model) => {\n    while (model._parent && model._derivation.find(d => d.op !== DM_DERIVATIVES.GROUPBY)) {\n        model = model._parent;\n    }\n    return model;\n};\n\nexport const getRootDataModel = (model) => {\n    while (model._parent) {\n        model = model._parent;\n    }\n    return model;\n};\n\nexport const getPathToRootModel = (model, path = []) => {\n    while (model._parent) {\n        path.push(model);\n        model = model._parent;\n    }\n    return path;\n};\n\nexport const propagateToAllDataModels = (identifiers, rootModels, propagationInf, config) => {\n    let criteria;\n    let propModel;\n    const { propagationNameSpace, propagateToSource } = propagationInf;\n    const propagationSourceId = propagationInf.sourceId;\n    const propagateInterpolatedValues = config.propagateInterpolatedValues;\n    const filterFn = (entry) => {\n        const filter = config.filterFn || (() => true);\n        return filter(entry, config);\n    };\n\n    let criterias = [];\n\n    if (identifiers === null && config.persistent !== true) {\n        criterias = [{\n            criteria: []\n        }];\n    } else {\n        let actionCriterias = Object.values(propagationNameSpace.mutableActions);\n        if (propagateToSource !== false) {\n            actionCriterias = actionCriterias.filter(d => d.config.sourceId !== propagationSourceId);\n        }\n\n        const filteredCriteria = actionCriterias.filter(filterFn).map(action => action.config.criteria);\n\n        const excludeModels = [];\n\n        if (propagateToSource !== false) {\n            const sourceActionCriterias = Object.values(propagationNameSpace.mutableActions);\n\n            sourceActionCriterias.forEach((actionInf) => {\n                const actionConf = actionInf.config;\n                if (actionConf.applyOnSource === false && actionConf.action === config.action &&\n                        actionConf.sourceId !== propagationSourceId) {\n                    excludeModels.push(actionInf.model);\n                    criteria = sourceActionCriterias.filter(d => d !== actionInf).map(d => d.config.criteria);\n                    criteria.length && criterias.push({\n                        criteria,\n                        models: actionInf.model,\n                        path: getPathToRootModel(actionInf.model)\n                    });\n                }\n            });\n        }\n\n\n        criteria = [].concat(...[...filteredCriteria, identifiers]).filter(d => d !== null);\n        criterias.push({\n            criteria,\n            excludeModels: [...excludeModels, ...config.excludeModels || []]\n        });\n    }\n\n    const rootModel = rootModels.model;\n\n    const propConfig = Object.assign({\n        sourceIdentifiers: identifiers,\n        propagationSourceId\n    }, config);\n\n    const rootGroupByModel = rootModels.groupByModel;\n    if (propagateInterpolatedValues && rootGroupByModel) {\n        propModel = filterPropagationModel(rootGroupByModel, criteria, {\n            filterByMeasure: propagateInterpolatedValues\n        });\n        propagateIdentifiers(rootGroupByModel, propModel, propConfig);\n    }\n\n    criterias.forEach((inf) => {\n        const propagationModel = filterPropagationModel(rootModel, inf.criteria);\n        const path = inf.path;\n\n        if (path) {\n            const filteredModel = getFilteredModel(propagationModel, path.reverse());\n            inf.models.handlePropagation(filteredModel, propConfig);\n        } else {\n            propagateIdentifiers(rootModel, propagationModel, propConfig, {\n                excludeModels: inf.excludeModels,\n                nonTraversingModel: propagateInterpolatedValues && rootGroupByModel\n            });\n        }\n    });\n};\n\nexport const propagateImmutableActions = (propagationNameSpace, rootModels, propagationInf) => {\n    const immutableActions = propagationNameSpace.immutableActions;\n\n    for (const action in immutableActions) {\n        const actionInf = immutableActions[action];\n        const actionConf = actionInf.config;\n        const propagationSourceId = propagationInf.config.sourceId;\n        const filterImmutableAction = propagationInf.propConfig.filterImmutableAction ?\n            propagationInf.propConfig.filterImmutableAction(actionConf, propagationInf.config) : true;\n        if (actionConf.sourceId !== propagationSourceId && filterImmutableAction) {\n            const criteriaModel = actionConf.criteria;\n            propagateToAllDataModels(criteriaModel, rootModels, {\n                propagationNameSpace,\n                propagateToSource: false,\n                sourceId: propagationSourceId\n            }, actionConf);\n        }\n    }\n};\n\nexport const addToPropNamespace = (propagationNameSpace, config = {}, model) => {\n    let sourceNamespace;\n    const isMutableAction = config.isMutableAction;\n    const criteria = config.criteria;\n    const key = `${config.action}-${config.sourceId}`;\n\n    if (isMutableAction) {\n        sourceNamespace = propagationNameSpace.mutableActions;\n    } else {\n        sourceNamespace = propagationNameSpace.immutableActions;\n    }\n\n    if (criteria === null) {\n        delete sourceNamespace[key];\n    } else {\n        sourceNamespace[key] = {\n            model,\n            config\n        };\n    }\n\n    return this;\n};\n","import { FilteringMode } from './enums';\nimport { getUniqueId } from './utils';\nimport { updateFields, cloneWithSelect, cloneWithProject, updateData } from './helper';\nimport { crossProduct, difference, naturalJoinFilter, union } from './operator';\n\n/**\n * Relation provides the definitions of basic operators of relational algebra like *selection*, *projection*, *union*,\n * *difference* etc.\n *\n * It is extended by {@link DataModel} to inherit the functionalities of relational algebra concept.\n *\n * @class\n * @public\n * @module Relation\n * @namespace DataModel\n */\nclass Relation {\n\n    /**\n     * Creates a new Relation instance by providing underlying data and schema.\n     *\n     * @private\n     *\n     * @param {Object | string | Relation} data - The input tabular data in dsv or json format or\n     * an existing Relation instance object.\n     * @param {Array} schema - An array of data schema.\n     * @param {Object} [options] - The optional options.\n     */\n    constructor (...params) {\n        let source;\n\n        this._parent = null;\n        this._derivation = [];\n        this._ancestorDerivation = [];\n        this._children = [];\n\n        if (params.length === 1 && ((source = params[0]) instanceof Relation)) {\n            // parent datamodel was passed as part of source\n            this._colIdentifier = source._colIdentifier;\n            this._rowDiffset = source._rowDiffset;\n            this._dataFormat = source._dataFormat;\n            this._parent = source;\n            this._partialFieldspace = this._parent._partialFieldspace;\n            this._fieldStoreName = getUniqueId();\n            this.__calculateFieldspace().calculateFieldsConfig();\n        } else {\n            updateData(this, ...params);\n            this._fieldStoreName = this._partialFieldspace.name;\n            this.__calculateFieldspace().calculateFieldsConfig();\n            this._propagationNameSpace = {\n                mutableActions: {},\n                immutableActions: {}\n            };\n        }\n    }\n\n    /**\n     * Retrieves the {@link Schema | schema} details for every {@link Field | field} as an array.\n     *\n     * @public\n     *\n     * @return {Array.<Schema>} Array of fields schema.\n     *      ```\n     *      [\n     *          { name: 'Name', type: 'dimension' },\n     *          { name: 'Miles_per_Gallon', type: 'measure', numberFormat: (val) => `${val} miles / gallon` },\n     *          { name: 'Cylinder', type: 'dimension' },\n     *          { name: 'Displacement', type: 'measure', defAggFn: 'max' },\n     *          { name: 'HorsePower', type: 'measure', defAggFn: 'max' },\n     *          { name: 'Weight_in_lbs', type: 'measure', defAggFn: 'avg',  },\n     *          { name: 'Acceleration', type: 'measure', defAggFn: 'avg' },\n     *          { name: 'Year', type: 'dimension', subtype: 'datetime', format: '%Y' },\n     *          { name: 'Origin' }\n     *      ]\n     *      ```\n     */\n    getSchema () {\n        return this.getFieldspace().fields.map(d => d.schema());\n    }\n\n    /**\n     * Returns the name of the {@link DataModel} instance. If no name was specified during {@link DataModel}\n     * initialization, then it returns a auto-generated name.\n     *\n     * @public\n     *\n     * @return {string} Name of the DataModel instance.\n     */\n    getName() {\n        return this._fieldStoreName;\n    }\n\n    getFieldspace () {\n        return this._fieldspace;\n    }\n\n    __calculateFieldspace () {\n        this._fieldspace = updateFields([this._rowDiffset, this._colIdentifier],\n             this.getPartialFieldspace(), this._fieldStoreName);\n        return this;\n    }\n\n    getPartialFieldspace () {\n        return this._partialFieldspace;\n    }\n\n    /**\n     * Performs {@link link_of_cross_product | cross-product} between two {@link DataModel} instances and returns a\n     * new {@link DataModel} instance containing the results. This operation is also called theta join.\n     *\n     * Cross product takes two set and create one set where each value of one set is paired with each value of another\n     * set.\n     *\n     * This method takes an optional predicate which filters the generated result rows. If the predicate returns true\n     * the combined row is included in the resulatant table.\n     *\n     * @example\n     *  let originDM = dm.project(['Origin','Origin_Formal_Name']);\n     *  let carsDM = dm.project(['Name','Miles_per_Gallon','Origin'])\n     *\n     *  console.log(carsDM.join(originDM)));\n     *\n     *  console.log(carsDM.join(originDM,\n     *      obj => obj.[originDM.getName()].Origin === obj.[carsDM.getName()].Origin));\n     *\n     * @text\n     * This is chained version of `join` operator. `join` can also be used as\n     * {@link link_to_join_op | functional operator}.\n     *\n     * @public\n     *\n     * @param {DataModel} joinWith - The DataModel to be joined with the current instance DataModel.\n     * @param {SelectionPredicate} filterFn - The predicate function that will filter the result of the crossProduct.\n     *\n     * @return {DataModel} New DataModel instance created after joining.\n     */\n    join (joinWith, filterFn) {\n        return crossProduct(this, joinWith, filterFn);\n    }\n\n    /**\n     * {@link natural_join | Natural join} is a special kind of cross-product join where filtering of rows are performed\n     * internally by resolving common fields are from both table and the rows with common value are included.\n     *\n     * @example\n     *  let originDM = dm.project(['Origin','Origin_Formal_Name']);\n     *  let carsDM = dm.project(['Name','Miles_per_Gallon','Origin'])\n     *\n     *  console.log(carsDM.naturalJoin(originDM));\n     *\n     * @text\n     * This is chained version of `naturalJoin` operator. `naturalJoin` can also be used as\n     * {@link link_to_join_op | functional operator}.\n     *\n     * @public\n     *\n     * @param {DataModel} joinWith - The DataModel with which the current instance of DataModel on which the method is\n     *      called will be joined.\n     * @return {DataModel} New DataModel instance created after joining.\n     */\n    naturalJoin (joinWith) {\n        return crossProduct(this, joinWith, naturalJoinFilter(this, joinWith), true);\n    }\n\n    /**\n     * {@link link_to_union | Union} operation can be termed as vertical stacking of all rows from both the DataModel\n     * instances, provided that both of the {@link DataModel} instances should have same column names.\n     *\n     * @example\n     * console.log(EuropeanMakerDM.union(USAMakerDM));\n     *\n     * @text\n     * This is chained version of `naturalJoin` operator. `naturalJoin` can also be used as\n     * {@link link_to_join_op | functional operator}.\n     *\n     * @public\n     *\n     * @param {DataModel} unionWith - DataModel instance for which union has to be applied with the instance on which\n     *      the method is called\n     *\n     * @return {DataModel} New DataModel instance with the result of the operation\n     */\n    union (unionWith) {\n        return union(this, unionWith);\n    }\n\n    /**\n     * {@link link_to_difference | Difference } operation only include rows which are present in the datamodel on which\n     * it was called but not on the one passed as argument.\n     *\n     * @example\n     * console.log(highPowerDM.difference(highExpensiveDM));\n     *\n     * @text\n     * This is chained version of `naturalJoin` operator. `naturalJoin` can also be used as\n     * {@link link_to_join_op | functional operator}.\n     *\n     * @public\n     *\n     * @param {DataModel} differenceWith - DataModel instance for which difference has to be applied with the instance\n     *      on which the method is called\n     * @return {DataModel} New DataModel instance with the result of the operation\n     */\n    difference (differenceWith) {\n        return difference(this, differenceWith);\n    }\n\n    /**\n     * {@link link_to_selection | Selection} is a row filtering operation. It expects a predicate and an optional mode\n     * which control which all rows should be included in the resultant DataModel instance.\n     *\n     * {@link SelectionPredicate} is a function which returns a boolean value. For selection operation the selection\n     * function is called for each row of DataModel instance with the current row passed as argument.\n     *\n     * After executing {@link SelectionPredicate} the rows are labeled as either an entry of selection set or an entry\n     * of rejection set.\n     *\n     * {@link FilteringMode} operates on the selection and rejection set to determine which one would reflect in the\n     * resultant datamodel.\n     *\n     * @warning\n     * Selection and rejection set is only a logical idea for concept explanation purpose.\n     *\n     * @example\n     *  // with selection mode NORMAL:\n     *  const normDt = dt.select(fields => fields.Origin.value === \"USA\")\n     *  console.log(normDt));\n     *\n     * // with selection mode INVERSE:\n     * const inverDt = dt.select(fields => fields.Origin.value === \"USA\", { mode: DataModel.FilteringMode.INVERSE })\n     * console.log(inverDt);\n     *\n     * // with selection mode ALL:\n     * const dtArr = dt.select(fields => fields.Origin.value === \"USA\", { mode: DataModel.FilteringMode.ALL })\n     * // print the selected parts\n     * console.log(dtArr[0]);\n     * // print the inverted parts\n     * console.log(dtArr[1]);\n     *\n     * @text\n     * This is chained version of `select` operator. `select` can also be used as\n     * {@link link_to_join_op | functional operator}.\n     *\n     * @public\n     *\n     * @param {Function} selectFn - The predicate function which is called for each row with the current row.\n     * ```\n     *  function (row, i, cloneProvider, store)  { ... }\n     * ```\n     * @param {Object} config - The configuration object to control the inclusion exclusion of a row in resultant\n     * DataModel instance.\n     * @param {FilteringMode} [config.mode=FilteringMode.NORMAL] - The mode of the selection.\n     * @return {DataModel} Returns the new DataModel instance(s) after operation.\n     */\n    select (selectFn, config) {\n        const defConfig = {\n            mode: FilteringMode.NORMAL,\n            saveChild: true\n        };\n        config = Object.assign({}, defConfig, config);\n\n        const cloneConfig = { saveChild: config.saveChild };\n        let oDm;\n\n        if (config.mode === FilteringMode.ALL) {\n            const selectDm = cloneWithSelect(\n                this,\n                selectFn,\n                { mode: FilteringMode.NORMAL },\n                cloneConfig\n            );\n            const rejectDm = cloneWithSelect(\n                this,\n                selectFn,\n                { mode: FilteringMode.INVERSE },\n                cloneConfig\n            );\n            oDm = [selectDm, rejectDm];\n        } else {\n            oDm = cloneWithSelect(\n                this,\n                selectFn,\n                config,\n                cloneConfig\n            );\n        }\n\n        return oDm;\n    }\n\n    /**\n     * Retrieves a boolean value if the current {@link DataModel} instance has data.\n     *\n     * @example\n     * const schema = [\n     *    { name: 'CarName', type: 'dimension' },\n     *    { name: 'HorsePower', type: 'measure' },\n     *    { name: \"Origin\", type: 'dimension' }\n     * ];\n     * const data = [];\n     *\n     * const dt = new DataModel(data, schema);\n     * console.log(dt.isEmpty());\n     *\n     * @public\n     *\n     * @return {Boolean} True if the datamodel has no data, otherwise false.\n     */\n    isEmpty () {\n        return !this._rowDiffset.length || !this._colIdentifier.length;\n    }\n\n    /**\n     * Creates a clone from the current DataModel instance with child parent relationship.\n     *\n     * @private\n     * @param {boolean} [saveChild=true] - Whether the cloned instance would be recorded in the parent instance.\n     * @return {DataModel} - Returns the newly cloned DataModel instance.\n     */\n    clone (saveChild = true) {\n        const clonedDm = new this.constructor(this);\n        if (saveChild) {\n            clonedDm.setParent(this);\n        } else {\n            clonedDm.setParent(null);\n        }\n        return clonedDm;\n    }\n\n    /**\n     * {@link Projection} is filter column (field) operation. It expects list of fields' name and either include those\n     * or exclude those based on {@link FilteringMode} on the resultant variable.\n     *\n     * Projection expects array of fields name based on which it creates the selection and rejection set. All the field\n     * whose name is present in array goes in selection set and rest of the fields goes in rejection set.\n     *\n     * {@link FilteringMode} operates on the selection and rejection set to determine which one would reflect in the\n     * resulatant datamodel.\n     *\n     * @warning\n     * Selection and rejection set is only a logical idea for concept explanation purpose.\n     *\n     * @example\n     *  const dm = new DataModel(data, schema);\n     *\n     *  // with projection mode NORMAL:\n     *  const normDt = dt.project([\"Name\", \"HorsePower\"]);\n     *  console.log(normDt.getData());\n     *\n     *  // with projection mode INVERSE:\n     *  const inverDt = dt.project([\"Name\", \"HorsePower\"], { mode: DataModel.FilteringMode.INVERSE })\n     *  console.log(inverDt.getData());\n     *\n     *  // with selection mode ALL:\n     *  const dtArr = dt.project([\"Name\", \"HorsePower\"], { mode: DataModel.FilteringMode.ALL })\n     *  // print the normal parts\n     *  console.log(dtArr[0].getData());\n     *  // print the inverted parts\n     *  console.log(dtArr[1].getData());\n     *\n     * @text\n     * This is chained version of `select` operator. `select` can also be used as\n     * {@link link_to_join_op | functional operator}.\n     *\n     * @public\n     *\n     * @param {Array.<string | Regexp>} projField - An array of column names in string or regular expression.\n     * @param {Object} [config] - An optional config to control the creation of new DataModel\n     * @param {FilteringMode} [config.mode=FilteringMode.NORMAL] - Mode of the projection\n     *\n     * @return {DataModel} Returns the new DataModel instance after operation.\n     */\n    project (projField, config) {\n        const defConfig = {\n            mode: FilteringMode.NORMAL,\n            saveChild: true\n        };\n        config = Object.assign({}, defConfig, config);\n        const fieldConfig = this.getFieldsConfig();\n        const allFields = Object.keys(fieldConfig);\n        const { mode } = config;\n\n        let normalizedProjField = projField.reduce((acc, field) => {\n            if (field.constructor.name === 'RegExp') {\n                acc.push(...allFields.filter(fieldName => fieldName.search(field) !== -1));\n            } else if (field in fieldConfig) {\n                acc.push(field);\n            }\n            return acc;\n        }, []);\n\n        normalizedProjField = Array.from(new Set(normalizedProjField)).map(field => field.trim());\n        let dataModel;\n\n        if (mode === FilteringMode.ALL) {\n            let projectionClone = cloneWithProject(this, normalizedProjField, {\n                mode: FilteringMode.NORMAL,\n                saveChild: config.saveChild\n            }, allFields);\n            let rejectionClone = cloneWithProject(this, normalizedProjField, {\n                mode: FilteringMode.INVERSE,\n                saveChild: config.saveChild\n            }, allFields);\n            dataModel = [projectionClone, rejectionClone];\n        } else {\n            let projectionClone = cloneWithProject(this, normalizedProjField, config, allFields);\n            dataModel = projectionClone;\n        }\n\n        return dataModel;\n    }\n\n    getFieldsConfig () {\n        return this._fieldConfig;\n    }\n\n    calculateFieldsConfig () {\n        this._fieldConfig = this._fieldspace.fields.reduce((acc, fieldObj, i) => {\n            acc[fieldObj.name()] = {\n                index: i,\n                def: fieldObj.schema(),\n            };\n            return acc;\n        }, {});\n        return this;\n    }\n\n\n    /**\n     * Frees up the resources associated with the current DataModel instance and breaks all the links instance has in\n     * the DAG.\n     *\n     * @public\n     */\n    dispose () {\n        this._parent && this._parent.removeChild(this);\n        this._parent = null;\n        this._children.forEach((child) => {\n            child._parent = null;\n        });\n        this._children = [];\n    }\n\n    /**\n     * Removes the specified child {@link DataModel} from the child list of the current {@link DataModel} instance.\n     *\n     * @example\n     * const schema = [\n     *    { name: 'Name', type: 'dimension' },\n     *    { name: 'HorsePower', type: 'measure' },\n     *    { name: \"Origin\", type: 'dimension' }\n     * ];\n     *\n     * const data = [\n     *    { Name: \"chevrolet chevelle malibu\", Horsepower: 130, Origin: \"USA\" },\n     *    { Name: \"citroen ds-21 pallas\", Horsepower: 115, Origin: \"Europe\" },\n     *    { Name: \"datsun pl510\", Horsepower: 88, Origin: \"Japan\" },\n     *    { Name: \"amc rebel sst\", Horsepower: 150, Origin: \"USA\"},\n     * ]\n     *\n     * const dt = new DataModel(data, schema);\n     *\n     * const dt2 = dt.select(fields => fields.Origin.value === \"USA\")\n     * dt.removeChild(dt2);\n     *\n     * @private\n     *\n     * @param {DataModel} child - Delegates the parent to remove this child.\n     */\n    removeChild (child) {\n        let idx = this._children.findIndex(sibling => sibling === child);\n        idx !== -1 ? this._children.splice(idx, 1) : true;\n    }\n\n    /**\n     * Sets the specified {@link DataModel} as a parent for the current {@link DataModel} instance.\n     *\n     * @param {DataModel} parent - The datamodel instance which will act as parent.\n     */\n    setParent (parent) {\n        this._parent && this._parent.removeChild(this);\n        this._parent = parent;\n        parent && parent._children.push(this);\n    }\n\n    /**\n     * Returns the parent {@link DataModel} instance.\n     *\n     * @example\n     * const schema = [\n     *    { name: 'Name', type: 'dimension' },\n     *    { name: 'HorsePower', type: 'measure' },\n     *    { name: \"Origin\", type: 'dimension' }\n     * ];\n     *\n     * const data = [\n     *    { Name: \"chevrolet chevelle malibu\", Horsepower: 130, Origin: \"USA\" },\n     *    { Name: \"citroen ds-21 pallas\", Horsepower: 115, Origin: \"Europe\" },\n     *    { Name: \"datsun pl510\", Horsepower: 88, Origin: \"Japan\" },\n     *    { Name: \"amc rebel sst\", Horsepower: 150, Origin: \"USA\"},\n     * ]\n     *\n     * const dt = new DataModel(data, schema);\n     *\n     * const dt2 = dt.select(fields => fields.Origin.value === \"USA\");\n     * const parentDm = dt2.getParent();\n     *\n     * @return {DataModel} Returns the parent DataModel instance.\n     */\n    getParent () {\n        return this._parent;\n    }\n\n    /**\n     * Returns the immediate child {@link DataModel} instances.\n     *\n     * @example\n     * const schema = [\n     *    { name: 'Name', type: 'dimension' },\n     *    { name: 'HorsePower', type: 'measure' },\n     *    { name: \"Origin\", type: 'dimension' }\n     * ];\n     *\n     * const data = [\n     *    { Name: \"chevrolet chevelle malibu\", Horsepower: 130, Origin: \"USA\" },\n     *    { Name: \"citroen ds-21 pallas\", Horsepower: 115, Origin: \"Europe\" },\n     *    { Name: \"datsun pl510\", Horsepower: 88, Origin: \"Japan\" },\n     *    { Name: \"amc rebel sst\", Horsepower: 150, Origin: \"USA\"},\n     * ]\n     *\n     * const dt = new DataModel(data, schema);\n     *\n     * const childDm1 = dt.select(fields => fields.Origin.value === \"USA\");\n     * const childDm2 = dt.select(fields => fields.Origin.value === \"Japan\");\n     * const childDm3 = dt.groupBy([\"Origin\"]);\n     *\n     * @return {DataModel[]} Returns the immediate child DataModel instances.\n     */\n    getChildren () {\n        return this._children;\n    }\n\n    /**\n     * Returns the in-between operation meta data while creating the current {@link DataModel} instance.\n     *\n     * @example\n     * const schema = [\n     *   { name: 'Name', type: 'dimension' },\n     *   { name: 'HorsePower', type: 'measure' },\n     *   { name: \"Origin\", type: 'dimension' }\n     * ];\n     *\n     * const data = [\n     *   { Name: \"chevrolet chevelle malibu\", Horsepower: 130, Origin: \"USA\" },\n     *   { Name: \"citroen ds-21 pallas\", Horsepower: 115, Origin: \"Europe\" },\n     *   { Name: \"datsun pl510\", Horsepower: 88, Origin: \"Japan\" },\n     *   { Name: \"amc rebel sst\", Horsepower: 150, Origin: \"USA\"},\n     * ]\n     *\n     * const dt = new DataModel(data, schema);\n     * const dt2 = dt.select(fields => fields.Origin.value === \"USA\");\n     * const dt3 = dt2.groupBy([\"Origin\"]);\n     * const derivations = dt3.getDerivations();\n     *\n     * @return {Any[]} Returns the derivation meta data.\n     */\n    getDerivations () {\n        return this._derivation;\n    }\n\n    /**\n     * Returns the in-between operation meta data happened from root {@link DataModel} to current instance.\n     *\n     * @example\n     * const schema = [\n     *   { name: 'Name', type: 'dimension' },\n     *   { name: 'HorsePower', type: 'measure' },\n     *   { name: \"Origin\", type: 'dimension' }\n     * ];\n     *\n     * const data = [\n     *   { Name: \"chevrolet chevelle malibu\", Horsepower: 130, Origin: \"USA\" },\n     *   { Name: \"citroen ds-21 pallas\", Horsepower: 115, Origin: \"Europe\" },\n     *   { Name: \"datsun pl510\", Horsepower: 88, Origin: \"Japan\" },\n     *   { Name: \"amc rebel sst\", Horsepower: 150, Origin: \"USA\"},\n     * ]\n     *\n     * const dt = new DataModel(data, schema);\n     * const dt2 = dt.select(fields => fields.Origin.value === \"USA\");\n     * const dt3 = dt2.groupBy([\"Origin\"]);\n     * const ancDerivations = dt3.getAncestorDerivations();\n     *\n     * @return {Any[]} Returns the previous derivation meta data.\n     */\n    getAncestorDerivations () {\n        return this._ancestorDerivation;\n    }\n}\n\nexport default Relation;\n","/* eslint-disable default-case */\n\nimport { FieldType, DimensionSubtype, DataFormat } from './enums';\nimport {\n    persistDerivations,\n    getRootGroupByModel,\n    propagateToAllDataModels,\n    getRootDataModel,\n    propagateImmutableActions,\n    addToPropNamespace,\n    sanitizeUnitSchema\n} from './helper';\nimport { DM_DERIVATIVES, PROPAGATION } from './constants';\nimport {\n    dataBuilder,\n    rowDiffsetIterator,\n    groupBy\n} from './operator';\nimport { createBinnedFieldData } from './operator/bucket-creator';\nimport Relation from './relation';\nimport reducerStore from './utils/reducer-store';\nimport { createFields } from './field-creator';\nimport InvalidAwareTypes from './invalid-aware-types';\n\n/**\n * DataModel is an in-browser representation of tabular data. It supports\n * {@link https://en.wikipedia.org/wiki/Relational_algebra | relational algebra} operators as well as generic data\n * processing opearators.\n * DataModel extends {@link Relation} class which defines all the relational algebra opreators. DataModel gives\n * definition of generic data processing operators which are not relational algebra complient.\n *\n * @public\n * @class\n * @extends Relation\n * @memberof Datamodel\n */\nclass DataModel extends Relation {\n    /**\n     * Creates a new DataModel instance by providing data and schema. Data could be in the form of\n     * - Flat JSON\n     * - DSV String\n     * - 2D Array\n     *\n     * By default DataModel finds suitable adapter to serialize the data. DataModel also expects a\n     * {@link Schema | schema} for identifying the variables present in data.\n     *\n     * @constructor\n     * @example\n     * const data = loadData('cars.csv');\n     * const schema = [\n     *      { name: 'Name', type: 'dimension' },\n     *      { name: 'Miles_per_Gallon', type: 'measure', unit : 'cm', scale: '1000', numberformat: val => `${val}G`},\n     *      { name: 'Cylinders', type: 'dimension' },\n     *      { name: 'Displacement', type: 'measure' },\n     *      { name: 'Horsepower', type: 'measure' },\n     *      { name: 'Weight_in_lbs', type: 'measure' },\n     *      { name: 'Acceleration', type: 'measure' },\n     *      { name: 'Year', type: 'dimension', subtype: 'datetime', format: '%Y' },\n     *      { name: 'Origin', type: 'dimension' }\n     * ];\n     * const dm = new DataModel(data, schema, { name: 'Cars' });\n     * table(dm);\n     *\n     * @public\n     *\n     * @param {Array.<Object> | string | Array.<Array>} data Input data in any of the mentioned formats\n     * @param {Array.<Schema>} schema Defination of the variables. Order of the variables in data and order of the\n     *      variables in schema has to be same.\n     * @param {object} [options] Optional arguments to specify more settings regarding the creation part\n     * @param {string} [options.name] Name of the datamodel instance. If no name is given an auto generated name is\n     *      assigned to the instance.\n     * @param {string} [options.fieldSeparator=','] specify field separator type if the data is of type dsv string.\n     */\n    constructor (...args) {\n        super(...args);\n\n        this._onPropagation = [];\n    }\n\n    /**\n     * Reducers are simple functions which reduces an array of numbers to a representative number of the set.\n     * Like an array of numbers `[10, 20, 5, 15]` can be reduced to `12.5` if average / mean reducer function is\n     * applied. All the measure fields in datamodel (variables in data) needs a reducer to handle aggregation.\n     *\n     * @public\n     *\n     * @return {ReducerStore} Singleton instance of {@link ReducerStore}.\n     */\n    static get Reducers () {\n        return reducerStore;\n    }\n\n    /**\n     * Configure null, undefined, invalid values in the source data\n     *\n     * @public\n     *\n     * @param {Object} [config] - Configuration to control how null, undefined and non-parsable values are\n     * represented in DataModel.\n     * @param {string} [config.undefined] - Define how an undefined value will be represented.\n     * @param {string} [config.null] - Define how a null value will be represented.\n     * @param {string} [config.invalid] - Define how a non-parsable value will be represented.\n     */\n    static configureInvalidAwareTypes (config) {\n        return InvalidAwareTypes.invalidAwareVals(config);\n    }\n\n    /**\n     * Retrieve the data attached to an instance in JSON format.\n     *\n     * @example\n     * // DataModel instance is already prepared and assigned to dm variable\n     *  const data = dm.getData({\n     *      order: 'column',\n     *      formatter: {\n     *          origin: (val) => val === 'European Union' ? 'EU' : val;\n     *      }\n     *  });\n     *  console.log(data);\n     *\n     * @public\n     *\n     * @param {Object} [options] Options to control how the raw data is to be returned.\n     * @param {string} [options.order='row'] Defines if data is retieved in row order or column order. Possible values\n     *      are `'rows'` and `'columns'`\n     * @param {Function} [options.formatter=null] Formats the output data. This expects an object, where the keys are\n     *      the name of the variable needs to be formatted. The formatter function is called for each row passing the\n     *      value of the cell for a particular row as arguments. The formatter is a function in the form of\n     *      `function (value, rowId, schema) => { ... }`\n     *      Know more about {@link Fomatter}.\n     *\n     * @return {Array} Returns a multidimensional array of the data with schema. The return format looks like\n     *      ```\n     *          {\n     *              data,\n     *              schema\n     *          }\n     *      ```\n     */\n    getData (options) {\n        const defOptions = {\n            order: 'row',\n            formatter: null,\n            withUid: false,\n            getAllFields: false,\n            sort: []\n        };\n        options = Object.assign({}, defOptions, options);\n        const fields = this.getPartialFieldspace().fields;\n\n        const dataGenerated = dataBuilder.call(\n            this,\n            this.getPartialFieldspace().fields,\n            this._rowDiffset,\n            options.getAllFields ? fields.map(d => d.name()).join() : this._colIdentifier,\n            options.sort,\n            {\n                columnWise: options.order === 'column',\n                addUid: !!options.withUid\n            }\n        );\n\n        if (!options.formatter) {\n            return dataGenerated;\n        }\n\n        const { formatter } = options;\n        const { data, schema, uids } = dataGenerated;\n        const fieldNames = schema.map((e => e.name));\n        const fmtFieldNames = Object.keys(formatter);\n        const fmtFieldIdx = fmtFieldNames.reduce((acc, next) => {\n            const idx = fieldNames.indexOf(next);\n            if (idx !== -1) {\n                acc.push([idx, formatter[next]]);\n            }\n            return acc;\n        }, []);\n\n        if (options.order === 'column') {\n            fmtFieldIdx.forEach((elem) => {\n                const fIdx = elem[0];\n                const fmtFn = elem[1];\n\n                data[fIdx].forEach((datum, datumIdx) => {\n                    data[fIdx][datumIdx] = fmtFn.call(\n                        undefined,\n                        datum,\n                        uids[datumIdx],\n                        schema[fIdx]\n                    );\n                });\n            });\n        } else {\n            data.forEach((datum, datumIdx) => {\n                fmtFieldIdx.forEach((elem) => {\n                    const fIdx = elem[0];\n                    const fmtFn = elem[1];\n\n                    datum[fIdx] = fmtFn.call(\n                        undefined,\n                        datum[fIdx],\n                        uids[datumIdx],\n                        schema[fIdx]\n                    );\n                });\n            });\n        }\n\n        return dataGenerated;\n    }\n\n    /**\n     * Groups the data using particular dimensions and by reducing measures. It expects a list of dimensions using which\n     * it projects the datamodel and perform aggregations to reduce the duplicate tuples. Refer this\n     * {@link link_to_one_example_with_group_by | document} to know the intuition behind groupBy.\n     *\n     * DataModel by default provides definition of few {@link reducer | Reducers}.\n     * {@link ReducerStore | User defined reducers} can also be registered.\n     *\n     * This is the chained implementation of `groupBy`.\n     * `groupBy` also supports {@link link_to_compose_groupBy | composability}\n     *\n     * @example\n     * const groupedDM = dm.groupBy(['Year'], { horsepower: 'max' } );\n     * console.log(groupedDm);\n     *\n     * @public\n     *\n     * @param {Array.<string>} fieldsArr - Array containing the name of dimensions\n     * @param {Object} [reducers={}] - A map whose key is the variable name and value is the name of the reducer. If its\n     *      not passed, or any variable is ommitted from the object, default aggregation function is used from the\n     *      schema of the variable.\n     *\n     * @return {DataModel} Returns a new DataModel instance after performing the groupby.\n     */\n    groupBy (fieldsArr, reducers = {}, config = { saveChild: true }) {\n        const groupByString = `${fieldsArr.join()}`;\n        let params = [this, fieldsArr, reducers];\n        const newDataModel = groupBy(...params);\n\n        persistDerivations(\n            this,\n            newDataModel,\n            DM_DERIVATIVES.GROUPBY,\n            { fieldsArr, groupByString, defaultReducer: reducerStore.defaultReducer() },\n            reducers\n        );\n\n        if (config.saveChild) {\n            newDataModel.setParent(this);\n        } else {\n            newDataModel.setParent(null);\n        }\n\n        return newDataModel;\n    }\n\n    /**\n     * Performs sorting operation on the current {@link DataModel} instance according to the specified sorting details.\n     * Like every other operator it doesn't mutate the current DataModel instance on which it was called, instead\n     * returns a new DataModel instance containing the sorted data.\n     *\n     * DataModel support multi level sorting by listing the variables using which sorting needs to be performed and\n     * the type of sorting `ASC` or `DESC`.\n     *\n     * In the following example, data is sorted by `Origin` field in `DESC` order in first level followed by another\n     * level of sorting by `Acceleration` in `ASC` order.\n     *\n     * @example\n     * // here dm is the pre-declared DataModel instance containing the data of 'cars.json' file\n     * let sortedDm = dm.sort([\n     *    [\"Origin\", \"DESC\"]\n     *    [\"Acceleration\"] // Default value is ASC\n     * ]);\n     *\n     * console.log(dm.getData());\n     * console.log(sortedDm.getData());\n     *\n     * // Sort with a custom sorting function\n     * sortedDm = dm.sort([\n     *    [\"Origin\", \"DESC\"]\n     *    [\"Acceleration\", (a, b) => a - b] // Custom sorting function\n     * ]);\n     *\n     * console.log(dm.getData());\n     * console.log(sortedDm.getData());\n     *\n     * @text\n     * DataModel also provides another sorting mechanism out of the box where sort is applied to a variable using\n     * another variable which determines the order.\n     * Like the above DataModel contains three fields `Origin`, `Name` and `Acceleration`. Now, the data in this\n     * model can be sorted by `Origin` field according to the average value of all `Acceleration` for a\n     * particular `Origin` value.\n     *\n     * @example\n     * // here dm is the pre-declared DataModel instance containing the data of 'cars.json' file\n     * const sortedDm = dm.sort([\n     *     ['Origin', ['Acceleration', (a, b) => avg(...a.Acceleration) - avg(...b.Acceleration)]]\n     * ]);\n     *\n     * console.log(dm.getData());\n     * console.log(sortedDm.getData());\n     *\n     * @public\n     *\n     * @param {Array.<Array>} sortingDetails - Sorting details based on which the sorting will be performed.\n     * @return {DataModel} Returns a new instance of DataModel with sorted data.\n     */\n    sort (sortingDetails, config = { saveChild: false }) {\n        const rawData = this.getData({\n            order: 'row',\n            sort: sortingDetails\n        });\n        const header = rawData.schema.map(field => field.name);\n        const dataInCSVArr = [header].concat(rawData.data);\n\n        const sortedDm = new this.constructor(dataInCSVArr, rawData.schema, { dataFormat: 'DSVArr' });\n\n        persistDerivations(\n            this,\n            sortedDm,\n            DM_DERIVATIVES.SORT,\n            config,\n            sortingDetails\n        );\n\n        if (config.saveChild) {\n            sortedDm.setParent(this);\n        } else {\n            sortedDm.setParent(null);\n        }\n\n        return sortedDm;\n    }\n\n    /**\n     * Performs the serialization operation on the current {@link DataModel} instance according to the specified data\n     * type. When an {@link DataModel} instance is created, it de-serializes the input data into its internal format,\n     * and during its serialization process, it converts its internal data format to the specified data type and returns\n     * that data regardless what type of data is used during the {@link DataModel} initialization.\n     *\n     * @example\n     * // here dm is the pre-declared DataModel instance.\n     * const csvData = dm.serialize(DataModel.DataFormat.DSV_STR, { fieldSeparator: \",\" });\n     * console.log(csvData); // The csv formatted data.\n     *\n     * const jsonData = dm.serialize(DataModel.DataFormat.FLAT_JSON);\n     * console.log(jsonData); // The json data.\n     *\n     * @public\n     *\n     * @param {string} type - The data type name for serialization.\n     * @param {Object} options - The optional option object.\n     * @param {string} options.fieldSeparator - The field separator character for DSV data type.\n     * @return {Array|string} Returns the serialized data.\n     */\n    serialize (type, options) {\n        type = type || this._dataFormat;\n        options = Object.assign({}, { fieldSeparator: ',' }, options);\n\n        const fields = this.getFieldspace().fields;\n        const colData = fields.map(f => f.formattedData());\n        const rowsCount = colData[0].length;\n        let serializedData;\n        let rowIdx;\n        let colIdx;\n\n        if (type === DataFormat.FLAT_JSON) {\n            serializedData = [];\n            for (rowIdx = 0; rowIdx < rowsCount; rowIdx++) {\n                const row = {};\n                for (colIdx = 0; colIdx < fields.length; colIdx++) {\n                    row[fields[colIdx].name()] = colData[colIdx][rowIdx];\n                }\n                serializedData.push(row);\n            }\n        } else if (type === DataFormat.DSV_STR) {\n            serializedData = [fields.map(f => f.name()).join(options.fieldSeparator)];\n            for (rowIdx = 0; rowIdx < rowsCount; rowIdx++) {\n                const row = [];\n                for (colIdx = 0; colIdx < fields.length; colIdx++) {\n                    row.push(colData[colIdx][rowIdx]);\n                }\n                serializedData.push(row.join(options.fieldSeparator));\n            }\n            serializedData = serializedData.join('\\n');\n        } else if (type === DataFormat.DSV_ARR) {\n            serializedData = [fields.map(f => f.name())];\n            for (rowIdx = 0; rowIdx < rowsCount; rowIdx++) {\n                const row = [];\n                for (colIdx = 0; colIdx < fields.length; colIdx++) {\n                    row.push(colData[colIdx][rowIdx]);\n                }\n                serializedData.push(row);\n            }\n        } else {\n            throw new Error(`Data type ${type} is not supported`);\n        }\n\n        return serializedData;\n    }\n\n    addField (field) {\n        const fieldName = field.name();\n        this._colIdentifier += `,${fieldName}`;\n        const partialFieldspace = this._partialFieldspace;\n\n        if (!partialFieldspace.fieldsObj()[field.name()]) {\n            partialFieldspace.fields.push(field);\n        } else {\n            const fieldIndex = partialFieldspace.fields.findIndex(fieldinst => fieldinst.name() === fieldName);\n            fieldIndex >= 0 && (partialFieldspace.fields[fieldIndex] = field);\n        }\n\n        // flush out cached namespace values on addition of new fields\n        partialFieldspace._cachedFieldsObj = null;\n        partialFieldspace._cachedDimension = null;\n        partialFieldspace._cachedMeasure = null;\n\n        this.__calculateFieldspace().calculateFieldsConfig();\n        return this;\n    }\n\n    /**\n    * Creates a new variable calculated from existing variables. This method expects the definition of the newly created\n    * variable and a function which resolves the value of the new variable from existing variables.\n    *\n    * Can create a new measure based on existing variables:\n    * @example\n    *  // DataModel already prepared and assigned to dm variable;\n    *  const newDm = dataModel.calculateVariable({\n    *      name: 'powerToWeight',\n    *      type: 'measure'\n    *  }, ['horsepower', 'weight_in_lbs', (hp, weight) => hp / weight ]);\n    *\n    *\n    * Can create a new dimension based on existing variables:\n    * @example\n    *  // DataModel already prepared and assigned to dm variable;\n    *  const child = dataModel.calculateVariable(\n    *     {\n    *       name: 'Efficiency',\n    *       type: 'dimension'\n    *     }, ['horsepower', (hp) => {\n    *      if (hp < 80) { return 'low'; },\n    *      else if (hp < 120) { return 'moderate'; }\n    *      else { return 'high' }\n    *  }]);\n    *\n    * @public\n    *\n    * @param {Object} schema - The schema of newly defined variable.\n    * @param {Array.<string|function>} dependency - An array containing the dependency variable names and a resolver\n    * function as the last element.\n    * @param {Object} config - An optional config object.\n    * @param {boolean} [config.saveChild] - Whether the newly created DataModel will be a child.\n    * @param {boolean} [config.replaceVar] - Whether the newly created variable will replace the existing variable.\n    * @return {DataModel} Returns an instance of DataModel with the new field.\n    */\n    calculateVariable (schema, dependency, config) {\n        schema = sanitizeUnitSchema(schema);\n        config = Object.assign({}, { saveChild: true, replaceVar: false }, config);\n\n        const fieldsConfig = this.getFieldsConfig();\n        const depVars = dependency.slice(0, dependency.length - 1);\n        const retrieveFn = dependency[dependency.length - 1];\n\n        if (fieldsConfig[schema.name] && !config.replaceVar) {\n            throw new Error(`${schema.name} field already exists in datamodel`);\n        }\n\n        const depFieldIndices = depVars.map((field) => {\n            const fieldSpec = fieldsConfig[field];\n            if (!fieldSpec) {\n                // @todo dont throw error here, use warning in production mode\n                throw new Error(`${field} is not a valid column name.`);\n            }\n            return fieldSpec.index;\n        });\n\n        const clone = this.clone(config.saveChild);\n\n        const fs = clone.getFieldspace().fields;\n        const suppliedFields = depFieldIndices.map(idx => fs[idx]);\n\n        let cachedStore = {};\n        let cloneProvider = () => this.detachedRoot();\n\n        const computedValues = [];\n        rowDiffsetIterator(clone._rowDiffset, (i) => {\n            const fieldsData = suppliedFields.map(field => field.partialField.data[i]);\n            computedValues[i] = retrieveFn(...fieldsData, i, cloneProvider, cachedStore);\n        });\n        const [field] = createFields([computedValues], [schema], [schema.name]);\n        clone.addField(field);\n\n        persistDerivations(\n            this,\n            clone,\n            DM_DERIVATIVES.CAL_VAR,\n            { config: schema, fields: depVars },\n            retrieveFn\n        );\n\n        return clone;\n    }\n\n    /**\n     * Propagates changes across all the connected DataModel instances.\n     *\n     * @param {Array} identifiers - A list of identifiers that were interacted with.\n     * @param {Object} payload - The interaction specific details.\n     *\n     * @return {DataModel} DataModel instance.\n     */\n    propagate (identifiers, config = {}, addToNameSpace, propConfig = {}) {\n        const isMutableAction = config.isMutableAction;\n        const propagationSourceId = config.sourceId;\n        const payload = config.payload;\n        const rootModel = getRootDataModel(this);\n        const propagationNameSpace = rootModel._propagationNameSpace;\n        const rootGroupByModel = getRootGroupByModel(this);\n        const rootModels = {\n            groupByModel: rootGroupByModel,\n            model: rootModel\n        };\n\n        addToNameSpace && addToPropNamespace(propagationNameSpace, config, this);\n        propagateToAllDataModels(identifiers, rootModels, { propagationNameSpace, sourceId: propagationSourceId },\n            Object.assign({\n                payload\n            }, config));\n\n        if (isMutableAction) {\n            propagateImmutableActions(propagationNameSpace, rootModels, {\n                config,\n                propConfig\n            }, this);\n        }\n\n        return this;\n    }\n\n    /**\n     * Associates a callback with an event name.\n     *\n     * @param {string} eventName - The name of the event.\n     * @param {Function} callback - The callback to invoke.\n     * @return {DataModel} Returns this current DataModel instance itself.\n     */\n    on (eventName, callback) {\n        switch (eventName) {\n        case PROPAGATION:\n            this._onPropagation.push(callback);\n            break;\n        }\n        return this;\n    }\n\n    /**\n     * Unsubscribes the callbacks for the provided event name.\n     *\n     * @param {string} eventName - The name of the event to unsubscribe.\n     * @return {DataModel} Returns the current DataModel instance itself.\n     */\n    unsubscribe (eventName) {\n        switch (eventName) {\n        case PROPAGATION:\n            this._onPropagation = [];\n            break;\n\n        }\n        return this;\n    }\n\n    /**\n     * This method is used to invoke the method associated with propagation.\n     *\n     * @param {Object} payload The interaction payload.\n     * @param {DataModel} identifiers The propagated DataModel.\n     * @memberof DataModel\n     */\n    handlePropagation (propModel, payload) {\n        let propListeners = this._onPropagation;\n        propListeners.forEach(fn => fn.call(this, propModel, payload));\n    }\n\n    /**\n     * Performs the binning operation on a measure field based on the binning configuration. Binning means discretizing\n     * values of a measure. Binning configuration contains an array; subsequent values from the array marks the boundary\n     * of buckets in [inclusive, exclusive) range format. This operation does not mutate the subject measure field,\n     * instead, it creates a new field (variable) of type dimension and subtype binned.\n     *\n     * Binning can be configured by\n     * - providing custom bin configuration with non-uniform buckets,\n     * - providing bins count,\n     * - providing each bin size,\n     *\n     * When custom `buckets` are provided as part of binning configuration:\n     * @example\n     *  // DataModel already prepared and assigned to dm variable\n     *  const config = { name: 'binnedHP', buckets: [30, 80, 100, 110] }\n     *  const binnedDM = dataModel.bin('horsepower', config);\n     *\n     * @text\n     * When `binsCount` is defined as part of binning configuration:\n     * @example\n     *  // DataModel already prepared and assigned to dm variable\n     *  const config = { name: 'binnedHP', binsCount: 5, start: 0, end: 100 }\n     *  const binDM = dataModel.bin('horsepower', config);\n     *\n     * @text\n     * When `binSize` is defined as part of binning configuration:\n     * @example\n     *  // DataModel already prepared and assigned to dm variable\n     *  const config = { name: 'binnedHorsepower', binSize: 20, start: 5}\n     *  const binDM = dataModel.bin('horsepower', config);\n     *\n     * @public\n     *\n     * @param {string} measureFieldName - The name of the target measure field.\n     * @param {Object} config - The config object.\n     * @param {string} [config.name] - The name of the new field which will be created.\n     * @param {string} [config.buckets] - An array containing the bucket ranges.\n     * @param {string} [config.binSize] - The size of each bin. It is ignored when buckets are given.\n     * @param {string} [config.binsCount] - The total number of bins to generate. It is ignored when buckets are given.\n     * @param {string} [config.start] - The start value of the bucket ranges. It is ignored when buckets are given.\n     * @param {string} [config.end] - The end value of the bucket ranges. It is ignored when buckets are given.\n     * @return {DataModel} Returns a new {@link DataModel} instance with the new field.\n     */\n    bin (measureFieldName, config) {\n        const fieldsConfig = this.getFieldsConfig();\n\n        if (!fieldsConfig[measureFieldName]) {\n            throw new Error(`Field ${measureFieldName} doesn't exist`);\n        }\n\n        const binFieldName = config.name || `${measureFieldName}_binned`;\n\n        if (fieldsConfig[binFieldName]) {\n            throw new Error(`Field ${binFieldName} already exists`);\n        }\n\n        const measureField = this.getFieldspace().fieldsObj()[measureFieldName];\n        const { binnedData, bins } = createBinnedFieldData(measureField, this._rowDiffset, config);\n\n        const binField = createFields([binnedData], [\n            {\n                name: binFieldName,\n                type: FieldType.DIMENSION,\n                subtype: DimensionSubtype.BINNED,\n                bins\n            }], [binFieldName])[0];\n\n        const clone = this.clone(config.saveChild);\n        clone.addField(binField);\n\n        persistDerivations(\n            this,\n            clone,\n            DM_DERIVATIVES.BIN,\n             { measureFieldName, config, binFieldName },\n             null\n        );\n\n        return clone;\n    }\n\n    /**\n     * Creates a new {@link DataModel} instance with completely detached root from current {@link DataModel} instance,\n     * the new {@link DataModel} instance has no parent-children relationship with the current one, but has same data as\n     * the current one.\n     * This API is useful when a completely different {@link DataModel} but with same data as the current instance is\n     * needed.\n     *\n     * @example\n     *  const dm = new DataModel(data, schema);\n     *  const detachedDm = dm.detachedRoot();\n     *\n     * // has different namespace\n     * console.log(dm.getPartialFieldspace().name);\n     * console.log(detachedDm.getPartialFieldspace().name);\n     *\n     * // has same data\n     * console.log(dm.getData());\n     * console.log(detachedDm.getData());\n     *\n     * @public\n     *\n     * @return {DataModel} Returns a detached {@link DataModel} instance.\n     */\n    detachedRoot () {\n        const data = this.serialize(DataFormat.FLAT_JSON);\n        const schema = this.getSchema();\n\n        return new DataModel(data, schema);\n    }\n}\n\nexport default DataModel;\n","import { extend2 } from '../utils';\nimport { rowDiffsetIterator } from './row-diffset-iterator';\nimport DataModel from '../export';\nimport reducerStore from '../utils/reducer-store';\nimport { defaultReducerName } from './group-by-function';\nimport { FieldType } from '../enums';\n\n/**\n * This function sanitize the user given field and return a common Array structure field\n * list\n * @param  {DataModel} dataModel the dataModel operating on\n * @param  {Array} fieldArr  user input of field Array\n * @return {Array}           arrays of field name\n */\nfunction getFieldArr (dataModel, fieldArr) {\n    const retArr = [];\n    const fieldStore = dataModel.getFieldspace();\n    const dimensions = fieldStore.getDimension();\n\n    Object.entries(dimensions).forEach(([key]) => {\n        if (fieldArr && fieldArr.length) {\n            if (fieldArr.indexOf(key) !== -1) {\n                retArr.push(key);\n            }\n        } else {\n            retArr.push(key);\n        }\n    });\n\n    return retArr;\n}\n\n/**\n * This sanitize the reducer provide by the user and create a common type of object.\n * user can give function Also\n * @param  {DataModel} dataModel     dataModel to worked on\n * @param  {Object|function} [reducers={}] reducer provided by the users\n * @return {Object}               object containing reducer function for every measure\n */\nfunction getReducerObj (dataModel, reducers = {}) {\n    const retObj = {};\n    const fieldStore = dataModel.getFieldspace();\n    const measures = fieldStore.getMeasure();\n    const defReducer = reducerStore.defaultReducer();\n\n    Object.keys(measures).forEach((measureName) => {\n        if (typeof reducers[measureName] !== 'string') {\n            reducers[measureName] = measures[measureName].defAggFn();\n        }\n        const reducerFn = reducerStore.resolve(reducers[measureName]);\n        if (reducerFn) {\n            retObj[measureName] = reducerFn;\n        } else {\n            retObj[measureName] = defReducer;\n            reducers[measureName] = defaultReducerName;\n        }\n    });\n    return retObj;\n}\n\n/**\n * main function which perform the group-by operations which reduce the measures value is the\n * fields are common according to the reducer function provided\n * @param  {DataModel} dataModel the dataModel to worked\n * @param  {Array} fieldArr  fields according to which the groupby should be worked\n * @param  {Object|Function} reducers  reducers function\n * @param {DataModel} existingDataModel Existing datamodel instance\n * @return {DataModel} new dataModel with the group by\n */\nfunction groupBy (dataModel, fieldArr, reducers, existingDataModel) {\n    const sFieldArr = getFieldArr(dataModel, fieldArr);\n    const reducerObj = getReducerObj(dataModel, reducers);\n    const fieldStore = dataModel.getFieldspace();\n    const fieldStoreObj = fieldStore.fieldsObj();\n    const dbName = fieldStore.name;\n    const dimensionArr = [];\n    const measureArr = [];\n    const schema = [];\n    const hashMap = {};\n    const data = [];\n    let newDataModel;\n\n    // Prepare the schema\n    Object.entries(fieldStoreObj).forEach(([key, value]) => {\n        if (sFieldArr.indexOf(key) !== -1 || reducerObj[key]) {\n            schema.push(extend2({}, value.schema()));\n\n            switch (value.schema().type) {\n            case FieldType.MEASURE:\n                measureArr.push(key);\n                break;\n            default:\n            case FieldType.DIMENSION:\n                dimensionArr.push(key);\n            }\n        }\n    });\n    // Prepare the data\n    let rowCount = 0;\n    rowDiffsetIterator(dataModel._rowDiffset, (i) => {\n        let hash = '';\n        dimensionArr.forEach((_) => {\n            hash = `${hash}-${fieldStoreObj[_].partialField.data[i]}`;\n        });\n        if (hashMap[hash] === undefined) {\n            hashMap[hash] = rowCount;\n            data.push({});\n            dimensionArr.forEach((_) => {\n                data[rowCount][_] = fieldStoreObj[_].partialField.data[i];\n            });\n            measureArr.forEach((_) => {\n                data[rowCount][_] = [fieldStoreObj[_].partialField.data[i]];\n            });\n            rowCount += 1;\n        } else {\n            measureArr.forEach((_) => {\n                data[hashMap[hash]][_].push(fieldStoreObj[_].partialField.data[i]);\n            });\n        }\n    });\n\n    // reduction\n    let cachedStore = {};\n    let cloneProvider = () => dataModel.detachedRoot();\n    data.forEach((row) => {\n        const tuple = row;\n        measureArr.forEach((_) => {\n            tuple[_] = reducerObj[_](row[_], cloneProvider, cachedStore);\n        });\n    });\n    if (existingDataModel) {\n        existingDataModel.__calculateFieldspace();\n        newDataModel = existingDataModel;\n    }\n    else {\n        newDataModel = new DataModel(data, schema, { name: dbName });\n    }\n    return newDataModel;\n}\n\nexport { groupBy, getFieldArr, getReducerObj };\n","import { rowDiffsetIterator } from './row-diffset-iterator';\nimport InvalidAwareTypes from '../invalid-aware-types';\n\nconst generateBuckets = (binSize, start, end) => {\n    const buckets = [];\n    let next = start;\n\n    while (next < end) {\n        buckets.push(next);\n        next += binSize;\n    }\n    buckets.push(next);\n\n    return buckets;\n};\n\nconst findBucketRange = (bucketRanges, value) => {\n    let leftIdx = 0;\n    let rightIdx = bucketRanges.length - 1;\n    let midIdx;\n    let range;\n\n    // Here use binary search as the bucketRanges is a sorted array\n    while (leftIdx <= rightIdx) {\n        midIdx = leftIdx + Math.floor((rightIdx - leftIdx) / 2);\n        range = bucketRanges[midIdx];\n\n        if (value >= range.start && value < range.end) {\n            return range;\n        } else if (value >= range.end) {\n            leftIdx = midIdx + 1;\n        } else if (value < range.start) {\n            rightIdx = midIdx - 1;\n        }\n    }\n\n    return null;\n};\n\n /**\n  * Creates the bin data from input measure field and supplied configs.\n  *\n  * @param {Measure} measureField - The Measure field instance.\n  * @param {string} rowDiffset - The datamodel rowDiffset values.\n  * @param {Object} config - The config object.\n  * @return {Object} Returns the binned data and the corresponding bins.\n  */\nexport function createBinnedFieldData (measureField, rowDiffset, config) {\n    let { buckets, binsCount, binSize, start, end } = config;\n    const [dMin, dMax] = measureField.domain();\n\n    if (!buckets) {\n        start = (start !== 0 && (!start || start > dMin)) ? dMin : start;\n        end = (end !== 0 && (!end || end < dMax)) ? (dMax + 1) : end;\n\n        if (binsCount) {\n            binSize = Math.ceil(Math.abs(end - start) / binsCount);\n        }\n\n        buckets = generateBuckets(binSize, start, end);\n    }\n\n    if (buckets[0] > dMin) {\n        buckets.unshift(dMin);\n    }\n    if (buckets[buckets.length - 1] <= dMax) {\n        buckets.push(dMax + 1);\n    }\n\n    const bucketRanges = [];\n    for (let i = 0; i < buckets.length - 1; i++) {\n        bucketRanges.push({\n            start: buckets[i],\n            end: buckets[i + 1]\n        });\n    }\n\n    const binnedData = [];\n    rowDiffsetIterator(rowDiffset, (i) => {\n        const datum = measureField.partialField.data[i];\n        if (datum instanceof InvalidAwareTypes) {\n            binnedData.push(datum);\n            return;\n        }\n\n        const range = findBucketRange(bucketRanges, datum);\n        binnedData.push(`${range.start}-${range.end}`);\n    });\n\n    return { binnedData, bins: buckets };\n}\n","import { fnList } from '../operator/group-by-function';\n\nexport const { sum, avg, min, max, first, last, count, std: sd } = fnList;\n","import DataModel from './datamodel';\nimport {\n  compose,\n  bin,\n  select,\n  project,\n  groupby as groupBy,\n  calculateVariable,\n  sort,\n  crossProduct,\n  difference,\n  naturalJoin,\n  leftOuterJoin,\n  rightOuterJoin,\n  fullOuterJoin,\n  union\n} from './operator';\nimport * as Stats from './stats';\nimport * as enums from './enums';\nimport { DateTimeFormatter } from './utils';\nimport { DataFormat, FilteringMode, DM_DERIVATIVES } from './constants';\nimport InvalidAwareTypes from './invalid-aware-types';\nimport pkg from '../package.json';\n\nconst Operators = {\n    compose,\n    bin,\n    select,\n    project,\n    groupBy,\n    calculateVariable,\n    sort,\n    crossProduct,\n    difference,\n    naturalJoin,\n    leftOuterJoin,\n    rightOuterJoin,\n    fullOuterJoin,\n    union\n};\n\nconst version = pkg.version;\nObject.assign(DataModel, {\n    Operators,\n    Stats,\n    DM_DERIVATIVES,\n    DateTimeFormatter,\n    DataFormat,\n    FilteringMode,\n    InvalidAwareTypes,\n    version\n}, enums);\n\nexport default DataModel;\n","/**\n * Wrapper on calculateVariable() method of DataModel to behave\n * the pure-function functionality.\n *\n * @param {Array} args - The argument list.\n * @return {any} Returns the returned value of calling function.\n */\nexport const calculateVariable = (...args) => dm => dm.calculateVariable(...args);\n\n/**\n * Wrapper on sort() method of DataModel to behave\n * the pure-function functionality.\n *\n * @param {Array} args - The argument list.\n * @return {any} Returns the returned value of calling function.\n */\nexport const sort = (...args) => dm => dm.sort(...args);\n","import { crossProduct } from './cross-product';\nimport { naturalJoinFilter } from './natural-join-filter-function';\n\nexport function naturalJoin (dataModel1, dataModel2) {\n    return crossProduct(dataModel1, dataModel2, naturalJoinFilter(dataModel1, dataModel2), true);\n}\n","(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"hyperdis\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"hyperdis\"] = factory();\n\telse\n\t\troot[\"hyperdis\"] = factory();\n})(window, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n","const makeEntry = (arr, sCon) => {\n    arr.forEach((elem) => {\n        if (elem === undefined || elem === null) {\n            return;\n        }\n        sCon[elem] = 1;\n    });\n};\n\nexport default class ForeignSet {\n    constructor (arr) {\n        this._set = {};\n        makeEntry(arr, this._set);\n    }\n\n    append (arr) {\n        makeEntry(arr, this._set);\n        return this;\n    }\n\n    toArray () {\n        return Object.keys(this._set);\n    }\n\n    static difference (set1, set2) {\n        let key;\n        const filteredKeys = [],\n            s1 = set1._set,\n            s2 = set2._set;\n        for (key in s1) {\n            if (!({}).hasOwnProperty.call(s1, key)) {\n                continue;\n            }\n            if (key in s2) {\n                continue;\n            }\n            filteredKeys.push(key);\n        }\n        return new ForeignSet(filteredKeys);\n    }\n}\n","/* global window */\n\nimport ForeignSet from './set';\n\nconst\n    isSimpleObject = (obj) => {\n        let token;\n        if (typeof obj === 'object') {\n            if (obj === null) { return false; }\n            token = Object.prototype.toString.call(obj);\n            if (token === '[object Object]') {\n                return (obj.constructor.toString().match(/^function (.*)\\(\\)/m) || [])[1] === 'Object';\n            }\n        }\n        return false;\n    },\n    minMsThreshold = 16,\n    /* istanbul ignore next */win = typeof window === 'undefined' ? (this || {}) : window,\n    /* istanbul ignore next */ reqAnimFrame = win.requestAnimationFrame || win.webkitRequestAnimationFrame ||\n        win.mozRequestAnimationFrame || win.oRequestAnimationFrame ||\n        win.msRequestAnimationFrame ||\n        function (callback) {\n            setTimeout(callback, minMsThreshold);\n        },\n\n    getTimeBasedId = () => {\n        if (getTimeBasedId.__lastTime === new Date().getTime()) {\n            return (getTimeBasedId.__lastTime).toString() + (getTimeBasedId.__id++).toString();\n        }\n\n        getTimeBasedId.__id = 0;\n        getTimeBasedId.__lastTime = new Date().getTime();\n        return (getTimeBasedId.__lastTime).toString() + (getTimeBasedId.__id++).toString();\n    },\n    pullableRecent = (nodes, fn) => {\n        let nFn = () => {\n            fn(...nodes.map((node) => {\n                const\n                    hist = node.history,\n                    l = hist.length - 1;\n                return [hist[l - 1 < 0 ? 0 : l - 1], hist[l]];\n            }));\n        };\n        nFn.__id = getTimeBasedId();\n        return nFn;\n    },\n    pullableEnd = (nodes, fn) => {\n        let nFn = () => {\n            fn(...nodes.map((node) => {\n                const hist = node.history;\n                return [hist[0], hist[hist.length - 1]];\n            }));\n        };\n        nFn.__id = getTimeBasedId();\n        return nFn;\n    },\n    unique = fns => fns\n                    .reduce((store, fn) => {\n                // @warn function with side effect, it mutates the store passed during initialization\n                        if (fn.__id in store.map) {\n                            return store;\n                        }\n\n                        store.map[fn.__id] = 1;\n                        store.unique.push(fn);\n\n                        return store;\n                    }, { map: {}, unique: [] })\n                    .unique,\n    compose = fns => () => {\n        fns.forEach(fn => fn());\n    },\n    flat = (...params) => {\n        const res = [];\n        params.forEach(param => res.push(...param));\n        return res;\n    },\n    identityMap = arrays => arrays,\n    splitPathProp = (path) => {\n        const pathArr = path.split('.'),\n            len = pathArr.length;\n        return [pathArr.slice(0, len - 1), pathArr[len - 1]];\n    },\n    scheduler = (onFinishCallback) => {\n        let queue = [],\n            animationFrame = null;\n\n        onFinishCallback = onFinishCallback &&\n            typeof onFinishCallback === 'function' && onFinishCallback || (() => { });\n\n        return (listeners, payload) => {\n            [].push.apply(queue, listeners);\n            if (animationFrame === null) {\n                animationFrame = reqAnimFrame(() => {\n                    const tempQ = queue.slice(0);\n                    queue.length = 0;\n                    animationFrame = null;\n\n                    unique(tempQ).forEach(fn => fn());\n                    onFinishCallback(payload);\n                });\n            }\n        };\n    },\n    fetch = namedNode => (...params) => params.map((param) => {\n        const node = namedNode[param];\n        return {\n            name: node.name,\n            qualifiedName: node.qualifiedName,\n            value: node.seed\n        };\n    }),\n    fetchAggregator = (...params) => ({\n        dependencies: params.slice(0, params.length - 1),\n        fn: params[params.length - 1]\n    }),\n    getUpstreamNodes = (list) => {\n        let res = [];\n        const map = {};\n        list.forEach(node => map[node.qualifiedName] = -1);\n        function rec (arr) {\n            arr.forEach((node) => {\n                let qname,\n                    placedIndex,\n                    preArr,\n                    postArr;\n                if (!((qname = node.qualifiedName) in map)) {\n                    map[qname] = res.push(node) - 1;\n                } else {\n                    placedIndex = map[qname];\n                    if (placedIndex !== -1 && placedIndex !== res.length - 1) {\n                        // If not the last element, readjust the array so that the later dependency position is saved\n                        preArr = res.slice(0, placedIndex);\n                        postArr = res.slice(placedIndex + 1);\n                        res = preArr.concat(postArr);\n\n                        // reset the index in map\n                        postArr.forEach((elem, i) => map[elem.qualifiedName] = i + preArr.length);\n                        map[qname] = res.push(node) - 1;\n                    }\n                }\n                rec(node.outgoingEdges);\n            });\n        }\n        rec(list);\n        return res;\n    },\n    resolver = {\n        accumulate: (...params) => {\n            const resp = {};\n            params.forEach((nodeDetails) => {\n                Object.assign(resp, { [nodeDetails.name]: nodeDetails.value });\n            });\n            return resp;\n        },\n        identity: nodeDetails => nodeDetails.value\n    };\n\nfunction resolveDependencyOrder (node, resolved, resolveMap) {\n    let qname;\n    node.edges.forEach((neighbour) => {\n        resolveDependencyOrder(neighbour, resolved, resolveMap);\n    });\n\n    if (node.isRoot() || (qname = node.qualifiedName) in resolveMap) {\n        return;\n    }\n    resolved.push(node);\n    resolveMap[qname] = 1;\n}\n\nclass CustomResolver {\n    constructor (resolver) {\n        this.fn = resolver;\n        this.dep = [];\n    }\n\n    addDependencies(...dep) {\n        this.dep.push(...dep);\n        return this;\n    }\n\n    getDependencies () {\n        return this.dep;\n    }\n\n    get () {\n        return this.fn;\n    }\n}\n\nexport {\n    isSimpleObject,\n    scheduler,\n    compose,\n    flat,\n    identityMap,\n    pullableEnd,\n    pullableRecent,\n    unique,\n    splitPathProp,\n    resolver,\n    ForeignSet,\n    resolveDependencyOrder,\n    fetch,\n    fetchAggregator,\n    CustomResolver,\n    getUpstreamNodes\n};\n","export default class GraphNode {\n    constructor (name, qualifiedName, options) {\n        /* istanbul ignore next */options = options || {};\n        this.name = name;\n        this.qualifiedName = qualifiedName;\n        this.edges = [];\n        this.outgoingEdges = [];\n        this._seed = null;\n        this.requireResolve = true;\n        this.retriever = options.retriever;\n        this.history = [];\n        this.resolver = null;\n        this.electricEdges = [];\n    }\n\n    addDependencies (...dep) {\n        this.edges.push(...dep);\n        dep.forEach(entry => entry.outgoingEdges.push(this));\n        return this;\n    }\n\n    addElectricNode (node) {\n        this.electricEdges.push(node);\n        return this;\n    }\n\n    get seed () {\n        return this._seed;\n    }\n\n    set seed (value) {\n        this._seed = value;\n        this.requireResolve = true;\n        return this;\n    }\n\n    resolve () {\n        this.seed = this.resolver(...this.retrieveDetails());\n        this.history.push(this.seed);\n        this.requireResolve = false;\n        return this;\n    }\n\n    retrieveDetails () {\n        if (this.edges.length === 0) {\n            return [{\n                name: this.name,\n                qualifiedName: this.qualifiedName,\n                value: this.seed\n            }];\n        }\n        return this.retriever(...this.edges.map(edge => edge.qualifiedName));\n    }\n\n    repeatHead () {\n        const\n            history = this.history,\n            head = history[history.length - 1];\n        // @todo- Akash, write test case if history.length === 0 to pass code coverage\n        if (history.length === 0) {\n            return this;\n        }\n        history.push(head);\n        return this;\n    }\n\n    flush () {\n        const hist = this.history,\n            head = hist[hist.length - 1];\n        hist.length = 0;\n        hist.push(head);\n        return this;\n    }\n\n    isRoot () {\n        return this.name === null;\n    }\n}\n","import {\n    pullableRecent,\n    pullableEnd\n} from './utils';\n\nexport default class ElectricNode {\n    constructor () {\n        this.edges = [];\n        this.listeners = {\n            nextFrame: [],\n            currentFrame: []\n        };\n    }\n\n    addEdges (...nodes) {\n        this.edges.push(...nodes);\n        return this;\n    }\n\n    regListenerForCurrFrame (fn) {\n        const lstnrs = this.listeners.currentFrame;\n        let index = lstnrs.push(pullableRecent(this.edges, fn)) - 1;\n\n        return () => {\n            this.listeners.currentFrame = lstnrs.filter((fn, i) => i !== index);\n        };\n    }\n\n    regListenerForNextFrame (fn) {\n        const lstnrs = this.listeners.nextFrame;\n        let index = lstnrs.push(pullableEnd(this.edges, fn)) - 1;\n\n        return () => {\n            this.listeners.nextFrame = lstnrs.filter((fn, i) => i !== index);\n        };\n    }\n\n    hasNextFrameListener () {\n        return !!this.listeners.nextFrame.length;\n    }\n}\n","import {\n    isSimpleObject,\n    resolver,\n    // upstreamNodes,\n    flat,\n    resolveDependencyOrder,\n    getUpstreamNodes,\n    ForeignSet,\n    fetch,\n    CustomResolver,\n    scheduler\n} from './utils';\nimport Node from './graph-node';\nimport ElectricNode from './electric-node';\n\nexport default class Graph {\n    constructor () {\n        this.qualifiedNodeMap = {};\n        this.retriever = fetch(this.qualifiedNodeMap);\n        this.root = new Node(null, null, { retriever: this.retriever });\n        this.root.resolver = resolver.accumulate;\n\n        this._wholeSet = null;\n        this._propagate = true;\n        this.propagationOverride = {\n            currentFrameListeners: false,\n            nextFrameListeners: false\n        };\n\n        this._schedule = scheduler((payload) => {\n            let qname;\n            for (qname in payload.flushTarget) {\n                if (!({}).hasOwnProperty.call(this.qualifiedNodeMap, qname)) {\n                    return;\n                }\n                this.qualifiedNodeMap[qname].flush();\n            }\n        });\n    }\n\n    createNodesFrom (obj, mount) {\n        let val,\n            resolveReqList;\n        const qualifiedNodeMap = this.qualifiedNodeMap,\n            root = this.root,\n            retriever = this.retriever;\n\n        (function rec (objn, qualifiedName, history) {\n            let key,\n                qname,\n                perv,\n                node;\n\n            for (key in objn) {\n                if (!({}).hasOwnProperty.call(objn, key)) {\n                    continue;\n                }\n                qname = `${qualifiedName}${key}`;\n                node = new Node(key, qname, { retriever });\n                qualifiedNodeMap[qname] = node;\n\n                if ((perv = history.perv) !== undefined) {\n                    perv.addDependencies(node);\n                } else {\n                    // top most level entries\n                    root.addDependencies(node);\n                }\n\n                if (isSimpleObject(val = objn[key])) {\n                    rec(val, `${qualifiedName}${key}.`, { perv: node });\n                    node.resolver = resolver.accumulate;\n                } else if (val instanceof CustomResolver) {\n                    node.resolver = val.get();\n                    node.addDependencies(...val.getDependencies().map(qname => qualifiedNodeMap[qname]));\n                } else {\n                    node.resolver = resolver.identity;\n                    node.seed = val;\n                    // node.resolve();\n                }\n            }\n        }(obj, mount === null ? '' : `${mount}.`, {\n            perv: qualifiedNodeMap[mount]\n        }));\n\n        this._wholeSet = new ForeignSet(Object.keys(this.qualifiedNodeMap));\n\n        // Recalculate the model without firing the listeners\n        // @todo selective branch resolve. Currently resolve gets called even for a branch which was updated\n        resolveReqList = this.constructor.getResolvedList(root).concat(root).filter(node => node.requireResolve);\n        resolveReqList.forEach(node => node.resolve());\n        getUpstreamNodes(resolveReqList).forEach(node => node.resolve());\n        return this;\n    }\n\n    getNodeValue (prop) {\n        if (prop in this.qualifiedNodeMap) {\n            return this.qualifiedNodeMap[prop].seed;\n        }\n        return undefined;\n    }\n\n    createElectricNodeOf (props, fnSpec) {\n        const nodes = props.map(prop => this.qualifiedNodeMap[prop]),\n            eNode = new ElectricNode().addEdges(...nodes);\n\n        nodes.forEach(node => node.addElectricNode(eNode));\n        return eNode[`regListenerFor${fnSpec.type}`](fnSpec.fn);\n    }\n\n    update (...params) {\n        let changedSet,\n            upstreamNodes;\n        const\n            electricEdges = [],\n            nodes = params.map((entry) => {\n                entry[0].seed = entry[1];\n                return entry[0];\n            });\n        nodes.forEach(node => node.resolve());\n        electricEdges.push(...flat(...nodes.map(node => node.electricEdges)));\n        changedSet = new ForeignSet(nodes.map(node => node.qualifiedName));\n\n        if (!this._propagate) {\n            this.__execUniqueElectricEdges(electricEdges);\n            this._propagate = true;\n            return this;\n        }\n\n        upstreamNodes = getUpstreamNodes(nodes);\n        upstreamNodes.forEach(upstreamNode => upstreamNode.resolve());\n        changedSet.append(upstreamNodes.map(node => node.qualifiedName));\n        electricEdges.push(...flat(...upstreamNodes.map(node => node.electricEdges)));\n\n        this.__execUniqueElectricEdges(Array.from(new Set(electricEdges)), changedSet);\n        return this;\n    }\n\n    __execUniqueElectricEdges (electricEdges, changedSet) {\n        const\n            cfLstnrs = [], // current frame listeners\n            nfLstnrs = []; // next frame listeners\n        if (changedSet) {\n            const\n                differenceSet = ForeignSet.difference(this._wholeSet, changedSet),\n                entries = differenceSet.toArray();\n\n            entries.forEach(entry => this.qualifiedNodeMap[entry].repeatHead());\n        }\n\n        electricEdges.forEach((e) => {\n            cfLstnrs.push(...e.listeners.currentFrame);\n        });\n        electricEdges.forEach((e) => {\n            nfLstnrs.push(...e.listeners.nextFrame);\n        });\n\n        !this.propagationOverride.currentFrameListeners && cfLstnrs.forEach(fn => fn());\n        !this.propagationOverride.nextFrameListeners && this._schedule(nfLstnrs, { flushTarget: changedSet });\n        this.resetPropagationOverride();\n        return this;\n    }\n\n    resetNodeValue (...qnames) {\n        const nodes = qnames.map(qname => this.qualifiedNodeMap[qname]),\n            args = nodes.map(node => [node, node.seed]);\n        this.update(...args);\n        return this;\n    }\n\n    static getResolvedList (node) {\n        const resolved = [];\n        resolveDependencyOrder(node, resolved, {});\n        return resolved;\n    }\n\n    stopPropagation () {\n        this._propagate = false;\n        return this;\n    }\n\n    resetPropagationOverride () {\n        this.propagationOverride.currentFrameListeners = false;\n        this.propagationOverride.nextFrameListeners = false;\n        return this;\n    }\n\n    setPropagationOverride (key) {\n        this.propagationOverride[`${key}Listeners`] = true;\n        return this;\n    }\n\n    getNodeFromQualifiedName (qname) {\n        return this.qualifiedNodeMap[qname];\n    }\n}\n","import Graph from './graph';\nimport { CustomResolver, fetchAggregator } from './utils';\n\n/**\n * The container class for Hyperdis. Hyperdis is an enabler for observable object with few interesting features like,\n * calculated property, next frame and same frame listeners, multiple listeners etc with a dependency resolving system.\n * It internally uses a graph to hold the hierarchial relationship of a object. Model is merely a container which\n * ties all the components together.\n *\n * @todo Circular dependency detection is not present\n *\n * @example check src/index.spec.js\n * @class\n */\nclass Model {\n    constructor () {\n        this._graph = new Graph();\n        this._lockFlag = false;\n        this._reqQ = [];\n    }\n\n    /**\n     * Static method to create and init the model with an observable seed\n     *\n     * @param {Object} obj The target object which is required to be made observable\n     * @return {Model} instance of the observable object model\n     */\n    static create (obj) {\n        return new Model()._addPropInModel(null, obj);\n    }\n\n    /**\n     * Appends more observable property on the already observable instance. This mutates the original model.\n     *\n     * This function works in two mode. One being\n     * @param {String} mountPoint the property on which the new set of properties will be mounted. If its a nested\n     *                          property then the mountPoint has to be written such a way so it feels like you are\n     *                          accessing the object. If the mount point is not found then he obeservables are added in\n     *                          the root.\n     * @param {Object} The target object which is required to be made observable\n     *\n     * Another being\n     * @param {Object} The target object which is required to be made observable\n     *\n     * @return {Model} instance of the observable object model\n     */\n    append (...params) {\n        let mountPoint,\n            obj;\n\n        if (params.length === 1) {\n            mountPoint = null;\n            obj = params[0];\n        } else {\n            mountPoint = params[0];\n            obj = params[1];\n        }\n\n        this._addPropInModel(mountPoint, obj);\n        return this;\n    }\n\n    /**\n     * Creates a calculated variable from existing variable. This variable can't be updated from outside.\n     * @param {string} mountpoint property path on which the new variable will be placed\n     * @param {string} name name of the variable. If the variable could have hierarchy like `limits.start`\n     * @param {Function} fn funtion where the dependent variables are injected based on the dependency requirement\n     */\n    calculatedProp (...params) {\n        let calculationConfig,\n            customResolver,\n            varName,\n            mount,\n            fetchFn;\n\n        if (params.length > 2) {\n            mount = params[0];\n            varName = params[1];\n            fetchFn = params[2];\n        } else {\n            mount = null;\n            varName = params[0];\n            fetchFn = params[1];\n        }\n\n        calculationConfig = fetchFn(fetchAggregator);\n        customResolver = new CustomResolver(calculationConfig.fn);\n        customResolver.addDependencies(...calculationConfig.dependencies);\n\n        this._addPropInModel(mount, { [varName]: customResolver });\n        return this;\n    }\n\n    // eslint-disable-next-line require-jsdoc\n    _addPropInModel (mountPoint, obj) {\n        this._graph.createNodesFrom(obj, mountPoint);\n        return this;\n    }\n\n    /**\n     * Register a listener in the current frame when a property or group of properties is changed.\n     *\n     * @example\n     * This function takes a single or group of property and handler which is called when any of the properties are\n     * changed.\n     * When a single property is changed the handler is called with two parameter, what was the old value of the state\n     * property and what is the new value.\n     * myState.on('range.start', (oldValue, newValue) => {\n     *      console.log('Value before prop change', oldValue);\n     *      console.log('Value after prop change', newValue);\n     * });\n     *\n     * myState.prop('range.start', 9);\n     * // Output\n     * Value before prop change 1\n     * Value after prop change 9\n     *\n     * If a handler is registered on change of a property which has another state property as value, then the handler\n     * gets called whenever any state property connected to it gets changed\n     *\n     * myState.on('range', (oldValue, newValue) => {\n     *      console.log('Value before prop change', oldValue);\n     *      console.log('Value after prop change', newValue);\n     * });\n     *\n     * myState.prop('range.start', 10);\n     * myState.prop('range.type.absolute', false);\n     *\n     * // Output\n     * Value before prop change\n     * range {\n     *      start: 9,\n     *      end: 5,\n     *      type: {\n     *          absolute: true\n     *      }\n     * }\n     * Value after prop change\n     * range: {\n     *      start: 10,\n     *      end: 5,\n     *      type: {\n     *          absolute: false\n     *      }\n     * }\n     * If a handler is registered with more than one property change then, the handler is called when any of the\n     * properties gets changed. In this cast the handler is called with more than one parameter: each for one state\n     * property which is registered for listening. Each parameter is of type array containing [oldValue, newValue]\n     *\n     * myState.on('range.start', 'range.end', (start, end) => {\n     *      console.log('Start', start);\n     *      console.log('End', end);\n     * });\n     *\n     * myState.prop('range.start', 12);\n     *\n     * // Output\n     * Start [10, 12]\n     * End [5, 5]\n     *\n     * myState.prop('range.end', 7);\n     *\n     * // Output\n     * Start [12, 12]\n     * End [5, 7]\n     *\n     * The on returns a function which is when called the listener registered gets unregistered\n     *\n     * let unsub = myState.on(['range.start', 'range.end'], (start, end) => {\n     *      console.log('Start', start);\n     *      console.log('End', end);\n     * });\n     *\n     * // Unsubscribe\n     * unsub()\n     *\n     * On takes an optional boolean value as the last parameter, which if passed as a true value the handler gets called\n     * during registration itself.\n     *\n     * @param {Array.<String>} props List of properties which is of interest\n     * @param {Function} fn Listener to be executed when any of them is changed. The listener is called with the old\n     *                      value and new value of the properties\n     * @param {*} instantCall When registered if the function is to be triggered with the value of the property\n     *\n     * @return {Function} function to unsubscribe from the listeners registry\n     */\n    on (props, fn, instantCall) {\n        const\n            propsArr = props instanceof Array ? props : [props],\n            // All there listeners will be executed in the current stack frame\n            unsub = this._graph.createElectricNodeOf(propsArr, {\n                type: 'CurrFrame',\n                fn\n            });\n\n        if (instantCall) {\n            // Bar current next frame listeners from getting fired\n            this._graph.stopPropagation().setPropagationOverride('nextFrame').resetNodeValue(...props);\n        }\n        return unsub;\n    }\n\n    /**\n     * Register a listener for the next frame when a property or group of properties is changed.\n     *\n     * @example\n     * See the examples for the on listener\n     *\n     * @param {Array.<String>} props List of properties which is of interest\n     * @param {Function} fn Listener to be executed when any of them is changed. The listener is called with the old\n     *                      value and new value of the properties. Here the oldvalue is last value of the last frame\n     * @param {*} instantCall When registered if the function is to be triggered with the value of the property\n     *\n     * @return {Function} function to unsubscribe from the listeners registry\n     */\n    next (props, fn, instantCall) {\n        const\n            propsArr = props instanceof Array ? props : [props],\n            // All there listeners will be executed at the tick of next animation frame\n            unsub = this._graph.createElectricNodeOf(propsArr, {\n                type: 'NextFrame',\n                fn\n            });\n\n        // @todo check support for this from the graph side\n        if (instantCall) {\n            // Bar current frame listeners from getting fired\n            this._graph.stopPropagation().setPropagationOverride('currentFrame').resetNodeValue(...props);\n        }\n\n        return unsub;\n    }\n\n    /**\n     * Lock queues the request of property change and releases the change when unlock is called. This is helpful when\n     * multiple property is getting called and the model listeners are to be fired once at the end of update.\n     *\n     * @return {Model} instance of the model\n     */\n    lock () {\n        this._lockFlag = true;\n        this._reqQ.length = 0;\n        return this;\n    }\n\n    /**\n     * Unlock unleashes the change done after the lock was called.\n\n     * @return {Model} instance of the model\n     */\n    unlock () {\n        this._lockFlag = false;\n        this.setProp(...this._reqQ);\n        this._reqQ.length = 0;\n        return this;\n    }\n\n    /**\n     * This acts as getter and setter. If the function is called by passing only one argument, it retrieve the value\n     * associated with the property. If the same function is called using two parameters, first one being the property\n     * and second one being the value, then the value is set for the property and the handlers are called (if any)\n     * which got registered using the on function\n     *\n     * Getter\n     * @param {string} prop property path whose value to be retrieved\n     * @return {Object} value of the property at the time of call\n     *\n     * Setter\n     * @param {string} property property path whose value to be ser\n     * @return {Model} instance of the model\n     */\n    prop (...params) {\n        let prop,\n            val,\n            len;\n\n        switch (len = params.length) {\n        case 1:\n            prop = params[0];\n            break;\n\n        case 2:\n            prop = params[0];\n            val = params[1];\n            break;\n\n        default:\n            return this;\n        }\n\n        if (len === 2) {\n            this._lockFlag ? this._reqQ.push([prop, val]) : this.setProp([prop, val]);\n            return this;\n        }\n\n        return this._graph.getNodeValue(prop);\n    }\n\n    // eslint-disable-next-line require-jsdoc\n    setProp (...props) {\n        // Filter out the calculated variables, so that it cant be changed from outside\n        // @todo if a node is not leafValue, and change is called, ignore it too\n        // props = props.filter(prop => !(VirtualObj.walkTill(prop[0].split('.'), this._vObj).leafValue()\n        //     instanceof CalculatedVar));\n\n        if (props.length === 0) {\n            return this;\n        }\n\n        this._graph.update(...props.map(prop => [this._graph.getNodeFromQualifiedName(prop[0]), prop[1]]));\n        return this;\n    }\n\n    /**\n     * Retrieves the graph representation of the object\n     * @return {Graph} instance of the graph associated to the model\n     */\n    graph () {\n        return this._graph;\n    }\n\n    /**\n     * Get serialized data from the model\n     *\n     * @return {Object} Serialized data\n     */\n    serialize () {\n        return this._graph.root.seed;\n    }\n}\n\nexport default Model;\n","import Model from './model';\n\nexport default Model;\n","module.exports = function(module) {\n\tif (!module.webpackPolyfill) {\n\t\tmodule.deprecate = function() {};\n\t\tmodule.paths = [];\n\t\t// module.parent = undefined by default\n\t\tif (!module.children) module.children = [];\n\t\tObject.defineProperty(module, \"loaded\", {\n\t\t\tenumerable: true,\n\t\t\tget: function() {\n\t\t\t\treturn module.l;\n\t\t\t}\n\t\t});\n\t\tObject.defineProperty(module, \"id\", {\n\t\t\tenumerable: true,\n\t\t\tget: function() {\n\t\t\t\treturn module.i;\n\t\t\t}\n\t\t});\n\t\tmodule.webpackPolyfill = 1;\n\t}\n\treturn module;\n};\n","'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n    value: true\n});\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\nvar _lib = require('./lib');\n\nvar _lib2 = _interopRequireDefault(_lib);\n\nvar _containerManager = require('./container-manager');\n\nvar _containerManager2 = _interopRequireDefault(_containerManager);\n\nvar slLib = _lib2['default'].init(typeof window !== \"undefined\" ? window : undefined),\n    doc = slLib.win.document,\n    M = slLib.win.Math,\n    max = M.max,\n    round = M.round,\n    BLANK = '',\n    htmlSplCharSpace = { ' ': '&nbsp;' },\n    documentSupport = slLib.getDocumentSupport(),\n    SVG_BBOX_CORRECTION = documentSupport.isWebKit ? 0 : 4.5;\n\n/*\n * Create new instance of SmartLabelManager.\n *\n * SmartLabelManager controls the lifetime of the execution space where the text's metrics will be calculated.\n * This takes a string for a given style and returns the height, width.\n * If a bound box is defined it wraps the text and returns the wrapped height and width.\n * It allows to append ellipsis at the end if the text is truncated.\n *\n * @param {String | Number} id - Id of the instance. If the same id is passed, it disposes the old instance and\n *                              save the new one;\n * @param {String | HTMLElement} container - The id or the instance of the container where the intermediate dom\n *                              elements are to be attached. If not passed, it appends in div\n *\n * @param {Boolean} useEllipses - This decides if a ellipses to be appended if the text is truncated.\n * @param {Object} options - Control options\n *                          {\n *                              maxCacheLimit: No of letter to be cached. Default: 500.\n *                          }\n * @constructor\n */\nfunction SmartLabelManager(id, container, useEllipses, options) {\n    var wrapper,\n        prop,\n        max,\n        prevInstance,\n        isBrowserLess = false,\n        store = SmartLabelManager.store;\n\n    if (typeof id === 'undefined' || typeof id === 'object') {\n        return;\n    }\n\n    if (prevInstance = store[id]) {\n        prevInstance.dispose();\n    }\n\n    store[id] = this;\n    options = options || {};\n    options.maxCacheLimit = isFinite(max = options.maxCacheLimit) ? max : slLib.maxDefaultCacheLimit;\n\n    if (typeof container === 'string') {\n        container = doc.getElementById(container);\n    }\n\n    wrapper = slLib.createContainer(container);\n    wrapper.innerHTML = slLib.testStrAvg;\n\n    if (documentSupport.isHeadLess || !documentSupport.isIE && !wrapper.offsetHeight && !wrapper.offsetWidth) {\n        isBrowserLess = true;\n    }\n\n    wrapper.innerHTML = '';\n    for (prop in slLib.parentContainerStyle) {\n        wrapper.style[prop] = slLib.parentContainerStyle[prop];\n    }\n\n    this.id = id;\n    this.parentContainer = wrapper;\n\n    this._containerManager = new _containerManager2['default'](wrapper, isBrowserLess, 10);\n    this._showNoEllipses = !useEllipses;\n    this._init = true;\n    this.style = {};\n    this.options = options;\n\n    this.setStyle();\n}\n\n/*\n * getSmartText returns the text separated by <br/> whenever a break is necessary. This is to recgonize one\n * generalized format independent of the implementation (canvas based solution, svg based solution). This method\n * converts the output of getSmartText().text to array of lines if the text is wrapped. It sets a named property\n * `lines` on the object passed as parameter.\n *\n * @param {Object} smartlabel - the object returned by getSmartText based on which line arr which to be formed.\n *\n * @return {Object} - The same object which was passed in the arguments. Also a named property `lines` is set.\n */\nSmartLabelManager.textToLines = function (smartlabel) {\n    smartlabel = smartlabel || {};\n\n    if (!smartlabel.text) {\n        smartlabel.text = '';\n    } else if (typeof smartlabel.text !== 'string') {\n        smartlabel.text = smartlabel.text.toString();\n    }\n\n    smartlabel.lines = smartlabel.text.split(/\\n|<br\\s*?\\/?>/ig);\n    return smartlabel;\n};\n\n// Saves all the instance created so far\nSmartLabelManager.store = {};\n\n// Calculates space taken by a character with an approximation value which is calculated by repeating the\n// character by string length times.\nSmartLabelManager.prototype._calCharDimWithCache = function (text, calculateDifference, length) {\n    if (!this._init) {\n        return false;\n    }\n\n    var size,\n        csArr,\n        tw,\n        twi,\n        cachedStyle,\n        asymmetricDifference,\n        maxAdvancedCacheLimit = this.options.maxCacheLimit,\n        container = this._container,\n        style = this.style || {},\n        cache = this._advancedCache || (this._advancedCache = {}),\n        advancedCacheKey = this._advancedCacheKey || (this._advancedCacheKey = []),\n        cacheName = text + (style.fontSize || BLANK) + (style.fontFamily || BLANK) + (style.fontWeight || BLANK) + (style.fontStyle || BLANK),\n        cacheInitName = text + 'init' + (style.fontSize || BLANK) + (style.fontFamily || BLANK) + (style.fontWeight || BLANK) + (style.fontStyle || BLANK);\n\n    htmlSplCharSpace[text] && (text = htmlSplCharSpace[text]);\n\n    if (!calculateDifference) {\n        asymmetricDifference = 0;\n    } else {\n        if ((asymmetricDifference = cache[cacheInitName]) === undefined) {\n            container.innerHTML = text.repeat ? text.repeat(length) : Array(length + 1).join(text); // jshint ignore:line\n            tw = container.offsetWidth;\n\n            container.innerHTML = text;\n            twi = container.offsetWidth;\n\n            asymmetricDifference = cache[cacheInitName] = (tw - length * twi) / (length + 1);\n            advancedCacheKey.push(cacheInitName);\n            if (advancedCacheKey.length > maxAdvancedCacheLimit) {\n                delete cache[advancedCacheKey.shift()];\n            }\n        }\n    }\n\n    if (cachedStyle = cache[cacheName]) {\n        csArr = cachedStyle.split(',');\n        return {\n            width: parseFloat(csArr[0], 10),\n            height: parseFloat(csArr[1], 10)\n        };\n    }\n\n    container.innerHTML = text;\n\n    size = {\n        height: container.offsetHeight,\n        width: container.offsetWidth + asymmetricDifference\n    };\n\n    cache[cacheName] = size.width + ',' + size.height;\n    advancedCacheKey.push(cacheName);\n    if (advancedCacheKey.length > maxAdvancedCacheLimit) {\n        delete cache[advancedCacheKey.shift()];\n    }\n\n    return size;\n};\n\n// Provide function to calculate the height and width based on the environment and available support from dom.\nSmartLabelManager.prototype._getWidthFn = function () {\n    var contObj = this._containerObj,\n        container = this._container,\n        svgText = contObj.svgText;\n\n    if (svgText) {\n        return function (str) {\n            var bbox, width;\n\n            svgText.textContent = str;\n            bbox = svgText.getBBox();\n            width = bbox.width - SVG_BBOX_CORRECTION;\n            if (width < 1) {\n                width = bbox.width;\n            }\n\n            return width;\n        };\n    } else {\n        return function (str) {\n            container.innerHTML = str;\n            return container.offsetWidth;\n        };\n    }\n};\n\n/*\n * Sets the style based on which the text's metrics to be calculated.\n *\n * @param {Object} style - The style object which affects the text size\n *                      {\n *                          fontSize / 'font-size' : MUST BE FOLLOWED BY PX (10px, 11px)\n *                          fontFamily / 'font-family'\n *                          fontWeight / 'font-weight'\n *                          fontStyle / 'font-style'\n *                      }\n *\n * @return {SmartLabelManager} - Current instance of SmartLabelManager\n */\nSmartLabelManager.prototype.setStyle = function (style) {\n    if (!this._init) {\n        return this;\n    }\n\n    var sCont;\n\n    if (style === this.style && !this._styleNotSet) {\n        return;\n    }\n\n    if (!style) {\n        style = this.style;\n    }\n\n    slLib.setLineHeight(style);\n    this.style = style;\n\n    this._containerObj = sCont = this._containerManager.get(style);\n\n    if (this._containerObj) {\n        this._container = sCont.node;\n        this._context = sCont.context;\n        this._cache = sCont.charCache;\n        this._lineHeight = sCont.lineHeight;\n        this._styleNotSet = false;\n    } else {\n        this._styleNotSet = true;\n    }\n\n    return this;\n};\n\n/*\n * Decides whether ellipses to be shown if the node is truncated\n *\n * @param {Boolean} useEllipses - decides if a ellipses to be appended if the text is truncated. Default: false\n *\n * @return {SmartLabelManager} - Current instance of SmartLabelManager\n */\nSmartLabelManager.prototype.useEllipsesOnOverflow = function (useEllipses) {\n    if (!this._init) {\n        return this;\n    }\n    this._showNoEllipses = !useEllipses;\n    return this;\n};\n\n/*\n * Get wrapped or truncated text if a bound box is defined around it. The result text would be separated by <br/>\n * if wrapped\n *\n * @param {String} text - the subject text\n * @param {Number} maxWidth - width in px of the the bound box\n * @param {Number} maxHeight - height in px of the the bound box\n * @param {Boolean} noWrap - whether the text to be wrapped. Default false.\n *\n * @return {Object} - The metrics of the text bounded by the box\n *                  {\n *                      height : height of the wrapped text\n *                      width : width of the wrapped text\n *                      isTruncated : whether the text is truncated\n *                      maxHeight : Maximum height given\n *                      maxWidth : Maximum width given\n *                      oriText : Original text sent\n *                      oriTextHeight : Original text height\n *                      oriTextWidth : Original text width\n *                      text : SMART TEXT\n *                  }\n */\nSmartLabelManager.prototype.getSmartText = function (text, maxWidth, maxHeight, noWrap) {\n    if (!this._init) {\n        return false;\n    }\n\n    if (text === undefined || text === null) {\n        text = '';\n    } else if (typeof text !== 'string') {\n        text = text.toString();\n    }\n\n    var len,\n        trimStr,\n        tempArr,\n        tmpText,\n        maxWidthWithEll,\n        toolText,\n        oriWidth,\n        oriHeight,\n        newCharIndex,\n        nearestChar,\n        tempChar,\n        getWidth,\n        initialLeft,\n        initialTop,\n        getOriSizeImproveObj,\n        spanArr,\n        x,\n        y,\n        minWidth,\n        elem,\n        chr,\n        elemRightMostPoint,\n        elemLowestPoint,\n        lastBR,\n        removeFromIndex,\n        removeFromIndexForEllipses,\n        hasHTMLTag = false,\n        maxStrWidth = 0,\n        lastDash = -1,\n        lastSpace = -1,\n        lastIndexBroken = -1,\n        strWidth = 0,\n        strHeight = 0,\n        oriTextArr = [],\n        i = 0,\n        ellipsesStr = this._showNoEllipses ? '' : '...',\n        lineHeight = this._lineHeight,\n        context = this._context,\n        container = this._container,\n        sCont = this._containerObj,\n        ellipsesWidth = sCont.ellipsesWidth,\n        dotWidth = sCont.dotWidth,\n        characterArr = [],\n        dashIndex = -1,\n        spaceIndex = -1,\n        lastLineBreak = -1,\n        fastTrim = function fastTrim(str) {\n        str = str.replace(/^\\s\\s*/, '');\n        var ws = /\\s/,\n            i = str.length;\n        while (ws.test(str.charAt(i -= 1))) {/* jshint noempty:false */}\n        return str.slice(0, i + 1);\n    },\n        smartLabel = {\n        text: text,\n        maxWidth: maxWidth,\n        maxHeight: maxHeight,\n        width: null,\n        height: null,\n        oriTextWidth: null,\n        oriTextHeight: null,\n        oriText: text,\n        isTruncated: false\n    };\n\n    getWidth = this._getWidthFn();\n\n    // In some browsers, offsetheight of a single-line text is getting little (1 px) heigher value of the\n    // lineheight. As a result, smartLabel is unable to return single-line text.\n    // To fix this, increase the maxHeight a little amount. Hence maxHeight =  lineHeight * 1.2\n    if (maxHeight === lineHeight) {\n        maxHeight *= 1.2;\n    }\n\n    if (container) {\n        if (!documentSupport.isBrowserLess) {\n            hasHTMLTag = slLib.xmlTagRegEx.test(text);\n            if (!hasHTMLTag) {\n                // Due to support of <,> for xml we convert &lt;, &gt; to <,> respectively so to get the correct\n                // width it is required to convert the same before calculation for the new improve version of the\n                // get text width.\n                tmpText = text.replace(slLib.ltgtRegex, function (match) {\n                    return match === '&lt;' ? '<' : '>';\n                });\n                getOriSizeImproveObj = this.getOriSize(tmpText, true);\n\n                smartLabel.oriTextWidth = oriWidth = getOriSizeImproveObj.width;\n                smartLabel.oriTextHeight = oriHeight = getOriSizeImproveObj.height;\n            } else {\n                container.innerHTML = text;\n                smartLabel.oriTextWidth = oriWidth = container.offsetWidth;\n                smartLabel.oriTextHeight = oriHeight = container.offsetHeight;\n            }\n\n            if (oriHeight <= maxHeight && oriWidth <= maxWidth) {\n                smartLabel.width = smartLabel.oriTextWidth = oriWidth;\n                smartLabel.height = smartLabel.oriTextHeight = oriHeight;\n                return smartLabel;\n            }\n\n            if (lineHeight > maxHeight) {\n                smartLabel.text = '';\n                smartLabel.width = smartLabel.oriTextWidth = 0;\n                smartLabel.height = smartLabel.oriTextHeight = 0;\n                return smartLabel;\n            }\n        }\n\n        // Calculate width with ellipses\n        text = fastTrim(text).replace(/(\\s+)/g, ' ');\n        maxWidthWithEll = this._showNoEllipses ? maxWidth : maxWidth - ellipsesWidth;\n\n        if (!hasHTMLTag) {\n            oriTextArr = text.split('');\n            len = oriTextArr.length;\n            trimStr = '', tempArr = [];\n            tempChar = oriTextArr[0];\n\n            if (this._cache[tempChar]) {\n                minWidth = this._cache[tempChar].width;\n            } else {\n                minWidth = getWidth(tempChar);\n                this._cache[tempChar] = { width: minWidth };\n            }\n\n            if (maxWidthWithEll > minWidth) {\n                tempArr = text.substr(0, slLib.getNearestBreakIndex(text, maxWidthWithEll, this)).split('');\n                i = tempArr.length;\n            } else if (minWidth > maxWidth) {\n                smartLabel.text = '';\n                smartLabel.width = smartLabel.oriTextWidth = smartLabel.height = smartLabel.oriTextHeight = 0;\n                return smartLabel;\n            } else if (ellipsesStr) {\n                maxWidthWithEll = maxWidth - 2 * dotWidth;\n                if (maxWidthWithEll > minWidth) {\n                    ellipsesStr = '..';\n                } else {\n                    maxWidthWithEll = maxWidth - dotWidth;\n                    if (maxWidthWithEll > minWidth) {\n                        ellipsesStr = '.';\n                    } else {\n                        maxWidthWithEll = 0;\n                        ellipsesStr = '';\n                    }\n                }\n            }\n\n            strWidth = getWidth(tempArr.join(''));\n            strHeight = this._lineHeight;\n\n            if (noWrap) {\n                for (; i < len; i += 1) {\n                    tempChar = tempArr[i] = oriTextArr[i];\n                    if (this._cache[tempChar]) {\n                        minWidth = this._cache[tempChar].width;\n                    } else {\n                        if (!getOriSizeImproveObj || !(minWidth = getOriSizeImproveObj.detailObj[tempChar])) {\n                            minWidth = getWidth(tempChar);\n                        }\n                        this._cache[tempChar] = {\n                            width: minWidth\n                        };\n                    }\n                    strWidth += minWidth;\n                    if (strWidth > maxWidthWithEll) {\n                        if (!trimStr) {\n                            trimStr = tempArr.slice(0, -1).join('');\n                        }\n                        if (strWidth > maxWidth) {\n                            smartLabel.text = fastTrim(trimStr) + ellipsesStr;\n                            smartLabel.tooltext = smartLabel.oriText;\n                            smartLabel.width = getWidth(smartLabel.text);\n                            smartLabel.height = this._lineHeight;\n                            return smartLabel;\n                        }\n                    }\n                }\n\n                smartLabel.text = tempArr.join('');\n                smartLabel.width = strWidth;\n                smartLabel.height = this._lineHeight;\n                return smartLabel;\n            } else {\n                for (; i < len; i += 1) {\n                    tempChar = tempArr[i] = oriTextArr[i];\n                    if (tempChar === ' ' && !context) {\n                        tempChar = '&nbsp;';\n                    }\n\n                    if (this._cache[tempChar]) {\n                        minWidth = this._cache[tempChar].width;\n                    } else {\n                        if (!getOriSizeImproveObj || !(minWidth = getOriSizeImproveObj.detailObj[tempChar])) {\n                            minWidth = getWidth(tempChar);\n                        }\n                        this._cache[tempChar] = {\n                            width: minWidth\n                        };\n                    }\n                    strWidth += minWidth;\n\n                    if (strWidth > maxWidthWithEll) {\n                        if (!trimStr) {\n                            trimStr = tempArr.slice(0, -1).join('');\n                        }\n                        if (strWidth > maxWidth) {\n                            /** @todo use regular expressions for better performance. */\n                            lastSpace = text.substr(0, tempArr.length).lastIndexOf(' ');\n                            lastDash = text.substr(0, tempArr.length).lastIndexOf('-');\n                            if (lastSpace > lastIndexBroken) {\n                                strWidth = getWidth(tempArr.slice(lastIndexBroken + 1, lastSpace).join(''));\n                                tempArr.splice(lastSpace, 1, '<br/>');\n                                lastIndexBroken = lastSpace;\n                                newCharIndex = lastSpace + 1;\n                            } else if (lastDash > lastIndexBroken) {\n                                if (lastDash === tempArr.length - 1) {\n                                    strWidth = getWidth(tempArr.slice(lastIndexBroken + 1, lastSpace).join(''));\n                                    tempArr.splice(lastDash, 1, '<br/>-');\n                                } else {\n                                    strWidth = getWidth(tempArr.slice(lastIndexBroken + 1, lastSpace).join(''));\n                                    tempArr.splice(lastDash, 1, '-<br/>');\n                                }\n                                lastIndexBroken = lastDash;\n                                newCharIndex = lastDash + 1;\n                            } else {\n                                tempArr.splice(tempArr.length - 1, 1, '<br/>' + oriTextArr[i]);\n                                lastLineBreak = tempArr.length - 2;\n                                strWidth = getWidth(tempArr.slice(lastIndexBroken + 1, lastLineBreak + 1).join(''));\n                                lastIndexBroken = lastLineBreak;\n                                newCharIndex = i;\n                            }\n                            strHeight += this._lineHeight;\n                            if (strHeight > maxHeight) {\n                                smartLabel.text = fastTrim(trimStr) + ellipsesStr;\n                                smartLabel.tooltext = smartLabel.oriText;\n                                // The max width among all the lines will be the width of the string.\n                                smartLabel.width = maxWidth;\n                                smartLabel.height = strHeight - this._lineHeight;\n                                return smartLabel;\n                            } else {\n                                maxStrWidth = max(maxStrWidth, strWidth);\n                                trimStr = null;\n                                nearestChar = slLib.getNearestBreakIndex(text.substr(newCharIndex), maxWidthWithEll, this);\n                                strWidth = getWidth(text.substr(newCharIndex, nearestChar || 1));\n                                if (tempArr.length < newCharIndex + nearestChar) {\n                                    tempArr = tempArr.concat(text.substr(tempArr.length, newCharIndex + nearestChar - tempArr.length).split(''));\n                                    i = tempArr.length - 1;\n                                }\n                            }\n                        }\n                    }\n                }\n\n                maxStrWidth = max(maxStrWidth, strWidth);\n\n                smartLabel.text = tempArr.join('');\n                smartLabel.width = maxStrWidth;\n                smartLabel.height = strHeight;\n                return smartLabel;\n            }\n        } else {\n            toolText = text.replace(slLib.spanAdditionRegx, '$2');\n            text = text.replace(slLib.spanAdditionRegx, slLib.spanAdditionReplacer);\n            text = text.replace(/(<br\\s*\\/*\\>)/g, '<span class=\"' + [slLib.classNameWithTag, ' ', slLib.classNameWithTagBR].join('') + '\">$1</span>');\n\n            container.innerHTML = text;\n\n            spanArr = container[documentSupport.childRetriverFn](documentSupport.childRetriverString);\n\n            for (x = 0, y = spanArr.length; x < y; x += 1) {\n                elem = spanArr[x];\n                //chech whether this span is temporary inserted span from it's class\n                if (documentSupport.noClassTesting || slLib.classNameReg.test(elem.className)) {\n                    chr = elem.innerHTML;\n                    if (chr !== '') {\n                        if (chr === ' ') {\n                            spaceIndex = characterArr.length;\n                        } else if (chr === '-') {\n                            dashIndex = characterArr.length;\n                        }\n\n                        characterArr.push({\n                            spaceIdx: spaceIndex,\n                            dashIdx: dashIndex,\n                            elem: elem\n                        });\n                        oriTextArr.push(chr);\n                    }\n                }\n            }\n\n            i = 0;\n            len = characterArr.length;\n            minWidth = characterArr[0].elem.offsetWidth;\n\n            if (minWidth > maxWidth) {\n                smartLabel.text = '';\n                smartLabel.width = smartLabel.oriTextWidth = smartLabel.height = smartLabel.oriTextHeight = 0;\n\n                return smartLabel;\n            } else if (minWidth > maxWidthWithEll && !this._showNoEllipses) {\n\n                maxWidthWithEll = maxWidth - 2 * dotWidth;\n                if (maxWidthWithEll > minWidth) {\n                    ellipsesStr = '..';\n                } else {\n                    maxWidthWithEll = maxWidth - dotWidth;\n                    if (maxWidthWithEll > minWidth) {\n                        ellipsesStr = '.';\n                    } else {\n                        maxWidthWithEll = 0;\n                        ellipsesStr = '';\n                    }\n                }\n            }\n\n            initialLeft = characterArr[0].elem.offsetLeft;\n            initialTop = characterArr[0].elem.offsetTop;\n\n            if (noWrap) {\n                for (; i < len; i += 1) {\n                    elem = characterArr[i].elem;\n                    elemRightMostPoint = elem.offsetLeft - initialLeft + elem.offsetWidth;\n\n                    if (elemRightMostPoint > maxWidthWithEll) {\n                        if (!removeFromIndexForEllipses) {\n                            removeFromIndexForEllipses = i;\n                        }\n                        if (container.offsetWidth > maxWidth) {\n                            removeFromIndex = i;\n                            i = len;\n                        }\n                    }\n                }\n            } else {\n                for (; i < len; i += 1) {\n                    elem = characterArr[i].elem;\n                    elemLowestPoint = elem.offsetHeight + (elem.offsetTop - initialTop);\n                    elemRightMostPoint = elem.offsetLeft - initialLeft + elem.offsetWidth;\n\n                    lastBR = null;\n\n                    if (elemRightMostPoint > maxWidthWithEll) {\n                        if (!removeFromIndexForEllipses) {\n                            removeFromIndexForEllipses = i;\n                        }\n\n                        if (elemRightMostPoint > maxWidth) {\n                            lastSpace = characterArr[i].spaceIdx;\n                            lastDash = characterArr[i].dashIdx;\n                            if (lastSpace > lastIndexBroken) {\n                                characterArr[lastSpace].elem.innerHTML = '<br/>';\n                                lastIndexBroken = lastSpace;\n                            } else if (lastDash > lastIndexBroken) {\n                                if (lastDash === i) {\n                                    // in case the overflowing character itself is the '-'\n                                    characterArr[lastDash].elem.innerHTML = '<br/>-';\n                                } else {\n                                    characterArr[lastDash].elem.innerHTML = '-<br/>';\n                                }\n                                lastIndexBroken = lastDash;\n                            } else {\n                                elem.parentNode.insertBefore(lastBR = doc.createElement('br'), elem);\n                            }\n\n                            //check whether this break made current element outside the area height\n                            if (elem.offsetHeight + elem.offsetTop > maxHeight) {\n                                //remove the lastly inserted line break\n                                if (lastBR) {\n                                    lastBR.parentNode.removeChild(lastBR);\n                                } else if (lastIndexBroken === lastDash) {\n                                    characterArr[lastDash].elem.innerHTML = '-';\n                                } else {\n                                    characterArr[lastSpace].elem.innerHTML = ' ';\n                                }\n                                removeFromIndex = i;\n                                //break the looping condition\n                                i = len;\n                            } else {\n                                removeFromIndexForEllipses = null;\n                            }\n                        }\n                    } else {\n                        //check whether this break made current element outside the area height\n                        if (elemLowestPoint > maxHeight) {\n                            removeFromIndex = i;\n                            i = len;\n                        }\n                    }\n                }\n            }\n\n            if (removeFromIndex < len) {\n                //set the trancated property of the smartlabel\n                smartLabel.isTruncated = true;\n\n                /** @todo is this really needed? */\n                removeFromIndexForEllipses = removeFromIndexForEllipses ? removeFromIndexForEllipses : removeFromIndex;\n\n                for (i = len - 1; i >= removeFromIndexForEllipses; i -= 1) {\n                    elem = characterArr[i].elem;\n                    //chech whether this span is temporary inserted span from it's class\n                    elem.parentNode.removeChild(elem);\n                }\n\n                for (; i >= 0; i -= 1) {\n                    elem = characterArr[i].elem;\n                    if (slLib.classNameBrReg.test(elem.className)) {\n                        //chech whether this span is temporary inserted span from it's class\n                        elem.parentNode.removeChild(elem);\n                    } else {\n                        i = 0;\n                    }\n                }\n            }\n\n            //get the smart text\n            smartLabel.text = container.innerHTML.replace(slLib.spanRemovalRegx, '$1').replace(/\\&amp\\;/g, '&');\n            if (smartLabel.isTruncated) {\n                smartLabel.text += ellipsesStr;\n                smartLabel.tooltext = toolText;\n            }\n        }\n\n        smartLabel.height = container.offsetHeight;\n        smartLabel.width = container.offsetWidth;\n\n        return smartLabel;\n    } else {\n        smartLabel.error = new Error('Body Tag Missing!');\n        return smartLabel;\n    }\n};\n\n/*\n * Get the height and width of a text.\n *\n * @param {String} text - Text whose metrics to be measured\n * @param {Boolean} Optional detailedCalculationFlag - this flag if set it calculates per letter position\n *                          information and returns it. Ideally you dont need it unless you want to post process the\n *                          string. And its an EXPENSIVE OPERATION.\n *\n * @return {Object} - If detailedCalculationFlag is set to true the returned object would be\n *                  {\n *                      height: height of the text\n *                      width: width of the text\n *                      detailObj: detail calculation of letters in the format {lettername: width}\n *                  }\n *                  If detailedCalculationFlag is set to false the returned object wont have the detailObj prop.\n */\nSmartLabelManager.prototype.getOriSize = function (text, detailedCalculationFlag) {\n    if (!this._init) {\n        return false;\n    }\n\n    var textArr,\n        letter,\n        lSize,\n        i,\n        l,\n        cumulativeSize = 0,\n        height = 0,\n        indiSizeStore = {};\n\n    if (!detailedCalculationFlag) {\n        return this._calCharDimWithCache(text);\n    }\n\n    // Calculate the width of every letter with an approximation\n    textArr = text.split('');\n    for (i = 0, l = textArr.length; i < l; i++) {\n        letter = textArr[i];\n        lSize = this._calCharDimWithCache(letter, true, textArr.length);\n        height = max(height, lSize.height);\n        cumulativeSize += lSize.width;\n        indiSizeStore[letter] = lSize.width;\n    }\n\n    return {\n        width: round(cumulativeSize),\n        height: height,\n        detailObj: indiSizeStore\n    };\n};\n\n/*\n * Dispose the container and object allocated by the smartlabel\n */\nSmartLabelManager.prototype.dispose = function () {\n    if (!this._init) {\n        return this;\n    }\n\n    this._containerManager && this._containerManager.dispose && this._containerManager.dispose();\n\n    delete this._container;\n    delete this._context;\n    delete this._cache;\n    delete this._containerManager;\n    delete this._containerObj;\n    delete this.id;\n    delete this.style;\n    delete this.parentContainer;\n    delete this._showNoEllipses;\n\n    return this;\n};\n\nexports['default'] = SmartLabelManager;\nmodule.exports = exports['default'];","'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n\tvalue: true\n});\nvar lib = {\n\tinit: function init(win) {\n\t\tvar doc = win.document,\n\t\t    nav = win.navigator,\n\t\t    userAgent = nav.userAgent,\n\t\t    DIV = 'DIV',\n\t\t    ceil = Math.ceil,\n\t\t    floor = Math.floor,\n\t\t    containerInstanceCount = 0,\n\t\t    clsNameSpace = 'fusioncharts-smartlabel-',\n\t\t    containerClass = clsNameSpace + 'container',\n\t\t    classNameWithTag = clsNameSpace + 'tag',\n\t\t    classNameWithTagBR = clsNameSpace + 'br';\n\n\t\tlib = {\n\t\t\twin: win,\n\n\t\t\tcontainerClass: containerClass,\n\n\t\t\tclassNameWithTag: classNameWithTag,\n\n\t\t\tclassNameWithTagBR: classNameWithTagBR,\n\n\t\t\tmaxDefaultCacheLimit: 500,\n\n\t\t\tclassNameReg: new RegExp('\\b' + classNameWithTag + '\\b'),\n\n\t\t\tclassNameBrReg: new RegExp('\\b' + classNameWithTagBR + '\\b'),\n\n\t\t\tspanAdditionRegx: /(<[^<\\>]+?\\>)|(&(?:[a-z]+|#[0-9]+);|.)/ig,\n\n\t\t\tspanAdditionReplacer: '$1<span class=\"' + classNameWithTag + '\">$2</span>',\n\n\t\t\tspanRemovalRegx: new RegExp('\\\\<span[^\\\\>]+?' + classNameWithTag + '[^\\\\>]{0,}\\\\>(.*?)\\\\<\\\\/span\\\\>', 'ig'),\n\n\t\t\txmlTagRegEx: new RegExp('<[^>][^<]*[^>]+>', 'i'),\n\n\t\t\tltgtRegex: /&lt;|&gt;/g,\n\n\t\t\tbrReplaceRegex: /<br\\/>/ig,\n\n\t\t\ttestStrAvg: 'WgI',\n\n\t\t\t// This style is applied over the parent smartlabel container. The container is kept hidden from the viewport\n\t\t\tparentContainerStyle: {\n\t\t\t\tposition: 'absolute',\n\t\t\t\ttop: '-9999em',\n\t\t\t\twhiteSpace: 'nowrap',\n\t\t\t\tpadding: '0px',\n\t\t\t\twidth: '1px',\n\t\t\t\theight: '1px',\n\t\t\t\toverflow: 'hidden'\n\t\t\t},\n\n\t\t\t// All the style which might affect the text metrics\n\t\t\tsupportedStyle: {\n\t\t\t\tfont: 'font',\n\t\t\t\tfontFamily: 'font-family',\n\t\t\t\t'font-family': 'font-family',\n\t\t\t\tfontWeight: 'font-weight',\n\t\t\t\t'font-weight': 'font-weight',\n\t\t\t\tfontSize: 'font-size',\n\t\t\t\t'font-size': 'font-size',\n\t\t\t\tlineHeight: 'line-height',\n\t\t\t\t'line-height': 'line-height',\n\t\t\t\tfontStyle: 'font-style',\n\t\t\t\t'font-style': 'font-style'\n\t\t\t},\n\n\t\t\t// Get the support list for html the document where the text calcution is to be done.\n\t\t\tgetDocumentSupport: function getDocumentSupport() {\n\t\t\t\tvar childRetriverFn, childRetriverString, noClassTesting;\n\n\t\t\t\tif (doc.getElementsByClassName) {\n\t\t\t\t\tchildRetriverFn = 'getElementsByClassName';\n\t\t\t\t\tchildRetriverString = classNameWithTag;\n\t\t\t\t\tnoClassTesting = true;\n\t\t\t\t} else {\n\t\t\t\t\tchildRetriverFn = 'getElementsByTagName';\n\t\t\t\t\tchildRetriverString = 'span';\n\t\t\t\t\tnoClassTesting = false;\n\t\t\t\t}\n\n\t\t\t\treturn {\n\t\t\t\t\tisIE: /msie/i.test(userAgent) && !win.opera,\n\t\t\t\t\thasSVG: Boolean(win.SVGAngle || doc.implementation.hasFeature('http://www.w3.org/TR/SVG11/feature#BasicStructure', '1.1')),\n\t\t\t\t\tisHeadLess: new RegExp(' HtmlUnit').test(userAgent),\n\t\t\t\t\tisWebKit: new RegExp(' AppleWebKit/').test(userAgent),\n\t\t\t\t\tchildRetriverFn: childRetriverFn,\n\t\t\t\t\tchildRetriverString: childRetriverString,\n\t\t\t\t\tnoClassTesting: noClassTesting\n\t\t\t\t};\n\t\t\t},\n\n\t\t\t/*\n    * Create a html div element and attach it with a parent. All the subsequent operations are performed\n    * by upding this dom tree only.\n    *\n    * @param {HTMLElement} - The html element where the newly created div is to be attached. If not passed,\n    *                      the new div is appended on the body.\n    */\n\t\t\tcreateContainer: function createContainer(containerParent) {\n\t\t\t\tvar body, container;\n\n\t\t\t\tif (containerParent && (containerParent.offsetWidth || containerParent.offsetHeight)) {\n\t\t\t\t\tif (containerParent.appendChild) {\n\t\t\t\t\t\tcontainerParent.appendChild(container = doc.createElement(DIV));\n\t\t\t\t\t\tcontainer.className = containerClass;\n\t\t\t\t\t\tcontainer.setAttribute('aria-hidden', 'true');\n\t\t\t\t\t\tcontainer.setAttribute('role', 'presentation');\n\t\t\t\t\t\treturn container;\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tbody = doc.getElementsByTagName('body')[0];\n\n\t\t\t\t\tif (body && body.appendChild) {\n\t\t\t\t\t\tcontainer = doc.createElement(DIV);\n\t\t\t\t\t\tcontainer.className = containerClass;\n\t\t\t\t\t\tcontainer.setAttribute('aria-hidden', 'true');\n\t\t\t\t\t\tcontainer.setAttribute('role', 'presentation');\n\t\t\t\t\t\tcontainerInstanceCount += 1;\n\t\t\t\t\t\tbody.appendChild(container);\n\t\t\t\t\t\treturn container;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t},\n\n\t\t\t// Finds a approximate position where the text is to be broken\n\t\t\tgetNearestBreakIndex: function getNearestBreakIndex(text, maxWidth, sl) {\n\t\t\t\tif (!text || !text.length) {\n\t\t\t\t\treturn 0;\n\t\t\t\t}\n\n\t\t\t\tvar difference,\n\t\t\t\t    getWidth = sl._getWidthFn(),\n\t\t\t\t    charLen = 0,\n\t\t\t\t    increment = 0,\n\t\t\t\t    oriWidth = getWidth(text),\n\t\t\t\t    avgWidth = oriWidth / text.length;\n\n\t\t\t\tdifference = maxWidth;\n\t\t\t\tcharLen = ceil(maxWidth / avgWidth);\n\n\t\t\t\tif (oriWidth < maxWidth) {\n\t\t\t\t\treturn text.length - 1;\n\t\t\t\t}\n\n\t\t\t\tif (charLen > text.length) {\n\t\t\t\t\tdifference = maxWidth - oriWidth;\n\t\t\t\t\tcharLen = text.length;\n\t\t\t\t}\n\n\t\t\t\twhile (difference > 0) {\n\t\t\t\t\tdifference = maxWidth - getWidth(text.substr(0, charLen));\n\t\t\t\t\tincrement = floor(difference / avgWidth);\n\t\t\t\t\tif (increment) {\n\t\t\t\t\t\tcharLen += increment;\n\t\t\t\t\t} else {\n\t\t\t\t\t\treturn charLen;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\twhile (difference < 0) {\n\t\t\t\t\tdifference = maxWidth - getWidth(text.substr(0, charLen));\n\t\t\t\t\tincrement = floor(difference / avgWidth);\n\t\t\t\t\tif (increment) {\n\t\t\t\t\t\tcharLen += increment;\n\t\t\t\t\t} else {\n\t\t\t\t\t\treturn charLen;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn charLen;\n\t\t\t},\n\n\t\t\t/*\n    * Determine lineheight of a text for a given style. It adds propery lineHeight to the style passed\n    *\n    * @param {Object} - The style based on which the text's metric needs to be calculated. The calculation happens\n    *                  based on fontSize property, if its not present a default font size is assumed.\n    *\n    * @return {Object} - The style that was passed with lineHeight as a named propery set on the object.\n    */\n\t\t\tsetLineHeight: function setLineHeight(styleObj) {\n\t\t\t\tvar fSize = styleObj.fontSize = styleObj.fontSize || '12px';\n\t\t\t\tstyleObj.lineHeight = styleObj.lineHeight || styleObj['line-height'] || parseInt(fSize, 10) * 1.2 + 'px';\n\t\t\t\treturn styleObj;\n\t\t\t}\n\t\t};\n\n\t\treturn lib;\n\t}\n};\n\nexports['default'] = lib;\nmodule.exports = exports['default'];","const Muze = require('./muze');\n\nmodule.exports = Muze.default ? Muze.default : Muze;\n","'use strict';\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\nvar _lib = require('./lib');\n\nvar _lib2 = _interopRequireDefault(_lib);\n\nvar slLib = _lib2['default'].init(typeof window !== \"undefined\" ? window : undefined),\n    doc = slLib.win.document,\n    documentSupport = slLib.getDocumentSupport(),\n    SVG_BBOX_CORRECTION = documentSupport.isWebKit ? 0 : 4.5;\n\nfunction ContainerManager(parentContainer, isBrowserLess, maxContainers) {\n    var svg;\n\n    maxContainers = maxContainers > 5 ? maxContainers : 5;\n    maxContainers = maxContainers < 20 ? maxContainers : 20;\n\n    this.maxContainers = maxContainers;\n    this.first = null;\n    this.last = null;\n    this.containers = {};\n    this.length = 0;\n    this.rootNode = parentContainer;\n\n    if (isBrowserLess) {\n        svg = doc.createElementNS('http://www.w3.org/2000/svg', 'svg');\n        svg.setAttributeNS('http://www.w3.org/2000/svg', 'xlink', 'http://www.w3.org/1999/xlink');\n        svg.setAttributeNS('http://www.w3.org/2000/svg', 'height', '0');\n        svg.setAttributeNS('http://www.w3.org/2000/svg', 'width', '0');\n        this.svgRoot = svg;\n        this.rootNode.appendChild(svg);\n    }\n}\n\nContainerManager.prototype.get = function (style) {\n    var diff,\n        key,\n        containerObj,\n        containers = this.containers,\n        len = this.length,\n        max = this.maxContainers,\n        keyStr = '';\n\n    for (key in slLib.supportedStyle) {\n        if (style[key] !== undefined) {\n            keyStr += slLib.supportedStyle[key] + ':' + style[key] + ';';\n        }\n    }\n\n    if (!keyStr) {\n        return false;\n    }\n\n    if (containerObj = containers[keyStr]) {\n        if (this.first !== containerObj) {\n            containerObj.prev && (containerObj.prev.next = containerObj.next);\n            containerObj.next && (containerObj.next.prev = containerObj.prev);\n            containerObj.next = this.first;\n            containerObj.next.prev = containerObj;\n            this.last === containerObj && (this.last = containerObj.prev);\n            containerObj.prev = null;\n            this.first = containerObj;\n        }\n    } else {\n        if (len >= max) {\n            diff = len - max + 1;\n            // +1 is to remove an extra entry to make space for the new container to be added.\n            while (diff--) {\n                this.removeContainer(this.last);\n            }\n        }\n        containerObj = this.addContainer(keyStr);\n    }\n\n    return containerObj;\n};\n\nContainerManager.prototype.addContainer = function (keyStr) {\n    var node, container;\n\n    this.containers[keyStr] = container = {\n        next: null,\n        prev: null,\n        node: null,\n        ellipsesWidth: 0,\n        lineHeight: 0,\n        dotWidth: 0,\n        avgCharWidth: 4,\n        keyStr: keyStr,\n        charCache: {}\n    };\n\n    // Since the container objects are arranged from most recent to least recent order, we need to add the new\n    // object at the beginning of the list.\n    container.next = this.first;\n    container.next && (container.next.prev = container);\n    this.first = container;\n    if (!this.last) {\n        this.last = container;\n    }\n    this.length += 1;\n\n    node = container.node = doc.createElement('div');\n    this.rootNode.appendChild(node);\n\n    if (documentSupport.isIE && !documentSupport.hasSVG) {\n        node.style.setAttribute('cssText', keyStr);\n    } else {\n        node.setAttribute('style', keyStr);\n    }\n\n    node.setAttribute('aria-hidden', 'true');\n    node.setAttribute('role', 'presentation');\n    node.style.display = 'inline-block';\n\n    node.innerHTML = slLib.testStrAvg; // A test string.\n    container.lineHeight = node.offsetHeight;\n    container.avgCharWidth = node.offsetWidth / 3;\n\n    if (documentSupport.isBrowserLess) {\n        node = container.svgText = doc.createElementNS('http://www.w3.org/2000/svg', 'text');\n        node.setAttribute('style', keyStr);\n        this.svgRoot.appendChild(node);\n\n        node.textContent = slLib.testStrAvg; // A test string.\n        container.lineHeight = node.getBBox().height;\n        container.avgCharWidth = (node.getBBox().width - SVG_BBOX_CORRECTION) / 3;\n\n        node.textContent = '...';\n        container.ellipsesWidth = node.getBBox().width - SVG_BBOX_CORRECTION;\n        node.textContent = '.';\n        container.dotWidth = node.getBBox().width - SVG_BBOX_CORRECTION;\n    } else {\n        node.innerHTML = '...';\n        container.ellipsesWidth = node.offsetWidth;\n        node.innerHTML = '.';\n        container.dotWidth = node.offsetWidth;\n        node.innerHTML = '';\n    }\n\n    return container;\n};\n\nContainerManager.prototype.removeContainer = function (cObj) {\n    var keyStr = cObj.keyStr;\n\n    if (!keyStr || !this.length || !cObj) {\n        return;\n    }\n    this.length -= 1;\n\n    cObj.prev && (cObj.prev.next = cObj.next);\n    cObj.next && (cObj.next.prev = cObj.prev);\n    this.first === cObj && (this.first = cObj.next);\n    this.last === cObj && (this.last = cObj.prev);\n\n    cObj.node.parentNode.removeChild(cObj.node);\n\n    delete this.containers[keyStr];\n};\n\nContainerManager.prototype.dispose = function () {\n    var key,\n        containers = this.containers;\n\n    this.maxContainers = null;\n    for (key in containers) {\n        this.removeContainer(containers[key]);\n    }\n\n    this.rootNode.parentNode.removeChild(this.rootNode);\n\n    this.rootNode = null;\n    this.first = null;\n    this.last = null;\n};\n\nmodule.exports = ContainerManager;","export default function(a, b) {\n  return a < b ? -1 : a > b ? 1 : a >= b ? 0 : NaN;\n}\n","import ascending from \"./ascending\";\n\nexport default function(compare) {\n  if (compare.length === 1) compare = ascendingComparator(compare);\n  return {\n    left: function(a, x, lo, hi) {\n      if (lo == null) lo = 0;\n      if (hi == null) hi = a.length;\n      while (lo < hi) {\n        var mid = lo + hi >>> 1;\n        if (compare(a[mid], x) < 0) lo = mid + 1;\n        else hi = mid;\n      }\n      return lo;\n    },\n    right: function(a, x, lo, hi) {\n      if (lo == null) lo = 0;\n      if (hi == null) hi = a.length;\n      while (lo < hi) {\n        var mid = lo + hi >>> 1;\n        if (compare(a[mid], x) > 0) hi = mid;\n        else lo = mid + 1;\n      }\n      return lo;\n    }\n  };\n}\n\nfunction ascendingComparator(f) {\n  return function(d, x) {\n    return ascending(f(d), x);\n  };\n}\n","import ascending from \"./ascending\";\nimport bisector from \"./bisector\";\n\nvar ascendingBisect = bisector(ascending);\nexport var bisectRight = ascendingBisect.right;\nexport var bisectLeft = ascendingBisect.left;\nexport default bisectRight;\n","import {pair} from \"./pairs\";\n\nexport default function(values0, values1, reduce) {\n  var n0 = values0.length,\n      n1 = values1.length,\n      values = new Array(n0 * n1),\n      i0,\n      i1,\n      i,\n      value0;\n\n  if (reduce == null) reduce = pair;\n\n  for (i0 = i = 0; i0 < n0; ++i0) {\n    for (value0 = values0[i0], i1 = 0; i1 < n1; ++i1, ++i) {\n      values[i] = reduce(value0, values1[i1]);\n    }\n  }\n\n  return values;\n}\n","export default function(x) {\n  return x === null ? NaN : +x;\n}\n","var array = Array.prototype;\n\nexport var slice = array.slice;\nexport var map = array.map;\n","export default function(start, stop, step) {\n  start = +start, stop = +stop, step = (n = arguments.length) < 2 ? (stop = start, start = 0, 1) : n < 3 ? 1 : +step;\n\n  var i = -1,\n      n = Math.max(0, Math.ceil((stop - start) / step)) | 0,\n      range = new Array(n);\n\n  while (++i < n) {\n    range[i] = start + i * step;\n  }\n\n  return range;\n}\n","var e10 = Math.sqrt(50),\n    e5 = Math.sqrt(10),\n    e2 = Math.sqrt(2);\n\nexport default function(start, stop, count) {\n  var reverse,\n      i = -1,\n      n,\n      ticks,\n      step;\n\n  stop = +stop, start = +start, count = +count;\n  if (start === stop && count > 0) return [start];\n  if (reverse = stop < start) n = start, start = stop, stop = n;\n  if ((step = tickIncrement(start, stop, count)) === 0 || !isFinite(step)) return [];\n\n  if (step > 0) {\n    start = Math.ceil(start / step);\n    stop = Math.floor(stop / step);\n    ticks = new Array(n = Math.ceil(stop - start + 1));\n    while (++i < n) ticks[i] = (start + i) * step;\n  } else {\n    start = Math.floor(start * step);\n    stop = Math.ceil(stop * step);\n    ticks = new Array(n = Math.ceil(start - stop + 1));\n    while (++i < n) ticks[i] = (start - i) / step;\n  }\n\n  if (reverse) ticks.reverse();\n\n  return ticks;\n}\n\nexport function tickIncrement(start, stop, count) {\n  var step = (stop - start) / Math.max(0, count),\n      power = Math.floor(Math.log(step) / Math.LN10),\n      error = step / Math.pow(10, power);\n  return power >= 0\n      ? (error >= e10 ? 10 : error >= e5 ? 5 : error >= e2 ? 2 : 1) * Math.pow(10, power)\n      : -Math.pow(10, -power) / (error >= e10 ? 10 : error >= e5 ? 5 : error >= e2 ? 2 : 1);\n}\n\nexport function tickStep(start, stop, count) {\n  var step0 = Math.abs(stop - start) / Math.max(0, count),\n      step1 = Math.pow(10, Math.floor(Math.log(step0) / Math.LN10)),\n      error = step0 / step1;\n  if (error >= e10) step1 *= 10;\n  else if (error >= e5) step1 *= 5;\n  else if (error >= e2) step1 *= 2;\n  return stop < start ? -step1 : step1;\n}\n","export default function(values) {\n  return Math.ceil(Math.log(values.length) / Math.LN2) + 1;\n}\n","import number from \"./number\";\n\nexport default function(values, p, valueof) {\n  if (valueof == null) valueof = number;\n  if (!(n = values.length)) return;\n  if ((p = +p) <= 0 || n < 2) return +valueof(values[0], 0, values);\n  if (p >= 1) return +valueof(values[n - 1], n - 1, values);\n  var n,\n      i = (n - 1) * p,\n      i0 = Math.floor(i),\n      value0 = +valueof(values[i0], i0, values),\n      value1 = +valueof(values[i0 + 1], i0 + 1, values);\n  return value0 + (value1 - value0) * (i - i0);\n}\n","export var prefix = \"$\";\n\nfunction Map() {}\n\nMap.prototype = map.prototype = {\n  constructor: Map,\n  has: function(key) {\n    return (prefix + key) in this;\n  },\n  get: function(key) {\n    return this[prefix + key];\n  },\n  set: function(key, value) {\n    this[prefix + key] = value;\n    return this;\n  },\n  remove: function(key) {\n    var property = prefix + key;\n    return property in this && delete this[property];\n  },\n  clear: function() {\n    for (var property in this) if (property[0] === prefix) delete this[property];\n  },\n  keys: function() {\n    var keys = [];\n    for (var property in this) if (property[0] === prefix) keys.push(property.slice(1));\n    return keys;\n  },\n  values: function() {\n    var values = [];\n    for (var property in this) if (property[0] === prefix) values.push(this[property]);\n    return values;\n  },\n  entries: function() {\n    var entries = [];\n    for (var property in this) if (property[0] === prefix) entries.push({key: property.slice(1), value: this[property]});\n    return entries;\n  },\n  size: function() {\n    var size = 0;\n    for (var property in this) if (property[0] === prefix) ++size;\n    return size;\n  },\n  empty: function() {\n    for (var property in this) if (property[0] === prefix) return false;\n    return true;\n  },\n  each: function(f) {\n    for (var property in this) if (property[0] === prefix) f(this[property], property.slice(1), this);\n  }\n};\n\nfunction map(object, f) {\n  var map = new Map;\n\n  // Copy constructor.\n  if (object instanceof Map) object.each(function(value, key) { map.set(key, value); });\n\n  // Index array by numeric index or specified key function.\n  else if (Array.isArray(object)) {\n    var i = -1,\n        n = object.length,\n        o;\n\n    if (f == null) while (++i < n) map.set(i, object[i]);\n    else while (++i < n) map.set(f(o = object[i], i, object), o);\n  }\n\n  // Convert object to map.\n  else if (object) for (var key in object) map.set(key, object[key]);\n\n  return map;\n}\n\nexport default map;\n","import map from \"./map\";\n\nexport default function() {\n  var keys = [],\n      sortKeys = [],\n      sortValues,\n      rollup,\n      nest;\n\n  function apply(array, depth, createResult, setResult) {\n    if (depth >= keys.length) {\n      if (sortValues != null) array.sort(sortValues);\n      return rollup != null ? rollup(array) : array;\n    }\n\n    var i = -1,\n        n = array.length,\n        key = keys[depth++],\n        keyValue,\n        value,\n        valuesByKey = map(),\n        values,\n        result = createResult();\n\n    while (++i < n) {\n      if (values = valuesByKey.get(keyValue = key(value = array[i]) + \"\")) {\n        values.push(value);\n      } else {\n        valuesByKey.set(keyValue, [value]);\n      }\n    }\n\n    valuesByKey.each(function(values, key) {\n      setResult(result, key, apply(values, depth, createResult, setResult));\n    });\n\n    return result;\n  }\n\n  function entries(map, depth) {\n    if (++depth > keys.length) return map;\n    var array, sortKey = sortKeys[depth - 1];\n    if (rollup != null && depth >= keys.length) array = map.entries();\n    else array = [], map.each(function(v, k) { array.push({key: k, values: entries(v, depth)}); });\n    return sortKey != null ? array.sort(function(a, b) { return sortKey(a.key, b.key); }) : array;\n  }\n\n  return nest = {\n    object: function(array) { return apply(array, 0, createObject, setObject); },\n    map: function(array) { return apply(array, 0, createMap, setMap); },\n    entries: function(array) { return entries(apply(array, 0, createMap, setMap), 0); },\n    key: function(d) { keys.push(d); return nest; },\n    sortKeys: function(order) { sortKeys[keys.length - 1] = order; return nest; },\n    sortValues: function(order) { sortValues = order; return nest; },\n    rollup: function(f) { rollup = f; return nest; }\n  };\n}\n\nfunction createObject() {\n  return {};\n}\n\nfunction setObject(object, key, value) {\n  object[key] = value;\n}\n\nfunction createMap() {\n  return map();\n}\n\nfunction setMap(map, key, value) {\n  map.set(key, value);\n}\n","import {default as map, prefix} from \"./map\";\n\nfunction Set() {}\n\nvar proto = map.prototype;\n\nSet.prototype = set.prototype = {\n  constructor: Set,\n  has: proto.has,\n  add: function(value) {\n    value += \"\";\n    this[prefix + value] = value;\n    return this;\n  },\n  remove: proto.remove,\n  clear: proto.clear,\n  values: proto.keys,\n  size: proto.size,\n  empty: proto.empty,\n  each: proto.each\n};\n\nfunction set(object, f) {\n  var set = new Set;\n\n  // Copy constructor.\n  if (object instanceof Set) object.each(function(value) { set.add(value); });\n\n  // Otherwise, assume it’s an array.\n  else if (object) {\n    var i = -1, n = object.length;\n    if (f == null) while (++i < n) set.add(object[i]);\n    else while (++i < n) set.add(f(object[i], i, object));\n  }\n\n  return set;\n}\n\nexport default set;\n","var array = Array.prototype;\n\nexport var map = array.map;\nexport var slice = array.slice;\n","import {map} from \"d3-collection\";\nimport {slice} from \"./array\";\n\nexport var implicit = {name: \"implicit\"};\n\nexport default function ordinal(range) {\n  var index = map(),\n      domain = [],\n      unknown = implicit;\n\n  range = range == null ? [] : slice.call(range);\n\n  function scale(d) {\n    var key = d + \"\", i = index.get(key);\n    if (!i) {\n      if (unknown !== implicit) return unknown;\n      index.set(key, i = domain.push(d));\n    }\n    return range[(i - 1) % range.length];\n  }\n\n  scale.domain = function(_) {\n    if (!arguments.length) return domain.slice();\n    domain = [], index = map();\n    var i = -1, n = _.length, d, key;\n    while (++i < n) if (!index.has(key = (d = _[i]) + \"\")) index.set(key, domain.push(d));\n    return scale;\n  };\n\n  scale.range = function(_) {\n    return arguments.length ? (range = slice.call(_), scale) : range.slice();\n  };\n\n  scale.unknown = function(_) {\n    return arguments.length ? (unknown = _, scale) : unknown;\n  };\n\n  scale.copy = function() {\n    return ordinal()\n        .domain(domain)\n        .range(range)\n        .unknown(unknown);\n  };\n\n  return scale;\n}\n","import {range as sequence} from \"d3-array\";\nimport ordinal from \"./ordinal\";\n\nexport default function band() {\n  var scale = ordinal().unknown(undefined),\n      domain = scale.domain,\n      ordinalRange = scale.range,\n      range = [0, 1],\n      step,\n      bandwidth,\n      round = false,\n      paddingInner = 0,\n      paddingOuter = 0,\n      align = 0.5;\n\n  delete scale.unknown;\n  function rescale() {\n    var n = domain().length,\n        reverse = range[1] < range[0],\n        start = range[reverse - 0],\n        stop = range[1 - reverse];\n    step = (stop - start) / Math.max(1, n - paddingInner + paddingOuter * 2);\n    if (round) step = Math.floor(step);\n    start += (stop - start - step * (n - paddingInner)) * align;\n    bandwidth = step * (1 - paddingInner);\n    if (round) start = Math.round(start), bandwidth = Math.round(bandwidth);\n    var values = sequence(n).map(function(i) { return start + step * i; });\n    return ordinalRange(reverse ? values.reverse() : values);\n  }\n\n  scale.domain = function(_) {\n    return arguments.length ? (domain(_), rescale()) : domain();\n  };\n\n  scale.range = function(_) {\n    return arguments.length ? (range = [+_[0], +_[1]], rescale()) : range.slice();\n  };\n\n  scale.rangeRound = function(_) {\n    return range = [+_[0], +_[1]], round = true, rescale();\n  };\n\n  scale.bandwidth = function() {\n    return bandwidth;\n  };\n\n  scale.step = function() {\n    return step;\n  };\n\n  scale.round = function(_) {\n    return arguments.length ? (round = !!_, rescale()) : round;\n  };\n\n  scale.padding = function(_) {\n    return arguments.length ? (paddingInner = paddingOuter = Math.max(0, Math.min(1, _)), rescale()) : paddingInner;\n  };\n\n  scale.paddingInner = function(_) {\n    return arguments.length ? (paddingInner = Math.max(0, Math.min(1, _)), rescale()) : paddingInner;\n  };\n\n  scale.paddingOuter = function(_) {\n    return arguments.length ? (paddingOuter = Math.max(0, Math.min(1, _)), rescale()) : paddingOuter;\n  };\n\n  scale.align = function(_) {\n    return arguments.length ? (align = Math.max(0, Math.min(1, _)), rescale()) : align;\n  };\n\n  scale.copy = function() {\n    return band()\n        .domain(domain())\n        .range(range)\n        .round(round)\n        .paddingInner(paddingInner)\n        .paddingOuter(paddingOuter)\n        .align(align);\n  };\n\n  scale.invertExtent = function(r0, r1) {\n    var lo = +r0,\n        hi = arguments.length > 1 ? +r1 : lo,\n        reverse = range[1] < range[0],\n        values = reverse ? ordinalRange().reverse() : ordinalRange(),\n        n = values.length - 1, a, b, t,\n        hiIndex;\n    values.push(values[n] + this.step());\n    // order range inputs, bail if outside of scale range\n    if (hi < lo) t = lo, lo = hi, hi = t;\n    if (hi < values[0] || lo > range[1-reverse]) return undefined;\n\n    // binary search to index into scale range\n    a = Math.max(0, getClosestIndexOf(values, lo));\n    hiIndex = getClosestIndexOf(values, hi);\n    b = lo===hi ? a : Math.max(a, hiIndex - 1);\n\n    // increment index a if lo is within padding gap\n    // if (lo - values[a] > bandwidth + 1e-10) ++a;\n\n    if (reverse) t = a, a = n - b, b = n - t; // map + swap\n    return (a > b) ? undefined : domain().slice(a, b+1);\n  };\n\n  scale.invert = function (r0, r1) {\n    var lo = +r0,\n        hi = arguments.length > 1 ? +r1 : lo,\n        reverse = range[1] < range[0],\n        values = reverse ? ordinalRange().reverse() : ordinalRange(),\n        n = values.length - 1,\n        a,\n        t;\n\n    // order range inputs, bail if outside of scale range\n    if (hi < lo) t = lo, lo = hi, hi = t;\n    if (hi < values[0] || lo > range[1-reverse]) return undefined;\n\n    // binary search to index into scale range\n    a = Math.max(0, getClosestIndexOf(values, lo, 'left'));\n\n    // increment index a if lo is within padding gap\n    // if (lo - values[a] > bandwidth + 1e-10) ++a;\n\n    return domain()[reverse ? n - a : a];\n  }\n  return rescale();\n}\n\nfunction pointish(scale) {\n  var copy = scale.copy;\n\n  scale.padding = scale.paddingOuter;\n  delete scale.paddingInner;\n  delete scale.paddingOuter;\n\n  scale.copy = function() {\n    return pointish(copy());\n  };\n\n  return scale;\n}\n\nexport function point() {\n  return pointish(band().paddingInner(1));\n}\n\nfunction getClosestIndexOf (arr, value, side) {\n  var low = 0,\n      arrLen = arr.length,\n      high = arrLen - 1,\n      highVal,\n      mid,\n      d1,\n      d2;\n\n  while (low < high) {\n      mid = Math.floor((low + high) / 2);\n      d1 = Math.abs(arr[mid] - value);\n      d2 = Math.abs(arr[mid + 1] - value);\n\n      if (d2 <= d1) {\n          low = mid + 1;\n      }\n      else {\n          high = mid;\n      }\n  }\n\n  if (!side) {\n      return high;\n  }\n\n  highVal = arr[high];\n  if (highVal === value) {\n      return high;\n  } else if (highVal > value) {\n      if (high === 0) { return high; }\n      return side === 'left'? high - 1 : high;\n  } else {\n      if (high === arr.length - 1) { return high; }\n      return side === 'left'? high : high + 1;\n  }\n}","export default function(constructor, factory, prototype) {\n  constructor.prototype = factory.prototype = prototype;\n  prototype.constructor = constructor;\n}\n\nexport function extend(parent, definition) {\n  var prototype = Object.create(parent.prototype);\n  for (var key in definition) prototype[key] = definition[key];\n  return prototype;\n}\n","import define, {extend} from \"./define\";\n\nexport function Color() {}\n\nexport var darker = 0.7;\nexport var brighter = 1 / darker;\n\nvar reI = \"\\\\s*([+-]?\\\\d+)\\\\s*\",\n    reN = \"\\\\s*([+-]?\\\\d*\\\\.?\\\\d+(?:[eE][+-]?\\\\d+)?)\\\\s*\",\n    reP = \"\\\\s*([+-]?\\\\d*\\\\.?\\\\d+(?:[eE][+-]?\\\\d+)?)%\\\\s*\",\n    reHex3 = /^#([0-9a-f]{3})$/,\n    reHex6 = /^#([0-9a-f]{6})$/,\n    reRgbInteger = new RegExp(\"^rgb\\\\(\" + [reI, reI, reI] + \"\\\\)$\"),\n    reRgbPercent = new RegExp(\"^rgb\\\\(\" + [reP, reP, reP] + \"\\\\)$\"),\n    reRgbaInteger = new RegExp(\"^rgba\\\\(\" + [reI, reI, reI, reN] + \"\\\\)$\"),\n    reRgbaPercent = new RegExp(\"^rgba\\\\(\" + [reP, reP, reP, reN] + \"\\\\)$\"),\n    reHslPercent = new RegExp(\"^hsl\\\\(\" + [reN, reP, reP] + \"\\\\)$\"),\n    reHslaPercent = new RegExp(\"^hsla\\\\(\" + [reN, reP, reP, reN] + \"\\\\)$\");\n\nvar named = {\n  aliceblue: 0xf0f8ff,\n  antiquewhite: 0xfaebd7,\n  aqua: 0x00ffff,\n  aquamarine: 0x7fffd4,\n  azure: 0xf0ffff,\n  beige: 0xf5f5dc,\n  bisque: 0xffe4c4,\n  black: 0x000000,\n  blanchedalmond: 0xffebcd,\n  blue: 0x0000ff,\n  blueviolet: 0x8a2be2,\n  brown: 0xa52a2a,\n  burlywood: 0xdeb887,\n  cadetblue: 0x5f9ea0,\n  chartreuse: 0x7fff00,\n  chocolate: 0xd2691e,\n  coral: 0xff7f50,\n  cornflowerblue: 0x6495ed,\n  cornsilk: 0xfff8dc,\n  crimson: 0xdc143c,\n  cyan: 0x00ffff,\n  darkblue: 0x00008b,\n  darkcyan: 0x008b8b,\n  darkgoldenrod: 0xb8860b,\n  darkgray: 0xa9a9a9,\n  darkgreen: 0x006400,\n  darkgrey: 0xa9a9a9,\n  darkkhaki: 0xbdb76b,\n  darkmagenta: 0x8b008b,\n  darkolivegreen: 0x556b2f,\n  darkorange: 0xff8c00,\n  darkorchid: 0x9932cc,\n  darkred: 0x8b0000,\n  darksalmon: 0xe9967a,\n  darkseagreen: 0x8fbc8f,\n  darkslateblue: 0x483d8b,\n  darkslategray: 0x2f4f4f,\n  darkslategrey: 0x2f4f4f,\n  darkturquoise: 0x00ced1,\n  darkviolet: 0x9400d3,\n  deeppink: 0xff1493,\n  deepskyblue: 0x00bfff,\n  dimgray: 0x696969,\n  dimgrey: 0x696969,\n  dodgerblue: 0x1e90ff,\n  firebrick: 0xb22222,\n  floralwhite: 0xfffaf0,\n  forestgreen: 0x228b22,\n  fuchsia: 0xff00ff,\n  gainsboro: 0xdcdcdc,\n  ghostwhite: 0xf8f8ff,\n  gold: 0xffd700,\n  goldenrod: 0xdaa520,\n  gray: 0x808080,\n  green: 0x008000,\n  greenyellow: 0xadff2f,\n  grey: 0x808080,\n  honeydew: 0xf0fff0,\n  hotpink: 0xff69b4,\n  indianred: 0xcd5c5c,\n  indigo: 0x4b0082,\n  ivory: 0xfffff0,\n  khaki: 0xf0e68c,\n  lavender: 0xe6e6fa,\n  lavenderblush: 0xfff0f5,\n  lawngreen: 0x7cfc00,\n  lemonchiffon: 0xfffacd,\n  lightblue: 0xadd8e6,\n  lightcoral: 0xf08080,\n  lightcyan: 0xe0ffff,\n  lightgoldenrodyellow: 0xfafad2,\n  lightgray: 0xd3d3d3,\n  lightgreen: 0x90ee90,\n  lightgrey: 0xd3d3d3,\n  lightpink: 0xffb6c1,\n  lightsalmon: 0xffa07a,\n  lightseagreen: 0x20b2aa,\n  lightskyblue: 0x87cefa,\n  lightslategray: 0x778899,\n  lightslategrey: 0x778899,\n  lightsteelblue: 0xb0c4de,\n  lightyellow: 0xffffe0,\n  lime: 0x00ff00,\n  limegreen: 0x32cd32,\n  linen: 0xfaf0e6,\n  magenta: 0xff00ff,\n  maroon: 0x800000,\n  mediumaquamarine: 0x66cdaa,\n  mediumblue: 0x0000cd,\n  mediumorchid: 0xba55d3,\n  mediumpurple: 0x9370db,\n  mediumseagreen: 0x3cb371,\n  mediumslateblue: 0x7b68ee,\n  mediumspringgreen: 0x00fa9a,\n  mediumturquoise: 0x48d1cc,\n  mediumvioletred: 0xc71585,\n  midnightblue: 0x191970,\n  mintcream: 0xf5fffa,\n  mistyrose: 0xffe4e1,\n  moccasin: 0xffe4b5,\n  navajowhite: 0xffdead,\n  navy: 0x000080,\n  oldlace: 0xfdf5e6,\n  olive: 0x808000,\n  olivedrab: 0x6b8e23,\n  orange: 0xffa500,\n  orangered: 0xff4500,\n  orchid: 0xda70d6,\n  palegoldenrod: 0xeee8aa,\n  palegreen: 0x98fb98,\n  paleturquoise: 0xafeeee,\n  palevioletred: 0xdb7093,\n  papayawhip: 0xffefd5,\n  peachpuff: 0xffdab9,\n  peru: 0xcd853f,\n  pink: 0xffc0cb,\n  plum: 0xdda0dd,\n  powderblue: 0xb0e0e6,\n  purple: 0x800080,\n  rebeccapurple: 0x663399,\n  red: 0xff0000,\n  rosybrown: 0xbc8f8f,\n  royalblue: 0x4169e1,\n  saddlebrown: 0x8b4513,\n  salmon: 0xfa8072,\n  sandybrown: 0xf4a460,\n  seagreen: 0x2e8b57,\n  seashell: 0xfff5ee,\n  sienna: 0xa0522d,\n  silver: 0xc0c0c0,\n  skyblue: 0x87ceeb,\n  slateblue: 0x6a5acd,\n  slategray: 0x708090,\n  slategrey: 0x708090,\n  snow: 0xfffafa,\n  springgreen: 0x00ff7f,\n  steelblue: 0x4682b4,\n  tan: 0xd2b48c,\n  teal: 0x008080,\n  thistle: 0xd8bfd8,\n  tomato: 0xff6347,\n  turquoise: 0x40e0d0,\n  violet: 0xee82ee,\n  wheat: 0xf5deb3,\n  white: 0xffffff,\n  whitesmoke: 0xf5f5f5,\n  yellow: 0xffff00,\n  yellowgreen: 0x9acd32\n};\n\ndefine(Color, color, {\n  displayable: function() {\n    return this.rgb().displayable();\n  },\n  hex: function() {\n    return this.rgb().hex();\n  },\n  toString: function() {\n    return this.rgb() + \"\";\n  }\n});\n\nexport default function color(format) {\n  var m;\n  format = (format + \"\").trim().toLowerCase();\n  return (m = reHex3.exec(format)) ? (m = parseInt(m[1], 16), new Rgb((m >> 8 & 0xf) | (m >> 4 & 0x0f0), (m >> 4 & 0xf) | (m & 0xf0), ((m & 0xf) << 4) | (m & 0xf), 1)) // #f00\n      : (m = reHex6.exec(format)) ? rgbn(parseInt(m[1], 16)) // #ff0000\n      : (m = reRgbInteger.exec(format)) ? new Rgb(m[1], m[2], m[3], 1) // rgb(255, 0, 0)\n      : (m = reRgbPercent.exec(format)) ? new Rgb(m[1] * 255 / 100, m[2] * 255 / 100, m[3] * 255 / 100, 1) // rgb(100%, 0%, 0%)\n      : (m = reRgbaInteger.exec(format)) ? rgba(m[1], m[2], m[3], m[4]) // rgba(255, 0, 0, 1)\n      : (m = reRgbaPercent.exec(format)) ? rgba(m[1] * 255 / 100, m[2] * 255 / 100, m[3] * 255 / 100, m[4]) // rgb(100%, 0%, 0%, 1)\n      : (m = reHslPercent.exec(format)) ? hsla(m[1], m[2] / 100, m[3] / 100, 1) // hsl(120, 50%, 50%)\n      : (m = reHslaPercent.exec(format)) ? hsla(m[1], m[2] / 100, m[3] / 100, m[4]) // hsla(120, 50%, 50%, 1)\n      : named.hasOwnProperty(format) ? rgbn(named[format])\n      : format === \"transparent\" ? new Rgb(NaN, NaN, NaN, 0)\n      : null;\n}\n\nfunction rgbn(n) {\n  return new Rgb(n >> 16 & 0xff, n >> 8 & 0xff, n & 0xff, 1);\n}\n\nfunction rgba(r, g, b, a) {\n  if (a <= 0) r = g = b = NaN;\n  return new Rgb(r, g, b, a);\n}\n\nexport function rgbConvert(o) {\n  if (!(o instanceof Color)) o = color(o);\n  if (!o) return new Rgb;\n  o = o.rgb();\n  return new Rgb(o.r, o.g, o.b, o.opacity);\n}\n\nexport function rgb(r, g, b, opacity) {\n  return arguments.length === 1 ? rgbConvert(r) : new Rgb(r, g, b, opacity == null ? 1 : opacity);\n}\n\nexport function Rgb(r, g, b, opacity) {\n  this.r = +r;\n  this.g = +g;\n  this.b = +b;\n  this.opacity = +opacity;\n}\n\ndefine(Rgb, rgb, extend(Color, {\n  brighter: function(k) {\n    k = k == null ? brighter : Math.pow(brighter, k);\n    return new Rgb(this.r * k, this.g * k, this.b * k, this.opacity);\n  },\n  darker: function(k) {\n    k = k == null ? darker : Math.pow(darker, k);\n    return new Rgb(this.r * k, this.g * k, this.b * k, this.opacity);\n  },\n  rgb: function() {\n    return this;\n  },\n  displayable: function() {\n    return (0 <= this.r && this.r <= 255)\n        && (0 <= this.g && this.g <= 255)\n        && (0 <= this.b && this.b <= 255)\n        && (0 <= this.opacity && this.opacity <= 1);\n  },\n  hex: function() {\n    return \"#\" + hex(this.r) + hex(this.g) + hex(this.b);\n  },\n  toString: function() {\n    var a = this.opacity; a = isNaN(a) ? 1 : Math.max(0, Math.min(1, a));\n    return (a === 1 ? \"rgb(\" : \"rgba(\")\n        + Math.max(0, Math.min(255, Math.round(this.r) || 0)) + \", \"\n        + Math.max(0, Math.min(255, Math.round(this.g) || 0)) + \", \"\n        + Math.max(0, Math.min(255, Math.round(this.b) || 0))\n        + (a === 1 ? \")\" : \", \" + a + \")\");\n  }\n}));\n\nfunction hex(value) {\n  value = Math.max(0, Math.min(255, Math.round(value) || 0));\n  return (value < 16 ? \"0\" : \"\") + value.toString(16);\n}\n\nfunction hsla(h, s, l, a) {\n  if (a <= 0) h = s = l = NaN;\n  else if (l <= 0 || l >= 1) h = s = NaN;\n  else if (s <= 0) h = NaN;\n  return new Hsl(h, s, l, a);\n}\n\nexport function hslConvert(o) {\n  if (o instanceof Hsl) return new Hsl(o.h, o.s, o.l, o.opacity);\n  if (!(o instanceof Color)) o = color(o);\n  if (!o) return new Hsl;\n  if (o instanceof Hsl) return o;\n  o = o.rgb();\n  var r = o.r / 255,\n      g = o.g / 255,\n      b = o.b / 255,\n      min = Math.min(r, g, b),\n      max = Math.max(r, g, b),\n      h = NaN,\n      s = max - min,\n      l = (max + min) / 2;\n  if (s) {\n    if (r === max) h = (g - b) / s + (g < b) * 6;\n    else if (g === max) h = (b - r) / s + 2;\n    else h = (r - g) / s + 4;\n    s /= l < 0.5 ? max + min : 2 - max - min;\n    h *= 60;\n  } else {\n    s = l > 0 && l < 1 ? 0 : h;\n  }\n  return new Hsl(h, s, l, o.opacity);\n}\n\nexport function hsl(h, s, l, opacity) {\n  return arguments.length === 1 ? hslConvert(h) : new Hsl(h, s, l, opacity == null ? 1 : opacity);\n}\n\nfunction Hsl(h, s, l, opacity) {\n  this.h = +h;\n  this.s = +s;\n  this.l = +l;\n  this.opacity = +opacity;\n}\n\ndefine(Hsl, hsl, extend(Color, {\n  brighter: function(k) {\n    k = k == null ? brighter : Math.pow(brighter, k);\n    return new Hsl(this.h, this.s, this.l * k, this.opacity);\n  },\n  darker: function(k) {\n    k = k == null ? darker : Math.pow(darker, k);\n    return new Hsl(this.h, this.s, this.l * k, this.opacity);\n  },\n  rgb: function() {\n    var h = this.h % 360 + (this.h < 0) * 360,\n        s = isNaN(h) || isNaN(this.s) ? 0 : this.s,\n        l = this.l,\n        m2 = l + (l < 0.5 ? l : 1 - l) * s,\n        m1 = 2 * l - m2;\n    return new Rgb(\n      hsl2rgb(h >= 240 ? h - 240 : h + 120, m1, m2),\n      hsl2rgb(h, m1, m2),\n      hsl2rgb(h < 120 ? h + 240 : h - 120, m1, m2),\n      this.opacity\n    );\n  },\n  displayable: function() {\n    return (0 <= this.s && this.s <= 1 || isNaN(this.s))\n        && (0 <= this.l && this.l <= 1)\n        && (0 <= this.opacity && this.opacity <= 1);\n  }\n}));\n\n/* From FvD 13.37, CSS Color Module Level 3 */\nfunction hsl2rgb(h, m1, m2) {\n  return (h < 60 ? m1 + (m2 - m1) * h / 60\n      : h < 180 ? m2\n      : h < 240 ? m1 + (m2 - m1) * (240 - h) / 60\n      : m1) * 255;\n}\n","export var deg2rad = Math.PI / 180;\nexport var rad2deg = 180 / Math.PI;\n","import define, {extend} from \"./define\";\nimport {Color, rgbConvert, Rgb} from \"./color\";\nimport {deg2rad, rad2deg} from \"./math\";\n\n// https://beta.observablehq.com/@mbostock/lab-and-rgb\nvar K = 18,\n    Xn = 0.96422,\n    Yn = 1,\n    Zn = 0.82521,\n    t0 = 4 / 29,\n    t1 = 6 / 29,\n    t2 = 3 * t1 * t1,\n    t3 = t1 * t1 * t1;\n\nfunction labConvert(o) {\n  if (o instanceof Lab) return new Lab(o.l, o.a, o.b, o.opacity);\n  if (o instanceof Hcl) {\n    if (isNaN(o.h)) return new Lab(o.l, 0, 0, o.opacity);\n    var h = o.h * deg2rad;\n    return new Lab(o.l, Math.cos(h) * o.c, Math.sin(h) * o.c, o.opacity);\n  }\n  if (!(o instanceof Rgb)) o = rgbConvert(o);\n  var r = rgb2lrgb(o.r),\n      g = rgb2lrgb(o.g),\n      b = rgb2lrgb(o.b),\n      y = xyz2lab((0.2225045 * r + 0.7168786 * g + 0.0606169 * b) / Yn), x, z;\n  if (r === g && g === b) x = z = y; else {\n    x = xyz2lab((0.4360747 * r + 0.3850649 * g + 0.1430804 * b) / Xn);\n    z = xyz2lab((0.0139322 * r + 0.0971045 * g + 0.7141733 * b) / Zn);\n  }\n  return new Lab(116 * y - 16, 500 * (x - y), 200 * (y - z), o.opacity);\n}\n\nexport function gray(l, opacity) {\n  return new Lab(l, 0, 0, opacity == null ? 1 : opacity);\n}\n\nexport default function lab(l, a, b, opacity) {\n  return arguments.length === 1 ? labConvert(l) : new Lab(l, a, b, opacity == null ? 1 : opacity);\n}\n\nexport function Lab(l, a, b, opacity) {\n  this.l = +l;\n  this.a = +a;\n  this.b = +b;\n  this.opacity = +opacity;\n}\n\ndefine(Lab, lab, extend(Color, {\n  brighter: function(k) {\n    return new Lab(this.l + K * (k == null ? 1 : k), this.a, this.b, this.opacity);\n  },\n  darker: function(k) {\n    return new Lab(this.l - K * (k == null ? 1 : k), this.a, this.b, this.opacity);\n  },\n  rgb: function() {\n    var y = (this.l + 16) / 116,\n        x = isNaN(this.a) ? y : y + this.a / 500,\n        z = isNaN(this.b) ? y : y - this.b / 200;\n    x = Xn * lab2xyz(x);\n    y = Yn * lab2xyz(y);\n    z = Zn * lab2xyz(z);\n    return new Rgb(\n      lrgb2rgb( 3.1338561 * x - 1.6168667 * y - 0.4906146 * z),\n      lrgb2rgb(-0.9787684 * x + 1.9161415 * y + 0.0334540 * z),\n      lrgb2rgb( 0.0719453 * x - 0.2289914 * y + 1.4052427 * z),\n      this.opacity\n    );\n  }\n}));\n\nfunction xyz2lab(t) {\n  return t > t3 ? Math.pow(t, 1 / 3) : t / t2 + t0;\n}\n\nfunction lab2xyz(t) {\n  return t > t1 ? t * t * t : t2 * (t - t0);\n}\n\nfunction lrgb2rgb(x) {\n  return 255 * (x <= 0.0031308 ? 12.92 * x : 1.055 * Math.pow(x, 1 / 2.4) - 0.055);\n}\n\nfunction rgb2lrgb(x) {\n  return (x /= 255) <= 0.04045 ? x / 12.92 : Math.pow((x + 0.055) / 1.055, 2.4);\n}\n\nfunction hclConvert(o) {\n  if (o instanceof Hcl) return new Hcl(o.h, o.c, o.l, o.opacity);\n  if (!(o instanceof Lab)) o = labConvert(o);\n  if (o.a === 0 && o.b === 0) return new Hcl(NaN, 0, o.l, o.opacity);\n  var h = Math.atan2(o.b, o.a) * rad2deg;\n  return new Hcl(h < 0 ? h + 360 : h, Math.sqrt(o.a * o.a + o.b * o.b), o.l, o.opacity);\n}\n\nexport function lch(l, c, h, opacity) {\n  return arguments.length === 1 ? hclConvert(l) : new Hcl(h, c, l, opacity == null ? 1 : opacity);\n}\n\nexport function hcl(h, c, l, opacity) {\n  return arguments.length === 1 ? hclConvert(h) : new Hcl(h, c, l, opacity == null ? 1 : opacity);\n}\n\nexport function Hcl(h, c, l, opacity) {\n  this.h = +h;\n  this.c = +c;\n  this.l = +l;\n  this.opacity = +opacity;\n}\n\ndefine(Hcl, hcl, extend(Color, {\n  brighter: function(k) {\n    return new Hcl(this.h, this.c, this.l + K * (k == null ? 1 : k), this.opacity);\n  },\n  darker: function(k) {\n    return new Hcl(this.h, this.c, this.l - K * (k == null ? 1 : k), this.opacity);\n  },\n  rgb: function() {\n    return labConvert(this).rgb();\n  }\n}));\n","import define, {extend} from \"./define\";\nimport {Color, rgbConvert, Rgb, darker, brighter} from \"./color\";\nimport {deg2rad, rad2deg} from \"./math\";\n\nvar A = -0.14861,\n    B = +1.78277,\n    C = -0.29227,\n    D = -0.90649,\n    E = +1.97294,\n    ED = E * D,\n    EB = E * B,\n    BC_DA = B * C - D * A;\n\nfunction cubehelixConvert(o) {\n  if (o instanceof Cubehelix) return new Cubehelix(o.h, o.s, o.l, o.opacity);\n  if (!(o instanceof Rgb)) o = rgbConvert(o);\n  var r = o.r / 255,\n      g = o.g / 255,\n      b = o.b / 255,\n      l = (BC_DA * b + ED * r - EB * g) / (BC_DA + ED - EB),\n      bl = b - l,\n      k = (E * (g - l) - C * bl) / D,\n      s = Math.sqrt(k * k + bl * bl) / (E * l * (1 - l)), // NaN if l=0 or l=1\n      h = s ? Math.atan2(k, bl) * rad2deg - 120 : NaN;\n  return new Cubehelix(h < 0 ? h + 360 : h, s, l, o.opacity);\n}\n\nexport default function cubehelix(h, s, l, opacity) {\n  return arguments.length === 1 ? cubehelixConvert(h) : new Cubehelix(h, s, l, opacity == null ? 1 : opacity);\n}\n\nexport function Cubehelix(h, s, l, opacity) {\n  this.h = +h;\n  this.s = +s;\n  this.l = +l;\n  this.opacity = +opacity;\n}\n\ndefine(Cubehelix, cubehelix, extend(Color, {\n  brighter: function(k) {\n    k = k == null ? brighter : Math.pow(brighter, k);\n    return new Cubehelix(this.h, this.s, this.l * k, this.opacity);\n  },\n  darker: function(k) {\n    k = k == null ? darker : Math.pow(darker, k);\n    return new Cubehelix(this.h, this.s, this.l * k, this.opacity);\n  },\n  rgb: function() {\n    var h = isNaN(this.h) ? 0 : (this.h + 120) * deg2rad,\n        l = +this.l,\n        a = isNaN(this.s) ? 0 : this.s * l * (1 - l),\n        cosh = Math.cos(h),\n        sinh = Math.sin(h);\n    return new Rgb(\n      255 * (l + a * (A * cosh + B * sinh)),\n      255 * (l + a * (C * cosh + D * sinh)),\n      255 * (l + a * (E * cosh)),\n      this.opacity\n    );\n  }\n}));\n","export function basis(t1, v0, v1, v2, v3) {\n  var t2 = t1 * t1, t3 = t2 * t1;\n  return ((1 - 3 * t1 + 3 * t2 - t3) * v0\n      + (4 - 6 * t2 + 3 * t3) * v1\n      + (1 + 3 * t1 + 3 * t2 - 3 * t3) * v2\n      + t3 * v3) / 6;\n}\n\nexport default function(values) {\n  var n = values.length - 1;\n  return function(t) {\n    var i = t <= 0 ? (t = 0) : t >= 1 ? (t = 1, n - 1) : Math.floor(t * n),\n        v1 = values[i],\n        v2 = values[i + 1],\n        v0 = i > 0 ? values[i - 1] : 2 * v1 - v2,\n        v3 = i < n - 1 ? values[i + 2] : 2 * v2 - v1;\n    return basis((t - i / n) * n, v0, v1, v2, v3);\n  };\n}\n","export default function(x) {\n  return function() {\n    return x;\n  };\n}\n","import constant from \"./constant\";\n\nfunction linear(a, d) {\n  return function(t) {\n    return a + t * d;\n  };\n}\n\nfunction exponential(a, b, y) {\n  return a = Math.pow(a, y), b = Math.pow(b, y) - a, y = 1 / y, function(t) {\n    return Math.pow(a + t * b, y);\n  };\n}\n\nexport function hue(a, b) {\n  var d = b - a;\n  return d ? linear(a, d > 180 || d < -180 ? d - 360 * Math.round(d / 360) : d) : constant(isNaN(a) ? b : a);\n}\n\nexport function gamma(y) {\n  return (y = +y) === 1 ? nogamma : function(a, b) {\n    return b - a ? exponential(a, b, y) : constant(isNaN(a) ? b : a);\n  };\n}\n\nexport default function nogamma(a, b) {\n  var d = b - a;\n  return d ? linear(a, d) : constant(isNaN(a) ? b : a);\n}\n","import {rgb as colorRgb} from \"d3-color\";\nimport basis from \"./basis\";\nimport basisClosed from \"./basisClosed\";\nimport nogamma, {gamma} from \"./color\";\n\nexport default (function rgbGamma(y) {\n  var color = gamma(y);\n\n  function rgb(start, end) {\n    var r = color((start = colorRgb(start)).r, (end = colorRgb(end)).r),\n        g = color(start.g, end.g),\n        b = color(start.b, end.b),\n        opacity = nogamma(start.opacity, end.opacity);\n    return function(t) {\n      start.r = r(t);\n      start.g = g(t);\n      start.b = b(t);\n      start.opacity = opacity(t);\n      return start + \"\";\n    };\n  }\n\n  rgb.gamma = rgbGamma;\n\n  return rgb;\n})(1);\n\nfunction rgbSpline(spline) {\n  return function(colors) {\n    var n = colors.length,\n        r = new Array(n),\n        g = new Array(n),\n        b = new Array(n),\n        i, color;\n    for (i = 0; i < n; ++i) {\n      color = colorRgb(colors[i]);\n      r[i] = color.r || 0;\n      g[i] = color.g || 0;\n      b[i] = color.b || 0;\n    }\n    r = spline(r);\n    g = spline(g);\n    b = spline(b);\n    color.opacity = 1;\n    return function(t) {\n      color.r = r(t);\n      color.g = g(t);\n      color.b = b(t);\n      return color + \"\";\n    };\n  };\n}\n\nexport var rgbBasis = rgbSpline(basis);\nexport var rgbBasisClosed = rgbSpline(basisClosed);\n","export default function(a, b) {\n  return a = +a, b -= a, function(t) {\n    return a + b * t;\n  };\n}\n","import {basis} from \"./basis\";\n\nexport default function(values) {\n  var n = values.length;\n  return function(t) {\n    var i = Math.floor(((t %= 1) < 0 ? ++t : t) * n),\n        v0 = values[(i + n - 1) % n],\n        v1 = values[i % n],\n        v2 = values[(i + 1) % n],\n        v3 = values[(i + 2) % n];\n    return basis((t - i / n) * n, v0, v1, v2, v3);\n  };\n}\n","import value from \"./value\";\n\nexport default function(a, b) {\n  var i = {},\n      c = {},\n      k;\n\n  if (a === null || typeof a !== \"object\") a = {};\n  if (b === null || typeof b !== \"object\") b = {};\n\n  for (k in b) {\n    if (k in a) {\n      i[k] = value(a[k], b[k]);\n    } else {\n      c[k] = b[k];\n    }\n  }\n\n  return function(t) {\n    for (k in i) c[k] = i[k](t);\n    return c;\n  };\n}\n","import number from \"./number\";\n\nvar reA = /[-+]?(?:\\d+\\.?\\d*|\\.?\\d+)(?:[eE][-+]?\\d+)?/g,\n    reB = new RegExp(reA.source, \"g\");\n\nfunction zero(b) {\n  return function() {\n    return b;\n  };\n}\n\nfunction one(b) {\n  return function(t) {\n    return b(t) + \"\";\n  };\n}\n\nexport default function(a, b) {\n  var bi = reA.lastIndex = reB.lastIndex = 0, // scan index for next number in b\n      am, // current match in a\n      bm, // current match in b\n      bs, // string preceding current number in b, if any\n      i = -1, // index in s\n      s = [], // string constants and placeholders\n      q = []; // number interpolators\n\n  // Coerce inputs to strings.\n  a = a + \"\", b = b + \"\";\n\n  // Interpolate pairs of numbers in a & b.\n  while ((am = reA.exec(a))\n      && (bm = reB.exec(b))) {\n    if ((bs = bm.index) > bi) { // a string precedes the next number in b\n      bs = b.slice(bi, bs);\n      if (s[i]) s[i] += bs; // coalesce with previous string\n      else s[++i] = bs;\n    }\n    if ((am = am[0]) === (bm = bm[0])) { // numbers in a & b match\n      if (s[i]) s[i] += bm; // coalesce with previous string\n      else s[++i] = bm;\n    } else { // interpolate non-matching numbers\n      s[++i] = null;\n      q.push({i: i, x: number(am, bm)});\n    }\n    bi = reB.lastIndex;\n  }\n\n  // Add remains of b.\n  if (bi < b.length) {\n    bs = b.slice(bi);\n    if (s[i]) s[i] += bs; // coalesce with previous string\n    else s[++i] = bs;\n  }\n\n  // Special optimization for only a single match.\n  // Otherwise, interpolate each of the numbers and rejoin the string.\n  return s.length < 2 ? (q[0]\n      ? one(q[0].x)\n      : zero(b))\n      : (b = q.length, function(t) {\n          for (var i = 0, o; i < b; ++i) s[(o = q[i]).i] = o.x(t);\n          return s.join(\"\");\n        });\n}\n","import {color} from \"d3-color\";\nimport rgb from \"./rgb\";\nimport array from \"./array\";\nimport date from \"./date\";\nimport number from \"./number\";\nimport object from \"./object\";\nimport string from \"./string\";\nimport constant from \"./constant\";\n\nexport default function(a, b) {\n  var t = typeof b, c;\n  return b == null || t === \"boolean\" ? constant(b)\n      : (t === \"number\" ? number\n      : t === \"string\" ? ((c = color(b)) ? (b = c, rgb) : string)\n      : b instanceof color ? rgb\n      : b instanceof Date ? date\n      : Array.isArray(b) ? array\n      : typeof b.valueOf !== \"function\" && typeof b.toString !== \"function\" || isNaN(b) ? object\n      : number)(a, b);\n}\n","import decompose, {identity} from \"./decompose\";\n\nvar cssNode,\n    cssRoot,\n    cssView,\n    svgNode;\n\nexport function parseCss(value) {\n  if (value === \"none\") return identity;\n  if (!cssNode) cssNode = document.createElement(\"DIV\"), cssRoot = document.documentElement, cssView = document.defaultView;\n  cssNode.style.transform = value;\n  value = cssView.getComputedStyle(cssRoot.appendChild(cssNode), null).getPropertyValue(\"transform\");\n  cssRoot.removeChild(cssNode);\n  value = value.slice(7, -1).split(\",\");\n  return decompose(+value[0], +value[1], +value[2], +value[3], +value[4], +value[5]);\n}\n\nexport function parseSvg(value) {\n  if (value == null) return identity;\n  if (!svgNode) svgNode = document.createElementNS(\"http://www.w3.org/2000/svg\", \"g\");\n  svgNode.setAttribute(\"transform\", value);\n  if (!(value = svgNode.transform.baseVal.consolidate())) return identity;\n  value = value.matrix;\n  return decompose(value.a, value.b, value.c, value.d, value.e, value.f);\n}\n","export default function(a, b) {\n  var d = new Date;\n  return a = +a, b -= a, function(t) {\n    return d.setTime(a + b * t), d;\n  };\n}\n","import value from \"./value\";\n\nexport default function(a, b) {\n  var nb = b ? b.length : 0,\n      na = a ? Math.min(nb, a.length) : 0,\n      x = new Array(na),\n      c = new Array(nb),\n      i;\n\n  for (i = 0; i < na; ++i) x[i] = value(a[i], b[i]);\n  for (; i < nb; ++i) c[i] = b[i];\n\n  return function(t) {\n    for (i = 0; i < na; ++i) c[i] = x[i](t);\n    return c;\n  };\n}\n","export default function(a, b) {\n  return a = +a, b -= a, function(t) {\n    return Math.round(a + b * t);\n  };\n}\n","var degrees = 180 / Math.PI;\n\nexport var identity = {\n  translateX: 0,\n  translateY: 0,\n  rotate: 0,\n  skewX: 0,\n  scaleX: 1,\n  scaleY: 1\n};\n\nexport default function(a, b, c, d, e, f) {\n  var scaleX, scaleY, skewX;\n  if (scaleX = Math.sqrt(a * a + b * b)) a /= scaleX, b /= scaleX;\n  if (skewX = a * c + b * d) c -= a * skewX, d -= b * skewX;\n  if (scaleY = Math.sqrt(c * c + d * d)) c /= scaleY, d /= scaleY, skewX /= scaleY;\n  if (a * d < b * c) a = -a, b = -b, skewX = -skewX, scaleX = -scaleX;\n  return {\n    translateX: e,\n    translateY: f,\n    rotate: Math.atan2(b, a) * degrees,\n    skewX: Math.atan(skewX) * degrees,\n    scaleX: scaleX,\n    scaleY: scaleY\n  };\n}\n","import number from \"../number\";\nimport {parseCss, parseSvg} from \"./parse\";\n\nfunction interpolateTransform(parse, pxComma, pxParen, degParen) {\n\n  function pop(s) {\n    return s.length ? s.pop() + \" \" : \"\";\n  }\n\n  function translate(xa, ya, xb, yb, s, q) {\n    if (xa !== xb || ya !== yb) {\n      var i = s.push(\"translate(\", null, pxComma, null, pxParen);\n      q.push({i: i - 4, x: number(xa, xb)}, {i: i - 2, x: number(ya, yb)});\n    } else if (xb || yb) {\n      s.push(\"translate(\" + xb + pxComma + yb + pxParen);\n    }\n  }\n\n  function rotate(a, b, s, q) {\n    if (a !== b) {\n      if (a - b > 180) b += 360; else if (b - a > 180) a += 360; // shortest path\n      q.push({i: s.push(pop(s) + \"rotate(\", null, degParen) - 2, x: number(a, b)});\n    } else if (b) {\n      s.push(pop(s) + \"rotate(\" + b + degParen);\n    }\n  }\n\n  function skewX(a, b, s, q) {\n    if (a !== b) {\n      q.push({i: s.push(pop(s) + \"skewX(\", null, degParen) - 2, x: number(a, b)});\n    } else if (b) {\n      s.push(pop(s) + \"skewX(\" + b + degParen);\n    }\n  }\n\n  function scale(xa, ya, xb, yb, s, q) {\n    if (xa !== xb || ya !== yb) {\n      var i = s.push(pop(s) + \"scale(\", null, \",\", null, \")\");\n      q.push({i: i - 4, x: number(xa, xb)}, {i: i - 2, x: number(ya, yb)});\n    } else if (xb !== 1 || yb !== 1) {\n      s.push(pop(s) + \"scale(\" + xb + \",\" + yb + \")\");\n    }\n  }\n\n  return function(a, b) {\n    var s = [], // string constants and placeholders\n        q = []; // number interpolators\n    a = parse(a), b = parse(b);\n    translate(a.translateX, a.translateY, b.translateX, b.translateY, s, q);\n    rotate(a.rotate, b.rotate, s, q);\n    skewX(a.skewX, b.skewX, s, q);\n    scale(a.scaleX, a.scaleY, b.scaleX, b.scaleY, s, q);\n    a = b = null; // gc\n    return function(t) {\n      var i = -1, n = q.length, o;\n      while (++i < n) s[(o = q[i]).i] = o.x(t);\n      return s.join(\"\");\n    };\n  };\n}\n\nexport var interpolateTransformCss = interpolateTransform(parseCss, \"px, \", \"px)\", \"deg)\");\nexport var interpolateTransformSvg = interpolateTransform(parseSvg, \", \", \")\", \")\");\n","var rho = Math.SQRT2,\n    rho2 = 2,\n    rho4 = 4,\n    epsilon2 = 1e-12;\n\nfunction cosh(x) {\n  return ((x = Math.exp(x)) + 1 / x) / 2;\n}\n\nfunction sinh(x) {\n  return ((x = Math.exp(x)) - 1 / x) / 2;\n}\n\nfunction tanh(x) {\n  return ((x = Math.exp(2 * x)) - 1) / (x + 1);\n}\n\n// p0 = [ux0, uy0, w0]\n// p1 = [ux1, uy1, w1]\nexport default function(p0, p1) {\n  var ux0 = p0[0], uy0 = p0[1], w0 = p0[2],\n      ux1 = p1[0], uy1 = p1[1], w1 = p1[2],\n      dx = ux1 - ux0,\n      dy = uy1 - uy0,\n      d2 = dx * dx + dy * dy,\n      i,\n      S;\n\n  // Special case for u0 ≅ u1.\n  if (d2 < epsilon2) {\n    S = Math.log(w1 / w0) / rho;\n    i = function(t) {\n      return [\n        ux0 + t * dx,\n        uy0 + t * dy,\n        w0 * Math.exp(rho * t * S)\n      ];\n    }\n  }\n\n  // General case.\n  else {\n    var d1 = Math.sqrt(d2),\n        b0 = (w1 * w1 - w0 * w0 + rho4 * d2) / (2 * w0 * rho2 * d1),\n        b1 = (w1 * w1 - w0 * w0 - rho4 * d2) / (2 * w1 * rho2 * d1),\n        r0 = Math.log(Math.sqrt(b0 * b0 + 1) - b0),\n        r1 = Math.log(Math.sqrt(b1 * b1 + 1) - b1);\n    S = (r1 - r0) / rho;\n    i = function(t) {\n      var s = t * S,\n          coshr0 = cosh(r0),\n          u = w0 / (rho2 * d1) * (coshr0 * tanh(rho * s + r0) - sinh(r0));\n      return [\n        ux0 + u * dx,\n        uy0 + u * dy,\n        w0 * coshr0 / cosh(rho * s + r0)\n      ];\n    }\n  }\n\n  i.duration = S * 1000;\n\n  return i;\n}\n","import {hsl as colorHsl} from \"d3-color\";\nimport color, {hue} from \"./color\";\n\nfunction hsl(hue) {\n  return function(start, end) {\n    var h = hue((start = colorHsl(start)).h, (end = colorHsl(end)).h),\n        s = color(start.s, end.s),\n        l = color(start.l, end.l),\n        opacity = color(start.opacity, end.opacity);\n    return function(t) {\n      start.h = h(t);\n      start.s = s(t);\n      start.l = l(t);\n      start.opacity = opacity(t);\n      return start + \"\";\n    };\n  }\n}\n\nexport default hsl(hue);\nexport var hslLong = hsl(color);\n","import {hcl as colorHcl} from \"d3-color\";\nimport color, {hue} from \"./color\";\n\nfunction hcl(hue) {\n  return function(start, end) {\n    var h = hue((start = colorHcl(start)).h, (end = colorHcl(end)).h),\n        c = color(start.c, end.c),\n        l = color(start.l, end.l),\n        opacity = color(start.opacity, end.opacity);\n    return function(t) {\n      start.h = h(t);\n      start.c = c(t);\n      start.l = l(t);\n      start.opacity = opacity(t);\n      return start + \"\";\n    };\n  }\n}\n\nexport default hcl(hue);\nexport var hclLong = hcl(color);\n","import {cubehelix as colorCubehelix} from \"d3-color\";\nimport color, {hue} from \"./color\";\n\nfunction cubehelix(hue) {\n  return (function cubehelixGamma(y) {\n    y = +y;\n\n    function cubehelix(start, end) {\n      var h = hue((start = colorCubehelix(start)).h, (end = colorCubehelix(end)).h),\n          s = color(start.s, end.s),\n          l = color(start.l, end.l),\n          opacity = color(start.opacity, end.opacity);\n      return function(t) {\n        start.h = h(t);\n        start.s = s(t);\n        start.l = l(Math.pow(t, y));\n        start.opacity = opacity(t);\n        return start + \"\";\n      };\n    }\n\n    cubehelix.gamma = cubehelixGamma;\n\n    return cubehelix;\n  })(1);\n}\n\nexport default cubehelix(hue);\nexport var cubehelixLong = cubehelix(color);\n","export default function piecewise(interpolate, values) {\n  var i = 0, n = values.length - 1, v = values[0], I = new Array(n < 0 ? 0 : n);\n  while (i < n) I[i] = interpolate(v, v = values[++i]);\n  return function(t) {\n    var i = Math.max(0, Math.min(n - 1, Math.floor(t *= n)));\n    return I[i](t - i);\n  };\n}\n","export default function(interpolator, n) {\n  var samples = new Array(n);\n  for (var i = 0; i < n; ++i) samples[i] = interpolator(i / (n - 1));\n  return samples;\n}\n","export default function(x) {\n  return function() {\n    return x;\n  };\n}\n","export default function(x) {\n  return +x;\n}\n","import {bisect} from \"d3-array\";\nimport {interpolate as interpolateValue, interpolateRound} from \"d3-interpolate\";\nimport {map, slice} from \"./array\";\nimport constant from \"./constant\";\nimport number from \"./number\";\n\nvar unit = [0, 1];\n\nexport function deinterpolateLinear(a, b) {\n  return (b -= (a = +a))\n      ? function(x) { return (x - a) / b; }\n      : constant(b);\n}\n\nfunction deinterpolateClamp(deinterpolate) {\n  return function(a, b) {\n    var d = deinterpolate(a = +a, b = +b);\n    return function(x) { return x <= a ? 0 : x >= b ? 1 : d(x); };\n  };\n}\n\nfunction reinterpolateClamp(reinterpolate) {\n  return function(a, b) {\n    var r = reinterpolate(a = +a, b = +b);\n    return function(t) { return t <= 0 ? a : t >= 1 ? b : r(t); };\n  };\n}\n\nfunction bimap(domain, range, deinterpolate, reinterpolate) {\n  var d0 = domain[0], d1 = domain[1], r0 = range[0], r1 = range[1];\n  if (d1 < d0) d0 = deinterpolate(d1, d0), r0 = reinterpolate(r1, r0);\n  else d0 = deinterpolate(d0, d1), r0 = reinterpolate(r0, r1);\n  return function(x) { return r0(d0(x)); };\n}\n\nfunction polymap(domain, range, deinterpolate, reinterpolate) {\n  var j = Math.min(domain.length, range.length) - 1,\n      d = new Array(j),\n      r = new Array(j),\n      i = -1;\n\n  // Reverse descending domains.\n  if (domain[j] < domain[0]) {\n    domain = domain.slice().reverse();\n    range = range.slice().reverse();\n  }\n\n  while (++i < j) {\n    d[i] = deinterpolate(domain[i], domain[i + 1]);\n    r[i] = reinterpolate(range[i], range[i + 1]);\n  }\n\n  return function(x) {\n    var i = bisect(domain, x, 1, j) - 1;\n    return r[i](d[i](x));\n  };\n}\n\nexport function copy(source, target) {\n  return target\n      .domain(source.domain())\n      .range(source.range())\n      .interpolate(source.interpolate())\n      .clamp(source.clamp());\n}\n\n// deinterpolate(a, b)(x) takes a domain value x in [a,b] and returns the corresponding parameter t in [0,1].\n// reinterpolate(a, b)(t) takes a parameter t in [0,1] and returns the corresponding domain value x in [a,b].\nexport default function continuous(deinterpolate, reinterpolate) {\n  var domain = unit,\n      range = unit,\n      interpolate = interpolateValue,\n      clamp = false,\n      piecewise,\n      output,\n      input;\n\n  function rescale() {\n    piecewise = Math.min(domain.length, range.length) > 2 ? polymap : bimap;\n    output = input = null;\n    return scale;\n  }\n\n  function scale(x) {\n    return (output || (output = piecewise(domain, range, clamp ? deinterpolateClamp(deinterpolate) : deinterpolate, interpolate)))(+x);\n  }\n\n  scale.invert = function(y) {\n    return (input || (input = piecewise(range, domain, deinterpolateLinear, clamp ? reinterpolateClamp(reinterpolate) : reinterpolate)))(+y);\n  };\n\n  scale.domain = function(_) {\n    return arguments.length ? (domain = map.call(_, number), rescale()) : domain.slice();\n  };\n\n  scale.range = function(_) {\n    return arguments.length ? (range = slice.call(_), rescale()) : range.slice();\n  };\n\n  scale.rangeRound = function(_) {\n    return range = slice.call(_), interpolate = interpolateRound, rescale();\n  };\n\n  scale.clamp = function(_) {\n    return arguments.length ? (clamp = !!_, rescale()) : clamp;\n  };\n\n  scale.interpolate = function(_) {\n    return arguments.length ? (interpolate = _, rescale()) : interpolate;\n  };\n\n  return rescale();\n}\n","// Computes the decimal coefficient and exponent of the specified number x with\n// significant digits p, where x is positive and p is in [1, 21] or undefined.\n// For example, formatDecimal(1.23) returns [\"123\", 0].\nexport default function(x, p) {\n  if ((i = (x = p ? x.toExponential(p - 1) : x.toExponential()).indexOf(\"e\")) < 0) return null; // NaN, ±Infinity\n  var i, coefficient = x.slice(0, i);\n\n  // The string returned by toExponential either has the form \\d\\.\\d+e[-+]\\d+\n  // (e.g., 1.2e+3) or the form \\de[-+]\\d+ (e.g., 1e+3).\n  return [\n    coefficient.length > 1 ? coefficient[0] + coefficient.slice(2) : coefficient,\n    +x.slice(i + 1)\n  ];\n}\n","import formatDecimal from \"./formatDecimal\";\n\nexport default function(x) {\n  return x = formatDecimal(Math.abs(x)), x ? x[1] : NaN;\n}\n","// [[fill]align][sign][symbol][0][width][,][.precision][~][type]\nvar re = /^(?:(.)?([<>=^]))?([+\\-( ])?([$#])?(0)?(\\d+)?(,)?(\\.\\d+)?(~)?([a-z%])?$/i;\n\nexport default function formatSpecifier(specifier) {\n  return new FormatSpecifier(specifier);\n}\n\nformatSpecifier.prototype = FormatSpecifier.prototype; // instanceof\n\nfunction FormatSpecifier(specifier) {\n  if (!(match = re.exec(specifier))) throw new Error(\"invalid format: \" + specifier);\n  var match;\n  this.fill = match[1] || \" \";\n  this.align = match[2] || \">\";\n  this.sign = match[3] || \"-\";\n  this.symbol = match[4] || \"\";\n  this.zero = !!match[5];\n  this.width = match[6] && +match[6];\n  this.comma = !!match[7];\n  this.precision = match[8] && +match[8].slice(1);\n  this.trim = !!match[9];\n  this.type = match[10] || \"\";\n}\n\nFormatSpecifier.prototype.toString = function() {\n  return this.fill\n      + this.align\n      + this.sign\n      + this.symbol\n      + (this.zero ? \"0\" : \"\")\n      + (this.width == null ? \"\" : Math.max(1, this.width | 0))\n      + (this.comma ? \",\" : \"\")\n      + (this.precision == null ? \"\" : \".\" + Math.max(0, this.precision | 0))\n      + (this.trim ? \"~\" : \"\")\n      + this.type;\n};\n","// Trims insignificant zeros, e.g., replaces 1.2000k with 1.2k.\nexport default function(s) {\n  out: for (var n = s.length, i = 1, i0 = -1, i1; i < n; ++i) {\n    switch (s[i]) {\n      case \".\": i0 = i1 = i; break;\n      case \"0\": if (i0 === 0) i0 = i; i1 = i; break;\n      default: if (i0 > 0) { if (!+s[i]) break out; i0 = 0; } break;\n    }\n  }\n  return i0 > 0 ? s.slice(0, i0) + s.slice(i1 + 1) : s;\n}\n","import formatDecimal from \"./formatDecimal\";\n\nexport var prefixExponent;\n\nexport default function(x, p) {\n  var d = formatDecimal(x, p);\n  if (!d) return x + \"\";\n  var coefficient = d[0],\n      exponent = d[1],\n      i = exponent - (prefixExponent = Math.max(-8, Math.min(8, Math.floor(exponent / 3))) * 3) + 1,\n      n = coefficient.length;\n  return i === n ? coefficient\n      : i > n ? coefficient + new Array(i - n + 1).join(\"0\")\n      : i > 0 ? coefficient.slice(0, i) + \".\" + coefficient.slice(i)\n      : \"0.\" + new Array(1 - i).join(\"0\") + formatDecimal(x, Math.max(0, p + i - 1))[0]; // less than 1y!\n}\n","import formatLocale from \"./locale\";\n\nvar locale;\nexport var format;\nexport var formatPrefix;\n\ndefaultLocale({\n  decimal: \".\",\n  thousands: \",\",\n  grouping: [3],\n  currency: [\"$\", \"\"]\n});\n\nexport default function defaultLocale(definition) {\n  locale = formatLocale(definition);\n  format = locale.format;\n  formatPrefix = locale.formatPrefix;\n  return locale;\n}\n","import formatDecimal from \"./formatDecimal\";\n\nexport default function(x, p) {\n  var d = formatDecimal(x, p);\n  if (!d) return x + \"\";\n  var coefficient = d[0],\n      exponent = d[1];\n  return exponent < 0 ? \"0.\" + new Array(-exponent).join(\"0\") + coefficient\n      : coefficient.length > exponent + 1 ? coefficient.slice(0, exponent + 1) + \".\" + coefficient.slice(exponent + 1)\n      : coefficient + new Array(exponent - coefficient.length + 2).join(\"0\");\n}\n","import formatPrefixAuto from \"./formatPrefixAuto\";\nimport formatRounded from \"./formatRounded\";\n\nexport default {\n  \"%\": function(x, p) { return (x * 100).toFixed(p); },\n  \"b\": function(x) { return Math.round(x).toString(2); },\n  \"c\": function(x) { return x + \"\"; },\n  \"d\": function(x) { return Math.round(x).toString(10); },\n  \"e\": function(x, p) { return x.toExponential(p); },\n  \"f\": function(x, p) { return x.toFixed(p); },\n  \"g\": function(x, p) { return x.toPrecision(p); },\n  \"o\": function(x) { return Math.round(x).toString(8); },\n  \"p\": function(x, p) { return formatRounded(x * 100, p); },\n  \"r\": formatRounded,\n  \"s\": formatPrefixAuto,\n  \"X\": function(x) { return Math.round(x).toString(16).toUpperCase(); },\n  \"x\": function(x) { return Math.round(x).toString(16); }\n};\n","export default function(x) {\n  return x;\n}\n","import exponent from \"./exponent\";\nimport formatGroup from \"./formatGroup\";\nimport formatNumerals from \"./formatNumerals\";\nimport formatSpecifier from \"./formatSpecifier\";\nimport formatTrim from \"./formatTrim\";\nimport formatTypes from \"./formatTypes\";\nimport {prefixExponent} from \"./formatPrefixAuto\";\nimport identity from \"./identity\";\n\nvar prefixes = [\"y\",\"z\",\"a\",\"f\",\"p\",\"n\",\"µ\",\"m\",\"\",\"k\",\"M\",\"G\",\"T\",\"P\",\"E\",\"Z\",\"Y\"];\n\nexport default function(locale) {\n  var group = locale.grouping && locale.thousands ? formatGroup(locale.grouping, locale.thousands) : identity,\n      currency = locale.currency,\n      decimal = locale.decimal,\n      numerals = locale.numerals ? formatNumerals(locale.numerals) : identity,\n      percent = locale.percent || \"%\";\n\n  function newFormat(specifier) {\n    specifier = formatSpecifier(specifier);\n\n    var fill = specifier.fill,\n        align = specifier.align,\n        sign = specifier.sign,\n        symbol = specifier.symbol,\n        zero = specifier.zero,\n        width = specifier.width,\n        comma = specifier.comma,\n        precision = specifier.precision,\n        trim = specifier.trim,\n        type = specifier.type;\n\n    // The \"n\" type is an alias for \",g\".\n    if (type === \"n\") comma = true, type = \"g\";\n\n    // The \"\" type, and any invalid type, is an alias for \".12~g\".\n    else if (!formatTypes[type]) precision == null && (precision = 12), trim = true, type = \"g\";\n\n    // If zero fill is specified, padding goes after sign and before digits.\n    if (zero || (fill === \"0\" && align === \"=\")) zero = true, fill = \"0\", align = \"=\";\n\n    // Compute the prefix and suffix.\n    // For SI-prefix, the suffix is lazily computed.\n    var prefix = symbol === \"$\" ? currency[0] : symbol === \"#\" && /[boxX]/.test(type) ? \"0\" + type.toLowerCase() : \"\",\n        suffix = symbol === \"$\" ? currency[1] : /[%p]/.test(type) ? percent : \"\";\n\n    // What format function should we use?\n    // Is this an integer type?\n    // Can this type generate exponential notation?\n    var formatType = formatTypes[type],\n        maybeSuffix = /[defgprs%]/.test(type);\n\n    // Set the default precision if not specified,\n    // or clamp the specified precision to the supported range.\n    // For significant precision, it must be in [1, 21].\n    // For fixed precision, it must be in [0, 20].\n    precision = precision == null ? 6\n        : /[gprs]/.test(type) ? Math.max(1, Math.min(21, precision))\n        : Math.max(0, Math.min(20, precision));\n\n    function format(value) {\n      var valuePrefix = prefix,\n          valueSuffix = suffix,\n          i, n, c;\n\n      if (type === \"c\") {\n        valueSuffix = formatType(value) + valueSuffix;\n        value = \"\";\n      } else {\n        value = +value;\n\n        // Perform the initial formatting.\n        var valueNegative = value < 0;\n        value = formatType(Math.abs(value), precision);\n\n        // Trim insignificant zeros.\n        if (trim) value = formatTrim(value);\n\n        // If a negative value rounds to zero during formatting, treat as positive.\n        if (valueNegative && +value === 0) valueNegative = false;\n\n        // Compute the prefix and suffix.\n        valuePrefix = (valueNegative ? (sign === \"(\" ? sign : \"-\") : sign === \"-\" || sign === \"(\" ? \"\" : sign) + valuePrefix;\n        valueSuffix = (type === \"s\" ? prefixes[8 + prefixExponent / 3] : \"\") + valueSuffix + (valueNegative && sign === \"(\" ? \")\" : \"\");\n\n        // Break the formatted value into the integer “value” part that can be\n        // grouped, and fractional or exponential “suffix” part that is not.\n        if (maybeSuffix) {\n          i = -1, n = value.length;\n          while (++i < n) {\n            if (c = value.charCodeAt(i), 48 > c || c > 57) {\n              valueSuffix = (c === 46 ? decimal + value.slice(i + 1) : value.slice(i)) + valueSuffix;\n              value = value.slice(0, i);\n              break;\n            }\n          }\n        }\n      }\n\n      // If the fill character is not \"0\", grouping is applied before padding.\n      if (comma && !zero) value = group(value, Infinity);\n\n      // Compute the padding.\n      var length = valuePrefix.length + value.length + valueSuffix.length,\n          padding = length < width ? new Array(width - length + 1).join(fill) : \"\";\n\n      // If the fill character is \"0\", grouping is applied after padding.\n      if (comma && zero) value = group(padding + value, padding.length ? width - valueSuffix.length : Infinity), padding = \"\";\n\n      // Reconstruct the final output based on the desired alignment.\n      switch (align) {\n        case \"<\": value = valuePrefix + value + valueSuffix + padding; break;\n        case \"=\": value = valuePrefix + padding + value + valueSuffix; break;\n        case \"^\": value = padding.slice(0, length = padding.length >> 1) + valuePrefix + value + valueSuffix + padding.slice(length); break;\n        default: value = padding + valuePrefix + value + valueSuffix; break;\n      }\n\n      return numerals(value);\n    }\n\n    format.toString = function() {\n      return specifier + \"\";\n    };\n\n    return format;\n  }\n\n  function formatPrefix(specifier, value) {\n    var f = newFormat((specifier = formatSpecifier(specifier), specifier.type = \"f\", specifier)),\n        e = Math.max(-8, Math.min(8, Math.floor(exponent(value) / 3))) * 3,\n        k = Math.pow(10, -e),\n        prefix = prefixes[8 + e / 3];\n    return function(value) {\n      return f(k * value) + prefix;\n    };\n  }\n\n  return {\n    format: newFormat,\n    formatPrefix: formatPrefix\n  };\n}\n","export default function(grouping, thousands) {\n  return function(value, width) {\n    var i = value.length,\n        t = [],\n        j = 0,\n        g = grouping[0],\n        length = 0;\n\n    while (i > 0 && g > 0) {\n      if (length + g + 1 > width) g = Math.max(1, width - length);\n      t.push(value.substring(i -= g, i + g));\n      if ((length += g + 1) > width) break;\n      g = grouping[j = (j + 1) % grouping.length];\n    }\n\n    return t.reverse().join(thousands);\n  };\n}\n","export default function(numerals) {\n  return function(value) {\n    return value.replace(/[0-9]/g, function(i) {\n      return numerals[+i];\n    });\n  };\n}\n","import exponent from \"./exponent\";\n\nexport default function(step) {\n  return Math.max(0, -exponent(Math.abs(step)));\n}\n","import {tickStep} from \"d3-array\";\nimport {format, formatPrefix, formatSpecifier, precisionFixed, precisionPrefix, precisionRound} from \"d3-format\";\n\nexport default function(domain, count, specifier) {\n  var start = domain[0],\n      stop = domain[domain.length - 1],\n      step = tickStep(start, stop, count == null ? 10 : count),\n      precision;\n  specifier = formatSpecifier(specifier == null ? \",f\" : specifier);\n  switch (specifier.type) {\n    case \"s\": {\n      var value = Math.max(Math.abs(start), Math.abs(stop));\n      if (specifier.precision == null && !isNaN(precision = precisionPrefix(step, value))) specifier.precision = precision;\n      return formatPrefix(specifier, value);\n    }\n    case \"\":\n    case \"e\":\n    case \"g\":\n    case \"p\":\n    case \"r\": {\n      if (specifier.precision == null && !isNaN(precision = precisionRound(step, Math.max(Math.abs(start), Math.abs(stop))))) specifier.precision = precision - (specifier.type === \"e\");\n      break;\n    }\n    case \"f\":\n    case \"%\": {\n      if (specifier.precision == null && !isNaN(precision = precisionFixed(step))) specifier.precision = precision - (specifier.type === \"%\") * 2;\n      break;\n    }\n  }\n  return format(specifier);\n}\n","import exponent from \"./exponent\";\n\nexport default function(step, value) {\n  return Math.max(0, Math.max(-8, Math.min(8, Math.floor(exponent(value) / 3))) * 3 - exponent(Math.abs(step)));\n}\n","import exponent from \"./exponent\";\n\nexport default function(step, max) {\n  step = Math.abs(step), max = Math.abs(max) - step;\n  return Math.max(0, exponent(max) - exponent(step)) + 1;\n}\n","import {ticks, tickIncrement} from \"d3-array\";\nimport {interpolateNumber as reinterpolate} from \"d3-interpolate\";\nimport {default as continuous, copy, deinterpolateLinear as deinterpolate} from \"./continuous\";\nimport tickFormat from \"./tickFormat\";\n\nexport function linearish(scale) {\n  var domain = scale.domain;\n\n  scale.ticks = function(count) {\n    var d = domain();\n    return ticks(d[0], d[d.length - 1], count == null ? 10 : count);\n  };\n\n  scale.tickFormat = function(count, specifier) {\n    return tickFormat(domain(), count, specifier);\n  };\n\n  scale.nice = function(count) {\n    if (count == null) count = 10;\n\n    var d = domain(),\n        i0 = 0,\n        i1 = d.length - 1,\n        start = d[i0],\n        stop = d[i1],\n        step;\n\n    if (stop < start) {\n      step = start, start = stop, stop = step;\n      step = i0, i0 = i1, i1 = step;\n    }\n\n    step = tickIncrement(start, stop, count);\n\n    if (step > 0) {\n      start = Math.floor(start / step) * step;\n      stop = Math.ceil(stop / step) * step;\n      step = tickIncrement(start, stop, count);\n    } else if (step < 0) {\n      start = Math.ceil(start * step) / step;\n      stop = Math.floor(stop * step) / step;\n      step = tickIncrement(start, stop, count);\n    }\n\n    if (step > 0) {\n      d[i0] = Math.floor(start / step) * step;\n      d[i1] = Math.ceil(stop / step) * step;\n      domain(d);\n    } else if (step < 0) {\n      d[i0] = Math.ceil(start * step) / step;\n      d[i1] = Math.floor(stop * step) / step;\n      domain(d);\n    }\n\n    return scale;\n  };\n\n  return scale;\n}\n\nexport default function linear() {\n  var scale = continuous(deinterpolate, reinterpolate);\n\n  scale.copy = function() {\n    return copy(scale, linear());\n  };\n\n  return linearish(scale);\n}\n","import {map} from \"./array\";\nimport {linearish} from \"./linear\";\nimport number from \"./number\";\n\nexport default function identity() {\n  var domain = [0, 1];\n\n  function scale(x) {\n    return +x;\n  }\n\n  scale.invert = scale;\n\n  scale.domain = scale.range = function(_) {\n    return arguments.length ? (domain = map.call(_, number), scale) : domain.slice();\n  };\n\n  scale.copy = function() {\n    return identity().domain(domain);\n  };\n\n  return linearish(scale);\n}\n","export default function(domain, interval) {\n  domain = domain.slice();\n\n  var i0 = 0,\n      i1 = domain.length - 1,\n      x0 = domain[i0],\n      x1 = domain[i1],\n      t;\n\n  if (x1 < x0) {\n    t = i0, i0 = i1, i1 = t;\n    t = x0, x0 = x1, x1 = t;\n  }\n\n  domain[i0] = interval.floor(x0);\n  domain[i1] = interval.ceil(x1);\n  return domain;\n}\n","import {ticks} from \"d3-array\";\nimport {format} from \"d3-format\";\nimport constant from \"./constant\";\nimport nice from \"./nice\";\nimport {default as continuous, copy} from \"./continuous\";\n\nfunction deinterpolate(a, b) {\n  return (b = Math.log(b / a))\n      ? function(x) { return Math.log(x / a) / b; }\n      : constant(b);\n}\n\nfunction reinterpolate(a, b) {\n  return a < 0\n      ? function(t) { return -Math.pow(-b, t) * Math.pow(-a, 1 - t); }\n      : function(t) { return Math.pow(b, t) * Math.pow(a, 1 - t); };\n}\n\nfunction pow10(x) {\n  return isFinite(x) ? +(\"1e\" + x) : x < 0 ? 0 : x;\n}\n\nfunction powp(base) {\n  return base === 10 ? pow10\n      : base === Math.E ? Math.exp\n      : function(x) { return Math.pow(base, x); };\n}\n\nfunction logp(base) {\n  return base === Math.E ? Math.log\n      : base === 10 && Math.log10\n      || base === 2 && Math.log2\n      || (base = Math.log(base), function(x) { return Math.log(x) / base; });\n}\n\nfunction reflect(f) {\n  return function(x) {\n    return -f(-x);\n  };\n}\n\nexport default function log() {\n  var scale = continuous(deinterpolate, reinterpolate).domain([1, 10]),\n      domain = scale.domain,\n      base = 10,\n      logs = logp(10),\n      pows = powp(10);\n\n  function rescale() {\n    logs = logp(base), pows = powp(base);\n    if (domain()[0] < 0) logs = reflect(logs), pows = reflect(pows);\n    return scale;\n  }\n\n  scale.base = function(_) {\n    return arguments.length ? (base = +_, rescale()) : base;\n  };\n\n  scale.domain = function(_) {\n    return arguments.length ? (domain(_), rescale()) : domain();\n  };\n\n  scale.ticks = function(count) {\n    var d = domain(),\n        u = d[0],\n        v = d[d.length - 1],\n        r;\n\n    if (r = v < u) i = u, u = v, v = i;\n\n    var i = logs(u),\n        j = logs(v),\n        p,\n        k,\n        t,\n        n = count == null ? 10 : +count,\n        z = [];\n\n    if (!(base % 1) && j - i < n) {\n      i = Math.round(i) - 1, j = Math.round(j) + 1;\n      if (u > 0) for (; i < j; ++i) {\n        for (k = 1, p = pows(i); k < base; ++k) {\n          t = p * k;\n          if (t < u) continue;\n          if (t > v) break;\n          z.push(t);\n        }\n      } else for (; i < j; ++i) {\n        for (k = base - 1, p = pows(i); k >= 1; --k) {\n          t = p * k;\n          if (t < u) continue;\n          if (t > v) break;\n          z.push(t);\n        }\n      }\n    } else {\n      z = ticks(i, j, Math.min(j - i, n)).map(pows);\n    }\n\n    return r ? z.reverse() : z;\n  };\n\n  scale.tickFormat = function(count, specifier) {\n    if (specifier == null) specifier = base === 10 ? \".0e\" : \",\";\n    if (typeof specifier !== \"function\") specifier = format(specifier);\n    if (count === Infinity) return specifier;\n    if (count == null) count = 10;\n    var k = Math.max(1, base * count / scale.ticks().length); // TODO fast estimate?\n    return function(d) {\n      var i = d / pows(Math.round(logs(d)));\n      if (i * base < base - 0.5) i *= base;\n      return i <= k ? specifier(d) : \"\";\n    };\n  };\n\n  scale.nice = function() {\n    return domain(nice(domain(), {\n      floor: function(x) { return pows(Math.floor(logs(x))); },\n      ceil: function(x) { return pows(Math.ceil(logs(x))); }\n    }));\n  };\n\n  scale.copy = function() {\n    return copy(scale, log().base(base));\n  };\n\n  return scale;\n}\n","import constant from \"./constant\";\nimport {linearish} from \"./linear\";\nimport {default as continuous, copy} from \"./continuous\";\n\nfunction raise(x, exponent) {\n  return x < 0 ? -Math.pow(-x, exponent) : Math.pow(x, exponent);\n}\n\nexport default function pow() {\n  var exponent = 1,\n      scale = continuous(deinterpolate, reinterpolate),\n      domain = scale.domain;\n\n  function deinterpolate(a, b) {\n    return (b = raise(b, exponent) - (a = raise(a, exponent)))\n        ? function(x) { return (raise(x, exponent) - a) / b; }\n        : constant(b);\n  }\n\n  function reinterpolate(a, b) {\n    b = raise(b, exponent) - (a = raise(a, exponent));\n    return function(t) { return raise(a + b * t, 1 / exponent); };\n  }\n\n  scale.exponent = function(_) {\n    return arguments.length ? (exponent = +_, domain(domain())) : exponent;\n  };\n\n  scale.copy = function() {\n    return copy(scale, pow().exponent(exponent));\n  };\n\n  return linearish(scale);\n}\n\nexport function sqrt() {\n  return pow().exponent(0.5);\n}\n","import {ascending, bisect, quantile as threshold} from \"d3-array\";\nimport {slice} from \"./array\";\n\nexport default function quantile() {\n  var domain = [],\n      range = [],\n      thresholds = [];\n\n  function rescale() {\n    var i = 0, n = Math.max(1, range.length);\n    thresholds = new Array(n - 1);\n    while (++i < n) thresholds[i - 1] = threshold(domain, i / n);\n    return scale;\n  }\n\n  function scale(x) {\n    if (!isNaN(x = +x)) return range[bisect(thresholds, x)];\n  }\n\n  scale.invertExtent = function(y) {\n    var i = range.indexOf(y);\n    return i < 0 ? [NaN, NaN] : [\n      i > 0 ? thresholds[i - 1] : domain[0],\n      i < thresholds.length ? thresholds[i] : domain[domain.length - 1]\n    ];\n  };\n\n  scale.domain = function(_) {\n    if (!arguments.length) return domain.slice();\n    domain = [];\n    for (var i = 0, n = _.length, d; i < n; ++i) if (d = _[i], d != null && !isNaN(d = +d)) domain.push(d);\n    domain.sort(ascending);\n    return rescale();\n  };\n\n  scale.range = function(_) {\n    return arguments.length ? (range = slice.call(_), rescale()) : range.slice();\n  };\n\n  scale.quantiles = function() {\n    return thresholds.slice();\n  };\n\n  scale.copy = function() {\n    return quantile()\n        .domain(domain)\n        .range(range);\n  };\n\n  return scale;\n}\n","import {bisect} from \"d3-array\";\nimport {slice} from \"./array\";\nimport {linearish} from \"./linear\";\n\nexport default function quantize() {\n  var x0 = 0,\n      x1 = 1,\n      n = 1,\n      domain = [0.5],\n      range = [0, 1];\n\n  function scale(x) {\n    if (x <= x) return range[bisect(domain, x, 0, n)];\n  }\n\n  function rescale() {\n    var i = -1;\n    domain = new Array(n);\n    while (++i < n) domain[i] = ((i + 1) * x1 - (i - n) * x0) / (n + 1);\n    return scale;\n  }\n\n  scale.domain = function(_) {\n    return arguments.length ? (x0 = +_[0], x1 = +_[1], rescale()) : [x0, x1];\n  };\n\n  scale.range = function(_) {\n    return arguments.length ? (n = (range = slice.call(_)).length - 1, rescale()) : range.slice();\n  };\n\n  scale.invertExtent = function(y) {\n    var i = range.indexOf(y);\n    return i < 0 ? [NaN, NaN]\n        : i < 1 ? [x0, domain[0]]\n        : i >= n ? [domain[n - 1], x1]\n        : [domain[i - 1], domain[i]];\n  };\n\n  scale.copy = function() {\n    return quantize()\n        .domain([x0, x1])\n        .range(range);\n  };\n\n  return linearish(scale);\n}\n","import {bisect} from \"d3-array\";\nimport {slice} from \"./array\";\n\nexport default function threshold() {\n  var domain = [0.5],\n      range = [0, 1],\n      n = 1;\n\n  function scale(x) {\n    if (x <= x) return range[bisect(domain, x, 0, n)];\n  }\n\n  scale.domain = function(_) {\n    return arguments.length ? (domain = slice.call(_), n = Math.min(domain.length, range.length - 1), scale) : domain.slice();\n  };\n\n  scale.range = function(_) {\n    return arguments.length ? (range = slice.call(_), n = Math.min(domain.length, range.length - 1), scale) : range.slice();\n  };\n\n  scale.invertExtent = function(y) {\n    var i = range.indexOf(y);\n    return [domain[i - 1], domain[i]];\n  };\n\n  scale.copy = function() {\n    return threshold()\n        .domain(domain)\n        .range(range);\n  };\n\n  return scale;\n}\n","var t0 = new Date,\n    t1 = new Date;\n\nexport default function newInterval(floori, offseti, count, field) {\n\n  function interval(date) {\n    return floori(date = new Date(+date)), date;\n  }\n\n  interval.floor = interval;\n\n  interval.ceil = function(date) {\n    return floori(date = new Date(date - 1)), offseti(date, 1), floori(date), date;\n  };\n\n  interval.round = function(date) {\n    var d0 = interval(date),\n        d1 = interval.ceil(date);\n    return date - d0 < d1 - date ? d0 : d1;\n  };\n\n  interval.offset = function(date, step) {\n    return offseti(date = new Date(+date), step == null ? 1 : Math.floor(step)), date;\n  };\n\n  interval.range = function(start, stop, step) {\n    var range = [], previous;\n    start = interval.ceil(start);\n    step = step == null ? 1 : Math.floor(step);\n    if (!(start < stop) || !(step > 0)) return range; // also handles Invalid Date\n    do range.push(previous = new Date(+start)), offseti(start, step), floori(start);\n    while (previous < start && start < stop);\n    return range;\n  };\n\n  interval.filter = function(test) {\n    return newInterval(function(date) {\n      if (date >= date) while (floori(date), !test(date)) date.setTime(date - 1);\n    }, function(date, step) {\n      if (date >= date) {\n        if (step < 0) while (++step <= 0) {\n          while (offseti(date, -1), !test(date)) {} // eslint-disable-line no-empty\n        } else while (--step >= 0) {\n          while (offseti(date, +1), !test(date)) {} // eslint-disable-line no-empty\n        }\n      }\n    });\n  };\n\n  if (count) {\n    interval.count = function(start, end) {\n      t0.setTime(+start), t1.setTime(+end);\n      floori(t0), floori(t1);\n      return Math.floor(count(t0, t1));\n    };\n\n    interval.every = function(step) {\n      step = Math.floor(step);\n      return !isFinite(step) || !(step > 0) ? null\n          : !(step > 1) ? interval\n          : interval.filter(field\n              ? function(d) { return field(d) % step === 0; }\n              : function(d) { return interval.count(0, d) % step === 0; });\n    };\n  }\n\n  return interval;\n}\n","import interval from \"./interval\";\n\nvar millisecond = interval(function() {\n  // noop\n}, function(date, step) {\n  date.setTime(+date + step);\n}, function(start, end) {\n  return end - start;\n});\n\n// An optimized implementation for this simple case.\nmillisecond.every = function(k) {\n  k = Math.floor(k);\n  if (!isFinite(k) || !(k > 0)) return null;\n  if (!(k > 1)) return millisecond;\n  return interval(function(date) {\n    date.setTime(Math.floor(date / k) * k);\n  }, function(date, step) {\n    date.setTime(+date + step * k);\n  }, function(start, end) {\n    return (end - start) / k;\n  });\n};\n\nexport default millisecond;\nexport var milliseconds = millisecond.range;\n","export var durationSecond = 1e3;\nexport var durationMinute = 6e4;\nexport var durationHour = 36e5;\nexport var durationDay = 864e5;\nexport var durationWeek = 6048e5;\n","import interval from \"./interval\";\nimport {durationSecond} from \"./duration\";\n\nvar second = interval(function(date) {\n  date.setTime(Math.floor(date / durationSecond) * durationSecond);\n}, function(date, step) {\n  date.setTime(+date + step * durationSecond);\n}, function(start, end) {\n  return (end - start) / durationSecond;\n}, function(date) {\n  return date.getUTCSeconds();\n});\n\nexport default second;\nexport var seconds = second.range;\n","import interval from \"./interval\";\nimport {durationMinute} from \"./duration\";\n\nvar minute = interval(function(date) {\n  date.setTime(Math.floor(date / durationMinute) * durationMinute);\n}, function(date, step) {\n  date.setTime(+date + step * durationMinute);\n}, function(start, end) {\n  return (end - start) / durationMinute;\n}, function(date) {\n  return date.getMinutes();\n});\n\nexport default minute;\nexport var minutes = minute.range;\n","import interval from \"./interval\";\nimport {durationHour, durationMinute} from \"./duration\";\n\nvar hour = interval(function(date) {\n  var offset = date.getTimezoneOffset() * durationMinute % durationHour;\n  if (offset < 0) offset += durationHour;\n  date.setTime(Math.floor((+date - offset) / durationHour) * durationHour + offset);\n}, function(date, step) {\n  date.setTime(+date + step * durationHour);\n}, function(start, end) {\n  return (end - start) / durationHour;\n}, function(date) {\n  return date.getHours();\n});\n\nexport default hour;\nexport var hours = hour.range;\n","import interval from \"./interval\";\nimport {durationDay, durationMinute} from \"./duration\";\n\nvar day = interval(function(date) {\n  date.setHours(0, 0, 0, 0);\n}, function(date, step) {\n  date.setDate(date.getDate() + step);\n}, function(start, end) {\n  return (end - start - (end.getTimezoneOffset() - start.getTimezoneOffset()) * durationMinute) / durationDay;\n}, function(date) {\n  return date.getDate() - 1;\n});\n\nexport default day;\nexport var days = day.range;\n","import interval from \"./interval\";\nimport {durationMinute, durationWeek} from \"./duration\";\n\nfunction weekday(i) {\n  return interval(function(date) {\n    date.setDate(date.getDate() - (date.getDay() + 7 - i) % 7);\n    date.setHours(0, 0, 0, 0);\n  }, function(date, step) {\n    date.setDate(date.getDate() + step * 7);\n  }, function(start, end) {\n    return (end - start - (end.getTimezoneOffset() - start.getTimezoneOffset()) * durationMinute) / durationWeek;\n  });\n}\n\nexport var sunday = weekday(0);\nexport var monday = weekday(1);\nexport var tuesday = weekday(2);\nexport var wednesday = weekday(3);\nexport var thursday = weekday(4);\nexport var friday = weekday(5);\nexport var saturday = weekday(6);\n\nexport var sundays = sunday.range;\nexport var mondays = monday.range;\nexport var tuesdays = tuesday.range;\nexport var wednesdays = wednesday.range;\nexport var thursdays = thursday.range;\nexport var fridays = friday.range;\nexport var saturdays = saturday.range;\n","import interval from \"./interval\";\n\nvar month = interval(function(date) {\n  date.setDate(1);\n  date.setHours(0, 0, 0, 0);\n}, function(date, step) {\n  date.setMonth(date.getMonth() + step);\n}, function(start, end) {\n  return end.getMonth() - start.getMonth() + (end.getFullYear() - start.getFullYear()) * 12;\n}, function(date) {\n  return date.getMonth();\n});\n\nexport default month;\nexport var months = month.range;\n","import interval from \"./interval\";\n\nvar year = interval(function(date) {\n  date.setMonth(0, 1);\n  date.setHours(0, 0, 0, 0);\n}, function(date, step) {\n  date.setFullYear(date.getFullYear() + step);\n}, function(start, end) {\n  return end.getFullYear() - start.getFullYear();\n}, function(date) {\n  return date.getFullYear();\n});\n\n// An optimized implementation for this simple case.\nyear.every = function(k) {\n  return !isFinite(k = Math.floor(k)) || !(k > 0) ? null : interval(function(date) {\n    date.setFullYear(Math.floor(date.getFullYear() / k) * k);\n    date.setMonth(0, 1);\n    date.setHours(0, 0, 0, 0);\n  }, function(date, step) {\n    date.setFullYear(date.getFullYear() + step * k);\n  });\n};\n\nexport default year;\nexport var years = year.range;\n","import interval from \"./interval\";\nimport {durationMinute} from \"./duration\";\n\nvar utcMinute = interval(function(date) {\n  date.setUTCSeconds(0, 0);\n}, function(date, step) {\n  date.setTime(+date + step * durationMinute);\n}, function(start, end) {\n  return (end - start) / durationMinute;\n}, function(date) {\n  return date.getUTCMinutes();\n});\n\nexport default utcMinute;\nexport var utcMinutes = utcMinute.range;\n","import interval from \"./interval\";\nimport {durationHour} from \"./duration\";\n\nvar utcHour = interval(function(date) {\n  date.setUTCMinutes(0, 0, 0);\n}, function(date, step) {\n  date.setTime(+date + step * durationHour);\n}, function(start, end) {\n  return (end - start) / durationHour;\n}, function(date) {\n  return date.getUTCHours();\n});\n\nexport default utcHour;\nexport var utcHours = utcHour.range;\n","import interval from \"./interval\";\nimport {durationDay} from \"./duration\";\n\nvar utcDay = interval(function(date) {\n  date.setUTCHours(0, 0, 0, 0);\n}, function(date, step) {\n  date.setUTCDate(date.getUTCDate() + step);\n}, function(start, end) {\n  return (end - start) / durationDay;\n}, function(date) {\n  return date.getUTCDate() - 1;\n});\n\nexport default utcDay;\nexport var utcDays = utcDay.range;\n","import interval from \"./interval\";\nimport {durationWeek} from \"./duration\";\n\nfunction utcWeekday(i) {\n  return interval(function(date) {\n    date.setUTCDate(date.getUTCDate() - (date.getUTCDay() + 7 - i) % 7);\n    date.setUTCHours(0, 0, 0, 0);\n  }, function(date, step) {\n    date.setUTCDate(date.getUTCDate() + step * 7);\n  }, function(start, end) {\n    return (end - start) / durationWeek;\n  });\n}\n\nexport var utcSunday = utcWeekday(0);\nexport var utcMonday = utcWeekday(1);\nexport var utcTuesday = utcWeekday(2);\nexport var utcWednesday = utcWeekday(3);\nexport var utcThursday = utcWeekday(4);\nexport var utcFriday = utcWeekday(5);\nexport var utcSaturday = utcWeekday(6);\n\nexport var utcSundays = utcSunday.range;\nexport var utcMondays = utcMonday.range;\nexport var utcTuesdays = utcTuesday.range;\nexport var utcWednesdays = utcWednesday.range;\nexport var utcThursdays = utcThursday.range;\nexport var utcFridays = utcFriday.range;\nexport var utcSaturdays = utcSaturday.range;\n","import interval from \"./interval\";\n\nvar utcMonth = interval(function(date) {\n  date.setUTCDate(1);\n  date.setUTCHours(0, 0, 0, 0);\n}, function(date, step) {\n  date.setUTCMonth(date.getUTCMonth() + step);\n}, function(start, end) {\n  return end.getUTCMonth() - start.getUTCMonth() + (end.getUTCFullYear() - start.getUTCFullYear()) * 12;\n}, function(date) {\n  return date.getUTCMonth();\n});\n\nexport default utcMonth;\nexport var utcMonths = utcMonth.range;\n","import interval from \"./interval\";\n\nvar utcYear = interval(function(date) {\n  date.setUTCMonth(0, 1);\n  date.setUTCHours(0, 0, 0, 0);\n}, function(date, step) {\n  date.setUTCFullYear(date.getUTCFullYear() + step);\n}, function(start, end) {\n  return end.getUTCFullYear() - start.getUTCFullYear();\n}, function(date) {\n  return date.getUTCFullYear();\n});\n\n// An optimized implementation for this simple case.\nutcYear.every = function(k) {\n  return !isFinite(k = Math.floor(k)) || !(k > 0) ? null : interval(function(date) {\n    date.setUTCFullYear(Math.floor(date.getUTCFullYear() / k) * k);\n    date.setUTCMonth(0, 1);\n    date.setUTCHours(0, 0, 0, 0);\n  }, function(date, step) {\n    date.setUTCFullYear(date.getUTCFullYear() + step * k);\n  });\n};\n\nexport default utcYear;\nexport var utcYears = utcYear.range;\n","import {\n  timeDay,\n  timeSunday,\n  timeMonday,\n  timeThursday,\n  timeYear,\n  utcDay,\n  utcSunday,\n  utcMonday,\n  utcThursday,\n  utcYear\n} from \"d3-time\";\n\nfunction localDate(d) {\n  if (0 <= d.y && d.y < 100) {\n    var date = new Date(-1, d.m, d.d, d.H, d.M, d.S, d.L);\n    date.setFullYear(d.y);\n    return date;\n  }\n  return new Date(d.y, d.m, d.d, d.H, d.M, d.S, d.L);\n}\n\nfunction utcDate(d) {\n  if (0 <= d.y && d.y < 100) {\n    var date = new Date(Date.UTC(-1, d.m, d.d, d.H, d.M, d.S, d.L));\n    date.setUTCFullYear(d.y);\n    return date;\n  }\n  return new Date(Date.UTC(d.y, d.m, d.d, d.H, d.M, d.S, d.L));\n}\n\nfunction newYear(y) {\n  return {y: y, m: 0, d: 1, H: 0, M: 0, S: 0, L: 0};\n}\n\nexport default function formatLocale(locale) {\n  var locale_dateTime = locale.dateTime,\n      locale_date = locale.date,\n      locale_time = locale.time,\n      locale_periods = locale.periods,\n      locale_weekdays = locale.days,\n      locale_shortWeekdays = locale.shortDays,\n      locale_months = locale.months,\n      locale_shortMonths = locale.shortMonths;\n\n  var periodRe = formatRe(locale_periods),\n      periodLookup = formatLookup(locale_periods),\n      weekdayRe = formatRe(locale_weekdays),\n      weekdayLookup = formatLookup(locale_weekdays),\n      shortWeekdayRe = formatRe(locale_shortWeekdays),\n      shortWeekdayLookup = formatLookup(locale_shortWeekdays),\n      monthRe = formatRe(locale_months),\n      monthLookup = formatLookup(locale_months),\n      shortMonthRe = formatRe(locale_shortMonths),\n      shortMonthLookup = formatLookup(locale_shortMonths);\n\n  var formats = {\n    \"a\": formatShortWeekday,\n    \"A\": formatWeekday,\n    \"b\": formatShortMonth,\n    \"B\": formatMonth,\n    \"c\": null,\n    \"d\": formatDayOfMonth,\n    \"e\": formatDayOfMonth,\n    \"f\": formatMicroseconds,\n    \"H\": formatHour24,\n    \"I\": formatHour12,\n    \"j\": formatDayOfYear,\n    \"L\": formatMilliseconds,\n    \"m\": formatMonthNumber,\n    \"M\": formatMinutes,\n    \"p\": formatPeriod,\n    \"Q\": formatUnixTimestamp,\n    \"s\": formatUnixTimestampSeconds,\n    \"S\": formatSeconds,\n    \"u\": formatWeekdayNumberMonday,\n    \"U\": formatWeekNumberSunday,\n    \"V\": formatWeekNumberISO,\n    \"w\": formatWeekdayNumberSunday,\n    \"W\": formatWeekNumberMonday,\n    \"x\": null,\n    \"X\": null,\n    \"y\": formatYear,\n    \"Y\": formatFullYear,\n    \"Z\": formatZone,\n    \"%\": formatLiteralPercent\n  };\n\n  var utcFormats = {\n    \"a\": formatUTCShortWeekday,\n    \"A\": formatUTCWeekday,\n    \"b\": formatUTCShortMonth,\n    \"B\": formatUTCMonth,\n    \"c\": null,\n    \"d\": formatUTCDayOfMonth,\n    \"e\": formatUTCDayOfMonth,\n    \"f\": formatUTCMicroseconds,\n    \"H\": formatUTCHour24,\n    \"I\": formatUTCHour12,\n    \"j\": formatUTCDayOfYear,\n    \"L\": formatUTCMilliseconds,\n    \"m\": formatUTCMonthNumber,\n    \"M\": formatUTCMinutes,\n    \"p\": formatUTCPeriod,\n    \"Q\": formatUnixTimestamp,\n    \"s\": formatUnixTimestampSeconds,\n    \"S\": formatUTCSeconds,\n    \"u\": formatUTCWeekdayNumberMonday,\n    \"U\": formatUTCWeekNumberSunday,\n    \"V\": formatUTCWeekNumberISO,\n    \"w\": formatUTCWeekdayNumberSunday,\n    \"W\": formatUTCWeekNumberMonday,\n    \"x\": null,\n    \"X\": null,\n    \"y\": formatUTCYear,\n    \"Y\": formatUTCFullYear,\n    \"Z\": formatUTCZone,\n    \"%\": formatLiteralPercent\n  };\n\n  var parses = {\n    \"a\": parseShortWeekday,\n    \"A\": parseWeekday,\n    \"b\": parseShortMonth,\n    \"B\": parseMonth,\n    \"c\": parseLocaleDateTime,\n    \"d\": parseDayOfMonth,\n    \"e\": parseDayOfMonth,\n    \"f\": parseMicroseconds,\n    \"H\": parseHour24,\n    \"I\": parseHour24,\n    \"j\": parseDayOfYear,\n    \"L\": parseMilliseconds,\n    \"m\": parseMonthNumber,\n    \"M\": parseMinutes,\n    \"p\": parsePeriod,\n    \"Q\": parseUnixTimestamp,\n    \"s\": parseUnixTimestampSeconds,\n    \"S\": parseSeconds,\n    \"u\": parseWeekdayNumberMonday,\n    \"U\": parseWeekNumberSunday,\n    \"V\": parseWeekNumberISO,\n    \"w\": parseWeekdayNumberSunday,\n    \"W\": parseWeekNumberMonday,\n    \"x\": parseLocaleDate,\n    \"X\": parseLocaleTime,\n    \"y\": parseYear,\n    \"Y\": parseFullYear,\n    \"Z\": parseZone,\n    \"%\": parseLiteralPercent\n  };\n\n  // These recursive directive definitions must be deferred.\n  formats.x = newFormat(locale_date, formats);\n  formats.X = newFormat(locale_time, formats);\n  formats.c = newFormat(locale_dateTime, formats);\n  utcFormats.x = newFormat(locale_date, utcFormats);\n  utcFormats.X = newFormat(locale_time, utcFormats);\n  utcFormats.c = newFormat(locale_dateTime, utcFormats);\n\n  function newFormat(specifier, formats) {\n    return function(date) {\n      var string = [],\n          i = -1,\n          j = 0,\n          n = specifier.length,\n          c,\n          pad,\n          format;\n\n      if (!(date instanceof Date)) date = new Date(+date);\n\n      while (++i < n) {\n        if (specifier.charCodeAt(i) === 37) {\n          string.push(specifier.slice(j, i));\n          if ((pad = pads[c = specifier.charAt(++i)]) != null) c = specifier.charAt(++i);\n          else pad = c === \"e\" ? \" \" : \"0\";\n          if (format = formats[c]) c = format(date, pad);\n          string.push(c);\n          j = i + 1;\n        }\n      }\n\n      string.push(specifier.slice(j, i));\n      return string.join(\"\");\n    };\n  }\n\n  function newParse(specifier, newDate) {\n    return function(string) {\n      var d = newYear(1900),\n          i = parseSpecifier(d, specifier, string += \"\", 0),\n          week, day;\n      if (i != string.length) return null;\n\n      // If a UNIX timestamp is specified, return it.\n      if (\"Q\" in d) return new Date(d.Q);\n\n      // The am-pm flag is 0 for AM, and 1 for PM.\n      if (\"p\" in d) d.H = d.H % 12 + d.p * 12;\n\n      // Convert day-of-week and week-of-year to day-of-year.\n      if (\"V\" in d) {\n        if (d.V < 1 || d.V > 53) return null;\n        if (!(\"w\" in d)) d.w = 1;\n        if (\"Z\" in d) {\n          week = utcDate(newYear(d.y)), day = week.getUTCDay();\n          week = day > 4 || day === 0 ? utcMonday.ceil(week) : utcMonday(week);\n          week = utcDay.offset(week, (d.V - 1) * 7);\n          d.y = week.getUTCFullYear();\n          d.m = week.getUTCMonth();\n          d.d = week.getUTCDate() + (d.w + 6) % 7;\n        } else {\n          week = newDate(newYear(d.y)), day = week.getDay();\n          week = day > 4 || day === 0 ? timeMonday.ceil(week) : timeMonday(week);\n          week = timeDay.offset(week, (d.V - 1) * 7);\n          d.y = week.getFullYear();\n          d.m = week.getMonth();\n          d.d = week.getDate() + (d.w + 6) % 7;\n        }\n      } else if (\"W\" in d || \"U\" in d) {\n        if (!(\"w\" in d)) d.w = \"u\" in d ? d.u % 7 : \"W\" in d ? 1 : 0;\n        day = \"Z\" in d ? utcDate(newYear(d.y)).getUTCDay() : newDate(newYear(d.y)).getDay();\n        d.m = 0;\n        d.d = \"W\" in d ? (d.w + 6) % 7 + d.W * 7 - (day + 5) % 7 : d.w + d.U * 7 - (day + 6) % 7;\n      }\n\n      // If a time zone is specified, all fields are interpreted as UTC and then\n      // offset according to the specified time zone.\n      if (\"Z\" in d) {\n        d.H += d.Z / 100 | 0;\n        d.M += d.Z % 100;\n        return utcDate(d);\n      }\n\n      // Otherwise, all fields are in local time.\n      return newDate(d);\n    };\n  }\n\n  function parseSpecifier(d, specifier, string, j) {\n    var i = 0,\n        n = specifier.length,\n        m = string.length,\n        c,\n        parse;\n\n    while (i < n) {\n      if (j >= m) return -1;\n      c = specifier.charCodeAt(i++);\n      if (c === 37) {\n        c = specifier.charAt(i++);\n        parse = parses[c in pads ? specifier.charAt(i++) : c];\n        if (!parse || ((j = parse(d, string, j)) < 0)) return -1;\n      } else if (c != string.charCodeAt(j++)) {\n        return -1;\n      }\n    }\n\n    return j;\n  }\n\n  function parsePeriod(d, string, i) {\n    var n = periodRe.exec(string.slice(i));\n    return n ? (d.p = periodLookup[n[0].toLowerCase()], i + n[0].length) : -1;\n  }\n\n  function parseShortWeekday(d, string, i) {\n    var n = shortWeekdayRe.exec(string.slice(i));\n    return n ? (d.w = shortWeekdayLookup[n[0].toLowerCase()], i + n[0].length) : -1;\n  }\n\n  function parseWeekday(d, string, i) {\n    var n = weekdayRe.exec(string.slice(i));\n    return n ? (d.w = weekdayLookup[n[0].toLowerCase()], i + n[0].length) : -1;\n  }\n\n  function parseShortMonth(d, string, i) {\n    var n = shortMonthRe.exec(string.slice(i));\n    return n ? (d.m = shortMonthLookup[n[0].toLowerCase()], i + n[0].length) : -1;\n  }\n\n  function parseMonth(d, string, i) {\n    var n = monthRe.exec(string.slice(i));\n    return n ? (d.m = monthLookup[n[0].toLowerCase()], i + n[0].length) : -1;\n  }\n\n  function parseLocaleDateTime(d, string, i) {\n    return parseSpecifier(d, locale_dateTime, string, i);\n  }\n\n  function parseLocaleDate(d, string, i) {\n    return parseSpecifier(d, locale_date, string, i);\n  }\n\n  function parseLocaleTime(d, string, i) {\n    return parseSpecifier(d, locale_time, string, i);\n  }\n\n  function formatShortWeekday(d) {\n    return locale_shortWeekdays[d.getDay()];\n  }\n\n  function formatWeekday(d) {\n    return locale_weekdays[d.getDay()];\n  }\n\n  function formatShortMonth(d) {\n    return locale_shortMonths[d.getMonth()];\n  }\n\n  function formatMonth(d) {\n    return locale_months[d.getMonth()];\n  }\n\n  function formatPeriod(d) {\n    return locale_periods[+(d.getHours() >= 12)];\n  }\n\n  function formatUTCShortWeekday(d) {\n    return locale_shortWeekdays[d.getUTCDay()];\n  }\n\n  function formatUTCWeekday(d) {\n    return locale_weekdays[d.getUTCDay()];\n  }\n\n  function formatUTCShortMonth(d) {\n    return locale_shortMonths[d.getUTCMonth()];\n  }\n\n  function formatUTCMonth(d) {\n    return locale_months[d.getUTCMonth()];\n  }\n\n  function formatUTCPeriod(d) {\n    return locale_periods[+(d.getUTCHours() >= 12)];\n  }\n\n  return {\n    format: function(specifier) {\n      var f = newFormat(specifier += \"\", formats);\n      f.toString = function() { return specifier; };\n      return f;\n    },\n    parse: function(specifier) {\n      var p = newParse(specifier += \"\", localDate);\n      p.toString = function() { return specifier; };\n      return p;\n    },\n    utcFormat: function(specifier) {\n      var f = newFormat(specifier += \"\", utcFormats);\n      f.toString = function() { return specifier; };\n      return f;\n    },\n    utcParse: function(specifier) {\n      var p = newParse(specifier, utcDate);\n      p.toString = function() { return specifier; };\n      return p;\n    }\n  };\n}\n\nvar pads = {\"-\": \"\", \"_\": \" \", \"0\": \"0\"},\n    numberRe = /^\\s*\\d+/, // note: ignores next directive\n    percentRe = /^%/,\n    requoteRe = /[\\\\^$*+?|[\\]().{}]/g;\n\nfunction pad(value, fill, width) {\n  var sign = value < 0 ? \"-\" : \"\",\n      string = (sign ? -value : value) + \"\",\n      length = string.length;\n  return sign + (length < width ? new Array(width - length + 1).join(fill) + string : string);\n}\n\nfunction requote(s) {\n  return s.replace(requoteRe, \"\\\\$&\");\n}\n\nfunction formatRe(names) {\n  return new RegExp(\"^(?:\" + names.map(requote).join(\"|\") + \")\", \"i\");\n}\n\nfunction formatLookup(names) {\n  var map = {}, i = -1, n = names.length;\n  while (++i < n) map[names[i].toLowerCase()] = i;\n  return map;\n}\n\nfunction parseWeekdayNumberSunday(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 1));\n  return n ? (d.w = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseWeekdayNumberMonday(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 1));\n  return n ? (d.u = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseWeekNumberSunday(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.U = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseWeekNumberISO(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.V = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseWeekNumberMonday(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.W = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseFullYear(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 4));\n  return n ? (d.y = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseYear(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.y = +n[0] + (+n[0] > 68 ? 1900 : 2000), i + n[0].length) : -1;\n}\n\nfunction parseZone(d, string, i) {\n  var n = /^(Z)|([+-]\\d\\d)(?::?(\\d\\d))?/.exec(string.slice(i, i + 6));\n  return n ? (d.Z = n[1] ? 0 : -(n[2] + (n[3] || \"00\")), i + n[0].length) : -1;\n}\n\nfunction parseMonthNumber(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.m = n[0] - 1, i + n[0].length) : -1;\n}\n\nfunction parseDayOfMonth(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.d = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseDayOfYear(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 3));\n  return n ? (d.m = 0, d.d = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseHour24(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.H = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseMinutes(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.M = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseSeconds(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.S = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseMilliseconds(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 3));\n  return n ? (d.L = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseMicroseconds(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 6));\n  return n ? (d.L = Math.floor(n[0] / 1000), i + n[0].length) : -1;\n}\n\nfunction parseLiteralPercent(d, string, i) {\n  var n = percentRe.exec(string.slice(i, i + 1));\n  return n ? i + n[0].length : -1;\n}\n\nfunction parseUnixTimestamp(d, string, i) {\n  var n = numberRe.exec(string.slice(i));\n  return n ? (d.Q = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseUnixTimestampSeconds(d, string, i) {\n  var n = numberRe.exec(string.slice(i));\n  return n ? (d.Q = (+n[0]) * 1000, i + n[0].length) : -1;\n}\n\nfunction formatDayOfMonth(d, p) {\n  return pad(d.getDate(), p, 2);\n}\n\nfunction formatHour24(d, p) {\n  return pad(d.getHours(), p, 2);\n}\n\nfunction formatHour12(d, p) {\n  return pad(d.getHours() % 12 || 12, p, 2);\n}\n\nfunction formatDayOfYear(d, p) {\n  return pad(1 + timeDay.count(timeYear(d), d), p, 3);\n}\n\nfunction formatMilliseconds(d, p) {\n  return pad(d.getMilliseconds(), p, 3);\n}\n\nfunction formatMicroseconds(d, p) {\n  return formatMilliseconds(d, p) + \"000\";\n}\n\nfunction formatMonthNumber(d, p) {\n  return pad(d.getMonth() + 1, p, 2);\n}\n\nfunction formatMinutes(d, p) {\n  return pad(d.getMinutes(), p, 2);\n}\n\nfunction formatSeconds(d, p) {\n  return pad(d.getSeconds(), p, 2);\n}\n\nfunction formatWeekdayNumberMonday(d) {\n  var day = d.getDay();\n  return day === 0 ? 7 : day;\n}\n\nfunction formatWeekNumberSunday(d, p) {\n  return pad(timeSunday.count(timeYear(d), d), p, 2);\n}\n\nfunction formatWeekNumberISO(d, p) {\n  var day = d.getDay();\n  d = (day >= 4 || day === 0) ? timeThursday(d) : timeThursday.ceil(d);\n  return pad(timeThursday.count(timeYear(d), d) + (timeYear(d).getDay() === 4), p, 2);\n}\n\nfunction formatWeekdayNumberSunday(d) {\n  return d.getDay();\n}\n\nfunction formatWeekNumberMonday(d, p) {\n  return pad(timeMonday.count(timeYear(d), d), p, 2);\n}\n\nfunction formatYear(d, p) {\n  return pad(d.getFullYear() % 100, p, 2);\n}\n\nfunction formatFullYear(d, p) {\n  return pad(d.getFullYear() % 10000, p, 4);\n}\n\nfunction formatZone(d) {\n  var z = d.getTimezoneOffset();\n  return (z > 0 ? \"-\" : (z *= -1, \"+\"))\n      + pad(z / 60 | 0, \"0\", 2)\n      + pad(z % 60, \"0\", 2);\n}\n\nfunction formatUTCDayOfMonth(d, p) {\n  return pad(d.getUTCDate(), p, 2);\n}\n\nfunction formatUTCHour24(d, p) {\n  return pad(d.getUTCHours(), p, 2);\n}\n\nfunction formatUTCHour12(d, p) {\n  return pad(d.getUTCHours() % 12 || 12, p, 2);\n}\n\nfunction formatUTCDayOfYear(d, p) {\n  return pad(1 + utcDay.count(utcYear(d), d), p, 3);\n}\n\nfunction formatUTCMilliseconds(d, p) {\n  return pad(d.getUTCMilliseconds(), p, 3);\n}\n\nfunction formatUTCMicroseconds(d, p) {\n  return formatUTCMilliseconds(d, p) + \"000\";\n}\n\nfunction formatUTCMonthNumber(d, p) {\n  return pad(d.getUTCMonth() + 1, p, 2);\n}\n\nfunction formatUTCMinutes(d, p) {\n  return pad(d.getUTCMinutes(), p, 2);\n}\n\nfunction formatUTCSeconds(d, p) {\n  return pad(d.getUTCSeconds(), p, 2);\n}\n\nfunction formatUTCWeekdayNumberMonday(d) {\n  var dow = d.getUTCDay();\n  return dow === 0 ? 7 : dow;\n}\n\nfunction formatUTCWeekNumberSunday(d, p) {\n  return pad(utcSunday.count(utcYear(d), d), p, 2);\n}\n\nfunction formatUTCWeekNumberISO(d, p) {\n  var day = d.getUTCDay();\n  d = (day >= 4 || day === 0) ? utcThursday(d) : utcThursday.ceil(d);\n  return pad(utcThursday.count(utcYear(d), d) + (utcYear(d).getUTCDay() === 4), p, 2);\n}\n\nfunction formatUTCWeekdayNumberSunday(d) {\n  return d.getUTCDay();\n}\n\nfunction formatUTCWeekNumberMonday(d, p) {\n  return pad(utcMonday.count(utcYear(d), d), p, 2);\n}\n\nfunction formatUTCYear(d, p) {\n  return pad(d.getUTCFullYear() % 100, p, 2);\n}\n\nfunction formatUTCFullYear(d, p) {\n  return pad(d.getUTCFullYear() % 10000, p, 4);\n}\n\nfunction formatUTCZone() {\n  return \"+0000\";\n}\n\nfunction formatLiteralPercent() {\n  return \"%\";\n}\n\nfunction formatUnixTimestamp(d) {\n  return +d;\n}\n\nfunction formatUnixTimestampSeconds(d) {\n  return Math.floor(+d / 1000);\n}\n","import formatLocale from \"./locale\";\n\nvar locale;\nexport var timeFormat;\nexport var timeParse;\nexport var utcFormat;\nexport var utcParse;\n\ndefaultLocale({\n  dateTime: \"%x, %X\",\n  date: \"%-m/%-d/%Y\",\n  time: \"%-I:%M:%S %p\",\n  periods: [\"AM\", \"PM\"],\n  days: [\"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\"],\n  shortDays: [\"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\"],\n  months: [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"],\n  shortMonths: [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"]\n});\n\nexport default function defaultLocale(definition) {\n  locale = formatLocale(definition);\n  timeFormat = locale.format;\n  timeParse = locale.parse;\n  utcFormat = locale.utcFormat;\n  utcParse = locale.utcParse;\n  return locale;\n}\n","import {utcFormat} from \"./defaultLocale\";\n\nexport var isoSpecifier = \"%Y-%m-%dT%H:%M:%S.%LZ\";\n\nfunction formatIsoNative(date) {\n  return date.toISOString();\n}\n\nvar formatIso = Date.prototype.toISOString\n    ? formatIsoNative\n    : utcFormat(isoSpecifier);\n\nexport default formatIso;\n","import {isoSpecifier} from \"./isoFormat\";\nimport {utcParse} from \"./defaultLocale\";\n\nfunction parseIsoNative(string) {\n  var date = new Date(string);\n  return isNaN(date) ? null : date;\n}\n\nvar parseIso = +new Date(\"2000-01-01T00:00:00.000Z\")\n    ? parseIsoNative\n    : utcParse(isoSpecifier);\n\nexport default parseIso;\n","import {bisector, tickStep} from \"d3-array\";\nimport {interpolateNumber as reinterpolate} from \"d3-interpolate\";\nimport {timeYear, timeMonth, timeWeek, timeDay, timeHour, timeMinute, timeSecond, timeMillisecond} from \"d3-time\";\nimport {timeFormat} from \"d3-time-format\";\nimport {map} from \"./array\";\nimport {default as continuous, copy, deinterpolateLinear as deinterpolate} from \"./continuous\";\nimport nice from \"./nice\";\n\nvar durationSecond = 1000,\n    durationMinute = durationSecond * 60,\n    durationHour = durationMinute * 60,\n    durationDay = durationHour * 24,\n    durationWeek = durationDay * 7,\n    durationMonth = durationDay * 30,\n    durationYear = durationDay * 365;\n\nfunction date(t) {\n  return new Date(t);\n}\n\nfunction number(t) {\n  return t instanceof Date ? +t : +new Date(+t);\n}\n\nexport function calendar(year, month, week, day, hour, minute, second, millisecond, format) {\n  var scale = continuous(deinterpolate, reinterpolate),\n      invert = scale.invert,\n      domain = scale.domain;\n\n  var formatMillisecond = format(\".%L\"),\n      formatSecond = format(\":%S\"),\n      formatMinute = format(\"%I:%M\"),\n      formatHour = format(\"%I %p\"),\n      formatDay = format(\"%a %d\"),\n      formatWeek = format(\"%b %d\"),\n      formatMonth = format(\"%B\"),\n      formatYear = format(\"%Y\");\n\n  var tickIntervals = [\n    [second,  1,      durationSecond],\n    [second,  5,  5 * durationSecond],\n    [second, 15, 15 * durationSecond],\n    [second, 30, 30 * durationSecond],\n    [minute,  1,      durationMinute],\n    [minute,  5,  5 * durationMinute],\n    [minute, 15, 15 * durationMinute],\n    [minute, 30, 30 * durationMinute],\n    [  hour,  1,      durationHour  ],\n    [  hour,  3,  3 * durationHour  ],\n    [  hour,  6,  6 * durationHour  ],\n    [  hour, 12, 12 * durationHour  ],\n    [   day,  1,      durationDay   ],\n    [   day,  2,  2 * durationDay   ],\n    [  week,  1,      durationWeek  ],\n    [ month,  1,      durationMonth ],\n    [ month,  3,  3 * durationMonth ],\n    [  year,  1,      durationYear  ]\n  ];\n\n  function tickFormat(date) {\n    return (second(date) < date ? formatMillisecond\n        : minute(date) < date ? formatSecond\n        : hour(date) < date ? formatMinute\n        : day(date) < date ? formatHour\n        : month(date) < date ? (week(date) < date ? formatDay : formatWeek)\n        : year(date) < date ? formatMonth\n        : formatYear)(date);\n  }\n\n  function tickInterval(interval, start, stop, step) {\n    if (interval == null) interval = 10;\n\n    // If a desired tick count is specified, pick a reasonable tick interval\n    // based on the extent of the domain and a rough estimate of tick size.\n    // Otherwise, assume interval is already a time interval and use it.\n    if (typeof interval === \"number\") {\n      var target = Math.abs(stop - start) / interval,\n          i = bisector(function(i) { return i[2]; }).right(tickIntervals, target);\n      if (i === tickIntervals.length) {\n        step = tickStep(start / durationYear, stop / durationYear, interval);\n        interval = year;\n      } else if (i) {\n        i = tickIntervals[target / tickIntervals[i - 1][2] < tickIntervals[i][2] / target ? i - 1 : i];\n        step = i[1];\n        interval = i[0];\n      } else {\n        step = Math.max(tickStep(start, stop, interval), 1);\n        interval = millisecond;\n      }\n    }\n\n    return step == null ? interval : interval.every(step);\n  }\n\n  scale.invert = function(y) {\n    return new Date(invert(y));\n  };\n\n  scale.domain = function(_) {\n    return arguments.length ? domain(map.call(_, number)) : domain().map(date);\n  };\n\n  scale.ticks = function(interval, step) {\n    var d = domain(),\n        t0 = d[0],\n        t1 = d[d.length - 1],\n        r = t1 < t0,\n        t;\n    if (r) t = t0, t0 = t1, t1 = t;\n    t = tickInterval(interval, t0, t1, step);\n    t = t ? t.range(t0, t1 + 1) : []; // inclusive stop\n    return r ? t.reverse() : t;\n  };\n\n  scale.tickFormat = function(count, specifier) {\n    return specifier == null ? tickFormat : format(specifier);\n  };\n\n  scale.nice = function(interval, step) {\n    var d = domain();\n    return (interval = tickInterval(interval, d[0], d[d.length - 1], step))\n        ? domain(nice(d, interval))\n        : scale;\n  };\n\n  scale.copy = function() {\n    return copy(scale, calendar(year, month, week, day, hour, minute, second, millisecond, format));\n  };\n\n  return scale;\n}\n\nexport default function() {\n  return calendar(timeYear, timeMonth, timeWeek, timeDay, timeHour, timeMinute, timeSecond, timeMillisecond, timeFormat).domain([new Date(2000, 0, 1), new Date(2000, 0, 2)]);\n}\n","export default function(s) {\n  return s.match(/.{6}/g).map(function(x) {\n    return \"#\" + x;\n  });\n}\n","import colors from \"./colors\";\n\nexport default colors(\"1f77b4ff7f0e2ca02cd627289467bd8c564be377c27f7f7fbcbd2217becf\");\n","import colors from \"./colors\";\n\nexport default colors(\"393b795254a36b6ecf9c9ede6379398ca252b5cf6bcedb9c8c6d31bd9e39e7ba52e7cb94843c39ad494ad6616be7969c7b4173a55194ce6dbdde9ed6\");\n","import colors from \"./colors\";\n\nexport default colors(\"1f77b4aec7e8ff7f0effbb782ca02c98df8ad62728ff98969467bdc5b0d58c564bc49c94e377c2f7b6d27f7f7fc7c7c7bcbd22dbdb8d17becf9edae5\");\n","import colors from \"./colors\";\n\nexport default colors(\"3182bd6baed69ecae1c6dbefe6550dfd8d3cfdae6bfdd0a231a35474c476a1d99bc7e9c0756bb19e9ac8bcbddcdadaeb636363969696bdbdbdd9d9d9\");\n","import {cubehelix} from \"d3-color\";\nimport {interpolateCubehelixLong} from \"d3-interpolate\";\n\nexport default interpolateCubehelixLong(cubehelix(300, 0.5, 0.0), cubehelix(-240, 0.5, 1.0));\n","import {cubehelix} from \"d3-color\";\nimport {interpolateCubehelixLong} from \"d3-interpolate\";\n\nexport var warm = interpolateCubehelixLong(cubehelix(-100, 0.75, 0.35), cubehelix(80, 1.50, 0.8));\n\nexport var cool = interpolateCubehelixLong(cubehelix(260, 0.75, 0.35), cubehelix(80, 1.50, 0.8));\n\nvar rainbow = cubehelix();\n\nexport default function(t) {\n  if (t < 0 || t > 1) t -= Math.floor(t);\n  var ts = Math.abs(t - 0.5);\n  rainbow.h = 360 * t - 100;\n  rainbow.s = 1.5 - 1.5 * ts;\n  rainbow.l = 0.8 - 0.9 * ts;\n  return rainbow + \"\";\n}\n","import colors from \"./colors\";\n\nfunction ramp(range) {\n  var n = range.length;\n  return function(t) {\n    return range[Math.max(0, Math.min(n - 1, Math.floor(t * n)))];\n  };\n}\n\nexport default ramp(colors(\"44015444025645045745055946075a46085c460a5d460b5e470d60470e6147106347116447136548146748166848176948186a481a6c481b6d481c6e481d6f481f70482071482173482374482475482576482677482878482979472a7a472c7a472d7b472e7c472f7d46307e46327e46337f463480453581453781453882443983443a83443b84433d84433e85423f854240864241864142874144874045884046883f47883f48893e49893e4a893e4c8a3d4d8a3d4e8a3c4f8a3c508b3b518b3b528b3a538b3a548c39558c39568c38588c38598c375a8c375b8d365c8d365d8d355e8d355f8d34608d34618d33628d33638d32648e32658e31668e31678e31688e30698e306a8e2f6b8e2f6c8e2e6d8e2e6e8e2e6f8e2d708e2d718e2c718e2c728e2c738e2b748e2b758e2a768e2a778e2a788e29798e297a8e297b8e287c8e287d8e277e8e277f8e27808e26818e26828e26828e25838e25848e25858e24868e24878e23888e23898e238a8d228b8d228c8d228d8d218e8d218f8d21908d21918c20928c20928c20938c1f948c1f958b1f968b1f978b1f988b1f998a1f9a8a1e9b8a1e9c891e9d891f9e891f9f881fa0881fa1881fa1871fa28720a38620a48621a58521a68522a78522a88423a98324aa8325ab8225ac8226ad8127ad8128ae8029af7f2ab07f2cb17e2db27d2eb37c2fb47c31b57b32b67a34b67935b77937b87838b9773aba763bbb753dbc743fbc7340bd7242be7144bf7046c06f48c16e4ac16d4cc26c4ec36b50c46a52c56954c56856c66758c7655ac8645cc8635ec96260ca6063cb5f65cb5e67cc5c69cd5b6ccd5a6ece5870cf5773d05675d05477d1537ad1517cd2507fd34e81d34d84d44b86d54989d5488bd6468ed64590d74393d74195d84098d83e9bd93c9dd93ba0da39a2da37a5db36a8db34aadc32addc30b0dd2fb2dd2db5de2bb8de29bade28bddf26c0df25c2df23c5e021c8e020cae11fcde11dd0e11cd2e21bd5e21ad8e219dae319dde318dfe318e2e418e5e419e7e419eae51aece51befe51cf1e51df4e61ef6e620f8e621fbe723fde725\"));\n\nexport var magma = ramp(colors(\"00000401000501010601010802010902020b02020d03030f03031204041405041606051806051a07061c08071e0907200a08220b09240c09260d0a290e0b2b100b2d110c2f120d31130d34140e36150e38160f3b180f3d19103f1a10421c10441d11471e114920114b21114e22115024125325125527125829115a2a115c2c115f2d11612f116331116533106734106936106b38106c390f6e3b0f703d0f713f0f72400f74420f75440f764510774710784910784a10794c117a4e117b4f127b51127c52137c54137d56147d57157e59157e5a167e5c167f5d177f5f187f601880621980641a80651a80671b80681c816a1c816b1d816d1d816e1e81701f81721f817320817521817621817822817922827b23827c23827e24828025828125818326818426818627818827818928818b29818c29818e2a81902a81912b81932b80942c80962c80982d80992d809b2e7f9c2e7f9e2f7fa02f7fa1307ea3307ea5317ea6317da8327daa337dab337cad347cae347bb0357bb2357bb3367ab5367ab73779b83779ba3878bc3978bd3977bf3a77c03a76c23b75c43c75c53c74c73d73c83e73ca3e72cc3f71cd4071cf4070d0416fd2426fd3436ed5446dd6456cd8456cd9466bdb476adc4869de4968df4a68e04c67e24d66e34e65e44f64e55064e75263e85362e95462ea5661eb5760ec5860ed5a5fee5b5eef5d5ef05f5ef1605df2625df2645cf3655cf4675cf4695cf56b5cf66c5cf66e5cf7705cf7725cf8745cf8765cf9785df9795df97b5dfa7d5efa7f5efa815ffb835ffb8560fb8761fc8961fc8a62fc8c63fc8e64fc9065fd9266fd9467fd9668fd9869fd9a6afd9b6bfe9d6cfe9f6dfea16efea36ffea571fea772fea973feaa74feac76feae77feb078feb27afeb47bfeb67cfeb77efeb97ffebb81febd82febf84fec185fec287fec488fec68afec88cfeca8dfecc8ffecd90fecf92fed194fed395fed597fed799fed89afdda9cfddc9efddea0fde0a1fde2a3fde3a5fde5a7fde7a9fde9aafdebacfcecaefceeb0fcf0b2fcf2b4fcf4b6fcf6b8fcf7b9fcf9bbfcfbbdfcfdbf\"));\n\nexport var inferno = ramp(colors(\"00000401000501010601010802010a02020c02020e03021004031204031405041706041907051b08051d09061f0a07220b07240c08260d08290e092b10092d110a30120a32140b34150b37160b39180c3c190c3e1b0c411c0c431e0c451f0c48210c4a230c4c240c4f260c51280b53290b552b0b572d0b592f0a5b310a5c320a5e340a5f3609613809623909633b09643d09653e0966400a67420a68440a68450a69470b6a490b6a4a0c6b4c0c6b4d0d6c4f0d6c510e6c520e6d540f6d550f6d57106e59106e5a116e5c126e5d126e5f136e61136e62146e64156e65156e67166e69166e6a176e6c186e6d186e6f196e71196e721a6e741a6e751b6e771c6d781c6d7a1d6d7c1d6d7d1e6d7f1e6c801f6c82206c84206b85216b87216b88226a8a226a8c23698d23698f24699025689225689326679526679727669827669a28659b29649d29649f2a63a02a63a22b62a32c61a52c60a62d60a82e5fa92e5eab2f5ead305dae305cb0315bb1325ab3325ab43359b63458b73557b93556ba3655bc3754bd3853bf3952c03a51c13a50c33b4fc43c4ec63d4dc73e4cc83f4bca404acb4149cc4248ce4347cf4446d04545d24644d34743d44842d54a41d74b3fd84c3ed94d3dda4e3cdb503bdd513ade5238df5337e05536e15635e25734e35933e45a31e55c30e65d2fe75e2ee8602de9612bea632aeb6429eb6628ec6726ed6925ee6a24ef6c23ef6e21f06f20f1711ff1731df2741cf3761bf37819f47918f57b17f57d15f67e14f68013f78212f78410f8850ff8870ef8890cf98b0bf98c0af98e09fa9008fa9207fa9407fb9606fb9706fb9906fb9b06fb9d07fc9f07fca108fca309fca50afca60cfca80dfcaa0ffcac11fcae12fcb014fcb216fcb418fbb61afbb81dfbba1ffbbc21fbbe23fac026fac228fac42afac62df9c72ff9c932f9cb35f8cd37f8cf3af7d13df7d340f6d543f6d746f5d949f5db4cf4dd4ff4df53f4e156f3e35af3e55df2e661f2e865f2ea69f1ec6df1ed71f1ef75f1f179f2f27df2f482f3f586f3f68af4f88ef5f992f6fa96f8fb9af9fc9dfafda1fcffa4\"));\n\nexport var plasma = ramp(colors(\"0d088710078813078916078a19068c1b068d1d068e20068f2206902406912605912805922a05932c05942e05952f059631059733059735049837049938049a3a049a3c049b3e049c3f049c41049d43039e44039e46039f48039f4903a04b03a14c02a14e02a25002a25102a35302a35502a45601a45801a45901a55b01a55c01a65e01a66001a66100a76300a76400a76600a76700a86900a86a00a86c00a86e00a86f00a87100a87201a87401a87501a87701a87801a87a02a87b02a87d03a87e03a88004a88104a78305a78405a78606a68707a68808a68a09a58b0aa58d0ba58e0ca48f0da4910ea3920fa39410a29511a19613a19814a099159f9a169f9c179e9d189d9e199da01a9ca11b9ba21d9aa31e9aa51f99a62098a72197a82296aa2395ab2494ac2694ad2793ae2892b02991b12a90b22b8fb32c8eb42e8db52f8cb6308bb7318ab83289ba3388bb3488bc3587bd3786be3885bf3984c03a83c13b82c23c81c33d80c43e7fc5407ec6417dc7427cc8437bc9447aca457acb4679cc4778cc4977cd4a76ce4b75cf4c74d04d73d14e72d24f71d35171d45270d5536fd5546ed6556dd7566cd8576bd9586ada5a6ada5b69db5c68dc5d67dd5e66de5f65de6164df6263e06363e16462e26561e26660e3685fe4695ee56a5de56b5de66c5ce76e5be76f5ae87059e97158e97257ea7457eb7556eb7655ec7754ed7953ed7a52ee7b51ef7c51ef7e50f07f4ff0804ef1814df1834cf2844bf3854bf3874af48849f48948f58b47f58c46f68d45f68f44f79044f79143f79342f89441f89540f9973ff9983ef99a3efa9b3dfa9c3cfa9e3bfb9f3afba139fba238fca338fca537fca636fca835fca934fdab33fdac33fdae32fdaf31fdb130fdb22ffdb42ffdb52efeb72dfeb82cfeba2cfebb2bfebd2afebe2afec029fdc229fdc328fdc527fdc627fdc827fdca26fdcb26fccd25fcce25fcd025fcd225fbd324fbd524fbd724fad824fada24f9dc24f9dd25f8df25f8e125f7e225f7e425f6e626f6e826f5e926f5eb27f4ed27f3ee27f3f027f2f227f1f426f1f525f0f724f0f921\"));\n","import {linearish} from \"./linear\";\n\nexport default function sequential(interpolator) {\n  var x0 = 0,\n      x1 = 1,\n      clamp = false;\n\n  function scale(x) {\n    var t = (x - x0) / (x1 - x0);\n    return interpolator(clamp ? Math.max(0, Math.min(1, t)) : t);\n  }\n\n  scale.domain = function(_) {\n    return arguments.length ? (x0 = +_[0], x1 = +_[1], scale) : [x0, x1];\n  };\n\n  scale.clamp = function(_) {\n    return arguments.length ? (clamp = !!_, scale) : clamp;\n  };\n\n  scale.interpolator = function(_) {\n    return arguments.length ? (interpolator = _, scale) : interpolator;\n  };\n\n  scale.copy = function() {\n    return sequential(interpolator).domain([x0, x1]).clamp(clamp);\n  };\n\n  return linearish(scale);\n}\n","export default function(specifier) {\n  var n = specifier.length / 6 | 0, colors = new Array(n), i = 0;\n  while (i < n) colors[i] = \"#\" + specifier.slice(i * 6, ++i * 6);\n  return colors;\n}\n","import colors from \"../colors\";\n\nexport default colors(\"7fc97fbeaed4fdc086ffff99386cb0f0027fbf5b17666666\");\n","import colors from \"../colors\";\n\nexport default colors(\"1f77b4ff7f0e2ca02cd627289467bd8c564be377c27f7f7fbcbd2217becf\");\n","import colors from \"../colors\";\n\nexport default colors(\"1b9e77d95f027570b3e7298a66a61ee6ab02a6761d666666\");\n","import colors from \"../colors\";\n\nexport default colors(\"a6cee31f78b4b2df8a33a02cfb9a99e31a1cfdbf6fff7f00cab2d66a3d9affff99b15928\");\n","import colors from \"../colors\";\n\nexport default colors(\"fbb4aeb3cde3ccebc5decbe4fed9a6ffffcce5d8bdfddaecf2f2f2\");\n","import colors from \"../colors\";\n\nexport default colors(\"b3e2cdfdcdaccbd5e8f4cae4e6f5c9fff2aef1e2cccccccc\");\n","import colors from \"../colors\";\n\nexport default colors(\"e41a1c377eb84daf4a984ea3ff7f00ffff33a65628f781bf999999\");\n","import colors from \"../colors\";\n\nexport default colors(\"66c2a5fc8d628da0cbe78ac3a6d854ffd92fe5c494b3b3b3\");\n","import colors from \"../colors\";\n\nexport default colors(\"8dd3c7ffffb3bebadafb807280b1d3fdb462b3de69fccde5d9d9d9bc80bdccebc5ffed6f\");\n","import {interpolateRgbBasis} from \"d3-interpolate\";\n\nexport default function(scheme) {\n  return interpolateRgbBasis(scheme[scheme.length - 1]);\n}\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"d8b365f5f5f55ab4ac\",\n  \"a6611adfc27d80cdc1018571\",\n  \"a6611adfc27df5f5f580cdc1018571\",\n  \"8c510ad8b365f6e8c3c7eae55ab4ac01665e\",\n  \"8c510ad8b365f6e8c3f5f5f5c7eae55ab4ac01665e\",\n  \"8c510abf812ddfc27df6e8c3c7eae580cdc135978f01665e\",\n  \"8c510abf812ddfc27df6e8c3f5f5f5c7eae580cdc135978f01665e\",\n  \"5430058c510abf812ddfc27df6e8c3c7eae580cdc135978f01665e003c30\",\n  \"5430058c510abf812ddfc27df6e8c3f5f5f5c7eae580cdc135978f01665e003c30\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"af8dc3f7f7f77fbf7b\",\n  \"7b3294c2a5cfa6dba0008837\",\n  \"7b3294c2a5cff7f7f7a6dba0008837\",\n  \"762a83af8dc3e7d4e8d9f0d37fbf7b1b7837\",\n  \"762a83af8dc3e7d4e8f7f7f7d9f0d37fbf7b1b7837\",\n  \"762a839970abc2a5cfe7d4e8d9f0d3a6dba05aae611b7837\",\n  \"762a839970abc2a5cfe7d4e8f7f7f7d9f0d3a6dba05aae611b7837\",\n  \"40004b762a839970abc2a5cfe7d4e8d9f0d3a6dba05aae611b783700441b\",\n  \"40004b762a839970abc2a5cfe7d4e8f7f7f7d9f0d3a6dba05aae611b783700441b\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"e9a3c9f7f7f7a1d76a\",\n  \"d01c8bf1b6dab8e1864dac26\",\n  \"d01c8bf1b6daf7f7f7b8e1864dac26\",\n  \"c51b7de9a3c9fde0efe6f5d0a1d76a4d9221\",\n  \"c51b7de9a3c9fde0eff7f7f7e6f5d0a1d76a4d9221\",\n  \"c51b7dde77aef1b6dafde0efe6f5d0b8e1867fbc414d9221\",\n  \"c51b7dde77aef1b6dafde0eff7f7f7e6f5d0b8e1867fbc414d9221\",\n  \"8e0152c51b7dde77aef1b6dafde0efe6f5d0b8e1867fbc414d9221276419\",\n  \"8e0152c51b7dde77aef1b6dafde0eff7f7f7e6f5d0b8e1867fbc414d9221276419\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"998ec3f7f7f7f1a340\",\n  \"5e3c99b2abd2fdb863e66101\",\n  \"5e3c99b2abd2f7f7f7fdb863e66101\",\n  \"542788998ec3d8daebfee0b6f1a340b35806\",\n  \"542788998ec3d8daebf7f7f7fee0b6f1a340b35806\",\n  \"5427888073acb2abd2d8daebfee0b6fdb863e08214b35806\",\n  \"5427888073acb2abd2d8daebf7f7f7fee0b6fdb863e08214b35806\",\n  \"2d004b5427888073acb2abd2d8daebfee0b6fdb863e08214b358067f3b08\",\n  \"2d004b5427888073acb2abd2d8daebf7f7f7fee0b6fdb863e08214b358067f3b08\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"ef8a62f7f7f767a9cf\",\n  \"ca0020f4a58292c5de0571b0\",\n  \"ca0020f4a582f7f7f792c5de0571b0\",\n  \"b2182bef8a62fddbc7d1e5f067a9cf2166ac\",\n  \"b2182bef8a62fddbc7f7f7f7d1e5f067a9cf2166ac\",\n  \"b2182bd6604df4a582fddbc7d1e5f092c5de4393c32166ac\",\n  \"b2182bd6604df4a582fddbc7f7f7f7d1e5f092c5de4393c32166ac\",\n  \"67001fb2182bd6604df4a582fddbc7d1e5f092c5de4393c32166ac053061\",\n  \"67001fb2182bd6604df4a582fddbc7f7f7f7d1e5f092c5de4393c32166ac053061\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"ef8a62ffffff999999\",\n  \"ca0020f4a582bababa404040\",\n  \"ca0020f4a582ffffffbababa404040\",\n  \"b2182bef8a62fddbc7e0e0e09999994d4d4d\",\n  \"b2182bef8a62fddbc7ffffffe0e0e09999994d4d4d\",\n  \"b2182bd6604df4a582fddbc7e0e0e0bababa8787874d4d4d\",\n  \"b2182bd6604df4a582fddbc7ffffffe0e0e0bababa8787874d4d4d\",\n  \"67001fb2182bd6604df4a582fddbc7e0e0e0bababa8787874d4d4d1a1a1a\",\n  \"67001fb2182bd6604df4a582fddbc7ffffffe0e0e0bababa8787874d4d4d1a1a1a\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"fc8d59ffffbf91bfdb\",\n  \"d7191cfdae61abd9e92c7bb6\",\n  \"d7191cfdae61ffffbfabd9e92c7bb6\",\n  \"d73027fc8d59fee090e0f3f891bfdb4575b4\",\n  \"d73027fc8d59fee090ffffbfe0f3f891bfdb4575b4\",\n  \"d73027f46d43fdae61fee090e0f3f8abd9e974add14575b4\",\n  \"d73027f46d43fdae61fee090ffffbfe0f3f8abd9e974add14575b4\",\n  \"a50026d73027f46d43fdae61fee090e0f3f8abd9e974add14575b4313695\",\n  \"a50026d73027f46d43fdae61fee090ffffbfe0f3f8abd9e974add14575b4313695\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"fc8d59ffffbf91cf60\",\n  \"d7191cfdae61a6d96a1a9641\",\n  \"d7191cfdae61ffffbfa6d96a1a9641\",\n  \"d73027fc8d59fee08bd9ef8b91cf601a9850\",\n  \"d73027fc8d59fee08bffffbfd9ef8b91cf601a9850\",\n  \"d73027f46d43fdae61fee08bd9ef8ba6d96a66bd631a9850\",\n  \"d73027f46d43fdae61fee08bffffbfd9ef8ba6d96a66bd631a9850\",\n  \"a50026d73027f46d43fdae61fee08bd9ef8ba6d96a66bd631a9850006837\",\n  \"a50026d73027f46d43fdae61fee08bffffbfd9ef8ba6d96a66bd631a9850006837\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"fc8d59ffffbf99d594\",\n  \"d7191cfdae61abdda42b83ba\",\n  \"d7191cfdae61ffffbfabdda42b83ba\",\n  \"d53e4ffc8d59fee08be6f59899d5943288bd\",\n  \"d53e4ffc8d59fee08bffffbfe6f59899d5943288bd\",\n  \"d53e4ff46d43fdae61fee08be6f598abdda466c2a53288bd\",\n  \"d53e4ff46d43fdae61fee08bffffbfe6f598abdda466c2a53288bd\",\n  \"9e0142d53e4ff46d43fdae61fee08be6f598abdda466c2a53288bd5e4fa2\",\n  \"9e0142d53e4ff46d43fdae61fee08bffffbfe6f598abdda466c2a53288bd5e4fa2\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"e5f5f999d8c92ca25f\",\n  \"edf8fbb2e2e266c2a4238b45\",\n  \"edf8fbb2e2e266c2a42ca25f006d2c\",\n  \"edf8fbccece699d8c966c2a42ca25f006d2c\",\n  \"edf8fbccece699d8c966c2a441ae76238b45005824\",\n  \"f7fcfde5f5f9ccece699d8c966c2a441ae76238b45005824\",\n  \"f7fcfde5f5f9ccece699d8c966c2a441ae76238b45006d2c00441b\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"e0ecf49ebcda8856a7\",\n  \"edf8fbb3cde38c96c688419d\",\n  \"edf8fbb3cde38c96c68856a7810f7c\",\n  \"edf8fbbfd3e69ebcda8c96c68856a7810f7c\",\n  \"edf8fbbfd3e69ebcda8c96c68c6bb188419d6e016b\",\n  \"f7fcfde0ecf4bfd3e69ebcda8c96c68c6bb188419d6e016b\",\n  \"f7fcfde0ecf4bfd3e69ebcda8c96c68c6bb188419d810f7c4d004b\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"e0f3dba8ddb543a2ca\",\n  \"f0f9e8bae4bc7bccc42b8cbe\",\n  \"f0f9e8bae4bc7bccc443a2ca0868ac\",\n  \"f0f9e8ccebc5a8ddb57bccc443a2ca0868ac\",\n  \"f0f9e8ccebc5a8ddb57bccc44eb3d32b8cbe08589e\",\n  \"f7fcf0e0f3dbccebc5a8ddb57bccc44eb3d32b8cbe08589e\",\n  \"f7fcf0e0f3dbccebc5a8ddb57bccc44eb3d32b8cbe0868ac084081\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"fee8c8fdbb84e34a33\",\n  \"fef0d9fdcc8afc8d59d7301f\",\n  \"fef0d9fdcc8afc8d59e34a33b30000\",\n  \"fef0d9fdd49efdbb84fc8d59e34a33b30000\",\n  \"fef0d9fdd49efdbb84fc8d59ef6548d7301f990000\",\n  \"fff7ecfee8c8fdd49efdbb84fc8d59ef6548d7301f990000\",\n  \"fff7ecfee8c8fdd49efdbb84fc8d59ef6548d7301fb300007f0000\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"ece2f0a6bddb1c9099\",\n  \"f6eff7bdc9e167a9cf02818a\",\n  \"f6eff7bdc9e167a9cf1c9099016c59\",\n  \"f6eff7d0d1e6a6bddb67a9cf1c9099016c59\",\n  \"f6eff7d0d1e6a6bddb67a9cf3690c002818a016450\",\n  \"fff7fbece2f0d0d1e6a6bddb67a9cf3690c002818a016450\",\n  \"fff7fbece2f0d0d1e6a6bddb67a9cf3690c002818a016c59014636\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"ece7f2a6bddb2b8cbe\",\n  \"f1eef6bdc9e174a9cf0570b0\",\n  \"f1eef6bdc9e174a9cf2b8cbe045a8d\",\n  \"f1eef6d0d1e6a6bddb74a9cf2b8cbe045a8d\",\n  \"f1eef6d0d1e6a6bddb74a9cf3690c00570b0034e7b\",\n  \"fff7fbece7f2d0d1e6a6bddb74a9cf3690c00570b0034e7b\",\n  \"fff7fbece7f2d0d1e6a6bddb74a9cf3690c00570b0045a8d023858\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"e7e1efc994c7dd1c77\",\n  \"f1eef6d7b5d8df65b0ce1256\",\n  \"f1eef6d7b5d8df65b0dd1c77980043\",\n  \"f1eef6d4b9dac994c7df65b0dd1c77980043\",\n  \"f1eef6d4b9dac994c7df65b0e7298ace125691003f\",\n  \"f7f4f9e7e1efd4b9dac994c7df65b0e7298ace125691003f\",\n  \"f7f4f9e7e1efd4b9dac994c7df65b0e7298ace125698004367001f\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"fde0ddfa9fb5c51b8a\",\n  \"feebe2fbb4b9f768a1ae017e\",\n  \"feebe2fbb4b9f768a1c51b8a7a0177\",\n  \"feebe2fcc5c0fa9fb5f768a1c51b8a7a0177\",\n  \"feebe2fcc5c0fa9fb5f768a1dd3497ae017e7a0177\",\n  \"fff7f3fde0ddfcc5c0fa9fb5f768a1dd3497ae017e7a0177\",\n  \"fff7f3fde0ddfcc5c0fa9fb5f768a1dd3497ae017e7a017749006a\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"edf8b17fcdbb2c7fb8\",\n  \"ffffcca1dab441b6c4225ea8\",\n  \"ffffcca1dab441b6c42c7fb8253494\",\n  \"ffffccc7e9b47fcdbb41b6c42c7fb8253494\",\n  \"ffffccc7e9b47fcdbb41b6c41d91c0225ea80c2c84\",\n  \"ffffd9edf8b1c7e9b47fcdbb41b6c41d91c0225ea80c2c84\",\n  \"ffffd9edf8b1c7e9b47fcdbb41b6c41d91c0225ea8253494081d58\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"f7fcb9addd8e31a354\",\n  \"ffffccc2e69978c679238443\",\n  \"ffffccc2e69978c67931a354006837\",\n  \"ffffccd9f0a3addd8e78c67931a354006837\",\n  \"ffffccd9f0a3addd8e78c67941ab5d238443005a32\",\n  \"ffffe5f7fcb9d9f0a3addd8e78c67941ab5d238443005a32\",\n  \"ffffe5f7fcb9d9f0a3addd8e78c67941ab5d238443006837004529\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"fff7bcfec44fd95f0e\",\n  \"ffffd4fed98efe9929cc4c02\",\n  \"ffffd4fed98efe9929d95f0e993404\",\n  \"ffffd4fee391fec44ffe9929d95f0e993404\",\n  \"ffffd4fee391fec44ffe9929ec7014cc4c028c2d04\",\n  \"ffffe5fff7bcfee391fec44ffe9929ec7014cc4c028c2d04\",\n  \"ffffe5fff7bcfee391fec44ffe9929ec7014cc4c02993404662506\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"ffeda0feb24cf03b20\",\n  \"ffffb2fecc5cfd8d3ce31a1c\",\n  \"ffffb2fecc5cfd8d3cf03b20bd0026\",\n  \"ffffb2fed976feb24cfd8d3cf03b20bd0026\",\n  \"ffffb2fed976feb24cfd8d3cfc4e2ae31a1cb10026\",\n  \"ffffccffeda0fed976feb24cfd8d3cfc4e2ae31a1cb10026\",\n  \"ffffccffeda0fed976feb24cfd8d3cfc4e2ae31a1cbd0026800026\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"deebf79ecae13182bd\",\n  \"eff3ffbdd7e76baed62171b5\",\n  \"eff3ffbdd7e76baed63182bd08519c\",\n  \"eff3ffc6dbef9ecae16baed63182bd08519c\",\n  \"eff3ffc6dbef9ecae16baed64292c62171b5084594\",\n  \"f7fbffdeebf7c6dbef9ecae16baed64292c62171b5084594\",\n  \"f7fbffdeebf7c6dbef9ecae16baed64292c62171b508519c08306b\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"e5f5e0a1d99b31a354\",\n  \"edf8e9bae4b374c476238b45\",\n  \"edf8e9bae4b374c47631a354006d2c\",\n  \"edf8e9c7e9c0a1d99b74c47631a354006d2c\",\n  \"edf8e9c7e9c0a1d99b74c47641ab5d238b45005a32\",\n  \"f7fcf5e5f5e0c7e9c0a1d99b74c47641ab5d238b45005a32\",\n  \"f7fcf5e5f5e0c7e9c0a1d99b74c47641ab5d238b45006d2c00441b\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"f0f0f0bdbdbd636363\",\n  \"f7f7f7cccccc969696525252\",\n  \"f7f7f7cccccc969696636363252525\",\n  \"f7f7f7d9d9d9bdbdbd969696636363252525\",\n  \"f7f7f7d9d9d9bdbdbd969696737373525252252525\",\n  \"fffffff0f0f0d9d9d9bdbdbd969696737373525252252525\",\n  \"fffffff0f0f0d9d9d9bdbdbd969696737373525252252525000000\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"efedf5bcbddc756bb1\",\n  \"f2f0f7cbc9e29e9ac86a51a3\",\n  \"f2f0f7cbc9e29e9ac8756bb154278f\",\n  \"f2f0f7dadaebbcbddc9e9ac8756bb154278f\",\n  \"f2f0f7dadaebbcbddc9e9ac8807dba6a51a34a1486\",\n  \"fcfbfdefedf5dadaebbcbddc9e9ac8807dba6a51a34a1486\",\n  \"fcfbfdefedf5dadaebbcbddc9e9ac8807dba6a51a354278f3f007d\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"fee0d2fc9272de2d26\",\n  \"fee5d9fcae91fb6a4acb181d\",\n  \"fee5d9fcae91fb6a4ade2d26a50f15\",\n  \"fee5d9fcbba1fc9272fb6a4ade2d26a50f15\",\n  \"fee5d9fcbba1fc9272fb6a4aef3b2ccb181d99000d\",\n  \"fff5f0fee0d2fcbba1fc9272fb6a4aef3b2ccb181d99000d\",\n  \"fff5f0fee0d2fcbba1fc9272fb6a4aef3b2ccb181da50f1567000d\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"fee6cefdae6be6550d\",\n  \"feeddefdbe85fd8d3cd94701\",\n  \"feeddefdbe85fd8d3ce6550da63603\",\n  \"feeddefdd0a2fdae6bfd8d3ce6550da63603\",\n  \"feeddefdd0a2fdae6bfd8d3cf16913d948018c2d04\",\n  \"fff5ebfee6cefdd0a2fdae6bfd8d3cf16913d948018c2d04\",\n  \"fff5ebfee6cefdd0a2fdae6bfd8d3cf16913d94801a636037f2704\"\n).map(colors);\n\nexport default ramp(scheme);\n","import {cubehelix} from \"d3-color\";\nimport {interpolateCubehelixLong} from \"d3-interpolate\";\n\nexport default interpolateCubehelixLong(cubehelix(300, 0.5, 0.0), cubehelix(-240, 0.5, 1.0));\n","import {cubehelix} from \"d3-color\";\nimport {interpolateCubehelixLong} from \"d3-interpolate\";\n\nexport var warm = interpolateCubehelixLong(cubehelix(-100, 0.75, 0.35), cubehelix(80, 1.50, 0.8));\n\nexport var cool = interpolateCubehelixLong(cubehelix(260, 0.75, 0.35), cubehelix(80, 1.50, 0.8));\n\nvar c = cubehelix();\n\nexport default function(t) {\n  if (t < 0 || t > 1) t -= Math.floor(t);\n  var ts = Math.abs(t - 0.5);\n  c.h = 360 * t - 100;\n  c.s = 1.5 - 1.5 * ts;\n  c.l = 0.8 - 0.9 * ts;\n  return c + \"\";\n}\n","import {rgb} from \"d3-color\";\n\nvar c = rgb(),\n    pi_1_3 = Math.PI / 3,\n    pi_2_3 = Math.PI * 2 / 3;\n\nexport default function(t) {\n  var x;\n  t = (0.5 - t) * Math.PI;\n  c.r = 255 * (x = Math.sin(t)) * x;\n  c.g = 255 * (x = Math.sin(t + pi_1_3)) * x;\n  c.b = 255 * (x = Math.sin(t + pi_2_3)) * x;\n  return c + \"\";\n}\n","import colors from \"../colors\";\n\nfunction ramp(range) {\n  var n = range.length;\n  return function(t) {\n    return range[Math.max(0, Math.min(n - 1, Math.floor(t * n)))];\n  };\n}\n\nexport default ramp(colors(\"44015444025645045745055946075a46085c460a5d460b5e470d60470e6147106347116447136548146748166848176948186a481a6c481b6d481c6e481d6f481f70482071482173482374482475482576482677482878482979472a7a472c7a472d7b472e7c472f7d46307e46327e46337f463480453581453781453882443983443a83443b84433d84433e85423f854240864241864142874144874045884046883f47883f48893e49893e4a893e4c8a3d4d8a3d4e8a3c4f8a3c508b3b518b3b528b3a538b3a548c39558c39568c38588c38598c375a8c375b8d365c8d365d8d355e8d355f8d34608d34618d33628d33638d32648e32658e31668e31678e31688e30698e306a8e2f6b8e2f6c8e2e6d8e2e6e8e2e6f8e2d708e2d718e2c718e2c728e2c738e2b748e2b758e2a768e2a778e2a788e29798e297a8e297b8e287c8e287d8e277e8e277f8e27808e26818e26828e26828e25838e25848e25858e24868e24878e23888e23898e238a8d228b8d228c8d228d8d218e8d218f8d21908d21918c20928c20928c20938c1f948c1f958b1f968b1f978b1f988b1f998a1f9a8a1e9b8a1e9c891e9d891f9e891f9f881fa0881fa1881fa1871fa28720a38620a48621a58521a68522a78522a88423a98324aa8325ab8225ac8226ad8127ad8128ae8029af7f2ab07f2cb17e2db27d2eb37c2fb47c31b57b32b67a34b67935b77937b87838b9773aba763bbb753dbc743fbc7340bd7242be7144bf7046c06f48c16e4ac16d4cc26c4ec36b50c46a52c56954c56856c66758c7655ac8645cc8635ec96260ca6063cb5f65cb5e67cc5c69cd5b6ccd5a6ece5870cf5773d05675d05477d1537ad1517cd2507fd34e81d34d84d44b86d54989d5488bd6468ed64590d74393d74195d84098d83e9bd93c9dd93ba0da39a2da37a5db36a8db34aadc32addc30b0dd2fb2dd2db5de2bb8de29bade28bddf26c0df25c2df23c5e021c8e020cae11fcde11dd0e11cd2e21bd5e21ad8e219dae319dde318dfe318e2e418e5e419e7e419eae51aece51befe51cf1e51df4e61ef6e620f8e621fbe723fde725\"));\n\nexport var magma = ramp(colors(\"00000401000501010601010802010902020b02020d03030f03031204041405041606051806051a07061c08071e0907200a08220b09240c09260d0a290e0b2b100b2d110c2f120d31130d34140e36150e38160f3b180f3d19103f1a10421c10441d11471e114920114b21114e22115024125325125527125829115a2a115c2c115f2d11612f116331116533106734106936106b38106c390f6e3b0f703d0f713f0f72400f74420f75440f764510774710784910784a10794c117a4e117b4f127b51127c52137c54137d56147d57157e59157e5a167e5c167f5d177f5f187f601880621980641a80651a80671b80681c816a1c816b1d816d1d816e1e81701f81721f817320817521817621817822817922827b23827c23827e24828025828125818326818426818627818827818928818b29818c29818e2a81902a81912b81932b80942c80962c80982d80992d809b2e7f9c2e7f9e2f7fa02f7fa1307ea3307ea5317ea6317da8327daa337dab337cad347cae347bb0357bb2357bb3367ab5367ab73779b83779ba3878bc3978bd3977bf3a77c03a76c23b75c43c75c53c74c73d73c83e73ca3e72cc3f71cd4071cf4070d0416fd2426fd3436ed5446dd6456cd8456cd9466bdb476adc4869de4968df4a68e04c67e24d66e34e65e44f64e55064e75263e85362e95462ea5661eb5760ec5860ed5a5fee5b5eef5d5ef05f5ef1605df2625df2645cf3655cf4675cf4695cf56b5cf66c5cf66e5cf7705cf7725cf8745cf8765cf9785df9795df97b5dfa7d5efa7f5efa815ffb835ffb8560fb8761fc8961fc8a62fc8c63fc8e64fc9065fd9266fd9467fd9668fd9869fd9a6afd9b6bfe9d6cfe9f6dfea16efea36ffea571fea772fea973feaa74feac76feae77feb078feb27afeb47bfeb67cfeb77efeb97ffebb81febd82febf84fec185fec287fec488fec68afec88cfeca8dfecc8ffecd90fecf92fed194fed395fed597fed799fed89afdda9cfddc9efddea0fde0a1fde2a3fde3a5fde5a7fde7a9fde9aafdebacfcecaefceeb0fcf0b2fcf2b4fcf4b6fcf6b8fcf7b9fcf9bbfcfbbdfcfdbf\"));\n\nexport var inferno = ramp(colors(\"00000401000501010601010802010a02020c02020e03021004031204031405041706041907051b08051d09061f0a07220b07240c08260d08290e092b10092d110a30120a32140b34150b37160b39180c3c190c3e1b0c411c0c431e0c451f0c48210c4a230c4c240c4f260c51280b53290b552b0b572d0b592f0a5b310a5c320a5e340a5f3609613809623909633b09643d09653e0966400a67420a68440a68450a69470b6a490b6a4a0c6b4c0c6b4d0d6c4f0d6c510e6c520e6d540f6d550f6d57106e59106e5a116e5c126e5d126e5f136e61136e62146e64156e65156e67166e69166e6a176e6c186e6d186e6f196e71196e721a6e741a6e751b6e771c6d781c6d7a1d6d7c1d6d7d1e6d7f1e6c801f6c82206c84206b85216b87216b88226a8a226a8c23698d23698f24699025689225689326679526679727669827669a28659b29649d29649f2a63a02a63a22b62a32c61a52c60a62d60a82e5fa92e5eab2f5ead305dae305cb0315bb1325ab3325ab43359b63458b73557b93556ba3655bc3754bd3853bf3952c03a51c13a50c33b4fc43c4ec63d4dc73e4cc83f4bca404acb4149cc4248ce4347cf4446d04545d24644d34743d44842d54a41d74b3fd84c3ed94d3dda4e3cdb503bdd513ade5238df5337e05536e15635e25734e35933e45a31e55c30e65d2fe75e2ee8602de9612bea632aeb6429eb6628ec6726ed6925ee6a24ef6c23ef6e21f06f20f1711ff1731df2741cf3761bf37819f47918f57b17f57d15f67e14f68013f78212f78410f8850ff8870ef8890cf98b0bf98c0af98e09fa9008fa9207fa9407fb9606fb9706fb9906fb9b06fb9d07fc9f07fca108fca309fca50afca60cfca80dfcaa0ffcac11fcae12fcb014fcb216fcb418fbb61afbb81dfbba1ffbbc21fbbe23fac026fac228fac42afac62df9c72ff9c932f9cb35f8cd37f8cf3af7d13df7d340f6d543f6d746f5d949f5db4cf4dd4ff4df53f4e156f3e35af3e55df2e661f2e865f2ea69f1ec6df1ed71f1ef75f1f179f2f27df2f482f3f586f3f68af4f88ef5f992f6fa96f8fb9af9fc9dfafda1fcffa4\"));\n\nexport var plasma = ramp(colors(\"0d088710078813078916078a19068c1b068d1d068e20068f2206902406912605912805922a05932c05942e05952f059631059733059735049837049938049a3a049a3c049b3e049c3f049c41049d43039e44039e46039f48039f4903a04b03a14c02a14e02a25002a25102a35302a35502a45601a45801a45901a55b01a55c01a65e01a66001a66100a76300a76400a76600a76700a86900a86a00a86c00a86e00a86f00a87100a87201a87401a87501a87701a87801a87a02a87b02a87d03a87e03a88004a88104a78305a78405a78606a68707a68808a68a09a58b0aa58d0ba58e0ca48f0da4910ea3920fa39410a29511a19613a19814a099159f9a169f9c179e9d189d9e199da01a9ca11b9ba21d9aa31e9aa51f99a62098a72197a82296aa2395ab2494ac2694ad2793ae2892b02991b12a90b22b8fb32c8eb42e8db52f8cb6308bb7318ab83289ba3388bb3488bc3587bd3786be3885bf3984c03a83c13b82c23c81c33d80c43e7fc5407ec6417dc7427cc8437bc9447aca457acb4679cc4778cc4977cd4a76ce4b75cf4c74d04d73d14e72d24f71d35171d45270d5536fd5546ed6556dd7566cd8576bd9586ada5a6ada5b69db5c68dc5d67dd5e66de5f65de6164df6263e06363e16462e26561e26660e3685fe4695ee56a5de56b5de66c5ce76e5be76f5ae87059e97158e97257ea7457eb7556eb7655ec7754ed7953ed7a52ee7b51ef7c51ef7e50f07f4ff0804ef1814df1834cf2844bf3854bf3874af48849f48948f58b47f58c46f68d45f68f44f79044f79143f79342f89441f89540f9973ff9983ef99a3efa9b3dfa9c3cfa9e3bfb9f3afba139fba238fca338fca537fca636fca835fca934fdab33fdac33fdae32fdaf31fdb130fdb22ffdb42ffdb52efeb72dfeb82cfeba2cfebb2bfebd2afebe2afec029fdc229fdc328fdc527fdc627fdc827fdca26fdcb26fccd25fcce25fcd025fcd225fbd324fbd524fbd724fad824fada24f9dc24f9dd25f8df25f8e125f7e225f7e425f6e626f6e826f5e926f5eb27f4ed27f3ee27f3f027f2f227f1f426f1f525f0f724f0f921\"));\n","export const UNIT_GLOBAL_NAMESPACE = 'app.units';\nexport const UNIT_LOCAL_NAMESPACE = 'local.units';\nexport const LAYER_LOCAL_NAMESPACE = 'local.layers';\nexport const LAYER_GLOBAL_NAMESPACE = 'app.layers';\nexport const GROUP_GLOBAL_NAMESPACE = 'app.group';\nexport const GROUP_LOCAL_NAMESPACE = 'local.group';\nexport const CANVAS_LOCAL_NAMESPACE = 'local.canvas';\nexport const CANVAS_GLOBAL_NAMESPACE = 'app.canvas';\n\n","const ReservedFields = {\n    ROW_ID: '__id__'\n};\n\nexport default ReservedFields;\n","const CommonProps = {\n    ACTION_INF: 'actionInf',\n    ON_LAYER_DRAW: 'onLayerDraw',\n    MATRIX_CREATED: 'matrixCreated'\n};\n\nexport default CommonProps;\n","export const COORD_TYPES = {\n    POLAR: 'polar',\n    CARTESIAN: 'cartesian'\n};\n","export var slice = Array.prototype.slice;\n","export default function(x) {\n  return x;\n}\n","import {slice} from \"./array\";\nimport identity from \"./identity\";\n\nvar top = 1,\n    right = 2,\n    bottom = 3,\n    left = 4,\n    epsilon = 1e-6;\n\nfunction translateX(x) {\n  return \"translate(\" + (x + 0.5) + \",0)\";\n}\n\nfunction translateY(y) {\n  return \"translate(0,\" + (y + 0.5) + \")\";\n}\n\nfunction number(scale) {\n  return function(d) {\n    return +scale(d);\n  };\n}\n\nfunction center(scale) {\n  var offset = Math.max(0, scale.bandwidth() - 1) / 2; // Adjust for 0.5px offset.\n  if (scale.round()) offset = Math.round(offset);\n  return function(d) {\n    return +scale(d) + offset;\n  };\n}\n\nfunction entering() {\n  return !this.__axis;\n}\n\nfunction axis(orient, scale) {\n  var tickArguments = [],\n      tickValues = null,\n      tickFormat = null,\n      tickTransform = null,\n      tickSizeInner = 6,\n      tickSizeOuter = 6,\n      tickPadding = 3,\n      k = orient === top || orient === left ? -1 : 1,\n      x = orient === left || orient === right ? \"x\" : \"y\",\n      transform = orient === top || orient === bottom ? translateX : translateY;\n\n  function axis(context) {\n    var values = tickValues == null ? (scale.ticks ? scale.ticks.apply(scale, tickArguments) : scale.domain()) : tickValues,\n        format = tickFormat == null ? (scale.tickFormat ? scale.tickFormat.apply(scale, tickArguments) : identity) : tickFormat,\n        spacing = Math.max(tickSizeInner, 0) + tickPadding,\n        range = scale.range(),\n        range0 = +range[0] + 0.5,\n        range1 = +range[range.length - 1] + 0.5,\n        position = (scale.bandwidth ? center : number)(scale.copy()),\n        selection = context.selection ? context.selection() : context,\n        path = selection.selectAll(\".domain\").data([null]),\n        tick = selection.selectAll(\".tick\").data(values, scale).order(),\n        tickExit = tick.exit(),\n        tickEnter = tick.enter().append(\"g\").attr(\"class\", \"tick\"),\n        line = tick.select(\"line\"),\n        text = tick.select(\"text\");\n\n    path = path.merge(path.enter().insert(\"path\", \".tick\")\n        .attr(\"class\", \"domain\")\n        .attr(\"stroke\", \"#000\"));\n\n    tick = tick.merge(tickEnter);\n\n    line = line.merge(tickEnter.append(\"line\")\n        .attr(\"stroke\", \"#000\")\n        .attr(x + \"2\", k * tickSizeInner));\n\n    text = text.merge(tickEnter.append(\"text\")\n        .attr(\"fill\", \"#000\")\n        .attr(x, k * spacing)\n        .attr(\"dy\", orient === top ? \"0em\" : orient === bottom ? \"0.71em\" : \"0.32em\"))\n        .style('transform', tickTransform);\n\n    if (context !== selection) {\n      path = path.transition(context);\n      tick = tick.transition(context);\n      line = line.transition(context);\n      text = text.transition(context);\n\n      tickExit = tickExit.transition(context)\n          .attr(\"opacity\", epsilon)\n          .attr(\"transform\", function(d) { return isFinite(d = position(d)) ? transform(d) : this.getAttribute(\"transform\"); });\n\n      tickEnter\n          .attr(\"opacity\", epsilon)\n          .attr(\"transform\", function(d) { var p = this.parentNode.__axis; return transform(p && isFinite(p = p(d)) ? p : position(d)); });\n    }\n\n    tickExit.remove();\n\n    path\n        .attr(\"d\", orient === left || orient == right\n            ? \"M\" + k * tickSizeOuter + \",\" + range0 + \"H0.5V\" + range1 + \"H\" + k * tickSizeOuter\n            : \"M\" + range0 + \",\" + k * tickSizeOuter + \"V0.5H\" + range1 + \"V\" + k * tickSizeOuter);\n\n    tick\n        .attr(\"opacity\", 1)\n        .attr(\"transform\", function(d) { return transform(position(d)); });\n\n    line\n        .attr(x + \"2\", k * tickSizeInner);\n\n    text\n        .attr(x, k * spacing)\n        .text(format);\n\n    selection.filter(entering)\n        .attr(\"fill\", \"none\")\n        .attr(\"font-size\", 10)\n        .attr(\"font-family\", \"sans-serif\")\n        .attr(\"text-anchor\", orient === right ? \"start\" : orient === left ? \"end\" : \"middle\");\n\n    selection\n        .each(function() { this.__axis = position; });\n  }\n\n  axis.scale = function(_) {\n    return arguments.length ? (scale = _, axis) : scale;\n  };\n\n  axis.tickTransform = function(_) {\n    return arguments.length ? (tickTransform = _, axis) : tickTransform;\n  };\n\n  axis.ticks = function() {\n    return tickArguments = slice.call(arguments), axis;\n  };\n\n  axis.tickArguments = function(_) {\n    return arguments.length ? (tickArguments = _ == null ? [] : slice.call(_), axis) : tickArguments.slice();\n  };\n\n  axis.tickValues = function(_) {\n    return arguments.length ? (tickValues = _ == null ? null : slice.call(_), axis) : tickValues && tickValues.slice();\n  };\n\n  axis.tickFormat = function(_) {\n    return arguments.length ? (tickFormat = _, axis) : tickFormat;\n  };\n\n  axis.tickSize = function(_) {\n    return arguments.length ? (tickSizeInner = tickSizeOuter = +_, axis) : tickSizeInner;\n  };\n\n  axis.tickSizeInner = function(_) {\n    return arguments.length ? (tickSizeInner = +_, axis) : tickSizeInner;\n  };\n\n  axis.tickSizeOuter = function(_) {\n    return arguments.length ? (tickSizeOuter = +_, axis) : tickSizeOuter;\n  };\n\n  axis.tickPadding = function(_) {\n    return arguments.length ? (tickPadding = +_, axis) : tickPadding;\n  };\n\n  return axis;\n}\n\nexport function axisTop(scale) {\n  return axis(top, scale);\n}\n\nexport function axisRight(scale) {\n  return axis(right, scale);\n}\n\nexport function axisBottom(scale) {\n  return axis(bottom, scale);\n}\n\nexport function axisLeft(scale) {\n  return axis(left, scale);\n}\n","var pi = Math.PI,\n    tau = 2 * pi,\n    epsilon = 1e-6,\n    tauEpsilon = tau - epsilon;\n\nfunction Path() {\n  this._x0 = this._y0 = // start of current subpath\n  this._x1 = this._y1 = null; // end of current subpath\n  this._ = \"\";\n}\n\nfunction path() {\n  return new Path;\n}\n\nPath.prototype = path.prototype = {\n  constructor: Path,\n  moveTo: function(x, y) {\n    this._ += \"M\" + (this._x0 = this._x1 = +x) + \",\" + (this._y0 = this._y1 = +y);\n  },\n  closePath: function() {\n    if (this._x1 !== null) {\n      this._x1 = this._x0, this._y1 = this._y0;\n      this._ += \"Z\";\n    }\n  },\n  lineTo: function(x, y) {\n    this._ += \"L\" + (this._x1 = +x) + \",\" + (this._y1 = +y);\n  },\n  quadraticCurveTo: function(x1, y1, x, y) {\n    this._ += \"Q\" + (+x1) + \",\" + (+y1) + \",\" + (this._x1 = +x) + \",\" + (this._y1 = +y);\n  },\n  bezierCurveTo: function(x1, y1, x2, y2, x, y) {\n    this._ += \"C\" + (+x1) + \",\" + (+y1) + \",\" + (+x2) + \",\" + (+y2) + \",\" + (this._x1 = +x) + \",\" + (this._y1 = +y);\n  },\n  arcTo: function(x1, y1, x2, y2, r) {\n    x1 = +x1, y1 = +y1, x2 = +x2, y2 = +y2, r = +r;\n    var x0 = this._x1,\n        y0 = this._y1,\n        x21 = x2 - x1,\n        y21 = y2 - y1,\n        x01 = x0 - x1,\n        y01 = y0 - y1,\n        l01_2 = x01 * x01 + y01 * y01;\n\n    // Is the radius negative? Error.\n    if (r < 0) throw new Error(\"negative radius: \" + r);\n\n    // Is this path empty? Move to (x1,y1).\n    if (this._x1 === null) {\n      this._ += \"M\" + (this._x1 = x1) + \",\" + (this._y1 = y1);\n    }\n\n    // Or, is (x1,y1) coincident with (x0,y0)? Do nothing.\n    else if (!(l01_2 > epsilon));\n\n    // Or, are (x0,y0), (x1,y1) and (x2,y2) collinear?\n    // Equivalently, is (x1,y1) coincident with (x2,y2)?\n    // Or, is the radius zero? Line to (x1,y1).\n    else if (!(Math.abs(y01 * x21 - y21 * x01) > epsilon) || !r) {\n      this._ += \"L\" + (this._x1 = x1) + \",\" + (this._y1 = y1);\n    }\n\n    // Otherwise, draw an arc!\n    else {\n      var x20 = x2 - x0,\n          y20 = y2 - y0,\n          l21_2 = x21 * x21 + y21 * y21,\n          l20_2 = x20 * x20 + y20 * y20,\n          l21 = Math.sqrt(l21_2),\n          l01 = Math.sqrt(l01_2),\n          l = r * Math.tan((pi - Math.acos((l21_2 + l01_2 - l20_2) / (2 * l21 * l01))) / 2),\n          t01 = l / l01,\n          t21 = l / l21;\n\n      // If the start tangent is not coincident with (x0,y0), line to.\n      if (Math.abs(t01 - 1) > epsilon) {\n        this._ += \"L\" + (x1 + t01 * x01) + \",\" + (y1 + t01 * y01);\n      }\n\n      this._ += \"A\" + r + \",\" + r + \",0,0,\" + (+(y01 * x20 > x01 * y20)) + \",\" + (this._x1 = x1 + t21 * x21) + \",\" + (this._y1 = y1 + t21 * y21);\n    }\n  },\n  arc: function(x, y, r, a0, a1, ccw) {\n    x = +x, y = +y, r = +r;\n    var dx = r * Math.cos(a0),\n        dy = r * Math.sin(a0),\n        x0 = x + dx,\n        y0 = y + dy,\n        cw = 1 ^ ccw,\n        da = ccw ? a0 - a1 : a1 - a0;\n\n    // Is the radius negative? Error.\n    if (r < 0) throw new Error(\"negative radius: \" + r);\n\n    // Is this path empty? Move to (x0,y0).\n    if (this._x1 === null) {\n      this._ += \"M\" + x0 + \",\" + y0;\n    }\n\n    // Or, is (x0,y0) not coincident with the previous point? Line to (x0,y0).\n    else if (Math.abs(this._x1 - x0) > epsilon || Math.abs(this._y1 - y0) > epsilon) {\n      this._ += \"L\" + x0 + \",\" + y0;\n    }\n\n    // Is this arc empty? We’re done.\n    if (!r) return;\n\n    // Does the angle go the wrong way? Flip the direction.\n    if (da < 0) da = da % tau + tau;\n\n    // Is this a complete circle? Draw two arcs to complete the circle.\n    if (da > tauEpsilon) {\n      this._ += \"A\" + r + \",\" + r + \",0,1,\" + cw + \",\" + (x - dx) + \",\" + (y - dy) + \"A\" + r + \",\" + r + \",0,1,\" + cw + \",\" + (this._x1 = x0) + \",\" + (this._y1 = y0);\n    }\n\n    // Is this arc non-empty? Draw an arc!\n    else if (da > epsilon) {\n      this._ += \"A\" + r + \",\" + r + \",0,\" + (+(da >= pi)) + \",\" + cw + \",\" + (this._x1 = x + r * Math.cos(a1)) + \",\" + (this._y1 = y + r * Math.sin(a1));\n    }\n  },\n  rect: function(x, y, w, h) {\n    this._ += \"M\" + (this._x0 = this._x1 = +x) + \",\" + (this._y0 = this._y1 = +y) + \"h\" + (+w) + \"v\" + (+h) + \"h\" + (-w) + \"Z\";\n  },\n  toString: function() {\n    return this._;\n  }\n};\n\nexport default path;\n","export default function(x) {\n  return function constant() {\n    return x;\n  };\n}\n","export var abs = Math.abs;\nexport var atan2 = Math.atan2;\nexport var cos = Math.cos;\nexport var max = Math.max;\nexport var min = Math.min;\nexport var sin = Math.sin;\nexport var sqrt = Math.sqrt;\n\nexport var epsilon = 1e-12;\nexport var pi = Math.PI;\nexport var halfPi = pi / 2;\nexport var tau = 2 * pi;\n\nexport function acos(x) {\n  return x > 1 ? 0 : x < -1 ? pi : Math.acos(x);\n}\n\nexport function asin(x) {\n  return x >= 1 ? halfPi : x <= -1 ? -halfPi : Math.asin(x);\n}\n","import {path} from \"d3-path\";\nimport constant from \"./constant\";\nimport {abs, acos, asin, atan2, cos, epsilon, halfPi, max, min, pi, sin, sqrt, tau} from \"./math\";\n\nfunction arcInnerRadius(d) {\n  return d.innerRadius;\n}\n\nfunction arcOuterRadius(d) {\n  return d.outerRadius;\n}\n\nfunction arcStartAngle(d) {\n  return d.startAngle;\n}\n\nfunction arcEndAngle(d) {\n  return d.endAngle;\n}\n\nfunction arcPadAngle(d) {\n  return d && d.padAngle; // Note: optional!\n}\n\nfunction intersect(x0, y0, x1, y1, x2, y2, x3, y3) {\n  var x10 = x1 - x0, y10 = y1 - y0,\n      x32 = x3 - x2, y32 = y3 - y2,\n      t = (x32 * (y0 - y2) - y32 * (x0 - x2)) / (y32 * x10 - x32 * y10);\n  return [x0 + t * x10, y0 + t * y10];\n}\n\n// Compute perpendicular offset line of length rc.\n// http://mathworld.wolfram.com/Circle-LineIntersection.html\nfunction cornerTangents(x0, y0, x1, y1, r1, rc, cw) {\n  var x01 = x0 - x1,\n      y01 = y0 - y1,\n      lo = (cw ? rc : -rc) / sqrt(x01 * x01 + y01 * y01),\n      ox = lo * y01,\n      oy = -lo * x01,\n      x11 = x0 + ox,\n      y11 = y0 + oy,\n      x10 = x1 + ox,\n      y10 = y1 + oy,\n      x00 = (x11 + x10) / 2,\n      y00 = (y11 + y10) / 2,\n      dx = x10 - x11,\n      dy = y10 - y11,\n      d2 = dx * dx + dy * dy,\n      r = r1 - rc,\n      D = x11 * y10 - x10 * y11,\n      d = (dy < 0 ? -1 : 1) * sqrt(max(0, r * r * d2 - D * D)),\n      cx0 = (D * dy - dx * d) / d2,\n      cy0 = (-D * dx - dy * d) / d2,\n      cx1 = (D * dy + dx * d) / d2,\n      cy1 = (-D * dx + dy * d) / d2,\n      dx0 = cx0 - x00,\n      dy0 = cy0 - y00,\n      dx1 = cx1 - x00,\n      dy1 = cy1 - y00;\n\n  // Pick the closer of the two intersection points.\n  // TODO Is there a faster way to determine which intersection to use?\n  if (dx0 * dx0 + dy0 * dy0 > dx1 * dx1 + dy1 * dy1) cx0 = cx1, cy0 = cy1;\n\n  return {\n    cx: cx0,\n    cy: cy0,\n    x01: -ox,\n    y01: -oy,\n    x11: cx0 * (r1 / r - 1),\n    y11: cy0 * (r1 / r - 1)\n  };\n}\n\nexport default function() {\n  var innerRadius = arcInnerRadius,\n      outerRadius = arcOuterRadius,\n      cornerRadius = constant(0),\n      padRadius = null,\n      startAngle = arcStartAngle,\n      endAngle = arcEndAngle,\n      padAngle = arcPadAngle,\n      context = null;\n\n  function arc() {\n    var buffer,\n        r,\n        r0 = +innerRadius.apply(this, arguments),\n        r1 = +outerRadius.apply(this, arguments),\n        a0 = startAngle.apply(this, arguments) - halfPi,\n        a1 = endAngle.apply(this, arguments) - halfPi,\n        da = abs(a1 - a0),\n        cw = a1 > a0;\n\n    if (!context) context = buffer = path();\n\n    // Ensure that the outer radius is always larger than the inner radius.\n    if (r1 < r0) r = r1, r1 = r0, r0 = r;\n\n    // Is it a point?\n    if (!(r1 > epsilon)) context.moveTo(0, 0);\n\n    // Or is it a circle or annulus?\n    else if (da > tau - epsilon) {\n      context.moveTo(r1 * cos(a0), r1 * sin(a0));\n      context.arc(0, 0, r1, a0, a1, !cw);\n      if (r0 > epsilon) {\n        context.moveTo(r0 * cos(a1), r0 * sin(a1));\n        context.arc(0, 0, r0, a1, a0, cw);\n      }\n    }\n\n    // Or is it a circular or annular sector?\n    else {\n      var a01 = a0,\n          a11 = a1,\n          a00 = a0,\n          a10 = a1,\n          da0 = da,\n          da1 = da,\n          ap = padAngle.apply(this, arguments) / 2,\n          rp = (ap > epsilon) && (padRadius ? +padRadius.apply(this, arguments) : sqrt(r0 * r0 + r1 * r1)),\n          rc = min(abs(r1 - r0) / 2, +cornerRadius.apply(this, arguments)),\n          rc0 = rc,\n          rc1 = rc,\n          t0,\n          t1;\n\n      // Apply padding? Note that since r1 ≥ r0, da1 ≥ da0.\n      if (rp > epsilon) {\n        var p0 = asin(rp / r0 * sin(ap)),\n            p1 = asin(rp / r1 * sin(ap));\n        if ((da0 -= p0 * 2) > epsilon) p0 *= (cw ? 1 : -1), a00 += p0, a10 -= p0;\n        else da0 = 0, a00 = a10 = (a0 + a1) / 2;\n        if ((da1 -= p1 * 2) > epsilon) p1 *= (cw ? 1 : -1), a01 += p1, a11 -= p1;\n        else da1 = 0, a01 = a11 = (a0 + a1) / 2;\n      }\n\n      var x01 = r1 * cos(a01),\n          y01 = r1 * sin(a01),\n          x10 = r0 * cos(a10),\n          y10 = r0 * sin(a10);\n\n      // Apply rounded corners?\n      if (rc > epsilon) {\n        var x11 = r1 * cos(a11),\n            y11 = r1 * sin(a11),\n            x00 = r0 * cos(a00),\n            y00 = r0 * sin(a00);\n\n        // Restrict the corner radius according to the sector angle.\n        if (da < pi) {\n          var oc = da0 > epsilon ? intersect(x01, y01, x00, y00, x11, y11, x10, y10) : [x10, y10],\n              ax = x01 - oc[0],\n              ay = y01 - oc[1],\n              bx = x11 - oc[0],\n              by = y11 - oc[1],\n              kc = 1 / sin(acos((ax * bx + ay * by) / (sqrt(ax * ax + ay * ay) * sqrt(bx * bx + by * by))) / 2),\n              lc = sqrt(oc[0] * oc[0] + oc[1] * oc[1]);\n          rc0 = min(rc, (r0 - lc) / (kc - 1));\n          rc1 = min(rc, (r1 - lc) / (kc + 1));\n        }\n      }\n\n      // Is the sector collapsed to a line?\n      if (!(da1 > epsilon)) context.moveTo(x01, y01);\n\n      // Does the sector’s outer ring have rounded corners?\n      else if (rc1 > epsilon) {\n        t0 = cornerTangents(x00, y00, x01, y01, r1, rc1, cw);\n        t1 = cornerTangents(x11, y11, x10, y10, r1, rc1, cw);\n\n        context.moveTo(t0.cx + t0.x01, t0.cy + t0.y01);\n\n        // Have the corners merged?\n        if (rc1 < rc) context.arc(t0.cx, t0.cy, rc1, atan2(t0.y01, t0.x01), atan2(t1.y01, t1.x01), !cw);\n\n        // Otherwise, draw the two corners and the ring.\n        else {\n          context.arc(t0.cx, t0.cy, rc1, atan2(t0.y01, t0.x01), atan2(t0.y11, t0.x11), !cw);\n          context.arc(0, 0, r1, atan2(t0.cy + t0.y11, t0.cx + t0.x11), atan2(t1.cy + t1.y11, t1.cx + t1.x11), !cw);\n          context.arc(t1.cx, t1.cy, rc1, atan2(t1.y11, t1.x11), atan2(t1.y01, t1.x01), !cw);\n        }\n      }\n\n      // Or is the outer ring just a circular arc?\n      else context.moveTo(x01, y01), context.arc(0, 0, r1, a01, a11, !cw);\n\n      // Is there no inner ring, and it’s a circular sector?\n      // Or perhaps it’s an annular sector collapsed due to padding?\n      if (!(r0 > epsilon) || !(da0 > epsilon)) context.lineTo(x10, y10);\n\n      // Does the sector’s inner ring (or point) have rounded corners?\n      else if (rc0 > epsilon) {\n        t0 = cornerTangents(x10, y10, x11, y11, r0, -rc0, cw);\n        t1 = cornerTangents(x01, y01, x00, y00, r0, -rc0, cw);\n\n        context.lineTo(t0.cx + t0.x01, t0.cy + t0.y01);\n\n        // Have the corners merged?\n        if (rc0 < rc) context.arc(t0.cx, t0.cy, rc0, atan2(t0.y01, t0.x01), atan2(t1.y01, t1.x01), !cw);\n\n        // Otherwise, draw the two corners and the ring.\n        else {\n          context.arc(t0.cx, t0.cy, rc0, atan2(t0.y01, t0.x01), atan2(t0.y11, t0.x11), !cw);\n          context.arc(0, 0, r0, atan2(t0.cy + t0.y11, t0.cx + t0.x11), atan2(t1.cy + t1.y11, t1.cx + t1.x11), cw);\n          context.arc(t1.cx, t1.cy, rc0, atan2(t1.y11, t1.x11), atan2(t1.y01, t1.x01), !cw);\n        }\n      }\n\n      // Or is the inner ring just a circular arc?\n      else context.arc(0, 0, r0, a10, a00, cw);\n    }\n\n    context.closePath();\n\n    if (buffer) return context = null, buffer + \"\" || null;\n  }\n\n  arc.centroid = function() {\n    var r = (+innerRadius.apply(this, arguments) + +outerRadius.apply(this, arguments)) / 2,\n        a = (+startAngle.apply(this, arguments) + +endAngle.apply(this, arguments)) / 2 - pi / 2;\n    return [cos(a) * r, sin(a) * r];\n  };\n\n  arc.innerRadius = function(_) {\n    return arguments.length ? (innerRadius = typeof _ === \"function\" ? _ : constant(+_), arc) : innerRadius;\n  };\n\n  arc.outerRadius = function(_) {\n    return arguments.length ? (outerRadius = typeof _ === \"function\" ? _ : constant(+_), arc) : outerRadius;\n  };\n\n  arc.cornerRadius = function(_) {\n    return arguments.length ? (cornerRadius = typeof _ === \"function\" ? _ : constant(+_), arc) : cornerRadius;\n  };\n\n  arc.padRadius = function(_) {\n    return arguments.length ? (padRadius = _ == null ? null : typeof _ === \"function\" ? _ : constant(+_), arc) : padRadius;\n  };\n\n  arc.startAngle = function(_) {\n    return arguments.length ? (startAngle = typeof _ === \"function\" ? _ : constant(+_), arc) : startAngle;\n  };\n\n  arc.endAngle = function(_) {\n    return arguments.length ? (endAngle = typeof _ === \"function\" ? _ : constant(+_), arc) : endAngle;\n  };\n\n  arc.padAngle = function(_) {\n    return arguments.length ? (padAngle = typeof _ === \"function\" ? _ : constant(+_), arc) : padAngle;\n  };\n\n  arc.context = function(_) {\n    return arguments.length ? ((context = _ == null ? null : _), arc) : context;\n  };\n\n  return arc;\n}\n","function Linear(context) {\n  this._context = context;\n}\n\nLinear.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n      case 1: this._point = 2; // proceed\n      default: this._context.lineTo(x, y); break;\n    }\n  }\n};\n\nexport default function(context) {\n  return new Linear(context);\n}\n","export function x(p) {\n  return p[0];\n}\n\nexport function y(p) {\n  return p[1];\n}\n","import {path} from \"d3-path\";\nimport constant from \"./constant\";\nimport curveLinear from \"./curve/linear\";\nimport {x as pointX, y as pointY} from \"./point\";\n\nexport default function() {\n  var x = pointX,\n      y = pointY,\n      defined = constant(true),\n      context = null,\n      curve = curveLinear,\n      output = null;\n\n  function line(data) {\n    var i,\n        n = data.length,\n        d,\n        defined0 = false,\n        buffer;\n\n    if (context == null) output = curve(buffer = path());\n\n    for (i = 0; i <= n; ++i) {\n      if (!(i < n && defined(d = data[i], i, data)) === defined0) {\n        if (defined0 = !defined0) output.lineStart();\n        else output.lineEnd();\n      }\n      if (defined0) output.point(+x(d, i, data), +y(d, i, data));\n    }\n\n    if (buffer) return output = null, buffer + \"\" || null;\n  }\n\n  line.x = function(_) {\n    return arguments.length ? (x = typeof _ === \"function\" ? _ : constant(+_), line) : x;\n  };\n\n  line.y = function(_) {\n    return arguments.length ? (y = typeof _ === \"function\" ? _ : constant(+_), line) : y;\n  };\n\n  line.defined = function(_) {\n    return arguments.length ? (defined = typeof _ === \"function\" ? _ : constant(!!_), line) : defined;\n  };\n\n  line.curve = function(_) {\n    return arguments.length ? (curve = _, context != null && (output = curve(context)), line) : curve;\n  };\n\n  line.context = function(_) {\n    return arguments.length ? (_ == null ? context = output = null : output = curve(context = _), line) : context;\n  };\n\n  return line;\n}\n","import {path} from \"d3-path\";\nimport constant from \"./constant\";\nimport curveLinear from \"./curve/linear\";\nimport line from \"./line\";\nimport {x as pointX, y as pointY} from \"./point\";\n\nexport default function() {\n  var x0 = pointX,\n      x1 = null,\n      y0 = constant(0),\n      y1 = pointY,\n      defined = constant(true),\n      context = null,\n      curve = curveLinear,\n      output = null;\n\n  function area(data) {\n    var i,\n        j,\n        k,\n        n = data.length,\n        d,\n        defined0 = false,\n        buffer,\n        x0z = new Array(n),\n        y0z = new Array(n);\n\n    if (context == null) output = curve(buffer = path());\n\n    for (i = 0; i <= n; ++i) {\n      if (!(i < n && defined(d = data[i], i, data)) === defined0) {\n        if (defined0 = !defined0) {\n          j = i;\n          output.areaStart();\n          output.lineStart();\n        } else {\n          output.lineEnd();\n          output.lineStart();\n          for (k = i - 1; k >= j; --k) {\n            output.point(x0z[k], y0z[k]);\n          }\n          output.lineEnd();\n          output.areaEnd();\n        }\n      }\n      if (defined0) {\n        x0z[i] = +x0(d, i, data), y0z[i] = +y0(d, i, data);\n        output.point(x1 ? +x1(d, i, data) : x0z[i], y1 ? +y1(d, i, data) : y0z[i]);\n      }\n    }\n\n    if (buffer) return output = null, buffer + \"\" || null;\n  }\n\n  function arealine() {\n    return line().defined(defined).curve(curve).context(context);\n  }\n\n  area.x = function(_) {\n    return arguments.length ? (x0 = typeof _ === \"function\" ? _ : constant(+_), x1 = null, area) : x0;\n  };\n\n  area.x0 = function(_) {\n    return arguments.length ? (x0 = typeof _ === \"function\" ? _ : constant(+_), area) : x0;\n  };\n\n  area.x1 = function(_) {\n    return arguments.length ? (x1 = _ == null ? null : typeof _ === \"function\" ? _ : constant(+_), area) : x1;\n  };\n\n  area.y = function(_) {\n    return arguments.length ? (y0 = typeof _ === \"function\" ? _ : constant(+_), y1 = null, area) : y0;\n  };\n\n  area.y0 = function(_) {\n    return arguments.length ? (y0 = typeof _ === \"function\" ? _ : constant(+_), area) : y0;\n  };\n\n  area.y1 = function(_) {\n    return arguments.length ? (y1 = _ == null ? null : typeof _ === \"function\" ? _ : constant(+_), area) : y1;\n  };\n\n  area.lineX0 =\n  area.lineY0 = function() {\n    return arealine().x(x0).y(y0);\n  };\n\n  area.lineY1 = function() {\n    return arealine().x(x0).y(y1);\n  };\n\n  area.lineX1 = function() {\n    return arealine().x(x1).y(y0);\n  };\n\n  area.defined = function(_) {\n    return arguments.length ? (defined = typeof _ === \"function\" ? _ : constant(!!_), area) : defined;\n  };\n\n  area.curve = function(_) {\n    return arguments.length ? (curve = _, context != null && (output = curve(context)), area) : curve;\n  };\n\n  area.context = function(_) {\n    return arguments.length ? (_ == null ? context = output = null : output = curve(context = _), area) : context;\n  };\n\n  return area;\n}\n","export default function(a, b) {\n  return b < a ? -1 : b > a ? 1 : b >= a ? 0 : NaN;\n}\n","export default function(d) {\n  return d;\n}\n","import curveLinear from \"./linear\";\n\nexport var curveRadialLinear = curveRadial(curveLinear);\n\nfunction Radial(curve) {\n  this._curve = curve;\n}\n\nRadial.prototype = {\n  areaStart: function() {\n    this._curve.areaStart();\n  },\n  areaEnd: function() {\n    this._curve.areaEnd();\n  },\n  lineStart: function() {\n    this._curve.lineStart();\n  },\n  lineEnd: function() {\n    this._curve.lineEnd();\n  },\n  point: function(a, r) {\n    this._curve.point(r * Math.sin(a), r * -Math.cos(a));\n  }\n};\n\nexport default function curveRadial(curve) {\n\n  function radial(context) {\n    return new Radial(curve(context));\n  }\n\n  radial._curve = curve;\n\n  return radial;\n}\n","import curveRadial, {curveRadialLinear} from \"./curve/radial\";\nimport line from \"./line\";\n\nexport function lineRadial(l) {\n  var c = l.curve;\n\n  l.angle = l.x, delete l.x;\n  l.radius = l.y, delete l.y;\n\n  l.curve = function(_) {\n    return arguments.length ? c(curveRadial(_)) : c()._curve;\n  };\n\n  return l;\n}\n\nexport default function() {\n  return lineRadial(line().curve(curveRadialLinear));\n}\n","export var slice = Array.prototype.slice;\n","import {pi, tau} from \"../math\";\n\nexport default {\n  draw: function(context, size) {\n    var r = Math.sqrt(size / pi);\n    context.moveTo(r, 0);\n    context.arc(0, 0, r, 0, tau);\n  }\n};\n","export default {\n  draw: function(context, size) {\n    var r = Math.sqrt(size / 5) / 2;\n    context.moveTo(-3 * r, -r);\n    context.lineTo(-r, -r);\n    context.lineTo(-r, -3 * r);\n    context.lineTo(r, -3 * r);\n    context.lineTo(r, -r);\n    context.lineTo(3 * r, -r);\n    context.lineTo(3 * r, r);\n    context.lineTo(r, r);\n    context.lineTo(r, 3 * r);\n    context.lineTo(-r, 3 * r);\n    context.lineTo(-r, r);\n    context.lineTo(-3 * r, r);\n    context.closePath();\n  }\n};\n","var tan30 = Math.sqrt(1 / 3),\n    tan30_2 = tan30 * 2;\n\nexport default {\n  draw: function(context, size) {\n    var y = Math.sqrt(size / tan30_2),\n        x = y * tan30;\n    context.moveTo(0, -y);\n    context.lineTo(x, 0);\n    context.lineTo(0, y);\n    context.lineTo(-x, 0);\n    context.closePath();\n  }\n};\n","import {pi, tau} from \"../math\";\n\nvar ka = 0.89081309152928522810,\n    kr = Math.sin(pi / 10) / Math.sin(7 * pi / 10),\n    kx = Math.sin(tau / 10) * kr,\n    ky = -Math.cos(tau / 10) * kr;\n\nexport default {\n  draw: function(context, size) {\n    var r = Math.sqrt(size * ka),\n        x = kx * r,\n        y = ky * r;\n    context.moveTo(0, -r);\n    context.lineTo(x, y);\n    for (var i = 1; i < 5; ++i) {\n      var a = tau * i / 5,\n          c = Math.cos(a),\n          s = Math.sin(a);\n      context.lineTo(s * r, -c * r);\n      context.lineTo(c * x - s * y, s * x + c * y);\n    }\n    context.closePath();\n  }\n};\n","export default {\n  draw: function(context, size) {\n    var w = Math.sqrt(size),\n        x = -w / 2;\n    context.rect(x, x, w, w);\n  }\n};\n","var sqrt3 = Math.sqrt(3);\n\nexport default {\n  draw: function(context, size) {\n    var y = -Math.sqrt(size / (sqrt3 * 3));\n    context.moveTo(0, y * 2);\n    context.lineTo(-sqrt3 * y, -y);\n    context.lineTo(sqrt3 * y, -y);\n    context.closePath();\n  }\n};\n","var c = -0.5,\n    s = Math.sqrt(3) / 2,\n    k = 1 / Math.sqrt(12),\n    a = (k / 2 + 1) * 3;\n\nexport default {\n  draw: function(context, size) {\n    var r = Math.sqrt(size / a),\n        x0 = r / 2,\n        y0 = r * k,\n        x1 = x0,\n        y1 = r * k + r,\n        x2 = -x1,\n        y2 = y1;\n    context.moveTo(x0, y0);\n    context.lineTo(x1, y1);\n    context.lineTo(x2, y2);\n    context.lineTo(c * x0 - s * y0, s * x0 + c * y0);\n    context.lineTo(c * x1 - s * y1, s * x1 + c * y1);\n    context.lineTo(c * x2 - s * y2, s * x2 + c * y2);\n    context.lineTo(c * x0 + s * y0, c * y0 - s * x0);\n    context.lineTo(c * x1 + s * y1, c * y1 - s * x1);\n    context.lineTo(c * x2 + s * y2, c * y2 - s * x2);\n    context.closePath();\n  }\n};\n","export default function() {}\n","export function point(that, x, y) {\n  that._context.bezierCurveTo(\n    (2 * that._x0 + that._x1) / 3,\n    (2 * that._y0 + that._y1) / 3,\n    (that._x0 + 2 * that._x1) / 3,\n    (that._y0 + 2 * that._y1) / 3,\n    (that._x0 + 4 * that._x1 + x) / 6,\n    (that._y0 + 4 * that._y1 + y) / 6\n  );\n}\n\nexport function Basis(context) {\n  this._context = context;\n}\n\nBasis.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 =\n    this._y0 = this._y1 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 3: point(this, this._x1, this._y1); // proceed\n      case 2: this._context.lineTo(this._x1, this._y1); break;\n    }\n    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n      case 1: this._point = 2; break;\n      case 2: this._point = 3; this._context.lineTo((5 * this._x0 + this._x1) / 6, (5 * this._y0 + this._y1) / 6); // proceed\n      default: point(this, x, y); break;\n    }\n    this._x0 = this._x1, this._x1 = x;\n    this._y0 = this._y1, this._y1 = y;\n  }\n};\n\nexport default function(context) {\n  return new Basis(context);\n}\n","import noop from \"../noop\";\nimport {point} from \"./basis\";\n\nfunction BasisClosed(context) {\n  this._context = context;\n}\n\nBasisClosed.prototype = {\n  areaStart: noop,\n  areaEnd: noop,\n  lineStart: function() {\n    this._x0 = this._x1 = this._x2 = this._x3 = this._x4 =\n    this._y0 = this._y1 = this._y2 = this._y3 = this._y4 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 1: {\n        this._context.moveTo(this._x2, this._y2);\n        this._context.closePath();\n        break;\n      }\n      case 2: {\n        this._context.moveTo((this._x2 + 2 * this._x3) / 3, (this._y2 + 2 * this._y3) / 3);\n        this._context.lineTo((this._x3 + 2 * this._x2) / 3, (this._y3 + 2 * this._y2) / 3);\n        this._context.closePath();\n        break;\n      }\n      case 3: {\n        this.point(this._x2, this._y2);\n        this.point(this._x3, this._y3);\n        this.point(this._x4, this._y4);\n        break;\n      }\n    }\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; this._x2 = x, this._y2 = y; break;\n      case 1: this._point = 2; this._x3 = x, this._y3 = y; break;\n      case 2: this._point = 3; this._x4 = x, this._y4 = y; this._context.moveTo((this._x0 + 4 * this._x1 + x) / 6, (this._y0 + 4 * this._y1 + y) / 6); break;\n      default: point(this, x, y); break;\n    }\n    this._x0 = this._x1, this._x1 = x;\n    this._y0 = this._y1, this._y1 = y;\n  }\n};\n\nexport default function(context) {\n  return new BasisClosed(context);\n}\n","import {point} from \"./basis\";\n\nfunction BasisOpen(context) {\n  this._context = context;\n}\n\nBasisOpen.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 =\n    this._y0 = this._y1 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (this._line || (this._line !== 0 && this._point === 3)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; break;\n      case 1: this._point = 2; break;\n      case 2: this._point = 3; var x0 = (this._x0 + 4 * this._x1 + x) / 6, y0 = (this._y0 + 4 * this._y1 + y) / 6; this._line ? this._context.lineTo(x0, y0) : this._context.moveTo(x0, y0); break;\n      case 3: this._point = 4; // proceed\n      default: point(this, x, y); break;\n    }\n    this._x0 = this._x1, this._x1 = x;\n    this._y0 = this._y1, this._y1 = y;\n  }\n};\n\nexport default function(context) {\n  return new BasisOpen(context);\n}\n","import {Basis} from \"./basis\";\n\nfunction Bundle(context, beta) {\n  this._basis = new Basis(context);\n  this._beta = beta;\n}\n\nBundle.prototype = {\n  lineStart: function() {\n    this._x = [];\n    this._y = [];\n    this._basis.lineStart();\n  },\n  lineEnd: function() {\n    var x = this._x,\n        y = this._y,\n        j = x.length - 1;\n\n    if (j > 0) {\n      var x0 = x[0],\n          y0 = y[0],\n          dx = x[j] - x0,\n          dy = y[j] - y0,\n          i = -1,\n          t;\n\n      while (++i <= j) {\n        t = i / j;\n        this._basis.point(\n          this._beta * x[i] + (1 - this._beta) * (x0 + t * dx),\n          this._beta * y[i] + (1 - this._beta) * (y0 + t * dy)\n        );\n      }\n    }\n\n    this._x = this._y = null;\n    this._basis.lineEnd();\n  },\n  point: function(x, y) {\n    this._x.push(+x);\n    this._y.push(+y);\n  }\n};\n\nexport default (function custom(beta) {\n\n  function bundle(context) {\n    return beta === 1 ? new Basis(context) : new Bundle(context, beta);\n  }\n\n  bundle.beta = function(beta) {\n    return custom(+beta);\n  };\n\n  return bundle;\n})(0.85);\n","export function point(that, x, y) {\n  that._context.bezierCurveTo(\n    that._x1 + that._k * (that._x2 - that._x0),\n    that._y1 + that._k * (that._y2 - that._y0),\n    that._x2 + that._k * (that._x1 - x),\n    that._y2 + that._k * (that._y1 - y),\n    that._x2,\n    that._y2\n  );\n}\n\nexport function Cardinal(context, tension) {\n  this._context = context;\n  this._k = (1 - tension) / 6;\n}\n\nCardinal.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 = this._x2 =\n    this._y0 = this._y1 = this._y2 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 2: this._context.lineTo(this._x2, this._y2); break;\n      case 3: point(this, this._x1, this._y1); break;\n    }\n    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n      case 1: this._point = 2; this._x1 = x, this._y1 = y; break;\n      case 2: this._point = 3; // proceed\n      default: point(this, x, y); break;\n    }\n    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n  }\n};\n\nexport default (function custom(tension) {\n\n  function cardinal(context) {\n    return new Cardinal(context, tension);\n  }\n\n  cardinal.tension = function(tension) {\n    return custom(+tension);\n  };\n\n  return cardinal;\n})(0);\n","import noop from \"../noop\";\nimport {point} from \"./cardinal\";\n\nexport function CardinalClosed(context, tension) {\n  this._context = context;\n  this._k = (1 - tension) / 6;\n}\n\nCardinalClosed.prototype = {\n  areaStart: noop,\n  areaEnd: noop,\n  lineStart: function() {\n    this._x0 = this._x1 = this._x2 = this._x3 = this._x4 = this._x5 =\n    this._y0 = this._y1 = this._y2 = this._y3 = this._y4 = this._y5 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 1: {\n        this._context.moveTo(this._x3, this._y3);\n        this._context.closePath();\n        break;\n      }\n      case 2: {\n        this._context.lineTo(this._x3, this._y3);\n        this._context.closePath();\n        break;\n      }\n      case 3: {\n        this.point(this._x3, this._y3);\n        this.point(this._x4, this._y4);\n        this.point(this._x5, this._y5);\n        break;\n      }\n    }\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; this._x3 = x, this._y3 = y; break;\n      case 1: this._point = 2; this._context.moveTo(this._x4 = x, this._y4 = y); break;\n      case 2: this._point = 3; this._x5 = x, this._y5 = y; break;\n      default: point(this, x, y); break;\n    }\n    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n  }\n};\n\nexport default (function custom(tension) {\n\n  function cardinal(context) {\n    return new CardinalClosed(context, tension);\n  }\n\n  cardinal.tension = function(tension) {\n    return custom(+tension);\n  };\n\n  return cardinal;\n})(0);\n","import {point} from \"./cardinal\";\n\nexport function CardinalOpen(context, tension) {\n  this._context = context;\n  this._k = (1 - tension) / 6;\n}\n\nCardinalOpen.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 = this._x2 =\n    this._y0 = this._y1 = this._y2 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (this._line || (this._line !== 0 && this._point === 3)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; break;\n      case 1: this._point = 2; break;\n      case 2: this._point = 3; this._line ? this._context.lineTo(this._x2, this._y2) : this._context.moveTo(this._x2, this._y2); break;\n      case 3: this._point = 4; // proceed\n      default: point(this, x, y); break;\n    }\n    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n  }\n};\n\nexport default (function custom(tension) {\n\n  function cardinal(context) {\n    return new CardinalOpen(context, tension);\n  }\n\n  cardinal.tension = function(tension) {\n    return custom(+tension);\n  };\n\n  return cardinal;\n})(0);\n","import {epsilon} from \"../math\";\nimport {Cardinal} from \"./cardinal\";\n\nexport function point(that, x, y) {\n  var x1 = that._x1,\n      y1 = that._y1,\n      x2 = that._x2,\n      y2 = that._y2;\n\n  if (that._l01_a > epsilon) {\n    var a = 2 * that._l01_2a + 3 * that._l01_a * that._l12_a + that._l12_2a,\n        n = 3 * that._l01_a * (that._l01_a + that._l12_a);\n    x1 = (x1 * a - that._x0 * that._l12_2a + that._x2 * that._l01_2a) / n;\n    y1 = (y1 * a - that._y0 * that._l12_2a + that._y2 * that._l01_2a) / n;\n  }\n\n  if (that._l23_a > epsilon) {\n    var b = 2 * that._l23_2a + 3 * that._l23_a * that._l12_a + that._l12_2a,\n        m = 3 * that._l23_a * (that._l23_a + that._l12_a);\n    x2 = (x2 * b + that._x1 * that._l23_2a - x * that._l12_2a) / m;\n    y2 = (y2 * b + that._y1 * that._l23_2a - y * that._l12_2a) / m;\n  }\n\n  that._context.bezierCurveTo(x1, y1, x2, y2, that._x2, that._y2);\n}\n\nfunction CatmullRom(context, alpha) {\n  this._context = context;\n  this._alpha = alpha;\n}\n\nCatmullRom.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 = this._x2 =\n    this._y0 = this._y1 = this._y2 = NaN;\n    this._l01_a = this._l12_a = this._l23_a =\n    this._l01_2a = this._l12_2a = this._l23_2a =\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 2: this._context.lineTo(this._x2, this._y2); break;\n      case 3: this.point(this._x2, this._y2); break;\n    }\n    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n\n    if (this._point) {\n      var x23 = this._x2 - x,\n          y23 = this._y2 - y;\n      this._l23_a = Math.sqrt(this._l23_2a = Math.pow(x23 * x23 + y23 * y23, this._alpha));\n    }\n\n    switch (this._point) {\n      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n      case 1: this._point = 2; break;\n      case 2: this._point = 3; // proceed\n      default: point(this, x, y); break;\n    }\n\n    this._l01_a = this._l12_a, this._l12_a = this._l23_a;\n    this._l01_2a = this._l12_2a, this._l12_2a = this._l23_2a;\n    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n  }\n};\n\nexport default (function custom(alpha) {\n\n  function catmullRom(context) {\n    return alpha ? new CatmullRom(context, alpha) : new Cardinal(context, 0);\n  }\n\n  catmullRom.alpha = function(alpha) {\n    return custom(+alpha);\n  };\n\n  return catmullRom;\n})(0.5);\n","import {CardinalClosed} from \"./cardinalClosed\";\nimport noop from \"../noop\";\nimport {point} from \"./catmullRom\";\n\nfunction CatmullRomClosed(context, alpha) {\n  this._context = context;\n  this._alpha = alpha;\n}\n\nCatmullRomClosed.prototype = {\n  areaStart: noop,\n  areaEnd: noop,\n  lineStart: function() {\n    this._x0 = this._x1 = this._x2 = this._x3 = this._x4 = this._x5 =\n    this._y0 = this._y1 = this._y2 = this._y3 = this._y4 = this._y5 = NaN;\n    this._l01_a = this._l12_a = this._l23_a =\n    this._l01_2a = this._l12_2a = this._l23_2a =\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 1: {\n        this._context.moveTo(this._x3, this._y3);\n        this._context.closePath();\n        break;\n      }\n      case 2: {\n        this._context.lineTo(this._x3, this._y3);\n        this._context.closePath();\n        break;\n      }\n      case 3: {\n        this.point(this._x3, this._y3);\n        this.point(this._x4, this._y4);\n        this.point(this._x5, this._y5);\n        break;\n      }\n    }\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n\n    if (this._point) {\n      var x23 = this._x2 - x,\n          y23 = this._y2 - y;\n      this._l23_a = Math.sqrt(this._l23_2a = Math.pow(x23 * x23 + y23 * y23, this._alpha));\n    }\n\n    switch (this._point) {\n      case 0: this._point = 1; this._x3 = x, this._y3 = y; break;\n      case 1: this._point = 2; this._context.moveTo(this._x4 = x, this._y4 = y); break;\n      case 2: this._point = 3; this._x5 = x, this._y5 = y; break;\n      default: point(this, x, y); break;\n    }\n\n    this._l01_a = this._l12_a, this._l12_a = this._l23_a;\n    this._l01_2a = this._l12_2a, this._l12_2a = this._l23_2a;\n    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n  }\n};\n\nexport default (function custom(alpha) {\n\n  function catmullRom(context) {\n    return alpha ? new CatmullRomClosed(context, alpha) : new CardinalClosed(context, 0);\n  }\n\n  catmullRom.alpha = function(alpha) {\n    return custom(+alpha);\n  };\n\n  return catmullRom;\n})(0.5);\n","import {CardinalOpen} from \"./cardinalOpen\";\nimport {point} from \"./catmullRom\";\n\nfunction CatmullRomOpen(context, alpha) {\n  this._context = context;\n  this._alpha = alpha;\n}\n\nCatmullRomOpen.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 = this._x2 =\n    this._y0 = this._y1 = this._y2 = NaN;\n    this._l01_a = this._l12_a = this._l23_a =\n    this._l01_2a = this._l12_2a = this._l23_2a =\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (this._line || (this._line !== 0 && this._point === 3)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n\n    if (this._point) {\n      var x23 = this._x2 - x,\n          y23 = this._y2 - y;\n      this._l23_a = Math.sqrt(this._l23_2a = Math.pow(x23 * x23 + y23 * y23, this._alpha));\n    }\n\n    switch (this._point) {\n      case 0: this._point = 1; break;\n      case 1: this._point = 2; break;\n      case 2: this._point = 3; this._line ? this._context.lineTo(this._x2, this._y2) : this._context.moveTo(this._x2, this._y2); break;\n      case 3: this._point = 4; // proceed\n      default: point(this, x, y); break;\n    }\n\n    this._l01_a = this._l12_a, this._l12_a = this._l23_a;\n    this._l01_2a = this._l12_2a, this._l12_2a = this._l23_2a;\n    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n  }\n};\n\nexport default (function custom(alpha) {\n\n  function catmullRom(context) {\n    return alpha ? new CatmullRomOpen(context, alpha) : new CardinalOpen(context, 0);\n  }\n\n  catmullRom.alpha = function(alpha) {\n    return custom(+alpha);\n  };\n\n  return catmullRom;\n})(0.5);\n","import noop from \"../noop\";\n\nfunction LinearClosed(context) {\n  this._context = context;\n}\n\nLinearClosed.prototype = {\n  areaStart: noop,\n  areaEnd: noop,\n  lineStart: function() {\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (this._point) this._context.closePath();\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    if (this._point) this._context.lineTo(x, y);\n    else this._point = 1, this._context.moveTo(x, y);\n  }\n};\n\nexport default function(context) {\n  return new LinearClosed(context);\n}\n","function sign(x) {\n  return x < 0 ? -1 : 1;\n}\n\n// Calculate the slopes of the tangents (Hermite-type interpolation) based on\n// the following paper: Steffen, M. 1990. A Simple Method for Monotonic\n// Interpolation in One Dimension. Astronomy and Astrophysics, Vol. 239, NO.\n// NOV(II), P. 443, 1990.\nfunction slope3(that, x2, y2) {\n  var h0 = that._x1 - that._x0,\n      h1 = x2 - that._x1,\n      s0 = (that._y1 - that._y0) / (h0 || h1 < 0 && -0),\n      s1 = (y2 - that._y1) / (h1 || h0 < 0 && -0),\n      p = (s0 * h1 + s1 * h0) / (h0 + h1);\n  return (sign(s0) + sign(s1)) * Math.min(Math.abs(s0), Math.abs(s1), 0.5 * Math.abs(p)) || 0;\n}\n\n// Calculate a one-sided slope.\nfunction slope2(that, t) {\n  var h = that._x1 - that._x0;\n  return h ? (3 * (that._y1 - that._y0) / h - t) / 2 : t;\n}\n\n// According to https://en.wikipedia.org/wiki/Cubic_Hermite_spline#Representations\n// \"you can express cubic Hermite interpolation in terms of cubic Bézier curves\n// with respect to the four values p0, p0 + m0 / 3, p1 - m1 / 3, p1\".\nfunction point(that, t0, t1) {\n  var x0 = that._x0,\n      y0 = that._y0,\n      x1 = that._x1,\n      y1 = that._y1,\n      dx = (x1 - x0) / 3;\n  that._context.bezierCurveTo(x0 + dx, y0 + dx * t0, x1 - dx, y1 - dx * t1, x1, y1);\n}\n\nfunction MonotoneX(context) {\n  this._context = context;\n}\n\nMonotoneX.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 =\n    this._y0 = this._y1 =\n    this._t0 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 2: this._context.lineTo(this._x1, this._y1); break;\n      case 3: point(this, this._t0, slope2(this, this._t0)); break;\n    }\n    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    var t1 = NaN;\n\n    x = +x, y = +y;\n    if (x === this._x1 && y === this._y1) return; // Ignore coincident points.\n    switch (this._point) {\n      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n      case 1: this._point = 2; break;\n      case 2: this._point = 3; point(this, slope2(this, t1 = slope3(this, x, y)), t1); break;\n      default: point(this, this._t0, t1 = slope3(this, x, y)); break;\n    }\n\n    this._x0 = this._x1, this._x1 = x;\n    this._y0 = this._y1, this._y1 = y;\n    this._t0 = t1;\n  }\n}\n\nfunction MonotoneY(context) {\n  this._context = new ReflectContext(context);\n}\n\n(MonotoneY.prototype = Object.create(MonotoneX.prototype)).point = function(x, y) {\n  MonotoneX.prototype.point.call(this, y, x);\n};\n\nfunction ReflectContext(context) {\n  this._context = context;\n}\n\nReflectContext.prototype = {\n  moveTo: function(x, y) { this._context.moveTo(y, x); },\n  closePath: function() { this._context.closePath(); },\n  lineTo: function(x, y) { this._context.lineTo(y, x); },\n  bezierCurveTo: function(x1, y1, x2, y2, x, y) { this._context.bezierCurveTo(y1, x1, y2, x2, y, x); }\n};\n\nexport function monotoneX(context) {\n  return new MonotoneX(context);\n}\n\nexport function monotoneY(context) {\n  return new MonotoneY(context);\n}\n","function Natural(context) {\n  this._context = context;\n}\n\nNatural.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x = [];\n    this._y = [];\n  },\n  lineEnd: function() {\n    var x = this._x,\n        y = this._y,\n        n = x.length;\n\n    if (n) {\n      this._line ? this._context.lineTo(x[0], y[0]) : this._context.moveTo(x[0], y[0]);\n      if (n === 2) {\n        this._context.lineTo(x[1], y[1]);\n      } else {\n        var px = controlPoints(x),\n            py = controlPoints(y);\n        for (var i0 = 0, i1 = 1; i1 < n; ++i0, ++i1) {\n          this._context.bezierCurveTo(px[0][i0], py[0][i0], px[1][i0], py[1][i0], x[i1], y[i1]);\n        }\n      }\n    }\n\n    if (this._line || (this._line !== 0 && n === 1)) this._context.closePath();\n    this._line = 1 - this._line;\n    this._x = this._y = null;\n  },\n  point: function(x, y) {\n    this._x.push(+x);\n    this._y.push(+y);\n  }\n};\n\n// See https://www.particleincell.com/2012/bezier-splines/ for derivation.\nfunction controlPoints(x) {\n  var i,\n      n = x.length - 1,\n      m,\n      a = new Array(n),\n      b = new Array(n),\n      r = new Array(n);\n  a[0] = 0, b[0] = 2, r[0] = x[0] + 2 * x[1];\n  for (i = 1; i < n - 1; ++i) a[i] = 1, b[i] = 4, r[i] = 4 * x[i] + 2 * x[i + 1];\n  a[n - 1] = 2, b[n - 1] = 7, r[n - 1] = 8 * x[n - 1] + x[n];\n  for (i = 1; i < n; ++i) m = a[i] / b[i - 1], b[i] -= m, r[i] -= m * r[i - 1];\n  a[n - 1] = r[n - 1] / b[n - 1];\n  for (i = n - 2; i >= 0; --i) a[i] = (r[i] - a[i + 1]) / b[i];\n  b[n - 1] = (x[n] + a[n - 1]) / 2;\n  for (i = 0; i < n - 1; ++i) b[i] = 2 * x[i + 1] - a[i + 1];\n  return [a, b];\n}\n\nexport default function(context) {\n  return new Natural(context);\n}\n","function Step(context, t) {\n  this._context = context;\n  this._t = t;\n}\n\nStep.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x = this._y = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (0 < this._t && this._t < 1 && this._point === 2) this._context.lineTo(this._x, this._y);\n    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n    if (this._line >= 0) this._t = 1 - this._t, this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n      case 1: this._point = 2; // proceed\n      default: {\n        if (this._t <= 0) {\n          this._context.lineTo(this._x, y);\n          this._context.lineTo(x, y);\n        } else {\n          var x1 = this._x * (1 - this._t) + x * this._t;\n          this._context.lineTo(x1, this._y);\n          this._context.lineTo(x1, y);\n        }\n        break;\n      }\n    }\n    this._x = x, this._y = y;\n  }\n};\n\nexport default function(context) {\n  return new Step(context, 0.5);\n}\n\nexport function stepBefore(context) {\n  return new Step(context, 0);\n}\n\nexport function stepAfter(context) {\n  return new Step(context, 1);\n}\n","export default function(series, order) {\n  if (!((n = series.length) > 1)) return;\n  for (var i = 1, j, s0, s1 = series[order[0]], n, m = s1.length; i < n; ++i) {\n    s0 = s1, s1 = series[order[i]];\n    for (j = 0; j < m; ++j) {\n      s1[j][1] += s1[j][0] = isNaN(s0[j][1]) ? s0[j][0] : s0[j][1];\n    }\n  }\n}\n","export default function(series) {\n  var n = series.length, o = new Array(n);\n  while (--n >= 0) o[n] = n;\n  return o;\n}\n","import {slice} from \"./array\";\nimport constant from \"./constant\";\nimport offsetNone from \"./offset/none\";\nimport orderNone from \"./order/none\";\n\nfunction stackValue(d, key) {\n  return d[key];\n}\n\nexport default function() {\n  var keys = constant([]),\n      order = orderNone,\n      offset = offsetNone,\n      value = stackValue;\n\n  function stack(data) {\n    var kz = keys.apply(this, arguments),\n        i,\n        m = data.length,\n        n = kz.length,\n        sz = new Array(n),\n        oz;\n\n    for (i = 0; i < n; ++i) {\n      for (var ki = kz[i], si = sz[i] = new Array(m), j = 0, sij; j < m; ++j) {\n        si[j] = sij = [0, +value(data[j], ki, j, data)];\n        sij.data = data[j];\n      }\n      si.key = ki;\n    }\n\n    for (i = 0, oz = order(sz); i < n; ++i) {\n      sz[oz[i]].index = i;\n    }\n\n    offset(sz, oz);\n    return sz;\n  }\n\n  stack.keys = function(_) {\n    return arguments.length ? (keys = typeof _ === \"function\" ? _ : constant(slice.call(_)), stack) : keys;\n  };\n\n  stack.value = function(_) {\n    return arguments.length ? (value = typeof _ === \"function\" ? _ : constant(+_), stack) : value;\n  };\n\n  stack.order = function(_) {\n    return arguments.length ? (order = _ == null ? orderNone : typeof _ === \"function\" ? _ : constant(slice.call(_)), stack) : order;\n  };\n\n  stack.offset = function(_) {\n    return arguments.length ? (offset = _ == null ? offsetNone : _, stack) : offset;\n  };\n\n  return stack;\n}\n","import none from \"./none\";\n\nexport default function(series) {\n  var sums = series.map(sum);\n  return none(series).sort(function(a, b) { return sums[a] - sums[b]; });\n}\n\nexport function sum(series) {\n  var s = 0, i = -1, n = series.length, v;\n  while (++i < n) if (v = +series[i][1]) s += v;\n  return s;\n}\n","export function cubicIn(t) {\n  return t * t * t;\n}\n\nexport function cubicOut(t) {\n  return --t * t * t + 1;\n}\n\nexport function cubicInOut(t) {\n  return ((t *= 2) <= 1 ? t * t * t : (t -= 2) * t * t + 2) / 2;\n}\n","var exponent = 3;\n\nexport var polyIn = (function custom(e) {\n  e = +e;\n\n  function polyIn(t) {\n    return Math.pow(t, e);\n  }\n\n  polyIn.exponent = custom;\n\n  return polyIn;\n})(exponent);\n\nexport var polyOut = (function custom(e) {\n  e = +e;\n\n  function polyOut(t) {\n    return 1 - Math.pow(1 - t, e);\n  }\n\n  polyOut.exponent = custom;\n\n  return polyOut;\n})(exponent);\n\nexport var polyInOut = (function custom(e) {\n  e = +e;\n\n  function polyInOut(t) {\n    return ((t *= 2) <= 1 ? Math.pow(t, e) : 2 - Math.pow(2 - t, e)) / 2;\n  }\n\n  polyInOut.exponent = custom;\n\n  return polyInOut;\n})(exponent);\n","var pi = Math.PI,\n    halfPi = pi / 2;\n\nexport function sinIn(t) {\n  return 1 - Math.cos(t * halfPi);\n}\n\nexport function sinOut(t) {\n  return Math.sin(t * halfPi);\n}\n\nexport function sinInOut(t) {\n  return (1 - Math.cos(pi * t)) / 2;\n}\n","var b1 = 4 / 11,\n    b2 = 6 / 11,\n    b3 = 8 / 11,\n    b4 = 3 / 4,\n    b5 = 9 / 11,\n    b6 = 10 / 11,\n    b7 = 15 / 16,\n    b8 = 21 / 22,\n    b9 = 63 / 64,\n    b0 = 1 / b1 / b1;\n\nexport function bounceIn(t) {\n  return 1 - bounceOut(1 - t);\n}\n\nexport function bounceOut(t) {\n  return (t = +t) < b1 ? b0 * t * t : t < b3 ? b0 * (t -= b2) * t + b4 : t < b6 ? b0 * (t -= b5) * t + b7 : b0 * (t -= b8) * t + b9;\n}\n\nexport function bounceInOut(t) {\n  return ((t *= 2) <= 1 ? 1 - bounceOut(1 - t) : bounceOut(t - 1) + 1) / 2;\n}\n","var overshoot = 1.70158;\n\nexport var backIn = (function custom(s) {\n  s = +s;\n\n  function backIn(t) {\n    return t * t * ((s + 1) * t - s);\n  }\n\n  backIn.overshoot = custom;\n\n  return backIn;\n})(overshoot);\n\nexport var backOut = (function custom(s) {\n  s = +s;\n\n  function backOut(t) {\n    return --t * t * ((s + 1) * t + s) + 1;\n  }\n\n  backOut.overshoot = custom;\n\n  return backOut;\n})(overshoot);\n\nexport var backInOut = (function custom(s) {\n  s = +s;\n\n  function backInOut(t) {\n    return ((t *= 2) < 1 ? t * t * ((s + 1) * t - s) : (t -= 2) * t * ((s + 1) * t + s) + 2) / 2;\n  }\n\n  backInOut.overshoot = custom;\n\n  return backInOut;\n})(overshoot);\n","var tau = 2 * Math.PI,\n    amplitude = 1,\n    period = 0.3;\n\nexport var elasticIn = (function custom(a, p) {\n  var s = Math.asin(1 / (a = Math.max(1, a))) * (p /= tau);\n\n  function elasticIn(t) {\n    return a * Math.pow(2, 10 * --t) * Math.sin((s - t) / p);\n  }\n\n  elasticIn.amplitude = function(a) { return custom(a, p * tau); };\n  elasticIn.period = function(p) { return custom(a, p); };\n\n  return elasticIn;\n})(amplitude, period);\n\nexport var elasticOut = (function custom(a, p) {\n  var s = Math.asin(1 / (a = Math.max(1, a))) * (p /= tau);\n\n  function elasticOut(t) {\n    return 1 - a * Math.pow(2, -10 * (t = +t)) * Math.sin((t + s) / p);\n  }\n\n  elasticOut.amplitude = function(a) { return custom(a, p * tau); };\n  elasticOut.period = function(p) { return custom(a, p); };\n\n  return elasticOut;\n})(amplitude, period);\n\nexport var elasticInOut = (function custom(a, p) {\n  var s = Math.asin(1 / (a = Math.max(1, a))) * (p /= tau);\n\n  function elasticInOut(t) {\n    return ((t = t * 2 - 1) < 0\n        ? a * Math.pow(2, 10 * t) * Math.sin((s - t) / p)\n        : 2 - a * Math.pow(2, -10 * t) * Math.sin((s + t) / p)) / 2;\n  }\n\n  elasticInOut.amplitude = function(a) { return custom(a, p * tau); };\n  elasticInOut.period = function(p) { return custom(a, p); };\n\n  return elasticInOut;\n})(amplitude, period);\n","export default function(x) {\n  return function() {\n    return x;\n  };\n}\n","export function x(d) {\n  return d[0];\n}\n\nexport function y(d) {\n  return d[1];\n}\n","function RedBlackTree() {\n  this._ = null; // root node\n}\n\nexport function RedBlackNode(node) {\n  node.U = // parent node\n  node.C = // color - true for red, false for black\n  node.L = // left node\n  node.R = // right node\n  node.P = // previous node\n  node.N = null; // next node\n}\n\nRedBlackTree.prototype = {\n  constructor: RedBlackTree,\n\n  insert: function(after, node) {\n    var parent, grandpa, uncle;\n\n    if (after) {\n      node.P = after;\n      node.N = after.N;\n      if (after.N) after.N.P = node;\n      after.N = node;\n      if (after.R) {\n        after = after.R;\n        while (after.L) after = after.L;\n        after.L = node;\n      } else {\n        after.R = node;\n      }\n      parent = after;\n    } else if (this._) {\n      after = RedBlackFirst(this._);\n      node.P = null;\n      node.N = after;\n      after.P = after.L = node;\n      parent = after;\n    } else {\n      node.P = node.N = null;\n      this._ = node;\n      parent = null;\n    }\n    node.L = node.R = null;\n    node.U = parent;\n    node.C = true;\n\n    after = node;\n    while (parent && parent.C) {\n      grandpa = parent.U;\n      if (parent === grandpa.L) {\n        uncle = grandpa.R;\n        if (uncle && uncle.C) {\n          parent.C = uncle.C = false;\n          grandpa.C = true;\n          after = grandpa;\n        } else {\n          if (after === parent.R) {\n            RedBlackRotateLeft(this, parent);\n            after = parent;\n            parent = after.U;\n          }\n          parent.C = false;\n          grandpa.C = true;\n          RedBlackRotateRight(this, grandpa);\n        }\n      } else {\n        uncle = grandpa.L;\n        if (uncle && uncle.C) {\n          parent.C = uncle.C = false;\n          grandpa.C = true;\n          after = grandpa;\n        } else {\n          if (after === parent.L) {\n            RedBlackRotateRight(this, parent);\n            after = parent;\n            parent = after.U;\n          }\n          parent.C = false;\n          grandpa.C = true;\n          RedBlackRotateLeft(this, grandpa);\n        }\n      }\n      parent = after.U;\n    }\n    this._.C = false;\n  },\n\n  remove: function(node) {\n    if (node.N) node.N.P = node.P;\n    if (node.P) node.P.N = node.N;\n    node.N = node.P = null;\n\n    var parent = node.U,\n        sibling,\n        left = node.L,\n        right = node.R,\n        next,\n        red;\n\n    if (!left) next = right;\n    else if (!right) next = left;\n    else next = RedBlackFirst(right);\n\n    if (parent) {\n      if (parent.L === node) parent.L = next;\n      else parent.R = next;\n    } else {\n      this._ = next;\n    }\n\n    if (left && right) {\n      red = next.C;\n      next.C = node.C;\n      next.L = left;\n      left.U = next;\n      if (next !== right) {\n        parent = next.U;\n        next.U = node.U;\n        node = next.R;\n        parent.L = node;\n        next.R = right;\n        right.U = next;\n      } else {\n        next.U = parent;\n        parent = next;\n        node = next.R;\n      }\n    } else {\n      red = node.C;\n      node = next;\n    }\n\n    if (node) node.U = parent;\n    if (red) return;\n    if (node && node.C) { node.C = false; return; }\n\n    do {\n      if (node === this._) break;\n      if (node === parent.L) {\n        sibling = parent.R;\n        if (sibling.C) {\n          sibling.C = false;\n          parent.C = true;\n          RedBlackRotateLeft(this, parent);\n          sibling = parent.R;\n        }\n        if ((sibling.L && sibling.L.C)\n            || (sibling.R && sibling.R.C)) {\n          if (!sibling.R || !sibling.R.C) {\n            sibling.L.C = false;\n            sibling.C = true;\n            RedBlackRotateRight(this, sibling);\n            sibling = parent.R;\n          }\n          sibling.C = parent.C;\n          parent.C = sibling.R.C = false;\n          RedBlackRotateLeft(this, parent);\n          node = this._;\n          break;\n        }\n      } else {\n        sibling = parent.L;\n        if (sibling.C) {\n          sibling.C = false;\n          parent.C = true;\n          RedBlackRotateRight(this, parent);\n          sibling = parent.L;\n        }\n        if ((sibling.L && sibling.L.C)\n          || (sibling.R && sibling.R.C)) {\n          if (!sibling.L || !sibling.L.C) {\n            sibling.R.C = false;\n            sibling.C = true;\n            RedBlackRotateLeft(this, sibling);\n            sibling = parent.L;\n          }\n          sibling.C = parent.C;\n          parent.C = sibling.L.C = false;\n          RedBlackRotateRight(this, parent);\n          node = this._;\n          break;\n        }\n      }\n      sibling.C = true;\n      node = parent;\n      parent = parent.U;\n    } while (!node.C);\n\n    if (node) node.C = false;\n  }\n};\n\nfunction RedBlackRotateLeft(tree, node) {\n  var p = node,\n      q = node.R,\n      parent = p.U;\n\n  if (parent) {\n    if (parent.L === p) parent.L = q;\n    else parent.R = q;\n  } else {\n    tree._ = q;\n  }\n\n  q.U = parent;\n  p.U = q;\n  p.R = q.L;\n  if (p.R) p.R.U = p;\n  q.L = p;\n}\n\nfunction RedBlackRotateRight(tree, node) {\n  var p = node,\n      q = node.L,\n      parent = p.U;\n\n  if (parent) {\n    if (parent.L === p) parent.L = q;\n    else parent.R = q;\n  } else {\n    tree._ = q;\n  }\n\n  q.U = parent;\n  p.U = q;\n  p.L = q.R;\n  if (p.L) p.L.U = p;\n  q.R = p;\n}\n\nfunction RedBlackFirst(node) {\n  while (node.L) node = node.L;\n  return node;\n}\n\nexport default RedBlackTree;\n","import {cells, edges, epsilon} from \"./Diagram\";\n\nexport function createEdge(left, right, v0, v1) {\n  var edge = [null, null],\n      index = edges.push(edge) - 1;\n  edge.left = left;\n  edge.right = right;\n  if (v0) setEdgeEnd(edge, left, right, v0);\n  if (v1) setEdgeEnd(edge, right, left, v1);\n  cells[left.index].halfedges.push(index);\n  cells[right.index].halfedges.push(index);\n  return edge;\n}\n\nexport function createBorderEdge(left, v0, v1) {\n  var edge = [v0, v1];\n  edge.left = left;\n  return edge;\n}\n\nexport function setEdgeEnd(edge, left, right, vertex) {\n  if (!edge[0] && !edge[1]) {\n    edge[0] = vertex;\n    edge.left = left;\n    edge.right = right;\n  } else if (edge.left === right) {\n    edge[1] = vertex;\n  } else {\n    edge[0] = vertex;\n  }\n}\n\n// Liang–Barsky line clipping.\nfunction clipEdge(edge, x0, y0, x1, y1) {\n  var a = edge[0],\n      b = edge[1],\n      ax = a[0],\n      ay = a[1],\n      bx = b[0],\n      by = b[1],\n      t0 = 0,\n      t1 = 1,\n      dx = bx - ax,\n      dy = by - ay,\n      r;\n\n  r = x0 - ax;\n  if (!dx && r > 0) return;\n  r /= dx;\n  if (dx < 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  } else if (dx > 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  }\n\n  r = x1 - ax;\n  if (!dx && r < 0) return;\n  r /= dx;\n  if (dx < 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  } else if (dx > 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  }\n\n  r = y0 - ay;\n  if (!dy && r > 0) return;\n  r /= dy;\n  if (dy < 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  } else if (dy > 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  }\n\n  r = y1 - ay;\n  if (!dy && r < 0) return;\n  r /= dy;\n  if (dy < 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  } else if (dy > 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  }\n\n  if (!(t0 > 0) && !(t1 < 1)) return true; // TODO Better check?\n\n  if (t0 > 0) edge[0] = [ax + t0 * dx, ay + t0 * dy];\n  if (t1 < 1) edge[1] = [ax + t1 * dx, ay + t1 * dy];\n  return true;\n}\n\nfunction connectEdge(edge, x0, y0, x1, y1) {\n  var v1 = edge[1];\n  if (v1) return true;\n\n  var v0 = edge[0],\n      left = edge.left,\n      right = edge.right,\n      lx = left[0],\n      ly = left[1],\n      rx = right[0],\n      ry = right[1],\n      fx = (lx + rx) / 2,\n      fy = (ly + ry) / 2,\n      fm,\n      fb;\n\n  if (ry === ly) {\n    if (fx < x0 || fx >= x1) return;\n    if (lx > rx) {\n      if (!v0) v0 = [fx, y0];\n      else if (v0[1] >= y1) return;\n      v1 = [fx, y1];\n    } else {\n      if (!v0) v0 = [fx, y1];\n      else if (v0[1] < y0) return;\n      v1 = [fx, y0];\n    }\n  } else {\n    fm = (lx - rx) / (ry - ly);\n    fb = fy - fm * fx;\n    if (fm < -1 || fm > 1) {\n      if (lx > rx) {\n        if (!v0) v0 = [(y0 - fb) / fm, y0];\n        else if (v0[1] >= y1) return;\n        v1 = [(y1 - fb) / fm, y1];\n      } else {\n        if (!v0) v0 = [(y1 - fb) / fm, y1];\n        else if (v0[1] < y0) return;\n        v1 = [(y0 - fb) / fm, y0];\n      }\n    } else {\n      if (ly < ry) {\n        if (!v0) v0 = [x0, fm * x0 + fb];\n        else if (v0[0] >= x1) return;\n        v1 = [x1, fm * x1 + fb];\n      } else {\n        if (!v0) v0 = [x1, fm * x1 + fb];\n        else if (v0[0] < x0) return;\n        v1 = [x0, fm * x0 + fb];\n      }\n    }\n  }\n\n  edge[0] = v0;\n  edge[1] = v1;\n  return true;\n}\n\nexport function clipEdges(x0, y0, x1, y1) {\n  var i = edges.length,\n      edge;\n\n  while (i--) {\n    if (!connectEdge(edge = edges[i], x0, y0, x1, y1)\n        || !clipEdge(edge, x0, y0, x1, y1)\n        || !(Math.abs(edge[0][0] - edge[1][0]) > epsilon\n            || Math.abs(edge[0][1] - edge[1][1]) > epsilon)) {\n      delete edges[i];\n    }\n  }\n}\n","import {createBorderEdge} from \"./Edge\";\nimport {cells, edges, epsilon} from \"./Diagram\";\n\nexport function createCell(site) {\n  return cells[site.index] = {\n    site: site,\n    halfedges: []\n  };\n}\n\nfunction cellHalfedgeAngle(cell, edge) {\n  var site = cell.site,\n      va = edge.left,\n      vb = edge.right;\n  if (site === vb) vb = va, va = site;\n  if (vb) return Math.atan2(vb[1] - va[1], vb[0] - va[0]);\n  if (site === va) va = edge[1], vb = edge[0];\n  else va = edge[0], vb = edge[1];\n  return Math.atan2(va[0] - vb[0], vb[1] - va[1]);\n}\n\nexport function cellHalfedgeStart(cell, edge) {\n  return edge[+(edge.left !== cell.site)];\n}\n\nexport function cellHalfedgeEnd(cell, edge) {\n  return edge[+(edge.left === cell.site)];\n}\n\nexport function sortCellHalfedges() {\n  for (var i = 0, n = cells.length, cell, halfedges, j, m; i < n; ++i) {\n    if ((cell = cells[i]) && (m = (halfedges = cell.halfedges).length)) {\n      var index = new Array(m),\n          array = new Array(m);\n      for (j = 0; j < m; ++j) index[j] = j, array[j] = cellHalfedgeAngle(cell, edges[halfedges[j]]);\n      index.sort(function(i, j) { return array[j] - array[i]; });\n      for (j = 0; j < m; ++j) array[j] = halfedges[index[j]];\n      for (j = 0; j < m; ++j) halfedges[j] = array[j];\n    }\n  }\n}\n\nexport function clipCells(x0, y0, x1, y1) {\n  var nCells = cells.length,\n      iCell,\n      cell,\n      site,\n      iHalfedge,\n      halfedges,\n      nHalfedges,\n      start,\n      startX,\n      startY,\n      end,\n      endX,\n      endY,\n      cover = true;\n\n  for (iCell = 0; iCell < nCells; ++iCell) {\n    if (cell = cells[iCell]) {\n      site = cell.site;\n      halfedges = cell.halfedges;\n      iHalfedge = halfedges.length;\n\n      // Remove any dangling clipped edges.\n      while (iHalfedge--) {\n        if (!edges[halfedges[iHalfedge]]) {\n          halfedges.splice(iHalfedge, 1);\n        }\n      }\n\n      // Insert any border edges as necessary.\n      iHalfedge = 0, nHalfedges = halfedges.length;\n      while (iHalfedge < nHalfedges) {\n        end = cellHalfedgeEnd(cell, edges[halfedges[iHalfedge]]), endX = end[0], endY = end[1];\n        start = cellHalfedgeStart(cell, edges[halfedges[++iHalfedge % nHalfedges]]), startX = start[0], startY = start[1];\n        if (Math.abs(endX - startX) > epsilon || Math.abs(endY - startY) > epsilon) {\n          halfedges.splice(iHalfedge, 0, edges.push(createBorderEdge(site, end,\n              Math.abs(endX - x0) < epsilon && y1 - endY > epsilon ? [x0, Math.abs(startX - x0) < epsilon ? startY : y1]\n              : Math.abs(endY - y1) < epsilon && x1 - endX > epsilon ? [Math.abs(startY - y1) < epsilon ? startX : x1, y1]\n              : Math.abs(endX - x1) < epsilon && endY - y0 > epsilon ? [x1, Math.abs(startX - x1) < epsilon ? startY : y0]\n              : Math.abs(endY - y0) < epsilon && endX - x0 > epsilon ? [Math.abs(startY - y0) < epsilon ? startX : x0, y0]\n              : null)) - 1);\n          ++nHalfedges;\n        }\n      }\n\n      if (nHalfedges) cover = false;\n    }\n  }\n\n  // If there weren’t any edges, have the closest site cover the extent.\n  // It doesn’t matter which corner of the extent we measure!\n  if (cover) {\n    var dx, dy, d2, dc = Infinity;\n\n    for (iCell = 0, cover = null; iCell < nCells; ++iCell) {\n      if (cell = cells[iCell]) {\n        site = cell.site;\n        dx = site[0] - x0;\n        dy = site[1] - y0;\n        d2 = dx * dx + dy * dy;\n        if (d2 < dc) dc = d2, cover = cell;\n      }\n    }\n\n    if (cover) {\n      var v00 = [x0, y0], v01 = [x0, y1], v11 = [x1, y1], v10 = [x1, y0];\n      cover.halfedges.push(\n        edges.push(createBorderEdge(site = cover.site, v00, v01)) - 1,\n        edges.push(createBorderEdge(site, v01, v11)) - 1,\n        edges.push(createBorderEdge(site, v11, v10)) - 1,\n        edges.push(createBorderEdge(site, v10, v00)) - 1\n      );\n    }\n  }\n\n  // Lastly delete any cells with no edges; these were entirely clipped.\n  for (iCell = 0; iCell < nCells; ++iCell) {\n    if (cell = cells[iCell]) {\n      if (!cell.halfedges.length) {\n        delete cells[iCell];\n      }\n    }\n  }\n}\n","import {RedBlackNode} from \"./RedBlackTree\";\nimport {circles, epsilon2} from \"./Diagram\";\n\nvar circlePool = [];\n\nexport var firstCircle;\n\nfunction Circle() {\n  RedBlackNode(this);\n  this.x =\n  this.y =\n  this.arc =\n  this.site =\n  this.cy = null;\n}\n\nexport function attachCircle(arc) {\n  var lArc = arc.P,\n      rArc = arc.N;\n\n  if (!lArc || !rArc) return;\n\n  var lSite = lArc.site,\n      cSite = arc.site,\n      rSite = rArc.site;\n\n  if (lSite === rSite) return;\n\n  var bx = cSite[0],\n      by = cSite[1],\n      ax = lSite[0] - bx,\n      ay = lSite[1] - by,\n      cx = rSite[0] - bx,\n      cy = rSite[1] - by;\n\n  var d = 2 * (ax * cy - ay * cx);\n  if (d >= -epsilon2) return;\n\n  var ha = ax * ax + ay * ay,\n      hc = cx * cx + cy * cy,\n      x = (cy * ha - ay * hc) / d,\n      y = (ax * hc - cx * ha) / d;\n\n  var circle = circlePool.pop() || new Circle;\n  circle.arc = arc;\n  circle.site = cSite;\n  circle.x = x + bx;\n  circle.y = (circle.cy = y + by) + Math.sqrt(x * x + y * y); // y bottom\n\n  arc.circle = circle;\n\n  var before = null,\n      node = circles._;\n\n  while (node) {\n    if (circle.y < node.y || (circle.y === node.y && circle.x <= node.x)) {\n      if (node.L) node = node.L;\n      else { before = node.P; break; }\n    } else {\n      if (node.R) node = node.R;\n      else { before = node; break; }\n    }\n  }\n\n  circles.insert(before, circle);\n  if (!before) firstCircle = circle;\n}\n\nexport function detachCircle(arc) {\n  var circle = arc.circle;\n  if (circle) {\n    if (!circle.P) firstCircle = circle.N;\n    circles.remove(circle);\n    circlePool.push(circle);\n    RedBlackNode(circle);\n    arc.circle = null;\n  }\n}\n","import {RedBlackNode} from \"./RedBlackTree\";\nimport {createCell} from \"./Cell\";\nimport {attachCircle, detachCircle} from \"./Circle\";\nimport {createEdge, setEdgeEnd} from \"./Edge\";\nimport {beaches, epsilon} from \"./Diagram\";\n\nvar beachPool = [];\n\nfunction Beach() {\n  RedBlackNode(this);\n  this.edge =\n  this.site =\n  this.circle = null;\n}\n\nfunction createBeach(site) {\n  var beach = beachPool.pop() || new Beach;\n  beach.site = site;\n  return beach;\n}\n\nfunction detachBeach(beach) {\n  detachCircle(beach);\n  beaches.remove(beach);\n  beachPool.push(beach);\n  RedBlackNode(beach);\n}\n\nexport function removeBeach(beach) {\n  var circle = beach.circle,\n      x = circle.x,\n      y = circle.cy,\n      vertex = [x, y],\n      previous = beach.P,\n      next = beach.N,\n      disappearing = [beach];\n\n  detachBeach(beach);\n\n  var lArc = previous;\n  while (lArc.circle\n      && Math.abs(x - lArc.circle.x) < epsilon\n      && Math.abs(y - lArc.circle.cy) < epsilon) {\n    previous = lArc.P;\n    disappearing.unshift(lArc);\n    detachBeach(lArc);\n    lArc = previous;\n  }\n\n  disappearing.unshift(lArc);\n  detachCircle(lArc);\n\n  var rArc = next;\n  while (rArc.circle\n      && Math.abs(x - rArc.circle.x) < epsilon\n      && Math.abs(y - rArc.circle.cy) < epsilon) {\n    next = rArc.N;\n    disappearing.push(rArc);\n    detachBeach(rArc);\n    rArc = next;\n  }\n\n  disappearing.push(rArc);\n  detachCircle(rArc);\n\n  var nArcs = disappearing.length,\n      iArc;\n  for (iArc = 1; iArc < nArcs; ++iArc) {\n    rArc = disappearing[iArc];\n    lArc = disappearing[iArc - 1];\n    setEdgeEnd(rArc.edge, lArc.site, rArc.site, vertex);\n  }\n\n  lArc = disappearing[0];\n  rArc = disappearing[nArcs - 1];\n  rArc.edge = createEdge(lArc.site, rArc.site, null, vertex);\n\n  attachCircle(lArc);\n  attachCircle(rArc);\n}\n\nexport function addBeach(site) {\n  var x = site[0],\n      directrix = site[1],\n      lArc,\n      rArc,\n      dxl,\n      dxr,\n      node = beaches._;\n\n  while (node) {\n    dxl = leftBreakPoint(node, directrix) - x;\n    if (dxl > epsilon) node = node.L; else {\n      dxr = x - rightBreakPoint(node, directrix);\n      if (dxr > epsilon) {\n        if (!node.R) {\n          lArc = node;\n          break;\n        }\n        node = node.R;\n      } else {\n        if (dxl > -epsilon) {\n          lArc = node.P;\n          rArc = node;\n        } else if (dxr > -epsilon) {\n          lArc = node;\n          rArc = node.N;\n        } else {\n          lArc = rArc = node;\n        }\n        break;\n      }\n    }\n  }\n\n  createCell(site);\n  var newArc = createBeach(site);\n  beaches.insert(lArc, newArc);\n\n  if (!lArc && !rArc) return;\n\n  if (lArc === rArc) {\n    detachCircle(lArc);\n    rArc = createBeach(lArc.site);\n    beaches.insert(newArc, rArc);\n    newArc.edge = rArc.edge = createEdge(lArc.site, newArc.site);\n    attachCircle(lArc);\n    attachCircle(rArc);\n    return;\n  }\n\n  if (!rArc) { // && lArc\n    newArc.edge = createEdge(lArc.site, newArc.site);\n    return;\n  }\n\n  // else lArc !== rArc\n  detachCircle(lArc);\n  detachCircle(rArc);\n\n  var lSite = lArc.site,\n      ax = lSite[0],\n      ay = lSite[1],\n      bx = site[0] - ax,\n      by = site[1] - ay,\n      rSite = rArc.site,\n      cx = rSite[0] - ax,\n      cy = rSite[1] - ay,\n      d = 2 * (bx * cy - by * cx),\n      hb = bx * bx + by * by,\n      hc = cx * cx + cy * cy,\n      vertex = [(cy * hb - by * hc) / d + ax, (bx * hc - cx * hb) / d + ay];\n\n  setEdgeEnd(rArc.edge, lSite, rSite, vertex);\n  newArc.edge = createEdge(lSite, site, null, vertex);\n  rArc.edge = createEdge(site, rSite, null, vertex);\n  attachCircle(lArc);\n  attachCircle(rArc);\n}\n\nfunction leftBreakPoint(arc, directrix) {\n  var site = arc.site,\n      rfocx = site[0],\n      rfocy = site[1],\n      pby2 = rfocy - directrix;\n\n  if (!pby2) return rfocx;\n\n  var lArc = arc.P;\n  if (!lArc) return -Infinity;\n\n  site = lArc.site;\n  var lfocx = site[0],\n      lfocy = site[1],\n      plby2 = lfocy - directrix;\n\n  if (!plby2) return lfocx;\n\n  var hl = lfocx - rfocx,\n      aby2 = 1 / pby2 - 1 / plby2,\n      b = hl / plby2;\n\n  if (aby2) return (-b + Math.sqrt(b * b - 2 * aby2 * (hl * hl / (-2 * plby2) - lfocy + plby2 / 2 + rfocy - pby2 / 2))) / aby2 + rfocx;\n\n  return (rfocx + lfocx) / 2;\n}\n\nfunction rightBreakPoint(arc, directrix) {\n  var rArc = arc.N;\n  if (rArc) return leftBreakPoint(rArc, directrix);\n  var site = arc.site;\n  return site[1] === directrix ? site[0] : Infinity;\n}\n","import {addBeach, removeBeach} from \"./Beach\";\nimport {sortCellHalfedges, cellHalfedgeStart, clipCells} from \"./Cell\";\nimport {firstCircle} from \"./Circle\";\nimport {clipEdges} from \"./Edge\";\nimport RedBlackTree from \"./RedBlackTree\";\n\nexport var epsilon = 1e-6;\nexport var epsilon2 = 1e-12;\nexport var beaches;\nexport var cells;\nexport var circles;\nexport var edges;\n\nfunction triangleArea(a, b, c) {\n  return (a[0] - c[0]) * (b[1] - a[1]) - (a[0] - b[0]) * (c[1] - a[1]);\n}\n\nfunction lexicographic(a, b) {\n  return b[1] - a[1]\n      || b[0] - a[0];\n}\n\nexport default function Diagram(sites, extent) {\n  var site = sites.sort(lexicographic).pop(),\n      x,\n      y,\n      circle;\n\n  edges = [];\n  cells = new Array(sites.length);\n  beaches = new RedBlackTree;\n  circles = new RedBlackTree;\n\n  while (true) {\n    circle = firstCircle;\n    if (site && (!circle || site[1] < circle.y || (site[1] === circle.y && site[0] < circle.x))) {\n      if (site[0] !== x || site[1] !== y) {\n        addBeach(site);\n        x = site[0], y = site[1];\n      }\n      site = sites.pop();\n    } else if (circle) {\n      removeBeach(circle.arc);\n    } else {\n      break;\n    }\n  }\n\n  sortCellHalfedges();\n\n  if (extent) {\n    var x0 = +extent[0][0],\n        y0 = +extent[0][1],\n        x1 = +extent[1][0],\n        y1 = +extent[1][1];\n    clipEdges(x0, y0, x1, y1);\n    clipCells(x0, y0, x1, y1);\n  }\n\n  this.edges = edges;\n  this.cells = cells;\n\n  beaches =\n  circles =\n  edges =\n  cells = null;\n}\n\nDiagram.prototype = {\n  constructor: Diagram,\n\n  polygons: function() {\n    var edges = this.edges;\n\n    return this.cells.map(function(cell) {\n      var polygon = cell.halfedges.map(function(i) { return cellHalfedgeStart(cell, edges[i]); });\n      polygon.data = cell.site.data;\n      return polygon;\n    });\n  },\n\n  triangles: function() {\n    var triangles = [],\n        edges = this.edges;\n\n    this.cells.forEach(function(cell, i) {\n      if (!(m = (halfedges = cell.halfedges).length)) return;\n      var site = cell.site,\n          halfedges,\n          j = -1,\n          m,\n          s0,\n          e1 = edges[halfedges[m - 1]],\n          s1 = e1.left === site ? e1.right : e1.left;\n\n      while (++j < m) {\n        s0 = s1;\n        e1 = edges[halfedges[j]];\n        s1 = e1.left === site ? e1.right : e1.left;\n        if (s0 && s1 && i < s0.index && i < s1.index && triangleArea(site, s0, s1) < 0) {\n          triangles.push([site.data, s0.data, s1.data]);\n        }\n      }\n    });\n\n    return triangles;\n  },\n\n  links: function() {\n    return this.edges.filter(function(edge) {\n      return edge.right;\n    }).map(function(edge) {\n      return {\n        source: edge.left.data,\n        target: edge.right.data\n      };\n    });\n  },\n\n  find: function(x, y, radius) {\n    var that = this, i0, i1 = that._found || 0, n = that.cells.length, cell;\n\n    // Use the previously-found cell, or start with an arbitrary one.\n    while (!(cell = that.cells[i1])) if (++i1 >= n) return null;\n    var dx = x - cell.site[0], dy = y - cell.site[1], d2 = dx * dx + dy * dy;\n\n    // Traverse the half-edges to find a closer cell, if any.\n    do {\n      cell = that.cells[i0 = i1], i1 = null;\n      cell.halfedges.forEach(function(e) {\n        var edge = that.edges[e], v = edge.left;\n        if ((v === cell.site || !v) && !(v = edge.right)) return;\n        var vx = x - v[0], vy = y - v[1], v2 = vx * vx + vy * vy;\n        if (v2 < d2) d2 = v2, i1 = v.index;\n      });\n    } while (i1 !== null);\n\n    that._found = i0;\n\n    return radius == null || d2 <= radius * radius ? cell.site : null;\n  }\n}\n","import constant from \"./constant\";\nimport {x as pointX, y as pointY} from \"./point\";\nimport Diagram, {epsilon} from \"./Diagram\";\n\nexport default function() {\n  var x = pointX,\n      y = pointY,\n      extent = null;\n\n  function voronoi(data) {\n    return new Diagram(data.map(function(d, i) {\n      var s = [Math.round(x(d, i, data) / epsilon) * epsilon, Math.round(y(d, i, data) / epsilon) * epsilon];\n      s.index = i;\n      s.data = d;\n      return s;\n    }), extent);\n  }\n\n  voronoi.polygons = function(data) {\n    return voronoi(data).polygons();\n  };\n\n  voronoi.links = function(data) {\n    return voronoi(data).links();\n  };\n\n  voronoi.triangles = function(data) {\n    return voronoi(data).triangles();\n  };\n\n  voronoi.x = function(_) {\n    return arguments.length ? (x = typeof _ === \"function\" ? _ : constant(+_), voronoi) : x;\n  };\n\n  voronoi.y = function(_) {\n    return arguments.length ? (y = typeof _ === \"function\" ? _ : constant(+_), voronoi) : y;\n  };\n\n  voronoi.extent = function(_) {\n    return arguments.length ? (extent = _ == null ? null : [[+_[0][0], +_[0][1]], [+_[1][0], +_[1][1]]], voronoi) : extent && [[extent[0][0], extent[0][1]], [extent[1][0], extent[1][1]]];\n  };\n\n  voronoi.size = function(_) {\n    return arguments.length ? (extent = _ == null ? null : [[0, 0], [+_[0], +_[1]]], voronoi) : extent && [extent[1][0] - extent[0][0], extent[1][1] - extent[0][1]];\n  };\n\n  return voronoi;\n}\n","/**\n * This class represents a selection applied on a data array.\n *\n * @class Selection\n */\nclass Selection {\n    /**\n     * Creates an instance of Selection.\n     * @param {Array<DataObject>} data Array of DataObjects.\n     * @memberof Selection\n     */\n    constructor (idGetter) {\n        this._dataObjects = new Map();\n        this._updatedata = new Map();\n        this._mode = '';\n        this._enterdata = new Map();\n        this._exitdata = new Map();\n        this._idGetter = idGetter;\n    }\n\n    /**\n     * This method is used to supply seed data to a selection.\n     *\n     * @param {Array} newData Seed data to create the enter selection.\n     * @param {Functon | undefined } idGetter This function is used to uniqely identify a data entry.\n     * @return {Selection} Modified selection.\n     * @memberof Selection\n     */\n    data (newData) {\n        const entryData = new Map();\n        const exitdata = new Map();\n        const tempMap = new Map();\n        const duplicateData = new Map();\n        const updatedData = this._updatedata;\n\n        newData.forEach((...params) => {\n            const key = this.idGetter ? this._idGetter(...params) : params[1];\n            if (!tempMap.has(key)) {\n                tempMap.set(key, params[0]);\n            } else {\n                duplicateData.push(key, params[0]);\n            }\n        });\n\n        let val;\n        // prepare enter data\n        let entries = tempMap.entries();\n        while (val = entries.next().value) {\n            if (!updatedData.has(val[0])) {\n                entryData.set(val[0], val[1]);\n            } else {\n                updatedData.set(val[0], val[1]);\n            }\n        }\n        // prepare exit data\n        entries = updatedData.entries();\n        while (val = entries.next().value) {\n            if (!tempMap.has(val[0])) {\n                exitdata.set(val[0], val[1]);\n            }\n        }\n\n        // put duplicate data to exit list\n        entries = duplicateData.entries();\n        while (val = entries.next().value) {\n            exitdata.set(val[0], val[1]);\n        }\n\n        const newSelection = new Selection(this._idGetter);\n        newSelection._updatedata = updatedData;\n        newSelection._dataObjects = this._dataObjects;\n        newSelection._enterdata = entryData;\n        newSelection._exitdata = exitdata;\n\n        return newSelection;\n    }\n\n    /**\n     * Applies the supplied callback to each data element\n     * and returns a new selection.\n     *\n     * @param {Function} callback Callback to execute on each item.\n     * @return {Selection} New selection with data created using callback.\n     * @memberof Selection\n     */\n    append (callback) {\n        let currentData;\n        let val;\n        const dataObjects = new Map();\n        const data = new Map();\n\n        // select the data to create object\n        switch (this._mode) {\n        case 'enter':\n            currentData = this._enterdata;\n            break;\n        case 'exit':\n            currentData = this._exitdata;\n            break;\n        default:\n            currentData = this._updatedata;\n        }\n\n        const entries = currentData.entries();\n\n        while (val = entries.next().value) {\n            dataObjects.set(val[0], callback(val[1]));\n            data.set(val[0], val[1]);\n        }\n\n        const newSelection = new Selection(this._idGetter);\n        newSelection._updatedata = data;\n        newSelection._dataObjects = dataObjects;\n        this._mode = '';\n\n        return newSelection;\n    }\n\n     /**\n     * This method returns an enter selection that\n     * allows or update operations.\n     *\n     * @return {Selection} Instance of enter selection.\n     * @memberof Selection\n     */\n    enter () {\n        this._mode = 'enter';\n        return this;\n    }\n\n    /**\n     * Returns a selection with exit data.\n     *\n     * @return {Selection} Instance of selection.\n     * @memberof Selection\n     */\n    exit () {\n        this._mode = 'exit';\n        return this;\n    }\n\n     /**\n     * This method merges the data of one selection with another.\n     *\n     * @param {Selection} selection Instance of selection.\n     * @return {Selection} Modified selection.\n     * @memberof Selection\n     */\n    merge (target) {\n        const mergedObjects = new Map();\n        const mergedData = new Map();\n        let val;\n        let entries;\n\n        // merge Object and data present in this selection\n        entries = this._updatedata.entries();\n        while (val = entries.next().value) {\n            if (!this._exitdata.has(val[0])) {\n                mergedData.set(val[0], val[1]);\n                mergedObjects.set(val[0], this._dataObjects.get(val[0]));\n            }\n        }\n\n        // merge object from target selection\n        entries = target._updatedata.entries();\n        while (val = entries.next().value) {\n            if (!(mergedData.has(val[0]) || target._exitdata.has(val[0]))) {\n                mergedData.set(val[0], val[1]);\n                mergedObjects.set(val[0], target._dataObjects.get(val[0]));\n            }\n        }\n\n        const newSelection = new Selection(this._idGetter);\n        newSelection._updatedata = mergedData;\n        newSelection._dataObjects = mergedObjects;\n\n        return newSelection;\n    }\n\n    each (fn) {\n        let val;\n        const entries = this._dataObjects.entries();\n\n        while (val = entries.next().value) {\n            fn(val[1], this._updatedata.get(val[0]), val[0]);\n        }\n    }\n\n    map (fn) {\n        const newdata = new Map();\n        let val;\n        const entries = this._dataObjects.entries();\n\n        while (val = entries.next().value) {\n            newdata.set(val[0], fn(val[1], this._updatedata.get(val[0]), val[0]));\n        }\n        const newSelection = new Selection(this._idGetter);\n        newSelection._updatedata = this._updatedata;\n        newSelection._dataObjects = newdata;\n\n        return newSelection;\n    }\n\n    remove () {\n        let currentData;\n\n        switch (this._mode) {\n        case 'enter':\n            currentData = this._enterdata;\n            break;\n        case 'exit':\n            currentData = this._exitdata;\n            break;\n        default:\n            currentData = this._updatedata;\n        }\n\n        currentData.clear();\n\n        return this;\n    }\n\n    /**\n     *  Gets the object bound to a class\n     *\n     * @return {Object} current data set bound to the class\n     * @memberof Selection\n     */\n    getObjects () {\n        const objects = [];\n        let val;\n        const values = this._dataObjects.values();\n\n        while (val = values.next().value) {\n            objects.push(val);\n        }\n        return objects;\n    }\n\n}\n\nexport default Selection;\n","export const ORDER_ASCENDING = 'ascending';\nexport const ORDER_DESCENDING = 'descending';\nexport const ORDER_NONE = 'none';\nexport const OFFSET_DIVERGING = 'diverging';\nexport const OFFSET_NONE = 'none';\nexport const OFFSET_EXPAND = 'expand';\nexport const OFFSET_WIGGLE = 'wiggle';\n","/* global window, requestAnimationFrame, cancelAnimationFrame */\nimport { FieldType, DimensionSubtype, DateTimeFormatter, DM_DERIVATIVES, default as DataModel } from 'datamodel';\nimport {\n    axisLeft,\n    axisRight,\n    axisTop,\n    axisBottom\n} from 'd3-axis';\nimport {\n    symbolCircle,\n    symbolCross,\n    symbolDiamond,\n    symbolSquare,\n    symbolStar,\n    symbolWye,\n    symbolTriangle,\n    symbol,\n    stack as d3Stack,\n    stackOffsetDiverging,\n    stackOrderNone,\n    stackOrderAscending,\n    stackOrderDescending,\n    stackOffsetNone,\n    stackOffsetExpand,\n    stackOffsetWiggle,\n    pie,\n    arc,\n    line,\n    curveLinear,\n    curveStepAfter,\n    curveStepBefore,\n    curveStep,\n    curveCatmullRom,\n    area\n} from 'd3-shape';\nimport { scaleBand } from 'd3-scale';\nimport { nest } from 'd3-collection';\nimport {\n    interpolate,\n    interpolateRgb,\n    piecewise,\n    interpolateNumber,\n    interpolateHslLong\n} from 'd3-interpolate';\nimport {\n    easeCubic,\n    easeBounce,\n    easePoly,\n    easeBack,\n    easeCircle,\n    easeLinear,\n    easeElastic\n} from 'd3-ease';\nimport {\n   color,\n   rgb,\n   hsl\n} from 'd3-color';\nimport { voronoi } from 'd3-voronoi';\nimport Model from 'hyperdis';\nimport { dataSelect } from './DataSystem';\nimport * as STACK_CONFIG from './enums/stack-config';\n\nconst { InvalidAwareTypes } = DataModel;\nconst HTMLElement = window.HTMLElement;\n\nconst isSimpleObject = (obj) => {\n    let token;\n    if (typeof obj === 'object') {\n        if (obj === null) { return false; }\n        token = Object.prototype.toString.call(obj);\n        if (token === '[object Object]') {\n            return (obj.constructor.toString().match(/^function (.*)\\(\\)/m) || [])[1] === 'Object';\n        }\n    }\n    return false;\n};\n\n/**\n * Returns unique id\n * @return {string} Unique id string\n */\nconst\n    getUniqueId = () => `id-${new Date().getTime()}${Math.round(Math.random() * 10000)}`;\n\n/**\n * Deep copies an object and returns a new object.\n * @param {Object} o Object to clone\n * @return {Object} New Object.\n */\nconst clone = (o) => {\n    const output = {};\n    let v;\n    for (const key in o) {\n        if ({}.hasOwnProperty.call(o, key)) {\n            v = o[key];\n            output[key] = isSimpleObject(v) ? clone(v) : v;\n        }\n    }\n    return output;\n};\n\n/**\n* Checks the existence of keys in an object\n* @param {Array} keys Set of keys which are to be checked\n* @param {Object} obj whose keys are checked from the set of keys provided\n* @return {Object} Error if the keys are absent, or the object itself\n*/\nconst checkExistence = (keys, obj) => {\n    const nonExistentKeys = [];\n    keys.forEach((key) => {\n        if (key in obj) {\n            return;\n        }\n        nonExistentKeys.push(key);\n    });\n    return nonExistentKeys;\n};\n\nconst sanitizeIP = {\n    typeObj: (keys, obj) => {\n        if (typeof obj !== 'object') {\n            return Error('Argument type object expected');\n        }\n\n        const nonExistentKeys = checkExistence(keys, obj);\n        if (nonExistentKeys.length) {\n            return Error(`Missing keys from parameter ${nonExistentKeys.join(', ')}`);\n        }\n        return obj;\n    },\n\n    /* istanbul ignore next */ htmlElem: (elem) => {\n        if (!(elem instanceof HTMLElement)) {\n            return Error('HTMLElement required');\n        }\n        return elem;\n    }\n};\n\n/**\n * Gets the maximum value from an array of objects for a given property name\n * @param  {Array.<Object>} data   Array of objects\n * @param  {string} field Field name\n * @return {number} Maximum value\n */\nconst getMax = (data, field) => Math.max(...data.map(d => d[field]));\n\n/**\n * Gets the minimum value from an array of objects for a given property name\n * @param  {Array.<Object>} data   Array of objects\n * @param  {string} field Field name\n * @return {number} Minimum value\n */\nconst getMin = (data, field) => Math.min(...data.map(d => d[field]));\n\n/**\n * Gets the domain from the data based on the field name and type of field\n * @param  {Array.<Object> | Array.<Array>} data       Data Array\n * @param  {Array.<string>} fields    Array of fields from where the domain will be calculated\n * @param {string} fieldType Type of field - nominal, quantitiative, temporal.\n * @return {Array} Usually contains a min and max value if field is quantitative or\n * an array of values if field type is nominal or ordinal\n */\nconst getDomainFromData = (data, fields, fieldType) => {\n    let domain;\n    const domArr = [];\n    data = data[0] instanceof Array ? data : [data];\n    switch (fieldType) {\n    case DimensionSubtype.CATEGORICAL:\n        domain = [].concat(...data.map(arr => arr.map(d => d[fields[0]]).filter(d => d !== undefined)));\n        break;\n    default:\n        for (let i = 0, len = data.length; i < len; i++) {\n            const arr = data[i];\n            const [field0, field1] = fields;\n            const arr0 = arr.filter(d => !isNaN(d[field0]));\n            const arr1 = arr.filter(d => !isNaN(d[field1]));\n            if (arr0.length || arr1.length) {\n                const firstMin = getMin(arr0, field0);\n                const secondMin = getMin(arr1, field1);\n                const firstMax = getMax(arr0, field0);\n                const secondMax = getMax(arr1, field1);\n                domArr.push([Math.min(firstMin, secondMin), Math.max(firstMax, secondMax)]);\n            }\n        }\n        domain = domArr.length ? [Math.min(...domArr.map(d => d[0])), Math.max(...domArr.map(d => d[1]))] : [];\n        break;\n    }\n    return domain;\n};\n\n/**\n * Union Domain values\n * @param {Array.<Array>} domains Array of domain values\n * @param {string} fieldType type of field - dimension,measure or datetime.\n * @return {Array} Unioned domain of all domain values.\n */\nconst unionDomain = (domains, fieldType) => {\n    let domain = [];\n    domains = domains.filter(dom => dom && dom.length);\n    if (domains.length) {\n        if (fieldType === DimensionSubtype.CATEGORICAL) {\n            domain = [].concat(...domains);\n        } else {\n            domain = [Math.min(...domains.map(d => d[0])), Math.max(...domains.map(d => d[1]))];\n        }\n    }\n\n    return domain;\n};\n\nconst symbolFns = {\n    circle: symbolCircle,\n    cross: symbolCross,\n    diamond: symbolDiamond,\n    square: symbolSquare,\n    star: symbolStar,\n    wye: symbolWye,\n    triangle: symbolTriangle\n};\n\nconst easeFns = {\n    cubic: easeCubic,\n    bounce: easeBounce,\n    linear: easeLinear,\n    elastic: easeElastic,\n    back: easeBack,\n    poly: easePoly,\n    circle: easeCircle\n};\n\n/**\n * Returns the maximum or minimum points of a compare value from an array of objects.\n * @param {Array} points Array of objects\n * @param {string} compareValue Key in the object on which the comparing will be done.\n * @param {string} minOrMax minimum or maximum.\n * @return {Object} Minimum or maximum point.\n */\nconst getExtremePoint = (points, compareValue, minOrMax) => {\n    let extremePoint;\n    let point;\n    const len = points.length;\n    let minOrMaxVal = minOrMax === 'max' ? -Infinity : Infinity;\n    let val;\n\n    for (let i = 0; i < len; i++) {\n        point = points[i];\n        val = point[compareValue];\n        if (minOrMax === 'min' ? val < minOrMaxVal : val > minOrMaxVal) {\n            minOrMaxVal = val;\n            extremePoint = point;\n        }\n    }\n\n    return extremePoint;\n};\n\n/**\n * Returns the minimum point of a compare value from an array of objects.\n * @param {Array} points Array of objects\n * @param {string} compareValue Key in the object on which the comparing will be done.\n * @return {Object} Minimum point.\n */\nconst getMinPoint = (points, compareValue) => getExtremePoint(points, compareValue, 'min');\n\n/**\n * Returns the maximum point of a compare value from an array of objects.\n * @param {Array} points Array of objects\n * @param {string} compareValue Key in the object on which the comparing will be done.\n * @return {Object} Maximum point.\n */\nconst getMaxPoint = (points, compareValue) => getExtremePoint(points, compareValue, 'max');\n\n/**\n * Gets the index of the closest value of the given value from the array.\n * @param {Array} arr Array of values\n * @param {number} value Value from which the nearest value will be calculated.\n * @param {string} side side property.\n * @return {number} index of the closest value\n */\n/* istanbul ignore next */const getClosestIndexOf = (arr, value, side) => {\n    let low = 0;\n    const arrLen = arr.length;\n    let high = arrLen - 1;\n\n    let mid;\n    let d1;\n    let d2;\n\n    while (low < high) {\n        mid = Math.floor((low + high) / 2);\n        d1 = Math.abs(arr[mid] - value);\n        d2 = Math.abs(arr[mid + 1] - value);\n\n        if (d2 <= d1) {\n            low = mid + 1;\n        } else {\n            high = mid;\n        }\n    }\n\n    if (!side) {\n        return high;\n    }\n\n    const highVal = arr[high];\n    if (highVal === value) {\n        return high;\n    } else if (highVal > value) {\n        if (high === 0) { return high; }\n        return side === 'left' ? high - 1 : high;\n    }\n    if (high === arr.length - 1) { return high; }\n    return side === 'left' ? high : high + 1;\n};\n\nconst getNearestValue = (data, key) => {\n    const filterData = data.filter(d => typeof d === 'number');\n    return filterData[getClosestIndexOf(filterData, key)];\n};\n\n/**\n * Returns the browser window object\n * @return {Window} Window object\n*/\nconst getWindow = () => window;\n\n/**\n * Returns the browser window object\n * @return {Window} Window object\n*/\nconst reqAnimFrame = (() => requestAnimationFrame)();\n\nconst cancelAnimFrame = (() => cancelAnimationFrame)();\n\n/**\n * Capitalizes the first letter of the word\n * @param {string} text word\n * @return {string} Capitalized word\n */\nconst capitalizeFirst = (text) => {\n    text = text.toLowerCase();\n\n    return text.replace(/\\w\\S*/g, txt => txt.charAt(0).toUpperCase() + txt.substr(1));\n};\n\n/**\n *\n *\n * @param {*} arr\n */\nconst unique = arr => ([...new Set(arr)]);\n\n/**\n * Gets the minimum difference between two consecutive numbers  in an array.\n * @param {Array} arr Array of numbers\n * @param {number} index index of the value\n * @return {number} minimum difference between values\n */\n/* istanbul ignore next */ const getMinDiff = (arr, index) => {\n    let diff;\n    let uniqueVals;\n    if (index !== undefined) {\n        uniqueVals = unique(arr.map(d => d[index]));\n    } else {\n        uniqueVals = unique(arr);\n    }\n    if (uniqueVals.length > 1) {\n        diff = Math.abs(uniqueVals[1] - uniqueVals[0]);\n        for (let i = 2, len = uniqueVals.length; i < len; i++) {\n            diff = Math.min(diff, Math.abs(uniqueVals[i] - uniqueVals[i - 1]));\n        }\n    } else {\n        diff = uniqueVals[0];\n    }\n\n    return diff;\n};\n\n/**\n * Returns the class name appended with a given id.\n * @param {string} cls class name\n * @param {string} id unique identifier\n * @param {string} prefix string needed to add before the classname\n * @return {string} qualified class name\n */\n/* istanbul ignore next */const getQualifiedClassName = (cls, id, prefix) => {\n    cls = cls.replace(/^\\.*/, '');\n    return [`${prefix}-${cls}`, `${prefix}-${cls}-${id}`];\n};\n\n/**\n * This method is used to set the default value for variables\n * without sullying the code with conditional statements.\n *\n * @export\n * @param {any} param The parameter to test.\n * @param {any} value The default value to assign.\n * @return {any} The value.\n */\n/* istanbul ignore next */ const defaultValue = (param, value) => {\n    if (typeof param === 'undefined' || (typeof param === 'object' && !param)) {\n        return value;\n    }\n    return param;\n};\n\n/**\n * DESCRIPTION TODO\n *\n * @export\n * @param {Object} graph graph whose dependency order has to be generated\n * @return {Object}\n */\nconst getDependencyOrder = (graph) => {\n    const dependencyOrder = [];\n    const visited = {};\n    const keys = Object.keys(graph);\n    /**\n     * DESCRIPTION TODO\n     *\n     * @export\n     * @param {Object} name\n     * @return {Object}\n     */\n    const visit = (name) => {\n        if (dependencyOrder.length === keys.length) {\n            return true;\n        }\n        visited[name] = true;\n        const edges = graph[name];\n        for (let e = 0; e < edges.length; e++) {\n            const dep = edges[e];\n            if (!visited[dep]) {\n                visit(dep);\n            }\n        }\n\n        dependencyOrder.push(name);\n        return false;\n    };\n\n    for (let i = 0; i < keys.length; i++) {\n        if (visit(keys[i], i)) break;\n    }\n\n    return dependencyOrder;\n};\n\n/**\n * Iterates over the properties of an object and applies the function\n *\n * @param {any} obj object to be iterated upon\n * @param {any} fn  function to be applied on it\n */\nconst objectIterator = (obj, fn) => {\n    for (const key in obj) {\n        if (Object.hasOwnProperty.call(obj, key)) {\n            fn(key, obj);\n        }\n    }\n};\n\n/**\n * This class creates a d3 voronoi for retrieving the nearest neighbour of any point from a set of two\n * dimensional points\n * @class Voronoi\n */\n/* istanbul ignore next */ class Voronoi {\n    /**\n     * Initialize the voronoi with the data given.\n     * @param {Array.<Object>} data Array of points.\n     */\n    constructor (data = []) {\n        this._voronoi = voronoi().x(d => d.x).y(d => d.y);\n        this.data(data);\n    }\n\n    /**\n     * Sets the data to voronoi\n     * @param {Array.<Object>} data Array of objects.\n     * @return {Voronoi} Instance of voronoi.\n     */\n    data (data) {\n        if (data) {\n            this._voronoiFn = this._voronoi(data);\n        }\n        return this;\n    }\n\n    /**\n     * Finds the closest point to the x and y position given.\n     * @param {number} x x value\n     * @param {number} y y value\n     * @param {number} radius search radius.\n     * @return {Object} Details of the nearest point.\n     */\n    find (x, y, radius) {\n        return this._voronoiFn.find(x, y, radius);\n    }\n}\n\nconst addListenerToNamespace = (namespaceInf, fn, context) => {\n    let key = namespaceInf.key;\n    const namespace = namespaceInf.namespace;\n    if (namespace) {\n        !context._listeners[namespace] && (context._listeners[namespace] = []);\n        if (!key) {\n            key = Object.keys(context._listeners[namespace]).length;\n        }\n        context._listeners[namespace][key] = fn;\n    } else {\n        key = Object.keys(context._listeners).length;\n        context._listeners[key] = fn;\n    }\n};\n\n/**\n *\n *\n * @param {*} obj\n * @param {*} fields\n *\n */\nconst getObjProp = (obj, ...fields) => {\n    if (obj === undefined || obj === null) {\n        return obj;\n    }\n    let retObj = obj;\n    for (let i = 0, len = fields.length; i < len; i++) {\n        retObj = retObj[fields[i]];\n        if (retObj === undefined || retObj === null) {\n            break;\n        }\n    }\n    return retObj;\n};\n\n/**\n * Methods to handle changes to table configuration and reactivity are handled by this\n * class.\n */\n/**\n *  Common store class\n *\n * @class Store\n */\nclass Store {\n    /**\n     * Creates an instance of Store.\n     * @param {Object} config The object to create the state store with.\n     * @memberof Store\n     */\n    constructor (config) {\n        // create reactive model\n        this.model = Model.create(config);\n        this._listeners = {};\n    }\n\n    /**\n     * This method returns a plain JSON object\n     * with all the fields in the state store.\n     *\n     * @return {Object} Serialized representation of state store.\n     * @memberof Store\n     */\n    serialize () {\n        return this.model.serialize();\n    }\n\n    /**\n     * This method is used to update the value of a property in the state store.\n     *\n     * @param {string} propName The name of the property.\n     * @param {number} value The new value of the property.\n     * @memberof Store\n     */\n    commit (propName, value) {\n        // check if appropriate enum has been used\n        this.model.prop(propName, value);\n    }\n\n    /**\n     * This method is used to register a callbacl that will execute\n     * when one or more properties change.\n     *\n     * @param {string | Array} propNames name of property or array of props.\n     * @param {Function} callBack The callback to execute.\n     * @memberof Store\n     */\n    /* istanbul ignore next */registerChangeListener (propNames, callBack, instantCall, namespaceInf = {}) {\n        let props = propNames;\n        if (!Array.isArray(propNames)) {\n            props = [propNames];\n        }\n        const fn = this.model.next(props, callBack, instantCall);\n        addListenerToNamespace(namespaceInf, fn, this);\n        return this;\n    }\n    /**\n     * This method is used to register a callbacl that will execute\n     * when one or more properties change.\n     *\n     * @param {string | Array} propNames name of property or array of props.\n     * @param {Function} callBack The callback to execute.\n     * @memberof Store\n     */\n    /* istanbul ignore next */ registerImmediateListener (propNames, callBack, instantCall, namespaceInf = {}) {\n        let props = propNames;\n        if (!Array.isArray(propNames)) {\n            props = [propNames];\n        }\n        const fn = this.model.on(props, callBack, instantCall);\n        addListenerToNamespace(namespaceInf, fn, this);\n        return this;\n    }\n    /**\n     * This method is used to get the name of the property\n     * from the state store.\n     *\n     * @param {string} propName The name of the field in state store.\n     * @return {any} The value of the field.\n     * @memberof Store\n     */\n    get (propName) {\n        return this.model.prop(propName);\n    }\n\n    /**\n     * This method is used to register a computed property that is computed every time\n     * the store value changes.\n     *\n     * @param {string} propName The name of the property to create.\n     * @param {Function} callBack The function to execute when depemdent props change.\n     * @memberof Store\n     */\n    computed (propName, callBack) {\n        return this.model.calculatedProp(propName, callBack);\n    }\n\n    append (propName, value) {\n        this.model.append(propName, value);\n        return this;\n    }\n\n    unsubscribeAll () {\n        Object.values(this._listeners).forEach(fn => fn());\n        return this;\n    }\n\n    unsubscribe (namespaceInf = {}) {\n        const { namespace, key } = namespaceInf;\n        const listeners = this._listeners[namespace];\n        if (key) {\n            const fn = getObjProp(listeners, key);\n            fn && fn();\n        } else {\n            Object.values(listeners).forEach(fn => fn());\n            this._listeners[namespace] = [];\n        }\n        return this;\n    }\n}\n\n/**\n * Sanitize an input number / string mixed number. Currently dot in the no is not supported.\n *\n * @param {number | string} val pure number or string mixed number\n * @return {number | null}  Number if it can be extracted. Otherwise null\n */\nconst intSanitizer = (val) => {\n    const arr = val.toString().match(/(\\d+)(px)*/g);\n    if (!arr) {\n        // If only characters are passed\n        return null;\n    }\n\n    return parseInt(arr[0], 10);\n};\n\n/**\n * Setter getter creator from config\n * Format\n *  PROPERTRY_NAME: {\n *      value: // default value of the property,\n *      meta: {\n *          typeCheck: // The setter value will be checked using this. If the value is function then the setter value\n *                     // is passed as args. (Optional)\n *          typeExpected: // The output of typecheck action will be tested against this. Truthy value will set the\n *                       // value to the setter\n *          sanitizaiton: // Need for sanitization before type is checked\n *      }\n *  }\n *\n * @param {Object} holder an empty object on which the getters and setters will be mounted\n * @param {Object} options options config based on which the getters and setters are determined.\n * @param {Hyperdis} model optional model to attach the property. If not sent new moel is created.\n * @return {Array}\n */\nconst transactor = (holder, options, model, namespaceInf = {}) => {\n    let conf;\n    const store = model && model instanceof Model ? model : Model.create({});\n    const stateProps = {};\n    for (const prop in options) {\n        if ({}.hasOwnProperty.call(options, prop)) {\n            conf = options[prop];\n            const addAsMethod = conf.meta ? conf.meta.addAsMethod : true;\n            let nameSpaceProp;\n            const namespace = namespaceInf.namespace;\n            if (namespace) {\n                nameSpaceProp = `${namespace}.${prop}`;\n            } else {\n                nameSpaceProp = prop;\n            }\n\n            stateProps[prop] = conf.value;\n            if (addAsMethod !== false) {\n                holder[prop] = ((context, meta, nsProp) => (...params) => {\n                    let val;\n                    let compareTo;\n                    const paramsLen = params.length;\n                    const prevVal = store.prop(nsProp);\n                    if (paramsLen) {\n                        // If parameters are passed then it's a setter\n                        const spreadParams = meta && meta.spreadParams;\n                        val = params;\n                        const values = [];\n                        if (meta) {\n                            for (let i = 0; i < paramsLen; i++) {\n                                val = params[i];\n                                const sanitization = meta.sanitization && (spreadParams ? meta.sanitization[i] :\n                                    meta.sanitization);\n                                const typeCheck = meta.typeCheck && (spreadParams ? meta.typeCheck[i] : meta.typeCheck);\n                                if (sanitization && typeof sanitization === 'function') {\n                                    // Sanitize if required\n                                    val = sanitization(val, prevVal, holder);\n                                }\n\n                                if (typeCheck) {\n                                    // Checking if a setter is valid\n                                    if (typeof typeCheck === 'function') {\n                                        let typeExpected = meta.typeExpected;\n                                        if (typeExpected && spreadParams) {\n                                            typeExpected = typeExpected[i];\n                                        }\n                                        if (typeExpected) {\n                                            compareTo = typeExpected;\n                                        } else {\n                                            compareTo = true;\n                                        }\n\n                                        if (typeCheck(val) === compareTo) {\n                                            values.push(val);\n                                        }\n                                    } else if (typeof typeCheck === 'string') {\n                                        if (typeCheck === 'constructor') {\n                                            const typeExpected = spreadParams ? meta.typeExpected[i] :\n                                                meta.typeExpected;\n                                            if (val && (val.constructor.name === typeExpected)) {\n                                                values.push(val);\n                                            }\n                                        }\n                                    } else {\n                                        // context.prop(key, val);\n                                        values.push(val);\n                                    }\n                                } else {\n                                    values.push(val);\n                                }\n                            }\n                            const preset = meta.preset;\n                            const oldValues = context.prop(nsProp);\n                            preset && preset(values[0], holder);\n                            if (spreadParams) {\n                                oldValues.forEach((value, i) => {\n                                    if (values[i] === undefined) {\n                                        values[i] = value;\n                                    }\n                                });\n                            }\n                            values.length && context.prop(nsProp, spreadParams ? values : values[0]);\n                        } else {\n                            context.prop(nsProp, spreadParams ? val : val[0]);\n                        }\n                        return holder;\n                    }\n                // No parameters are passed hence its a getter\n                    return context.prop(nsProp);\n                })(store, conf.meta, nameSpaceProp);\n            }\n        }\n    }\n\n    if (namespaceInf.namespace === undefined) {\n        store.append(stateProps);\n    } else {\n        const namespace = namespaceInf.namespace;\n        store.append(namespace, stateProps);\n    }\n\n    return [holder, store];\n};\n\n/**\n *\n *\n * @param {*} context\n * @param {*} props\n */\nconst generateGetterSetters = (context, props) => {\n    Object.entries(props).forEach((propInfo) => {\n        const prop = propInfo[0];\n        const typeChecker = propInfo[1].typeChecker;\n        const defVal = propInfo[1].defaultValue;\n        const sanitization = propInfo[1].sanitization;\n        const preset = propInfo[1].preset;\n        const prototype = context.constructor.prototype;\n        if (!(Object.hasOwnProperty.call(prototype, prop))) {\n            if (defVal) {\n                context[`_${prop}`] = defVal;\n            }\n            context[prop] = (...params) => {\n                if (params.length) {\n                    let value = params[0];\n                    if (sanitization) {\n                        value = sanitization(context, params[0]);\n                    }\n                    if (preset) {\n                        preset(context, value);\n                    }\n                    if (typeChecker && !typeChecker(value)) {\n                        return context[`_${prop}`];\n                    }\n                    context[`_${prop}`] = value;\n                    return context;\n                } return context[`_${prop}`];\n            };\n        }\n    });\n};\n\n/**\n *\n *\n * @param {*} arr\n * @param {*} prop\n */\nconst getArraySum = (arr, prop) => arr.reduce((total, elem) => {\n    total += prop ? elem[prop] : elem;\n    return total;\n}, 0);\n\n/**\n *\n *\n * @param {*} arr1\n * @param {*} arr2\n *\n */\nconst arraysEqual = (arr1, arr2) => {\n    if (arr1.length !== arr2.length) { return false; }\n    for (let i = arr1.length; i >= 0; i--) {\n        if (arr1[i] !== arr2[i]) { return false; }\n    }\n\n    return true;\n};\n\n/* eslint valid-typeof:0 */\n/**\n * Returns a validation function which can be used to validate variables against a type and value\n *\n * @param {any} type type of value that the object should have\n * @return {Object} validation function\n */\nconst isEqual = type => (oldVal, newVal) => {\n    if (type === 'Array') {\n        if (!oldVal) {\n            return false;\n        }\n        return arraysEqual(oldVal, newVal);\n    } else if (type === 'Object') {\n        return Object.is(oldVal, newVal);\n    } return oldVal === newVal;\n};\n\n/**\n * Description @todo\n *\n * @param {any} transactionModel @todo\n * @param {any} transactionEndpoint @todo\n * @param {any} transactionItems @todo\n * @return {any} @todo\n */\nconst enableChainedTransaction = (transactionModel, transactionEndpoint, transactionItems) =>\n    transactionItems.forEach(item => transactionModel.on(item, ([, newVal]) => transactionEndpoint[item](newVal)));\n\n/**\n * Chceks if the element is istanceof HTMLElement\n *\n * @param {Object} elem any JS Object\n */\nconst isHTMLElem = elem => elem instanceof HTMLElement;\n\nconst ERROR_MSG = {\n    INTERFACE_IMPL: 'Method not implemented'\n};\n\n/**\n * Merges the sink object in the source by recursively iterating through the object properties\n * @param {Object} source Source Object\n * @param {Object} sink Sink Object\n * @return {Object} Merged object\n */\nconst mergeRecursive = (source, sink) => {\n    for (const prop in sink) {\n        if (isSimpleObject(source[prop]) && isSimpleObject(sink[prop])) {\n            mergeRecursive(source[prop], sink[prop]);\n        } else if (sink[prop] instanceof Object && sink[prop].constructor === Object) {\n            source[prop] = {};\n            mergeRecursive(source[prop], sink[prop]);\n        } else {\n            source[prop] = sink[prop];\n        }\n    }\n    return source;\n};\n\n/**\n * Creates a selection set from a data set with corresponding attributes\n *\n * @export\n * @param {Selection} sel contains previous selection\n * @param {Object} appendObj Object to be appended\n * @param {Array} data Data based on which the selection is entered/updated/removed\n * @param {Object} [attrs={}] Attributes to be set on the data\n * @return {Selection} Merged selection\n */\nconst createSelection = (sel, appendObj, data, idFn) => {\n    let selection = sel || dataSelect(idFn);\n\n    selection = selection.data(data);\n\n    const enter = selection.enter().append(appendObj);\n    const mergedSelection = enter.merge(selection);\n\n    const exitSelection = selection.exit();\n    exitSelection.getObjects().forEach(inst => inst.remove());\n    exitSelection.remove();\n    return mergedSelection;\n};\n\nconst interpolateArray = (data, fitCount) => {\n    const linearInterpolate = function (before, after, atPoint) {\n        return before + (after - before) * atPoint;\n    };\n    const newData = [];\n    const springFactor = ((data.length - 1) / (fitCount - 1));\n    newData[0] = data[0]; // for new allocation\n    for (let i = 1; i < fitCount - 1; i++) {\n        const tmp = i * springFactor;\n        const before = (Math.floor(tmp)).toFixed();\n        const after = (Math.ceil(tmp)).toFixed();\n        const atPoint = tmp - before;\n        newData[i] = linearInterpolate(data[before], data[after], atPoint);\n    }\n    newData[fitCount - 1] = data[data.length - 1]; // for new allocation\n    return newData;\n};\n\n/**\n *\n *\n * @param {*} fn\n */\nconst nextFrame = (fn) => {\n    setTimeout(() => {\n        fn();\n    }, 0);\n};\n\n/**\n *\n *\n * @param {*} angle\n */\nconst angleToRadian = angle => angle * Math.PI / 180;\n\n/**\n *\n *\n * @param {*} newName\n * @param {*} oldName\n */\nconst replaceCSSPrefix = () => {\n    // @todo\n};\n\n/**\n * Gets the  interpolator function from d3 color\n *\n */\nconst interpolator = () => interpolate;\n\n/**\n * Gets the number interpolator from d3 color\n *\n */\nconst numberInterpolator = () => interpolateNumber;\n\n/**\n * Gets the rgb interpolator from d3 color\n *\n */\nconst colorInterpolator = () => interpolateRgb;\n\n/**\n * Gets the hsl interpolator from d3 color\n *\n */\nconst hslInterpolator = () => interpolateHslLong;\n\nconst transformColors = () => ({\n    color,\n    rgb,\n    hsl\n});\n\n/**\n * Gets the piecewise interpolator from d3 color\n *\n */\nconst piecewiseInterpolator = () => piecewise;\n\nfunction hue2rgb (p, q, t) {\n    if (t < 0) t += 1;\n    if (t > 1) t -= 1;\n    if (t < 1 / 6) return p + (q - p) * 6 * t;\n    if (t < 1 / 2) return q;\n    if (t < 2 / 3) return p + (q - p) * (2 / 3 - t) * 6;\n    return p;\n}\n\n  /**\n   * Converts an HSL color value to RGB. Conversion formula\n   * adapted from http://en.wikipedia.org/wiki/HSL_color_space.\n   * Assumes h, s, and l are contained in the set [0, 1] and\n   * returns r, g, and b in the set [0, 255].\n   *\n   * @param   Number  h       The hue\n   * @param   Number  s       The saturation\n   * @param   Number  l       The lightness\n   * @return  Array           The RGB representation\n   */\nconst hslToRgb = (h, s, l, a = 1) => {\n    let r;\n    let g;\n    let b;\n\n    if (s === 0) {\n        r = g = b = l; // achromatic\n    } else {\n        const q = l < 0.5 ? l * (1 + s) : l + s - l * s;\n        const p = 2 * l - q;\n\n        r = hue2rgb(p, q, h + 1 / 3);\n        g = hue2rgb(p, q, h);\n        b = hue2rgb(p, q, h - 1 / 3);\n    }\n\n    return [r * 255, g * 255, b * 255, a];\n};\n\n  /**\n   * Converts an RGB color value to HSV. Conversion formula\n   * adapted from http://en.wikipedia.org/wiki/HSV_color_space.\n   * Assumes r, g, and b are contained in the set [0, 255] and\n   * returns h, s, and v in the set [0, 1].\n   *\n   * @param   Number  r       The red color value\n   * @param   Number  g       The green color value\n   * @param   Number  b       The blue color value\n   * @return  Array           The HSV representation\n   */\nconst rgbToHsv = (r, g, b, a = 1) => {\n    r = +r; g = +g; b = +b; a = +a;\n    r /= 255; g /= 255; b /= 255;\n    const max = Math.max(r, g, b);\n    const min = Math.min(r, g, b);\n    let h;\n    let s;\n    const l = (max + min) / 2;\n\n    if (max === min) {\n        h = s = 0; // achromatic\n    } else {\n        const d = max - min;\n        s = l > 0.5 ? d / (2 - max - min) : d / (max + min);\n        switch (max) {\n        case r: h = (g - b) / d + (g < b ? 6 : 0); break;\n        case g: h = (b - r) / d + 2; break;\n        case b: h = (r - g) / d + 4; break;\n        default: break;\n        }\n        h /= 6;\n    }\n    return [h, s, l, a];\n};\n\n  /**\n   * Converts an HSV color value to RGB. Conversion formula\n   * adapted from http://en.wikipedia.org/wiki/HSV_color_space.\n   * Assumes h, s, and v are contained in the set [0, 1] and\n   * returns r, g, and b in the set [0, 255].\n   *\n   * @param   Number  h       The hue\n   * @param   Number  s       The saturation\n   * @param   Number  v       The value\n   * @return  Array           The RGB representation\n   */\nconst hsvToRgb = (h, s, v, a = 1) => {\n    let r;\n    let g;\n    let b;\n\n    const i = Math.floor(h * 6);\n    const f = h * 6 - i;\n    const p = v * (1 - s);\n    const q = v * (1 - f * s);\n    const t = v * (1 - (1 - f) * s);\n\n    switch (i % 6) {\n    case 0: r = v; g = t; b = p; break;\n    case 1: r = q; g = v; b = p; break;\n    case 2: r = p; g = v; b = t; break;\n    case 3: r = p; g = q; b = v; break;\n    case 4: r = t; g = p; b = v; break;\n    case 5: r = v; g = p; b = q; break;\n    default: break;\n    }\n\n    return [r * 255, g * 255, b * 255, a];\n};\n\nconst hexToHsv = (hex) => {\n    const shorthandRegex = /^#?([a-f\\d])([a-f\\d])([a-f\\d])$/i;\n    hex = hex.replace(shorthandRegex, (m, r, g, b) => r + r + g + g + b + b);\n\n    const result = /^#?([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})$/i.exec(hex);\n    return result ? rgbToHsv(parseInt(result[1], 16), parseInt(result[2], 16), parseInt(result[3], 16)) : '';\n};\n\nconst detectColor = (col) => {\n    const matchRgb = /rgb\\((\\d{1,3}), (\\d{1,3}), (\\d{1,3})\\)/;\n    const matchHsl = /hsl\\((\\d+),\\s*([\\d.]+)%,\\s*([\\d.]+)%\\)/g;\n\n    // Source :  https://gist.github.com/sethlopezme/d072b945969a3cc2cc11\n     // eslint-disable-next-line\n    const matchRgba = /rgba?\\(((25[0-5]|2[0-4]\\d|1\\d{1,2}|\\d\\d?)\\s*,\\s*?){2}(25[0-5]|2[0-4]\\d|1\\d{1,2}|\\d\\d?)\\s*,?\\s*([01]\\.?\\d*?)?\\)/;\n     // eslint-disable-next-line\n    const matchHsla = /^hsla\\((\\d.+),\\s*([\\d.]+)%,\\s*([\\d.]+)%,\\s*(\\d*(?:\\.\\d+)?)\\)$/;\n    const matchHex = /^#([0-9a-f]{3}){1,2}$/i;\n\n    if (matchRgb.test(col) || matchRgba.test(col)) {\n        return 'rgb';\n    } else if (matchHsl.test(col) || matchHsla.test(col)) {\n        return 'hsl';\n    } else if (matchHex.test(col)) {\n        return 'hex';\n    } return col;\n};\n\n/**\n *\n *\n * @param {*} model\n * @param {*} propModel\n *\n */\nconst filterPropagationModel = (model, propModel, measures) => {\n    const { data, schema } = propModel.getData();\n    let filteredModel;\n    if (schema.length) {\n        const fieldMap = model.getFieldsConfig();\n        filteredModel = model.select((fields) => {\n            const include = data.some(row => schema.every((propField, idx) => {\n                if (!measures && (!(propField.name in fieldMap) ||\n                        fieldMap[propField.name].def.type === FieldType.MEASURE)) {\n                    return true;\n                }\n                return row[idx] === fields[propField.name].valueOf();\n            }));\n            return include;\n        }, {\n            saveChild: false\n        });\n    } else {\n        filteredModel = propModel;\n    }\n\n    return filteredModel;\n};\n\nconst assembleModelFromIdentifiers = (model, identifiers) => {\n    let schema = [];\n    let data;\n    const fieldMap = model.getFieldsConfig();\n    if (identifiers.length) {\n        const fields = identifiers[0];\n        const len = fields.length;\n        for (let i = 0; i < len; i++) {\n            const field = fields[i];\n            const fieldObj = fieldMap[field] && Object.assign({}, fieldMap[field].def);\n            if (fieldObj) {\n                schema.push(Object.assign(fieldObj));\n            }\n        }\n\n        data = [];\n        const header = identifiers[0];\n        for (let i = 1; i < identifiers.length; i += 1) {\n            const vals = identifiers[i];\n            const temp = {};\n            vals.forEach((fieldVal, cIdx) => {\n                temp[header[cIdx]] = fieldVal;\n            });\n            data.push(temp);\n        }\n    } else {\n        data = [];\n        schema = [];\n    }\n\n    return new model.constructor(data, schema);\n};\n\n/**\n *\n *\n * @param {*} dataModel\n * @param {*} criteria\n *\n */\nconst getDataModelFromRange = (dataModel, criteria, mode) => {\n    if (criteria === null) {\n        return null;\n    }\n    const selFields = Object.keys(criteria);\n    const selFn = fields => selFields.every((field) => {\n        const val = fields[field].value;\n        const range = criteria[field][0] instanceof Array ? criteria[field][0] : criteria[field];\n        if (typeof range[0] === 'string') {\n            return range.find(d => d === val) !== undefined;\n        }\n        return range ? val >= range[0] && val <= range[1] : true;\n    });\n\n    return dataModel.select(selFn, {\n        saveChild: false,\n        mode\n    });\n};\n\n/**\n *\n *\n * @param {*} dataModel\n * @param {*} identifiers\n *\n */\nconst getDataModelFromIdentifiers = (dataModel, identifiers, mode) => {\n    let filteredDataModel;\n    if (identifiers instanceof Array) {\n        const fieldsConfig = dataModel.getFieldsConfig();\n\n        const dataArr = identifiers.slice(1, identifiers.length);\n        if (identifiers instanceof Function) {\n            filteredDataModel = identifiers(dataModel, {}, false);\n        } else if (identifiers instanceof Array && identifiers[0].length) {\n            const filteredSchema = identifiers[0].filter(d => d in fieldsConfig);\n            filteredDataModel = dataModel.select((fields) => {\n                let include = true;\n                filteredSchema.forEach((propField, idx) => {\n                    const value = fields[propField].valueOf();\n                    const index = dataArr.findIndex(d => d[idx] === value);\n                    include = include && index !== -1;\n                });\n                return include;\n            }, {\n                saveChild: false,\n                mode\n            });\n        }\n    } else {\n        filteredDataModel = getDataModelFromRange(dataModel, identifiers, mode);\n    }\n    return filteredDataModel;\n};\n\n/**\n *\n *\n * @param {*} context\n * @param {*} listenerMap\n */\nconst registerListeners = (context, listenerMap, ...params) => {\n    const propListenerMap = listenerMap(context, ...params);\n    for (const key in propListenerMap) {\n        if ({}.hasOwnProperty.call(propListenerMap, key)) {\n            const namespace = params[0];\n            let ns = null;\n            if (namespace) {\n                ns = namespace.local;\n            }\n            const mapObj = propListenerMap[key];\n            const propType = mapObj.type;\n            const props = mapObj.props;\n            const listenerFn = mapObj.listener;\n            context.store()[propType](props, listenerFn, false, {\n                namespace: ns\n            });\n        }\n    }\n};\n\nconst isValidValue = value => !isNaN(value) && value !== -Infinity && value !== Infinity;\n/**\n *\n *\n * @param {*} str\n *\n */\nconst escapeHTML = (str) => {\n    const htmlEscapes = {\n        '&': '&amp;',\n        '<': '&lt;',\n        '>': '&gt;',\n        '\"': '&quot;',\n        \"'\": '&#x27;',\n        '/': '&#x2F;'\n    };\n    const htmlEscaper = /[&<>\"'/]/g;\n    return (`${str}`).replace(htmlEscaper, match => htmlEscapes[match]);\n};\n\n/**\n *\n *\n * @param {*} arr\n */\nconst transposeArray = arr => arr[0].map((col, i) => arr.map(row => row[i]));\nconst toArray = arr => (arr instanceof Array ? arr : [arr]);\nconst extendsClass = (cls, extendsFrom, found) => {\n    if (!cls) {\n        return false;\n    }\n    const prototype = cls.prototype;\n    if (prototype instanceof extendsFrom) {\n        found = true;\n    } else {\n        found = extendsClass(prototype, extendsFrom, found);\n    }\n    return found;\n};\n\n/**\n *\n * @param {*} dm1\n * @param {*} dm2\n */\nconst concatModels = (dm1, dm2) => {\n    const dataObj1 = dm1.getData();\n    const dataObj2 = dm2.getData();\n    const data1 = dataObj1.data;\n    const data2 = dataObj2.data;\n    const schema1 = dataObj1.schema;\n    const schema2 = dataObj2.schema;\n    const tuples1 = {};\n    const tuples2 = {};\n    const commonTuples = {};\n    for (let i = 0; i < data1.length; i++) {\n        for (let ii = 0; ii < data2.length; ii++) {\n            const row1 = data1[i];\n            const row2 = data2[ii];\n            const dim1Values = row1.filter((d, idx) => schema1[idx].type === FieldType.DIMENSION);\n            const dim2Values = row2.filter((d, idx) => schema2[idx].type === FieldType.DIMENSION);\n            const allDimSame = dim1Values.every(value => dim2Values.indexOf(value) !== -1);\n            if (allDimSame) {\n                const key = dim1Values.join();\n                !commonTuples[key] && (commonTuples[key] = {});\n                row1.forEach((value, idx) => {\n                    commonTuples[key][schema1[idx].name] = value;\n                });\n                row2.forEach((value, idx) => {\n                    commonTuples[key][schema2[idx].name] = value;\n                });\n            } else {\n                const dm1Key = dim1Values.join();\n                const dm2Key = dim2Values.join();\n                if (!commonTuples[dm1Key] && !commonTuples[dm2Key]) {\n                    !tuples1[dm1Key] && (tuples1[dm1Key] = {});\n                    !tuples2[dm2Key] && (tuples2[dm2Key] = {});\n                    row1.forEach((value, idx) => {\n                        tuples1[dm1Key][schema1[idx].name] = value;\n                    });\n                    row2.forEach((value, idx) => {\n                        tuples2[dm2Key][schema2[idx].name] = value;\n                    });\n                }\n            }\n        }\n    }\n\n    const commonSchema = [...schema1, ...schema2.filter(s2 => schema1.findIndex(s1 => s1.name === s2.name) === -1)];\n    const data = [...Object.values(tuples1), ...Object.values(tuples2), ...Object.values(commonTuples)];\n    return [data, commonSchema];\n};\n\nconst getSymbol = type => symbol().type(symbolFns[type]);\n\nconst stackOrders = {\n    [STACK_CONFIG.ORDER_NONE]: stackOrderNone,\n    [STACK_CONFIG.ORDER_ASCENDING]: stackOrderAscending,\n    [STACK_CONFIG.ORDER_DESCENDING]: stackOrderDescending\n};\nconst stackOffsets = {\n    [STACK_CONFIG.OFFSET_DIVERGING]: stackOffsetDiverging,\n    [STACK_CONFIG.OFFSET_NONE]: stackOffsetNone,\n    [STACK_CONFIG.OFFSET_EXPAND]: stackOffsetExpand,\n    [STACK_CONFIG.OFFSET_WIGGLE]: stackOffsetWiggle\n};\n\n// eslint-disable-next-line require-jsdoc\nconst stack = params => d3Stack().keys(params.keys).offset(stackOffsets[params.offset])\n                .order(stackOrders[params.order])(params.data);\n\n/**\n * Groups the data into a hierarchical tree structure based on one or more fields.\n * @param { Object } params Configuration properties for nesting data\n * @param { Array.<Array> } params.data Data which needs to be grouped\n * @param { Array.<number> } params.keys Field indices by which the data will be grouped\n * @return { Array.<Object> } Grouped data array\n */\nconst nestCollection = (params) => {\n    const nestFn = nest();\n    params.keys.forEach(key => nestFn.key(d => d[key]));\n    return nestFn.entries(params.data);\n};\n\nconst pathInterpolators = {\n    curveLinear,\n    curveStepAfter,\n    curveStepBefore,\n    curveStep,\n    curveCatmullRom,\n    stepAfter: curveStepAfter,\n    catmullRom: curveCatmullRom,\n    step: curveStep,\n    stepBefore: curveStepBefore,\n    linear: curveLinear\n};\n\nconst Symbols = {\n    axisLeft,\n    axisRight,\n    axisTop,\n    axisBottom,\n    line,\n    area,\n    pie,\n    arc,\n    nest\n};\n\nconst Scales = {\n    band: scaleBand\n};\n\nconst getSmallestDiff = (points) => {\n    points = points.sort((a, b) => a - b);\n    let minDiff = points[1] - points[0];\n    for (let i = 2; i < points.length; i++) {\n        minDiff = Math.min(minDiff, points[i] - points[i - 1]);\n    }\n\n    return minDiff;\n};\n\nconst timeFormats = {\n    millisecond: '%A, %b %e, %H:%M:%S.%L',\n    second: '%A, %b %e, %H:%M:%S',\n    minute: '%A, %b %e, %H:%M',\n    hour: '%A, %b %e, %H:%M',\n    day: '%A, %b %e, %Y',\n    month: '%B %Y',\n    year: '%Y'\n};\n\nconst timeDurations = [\n    ['millisecond', 'second', 'minute', 'hour', 'day', 'month', 'year'],\n    [1, 1000, 60000, 3600000, 86400000, 2592000000, 31536000000]\n];\n\nconst getNearestInterval = (interval) => {\n    const index = getClosestIndexOf(timeDurations[1], interval);\n    return timeDurations[0][index];\n};\n\nconst formatTemporal = (value, interval) => {\n    const nearestInterval = getNearestInterval(interval);\n    return DateTimeFormatter.formatAs(value, timeFormats[nearestInterval]);\n};\n\nconst temporalFields = (dataModel) => {\n    const filteredFields = {};\n    Object.entries(dataModel.getFieldspace().getDimension()).forEach(([fieldName, fieldObj]) => {\n        if (fieldObj.subtype() === DimensionSubtype.TEMPORAL) {\n            filteredFields[fieldName] = fieldObj;\n        }\n    });\n    return filteredFields;\n};\n\nconst require = (lookupWhat, lookupDetails) => ({\n    resolvable: (store) => {\n        const lookupTarget = store[lookupWhat];\n        const depArr = lookupDetails.slice(0, lookupDetails.length - 1);\n        const fn = lookupDetails[lookupDetails.length - 1]; // fn\n\n        const deps = depArr.map(str => lookupTarget[str]);\n        return {\n            fn: fn(...deps),\n            depArr\n        };\n    }\n});\n\nconst nextAnimFrame = window.requestAnimationFrame || window.webkitRequestAnimationFrame ||\n    window.mozRequestAnimationFrame || window.oRequestAnimationFrame || window.msRequestAnimationFrame ||\n    function (callback) {\n        setTimeout(callback, 16);\n    };\n\nconst getValueParser = config => (val) => {\n    if (val instanceof InvalidAwareTypes) {\n        return val in config ? config[val] : `${val}`;\n    }\n    return val;\n};\n\nconst retrieveNearestGroupByReducers = (dataModel, ...measureFieldNames) => {\n    const filteredReducers = {};\n    if (dataModel instanceof DataModel) {\n        const derivations = [...dataModel.getDerivations().reverse(), ...dataModel.getAncestorDerivations().reverse()];\n        const nearestReducers = defaultValue(\n            getObjProp(derivations.find(derv => derv.op === DM_DERIVATIVES.GROUPBY), 'criteria'), {});\n\n        const measures = dataModel.getFieldspace().getMeasure();\n        measureFieldNames = measureFieldNames.length ? measureFieldNames : Object.keys(measures);\n        measureFieldNames.forEach((measureName) => {\n            if (nearestReducers[measureName]) {\n                filteredReducers[measureName] = nearestReducers[measureName];\n            } else {\n                const measureField = measures[measureName];\n                if (measureField) {\n                    filteredReducers[measureName] = measureField.defAggFn();\n                }\n            }\n        });\n    }\n    return filteredReducers;\n};\n\nconst retrieveFieldDisplayName = (dm, fieldName) => dm.getFieldspace().fieldsObj()[fieldName].displayName();\n/**\n * Fetches the nearest sort operation details by traversing the chain of parent DataModels\n * @param {Object} dataModel Instance of DataModel\n *\n * @return {Array|null} sort criteria, null if no sort operation found\n */\nconst nearestSortingDetails = (dataModel) => {\n    const allDerivations = [...dataModel.getAncestorDerivations(), ...dataModel.getDerivations()];\n    const nearestSortDerivation = allDerivations.reverse().find(derivation => derivation.op === DM_DERIVATIVES.SORT);\n\n    return nearestSortDerivation ? nearestSortDerivation.criteria : null;\n};\n\nexport {\n    getValueParser,\n    require,\n    Scales,\n    Symbols,\n    pathInterpolators,\n    stack,\n    nestCollection,\n    getSymbol,\n    transformColors,\n    detectColor,\n    hexToHsv,\n    hslToRgb,\n    rgbToHsv,\n    hsvToRgb,\n    concatModels,\n    toArray,\n    angleToRadian,\n    escapeHTML,\n    generateGetterSetters,\n    getArraySum,\n    interpolator,\n    piecewiseInterpolator,\n    getDataModelFromIdentifiers,\n    getDataModelFromRange,\n    colorInterpolator,\n    numberInterpolator,\n    ERROR_MSG,\n    reqAnimFrame,\n    nextAnimFrame,\n    filterPropagationModel,\n    transposeArray,\n    cancelAnimFrame,\n    getMax,\n    getMin,\n    getDomainFromData,\n    getUniqueId,\n    mergeRecursive,\n    unionDomain,\n    symbolFns,\n    easeFns,\n    clone,\n    isEqual,\n    interpolateArray,\n    getMinPoint,\n    defaultValue,\n    getMaxPoint,\n    getClosestIndexOf,\n    Voronoi,\n    checkExistence,\n    sanitizeIP,\n    getMinDiff,\n    capitalizeFirst,\n    getWindow,\n    getQualifiedClassName,\n    Store,\n    getDependencyOrder,\n    objectIterator,\n    intSanitizer,\n    transactor,\n    enableChainedTransaction,\n    isHTMLElem,\n    isSimpleObject,\n    nextFrame,\n    registerListeners,\n    replaceCSSPrefix,\n    getObjProp,\n    extendsClass,\n    assembleModelFromIdentifiers,\n    isValidValue,\n    hslInterpolator,\n    getSmallestDiff,\n    getNearestValue,\n    retrieveNearestGroupByReducers,\n    nearestSortingDetails,\n    createSelection,\n    formatTemporal,\n    temporalFields,\n    retrieveFieldDisplayName\n};\n","export function linear(t) {\n  return +t;\n}\n","export function circleIn(t) {\n  return 1 - Math.sqrt(1 - t * t);\n}\n\nexport function circleOut(t) {\n  return Math.sqrt(1 - --t * t);\n}\n\nexport function circleInOut(t) {\n  return ((t *= 2) <= 1 ? 1 - Math.sqrt(1 - t * t) : Math.sqrt(1 - (t -= 2) * t) + 1) / 2;\n}\n","import Selection from './selection';\n/**\n * This function applies a selection operation on a data array.\n *\n * @export\n * @param {Array} [data=[]] The data array to be observed.\n * @return {Selection} Instance of a selection.\n */\nexport default function dataSelect (idFn) {\n    return new Selection(idFn);\n}\n\n","import {path} from \"d3-path\";\nimport circle from \"./symbol/circle\";\nimport cross from \"./symbol/cross\";\nimport diamond from \"./symbol/diamond\";\nimport star from \"./symbol/star\";\nimport square from \"./symbol/square\";\nimport triangle from \"./symbol/triangle\";\nimport wye from \"./symbol/wye\";\nimport constant from \"./constant\";\n\nexport var symbols = [\n  circle,\n  cross,\n  diamond,\n  square,\n  star,\n  triangle,\n  wye\n];\n\nexport default function() {\n  var type = constant(circle),\n      size = constant(64),\n      context = null;\n\n  function symbol() {\n    var buffer;\n    if (!context) context = buffer = path();\n    type.apply(this, arguments).draw(context, +size.apply(this, arguments));\n    if (buffer) return context = null, buffer + \"\" || null;\n  }\n\n  symbol.type = function(_) {\n    return arguments.length ? (type = typeof _ === \"function\" ? _ : constant(_), symbol) : type;\n  };\n\n  symbol.size = function(_) {\n    return arguments.length ? (size = typeof _ === \"function\" ? _ : constant(+_), symbol) : size;\n  };\n\n  symbol.context = function(_) {\n    return arguments.length ? (context = _ == null ? null : _, symbol) : context;\n  };\n\n  return symbol;\n}\n","import ascending from \"./ascending\";\n\nexport default function(series) {\n  return ascending(series).reverse();\n}\n","export default function(series, order) {\n  if (!((n = series.length) > 1)) return;\n  for (var i, j = 0, d, dy, yp, yn, n, m = series[order[0]].length; j < m; ++j) {\n    for (yp = yn = 0, i = 0; i < n; ++i) {\n      if ((dy = (d = series[order[i]][j])[1] - d[0]) >= 0) {\n        d[0] = yp, d[1] = yp += dy;\n      } else if (dy < 0) {\n        d[1] = yn, d[0] = yn += dy;\n      } else {\n        d[0] = yp;\n      }\n    }\n  }\n}\n","import none from \"./none\";\n\nexport default function(series, order) {\n  if (!((n = series.length) > 0)) return;\n  for (var i, n, j = 0, m = series[0].length, y; j < m; ++j) {\n    for (y = i = 0; i < n; ++i) y += series[i][j][1] || 0;\n    if (y) for (i = 0; i < n; ++i) series[i][j][1] /= y;\n  }\n  none(series, order);\n}\n","import none from \"./none\";\n\nexport default function(series, order) {\n  if (!((n = series.length) > 0) || !((m = (s0 = series[order[0]]).length) > 0)) return;\n  for (var y = 0, j = 1, s0, m, n; j < m; ++j) {\n    for (var i = 0, s1 = 0, s2 = 0; i < n; ++i) {\n      var si = series[order[i]],\n          sij0 = si[j][1] || 0,\n          sij1 = si[j - 1][1] || 0,\n          s3 = (sij0 - sij1) / 2;\n      for (var k = 0; k < i; ++k) {\n        var sk = series[order[k]],\n            skj0 = sk[j][1] || 0,\n            skj1 = sk[j - 1][1] || 0;\n        s3 += skj0 - skj1;\n      }\n      s1 += sij0, s2 += s3 * sij0;\n    }\n    s0[j - 1][1] += s0[j - 1][0] = y;\n    if (s1) y -= s2 / s1;\n  }\n  s0[j - 1][1] += s0[j - 1][0] = y;\n  none(series, order);\n}\n","import constant from \"./constant\";\nimport descending from \"./descending\";\nimport identity from \"./identity\";\nimport {tau} from \"./math\";\n\nexport default function() {\n  var value = identity,\n      sortValues = descending,\n      sort = null,\n      startAngle = constant(0),\n      endAngle = constant(tau),\n      padAngle = constant(0);\n\n  function pie(data) {\n    var i,\n        n = data.length,\n        j,\n        k,\n        sum = 0,\n        index = new Array(n),\n        arcs = new Array(n),\n        a0 = +startAngle.apply(this, arguments),\n        da = Math.min(tau, Math.max(-tau, endAngle.apply(this, arguments) - a0)),\n        a1,\n        p = Math.min(Math.abs(da) / n, padAngle.apply(this, arguments)),\n        pa = p * (da < 0 ? -1 : 1),\n        v;\n\n    for (i = 0; i < n; ++i) {\n      if ((v = arcs[index[i] = i] = +value(data[i], i, data)) > 0) {\n        sum += v;\n      }\n    }\n\n    // Optionally sort the arcs by previously-computed values or by data.\n    if (sortValues != null) index.sort(function(i, j) { return sortValues(arcs[i], arcs[j]); });\n    else if (sort != null) index.sort(function(i, j) { return sort(data[i], data[j]); });\n\n    // Compute the arcs! They are stored in the original data's order.\n    for (i = 0, k = sum ? (da - n * pa) / sum : 0; i < n; ++i, a0 = a1) {\n      j = index[i], v = arcs[j], a1 = a0 + (v > 0 ? v * k : 0) + pa, arcs[j] = {\n        data: data[j],\n        index: i,\n        value: v,\n        startAngle: a0,\n        endAngle: a1,\n        padAngle: p\n      };\n    }\n\n    return arcs;\n  }\n\n  pie.value = function(_) {\n    return arguments.length ? (value = typeof _ === \"function\" ? _ : constant(+_), pie) : value;\n  };\n\n  pie.sortValues = function(_) {\n    return arguments.length ? (sortValues = _, sort = null, pie) : sortValues;\n  };\n\n  pie.sort = function(_) {\n    return arguments.length ? (sort = _, sortValues = null, pie) : sort;\n  };\n\n  pie.startAngle = function(_) {\n    return arguments.length ? (startAngle = typeof _ === \"function\" ? _ : constant(+_), pie) : startAngle;\n  };\n\n  pie.endAngle = function(_) {\n    return arguments.length ? (endAngle = typeof _ === \"function\" ? _ : constant(+_), pie) : endAngle;\n  };\n\n  pie.padAngle = function(_) {\n    return arguments.length ? (padAngle = typeof _ === \"function\" ? _ : constant(+_), pie) : padAngle;\n  };\n\n  return pie;\n}\n","export var xhtml = \"http://www.w3.org/1999/xhtml\";\n\nexport default {\n  svg: \"http://www.w3.org/2000/svg\",\n  xhtml: xhtml,\n  xlink: \"http://www.w3.org/1999/xlink\",\n  xml: \"http://www.w3.org/XML/1998/namespace\",\n  xmlns: \"http://www.w3.org/2000/xmlns/\"\n};\n","import namespaces from \"./namespaces\";\n\nexport default function(name) {\n  var prefix = name += \"\", i = prefix.indexOf(\":\");\n  if (i >= 0 && (prefix = name.slice(0, i)) !== \"xmlns\") name = name.slice(i + 1);\n  return namespaces.hasOwnProperty(prefix) ? {space: namespaces[prefix], local: name} : name;\n}\n","import namespace from \"./namespace\";\nimport {xhtml} from \"./namespaces\";\n\nfunction creatorInherit(name) {\n  return function() {\n    var document = this.ownerDocument,\n        uri = this.namespaceURI;\n    return uri === xhtml && document.documentElement.namespaceURI === xhtml\n        ? document.createElement(name)\n        : document.createElementNS(uri, name);\n  };\n}\n\nfunction creatorFixed(fullname) {\n  return function() {\n    return this.ownerDocument.createElementNS(fullname.space, fullname.local);\n  };\n}\n\nexport default function(name) {\n  var fullname = namespace(name);\n  return (fullname.local\n      ? creatorFixed\n      : creatorInherit)(fullname);\n}\n","function none() {}\n\nexport default function(selector) {\n  return selector == null ? none : function() {\n    return this.querySelector(selector);\n  };\n}\n","function empty() {\n  return [];\n}\n\nexport default function(selector) {\n  return selector == null ? empty : function() {\n    return this.querySelectorAll(selector);\n  };\n}\n","var matcher = function(selector) {\n  return function() {\n    return this.matches(selector);\n  };\n};\n\nif (typeof document !== \"undefined\") {\n  var element = document.documentElement;\n  if (!element.matches) {\n    var vendorMatches = element.webkitMatchesSelector\n        || element.msMatchesSelector\n        || element.mozMatchesSelector\n        || element.oMatchesSelector;\n    matcher = function(selector) {\n      return function() {\n        return vendorMatches.call(this, selector);\n      };\n    };\n  }\n}\n\nexport default matcher;\n","export default function(update) {\n  return new Array(update.length);\n}\n","import sparse from \"./sparse\";\nimport {Selection} from \"./index\";\n\nexport default function() {\n  return new Selection(this._enter || this._groups.map(sparse), this._parents);\n}\n\nexport function EnterNode(parent, datum) {\n  this.ownerDocument = parent.ownerDocument;\n  this.namespaceURI = parent.namespaceURI;\n  this._next = null;\n  this._parent = parent;\n  this.__data__ = datum;\n}\n\nEnterNode.prototype = {\n  constructor: EnterNode,\n  appendChild: function(child) { return this._parent.insertBefore(child, this._next); },\n  insertBefore: function(child, next) { return this._parent.insertBefore(child, next); },\n  querySelector: function(selector) { return this._parent.querySelector(selector); },\n  querySelectorAll: function(selector) { return this._parent.querySelectorAll(selector); }\n};\n","export default function(x) {\n  return function() {\n    return x;\n  };\n}\n","import {Selection} from \"./index\";\nimport {EnterNode} from \"./enter\";\nimport constant from \"../constant\";\n\nvar keyPrefix = \"$\"; // Protect against keys like “__proto__”.\n\nfunction bindIndex(parent, group, enter, update, exit, data) {\n  var i = 0,\n      node,\n      groupLength = group.length,\n      dataLength = data.length;\n\n  // Put any non-null nodes that fit into update.\n  // Put any null nodes into enter.\n  // Put any remaining data into enter.\n  for (; i < dataLength; ++i) {\n    if (node = group[i]) {\n      node.__data__ = data[i];\n      update[i] = node;\n    } else {\n      enter[i] = new EnterNode(parent, data[i]);\n    }\n  }\n\n  // Put any non-null nodes that don’t fit into exit.\n  for (; i < groupLength; ++i) {\n    if (node = group[i]) {\n      exit[i] = node;\n    }\n  }\n}\n\nfunction bindKey(parent, group, enter, update, exit, data, key) {\n  var i,\n      node,\n      nodeByKeyValue = {},\n      groupLength = group.length,\n      dataLength = data.length,\n      keyValues = new Array(groupLength),\n      keyValue;\n\n  // Compute the key for each node.\n  // If multiple nodes have the same key, the duplicates are added to exit.\n  for (i = 0; i < groupLength; ++i) {\n    if (node = group[i]) {\n      keyValues[i] = keyValue = keyPrefix + key.call(node, node.__data__, i, group);\n      if (keyValue in nodeByKeyValue) {\n        exit[i] = node;\n      } else {\n        nodeByKeyValue[keyValue] = node;\n      }\n    }\n  }\n\n  // Compute the key for each datum.\n  // If there a node associated with this key, join and add it to update.\n  // If there is not (or the key is a duplicate), add it to enter.\n  for (i = 0; i < dataLength; ++i) {\n    keyValue = keyPrefix + key.call(parent, data[i], i, data);\n    if (node = nodeByKeyValue[keyValue]) {\n      update[i] = node;\n      node.__data__ = data[i];\n      nodeByKeyValue[keyValue] = null;\n    } else {\n      enter[i] = new EnterNode(parent, data[i]);\n    }\n  }\n\n  // Add any remaining nodes that were not bound to data to exit.\n  for (i = 0; i < groupLength; ++i) {\n    if ((node = group[i]) && (nodeByKeyValue[keyValues[i]] === node)) {\n      exit[i] = node;\n    }\n  }\n}\n\nexport default function(value, key) {\n  if (!value) {\n    data = new Array(this.size()), j = -1;\n    this.each(function(d) { data[++j] = d; });\n    return data;\n  }\n\n  var bind = key ? bindKey : bindIndex,\n      parents = this._parents,\n      groups = this._groups;\n\n  if (typeof value !== \"function\") value = constant(value);\n\n  for (var m = groups.length, update = new Array(m), enter = new Array(m), exit = new Array(m), j = 0; j < m; ++j) {\n    var parent = parents[j],\n        group = groups[j],\n        groupLength = group.length,\n        data = value.call(parent, parent && parent.__data__, j, parents),\n        dataLength = data.length,\n        enterGroup = enter[j] = new Array(dataLength),\n        updateGroup = update[j] = new Array(dataLength),\n        exitGroup = exit[j] = new Array(groupLength);\n\n    bind(parent, group, enterGroup, updateGroup, exitGroup, data, key);\n\n    // Now connect the enter nodes to their following update node, such that\n    // appendChild can insert the materialized enter node before this node,\n    // rather than at the end of the parent node.\n    for (var i0 = 0, i1 = 0, previous, next; i0 < dataLength; ++i0) {\n      if (previous = enterGroup[i0]) {\n        if (i0 >= i1) i1 = i0 + 1;\n        while (!(next = updateGroup[i1]) && ++i1 < dataLength);\n        previous._next = next || null;\n      }\n    }\n  }\n\n  update = new Selection(update, parents);\n  update._enter = enter;\n  update._exit = exit;\n  return update;\n}\n","import {Selection} from \"./index\";\n\nexport default function(compare) {\n  if (!compare) compare = ascending;\n\n  function compareNode(a, b) {\n    return a && b ? compare(a.__data__, b.__data__) : !a - !b;\n  }\n\n  for (var groups = this._groups, m = groups.length, sortgroups = new Array(m), j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, sortgroup = sortgroups[j] = new Array(n), node, i = 0; i < n; ++i) {\n      if (node = group[i]) {\n        sortgroup[i] = node;\n      }\n    }\n    sortgroup.sort(compareNode);\n  }\n\n  return new Selection(sortgroups, this._parents).order();\n}\n\nfunction ascending(a, b) {\n  return a < b ? -1 : a > b ? 1 : a >= b ? 0 : NaN;\n}\n","import namespace from \"../namespace\";\n\nfunction attrRemove(name) {\n  return function() {\n    this.removeAttribute(name);\n  };\n}\n\nfunction attrRemoveNS(fullname) {\n  return function() {\n    this.removeAttributeNS(fullname.space, fullname.local);\n  };\n}\n\nfunction attrConstant(name, value) {\n  return function() {\n    this.setAttribute(name, value);\n  };\n}\n\nfunction attrConstantNS(fullname, value) {\n  return function() {\n    this.setAttributeNS(fullname.space, fullname.local, value);\n  };\n}\n\nfunction attrFunction(name, value) {\n  return function() {\n    var v = value.apply(this, arguments);\n    if (v == null) this.removeAttribute(name);\n    else this.setAttribute(name, v);\n  };\n}\n\nfunction attrFunctionNS(fullname, value) {\n  return function() {\n    var v = value.apply(this, arguments);\n    if (v == null) this.removeAttributeNS(fullname.space, fullname.local);\n    else this.setAttributeNS(fullname.space, fullname.local, v);\n  };\n}\n\nexport default function(name, value) {\n  var fullname = namespace(name);\n\n  if (arguments.length < 2) {\n    var node = this.node();\n    return fullname.local\n        ? node.getAttributeNS(fullname.space, fullname.local)\n        : node.getAttribute(fullname);\n  }\n\n  return this.each((value == null\n      ? (fullname.local ? attrRemoveNS : attrRemove) : (typeof value === \"function\"\n      ? (fullname.local ? attrFunctionNS : attrFunction)\n      : (fullname.local ? attrConstantNS : attrConstant)))(fullname, value));\n}\n","export default function(node) {\n  return (node.ownerDocument && node.ownerDocument.defaultView) // node is a Node\n      || (node.document && node) // node is a Window\n      || node.defaultView; // node is a Document\n}\n","import defaultView from \"../window\";\n\nfunction styleRemove(name) {\n  return function() {\n    this.style.removeProperty(name);\n  };\n}\n\nfunction styleConstant(name, value, priority) {\n  return function() {\n    this.style.setProperty(name, value, priority);\n  };\n}\n\nfunction styleFunction(name, value, priority) {\n  return function() {\n    var v = value.apply(this, arguments);\n    if (v == null) this.style.removeProperty(name);\n    else this.style.setProperty(name, v, priority);\n  };\n}\n\nexport default function(name, value, priority) {\n  return arguments.length > 1\n      ? this.each((value == null\n            ? styleRemove : typeof value === \"function\"\n            ? styleFunction\n            : styleConstant)(name, value, priority == null ? \"\" : priority))\n      : styleValue(this.node(), name);\n}\n\nexport function styleValue(node, name) {\n  return node.style.getPropertyValue(name)\n      || defaultView(node).getComputedStyle(node, null).getPropertyValue(name);\n}\n","function classArray(string) {\n  return string.trim().split(/^|\\s+/);\n}\n\nfunction classList(node) {\n  return node.classList || new ClassList(node);\n}\n\nfunction ClassList(node) {\n  this._node = node;\n  this._names = classArray(node.getAttribute(\"class\") || \"\");\n}\n\nClassList.prototype = {\n  add: function(name) {\n    var i = this._names.indexOf(name);\n    if (i < 0) {\n      this._names.push(name);\n      this._node.setAttribute(\"class\", this._names.join(\" \"));\n    }\n  },\n  remove: function(name) {\n    var i = this._names.indexOf(name);\n    if (i >= 0) {\n      this._names.splice(i, 1);\n      this._node.setAttribute(\"class\", this._names.join(\" \"));\n    }\n  },\n  contains: function(name) {\n    return this._names.indexOf(name) >= 0;\n  }\n};\n\nfunction classedAdd(node, names) {\n  var list = classList(node), i = -1, n = names.length;\n  while (++i < n) list.add(names[i]);\n}\n\nfunction classedRemove(node, names) {\n  var list = classList(node), i = -1, n = names.length;\n  while (++i < n) list.remove(names[i]);\n}\n\nfunction classedTrue(names) {\n  return function() {\n    classedAdd(this, names);\n  };\n}\n\nfunction classedFalse(names) {\n  return function() {\n    classedRemove(this, names);\n  };\n}\n\nfunction classedFunction(names, value) {\n  return function() {\n    (value.apply(this, arguments) ? classedAdd : classedRemove)(this, names);\n  };\n}\n\nexport default function(name, value) {\n  var names = classArray(name + \"\");\n\n  if (arguments.length < 2) {\n    var list = classList(this.node()), i = -1, n = names.length;\n    while (++i < n) if (!list.contains(names[i])) return false;\n    return true;\n  }\n\n  return this.each((typeof value === \"function\"\n      ? classedFunction : value\n      ? classedTrue\n      : classedFalse)(names, value));\n}\n","function textRemove() {\n  this.textContent = \"\";\n}\n\nfunction textConstant(value) {\n  return function() {\n    this.textContent = value;\n  };\n}\n\nfunction textFunction(value) {\n  return function() {\n    var v = value.apply(this, arguments);\n    this.textContent = v == null ? \"\" : v;\n  };\n}\n\nexport default function(value) {\n  return arguments.length\n      ? this.each(value == null\n          ? textRemove : (typeof value === \"function\"\n          ? textFunction\n          : textConstant)(value))\n      : this.node().textContent;\n}\n","function htmlRemove() {\n  this.innerHTML = \"\";\n}\n\nfunction htmlConstant(value) {\n  return function() {\n    this.innerHTML = value;\n  };\n}\n\nfunction htmlFunction(value) {\n  return function() {\n    var v = value.apply(this, arguments);\n    this.innerHTML = v == null ? \"\" : v;\n  };\n}\n\nexport default function(value) {\n  return arguments.length\n      ? this.each(value == null\n          ? htmlRemove : (typeof value === \"function\"\n          ? htmlFunction\n          : htmlConstant)(value))\n      : this.node().innerHTML;\n}\n","function raise() {\n  if (this.nextSibling) this.parentNode.appendChild(this);\n}\n\nexport default function() {\n  return this.each(raise);\n}\n","function lower() {\n  if (this.previousSibling) this.parentNode.insertBefore(this, this.parentNode.firstChild);\n}\n\nexport default function() {\n  return this.each(lower);\n}\n","import creator from \"../creator\";\nimport selector from \"../selector\";\n\nfunction constantNull() {\n  return null;\n}\n\nexport default function(name, before) {\n  var create = typeof name === \"function\" ? name : creator(name),\n      select = before == null ? constantNull : typeof before === \"function\" ? before : selector(before);\n  return this.select(function() {\n    return this.insertBefore(create.apply(this, arguments), select.apply(this, arguments) || null);\n  });\n}\n","function remove() {\n  var parent = this.parentNode;\n  if (parent) parent.removeChild(this);\n}\n\nexport default function() {\n  return this.each(remove);\n}\n","function selection_cloneShallow() {\n  return this.parentNode.insertBefore(this.cloneNode(false), this.nextSibling);\n}\n\nfunction selection_cloneDeep() {\n  return this.parentNode.insertBefore(this.cloneNode(true), this.nextSibling);\n}\n\nexport default function(deep) {\n  return this.select(deep ? selection_cloneDeep : selection_cloneShallow);\n}\n","var filterEvents = {};\n\nexport var event = null;\n\nif (typeof document !== \"undefined\") {\n  var element = document.documentElement;\n  if (!(\"onmouseenter\" in element)) {\n    filterEvents = {mouseenter: \"mouseover\", mouseleave: \"mouseout\"};\n  }\n}\n\nfunction filterContextListener(listener, index, group) {\n  listener = contextListener(listener, index, group);\n  return function(event) {\n    var related = event.relatedTarget;\n    if (!related || (related !== this && !(related.compareDocumentPosition(this) & 8))) {\n      listener.call(this, event);\n    }\n  };\n}\n\nfunction contextListener(listener, index, group) {\n  return function(event1) {\n    var event0 = event; // Events can be reentrant (e.g., focus).\n    event = event1;\n    try {\n      listener.call(this, this.__data__, index, group);\n    } finally {\n      event = event0;\n    }\n  };\n}\n\nfunction parseTypenames(typenames) {\n  return typenames.trim().split(/^|\\s+/).map(function(t) {\n    var name = \"\", i = t.indexOf(\".\");\n    if (i >= 0) name = t.slice(i + 1), t = t.slice(0, i);\n    return {type: t, name: name};\n  });\n}\n\nfunction onRemove(typename) {\n  return function() {\n    var on = this.__on;\n    if (!on) return;\n    for (var j = 0, i = -1, m = on.length, o; j < m; ++j) {\n      if (o = on[j], (!typename.type || o.type === typename.type) && o.name === typename.name) {\n        this.removeEventListener(o.type, o.listener, o.capture);\n      } else {\n        on[++i] = o;\n      }\n    }\n    if (++i) on.length = i;\n    else delete this.__on;\n  };\n}\n\nfunction onAdd(typename, value, capture) {\n  var wrap = filterEvents.hasOwnProperty(typename.type) ? filterContextListener : contextListener;\n  return function(d, i, group) {\n    var on = this.__on, o, listener = wrap(value, i, group);\n    if (on) for (var j = 0, m = on.length; j < m; ++j) {\n      if ((o = on[j]).type === typename.type && o.name === typename.name) {\n        this.removeEventListener(o.type, o.listener, o.capture);\n        this.addEventListener(o.type, o.listener = listener, o.capture = capture);\n        o.value = value;\n        return;\n      }\n    }\n    this.addEventListener(typename.type, listener, capture);\n    o = {type: typename.type, name: typename.name, value: value, listener: listener, capture: capture};\n    if (!on) this.__on = [o];\n    else on.push(o);\n  };\n}\n\nexport default function(typename, value, capture) {\n  var typenames = parseTypenames(typename + \"\"), i, n = typenames.length, t;\n\n  if (arguments.length < 2) {\n    var on = this.node().__on;\n    if (on) for (var j = 0, m = on.length, o; j < m; ++j) {\n      for (i = 0, o = on[j]; i < n; ++i) {\n        if ((t = typenames[i]).type === o.type && t.name === o.name) {\n          return o.value;\n        }\n      }\n    }\n    return;\n  }\n\n  on = value ? onAdd : onRemove;\n  if (capture == null) capture = false;\n  for (i = 0; i < n; ++i) this.each(on(typenames[i], value, capture));\n  return this;\n}\n\nexport function customEvent(event1, listener, that, args) {\n  var event0 = event;\n  event1.sourceEvent = event;\n  event = event1;\n  try {\n    return listener.apply(that, args);\n  } finally {\n    event = event0;\n  }\n}\n","import defaultView from \"../window\";\n\nfunction dispatchEvent(node, type, params) {\n  var window = defaultView(node),\n      event = window.CustomEvent;\n\n  if (typeof event === \"function\") {\n    event = new event(type, params);\n  } else {\n    event = window.document.createEvent(\"Event\");\n    if (params) event.initEvent(type, params.bubbles, params.cancelable), event.detail = params.detail;\n    else event.initEvent(type, false, false);\n  }\n\n  node.dispatchEvent(event);\n}\n\nfunction dispatchConstant(type, params) {\n  return function() {\n    return dispatchEvent(this, type, params);\n  };\n}\n\nfunction dispatchFunction(type, params) {\n  return function() {\n    return dispatchEvent(this, type, params.apply(this, arguments));\n  };\n}\n\nexport default function(type, params) {\n  return this.each((typeof params === \"function\"\n      ? dispatchFunction\n      : dispatchConstant)(type, params));\n}\n","import selection_select from \"./select\";\nimport selection_selectAll from \"./selectAll\";\nimport selection_filter from \"./filter\";\nimport selection_data from \"./data\";\nimport selection_enter from \"./enter\";\nimport selection_exit from \"./exit\";\nimport selection_merge from \"./merge\";\nimport selection_order from \"./order\";\nimport selection_sort from \"./sort\";\nimport selection_call from \"./call\";\nimport selection_nodes from \"./nodes\";\nimport selection_node from \"./node\";\nimport selection_size from \"./size\";\nimport selection_empty from \"./empty\";\nimport selection_each from \"./each\";\nimport selection_attr from \"./attr\";\nimport selection_style from \"./style\";\nimport selection_property from \"./property\";\nimport selection_classed from \"./classed\";\nimport selection_text from \"./text\";\nimport selection_html from \"./html\";\nimport selection_raise from \"./raise\";\nimport selection_lower from \"./lower\";\nimport selection_append from \"./append\";\nimport selection_insert from \"./insert\";\nimport selection_remove from \"./remove\";\nimport selection_clone from \"./clone\";\nimport selection_datum from \"./datum\";\nimport selection_on from \"./on\";\nimport selection_dispatch from \"./dispatch\";\n\nexport var root = [null];\n\nexport function Selection(groups, parents) {\n  this._groups = groups;\n  this._parents = parents;\n}\n\nfunction selection() {\n  return new Selection([[document.documentElement]], root);\n}\n\nSelection.prototype = selection.prototype = {\n  constructor: Selection,\n  select: selection_select,\n  selectAll: selection_selectAll,\n  filter: selection_filter,\n  data: selection_data,\n  enter: selection_enter,\n  exit: selection_exit,\n  merge: selection_merge,\n  order: selection_order,\n  sort: selection_sort,\n  call: selection_call,\n  nodes: selection_nodes,\n  node: selection_node,\n  size: selection_size,\n  empty: selection_empty,\n  each: selection_each,\n  attr: selection_attr,\n  style: selection_style,\n  property: selection_property,\n  classed: selection_classed,\n  text: selection_text,\n  html: selection_html,\n  raise: selection_raise,\n  lower: selection_lower,\n  append: selection_append,\n  insert: selection_insert,\n  remove: selection_remove,\n  clone: selection_clone,\n  datum: selection_datum,\n  on: selection_on,\n  dispatch: selection_dispatch\n};\n\nexport default selection;\n","import {Selection} from \"./index\";\nimport selector from \"../selector\";\n\nexport default function(select) {\n  if (typeof select !== \"function\") select = selector(select);\n\n  for (var groups = this._groups, m = groups.length, subgroups = new Array(m), j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, subgroup = subgroups[j] = new Array(n), node, subnode, i = 0; i < n; ++i) {\n      if ((node = group[i]) && (subnode = select.call(node, node.__data__, i, group))) {\n        if (\"__data__\" in node) subnode.__data__ = node.__data__;\n        subgroup[i] = subnode;\n      }\n    }\n  }\n\n  return new Selection(subgroups, this._parents);\n}\n","import {Selection} from \"./index\";\nimport selectorAll from \"../selectorAll\";\n\nexport default function(select) {\n  if (typeof select !== \"function\") select = selectorAll(select);\n\n  for (var groups = this._groups, m = groups.length, subgroups = [], parents = [], j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, node, i = 0; i < n; ++i) {\n      if (node = group[i]) {\n        subgroups.push(select.call(node, node.__data__, i, group));\n        parents.push(node);\n      }\n    }\n  }\n\n  return new Selection(subgroups, parents);\n}\n","import {Selection} from \"./index\";\nimport matcher from \"../matcher\";\n\nexport default function(match) {\n  if (typeof match !== \"function\") match = matcher(match);\n\n  for (var groups = this._groups, m = groups.length, subgroups = new Array(m), j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, subgroup = subgroups[j] = [], node, i = 0; i < n; ++i) {\n      if ((node = group[i]) && match.call(node, node.__data__, i, group)) {\n        subgroup.push(node);\n      }\n    }\n  }\n\n  return new Selection(subgroups, this._parents);\n}\n","import sparse from \"./sparse\";\nimport {Selection} from \"./index\";\n\nexport default function() {\n  return new Selection(this._exit || this._groups.map(sparse), this._parents);\n}\n","import {Selection} from \"./index\";\n\nexport default function(selection) {\n\n  for (var groups0 = this._groups, groups1 = selection._groups, m0 = groups0.length, m1 = groups1.length, m = Math.min(m0, m1), merges = new Array(m0), j = 0; j < m; ++j) {\n    for (var group0 = groups0[j], group1 = groups1[j], n = group0.length, merge = merges[j] = new Array(n), node, i = 0; i < n; ++i) {\n      if (node = group0[i] || group1[i]) {\n        merge[i] = node;\n      }\n    }\n  }\n\n  for (; j < m0; ++j) {\n    merges[j] = groups0[j];\n  }\n\n  return new Selection(merges, this._parents);\n}\n","export default function() {\n\n  for (var groups = this._groups, j = -1, m = groups.length; ++j < m;) {\n    for (var group = groups[j], i = group.length - 1, next = group[i], node; --i >= 0;) {\n      if (node = group[i]) {\n        if (next && next !== node.nextSibling) next.parentNode.insertBefore(node, next);\n        next = node;\n      }\n    }\n  }\n\n  return this;\n}\n","export default function() {\n  var callback = arguments[0];\n  arguments[0] = this;\n  callback.apply(null, arguments);\n  return this;\n}\n","export default function() {\n  var nodes = new Array(this.size()), i = -1;\n  this.each(function() { nodes[++i] = this; });\n  return nodes;\n}\n","export default function() {\n\n  for (var groups = this._groups, j = 0, m = groups.length; j < m; ++j) {\n    for (var group = groups[j], i = 0, n = group.length; i < n; ++i) {\n      var node = group[i];\n      if (node) return node;\n    }\n  }\n\n  return null;\n}\n","export default function() {\n  var size = 0;\n  this.each(function() { ++size; });\n  return size;\n}\n","export default function() {\n  return !this.node();\n}\n","export default function(callback) {\n\n  for (var groups = this._groups, j = 0, m = groups.length; j < m; ++j) {\n    for (var group = groups[j], i = 0, n = group.length, node; i < n; ++i) {\n      if (node = group[i]) callback.call(node, node.__data__, i, group);\n    }\n  }\n\n  return this;\n}\n","function propertyRemove(name) {\n  return function() {\n    delete this[name];\n  };\n}\n\nfunction propertyConstant(name, value) {\n  return function() {\n    this[name] = value;\n  };\n}\n\nfunction propertyFunction(name, value) {\n  return function() {\n    var v = value.apply(this, arguments);\n    if (v == null) delete this[name];\n    else this[name] = v;\n  };\n}\n\nexport default function(name, value) {\n  return arguments.length > 1\n      ? this.each((value == null\n          ? propertyRemove : typeof value === \"function\"\n          ? propertyFunction\n          : propertyConstant)(name, value))\n      : this.node()[name];\n}\n","import creator from \"../creator\";\n\nexport default function(name) {\n  var create = typeof name === \"function\" ? name : creator(name);\n  return this.select(function() {\n    return this.appendChild(create.apply(this, arguments));\n  });\n}\n","export default function(value) {\n  return arguments.length\n      ? this.property(\"__data__\", value)\n      : this.node().__data__;\n}\n","import {Selection, root} from \"./selection/index\";\n\nexport default function(selector) {\n  return typeof selector === \"string\"\n      ? new Selection([[document.querySelector(selector)]], [document.documentElement])\n      : new Selection([[selector]], root);\n}\n","var nextId = 0;\n\nexport default function local() {\n  return new Local;\n}\n\nfunction Local() {\n  this._ = \"@\" + (++nextId).toString(36);\n}\n\nLocal.prototype = local.prototype = {\n  constructor: Local,\n  get: function(node) {\n    var id = this._;\n    while (!(id in node)) if (!(node = node.parentNode)) return;\n    return node[id];\n  },\n  set: function(node, value) {\n    return node[this._] = value;\n  },\n  remove: function(node) {\n    return this._ in node && delete node[this._];\n  },\n  toString: function() {\n    return this._;\n  }\n};\n","import {event} from \"./selection/on\";\n\nexport default function() {\n  var current = event, source;\n  while (source = current.sourceEvent) current = source;\n  return current;\n}\n","export default function(node, event) {\n  var svg = node.ownerSVGElement || node;\n\n  if (svg.createSVGPoint) {\n    var point = svg.createSVGPoint();\n    point.x = event.clientX, point.y = event.clientY;\n    point = point.matrixTransform(node.getScreenCTM().inverse());\n    return [point.x, point.y];\n  }\n\n  var rect = node.getBoundingClientRect();\n  return [event.clientX - rect.left - node.clientLeft, event.clientY - rect.top - node.clientTop];\n}\n","import sourceEvent from \"./sourceEvent\";\nimport point from \"./point\";\n\nexport default function(node) {\n  var event = sourceEvent();\n  if (event.changedTouches) event = event.changedTouches[0];\n  return point(node, event);\n}\n","import sourceEvent from \"./sourceEvent\";\nimport point from \"./point\";\n\nexport default function(node, touches, identifier) {\n  if (arguments.length < 3) identifier = touches, touches = sourceEvent().changedTouches;\n\n  for (var i = 0, n = touches ? touches.length : 0, touch; i < n; ++i) {\n    if ((touch = touches[i]).identifier === identifier) {\n      return point(node, touch);\n    }\n  }\n\n  return null;\n}\n","var noop = {value: function() {}};\n\nfunction dispatch() {\n  for (var i = 0, n = arguments.length, _ = {}, t; i < n; ++i) {\n    if (!(t = arguments[i] + \"\") || (t in _)) throw new Error(\"illegal type: \" + t);\n    _[t] = [];\n  }\n  return new Dispatch(_);\n}\n\nfunction Dispatch(_) {\n  this._ = _;\n}\n\nfunction parseTypenames(typenames, types) {\n  return typenames.trim().split(/^|\\s+/).map(function(t) {\n    var name = \"\", i = t.indexOf(\".\");\n    if (i >= 0) name = t.slice(i + 1), t = t.slice(0, i);\n    if (t && !types.hasOwnProperty(t)) throw new Error(\"unknown type: \" + t);\n    return {type: t, name: name};\n  });\n}\n\nDispatch.prototype = dispatch.prototype = {\n  constructor: Dispatch,\n  on: function(typename, callback) {\n    var _ = this._,\n        T = parseTypenames(typename + \"\", _),\n        t,\n        i = -1,\n        n = T.length;\n\n    // If no callback was specified, return the callback of the given type and name.\n    if (arguments.length < 2) {\n      while (++i < n) if ((t = (typename = T[i]).type) && (t = get(_[t], typename.name))) return t;\n      return;\n    }\n\n    // If a type was specified, set the callback for the given type and name.\n    // Otherwise, if a null callback was specified, remove callbacks of the given name.\n    if (callback != null && typeof callback !== \"function\") throw new Error(\"invalid callback: \" + callback);\n    while (++i < n) {\n      if (t = (typename = T[i]).type) _[t] = set(_[t], typename.name, callback);\n      else if (callback == null) for (t in _) _[t] = set(_[t], typename.name, null);\n    }\n\n    return this;\n  },\n  copy: function() {\n    var copy = {}, _ = this._;\n    for (var t in _) copy[t] = _[t].slice();\n    return new Dispatch(copy);\n  },\n  call: function(type, that) {\n    if ((n = arguments.length - 2) > 0) for (var args = new Array(n), i = 0, n, t; i < n; ++i) args[i] = arguments[i + 2];\n    if (!this._.hasOwnProperty(type)) throw new Error(\"unknown type: \" + type);\n    for (t = this._[type], i = 0, n = t.length; i < n; ++i) t[i].value.apply(that, args);\n  },\n  apply: function(type, that, args) {\n    if (!this._.hasOwnProperty(type)) throw new Error(\"unknown type: \" + type);\n    for (var t = this._[type], i = 0, n = t.length; i < n; ++i) t[i].value.apply(that, args);\n  }\n};\n\nfunction get(type, name) {\n  for (var i = 0, n = type.length, c; i < n; ++i) {\n    if ((c = type[i]).name === name) {\n      return c.value;\n    }\n  }\n}\n\nfunction set(type, name, callback) {\n  for (var i = 0, n = type.length; i < n; ++i) {\n    if (type[i].name === name) {\n      type[i] = noop, type = type.slice(0, i).concat(type.slice(i + 1));\n      break;\n    }\n  }\n  if (callback != null) type.push({name: name, value: callback});\n  return type;\n}\n\nexport default dispatch;\n","import {event} from \"d3-selection\";\n\nexport function nopropagation() {\n  event.stopImmediatePropagation();\n}\n\nexport default function() {\n  event.preventDefault();\n  event.stopImmediatePropagation();\n}\n","import {select} from \"d3-selection\";\nimport noevent from \"./noevent\";\n\nexport default function(view) {\n  var root = view.document.documentElement,\n      selection = select(view).on(\"dragstart.drag\", noevent, true);\n  if (\"onselectstart\" in root) {\n    selection.on(\"selectstart.drag\", noevent, true);\n  } else {\n    root.__noselect = root.style.MozUserSelect;\n    root.style.MozUserSelect = \"none\";\n  }\n}\n\nexport function yesdrag(view, noclick) {\n  var root = view.document.documentElement,\n      selection = select(view).on(\"dragstart.drag\", null);\n  if (noclick) {\n    selection.on(\"click.drag\", noevent, true);\n    setTimeout(function() { selection.on(\"click.drag\", null); }, 0);\n  }\n  if (\"onselectstart\" in root) {\n    selection.on(\"selectstart.drag\", null);\n  } else {\n    root.style.MozUserSelect = root.__noselect;\n    delete root.__noselect;\n  }\n}\n","export default function(x) {\n  return function() {\n    return x;\n  };\n}\n","export default function DragEvent(target, type, subject, id, active, x, y, dx, dy, dispatch) {\n  this.target = target;\n  this.type = type;\n  this.subject = subject;\n  this.identifier = id;\n  this.active = active;\n  this.x = x;\n  this.y = y;\n  this.dx = dx;\n  this.dy = dy;\n  this._ = dispatch;\n}\n\nDragEvent.prototype.on = function() {\n  var value = this._.on.apply(this._, arguments);\n  return value === this._ ? this : value;\n};\n","import {dispatch} from \"d3-dispatch\";\nimport {event, customEvent, select, mouse, touch} from \"d3-selection\";\nimport nodrag, {yesdrag} from \"./nodrag\";\nimport noevent, {nopropagation} from \"./noevent\";\nimport constant from \"./constant\";\nimport DragEvent from \"./event\";\n\n// Ignore right-click, since that should open the context menu.\nfunction defaultFilter() {\n  return !event.button;\n}\n\nfunction defaultContainer() {\n  return this.parentNode;\n}\n\nfunction defaultSubject(d) {\n  return d == null ? {x: event.x, y: event.y} : d;\n}\n\nfunction defaultTouchable() {\n  return \"ontouchstart\" in this;\n}\n\nexport default function() {\n  var filter = defaultFilter,\n      container = defaultContainer,\n      subject = defaultSubject,\n      touchable = defaultTouchable,\n      gestures = {},\n      listeners = dispatch(\"start\", \"drag\", \"end\"),\n      active = 0,\n      mousedownx,\n      mousedowny,\n      mousemoving,\n      touchending,\n      clickDistance2 = 0;\n\n  function drag(selection) {\n    selection\n        .on(\"mousedown.drag\", mousedowned)\n      .filter(touchable)\n        .on(\"touchstart.drag\", touchstarted)\n        .on(\"touchmove.drag\", touchmoved)\n        .on(\"touchend.drag touchcancel.drag\", touchended)\n        .style(\"touch-action\", \"none\")\n        .style(\"-webkit-tap-highlight-color\", \"rgba(0,0,0,0)\");\n  }\n\n  function mousedowned() {\n    if (touchending || !filter.apply(this, arguments)) return;\n    var gesture = beforestart(\"mouse\", container.apply(this, arguments), mouse, this, arguments);\n    if (!gesture) return;\n    select(event.view).on(\"mousemove.drag\", mousemoved, true).on(\"mouseup.drag\", mouseupped, true);\n    nodrag(event.view);\n    nopropagation();\n    mousemoving = false;\n    mousedownx = event.clientX;\n    mousedowny = event.clientY;\n    gesture(\"start\");\n  }\n\n  function mousemoved() {\n    noevent();\n    if (!mousemoving) {\n      var dx = event.clientX - mousedownx, dy = event.clientY - mousedowny;\n      mousemoving = dx * dx + dy * dy > clickDistance2;\n    }\n    gestures.mouse(\"drag\");\n  }\n\n  function mouseupped() {\n    select(event.view).on(\"mousemove.drag mouseup.drag\", null);\n    yesdrag(event.view, mousemoving);\n    noevent();\n    gestures.mouse(\"end\");\n  }\n\n  function touchstarted() {\n    if (!filter.apply(this, arguments)) return;\n    var touches = event.changedTouches,\n        c = container.apply(this, arguments),\n        n = touches.length, i, gesture;\n\n    for (i = 0; i < n; ++i) {\n      if (gesture = beforestart(touches[i].identifier, c, touch, this, arguments)) {\n        nopropagation();\n        gesture(\"start\");\n      }\n    }\n  }\n\n  function touchmoved() {\n    var touches = event.changedTouches,\n        n = touches.length, i, gesture;\n\n    for (i = 0; i < n; ++i) {\n      if (gesture = gestures[touches[i].identifier]) {\n        noevent();\n        gesture(\"drag\");\n      }\n    }\n  }\n\n  function touchended() {\n    var touches = event.changedTouches,\n        n = touches.length, i, gesture;\n\n    if (touchending) clearTimeout(touchending);\n    touchending = setTimeout(function() { touchending = null; }, 500); // Ghost clicks are delayed!\n    for (i = 0; i < n; ++i) {\n      if (gesture = gestures[touches[i].identifier]) {\n        nopropagation();\n        gesture(\"end\");\n      }\n    }\n  }\n\n  function beforestart(id, container, point, that, args) {\n    var p = point(container, id), s, dx, dy,\n        sublisteners = listeners.copy();\n\n    if (!customEvent(new DragEvent(drag, \"beforestart\", s, id, active, p[0], p[1], 0, 0, sublisteners), function() {\n      if ((event.subject = s = subject.apply(that, args)) == null) return false;\n      dx = s.x - p[0] || 0;\n      dy = s.y - p[1] || 0;\n      return true;\n    })) return;\n\n    return function gesture(type) {\n      var p0 = p, n;\n      switch (type) {\n        case \"start\": gestures[id] = gesture, n = active++; break;\n        case \"end\": delete gestures[id], --active; // nobreak\n        case \"drag\": p = point(container, id), n = active; break;\n      }\n      customEvent(new DragEvent(drag, type, s, id, n, p[0] + dx, p[1] + dy, p[0] - p0[0], p[1] - p0[1], sublisteners), sublisteners.apply, sublisteners, [type, that, args]);\n    };\n  }\n\n  drag.filter = function(_) {\n    return arguments.length ? (filter = typeof _ === \"function\" ? _ : constant(!!_), drag) : filter;\n  };\n\n  drag.container = function(_) {\n    return arguments.length ? (container = typeof _ === \"function\" ? _ : constant(_), drag) : container;\n  };\n\n  drag.subject = function(_) {\n    return arguments.length ? (subject = typeof _ === \"function\" ? _ : constant(_), drag) : subject;\n  };\n\n  drag.touchable = function(_) {\n    return arguments.length ? (touchable = typeof _ === \"function\" ? _ : constant(!!_), drag) : touchable;\n  };\n\n  drag.on = function() {\n    var value = listeners.on.apply(listeners, arguments);\n    return value === listeners ? drag : value;\n  };\n\n  drag.clickDistance = function(_) {\n    return arguments.length ? (clickDistance2 = (_ = +_) * _, drag) : Math.sqrt(clickDistance2);\n  };\n\n  return drag;\n}\n","var frame = 0, // is an animation frame pending?\n    timeout = 0, // is a timeout pending?\n    interval = 0, // are any timers active?\n    pokeDelay = 1000, // how frequently we check for clock skew\n    taskHead,\n    taskTail,\n    clockLast = 0,\n    clockNow = 0,\n    clockSkew = 0,\n    clock = typeof performance === \"object\" && performance.now ? performance : Date,\n    setFrame = typeof window === \"object\" && window.requestAnimationFrame ? window.requestAnimationFrame.bind(window) : function(f) { setTimeout(f, 17); };\n\nexport function now() {\n  return clockNow || (setFrame(clearNow), clockNow = clock.now() + clockSkew);\n}\n\nfunction clearNow() {\n  clockNow = 0;\n}\n\nexport function Timer() {\n  this._call =\n  this._time =\n  this._next = null;\n}\n\nTimer.prototype = timer.prototype = {\n  constructor: Timer,\n  restart: function(callback, delay, time) {\n    if (typeof callback !== \"function\") throw new TypeError(\"callback is not a function\");\n    time = (time == null ? now() : +time) + (delay == null ? 0 : +delay);\n    if (!this._next && taskTail !== this) {\n      if (taskTail) taskTail._next = this;\n      else taskHead = this;\n      taskTail = this;\n    }\n    this._call = callback;\n    this._time = time;\n    sleep();\n  },\n  stop: function() {\n    if (this._call) {\n      this._call = null;\n      this._time = Infinity;\n      sleep();\n    }\n  }\n};\n\nexport function timer(callback, delay, time) {\n  var t = new Timer;\n  t.restart(callback, delay, time);\n  return t;\n}\n\nexport function timerFlush() {\n  now(); // Get the current time, if not already set.\n  ++frame; // Pretend we’ve set an alarm, if we haven’t already.\n  var t = taskHead, e;\n  while (t) {\n    if ((e = clockNow - t._time) >= 0) t._call.call(null, e);\n    t = t._next;\n  }\n  --frame;\n}\n\nfunction wake() {\n  clockNow = (clockLast = clock.now()) + clockSkew;\n  frame = timeout = 0;\n  try {\n    timerFlush();\n  } finally {\n    frame = 0;\n    nap();\n    clockNow = 0;\n  }\n}\n\nfunction poke() {\n  var now = clock.now(), delay = now - clockLast;\n  if (delay > pokeDelay) clockSkew -= delay, clockLast = now;\n}\n\nfunction nap() {\n  var t0, t1 = taskHead, t2, time = Infinity;\n  while (t1) {\n    if (t1._call) {\n      if (time > t1._time) time = t1._time;\n      t0 = t1, t1 = t1._next;\n    } else {\n      t2 = t1._next, t1._next = null;\n      t1 = t0 ? t0._next = t2 : taskHead = t2;\n    }\n  }\n  taskTail = t0;\n  sleep(time);\n}\n\nfunction sleep(time) {\n  if (frame) return; // Soonest alarm already set, or will be.\n  if (timeout) timeout = clearTimeout(timeout);\n  var delay = time - clockNow; // Strictly less than if we recomputed clockNow.\n  if (delay > 24) {\n    if (time < Infinity) timeout = setTimeout(wake, time - clock.now() - clockSkew);\n    if (interval) interval = clearInterval(interval);\n  } else {\n    if (!interval) clockLast = clock.now(), interval = setInterval(poke, pokeDelay);\n    frame = 1, setFrame(wake);\n  }\n}\n","import {Timer} from \"./timer\";\n\nexport default function(callback, delay, time) {\n  var t = new Timer;\n  delay = delay == null ? 0 : +delay;\n  t.restart(function(elapsed) {\n    t.stop();\n    callback(elapsed + delay);\n  }, delay, time);\n  return t;\n}\n","import {dispatch} from \"d3-dispatch\";\nimport {timer, timeout} from \"d3-timer\";\n\nvar emptyOn = dispatch(\"start\", \"end\", \"interrupt\");\nvar emptyTween = [];\n\nexport var CREATED = 0;\nexport var SCHEDULED = 1;\nexport var STARTING = 2;\nexport var STARTED = 3;\nexport var RUNNING = 4;\nexport var ENDING = 5;\nexport var ENDED = 6;\n\nexport default function(node, name, id, index, group, timing) {\n  var schedules = node.__transition;\n  if (!schedules) node.__transition = {};\n  else if (id in schedules) return;\n  create(node, id, {\n    name: name,\n    index: index, // For context during callback.\n    group: group, // For context during callback.\n    on: emptyOn,\n    tween: emptyTween,\n    time: timing.time,\n    delay: timing.delay,\n    duration: timing.duration,\n    ease: timing.ease,\n    timer: null,\n    state: CREATED\n  });\n}\n\nexport function init(node, id) {\n  var schedule = get(node, id);\n  if (schedule.state > CREATED) throw new Error(\"too late; already scheduled\");\n  return schedule;\n}\n\nexport function set(node, id) {\n  var schedule = get(node, id);\n  if (schedule.state > STARTING) throw new Error(\"too late; already started\");\n  return schedule;\n}\n\nexport function get(node, id) {\n  var schedule = node.__transition;\n  if (!schedule || !(schedule = schedule[id])) throw new Error(\"transition not found\");\n  return schedule;\n}\n\nfunction create(node, id, self) {\n  var schedules = node.__transition,\n      tween;\n\n  // Initialize the self timer when the transition is created.\n  // Note the actual delay is not known until the first callback!\n  schedules[id] = self;\n  self.timer = timer(schedule, 0, self.time);\n\n  function schedule(elapsed) {\n    self.state = SCHEDULED;\n    self.timer.restart(start, self.delay, self.time);\n\n    // If the elapsed delay is less than our first sleep, start immediately.\n    if (self.delay <= elapsed) start(elapsed - self.delay);\n  }\n\n  function start(elapsed) {\n    var i, j, n, o;\n\n    // If the state is not SCHEDULED, then we previously errored on start.\n    if (self.state !== SCHEDULED) return stop();\n\n    for (i in schedules) {\n      o = schedules[i];\n      if (o.name !== self.name) continue;\n\n      // While this element already has a starting transition during this frame,\n      // defer starting an interrupting transition until that transition has a\n      // chance to tick (and possibly end); see d3/d3-transition#54!\n      if (o.state === STARTED) return timeout(start);\n\n      // Interrupt the active transition, if any.\n      // Dispatch the interrupt event.\n      if (o.state === RUNNING) {\n        o.state = ENDED;\n        o.timer.stop();\n        o.on.call(\"interrupt\", node, node.__data__, o.index, o.group);\n        delete schedules[i];\n      }\n\n      // Cancel any pre-empted transitions. No interrupt event is dispatched\n      // because the cancelled transitions never started. Note that this also\n      // removes this transition from the pending list!\n      else if (+i < id) {\n        o.state = ENDED;\n        o.timer.stop();\n        delete schedules[i];\n      }\n    }\n\n    // Defer the first tick to end of the current frame; see d3/d3#1576.\n    // Note the transition may be canceled after start and before the first tick!\n    // Note this must be scheduled before the start event; see d3/d3-transition#16!\n    // Assuming this is successful, subsequent callbacks go straight to tick.\n    timeout(function() {\n      if (self.state === STARTED) {\n        self.state = RUNNING;\n        self.timer.restart(tick, self.delay, self.time);\n        tick(elapsed);\n      }\n    });\n\n    // Dispatch the start event.\n    // Note this must be done before the tween are initialized.\n    self.state = STARTING;\n    self.on.call(\"start\", node, node.__data__, self.index, self.group);\n    if (self.state !== STARTING) return; // interrupted\n    self.state = STARTED;\n\n    // Initialize the tween, deleting null tween.\n    tween = new Array(n = self.tween.length);\n    for (i = 0, j = -1; i < n; ++i) {\n      if (o = self.tween[i].value.call(node, node.__data__, self.index, self.group)) {\n        tween[++j] = o;\n      }\n    }\n    tween.length = j + 1;\n  }\n\n  function tick(elapsed) {\n    var t = elapsed < self.duration ? self.ease.call(null, elapsed / self.duration) : (self.timer.restart(stop), self.state = ENDING, 1),\n        i = -1,\n        n = tween.length;\n\n    while (++i < n) {\n      tween[i].call(null, t);\n    }\n\n    // Dispatch the end event.\n    if (self.state === ENDING) {\n      self.on.call(\"end\", node, node.__data__, self.index, self.group);\n      stop();\n    }\n  }\n\n  function stop() {\n    self.state = ENDED;\n    self.timer.stop();\n    delete schedules[id];\n    for (var i in schedules) return; // eslint-disable-line no-unused-vars\n    delete node.__transition;\n  }\n}\n","import {get, set} from \"./schedule\";\n\nfunction tweenRemove(id, name) {\n  var tween0, tween1;\n  return function() {\n    var schedule = set(this, id),\n        tween = schedule.tween;\n\n    // If this node shared tween with the previous node,\n    // just assign the updated shared tween and we’re done!\n    // Otherwise, copy-on-write.\n    if (tween !== tween0) {\n      tween1 = tween0 = tween;\n      for (var i = 0, n = tween1.length; i < n; ++i) {\n        if (tween1[i].name === name) {\n          tween1 = tween1.slice();\n          tween1.splice(i, 1);\n          break;\n        }\n      }\n    }\n\n    schedule.tween = tween1;\n  };\n}\n\nfunction tweenFunction(id, name, value) {\n  var tween0, tween1;\n  if (typeof value !== \"function\") throw new Error;\n  return function() {\n    var schedule = set(this, id),\n        tween = schedule.tween;\n\n    // If this node shared tween with the previous node,\n    // just assign the updated shared tween and we’re done!\n    // Otherwise, copy-on-write.\n    if (tween !== tween0) {\n      tween1 = (tween0 = tween).slice();\n      for (var t = {name: name, value: value}, i = 0, n = tween1.length; i < n; ++i) {\n        if (tween1[i].name === name) {\n          tween1[i] = t;\n          break;\n        }\n      }\n      if (i === n) tween1.push(t);\n    }\n\n    schedule.tween = tween1;\n  };\n}\n\nexport default function(name, value) {\n  var id = this._id;\n\n  name += \"\";\n\n  if (arguments.length < 2) {\n    var tween = get(this.node(), id).tween;\n    for (var i = 0, n = tween.length, t; i < n; ++i) {\n      if ((t = tween[i]).name === name) {\n        return t.value;\n      }\n    }\n    return null;\n  }\n\n  return this.each((value == null ? tweenRemove : tweenFunction)(id, name, value));\n}\n\nexport function tweenValue(transition, name, value) {\n  var id = transition._id;\n\n  transition.each(function() {\n    var schedule = set(this, id);\n    (schedule.value || (schedule.value = {}))[name] = value.apply(this, arguments);\n  });\n\n  return function(node) {\n    return get(node, id).value[name];\n  };\n}\n","import {color} from \"d3-color\";\nimport {interpolateNumber, interpolateRgb, interpolateString} from \"d3-interpolate\";\n\nexport default function(a, b) {\n  var c;\n  return (typeof b === \"number\" ? interpolateNumber\n      : b instanceof color ? interpolateRgb\n      : (c = color(b)) ? (b = c, interpolateRgb)\n      : interpolateString)(a, b);\n}\n","function removeFunction(id) {\n  return function() {\n    var parent = this.parentNode;\n    for (var i in this.__transition) if (+i !== id) return;\n    if (parent) parent.removeChild(this);\n  };\n}\n\nexport default function() {\n  return this.on(\"end.remove\", removeFunction(this._id));\n}\n","import {selection} from \"d3-selection\";\n\nvar Selection = selection.prototype.constructor;\n\nexport default function() {\n  return new Selection(this._groups, this._parents);\n}\n","import {tweenValue} from \"./tween\";\n\nfunction textConstant(value) {\n  return function() {\n    this.textContent = value;\n  };\n}\n\nfunction textFunction(value) {\n  return function() {\n    var value1 = value(this);\n    this.textContent = value1 == null ? \"\" : value1;\n  };\n}\n\nexport default function(value) {\n  return this.tween(\"text\", typeof value === \"function\"\n      ? textFunction(tweenValue(this, \"text\", value))\n      : textConstant(value == null ? \"\" : value + \"\"));\n}\n","import {selection} from \"d3-selection\";\nimport transition_attr from \"./attr\";\nimport transition_attrTween from \"./attrTween\";\nimport transition_delay from \"./delay\";\nimport transition_duration from \"./duration\";\nimport transition_ease from \"./ease\";\nimport transition_filter from \"./filter\";\nimport transition_merge from \"./merge\";\nimport transition_on from \"./on\";\nimport transition_remove from \"./remove\";\nimport transition_select from \"./select\";\nimport transition_selectAll from \"./selectAll\";\nimport transition_selection from \"./selection\";\nimport transition_style from \"./style\";\nimport transition_styleTween from \"./styleTween\";\nimport transition_text from \"./text\";\nimport transition_transition from \"./transition\";\nimport transition_tween from \"./tween\";\n\nvar id = 0;\n\nexport function Transition(groups, parents, name, id) {\n  this._groups = groups;\n  this._parents = parents;\n  this._name = name;\n  this._id = id;\n}\n\nexport default function transition(name) {\n  return selection().transition(name);\n}\n\nexport function newId() {\n  return ++id;\n}\n\nvar selection_prototype = selection.prototype;\n\nTransition.prototype = transition.prototype = {\n  constructor: Transition,\n  select: transition_select,\n  selectAll: transition_selectAll,\n  filter: transition_filter,\n  merge: transition_merge,\n  selection: transition_selection,\n  transition: transition_transition,\n  call: selection_prototype.call,\n  nodes: selection_prototype.nodes,\n  node: selection_prototype.node,\n  size: selection_prototype.size,\n  empty: selection_prototype.empty,\n  each: selection_prototype.each,\n  on: transition_on,\n  attr: transition_attr,\n  attrTween: transition_attrTween,\n  style: transition_style,\n  styleTween: transition_styleTween,\n  text: transition_text,\n  remove: transition_remove,\n  tween: transition_tween,\n  delay: transition_delay,\n  duration: transition_duration,\n  ease: transition_ease\n};\n","import {selector} from \"d3-selection\";\nimport {Transition} from \"./index\";\nimport schedule, {get} from \"./schedule\";\n\nexport default function(select) {\n  var name = this._name,\n      id = this._id;\n\n  if (typeof select !== \"function\") select = selector(select);\n\n  for (var groups = this._groups, m = groups.length, subgroups = new Array(m), j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, subgroup = subgroups[j] = new Array(n), node, subnode, i = 0; i < n; ++i) {\n      if ((node = group[i]) && (subnode = select.call(node, node.__data__, i, group))) {\n        if (\"__data__\" in node) subnode.__data__ = node.__data__;\n        subgroup[i] = subnode;\n        schedule(subgroup[i], name, id, i, subgroup, get(node, id));\n      }\n    }\n  }\n\n  return new Transition(subgroups, this._parents, name, id);\n}\n","import {selectorAll} from \"d3-selection\";\nimport {Transition} from \"./index\";\nimport schedule, {get} from \"./schedule\";\n\nexport default function(select) {\n  var name = this._name,\n      id = this._id;\n\n  if (typeof select !== \"function\") select = selectorAll(select);\n\n  for (var groups = this._groups, m = groups.length, subgroups = [], parents = [], j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, node, i = 0; i < n; ++i) {\n      if (node = group[i]) {\n        for (var children = select.call(node, node.__data__, i, group), child, inherit = get(node, id), k = 0, l = children.length; k < l; ++k) {\n          if (child = children[k]) {\n            schedule(child, name, id, k, children, inherit);\n          }\n        }\n        subgroups.push(children);\n        parents.push(node);\n      }\n    }\n  }\n\n  return new Transition(subgroups, parents, name, id);\n}\n","import {matcher} from \"d3-selection\";\nimport {Transition} from \"./index\";\n\nexport default function(match) {\n  if (typeof match !== \"function\") match = matcher(match);\n\n  for (var groups = this._groups, m = groups.length, subgroups = new Array(m), j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, subgroup = subgroups[j] = [], node, i = 0; i < n; ++i) {\n      if ((node = group[i]) && match.call(node, node.__data__, i, group)) {\n        subgroup.push(node);\n      }\n    }\n  }\n\n  return new Transition(subgroups, this._parents, this._name, this._id);\n}\n","import {Transition} from \"./index\";\n\nexport default function(transition) {\n  if (transition._id !== this._id) throw new Error;\n\n  for (var groups0 = this._groups, groups1 = transition._groups, m0 = groups0.length, m1 = groups1.length, m = Math.min(m0, m1), merges = new Array(m0), j = 0; j < m; ++j) {\n    for (var group0 = groups0[j], group1 = groups1[j], n = group0.length, merge = merges[j] = new Array(n), node, i = 0; i < n; ++i) {\n      if (node = group0[i] || group1[i]) {\n        merge[i] = node;\n      }\n    }\n  }\n\n  for (; j < m0; ++j) {\n    merges[j] = groups0[j];\n  }\n\n  return new Transition(merges, this._parents, this._name, this._id);\n}\n","import {Transition, newId} from \"./index\";\nimport schedule, {get} from \"./schedule\";\n\nexport default function() {\n  var name = this._name,\n      id0 = this._id,\n      id1 = newId();\n\n  for (var groups = this._groups, m = groups.length, j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, node, i = 0; i < n; ++i) {\n      if (node = group[i]) {\n        var inherit = get(node, id0);\n        schedule(node, name, id1, i, group, {\n          time: inherit.time + inherit.delay + inherit.duration,\n          delay: 0,\n          duration: inherit.duration,\n          ease: inherit.ease\n        });\n      }\n    }\n  }\n\n  return new Transition(groups, this._parents, name, id1);\n}\n","import {get, set, init} from \"./schedule\";\n\nfunction start(name) {\n  return (name + \"\").trim().split(/^|\\s+/).every(function(t) {\n    var i = t.indexOf(\".\");\n    if (i >= 0) t = t.slice(0, i);\n    return !t || t === \"start\";\n  });\n}\n\nfunction onFunction(id, name, listener) {\n  var on0, on1, sit = start(name) ? init : set;\n  return function() {\n    var schedule = sit(this, id),\n        on = schedule.on;\n\n    // If this node shared a dispatch with the previous node,\n    // just assign the updated shared dispatch and we’re done!\n    // Otherwise, copy-on-write.\n    if (on !== on0) (on1 = (on0 = on).copy()).on(name, listener);\n\n    schedule.on = on1;\n  };\n}\n\nexport default function(name, listener) {\n  var id = this._id;\n\n  return arguments.length < 2\n      ? get(this.node(), id).on.on(name)\n      : this.each(onFunction(id, name, listener));\n}\n","import {interpolateTransformSvg as interpolateTransform} from \"d3-interpolate\";\nimport {namespace} from \"d3-selection\";\nimport {tweenValue} from \"./tween\";\nimport interpolate from \"./interpolate\";\n\nfunction attrRemove(name) {\n  return function() {\n    this.removeAttribute(name);\n  };\n}\n\nfunction attrRemoveNS(fullname) {\n  return function() {\n    this.removeAttributeNS(fullname.space, fullname.local);\n  };\n}\n\nfunction attrConstant(name, interpolate, value1) {\n  var value00,\n      interpolate0;\n  return function() {\n    var value0 = this.getAttribute(name);\n    return value0 === value1 ? null\n        : value0 === value00 ? interpolate0\n        : interpolate0 = interpolate(value00 = value0, value1);\n  };\n}\n\nfunction attrConstantNS(fullname, interpolate, value1) {\n  var value00,\n      interpolate0;\n  return function() {\n    var value0 = this.getAttributeNS(fullname.space, fullname.local);\n    return value0 === value1 ? null\n        : value0 === value00 ? interpolate0\n        : interpolate0 = interpolate(value00 = value0, value1);\n  };\n}\n\nfunction attrFunction(name, interpolate, value) {\n  var value00,\n      value10,\n      interpolate0;\n  return function() {\n    var value0, value1 = value(this);\n    if (value1 == null) return void this.removeAttribute(name);\n    value0 = this.getAttribute(name);\n    return value0 === value1 ? null\n        : value0 === value00 && value1 === value10 ? interpolate0\n        : interpolate0 = interpolate(value00 = value0, value10 = value1);\n  };\n}\n\nfunction attrFunctionNS(fullname, interpolate, value) {\n  var value00,\n      value10,\n      interpolate0;\n  return function() {\n    var value0, value1 = value(this);\n    if (value1 == null) return void this.removeAttributeNS(fullname.space, fullname.local);\n    value0 = this.getAttributeNS(fullname.space, fullname.local);\n    return value0 === value1 ? null\n        : value0 === value00 && value1 === value10 ? interpolate0\n        : interpolate0 = interpolate(value00 = value0, value10 = value1);\n  };\n}\n\nexport default function(name, value) {\n  var fullname = namespace(name), i = fullname === \"transform\" ? interpolateTransform : interpolate;\n  return this.attrTween(name, typeof value === \"function\"\n      ? (fullname.local ? attrFunctionNS : attrFunction)(fullname, i, tweenValue(this, \"attr.\" + name, value))\n      : value == null ? (fullname.local ? attrRemoveNS : attrRemove)(fullname)\n      : (fullname.local ? attrConstantNS : attrConstant)(fullname, i, value + \"\"));\n}\n","import {namespace} from \"d3-selection\";\n\nfunction attrTweenNS(fullname, value) {\n  function tween() {\n    var node = this, i = value.apply(node, arguments);\n    return i && function(t) {\n      node.setAttributeNS(fullname.space, fullname.local, i(t));\n    };\n  }\n  tween._value = value;\n  return tween;\n}\n\nfunction attrTween(name, value) {\n  function tween() {\n    var node = this, i = value.apply(node, arguments);\n    return i && function(t) {\n      node.setAttribute(name, i(t));\n    };\n  }\n  tween._value = value;\n  return tween;\n}\n\nexport default function(name, value) {\n  var key = \"attr.\" + name;\n  if (arguments.length < 2) return (key = this.tween(key)) && key._value;\n  if (value == null) return this.tween(key, null);\n  if (typeof value !== \"function\") throw new Error;\n  var fullname = namespace(name);\n  return this.tween(key, (fullname.local ? attrTweenNS : attrTween)(fullname, value));\n}\n","import {interpolateTransformCss as interpolateTransform} from \"d3-interpolate\";\nimport {style} from \"d3-selection\";\nimport {tweenValue} from \"./tween\";\nimport interpolate from \"./interpolate\";\n\nfunction styleRemove(name, interpolate) {\n  var value00,\n      value10,\n      interpolate0;\n  return function() {\n    var value0 = style(this, name),\n        value1 = (this.style.removeProperty(name), style(this, name));\n    return value0 === value1 ? null\n        : value0 === value00 && value1 === value10 ? interpolate0\n        : interpolate0 = interpolate(value00 = value0, value10 = value1);\n  };\n}\n\nfunction styleRemoveEnd(name) {\n  return function() {\n    this.style.removeProperty(name);\n  };\n}\n\nfunction styleConstant(name, interpolate, value1) {\n  var value00,\n      interpolate0;\n  return function() {\n    var value0 = style(this, name);\n    return value0 === value1 ? null\n        : value0 === value00 ? interpolate0\n        : interpolate0 = interpolate(value00 = value0, value1);\n  };\n}\n\nfunction styleFunction(name, interpolate, value) {\n  var value00,\n      value10,\n      interpolate0;\n  return function() {\n    var value0 = style(this, name),\n        value1 = value(this);\n    if (value1 == null) value1 = (this.style.removeProperty(name), style(this, name));\n    return value0 === value1 ? null\n        : value0 === value00 && value1 === value10 ? interpolate0\n        : interpolate0 = interpolate(value00 = value0, value10 = value1);\n  };\n}\n\nexport default function(name, value, priority) {\n  var i = (name += \"\") === \"transform\" ? interpolateTransform : interpolate;\n  return value == null ? this\n          .styleTween(name, styleRemove(name, i))\n          .on(\"end.style.\" + name, styleRemoveEnd(name))\n      : this.styleTween(name, typeof value === \"function\"\n          ? styleFunction(name, i, tweenValue(this, \"style.\" + name, value))\n          : styleConstant(name, i, value + \"\"), priority);\n}\n","function styleTween(name, value, priority) {\n  function tween() {\n    var node = this, i = value.apply(node, arguments);\n    return i && function(t) {\n      node.style.setProperty(name, i(t), priority);\n    };\n  }\n  tween._value = value;\n  return tween;\n}\n\nexport default function(name, value, priority) {\n  var key = \"style.\" + (name += \"\");\n  if (arguments.length < 2) return (key = this.tween(key)) && key._value;\n  if (value == null) return this.tween(key, null);\n  if (typeof value !== \"function\") throw new Error;\n  return this.tween(key, styleTween(name, value, priority == null ? \"\" : priority));\n}\n","import {get, init} from \"./schedule\";\n\nfunction delayFunction(id, value) {\n  return function() {\n    init(this, id).delay = +value.apply(this, arguments);\n  };\n}\n\nfunction delayConstant(id, value) {\n  return value = +value, function() {\n    init(this, id).delay = value;\n  };\n}\n\nexport default function(value) {\n  var id = this._id;\n\n  return arguments.length\n      ? this.each((typeof value === \"function\"\n          ? delayFunction\n          : delayConstant)(id, value))\n      : get(this.node(), id).delay;\n}\n","import {get, set} from \"./schedule\";\n\nfunction durationFunction(id, value) {\n  return function() {\n    set(this, id).duration = +value.apply(this, arguments);\n  };\n}\n\nfunction durationConstant(id, value) {\n  return value = +value, function() {\n    set(this, id).duration = value;\n  };\n}\n\nexport default function(value) {\n  var id = this._id;\n\n  return arguments.length\n      ? this.each((typeof value === \"function\"\n          ? durationFunction\n          : durationConstant)(id, value))\n      : get(this.node(), id).duration;\n}\n","import {get, set} from \"./schedule\";\n\nfunction easeConstant(id, value) {\n  if (typeof value !== \"function\") throw new Error;\n  return function() {\n    set(this, id).ease = value;\n  };\n}\n\nexport default function(value) {\n  var id = this._id;\n\n  return arguments.length\n      ? this.each(easeConstant(id, value))\n      : get(this.node(), id).ease;\n}\n","import {Transition, newId} from \"../transition/index\";\nimport schedule from \"../transition/schedule\";\nimport {easeCubicInOut} from \"d3-ease\";\nimport {now} from \"d3-timer\";\n\nvar defaultTiming = {\n  time: null, // Set on use.\n  delay: 0,\n  duration: 250,\n  ease: easeCubicInOut\n};\n\nfunction inherit(node, id) {\n  var timing;\n  while (!(timing = node.__transition) || !(timing = timing[id])) {\n    if (!(node = node.parentNode)) {\n      return defaultTiming.time = now(), defaultTiming;\n    }\n  }\n  return timing;\n}\n\nexport default function(name) {\n  var id,\n      timing;\n\n  if (name instanceof Transition) {\n    id = name._id, name = name._name;\n  } else {\n    id = newId(), (timing = defaultTiming).time = now(), name = name == null ? null : name + \"\";\n  }\n\n  for (var groups = this._groups, m = groups.length, j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, node, i = 0; i < n; ++i) {\n      if (node = group[i]) {\n        schedule(node, name, id, i, group, timing || inherit(node, id));\n      }\n    }\n  }\n\n  return new Transition(groups, this._parents, name, id);\n}\n","import {selection} from \"d3-selection\";\nimport selection_interrupt from \"./interrupt\";\nimport selection_transition from \"./transition\";\n\nselection.prototype.interrupt = selection_interrupt;\nselection.prototype.transition = selection_transition;\n","import interrupt from \"../interrupt\";\n\nexport default function(name) {\n  return this.each(function() {\n    interrupt(this, name);\n  });\n}\n","import {STARTING, ENDING, ENDED} from \"./transition/schedule\";\n\nexport default function(node, name) {\n  var schedules = node.__transition,\n      schedule,\n      active,\n      empty = true,\n      i;\n\n  if (!schedules) return;\n\n  name = name == null ? null : name + \"\";\n\n  for (i in schedules) {\n    if ((schedule = schedules[i]).name !== name) { empty = false; continue; }\n    active = schedule.state > STARTING && schedule.state < ENDING;\n    schedule.state = ENDED;\n    schedule.timer.stop();\n    if (active) schedule.on.call(\"interrupt\", node, node.__data__, schedule.index, schedule.group);\n    delete schedules[i];\n  }\n\n  if (empty) delete node.__transition;\n}\n","import { select, event as d3event, selection, clientPoint } from 'd3-selection';\nimport { drag as d3drag } from 'd3-drag';\nimport 'd3-transition';\nimport { mergeRecursive } from './common-utils';\n/**\n * This function takes a raw DOM element or\n * a string and returns a d3 selection of that element.\n *\n * @param {HTMLElement | string} element The element to wrap in d3 selection.\n * @return {Selection} Instance of d3 selection.\n */\nconst selectElement = element => select(element);\n\n/**\n * It creates a new d3 element on the parent element\n * @param  {Selection} parent Element to which the element is to be appended\n * @param  {Object} elemType Type of the new element\n * @param  {Array} data Data for the new element\n * @param  {Object} selector classname/id/tagname for the element\n * @return {HTMLElement} Newly Created Element\n */\nconst makeElement = (parent, elemType, data, selector, callbacks = {}, keyFn) => {\n    if ((parent instanceof HTMLElement || parent instanceof SVGElement)) {\n        parent = selectElement(parent);\n    }\n\n    const selectorVal = selector ? selector[0] : null;\n    let selectorType = null;\n    let actualSelector = null;\n    let element = null;\n    let enterSel = null;\n    let mergeSel = null;\n    let filter;\n    if (selectorVal) {\n        if (selectorVal === '#') {\n            selectorType = 'id';\n            actualSelector = selector;\n        } else {\n            selectorType = 'class';\n            actualSelector = selector[0] === '.' ? selector : `.${selector}`;\n        }\n    } else {\n        actualSelector = elemType;\n        filter = true;\n    }\n    element = parent.selectAll(actualSelector);\n\n    filter && (element = element.filter(function () {\n        return this.parentNode === parent.node();\n    }));\n    element = element.data(data, keyFn);\n\n    enterSel = element.enter()\n                            .append(elemType || 'div');\n    callbacks.enter && enterSel.each(function (...params) {\n        callbacks.enter(selectElement(this), ...params);\n    });\n\n    mergeSel = enterSel.merge(element);\n    callbacks.update && mergeSel.each(function (...params) {\n        callbacks.update(selectElement(this), ...params);\n    });\n    if (selectorType === 'class') {\n        mergeSel.classed(selectorVal === '.' ? selector.substring(1, selector.length) : selector, true);\n    } else if (selectorType === 'id') {\n        mergeSel.attr('id', selector.substring(1, selector.length));\n    }\n    const exitSel = element.exit();\n\n    if (callbacks.exit) {\n        exitSel.each(function (...params) {\n            callbacks.exit(selectElement(this), ...params);\n        });\n    } else {\n        exitSel.remove();\n    }\n    return mergeSel;\n};\n\n/**\n * This function applies styles to an element\n *  @param  {Object} elem Element Selection\n * @param  {Object} styleObj Style Object to be applied\n * @return {Element} Newly Created Element\n*/\nconst applyStyle = (elem, styleObj) => {\n    Object.entries(styleObj).forEach((d) => {\n        elem.style(d[0], d[1]);\n    }, this);\n    return elem;\n};\n\n/**\n * This function appends a dom element in another element.\n * @param {HTMLElement | SVGElement} element1 The element in which to append the second element\n * @param {HTMLElement | SVGElement} element2 The element which will be appended.\n */\nconst appendElement = (element1, element2) => {\n    element1.appendChild(element2);\n};\n\n/**\n * Sets the attributes to the element.\n * @param {HTMLElement | SVGElement} element Element on which attributes will be applied\n * @param {Object} attrs Attributes which need to be applied\n */\nconst setElementAttrs = (element, attrs) => {\n    for (const key in attrs) {\n        if ({}.hasOwnProperty.call(attrs, key)) {\n            element.attr(key, attrs[key]);\n        }\n    }\n};\n\n/**\n * Sets attributes in the svg or html element\n * @param {SVGElement | HTMLElement} element The element on which attrs will be applied\n * @param {Array.<Object>} attrs Array of attributes\n * @param {string} className className of elements to select.\n * @return {SVGElement | HTMLElement} SVGElement or html element.\n */\nconst setAttrs = (element, attrs, className) => {\n    if (!(element instanceof selection)) {\n        element = selectElement(element);\n    }\n    className !== undefined ? element.selectAll(`.${className}`).each(function () {\n        setElementAttrs(select(this), attrs);\n    }) : setElementAttrs(element, attrs);\n    return element;\n};\n\n/**\n * Adds a css class to elements which passes the filter function.If filter function is not given,\n * then all elements will be applied the class.\n * @param {HTMLElement | SVGElement} element element\n * @param {string} className css class\n * @param {string} selector css selector\n * @param {Function} filterFn filter method.\n */\nconst addClass = (element, className, selector, filterFn) => {\n    select(element).selectAll(selector).each(function (data) {\n        const elem = select(this);\n        filterFn ? filterFn(data) && elem.classed(className, true) :\n                elem.classed(className, true);\n    });\n};\n\n/**\n * Removes the css class from elements which passes the filter function.If filter function is not given,\n * then all elements will be applied the class.\n * @param {HTMLElement | SVGElement} element element\n * @param {string} className css class\n * @param {string} selector css selector\n * @param {Function} filterFn filter method.\n */\nconst removeClass = (element, className, selector, filterFn) => {\n    select(element).selectAll(selector).each(function (data) {\n        const elem = select(this);\n        filterFn ? filterFn(data) && elem.classed(className, false) :\n                elem.classed(className, false);\n    });\n};\n\n/**\n * Sets styles in the svg or html element\n * @param {SVGElement | HTMLElement} element The element on which styles will be applied\n * @param {Array.<Object>} styles Array of style attributes\n * @return {SVGElement | HTMLElement} SVGElement or html element.\n */\nconst setStyles = (element, styles) => {\n    if (!(element instanceof selection)) {\n        element = selectElement(element);\n    }\n    for (const key in styles) {\n        if ({}.hasOwnProperty.call(styles, key)) {\n            element.style(key, styles[key]);\n        }\n    }\n    return element;\n};\n\n/**\n * Creates svg or html elements by binding data to the selection.Removes extra elements\n * on exit.\n * @param {Object} params Parameter object\n * @param {SVGElement | HTMLElement} params.container Container element where all elements will be appended\n * @param {string} params.selector Selector by which elements will be selected from dom\n * @param {string} params.append Append tag\n * @param {Function} params.each Function which will be executed for each data point and element.\n */\nconst createElements = (params) => {\n    const container = select(params.container);\n    let data;\n    let sel;\n\n    data = params.data;\n    if (typeof data === 'number') {\n        data = Array(data).fill().map((d, i) => i);\n    }\n    sel = container.selectAll(params.selector).data(data);\n\n    sel = container.selectAll(params.selector).filter(function () {\n        return this.parentNode === container.node();\n    }).data(params.data);\n\n    const selectionMerge = sel.enter().append(params.append).merge(sel).each(function (d, i) {\n        params.each(d, select(this), i);\n    });\n\n    selectionMerge.attr('class', params.className || '');\n    sel.exit().remove();\n};\n\n/**\n * Clips an element with given measurement. Basically it is used to hide overflowing portions\n * of any element.\n * @param {SVGElement} container svg element which needs to be clipped.\n * @param {Object} measurement Dimensions of the clipped rectangle.\n * @param {string} id Unique id of the clip element\n */\nconst clipElement = (container, measurement, id) => {\n    const clipPathElement = makeElement(select(container), 'clipPath', [1], `#${id}`);\n    const clipPathRect = makeElement(clipPathElement, 'rect', [1]);\n    clipPathRect.attr('x', measurement.x)\n                    .attr('y', measurement.x)\n                    .attr('width', measurement.width)\n                    .attr('height', measurement.height);\n    clipPathElement.attr('clip-path', `url(#${id})`);\n};\n\n/**\n * Returns the element of the corresponding classname.\n * @param {HTMLElement | SVGElement} node html or svg node element.\n * @param {string} className css class to be applied.\n * @return {HTMLElement | SVGElement} html or svg element.\n */\nconst getElementsByClassName = (node, className) => select(node).selectAll(className).nodes();\n\n/**\n * Gets the mouse position relative to an svg type of element\n * @param {SVGElement} element Any svg element like rect, circle, etc.\n * @param {Event} event Event object.\n * @return {Object} x and y position relative to the container element passed.\n */\nconst getMousePos = (element, event) => {\n    const boundingClientRect = element.getBoundingClientRect();\n    return {\n        x: event.x - boundingClientRect.x,\n        y: event.y - boundingClientRect.y\n    };\n};\n\nconst getClientPoint = (...params) => {\n    const pos = clientPoint(...params);\n    return {\n        x: pos[0],\n        y: pos[1]\n    };\n};\n\n/** This function appends a dom element in another element.\n * @param {Object} tag The tag name of the element to append\n * @param {Object} mount Mount point fo the element\n * @return {Object} selection of the appended element\n */\nconst createElement = (tag, mount) => select(mount).append(tag).node();\n\n/**\n * Gets the d3 event function\n * @return {Object} d3 event\n */\nconst getEvent = () => d3event;\n\n/**\n * Gets the d3 drag function\n * @return {Object} d3 drag\n */\nconst getD3Drag = () => d3drag;\n\nconst getSmartComputedStyle = (group, css) => {\n    let textEl;\n    const testText = 'W';\n    const mandatoryStyle = {\n        'fill-opacity': 0\n    };\n    const className = typeof css === 'string' ? css : (css instanceof Array ? css.join(' ') : undefined);\n\n    if (group.node() instanceof HTMLElement) {\n        textEl = group.append('div').html(testText);\n    } else {\n        textEl = group.append('text').text(testText);\n    }\n\n    if (className) {\n        textEl.attr('class', className);\n    } else if (typeof css === 'object') {\n        delete css['fill-opacity'];\n        mergeRecursive(mandatoryStyle, css);\n    }\n\n    textEl.style(mandatoryStyle);\n    const computedStyle = window.getComputedStyle(textEl.node());\n    const styleForSmartLabel = {\n        fontSize: computedStyle.fontSize,\n        fontFamily: computedStyle.fontFamily,\n        fontWeight: computedStyle.fontWeight,\n        fontStyle: computedStyle.fontStyle\n    };\n\n    textEl.remove();\n\n    return styleForSmartLabel;\n};\n\nconst hasTouch = () => 'ontouchstart' in document.documentElement;\n\nexport {\n    hasTouch,\n    selectElement,\n    makeElement,\n    applyStyle,\n    addClass,\n    removeClass,\n    appendElement,\n    setAttrs,\n    setStyles,\n    createElement,\n    createElements,\n    clipElement,\n    getElementsByClassName,\n    getMousePos,\n    getEvent,\n    getD3Drag,\n    getSmartComputedStyle,\n    getClientPoint\n};\n","const events = [\n    'initialized',\n    'beforeupdate',\n    'updated',\n    'beforedraw',\n    'drawn',\n    'beforeremove',\n    'removed',\n    'animationend'\n];\n\nconst compositions = [\n    'canvas',\n    'unit',\n    'layer',\n    'axis',\n    'facet-headers',\n    'legend',\n    'caption'\n];\n\nconst EVENT_LIST = [];\n\ncompositions.forEach((composition) => {\n    events.forEach((event) => {\n        EVENT_LIST.push(`${composition}.${event}`);\n    });\n});\n\nexport default EVENT_LIST;\n","import EVENT_LIST from './event-list';\nimport { createPromise } from './helper';\n\n/**\n * At first call it accepts one function\n * calling it second time accepts notification object.\n * notification object then called with first accepted function\n *\n * @param {Function} resolveFn a promise's resolve function\n * @return {Function} a function to accept notification object\n */\nconst resolver = resolveFn => notification => resolveFn(notification);\n\n/**\n * Checks if the property string is present in the source object\n *\n * @param {Object} source source object whom you want to check the property\n * @param {string} property key name that need to be checked\n * @return {boolean} returns true if the property found in the source object\n */\nconst hasOwn = (source, property) => Object.prototype.hasOwnProperty.call(source, property);\n\n/**\n * LifeCycleManager which goes as a dependendecy to a muze\n * it accepts notification from the entire library throughout\n * the exeecution life\n *\n * @export\n * @class LifeCycleManager\n */\nexport default class LifeCycleManager {\n\n    /**\n     * Creates an instance of LifeCycleManager.\n     * @memberof LifeCycleManager\n     */\n    constructor () {\n        this._eventList = EVENT_LIST;\n        this._promises = new Map();\n        this._notifiers = {};\n        this._lifeCycles = {};\n        this._unreleasedLifeCycles = {};\n        this._boot();\n    }\n\n    /**\n     * Fills all the notifiers with resolver callback\n     *\n     * @memberof LifeCycleManager\n     */\n    _boot () {\n        this._notifiers = this._eventList.reduce((acc, name) => {\n            acc[name] = resolver;\n            return acc;\n        }, {});\n        this._preparePromises();\n    }\n\n    /**\n     * Public method which gives the promise corresponding\n     * to the event name\n     *\n     * @param {string} eventName name of the event like `canvas.drawn`\n     * @return {promise} promise that is passed to the user\n     * @memberof LifeCycleManager\n     */\n    retrieve (eventName) {\n        return this._promises.get(eventName);\n    }\n\n    /**\n     * Creates a promise that will be passed to user's callback\n     *\n     * @param {string} eventName name of the event like `canvas.drawn`\n     * @return {promise} a pending promise waiting for resolve to be called\n     * @memberof LifeCycleManager\n     */\n    _makeNotifierPromise (eventName) {\n        return new Promise((resolve) => {\n            this._notifiers[eventName] = resolver(resolve);\n        });\n    }\n\n    /**\n     * Prepares the promise map with pending promises\n     * all the promises are in a pending state where their's\n     * resolve function waiting to be called with notification object\n     * @memberof LifeCycleManager\n     */\n    _preparePromises () {\n        this._eventList.forEach((eventName) => {\n            const promise = this._makeNotifierPromise(eventName);\n            this._promises.set(eventName, promise);\n            createPromise(promise, eventName, this);\n        });\n    }\n\n    /**\n     * Resolves the promise with notification object\n     *\n     * @param {string} eventName name of the event in the system\n     * @param {Object} notification notification object\n     * @param {string} notification.formalName name of the sender creating the notification\n     * @param {Object} notification.client instance or array of instances sending the notification\n     * @param {string} notification.action the stage name when the event happened like `beforedraw`\n     *\n     * @memberof LifeCycleManager\n     */\n    _resolvePromise (eventName, notification) {\n        this._notifiers[eventName](notification);\n    }\n\n    /**\n     * Public method which is being called by different\n     * subcompoents of the system at different execution atages\n     * @param {Object} notification notification object\n     * @param {string} notification.formalName name of the sender creating the notification\n     * @param {Object} notification.client instance or array of instances sending the notification\n     * @param {string} notification.action the stage name when the event happened like `beforedraw`\n     * @memberof LifeCycleManager\n     */\n    notify (notification) {\n        // get the composition name from notification\n        // or from static formalName() method\n        const composition = notification.formalName || notification.client.constructor.formalName();\n        notification.formalName = composition;\n        this._releasePromisesFromCache();\n        this._notify(composition, notification);\n    }\n\n    /**\n     * Notify user the with promsie in a callback\n     * if callback not found then cache it\n     *\n     * @param {string} composition\n     * @param {Object} notification notification object\n     * @param {string} notification.formalName name of the sender creating the notification\n     * @param {Object} notification.client instance or array of instances sending the notification\n     * @param {string} notification.action the stage name when the event happened like `beforedraw`\n     * @memberof LifeCycleManager\n     */\n    _notify (composition, notification) {\n        const stage = notification.action;\n        const eventName = `${composition}.${stage}`;\n\n        // resolves promise with the notification object\n        this._resolvePromise(eventName, notification);\n\n        // get the promise from the promise map\n        const promise = this.retrieve(eventName);\n\n        if (this._lifeCycles[composition]) {\n            if (this._lifeCycles[composition][stage]) {\n                // if user given call back exists, then call with promise\n                this._callLifeCycleCallback(composition, stage, promise);\n            } else {\n                // otherwise cache the promise\n                this._cachePromise(composition, stage, promise);\n            }\n        } else {\n            this._cachePromise(composition, stage, promise);\n        }\n    }\n\n    /**\n     * Calls the user's callback with callback\n     *\n     * @param {string} composition name of the compositon like `canvas`\n     * @param {string} stage the stage name when the event happened like `beforedraw`\n     * @param {promise} promise promise that is passed to the user\n     * @memberof LifeCycleManager\n     */\n    _callLifeCycleCallback (composition, stage, promise) {\n        const eventName = `${composition}.${stage}`;\n        this._lifeCycles[composition][stage](promise);\n        this._resetTargetPromise(eventName);\n    }\n\n    /**\n     * Try to clear the cached promsies once we have\n     * macthed callbacks from the user\n     *\n     * @memberof LifeCycleManager\n     */\n    _releasePromisesFromCache () {\n        const compositions = Object.keys(this._unreleasedLifeCycles);\n        compositions.forEach((composition) => {\n            const stages = Object.keys(this._unreleasedLifeCycles[composition]);\n            stages.forEach((stage) => {\n                if (this._lifeCycles[composition]) {\n                    if (this._lifeCycles[composition][stage]) {\n                        // take the promise from unreleased lifeCycles\n                        const promise = this._unreleasedLifeCycles[composition][stage];\n                        // call the user given callback with that promise\n                        this._callLifeCycleCallback(composition, stage, promise);\n                        // delete promise from unreleased lifeCycles\n                        delete this._unreleasedLifeCycles[composition][stage];\n                    }\n                }\n            });\n        });\n    }\n\n    /**\n     * Cache the promise in the map. This cache\n     * then get consumed if we get user callbacks\n     * @param {string} composition name of the compositon like `canvas`\n     * @param {string} stage the stage name when the event happened like `beforedraw`\n     * @param {promise} promise promise that is passed to the user\n     * @memberof LifeCycleManager\n     */\n    _cachePromise (composition, stage, promise) {\n        if (!hasOwn(this._unreleasedLifeCycles, composition)) {\n            this._unreleasedLifeCycles[composition] = {};\n        }\n\n        if (!hasOwn(this._unreleasedLifeCycles[composition], stage)) {\n            this._unreleasedLifeCycles[composition][stage] = {};\n        }\n        this._unreleasedLifeCycles[composition][stage] = promise;\n    }\n\n    /**\n     * It register's the callbacks gievn the user\n     *\n     * @param {Object} [lifeCycles={}] a object with list of callbacks\n     * @memberof LifeCycleManager\n     */\n    register (lifeCycles = {}) {\n        this._lifeCycles = lifeCycles;\n        // as we get all the callbacks, try to call them\n        // from unreleased promise map\n        this._releasePromisesFromCache();\n    }\n\n    /**\n     * Reset the promise into pending state\n     *\n     * @param {string} eventName name of the event happening\n     * @memberof LifeCycleManager\n     */\n    _resetTargetPromise (eventName) {\n        setTimeout(() => {\n            this._notifiers[eventName] = resolver;\n            this._promises.set(eventName, this._makeNotifierPromise(eventName));\n        }, 0);\n    }\n}\n","import LifeCycleManager from './lifecycle-manager';\n\nexport default LifeCycleManager;\n","/**\n * Creates a new promise when the given promise is resolved. This needs to be done so that after the lifecycle event\n * is completed, then again when the event gets completed, then a new promise gets resolved.\n *\n * @param {Promise} promise Instance of promise\n * @param {string} eventName name of event\n * @param {LifeCycleManager} context Instance of lifecyclemanager\n */\nexport const createPromise = (promise, eventName, context) => {\n    promise.then(() => {\n        const prm = context._makeNotifierPromise(eventName);\n        context._promises.set(eventName, prm);\n        createPromise(prm, eventName, context);\n    });\n};\n","import { default as DataModel } from 'datamodel';\nimport * as scales from './scales';\nimport * as colorSchemes from './color-schemes';\nimport * as STATE_NAMESPACES from './enums/namespace';\n\nconst InvalidAwareTypes = DataModel.InvalidAwareTypes;\n\nexport {\n    InvalidAwareTypes,\n    DataModel\n};\n\nexport {\n    ReservedFields,\n    CommonProps,\n    COORD_TYPES\n} from './enums';\n\nexport { STATE_NAMESPACES };\n\nexport {\n    scales,\n    colorSchemes\n};\n\nexport {\n    getNearestValue,\n    getValueParser,\n    transformColors,\n    detectColor,\n    hslToRgb,\n    rgbToHsv,\n    hexToHsv,\n    hsvToRgb,\n    escapeHTML,\n    angleToRadian,\n    generateGetterSetters,\n    getArraySum,\n    ERROR_MSG,\n    interpolator,\n    colorInterpolator,\n    numberInterpolator,\n    piecewiseInterpolator,\n    reqAnimFrame,\n    cancelAnimFrame,\n    nextAnimFrame,\n    getMax,\n    getMin,\n    getDomainFromData,\n    getUniqueId,\n    mergeRecursive,\n    unionDomain,\n    replaceCSSPrefix,\n    symbolFns,\n    defaultValue,\n    easeFns,\n    clone,\n    interpolateArray,\n    getMinPoint,\n    getMaxPoint,\n    getClosestIndexOf,\n    registerListeners,\n    Voronoi,\n    checkExistence,\n    sanitizeIP,\n    getMinDiff,\n    capitalizeFirst,\n    getWindow,\n    getQualifiedClassName,\n    Store,\n    getDependencyOrder,\n    objectIterator,\n    intSanitizer,\n    transactor,\n    enableChainedTransaction,\n    isHTMLElem,\n    isEqual,\n    isSimpleObject,\n    nextFrame,\n    filterPropagationModel,\n    getObjProp,\n    getDataModelFromIdentifiers,\n    getDataModelFromRange,\n    transposeArray,\n    toArray,\n    extendsClass,\n    concatModels,\n    assembleModelFromIdentifiers,\n    isValidValue,\n    nestCollection,\n    stack,\n    getSymbol,\n    Scales,\n    Symbols,\n    pathInterpolators,\n    hslInterpolator,\n    getSmallestDiff,\n    require,\n    formatTemporal,\n    nearestSortingDetails,\n    createSelection,\n    temporalFields,\n    retrieveNearestGroupByReducers,\n    retrieveFieldDisplayName\n} from './common-utils';\n\nexport {\n    selectElement,\n    makeElement,\n    applyStyle,\n    addClass,\n    removeClass,\n    appendElement,\n    setAttrs,\n    setStyles,\n    createElement,\n    createElements,\n    clipElement,\n    getElementsByClassName,\n    getMousePos,\n    getEvent,\n    getD3Drag,\n    getSmartComputedStyle,\n    getClientPoint,\n    hasTouch\n} from './renderer-utils';\n\nexport {\n    timeMillisecond,\n    timeSecond,\n    timeMinute,\n    timeHour,\n    timeDay,\n    timeWeek,\n    timeMonth,\n    timeYear\n} from 'd3-time';\n\nexport { default as Smartlabel } from 'fusioncharts-smartlabel';\n\nexport { dataSelect } from './DataSystem';\n\nexport { default as LifeCycleManager } from './lifecycle-manager';\n\nexport {\n    DimensionSubtype,\n    FieldType,\n    MeasureSubtype,\n    DateTimeFormatter,\n    DM_DERIVATIVES,\n    GROUP_BY_FUNCTIONS\n} from 'datamodel';\n\n","export const DRAG = 'drag';\nexport const HOVER = 'hover';\nexport const SELECTIONDRAG = 'selectiondrag';\nexport const CLICK = 'click';\nexport const LONGTOUCH = 'longtouch';\nexport const TOUCHDRAG = 'touchdrag';\nexport const ALL_ACTIONS = '*';\n","const SELECTION_NEW_ENTRY = 1;\nconst SELECTION_NEW_EXIT = -1;\nconst SELECTION_NULL = 0;\nconst SELECTION_OLD_ENTRY = 2;\nconst SELECTION_OLD_EXIT = -2;\n\nexport {\n    SELECTION_NEW_ENTRY,\n    SELECTION_NEW_EXIT,\n    SELECTION_NULL,\n    SELECTION_OLD_ENTRY,\n    SELECTION_OLD_EXIT\n};\n","import SelectionSet from './selection-set';\n\nexport default SelectionSet;\n","import {\n    SELECTION_NEW_ENTRY, SELECTION_NEW_EXIT, SELECTION_NULL, SELECTION_OLD_ENTRY, SELECTION_OLD_EXIT\n} from '../enums/selection';\n/* eslint-disable guard-for-in */\n\n/**\n * This component is used to keep track of the row tuples of the data which gets added and removed. This keeps\n * information of which rows are in previous and new entry set and previous and new exit set. This is initialized by\n * {@link Firebolt}.\n *\n * @public\n *\n * @class SelectionSet\n */\nclass SelectionSet {\n    /**\n     * Creates an instance of selection set\n     *\n     * @param {Array.<string>} completeSet Set of unique ids.\n     */\n    constructor (completeSet, _volatile) {\n        this.completeSet = completeSet;\n        this._set = completeSet.reduce((obj, key) => {\n            obj[key] = SELECTION_NULL;\n            return obj;\n        }, {});\n        this._volatile = _volatile;\n        this._completeSetCount = completeSet.length;\n        this._lockedSelection = {};\n        this._resetted = true;\n    }\n\n    /**\n     * Adds a set of ids to the selection set. This also moves the other rows to exit set.\n     *\n     * @public\n     * @param {Array.<number|string>} ids Array of unique ids.\n     *\n     * @return {SelectionSet} Instance of selection set.\n     */\n    add (ids) {\n        this._resetted = false;\n\n        const set = this._set;\n        // from exitset to entryset\n        ids.forEach((i) => {\n            set[i] = SELECTION_NEW_ENTRY;\n        });\n\n        for (const key in set) {\n            if (set[key] !== SELECTION_NEW_ENTRY && set[key] !== SELECTION_OLD_ENTRY) {\n                set[key] = set[key] < 0 ? SELECTION_OLD_EXIT : SELECTION_NEW_EXIT;\n            }\n        }\n        return this;\n    }\n\n    /**\n     * Adds an array of ids to the old entry set.\n     *\n     * @param {Array.<number|string>} ids Array of unique ids\n     *\n     * @return {SelectionSet} Instance of selection set.\n     */\n    update (ids) {\n        const set = this._set;\n        // from exitset to entryset\n        ids.forEach((i) => {\n            set[i] = SELECTION_OLD_ENTRY;\n        });\n\n        return this;\n    }\n\n    /**\n     * Moves all ids which in new entry set  to old entry set.\n     *\n     * @public\n     * @param {Array.<number|string>} ids Array of unique ids\n     *\n     * @return {SelectionSet} Instance of selection set.\n     */\n    updateEntry () {\n        const set = this._set;\n\n        // from exitset to entryset\n        for (const key in set) {\n            set[key] = set[key] === SELECTION_NEW_ENTRY ? SELECTION_OLD_ENTRY : set[key];\n        }\n        return this;\n    }\n\n    /**\n     * Moves an array of ids which are in new exit set to old exit set.\n     *\n     * @public\n     *\n     * @param {Array.<number|string>} ids Array of unique ids.\n     *\n     * @return {SelectionSet} Instance of selection set.\n     */\n    updateExit () {\n        const set = this._set;\n        // from exitset to entryset\n        for (const key in set) {\n            set[key] = set[key] === SELECTION_NEW_EXIT ? SELECTION_OLD_EXIT : set[key];\n        }\n        return this;\n    }\n\n    /**\n     * Removes an array of ids from the selection set. It also moves the remaining row ids to entry set.\n     *\n     * @public\n     * @param {Array.<string>} ids Array of unique ids\n     *\n     * @return {SelectionSet}  Instance of selection set\n     */\n    remove (ids) {\n        this._resetted = false;\n\n        const set = this._set;\n        ids.forEach((i) => {\n            set[i] = SELECTION_NEW_EXIT;\n        });\n\n        for (const key in set) {\n            if (set[key] !== SELECTION_NEW_EXIT && set[key] !== SELECTION_OLD_EXIT) {\n                set[key] = set[key] === 0 ? SELECTION_NEW_ENTRY : SELECTION_OLD_ENTRY;\n            }\n        }\n\n        return this;\n    }\n\n    getSets () {\n        const set = this._set;\n        const retObj = {\n            entrySet: [[], []],\n            exitSet: [[], []],\n            completeSet: []\n        };\n\n        for (const key in set) {\n            if (set[key] > 0) {\n                set[key] === SELECTION_OLD_ENTRY && retObj.entrySet[0].push(key);\n                set[key] === SELECTION_NEW_ENTRY && retObj.entrySet[1].push(key);\n            } else if (set[key] < 0) {\n                set[key] === SELECTION_OLD_EXIT && retObj.exitSet[0].push(key);\n                set[key] === SELECTION_NEW_EXIT && retObj.exitSet[1].push(key);\n            }\n            retObj.completeSet.push(key);\n        }\n\n        ['entrySet', 'exitSet'].forEach((type) => {\n            retObj[type] = retObj[type].map(e => e.map(Number));\n        });\n        retObj.completeSet = retObj.completeSet.map(Number);\n\n        return retObj;\n    }\n\n    /**\n     * Resets an array of ids in the selection set to initial state. It sets the value of every unique id value to\n     * null in the selection set which means they are neither in entry set nor in exit set. If no ids are passed,\n     * then it resets all the ids to null.\n     *\n     * @public\n     *\n     * @param {Array} ids Array of unique ids.\n     * @return {SelectionSet} Instance of selection set.\n     */\n    reset (ids) {\n        const set = this._set;\n        if (ids) {\n            ids.forEach((i) => {\n                set[i] = SELECTION_NULL;\n            });\n        } else {\n            const lockedSel = this._lockedSelection;\n            for (const key in set) {\n                if (!(key in lockedSel)) {\n                    set[key] = SELECTION_NULL;\n                }\n            }\n        }\n        this._resetted = true;\n        return this;\n    }\n\n    /**\n     * Gets the set of ids which are added in the selection set.\n     *\n     * @public\n     *\n     * @return {Array.<string>} Array of unique ids\n     */\n    getEntrySet () {\n        const set = this._set;\n        const addSet = [];\n\n        for (const key in set) {\n            set[key] === SELECTION_NEW_ENTRY && addSet.push(key);\n        }\n\n        return addSet;\n    }\n\n    /**\n     * Returns a set of unique ids which are already present in entry set.\n     *\n     * @public\n     * @param {Array} addSet Array of unique ids which are added\n     *\n     * @return {Array} Array of unique ids which are already in old entry set or new entry set\n     */\n    getExistingEntrySet (addSet) {\n        const set = this._set;\n        return addSet.filter(d => set[d] === SELECTION_NEW_ENTRY || set[d] === SELECTION_OLD_ENTRY);\n    }\n\n    /**\n     * Returns a set of unique ids which are already present in exit set.\n     *\n     * @public\n     * @param {Array} addSet Array of unique ids which are added\n     *\n     * @return {Array} Array of unique ids which are already in old exit set or new exit set\n     */\n    getExistingExitSet (removeSet) {\n        const set = this._set;\n        return removeSet.filter(d => set[d] === SELECTION_NEW_EXIT || set[d] === SELECTION_OLD_EXIT);\n    }\n\n    /**\n     * Gets the set of ids which are added in the selection set.\n     * @return {Array.<string>} Array of unique ids\n     */\n    getOldEntry () {\n        const set = this._set;\n        const updateSet = [];\n\n        for (const key in set) {\n            set[key] === SELECTION_OLD_ENTRY && updateSet.push(key);\n        }\n        return updateSet;\n    }\n\n    /**\n     * Gets the set of ids which are added in the selection set.\n     * @return {Array.<string>} Array of unique ids\n     */\n    getOldExit () {\n        const set = this._set;\n        const updateSet = [];\n\n        for (const key in set) {\n            set[key] === SELECTION_OLD_EXIT && updateSet.push(key);\n        }\n\n        return updateSet;\n    }\n\n    /**\n     * Gets the array of ids which are in the exit set.\n     *\n     * @public\n     * @return {Array.<string>} Array of unique ids\n     */\n    getExitSet () {\n        const set = this._set;\n        const removeSet = [];\n\n        for (const key in set) {\n            set[key] === SELECTION_NEW_EXIT && removeSet.push(key);\n        }\n        return removeSet;\n    }\n\n    /**\n     * Gets all the ids which are either in exit or entry set.\n     *\n     * @public\n     * @return {Array} Array of unique ids\n     */\n    getCompleteSet () {\n        const set = this._set;\n        const completeSet = [];\n\n        for (const key in set) {\n            completeSet.push(key);\n        }\n\n        return completeSet;\n    }\n\n    getCompleteSetCount () {\n        return this._completeSetCount;\n    }\n\n    resetted () {\n        return this._resetted;\n    }\n\n    /**\n     * Swaps the add set and remove set in the selection set.\n     * @return {SelectionSet} Instance of selection set.\n     */\n    toggle () {\n        const set = this._set;\n\n        for (const key in set) {\n            if (set[key] === SELECTION_NEW_ENTRY) {\n                set[key] = SELECTION_NEW_EXIT;\n            } else if (set[key] === SELECTION_NEW_EXIT) {\n                set[key] = SELECTION_NEW_ENTRY;\n            } else if (set[key] === SELECTION_OLD_ENTRY) {\n                set[key] = SELECTION_OLD_EXIT;\n            } else {\n                set[key] = SELECTION_OLD_ENTRY;\n            }\n        }\n\n        return this;\n    }\n}\n\nexport default SelectionSet;\n","import { clone, retrieveNearestGroupByReducers } from 'muze-utils';\nimport * as SELECTION from '../enums/selection';\n\nexport const initializeSideEffects = (context, sideEffects) => {\n    const sideEffectsMap = context._sideEffects;\n    const config = context.config();\n    sideEffects = sideEffects instanceof Array ? sideEffects : Object.values(sideEffects);\n    sideEffects.forEach((SideEffect) => {\n        const formalName = SideEffect.formalName();\n        const sideEffectInstance = sideEffectsMap[formalName];\n        sideEffectsMap[formalName] = sideEffectInstance || new SideEffect(context);\n        const sideEffectConf = config[formalName];\n        sideEffectConf && sideEffectsMap[formalName].config(sideEffectConf);\n    });\n    return sideEffectsMap;\n};\n\nexport const initializeBehaviouralActions = (context, actions) => {\n    const dispatchableBehaviours = {};\n\n    actions = actions instanceof Array ? actions : Object.values(actions);\n    actions.forEach((Action) => {\n        dispatchableBehaviours[Action.formalName()] = new Action(context);\n    });\n    return dispatchableBehaviours;\n};\n\nexport const initializePhysicalActions = (context, actions) => {\n    const physicalActions = {};\n\n    for (const name in actions) {\n        if (!({}).hasOwnProperty.call(name, actions)) {\n            physicalActions[name] = actions[name](context);\n        }\n    }\n    return physicalActions;\n};\n\nexport const changeSideEffectAvailability = (context, fn, toEnable) => {\n    const sideEffects = context.sideEffects();\n    for (const key in sideEffects) {\n        if ({}.hasOwnProperty.call(sideEffects, key)) {\n            let change = true;\n            if (fn && fn(key) === false) {\n                change = false;\n            }\n            if (change) {\n                toEnable ? sideEffects[key].enable() : sideEffects[key].disable();\n            }\n        }\n    }\n};\n\nexport const getMergedSet = set => [...new Set([...set[0], ...set[1]])];\n\nexport const getSourceFields = (propagationInf, criteria = {}) => {\n    const sourceIdentifiers = propagationInf.sourceIdentifiers;\n    let sourceFields;\n    if (sourceIdentifiers) {\n        sourceFields = sourceIdentifiers.getSchema().map(d => d.name);\n    } else if (criteria instanceof Array) {\n        sourceFields = criteria[0];\n    } else {\n        sourceFields = Object.keys(criteria || {});\n    }\n    return sourceFields;\n};\n\nconst conditionsMap = {\n    newEntry: [SELECTION.SELECTION_NEW_ENTRY],\n    oldEntry: [SELECTION.SELECTION_OLD_ENTRY],\n    mergedEnter: [SELECTION.SELECTION_NEW_ENTRY, SELECTION.SELECTION_OLD_ENTRY],\n    newExit: [SELECTION.SELECTION_NEW_EXIT],\n    oldExit: [SELECTION.SELECTION_OLD_EXIT],\n    mergedExit: [SELECTION.SELECTION_NEW_EXIT, SELECTION.SELECTION_OLD_EXIT],\n    complete: []\n};\n\nexport const getModelFromSet = (type, model, set) => {\n    if (model) {\n        return model.select((fields, i) =>\n           (conditionsMap[type].some(condition => set[i] === condition)), {\n               saveChild: false\n           });\n    }\n    return null;\n};\n\nexport const getSetInfo = (type, set, config) => {\n    let model = null;\n    const filteredDataModel = config.filteredDataModel;\n    const selectionSet = config.selectionSet;\n    if (!config.propagationData) {\n        if (selectionSet.resetted()) {\n            model = null;\n        } else {\n            model = getModelFromSet(type, config.dataModel, config.selectionSet._set);\n        }\n    } else if (filteredDataModel) {\n        model = type === 'mergedEnter' ? filteredDataModel[0] : filteredDataModel[1];\n    }\n    return {\n        uids: set,\n        length: set.length,\n        model\n    };\n};\n\nexport const getSideEffects = (behaviour, behaviourEffectMap) => {\n    const sideEffects = [];\n    for (const key in behaviourEffectMap) {\n        const behaviours = key.split(',');\n        const found = behaviours.some(d => d === behaviour);\n        if (found) {\n            sideEffects.push({\n                effects: behaviourEffectMap[key],\n                behaviours\n            });\n        }\n    }\n    return sideEffects;\n};\n\nexport const unionSets = (context, behaviours) => {\n    let combinedSet = {};\n    const models = {\n        mergedEnter: null,\n        mergedExit: null\n    };\n    behaviours.forEach((behaviour) => {\n        const entryExitSet = context._entryExitSet[behaviour];\n        if (entryExitSet) {\n            combinedSet = Object.assign(combinedSet, clone(entryExitSet));\n            ['mergedEnter', 'mergedExit'].forEach((type) => {\n                const model = entryExitSet[type].model;\n                let existingModel = models[type];\n                let aggFns = retrieveNearestGroupByReducers(model);\n                if (!existingModel) {\n                    existingModel = models[type] = model;\n                } else if (`${model.getSchema().map(d => d.name).sort()}` ===\n                    `${existingModel.getSchema().map(d => d.name).sort()}`) {\n                    aggFns = Object.assign({}, retrieveNearestGroupByReducers(existingModel));\n                    existingModel = models[type] = model.union(existingModel);\n                } else {\n                    existingModel = model;\n                }\n                combinedSet[type].model = existingModel;\n                combinedSet[type].aggFns = aggFns;\n            });\n        }\n    });\n    return combinedSet;\n};\n","import {\n    mergeRecursive,\n    hasTouch,\n    filterPropagationModel,\n    FieldType,\n    selectElement,\n    isSimpleObject\n} from 'muze-utils';\nimport { ALL_ACTIONS } from './enums/actions';\nimport SelectionSet from './selection-set';\nimport {\n    initializeBehaviouralActions,\n    initializeSideEffects,\n    changeSideEffectAvailability,\n    initializePhysicalActions,\n    unionSets,\n    getSideEffects\n} from './helper';\n\n/**\n * This class is responsible for dispatching behavioural actions and side effects. It also keeps the information of\n * registered physical actions, behavioural actions and side effects. Also, it keeps the map of physical and behavioural\n * actions and behavioural actions and side effects. Whenever any behavioural action is dispatched, it also propagates\n * the rows which got affected to the other datamodels. This class is initialized by {@link VisualUnit} and legend to\n * manage it's interaction.\n *\n * @public\n * @class Firebolt\n * @module Firebolt\n */\nexport default class Firebolt {\n    constructor (context, actions, sideEffects, behaviourEffectMap) {\n        this.context = context;\n        this._sideEffectDefinitions = {};\n        this._sideEffects = {};\n        this._propagationInf = {};\n        this._actions = {\n            behavioural: {},\n            physical: {}\n        };\n        this._selectionSet = {};\n        this._volatileSelectionSet = {};\n        this._propagationFields = {};\n        this._sourceSideEffects = {\n            selectionBox: () => false\n        };\n        this._propagationBehaviourMap = {};\n        this._sourceBehaviours = {};\n        this._actionBehaviourMap = {};\n        this._config = {};\n        this._behaviourEffectMap = {};\n        this._entryExitSet = {};\n        this._actionHistory = {};\n        this._queuedSideEffects = {};\n\n        this.mapSideEffects(behaviourEffectMap);\n        this.registerBehaviouralActions(actions.behavioural);\n        this.registerSideEffects(sideEffects);\n        this.registerPhysicalBehaviouralMap(actions.physicalBehaviouralMap);\n        this.registerPhysicalActions(actions.physical);\n    }\n\n    config (...config) {\n        if (config.length) {\n            this._config = mergeRecursive(this._config, config[0]);\n            return this;\n        }\n        return this._config;\n    }\n\n    mapSideEffects (behEffectMap) {\n        const behaviourEffectMap = this._behaviourEffectMap;\n        for (const key in behEffectMap) {\n            if ({}.hasOwnProperty.call(behEffectMap, key)) {\n                const sideEffects = behEffectMap[key] || [];\n                let preventDefaultActions = false;\n                let effectNames;\n                if (isSimpleObject(sideEffects)) {\n                    effectNames = sideEffects.effects;\n                    preventDefaultActions = sideEffects.preventDefaultActions;\n                } else {\n                    effectNames = sideEffects;\n                }\n                !behaviourEffectMap[key] && (behaviourEffectMap[key] = []);\n                this._behaviourEffectMap[key] = [...new Set(preventDefaultActions ? effectNames :\n                    [...behaviourEffectMap[key], ...effectNames])];\n            }\n        }\n        return this;\n    }\n\n    registerBehaviouralActions (actions) {\n        const behaviours = initializeBehaviouralActions(this, actions);\n        this.prepareSelectionSets(behaviours);\n        Object.assign(this._actions.behavioural, behaviours);\n        return this;\n    }\n\n    prepareSelectionSets () {\n        return this;\n    }\n\n    registerSideEffects (sideEffects) {\n        for (const key in sideEffects) {\n            this._sideEffectDefinitions[sideEffects[key].formalName()] = sideEffects[key];\n        }\n        this.initializeSideEffects();\n        return this;\n    }\n\n    applySideEffects (sideEffects, selectionSet, payload) {\n        const sideEffectStore = this.sideEffects();\n        const actionHistory = this._actionHistory;\n        const queuedSideEffects = this._queuedSideEffects;\n        sideEffects.forEach((sideEffect) => {\n            let options;\n            let name;\n            const effects = sideEffect.effects;\n            const behaviours = sideEffect.behaviours;\n            const combinedSet = unionSets(this, behaviours, selectionSet);\n            effects.forEach((effect) => {\n                if (typeof effect === 'object') {\n                    name = effect.name;\n                    options = effect.options;\n                } else {\n                    name = effect;\n                }\n\n                const sideEffectInstance = sideEffectStore[name];\n                if (sideEffectInstance.isEnabled()) {\n                    if (!sideEffectInstance.constructor.mutates() &&\n                        Object.values(actionHistory).some(d => d.isMutableAction)) {\n                        queuedSideEffects[`${name}-${behaviours.join()}`] = {\n                            name,\n                            params: [combinedSet, payload, options]\n                        };\n                    } else {\n                        this.dispatchSideEffect(name, combinedSet, payload, options);\n                    }\n                }\n            });\n        });\n        return this;\n    }\n\n    dispatchSideEffect (name, selectionSet, payload, options = {}) {\n        const sideEffectStore = this.sideEffects();\n        const sideEffect = sideEffectStore[name];\n        let disable = false;\n        if (options.filter && options.filter(sideEffect)) {\n            disable = true;\n        }\n        !disable && sideEffectStore[name].apply(selectionSet, payload, options);\n    }\n\n    registerPropagationBehaviourMap (map) {\n        this._propagationBehaviourMap = Object.assign(this._propagationBehaviourMap, map || {});\n        return this;\n    }\n\n    dispatchBehaviour (behaviour, payload, propagationInfo = {}) {\n        const propagate = propagationInfo.propagate !== undefined ? propagationInfo.propagate : true;\n        const behaviouralActions = this._actions.behavioural;\n        const action = behaviouralActions[behaviour];\n        const behaviourEffectMap = this._behaviourEffectMap;\n        const sideEffects = getSideEffects(behaviour, behaviourEffectMap);\n        this._propagationInf = propagationInfo;\n\n        if (action) {\n            const selectionSet = action.dispatch(payload);\n            const propagationSelectionSet = this.getPropagationSelectionSet(selectionSet);\n            this._entryExitSet[behaviour] = propagationSelectionSet;\n            const shouldApplySideEffects = this.shouldApplySideEffects(propagate);\n\n            if (propagate) {\n                this.propagate(behaviour, payload, selectionSet.find(d => d.sourceSelectionSet), sideEffects);\n            }\n            if (shouldApplySideEffects) {\n                const applicableSideEffects = this.getApplicableSideEffects(sideEffects, payload, propagationInfo);\n                this.applySideEffects(applicableSideEffects, propagationSelectionSet, payload);\n            }\n        }\n\n        return this;\n    }\n\n    getPropagationSelectionSet (selectionSet) {\n        return selectionSet.find(d => !d.sourceSelectionSet);\n    }\n\n    shouldApplySideEffects () {\n        return true;\n    }\n\n    changeBehaviourStateOnPropagation (behaviour, value) {\n        if (value instanceof Function) {\n            this._sourceBehaviours[behaviour] = value;\n        } else {\n            this._sourceBehaviours[behaviour] = () => value;\n        }\n        return this;\n    }\n\n    changeSideEffectStateOnPropagation (sideEffect, value) {\n        if (value instanceof Function) {\n            this._sourceSideEffects[sideEffect] = value;\n        } else {\n            this._sourceSideEffects[sideEffect] = () => value;\n        }\n    }\n\n    propagate () {\n        return this;\n    }\n\n    sideEffects (...sideEffects) {\n        if (sideEffects.length) {\n            this._sideEffects = sideEffects[0];\n            return this;\n        }\n        return this._sideEffects;\n    }\n\n    enableSideEffects (fn) {\n        changeSideEffectAvailability(this, fn, true);\n        return this;\n    }\n\n    disableSideEffects (fn) {\n        changeSideEffectAvailability(this, fn, false);\n        return this;\n    }\n\n    dissociateBehaviour (behaviour, physicalAction) {\n        const actionBehaviourMap = this._actionBehaviourMap;\n        for (const key in actionBehaviourMap) {\n            if (key === physicalAction) {\n                const behaviourMap = actionBehaviourMap[key];\n                behaviourMap.behaviours = behaviourMap.behaviours.filter(d => d !== behaviour);\n                this.mapActionsAndBehaviour(key);\n            }\n        }\n\n        return this;\n    }\n\n    dissociateSideEffect (sideEffect, behaviour) {\n        const behaviourEffectMap = this._behaviourEffectMap;\n        behaviourEffectMap[behaviour] = behaviourEffectMap[behaviour].filter(d => (d.name || d) !== sideEffect);\n        return this;\n    }\n\n    getApplicableSideEffects (sideEffects) {\n        return sideEffects;\n    }\n\n    attachPropagationListener (dataModel) {\n        dataModel.unsubscribe('propagation');\n        dataModel.on('propagation', this.onDataModelPropagation());\n        return this;\n    }\n\n    onDataModelPropagation () {\n        return (propValue) => {\n            const payload = propValue.payload;\n            const action = payload.action;\n\n            this.dispatchBehaviour(action, payload, {\n                propagate: false\n            });\n        };\n    }\n\n    createSelectionSet (uniqueIds, behaviouralActions) {\n        const behaviours = behaviouralActions || this._actions.behavioural;\n        const selectionSet = this._selectionSet;\n        const volatileSelectionSet = this._volatileSelectionSet;\n\n        for (const key in behaviours) {\n            if ({}.hasOwnProperty.call(behaviours, key)) {\n                selectionSet[key] = new SelectionSet(uniqueIds);\n                volatileSelectionSet[key] = new SelectionSet(uniqueIds, true);\n            }\n        }\n        this._volatileSelectionSet = volatileSelectionSet;\n        this.selectionSet(selectionSet);\n        return this;\n    }\n\n    selectionSet (...selectionSet) {\n        if (selectionSet.length) {\n            this._selectionSet = selectionSet[0];\n            return this;\n        }\n        return this._selectionSet;\n    }\n\n    initializeSideEffects () {\n        const sideEffectDefinitions = this._sideEffectDefinitions;\n        this.sideEffects(initializeSideEffects(this, sideEffectDefinitions));\n        return this;\n    }\n\n    registerPhysicalActions (actions) {\n        const initedActions = initializePhysicalActions(this, actions);\n        Object.assign(this._actions.physical, initedActions);\n        return this;\n    }\n\n    /**\n     * Allows to propagate the datamodel with only the supplied fields. When propagation is done, then the fields\n     * which are supplied for the specified behavioural action is propagated.\n     *\n     * @public\n     *\n     * @param {string} action Name of behavioural action. If '*' is specified, then for all behavioural actions it is\n     * applied.\n     * @param {Array} fields Array of field names which will be propagated.\n     * @param {boolean} append If true, then it is appended to the existing propagation data model fields else only\n     * those fields are projected from propagation data model and propagated.\n     *\n     * @return {Firebolt} Instance of firebolt\n     */\n    propagateWith (action, fields, append = false) {\n        const behaviouralActions = this._actions.behavioural;\n        if (fields.length) {\n            if (action === ALL_ACTIONS) {\n                for (const key in behaviouralActions) {\n                    this._propagationFields[key] = {\n                        fields,\n                        append\n                    };\n                }\n            } else {\n                this._propagationFields[action] = {\n                    fields,\n                    append\n                };\n            }\n            return this;\n        }\n        return this._propagationFields;\n    }\n\n    /**\n     * Map actions and behaviours\n     * @return {Firebolt} Firebolt instance\n     */\n    mapActionsAndBehaviour (phyAction) {\n        const initedPhysicalActions = this._actions.physical;\n        const map = this._actionBehaviourMap;\n\n        for (const action in map) {\n            if (!({}).hasOwnProperty.call(action, map) && action === (phyAction || action)) {\n                let target;\n                const mapObj = map[action];\n                target = mapObj.target;\n                const touch = mapObj.touch;\n                if (!target) {\n                    target = this.context.getDefaultTargetContainer();\n                }\n                const bind = hasTouch() ? touch === true || touch === undefined : !touch;\n                bind && this.bindActionWithBehaviour(initedPhysicalActions[action],\n                    target, mapObj.behaviours);\n            }\n        }\n        return this;\n    }\n\n    registerPhysicalBehaviouralMap (map) {\n        this._actionBehaviourMap = mergeRecursive(this._actionBehaviourMap, map);\n        return this;\n    }\n\n    /**\n     * Binds a target element with an action.\n     *\n     * @param {Function} action Action method\n     * @param {string} target Class name of element\n     * @param {Array} behaviourList Array of behaviours\n     * @return {FireBolt} Instance of firebolt\n     */\n    bindActionWithBehaviour (action, targets, behaviourList) {\n        if (typeof (targets) === 'string') {\n            targets = [targets];\n        }\n        targets.forEach((target) => {\n            const mount = this.context.mount();\n            const nodes = target.node instanceof Function ? target : selectElement(mount).selectAll(target);\n            if (!nodes.empty()) {\n                if (nodes instanceof Array) {\n                    nodes.forEach((node) => {\n                        action(selectElement(node), behaviourList);\n                    });\n                } else {\n                    action(nodes, behaviourList);\n                }\n            }\n        });\n        return this;\n    }\n\n    getPropagationInf () {\n        return this._propagationInf;\n    }\n\n    getAddSetFromCriteria (criteria, propagationInf = {}) {\n        const context = this.context;\n        const filteredDataModel = propagationInf.data ? propagationInf.data :\n            context.getDataModelFromIdentifiers(criteria, 'all');\n        const xFields = context.fields().x || [];\n        const yFields = context.fields().y || [];\n        const xMeasures = xFields.every(field => field.type() === FieldType.MEASURE);\n        const yMeasures = yFields.every(field => field.type() === FieldType.MEASURE);\n        return {\n            model: filteredDataModel,\n            uids: criteria === null ? null : (propagationInf.data ? filterPropagationModel(this.getFullData(),\n                propagationInf.data[0], xMeasures && yMeasures).getData().uids : filteredDataModel[0].getData().uids)\n        };\n    }\n\n    getSelectionSets (action) {\n        const sourceId = this.context.id();\n        const propagationInf = this._propagationInf || {};\n        const propagationSource = propagationInf.sourceId;\n        let applicableSelectionSets = [];\n        if (propagationSource !== sourceId) {\n            applicableSelectionSets = [this._volatileSelectionSet[action]];\n        }\n\n        if (propagationSource) {\n            applicableSelectionSets.push(this.selectionSet()[action]);\n        }\n        return applicableSelectionSets;\n    }\n\n    getFullData () {\n        return this.context.data();\n    }\n\n    resetted () {\n        return this._resetted;\n    }\n\n    /**\n     * Returns the entry and exit set information of the specified behavioural action.\n     *\n     * @public\n     *\n     * @param {string} behaviour Name of behavioural action.\n     *\n     * @return {Object} Entry exit set information.\n     */\n    getEntryExitSet (behaviour) {\n        return this._entryExitSet[behaviour];\n    }\n}\n","import { getSetInfo, getMergedSet, getSourceFields } from '../../helper';\n\n/**\n * This is the base class has all the common functionalities needed for all behavioural actions. Any other behavioural\n * action needs to extend this class.\n *\n * @public\n * @class GenericBehaviour\n * @module GenericBehaviour\n */\nexport default class GenericBehaviour {\n    constructor (firebolt) {\n        this.firebolt = firebolt;\n        this._enabled = true;\n    }\n\n    /**\n     * Returns entry and exit set information. This method is called by firebolt when ```dispatchBehaviour``` is called\n     * dynamically or when any physical action is triggered on the chart.\n     *\n     * @param {Object} payload Payload information.\n     * @param {Object|Array} payload.criteria Identifiers of data interacted with.\n     *\n     * @return {Array} Entry and exit set information.\n     */\n    dispatch (payload) {\n        const criteria = payload.criteria;\n        const firebolt = this.firebolt;\n        const formalName = this.constructor.formalName();\n        const selectionSets = firebolt.getSelectionSets(formalName);\n        const {\n            model: filteredDataModel,\n            uids\n        } = this.firebolt.getAddSetFromCriteria(criteria, this.firebolt.getPropagationInf());\n        const entryExitSets = selectionSets.map((selectionSet) => {\n            this.setSelectionSet(uids, selectionSet);\n            return this.getEntryExitSet(selectionSet, filteredDataModel, payload);\n        });\n\n        return entryExitSets;\n    }\n\n    /**\n     * Updates the selection set by adding uids to the instance of {@link SelectionSet} or removing them.\n     * {@link SelectionSet} keeps the information of which rows are in the entry set and exit set.\n     *\n     * @public\n     * @param {Array} addSet Array of row ids which got affected during interaction.\n     * @param {SelectionSet} selectionSet Instance of selection set.\n     *\n     * @return {GenericBehaviour} Instance of behaviour.\n     */\n    setSelectionSet () {\n        return this;\n    }\n\n    getEntryExitSet (selectionSet, filteredDataModel, payload) {\n        const {\n            entrySet,\n            exitSet,\n            completeSet\n        } = selectionSet.getSets();\n        const propagationInf = this.firebolt.getPropagationInf();\n        const dataModel = this.firebolt.getFullData();\n        const setConfig = {\n            isSourceFieldPresent: propagationInf.isSourceFieldPresent,\n            dataModel,\n            filteredDataModel,\n            propagationData: propagationInf.data,\n            selectionSet\n        };\n\n        return {\n            entrySet: [getSetInfo('oldEntry', entrySet[0], setConfig),\n                getSetInfo('newEntry', entrySet[1], setConfig)],\n            exitSet: [getSetInfo('oldEntry', exitSet[0], setConfig),\n                getSetInfo('newExit', exitSet[1], setConfig)],\n            mergedEnter: getSetInfo('mergedEnter', getMergedSet(entrySet), setConfig),\n            mergedExit: getSetInfo('mergedExit', getMergedSet(exitSet), setConfig),\n            completeSet: getSetInfo('complete', completeSet, setConfig),\n            isSourceFieldPresent: propagationInf.isSourceFieldPresent,\n            fields: getSourceFields(propagationInf, payload.criteria),\n            sourceSelectionSet: selectionSet._volatile === true\n        };\n    }\n\n    static mutates () {\n        return false;\n    }\n\n    enable () {\n        this._enabled = true;\n    }\n\n    disable () {\n        this._enabled = false;\n    }\n\n    isEnabled () {\n        return this._enabled;\n    }\n}\n\n","import GenericBehaviour from './generic';\nimport { getMergedSet } from '../../helper';\nimport * as SELECTION from '../../enums/selection';\n\nexport default class VolatileBehaviour extends GenericBehaviour {\n    setSelectionSet (addSet, selectionSet) {\n        if (addSet === null) {\n            selectionSet.reset();\n        } else if (addSet.length) {\n                // new add set\n            const existingAddSet = addSet.filter(d => selectionSet._set[d] === SELECTION.SELECTION_NEW_ENTRY\n                    || selectionSet._set[d] === SELECTION.SELECTION_OLD_ENTRY);\n            selectionSet.updateExit();\n            const { entrySet } = selectionSet.getSets();\n            selectionSet.reset(getMergedSet(entrySet));\n            selectionSet.add(addSet);\n            selectionSet.update(existingAddSet);\n        } else {\n            selectionSet.remove(selectionSet.getCompleteSet());\n        }\n    }\n}\n","export const BRUSH = 'brush';\nexport const HIGHLIGHT = 'highlight';\nexport const TOOLTIP = 'tooltip';\nexport const FILTER = 'filter';\nexport const SELECT = 'select';\n","import VolatileBehaviour from './volatile';\nimport { HIGHLIGHT } from '../../enums/behaviours';\n\nexport default class HighlightBehaviour extends VolatileBehaviour {\n    static formalName () {\n        return HIGHLIGHT;\n    }\n}\n","import VolatileBehaviour from './volatile';\nimport * as BEHAVIOURNAMES from '../../enums/behaviours';\n\n/**\n * This is the behaviour for brushing a region on the chart. It accepts a payload\n * which contains the x and y range of the data and other configuration. It will then\n * create a selection box from the range and select the points which fall within the range.\n */\nexport default class BrushBehaviour extends VolatileBehaviour {\n    static formalName () {\n        return BEHAVIOURNAMES.BRUSH;\n    }\n}\n","import VolatileBehaviour from './volatile';\nimport { FILTER } from '../../enums/behaviours';\n\nexport default class FilterBehaviour extends VolatileBehaviour {\n    static formalName () {\n        return FILTER;\n    }\n\n    static mutates () {\n        return true;\n    }\n}\n","import GenericBehaviour from './generic';\nimport { getMergedSet } from '../../helper';\nimport * as SELECTION from '../../enums/selection';\n\nexport default class PersistentBehaviour extends GenericBehaviour {\n    setSelectionSet (addSet, selectionSet) {\n        if (addSet === null) {\n            selectionSet.reset();\n        } else if (addSet.length) {\n            const propagationInf = this.firebolt.getPropagationInf();\n            // new add set\n            const existingAddSet = addSet.filter(d => selectionSet._set[d] === SELECTION.SELECTION_NEW_ENTRY\n                || selectionSet._set[d] === SELECTION.SELECTION_OLD_ENTRY);\n            if (propagationInf.propagate === false) {\n                selectionSet.updateExit();\n                const { entrySet } = selectionSet.getSets();\n                selectionSet.reset(getMergedSet(entrySet));\n                selectionSet.add(addSet);\n                selectionSet.update(existingAddSet);\n            } else {\n                // existing add set\n                if (existingAddSet.length) {\n                    selectionSet.updateExit();\n                    selectionSet.remove(existingAddSet);\n                } else {\n                    selectionSet.updateEntry();\n                    selectionSet.add(addSet);\n                }\n                const { exitSet } = selectionSet.getSets();\n                const mergedExitSet = getMergedSet(exitSet);\n                const completeSetCount = selectionSet.getCompleteSet().length;\n                if (mergedExitSet.length === completeSetCount) {\n                    selectionSet.reset();\n                }\n            }\n        } else {\n            selectionSet.remove(selectionSet.getCompleteSet());\n        }\n\n        return this;\n    }\n}\n","import PersistentBehaviour from './persistent';\nimport { SELECT } from '../../enums/behaviours';\n\nexport default class SelectBehaviour extends PersistentBehaviour {\n    static formalName () {\n        return SELECT;\n    }\n}\n\n","import { DimensionSubtype, MeasureSubtype } from 'muze-utils';\n/**\n * Gets the drag action configuration\n * @param {VisualUnit} instance instance of visual unit\n * @param {Object} config x y positions\n * @return {Object} Payload of behaviour\n*/\n/* istanbul ignore next */ const getDragActionConfig = (sourceInfo, config, fieldsConfig) => {\n    if (!(sourceInfo.axes.x || sourceInfo.axes.y)) {\n        return {\n            criteria: null\n        };\n    }\n\n    const axes = sourceInfo.axes;\n    const xAxis = axes.x[0];\n    const yAxis = axes.y[0];\n    const axisFields = sourceInfo.fields;\n    const xField = axisFields.x[0].getMembers()[0];\n    const yField = axisFields.y[0].getMembers()[0];\n    const xFieldType = fieldsConfig[xField].def.subtype;\n    const yFieldType = fieldsConfig[yField].def.subtype;\n    const dimensions = {};\n    const stPos = config.startPos;\n    const endPos = config.endPos;\n\n    if (stPos.x === endPos.x && stPos.y === endPos.y) {\n        return {\n            criteria: null\n        };\n    }\n\n    const dragDim = xFieldType === MeasureSubtype.CONTINUOUS ? (yFieldType === MeasureSubtype.CONTINUOUS ?\n        ['x', 'y'] : ['y']) : ['x'];\n    const criteria = {};\n    const isXDimension = xFieldType === DimensionSubtype.CATEGORICAL;\n    const isYDimension = yFieldType === DimensionSubtype.CATEGORICAL;\n    const xRange = xAxis.invertExtent(stPos.x, endPos.x);\n    const yRange = yAxis.invertExtent(stPos.y, endPos.y);\n    const selectedDomains = {\n        x: stPos.x === endPos.x ? [] : (isXDimension ? xRange : xRange.sort((a, b) => a - b)),\n        y: stPos.y === endPos.y ? [] : (isYDimension ? yRange : yRange.sort((a, b) => a - b))\n    };\n    const rangeObj = {};\n\n    if (dragDim.length === 2) {\n        rangeObj[xField] = selectedDomains.x;\n        rangeObj[yField] = selectedDomains.y;\n        if (xField === yField) {\n            const xdom = selectedDomains.x;\n            const ydom = selectedDomains.y;\n            const min = xdom[0] > ydom[0] ? ydom : xdom;\n            const max = min === ydom ? xdom : ydom;\n            if (min[1] < max[0]) {\n                rangeObj[xField] = [];\n            } else {\n                rangeObj[xField] = [max[0], min[1] < max[1] ? min[1] : max[1]];\n            }\n            dimensions.x = [stPos.x, endPos.x];\n            dimensions.y = [stPos.y, endPos.y];\n        }\n    } else {\n        criteria[dragDim[0]] = selectedDomains[dragDim[0]] || [];\n\n        if (dragDim[0] === 'x') {\n            rangeObj[xField] = criteria.x;\n            if (xFieldType === DimensionSubtype.CATEGORICAL) {\n                dimensions.x = (config.snap && stPos.x !== endPos.x) ? xAxis.getNearestRange(stPos.x, endPos.x) :\n                    [stPos.x, endPos.x];\n            }\n        } else {\n            rangeObj[yField] = criteria.y;\n            if (yFieldType === DimensionSubtype.CATEGORICAL) {\n                dimensions.y = (config.snap && stPos.y !== endPos.y) ? yAxis.getNearestRange(stPos.y, endPos.y) :\n                    [stPos.y, endPos.y];\n            }\n        }\n    }\n\n    return {\n        criteria: rangeObj,\n        dimensions\n    };\n};\n\nexport default getDragActionConfig;\n","import {\n    getEvent,\n    getD3Drag\n } from 'muze-utils';\n\nimport getDragActionConfig from './drag-action-config';\n\n/**\n * Adds dragging action to the target element.\n * @param {VisualUnit} instance Instance of visual unit.\n * @param {SVGElement} targetEl Element on which brushing action is needed.\n * @param {Array} behaviours Array of behaviours\n */\nexport const attachDragEvent = (targetEl, behaviours, firebolt, touch) => {\n    let startPos = {};\n    let endPos = {};\n    let drawingInf;\n\n    const d3Drag = getD3Drag();\n    let touchStart;\n    targetEl.call(d3Drag().on('start', () => {\n        const event = getEvent();\n        startPos = {\n            x: event.x,\n            y: event.y\n        };\n        drawingInf = firebolt.context.getDrawingContext();\n        touchStart = new Date().getTime();\n    }).on('drag', () => {\n        const event = getEvent();\n        endPos = {\n            x: event.x,\n            y: event.y\n        };\n        if (touch && Math.abs(startPos.x - endPos.x) <= 5) {\n            return;\n        }\n        endPos.x = Math.max(0, Math.min(endPos.x, drawingInf.width));\n        endPos.y = Math.max(0, Math.min(endPos.y, drawingInf.height));\n\n        const payload = getDragActionConfig(firebolt.context.getSourceInfo(), {\n            startPos,\n            endPos\n        }, firebolt.context.data().getFieldsConfig());\n        behaviours.forEach(beh => firebolt.dispatchBehaviour(beh, payload));\n    }).on('end', () => {\n        const event = getEvent();\n        endPos = {\n            x: event.x,\n            y: event.y\n        };\n        const duration = new Date().getTime() - touchStart;\n\n        if (touch && duration > 100 && Math.abs(startPos.x - endPos.x) <= 5) {\n            return;\n        }\n        endPos.x = Math.max(0, Math.min(endPos.x, drawingInf.width));\n        endPos.y = Math.max(0, Math.min(endPos.y, drawingInf.height));\n\n        const payload = getDragActionConfig(firebolt.context.getSourceInfo(), {\n            startPos,\n            endPos,\n            snap: true\n        }, firebolt.context.data().getFieldsConfig());\n        payload.dragEnd = true;\n        behaviours.forEach(beh => firebolt.dispatchBehaviour(beh, payload));\n    }));\n};\n\n","import { getClientPoint, getEvent } from 'muze-utils';\nimport { CONSOLIDATED, FRAGMENTED } from '../../enums/constants';\n\n/**\n * Adds mouse interactions to target element.\n * @param {Firebolt} instance instance of firebolt.\n * @param {SVGElement} targetEl Element on which the event listeners will be attached.\n * @param {Array} behaviours Array of behaviours\n */\n/* istanbul ignore next */ const hover = firebolt => (targetEl, behaviours) => {\n    const dispatchBehaviour = function (args) {\n        const event = getEvent();\n        const context = firebolt.context;\n        const tooltipConf = context.config().interaction.tooltip;\n        const mode = tooltipConf.mode;\n        const pos = getClientPoint(context.getDrawingContext().svgContainer, event);\n        const nearestPoint = context.getNearestPoint(pos.x, pos.y, {\n            getAllPoints: mode === CONSOLIDATED || mode === FRAGMENTED,\n            data: args,\n            event\n        });\n        const payload = {\n            criteria: nearestPoint ? nearestPoint.id : null,\n            showInPosition: nearestPoint.showInPosition,\n            target: nearestPoint.target,\n            position: pos,\n            mode\n        };\n\n        behaviours.forEach(beh => firebolt.dispatchBehaviour(beh, payload));\n        event.stopPropagation();\n    };\n\n    targetEl.on('mouseover', dispatchBehaviour)\n                    .on('mousemove', dispatchBehaviour)\n                    .on('mouseout', () => {\n                        behaviours.forEach(beh => firebolt.dispatchBehaviour(beh, {\n                            criteria: null\n                        }));\n                    });\n};\n\nexport default hover;\n","export const CLASSPREFIX = 'muze';\nexport const CONSOLIDATED = 'consolidated';\nexport const FRAGMENTED = 'fragmented';\n\n","import { getClientPoint } from 'muze-utils';\n\nexport const generatePayloadFromEvent = function (args, event, firebolt) {\n    const context = firebolt.context;\n    const pos = getClientPoint(context.getDrawingContext().svgContainer, event.touches ? event.touches[0] : event);\n    const nearestPoint = context.getNearestPoint(pos.x, pos.y, {\n        data: args,\n        event\n    });\n    return {\n        criteria: nearestPoint ? nearestPoint.id : null,\n        showInPosition: nearestPoint.showInPosition,\n        target: nearestPoint.target,\n        position: pos\n    };\n};\n","import { getEvent } from 'muze-utils';\nimport { generatePayloadFromEvent } from './helpers';\n\n/**\n * Adds mouse interactions to target element.\n * @param {VisualUnit} instance instance of visual unit.\n * @param {SVGElement} targetEl Element on which the event listeners will be attached.\n * @param {Array} behaviours Array of behaviours\n */\n/* istanbul ignore next */ const click = firebolt => (targetEl, behaviours) => {\n    const dispatchBehaviour = function (args) {\n        const event = getEvent();\n        const payload = generatePayloadFromEvent(args, event, firebolt);\n        behaviours.forEach(beh => firebolt.dispatchBehaviour(beh, payload));\n        event.stopPropagation();\n    };\n\n    targetEl.on('click', dispatchBehaviour);\n};\nexport default click;\n","import drag from './drag';\nimport hover from './hover';\nimport { longtouch } from './longtouch';\nimport { touchdrag } from './touch-drag';\nimport * as ACTIONNAMES from '../../enums/actions';\nimport click from './click';\n\nexport const physicalActions = {\n    [ACTIONNAMES.DRAG]: drag,\n    [ACTIONNAMES.HOVER]: hover,\n    [ACTIONNAMES.CLICK]: click,\n    [ACTIONNAMES.LONGTOUCH]: longtouch,\n    [ACTIONNAMES.TOUCHDRAG]: touchdrag\n};\n\n","import { attachDragEvent } from './helpers/drag-event';\n\n/**\n * Adds dragging action to the target element.\n * @param {VisualUnit} instance Instance of visual unit.\n * @param {SVGElement} targetEl Element on which brushing action is needed.\n * @param {Array} behaviours Array of behaviours\n */\n/* istanbul ignore next */ const drag = firebolt => (targetEl, behaviours) => {\n    attachDragEvent(targetEl, behaviours, firebolt);\n};\n\nexport default drag;\n","/* global setTimeout */\nimport { getEvent } from 'muze-utils';\nimport { generatePayloadFromEvent } from './helpers';\n\n/**\n * Adds mouse interactions to target element.\n * @param {VisualUnit} instance instance of visual unit.\n * @param {SVGElement} targetEl Element on which the event listeners will be attached.\n * @param {Array} behaviours Array of behaviours\n */\nexport const longtouch = firebolt => (targetEl, behaviours) => {\n    let event;\n    let touchEnd;\n    const dispatchBehaviour = function (args) {\n        const payload = generatePayloadFromEvent(args, event, firebolt);\n        behaviours.forEach(beh => firebolt.dispatchBehaviour(beh, payload));\n        event.stopPropagation();\n    };\n\n    touchEnd = false;\n    event = getEvent();\n    targetEl.on('touchstart', (args) => {\n        event = getEvent();\n        touchEnd = false;\n        setTimeout(() => {\n            if (!touchEnd) {\n                dispatchBehaviour(args);\n            } else {\n                behaviours.forEach(beh => firebolt.dispatchBehaviour(beh, {\n                    criteria: null\n                }));\n            }\n        }, 100);\n    }).on('touchend', () => {\n        touchEnd = true;\n    });\n};\n","import { attachDragEvent } from './helpers/drag-event';\n\n/**\n * Adds dragging action to the target element.\n * @param {VisualUnit} instance Instance of visual unit.\n * @param {SVGElement} targetEl Element on which brushing action is needed.\n * @param {Array} behaviours Array of behaviours\n */\nexport const touchdrag = firebolt => (targetEl, behaviours) => {\n    attachDragEvent(targetEl, behaviours, firebolt, true);\n};\n\n","export const PROPS = {\n    valueParser: {\n        defaultValue: val => val\n    }\n};\n","import GenericSideEffect from './generic-sideeffect';\n\nexport default GenericSideEffect;\n","import { mergeRecursive, getUniqueId, generateGetterSetters } from 'muze-utils';\nimport { PROPS } from './props';\n\n/**\n * This is the base class of all side effects. It contains all common methods like setting configuration, disabling,\n * enabling side effect, etc. Every new side effect has to inherit this class or {@link SpawnableSideEffect} or\n * {@link SurrogateSideEffect} class. All side effects are initialized by firebolt. The instance of firebolt is\n * passed on initialization. The firebolt instance contains ```context``` which is the instance of visual unit with\n * which the firebolt is attached.\n *\n * @public\n * @class\n * @module GenericSideEffect\n */\nexport default class GenericSideEffect {\n    constructor (firebolt) {\n        this.firebolt = firebolt;\n        this._enabled = true;\n        this._strategy = 'default';\n        this._config = {};\n        this._id = getUniqueId();\n        this._strategies = {};\n        generateGetterSetters(this, PROPS);\n        this.config(this.constructor.defaultConfig());\n    }\n\n    /**\n     * Returns the default configuration of the side effect.\n     *\n     * @public\n     * @return {Object} Default configuration of side effect.\n     */\n    static defaultConfig () {\n        return {};\n    }\n\n    /**\n     * Returns the formal name of a side effect. This method must be implemented by all side effects which changes\n     * or adds any element in the visualization.\n     *\n     * @return {string} Formal name of side effect.\n     */\n    static formalName () {\n        return 'generic';\n    }\n\n    static target () {\n        return 'all';\n    }\n\n    /**\n     * Returns true if the side effects mutates the data of chart.\n     *\n     * @public\n     *\n     * @return {boolean} If the side effect mutates the data of chart.\n     */\n    static mutates () {\n        return false;\n    }\n\n    /**\n     * Sets or gets the configuration of side effect.\n     *\n     * When setter,\n     * @param {Object} config Configuration of side effect.\n     * @return {GenericSideEffect} Side effect instance.\n     *\n     * When getter,\n     * @return {Object} Side effect configuration.\n     */\n    config (...params) {\n        if (params.length) {\n            this._config = mergeRecursive(this._config, params[0]);\n            return this;\n        }\n        return this._config;\n    }\n\n    disable () {\n        this._enabled = false;\n        return this;\n    }\n\n    enable () {\n        this._enabled = true;\n        return this;\n    }\n\n    isEnabled () {\n        return this._enabled;\n    }\n\n    /**\n     * Applies the interaction effect on the chart. This is where the implemntation of the side effect is defined.\n     *\n     * @param {Object} selectionSet Contains the entry and exit set of data which got affected during interaction.\n     * @param {Object} selectionSet.mergedEnter Combined previous entry and new entry set.\n     * @param {DataModel} selectionSet.mergedEnter.model Instance of data model containing all rows which got\n     * affected during interaction.\n     * @param {Array} selectionSet.mergedEnter.uids Ids of all rows which were affected during interaction.\n     * @param {Object} selectionSet.mergedExit Combined previous exit and new exit set.\n     * @param {DataModel} selectionSet.mergedExit.model Instance of data model containing rows which were not affected\n     * during interaction.\n     * @param {Array} selectionSet.mergedExit.uids Ids of all rows which were not affected during interaction.\n     * @param {Object} selectionSet.entrySet Entry set information.\n     * @param {Array} selectionSet.entrySet[0].uids All row ids which got affected during previous interaction.\n     * @param {Array} selectionSet.entrySet[1].uids All row ids which got affected during current interaction.\n     * @param {Array} selectionSet.exitSet[0].uids All row ids which were not affected during previous interaction.\n     * @param {Array} selectionSet.exitSet[1].uids All row ids which were not affected during current interaction.\n     * @param {Object} payload Payload information of the behavioural action on trigger of which this side effect\n     * is applied.\n     * @param {Object} options Optional information for side effect like strategy, etc.\n     */\n    apply () {\n        return this;\n    }\n\n    /**\n     * Adds a new strategy method for this side effect. The strategy method is implemented by side effect class.\n     *\n     * @param {string} name Name of the strategy.\n     * @param {Function} fn Strategy method.\n     *\n     * @return {GenericSideEffect} Instance of side effect.\n     */\n    setStrategy (name, fn) {\n        if (fn) {\n            this._strategies[name] = fn;\n        }\n        return this;\n    }\n}\n","import GenericSideEffect from './generic';\n\n/**\n * This class is inherited by all side effects which changes the look of any existing elements in the visualization.\n * For example, if a side effect wants to change the color of bar plots, then it is a surrogate side effect.\n *\n * To use this,\n * ```\n *      const SurrogateSideEffect = muze.SideEffects.standards.SurrogateSideEffect;\n *\n *      class BarColorChanger extends SurrogateSideEffect {\n *          static formalName () {\n *              return 'colorChanger';\n *          }\n *\n *          // Implement the logic of applying the style here.\n *          apply () {\n *          }\n *      }\n * ```\n * @public\n *\n * @module SurrogateSideEffect\n * @class\n * @extends GenericSideEffect\n */\nexport default class SurrogateSideEffect extends GenericSideEffect {\n    /**\n     * Applies or removes interaction styles from plot elements. An array of row ids needs to be passed\n     * which identifies the plot elements and applies styles to them.\n     *\n     * To apply the interaction style,\n     * ```\n     *      const entryRowIds = entrySet[0].uids;\n     *      const interactionStyle = [{\n     *          type: 'fill',\n     *          intensity: [0, 0, 15, 0] // hsla configuration\n     *      }];\n     *\n     *      this.applyInteractionStyle(entryRowIds, interactionStyle, 'brighten', true);\n     * ```\n     * @public\n     * @param {Array} set Array of row ids.\n     * @param {Array} config Style configuration.\n     * @param {Object} config[0] fill or stroke configuration.\n     * @param {string} config[0].type Type of style - fill or stroke.\n     * @param {Array} config[0].intensity hsla configuration.\n     * @param {string} interactionType Type of interaction. This is needed for storing the styles for\n     * each type of interaction in the plot elements.\n     * @param {boolean} apply Whether to apply or remove the interaction style.\n     *\n     * @return {SurrogateSideEffect} Instance of surrogate side effect.\n     */\n    applyInteractionStyle (set, config = {}, interactionType, apply) {\n        const layers = this.firebolt.context.layers();\n        layers.forEach(layer => layer.config().interactive !== false &&\n            layer.applyInteractionStyle(interactionType, set.uids, apply));\n        return this;\n    }\n}\n","import { makeElement } from 'muze-utils';\n\nimport GenericSideEffect from './generic';\n\n/**\n * Any side effect which will add any new element to the chart like drawing a rectangular box or any annotation over\n * the chart needs to inherit this class. This class has methods which returns the container where the dom elements\n * needs to be created.\n *\n * To use this,\n * ```\n *      const SpawnableSideEffect = muze.SideEffects.standards.SpawnableSideEffect;\n *\n *      class SelectionBox extends SpawnableSideEffect {\n *          static formalName () {\n *              return 'selectionBox';\n *          }\n *\n *          // Implement the logic of applying the style here.\n *          apply () {\n *          }\n *      }\n * ```\n * @public\n * @class\n * @extends GenericSideEffect\n * @module SpawnableSideEffect\n */\nexport default class SpawnableSideEffect extends GenericSideEffect {\n    /**\n     * Creates a html or svg element in the container.\n     *\n     * @public\n     * @param {SVGElement|HTMLElement} container Container where the dom element will be rendered.\n     * @param {string} elemType Type of dom element.\n     * @param {Array} data Array of objects with which the dom elements will be binded.\n     * @param {string} className class name of the element.\n     *\n     * @return {Selection} D3 Selection of the element.\n     */\n    createElement (container, elemType, data, className, callbacks) {\n        return makeElement(container, elemType, data, className, callbacks);\n    }\n\n    /**\n     * Returns the drawing information for side effect like svg container, dimensions of the visual unit.\n     *\n     * @public\n     * @return {Object} Drawing information for side effect.\n     * ```\n     *      sideEffectGroup: // svg container where the side effect needs to be appended.\n     *      svgContainer: // svg container of the {@link VisualUnit}.\n     *      htmlContainer: // html div container of the {@link VisualUnit}.\n     *      width: // Width of the {@link VisualUnit}\n     *      height: // Height of the {@link VisualUnit}\n     * ```\n     */\n    drawingContext (...drawingContext) {\n        if (drawingContext.length) {\n            this._drawingContext = drawingContext[0];\n            return this;\n        }\n        return this._drawingContext();\n    }\n\n    show () {\n        return this;\n    }\n\n    hide () {\n        return this;\n    }\n}\n","import { selectElement } from 'muze-utils';\n\nexport const getBoxDimensionsFromPayload = (payload, axes, axisFields) => {\n    let x1;\n    let x2;\n    let y1;\n    let y2;\n    let xRange;\n    let yRange;\n    let direction;\n    const criteria = payload.criteria;\n    const dimensions = payload.dimensions || {};\n    const xDim = dimensions.x;\n    const yDim = dimensions.y;\n\n    if (criteria === null) {\n        return null;\n    }\n\n    const xAxis = axes.x[0];\n    const yAxis = axes.y[0];\n    const xLinear = xAxis.constructor.type() === 'linear';\n    const yLinear = yAxis.constructor.type() === 'linear';\n    const xField = `${axisFields.x[0]}`;\n    const yField = `${axisFields.y[0]}`;\n    const xCriteria = criteria[xField];\n    const yCriteria = criteria[yField];\n\n    if (xCriteria && xCriteria[0] instanceof Array) {\n        xRange = xCriteria[0];\n        yRange = xCriteria[1];\n    } else {\n        xRange = xCriteria || [];\n        yRange = yCriteria || [];\n    }\n    direction = xCriteria && yCriteria ? 'both' : (xCriteria ? 'vertical' : 'horizontal');\n    if (xRange && xRange.length) {\n        if ((yAxis.constructor.type() === 'band' && xLinear)) {\n            x1 = x2 = undefined;\n            direction = 'horizontal';\n        } else {\n            const domain = xAxis.domain();\n            const bandScale = xAxis.constructor.type() === 'band';\n            let x1Val;\n            let x2Val;\n            if (bandScale) {\n                let x1DomainIndex = domain.indexOf(xRange[0]);\n                let x2DomainIndex = domain.indexOf(xRange[xRange.length - 1]);\n                [x1DomainIndex, x2DomainIndex] = [x1DomainIndex, x2DomainIndex].sort((a, b) => a - b);\n                x1Val = domain[x1DomainIndex];\n                x2Val = domain[x2DomainIndex];\n            } else {\n                x1Val = xRange[0];\n                x2Val = xRange[xRange.length - 1];\n            }\n            x1 = xAxis.getScaleValue(x1Val);\n            x2 = xAxis.getScaleValue(x2Val);\n            x2 += bandScale ? xAxis.getUnitWidth() : 0;\n        }\n    } else {\n        x1 = x2 = undefined;\n    }\n    if (yRange && yRange.length) {\n        if ((xAxis.constructor.type() === 'band' && yLinear)) {\n            y1 = y2 = undefined;\n            direction = 'vertical';\n        } else {\n            const domain = yAxis.domain();\n            const bandScale = yAxis.constructor.type() === 'band';\n            let y1Val;\n            let y2Val;\n            if (bandScale) {\n                let y1DomainIndex = domain.indexOf(yRange[0]);\n                let y2DomainIndex = domain.indexOf(yRange[yRange.length - 1]);\n                [y1DomainIndex, y2DomainIndex] = [y1DomainIndex, y2DomainIndex].sort(((a, b) => b - a));\n                y1Val = domain[y1DomainIndex];\n                y2Val = domain[y2DomainIndex];\n            } else {\n                y1Val = yRange[0];\n                y2Val = yRange[yRange.length - 1];\n            }\n            y1 = yAxis.getScaleValue(y1Val);\n            y2 = yAxis.getScaleValue(y2Val);\n            y2 += yAxis.constructor.type() === 'band' ? yAxis.getUnitWidth() : 0;\n        }\n    } else {\n        y1 = y2 = undefined;\n    }\n\n    if ((yLinear && xLinear) || !payload.dragEnd) {\n        if (xDim) {\n            [x1, x2] = xDim;\n        }\n        if (yDim) {\n            [y1, y2] = yDim;\n        }\n    }\n\n    return {\n        dimension: {\n            x1,\n            x2,\n            y1,\n            y2\n        },\n        direction\n    };\n};\n\nexport const changeVisibility = (context, sideEffectGroup, visible) => {\n    const config = context.config();\n    const className = config.defClassName;\n    const classPrefix = config.classPrefix;\n    selectElement(sideEffectGroup).selectAll(`.${classPrefix}-${className}`)\n                    .style('display', visible ? 'block' : 'none');\n};\n","import {\n    getQualifiedClassName,\n    selectElement,\n    makeElement,\n    isValidValue\n} from 'muze-utils';\nimport { CLASSPREFIX } from '../../enums/constants';\nimport './styles.scss';\nimport SpawnableSideEffect from '../spawnable';\nimport { selectionBoxDrag } from '../../actions/physical/selection-box-drag';\nimport { getBoxDimensionsFromPayload, changeVisibility } from './helper';\n\n/**\n * This class is used to create a selection box which is used by visual unit for brushing and\n * selection in the canvas.\n * @class SelectionBox\n */\nclass SelectionBox extends SpawnableSideEffect {\n    /**\n     * It returns the default configuration needed by selectionbox.\n     * @return {Object} Default configuration of the selection box.\n     */\n    static defaultConfig () {\n        return {\n            defClassName: 'selection-box-group',\n            className: '',\n            classPrefix: CLASSPREFIX,\n            box: {\n                defClassName: 'selection-box',\n                className: ''\n            },\n            transition: {\n                duration: 200\n            }\n        };\n    }\n\n    static formalName () {\n        return 'selectionBox';\n    }\n\n    /**\n     * Draws the selectionbox with the specified dimensions.\n     * @param {Object} dimension Dimensions of the selection box.\n     * @param {number} dimension.x1 Starting x position\n     * @param {number} dimension.x2 Ending x position\n     * @param {number} dimension.y1 Starting y position\n     * @param {number} dimension.y2 Ending y position\n     * @param {Object} conf Configuration needed to draw the selection box\n     * @param {number} unitWidth Width of the visual unit.\n     * @param {number} unitHeight Height of the visual unit.\n     */\n    apply (selectionSet, payload) {\n        let x;\n        let y;\n        let width;\n        let height;\n        const config = this._config;\n        const boxConf = config.box;\n        const firebolt = this.firebolt;\n        const drawingInf = this.drawingContext();\n        const mountPoint = drawingInf.sideEffectGroup;\n        const unitWidth = drawingInf.width;\n        const unitHeight = drawingInf.height;\n        const classPrefix = config.classPrefix;\n        const selectionGroupClassName = config.defClassName;\n\n        if (payload.criteria === null) {\n            this.hide(drawingInf);\n            return this;\n        }\n\n        const sourceInf = firebolt.context.getSourceInfo();\n        const { dimension, direction } = getBoxDimensionsFromPayload(payload, sourceInf.axes,\n            sourceInf.fields);\n        const transition = payload.dragEnd && config.transition;\n\n        if (direction === 'both' || direction === 'vertical') {\n            x = Math.min(dimension.x1, dimension.x2);\n            width = Math.abs(dimension.x2 - dimension.x1);\n        } else {\n            x = 0;\n            width = unitWidth;\n        }\n        if (direction === 'both' || direction === 'horizontal') {\n            y = Math.min(dimension.y1, dimension.y2);\n            height = Math.abs(dimension.y2 - dimension.y1);\n        } else {\n            height = unitHeight;\n            y = 0;\n        }\n        this.show(drawingInf);\n        // Create the data array for drawing the rectangle\n        const points = [\n            {\n                x,\n                y,\n                width,\n                height\n            }\n        ];\n        // Create the container group for selection box.\n        const selectionGroup = makeElement(selectElement(mountPoint), 'g', [1],\n            `.${classPrefix}-${selectionGroupClassName}`);\n        const sideEffect = this;\n        const selection = selectionGroup.selectAll('rect').data(points);\n        const selectionBox = selection.enter().append('rect')\n                        .each(function () {\n                            selectionBoxDrag(firebolt)(selectElement(this), ['brush'], sideEffect);\n                        })\n                        .merge(selection)\n                        .each(function (attrs) {\n                            let element = selectElement(this);\n                            transition && (element = element.transition().duration(transition.duration));\n                            for (const key in attrs) {\n                                if ({}.hasOwnProperty.call(attrs, key)) {\n                                    isValidValue(attrs[key]) && element.attr(key, attrs[key]);\n                                }\n                            }\n                        });\n        // Get the qualified class name for selection box rectangle\n        const boxClassName = getQualifiedClassName(boxConf.defClassName, this._id, classPrefix);\n        selectionBox.classed(boxClassName.join(' '), true);\n        selectionBox.classed(boxConf.className, true);\n\n        return this;\n    }\n\n    hide (drawingInf) {\n        changeVisibility(this, drawingInf.sideEffectGroup, false);\n    }\n\n    show (drawingInf) {\n        changeVisibility(this, drawingInf.sideEffectGroup, true);\n    }\n}\n\nexport default SelectionBox;\n\n","import {\n    getEvent,\n    getD3Drag\n } from 'muze-utils';\n\nimport getDragActionConfig from './helpers/drag-action-config';\n\nexport const selectionBoxDrag = firebolt => (targetEl, behaviours) => {\n    let subject;\n    let drawingInf;\n    const context = firebolt.context;\n    const onDrag = (payload) => {\n        behaviours.forEach(action => firebolt.dispatchBehaviour(action, payload));\n    };\n    const d3Drag = getD3Drag();\n\n    targetEl.call(d3Drag().on('start', () => {\n        const event = getEvent();\n        drawingInf = context.getDrawingContext();\n        subject = event.subject;\n    }).on('drag', () => {\n        const event = getEvent();\n        subject.x += event.dx;\n        subject.y += event.dy;\n        const width = drawingInf.width;\n        const height = drawingInf.height;\n        const x = Math.min(width - subject.width, Math.max(subject.x, 0));\n        const y = Math.min(height - subject.height, Math.max(subject.y, 0));\n        const y2 = y + subject.height;\n        const x2 = x + subject.width;\n\n        if (x >= 0 && x2 <= width && y >= 0 && y2 <= height) {\n            const payload = getDragActionConfig(context.getSourceInfo(), {\n                startPos: {\n                    x,\n                    y\n                },\n                endPos: {\n                    x: x2,\n                    y: y2\n                }\n            }, context.data().getFieldsConfig());\n            onDrag(payload);\n        }\n    }).on('end', () => {\n        const width = drawingInf.width;\n        const height = drawingInf.height;\n        const x = Math.min(width - subject.width, Math.max(subject.x, 0));\n        const y = Math.min(height - subject.height, Math.max(subject.y, 0));\n        const y2 = y + subject.height;\n        const x2 = x + subject.width;\n\n        if (x >= 0 && x2 <= width && y >= 0 && y2 <= height) {\n            const payload = getDragActionConfig(context.getSourceInfo(), {\n                startPos: {\n                    x,\n                    y\n                },\n                endPos: {\n                    x: x2,\n                    y: y2\n                },\n                snap: true\n            }, context.data().getFieldsConfig());\n            payload.dragEnd = true;\n            onDrag(payload);\n        }\n    }));\n};\n","export const CLASSPREFIX = 'muze';\nexport const ARROW_RIGHT = 'right';\nexport const ARROW_TOP = 'top';\nexport const ARROW_BOTTOM = 'bottom';\nexport const ARROW_LEFT = 'left';\nexport const TOOLTIP_LEFT = 'left';\nexport const TOOLTIP_RIGHT = 'right';\nexport const TOOLTIP_BOTTOM = 'bottom';\nexport const TOOLTIP_TOP = 'top';\nexport const INITIAL_STYLE = {\n    position: 'absolute',\n    width: 0,\n    height: 0\n};\n","import { CLASSPREFIX } from './constants';\n\nexport const defaultConfig = {\n    classPrefix: CLASSPREFIX,\n    defClassName: 'tooltip-box',\n    connectorClassName: 'tooltip-connectors',\n    className: '',\n    row: {\n        margin: 0\n    },\n    content: {\n        spacing: 5,\n        iconContainerSize: 10,\n        iconScale: 1,\n        iconShape: 'circle',\n        iconColor: '#ff0000',\n        rowMargin: '0px',\n        margin: 10,\n        separator: ':',\n        className: 'tooltip-content-container',\n        parentClassName: 'tooltip-content-parent-container'\n    },\n    arrow: {\n        size: 10,\n        disabled: false,\n        defClassName: 'tooltip-arrow',\n        className: '',\n        color: 'rgba(195,195,195,0.85)'\n    }\n};\n","import { getQualifiedClassName } from 'muze-utils';\nimport { TOOLTIP_LEFT, TOOLTIP_RIGHT, ARROW_RIGHT, ARROW_LEFT, TOOLTIP_BOTTOM } from './constants';\n\nexport const getArrowPos = (orient, dim, measurement, config) => {\n    let arrowPos;\n    const { x, y, boxHeight, boxWidth } = measurement;\n    const arrowDisabled = config.arrow.disabled;\n    const arrowWidth = arrowDisabled ? 0 : config.arrow.size;\n\n    if (orient === ARROW_LEFT || orient === ARROW_RIGHT) {\n        let start = 0;\n        let diff = boxHeight / 2;\n        const plotBottom = dim.y + dim.height;\n        const boxBottom = y + boxHeight;\n\n        if (dim.y > y) {\n            start = dim.y - y;\n            diff = (plotBottom >= boxBottom ? (boxBottom - dim.y) : dim.height) / 2;\n        } else if (boxBottom > plotBottom) {\n            diff = Math.abs(y - (dim.y + dim.height)) / 2;\n        }\n        arrowPos = start + diff - arrowWidth / 2;\n    } else {\n        let start = 0;\n        let diff = boxWidth / 2;\n        const plotRight = dim.x + dim.width;\n        const boxRight = x + boxWidth;\n\n        if (dim.x > x) {\n            start = dim.x - x;\n            diff = (plotRight >= boxRight ? (boxRight - dim.x) : dim.width) / 2;\n        } else if (boxRight > plotRight) {\n            diff = Math.abs(x - (dim.x + dim.width)) / 2;\n        }\n        arrowPos = start + diff - arrowWidth / 2;\n    }\n    return arrowPos;\n};\n\n/**\n * Places the arrow in the specified arrow position. It also applies appropriate arrow\n * class name to the arrow element.\n * @param {string} position Left, bottom or right position of the arrow;\n * @param {number} arrowPos position of arrow in pixels\n * @return {Tooltip} Instance of tooltip.\n */\nexport const placeArrow = (context, position, arrowPos) => {\n    const tooltipArrow = context._tooltipArrow;\n    const tooltipBackground = context._tooltipBackground;\n    const config = context._config;\n    const classPrefix = config.classPrefix;\n    const arrowConf = config.arrow;\n    const className = getQualifiedClassName(arrowConf.defClassName, context._id, config.classPrefix);\n\n    tooltipArrow.style('display', 'block');\n    tooltipArrow.attr('class', `${className.join(' ')}`);\n    if (position === TOOLTIP_LEFT || position === TOOLTIP_RIGHT) {\n        tooltipArrow.style('top', `${arrowPos}px`);\n        tooltipArrow.style('left', '');\n        tooltipBackground.style('top', `${arrowPos}px`);\n        tooltipBackground.style('left', '');\n    } else {\n        position === TOOLTIP_BOTTOM ? tooltipArrow.style('top', '100%') : tooltipArrow.style('top',\n            `-${arrowConf.size}px`);\n        tooltipArrow.style('left', `${arrowPos}px`);\n        position === TOOLTIP_BOTTOM ? tooltipBackground.style('top', '100%') : tooltipBackground.style('top',\n            `-${arrowConf.size + 3}px`);\n        tooltipBackground.style('left', `${arrowPos}px`);\n    }\n    tooltipArrow.classed(`${classPrefix}-tooltip-arrow`, true);\n    tooltipArrow.classed(`${classPrefix}-tooltip-arrow-${context._arrowOrientation}`, false);\n    tooltipArrow.classed(`${classPrefix}-tooltip-arrow-${position}`, true);\n    tooltipBackground.classed(`${classPrefix}-tooltip-background-arrow`, true);\n    tooltipBackground.classed(`${classPrefix}-tooltip-background-arrow-${context._arrowOrientation}`, false);\n    tooltipBackground.classed(`${classPrefix}-tooltip-background-arrow-${position}`, true);\n    return this;\n};\n\nexport const reorderContainers = (parentContainer, className) => {\n    parentContainer.selectAll(className).sort((a, b) => a - b);\n};\n","import {\n    selectElement,\n    mergeRecursive,\n    makeElement,\n    setAttrs,\n    setStyles,\n    getSymbol,\n    isSimpleObject\n} from 'muze-utils';\nimport { defaultConfig } from './default-config';\n\n/**\n * This class is used to manage the content of tooltip.\n */\nexport default class Content {\n    /**\n     * Creates an instance of content.\n     */\n    constructor () {\n        this._model = null;\n        this._formatter = null;\n        this._config = this.constructor.defaultConfig();\n    }\n   /**\n     * Returns the default configuration of tooltip\n     * @return {Object} Configuration of tooltip.\n     */\n    static defaultConfig () {\n        const config = defaultConfig.content;\n        config.classPrefix = defaultConfig.classPrefix;\n        return config;\n    }\n\n    config (...c) {\n        if (c.length > 0) {\n            this._config = mergeRecursive(this._config, c[0]);\n            return this;\n        }\n        return this._config;\n    }\n\n    /**\n     * Update model. The format contains presentation strategy which determines how to show the content.\n     * If no strategy is mentioned then default is to show key value pair\n    */\n    update (item) {\n        this._model = item.model;\n        this._formatter = item.formatter;\n        return this;\n    }\n\n    context (ctx) {\n        this._context = ctx;\n        return this;\n    }\n\n    render (mount) {\n        let data;\n        const config = this._config;\n        const iconContainerSize = config.iconContainerSize;\n        const formatter = this._formatter;\n        const rowMargin = config.rowMargin;\n        const model = this._model;\n\n        this._mount = mount;\n        if (model instanceof Array) {\n            data = model;\n        } else {\n            data = formatter(this._model, this.config(), this._context);\n        }\n\n        if (data instanceof Function) {\n            mount.html(data());\n        } else {\n            let content = data;\n            let displayFormat = 'default';\n\n            if (isSimpleObject(data)) {\n                content = data.content;\n                displayFormat = data.displayFormat;\n            }\n\n            const body = makeElement(mount, 'div', [displayFormat], `${config.classPrefix}-tooltip-content`, {},\n                d => d);\n\n            if (displayFormat === 'table') {\n                const table = makeElement(body, 'table', [1], `${config.classPrefix}-tooltip-table`);\n                const tbody = makeElement(table, 'tbody', [1], `${config.classPrefix}-tooltip-table-tbody`);\n                const rows = makeElement(tbody, 'tr', content, `${config.classPrefix}-tooltip-table-row`);\n                rows.each(function (d, i) {\n                    selectElement(this).classed(`${config.classPrefix}-tooltip-table-row-${i}`, true);\n                });\n                const cells = makeElement(rows, 'td', d => d, `${config.classPrefix}-tooltip-table-cell`);\n                cells.each(function (d) {\n                    selectElement(this).html(d);\n                });\n            } else {\n                const rows = makeElement(body, 'div', content, `${config.classPrefix}-tooltip-row`);\n                const cells = makeElement(rows, 'span', d => d, `${config.classPrefix}-tooltip-content`);\n                cells.attr('class', `${config.classPrefix}-tooltip-content`);\n                setStyles(rows, {\n                    margin: rowMargin\n                });\n                setStyles(cells, {\n                    display: 'inline-block',\n                    'margin-right': `${config.spacing}px`\n                });\n\n                cells.each(function (d) {\n                    const el = selectElement(this);\n                    el.html('');\n                    if (d instanceof Object) {\n                        if (d.type === 'icon') {\n                            const svg = makeElement(el, 'svg', [1]);\n                            const path = makeElement(svg, 'path', [1]);\n                            const shape = d.shape instanceof Function ? d.shape : getSymbol(d.shape);\n\n                            setAttrs(svg, {\n                                x: 0,\n                                y: 0,\n                                width: iconContainerSize,\n                                height: iconContainerSize\n                            });\n                            setAttrs(path, {\n                                d: shape.size(d.size)(),\n                                transform: `translate(${iconContainerSize / 2}, ${iconContainerSize / 2})`\n                            });\n                            setStyles(path, {\n                                fill: d.color\n                            });\n                            setStyles(svg, {\n                                width: `${iconContainerSize}px`,\n                                height: `${iconContainerSize}px`\n                            });\n                        } else {\n                            el.html(d.value);\n                            d.className && el.classed(d.className, true);\n                            setStyles(el, d.style);\n                        }\n                    } else {\n                        el.html(d);\n                    }\n                });\n            }\n        }\n        return this;\n    }\n\n    clear () {\n        this._model = null;\n        return this;\n    }\n}\n","import {\n    mergeRecursive,\n    getQualifiedClassName,\n    getUniqueId,\n    selectElement,\n    setStyles,\n    makeElement\n} from 'muze-utils';\nimport { ARROW_BOTTOM, ARROW_LEFT, ARROW_RIGHT, TOOLTIP_LEFT, TOOLTIP_RIGHT, TOOLTIP_BOTTOM, TOOLTIP_TOP,\n    INITIAL_STYLE } from './constants';\nimport { defaultConfig } from './default-config';\nimport { getArrowPos, placeArrow, reorderContainers } from './helper';\nimport './styles.scss';\nimport Content from './content';\n\n/**\n * This component is responsible for creating a tooltip element. It appends the tooltip\n * in the body element.\n * @class Tooltip\n */\nexport default class Tooltip {\n    /**\n     * Initializes the tooltip with the container element and configuration\n     * @param {HTMLElement} container container where the tooltip will be mounted.\n     * @param {string} className Class name of the tooltip.\n     */\n    constructor (htmlContainer, svgContainer) {\n        let connectorContainer = svgContainer;\n        this._id = getUniqueId();\n        this._config = {};\n        this.config({});\n        const tooltipConf = this._config;\n        const classPrefix = tooltipConf.classPrefix;\n        const contentClass = tooltipConf.content.parentClassName;\n        const container = makeElement(htmlContainer, 'div', [1], `${classPrefix}-tooltip-container`);\n        this._container = container;\n        this._tooltipContainer = container.append('div').style('position', 'absolute');\n        this._contentContainer = this._tooltipContainer.append('div').attr('class', `${classPrefix}-${contentClass}`);\n        this._tooltipBackground = this._tooltipContainer.append('div').style('position', 'relative');\n        this._tooltipArrow = this._tooltipContainer.append('div');\n\n        if (!svgContainer) {\n            connectorContainer = htmlContainer.append('svg').style('pointer-events', 'none');\n        }\n        this._contents = {};\n        this._tooltipConnectorContainer = selectElement(connectorContainer)\n            .append('g')\n            .attr('class', `${tooltipConf.classPrefix}-${tooltipConf.connectorClassName}`);\n        const id = this._id;\n        const defClassName = tooltipConf.defClassName;\n        const qualifiedClassName = getQualifiedClassName(defClassName, id, tooltipConf.classPrefix);\n\n        setStyles(this._tooltipArrow, INITIAL_STYLE);\n        setStyles(this._tooltipBackground, INITIAL_STYLE);\n        this.addClass(qualifiedClassName.join(' '));\n        this.addClass(tooltipConf.className);\n        this.hide();\n    }\n\n    /**\n     * Sets the configuration of tooltip.\n     * @param {Object} config Configuration of tooltip\n     * @return {Tooltip} Instance of tooltip\n     */\n    config (...config) {\n        if (config.length > 0) {\n            const defConf = mergeRecursive({}, this.constructor.defaultConfig());\n            this._config = mergeRecursive(defConf, config[0]);\n            return this;\n        }\n        return this._config;\n    }\n\n    /**\n     * Returns the default configuration of tooltip\n     * @return {Object} Configuration of tooltip.\n     */\n    static defaultConfig () {\n        return defaultConfig;\n    }\n    /**\n     * Sets the class name of tooltip\n     * @param {string} className tooltip class name\n     * @return {Tooltip} Instance of tooltip.\n     */\n    addClass (className) {\n        this._tooltipContainer.classed(className, true);\n        return this;\n    }\n\n    context (...ctx) {\n        if (ctx.length) {\n            this._context = ctx[0];\n            return this;\n        }\n        return this._context;\n    }\n\n    content (name, data, contentConfig = {}) {\n        const config = this.config();\n        const { classPrefix } = config;\n        const contentClass = config.content.className;\n        const formatter = config.formatter;\n        const className = contentConfig.className || `${classPrefix}-${contentClass}-${name}`;\n        const content = this._contents[name] = this._contents[name] || new Content();\n        const container = makeElement(this._contentContainer, 'div', [contentConfig.order], className);\n        container.attr('class', `${classPrefix}-${contentClass} ${className}`);\n        reorderContainers(this._contentContainer, `.${classPrefix}-${contentClass}`);\n        const contentConf = config.content;\n        contentConfig.classPrefix = this._config.classPrefix;\n        content.config(contentConf);\n\n        if (data === null) {\n            content.clear();\n            container.remove();\n            delete this._contents[name];\n        } else {\n            content.update({\n                model: data,\n                formatter: contentConfig.formatter || formatter\n            });\n            content.context(this._context);\n            content.render(container);\n        }\n\n        if (!Object.keys(this._contents).length) {\n            this.hide();\n        }\n        return this;\n    }\n\n    getContents () {\n        return Object.values(this._contents);\n    }\n\n    /**\n     * Positions the tooltip at the given x and y position.\n     * @param {number} x x position\n     * @param {number} y y position\n     * @return {Tooltip} Instance of tooltip.\n     */\n    position (x, y, conf = {}) {\n        if (!Object.keys(this._contents).length) {\n            this.hide();\n            return this;\n        }\n        this.show();\n        const target = this._target;\n        const repositionArrow = conf.repositionArrow;\n\n        if (target && repositionArrow) {\n            const node = this._tooltipContainer.node();\n            const config = this._config;\n            const arrowDisabled = config.arrow.disabled;\n            const arrowWidth = arrowDisabled ? 0 : config.arrow.size;\n            const arrowOrient = this._arrowOrientation;\n            const outsidePlot = arrowOrient === ARROW_LEFT || arrowOrient === ARROW_RIGHT ?\n                (y + node.offsetHeight - arrowWidth) < target.y || y > (target.y + target.height) :\n                (x + node.offsetWidth - arrowWidth) < target.x || x > (target.x + target.width);\n\n            if (!arrowDisabled) {\n                if (outsidePlot) {\n                    let path;\n                    this._tooltipArrow.style('display', 'none');\n                    this._tooltipBackground.style('display', 'none');\n                    this._tooltipConnectorContainer.style('display', 'block');\n                    const connector = this._tooltipConnectorContainer.selectAll('path').data([1]);\n                    const enter = connector.enter().append('path');\n                    if (arrowOrient === ARROW_LEFT) {\n                        path = `M ${x} ${y + node.offsetHeight / 2} L ${target.x + target.width}`\n                            + ` ${target.y + target.height / 2}`;\n                    } else if (arrowOrient === ARROW_RIGHT) {\n                        path = `M ${x + node.offsetWidth} ${y + node.offsetHeight / 2}`\n                                + ` L ${target.x} ${target.y + target.height / 2}`;\n                    } else if (arrowOrient === ARROW_BOTTOM) {\n                        path = `M ${x + node.offsetWidth / 2} ${y + node.offsetHeight}`\n                            + ` L ${target.x + target.width / 2} ${target.y}`;\n                    }\n                    enter.merge(connector).attr('d', path).style('display', 'block');\n                } else {\n                    const arrowPos = getArrowPos(arrowOrient, target, {\n                        x,\n                        y,\n                        boxHeight: node.offsetHeight,\n                        boxWidth: node.offsetWidth\n                    }, this._config);\n\n                    placeArrow(this, this._arrowOrientation, arrowPos);\n                    this._tooltipConnectorContainer.style('display', 'none');\n                }\n            }\n        }\n\n        const offset = this._offset || {\n            x: 0,\n            y: 0\n        };\n        this._tooltipContainer.style('left', `${offset.x + x}px`).style('top',\n            `${offset.y + y}px`);\n\n        return this;\n    }\n\n    /**\n     * Positions the tooltip relative to a rectangular box. It takes care of tooltip overflowing the\n     * boundaries.\n     * @param {Object} dim Dimensions of the plot.\n     */\n    positionRelativeTo (dim, tooltipConf = {}) {\n        let obj;\n        let orientation = tooltipConf.orientation;\n        this.show();\n        if (!dim) {\n            this.hide();\n            return this;\n        }\n\n        const extent = this._extent;\n        const node = this._tooltipContainer.node();\n\n        this._tooltipContainer.style('top', '0px')\n                        .style('left', '0px');\n        const offsetWidth = node.offsetWidth + 2;\n        const offsetHeight = node.offsetHeight + 2;\n        const config = this._config;\n        const offset = this._offset;\n        const arrowDisabled = config.arrow.disabled;\n        const arrowSize = arrowDisabled ? 0 : config.arrow.size;\n        const draw = tooltipConf.draw !== undefined ? tooltipConf.draw : true;\n        const topSpace = dim.y;\n        // When there is no space in right\n        const dimX = dim.x + dim.width + offset.x;\n        const rightSpace = extent.width - dimX;\n        const leftSpace = dim.x + offset.x - extent.x;\n        const positionTop = topSpace > (offsetHeight + arrowSize);\n        const positionRight = rightSpace >= offsetWidth + arrowSize;\n        const positionLeft = leftSpace >= offsetWidth + arrowSize;\n\n        const positionHorizontal = () => {\n            let position;\n            let x = dim.x + dim.width;\n            let y = dim.y;\n\n            if (positionRight) {\n                position = TOOLTIP_LEFT;\n                x += arrowSize;\n            } else if (positionLeft) {\n                x = dim.x - offsetWidth;\n                position = TOOLTIP_RIGHT;\n                x -= arrowSize;\n            } else {\n                position = 'left';\n                x += arrowSize;\n            }\n            if (dim.height < offsetHeight) {\n                y = Math.max(0, dim.y + dim.height / 2 - offsetHeight / 2);\n            }\n\n            const arrowPos = getArrowPos(position, dim, {\n                x,\n                y,\n                boxHeight: offsetHeight,\n                boxWidth: offsetWidth\n            }, this._config);\n\n            return {\n                position,\n                arrowPos,\n                x,\n                y\n            };\n        };\n\n        const positionVertical = () => {\n            let position;\n            let y;\n            // Position tooltip at the center of plot\n            let x = dim.x - offsetWidth / 2 + dim.width / 2;\n\n            // Overflows to the right\n            if ((extent.width - (dim.x + offset.x)) < offsetWidth) {\n                x = extent.width - offsetWidth - offset.x;\n            } else if ((x + offset.x) < extent.x) { // Overflows to the left\n                x = extent.x;\n            }\n\n            if (positionTop) {\n                y = dim.y - offsetHeight - arrowSize;\n                position = TOOLTIP_BOTTOM;\n            } else {\n                y = dim.y + dim.height + arrowSize;\n                position = TOOLTIP_TOP;\n            }\n\n            const arrowPos = getArrowPos(position, dim, {\n                x,\n                y,\n                boxHeight: offsetHeight,\n                boxWidth: offsetWidth\n            }, this._config);\n\n            return {\n                position,\n                arrowPos,\n                x,\n                y\n            };\n        };\n\n        this._target = dim;\n        if (!orientation) {\n            if (positionTop) {\n                orientation = 'vertical';\n            } else if (positionRight || positionLeft) {\n                orientation = 'horizontal';\n            } else {\n                orientation = 'vertical';\n            }\n        }\n\n        if (orientation === 'horizontal') {\n            obj = positionHorizontal();\n        } else if (orientation === 'vertical') {\n            obj = positionVertical();\n        }\n\n        this._position = {\n            x: obj.x,\n            y: obj.y\n        };\n\n        this._arrowPos = obj.arrowPos;\n        if (!arrowDisabled) {\n            placeArrow(this, obj.position, obj.arrowPos);\n        } else {\n            this._tooltipArrow.style('display', 'none');\n            this._tooltipBackground.style('display', 'none');\n        }\n        this._arrowOrientation = obj.position;\n        draw && this.position(obj.x, obj.y);\n        return this;\n    }\n\n    /**\n     * Hides the tooltip element.\n     * @return {Tooltip} Instance of tooltip.\n     */\n    hide () {\n        this._tooltipContainer.style('display', 'none');\n        this._tooltipConnectorContainer.style('display', 'none');\n        return this;\n    }\n\n    /**\n     * Shows the tooltip element.\n     * @return {Tooltip} Instance of tooltip.\n     */\n    show () {\n        this._tooltipContainer.style('display', 'block');\n        return this;\n    }\n\n    extent (extent) {\n        this._extent = extent;\n        return this;\n    }\n\n    offset (offset) {\n        this._offset = offset;\n        return this;\n    }\n\n    remove () {\n        this._tooltipContainer.remove();\n        this._tooltipBackground.remove();\n        this._tooltipConnectorContainer.remove();\n        return this;\n    }\n}\n","import {\n    FieldType,\n    GROUP_BY_FUNCTIONS,\n    formatTemporal,\n    DimensionSubtype,\n    MeasureSubtype,\n    DataModel,\n    defaultValue,\n    retrieveFieldDisplayName\n} from 'muze-utils';\n\nconst { SUM, COUNT } = GROUP_BY_FUNCTIONS;\nconst { InvalidAwareTypes } = DataModel;\n\nconst formatters = (formatter, interval, valueParser) => ({\n    [DimensionSubtype.TEMPORAL]: (value) => {\n        if (value instanceof InvalidAwareTypes) {\n            return valueParser(value);\n        }\n        return formatTemporal(value, interval);\n    },\n    [MeasureSubtype.CONTINUOUS]: value => (value instanceof InvalidAwareTypes ? valueParser(value) :\n        formatter(value.toFixed(2))),\n    [DimensionSubtype.CATEGORICAL]: value => valueParser(value)\n});\n\nconst getDefaultTooltipFormatterFn = (formatter, defaultFormatter) => defaultValue(formatter, defaultFormatter);\n\nconst getTabularData = (dataObj, context, defaultFormatter) => {\n    const rows = [];\n    const { data, schema, fieldspace } = dataObj;\n    rows.push(schema.map(d => d.name));\n    const { valueParser, timeDiffs } = context;\n    data.forEach((d) => {\n        const row = [];\n        schema.forEach((fieldObj, i) => {\n            const interval = fieldObj.subtype === DimensionSubtype.TEMPORAL ? timeDiffs[fieldObj.name] : 0;\n            const numberFormat = fieldObj.type === FieldType.MEASURE && fieldspace.fields[i].numberFormat();\n            const formatterFn = getDefaultTooltipFormatterFn(formatters(numberFormat,\n                interval, valueParser)[fieldObj.subtype], defaultFormatter);\n            const value = formatterFn(d[i]);\n            row.push(value);\n        });\n        rows.push(row);\n    });\n    return rows;\n};\n\nconst getRowContent = (fieldInf, context, dataInf, config) => {\n    let value;\n    let formattedValue;\n    let measureIndex;\n\n    const {\n        valueParser,\n        axes,\n        dimensionMeasureMap,\n        timeDiffs\n    } = context;\n    const { subtype: type, name: field } = fieldInf;\n\n    const { fieldsConfig, defFormatter, data, fieldspace } = dataInf;\n    const { separator, classPrefix } = config;\n    const dataLen = data.length;\n    const values = [];\n    const index = fieldsConfig[field].index;\n    const interval = fieldsConfig[field].def.subtype === DimensionSubtype.TEMPORAL ? timeDiffs[field] : 0;\n    const formatterFn = getDefaultTooltipFormatterFn(formatters(val => val, interval, valueParser)[type],\n        defFormatter);\n\n    let uniqueVals = type === MeasureSubtype.CONTINUOUS ? data.map(d => d[index]) :\n        [...new Set(data.map(d => d[index]))];\n    uniqueVals = uniqueVals.filter(d => d !== '');\n    const colorAxis = axes.color[0];\n    const shapeAxis = axes.shape[0];\n    const sizeAxis = axes.size[0];\n    const isRetinalField = (colorAxis || shapeAxis || sizeAxis) && dataLen > 1 &&\n            type !== MeasureSubtype.CONTINUOUS;\n\n    uniqueVals.forEach((val, i) => {\n        let key;\n        let associatedMeasures = dimensionMeasureMap[field];\n\n        if (associatedMeasures instanceof Array && dataLen > 1) {\n            associatedMeasures = associatedMeasures.filter(d => d in fieldsConfig);\n            key = val;\n            let icon = {\n                value: ''\n            };\n\n            if (isRetinalField) {\n                icon = {\n                    type: 'icon',\n                    color: colorAxis.getColor(val),\n                    shape: shapeAxis.getShape(val),\n                    size: sizeAxis.getSize(val) * config.iconScale\n                };\n            }\n            if (associatedMeasures.length > 1) {\n                const formattedKey = type === DimensionSubtype.TEMPORAL ? formatterFn(key, interval) : key;\n                values.push([icon, `${formattedKey}`]);\n                associatedMeasures.forEach((measure) => {\n                    measureIndex = fieldsConfig[measure].index;\n                    value = data[i][measureIndex];\n                    const numberFormat = fieldspace.fields[measureIndex].numberFormat();\n                    const measureFormatter = getDefaultTooltipFormatterFn(\n                        formatters(numberFormat, interval, valueParser)[MeasureSubtype.CONTINUOUS]);\n                    formattedValue = measureFormatter(value);\n                    values.push([{\n                        value: `${retrieveFieldDisplayName(context.data, measure)}${separator}`,\n                        style: {\n                            'margin-left': `${config.margin}px}`\n                        },\n                        className: `${classPrefix}-tooltip-key`\n                    }, {\n                        value: `${formattedValue}`,\n                        className: `${classPrefix}-tooltip-value`\n                    }]);\n                });\n            } else {\n                measureIndex = fieldsConfig[associatedMeasures[0]].index;\n                value = data[i][measureIndex];\n                const numberFormat = fieldspace.fields[measureIndex].numberFormat();\n                const measureFormatter = getDefaultTooltipFormatterFn(\n                    formatters(numberFormat, interval, valueParser)[MeasureSubtype.CONTINUOUS]);\n                formattedValue = measureFormatter(value);\n                const formattedKey = type === DimensionSubtype.TEMPORAL ? formatterFn(key, interval) : key;\n                values.push([\n                    icon,\n                    {\n                        value: `${formattedKey}`,\n                        className: `${classPrefix}-tooltip-key`\n                    },\n                    {\n                        value: `${formattedValue}`,\n                        className: `${classPrefix}-tooltip-value`\n                    }\n                ]);\n            }\n        } else {\n            key = field;\n            value = val;\n            formattedValue = formatterFn(value);\n            values.push([{\n                value: `${retrieveFieldDisplayName(context.data, key)}${separator}`,\n                className: `${config.classPrefix}-tooltip-key`\n            }, {\n                value: `${formattedValue}`,\n                className: `${config.classPrefix}-tooltip-value`\n            }]);\n        }\n    });\n    return values;\n};\n\nexport const buildTooltipData = (dataModel, config = {}, context) => {\n    let fieldValues = [];\n    const dataObj = dataModel.getData();\n    const data = dataObj.data;\n    const schema = dataObj.schema;\n    const fieldspace = dataModel.getFieldspace();\n    const fieldsConfig = dataModel.getFieldsConfig();\n    const detailFields = context.detailFields || [];\n    const dimensions = schema.filter(d => d.type === FieldType.DIMENSION);\n    const measures = schema.filter(d => d.type === FieldType.MEASURE);\n    const containsDetailField = schema.find(d => detailFields.indexOf(d.name) !== -1);\n    const dataLen = data.length;\n    const {\n        valueParser,\n        dimensionMeasureMap\n    } = context;\n    const defFormatter = formatters(null, null, valueParser)[DimensionSubtype.CATEGORICAL];\n\n    if (dataLen > 1 && containsDetailField) {\n        fieldValues = getTabularData({\n            data,\n            schema,\n            fieldspace\n        }, context, defFormatter);\n    } else {\n        dimensions.forEach((item) => {\n            fieldValues = [...fieldValues, ...getRowContent(item, context, {\n                fieldsConfig,\n                data,\n                defFormatter,\n                fieldspace\n            }, config)];\n        });\n\n        const allMeasures = [...new Set(...Object.values(dimensionMeasureMap))];\n        const filteredMeasures = dataLen > 1 ? measures.filter(d => allMeasures.indexOf(d.name) === -1)\n            : measures;\n\n        filteredMeasures.forEach((item) => {\n            fieldValues = [...fieldValues, ...getRowContent(item, context, {\n                fieldsConfig,\n                data,\n                defFormatter,\n                fieldspace\n            }, config)];\n        });\n    }\n\n    return fieldValues;\n};\n\nexport const strategies = {\n    selectionSummary: (dm, config, context) => {\n        const { selectionSet } = context;\n        const aggFns = selectionSet.mergedEnter.aggFns;\n        const dataObj = dm.getData();\n        const measures = dataObj.schema.filter(d => d.type === FieldType.MEASURE);\n        const aggregatedModel = dm.groupBy([''], measures.reduce((acc, v) => {\n            acc[v.name] = aggFns[v.name] === COUNT ? SUM : aggFns[v.name];\n            return acc;\n        }, {\n            saveChild: false\n        }));\n        const fieldsConf = aggregatedModel.getFieldsConfig();\n        let values = [[{\n            value: `${dataObj.data.length}`,\n            style: {\n                'font-weight': 'bold'\n            }\n        }, 'Items Selected']];\n        const measureNames = measures.map(d => d.name);\n        measureNames.forEach((measure) => {\n            values.push([`(${aggFns[measure].toUpperCase()})`, `${retrieveFieldDisplayName(dm, measure)}`,\n                {\n                    value: `${aggregatedModel.getData().data[0][fieldsConf[measure].index].toFixed(2)}`,\n                    style: {\n                        'font-weight': 'bold'\n                    }\n                }]);\n        });\n        if (measureNames.length === 1) {\n            values = [[...values[0], ...values[1]]];\n        }\n        return values;\n    },\n    highlightSummary: (data, config, context) => {\n        const values = buildTooltipData(data, config, context);\n        return values;\n    }\n};\n","import { Tooltip as TooltipRenderer } from '@chartshq/muze-tooltip';\nimport { FieldType, mergeRecursive, defaultValue } from 'muze-utils';\nimport { spaceOutBoxes } from '../helper';\nimport { strategies } from './strategies';\nimport { FRAGMENTED } from '../../enums/constants';\nimport SpawnableSideEffect from '../spawnable';\n\nimport './styles.scss';\n\nconst configResolvers = {\n    highlightSummary: (specificConf, config) => defaultValue(specificConf, config),\n    default: specificConf => defaultValue(specificConf, {})\n};\n\nconst sanitizeConfig = (config, context) => {\n    const strategyObj = context._strategies;\n    const sanitizedConf = Object.assign({}, config);\n    for (const key in strategyObj) {\n        sanitizedConf[key] = defaultValue(configResolvers[key], configResolvers.default)(config[key], config);\n    }\n    return sanitizedConf;\n};\n\nexport default class Tooltip extends SpawnableSideEffect {\n    constructor (...params) {\n        super(...params);\n        this._tooltips = {};\n        this._strategies = strategies;\n        this._strategy = 'highlightSummary';\n    }\n\n    static defaultConfig () {\n        return {\n            padding: 5,\n            offset: {\n                x: 0,\n                y: 0\n            },\n            highlightSummary: {\n                dataTransform: (dt, fields) => (fields ? dt.project(fields, { saveChild: false }) : dt\n                )\n            },\n            selectionSummary: {\n                dataTransform: (dt, fields) => {\n                    const fieldspace = dt.getFieldspace();\n                    const dimensions = Object.keys(fieldspace.getDimension());\n                    const measures = Object.keys(fieldspace.getMeasure());\n                    const projectedFields = defaultValue(fields, measures.length ? [measures[0]] : []);\n                    return dt.project([...dimensions, ...projectedFields], {\n                        saveChild: false\n                    });\n                }\n            }\n        };\n    }\n\n    static formalName () {\n        return 'tooltip';\n    }\n\n    config (...params) {\n        if (params.length) {\n            const config = this._config = mergeRecursive(this._config, sanitizeConfig(params[0], this));\n            const strategyObj = this._strategies;\n            for (const key in strategyObj) {\n                const formatter = config[key].formatter;\n                this.setStrategy(key, formatter);\n            }\n            return this;\n        }\n        return this._config;\n    }\n\n    apply (selectionSet, payload, options = {}) {\n        let totalHeight = 0;\n        let totalWidth = 0;\n        const dataModel = selectionSet.mergedEnter.model;\n        const context = this.firebolt.context;\n        const drawingInf = this.drawingContext();\n        if ((dataModel.isEmpty() || payload.criteria === null) || selectionSet.isSourceFieldPresent === false) {\n            this.hide(options, null);\n            return this;\n        }\n\n        const tooltips = this._tooltips;\n        const config = this.config();\n        const boundBox = {\n            width: drawingInf.width,\n            height: drawingInf.height\n        };\n        const showInPosition = payload.showInPosition;\n        const pad = config.padding;\n        const dataModels = [];\n        const fragmented = config.mode === FRAGMENTED;\n        const sourceInf = context.getSourceInfo();\n        const fields = sourceInf.fields;\n        const xFieldDim = fields.x[0] ? fields.x[0].type() === FieldType.DIMENSION : false;\n        const showVertically = !!xFieldDim;\n        const tooltipPos = payload.position;\n        const boxes = [];\n        const enter = {};\n        const uids = dataModel.getData().uids;\n        if (fragmented) {\n            dataModels.push(...uids.map(d => dataModel.select((fieldsArr, i) => i === d, {\n                saveChild: false\n            })));\n        } else {\n            dataModels.push(dataModel);\n        }\n\n        let target = payload.target;\n        let targetFields = [];\n        if (target) {\n            targetFields = target[0] || [];\n            const sourceFields = payload.sourceFields;\n            const indices = [];\n            for (let i = 0, len = targetFields.length; i < len; i++) {\n                if (sourceFields.indexOf(targetFields[i]) !== -1) {\n                    indices.push(i);\n                }\n            }\n            target = target.map(d => d.filter((v, i) => indices.indexOf(i) !== -1));\n        }\n\n        const plotDimensions = context.getPlotPointsFromIdentifiers(target || payload.criteria, {\n            getBBox: true\n        });\n\n        const strategy = defaultValue(options.strategy, this._strategy);\n        const strategyConf = config[strategy];\n        const { dataTransform, fields: projectFields } = strategyConf;\n        // Show tooltip for each datamodel\n        for (let i = 0; i < dataModels.length; i++) {\n            let plotDim = plotDimensions[i];\n            if (fragmented) {\n                const dimensions = dataModels[i].getData().schema.filter(d => d.type === FieldType.DIMENSION)\n                    .map(d => d.name);\n                plotDim = context.getPlotPointsFromIdentifiers(dataModels[i].project(dimensions), { getBBox: true });\n                plotDim = plotDim && plotDim[0];\n            }\n\n            const dt = dataTransform(dataModels[i], projectFields, this);\n\n            enter[i] = true;\n            const { parentContainer: layoutContainer, parentContainerDimensions } = drawingInf;\n            const layoutBoundBox = layoutContainer.getBoundingClientRect();\n            const unitBoundBox = drawingInf.htmlContainer.getBoundingClientRect();\n\n            const offsetLeft = unitBoundBox.left - layoutBoundBox.left;\n            const offsetTop = unitBoundBox.top - layoutBoundBox.top;\n            const tooltipInst = tooltips[i] = tooltips[i] || new TooltipRenderer(layoutContainer,\n                    drawingInf.svgContainer);\n\n            sourceInf.payload = payload;\n            sourceInf.firebolt = this.firebolt;\n            sourceInf.detailFields = context.detailFields();\n            sourceInf.timeDiffs = context.timeDiffsByField();\n            sourceInf.valueParser = context.valueParser();\n            sourceInf.selectionSet = selectionSet;\n            tooltipInst.context(sourceInf);\n            const strategyFn = strategies[strategy];\n            tooltipInst.content(strategy, dt, {\n                formatter: strategyFn,\n                order: options.order\n            })\n                            .config(this.config())\n                            .extent({\n                                x: 0,\n                                y: 0,\n                                width: parentContainerDimensions.width,\n                                height: parentContainerDimensions.height\n                            })\n                            .offset({\n                                x: offsetLeft + (config.offset.x || 0),\n                                y: offsetTop + (config.offset.y || 0)\n                            });\n\n            if (showInPosition) {\n                tooltipInst.position(tooltipPos.x + pad, tooltipPos.y + pad);\n            } else if (plotDim) {\n                tooltipInst.positionRelativeTo({\n                    x: plotDim.x,\n                    y: plotDim.y,\n                    width: plotDim.width || 0,\n                    height: plotDim.height || 0\n                }, {\n                    orientation: fragmented ?\n                        (showVertically ? 'horizontal' : 'vertical') : undefined\n                });\n            } else {\n                tooltipInst.hide();\n                break;\n            }\n\n            if (fragmented) {\n                const position = tooltipInst._position;\n                const tooltipBoundBox = tooltipInst._tooltipContainer.node().getBoundingClientRect();\n\n                totalHeight += tooltipBoundBox.height + pad;\n                totalWidth += tooltipBoundBox.width + pad;\n                if (showVertically ? totalHeight > drawingInf.height : totalWidth > drawingInf.width) {\n                    break;\n                }\n                boxes.push({\n                    x: position.x,\n                    y: position.y,\n                    width: tooltipBoundBox.width,\n                    height: tooltipBoundBox.height,\n                    tooltip: tooltipInst\n                });\n            }\n        }\n\n        for (const key in tooltips) {\n            if (!enter[key]) {\n                const tooltip = tooltips[key];\n                tooltip.content(payload.action, null);\n                if (!tooltip.getContents().length) {\n                    tooltip.remove();\n                    delete tooltips[key];\n                }\n            }\n        }\n        if (fragmented) {\n            spaceOutBoxes(boxes, boundBox, showVertically);\n            boxes.forEach(box => box.tooltip.position(box.x, box.y, {\n                repositionArrow: true\n            }));\n        }\n        return this;\n    }\n\n    hide (options) {\n        const tooltips = this._tooltips;\n        for (const key in tooltips) {\n            if ({}.hasOwnProperty.call(tooltips, key)) {\n                const strategy = options.strategy || this._strategy;\n                tooltips[key].content(strategy, null);\n                tooltips[key].hide();\n            }\n        }\n    }\n}\n","export const spaceOutBoxes = (boxes, extent, showVertically) => {\n    let y;\n    let height;\n    let x;\n    let width;\n    let i;\n    const pad = 5;\n    const len = boxes.length;\n    const spaceOutIfOverlap = (firstBox, secondBox, opposite) => {\n        x = firstBox.x;\n        width = firstBox.width;\n        y = firstBox.y;\n        height = firstBox.height;\n        const bottom = y + height;\n        const right = x + width;\n\n        if (showVertically) {\n            if (opposite ? y < (secondBox.y + secondBox.height) : bottom > secondBox.y) {\n                secondBox.y = opposite ? firstBox.y - secondBox.height - pad :\n                        bottom + pad;\n            }\n        } else if (opposite ? x < (secondBox.x + secondBox.width) : right > secondBox.x) {\n            secondBox.x = opposite ? firstBox.x - secondBox.width - pad :\n                    right + pad;\n        }\n    };\n\n    boxes.sort((a, b) => (showVertically ? a.y - b.y : a.x - b.x));\n    i = 0;\n\n    for (i = 0; i < len - 1; i++) {\n        spaceOutIfOverlap(boxes[i], boxes[i + 1]);\n    }\n\n    if ((boxes[i].y + boxes[i].height) > extent.height ||\n            (boxes[i].x + boxes[i].width) > extent.width) {\n        if (showVertically) {\n            boxes[i].y -= (boxes[i].height + boxes[i].y) - extent.height;\n        } else {\n            boxes[i].x -= (boxes[i].width + boxes[i].x) - extent.width;\n        }\n        for (i = len - 1; i > 0; i--) {\n            spaceOutIfOverlap(boxes[i], boxes[i - 1], true);\n        }\n    }\n    return boxes;\n}\n;\n","import { selectElement, FieldType } from 'muze-utils';\n\nimport './styles.scss';\nimport { CLASSPREFIX } from '../../enums/constants';\nimport SpawnableSideEffect from '../spawnable';\n\nexport default class Crossline extends SpawnableSideEffect {\n    static defaultConfig () {\n        return {\n            className: `${CLASSPREFIX}-crossline-group`,\n            bandClass: `${CLASSPREFIX}-crossband`,\n            lineClass: `${CLASSPREFIX}-crossline`\n        };\n    }\n\n    static formalName () {\n        return 'crossline';\n    }\n\n    apply (selectionSet, payload) {\n        let height;\n        let bandWidth;\n        let px;\n        let width;\n        const {\n            className,\n            bandClass,\n            lineClass\n        } = this.config();\n        const dataModel = selectionSet.mergedEnter.model;\n        const drawingInf = this.drawingContext();\n        if (payload.criteria && dataModel && dataModel.isEmpty()) {\n            return this;\n        }\n        if (payload.criteria === null || !dataModel) {\n            this.hide();\n            return this;\n        }\n\n        const dataObj = dataModel.getData();\n        const sourceInf = this.firebolt.context.getSourceInfo();\n        const axes = sourceInf.axes;\n        const axisFields = sourceInf.fields;\n        const fields = selectionSet.fields;\n        const data = dataObj.data;\n        const fieldsConfig = dataModel.getFieldsConfig();\n        const svgContainer = drawingInf.sideEffectGroup;\n\n        const elemData = [];\n        fields.forEach((field) => {\n            const fieldIndex = fieldsConfig[field] && fieldsConfig[field].index;\n            const dataArr = data.map(d => d[fieldIndex]);\n            const axisIndex = [['x', 0], ['x', 1], ['y', 0], ['y', 1]].find((arr) => {\n                const fieldInst = axisFields[arr[0]][arr[1]];\n                return fieldInst && fieldInst.type() === FieldType.DIMENSION &&\n                    fieldInst.getMembers().indexOf(field) !== -1;\n            });\n            if (axisIndex !== undefined && data.length) {\n                const type = axisIndex[0];\n                const axis = axes[type][axisIndex[1]];\n                const value = dataArr[0];\n                bandWidth = axis.getUnitWidth() || 0;\n                px = axis.getScaleValue(value) + bandWidth / 2 + drawingInf.xOffset;\n                const layers = this.firebolt.context.layers();\n                const plotWidth = Math.max(...layers.map(layer => layer.getPlotSpan()[type]));\n                const pad = Math.max(...layers.map(layer => layer.getPlotPadding()[type]));\n                height = drawingInf.height;\n                width = drawingInf.width;\n                const startPx = px - plotWidth / 2 - pad / 2;\n                const endPx = px + plotWidth / 2 + pad / 2;\n                const dataPoint = {};\n                if (type === 'y') {\n                    dataPoint.d = `M 0 ${startPx} L 0 ${endPx} L ${width} ${endPx} L ${width} ${startPx} Z`;\n                } else {\n                    dataPoint.d = `M ${startPx} 0 L ${endPx} 0 L ${endPx} ${height} L ${startPx} ${height} Z`;\n                }\n                dataPoint.className = plotWidth ? bandClass : lineClass;\n                !isNaN(px) && elemData.push(dataPoint);\n            }\n        });\n        if (elemData.length) {\n            const parentGroup = this.createElement(svgContainer, 'g', [1], className);\n            const elem = this.createElement(parentGroup, 'path', elemData);\n            elem.attr('d', d => d.d).style('pointer-events', 'none')\n                            .attr('class', d => d.className);\n        }\n        return this;\n    }\n\n    hide () {\n        const className = this.config().className;\n        const drawingInf = this.drawingContext();\n        selectElement(drawingInf.sideEffectGroup).selectAll(`.${className}`).remove();\n    }\n}\n","const fadeFn = (set, context, strategy) => {\n    const {\n        mergedEnter,\n        mergedExit,\n        exitSet,\n        completeSet\n    } = set;\n\n    if (!mergedEnter.length && !mergedExit.length) {\n        context.applyInteractionStyle(completeSet, {}, strategy, false);\n    } else {\n        context.applyInteractionStyle(exitSet[1], {}, strategy, true);\n        context.applyInteractionStyle(mergedEnter, {}, strategy, false);\n    }\n};\n\nexport const strategies = {\n    fade: fadeFn,\n    focus: (set, context) => {\n        const {\n            mergedEnter,\n            mergedExit,\n            completeSet\n        } = set;\n        if (!mergedEnter.length && !mergedExit.length) {\n            context.applyInteractionStyle(completeSet, {}, 'focus', false);\n        } else {\n            context.applyInteractionStyle(mergedExit, {}, 'focus', true);\n            context.applyInteractionStyle(mergedEnter, {}, 'focus', false);\n        }\n    },\n    highlight: (set, context) => {\n        const {\n            mergedEnter,\n            mergedExit,\n            entrySet,\n            exitSet,\n            completeSet\n        } = set;\n        if (!mergedEnter.length && !mergedExit.length) {\n            context.applyInteractionStyle(completeSet, {}, 'highlight', false);\n        } else {\n            context.applyInteractionStyle(entrySet[1], {}, 'highlight', true);\n            context.applyInteractionStyle(exitSet[1], {}, 'highlight', false);\n        }\n    }\n};\n","import SurrogateSideEffect from '../surrogate';\nimport { strategies } from './strategy';\n\nexport default class PlotHighlighter extends SurrogateSideEffect {\n    constructor (...params) {\n        super(...params);\n        this._strategy = 'highlight';\n        this._strategies = strategies;\n    }\n\n    static formalName () {\n        return 'highlighter';\n    }\n\n    static target () {\n        return 'visual-unit';\n    }\n\n    apply (selectionSet, payload, options = {}) {\n        const strategy = this._strategies[options.strategy || this._strategy];\n\n        if (selectionSet.isSourceFieldPresent !== false) {\n            strategy(selectionSet, this, options.strategy || this._strategy);\n        }\n\n        return this;\n    }\n}\n","import SurrogateSideEffect from '../surrogate';\n\nexport default class FilterEffect extends SurrogateSideEffect {\n    static formalName () {\n        return 'filter';\n    }\n\n    static target () {\n        return 'visual-unit';\n    }\n\n    static mutates () {\n        return true;\n    }\n\n    apply (selectionSet, payload) {\n        const context = this.firebolt.context;\n        const entryModel = selectionSet.mergedEnter.model;\n        if (payload.criteria === null) {\n            context.clearCaching().resetData();\n        } else {\n            context.enableCaching().data(entryModel);\n        }\n        return this;\n    }\n}\n","import { DataModel, STATE_NAMESPACES, getObjProp } from 'muze-utils';\nimport { CLASSPREFIX } from '../../enums/constants';\nimport SpawnableSideEffect from '../spawnable';\n\nimport './styles.scss';\n\nconst addLayer = (layerDefs, layerRegistry, context, sideEffect) => {\n    const layers = [];\n    if (layerDefs) {\n        layerDefs.forEach((layerDef) => {\n            const mark = layerDef.mark;\n            const layerCls = layerRegistry[mark];\n            if (layerCls && layerCls.shouldDrawAnchors()) {\n                const depLayerEncoding = layerDef.def.encoding;\n                const encoding = {\n                    x: getObjProp(depLayerEncoding, 'x', 'field'),\n                    y: getObjProp(depLayerEncoding, 'y', 'field'),\n                    color: getObjProp(depLayerEncoding, 'color', 'field'),\n                    size: {\n                        field: getObjProp(depLayerEncoding, 'size', 'field'),\n                        value: sideEffect.defaultSizeValue()\n                    }\n                };\n                const name = `${layerDef.def.name}-${sideEffect.constructor.formalName()}`;\n                const layerObj = {\n                    instances: context.addLayer({\n                        name,\n                        mark: 'point',\n                        className: sideEffect.constructor.defaultConfig().className,\n                        encoding,\n                        transform: {\n                            type: 'identity'\n                        },\n                        transition: sideEffect.getTransitionConfig(),\n                        calculateDomain: false,\n                        source: dm => dm.select(() => false, {\n                            saveChild: false\n                        }),\n                        interactive: false,\n                        render: false\n                    }),\n                    linkedLayer: layerDef.def.name\n                };\n                layers.push(layerObj);\n            }\n        });\n    }\n    return layers;\n};\n\nexport default class AnchorEffect extends SpawnableSideEffect {\n    constructor (...params) {\n        super(...params);\n        this._layersMap = {};\n        this.addAnchorLayers();\n    }\n\n    static target () {\n        return 'visual-unit';\n    }\n\n    static defaultConfig () {\n        return {\n            className: `${CLASSPREFIX}-anchors-group`\n        };\n    }\n\n    static formalName () {\n        return 'anchors';\n    }\n\n    addAnchorLayers () {\n        const context = this.firebolt.context;\n        const metaInf = context.metaInf();\n        const layerRegistry = context.registry().layerRegistry;\n        const layerDefsVal = context.layerDef();\n        context.store().registerImmediateListener(\n            `${STATE_NAMESPACES.UNIT_LOCAL_NAMESPACE}.${metaInf.namespace}.layerDef`, ([, layerDefs]) => {\n                this._layers = addLayer(layerDefs, layerRegistry, context, this);\n            });\n        this._layers = addLayer(layerDefsVal, layerRegistry, context, this);\n        return this;\n    }\n\n    getTransitionConfig () {\n        return {\n            disabled: true\n        };\n    }\n\n    /**\n     * Returns the default area value of the anchor point.\n     * @return { number } Default area value of anchor.\n     */\n    defaultSizeValue () {\n        return 100;\n    }\n\n    apply (selectionSet) {\n        const self = this;\n        const dataModel = selectionSet.mergedEnter.model;\n        if (selectionSet.isSourceFieldPresent !== false) {\n            const drawingInf = this.drawingContext();\n            const sideEffectGroup = drawingInf.sideEffectGroup;\n            const className = `${this.config().className}`;\n            const layers = this._layers;\n            const parentGroup = this.createElement(sideEffectGroup, 'g', [1], `${className}-container`);\n            const anchorGroups = this.createElement(parentGroup, 'g', Object.values(layers));\n            anchorGroups.each(function (layer) {\n                const instances = layer.instances;\n                const elems = self.createElement(this, 'g', instances, className);\n                const linkedLayer = self.firebolt.context.getLayerByName(layer.linkedLayer);\n                const [transformedData, schema] = linkedLayer.getTransformedDataFromIdentifiers(dataModel);\n                const transformedDataModel = new DataModel(transformedData, schema);\n                elems.each(function (d, i) {\n                    instances[i].data(transformedDataModel).mount(this);\n                });\n            });\n        }\n        return this;\n    }\n}\n","import AnchorEffect from './anchors';\nimport { CLASSPREFIX } from '../enums/constants';\n\nexport default class PersistentAnchors extends AnchorEffect {\n    static formalName () {\n        return 'persistent-anchors';\n    }\n\n    static defaultConfig () {\n        return {\n            className: `${CLASSPREFIX}-persistent-anchors`\n        };\n    }\n\n    getTransitionConfig () {\n        return {\n            disabled: true\n        };\n    }\n}\n","import AnchorEffect from './anchors';\nimport { CLASSPREFIX } from '../enums/constants';\n\nexport default class BrushAnchors extends AnchorEffect {\n    static formalName () {\n        return 'brush-anchors';\n    }\n\n    static defaultConfig () {\n        return {\n            className: `${CLASSPREFIX}-brush-anchors`\n        };\n    }\n\n    getTransitionConfig () {\n        return {\n            disabled: true\n        };\n    }\n}\n","import * as BEHAVIOURS from './enums/behaviours';\n\nexport const behaviourEffectMap = {\n    [BEHAVIOURS.BRUSH]: ['selectionBox', {\n        name: 'highlighter',\n        options: {\n            strategy: 'fade'\n        }\n    }, 'brush-anchors'],\n    [`${BEHAVIOURS.BRUSH},${BEHAVIOURS.SELECT}`]: [{\n        name: 'tooltip',\n        options: {\n            strategy: 'selectionSummary',\n            order: 0,\n            filter: context => context.config().mode === 'fragmented'\n        }\n    }],\n    [BEHAVIOURS.HIGHLIGHT]: [{\n        name: 'highlighter',\n        options: {\n            strategy: 'highlight'\n        }\n    }, 'crossline', {\n        name: 'tooltip',\n        options: {\n            order: 9999\n        }\n    }, 'anchors'],\n    [BEHAVIOURS.FILTER]: ['filter'],\n    [BEHAVIOURS.SELECT]: [{\n        name: 'highlighter',\n        options: {\n            strategy: 'focus'\n        }\n    }, 'persistent-anchors']\n};\n","export const CLASSPREFIX = 'muze';\nexport const STACK = 'stack';\nexport const GROUP = 'group';\nexport const IDENTITY = 'identity';\nexport const ANGLE = 'angle';\nexport const RADIUS = 'radius';\nexport const SIZE = 'size';\nexport const COLOR = 'color';\nexport const SHAPE = 'shape';\nexport const TEXT = 'text';\nexport const OUTER_RADIUS_VALUE = 'outerRadiusValue';\nexport const TEXT_ANCHOR_MIDDLE = 'middle';\nexport const ENCODING = {\n    X: 'x',\n    Y: 'y',\n    X0: 'x0',\n    Y0: 'y0',\n    RADIUS: 'radius',\n    RADIUS0: 'radius0',\n    ANGLE: 'angle',\n    ANGLE0: 'angle0'\n};\n\nexport const ASCENDING = 'asc';\n\nexport const AGG_FN_SUM = 'sum';\n\nexport const AREA_LAYER = 'area';\nexport const ARC_LAYER = 'arc';\nexport const LINE_LAYER = 'line';\nexport const TEXT_LAYER = 'text';\nexport const POINT_LAYER = 'point';\nexport const BAR_LAYER = 'bar';\nexport const TICK_LAYER = 'tick';\nexport const SIMPLE_LAYER = 'simple';\nexport const BASE_LAYER = 'base';\n","import { CLASSPREFIX, STACK } from '../../enums/constants';\n\nexport const defaultConfig = {\n    classPrefix: CLASSPREFIX,\n    defClassName: 'layer-area',\n    className: '',\n    interpolate: 'linear',\n    transform: {\n        type: STACK\n    },\n    interaction: {\n\n    },\n    nearestPointThreshold: 10,\n    encoding: {\n        color: {},\n        x: {},\n        y: {},\n        y0: {},\n        strokeOpacity: {\n            value: 1\n        }\n    },\n    transition: {\n        effect: 'cubic',\n        duration: 1000\n    },\n    connectNullData: false\n};\n","import { ERROR_MSG } from 'muze-utils';\n\n/**\n * This is an interface class which any new layer class has to extend.\n *\n * @example\n * class BarLayer extends BaseLayer {\n *   update (params) {\n *       // super.update(params);\n *       // Update the bar layer\n *   }\n * }\n * @class\n */\nexport default class SimpleLayer {\n\n    formalName () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    /**\n     * Sets or gets the dependencies.\n     * @param {Object} dependencies Dependencies needed by layer\n     * @return {BaseLayer} Instance of base layer.\n     */\n    dependencies () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    /**\n     * Returns the config of the layer\n     *\n     * @param {Object} config Configuration of layer\n     * @return {Object} configuration of layer\n     */\n    config () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    /**\n     * Acts as a getter or setter function\n     * When setter\n     * Returns the datamodel of the layer\n     * @param { DataModel } dataModel instance of DataModel\n     * @return { DataModel } DataModel instance of the layer\n     */\n    data () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    /**\n     * Returns a serialized schema of the layer\n     * @return {Object} Serialized schema\n     */\n    serialize () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    /**\n     * Returns the unique identifier of this layer\n     * @return {string} id of the layer\n     */\n    id () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n    /*\n     * This method resolves the x, y, x0 and y0 values from the transformed data.\n     * It also checks the type of transformed data for example, if it is a stacked data\n     * then it fetches the y and y0 values from the stacked data.\n     * @param {Array.<Array>} transformedData transformed data\n     * @param {Object} fieldMap field definitions\n     * @param {string} transformType type of transformed data - stack, group or identity.\n     * @return {Array.<Object>} Normalized data\n     * @private\n     */\n    normalizeTransformedData () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    /**\n     * Gets the transform method from transform factory based on type of transform. It then calls the\n     * transform method with the data and passes the configuration parameters of transform such as\n     * groupBy, value field, etc.\n     *\n     * @param {DataModel} dataModel Instance of dataModel\n     * @param {Object} config configuration for transforming data\n     * @return {Array.<Array>} Transformed data.\n     * @private\n     */\n    getTransformedData () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    /**\n     * Calculates the domain from the data.\n     * It checks the type of field and calculates the domain based on that. For example, if it\n     * is a quantitative or temporal field, then it calculates the min and max from the data or\n     * if it is a nominal field then it gets all the values from the data of that field.\n     * @param {Array} data DataArray\n     * @return {Array} Domain values array.\n     */\n    _calculateDomainFromData () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    /**\n     * Returns the domain for the axis.\n     *\n     * @param {string} encodingType type of encoding x, y, color, etc.\n     * @return {Object} Axis domains\n     */\n    getDomain () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    /**\n     * Abstract method for getting nearest point\n     * @return {BaseLayer} Instance of base layer\n     */\n    getNearestPoint () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    /**\n     * Abstract method for highlighting points\n     * @return {BaseLayer} Instance of base layer\n     */\n    highlightPoint () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    /**\n     * Abstract method for deselecting points\n     * @return {BaseLayer} Instance of base layer\n     */\n    dehighlightPoint () {\n        return this;\n    }\n\n    linkLayerStore () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    /**\n     * Sets the container element for the layer to be renderered.\n     * @param {SVGElement} mountPoint SVG element or group element.\n     */\n    mount () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    render () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n}\n","import { COORD_TYPES } from 'muze-utils';\n\nconst { CARTESIAN } = COORD_TYPES;\nexport const props = {\n    axes: {},\n    mount: {},\n    measurement: {},\n    metaInf: {},\n    data: {},\n    config: {},\n    valueParser: {\n        defaultValue: val => val\n    },\n    coord: {\n        defaultValue: CARTESIAN\n    }\n};\n","/**\n * @module Axis\n * This file declares a class that is used to render an axis to add  meaning to\n * plots.\n */\nimport { Symbols } from 'muze-utils';\nimport * as AxisOrientation from '../enums/axis-orientation';\n\n/**\n * @module Axis\n * This file exports constants that are used to reference axis orientations\n * in a consistent manner.\n */\nexport const BOTTOM = 'bottom';\nexport const TOP = 'top';\nexport const LEFT = 'left';\nexport const RIGHT = 'right';\n\n/**\n  * This object is used to associate the axis orientation with the d3 class\n  * used to represent that axis.\n  */\nexport const axisOrientationMap = {\n    [AxisOrientation.LEFT]: Symbols.axisLeft,\n    [AxisOrientation.BOTTOM]: Symbols.axisBottom,\n    [AxisOrientation.RIGHT]: Symbols.axisRight,\n    [AxisOrientation.TOP]: Symbols.axisTop\n};\n","/**\n * @module axis\n * This file exports constants used to reference scale type\n * consistently throughout the project.\n */\nexport const LINEAR = 'linear';\nexport const BAND = 'band';\nexport const TIME = 'temporal';\nexport const COLOR = 'color';\nexport const ORDINAL = 'ordinal';\nexport const QUANTIZE = 'quantize';\nexport const QUANTILE = 'quantile';\nexport const LOG = 'log';\nexport const POW = 'pow';\nexport const IDENTITY = 'identity';\nexport const SEQUENTIAL = 'sequential';\nexport const THRESHOLD = 'threshold';\n","export const CLASSPREFIX = 'muze';\n\nexport const CONTINOUS = 'continous';\nexport const DISCRETE = 'discrete';\nexport const SEQUENTIAL = 'sequential';\nexport const ORDINAL = 'ordinal';\nexport const LINEAR = 'linear';\nexport const BAND = 'band';\nexport const THRESHOLD = 'threshold';\nexport const QUANTIZE = 'quantize';\nexport const QUANTILE = 'quantile';\n\nexport const COLOR = 'color';\nexport const SHAPE = 'shape';\nexport const SIZE = 'size';\n\nexport const DOMAIN = 'domain';\nexport const HIDDEN = 'hidden';\nexport const NUMBER = 'number';\nexport const BOTTOM = 'bottom';\nexport const TOP = 'top';\n\nexport const RGB = 'rgb';\nexport const HEX = 'hex';\nexport const HSLA = 'hsla';\nexport const HSL = 'hsl';\n\nexport const DEFAULT_ANGLE_DOMAIN = [1];\nexport const MIN_NO_OF_TICKS = 2;\nexport const DEFAULT_NO_OF_TICKS = 10;\n\n","import { scales, colorSchemes } from 'muze-utils';\n\nimport {\n    SEQUENTIAL,\n    ORDINAL,\n    LINEAR,\n    CONTINOUS,\n    THRESHOLD,\n    QUANTIZE\n} from './enums/constants';\n\nimport * as ScaleType from './enums/scale-type';\n\nconst {\n    scaleLinear,\n    scaleThreshold,\n    scaleLog,\n    scalePow,\n    scaleIdentity,\n    scaleOrdinal,\n    scaleSequential,\n    scaleQuantize,\n    scaleQuantile,\n    schemeCategory10,\n    schemeCategory20,\n    schemeCategory20b,\n    scaleBand,\n    scaleTime\n} = scales;\nexport const scaleMap = {\n    [ScaleType.LINEAR]: scaleLinear,\n    [ScaleType.BAND]: scaleBand,\n    [ScaleType.QUANTIZE]: scaleQuantize,\n    [ScaleType.QUANTILE]: scaleQuantile,\n    [ScaleType.THRESHOLD]: scaleThreshold,\n    [ScaleType.SEQUENTIAL]: scaleSequential,\n    [ScaleType.LOG]: scaleLog,\n    [ScaleType.POW]: scalePow,\n    [ScaleType.IDENTITY]: scaleIdentity,\n    [ScaleType.TIME]: scaleTime,\n    [ScaleType.COLOR]: scaleLinear,\n    [ScaleType.ORDINAL]: scaleOrdinal\n};\nexport const SCHEMES = {\n    SCHEME1: schemeCategory10,\n    SCHEME2: schemeCategory20,\n    SCHEME3: schemeCategory20b\n};\n\n/**\n * Accepts a scheme in a string format and returns the scale from d3-scale-chromatic\n *\n * @export\n * @param {string} scheme a string representing the kind of scheme for the color axis\n * @return {Object} The corresponding scale from a scheme type from d3 chromatic scale\n */\nexport function getScheme (scheme) {\n    if (scheme[0] === 'i') {\n        return scaleSequential(colorSchemes[scheme]);\n    }\n    return scaleOrdinal(colorSchemes[scheme]);\n}\n\n/**\n *\n *\n * @export\n * @param {*} scheme\n *\n */\nexport function getSchemeType (scheme) {\n    let schemeType = '';\n    if (scheme && typeof (scheme) === 'string') {\n        schemeType = scheme[0] === 'i' ? SEQUENTIAL : ORDINAL;\n    } else {\n        schemeType = ORDINAL;\n    }\n    return schemeType;\n}\n\n/**\n * This function is used to create a scale that is assigned to\n * an instance of axis.\n *\n * @export\n * @param {Object} params the input parameters to create a Scale object\n * @param {string} params.type the type of scale\n * @param {Array} params.range the range of scale\n * @return {Object} instance of scale\n */\nexport function createScale (params) {\n    if (!params.type || !scaleMap[params.type]) {\n        throw new Error(`${params.type} is not a valid scale type`);\n    }\n    if (!Array.isArray(params.range)) {\n        throw new Error('range parameter must be an array');\n    }\n    let scaleFactory = null;\n    const range = params.range;\n    // @todo: do it using scale decorator\n    if (params.type === LINEAR && params.interpolator) {\n        scaleFactory = scaleMap[params.interpolator];\n        if (params.interpolator === ScaleType.POW) {\n            return scaleFactory().range(range).exponent(params.exponent);\n        } else if (params.interpolator === ScaleType.LOG) {\n            return scaleFactory().range(range).base([params.base]);\n        }\n    } else {\n        scaleFactory = scaleMap[params.type];\n    }\n\n    if (params.type === QUANTIZE) {\n        scaleFactory().nice();\n    }\n    return scaleFactory().range(range);\n}\n\n/**\n * This method is used to update the range of a scale\n * so that the core module can remain agnostic of the d3\n * scale api.\n *\n * @export\n * @param {Scale} scale Instance of d3 Scale.\n * @param {Array} range new range of the scale.\n * @return {Scale} Updated scale.\n */\nexport function updateScaleRange (scale, range) {\n    return scale.range(range);\n}\n\n/**\n *\n *\n * @export\n * @param {*} domainType\n * @param {*} rangeType\n * @param {*} steps\n *\n */\nexport function getScaleType (domainType, rangeType, steps) {\n    if (rangeType === CONTINOUS) {\n        return LINEAR;\n    }\n    if (domainType === CONTINOUS) {\n        if (steps instanceof Array) {\n            return THRESHOLD;\n        }\n        return QUANTIZE;\n    }\n    return ORDINAL;\n}\n","import { getUniqueId } from 'muze-utils';\nimport { CLASSPREFIX } from '../enums/constants';\n\n/**\n *\n *\n */\nexport const defaultConfig = {\n    id: getUniqueId(),\n    adjustRange: false,\n    axisName: {\n        defClassName: 'axis-name'\n    },\n    axisNamePadding: 12,\n    base: 10,\n    classPrefix: CLASSPREFIX,\n    className: `${CLASSPREFIX}-axis`,\n    exponent: 1,\n    interpolator: 'linear',\n    fixedBaseline: true,\n    labels: {\n        rotation: null,\n        smartTicks: null\n    },\n    orientation: 'left',\n    numberFormat: val => val,\n    padding: 0.3,\n    nice: true,\n    numberOfTicks: null,\n    rotate: false,\n    show: true,\n    showAxisName: true,\n    showInnerTicks: true,\n    showOuterTicks: true,\n    style: {},\n    type: 'linear',\n    tickFormat: null,\n    tickValues: null,\n    xOffset: 0,\n    yOffset: 0\n};\n\n","/**\n * This file exports functionality that is used to render axis.\n */\nimport { selectElement, makeElement, angleToRadian } from 'muze-utils';\nimport * as AxisOrientation from './enums/axis-orientation';\nimport { LINEAR, HIDDEN, BOTTOM, TOP } from './enums/constants';\n\n/**\n *\n *\n * @param {*} instance\n * @param {*} container\n * @param {*} labelManager\n * @param {*} config\n */\nconst rotateAxis = (instance, tickText, labelManager) => {\n    let rotation;\n    const axis = instance.axis();\n    const config = instance.config();\n    const renderConfig = instance.renderConfig();\n    const smartTicks = instance.smartTicks();\n    const scale = axis.scale();\n    const labelFunc = scale.ticks || scale.quantile || scale.domain;\n    const ticks = labelFunc();\n    const {\n        orientation,\n        fixedBaseline,\n        type\n    } = config;\n    const {\n        labels\n    } = renderConfig;\n\n    rotation = labels.rotation;\n\n    const tickSize = instance.getTickSize();\n    tickText.each(function (d, index) {\n        let yShift;\n        let xShift;\n        let datum = smartTicks[index] ? smartTicks[index].text : d;\n\n        datum = datum.toString();\n\n        const tickLabelDim = labelManager.getOriSize(datum);\n\n        const width = tickLabelDim.width * 0.5;\n        const height = tickLabelDim.height * 0.5;\n\n        if (rotation < 0) {\n            rotation = 360 + rotation;\n        }\n\n        const quadrant = 4 - Math.floor(rotation / 90);\n        const rotationNormalizer = ((quadrant % 2 === 0) ? rotation : 180 * Math.ceil(rotation / 180) - rotation) % 180;\n\n        yShift = Math.sqrt(height ** 2 + width ** 2) * Math.sin(angleToRadian(rotationNormalizer));\n\n        if ((quadrant === 3 || quadrant === 2) && !(rotationNormalizer > 67.5 && rotationNormalizer <= 90)) {\n            yShift += height * 2;\n        }\n        xShift = width;\n\n        if (rotation === 90) {\n            xShift = height;\n        } else if (rotation === 270) {\n            xShift = -height;\n        } else {\n            xShift = 0;\n        }\n\n        if (orientation === AxisOrientation.TOP) {\n            xShift = (fixedBaseline && ticks[0] === d && type === LINEAR) ? xShift + xShift / 2 : xShift;\n            selectElement(this)\n                            .attr('transform', `translate(${-xShift + tickSize}\n                                ${-yShift - tickSize}) rotate(${rotation})`);\n        } else {\n            xShift = (fixedBaseline && ticks[0] === d && type === LINEAR) ? xShift - xShift / 2 : xShift;\n\n            selectElement(this)\n                            .attr('transform', `translate(${xShift - tickSize}\n                                ${yShift + tickSize}) rotate(${rotation})`);\n        }\n        selectElement(this).transition()\n                        .duration(1000).text(datum);\n    });\n    return tickText;\n};\n\n/**\n *\n *\n * @param {*} tickText\n * @param {*} axisInstance\n */\nconst changeTickOrientation = (selectContainer, axisInstance, tickSize) => {\n    const {\n        _smartTicks\n    } = axisInstance;\n    const config = axisInstance.config();\n    const renderConfig = axisInstance.renderConfig();\n    const labelManager = axisInstance.dependencies().labelManager;\n    const {\n        orientation,\n        classPrefix\n    } = config;\n    const {\n        labels\n    } = renderConfig;\n    const {\n        rotation,\n        smartTicks: isSmartTicks\n    } = labels;\n\n    const tickText = selectContainer.selectAll('.tick text');\n    tickText.selectAll('tspan').remove();\n\n    // rotate labels if not enough space is available\n    if (rotation && (orientation === TOP || orientation === BOTTOM)) {\n        rotateAxis(axisInstance, tickText, labelManager);\n    } else if (!rotation && !isSmartTicks) {\n        tickText.attr('transform', '');\n    } else {\n        tickText.text('');\n        if (orientation === TOP || orientation === BOTTOM) {\n            tickText.attr('y', 0)\n                            .attr('x', 0)\n                            .attr('transform', '')\n                            .text('');\n            const tspan = makeElement(tickText, 'tspan', (d, i) => {\n                if (_smartTicks[i]) {\n                    return _smartTicks[i].lines;\n                } return [];\n            }, `${classPrefix}-smart-text`);\n\n            tspan.attr('dy', '0')\n                            .style('opacity', '0')\n\n                            .transition()\n                            .duration(1000)\n                            .on('end', axisInstance.registerAnimationDoneHook())\n                            .attr('dy', (d, i) => {\n                                if (orientation === BOTTOM || i !== 0) {\n                                    return _smartTicks[0].oriTextHeight;\n                                }\n                                return -_smartTicks[0].oriTextHeight * (_smartTicks[0].lines.length - 1) - tickSize;\n                            })\n                            .style('opacity', 1)\n                            .text(e => e)\n                            .attr('x', 0);\n        } else {\n            const tspan = makeElement(tickText, 'tspan', (d, i) => _smartTicks[i].lines, `${classPrefix}-smart-text`);\n            tspan.text(e => e);\n        }\n    }\n\n    return tickText;\n};\n\nconst setFixedBaseline = (axisInstance) => {\n    const {\n        fixedBaseline\n    } = axisInstance.config();\n    const {\n        showInnerTicks\n    } = axisInstance.renderConfig();\n    const domain = axisInstance.domain();\n    if (fixedBaseline && domain.length && showInnerTicks) {\n        axisInstance.setFixedBaseline();\n    }\n};\n\n/**\n *\n *\n * @param {*} textNode\n * @param {*} orientation\n * @param {*} measures\n */\nconst setAxisNamePos = (textNode, orientation, measures) => {\n    const {\n        axisNameHeight,\n        yOffset,\n        labelOffset,\n        availableSpace\n    } = measures;\n\n    switch (orientation) {\n    case AxisOrientation.LEFT:\n        textNode.attr('transform',\n            `translate(${-(availableSpace.width - axisNameHeight)},${yOffset + labelOffset})rotate(-90)`);\n        break;\n    case AxisOrientation.RIGHT:\n        textNode.attr('transform',\n             `translate(${(availableSpace.width - axisNameHeight)},${yOffset + labelOffset})rotate(90)`);\n        break;\n    case AxisOrientation.TOP:\n        textNode.attr('transform',\n             `translate(${availableSpace.width / 2},${-availableSpace.height + axisNameHeight})`);\n        break;\n    case AxisOrientation.BOTTOM:\n        textNode.attr('transform',\n             `translate(${availableSpace.width / 2},${availableSpace.height - axisNameHeight / 2})`);\n        break;\n    default:\n    }\n    return textNode;\n};\n\n/**\n * This method is used to render the axis inside an\n * svg container.\n *\n * @export\n * @param {Object} axisInstance the nput object required to render axis\n * @param {string} axisInstance.orientation the orientation of axis\n * @param {Object} axisInstance.scale instance of d3 scale\n * @param {SVGElement} axisInstance.container the container in which to render\n */\nexport function renderAxis (axisInstance) {\n    const config = axisInstance.config();\n    const renderConfig = axisInstance.renderConfig();\n    const labelManager = axisInstance.dependencies().labelManager;\n    const mount = axisInstance.mount();\n    const range = axisInstance.range();\n    const axis = axisInstance.axis();\n    const scale = axisInstance.scale();\n    const {\n        _axisNameStyle: axisNameStyle,\n        _tickLabelStyle: tickLabelStyle,\n        _tickFormatter: axisTickFormatter\n     } = axisInstance;\n    const {\n        orientation,\n        name,\n\n        axisNamePadding,\n        className,\n        id,\n        classPrefix\n     } = config;\n    const {\n        show,\n        xOffset,\n        yOffset,\n        showAxisName,\n        labels,\n        smartAxisName\n    } = renderConfig;\n\n    if (!show) {\n        return;\n    }\n\n    const tickSize = axisInstance.getTickSize();\n\n    const selectContainer = makeElement(selectElement(mount), 'g', [axisInstance], `${className}`, {},\n        key => key.config().id);\n\n    // Set style for tick labels\n    labelManager.setStyle(tickLabelStyle);\n\n    const labelFunc = scale.ticks || scale.quantile || scale.domain;\n\n    const ticks = axis.tickValues() || labelFunc();\n\n    axis.tickFormat(axisTickFormatter(ticks));\n\n    // Get range(length of range)\n    const availableSpace = Math.abs(range[0] - range[1]);\n\n    // Get width and height taken by axis labels\n    const labelProps = axisInstance.axisComponentDimensions().largestTickDimensions;\n\n    // Draw axis ticks\n    selectContainer.attr('transform', `translate(${xOffset},${yOffset})`);\n    setFixedBaseline(axisInstance);\n    if (labels.smartTicks === false || tickSize === 0) {\n        selectContainer.transition()\n                        .duration(1000)\n                        .on('end', axisInstance.registerAnimationDoneHook())\n                        .call(axis);\n    } else {\n        selectContainer.call(axis);\n    }\n    selectContainer.selectAll('.tick').classed(`${classPrefix}-ticks`, true);\n    selectContainer.selectAll('.tick line').classed(`${classPrefix}-tick-lines`, true);\n\n    // Set classes for ticks\n    const tickText = selectContainer.selectAll('.tick text');\n    tickText.classed(`${classPrefix}-ticks`, true)\n                    .classed(`${classPrefix}-ticks-${id}`, true);\n\n    changeTickOrientation(selectContainer, axisInstance, tickSize);\n\n    // Create axis name\n    const textNode = makeElement(selectContainer, 'text', [smartAxisName], `${classPrefix}-axis-name`)\n                    .attr('text-anchor', 'middle')\n                    .classed(`${classPrefix}-axis-name-${id}`, true)\n                    .text(d => d.text);\n\n    // Hide axis name if show is off\n    textNode.classed(HIDDEN, !showAxisName);\n\n    // render labels based on orientation of axis\n    const labelOffset = availableSpace / 2;\n\n    // Set style for axis name\n    labelManager.setStyle(axisNameStyle);\n    const axisNameSpace = labelManager.getOriSize(name);\n    const measures = {\n        labelProps,\n        tickSize,\n        axisNamePadding,\n        axisNameHeight: axisNameSpace.height,\n        axisNameWidth: axisNameSpace.width,\n        yOffset,\n        xOffset,\n        labelOffset,\n        availableSpace: axisInstance.availableSpace()\n    };\n    // Set position for axis name\n    setAxisNamePos(textNode, orientation, measures);\n}\n","import {\n    timeMillisecond,\n    timeSecond,\n    timeMinute,\n    timeHour,\n    timeDay,\n    timeWeek,\n    timeMonth,\n    timeYear\n} from 'muze-utils';\n\nconst durationSecond = 1000;\nconst durationMinute = durationSecond * 60;\nconst durationHour = durationMinute * 60;\nconst durationDay = durationHour * 24;\nconst durationWeek = durationDay * 7;\nconst durationMonth = durationDay * 30;\nconst durationYear = durationDay * 365;\n\n// Longest Word for each level based on which tick skipping is decided\nconst longestWord = {\n    month: 'September',\n    quarter: 'October',\n    halfYearly: 'July',\n    year: 9999,\n    day: 'September',\n    hour: '24 AM',\n    mintues: '60:60',\n    seconds: ':60',\n    week: 'Wed 31'\n};\n\n// These are the various levels of ticks that can be shown by Muze.\n// Each level is described as how frequently the ticks appear\n// The format is as follows:\n// [Frequency, Milliseconds, Name of Seconds, Tick Generator, Level Type]\nconst tickIntervals = [\n    [1, 1, 'milliseconds', timeMillisecond.every(1), 'seconds'],\n    [1, durationSecond, 'seconds', timeSecond.every(1), 'seconds'],\n    [5, 5 * durationSecond, 'five seconds', timeSecond.every(5), 'seconds'],\n    [10, 10 * durationSecond, 'ten seconds', timeSecond.every(10), 'seconds'],\n    [15, 15 * durationSecond, 'fifteen seconds', timeSecond.every(15), 'seconds'],\n    [30, 30 * durationSecond, 'thirty seconds', timeSecond.every(30), 'seconds'],\n    [1, durationMinute, 'minute', timeMinute.every(1), 'minutes'],\n    [5, 5 * durationMinute, 'five minutes', timeMinute.every(5), 'minutes'],\n    [10, 10 * durationMinute, 'ten minutes', timeMinute.every(10), 'minutes'],\n    [15, 15 * durationMinute, 'fifteen minutes', timeMinute.every(15), 'minutes'],\n    [30, 30 * durationMinute, 'thirty minutes', timeMinute.every(30), 'minutes'],\n    [1, durationHour, 'hour', timeHour.every(1), 'hour'],\n    [3, 3 * durationHour, 'three hours', timeHour.every(3), 'hour'],\n    [6, 6 * durationHour, 'six hours', timeHour.every(6), 'hour'],\n    [12, 12 * durationHour, 'twelve hours', timeHour.every(12), 'hour'],\n    [1, durationDay, 'daily', timeDay.every(1), 'day'],\n    [1, durationWeek, 'weekly', timeWeek.every(1), 'week'],\n    [1, durationMonth, 'monthly', timeMonth.every(1), 'week'],\n    [3, 3 * durationMonth, 'quaterly', timeMonth.every(3), 'quarter'],\n    [6, 6 * durationMonth, 'half yearly', timeMonth.every(6), 'halfYearly'],\n    [1, durationYear, 'yearly', timeYear.every(1), 'year'],\n    [2, 2 * durationYear, '2 year', timeYear.every(2), 'year'],\n    [3, 3 * durationYear, '3 year', timeYear.every(3), 'year'],\n    [5, 5 * durationYear, '5 year', timeYear.every(5), 'year'],\n    [10, 10 * durationYear, 'decade', timeYear.every(10), 'year'],\n    [100, 100 * durationYear, 'century', timeYear.every(100), 'year'],\n    [1000, 1000 * durationYear, 'millenium', timeYear.every(1000), 'year']\n];\n/**\n * Get the actual tick interval based on the available width, number of ticks\n * and the distance between two ticks\n *\n * @param {Object} context Axis Context\n * @param {number} noOfTicks Number of Ticks based on which interval is calculated\n * @return {number} The width for the tick interval\n */\nconst getActualTickInterval = (context, noOfTicks) => {\n    const minTickDistance = context._minTickDistance;\n    const minWidthBetweenTicks = minTickDistance.width;\n\n    const { width } = context.availableSpace();\n    const actualTickInterval = Math.floor(((width - (noOfTicks - 1) * (minWidthBetweenTicks)) / noOfTicks));\n\n    return actualTickInterval;\n};\n\n/**\n * Get the tick interval based on the current level of ticks. Levels are decided on\n * the number of ticks that are possible to show\n *\n * @param {Object} context Axis Context\n * @param {string} type Type of level (yearly, monthly, etc)\n * @return {number} The width for the tick interval\n */\nconst getTickIntervalBasedOnCurrentLevel = (context, type) => {\n    const labelManager = context._dependencies.labelManager;\n    const longestWordType = longestWord[type];\n    const measure = labelManager.getOriSize(longestWordType);\n\n    return measure.width;\n};\n\nconst getTickIntervalFnBasedOnNumberOfTicks = (interval, count, context) => {\n    let possibleTickLevelIndex = tickIntervals.length - 1;\n    let maxPossibleTicks = 1;\n    let tickIntervalLevelInfo = null;\n\n    // Decide possible tick level based on min tick width (with ellipses)\n    for (let i = tickIntervals.length - 1; i >= 0; i--) {\n        const tickIntervalInfo = tickIntervals[i];\n        const numOfPossibleTicks = Math.floor(interval / tickIntervalInfo[1]);\n        if (numOfPossibleTicks <= count) {\n            possibleTickLevelIndex = i;\n            maxPossibleTicks = numOfPossibleTicks;\n        }\n    }\n\n    tickIntervalLevelInfo = tickIntervals[possibleTickLevelIndex];\n\n    // Get actual tick interval based on the level of ticks generated\n    const actualTickInterval = getActualTickInterval(context, maxPossibleTicks);\n\n    // Maximum Possible tick Interval for a particular level based on a pre decided set of values\n    const maxTickInterval = getTickIntervalBasedOnCurrentLevel(context, tickIntervalLevelInfo[4]);\n\n    // Display the next level involving tick skipping if current level does not meet the requirement\n    // for displaying max tick\n    if (actualTickInterval < maxTickInterval && possibleTickLevelIndex < tickIntervals.length - 1) {\n        tickIntervalLevelInfo = tickIntervals[possibleTickLevelIndex + 1];\n    }\n    return tickIntervalLevelInfo[3];\n};\n\nexport const getSkippedTicks = (context, maxPossibleTicks) => {\n    let actualNumberOfTicks = maxPossibleTicks;\n    const domain = context.domain();\n    const minDiff = context._minDiff;\n    // Get the interval in ms from the domain\n    const millisecondInterval = domain[1] - domain[0];\n    // Get number of ticks based on the minimum difference in the data\n    const numOfTicksAccordingToMinDiff = Math.floor(millisecondInterval / minDiff);\n\n    // Show ticks according to min diff if possible\n    if (maxPossibleTicks >= numOfTicksAccordingToMinDiff) {\n        actualNumberOfTicks = numOfTicksAccordingToMinDiff;\n    }\n\n    return getTickIntervalFnBasedOnNumberOfTicks(millisecondInterval, actualNumberOfTicks, context);\n};\n","import { BOTTOM, TOP, LEFT, RIGHT } from '../enums/axis-orientation';\nimport { getSkippedTicks } from './skip-ticks';\nimport { TIME, LINEAR, BAND } from '../enums/scale-type';\n\nexport const applyTickSkipping = (context) => {\n    const minTickDistance = context._minTickDistance;\n    const minTickSpace = context._minTickSpace;\n    const minWidthBetweenTicks = minTickDistance.width;\n    const minTickWidth = minTickSpace.width;\n\n    const { width } = context.availableSpace();\n\n    const maxTicks = Math.floor((width + minWidthBetweenTicks) / (minTickWidth + minWidthBetweenTicks));\n\n    const ticks = context.scale().ticks(getSkippedTicks(context, maxTicks));\n\n    context.renderConfig({\n        tickValues: ticks\n    });\n};\n\nconst adjustHorizontalRange = (range, diff) => {\n    range[0] += diff;\n    range[1] -= diff;\n    return range;\n};\n\nconst adjustVerticalRange = (range, diff) => {\n    range[0] -= diff;\n    range[1] += diff;\n    return range;\n};\n\nconst rangeAdjustmentMap = {\n    [TOP]: adjustHorizontalRange,\n    [BOTTOM]: adjustHorizontalRange,\n    [LEFT]: adjustVerticalRange,\n    [RIGHT]: adjustVerticalRange\n};\n\nexport const setAxisRange = (context, type, rangeBounds, offset) => {\n    context.range(rangeBounds);\n    offset && context.renderConfig({ [`${type}Offset`]: offset });\n};\n\nconst getAxisOffset = (timeDiff, range, domain) => {\n    const avWidth = Math.abs(range[1] - range[0]);\n    const pvr = avWidth / (domain[1] - domain[0]);\n    const width = (pvr * timeDiff);\n    const bars = avWidth / width;\n    const barWidth = avWidth / (bars + 1);\n    const diff = avWidth - barWidth * bars;\n\n    return diff / 2;\n};\n\nexport const getAdjustedRange = (minDiff, range, domain, config) => {\n    const {\n        orientation,\n        adjustRange\n    } = config;\n    const diff = getAxisOffset(minDiff, range, domain);\n\n    if (adjustRange) {\n        return rangeAdjustmentMap[orientation](range, diff);\n    }\n    return range;\n};\n\nexport const spaceSetter = (context, spaceConfig) => {\n    let tickInterval;\n    let heightForTicks;\n    const config = context.config();\n    const {\n        width: availWidth,\n        height: availHeight,\n        padding\n    } = context.availableSpace();\n    const {\n        top,\n        left,\n        bottom,\n        right\n    } = padding;\n    const {\n        isOffset\n    } = spaceConfig;\n    const {\n        showAxisName,\n        labels\n    } = context.renderConfig();\n    const {\n        rotation\n    } = labels;\n    const {\n        fixedBaseline,\n        axisNamePadding,\n        tickValues\n    } = config;\n    const {\n        tickDimensions,\n        allTickDimensions,\n        axisNameDimensions,\n        tickSize\n    } = context.getAxisDimensions();\n    const {\n        height: tickDimHeight,\n        width: tickDimWidth\n    } = tickDimensions;\n\n    const namePadding = showAxisName ? axisNamePadding : 0;\n    const labelConfig = { smartTicks: true, rotation: labels.rotation };\n    const minTickDistance = context._minTickDistance;\n    const minTickSpace = context._minTickSpace;\n    const minDiff = context._minDiff;\n    const domain = context.domain();\n    const axisNameHeight = axisNameDimensions.height;\n    const minWidthBetweenTicks = minTickDistance.width;\n    const minTickWidth = minTickSpace.width;\n    const minTickHeight = minTickSpace.height;\n\n    return {\n        [TIME]: {\n            x: () => {\n                !tickValues && context.applyTickSkipping();\n                const noOfTicks = context.getTickValues().length;\n\n                // Get the Tick Interval\n                tickInterval = ((availWidth - (noOfTicks - 1) * (minWidthBetweenTicks)) / noOfTicks);\n\n                // Get height for ticks\n                heightForTicks = availHeight - axisNameHeight - tickSize - namePadding;\n\n                if (tickInterval < minTickWidth && rotation !== 0) {\n                    // set smart ticks and rotation config\n                    labelConfig.rotation = labels.rotation === null ? -90 : rotation;\n                    // Remove ticks if not enough height\n                    if (tickInterval < minTickHeight) {\n                        heightForTicks = availHeight;\n                        tickInterval = minTickHeight;\n                        context.renderConfig({ showInnerTicks: false, showOuterTicks: false });\n                    }\n                }\n                if (availHeight < axisNameHeight) {\n                    context.renderConfig({ show: false });\n                }\n\n                const tickShifter = Math.min(tickInterval, tickDimWidth);\n                // set range for axis\n                setAxisRange(context, 'y', getAdjustedRange(minDiff, [tickShifter / 2,\n                    availWidth - left - right - tickShifter / 2], domain, config),\n                        isOffset ? availHeight : null);\n\n                context.maxTickSpaces({\n                    width: tickInterval,\n                    height: heightForTicks,\n                    noWrap: rotation !== null\n                });\n\n                return labelConfig;\n            },\n            y: () => {\n                let widthForTicks = availWidth;\n                const tickShifter = tickDimHeight / 2;\n\n                setAxisRange(context, 'x', getAdjustedRange(minDiff,\n                    [availHeight - top - bottom - tickShifter, tickShifter], domain, config),\n                        isOffset ? availWidth : null);\n\n                if ((availWidth - axisNameHeight - namePadding) <= minWidthBetweenTicks) {\n                    widthForTicks = 0;\n                    context.renderConfig({ showInnerTicks: false, showOuterTicks: false });\n                }\n\n                context.maxTickSpaces({\n                    width: widthForTicks,\n                    height: availHeight,\n                    noWrap: true\n                });\n                if (availWidth < axisNameHeight) {\n                    context.renderConfig({ show: false });\n                }\n                return labelConfig;\n            }\n        },\n        [BAND]: {\n            x: () => {\n                setAxisRange(context, 'y', [0, availWidth - left - right], isOffset ? availHeight : null);\n                const range = context.range();\n\n                // Get Tick Interval\n                tickInterval = ((range[1] - range[0]) / (tickValues || domain).length) - minWidthBetweenTicks * 2;\n\n                // Get height available for ticks\n                heightForTicks = availHeight - axisNameHeight - tickSize - namePadding;\n\n                if (tickInterval < minTickWidth && rotation !== 0) {\n                    // set smart ticks and rotation config\n                    labelConfig.rotation = rotation === null ? -90 : rotation;\n                    labelConfig.smartTicks = false;\n\n                    // Ticks with overlapping height\n                    if (tickInterval < minTickHeight) {\n                        heightForTicks = 0;\n                        tickInterval = 0;\n                        context.renderConfig({ showInnerTicks: false, showOuterTicks: false });\n                        context.range([minTickHeight / 2, availWidth - minTickHeight / 2]);\n                    }\n                } else if (tickValues) {\n                    const interval = (availWidth / domain.length) - minWidthBetweenTicks;\n                    if (interval < minTickWidth) {\n                        context.range([minTickHeight / 2, availWidth - minTickHeight / 2]);\n                    }\n                }\n                if (availHeight < axisNameHeight) {\n                    context.renderConfig({ show: false, showInnerTicks: false, showOuterTicks: false });\n                }\n\n                context.maxTickSpaces({\n                    width: tickInterval,\n                    height: heightForTicks,\n                    noWrap: rotation !== null\n                });\n                return labelConfig;\n            },\n            y: () => {\n                setAxisRange(context, 'x', [availHeight - bottom, top], isOffset ? availWidth : null);\n\n                let widthForTicks = availWidth - axisNameHeight - tickSize - namePadding;\n                if (widthForTicks <= minWidthBetweenTicks) {\n                    widthForTicks = 0;\n                    context.renderConfig({ showInnerTicks: false, showOuterTicks: false });\n                }\n\n                context.maxTickSpaces({\n                    width: widthForTicks,\n                    height: availHeight,\n                    noWrap: true\n                });\n                if (availWidth < axisNameHeight) {\n                    context.renderConfig({ show: false });\n                }\n                return labelConfig;\n            }\n        },\n        [LINEAR]: {\n            x: () => {\n                labelConfig.smartTicks = false;\n                const tickShifter = tickDimWidth / 2;\n\n                const baseline = fixedBaseline ? 0 : tickShifter;\n\n                setAxisRange(context, 'y', [baseline + left, availWidth - right - tickShifter],\n                    isOffset ? availHeight : null);\n\n                const range = context.range();\n\n                // Get Tick widths and available space\n                const totalTickWidth = allTickDimensions.length * (tickDimWidth + minWidthBetweenTicks);\n                const availableWidth = range[1] - range[0];\n\n                 // Rotate labels if not enough width\n                if (availableWidth < totalTickWidth && labels.rotation !== null) {\n                    if (availHeight - tickDimWidth - namePadding - tickSize > axisNameHeight) {\n                        labelConfig.rotation = null;\n                        context.renderConfig({\n                            showInnerTicks: true,\n                            showAxisName: true\n                        });\n                    } else {\n                        labelConfig.rotation = -90;\n                        context.renderConfig({\n                            showInnerTicks: true,\n                            showAxisName: false\n\n                        });\n                    }\n                }\n\n                if (availHeight < axisNameHeight) {\n                    context.renderConfig({ show: false });\n                }\n                return labelConfig;\n            },\n            y: () => {\n                labelConfig.smartTicks = false;\n                const tickShifter = tickDimensions.height / 2;\n                const baseline = fixedBaseline ? 1 : tickShifter;\n\n                setAxisRange(context, 'x', [availHeight - bottom - baseline, tickShifter + top],\n                    isOffset ? availWidth : null);\n\n                // Remove display of ticks if no space is left\n                if (availWidth < tickDimWidth + axisNameHeight + namePadding) {\n                    context.renderConfig({ showInnerTicks: false });\n                    if (availWidth < axisNameHeight) {\n                        context.renderConfig({ show: false });\n                    }\n                }\n                return labelConfig;\n            }\n        }\n    };\n};\n","import { defaultValue } from 'muze-utils';\nimport { TOP, LEFT, BOTTOM } from '../enums/axis-orientation';\nimport { MIN_NO_OF_TICKS, DEFAULT_NO_OF_TICKS } from '../enums/constants';\nimport { setAxisRange, getAdjustedRange } from './space-setter';\n\nexport const getRotatedSpaces = (rotation = 0, width, height) => {\n    let rotatedHeight = height;\n    let rotatedWidth = width;\n    if (rotation) {\n        const angle = ((rotation || 0) * Math.PI) / 180;\n        rotatedWidth = Math.abs(height * Math.sin(angle)) + Math.abs(width * Math.cos(angle));\n        rotatedHeight = Math.abs(width * Math.sin(angle)) + Math.abs(height * Math.cos(angle));\n    }\n    return { width: rotatedWidth, height: rotatedHeight };\n};\n\nexport const setOffset = (context) => {\n    let x = 0;\n    let y = 0;\n    const logicalSpace = context.logicalSpace();\n    const config = context.config();\n    const {\n        orientation,\n        xOffset,\n        yOffset\n    } = config;\n    if (orientation === LEFT) {\n        x = xOffset === undefined ? logicalSpace.width : xOffset;\n    }\n    if (orientation === TOP) {\n        y = yOffset === undefined ? logicalSpace.height : yOffset;\n    }\n    context.renderConfig({ xOffset: x, yOffset: y });\n};\n\nexport const getNumberOfTicks = (availableSpace, labelDim, axis, axisInstance) => {\n    let numberOfValues = 0;\n    let tickValues = [];\n    let { numberOfTicks } = axisInstance.config();\n    const ticks = axis.scale().ticks();\n    const tickLength = ticks.length;\n    const minTickDistance = axisInstance._minTickDistance.width;\n\n    numberOfValues = tickLength;\n\n    if (tickLength * (labelDim + minTickDistance) > availableSpace) {\n        numberOfValues = Math.floor(availableSpace / (labelDim + minTickDistance));\n    }\n\n    numberOfTicks = numberOfTicks || numberOfValues;\n    numberOfValues = Math.min(numberOfTicks, Math.max(MIN_NO_OF_TICKS, numberOfValues));\n\n    tickValues = axis.scale().ticks(numberOfValues);\n\n    if (tickValues.length > numberOfValues) {\n        tickValues = tickValues.filter((e, i) => i % 2 === 0);\n    }\n\n    if (numberOfValues === MIN_NO_OF_TICKS) {\n        tickValues = axis.scale().ticks(DEFAULT_NO_OF_TICKS);\n        tickValues = [tickValues[0], tickValues[tickValues.length - 1]];\n    }\n    return tickValues;\n};\n\nexport const getAxisComponentDimensions = (context) => {\n    let largestTick = '';\n    let largestTickDimensions = { width: 0, height: 0 };\n    let smartTick = {};\n    let axisTicks;\n    const allTickDimensions = [];\n    const scale = context.scale();\n    const { tickValues, showAxisName } = context.renderConfig();\n    const { name } = context.config();\n    const { labelManager } = context.dependencies();\n    const labelFunc = scale.ticks || scale.quantile || scale.domain;\n\n    // set the style on the shared label manager instance\n    labelManager.setStyle(context._tickLabelStyle);\n\n    // get the values along the domain\n    axisTicks = tickValues || labelFunc();\n\n    // Get the tick labels\n    axisTicks = axisTicks.map((originalLabel, i) => {\n        const label = context.getFormattedText(originalLabel, i, axisTicks);\n\n    // convert to string for quant values\n        const tickDimensions = labelManager.getOriSize(label);\n\n    // Get spaces for all labels\n        allTickDimensions.push(tickDimensions);\n\n    // Getting largest label\n        if (tickDimensions.width > largestTickDimensions.width) {\n            largestTick = label;\n            smartTick = context.smartTicks() ? context.smartTicks()[i] : {};\n\n            largestTickDimensions = tickDimensions;\n            smartTick = smartTick || tickDimensions;\n        }\n        return label;\n    });\n\n    labelManager.setStyle(context._axisNameStyle);\n    const axisNameDimensions = showAxisName ? labelManager.getOriSize(name) : { width: 0, height: 0 };\n\n    return {\n        axisNameDimensions,\n        largestTick,\n        largestTickDimensions,\n        allTickDimensions,\n        axisTicks,\n        smartTick,\n        tickSize: context.getTickSize()\n    };\n};\n\nexport const computeAxisDimensions = (context) => {\n    let tickDimensions = {};\n    const { labels } = context.renderConfig();\n    const { smartTicks, rotation } = labels;\n    const {\n        largestTickDimensions,\n        axisTicks,\n        smartTick,\n        axisNameDimensions,\n        allTickDimensions,\n        tickSize\n    } = getAxisComponentDimensions(context);\n    const { height: labelHeight, width: labelWidth } = largestTickDimensions;\n\n    // get the domain of axis\n    const domain = context.domain();\n    // const angle = ((rotation || 0) * Math.PI) / 180;\n\n    if (domain.length === 0) {\n        return null;\n    }\n\n    if (smartTicks) {\n        tickDimensions = smartTick;\n    } else {\n        tickDimensions = { width: labelWidth, height: labelHeight };\n    }\n    tickDimensions = getRotatedSpaces(rotation, tickDimensions.width, tickDimensions.height);\n\n    if (tickSize === 0) {\n        tickDimensions = { width: 0, height: 0 };\n    }\n    return {\n        allTickDimensions,\n        tickSize,\n        tickDimensions,\n        axisNameDimensions,\n        largestTickDimensions,\n        axisTicks\n    };\n};\n\n/**\n *\n *\n * @param {*} axisDimensions\n * @param {*} config\n * @param {*} range\n *\n */\nexport const getHorizontalAxisSpace = (context, axisDimensions, range) => {\n    let width;\n    let height;\n    const domain = context.domain();\n    const { tickSize, tickDimensions, axisNameDimensions } = axisDimensions;\n    const { axisNamePadding, tickValues } = context.config();\n    const { showAxisName } = context.renderConfig();\n    const { height: axisDimHeight } = axisNameDimensions;\n    const { height: tickDimHeight, width: tickDimWidth } = tickDimensions;\n\n    width = range && range.length ? range[1] - range[0] : 0;\n\n    height = 0;\n    if (tickValues) {\n        const minTickDiff = context.getMinTickDifference();\n        const [min, max] = [\n            Math.min(...tickValues, ...domain),\n            Math.max(...tickValues, ...domain)\n        ];\n\n        width = ((max - min) / Math.abs(minTickDiff)) * (tickDimWidth + context._minTickDistance.width);\n    }\n    if (!width || width === 0) {\n        height = Math.max(tickDimWidth, tickDimHeight);\n    } else {\n        height = tickDimHeight;\n    }\n\n    height += (showAxisName ? axisDimHeight + axisNamePadding : 0) + tickSize;\n\n    return {\n        width,\n        height\n    };\n};\n\n/**\n *\n *\n * @param {*} axisDimensions\n * @param {*} config\n * @param {*} range\n *\n */\nexport const getVerticalAxisSpace = (context, axisDimensions) => {\n    let height;\n    let width;\n    const domain = context.domain();\n    const { tickSize, tickDimensions, axisNameDimensions } = axisDimensions;\n    const { axisNamePadding, tickValues } = context.config();\n    const { showAxisName } = context.renderConfig();\n    const { height: axisDimHeight } = axisNameDimensions;\n    const { height: tickDimHeight, width: tickDimWidth } = tickDimensions;\n\n    height = 0;\n    width = tickDimWidth;\n    if (tickValues) {\n        const minTickDiff = context.getMinTickDifference();\n        const [min, max] = [\n            Math.min(...tickValues, ...domain),\n            Math.max(...tickValues, ...domain)\n        ];\n\n        height = ((max - min) / Math.abs(minTickDiff)) * tickDimHeight;\n    }\n    width += (showAxisName ? axisDimHeight : 0) + tickSize + axisNamePadding;\n\n    return {\n        height,\n        width\n    };\n};\n\n/**\n * Calculates the logical space of the axis\n * @return {Object} Width and height occupied by the axis.\n */\nexport const calculateBandSpace = (context) => {\n    const range = context.range();\n    const axisDimensions = context.getAxisDimensions();\n\n    const { orientation } = context.config();\n    const { show } = context.renderConfig();\n    const { largestTickDimensions, axisTicks, allTickDimensions } = axisDimensions;\n    const { height: largestDimHeight } = largestTickDimensions;\n    const minTickWidth = context._minTickDistance.width;\n    if (orientation === TOP || orientation === BOTTOM) {\n        let {\n            width,\n            height\n        } = getHorizontalAxisSpace(context, axisDimensions, range);\n\n        if (!width || width === 0) {\n            width = allTickDimensions.reduce((t, n) =>\n                t + Math.min(n.width, n.height) + minTickWidth, 0);\n        }\n        if (show === false) {\n            height = 0;\n            width = 0;\n        }\n\n        return {\n            width,\n            height\n        };\n    }\n\n    let {\n        width,\n        height\n    } = getVerticalAxisSpace(context, axisDimensions, range);\n\n    if (!height || height === 0) {\n        height = axisTicks.length * (largestDimHeight + context._minTickDistance.height);\n    }\n    if (show === false) {\n        width = 0;\n    }\n    return {\n        width,\n        height\n    };\n};\n\n/**\n * Calculates the logical space of the axis\n * @return {Object} Width and height occupied by the axis.\n */\nexport const calculateContinousSpace = (context) => {\n    const range = context.range();\n    const axisDimensions = context.getAxisDimensions();\n    const { orientation } = context.config();\n    const { show, showAxisName } = context.renderConfig();\n    const { axisNameDimensions } = axisDimensions;\n\n    if (show === false) {\n        return {\n            width: 0,\n            height: 0\n        };\n    }\n\n    const { width: axisNameWidth } = axisNameDimensions;\n\n    if (orientation === TOP || orientation === BOTTOM) {\n        const {\n            width,\n            height\n        } = getHorizontalAxisSpace(context, axisDimensions, range);\n        const axisWidth = Math.max(width, axisNameWidth);\n\n        return {\n            width: axisWidth,\n            height\n        };\n    }\n    const {\n        width,\n        height\n    } = getVerticalAxisSpace(context, axisDimensions, range);\n\n    const effHeight = Math.max(height, showAxisName ? axisNameWidth : 0);\n\n    return {\n        width,\n        height: effHeight\n    };\n};\n\n/**\n * Overwrites domain with user defined domain (if present)\n * @param {Object} context reference to current axes\n * @param {Array} domain default domain\n *\n * @return {Array} domain\n */\nexport const getValidDomain = (context, domain) => {\n    const { domain: userDom } = context.config();\n\n    if (userDom) {\n        domain = userDom;\n    }\n\n    return defaultValue(domain, []);\n};\n\nexport const setContinousAxisDomain = (context, domain) => {\n    const { nice } = context.config();\n    const scale = context.scale.bind(context);\n\n    scale().domain(domain);\n    nice && scale().nice();\n    context._domain = scale().domain();\n};\n\n/**\n * Checks if any of the properties have changed between two objects\n * @param {Object} obj first object\n * @param {Object} obj1 second object\n * @param {Array} properties properties to be compared between two objects\n *\n * @return {Boolean} boolean value\n */\nexport const hasAxesConfigChanged = (obj = {}, obj1 = {}, properties) => {\n    if (!Object.keys(obj).length || !Object.keys(obj1).length) {\n        return false;\n    }\n    return properties.some(key => obj[key] !== obj1[key]);\n};\n\nexport const resetTickInterval = (context, domain) => {\n    const {\n        orientation,\n        isOffset\n    } = context.config();\n\n    const minDiff = context._minDiff;\n     // Set available space on interaction\n    if (context.range().length && (orientation === TOP || orientation === BOTTOM)) {\n        context.applyTickSkipping();\n        const {\n            largestTickDimensions\n        } = context.getAxisDimensions();\n\n        const noOfTicks = context.getTickValues().length;\n\n        const { width, height, padding } = context.availableSpace();\n        const {\n            left,\n            right\n        } = padding;\n        // Get the Tick Interval\n        const tickInterval = Math.min(largestTickDimensions.width,\n            ((width - (noOfTicks - 1) * (context._minTickDistance.width)) / noOfTicks));\n\n        context.maxTickSpaces({\n            width: tickInterval\n        });\n\n        const adjustedRange = getAdjustedRange(minDiff, [tickInterval / 2,\n            width - left - right - tickInterval / 2], domain, context.config());\n\n         // set range for axis\n        setAxisRange(context, 'y', adjustedRange, isOffset ? height : null);\n\n        context.setTickConfig();\n    }\n};\n\nexport const getSmartAxisName = (name, width, labelManager) => {\n    const oriSize = labelManager.getOriSize(name);\n\n    labelManager.useEllipsesOnOverflow(true);\n\n    return labelManager.getSmartText(name, width, oriSize.height, true);\n};\n","import { mergeRecursive } from 'muze-utils';\nimport { hasAxesConfigChanged } from './helper';\n\nexport const PROPS = {\n    availableSpace: {},\n    axisDimensions: {},\n    axisComponentDimensions: {},\n    config: {\n        sanitization: (context, value) => {\n            const oldConfig = Object.assign({}, context._config || {});\n            const mockedOldConfig = mergeRecursive({}, oldConfig);\n            value = mergeRecursive(mockedOldConfig, value);\n\n            value.axisNamePadding = Math.max(value.axisNamePadding, 0);\n            const shouldAxesScaleUpdate = hasAxesConfigChanged(\n                value, oldConfig, ['interpolator', 'exponent', 'base', 'orientation']\n            );\n            const tickFormatter = context.sanitizeTickFormatter(value);\n\n            if (shouldAxesScaleUpdate) {\n                context._scale = context.createScale(value);\n                context._axis = context.createAxis(value);\n            }\n\n            context._tickFormatter = ticks => tickFormatter(ticks);\n\n            context.resetRenderConfig(value);\n            return value;\n        }\n    },\n    renderConfig: {\n        sanitization: (context, value) => {\n            const oldConfig = Object.assign({}, context._renderConfig || {});\n            value = mergeRecursive(oldConfig, value);\n            return value;\n        }\n    },\n    logicalSpace: {},\n    mount: {\n    },\n    range: {\n        sanitization: (context, value) => {\n            context.scale().range(value);\n            context.logicalSpace(null);\n            return value;\n        }\n    },\n\n    smartTicks: {},\n    tickSize: {},\n    maxTickSpaces: {\n        sanitization: (context, value) => {\n            const oldConfig = Object.assign({}, context._maxTickSpaces || {});\n            value = mergeRecursive(oldConfig, value);\n            return value;\n        }\n    },\n    valueParser: {\n        defaultValue: val => val\n    }\n};\n","import {\n    mergeRecursive,\n    getSmartComputedStyle,\n    selectElement,\n    generateGetterSetters,\n    getUniqueId\n} from 'muze-utils';\nimport { createScale } from '../scale-creator';\nimport { axisOrientationMap, BOTTOM, TOP } from '../enums/axis-orientation';\nimport { defaultConfig } from './default-config';\nimport { renderAxis } from '../axis-renderer';\nimport { spaceSetter } from './space-setter';\nimport {\n    getAxisComponentDimensions,\n    computeAxisDimensions,\n    calculateContinousSpace,\n    setOffset,\n    getValidDomain,\n    getSmartAxisName\n} from './helper';\nimport { PROPS } from './props';\n\nexport default class SimpleAxis {\n\n    /**\n     * Creates an instance of SimpleAxis.\n     * @memberof SimpleAxis\n     */\n    constructor (config, dependencies) {\n        this._id = getUniqueId();\n\n        this._dependencies = dependencies;\n        this._mount = null;\n        this._range = [];\n        this._domain = [];\n        this._domainLock = false;\n        this._axisDimensions = {};\n        this._smartTicks = [];\n\n        const defCon = mergeRecursive({}, this.constructor.defaultConfig());\n        const simpleConfig = mergeRecursive(defCon, config);\n\n        const bodyElem = selectElement('body');\n        const classPrefix = simpleConfig.classPrefix;\n        this._tickLabelStyle = getSmartComputedStyle(bodyElem, `${classPrefix}-ticks`);\n        this._axisNameStyle = getSmartComputedStyle(bodyElem, `${classPrefix}-axis-name`);\n\n        dependencies.labelManager.setStyle(this._tickLabelStyle);\n        const dist = dependencies.labelManager.getOriSize('w');\n\n        this._minTickDistance = { width: dist.width * 3 / 4, height: dist.height / 2 };\n        this._minTickSpace = dependencies.labelManager.getOriSize('www');\n\n        generateGetterSetters(this, PROPS);\n        this.config(simpleConfig);\n\n        this._scale = this.createScale(this._config);\n        this._axis = this.createAxis(this._config);\n        this._animationDonePromises = [];\n    }\n\n    /**\n     * Returns the default configuration of simple axis\n     *  @return {Object} default configurations\n     */\n    static defaultConfig () {\n        return defaultConfig;\n    }\n\n    /**\n     * Sets a fixed baseline for the first ticks so that they can render effectively within\n     * the given area\n     *\n     * @param {*} tickText\n     * @param {*} config\n     * @param {*} labelManager\n     */\n    setFixedBaseline () {\n        return this;\n    }\n\n    /**\n     *\n     *\n     * @readonly\n     * @memberof SimpleAxis\n     */\n    scale (...params) {\n        if (params.length) {\n            this._scale = params[0];\n            return this;\n        }\n        return this._scale;\n    }\n\n    resetDomain () {\n        this._domain = [];\n        return this;\n    }\n\n    /**\n     *\n     *\n     * @readonly\n     * @memberof SimpleAxis\n     */\n    axis (...params) {\n        if (params.length) {\n            this._axis = params[0];\n            return this;\n        }\n        return this._axis;\n    }\n\n    /**\n     *\n     *\n     * @param {*} d\n     *\n     * @memberof SimpleAxis\n     */\n    domain (...domain) {\n        if (domain.length) {\n            const domainValue = getValidDomain(this, domain[0]);\n            this.scale().domain(domainValue);\n            this._domain = this.scale().domain();\n            this.setAxisComponentDimensions();\n            this.logicalSpace(null);\n            return this;\n        }\n        return this._domain;\n    }\n\n    setAxisComponentDimensions () {\n        this.axisComponentDimensions(getAxisComponentDimensions(this));\n    }\n\n    /**\n     *\n     *\n     *\n     * @memberof SimpleAxis\n     */\n    dependencies () {\n        return this._dependencies;\n    }\n\n    /**\n     *\n     *\n     *\n     * @memberof SimpleAxis\n     */\n    createScale (config) {\n        const {\n            base,\n            padding,\n            interpolator,\n            exponent\n        } = config;\n        const range = this.range();\n        const scale = createScale({\n            padding,\n            interpolator,\n            exponent,\n            base,\n            range,\n            type: this.constructor.type()\n        });\n\n        return scale;\n    }\n\n    sanitizeTickFormatter (value) {\n        const { tickFormat, numberFormat } = value;\n\n        if (tickFormat) {\n            return ticks => (val, i) => tickFormat(numberFormat(val), val, i, ticks);\n        }\n\n        return () => val => numberFormat(val);\n    }\n\n    resetRenderConfig (config) {\n        const {\n            labels,\n            show,\n            showInnerTicks,\n            showOuterTicks,\n            showAxisName,\n            xOffset,\n            yOffset,\n            tickValues,\n            smartAxisName\n        } = config;\n        this.renderConfig({\n            labels,\n            show,\n            showInnerTicks,\n            showOuterTicks,\n            showAxisName,\n            xOffset,\n            yOffset,\n            tickValues,\n            smartAxisName\n        });\n        return this;\n    }\n\n    resetLogicalSpace () {\n        this.logicalSpace(null);\n        this.range([]);\n\n        this.resetRenderConfig(this.config());\n    }\n\n    getFormattedText (text, index, axisTicks) {\n        const formatter = this._tickFormatter;\n\n        return formatter(axisTicks)(text, index);\n    }\n\n    /**\n     *\n     *\n     *\n     * @memberof SimpleAxis\n     */\n    createAxis (config) {\n        const { orientation } = config;\n        const axisClass = axisOrientationMap[orientation];\n\n        if (axisClass) {\n            const axis = axisClass(this.scale());\n            return axis;\n        }\n        return null;\n    }\n\n    setTickValues (tickValues) {\n        const renderConfig = this.renderConfig();\n        this.config({ ...renderConfig, tickValues });\n        this.tickValues = tickValues;\n        this.axis().tickValues(tickValues);\n    }\n\n    /**\n     * This method is used to set the space availiable to render\n     * the SimpleCell.\n     *\n     * @param {number} width The width of SimpleCell.\n     * @param {number} height The height of SimpleCell.\n     * @memberof AxisCell\n     */\n    setAvailableSpace (width = 0, height, padding, isOffset) {\n        let labelConfig = {};\n        const {\n           orientation\n       } = this.config();\n\n        this.availableSpace({ width, height, padding });\n        const type = this.constructor.type();\n\n        if (orientation === TOP || orientation === BOTTOM) {\n            labelConfig = spaceSetter(this, { isOffset })[type].x();\n        } else {\n            labelConfig = spaceSetter(this, { isOffset })[type].y();\n        }\n\n        // Set config\n        this.renderConfig({\n            labels: labelConfig\n        });\n        this.setTickConfig();\n        this.setSmartAxisName();\n        return this;\n    }\n\n    setSmartAxisName () {\n        const { orientation, name } = this.config();\n        const dimType = (orientation === TOP || orientation === BOTTOM) ? 'width' : 'height';\n        const widthDim = this.availableSpace()[dimType];\n        const labelManager = this.dependencies().labelManager;\n        labelManager.setStyle(this._axisNameStyle);\n        this.renderConfig({\n            smartAxisName: getSmartAxisName(name, widthDim, labelManager)\n        });\n        return this;\n    }\n\n    /**\n     *\n     *\n     * @memberof SimpleAxis\n     */\n    setTickConfig () {\n        return this;\n    }\n\n    getScaleValue (domainVal) {\n        if (domainVal === null || domainVal === undefined) {\n            return undefined;\n        }\n        return this.scale()(domainVal);\n    }\n\n    /**\n     *\n     *\n     *\n     * @memberof SimpleAxis\n     */\n    getTickSize () {\n        return this.axis().tickSize();\n    }\n\n    /**\n     * Gets the space occupied by the parts of an axis\n     *\n     * @return {Object} object with details about sizes of the axis.\n     * @memberof SimpleAxis\n     */\n    getAxisDimensions (...params) {\n        this.axisDimensions(computeAxisDimensions(this, ...params));\n        return this.axisDimensions();\n    }\n\n    /**\n     * Gets the space occupied by the axis\n     *\n     * @return {Object} object with details about size of the axis.\n     * @memberof SimpleAxis\n     */\n    getLogicalSpace () {\n        if (!this.logicalSpace()) {\n            this.logicalSpace(calculateContinousSpace(this));\n        }\n        setOffset(this);\n\n        return this.logicalSpace();\n    }\n\n    /**\n     * Returns the value from the domain when given a value from the range.\n     * @param {number} value Value from the range.\n     * @return {number} Value\n     */\n    invert (value) {\n        return this.scale().invert(value);\n    }\n\n    /**\n     * Gets the nearest range value from the given range values.\n     * @param {number} v1 Start range value\n     * @param {number} v2 End range value\n     *\n     * @return {Array} range values\n     */\n    getNearestRange (v1, v2) {\n        return [v1, v2];\n    }\n\n    invertExtent (v1, v2) {\n        return [this.invert(v1), this.invert(v2)];\n    }\n\n    getMinTickDifference () {\n        return this.domain();\n    }\n\n    getFormattedTickValues (tickValues) {\n        return tickValues;\n    }\n\n    /**\n     * This method returns the width in pixels for one\n     * unit along the axis. It is only applicable to band scale\n     * and returns undefined for other scale type.\n     *\n     * @return {number} the width of one band along band scale axis\n     * @memberof SimpleAxis\n     */\n    getUnitWidth () {\n        return 0;\n    }\n\n    /**\n     * This method returns an object that can be used to\n     * reconstruct this instance.\n     *\n     * @return {Object} the serializable props of axis\n     * @memberof SimpleAxis\n     */\n    serialize () {\n        return {\n            name: this.name,\n            type: this.type,\n            range: this.range(),\n            config: this.config()\n        };\n    }\n\n    /**\n     * Returns the id of the axis.\n     * @return {string} Unique identifier of the axis.\n     */\n    get id () {\n        return this._id;\n    }\n\n    /**\n     * This method is used to render the axis inside\n     * the supplied svg container.\n     *\n     * @param {SVGElement} svg the svg element in which to render the path\n     * @memberof SimpleAxis\n     */\n    /* istanbul ignore next */render () {\n        if (this.mount()) {\n            this.setTickConfig();\n            renderAxis(this);\n        }\n        return this;\n    }\n\n    /**\n     *\n     *\n     *\n     * @memberof SimpleAxis\n     */\n    remove () {\n        selectElement(this.mount()).remove();\n        return this;\n    }\n\n    /**\n     *\n     *\n     * @memberof SimpleAxis\n     */\n    unsubscribe () {\n        return this;\n    }\n\n    /**\n     *\n     *\n     *\n     * @memberof SimpleAxis\n     */\n    isReverse () {\n        const range = this.range();\n        return range[0] > range[1];\n    }\n\n    /**\n     *\n     *\n     *\n     * @memberof SimpleAxis\n     */\n    getPixelToValueRatio () {\n        const scale = this.scale();\n        const range = scale.range();\n        const domain = scale.domain();\n\n        return Math.abs(range[1] - range[0]) / (domain[1] - domain[0]);\n    }\n\n     /**\n     * Notifies when all animations/transitions of the axis are completed.\n     *\n     * @public\n     * @return {Promise} Returns a promise to notify the animation completion.\n     */\n    animationDone () {\n        return Promise.all(this._animationDonePromises);\n    }\n\n    registerAnimationDoneHook () {\n        let resolveFn;\n        const promise = new Promise((resolve) => {\n            resolveFn = resolve;\n        });\n        this._animationDonePromises.push(promise);\n\n        return () => {\n            resolveFn();\n        };\n    }\n}\n\n","import { scaleMap } from '../../scale-creator';\n\nexport default class LinearInterpolator {\n\n    createScale (config) {\n        const {\n            range\n        } = config;\n        const scaleFactory = scaleMap.linear;\n        this._scale = scaleFactory().range(range);\n        return this._scale;\n    }\n\n    getScaleValue (domainVal) {\n        return this._scale(domainVal) + 0.5;\n    }\n\n    sanitizeDomain (domain) {\n        if (domain.length && domain[0] === domain[1]) {\n            domain = [0, +domain[0] * 2];\n        }\n        return domain;\n    }\n}\n","import { scaleMap } from '../../scale-creator';\n\nexport default class LogInterpolator {\n\n    createScale (config) {\n        const {\n            range,\n            base\n        } = config;\n        const scaleFactory = scaleMap.log;\n        this._scale = scaleFactory().range(range).base(base);\n        return this._scale;\n    }\n\n    getScaleValue (domainVal) {\n        const scale = this._scale;\n        if (domainVal <= 0) {\n            return scale(scale.domain()[0]);\n        }\n\n        return scale(domainVal) + 0.5;\n    }\n\n    sanitizeDomain (domain) {\n        if (domain[0] <= 0) {\n            domain[0] = Math.max(1, domain[0]);\n        }\n        if (domain[1] <= 0) {\n            domain[1] = Math.max(1, domain[1]);\n        }\n        return domain;\n    }\n}\n","import { scaleMap } from '../../scale-creator';\n\nexport default class PowInterpolator {\n\n    createScale (config) {\n        const {\n            range,\n            exponent\n        } = config;\n        const scaleFactory = scaleMap.pow;\n        this._scale = scaleFactory().range(range).exponent(exponent);\n        return this._scale;\n    }\n\n    getScaleValue (domainVal) {\n        return this._scale(domainVal) + 0.5;\n    }\n\n    sanitizeDomain (domain) {\n        return domain;\n    }\n}\n","import { getSmallestDiff } from 'muze-utils';\nimport SimpleAxis from './simple-axis';\nimport { BOTTOM, TOP, LEFT, RIGHT } from '../enums/axis-orientation';\nimport { LINEAR, LOG, POW } from '../enums/scale-type';\nimport { LogInterpolator, PowInterpolator, LinearInterpolator } from './interpolators';\nimport {\n    getNumberOfTicks,\n    getValidDomain,\n    setContinousAxisDomain\n} from './helper';\n\nexport const interpolatorMap = {\n    [LOG]: LogInterpolator,\n    [POW]: PowInterpolator,\n    [LINEAR]: LinearInterpolator\n};\n\nexport default class ContinousAxis extends SimpleAxis {\n    constructor (config, dependencies) {\n        config.tickFormat = config.tickFormat || (val => val);\n        super(config, dependencies);\n    }\n    /**\n     *\n     *\n     *\n     * @memberof SimpleAxis\n     */\n    createScale (config) {\n        const {\n            base,\n            padding,\n            interpolator,\n            exponent\n        } = config;\n        const range = this.range();\n        const InterpolatorCls = interpolatorMap[interpolator];\n\n        this._interpolator = new InterpolatorCls();\n        let scale = this._interpolator.createScale({\n            padding,\n            exponent,\n            base,\n            range\n        });\n\n        scale = scale.nice();\n        return scale;\n    }\n\n    /**\n     *\n     *\n     * @static\n     *\n     * @memberof ContinousAxis\n     */\n    static type () {\n        return LINEAR;\n    }\n\n    getScaleValue (domainVal) {\n        if (domainVal === null || domainVal === undefined) {\n            return undefined;\n        }\n        return this._interpolator.getScaleValue(domainVal);\n    }\n /**\n     *\n     *\n     *\n     * @memberof SimpleAxis\n     */\n    getTickSize () {\n        const {\n            showInnerTicks,\n            showOuterTicks\n        } = this.renderConfig();\n        const axis = this.axis();\n        axis.tickSizeInner(showInnerTicks === false ? 0 : 6);\n        axis.tickSizeOuter(showOuterTicks === false ? 0 : 6);\n\n        return axis.tickSize();\n    }\n\n    /**\n     *\n     *\n     * @param {*} d\n     *\n     * @memberof SimpleAxis\n     */\n    domain (...domain) {\n        if (domain.length) {\n            const domainVal = this._interpolator.sanitizeDomain(getValidDomain(this, domain[0]));\n            setContinousAxisDomain(this, domainVal);\n            this.setAxisComponentDimensions();\n            this.logicalSpace(null);\n            return this;\n        }\n        return this._domain;\n    }\n\n    /**\n     * This method is used to set the space availiable to render\n     * the SimpleCell.\n     *\n     * @param {number} width The width of SimpleCell.\n     * @param {number} height The height of SimpleCell.\n     * @memberof AxisCell\n     */\n    setAvailableSpace (...params) {\n        super.setAvailableSpace(...params);\n        this.getTickSize();\n        return this;\n    }\n\n    /**\n     *\n     *\n     * @param {*} tickValues\n     *\n     * @memberof SimpleAxis\n     */\n    setTickConfig () {\n        const {\n            tickValues,\n            showInnerTicks\n        } = this.renderConfig();\n        const axis = this.axis();\n\n        if (!showInnerTicks) {\n            axis.tickValues([]);\n            return this;\n        }\n\n        if (tickValues) {\n            tickValues instanceof Array && this.axis().tickValues(tickValues);\n        }\n        const newTickValues = this.getTickValues();\n\n        axis.tickValues(newTickValues);\n        const smartLabel = this.dependencies().labelManager;\n        smartLabel.setStyle(this._tickLabelStyle);\n        const formatter = this._tickFormatter;\n        const smartTicks = newTickValues.map((val) => {\n            const text = formatter(val);\n            const tickSpace = smartLabel.getOriSize(text);\n\n            tickSpace.text = text;\n            return tickSpace;\n        });\n\n        this.smartTicks(smartTicks);\n        return this;\n    }\n\n    /**\n     *\n     *\n     *\n     * @memberof SimpleAxis\n     */\n    getTickValues () {\n        let labelDim = 0;\n        const {\n            orientation\n\n        } = this.config();\n        const {\n            tickValues\n        } = this.renderConfig();\n        const range = this.range();\n        const axis = this.axis();\n\n        const availableSpace = Math.abs(range[0] - range[1]);\n\n        const labelProps = this.axisComponentDimensions().largestTickDimensions;\n\n        if (tickValues) {\n            return tickValues;\n        }\n        labelDim = labelProps[orientation === BOTTOM || orientation === TOP ? 'width' : 'height'];\n\n        return getNumberOfTicks(availableSpace, labelDim, axis, this);\n    }\n\n    getMinTickDifference () {\n        return getSmallestDiff(this.renderConfig().tickValues);\n    }\n\n    /**\n     * Sets a fixed baseline for the first ticks so that they can render effectively within\n     * the given area\n     *\n     * @param {*} tickText\n     * @param {*} config\n     * @param {*} labelManager\n     */\n    setFixedBaseline (tickText) {\n        const {\n            orientation\n        } = this.config();\n        const {\n            labels\n        } = this.renderConfig();\n\n        const {\n            rotation\n        } = labels;\n        const axis = this.axis();\n        const ticks = axis.tickValues();\n\n        const { width, height } = this.smartTicks()[0];\n\n        axis.tickTransform((d) => {\n            if (d === ticks[0]) {\n                if ((orientation === LEFT || orientation === RIGHT)) {\n                    return `translate(0, -${(height) / 3}px)`;\n                }\n\n                if ((orientation === TOP || orientation === BOTTOM) && !rotation) {\n                    return `translate(${width / 2}px,  ${0}px)`;\n                }\n            } return '';\n        });\n        return tickText;\n    }\n\n}\n","import SimpleAxis from './simple-axis';\nimport { BAND } from '../enums/scale-type';\nimport { calculateBandSpace, setOffset, getRotatedSpaces } from './helper';\n\nexport default class BandAxis extends SimpleAxis {\n    /**\n     *\n     *\n     * @static\n     *\n     * @memberof BandAxis\n     */\n    static type () {\n        return BAND;\n    }\n\n    /**\n     *\n     *\n     *\n     * @memberof BandAxis\n     */\n    setTickConfig () {\n        let smartTicks = '';\n        let smartlabel;\n        const domain = this.domain();\n        const { labelManager } = this._dependencies;\n        const { padding } = this.config();\n        const { labels, tickValues } = this.renderConfig();\n        const { height: availHeight, width: availWidth, noWrap } = this.maxTickSpaces();\n        const { width, height } = getRotatedSpaces(labels.rotation, availWidth, availHeight);\n\n        tickValues && this.axis().tickValues(tickValues);\n        smartTicks = tickValues || domain;\n\n        // set the style on the shared label manager instance\n        labelManager.setStyle(this._tickLabelStyle);\n\n        // Update padding between plots\n        if (typeof padding === 'number') {\n            const paddingNormalized = Math.min(1, Math.max(0, padding));\n            this.scale().padding(paddingNormalized);\n        }\n\n        if (domain && domain.length) {\n            const values = tickValues || domain;\n            const tickFormatter = this._tickFormatter(values);\n            smartTicks = values.map((d, i) => {\n                labelManager.useEllipsesOnOverflow(true);\n\n                smartlabel = labelManager.getSmartText(tickFormatter(d, i), width, height, noWrap);\n                return labelManager.constructor.textToLines(smartlabel);\n            });\n        }\n        this.smartTicks(smartTicks);\n        return this;\n    }\n\n    /**\n     * Gets the space occupied by the axis\n     *\n     * @return {Object} object with details about size of the axis.\n     * @memberof SimpleAxis\n     */\n    getLogicalSpace () {\n        if (!this.logicalSpace()) {\n            this.logicalSpace(calculateBandSpace(this));\n        }\n        setOffset(this);\n\n        return this.logicalSpace();\n    }\n\n    /**\n     *\n     *\n     * @memberof BandAxis\n     */\n    getTickValues () {\n        return this.axis().scale().domain();\n    }\n\n    formatTickValue (val) {\n        return this.valueParser()(val);\n    }\n\n    sanitizeTickFormatter (value) {\n        const { tickFormat } = value;\n\n        if (tickFormat) {\n            return ticks => (val, i) => tickFormat(this.formatTickValue(val), val, i, ticks);\n        }\n        return () => val => this.formatTickValue(val);\n    }\n\n    /**\n     *\n     *\n     *\n     * @memberof BandAxis\n     */\n    getUnitWidth () {\n        return this.scale().bandwidth();\n    }\n\n    /**\n     *\n     *\n     *\n     * @memberof SimpleAxis\n     */\n    getTickSize () {\n        const {\n            showInnerTicks,\n            showOuterTicks\n        } = this.renderConfig();\n        const axis = this.axis();\n\n        axis.tickSizeInner(showInnerTicks ? 6 : 0);\n        axis.tickSizeOuter(showOuterTicks ? 6 : 0);\n        return axis.tickSize();\n    }\n\n    invertExtent (v1, v2) {\n        return this.scale().invertExtent(v1, v2);\n    }\n\n    /**\n     * Gets the nearest range value from the given range values.\n     * @param {number} v1 Start range value\n     * @param {number} v2 End range value\n     * @return {Array} range values\n     */\n    getNearestRange (v1, v2) {\n        const scale = this.scale();\n        const range = scale.range();\n        const reverse = range[0] > range[1];\n\n        const extent = this.invertExtent(v1, v2);\n        const p1 = scale(reverse ? extent[extent.length - 1] : extent[0]);\n        const p2 = scale(reverse ? extent[0] : extent[extent.length - 1]) + scale.bandwidth();\n        return [p1, p2];\n    }\n}\n","import { getSmallestDiff } from 'muze-utils';\nimport SimpleAxis from './simple-axis';\nimport { TIME } from '../enums/scale-type';\nimport { calculateBandSpace, getRotatedSpaces, getValidDomain, setContinousAxisDomain, setOffset,\n    resetTickInterval } from './helper';\nimport { applyTickSkipping } from './space-setter';\n\n/**\n *\n *\n * @export\n * @class TimeAxis\n * @extends {SimpleAxis}\n */\nexport default class TimeAxis extends SimpleAxis {\n\n    constructor (...params) {\n        super(...params);\n        this._minDiff = Infinity;\n    }\n\n    /**\n     *\n     *\n     * @param {*} range\n     *\n     * @memberof TimeAxis\n     */\n    createScale (range) {\n        let scale = super.createScale(range);\n\n        scale = scale.nice();\n        return scale;\n    }\n\n    /**\n     *\n     *\n     * @static\n     *\n     * @memberof TimeAxis\n     */\n    static type () {\n        return TIME;\n    }\n\n    formatTickValue (val) {\n        return this.scale().tickFormat()(val);\n    }\n\n    sanitizeTickFormatter (value) {\n        const { tickFormat } = value;\n\n        if (tickFormat) {\n            return (ticks) => {\n                const rawTicks = ticks.map(t => t.getTime());\n                return (val, i) => tickFormat(this.formatTickValue(val), val.getTime(), i, rawTicks);\n            };\n        }\n        return () => val => this.formatTickValue(val);\n    }\n\n     /**\n     *\n     *\n     *\n     * @memberof SimpleAxis\n     */\n    getTickSize () {\n        const {\n            showInnerTicks,\n            showOuterTicks\n        } = this.renderConfig();\n        const axis = this.axis();\n        axis.tickSizeInner(showInnerTicks === false ? 0 : 6);\n        axis.tickSizeOuter(showOuterTicks === false ? 0 : 6);\n        return super.getTickSize();\n    }\n\n    /**\n     *\n     *\n     *\n     * @memberof TimeAxis\n     */\n    getTickValues () {\n        return this.renderConfig().tickValues || this.scale().ticks();\n    }\n\n    /**\n     *\n     *\n     * @param {*} diff\n     *\n     * @memberof TimeAxis\n     */\n    minDiff (diff) {\n        this._minDiff = Math.min(this._minDiff, diff);\n        return this;\n    }\n\n    applyTickSkipping () {\n        applyTickSkipping(this);\n    }\n\n    /**\n     *\n     *\n     * @param {*} d\n     *\n     * @memberof SimpleAxis\n     */\n    domain (...domain) {\n        if (domain.length) {\n            const domainValue = getValidDomain(this, domain[0]);\n            setContinousAxisDomain(this, domainValue);\n            this.setAxisComponentDimensions();\n            this.logicalSpace(null);\n\n            resetTickInterval(this, domainValue);\n            return this;\n        }\n        return this._domain;\n    }\n\n    /**\n     * Gets the space occupied by the axis\n     *\n     * @return {Object} object with details about size of the axis.\n     * @memberof SimpleAxis\n     */\n    getLogicalSpace () {\n        if (!this.logicalSpace()) {\n            this.logicalSpace(calculateBandSpace(this));\n        }\n        setOffset(this);\n\n        return this.logicalSpace();\n    }\n\n    getMinTickDifference () {\n        return getSmallestDiff(this.config().tickValues);\n    }\n\n    /**\n     * This method is used to set the space availiable to render\n     * the SimpleCell.\n     *\n     * @param {number} width The width of SimpleCell.\n     * @param {number} height The height of SimpleCell.\n     * @memberof AxisCell\n     */\n    setAvailableSpace (...params) {\n        super.setAvailableSpace(...params);\n        this.getTickSize();\n        return this;\n    }\n\n    /**\n     *\n     *\n     * @returns\n     * @memberof BandAxis\n     */\n    setTickConfig () {\n        let smartTicks;\n        let smartlabel;\n\n        const { labels, tickValues } = this.renderConfig();\n        const { height: availHeight, width: availWidth, noWrap } = this.maxTickSpaces();\n        const { labelManager } = this._dependencies;\n        const domain = this.getTickValues();\n\n        tickValues && this.axis().tickValues(tickValues);\n\n        const { width, height } = getRotatedSpaces(labels.rotation, availWidth, availHeight);\n\n        smartTicks = tickValues || domain;\n\n        // set the style on the shared label manager instance\n        labelManager.setStyle(this._tickLabelStyle);\n\n        if (domain && domain.length) {\n            const values = tickValues || domain;\n            const tickFormatter = this._tickFormatter(values);\n            smartTicks = values.map((d, i) => {\n                labelManager.useEllipsesOnOverflow(true);\n\n                smartlabel = labelManager.getSmartText(tickFormatter(d, i), width, height, noWrap);\n                return labelManager.constructor.textToLines(smartlabel);\n            });\n        }\n\n        this.smartTicks(smartTicks);\n        return this;\n    }\n}\n","export const x11Colors = {\n    Pink: { hex: 'ffc0cb', rgb: '255,192,203' },\n    LightPink: { hex: 'ffb6c1', rgb: '255,182,193' },\n    HotPink: { hex: 'ff69b4', rgb: '255,105,180' },\n    DeepPink: { hex: 'ff1493', rgb: '255,20,147' },\n    PaleVioletRed: { hex: 'db7093', rgb: '219,112,147' },\n    MediumVioletRed: { hex: 'c71585', rgb: '199,21,133' },\n    LightSalmon: { hex: 'ffa07a', rgb: '255,160,122' },\n    Salmon: { hex: 'fa8072', rgb: '250,128,114' },\n    DarkSalmon: { hex: 'e9967a', rgb: '233,150,122' },\n    LightCoral: { hex: 'f08080', rgb: '240,128,128' },\n    IndianRed: { hex: 'cd5c5c', rgb: '205,92,92' },\n    Crimson: { hex: 'dc143c', rgb: '220,20,60' },\n    FireBrick: { hex: 'b22222', rgb: '178,34,34' },\n    DarkRed: { hex: '8b0000', rgb: '139,0,0' },\n    Red: { hex: 'ff0000', rgb: '255,0,0' },\n    OrangeRed: { hex: 'ff4500', rgb: '255,69,0' },\n    Tomato: { hex: 'ff6347', rgb: '255,99,71' },\n    Coral: { hex: 'ff7f50', rgb: '255,127,80' },\n    DarkOrange: { hex: 'ff8c00', rgb: '255,140,0' },\n    Orange: { hex: 'ffa500', rgb: '255,165,0' },\n    Gold: { hex: 'ffd700', rgb: '255,215,0' },\n    Yellow: { hex: 'ffff00', rgb: '255,255,0' },\n    LightYellow: { hex: 'ffffe0', rgb: '255,255,224' },\n    LemonChiffon: { hex: 'fffacd', rgb: '255,250,205' },\n    LightGoldenrodYellow: { hex: 'fafad2', rgb: '250,250,210' },\n    PapayaWhip: { hex: 'ffefd5', rgb: '255,239,213' },\n    Moccasin: { hex: 'ffe4b5', rgb: '255,228,181' },\n    PeachPuff: { hex: 'ffdab9', rgb: '255,218,185' },\n    PaleGoldenrod: { hex: 'eee8aa', rgb: '238,232,170' },\n    Khaki: { hex: 'f0e68c', rgb: '240,230,140' },\n    DarkKhaki: { hex: 'bdb76b', rgb: '189,183,107' },\n    Cornsilk: { hex: 'fff8dc', rgb: '255,248,220' },\n    BlanchedAlmond: { hex: 'ffebcd', rgb: '255,235,205' },\n    Bisque: { hex: 'ffe4c4', rgb: '255,228,196' },\n    NavajoWhite: { hex: 'ffdead', rgb: '255,222,173' },\n    Wheat: { hex: 'f5deb3', rgb: '245,222,179' },\n    BurlyWood: { hex: 'deb887', rgb: '222,184,135' },\n    Tan: { hex: 'd2b48c', rgb: '210,180,140' },\n    RosyBrown: { hex: 'bc8f8f', rgb: '188,143,143' },\n    SandyBrown: { hex: 'f4a460', rgb: '244,164,96' },\n    Goldenrod: { hex: 'daa520', rgb: '218,165,32' },\n    DarkGoldenrod: { hex: 'b8860b', rgb: '184,134,11' },\n    Peru: { hex: 'cd853f', rgb: '205,133,63' },\n    Chocolate: { hex: 'd2691e', rgb: '210,105,30' },\n    SaddleBrown: { hex: '8b4513', rgb: '139,69,19' },\n    Sienna: { hex: 'a0522d', rgb: '160,82,45' },\n    Brown: { hex: 'a52a2a', rgb: '165,42,42' },\n    Maroon: { hex: '800000', rgb: '128,0,0' },\n    DarkOliveGreen: { hex: '556b2f', rgb: '85,107,47' },\n    Olive: { hex: '808000', rgb: '128,128,0' },\n    OliveDrab: { hex: '6b8e23', rgb: '107,142,35' },\n    YellowGreen: { hex: '9acd32', rgb: '154,205,50' },\n    LimeGreen: { hex: '32cd32', rgb: '50,205,50' },\n    Lime: { hex: '00ff00', rgb: '0,255,0' },\n    LawnGreen: { hex: '7cfc00', rgb: '124,252,0' },\n    Chartreuse: { hex: '7fff00', rgb: '127,255,0' },\n    GreenYellow: { hex: 'adff2f', rgb: '173,255,47' },\n    SpringGreen: { hex: '00ff7f', rgb: '0,255,127' },\n    MediumSpringGreen: { hex: '00fa9a', rgb: '0,250,154' },\n    LightGreen: { hex: '90ee90', rgb: '144,238,144' },\n    PaleGreen: { hex: '98fb98', rgb: '152,251,152' },\n    DarkSeaGreen: { hex: '8fbc8f', rgb: '143,188,143' },\n    MediumSeaGreen: { hex: '3cb371', rgb: '60,179,113' },\n    SeaGreen: { hex: '2e8b57', rgb: '46,139,87' },\n    ForestGreen: { hex: '228b22', rgb: '34,139,34' },\n    Green: { hex: '008000', rgb: '0,128,0' },\n    DarkGreen: { hex: '006400', rgb: '0,100,0' },\n    MediumAquamarine: { hex: '66cdaa', rgb: '102,205,170' },\n    Aqua: { hex: '00ffff', rgb: '0,255,255' },\n    Cyan: { hex: '00ffff', rgb: '0,255,255' },\n    LightCyan: { hex: 'e0ffff', rgb: '224,255,255' },\n    PaleTurquoise: { hex: 'afeeee', rgb: '175,238,238' },\n    Aquamarine: { hex: '7fffd4', rgb: '127,255,212' },\n    Turquoise: { hex: '40e0d0', rgb: '64,224,208' },\n    MediumTurquoise: { hex: '48d1cc', rgb: '72,209,204' },\n    DarkTurquoise: { hex: '00ced1', rgb: '0,206,209' },\n    LightSeaGreen: { hex: '20b2aa', rgb: '32,178,170' },\n    CadetBlue: { hex: '5f9ea0', rgb: '95,158,160' },\n    DarkCyan: { hex: '008b8b', rgb: '0,139,139' },\n    Teal: { hex: '008080', rgb: '0,128,128' },\n    LightSteelBlue: { hex: 'b0c4de', rgb: '176,196,222' },\n    PowderBlue: { hex: 'b0e0e6', rgb: '176,224,230' },\n    LightBlue: { hex: 'add8e6', rgb: '173,216,230' },\n    SkyBlue: { hex: '87ceeb', rgb: '135,206,235' },\n    LightSkyBlue: { hex: '87cefa', rgb: '135,206,250' },\n    DeepSkyBlue: { hex: '00bfff', rgb: '0,191,255' },\n    DodgerBlue: { hex: '1e90ff', rgb: '30,144,255' },\n    CornflowerBlue: { hex: '6495ed', rgb: '100,149,237' },\n    SteelBlue: { hex: '4682b4', rgb: '70,130,180' },\n    RoyalBlue: { hex: '4169e1', rgb: '65,105,225' },\n    Blue: { hex: '0000ff', rgb: '0,0,255' },\n    MediumBlue: { hex: '0000cd', rgb: '0,0,205' },\n    DarkBlue: { hex: '00008b', rgb: '0,0,139' },\n    Navy: { hex: '000080', rgb: '0,0,128' },\n    MidnightBlue: { hex: '191970', rgb: '25,25,112' },\n    Lavender: { hex: 'e6e6fa', rgb: '230,230,250' },\n    Thistle: { hex: 'd8bfd8', rgb: '216,191,216' },\n    Plum: { hex: 'dda0dd', rgb: '221,160,221' },\n    Violet: { hex: 'ee82ee', rgb: '238,130,238' },\n    Orchid: { hex: 'da70d6', rgb: '218,112,214' },\n    Fuchsia: { hex: 'ff00ff', rgb: '255,0,255' },\n    Magenta: { hex: 'ff00ff', rgb: '255,0,255' },\n    MediumOrchid: { hex: 'ba55d3', rgb: '186,85,211' },\n    MediumPurple: { hex: '9370db', rgb: '147,112,219' },\n    BlueViolet: { hex: '8a2be2', rgb: '138,43,226' },\n    DarkViolet: { hex: '9400d3', rgb: '148,0,211' },\n    DarkOrchid: { hex: '9932cc', rgb: '153,50,204' },\n    DarkMagenta: { hex: '8b008b', rgb: '139,0,139' },\n    Purple: { hex: '800080', rgb: '128,0,128' },\n    Indigo: { hex: '4b0082', rgb: '75,0,130' },\n    DarkSlateBlue: { hex: '483d8b', rgb: '72,61,139' },\n    SlateBlue: { hex: '6a5acd', rgb: '106,90,205' },\n    MediumSlateBlue: { hex: '7b68ee', rgb: '123,104,238' },\n    White: { hex: 'ffffff', rgb: '255,255,255' },\n    Snow: { hex: 'fffafa', rgb: '255,250,250' },\n    Honeydew: { hex: 'f0fff0', rgb: '240,255,240' },\n    MintCream: { hex: 'f5fffa', rgb: '245,255,250' },\n    Azure: { hex: 'f0ffff', rgb: '240,255,255' },\n    AliceBlue: { hex: 'f0f8ff', rgb: '240,248,255' },\n    GhostWhite: { hex: 'f8f8ff', rgb: '248,248,255' },\n    WhiteSmoke: { hex: 'f5f5f5', rgb: '245,245,245' },\n    Seashell: { hex: 'fff5ee', rgb: '255,245,238' },\n    Beige: { hex: 'f5f5dc', rgb: '245,245,220' },\n    OldLace: { hex: 'fdf5e6', rgb: '253,245,230' },\n    FloralWhite: { hex: 'fffaf0', rgb: '255,250,240' },\n    Ivory: { hex: 'fffff0', rgb: '255,255,240' },\n    AntiqueWhite: { hex: 'faebd7', rgb: '250,235,215' },\n    Linen: { hex: 'faf0e6', rgb: '250,240,230' },\n    LavenderBlush: { hex: 'fff0f5', rgb: '255,240,245' },\n    MistyRose: { hex: 'ffe4e1', rgb: '255,228,225' },\n    Gainsboro: { hex: 'dcdcdc', rgb: '220,220,220' },\n    LightGray: { hex: 'd3d3d3', rgb: '211,211,211' },\n    Silver: { hex: 'c0c0c0', rgb: '192,192,192' },\n    DarkGrey: { hex: 'a9a9a9', rgb: '169,169,169' },\n    Grey: { hex: '808080', rgb: '128,128,128' },\n    DimGrey: { hex: '696969', rgb: '105,105,105' },\n    LightSlateGrey: { hex: '778899', rgb: '119,136,153' },\n    SlateGrey: { hex: '708090', rgb: '112,128,144' },\n    DarkSlateGrey: { hex: '2f4f4f', rgb: '47,79,79' },\n    Black: { hex: '000000', rgb: '0,0,0' }\n};\n","import {\n    LINEAR\n} from '../enums/constants';\n/**\n * Set of default colors\n */\nexport const palette = [\n    '#086bb6',\n    '#f37d45',\n    '#f5ce02',\n    '#67bda0',\n    '#c54e4e',\n    '#ae70af'\n];\n\nexport const DEFAULT_GRADIENT_COLOR = '#eaeaea';\n\nexport const DEFAULT_CONFIG = {\n    range: palette,\n    value: palette[0],\n    step: false,\n    stops: 5,\n    type: LINEAR\n};\n","import { mergeRecursive, detectColor, hexToHsv, rgbToHsv } from 'muze-utils';\nimport { x11Colors } from './color-maps';\nimport { palette, DEFAULT_GRADIENT_COLOR } from './defaults';\nimport { LINEAR, RGB, HEX, HSL, HSLA } from '../enums/constants';\n\nexport const getHslString = hslArr => `hsla(${hslArr[0] * 360},${hslArr[1] * 100}%,${hslArr[2] * 100}%,\\\n${hslArr[3] || 1})`;\n\nexport const convertToXllString = baseString => (baseString.split(' ') || [])\n                .reduce((x, e) => `${x}${e.charAt(0).toUpperCase()}${e.slice(1)}`, '');\n\nexport const getActualHslColor = (e, paletteColor) => {\n    let color = '';\n    if (typeof e === 'string') {\n        e = e.replace(/ /g, '');\n        e = e.toLowerCase();\n        if (detectColor(e) === HSL || detectColor(e) === HSLA) {\n            color = e.match(/(\\d+(\\.\\d+)?)/g);\n            color = [color[0] / 360, color[1] / 100, color[2] / 100, color[3] || 1];\n        } else if (detectColor(e) === HEX) {\n            color = hexToHsv(e);\n        } else if (detectColor(e) === RGB) {\n            const col = e.substring(e.indexOf('(') + 1, e.lastIndexOf(')')).split(/,\\s*/);\n            color = rgbToHsv(...col);\n        } else if (x11Colors[convertToXllString(e)]) {\n            color = rgbToHsv(...x11Colors[convertToXllString(e)].rgb.split(','));\n        }\n    } else if (!(e instanceof Array)) {\n        color = rgbToHsv(paletteColor);\n    } else {\n        color = e;\n    }\n    return color;\n};\n\nexport const PROPS = {\n    config: {\n        sanitization: (context, config) => {\n            const defCon = mergeRecursive({}, context.constructor.defaultConfig());\n            if (config.type === LINEAR) {\n                config.range = config.range || [defCon.range[0]];\n                config.range = config.range.length > 1 ? config.range : [DEFAULT_GRADIENT_COLOR, ...config.range];\n            }\n            const oldConfig = mergeRecursive(defCon, context.config());\n            const newConfig = mergeRecursive(oldConfig, config);\n\n            if (newConfig.range instanceof Array) {\n                newConfig.range = newConfig.range.map((e, i) => getActualHslColor(e, palette[i]));\n                newConfig.stops = config.stops || newConfig.range.length;\n            }\n            newConfig.value = getActualHslColor(newConfig.value, newConfig.value);\n            return newConfig;\n        }\n    },\n    domain: {},\n    scale: {},\n    uniqueValues: {}\n};\n","import { InvalidAwareTypes, getObjProp } from 'muze-utils';\n\nexport const treatNullMeasures = (domainVal, scaledVal, minDomainScaledVal) => {\n    if (domainVal instanceof InvalidAwareTypes) {\n        return minDomainScaledVal;\n    }\n    return scaledVal;\n};\n\nexport const resolveAxisConfig = (propVal, defaultVal, context) => {\n    const constructor = getObjProp(propVal, 'constructor');\n    switch (constructor) {\n    case Function:\n        return propVal(defaultVal, context);\n    case Array:\n        return propVal;\n    default:\n        return defaultVal;\n    }\n};\n","import { numberInterpolator, piecewiseInterpolator, hslInterpolator } from 'muze-utils';\nimport { CONTINOUS, DISCRETE } from '../enums/constants';\nimport { LINEAR, SEQUENTIAL, ORDINAL, QUANTILE } from '../enums/scale-type';\nimport { getHslString } from './props';\nimport { treatNullMeasures } from '../helper';\n\nconst getStops = (domain, stops) => {\n    let newStops = [];\n\n    if (stops instanceof Array) {\n        newStops = stops.slice().sort();\n        newStops = [...new Set([domain[0], ...stops, domain[1]])].sort();\n    } else {\n        const interpolator = numberInterpolator()(...domain);\n        for (let i = 0; i <= stops; i++) {\n            newStops[i] = interpolator(i / stops);\n        }\n    }\n\n    if (newStops[0] < domain[0]) {\n        newStops.shift();\n    }\n    return { domain, newStops };\n};\n\nconst rangeStops = (newStopsLength, range) => {\n    let newRange = [];\n    const maxRangeLength = Math.min(range.length, 18);\n\n    if (newStopsLength > maxRangeLength) {\n        const interpolator = piecewiseInterpolator()(hslInterpolator(), range.map(e => getHslString(e)));\n        for (let i = 0; i < newStopsLength; i++) {\n            newRange[i] = interpolator(i / (newStopsLength - 1));\n        }\n    } else {\n        newRange = range.slice(0, newStopsLength);\n    }\n    return { newRange };\n};\n\n/**\n*\n*\n* @param {*} domain\n*\n*/\nconst indexedDomain = (domain) => {\n    const uniqueVals = domain;\n    const retDomain = domain.map((d, i) => (i) / (domain.length - 1));\n    return { domain: retDomain, uniqueVals, scaleDomain: [0, 1] };\n};\n\n/**\n *\n *\n * @param {*} domain\n *\n */\nconst indexedDomainMeasure = (domain, stops, range) => {\n    const uniqueVals = domain;\n    return { domain, uniqueVals, scaleDomain: [0, 1], range };\n};\n\n/**\n *\n *\n * @param {*} domain\n *\n */\nconst normalDomain = (domain, stops, range) => {\n    const uniqueVals = domain;\n    return { uniqueVals, domain, nice: true, range };\n};\n\n/**\n *\n *\n * @param {*} domain\n * @param {*} stops\n *\n */\nconst steppedDomain = (domain, stops, range) => {\n    const { domain: uniqueVals, newStops } = getStops(domain, stops);\n    const { newRange } = rangeStops(newStops.length - 1, range);\n\n    return { uniqueVals, domain: newStops, nice: true, range: newRange };\n};\n\nconst continousSteppedDomain = (domain, stops, range) => {\n    const { domain: uniqueVals, newStops } = getStops(domain, range.length - 1);\n    const hslRange = range.map(e => getHslString(e));\n    return { uniqueVals, domain: newStops, nice: true, range: hslRange };\n};\n\n/**\n *\n *\n * @param {*} domainValue\n * @param {*} scale\n * @param {*} domain\n * @param {*} uniqueVals\n *\n */\nconst uniqueRange = (domainValue, scale, domain, uniqueVals) => {\n    const index = uniqueVals.indexOf(domainValue);\n    const numVal = domain[index];\n    return scale(numVal);\n};\n\n/**\n *\n *\n * @param {*} domainValue\n * @param {*} scale\n * @param {*} domain\n *\n */\nconst indexedRange = (domainValue, scale, domain) => {\n    const numVal = (domainValue - domain[0]) / (domain[domain.length - 1] - domain[0]);\n\n    return treatNullMeasures(domainValue, scale(numVal), scale(0));\n};\n\n/**\n *\n *\n * @param {*} domainValue\n * @param {*} scale\n */\nconst normalRange = (domainValue, scale, domain) => treatNullMeasures(domainValue, scale(domainValue),\n    scale(domain[0]));\n\n/**\n *\n *\n * @param {*} stops\n */\nconst strategies = () => ({\n    [`${CONTINOUS}-${CONTINOUS}-${SEQUENTIAL}`]: {\n        scale: SEQUENTIAL,\n        domainRange: () => indexedDomainMeasure,\n        value: () => indexedRange\n    },\n    [`${CONTINOUS}-${DISCRETE}-${SEQUENTIAL}`]: {\n        scale: SEQUENTIAL,\n        domainRange: () => indexedDomainMeasure,\n        value: () => indexedRange\n    },\n    [`${DISCRETE}-${DISCRETE}-${SEQUENTIAL}`]: {\n        scale: SEQUENTIAL,\n        domainRange: () => indexedDomain,\n        value: () => uniqueRange\n    },\n    [`${DISCRETE}-${DISCRETE}-${ORDINAL}`]: {\n        scale: ORDINAL,\n        domainRange: () => normalDomain,\n        value: () => normalRange\n    },\n    [`${CONTINOUS}-${CONTINOUS}-${ORDINAL}`]: {\n        scale: LINEAR,\n        domainRange: () => continousSteppedDomain,\n        value: () => normalRange\n    },\n    [`${CONTINOUS}-${DISCRETE}-${ORDINAL}`]: {\n        scale: QUANTILE,\n        domainRange: () => steppedDomain,\n        value: () => normalRange\n\n    }\n});\n\n/**\n *\n *\n * @param {*} domainType\n * @param {*} rangeType\n * @param {*} schemeType\n * @param {*} stops\n */\nexport const strategyGetter = (domainType, rangeType, schemeType) =>\n    strategies()[`${domainType}-${rangeType}-${schemeType || ''}`];\n","/**\n * @module Axis\n * This file declares a class that is used to render an axis to add  meaning to\n * plots.\n */\nimport { getUniqueId, generateGetterSetters, rgbToHsv } from 'muze-utils';\nimport { createScale, getScheme, getSchemeType } from '../scale-creator';\nimport { CONTINOUS, DISCRETE, COLOR } from '../enums/constants';\nimport { strategyGetter } from './color-strategy';\nimport { DEFAULT_CONFIG } from './defaults';\nimport { PROPS, getHslString, getActualHslColor } from './props';\n\n/**\n* This class is used to instantiate a SimpleAxis.\n* @class SimpleAxis\n*/\nexport default class ColorAxis {\n\n    /**\n    * Creates an instance of SimpleAxis.\n    * @param {Object} config input parameters.\n    * @param {Object | undefined} params.range Type of color range.\n    * @param {string} params.name the label to show on axis.\n    * @param {string} params.type The type of scale to handle.\n    * @memberof ColorAxis\n    */\n    constructor (config) {\n        generateGetterSetters(this, PROPS);\n        this.config(config);\n\n        this._domainType = this._config.type === 'linear' ? CONTINOUS : DISCRETE;\n        this._rangeType = (this._config.type === 'linear' && !this._config.step) ? CONTINOUS : DISCRETE;\n\n        this._schemeType = getSchemeType(this._config.range);\n\n        this._colorStrategy = this.setColorStrategy(this._domainType, this._rangeType, this._schemeType);\n        this._scale = this.createScale(this._colorStrategy);\n\n        this._id = getUniqueId();\n\n        this.updateDomain(config.domain);\n    }\n\n    /**\n     *\n     *\n     * @static\n     *\n     * @memberof ColorAxis\n     */\n    static defaultConfig () {\n        return DEFAULT_CONFIG;\n    }\n\n    /**\n     *\n     *\n     * @static\n     *\n     * @memberof ColorAxis\n     */\n    static type () {\n        return COLOR;\n    }\n\n    /**\n     *\n     *\n     * @param {*} colorStrategy\n     *\n     * @memberof ColorAxis\n     */\n    createScale (colorStrategy) {\n        const { range } = this.config();\n        if (range && typeof (range) === 'string') {\n            return getScheme(range);\n        }\n        return createScale({\n            type: colorStrategy.scale,\n            range\n        });\n    }\n\n    /**\n     *\n     *\n     * @param {*} domainType\n     * @param {*} rangeType\n     * @param {*} schemeType\n     *\n     * @memberof ColorAxis\n     */\n    setColorStrategy (domainType, rangeType, schemeType) {\n        return strategyGetter(domainType, rangeType, schemeType);\n    }\n\n    /**\n     *\n     *\n     * @param {*} domainVal\n     *\n     * @memberof ColorAxis\n     */\n    getHslString (hslColorArray) {\n        return getHslString(hslColorArray);\n    }\n    /**\n     *\n     *\n     * @param {*} domainVal\n     *\n     * @memberof ColorAxis\n     */\n    getColor (domainVal) {\n        return this.getHslString(this.getRawColor(domainVal));\n    }\n    /**\n     *\n     *\n     * @param {*} domainVal\n     *\n     * @memberof ColorAxis\n     */\n    getRawColor (domainVal) {\n        if (this.domain() && domainVal !== undefined) {\n            const scale = this.scale();\n            const range = scale.range ? scale.range() : null;\n            const color = this._colorStrategy.value(range)(domainVal, scale, this.domain(), this.uniqueValues());\n            if (color) {\n                if (typeof color === 'string') {\n                    const col = color.substring(color.indexOf('(') + 1, color.lastIndexOf(')')).split(/,\\s*/);\n                    return rgbToHsv(...col);\n                }\n                return [...color];\n            }\n        }\n        return [...this.config().value];\n    }\n\n    /**\n     *\n     *\n     * @param {*} [domain=[]]\n     *\n     * @memberof ColorAxis\n     */\n    updateDomain (domain = []) {\n        if (domain.length) {\n            const scale = this.scale();\n            const range = scale.range ? scale.range() : null;\n            const domainRangeFn = this._colorStrategy.domainRange();\n            const scaleInfo = domainRangeFn(domain, this.config().stops, range);\n\n            this.domain(scaleInfo.domain);\n            scaleInfo.range && this.scale().range(scaleInfo.range);\n            this.uniqueValues(scaleInfo.uniqueVals);\n            this.scale().domain(scaleInfo.scaleDomain || this.domain());\n        }\n        return this;\n    }\n\n    /**\n     * This method returns an object that can be used to\n     * reconstruct this instance.\n     *\n     * @return {Object} the serializable props of axis\n     * @memberof ShapeAxis\n     */\n    serialize () {\n        return {\n            type: this.constructor.type(),\n            scale: this.scale(),\n            domain: this.domain(),\n            config: this.config()\n        };\n    }\n\n    transformColor (color, transformationArr) {\n        const h = color[0] * 360;\n        const s = color[1] * 100;\n        const l = color[2] * 100;\n        const a = color[3] || 1;\n        const newH = h + transformationArr[0];\n        const newS = s + transformationArr[1];\n        const newL = l + transformationArr[2];\n        const newA = a + transformationArr[3] || 0;\n\n        return { color: `hsla(${newH},${newS}%,${newL}%,${newA})`, hsla: [newH / 360, newS / 100, newL / 100, newA] };\n    }\n\n    /**\n     * Returns the id of the axis.\n     * @return {string} Unique identifier of the axis.\n     */\n    id () {\n        return this._id;\n    }\n\n    getHslArray (color) {\n        return getActualHslColor(color);\n    }\n\n}\n","export const DEFAULT_CONFIG = {\n    value: 36,\n    range: [36, 1000]\n};\n","import { numberInterpolator, piecewiseInterpolator } from 'muze-utils';\nimport { CONTINOUS, DISCRETE } from '../enums/constants';\nimport { LINEAR, THRESHOLD } from '../enums/scale-type';\nimport { treatNullMeasures } from '../helper';\n\n/**\n *\n *\n * @param {*} domain\n *\n */\nconst indexedDomain = (domain) => {\n    const uniqueVals = domain;\n    const retDomain = domain.map((d, i) => (i) / (domain.length - 1));\n    return { domain: retDomain, uniqueVals, scaleDomain: [0, 1] };\n};\n\n/**\n *\n *\n * @param {*} domain\n *\n */\nconst normalDomain = (domain) => {\n    const uniqueVals = domain;\n    return { uniqueVals, domain };\n};\n\n/**\n *\n *\n * @param {*} domain\n * @param {*} intervals\n *\n */\nconst steppedDomain = (domain, intervals) => {\n    let newIntervals = [];\n    if (intervals instanceof Array) {\n        newIntervals = intervals.slice().sort();\n    } else {\n        const interpolator = numberInterpolator()(...domain);\n        for (let i = 0; i < intervals; i++) {\n            newIntervals[i] = interpolator(i / (intervals - 1));\n        }\n    }\n    if (newIntervals[0] < domain[0]) {\n        newIntervals.shift();\n    }\n    const retDomain = newIntervals;\n    return { uniqueVals: newIntervals, domain: retDomain, nice: true };\n};\n\n/**\n *\n *\n * @param {*} domainValue\n * @param {*} scale\n * @param {*} domain\n * @param {*} uniqueVals\n *\n */\nconst discreteRange = (domainValue, scale, domain) => {\n    const numVal = (domainValue - domain[0]) / (domain[domain.length - 1] - domain[0]);\n    const interpolator = numberInterpolator()(...scale.range());\n    return treatNullMeasures(domainValue, interpolator(numVal), interpolator(domain[0]));\n};\n\n/**\n *\n *\n * @param {*} domainValue\n * @param {*} scale\n * @param {*} domain\n *\n */\nconst pieceWiseRange = (domainValue, scale, domain, uniqueVals) => {\n    const index = uniqueVals.indexOf(domainValue);\n    const numVal = domain[index];\n    const fn = piecewiseInterpolator()(numberInterpolator(), [...scale.range()]);\n    return fn(numVal);\n};\n\n/**\n *\n *\n * @param {*} domainValue\n * @param {*} scale\n */\nconst normalRange = (domainValue, scale, domain) =>\n    treatNullMeasures(domainValue, scale(domainValue), scale(domain[0]));\n\n/**\n *\n *\n * @param {*} intervals\n */\nconst strategies = {\n    [`${DISCRETE}-${CONTINOUS}`]: {\n        scale: LINEAR,\n        domain: indexedDomain,\n        range: pieceWiseRange\n    },\n    [`${CONTINOUS}-${CONTINOUS}`]: {\n        scale: LINEAR,\n        domain: normalDomain,\n        range: normalRange\n    },\n    [`${CONTINOUS}-${DISCRETE}`]: {\n        scale: THRESHOLD,\n        domain: steppedDomain,\n        range: discreteRange\n    }\n};\n\n/**\n *\n *\n * @param {*} domainType\n * @param {*} rangeType\n * @param {*} schemeType\n * @param {*} intervals\n */\nexport const strategyGetter = (domainType, rangeType) =>\n     strategies[`${domainType}-${rangeType}`];\n","export const PROPS = {\n    config: {},\n    domain: {\n        sanitization: (context, value) => {\n            context.scale().domain(value);\n            return value;\n        }\n    },\n    range: {},\n    scale: {},\n    uniqueValues: {}\n};\n","/**\n * @module Axis\n * This file declares a class that is used to render an axis to add  meaning to\n * plots.\n */\nimport { getUniqueId, generateGetterSetters } from 'muze-utils';\nimport { createScale } from '../scale-creator';\nimport { DEFAULT_CONFIG } from './defaults';\nimport { SIZE, CONTINOUS, DISCRETE } from '../enums/constants';\nimport { strategyGetter } from './size-strategy';\nimport { PROPS } from './props';\n\n/**\n* This class is used to instantiate a SimpleAxis.\n* @class SimpleAxis\n*/\nexport default class SizeAxis {\n\n    /**\n     * Creates an instance of SimpleAxis.\n     * @param {Object} config input parameters.\n     * @memberof SizeAxis\n     */\n    constructor (config) {\n        generateGetterSetters(this, PROPS);\n\n        this._id = getUniqueId();\n        this._config = Object.assign({}, this.constructor.defaultConfig(), config);\n        // @todo: Will use configuration override using scale decorator\n        this._domainType = this._config.type === 'linear' ? CONTINOUS : DISCRETE;\n        this._rangeType = CONTINOUS;\n\n        this._sizeStrategy = this.setStrategy(this._domainType, this._rangeType);\n        this._scale = this.createScale(this._sizeStrategy);\n        this._range = this._config.range;\n\n        this.updateDomain(config.domain);\n    }\n\n     /**\n     *\n     *\n     * @param {*} domainType\n     * @param {*} rangeType\n     * @param {*} schemeType\n     *\n     * @memberof ColorAxis\n     */\n    setStrategy (domainType, rangeType) {\n        return strategyGetter(domainType, rangeType);\n    }\n\n    /**\n     *\n     *\n     *\n     * @memberof SizeAxis\n     */\n    createScale (strategy) {\n        const {\n            range\n        } = this.config();\n        return createScale({\n            type: strategy.scale,\n            range\n        });\n    }\n\n    /**\n     *\n     *\n     * @static\n     *\n     * @memberof ColorAxis\n     */\n    static defaultConfig () {\n        return DEFAULT_CONFIG;\n    }\n\n     /**\n     *\n     *\n     * @static\n     *\n     * @memberof ColorAxis\n     */\n    static type () {\n        return SIZE;\n    }\n\n    /**\n     *\n     *\n     * @param {*} domainVal\n     *\n     * @memberof SizeAxis\n     */\n    getSize (domainVal = 0) {\n        let sizeVal = 1;\n        const {\n            value\n        } = this.config();\n        const scale = this.scale();\n        const domain = this.domain() || [1, 1];\n\n        if (!scale || domain[0] === domain[1]) {\n            sizeVal = value;\n        } else {\n            return this._sizeStrategy.range(domainVal, scale, this.domain(), this.uniqueValues());\n        }\n        return sizeVal;\n    }\n\n    /**\n     * This method is used to assign a domain to the axis.\n     *\n     * @param {Array} domain the domain of the scale\n     * @memberof SizeAxis\n     */\n    updateDomain (domain) {\n        if (domain) {\n            const domainFn = this._sizeStrategy.domain;\n\n            const domainInfo = domainFn(domain, this.config().intervals);\n\n            this.domain(domainInfo.domain);\n            this.uniqueValues(domainInfo.uniqueVals);\n\n            this.scale().domain(domainInfo.scaleDomain || this.domain());\n        }\n        return this;\n    }\n\n    /**\n     * This method returns an object that can be used to\n     * reconstruct this instance.\n     *\n     * @return {Object} the serializable props of axis\n     * @memberof ShapeAxis\n     */\n    serialize () {\n        return {\n            type: this.constructor.type(),\n            scale: this.scale(),\n            domain: this.domain(),\n            range: this.range(),\n            config: this.config()\n        };\n    }\n\n    /**\n     * Returns the id of the axis.\n     * @return {string} Unique identifier of the axis.\n     */\n    id () {\n        return this._id;\n    }\n}\n","export const DEFAULT_CONFIG = {\n    generator: null,\n    value: 'circle',\n    range: ['circle', 'diamond', 'star', 'cross', 'square', 'wye', 'triangle']\n};\n","export const PROPS = {\n    config: {},\n    domain: {},\n    scale: {},\n    uniqueValues: {},\n    generator: {}\n};\n\n","/**\n * @module Axis\n * This file declares a class that is used to render an axis to add  meaning to\n * plots.\n */\nimport { getUniqueId, getSymbol, generateGetterSetters, mergeRecursive, InvalidAwareTypes } from 'muze-utils';\nimport { createScale } from '../scale-creator';\nimport { DEFAULT_CONFIG } from './defaults';\nimport { SHAPE } from '../enums/constants';\nimport { shapeGenerator } from './helper';\nimport { PROPS } from './props';\n\n/**\n* This class is used to instantiate a SimpleAxis.\n* @class SimpleAxis\n*/\nexport default class ShapeAxis {\n    /**\n    * Creates an instance of SimpleAxis.\n    * @param {Object} params input parameters.\n    * @param {Object | undefined} params.range Type of color scheme.\n    * @memberof ShapeAxis\n    */\n    constructor (config) {\n        generateGetterSetters(this, PROPS);\n\n        this._id = getUniqueId();\n        this._config = Object.assign({}, this.constructor.defaultConfig());\n        this._config = mergeRecursive(this._config, config);\n\n        this._scale = createScale({\n            type: 'ordinal',\n            range: this._config.range\n        });\n        this.updateDomain(config.domain);\n    }\n\n     /**\n     *\n     *\n     * @static\n     *\n     * @memberof ColorAxis\n     */\n    static defaultConfig () {\n        return DEFAULT_CONFIG;\n    }\n\n     /**\n     *\n     *\n     * @static\n     *\n     * @memberof ColorAxis\n     */\n    static type () {\n        return SHAPE;\n    }\n\n    /**\n     *\n     *\n     * @param {*} value\n     *\n     * @memberof ShapeAxis\n     */\n    getShape (value) {\n        if (!this.scale() || !this.domain() || !value || value instanceof InvalidAwareTypes) {\n            return this.config().value;\n        }\n\n        if (this._generatedShapes) {\n            return this._generatedShapes[value];\n        }\n\n        const shapeType = this.scale()(value);\n        if (shapeType === 'string') {\n            return getSymbol(shapeType);\n        }\n\n        return shapeType;\n    }\n\n    /**\n     * This method is used to assign a domain to the axis.\n     *\n     * @param {Array} domain the domain of the scale\n     * @memberof ShapeAxis\n     */\n    updateDomain (domain = []) {\n        if (domain.length) {\n            this.uniqueValues(domain);\n            this.domain(domain);\n            this.scale().domain(domain);\n\n            if (this.config().generator) {\n                this._generatedShapes = shapeGenerator(domain, this.config().generator);\n            }\n        }\n        return this;\n    }\n\n    /**\n     * This method returns an object that can be used to\n     * reconstruct this instance.\n     *\n     * @return {Object} the serializable props of axis\n     * @memberof ShapeAxis\n     */\n    serialize () {\n        return {\n            type: this.constructor.type(),\n            scale: this.scale(),\n            domain: this.domain(),\n            range: this.config().range,\n            config: this.config()\n        };\n    }\n\n    /**\n     * Returns the id of the axis.\n     * @return {string} Unique identifier of the axis.\n     */\n    id () {\n        return this._id;\n    }\n}\n","/**\n *\n *\n * @param {*} domain\n * @param {*} generatorFn\n *\n */\nexport const shapeGenerator = (domain, generatorFn) => {\n    const generatedShapes = {};\n    domain.forEach((value) => {\n        generatedShapes[value] = generatorFn(value);\n    });\n    return generatedShapes;\n};\n","import { mergeRecursive } from 'muze-utils';\n\nexport const PROPS = {\n    config: {\n        sanitization: (context, config) => mergeRecursive(context.config(), config),\n        preset: (context, config) => {\n            const { range, domain } = config;\n            range && context.range(range);\n            domain && context.domain(domain);\n        }\n    },\n    domain: {},\n    range: {}\n};\n","/**\n * @module Axis\n * This file declares a class that is used to render an axis to add  meaning to\n * plots.\n */\nimport { getUniqueId, Symbols, mergeRecursive, generateGetterSetters } from 'muze-utils';\nimport { createScale } from '../scale-creator';\nimport { DEFAULT_ANGLE_DOMAIN } from '../enums/constants';\nimport { PROPS } from './props';\nimport { resolveAxisConfig } from '../helper';\n\nconst { pie } = Symbols;\n\nconst createAngleValues = (context) => {\n    const angleData = context._angleFn(context._domain);\n    angleData.forEach((v) => {\n        v.startAngle -= Math.PI / 2;\n        v.endAngle -= Math.PI / 2;\n    });\n    context._angleValues = angleData.reduce((values, d) => {\n        const key = d.data;\n        !values[key] && (values[key] = []);\n        values[key].push(d);\n        return values;\n    }, {});\n};\n\n/**\n* This class is used to instantiate a AngleAxis.\n* @class AngleAxis\n*/\nexport default class AngleAxis {\n\n    /**\n     * Creates an instance of AngleAxis.\n     * @param {Object} config input parameters.\n     * @memberof AngleAxis\n     */\n    constructor (config = {}) {\n        this._id = getUniqueId();\n        generateGetterSetters(this, PROPS);\n        this._config = mergeRecursive({}, this.constructor.defaultConfig());\n        this.config(config);\n        this._range = [0, 360];\n        this._angleFn = pie()\n                .value(d => (typeof d === 'string' ? 1 : d))\n                .sortValues(null);\n        this._angleValues = {};\n    }\n\n    static defaultConfig () {\n        return {};\n    }\n\n    createScale (strategy) {\n        const {\n            range\n        } = this.config();\n        return createScale({\n            type: strategy.scale,\n            range\n        });\n    }\n\n    getScaleValue (domainVal) {\n        return this._angleValues[domainVal];\n    }\n\n    padAngle (angle) {\n        this._angleFn = this._angleFn.padAngle(angle);\n    }\n\n    domain (...domainVal) {\n        if (domainVal.length) {\n            const { domain: customDomain } = this.config();\n            const domain = domainVal[0].length ? domainVal[0] : DEFAULT_ANGLE_DOMAIN;\n            this._domain = resolveAxisConfig(customDomain, domain, this);\n            createAngleValues(this);\n            return this;\n        }\n        return this._domain;\n    }\n\n    range (...range) {\n        if (range.length) {\n            const { range: customRange } = this.config();\n            this._range = resolveAxisConfig(customRange, range[0], this);\n            const domain = this.domain();\n            const [startAngle, endAngle] = this._range;\n            this._angleFn\n                    .startAngle((startAngle / 180) * Math.PI)\n                    .endAngle(Math.PI * endAngle / 180);\n            if (domain && domain.length) {\n                createAngleValues(this);\n            }\n            return this;\n        }\n        return this._range;\n    }\n}\n","/**\n * This file exports constants that are used as enums in the\n *  crosstab group implementation.\n */\n/**\n * Width of the crosstab.\n */\nexport const X = 'x';\n/**\n * Width of the crosstab.\n */\nexport const Y = 'y';\n/**\n * Width of the crosstab.\n */\nexport const WIDTH = 'width';\n\n/**\n * Height of the crosstab.\n */\nexport const HEIGHT = 'height';\n\n/**\n * Field referring to object storing measurement configuration.\n */\nexport const MEASUREMENT = 'measurement';\n\n/**\n * Field referring to object storing configuration properties.\n */\nexport const CONFIG = 'config';\n\n/**\n * Width of visual unit in crosstab.\n */\nexport const MIN_UNIT_WIDTH = 'minUnitWidth';\n\n/**\n * Height of visual unit.\n */\nexport const MIN_UNIT_HEIGHT = 'minUnitHeight';\n\n/**\n * Field to store the array of dimensions to facet by.\n */\nexport const DIMENSIONS = 'dimensions';\n\n/**\n * Field to store array of measures to use as x axis.\n */\nexport const MEASURES = 'measures';\n\n/**\n * Field to store the array of dimensions to facet by.\n */\nexport const DIMENSION = 'dimension';\n\n/**\n * Field to store array of measures to use as x axis.\n */\nexport const MEASURE = 'measure';\n\n/**\n * Flag to specify if model should be pivoted.\n */\nexport const PIVOT = 'pivot';\n\n/**\n * Flag to specify format\n */\nexport const FORMAT = 'format';\n\n/**\n * Mount point where the variable will be hosted\n */\nexport const MOUNT = 'mount';\n\n/**\n * Data update flag\n */\nexport const HAS_DATA_UPDATED = 'hasDataUpdated';\n\n/**\n * Field referring to object storing set of rows\n */\nexport const ROWS = 'rows';\n\n/**\n * Field referring to object storing set of columns\n */\nexport const COLUMNS = 'columns';\n\n/**\n * Field referring to object storing set of columns\n */\nexport const COL = 'col';\n\n/**\n * Field referring to object storing set of rows\n */\nexport const ROW = 'row';\n\n/**\n * Field referring to object storing set of columns\n */\nexport const COLUMN = 'column';\n\n/**\n * Field referring to object storing color field\n */\nexport const COLOR = 'color';\n\n/**\n * Field referring to object storing shape field\n */\nexport const SHAPE = 'shape';\n\n/**\n * Field referring to object storing size field\n */\nexport const SIZE = 'size';\n\n/**\n * Field referring to object storing detail field\n */\nexport const DETAIL = 'detail';\n\n/**\n * Field referring to object storing set of layers\n */\nexport const LAYERS = 'layers';\n\n/**\n * Field referring to object storing the transforms\n */\nexport const TRANSFORM = 'transform';\n\n/**\n * Field referring to object storing the transforms\n */\nexport const ORDINAL = 'ordinal';\n\n/**\n * Field referring to object storing the transforms\n */\nexport const LINEAR = 'linear';\n/**\n * Field referring to object storing the transforms\n */\nexport const LEFT = 'left';\n/**\n * Field referring to object storing the transforms\n */\nexport const RIGHT = 'right';\n/**\n * Field referring to object storing the transforms\n */\nexport const TOP = 'top';\n/**\n * Field referring to object storing the transforms\n */\nexport const BOTTOM = 'bottom';\n\n/**\n * Field referring to object storing the transforms\n */\nexport const RETINAL = 'retinal';\n/**\n * Field referring to object storing the transforms\n */\nexport const CELL = 'cell';\n/**\n * Field referring to object storing the transforms\n */\nexport const X_AXES = 'xAxes';\n/**\n * Field referring to object storing the transforms\n */\nexport const Y_AXES = 'yAxes';\n/**\n * Field referring to object storing the transforms\n */\nexport const ENTRY_CELLS = 'entryCell';\n/**\n * Field referring to object storing the transforms\n */\nexport const INITIALIZED = 'initialized';\n/**\n * Field referring to object storing the transforms\n */\nexport const EXIT_CELLS = 'exitCell';\n/**\n * Field referring to object storing the transforms\n */\nexport const AXIS = 'axis';\n/**\n * Field referring to object storing the transforms\n */\nexport const UNIT = 'unit';\n/**\n * Field referring to object storing the transforms\n */\nexport const UPDATED = 'updated';\n/**\n * Field referring to object storing the transforms\n */\nexport const BEFORE_UPDATE = 'beforeupdate';\n/**\n * Field referring to object storing the transforms\n */\nexport const VALUE_MATRIX = 'valueMatrix';\n/**\n * Field referring to object storing the transforms\n */\nexport const FACET_HEADERS = 'facet-headers';\n/**\n * Field referring to object storing the transforms\n */\nexport const RADIUS = 'radius';\n/**\n * Field referring to object storing the transforms\n */\nexport const ANGLE = 'angle';\n\nexport const ANGLE0 = 'angle0';\n/**\n * Field referring to object storing the transforms\n */\nexport const ARC = 'arc';\n/**\n * Field referring to object storing the transforms\n */\nexport const CATEGORICAL = 'categorical';\n/**\n * Field referring to object storing the transforms\n */\nexport const TEMPORAL = 'temporal';\n/**\n * Field referring to object storing the transforms\n */\nexport const BAR = 'bar';\n/**\n * Field referring to object storing the transforms\n */\nexport const LINE = 'line';\n/**\n * Field referring to object storing the transforms\n */\nexport const POINT = 'point';\n/**\n * Field referring to object storing the transforms\n */\nexport const PRIMARY = 'Primary';\n/**\n * Field referring to object storing the transforms\n */\nexport const SECONDARY = 'Secondary';\n/**\n * Field referring to object storing the transforms\n */\nexport const BOTH = 'both';\n/**\n * Field referring to object storing the transforms\n */\nexport const INTERACTION = 'interaction';\n/**\n * Field referring to object storing the transforms\n */\nexport const GRID_LINES = 'gridLines';\n/**\n * Field referring to object storing the transforms\n */\nexport const GRID_BANDS = 'gridBands';\n/**\n * Field referring to object storing the transforms\n */\nexport const HEADER = 'header';\n/**\n * Field referring to object storing the transforms\n */\nexport const FACET = 'facet';\n\n","/**\n * @module Axis\n * This file declares a class that is used to render an axis to add  meaning to\n * plots.\n */\nimport { getUniqueId, mergeRecursive, generateGetterSetters } from 'muze-utils';\nimport { createScale } from '../scale-creator';\nimport { LINEAR } from '../../../visual-group/src/enums/constants';\nimport { PROPS } from './props';\nimport { resolveAxisConfig } from '../helper';\n\nconst adjustDomain = (context) => {\n    const minOuterRadius = context.config().minOuterRadius;\n    const domain = context._domain;\n    if (context._range.length) {\n        const scale = context._scale;\n        const value = scale.invert(minOuterRadius) - scale.invert(0);\n        context._domain = [domain[0] - value, domain[1]];\n        scale.domain(context._domain);\n    }\n};\n\n/**\n* This class is used to instantiate a RadiusAxis.\n* @class RadiusAxis\n*/\nexport default class RadiusAxis {\n\n    /**\n     * Creates an instance of RadiusAxis.\n     * @param {Object} config input parameters.\n     * @memberof RadiusAxis\n     */\n    constructor (config = {}) {\n        this._id = getUniqueId();\n        generateGetterSetters(this, PROPS);\n        this._range = [];\n        this._radiusFactor = 1;\n        this._config = mergeRecursive({}, this.constructor.defaultConfig());\n        this.config(config);\n        this._scale = this.createScale({\n            scale: LINEAR\n        });\n    }\n\n    static defaultConfig () {\n        return {\n            padding: [0, 1],\n            minOuterRadius: 10\n        };\n    }\n\n    config (...params) {\n        if (params.length) {\n            const config = mergeRecursive(this.config(), params[0]);\n            this._config = config;\n            return this;\n        }\n        return this._config;\n    }\n\n    createScale (strategy) {\n        return createScale({\n            type: strategy.scale,\n            range: this.range()\n        });\n    }\n\n    domain (...domainVal) {\n        if (domainVal.length) {\n            const { domain: customDomain } = this.config();\n            const domain = resolveAxisConfig(customDomain, domainVal[0], this);\n            this._scale.domain(domain);\n            this._domain = domain;\n            adjustDomain(this);\n        }\n        return this._domain;\n    }\n\n    getInnerRadius (domainVal) {\n        if (domainVal === undefined) {\n            return this.range()[0];\n        }\n        return this._scale(domainVal);\n    }\n\n    getOuterRadius (domainVal) {\n        if (domainVal === undefined) {\n            return this.range()[1];\n        }\n        const radius = this._scale(domainVal) * this._radiusFactor;\n        return radius;\n    }\n\n    range (...range) {\n        if (range.length) {\n            const { padding, range: customRange } = this.config();\n            const sanitizedRange = range[0].map((v, i) => v + (i ? -padding[i] : padding[i]));\n            const rangeVal = resolveAxisConfig(customRange, sanitizedRange, this);\n            this._range = rangeVal;\n            this._scale.range(rangeVal);\n            adjustDomain(this);\n        }\n        return this._range;\n    }\n\n    setRadiusFactor (val) {\n        this._radiusFactor = val;\n        return this;\n    }\n}\n","import * as ScaleType from './enums/scale-type';\n\nconst DATA_TYPES = {\n    DIMENSION: 'dimension',\n    CATEGORICAL: 'categorical',\n    MEASURE: 'measure',\n    TEMPORAL: 'temporal'\n};\n\n/**\n * Map of DataModel types to associated field types.\n */\nexport const dataTypeScaleMap = {\n    [DATA_TYPES.DIMENSION]: ScaleType.BAND,\n    [DATA_TYPES.MEASURE]: ScaleType.LINEAR,\n    [DATA_TYPES.TEMPORAL]: ScaleType.TIME\n};\n\n","import { nestCollection, InvalidAwareTypes } from 'muze-utils';\n\n/**\n * Create multiple datasets from a single dataset by grouping the data using\n * a dimensional field.\n * @param {Array} schema Name and type of fields are stored in schema\n * @param {Array} data Data array\n * @param {Object} config Configuration object\n * @return {Array} Grouped data array\n */\nexport default (schema, data, config) => {\n    const groupBy = config.groupBy instanceof Array ? config.groupBy : [config.groupBy];\n    const groupByIndices = groupBy.map(fieldName => schema.findIndex(d => d.name === fieldName));\n\n    if (groupByIndices.find(d => d === -1) !== undefined) {\n        throw new Error(`Groupby field ${groupBy} not found in schema`);\n    }\n\n    const groupedData = nestCollection({\n        keys: groupByIndices,\n        data\n    });\n\n    groupedData.forEach((d) => {\n        const key = d.key;\n        if (InvalidAwareTypes.isInvalid(key)) {\n            d.key = InvalidAwareTypes.getInvalidType(key);\n        }\n    });\n    return groupedData;\n};\n","/**\n * @module Transform\n * This file exports a function that is used to implement\n * the identity transform\n */\n /* eslint no-unused-vars: 0 */\n /**\n  * This function accepts data and returns the data unchanged.\n  * @param {Object} schema The schema.\n  * @param {Array} data The data array.\n  * @param {Object} config The config object.\n  * @return {Array} The unchanged data.\n  */\n function identityTransform (schema, data, config) {\n     return data;\n }\n\n export default identityTransform;\n","/**\n * @module Transform\n * This file exports the transform factory.\n */\nimport * as TransformType from '../enums/transform-type';\nimport identity from '../identity-transform';\nimport group from '../group-transform';\nimport stack from '../stack-transform';\n\n/* istanbul ignore next */\nconst transformMap = {\n    [TransformType.IDENTITY]: identity,\n    [TransformType.GROUP]: group,\n    [TransformType.STACK]: stack\n};\n\n/**\n * This function is used to retirn a transform associated\n * with the given type.\n *\n * @param {string} type The type of the transform.\n * @return {Function} The transform function.\n */\nfunction transformFactory (type) {\n    const transform = transformMap[type];\n    if (typeof transform !== 'function') {\n        throw new Error('Invalid transform type supplied.');\n    }\n    return transform;\n}\n\nexport default transformFactory;\n","/**\n * @module Transform\n * This module exports constants that are used to reference transforms in\n * a consistent manner throughout the project.\n */\n/* eslint one-var: 0 */\n export const IDENTITY = 'identity';\n export const GROUP = 'group';\n export const STACK = 'stack';\n export const FRACTURE = 'fracture';\n","import { stack } from 'muze-utils';\n\nimport group from '../group-transform';\n/*\n    Normalize the data to a form which can be given to d3 stack for stacking the data\n    ['Product', 'Sales', 'Region'],\n    0 ['A', 2000, 'North'],\n    1 ['A', 3000, 'South'],\n    2 ['B', 3000, 'South'],\n    3 ['B', 2000, 'North'],\n    4 ['C', 3000, 'South'],\n    5 ['C', 2000, 'North']\n            |\n            |\n    ['Product', 'North', 'South'],\n    ['A', 2000, 3000],\n    ['B', 2000, 3000],\n    ['C', 2000, 3000]\n*/\n// eslint-disable-next-line require-jsdoc\nconst normalizeData = (data, schema, valueField, uniqueField, groupBy) => {\n    const groupedData = group(schema, data, {\n        groupBy: uniqueField\n    });\n    const uniqueFieldIndex = schema.findIndex(d => d.name === uniqueField);\n    const valueFieldIndex = schema.findIndex(d => d.name === valueField);\n    const seriesKeyIndex = schema.findIndex(d => d.name === groupBy);\n    const seriesKeys = data.map(d => d[seriesKeyIndex]).filter((item, pos, arr) => arr.indexOf(item) === pos).sort();\n    const fieldNames = schema.reduce((acc, obj, i) => {\n        acc[i] = obj.name;\n        return acc;\n    }, {});\n    const dataArr = groupedData.map((arr) => {\n        const tuples = {};\n        const rowObj = arr.values.reduce((acc, row) => {\n            acc = row.reduce((obj, value, i) => {\n                if (i === seriesKeyIndex) {\n                    obj[value] = row[valueFieldIndex];\n                    tuples[value] = row;\n                } else if (i !== valueFieldIndex) {\n                    obj[fieldNames[i]] = value;\n                }\n                return obj;\n            }, acc);\n            return acc;\n        }, {});\n        rowObj._tuple = tuples;\n            // Set missing values field to zero value\n        seriesKeys.forEach((seriesKey) => {\n            if (rowObj[seriesKey] === undefined) {\n                rowObj[seriesKey] = 0;\n                const newArr = new Array(arr.values[0].length);\n                newArr[uniqueFieldIndex] = arr.key;\n                newArr[seriesKeyIndex] = seriesKey;\n                rowObj._tuple[seriesKey] = newArr;\n            }\n        });\n        return rowObj;\n    });\n\n    return {\n        data: dataArr,\n        keys: seriesKeys\n    };\n};\n/**\n * Generate a stacked representation of data\n * @param {Array} schema schema Array\n * @param {Array} data data array\n * @param {Object} config Configuration object\n * @return {Array} stacked data\n */\nexport default (schema, data, config) => {\n    const uniqueField = config.uniqueField;\n    const valueField = config.value;\n    const groupBy = config.groupBy;\n    const sort = config.sort || 'descending';\n    const normalizedData = normalizeData(data, schema, valueField, uniqueField, groupBy);\n    const keys = normalizedData.keys;\n    const map = {};\n    const orderBy = config.orderBy;\n    const orderIndex = schema.findIndex(d => d.name === orderBy);\n    const groupByIndex = schema.findIndex(d => d.name === groupBy);\n    if (orderIndex !== -1) {\n        keys.forEach((key) => {\n            const name = data.find(d => d[groupByIndex] === key);\n            map[key] = name[orderIndex];\n        });\n        normalizedData.keys.sort((a, b) => map[a].localeCompare(map[b]));\n    }\n\n    const stackData = stack({\n        keys: normalizedData.keys,\n        offset: config.offset || 'diverging',\n        order: sort,\n        data: normalizedData.data\n    });\n    stackData.forEach((seriesData) => {\n        seriesData.forEach((dataObj) => {\n            dataObj.data = dataObj.data._tuple[seriesData.key];\n        });\n    });\n    return stackData;\n};\n\n","import {\n    FieldType,\n    getDomainFromData,\n    setStyles,\n    easeFns,\n    selectElement,\n    DimensionSubtype,\n    STATE_NAMESPACES,\n    retrieveNearestGroupByReducers,\n    getObjProp,\n    COORD_TYPES\n} from 'muze-utils';\nimport { ScaleType } from '@chartshq/muze-axis';\nimport { transformFactory } from '@chartshq/transform';\nimport { IDENTITY, STACK, GROUP, COLOR, SHAPE, SIZE, ENCODING, AGG_FN_SUM, ASCENDING, TEXT } from '../enums/constants';\n\nconst BAND = ScaleType.BAND;\nconst { POLAR, CARTESIAN } = COORD_TYPES;\n\nconst transfromColor = (colorAxis, datum, styleType, intensity) => {\n    datum.meta.stateColor[styleType] = datum.meta.stateColor[styleType] || datum.meta.originalColor;\n    const fillColorInfo = colorAxis.transformColor(datum.meta.stateColor[styleType], intensity);\n    datum.meta.stateColor[styleType] = fillColorInfo.hsla;\n\n    return fillColorInfo;\n};\n\nexport const applyInteractionStyle = (context, selectionSet, interactionStyles, config) => {\n    const elements = context.getPlotElementsFromSet(selectionSet);\n    const axes = context.axes();\n    const colorAxis = axes.color;\n    const apply = config.apply;\n    const interactionType = config.interactionType;\n    interactionStyles.forEach((style) => {\n        const styleType = style.type;\n        elements.style(styleType, ((d) => {\n            const { colorTransform, stateColor, originalColor } = d.meta;\n            colorTransform[interactionType] = colorTransform[interactionType] || {};\n            if (apply && !colorTransform[interactionType][styleType]) {\n                // fade selections\n                colorTransform[interactionType][styleType] = style.intensity;\n                const color = transfromColor(colorAxis, d, styleType, style.intensity).color;\n                return color;\n            }\n            if (!apply && colorTransform[interactionType][styleType]) {\n                 // unfade selections\n                colorTransform[interactionType][styleType] = null;\n                return transfromColor(colorAxis, d, styleType, style.intensity.map(e => -e)).color;\n            }\n            const [h, s, l, a] = stateColor[styleType] ? stateColor[styleType] : originalColor;\n            return `hsla(${h * 360},${s * 100}%,${l * 100}%, ${a || 1})`;\n        }));\n    });\n};\n\n/**\n *\n *\n * @param {*} selectionSet\n * @param {*} className\n * @param {*} hasFaded\n */\nexport const fadeUnfadeSelection = (context, selectionSet, hasFaded, interaction) => {\n    const interactionConfig = { interaction, apply: hasFaded };\n    applyInteractionStyle(context, selectionSet, 'fade', interactionConfig);\n};\n\n/**\n *\n *\n * @param {*} selectionSet\n * @param {*} className\n * @param {*} hasFaded\n */\nexport const focusUnfocusSelection = (context, selectionSet, isFocussed, interaction) => {\n    const interactionConfig = { interaction, apply: isFocussed };\n    applyInteractionStyle(context, selectionSet, 'focus', interactionConfig);\n};\n\n/**\n *\n *\n * @param {*} axes\n *\n */\nexport const getAxesScales = (axes) => {\n    const [xAxis, yAxis] = [ENCODING.X, ENCODING.Y].map(e => axes[e]);\n    const [xScale, yScale] = [xAxis, yAxis].map(e => e && e.scale());\n    return {\n        xAxis,\n        yAxis,\n        xScale,\n        yScale\n    };\n};\n\nexport const encodingFieldInfRetriever = {\n    [POLAR]: (encoding, fieldsConfig) => {\n        const encodingInf = {};\n        [ENCODING.RADIUS, ENCODING.RADIUS0, ENCODING.ANGLE, ENCODING.ANGLE0, COLOR, SHAPE, SIZE, TEXT]\n            .forEach((e) => {\n                const field = getObjProp(encoding, e, 'field');\n                encodingInf[`${e}Field`] = field;\n                encodingInf[`${e}FieldIndex`] = getObjProp(fieldsConfig, field, 'index');\n            });\n        return encodingInf;\n    },\n    [CARTESIAN]: (encoding, fieldsConfig) => {\n        const encodingInf = {};\n        [ENCODING.X, ENCODING.Y, ENCODING.X0, ENCODING.Y0, COLOR, SHAPE, SIZE, TEXT].forEach((e) => {\n            const field = getObjProp(encoding, e, 'field');\n            encodingInf[`${e}Field`] = field;\n            encodingInf[`${e}FieldIndex`] = getObjProp(fieldsConfig, field, 'index');\n            encodingInf[`${e}FieldType`] = getObjProp(fieldsConfig, field, 'def', 'type');\n            encodingInf[`${e}FieldSubType`] = getObjProp(fieldsConfig, field, 'def', 'subtype');\n        });\n\n        return encodingInf;\n    }\n};\n\n/**\n *\n *\n * @param {*} dataModel\n * @param {*} config\n * @param {*} transformType\n *\n */\nexport const transformData = (dataModel, config, transformType, encodingFieldInf) => {\n    const data = dataModel.getData({ withUid: true });\n    const schema = data.schema;\n    const transform = config.transform;\n    const {\n        xField,\n        yField,\n        xFieldType,\n        yFieldType\n    } = encodingFieldInf;\n    const uniqueField = xFieldType === FieldType.MEASURE ? yField : xField;\n\n    return transformFactory(transformType)(schema, data.data, {\n        groupBy: transform.groupBy,\n        uniqueField,\n        sort: transform.sort || 'none',\n        offset: transform.offset,\n        orderBy: transform.orderBy,\n        value: yFieldType === FieldType.MEASURE ? yField : xField\n    }, data.uids);\n};\n\nexport const getIndividualClassName = (d, i, data, context) => {\n    const className = context.config().individualClassName;\n    let classNameStr = '';\n    if (className instanceof Function) {\n        classNameStr = className(d, i, data, context);\n    }\n    return classNameStr;\n};\n\nconst dataNormalizers = {\n    [POLAR]: (transformedData, encodingFieldInf, fieldsConfig) => {\n        const {\n            radiusFieldIndex,\n            angleFieldIndex,\n            radius0FieldIndex,\n            angle0FieldIndex\n        } = encodingFieldInf;\n        const fieldsLen = Object.keys(fieldsConfig).length;\n\n        /**\n         * Returns normalized data from transformed data. It recursively traverses through\n         * the transformed data if there it is nested.\n         */\n        return transformedData.map(data => data.map((d) => {\n            const pointObj = {\n                radius: d[radiusFieldIndex],\n                angle: angleFieldIndex !== undefined ? d[angleFieldIndex] : 1,\n                radius0: d[radius0FieldIndex],\n                angle0: d[angle0FieldIndex]\n            };\n            [COLOR, SHAPE, SIZE, TEXT].forEach((enc) => {\n                pointObj[enc] = d[encodingFieldInf[`${enc}FieldIndex`]];\n            });\n            pointObj.source = d;\n            pointObj.rowId = d[fieldsLen];\n            return pointObj;\n        })).filter(d => d.length);\n    },\n    [CARTESIAN]: (transformedData, encodingFieldInf, fieldsConfig, transformType) => {\n        const {\n            xFieldType,\n            xFieldIndex,\n            yFieldIndex,\n            x0FieldIndex,\n            y0FieldIndex\n        } = encodingFieldInf;\n        const fieldsLen = Object.keys(fieldsConfig).length;\n        /**\n         * Returns normalized data from transformed data. It recursively traverses through\n         * the transformed data if there it is nested.\n         */\n        return transformedData.map((data) => {\n            const values = transformType === GROUP ? data.values : data;\n            return values.map((d) => {\n                let pointObj = {};\n                let tuple;\n                if (transformType === STACK) {\n                    tuple = d.data || [];\n                    let y;\n                    let y0;\n                    let x;\n                    let x0;\n                    if (d[1] >= d[0]) {\n                        y = x0 = d[1];\n                        x = y0 = d[0];\n                    } else {\n                        y = x0 = d[0];\n                        x = y0 = d[1];\n                    }\n\n                    pointObj = xFieldType === FieldType.MEASURE ? {\n                        x,\n                        x0,\n                        y: tuple[yFieldIndex],\n                        y0: tuple[yFieldIndex]\n                    } : {\n                        x: tuple[xFieldIndex],\n                        x0: tuple[xFieldIndex],\n                        y,\n                        y0\n                    };\n                    pointObj.source = tuple;\n                    pointObj.rowId = tuple[fieldsLen];\n                    [COLOR, SHAPE, SIZE, TEXT].forEach((enc) => {\n                        pointObj[enc] = tuple[encodingFieldInf[`${enc}FieldIndex`]];\n                    });\n                } else {\n                    pointObj = {\n                        x: d[xFieldIndex],\n                        y: d[yFieldIndex],\n                        x0: d[x0FieldIndex],\n                        y0: d[y0FieldIndex]\n                    };\n                    pointObj.source = d;\n                    pointObj.rowId = d[fieldsLen];\n                    [COLOR, SHAPE, SIZE, TEXT].forEach((enc) => {\n                        pointObj[enc] = d[encodingFieldInf[`${enc}FieldIndex`]];\n                    });\n                }\n                return pointObj;\n            });\n        }).filter(d => d.length);\n    }\n};\n/*\n * This method resolves the x, y, x0 and y0 values from the transformed data.\n * It also checks the type of transformed data for example, if it is a stacked data\n * then it fetches the y and y0 values from the stacked data.\n * @param {Array.<Array>} transformedData transformed data\n * @param {Object} fieldsConfig field definitions\n * @param {string} transformType type of transformed data - stack, group or identity.\n * @return {Array.<Object>} Normalized data\n*/\nexport const getNormalizedData = (transformedData, context) => {\n    const transformType = context.transformType();\n    const transformedDataArr = transformType === IDENTITY ? [transformedData] : transformedData;\n    const encodingFieldInf = context.encodingFieldsInf();\n    const fieldsConfig = context.data().getFieldsConfig();\n    return dataNormalizers[context.coord()](transformedDataArr, encodingFieldInf, fieldsConfig, transformType);\n};\n\nexport const domainCalculator = {\n    [POLAR]: (data, layerInst) => {\n        const config = layerInst.config();\n        const { sort } = config;\n        let angleValues = data[0];\n        const radius0Field = getObjProp(config.encoding.radius0, 'field');\n        if (sort) {\n            angleValues = angleValues.sort((a, b) => (sort === ASCENDING ? a.radius - b.radius : b.radius - a.radius));\n        }\n        const radiusDomain = getDomainFromData(data, [ENCODING.RADIUS, radius0Field ?\n            ENCODING.RADIUS0 : ENCODING.RADIUS]);\n        return {\n            radius: radiusDomain,\n            angle: angleValues.map(d => d.angle),\n            angle0: angleValues.map(d => d.angle0)\n        };\n    },\n    [CARTESIAN]: (data, layerInst) => {\n        const transformType = layerInst.transformType();\n        const encodingFieldInf = layerInst.encodingFieldsInf();\n        const {\n            xFieldSubType,\n            yFieldSubType,\n            xField,\n            yField,\n            x0Field,\n            y0Field\n        } = encodingFieldInf;\n        const domains = {};\n        const yEnc = ENCODING.Y;\n        const xEnc = ENCODING.X;\n        if (xField) {\n            domains.x = getDomainFromData(data, x0Field || transformType === STACK ? [xEnc, ENCODING.X0] : [xEnc, xEnc],\n                xFieldSubType);\n        }\n        if (yField) {\n            domains.y = getDomainFromData(data, y0Field || transformType === STACK ? [ENCODING.Y0, ENCODING.Y] :\n                [yEnc, yEnc], yFieldSubType);\n        }\n\n        return domains;\n    }\n};\n\nexport const attachDataToVoronoi = (voronoi, points) => {\n    voronoi.data([].concat(...points).filter(d => d.rowId !== undefined).map((d) => {\n        const point = d.update;\n        return {\n            x: point.x,\n            y: point.y,\n            data: d\n        };\n    }));\n};\n\n/**\n *\n *\n * @param {*} target\n * @param {*} styles\n * @param {*} remove\n */\nexport const updateStyle = (target, styles, remove) => {\n    for (const key in styles) {\n        if ({}.hasOwnProperty.call(styles, key)) {\n            target.style(key, remove ? null : styles[key]);\n        }\n    }\n};\n\n/**\n *\n *\n * @param {*} mount\n * @param {*} context\n */\nexport const animateGroup = (mount, context) => {\n    let groupTransition;\n    let update;\n    const { transition, groupAnimateStyle } = context;\n    const { duration, effect, disabled } = transition;\n    if (groupAnimateStyle) {\n        setStyles(mount.node(), groupAnimateStyle.enter);\n        update = groupAnimateStyle.update;\n        if (!disabled) {\n            groupTransition = mount.transition()\n                .ease(easeFns[effect])\n                .duration(duration)\n                .on('end', function () {\n                    updateStyle(selectElement(this), update, true);\n                });\n        } else {\n            groupTransition = mount;\n        }\n        updateStyle(groupTransition, update);\n    }\n};\n\nexport const positionPoints = (context, points) => {\n    const positioner = context.encodingTransform();\n    if (positioner) {\n        return positioner(points, context, { smartLabel: context._dependencies.smartLabel });\n    }\n    return points;\n};\n\n/**\n  * Gets the width of each group. It gets the width from axis if it is available for\n  * example when the scale is nominal else it calculates the width from the\n  * range of the axis and number of data points.\n  *\n  * @param {SimpleAxis} axis instance of axis\n  * @param {number} minDiff Minimum difference between data points\n  * @return {number} width of each bar\n  * @private\n*/\nexport const getGroupSpan = (axis, minDiff) => {\n    let groupSpan;\n    const width = axis.getUnitWidth();\n    const scale = axis.scale();\n    const range = scale.range();\n    const domain = scale.domain();\n    !width ? groupSpan = (Math.abs(range[1] - range[0]) / Math.abs(domain[1] - domain[0])) * minDiff :\n        (groupSpan = width);\n\n    return groupSpan;\n};\n\nexport const getPlotMeasurement = (context, dimensionalValues) => {\n    const fieldInfo = context.encodingFieldsInf();\n    const axes = context.axes();\n    const transformType = context.transformType();\n    const config = context.config();\n    const bandScale = context._bandScale;\n\n    return ['x', 'y'].map((type) => {\n        let span = 0;\n        let groupSpan = 0;\n        let padding = 0;\n        let offsetValues = [];\n        if (fieldInfo[`${type}FieldType`] === FieldType.DIMENSION) {\n            let actualGroupWidth;\n            const isTemporal = fieldInfo[`${type}FieldSubType`] === DimensionSubtype.TEMPORAL;\n            const timeDiff = isTemporal ? context.dataProps().timeDiffs[type] : 0;\n            const axis = axes[type];\n            const pad = config[`pad${type.toUpperCase()}`];\n            const innerPadding = config.innerPadding;\n            const keys = dimensionalValues;\n            const scale = axis.scale();\n            groupSpan = getGroupSpan(axis, timeDiff);\n            const isAxisBandScale = axis.constructor.type() === BAND;\n            const axisPadding = axis.config().padding;\n            // If it is a grouped bar then the width of each bar in a grouping is retrieved from\n            // a band scale. The band scale will have range equal to width of one group of bars and\n            // the domain is set to series keys.\n            if (transformType === 'group') {\n                const groupPadding = isAxisBandScale ? 0 : axisPadding * groupSpan / 2;\n                bandScale.range([groupPadding, groupSpan - groupPadding]).domain(keys).paddingInner(innerPadding);\n                span = bandScale.bandwidth();\n                actualGroupWidth = groupSpan - (isAxisBandScale ? 0 : axisPadding * groupSpan);\n                offsetValues = keys.map(key => bandScale(key) - (isAxisBandScale ? 0 : (groupSpan / 2)));\n            } else if (pad !== undefined) {\n                let offset;\n                if (isAxisBandScale) {\n                    const step = scale.step();\n                    offset = scale.padding() * step;\n                    span = scale.bandwidth() + offset;\n                } else {\n                    span = groupSpan;\n                }\n                offsetValues = keys.map(() => (isAxisBandScale ? -(offset / 2) : -(span / 2)));\n            } else {\n                padding = isAxisBandScale ? 0 : axisPadding * groupSpan;\n                span = groupSpan - padding;\n                actualGroupWidth = span;\n                offsetValues = keys.map(() => (isAxisBandScale ? 0 : -(span / 2)));\n            }\n\n            groupSpan = actualGroupWidth;\n            padding = isAxisBandScale ? axisPadding * axis.scale().step() : axisPadding * groupSpan;\n        }\n\n        return {\n            span,\n            offsetValues,\n            groupSpan,\n            padding\n        };\n    });\n};\n\nexport const initializeGlobalState = (context) => {\n    const store = context.store();\n    const globalState = context.constructor.getState()[0];\n    const namespace = context.metaInf().namespace;\n    for (const prop in globalState) {\n        store.append(`${STATE_NAMESPACES.LAYER_GLOBAL_NAMESPACE}.${prop}`, {\n            [namespace]: null\n        });\n    }\n};\n\nexport const resolveInvalidTransformType = (context) => {\n    const {\n        xField,\n        yField,\n        xFieldType,\n        yFieldType\n    } = context.encodingFieldsInf();\n    const groupByField = context.config().transform.groupBy;\n    const fieldsConfig = context.data().getFieldsConfig();\n    const groupByFieldMeasure = fieldsConfig[groupByField] && fieldsConfig[groupByField].def.type === FieldType.MEASURE;\n    if (!xField || !yField || groupByFieldMeasure || !groupByField || xFieldType === FieldType.DIMENSION &&\n        yFieldType === FieldType.DIMENSION) {\n        return IDENTITY;\n    }\n    return null;\n};\n\nexport const getValidTransform = context => resolveInvalidTransformType(context) || context.config().transform.type;\n\nexport const getValidTransformForAggFn = (context) => {\n    const resolvedInvalidTransformType = resolveInvalidTransformType(context);\n    if (resolvedInvalidTransformType) {\n        return resolvedInvalidTransformType;\n    }\n\n    const {\n        xField,\n        yField,\n        xFieldType,\n        yFieldType\n    } = context.encodingFieldsInf();\n    const groupByField = context.config().transform.groupBy;\n    const isCustomTransformTypeProvided = !!getObjProp(context._customConfig, 'transform', 'type');\n    let transformType = context.config().transform.type;\n\n    if (!isCustomTransformTypeProvided && groupByField && xFieldType !== yFieldType) {\n        const measureField = xFieldType === FieldType.MEASURE ? xField : yField;\n        const { [measureField]: aggFn } = retrieveNearestGroupByReducers(context.data(), measureField);\n        transformType = aggFn === AGG_FN_SUM ? STACK : GROUP;\n    }\n\n    return transformType;\n};\n\nexport const getMarkId = (source, schema) => source.filter((val, i) => schema[i] &&\n    schema[i].type === FieldType.DIMENSION).join();\n\nexport const resolveEncodingValues = (data, i, dataArr, layerInst) => {\n    const transformedValues = {};\n    const values = data.values;\n    const encoding = layerInst.config().encoding;\n    for (const key in values) {\n        const value = getObjProp(encoding[key], 'value');\n        if (value instanceof Function) {\n            transformedValues[key] = value(values, i, dataArr, layerInst);\n        } else {\n            transformedValues[key] = values[key];\n        }\n    }\n    return transformedValues;\n};\n\nexport const getColorMetaInf = (color, colorAxis) => ({\n    originalColor: colorAxis.getHslArray(color),\n    stateColor: {},\n    colorTransform: {}\n});\n\nconst getCoordValue = (radius, trig, angle, offset) => radius * Math[trig](angle) + offset;\nconst coordValueGetter = (radius, angle, xOffset, yOffset) => ({\n    x: getCoordValue(radius, 'cos', angle, xOffset),\n    y: getCoordValue(radius, 'sin', angle, yOffset)\n});\nexport const toCartesianCoordinates = (points, measurement, rangePlot = false) => {\n    const xOffset = measurement.width / 2;\n    const yOffset = measurement.height / 2;\n    for (let i = 0, len = points.length; i < len; i++) {\n        const point = points[i];\n        const { angle, radius, radius0, angle0 } = point.update;\n        point.update = coordValueGetter(radius, angle, xOffset, yOffset);\n        if (rangePlot) {\n            const update = point.update = coordValueGetter(radius0, angle0, xOffset, yOffset);\n            const { x: x0, y: y0 } = coordValueGetter(radius, angle, xOffset, yOffset);\n            update.x0 = x0;\n            update.y0 = y0;\n        }\n    }\n    return points;\n};\n\nexport const sortData = (data, axes) => {\n    const { x: xAxis, y: yAxis } = axes;\n    const axisArr = [xAxis, yAxis];\n    for (let i = 0, len = axisArr.length; i < len; i++) {\n        const axis = axisArr[i];\n        if (axis.constructor.type() === BAND) {\n            const key = i ? 'y' : 'x';\n            const dom = axis.domain();\n            const indices = dom.reduce((acc, v, idx) => {\n                acc[v] = idx;\n                return acc;\n            }, {});\n            data.sort((a, b) => indices[a[key]] - indices[b[key]]);\n            break;\n        }\n    }\n    return data;\n};\n","import { CommonProps, STATE_NAMESPACES } from 'muze-utils';\nimport { encodingFieldInfRetriever } from '../helpers';\nimport * as PROPS from '../enums/props';\n\nconst renderLayer = (context) => {\n    const mount = context.mount();\n    if (mount) {\n        context.render(mount);\n        context.dependencies().throwback.commit(CommonProps.ON_LAYER_DRAW, true);\n    }\n};\n\nexport const listenerMap = (context, ns) => [\n    {\n        props: [`${ns.local}.${PROPS.DATA}`],\n        listener: ([, data]) => {\n            const config = context.config();\n            const encodingValue = config.encoding;\n            if (data && encodingValue) {\n                const fieldsConfig = data.getFieldsConfig();\n                const encodingFieldsInf = encodingFieldInfRetriever[context.coord()](encodingValue, fieldsConfig);\n                context.encodingFieldsInf(encodingFieldsInf);\n                context.resolveTransformType();\n                context._transformedData = context.getTransformedData(data, config,\n                    context.transformType(), encodingFieldsInf);\n                context._normalizedData = context.getNormalizedData(context._transformedData, fieldsConfig);\n                const domain = context.calculateDomainFromData(context._normalizedData, context.encodingFieldsInf(),\n                    context.data().getFieldsConfig());\n                context._domain = domain;\n                !context._updateLock && context.domain(domain);\n            }\n        },\n        type: 'registerImmediateListener'\n    },\n    {\n        props: [`${ns.local}.${PROPS.CONFIG}`],\n        listener: ([, config]) => {\n            const calculateDomain = config.calculateDomain;\n            const props = context.getRenderProps();\n            const store = context.store();\n            const namespaceInf = {\n                namespace: `${STATE_NAMESPACES.LAYER_LOCAL_NAMESPACE}.${context.metaInf().namespace}`,\n                key: 'renderListener'\n            };\n            store.unsubscribe(namespaceInf);\n            if (calculateDomain === false) {\n                props.push(`${ns.local}.${PROPS.DATA}`);\n            }\n            store.registerChangeListener(props,\n                () => {\n                    renderLayer(context);\n                }, false, namespaceInf);\n        },\n        type: 'registerImmediateListener'\n    }\n];\n\n","export const DATA = 'data';\nexport const CONFIG = 'config';\nexport const MEASUREMENT = 'measurement';\nexport const DOMAIN = 'domain';\nexport const MOUNT = 'mount';\n","import { mergeRecursive } from 'muze-utils';\nimport * as PROPS from '../enums/props';\n\nexport const defaultOptions = {\n    [PROPS.CONFIG]: {\n        value: null,\n        meta: {\n            sanitization: (config, oldConfig, context) => {\n                context._customConfig = config;\n                const constructor = context.constructor;\n                const newConf = mergeRecursive({}, constructor.defaultConfig());\n\n                return constructor.defaultPolicy(newConf, config);\n            }\n        }\n    },\n    [PROPS.DATA]: {\n        value: null,\n        meta: {\n            preset: (data, context) => {\n                if (context._cacheEnabled) {\n                    context._cachedData.push(data);\n                } else {\n                    context._cachedData = [data];\n                }\n            }\n        }\n    }\n};\n","import {\n    getUniqueId,\n    mergeRecursive,\n    FieldType,\n    selectElement,\n    ReservedFields,\n    registerListeners,\n    transactor,\n    DataModel,\n    clone,\n    generateGetterSetters,\n    STATE_NAMESPACES,\n    COORD_TYPES\n} from 'muze-utils';\nimport { SimpleLayer } from '../simple-layer';\nimport * as PROPS from '../enums/props';\nimport { props } from './props';\nimport {\n    transformData,\n    getNormalizedData,\n    applyInteractionStyle,\n    initializeGlobalState,\n    getValidTransform,\n    domainCalculator\n} from '../helpers';\nimport { listenerMap } from './listener-map';\nimport { defaultOptions } from './default-options';\n\n/**\n * An abstract class which gives definition of common layer functionality like\n * - transforming data for various modes. Supported modes: identity, group and stack.\n * - calculating data domain\n * - linking dependent layers\n * - merging policy of configuration\n * - interaction sideffect helpers\n * - retrieving dom elements from data using id\n * - retrieving the physical dimensions of marks\n * - disposing layer\n *\n * Every layer has to extend base layer and give concrete definition.\n * This layer does not have any default visual. A new layer has to define the logic of `render` for rendering the\n * visuals\n *\n * @public\n * @class\n * @module BaseLayer\n */\nexport default class BaseLayer extends SimpleLayer {\n\n    /**\n     * Creates a layer using a configuration and data.\n     *\n     * @public\n     * @constructor\n     * @param {DataModel} data Instance of DataModel to be used. This DataModel instance serves as the data for a layer.\n     * @param {Object} axes Axes instances to be used for rendering the layer. Axes are used for mapping data from\n     *      value to px.\n     * @param {SimpleAxis} axes.x X axis of the layer. Based on the type of variable it gets instance of BandAxis,\n     *      TimeAxis, ContinuousAxis\n     * @param {SimpleAxis} axes.y X axis of the layer. Based on the type of variable it gets instance of BandAxis,\n     *      TimeAxis, ContinuousAxis\n     * @param {ColorAxis} axes.color Axis for coloring a layer using color interpolators\n     * @param {ShapeAxis} axes.shape Axis for providing a shape\n     * @param {SizeAxis} axes.size Axis for determining size of a mark using size interpolator\n     * @param {LayerConfig} config Configuration of the layer\n     * @param {Object} dependencies Dependencies of the layer\n     * @param {SmartLabel} dependencies.smartLabel Smartlabel singleton instance\n     */\n    constructor (data, axes, config, dependencies = {}) {\n        super();\n\n        generateGetterSetters(this, props);\n        this.data(data);\n        this.axes(axes);\n        this.config(config);\n        this.alias(this.constructor.formalName() + getUniqueId());\n        this.dependencies(dependencies);\n        this._points = [];\n        this._cachedData = [];\n        this._id = getUniqueId();\n        this._measurement = {};\n        this._animationDonePromises = [];\n        this._customConfig = null;\n    }\n\n    static getState () {\n        return [\n            {\n                domain: {}\n            },\n            {\n                config: {},\n                data: {}\n            }\n        ];\n    }\n\n    store (...params) {\n        if (params.length) {\n            this._store = params[0];\n            const metaInf = this.metaInf();\n            const localNs = `${STATE_NAMESPACES.LAYER_LOCAL_NAMESPACE}.${metaInf.namespace}`;\n            initializeGlobalState(this);\n            const store = this.store();\n            store.append(`${STATE_NAMESPACES.LAYER_LOCAL_NAMESPACE}`, {\n                [metaInf.namespace]: null\n            });\n\n            transactor(this, defaultOptions, store.model, {\n                namespace: localNs\n            });\n            registerListeners(this, listenerMap, {\n                local: localNs,\n                global: STATE_NAMESPACES.LAYER_GLOBAL_NAMESPACE\n            }, {\n                unitRowIndex: metaInf.unitRowIndex,\n                unitColIndex: metaInf.unitColIndex\n            });\n            return this;\n        }\n        return this._store;\n    }\n\n    domain (...dom) {\n        const prop = `${STATE_NAMESPACES.LAYER_GLOBAL_NAMESPACE}.${PROPS.DOMAIN}.${this.metaInf().namespace}`;\n        if (dom.length) {\n            this.store().commit(prop, dom[0]);\n            return this;\n        }\n        return this.store().get(prop);\n    }\n\n    /**\n     * Creates a layer instance\n     * @return {BaseLayer} Instance of a layer\n     */\n    static create (...params) {\n        return new this(...params);\n    }\n\n    /**\n     * Default configuration of the layer. This configuration gets merged to the user passed configuration using a\n     * plolicy. Base layer only returns part of configuraion, any layer overridding base layer should return its own\n     * configuration.\n     *\n     * @public\n     * @static\n     *\n     * @return {Object} Default configuration\n     */\n    static defaultConfig () {\n        return {\n            transform: {\n                type: 'identity'\n            }\n        };\n    }\n\n    /**\n     * Policy defines how user config gets merged to default config. The default policy here does a deep copy\n     * operation.\n     * Any policy which does more than deep copying should define the policy as a static member.\n     *\n     * @static\n     * @public\n     *\n     * @param {LayerConfig} conf Configuration with which the user config will be merged\n     * @param {LayerConfig} userConf Configuration given by the user\n     *\n     * @return {LayerConfig} Merged layer configuration\n     */\n    static defaultPolicy (conf, userConf) {\n        return mergeRecursive(conf, userConf);\n    }\n\n    /**\n     * Determines a name for a layer. This name of the layer is used in the input data to refer to this layer.\n     * ```\n     *  .layers([\n     *      mark: 'bar',\n     *      encoding: { ... }\n     *  ])\n     * ```\n     *\n     * @static\n     * @public\n     *\n     * @return {string} name of layer\n     */\n    static formalName () {\n        return 'base';\n    }\n\n    encodingFieldsInf (...fieldsInf) {\n        if (fieldsInf.length) {\n            this._encodingFieldsInf = fieldsInf[0];\n            return this;\n        }\n        return this._encodingFieldsInf;\n    }\n\n    encodingTransform (...encodingTransform) {\n        if (encodingTransform.length) {\n            this._encodingTransform = encodingTransform[0];\n            return this;\n        }\n        return this._encodingTransform;\n    }\n\n    /**\n     * Provides a alias for a layer. Like it's possible to have same layer (like bar) multiple times, but among multiple\n     * layers of same type if one layer has to be referred, alias is used. If no alias is given then `formalName` is set\n     * as the alias name.\n     *\n     *\n     * If used as setter\n     * @param  {string} alias Name of the alias\n     * @return {BaseLayer} Instance of current base layer\n     *\n     * If used as getter\n     * @return {string} Alias of the current layer\n     *\n     * @public\n     */\n    alias (...params) {\n        if (params.length) {\n            this._alias = params[0];\n            return this;\n        }\n        return this._alias || this.constructor.formalName();\n    }\n\n    dependencies (...params) {\n        if (params.length) {\n            this._dependencies = params[0];\n            return this;\n        }\n        return this._dependencies;\n    }\n\n    enableCaching () {\n        this._cacheEnabled = true;\n        return this;\n    }\n\n    clearCaching () {\n        this._cacheEnabled = false;\n        return this.data(this._cachedData[0]);\n    }\n\n    /**\n     * Serialize the schema. Merge config is used for serialization.\n     *\n     * @public\n     *\n     * @return {LayerConfig} Serialized schema\n     */\n    serialize () {\n        return this.config();\n    }\n\n    /**\n     * Returns the unique identifier of this layer. Id is auto generated during the creation proceess of a schema.\n     *\n     * @public\n     *\n     * @return {string} id of the layer\n     */\n    id () {\n        return this._id;\n    }\n\n    /**\n     * Returns the transformed data based on given transform type.\n     * It first gets the transform method from transform factory based on type of transform. It then calls the\n     * transform method with the data and passes the configuration parameters of transform such as\n     * groupBy, value field, etc.\n     *\n     * @param {DataModel} dataModel Instance of DataModel\n     * @param {Object} config Configuration for transforming data\n     * @return {Array.<Array>} Transformed data.\n     */\n    getTransformedData (dataModel, config, transformType, encodingFieldsInf) {\n        return transformData(dataModel, config, transformType, encodingFieldsInf);\n    }\n\n    /**\n     * Calculates the domain from the data.\n     * It checks the type of field and calculates the domain based on that. For example, if it\n     * is a quantitative or temporal field, then it calculates the min and max from the data or\n     * if it is a categorical field then it gets all the values from the data of that field.\n     * @param {Array} data DataArray\n     * @param {Object} fieldsConfig Configuration of fields\n     * @return {Array} Domain values array.\n     */\n    calculateDomainFromData (data) {\n        let domains = {};\n        const isEmpty = this.data().isEmpty();\n\n        if (!isEmpty) {\n            domains = domainCalculator[this.coord()](data, this);\n        }\n        return domains;\n    }\n\n    static shouldDrawAnchors () {\n        return false;\n    }\n\n    /**\n     * Returns the domain for the axis.\n     *\n     * @param {string} encodingType type of encoding x, y, etc.\n     * @return {Object} Axis domains\n     */\n    getDataDomain (encodingType) {\n        const domains = this.store()\n            .get(`${STATE_NAMESPACES.LAYER_GLOBAL_NAMESPACE}.${PROPS.DOMAIN}.${this.metaInf().namespace}`);\n        return encodingType !== undefined ? domains[encodingType] || [] : domains;\n    }\n\n    /**\n     * Normalizes the transformed data and returns it.\n     *\n     * @param {string} encodingType type of encoding x, y, etc.\n     * @return {Object} Axis domains\n     */\n    getNormalizedData (transformedData) {\n        return getNormalizedData(transformedData, this);\n    }\n\n    /**\n     * Gets the nearest point closest to the given x and y coordinate. If no nearest point is found, then it returns\n     * null.\n     *\n     * @public\n     *\n     * @param {number} x X Coordinate.\n     * @param {number} y Y Coordinate.\n     *\n     * @return {Object} Information of the nearest point.\n     * ```\n     *      {\n     *          // id property contains the field names and their corresponding values in a 2d array. This is the data\n     *          // associated with the nearest point.\n     *          id: // Example data: [['Origin'], ['USA']],\n     *          dimensions: // Physical dimensions of the point.\n     *          layerId: // Id of the layer instance.\n     *      }\n     * ```\n     */\n    getNearestPoint () {\n        return null;\n    }\n\n    applyInteractionStyle (interactionType, selectionSet, apply, styles) {\n        const interactionConfig = this.config().interaction || {};\n\n        let interactionStyles = interactionConfig[interactionType];\n        interactionStyles = styles || interactionStyles;\n        if (interactionStyles) {\n            applyInteractionStyle(this, selectionSet, interactionStyles, {\n                apply,\n                interactionType\n            });\n        }\n    }\n\n    disableUpdate () {\n        this._updateLock = true;\n        return this;\n    }\n\n    enableUpdate () {\n        this._updateLock = false;\n        return this;\n    }\n\n    resolveTransformType () {\n        this._transformType = getValidTransform(this);\n    }\n\n    transformType () {\n        return this._transformType;\n    }\n\n    /**\n     * Renders the layer\n     * @return {BaseLayer} Instance of the layer.\n     */\n    render () {\n        return this;\n    }\n\n    /**\n     *\n     *\n     *\n     * @memberof BaseLayer\n     */\n    elemType () {\n        return 'g';\n    }\n\n    /**\n     * Disposes the entire layer.\n     *\n     * @return {BaseLayer} Instance of layer.\n     */\n    remove () {\n        this.store().unsubscribe({\n            namespace: `${STATE_NAMESPACES.LAYER_LOCAL_NAMESPACE}.${this.metaInf().namespace}`\n        });\n        selectElement(this.mount()).remove();\n        return this;\n    }\n\n    /**\n     * Stores point in an object with key as the categorical value or temporal value\n     *\n     * @param {string} key categorical value or temporal value\n     * @param {Object} data Information of the data point\n     * @return {BarLayer} Instance of bar layer\n     */\n    cachePoint (key, data) {\n        if (key === null) {\n            return this;\n        }\n        const pointMap = this._pointMap;\n        !pointMap[key] && (pointMap[key] = []);\n        pointMap[key].push(data);\n        return this;\n    }\n\n    /**\n     *\n     *\n     * @param {*} dataProps\n     *\n     * @memberof BaseLayer\n     */\n    dataProps (...dataProps) {\n        if (dataProps.length) {\n            this._dataProps = dataProps[0];\n            return this;\n        }\n        return this._dataProps;\n    }\n\n    /**\n     *\n     *\n     * @param {*} data\n     * @param {*} id\n     *\n     * @memberof BaseLayer\n     */\n    getIdentifiersFromData (data) {\n        const schema = this.data().getData().schema;\n        const fieldsConfig = this.data().getFieldsConfig();\n        const identifiers = [[], []];\n        const {\n                xFieldType,\n                yFieldType,\n                xField,\n                yField\n            } = this.encodingFieldsInf();\n\n        const [xMeasure, yMeasure] = [xFieldType, yFieldType].map(type => type === FieldType.MEASURE);\n        schema.forEach((d, i) => {\n            const name = d.name;\n            if (fieldsConfig[name].def.type === FieldType.DIMENSION) {\n                identifiers[0].push(name);\n                identifiers[1].push(data[i]);\n            }\n        });\n\n        if (xMeasure && yMeasure) {\n            const xMeasureIndex = fieldsConfig[xField].index;\n            const yMeasureIndex = fieldsConfig[yField].index;\n            identifiers[0].push(...[xField, yField]);\n            identifiers[1].push(...[data[xMeasureIndex], data[yMeasureIndex]]);\n        }\n        return identifiers;\n    }\n\n    hasPlotSpan () {\n        return false;\n    }\n\n    getPlotSpan () {\n        return {\n            x: 0,\n            y: 0\n        };\n    }\n\n    getPlotPadding () {\n        return {\n            x: 0,\n            y: 0\n        };\n    }\n\n    /**\n     * Returns the information of the marks corresponding to the supplied identifiers. Identifiers are a set of field\n     * names and their corresponding values in an array. It can also be an instance of datamodel.\n     *\n     * For example,\n     * ```\n     *  const identifiers = [\n     *      ['Origin', 'Cylinders'],\n     *      ['USA', '8']\n     *  ];\n     *  const points = barLayer.getPointsFromIdentifiers(identifiers);\n     * ```\n     * @public\n     * @param {Array|DataModel} identifiers Identifiers of the marks.\n     * @param {Object} config Optional configuration which describes how to get the information.\n     * @param {boolean} config.getAllAttrs If true, then returns all the information of the points, else returns only\n     * the positions of the points.\n     * @param {boolean} config.getBBox If true, then returns the bounding box of all the marks.\n     *\n     * @return {Array} Array of points contains\n     */\n    getPointsFromIdentifiers (identifiers, config = {}) {\n        const getAllAttrs = config.getAllAttrs;\n        const getBBox = config.getBBox;\n        if (!this.data()) {\n            return [];\n        }\n        let fieldNames;\n        let values;\n        if (identifiers instanceof DataModel) {\n            const dataObj = identifiers.getData();\n            fieldNames = dataObj.schema.map(d => d.name);\n            values = dataObj.data;\n        } else {\n            fieldNames = identifiers[0];\n            values = identifiers.slice(1, identifiers.length);\n        }\n\n        const points = this._points;\n        const fieldsConfig = this.data().getFieldsConfig();\n\n        const filteredPoints = [].concat(...points).filter((point) => {\n            const { source, rowId } = point;\n\n            return fieldNames.every((field, idx) => {\n                if (field in fieldsConfig && fieldsConfig[field].def.type === FieldType.DIMENSION) {\n                    return values.findIndex(d => d[idx] === source[fieldsConfig[field].index]) !== -1;\n                } else if (field === ReservedFields.ROW_ID) {\n                    return values.findIndex(d => d[idx] === rowId) !== -1;\n                } return true;\n            });\n        });\n        return getAllAttrs ? filteredPoints : filteredPoints.map((d) => {\n            const obj = clone(d);\n            if (getBBox) {\n                const update = obj.update || obj;\n                if (obj.size !== undefined) {\n                    const sizeVal = Math.sqrt(obj.size / Math.PI) * 2;\n                    update.width = sizeVal;\n                    update.height = sizeVal;\n                    update.x -= sizeVal / 2;\n                    update.y -= sizeVal / 2;\n                } else {\n                    if (update.width === undefined) {\n                        update.width = 2;\n                    }\n                    if (update.height === undefined) {\n                        update.height = 2;\n                    }\n                }\n            }\n\n            return obj.update || obj;\n        }).sort((a, b) => a.y - b.y);\n    }\n\n    getTransformedDataFromIdentifiers (identifiers) {\n        const { data: identifierData, schema: identifierSchema } = identifiers.getData();\n        const normalizedData = this._normalizedData;\n        const fieldsConfig = this.data().getFieldsConfig();\n        const {\n            yField,\n            xField,\n            yFieldType,\n            xFieldType\n        } = this.encodingFieldsInf();\n        let measureIndex;\n        let enc;\n        if (xFieldType === FieldType.MEASURE) {\n            measureIndex = fieldsConfig[xField].index;\n            enc = 'x';\n        } else if (yFieldType === FieldType.MEASURE) {\n            measureIndex = fieldsConfig[yField].index;\n            enc = 'y';\n        }\n\n        const transformedData = [];\n        normalizedData.forEach((dataArr) => {\n            dataArr.forEach((dataObj) => {\n                const tupleArr = dataObj.source;\n                const exist = identifierSchema.every((obj, i) =>\n                    identifierData.findIndex(d => tupleArr[fieldsConfig[obj.name].index] === d[i]) !== -1);\n                if (exist) {\n                    const transformedVal = dataObj[enc];\n                    const row = dataObj.source;\n                    const tuple = {};\n                    for (const key in fieldsConfig) {\n                        const index = fieldsConfig[key].index;\n                        tuple[key] = row[index];\n                        if (index === measureIndex) {\n                            tuple[key] = transformedVal;\n                        }\n                    }\n                    transformedData.push(tuple);\n                }\n            });\n        });\n\n        return [transformedData, this.data().getData().schema];\n    }\n\n    /**\n     * Returns the dom elements associated with the supplied set of row ids.\n     * Each element in the layer is mapped with a row of the datamodel. When given an array of row ids, it returns all\n     * the elements which is mapped with those row ids.\n     *\n     * @public\n     * @param {Array} set Array of row ids\n     *\n     * @return {Selection} D3 Selection of dom elements.\n     */\n    getPlotElementsFromSet (set) {\n        return selectElement(this.mount()).selectAll(this.elemType()).filter(data =>\n            (data ? set.indexOf(data.rowId) !== -1 : false));\n    }\n\n    /**\n     * Notifies when all animations/transitions of the layer are completed.\n     *\n     * @public\n     * @return {Promise} Returns a promise to notify the animation completion.\n     */\n    animationDone () {\n        return Promise.all(this._animationDonePromises);\n    }\n\n    registerAnimationDoneHook () {\n        let resolveFn;\n        const promise = new Promise((resolve) => {\n            resolveFn = resolve;\n        });\n        this._animationDonePromises.push(promise);\n\n        return () => {\n            resolveFn();\n        };\n    }\n\n    getRenderProps () {\n        const metaInf = this.metaInf();\n        if (this.coord() === COORD_TYPES.POLAR) {\n            return [`${STATE_NAMESPACES.GROUP_GLOBAL_NAMESPACE}.domain.radius`];\n        }\n        return [`${STATE_NAMESPACES.GROUP_GLOBAL_NAMESPACE}.domain.y.${metaInf.unitRowIndex}0`,\n            `${STATE_NAMESPACES.GROUP_GLOBAL_NAMESPACE}.domain.x.${metaInf.unitColIndex}0`];\n    }\n}\n","import {\n    selectElement,\n    makeElement,\n    pathInterpolators,\n    Symbols\n} from 'muze-utils';\nimport { updateStyle } from '../../helpers';\n\nconst line = Symbols.line;\n\nconst filterFn = (d) => {\n    const { update } = d;\n    return update.y !== null && update.x !== null;\n};\n\n/**\n * Draws a line from the points\n * Generates a svg path string\n * @param {Object} params Contains container, points and interpolate attribute.\n */\nexport const drawLine = (context) => {\n    let filteredPoints;\n    const { layer, container, points, interpolate, connectNullData, className, style, transition } = context;\n    const mount = selectElement(container).attr('class', className);\n    const curveInterpolatorFn = pathInterpolators[interpolate];\n    const linepath = line()\n                .curve(curveInterpolatorFn)\n                .x(d => d.update.x)\n                .y(d => d.update.y)\n                .defined(filterFn);\n\n    filteredPoints = points;\n    if (connectNullData) {\n        filteredPoints = points.filter(filterFn);\n    }\n\n    updateStyle(mount, style);\n    let element = makeElement(mount, 'path', points.length ? [points[0].className] : []);\n    element.attr('class', d => d);\n    if (!transition.disabled) {\n        element = element.transition()\n        .duration(transition.duration)\n        .on('end', layer.registerAnimationDoneHook());\n    }\n    element.attr('d', linepath(filteredPoints))\n                    .style('fill-opacity', 0);\n    return element;\n};\n","import { CLASSPREFIX } from '../../enums/constants';\n\nexport const defaultConfig = {\n    classPrefix: CLASSPREFIX,\n    defClassName: 'layer-line',\n    className: '',\n    interpolate: 'linear',\n    transform: {\n        type: 'group'\n    },\n    interaction: {\n        highlight: [{\n            type: 'stroke',\n            intensity: [0, 0, -15, 0]\n        }],\n        fade: [{\n            type: 'stroke',\n            intensity: [0, 0, +15, 0]\n        }],\n        focus: [{\n            type: 'stroke',\n            intensity: [0, 0, +15, 0]\n        }]\n    },\n    nearestPointThreshold: 20,\n    encoding: {\n        color: {},\n        x: {},\n        y: {},\n        strokeOpacity: {\n            value: 1\n        }\n    },\n    transition: {\n        effect: 'cubic',\n        duration: 1000\n    },\n    connectNullData: false\n};\n\n","import {\n    Voronoi,\n    getQualifiedClassName,\n    selectElement,\n    makeElement,\n    FieldType,\n    InvalidAwareTypes,\n    getObjProp\n} from 'muze-utils';\nimport { BaseLayer } from '../../base-layer';\nimport { drawLine } from './renderer';\nimport { defaultConfig } from './default-config';\nimport { ENCODING } from '../../enums/constants';\nimport {\n    attachDataToVoronoi,\n    animateGroup,\n    positionPoints,\n    getIndividualClassName,\n    getColorMetaInf,\n    resolveEncodingValues,\n    sortData\n} from '../../helpers';\n\nimport './styles.scss';\n\n/**\n * This layer is used to render straight or smoothed line paths. The mark type of this layer is ```line```.\n *\n * @public\n *\n * @class\n * @module LineLayer\n * @extends BaseLayer\n */\nexport default class LineLayer extends BaseLayer {\n\n    /**\n     * Creates an instance of LineLayer.\n     * @param {*} args\n     * @memberof LineLayer\n     */\n    constructor (...args) {\n        super(...args);\n        this._voronoi = new Voronoi();\n    }\n\n    static formalName () {\n        return 'line';\n    }\n\n    elemType () {\n        return 'path';\n    }\n\n    /**\n     * Default configuration of line layer\n     * @return {Object} Default configuration of layer\n     */\n    static defaultConfig () {\n        return defaultConfig;\n    }\n\n    static defaultPolicy (conf, userConf) {\n        const config = BaseLayer.defaultPolicy(conf, userConf);\n        const encoding = config.encoding;\n        const transform = config.transform;\n        const colorField = encoding.color && encoding.color.field;\n\n        if (colorField && !transform.groupBy) {\n            transform.groupBy = colorField;\n        }\n        return config;\n    }\n\n    /**\n     * Returns the draw method for line\n     * @return {Function} Draw method of line layer\n     */\n    getDrawFn () {\n        return drawLine;\n    }\n\n    static shouldDrawAnchors () {\n        return true;\n    }\n\n    /**\n     * Generates the x and y positions for each point\n     * @param {Array} data Data Array\n     * @param {Object} encoding Visual Encodings of the layer\n     * @param {Object} axes Contains the axis\n     * @param {number} seriesIndex index of series\n     * @return {Array} Array of points\n     */\n    translatePoints (data) {\n        let points = [];\n        const axes = this.axes();\n        const xAxis = axes.x;\n        const yAxis = axes.y;\n        const colorAxis = axes.color;\n        const { xFieldType, yFieldType } = this.encodingFieldsInf();\n        const isXDim = xFieldType === FieldType.DIMENSION;\n        const isYDim = yFieldType === FieldType.DIMENSION;\n        const key = isXDim ? ENCODING.X : (isYDim ? ENCODING.Y : null);\n        sortData(data, axes);\n        points = data.map((d, i) => {\n            const xPx = xAxis.getScaleValue(d.x) + xAxis.getUnitWidth() / 2;\n            const yPx = yAxis.getScaleValue(d.y) + yAxis.getUnitWidth() / 2;\n            const color = colorAxis.getColor(d.color);\n\n            const resolvedEncodings = resolveEncodingValues({\n                values: {\n                    x: xPx,\n                    y: yPx,\n                    color\n                },\n                data: d\n            }, i, data, this);\n\n            const point = {\n                enter: {},\n                update: {\n                    x: d.x instanceof InvalidAwareTypes ? null : resolvedEncodings.x,\n                    y: d.y instanceof InvalidAwareTypes ? null : resolvedEncodings.y\n                },\n                style: {\n                    stroke: resolvedEncodings.color,\n                    'fill-opacity': 0\n                },\n                rowId: d.rowId,\n                source: d.source,\n                meta: getColorMetaInf(resolvedEncodings.color, colorAxis)\n            };\n            point.className = getIndividualClassName(d, i, data, this);\n            this.cachePoint(d[key], point);\n            return point;\n        });\n        points = positionPoints(this, points);\n\n        points = points.filter((point) => {\n            const { update } = point;\n            return !isNaN(update.x) && !isNaN(update.y);\n        });\n        return points;\n    }\n\n    /**\n     * Renders the line plot\n     * @param {SVGElement} container svg element\n     * @return {LineLayer} instance of line layer\n     */\n    render (container) {\n        let points;\n        let seriesClassName;\n        let style;\n\n        const config = this.config();\n        const {\n            encoding,\n            interpolate,\n            className,\n            defClassName,\n            transition\n        } = config;\n        const normalizedData = this._normalizedData;\n        const transformedData = this._transformedData;\n        const fieldsConfig = this.data().getFieldsConfig();\n        const axes = this.axes();\n        const keys = transformedData.map(d => d.key);\n        const qualifiedClassName = getQualifiedClassName(defClassName, this.id(), config.classPrefix);\n        const containerSelection = selectElement(container);\n        const colorField = encoding.color.field;\n        const colorFieldIndex = fieldsConfig[colorField] && fieldsConfig[colorField].index;\n\n        this._points = [];\n        this._pointMap = {};\n        containerSelection.classed(qualifiedClassName.join(' '), true);\n        containerSelection.classed(className, true);\n        makeElement(container, 'g', normalizedData, null, {\n            enter: (group) => {\n                animateGroup(group, {\n                    transition,\n                    groupAnimateStyle: {\n                        enter: {\n                            'stroke-opacity': 0,\n                            'fill-opacity': this.getPathStyle()['fill-opacity']\n                        },\n                        update: {\n                            'stroke-opacity': encoding.strokeOpacity.value\n                        }\n                    }\n                });\n            },\n            update: (group, dataArr, i) => {\n                points = this.translatePoints(dataArr);\n                this._points.push(points);\n                seriesClassName = `${qualifiedClassName[0]}-${keys[i] || i}`.toLowerCase();\n\n                let color;\n                const colorValFn = encoding.color.value;\n                const colorVal = points.find(d => d.source[colorFieldIndex] !== null &&\n                        d.source[colorFieldIndex] !== undefined);\n\n                if (colorValFn) {\n                    color = colorValFn(dataArr, i, normalizedData);\n                } else {\n                    color = axes.color.getColor(colorVal && colorVal.source[colorFieldIndex]);\n                }\n\n                style = this.getPathStyle(color);\n                this.getDrawFn()({\n                    layer: this,\n                    container: group.node(),\n                    interpolate,\n                    points,\n                    className: seriesClassName,\n                    transition,\n                    style: style || {},\n                    connectNullData: config.connectNullData\n                });\n            }\n        }, d => d[0].source[colorFieldIndex] || d[0].rowId);\n\n        attachDataToVoronoi(this._voronoi, this._points);\n        return this;\n    }\n\n    /**\n     * Get the css styles need to be applied on the line path\n     * @param {string} color Color value\n     * @return {Object} Path styles\n     */\n    getPathStyle (color) {\n        return {\n            stroke: color,\n            'fill-opacity': '0'\n        };\n    }\n\n    /**\n     * Gets the nearest point closest to the given position\n     * @param {number} x x position\n     * @param {number} y y position\n     * @return {Object} Nearest point information\n     */\n    getNearestPoint (x, y, config) {\n        let searchRadius = config.searchRadius;\n        const data = this.data();\n\n        if (!data || (data && data.isEmpty())) {\n            return null;\n        }\n\n        searchRadius = searchRadius !== undefined ? searchRadius : this.config().nearestPointThreshold;\n        const point = this._voronoi.find(x, y, searchRadius);\n        const dimensions = getObjProp(point, 'data', 'data', 'update');\n\n        if (point) {\n            const { source, rowId } = point.data.data;\n            const identifiers = this.getIdentifiersFromData(source, rowId);\n            return {\n                id: identifiers,\n                dimensions: [{\n                    x: dimensions.x,\n                    y: dimensions.y,\n                    width: 2,\n                    height: 2\n                }],\n                layerId: this.id()\n            };\n        }\n        return null;\n    }\n}\n","import {\n    easeFns,\n    selectElement,\n    pathInterpolators,\n    Symbols\n} from 'muze-utils';\n\nconst area = Symbols.area;\n/**\n * Draws a line from the points\n * Generates a svg path string\n * @param {Object} params Contains container, points and interpolate attribute.\n */\nconst /* istanbul ignore next */ drawArea = (params) => {\n    let filteredPoints;\n    const { layer, container, points, style, transition, className, connectNullData, interpolate } = params;\n\n    const { effect: easeEffect, duration } = transition;\n    const mount = selectElement(container);\n    const curveInterpolatorFn = pathInterpolators[interpolate];\n    const selection = mount.selectAll('path').data(points.length ? [points[0].className] : []);\n    const [enterAreaPath, updateAreaPath] = ['enter', 'update'].map(e => area().curve(curveInterpolatorFn)\n                    .x(d => d[e].x)\n                    .y1(d => d[e].y)\n                    .y0(d => d[e].y0)\n                    .defined(d => d[e].y !== null\n            ));\n\n    filteredPoints = points;\n    mount.attr('class', className);\n    if (connectNullData) {\n        filteredPoints = points.filter(d => d.update.y !== null);\n    }\n    const selectionEnter = selection.enter().append('path').attr('d', enterAreaPath(filteredPoints));\n    selection.merge(selectionEnter).transition().ease(easeFns[easeEffect])\n                    .duration(duration)\n                    .on('end', layer.registerAnimationDoneHook())\n                    .attr('d', updateAreaPath(filteredPoints))\n                    .each(function (d) {\n                        const element = selectElement(this);\n                        element.attr('class', d);\n                        Object.keys(style).forEach(key => element.style(key, style[key]));\n                    });\n};\n\nexport default drawArea;\n","import { FieldType, InvalidAwareTypes } from 'muze-utils';\nimport { defaultConfig } from './default-config';\nimport { LineLayer } from '../line';\nimport drawArea from './renderer';\nimport './styles.scss';\nimport { STACK, ENCODING } from '../../enums/constants';\nimport {\n    getAxesScales,\n    positionPoints,\n    getIndividualClassName,\n    getValidTransformForAggFn,\n    getColorMetaInf,\n    resolveEncodingValues,\n    sortData\n} from '../../helpers';\n\n/**\n * Area layer renders a closed path. The mark type of this layer is ```area```. This layer can be used\n * to create stacked or multi-series areas and vertical range area plots by using the encoding properties.\n *\n * To create this layer using layer configuration from canvas,\n * ```\n *      canvas.layers([{\n *          mark: 'area',\n *          transform: {\n *              type: 'stack' // Produces a stacked area.\n *          }\n *      }]);\n * ```\n *\n * @public\n *\n * @class\n * @module AreaLayer\n * @extends LineLayer\n */\nexport default class AreaLayer extends LineLayer {\n    /** oation of line layer\n     * @return {Object} Default configuration of layer\n     */\n    static defaultConfig () {\n        return defaultConfig;\n    }\n\n    /**\n     *\n     *\n     * @static\n     *\n     * @memberof AreaLayer\n     */\n    static formalName () {\n        return 'area';\n    }\n\n    /**\n     * Calculates the domain from data. It calls its parent class's method which is line layer\n     * to get the domain and overwrites the domain according to its need.\n     * @return {Array} Domain values\n     */\n    calculateDomainFromData (data, encodingFieldsInf, fieldsConfig) {\n        const domains = super.calculateDomainFromData(data, fieldsConfig);\n        [ENCODING.X, ENCODING.Y].forEach((type) => {\n            const { [`${type}FieldType`]: fieldType } = encodingFieldsInf;\n            if (fieldType === FieldType.MEASURE && domains[type] !== undefined) {\n                domains[type][0] = Math.min(domains[type][0], 0);\n                domains[type][1] = Math.max(0, domains[type][1]);\n            }\n        });\n        return domains;\n    }\n\n    /**\n     * Returns the drawing method of this layer\n     * @return {Function} Draw method\n     */\n    getDrawFn () {\n        return drawArea;\n    }\n\n    /**\n     * Generates the x and y positions for each point\n     * @param {Array} data Data Array\n     * @param {Object} encoding Visual Encodings of the layer\n     * @param {Object} axes Contains the axis\n     * @return {Array} Array of points\n     */\n    translatePoints (data) {\n        let points = [];\n        const transformType = this.transformType();\n        const axes = this.axes();\n        const colorAxis = axes.color;\n        const config = this.config();\n        const fieldsConfig = this.data().getFieldsConfig();\n        const { xField, yField, y0Field } = this.encodingFieldsInf();\n        const {\n            xAxis,\n            yAxis\n       } = getAxesScales(axes);\n        const classNameFn = config.individualClassName;\n        const isXDim = fieldsConfig[xField] && fieldsConfig[xField].def.type === FieldType.DIMENSION;\n        const isYDim = fieldsConfig[yField] && fieldsConfig[yField].def.type === FieldType.DIMENSION;\n        const key = isXDim ? 'x' : (isYDim ? 'y' : null);\n        const minYVal = yAxis.domain()[0];\n        const basePos = minYVal < 0 ? yAxis.getScaleValue(0) : yAxis.getScaleValue(minYVal);\n        sortData(data, axes);\n        points = data.map((d, i) => {\n            let color;\n            const xPx = xAxis.getScaleValue(d.x) + xAxis.getUnitWidth() / 2;\n            const yPx = yAxis.getScaleValue(d.y);\n            const y0Px = (y0Field || transformType === STACK) ? yAxis.getScaleValue(d.y0) : basePos;\n            color = colorAxis.getColor(d.color);\n            const invalidY = d.y instanceof InvalidAwareTypes;\n            const invalidY0 = d.y0 instanceof InvalidAwareTypes;\n            const resolvedValues = resolveEncodingValues({\n                values: {\n                    x: xPx,\n                    y: yPx,\n                    y0: y0Px,\n                    color\n                },\n                data: d\n            }, i, data, this);\n            color = resolvedValues.color;\n            const point = {\n                enter: {\n                    x: xPx,\n                    y: invalidY ? null : basePos,\n                    y0: invalidY0 ? null : basePos\n                },\n                update: {\n                    x: xPx,\n                    y: invalidY ? null : resolvedValues.y,\n                    y0: invalidY0 ? null : resolvedValues.y0\n                },\n                source: d.source,\n                rowId: d.rowId,\n                className: classNameFn ? classNameFn(d, i, data, this) : '',\n                style: {\n                    fill: color\n                },\n                meta: getColorMetaInf(color, colorAxis)\n            };\n            point.className = getIndividualClassName(d, i, data, this);\n            this.cachePoint(d[key], point);\n            return point;\n        });\n        points = positionPoints(this, points);\n        points = points.filter((point) => {\n            const update = point.update;\n            return !isNaN(update.x) && !isNaN(update.y);\n        });\n        return points;\n    }\n\n    resolveTransformType () {\n        this._transformType = getValidTransformForAggFn(this);\n    }\n\n    /**\n     * Get the css styles need to be applied on the line path\n     * @param {string} color Color value\n     * @return {Object} Path styles\n     */\n    getPathStyle (color) {\n        return {\n            fill: color\n        };\n    }\n}\n\n","import { CLASSPREFIX } from '../../enums/constants';\n\nexport const defaultConfig = {\n    classPrefix: CLASSPREFIX,\n    defClassName: 'layer-arc',\n    padding: { top: 1, bottom: 1, left: 1, right: 1 },\n    className: '',\n    interaction: {\n        highlight: [{\n            type: 'fill',\n            intensity: [0, 0, -15, 0]\n        }],\n        fade: [{\n            type: 'fill',\n            intensity: [0, 0, +15, 0]\n        }],\n        focus: [{\n            type: 'fill',\n            intensity: [0, 0, +15, 0]\n        }]\n    },\n    height: 100,\n    width: 100,\n    sort: '',\n    colors: ['#F44336', 'blue', 'green', 'yellow', 'orange', 'purple'],\n    transform: {\n        type: 'identity'\n    },\n    encoding: {\n        'stroke-width': {\n            value: '2px'\n        },\n        'stroke-linejoin': {\n            value: 'round'\n        },\n        angle: {\n            value: '1'\n        },\n        radius: {\n            value: '1'\n        },\n        opacity: {\n            value: '1'\n        },\n        color: {\n            value: '1'\n        },\n        shape: {\n            value: '1'\n        },\n        size: {\n            value: '1'\n        }\n    },\n    transition: {\n        effect: 'cubic',\n        duration: 500\n    },\n    states: {\n        highlight: {\n            className: `${CLASSPREFIX}-layer-arc-highlight`\n        },\n        fadeout: {\n            className: `${CLASSPREFIX}-layer-arc-fadeout`\n        },\n        selected: {\n            className: `${CLASSPREFIX}-layer-arc-selected`\n        }\n    }\n};\n\n","import {\n    makeElement,\n    selectElement,\n    getQualifiedClassName,\n    isSimpleObject,\n    Symbols,\n    FieldType,\n    ReservedFields\n} from 'muze-utils';\nimport { defaultConfig } from './default-config';\nimport { BaseLayer } from '../../base-layer';\nimport { getIndividualClassName, resolveEncodingValues, getColorMetaInf } from '../../helpers';\nimport { tweenPie, tweenExitPie, getPreviousPoint } from './arc-helper';\nimport './styles.scss';\n\nconst arc = Symbols.arc;\n\n/**\n * Arc Layer creates a plot with polar coordinates.\n *\n * @public\n *\n * @class\n * @module ArcLayer\n * @extends BaseLayer\n */\nexport default class ArcLayer extends BaseLayer {\n\n    constructor (data, axes, config, dependencies) {\n        super(data, axes, config, dependencies);\n        this._prevPieData = {};\n    }\n\n    /**\n     * returns the default configuration of the layer\n     *\n     * @static\n     * @return {Object} Default configuration for arc layer\n     * @memberof ArcLayer\n     */\n    static defaultConfig () {\n        return defaultConfig;\n    }\n\n    static formalName () {\n        return 'arc';\n    }\n\n    elemType () {\n        return 'path';\n    }\n\n    /**\n     *\n     *\n     * @param {Object} x\n     * @param {Object} y\n     * @return {}\n     * @memberof ArcLayer\n     */\n    getNearestPoint (x, y, config = {}) {\n        const dataPoint = selectElement(config.event.target).data()[0];\n        if (isSimpleObject(dataPoint)) {\n            const { source, rowId } = dataPoint;\n            return {\n                id: this.getIdentifiersFromData(source, rowId),\n                layerId: this.id()\n            };\n        }\n        return null;\n    }\n\n    /**\n     *\n     *\n     * @param {*} set\n     *\n     * @memberof ArcLayer\n     */\n    getPlotElementsFromSet (set) {\n        return selectElement(this.mount()).selectAll(this.elemType()).filter(d => set.indexOf(d.rowId) !== -1);\n    }\n\n    translatePoints (data) {\n        const { angle, color: colorAxis, radius: radiusAxis } = this.axes();\n        const pieIndex = {};\n        const prevData = this._points[0] || [];\n        const points = [];\n        const angleV = {};\n\n        this._prevPieData = {};\n        prevData.forEach((e, index) => {\n            this._prevPieData[e.rowId] = [e, index];\n            pieIndex[e.index] = e;\n        });\n        data.forEach((d, i) => {\n            const angles = angle.getScaleValue(d.angle);\n            !angleV[d.angle] && (angleV[d.angle] = 0);\n            const { startAngle, endAngle } = angles[angleV[d.angle]++];\n            const uid = d.rowId;\n            const resolvedEncodings = resolveEncodingValues({\n                values: {\n                    radius: radiusAxis.getOuterRadius(d.radius),\n                    radius0: radiusAxis.getInnerRadius(d.radius0),\n                    color: colorAxis.getColor(d.color),\n                    angle0: startAngle,\n                    angle: endAngle,\n                    startAngle,\n                    endAngle,\n                    startAngle0: startAngle,\n                    endAngle0: endAngle\n                },\n                data: d\n            }, i, data, this);\n            const color = resolvedEncodings.color;\n            points.push({\n                source: d.source,\n                index: i,\n                angle0: resolvedEncodings.angle0,\n                angle: resolvedEncodings.angle,\n                radius0: resolvedEncodings.radius0,\n                radius: resolvedEncodings.radius,\n                color,\n                meta: getColorMetaInf(resolvedEncodings.color, colorAxis),\n                rowId: uid,\n                _previousInfo: this._prevPieData[uid] ? this._prevPieData[uid][0] :\n                    getPreviousPoint(pieIndex, i, this)\n            });\n        });\n        return points;\n    }\n\n    /**\n     *\n     *\n     * @param {Object} container\n     * @return {}\n     * @memberof ArcLayer\n     */\n    render (container) {\n        const measurement = this.measurement();\n        const {\n            classPrefix,\n            defClassName,\n            cornerRadius,\n            padAngle,\n            padRadius,\n            transition\n       } = this.config();\n        const qualClassName = getQualifiedClassName(defClassName, this.id(), classPrefix);\n        // This returns a function that generates the arc path based on the datum provided\n        const path = this._arcFn = arc()\n                .cornerRadius(cornerRadius)\n                .startAngle(d => d.angle0 + Math.PI / 2)\n                .endAngle(d => d.angle + Math.PI / 2)\n                .padAngle(padAngle)\n                .padRadius(padRadius)\n                .outerRadius(d => d.radius)\n                .innerRadius(d => d.radius0);\n\n        this._points = this._normalizedData.map(arr => this.translatePoints(arr));\n\n        // Creating the group that holds all the arcs\n        const g = makeElement(selectElement(container), 'g', this._points, `${qualClassName[0]}-group`)\n                .classed(`${qualClassName[1]}-group`, true)\n                .attr('transform', `translate(${measurement.width / 2},\n                    ${measurement.height / 2})`);\n        const tween = (elem) => {\n            makeElement(elem, 'path', d => [d], `${qualClassName[0]}-path`)\n                            .style('fill', d => d.color)\n                            .transition()\n                            .duration(transition.duration)\n                            .on('end', this.registerAnimationDoneHook())\n                            .attrTween('d', (...params) => tweenPie(path, params))\n                            .attr('class', (d, i) => {\n                                const individualClass = getIndividualClassName(d, i, this._points, this);\n                                return `${qualClassName[0]}-path ${qualClassName[1]}-path-${d.index}\n                                    ${individualClass}`;\n                            });\n        };\n        const consecutiveExits = [];\n        let exitCounter = 0;\n        const tweenExit = (elem, d) => {\n            let exitArr = consecutiveExits[exitCounter];\n            const oldExitCounter = exitCounter;\n            if (!exitArr) {\n                exitArr = [{ elem, datum: d }];\n            } else if (exitArr[exitArr.length - 1].datum.index === d.index - 1) {\n                exitArr.push({ elem, datum: d });\n            } else {\n                exitCounter++;\n            }\n            consecutiveExits[oldExitCounter] = exitArr;\n        };\n        // Creating groups for all the arcs present individually\n        makeElement(g, 'g', d => d, `${qualClassName[0]}`,\n            {\n                update: tween,\n                exit: tweenExit\n            })\n                        .attr('class', (d, i) => `${qualClassName[0]} ${qualClassName[1]}-${i}`);\n        tweenExitPie(consecutiveExits, transition, path);\n        return this;\n    }\n\n    getPointsFromIdentifiers (identifiers) {\n        if (!this.data()) {\n            return [];\n        }\n        const fieldNames = identifiers[0];\n        const values = identifiers.slice(1, identifiers.length);\n        const pieSlices = selectElement(this.mount()).selectAll('path').data();\n        const fieldsConfig = this.data().getFieldsConfig();\n\n        const filteredPies = pieSlices.filter((tData) => {\n            const { source, rowId } = tData;\n            return fieldNames.every((field, idx) => {\n                if (field in fieldsConfig && fieldsConfig[field].def.type === FieldType.DIMENSION) {\n                    return values.findIndex(d => d[idx] === source[fieldsConfig[field].index]) !== -1;\n                } else if (field === ReservedFields.ROW_ID) {\n                    return values.findIndex(d => d[idx] === rowId) !== -1;\n                } return true;\n            });\n        });\n\n        const pieSliceInf = filteredPies[0];\n        if (pieSliceInf) {\n            const measurement = this.measurement();\n            const centroid = this._arcFn.centroid(pieSliceInf);\n            return [{\n                x: centroid[0] + measurement.width / 2,\n                y: centroid[1] + measurement.height / 2,\n                width: 2,\n                height: 2\n            }];\n        }\n        return [];\n    }\n}\n","import { getObjProp, interpolator, FieldType, selectElement } from 'muze-utils';\nimport { ANGLE, RADIUS, SIZE, COLOR } from '../../enums/constants';\n\nexport const getPreviousPoint = (prevData, currIndex, context) => {\n    const prevArc = prevData[currIndex - 1];\n    const nextArc = prevData[currIndex];\n    const [startAngle, endAngle] = context.axes().angle.range();\n    if (prevArc && nextArc) {\n        return {\n            angle0: prevArc.angle,\n            angle: nextArc.angle0\n        };\n    } else if (!nextArc) {\n        return {\n            angle0: (endAngle - 90) * Math.PI * 2 / 360,\n            angle: (endAngle - 90) * Math.PI * 2 / 360\n        };\n    }\n    return {\n        angle0: (startAngle - 90) * Math.PI * 2 / 360,\n        angle: (startAngle - 90) * Math.PI * 2 / 360\n    };\n};\n\nexport const tweenPie = (path, b) => {\n    const datum = b[0];\n    return function (t) {\n        return path(interpolator()(datum._previousInfo, datum)(t));\n    };\n};\n\nexport const tweenExitPie = (consecutiveExits, transition, path) => {\n    if (consecutiveExits.length > 0) {\n        consecutiveExits.forEach((consecutiveExitArr) => {\n            const startAngle = consecutiveExitArr[0].datum.angle0;\n            const endAngle = consecutiveExitArr[consecutiveExitArr.length - 1].datum.angle;\n            const mid = (Math.PI * 2 * startAngle) / ((Math.PI * 2) + startAngle - endAngle);\n\n            consecutiveExitArr.forEach((e) => {\n                const { elem, datum } = e;\n\n                elem.each(function () {\n                    const gElem = selectElement(this);\n                    gElem.selectAll('path')\n                                    .transition()\n                                    .duration(transition.duration)\n                                    .attrTween('d', () => function (t) {\n                                        return path(interpolator()(datum, {\n                                            startAngle: mid,\n                                            endAngle: mid,\n                                            outerRadius: datum.outerRadius\n                                        })(t));\n                                    })\n                                    .remove();\n                    gElem.remove();\n                });\n            });\n        });\n    }\n};\n\nexport const getFieldIndices = (encoding, fieldsConfig) => {\n    const [angleField, radiusField, colorField, sizeField] = [ANGLE, RADIUS, COLOR, SIZE]\n            .map(e => encoding[e].field);\n    const [angleIndex, sizeIndex, radiusIndex] = [angleField, sizeField, radiusField]\n        .map((e) => {\n            const conf = fieldsConfig[e];\n            if (conf && conf.def.type === FieldType.MEASURE) {\n                return conf.index;\n            }\n            return null;\n        });\n    const colorIndex = getObjProp(fieldsConfig, colorField, 'index');\n    return {\n        angleIndex,\n        sizeIndex,\n        radiusIndex,\n        colorIndex\n    };\n};\n","import {\n    setAttrs,\n    setStyles,\n    selectElement,\n    makeElement,\n    getSmartComputedStyle\n} from 'muze-utils';\n\n/**\n * Draws svg text in the specified container.\n * @param {SVGElement} container Container where labels will be appended.\n * @param {Array.<Object>} data Data of the elements.\n * @return {Selection} d3 selection of the elements.\n */\nconst drawText = (container, data, config, smartLabel) => {\n    const selection = selectElement(container).selectAll('g').data(data);\n\n    const selectionMerge = selection.enter().append('g')\n        .each(function (dataObj) {\n            setAttrs(this, dataObj.enter);\n        })\n        .merge(selection);\n    const style = getSmartComputedStyle(selectElement(container), config.className);\n    const fontSize = parseInt(style.fontSize, 10);\n\n    smartLabel.setStyle(style);\n    selectionMerge.each(function (dataObj) {\n        const element = selectElement(this);\n        const { update, text, color, textanchor, style: textStyle } = dataObj;\n        const background = dataObj.background;\n        let backgroundVal;\n        if (backgroundVal = background.value) {\n            const backgroundPadding = background.padding;\n            let diff;\n            const { width, height } = smartLabel.getOriSize(dataObj.text);\n            const backgroundEl = makeElement(element, 'rect', [1]);\n\n            if (textanchor === 'end') {\n                diff = width;\n            } else if (textanchor === 'start') {\n                diff = 0;\n            } else {\n                diff = width / 2;\n            }\n\n            setAttrs(backgroundEl.node(), {\n                x: update.x - diff - backgroundPadding / 2,\n                y: update.y - fontSize - backgroundPadding / 2,\n                width: width + backgroundPadding,\n                height: height + backgroundPadding\n            });\n            background && setStyles(backgroundEl, {\n                background: backgroundVal\n            });\n        }\n        const textEl = makeElement(element, 'text', d => [d]).text(text);\n        const textNode = textEl.node();\n        textStyle && setStyles(textNode, textStyle);\n        color && setStyles(textNode, {\n            fill: color\n        });\n        dataObj.className && textEl.classed(dataObj.className, true);\n        setAttrs(textNode, update);\n        textEl.attr('text-anchor', textanchor);\n        textEl.attr('alignment-baseline', dataObj['alignment-baseline']);\n        textEl.attr('transform', `rotate(${dataObj.rotation} ${update.x} ${update.y})`);\n    });\n    selection.exit().remove();\n    return selection;\n};\n\nexport default drawText;\n","import { CLASSPREFIX } from '../../enums/constants';\n\nexport const defaultConfig = {\n    defClassName: 'layer-text',\n    classPrefix: CLASSPREFIX,\n    className: '',\n    transform: {\n        type: 'identity'\n    },\n    interaction: {\n        highlight: [{\n            type: 'fill',\n            intensity: [0, 0, -15, 0]\n        }],\n        fade: [{\n            type: 'fill',\n            intensity: [0, 0, +15, 0]\n        }],\n        focus: [{\n            type: 'fill',\n            intensity: [0, 0, +15, 0]\n        }]\n    },\n    transition: {\n        effect: 'cubic',\n        duration: 1000\n    },\n    encoding: {\n        color: {},\n        size: {},\n        radius: {},\n        angle: {},\n        text: {\n            value: '',\n            formatter: (val, i, data, context) => {\n                const valueParser = context.valueParser();\n                return valueParser(val);\n            },\n            background: {\n                padding: 10\n            }\n        },\n        rotation: {\n            value: 0\n        },\n        'alignment-baseline': {\n            value: 'middle'\n        }\n    },\n    states: {\n        highlight: {\n            className: `${CLASSPREFIX}-layer-text-highlight`\n        },\n        fadeout: {\n            className: `${CLASSPREFIX}-layer-text-fadeout`\n        },\n        selected: {\n            className: `${CLASSPREFIX}-layer-text-selected`\n        }\n    }\n};\n","import {\n    getQualifiedClassName,\n    selectElement,\n    setStyles,\n    createElements\n} from 'muze-utils';\nimport { BaseLayer } from '../../base-layer';\nimport drawText from './renderer';\nimport { defaultConfig } from './default-config';\nimport { positionPoints, getIndividualClassName, resolveEncodingValues, getColorMetaInf, toCartesianCoordinates }\n    from '../../helpers';\nimport { TEXT_ANCHOR_MIDDLE, ENCODING } from '../../enums/constants';\n\nimport './styles.scss';\n\nconst defaultEncoding = defaultConfig.encoding;\nconst alignmentBaseLine = defaultEncoding['alignment-baseline'].value;\nconst defRotation = defaultEncoding.rotation.value;\n\nconst pointTranslators = {\n    polar: (data, config, layerInst) => {\n        let points = [];\n        const axes = layerInst.axes();\n        const encoding = layerInst.config().encoding;\n        const textEncoding = encoding.text;\n        const { radius: radiusAxis, color: colorAxis, angle: angleAxis } = axes;\n        const { formatter: textFormatter } = textEncoding;\n        const backgroundEncoding = encoding.text.background;\n        const backgroundPadding = backgroundEncoding.padding;\n        const backgroundValue = backgroundEncoding.value;\n        const angleV = {};\n        for (let i = 0, len = data.length; i < len; i++) {\n            const d = data[i];\n            const source = d.source;\n            const text = d.text;\n\n            const color = colorAxis.getColor(d.color);\n            const radius = radiusAxis.getOuterRadius(d.radius);\n            const angles = angleAxis.getScaleValue(d.angle);\n            !angleV[d.angle] && (angleV[d.angle] = 0);\n            const { startAngle, endAngle } = angles[angleV[d.angle]++];\n\n            const angle = (startAngle + endAngle) / 2;\n            const resolvedVal = resolveEncodingValues({\n                values: {\n                    angle,\n                    radius,\n                    color,\n                    text,\n                    startAngle,\n                    endAngle,\n                    rotation: defRotation,\n                    'alignment-baseline': alignmentBaseLine\n                },\n                data: d\n            }, i, data, layerInst);\n            const point = {\n                enter: {},\n                update: {\n                    angle: resolvedVal.angle,\n                    radius: resolvedVal.radius\n                },\n                text: textFormatter ? textFormatter(text, i, data, layerInst) : resolvedVal.text,\n                color: resolvedVal.color,\n                rotation: resolvedVal.rotation,\n                background: {\n                    value: backgroundValue instanceof Function ? backgroundValue(d, i, data, layerInst) : null,\n                    padding: backgroundPadding\n                },\n                'alignment-baseline': resolvedVal['alignment-baseline'],\n                meta: getColorMetaInf(resolvedVal.color, colorAxis),\n                style: {},\n                source,\n                rowId: d.rowId\n            };\n\n            point.className = getIndividualClassName(d, i, data, layerInst);\n            points.push(point);\n        }\n\n        points = toCartesianCoordinates(positionPoints(layerInst, points), layerInst.measurement());\n\n        points = points.filter((d) => {\n            const update = d.update;\n            return !isNaN(update.x) && !isNaN(update.y);\n        });\n        return points;\n    },\n    cartesian: (data, config, layerInst) => {\n        let points = [];\n        const axes = layerInst.axes();\n        const colorAxis = axes.color;\n        const encoding = layerInst.config().encoding;\n        const textEncoding = encoding.text;\n        const { field: textField, value, formatter: textFormatter } = textEncoding;\n        const fieldsConfig = layerInst.data().getFieldsConfig();\n\n        const backgroundEncoding = encoding.text.background;\n        const backgroundPadding = backgroundEncoding.padding;\n        const backgroundValue = backgroundEncoding.value;\n        const textFieldIndex = textField ? fieldsConfig[textField] && fieldsConfig[textField].index : -1;\n        const xEnc = ENCODING.X;\n        const yEnc = ENCODING.Y;\n        for (let i = 0, len = data.length; i < len; i++) {\n            const d = data[i];\n            const row = d.source;\n            const textValue = textField ? row[textFieldIndex] : value;\n\n            const [xPx, yPx] = [xEnc, yEnc].map(type => (axes[type] ? axes[type].getScaleValue(d[type]) +\n                    axes[type].getUnitWidth() / 2 : 0));\n\n            const color = colorAxis.getColor(d.color, colorAxis);\n            const resolvedEncodings = resolveEncodingValues({\n                values: {\n                    x: xPx,\n                    y: yPx,\n                    text: textValue,\n                    color,\n                    rotation: defRotation,\n                    'alignment-baseline': alignmentBaseLine\n                },\n                data: d\n            }, i, data, layerInst);\n            const point = {\n                enter: {},\n                update: {\n                    x: resolvedEncodings.x,\n                    y: resolvedEncodings.y\n                },\n                text: textFormatter(resolvedEncodings.text, i, data, layerInst),\n                color: resolvedEncodings.color,\n                background: {\n                    value: backgroundValue instanceof Function ? backgroundValue(d, i, data, layerInst) : null,\n                    padding: backgroundPadding\n                },\n                'alignment-baseline': resolvedEncodings['alignment-baseline'],\n                rotation: resolvedEncodings.rotation,\n                meta: getColorMetaInf(resolvedEncodings.color, colorAxis),\n                style: {},\n                source: d.source,\n                rowId: d.rowId\n            };\n\n            point.className = getIndividualClassName(d, i, data, layerInst);\n            points.push(point);\n        }\n\n        points = positionPoints(layerInst, points);\n        points = points.filter((d) => {\n            const update = d.update;\n            return !isNaN(update.x) && !isNaN(update.y);\n        });\n        return points;\n    }\n};\n\n/**\n * This layer is used to create labels for each data point. It has an encoding property ```text```\n * which determines from which field's data the value of the label will be taken. The text encoding\n * property is necessary for the layer to render the text.The mark type of this layer is ```text```.\n *\n * @public\n *\n * @class\n * @module TextLayer\n * @extends BaseLayer\n */\nexport default class TextLayer extends BaseLayer {\n    /**\n     * Returns the default configuration of the text layer\n     * @return {Object} Default configuration of the text layer\n     */\n    static defaultConfig () {\n        return defaultConfig;\n    }\n\n    static formalName () {\n        return 'text';\n    }\n\n    elemType () {\n        return 'text';\n    }\n\n    getPointTranslator (val) {\n        return pointTranslators[val];\n    }\n\n    /**\n     * Generates an array of objects containing x, y, width and height of the points from the data\n     * @param  {Array.<Array>} data Data Array\n     * @param  {Object} encoding  Config\n     * @param  {Object} axes     Axes object\n     * @return {Array.<Object>}  Array of points\n     */\n    translatePoints (data, config = {}) {\n        return pointTranslators[this.coord()](data, config, this);\n    }\n\n    /**\n     * Renders the plot in the given container\n     * @param  {SVGElement} container SVGElement which will hold the plot\n     * @return {textLayer} Instance of text layer\n     */\n    render (container) {\n        const config = this.config();\n        const normalizedData = this._normalizedData;\n        const className = config.className;\n        const qualifiedClassName = getQualifiedClassName(config.defClassName, this.id(), config.classPrefix);\n        const containerSelection = selectElement(container);\n\n        containerSelection.classed(`${qualifiedClassName.join(' ')} ${className}`, true);\n        createElements({\n            data: normalizedData,\n            append: 'g',\n            selector: 'g',\n            container,\n            each: (dataArr, group) => {\n                const node = group.node();\n                const points = this.translatePoints(dataArr, {}, this);\n                setStyles(node, {\n                    'text-anchor': TEXT_ANCHOR_MIDDLE\n                });\n                drawText(node, points, {\n                    className: qualifiedClassName[0]\n                }, this._dependencies.smartLabel);\n            }\n        });\n        return this;\n    }\n}\n","/* global Element, document  */\nimport {\n    makeElement,\n    selectElement,\n    easeFns,\n    objectIterator,\n    getSymbol\n} from 'muze-utils';\n\n/**\n *\n *\n * @param {*} str\n *\n */\nconst checkPath = (str) => {\n    if (/^[mzlhvcsqta]\\s*[-+.0-9][^mlhvzcsqta]+/i.test(str) && /[\\dz]$/i.test(str) && str.length > 4) {\n        return true;\n    }\n    return false;\n};\n\n/**\n *\n *\n * @param {*} d\n * @param {*} elem\n */\nconst createShape = function (d, groupElement) {\n    const { shape, size, update } = d;\n\n    if (shape instanceof Promise) {\n        shape.then((res) => {\n            d.shape = res;\n            createShape(d, groupElement);\n        });\n    } else if (shape instanceof Element) {\n        let newShape = shape.cloneNode(true);\n\n        if (newShape.nodeName.toLowerCase() === 'img') {\n            const src = newShape.src || newShape.href;\n            newShape = document.createElementNS('http://www.w3.org/2000/svg', 'image');\n            newShape.setAttribute('href', src);\n        }\n        const shapeElement = selectElement(newShape);\n        if (newShape.nodeName === 'path' || newShape.nodeName === 'image') {\n            shapeElement.attr('transform', `scale(${size / 100})`);\n        } else {\n            shapeElement.attr('height', size);\n            shapeElement.attr('width', size);\n        }\n        shapeElement.attr('x', -size / 2);\n        shapeElement.attr('y', -size / 2);\n        makeElement(groupElement, () => newShape, [1]);\n    } else if (typeof shape === 'string') {\n        let pathStr;\n        if (checkPath(shape)) {\n            pathStr = shape;\n        } else {\n            pathStr = getSymbol(shape).size(size)(update);\n        }\n        makeElement(groupElement, 'path', data => [data]).attr('d', pathStr);\n    } else {\n        d.shape = 'circle';\n        createShape(d, groupElement);\n    }\n};\n\n/**\n * Draws symbols using d3 symbol api\n * @param {Object} params Contains the svg container, points and other symbol related attributes.\n */\n/* istanbul ignore next */ const drawSymbols = (params) => {\n    const { layer, container, points, transition, className } = params;\n    const { duration, effect, disabled } = transition;\n    const mount = selectElement(container);\n\n    mount.attr('class', className);\n    return makeElement(mount, 'g', points, null, {\n        enter: (group, d) => {\n            const { enter } = d;\n            group.attr('transform', `translate(${enter.x},${enter.y})`);\n        },\n        update: (group, d) => {\n            createShape(d, group);\n            const { update, style } = d;\n            objectIterator(style, key => group.style(key, style[key]));\n            group.attr('class', className);\n            group.classed(d.className, true);\n            if (!disabled) {\n                group = group.transition()\n                    .duration(transition.duration)\n                    .on('end', layer.registerAnimationDoneHook());\n            }\n            group.attr('transform', `translate(${update.x},${update.y})`);\n        },\n        exit: (exitGroup) => {\n            if (!disabled) {\n                exitGroup.transition().ease(easeFns[effect])\n                .duration(duration)\n                .on('end', () => exitGroup.remove())\n                .style('fill-opacity', 0)\n                .style('stroke-opacity', 0);\n            } else {\n                exitGroup.remove();\n            }\n        }\n    }, params.keyFn);\n};\n\nexport default drawSymbols;\n","import { CLASSPREFIX } from '../../enums/constants';\n\nexport const defaultConfig = {\n    defClassName: 'layer-point',\n    className: '',\n    classPrefix: CLASSPREFIX,\n    defColorStyle: 'stroke',\n    interaction: {\n        highlight: [{\n            type: 'fill',\n            intensity: [0, 0, -20, 0]\n        }],\n        fade: [{\n            type: 'fill',\n            intensity: [0, 0, +20, 0]\n        }],\n        focus: [{\n            type: 'fill',\n            intensity: [0, 0, +20, 0]\n        }\n        ]\n    },\n    innerPadding: 0.1,\n    nearestPointThreshold: 10,\n    transform: {\n        type: 'identity'\n    },\n    transition: {\n        effect: 'cubic',\n        duration: 1000\n    },\n    encoding: {\n        size: {\n            value: 30\n        },\n        color: { },\n        shape: {\n            value: 'circle'\n        },\n        x: {},\n        y: {},\n        strokeOpacity: {\n            value: 0.5\n        },\n        fillOpacity: {\n            value: 0.5\n        }\n    },\n    shapes: ['circle', 'cross', 'diamond', 'square', 'star', 'wye', 'triangle'],\n    sizes: [20, 30, 40, 50, 60, 70]\n};\n","import {\n    Voronoi,\n    selectElement,\n    getQualifiedClassName,\n    makeElement,\n    FieldType,\n    Scales\n} from 'muze-utils';\nimport { BaseLayer } from '../../base-layer';\nimport drawSymbols from './renderer';\nimport { defaultConfig } from './default-config';\nimport { ENCODING } from '../../enums/constants';\nimport {\n    attachDataToVoronoi,\n    positionPoints,\n    getPlotMeasurement,\n    getIndividualClassName,\n    getMarkId,\n    getColorMetaInf,\n    resolveEncodingValues\n} from '../../helpers';\n\nimport './styles.scss';\n\n/**\n * This layer is used to create various symbols for each data point. This is commonly used in\n * scatterplot visualizations. The mark type of this layer is ```point```.\n *\n * @public\n *\n * @class\n * @module PointLayer\n * @extends BaseLayer\n */\nexport default class PointLayer extends BaseLayer {\n\n    /**\n     * Creates an instance of PointLayer.\n     * @param {*} args\n     * @memberof PointLayer\n     */\n    constructor (...args) {\n        super(...args);\n        this._voronoi = new Voronoi();\n        this._bandScale = Scales.band();\n    }\n\n    elemType () {\n        return 'g';\n    }\n\n    /**\n     * Returns the default configuration of the point layer\n     * @return {Object} Default configuration of the point layer\n     */\n    static defaultConfig () {\n        return defaultConfig;\n    }\n\n    static defaultPolicy (conf, userConf) {\n        const config = BaseLayer.defaultPolicy(conf, userConf);\n        const encoding = config.encoding;\n        const transform = config.transform;\n        const colorField = encoding.color && encoding.color.field;\n\n        if (colorField) {\n            transform.groupBy = colorField;\n        }\n        return config;\n    }\n\n    static formalName () {\n        return 'point';\n    }\n\n    static drawFn () {\n        return drawSymbols;\n    }\n\n    /**\n     * Generates an array of objects containing x, y, width and height of the points from the data\n     * @param  {Array.<Array>} data Data Array\n     * @param  {Object} encoding  Config\n     * @param  {Object} axes     Axes object\n     * @return {Array.<Object>}  Array of points\n     */\n    translatePoints (data, config = {}) {\n        let points = [];\n        const encoding = this.config().encoding;\n        const axes = this.axes();\n        const {\n            x,\n            y\n        } = encoding;\n        const xField = x.field;\n        const yField = y.field;\n        const { size: sizeAxis, shape: shapeAxis } = axes;\n        const fieldsConfig = this.data().getFieldsConfig();\n        const isXDim = fieldsConfig[xField] && fieldsConfig[xField].def.type === FieldType.DIMENSION;\n        const isYDim = fieldsConfig[yField] && fieldsConfig[yField].def.type === FieldType.DIMENSION;\n        const key = isXDim ? ENCODING.X : (isYDim ? ENCODING.Y : null);\n        const measurement = this.measurement();\n        const colorAxis = axes.color;\n        const { x: offsetX, y: offsetY } = config.offset;\n\n        for (let i = 0, len = data.length; i < len; i++) {\n            const d = data[i];\n            const size = sizeAxis.getSize(d.size);\n            const shape = shapeAxis.getShape(d.shape);\n\n            let [xPx, yPx] = [ENCODING.X, ENCODING.Y].map((type) => {\n                const value = d[type] === null ? undefined : d[type];\n                const measure = type === ENCODING.X ? measurement.width : measurement.height;\n                return !encoding[type].field ? measure / 2 : axes[type].getScaleValue(value);\n            });\n\n            xPx += offsetX;\n            yPx += offsetY;\n\n            let color = colorAxis.getColor(d.color);\n\n            const resolvedEncodings = resolveEncodingValues({\n                values: {\n                    x: xPx,\n                    y: yPx,\n                    color,\n                    shape,\n                    size,\n                    data: d\n                },\n                data: d\n            }, i, data, this);\n            color = resolvedEncodings.color;\n            const style = {\n                fill: color,\n                stroke: color\n            };\n            const pos = {\n                x: resolvedEncodings.x,\n                y: resolvedEncodings.y\n            };\n\n            if (!isNaN(xPx) && !isNaN(yPx)) {\n                const point = {\n                    enter: pos,\n                    update: pos,\n                    shape: resolvedEncodings.shape,\n                    size: Math.abs(resolvedEncodings.size),\n                    meta: getColorMetaInf(color, colorAxis),\n                    style,\n                    source: d.source,\n                    rowId: d.rowId\n                };\n                point.className = getIndividualClassName(d, i, data, this);\n                points.push(point);\n                this.cachePoint(d[key], point);\n            }\n        }\n        points = positionPoints(this, points);\n        return points;\n    }\n\n    /**\n     * Renders the plot in the given container.\n     *\n     * @param  {SVGElement} container SVGElement which will hold the plot\n     * @return {BarLayer} Instance of bar layer\n     */\n    render (container) {\n        let maxSize = 0;\n        let seriesClassName;\n        const config = this.config();\n        const keys = this._transformedData.map(d => d.key);\n        const { transition, className, defClassName, classPrefix } = config;\n        const normalizedData = this._normalizedData;\n        const containerSelection = selectElement(container);\n        const qualifiedClassName = getQualifiedClassName(defClassName, this.id(), classPrefix);\n        this._points = [];\n        this._pointMap = {};\n\n        containerSelection.classed(qualifiedClassName.join(' '), true).classed(className, true);\n\n        this._points = this.generateDataPoints(normalizedData, keys);\n        const schema = this.data().getSchema();\n        makeElement(container, 'g', this._points, null, {\n            update: (group, points) => {\n                maxSize = Math.max(maxSize, ...points.map(d => d.size));\n                seriesClassName = `${qualifiedClassName[0]}`;\n                this.constructor.drawFn()({\n                    layer: this,\n                    container: group.node(),\n                    points,\n                    interpolate: config.interpolate,\n                    className: seriesClassName,\n                    transition,\n                    keyFn: v => getMarkId(v.source, schema)\n                });\n            }\n        }, data => data[0].rowId);\n        this._maxSize = Math.sqrt(maxSize / Math.PI) * 2;\n        attachDataToVoronoi(this._voronoi, this._points);\n        return this;\n    }\n\n    generateDataPoints (normalizedData, keys) {\n        const [widthMetrics, heightMetrics] = getPlotMeasurement(this, keys);\n        const offsetXValues = widthMetrics.offsetValues || [];\n        const offsetYValues = heightMetrics.offsetValues || [];\n        return normalizedData.map((dataArr, i) => {\n            const measurementConf = this.getMeasurementConfig(offsetXValues[i], offsetYValues[i], widthMetrics.span,\n                heightMetrics.span);\n            return this.translatePoints(dataArr, measurementConf);\n        }).filter(d => d.length);\n    }\n\n    getMeasurementConfig (offsetX, offsetY, widthSpan, heightSpan) {\n        return {\n            offset: {\n                x: (offsetX || 0) + widthSpan / 2,\n                y: (offsetY || 0) + heightSpan / 2\n            },\n            span: {\n                x: widthSpan,\n                y: heightSpan\n            }\n        };\n    }\n\n    /**\n     * Gets the nearest point from a position.\n     * @param {number} x x position\n     * @param {number} y y position\n     * @return {Object} Point details\n     */\n    getNearestPoint (x, y) {\n        const distanceLimit = Math.max(this._maxSize, this.config().nearestPointThreshold);\n\n        if (!this.data()) {\n            return null;\n        }\n\n        const point = this._voronoi.find(x, y, distanceLimit);\n        const dimensions = point && point.data.data.update;\n        const radius = point ? Math.sqrt(point.data.data.size / Math.PI) : 0;\n\n        if (point) {\n            const { source, rowId } = point.data.data;\n            const identifiers = this.getIdentifiersFromData(source, rowId);\n            return {\n                id: identifiers,\n                dimensions: [{\n                    x: dimensions.x,\n                    y: dimensions.y,\n                    width: radius,\n                    height: radius\n                }],\n                layerId: this.id()\n            };\n        }\n        return null;\n    }\n}\n","import { makeElement, easeFns } from 'muze-utils';\n\n/**\n *\n *\n * @param {*} elem\n * @param {*} datum\n * @param {*} index\n * @param {*} context\n */\nconst transitionBars = (layer, elem, datum, index, context) => {\n    const { transition } = context;\n    const { duration, disabled, effect } = transition;\n    const selection = elem;\n\n    const selTransition = disabled ? selection :\n        selection.transition()\n        .duration(duration)\n        .ease(easeFns[effect])\n        .on('end', layer.registerAnimationDoneHook());\n    const update = datum.update || datum;\n    const updateStyle = datum.style || {};\n    datum.className && selection.classed(datum.className, true);\n    Object.entries(update).forEach(attr => (!isNaN(attr[1]) && selTransition.attr(attr[0], attr[1])));\n    Object.entries(updateStyle).forEach(styleObj => selection.style(styleObj[0], styleObj[1]));\n};\n\n/**\n *\n *\n * @param {*} elem\n * @param {*} d\n */\nconst barEnterFn = (elem, d) => {\n    const selection = elem;\n    const enter = d.enter || {};\n    Object.entries(enter).forEach(attr => (!isNaN(attr[1]) && selection.attr(attr[0], attr[1])));\n};\n\n/**\n * Draws rectangles by using d3 selection\n * @param  {Object} params Contains container element and points\n * @return {Selection} Bar Selection\n */\n/* istanbul ignore next */ export const drawRects = (params) => {\n    const { layer, points, container, keyFn } = params;\n    const updateFns = {\n        enter (elem, d) { barEnterFn(elem, d); },\n        update (elem, d, i) { transitionBars(layer, elem, d, i, params); }\n    };\n    return makeElement(container, 'rect', points, null, updateFns, keyFn);\n};\n","import { CLASSPREFIX } from '../../enums/constants';\n\nexport const defaultConfig = {\n    classPrefix: CLASSPREFIX,\n    defClassName: 'layer-bar',\n    className: '',\n    interaction: {\n        highlight: [{\n            type: 'fill',\n            intensity: [0, 0, -15, 0]\n        }],\n        fade: [{\n            type: 'fill',\n            intensity: [0, 0, +15, 0]\n        }],\n        focus: [{\n            type: 'fill',\n            intensity: [0, 0, +15, 0]\n        }]\n    },\n    transform: {\n        type: 'stack'\n    },\n    transition: {\n        effect: 'cubic',\n        duration: 1000\n    },\n    innerPadding: 0.1,\n    encoding: {\n        color: {},\n        x: {},\n        y: {},\n        x0: {},\n        y0: {}\n    },\n    states: {\n        highlight: {\n            className: `${CLASSPREFIX}-layer-bar-highlight`\n        },\n        fadeout: {\n            className: `${CLASSPREFIX}-layer-bar-fadeout`\n        },\n        selected: {\n            className: `${CLASSPREFIX}-layer-bar-selected`\n        }\n    }\n};\n\n","import { MeasureSubtype, DimensionSubtype } from 'muze-utils';\nimport { STACK } from '../../enums/constants';\nimport { positionPoints, getIndividualClassName, getColorMetaInf, resolveEncodingValues } from '../../helpers';\n\nconst positionRetriever = {\n    x: (xPx, isNegativeVal, barBasePos) => (isNegativeVal ? [xPx, barBasePos] : [barBasePos, xPx]),\n    y: (yPx, isNegativeVal, barBasePos) => (isNegativeVal ? [barBasePos, yPx] : [yPx, barBasePos])\n};\n\n/**\n *\n *\n * @param {*} type\n * @param {*} fieldInfo\n * @param {*} config\n * @param {*} data\n *\n */\nconst resolveDimByField = (type, axesInfo, config, data) => {\n    const spaceType = type === 'x' ? 'width' : 'height';\n    const [fieldType, axis] = [config[`${type}FieldType`], axesInfo[`${type}Axis`]];\n    const {\n        transformType,\n        sizeEncoding,\n        sizeConfig,\n        measurement\n    } = config;\n\n    const sizeValue = sizeEncoding.value;\n    let enter = 0;\n    let pos;\n    let space = 0;\n    let enterSpace = 0;\n    if (fieldType !== undefined) {\n        if (config[`${type}0Field`]) {\n            const minVal = data[type];\n            const maxVal = data[`${type}0`];\n            let min;\n            let max;\n            if (minVal === null || maxVal === null) {\n                return {\n                    enterSpace: undefined,\n                    enter: undefined,\n                    pos: undefined,\n                    space: undefined\n                };\n            } else if (fieldType === MeasureSubtype.CONTINUOUS || fieldType === DimensionSubtype.TEMPORAL) {\n                min = Math.min(minVal, maxVal);\n                max = Math.max(minVal, maxVal);\n            } else {\n                min = minVal;\n                max = maxVal;\n            }\n            const scales = type === 'x' ? [min, max] : [max, min];\n            pos = axis.getScaleValue(scales[0]) + axis.getUnitWidth() / 2;\n            space = Math.abs(axis.getScaleValue(scales[1]) - pos) + axis.getUnitWidth() / 2;\n\n            enter = pos;\n            enterSpace = 0;\n        } else if (fieldType === DimensionSubtype.CATEGORICAL || fieldType === DimensionSubtype.TEMPORAL) {\n            pos = axis.getScaleValue(data[type]) +\n                (sizeConfig[type === 'x' ? 'barWidthOffset' : 'barHeightOffset'] || 0);\n\n            space = sizeConfig[type === 'x' ? 'barWidth' : 'barHeight'];\n            if (sizeValue !== undefined) {\n                const diffPx = sizeValue * space;\n                space -= diffPx;\n                pos += diffPx / 2;\n            }\n            enter = pos;\n            enterSpace = space;\n        } else {\n            const minDomVal = axis.domain()[0];\n            const barBasePos = minDomVal < 0 ? axis.getScaleValue(0) : axis.getScaleValue(minDomVal);\n            pos = axis.getScaleValue(data[type]);\n            let endPos = axis.getScaleValue(data[`${type}0`]);\n\n            enterSpace = 0;\n            const isNegativeVal = data[type] < 0;\n            if (transformType !== STACK) {\n                [pos, endPos] = positionRetriever[type](pos, isNegativeVal, barBasePos);\n            }\n            space = Math.abs(pos - endPos);\n            enter = barBasePos;\n        }\n    } else {\n        pos = 0;\n        space = measurement[spaceType];\n    }\n\n    return {\n        enterSpace,\n        enter,\n        pos,\n        space\n    };\n};\n\n/**\n *\n *\n * @param {*} data\n * @param {*} config\n * @param {*} axes\n *\n */\nconst resolveDimensions = (data, config, axes) => {\n    const axesInfo = {\n        xAxis: axes.x,\n        yAxis: axes.y\n    };\n    const {\n        enterSpace: enterWidth,\n        enter: enterX,\n        pos: xPos,\n        space: width\n    } = resolveDimByField('x', axesInfo, config, data);\n\n    const {\n        enterSpace: enterHeight,\n        enter: enterY,\n        pos: yPos,\n        space: height\n    } = resolveDimByField('y', axesInfo, config, data);\n    return {\n        enter: {\n            x: enterX,\n            y: enterY,\n            width: enterWidth,\n            height: enterHeight\n        },\n        update: {\n            x: xPos,\n            y: yPos,\n            width,\n            height\n        }\n    };\n};\n\n/**\n * Generates an array of objects containing x, y, width and height of the bars from the data\n * @param  {Array.<Array>} data Data Array\n * @param  {Object} encoding  Config\n * @param  {Object} axes     Axes object\n * @param {Object} conf config object for point generation\n * @return {Array.<Object>}  Array of points\n */\nexport const getTranslatedPoints = (context, data, sizeConfig) => {\n    let points = [];\n    const encoding = context.config().encoding;\n    const axes = context.axes();\n    const colorAxis = axes.color;\n    const sizeEncoding = encoding.size || {};\n    const {\n            x0Field,\n            y0Field,\n            xFieldSubType,\n            yFieldSubType\n        } = context.encodingFieldsInf();\n    const measurement = context.measurement();\n    const isXDim = xFieldSubType === DimensionSubtype.CATEGORICAL || xFieldSubType === DimensionSubtype.TEMPORAL;\n    const isYDim = yFieldSubType === DimensionSubtype.CATEGORICAL || yFieldSubType === DimensionSubtype.TEMPORAL;\n    const key = isXDim ? 'x' : (isYDim ? 'y' : null);\n    const transformType = context.transformType();\n\n    for (let i = 0, len = data.length; i < len; i++) {\n        const d = data[i];\n        const dimensions = resolveDimensions(d, {\n            xFieldType: xFieldSubType,\n            yFieldType: yFieldSubType,\n            x0Field,\n            y0Field,\n            transformType,\n            measurement,\n            sizeConfig,\n            sizeEncoding\n        }, axes);\n\n        let color = colorAxis.getColor(d.color);\n\n        const update = dimensions.update;\n        const resolvedEncodings = resolveEncodingValues({\n            values: {\n                x: update.x,\n                y: update.y,\n                width: update.width,\n                height: update.height,\n                color\n            },\n            data: d\n        }, i, data, context);\n        color = resolvedEncodings.color;\n        const { x, y, width, height } = resolvedEncodings;\n        if (!isNaN(x) && !isNaN(y) && d.rowId !== undefined) {\n            let point = null;\n            point = {\n                enter: dimensions.enter,\n                update: {\n                    x,\n                    y,\n                    width,\n                    height\n                },\n                source: d.source,\n                rowId: d.rowId,\n                style: {\n                    fill: color\n                },\n                meta: getColorMetaInf(color, colorAxis)\n            };\n            point.className = getIndividualClassName(d, i, data, context);\n            points.push(point);\n            // Store each point in a hashmap with key as the dimensional or temporal field value\n            context.cachePoint(d[key], point);\n        }\n    }\n\n    points = positionPoints(context, points);\n    return points;\n};\n","import {\n    getQualifiedClassName,\n    selectElement,\n    createElements,\n    clipElement,\n    DimensionSubtype,\n    FieldType,\n    MeasureSubtype,\n    Scales,\n    getNearestValue\n} from 'muze-utils';\nimport { BaseLayer } from '../../base-layer';\nimport { drawRects } from './renderer';\nimport { defaultConfig } from './default-config';\nimport { getPlotMeasurement, getValidTransformForAggFn } from '../../helpers';\nimport './styles.scss';\nimport { getTranslatedPoints } from './bar-helper';\n\nconst MEASURE = FieldType.MEASURE;\nconst scaleBand = Scales.band;\n\n/**\n * Bar layer creates rectangle marks. The mark type of this layer is ```bar```. This layer can be used\n * to create stacked or grouped bars, range bars, heatmap plots and also reference bands by using\n * the encoding properties.\n *\n * @public\n *\n * @class\n * @module BarLayer\n * @extends BaseLayer\n */\nexport default class BarLayer extends BaseLayer {\n    /**\n     * Creates an instance of bar layer\n     */\n    constructor (...params) {\n        super(...params);\n        this._bandScale = scaleBand();\n        this._plotPadding = {\n            x: 0,\n            y: 0\n        };\n        this._plotSpan = {\n            x: 0,\n            y: 0\n        };\n        this._pointMap = {};\n    }\n\n    /**\n     *\n     *\n     *\n     * @memberof BarLayer\n     */\n    elemType () {\n        return 'rect';\n    }\n\n    /**\n     *\n     *\n     * @static\n     *\n     * @memberof BarLayer\n     */\n    static formalName () {\n        return 'bar';\n    }\n\n    /**\n     * Returns the default configuration of the bar layer\n     * @return {Object} Default configuration of the bar layer\n     */\n    static defaultConfig () {\n        return defaultConfig;\n    }\n\n    /**\n     *\n     *\n     * @static\n     * @param {*} conf\n     * @param {*} userConf\n     *\n     * @memberof BarLayer\n     */\n    static defaultPolicy (conf, userConf) {\n        const config = BaseLayer.defaultPolicy(conf, userConf);\n        const encoding = config.encoding;\n        const colorField = encoding.color.field;\n        const transform = config.transform;\n\n        if (colorField) {\n            transform.groupBy = colorField;\n        }\n        return config;\n    }\n\n    /**\n     *\n     *\n     * @param {*} data\n     * @param {*} fieldsConfig\n     *\n     * @memberof BarLayer\n     */\n    calculateDomainFromData (data, encodingFieldInf, fieldsConfig) {\n        const domain = super.calculateDomainFromData(data, encodingFieldInf, fieldsConfig);\n        ['x', 'y'].forEach((d) => {\n            if (encodingFieldInf[`${d}FieldType`] === MEASURE && domain[d]) {\n                if (encodingFieldInf[`${d}0Field`]) {\n                    domain[d] = domain[d].sort((a, b) => a - b);\n                } else {\n                    domain[d][0] = Math.min(domain[d][0], 0);\n                    domain[d][1] = Math.max(0, domain[d][1]);\n                }\n            }\n        });\n        return domain;\n    }\n\n    /**\n     * Generates an array of objects containing x, y, width and height of the bars from the data\n     * @param  {Array.<Array>} data Data Array\n     * @param  {Object} encoding  Config\n     * @param  {Object} axes     Axes object\n     * @param {Object} conf config object for point generation\n     * @return {Array.<Object>}  Array of points\n     */\n    translatePoints (data, sizeConfig) {\n        return getTranslatedPoints(this, data, sizeConfig);\n    }\n\n    /**\n     * Renders the plot in the given container\n     * @param  {SVGGroup} container SVGGroup where plot will be rendered.\n     * @return {BarLayer} Instance of bar layer.\n     */\n    render (container) {\n        const config = this.config();\n        const transition = config.transition;\n        const normalizedDataArr = this._normalizedData;\n        const transformedData = this._transformedData;\n        const keys = transformedData.map(d => d.key);\n        const fieldsConfig = this.data().getFieldsConfig();\n        const axes = this.axes();\n        const height = axes.y && axes.y.scale().range()[0];\n        const width = axes.x && axes.x.scale().range()[1];\n        const defClassName = config.defClassName;\n        const qualifiedClassName = getQualifiedClassName(defClassName, this.id(), config.classPrefix);\n        const className = config.className;\n        const containerSelection = selectElement(container);\n        const dimensions = Object.values(fieldsConfig).filter(e => e.def.type === FieldType.DIMENSION)\n            .map(e => e.index);\n        containerSelection.classed(qualifiedClassName.join(' '), true);\n        containerSelection.classed(className, true);\n        clipElement(container, {\n            x: 0,\n            y: 0,\n            width,\n            height\n        }, `id-${this.id()}`);\n\n        this._points = this.generateDataPoints(normalizedDataArr, keys);\n\n        createElements({\n            data: this._points,\n            container,\n            selector: 'g',\n            append: 'g',\n            each: (points, group, i) => {\n                const seriesClassName = `${qualifiedClassName[0]}-${keys[i] || i}`.toLowerCase();\n                group.style('display', 'block');\n                drawRects({\n                    layer: this,\n                    container: group.node(),\n                    points,\n                    className: seriesClassName,\n                    transition,\n                    style: {},\n                    keyFn: d => dimensions.map(key => d.source[key]).join('-')\n                });\n            }\n        });\n        return this;\n    }\n\n    /**\n     *\n     *\n     * @param {*} normalizedData\n     * @param {*} keys\n     *\n     * @memberof BarLayer\n     */\n    generateDataPoints (normalizedData, keys) {\n        const [barWidthMetrics, barHeightMetrics] = getPlotMeasurement(this, keys);\n        const barWidthOffsets = barWidthMetrics.offsetValues || [];\n        const barHeightOffsets = barHeightMetrics.offsetValues || [];\n        this._plotSpan = {\n            x: barWidthMetrics.groupSpan || 0,\n            y: barHeightMetrics.groupSpan || 0\n        };\n        this._plotPadding = {\n            x: barWidthMetrics.padding || 0,\n            y: barHeightMetrics.padding || 0\n        };\n\n        this._pointMap = {};\n        return normalizedData.map((data, i) => this.translatePoints(data,\n            {\n                barWidth: barWidthMetrics.span,\n                barWidthOffset: barWidthOffsets[i] || 0,\n                barHeight: barHeightMetrics.span,\n                barHeightOffset: barHeightOffsets[i] || 0\n            }));\n    }\n\n    getPlotPadding () {\n        return this._plotPadding;\n    }\n\n    resolveTransformType () {\n        this._transformType = getValidTransformForAggFn(this);\n    }\n\n    /**\n     * Gets the nearest point of the position passed.\n     * @param {number} x x position\n     * @param {number} y y position\n     * @return {Object} Nearest point.\n     */\n    getNearestPoint (x, y) {\n        if (!this.data()) {\n            return null;\n        }\n        let axis;\n        let value;\n        let points;\n        let uniqueFieldType;\n        let uniqueFieldIndex;\n        let filterData;\n        let identifiers;\n        let pointFound = null;\n        const dataModel = this.data();\n        const dataObj = dataModel.getData();\n        const fieldsConfig = dataModel.getFieldsConfig();\n        const axes = this.axes();\n        const data = dataObj.data;\n        const pointMap = this._pointMap;\n        const {\n                xField,\n                yField,\n                xFieldSubType,\n                yFieldSubType\n            } = this.encodingFieldsInf();\n\n        if (xFieldSubType === MeasureSubtype.CONTINUOUS) {\n            axis = axes.y;\n            value = axis.invert(y);\n            uniqueFieldIndex = fieldsConfig[yField].index;\n            uniqueFieldType = yFieldSubType;\n        } else {\n            axis = axes.x;\n            value = axis.invert(x);\n            uniqueFieldIndex = fieldsConfig[xField].index;\n            uniqueFieldType = xFieldSubType;\n        }\n\n        if (uniqueFieldType === DimensionSubtype.CATEGORICAL) {\n            points = pointMap[value];\n        }\n\n        if (uniqueFieldType === DimensionSubtype.TEMPORAL) {\n            filterData = [...new Set(data.map(d => d[uniqueFieldIndex]))];\n            value = getNearestValue(filterData, value);\n            points = pointMap[value];\n        }\n        const len = points && points.length;\n        points && points.sort((p1, p2) => p1.update.y - p2.update.y);\n        for (let i = 0; i < len; i++) {\n            const point = points[i];\n            const update = point.update;\n            if (x >= update.x && x <= (update.width + update.x) && y >= update.y && y <= (update.height + update.y)) {\n                pointFound = point;\n                break;\n            }\n            pointFound = null;\n        }\n\n        const values = pointFound && pointFound.source;\n        if (values) {\n            identifiers = this.getIdentifiersFromData(values, pointFound.rowId);\n        }\n        return pointFound ? {\n            dimensions: [pointFound.update],\n            id: identifiers,\n            layerId: this.id()\n        } : pointFound;\n    }\n\n    getPlotSpan () {\n        return this._plotSpan;\n    }\n\n    hasPlotSpan () {\n        return true;\n    }\n}\n","import { CLASSPREFIX } from '../../enums/constants';\n\nexport const defaultConfig = {\n    defClassName: 'layer-tick',\n    className: '',\n    classPrefix: CLASSPREFIX,\n    interaction: {\n        highlight: [{\n            type: 'stroke',\n            intensity: [0, 0, -15, 0]\n        }],\n        fade: [{\n            type: 'stroke',\n            intensity: [0, 0, 15, 0]\n        }],\n        focus: [{\n            type: 'stroke',\n            intensity: [0, 0, 15, 0]\n        }]\n    },\n    innerPadding: 0.1,\n    transform: {\n        type: 'identity'\n    },\n    transition: {\n        effect: 'cubic',\n        duration: 1000\n    },\n    interpolate: 'linear',\n    encoding: {\n        color: { },\n        x: {},\n        y: {},\n        x0: {},\n        y0: {},\n        radius: {},\n        radius0: {},\n        angle: {},\n        angle0: {},\n        strokeOpacity: {\n            value: 0.5\n        },\n        fillOpacity: {\n            value: 0.5\n        }\n    },\n    states: {\n        highlight: {\n            className: `${CLASSPREFIX}-layer-tick-highlight`\n        },\n        fadeout: {\n            className: `${CLASSPREFIX}-layer-tick-fadeout`\n        },\n        selected: {\n            className: `${CLASSPREFIX}-layer-tick-selected`\n        }\n    }\n};\n","import { selectElement, Symbols, pathInterpolators } from 'muze-utils';\n\nconst line = Symbols.line;\n\n/**\n * Draws ticks by using d3 selection\n * @param  {Object} params Contains container element and points\n * @return {Selection} Ticks Selection\n */\nexport default /* istanbul ignore next */ (params) => {\n    const { points, container, keyFn, className, interpolate } = params;\n    const mount = selectElement(container);\n    const ticks = mount.selectAll('path').data(points, keyFn);\n    const ticksEnter = ticks.enter().append('path');\n\n    mount.attr('class', className || '');\n    ticksEnter.each(function (d) {\n        const selection = selectElement(this);\n        const enter = d.enter || {};\n        Object.entries(enter).forEach(attr => (!isNaN(attr[1]) && selection.attr(attr[0], attr[1])));\n    });\n\n    ticks.exit().remove();\n    return ticks.merge(ticksEnter)\n                    .each(function (d) {\n                        const selection = selectElement(this);\n                        const update = d.update;\n                        const updateStyle = d.style || {};\n                        const x0 = update.x0 !== undefined ? update.x0 : update.x;\n                        const y0 = update.y0 !== undefined ? update.y0 : update.y;\n                        const curveInterpolatorFn = pathInterpolators[interpolate];\n                        const linepath = line()\n                            .curve(curveInterpolatorFn)\n                            .x(e => e[0])\n                            .y(e => e[1]);\n                        d.className && selection.classed(d.className, true);\n                        selection.attr('d', linepath([[update.x, update.y], [x0, y0]]));\n                        Object.entries(updateStyle).forEach(styleObj => selection.style(styleObj[0], styleObj[1]));\n                    });\n};\n\n","import { FieldType } from 'muze-utils';\nimport { PointLayer } from '../point';\nimport { defaultConfig } from './default-config';\nimport { ENCODING } from '../../enums/constants';\nimport drawTicks from './renderer';\nimport './styles.scss';\nimport { getAxesScales, positionPoints, getIndividualClassName,\n    getColorMetaInf, resolveEncodingValues, toCartesianCoordinates } from '../../helpers';\n\nconst pointTranslators = {\n    polar: (data, config = {}, layerInst) => {\n        const axes = layerInst.axes();\n        let points = [];\n        const { radius: radiusAxis, angle: angleAxis, angle0: angle0Axis } = axes;\n        const measurement = layerInst.measurement();\n\n        const colorAxis = axes.color;\n        const angleV = {};\n        const angle0V = {};\n        for (let i = 0, len = data.length; i < len; i++) {\n            const d = data[i];\n            const color = colorAxis.getColor(d.color);\n            const angles = angleAxis.getScaleValue(d.angle);\n            !angleV[d.angle] && (angleV[d.angle] = 0);\n            const { startAngle, endAngle } = angles[angleV[d.angle]++];\n            const angles0 = angle0Axis.getScaleValue(d.angle0);\n            !angle0V[d.angle0] && (angle0V[d.angle0] = 0);\n            const { startAngle: startAngle0, endAngle: endAngle0 } = angles0[angle0V[d.angle0]++];\n            const radius = radiusAxis.getOuterRadius(d.radius);\n            const angle = (startAngle + endAngle) / 2;\n            const angle0 = (startAngle0 + endAngle0) / 2;\n            const resolvedVal = resolveEncodingValues({\n                values: {\n                    radius,\n                    radius0: radiusAxis.getInnerRadius(d.radius0),\n                    color,\n                    angle,\n                    angle0,\n                    startAngle,\n                    endAngle,\n                    startAngle0,\n                    endAngle0\n                },\n                data: d\n            }, i, data, layerInst);\n            const point = {\n                enter: {},\n                update: {\n                    radius: resolvedVal.radius,\n                    radius0: resolvedVal.radius0,\n                    angle: resolvedVal.angle,\n                    angle0: resolvedVal.angle0\n                },\n                style: {\n                    stroke: resolvedVal.color\n                },\n                source: d.source,\n                rowId: d.rowId,\n                meta: getColorMetaInf(resolvedVal.color, colorAxis)\n            };\n            point.className = getIndividualClassName(d, i, data, layerInst);\n            points.push(point);\n        }\n        points = toCartesianCoordinates(positionPoints(layerInst, points), measurement, true);\n        return points;\n    },\n    cartesian: (data, config = {}, layerInst) => {\n        const axes = layerInst.axes();\n        let points = [];\n        const {\n                xAxis,\n                yAxis\n            } = getAxesScales(axes);\n        const {\n                xField,\n                yField,\n                x0Field,\n                y0Field,\n                xFieldType,\n                yFieldType\n            } = layerInst.encodingFieldsInf();\n        const isXDim = xFieldType === FieldType.DIMENSION;\n        const isYDim = yFieldType === FieldType.DIMENSION;\n        const key = isXDim ? ENCODING.X : (isYDim ? ENCODING.Y : null);\n        const measurement = layerInst.measurement();\n        const colorAxis = axes.color;\n        const { x: offsetX, y: offsetY } = config.offset;\n        const { x: xSpan, y: ySpan } = config.span;\n        for (let i = 0, len = data.length; i < len; i++) {\n            let xPx;\n            let x0Px;\n            let y0Px;\n            let yPx;\n            const d = data[i];\n            const row = d.source;\n            if (xField) {\n                xPx = xAxis.getScaleValue(d.x) + offsetX;\n                x0Px = xPx + xSpan;\n            }\n\n            if (yField) {\n                yPx = yAxis.getScaleValue(d.y) + offsetY;\n                y0Px = yPx !== null ? yPx + ySpan : null;\n            }\n\n            if (!xField) {\n                xPx = 0;\n                x0Px = measurement.width;\n                if (!isNaN(yPx)) {\n                    yPx += ySpan / 2;\n                    y0Px = yPx;\n                }\n            }\n\n            if (!yField) {\n                yPx = 0;\n                y0Px = measurement.height;\n                x0Px = xPx += xSpan / 2;\n            }\n\n            if (x0Field) {\n                x0Px = xAxis.getScaleValue(d.x0) + xSpan;\n                yPx += ySpan / 2;\n                y0Px -= ySpan / 2;\n            }\n\n            if (y0Field) {\n                y0Px = yAxis.getScaleValue(d.y0) + ySpan;\n                xPx += xSpan / 2;\n                x0Px -= xSpan / 2;\n            }\n            const color = colorAxis.getColor(d.color);\n            const resolvedEncodings = resolveEncodingValues({\n                values: {\n                    x: xPx,\n                    y: yPx,\n                    x0: x0Px,\n                    y0: y0Px,\n                    color\n                },\n                data: d\n            }, i, data, layerInst);\n\n            if (!isNaN(xPx) && !isNaN(yPx)) {\n                const point = {\n                    enter: {},\n                    update: {\n                        x: resolvedEncodings.x,\n                        y: resolvedEncodings.y,\n                        x0: resolvedEncodings.x0,\n                        y0: resolvedEncodings.y0\n                    },\n                    style: {\n                        stroke: resolvedEncodings.color\n                    },\n                    source: row,\n                    rowId: d.rowId,\n                    meta: getColorMetaInf(resolvedEncodings.color, colorAxis)\n                };\n                point.className = getIndividualClassName(d, i, data, layerInst);\n                points.push(point);\n                layerInst.cachePoint(d[key], point);\n            }\n        }\n        points = positionPoints(layerInst, points);\n        return points;\n    }\n};\n\n/**\n * This layer is used to create small lines. The orientation of the line is determined by the positional\n * encoding properties x0 and y0. The mark type of the layer is ```tick```.\n *\n * @public\n *\n * @class\n * @module TickLayer\n * @extends BaseLayer\n */\nexport default class TickLayer extends PointLayer {\n\n    /**\n     *\n     *\n     * @staticg\n     *\n     * @memberof TickLayer\n     */\n    static defaultConfig () {\n        return defaultConfig;\n    }\n\n    /**\n     *\n     *\n     * @static\n     *\n     * @memberof TickLayer\n     */\n    static formalName () {\n        return 'tick';\n    }\n\n    /**\n     *\n     *\n     * @static\n     *\n     * @memberof TickLayer\n     */\n    static drawFn () {\n        return drawTicks;\n    }\n\n    /**\n     *\n     *\n     *\n     * @memberof TickLayer\n     */\n    elemType () {\n        return 'path';\n    }\n\n    /**\n     * Generates an array of objects containing x, y, width and height of the points from the data\n     * @param  {Array.<Array>} data Data Array\n     * @param  {Object} encoding  Config\n     * @param  {Object} axes     Axes object\n     * @return {Array.<Object>}  Array of points\n     */\n    translatePoints (data, config) {\n        return pointTranslators[this.coord()](data, config, this);\n    }\n\n    getMeasurementConfig (offsetX, offsetY, widthSpan, heightSpan) {\n        return {\n            offset: {\n                x: (offsetX || 0),\n                y: (offsetY || 0)\n            },\n            span: {\n                x: widthSpan,\n                y: heightSpan\n            }\n        };\n    }\n}\n","export const AREA_LAYER = 'area';\nexport const ARC_LAYER = 'arc';\nexport const LINE_LAYER = 'line';\nexport const TEXT_LAYER = 'text';\nexport const POINT_LAYER = 'point';\nexport const BAR_LAYER = 'bar';\nexport const TICK_LAYER = 'tick';\nexport const SIMPLE_LAYER = 'simple';\nexport const BASE_LAYER = 'base';\n","import { isSimpleObject, mergeRecursive, getObjProp } from 'muze-utils';\n\nconst parseLayerDefinition = (sink, definition, layerDef, layerType) => {\n    for (const key in definition) {\n        if (Object.hasOwnProperty.call(definition, key)) {\n            let strs;\n            let propValue;\n            const def = definition[key];\n            if (isSimpleObject(def)) {\n                sink[key] = {};\n                parseLayerDefinition(sink[key], def, layerDef, layerType);\n            } else if (typeof def === 'string' && (strs = def.split('.')) && strs[0] === layerType) {\n                propValue = getObjProp(layerDef, ...strs.slice(1, strs.length));\n                if (propValue !== undefined) {\n                    sink[key] = propValue;\n                }\n            } else {\n                sink[key] = def;\n            }\n        }\n    }\n};\n\nconst sanitizeEncoding = (encoding) => {\n    // Create object for each encoding value if encoding value is a string\n    for (const key in encoding) {\n        if (typeof encoding[key] === 'string') {\n            encoding[key] = {\n                field: encoding[key]\n            };\n        }\n    }\n};\n\n/**\n * Layer Factory creates layers based on the layer type. All types of layers needs to register in\n * the layer factory. For getting a layer instance, getLayer method needs to invoked with the\n * layerType and other arguments. It also registers the definition of composite layers.\n *\n * @public\n *\n * @module LayerFactory\n */\nconst layerFactory = (() => {\n    const compositeLayers = {};\n    const factoryObj = {\n        setLayerRegistry: (reg) => {\n            factoryObj._layerRegistry = reg;\n        },\n        getSerializedConf: (mark, layerDef) => {\n            let serializedDefs;\n            const defs = compositeLayers[mark];\n            const newConf = mergeRecursive({}, layerDef);\n\n                // If it is a composite layer then resolve all the definitions of each unit layer\n            if (defs) {\n                serializedDefs = defs.map((unitLayerDef) => {\n                    const sDef = {};\n                    parseLayerDefinition(sDef, unitLayerDef, newConf, mark);\n                    sanitizeEncoding(sDef.encoding);\n                    return sDef;\n                });\n            } else {\n                const encoding = newConf.encoding;\n                // Create object for each encoding value if encoding value is a string\n                sanitizeEncoding(encoding);\n                serializedDefs = newConf;\n            }\n\n            return serializedDefs;\n        },\n        getLayerInstance: (layerDef, ...params) => {\n            const layerRegistry = factoryObj._layerRegistry;\n            layerDef = !(layerDef instanceof Array) ? [layerDef] : layerDef;\n            const instances = layerDef.map((layerObj) => {\n                const layerConstructor = layerRegistry[layerObj.mark];\n                return layerConstructor.create(...params);\n            });\n            return instances.length === 1 ? instances[0] : instances;\n        },\n        getLayerClass: mark => factoryObj._layerRegistry[mark],\n        /**\n         * Registers a new composite layer definition in the layer factory.\n         *\n         * @public\n         *\n         * @param {string} layerType Mark type of the new composite layer.\n         * @param {Array} layerDefs Layer definitions of the composite layer.\n         */\n        composeLayers: (layerType, layerDefs) => {\n            compositeLayers[layerType] = layerDefs;\n        },\n        sanitizeLayerConfig: (layerDef) => {\n            const newConf = mergeRecursive({}, layerDef);\n            sanitizeEncoding(newConf.encoding);\n            return newConf;\n        }\n    };\n    return factoryObj;\n})();\n\nexport default layerFactory;\n","import layerFactory from './layer-factory';\n\nexport default layerFactory;\n","import { AreaLayer } from './layers/area';\nimport { ArcLayer } from './layers/arc';\nimport { LineLayer } from './layers/line';\nimport { TextLayer } from './layers/text';\nimport { PointLayer } from './layers/point';\nimport { BarLayer } from './layers/bar';\nimport { BaseLayer } from './base-layer';\nimport * as LAYER_TYPES from './enums/layer-types';\nimport { TickLayer } from './layers/tick';\n\nexport const DEFAULT_LAYERS = {\n    [LAYER_TYPES.AREA_LAYER]: AreaLayer,\n    [LAYER_TYPES.ARC_LAYER]: ArcLayer,\n    [LAYER_TYPES.LINE_LAYER]: LineLayer,\n    [LAYER_TYPES.TEXT_LAYER]: TextLayer,\n    [LAYER_TYPES.POINT_LAYER]: PointLayer,\n    [LAYER_TYPES.TICK_LAYER]: TickLayer,\n    [LAYER_TYPES.BAR_LAYER]: BarLayer,\n    [LAYER_TYPES.BASE_LAYER]: BaseLayer\n};\n","import { ROWS, COLUMNS, COLOR, SHAPE, SIZE, DETAIL, LAYERS, TRANSFORM, CONFIG } from '../enums/constants';\n\n/**\n * This is the local options semantics based on which setters getters are created and reactivity is initiated.\n * This local object is only valid for Artboard.\n * Artboard merges global and local object both to the model\n *\n * Format\n *  PROPERTRY_NAME: {\n *      value: // default value of the property,\n *      meta: {\n *          typeCheck: // The setter value will be checked using this. If the value is function then the setter value\n *                     // is passed as args.\n *          typeExpected: // The output of typecheck action will be tested against this. Truthy value will set the\n *                       // value to the setter\n *          sanitizaiton: // Need for sanitization before type is checked\n *      }\n *  }\n *\n * @module\n */\n\nexport default {\n    [CONFIG]: {},\n    [ROWS]: {},\n    [COLUMNS]: {},\n    [COLOR]: {},\n    [SHAPE]: {},\n    [SIZE]: {},\n    [DETAIL]: {},\n    [LAYERS]: {},\n    [TRANSFORM]: {}\n};\n","import { ERROR_MSG } from 'muze-utils';\n\n/**\n * Interfaces for VisualGroup. Any new VisualGroup has to implement this class.\n * @class  SimpleGroup\n */\nclass SimpleGroup {\n\n    /**\n     * This method is used to set or get the DataModel instance.\n     *\n     * @param {DataModel | undefined} dataModel Instance of datamodel.\n\n     * @memberof  SimpleGroup\n     */\n    data () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    /**\n     * This method is used to set or get the group specific configuration\n     * properties\n     *\n     * @param {Object | undefined} configObj The input configuration.\n     *                                or instance of visual group.\n     * @memberof  SimpleGroup\n     */\n    config () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    /**\n     * This method is used to return a serialized representation of the\n     * instance's properties.\n     *\n     * @memberof  SimpleGroup\n     */\n    serialize () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    /**\n     * This method is used to get or set the measurement object which houses\n     * layout properties like width and height.\n     *\n     * @param {Object  | undefined} mObj The measurement properties.\n     * @memberof  SimpleGroup\n     */\n    measurement () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n}\n\nexport default SimpleGroup;\n","import { ERROR_MSG } from 'muze-utils';\n\n/**\n *\n *\n * @export\n * @class Variable\n */\nexport default class Variable {\n\n    /**\n     *\n     *\n     * @memberof Variable\n     */\n    type () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    /**\n     *\n     *\n     * @memberof Variable\n     */\n    toString () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n}\n","import Variable from './variable';\n\n/**\n * This is a wrapper on top of multiple variables which are of same type but they are shown in the same axis.This is\n * required in case of range plots or ohlc plots where one plot is mapped to multiple measure fields. At that time,\n * we need to create a composed variable from multiple variables. This class just wraps them into one variable instance\n * and provides methods to get the type and other common functionalities which can be performed on a simple variable\n * instance.\n *\n * @public\n * @class ComposeVars\n */\nclass ComposedVars extends Variable {\n\n    /**\n     * Creates an instance of ComposeVars.\n     *\n     * @param {Array} vars Array of SimpleVars.\n     */\n    constructor (...vars) {\n        super();\n        this.vars(vars);\n    }\n\n    vars (...params) {\n        if (params.length) {\n            this._vars = params[0];\n            return this;\n        }\n        return this._vars;\n    }\n\n    data (...dm) {\n        if (dm.length) {\n            this.vars().forEach(d => d.data(dm[0]));\n            this._data = dm[0];\n            return this;\n        }\n        return this._data;\n    }\n\n    /**\n     * Get all the field names from composed variable instance.\n     *\n     * @public\n     * @return {Array} Array of field names.\n     */\n    getMembers () {\n        const vars = this.vars();\n        return vars.map(member => member.getMembers()[0]);\n    }\n\n    /**\n     * Type of field associated with this composed variable.\n     *\n     * @return {string} Type of variable (Measure/Dimension).\n     */\n    type () {\n        return this.vars()[0].type();\n    }\n\n    toString () {\n        return this.vars().map(d => d.toString()).join(',');\n    }\n\n    /**\n     * Returns the number formatter function of the variable.\n     *\n     * @return {Function} Number formatter function of the variable.\n     */\n    numberFormat () {\n        return this.vars()[0].numberFormat();\n    }\n\n    format (values) {\n        return this.vars()[0].format(values);\n    }\n\n    /**\n     * Returns the subtype of the fields associated with this variable instance.\n     *\n     * @public\n     * @return {string} Subtype of the variable.\n     */\n    subtype () {\n        return this.vars()[0].subtype();\n    }\n\n    /**\n     * Returns the consecutive minimum difference of the field values.\n     *\n     * @public\n     * @return {number} Minimum consecutive difference.\n     */\n    getMinDiff () {\n        return this.vars()[0].getMinDiff();\n    }\n\n    /**\n     * Returns the display name of the fields.\n     *\n     * @return {string} returns the display name.\n     */\n    displayName () {\n        return this.vars().map(d => d.displayName()).join(',');\n    }\n}\n\nexport default ComposedVars;\n","import { DateTimeFormatter, retrieveFieldDisplayName, DimensionSubtype } from 'muze-utils';\nimport Variable from './variable';\n\n/**\n * This is a wrapper on top of fields passed in rows or columns in canvas. This is used to get the type of field or\n * get min difference from the field values.\n *\n * @public\n * @class SimpleVariable\n */\nexport default class SimpleVariable extends Variable {\n\n    /**\n     * Creates an instance of simple variable instance.\n     *\n     * @param {string} name Field name.\n     */\n    constructor (name) {\n        super();\n        this.oneVar(name);\n    }\n\n    /**\n     * Gets the field name associated with this variable instance.\n     *\n     * @public\n     * @return {string} Name of the field.\n     */\n    oneVar (...oneV) {\n        if (oneV.length) {\n            this._oneVar = oneV[0];\n            return this;\n        }\n        return this._oneVar;\n    }\n\n    data (...dm) {\n        if (dm.length) {\n            this._data = dm[0];\n            return this;\n        }\n        return this._data;\n    }\n\n    toString () {\n        return this.oneVar();\n    }\n\n    /**\n     * Gets the number formatter function of this variable.\n     *\n     * @public\n     * @return {Function} Number formatter function.\n     */\n    numberFormat () {\n        if (this.type() === 'measure') {\n            const formatter = this.data().getFieldspace().getMeasure()[this.oneVar()];\n            return formatter.numberFormat();\n        } return val => val;\n    }\n\n    format (values) {\n        if (values && this.subtype() === 'temporal') {\n            const formatter = this.data().getFieldspace().getDimension()[this.oneVar()].schema().format;\n            const dtFormat = new DateTimeFormatter(formatter);\n            values = values.map(e => dtFormat.getNativeDate(e));\n        }\n        return values;\n    }\n\n    /**\n     * Returns a formatter function which transforms the input value to its original form.\n     *\n     * @public\n     * @return {Function} Returns raw formatter function.\n     */\n    rawFormat () {\n        if (this.subtype() === DimensionSubtype.TEMPORAL) {\n            const dateFormat = this.data().getFieldspace().getDimension()[this.oneVar()].schema().format;\n            return val => DateTimeFormatter.formatAs(val, dateFormat);\n        }\n        return val => val;\n    }\n\n    /**\n     * Return the field names associated with this variable instance.\n     *\n     * @public\n     * @return {Array} Array of fields.\n     */\n    getMembers () {\n        return [this.oneVar()];\n    }\n\n    /**\n     * Returns the type of the variable. Whether it is measure or dimension.\n     *\n     * @public\n     * @return {string} Type of variable.\n     */\n    type () {\n        const fieldDef = this.data().getFieldsConfig()[this.oneVar()].def;\n        return fieldDef.type;\n    }\n\n    /**\n     * Returns the subtype of the variable. Subtype can be categorical or temporal. If no subtype is found, then it\n     * returns the type of the variable.\n     *\n     * @public\n     * @return {string} Subtype of variable.\n     */\n    subtype () {\n        const fieldDef = this.data().getFieldsConfig()[this.oneVar()].def;\n        return fieldDef.subtype || fieldDef.type;\n    }\n\n    /**\n     * Returns the minimum consecutive difference between the data values of this variable.\n     *\n     * @return {number} Minimum consecutive difference.\n     */\n    getMinDiff () {\n        const fieldSpace = this.data().getFieldspace();\n        return fieldSpace.fieldsObj()[this.oneVar()].minimumConsecutiveDifference();\n    }\n\n    /**\n     * Returns true if two variable instances are same.If both variable has the same field names, they are equal.\n     *\n     * @return {Boolean} Whether two variable instances are same.\n     */\n    equals (varInst) {\n        return this.oneVar() === varInst.oneVar();\n    }\n\n    /**\n     * Returns the display name of the field.\n     *\n     * @return {string} returns the display name.\n     */\n    displayName () {\n        return retrieveFieldDisplayName(this.data(), this.oneVar());\n    }\n}\n","import { ComposedVars, SimpleVariable } from '../variable';\nimport { DIMENSION, COLUMNS, ROWS, TEMPORAL } from '../enums/constants';\n\n/**\n * Gets the list of fields in a sorted order by measurement and dimension\n *\n * @param {Array} fieldList List of fields in the view\n * @param {Object} fieldMap Mapping of fields in the datamodel\n * @return {Array} fields sorted by measurement and dimensions\n */\nconst orderFields = (fieldArray, type) => {\n    const dimensionArr = [[], []];\n    const measureArr = [[], []];\n    const temporalArr = [[], []];\n    const categoricalArr = [[], []];\n\n    fieldArray.forEach((fieldList, index) => {\n        fieldList.forEach((field) => {\n            if (field.type() === DIMENSION) {\n                dimensionArr[index].push(field);\n                field.subtype() === TEMPORAL ? temporalArr[index].push(field) : categoricalArr[index].push(field);\n            } else {\n                measureArr[index].push(field);\n            }\n        });\n    });\n\n    const numOfMeasures = measureArr[0].length + (measureArr[1] ? measureArr[1].length : 0);\n\n    // Single array of fields\n    if (!fieldArray[1]) {\n        // Push measures to bottom\n        measureArr[1] = type === COLUMNS ? measureArr[0] : [];\n        // Push measures to left\n        measureArr[0] = type !== COLUMNS ? measureArr[0] : [];\n        // Bottom and right dimensions empty\n        dimensionArr[1] = [];\n        // Left and top filled with dimensions\n        dimensionArr[0] = dimensionArr[0];\n        if (numOfMeasures === 0) {\n            const allDimensions = [...dimensionArr[0], ...dimensionArr[1]];\n            if (type === COLUMNS) {\n                dimensionArr[1] = allDimensions[allDimensions.length - 1] ? [allDimensions[allDimensions.length - 1]]\n                        : [];\n                allDimensions.splice(-1, 1);\n            } else {\n                dimensionArr[1] = [];\n            }\n            dimensionArr[0] = [...allDimensions];\n        }\n    }\n\n    if (dimensionArr[0].length && dimensionArr[1].length && numOfMeasures > 0) {\n        dimensionArr[0] = [...dimensionArr[0], ...dimensionArr[1]];\n        dimensionArr[1] = [];\n    }\n    return {\n        fields: dimensionArr.map((list, i) => (i === 1 ?\n            measureArr[i].concat(dimensionArr[i]) : dimensionArr[i].concat(measureArr[i]))),\n        dimensions: [...dimensionArr[0], ...dimensionArr[1]],\n        measures: [...measureArr[0], ...measureArr[1]],\n        temporal: [...temporalArr[0], ...temporalArr[1]],\n        categorical: [...categoricalArr[0], ...categoricalArr[1]]\n    };\n};\n\n/**\n * Gets the list of normalized fields\n *\n * @param {Array} fields List of fields in the view\n * @param {Object} fieldMap Mapping of fields in the datamodel\n * @return {Array} fields normalized by measurement and dimensions\n */\nconst normalizeFields = (config, type) => {\n    const fieldsArr = [];\n    const fields = config[type];\n\n    if (!(fields[0] instanceof Array)) {\n        fieldsArr[0] = fields;\n    } else {\n        fieldsArr[0] = fields[0] || [];\n        fieldsArr[1] = fields[1] || [];\n    }\n    return fieldsArr;\n};\n\n/**\n *\n *\n * @param {*} fields\n * @param {*} datamodel\n *\n */\nconst convertToVar = (datamodel, fields) => {\n    const vars = [];\n\n    fields && fields.forEach((field) => {\n        if (field instanceof ComposedVars) {\n            vars.push(field);\n            field.data(datamodel);\n        } else {\n            vars.push(new SimpleVariable(field).data(datamodel));\n        }\n    });\n    return vars;\n};\n\n/**\n *\n *\n * @param {*} rows\n * @param {*} columns\n * @param {*} datamodel\n *\n */\nexport const transformFields = (datamodel, config) => {\n    const [rowsInfo, columnsInfo] = [ROWS, COLUMNS].map((fields) => {\n        const normalizedFields = normalizeFields(config, fields);\n        const norFields = [convertToVar(datamodel, normalizedFields[0])];\n\n        if (normalizedFields[1]) {\n            norFields[1] = convertToVar(datamodel, normalizedFields[1]);\n        }\n        return orderFields(norFields, fields);\n    });\n    const {\n        fields: rows,\n        dimensions: rowDimensions,\n        measures: rowMeasures,\n        temporal: rowTemporalFields,\n        categorical: rowCategoricalFields\n    } = rowsInfo;\n    const {\n        fields: columns,\n        dimensions: columnDimensions,\n        measures: columnMeasures,\n        temporal: columnTemporalFields,\n        categorical: columnCategoricalFields\n    } = columnsInfo;\n    return {\n        rows,\n        rowDimensions,\n        rowMeasures,\n        rowTemporalFields,\n        rowCategoricalFields,\n        columns,\n        columnTemporalFields,\n        columnCategoricalFields,\n        columnDimensions,\n        columnMeasures\n    };\n};\n","import { ERROR_MSG, mergeRecursive } from 'muze-utils';\nimport { transformFields } from './field-sanitizer';\nimport { getHeaderAxisFrom } from '../group-helper/group-utils';\nimport { ROW, COLUMN } from '../enums/constants';\n\n/**\n *\n *\n * @export\n * @class VisualEncoder\n */\nexport default class VisualEncoder {\n\n    /**\n     *\n     *\n     * @memberof VisualEncoder\n     */\n    createAxis () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    /**\n     *\n     *\n     * @memberof VisualEncoder\n     */\n    setCommonDomain () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    /**\n     *\n     *\n     * @memberof VisualEncoder\n     */\n    getLayerConfig () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    fieldInfo (...info) {\n        if (info.length) {\n            this._fieldInfo = mergeRecursive(this._fieldInfo || {}, info[0]);\n            return this;\n        }\n        return this._fieldInfo;\n    }\n\n    /**\n     *\n     *\n     * @param {*} datamodel\n     * @param {*} config\n     *\n     * @memberof VisualEncoder\n     */\n    fieldSanitizer (datamodel, config) {\n        this.fieldInfo(transformFields(datamodel, config));\n        return this.fieldInfo();\n    }\n\n    /**\n     *\n     *\n     * @param {*} params\n     *\n     * @memberof VisualEncoder\n     */\n    axisFrom (...params) {\n        if (params.length) {\n            this._axisFrom = params[0];\n            return this;\n        }\n        return this._axisFrom;\n    }\n\n    /**\n     *\n     *\n     * @param {*} params\n     *\n     * @memberof VisualEncoder\n     */\n    headerFrom (...params) {\n        if (params.length) {\n            this._headerFrom = params[0];\n            return this;\n        }\n        return this.__headerFrom;\n    }\n\n    /**\n     *\n     *\n     * @param {*} axisFrom\n     *\n     * @memberof CartesianEncoder\n     */\n    setAxisAndHeaders (axisFrom = {}, fields) {\n        const [rowHeader, rowAxis] = getHeaderAxisFrom(ROW, fields.rows, axisFrom);\n        const [colHeader, colAxis] = getHeaderAxisFrom(COLUMN, fields.columns, axisFrom);\n\n        this.axisFrom({\n            row: rowAxis,\n            column: colAxis\n        });\n        this.headerFrom({\n            row: rowHeader,\n            column: colHeader\n        });\n        return this;\n    }\n}\n","import { ContinousAxis, BandAxis, TimeAxis, ColorAxis, SizeAxis, ShapeAxis } from '@chartshq/muze-axis';\n\nexport const scaleMaps = {\n    linear: ContinousAxis,\n    band: BandAxis,\n    temporal: TimeAxis,\n    size: SizeAxis,\n    color: ColorAxis,\n    shape: ShapeAxis\n};\n","import { ScaleType } from '@chartshq/muze-axis';\n\n/**\n * Map of DataModel types to associated field types.\n */\nexport const dataTypeScaleMap = {\n    dimension: ScaleType.BAND,\n    categorical: ScaleType.BAND,\n    temporal: ScaleType.TIME,\n    measure: ScaleType.LINEAR,\n    continuous: ScaleType.LINEAR\n};\n","import { mergeRecursive, getObjProp } from 'muze-utils';\nimport { AxisOrientation } from '@chartshq/muze-axis';\nimport { ENCODING } from '@chartshq/visual-layer';\nimport { scaleMaps } from '../enums/scale-maps';\nimport { getAxisType, getAxisKey } from '../group-helper';\nimport { dataTypeScaleMap } from '../data-type-scale-map';\nimport { CATEGORICAL, TEMPORAL, BAR, LINE, POINT, BOTH, Y, COLOR, SHAPE, SIZE, ANGLE0 } from '../enums/constants';\n\n/**\n *\n *\n * @param {*} axisInfo\n * @param {*} field\n * @param {*} axesCreators\n *\n */\nconst getAxisConfig = (axisInfo, field, axesCreators, indices, facetFields) => {\n    let axisOrientation;\n    const { index, axisIndex, axisType } = axisInfo;\n    const { config, position } = axesCreators;\n    const { rowIndex, columnIndex } = indices;\n    const rawUserAxisConfig = config.axes ? (config.axes[axisType] || {}) : {};\n\n    // Change config object to a function if not already one\n    const userAxisConfigFn = typeof rawUserAxisConfig !== 'function' ?\n    () => rawUserAxisConfig : rawUserAxisConfig;\n    const userAxisConfig = userAxisConfigFn(rowIndex, columnIndex, {\n        axisFields: field.getMembers(),\n        facetFields\n    });\n\n    // If current config does not specifes config for an axis, retain old config\n    if (!userAxisConfig) {\n        return {};\n    }\n\n    const {\n        LEFT,\n        RIGHT,\n        TOP,\n        BOTTOM\n    } = AxisOrientation;\n    const allOrientations = axisType === Y ? [LEFT, RIGHT] : [TOP, BOTTOM];\n\n    if (position === BOTH) {\n        axisOrientation = allOrientations[axisIndex];\n    } else {\n        axisOrientation = position;\n    }\n    const axisConfig = {\n        id: `${axisType}-${index}-${axisIndex}`,\n        name: field.displayName(),\n        field: field.toString(),\n        numberFormat: field.numberFormat(),\n        orientation: axisOrientation,\n        showAxisName: true,\n        show: true,\n        type: dataTypeScaleMap[field.subtype()]\n    };\n    userAxisConfig.tickValues = field.format(userAxisConfig.tickValues);\n    userAxisConfig.domain = field.format(userAxisConfig.domain);\n\n    return mergeRecursive(axisConfig, userAxisConfig);\n};\n\n/**\n *\n *\n * @param {*} axisInfo\n * @param {*} field\n * @param {*} axesCreators\n *\n */\nconst createSimpleAxis = (axisConfig, field, axesCreators) => {\n    const { labelManager } = axesCreators;\n    const Cls = scaleMaps[dataTypeScaleMap[field.subtype()]];\n    const simpleAxis = new Cls(axisConfig, { labelManager });\n    return simpleAxis;\n};\n\nexport const getAdjustedDomain = (max, min) => {\n    const y1ratio = max[0] / (max[0] - min[0]);\n    const y2ratio = max[1] / (max[1] - min[1]);\n\n    // adjust min/max values for positive negative values zero line etc\n    let allSameSign = false;\n\n    // if all numbers are positive set floor to zero\n    if (min[0] > 0 && min[1] > 0 && min[1] > 0 && max[1] > 0) {\n        allSameSign = true;\n        min[0] = 0;\n        min[1] = 0;\n    }\n\n    // if all numbers are negative set ceiling to zero\n    if (min[0] < 0 && min[1] < 0 && min[1] < 0 && max[1] < 0) {\n        allSameSign = true;\n        max[0] = 0;\n        max[1] = 0;\n    }\n\n    // align zero line if necessary\n    if (!allSameSign && y1ratio !== y2ratio) {\n        if (y1ratio < y2ratio) {\n                    // adjust min[1]\n            min[1] = min[0] / max[0] * max[1];\n        } else {\n                    // adjust min[0]\n            min[0] = min[1] / max[1] * max[0];\n        }\n    }\n    return [\n        [min[0], max[0]],\n        [min[1], max[1]]\n    ];\n};\n\n/**\n *\n *\n * @param {*} axisType\n * @param {*} fieldInfo\n * @param {*} axesCreators\n * @param {*} groupAxes\n *\n */\nexport const generateAxisFromMap = (axisType, fieldInfo, axesCreators, axesInfo, indices, facetFields) => {\n    let axisKey;\n    const { groupAxes, valueParser } = axesInfo;\n    const currentAxes = [];\n    const { fields, index } = fieldInfo;\n    const { cacheMaps } = axesCreators;\n    const map = cacheMaps[`${axisType}AxesMap`];\n\n    const commonAxisKey = getAxisKey(axisType, index);\n    fields.forEach((field, axisIndex) => {\n        axisKey = getAxisKey(axisType, index, axisIndex, dataTypeScaleMap[field.subtype()]);\n        const axisConfig = getAxisConfig({ index, axisIndex, axisType }, field, axesCreators, indices, facetFields);\n\n        let axis;\n        if (!map.has(axisKey)) {\n            axis = createSimpleAxis(axisConfig, field, axesCreators);\n        } else {\n            axis = map.get(axisKey);\n            axis._rotationLock = false;\n            axis.config(axisConfig);\n        }\n        axis.valueParser(valueParser);\n        currentAxes.push(axis);\n        map.set(axisKey, axis);\n    });\n\n    if (currentAxes.length) {\n        map.set(commonAxisKey, currentAxes);\n        groupAxes.add(commonAxisKey);\n    }\n\n    return currentAxes;\n};\n\nexport const sanitizeIndividualLayerConfig = (encodingConfigs, def) => {\n    [COLOR, SHAPE, SIZE].forEach((axis) => {\n        if (encodingConfigs[axis] && encodingConfigs[axis].field) {\n            def.forEach((conf) => {\n                conf.encoding = conf.encoding || {};\n                !conf.encoding[axis] && (conf.encoding[axis] = {});\n                conf.encoding[axis].field = encodingConfigs[axis].field;\n            });\n        }\n    });\n};\n\n/**\n *\n *\n * @memberof MatrixResolver\n */\nexport const mutateAxesFromMap = (cacheMaps, axes) => {\n    const {\n        xAxesMap,\n        yAxesMap\n    } = cacheMaps;\n    const {\n        x: xAxisSet,\n        y: yAxisSet\n    } = axes;\n    const xAxes = [];\n    const yAxes = [];\n\n    xAxisSet.forEach((axisId) => {\n        const xAxis = xAxesMap.get(axisId);\n        xAxes.push(xAxis);\n    });\n    yAxisSet.forEach((axisId) => {\n        const yAxis = yAxesMap.get(axisId);\n        yAxes.push(yAxis);\n    });\n    return {\n        xAxes, yAxes\n    };\n};\n\n/**\n * return a default mark based on predefined set of rules of type and subtype of the fields\n *\n * @param {string} colFieldType dimension/measure - temporal/ordinal/nominal\n * @param {string} rowFieldType dimension/measure - temporal/ordinal/nominal\n * @return {Object} return mark type\n */\nexport const getDefaultMark = (colFieldType, rowFieldType) => {\n    let mark;\n\n    if (colFieldType === CATEGORICAL || rowFieldType === CATEGORICAL) {\n        mark = BAR;\n    } else if (colFieldType === TEMPORAL || rowFieldType === TEMPORAL) {\n        mark = LINE;\n    } else {\n        mark = POINT;\n    }\n\n    return mark;\n};\n\n/**\n *\n *\n * @param {*} axesCreators\n * @param {*} [fieldInfo=[]]\n *\n */\nexport const createRetinalAxis = (axesCreators, fieldProps = {}) => {\n    const { axisType, fieldsConfig } = axesCreators;\n    const field = fieldProps.field;\n    const axis = [];\n    const Cls = scaleMaps[axisType];\n\n    fieldProps.type = fieldProps.type ? fieldProps.type : getAxisType(fieldsConfig, field || null);\n    axis.push(new Cls(fieldProps));\n    return axis;\n};\n\n/**\n *\n *\n * @param {*} arr\n * @param {*} val\n *\n */\nexport const getIndex = (arr, val) => {\n    let i = 0;\n    let arrIndex = -1;\n\n    while (arrIndex === -1 && i < arr.length) {\n        if (arr[i].toString() === val.toString()) {\n            arrIndex = i;\n        }\n        i++;\n    }\n    return arrIndex;\n};\n\n/**\n *\n *\n * @param {*} colFields\n * @param {*} rowFields\n * @param {*} userLayerConfig\n *\n * @memberof CartesianEncoder\n */\nexport const getLayerConfFromFields = (colFields, rowFields, userLayerConfig) => userLayerConfig.filter((conf) => {\n    const userConf = conf instanceof Array ? conf : [conf];\n    const encodingArr = [].concat(...userConf.map(d => d.encoding).filter(d => d !== undefined));\n\n    if (!encodingArr.length) {\n        return true;\n    }\n\n    const xFields = [].concat(...encodingArr.map(d => [d.x && d.x.field, d.x0 && d.x0.field]))\n                .filter(d => d !== undefined && d !== null);\n    const yFields = [].concat(...encodingArr.map(d => [d.y && d.y.field, d.y0 && d.y0.field]))\n                .filter(d => d !== undefined && d !== null);\n\n    if (!xFields.length && !yFields.length) {\n        return true;\n    }\n\n    const colFieldExist = xFields.length ? xFields.every(d => colFields.indexOf(d) !== -1) : false;\n    const rowFieldExist = yFields.length ? yFields.every(d => rowFields.indexOf(d) !== -1) : false;\n    if (xFields.length && yFields.length) {\n        return colFieldExist && rowFieldExist;\n    }\n    return colFieldExist || rowFieldExist;\n});\n\nexport const resolveAxisConfig = (context, fieldInf, axisInfo) => {\n    const { rowIndex, columnIndex, axesObj } = axisInfo;\n    const { config, facetFields, resolver } = context;\n    const resolverAxes = resolver.axes();\n    const { RADIUS, ANGLE } = ENCODING;\n    [RADIUS, ANGLE, ANGLE0].forEach((enc) => {\n        const axesArr = resolverAxes[enc];\n        if (!axesArr[rowIndex]) {\n            axesArr[rowIndex] = [];\n        }\n        axesArr[rowIndex][columnIndex] = axesObj[enc];\n        const axisConfig = getObjProp(config.axes, enc) || {};\n\n        axesObj[enc].forEach((axis, i) => {\n            let userConfig = axisConfig;\n            if (axisConfig instanceof Function) {\n                userConfig = axisConfig(rowIndex, columnIndex, {\n                    axisFields: [fieldInf[enc][i]],\n                    facetFields\n                });\n            }\n            axis.config(userConfig);\n        });\n    });\n};\n","import { layerFactory } from '@chartshq/visual-layer';\nimport {\n    mergeRecursive,\n    STATE_NAMESPACES,\n    unionDomain,\n    COORD_TYPES,\n    toArray,\n    nearestSortingDetails\n} from 'muze-utils';\nimport { ScaleType } from '@chartshq/muze-axis';\nimport {\n    generateAxisFromMap,\n    getDefaultMark,\n    getIndex,\n    getLayerConfFromFields,\n    getAdjustedDomain,\n    sanitizeIndividualLayerConfig\n} from './encoder-helper';\nimport { retriveDomainFromData } from '../group-helper';\n\nimport { ROW, COLUMN, COL, LEFT, TOP, MEASURE, BOTH, X, Y } from '../enums/constants';\nimport VisualEncoder from './visual-encoder';\n\nconst CARTESIAN = COORD_TYPES.CARTESIAN;\n\n/**\n *\n *\n * @export\n * @class CartesianEncoder\n * @extends {VisualEncoder}\n */\nexport default class CartesianEncoder extends VisualEncoder {\n\n    /**\n     *\n     *\n     *\n     * @memberof CartesianEncoder\n     */\n    static type () {\n        return CARTESIAN;\n    }\n\n    /**\n     *\n     *\n     * @param {*} axesCreators\n     * @param {*} fieldInfo\n     *\n     * @memberof CartesianEncoder\n     */\n    createAxis (axesCreators, fieldInfo, context) {\n        const geomCellAxes = {};\n        const {\n            axes\n        } = axesCreators;\n        const {\n            projections,\n            indices\n        } = fieldInfo;\n        const {\n            rowFields,\n            columnFields\n        } = projections;\n        const {\n             rowIndex,\n             columnIndex\n        } = indices;\n        const axisFields = [{\n            fields: rowFields,\n            index: rowIndex\n        }, {\n            fields: columnFields,\n            index: columnIndex\n        }];\n        const { resolver, facetFields, geomCell } = context;\n        const xAxes = axes.x || [];\n        const yAxes = axes.y || [];\n\n        [rowFields, columnFields].forEach((fields, i) => {\n            const type = i === 0 ? ROW : COLUMN;\n            const axis = i === 0 ? Y : X;\n\n            if (fields.length > 1) {\n                axesCreators.position = BOTH;\n            } else {\n                axesCreators.position = this.axisFrom()[type];\n            }\n            geomCellAxes[axis] = generateAxisFromMap(axis, axisFields[i], axesCreators, {\n                groupAxes: axis === X ? xAxes : yAxes,\n                valueParser: resolver.valueParser()\n            }, indices, facetFields);\n        });\n        geomCell.axes(geomCellAxes);\n        return geomCellAxes;\n    }\n\n    updateDomains (store, axes) {\n        const xAxes = axes.x;\n        const yAxes = axes.y;\n        store.model.lock();\n        for (let i = 0; i < xAxes.length; i++) {\n            for (let j = 0; j < xAxes[i].length; j++) {\n                store.commit(`${STATE_NAMESPACES.GROUP_GLOBAL_NAMESPACE}.domain.x.${0}${i}0`, xAxes[i][j].domain());\n            }\n        }\n        for (let i = 0; i < yAxes.length; i++) {\n            for (let j = 0; j < yAxes[i].length; j++) {\n                store.commit(`${STATE_NAMESPACES.GROUP_GLOBAL_NAMESPACE}.domain.y.${i}${0}0`, yAxes[i][j].domain());\n                yAxes[i][j]._domainLock = false;\n            }\n        }\n\n        store.model.unlock();\n    }\n\n    unionUnitDomains (context) {\n        const store = context.store();\n        const resolver = context.resolver();\n        const units = resolver.units();\n        const domains = {\n            0: {},\n            1: {}\n        };\n        const sortingDetails = nearestSortingDetails(context.getGroupByData());\n\n        for (let rIdx = 0, len = units.length; rIdx < len; rIdx++) {\n            const unitsArr = units[rIdx];\n            for (let cIdx = 0, len2 = unitsArr.length; cIdx < len2; cIdx++) {\n                const unit = unitsArr[cIdx];\n                const axisFields = unit.fields();\n                const encodingDomains = unit.getDataDomain();\n                ['x', 'y'].forEach((axisType, axisTypeIndex) => {\n                    const fieldArr = axisFields[axisType];\n                    fieldArr.forEach((field, axisIndex) => {\n                        const key = !axisTypeIndex ? `0${cIdx}${axisIndex}` : `${rIdx}0${axisIndex}`;\n                        const dom = encodingDomains[axisType];\n                        const typeOfField = field.subtype();\n\n                        if (dom && Object.keys(dom).length !== 0) {\n                            domains[axisTypeIndex][key] = unionDomain([(domains[axisTypeIndex] &&\n                                domains[axisTypeIndex][key]) || [], dom[`${field}`]], typeOfField);\n                        }\n                    });\n                });\n            }\n        }\n\n        const { x: xAxes, y: yAxes } = resolver.axes();\n        store.model.lock();\n        [xAxes, yAxes].forEach((axesArr, axisType) => {\n            axesArr.forEach((axes, idx) => {\n                let key;\n                let domain = [];\n                let adjustedDomain = [];\n                const min = [];\n                const max = [];\n                const typeOfAxis = axes[0].constructor.type();\n\n                if (axes.length > 1 && typeOfAxis === ScaleType.LINEAR && axes[0].config().alignZeroLine) {\n                    axes.forEach((axis, i) => {\n                        key = !axisType ? `0${idx}${i}` : `${idx}0${i}`;\n                        domain = domains[axisType][key];\n                        min[i] = domain[0];\n                        max[i] = domain[1];\n                    });\n                    adjustedDomain = getAdjustedDomain(max, min);\n                } else if (typeOfAxis === ScaleType.BAND && !sortingDetails) {\n                    /* Sort categorical fields to ensure consistency across all rows\n                    only if field is categorical and is not explicitily sorted by user */\n                    key = !axisType ? `0${idx}0` : `${idx}00`;\n                    domains[axisType][key].sort();\n                }\n\n                axes.forEach((axis, index) => {\n                    key = !axisType ? `0${idx}${index}` : `${idx}0${index}`;\n                    domain = adjustedDomain[index] || domains[axisType][key];\n\n                    domain && axis.domain(domain);\n                    const type = !axisType ? 'x' : 'y';\n                    store.commit(`${STATE_NAMESPACES.GROUP_GLOBAL_NAMESPACE}.domain.${type}.${idx}${index}`, domain);\n                });\n            });\n        });\n        store.model.unlock();\n    }\n\n    /**\n     *\n     *\n     * @param {*} fields\n     *\n     * @memberof CartesianEncoder\n     */\n    getFacetsAndProjections (fields, type) {\n        let facets = [];\n        let projections = [];\n        let counter = 0;\n        const primaryFacets = [];\n        const secondaryFacets = [];\n        const primaryFields = fields[0];\n        const secondaryFields = fields[1];\n        const primaryLen = primaryFields.length;\n        const secondaryLen = secondaryFields.length;\n        const axisFrom = this.axisFrom();\n\n        for (let i = 0; i < primaryLen; i++) {\n            let projArr = [primaryFields[i]];\n            const primaryField = primaryFields[i];\n\n            if (primaryField.type() === MEASURE) {\n                const secondaryField = secondaryFields[counter];\n                if (secondaryField && secondaryField.type() === MEASURE) {\n                    counter++;\n                    projArr = [primaryField, secondaryField];\n                }\n                projections.push(projArr);\n            } else {\n                facets.push(primaryField);\n                primaryFacets.push(primaryField);\n            }\n        }\n        if (secondaryLen > counter) {\n            for (let i = counter; i < secondaryLen; i++) {\n                const secondaryField = secondaryFields[i];\n                const projArr = [secondaryField];\n                if (secondaryField.type() === MEASURE) {\n                    projections.push(projArr);\n                } else {\n                    facets.push(secondaryField);\n                    secondaryFacets.push(secondaryField);\n                }\n            }\n        }\n        if ((primaryFacets.length || secondaryFacets.length) && !projections.length) {\n            type = type === COL ? COLUMN : type;\n            if ((axisFrom[type] === LEFT || axisFrom[type] === TOP) && primaryFacets.length) {\n                const axisFromIndex = primaryFacets.length - 1;\n                const facet = primaryFacets[axisFromIndex];\n                projections = [[facet]];\n                const existIndex = getIndex(secondaryFacets, facet);\n                if (existIndex > -1) {\n                    projections = [[facet, facet]];\n                    secondaryFacets.splice(existIndex, 1);\n                }\n                primaryFacets.splice(axisFromIndex, 1);\n            } else {\n                const axisFromIndex = 0;\n                const facet = secondaryFacets[axisFromIndex];\n                projections = [[facet]];\n                const existIndex = getIndex(primaryFacets, facet);\n                if (existIndex > -1) {\n                    projections = [[facet, facet]];\n                    primaryFacets.splice(existIndex, 1);\n                }\n                secondaryFacets.splice(axisFromIndex, 1);\n            }\n        }\n\n        facets = [...primaryFacets, ...secondaryFacets];\n        facets = facets.filter((el, index, self) => index === self.findIndex(t => (t.toString() === el.toString())));\n        return {\n            facets,\n            projections\n        };\n    }\n\n    /**\n     *\n     *\n     * @param {*} datamodel\n     * @param {*} config\n     *\n     * @memberof CartesianEncoder\n     */\n    fieldSanitizer (datamodel, config) {\n        return super.fieldSanitizer(datamodel, config);\n    }\n\n    /**\n     *\n     *\n     * @param {*} datamodel\n     *\n     * @memberof CartesianEncoder\n     */\n    getRetinalFieldsDomain (dataModels, encoding) {\n        const groupedModel = dataModels.groupedModel;\n        const domains = {};\n        for (const key in encoding) {\n            if ({}.hasOwnProperty.call(encoding, key)) {\n                const encodingObj = encoding[key];\n                const field = encodingObj.field;\n                if (!encodingObj.domain && field) {\n                    const domain = retriveDomainFromData(groupedModel, field);\n                    domains[field] = domain;\n                }\n            }\n        }\n        return domains;\n    }\n\n    /**\n     *\n     *\n     * @param {*} layerArray\n     * @memberof CartesianEncoder\n     */\n    serializeLayerConfig (layerArray) {\n        const serializedLayers = [];\n        // let currentLayerIndex = 0;\n        layerArray.length && layerArray.forEach((layer, i) => {\n            const def = layerFactory.sanitizeLayerConfig(layer);\n            def.order = i;\n            serializedLayers.push(def);\n        });\n        return serializedLayers;\n    }\n\n    sanitizeLayerConfig (encodingConfigs, userLayerConfig) {\n        const layerConfig = [];\n        userLayerConfig.forEach((config) => {\n            const def = toArray(config.def);\n            sanitizeIndividualLayerConfig(encodingConfigs, def);\n            layerConfig.push(config);\n        });\n        return layerConfig;\n    }\n\n    /**\n     *\n     *\n     * @param {*} fields\n     * @param {*} userLayerConfig\n     *\n     * @memberof CartesianEncoder\n     */\n    getLayerConfig (fields, userLayerConfig, retinalConfig) {\n        const layerConfig = [];\n        const {\n            columnFields,\n            rowFields\n        } = fields;\n\n        // let currentLayerIndex = 0;\n        columnFields.forEach((colField) => {\n            const colFieldName = colField.toString();\n            rowFields.forEach((rowField) => {\n                let configs = [];\n                const rowFieldName = rowField.toString();\n                const encoding = {\n                    x: {\n                        field: colFieldName\n                    },\n                    y: {\n                        field: rowFieldName\n                    }\n                };\n                const rowFieldType = rowField.subtype();\n                const colFieldType = colField.subtype();\n                const mark = getDefaultMark(colFieldType, rowFieldType);\n\n                const defConfigs = [{\n                    mark,\n                    def: {\n                        mark,\n                        encoding\n                    }\n                }];\n\n                const layerConfigs = getLayerConfFromFields(colField.getMembers(),\n                    rowField.getMembers(), userLayerConfig || []);\n                if (layerConfigs.length) {\n                    configs = layerConfigs.map((layerConf) => {\n                        const mergedLayerConf = mergeRecursive(mergeRecursive({}, defConfigs[0].def), layerConf);\n                        const serializedLayerConfig = layerFactory.getSerializedConf(mergedLayerConf.mark,\n                            mergedLayerConf);\n                        return {\n                            mark: mergedLayerConf.mark,\n                            order: mergedLayerConf.order,\n                            def: serializedLayerConfig\n                        };\n                    });\n                } else {\n                    configs = defConfigs;\n                }\n\n                layerConfig.push(...configs);\n            });\n        });\n        return this.sanitizeLayerConfig(retinalConfig, layerConfig);\n    }\n}\n","import { AngleAxis, RadiusAxis } from '@chartshq/muze-axis';\nimport { layerFactory, ENCODING } from '@chartshq/visual-layer';\nimport {\n    mergeRecursive,\n    STATE_NAMESPACES,\n    GROUP_BY_FUNCTIONS,\n    COORD_TYPES,\n    toArray,\n    getObjProp,\n    defaultValue\n} from 'muze-utils';\nimport VisualEncoder from './visual-encoder';\nimport { SIZE, MEASURE, ARC, COLOR } from '../enums/constants';\nimport { sanitizeIndividualLayerConfig, resolveAxisConfig } from './encoder-helper';\nimport { SimpleVariable } from '../variable';\n\nconst POLAR = COORD_TYPES.POLAR;\nconst { RADIUS, ANGLE, ANGLE0 } = ENCODING;\n\nconst axesCls = {\n    [RADIUS]: RadiusAxis,\n    [ANGLE]: AngleAxis,\n    [ANGLE0]: AngleAxis\n};\n\nconst getSizeMultiplier = (sizeVal, sizeAxis) => {\n    const sizeAxisDomain = sizeAxis.domain();\n    const sizeMultiplier = sizeAxis.getSize(sizeVal) / (sizeAxisDomain ? sizeAxis.range()[1] : sizeAxis.config().value);\n    return sizeMultiplier;\n};\n\nconst setRadiusFactor = (context) => {\n    const data = context.data();\n    const sizeField = context.retinalFields().size.field;\n    const { radius, size } = context.axes();\n\n    if (sizeField && radius && radius.length) {\n        const sizeFieldIndex = data.getFieldsConfig()[sizeField].index;\n        const sizeVal = data.getData().data.reduce((acc, val) => acc + val[sizeFieldIndex], 1);\n        const sizeMultiplier = getSizeMultiplier(sizeVal, size[0]);\n        radius.forEach(axis => axis.setRadiusFactor(sizeMultiplier));\n    }\n};\n\n/**\n *\n *\n * @export\n * @class PolarEncoder\n * @extends {VisualEncoder}\n */\nexport default class PolarEncoder extends VisualEncoder {\n\n    /**\n     *\n     *\n     * @param {*} axesCreators\n     * @param {*} fieldInfo\n     *\n     * @memberof PolarEncoder\n     */\n    createAxis (axesCreators, fieldInfo, context) {\n        const {\n            axes\n        } = axesCreators;\n        const geomCellAxes = axes;\n        const {\n            indices\n        } = fieldInfo;\n        const {\n            rowIndex,\n            columnIndex\n        } = indices;\n        // Dummy axes for polar, to create blank cells\n        const pieAxes = geomCellAxes.pie || [];\n\n        pieAxes[rowIndex] = pieAxes[rowIndex] || [];\n        pieAxes[rowIndex][columnIndex] = [];\n\n        const axesObj = {};\n        const { geomCell, resolver } = context;\n        const layers = resolver.matrixLayers();\n        const resolverAxes = resolver.axes();\n        const cellLayers = layers[rowIndex][columnIndex];\n        const fields = {\n            radius: {},\n            angle: {},\n            angle0: {}\n        };\n\n        cellLayers.forEach((layerConf) => {\n            const def = layerConf.def;\n            [ANGLE, ANGLE0, RADIUS].forEach((enc) => {\n                const field = getObjProp(def.encoding, enc, 'field');\n                field && (fields[enc][field] = 0);\n            });\n        });\n        const fieldInf = {};\n        const varInstances = {};\n\n        for (const encType in fields) {\n            fieldInf[encType] = Object.keys(fields[encType]);\n            axesObj[encType] = [];\n            varInstances[encType] = [];\n            fieldInf[encType].forEach((field, i) => {\n                varInstances[encType][i] = new SimpleVariable(field);\n                axesObj[encType][i] = new axesCls[encType]();\n            });\n            axesObj[encType][axesObj[encType].length] = new axesCls[encType]();\n        }\n        resolveAxisConfig(context, fieldInf, {\n            axesObj,\n            rowIndex,\n            columnIndex\n        });\n        geomCell.axes(axesObj)\n            .fields(Object.assign({}, varInstances, geomCell.fields()));\n        resolverAxes.pie = pieAxes;\n        return geomCellAxes;\n    }\n\n    /**\n     *\n     *\n     * @param {*} fields\n     *\n     * @memberof CartesianEncoder\n     */\n    getFacetsAndProjections (fields) {\n        let counter = 0;\n        const facets = [];\n        const projections = [];\n        const primaryFields = fields[0];\n        const secondaryFields = fields[1];\n        const primaryLen = primaryFields.length;\n        const secondaryLen = secondaryFields.length;\n\n        for (let i = 0; i < primaryLen; i++) {\n            const primaryField = primaryFields[i];\n            if (primaryField.type() === MEASURE) {\n                const secondaryField = secondaryFields[counter++];\n                const projArr = secondaryField ? [primaryField, secondaryField] : [primaryField];\n                projections.push(projArr);\n            } else {\n                facets.push(primaryField);\n            }\n        }\n        if (secondaryLen > counter) {\n            for (let i = counter; i < secondaryLen; i++) {\n                const secondaryField = secondaryFields[i];\n                const projArr = [secondaryField];\n                if (secondaryField.type() === MEASURE) {\n                    projections.push(projArr);\n                } else {\n                    facets.push(secondaryField);\n                }\n            }\n        }\n        return {\n            facets,\n            projections\n        };\n    }\n\n    unionUnitDomains (context) {\n        const store = context.store();\n        const domainProps = {\n            radius: [],\n            angle: [],\n            angle0: []\n        };\n        const axes = context.resolver().axes();\n        context.matrixInstance().value.each((cell, rIdx, cIdx) => {\n            const unit = cell.valueOf();\n            const unitDomains = unit.getDataDomain();\n            const fields = unit.fields();\n            setRadiusFactor(unit);\n            [RADIUS, ANGLE, ANGLE0].forEach((encType) => {\n                const encodingFields = fields[encType];\n                const domains = unitDomains[encType] || {};\n                encodingFields.forEach((field, i) => {\n                    !domainProps[encType][rIdx] && (domainProps[encType][rIdx] = []);\n                    !domainProps[encType][rIdx][cIdx] && (domainProps[encType][rIdx][cIdx] = []);\n                    domainProps[encType][rIdx][cIdx][i] = domains[`${field}`] || [];\n                });\n            });\n        });\n\n        for (const key in domainProps) {\n            const specificAxes = axes[key];\n            specificAxes.forEach((axesArr, rIdx) => {\n                axesArr.forEach((axisArr, cIdx) => {\n                    axisArr.forEach((axis, i) => {\n                        axis.domain(defaultValue(getObjProp(domainProps[key], rIdx, cIdx, i), []));\n                    });\n                });\n            });\n            store.commit(`${STATE_NAMESPACES.GROUP_GLOBAL_NAMESPACE}.domain.${key}`, domainProps[key]);\n        }\n    }\n\n    /**\n     *\n     *\n     *\n     * @memberof PolarEncoder\n     */\n    setCommonDomain () {\n        // No domain to be set\n        return this;\n    }\n\n    /**\n     *\n     *\n     *\n     * @memberof PolarEncoder\n     */\n    static type () {\n        return POLAR;\n    }\n\n    layers (...layers) {\n        if (layers.length) {\n            this._layers = layers[0];\n            return this;\n        }\n        return this._layers;\n    }\n\n    /**\n     *\n     *\n     * @param {*} datamodel\n     * @param {*} config\n     * @memberof PolarEncoder\n     */\n    fieldSanitizer (datamodel, config) {\n        let sanitizedRows = [[], []];\n        let sanitizedColumns = [[], []];\n        const fields = super.fieldSanitizer(datamodel, config);\n        const {\n            layers\n        } = config;\n        const {\n            rows,\n            columns\n        } = fields;\n        const layer = layers[0];\n        const encoding = layer.encoding;\n        const radius = encoding && encoding.radius ? encoding.radius.field : null;\n        const angle = encoding && encoding.angle ? encoding.angle.field : null;\n        const sanitizedFields = [sanitizedRows, sanitizedColumns];\n\n        [rows, columns].forEach((fieldType, typeIndex) => {\n            fieldType.forEach((fieldSet, i) => fieldSet.forEach((field) => {\n                if (field.toString() !== radius && field.toString() !== angle && field.type() !== MEASURE) {\n                    sanitizedFields[typeIndex][i].push(field);\n                }\n            }));\n        });\n        sanitizedColumns = [...new Set(sanitizedColumns)];\n        sanitizedRows = [...new Set(sanitizedRows)];\n        this.fieldInfo({ rows: sanitizedRows, columns: sanitizedColumns });\n        return this.fieldInfo();\n    }\n\n    getRetinalFieldsDomain (dataModels, encoding, facetFields, groupBy) {\n        let sizeField;\n        let colorField;\n        const fields = [];\n        const layers = this.layers();\n        const dataModel = dataModels.groupedModel;\n        const fieldsConfig = dataModel.getFieldsConfig();\n        const domains = {};\n        if (layers && layers[0]) {\n            const layer = layers[0];\n            const layerEncoding = layer.def.encoding || {};\n\n            [RADIUS, ANGLE, SIZE, COLOR].forEach((encType) => {\n                const field = layerEncoding[encType] ? layerEncoding[encType].field : '';\n                const measureField = fieldsConfig[field] && fieldsConfig[field].def.type === MEASURE;\n                if (encType === SIZE && measureField) {\n                    sizeField = field;\n                }\n                if (encType === COLOR) {\n                    colorField = field;\n                }\n                fieldsConfig[field] && !measureField && fields.push(field);\n            });\n        }\n\n        if (sizeField) {\n            domains[sizeField] = dataModel.groupBy(facetFields, {\n                [sizeField]: GROUP_BY_FUNCTIONS.SUM\n            }).getFieldspace().fieldsObj()[sizeField].domain();\n        }\n\n        if (colorField) {\n            const dm = dataModel.groupBy([...facetFields, ...fields], groupBy.measures);\n            domains[colorField] = dm.getFieldspace().fieldsObj()[colorField].domain();\n        }\n        return domains;\n    }\n\n    /**\n     *\n     *\n     * @param {*} fields\n     * @param {*} userLayerConfig\n     *\n     * @memberof PolarEncoder\n     */\n    getLayerConfig (fields, userLayerConfig, retinalConfig) {\n        let layerConfig = [];\n        const {\n                columnFields,\n                rowFields\n            } = fields;\n        const allFields = [...columnFields, ...rowFields];\n\n        allFields.forEach(() => {\n            const encoding = {};\n            let config = {\n                mark: ARC,\n                def: {\n                    encoding\n                }\n            };\n            if (userLayerConfig && userLayerConfig.length > 0) {\n                config = mergeRecursive(config, userLayerConfig[0]);\n            }\n            layerConfig.push(config);\n        });\n        if (layerConfig.length === 0) {\n            layerConfig = userLayerConfig;\n        }\n        const sanitizedConfig = this.sanitizeLayerConfig(retinalConfig, layerConfig);\n        this.layers(sanitizedConfig);\n        return sanitizedConfig;\n    }\n\n    /**\n     *\n     *\n     * @param {*} layerArray\n     *\n     * @memberof PolarEncoder\n     */\n    serializeLayerConfig (layerArray) {\n        const serializedLayers = [];\n\n        layerArray.length && layerArray.forEach((layer) => {\n            const def = layerFactory.getSerializedConf(layer.mark, layer);\n            serializedLayers.push({\n                mark: layer.mark,\n                def\n            });\n        });\n        return serializedLayers;\n    }\n\n    sanitizeLayerConfig (encodingConfigs, userLayerConfig) {\n        const layerConfig = [];\n\n        userLayerConfig.forEach((config) => {\n            const def = toArray(config.def);\n            sanitizeIndividualLayerConfig(encodingConfigs, def);\n            def.forEach((conf) => {\n                const encoding = conf.encoding;\n                !encoding.angle && (encoding.angle = {});\n                const angleField = getObjProp(encoding.angle, 'field');\n                const angle0Field = getObjProp(encoding.angle0, 'field');\n                if (!angleField) {\n                    Object.assign(encoding.angle, {\n                        field: encodingConfigs.color && encodingConfigs.color.field\n                    });\n                }\n                if (!angle0Field) {\n                    !encoding.angle0 && (encoding.angle0 = {});\n                    Object.assign(encoding.angle0, {\n                        field: encoding.angle.field\n                    });\n                }\n            });\n\n            layerConfig.push(config);\n        });\n        return layerConfig;\n    }\n}\n","import { createRetinalAxis } from './encoder-helper';\nimport { COLOR, SHAPE, SIZE } from '../enums/constants';\nimport VisualEncoder from './visual-encoder';\n\n/**\n *\n *\n * @export\n * @class RetinalEncoder\n * @extends {VisualEncoder}\n */\nexport default class RetinalEncoder extends VisualEncoder {\n\n    /**\n     *\n     *\n     * @param {*} axesCreators\n     *\n     * @memberof RetinalEncoder\n     */\n    createAxis (axesCreators) {\n        const { fieldsConfig, config } = axesCreators;\n        const newAxes = {};\n\n        [COLOR, SHAPE, SIZE].forEach((axisType) => {\n            newAxes[`${axisType}`] = createRetinalAxis({ axisType, fieldsConfig }, config[axisType]);\n        });\n        return newAxes;\n    }\n\n    /**\n     *\n     *\n     * @static\n     *\n     * @memberof RetinalEncoder\n     */\n    static type () {\n        return 'retinal';\n    }\n\n    /**\n     *\n     *\n     * @param {*} context\n     *\n     * @memberof RetinalEncoder\n     */\n    setCommonDomain (context) {\n        const { domains, axes, encoding } = context;\n\n        Object.entries(encoding).forEach((enc) => {\n            if (enc[1] && enc[1].field) {\n                const encType = enc[0];\n                const field = enc[1].field;\n\n                if (field) {\n                    axes[encType].forEach((axis) => {\n                        const domain = domains[field];\n                        !enc[1].domain && axis.updateDomain(domain);\n                    });\n                }\n            }\n        });\n        return axes;\n    }\n}\n","import { Store, FieldType, COORD_TYPES, getObjProp, nearestSortingDetails } from 'muze-utils';\nimport { DATA_UPDATE_COUNTER } from '../enums/defaults';\nimport { Variable } from '../variable';\nimport { PolarEncoder, CartesianEncoder } from '../encoder';\nimport {\n    DIMENSION,\n    MEASURE,\n    ORDINAL,\n    LINEAR,\n    ROW,\n    COLUMN,\n    COL,\n    LEFT,\n    RIGHT,\n    TOP,\n    BOTTOM,\n    COLOR,\n    SIZE,\n    TEMPORAL,\n    SHAPE,\n    INTERACTION,\n    GRID_LINES,\n    GRID_BANDS,\n    HEADER,\n    FACET,\n    X,\n    Y,\n    ARC,\n    RADIUS,\n    ANGLE,\n    CATEGORICAL\n} from '../enums/constants';\n\nconst POLAR = COORD_TYPES.POLAR;\n\n/**\n * Creates an instance of a store which contains the arguments to make the class reactive\n *\n * @return {Object} instance of store\n * @memberof VisualGroup\n */\nexport const initStore = () => new Store({\n    [DATA_UPDATE_COUNTER]: DATA_UPDATE_COUNTER\n});\n\n/**\n *\n *\n * @param {*} arr\n */\nexport const isDistributionEqual = arr => [...arr[0], ...arr[1]].reduce((isEqual, row) => {\n    const rowType = row.type();\n\n    if (rowType === MEASURE || rowType === TEMPORAL) {\n        isEqual = true;\n    }\n    return isEqual;\n}, false);\n\n/**\n *\n *\n */\nexport const initializeCacheMaps = () => ({\n    cellMap: new Map(),\n    xAxesMap: new Map(),\n    yAxesMap: new Map(),\n    entryCellMap: new Map(),\n    exitCellMap: new Map()\n});\n\n/**\n *\n *\n * @param {*} axisName\n * @param {*} id\n */\nexport const getAxisKey = (axisName, ...params) => `${axisName}-axis-${params.join('-')}`;\n\n/**\n *\n *\n * @param {*} rowId\n * @param {*} columnId\n */\nexport const getCellKey = (rowId, columnId) => `cell-${rowId}-${columnId}`;\n\n/**\n *\n *\n * @param {*} config\n *\n */\nexport const extractUnitConfig = (config) => {\n    const unitConfig = {};\n    const attrNames = [INTERACTION, GRID_LINES, GRID_BANDS];\n\n    attrNames.forEach((attr) => {\n        if (config[attr] !== undefined) {\n            unitConfig[attr] = config[attr];\n        }\n    });\n    return unitConfig;\n};\n\n/**\n *\n *\n * @param {*} headers\n * @param {*} index\n * @param {*} rowLength\n *\n * @memberof MatrixResolver\n */\nexport const getHeaderText = (headers, index, rowLength) => {\n    let header = '';\n\n    if (index === rowLength - 1 && headers.length > rowLength) {\n        for (let i = index; i < headers.length - 1; i++) {\n            header += `${headers[i].toString()} / `;\n        }\n        header += headers[headers.length - 1].toString();\n        return header;\n    } else if (headers[index]) {\n        return headers[index].toString();\n    }\n    return '';\n};\n\n/**\n *\n *\n * @param {*} fields\n * @param {*} fieldHeaders\n * @param {*} TextCell\n * @param {*} labelManager\n *\n */\nexport const headerCreator = (fields, fieldHeaders, TextCell, { classPrefix, labelManager }) => {\n    const headers = fields.length > 0 ? fields[0].map((cell, i) => new TextCell({\n        type: HEADER,\n        className: `${classPrefix}-grid-headers`\n    }, {\n        labelManager\n    }).source(getHeaderText(fieldHeaders, i, fields[0].length))\n                    .config({ show: cell.config().show })) : [];\n    return headers;\n};\n\n/**\n *\n *\n * @param {*} variable\n * @param {*} allFields\n *\n */\nexport const findInGroup = (variable, allFields) => {\n    let channel = null;\n\n    [COLOR, SIZE, SHAPE].forEach((e) => {\n        if (this.store.get(e) && variable === this.store.get(e)[0]) {\n            channel = e;\n        }\n    });\n\n    if (channel) {\n        return { channel };\n    }\n    [ROW, COL].forEach((facetType) => {\n        allFields[`${facetType}Facets`].forEach((e) => {\n            if (e.toString() === variable) {\n                channel = { channel: FACET, type: facetType === COL ? COLUMN : ROW };\n            }\n        });\n    });\n\n    if (channel) {\n        return channel;\n    }\n\n    [ROW, COL].forEach((projType) => {\n        allFields[`${projType}Projections`].forEach((e) => {\n            e.forEach((m) => {\n                if (m.toString() === variable) {\n                    channel = projType === COL ? X : Y;\n                }\n            });\n        });\n    });\n\n    if (channel) {\n        return { channel };\n    }\n    return null;\n};\n\n/**\n *\n *\n * @param {*} datamodel\n * @param {*} field\n */\nexport const getAxisType = (fieldsConfig, field) => {\n    let fieldType = ORDINAL;\n\n    if (field && fieldsConfig[field].def.type !== DIMENSION) {\n        fieldType = LINEAR;\n    }\n    return fieldType;\n};\n\n/**\n *\n *\n * @param {*} datamodel\n * @param {*} fieldName\n *\n */\nexport const retriveDomainFromData = (datamodel, fieldName) => {\n    const field = datamodel.getFieldspace().fields.find(d => d.name() === fieldName.toString());\n    return field.domain();\n};\n\n/**\n *\n *\n * @memberof MatrixResolver\n */\nexport const mutateAxesFromMap = (cacheMaps, axes) => {\n    let xAxes = null;\n    let yAxes = null;\n    const {\n        xAxesMap,\n        yAxesMap\n    } = cacheMaps;\n    const {\n        x: xAxisSet,\n        y: yAxisSet\n    } = axes;\n\n    xAxisSet && xAxisSet.forEach((axisId) => {\n        const xAxis = xAxesMap.get(axisId);\n        xAxes = xAxes || [];\n        xAxes.push(xAxis);\n    });\n\n    yAxisSet && yAxisSet.forEach((axisId) => {\n        const yAxis = yAxesMap.get(axisId);\n        yAxes = yAxes || [];\n        yAxes.push(yAxis);\n    });\n\n    return {\n        xAxes, yAxes\n    };\n};\n\nconst hasPolarEncodings = layerConf => layerConf.mark === ARC || [RADIUS, ANGLE].some(field =>\n        getObjProp(layerConf.encoding, field));\n\n/**\n *\n *\n * @param {*} layers\n *\n */\nexport const getEncoder = (layers) => {\n    let encoder = new CartesianEncoder();\n\n    if (layers.length) {\n        // Figuring out the kind of layers the group will have\n        encoder = layers.some(layerConf => hasPolarEncodings(layerConf)) ? new PolarEncoder() : encoder;\n    }\n    return encoder;\n};\n\n/**\n *\n *\n * @param {*} type\n * @param {*} fields\n * @param {*} userAxisFromConfig\n *\n */\nexport const getHeaderAxisFrom = (type, fields, userAxisFromConfig) => {\n    let axisFrom = userAxisFromConfig[type];\n    let headerFrom = '';\n    const options = type === ROW ? [LEFT, RIGHT] : [BOTTOM, TOP];\n    const [firstField, secondField] = fields;\n    const firstFieldType = i => (firstField.length ? firstField[i].type() : null);\n    const secondFieldType = i => (secondField.length ? secondField[i].type() : null);\n\n    if (firstFieldType(firstField.length - 1) === DIMENSION && secondFieldType(0) === DIMENSION) {\n        headerFrom = axisFrom ? options[1 - options.indexOf(axisFrom)] : options[1];\n\n        if (type === COLUMN && (firstField[firstField.length - 1].toString() === secondField[0].toString())) {\n            axisFrom = TOP;\n        } else {\n            axisFrom = axisFrom || options[0];\n        }\n    } else if (secondFieldType(secondField.length - 1) === DIMENSION) {\n        headerFrom = type === ROW ? RIGHT : BOTTOM;\n        axisFrom = type === ROW ? RIGHT : BOTTOM;\n    } else {\n        headerFrom = type === ROW ? LEFT : TOP;\n        axisFrom = type === ROW ? LEFT : TOP;\n    }\n    if (firstFieldType(firstField.length - 1) === MEASURE && secondFieldType(0) === MEASURE) {\n        axisFrom = type === ROW ? LEFT : TOP;\n    } else if (secondFieldType(0) === MEASURE) {\n        axisFrom = type === ROW ? RIGHT : BOTTOM;\n    } else if (firstFieldType(firstField.length - 1) === MEASURE) {\n        axisFrom = type === ROW ? LEFT : TOP;\n    }\n    return [headerFrom, axisFrom];\n};\n\n/**\n *\n *\n * @param {*} type\n * @param {*} fields\n * @param {*} layers\n *\n * @memberof MatrixResolver\n */\nexport const setFacetsAndProjections = (context, fieldInfo, encoder) => {\n    const {\n        fields,\n        type\n    } = fieldInfo;\n    const { facets, projections } = encoder.simpleEncoder.getFacetsAndProjections(fields, type);\n\n    context.facets({ [`${type}Facets`]: facets });\n    context.projections({ [`${type}Projections`]: projections });\n\n    return { facets, projections, fields };\n};\n\nconst getRowBorders = (left, right) => {\n    const borders = {};\n    borders.top = false;\n    borders.bottom = false;\n    if (left.length > 1 || right.length > 1) {\n        borders.top = true;\n        borders.bottom = true;\n    }\n    return borders;\n};\n\nconst getColumnsBorders = (top, bottom) => {\n    const borders = {};\n    borders.left = false;\n    borders.right = false;\n    if (top.length || bottom.length) {\n        if ((top[0] && top[0].length > 1) || (bottom[0] && bottom[0].length > 1)) {\n            borders.left = true;\n            borders.right = true;\n        }\n    }\n    return borders;\n};\n\nconst getValueBorders = (rows, columns) => {\n    const borders = { top: true, left: true, bottom: true, right: true };\n    const borderTypeRow = [LEFT, RIGHT];\n    const borderTypeCol = [TOP, BOTTOM];\n    rows.forEach((e, i) => {\n        if (e[0] && e[0].length) {\n            borders[borderTypeRow[i]] = true;\n        } else {\n            borders[borderTypeRow[i]] = false;\n        }\n    });\n    columns.forEach((e, i) => {\n        if (e.length) {\n            borders[borderTypeCol[i]] = true;\n        } else {\n            borders[borderTypeCol[i]] = false;\n        }\n    });\n\n    return borders;\n};\n\nexport const getBorders = (matrices, encoder) => {\n    let showRowBorders = { top: false, bottom: false };\n    let showColBorders = { left: false, right: false };\n    let showValueBorders = { top: false, bottom: false, left: false, right: false };\n    const {\n        rows,\n        columns,\n        values: valueMatrix\n    } = matrices;\n    const [leftRows, rightRows] = rows;\n    const [topColumns, bottomColumns] = columns;\n    const {\n        rowDimensions,\n        columnDimensions,\n        rowTemporalFields,\n        columnTemporalFields,\n        columnMeasures,\n        rowMeasures\n    } = encoder.fieldInfo();\n    const allDimensionLength = rowDimensions.length + columnDimensions.length;\n    const allMeasuresLength = rowMeasures.length + columnMeasures.length;\n    const allTemporalFieldsLength = rowTemporalFields.length + columnTemporalFields.length;\n\n    if (encoder.constructor.type() === POLAR) {\n        if (!allDimensionLength) {\n            return { showRowBorders, showColBorders, showValueBorders };\n        }\n    } else if (!allMeasuresLength && !allTemporalFieldsLength && allDimensionLength <= 2) {\n        return { showRowBorders, showColBorders, showValueBorders };\n    }\n\n    showRowBorders = getRowBorders(leftRows, rightRows);\n    showColBorders = getColumnsBorders(topColumns, bottomColumns);\n    showValueBorders = getValueBorders([leftRows, rightRows], [topColumns, bottomColumns]);\n\n    if (valueMatrix.length > 1) {\n        showValueBorders.top = true;\n        showValueBorders.bottom = true;\n    }\n    if (valueMatrix.length && valueMatrix[0].length > 1) {\n        showValueBorders.left = true;\n        showValueBorders.right = true;\n    }\n    return { showRowBorders, showColBorders, showValueBorders };\n};\n\nexport const getFieldsFromSuppliedLayers = (suppliedLayerConfig, fieldsConfig) => {\n    let fields = [];\n    const encodingArr = suppliedLayerConfig.map(conf => (conf.encoding || {}));\n    fields = [...fields, [].concat(...encodingArr.map(enc => Object.values(enc).map(d => d.field)))];\n    fields = fields.filter(field => fieldsConfig[field] && fieldsConfig[field].def.type === FieldType.DIMENSION);\n    return fields;\n};\n\nexport const extractFields = (facetsAndProjections, layerFields) => {\n    const fields = Object.values(facetsAndProjections).map((arr) => {\n        const flattenArray = [].concat(...arr);\n        return [].concat(...flattenArray.map((field) => {\n            if (field instanceof Variable) {\n                return field.getMembers();\n            }\n            return field;\n        }));\n    });\n    return [].concat(...fields, ...layerFields);\n};\n\n/**\n * This method sorts the facets fields inplace if field is of categorical type\n * @param {Object} facet\n * @param {Array} keys Array of the facet field values\n */\nexport const sortFacetFields = (facet, keys) => {\n    const subtype = facet.subtype();\n    const sortingDetails = nearestSortingDetails(facet.data());\n\n    if (subtype === CATEGORICAL && !sortingDetails) {\n        keys.sort();\n    }\n};\n","import { BEHAVIOURS, ACTIONS } from '@chartshq/muze-firebolt';\n\nexport const actionBehaviourMap = {\n    [ACTIONS.DRAG]: {\n        behaviours: [BEHAVIOURS.BRUSH],\n        touch: false\n    },\n    [ACTIONS.HOVER]: {\n        behaviours: [BEHAVIOURS.HIGHLIGHT]\n    },\n    [ACTIONS.LONGTOUCH]: {\n        behaviours: [BEHAVIOURS.SELECT],\n        touch: true\n    },\n    [ACTIONS.TOUCHDRAG]: {\n        behaviours: [BEHAVIOURS.BRUSH],\n        touch: true\n    },\n    [ACTIONS.CLICK]: {\n        behaviours: [BEHAVIOURS.SELECT],\n        touch: false\n    }\n};\n","import {\n    FieldType,\n    getDependencyOrder,\n    getObjProp,\n    defaultValue,\n    objectIterator,\n    unionDomain,\n    makeElement,\n    DimensionSubtype,\n    toArray,\n    MeasureSubtype,\n    getNearestValue\n} from 'muze-utils';\nimport { layerFactory, ENCODING } from '@chartshq/visual-layer';\n\nexport const getDimensionMeasureMap = (layers, fieldsConfig) => {\n    const retinalEncodingsAndMeasures = {};\n\n    layers.forEach((layer) => {\n        const {\n            colorField,\n            sizeField,\n            shapeField,\n            xField,\n            yField\n        } = layer.encodingFieldsInf();\n        const measures = [xField, yField].filter(field => fieldsConfig[field] && fieldsConfig[field].def.type ===\n            FieldType.MEASURE);\n        [colorField, sizeField, shapeField].forEach((field) => {\n            if (fieldsConfig[field] && fieldsConfig[field].def.type === FieldType.DIMENSION) {\n                !retinalEncodingsAndMeasures[field] && (retinalEncodingsAndMeasures[field] = []);\n                retinalEncodingsAndMeasures[field].push(...measures);\n            }\n        });\n    });\n\n    for (const key in retinalEncodingsAndMeasures) {\n        if ({}.hasOwnProperty.call(retinalEncodingsAndMeasures, key)) {\n            retinalEncodingsAndMeasures[key] = [...new Set(retinalEncodingsAndMeasures[key])];\n        }\n    }\n    return retinalEncodingsAndMeasures;\n};\n\nexport const transformDataModels = (transform, dataModel) => {\n    const dataModels = {};\n    for (const key in transform) {\n        if ({}.hasOwnProperty.call(transform, key)) {\n            const transformVal = transform[key];\n            dataModels[key] = transformVal(dataModel);\n        }\n    }\n\n    return dataModels;\n};\n\nexport const getLayerFromDef = (context, definition, existingLayer, namespaces) => {\n    let instances = existingLayer;\n    const dependencies = context._layerDeps;\n    const metaInf = context.metaInf();\n    if (!existingLayer) {\n        instances = layerFactory.getLayerInstance(definition);\n        toArray(instances).forEach((inst, i) => {\n            inst.metaInf({\n                unitRowIndex: metaInf.rowIndex,\n                unitColIndex: metaInf.colIndex,\n                namespace: namespaces[i]\n            });\n            inst.store(context.store());\n        });\n    }\n    const layers = {};\n    const instanceArr = toArray(instances);\n    definition = toArray(definition);\n    definition.reduce((acc, def, idx) => {\n        const instance = instanceArr[idx];\n        instance.coord(context.coord());\n        instance.config(def);\n        instance.valueParser(context.valueParser());\n        instance.dependencies(dependencies);\n        instance.dataProps({\n            timeDiffs: context._timeDiffs\n        });\n        if (def.name) {\n            instance.alias(def.name);\n        }\n        layers[instance.alias()] = instance;\n        return acc;\n    }, {});\n    return layers;\n};\n\nexport const resolveEncodingTransform = (layerInst, store) => {\n    const encodingTransform = layerInst.config().encodingTransform || {};\n    const resolvable = encodingTransform.resolvable;\n    let depArr = [];\n    if (resolvable) {\n        const resolved = resolvable(store);\n        depArr = resolved.depArr;\n        layerInst.encodingTransform(resolved.fn);\n    } else if (encodingTransform instanceof Function) {\n        layerInst.encodingTransform(encodingTransform);\n    }\n    return depArr;\n};\n\nexport const sanitizeLayerDef = (layerDefs) => {\n    const sanitizedDefs = [];\n    layerDefs.forEach((layerDef, i) => {\n        const def = layerDef.def;\n        const mark = layerDef.mark;\n        if (!def) {\n            const sConf = layerFactory.getSerializedConf(layerDef.mark, layerDef);\n            if (!sConf.name) {\n                sConf.name = `${mark}-${i}`;\n            }\n            sanitizedDefs.push({\n                mark: layerDef.mark,\n                def: sConf\n            });\n        } else {\n            if (!def.name) {\n                def.name = `${mark}-${i}`;\n            }\n            sanitizedDefs.push(layerDef);\n        }\n    });\n    return sanitizedDefs;\n};\n\nexport const attachDataToLayers = (layers, dm, transformedDataModels) => {\n    layers.forEach((layer) => {\n        const dataSource = layer.config().source;\n        const dataModel = dataSource instanceof Function ? dataSource(dm) :\n            (transformedDataModels[dataSource] || dm);\n        if (layer.data() !== dataModel) {\n            layer.data(dataModel);\n        }\n    });\n};\n\nexport const attachAxisToLayers = (axes, layers, layerAxisIndex) => {\n    layers.forEach((layer) => {\n        const layerId = layer.id();\n        const axesObj = {};\n\n        objectIterator(axes, (key) => {\n            const axisInf = layerAxisIndex[layerId];\n            if (axisInf) {\n                const axisArr = axes[key] || [];\n                const axisIndex = axisInf[key] >= 0 ? axisInf[key] : axisArr.length - 1;\n                axes[key] && (axesObj[key] = defaultValue(axes[key][axisIndex]));\n            }\n        });\n        Object.keys(axesObj).length && layer.axes(axesObj);\n    });\n};\n\nconst { X, Y, RADIUS, ANGLE, ANGLE0, RADIUS0 } = ENCODING;\n\nexport const getLayerAxisIndex = (layers, fields) => {\n    const layerAxisIndex = {};\n    layers.forEach((layer) => {\n        const { axis, encoding } = layer.config();\n        const id = layer.id();\n        [X, Y, ANGLE, ANGLE0, RADIUS].forEach((type) => {\n            let index;\n            const specificField = getObjProp(encoding, type, 'field');\n            const encodingField = type === RADIUS ? defaultValue(specificField, getObjProp(encoding, RADIUS0, 'field'))\n                : getObjProp(encoding, type, 'field');\n            const field = defaultValue(getObjProp(axis, type), encodingField);\n            if (fields[type] && fields[type].length) {\n                index = fields[type].findIndex(fieldInst => fieldInst.getMembers().indexOf(field) !== -1);\n            } else {\n                index = 0;\n            }\n            !layerAxisIndex[id] && (layerAxisIndex[id] = {});\n            layerAxisIndex[id][type] = index;\n        });\n    });\n    return layerAxisIndex;\n};\n\nconst getValidDomain = (domain, domain1, encodingType, fieldType) => {\n    if (encodingType === ANGLE || encodingType === ANGLE0) {\n        return domain.concat(domain1.filter(d => domain.indexOf(d) === -1));\n    }\n    return unionDomain([domain, domain1], fieldType);\n};\n\nexport const unionDomainFromLayers = (layers, axisFields, layerAxisIndex, fieldsConfig) => {\n    let domains = {};\n    layers = layers.filter(layer => layer.getDataDomain() !== null);\n    layers.forEach((layer) => {\n        let domainValues = {};\n        const config = layer.config();\n        // const encoding = config.encoding;\n        const layerDomain = layer.getDataDomain();\n        const layerId = layer.id();\n\n        if (layerDomain !== null && config.calculateDomain !== false) {\n            domainValues = Object.entries(layerDomain);\n            domains = domainValues.reduce((fieldDomain, domain) => {\n                const encodingType = domain[0];\n                const axisIndex = layerAxisIndex[layerId][encodingType];\n                const field = getObjProp(axisFields, encodingType, axisIndex);\n                !fieldDomain[encodingType] && (fieldDomain[encodingType] = {});\n                const encodingDomain = fieldDomain[encodingType];\n                if (field) {\n                    const fieldStr = `${field}`;\n                    encodingDomain[fieldStr] = encodingDomain[fieldStr] || [];\n                    encodingDomain[fieldStr] = getValidDomain(encodingDomain[fieldStr],\n                        domain[1], encodingType, fieldsConfig[field.getMembers()[0]].def.subtype);\n                }\n                return fieldDomain;\n            }, domains);\n        }\n    });\n    return domains;\n};\n\nexport const renderLayers = (context, container, layers, measurement) => {\n    context._lifeCycleManager.notify({ client: layers, action: 'beforedraw', formalName: 'layer' });\n    const config = context.config();\n    const classPrefix = config.classPrefix;\n    const orderedLayers = context.layers().sort((a, b) => a.config().order - b.config().order);\n    const layerParentGroup = makeElement(container, 'g', [1], `${classPrefix}-layer-group`);\n    const layerDepOrder = getDependencyOrder(context._layerDepOrder);\n    const groups = {};\n    makeElement(layerParentGroup, 'g', orderedLayers, null, {\n        update: (group, layer) => {\n            groups[layer.alias()] = {\n                group,\n                layer\n            };\n        }\n    });\n    const layerSeq = layerDepOrder.map(name => groups[name]);\n    layerSeq.forEach((o) => {\n        const layer = o.layer;\n        const group = o.group;\n        layer.measurement(measurement);\n        layer.dataProps({\n            timeDiffs: context._timeDiffs\n        });\n        layer.config().render !== false && layer.mount(group.node());\n    });\n    return this;\n};\n\nexport const getNearestDimensionalValue = (context, position) => {\n    const fields = context.fields();\n    if (!fields.x.length || !fields.y.length) {\n        return null;\n    }\n    const data = context.data();\n    const axes = context.axes();\n    const fieldsConfig = data.getFieldsConfig();\n    const xField = getObjProp(fields, 'x', 0).getMembers()[0];\n    const yField = getObjProp(fields, 'y', 0).getMembers()[0];\n    const xFieldType = fieldsConfig[xField].def.subtype;\n    const yFieldType = fieldsConfig[yField].def.subtype;\n\n    const entryVal = [['x', xFieldType, xField], ['y', yFieldType, yField]].find(entry =>\n        entry[1] === DimensionSubtype.CATEGORICAL || entry[1] === DimensionSubtype.TEMPORAL);\n\n    if (!entryVal || (xFieldType !== MeasureSubtype.CONTINUOUS && yFieldType !== MeasureSubtype.CONTINUOUS)) {\n        return null;\n    }\n    const field = entryVal[2];\n    const index = fieldsConfig[field].index;\n    let key = axes[entryVal[0]][0].invert(position[entryVal[0]]);\n    if (entryVal[1] === DimensionSubtype.TEMPORAL) {\n        const filterData = [...new Set(data.getData().data.map(d => d[index]))];\n        key = getNearestValue(filterData, key);\n    }\n\n    return key !== undefined ? [[field], [key]] : null;\n};\n\nexport const getLayersBy = (layers, searchBy, value) => layers.filter((layer) => {\n    const name = searchBy === 'type' ? layer.constructor.formalName() : layer.alias();\n    return name === value;\n});\n\nexport const removeLayersBy = (layers, searchBy, value) => {\n    layers.filter((inst) => {\n        const name = searchBy === 'type' ? inst.config().mark : inst.alias();\n        if (name === value) {\n            inst.remove();\n            return false;\n        }\n        return true;\n    });\n};\n\nexport const createSideEffectGroup = (container, className) => makeElement(container, 'g', [1], className).node();\n\nexport const createRenderPromise = (unit) => {\n    const renderedPromise = unit._renderedPromise;\n    renderedPromise.then(() => {\n        unit._renderedPromise = new Promise((resolve) => {\n            unit._renderedResolve = resolve;\n        });\n        createRenderPromise(unit);\n    });\n};\n\nexport const getRadiusRange = (width, height, config = {}) => {\n    const {\n        innerRadius,\n        outerRadius\n    } = config;\n\n    return [innerRadius || 0, outerRadius || Math.min(height,\n        width) / 2];\n};\n\nexport const setAxisRange = (context) => {\n    const axes = context.axes();\n    const { radius: radiusAxes } = axes;\n    if (radiusAxes) {\n        radiusAxes.forEach((axis) => {\n            axis.range(getRadiusRange(context.width(), context.height()));\n        });\n    }\n};\n","export const CLASSPREFIX = 'muze';\nexport const IDFIELD = '__id__';\nexport const GRID_LINE_PARENT_GROUP_CLASS = 'grid-lines';\nexport const GRID_BAND_PARENT_GROUP_CLASS = 'grid-bands';\nexport const GRID_PARENT_GROUP = 'grid-parent-group';\nexport const BAND = 'band';\nexport const TICK = 'tick';\nexport const GRID_BAND = 'gridBands';\nexport const GRID_LINE = 'gridLines';\nexport const CONSOLIDATED = 'consolidated';\nexport const FRAGMENTED = 'fragmented';\nexport const FACET_BY_FIELDS = 'facetByFields';\nexport const RETINAL_FIELDS = 'retinalFields';\nexport const PARENT_ALIAS = 'parentAlias';\nexport const LAYERS = 'layers';\nexport const CACHED_DATA = 'cachedData';\nexport const STORE = 'store';\n","import { getObjProp, defaultValue, makeElement, DimensionSubtype, DataModel, createSelection } from 'muze-utils';\nimport { ScaleType } from '@chartshq/muze-axis';\nimport { layerFactory, LAYER_TYPES } from '@chartshq/visual-layer';\nimport {\n    GRID_BAND,\n    GRID_LINE,\n    GRID_BAND_PARENT_GROUP_CLASS,\n    GRID_LINE_PARENT_GROUP_CLASS,\n    GRID_PARENT_GROUP\n} from '../enums/constants';\n\nconst { BAR_LAYER, TICK_LAYER } = LAYER_TYPES;\n\nconst LINEAR = ScaleType.LINEAR;\n\nconst getLayerDefinition = (context, axes, type, orientation) => {\n    let encoding;\n    const config = context.config();\n    const { classPrefix, gridLines, gridBands } = config;\n    const gridLineColor = gridLines.color;\n    const zeroLineColor = gridLines.zeroLineColor;\n    const defClassName = type === GRID_BAND ? gridBands.defClassName : gridLines.defClassName;\n    const gridBandColor = gridBands[orientation].color;\n    const axis = axes[orientation][0];\n    const isLinearScale = axis.constructor.type() === LINEAR;\n\n    if (type === GRID_BAND && isLinearScale) {\n        encoding = {\n            [orientation]: `${orientation}value`,\n            [`${orientation}0`]: `${orientation}value0`\n        };\n    } else {\n        encoding = {\n            [orientation]: isLinearScale ? `${orientation}value` : `${orientation}dim`\n        };\n    }\n    encoding.color = {\n        value: (data, i) => {\n            const isNegativeDomain = isLinearScale && axis.domain()[0] < 0;\n            if (type === GRID_BAND) {\n                return gridBandColor[i % 2];\n            }\n            return isNegativeDomain && data[orientation] === 0 ? zeroLineColor : gridLineColor;\n        }\n    };\n    const { color, shape, size } = context.axes();\n    return {\n        definition: {\n            defClassName: `${defClassName}-${orientation}`,\n            className: config.className,\n            name: orientation,\n            individualClassName: (data, i) => {\n                let className;\n                const isNegativeDomain = isLinearScale && axis.domain()[0] < 0;\n                if (isNegativeDomain && data.y === 0 && type !== GRID_BAND) {\n                    className = `${classPrefix}-axis-zero-line`;\n                } else {\n                    className = `${classPrefix}-grid-${type}-${orientation}-${i % 2}`;\n                }\n                return className;\n            },\n            [`pad${orientation.toUpperCase()}`]: type === GRID_BAND ? 0 : undefined,\n            encoding\n        },\n        axes: {\n            [orientation]: axis,\n            color: color[0],\n            shape: shape[0],\n            size: size[0]\n        },\n        interactive: false\n    };\n};\n\nconst getDefaultVisibilty = (show, axis) => {\n    if (axis.constructor.type() === LINEAR) {\n        return show;\n    }\n    return false;\n};\n\nexport const getGridLayerDefinitions = (context, config, type) => ['x', 'y'].map((axisType) => {\n    const axes = context.axes();\n    if (!axes[axisType]) {\n        return null;\n    }\n    const show = defaultValue(config[axisType] && config[axisType].show,\n        getDefaultVisibilty(config.show, axes[axisType][0]));\n\n    return show ? getLayerDefinition(context, axes, type, axisType) : null;\n}).filter(d => d !== null);\n\nconst getValidSubtype = subtype => (!DimensionSubtype[subtype] ? DimensionSubtype.CATEGORICAL : subtype);\n\nexport const getGridLayerData = (axes, fields, fieldsConfig) => {\n    const gridData = {};\n\n    ['x', 'y'].forEach((type) => {\n        let ticks = axes[type][0].getTickValues();\n        const subtype = getObjProp(fieldsConfig, getObjProp(fields, type, 0).getMembers()[0], 'def', 'subtype');\n        const jsonData = [];\n        const schema = [\n            {\n                name: 'yvalue',\n                type: 'measure'\n            }, {\n                name: 'xvalue',\n                type: 'measure'\n            },\n            {\n                name: 'yvalue0',\n                type: 'measure'\n            }, {\n                name: 'xvalue0',\n                type: 'measure'\n            }, {\n                name: 'xdim',\n                type: 'dimension',\n                subtype: getValidSubtype(subtype)\n            }, {\n                name: 'ydim',\n                type: 'dimension',\n                subtype: getValidSubtype(subtype)\n            }\n        ];\n        const len = Math.max(ticks.length);\n        ticks = subtype === DimensionSubtype.TEMPORAL ? ticks.map(d => d.getTime()) : ticks;\n        for (let i = 0; i < len; i += 1) {\n            jsonData.push({\n                [`${type}value`]: ticks[i],\n                [`${type}value0`]: ticks[i + 1],\n                [`${type}dim`]: ticks[i],\n                [`${type}dim`]: ticks[i]\n            });\n        }\n        gridData[type] = new DataModel(jsonData, schema);\n    });\n    return gridData;\n};\n\nexport const createGridLineLayer = (context) => {\n    const vuConf = context.config();\n    const metaInf = context.metaInf();\n    const store = context.store();\n    const timeDiffs = context._timeDiffs;\n    [GRID_BAND, GRID_LINE].forEach((type) => {\n        let mark;\n        let config;\n        if (type === GRID_BAND) {\n            mark = BAR_LAYER;\n            config = vuConf.gridBands;\n        } else {\n            mark = TICK_LAYER;\n            config = vuConf.gridLines;\n        }\n        const definitions = getGridLayerDefinitions(context, config, type);\n\n        const sel = `_${type}Selection`;\n        context[sel] = createSelection(context[sel], () => {\n            const inst = layerFactory.getLayerInstance({ mark });\n            inst.dependencies(context._layerDeps);\n            return inst;\n        }, definitions, atomicDef => atomicDef.definition.name);\n        context[sel].each((layer, atomicDef) => {\n            const definition = atomicDef.definition;\n            const name = definition.name;\n            const sConf = layerFactory.getSerializedConf(mark, definition);\n            const axesObj = atomicDef.axes;\n            layer.metaInf({\n                unitRowIndex: metaInf.rowIndex,\n                unitColIndex: metaInf.colIndex,\n                namespace: `${metaInf.namespace}${type}${name}`\n            })\n                .store(store)\n                .config(sConf)\n                .dataProps({\n                    timeDiffs\n                })\n                .axes(axesObj);\n        });\n        context[`_${type}`] = context[sel].getObjects();\n    });\n};\n\nexport const attachDataToGridLineLayers = (context) => {\n    const axes = context.axes();\n    const measurement = {\n        width: context.width(),\n        height: context.height()\n    };\n    const gridLines = context._gridLines;\n    const gridBands = context._gridBands;\n    const gridLayerData = getGridLayerData(axes, context.fields(), context.data().getFieldsConfig());\n    [].concat(...gridBands, ...gridLines).forEach((inst) => {\n        inst.data(inst.axes().x ? gridLayerData.x : gridLayerData.y).measurement(measurement);\n    });\n};\n\nexport const renderGridLineLayers = (context, container) => {\n    const config = context.config();\n    const classPrefix = config.classPrefix;\n    const gridLines = context._gridLines;\n    const gridBands = context._gridBands;\n\n    const gridLineParentGroup = makeElement(container, 'g', [1], `${classPrefix}-${GRID_PARENT_GROUP}`);\n    [[gridLines, `${classPrefix}-${GRID_LINE_PARENT_GROUP_CLASS}`],\n            [gridBands, `${classPrefix}-${GRID_BAND_PARENT_GROUP_CLASS}`]].forEach((entry) => {\n                const [instances, parentGroupClass] = entry;\n                const mountPoint = makeElement(gridLineParentGroup, 'g', [1], `.${parentGroupClass}`);\n                const className = `${parentGroupClass}-group`;\n                makeElement(mountPoint, 'g', instances, `.${className}`, {\n                    update: (group, instance) => {\n                        instance.dataProps({ timeDiffs: context._timeDiffs }).mount(group.node());\n                    }\n                });\n            });\n};\n","import { CLASSPREFIX, CONSOLIDATED } from './enums/constants';\n\n/**\n * Returns the default configuration of the visual unit\n * @return {Object} Default configuration of visual unit\n */\nexport const defaultConfig = {\n    classPrefix: CLASSPREFIX,\n    defClassName: 'visual-unit',\n    className: '',\n    trackerClassName: 'visual-unit-tracker',\n    minOuterRadius: 10,\n    gridLines: {\n        defClassName: 'axis-grid-lines',\n        className: '',\n        show: true,\n        color: '#efefef',\n        zeroLineColor: '#b6b6b6'\n    },\n    gridBands: {\n        defClassName: 'axis-grid-bands',\n        className: '',\n        show: false,\n        y: {\n            color: ['#fff', '#fbfbfb']\n        },\n        x: {\n            color: ['#fff', '#f9f9f9']\n        }\n    },\n    arcLayerClassName: 'layer-arc',\n    interaction: {\n        tooltip: {\n            mode: CONSOLIDATED\n        }\n    },\n    sideEffectClassName: 'side-effect-container'\n};\n","import { mergeRecursive, DataModel } from 'muze-utils';\nimport { defaultConfig } from './default-config';\nimport { CONFIG, LAYERDEFS, TRANSFORM, DATA, LAYERS, TRANSFORMEDDATA } from './enums/reactive-props';\nimport { sanitizeLayerDef } from './helper';\n\nexport default {\n    [CONFIG]: {\n        value: null,\n        meta: {\n            sanitization: (config, oldConfig) => (\n                mergeRecursive(oldConfig || mergeRecursive({}, defaultConfig), config)\n            )\n        }\n    },\n    [LAYERDEFS]: {\n        value: null,\n        meta: {\n            preset: layerDef => sanitizeLayerDef(layerDef)\n        }\n    },\n    [TRANSFORM]: {\n        value: null\n    },\n    [LAYERS]: {\n        value: null\n    },\n    [DATA]: {\n        value: null,\n        meta: {\n            typeCheck: d => d instanceof DataModel,\n            preset: (data, context) => {\n                if (context._cache) {\n                    const cachedData = context.cachedData();\n                    context.cachedData([...cachedData, data]);\n                } else {\n                    const oldData = context.cachedData()[0];\n                    oldData && oldData.unsubscribe('propagation');\n                    context.cachedData([data]);\n                }\n            }\n        }\n    },\n    [TRANSFORMEDDATA]: {\n        value: null,\n        meta: {\n            addAsMethod: false\n        }\n    }\n};\n","export const CONFIG = 'config';\nexport const DATA = 'data';\nexport const AXES = 'axes';\nexport const LAYERDEFS = 'layerDef';\nexport const WIDTH = 'width';\nexport const HEIGHT = 'height';\nexport const MOUNT = 'mount';\nexport const TRANSFORM = 'transform';\nexport const TRANSFORMEDDATA = 'transformedData';\nexport const DATADOMAIN = 'dataDomain';\nexport const FIELDS = 'fields';\nexport const LAYERAXISINDEX = 'layerAxisIndex';\nexport const LAYERS = 'layers';\nexport const DOMAIN = 'domain';\n\n","import { STATE_NAMESPACES, temporalFields, getObjProp, defaultValue } from 'muze-utils';\nimport * as PROPS from './enums/reactive-props';\nimport {\n    transformDataModels,\n    getDimensionMeasureMap,\n    attachDataToLayers,\n    attachAxisToLayers,\n    unionDomainFromLayers\n} from './helper';\n\nimport { createGridLineLayer, attachDataToGridLineLayers } from './helper/grid-lines';\n\nconst removeExitLayers = (layerDefs, context) => {\n    const layersMap = context._layersMap;\n    const markSet = {};\n    layerDefs.forEach((layerDef, i) => {\n        const id = defaultValue(layerDef.name, `${layerDef.mark}-${i}`);\n        markSet[id] = true;\n    });\n\n    for (const key in layersMap) {\n        if (!(key in markSet)) {\n            layersMap[key].forEach(layer => layer.remove());\n            delete layersMap[key];\n        }\n    }\n};\n\nexport const calculateDomainListener = (context, namespace) => () => {\n    const domain = unionDomainFromLayers(context.layers(), context.fields(), context._layerAxisIndex,\n        context.data().getFieldsConfig());\n    context.store().commit(`${STATE_NAMESPACES.UNIT_GLOBAL_NAMESPACE}.${PROPS.DOMAIN}.${namespace}`, domain);\n};\n\nexport const listenerMap = (context, namespace, metaInf) => ([\n    {\n        type: 'registerImmediateListener',\n        props: [`${namespace.local}.${PROPS.CONFIG}`],\n        listener: ([, config]) => {\n            config && context.firebolt().config(config.interaction);\n        }\n    },\n    {\n        type: 'registerImmediateListener',\n        props: [`${namespace.local}.${PROPS.LAYERDEFS}`],\n        listener: ([, layerDefs]) => {\n            const fieldsVal = context.fields();\n            if (layerDefs && fieldsVal) {\n                removeExitLayers(layerDefs, context);\n                const axes = context.axes();\n                if (axes.x || axes.y) {\n                    const props = [`${STATE_NAMESPACES.GROUP_GLOBAL_NAMESPACE}.domain.y.${metaInf.rowIndex}0`,\n                        `${STATE_NAMESPACES.GROUP_GLOBAL_NAMESPACE}.domain.x.${metaInf.colIndex}0`];\n                    const store = context.store();\n                    const listenerInf = {\n                        namespace: namespace.local,\n                        key: 'gridLineListener'\n                    };\n                    store.unsubscribe(listenerInf);\n                    store.registerChangeListener(props, () => {\n                        attachDataToGridLineLayers(context);\n                    }, false, listenerInf);\n                }\n\n                context.addLayer(layerDefs);\n                const adjustRange = context.layers().some(inst => inst.hasPlotSpan());\n                ['x', 'y'].forEach((type) => {\n                    const axisArr = defaultValue(getObjProp(context.axes(), type), []);\n                    axisArr.forEach((axis) => {\n                        axis.config({\n                            adjustRange\n                        });\n                    });\n                });\n                context._lifeCycleManager.notify({\n                    client: context.layers(),\n                    action: 'initialized',\n                    formalName: 'layer'\n                });\n            }\n        }\n    },\n    {\n        type: 'registerImmediateListener',\n        props: [`${namespace.local}.${PROPS.DATA}`],\n        listener: ([, dataModel]) => {\n            const axesObj = context.axes();\n            const timeDiffs = {};\n            const timeDiffsByField = {};\n\n            Object.entries(temporalFields(dataModel)).forEach(([fieldName, fieldObj]) => {\n                timeDiffsByField[fieldName] = fieldObj.minimumConsecutiveDifference();\n            });\n\n            Object.entries(context.fields()).forEach(([type, [field]]) => {\n                if (field) {\n                    const timeDiff = timeDiffsByField[`${field}`];\n                    if (timeDiff) {\n                        timeDiffs[type] = timeDiff;\n                        axesObj[type].forEach(axis => axis.minDiff(timeDiff));\n                    }\n                }\n            });\n\n            context._timeDiffsByField = timeDiffsByField;\n            context._timeDiffs = timeDiffs;\n        }\n    },\n    {\n        type: 'registerImmediateListener',\n        props: [`${namespace.local}.${PROPS.CONFIG}`],\n        listener: () => {\n            createGridLineLayer(context);\n        }\n    },\n    {\n        type: 'registerImmediateListener',\n        props: [`${namespace.local}.${PROPS.DATA}`,\n            `${namespace.local}.${PROPS.TRANSFORM}`],\n        listener: ([, dataModel], [, transform]) => {\n            if (dataModel) {\n                const dataModels = transformDataModels(transform, dataModel);\n                context.store().commit(`${namespace.local}.${PROPS.TRANSFORMEDDATA}`, dataModels);\n            }\n        }\n    },\n    {\n        type: 'registerImmediateListener',\n        props: [`${namespace.local}.${PROPS.TRANSFORMEDDATA}`,\n            `${namespace.local}.${PROPS.LAYERS}`],\n        listener: ([, transformedData], [, layers]) => {\n            const layerAxisIndexVal = context._layerAxisIndex;\n            const axesVal = context.axes();\n            const dataModel = context.data();\n            if (transformedData && layers && axesVal && layerAxisIndexVal) {\n                context._lifeCycleManager.notify({ client: layers, action: 'beforeupdate', formalName: 'layer' });\n                const model = context.store().model;\n                layers.forEach(lyr => lyr.disableUpdate());\n                attachDataToLayers(layers, dataModel, transformedData);\n                model.lock();\n                layers.forEach((lyr) => {\n                    lyr.enableUpdate().domain(lyr._domain);\n                });\n                model.unlock();\n                context._dimensionMeasureMap = getDimensionMeasureMap(layers,\n                    dataModel.getFieldsConfig(), context.retinalFields());\n                attachAxisToLayers(axesVal, layers, layerAxisIndexVal);\n                context._lifeCycleManager.notify({ client: layers, action: 'updated', formalName: 'layer' });\n            }\n        }\n    }\n]);\n","import { FACET_BY_FIELDS, RETINAL_FIELDS, PARENT_ALIAS, LAYERS, CACHED_DATA } from './enums/constants';\n\nexport const PROPS = {\n    [FACET_BY_FIELDS]: {},\n    [RETINAL_FIELDS]: {},\n    [PARENT_ALIAS]: {},\n    [LAYERS]: {},\n    [CACHED_DATA]: {},\n    detailFields: {},\n    axes: {\n        defaultValue: {\n            x: [],\n            y: []\n        }\n    },\n    fields: {},\n    metaInf: {},\n    registry: {},\n    width: {},\n    height: {},\n    parentContainerInf: {},\n    valueParser: {\n        defaultValue: val => val\n    },\n    coord: {}\n};\n","import { CommonProps } from 'muze-utils';\nimport { SpawnableSideEffect } from '@chartshq/muze-firebolt';\nimport { DATA } from '../enums/reactive-props';\n\nexport const initSideEffects = (sideEffects, firebolt) => {\n    for (const key in sideEffects) {\n        if ({}.hasOwnProperty.call(sideEffects, key)) {\n            sideEffects[key] instanceof SpawnableSideEffect && sideEffects[key].drawingContext(() => {\n                const context = firebolt.context;\n                return context.getDrawingContext();\n            });\n            sideEffects[key].valueParser(firebolt.context.valueParser());\n        }\n    }\n};\n\nexport const clearActionHistory = (context) => {\n    const actionHistory = context._actionHistory;\n    for (const key in actionHistory) {\n        if (actionHistory[key].isMutableAction) {\n            delete context._actionHistory[key];\n        }\n    }\n};\n\nexport const dispatchQueuedSideEffects = (context) => {\n    const queuedSideEffects = context._queuedSideEffects;\n    Object.entries(queuedSideEffects).forEach((entry) => {\n        const sideEffect = entry[1];\n        context.dispatchSideEffect(sideEffect.name, ...sideEffect.params);\n    });\n    context._queuedSideEffects = {};\n};\n\nexport const registerListeners = (firebolt) => {\n    const context = firebolt.context;\n    const store = context.store();\n\n    store.registerImmediateListener([`local.units.${context.metaInf().namespace}.${DATA}`], (dataModel) => {\n        const dm = dataModel[1];\n\n        if (dm) {\n            firebolt.createSelectionSet(firebolt.context.data().getData().uids);\n            firebolt.initializeSideEffects();\n            const originalData = firebolt.context.cachedData()[0];\n            firebolt.attachPropagationListener(originalData);\n        }\n    });\n\n    store.registerChangeListener([`local.units.${context.metaInf().namespace}.${DATA}`], () => {\n        if (!firebolt.context.mount()) {\n            const originalData = firebolt.context.cachedData()[0];\n            originalData.unsubscribe('propagation');\n        }\n    });\n\n    context._layerDeps.throwback.registerChangeListener([CommonProps.ON_LAYER_DRAW],\n        ([, onlayerdraw]) => {\n            if (onlayerdraw) {\n                dispatchQueuedSideEffects(firebolt);\n                clearActionHistory(firebolt);\n            }\n        });\n};\n","import { DimensionSubtype } from 'muze-utils';\n\nconst getRangeFromData = (instance, selectionDataModel, propConfig) => {\n    let criteria;\n    const dataObj = selectionDataModel[0].getData();\n    const propCriteria = propConfig.payload.criteria;\n    const sourceIdentifiers = propConfig.sourceIdentifiers;\n    const schema = dataObj.schema;\n    const fieldMap = instance.data().getFieldsConfig();\n    const data = dataObj.data;\n    const isActionSourceSame = instance.id() === propConfig.sourceId;\n\n    if (isActionSourceSame) {\n        criteria = propCriteria;\n    } else {\n        criteria = (sourceIdentifiers !== null) ? schema.reduce((acc, obj, index) => {\n            let range;\n            const field = obj.name;\n            const fieldObj = fieldMap[field];\n            const type = fieldObj && (fieldObj.def.subtype ? fieldObj.def.subtype : fieldObj.def.type);\n            const isDimension = type === DimensionSubtype.CATEGORICAL;\n\n            if (!fieldObj) {\n                return acc;\n            }\n\n            if (!isDimension) {\n                range = [Math.min(...data.map(d => d[index])), Math.max(...data.map(d => d[index]))];\n            } else {\n                range = data.map(d => d[index]);\n            }\n            acc[field] = range;\n            return acc;\n        }, {}) : null;\n    }\n    return criteria;\n};\n\nexport const payloadGenerator = {\n    brush: (instance, selectionDataModel, propConfig) => {\n        const propPayload = propConfig.payload;\n        const criteria = getRangeFromData(instance, selectionDataModel, propConfig);\n        const payload = Object.assign({}, propPayload);\n        payload.criteria = criteria;\n        return payload;\n    },\n\n    __default: (instance, selectionDataModel, propConfig) => {\n        const propPayload = propConfig.payload;\n        const sourceIdentifiers = propConfig.sourceIdentifiers;\n        const dataObj = selectionDataModel[0].getData();\n        let schema = dataObj.schema;\n        const payload = Object.assign({}, propPayload);\n        schema = dataObj.schema;\n        const data = dataObj.data;\n        const sourceFields = schema.map(d => d.name);\n        payload.criteria = !sourceIdentifiers && selectionDataModel[0].isEmpty() ? null :\n            [sourceFields, ...data];\n        payload.sourceFields = sourceIdentifiers ? sourceIdentifiers.getSchema().map(d => d.name) : [];\n        return payload;\n    }\n};\n\n","import { isSimpleObject, FieldType, DataModel } from 'muze-utils';\n\nconst getModelWithFacetData = (dm, data) => {\n    const dataObj = dm.getData();\n    const schema1 = dataObj.schema;\n    const data1 = dataObj.data;\n    const jsonData = [];\n    const schema2 = data[0].map(d => ({\n        name: `${d}`,\n        type: FieldType.DIMENSION\n    }));\n    const data2 = data[1];\n\n    data1.forEach((d) => {\n        const tuple = {};\n        schema1.forEach((obj, i) => {\n            tuple[obj.name] = d[i];\n        });\n        schema2.forEach((obj, i) => {\n            tuple[obj.name] = data2[i];\n        });\n        jsonData.push(tuple);\n    });\n\n    return new DataModel(jsonData, [...schema1, ...schema2]);\n};\n\nexport const propagateValues = (instance, action, config = {}) => {\n    let propagationData;\n    const payload = config.payload;\n    const selectionSet = config.selectionSet;\n    const propagationFieldInf = config.propagationFields[action] || {};\n    const propagationFields = propagationFieldInf.fields || [];\n    const append = propagationFieldInf.append;\n    const criteria = payload.criteria;\n    const context = instance.context;\n    const dataModel = context.cachedData()[0];\n    const sourceId = context.id();\n    const sideEfffects = instance.sideEffects();\n    const behaviourEffectMap = instance._behaviourEffectMap;\n    const mergedModel = selectionSet.mergedEnter.model;\n    const fieldsConfig = dataModel.getFieldsConfig();\n    payload.sourceUnit = sourceId;\n    payload.action = action;\n    payload.sourceCanvas = context.parentAlias();\n    const propagationBehaviourMap = instance._propagationBehaviourMap;\n    const propagationBehaviour = propagationBehaviourMap[action] || action;\n\n    let propFields = [];\n    if (criteria === null) {\n        propagationData = null;\n    } else if (isSimpleObject(criteria)) {\n        propFields = Object.keys(criteria || {});\n        propagationData = mergedModel ? mergedModel.project(propFields) : null;\n    } else {\n        propFields = criteria[0];\n        propagationData = mergedModel ? mergedModel.project(propFields) : null;\n    }\n\n    const facetByFields = context.facetByFields();\n    if (propagationData !== null && propagationFields.length) {\n        const fields = propagationData.getData().schema.map(d => d.name);\n        propagationData = getModelWithFacetData(propagationData, facetByFields);\n        propFields = append ? [...fields, ...propagationFields] : propagationFields;\n        propagationData = propagationData.project(propFields);\n    }\n\n    let propagateInterpolatedValues = false;\n    if (propFields.length && propFields.every(field => fieldsConfig[field] &&\n        fieldsConfig[field].def.type === FieldType.MEASURE)) {\n        propagateInterpolatedValues = true;\n    }\n\n    const groupId = context.parentAlias();\n    payload.action = action;\n    const behaviourInstance = instance._actions.behavioural[propagationBehaviour];\n    const isMutableAction = behaviourInstance ? behaviourInstance.constructor.mutates() : false;\n\n    const filterFn = (entry, propagationConf) => {\n        const effects = behaviourEffectMap[entry.config.action];\n        const mutates = entry.config.groupId ?\n            effects.some(d => sideEfffects[d.name || d].constructor.mutates()) : true;\n        return entry.config.groupId !== propagationConf.groupId && mutates;\n    };\n\n    const sourceBehaviour = instance._actions.behavioural[action];\n    const mutates = sourceBehaviour ? sourceBehaviour.constructor.mutates() : false;\n    let propConfig = {\n        payload,\n        action,\n        criteria: propagationData,\n        isMutableAction: mutates,\n        propagateInterpolatedValues,\n        groupId,\n        sourceId: mutates ? groupId : sourceId,\n        filterFn,\n        enabled: (propConf, firebolt) => (action !== propagationBehaviour ?\n            propConf.payload.sourceCanvas === firebolt.context.parentAlias() : true)\n    };\n\n    dataModel.propagate(propagationData, propConfig, true);\n\n    if (action !== propagationBehaviour) {\n        propConfig = {\n            payload,\n            sourceId: isMutableAction ? groupId : sourceId,\n            criteria: propagationData,\n            isMutableAction,\n            propagateInterpolatedValues,\n            action: propagationBehaviour,\n            groupId,\n            applyOnSource: action === propagationBehaviour,\n            enabled: (propConf, firebolt) => propConf.payload.sourceCanvas !== firebolt.context.parentAlias(),\n            filterFn\n        };\n\n        dataModel.propagate(propagationData, propConfig, true, {\n            filterImmutableAction: (actionInf, propInf) => actionInf.groupId !== propInf.groupId\n        });\n    }\n};\n","import { FieldType } from 'muze-utils';\nimport { Firebolt } from '@chartshq/muze-firebolt';\nimport { registerListeners } from './helper';\nimport { payloadGenerator } from './payload-generator';\nimport { propagateValues } from './data-propagator';\n\n/**\n * This class manages the interactions of visual unit. It associates physical actions with\n * behavioural actions. It also propagates the behavioural actions to other datamodels.\n */\nexport default class UnitFireBolt extends Firebolt {\n    constructor (...params) {\n        super(...params);\n        registerListeners(this);\n    }\n\n    propagate (behaviour, payload, selectionSet, sideEffects) {\n        propagateValues(this, behaviour, {\n            payload,\n            selectionSet,\n            sideEffects,\n            propagationFields: this._propagationFields\n        });\n    }\n\n    getApplicableSideEffects (sideEffects, payload, propagationInf) {\n        const context = this.context;\n        const unitId = context.id();\n        const aliasName = context.parentAlias();\n        const propagationSourceCanvas = propagationInf.propPayload && propagationInf.propPayload.sourceCanvas;\n        const sourceUnitId = propagationInf.propPayload && propagationInf.propPayload.sourceUnit;\n        const sourceSideEffects = this._sourceSideEffects;\n        const sideEffectInstances = this.sideEffects();\n        const actionOnSource = sourceUnitId ? sourceUnitId === unitId : true;\n\n        const applicableSideEffects = payload.sideEffects ? [{\n            effects: payload.sideEffects,\n            behaviours: [payload.action]\n        }] : sideEffects;\n        applicableSideEffects.forEach((d) => {\n            let mappedEffects = d.effects;\n            mappedEffects = mappedEffects.filter((se) => {\n                const mutates = sideEffectInstances[se.name || se].constructor.mutates();\n                if (mutates && propagationInf.isMutableAction === false) {\n                    return false;\n                }\n                if (!actionOnSource && payload.criteria !== null) {\n                    const sideEffectChecker = sourceSideEffects[se.name || se];\n                    return sideEffectChecker ? sideEffectChecker(propagationInf.propPayload, context) : true;\n                }\n                if (propagationSourceCanvas === aliasName || actionOnSource) {\n                    return se.applyOnSource !== false;\n                }\n\n                return true;\n            });\n            d.effects = mappedEffects;\n        });\n        return applicableSideEffects;\n    }\n\n    shouldApplySideEffects (propagate) {\n        return propagate === false;\n    }\n\n    onDataModelPropagation () {\n        return (data, config) => {\n            let isSourceFieldPresent = true;\n            let isMutableAction = false;\n            const propPayload = config.payload;\n            const sourceIdentifiers = config.sourceIdentifiers;\n            const enabledFn = config.enabled;\n            const action = config.action;\n            const payloadFn = payloadGenerator[action] || payloadGenerator.__default;\n\n            if (sourceIdentifiers) {\n                const fieldsConfig = sourceIdentifiers.getFieldsConfig();\n                const sourceIdentifierFields = Object.keys(fieldsConfig);\n                const propFields = Object.keys(data[0].getFieldsConfig());\n                if (!Object.values(fieldsConfig).some(d => d.def.type === FieldType.MEASURE)) {\n                    isSourceFieldPresent = sourceIdentifierFields.some(d => propFields.indexOf(d) !== -1);\n                }\n            }\n\n            const payload = payloadFn(this.context, data, config);\n            const sourceBehaviours = this._sourceBehaviours;\n            const filterFn = sourceBehaviours[action] || sourceBehaviours['*'];\n            let enabled = true;\n\n            if (filterFn) {\n                enabled = filterFn(propPayload || {}, this.context);\n            }\n\n            if (enabledFn) {\n                enabled = enabledFn(config, this) && enabled !== false;\n            }\n\n            if (enabled) {\n                const effects = this._behaviourEffectMap[action];\n                const sideEffectInstances = this.sideEffects();\n                isMutableAction = config.groupId ?\n                    effects.some(d => sideEffectInstances[d.name || d].constructor.mutates()) : config.isMutableAction;\n\n                const propagationInf = {\n                    propagate: false,\n                    data,\n                    propPayload,\n                    sourceIdentifiers,\n                    persistent: false,\n                    isSourceFieldPresent,\n                    sourceId: config.propagationSourceId,\n                    isMutableAction: config.isMutableAction\n                };\n\n                this._actionHistory[action] = {\n                    payload,\n                    propagationInf,\n                    isMutableAction\n                };\n                this.dispatchBehaviour(action, payload, propagationInf);\n            }\n        };\n    }\n\n    prepareSelectionSets (behaviours) {\n        const data = this.context.data();\n        if (data) {\n            this.createSelectionSet(data.getData().uids, behaviours);\n        }\n        return this;\n    }\n\n    initializeSideEffects () {\n        if (this.context.data()) {\n            super.initializeSideEffects();\n        }\n        return this;\n    }\n\n    remove () {\n        this.context.cachedData()[0].unsubscribe('propagation');\n        return this;\n    }\n}\n","import { layerFactory } from '@chartshq/visual-layer';\nimport {\n    Store,\n    setAttrs,\n    getUniqueId,\n    getQualifiedClassName,\n    selectElement,\n    transactor,\n    makeElement,\n    registerListeners,\n    generateGetterSetters,\n    getDataModelFromIdentifiers,\n    isSimpleObject,\n    transposeArray,\n    CommonProps,\n    toArray,\n    STATE_NAMESPACES\n} from 'muze-utils';\nimport { physicalActions, sideEffects, behaviouralActions, behaviourEffectMap } from '@chartshq/muze-firebolt';\nimport { actionBehaviourMap } from './firebolt/action-behaviour-map';\nimport {\n    renderLayers,\n    getNearestDimensionalValue,\n    removeLayersBy,\n    getLayersBy,\n    getLayerFromDef,\n    getLayerAxisIndex,\n    sanitizeLayerDef,\n    createSideEffectGroup,\n    resolveEncodingTransform,\n    createRenderPromise,\n    setAxisRange\n} from './helper';\nimport { renderGridLineLayers } from './helper/grid-lines';\nimport localOptions from './local-options';\nimport { listenerMap, calculateDomainListener } from './listener-map';\nimport {\n    DOMAIN\n} from './enums/reactive-props';\nimport { PROPS } from './props';\nimport UnitFireBolt from './firebolt';\nimport { initSideEffects } from './firebolt/helper';\nimport './styles.scss';\n\nconst FORMAL_NAME = 'unit';\n\n/**\n * Visual Unit is hierarchical component created by {@link VisualGroup}. This component accepts layer definitions\n * and creates concrete layer instances from them, binds data and attaches axis to them. It also retreives the domain\n * from the layers and unions them and sets them on corresponding axis instances. This also creates the parent svg\n * groups for all the layers and delegates the rendering to all the layers.\n *\n * @public\n * @module VisualUnit\n * @class\n */\nexport default class VisualUnit {\n\n    /**\n     * Creates instance of visualization unit.\n     *\n     * @param {Object} registry  Component registry\n     * @param {Object} dependencies  Dependencies required by visual unit.\n     */\n    constructor (registry, dependencies) {\n        this._id = getUniqueId();\n        this._dependencies = dependencies;\n        this._layerDeps = {\n            throwback: new Store({\n                [CommonProps.ON_LAYER_DRAW]: false\n            }),\n            smartLabel: dependencies.smartLabel,\n            lifeCycleManager: dependencies.lifeCycleManager\n        };\n        this._renderedResolve = null;\n        this._renderedPromise = new Promise((resolve) => {\n            this._renderedResolve = resolve;\n        });\n        createRenderPromise(this);\n        this._layerDeps.throwback.registerChangeListener([CommonProps.ON_LAYER_DRAW], () => {\n            this._renderedResolve();\n            this._lifeCycleManager.notify({ client: this.layers(), action: 'drawn', formalName: 'layer' });\n        });\n\n        this._lifeCycleManager = dependencies.lifeCycleManager;\n        this._layersMap = {};\n        this._gridLinesSelection = null;\n        this._gridBandsSelection = null;\n        this._gridLines = [];\n        this._gridBands = [];\n        this._layerNamespaces = {};\n        this._layerAxisIndex = {};\n        this._transformedDataModels = {};\n        layerFactory.setLayerRegistry(registry.layerRegistry);\n        generateGetterSetters(this, PROPS);\n        this.registry(registry);\n        this.cachedData([]);\n    }\n\n    static formalName () {\n        return FORMAL_NAME;\n    }\n\n    static getState () {\n        return [\n            {\n                domain: {}\n            },\n            localOptions\n        ];\n    }\n\n    store (...params) {\n        if (params.length) {\n            this._store = params[0];\n            const metaInf = this.metaInf();\n            this.store().append(`${STATE_NAMESPACES.UNIT_LOCAL_NAMESPACE}`, {\n                [`${metaInf.namespace}`]: null\n            });\n            const localNs = `${STATE_NAMESPACES.UNIT_LOCAL_NAMESPACE}.${metaInf.namespace}`;\n            transactor(this, localOptions, this.store().model, {\n                namespace: localNs\n            });\n            registerListeners(this, listenerMap, {\n                local: localNs,\n                global: STATE_NAMESPACES.UNIT_GLOBAL_NAMESPACE\n            }, {\n                rowIndex: metaInf.rowIndex,\n                colIndex: metaInf.colIndex\n            });\n            this.firebolt(new UnitFireBolt(this, {\n                physical: physicalActions,\n                behavioural: behaviouralActions,\n                physicalBehaviouralMap: actionBehaviourMap\n            }, sideEffects, behaviourEffectMap));\n            return this;\n        }\n        return this._store;\n    }\n\n    /**\n     * Static helper for creates a unit instance\n     *\n     * @param {Object} [id] optional unique identifier for a unit; , id is calculated internally\n     * @param {DataModel} data instance of datamodel\n     * @param {Array.<Layer>} layers layer configuration\n     * @param {Object} config configurtion for the visual unit\n     * @return {VisualUnit} Instance of a unit\n     */\n    static create (...params) {\n        return new this(...params);\n    }\n\n    /**\n     * Returns the instance of firebolt associated with this visual unit. Firebolt dispatches the behavioural actions\n     * when any physical action happens on the elements of visual unit.\n     *\n     * @public\n     *\n     * @return {Firebolt} Instance of firebolt.\n     */\n    firebolt (...firebolt) {\n        if (firebolt.length) {\n            this._firebolt = firebolt[0];\n            return this;\n        }\n        return this._firebolt;\n    }\n\n    /**\n     * Returns the unique id of this visual unit.\n     *\n     * @public\n     * @return {string} Unique identifier.\n     */\n    id () {\n        return this._id;\n    }\n\n    lockModel () {\n        this._store.model.lock();\n        return this;\n    }\n\n    unlockModel () {\n        this._store.model.unlock();\n        return this;\n    }\n\n    timeDiffsByField (...params) {\n        if (params.length) {\n            return this;\n        }\n        return this._timeDiffsByField;\n    }\n\n    /**\n     * Renders the visual unit. It creates the layout and renders the axes and layers.\n     *\n     * @return {VisualUnit} Instance of visual unit.\n     */\n    render (container) {\n        const config = this.config();\n        const { className, defClassName, sideEffectClassName, classPrefix } = config;\n        const qualifiedClassName = getQualifiedClassName(defClassName, this.id(), config.classPrefix);\n        const width = this.width();\n        const height = this.height();\n        const containerSelection = selectElement(container).style('position', 'relative');\n\n        this._rootSvg = makeElement(containerSelection, 'svg', [null], className)\n                        .style('width', `${width}px`).style('height', `${height}px`);\n\n        const node = this._rootSvg.node();\n        setAttrs(node, {\n            width,\n            height,\n            class: qualifiedClassName.join(' ')\n        });\n\n        setAxisRange(this);\n        renderGridLineLayers(this, node);\n        renderLayers(this, node, this.layers(), {\n            width,\n            height\n        });\n        this._sideEffectGroup = createSideEffectGroup(node, `${classPrefix}-${sideEffectClassName}`);\n        const firebolt = this.firebolt();\n        initSideEffects(firebolt.sideEffects(), firebolt);\n        return this;\n    }\n\n    done () {\n        return this._renderedPromise;\n    }\n\n    /**\n     * Caches all the datamodels in an array from the next `data()` call on visual unit until `clearCaching()` or\n     * `resetData()` is called on it.\n     *\n     * @public\n     * @return {VisualUnit} Instance of visual unit.\n     */\n\n    enableCaching () {\n        this._cache = true;\n        return this;\n    }\n\n    /**\n     * Clears all the previous cached data.\n     *\n     * @public\n     * @segment VisualUnit\n     * @return {VisualUnit} Instance of visual unit.\n     */\n    clearCaching () {\n        this._cache = false;\n        this.cachedData([this.cachedData()[0]]);\n        return this;\n    }\n\n    /**\n     * Returns the drawing information from visual unit.Drawing context contains the dimensions of unit and the svg\n     * container of the visual unit.\n     *\n     * @public\n     *\n     * @return {Object} Drawing information.\n     *      ```\n     *          {\n     *              htmlContainer: // Html container of svg container of the visual unit\n     *              svgContainer: // Root svg container\n     *              width: // Width of the visual unit\n     *              height: // Height of the visual unit\n     *              sideEffectGroup: // Svg group for drawing side effect elements.\n     *              parentContainer: // Parent html container of the visual unit.\n     *              xOffset: // x offset space from the starting x position of the container,\n     *              yOffset: // y offset space from the starting y position of the container\n     *          }\n     *      ```\n     */\n    getDrawingContext () {\n        const rootSvg = this._rootSvg && this._rootSvg.node();\n        const width = this.width();\n        const height = this.height();\n        const { el, dimensions } = this.parentContainerInf();\n        return {\n            htmlContainer: this.mount(),\n            svgContainer: rootSvg,\n            width,\n            height,\n            sideEffectGroup: this._sideEffectGroup,\n            parentContainer: el,\n            parentContainerDimensions: dimensions,\n            xOffset: 0,\n            yOffset: 0\n        };\n    }\n\n    /**\n     * Returns the serialized configuration of visual unit.\n     *\n     * @return {Object} serialized configuration\n     */\n    serialize () {\n        return {\n            layers: this.layers().map(layer => layer.serialize()),\n            config: this.config(),\n            axes: this.axes().map(axis => axis.serialize())\n        };\n    }\n\n    mount (...mount) {\n        if (mount.length) {\n            this._mount = mount[0];\n            this.render(mount[0]);\n            this.firebolt().mapActionsAndBehaviour();\n            return this;\n        }\n        return this._mount;\n    }\n\n    /**\n     * Adds a new layer to the visual unit. It takes a layer definition and creates layer instances from them. It does\n     * not render the layers. It returns the layer instances in an array. If the layer definition is a composite layer,\n     * then multiple layer instances will be returned in the array.\n     *\n     * To add a layer in the unit,\n     * ```\n     *      unit.addLayer({\n     *          name: 'bullet',\n     *          mark: 'bar',\n     *          encoding: {\n     *              x: 'Year',\n     *              y: 'Acceleration',\n     *              color: 'Origin'\n     *          }\n     *      });\n     * ```\n     * @public\n     * @param {Object} layerDef Definition of new layer.\n     *\n     * @return {Array} Array of layer instances.\n     */\n    addLayer (layerDefinition) {\n        const layerDefinitions = sanitizeLayerDef(toArray(layerDefinition));\n\n        const layersMap = this._layersMap;\n        const markSet = {};\n        const store = {\n            layers: {},\n            components: {\n                unit: this\n            }\n        };\n        let layerIndex = 0;\n        let startIndex = [].concat(...Object.values(this._layersMap)).length;\n        const metaInf = this.metaInf();\n        const props = this._layerNamespaces;\n        const layers = layerDefinitions.sort((a, b) => a.order - b.order).reduce((layersArr, layerDef) => {\n            const definition = layerDef.def;\n            const markId = definition.name;\n            const defArr = toArray(definition);\n            const namespaces = [];\n            defArr.forEach((def) => {\n                def.order = layerDef.order + layerIndex;\n                const namespace = `${metaInf.namespace}${startIndex}`;\n                if (!layersMap[markId]) {\n                    startIndex++;\n                    if (definition.calculateDomain !== false) {\n                        props[`${STATE_NAMESPACES.LAYER_GLOBAL_NAMESPACE}.${DOMAIN}.${namespace}`] = true;\n                    }\n                }\n                namespaces.push(namespace);\n            });\n            layerIndex += defArr.length;\n            const instances = getLayerFromDef(this, definition, layersMap[markId], namespaces);\n            store.layers = Object.assign(store.layers, instances);\n            const instanceValues = Object.values(instances);\n            layersArr = layersArr.concat(...instanceValues);\n            layersMap[markId] = instanceValues;\n            markSet[markId] = markId;\n            return layersArr;\n        }, []);\n\n        store.unit = this;\n        const layerdeps = {};\n        const layersArr = [].concat(...Object.values(this._layersMap));\n        layersArr.forEach((layer) => {\n            const alias = layer.alias();\n            store.layers[alias] = layer;\n            layerdeps[alias] = [];\n        });\n        layers.forEach((layer) => {\n            const depArr = resolveEncodingTransform(layer, store);\n            layerdeps[layer.alias()] = depArr;\n        });\n\n        this._layerDepOrder = layerdeps;\n        this._layerAxisIndex = Object.assign(this._layerAxisIndex, getLayerAxisIndex(layers, this.fields()));\n        const stateStore = this.store();\n\n        stateStore.unsubscribe({\n            key: 'calculateDomainListener',\n            namespace: `${STATE_NAMESPACES.UNIT_LOCAL_NAMESPACE}.${metaInf.namespace}`\n        });\n        stateStore.registerImmediateListener(Object.keys(props), calculateDomainListener(this, metaInf.namespace),\n            false, {\n                key: 'calculateDomainListener',\n                namespace: `${STATE_NAMESPACES.UNIT_LOCAL_NAMESPACE}.${metaInf.namespace}`\n            });\n        this.layers(layersArr);\n        return layers;\n    }\n\n    /**\n     *\n     *\n     *\n     * @memberof VisualUnit\n     */\n    remove () {\n        const lifeCycleManager = this._dependencies.lifeCycleManager;\n        lifeCycleManager.notify({ client: this, action: 'beforeremove', formalName: 'unit' });\n        this.store().unsubscribe({\n            namespace: `${STATE_NAMESPACES.UNIT_LOCAL_NAMESPACE}.${this.metaInf().namespace}`\n        });\n        selectElement(this.mount()).remove();\n        this.firebolt().remove();\n        // Remove layers\n        lifeCycleManager.notify({ client: this.layers(), action: 'beforeremove', formalName: 'layer' });\n        this.layers().forEach(layer => layer.remove());\n        lifeCycleManager.notify({ client: this.layers(), action: 'removed', formalName: 'layer' });\n        lifeCycleManager.notify({ client: this, action: 'removed', formalName: 'unit' });\n        return this;\n    }\n\n    /**\n     *\n     *\n     * @param {*} identifiers\n     *\n     * @memberof VisualUnit\n     */\n    getDataModelFromIdentifiers (identifiers, mode, parentModel) {\n        if (identifiers === null) {\n            return null;\n        }\n        const dataModel = parentModel || this.data();\n        return getDataModelFromIdentifiers(dataModel, identifiers, mode);\n    }\n\n    /**\n     * Resets the data of visual unit to original data model. It also clears the cached data.\n     *\n     * @public\n     * @segment VisualUnit\n     * @return {VisualUnit} Instance of visual unit.\n     */\n    resetData () {\n        this.data(this.cachedData()[0]);\n        return this;\n    }\n\n    /**\n     *\n     *\n     *\n     * @memberof VisualUnit\n     */\n    getSourceInfo () {\n        return {\n            dimensionMeasureMap: this._dimensionMeasureMap,\n            fields: this.fields(),\n            data: this.data(),\n            axes: this.axes()\n        };\n    }\n\n    getDataDomain () {\n        return this.store().get(`${STATE_NAMESPACES.UNIT_GLOBAL_NAMESPACE}.domain.${this.metaInf().namespace}`);\n    }\n\n    /**\n     *\n     *\n     *\n     * @memberof VisualUnit\n     */\n    getDefaultTargetContainer () {\n        const { classPrefix, defClassName } = this.config();\n        return [`.${classPrefix}-${defClassName}`];\n    }\n\n    /**\n     * Returns an array of layer instances which matches the supplied mark type.\n     *\n     * @public\n     *\n     * @param {string} type Mark type of layer.\n     *\n     * @return {Array} Array of layer instances.\n     */\n    getLayersByType (type) {\n        const layers = getLayersBy(this.layers(), 'type', type);\n        return layers;\n    }\n\n    /**\n     * Returns the layer instance which matches the supplied layer name. If no layer is found, then it returns\n     * undefined.\n     *\n     * @public\n     * @param {string} name Name of layer.\n     *\n     * @return {VisualUnit} Layer instance.\n     */\n    getLayerByName (name) {\n        const layers = getLayersBy(this.layers(), 'name', name);\n        return layers[0];\n    }\n\n    /**\n     * Returns the point located nearest to the supplied x and y position. It returns the unique identifiers of the\n     * point. This function also accepts an additional configuration `getAllPoints` inside `config` object in the third\n     * argument which if set to true, then it returns the identifiers of all the points which falls on the nearest\n     * x value or y value if any one of the field is a dimension. Additionally, a target property is also returned\n     * which contains the identifier of the nearest point. If no nearest point is found, then it returns identifier\n     * as null.\n     *\n     * @public\n     *\n     * @param {number} x X Position of the point from where nearest point is to be found.\n     * @param {number} y Y Position of the point from where nearest point is to be found.\n     * @param {Object} config Additional configuration options.\n     * @param {boolean} config.getAllPoints If true, then returns all the points nearest to the x value or y value if\n     * it is dimension.\n     * @param {Object} config.data Data associated with the nearest point.\n     * @return {Object} Nearest point information\n     * ```\n     *      {\n     *          id: [['Origin'], ['USA'], ['Japan']], // Identifiers of all the points closest to the x value.\n     *          target: [['Origin'], ['Japan']] // Identifier of the nearest point.\n     *      }\n     * ```\n     */\n    getNearestPoint (x, y, config) {\n        let pointObj = {\n            id: null\n        };\n        const dimValue = getNearestDimensionalValue(this, {\n            x,\n            y\n        });\n\n        if (dimValue !== null && config.getAllPoints) {\n            pointObj.id = dimValue;\n            const pointInf = this.getMarkInfFromLayers(x, y, config);\n            pointObj.target = pointInf && pointInf.id ? pointInf.id : pointObj.id;\n            return pointObj;\n        }\n\n        const markInf = this.getMarkInfFromLayers(x, y, config) || { id: null };\n        pointObj = Object.assign({}, markInf);\n\n        pointObj.target = markInf.id;\n        return pointObj;\n    }\n\n    getMarkInfFromLayers (x, y, args) {\n        const layers = this.layers();\n        const len = layers.length;\n        let point = null;\n        // Iterate through the layers array and fetch the nearest point from each layer. If a valid\n        // nearest point is found from any layer, then return that point.\n        for (let i = 0; i < len; i++) {\n            const layer = layers[i];\n            const config = layer.config();\n            if (config.interactive !== false) {\n                point = layer.getNearestPoint(x, y, args);\n            }\n            if (point) {\n                return point;\n            }\n        }\n        return point;\n    }\n\n    /**\n     * Get the information of all the marks such as x, y position and size from supplied identifiers. It\n     * returns an array of points whose data matches the given identifiers.\n     *\n     * @public\n     *\n     * @param {Array|Object} identifiers Field names and their corresponding values.\n     * ```\n     * identifiers can be given in an array of array,\n     *      ['Origin', 'Name'], // Names of the fields supplied in first array\n     *      ['USA', 'ford'], // Data values of each field supplied in rest of the arrays.\n     *      ['Japan', 'ford']\n     * or in an object,\n     *      {\n     *          Origin: ['USA']\n     *      }\n     * ```\n     * @param {Object} config Optional configurations which decides which information of the mark will\n     * be retrieved.\n     * @param {boolean} [config.getAllAttrs = false] If true, then returns all the information of each mark.\n     * @param {boolean} [config.getBBox = false] If true, then returns the bounding box of each mark.\n     *\n     * @return {Array} Array of objects containing the information of each point.\n     * ```\n     * By default, the method returns the array of points in this structure,\n     *      [\n     *          {\n     *              x: 20,\n     *              y: 100,\n     *              width: 200,\n     *              height: 100\n     *          }\n     *      ]\n     * If 'config.getAllAttrs' is true, then it returns all the information of each mark,\n     *      [\n     *      // Positions of mark on initial state of transition.\n     *          enter: {\n     *              x: 0,\n     *              y: 0\n     *          },\n     *          // Final positions of the mark\n     *          update: {\n     *              x: 20,\n     *              y: 10\n     *          },\n     *          style: // css styles of each mark\n     *          source: [200, 'USA'] // Row information of each mark\n     *          id: 20 // Row id of each mark\n     *      ]\n     * ```\n     */\n    getPlotPointsFromIdentifiers (identifiers, config = {}) {\n        let points = [];\n        let parsedIdentifiers = identifiers;\n        if (identifiers === null) {\n            return [];\n        }\n        const layers = this.layers();\n        const len = layers.length;\n        if (isSimpleObject(identifiers)) {\n            parsedIdentifiers = [Object.keys(identifiers)];\n            parsedIdentifiers = [...parsedIdentifiers, ...transposeArray(Object.values(identifiers))];\n        }\n        for (let i = 0; i < len; i++) {\n            const layer = layers[i];\n            if (layer.config().interactive !== false) {\n                points = [...points, ...layer.getPointsFromIdentifiers(parsedIdentifiers, config)];\n            }\n        }\n        return points;\n    }\n\n    /**\n     * Removes the layer instance which matches the supplied layer name.\n     *\n     * @public\n     * @param {string} name Name of layer\n     *\n     * @return {VisualUnit} Instance of visual unit.\n     */\n    removeLayerByName (name) {\n        removeLayersBy('name', name);\n        return this;\n    }\n\n    /**\n     * Removes all the layer instances which matches the supplied mark type.\n     *\n     * @public\n     * @param {string} type Mark type of layer.\n     *\n     * @return {VisualUnit} Instance of visual unit.\n     */\n    removeLayersByType (type) {\n        removeLayersBy('type', type);\n        return this;\n    }\n}\n","import { DataModel } from 'muze-utils';\nimport { retriveDomainFromData, sortFacetFields } from './group-utils';\n\n/**\n * Gets name of fields form the variables\n *\n * @param {*} fields1\n * @param {*} [fields2=[]]\n *\n */\nconst getFieldNames = (fields1, fields2 = []) => [fields1, fields2].map(fields => fields.reduce((acc, d) => {\n    acc = [...acc, ...d.getMembers()];\n    return acc;\n}, []));\n\n/**\n * Creates a selected datamodel from a parent datamodel and a set of field names\n *\n * @param {Object} datamodel provided as input\n * @param {Array} fieldNames schema  names\n * @param {Array} fieldValues values of those schema names to be selected\n * @return {Object} creates a new selected datamodel\n */\nconst createSelectedDataModel = (datamodel, fieldNames, fieldValues) =>\n    datamodel.select(fields => fieldNames.every((field, k) => fields[field].value === fieldValues[k]));\n\n/**\n *\n *\n * @param {*} facets\n * @param {*} keyArray\n *\n */\nconst uniqueKeyGenerator = (keyArray, context, depth = 0, val = []) => {\n    const {\n        facets,\n        dataModel,\n        uniqueValues\n    } = context;\n\n    // Get unique keys for the next depth recursively if required\n    if (facets[depth + 1]) {\n        const field = facets[depth];\n        uniqueValues.forEach((value) => {\n            const newDm = dataModel.select(fields => fields[field].value === value);\n            const nextDepthUniqueValues = retriveDomainFromData(newDm, facets[depth + 1]);\n            const newContext = {\n                facets,\n                dataModel: newDm,\n                uniqueValues: nextDepthUniqueValues.sort()\n            };\n\n            uniqueKeyGenerator(keyArray, newContext, depth + 1, [...val, value]);\n        });\n    } else {\n        uniqueValues.forEach((value) => {\n            keyArray.push([...val, value]);\n        });\n    }\n};\n\n/**\n * projects row model based on the set of row and/or column and other projection fields\n *\n * @param {Object} datamodel provided as input\n * @return {Object} Projected datamodel\n */\nconst projectRows = (datamodel, projections) => {\n    const {\n        allColumnProjections,\n        rowProjections,\n        optionalProjections\n    } = projections;\n\n    if (rowProjections.length > 0) {\n        return rowProjections.map((projectFields) => {\n            const [projFieldNames, colProjFieldNames] = getFieldNames(projectFields, allColumnProjections);\n            return datamodel.project([...projFieldNames, ...colProjFieldNames, ...optionalProjections]);\n        });\n    }\n    return [datamodel];\n};\n\n/**\n * Adds the datamodels to current row index based on column fields\n *\n * @param {Array} context current context\n * @param {Array} valueCellCreator List of facets applied to the current datamodel\n */\nconst pushToMatrix = (context, valueCellCreator) => {\n    let cells = [];\n    const {\n        matrix,\n        datamodel,\n        facetInfo,\n        fieldInfo\n    } = context;\n    // Get projected fields for current row\n    const {\n        rowProjections,\n        colProjections,\n        optionalProjections\n    } = fieldInfo;\n    const {\n        rowIndex,\n        columnIndex\n    } = facetInfo;\n    const rowProj = rowProjections[(rowIndex) % rowProjections.length] || [];\n\n    // Get the cells for the matrix from the return function of the callback on the datamodel.\n    // callback function -> (datamodel, {projections, indices}, facets)\n    if (colProjections.length > 0) {\n        cells = colProjections.map((projectFields, projIdx) => {\n            const [colProjFieldNames, rowProjFieldNames] = getFieldNames(projectFields, rowProj);\n            const projectedDm = datamodel.project([...colProjFieldNames, ...rowProjFieldNames, ...optionalProjections]);\n            const projections = { rowFields: rowProj, columnFields: projectFields };\n            const indices = { rowIndex, columnIndex: columnIndex * colProjections.length + projIdx };\n\n            return valueCellCreator(projectedDm, { projections, indices }, facetInfo);\n        });\n    } else {\n        const projections = { rowFields: rowProj, columnFields: [] };\n        const indices = { rowIndex, columnIndex };\n\n        cells = [valueCellCreator(datamodel, { projections, indices }, facetInfo)];\n    }\n\n    matrix[rowIndex] = matrix[rowIndex] || [];\n    matrix[rowIndex].push(...cells);\n};\n\n/**\n * Formats row or columns keys with the provided formatter.\n *\n * @param {Array} keys - The collection of row or column keys.\n * @param {Array} formatterList - The list of corresponding formatter.\n */\nconst formatKeys = (keys, formatterList) => {\n    keys.forEach((rKeys) => {\n        rKeys.forEach((key, idx) => {\n            rKeys[idx] = formatterList[idx](key);\n        });\n    });\n};\n\n/**\n * Gets Matrixes for corresponding datamodel, facets and projections\n *\n * @param {Object} dataModel input datamodel\n * @param {Object} fieldMap corresponding fieldmap\n * @param {Array} facetsAndProjections contains the set of facets and projections for the matrices\n * @param {Function} valueCellCreator Callback executed after datamodels are prepared after sel/proj\n * @return {Object} set of matrices with the corresponding row and column keys\n */\nexport const getMatrixModel = (dataModel, facetsAndProjections, valueCellCreator) => {\n    let rowDataModels = [];\n    const rowKeys = [];\n    const columnKeys = [];\n    const allColumnProjections = [];\n    const matrix = [];\n    const facetInfo = [];\n\n    const fieldInfo = Object.assign({}, facetsAndProjections);\n    const {\n        rowFacets,\n        colFacets,\n        colProjections\n    } = fieldInfo;\n\n    colProjections.forEach((colProj) => {\n        allColumnProjections.push(...colProj);\n    });\n    fieldInfo.allColumnProjections = allColumnProjections;\n\n    // Performing row selection and projection\n    if (rowFacets.length > 0) {\n        // Get unique values for the root level of facet\n        const field = rowFacets[0].toString();\n        const firstLevelRowKeys = retriveDomainFromData(dataModel, field);\n\n        sortFacetFields(rowFacets[0], firstLevelRowKeys);\n\n        // Get unique keys in the form of an array of arrays for each row\n        uniqueKeyGenerator(rowKeys, { facets: rowFacets, dataModel, uniqueValues: firstLevelRowKeys });\n\n        // Apply selection -> projection -> row datamodels\n        rowKeys.forEach((val) => {\n            // Create faceted datamodel\n            const [rowFacetFieldNames] = getFieldNames(rowFacets);\n            const selectedDataModel = createSelectedDataModel(dataModel, rowFacetFieldNames, val);\n\n            // Project the datamodel based on the number of projections (based on last levels)\n            const newProjectedDataModels = projectRows(selectedDataModel, fieldInfo);\n            rowDataModels.push(...newProjectedDataModels);\n\n            newProjectedDataModels.forEach(() => {\n                facetInfo.push([rowFacets, val]);\n            });\n        });\n    } else {\n        // No row facets, hence only row projection\n        rowDataModels.push(...projectRows(dataModel, fieldInfo));\n    }\n\n    // Maintaining set of row datamodels for column resolution\n    rowDataModels = rowDataModels.length > 0 ? rowDataModels : [[]];\n\n    // Performing column selection and projection\n    if (colFacets.length > 0) {\n        const colFacetNames = colFacets.map(d => `${d}`);\n        // Get unique values for the root level of facet\n        const field = colFacetNames[0];\n        const firstLevelColumnKeys = retriveDomainFromData(dataModel, field);\n\n        sortFacetFields(colFacets[0], firstLevelColumnKeys);\n\n        // Get unique keys to create faceted datamodels: this time for columns\n        uniqueKeyGenerator(columnKeys, {\n            facets: colFacetNames,\n            dataModel,\n            uniqueValues: firstLevelColumnKeys\n        });\n        // For each row in the datamodel, apply selection -> projection -> push the projection to matri\n        rowDataModels.forEach((dme, rIndex) => {\n            facetInfo[rIndex] = facetInfo[rIndex] || [[], []];\n            columnKeys.forEach((val, cIndex) => {\n                matrix[rIndex] = matrix[rIndex] || [];\n\n                // If datamodel is not present in current row, choose parent datamodel\n                const datamodel = dme instanceof DataModel ? dme : dataModel;\n\n                // Selection is made on the datamodel for the current row\n                const selectedDataModel = createSelectedDataModel(datamodel, colFacetNames, val);\n                const context = {\n                    matrix,\n                    datamodel: selectedDataModel,\n                    facetInfo: {\n                        rowFacets: facetInfo[rIndex],\n                        colFacets: [colFacets, val],\n                        rowIndex: rIndex,\n                        columnIndex: cIndex\n                    },\n                    fieldInfo\n                };\n                pushToMatrix(context, valueCellCreator);\n            });\n        });\n    } else {\n        // No column facets, hence only row projection\n        rowDataModels.forEach((dme, rIndex) => {\n            facetInfo[rIndex] = facetInfo[rIndex] || [[], []];\n            const context = {\n                matrix,\n                datamodel: dme || dataModel,\n                facetInfo: {\n                    rowFacets: facetInfo[rIndex],\n                    colFacets: [[], []],\n                    rowIndex: rIndex,\n                    columnIndex: 0\n                },\n                fieldInfo\n            };\n\n            pushToMatrix(context, valueCellCreator);\n        });\n    }\n\n    formatKeys(columnKeys, colFacets.map(facetField => facetField.rawFormat()));\n    formatKeys(rowKeys, rowFacets.map(facetField => facetField.rawFormat()));\n\n    // Getting column keys\n    const transposedColKeys = columnKeys.length > 0 ? columnKeys[0].map((col, i) =>\n                    columnKeys.map(row => row[i])) : columnKeys;\n\n    return { matrix, rowKeys, columnKeys: transposedColKeys };\n};\n","import { AxisOrientation } from '@chartshq/muze-axis';\nimport {\n    getObjProp,\n    FieldType,\n    STATE_NAMESPACES,\n    retrieveNearestGroupByReducers,\n    mergeRecursive,\n    createSelection\n} from 'muze-utils';\nimport { getMatrixModel } from './matrix-model';\nimport {\n    getCellKey,\n    isDistributionEqual,\n    mutateAxesFromMap,\n    getFieldsFromSuppliedLayers,\n    extractFields\n} from './group-utils';\nimport { ROW, ROWS, COLUMNS, COL, LEFT, RIGHT, TOP,\n    BOTTOM, PRIMARY, SECONDARY, X, Y, TEMPORAL } from '../enums/constants';\nimport { SimpleVariable } from '../variable';\n\n/**\n * Updates row and column cells with the geom cell corresponding to the facet keys\n *\n * @param {*} resolver\n * @param {*} facets\n */\nconst updateCells = (resolver, facets, geomCell) => {\n    [ROW, COL].forEach((field) => {\n        const cells = resolver[`${field}Cells`]();\n        const facetKey = facets[`${field}Facets`][1].join();\n\n        !cells[facetKey] && (cells[facetKey] = []);\n        cells[facetKey].push(geomCell);\n        resolver[`${field}Cells`](cells);\n    });\n};\n\n/**\n *\n *\n * @param {*} context\n * @param {*} datamodel\n * @param {*} fieldInfo\n * @param {*} facets\n *\n */\nexport const createValueCells = (context, datamodel, fieldInfo, facets) => {\n    const {\n        projections,\n        indices\n    } = fieldInfo;\n    const {\n        rowFields,\n        columnFields\n    } = projections;\n    const {\n         rowIndex,\n         columnIndex\n    } = indices;\n    const {\n        suppliedLayers,\n        cell: GeomCell,\n        resolver,\n        config,\n        encoder,\n        detailFields\n    } = context;\n    const axes = resolver.axes();\n    const cacheMaps = resolver.cacheMaps();\n    const matrixLayers = resolver.matrixLayers();\n    const labelManager = resolver.dependencies().smartlabel;\n    const horizontalAxis = resolver.horizontalAxis();\n    const verticalAxis = resolver.verticalAxis();\n    const datamodelTransform = resolver.datamodelTransform();\n    const {\n        entryCellMap,\n        exitCellMap\n    } = cacheMaps;\n    const layerConfigArr = encoder.getLayerConfig({ columnFields, rowFields }, suppliedLayers || [],\n        context.retinalConfig);\n    const axesCreators = { config, labelManager, axes, cacheMaps };\n\n    fieldInfo.normalizedColumns = verticalAxis.fields;\n    fieldInfo.normalizedRows = horizontalAxis.fields;\n\n    const allFacets = [\n        [...facets.rowFacets[0], ...facets.colFacets[0]],\n        [...facets.rowFacets[1], ...facets.colFacets[1]]\n    ];\n    const facetFields = allFacets.slice();\n    facetFields[0] = facetFields[0].map(facetField => facetField.oneVar());\n\n    matrixLayers[rowIndex] = matrixLayers[rowIndex] ? matrixLayers[rowIndex] : [];\n    matrixLayers[rowIndex][columnIndex] = layerConfigArr;\n\n    // return from map if already there otherwise create and put in map\n    const geomCellKey = getCellKey(rowIndex, columnIndex);\n    const fields = {\n        y: rowFields,\n        x: columnFields\n    };\n\n    const geomCell = !exitCellMap.has(geomCellKey) ? new GeomCell() : exitCellMap.get(geomCellKey);\n\n    geomCell.data(datamodel)\n                    .fields(fields)\n                    .transform(datamodelTransform)\n                    .detailFields(detailFields)\n                    .facetByFields(allFacets);\n\n    encoder.createAxis(axesCreators, fieldInfo, Object.assign({}, context, { geomCell, facetFields }));\n    entryCellMap.set(geomCellKey, geomCell);\n    exitCellMap.delete(geomCellKey);\n\n    updateCells(resolver, facets, geomCell);\n\n    return entryCellMap.get(geomCellKey);\n};\n\n/**\n * Creates axis cells based on the set of axes\n *\n * @param {Selection} selection Contains a selection of the axis units\n * @param {Array} axes Actual axis units\n * @param {number} axisIndex 0-> primary axis, 1-> secondary axis(when dual axis is made)\n * @param {Object} cells Contains a collection of the cells\n * @return {Object} return either set of axis/blank cells depending on the config\n */\n\nconst createAxisCells = (selection, axes, axisIndex, cells) =>\n    createSelection(selection, axis => axis, axes, (item, i) => i + item.reduce((e, n) => {\n        const id = n.id + axisIndex;\n        return e + id;\n    }, '')).map((currObj, axis) => {\n        if (axis && axis[axisIndex]) {\n            const axisInst = axis[axisIndex];\n            const { orientation, show } = axisInst.config();\n\n            return new cells.AxisCell().source(axisInst).config({\n                isOffset: orientation === AxisOrientation.LEFT || orientation === AxisOrientation.TOP,\n                show\n            });\n        }\n        return new cells.BlankCell().config({ show: false });\n    });\n\n/**\n *\n *\n * @param {*} context\n * @param {*} selectionObj\n * @param {*} cells\n * @retur\n */\nconst axisPlaceholderGn = (context, selObj, cells) => {\n    const {\n        matrices\n    } = context;\n    const {\n        axesMatrix\n    } = matrices;\n\n    return (type, axisFrom) => {\n        const axes = axesMatrix[`${type}`];\n\n        if (axes && axes.length) {\n            if (type === X || type === Y) {\n                const fieldNames = type === Y ? ROWS : COLUMNS;\n\n                [PRIMARY, SECONDARY].forEach((fieldType, index) => {\n                    const selObjProp = `${fieldNames}${fieldType}`;\n                    let axisIndex = index;\n                    let axesForDraw = axes;\n                    if (axisFrom === RIGHT || axisFrom === BOTTOM) {\n                        axisIndex = 1 - axisIndex;\n                    }\n                    if (!getObjProp(axes, 0, axisIndex)) {\n                        axesForDraw = [];\n                    }\n                    selObj[selObjProp] = createAxisCells(selObj[selObjProp], axesForDraw, axisIndex, cells);\n                });\n            } else {\n                selObj.rowsPrimary = createAxisCells(selObj.rowPrime, axes.map(() => []), 0, cells);\n                selObj.rowsSecondary = createAxisCells(selObj.rowSec, axes.map(() => []), 0, cells);\n                selObj.columnsPrimary = createAxisCells(selObj.colPrime, axes[0], 0, cells);\n                selObj.columnsSecondary = createAxisCells(selObj.colSec, axes[0], 0, cells);\n            }\n        }\n        return selObj;\n    };\n};\n\n/**\n * Creates header cells based on the set of headers\n *\n * @param {Object} selection Contains a selection of the header units\n * @param {string} headers Contains a list of the headers\n * @param {Object} cells Contains a collection of the cells\n * @param {Object} labelManager smart label instance\n * @return {Object} return either set of header cells depending on the config\n */\nconst createTextCells = (selection, headers, cells, labelManager) => createSelection(selection,\n    (label) => {\n        const textCell = new cells.TextCell({}, { labelManager });\n        textCell.source(label);\n        return textCell;\n    }, headers, (key, i) => key + i);\n\n/**\n *\n *\n * @param {*} context\n * @param {*} selectionObj\n * @param {*} cells\n * @param {*} labelManager\n *\n */\nconst headerPlaceholderGn = (context, selectionObj, cells, labelManager) => {\n    const {\n        axis,\n        keys,\n        type,\n        facet\n    } = context;\n    const counter = axis.length / keys.length;\n    const selectionKeys = keys.length ? axis.map((d, i) => keys[Math.floor(i / counter)]) : [];\n\n    const selObjUpdater = createSelection(selectionObj[`${type}Headers`], keySet => keySet, selectionKeys,\n    (keySet, i) => `${keySet.join(',')}-${i}`);\n\n    return selObjUpdater.map((keySet, data) => {\n        let textCells = createTextCells(null, data, cells, labelManager);\n        textCells = textCells.map((cell, k) => cell.source(k).config(facet));\n        return textCells;\n    });\n};\n\n/**\n * Creates a set of placeholders as a part of selection object\n *\n * @param {Array} normalizedOptions contains normalized rows and columns\n * @param {Array} matrices contains axis and value matrices\n * @param {aArrayny} projections contains set of row and column projections\n * @param {Object} cells Contains a collection of the cells\n * @param {Object} labelManager smart label instance\n * @return {Object} Creates a set of placeholders as a part of selections\n */\nconst generatePlaceholders = (context, cells, labelManager) => {\n    let selectionObj;\n    const {\n        matrices,\n        fields,\n        facetsAndProjections,\n        selection,\n        facet,\n        encoders,\n        resolver\n    } = context;\n    const {\n        rows,\n        columns\n    } = fields;\n    const {\n        valuesMatrix\n    } = matrices;\n    const {\n        rowProjections,\n        colProjections\n    } = facetsAndProjections;\n    const {\n        rowKeys,\n        columnKeys\n    } = valuesMatrix;\n    const takeAxisFrom = encoders.simpleEncoder._axisFrom;\n    const takeHeaderFrom = encoders.simpleEncoder._headerFrom;\n\n    selectionObj = selection || {};\n\n    ['pie', X, Y].forEach((axis) => {\n        const axisFrom = axis === X ? takeAxisFrom.column : takeAxisFrom.row;\n        selectionObj = axisPlaceholderGn(context, selectionObj, cells)(axis, axisFrom);\n    });\n\n    const {\n        rowsPrimary,\n        rowsSecondary,\n        columnsPrimary,\n        columnsSecondary\n    } = selectionObj;\n\n    const rowAxis = rowsPrimary && rowsPrimary.getObjects().length ? rowsPrimary.getObjects() :\n        (rowsSecondary && rowsSecondary.getObjects().length ? rowsSecondary.getObjects() : []);\n    const colAxis = columnsPrimary && columnsPrimary.getObjects().length ? columnsPrimary.getObjects() :\n        (columnsSecondary && columnsSecondary.getObjects().length ? columnsSecondary.getObjects() : []);\n\n    const headerConfig = [\n        { type: LEFT, section: rows[0], axis: rowAxis, headerFrom: takeHeaderFrom.row },\n        { type: RIGHT, section: rows[1], axis: rowAxis, headerFrom: takeHeaderFrom.row },\n        { type: TOP, section: columns[0], axis: colAxis, headerFrom: takeHeaderFrom.column },\n        { type: BOTTOM, section: columns[1], axis: colAxis, headerFrom: takeHeaderFrom.column }\n    ];\n\n    headerConfig.forEach((config, index) => {\n        let keys;\n        let length;\n        const {\n            type,\n            section,\n            axis,\n            headerFrom\n        } = config;\n\n        if (index < 2) {\n            keys = rowKeys;\n            length = rowProjections.length > 0 ? rowProjections.length : 1;\n        } else {\n            keys = columnKeys;\n            length = colProjections.length > 0 ? colProjections.length : 1;\n        }\n        keys = keys.map(arr => arr.map(val => resolver.valueParser()(val)));\n        if (section.length && headerFrom === type && axis && keys.length) {\n            const hContext = { axis, length, type };\n            let headers = [];\n            if (index < 2) {\n                hContext.keys = keys;\n                hContext.facet = facet.rows;\n                headers = headerPlaceholderGn(hContext, selectionObj, cells, labelManager);\n            } else {\n                hContext.facet = facet.columns;\n                hContext.keys = keys[0].map((key, i) => keys.map(e => e[i]));\n\n                headers = headerPlaceholderGn(hContext, selectionObj, cells, labelManager);\n            }\n            selectionObj[`${type}Headers`] = headers;\n        } else {\n            selectionObj[`${type}Headers`] = null;\n        }\n    });\n    return selectionObj;\n};\n\n/**\n * Generates matrices\n *\n * @param {Object} config Configuration to generate matrices\n * @param {Array} matrices Matrices containing the set of visual units and axes units\n * @param {Object} cells Contains a collection of the cells\n * @param {Object} labelManager smart label instance\n * @return {Object} contains a collection of matrices\n */\nexport const generateMatrices = (context, matrices, cells, labelManager) => {\n    const {\n        unitHeight,\n        unitWidth,\n        facetsAndProjections,\n        normalizedRows,\n        normalizedColumns,\n        selection,\n        axisFrom,\n        facet,\n        encoders,\n        resolver\n     } = context;\n    const placeholderContext = {\n        fields: {\n            rows: normalizedRows,\n            columns: normalizedColumns\n        },\n        matrices,\n        facetsAndProjections,\n        selection,\n        axisFrom,\n        facet,\n        encoders,\n        resolver\n    };\n    // Generate placeholders for all matrices\n    const selectionObj = generatePlaceholders(placeholderContext, cells, labelManager);\n    const {\n        columnsPrimary,\n        columnsSecondary,\n        rowsPrimary,\n        rowsSecondary,\n        leftHeaders,\n        topHeaders,\n        bottomHeaders,\n        rightHeaders\n    } = selectionObj;\n    const [rowPrime, rowSec, colPrime, colSec] = [rowsPrimary, rowsSecondary, columnsPrimary, columnsSecondary]\n        .map(d => (d ? d.getObjects() : []));\n    const [leftFacets, rightFacets] = [leftHeaders, rightHeaders]\n        .map(e => (e ? e.getObjects()\n                        .map(f => f.getObjects()) : []));\n    let rowPriority = rowSec.length ? 1 : -1;\n    rowPrime.length && rowPriority++;\n    let colPriority = colSec.length ? 1 : -1;\n    colPrime.length && colPriority++;\n\n    // Compute left matrix using left headers and the axes on the rows\n    let leftMatrix = leftFacets.length ? leftFacets.map((d, i) => {\n        rowPrime[i] = rowPrime[i] ? [rowPrime[i]] : [];\n        return [...d, ...rowPrime[i]];\n    }) : (rowPrime ? rowPrime.map(d => [d]) : []);\n\n    // Compute right matrix using right headers and the axes on the rows\n    const rightMatrix = rowSec.length ? rowSec.map((d, i) => [d, ...(rightFacets[i] || [])]) : (rightFacets.length ?\n        rightFacets.map(d => [...d]) : []);\n\n    const topMatrix = [];\n    if (topHeaders) {\n        const headers = topHeaders.getObjects();\n        headers.forEach((e) => {\n            const innerHeaders = e.getObjects();\n            innerHeaders.forEach((x, i) => {\n                topMatrix[i] = topMatrix[i] || [];\n                topMatrix[i].push(x);\n            });\n        });\n    }\n    // Compute top matrix using the top headers and axes on the columns\n    if (colPrime.length) {\n        topMatrix.push(colPrime);\n    }\n\n    // Bottom and right matrices are prepared using the user config.\n    let bottomMatrix = [];\n    if (colSec.length) {\n        bottomMatrix.push(colSec);\n    }\n    const currentBottomLength = bottomMatrix.length;\n    if (bottomHeaders) {\n        const headers = bottomHeaders.getObjects();\n        headers.forEach((e) => {\n            const innerHeaders = e.getObjects();\n            innerHeaders.forEach((x, i) => {\n                bottomMatrix[i + currentBottomLength] = bottomMatrix[i + currentBottomLength] || [];\n                bottomMatrix[i + currentBottomLength].push(x);\n            });\n        });\n    }\n\n    if (!leftMatrix.length && !rightMatrix.length) {\n        const cell = new cells.BlankCell();\n        cell.setAvailableSpace(unitWidth, unitHeight);\n        leftMatrix = [[cell]];\n    }\n\n    if (!topMatrix.length && (!bottomMatrix.length || !bottomMatrix[0].length)) {\n        const cell = new cells.BlankCell();\n        cell.setAvailableSpace(unitWidth, unitHeight);\n        bottomMatrix = [[cell]];\n    }\n\n    return {\n        rows: [leftMatrix, rightMatrix],\n        columns: [topMatrix, bottomMatrix],\n        selectionObj,\n        colPriority,\n        rowPriority\n    };\n};\nconst getAxisFields = (projections, fieldHolder = []) =>\n                            projections.reduce((acc, item) =>\n                                [...acc, ...item.reduce((ac, field) =>\n                                   (field instanceof SimpleVariable ? [...ac, field.oneVar()] : ac), [])], fieldHolder);\n\nconst sortDmTemporalFields = (resolver, datamodel) => {\n    let axisFields = [];\n    const projections = resolver.projections();\n    axisFields = getAxisFields(projections.rowProjections, getAxisFields(projections.colProjections));\n\n    const fieldConfig = datamodel.getFieldsConfig();\n    const temporalFields = axisFields.reduce((acc, field) =>\n                                    ((fieldConfig[field].def.subtype === TEMPORAL) ? [...acc, [field]] : acc), []);\n    return temporalFields.length ? datamodel.sort(temporalFields, { saveChild: true }) : datamodel;\n};\n\n/**\n * Computes matrices for a group\n *\n * @param {Object} datamodel on which the matrices are to be computed\n * @param {Object} config configuration of the matrices\n * @param {Object} layerRegistry contains the registered layers\n * @return {Object} conputed matrices\n * @memberof MatrixResolver\n */\nexport const computeMatrices = (context, config) => {\n    const {\n        resolver,\n        datamodel,\n        componentRegistry,\n        encoders\n    } = context;\n    const {\n            globalConfig,\n            selection,\n            transform\n        } = config;\n    const groupBy = globalConfig.autoGroupBy;\n    const { smartlabel: labelManager } = resolver.dependencies();\n    const fieldMap = datamodel.getFieldsConfig();\n    const layerConfig = resolver.layerConfig();\n    const registry = resolver.registry();\n    const { fields: normalizedRows } = resolver.horizontalAxis();\n    const { fields: normalizedColumns } = resolver.verticalAxis();\n    const otherEncodings = resolver.optionalProjections(config, layerConfig);\n    const facetsAndProjections = resolver.getAllFields();\n    const matrixGnContext = {\n        // Configuration to be passed to generate the  different matrices.\n        // A common config is used for both value matrices and other matrices\n        normalizedColumns,\n        normalizedRows,\n        facetsAndProjections,\n        layers: layerConfig,\n        fieldMap,\n        otherEncodings,\n        encoders,\n        facet: globalConfig.facet || {},\n        axisFrom: globalConfig.axisFrom || {},\n        selection,\n        resolver\n    };\n    const cells = {\n        GeomCell: resolver.getCellDef(registry.GeomCell),\n        AxisCell: resolver.getCellDef(registry.AxisCell),\n        BlankCell: resolver.getCellDef(registry.BlankCell),\n        TextCell: resolver.getCellDef(registry.TextCell)\n    };\n    const isRowSizeEqual = isDistributionEqual(normalizedRows);\n    const isColumnSizeEqual = isDistributionEqual(normalizedColumns);\n\n    resolver.colCells({});\n    resolver.rowCells({});\n    resolver.datamodelTransform(transform || {});\n\n    // Cell creation begins here\n    resolver.resetSimpleAxes();\n\n    const {\n        entryCellMap\n    } = resolver.cacheMaps();\n    const newCacheMap = {\n        exitCellMap: entryCellMap,\n        entryCellMap: new Map()\n    };\n\n    resolver.cacheMaps(newCacheMap);\n\n    const valueCellContext = {\n        config: globalConfig,\n        suppliedLayers: encoders.simpleEncoder.serializeLayerConfig(resolver.layerConfig()),\n        resolver,\n        cell: cells.GeomCell,\n        encoder: encoders.simpleEncoder,\n        newCacheMap,\n        detailFields: config.detail,\n        retinalConfig: {\n            color: config.color,\n            size: config.size,\n            shape: config.shape\n        }\n    };\n    const fieldsConfig = datamodel.getFieldsConfig();\n    let groupedModel = datamodel;\n    if (!groupBy.disabled) {\n        const fields = getFieldsFromSuppliedLayers(valueCellContext.suppliedLayers, datamodel.getFieldsConfig());\n        const allFields = extractFields(facetsAndProjections, fields);\n\n        const dimensions = allFields.filter(field =>\n            fieldsConfig[field] && fieldsConfig[field].def.type === FieldType.DIMENSION);\n        const aggregationFns = groupBy.measures;\n        const measureNames = Object.keys(datamodel.getFieldspace().getMeasure());\n        const nearestAggFns = retrieveNearestGroupByReducers(datamodel, ...measureNames);\n        const resolvedAggFns = mergeRecursive(nearestAggFns, aggregationFns);\n        groupedModel = datamodel.groupBy(dimensions.length ? dimensions : [''], resolvedAggFns).project(allFields);\n    }\n\n    // sort temporal fields if any in the given rows and columns\n    groupedModel = sortDmTemporalFields(resolver, groupedModel);\n    // return a callback function to create the cells from the matrix\n    const cellCreator = resolver.valueCellsCreator(valueCellContext);\n    // Creates value matrices from the datamodel and configs\n    const valueMatrixInfo = getMatrixModel(groupedModel, facetsAndProjections, cellCreator);\n\n    resolver.cacheMaps().exitCellMap.forEach((placeholder) => {\n        placeholder.remove();\n    });\n    resolver.cacheMaps().exitCellMap.clear();\n    resolver.valueMatrix(valueMatrixInfo.matrix);\n\n    const { xAxes, yAxes } = mutateAxesFromMap(resolver.cacheMaps(), resolver.axes());\n\n    resolver.axes({\n        x: xAxes,\n        y: yAxes\n    });\n    const store = resolver.store();\n\n    [xAxes, yAxes].forEach((axesArr, type) => {\n        const stateProps = {};\n        axesArr = axesArr || [];\n        axesArr.forEach((axes, idx) => {\n            axes.forEach((axis, axisIndex) => {\n                stateProps[`${idx}${axisIndex}`] = null;\n            });\n        });\n        store.append(`${STATE_NAMESPACES.GROUP_GLOBAL_NAMESPACE}.domain.${type ? 'y' : 'x'}`, stateProps);\n    });\n    resolver.createUnits(componentRegistry, config);\n\n    const matrices = {\n        valuesMatrix: valueMatrixInfo,\n        axesMatrix: resolver.axes()\n    };\n    // Create all matrices\n    const {\n        rows,\n        columns,\n        selectionObj,\n        rowPriority,\n        colPriority\n    } = generateMatrices(matrixGnContext, matrices, cells, labelManager);\n\n    resolver.rowMatrix(rows);\n    resolver.columnMatrix(columns);\n\n    return {\n        rows: resolver.rowMatrix(),\n        columns: resolver.columnMatrix(),\n        values: resolver.valueMatrix(),\n        isColumnSizeEqual,\n        isRowSizeEqual,\n        priority: {\n            row: rowPriority,\n            col: colPriority\n        },\n        selection: selectionObj,\n        dataModels: {\n            groupedModel,\n            parentModel: datamodel\n        }\n    };\n};\n","export const RESOLVER_PROPS = {\n    dependencies: {},\n    units: {},\n    datamodelTransform: {},\n    layerConfig: {},\n    matrixLayers: {},\n    colCells: {},\n    rowCells: {},\n    rowMatrix: {},\n    columnMatrix: {},\n    valueMatrix: {},\n    encoder: {},\n    valueParser: {}\n};\n","import { VisualUnit } from '@chartshq/visual-unit';\nimport { generateGetterSetters, STATE_NAMESPACES } from 'muze-utils';\nimport {\n     initializeCacheMaps,\n     headerCreator,\n     extractUnitConfig,\n     setFacetsAndProjections\n} from './group-utils';\nimport {\n     ROW, COL, LEFT, RIGHT, COLOR, SIZE, SHAPE, DETAIL, CELL, X_AXES, Y_AXES, ENTRY_CELLS, EXIT_CELLS, INITIALIZED,\n     AXIS, UNIT, BEFORE_UPDATE, UPDATED, VALUE_MATRIX, FACET_HEADERS\n} from '../enums/constants';\nimport { createValueCells, computeMatrices } from './cell-creator';\nimport { RESOLVER_PROPS } from './resolver-props';\n\n/**\n * Resolves the matrices from configuration provided\n *\n * @export\n * @class MatrixResolver\n */\nexport default class MatrixResolver {\n\n    /**\n     * Creates an instance of MatrixResolver.\n     * @param {Object} dependencies needed to run the resolver\n     * @memberof MatrixResolver\n     */\n    constructor (dependencies) {\n        this._registry = {};\n        this._layerConfig = [];\n        this._matrixLayers = [];\n        this._dependencies = dependencies;\n        this._rowMatrix = [];\n        this._columnMatrix = [];\n        this._valueMatrix = [];\n        this._facets = { rowFacets: [], colFacets: [] };\n        this._projections = { rowProjections: [], colProjections: [] };\n        this._datamodelTransform = {};\n        this._units = [];\n        this._cacheMaps = {};\n        this._axes = {\n            x: {},\n            y: {},\n            color: [],\n            size: [],\n            shape: [],\n            radius: [],\n            angle: [],\n            angle0: []\n        };\n        generateGetterSetters(this, RESOLVER_PROPS);\n        this.cacheMaps(initializeCacheMaps());\n    }\n\n    /**\n     * Set:  Registers placeholders, Get: return {Object} those placeholders\n     *\n     * @param {Object} placeholders cells that will construct the group\n     * @return {Object} Either current instance or the set of placeholders\n     * @memberof MatrixResolver\n     */\n    registry (...placeholders) {\n        if (placeholders.length) {\n            Object.entries(placeholders[0]).forEach((val) => {\n                this._registry[val[0]] = val[1];\n            });\n            return this;\n        }\n        return this._registry;\n    }\n\n    /**\n     * Used to set the layer config from outside or get current layer info\n     *\n     * @param {Object} type configuration of layer provided externally\n     * @return {Object} either the layer or current instance\n     * @memberof MatrixResolver\n     */\n    cacheMaps (...maps) {\n        if (maps.length) {\n            [CELL, X_AXES, Y_AXES, ENTRY_CELLS, EXIT_CELLS].forEach((e) => {\n                this._cacheMaps[`${e}Map`] = maps[0][`${e}Map`] || this._cacheMaps[`${e}Map`];\n            });\n            return this;\n        }\n        return this._cacheMaps;\n    }\n\n    /**\n     * Used to set the layer config from outside or get current layer info\n     *\n     * @param {Object} type configuration of layer provided externally\n     * @return {Object} either the layer or current instance\n     * @memberof MatrixResolver\n     */\n    axes (...axes) {\n        if (axes.length) {\n            this._axes = Object.assign({}, this._axes, axes[0]);\n            return this;\n        }\n        return this._axes;\n    }\n\n    /**\n     *\n     *\n     * @param {*} facets\n     *\n     * @memberof MatrixResolver\n     */\n    facets (...facets) {\n        if (facets.length) {\n            Object.entries(facets[0]).forEach((e) => {\n                this._facets[e[0]] = e[1];\n            });\n            return this;\n        }\n        return this._facets;\n    }\n\n    /**\n     *\n     *\n     * @param {*} projections\n     *\n     * @memberof MatrixResolver\n     */\n    projections (...projections) {\n        if (projections.length) {\n            Object.entries(projections[0]).forEach((e) => {\n                this._projections[e[0]] = e[1];\n            });\n            return this;\n        }\n        return this._projections;\n    }\n\n    /**\n     *\n     *\n     * @param {*} config\n     * @param {*} layerConfig\n     *\n     * @memberof MatrixResolver\n     */\n    optionalProjections (config, layerConfig) {\n        const otherEncodings = {};\n        const optionalProjections = [];\n        const otherEncodingTypes = [SIZE, COLOR, SHAPE];\n\n        otherEncodingTypes.forEach((type) => {\n            if (config[type] && config[type].field) {\n                const enc = config[type];\n                otherEncodings[type] = enc.field;\n                optionalProjections.push(enc.field);\n            }\n        });\n\n        if (config[DETAIL]) {\n            optionalProjections.push(...config.detail);\n        }\n\n        if (layerConfig.length) {\n            layerConfig.forEach((layer) => {\n                if (layer.encoding) {\n                    Object.values(layer.encoding).forEach((enc) => {\n                        if (enc && optionalProjections.indexOf(enc.field) === -1) {\n                            optionalProjections.push(enc.field ? enc.field : enc);\n                        }\n                    });\n                }\n            });\n        }\n        this.projections({ optionalProjections });\n        return otherEncodings;\n    }\n\n    /**\n     * return the normalized set of rows and facets and projections\n     *\n     * @param {Object} rows parameters needed to set horizontal axis consisiting of rows\n     * @return {Object} facets, projections and normalized rows\n     * @memberof MatrixResolver\n     */\n    horizontalAxis (rows, encoder) {\n        if (rows) {\n            this._horizontalAxis = setFacetsAndProjections(this, { type: ROW, fields: rows }, encoder);\n            return this;\n        }\n        return this._horizontalAxis;\n    }\n\n    /**\n     * return the normalized set of columns and facets and projections\n     *\n     * @param {Object} columns parameters needed to set vertical axis consisiting of columns\n     * @return {Object} facets, projections and normalized columns\n     * @memberof MatrixResolver\n     */\n    verticalAxis (columns, encoder) {\n        if (columns) {\n            this._verticalAxis = setFacetsAndProjections(this, { type: COL, fields: columns }, encoder);\n            return this;\n        }\n        return this._verticalAxis;\n    }\n\n    /**\n     * Gets the class definition of a particular cell type(if the particular type has been extended, that particular\n     * definition is returned)\n     *\n     * @param {Object} cell cell whose class definition is to be retrieved\n     * @return {Object} cell definition\n     * @memberof MatrixResolver\n     */\n    getCellDef (cell) {\n        const registry = this.registry();\n\n        Object.values(registry).forEach((e) => {\n            if (e.prototype instanceof cell) {\n                cell = e;\n            }\n        });\n        return cell;\n    }\n\n    /**\n     * return a visual cell creator along with its axis information to be injected to the datamodel creation\n     * function\n     *\n     * @param {Object} GeomCell Type of cell to be created\n     * @return {Object} Created cell\n     * @memberof MatrixResolver\n     */\n    valueCellsCreator (context) {\n        // reset matrix layers\n        this.matrixLayers([]);\n\n        return (datamodel, fieldInfo, facets) => createValueCells(context, datamodel, fieldInfo, facets);\n    }\n\n    /**\n     * Callback to be applied on each cell of a matrix of a particular type\n     *\n     * @param {string} matrixType type of matrix on which callback is to be applied\n     * @param {Function} callback function to be applied to each cell\n     * @memberof MatrixResolver\n     */\n    forEach (matrixType, callback) {\n        this[matrixType]().forEach((row, rIndex) => {\n            row.forEach((col, cIndex) => {\n                callback(rIndex, cIndex, col);\n            });\n        });\n    }\n\n    /**\n     *\n     *\n     *\n     * @memberof MatrixResolver\n     */\n    getAllFields () {\n        const retObj = this.projections();\n\n        Object.entries(this.facets()).forEach((e) => {\n            retObj[e[0]] = e[1];\n        });\n        return retObj;\n    }\n\n    /**\n     *\n     *\n     * @memberof MatrixResolver\n     */\n    resetSimpleAxes () {\n        return this.axes({\n            x: new Set(),\n            y: new Set()\n        });\n    }\n\n    /**\n     *\n     *\n     * @param {*} componentRegistry\n     * @param {*} config\n     * @memberof MatrixResolver\n     */\n    createUnits (componentRegistry, config) {\n        const {\n            globalConfig,\n            alias,\n            coord\n        } = config;\n        const {\n            layerRegistry,\n            sideEffectRegistry\n        } = componentRegistry;\n        const {\n            smartlabel: smartLabel,\n            lifeCycleManager\n        } = this.dependencies();\n        // Provide the source for the matrix\n        const units = [[]];\n        // Setting unit configuration\n        const unitConfig = extractUnitConfig(globalConfig || {});\n        const globalState = VisualUnit.getState()[0];\n        const globalStates = {};\n        const store = this.store();\n        this.forEach(VALUE_MATRIX, (i, j, el) => {\n            let unit = el.source();\n            if (!unit) {\n                const namespace = `${i}${j}`;\n\n                unit = VisualUnit.create({\n                    layerRegistry,\n                    sideEffectRegistry\n                }, {\n                    smartLabel,\n                    lifeCycleManager\n                });\n                globalStates[namespace] = null;\n                unit.metaInf({\n                    rowIndex: i,\n                    colIndex: j,\n                    namespace\n                });\n                unit.store(store);\n                unit.coord(coord);\n                el.source(unit);\n            }\n            !units[i] && (units[i] = []);\n            units[i][j] = unit;\n            unit.parentAlias(alias)\n                .valueParser(this.valueParser())\n                .coord(coord);\n            el.config(unitConfig);\n        });\n\n        for (const key in globalState) {\n            store.append(`${STATE_NAMESPACES.UNIT_GLOBAL_NAMESPACE}.${key}`, globalStates);\n        }\n\n        lifeCycleManager.notify({ client: units, action: INITIALIZED, formalName: UNIT });\n        return this.units(units);\n    }\n\n    /**\n     *\n     *\n     * @param {*} config\n     * @memberof MatrixResolver\n     */\n    setDomains (config, datamodel, encoders) {\n        const {\n            color,\n            shape,\n            size,\n            globalConfig\n        } = config;\n        const groupBy = globalConfig.autoGroupBy;\n        const {\n            rowFacets,\n            colFacets\n        } = this.getAllFields();\n        const encoding = {\n            color,\n            shape,\n            size\n        };\n        const facetFields = [...rowFacets.map(e => e.toString()), ...colFacets.map(e => e.toString())];\n        const retContext = {\n            domains: encoders.simpleEncoder.getRetinalFieldsDomain(datamodel, encoding, facetFields, groupBy),\n            axes: this.axes(),\n            encoding\n        };\n        encoders.retinalEncoder.setCommonDomain(retContext);\n        return this;\n    }\n\n    resetFacetsAndProjections () {\n        this._facets = {};\n        this._projections = {};\n        return this;\n    }\n\n    /**\n     *\n     *\n     *\n     * @memberof MatrixResolver\n     */\n    getRetinalAxes () {\n        const {\n            color,\n            shape,\n            size\n        } = this.axes();\n\n        return {\n            color: [...color],\n            shape: [...shape],\n            size: [...size]\n        };\n    }\n\n    /**\n     *\n     *\n     * @param {*} type\n     *\n     * @memberof MatrixResolver\n     */\n    getSimpleAxes (type) {\n        return this.axes()[`${type}`];\n    }\n\n    /**\n     *\n     *\n     * @param {*} datamodel\n     * @param {*} config\n     * @memberof MatrixResolver\n     */\n    createRetinalAxes (fieldsConfig, config, encoders) {\n        const layerConfig = this.layerConfig();\n        this.optionalProjections(config, layerConfig);\n        const retinalAxes = encoders.retinalEncoder.createAxis({\n            fieldsConfig,\n            config,\n            axes: this.axes()\n        });\n        const {\n            lifeCycleManager\n        } = this.dependencies();\n\n        [COLOR, SHAPE, SIZE].forEach((e) => {\n            this.axes()[e] = retinalAxes[e];\n        });\n\n        lifeCycleManager.notify({ client: this.axes(), action: INITIALIZED, formalName: AXIS });\n        lifeCycleManager.notify({ client: this.units(), action: BEFORE_UPDATE, formalName: UNIT });\n\n        const units = [];\n        const matrixLayers = this.matrixLayers();\n\n        this.forEach(VALUE_MATRIX, (i, j, el) => {\n            el.axes(Object.assign(el.axes(), retinalAxes));\n            el.source() && el.source().retinalFields(config);\n            el.layerDef(matrixLayers[i][j]);\n            el.updateModel();\n\n            units.push(el.source());\n        });\n\n        lifeCycleManager.notify({ client: units, action: UPDATED, formalName: UNIT });\n        return this;\n    }\n\n    /**\n     *\n     *\n     * @param {*} placeholders\n     * @param {*} fieldNames\n     *\n     * @memberof MatrixResolver\n     */\n    createHeaders (placeholders, fieldNames, config) {\n        let bottomLeft = [];\n        let bottomRight = [];\n        const {\n            rows,\n            columns\n        } = placeholders;\n        const {\n            smartlabel: labelManager,\n            lifeCycleManager\n        } = this.dependencies();\n        const {\n            showHeaders,\n            classPrefix\n        } = config;\n        const TextCell = this.getCellDef(this.registry().TextCell);\n        const BlankCell = this.getCellDef(this.registry().BlankCell);\n        const [leftRows, rightRows] = rows;\n        const [topCols, bottomCols] = columns;\n        const rowHeaders = fieldNames.rows;\n        const blankCellCreator = cell => new BlankCell().config({ show: cell.config().show });\n\n        // Headers and footers are created based on the rows. Thereafter, using the column information\n        // they are tabularized into the current structure\n        const headers = {\n            left: headerCreator(leftRows, rowHeaders[0], showHeaders ? TextCell : BlankCell,\n                { classPrefix, labelManager }),\n            right: headerCreator(rightRows, rowHeaders[1], showHeaders ? TextCell : BlankCell,\n                { classPrefix, labelManager })\n        };\n        const footers = {\n            left: leftRows.length > 0 ? leftRows[0].map(blankCellCreator) : [],\n            right: rightRows.length > 0 ? rightRows[0].map(blankCellCreator) : []\n        };\n        const [topLeft, topRight] = [LEFT, RIGHT].map(type => topCols.map((col, i) => {\n            if (i === topCols.length - 1) {\n                return headers[type];\n            }\n            return footers[type];\n        }));\n\n        // Creating only bottom matrices if there is no information on the top\n        if (topCols.length === 0) {\n            [bottomLeft, bottomRight] = [LEFT, RIGHT].map(type => bottomCols.map((col, i) => {\n                if (i === 0) {\n                    return headers[type];\n                }\n                return footers[type];\n            }));\n        } else {\n            bottomLeft = bottomCols.map(() => (leftRows.length > 0 ? leftRows[0].map(blankCellCreator) : []));\n            bottomRight = bottomCols.map(() => (rightRows.length > 0 ? rightRows[0].map(blankCellCreator) : []));\n        }\n\n        lifeCycleManager.notify({\n            client: [topLeft, topRight, bottomLeft, bottomRight],\n            action: INITIALIZED,\n            formalName: FACET_HEADERS\n        });\n\n        return { topLeft, topRight, bottomLeft, bottomRight };\n    }\n\n    /**\n     *\n     *\n     * @param {*} datamodel\n     * @param {*} config\n     * @param {*} componentRegistry\n     * @param {*} encoders\n     *\n     * @memberof MatrixResolver\n     */\n    getMatrices (datamodel, config, componentRegistry, encoders) {\n        const context = {\n            datamodel,\n            componentRegistry,\n            encoders,\n            resolver: this\n        };\n\n        return computeMatrices(context, config);\n    }\n\n    store (...params) {\n        if (params.length) {\n            this._store = params[0];\n            return this;\n        }\n        return this._store;\n    }\n}\n","/**\n * This is a wrapper class over the matrix of cells which gets created in visual group. Visual Group creates left,\n * right, bottom and top and center matrices and wraps them using this class.\n *\n * @public\n * @class ValueMatrix\n */\nclass ValueMatrix {\n\n    /**\n     * Creates an instance of ValueMatrix.\n     *\n     * @param {Array} matrixArr Matrix array.\n     */\n    constructor (matrixArr) {\n        const instancesById = {};\n\n        this.matrix(matrixArr || []);\n        this.filter(() => true);\n\n        this.each((el, rIdx, cIdx) => {\n            const cellValue = el.valueOf();\n            if (cellValue && cellValue.id) {\n                const id = cellValue.id();\n                instancesById[id] = {\n                    instance: cellValue,\n                    rowIndex: rIdx,\n                    colIndex: cIdx\n                };\n            }\n        });\n\n        this.instancesById(instancesById);\n    }\n\n    instancesById (...id) {\n        if (id.length) {\n            this._instancesById = id[0];\n            return this;\n        }\n        return this._instancesById;\n    }\n\n    /**\n     * Returns the array of matrices contained in this instance.\n     *\n     * @public\n     * @return {Array} Array of matrices.\n     */\n    matrix (...matrix) {\n        if (matrix.length) {\n            this._matrix = matrix[0];\n            return this;\n        }\n        return this._matrix;\n    }\n\n    /**\n     * Sets a filter criteria. This filter criteria gets applied when each function is called.\n     *\n     * @public\n     * @param {Function} fn Filter function.\n     *\n     * @return {ValueMatrix} Instance of value matrix.\n     */\n    filter (...fn) {\n        if (fn.length) {\n            this._filterFn = fn[0];\n            return this;\n        }\n        return this._filterFn;\n    }\n\n    /**\n     * Returns the total width occupied by all the cells of the matrix.\n     *\n     * @return {Number} Width of the matrix.\n     */\n    width () {\n        let rowWidth = 0;\n\n        this.matrix().forEach((row) => {\n            let currentRowWidth = 0;\n            row.forEach((cell) => {\n                currentRowWidth += cell.getLogicalSpace().width;\n            });\n            rowWidth = Math.max(rowWidth, currentRowWidth);\n        });\n        return rowWidth;\n    }\n\n    /**\n     * Returns the total width occupied by all the cells of the matrix.\n     *\n     * @return {Number} Width of the matrix.\n     */\n    height () {\n        let rowHeight = 0;\n\n        this.matrix().forEach((row) => {\n            let currentRowHeight = 0;\n            row.forEach((cell) => {\n                currentRowHeight = Math.max(currentRowHeight, cell.getLogicalSpace().height);\n            });\n            rowHeight += currentRowHeight;\n        });\n        return rowHeight;\n    }\n\n    /**\n     * Iterates through the two dimensional matrix array and calls the given callback function with the cell instance,\n     * row index, column index and the matrix array.\n     *\n     * @param {Function} fn Callback function which will get called for every cell.\n     * @return {ValueMatrix} Instance of the value matrix.\n     */\n    each (fn) {\n        const matrix = this.matrix();\n        const filterFn = this.filter();\n\n        matrix.forEach((row, rIndex) => {\n            row.forEach((col, cIndex) => {\n                if (filterFn(col)) {\n                    fn(col, rIndex, cIndex, matrix);\n                }\n            });\n        });\n        return this;\n    }\n\n    findPlaceHolderById (id) {\n        return this.instancesById()[id];\n    }\n}\n\nexport default ValueMatrix;\n","import { VisualUnit } from '@chartshq/visual-unit';\nimport { STATE_NAMESPACES, CommonProps } from 'muze-utils';\nimport { BaseLayer } from '@chartshq/visual-layer';\nimport { getEncoder, getBorders } from '../group-helper';\nimport { RetinalEncoder } from '../encoder';\nimport { registerDomainChangeListener, unsubscribeChangeListeners } from './change-listener';\nimport ValueMatrix from './value-matrix';\n\nexport const createUnitState = (context) => {\n    const [globalState] = VisualUnit.getState();\n    const store = context.store();\n    store.append(STATE_NAMESPACES.UNIT_GLOBAL_NAMESPACE, globalState);\n};\n\nexport const initializeGlobalState = (context) => {\n    const globalState = context.constructor.getState()[0];\n    const store = context.store();\n    store.append(STATE_NAMESPACES.GROUP_GLOBAL_NAMESPACE, globalState);\n};\n\nexport const createLayerState = (context) => {\n    const [globalState] = BaseLayer.getState();\n    context.store().append(STATE_NAMESPACES.LAYER_GLOBAL_NAMESPACE, globalState);\n};\n\nconst sanitizeRetinalConfig = (retinalConf) => {\n    const conf = {};\n    for (const key in retinalConf) {\n        const confValue = retinalConf[key];\n        if (typeof confValue === 'string' || !confValue) {\n            conf[key] = {\n                field: retinalConf[key]\n            };\n        } else {\n            conf[key] = confValue;\n        }\n    }\n    return conf;\n};\n\nexport const setMatrixInstances = (context, placeholder) => {\n    let {\n        values,\n        rows,\n        columns\n    } = placeholder;\n    values = values || [];\n    rows = rows || [];\n    columns = columns || [];\n    context._composition.matrices = {\n        value: new ValueMatrix(values),\n        left: new ValueMatrix(rows[0]),\n        right: new ValueMatrix(rows[1]),\n        top: new ValueMatrix(columns[0]),\n        bottom: new ValueMatrix(columns[1])\n    };\n\n    context._dependencies.throwback.commit(CommonProps.MATRIX_CREATED, true);\n    return context;\n};\n\nexport const createMatrices = (context) => {\n    const rows = context.rows();\n    const columns = context.columns();\n    const color = context.color();\n    const datamodel = context.data();\n    const size = context.size();\n    const detail = context.detail();\n    const layers = context.layers();\n    const transform = context.transform();\n    const config = context.config();\n    const shape = context.shape();\n\n    // Get the resolver for the matrices\n    const resolver = context.resolver();\n    resolver.store(context.store());\n    resolver.valueParser(context.valueParser());\n    // Prepare configuration for matrix preparation\n    let matrixConfig = {\n        selection: context.selection(),\n        alias: context.alias(),\n        globalConfig: config || {},\n        rows,\n        columns,\n        detail,\n        layers,\n        transform\n    };\n\n    unsubscribeChangeListeners(context);\n\n    const retinalConfig = sanitizeRetinalConfig({\n        color,\n        shape,\n        size\n    });\n\n    matrixConfig = Object.assign(matrixConfig, retinalConfig);\n    // Create the encoders for the group\n    const encoders = {};\n    encoders.retinalEncoder = new RetinalEncoder();\n    encoders.simpleEncoder = getEncoder(layers);\n    matrixConfig.coord = encoders.simpleEncoder.constructor.type();\n    resolver.encoder(encoders.simpleEncoder);\n\n    // Set the group type\n    context.groupType(encoders.simpleEncoder.constructor.type());\n\n    // Get sanitized fields as instances of the Vars Class\n    const fields = encoders.simpleEncoder.fieldSanitizer(datamodel, matrixConfig);\n    encoders.simpleEncoder.setAxisAndHeaders(config ? config.axisFrom : {}, fields);\n    // Setting layers for the code\n    layers && resolver.layerConfig(layers);\n    // Set the row and column axes\n    resolver.horizontalAxis(fields.rows, encoders).verticalAxis(fields.columns, encoders);\n    // Getting the placeholders\n    const placeholderInfo = resolver.getMatrices(datamodel, matrixConfig, context.registry(), encoders);\n    context._groupedDataModel = placeholderInfo.dataModels.groupedModel;\n    // Set the selection object\n    context.selection(placeholderInfo.selection);\n\n    // Create retinal axes\n    resolver.createRetinalAxes(placeholderInfo.dataModels.parentModel.getFieldsConfig(), retinalConfig,\n            encoders);\n\n    // Domains are evaluated for each of the axes for commonality\n    resolver.setDomains(matrixConfig, placeholderInfo.dataModels, encoders);\n\n    // Create matrix instances\n    setMatrixInstances(context, placeholderInfo);\n\n    // Prepare corner matrices\n    context.cornerMatrices(resolver.createHeaders(placeholderInfo, fields, config));\n\n    // Set placeholder information\n    context.placeholderInfo(placeholderInfo);\n\n    context._composition.axes = resolver.axes();\n    context.metaData({\n        border: getBorders(placeholderInfo, encoders.simpleEncoder)\n    });\n\n    resolver.encoder().unionUnitDomains(context);\n\n    registerDomainChangeListener(context);\n    return context;\n};\n","import { STATE_NAMESPACES } from 'muze-utils';\n\nexport const setupChangeListeners = (context) => {\n    const store = context.store();\n\n    store.registerChangeListener([`${STATE_NAMESPACES.GROUP_GLOBAL_NAMESPACE}.domain.x`], () => {\n        const groupAxes = context.resolver().axes();\n        groupAxes.x.forEach(axes => axes.forEach((axis) => {\n            axis.render();\n        }));\n    });\n\n    store.registerChangeListener([`${STATE_NAMESPACES.GROUP_GLOBAL_NAMESPACE}.domain.y`], () => {\n        const groupAxes = context.resolver().axes();\n        groupAxes.y.forEach(axes => axes.forEach((axis) => {\n            axis.render();\n        }));\n    });\n};\n\nexport const registerDomainChangeListener = (context) => {\n    const store = context.store();\n    store.registerChangeListener([`${STATE_NAMESPACES.UNIT_GLOBAL_NAMESPACE}.domain`], () => {\n        context.resolver().encoder().unionUnitDomains(context);\n    }, false, {\n        namespace: 'group',\n        key: 'unionDomain'\n    });\n};\n\nexport const unsubscribeChangeListeners = (context) => {\n    context.store().unsubscribe({\n        namespace: 'group',\n        key: 'unionDomain'\n    });\n};\n","import { ROWS, COLUMNS, COLOR, SHAPE, SIZE, DETAIL, LAYERS, TRANSFORM, CONFIG } from '../enums/constants';\n\nexport const PROPS = {\n    alias: {},\n    data: {},\n    cornerMatrices: {\n        defaultValue: {\n            topLeft: [],\n            topRight: [],\n            bottomLeft: [],\n            bottomRight: []\n        }\n    },\n    groupType: {},\n\n    metaData: {\n        defaultValue: {\n            border: {}\n        }\n    },\n    placeholderInfo: {\n        defaultValue: {}\n    },\n    resolver: {},\n    valueParser: {\n        defaultValue: val => val\n    },\n    registry: {\n        sanitization: (context, value) => {\n            if (context.resolver) {\n                context.resolver().registry(value.cellRegistry);\n            }\n            return value;\n        }\n    },\n    selection: {},\n    [CONFIG]: {},\n    [ROWS]: {},\n    [COLUMNS]: {},\n    [COLOR]: {},\n    [SHAPE]: {},\n    [SIZE]: {},\n    [DETAIL]: {},\n    [LAYERS]: {},\n    [TRANSFORM]: {}\n};\n","import { generateGetterSetters } from 'muze-utils';\nimport localOptions from './local-options';\nimport { SimpleGroup } from '../simple-group';\nimport {\n    MatrixResolver,\n    findInGroup\n} from '../group-helper';\nimport { createUnitState, initializeGlobalState, setMatrixInstances, createMatrices, createLayerState } from './helper';\nimport { setupChangeListeners } from './change-listener';\nimport { PROPS } from './props';\nimport {\n    CONFIG,\n    MOUNT,\n    RETINAL,\n    Y\n} from '../enums/constants';\n\n/**\n * VisualGroup is instantiated by canvas for creating {@link VisualUnit} and axes instances.It creates the\n * the matrix of visual units and axes. It also creates the layout instance which manages the allocation\n * of space of matrices.\n *\n * To get instance of visual group,\n * ```\n *      const visualGroup = canvas.composition().visualGroup;\n * ```\n * @public\n *\n * @class VisualGroup\n */\nclass VisualGroup extends SimpleGroup {\n\n    /**\n     * Creates an instance of VisualGroup. Requires dependencies and other registry options for placeholders\n     * and layers that create individual units.\n     *\n     * @param {Object} registry Key value pair of compostions for the group\n     * @param {Object} dependencies Dependencies needed to run the group\n     * @memberof VisualGroup\n     */\n    constructor (registry, dependencies) {\n        super();\n\n        const {\n            componentSubRegistry\n        } = registry;\n\n        this._dependencies = dependencies;\n        // Generate getter/setter methods for all properties of the class\n        // One can get each property by calling the method and can set it\n        // by passing paramaters for the same. Thus, one can chain setter\n        // getter methods.\n        generateGetterSetters(this, PROPS);\n        generateGetterSetters(this, localOptions);\n        // Populate the store with default values\n        // initialize group compositions\n        this._composition = {};\n        // store reference to data\n        this._data = [];\n        // store reference to mountpoint\n        this._mount = null;\n        // selection object that takes care of updating of components\n        this._selection = {};\n        // Create instance of matrix resolver\n        this.resolver(new MatrixResolver(this._dependencies));\n        // matrix instance store each of the matrices\n        setMatrixInstances(this, {});\n         // Getting indiviual registered items\n        this.registry({\n            layerRegistry: componentSubRegistry.layerRegistry.get(),\n            cellRegistry: componentSubRegistry.cellRegistry.get()\n        });\n    }\n\n    static getState () {\n        return [{\n            domain: {\n                x: {},\n                y: {},\n                radius: {},\n                angle: {},\n                angle0: {}\n            }\n        }, {}];\n    }\n\n    store (...params) {\n        if (params.length) {\n            this._store = params[0];\n            initializeGlobalState(this);\n            createUnitState(this);\n            createLayerState(this);\n            // Register listeners\n            setupChangeListeners(this);\n            return this;\n        }\n        return this._store;\n    }\n\n    /**\n     * Return the instances of matrices created by the visual group.\n     *\n     * @return {Object} Instance of matrices.\n     */\n    matrixInstance (...matrices) {\n        if (matrices.length) {\n            return this;\n        }\n        return this.composition().matrices;\n    }\n\n    /**\n     * Returns the composition of visual group.\n     *\n     * @public\n     *\n     * @return {Object} Composition of visual group. It contains instance of matrices {@link ValueMatrix}\n     * and instances of axis.\n     * ```\n     *          {\n     *              matrices: {\n     *                  value: // Instance of center value matrix.\n     *                  left: // Instance of left value matrix\n     *                  right: // Instance of right value matrix\n     *                  bottom: // Instance of bottom value matrix\n     *                  top: // Instance of top value matrix.\n     *              },\n     *              axes: {\n     *                  x: // Array of x axis.\n     *                  y: // Array of y axis\n     *                  color: // Array of color axis\n     *                  shape: // Array of shape axis\n     *                  size: // Array of size axis.\n     *              }\n     *          }\n     * ```\n     */\n    composition (...params) {\n        if (params.length) {\n            return this;\n        }\n        return this._composition;\n    }\n\n    /**\n     * Locks the model to prevent change listeners to be triggered until unlocked\n     *\n     * @return {Object} Instance of class VisualGroup\n     * @memberof VisualGroup\n     */\n    lockModel () {\n        this.store().model.lock();\n        return this;\n    }\n\n    /**\n     * Unlocks the model so that all change listeners can be triggered\n     *\n     * @return {Object} Instance of class VisualGroup\n     */\n    unlockModel () {\n        this.store().model.unlock();\n        return this;\n    }\n\n    /**\n     * Returns the channel name of the variable. Channels are rows, columns, color, shape and size.\n     *\n     * @public\n     * @param {string} variable Name of the variable.\n     *\n     * @return {string} Name of the channel.\n     */\n    where (variable) {\n        return findInGroup(variable, this.resolver().getAllFields());\n    }\n\n    /**\n     * Gets the axis instances of the visual group based on the given axis type.\n     *\n     * @public\n     * @param {string} type Type of axis. X,Y or retinal axes.\n     *\n     * @return {Array} Array of axis instances.\n     */\n    getAxes (type) {\n        if (type === RETINAL) {\n            return this.resolver().getRetinalAxes();\n        }\n        return this.resolver().getSimpleAxes(type);\n    }\n\n    /**\n     * Returns the instances of cells based on the given type. Type can be given as `row' or `col`.\n     *\n     * @public\n     * @return {Array} Two dimensional array of cells.\n     */\n    getCells (type) {\n        return this.resolver()[`${type}Cells`]();\n    }\n\n    getFieldsFromChannel (channel) {\n        const {\n            rowProjections,\n            colProjections\n        } = this.resolver().getAllFields();\n        return channel === Y ? rowProjections : colProjections;\n    }\n\n    getCellsByFacetKey (facetKey) {\n        const resolver = this.resolver();\n        const cells = resolver.rowCells()[facetKey] || resolver.colCells()[facetKey] || [];\n        return cells;\n    }\n\n    getAxesByFacetKey (axisType, facetKey) {\n        const resolver = this.resolver();\n        const cells = resolver.rowCells()[facetKey] || resolver.colCells()[facetKey];\n        const axes = cells[0].valueOf().axes()[axisType] || [];\n\n        return axes;\n    }\n\n    /**\n     * This method is used to return a serialized representation of the instance's properties.\n     *\n     * @return {Object} Object with config proprties.\n     * @memberof VisualGroup\n     */\n    serialize () {\n        const store = this.store();\n\n        return {\n            [CONFIG]: store.get(CONFIG),\n            [MOUNT]: store.get(MOUNT)\n        };\n    }\n\n    /**\n     * Returns the grouped datamodel prepared by visual group. If there is no group by performed, then it returns the\n     * original data model passed to visual group.\n     *\n     * @return {DataModel} Grouped data model.\n     */\n    getGroupByData () {\n        return this._groupedDataModel;\n    }\n\n    createMatrices () {\n        createMatrices(this);\n    }\n}\n\nexport default VisualGroup;\n","import { PersistentBehaviour, SELECTION } from '@chartshq/muze-firebolt';\n\nexport default class SelectBehaviour extends PersistentBehaviour {\n    static formalName () {\n        return 'select';\n    }\n\n    setSelectionSet (addSet, selectionSet) {\n        if (addSet === null) {\n            selectionSet.reset();\n        } else if (addSet.length) {\n            // new add set\n            const existingRemoveSet = addSet.filter(d => selectionSet._set[d] === SELECTION.SELECTION_OLD_EXIT\n                || selectionSet._set[d] === SELECTION.SELECTION_NEW_EXIT);\n                // existing add set\n            if (existingRemoveSet.length) {\n                selectionSet.updateEntry();\n                selectionSet.add(existingRemoveSet);\n            } else {\n                selectionSet.updateExit();\n                selectionSet.remove(addSet);\n            }\n            const { exitSet } = selectionSet.getSets();\n            const mergedExitSet = [...new Set(exitSet[1]), ...new Set(exitSet[0])];\n            const completeSetCount = selectionSet.getCompleteSet().length;\n            if (exitSet[1].length !== completeSetCount && mergedExitSet.length === completeSetCount) {\n                selectionSet.reset();\n            }\n        } else {\n            selectionSet.remove(selectionSet.getCompleteSet());\n        }\n        return this;\n    }\n}\n","import { BEHAVIOURS, ACTIONS } from '@chartshq/muze-firebolt';\n\nconst CLASSPREFIX = 'muze';\n\nexport const actionBehaviourMap = {\n    [ACTIONS.DRAG]: {\n        target: `.${CLASSPREFIX}-gradient-rect`,\n        behaviours: [BEHAVIOURS.BRUSH]\n    },\n    [ACTIONS.HOVER]: {\n        target: [`.${CLASSPREFIX}-legend-columns`],\n        behaviours: [BEHAVIOURS.HIGHLIGHT]\n    },\n    [ACTIONS.CLICK]: {\n        target: [`.${CLASSPREFIX}-legend-columns`],\n        behaviours: [BEHAVIOURS.SELECT]\n    }\n};\n\nexport const propagationBehaviourMap = {\n    [BEHAVIOURS.SELECT]: BEHAVIOURS.FILTER,\n    [BEHAVIOURS.BRUSH]: BEHAVIOURS.HIGHLIGHT\n};\n","import * as BEHAVIOURS from '../enums/behaviours';\nimport * as sideEffects from '../enums/side-effects';\n\nexport const behaviourEffectMap = {\n    [BEHAVIOURS.BRUSH]: [sideEffects.SELECTIONBOX, {\n        name: sideEffects.Highlighter,\n        options: {\n            strategy: 'fade'\n        }\n    }],\n    [BEHAVIOURS.HIGHLIGHT]: [sideEffects.Highlighter],\n    select: [{\n        name: sideEffects.Highlighter,\n        options: {\n            strategy: 'fade'\n        }\n    }]\n};\n\nexport const propagationSideEffects = {\n    [BEHAVIOURS.BRUSH]: [{\n        name: sideEffects.Highlighter,\n        options: {\n            strategy: 'fade'\n        }\n    }],\n    [BEHAVIOURS.HIGHLIGHT]: [{\n        name: sideEffects.Highlighter,\n        options: {\n            strategy: 'fade'\n        }\n    }],\n    [BEHAVIOURS.SELECT]: ['filter']\n};\n\n","export const BRUSH = 'brush';\nexport const HIGHLIGHT = 'highlight';\nexport const TOOLTIP = 'tooltip';\nexport const FILTER = 'filter';\nexport const SELECT = 'select';\n\n","export const SELECTIONBOX = 'selectionBox';\nexport const Highlighter = 'highlighter';\n\n","export const CLASSPREFIX = 'muze';\nexport const IDFIELD = '__id__';\nexport const CONFIG = 'config';\nexport const DATAMODEL = 'dataModel';\nexport const AXES = 'axes';\nexport const LAYERDEFS = 'layerDef';\nexport const WIDTH = 'width';\nexport const MAXWIDTH = 'max-width';\nexport const HEIGHT = 'height';\nexport const MOUNTPOINT = 'mountPoint';\nexport const GRIDLINEPARENTGROUPCLASS = 'grid-lines';\nexport const TRANSFORM = 'transform';\nexport const CONSOLIDATED = 'consolidated';\nexport const FRAGMENTED = 'fragmented';\nexport const DEFAULTCOLOR = '#F44336';\nexport const DEFAULTSIZE = 50;\nexport const DEFAULTSHAPE = 'circle';\nexport const STEP = 'step';\nexport const GRADIENT = 'gradient';\nexport const ORDINAL = 'ordinal';\nexport const SCALE_FUNCTIONS = {\n    size: 'getSize',\n    shape: 'getShape',\n    color: 'getColor'\n};\nexport const TOP = 'top';\nexport const LEFT = 'left';\nexport const RIGHT = 'right';\nexport const BOTTOM = 'bottom';\nexport const HORIZONTAL = 'horizontal';\nexport const VERTICAL = 'vertical';\nexport const CENTER = 'center';\nexport const VALUE = 'value';\nexport const PATH = 'path';\nexport const SHAPE = 'shape';\nexport const ICON = 'icon';\nexport const RECT = 'rect';\nexport const START = 'start';\nexport const UPPER = 'upper';\nexport const LOWER = 'lower';\nexport const END = 'end';\nexport const SIZE = 'size';\nexport const DISCRETE = 'discrete';\nexport const MEASURE = 'measure';\n\n","import { assembleModelFromIdentifiers, getDataModelFromRange } from 'muze-utils';\nimport { propagationBehaviourMap } from './action-behaviour-map';\nimport { propagationSideEffects } from './behaviour-effect-map';\nimport { STEP, GRADIENT, DISCRETE, MEASURE } from '../enums/constants';\n\nexport const propagate = (firebolt, action, selectionSet, config = {}) => {\n    let propagationData;\n    const type = firebolt.context.constructor.type();\n    const payload = config.payload;\n    const data = firebolt.context.data();\n    const metaData = firebolt.context.metaData();\n    const fieldType = metaData.getData().schema[0].type;\n\n    const propPayload = {};\n    const sourceId = firebolt.context._id;\n    propPayload.action = propagationBehaviourMap[action] || action;\n    propPayload.sideEffects = propagationSideEffects[action];\n    propPayload.sourceCanvas = firebolt.context.canvasAlias();\n    const isMutableAction = firebolt._actions.behavioural[propPayload.action].constructor.mutates();\n    if (payload.criteria === null) {\n        propagationData = null;\n    } else {\n        const entrySet = selectionSet.mergedEnter;\n        let values = data.filter(d => entrySet.uids.indexOf(d.id) !== -1).map(d => d.rawVal);\n        if (type === STEP || (type === DISCRETE && fieldType === MEASURE)) {\n            const field = Object.keys(payload.criteria || {})[0];\n            values = data.filter(d => entrySet.uids.indexOf(d.id) !== -1).map(d => d.range);\n            propagationData = values.length ? metaData.select((fields) => {\n                let check = false;\n                for (let i = 0; i < values.length; i++) {\n                    check = fields[field].value >= values[i][0] && fields[field].value <= values[i][1];\n                    if (check === true) {\n                        break;\n                    }\n                }\n                return check;\n            }, {\n                saveChild: false\n            }) : null;\n        } else if (type === GRADIENT) {\n            propagationData = getDataModelFromRange(metaData, payload.criteria);\n        } else if (values.length) {\n            propagationData = assembleModelFromIdentifiers(metaData, [payload.criteria[0], ...values.map(d => [d])]);\n        } else {\n            propPayload.criteria = null;\n            propagationData = metaData.select(() => true, {\n                saveChild: false\n            });\n        }\n    }\n\n    let propagateInterpolatedValues = false;\n\n    if (propagationData) {\n        const schema = propagationData.getSchema();\n        propagateInterpolatedValues = schema.every(d => d.type === MEASURE);\n    }\n\n    const propConfig = {\n        sourceId: `legend-${sourceId}`,\n        payload: propPayload,\n        criteria: propPayload.criteria === null ? null : propagationData,\n        isMutableAction,\n        propagateInterpolatedValues,\n        action: propPayload.action\n    };\n\n    metaData.propagate(propagationData, propConfig, true);\n};\n","import { Firebolt } from '@chartshq/muze-firebolt';\nimport { propagate } from './helper';\nimport { STEP, GRADIENT } from '../enums/constants';\n\n/**\n * This class manages the interactions of legend.\n * @export\n * @class LegendFireBolt\n * @extends {Firebolt}\n */\nexport class LegendFireBolt extends Firebolt {\n    constructor (...params) {\n        super(...params);\n        this.initializeSideEffects();\n    }\n\n    getPropagationSelectionSet (selectionSet) {\n        return selectionSet[0];\n    }\n\n    propagate (behaviourName, payload, selectionSet) {\n        propagate(this, behaviourName, selectionSet, {\n            payload\n        });\n    }\n\n    getAddSetFromCriteria (criteria) {\n        let values;\n        let uniqueIds;\n        const type = this.context.constructor.type();\n\n        if (criteria === null) {\n            uniqueIds = null;\n        } else if (type === STEP) {\n            values = Object.values(criteria);\n            uniqueIds = this.context.data().filter(d => values.indexOf(d.range) !== -1).map(d => d.id);\n        } else if (type === GRADIENT) {\n            uniqueIds = [];\n        } else {\n            values = criteria[1];\n            if (values) {\n                uniqueIds = this.context.data().filter(d => values.indexOf(d.rawVal) !== -1).map(d => d.id);\n            } else {\n                values = Object.values(criteria);\n                uniqueIds = this.context.data().filter(d => values.indexOf(d.range) !== -1).map(d => d.id);\n            }\n        }\n        return {\n            uids: uniqueIds,\n            model: null\n        };\n    }\n\n    getFullData () {\n        return null;\n    }\n}\n","import {\n    getEvent,\n    getD3Drag\n } from 'muze-utils';\n\n/**\n * Adds dragging action to the target element.\n * @param {firebolt} firebolt firebolt\n * @param {SVGElement} targetEl Element on which brushing action is needed.\n * @param {Array} behaviours Array of behaviours\n */\n/* istanbul ignore next */ const drag = firebolt => (targetEl, behaviours) => {\n    let startPos = {};\n    let endPos = {};\n    let payload;\n    const d3Drag = getD3Drag();\n    const context = firebolt.context;\n    const boundingBox = context.measurement().gradientDimensions;\n    const axisType = context.config().align === 'horizontal' ? 'x' : 'y';\n    const axisScale = context.axis().source().scale();\n    const rangeShifter = axisScale.range()[axisType === 'x' ? 0 : 1];\n\n    targetEl.call(d3Drag().on('start', () => {\n        const event = getEvent();\n        startPos = {\n            x: event.x,\n            y: event.y\n        };\n    }).on('drag', () => {\n        const event = getEvent();\n\n        endPos = {\n            x: event.x,\n            y: event.y\n        };\n        endPos.x = Math.max(0, Math.min(endPos.x, boundingBox.width));\n        endPos.y = Math.max(0, Math.min(endPos.y, boundingBox.height));\n\n        payload = {\n            criteria: {\n                [context.fieldName()]: [axisScale.invert(startPos[axisType] + rangeShifter * 2),\n                    axisScale.invert(endPos[axisType] + rangeShifter * 2)].sort((a, b) => a - b)\n            }\n        };\n        behaviours.forEach(behaviour => firebolt.dispatchBehaviour(behaviour, payload));\n    }).on('end', () => {\n        const event = getEvent();\n\n        endPos = {\n            x: event.x,\n            y: event.y\n        };\n        endPos.x = Math.max(0, Math.min(endPos.x, boundingBox.width));\n        endPos.y = Math.max(0, Math.min(endPos.y, boundingBox.height));\n        if (startPos[axisType] === endPos[axisType]) {\n            payload = {\n                criteria: {}\n            };\n        } else {\n            payload = {\n                criteria: {\n                    [context.fieldName()]: [axisScale.invert(startPos[axisType] + rangeShifter * 2),\n                        axisScale.invert(endPos[axisType] + rangeShifter * 2)].sort((a, b) => a - b)\n                }\n            };\n        }\n        behaviours.forEach(behaviour => firebolt.dispatchBehaviour(behaviour, payload));\n    }));\n};\n\nexport default drag;\n","import { getEvent } from 'muze-utils';\n\n/**\n * Adds mouse interactions to target element.\n * @param {Firebolt} Firebolt instance of firebolt.\n * @param {SVGElement} targetEl Element on which the event listeners will be attached.\n * @param {Array} behaviours Array of behaviours\n */\n/* istanbul ignore next */ const hover = firebolt => (targetEl, behaviours) => {\n    const dispatchBehaviour = function (args) {\n        const event = getEvent();\n        const payload = {\n            criteria: firebolt.context.getCriteriaFromData(args)\n        };\n        behaviours.forEach(behaviour => firebolt.dispatchBehaviour(behaviour, payload));\n        event.stopPropagation();\n    };\n\n    targetEl.on('mouseover', dispatchBehaviour)\n                    .on('mousemove', dispatchBehaviour)\n                    .on('mouseout', () => {\n                        const event = getEvent();\n                        behaviours.forEach(behaviour => firebolt.dispatchBehaviour(behaviour, {\n                            criteria: null\n                        }));\n                        event.stopPropagation();\n                    });\n};\n\nexport default hover;\n","/**\n * Adds mouse interactions to target element.\n * @param {VisualUnit} instance instance of visual unit.\n * @param {SVGElement} targetEl Element on which the event listeners will be attached.\n * @param {Array} behaviours Array of behaviours\n */\nconst click = firebolt => (targetEl, behaviours) => {\n    const dispatchBehaviour = function (args) {\n        const payload = {\n            criteria: firebolt.context.getCriteriaFromData(args)\n        };\n        behaviours.forEach(behaviour => firebolt.dispatchBehaviour(behaviour, payload));\n    };\n\n    targetEl.on('click', dispatchBehaviour);\n};\n\nexport default click;\n","import drag from './drag';\nimport hover from './hover';\nimport click from './click';\nimport * as ACTIONNAMES from '../../enums/actions';\n\nexport const physicalActions = {\n    [ACTIONNAMES.DRAG]: drag,\n    [ACTIONNAMES.HOVER]: hover,\n    [ACTIONNAMES.CLICK]: click\n};\n\n","export const DRAG = 'drag';\nexport const HOVER = 'hover';\nexport const SELECTIONDRAG = 'selectiondrag';\nexport const CLICK = 'click';\n","import {\n    getMousePos,\n    getEvent,\n    getD3Drag\n } from 'muze-utils';\nimport { HEIGHT, WIDTH, HORIZONTAL } from '../../enums/constants';\n\nconst getSelectionCriteria = (subject, axis, measures) => {\n    let criteria = [];\n    const {\n        axisScale,\n        axisType\n    } = axis;\n    const {\n        startPos,\n        endPos,\n        selectionBoxMeasure,\n        drawingInfMeasure,\n        offset\n    } = measures;\n    const subjectStartPoint = subject[axisType];\n\n    if (startPos[axisType] === endPos[axisType]) {\n        criteria = [];\n    } else if (subjectStartPoint + selectionBoxMeasure >= drawingInfMeasure + offset) {\n        criteria = [axisScale.invert(drawingInfMeasure + offset - selectionBoxMeasure),\n            axisScale.invert(drawingInfMeasure + offset)];\n    } else if (subjectStartPoint - offset < offset) {\n        criteria = [axisScale.invert(offset * 2), axisScale.invert(selectionBoxMeasure + offset * 2)];\n    } else {\n        criteria = [axisScale.invert(subjectStartPoint), axisScale.invert(subjectStartPoint + selectionBoxMeasure)];\n    }\n    axisType === 'x' ? criteria : criteria.reverse();\n    return criteria;\n};\n\nexport const selectionBoxDrag = firebolt => (targetEl, behaviours) => {\n    let startPos = {};\n    let payload;\n    const endPos = {};\n    const d3Drag = getD3Drag();\n    const context = firebolt.context;\n    const axisScale = context.axis().source().scale();\n    const axisType = context.config().align === HORIZONTAL ? 'x' : 'y';\n    const drawingInfMeasure = context.measurement().gradientDimensions[axisType === 'x' ?\n        WIDTH : HEIGHT];\n    const offset = axisScale.range()[axisType === 'x' ? 0 : 1];\n    const measures = {\n        drawingInfMeasure,\n        offset\n    };\n    let subject = {};\n\n    targetEl.call(d3Drag().on('start', function () {\n        const event = getEvent();\n        startPos = getMousePos(this, event.sourceEvent);\n        subject = event.subject;\n    }).on('drag', () => {\n        const event = getEvent();\n        const selectionBoxMeasure = subject[axisType === 'x' ? WIDTH : HEIGHT];\n\n        subject.x += event.dx;\n        subject.y += event.dy;\n\n        measures.selectionBoxMeasure = selectionBoxMeasure;\n        measures.startPos = startPos;\n        measures.endPos = endPos;\n        const criteria = getSelectionCriteria(subject, { axisScale, axisType }, measures);\n\n        payload = {\n            criteria: {\n                [context.fieldName()]: criteria\n            },\n            fadeOut: true\n        };\n        firebolt.dispatchBehaviour(behaviours[0], payload);\n    }).on('end', () => {\n        const event = getEvent();\n        const selectionBoxMeasure = subject[axisType === 'x' ? WIDTH : HEIGHT];\n        measures.selectionBoxMeasure = selectionBoxMeasure;\n        measures.startPos = startPos;\n        measures.endPos = endPos;\n        const criteria = getSelectionCriteria(event, { axisScale, axisType }, measures);\n        payload = {\n            criteria: {\n                [context.fieldName()]: criteria\n            },\n            fadeOut: true,\n            config: {\n                transition: {\n                    duration: 200\n                }\n            }\n        };\n        firebolt.dispatchBehaviour(behaviours[0], payload);\n    }));\n};\n\n","import { makeElement } from 'muze-utils';\nimport { SpawnableSideEffect } from '@chartshq/muze-firebolt';\nimport { CLASSPREFIX, HEIGHT, WIDTH, HORIZONTAL, RECT } from '../../../enums/constants';\nimport { SELECTIONBOX } from '../../../enums/side-effects';\nimport { selectionBoxDrag } from '../../physical/selection-box-drag';\nimport './styles.scss';\n\n/**\n * This class is used to create a selection box which is used by visual unit for brushing and\n * selection in the canvas.\n * @class SelectionBox\n */\n/* istanbul ignore next */ class SelectionBox extends SpawnableSideEffect {\n    static formalName () {\n        return SELECTIONBOX;\n    }\n\n    /**\n     * It returns the default configuration needed by selectionbox.\n     * @return {Object} Default configuration of the selection box.\n     */\n    static defaultConfig () {\n        return {\n            className: 'legend-selection-box',\n            classPrefix: CLASSPREFIX\n        };\n    }\n\n    /**\n     * Draws the selectionbox with the specified dimensions.\n     */\n    /* istanbul ignore next */ apply (selectionSet, payload) {\n        let x;\n        let y;\n        let width;\n        let height;\n        const firebolt = this.firebolt;\n        const context = firebolt.context;\n        const config = this.config();\n        const axis = context.axis().source();\n        const className = `${config.classPrefix}-${config.className}`;\n\n        const domain = payload.criteria[firebolt.context.fieldName()];\n        const axisScale = axis.scale();\n        const range = domain ? [axis.getScaleValue(domain[0]), axis.getScaleValue(domain[1])] : [];\n\n        const axisType = context.config().align === HORIZONTAL ? 'x' : 'y';\n\n        const gradientDimension = firebolt.context.measurement().gradientDimensions[axisType === 'x' ?\n            HEIGHT : WIDTH];\n\n        const rangeShifter = axisScale.range()[axisType === 'x' ? 0 : 1];\n        const legendGradContainer = context.getDrawingContext().svgContainer;\n        const legendSelGroup = makeElement(legendGradContainer, 'g', [1], `${config.classPrefix}-selection-box-group`);\n\n        if (firebolt.context.config().align === HORIZONTAL) {\n            x = range[0] - rangeShifter || 0;\n            y = 0;\n            width = range[1] - range[0] || 0;\n            height = gradientDimension;\n        } else {\n            x = 0;\n            y = range[1] - rangeShifter || 0;\n            height = range[0] - range[1] || 0;\n            width = gradientDimension;\n        }\n        const enterFn = function (el) {\n            selectionBoxDrag(firebolt)(el, ['brush']);\n        };\n        const selBox = makeElement(legendSelGroup, RECT, [{ domain, x, y, width, height }], className,\n            { enter: enterFn });\n        selBox.attr('y', y)\n                        .attr('x', x)\n                        .attr(WIDTH, width)\n                        .attr(HEIGHT, height);\n    }\n}\n\nexport default SelectionBox;\n\n","import { selectElement } from 'muze-utils';\n\nexport const strategies = (firebolt) => {\n    const context = firebolt.context;\n    const classed = (set, className, change) => {\n        const classPrefix = context.config().classPrefix;\n        selectElement(context.mount())\n                        .selectAll(`.${classPrefix}-legend-columns`)\n                        .filter(d => set.uids.indexOf(d.id) !== -1)\n                        .selectAll('div')\n                        .classed(className, change);\n    };\n\n    return {\n        fade: (set, config = {}) => {\n            const classPrefix = context.config().classPrefix;\n            if (!set.mergedEnter.length && !set.mergedExit.length) {\n                classed(set.completeSet, config.className || `${classPrefix}-legend-fadeout`, false);\n            } else {\n                classed(set.mergedExit, config.className || `${classPrefix}-legend-brighten`, false);\n                classed(set.mergedExit, config.className || `${classPrefix}-legend-fadeout`, true);\n                classed(set.mergedEnter, config.className || `${classPrefix}-legend-fadeout`, false);\n            }\n        },\n        brighten: (set, config = {}) => {\n            const classPrefix = context.config().classPrefix;\n            if (!set.mergedEnter.length && !set.mergedExit.length) {\n                classed(set.completeSet, config.className || `${classPrefix}-legend-brighten`, false);\n            } else {\n                classed(set.mergedEnter, config.className || `${classPrefix}-legend-brighten`, true);\n                classed(set.mergedExit, config.className || `${classPrefix}-legend-brighten`, false);\n            }\n        }\n    };\n};\n","import { GenericSideEffect } from '@chartshq/muze-firebolt';\nimport { strategies } from './strategies';\nimport { Highlighter } from '../../../enums/side-effects';\n\nexport default class LegendHighlighter extends GenericSideEffect {\n    constructor (...params) {\n        super(...params);\n        this._strategies = strategies(this.firebolt);\n        this._strategy = 'brighten';\n    }\n\n    static formalName () {\n        return Highlighter;\n    }\n\n    apply (selectionSet, payload, options = {}) {\n        const strategy = this._strategies[options.strategy || this._strategy];\n\n        strategy(selectionSet, this);\n    }\n}\n","import { mergeRecursive } from 'muze-utils';\n\nexport const PROPS = {\n    config: {\n        sanitization: (context, value) => mergeRecursive(context._config || {}, value)\n    },\n    data: {},\n    fieldName: {},\n    legendContainer: {},\n    measurement: {\n        sanitization: (context, value) => {\n            const measurement = mergeRecursive(context._measurement, value);\n            ['padding', 'border', 'margin'].forEach((space) => {\n                measurement[space] = Math.min(measurement[space] > 0 ? measurement[space] : 0,\n                     measurement.maxWidth * 0.1, measurement.maxHeight * 0.1);\n            });\n            return measurement;\n        }\n    },\n    logicalSpace: {},\n    metaData: {},\n    range: {\n        sanitization: (context, value) => {\n            context.scale().range(value);\n            context.resetLogicalSpace();\n            context.store().commit('range', value);\n            return value;\n        }\n    },\n    scale: {},\n    smartTicks: {},\n    store: {},\n    title: {\n        sanitization: (context, value) => mergeRecursive(context._title || {}, value)\n    },\n    labelManager: {},\n    minTickDistance: {},\n    valueParser: {\n        defaultValue: val => val\n    }\n};\n","import { getSymbol } from 'muze-utils';\nimport {\n    CENTER,\n    LEFT,\n    RIGHT\n} from '../enums/constants';\n\nexport const ALIGN = {\n    HORIZONTAL: 'horizontal',\n    VERTICAL: 'vertical'\n};\n\nexport const DEFAULT_MEASUREMENT = {\n    height: 30,\n    width: 30,\n    maxWidth: Infinity,\n    maxHeight: Infinity,\n    padding: 2,\n    margin: 2,\n    border: 1\n};\n\nexport const LEGEND_TITLE = {\n    text: '',\n    orientation: (pos) => {\n        if (pos === LEFT || pos === RIGHT) {\n            return LEFT;\n        } return CENTER;\n    }\n};\n\nexport const DEFAULT_CONFIG = {\n    classPrefix: 'muze',\n    borderStyle: 'solid',\n    borderColor: 'rgba(0,0,0,0)',\n    formatter: {\n        bounds: {\n            lower: 'less than',\n            upper: 'more than'\n        }\n    },\n    item: {\n        text: {\n            orientation: 'right',\n            width: 10,\n            formatter: (val, i, data, context) => context.valueParser()(val)\n        },\n        icon: {\n            className: 'legend-icon',\n            height: 20,\n            width: 20,\n            color: 'rgba(0,0,0,.5)',\n            type: 'square'\n        }\n    }\n};\n\n/**\n * Creates a map of pre defined icons\n *\n * @param {string} icon Accepts a icon name like 'square', 'cross', 'diamond' etc\n * @return {Object} icon object which can be used to draw the icons\n */\nexport const ICON_MAP = (icon) => {\n    if (icon && typeof (icon) === 'string') {\n        return getSymbol(icon);\n    } return icon;\n};\n","import { makeElement, numberInterpolator } from 'muze-utils';\n\nimport {\n    SCALE_FUNCTIONS,\n    WIDTH,\n    HEIGHT,\n    LEFT,\n    RIGHT,\n    TOP,\n    BOTTOM,\n    MAXWIDTH\n} from '../enums/constants';\n\n/**\n *\n *\n * @param {*} scale\n *\n */\nexport const getScaleInfo = (scale) => {\n    const scaleType = scale.constructor.type();\n    const domain = scale.uniqueValues();\n    const steps = scale.config().stops || 1;\n    const scaleFn = SCALE_FUNCTIONS[scaleType];\n\n    return { scaleType, domain, steps, scaleFn };\n};\n\n/**\n * Function to recompute the stops in array in case to left and right alignment of legend.\n *\n * @param  {string} param - parameter to measure\n * @param  {Object} requiredMeasure - required measure parameters\n * @param  {Object} availableMeasure - available meassure parameters\n * @param  {Array} domainForLegend - array\n * @param  {Object} smartLabelCalc - smartLabel Manager\n * @return {Array} - Array\n */\nconst getcomputedArray = (computationhelper, requiredMeasure, availableMeasure, domainForLegend) => {\n    // declaring Current and Next Tick Value variable\n    let currentTickValue;\n    let nextTickValue;\n    const upperBound = domainForLegend[domainForLegend.length - 1];\n    const param = computationhelper.measureParam;\n    const smartLabelCalc = computationhelper.smartLabelCalc;\n\n    // calculating pixel required per Tick Values\n    const pixelPerTick = (availableMeasure[param] / upperBound);\n\n    // checking if available max width is smaller than required width for legend.\n    if (availableMeasure[param] >= requiredMeasure[param]) {\n        return domainForLegend;\n    }\n\n    currentTickValue = (smartLabelCalc.getOriSize((domainForLegend[0]))[param]);\n    for (let i = 1; i < domainForLegend.length - 1; i++) {\n        nextTickValue = Math.floor((currentTickValue / pixelPerTick) + domainForLegend[i - 1]);\n        if (domainForLegend[i] < nextTickValue) {\n            domainForLegend.splice(i, 1);\n            i -= 1;\n        }\n        currentTickValue = (smartLabelCalc.getOriSize((domainForLegend[i]))[param]);\n    }\n    return domainForLegend;\n};\n\n/**\n * function to recompute the Stops Array provided to prevent the Overlapping of values\n * @param  {Array} domainForLegend - Stops Array\n * @param  {Object} scaleParams - Scale Parameters\n * @return {Array} - modified Stops Array\n */\nexport const getInterpolatedArrayData = (domainForLegend, scaleParams) => {\n    // defining param for height/width selector\n    let measureParam;\n\n    // declaring variable for required Width\n    let requiredWidth;\n\n    // declaring variable for required height\n    let requiredHeight;\n\n    // declaring the variable for upperbound\n    let upperBound = domainForLegend[domainForLegend.length - 1];\n\n    // Initializing Minimum Tick Difference Variable and checking if it's less than 1 or not\n    let minTickDiff = Math.ceil(domainForLegend[1] - domainForLegend[0]);\n\n    // calculating max tick difference\n    const maxTickDiff = Math.ceil(upperBound - domainForLegend[0]);\n\n    // gradient Alignment\n    const { alignment } = scaleParams;\n\n    // getting SmartLabel Manager to calculate tick Params\n    const smartLabelCalc = scaleParams.smartLabel;\n\n    // scale Measurements (i.e MaxWidth and MaxHeight available)\n    const availableSpace = scaleParams.measures;\n\n    // getting minimum Tick size (i.e height and width)\n    const minimumTickSize = scaleParams.minTickDistance;\n\n    // getting domain upperbound dimensions\n    const { height: tickDimHeight, width: tickDimWidth } = smartLabelCalc.getOriSize((upperBound));\n\n    /* Checking if UpperBound of Domain is Floating or Not.\n    In case of floating constricting it to 2 decimals after point. */\n    if (!Number.isInteger(upperBound)) {\n        upperBound = ((upperBound).toFixed(2));\n    }\n\n    // Calculating minimum tick difference\n    minTickDiff = minTickDiff < 1 ? 1 : minTickDiff;\n\n    // required width to render legend\n    requiredWidth = (Math.abs(maxTickDiff) / Math.abs(minTickDiff)) * (tickDimWidth + (minimumTickSize.width));\n\n    requiredWidth -= Math.abs(maxTickDiff);\n\n    // require height to render legend\n    requiredHeight = (Math.abs(maxTickDiff) / Math.abs(minTickDiff)) * tickDimHeight;\n\n    requiredHeight -= Math.abs(maxTickDiff);\n\n    // checking the alignment of legend\n    if (alignment === TOP || alignment === BOTTOM) {\n        measureParam = WIDTH;\n    } else {\n        measureParam = HEIGHT;\n    }\n\n    // calculating computed array\n    domainForLegend = getcomputedArray({\n        smartLabelCalc,\n        measureParam\n    }, {\n        height: requiredHeight,\n        width: requiredWidth\n    }, {\n        height: availableSpace.maxHeight,\n        width: availableSpace.maxWidth\n    }, domainForLegend);\n\n    return domainForLegend;\n};\n\n/**\n * function to recalculate steps on providing more number of stops than canvas can accomodate.\n * @param  {Array} domain - Array\n * @param  {Array} steps - Array\n * @param  {Object} scaleParams - Scale Parameters\n * @return {Array} - recalculated Step Array\n */\nexport const getInterpolatedData = (domain, steps, scaleParams) => {\n    // declaring recomputeSteps Variable\n    let recomputeSteps = 0;\n\n    const getTickMeasure = scaleParams.smartLabel;\n    const { maxWidth, maxHeight } = scaleParams.measures;\n    const { alignment } = scaleParams;\n    const domainForLegend = [];\n    const interpolatedFn = numberInterpolator()(domain[0], domain[1]);\n\n    // getting tick measure(i.e height and width)\n    const tickValue = getTickMeasure.getOriSize(domain[1].toFixed(2));\n\n    // To round the floating values to Integer and checking if value is 1.\n    steps = Math.round(steps);\n    steps = steps < 1 ? (steps + 1) : steps;\n\n    // checking alignment of the Axis\n    if (alignment === TOP || alignment === BOTTOM) {\n        recomputeSteps = Math.floor(maxWidth / (tickValue.width));\n    } else {\n        recomputeSteps = Math.floor(maxHeight / (tickValue.height));\n    }\n    steps = Math.min(steps, recomputeSteps);\n\n    // scaling the axis based on steps provided\n    for (let i = 0; i <= steps; i++) {\n        domainForLegend[i] = interpolatedFn(i / steps);\n    }\n    return domainForLegend;\n};\n\n/**\n *\n *\n * @param {*} container\n * @param {*} text\n * @param {*} measurement\n * @param {*} classPrefix\n */\nexport const titleCreator = (container, title, measurement, config) => {\n    const titleWidth = Math.min(measurement.maxWidth, measurement.width);\n\n    const titleContainer = makeElement(container, 'table', [1], `${config.classPrefix}-legend-title`)\n            .style(WIDTH, `${titleWidth}px`)\n            .style(HEIGHT, `${measurement.height}px`)\n            .style('border-bottom', `${measurement.border}px ${config.borderStyle} ${config.borderColor}`)\n            .style('text-align', title.orientation instanceof Function ?\n            title.orientation(config.position) : title.orientation);\n    return makeElement(titleContainer, 'td', [1], `${config.classPrefix}-legend-title-text`)\n                    .style(WIDTH, `${titleWidth}px`)\n                    .style(MAXWIDTH, `${titleWidth}px`)\n                    .style(HEIGHT, '100%')\n                    .style('line-height', 1)\n                    .style('padding', `${measurement.padding}px`)\n                    .text(title.text)\n                    .style('overflow-x', 'scroll')\n                    .node();\n};\n\n/**\n *\n *\n * @param {*} data\n * @param {*} prop\n * @param {*} labelManager\n *\n */\nexport const getMaxMeasures = (data, prop, labelManager) => {\n    let maxHeight = -Infinity;\n    let maxWidth = -Infinity;\n\n    data.forEach((item) => {\n        const value = prop ? item[prop] : item;\n        const space = labelManager.getOriSize(value);\n        maxHeight = Math.max(space.height + 2, maxHeight);\n        maxWidth = Math.max(space.width + 2, maxWidth);\n    });\n\n    return { height: maxHeight, width: maxWidth };\n};\n\n/**\n *\n *\n * @param {*} data\n * @param {*} prop\n * @param {*} labelManager\n *\n */\nexport const getItemMeasures = (context, prop, formatter) => {\n    const space = [];\n    const data = context.data();\n    const labelManager = context._labelManager;\n\n    data.forEach((item, index) => {\n        const value = prop ? item[prop] : item;\n        const { height, width } = labelManager.getOriSize(formatter(value, index, data, context));\n        space[index] = { height: height + 1, width: width + 1 };\n    });\n    return space;\n};\n\n/**\n *\n *\n * @param {*} textOrientation\n * @param {*} effPadding\n * @param {*} titleSpace\n *\n * @memberof Legend\n */\nexport const computeItemSpaces = (config, measures, data) => {\n    let totalHeight = 0;\n    let totalWidth = 0;\n    let maxItemSpaces = {\n        width: 0, height: 0\n    };\n    const {\n        effPadding,\n        titleWidth,\n        labelSpaces,\n        titleHeight,\n        maxWidth\n    } = measures;\n    const {\n        item,\n        align\n    } = config;\n    const {\n        icon,\n        text\n    } = item;\n    const textOrientation = text.orientation;\n    const itemSpaces = [];\n    const iconSpaces = [];\n    let maxIconWidth = 0;\n    labelSpaces.forEach((labelSpace, i) => {\n        const itemSpace = { width: 0, height: 0 };\n        const iconSpace = { width: 0, height: 0 };\n        const datum = data[i] || {};\n            // Compute each legend item height/width\n        if (textOrientation === LEFT || textOrientation === RIGHT) {\n            // Get label, icon and item widths\n            labelSpace.width += effPadding;\n            iconSpace.width = (datum.size ? 2 * Math.sqrt(datum.size / Math.PI) : icon.width) + effPadding;\n            maxIconWidth = Math.max(iconSpace.width, maxIconWidth);\n            itemSpace.width = labelSpace.width + maxIconWidth;\n\n            // Get label, icon and item heights\n            labelSpace.height = Math.max(labelSpace.height, icon.height) + effPadding;\n            iconSpace.height = labelSpace.height;\n            itemSpace.height = labelSpace.height;\n        } else {\n            // Get label, icon and item widths\n            labelSpace.width = Math.max(labelSpace.width, datum.size ? 2 * Math.sqrt(datum.size / Math.PI)\n            : icon.width) + effPadding;\n            iconSpace.width = labelSpace.width;\n            itemSpace.width = labelSpace.width;\n            maxIconWidth = Math.max(iconSpace.width, maxIconWidth);\n\n            // Get label, icon and item heights\n            labelSpace.height += effPadding;\n            iconSpace.height = icon.height + effPadding;\n            itemSpace.height = labelSpace.height + iconSpace.height;\n        }\n        // Compute height and width of legend for each alignment\n        if (align === 'horizontal') {\n            totalHeight = Math.max(totalHeight, itemSpace.height);\n        } else {\n            totalHeight += itemSpace.height;\n            totalWidth = Math.max(totalWidth, itemSpace.width, titleWidth);\n        }\n        maxItemSpaces = {\n            width: Math.max(itemSpace.width, maxItemSpaces.width),\n            height: Math.max(itemSpace.height, maxItemSpaces.height)\n        };\n        itemSpaces.push(itemSpace);\n        iconSpaces.push(iconSpace);\n    });\n    itemSpaces.forEach((itemSpace, i) => {\n        if (align === 'horizontal') {\n            itemSpace.height = totalHeight;\n            iconSpaces[i].width = maxIconWidth;\n            if (textOrientation === LEFT || textOrientation === RIGHT) {\n                labelSpaces[i].height = totalHeight;\n                iconSpaces[i].height = totalHeight;\n                itemSpaces[i].width = labelSpaces[i].width + maxIconWidth;\n            } else {\n                labelSpaces[i].width = maxIconWidth;\n                itemSpaces[i].width = maxIconWidth;\n                labelSpaces[i].width = maxIconWidth;\n            }\n            totalWidth = Math.max(totalWidth + itemSpaces[i].width);\n        } else {\n            itemSpace.width = Math.max(totalWidth, maxWidth);\n            if (textOrientation === TOP || textOrientation === BOTTOM) {\n                labelSpaces[i].width = totalWidth;\n                iconSpaces[i].width = totalWidth;\n                maxIconWidth = totalWidth;\n            } else {\n                const labelWidth = labelSpaces[i].width;\n                const newLabelWidth = (maxItemSpaces.width - maxIconWidth);\n                iconSpaces[i].width = maxIconWidth;\n                itemSpaces[i].width = labelSpaces[i].width + maxIconWidth;\n                labelSpaces[i].width = Math.max(labelWidth, newLabelWidth);\n                totalWidth = Math.max(totalWidth, itemSpace.width);\n            }\n        }\n    });\n    totalWidth = Math.ceil(Math.max(totalWidth, titleWidth)) + effPadding;\n    totalHeight += titleHeight + effPadding;\n    totalHeight = Math.ceil(totalHeight);\n    return { totalHeight, totalWidth, itemSpaces, iconSpaces, maxItemSpaces, maxIconWidth };\n};\n\n/**\n *\n *\n * @param {*} type\n * @param {*} scaleInfo\n * @param {*} domainInfo\n *\n */\nexport const getDomainBounds = (type, scaleInfo, domainInfo) => {\n    const {\n        scaleFn,\n        scaleType,\n        scale\n    } = scaleInfo;\n    const {\n        domain,\n        domainBounds,\n        domainLeg,\n        steps\n    } = domainInfo;\n    const ele = domain[type === 'lower' ? 0 : domain.length - 1];\n    const step = steps[type === 'lower' ? 0 : steps.length - 1];\n\n    return {\n        [scaleType]: scaleType === 'size' ? scale[scaleFn](ele) * scale.getScaleFactor() : scale[scaleFn](ele),\n        value: domainBounds[type],\n        id: type === 'lower' ? 0 : domainLeg.length + 2,\n        range: [ele, step]\n    };\n};\n","import {\n    makeElement,\n    selectElement,\n    getUniqueId,\n    getSmartComputedStyle,\n    generateGetterSetters,\n    mergeRecursive\n} from 'muze-utils';\nimport { behaviouralActions } from '@chartshq/muze-firebolt';\nimport * as legendBehaviours from '../firebolt/behavioural';\n\nimport { LegendFireBolt } from '../firebolt/legend-firebolt';\nimport { actionBehaviourMap } from '../firebolt/action-behaviour-map';\nimport { physicalActions } from '../firebolt/physical';\nimport * as sideEffects from '../firebolt/side-effects';\nimport { behaviourEffectMap } from '../firebolt/behaviour-effect-map';\nimport { VALUE, PATH, RIGHT, LEFT, TOP, BOTTOM } from '../enums/constants';\nimport { PROPS } from './props';\nimport { DEFAULT_MEASUREMENT, DEFAULT_CONFIG, LEGEND_TITLE } from './defaults';\nimport { getItemMeasures, titleCreator, computeItemSpaces } from './legend-helper';\n\n/**\n * Creates a Legend from the axes of a canvas\n *\n * @param {Object} dependencies : legend data\n * @class SimpleLegend\n */\nexport default class SimpleLegend {\n\n    /**\n     * Creates an instance of Legend.\n     * @param {Object} dependencies Set of dependencies required by the legend\n     * @memberof Legend\n     */\n    constructor (dependencies) {\n        this._data = [];\n        this._metaData = [];\n        this._mount = null;\n        this._fieldName = null;\n        this._title = Object.assign({}, LEGEND_TITLE);\n        this._metaData = null;\n        this._labelManager = dependencies.labelManager;\n        this._cells = dependencies.cells;\n        this._id = getUniqueId();\n        this._measurement = Object.assign({}, this.constructor.defaultMeasurement());\n        this._config = mergeRecursive({}, this.constructor.defaultConfig());\n\n        const dist = dependencies.labelManager.getOriSize('w');\n        this._minTickDistance = { width: dist.width * 3 / 4, height: dist.height / 2 };\n\n        generateGetterSetters(this, PROPS);\n        this._computedStyle = getSmartComputedStyle(selectElement('body'),\n            `${this.config().classPrefix}-legend-item-info`);\n\n        this._firebolt = new LegendFireBolt(this, {\n            behavioural: Object.assign({}, behaviouralActions, legendBehaviours),\n            physical: physicalActions,\n            physicalBehaviouralMap: actionBehaviourMap\n        }, sideEffects, behaviourEffectMap);\n    }\n\n    id () {\n        return this._id;\n    }\n    /**\n     * Initializes an instance of the class\n     *\n     * @static\n     * @param {Object} dependencies Set of dependencies required by the legend\n     * @return {Instance} returns a new instance of Legend\n     * @memberof Legend\n     */\n    static create (dependencies) {\n        return new SimpleLegend(dependencies);\n    }\n\n    /**\n     *\n     *\n     * @static\n     *\n     * @memberof SimpleLegend\n     */\n    static defaultConfig () {\n        return DEFAULT_CONFIG;\n    }\n\n    /**\n     *\n     *\n     * @static\n     *\n     * @memberof SimpleLegend\n     */\n    static defaultMeasurement () {\n        return DEFAULT_MEASUREMENT;\n    }\n\n    /**\n     *\n     *\n     * @readonly\n     * @memberof SimpleLegend\n     */\n    firebolt (...params) {\n        if (params.length) {\n            return this;\n        }\n        return this._firebolt;\n    }\n\n    /**\n     *\n     *\n     *\n     * @memberof Legend\n     */\n    elemType () {\n        return PATH;\n    }\n\n    canvasAlias (...alias) {\n        if (alias.length) {\n            this._canvasAlias = alias[0];\n            return this;\n        }\n        return this._canvasAlias;\n    }\n\n    /**\n     *\n     *\n     *\n     * @memberof Legend\n     */\n    mount (...params) {\n        if (params.length) {\n            this._mount = params[0];\n            this.render();\n            return this;\n        }\n        return this._mount;\n    }\n\n    /**\n     *\n     *\n     * @param {*} effPadding\n     * @param {*} align\n     *\n     * @memberof Legend\n     */\n    getLabelSpaces () {\n        const {\n            item,\n            classPrefix\n        } = this.config();\n        this._labelManager.setStyle(getSmartComputedStyle(selectElement('body'),\n            `${classPrefix}-legend-item-info`));\n        return getItemMeasures(this, VALUE, item.text.formatter);\n    }\n\n    /**\n     * Sets the height and width of a legend based on provided max\n     * height and width and based on its contents\n     *\n     * @return {Instance} Current instance\n     * @memberof Legend\n     */\n    setLegendMeasures () {\n        const {\n            width,\n            height,\n            maxWidth,\n            maxHeight,\n            padding,\n            margin,\n            border\n        } = this.measurement();\n        const {\n            align\n        } = this.config();\n\n        // Effective padding, margin and padding\n        const effPadding = padding * 2;\n        const effBorder = border * 2;\n        const effMargin = margin * 2;\n\n        this.data(this.dataFromScale());\n        // Get space occupied by title\n        const titleSpace = this.getTitleSpace();\n        const titleHeight = titleSpace.height > 0 ? titleSpace.height + effPadding : 0;\n        const titleWidth = titleSpace.width + effPadding;\n\n        // Get space occupied by labels\n        const labelSpaces = this.getLabelSpaces(effPadding, align);\n        const {\n            totalHeight, totalWidth, itemSpaces, iconSpaces, maxItemSpaces, maxIconWidth\n        } = computeItemSpaces(this.config(),\n        { effPadding, titleWidth, labelSpaces, titleHeight, maxWidth, maxHeight }, this.data());\n\n        this.measurement({\n            width: Math.max(totalWidth, width) + effMargin + effBorder,\n            height: Math.max(totalHeight, height) + effMargin + effBorder,\n            labelSpaces,\n            iconSpaces,\n            itemSpaces,\n            maxItemSpaces,\n            maxIconWidth,\n            titleSpaces: {\n                width: Math.min(maxWidth, this.measurement().width) - effMargin - effBorder,\n                height: titleHeight\n            }\n        });\n        return this;\n    }\n\n    /**\n     * Returns the space occupied by the legend title\n     *\n     * @return {Object} Space occupied by title\n     * @memberof Legend\n     */\n    getTitleSpace () {\n        this._labelManager.setStyle(getSmartComputedStyle(selectElement('body'),\n                                                `${this.config().classPrefix}-legend-title`));\n        return this._labelManager.getOriSize(this.title().text ? this.title().text : '');\n    }\n\n    /**\n     * Creates the title for the legend\n     *\n     * @param {DOM} container Container made for the title\n     * @return {Selection} Title and it's node\n     * @memberof Legend\n     */\n    renderTitle (container) {\n        const { titleSpaces, border, padding, width, maxWidth } = this.measurement();\n        const { borderStyle, borderColor } = this.config();\n        return titleCreator(container, this.title(), {\n            height: titleSpaces.height,\n            width,\n            maxWidth,\n            border,\n            padding,\n            borderStyle,\n            borderColor\n        }, this.config());\n    }\n\n    /**\n     * Render the legend with its title\n     *\n     * @param {DOM} mountPoint Point where the legend and title are to be appended\n     * @return {Instance} Current instance of legend\n     * @memberof Legend\n     */\n    render () {\n        const firebolt = this.firebolt();\n        const {\n            classPrefix,\n            borderStyle,\n            borderColor,\n            position\n        } = this.config();\n        const {\n            maxWidth,\n            maxHeight,\n            width,\n            height,\n            margin,\n            border\n        } = this.measurement();\n        const legendContainer = makeElement(selectElement(this.mount()), 'div', [1], `${classPrefix}-legend-box`);\n        let marginPosition;\n        switch (position) {\n        case TOP:\n            marginPosition = `margin-${BOTTOM}`;\n            break;\n        case LEFT:\n            marginPosition = `margin-${RIGHT}`;\n            break;\n        case BOTTOM:\n            marginPosition = `margin-${TOP}`;\n            break;\n        default:\n            marginPosition = `margin-${LEFT}`;\n        }\n        legendContainer.classed(`${classPrefix}-legend-box-${this._id}`, true);\n        legendContainer.style('float', 'left');\n        // set height and width\n        legendContainer.style('width', `${Math.min(maxWidth, width) - margin * 2}px`)\n                        .style('height', `${Math.min(maxHeight, height) - margin * 2}px`)\n                        .style(`${marginPosition}`, `${margin}px`)\n                        .style('border', `${border}px ${borderStyle} ${borderColor}`);\n        this.legendContainer(legendContainer.node());\n\n        // create title\n        this.renderTitle(legendContainer);\n        firebolt.createSelectionSet(this.data().map(d => d.id));\n        return legendContainer;\n    }\n  /**\n     *\n     *\n     * @param {*} data\n     *\n     * @memberof StepLegend\n     */\n    getCriteriaFromData (data) {\n        const fieldName = this.fieldName();\n        const type = this.metaData().getData().schema[0].type;\n        if (type === 'measure') {\n            return {\n                [fieldName]: data.range\n            };\n        }\n        return [[fieldName], [data.rawVal]];\n    }\n}\n","import {\n    LEFT,\n    RIGHT,\n    START,\n    END,\n    TOP,\n    BOTTOM,\n    HORIZONTAL,\n    VERTICAL,\n    CENTER,\n    SHAPE,\n    VALUE\n} from '../enums/constants';\n\nconst legendOrientation = {\n    [HORIZONTAL]: {\n        datasets: data => ({\n            row: [1],\n            column: data\n        }),\n        itemContainerMeasures: (measurement) => {\n            const {\n                itemSpaces,\n                width\n            } = measurement;\n            return {\n                row: {\n                    width: `${width}px`,\n                    padding: `${0}px`\n                },\n                column: {\n                    width: (d, i) => `${itemSpaces[i].width}px`,\n                    padding: `${0}px`\n                }\n            };\n        },\n        getStepSpacesInfo: (measurement) => {\n            const { maxItemSpaces, height } = measurement;\n            return {\n                iconHeight: height,\n                iconWidth: maxItemSpaces.width,\n                stepPadding: {\n                    horizontal: true,\n                    vertical: false\n                }\n            };\n        }\n    },\n    [VERTICAL]: {\n        datasets: data => ({\n            row: data,\n            column: d => [d]\n        }),\n        itemContainerMeasures: (measurement, config) => {\n            const {\n                width\n            } = measurement;\n            const { padding } = config;\n\n            return {\n                row: {\n                    width: `${width}px`,\n                    padding: `${padding}px`\n                },\n                column: {\n                    width: `${width}px`,\n                    padding: `${0}px`\n                }\n            };\n        },\n        getStepSpacesInfo: (measurement) => {\n            const { maxItemSpaces, width } = measurement;\n            return {\n                iconHeight: maxItemSpaces.height,\n                iconWidth: width,\n                stepPadding: {\n                    horizontal: false,\n                    vertical: true\n                }\n            };\n        }\n    }\n};\n\nexport const positionConfig = {\n    [LEFT]: legendOrientation[VERTICAL],\n    [RIGHT]: legendOrientation[VERTICAL],\n    [TOP]: legendOrientation[HORIZONTAL],\n    [BOTTOM]: legendOrientation[HORIZONTAL]\n};\n\nexport const alignmentMap = {\n    [LEFT]: END,\n    [RIGHT]: START,\n    [TOP]: CENTER,\n    [BOTTOM]: CENTER\n};\n\n// Reverses data for step legend\nexport const stepData = data => ({\n    [LEFT]: data.reverse(),\n    [RIGHT]: data.reverse(),\n    [TOP]: data,\n    [BOTTOM]: data\n});\n\n// Changes the item layout based on the position of the text\nexport const itemStack = {\n    [LEFT]: [VALUE, SHAPE],\n    [RIGHT]: [SHAPE, VALUE],\n    [TOP]: [VALUE, SHAPE],\n    [BOTTOM]: [SHAPE, VALUE]\n};\n","import { makeElement, selectElement, applyStyle } from 'muze-utils';\nimport { ICON_MAP } from './defaults';\nimport { positionConfig, alignmentMap, itemStack } from './position-config';\nimport {\n    WIDTH,\n    HEIGHT,\n    CENTER,\n    VALUE,\n    RECT,\n    LEFT,\n    RIGHT\n} from '../enums/constants';\n\n/**\n *\n *\n * @param {*} container\n * @param {*} data\n * @param {*} legendInstance\n * @param {*} align\n *\n */\nexport const getItemContainers = (container, data, legendInstance) => {\n    const measurement = legendInstance.measurement();\n    const config = legendInstance.config();\n    const {\n        itemSpaces\n    } = measurement;\n    const {\n        classPrefix,\n        position\n    } = config;\n    const positionObj = positionConfig[position];\n    const datasets = positionObj.datasets(data);\n    const measures = positionObj.itemContainerMeasures(measurement, config);\n\n    const rows = makeElement(container, 'div', datasets.row, `${classPrefix}-legend-row`);\n    rows.style(HEIGHT, (d, i) => `${itemSpaces[i].height}px`);\n    rows.style(WIDTH, measures.row.width);\n    rows.style('padding', measures.row.padding);\n\n    const columns = makeElement(rows, 'div', datasets.column, `${classPrefix}-legend-columns`);\n    columns.style(WIDTH, measures.column.width);\n    columns.style('padding', measures.column.padding);\n\n    return columns;\n};\n\n/**\n *\n *\n * @param {*} container\n * @param {*} classPrefix\n * @param {*} data\n *\n * @memberof DiscreteLegend\n */\nexport const createLegendSkeleton = (context, container, classPrefix, data) => {\n    let gradWidth = 0;\n    let gradHeight = 0;\n    let maxGradHeight = 0;\n    let maxGradWidth = 0;\n    const measurement = context.measurement();\n    const {\n            margin,\n            border,\n            titleSpaces,\n            width,\n            height,\n            maxWidth,\n            maxHeight\n        } = measurement;\n\n    gradHeight = height - (titleSpaces.height + 2 * margin + 2 * border);\n    gradWidth = width - (margin * 2 + border * 2);\n\n    maxGradHeight = maxHeight - (titleSpaces.height + margin * 2 + border * 2);\n    maxGradWidth = maxWidth - (margin * 2 + border * 2);\n\n    let legendBody = makeElement(container, 'div', [1], `${classPrefix}-legend-body`);\n    legendBody.select(`.${classPrefix}-legend-overflow`).remove();\n        // Create a div with scroll when overflow\n    if (maxGradWidth && maxGradWidth < gradWidth) {\n        legendBody = legendBody.style(WIDTH, `${maxGradWidth}px`).style('overflow-x', 'scroll');\n    }\n        // Create a div with scroll when overflow\n    if (maxGradHeight && maxGradHeight < gradHeight) {\n        legendBody.style(HEIGHT, `${maxGradHeight}px`).style('overflow-y', 'scroll');\n    }\n\n    legendBody = makeElement(legendBody, 'div', [1], `${classPrefix}-legend-overflow`);\n\n    legendBody.style(WIDTH, `${gradWidth}px`);\n    legendBody.style(HEIGHT, `${gradHeight}px`);\n\n    const legendItem = getItemContainers(legendBody, data, context);\n    return { legendItem };\n};\n\n/**\n * Creates legend item based on alignment and text orientation\n *\n * @param {Selection} container Point where items are to be mounted\n * @return {Instance} Current instance\n * @memberof Legend\n */\nexport const createItemSkeleton = (context, container) => {\n    const {\n        classPrefix,\n        item\n    } = context.config();\n    const textOrientation = item.text.orientation;\n\n    const stack = itemStack[textOrientation];\n    const itemSkeleton = makeElement(container, 'div', (d, i) => stack.map(e => [e, d[e], d.color, d.size,\n        d.value, context.fieldName(), i]), `${classPrefix}-legend-item-info`);\n\n    const alignClass = alignmentMap[textOrientation];\n\n    itemSkeleton.classed(alignClass, true);\n    return { itemSkeleton };\n};\n\n/**\n *\n *\n * @param {*} measureType\n * @param {*} stepColorCheck\n */\nexport const applyItemStyle = (item, measureType, stepColorCheck, context) => {\n    const {\n        padding,\n        labelSpaces,\n        iconSpaces,\n        maxIconWidth\n    } = context.measurement();\n    const diff = stepColorCheck ? -padding * 2 : 0;\n\n    if (item[0] === VALUE) {\n        return `${labelSpaces[item[6]][measureType]}px`;\n    }\n    return `${measureType === 'width' && !stepColorCheck ? maxIconWidth : iconSpaces[item[6]][measureType] - diff}px`;\n};\n\n/**\n *\n *\n * @param {*} str\n *\n */\nconst checkPath = (str) => {\n    if (/^[mzlhvcsqta]\\s*[-+.0-9][^mlhvzcsqta]+/i.test(str) && /[\\dz]$/i.test(str) && str.length > 4) {\n        return true;\n    }\n    return false;\n};\n\n/**\n *\n *\n * @param {*} d\n * @param {*} elem\n */\nconst createShape = function (d, elem, defaultIcon, width, height) {\n    const groupElement = elem;\n    // const { shape, size, update } = d;\n    const size = d[3] || Math.min(width, height) * Math.PI;\n    const shape = d[1] || defaultIcon;\n\n    if (shape instanceof Promise) {\n        shape.then((res) => {\n            d.shape = res;\n            return createShape(d, elem);\n        });\n    } else if (shape instanceof Element) {\n        let newShape = shape.cloneNode(true);\n\n        if (newShape.nodeName.toLowerCase() === 'img') {\n            const src = newShape.src || newShape.href;\n            newShape = document.createElementNS('http://www.w3.org/2000/svg', 'image');\n            newShape.setAttribute('href', src);\n        }\n        const shapeElement = selectElement(newShape);\n        shapeElement.attr('transform', `scale(${size / 100})`);\n        return selectElement(groupElement.node().appendChild(newShape));\n    } else if (typeof shape === 'string') {\n        let pathStr;\n        if (checkPath(shape)) {\n            pathStr = shape;\n        } else {\n            pathStr = ICON_MAP(shape).size(size)();\n        }\n        return makeElement(groupElement, 'path', data => [data]).attr('d', pathStr);\n    }\n    d[1] = 'circle';\n    return createShape(d, elem, 'circle');\n};\n\n/**\n * Returns the icon of the legend item\n *\n * @param {Object} datum Data property attached to the item\n * @param {number} width width of the item\n * @param {number} height height of the item\n * @return {Object|string} returns the path string or the string name of the icon\n * @memberof Legend\n */\nexport const getLegendIcon = (datum, width, height, defaultIcon) => {\n    const icon = ICON_MAP(datum[1]);\n\n    if (icon) {\n        return icon.size(datum[3] || Math.min(width, height) * Math.PI);\n    }\n    return ICON_MAP(datum[3] ? 'circle' : defaultIcon).size(datum[3] || Math.min(width, height) * Math.PI);\n};\n\n/**\n *\n *\n */\nexport const renderIcon = (icon, container, datum, context) => {\n    const {\n        classPrefix,\n        iconHeight,\n        iconWidth,\n        maxIconWidth,\n        padding,\n        color\n    } = context;\n    const svg = makeElement(container, 'svg', f => [f], `${classPrefix}-legend-icon-svg`)\n    .attr(WIDTH, maxIconWidth)\n    .attr(HEIGHT, iconHeight)\n    .style(WIDTH, `${maxIconWidth}px`)\n    .style(HEIGHT, `${iconHeight}px`);\n\n    if (icon !== RECT) {\n        const group = makeElement(svg, 'g', [datum[1]], `${classPrefix}-legend-icon`);\n        createShape(datum, group, datum[3] ? 'circle' : 'square', iconWidth, iconHeight)\n                        .attr('transform', `translate(${maxIconWidth / 2 - padding} ${iconHeight / 2})`)\n                        .attr('fill', datum[2] || color);\n    } else {\n        makeElement(svg, RECT, [datum[1]], `${classPrefix}-legend-icon`)\n                        .attr('x', 0)\n                        .attr('y', 0)\n                        .attr(WIDTH, maxIconWidth)\n                        .attr(HEIGHT, iconHeight)\n                        .attr('fill', datum[2] || color);\n    }\n};\n\n/**\n * Renders the items in the legend i.e, icon and text\n *\n * @param {DOM} container Point where item is to be mounted\n * @memberof Legend\n */\nexport const renderDiscreteItem = (context, container) => {\n    const labelManager = context._labelManager;\n    const {\n           item,\n           classPrefix\n    } = context.config();\n    const {\n        maxIconWidth,\n        padding\n    } = context.measurement();\n    const {\n            width: iconWidth,\n            height: iconHeight,\n            color,\n            className\n        } = item.icon;\n\n    const textOrientation = item.text.orientation;\n    const formatter = item.text.formatter;\n\n    labelManager.useEllipsesOnOverflow(true);\n    applyStyle(container, {\n        width: d => applyItemStyle(d, WIDTH, false, context),\n        height: d => applyItemStyle(d, HEIGHT, false, context),\n        'text-align': CENTER,\n        padding: `${padding}px`\n    });\n\n    labelManager.setStyle(context._computedStyle);\n    const dataArr = container.data();\n    container.each(function (d, i) {\n        if (d[0] === VALUE) {\n            selectElement(this).text(formatter(d[1], i, dataArr, context))\n                            .style(`padding-${textOrientation === RIGHT ? LEFT : RIGHT}`, '0px');\n        } else {\n            // const icon = getLegendIcon(d, iconWidth, iconHeight, type);\n            selectElement(this).classed(`${classPrefix}-${className}`, true);\n            selectElement(this).classed(`${classPrefix}-${className}-${i}`, true);\n            renderIcon('circle', selectElement(this), d, {\n                classPrefix,\n                iconWidth,\n                // iconWidth: 2 * Math.sqrt(d[3] / Math.PI) || iconWidth,\n                iconHeight,\n                maxIconWidth,\n                padding,\n                color\n            });\n        }\n    });\n};\n\n/**\n* Renders the items in the legend i.e, icon and text\n*\n* @param {DOM} container Point where item is to be mounted\n* @memberof Legend\n*/\nexport const renderStepItem = (context, container) => {\n    const labelManager = context._labelManager;\n    const {\n      item,\n      position,\n      classPrefix\n   } = context.config();\n    const {\n      maxItemSpaces,\n      maxIconWidth,\n      padding\n   } = context.measurement();\n    const {\n       width,\n       height,\n       color\n   } = item.icon;\n    const {\n        formatter\n   } = item.text;\n\n    labelManager.useEllipsesOnOverflow(true);\n    const { iconHeight, iconWidth, stepPadding } = positionConfig[position].getStepSpacesInfo({\n        maxItemSpaces, height, width\n    });\n\n    applyStyle(container, {\n        width: d => applyItemStyle(d, WIDTH, stepPadding.horizontal, context),\n        height: d => applyItemStyle(d, HEIGHT, stepPadding.vertical, context),\n        'text-align': 'center',\n        padding: `${padding}px`\n    });\n\n    labelManager.setStyle(context._computedStyle);\n    const dataArr = container.data();\n    container.each(function (d, i) {\n        if (d[0] === VALUE) {\n            selectElement(this).text(formatter(d[1], i, dataArr, context));\n        } else {\n            renderIcon(RECT, selectElement(this), d, {\n                classPrefix,\n                iconWidth,\n                iconHeight,\n                maxIconWidth,\n                color\n            });\n        }\n    });\n};\n","import {\n    FieldType,\n    DimensionSubtype,\n    formatTemporal\n} from 'muze-utils';\nimport SimpleLegend from './simple-legend';\nimport { DISCRETE, LEFT, SIZE } from '../enums/constants';\nimport { getScaleInfo } from './legend-helper';\nimport { createLegendSkeleton, createItemSkeleton, renderDiscreteItem } from './renderer';\nimport '../styles.scss';\n\n/**\n * Creates a Legend from the axes of a canvas\n *\n * @param {Object} dependencies : legend data\n * @class Legend\n */\nexport default class DiscreteLegend extends SimpleLegend {\n\n    /**\n     * Initializes an instance of the class\n     *\n     * @static\n     * @param {Object} dependencies Set of dependencies required by the legend\n     * @return {Instance} returns a new instance of Legend\n     * @memberof Legend\n     */\n    static create (dependencies) {\n        return new DiscreteLegend(dependencies);\n    }\n\n    /**\n     *\n     *\n     * @static\n     *\n     * @memberof DiscreteLegend\n     */\n    static type () {\n        return DISCRETE;\n    }\n\n    /**\n     *\n     *\n     * @param {*} scale\n     *\n     * @memberof DiscreteLegend\n     */\n    dataFromScale () {\n        const scale = this.scale();\n        const { scaleType, domain, scaleFn } = getScaleInfo(scale);\n        let domainForLegend = [...new Set(domain)];\n        const field = this.metaData().getFieldspace().fields[0];\n        const { type, subtype } = field.schema();\n\n        domainForLegend = domainForLegend.map((ele, i) => {\n            let value = 0;\n            let range = 0;\n            const rawVal = domainForLegend[i];\n            if (type === FieldType.MEASURE) {\n                value = (+domainForLegend[i]).toFixed(0);\n                const nextVal = domainForLegend[i + 1] ? +domainForLegend[i + 1] : +value;\n                range = [value, nextVal.toFixed(0)];\n            } else {\n                let domainVal = rawVal;\n                if (subtype === DimensionSubtype.TEMPORAL) {\n                    domainVal = formatTemporal(domainForLegend[i], field.minimumConsecutiveDifference());\n                }\n                value = domainVal;\n                range = [domainVal];\n            }\n            return {\n                [scaleType]: scale[scaleFn](ele),\n                value,\n                id: i,\n                range,\n                rawVal\n            };\n        }).filter(d => d.value !== null);\n\n        domainForLegend = scaleType === SIZE ? domainForLegend.sort((a, b) => a[scaleType] - b[scaleType])\n            : domainForLegend;\n        return domainForLegend;\n    }\n\n    /**\n     * Render the legend with its title\n     *\n     * @param {DOM} mountPoint Point where the legend and title are to be appended\n     * @return {Instance} Current instance of legend\n     * @memberof Legend\n     */\n    render () {\n        const firebolt = this.firebolt();\n        const data = this.data();\n        const { classPrefix } = this.config();\n        const legendContainer = super.render(this.mount());\n        // create Legend\n        const { legendItem } = createLegendSkeleton(this, legendContainer, classPrefix, data);\n        const { itemSkeleton } = createItemSkeleton(this, legendItem);\n        renderDiscreteItem(this, itemSkeleton);\n        legendContainer.selectAll('div').style('float', LEFT);\n        firebolt.mapActionsAndBehaviour();\n        firebolt.createSelectionSet(this.data().map(d => d.id));\n        return legendContainer;\n    }\n}\n","import { makeElement, applyStyle } from 'muze-utils';\nimport { ContinousAxis } from '@chartshq/muze-axis';\nimport { BOTTOM, RIGHT } from '../enums/constants';\nimport { ALIGN } from './defaults';\nimport '../styles.scss';\n\n/**\n *\n *\n * @param {*} data\n *\n */\nexport const getGradientDomain = (data) => {\n    if (typeof data[0].value === 'number') {\n        return data.reduce((accumulator, currentValue) =>\n            [Math.min(currentValue.value, accumulator[0]), Math.max(currentValue.value, accumulator[1])],\n                [Number.MAX_VALUE, Number.MIN_VALUE]);\n    }\n    return data.map(e => e.value);\n};\n\n/**\n *\n *\n * @param {*} container\n * @param {*} data\n * @param {*} domain\n *\n */\nexport const makeLinearGradient = (container, data, domain) => {\n    const defs = makeElement(container, 'defs', [1]);\n    const linearGradient = makeElement(defs, 'linearGradient', [1])\n                .attr('id', 'linear-gradient')\n                .attr('x1', '0%')\n                .attr('y2', '0%');\n    makeElement(linearGradient, 'stop', data, 'stop-gradient')\n                    .attr('offset', d => `${(d.value - domain[0]) * 100 / (domain[1] - domain[0])}%`)\n                    .attr('stop-color', d => d.color);\n    return linearGradient;\n};\n\n/**\n * Creates an axis cell with a linear axis for computing space and\n * creating gradient legend\n *\n * @return {AxisCell} Instance of Axis Cell for the gradient axis\n * @memberof Legend\n */\nexport const createAxis = (context) => {\n    const data = context.data();\n    const { align } = context.config();\n    const AxisCell = context._cells.AxisCell;\n    const newAxis = new ContinousAxis({\n        id: `legend-${context._id}`,\n        orientation: align === ALIGN.VERTICAL ? RIGHT : BOTTOM,\n        style: context._computedStyle,\n        nice: false,\n        showAxisName: false,\n        tickValues: data.map(d => d.value),\n        fixedBaseline: false,\n        labels: {\n            rotation: 0\n        }\n    }, { labelManager: context._labelManager });\n\n    newAxis.domain(getGradientDomain(data));\n    newAxis.range([1, 1]);\n    return new AxisCell().source(newAxis).config({\n        margin: { left: 0, bottom: 0, top: 0, right: 0 }\n    });\n};\n\n/**\n *\n *\n * @param {*} container\n * @param {*} data\n * @param {*} classPrefix\n *\n * @memberof GradientLegend\n */\nconst createLegendSkeleton = (container, classPrefix, data) => {\n    const domain = getGradientDomain(data);\n    const legendContainer = makeElement(container, 'div', [1], `${classPrefix}-legend-body`);\n    const legendGradSvg = makeElement(legendContainer, 'svg', [1], `${classPrefix}-gradient`);\n    const legendGradCont = makeElement(legendGradSvg, 'g', [1], `${classPrefix}-gradient-group`);\n    const linearGradient = makeLinearGradient(legendGradSvg, data, domain);\n    const legendRect = makeElement(legendGradCont, 'rect', [1], `${classPrefix}-gradient-rect`);\n\n    return {\n        legendContainer,\n        legendGradCont,\n        legendGradSvg,\n        linearGradient,\n        legendRect\n    };\n};\n\n/**\n * Renders the axis for the gradient\n *\n * @param {Selection} container Point where axis is to be mounted\n * @param {number} height Height for axis\n * @param {number} width Width for axis\n * @memberof Legend\n */\nexport const renderAxis = (context, container, height, width) => {\n    const axis = context.axis();\n\n    axis.setAvailableSpace(width, height);\n    axis.render(container.node());\n    axis.source().render();\n};\n\n/**\n * Renders gradient legends\n *\n * @param {Selection} container Point where the legend is to be appended\n * @memberof GradientLegend\n */\nexport const renderGradient = (context, container) => {\n    let gradHeight = 0;\n    let gradWidth = 0;\n    const {\n        align,\n        classPrefix,\n        item\n    } = context.config();\n    const data = context.data();\n    // Create the skeleton for the legend\n    const {\n        legendContainer,\n        legendGradSvg,\n        legendGradCont,\n        linearGradient,\n        legendRect\n    } = createLegendSkeleton(container, classPrefix, data);\n    const labelDim = context.axis().source().getAxisDimensions().tickDimensions;\n    const {\n        padding,\n        margin,\n        border,\n        titleSpaces,\n        maxItemSpaces,\n        maxHeight,\n        maxWidth,\n        height,\n        width\n    } = context.measurement();\n    const gradientDimensions = {};\n\n    gradHeight = Math.floor(Math.min(height, maxHeight) - (titleSpaces.height + 2 * margin + 2 * border));\n    gradWidth = Math.floor(Math.min(width, maxWidth) - (margin * 2 + border * 2));\n\n    if (align === ALIGN.HORIZONTAL) {\n        gradientDimensions.height = item.icon.height;\n        gradientDimensions.width = gradWidth - 2 * padding - labelDim.width / 2;\n        linearGradient.attr('x2', '100%').attr('y1', '0%');\n        legendGradCont.attr('transform', `translate( ${labelDim.width / 2} 0)`);\n        renderAxis(context, legendContainer, gradHeight - item.icon.height - padding, gradWidth - 2 * padding - 1);\n\n        applyStyle(legendContainer, {\n            height: `${maxItemSpaces.height + border + padding}px`,\n            width: `${Math.min(width, maxWidth)}px`,\n            padding: `${padding}px`\n        });\n\n        legendRect.attr('height', gradientDimensions.height);\n        legendRect.attr('width', gradientDimensions.width - labelDim.width / 2);\n    } else {\n        gradientDimensions.height = gradHeight - 2 * padding - labelDim.height / 2;\n        gradientDimensions.width = item.icon.width;\n        linearGradient.attr('x2', '0%').attr('y1', '100%');\n        legendGradCont.attr('transform', `translate(0 ${labelDim.height / 2})`);\n        renderAxis(context, legendContainer, gradHeight - 2 * padding - 1, gradWidth - item.icon.width - padding * 2);\n\n        applyStyle(legendContainer, {\n            height: `${Math.min(height, maxHeight)}px`,\n            width: `${maxWidth}px`,\n            padding: `${padding}px`\n        });\n        legendRect.attr('height', gradientDimensions.height - labelDim.height / 2);\n        legendRect.attr('width', gradientDimensions.width);\n    }\n\n    // Apply Styles to the legend plot area\n    applyStyle(legendGradSvg, {\n        height: `${gradientDimensions.height}px`,\n        width: `${gradientDimensions.width}px`\n    });\n\n        // Apply styles to the legend rect\n    applyStyle(legendRect, {\n        fill: 'url(#linear-gradient)'\n    });\n    legendGradSvg.attr('height', gradientDimensions.height);\n    legendGradSvg.attr('width', gradientDimensions.width);\n\n    context.measurement({\n        gradientDimensions\n    });\n    context._legendGradientSvg = legendGradSvg;\n    return context;\n};\n","import SimpleLegend from './simple-legend';\nimport { getScaleInfo, getInterpolatedData, getInterpolatedArrayData } from './legend-helper';\nimport { GRADIENT, LEFT, SIZE } from '../enums/constants';\nimport { renderGradient, createAxis } from './gradient-helper';\nimport '../styles.scss';\n\n/**\n * Creates a Legend from the axes of a canvas\n *\n * @param {Object} dependencies : legend data\n * @class Legend\n */\nexport default class GradientLegend extends SimpleLegend {\n\n    /**\n     * Initializes an instance of the class\n     *\n     * @static\n     * @param {Object} dependencies Set of dependencies required by the legend\n     * @return {Instance} returns a new instance of Legend\n     * @memberof Legend\n     */\n    static create (dependencies) {\n        return new GradientLegend(dependencies);\n    }\n\n    /**\n     *\n     *\n     * @static\n     *\n     * @memberof GradientLegend\n     */\n    static type () {\n        return GRADIENT;\n    }\n\n    /**\n     *\n     *\n     * @param {*} axis\n     *\n     * @memberof GradientLegend\n     */\n    axis (...axis) {\n        if (axis.length) {\n            this._axis = axis[0];\n            return this;\n        }\n        return this._axis;\n    }\n\n    /**\n     *\n     *\n     * @param {*} scale\n     *\n     * @memberof GradientLegend\n     */\n    dataFromScale () {\n        let domainForLegend = [];\n        const scale = this.scale();\n        const { scaleType, domain, steps, scaleFn } = getScaleInfo(scale);\n\n        // defining scaleParams\n        const scaleParams = {\n            smartLabel: this.labelManager(),\n            measures: this.measurement(),\n            alignment: this.config().position,\n            minTickDistance: this.minTickDistance()\n        };\n\n        if (steps instanceof Array) {\n            if (domain[0] < steps[0]) {\n                domainForLegend[0] = domain[0];\n            }\n            domainForLegend = [...domainForLegend, ...steps];\n            if (domain[domain.length - 1] > steps[steps.length - 1]) {\n                domainForLegend.push(domain[1]);\n            }\n            // Sorting the domain Array\n            domainForLegend = [...new Set(domainForLegend)].sort((a, b) => a - b);\n\n            domainForLegend = getInterpolatedArrayData(domainForLegend, scaleParams);\n        } else {\n            domainForLegend = getInterpolatedData(domain, steps - 1, scaleParams);\n        }\n        domainForLegend = [...new Set(domainForLegend)].sort((a, b) => a - b);\n\n        return domainForLegend.map((ele, i) => {\n            const value = domainForLegend[i];\n            return {\n                [scaleType]: scaleType === SIZE ? scale[scaleFn](ele) * scale.getScaleFactor()\n                    : scale[scaleFn](Math.floor(ele)),\n                value: +value.toFixed(2),\n                id: i\n            };\n        }).filter(d => d.value !== null);\n    }\n\n    /**\n     *\n     *\n     * @param {*} effPadding\n     * @param {*} align\n     *\n     * @memberof Legend\n     */\n    getLabelSpaces (effPadding) {\n        this.config({\n            item: {\n                text: {\n                    orientation: this.config().position\n                }\n            }\n        });\n        const axis = createAxis(this);\n        const axisSpace = axis.getLogicalSpace();\n        const space = { width: axisSpace.width - effPadding, height: axisSpace.height - effPadding };\n        const axisDomainLength = axis.source().domain().length;\n        const labelSpaces = new Array(axisDomainLength).fill(space);\n\n        this.axis(axis);\n        return labelSpaces;\n    }\n\n    /**\n     *\n     *\n     *\n     * @memberof GradientLegend\n     */\n    getDrawingContext () {\n        return {\n            svgContainer: this._legendGradientSvg\n        };\n    }\n\n    /**\n     * Render the legend with its title\n     *\n     * @param {DOM} mountPoint Point where the legend and title are to be appended\n     * @return {Instance} Current instance of legend\n     * @memberof Legend\n     */\n    render () {\n        const firebolt = this.firebolt();\n        const legendContainer = super.render(this.mount());\n        // create Legend\n        renderGradient(this, legendContainer);\n        legendContainer.selectAll('div').style('float', LEFT);\n        firebolt.mapActionsAndBehaviour();\n        firebolt.createSelectionSet(this.data().map(d => d.id));\n        return legendContainer;\n    }\n /**\n     *\n     *\n     * @param {*} data\n     *\n     * @memberof SimpleLegend\n     */\n    getCriteriaFromData (data) {\n        return [[this.fieldName()], [data.value]];\n    }\n}\n","import SimpleLegend from './simple-legend';\nimport {\n    getScaleInfo,\n    getInterpolatedData,\n    getDomainBounds\n} from './legend-helper';\nimport {\n    createLegendSkeleton,\n    createItemSkeleton,\n    renderStepItem\n} from './renderer';\nimport { STEP, RECT, LEFT, SIZE, UPPER, LOWER } from '../enums/constants';\nimport { stepData } from './position-config';\nimport '../styles.scss';\n\n/**\n * Creates a Legend from the axes of a canvas\n *\n * @param {Object} dependencies : legend data\n * @class Legend\n */\nexport default class StepLegend extends SimpleLegend {\n\n    /**\n     * Initializes an instance of the class\n     *\n     * @static\n     * @param {Object} dependencies Set of dependencies required by the legend\n     * @return {Instance} returns a new instance of Legend\n     * @memberof Legend\n     */\n    static create (dependencies) {\n        return new StepLegend(dependencies);\n    }\n\n    /**\n     *\n     *\n     * @static\n     *\n     * @memberof StepLegend\n     */\n    static type () {\n        return STEP;\n    }\n\n    /**\n     *\n     *\n     * @param {*} scale\n     *\n     * @memberof StepLegend\n     */\n    dataFromScale () {\n        let domainLeg = [];\n        const scale = this.scale();\n        const { scaleType, domain, steps, scaleFn } = getScaleInfo(scale);\n\n        const { formatter } = this.config();\n        const domainBounds = {\n            lower: null, upper: null\n        };\n\n        // defining scaleParams\n        const scaleParams = {\n            smartLabel: this.labelManager(),\n            measures: this.measurement(),\n            alignment: this.config().position,\n            minTickDistance: this.minTickDistance()\n        };\n\n        if (steps instanceof Array) {\n            if (domain[0] < steps[0]) {\n                domainBounds.lower = [`${formatter.bounds.lower} ${steps[0]}`];\n            }\n            domainLeg = [...domainLeg, ...steps];\n            if (domain[domain.length - 1] > steps[steps.length - 1]) {\n                domainBounds.upper = [`${formatter.bounds.upper} ${steps[steps.length - 1]}`];\n            }\n        } else {\n            domainLeg = getInterpolatedData(domain, steps, scaleParams);\n        }\n\n        domainLeg = [...new Set(domainLeg)].sort((a, b) => a - b);\n        domainLeg = domainLeg.map((ele, i) => {\n            let value = null;\n            if (i < domainLeg.length - 1) {\n                value = `${(ele.toFixed(1))} - ${(+domainLeg[i + 1].toFixed(1))}`;\n            }\n            return {\n                [scaleType]: scaleType === SIZE ? scale[scaleFn](ele) * scale.getScaleFactor() : scale[scaleFn](ele),\n                value,\n                id: i + 1,\n                range: [ele, domainLeg[i + 1]]\n            };\n        }).filter(d => d.value !== null);\n\n        if (domainBounds.lower) {\n            const lowerBounds = getDomainBounds(LOWER, { scale, scaleFn, scaleType },\n                { domain, steps, domainBounds });\n            domainLeg = [lowerBounds, ...domainLeg];\n        }\n        if (domainBounds.upper) {\n            const upperBounds = getDomainBounds(UPPER, { scale, scaleFn, scaleType },\n            { domain, steps, domainBounds, domainLeg });\n            domainLeg = [...domainLeg, upperBounds];\n        }\n        return domainLeg;\n    }\n\n     /**\n     *\n     *\n     * @param {*} effPadding\n     * @param {*} align\n     *\n     * @memberof Legend\n     */\n    getLabelSpaces (effPadding, align) {\n        this.config({\n            item: {\n                text: {\n                    orientation: this.config().position\n                }\n            }\n        });\n        return super.getLabelSpaces(effPadding, align);\n    }\n\n    /**\n     *\n     *\n     *\n     * @memberof Legend\n     */\n    elemType () {\n        return RECT;\n    }\n\n     /**\n     * Render the legend with its title\n     *\n     * @param {DOM} mountPoint Point where the legend and title are to be appended\n     * @return {Instance} Current instance of legend\n     * @memberof Legend\n     */\n    render () {\n        const firebolt = this.firebolt();\n        const { classPrefix, position } = this.config();\n        const data = stepData(this.data())[position];\n\n        const legendContainer = super.render(this.mount());\n\n        // create Legend\n        const { legendItem } = createLegendSkeleton(this, legendContainer, classPrefix, data);\n        const { itemSkeleton } = createItemSkeleton(this, legendItem);\n\n        renderStepItem(this, itemSkeleton);\n        legendContainer.selectAll('div').style('float', LEFT);\n        firebolt.mapActionsAndBehaviour();\n        firebolt.createSelectionSet(this.data().map(d => d.id));\n        return legendContainer;\n    }\n\n    /**\n     *\n     *\n     * @param {*} data\n     *\n     * @memberof StepLegend\n     */\n    getCriteriaFromData (data) {\n        const fieldName = this.fieldName();\n        return {\n            [fieldName]: data.range\n        };\n    }\n}\n","import { GradientLegend, DiscreteLegend, StepLegend } from '@chartshq/muze-legend';\n\n/**\n * Contants to be used as attr\n */\nexport const ROWS = 'rows';\nexport const COLUMNS = 'columns';\nexport const DATA = 'data';\nexport const COLOR = 'color';\nexport const SHAPE = 'shape';\nexport const SIZE = 'size';\nexport const DETAIL = 'detail';\nexport const LAYERS = 'layers';\nexport const TRANSFORM = 'transform';\nexport const INITIALIZED = 'isInitialized';\nexport const SOURCE = 'source';\nexport const WIDTH = 'width';\nexport const HEIGHT = 'height';\nexport const PADDING = 'padding';\nexport const BORDER = 'border';\nexport const MARGIN = 'margin';\nexport const CONFIG = 'config';\nexport const MOUNT = 'mount';\nexport const CANVAS_UPDATED = 'canvasUpdated';\nexport const CLASSPREFIX = 'classPrefix';\nexport const POLICIES = '_policies';\nexport const LEGEND = 'legend';\nexport const TITLE = 'title';\nexport const SUB_TITLE = 'subtitle';\nexport const RESOLVE = 'resolve';\nexport const DISCRETE = 'discrete';\nexport const STEP_COLOR = 'step-color';\nexport const GRADIENT = 'gradient';\nexport const LINEAR = 'linear';\nexport const ORDINAL = 'ordinal';\nexport const MUZE_PREFIX = 'muze';\n\nexport const TITLE_TEMPLATE_NOT_ALLOWED_TAGS = [\n    'script',\n    'style'\n];\n\nexport const LEGEND_TYPE_MAP = {\n    [`${ORDINAL}-${true}-${COLOR}`]: DiscreteLegend,\n    [`${ORDINAL}-${true}-${SIZE}`]: DiscreteLegend,\n    [`${ORDINAL}-${true}-${SHAPE}`]: DiscreteLegend,\n    [`${ORDINAL}-${false}-${COLOR}`]: DiscreteLegend,\n    [`${ORDINAL}-${false}-${SHAPE}`]: DiscreteLegend,\n    [`${ORDINAL}-${false}-${SIZE}`]: DiscreteLegend,\n    [`${LINEAR}-${false}-${SIZE}`]: DiscreteLegend,\n    [`${LINEAR}-${true}-${SIZE}`]: DiscreteLegend,\n    [`${LINEAR}-${false}-${SHAPE}`]: DiscreteLegend,\n    [`${LINEAR}-${true}-${COLOR}`]: StepLegend,\n    [`${LINEAR}-${false}-${COLOR}`]: GradientLegend\n};\n\nexport const LEFT = 'left';\nexport const RIGHT = 'right';\nexport const BOTTOM = 'bottom';\nexport const TOP = 'top';\nexport const GROUP = 'group';\nexport const LAYOUT = 'layout';\nexport const RETINAL = 'retinal';\nexport const DIMENSION = 'dimension';\nexport const MEASURE = 'measure';\nexport const VERTICAL = 'vertical';\nexport const HORIZONTAL = 'horizontal';\nexport const HORIZONTAL_CENTER = 'h-center';\nexport const VERTICAL_CENTER = 'v-center';\nexport const HIDDEN = 'hidden';\nexport const OVERFLOW = 'overflow';\nexport const OVERFLOW_X = 'overflow-x';\nexport const OVERFLOW_Y = 'overflow-y';\nexport const AUTO = 'auto';\nexport const VISIBLE = 'visible';\nexport const VERTICAL_SCROLL_BAR = 'verticalScrollBar';\nexport const HORIZONTAL_SCROLL_BAR = 'horizontalScrollBar';\nexport const GRID = 'grid';\n","import { ComposedVars, SimpleVariable } from '@chartshq/visual-group';\nimport { TITLE_TEMPLATE_NOT_ALLOWED_TAGS } from './constants';\n\n/**\n * This method creates a new composed variable instance from multiple variables. This is required when we have multiple\n * variables on a single axis and the union of domain of all the variables needs to be set on the axis.\n *\n * To create a new composed variable from multiple fields,\n * ```\n *  const sharedVar = share('open', 'high', 'low', 'close');\n *  canvas.rows([sharedVar])\n *      .columns(['date']);\n * ```\n *\n * @module Operators\n * @public\n * @function share\n * @param {Array} vars Variable names.\n *\n * @return {ComposedVars} Instance of composed variable\n */\nexport const share = (...vars) => new ComposedVars(...vars.map(variable => new SimpleVariable(variable)));\n\n/**\n *\n *\n * @param {*} node\n *\n */\nfunction treeShakeNode (node) {\n    if (node.nodeType !== Node.ELEMENT_NODE) { return; }\n\n    if (TITLE_TEMPLATE_NOT_ALLOWED_TAGS.indexOf(node.tagName.toLowerCase()) !== -1) {\n        node.parentNode.removeChild(node);\n    } else {\n        for (const childNode of node.childNodes) {\n            treeShakeNode(childNode);\n        }\n    }\n}\n\n/**\n * A string template tagged function which sanitizes input html formatted string according to the allowed html tags.\n * This is used to render html in canvas components like title and tooltip.\n *\n * To render html in canvas components,\n * ```\n *     canvas.title(html`<span style=font-size:20px;>TITLE</span>`);\n * ```\n *\n * @public\n * @module Operators\n * @function html\n * @param {Array.<string>} strings - The string parts of the template.\n * @param {Array} exps - The list of evaluated expression values.\n *\n * @return {Function} Returns a function which returns the sanitized html string.\n */\nexport function html (strings, ...exps) {\n    let htmlCode = '';\n    const expLn = exps.length;\n    let i = 0;\n\n    for (; i < expLn; ++i) {\n        htmlCode += strings[i] + exps[i];\n    }\n    htmlCode += strings[i];\n\n    const frag = document.createDocumentFragment();\n    const wrapper = document.createElement('div');\n\n    frag.appendChild(wrapper);\n    wrapper.innerHTML = htmlCode;\n\n    treeShakeNode(wrapper);\n    const { innerHTML } = wrapper;\n\n    return () => innerHTML;\n}\n","import { mergeRecursive, CommonProps } from 'muze-utils';\n\nconst defaultPolicy = (registrableComponents) => {\n    const aliases = registrableComponents.map(comp => comp.alias());\n    return {\n        behaviours: {\n            '*': (propagationPayload) => {\n                const propagationCanvas = propagationPayload.sourceCanvas;\n                return propagationCanvas ? aliases.indexOf(propagationCanvas) !== -1 : true;\n            }\n        }\n    };\n};\n\nconst listenerFn = (canvas, fn) => () => {\n    const valueMatrix = canvas.composition().visualGroup.matrixInstance().value;\n    valueMatrix.each(cell => fn(cell.valueOf().firebolt()));\n};\n\nconst canvasIterator = (canvases, iteratorFn, cFn) => {\n    canvases.forEach((canvas) => {\n        const matrix = canvas.composition().visualGroup.matrixInstance().value;\n        matrix.each(cell => iteratorFn(cell.valueOf().firebolt()));\n        cFn && cFn(canvas);\n        // Also register actions on canvas update\n        const throwback = canvas._throwback;\n\n        throwback.registerImmediateListener([CommonProps.MATRIX_CREATED],\n            listenerFn(canvas, iteratorFn));\n    });\n};\n\n/**\n * This class is initiated only once in lifecycle and is reponsible for regisration of physical and behavioural\n * actions and side effects and the mapping between them.\n *\n * To get the instance of action model\n * ```\n *  const ActionModel = muze.ActionModel;\n * ```\n *\n * @public\n * @module ActionModel\n */\nclass ActionModel {\n    constructor () {\n        this._registrableComponents = [];\n    }\n\n    /**\n     * Takes an array of canvases on which the physical and behavioural actions will get registered.\n     *\n     * @public\n     * @param  {Canvas} components Array of canvases\n     *\n     * @return {ActionModel} Instance of action model.\n     */\n    for (...components) {\n        this._registrableComponents = components;\n        return this;\n    }\n\n    /**\n     * Registers physical actions on the canvases. It takes an object with key as the name of action and value having\n     * the definition of the action.\n     *\n     * To register a {@link PhysicalAction},\n     * ```\n     *  const ActionModel = muze.ActionModel;\n     *  ActionModel\n     *       // Physical actions will be registered on these canvases.\n     *      .for(canvas)\n     *      .registerPhysicalActions({\n     *          // Key is the name of physical action.\n     *          ctrlClick: (firebolt) => (targetEl, behaviours) => {\n     *              targetEl.on('click', function (data) {\n     *                  const event = utils.getEvent();\n     *                  const pos = utils.getClientPoint(event, this);\n     *                  // Get the data point nearest to the mouse position.\n     *                  const nearestPoint = firebolt.context.getNearestPoint(pos, {\n     *                      data\n     *                  });\n     *                  // Prepare the payload\n     *                  const payload = {\n     *                      criteria: nearestPoint.id\n     *                  };\n     *                  behaviours.forEach((behaviour) => firebolt.dispatchBehaviour(behaviour, payload));\n     *              });\n     *          }\n     *      });\n     * ```\n     * @public\n     *\n     * @param {Object} action Names of physical actions and their definitions.\n     *\n     * @return {ActionModel} Instance of the action model.\n     */\n    registerPhysicalActions (action) {\n        canvasIterator(this._registrableComponents, (firebolt) => {\n            firebolt.registerPhysicalActions(action);\n        }, (canvas) => {\n            canvas.firebolt().registerPhysicalActions(action);\n        });\n\n        return this;\n    }\n\n    /**\n     * Registers behavioural actions on the canvases. It takes definitions of the behavioural actions and registers\n     * them on the canvases. Every behavioural action must inherit the {@link GenericBehaviour} class.\n     *\n     * To register a behavioural action\n     * ```\n     *  // Define a new behavioural action\n     *  class SingleSelectBehaviour extends GenericBehaviour {\n     *      static formalName () {\n     *          return 'singleSelect';\n     *      }\n     *\n     *      setSelectionSet (addSet, selectionSet) {\n     *          if (addSet === null) {\n     *              selectionSet.reset();\n     *          } else if (addSet.length) {\n     *              const existingAddSet = selectionSet.getExistingEntrySet(addSet);\n     *              if (existingAddSet.length){\n     *                  selectionSet.reset();\n     *              } else {\n     *               selectionSet.add(addSet);\n     *              }\n     *          } else {\n     *              selectionSet.reset();\n     *          }\n     *      }\n     * }\n     * muze.ActionModel.registerBehaviouralActions(SingleSelectBehaviour);\n     * ```\n     *\n     * @public\n     *\n     * @param {GenericBehaviour} actions Definition of behavioural actions.\n     *\n     * @return {ActionModel} Instance of action model.\n     */\n    registerBehaviouralActions (...actions) {\n        canvasIterator(this._registrableComponents, (firebolt) => {\n            firebolt.registerBehaviouralActions(actions);\n        }, (canvas) => {\n            canvas.firebolt().registerBehaviouralActions(actions);\n        });\n\n        return this;\n    }\n\n    /**\n     * Registers the mapping of physical and behavioural actions. This mapping is used to establish which behavioural\n     * actions should be dispatched on any triggering of physical actions.\n     *\n     * To map physical actions with behavioural actions,\n     * ```\n     *  muze.ActionModel.registerPhysicalBehaviouralMap({\n     *      ctrlClick: {\n     *          behaviours: ['select'] // This array must be the formal names of the behavioural actions.\n     *      }\n     *  });\n     * ```\n     *\n     * @public\n     * @param {Object} map Contains the physical and behavioural action map.\n     * ```\n     *   {\n     *      // Name of the physical action\n     *      click: {\n     *          // Target element selector. This is an optional field. If not passed, then by default takes the\n     *          // container element of visual unit.\n     *          target: '.muze-layers-area path',\n     *          // Behaviours which should be dispatched on triggering of the mapped physical action.\n     *          behaviours: ['select']\n     *      }\n     *   }\n     * ```\n     *\n     * @return {ActionModel} Instance of action model.\n     */\n    registerPhysicalBehaviouralMap (map) {\n        canvasIterator(this._registrableComponents, (firebolt) => {\n            firebolt.registerPhysicalBehaviouralMap(map);\n        }, (canvas) => {\n            canvas.firebolt().registerPhysicalBehaviouralMap(map);\n        });\n        return this;\n    }\n\n    /**\n     * Registers what behaviour to propagate on dispatch of a certain behavioural action. By default, when any\n     * behavioural action is dispatched, then the same behavioural action gets propagated to all the other canvases.\n     * This can be changed using this api.\n     *\n     * To register what behaviour should be propagated on dispatch of any behavioural action,\n     * ```\n     *  ActionModel.for(canvas1, canvas2).registerPropagationBehaviourMap({\n     *      select: 'filter',\n     *      brush: 'filter'\n     *  });\n     * ```\n     *\n     * @public\n     * @param {Object} map Propagation behaviour map.\n     *\n     * @return {ActionModel} Instance of action model.\n     */\n    registerPropagationBehaviourMap (map) {\n        canvasIterator(this._registrableComponents, (firebolt) => {\n            firebolt.registerPropagationBehaviourMap(map);\n        }, (canvas) => {\n            canvas.firebolt().registerPropagationBehaviourMap(map);\n        });\n\n        return this;\n    }\n\n    /**\n     * Registers the mapping of side effects and behavioural actions. It takes an object which contains key as the\n     * name of behavioural action and the side effects which will be linked to it.\n     *\n     * To map side effects to select behaviour,\n     * ```\n     *  muze.ActionModel.mapSideEffects({\n     *      select: ['infoBox'] // This array must be the formal names of the side effects\n     *  });\n     * ```\n     *\n     * To map side effects to select behaviour, but disable all the default side effects attached with this behaviour,\n     * ```\n     *  muze.ActionModel.mapSideEffects({\n     *      select: {\n     *          effects: ['infoBox'],\n     *          preventDefaultActions: true\n     *      }\n     *  });\n     * @public\n     * @param {Object} map Mapping of behavioural actions and side effects.\n     * ```\n     *     {\n     *          select: ['infoBox']\n     *     }\n     * ```\n     * @return {ActionModel} Instance of action model.\n     */\n    mapSideEffects (map) {\n        canvasIterator(this._registrableComponents, (firebolt) => {\n            firebolt.mapSideEffects(map);\n        }, (canvas) => {\n            canvas.firebolt().mapSideEffects(map);\n        });\n        return this;\n    }\n\n    /**\n     * Registers the side effects on the registered canvases. It takes definitions of side effects and registers them\n     * on the canvases. Every side effect must inherit the base class {@link GenericSideEffect} or\n     * {@link SpawnableSideEffect} or {@link SurrogateSideEffect} class.\n     *\n     * ```\n     * // Define a custom side effect\n     *  class InfoBox extends SpawnableSideEffect {\n     *      static formalName () {\n     *          return 'infoBox';\n     *      }\n     *\n     *      apply (selectionSet) {\n     *      }\n     *  }\n     *  muze.ActionModel.registerSideEffects(InfoBox);\n     * ```\n     * @public\n     * @param  {GenericSideEffect} sideEffects Definition of side effects.\n     *\n     * @return {ActionModel} Instance of action model.\n     */\n    registerSideEffects (...sideEffects) {\n        canvasIterator(this._registrableComponents, (firebolt) => {\n            firebolt.registerSideEffects(sideEffects);\n        }, (canvas) => {\n            canvas.firebolt().registerSideEffects(sideEffects);\n        });\n        return this;\n    }\n\n    /**\n     * Breaks the link between behavioural actions and physical actions. It takes an array of behavioural action\n     * and it's physical action.\n     *\n     * To dissociate behavioural actions from physical actions\n     * ```\n     *  muze.ActionModel.dissociateBehaviour(['select', 'click'], ['highlight', 'hover']);\n     * ```\n     * @public\n     * @param  {Array} maps Array of behavioural action and physical action.\n     *\n     * @return {ActionModel} Instance of action model.\n     */\n    dissociateBehaviour (...maps) {\n        canvasIterator(this._registrableComponents, (firebolt) => {\n            maps.forEach(val => firebolt.dissociateBehaviour(val[0], val[1]));\n        }, (canvas) => {\n            maps.forEach(val => canvas.firebolt().dissociateBehaviour(val[0], val[1]));\n        });\n        return this;\n    }\n\n    /**\n     * Breaks the link between side effects and behavioural actions. It takes an array of formal names of the side\n     * effects and it's linked behavioural action.\n     *\n     * To dissociate side effects from behavioural actions\n     * ```\n     *  muze.ActionModel.dissociateSideEffect(['crossline', 'highlight'], ['selectionBox', 'brush']);\n     * ```\n     * @public\n     * @param  {Array} maps Array of side effects and behavioural actions.\n     *\n     * @return {ActionModel} Instance of action model.\n     */\n    dissociateSideEffect (...maps) {\n        canvasIterator(this._registrableComponents, (firebolt) => {\n            maps.forEach(val => firebolt.dissociateSideEffect(val[0], val[1]));\n        }, (canvas) => {\n            maps.forEach(val => canvas.firebolt().dissociateSideEffect(val[0], val[1]));\n        });\n        return this;\n    }\n\n    /**\n     * By default cross interactivity is disabled between canvases. This enables cross interaction between the canvases\n     * so that any action happening in one canvas gets dispatched on other canvases as well. An optional policy can also\n     * be passed in this method. The policy can be used to control on which canvases the behavioural actions and\n     * side effects gets dispatched.\n     *\n     * To just enable cross interactivity between two canvases,\n     * ```\n     *  ActionModel.for(canvas1, canvas2)\n     *      .enableCrossInteractivity();\n     * ```\n     *\n     * To enable cross interactivity but enable any behavioural action only when it is triggered from canvas1.\n     * ```\n     *  ActionModel.for(canvas1, canvas2)\n     *      .enableCrossInteractivity({\n     *          behaviours: {\n     *              // Here * stands for any behavioural action name. We can also give any name of behavioural action\n     *              // in place of this.\n     *              '*': (propPayload, context) => {\n     *                  return propPayload.sourceCanvas === canvas1.alias();\n     *              }\n     *          }\n     *      });\n     * ```\n     *\n     * To enable cross interactivity but enable tooltip effect if the action is propagated from canvas1,\n     * ```\n     *  ActionModel.for(canvas1, canvas2)\n     *      .enableCrossInteractivity({\n     *          sideEffects: {\n     *              tooltip: (propPayload, context) => {\n     *                  return propPayload.sourceCanvas === canvas1.alias();\n     *              }\n     *          }\n     *      });\n     * ```\n     * @public\n     * @param {Object} policy Policy definition.\n     *\n     * @return {ActionModel} Instance of action model.\n     */\n    enableCrossInteractivity (policy = {}) {\n        const registrableComponents = this._registrableComponents;\n        const mergedPolicy = mergeRecursive(mergeRecursive({}, defaultPolicy(registrableComponents)), policy);\n\n        registrableComponents.forEach((canvas) => {\n            canvas.firebolt().crossInteractionPolicy(mergedPolicy);\n        });\n\n        return this;\n    }\n}\n\nexport const actionModel = (() => new ActionModel())();\n","import { MUZE_PREFIX } from '../constants';\n\nexport const TITLE_CONFIG = {\n    position: 'top',\n    align: 'left',\n    padding: 4,\n    className: `${MUZE_PREFIX}-title-container`\n};\n\nexport const SUB_TITLE_CONFIG = {\n    position: 'top',\n    align: 'left',\n    padding: 16,\n    maxLines: 2,\n    className: `${MUZE_PREFIX}-subtitle-container`\n};\n\nexport const GRID = 'grid';\n\nexport const CANVAS = 'canvas';\n\nexport const LAYOUT_ALIGN = {\n    TOP: 'top',\n    LEFT: 'left',\n    RIGHT: 'right',\n    BOTTOM: 'bottom'\n};\n","import { mergeRecursive, DataModel } from 'muze-utils';\nimport {\n    ROWS,\n    COLUMNS,\n    COLOR,\n    SHAPE,\n    SIZE,\n    DETAIL,\n    LAYERS,\n    TRANSFORM,\n    TITLE,\n    SUB_TITLE\n} from '../constants';\nimport { TITLE_CONFIG, SUB_TITLE_CONFIG } from './defaults';\n/**\n * This is the local options semantics based on which setters getters are created and reactivity is initiated.\n * This local object is only valid for Canvas.\n * Canvas merges global and local object both to the model\n *\n * Format\n *  PROPERTRY_NAME: {\n *      value: // default value of the property,\n *      meta: {\n *          typeCheck: // The setter value will be checked using this. If the value is function then the setter value\n *                     // is passed as args.\n *          typeExpected: // The output of typecheck action will be tested against this. Truthy value will set the\n *                       // value to the setter\n *          sanitizaiton: // Need for sanitization before type is checked\n *      }\n *  }\n *\n * @module LocalOptions\n */\n\nexport const localOptions = {\n    [ROWS]: {\n        value: null,\n        meta: {\n            typeCheck: 'constructor',\n            typeExpected: 'Array'\n        }\n    },\n    [COLUMNS]: {\n        value: null,\n        meta: {\n            typeCheck: 'constructor',\n            typeExpected: 'Array'\n        }\n    },\n    data: {\n        value: null,\n        meta: {\n            typeCheck: d => d instanceof DataModel,\n            sanitization: (dm, prevDm) => {\n                prevDm && prevDm.dispose();\n                let sanitizedDm = dm;\n                if (dm instanceof DataModel) {\n                    sanitizedDm = dm.project(dm.getSchema().map(d => d.name));\n                }\n                return sanitizedDm;\n            }\n        }\n    },\n    [COLOR]: {\n        value: null,\n        meta: {\n            typeCheck: 'constructor',\n            typeExpected: 'Object',\n            sanitization: (config) => {\n                if (typeof config === 'string' || !config) {\n                    return {\n                        field: config\n                    };\n                }\n                return config;\n            }\n        }\n    },\n    [SHAPE]: {\n        value: null,\n        meta: {\n            typeCheck: 'constructor',\n            typeExpected: 'Object',\n            sanitization: (config) => {\n                if (typeof config === 'string' || !config) {\n                    return {\n                        field: config\n                    };\n                }\n                return config;\n            }\n        }\n    },\n    [SIZE]: {\n        value: null,\n        meta: {\n            typeCheck: 'constructor',\n            typeExpected: 'Object',\n            sanitization: (config) => {\n                if (typeof config === 'string' || !config) {\n                    return {\n                        field: config\n                    };\n                }\n                return config;\n            }\n        }\n    },\n    [DETAIL]: {\n        value: [],\n        meta: {\n            typeCheck: 'constructor',\n            typeExpected: 'Array'\n        }\n    },\n\n    [LAYERS]: {\n        value: [],\n        meta: {\n            typeCheck: 'constructor',\n            typeExpected: 'Array'\n        }\n    },\n    [TRANSFORM]: {\n        value: null,\n        meta: {\n            typeCheck: 'constructor',\n            typeExpected: 'Object'\n        }\n    }\n};\n\nexport const canvasOptions = {\n    [TITLE]: {\n        value: [null, null],\n        meta: {\n            typeCheck: ['constructor', 'constructor'],\n            typeExpected: ['Function', 'Object'],\n            spreadParams: true,\n            sanitization: [(title) => {\n                if (typeof title === 'string' || !title) {\n                    const t = () => title;\n                    return t;\n                }\n                return title;\n            }, (titleConfig) => {\n                const defConfig = mergeRecursive({}, TITLE_CONFIG);\n                return mergeRecursive(defConfig, titleConfig);\n            }]\n        }\n    },\n    [SUB_TITLE]: {\n        value: [null, null],\n        meta: {\n            typeCheck: ['constructor', 'constructor'],\n            typeExpected: ['Function', 'Object'],\n            spreadParams: true,\n            sanitization: [(subtitle) => {\n                if (typeof subtitle === 'string' || !subtitle) {\n                    const sub = () => subtitle;\n                    return sub;\n                }\n                return subtitle;\n            }, (subtitleConfig) => {\n                const defConfig = mergeRecursive({}, SUB_TITLE_CONFIG);\n                return mergeRecursive(defConfig, subtitleConfig);\n            }]\n        }\n    }\n};\n","export default class LayoutComponent {\n    constructor (name, dimensions, seed) {\n        this._seed = seed;\n        this._boundBox = {\n            height: dimensions.height,\n            width: dimensions.width,\n            top: null,\n            left: null\n        };\n        this._renderAt = null;\n        this._alignWith = null;\n        this._alignment = null;\n        this._target = null;\n        this._position = null;\n        this._componentName = name;\n        this._className = null;\n    }\n\n    getLogicalSpace () {\n        throw new Error('getLogicalSpace is not defined');\n    }\n\n    setSpatialConfig () {\n        throw new Error('setSpatialSpace is not defined');\n    }\n\n    name (param) {\n        if (param) {\n            this._componentName = param;\n        }\n        return this._componentName;\n    }\n\n    target (param) {\n        if (param) {\n            this._target = param;\n        }\n        return this._target;\n    }\n\n    position (param) {\n        if (param) {\n            this._position = param;\n        }\n        return this._position;\n    }\n\n    alignment (param) {\n        if (param) {\n            this._alignment = param;\n        }\n        return this._alignment;\n    }\n\n    alignWith (param) {\n        if (param) {\n            this._alignWith = param;\n        }\n        return this._alignWith;\n    }\n\n    renderAt (param) {\n        if (param) {\n            this._renderAt = param;\n        }\n        return this._renderAt;\n    }\n\n    boundBox (param) {\n        if (param) {\n            Object.assign(this._boundBox, param);\n        }\n        return this._boundBox;\n    }\n\n    className (param) {\n        if (param) {\n            this._className = param;\n        }\n        return this._className;\n    }\n\n    draw () {\n        throw new Error('draw is not defined');\n    }\n  }\n\n","import LayoutComponent from './layoutComponent';\n\nclass DummyComponent extends LayoutComponent {\n    getLogicalSpace () {\n        return {\n            width: this.boundBox().width,\n            height: this.boundBox().height\n        };\n    }\n\n    setSpatialConfig (conf) {\n        this.boundBox({ top: conf.y, left: conf.x });\n        this.newDimensions = {\n            width: conf.width,\n            height: conf.height\n        };\n        this.renderAt(conf.renderAt);\n        return this;\n    }\n\n    draw () {\n        if (!this.component) {\n            throw new Error(`Component not set for ${this.componentName}`);\n        }\n        this.component.mount(document.getElementById(this.renderAt)); // Change the draw method to component draw\n        return this;\n    }\n}\n\nexport default DummyComponent;\n","export const DEFAULT_CONFIG = {\n    classPrefix: 'muze',\n    interaction: {\n        sideEffect: 'individual'\n    },\n    pagination: 'scroll',\n    scrollBar: {\n        thickness: 10,\n        speed: 2,\n        vertical: {\n            align: 'right'\n        },\n        horizontal: {\n            align: 'bottom'\n        }\n    },\n    legend: {\n        position: 'right',\n        color: {\n            show: true,\n            padding: 1,\n            margin: 3,\n            border: 1,\n            height: 20,\n            width: 20\n        },\n        shape: {\n            show: true,\n            padding: 1,\n            margin: 3,\n            border: 1,\n            height: 20,\n            width: 20\n        },\n        size: {\n            show: true,\n            padding: 1,\n            margin: 3,\n            border: 1,\n            height: 20,\n            width: 20\n        }\n    },\n    showHeaders: false,\n    minWidth: 100,\n    minHeight: 100,\n    facet: {\n        rows: {\n            minCharacters: 3\n        },\n        columns: {\n            maxLines: 2,\n            verticalAlign: 'middle',\n            minCharacters: 1\n        }\n    },\n    border: {\n        style: 'solid',\n        color: '#d6d6d6',\n        width: 2,\n        collapse: true,\n        spacing: 0\n    },\n    autoGroupBy: {\n        disabled: false\n    },\n    invalidValues: {}\n};\n","import { DEFAULT_CONFIG } from '../../../../muze/src/defaults';\n\nconst DEFAULT_WIDTH = 600;\nconst DEFAULT_HEIGHT = 400;\nconst DEFAULT_CLASS_NAME = `${DEFAULT_CONFIG.classPrefix}-layout-container-component`;\nconst NODE_PREFIX = `${DEFAULT_CONFIG.classPrefix}-layout-container`;\n\nexport {\n  DEFAULT_WIDTH,\n  DEFAULT_HEIGHT,\n  DEFAULT_CLASS_NAME,\n  NODE_PREFIX\n};\n","export default class DefinitionModel {\n    constructor (config) {\n        this._host = config.host || null;\n        this._cut = config.cut || null;\n        this._ratioWeight = config.ratioWeight === 0 ? 0 : config.ratioWeight || 1;\n        this._preferred = config.preferred || false;\n        this._lanes = config.lanes || [];\n        this._remainingHeight = 0;\n        this._remainingWidth = 0;\n    }\n\n    host (host) {\n        if (host) {\n            this._host = host;\n        }\n        return this._host;\n    }\n\n    preferred (preferred) {\n        if (preferred) {\n            this._preferred = preferred;\n        }\n        return this._preferred;\n    }\n\n    cut (cut) {\n        if (cut) {\n            this._cut = cut;\n        }\n        return this._cut;\n    }\n\n    ratioWeight (ratioWeight) {\n        if (ratioWeight) {\n            this._ratioWeight = ratioWeight;\n        }\n        return this._ratioWeight;\n    }\n\n    lanes (lanes) {\n        if (lanes) {\n            this._lanes = lanes;\n        }\n        return this._lanes;\n    }\n\n    remainingHeight (remainingHeight) {\n        if (remainingHeight) {\n            this._remainingHeight = remainingHeight;\n        }\n        return this._remainingHeight;\n    }\n\n    remainingWidth (remainingWidth) {\n        if (remainingWidth) {\n            this._remainingWidth = remainingWidth;\n        }\n        return this._remainingWidth;\n    }\n}\n","import { NODE_PREFIX } from '../../constants/defaults';\nimport DefinitionModel from '../definition-manager/definitionModel';\nimport DummyComponent from '../../layout-component/dummy-component';\n/**\n * Compares two strings in lowercase\n *\n * @export\n * @param {string} value the value to be compared\n * @param {string} compareTo whom the value would be compared\n * @return {boolean} true if values are equal\n */\nexport function isEqual (value, compareTo) {\n    if (typeof value !== 'string' || typeof compareTo !== 'string') {\n        throw new TypeError('value and compareTo must be string');\n    }\n    return value.toLowerCase() === compareTo.toLowerCase();\n}\n\nexport const getNodeId = (() => {\n    let _uid = 0;\n    return () => `${NODE_PREFIX}-${++_uid}`;\n})();\n\nexport function yExtraSpace (node) {\n    let smallestHeight = 0;\n    if (node.getCutType() === 'v') {\n        smallestHeight = smallestExtraHeightHorizontally(node); // eslint-disable-line no-use-before-define\n    } else if (node.getCutType() === 'h') {\n        node.children().forEach((child) => {\n            smallestHeight += yExtraSpace(child);\n        });\n    } else if (node.model().host() && node.model().host().getLogicalSpace) {\n        const containerHeight = node.boundBox().height;\n        const hostHeight = node.model().host().getLogicalSpace().height;\n\n        smallestHeight = containerHeight - hostHeight;\n        if (smallestHeight < 0) {\n            smallestHeight = 0;\n        }\n    } else {\n        smallestHeight = 0;\n    }\n    return smallestHeight;\n}\n\nexport function smallestExtraHeightHorizontally (node) {\n    let smallestHeight = Number.MAX_SAFE_INTEGER;\n    node.children().forEach((child) => {\n        const h = yExtraSpace(child);\n        if (h < smallestHeight) {\n            smallestHeight = h;\n        }\n    });\n    return smallestHeight;\n}\n\nexport function xExtraSpace (node) {\n    let smallestWidth = 0;\n    if (node.getCutType() === 'h') {\n        smallestWidth = smallestExtraWidthVertically(node); // eslint-disable-line no-use-before-define\n    } else if (node.getCutType() === 'v') {\n        node.children().forEach((child) => {\n            smallestWidth += xExtraSpace(child);\n        });\n    } else if (node.model().host() && node.model().host().getLogicalSpace) {\n        const containerWidth = node.boundBox().width;\n        const hostWidth = node.model().host().getLogicalSpace().width;\n        smallestWidth = containerWidth - hostWidth;\n        if (smallestWidth < 0) {\n            smallestWidth = 0;\n        }\n    } else {\n        smallestWidth = 0;\n    }\n    return smallestWidth;\n}\n\nexport function smallestExtraWidthVertically (node) {\n    let smallestWidth = Number.MAX_SAFE_INTEGER;\n    node.children().forEach((child) => {\n        const w = xExtraSpace(child);\n        if (w < smallestWidth) {\n            smallestWidth = w;\n        }\n    });\n    return smallestWidth;\n}\n\nexport function determineBoundBox (bb, i, arr, instance) {\n    if (i) {\n    // if not first sibling, take boundbox from previous sibling\n        const lastSibling = arr[i - 1];\n        const { top: _top, left: _left, height: _height, width: _width } = lastSibling.boundBox();\n        return {\n            width: bb.width,\n            height: bb.height,\n\n            top: instance.parentCut() === 'h'\n        ? _top + _height : _top,\n\n            left: instance.parentCut() === 'h'\n        ? _left : _left + _width\n        };\n    }\n  // if first sibling, take boundbox from parent\n    const { top: _top, left: _left } = instance.parent().boundBox();\n    return {\n        width: bb.width,\n        height: bb.height,\n        top: _top,\n        left: _left\n    };\n}\n\n// prepares the targetComponent Map for target Mapping ie. where a component should lie\nexport function prepareTargetComponentMap (context) {\n    context.targetComponentMap(new Map());\n    context.componentMap().forEach((value) => {\n        if (context.targetComponentMap().has(value.target())) {\n            context.targetComponentMap().get(value.target()).push(value);\n        } else {\n            const temp = [];\n            temp.push(value);\n            context.targetComponentMap().set(value.target(), temp);\n        }\n    });\n}\n\nexport function getComponent (canvasComponent, componentName) {\n    const comp = canvasComponent.find(component => component.name() === componentName);\n    return (comp && comp !== -1) ? comp : null;\n}\nexport function createPlaceHolderComponent (height, width, position) {\n    const comp = new DummyComponent(0, { height, width });\n    comp.name('placeHolder');\n    comp.position(position);\n    return comp;\n}\n\nexport function placeComponent (definitionModel, component, isPreferred = false, isGridComponent = false) {\n    let cut = '';\n    let componentRatioWidth = 1;\n    let leftOvercomponentRationWidth = 1;\n    let leftHeight = 0;\n    let leftWidth = 0;\n\n    if (!component) {\n        return { first: definitionModel, second: definitionModel };\n    }\n\n    const { height: componentHeight, width: componentWidth } = component.getLogicalSpace();\n    const position = component.position();\n    if (position === 'top' || position === 'bottom') {\n        cut = 'h';\n        componentRatioWidth = componentHeight / definitionModel.remainingHeight();\n        leftHeight = definitionModel.remainingHeight() - componentHeight;\n        leftWidth = definitionModel.remainingWidth();\n    } else {\n        cut = 'v';\n        componentRatioWidth = componentWidth / definitionModel.remainingWidth();\n        leftWidth = definitionModel.remainingWidth() - componentWidth;\n        leftHeight = definitionModel.remainingHeight();\n    }\n    leftOvercomponentRationWidth = 1 - componentRatioWidth;\n\n// update parentModel\n    definitionModel.cut(cut);\n    const firstLaneConfig = {\n        host: component.name(),\n        cut: null,\n        ratioWeight: componentRatioWidth,\n        preferred: isGridComponent ? false : isPreferred,\n        lanes: []\n    };\n    const firstLane = new DefinitionModel(firstLaneConfig);\n    firstLane.remainingHeight(componentHeight);\n    firstLane.remainingWidth(componentWidth);\n\n    const secondLaneConfig = {\n        host: null,\n        cut: null,\n        ratioWeight: leftOvercomponentRationWidth,\n        preferred: isGridComponent ? false : !isPreferred,\n        lanes: []\n    };\n    const secondLane = new DefinitionModel(secondLaneConfig);\n    secondLane.remainingHeight(leftHeight);\n    secondLane.remainingWidth(leftWidth);\n    if (isPreferred) {\n        definitionModel.lanes([firstLane]);\n    } else if (position === 'top' || position === 'left') {\n        definitionModel.lanes([firstLane, secondLane]);\n    } else {\n        definitionModel.lanes([secondLane, firstLane]);\n    }\n    return { first: firstLane, second: secondLane };\n}\n\nexport function placeGridComponent (definitionModel, gridComponents) {\n    let tempDefModel = definitionModel;\n    const rows = gridComponents.length;\n    const column = rows ? gridComponents[0].length : 0;\n    const height = gridComponents.reduce((acc, val) => (acc + val[0].getLogicalSpace().height), 0);\n\n    for (let i = 0; i < column; i++) {\n        const iscolumnPreffered = i === column - 1;\n        const columnPlaceHolderComponent = createPlaceHolderComponent(height,\n                                                    gridComponents[0][i].getLogicalSpace().width, 'left');\n        const { first, second } = placeComponent(tempDefModel, columnPlaceHolderComponent, iscolumnPreffered);\n        tempDefModel = first;\n        for (let j = 0; j < rows; j++) {\n            const rowpreffred = j === (rows - 1);\n            tempDefModel = placeComponent(tempDefModel, gridComponents[j][i], rowpreffred, true).second;\n        }\n        tempDefModel = second;\n    }\n    return tempDefModel;\n}\n\nexport function negotiateDimension (node) {\n    let preferred;\n    let cumultiveExtraSpaceAmt = 0;\n    let alteredDim;\n    let nonAlteredDim;\n\n    const childrenLength = node.children().length;\n\n    for (let index = 0; index < childrenLength; index++) {\n        let fn;\n        let extraSpaceAmt;\n        const child = node.children()[index];\n\n        if (child.parentCut() === 'h') {\n            fn = yExtraSpace;\n            alteredDim = 'height';\n            nonAlteredDim = 'width';\n        } else {\n            fn = xExtraSpace;\n            alteredDim = 'width';\n            nonAlteredDim = 'height';\n        }\n  // if vertical then get extra height from other node and push it to the preferred node.\n  // for horizontal cut the same thing is to be done with width\n        if (child.isPreferred()) {\n    // push extra space in sink. Execute it when all non preferred space are computed.\n            preferred = child;\n\n            continue; // eslint-disable-line no-continue\n        }\n  // reduce own height and save it in a var\n        cumultiveExtraSpaceAmt += (extraSpaceAmt = fn(child));\n        child.boundBox()[alteredDim] -= extraSpaceAmt;\n  // update nonaltered dim from parent for any change which happened during negotiation\n        child.boundBox()[nonAlteredDim] = child.parent().boundBox()[nonAlteredDim];\n\n        negotiateDimension(child);\n    }\n\n    if (preferred) {\n        preferred.boundBox()[alteredDim] += cumultiveExtraSpaceAmt;\n        preferred.boundBox()[nonAlteredDim] = preferred.parent().boundBox()[nonAlteredDim];\n        negotiateDimension(preferred);\n    }\n}\n\nexport function computePosition (node) {\n    node.children().forEach((child, i, children) => {\n        const boundBox = determineBoundBox(child.boundBox(), i, children, child);\n        child.boundBox(boundBox);\n        computePosition(child);\n    });\n}\n\nexport function allocateBoundingBox (node) {\n    const totalWeight = node.children()\n                            .map(child => child.model().ratioWeight())\n                            .reduce((carry, val) => carry + val, 0);\n\n    node.children().forEach((child, i, children) => {\n        const lastSibling = children[i - 1];\n        const ratio = child.model().ratioWeight() / totalWeight;\n\n        if (child.parentCut() === 'h') {\n            child.boundBox({\n                top: i ? lastSibling.boundBox().top + lastSibling.boundBox().height : 0,\n                left: child.parent().boundBox().left,\n                height: child.parent().boundBox().height * ratio,\n                width: child.parent().boundBox().width\n            });\n        } else {\n            child.boundBox({\n                top: child.parent().boundBox().top,\n                left: i ? lastSibling.boundBox().left + lastSibling.boundBox().width : 0,\n                height: child.parent().boundBox().height,\n                width: child.parent().boundBox().width * ratio\n            });\n        }\n        allocateBoundingBox(child);\n    });\n}\n\n","import { getNodeId } from '../helper';\nimport { LayoutComponent } from '../../layout-component';\n\nclass Node {\n    constructor (data) {\n        this._model = data;\n        this._parent = null;\n        this._children = [];\n        this._parentCut = null;\n        this._boundBox = {\n            top: null,\n            left: null,\n            height: null,\n            width: null\n        };\n\n        this._id = this._model.host() instanceof LayoutComponent && this._model.host().renderAt() ?\n                    this._model.host().renderAt() :\n                    getNodeId();\n    }\n\n    addChildren (entries) {\n        this._children.push(...entries);\n        entries.forEach((e) => { e.parent(this); });\n    }\n\n    isRoot () {\n        return this._parent === null;\n    }\n\n    isLeaf () {\n        return !this._children.length;\n    }\n\n    getCutType () {\n        return this._model.cut();\n    }\n\n    isPreferred () {\n        return !!this._model.preferred();\n    }\n\n    children (children) {\n        if (children) {\n            this._children = children;\n        }\n        return this._children;\n    }\n\n    parent (parent) {\n        if (parent) {\n            this._parent = parent;\n        }\n        return this._parent;\n    }\n\n    parentCut (parentCut) {\n        if (parentCut) {\n            this._parentCut = parentCut;\n        }\n        return this._parentCut;\n    }\n\n    id (id) {\n        if (id) {\n            this._id = id;\n        }\n        return this._id;\n    }\n\n    model (model) {\n        if (model) {\n            this._model = model;\n        }\n        return this._model;\n    }\n\n    boundBox (bound) {\n        if (bound) {\n            this._boundBox = {\n                top: bound.top,\n                left: bound.left,\n                height: bound.height,\n                width: bound.width\n            };\n        }\n        return this._boundBox;\n    }\n  /**\n     * function to search a node and update it with the config provided.\n     * @param  {Object} nodeconfig\n     */\n    updateNode (nodeconfig) {\n        if (this._id === nodeconfig._id) {\n            this._model.cut(nodeconfig.cut);\n            this._model.ratioWeight(nodeconfig.ratioWeight);\n        } else {\n            this._children.forEach((node) => {\n                if (node._id === nodeconfig._id) {\n                    node.model.cut(nodeconfig.cut);\n                    node.model.ratioWeight(nodeconfig.ratioWeight);\n                    return;\n                }\n                this.searchNode(node, nodeconfig);\n            });\n        }\n    }\n\n  // Recursive function to search a node\n    searchNode (node, nodeconfig) {\n        node.children().forEach((childNode) => {\n            if (childNode.id() === nodeconfig._id) {\n                childNode.model().cut(nodeconfig.cut);\n                childNode.model().ratioWeight(nodeconfig.ratioWeight);\n            } else {\n                this.searchNode(childNode, nodeconfig);\n            }\n        });\n    }\n\n  /**\n     * function to delete a node from tree Structure.\n     * @param  {String} nodeId - node Id of the Node\n     */\n    delete (nodeId) {\n        this._children.forEach((node) => {\n            if (node.id() === nodeId) {\n                const index = this._children.indexOf(node);\n                this._model.lanes().splice(index, 1);\n            }\n            this.deleteSearchNode(node, nodeId);\n        });\n    }\n\n  // Recursive function to search a node\n    deleteSearchNode (node, nodeId) {\n        node.children().forEach((childNode) => {\n            if (childNode.id() === nodeId) {\n                const index = node.children().indexOf(childNode);\n                node.model().lanes().splice(index, 1);\n            } else {\n                this.deleteSearchNode(childNode, nodeId);\n            }\n        });\n    }\n}\n\nexport default Node;\n","import Node from '../tree';\nimport {\n    allocateBoundingBox,\n    negotiateDimension,\n    computePosition\n} from '../helper';\n\nexport default class LayoutModel {\n    constructor (measurements, config) {\n        this._measurements = measurements;\n        this._config = config;\n        this._root = this.createTree(this._config, null);\n        this.setBoundBox();\n    }\n\n    createTree (config, parent) {\n        const node = new Node(config);\n        if (parent) {\n            node.parentCut(parent.getCutType());\n            parent.addChildren([node]);\n        } else {\n            this._root = node;\n        }\n        for (const lane of config.lanes()) {\n            this.createTree(lane, node);\n        }\n\n        return this._root;\n    }\n\n    setBoundBox () {\n        this._root.boundBox({\n            top: 0,\n            left: 0,\n            width: this._measurements.width,\n            height: this._measurements.height\n        });\n        allocateBoundingBox(this._root);\n    }\n\n    setHostPosition (node) {\n        node.children().forEach((child) => {\n            LayoutModel.setHostSpatialConfig(child);\n            this.setHostPosition(child);\n        });\n    }\n\n    static setHostSpatialConfig (node) {\n        const bb = node.boundBox();\n        const host = node.model().host();\n        if (host && host.setSpatialConfig) {\n            const conf = {\n                x: bb.left,\n                y: bb.top,\n                width: bb.width,\n                height: bb.height,\n                renderAt: node.id()\n            };\n            host.setSpatialConfig(conf);\n        }\n    }\n\n    negotiate () {\n        negotiateDimension(this._root);\n        computePosition(this._root);\n        return this;\n    }\n\n    broadcast () {\n        this.setHostPosition(this._root);\n        return this;\n    }\n\n    tree () {\n        return this._root;\n    }\n}\n","/* eslint no-undef: \"off\" */\n/* eslint default-case: \"off\" */\nexport class Utils {\n    static isDOMElement (element) {\n        return element instanceof Element;\n    }\n\n    static getID (element) {\n        return element.id;\n    }\n\n    static getElement (id) {\n        return document.getElementById(id);\n    }\n\n    static findContainer (data) {\n        return data.filter(coordinate => coordinate.parent == null)[0];\n    }\n  /**\n   * static method to remove the div\n   * @param  {} divId - div ID to be removed.\n   */\n    static removeDiv (divId) {\n        if (document.getElementById(divId) !== null) { document.getElementById(divId).remove(); }\n    }\n}\n","import { DEFAULT_CLASS_NAME } from '../constants/defaults';\nimport { LayoutComponent } from '../layout-component';\n\nexport default class DataPoint {\n    constructor (node) {\n        this._node = node;\n        this._className = node.model().host() instanceof LayoutComponent ?\n                            node.model().host().className() : DEFAULT_CLASS_NAME;\n    }\n\n    node () {\n        return this._node;\n    }\n\n    hasHost () {\n        return this._node.model().host() instanceof LayoutComponent;\n    }\n\n    className () {\n        return this._className || DEFAULT_CLASS_NAME;\n    }\n}\n","import { getnodePoints } from './helper';\n\nexport class DataParser {\n    constructor (data) {\n        this._data = data;\n    }\n\n    defaultDataPointLogic () {\n        const nodepoints = [];\n        getnodePoints(this._data, nodepoints);\n        return nodepoints;\n    }\n\n}\n","import DataPoint from './data-point';\n\nexport const getnodePoints = (node, nodepoints) => {\n    const datapoint = new DataPoint(node);\n    nodepoints.push(datapoint);\n    node.children().forEach((child) => {\n        getnodePoints(child, nodepoints);\n    });\n};\n","import { DataParser } from './data-parser';\n\nexport class HTMLDataAdapter extends DataParser {\n    getCoordinates () {\n        return super.defaultDataPointLogic();\n    }\n}\n","export class Renderer {\n\n    initRenderer (node, tree) {\n        node.__logicalTree = tree;\n    }\n}\n","import { HTMLDataAdapter } from '../data-adapters/html-data';\nimport { Utils } from '../utils';\nimport { Renderer } from './renderer';\n\nexport class HTMLRenderer extends Renderer {\n    constructor (data) {\n        super();\n        this._data = data;\n        this._coordinates = new HTMLDataAdapter(this._data).getCoordinates();\n    }\n\n    createhtml (mount, className) {\n        const mainDiv = mount;\n        super.initRenderer(mainDiv, this._data); // Initialise node with layout id\n        this.parentDiv = this.createAndCustomiseParent(className);\n        this._coordinates.forEach((node) => {\n            if (node.hasHost()) {\n                const host = node.node();\n                this.parentDiv.appendChild(this.createAndPositionDiv({ ...host.boundBox(),\n                    id: host.id(),\n                    className: node.className() }));\n            }\n        });\n        mainDiv.appendChild(this.parentDiv);\n    }\n\n    createAndPositionDiv (config) {\n        const { top, left, height, width, className, id } = config;\n        const existingDiv = document.getElementById(id);\n        const div = existingDiv || document.createElement('div');\n        div.style.position = 'absolute';\n        div.style.left = `${left}px`;\n        div.style.top = `${top}px`;\n        div.style.height = `${height}px`;\n        div.style.width = `${width}px`;\n        div.id = id;\n        div.className = className;\n        return div;\n    }\n\n    createAndCustomiseParent (className) {\n        const container = Utils.findContainer(this._coordinates);\n        const host = container.node();\n        const parentDiv = this.createAndPositionDiv({ ...host.boundBox(),\n            id: host.id(),\n            className: container.className() });\n        parentDiv.className = className;\n        parentDiv.style.position = 'relative';\n        return parentDiv;\n    }\n\n    coordinates () {\n        return this._coordinates;\n    }\n}\n","import { selectElement } from 'muze-utils';\nimport { HTMLRenderer } from '../renderers/html-renderer';\nimport { LayoutComponent } from '../layout-component';\n\nexport const getChildNode = (context, config) =>\n                        context.renderer().createAndPositionDiv(config);\n\nexport const findNode = (context, nodeID) =>\n                        context.renderer().coordinates().find(point => point.node().id() === nodeID);\n\nexport const renderHTML = (context) => {\n    context.renderer(new HTMLRenderer(context.data()));\n    context.renderer().createhtml(context.mount(), context.className());\n};\n\nexport const drawLayout = (context) => {\n    switch (context.renderer()) {\n    case 'html' :\n        renderHTML(context);\n        break;\n    default:\n        renderHTML(context);\n    }\n};\n\nexport const drawComponent = (componentData) => {\n    componentData.children().forEach((node) => {\n        const host = node.model().host();\n        if (host instanceof LayoutComponent) {\n            host.draw();\n        }\n        drawComponent(node);\n    });\n};\n\nexport const removeElement = (elemID) => {\n    if (elemID) {\n        selectElement(`#${elemID}`).remove();\n    }\n};\n\nexport const resolveAligment = (context, componentData) => {\n    componentData.children().forEach((component) => {\n        const host = component.model().host();\n        if (host instanceof LayoutComponent && host.alignWith()) {\n            let newNodeConfig = {};\n            const point = findNode(context, component.id()).node();\n            const node = point.boundBox();\n            const refNode = findNode(context, context.componentMap().get(host.alignWith()).renderAt())\n                                .node()\n                                .boundBox();\n            switch (host.alignment()) {\n            case 'left':\n                newNodeConfig = {\n                    top: node.top,\n                    left: refNode.left,\n                    height: node.height,\n                    width: Math.abs(node.width - Math.abs(refNode.left - node.left))\n                };\n                break;\n\n            case 'right':\n                newNodeConfig = {\n                    top: node.top,\n                    left: node.left,\n                    height: node.height,\n                    width: Math.abs(node.width - Math.abs(node.left + node.width - (refNode.left + refNode.width)))\n                };\n                break;\n\n            case 'top':\n                newNodeConfig = {\n                    top: refNode.top,\n                    left: node.left,\n                    height: Math.abs(node.height - Math.abs(refNode.top - node.top)),\n                    width: node.width\n                };\n                break;\n\n            case 'bottom':\n                newNodeConfig = {\n                    top: node.top,\n                    left: node.left,\n                    height: Math.abs(node.top - refNode.top + refNode.height),\n                    width: node.width\n                };\n                break;\n\n            case 'h-center':\n                newNodeConfig = {\n                    top: node.top,\n                    left: refNode.left,\n                    height: node.height,\n                    width: refNode.width\n                };\n                break;\n\n            case 'v-center':\n                newNodeConfig = {\n                    top: refNode.top,\n                    left: node.left,\n                    height: refNode.top,\n                    width: node.width\n                };\n                break;\n            default:\n                break;\n            }\n    // check if model in parent component\n            Object.assign(newNodeConfig, { id: point.id(), className: host.className() });\n            context.renderer().createAndPositionDiv(newNodeConfig);\n            context.componentMap().get(host.name()).setSpatialConfig({\n                x: newNodeConfig.left,\n                y: newNodeConfig.top,\n                height: newNodeConfig.height,\n                width: newNodeConfig.width\n\n            });\n        }\n        resolveAligment(context, component);\n    });\n};\n","import { Utils } from '../utils';\nimport { drawLayout, resolveAligment, drawComponent } from './helper';\n\nexport class DrawingManager {\n    constructor (data, renderer, container) {\n        this._data = data.tree;\n        this._componentMap = data.componentMap;\n        this._layoutClassName = data.layoutClassName;\n        this._renderer = renderer;\n        this._mount = Utils.isDOMElement(container) ? container : Utils.getElement(container);\n    }\n\n    draw () {\n        drawLayout(this);\n        resolveAligment(this, this._data);\n        drawComponent(this._data);\n        return this;\n    }\n\n    data (data) {\n        if (data) {\n            this._data = data;\n        }\n        return this._data;\n    }\n\n    componentMap (param) {\n        if (param) {\n            this._componentMap = param;\n        }\n        return this._componentMap;\n    }\n\n    className (param) {\n        if (param) {\n            this._layoutClassName = param;\n        }\n        return this._layoutClassName;\n    }\n\n    renderer (param) {\n        if (param) {\n            this._renderer = param;\n        }\n        return this._renderer;\n    }\n\n    mount (param) {\n        if (param) {\n            this._mount = param;\n        }\n        return this._mount;\n    }\n}\n","import DefinitionModel from './definitionModel';\nimport { prepareTargetComponentMap, getComponent, placeComponent, placeGridComponent } from '../helper';\n\nexport default class DefinitionManager {\n    constructor (componentMap, sequence, totalHeight, totalWidth) {\n        this._componentMap = componentMap;\n        this._prioritySequence = sequence;\n        this._totalHeight = totalHeight;\n        this._totalWidth = totalWidth;\n        this._targetComponentMap = null;\n    }\n\n    // create the config model\n    generateConfigModel () {\n        prepareTargetComponentMap(this);\n        const canvasComponent = this._targetComponentMap.get('canvas');\n        const definitionModel = new DefinitionModel({});\n        let tempDefModel = definitionModel;\n        definitionModel.remainingHeight(this._totalHeight);\n        definitionModel.remainingWidth(this._totalWidth);\n\n        let componentRef = null;\n\n        this._prioritySequence.forEach((name) => {\n            componentRef = getComponent(canvasComponent, name);\n            if (name !== 'grid') {\n                tempDefModel = placeComponent(tempDefModel, componentRef).second;\n            } else {\n                tempDefModel = placeGridComponent(tempDefModel, componentRef.component);\n            }\n        });\n        return definitionModel;\n    }\n\n    componentMap (param) {\n        if (param) {\n            this._componentMap = param;\n        }\n        return this._componentMap;\n    }\n\n    targetComponentMap (param) {\n        if (param) {\n            this._targetComponentMap = param;\n        }\n        return this._targetComponentMap;\n    }\n}\n","import { sanitizeConfig } from './helper';\n\nexport class LayoutDef {\n    constructor () {\n        this._componentMap = new Map();\n        this._layoutDefinition = null;\n    }\n\n    addComponent (component) {\n        this._componentMap.set(component.name(), component);\n    }\n\n    layoutDefinition (def) {\n        if (def) {\n            this._layoutDefinition = def;\n        }\n        return this._layoutDefinition;\n    }\n\n    addMultipleComponent (componentArray) {\n        componentArray.forEach((comp) => {\n            this.addComponent(comp);\n        });\n    }\n\n    sanitizedDefinition () {\n        sanitizeConfig(this, this._layoutDefinition);\n        return this.layoutDefinition();\n    }\n\n    componentMap () {\n        return this._componentMap;\n    }\n    resetComponentMap () {\n        this._componentMap.clear();\n    }\n}\n","import DefinitionManager from '../layout-definition/definition-manager';\n\nexport function sanitizeConfig (context, hostObj) {\n    const hostID = hostObj.host();\n    if (hostObj.lanes() && hostObj.lanes().length) {\n        hostObj.lanes().forEach(childHost => sanitizeConfig(context, childHost));\n    }\n    if (hostID != null && typeof (hostID) === 'string') {\n        if (context.componentMap().get(hostID) !== undefined) {\n            hostObj.host(context.componentMap().get(hostID));\n        }\n    }\n}\n\nexport function calLayOutDef (context) {\n    const { height, width } = context.dimension();\n    const defManager = new DefinitionManager(context.layoutDef().componentMap(),\n                                              context.prioritySequence(),\n                                              height,\n                                              width);\n    const genLayoutdef = defManager.generateConfigModel();\n    return genLayoutdef;\n}\n","import {\n  LayoutModel\n} from '../layout-definition';\n\nimport {\n  DEFAULT_WIDTH,\n  DEFAULT_HEIGHT\n} from '../constants/defaults';\n\nimport { DrawingManager } from '../drawing-manager';\nimport { removeElement } from '../drawing-manager/helper';\nimport { Utils } from '../utils';\nimport { LayoutDef } from './layout-def';\nimport { calLayOutDef } from './helper';\n\nexport default class LayoutManager {\n    constructor (conf) {\n        this._renderAt = conf.renderAt;\n        this._layoutClassName = conf.className;\n        this._dimension = {\n            width: conf.width || DEFAULT_WIDTH,\n            height: conf.height || DEFAULT_HEIGHT\n        };\n\n        this._skeletonType = conf.skeletonType || 'html';\n        this._layoutDefinition = null;\n        this._layoutDef = new LayoutDef();\n        this._drawingManager = null;\n        this._prioritySequence = [];\n        this.tree = null;\n        this._rootNodeID = null;\n    }\n\n    layoutDef (param) {\n        if (param) {\n            this._layoutDef = param;\n        }\n        return this._layoutDef;\n    }\n\n    prioritySequence (param) {\n        if (param) {\n            this._prioritySequence = param;\n        }\n        return this._prioritySequence;\n    }\n\n    dimension (param) {\n        if (param) {\n            Object.assign(this._dimension, param);\n        }\n        return this._dimension;\n    }\n\n    addComponent (component) {\n        this._layoutDef.addComponent(component);\n    }\n\n    addMultipleComponent (componentArray) {\n        this._layoutDef.addMultipleComponent(componentArray);\n    }\n\n    resetNode (node) {\n        if (this.con) {\n            this.con.resetNode(node);\n        }\n    }\n\n  /**\n   * function to update the node and rerender the layout.\n   * @param  {} config - node configuration to change.\n   */\n    updateNode (config) {\n        this.tree.updateNode(config);\n        this._layoutDefinition = this.tree.model;\n        this.compute();\n    }\n\n    compute () {\n        //----\n        if (Utils.isDOMElement(this._renderAt)) {\n            this._renderAt._layout = this;\n        } else {\n            document.getElementById(this._renderAt)._layout = this;\n        }\n        //-----\n        this._layoutDefinition = calLayOutDef(this);\n        this._layoutDef.layoutDefinition(this._layoutDefinition);\n        this._layoutDefinition = this._layoutDef.sanitizedDefinition();\n        this._layout = new LayoutModel({\n            width: this._dimension.width,\n            height: this._dimension.height\n        },\n            this._layoutDefinition);\n        this.tree = this._layout.negotiate().tree();\n        this._layout.broadcast();\n        this._drawingManager = new DrawingManager({\n            tree: this.tree,\n            componentMap: this._layoutDef.componentMap(),\n            layoutClassName: this._layoutClassName\n        }, this._skeletonType, this._renderAt);\n\n        if (this._rootNodeID) {\n            this.tree.id(this._rootNodeID);\n        } else {\n            this._rootNodeID = this.tree.id();\n        }\n    // this will draw all the components by calling their draw method\n        this._drawingManager.draw();\n    }\n\n    getRootNodeId () {\n        return this._rootNodeID;\n    }\n\n  /**\n  * This function takes the LayoutComponents and Register them in component store\n  * @param {Array<LayoutComponent>} layoutComponents\n  */\n    registerComponents (layoutComponents) {\n        this._prioritySequence.length = 0;\n        this._layoutDef.resetComponentMap();\n        layoutComponents.forEach((container) => {\n            if (container) {\n                this._prioritySequence.push(container.name());\n                this.addComponent(container);\n                if (container.name() === 'grid') {\n                    container.component.forEach((componentArr) => {\n                        componentArr.forEach((compo) => {\n                            this.addComponent(compo);\n                        });\n                    });\n                }\n            }\n        });\n        return this;\n    }\n\n    getComponent (componentName) {\n        return this._layoutDef.componentMap().get(componentName);\n    }\n\n    removeComponent (id) {\n        return removeElement(id);\n    }\n\n    renderAt (mount) {\n        if (mount) {\n            this._renderAt = mount;\n        }\n        return this._renderAt;\n    }\n}\n","import { isEqual, STATE_NAMESPACES, selectElement, getValueParser } from 'muze-utils';\nimport { VisualGroup } from '@chartshq/visual-group';\nimport { ROWS, COLUMNS, COLOR, SHAPE, SIZE, DETAIL, DATA, CONFIG }\n    from '../constants';\nimport { canvasOptions } from './local-options';\nimport { LayoutManager } from '../../../layout/src/tree-layout';\n\n/**\n * Instantiate high level components. Canvas knows what all high level component it has.\n * @nice-to-have dynamic high level components.\n *  - Is it even required ?\n *  - Reactive to source (canvas) streaming ?\n * @param {*} context Canvas instance\n * @return {Object.<Array>} Arrays of Title, visualGroup, Legend\n */\nexport const initCanvas = (context) => {\n    const reg = context._registry.components;\n\n    return [new reg.VisualGroup(context._registry, Object.assign({\n        throwback: context._throwback\n    }, context.dependencies()))];\n};\n\nexport const fixScrollBarConfig = (config) => {\n    config.scrollBar.thickness = Math.min(50, Math.max(10, config.scrollBar.thickness));\n    return config;\n};\n\nexport const setLayoutInfForUnits = (context) => {\n    const layoutManager = context._layoutManager;\n    const boundBox = layoutManager.getComponent('grid').getBoundBox();\n    const valueMatrix = context.composition().visualGroup.matrixInstance().value;\n    const parentContainer = selectElement(`#${layoutManager.getRootNodeId()}`).node();\n    valueMatrix.each((cell) => {\n        cell.valueOf().parentContainerInf({\n            el: parentContainer,\n            dimensions: boundBox\n        });\n    });\n};\n\n/**\n *\n *\n * @memberof Canvas\n */\nexport const dispatchProps = (context) => {\n    const lifeCycleManager = context.dependencies().lifeCycleManager;\n    lifeCycleManager.notify({ client: context, action: 'beforeupdate' });\n    const visualGroup = context.composition().visualGroup;\n\n    const allOptions = context._allOptions;\n    for (const key in allOptions) {\n        const value = context[key]();\n        if (value !== null) {\n            visualGroup[key] && visualGroup[key](value);\n        }\n    }\n    const { invalidValues } = context.config();\n\n    visualGroup.valueParser(getValueParser(invalidValues));\n    visualGroup.createMatrices();\n    context._cachedProps = {};\n    lifeCycleManager.notify({ client: context, action: 'initialized' });\n    lifeCycleManager.notify({ client: context, action: 'updated' });\n};\n\nconst equalityChecker = (props, params) => {\n    let checker = () => false;\n    return !props.every((option, i) => {\n        switch (option) {\n        case ROWS:\n        case COLUMNS:\n        case DETAIL:\n            checker = isEqual('Array');\n            break;\n\n        case SHAPE:\n        case SIZE:\n        case COLOR:\n        case DATA:\n        case CONFIG:\n            checker = isEqual('Object');\n            break;\n        default:\n            checker = () => true;\n            break;\n        }\n        const oldVal = params[i][0];\n        const newVal = params[i][1];\n\n        return checker(oldVal, newVal);\n    });\n};\n\nconst updateChecker = (props, params) => props.every((option, i) => {\n    const val = params[i][1];\n    switch (option) {\n    case ROWS:\n    case COLUMNS:\n        return val !== null;\n\n    case DATA:\n        return val && !val.isEmpty();\n\n    default:\n        return true;\n\n    }\n});\n\nexport const notifyAnimationEnd = (context) => {\n    const centerMatrix = context.layout().viewInfo().viewMatricesInfo.matrices.center[1] || [];\n    const promises = [];\n    centerMatrix.forEach((cellArr) => {\n        cellArr.forEach((cell) => {\n            promises.push(cell.valueOf().done());\n        });\n    });\n    const lifeCycleManager = context.lifeCycle();\n    if (promises.length) {\n        Promise.all(promises).then(() => {\n            // Update life cycle\n            lifeCycleManager.notify({ client: context, action: 'drawn' });\n            const animDonePromises = [];\n\n            centerMatrix.forEach((cellArr) => {\n                cellArr.forEach((cell) => {\n                    cell.valueOf().layers().forEach((layer) => {\n                        animDonePromises.push(layer.animationDone());\n                    });\n                });\n            });\n\n            [context.xAxes(), context.yAxes()].forEach((axisArr) => {\n                axisArr = axisArr || [];\n                axisArr.forEach((axes) => {\n                    axes.forEach((axisInst) => {\n                        animDonePromises.push(axisInst.animationDone());\n                    });\n                });\n            });\n\n            Promise.all(animDonePromises).then(() => {\n                lifeCycleManager.notify({ client: context, action: 'animationend' });\n            });\n        });\n    } else {\n        lifeCycleManager.notify({ client: context, action: 'animationend' });\n    }\n};\n\nexport const setupChangeListener = (context) => {\n    const store = context._store;\n\n    const allOptions = Object.keys(context._allOptions);\n    const props = [...allOptions, ...Object.keys(canvasOptions)];\n    const nameSpaceProps = [...allOptions, ...Object.keys(canvasOptions)].map(prop =>\n        `${STATE_NAMESPACES.CANVAS_LOCAL_NAMESPACE}.${prop}`);\n    store.registerChangeListener(nameSpaceProps, (...params) => {\n        let updateProps = equalityChecker(props, params);\n        updateProps = updateChecker(props, params);\n\n        // inform attached board to rerender\n        if (updateProps && context.mount()) {\n            dispatchProps(context);\n            context.render();\n        }\n        notifyAnimationEnd(context);\n    }, true);\n};\n\nexport const applyInteractionPolicy = (firebolt) => {\n    const canvas = firebolt.context;\n    const visualGroup = canvas.composition().visualGroup;\n    if (visualGroup) {\n        const valueMatrix = visualGroup.matrixInstance().value;\n        const interactionPolicy = firebolt._interactionPolicy;\n        interactionPolicy(valueMatrix, firebolt);\n        const crossInteractionPolicy = firebolt._crossInteractionPolicy;\n        const behaviours = crossInteractionPolicy.behaviours;\n        const sideEffects = crossInteractionPolicy.sideEffects;\n        valueMatrix.each((cell) => {\n            const unitFireBolt = cell.valueOf().firebolt();\n            for (const key in behaviours) {\n                unitFireBolt.changeBehaviourStateOnPropagation(key, behaviours[key]);\n            }\n            for (const key in sideEffects) {\n                unitFireBolt.changeSideEffectStateOnPropagation(key, sideEffects[key]);\n            }\n        });\n    }\n};\n\n/**\n * Sets the rotation for all x axes if any axis has the rotation config set in the\n * entire view\n *\n * @param {Array} columns Column cells that contain the axes cells\n */\nexport const setLabelRotationForAxes = (context) => {\n    let rotation = 0;\n\n    const xAxes = context.xAxes() || [];\n\n    (() => {\n        for (let i = 0; i < xAxes.length; i++) {\n            for (let j = 0; j < xAxes[i].length; j++) {\n                const rotationVal = xAxes[i][j].renderConfig().labels.rotation;\n                if (rotationVal && rotationVal !== 0) {\n                    rotation = rotationVal;\n                    return;\n                }\n            }\n        }\n    })();\n\n    if (rotation) {\n        xAxes.forEach((axes) => {\n            axes.forEach((axis) => {\n                axis.renderConfig({ labels: { rotation } });\n                axis.smartTicks(axis.setTickConfig());\n            });\n        });\n    }\n};\n\nexport const createGroupState = (context) => {\n    const [globalState, localState] = VisualGroup.getState();\n    const store = context._store;\n    store.append('app.group', globalState);\n    store.append('local.group', localState);\n};\n\nexport const removeChild = (mount) => {\n    while (mount.firstChild) {\n        mount.removeChild(mount.firstChild);\n    }\n};\n\nexport const createLayoutManager = () => {\n    const layoutManager = new LayoutManager({\n        className: 'muze-group-container'\n    });\n    return layoutManager;\n};\n","/**\n * This is the global options semantics based on which setters getters are created and reactivity is initiated.\n * Format\n *  PROPERTRY_NAME: {\n *      value: // default value of the property,\n *      meta: {\n *          typeCheck: // The setter value will be checked using this. If the value is function then the setter value\n *                     // is passed as args.\n *          typeExpected: // The output of typecheck action will be tested against this. Truthy value will set the\n *                       // value to the setter\n *          sanitizaiton: // Need for sanitization before type is checked\n *      }\n *  }\n * @module GlobalOptions\n */\n\nimport { intSanitizer, mergeRecursive, DataModel } from 'muze-utils';\nimport { fixScrollBarConfig } from './canvas/helper';\nimport { DEFAULT_CONFIG } from './defaults';\n\nexport default {\n    data: {\n        value: null,\n        meta: {\n            typeCheck: d => d instanceof DataModel\n        }\n    },\n    width: {\n        value: 0,\n        meta: {\n            sanitization: intSanitizer,\n            typeCheck: Number.isInteger\n        }\n    },\n    height: {\n        value: 0,\n        meta: {\n            sanitization: intSanitizer,\n            typeCheck: Number.isInteger\n        }\n    },\n    minUnitWidth: {\n        value: 50,\n        meta: {\n            sanitization: intSanitizer,\n            typeCheck: Number.isInteger\n        }\n    },\n    minUnitHeight: {\n        value: 50,\n        meta: {\n            sanitization: intSanitizer,\n            typeCheck: Number.isInteger\n        }\n    },\n    config: {\n        value: null,\n        meta: {\n            typeCheck: 'constructor',\n            typeExpected: 'Object',\n            sanitization: (config, oldConfig) => {\n                // Reset the configuration when null is passed\n                const oldConf = mergeRecursive({}, config === null ? {} : oldConfig);\n                const defConfig = mergeRecursive(oldConf, DEFAULT_CONFIG);\n                let newConf = mergeRecursive(defConfig, config);\n                newConf = fixScrollBarConfig(newConf);\n\n                return newConf;\n            }\n\n        }\n    }\n};\n","/**\n * This file exports constants that will be used to\n * create the state store of the table layout.\n */\n/**\n * The index of top, bottom and center in the matrix\n */\nexport const VIEW_INDEX = {\n    top: 0,\n    center: 1,\n    bottom: 2\n};\n\nexport const ROW_MATRIX_INDEX = {\n    0: 'top',\n    1: 'center',\n    2: 'bottom'\n};\n\nexport const COLUMN_MATRIX_INDEX = {\n    0: 'left',\n    1: 'middle',\n    2: 'right'\n};\n\n/**\n * The width of the grid suppied by the user.\n */\nexport const GRID_WIDTH = 'width';\n\n/**\n * The height of the grid supplied by the user.\n */\nexport const GRID_HEIGHT = 'height';\n\n/**\n  * The border for the grid\n  */\nexport const BORDER = 'border';\n\n /**\n  *  The index of the first visible row in view matrix.\n  */\nexport const ROW_POINTER = 'rowPointer';\n\n/**\n * The index of the first visible column in the view matrix.\n */\nexport const COLUMN_POINTER = 'columnPointer';\n\n/**\n * Flag to specify whether row sizes should be equal.\n */\nexport const ROW_SIZE_IS_EQUAL = 'isRowSizeEqual';\n\n/**\n * Flag to specify whether column sizes are equal.\n */\nexport const COLUMN_SIZE_IS_EQUAL = 'isColumnSizeEqual';\n\n/**\n * Field to store an array an of the widths of visible columns.\n * @computed\n */\nexport const COLUMN_WIDTHS = 'visibleColumnWidths';\n\n/**\n * Field to store an array of heights of visible rows.\n * @computed\n */\nexport const ROW_HEIGHTS = 'visibleRowHeights';\n\n/**\n * Field to store the width of the left matrix.\n * @computed\n */\nexport const LEFT_MATRIX_WIDTH = 'leftMatrixWidth';\n\n/**\n * Field to store the width of the right matrix.\n * @computed\n */\nexport const RIGHT_MATRIX_WIDTH = 'rightMatrixWidth';\n\n/**\n * Field to store the height of the top matrix.\n * @computed\n */\nexport const TOP_MATRIX_HEIGHT = 'topMatrixHeight';\n\n/**\n * Field to store the height of the bottom matrix.\n * @computed\n */\nexport const BOTTOM_MATRIX_HEIGHT = 'bottomMatrixHeight';\n\n/**\n * The dom element to render the layout inside.\n */\nexport const MOUNT_POINT = 'mount';\n\n/**\n * The id attribute of the left table element.\n */\nexport const LEFT_TABLE_ID = 'grid-left';\n\n/**\n * The id attribute of the right table element.\n */\nexport const RIGHT_TABLE_ID = 'grid-right';\n\n/**\n * The id attribute of the top table.\n */\nexport const TOP_TABLE_ID = 'grid-top';\n\n/**\n * The id attribute of the bottom table.\n */\nexport const BOTTOM_TABLE_ID = 'grid-bottom';\n\n/**\n * The id attribute of the center table.\n */\nexport const CENTER_TABLE_ID = 'grid-center';\n\n/**\n * The id attribute of the top div.\n */\nexport const TOP_DIV_ID = 'muze-div-top';\n\n/**\n * The id attribute of the bottom div.\n */\nexport const BOTTOM_DIV_ID = 'muze-div-bottom';\n\n/**\n * The id attribute of the center div.\n */\nexport const CENTER_DIV_ID = 'muze-div-center';\n\n/**\n * Field that indicates if the row configuration has changed\n */\nexport const HAVE_ROWS_CHANGED = 'haveRowsChanged';\n\n/**\n * Field that indicates if the column configuration has changed\n */\nexport const HAVE_COLUMNS_CHANGED = 'haveColumnsChanged';\n\n/**\n * Field that indicates if the values configuration for the center matrix has changed\n */\nexport const HAVE_VALUES_CHANGED = 'haveValuesChanged';\n\n/**\n * Field that indicates the width of row matrix\n */\nexport const ROW_MATRIX_WIDTH = 'rowMatrixWidth';\n\n/**\n * Field that indicates the height of row matrix\n */\nexport const COLUMN_MATRIX_HEIGHT = 'columnMatrixHeight';\n\n/**\n * Field that indicates the unit width of layout\n */\nexport const UNIT_WIDTH = 'unitWidth';\n\n/**\n * Field that indicates the unit height of layout\n */\nexport const UNIT_HEIGHT = 'unitHeight';\n\n/**\n * Field that indicates the style object\n */\nexport const STYLE = 'style';\n\n/**\n * Field that indicates the color configuration\n */\nexport const COLOR = 'color';\n\n/**\n * Field that indicates width\n */\nexport const WIDTH = 'width';\n\n/**\n * Field that indicates collpase property for border\n */\nexport const COLLAPSE = 'collapse';\n\n/**\n * Field that indicates spacing property for border\n */\nexport const SPACING = 'spacing';\n\n/**\n * Field that indicates spacing property for border\n */\nexport const DISTRIBUTION = 'distribution';\n\n/**\n * Field that indicates spacing property for border\n */\nexport const GUTTERSPACE = 'gutterSpace';\n\n/**\n * Field that indicates spacing property for border\n */\nexport const BREAK_PAGE = 'breakPage';\n\n/**\n * Field that indicates spacing property for border\n */\nexport const SHOW_ROW_BORDERS = 'showRowBorders';\n\n/**\n * Field that indicates spacing property for border\n */\nexport const SHOW_COL_BORDERS = 'showColBorders';\n\n/**\n * Field that indicates spacing property for border\n */\nexport const SHOW_VALUE_BORDERS = 'showValueBorders';\n\nexport const HEIGHT = 'height';\nexport const COLUMN = 'column';\nexport const ROW = 'row';\nexport const TOP = 'top';\nexport const LEFT = 'left';\nexport const RIGHT = 'right';\nexport const BOTTOM = 'bottom';\nexport const CENTER = 'center';\nexport const CLICK = 'click';\nexport const ROW_LEFT = 'rowLeft';\nexport const ROW_RIGHT = 'rowRight';\nexport const COLUMN_BOTTOM = 'colBottom';\nexport const COLUMN_TOP = 'colTop';\nexport const AUTO = 'auto';\nexport const ROW_SPAN = 'rowSpan';\nexport const COL_SPAN = 'colSpan';\nexport const ROW_ROOT = 'rowRoot';\nexport const COLUMN_ROOT = 'columnRoot';\nexport const PRIMARY = 'primary';\nexport const SECONDARY = 'secondary';\nexport const VERTICAL = 'vertical';\nexport const HORIZONTAL = 'horizontal';\n\nexport const BLANK_BORDERS = 'rgba(0,0,0,0)';\n\nexport const PAGINATION = 'pagination';\nexport const BUFFER = 'buffer';\nexport const HOLISTIC = 'holistic';\nexport const SCROLL = 'scroll';\nexport const MIDDLE = 'middle';\nexport const NO_BORDERS = null;\n\nexport const MAX_WIDTH_AVAIL_FOR_COL_MATRIX = 'maxWidthAvailableForColumnMatrix';\nexport const COLUMN_MATRIX = 'columnMatrix';\nexport const MAX_HEIGHT_AVAIL_FOR_ROW_MATRIX = 'maxHeightAvailableForRowMatrix';\nexport const ROW_MATRIX = 'rowMatrix';\n","import { sanitizeIP, mergeRecursive } from 'muze-utils';\nimport { TOP, CENTER, BOTTOM } from '../enums/constants';\n\n/*\n * This is the abstract implementation of the root layout. This takes care of common work which all the layouts\n * has to handle. The common work includes sanitizaion of inputs, update, rerender, dispose etc. This class can't be\n * used directly (as ofcourse this is an abstract implementaiton), the class which is implementing it has to implement\n * the necessary methods and gives its on visual.\n */\n\n/**\n * This class is used to create a generic layout. It can be extended to create layouts\n * of different types\n * @class GenericLayout\n */\nexport default class GenericLayout {\n\n    /**\n     * Creates an instance of TableLayout.\n     * @param {HTMLElement} mountPoint DOM element/d3 selection where the layout is to be mounted\n     * @param {Object} measurement The dimensions of the layout\n     * @param {Object} config configuration to be given for the layout\n     * @param {Object} dependencies external dependencies.\n     *\n     * @memberof GenericLayout\n     *\n     */\n    constructor (mountPoint, measurement, config, dependencies) {\n        this._config = {};\n        this._measurement = {};\n        this._matrices = [];\n        // External dependencies to be included for the layout. This includes the ext global dependencies like\n        // smartlabel which has one single implementation of throughout the page or per isntance\n        this._dependencies = dependencies;\n\n        this.measurement(measurement);\n        this.mountPoint(mountPoint);\n        this.config(config);\n    }\n\n    /**\n     * Returns an object which is used to recreate the layout.\n     * @return {Object} the serialized components\n     */\n    serialize () {\n        return {\n            measurement: this.measurement(),\n            config: this.config(),\n            matrices: this.matrices()\n        };\n    }\n\n     /**\n     * Sets/Gets the config for the layout\n     * @param {Object} config configuration for the layout\n     * @return {Layout|Object} Gets the Config/ Returns this instance when set\n     */\n    config (config) {\n        if (config) {\n            this._config = mergeRecursive(this._config || {}, config);\n            this._config.border.width = Math.max(0, this._config.border.width);\n            return this;\n        }\n        return this._config;\n    }\n\n    /**\n     * Sets/Gets the measurement for the layout\n     * @param {Object} measurement measurement for the layout\n     * @return {Layout|Object} Gets the measurement/ Returns this instance when set\n     */\n    measurement (measurement) {\n        if (measurement) {\n            this._measurement = mergeRecursive(this._measurement || {}, measurement);\n\n            return this;\n        }\n        return this._measurement;\n    }\n\n    /**\n     * Sets/Gets the matrices for the layout\n     * @param {Object} matrices matrices for the layout\n     * @return {Layout|Object} Gets the matrices/ Returns this instance when set\n     */\n    matrices (matrices) {\n        if (matrices) {\n            this._matrices = sanitizeIP.typeObj([TOP, CENTER, BOTTOM], matrices);\n\n            return this;\n        }\n        return this._matrices;\n    }\n\n    /**\n     * Sets/Gets the matrix for row\n     * @param {Object} matrix matrices for the layout\n     * @return {Layout|Object} Gets the matrix/ Returns this instance when set\n     */\n    rowMatrix (matrix) {\n        if (matrix) {\n            this._rowMatrix = matrix;\n            return this;\n        }\n        return this._rowMatrix;\n    }\n\n    /**\n     * Sets/Gets the matrix for columns\n     * @param {Object} matrix matrices for the layout\n     * @return {Layout|Object} Gets the matrix/ Returns this instance when set\n     */\n    columnMatrix (matrix) {\n        if (matrix) {\n            this._columnMatrix = matrix;\n            return this;\n        }\n        return this._columnMatrix;\n    }\n\n   /**\n     * Sets/Gets the matrix for value\n     * @param {Object} matrix matrices for the layout\n     * @return {Layout|Object} Gets the matrix/ Returns this instance when set\n     */\n    centerMatrix (matrix) {\n        if (matrix) {\n            this._centerMatrix = matrix;\n            return this;\n        }\n        return this._centerMatrix;\n    }\n\n    /**\n     * Sets/Gets the mountPoint for the layout\n     * @param {Object} mountPoint mountPoint for the layout\n     * @return {Layout|Object} Gets the mountPoint/ Returns this instance when set\n     */\n    mountPoint (mountPoint) {\n        if (mountPoint) {\n            this._mountPoint = mountPoint;\n\n            return this;\n        }\n        return this._mountPoint;\n    }\n}\n","import * as FieldNames from '../enums/constants';\n\n/**\n * Default configuration of the layout\n * @return {Object} returns the default configuration\n */\nexport const DEFAULT_CONFIGURATION = {\n    [FieldNames.BORDER]: {\n        [FieldNames.STYLE]: 'solid',\n        [FieldNames.COLOR]: '#d6d6d6',\n        [FieldNames.WIDTH]: 2,\n        [FieldNames.COLLAPSE]: true,\n        [FieldNames.SPACING]: 0\n    },\n    [FieldNames.PAGINATION]: 'scroll',\n    [FieldNames.BUFFER]: 20,\n    [FieldNames.GUTTERSPACE]: { rows: [], columns: [] },\n    [FieldNames.DISTRIBUTION]: { rows: [], columns: [] },\n    [FieldNames.BREAK_PAGE]: { rows: [], columns: [] },\n    [FieldNames.ROW_SIZE_IS_EQUAL]: false,\n    [FieldNames.COLUMN_SIZE_IS_EQUAL]: false,\n    [FieldNames.COLUMN_POINTER]: 0,\n    [FieldNames.ROW_POINTER]: 0\n};\n\n/**\n * Default measurements for the layout\n * @return {Object} returns the default measurements\n */\nexport const DEFAULT_MEASUREMENTS = {\n    [FieldNames.GRID_WIDTH]: 100,\n    [FieldNames.GRID_HEIGHT]: 100,\n    [FieldNames.UNIT_WIDTH]: 100,\n    [FieldNames.UNIT_HEIGHT]: 100\n};\n\nexport const BLANK_BORDERS = 'rgba(0,0,0,0)';\n","/**\n * This file exports utility functions that are used across the layout module\n */\nimport { Symbols } from 'muze-utils';\nimport { PRIMARY, SECONDARY, HEIGHT, WIDTH } from '../enums/constants';\n\nconst nest = Symbols.nest;\n/**\n *\n *\n * @param {*} isTransposed\n *\n */\nconst getMeasureInfo = (isTransposed) => {\n    if (isTransposed) {\n        return {\n            firstMeasure: HEIGHT,\n            secondMeasure: WIDTH\n        };\n    }\n    return {\n        firstMeasure: WIDTH,\n        secondMeasure: HEIGHT\n    };\n};\n\n/**\n *\n *\n * @param {*} i\n * @param {*} page\n *\n */\nconst findInPage = (i, page) => {\n    let count = 0;\n    for (const x in page) {\n        if (i < page[x]) {\n            count = x;\n            break;\n        }\n    }\n    return count;\n};\n\n/**\n * Creates a single matrix from two matrices\n *\n * @param {Array<Array>} matrix Input matrix\n * @return {Array<Array>} Joined matrix\n * @memberof VisualMatrix\n */\nexport const combineMatrices = (matrix, config) => {\n    const { isTransposed } = config;\n    let joinedMatrix = matrix[0].length > 0 ? matrix[0] : matrix[1];\n    if (isTransposed) {\n        joinedMatrix = matrix[0].length > 0 ? [...matrix[0]] : [];\n        joinedMatrix = matrix[1].length > 0 ? [...joinedMatrix, ...matrix[1]] : joinedMatrix;\n    } else {\n        joinedMatrix = joinedMatrix.map((row, rowIndex) => {\n            let rowData = [];\n            if (matrix[0].length > 0) {\n                rowData = [...matrix[0][rowIndex]];\n            }\n            if (matrix[1].length > 0) {\n                rowData = [...rowData, ...matrix[1][rowIndex]];\n            }\n            return rowData;\n        });\n    }\n    return joinedMatrix;\n};\n\n/**\n * Creates a hirachical tree from the context\n *\n * @param {Object} context context for creating tree\n * @return {Object} nested tree\n */\nexport const createTree = (context) => {\n    let matrixTree = {};\n    let lastLevelKey = 0;\n    let facet = PRIMARY;\n    const nestFn = nest();\n    const keys = [];\n    const layoutMatrix = context._layoutMatrix;\n    const primaryMatrix = context.primaryMatrix();\n    const secondaryMatrix = context.secondaryMatrix();\n    const { isTransposed, breakPage } = context.config();\n\n    if (!isTransposed) {\n        if (primaryMatrix.length === 0) {\n            facet = PRIMARY;\n        } else if (secondaryMatrix.length === 0) {\n            facet = SECONDARY;\n        } else {\n            facet = primaryMatrix.length >= secondaryMatrix.length ? PRIMARY : SECONDARY;\n        }\n        if (primaryMatrix.length > 0) {\n            for (let i = 0; i < primaryMatrix[0].length - 1; i++) {\n                keys.push(i);\n            }\n            keys.push(primaryMatrix[0].length - 1);\n            if (facet === SECONDARY || secondaryMatrix.length === 0) {\n                lastLevelKey = primaryMatrix[0].length - 1;\n            }\n        }\n        if (secondaryMatrix.length > 0) {\n            const keyLength = primaryMatrix.length > 0 ? primaryMatrix[0].length : 0;\n            for (let i = secondaryMatrix[0].length - 1; i > 0; i--) {\n                keys.push(i + keyLength);\n            }\n            keys.push(keyLength);\n\n            if (facet === PRIMARY) {\n                lastLevelKey = keyLength;\n            }\n        } else {\n            lastLevelKey = primaryMatrix.length > 0 ? primaryMatrix[0].length - 1 : 0;\n        }\n        keys.forEach((key) => {\n            let counter = -1;\n            return nestFn.key((d) => {\n                counter++;\n                return `${d[key].valueOf()}-${findInPage(counter, breakPage)}`;\n            });\n        });\n        matrixTree = nestFn.entries(layoutMatrix);\n    } else {\n        if (primaryMatrix.length === 0) {\n            facet = PRIMARY;\n        } else if (secondaryMatrix.length === 0) {\n            facet = SECONDARY;\n        } else {\n            facet = primaryMatrix.length >= secondaryMatrix.length ? PRIMARY : SECONDARY;\n        }\n        if (primaryMatrix.length > 0) {\n            for (let i = 0; i < primaryMatrix.length - 1; i++) {\n                keys.push(i);\n            }\n            // if (facet === PRIMARY) {\n            keys.push(primaryMatrix.length - 1);\n            // } else {\n            if (facet === SECONDARY) {\n                lastLevelKey = primaryMatrix.length - 1;\n            }\n        }\n        if (secondaryMatrix.length > 0) {\n            const primaryMatrixLength = primaryMatrix.length;\n            for (let i = secondaryMatrix.length - 1; i > 0; i--) {\n                keys.push(i + primaryMatrixLength);\n            }\n            // if (facet === SECONDARY) {\n            keys.push(primaryMatrixLength);\n            // }\n            if (facet === PRIMARY) {\n                lastLevelKey = primaryMatrixLength;\n            }\n        }\n        keys.forEach((key) => {\n            let counter = -1;\n            return nestFn.key((d) => {\n                counter++;\n                return `${d[key].valueOf()}-${findInPage(counter, breakPage)}`;\n            });\n        });\n        let newMatrix = [];\n        newMatrix = layoutMatrix[0].map((col, colIndex) => layoutMatrix.map(row => row[colIndex]));\n        matrixTree = nestFn.entries(newMatrix);\n    }\n    return { tree: matrixTree, lastLevelKey };\n};\n\n/**\n * Gives the min measues\n *\n * @param {boolean} isTransposed is column matrix\n * @param {Object} unitMeasures min measures to be given to cells\n * @return {Object} dimension min cell\n */\nexport const getMinMeasures = (isTransposed, unitMeasures) => {\n    if (!isTransposed) {\n        return {\n            height: unitMeasures.height,\n            width: 0\n        };\n    }\n    return {\n        height: 0,\n        width: unitMeasures.width\n    };\n};\n\n/**\n * Get the logical space from the tree\n *\n * @param {Node} item tree to be calculated\n * @param {number} measures width and height\n * @param {Array} minMeasures min measures for a cell\n * @param {Array} maxMeasure max measures for a col/row\n * @return {Object} dimension\n */\nexport const getLogicalSpace = (item, measures, minMeasures, maxMeasure = []) => {\n    const { firstMeasure, secondMeasure } = measures;\n    let firstMeasureValue = 0;\n    let secondMeasureValue = 0;\n    item.values.forEach((valueArray) => {\n        let fMeasure = 0;\n        let sMeasure = 0;\n        valueArray.forEach((placeholder, colIndex) => {\n            placeholder.setAvailableSpace();\n            const space = placeholder.getLogicalSpace();\n            const minSecondMeasure = placeholder.getMinMeasures(minMeasures[secondMeasure]);\n\n            sMeasure = Math.max(sMeasure, +space[secondMeasure], minSecondMeasure);\n            maxMeasure[colIndex] = Math.max(maxMeasure[colIndex] || 0, space[firstMeasure]);\n            fMeasure += +maxMeasure[colIndex];\n        });\n        secondMeasureValue += sMeasure;\n        firstMeasureValue = Math.max(firstMeasureValue, fMeasure);\n        item.space = {\n            [secondMeasure]: Math.ceil(secondMeasureValue),\n            [firstMeasure]: Math.ceil(firstMeasureValue)\n        };\n    });\n    return {\n        [secondMeasure]: secondMeasureValue,\n        [firstMeasure]: firstMeasureValue\n    };\n};\n\n/**\n * Computes the logical spcae taken by the matrix tree\n *\n * @param {*} [item={}] tree to be viewed\n * @param {boolean} [isTransposed=false] is column matrix\n * @param {*} unitMeasures min measues for a cell\n * @param {Array} maxMeasure max measures for a col/row\n * @return {Object} logical space taken\n */\nexport const computeLogicalSpace = (item = {}, config, maxMeasures) => {\n    const { isTransposed = false, unitMeasures } = config;\n    const { firstMeasure, secondMeasure } = getMeasureInfo(isTransposed);\n    const { values } = item;\n    const minMeasures = getMinMeasures(isTransposed, unitMeasures);\n\n    if (values[0].key) {\n        const logicalSpace = { [firstMeasure]: 0, [secondMeasure]: 0 };\n\n        values.forEach((valueItem) => {\n            // Compute logical space for lowest level\n            const space = computeLogicalSpace(valueItem, config, maxMeasures);\n            // Set logical space for first measure\n            logicalSpace[firstMeasure] = Math.max(logicalSpace[firstMeasure], space[firstMeasure],\n                minMeasures[firstMeasure]);\n\n            // Set logical space for second measure\n            logicalSpace[secondMeasure] += +space[secondMeasure];\n        });\n        item.space = logicalSpace;\n        return logicalSpace;\n    }\n\n    return getLogicalSpace(item, { firstMeasure, secondMeasure }, minMeasures, maxMeasures);\n};\n\n/**\n * Gives the space taken by a row\n *\n * @param {Array} row matrix array of rows\n * @return {Object} dimension of the row\n */\nexport const spaceTakenByRow = (row) => {\n    let height = 0;\n    let width = 0;\n    row.forEach((col) => {\n        const spaces = col.getLogicalSpace();\n        height = Math.max(height, spaces.height);\n        width += spaces.width;\n    });\n    return {\n        width,\n        height\n    };\n};\n\n/**\n * Gives the space taken by a column\n *\n * @param {Array<Array>} matrix column matrix\n * @param {number} colIndex column index\n * @return {Object} dimension of the column\n */\nexport const spaceTakenByColumn = (matrix, colIndex) => {\n    let height = 0;\n    let width = 0;\n    matrix.forEach((row) => {\n        const col = row[colIndex];\n        const spaces = col.getLogicalSpace();\n        width = Math.max(width, spaces.width);\n        height += spaces.height;\n    });\n    return {\n        width,\n        height\n    };\n};\n\n/**\n * Creates different level matrices\n *\n * @param {Object} item matrix tree\n * @param {boolean} isTransposed is column matrix\n * @return {Object} matrix of each level\n */\nexport const createMatrixEachLevel = (item, isTransposed) => {\n    if (item.values[0].key) {\n        const arr = [];\n        item.values.forEach((child) => {\n            if (!isTransposed) {\n                arr.push(...createMatrixEachLevel(child, isTransposed));\n            } else {\n                const eachLevel = createMatrixEachLevel(child, isTransposed);\n                eachLevel.forEach((e, i) => {\n                    arr[i] = arr[i] || [];\n                    arr[i].push(...e);\n                });\n            }\n        });\n        item.matrix = arr;\n        return arr;\n    }\n    if (!isTransposed) {\n        item.matrix = item.values;\n    } else {\n        item.matrix = item.values[0].map((col, colIndex) => item.values.map(row => row[colIndex]));\n    }\n    return item.matrix;\n};\n\n/**\n * Breaks the matrix into two part\n *\n * @param {Array<Array>} matrix input matrix\n * @param {boolean} isTransposed is column matrix\n * @param {number} breakPointer point in matrix where it is to be broken\n * @return {Array} two broken matrix\n */\nexport const breakMatrix = (matrix, isTransposed, breakPointer) => {\n    const primaryMatrix = [];\n    const secondaryMatrix = [];\n    if (isTransposed) {\n        matrix.forEach((row, rowIndex) => {\n            if (rowIndex >= breakPointer) {\n                secondaryMatrix.push(row);\n            } else {\n                primaryMatrix.push(row);\n            }\n        });\n    } else {\n        matrix.forEach((row, rowIndex) => {\n            row.forEach((column, columnIndex) => {\n                if (columnIndex >= breakPointer) {\n                    secondaryMatrix[rowIndex] = secondaryMatrix[rowIndex] || [];\n                    secondaryMatrix[rowIndex].push(column);\n                } else {\n                    primaryMatrix[rowIndex] = primaryMatrix[rowIndex] || [];\n                    primaryMatrix[rowIndex].push(column);\n                }\n            });\n        });\n    }\n    return [primaryMatrix, secondaryMatrix];\n};\n\n/**\n * Distributed width returned\n *\n * @param {Object} context context for the width distibution\n * @return {number} distributed widths\n */\nexport const getDistributedWidth = (context, layoutConfig) => {\n    const {\n        availableWidth,\n        width,\n        row\n    } = context;\n    const {\n        isDistributionEqual,\n        isTransposed,\n        distribution\n    } = layoutConfig;\n    let distSum = 0;\n    if (distribution && distribution[0]) {\n        distSum = distribution.reduce((t, n) => {\n            t += n;\n            return t;\n        });\n    }\n    return row.map((col, colIndex) => {\n        const space = col.getLogicalSpace().width;\n        let distWidth = (space + (availableWidth - width) * (space / width));\n        if (isTransposed) {\n            if (distribution.length > 0) {\n                distWidth = (availableWidth * distribution[colIndex] / distSum);\n            } else if (isDistributionEqual || width === 0) {\n                const rowLen = row.length;\n                distWidth = (availableWidth / rowLen);\n            }\n        }\n        return Math.floor(distWidth);\n    });\n};\n\n/**\n * Distributeed heights returned\n *\n * @param {Object} context input for the height distribution\n * @return {Object} distribured heights\n */\nexport const getDistributedHeight = (context) => {\n    let distSum = 0;\n    let gutterSum = 0;\n    let heightWithoutGutter = 0;\n    const {\n        isTransposed,\n        distribution,\n        availableHeight,\n        height,\n        isDistributionEqual,\n        gutter,\n        matrix,\n        cIdx\n    } = context;\n\n    if (distribution && distribution[0] !== undefined) {\n        distSum = distribution.reduce((t, n) => {\n            t += n;\n            return t;\n        });\n    }\n    if (gutter && gutter[0] !== undefined) {\n        gutterSum = gutter.reduce((t, n) => {\n            t += n;\n            return t;\n        });\n    }\n    heightWithoutGutter = availableHeight - Math.floor(availableHeight * gutterSum);\n\n    const colLen = matrix.length;\n    return matrix.map((row, rIdx) => {\n        const col = row[cIdx];\n        const space = col.getLogicalSpace().height;\n        let distHeight = (space + (heightWithoutGutter - height) * (space / height));\n\n        if (!isTransposed) {\n            if (distribution.length > 0 && colLen === distribution.length) {\n                distHeight = (heightWithoutGutter * distribution[rIdx] / distSum);\n            } else if (isDistributionEqual || context.height === 0) {\n                distHeight = (heightWithoutGutter / colLen);\n            }\n        }\n        return Math.floor(distHeight);\n    });\n};\n\n/**\n *\n *\n * @param {*} arr\n * @param {*} beg\n * @param {*} end\n */\nexport const extraCellsRemover = (arr, beg, end) => arr.slice(beg, -end);\n\n/**\n * Creates matrix instancess\n *\n * @param {Array} [arr=[]] mutated arry\n * @param {number} depth depth of the tree\n * @param {Array} matrixInfo Details about the matrix(tree, etc) to be inserted\n * @param {boolean} layout Instance of layout\n */\nexport const createMatrixInstances = (arr = [], depth, matrixInfo, layout) => {\n    const breakPointer = layout._breakPointer;\n    const config = layout.config();\n    const {\n        isTransposed\n    } = config;\n    const {\n        tree,\n        layoutMatrix\n    } = matrixInfo;\n\n    if (depth === 0) {\n        const brokenMatrix = breakMatrix(tree.matrix, isTransposed, breakPointer);\n        arr.push({\n            matrix: tree.matrix,\n            primaryMatrix: brokenMatrix[0],\n            secondaryMatrix: brokenMatrix[1],\n            space: tree.space\n        });\n        return arr;\n    }\n    const nextLevel = depth - 1;\n    tree.values.forEach((e) => {\n        createMatrixInstances(arr, nextLevel, {\n            tree: e,\n            layoutMatrix\n        }, layout);\n    });\n    return arr;\n};\n","import { mergeRecursive } from 'muze-utils';\n\nexport const PROPS = {\n    config: {\n        sanitization: (context, value) => mergeRecursive(context._config || {}, value)\n    },\n    maxMeasures: {},\n    availableSpace: {},\n    logicalSpace: {}\n};\n","import { PRIMARY } from '../enums/constants';\n/**\n *\n *\n */\nexport const defaultConfig = {\n    distribution: [],\n    classPrefix: 'muze',\n    isDistributionEqual: true,\n    unitMeasures: {\n        height: 100,\n        width: 100,\n        border: 1\n    },\n    isTransposed: false,\n    facet: PRIMARY,\n    extraCellLengths: []\n};\n","import { mergeRecursive, generateGetterSetters, ERROR_MSG } from 'muze-utils';\nimport {\n    createTree,\n    combineMatrices,\n    createMatrixInstances\n  } from '../utils';\nimport { PROPS } from './props';\nimport { HEIGHT, WIDTH } from '../enums/constants';\nimport { defaultConfig } from './default-config';\n\n/**\n * This class used to create column / row matrix for GridLayout\n *\n * @class VisualMatrix\n */\nexport default class VisualMatrix {\n\n    /**\n     *Creates an instance of VisualMatrix.\n     * @param {any} matrix Two set of matrices\n     * @param {any} [config={}] Configuration for VisualMatrix\n     * @memberof VisualMatrix\n     */\n    constructor (matrix, config = {}) {\n        // Prepare matrices\n        this._lastLevelKey = 0;\n        this._primaryMatrix = matrix[0] || [];\n        this._secondaryMatrix = matrix[1] || [];\n        this._maxMeasures = [];\n        this._availableSpace = {};\n\n        // Store the config\n        generateGetterSetters(this, PROPS);\n        const defCon = Object.assign({}, this.constructor.defaultConfig());\n        this.config(mergeRecursive(defCon, config));\n\n        this._layoutMatrix = combineMatrices([matrix[0] || [], matrix[1] || []], this.config());\n    }\n\n     /**\n     * Computes the logical space taken by the entire matrixTree\n     *\n     * @return {Object} Logical space taken\n     * @memberof VisualMatrix\n     */\n    computeLogicalSpace () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    computeViewableSpaces () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    /**\n     *\n     *\n     * @return\n     * @memberof VisualMatrix\n     */\n    removeExtraCells () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    getPriorityDistribution () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    /**\n     * Calculates the depth of the tree that can be viewed\n     *\n     * @param {Array} widthMeasures array of widths\n     * @param {Array} heightMeasures array of heights\n     * @return {number} depth of the tree\n     * @memberof VisualMatrix\n     */\n    calculateDepth () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    /**\n     * Redistributes the provied space to all cells\n     *\n     * @param {*} viewableMatrix current viewport matrix\n     * @param {*} width provied width\n     * @param {*} height provied height\n     * @return {Object} current viewports matrixes with measures\n     * @memberof VisualMatrix\n     */\n    redistributeSpaces () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    /**\n     * Distibutes the given space row wisely\n     *\n     * @param {Object} measures Redistribution information\n     * @memberof VisualMatrix\n     */\n    redistributeViewSpaces () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    /**\n     * Dispatch the calculated cell dimensions to all the cells\n     *\n     * @param {Object} measures cell dimension information\n     * @return {Object} row and column heights / widths\n     * @memberof VisualMatrix\n     */\n    getCellDimensions () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    /**\n     *\n     *\n     * @param {*} params\n     * @returns\n     * @memberof VisualMatrix\n     */\n    primaryMatrix (...params) {\n        if (params.length) {\n            return this;\n        }\n        return this._primaryMatrix;\n    }\n\n    secondaryMatrix (...params) {\n        if (params.length) {\n            return this;\n        }\n        return this._secondaryMatrix;\n    }\n\n    tree (...params) {\n        if (params.length) {\n            return this;\n        }\n        return this._tree;\n    }\n\n    static defaultConfig () {\n        return defaultConfig;\n    }\n\n    createTree () {\n        const { tree, lastLevelKey } = createTree(this);\n        this._lastLevelKey = lastLevelKey;\n        return tree;\n    }\n\n    /**\n     * Returns the space taken by visual matrix\n     *\n     * @return {Object} space taken by the matrix\n     * @memberof VisualMatrix\n     */\n    getLogicalSpace () {\n        return this.logicalSpace();\n    }\n\n    /**\n     * Sets the provied space to the visual matrix\n     *\n     * @param {number} width width provided\n     * @param {number} height height provided\n     * @memberof VisualMatrix\n     */\n    setAvailableSpace (width, height) {\n        this.availableSpace({ width, height });\n        const tree = this.tree();\n        const heightMeasures = this.populateMaxMeasures(HEIGHT, tree);\n        const widthMeasures = this.populateMaxMeasures(WIDTH, tree);\n        const depth = this.calculateDepth(widthMeasures, heightMeasures);\n\n        this.viewableMatrix = this.createViewPortMatrix(depth);\n        this.viewableMeasures = this.redistributeSpaces(width, height);\n        return this;\n    }\n\n    /**\n     * Populate the max measures in the array\n     *\n     * @param {Array} measures array to be filled with max measures\n     * @param {Object} matrixTree matrix tree of visual matrix\n     * @param {number} measure width or height\n     * @param {number} [depth=0] depth of the tree that to be calculated\n     * @memberof VisualMatrix\n     */\n    populateMaxMeasures (type, matrixTree, depth = 0, measures = []) {\n        measures[depth] = Math.max(measures[depth] || 0, matrixTree.space[type]);\n        if (matrixTree.values) {\n            const childDepth = depth + 1;\n            matrixTree.values.forEach((child) => {\n                if (child.space) {\n                    measures = this.populateMaxMeasures(type, child, childDepth, measures);\n                }\n            });\n        }\n        return measures;\n    }\n\n    /**\n     * Gets the viewable measures for the current viewable matrix\n     *\n     * @return {Object} Set of viewable measures\n     * @memberof VisualMatrix\n     */\n    getViewableSpaces () {\n        return this.viewableMeasures;\n    }\n\n    /**\n     * Returns the matrix that can be viewed in the current viewport\n     *\n     * @return {Array} Set of matrices that can be viewed\n     * @memberof VisualMatrix\n     */\n    getViewableMatrices () {\n        return this.viewableMatrix;\n    }\n\n    /**\n     * Creates the viewport that can be viewed together\n     *\n     * @param {number} depth maxDepth that can be viewed in the viewport\n     * @return {Array<Object>} Set of matrices that can be viewed\n     * @memberof VisualMatrix\n     */\n    createViewPortMatrix (depth) {\n        const arr = [];\n        createMatrixInstances(arr, depth, this.removeExtraCells(), this);\n        return arr;\n    }\n}\n\n","import { mergeRecursive } from 'muze-utils';\nimport {\n    extraCellsRemover,\n    combineMatrices,\n    spaceTakenByColumn,\n    getDistributedHeight,\n    computeLogicalSpace,\n    createMatrixEachLevel\n  } from '../utils';\nimport { ROW_ROOT } from '../enums/constants';\nimport VisualMatrix from './visual-matrix';\n\n/**\n * This class used to create column / row matrix for GridLayout\n *\n * @class VisualMatrix\n */\nexport default class RowVisualMatrix extends VisualMatrix {\n\n    /**\n     *Creates an instance of VisualMatrix.\n     * @param {any} matrix Two set of matrices\n     * @param {any} [config={}] Configuration for VisualMatrix\n     * @memberof VisualMatrix\n     */\n    constructor (matrix, config = {}) {\n        super(matrix, config);\n\n        this._breakPointer = (matrix[0].length > 0 ? matrix[0][0].length : 0);\n        this._layoutMatrix = combineMatrices([matrix[0] || [], matrix[1] || []], this.config());\n\n        // Create Tree\n        this._tree = {\n            key: ROW_ROOT,\n            values: this.createTree()\n        };\n        this._logicalSpace = this.computeLogicalSpace();\n    }\n\n    /**\n     * Computes the logical space taken by the entire matrixTree\n     *\n     * @return {Object} Logical space taken\n     * @memberof VisualMatrix\n     */\n    computeLogicalSpace () {\n        const matrixTree = this.tree();\n        createMatrixEachLevel(matrixTree, false);\n        return computeLogicalSpace(matrixTree, this.config(), this.maxMeasures());\n    }\n\n    computeViewableSpaces (measures) {\n        const {\n            maxHeights,\n            maxWidths,\n            height\n        } = measures;\n        return this.viewableMatrix.map((matrixInst, i) => {\n            const cellDimOptions = { matrixInst, maxWidths, maxHeights, matrixIndex: i };\n            const { widths, rowHeights, columnWidths } = this.getCellDimensions(cellDimOptions);\n            const heightMeasures = [height, height];\n            const columnMeasures = widths;\n\n            return {\n                rowHeights: {\n                    primary: rowHeights[0],\n                    secondary: rowHeights[1]\n                },\n                columnWidths: {\n                    primary: columnWidths[0],\n                    secondary: columnWidths[1]\n                },\n                height: {\n                    primary: heightMeasures[0],\n                    secondary: heightMeasures[1]\n                },\n                width: {\n                    primary: columnMeasures[0],\n                    secondary: columnMeasures[1]\n                }\n            };\n        });\n    }\n\n    /**\n     *\n     *\n     * @return\n     * @memberof VisualMatrix\n     */\n    removeExtraCells () {\n        const {\n            isTransposed,\n            extraCellLengths\n        } = this.config();\n        const matrix = this._layoutMatrix;\n        const tree = mergeRecursive({}, this.tree());\n        const begCellLen = extraCellLengths[0];\n        const endCellLen = extraCellLengths[1] || Number.NEGATIVE_INFINITY;\n        const layoutMatrix = !isTransposed ? extraCellsRemover(matrix, begCellLen, endCellLen) :\n        matrix.slice(0).map(e => extraCellsRemover(e, begCellLen, endCellLen));\n\n        tree.values = extraCellsRemover(tree.values, begCellLen, endCellLen);\n        tree.matrix = extraCellsRemover(tree.matrix, begCellLen, endCellLen);\n\n        return {\n            tree,\n            layoutMatrix\n        };\n    }\n\n    getPriorityDistribution (measures) {\n        let remainingAvailWidth;\n        let remainingWidth;\n        let cWidths = [];\n        let conditions = [];\n        let maxPrioritySpace = 0;\n        const {\n            matrix,\n            width: availableWidth,\n            maxMeasures: maxWidths,\n            maxWidth: currentWidth,\n            height\n        } = measures;\n        const priority = this.config().priority;\n        const primaryMatrixLength = this.primaryMatrix().length ? this.primaryMatrix()[0].length : 0;\n\n        const dist = [];\n\n        remainingAvailWidth = availableWidth;\n        remainingWidth = currentWidth;\n\n        if (priority === 2) {\n            conditions = [primaryMatrixLength - 1, primaryMatrixLength];\n            // divider = Math.min(2, matrixLen);\n        } else {\n            conditions = priority === 0 ? [primaryMatrixLength - 1] : [primaryMatrixLength];\n            // divider = Math.min(1, matrixLen);\n        }\n        conditions.forEach((i) => {\n            dist[i] = maxWidths[i];\n            maxPrioritySpace += maxWidths[i];\n            remainingAvailWidth -= dist[i];\n            remainingWidth -= dist[i];\n        });\n        matrix[0].forEach((e, i) => {\n            if (conditions.indexOf(i) === -1) {\n                dist[i] = remainingAvailWidth * (maxWidths[i] / remainingWidth);\n            }\n        });\n        matrix.forEach(row => row.forEach((col, cIdx) => {\n            if (conditions.indexOf(cIdx) === -1) {\n                col.setAvailableSpace(dist[cIdx], height);\n\n                cWidths[cIdx] = Math.max(cWidths[cIdx] || 0, Math.floor(col.getLogicalSpace().width));\n            } else {\n                cWidths[cIdx] = 0;\n            }\n        }));\n\n        const prioritySpace = availableWidth - cWidths.reduce((t, n) => t + n);\n        if (prioritySpace < 0) {\n            cWidths = cWidths.map(() => 0);\n        } else {\n            conditions.forEach((i) => {\n                cWidths[i] = Math.floor(prioritySpace * (dist[i] / maxPrioritySpace || 1));\n            });\n        }\n        return cWidths;\n    }\n\n    /**\n     * Calculates the depth of the tree that can be viewed\n     *\n     * @param {Array} widthMeasures array of widths\n     * @param {Array} heightMeasures array of heights\n     * @return {number} depth of the tree\n     * @memberof VisualMatrix\n     */\n    calculateDepth (widthMeasures, heightMeasures) {\n        let i;\n        const { height } = this.availableSpace();\n\n        for (i = 0; i < heightMeasures.length; i++) {\n            if (heightMeasures[i] <= height) break;\n        }\n\n        return Math.min(widthMeasures.length - 1, i);\n    }\n\n    /**\n     * Redistributes the provied space to all cells\n     *\n     * @param {*} viewableMatrix current viewport matrix\n     * @param {*} width provied width\n     * @param {*} height provied height\n     * @return {Object} current viewports matrixes with measures\n     * @memberof VisualMatrix\n     */\n    redistributeSpaces (width, height) {\n        let maxHeights = [];\n        let maxWidths = [];\n        const maxMeasures = this.maxMeasures();\n\n        const maxWidth = maxMeasures.reduce((t, n) => {\n            t += n;\n            return t;\n        });\n        const logicalWidths = this.getPriorityDistribution({\n            matrix: this._layoutMatrix,\n            maxWidth,\n            maxMeasures,\n            width,\n            height\n        });\n\n        this.viewableMatrix.forEach((matrixInst) => {\n            const matrix = matrixInst.matrix;\n            const mWidth = 0;\n            const mHeight = 0;\n            const options = { mWidth, mHeight, matrix, width, height, maxHeights, maxWidths, logicalWidths };\n            const measures = this.redistributeViewSpaces(options);\n            maxWidths = measures.maxWidths;\n            maxHeights = measures.maxHeights;\n        });\n        return this.computeViewableSpaces({ height, width, maxHeights, maxWidths });\n    }\n\n    /**\n     * Distibutes the given space row wisely\n     *\n     * @param {Object} measures Redistribution information\n     * @memberof VisualMatrix\n     */\n    redistributeViewSpaces (measures) {\n        let cWidths = [];\n        let rHeights = [];\n        let mHeight = 0;\n        const maxMeasures = this.maxMeasures();\n\n        const {\n            isDistributionEqual,\n            distribution,\n            isTransposed,\n            gutter\n        } = this.config();\n        const { matrix, height, maxHeights, maxWidths, logicalWidths } = measures;\n        mHeight = spaceTakenByColumn(matrix, this._lastLevelKey).height;\n\n        const maxWidth = maxMeasures.reduce((t, n) => {\n            t += n;\n            return t;\n        });\n        measures.maxMeasures = maxMeasures;\n        measures.maxWidth = maxWidth;\n        if (maxWidth > 0) {\n            cWidths = logicalWidths;\n        } else {\n            cWidths = maxMeasures.map(() => 0);\n        }\n        rHeights = getDistributedHeight({\n            matrix,\n            cIdx: this._lastLevelKey,\n            height: mHeight,\n            availableHeight: height,\n            isDistributionEqual,\n            distribution,\n            isTransposed,\n            gutter\n        });\n        if (maxWidths.length > 0) {\n            cWidths = cWidths.map((e, i) => Math.max(e, maxWidths[0][i] || 0));\n        }\n        maxWidths.push(cWidths);\n        for (let x = 0; x < maxWidths.length; x++) {\n            maxWidths[x] = cWidths;\n        }\n        maxHeights.push(rHeights);\n        return { maxWidths, maxHeights };\n    }\n\n    /**\n     * Dispatch the calculated cell dimensions to all the cells\n     *\n     * @param {Object} measures cell dimension information\n     * @return {Object} row and column heights / widths\n     * @memberof VisualMatrix\n     */\n    getCellDimensions (measures) {\n        const {\n            unitMeasures\n        } = this.config();\n        const borderWidth = unitMeasures.border;\n        const { matrixInst, maxWidths, maxHeights, matrixIndex } = measures;\n        const matrix = matrixInst.matrix;\n        const rowHeights = [[0], [0]];\n        const columnWidths = [[0], [0]];\n        const heights = [0, 0];\n        const widths = [0, 0];\n        const breakPointer = this._breakPointer;\n\n        matrix.forEach((row, rIdx) => {\n            row.forEach((cell, cIdx) => {\n                const colHeight = maxHeights[matrixIndex][rIdx] || 0;\n                const colWidth = maxWidths[matrixIndex][cIdx];\n\n                cell.setAvailableSpace(colWidth, colHeight - borderWidth);\n\n                if (rIdx === 0 && cIdx < breakPointer) {\n                    columnWidths[0][cIdx] = colWidth;\n                    widths[0] = (widths[0] || 0) + colWidth;\n                } else if (rIdx === 0 && cIdx >= breakPointer) {\n                    columnWidths[1][cIdx - breakPointer] = colWidth;\n                    widths[1] = (widths[1] || 0) + colWidth;\n                }\n                if (cIdx === this._lastLevelKey) {\n                    rowHeights[0][rIdx] = colHeight;\n                    rowHeights[1][rIdx] = colHeight;\n                }\n            });\n        });\n        return {\n            heights,\n            widths,\n            rowHeights,\n            columnWidths\n        };\n    }\n}\n\n","import { mergeRecursive } from 'muze-utils';\nimport {\n    extraCellsRemover,\n    getDistributedWidth,\n    spaceTakenByRow,\n    createMatrixEachLevel,\n    computeLogicalSpace\n  } from '../utils';\nimport { COLUMN_ROOT } from '../enums/constants';\nimport VisualMatrix from './visual-matrix';\n\n/**\n * This class used to create column / row matrix for GridLayout\n *\n * @class VisualMatrix\n */\nexport default class ColumnVisualMatrix extends VisualMatrix {\n\n    /**\n     *Creates an instance of VisualMatrix.\n     * @param {any} matrix Two set of matrices\n     * @param {any} [config={}] Configuration for VisualMatrix\n     * @memberof VisualMatrix\n     */\n    constructor (matrix, config = {}) {\n        super(matrix, config);\n\n        this._breakPointer = matrix[0].length;\n\n        // Create Tree\n        this._tree = {\n            key: COLUMN_ROOT,\n            values: this.createTree()\n        };\n        this._logicalSpace = this.computeLogicalSpace();\n    }\n\n    /**\n     * Computes the logical space taken by the entire matrixTree\n     *\n     * @return {Object} Logical space taken\n     * @memberof VisualMatrix\n     */\n    computeLogicalSpace () {\n        const matrixTree = this.tree();\n        createMatrixEachLevel(matrixTree, true);\n        return computeLogicalSpace(matrixTree, this.config(), this.maxMeasures());\n    }\n\n    computeViewableSpaces (measures) {\n        const {\n            maxHeights,\n            maxWidths,\n            height,\n            width\n        } = measures;\n\n        return this.viewableMatrix.map((matrixInst, i) => {\n            const cellDimOptions = { matrixInst, maxWidths, maxHeights, matrixIndex: i, height };\n            const {\n                heights,\n                rowHeights,\n                columnWidths\n            } = this.getCellDimensions(cellDimOptions);\n            const heightMeasures = heights;\n            const columnMeasures = [width, width];\n\n            return {\n                rowHeights: {\n                    primary: rowHeights[0],\n                    secondary: rowHeights[1]\n                },\n                columnWidths: {\n                    primary: columnWidths[0],\n                    secondary: columnWidths[1]\n                },\n                height: {\n                    primary: heightMeasures[0],\n                    secondary: heightMeasures[1]\n                },\n                width: {\n                    primary: columnMeasures[0],\n                    secondary: columnMeasures[1]\n                }\n            };\n        });\n    }\n\n    /**\n     *\n     *\n     * @return\n     * @memberof VisualMatrix\n     */\n    removeExtraCells () {\n        const {\n            isTransposed,\n            extraCellLengths\n        } = this.config();\n        const matrix = this._layoutMatrix;\n        const tree = mergeRecursive({}, this.tree());\n        const begCellLen = extraCellLengths[0];\n        const endCellLen = extraCellLengths[1] || Number.NEGATIVE_INFINITY;\n        const layoutMatrix = !isTransposed ? extraCellsRemover(matrix, begCellLen, endCellLen) :\n        matrix.slice(0).map(e => extraCellsRemover(e, begCellLen, endCellLen));\n\n        tree.values = extraCellsRemover(tree.values, begCellLen, endCellLen);\n\n        tree.matrix = tree.matrix.map(e => extraCellsRemover(e, begCellLen, endCellLen));\n\n        return {\n            tree,\n            layoutMatrix\n        };\n    }\n\n    getPriorityDistribution (measures) {\n        const {\n            height,\n            maxHeights\n        } = measures;\n        let remainingHeight = height;\n        let heightDist = [];\n        let conditions = [];\n        let divider = 2;\n        const priority = this.config().priority;\n        const primaryMatrixLength = this.primaryMatrix().length;\n\n        if (priority === 2) {\n            conditions = [primaryMatrixLength - 1, primaryMatrixLength];\n            divider = 2;\n        } else {\n            conditions = priority === 0 ? [primaryMatrixLength - 1] : [primaryMatrixLength];\n            divider = 1;\n        }\n        maxHeights.forEach((heights, index) => {\n            if (conditions.indexOf(index) === -1) {\n                heightDist[index] = heights;\n                remainingHeight -= heights;\n            }\n        });\n        if (remainingHeight < 0) {\n            heightDist = heightDist.map(() => 0);\n        } else {\n            conditions.forEach((condition) => {\n                heightDist[condition] = Math.min(maxHeights[condition], (remainingHeight) / divider);\n            });\n        }\n        return heightDist;\n    }\n\n    /**\n     * Calculates the depth of the tree that can be viewed\n     *\n     * @param {Array} widthMeasures array of widths\n     * @param {Array} heightMeasures array of heights\n     * @return {number} depth of the tree\n     * @memberof VisualMatrix\n     */\n    calculateDepth (widthMeasures) {\n        let j;\n        const { width } = this.availableSpace();\n\n        for (j = 0; j < widthMeasures.length; j++) {\n            if (widthMeasures[j] <= width) break;\n        }\n        return Math.min(widthMeasures.length - 1, j);\n    }\n\n     /**\n     * Redistributes the provied space to all cells\n     *\n     * @param {*} viewableMatrix current viewport matrix\n     * @param {*} width provied width\n     * @param {*} height provied height\n     * @return {Object} current viewports matrixes with measures\n     * @memberof VisualMatrix\n     */\n    redistributeSpaces (width, height) {\n        let maxHeights = [];\n        let maxWidths = [];\n\n        this.viewableMatrix.forEach((matrixInst) => {\n            const matrix = matrixInst.matrix;\n            const mWidth = 0;\n            const mHeight = 0;\n            const options = { mWidth, mHeight, matrix, width, height, maxHeights, maxWidths };\n            const maxMeasures = this.redistributeViewSpaces(options);\n            maxWidths = maxMeasures.maxWidths;\n            maxHeights = maxMeasures.maxHeights;\n        });\n\n        return this.computeViewableSpaces({ height, width, maxHeights, maxWidths });\n    }\n\n    /**\n     * Distibutes the given space column wisely\n     *\n     * @param {Object} measures Redistribution information\n     * @memberof VisualMatrix\n     */\n    redistributeViewSpaces (measures) {\n        let rHeights = [];\n        const {\n            matrix,\n            width,\n            maxHeights,\n            maxWidths\n        } = measures;\n        const borderWidth = this.config().unitMeasures.border;\n\n        const mWidth = spaceTakenByRow(matrix[this._lastLevelKey]).width;\n        const cWidths = getDistributedWidth({\n            row: matrix[this._lastLevelKey],\n            width: mWidth,\n            availableWidth: width\n        }, this.config());\n\n        matrix.forEach((row, rIdx) => row.forEach((col, cIdx) => {\n            const oldLogicalSpace = col.getLogicalSpace();\n\n            col.setAvailableSpace(cWidths[cIdx] - borderWidth, oldLogicalSpace.height);\n            rHeights[rIdx] = Math.max(rHeights[rIdx] || 0, Math.floor(col.getLogicalSpace().height));\n        }));\n        if (maxHeights.length > 0) {\n            rHeights = rHeights.map((e, i) => Math.max(e, maxHeights[0][i]));\n        }\n        maxHeights.push(rHeights);\n        for (let x = 0; x < maxHeights.length; x++) {\n            maxHeights[x] = rHeights;\n        }\n        maxWidths.push(cWidths);\n        return { maxHeights, maxWidths };\n    }\n\n    /**\n     * Dispatch the calculated cell dimensions to all the cells\n     *\n     * @param {Object} measures cell dimension information\n     * @return {Object} row and column heights / widths\n     * @memberof VisualMatrix\n     */\n    getCellDimensions (measures) {\n        const {\n            unitMeasures\n        } = this.config();\n        const borderWidth = unitMeasures.border;\n        const { matrixInst, height, maxWidths, maxHeights, matrixIndex } = measures;\n        const matrix = matrixInst.matrix;\n        const rowHeights = [[0], [0]];\n        const columnWidths = [[0], [0]];\n        const heights = [0, 0];\n        const widths = [0, 0];\n        const breakPointer = this._breakPointer;\n\n        const heightDistribution = this.getPriorityDistribution({ height, maxHeights: maxHeights[0] || [] });\n\n        matrix.forEach((row, rIdx) => {\n            row.forEach((cell, cIdx) => {\n                const colHeight = heightDistribution[rIdx] || 0;\n                const colWidth = maxWidths[matrixIndex][cIdx];\n\n                cell.setAvailableSpace(colWidth - borderWidth, colHeight);\n\n                if (cIdx === 0 && rIdx < breakPointer) {\n                    rowHeights[0][rIdx] = colHeight;\n                    heights[0] = (heights[0] || 0) + colHeight;\n                } else if (cIdx === 0 && rIdx >= breakPointer) {\n                    rowHeights[1][rIdx - breakPointer] = colHeight;\n                    heights[1] = (heights[1] || 0) + colHeight;\n                }\n                if (rIdx === this._lastLevelKey) {\n                    columnWidths[0][cIdx] = colWidth;\n                    columnWidths[1][cIdx] = colWidth;\n                }\n            });\n        });\n        return {\n            heights,\n            widths,\n            rowHeights,\n            columnWidths\n        };\n    }\n}\n\n","import {\n    HEIGHT, WIDTH, COLUMN, ROW, HORIZONTAL, VERTICAL, HOLISTIC,\n    MAX_WIDTH_AVAIL_FOR_COL_MATRIX, COLUMN_MATRIX, MAX_HEIGHT_AVAIL_FOR_ROW_MATRIX, ROW_MATRIX, SCROLL\n} from '../enums/constants';\n\n/**\n * Gets measurement for an instance of visual matrix\n *\n * @param {Array} matrix instance of visual matrix\n * @param {string} type height/width\n * @return {Object} Logical height/width of the matrix\n */\nexport function getMatrixMeasurement (matrix, type) {\n    if (matrix) {\n        return matrix.getLogicalSpace()[type];\n    }\n    return 0;\n}\n\n/**\n * Sets available space for an instance of visual matrix\n *\n * @param {Array} matrix instance of visual matrix\n * @param {string} type height/width\n * @param {number} value Value of measurement\n */\nexport function setMatrixMeasurement (matrix, type, value) {\n    if (matrix) {\n        const spaces = matrix.getLogicalSpace();\n        if (value && spaces[type] !== value) {\n            type === HEIGHT ? matrix.setAvailableSpace(spaces.width, value) :\n                matrix.setAvailableSpace(value, spaces.height);\n        }\n    }\n}\n\nconst setAvailableSpace = (matrix, widths, heights) => {\n    matrix.forEach((row, rIdx) => {\n        row.forEach((placeholder, cIdx) => {\n            placeholder.setAvailableSpace(widths[cIdx], heights[rIdx]);\n        });\n    });\n};\n\nconst setViewSpaces = (layout, pointerType, viewSpaces) => {\n    let pointer = layout.config()[`${pointerType}Pointer`];\n    if (viewSpaces.length - 1 < pointer) {\n        pointer = 0;\n        layout.config({ [`${pointerType}Pointer`]: pointer });\n    }\n    return pointer;\n};\n\nconst paginationDetailsMap = {\n    column: {\n        maxMeasure: MAX_WIDTH_AVAIL_FOR_COL_MATRIX,\n        matrix: COLUMN_MATRIX,\n        measureType: WIDTH,\n        scrollType: HORIZONTAL\n    },\n    row: {\n        maxMeasure: MAX_HEIGHT_AVAIL_FOR_ROW_MATRIX,\n        matrix: ROW_MATRIX,\n        measureType: HEIGHT,\n        scrollType: VERTICAL\n    }\n};\n\n/**\n * This method provides the required width/height in the different pagination stages.\n * If the pagination is holistic, then only the max width/height will be provided for layouting\n * If scroll is enabled, then the entire width/height shall be provided for layouting\n * Note: width is required for scrolling the columns while height is required for scrolling rows\n *\n *\n * @param {Layout} layout Layout instance required for configuration details\n * @param {Object} measureDetails different measure details for row/column\n * @param {number} maxMeasure maximum width/height present for column/row respectively\n * @return {number} Provides the width/height based on which further calculation can occur\n */\nconst getMatrixMeasureForPagination = (layout, measureDetails, maxMeasure, buffer) => {\n    const {\n        pagination\n    } = layout.config();\n    const {\n        matrix,\n        measureType,\n        scrollType\n    } = measureDetails;\n\n    switch (pagination) {\n    case HOLISTIC:\n        return maxMeasure;\n    default: {\n        const actualMeasure = getMatrixMeasurement(layout[matrix](), measureType) + buffer;\n\n        if (actualMeasure > maxMeasure) {\n            layout.scrollInfo({ [scrollType]: true });\n        }\n        return Math.max(maxMeasure, actualMeasure);\n    }\n    }\n};\n\n/**\n * This method uses the getMatrixMeasureForPagination function to calculate maximum measure\n * depending on the layouting algorithm used\n *\n *\n * @param {Layout} layout Layout instance required for configuration details\n * @param {string} matrixType row/column\n * @param {number} relatedMaxMeasure maximum width/height present for column/row respectively\n * @return {number} Provides the width/height based on which further calculation can occur\n */\nconst paginationMeasureGetter = (layout, matrixType, relatedMaxMeasure, buffer) =>\n    getMatrixMeasureForPagination(layout, paginationDetailsMap[matrixType], relatedMaxMeasure, buffer);\n\nconst getMatrixWidthDetails = (layout) => {\n    const rowMatrix = layout.rowMatrix();\n    const {\n        width\n    } = layout.measurement();\n    const {\n        border,\n        buffer\n    } = layout.config();\n\n    // Border adjustment for each cell in the central matrix\n    const borderWidth = border.width;\n\n    // Get width of row matrix\n    const rowMatrixWidth = getMatrixMeasurement(rowMatrix, WIDTH);\n\n    // Get maximum width allowed for the row matrix\n    const maxRowMatrixWidth = Math.min(rowMatrixWidth + buffer, width / 2);\n\n    // Get maximum width available for the column matrix\n    const maxWidthAvailableForColumnMatrix = width - maxRowMatrixWidth - borderWidth;\n\n    // Set width for column matrix\n    const columnMatrixWidth = paginationMeasureGetter(layout, COLUMN, maxWidthAvailableForColumnMatrix, 0);\n\n    return {\n        rowMatrixWidth,\n        maxRowMatrixWidth,\n        columnMatrixWidth,\n        maxWidthAvailableForColumnMatrix\n    };\n};\n\nconst getHeightRequiredByColMatrix = (layout, columnMatrixWidth) => {\n    const {\n        height\n    } = layout.measurement();\n    const columnMatrix = layout.columnMatrix();\n\n    // Get maximum allowed height for colum matrix\n    const maxColumnMatrixHeight = Math.min(columnMatrix.getLogicalSpace().height, height / 2);\n\n    // Set the computed width and max height to column matrix to determine the actual height\n    // that will be taken by the column matrix\n    columnMatrix.setAvailableSpace(columnMatrixWidth, maxColumnMatrixHeight);\n\n    // Get the set of pages column view\n    const columnViewPages = columnMatrix.getViewableSpaces();\n\n    // Figuring out total space needed by current view space\n    const columnViewSpace = columnViewPages[layout.config().columnPointer];\n\n    // Getting height of column matrix\n    const columnMatrixHeight = columnViewSpace.height.primary + columnViewSpace.height.secondary;\n\n    return {\n        columnMatrixHeight,\n        maxColumnMatrixHeight\n    };\n};\n\nconst getMatrixHeightDetails = (layout, columnMatrixWidth) => {\n    const {\n        height\n    } = layout.measurement();\n    const {\n        buffer\n    } = layout.config();\n\n    // Get actual height required by column matrix\n    const { columnMatrixHeight, maxColumnMatrixHeight } = getHeightRequiredByColMatrix(layout, columnMatrixWidth);\n\n    // Based on column height, compute max height available for row matrix\n    const maxHeightAvailableForRowMatrix = height - Math.min(maxColumnMatrixHeight, columnMatrixHeight);\n\n    // Get height for row matrix\n    const rowMatrixHeight = paginationMeasureGetter(layout, ROW, maxHeightAvailableForRowMatrix, buffer);\n\n    return {\n        columnMatrixHeight,\n        maxColumnMatrixHeight,\n        rowMatrixHeight,\n        maxHeightAvailableForRowMatrix\n    };\n};\n\nconst setValueMatrixMeasurements = (layout, rowViewableSpaces, columnViewableSpaces) => {\n    const centerMatrix = layout.centerMatrix();\n\n    const {\n        border\n    } = layout.config();\n    const matrices = layout.matrices();\n    const {\n        top,\n        bottom\n    } = matrices;\n\n    // Border adjustment for each cell in the central matrix\n    const borderWidth = border.width;\n\n    // Get the heights for each cell in the row matrix\n    const rowHeights = [].concat(...rowViewableSpaces.map(e => e.rowHeights.primary));\n\n    // Get the widths for each of the row matrix cells(primary and secondary)\n    const rowWidthsPrimary = [].concat(...rowViewableSpaces.map(e => e.columnWidths.primary));\n    const rowWidthsSecondary = [].concat(...rowViewableSpaces.map(e => e.columnWidths.secondary));\n\n    // Get the widths for each cell in the column matrix\n    const columnWidths = [].concat(...columnViewableSpaces.map(e => e.columnWidths.primary));\n\n    // Get the widths for each of the column matrix cells(primary and secondary)\n    const columnHeightsPrimary = columnViewableSpaces[0].rowHeights.primary;\n    const columnHeightsSecondary = [].concat(...columnViewableSpaces.map(e => e.rowHeights.secondary));\n\n    // Setting the available space for each cell in the centre matrix computed throught the row and\n    // column matrices\n    centerMatrix.forEach((matrix, rIdx) => {\n        matrix.forEach((placeholder, cIdx) => {\n            placeholder.setAvailableSpace(columnWidths[cIdx] - borderWidth, rowHeights[rIdx] - borderWidth);\n        });\n    });\n\n    // Set the heights and widths for the corner matrices namely:\n    // TOP_LEFT\n    setAvailableSpace(top[0], rowWidthsPrimary, columnHeightsPrimary);\n    // TOP_RIGHT\n    setAvailableSpace(top[2], rowWidthsSecondary, columnHeightsPrimary);\n    // BOTTOM_LEFT\n    setAvailableSpace(bottom[0], rowWidthsPrimary, columnHeightsSecondary);\n     // BOTTOM_RIGHT\n    setAvailableSpace(bottom[2], rowWidthsSecondary, columnHeightsSecondary);\n};\n\nconst bufferCondition = {\n    isScroll: true,\n    pagination: SCROLL\n};\n\nconst getBufferFromCondition = (layout, type) => {\n    const scrollInfo = layout.scrollInfo();\n    const {\n        pagination\n    } = layout.config();\n\n    const currentBufferType = {\n        pagination,\n        isScroll: scrollInfo[type]\n    };\n\n    return Object.keys(bufferCondition).every(e => bufferCondition[e] === currentBufferType[e]);\n};\n\nconst getActualBufferFromConfig = (layout) => {\n    const {\n        buffer\n    } = layout.config();\n    const [horizontalBuffer, verticalBuffer] = [HORIZONTAL, VERTICAL].map((type) => {\n        if (getBufferFromCondition(layout, type)) {\n            return buffer;\n        }\n        return 0;\n    });\n\n    return {\n        horizontalBuffer,\n        verticalBuffer\n    };\n};\n/**\n * Computes the measurements of space for all matrices in the\n * layout\n *\n * @param {Object} layout Instance of grid layout\n * @return {Object} set of measurements for the layout\n */\nexport const computeLayoutMeasurements = (layout) => {\n    const rowMatrix = layout.rowMatrix();\n    const columnMatrix = layout.columnMatrix();\n\n    // Compute the widths of the row and column matrices\n    const {\n        rowMatrixWidth,\n        maxRowMatrixWidth,\n        maxWidthAvailableForColumnMatrix,\n        columnMatrixWidth\n    } = getMatrixWidthDetails(layout);\n\n    // Compute the heights of the row and column matrices\n    const {\n        columnMatrixHeight,\n        rowMatrixHeight,\n        maxHeightAvailableForRowMatrix\n    } = getMatrixHeightDetails(layout, columnMatrixWidth);\n\n    const {\n        horizontalBuffer,\n        verticalBuffer\n    } = getActualBufferFromConfig(layout);\n    rowMatrix.setAvailableSpace(maxRowMatrixWidth - verticalBuffer, rowMatrixHeight - horizontalBuffer);\n\n    // Get row and columns viewable spaces\n    const rowViewableSpaces = rowMatrix.getViewableSpaces();\n    const columnViewableSpaces = columnMatrix.getViewableSpaces();\n\n    // Set view spaces for row and columns\n    setViewSpaces(layout, ROW, rowViewableSpaces);\n    setViewSpaces(layout, COLUMN, columnViewableSpaces);\n\n    // Set measures for each cell of the value matrix\n    setValueMatrixMeasurements(layout, rowViewableSpaces, columnViewableSpaces);\n\n    return {\n        rowMatrixHeight: rowMatrixHeight - horizontalBuffer,\n        rowMatrixWidth: rowMatrixWidth - verticalBuffer,\n        maxHeightAvailableForRowMatrix: maxHeightAvailableForRowMatrix - horizontalBuffer,\n\n        columnMatrixHeight,\n        columnMatrixWidth,\n        maxWidthAvailableForColumnMatrix\n    };\n};\n","/**\n * Gets view matrices based on current pointers for row and column\n *\n * @param {Object} layout instance of layout\n * @param {number} rowPointer current row pointer\n * @param {number} columnPointer current column pointer\n * @return {Object} returns the view matrix and its relevant information\n */\nexport const getViewMatrices = (layout, rowPointer, columnPointer) => {\n    const rowMatrix = layout.rowMatrix();\n    const columnMatrix = layout.columnMatrix();\n    const centerMatrix = layout.centerMatrix();\n    const matrices = layout.matrices();\n    const rowMatrices = rowMatrix.getViewableMatrices();\n    const columnMatrices = columnMatrix.getViewableMatrices();\n    const centralMatrixPointer = {\n        row: 0,\n        column: 0\n    };\n\n    for (let i = rowPointer - 1; i >= 0; i--) {\n        const length = Math.max(rowMatrices[i].primaryMatrix.length,\n            rowMatrices[i].secondaryMatrix.length);\n        centralMatrixPointer.row += length;\n    }\n     /* istanbul ignore next */\n    for (let i = columnPointer - 1; i >= 0; i--) {\n        const matrix = columnMatrices[i];\n        const { primaryMatrix, secondaryMatrix } = matrix;\n        const length = Math.max(primaryMatrix[0] ? primaryMatrix[0].length : 0,\n            secondaryMatrix[0] ? secondaryMatrix[0].length : 0);\n        centralMatrixPointer.column += length;\n    }\n\n    matrices.top[1] = columnMatrices[columnPointer].primaryMatrix;\n    matrices.bottom[1] = columnMatrices[columnPointer].secondaryMatrix;\n\n    matrices.center[0] = rowMatrices[rowPointer].primaryMatrix;\n    matrices.center[2] = rowMatrices[rowPointer].secondaryMatrix;\n\n    const rowMatrixLen = Math.max(matrices.center[0].length, matrices.center[2].length);\n     /* istanbul ignore next */\n    const columnMatrixLen = Math.max(matrices.top[1][0] ? matrices.top[1][0].length : 0, matrices.bottom[1][0] ?\n            matrices.bottom[1][0].length : 0);\n    matrices.center[1] = centerMatrix.slice(centralMatrixPointer.row, centralMatrixPointer.row + rowMatrixLen)\n        .map(matrix => matrix.slice(centralMatrixPointer.column, centralMatrixPointer.column + columnMatrixLen));\n\n    return {\n        matrices,\n        rowPages: rowMatrices.length,\n        columnPages: columnMatrices.length\n    };\n};\n\nconst measureSum = measureArr => measureArr.reduce((total, measure) => total + measure, 0);\n/**\n * Returns measurements of the cells of the current matrix\n *\n * @param {Object} layout instance of layout\n * @return {Object} returns the measurements for current view matrix\n */\nexport const getViewMeasurements = (layout, maxRowHeight, maxColWidth) => {\n    const rowMatrix = layout.rowMatrix();\n    const columnMatrix = layout.columnMatrix();\n    const {\n        columnPointer,\n        rowPointer\n    } = layout.config();\n\n    const rowSpaces = rowMatrix.getViewableSpaces()[rowPointer];\n    const colSpaces = columnMatrix.getViewableSpaces()[columnPointer];\n\n    const {\n        rowHeights,\n        width: rowMatrixWidth\n    } = rowSpaces;\n    const {\n        columnWidths,\n        height: columnMatrixHeight\n    } = colSpaces;\n\n    const { primary: leftWidth, secondary: rightWidth } = rowMatrixWidth;\n    const { primary: topHeight, secondary: bottomHeight } = columnMatrixHeight;\n\n    const centerHeight = measureSum(rowHeights.primary);\n    const centerWidth = measureSum(columnWidths.primary);\n    const viewWidth = [leftWidth, Math.min(centerWidth, maxColWidth), rightWidth];\n    const viewHeight = [topHeight, Math.min(centerHeight, maxRowHeight), bottomHeight];\n\n    return {\n        viewWidth,\n        viewHeight,\n        actualCenterMeasures: {\n            height: centerHeight,\n            width: centerWidth\n        },\n        totalMeasures: {\n            width: measureSum(viewWidth),\n            height: measureSum(viewHeight)\n        },\n        unitHeights: rowHeights,\n        unitWidths: columnWidths\n    };\n};\n","/**\n * This file declares a table that can be extended to create a Datagrid, crosstab\n * and man other visualzations that require a tabular structure.\n */\n\nimport { getUniqueId, mergeRecursive } from 'muze-utils';\nimport GenericLayout from '../generic-layout';\nimport { DEFAULT_CONFIGURATION, DEFAULT_MEASUREMENTS } from './defaults';\nimport { generateVisualMatrices } from './layout-helper';\nimport { computeLayoutMeasurements } from './computations';\nimport { getViewMeasurements, getViewMatrices } from './view-info-getter';\n/**\n * This class is used to create a tabular structure that\n * can house charts and values.\n *\n * @class GridLayout\n */\nexport default class GridLayout extends GenericLayout {\n\n    /**\n     * Creates an instance of TableLayout.\n     * @param {HTMLElement} matrices Set of upto 9 matrices containing the cells to be rendered\n     * @param {HTMLElement} mountPoint DOM element/d3 selection where the layout is to be mounted\n     * @param {Object} measurement The dimensions of the layout\n     * @param {Object} config external configurations.\n     * @memberof GenericLayout\n     */\n    constructor (matrices, mountPoint, measurement, config) {\n        super(mountPoint, measurement, config);\n        this.matrices(matrices);\n        this.config(this.constructor.defaultConfig());\n        this._layoutId = getUniqueId();\n        this._viewInfo = this.constructor.defaultViewInfo();\n        this._scrollInfo = { horizontal: false, vertical: false };\n    }\n\n    static defaultViewInfo () {\n        return Object.assign({}, {\n            layoutDimensions: {\n                border: this.defaultConfig().border,\n                viewHeight: [0, 0, 0],\n                viewWidth: [0, 0, 0]\n            },\n            viewMatricesInfo: {\n                columnPages: 0,\n                rowPages: 0,\n                matrices: { top: [], center: [], bottom: [] }\n            }\n        });\n    }\n\n    /**\n     * Returns initial set of measurements for the grid layout\n     *\n     * @static\n     * @return {Object} Returns initial set of measurements\n     * @memberof GridLayout\n     */\n    static defaultMeasurement () {\n        return DEFAULT_MEASUREMENTS;\n    }\n\n    /**\n     * Returns initialconfiguration for grid layout\n     *\n     * @static\n     * @return {Object} Returns initial configuration for grid layout\n     * @memberof GridLayout\n     */\n    static defaultConfig () {\n        return DEFAULT_CONFIGURATION;\n    }\n\n    /**\n     * This function is used to return an instance of GridLayout\n     *\n     * @return {GridLayout} Instance of grid layout.\n     * @static\n     * @memberof GridLayout\n     */\n    static create () {\n        return new GridLayout(null, null, this.defaultMeasurement(), this.defaultConfig());\n    }\n\n    /**\n     * Sets/Gets the matrices for the layout\n     *\n     * @param {Array} matrices Set of matrices\n     * @return {Object} Getter/Setter\n     * @memberof GridLayout\n     */\n    matrices (matrices) {\n        if (matrices) {\n            this._matrices = generateVisualMatrices(this, matrices);\n            return this;\n        }\n        return super.matrices(matrices);\n    }\n\n    /**\n     * Triggers the computations for the layout based on the matrices available\n     * This causes a reflow in the entire layout system.\n     *\n     * @return {Object} Layout instance\n     * @memberof GridLayout\n     */\n    triggerReflow () {\n        this.scrollInfo({ horizontal: false, vertical: false });\n        const {\n            maxHeightAvailableForRowMatrix,\n            maxWidthAvailableForColumnMatrix\n        } = computeLayoutMeasurements(this);\n\n        this.setViewInformation(maxHeightAvailableForRowMatrix, maxWidthAvailableForColumnMatrix);\n        return this;\n    }\n\n    gotoPage (type, pageNumber) {\n        const pageType = type.toLowerCase();\n        const { viewMatricesInfo } = this.viewInfo();\n        const totalPages = viewMatricesInfo[`${pageType}Pages`];\n        const pointer = Math.min(Math.max(1, pageNumber), totalPages);\n        this.config({\n            [`${pageType}Pointer`]: pointer - 1\n        });\n        this.setViewInformation();\n        this.renderGrid();\n        return this;\n    }\n\n    pages (type) {\n        const { viewMatricesInfo } = this.viewInfo();\n        const pageType = type.toLowerCase();\n        return {\n            totalPages: viewMatricesInfo[`${pageType}Pages`],\n            currentPage: this.config()[`${pageType}Pointer`] + 1\n        };\n    }\n\n    viewInfo (...viewInfo) {\n        if (viewInfo.length) {\n            this._viewInfo = viewInfo[0];\n            return this;\n        }\n        return this._viewInfo;\n    }\n\n    scrollInfo (...scrollInfo) {\n        if (scrollInfo.length) {\n            this._scrollInfo = mergeRecursive(this._scrollInfo, scrollInfo[0]);\n            return this;\n        }\n        return this._scrollInfo;\n    }\n\n    /**\n     *\n     *\n     * @returns\n     * @memberof GridLayout\n     */\n    setViewInformation (maxRowHeight, maxColWidth) {\n        const {\n            rowPointer,\n            columnPointer,\n            border\n        } = this.config();\n        const viewMatricesInfo = getViewMatrices(this, rowPointer, columnPointer);\n        const layoutDimensions = getViewMeasurements(this, maxRowHeight, maxColWidth);\n        layoutDimensions.border = border;\n        this.viewInfo({\n            viewMatricesInfo,\n            layoutDimensions\n        });\n        return this;\n    }\n}\n","import RowMatrix from '../visual-matrix/row-matrix';\nimport ColumnMatrix from '../visual-matrix/column-matrix';\n\nexport const generateVisualMatrices = (context, matrices) => {\n    // Set of matrices for layout is generated starting with the left matrix\n    let leftMatrix = [];\n    let rightMatrix = [];\n    let topMatrix = [];\n    let bottomMatrix = [];\n    let begColCells;\n    let endColCells;\n    const {\n        isRowSizeEqual,\n        isColumnSizeEqual,\n        gutterSpace,\n        distribution,\n        border,\n        breakPage,\n        priority\n    } = context.config();\n    const {\n        minUnitHeight,\n        minUnitWidth\n    } = context.measurement();\n    const { top, center, bottom } = matrices;\n    const [topLeft, topColumns, topRight] = top;\n    const [leftRows, valueMatrix, rightRows] = center;\n    const [bottomLeft, bottomColumns, bottomRight] = bottom;\n\n    if (leftRows.length > 0) {\n        // If no left matrix is present, context will be empty\n        leftMatrix = [...topLeft, ...leftRows, ...bottomLeft];\n    }\n    if (rightRows.length > 0) {\n        // If no right matrix is present, context will be empty\n        rightMatrix = [...topRight, ...rightRows, ...bottomRight];\n    }\n    if (topColumns.length > 0 && topColumns[0].length > 0) {\n        // If no top matrix is present, context will be empty\n        topMatrix = topColumns.map((d, i) => [...topLeft[i], ...d, ...topRight[i]]);\n    }\n    if (bottomColumns.length > 0 && bottomColumns[0].length > 0) {\n        // If no bottom matrix is present, context will be empty\n        bottomMatrix = bottomColumns.map((d, i) => [...bottomLeft[i], ...d, ...bottomRight[i]]);\n    }\n\n    context.rowMatrix(new RowMatrix([leftMatrix, rightMatrix], {\n        isDistributionEqual: isRowSizeEqual,\n        distribution: distribution.rows,\n        gutter: gutterSpace.rows,\n        unitMeasures: {\n            width: minUnitWidth,\n            height: minUnitHeight,\n            border: border.width\n        },\n        priority: priority.row,\n        breakPage: breakPage.rows.map(e => e + Math.max(topLeft.length, topRight.length)),\n        extraCellLengths: [topLeft.length, bottomLeft.length]\n    }));\n\n    if (topLeft.length > 0) {\n        begColCells = topLeft[0].length;\n    } else {\n        begColCells = bottomLeft.length > 0 ? bottomLeft[0].length : 0;\n    }\n\n    if (topRight.length > 0) {\n        endColCells = topRight[0].length;\n    } else {\n        endColCells = bottomRight.length > 0 ? bottomRight[0].length : 0;\n    }\n\n    context.columnMatrix(new ColumnMatrix([topMatrix, bottomMatrix], {\n        isDistributionEqual: isColumnSizeEqual,\n        distribution: distribution.columns,\n        gutter: gutterSpace.columns,\n        isTransposed: true,\n        unitMeasures: {\n            width: minUnitWidth,\n            height: minUnitHeight,\n            border: border.width\n        },\n        priority: priority.col,\n        breakPage: breakPage.columns,\n        extraCellLengths: [begColCells, endColCells]\n    }));\n    context.centerMatrix(valueMatrix);\n\n    return matrices;\n};\n","import {\n    TOP, BOTTOM, LEFT, RIGHT, CENTER, BLANK_BORDERS, COLUMN, ROW,\n    VIEW_INDEX, ROW_MATRIX_INDEX, COLUMN_MATRIX_INDEX, MIDDLE, NO_BORDERS\n} from '../enums/constants';\n\nconst borderMap = {\n    [`${TOP}-${LEFT}`]: NO_BORDERS,\n    [`${TOP}-${MIDDLE}`]: COLUMN,\n    [`${TOP}-${RIGHT}`]: NO_BORDERS,\n    [`${CENTER}-${LEFT}`]: ROW,\n    [`${CENTER}-${MIDDLE}`]: CENTER,\n    [`${CENTER}-${RIGHT}`]: ROW,\n    [`${BOTTOM}-${LEFT}`]: NO_BORDERS,\n    [`${BOTTOM}-${MIDDLE}`]: COLUMN,\n    [`${BOTTOM}-${RIGHT}`]: NO_BORDERS\n};\n\nconst applySpecificBorder = (cells, color, type, style) => {\n    cells.style(`border-${type}`, `${style} ${color}`);\n};\n\nconst specificBorderApplier = (borderTypes, showBorders, cells, borderInfo) => {\n    const {\n        color,\n        width,\n        style\n    } = borderInfo;\n    const borderStyle = `${width}px ${style}`;\n\n    borderTypes.forEach((borderType) => {\n        applySpecificBorder(cells, showBorders[borderType] ? color : BLANK_BORDERS, borderType, borderStyle);\n    });\n};\n\nconst borderApplier = (cells, borderInfo) => {\n    const {\n       showRowBorders,\n      showColBorders,\n      showValueBorders\n  } = borderInfo;\n    return {\n        row: () => specificBorderApplier([TOP, BOTTOM], showRowBorders, cells, borderInfo),\n        column: () => specificBorderApplier([LEFT, RIGHT], showColBorders, cells, borderInfo),\n        center: () => specificBorderApplier([LEFT, RIGHT, TOP, BOTTOM], showValueBorders, cells, borderInfo)\n    };\n};\n\nexport const applyBorders = (cells, border, row, column) => {\n    const borderApplierFn = borderApplier(cells, border);\n    const borderMapVal = borderMap[`${ROW_MATRIX_INDEX[VIEW_INDEX[row]]}-${COLUMN_MATRIX_INDEX[column]}`];\n    if (borderMapVal) {\n        borderApplierFn[borderMapVal]();\n    }\n};\n","import { selectElement } from 'muze-utils';\nimport {\n     TOP, BOTTOM, ROW_SPAN, COL_SPAN, CENTER, ROW, COLUMN\n} from '../enums/constants';\n\nconst orderMaker = arr => Array.from(Array(arr.length).keys());\n\nconst nestByStack = (stack, updateArr, optionalParams = {}) => {\n    let {\n        order,\n        keyFn\n    } = optionalParams;\n    const arr = updateArr.slice();\n    const currStack = stack.slice();\n    const prevStack = currStack.slice();\n    // Order in which element are to be checked for nesting, default normal looping\n    // Order is always in the order of nest, i.e., left to right\n    order = order || Array.from(Array(arr.length).keys());\n\n    // Key function, if array of objects\n    keyFn = keyFn || (v => v);\n\n    // Return same array if stack is empty\n    if (currStack.length === 0) {\n        const newArr = [];\n        order.forEach((e) => {\n            newArr.push(arr[e]);\n        });\n        return { prevStack, currStack: arr, arr: newArr };\n    }\n\n    let arrVal = '';\n    let stackVal = '';\n    const newArr = [];\n\n    // Loop in order\n    for (let i = order.length - 1; i >= 0; i--) {\n        // Get current element index from the order given\n        const currElemIndex = order[i];\n\n        // Crete a hashmap for the hierarchy by joining strings of the array for both stack and input array\n        arrVal += keyFn(arr[currElemIndex]);\n        stackVal += keyFn(currStack[currElemIndex]);\n\n        // If the current value and value in stack is same, convert it to null\n        if (arrVal === stackVal) {\n            newArr[currElemIndex] = null;\n        } else {\n            stackVal = '';\n            // Loop from the current index in order to the last element in order to change the\n            // whole hierarchy\n            for (let j = i; j < order.length; j++) {\n                const newElem = order[j];\n                const arrElem = arr[newElem];\n\n                newArr[newElem] = arrElem;\n\n                // Reset stack to new stack\n                currStack[newElem] = arrElem;\n                stackVal = arrVal;\n            }\n        }\n    }\n    const returnArr = [];\n    order.forEach((e) => {\n        returnArr.push(newArr[e]);\n    });\n    return { prevStack, currStack, arr: returnArr };\n};\n\nconst spanCalculator = (colData, colIdx, matrix, rIdx) => {\n    // if data is not header cell then rowspan\n    // has to be 1\n    if (!colData) {\n        return () => 1;\n    }\n\n    const conditions = {\n        row: count => matrix[rIdx + count] && matrix[rIdx + count][colIdx],\n        column: count => matrix[rIdx][colIdx + count]\n    };\n\n    return (type) => {\n        let count = 1;\n        let isNull = false;\n\n        while (!isNull) {\n            if (conditions[type](count) === null) {\n                count += 1;\n            } else {\n                isNull = true;\n            }\n        }\n        return count;\n    };\n};\n\nconst maskCreator = (matrix, order) => ({\n    row: () => {\n        let stack = [];\n        return matrix.map((e) => {\n            const {\n                    currStack,\n                    arr\n                } = nestByStack(stack, e, { keyFn: val => val.valueOf(), order });\n\n            stack = currStack;\n            return arr;\n        });\n    },\n    column: () => {\n        let stack = [];\n        const viewMatrix = [];\n        matrix.length && matrix[0].forEach((cell, colIndex) => {\n            const hierarchy = [];\n            matrix.forEach((row) => {\n                hierarchy.push(row[colIndex]);\n            });\n            const {\n                    currStack,\n                    arr\n                } = nestByStack(stack, hierarchy, { keyFn: val => val.valueOf(), order });\n            stack = currStack;\n\n            matrix.forEach((row, rowIndex) => {\n                viewMatrix[rowIndex] = viewMatrix[rowIndex] || [];\n                viewMatrix[rowIndex][colIndex] = arr[rowIndex];\n            });\n        });\n        return viewMatrix;\n    }\n});\n\nconst spanGenerator = viewMatrix => ({\n    row: () => {\n        const spans = [];\n        viewMatrix.forEach((row, ridx) => {\n            spans[ridx] = spans[ridx] || [];\n            row.forEach((col, i) => {\n                if (viewMatrix[ridx][i]) {\n                    const currSpan = spanCalculator(col, i, viewMatrix, ridx)('row');\n                    currSpan && spans[ridx].push(currSpan);\n                }\n            });\n        });\n        return spans;\n    },\n    column: () => viewMatrix.map((row, ridx) => row.map((col, i) => spanCalculator(col, i, viewMatrix, ridx)('column'))\n                    .filter(col => col !== 1))\n});\n\nconst getOrder = isReverse => ({\n    row: (matrix) => {\n        if (isReverse) {\n            return orderMaker(matrix[0]).reverse();\n        }\n        return orderMaker(matrix[0]);\n    },\n    column: (matrix) => {\n        if (isReverse) {\n            return orderMaker(matrix).reverse();\n        }\n        return orderMaker(matrix);\n    }\n});\n\nconst matrixSpanGeneratorMap = {\n    [`${TOP}-1`]: {\n        orderGetter: getOrder(false)[COLUMN],\n        viewMatrixMaker: (...params) => maskCreator(...params)[COLUMN],\n        spanMaker: (...params) => spanGenerator(...params)[COLUMN]\n    },\n    [`${BOTTOM}-1`]: {\n        orderGetter: getOrder(true)[COLUMN],\n        viewMatrixMaker: (...params) => maskCreator(...params)[COLUMN],\n        spanMaker: (...params) => spanGenerator(...params)[COLUMN]\n    },\n    [`${CENTER}-0`]: {\n        orderGetter: getOrder(false)[ROW],\n        viewMatrixMaker: (...params) => maskCreator(...params)[ROW],\n        spanMaker: (...params) => spanGenerator(...params)[ROW]\n    },\n    [`${CENTER}-2`]: {\n        orderGetter: getOrder(true)[ROW],\n        viewMatrixMaker: (...params) => maskCreator(...params)[ROW],\n        spanMaker: (...params) => spanGenerator(...params)[ROW]\n    }\n};\n\nconst matrixSpanGenerator = (type) => {\n    const generator = matrixSpanGeneratorMap[type];\n    if (generator) {\n        return generator;\n    }\n    return {\n        orderGetter: () => null,\n        viewMatrixMaker: matrix => () => matrix,\n        spanMaker: () => () => null\n    };\n};\n\n/**\n * This function is used to set the col and row spans\n * for the matrices based on repeated/hierarchichal data\n *\n * @export\n * @param {Array} matrix The 2d array for which filtering is to be done\n * @param {string} type Type of array (center, top, bottom)\n * @param {number} index Index of array in the row\n * @return {Object} containing the view matrix and their spans\n */\nexport function cellSpanMaker (matrix, type, index) {\n    let spans = null;\n    let viewMatrix = matrix;\n    const {\n        orderGetter,\n        viewMatrixMaker,\n        spanMaker\n    } = matrixSpanGenerator(`${type}-${index}`);\n\n    if (matrix.length) {\n        const order = orderGetter(matrix);\n        viewMatrix = viewMatrixMaker(matrix, order)();\n        spans = spanMaker(viewMatrix)();\n    }\n    return { viewMatrix, spans };\n}\n\nconst spaceAllocationDueToSpan = (span = 1, placeholder, config, index) => {\n    const height = placeholder.availHeight();\n    const width = placeholder.availWidth();\n    const borderWidth = config.border.width;\n    const { unitWidths } = config.dimensions;\n    const { col } = index;\n\n    return {\n        [ROW_SPAN] () {\n            placeholder.setAvailableSpace(width, height * span);\n        },\n        [COL_SPAN] () {\n            if (span > 1) {\n                let cumulativeWidth = 0;\n                for (let i = col; i < col + span; i++) {\n                    cumulativeWidth += unitWidths.primary[i] - borderWidth;\n                }\n                placeholder.setAvailableSpace(cumulativeWidth + borderWidth, height);\n            }\n            selectElement(this).style('height', `${height}px`);\n        }\n    };\n};\n\nconst spanApplier = (cells, spans, config, type) => {\n    let cellCounter = 0;\n    cells.attr(type, function (cell, colIndex) {\n        const span = spans[cell.rowIndex][colIndex];\n        const placeholder = cell.placeholder;\n        const index = {\n            row: cell.rowIndex,\n            col: cellCounter\n        };\n\n        spaceAllocationDueToSpan(span, placeholder, config, index)[type].bind(this)();\n        cellCounter += span;\n        return span;\n    });\n};\n\nconst spanApplierMap = {\n    [`${TOP}-0`]: null,\n    [`${TOP}-1`]: (...params) => spanApplier(...params, COL_SPAN),\n    [`${TOP}-2`]: null,\n    [`${CENTER}-0`]: (...params) => spanApplier(...params, ROW_SPAN),\n    [`${CENTER}-1`]: null,\n    [`${CENTER}-2`]: (...params) => spanApplier(...params, ROW_SPAN),\n    [`${BOTTOM}-0`]: null,\n    [`${BOTTOM}-1`]: (...params) => spanApplier(...params, COL_SPAN),\n    [`${BOTTOM}-2`]: null\n};\n\nexport const applySpans = (cells, spans, config, type) => {\n    const applier = spanApplierMap[type];\n    if (applier) {\n        applier(cells, spans, config);\n    }\n};\n","import { ERROR_MSG } from 'muze-utils';\n/**\n * An Interface to be implemented if the transaction support is necessary. This class ensures reactivity to\n * global properties.\n */\nexport default class TransactionSupport {\n    /**\n     * Property accessor for data member of the class. Data is passed to the system by calling this method.\n     */\n    data () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPl);\n    }\n\n    /**\n     * Property accessor for width of the class. Width is passed as an integer.\n     */\n    width () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPl);\n    }\n\n    /**\n     * Property accessor for height of the class. Height is passed as an integer.\n     */\n    height () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPl);\n    }\n\n    /**\n     * Property accessor for config of the class. Config is passed as an object.\n     */\n    config () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPl);\n    }\n}\n","import { TOP, BOTTOM, LEFT, TITLE, SUB_TITLE, GROUP, LAYOUT, LEGEND } from '../constants';\n\n/**\n *\n *\n * @param {*} context\n *\n */\nexport const arrangeComponents = (context) => {\n    const legendConfig = context.config().legend;\n    const titleConfig = context.title()[1];\n    const subtitleConfig = context.subtitle()[1];\n    const titleLayouts = {\n        [`${TOP}-${TOP}`]: [TITLE, SUB_TITLE, GROUP],\n        [`${BOTTOM}-${BOTTOM}`]: [GROUP, SUB_TITLE, TITLE],\n        [`${TOP}-${BOTTOM}`]: [TITLE, GROUP, SUB_TITLE],\n        [`${BOTTOM}-${TOP}`]: [SUB_TITLE, GROUP, TITLE]\n    };\n    const legendLayouts = [\n        [LEGEND, LAYOUT],\n        [LAYOUT, LEGEND]\n    ];\n    const titlePosition = titleConfig.position || TOP;\n    const subtitlePosition = subtitleConfig.position || TOP;\n\n    return {\n        headers: titleLayouts[`${titlePosition}-${subtitlePosition}`],\n        legends: legendConfig.position === LEFT || legendConfig.position === TOP ?\n        legendLayouts[0] : legendLayouts[1]\n    };\n};\n","/**\n * Flag to specify whether direction is vertical.\n */\nexport const MARGIN = 'margin';\nexport const LEFT = 'left';\nexport const RIGHT = 'right';\nexport const BOTTOM = 'bottom';\nexport const TOP = 'top';\nexport const SPACE_FIXER = 'spaceFixer';\nexport const CLASSPREFIX = 'muze';\nexport const VERTICAL_ALIGN = 'verticalAlign';\nexport const TEXT_ALIGN = 'textAlign';\nexport const IS_OFFSET = 'isOffset';\nexport const MIDDLE = 'middle';\nexport const BASELINE = 'baseline';\nexport const SHOW = 'show';\nexport const CENTER = 'center';\nexport const TEXT = 'text';\nexport const HEADER = 'header';\nexport const HEIGHT = 'height';\nexport const WIDTH = 'width';\nexport const DATA = 'data';\nexport const AXES = 'axes';\nexport const FACET_BY_FIELDS = 'facetByFields';\nexport const FIELDS = 'fields';\nexport const TRANSFORM = 'transform';\nexport const LAYER_DEF = 'layerDef';\nexport const CONFIG = 'config';\nexport const DETAIL_FIELDS = 'detailFields';\nexport const MAX_LINES = 'maxLines';\nexport const MIN_CHARS = 'minCharacters';\nexport const ROTATION = 'rotation';\n\nexport const TEXT_CELL = 'text-cell';\nexport const AXIS_CELL = 'axis-cell';\nexport const GEOM_CELL = 'geom-cell';\nexport const BLANK_CELL = 'blank-cell';\n","// eneum to refer to simple cell\nexport const SIMPLE = 'simple';\n// eneum to refer to header cell\nexport const TEXT = 'text';\n// enum to refer to axis cell\nexport const AXIS = 'axis';\n// enum to refer to visual cell\nexport const GEOM = 'geom';\n// enum to refer blank cell\nexport const BLANK = 'blank';\n","import {\n    ERROR_MSG,\n    getUniqueId,\n    mergeRecursive\n} from 'muze-utils';\nimport { SIMPLE } from './enums/cell-type';\n\n/**\n * This file declares a class that is used as an interface to create new\n * SimpleCell elements.\n * @module SimpleCell\n */\n/**\n * Base class for all table cells.\n *\n * @interface\n * @class SimpleCell\n */\nclass SimpleCell {\n\n    /**\n     * Creates an instance of SimpleCell.\n     *\n     * @param {*} config The input configuration.\n     * @memberof SimpleCell\n     */\n    constructor (config) {\n        this._id = getUniqueId();\n\n        const defConfig = mergeRecursive({}, this.constructor.defaultConfig());\n        this._config = mergeRecursive(defConfig, config || {});\n\n        this._mount = null;\n    }\n\n    /**\n     * Returns the type of the placehlder.\n     *\n     * @readonly\n     * @memberof SimpleCell\n     */\n    get type () {\n        return SIMPLE;\n    }\n\n    /**\n     * Returns the type of the placehlder.\n     *\n     * @readonly\n     * @memberof SimpleCell\n     * @return {Object} Default config for the placeholder\n     */\n    static defaultConfig () {\n        return {};\n    }\n\n    /**\n     * Returns the value contained by the SimpleCell.\n     *\n     * @memberof SimpleCell\n     */\n    valueOf () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    /**\n     * Returns a unique identifier for the instance used\n     * to control selective rendering.\n     *\n     * @memberof SimpleCell\n     */\n    id () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    /**\n     * Returns a serialized representation of the instance.\n     *\n     * @memberof SimpleCell\n     */\n    serialize () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    /**\n     * Returns an object with width and height fields\n     * specifying the space taken up by this metod.\n     *\n     * @memberof SimpleCell\n     */\n    getLogicalSpace () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    /**\n     * Method used to set the space available to render the SimpleCell\n     *\n     * @param {number} width The available width.\n     * @param {number} height The available height.\n     * @memberof SimpleCell\n     */\n    setAvailableSpace () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    /**\n     * Render the SimpleCell inthe supplied mount point.\n     *\n     * @param {HTMLElement} mount The mount point to render in.\n     * @memberof SimpleCell\n     */\n    render () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    /**\n     * Render the SimpleCell inthe supplied mount point.\n     *\n     * @param {HTMLElement} mount The mount point to render in.\n     * @memberof SimpleCell\n     */\n    remove () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    getMinMeasures (providedMinMeasure = 0) {\n        return providedMinMeasure;\n    }\n\n}\n\nexport default SimpleCell;\n","/**\n * This file exports variables that are used as defaults for\n * the placeholders\n */\nimport * as CONSTANTS from './constants';\n\n /**\n * Default Configuration for the cells\n * @return {Object} Default configuration\n */\nexport const DEFAULT_CONFIG = {\n    [CONSTANTS.MARGIN]: {\n        [CONSTANTS.LEFT]: 0,\n        [CONSTANTS.RIGHT]: 0,\n        [CONSTANTS.TOP]: 0,\n        [CONSTANTS.BOTTOM]: 0\n    },\n    [CONSTANTS.SPACE_FIXER]: 2,\n    [CONSTANTS.IS_OFFSET]: false,\n    [CONSTANTS.VERTICAL_ALIGN]: null,\n    [CONSTANTS.TEXT_ALIGN]: CONSTANTS.CENTER,\n    [CONSTANTS.SHOW]: true,\n    [CONSTANTS.MAX_LINES]: 0,\n    [CONSTANTS.MIN_CHARS]: 0,\n    [CONSTANTS.ROTATION]: null\n};\n","import { mergeRecursive } from 'muze-utils';\nimport { GEOM, TEXT, AXIS, BLANK } from './enums/cell-type';\n\nconst DEFAULT_PROPS = {\n    mount: {},\n    availHeight: {},\n    availWidth: {},\n    config: {\n        sanitization: (context, value) => mergeRecursive(context._config, value)\n    },\n    logicalSpace: {},\n    minSpacing: {},\n    source: {}\n};\n\nconst geomProps = {\n    data: {},\n    caption: {},\n    config: {},\n    axes: {},\n    facetByFields: {},\n    fields: {},\n    transform: {},\n    layerDef: {},\n    detailFields: {}\n};\n\nconst textProps = {\n    smartText: {}\n};\nexport const PROPS = {\n    [GEOM]: mergeRecursive(geomProps, DEFAULT_PROPS),\n    [TEXT]: mergeRecursive(textProps, DEFAULT_PROPS),\n    [AXIS]: DEFAULT_PROPS,\n    [BLANK]: DEFAULT_PROPS\n};\n","/**\n * This file declares a class that represents a table cell\n * used to house an axis.\n * @module VisualCell\n */\nimport { selectElement, makeElement, generateGetterSetters } from 'muze-utils';\nimport { CLASSPREFIX, HEIGHT, WIDTH, AXIS_CELL, BOTTOM, TOP } from './enums/constants';\nimport SimpleCell from './simple-cell';\nimport { DEFAULT_CONFIG } from './enums/defaults';\nimport { AXIS } from './enums/cell-type';\nimport { PROPS } from './props';\n\n/**\n * Computes the logical space of the an axis instance within an axis cell\n *\n * @param {Object} context Required to get the needed parameters to compute axis space\n * @return {Object} Returns the logical space for axis\n */\nconst computeAxisSpace = (context) => {\n    let logicalWidth;\n    let logicalHeight;\n    const axis = context.source();\n    const {\n        spaceFixer,\n        margin\n    } = context.config();\n    const {\n        width,\n        height\n    } = axis.getLogicalSpace();\n    const {\n            show\n        } = axis.config();\n    if (show === true) {\n        logicalHeight = Math.floor(height + margin.top + margin.bottom + spaceFixer);\n        logicalWidth = Math.floor(width + margin.left + margin.right + spaceFixer);\n    } else {\n        [logicalWidth, logicalHeight] = [width, height];\n    }\n    return {\n        width: logicalWidth,\n        height: logicalHeight\n    };\n};\n\n/**\n * Represents an axis cell.\n *\n * @class Axis\n */\nclass AxisCell extends SimpleCell {\n\n    /**\n     * Creates an instance of AxisCell.\n     *\n     * @param {Object} config The input config.\n     * @memberof AxisCell\n     */\n    constructor (config) {\n        super(config);\n\n        this._axis = null;\n        this._availHeight = null;\n        this._availWidth = null;\n        this._logicalSpace = null;\n\n        generateGetterSetters(this, PROPS[AXIS]);\n    }\n\n    /**\n     * return the type pf SimpleCell cell.\n     *\n     * @readonly\n     * @memberof AxisCell\n     */\n    get type () {\n        return AXIS;\n    }\n\n    /**\n     * This method return the value conatined by this SimpleCell.\n     *\n     * @return {SimpleAxis | ColorAxis} Instance of SimpleAxis or ColorAxis.\n     * @memberof AxisCell\n     */\n    valueOf () {\n        return this.source().id;\n    }\n\n    /**\n     * This method return the unique identififer of the axis\n     *\n     * @return {string} Id of the axis.\n     * @memberof AxisCell\n     */\n    get id () {\n        return this._id;\n    }\n\n    /**\n     * Retrns the serialized representation of this cell.\n     *\n     * @return {Object}Object with serializable props.\n     * @memberof AxisCell\n     */\n    serialize () {\n        return {\n            type: AXIS,\n            axis: this.source().serialize()\n        };\n    }\n\n    /**\n     * return the default configuration for the text cell\n     *\n     * @static\n     * @return {Object} Default configuration of the cell\n     * @memberof AxisCell\n     */\n    static defaultConfig () {\n        return DEFAULT_CONFIG;\n    }\n\n    /**\n     * return the space taken up by an axis element in the dom.\n     *\n     * @return {Object} Object with width and height fields.\n     * @memberof AxisCell\n     */\n    getLogicalSpace () {\n        if (!this.logicalSpace()) {\n            this.logicalSpace(computeAxisSpace(this));\n        }\n        return this.logicalSpace();\n    }\n\n    /**\n     * This method is used to set the space availiable to render\n     * the SimpleCell.\n     *\n     * @param {number} width The width of SimpleCell.\n     * @param {number} height The height of SimpleCell.\n     * @return {Instance} Returns current Instance\n     * @memberof AxisCell\n     */\n    setAvailableSpace (width, height) {\n        this.availWidth(width);\n        this.availHeight(height);\n        const {\n            margin,\n            isOffset\n        } = this.config();\n\n        if (width || height) {\n            this.source().setAvailableSpace(width, height, margin, isOffset);\n            this.source().logicalSpace(null);\n        } else {\n            this.source().resetLogicalSpace();\n        }\n        this.logicalSpace(null);\n        return this;\n    }\n\n    /**\n     * This method is used to render the axis inside the axis cell.\n     *\n     * @param {HTMLElement} mount The mount point.\n     * @return {Selection} node where axis mounted\n     * @memberof AxisCell\n     */\n    /* istanbul ignore next */render (mount) {\n        if (!mount) {\n            return this;\n        }\n        let actualWidth = 0;\n        let actualHeight = 0;\n        const axis = this.source();\n        const availHeight = this.availHeight();\n        const availWidth = this.availWidth();\n        const {\n            margin\n        } = this.config();\n        const {\n            top,\n            bottom,\n            left,\n            right\n        } = margin;\n        const {\n            show,\n            orientation\n        } = axis.config();\n        const wrapperDiv = makeElement(selectElement(mount), 'div', [this], `${CLASSPREFIX}-${AXIS_CELL}`);\n        const selection = makeElement(wrapperDiv, 'svg', [1], `${CLASSPREFIX}-axis-container`);\n        selection.classed(`${CLASSPREFIX}-axis-container-${orientation}`, true);\n\n        this.mount(mount);\n        if (!availWidth) {\n            selection.attr(WIDTH, `${0}px`);\n        }\n        if (!availHeight) {\n            selection.attr(HEIGHT, `${0}px`);\n        }\n        actualWidth = availWidth;\n        actualHeight = availHeight;\n        if (!show) {\n            actualWidth = (orientation === TOP || orientation === BOTTOM) ? availWidth : 0;\n            actualHeight = (orientation === TOP || orientation === BOTTOM) ? 0 : availHeight;\n        }\n        wrapperDiv.style(WIDTH, `${actualWidth}px`)\n                        .style(HEIGHT, `${actualHeight}px`)\n                        .style('margin-top', top)\n                        .style('margin-bottom', bottom)\n                        .style('margin-left', left)\n                        .style('margin-right', right);\n\n        axis.mount(selection.node());\n        return selection;\n    }\n\n    /**\n     * Disposes the cell\n     *\n     * @return {Instance} Current instance of AxisCell\n     * @memberof AxisCell\n     */\n    remove () {\n        this.source() && this.source().remove();\n        this.mount() && this.mount().remove();\n        return this;\n    }\n}\n\nexport default AxisCell;\n\n","/**\n * This file declares a class that represents a BLANK element in a  table.\n * @module VisualCell\n */\nimport {\n    selectElement,\n    makeElement,\n    applyStyle,\n    generateGetterSetters\n    } from 'muze-utils';\nimport SimpleCell from './simple-cell';\nimport { CLASSPREFIX, BLANK_CELL } from './enums/constants';\nimport { BLANK } from './enums/cell-type';\nimport { DEFAULT_CONFIG } from './enums/defaults';\nimport { PROPS } from './props';\n\n/**\n * Represents a table haeder.\n *\n * @class BLANK\n */\nclass BlankCell extends SimpleCell {\n\n    /**\n     * Creates an instance of BLANK.\n     * @param {Object} config The input configuration.\n     * @memberof BLANK\n     */\n    constructor (config) {\n        super(config);\n\n        generateGetterSetters(this, PROPS[BLANK]);\n    }\n\n    /**\n     * return the type pf SimpleCell cell.\n     *\n     * @readonly\n     * @memberof BlankCell\n     */\n    get type () {\n        return BLANK;\n    }\n\n    /**\n     * This method return the value contained by this SimpleCell.\n     *\n     * @return {string} The text value contained by this cell.\n     * @memberof BlankCell\n     */\n    valueOf () {\n        return this.id;\n    }\n\n    /**\n     * return the default configuration for the text cell\n     *\n     * @static\n     * @return {Object} Default configuration of the cell\n     * @memberof BlankCell\n     */\n    static defaultConfig () {\n        return DEFAULT_CONFIG;\n    }\n\n    /**\n     * This method is used to return a unique identifier for\n     * the BLANK cell.\n     *\n     * @return {string} The unique identifier for the BLANK.\n     * @memberof BlankCell\n     */\n    get id () {\n        return this._id;\n    }\n\n    /**\n     * This method is used to obtain a serialized representation of this instance.\n     *\n     * @return {Object} Object with serilizable props.\n     * @memberof BLANK\n     */\n    serialize () {\n        return {\n            type: BLANK\n        };\n    }\n\n    /**\n     * This method return the space taken up\n     * by the text with the style applied.\n     *\n     * @return {Object} width and height taken up by the text.\n     * @memberof BLANK\n     */\n    getLogicalSpace () {\n        if (!this.logicalSpace()) {\n            return {\n                width: this.width || 0,\n                height: this.height || 0\n            };\n        }\n        return this.logicalSpace();\n    }\n\n    /**\n     * This method is used to set the available space.\n     *\n     * @param {number} width The available width.\n     * @param {number} height The available height.\n     * @return {Instance} Returns current Instance\n     * @memberof BlankCell\n     */\n    setAvailableSpace (width, height) {\n        this.availWidth(width);\n        this.availHeight(height);\n        this.logicalSpace(null);\n        return this;\n    }\n\n    /**\n     * This method is used to render the BLANK cell inside\n     * the provided mount point.\n     *\n     * @param {HTMLElement} mount The mount point for this cell.\n     * @return {Instance} Returns current Instance\n     * @memberof BLANK\n     */\n    /* istanbul ignore next */render (mount) {\n        if (mount) {\n            const { style } = this.config();\n            // append span element to mount point\n            this.mount(mount);\n            const container = selectElement(mount);\n            const elem = makeElement(container, 'div', [this.id]);\n            elem.classed(`${CLASSPREFIX}-${BLANK_CELL}`, true);\n            elem.style('width', `${this.availWidth()}px`);\n            elem.style('height', `${this.availHeight()}px`);\n            elem.html('');\n            // apply style on the returned element\n            if (style) {\n                applyStyle(elem, style);\n            }\n        } return this;\n    }\n\n    /**\n     * Removes the cell(Disposal)\n     *\n     * @return {Instance} Returns current Instance\n     * @memberof BlankCell\n     */\n    remove () {\n        this.mount() && this.mount().remove();\n        return this;\n    }\n\n    getMinMeasures () {\n        return 0;\n    }\n }\nexport default BlankCell;\n","/**\n * This file declares a class that represents a Text element in a  table.\n * @module VisualCell\n */\n\nimport {\n    selectElement,\n    makeElement,\n    getSmartComputedStyle,\n    generateGetterSetters\n} from 'muze-utils';\nimport SimpleCell from './simple-cell';\nimport { TEXT } from './enums/cell-type';\nimport { PROPS } from './props';\nimport { DEFAULT_CONFIG } from './enums/defaults';\nimport { CLASSPREFIX, TOP, BOTTOM, LEFT, RIGHT, HEADER, WIDTH, TEXT_CELL } from './enums/constants';\nimport './text-cell.scss';\n\nconst setSmartText = (context) => {\n    const source = context.source();\n    const {\n        height: minHeightSpace,\n        width: minWidthSpace\n    } = context.minSpacing();\n    const {\n       margin,\n       rotation\n   } = context.config();\n    const {\n        left,\n        right,\n        top,\n        bottom\n     } = margin;\n    const paddedHeight = top + bottom + minHeightSpace;\n    const paddedWidth = left + right + minWidthSpace;\n    const availHeight = context.availHeight() - paddedHeight;\n    const availWidth = context.availWidth() - paddedWidth;\n    const labelManager = context.dependencies().labelManager;\n\n    labelManager.setStyle(context._computedStyle);\n\n    !rotation && context.smartText(labelManager.getSmartText(source, availWidth, availHeight, false));\n    rotation && context.smartText(labelManager.getSmartText(source, availHeight, availWidth, true));\n\n    return context;\n};\n\n/**\n* Computes the Logical Space for the text\n*\n* @param {Object} context Required to get the needed parameters to compute text space\n* @return {Object} Logical space taken up by text\n* @memberof TextCell\n*/\nconst computeTextSpace = (context) => {\n    const { labelManager } = context.dependencies();\n    const {\n        height: minHeightSpace,\n        width: minWidthSpace\n    } = context.minSpacing();\n    const {\n       margin,\n       show,\n       maxLines,\n       minCharacters\n   } = context.config();\n    const {\n       left,\n       right,\n       top,\n       bottom\n    } = margin;\n    const paddedHeight = top + bottom + minHeightSpace;\n    const paddedWidth = left + right + minWidthSpace;\n    const availHeight = context.availHeight() - paddedHeight;\n    const availWidth = context.availWidth() - paddedWidth;\n    const source = context.source();\n    const space = context.smartText();\n    const minText = new Array(minCharacters).fill('W').join('');\n    const _minTextSpace = labelManager.getOriSize(minText);\n\n    context.config({ rotation: false });\n    if (space.width > (availWidth || 0) && maxLines) {\n        space.height = space.oriTextHeight * maxLines;\n    }\n    if (availWidth && availWidth < space.width) {\n        space.width = _minTextSpace.width;\n    }\n    if (availWidth && availWidth < Math.min(_minTextSpace.width, space.oriTextWidth)) {\n        const smartSpace = labelManager.getSmartText(source, availHeight, _minTextSpace.height, true);\n        space.width = smartSpace.height;\n        space.height = smartSpace.width;\n        context.config({ rotation: true });\n        context.smartText(smartSpace);\n    }\n\n    if (show) {\n        return {\n            width: Math.ceil(space.width) + paddedWidth,\n            height: Math.ceil(space.height) + paddedHeight\n        };\n    } return {\n        width: 0,\n        height: 0\n    };\n};\n\n/**\n * Represents a table haeder.\n *\n * @class Text\n */\nclass TextCell extends SimpleCell {\n\n    /**\n     * Creates an instance of Text.\n     * @param {Object} config The input configuration.\n     * @param {string} dependencies Dependencies for the class(labelManager)\n     * @memberof Text\n     */\n    constructor (config, dependencies) {\n        super(config);\n\n        this._dependencies = dependencies;\n        this._className = this._config.className ||\n                    (this._config.type === HEADER ? `${CLASSPREFIX}-${HEADER}-cell` : `${CLASSPREFIX}-${TEXT}-cell`);\n        this._computedStyle = getSmartComputedStyle(selectElement('body'), this._className);\n        this._dependencies.labelManager.setStyle(this._computedStyle);\n        generateGetterSetters(this, PROPS[TEXT]);\n        const space = this._dependencies.labelManager.getOriSize('w');\n        this.minSpacing({ width: Math.floor(space.width * 3 / 4), height: Math.floor(space.height / 2) });\n        setSmartText(this);\n    }\n\n    /**\n     * return the type pf SimpleCell cell.\n     *\n     * @readonly\n     * @memberof TextCell\n     */\n    get type () {\n        return TEXT;\n    }\n\n    /**\n     * This method return the value contained by this SimpleCell.\n     *\n     * @return {string} The text value contained by this cell.\n     * @memberof TextCell\n     */\n    valueOf () {\n        return this.source();\n    }\n\n    /**\n     * This method is used to return a unique identifier for\n     * the Text cell.\n     *\n     * @return {string} The unique identifier for the Text.\n     * @memberof TextCell\n     */\n    get id () {\n        return this._id;\n    }\n\n    /**\n     * Returns the dependencies of the instance\n     *\n     * @return {Object} Dependencies needed by the class\n     * @memberof TextCell\n     */\n    dependencies () {\n        return this._dependencies;\n    }\n\n    /**\n     * This method is used to obtain a serialized representation of this instance.\n     *\n     * @return {Object} Object with serilizable props.\n     * @memberof TextCell\n     */\n    serialize () {\n        return {\n            text: this.source(),\n            type: TEXT\n        };\n    }\n\n    /**\n     * return the default configuration for the text cell\n     *\n     * @static\n     * @return {Object} Default configuration of the cell\n     * @memberof TextCell\n     */\n    static defaultConfig () {\n        return DEFAULT_CONFIG;\n    }\n\n    /**\n     * This method return the space taken up\n     * by the text with the style applied.\n     *\n     * @return {Object} width and height taken up by the text.\n     * @memberof Text\n     */\n    getLogicalSpace () {\n        if (!this.logicalSpace()) {\n            this.logicalSpace(computeTextSpace(this));\n        }\n        return this.logicalSpace();\n    }\n\n    /**\n     * This method is used to set the available space.\n     *\n     * @param {number} width The available width.\n     * @param {number} height The available height.\n     * @return {Instance} Returns current Instance\n     * @memberof TextCell\n     */\n    setAvailableSpace (width, height) {\n        this.availWidth(width);\n        this.availHeight(height);\n        setSmartText(this);\n        this.logicalSpace(null);\n        return this;\n    }\n\n    /**\n     * This method is used to render the Text cell inside\n     * the provided mount point.\n     *\n     * @param {HTMLElement} mount The mount point for this cell.\n     * @return {Instance} Returns current Instance\n     * @memberof Text\n     */\n    render (mount) {\n        const availWidth = this.availWidth();\n        const availHeight = this.availHeight();\n        const {\n            margin,\n            show,\n            verticalAlign,\n            textAlign,\n            rotation\n        } = this.config();\n\n        this.mount(mount);\n        if (show) {\n            const container = selectElement(mount);\n            const elem = makeElement(container, 'div', [this.id], `${CLASSPREFIX}-${TEXT_CELL}`);\n            const vAlign = verticalAlign || rotation ? 'middle' : 'top';\n            const {\n                width,\n                height\n            } = this.smartText();\n            const {\n                height: minHeightSpace\n            } = this.minSpacing();\n            const translation = {\n                top: width + minHeightSpace / 2,\n                middle: width / 2 + minHeightSpace,\n                bottom: minHeightSpace\n            };\n\n            container.style('vertical-align', vAlign);\n\n            // Set class name\n            elem.classed(this._className, true);\n\n            // Apply styles\n            elem.style('text-align', textAlign);\n            elem.style('display', 'inline');\n            elem.style('transform', rotation ? `translate(${height / 2}px,\n                ${translation[vAlign]}px) rotate(-90deg)` : '');\n            elem.style(WIDTH, availWidth ? `${availWidth}px` : '100%');\n            [TOP, BOTTOM, LEFT, RIGHT].forEach((type) => {\n                container.style(`margin-${type}`, `${margin[type]}px`);\n            });\n            elem.style('text-align', textAlign);\n            elem.style('display', 'inline');\n            // set the text as the innerHTML\n            this._dependencies.labelManager.setStyle(this._computedStyle);\n            elem.html(this._dependencies.labelManager.getSmartText(this.source(), availWidth, availHeight, true).text);\n        }\n        return this;\n    }\n\n    /**\n     * Disposes the cell\n     *\n     * @return {Instance} Returns current Instance\n     * @memberof TextCell\n     */\n    remove () {\n        this.mount() && this.mount().remove();\n        return this;\n    }\n }\n\nexport default TextCell;\n","/**\n * This file declares a class that is used to represent a table cell\n * that houses a visual unit.\n * @module VisualCell\n */\n\nimport { selectElement, makeElement, generateGetterSetters } from 'muze-utils';\nimport SimpleCell from './simple-cell';\nimport { GEOM } from './enums/cell-type';\nimport { PROPS } from './props';\nimport {\n    CLASSPREFIX, HEIGHT, WIDTH, DATA, AXES, FACET_BY_FIELDS, FIELDS, TRANSFORM, LAYER_DEF, CONFIG, GEOM_CELL,\n    DETAIL_FIELDS\n} from './enums/constants';\nimport { DEFAULT_CONFIG } from './enums/defaults';\n\n/**\n * Calculates the logical space of the cell\n *\n * @param {Object} context Required to get the needed parameters to compute unit space\n * @return {Object} Logical space taken up by the unit\n * @memberof GeomCell\n */\nconst computeGeomSpace = (context) => {\n    const config = context.source().config();\n    const { width, height } = config;\n    return {\n        width: Math.ceil(width),\n        height: Math.ceil(height + context.getCaptionSpace().height)\n    };\n};\n\n /**\n * This class represents a SimpleCell for visual unit.\n *\n * @class GeomCell\n */\nclass GeomCell extends SimpleCell {\n\n    /**\n     * Creates an instance of GeomCell.\n     * @param {Object} config The input configuration.\n     * @memberof GeomCell\n     */\n    constructor (config) {\n        super(config);\n\n        this._unit = null;\n        this._layers = null;\n        this._axes = {};\n        this._datamodel = {};\n        this._facetByFields = {};\n        this._fields = null;\n        this._transform = null;\n        this._caption = null;\n\n        generateGetterSetters(this, PROPS[GEOM]);\n    }\n\n    /**\n     * return the type pf SimpleCell cell.\n     *\n     * @readonly\n     * @memberof GeomCell\n     */\n    get type () {\n        return GEOM;\n    }\n\n    /**\n     * This method return the value contained by this cell.\n     *\n     * @return {VisualUnit} Instance of visual unit contained by visual unit.\n     * @memberof GeomCell\n     */\n    valueOf () {\n        return this.source();\n    }\n\n    /**\n     * This method is used to return the id of the\n     * visual unit housed by this cell.\n     *\n     * @return {string} The unique id of the visual unit.\n     * @memberof GeomCell\n     */\n    get id () {\n        return this.source().id();\n    }\n\n    /**\n     * This method return a serialized representation of\n     * this instance.\n     *\n     * @return {Object} Object with serializable props.\n     * @memberof GeomCell\n     */\n    serialize () {\n        return {\n            type: GEOM,\n            unit: this.source().serialize(),\n            caption: this.caption()\n        };\n    }\n\n    /**\n     * return the default configuration for the geom cell\n     *\n     * @static\n     * @return {Object} Default configuration of the cell\n     * @memberof GeomCell\n     */\n    static defaultConfig () {\n        return DEFAULT_CONFIG;\n    }\n\n    /**\n     * Updates the model based on the changed parameters\n     *\n     * @return {Instance} return instance\n     * @memberof GeomCell\n     */\n    updateModel () {\n        const unit = this.source();\n        unit.lockModel();\n        unit.clearCaching();\n        [LAYER_DEF, TRANSFORM, AXES, FIELDS, CONFIG, DATA, AXES, FACET_BY_FIELDS, DETAIL_FIELDS].forEach((prop) => {\n            this[prop]() && unit[prop](this[prop]());\n        });\n        unit.unlockModel();\n        return this;\n    }\n\n    /**\n     * It gives the space taken by the caption of the unit\n     *\n     * @return {Object} return the space taken by caption\n     * @memberof GeomCell\n     */\n    getCaptionSpace () {\n        const caption = this.caption();\n\n        let captionSpace = { width: 0, height: 0 };\n        if (caption) {\n            captionSpace = caption.getLogicalSpace();\n        }\n        return captionSpace;\n    }\n\n    /**\n     * return the space taken up by the element in the dom.\n     *\n     * @return {Object} Object with width and height fields.\n     * @memberof GeomCell\n     */\n    getLogicalSpace () {\n        if (!this.logicalSpace()) {\n            this.logicalSpace(computeGeomSpace(this));\n        }\n        return this.logicalSpace();\n    }\n\n    /**\n     * This method is used to set the space available to\n     * render the SimpleCell.\n     *\n     * @param {number} width The available width.\n     * @param {number} height The available height.\n     * @return {Instance} Returns current Instance\n     * @memberof GeomCell\n     */\n    setAvailableSpace (width, height) {\n        const unit = this.source();\n\n        this.availWidth(width);\n        this.availHeight(height);\n        unit.lockModel();\n        unit.width(width).height(height - this.getCaptionSpace().height);\n        unit.unlockModel();\n        this.logicalSpace(null);\n        return this;\n    }\n\n    /**\n     * his method is used to render the visual unit inside the provided cell.\n     *\n     * @param {HTMLElement} mount The mountpoint in the table.\n     * @return {Instance} Returns current Instance\n     * @memberof GeomCell\n     */\n    render (mount) {\n        if (mount) {\n            this.mount(mount);\n            const availHeight = this.availHeight();\n            const availWidth = this.availWidth();\n            const caption = this.caption();\n            const wrapperDiv = makeElement(selectElement(mount), 'div', [1], `${CLASSPREFIX}-${GEOM_CELL}`);\n\n            if (caption) {\n                const captionDom = makeElement(wrapperDiv, 'div', [caption], `${CLASSPREFIX}-unit-caption`).node();\n                caption.render(captionDom);\n            }\n            const selection = makeElement(wrapperDiv, 'div', [1], `${CLASSPREFIX}-unit`);\n            wrapperDiv.style(WIDTH, `${availWidth}px`).style(HEIGHT, `${availHeight}px`);\n            selection.style(WIDTH, `${availWidth}px`)\n                            .style(HEIGHT, `${availHeight - this.getCaptionSpace().height}px`);\n            this.source().mount(selection.node());\n        }\n        return this;\n    }\n\n    /**\n     * Disposes the cell\n     *\n     * @return {Object} Current instance\n     * @memberof GeomCell\n     */\n    remove () {\n        this.mount() && this.mount().remove();\n        this.source().remove();\n        return this;\n    }\n}\n\nexport default GeomCell;\n","import AxisCell from './axis-cell';\nimport BlankCell from './blank-cell';\nimport TextCell from './text-cell';\nimport GeomCell from './geom-cell';\nimport SimpleCell from './simple-cell';\n\nimport * as CONSTANTS from './constants';\n\nexport const DEFAULT_PLACEHOLDERS = {\n    [CONSTANTS.SIMPLE_CELL]: SimpleCell,\n    [CONSTANTS.TEXT_CELL]: TextCell,\n    [CONSTANTS.AXIS_CELL]: AxisCell,\n    [CONSTANTS.GEOM_CELL]: GeomCell,\n    [CONSTANTS.BLANK_CELL]: BlankCell\n};\n\n","export const SIMPLE_CELL = 'SimpleCell';\nexport const TEXT_CELL = 'TextCell';\nexport const AXIS_CELL = 'AxisCell';\nexport const BLANK_CELL = 'BlankCell';\nexport const GEOM_CELL = 'GeomCell';\n\n","import { DEFAULT_PLACEHOLDERS } from './defaults';\n\n/**\n * Creates a registry for the cells, which can be used for\n * setting a new cell or getting the registered cells\n *\n * @return {Object} Setters and getters for registered cells\n */\nconst cellRegistry = () => {\n    const reg = DEFAULT_PLACEHOLDERS;\n    return {\n        set: (key, def) => {\n            if (key in reg) {\n                reg[key] = def;\n            }\n            return cellRegistry;\n        },\n        get: () => reg\n    };\n};\nexport default cellRegistry;\n","import { TextCell } from '@chartshq/visual-cell';\nimport { escapeHTML } from 'muze-utils';\nimport { TOP } from '../constants';\n\n/**\n *\n *\n * @param {*} rawContent\n *\n */\nconst resolveTitleSubTitleContent = (rawContent) => {\n    if (typeof rawContent === 'function' && !rawContent._sanitize) {\n        return rawContent();\n    }\n    return escapeHTML(rawContent());\n};\n\n/**\n *\n *\n * @param {*} config\n * @param {*} cellType\n * @param {*} labelManager\n * @param {*} prevCell\n *\n */\nconst headerCreator = (config, cellType, labelManager, prevCell) => {\n    let margin = {};\n    const {\n        content,\n        classPrefix,\n        maxLines\n    } = config;\n    const cell = prevCell || new TextCell(\n        {\n            type: cellType === 'title' ? 'header' : 'text',\n            className: `${classPrefix}-${cellType}-cell`\n        }, {\n            labelManager\n        })\n     .config({ maxLines }).minSpacing({ width: 0, height: 0 });\n\n    cell.source(content);\n    cell._minTickDiff = { height: 0, width: 0 };\n\n    if (config.position === TOP) {\n        margin = { top: 0, bottom: config.padding };\n    } else {\n        margin = { top: config.padding, bottom: 0 };\n    }\n    cell.config({ margin });\n\n    return {\n        height: cell.getLogicalSpace().height,\n        cell\n    };\n};\n\n/**\n *\n *\n * @param {*} config\n * @param {*} type\n * @param {*} labelManager\n * @param {*} cell\n *\n */\nconst createHeading = (config, type, labelManager, prevCell) => {\n    if (!config) { return ''; }\n\n    return headerCreator(\n        config,\n        type,\n        labelManager,\n        prevCell\n    );\n};\n\n/**\n *\n *\n * @param {*} context\n */\nexport const createHeaders = (context, canvasHeight, canvasWidth) => {\n    let headerHeight = 0;\n    const headers = {};\n    const subtitle = context.subtitle();\n    const isSubtitle = resolveTitleSubTitleContent(subtitle[0]);\n\n    canvasHeight >= 200 && canvasWidth >= 200 && ['title', 'subtitle'].forEach((type) => {\n        const headerOptions = context[type]();\n        const content = resolveTitleSubTitleContent(headerOptions[0]);\n        if (content) {\n            const config = headerOptions[1];\n\n            config.width = context.width();\n            config.height = context.height();\n            config.classPrefix = context.config().classPrefix;\n            config.content = content;\n            config.padding = (type === 'title' && !isSubtitle.length) ? subtitle[1].padding : config.padding;\n\n            const { height, cell } = createHeading(config, type, context.dependencies().smartlabel,\n                context[`${type}Cell`]);\n\n            headers[`${type}Cell`] = cell;\n            context._composition[type] = cell;\n            headerHeight += height;\n        }\n    });\n    return { headerHeight, headers };\n};\n\n","import { TextCell, AxisCell } from '@chartshq/visual-cell';\nimport { getValueParser, retrieveFieldDisplayName } from 'muze-utils';\nimport {\n    VERTICAL, HORIZONTAL, LEFT, RIGHT, LEGEND_TYPE_MAP, PADDING, BORDER, MARGIN\n} from '../constants';\n\n/**\n *\n *\n * @param {*} legendConfig\n * @param {*} canvases\n *\n */\nexport const legendCreator = (canvas) => {\n    let LegendCls;\n    const dataset = [];\n    const axes = canvas.getRetinalAxes();\n\n    Object.entries(axes).forEach((axisInfo) => {\n        const scale = axisInfo[1][0];\n        const scaleType = axisInfo[0];\n        const scaleProps = canvas[scaleType]();\n\n        if (scaleProps.field && scale) {\n            const {\n                type,\n                step\n            } = scale.config();\n\n            const stepMapper = typeof step === 'boolean' ? step : false;\n            LegendCls = LEGEND_TYPE_MAP[`${type}-${stepMapper}-${scaleType}`];\n            dataset.push({\n                scale,\n                canvas,\n                fieldName: scaleProps.field,\n                title: retrieveFieldDisplayName(canvas.data(), scaleProps.field),\n                LegendCls,\n                scaleType\n            });\n        }\n    });\n\n    return dataset;\n};\n\n/**\n *\n *\n * @param {*} legendConfig\n * @param {*} canvases\n * @param {*} measurement\n * @param {*} prevLegends\n *\n */\nexport const legendInitializer = (legendConfig, canvas, measurement, prevLegends) => {\n    const legends = [];\n    const {\n        height,\n        width,\n        headerHeight\n    } = measurement;\n    const {\n        position,\n        align\n    } = legendConfig;\n\n    const legendInfo = legendCreator(canvas);\n    const { invalidValues } = canvas.config();\n\n    const parser = getValueParser(invalidValues);\n    legendInfo.forEach((dataInfo, index) => {\n        let legend = {};\n\n        const legendMeasures = {};\n        const {\n                LegendCls,\n                scale,\n                fieldName,\n                title: titleText,\n                scaleType\n            } = dataInfo;\n        const config = legendConfig[scaleType] || {};\n        const title = config.title || {};\n        title.text = title.text || titleText;\n        if (config.show) {\n            config.position = position;\n            config.align = align;\n\n            if (prevLegends[index]) {\n                legend = prevLegends[index].legend;\n            } else {\n                legend = LegendCls.create({\n                    labelManager: canvas._dependencies.smartlabel,\n                    cells: {\n                        AxisCell, TextCell\n                    }\n                });\n            }\n            legendMeasures.maxHeight = align === VERTICAL ? (height - headerHeight) : height * 0.2;\n            legendMeasures.maxWidth = align === HORIZONTAL ? width : width * 0.2;\n            legendMeasures.width = Math.min(legendMeasures.maxWidth, config.width);\n            legendMeasures.height = Math.min(legendMeasures.maxHeight, config.height);\n\n            [PADDING, BORDER, MARGIN].forEach((e) => {\n                legendMeasures[e] = config[e];\n            });\n            legend.scale(scale)\n                            .valueParser(parser)\n                            .title(title)\n                            .fieldName(fieldName)\n                            .config(config)\n                            .metaData(canvas.composition().visualGroup.getGroupByData().project([fieldName]))\n                            .measurement(legendMeasures)\n                            .canvasAlias(canvas.alias())\n                            .setLegendMeasures();\n\n            legends.push({ canvas, legend, scaleType });\n        }\n    });\n    return legends;\n};\n\n/**\n *\n *\n * @param {*} legends\n * @param {*} legendConfig\n * @param {*} availableHeight\n * @param {*} availableWidth\n *\n */\nexport const getLegendSpace = (legends, legendConfig, availableHeight, availableWidth) => {\n    const legendMeasures = legends.map(legendInfo => legendInfo.legend.measurement());\n    const legendSpace = { width: 0, height: 0 };\n\n    legendMeasures.forEach((space) => {\n        let height = 0;\n        let width = 0;\n        width = Math.min(space.width, space.maxWidth);\n        height = Math.min(space.height, space.maxHeight);\n\n        if (legendConfig.align === HORIZONTAL) {\n            if (legendSpace.width + width > availableWidth) {\n                legendSpace.width = availableWidth;\n                legendSpace.height += height;\n            } else {\n                legendSpace.width += width;\n                legendSpace.height = Math.max(legendSpace.height, height);\n            }\n        } else if (legendSpace.height + height > availableHeight) {\n            legendSpace.height = height;\n            legendSpace.width += width;\n        } else {\n            legendSpace.height += height;\n            legendSpace.width = Math.max(legendSpace.width, width);\n        }\n    });\n    if (legendConfig.align === HORIZONTAL) {\n        legendSpace.width = availableWidth;\n    }\n    return legendSpace;\n};\n\n/**\n *\n *\n * @param {*} context\n * @param {*} headerHeight\n *\n */\nexport const createLegend = (context, headerHeight, height, width) => {\n    const measurement = {\n        height,\n        width,\n        headerHeight\n    };\n    const { legend } = context.config();\n    const { show, position } = legend;\n\n    legend.classPrefix = context.config().classPrefix;\n    const align = (position === LEFT || position === RIGHT) ? VERTICAL : HORIZONTAL;\n\n    legend.show = show ? ((align === VERTICAL && width > 200) || (align === HORIZONTAL && height > 200)) : show;\n    legend.align = align;\n    return legendInitializer(legend, context, measurement, context.legends || []);\n};\n","import { LayoutComponent } from '../../../../layout/src/tree-layout';\n\nexport default class MuzeComponent extends LayoutComponent {\n    getLogicalSpace () {\n        const { width, height } = this.boundBox();\n        return { width, height };\n    }\n\n    setSpatialConfig (conf) {\n        this.boundBox({ top: conf.y, left: conf.x });\n        this.newDimensions = {\n            width: conf.width,\n            height: conf.height\n        };\n        this.renderAt(conf.renderAt);\n    }\n\n    getBoundBox () {\n        return this.boundBox();\n    }\n\n    updateWrapper () {\n        throw Error('Update is not implemented');\n    }\n\n    setParams () {\n        throw Error('set params is not implemented');\n    }\n}\n","import { selectElement } from 'muze-utils';\nimport MuzeComponent from './muze-chart-component';\nimport { LEFT } from '../../constants';\n\nexport default class HeaderComponent extends MuzeComponent {\n    constructor (params) {\n        super(params.name, params.component.getLogicalSpace(), 0);\n        this.setParams(params);\n    }\n\n    renderHeader (container) {\n        const layoutConfig = this.params.config;\n        container = selectElement(container);\n        const { align } = layoutConfig;\n        const sel = container\n          .selectAll(`.${layoutConfig.classPrefix}-inner-container`)\n          .data([this.name]);\n        sel.exit().remove();\n        const selEnter = sel.enter().append('div');\n\n        const cont = selEnter.merge(sel);\n        cont.classed(`${layoutConfig.classPrefix}-inner-container`, true);\n        const { height, width } = this.boundBox();\n        this.component.setAvailableSpace(width, height);\n\n        this.component && this.component.render(cont.node());\n\n        cont.selectAll('div').classed(`${layoutConfig.classPrefix}-inner-content`, true);\n        cont.style('width', `${100}%`);\n\n        if (layoutConfig && this.component) {\n            cont.style('float', LEFT)\n                            .style('text-align', align);\n                            // .style(`padding-${position === TOP ? BOTTOM : TOP}`, `${padding}px`);\n        }\n    }\n\n    draw (container) {\n        this.renderHeader(container || document.getElementById(this.renderAt()));\n    }\n\n    updateWrapper (params) {\n        this.setParams(params);\n        this.name(params.name);\n        this.boundBox(params.component.getLogicalSpace());\n        return this;\n    }\n\n    setParams (params) {\n        this.component = params.component;\n        this.params = params;\n        this.target(params.config.target);\n        this.position(params.config.position);\n        this.className(params.config.className);\n        this.alignWith(params.config.alignWith);\n        this.alignment(params.config.alignment);\n    }\n\n    setSpatialConfig (conf) {\n        this.boundBox({ top: conf.y,\n            left: conf.x,\n            width: conf.width,\n            height: conf.height });\n        this.renderAt(conf.renderAt);\n    }\n}\n","import { makeElement, selectElement } from 'muze-utils';\nimport MuzeComponent from './muze-chart-component';\nimport {\n     LEFT, RIGHT, VERTICAL, HORIZONTAL, TOP, BOTTOM, HORIZONTAL_CENTER, VERTICAL_CENTER\n} from '../../constants';\nimport { ROW_MATRIX_INDEX, COLUMN_MATRIX_INDEX } from '../../../../layout/src/enums/constants';\n\nfunction defaultAlignmentHelper (position) {\n    let alignment = null;\n    const alignWith = `${ROW_MATRIX_INDEX[1]}-${COLUMN_MATRIX_INDEX[1]}`;\n    switch (position) {\n    case TOP:\n    case BOTTOM:\n        alignment = HORIZONTAL_CENTER;\n        break;\n    case LEFT:\n    case RIGHT:\n        alignment = VERTICAL_CENTER;\n        break;\n    default:\n        alignment = VERTICAL_CENTER;\n    }\n    return { alignment, alignWith };\n}\nexport default class LegendComponent extends MuzeComponent {\n    constructor (params) {\n        super(params.name, params.config.measurement.legendSpace, 0);\n        this.setParams(params);\n    }\n\n    renderLegend (container) {\n        container = selectElement(container);\n        const sectionComponents = [];\n        const { position, classPrefix } = this.params.config;\n        const legendMount = makeElement(container, 'div', [this.components],\n                                        `${classPrefix}-inner-content`, {}, d => d);\n        legendMount.classed(`${classPrefix}-legend`, true);\n        const align = (position === LEFT || position === RIGHT) ? VERTICAL : HORIZONTAL;\n        const legWidth = this.newDimensions.width;\n        const legHeight = this.newDimensions.height;\n\n        [container, legendMount].forEach((elem) => {\n            elem.style('width', `${Math.floor(legWidth)}px`)\n                            .style('height', `${legHeight}px`)\n                            .style('float', LEFT);\n        });\n\n        if (align === VERTICAL) {\n            let sections = -1;\n            let currHeight = legHeight;\n            let currWidth = 0;\n\n            this.components.forEach((legendInfo) => {\n                const leg = legendInfo.legend;\n                if (leg.measurement().height > currHeight) {\n                    sections++;\n                    currWidth = 0;\n                    currHeight = legHeight;\n                } else {\n                    sections < 0 && sections++;\n                }\n                sectionComponents[sections] = sectionComponents[sections] || [];\n                currHeight -= Math.min(leg.measurement().height, currHeight);\n                currWidth = Math.max(Math.min(leg.measurement().width, leg.measurement().maxWidth), currWidth);\n                sectionComponents[sections].push({\n                    legend: leg,\n                    legendHeight: legHeight,\n                    legendWidth: currWidth\n                });\n            });\n\n            const mount = makeElement(legendMount, ['div'], sectionComponents, `${classPrefix}-legend-section`);\n            // mount.each((d, i) => selectElement(this).classed(`${classPrefix}-legend-section-${i}`, true));\n            mount.classed(`${classPrefix}-legend-vertical-section`, true)\n                            .style('width', d => `${d[0].legendWidth}px`);\n            makeElement(mount, ['div'], d => d, `${classPrefix}-legend-components`, {}, d => d.legend.id())\n                            .each(function (d) {\n                                d.legend.mount(this);\n                            })\n                            .style('width', d => `${d.legendWidth}px`);\n        } else {\n            const mount = makeElement(legendMount, 'div', [1], `${classPrefix}-legend-section`);\n            mount.classed(`${classPrefix}-legend-horizontal-section`, true);\n            mount.classed(`${classPrefix}-legend-section-${0}`, true)\n                            .style('width', `${legWidth}px`);\n\n            makeElement(mount, 'div', this.components, `${classPrefix}-legend-components`, {}, d => d.legend.id())\n                            .each(function (d) { d.legend.mount(this); })\n                            .style('width', d => `${d.legend.measurement().width}px`);\n        }\n    }\n\n    draw (container) {\n        this.renderLegend(container || document.getElementById(this.renderAt()));\n    }\n\n    updateWrapper (params) {\n        this.name(params.name);\n        this.boundBox(params.config.measurement.legendSpace);\n        this.setParams(params);\n        return this;\n    }\n\n    setParams (params) {\n        this.components = params.component;\n        this.params = params;\n        this.target(params.config.target);\n        this.position(params.config.position);\n        const { alignWith, alignment } = defaultAlignmentHelper(params.config.position);\n        this.className(params.config.className);\n        this.alignWith(params.config.alignWith || alignWith);\n        this.alignment(params.config.alignment || alignment);\n    }\n\n}\n","import {\n    selectElement,\n    makeElement,\n    getD3Drag,\n    getEvent,\n    getWindow,\n    hasTouch\n} from 'muze-utils';\nimport './scroll-bar.scss';\nimport { WIDTH, HEIGHT } from '../../../constants';\n\nconst d3Drag = getD3Drag();\n\nconst arrowSizeMap = {\n    left: WIDTH,\n    right: WIDTH,\n    top: HEIGHT,\n    bottom: HEIGHT\n};\n\nexport const getUnitPositions = (unitMeasures, totalLength, viewLength) => {\n    let currentLen = 0;\n    const measures = unitMeasures.primary && unitMeasures.primary.length ?\n        unitMeasures.primary : unitMeasures.secondary;\n\n    return measures.map((e) => {\n        const unitPosition = currentLen * 100 / (totalLength - viewLength);\n        currentLen += e;\n        return unitPosition;\n    });\n};\n\nexport const createScrollBarArrow = (mount, type, config) => {\n    const {\n        classPrefix,\n        thickness\n    } = config;\n    const arrow = makeElement(mount, 'div', [type], `${classPrefix}-scroll-arrow-${type}`);\n\n    arrow.classed(`${classPrefix}-scroll-arrow`, true);\n    arrow.style(arrowSizeMap[type], `${thickness}px`);\n\n    const chevron = makeElement(arrow, 'div', [1], `${classPrefix}-scroll-arrow-chevron`);\n\n    chevron.attr('id', `${classPrefix}-scroll-arrow-chevron-${type}`);\n\n    return arrow;\n};\n\nexport const createScrollBarRect = (mount, config) => {\n    const {\n        classPrefix\n    } = config;\n    const rect = makeElement(mount, 'div', [1], `${classPrefix}-scroll-rect`);\n    const mover = makeElement(rect, 'div', [1], `${classPrefix}-scroll-mover`);\n\n    return { rect, mover };\n};\n\nexport const applyRectClick = (scrollMaker, moverRect) => {\n    const {\n        rect\n    } = moverRect;\n\n    rect.on('click', () => {\n        const event = getEvent();\n        scrollMaker.emptyScrollAreaClick(event);\n    });\n};\n\nconst applyMoverDrag = (scrollMaker, moverRect) => {\n    let startPos = {};\n    let moverStartPos = 0;\n    let rectStartPos = 0;\n    let endPos = {};\n    const {\n        mover,\n        rect\n    } = moverRect;\n\n    mover.call(d3Drag()\n                    .on('start', () => {\n                        const event = getEvent();\n\n                        moverStartPos = mover.node().getBoundingClientRect();\n                        rectStartPos = rect.node().getBoundingClientRect();\n                        startPos = {\n                            x: event.x,\n                            y: event.y\n                        };\n                    })\n                    .on('drag', () => {\n                        const event = getEvent();\n                        const window = getWindow();\n\n                        endPos = {\n                            x: event.x,\n                            y: event.y\n                        };\n                        const distanceMoved = {\n                            x: endPos.x - startPos.x,\n                            y: endPos.y - startPos.y\n                        };\n                        const actualPosition = {\n                            x: moverStartPos.x + distanceMoved.x - rectStartPos.x + window.pageXOffset,\n                            y: moverStartPos.y + distanceMoved.y - rectStartPos.y + window.pageYOffset\n                        };\n\n                        scrollMaker.changeMoverPosition(actualPosition);\n                    }));\n};\n\nconst applyScrollMouseDownAction = (moverRect, scrollMaker, speed) => {\n    const {\n        mover,\n        rect\n    } = moverRect;\n    const { x, y } = mover.node().getBoundingClientRect();\n    const { x: rectX, y: rectY } = rect.node().getBoundingClientRect();\n\n    scrollMaker.changeMoverPosition({ x: x - rectX + speed, y: y - rectY + speed });\n};\n\nconst registerListenerOnArrow = (scrollMaker, moverRect, arrowType, speed) => {\n    let timer = '';\n    const arrow = scrollMaker._components[arrowType];\n    const isTouchDevice = hasTouch();\n\n    arrow.on(isTouchDevice ? 'touchstart' : 'mousedown', () => {\n        const event = getEvent();\n\n        event.preventDefault();\n\n        timer = setInterval(() => {\n            applyScrollMouseDownAction(moverRect, scrollMaker, speed);\n        }, 100);\n    }).on(isTouchDevice ? 'touchend' : 'mouseup', () => {\n        const event = getEvent();\n\n        event.preventDefault();\n\n        clearInterval(timer);\n    }).on('click', () => {\n        applyScrollMouseDownAction(moverRect, scrollMaker, speed);\n    });\n};\n\nexport const registerListeners = (scrollMaker) => {\n    const {\n        moverRect\n    } = scrollMaker._components;\n\n    const speed = scrollMaker.config().speed;\n\n    registerListenerOnArrow(scrollMaker, moverRect, 'prevArrow', -speed);\n    applyMoverDrag(scrollMaker, moverRect);\n    applyRectClick(scrollMaker, moverRect);\n    registerListenerOnArrow(scrollMaker, moverRect, 'nextArrow', speed);\n};\n\nexport const scrollContainerHelper = (mountPoint, config, dimensions, type) => {\n    const {\n        classPrefix\n    } = config;\n    const scrollBarContainer = makeElement(selectElement(mountPoint), 'div', [1], `#${classPrefix}-scroll-bar-${type}`);\n\n    scrollBarContainer.classed(`${classPrefix}-scroll-bar`, true);\n    scrollBarContainer.style(WIDTH, `${dimensions.width}px`);\n    scrollBarContainer.style(HEIGHT, `${dimensions.height}px`);\n    return scrollBarContainer;\n};\n\n","import { mergeRecursive } from 'muze-utils';\n\nexport const PROPS = {\n\n    config: {\n        sanitization: (context, value) => {\n            value = mergeRecursive(context._config, value);\n            return value;\n        }\n    },\n    manager: {},\n    unitPositions: {},\n    logicalSpace: {}\n};\n\n","import { ERROR_MSG, generateGetterSetters } from 'muze-utils';\nimport {\n    scrollContainerHelper,\n    registerListeners\n} from './helper';\nimport { PROPS } from './props';\n\nexport class ScrollMaker {\n\n    constructor () {\n        this._components = {};\n        this._logicalSpace = {};\n        this._attachedScrollAction = () => {};\n        this._config = {\n            thickness: 10,\n            speed: 2\n        };\n        this._unitPositions = null;\n\n        generateGetterSetters(this, PROPS);\n    }\n\n    static type () {\n        throw new ERROR_MSG('Method not implemented');\n    }\n\n    emptyScrollAreaClick () {\n        throw new ERROR_MSG('Method not implemented');\n    }\n\n    changeMoverPosition () {\n        throw new ERROR_MSG('Method not implemented');\n    }\n\n    scrollTo () {\n        throw new ERROR_MSG('Method not implemented');\n    }\n\n    scrollDeltaTo () {\n        throw new ERROR_MSG('Method not implemented');\n    }\n\n    createScroll (mountPoint) {\n        const config = this.config();\n\n        return {\n            scrollBarContainer: scrollContainerHelper(mountPoint, config, this.logicalSpace(), this.constructor.type())\n        };\n    }\n\n    attachScrollAction (externalScrollAction) {\n        this._attachedScrollAction = externalScrollAction;\n        return this;\n    }\n\n    detachScrollAction () {\n        this._attachedScrollAction = () => {};\n        return this;\n    }\n\n    getLogicalSpace () {\n        return this.logicalSpace();\n    }\n\n    registerListeners () {\n        registerListeners(this);\n        return this;\n    }\n\n    remove () {\n        this._components.scrollBarContainer.remove();\n        return this;\n    }\n}\n\n","import MuzeComponent from './muze-chart-component';\nimport { HorizontalScrollMaker } from './scroll-bar-maker/horizontal-scroll-maker';\nimport { VerticalScrollMaker } from './scroll-bar-maker/vertical-scroll-maker';\n\nconst scrollMakerMap = {\n    horizontal: HorizontalScrollMaker,\n    vertical: VerticalScrollMaker\n};\n\n/**\n * Scroll Component acts as a wrapper over the scoll bars created using the respective Scroll Makers\n * This provides a consistent API for layouting using the tree layout system.\n *\n *\n * @class\n * @public\n * @module ScrollComponent\n */\nexport default class ScrollComponent extends MuzeComponent {\n\n    constructor (params) {\n        const ScrollMaker = scrollMakerMap[params.config.type];\n\n        params.component = new ScrollMaker();\n        params.component.config(params.config.scrollBarComponentConfig);\n        params.component.logicalSpace(params.dimensions);\n        super(params.name, params.component.getLogicalSpace(), 0);\n        this.setParams(params);\n    }\n\n    manager (...manager) {\n        if (manager.length) {\n            this.component.manager(manager[0]);\n            return this;\n        }\n        return this.component.manager();\n    }\n\n    /**\n     * Scrolls based on the actual pixel value provided. Since it's a delta change, the input will be\n     * a delta between (-Infinity, Infinity), based on which the scroll will occur. Only a delta movement in\n     * scroll occurs\n     *\n     * @public\n     *\n     * @param {number} delta Based on which the scroll will have a delta change in position\n     * @return {ScrollComponent} Instance of the ScrollComponent\n     */\n    scrollDeltaTo (delta) {\n        this.component.scrollDeltaTo(delta);\n        return this;\n    }\n\n    /**\n     * Scrolls to the specific point in the page. The input is provided as a percentage (0 - 100)\n     *\n     * @public\n     *\n     * @param {number} scrollPercentage Its the percentage based on which the scroll action will occur\n     * @return {ScrollComponent} Instance of the ScrollComponent\n     */\n    scrollTo (scrollPercentage) {\n        this.component.scrollTo(scrollPercentage);\n        return this;\n    }\n\n    /**\n     * Scrolls to the specific point in the page based on the unit index.\n     * The input is provided as a number represting the index for the unit.\n     * For vertical scroll, it's the row index that will be required.\n     * For horizontal scroll, it's the column index that will be required\n     *\n     * @public\n     *\n     * @param {number} unitIndex Index of the unit appearing in the grid\n     * @return {ScrollComponent} Instance of the ScrollComponent\n     */\n    scrollToUnitIndex (unitIndex) {\n        const unitPositions = this.component.unitPositions();\n        const sanitizedUnitIndex = Math.min(Math.max(0, unitIndex), unitPositions.length - 1);\n        this.component.scrollTo(unitPositions[sanitizedUnitIndex]);\n        return this;\n    }\n\n    /**\n     * Provides the positions of the units(either horizontal or vertical based on the type\n     * of scroll bar it wraps) relative to it's container. The position of the first unit starts at 0\n     *\n     *\n     * @public\n     *\n     * @return {Array} Positions of units either horizontal or vertical\n     */\n    getScrollPositionsForUnits () {\n        return this.component.unitPositions();\n    }\n\n    draw (container) {\n        this.component.createScroll(container || document.getElementById(this.renderAt()));\n        return this;\n    }\n\n    /**\n     * Can be used to attach a scroll action whenever scrolling occurs in the canvas\n     *\n     * @public\n     * @param {number} externalAction Action to be attached during scroll\n     * @return {ScrollComponent} Instance of the ScrollComponent\n     */\n    attachScrollAction (externalAction) {\n        this.component.attachScrollAction(externalAction);\n        return this;\n    }\n\n    /**\n     * Can be used to detach the scroll action already bound to the scroll bar\n     *\n     * @public\n     * @return {ScrollComponent} Instance of the ScrollComponent\n     */\n    detachScrollAction () {\n        this.component.detachScrollAction();\n        return this;\n    }\n\n    updateWrapper (params) {\n        this.name(params.name);\n        this.component.config(params.config.scrollBarComponentConfig);\n        this.component.logicalSpace(params.dimensions);\n        this.boundBox(this.component.getLogicalSpace());\n        this.setParams(params);\n        return this;\n    }\n\n    setParams (params) {\n        this.component = params.component || this.component;\n        this.params = params;\n        this.target(params.config.target);\n        this.position(params.config.position);\n        this.className(params.config.className);\n        this.alignWith(params.config.alignWith);\n        this.alignment(params.config.alignment);\n    }\n\n    remove () {\n        this.component.remove();\n    }\n}\n","import { ScrollMaker } from './scroll-maker';\nimport { createScrollBarRect, createScrollBarArrow, getUnitPositions } from './helper';\nimport { HORIZONTAL, HEIGHT, WIDTH, LEFT } from '../../../constants';\n\nexport class HorizontalScrollMaker extends ScrollMaker {\n\n    /**\n     * Describes the type of the ScrollMaker\n     *\n     * @public\n     *\n     * @return {String} Returns the type of scroll maker: horizontal\n     */\n    static type () {\n        return HORIZONTAL;\n    }\n\n    createScroll (mountPoint, dimensions = this.logicalSpace()) {\n        const config = this.config();\n        const { scrollBarContainer } = super.createScroll(mountPoint, config, dimensions);\n        const prevArrow = createScrollBarArrow(scrollBarContainer, 'left', config);\n        const moverRect = createScrollBarRect(scrollBarContainer, config);\n        const nextArrow = createScrollBarArrow(scrollBarContainer, 'right', config);\n        const {\n            mover,\n            rect\n        } = moverRect;\n\n        const { height, width, totalLength, viewLength, unitWidths } = this.logicalSpace();\n        const scrollBarWithouArrowLength = width - height * 2;\n\n        rect.style(WIDTH, `${dimensions.width - height * 2}px`);\n        rect.style(HEIGHT, `${100}%`);\n        mover.style(WIDTH, `${(viewLength * scrollBarWithouArrowLength) / totalLength}px`);\n        mover.style(HEIGHT, `${100}%`);\n        mover.style(LEFT, `${0}px`);\n\n        this._components = {\n            prevArrow,\n            nextArrow,\n            moverRect,\n            scrollBarContainer\n        };\n        this._scrollBarWithouArrowLength = scrollBarWithouArrowLength;\n        this.unitPositions(getUnitPositions(unitWidths, totalLength, viewLength));\n        this.registerListeners();\n    }\n\n    emptyScrollAreaClick (event) {\n        const {\n            mover,\n            rect\n        } = this._components.moverRect;\n        const speed = this.config().speed;\n        const { x, y } = mover.node().getBoundingClientRect();\n        const { x: rectX, y: rectY } = rect.node().getBoundingClientRect();\n        let positionAdjuster = speed * 10;\n        if (event.x < x) {\n            positionAdjuster = -speed * 10;\n        }\n        this.changeMoverPosition({ x: x - rectX + positionAdjuster, y: y - rectY + positionAdjuster });\n    }\n\n    changeMoverPosition (newPosition) {\n        let currentPos;\n        const {\n            mover,\n            rect\n        } = this._components.moverRect;\n        const rectStartPos = rect.node().getBoundingClientRect();\n        const moverPos = mover.node().getBoundingClientRect();\n        const {\n            totalLength\n         } = this.logicalSpace();\n\n        if (newPosition.x < 0) {\n            currentPos = 0;\n        } else if (newPosition.x + moverPos.width > rectStartPos.width) {\n            currentPos = rectStartPos.width - moverPos.width;\n        } else {\n            currentPos = newPosition.x;\n        }\n\n        mover.style(LEFT, `${currentPos}px`);\n        const totalDistance = this._scrollBarWithouArrowLength;\n        const movedViewLength = (currentPos * totalLength) / totalDistance;\n\n        this.manager().performAttachedScrollFunction(this.constructor.type(), movedViewLength);\n    }\n\n    scrollDeltaTo (delta) {\n        const {\n            mover,\n            rect\n        } = this._components.moverRect;\n        const moverPos = mover.node().getBoundingClientRect();\n        const rectStartPos = rect.node().getBoundingClientRect();\n\n        this.changeMoverPosition({ y: 0, x: moverPos.x - rectStartPos.x - delta });\n        return this;\n    }\n\n    /**\n     * Scrolls to the specific point in the page. The input is provided as a percentage (0 - 100)\n     *\n     * @public\n     *\n     * @param {number} scrollPercentage Its the percentage based on which the scroll action will occur\n     * @return {HorizontalScrollMaker} Instance of the HorizontalScrollMaker\n     */\n    scrollTo (scrollPercentage) {\n        const {\n            mover\n        } = this._components.moverRect;\n        const moverPos = mover.node().getBoundingClientRect();\n        const movement = (scrollPercentage * (this._scrollBarWithouArrowLength - moverPos.width)) / 100;\n\n        this.changeMoverPosition({ y: 0, x: movement });\n        return this;\n    }\n\n}\n\n","import { ScrollMaker } from './scroll-maker';\nimport { createScrollBarRect, createScrollBarArrow, getUnitPositions } from './helper';\nimport { VERTICAL, TOP, HEIGHT, WIDTH } from '../../../constants';\n\nexport class VerticalScrollMaker extends ScrollMaker {\n\n    /**\n     * Describes the type of the ScrollMaker\n     *\n     * @public\n     *\n     * @return {String} Returns the type of scroll maker: vertical\n     */\n    static type () {\n        return VERTICAL;\n    }\n\n    createScroll (mountPoint, dimensions = this.logicalSpace()) {\n        const config = this.config();\n        const { scrollBarContainer } = super.createScroll(mountPoint, dimensions);\n        const prevArrow = createScrollBarArrow(scrollBarContainer, 'top', config);\n        const moverRect = createScrollBarRect(scrollBarContainer, config);\n        const nextArrow = createScrollBarArrow(scrollBarContainer, 'bottom', config);\n        const {\n            mover,\n            rect\n        } = moverRect;\n        const { height, width, totalLength, viewLength, unitHeights } = this.logicalSpace();\n        const scrollBarWithouArrowLength = height - width * 2;\n\n        rect.style(HEIGHT, `${scrollBarWithouArrowLength}px`);\n        rect.style(WIDTH, `${100}%`);\n        mover.style(WIDTH, `${100}%`);\n        mover.style(HEIGHT, `${(viewLength * scrollBarWithouArrowLength) / totalLength}px`);\n        mover.style(TOP, `${0}px`);\n\n        this._components = {\n            prevArrow,\n            nextArrow,\n            moverRect,\n            scrollBarContainer\n        };\n        this._scrollBarWithouArrowLength = scrollBarWithouArrowLength;\n\n        this.unitPositions(getUnitPositions(unitHeights, totalLength, viewLength));\n        this.registerListeners();\n    }\n\n    emptyScrollAreaClick (event) {\n        const {\n            mover,\n            rect\n        } = this._components.moverRect;\n        const speed = this.config().speed;\n        const { x, y } = mover.node().getBoundingClientRect();\n        const { x: rectX, y: rectY } = rect.node().getBoundingClientRect();\n\n        let positionAdjuster = speed * 10;\n        if (event.y < y) {\n            positionAdjuster = -speed * 10;\n        }\n        this.changeMoverPosition({ x: x - rectX + positionAdjuster, y: y - rectY + positionAdjuster });\n    }\n\n    changeMoverPosition (newPosition) {\n        let currentPos;\n        const {\n            mover,\n            rect\n        } = this._components.moverRect;\n        const {\n            totalLength\n         } = this.logicalSpace();\n        const rectStartPos = rect.node().getBoundingClientRect();\n        const moverPos = mover.node().getBoundingClientRect();\n\n        if (newPosition.y < 0) {\n            currentPos = 0;\n        } else if (newPosition.y + moverPos.height > rectStartPos.height) {\n            currentPos = rectStartPos.height - moverPos.height;\n        } else {\n            currentPos = newPosition.y;\n        }\n        mover.style(TOP, `${currentPos}px`);\n        const totalDistance = this._scrollBarWithouArrowLength;\n        const movedViewLength = (currentPos * totalLength) / totalDistance;\n\n        this.manager().performAttachedScrollFunction(this.constructor.type(), movedViewLength);\n    }\n\n    /**\n     * Scrolls based on the actual pixel value provided. Since it's a delta change, the input will be\n     * a delta between (-Infinity, Infinity), based on which the scroll will occur. Only a delta movement in\n     * scroll occurs\n     *\n     * @public\n     *\n     * @param {number} delta Based on which the scroll will have a delta change in position\n     * @return {VerticalScrollMaker} Instance of the VerticalScrollMaker\n     */\n    scrollDeltaTo (delta) {\n        const {\n            mover,\n            rect\n        } = this._components.moverRect;\n        const moverPos = mover.node().getBoundingClientRect();\n        const rectStartPos = rect.node().getBoundingClientRect();\n\n        this.changeMoverPosition({ y: moverPos.y - rectStartPos.y - delta, x: 0 });\n        return this;\n    }\n\n    /**\n     * Scrolls to the specific point in the page. The input is provided as a percentage (0 - 100)\n     *\n     * @public\n     *\n     * @param {number} scrollPercentage Its the percentage based on which the scroll action will occur\n     * @return {VerticalScrollMaker} Instance of the VerticalScrollMaker\n     */\n    scrollTo (scrollPercentage) {\n        const {\n            mover\n        } = this._components.moverRect;\n        const moverPos = mover.node().getBoundingClientRect();\n        const movement = (scrollPercentage * (this._scrollBarWithouArrowLength - moverPos.height)) / 100;\n\n        this.changeMoverPosition({ x: 0, y: movement });\n        return this;\n    }\n\n}\n","import { makeElement } from 'muze-utils';\nimport { cellSpanMaker, applySpans } from '../../../../layout/src/grid-layout/span-maker';\nimport { applyBorders } from '../../../../layout/src/grid-layout/border-helper';\n\nimport {\n     TOP, CENTER\n} from '../../../../layout/src/enums/constants';\nimport MuzeComponent from './muze-chart-component';\nimport { WIDTH, HEIGHT, HIDDEN, OVERFLOW, AUTO, VISIBLE } from '../../constants';\n\nconst renderPlaceholders = (cells) => {\n    // Rendering content within placeholders\n    cells.each(function (cell) {\n        cell.placeholder.render(this);\n    });\n};\n\nexport default class MatrixComponent extends MuzeComponent {\n\n    constructor (params) {\n        super(params.name, params.config.dimensions, 0);\n        this.setParams(params);\n        this.className(params.config.className);\n    }\n\n    applyScroll (container) {\n        const row = this.params.config.row;\n        const column = this.params.config.column;\n        const { horizontal, vertical } = this.params.config.scrollInfo;\n        container.style(OVERFLOW, VISIBLE);\n        container.style(WIDTH, AUTO);\n        container.style(HEIGHT, AUTO);\n\n        if (horizontal && column === 1) {\n            container.style(OVERFLOW, HIDDEN);\n            container.style(WIDTH, '100%');\n        }\n\n        if (vertical && row === CENTER) {\n            container.style(OVERFLOW, HIDDEN);\n            container.style(HEIGHT, '100%');\n        }\n    }\n\n    renderMatrix (mountPoint) {\n        // Creating containers for each matrix individually\n        const classPrefix = this.params.config.classPrefix;\n        const row = this.params.config.row;\n        const column = this.params.config.column;\n        const dimensions = this.params.config.dimensions;\n        const border = this.params.config.border;\n\n        // Creating containers for each matrix individually\n        const containerForMatrix = makeElement(mountPoint, 'div', [1], `${classPrefix}-grid-${row}-${column + 1}`)\n            .classed(`${classPrefix}-grid-${row}`, true)\n            .classed(`${classPrefix}-grid`, true);\n\n        this.applyScroll(containerForMatrix);\n\n        const {\n            viewMatrix,\n            spans\n        } = cellSpanMaker(this.component, row, column);\n\n            // Rendering the table components\n        const { cells } = this.renderTable(containerForMatrix, `${classPrefix}-grid`, viewMatrix);\n\n        applySpans(cells, spans, { dimensions, border }, `${row}-${column}`);\n        renderPlaceholders(cells);\n\n        cells.exit().each((cell) => {\n            cell.placeholder.remove();\n        });\n\n        applyBorders(cells, border, row, column);\n    }\n\n    renderTable (mount, className, rowData) {\n        const table = makeElement(mount, 'table', ['layout'], `${className}-table`);\n        const body = makeElement(table, 'tbody', ['layout'], `${className}-body`);\n        const rows = makeElement(body, 'tr', rowData, `${className}-tr`);\n        const cells = makeElement(rows, 'td', (d, i) => d.filter(e => e !== null).map(e =>\n                                  ({ placeholder: e, rowIndex: i })), `${className}-td`, {}, key => key.placeholder.id);\n\n        return { table, body, rows, cells };\n    }\n\n    draw (container) {\n        this.renderMatrix(container || document.getElementById(this.renderAt()));\n    }\n\n    updateWrapper (params) {\n        this.name(params.name);\n        this.boundBox(params.config.dimensions);\n        this.setParams(params);\n        return this;\n    }\n\n    setParams (params) {\n        this.component = params.component;\n        this.params = params;\n        this.target(params.config.target);\n        this.position(TOP);\n        this.className(params.config.className);\n    }\n}\n","import { selectElement, getEvent } from 'muze-utils';\nimport MuzeComponent from './muze-chart-component';\nimport MatrixComponent from './matrix-component';\nimport { ROW_MATRIX_INDEX, COLUMN_MATRIX_INDEX } from '../../../../layout/src/enums/constants';\nimport { WHEEL_DELTA_MODIFIER } from '../../enums/constants';\n\n/**\n * Based on the type of scroll, it changes the scrollLeft/scrollTop property of the specific\n * elements based on the scroll distance provided\n *\n *\n */\nconst applyScrollAction = (elem, classPrefix, scollDistance, type) => {\n    selectElement(elem)\n                    .selectAll(`.${classPrefix}-grid`)\n                    .property(type, scollDistance);\n};\n\n/**\n * Applies the action of the scroll by actually scrolling the respective matrices based on the\n * type of scroll. It returns a function which has both the scroll methods available\n *\n * @return {Object} contains the horizontal and vertical scroll actions on the grid component\n */\nconst scrollActionApplier = (movement, context) => {\n    const classPrefix = context.params.config.classPrefix;\n\n    return {\n        horizontal: () => {\n            [0, 1, 2].forEach(e =>\n                applyScrollAction(`#${context.component[e][1].renderAt()}`, classPrefix, movement, 'scrollLeft'));\n        },\n        vertical: () => {\n            [0, 1, 2].forEach(e =>\n                applyScrollAction(`#${context.component[1][e].renderAt()}`, classPrefix, movement, 'scrollTop'));\n        }\n    };\n};\n\nexport default class GridComponent extends MuzeComponent {\n\n    constructor (params) {\n        super(params.name, params.config.dimensions, 0);\n        this.gridComponents = [];\n        this.setParams(params);\n    }\n\n    sanitizeGrid () {\n        let height = 0;\n        let width = 0;\n        const { viewMatricesInfo, layoutDimensions } = this.component.viewInfo();\n        const scrollInfo = this.component.scrollInfo();\n        const {\n            viewHeight,\n            viewWidth,\n            unitHeights,\n            unitWidths\n        } = layoutDimensions;\n\n        for (let i = 0; i < 3; i++) {\n            if (!(this.gridComponents.length && this.gridComponents[i] instanceof Array)) {\n                this.gridComponents[i] = [];\n            }\n            for (let j = 0; j < 3; j++) {\n                const matrixDim = {\n                    height: viewHeight[i],\n                    width: viewWidth[j],\n                    unitHeights,\n                    unitWidths\n                };\n                const matrix = viewMatricesInfo.matrices[`${ROW_MATRIX_INDEX[i]}`][j];\n                const matrixName = `${ROW_MATRIX_INDEX[i]}-${COLUMN_MATRIX_INDEX[j]}`;\n                const matrixConfig = {\n                    dimensions: matrixDim,\n                    border: layoutDimensions.border,\n                    classPrefix: this.params.config.classPrefix,\n                    scrollInfo,\n                    row: ROW_MATRIX_INDEX[i],\n                    column: j\n                };\n                if (this.gridComponents[i][j] instanceof MuzeComponent) {\n                    this.gridComponents[i][j].updateWrapper({\n                        name: matrixName,\n                        component: matrix,\n                        config: matrixConfig\n                    });\n                } else {\n                    const matrixWrapper = new MatrixComponent({\n                        name: matrixName,\n                        component: matrix,\n                        config: matrixConfig\n                    });\n                    this.gridComponents[i].push(matrixWrapper);\n                }\n                if (i === 0) {\n                    width += matrixDim.width;\n                }\n                if (j === 0) {\n                    height += matrixDim.height;\n                }\n            }\n        }\n        this.boundBox({ height, width });\n\n        this.component = this.gridComponents;\n        this.allComponents = this.gridComponents;\n    }\n\n    scrollBarManager (...manager) {\n        if (manager.length) {\n            this._scrollBarManager = manager[0];\n            return this;\n        }\n        return this._scrollBarManager;\n    }\n\n    /**\n     * Attaches a mousewheel listener to the center matrix, based on which the scrolling can occur.\n     * It uses the scroll component to change the position of the scroller, which ultimately scrolls the center matrix\n     *\n     *\n     * @return {GridComponent} Instance of the GridComponent\n     */\n    attachScrollListener () {\n        selectElement(`#${this.component[1][1].renderAt()}`)\n                        .on('wheel', () => {\n                            const event = getEvent();\n                            const {\n                                wheelDeltaX,\n                                wheelDeltaY\n                            } = event;\n\n                            // Prevent default behaviour and stop propagating\n                            event.preventDefault();\n                            event.stopPropagation();\n\n                            // Scrolling horizontally\n                            if (wheelDeltaX !== 0 && Math.abs(wheelDeltaX) > Math.abs(wheelDeltaY)) {\n                                this.scrollBarManager()\n                                    .triggerScrollBarAction('horizontal', wheelDeltaX / WHEEL_DELTA_MODIFIER);\n                            }\n\n                            // Scrolling Vertically\n                            if (wheelDeltaY !== 0 && Math.abs(wheelDeltaX) < Math.abs(wheelDeltaY)) {\n                                this.scrollBarManager()\n                                    .triggerScrollBarAction('vertical', wheelDeltaY / WHEEL_DELTA_MODIFIER);\n                            }\n                        });\n        return this;\n    }\n\n    performScrollAction (direction, movedView) {\n        scrollActionApplier(movedView, this)[direction]();\n        return this;\n    }\n\n    getBoundBox () {\n        const { top, left } = this.component[0][0].boundBox();\n        const { height, width } = this.boundBox();\n\n        return {\n            top,\n            left,\n            height,\n            width\n        };\n    }\n\n    updateWrapper (params) {\n        this.name(params.name);\n        this.boundBox(params.config.dimensions);\n        this.setParams(params);\n        return this;\n    }\n\n    setParams (params) {\n        this.component = params.component;\n        this.params = params;\n        this.target(params.config.target);\n        this.className(params.config.className);\n        this.sanitizeGrid();\n        return this;\n    }\n}\n","export const SIDE_EFFECT_COMMON = 'common';\nexport const SIDE_EFFECT_INDIVIDUAL = 'individual';\nexport const TOOLTIP_CONSOLIDATED = 'consolidated';\nexport const TOOLTIP_FRAGMENTED = 'fragmented';\nexport const WHEEL_DELTA_MODIFIER = 30;\n","import { TITLE, SUB_TITLE, LEGEND, VERTICAL, HORIZONTAL, WIDTH, HEIGHT, TOP, LEFT, RIGHT } from '../constants';\nimport HeaderComponent from './components/headerComponent';\nimport LegendComponent from './components/legendComponent';\nimport ScrollComponent from './components/scroll-component';\nimport GridComponent from './components/grid-component';\nimport { TITLE_CONFIG, SUB_TITLE_CONFIG, GRID, CANVAS, LAYOUT_ALIGN } from './defaults';\nimport { ROW_MATRIX_INDEX, COLUMN_MATRIX_INDEX, CENTER } from '../../../layout/src/enums/constants';\n\n// Mapping between types of headers and their required configs for wrapper creation\nconst headerMap = {\n    title: {\n        headerCell: 'titleCell',\n        configType: TITLE_CONFIG\n    },\n    subtitle: {\n        headerCell: 'subtitleCell',\n        configType: SUB_TITLE_CONFIG\n    }\n};\n\n/**\n * Creates the wrapper for the header, i.e., title and subtitle to be used in the tree layout\n *\n *\n * @param {string} headerType type of header: title/subtite\n * @param {LayoutManager} layoutManager instance of Layout Manager which manages the layouting of the components\n * @param {Object} renderDetails Extra details required for rendering the headers\n * @return {Instance} Returns the respective wrappers\n */\nconst createHeaderWrapper = (headerType, layoutManager, renderDetails) => {\n    let wrapper = null;\n\n    const { components, layoutConfig } = renderDetails;\n    const { headerCell, configType } = headerMap[headerType];\n    const target = { target: CANVAS };\n\n    if (components.headers && components.headers[headerCell]) {\n        let headerConfig = layoutConfig[headerType];\n        const header = components.headers[headerCell];\n\n        headerConfig = Object.assign({}, headerConfig, {\n            classPrefix: layoutConfig.classPrefix,\n            ...target,\n            alignWith: `${ROW_MATRIX_INDEX[0]}-${COLUMN_MATRIX_INDEX[1]}`,\n            alignment: LAYOUT_ALIGN.LEFT,\n            className: configType.className\n        });\n\n        if (headerConfig.align === CENTER) {\n            headerConfig.alignment = null;\n            headerConfig.alignWith = null;\n        }\n        if (headerConfig.align === RIGHT) {\n            headerConfig.alignment = RIGHT;\n        }\n\n        const wrapperParams = {\n            name: headerType,\n            component: header,\n            config: headerConfig\n        };\n\n        const existingComponent = layoutManager.getComponent(headerType);\n        if (existingComponent) {\n            wrapper = existingComponent\n                        .updateWrapper(wrapperParams);\n        } else {\n            wrapper = new HeaderComponent(wrapperParams);\n        }\n    }\n    return wrapper;\n};\n\n// Mapping between types of scrollBars and their required configs for wrapper creation\nconst scrollBarMap = config => ({\n    vertical: {\n        componentName: 'verticalScrollBar',\n        width: 'thickness',\n        height: 'layoutBasedMeasure',\n        layoutBasedMeasure: HEIGHT,\n        viewMeasure: 'viewHeight',\n        rowAlign: 1,\n        colAlign: config.align === 'right' ? 2 : 0,\n        position: config.align,\n        alignment: TOP\n    },\n    horizontal: {\n        componentName: 'horizontalScrollBar',\n        width: 'layoutBasedMeasure',\n        layoutBasedMeasure: WIDTH,\n        viewMeasure: 'viewWidth',\n        height: 'thickness',\n        rowAlign: config.align === 'top' ? 0 : 2,\n        colAlign: 1,\n        position: config.align,\n        alignment: LEFT\n    }\n});\n\n/**\n * Creates the wrapper for the scroller, i.e., horizontal and vertical to be used in the tree layout\n *\n *\n * @param {string} scrollBarType type of scrollbar: horizontal/vertical\n * @param {LayoutManager} layoutManager instance of Layout Manager which manages the layouting of the components\n * @param {Object} renderDetails Extra details required for rendering the headers\n * @param {GridLayout} grid Instance of the grid layout\n * @return {Instance} Returns the respective wrappers\n */\nconst createScrollBarWrapper = (scrollBarType, layoutManager, renderDetails, grid) => {\n    let scrollBarWrapper = null;\n    const { layoutConfig } = renderDetails;\n    const target = { target: CANVAS };\n    const { scrollBar } = layoutConfig;\n    const { layoutDimensions } = grid.viewInfo();\n    const {\n        actualCenterMeasures,\n        unitHeights,\n        unitWidths\n    } = layoutDimensions;\n    const {\n        componentName, layoutBasedMeasure, width, height, rowAlign, colAlign,\n        viewMeasure, position, alignment\n    } = scrollBarMap(scrollBar[scrollBarType])[scrollBarType];\n    const dimensions = {\n        thickness: scrollBar.thickness,\n        layoutBasedMeasure: layoutDimensions[viewMeasure][1]\n    };\n    const isScroll = grid.scrollInfo()[scrollBarType];\n    const totalLength = actualCenterMeasures[layoutBasedMeasure];\n    const viewLength = layoutDimensions[viewMeasure][1];\n\n    const scrollConfig = Object.assign({}, {\n        classPrefix: layoutConfig.classPrefix,\n        ...target,\n        scrollBarComponentConfig: {\n            ...scrollBar,\n            classPrefix: layoutConfig.classPrefix\n        },\n\n        type: scrollBarType,\n        alignWith: `${ROW_MATRIX_INDEX[rowAlign]}-${COLUMN_MATRIX_INDEX[colAlign]}`,\n        alignment,\n        position\n    });\n\n    const wrapperParams = {\n        name: componentName,\n        config: scrollConfig,\n        dimensions: {\n            width: dimensions[width],\n            height: dimensions[height],\n            totalLength,\n            viewLength,\n            unitHeights,\n            unitWidths\n        }\n    };\n\n    const existingComponent = layoutManager.getComponent(componentName);\n\n    if (!isScroll) {\n        existingComponent && existingComponent.remove();\n        return null;\n    }\n\n    if (existingComponent) {\n        scrollBarWrapper = existingComponent\n                                .updateWrapper(wrapperParams);\n    } else {\n        scrollBarWrapper = new ScrollComponent(wrapperParams);\n    }\n\n    return scrollBarWrapper;\n};\n\n/**\n * Creates the wrapper for the legend to be used in the tree layout\n *\n *\n * @param {LayoutManager} layoutManager instance of Layout Manager which manages the layouting of the components\n * @param {Object} renderDetails Extra details required for rendering the headers\n * @return {Instance} Returns the respective wrappers\n */\nconst createLegendWrapper = (layoutManager, renderDetails) => {\n    let legendWrapper = null;\n    const { components, layoutConfig, measurement } = renderDetails;\n    const target = { target: CANVAS };\n\n    if (components.legends && components.legends.length) {\n        const legendConfig = { ...layoutConfig.legend, ...target, measurement };\n        const wrapperParams = {\n            name: LEGEND,\n            component: components.legends,\n            config: legendConfig\n        };\n\n        const existingComponent = layoutManager.getComponent(LEGEND);\n\n        if (existingComponent) {\n            legendWrapper = existingComponent\n                       .updateWrapper(wrapperParams);\n        } else {\n            legendWrapper = new LegendComponent(wrapperParams);\n        }\n    }\n    return legendWrapper;\n};\n\n/**\n * Creates the wrapper for the grid layout to be used in the tree layout\n *\n *\n * @param {LayoutManager} layoutManager instance of Layout Manager which manages the layouting of the components\n * @param {Object} renderDetails Extra details required for rendering the headers\n * @param {GridLayout} grid Instance of the grid layout\n * @return {Instance} Returns the respective wrappers\n */\nconst gridLayoutWrapper = (layoutManager, renderDetails, grid) => {\n    let gridWrapper = null;\n    const target = { target: CANVAS };\n    const { layoutConfig } = renderDetails;\n\n    const config = {\n        ...target,\n        pagination: layoutConfig.pagination,\n        classPrefix: layoutConfig.classPrefix,\n        dimensions: { height: 0, width: 0 }\n    };\n    const wrapperParams = {\n        name: GRID,\n        component: grid,\n        config\n    };\n    const existingComponent = layoutManager.getComponent(GRID);\n    if (existingComponent) {\n        gridWrapper = existingComponent\n                    .updateWrapper(wrapperParams);\n    } else {\n        gridWrapper = new GridComponent(wrapperParams);\n    }\n    return gridWrapper;\n};\n\n/**\n * Responsible for providing the wrapper creators for every component in Muze.\n * This function, when called, returns the set of components and their respective wrappers.\n *\n *\n *\n * @param {LayoutManager} layoutManager instance of Layout Manager which manages the layouting of the components\n * @param {GridLayout} grid Instance of the grid layout\n * @param {Object} renderDetails Extra details required for rendering the headers\n * @return {Instance} Returns the respective wrappers for each component\n */\nexport const componentWrapperMaker = (layoutManager, grid, renderDetails) => ({\n    title: createHeaderWrapper(TITLE, layoutManager, renderDetails),\n    subtitle: createHeaderWrapper(SUB_TITLE, layoutManager, renderDetails),\n    legend: createLegendWrapper(layoutManager, renderDetails),\n    grid: gridLayoutWrapper(layoutManager, renderDetails, grid),\n    verticalScrollBar: createScrollBarWrapper(VERTICAL, layoutManager, renderDetails, grid),\n    horizontalScrollBar: createScrollBarWrapper(HORIZONTAL, layoutManager, renderDetails, grid)\n});\n","export class ScrollManager {\n\n    constructor () {\n        this._scrollBarComponents = {};\n        this._attachedComponents = {};\n    }\n\n    scrollBarComponents (...sbc) {\n        if (sbc.length) {\n            this._scrollBarComponents = sbc[0];\n            return this;\n        }\n        return this._scrollBarComponents;\n    }\n\n    attachedComponents (...abc) {\n        if (abc.length) {\n            this._attachedComponents = abc[0];\n            return this;\n        }\n        return this._attachedComponents;\n    }\n\n    performAttachedScrollFunction (type, movedViewLength) {\n        Object.values(this.attachedComponents()).forEach((e) => {\n            e.performScrollAction(type, movedViewLength);\n        });\n    }\n\n    triggerScrollBarAction (type, delta) {\n        this.scrollBarComponents()[type] && this.scrollBarComponents()[type].scrollDeltaTo(delta);\n    }\n}\n","import { mergeRecursive } from 'muze-utils';\nimport { arrangeComponents } from './component-resolver';\nimport { createHeaders } from './title-maker';\nimport { createLegend, getLegendSpace } from './legend-maker';\nimport { componentWrapperMaker } from './component-wrapper-maker';\nimport {\n    TOP,\n    BOTTOM,\n    LEFT,\n    RIGHT,\n    TITLE,\n    SUB_TITLE,\n    LEGEND,\n    VERTICAL_SCROLL_BAR,\n    HORIZONTAL_SCROLL_BAR,\n    GRID\n} from '../constants';\nimport { ScrollManager } from './scroll-manager';\n\n/**\n *\n *\n * @param {*} context\n *\n */\nexport const prepareLayout = (layout, renderDetails) => {\n    const { components, layoutConfig, measurement } = renderDetails;\n    const {\n        rows,\n        columns,\n        values,\n        cornerMatrices\n    } = components;\n    const {\n        topLeft,\n        topRight,\n        bottomLeft,\n        bottomRight\n    } = cornerMatrices;\n    if (rows && columns) {\n        layout.measurement(measurement)\n                        .config(layoutConfig)\n                        .matrices({\n                            top: [topLeft, columns[0], topRight],\n                            center: [rows[0], values, rows[1]],\n                            bottom: [bottomLeft, columns[1], bottomRight]\n                        })\n                        .triggerReflow();\n    }\n};\n\n/**\n *\n *\n * @param {*} context\n * @param {*} mount\n *\n */\nexport const getRenderDetails = (context, mount) => {\n    let layoutConfig = mergeRecursive({}, context.config());\n    // Get height width of the mount point\n    let { height, width } = mount.getBoundingClientRect();\n    const heightAttr = context.height();\n    const widthAttr = context.width();\n    const visGroup = context.composition().visualGroup;\n    const {\n        isColumnSizeEqual,\n        isRowSizeEqual,\n        priority,\n        rows,\n        columns,\n        values\n    } = visGroup.placeholderInfo();\n    const {\n        minWidth,\n        minHeight,\n        classPrefix,\n        showHeaders,\n        legend,\n        pagination,\n        scrollBar\n    } = context.config();\n\n    // Get title configuration\n    const titleConfig = context.title()[1];\n     // Get subtitle configuration\n    const subtitleConfig = context.subtitle()[1];\n    // Get legend position\n    const legendPosition = legend.position;\n    // Arrange components according to config\n    const layoutArrangement = arrangeComponents(context);\n\n    height = Math.floor(height);\n    width = Math.floor(width);\n\n    const availableHeightForCanvas = Math.max(heightAttr > 0 ? heightAttr : height, minHeight);\n    const availableWidthForCanvas = Math.max(widthAttr > 0 ? widthAttr : width, minWidth);\n\n    // Create headers and determine header height\n    const { headers, headerHeight } = createHeaders(context, availableHeightForCanvas, availableWidthForCanvas);\n\n    // Create legends and determine legend space\n    const legends = createLegend(context, headerHeight, availableHeightForCanvas, availableWidthForCanvas);\n    context._composition.legend = {};\n    legends.forEach((e) => {\n        context._composition.legend[e.scaleType] = e.legend;\n    });\n\n    const legendSpace = getLegendSpace(legends, legend, availableHeightForCanvas, availableWidthForCanvas);\n    const legendWidth = (legendPosition === LEFT || legendPosition === RIGHT) ? legendSpace.width : 0;\n    const legendHeight = (legendPosition === TOP || legendPosition === BOTTOM) ? legendSpace.height : 0;\n\n    // Set components for layouting\n    const components = {\n        headers,\n        legends,\n        canvases: [context],\n        rows,\n        columns,\n        values,\n        cornerMatrices: visGroup.cornerMatrices()\n    };\n\n    const measurement = {\n        mountSpace: {\n            height,\n            width\n        },\n        headerHeight,\n        legendSpace,\n        canvasWidth: availableWidthForCanvas,\n        canvasHeight: availableHeightForCanvas,\n        width: availableWidthForCanvas - legendWidth,\n        height: availableHeightForCanvas - headerHeight - legendHeight,\n        minUnitHeight: context.minUnitHeight(),\n        minUnitWidth: context.minUnitWidth()\n    };\n    layoutConfig = mergeRecursive(layoutConfig, {\n        classPrefix,\n        showHeaders,\n        border: mergeRecursive(visGroup.metaData().border, context.config().border),\n        layoutArrangement,\n        legend,\n        buffer: scrollBar.thickness,\n        pagination,\n        title: titleConfig,\n        subtitle: subtitleConfig,\n        isColumnSizeEqual,\n        isRowSizeEqual,\n        mount,\n        priority\n    });\n    return {\n        layoutConfig,\n        components,\n        measurement\n    };\n};\n\nconst componentIndexes = {\n    title: 0,\n    subtitle: 1,\n    legend: 2,\n    verticalScrollBar: 3,\n    horizontalScrollBar: 4,\n    grid: 5\n};\n\nconst componentNames = {\n    0: TITLE,\n    1: SUB_TITLE,\n    2: LEGEND,\n    3: VERTICAL_SCROLL_BAR,\n    4: HORIZONTAL_SCROLL_BAR,\n    5: GRID\n};\n\n/**\n * Responsible for creating a scroll manager that manages interactions between the grid\n * component and the scroll bar components\n *\n * @param {Array} componentWrappers Contains the wrappers for all the components\n * @param {Canvas} canvas Instance of the current canvas\n * @return {Array} Positions of units either horizontal or vertical\n */\nconst createScrollManager = (componentWrappers, canvas) => {\n    const {\n        horizontalScrollBar,\n        verticalScrollBar,\n        grid\n    } = componentIndexes;\n\n    const horizontalScrollWrapper = componentWrappers[horizontalScrollBar];\n    const verticalScrollWrapper = componentWrappers[verticalScrollBar];\n    const gridWrapper = componentWrappers[grid];\n    const scrollBarManager = new ScrollManager();\n    const scrollBarComponents = {};\n\n    verticalScrollWrapper && (scrollBarComponents.vertical = verticalScrollWrapper);\n    horizontalScrollWrapper && (scrollBarComponents.horizontal = horizontalScrollWrapper);\n\n    scrollBarManager\n                    .scrollBarComponents(scrollBarComponents)\n                    .attachedComponents({\n                        grid: gridWrapper\n                    });\n    canvas.composition().hScrollBar = horizontalScrollWrapper;\n    canvas.composition().vScrollBar = verticalScrollWrapper;\n\n    [horizontalScrollWrapper, verticalScrollWrapper].forEach((wrapper) => {\n        wrapper && wrapper.manager(scrollBarManager);\n    });\n\n    gridWrapper.scrollBarManager(scrollBarManager);\n};\n\nexport const renderLayout = (canvas, renderDetails) => {\n    const layoutManager = canvas._layoutManager;\n    const gridLayout = canvas.layout();\n    const {\n\n        grid\n    } = componentIndexes;\n\n    // Get the component wrappers\n    const compWrappers = componentWrapperMaker(layoutManager, gridLayout, renderDetails);\n    const componentWrappers = Object.keys(componentIndexes).map(e => compWrappers[e]);\n    const gridWrapper = componentWrappers[grid];\n    createScrollManager(componentWrappers, canvas);\n\n    componentWrappers.forEach((componentWrapper, index) => {\n        if (componentWrapper === null) {\n            const deleteElementName = componentNames[index];\n            const component = layoutManager.getComponent(deleteElementName);\n            const deleteElementId = component ? component.renderAt() : null;\n            layoutManager.removeComponent(deleteElementId);\n        }\n    });\n    layoutManager.registerComponents(componentWrappers).compute();\n    gridWrapper.attachScrollListener();\n};\n\n","import {\n    getDataModelFromIdentifiers,\n    FieldType,\n    mergeRecursive,\n    isSimpleObject,\n    CommonProps\n} from 'muze-utils';\nimport { Firebolt } from '@chartshq/muze-firebolt';\n\nimport { applyInteractionPolicy } from '../helper';\n\nconst defaultInteractionPolicy = (valueMatrix, firebolt) => {\n    const isMeasure = field => field.type() === FieldType.MEASURE;\n    const canvas = firebolt.context;\n    const visualGroup = canvas.composition().visualGroup;\n    const xFields = [].concat(...visualGroup.getFieldsFromChannel('x'));\n    const yFields = [].concat(...visualGroup.getFieldsFromChannel('y'));\n    const colDim = xFields.every(field => field.type() === FieldType.DIMENSION);\n    const fieldInf = visualGroup.resolver().getAllFields();\n    const rowFacets = fieldInf.rowFacets;\n    const colFacets = fieldInf.colFacets;\n    valueMatrix.each((cell) => {\n        const unitFireBolt = cell.valueOf().firebolt();\n        if (!(xFields.every(isMeasure) && yFields.every(isMeasure))) {\n            const facetFields = cell.valueOf().facetByFields()[0];\n            const unitColFacets = facetFields.filter(d => colFacets.findIndex(v => v.equals(d)) !== -1);\n            const unitRowFacets = facetFields.filter(d => rowFacets.findIndex(v => v.equals(d)) !== -1);\n            let propFields;\n            if (colDim) {\n                propFields = unitColFacets.map(d => `${d}`);\n            } else {\n                propFields = unitRowFacets.map(d => `${d}`);\n            }\n\n            unitFireBolt.propagateWith('*', propFields, true);\n        }\n    });\n};\n\nconst defaultCrossInteractionPolicy = {\n    behaviours: {\n        '*': (propagationPayload, context) => {\n            const propagationCanvasAlias = propagationPayload.sourceCanvas;\n            const canvasAlias = context.parentAlias();\n            return propagationCanvasAlias ? canvasAlias === propagationCanvasAlias : true;\n        }\n    },\n    sideEffects: {\n        tooltip: (propagationPayload, context) => {\n            const propagationUnit = propagationPayload.sourceUnit;\n            const propagationCanvas = propagationPayload.sourceCanvas;\n            const unitId = context.id();\n            const canvasAlias = context.parentAlias();\n            if (propagationCanvas) {\n                return propagationCanvas !== canvasAlias ? true : unitId === propagationUnit;\n            }\n            return true;\n        }\n    }\n};\n\n/**\n * This class is responsible for dispatching any behavioural action to all the visual units housed by the canvas.\n * It is created by {@link Canvas}. This class does not handle any physical actions. Physical actions get triggered\n * in {@link VisualUnit} which is managed by it's own firebolt instance. The firebolt instance of canvas only\n * propagates the action to all the visual units in it's composition.\n *\n * To get the firebolt instance of {@link Canvas}\n * ```\n *  const firebolt = canvas.firebolt();\n * ```\n *\n * @class GroupFireBolt\n * @public\n */\nexport default class GroupFireBolt extends Firebolt {\n    constructor (...params) {\n        super(...params);\n        this._interactionPolicy = this.constructor.defaultInteractionPolicy();\n        this.crossInteractionPolicy(this.constructor.defaultCrossInteractionPolicy());\n    }\n\n    static defaultInteractionPolicy () {\n        return defaultInteractionPolicy;\n    }\n\n    static defaultCrossInteractionPolicy () {\n        return defaultCrossInteractionPolicy;\n    }\n\n    interactionPolicy (...policy) {\n        if (policy.length) {\n            this._interactionPolicy = policy[0] || this.constructor.defaultInteractionPolicy();\n            return this;\n        }\n        return this._interactionPolicy;\n    }\n\n    crossInteractionPolicy (...policy) {\n        if (policy.length) {\n            this._crossInteractionPolicy = mergeRecursive(mergeRecursive({},\n                this.constructor.defaultCrossInteractionPolicy()), policy[0] || {});\n            const context = this.context;\n            applyInteractionPolicy(this);\n            context._throwback.registerImmediateListener([CommonProps.MATRIX_CREATED], () => {\n                applyInteractionPolicy(this);\n            });\n            return this;\n        }\n        return this._crossInteractionPolicy;\n    }\n\n    /**\n     * Dispatches a behavioural action with a payload. It takes the name of the behavioural action and a payload\n     * object which contains the criteria aend an array of side effects which determines what side effects are\n     * going to be shown in each visual unit of the canvas. It prepares the datamodel from the given criteria\n     * and initiates a propagation from the datamodel of canvas. Then all the visual units of canvas which listens\n     * to the propagation gets informed on which rows got selected and dispatches the behavioural action sent during\n     * propagation.\n     *\n     * To dispatch a behavioural action on the canvas\n     * ```\n     *  // Get the firebolt instance of the canvas\n     *  const firebolt = canvas.firebolt();\n     *  // Dispatch a brush behaviour\n     *  firebolt.dispatchBehaviour('brush', {\n     *      // Selects all the rows with Horsepower having range between 100 and 200.\n     *      criteria: {\n     *          Horsepower: [100, 200]\n     *      }\n     *  });\n     * // On dispatch of this behavioural action, a selection box gets created and plots gets faded out which are the\n     * // default side effects mapped to this behavioural action.\n     * ```\n     *\n     * ```\n     * Additionally, it can also be passed an array of side effects in the payload.\n     *  // Dispatch a select behaviour with only crossline as side effect.\n     *  firebolt.dispatchBehaviour('select', {\n     *      criteria: {\n     *          Cylinders: ['8']\n     *      },\n     *      sideEffects: ['crossline']\n     *  });\n     * ```\n     *\n     * @public\n     *\n     * @param {string} behaviour Name of the behavioural action\n     * @param {Object} payload Object which contains the interaction information.\n     * @param {Object | Array.<Array>} payload.criteria Identifiers by which the selection happens.\n     * @param {Array.<string|Object>} payload.sideEffects Side effects which needs to be shown.\n     *\n     * @return {GroupFireBolt} Instance of firebolt.\n     */\n    dispatchBehaviour (behaviour, payload) {\n        const propPayload = Object.assign(payload);\n        const criteria = propPayload.criteria;\n        const data = this.context.composition().visualGroup.getGroupByData();\n        const fieldsConfig = data.getFieldsConfig();\n        const model = getDataModelFromIdentifiers(data, criteria);\n        const behaviouralAction = this._actions.behavioural[behaviour];\n\n        if (behaviouralAction) {\n            const fields = isSimpleObject(criteria) ? Object.keys(criteria) : (criteria ? criteria[0] : []);\n            const validFields = fields.filter(field => field in fieldsConfig);\n            const mutates = behaviouralAction.constructor.mutates();\n            const propConfig = {\n                payload: propPayload,\n                action: behaviour,\n                criteria: model,\n                sourceId: this.context.alias(),\n                isMutableAction: mutates,\n                propagateInterpolatedValues: validFields.every(field => fieldsConfig[field].def.type ===\n                    FieldType.MEASURE)\n            };\n            data.propagate(model, propConfig, true);\n        }\n        return this;\n    }\n\n    registerSideEffects (sideEffects) {\n        for (const key in sideEffects) {\n            this._sideEffectDefinitions[sideEffects[key].formalName()] = sideEffects[key];\n        }\n        return this;\n    }\n}\n","import GroupFireBolt from './group-firebolt';\n\nexport default GroupFireBolt;\n","export const APP_INITIAL_STATE = {\n    app: {\n        group: {},\n        units: {},\n        layers: {},\n        canvas: {}\n    },\n    local: {\n        canvas: {},\n        group: {},\n        units: {},\n        layers: {}\n    }\n};\n\n","import { GridLayout } from '@chartshq/layout';\nimport { transactor, Store, getUniqueId, selectElement, STATE_NAMESPACES, CommonProps } from 'muze-utils';\nimport { physicalActions, sideEffects, behaviouralActions, behaviourEffectMap } from '@chartshq/muze-firebolt';\nimport { RETINAL } from '../constants';\nimport TransactionSupport from '../transaction-support';\nimport { getRenderDetails, prepareLayout, renderLayout } from './layout-maker';\nimport { localOptions, canvasOptions } from './local-options';\nimport GroupFireBolt from './firebolt';\nimport options from '../options';\nimport { APP_INITIAL_STATE } from './app-state';\nimport { initCanvas,\n        setupChangeListener,\n        setLabelRotationForAxes,\n        createGroupState,\n        createLayoutManager,\n        setLayoutInfForUnits\n} from './helper';\n/**\n * Canvas is a logical component which houses a visualization by taking multiple variable in different encoding channel.\n * Canvas manages lifecycle of many other logical component and exposes one consistent interface for creation of chart.\n * Canvas is intialized from environment with settings from environment and singleton dependencies.\n *\n * To create an instance of canvas\n * ```\n *  const env = Muze();\n *  const canvas = env.canvas()\n * ```\n *\n *\n * @class\n * @public\n * @module Canvas\n */\nexport default class Canvas extends TransactionSupport {\n\n    /**\n     * Creates reactive property accessors.\n     * - data\n     * - height\n     * - width\n     * - config\n     * This configs are retrieved from options.\n     */\n    constructor (globalDependencies) {\n        super();\n\n        this._allOptions = Object.assign({}, options, localOptions);\n        this._registry = {};\n        this._composition = {};\n        this._cachedProps = {};\n        this._alias = null;\n        this._renderedResolve = null;\n        this._renderedPromise = new Promise((resolve) => {\n            this._renderedResolve = resolve;\n        });\n        this._composition.layout = new GridLayout();\n        this._store = new Store(APP_INITIAL_STATE);\n\n        this._throwback = new Store({\n            [CommonProps.MATRIX_CREATED]: false\n        });\n\n        // Setters and getters will be mounted on this. The object will be mutated.\n        const namespace = STATE_NAMESPACES.CANVAS_LOCAL_NAMESPACE;\n        const allOptions = Object.assign({}, options, localOptions, canvasOptions);\n\n        transactor(this, allOptions, this._store.model, {\n            namespace\n        });\n\n        this.dependencies(Object.assign({}, globalDependencies, this._dependencies));\n        this.firebolt(new GroupFireBolt(this, {\n            behavioural: behaviouralActions,\n            physical: physicalActions,\n            physicalBehaviouralMap: {}\n        }, sideEffects, behaviourEffectMap));\n        this.alias(`canvas-${getUniqueId()}`);\n        this.title('', {});\n        this.subtitle('', {});\n        this.legend({});\n        this.color({});\n        this.shape({});\n        this.size({});\n        setupChangeListener(this);\n         // init layoutManager\n        this._layoutManager = createLayoutManager();\n    }\n\n    /**\n     * Retrieves an instance of layout which is responsible for layouting. Layout is responsible for creating faceted\n     * presentation using table layout.\n     *\n     * @public\n     *\n     * @return {GridLayout} Instance of layout attached to canvas.\n     */\n    layout (...params) {\n        if (params.length) {\n            return this;\n        }\n        return this.composition().layout;\n    }\n\n    /**\n     * Retrieves the composition for a canvas\n     *\n     * @public\n     *\n     * @return {object} Instances of the components which canvas requires to draw the full visualization.\n     *      ```\n     *          {\n     *              layout: // Instance of {@link GridLayout}\n     *              legend: // Instance of {@link Legend}\n     *              subtitle: // Instance of {@link TextCell} using which the title is rendered\n     *              title: // Instance of {@link TextCell} using which the title is rendered\n     *              visualGroup: // Instance of {@link visualGroup}\n     *          }\n     *      ```\n     */\n    composition (...params) {\n        if (params.length) {\n            return this;\n        }\n        return this._composition;\n    }\n\n    done () {\n        return this._renderedPromise;\n    }\n\n    /**\n     * Sets or gets the alias of the canvas. Alias is a name by which the canvas can be referred.\n     *\n     * When setter\n     * @param {string} alias Name of the alias.\n     *\n     * @return {Canvas} Instance of the canvas.\n     *\n     * When getter\n     *\n     * @return {string} Alias of canvas.\n     *\n     * @public\n     */\n    alias (...params) {\n        if (params.length) {\n            const visualGroup = this.composition().visualGroup;\n            this._alias = params[0];\n            visualGroup && visualGroup.alias(this.alias());\n            return this;\n        }\n        return this._alias;\n    }\n\n    /**\n     * Creates an instance initiated with given settings.\n     *\n     * @param {Object} initialSettings Initial settings to be populated in the model\n     * @param {Object} regEntry newly created instance with the initial settings\n     * @param {Object} globalDependencies dependencies which will be created only once in the page\n     *\n     * @return {Object} newly created instance with the initial settings\n     */\n    static withSettings (initialSettings, regEntry, globalDependencies) {\n        const instance = new Canvas(globalDependencies);\n\n        for (const key in initialSettings) {\n            instance[key](initialSettings[key]);\n        }\n        // set registry for instance\n        instance.registry(regEntry);\n        return instance;\n    }\n\n    /**\n     *\n     *\n     * @static\n     *\n     * @memberof Canvas\n     */\n    static formalName () {\n        return 'canvas';\n    }\n\n    /**\n     * Returns the instance of firebolt associated with this canvas. The firebolt instance can be used to dispatch a\n     * behaviour dynamically on the canvas. This firebolt does not handle any physical actions. It is just used to\n     * propagate the action to all the visual units in it's composition.\n     *\n     * @public\n     *\n     * @return {GroupFireBolt} Instance of firebolt associated with canvas.\n     */\n    firebolt (...firebolt) {\n        if (firebolt.length) {\n            this._firebolt = firebolt[0];\n            return this;\n        }\n        return this._firebolt;\n    }\n\n    /**\n     * Registry peoperty accessor\n     *\n     * @param {Object} reg plain old javascript object keyvalue pairs. Key containing module name and value contains\n     * module definition class. The reg object has to be flat object of level 1.\n     */\n    registry (...params) {\n        if (params.length) {\n            const components = Object.assign({}, params[0].components);\n            const componentSubRegistry = Object.assign({}, params[0].componentSubRegistry);\n\n            this._registry = { components, componentSubRegistry };\n            const initedComponents = initCanvas(this);\n            // @todo is it okay to continue this tight behaviour? If not use a resolver to resolve diff component type.\n            this._composition.visualGroup = initedComponents[0];\n            createGroupState(this);\n            this.composition().visualGroup.alias(this.alias()).store(this._store);\n            return this;\n        }\n        return this._registry;\n    }\n\n    /*\n     * Prepare dependencies for top level elements\n     */\n    dependencies (...param) {\n        if (param.length) {\n            this._dependencies = param[0];\n            return this;\n        }\n        // @todo prepare dependencies here.\n        return this._dependencies;\n    }\n\n    /**\n     *\n     *\n     * @param {*} lifeCycles\n     *\n     * @memberof Canvas\n     */\n    lifeCycle (lifeCycles) {\n        const lifeCycleManager = this.dependencies().lifeCycleManager;\n        if (lifeCycles) {\n            lifeCycleManager.register(lifeCycles);\n            return this;\n        }\n        return lifeCycleManager;\n    }\n\n    /**\n     *\n     *\n     * @readonly\n     * @memberof Canvas\n     */\n    legend (...params) {\n        if (params.length) {\n            return this;\n        }\n        return this.composition().legend;\n    }\n\n    /**\n     * Returns a promise for various {@link LifecycleEvents} of the various components of canvas. The promise gets\n     * resolved once the particular event gets completed.\n     *\n     * To use this,\n     * ```\n     *      canvas.once('layer.drawn').then(() => {\n     *          // Do any post drawing work here.\n     *      });\n     * ```\n     * @public\n     *\n     * @param {string} eventName Name of the lifecycle event.\n     *\n     * @return {Promise} A pending promise waiting for resolve to be called.\n     */\n    once (eventName) {\n        const lifeCycleManager = this.dependencies().lifeCycleManager;\n        return lifeCycleManager.retrieve(eventName);\n    }\n\n    /**\n     * Internal function to trigger render, this method is cognizant of all the properties of the core modules and\n     * establish a passive reactivity. Passive reactivity is not always a bad thing :)\n     * @internal\n     */\n    render () {\n        const mount = this.mount();\n        // removeChild(mount);\n        const lifeCycleManager = this.dependencies().lifeCycleManager;\n        // Get render details including arrangement and measurement\n        const renderDetails = getRenderDetails(this, mount);\n        lifeCycleManager.notify({ client: this, action: 'beforedraw' });\n        // Prepare the layout by triggering the matrix calculation\n        prepareLayout(this.layout(), renderDetails);\n\n        this._layoutManager.dimension({\n            height: renderDetails.measurement.canvasHeight,\n            width: renderDetails.measurement.canvasWidth\n        });\n\n        this._layoutManager.renderAt(mount);\n\n        // Render each component\n        renderLayout(this, renderDetails);\n\n        setLayoutInfForUnits(this);\n\n        // setLabelRotation\n        setLabelRotationForAxes(this);\n    }\n\n    /**\n     * Returns the instances of x axis of the canvas. It returns the instances in a two dimensional array form.\n     *\n     * ```\n     *   // The first element in the sub array represents the top axis and the second element represents the bottom\n     *   // axis.\n     *   [\n     *      [X1, X2],\n     *      [X3, X4]\n     *   ]\n     * ```\n     * @public\n     *\n     * @return {Array.<Array>} Instances of x axis.\n     */\n    xAxes () {\n        return this.composition().visualGroup.getAxes('x');\n    }\n\n    /**\n     * Returns the instances of y axis of the canvas. It returns the instances in a two dimensional array form.\n     *\n     * ```\n     *   // The first element in the sub array represents the left axis and the second element represents the right\n     *   // axis.\n     *   [\n     *      [Y1, Y2],\n     *      [Y3, Y4]\n     *   ]\n     * ```\n     * @public\n     * @return {Array.<Array>} Instances of y axis.\n     */\n    yAxes () {\n        return this.composition().visualGroup.getAxes('y');\n    }\n\n    /**\n     * Returns all the retinal axis of the canvas. Color, shape and size axis are combinedly called retinal axis.\n     *\n     * @public\n     * @return {Object} Instances of retinal axis.\n     *          ```\n     *              {\n     *                  color: [ColorAxis], // Array of color axis.\n     *                  shape: [ShapeAxis], // Array of shape axis.\n     *                  size: [SizeAxis] // Array of size axis.\n     *              }\n     *          ```\n     */\n    getRetinalAxes () {\n        const visualGroup = this.composition().visualGroup;\n        return visualGroup.getAxes(RETINAL);\n    }\n\n    mount (...params) {\n        if (params.length) {\n            let value = params[0];\n            if (typeof params[0] === 'string') {\n                value = selectElement(params[0]).node();\n            }\n            this._mount = value;\n            return this;\n        }\n        return this._mount;\n    }\n}\n","import { cellRegistry, SimpleCell } from '@chartshq/visual-cell';\nimport { VisualUnit } from '@chartshq/visual-unit';\nimport { layerRegistry } from '@chartshq/visual-layer';\nimport { SimpleGroup, VisualGroup } from '@chartshq/visual-group';\n\nexport const COMPONENTS = {\n    VisualGroup,\n    VisualUnit\n};\nexport const SUBREGISTRIES = {\n    cellRegistry,\n    layerRegistry\n};\nexport const INTERFACES = {\n    SimpleGroup,\n    SimpleCell\n};\n\n","import { DEFAULT_LAYERS } from './defaults';\n\nexport default () => {\n    const reg = DEFAULT_LAYERS;\n    const regObj = {\n        set: (key, def) => {\n            reg[key] = def;\n            return regObj;\n        },\n        get: () => reg\n    };\n    return regObj;\n};\n","import {\n    transactor,\n    Smartlabel,\n    enableChainedTransaction,\n    LifeCycleManager,\n    DataModel,\n    makeElement,\n    getClientPoint,\n    selectElement,\n    getEvent,\n    require,\n    DateTimeFormatter\n} from 'muze-utils';\n\nimport {\n    SurrogateSideEffect,\n    SpawnableSideEffect,\n    sideEffects,\n    PersistentBehaviour,\n    GenericBehaviour,\n    VolatileBehaviour,\n    behaviouralActions,\n    GenericSideEffect\n} from '@chartshq/muze-firebolt';\nimport { layerFactory } from '@chartshq/visual-layer';\nimport pkg from '../package.json';\nimport * as operators from './operators';\nimport { actionModel as ActionModel } from './action-model';\nimport options from './options';\nimport { Canvas } from './canvas';\nimport { COMPONENTS, SUBREGISTRIES } from './default-registry';\nimport './muze.scss';\n\n// Cache singleton instances which should be included only once in a page\nconst globalCache = {};\nconst defaultRegistry = COMPONENTS;\n\nconst overrideRegistryDefinitions = (overrideRegistry, registry) => {\n    for (const prop in overrideRegistry) {\n        registry.set(prop, overrideRegistry[prop]);\n    }\n};\n\n/**\n * Entry point to renderer. Initializes an environment with settings and registries for canvas. This is a simple wrapper\n * over {@link Canvas} which enables common configuration passing to multiple such canvases.\n *\n * Everytime `muze()` is called it creates an environment. These environment supports subset of APIs of Canvas. If\n * common configuration is used to render multiple canvases then it can be set directly in the env. Like if data is\n * common across all the visulization then its better to set the data in env. When a canvas is created it receives all\n * those configuration from env.\n *\n * ```\n *  // Creates an environment\n *  const env = muze()\n *  // Set data property in environment, so that all the canvas created from the same environment gets this data\n *  // automatically\n *  env.data(dm);\n *  // Creates canvas, by default env pushes data to canvas instance\n *  const canvas = env.canvas();\n * ```\n *\n * If a property is set on both environment and canvas instance, property set on canvas instance gets more priority.\n *\n * @public\n * @module muze\n * @namespace Muze\n *\n * @return {Env} Instance of an environment\n */\nconst muze = () => {\n    // Setters and getters will be mounted on this. Object will be mutated.\n    const [env, globalStore] = transactor({}, options);\n    const components = Object.assign({}, COMPONENTS);\n    const componentSubRegistryDef = Object.assign(SUBREGISTRIES);\n    const componentSubRegistry = {};\n\n    for (const prop in componentSubRegistryDef) {\n        componentSubRegistry[prop] = componentSubRegistryDef[prop]();\n    }\n\n    // Apart form the setter getter, an instance method is injected to create real renderer instances\n    env.canvas = () => {\n        // Create a canvas instance with this settings\n        const settings = globalStore.serialize();\n        const canvas = Canvas.withSettings(settings, { /* registry */\n            components,\n            componentSubRegistry\n        }, env.globalDependencies());\n\n        // Whenever settings is changed canvas is updated\n        enableChainedTransaction(globalStore, canvas, Object.keys(settings));\n\n        return canvas;\n    };\n\n    // Global dependencies for for compositions. Only one copy of the same should be in the page\n    env.globalDependencies = () => {\n        if (!globalCache.smartlabel) {\n            globalCache.smartlabel = new Smartlabel(1, 'body');\n        }\n        return {\n            smartlabel: globalCache.smartlabel,\n            lifeCycleManager: new LifeCycleManager()\n        };\n    };\n\n    // Retrieves global settings. This getter is readonly so that user can't change this as change should happen\n    // only from setter to avoid unwanted sync issues.\n    env.settings = () => globalStore.serialize();\n\n    env.registry = (...overrideRegistry) => {\n        // Selectively copy the properties from COMPONENTS\n        if (overrideRegistry.length) {\n            for (const prop in overrideRegistry) {\n                if (prop in defaultRegistry) {\n                    components[prop] = overrideRegistry[prop];\n                }\n            }\n            return env;\n        }\n        return components;\n    };\n\n    env.cellRegistry = (...overrideRegistry) => {\n        const cellRegistry = componentSubRegistry.cellRegistry;\n        if (overrideRegistry.length) {\n            overrideRegistryDefinitions(overrideRegistry[0], cellRegistry);\n            return env;\n        }\n        return cellRegistry.get();\n    };\n\n    env.layerRegistry = (...overrideRegistry) => {\n        const layerRegistry = componentSubRegistry.layerRegistry;\n        if (overrideRegistry.length) {\n            overrideRegistryDefinitions(overrideRegistry[0], layerRegistry);\n            return env;\n        }\n        return layerRegistry.get();\n    };\n\n    return env;\n};\n\nconst SideEffects = {\n    sideEffects,\n    standards: {\n        SurrogateSideEffect,\n        SpawnableSideEffect,\n        GenericSideEffect\n    }\n};\n\nconst Behaviours = {\n    behaviouralActions,\n    standards: {\n        GenericBehaviour,\n        PersistentBehaviour,\n        VolatileBehaviour\n    }\n};\n\nmuze.DataModel = DataModel;\nmuze.version = pkg.version;\nmuze.SideEffects = SideEffects;\nmuze.ActionModel = ActionModel;\nmuze.layerFactory = layerFactory;\nmuze.Operators = operators;\nmuze.Behaviours = Behaviours;\nmuze.utils = {\n    getClientPoint,\n    getEvent,\n    makeElement,\n    selectElement,\n    DateTimeFormatter,\n    require\n};\n\nexport default muze;\n"],"sourceRoot":""}