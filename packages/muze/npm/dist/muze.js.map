{"version":3,"sources":["webpack://muze/webpack/universalModuleDefinition","webpack://muze/webpack/bootstrap","webpack://muze/webpack://DataModel/webpack/universalModuleDefinition","webpack://muze/webpack://DataModel/webpack/bootstrap","webpack://muze/webpack://DataModel/src/index.js","webpack://muze/webpack://DataModel/src/enums/data-format.js","webpack://muze/webpack://DataModel/src/enums/dimension-subtype.js","webpack://muze/webpack://DataModel/src/enums/measure-subtype.js","webpack://muze/webpack://DataModel/src/enums/field-type.js","webpack://muze/webpack://DataModel/src/enums/filtering-mode.js","webpack://muze/webpack://DataModel/src/utils/date-time-formatter.js","webpack://muze/webpack://DataModel/src/utils/column-major.js","webpack://muze/webpack://DataModel/src/utils/extend2.js","webpack://muze/webpack://DataModel/src/utils/helper.js","webpack://muze/webpack://DataModel/src/field-store.js","webpack://muze/webpack://DataModel/src/value.js","webpack://muze/webpack://DataModel/src/operator/row-diffset-iterator.js","webpack://muze/webpack://DataModel/src/invalid-aware-types.js","webpack://muze/webpack://DataModel/src/constants/index.js","webpack://muze/webpack://DataModel/src/operator/get-common-schema.js","webpack://muze/webpack://DataModel/src/operator/cross-product.js","webpack://muze/webpack://DataModel/src/operator/merge-sort.js","webpack://muze/webpack://DataModel/src/operator/data-builder.js","webpack://muze/webpack://DataModel/src/operator/difference.js","webpack://muze/webpack://DataModel/src/operator/group-by-function.js","webpack://muze/webpack://DataModel/src/utils/reducer-store.js","webpack://muze/webpack://DataModel/src/operator/natural-join-filter-function.js","webpack://muze/webpack://DataModel/src/operator/union.js","webpack://muze/webpack://DataModel/src/operator/outer-join.js","webpack://muze/webpack://DataModel/src/fields/field/index.js","webpack://muze/webpack://DataModel/src/fields/dimension/index.js","webpack://muze/webpack://DataModel/src/fields/categorical/index.js","webpack://muze/webpack://DataModel/src/fields/temporal/index.js","webpack://muze/webpack://DataModel/src/fields/binned/index.js","webpack://muze/webpack://DataModel/src/fields/measure/index.js","webpack://muze/webpack://DataModel/src/fields/continuous/index.js","webpack://muze/webpack://DataModel/src/fields/parsers/field-parser/index.js","webpack://muze/webpack://DataModel/src/fields/parsers/categorical-parser/index.js","webpack://muze/webpack://DataModel/src/fields/parsers/temporal-parser/index.js","webpack://muze/webpack://DataModel/src/fields/parsers/binned-parser/index.js","webpack://muze/webpack://DataModel/src/fields/parsers/continuous-parser/index.js","webpack://muze/webpack://DataModel/src/fields/partial-field/index.js","webpack://muze/webpack://DataModel/src/field-creator.js","webpack://muze/webpack://DataModel/src/default-config.js","webpack://muze/webpack://DataModel/src/converter/dsv-arr.js","webpack://muze/webpack://DataModel/node_modules/d3-dsv/src/dsv.js","webpack://muze/webpack://DataModel/node_modules/d3-dsv/src/csv.js","webpack://muze/webpack://DataModel/node_modules/d3-dsv/src/tsv.js","webpack://muze/webpack://DataModel/src/converter/dsv-str.js","webpack://muze/webpack://DataModel/src/converter/flat-json.js","webpack://muze/webpack://DataModel/src/converter/auto-resolver.js","webpack://muze/webpack://DataModel/src/helper.js","webpack://muze/webpack://DataModel/src/relation.js","webpack://muze/webpack://DataModel/src/datamodel.js","webpack://muze/webpack://DataModel/src/operator/group-by.js","webpack://muze/webpack://DataModel/src/operator/bucket-creator.js","webpack://muze/webpack://DataModel/src/stats/index.js","webpack://muze/webpack://DataModel/src/export.js","webpack://muze/webpack://DataModel/src/operator/compose.js","webpack://muze/webpack://DataModel/src/operator/pure-operators.js","webpack://muze/webpack://DataModel/src/operator/natural-join.js","webpack://muze/webpack://hyperdis/webpack/universalModuleDefinition","webpack://muze/webpack://hyperdis/webpack/bootstrap","webpack://muze/webpack://hyperdis/src/utils/set.js","webpack://muze/webpack://hyperdis/src/utils/index.js","webpack://muze/webpack://hyperdis/src/graph-node.js","webpack://muze/webpack://hyperdis/src/electric-node.js","webpack://muze/webpack://hyperdis/src/graph.js","webpack://muze/webpack://hyperdis/src/model.js","webpack://muze/webpack://hyperdis/src/index.js","webpack://muze/(webpack)/buildin/module.js","webpack://muze/./packages/muze-utils/node_modules/fusioncharts-smartlabel/lib/SmartlabelManager.js","webpack://muze/./packages/muze-utils/node_modules/fusioncharts-smartlabel/lib/lib.js","webpack://muze/./packages/muze/src/index.js","webpack://muze/./packages/muze-utils/node_modules/fusioncharts-smartlabel/lib/container-manager.js","webpack://muze/./packages/muze-utils/node_modules/d3-array/src/ascending.js","webpack://muze/./packages/muze-utils/node_modules/d3-array/src/bisector.js","webpack://muze/./packages/muze-utils/node_modules/d3-array/src/bisect.js","webpack://muze/./packages/muze-utils/node_modules/d3-array/src/cross.js","webpack://muze/./packages/muze-utils/node_modules/d3-array/src/number.js","webpack://muze/./packages/muze-utils/node_modules/d3-array/src/array.js","webpack://muze/./packages/muze-utils/node_modules/d3-array/src/range.js","webpack://muze/./packages/muze-utils/node_modules/d3-array/src/ticks.js","webpack://muze/./packages/muze-utils/node_modules/d3-array/src/threshold/sturges.js","webpack://muze/./packages/muze-utils/node_modules/d3-array/src/quantile.js","webpack://muze/./packages/muze-utils/node_modules/d3-collection/src/map.js","webpack://muze/./packages/muze-utils/node_modules/d3-collection/src/nest.js","webpack://muze/./packages/muze-utils/node_modules/d3-collection/src/set.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale/src/array.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale/src/ordinal.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale/src/band.js","webpack://muze/./packages/muze-utils/node_modules/d3-color/src/define.js","webpack://muze/./packages/muze-utils/node_modules/d3-color/src/color.js","webpack://muze/./packages/muze-utils/node_modules/d3-color/src/math.js","webpack://muze/./packages/muze-utils/node_modules/d3-color/src/lab.js","webpack://muze/./packages/muze-utils/node_modules/d3-color/src/cubehelix.js","webpack://muze/./packages/muze-utils/node_modules/d3-interpolate/src/basis.js","webpack://muze/./packages/muze-utils/node_modules/d3-interpolate/src/constant.js","webpack://muze/./packages/muze-utils/node_modules/d3-interpolate/src/color.js","webpack://muze/./packages/muze-utils/node_modules/d3-interpolate/src/rgb.js","webpack://muze/./packages/muze-utils/node_modules/d3-interpolate/src/number.js","webpack://muze/./packages/muze-utils/node_modules/d3-interpolate/src/basisClosed.js","webpack://muze/./packages/muze-utils/node_modules/d3-interpolate/src/object.js","webpack://muze/./packages/muze-utils/node_modules/d3-interpolate/src/string.js","webpack://muze/./packages/muze-utils/node_modules/d3-interpolate/src/value.js","webpack://muze/./packages/muze-utils/node_modules/d3-interpolate/src/transform/parse.js","webpack://muze/./packages/muze-utils/node_modules/d3-interpolate/src/date.js","webpack://muze/./packages/muze-utils/node_modules/d3-interpolate/src/array.js","webpack://muze/./packages/muze-utils/node_modules/d3-interpolate/src/round.js","webpack://muze/./packages/muze-utils/node_modules/d3-interpolate/src/transform/decompose.js","webpack://muze/./packages/muze-utils/node_modules/d3-interpolate/src/transform/index.js","webpack://muze/./packages/muze-utils/node_modules/d3-interpolate/src/zoom.js","webpack://muze/./packages/muze-utils/node_modules/d3-interpolate/src/hsl.js","webpack://muze/./packages/muze-utils/node_modules/d3-interpolate/src/hcl.js","webpack://muze/./packages/muze-utils/node_modules/d3-interpolate/src/cubehelix.js","webpack://muze/./packages/muze-utils/node_modules/d3-interpolate/src/piecewise.js","webpack://muze/./packages/muze-utils/node_modules/d3-interpolate/src/quantize.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale/src/constant.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale/src/number.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale/src/continuous.js","webpack://muze/./packages/muze-utils/node_modules/d3-format/src/formatDecimal.js","webpack://muze/./packages/muze-utils/node_modules/d3-format/src/exponent.js","webpack://muze/./packages/muze-utils/node_modules/d3-format/src/formatSpecifier.js","webpack://muze/./packages/muze-utils/node_modules/d3-format/src/formatTrim.js","webpack://muze/./packages/muze-utils/node_modules/d3-format/src/formatPrefixAuto.js","webpack://muze/./packages/muze-utils/node_modules/d3-format/src/defaultLocale.js","webpack://muze/./packages/muze-utils/node_modules/d3-format/src/formatRounded.js","webpack://muze/./packages/muze-utils/node_modules/d3-format/src/formatTypes.js","webpack://muze/./packages/muze-utils/node_modules/d3-format/src/identity.js","webpack://muze/./packages/muze-utils/node_modules/d3-format/src/locale.js","webpack://muze/./packages/muze-utils/node_modules/d3-format/src/formatGroup.js","webpack://muze/./packages/muze-utils/node_modules/d3-format/src/formatNumerals.js","webpack://muze/./packages/muze-utils/node_modules/d3-format/src/precisionFixed.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale/src/tickFormat.js","webpack://muze/./packages/muze-utils/node_modules/d3-format/src/precisionPrefix.js","webpack://muze/./packages/muze-utils/node_modules/d3-format/src/precisionRound.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale/src/linear.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale/src/identity.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale/src/nice.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale/src/log.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale/src/pow.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale/src/quantile.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale/src/quantize.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale/src/threshold.js","webpack://muze/./packages/muze-utils/node_modules/d3-time/src/interval.js","webpack://muze/./packages/muze-utils/node_modules/d3-time/src/millisecond.js","webpack://muze/./packages/muze-utils/node_modules/d3-time/src/duration.js","webpack://muze/./packages/muze-utils/node_modules/d3-time/src/second.js","webpack://muze/./packages/muze-utils/node_modules/d3-time/src/minute.js","webpack://muze/./packages/muze-utils/node_modules/d3-time/src/hour.js","webpack://muze/./packages/muze-utils/node_modules/d3-time/src/day.js","webpack://muze/./packages/muze-utils/node_modules/d3-time/src/week.js","webpack://muze/./packages/muze-utils/node_modules/d3-time/src/month.js","webpack://muze/./packages/muze-utils/node_modules/d3-time/src/year.js","webpack://muze/./packages/muze-utils/node_modules/d3-time/src/utcMinute.js","webpack://muze/./packages/muze-utils/node_modules/d3-time/src/utcHour.js","webpack://muze/./packages/muze-utils/node_modules/d3-time/src/utcDay.js","webpack://muze/./packages/muze-utils/node_modules/d3-time/src/utcWeek.js","webpack://muze/./packages/muze-utils/node_modules/d3-time/src/utcMonth.js","webpack://muze/./packages/muze-utils/node_modules/d3-time/src/utcYear.js","webpack://muze/./packages/muze-utils/node_modules/d3-time-format/src/locale.js","webpack://muze/./packages/muze-utils/node_modules/d3-time-format/src/defaultLocale.js","webpack://muze/./packages/muze-utils/node_modules/d3-time-format/src/isoFormat.js","webpack://muze/./packages/muze-utils/node_modules/d3-time-format/src/isoParse.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale/src/time.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale/src/colors.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale/src/category10.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale/src/category20b.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale/src/category20.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale/src/category20c.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale/src/cubehelix.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale/src/rainbow.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale/src/viridis.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale/src/sequential.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/colors.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/categorical/Accent.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/categorical/category10.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/categorical/Dark2.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/categorical/Paired.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/categorical/Pastel1.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/categorical/Pastel2.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/categorical/Set1.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/categorical/Set2.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/categorical/Set3.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/ramp.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/diverging/BrBG.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/diverging/PRGn.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/diverging/PiYG.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/diverging/PuOr.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/diverging/RdBu.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/diverging/RdGy.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/diverging/RdYlBu.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/diverging/RdYlGn.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/diverging/Spectral.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/sequential-multi/BuGn.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/sequential-multi/BuPu.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/sequential-multi/GnBu.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/sequential-multi/OrRd.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/sequential-multi/PuBuGn.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/sequential-multi/PuBu.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/sequential-multi/PuRd.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/sequential-multi/RdPu.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/sequential-multi/YlGnBu.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/sequential-multi/YlGn.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/sequential-multi/YlOrBr.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/sequential-multi/YlOrRd.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/sequential-single/Blues.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/sequential-single/Greens.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/sequential-single/Greys.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/sequential-single/Purples.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/sequential-single/Reds.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/sequential-single/Oranges.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/sequential-multi/cubehelix.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/sequential-multi/rainbow.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/sequential-multi/sinebow.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/sequential-multi/viridis.js","webpack://muze/./packages/muze-utils/src/enums/namespace.js","webpack://muze/./packages/muze-utils/src/enums/reserved-fields.js","webpack://muze/./packages/muze-utils/src/enums/common-props.js","webpack://muze/./packages/muze-utils/node_modules/d3-axis/src/array.js","webpack://muze/./packages/muze-utils/node_modules/d3-axis/src/identity.js","webpack://muze/./packages/muze-utils/node_modules/d3-axis/src/axis.js","webpack://muze/./packages/muze-utils/node_modules/d3-path/src/path.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/constant.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/math.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/arc.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/curve/linear.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/point.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/line.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/area.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/descending.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/identity.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/curve/radial.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/lineRadial.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/array.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/symbol/circle.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/symbol/cross.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/symbol/diamond.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/symbol/star.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/symbol/square.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/symbol/triangle.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/symbol/wye.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/noop.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/curve/basis.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/curve/basisClosed.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/curve/basisOpen.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/curve/bundle.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/curve/cardinal.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/curve/cardinalClosed.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/curve/cardinalOpen.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/curve/catmullRom.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/curve/catmullRomClosed.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/curve/catmullRomOpen.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/curve/linearClosed.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/curve/monotone.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/curve/natural.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/curve/step.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/offset/none.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/order/none.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/stack.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/order/ascending.js","webpack://muze/./packages/muze-utils/node_modules/d3-ease/src/cubic.js","webpack://muze/./packages/muze-utils/node_modules/d3-ease/src/poly.js","webpack://muze/./packages/muze-utils/node_modules/d3-ease/src/sin.js","webpack://muze/./packages/muze-utils/node_modules/d3-ease/src/bounce.js","webpack://muze/./packages/muze-utils/node_modules/d3-ease/src/back.js","webpack://muze/./packages/muze-utils/node_modules/d3-ease/src/elastic.js","webpack://muze/./packages/muze-utils/node_modules/d3-voronoi/src/constant.js","webpack://muze/./packages/muze-utils/node_modules/d3-voronoi/src/point.js","webpack://muze/./packages/muze-utils/node_modules/d3-voronoi/src/RedBlackTree.js","webpack://muze/./packages/muze-utils/node_modules/d3-voronoi/src/Edge.js","webpack://muze/./packages/muze-utils/node_modules/d3-voronoi/src/Cell.js","webpack://muze/./packages/muze-utils/node_modules/d3-voronoi/src/Circle.js","webpack://muze/./packages/muze-utils/node_modules/d3-voronoi/src/Beach.js","webpack://muze/./packages/muze-utils/node_modules/d3-voronoi/src/Diagram.js","webpack://muze/./packages/muze-utils/node_modules/d3-voronoi/src/voronoi.js","webpack://muze/./packages/muze-utils/src/DataSystem/selection.js","webpack://muze/./packages/muze-utils/src/common-utils.js","webpack://muze/./packages/muze-utils/node_modules/d3-ease/src/linear.js","webpack://muze/./packages/muze-utils/node_modules/d3-ease/src/circle.js","webpack://muze/./packages/muze-utils/src/DataSystem/dataSelect.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/symbol.js","webpack://muze/./packages/muze-utils/src/enums/stack-config.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/order/descending.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/offset/diverging.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/offset/expand.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/offset/wiggle.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/pie.js","webpack://muze/./packages/muze-utils/src/enums/constants.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/namespaces.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/namespace.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/creator.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selector.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selectorAll.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/matcher.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/sparse.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/enter.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/constant.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/data.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/sort.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/attr.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/window.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/style.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/classed.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/text.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/html.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/raise.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/lower.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/insert.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/remove.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/clone.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/on.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/dispatch.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/index.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/select.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/selectAll.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/filter.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/exit.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/merge.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/order.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/call.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/nodes.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/node.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/size.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/empty.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/each.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/property.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/append.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/datum.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/select.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/local.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/sourceEvent.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/point.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/mouse.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/touch.js","webpack://muze/./packages/muze-utils/node_modules/d3-dispatch/src/dispatch.js","webpack://muze/./packages/muze-utils/node_modules/d3-drag/src/noevent.js","webpack://muze/./packages/muze-utils/node_modules/d3-drag/src/nodrag.js","webpack://muze/./packages/muze-utils/node_modules/d3-drag/src/constant.js","webpack://muze/./packages/muze-utils/node_modules/d3-drag/src/event.js","webpack://muze/./packages/muze-utils/node_modules/d3-drag/src/drag.js","webpack://muze/./packages/muze-utils/node_modules/d3-timer/src/timer.js","webpack://muze/./packages/muze-utils/node_modules/d3-timer/src/timeout.js","webpack://muze/./packages/muze-utils/node_modules/d3-transition/src/transition/schedule.js","webpack://muze/./packages/muze-utils/node_modules/d3-transition/src/transition/tween.js","webpack://muze/./packages/muze-utils/node_modules/d3-transition/src/transition/interpolate.js","webpack://muze/./packages/muze-utils/node_modules/d3-transition/src/transition/remove.js","webpack://muze/./packages/muze-utils/node_modules/d3-transition/src/transition/selection.js","webpack://muze/./packages/muze-utils/node_modules/d3-transition/src/transition/text.js","webpack://muze/./packages/muze-utils/node_modules/d3-transition/src/transition/index.js","webpack://muze/./packages/muze-utils/node_modules/d3-transition/src/transition/select.js","webpack://muze/./packages/muze-utils/node_modules/d3-transition/src/transition/selectAll.js","webpack://muze/./packages/muze-utils/node_modules/d3-transition/src/transition/filter.js","webpack://muze/./packages/muze-utils/node_modules/d3-transition/src/transition/merge.js","webpack://muze/./packages/muze-utils/node_modules/d3-transition/src/transition/transition.js","webpack://muze/./packages/muze-utils/node_modules/d3-transition/src/transition/on.js","webpack://muze/./packages/muze-utils/node_modules/d3-transition/src/transition/attr.js","webpack://muze/./packages/muze-utils/node_modules/d3-transition/src/transition/attrTween.js","webpack://muze/./packages/muze-utils/node_modules/d3-transition/src/transition/style.js","webpack://muze/./packages/muze-utils/node_modules/d3-transition/src/transition/styleTween.js","webpack://muze/./packages/muze-utils/node_modules/d3-transition/src/transition/delay.js","webpack://muze/./packages/muze-utils/node_modules/d3-transition/src/transition/duration.js","webpack://muze/./packages/muze-utils/node_modules/d3-transition/src/transition/ease.js","webpack://muze/./packages/muze-utils/node_modules/d3-transition/src/selection/transition.js","webpack://muze/./packages/muze-utils/node_modules/d3-transition/src/selection/index.js","webpack://muze/./packages/muze-utils/node_modules/d3-transition/src/selection/interrupt.js","webpack://muze/./packages/muze-utils/node_modules/d3-transition/src/interrupt.js","webpack://muze/./packages/muze-utils/src/renderer-utils.js","webpack://muze/./packages/muze-utils/src/lifecycle-manager/event-list.js","webpack://muze/./packages/muze-utils/src/lifecycle-manager/lifecycle-manager.js","webpack://muze/./packages/muze-utils/src/lifecycle-manager/index.js","webpack://muze/./packages/muze-utils/src/lifecycle-manager/helper.js","webpack://muze/./packages/muze-utils/src/index.js","webpack://muze/./packages/muze-firebolt/src/enums/actions.js","webpack://muze/./packages/muze-firebolt/src/enums/selection.js","webpack://muze/./packages/muze-firebolt/src/selection-set/index.js","webpack://muze/./packages/muze-firebolt/src/selection-set/selection-set.js","webpack://muze/./packages/muze-firebolt/src/helper/index.js","webpack://muze/./packages/muze-firebolt/src/firebolt.js","webpack://muze/./packages/muze-firebolt/src/actions/behavioural/generic.js","webpack://muze/./packages/muze-firebolt/src/actions/behavioural/volatile.js","webpack://muze/./packages/muze-firebolt/src/enums/behaviours.js","webpack://muze/./packages/muze-firebolt/src/actions/behavioural/highlight.js","webpack://muze/./packages/muze-firebolt/src/actions/behavioural/brush.js","webpack://muze/./packages/muze-firebolt/src/actions/behavioural/filter.js","webpack://muze/./packages/muze-firebolt/src/actions/behavioural/persistent.js","webpack://muze/./packages/muze-firebolt/src/actions/behavioural/select.js","webpack://muze/./packages/muze-firebolt/src/actions/physical/helpers/drag-action-config.js","webpack://muze/./packages/muze-firebolt/src/actions/physical/helpers/drag-event.js","webpack://muze/./packages/muze-firebolt/src/actions/physical/hover.js","webpack://muze/./packages/muze-firebolt/src/enums/constants.js","webpack://muze/./packages/muze-firebolt/src/actions/physical/helpers/index.js","webpack://muze/./packages/muze-firebolt/src/actions/physical/click.js","webpack://muze/./packages/muze-firebolt/src/actions/physical/index.js","webpack://muze/./packages/muze-firebolt/src/actions/physical/drag.js","webpack://muze/./packages/muze-firebolt/src/actions/physical/longtouch.js","webpack://muze/./packages/muze-firebolt/src/actions/physical/touch-drag.js","webpack://muze/./packages/muze-firebolt/src/side-effects/generic/props.js","webpack://muze/./packages/muze-firebolt/src/side-effects/generic/index.js","webpack://muze/./packages/muze-firebolt/src/side-effects/generic/generic-sideeffect.js","webpack://muze/./packages/muze-firebolt/src/side-effects/surrogate.js","webpack://muze/./packages/muze-firebolt/src/side-effects/spawnable.js","webpack://muze/./packages/muze-firebolt/src/side-effects/selection-box/helper.js","webpack://muze/./packages/muze-firebolt/src/side-effects/selection-box/index.js","webpack://muze/./packages/muze-firebolt/src/actions/physical/selection-box-drag.js","webpack://muze/./packages/muze-tooltip/src/constants.js","webpack://muze/./packages/muze-tooltip/src/default-config.js","webpack://muze/./packages/muze-tooltip/src/helper.js","webpack://muze/./packages/muze-tooltip/src/strategy.js","webpack://muze/./packages/muze-tooltip/src/content.js","webpack://muze/./packages/muze-tooltip/src/tooltip.js","webpack://muze/./packages/muze-firebolt/src/side-effects/tooltip/strategies.js","webpack://muze/./packages/muze-firebolt/src/side-effects/tooltip/index.js","webpack://muze/./packages/muze-firebolt/src/side-effects/helper/index.js","webpack://muze/./packages/muze-firebolt/src/side-effects/crossline/index.js","webpack://muze/./packages/muze-firebolt/src/side-effects/plot-highlighter/strategy.js","webpack://muze/./packages/muze-firebolt/src/side-effects/plot-highlighter/index.js","webpack://muze/./packages/muze-firebolt/src/side-effects/filter/index.js","webpack://muze/./packages/muze-firebolt/src/side-effects/anchors/index.js","webpack://muze/./packages/muze-firebolt/src/side-effects/persistent-anchors.js","webpack://muze/./packages/muze-firebolt/src/side-effects/brush-anchors.js","webpack://muze/./packages/muze-firebolt/src/behaviour-effect-map.js","webpack://muze/./packages/visual-layer/src/enums/constants.js","webpack://muze/./packages/visual-layer/src/layers/area/default-config.js","webpack://muze/./packages/visual-layer/src/simple-layer/simple-layer.js","webpack://muze/./packages/visual-layer/src/base-layer/props.js","webpack://muze/./packages/muze-axis/src/enums/axis-orientation.js","webpack://muze/./packages/muze-axis/src/enums/scale-type.js","webpack://muze/./packages/muze-axis/src/enums/constants.js","webpack://muze/./packages/muze-axis/src/scale-creator.js","webpack://muze/./packages/muze-axis/src/cartesian-axis/default-config.js","webpack://muze/./packages/muze-axis/src/axis-renderer.js","webpack://muze/./packages/muze-axis/src/cartesian-axis/space-setter.js","webpack://muze/./packages/muze-axis/src/cartesian-axis/helper.js","webpack://muze/./packages/muze-axis/src/cartesian-axis/props.js","webpack://muze/./packages/muze-axis/src/cartesian-axis/simple-axis.js","webpack://muze/./packages/muze-axis/src/cartesian-axis/interpolators/linear.js","webpack://muze/./packages/muze-axis/src/cartesian-axis/interpolators/log.js","webpack://muze/./packages/muze-axis/src/cartesian-axis/interpolators/pow.js","webpack://muze/./packages/muze-axis/src/cartesian-axis/continous-axis.js","webpack://muze/./packages/muze-axis/src/cartesian-axis/band-axis.js","webpack://muze/./packages/muze-axis/src/cartesian-axis/time-axis.js","webpack://muze/./packages/muze-axis/src/color-axis/color-maps.js","webpack://muze/./packages/muze-axis/src/color-axis/defaults.js","webpack://muze/./packages/muze-axis/src/color-axis/props.js","webpack://muze/./packages/muze-axis/src/helper.js","webpack://muze/./packages/muze-axis/src/color-axis/color-strategy.js","webpack://muze/./packages/muze-axis/src/color-axis/color-axis.js","webpack://muze/./packages/muze-axis/src/size-axis/defaults.js","webpack://muze/./packages/muze-axis/src/size-axis/size-strategy.js","webpack://muze/./packages/muze-axis/src/size-axis/props.js","webpack://muze/./packages/muze-axis/src/size-axis/size-axis.js","webpack://muze/./packages/muze-axis/src/shape-axis/defaults.js","webpack://muze/./packages/muze-axis/src/shape-axis/props.js","webpack://muze/./packages/muze-axis/src/shape-axis/shape-axis.js","webpack://muze/./packages/muze-axis/src/shape-axis/helper.js","webpack://muze/./packages/muze-axis/src/data-type-scale-map.js","webpack://muze/./packages/transform/src/group-transform/index.js","webpack://muze/./packages/transform/src/identity-transform/index.js","webpack://muze/./packages/transform/src/transform-factory/index.js","webpack://muze/./packages/transform/src/enums/transform-type.js","webpack://muze/./packages/transform/src/stack-transform/index.js","webpack://muze/./packages/visual-layer/src/helpers/index.js","webpack://muze/./packages/visual-layer/src/base-layer/listener-map.js","webpack://muze/./packages/visual-layer/src/enums/props.js","webpack://muze/./packages/visual-layer/src/base-layer/default-options.js","webpack://muze/./packages/visual-layer/src/base-layer/base-layer.js","webpack://muze/./packages/visual-layer/src/layers/line/renderer.js","webpack://muze/./packages/visual-layer/src/layers/line/default-config.js","webpack://muze/./packages/visual-layer/src/layers/line/line.js","webpack://muze/./packages/visual-layer/src/layers/area/renderer.js","webpack://muze/./packages/visual-layer/src/layers/area/area.js","webpack://muze/./packages/visual-layer/src/layers/arc/default-config.js","webpack://muze/./packages/visual-layer/src/layers/arc/arc.js","webpack://muze/./packages/visual-layer/src/layers/arc/arc-helper.js","webpack://muze/./packages/visual-layer/src/layers/text/renderer.js","webpack://muze/./packages/visual-layer/src/layers/text/default-config.js","webpack://muze/./packages/visual-layer/src/layers/text/text.js","webpack://muze/./packages/visual-layer/src/layers/point/renderer.js","webpack://muze/./packages/visual-layer/src/layers/point/default-config.js","webpack://muze/./packages/visual-layer/src/layers/point/point.js","webpack://muze/./packages/visual-layer/src/layers/bar/renderer.js","webpack://muze/./packages/visual-layer/src/layers/bar/default-config.js","webpack://muze/./packages/visual-layer/src/layers/bar/bar-helper.js","webpack://muze/./packages/visual-layer/src/layers/bar/bar.js","webpack://muze/./packages/visual-layer/src/layers/tick/default-config.js","webpack://muze/./packages/visual-layer/src/layers/tick/renderer.js","webpack://muze/./packages/visual-layer/src/layers/tick/tick.js","webpack://muze/./packages/visual-layer/src/enums/layer-types.js","webpack://muze/./packages/visual-layer/src/layer-factory/layer-factory.js","webpack://muze/./packages/visual-layer/src/layer-factory/index.js","webpack://muze/./packages/visual-layer/src/defaults.js","webpack://muze/./packages/visual-group/src/enums/constants.js","webpack://muze/./packages/visual-group/src/visual-group/local-options.js","webpack://muze/./packages/visual-group/src/simple-group/simple-group.js","webpack://muze/./packages/visual-group/src/variable/variable.js","webpack://muze/./packages/visual-group/src/variable/composed-vars.js","webpack://muze/./packages/visual-group/src/variable/simple-var.js","webpack://muze/./packages/visual-group/src/encoder/field-sanitizer.js","webpack://muze/./packages/visual-group/src/encoder/visual-encoder.js","webpack://muze/./packages/visual-group/src/enums/scale-maps.js","webpack://muze/./packages/visual-group/src/data-type-scale-map.js","webpack://muze/./packages/visual-group/src/encoder/encoder-helper.js","webpack://muze/./packages/visual-group/src/encoder/cartesian-encoder.js","webpack://muze/./packages/visual-group/src/encoder/polar-encoder.js","webpack://muze/./packages/visual-group/src/encoder/retinal-encoder.js","webpack://muze/./packages/visual-group/src/group-helper/group-utils.js","webpack://muze/./packages/visual-unit/src/firebolt/action-behaviour-map.js","webpack://muze/./packages/visual-unit/src/helper/index.js","webpack://muze/./packages/visual-unit/src/enums/constants.js","webpack://muze/./packages/visual-unit/src/helper/grid-lines.js","webpack://muze/./packages/visual-unit/src/default-config.js","webpack://muze/./packages/visual-unit/src/local-options.js","webpack://muze/./packages/visual-unit/src/enums/reactive-props.js","webpack://muze/./packages/visual-unit/src/listener-map.js","webpack://muze/./packages/visual-unit/src/props.js","webpack://muze/./packages/visual-unit/src/firebolt/helper.js","webpack://muze/./packages/visual-unit/src/firebolt/payload-generator.js","webpack://muze/./packages/visual-unit/src/firebolt/data-propagator.js","webpack://muze/./packages/visual-unit/src/firebolt/index.js","webpack://muze/./packages/visual-unit/src/visual-unit.js","webpack://muze/./packages/visual-group/src/group-helper/matrix-model.js","webpack://muze/./packages/visual-group/src/group-helper/cell-creator.js","webpack://muze/./packages/visual-group/src/group-helper/resolver-props.js","webpack://muze/./packages/visual-group/src/group-helper/matrix-resolver.js","webpack://muze/./packages/visual-group/src/visual-group/value-matrix.js","webpack://muze/./packages/visual-group/src/visual-group/helper.js","webpack://muze/./packages/visual-group/src/visual-group/change-listener.js","webpack://muze/./packages/visual-group/src/visual-group/props.js","webpack://muze/./packages/visual-group/src/visual-group/visual-group.js","webpack://muze/./packages/muze-legend/src/firebolt/behavioural/select.js","webpack://muze/./packages/muze-legend/src/firebolt/action-behaviour-map.js","webpack://muze/./packages/muze-legend/src/firebolt/behaviour-effect-map.js","webpack://muze/./packages/muze-legend/src/enums/behaviours.js","webpack://muze/./packages/muze-legend/src/enums/side-effects.js","webpack://muze/./packages/muze-legend/src/enums/constants.js","webpack://muze/./packages/muze-legend/src/firebolt/helper.js","webpack://muze/./packages/muze-legend/src/firebolt/legend-firebolt.js","webpack://muze/./packages/muze-legend/src/firebolt/physical/drag.js","webpack://muze/./packages/muze-legend/src/firebolt/physical/hover.js","webpack://muze/./packages/muze-legend/src/firebolt/physical/click.js","webpack://muze/./packages/muze-legend/src/firebolt/physical/index.js","webpack://muze/./packages/muze-legend/src/enums/actions.js","webpack://muze/./packages/muze-legend/src/firebolt/physical/selection-box-drag.js","webpack://muze/./packages/muze-legend/src/firebolt/side-effects/selection-box/index.js","webpack://muze/./packages/muze-legend/src/firebolt/side-effects/legend-highlighter/strategies.js","webpack://muze/./packages/muze-legend/src/firebolt/side-effects/legend-highlighter/index.js","webpack://muze/./packages/muze-legend/src/legend/props.js","webpack://muze/./packages/muze-legend/src/legend/defaults.js","webpack://muze/./packages/muze-legend/src/legend/legend-helper.js","webpack://muze/./packages/muze-legend/src/legend/simple-legend.js","webpack://muze/./packages/muze-legend/src/legend/position-config.js","webpack://muze/./packages/muze-legend/src/legend/renderer.js","webpack://muze/./packages/muze-legend/src/legend/discrete-legend.js","webpack://muze/./packages/muze-legend/src/legend/gradient-helper.js","webpack://muze/./packages/muze-legend/src/legend/gradient-legend.js","webpack://muze/./packages/muze-legend/src/legend/step-legend.js","webpack://muze/./packages/muze/src/constants.js","webpack://muze/./packages/muze/src/operators.js","webpack://muze/./packages/muze/src/action-model.js","webpack://muze/./packages/muze/src/canvas/defaults.js","webpack://muze/./packages/muze/src/canvas/local-options.js","webpack://muze/./packages/layout/src/tree-layout/layout-component/layoutComponent.js","webpack://muze/./packages/layout/src/tree-layout/layout-component/dummy-component.js","webpack://muze/./packages/muze/src/defaults.js","webpack://muze/./packages/layout/src/tree-layout/constants/defaults.js","webpack://muze/./packages/layout/src/tree-layout/layout-definition/definition-manager/definitionModel.js","webpack://muze/./packages/layout/src/tree-layout/layout-definition/helper/index.js","webpack://muze/./packages/layout/src/tree-layout/layout-definition/tree/index.js","webpack://muze/./packages/layout/src/tree-layout/layout-definition/layout-model/index.js","webpack://muze/./packages/layout/src/tree-layout/utils/index.js","webpack://muze/./packages/layout/src/tree-layout/data-adapters/data-point.js","webpack://muze/./packages/layout/src/tree-layout/data-adapters/data-parser.js","webpack://muze/./packages/layout/src/tree-layout/data-adapters/helper.js","webpack://muze/./packages/layout/src/tree-layout/data-adapters/html-data.js","webpack://muze/./packages/layout/src/tree-layout/renderers/renderer.js","webpack://muze/./packages/layout/src/tree-layout/renderers/html-renderer.js","webpack://muze/./packages/layout/src/tree-layout/drawing-manager/helper.js","webpack://muze/./packages/layout/src/tree-layout/drawing-manager/index.js","webpack://muze/./packages/layout/src/tree-layout/layout-definition/definition-manager/index.js","webpack://muze/./packages/layout/src/tree-layout/layout-manager/layout-def.js","webpack://muze/./packages/layout/src/tree-layout/layout-manager/helper.js","webpack://muze/./packages/layout/src/tree-layout/layout-manager/index.js","webpack://muze/./packages/muze/src/canvas/helper.js","webpack://muze/./packages/muze/src/options.js","webpack://muze/./packages/layout/src/enums/constants.js","webpack://muze/./packages/layout/src/generic-layout/index.js","webpack://muze/./packages/layout/src/grid-layout/defaults.js","webpack://muze/./packages/layout/src/utils/index.js","webpack://muze/./packages/layout/src/visual-matrix/props.js","webpack://muze/./packages/layout/src/visual-matrix/default-config.js","webpack://muze/./packages/layout/src/visual-matrix/visual-matrix.js","webpack://muze/./packages/layout/src/visual-matrix/row-matrix.js","webpack://muze/./packages/layout/src/visual-matrix/column-matrix.js","webpack://muze/./packages/layout/src/grid-layout/computations.js","webpack://muze/./packages/layout/src/grid-layout/view-info-getter.js","webpack://muze/./packages/layout/src/grid-layout/layout.js","webpack://muze/./packages/layout/src/grid-layout/layout-helper.js","webpack://muze/./packages/layout/src/grid-layout/border-helper.js","webpack://muze/./packages/layout/src/grid-layout/span-maker.js","webpack://muze/./packages/muze/src/transaction-support.js","webpack://muze/./packages/muze/src/canvas/component-resolver.js","webpack://muze/./packages/visual-cell/src/enums/constants.js","webpack://muze/./packages/visual-cell/src/enums/cell-type.js","webpack://muze/./packages/visual-cell/src/simple-cell.js","webpack://muze/./packages/visual-cell/src/enums/defaults.js","webpack://muze/./packages/visual-cell/src/props.js","webpack://muze/./packages/visual-cell/src/axis-cell.js","webpack://muze/./packages/visual-cell/src/blank-cell.js","webpack://muze/./packages/visual-cell/src/text-cell.js","webpack://muze/./packages/visual-cell/src/geom-cell.js","webpack://muze/./packages/visual-cell/src/defaults.js","webpack://muze/./packages/visual-cell/src/constants.js","webpack://muze/./packages/visual-cell/src/cell-registry.js","webpack://muze/./packages/muze/src/canvas/title-maker.js","webpack://muze/./packages/muze/src/canvas/legend-maker.js","webpack://muze/./packages/muze/src/canvas/components/muze-chart-component.js","webpack://muze/./packages/muze/src/canvas/components/headerComponent.js","webpack://muze/./packages/muze/src/canvas/components/legendComponent.js","webpack://muze/./packages/muze/src/canvas/components/scroll-bar-maker/helper.js","webpack://muze/./packages/muze/src/canvas/components/scroll-bar-maker/props.js","webpack://muze/./packages/muze/src/canvas/components/scroll-bar-maker/scroll-maker.js","webpack://muze/./packages/muze/src/canvas/components/scroll-component.js","webpack://muze/./packages/muze/src/canvas/components/scroll-bar-maker/horizontal-scroll-maker.js","webpack://muze/./packages/muze/src/canvas/components/scroll-bar-maker/vertical-scroll-maker.js","webpack://muze/./packages/muze/src/canvas/components/matrix-component.js","webpack://muze/./packages/muze/src/canvas/components/grid-component.js","webpack://muze/./packages/muze/src/canvas/component-wrapper-maker.js","webpack://muze/./packages/muze/src/canvas/scroll-manager.js","webpack://muze/./packages/muze/src/canvas/layout-maker.js","webpack://muze/./packages/muze/src/canvas/firebolt/group-firebolt.js","webpack://muze/./packages/muze/src/canvas/firebolt/index.js","webpack://muze/./packages/muze/src/canvas/app-state.js","webpack://muze/./packages/muze/src/canvas/canvas.js","webpack://muze/./packages/muze/src/default-registry.js","webpack://muze/./packages/visual-layer/src/layer-registry.js","webpack://muze/./packages/muze/src/muze.js"],"names":["webpackUniversalModuleDefinition","root","factory","exports","module","define","amd","window","installedModules","__webpack_require__","moduleId","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","getDefault","getModuleExports","object","property","prototype","hasOwnProperty","p","s","e","_typeof","a","default","description","homepage","version","license","main","author","keywords","repository","type","url","contributors","email","dependencies","d3-dsv","devDependencies","babel-cli","babel-core","babel-eslint","babel-loader","babel-plugin-transform-runtime","babel-preset-env","babel-preset-es2015","babel-preset-flow","chai","cross-env","eslint","eslint-config-airbnb","eslint-plugin-import","eslint-plugin-jsx-a11y","eslint-plugin-react","istanbul-instrumenter-loader","jsdoc","json2yaml","karma","karma-chai","karma-chrome-launcher","karma-coverage-istanbul-reporter","karma-mocha","karma-spec-reporter","karma-webpack","marked","mocha","mocha-webpack","transform-runtime","webpack","webpack-cli","webpack-dev-server","scripts","test","ut","utd","build","start","lint","lint-errors","docs","DataModel","data_format","FLAT_JSON","DSV_STR","DSV_ARR","AUTO","dimension_subtype","CATEGORICAL","TEMPORAL","GEO","BINNED","measure_subtype","CONTINUOUS","field_type","MEASURE","DIMENSION","filtering_mode","NORMAL","INVERSE","ALL","convertToNativeDate","date","Date","pad","DateTimeFormatter","format","this","dtParams","nativeDate","RegExp","escape","text","replace","TOKEN_PREFIX","DATETIME_PARAM_SEQUENCE","YEAR","MONTH","DAY","HOUR","MINUTE","SECOND","MILLISECOND","defaultNumberParser","defVal","val","parsedVal","isFinite","parseInt","defaultRangeParser","range","nVal","toLowerCase","length","getTokenDefinitions","daysDef","short","long","monthsDef","H","index","extract","parser","formatter","getHours","toString","hours","P","M","getMinutes","S","getSeconds","K","getMilliseconds","join","day","getDay","A","getDate","b","month","getMonth","B","y","result","substring","presentDate","presentYear","Math","trunc","getFullYear","year","Y","getTokenFormalNames","definitions","HOUR_12","AMPM_UPPERCASE","AMPM_LOWERCASE","SHORT_DAY","LONG_DAY","DAY_OF_MONTH","DAY_OF_MONTH_CONSTANT_WIDTH","SHORT_MONTH","LONG_MONTH","MONTH_OF_YEAR","SHORT_YEAR","LONG_YEAR","tokenResolver","defaultResolver","arg","targetParam","arguments","hourFormat24","hourFormat12","ampmLower","ampmUpper","amOrpm","isPM","findTokens","tokenPrefix","tokenLiterals","keys","occurrence","forwardChar","indexOf","push","token","formatAs","nDate","formattedStr","String","formattedVal","parse","dateTimeStamp","options","extractTokenValue","dtParamSeq","noBreak","dtParamArr","args","resolverKey","resolverParams","resolverFn","param","resolvedVal","splice","apply","checkIfOnlyYear","unshift","tokenObj","lastOccurrenceIndex","occObj","occIndex","targetText","regexFormat","tokenArr","map","obj","occurrenceLength","extractValues","match","shift","getNativeDate","Number","len","h","store","fields","Array","forEach","fieldIndex","from","OBJECTSTRING","objectToStrFn","objectToStr","arrayToStr","checkCyclicRef","parentArr","bIndex","extend2","obj1","obj2","skipUndef","v","merge","tgtArr","srcArr","item","srcVal","tgtVal","str","cRef","isArray","isCallable","getUniqueId","getTime","round","random","isArrEqual","arr1","arr2","formatNumber","helper_detectDataFormat","data","field_store","createNamespace","fieldArr","dataId","fieldsObj","_cachedFieldsObj","field","getMeasure","measureFields","_cachedMeasure","schema","getDimension","dimensionFields","_cachedDimension","src_value","_classCallCheck","configurable","writable","_value","rowDiffsetIterator","rowDiffset","callback","split","diffStr","diffStsArr","end","InvalidAwareTypes","invalid_aware_types_classCallCheck","config","assign","_invalidAwareValsMap","invalidAwareVals","NULL","NA","NIL","invalid","nil","null","undefined","I","R","iterator","u","next","done","return","TypeError","DM_DERIVATIVES","JOINS","CROSS","LEFTOUTER","RIGHTOUTER","NATURAL","FULLOUTER","getCommonSchema","fs1","fs2","retArr","fs1Arr","defaultFilterFn","crossProduct","dm1","dm2","filterFn","replaceCommonSchema","jointype","applicableFilterFn","dm1FieldStore","getFieldspace","dm2FieldStore","dm1FieldStoreName","dm2FieldStoreName","commonSchemaList","Error","tmpSchema","_rowDiffset","rowAdded","rowPosition","ii","tuple","userArg","partialField","dm1Fields","prepareJoinData","dm2Fields","detachedRoot","tupleObj","cellVal","iii","datamodel","defSortFn","a1","b1","mergeSort","arr","sortFn","merge_sort_sort","lo","hi","mid","floor","mainArr","auxArr","getSortFn","dataType","sortType","retFunc","groupData","hashMap","Map","groupedData","datum","fieldVal","has","set","createSortingFnArg","groupedDatum","targetFields","targetFieldDetails","label","reduce","acc","idx","difference_difference","hashTable","schemaNameArr","dm1FieldStoreFieldObj","dm2FieldStoreFieldObj","_colIdentifier","sort","prepareDataHelper","dm","addData","hashData","schemaName","fieldName","getFilteredValues","filter","invalid_aware_types","sum","filteredNumber","curr","avg","totalSum","isNaN","fnList","min","filteredValues","max","first","last","count","std","sqrt","mean","pow","num","defaultReducerName","fe","reducer_store_ReducerStore","entries","_this","reducer","_this2","__unregister","delete","Function","reducer_store","de","naturalJoinFilter","commonSchemaArr","retainTuple","union_union","src_export","leftOuterJoin","dataModel1","dataModel2","rightOuterJoin","fields_field","field_classCallCheck","subtype","displayName","we","dimension","_cachedDomain","calculateDataDomain","categorical","hash","Set","domain","add","temporal","temporal_classCallCheck","_cachedMinDiff","sortedData","arrLn","minDiff","POSITIVE_INFINITY","prevDatum","nextDatum","processedCount","_this3","binned","binsArr","bins","measure","unit","defAggFn","numberFormat","continuous","NEGATIVE_INFINITY","field_parser","Ie","categorical_parser","isInvalid","getInvalidType","trim","temporal_parser","temporal_parser_classCallCheck","_dtf","binned_parser","matched","parseFloat","continuous_parser","partial_field","partial_field_classCallCheck","_sanitize","createFields","dataColumn","headers","headersObj","header","Ge","dataFormat","Ke","firstRowHeader","columns","column_major","EOL","EOF","QUOTE","NEWLINE","RETURN","objectConverter","JSON","stringify","Ze","delimiter","reFormat","DELIMITER","charCodeAt","parseRows","f","rows","N","eof","eol","j","slice","row","formatRow","formatValue","convert","columnSet","column","concat","formatRows","csv","src_dsv","tsv","nt","fieldSeparator","dsv","dsv_arr","rt","insertionIndex","at","converters","FlatJSON","DSVStr","DSVArr","resp","helper_persistDerivation","model","operation","_model$_derivation","criteriaFn","_derivation","op","meta","criteria","persistAncestorDerivation","sourceDm","newDm","_newDm$_ancestorDeriv","_ancestorDerivation","cloneWithAllFields","clonedDm","clone","partialFieldspace","getPartialFieldspace","__calculateFieldspace","calculateFieldsConfig","helper_filterPropagationModel","propModels","filterByMeasure","fns","dataModel","dataObj","getData","fieldsConfig","getFieldsConfig","fieldsSpace","values","def","some","every","propField","valueOf","propModel","select","fn","saveChild","helper_cloneWithSelect","selectFn","selectConfig","cloneConfig","cloned","helper_selectHelper","newRowDiffSet","lastInsertedValue","li","cachedStore","cloneProvider","selectorHelperFn","_iteratorNormalCompletion","checker","helper_cloneWithProject","projField","allFields","projectionSet","actualProjField","helper_sanitizeUnitSchema","unitSchema","helper_updateData","relation","default_config","converterFn","converter_namespaceObject","it","formattedData","nameSpace","_partialFieldspace","_","_dataFormat","fieldInSchema","applyExistingOperationOnModel","derivations","getDerivations","selectionModel","rejectionModel","derivation","_selectionModel","params","groupByString","_rejectionModel","propagateIdentifiers","propModelInf","nonTraversingModel","excludeModels","handlePropagation","_children","child","propagateToAllDataModels","identifiers","rootModels","propagationInf","propagationNameSpace","propagateToSource","propagationSourceId","sourceId","propagateInterpolatedValues","criterias","persistent","actionCriterias","mutableActions","filteredCriteria","entry","action","sourceActionCriterias","actionInf","actionConf","applyOnSource","models","path","_parent","_ref3","rootModel","propConfig","sourceIdentifiers","rootGroupByModel","groupByModel","inf","propagationModel","filteredModel","reverse","src_relation","relation_classCallCheck","source","Relation","_fieldStoreName","updateData","_propagationNameSpace","immutableActions","_fieldspace","helper_updateFields","fieldStoreName","colIdentifier","collID","partialFieldMap","newFields","coll","joinWith","unionWith","differenceWith","defConfig","oDm","constructor","setParent","fieldConfig","normalizedProjField","search","_fieldConfig","fieldDef","removeChild","findIndex","sibling","parent","ReferenceError","__proto__","getPrototypeOf","_onPropagation","_sortingDetails","setPrototypeOf","order","withUid","getAllFields","dataGenerated","dataBuilder","fieldStore","sortingDetails","retObj","uids","addUid","columnWise","reqSorting","tmpDataArr","colName","insertInd","sortMeta","fDetails","sortingFn","pop","tmpData","fieldNames","fmtFieldIdx","elem","fIdx","fmtFn","datumIdx","fieldsArr","reducers","newDataModel","group_by_groupBy","existingDataModel","sFieldArr","dimensions","reducerObj","measures","defReducer","defaultReducer","measureName","reducerFn","resolve","fieldStoreObj","dbName","dimensionArr","measureArr","rowCount","rawData","dataInCSVArr","sortedDm","colData","rowsCount","serializedData","rowIdx","colIdx","fieldinst","dependency","replaceVar","depVars","retrieveFn","depFieldIndices","fieldSpec","fs","suppliedFields","computedValues","fieldsData","At","addField","addToNameSpace","isMutableAction","payload","find","sourceNamespace","filterImmutableAction","criteriaModel","eventName","measureFieldName","binFieldName","_createBinnedFieldDat","measureField","buckets","binsCount","binSize","dMin","dMax","ceil","abs","generateBuckets","bucketRanges","binnedData","findBucketRange","leftIdx","rightIdx","midIdx","binField","serialize","getSchema","stats_sum","stats_avg","stats_min","stats_max","stats_first","stats_last","stats_count","sd","Operators","compose","operations","currentDM","firstChild","dispose","bin","project","groupBy","calculateVariable","difference","naturalJoin","fullOuterJoin","union","Stats","stats_namespaceObject","enums_namespaceObject","DataFormat","FilteringMode","package_0","Ct","St","makeEntry","sCon","_set","set1","set2","filteredKeys","s1","s2","ForeignSet","isSimpleObject","win","reqAnimFrame","requestAnimationFrame","webkitRequestAnimationFrame","mozRequestAnimationFrame","oRequestAnimationFrame","msRequestAnimationFrame","setTimeout","getTimeBasedId","__lastTime","__id","flat","res","scheduler","onFinishCallback","queue","animationFrame","listeners","tempQ","unique","fetch","node","namedNode","qualifiedName","seed","fetchAggregator","getUpstreamNodes","list","rec","qname","placedIndex","preArr","postArr","outgoingEdges","resolver","accumulate","nodeDetails","identity","CustomResolver","utils_classCallCheck","dep","_dep","graph_node_classCallCheck","edges","_seed","requireResolve","retriever","history","electricEdges","_edges","retrieveDetails","edge","head","hist","electric_node_classCallCheck","nextFrame","currentFrame","lstnrs","nodes","nFn","qualifiedNodeMap","graph_node","_wholeSet","_propagate","propagationOverride","currentFrameListeners","nextFrameListeners","_schedule","flushTarget","flush","mount","resolveReqList","objn","perv","addDependencies","_node","getDependencies","getResolvedList","prop","props","fnSpec","eNode","_ref","electric_node","addEdges","addElectricNode","changedSet","upstreamNodes","upstreamNode","append","__execUniqueElectricEdges","cfLstnrs","nfLstnrs","toArray","repeatHead","resetPropagationOverride","qnames","_this4","update","resolved","resolveDependencyOrder","resolveMap","neighbour","isRoot","model_classCallCheck","_graph","graph","_lockFlag","_reqQ","mountPoint","_addPropInModel","calculationConfig","customResolver","varName","fetchFn","_customResolver","createNodesFrom","instantCall","_graph$stopPropagatio","propsArr","unsub","createElectricNodeOf","stopPropagation","setPropagationOverride","resetNodeValue","_graph$stopPropagatio2","setProp","getNodeValue","getNodeFromQualifiedName","Model","__webpack_exports__","webpackPolyfill","deprecate","paths","children","_interopRequireDefault","_lib2","require","_containerManager2","slLib","init","doc","document","htmlSplCharSpace"," ","documentSupport","getDocumentSupport","SVG_BBOX_CORRECTION","isWebKit","SmartLabelManager","id","container","useEllipses","wrapper","prevInstance","isBrowserLess","maxCacheLimit","maxDefaultCacheLimit","getElementById","createContainer","innerHTML","testStrAvg","isHeadLess","isIE","offsetHeight","offsetWidth","parentContainerStyle","style","parentContainer","_containerManager","_showNoEllipses","_init","setStyle","textToLines","smartlabel","lines","_calCharDimWithCache","calculateDifference","size","csArr","tw","twi","cachedStyle","asymmetricDifference","maxAdvancedCacheLimit","_container","cache","_advancedCache","advancedCacheKey","_advancedCacheKey","cacheName","fontSize","fontFamily","fontWeight","fontStyle","cacheInitName","repeat","width","height","_getWidthFn","contObj","_containerObj","svgText","bbox","textContent","getBBox","_styleNotSet","setLineHeight","sCont","_context","context","_cache","charCache","_lineHeight","lineHeight","useEllipsesOnOverflow","getSmartText","maxWidth","maxHeight","noWrap","trimStr","tempArr","tmpText","maxWidthWithEll","toolText","oriWidth","oriHeight","newCharIndex","nearestChar","tempChar","getWidth","initialLeft","initialTop","getOriSizeImproveObj","spanArr","x","minWidth","chr","elemRightMostPoint","elemLowestPoint","lastBR","removeFromIndex","removeFromIndexForEllipses","hasHTMLTag","maxStrWidth","lastDash","lastSpace","lastIndexBroken","strWidth","strHeight","oriTextArr","ellipsesStr","ellipsesWidth","dotWidth","characterArr","dashIndex","spaceIndex","lastLineBreak","fastTrim","ws","charAt","smartLabel","oriTextWidth","oriTextHeight","oriText","isTruncated","xmlTagRegEx","ltgtRegex","getOriSize","substr","getNearestBreakIndex","detailObj","tooltext","lastIndexOf","spanAdditionRegx","spanAdditionReplacer","classNameWithTag","classNameWithTagBR","childRetriverFn","childRetriverString","noClassTesting","classNameReg","className","spaceIdx","dashIdx","offsetLeft","offsetTop","parentNode","insertBefore","createElement","classNameBrReg","spanRemovalRegx","error","detailedCalculationFlag","textArr","letter","lSize","cumulativeSize","indiSizeStore","lib","userAgent","navigator","clsNameSpace","containerClass","brReplaceRegex","position","top","whiteSpace","padding","overflow","supportedStyle","font","font-family","font-weight","font-size","line-height","font-style","getElementsByClassName","opera","hasSVG","Boolean","SVGAngle","implementation","hasFeature","containerParent","body","appendChild","setAttribute","getElementsByTagName","sl","charLen","increment","avgWidth","styleObj","fSize","Muze","ContainerManager","maxContainers","svg","containers","rootNode","createElementNS","setAttributeNS","svgRoot","diff","containerObj","keyStr","prev","removeContainer","addContainer","avgCharWidth","display","cObj","ascending","NaN","bisector","compare","ascendingComparator","left","right","ascendingBisect","bisectRight","number","array","src_range","stop","step","e10","e5","e2","src_ticks","ticks","tickIncrement","power","log","LN10","tickStep","step0","step1","quantile","valueof","i0","value0","each","remove","clear","empty","src_nest","sortValues","rollup","nest","sortKeys","depth","createResult","setResult","keyValue","valuesByKey","createObject","setObject","createMap","setMap","sortKey","k","proto","implicit","ordinal","unknown","scale","copy","band","bandwidth","ordinalRange","paddingInner","paddingOuter","align","rescale","sequence","rangeRound","invertExtent","r0","r1","hiIndex","getClosestIndexOf","invert","side","highVal","d1","low","high","extend","definition","Color","reI","reN","reP","reHex3","reHex6","reRgbInteger","reRgbPercent","reRgbaInteger","reRgbaPercent","reHslPercent","reHslaPercent","named","aliceblue","antiquewhite","aqua","aquamarine","azure","beige","bisque","black","blanchedalmond","blue","blueviolet","brown","burlywood","cadetblue","chartreuse","chocolate","coral","cornflowerblue","cornsilk","crimson","cyan","darkblue","darkcyan","darkgoldenrod","darkgray","darkgreen","darkgrey","darkkhaki","darkmagenta","darkolivegreen","darkorange","darkorchid","darkred","darksalmon","darkseagreen","darkslateblue","darkslategray","darkslategrey","darkturquoise","darkviolet","deeppink","deepskyblue","dimgray","dimgrey","dodgerblue","firebrick","floralwhite","forestgreen","fuchsia","gainsboro","ghostwhite","gold","goldenrod","gray","green","greenyellow","grey","honeydew","hotpink","indianred","indigo","ivory","khaki","lavender","lavenderblush","lawngreen","lemonchiffon","lightblue","lightcoral","lightcyan","lightgoldenrodyellow","lightgray","lightgreen","lightgrey","lightpink","lightsalmon","lightseagreen","lightskyblue","lightslategray","lightslategrey","lightsteelblue","lightyellow","lime","limegreen","linen","magenta","maroon","mediumaquamarine","mediumblue","mediumorchid","mediumpurple","mediumseagreen","mediumslateblue","mediumspringgreen","mediumturquoise","mediumvioletred","midnightblue","mintcream","mistyrose","moccasin","navajowhite","navy","oldlace","olive","olivedrab","orange","orangered","orchid","palegoldenrod","palegreen","paleturquoise","palevioletred","papayawhip","peachpuff","peru","pink","plum","powderblue","purple","rebeccapurple","red","rosybrown","royalblue","saddlebrown","salmon","sandybrown","seagreen","seashell","sienna","silver","skyblue","slateblue","slategray","slategrey","snow","springgreen","steelblue","tan","teal","thistle","tomato","turquoise","violet","wheat","white","whitesmoke","yellow","yellowgreen","color","exec","Rgb","rgbn","rgba","hsla","g","rgbConvert","rgb","opacity","hex","Hsl","hsl","hslConvert","hsl2rgb","m1","m2","displayable","brighter","darker","deg2rad","PI","rad2deg","Xn","Yn","Zn","t0","t1","t2","t3","labConvert","Lab","Hcl","cos","sin","z","rgb2lrgb","xyz2lab","lab","lab2xyz","lrgb2rgb","hclConvert","atan2","hcl","C","D","E","ED","EB","BC_DA","cubehelix","cubehelixConvert","Cubehelix","bl","basis","v0","v1","v2","v3","cosh","sinh","src_constant","linear","hue","constant","gamma","nogamma","exponential","src_rgb","rgbGamma","colorRgb","rgbSpline","spline","colors","rgbBasis","src_number","reA","reB","src_string","am","bm","bs","bi","lastIndex","q","one","zero","cssNode","cssRoot","cssView","svgNode","value_typeof","string","setTime","nb","na","src_round","degrees","translateX","translateY","rotate","skewX","scaleX","scaleY","decompose","atan","interpolateTransform","pxComma","pxParen","degParen","translate","xa","ya","xb","yb","interpolateTransformCss","parseCss","documentElement","defaultView","transform","getComputedStyle","getPropertyValue","interpolateTransformSvg","parseSvg","baseVal","consolidate","matrix","SQRT2","colorHsl","hslLong","colorHcl","cubehelixGamma","colorCubehelix","cubehelixLong","piecewise","interpolate","d3_scale_src_constant","d3_scale_src_number","deinterpolateLinear","bimap","deinterpolate","reinterpolate","d0","polymap","bisect","target","clamp","output","input","interpolateValue","deinterpolateClamp","reinterpolateClamp","interpolateRound","formatDecimal","toExponential","coefficient","src_exponent","re","formatSpecifier","specifier","FormatSpecifier","fill","sign","symbol","comma","precision","prefixExponent","locale","formatPrefix","formatTrim","out","i1","formatRounded","exponent","formatTypes","%","toFixed","toPrecision","X","toUpperCase","src_identity","prefixes","src_locale","group","grouping","thousands","formatGroup","currency","decimal","numerals","formatNumerals","percent","newFormat","prefix","suffix","formatType","maybeSuffix","valuePrefix","valueSuffix","valueNegative","Infinity","defaultLocale","formatLocale","src_tickFormat","precisionPrefix","precisionRound","precisionFixed","linearish","tickFormat","nice","interval","x0","x1","pow10","powp","base","exp","logp","log10","log2","reflect","logs","pows","raise","thresholds","threshold","quantiles","quantize","newInterval","floori","offseti","offset","previous","millisecond","durationMinute","durationWeek","second","getUTCSeconds","minute","hour","setHours","setDate","getTimezoneOffset","weekday","sunday","monday","tuesday","wednesday","thursday","friday","saturday","setMonth","setFullYear","utcMinute","setUTCSeconds","getUTCMinutes","utcHour","setUTCMinutes","getUTCHours","utcDay","setUTCHours","setUTCDate","getUTCDate","utcWeekday","getUTCDay","utcSunday","utcMonday","utcTuesday","utcWednesday","utcThursday","utcFriday","utcSaturday","utcMonth","setUTCMonth","getUTCMonth","getUTCFullYear","utcYear","setUTCFullYear","localDate","L","utcDate","UTC","newYear","timeFormat","utcFormat","utcParse","pads","-","0","numberRe","percentRe","requoteRe","requote","formatRe","names","formatLookup","parseWeekdayNumberSunday","w","parseWeekdayNumberMonday","parseWeekNumberSunday","U","parseWeekNumberISO","V","parseWeekNumberMonday","W","parseFullYear","parseYear","parseZone","Z","parseMonthNumber","parseDayOfMonth","parseDayOfYear","parseHour24","parseMinutes","parseSeconds","parseMilliseconds","parseMicroseconds","parseLiteralPercent","parseUnixTimestamp","Q","parseUnixTimestampSeconds","formatDayOfMonth","formatHour24","formatHour12","formatDayOfYear","timeDay","timeYear","formatMilliseconds","formatMicroseconds","formatMonthNumber","formatMinutes","formatSeconds","formatWeekdayNumberMonday","formatWeekNumberSunday","timeSunday","formatWeekNumberISO","timeThursday","formatWeekdayNumberSunday","formatWeekNumberMonday","timeMonday","formatYear","formatFullYear","formatZone","formatUTCDayOfMonth","formatUTCHour24","formatUTCHour12","formatUTCDayOfYear","formatUTCMilliseconds","getUTCMilliseconds","formatUTCMicroseconds","formatUTCMonthNumber","formatUTCMinutes","formatUTCSeconds","formatUTCWeekdayNumberMonday","dow","formatUTCWeekNumberSunday","formatUTCWeekNumberISO","formatUTCWeekdayNumberSunday","formatUTCWeekNumberMonday","formatUTCYear","formatUTCFullYear","formatUTCZone","formatLiteralPercent","formatUnixTimestamp","formatUnixTimestampSeconds","locale_dateTime","dateTime","locale_date","locale_time","time","locale_periods","periods","locale_weekdays","days","locale_shortWeekdays","shortDays","locale_months","months","locale_shortMonths","shortMonths","periodRe","periodLookup","weekdayRe","weekdayLookup","shortWeekdayRe","shortWeekdayLookup","monthRe","monthLookup","shortMonthRe","shortMonthLookup","formats","formatShortWeekday","formatWeekday","formatShortMonth","formatMonth","formatPeriod","utcFormats","formatUTCShortWeekday","formatUTCWeekday","formatUTCShortMonth","formatUTCMonth","formatUTCPeriod","parses","parseShortWeekday","parseWeekday","parseShortMonth","parseMonth","parseLocaleDateTime","parseSpecifier","parsePeriod","parseLocaleDate","parseLocaleTime","newParse","newDate","week","toISOString","durationSecond","durationHour","durationDay","durationMonth","durationYear","calendar","formatMillisecond","formatSecond","formatMinute","formatHour","formatDay","formatWeek","tickIntervals","tickInterval","src_time","timeMonth","timeWeek","timeHour","timeMinute","timeSecond","timeMillisecond","src_colors","interpolateCubehelixLong","ramp","sequential","interpolator","d3_scale_chromatic_src_colors","src_ramp","scheme","interpolateRgbBasis","warm","cool","sequential_multi_rainbow","ts","magma","inferno","plasma","UNIT_GLOBAL_NAMESPACE","UNIT_LOCAL_NAMESPACE","LAYER_LOCAL_NAMESPACE","LAYER_GLOBAL_NAMESPACE","GROUP_GLOBAL_NAMESPACE","GROUP_LOCAL_NAMESPACE","CANVAS_LOCAL_NAMESPACE","CANVAS_GLOBAL_NAMESPACE","ReservedFields","ROW_ID","CommonProps","ACTION_INF","ON_LAYER_DRAW","MATRIX_CREATED","d3_axis_src_identity","bottom","epsilon","entering","__axis","axis","orient","tickArguments","tickValues","tickTransform","tickSizeInner","tickSizeOuter","tickPadding","spacing","range0","range1","center","selection","selectAll","tick","tickExit","exit","tickEnter","enter","attr","line","insert","transition","getAttribute","tickSize","pi","tau","tauEpsilon","Path","_x0","_y0","_x1","_y1","moveTo","closePath","lineTo","quadraticCurveTo","y1","bezierCurveTo","x2","y2","arcTo","y0","x21","y21","x01","y01","l01_2","x20","y20","l21_2","l20_2","l21","l01","acos","t01","t21","arc","a0","ccw","dx","dy","cw","da","rect","d3_shape_src_constant","halfPi","asin","arcInnerRadius","innerRadius","arcOuterRadius","outerRadius","arcStartAngle","startAngle","arcEndAngle","endAngle","arcPadAngle","padAngle","cornerTangents","rc","ox","oy","x11","y11","x10","y10","x00","y00","d2","cx0","cy0","cx1","cy1","dx0","dy0","dx1","dy1","cx","cy","Linear","areaStart","_line","areaEnd","lineStart","_point","lineEnd","point","curve_linear","src_line","pointX","pointY","defined","curve","curveLinear","buffer","defined0","src_area","area","x0z","y0z","arealine","lineX0","lineY0","lineY1","lineX1","src_descending","d3_shape_src_identity","curveRadial","Radial","_curve","radial","symbol_circle","draw","symbol_cross","tan30","tan30_2","diamond","kr","kx","ky","star","square","sqrt3","triangle","wye","noop","that","Basis","BasisClosed","_x2","_x3","_x4","_y2","_y3","_y4","BasisOpen","Bundle","beta","_basis","_beta","_x","_y","custom","bundle","_k","Cardinal","tension","cardinal","CardinalClosed","_x5","_y5","CardinalOpen","_l01_a","_l01_2a","_l12_a","_l12_2a","_l23_a","_l23_2a","CatmullRom","alpha","_alpha","x23","y23","curve_catmullRom","catmullRom","CatmullRomClosed","CatmullRomOpen","LinearClosed","slope3","h0","h1","s0","slope2","MonotoneX","MonotoneY","ReflectContext","Natural","controlPoints","_t0","px","py","Step","_t","curve_step","stepBefore","stepAfter","none","series","order_none","stackValue","order_ascending","sums","cubicInOut","polyIn","polyOut","polyInOut","b2","b3","b4","b5","b6","b7","b8","b9","b0","bounceOut","backIn","overshoot","backOut","backInOut","elasticOut","elasticIn","amplitude","period","d3_voronoi_src_constant","elasticInOut","RedBlackTree","RedBlackNode","RedBlackRotateLeft","tree","RedBlackRotateRight","RedBlackFirst","after","grandpa","uncle","createEdge","setEdgeEnd","cells","halfedges","createBorderEdge","vertex","clipEdge","ax","ay","connectEdge","fm","fb","lx","ly","rx","ry","fx","fy","cellHalfedgeAngle","cell","site","va","vb","cellHalfedgeStart","cellHalfedgeEnd","firstCircle","circlePool","attachCircle","lArc","rArc","lSite","cSite","rSite","bx","by","epsilon2","ha","hc","circle","Circle","before","circles","detachCircle","beachPool","createBeach","beach","Beach","detachBeach","beaches","removeBeach","disappearing","iArc","nArcs","addBeach","dxl","dxr","directrix","leftBreakPoint","rightBreakPoint","createCell","newArc","hb","rfocx","rfocy","pby2","lfocx","lfocy","plby2","hl","aby2","triangleArea","lexicographic","Diagram","sites","extent","sortCellHalfedges","clipEdges","clipCells","iCell","iHalfedge","nHalfedges","startX","startY","endX","endY","nCells","cover","dc","v00","v01","v11","v10","polygons","polygon","triangles","e1","links","radius","_found","vx","vy","src_voronoi","voronoi","Selection","_data","_idMap","_dataMap","_mode","_enterdata","_exitdata","newData","idGetter","_idGetter","tempMap","purgedIds","purged","temp","_len","_key","_this5","_len2","_key2","HTMLElement","common_utils_typeof","sanitizeIP","typeObj","nonExistentKeys","checkExistence","getMax","_toConsumableArray","getMin","getDomainFromData","fieldType","domArr","DimensionSubtype","_loop","_fields","_slicedToArray","field0","field1","arr0","firstMin","secondMin","firstMax","secondMax","unionDomain","domains","_ref2","dom","symbolFns","symbolCircle","cross","symbolCross","symbolDiamond","symbolSquare","symbolStar","symbolWye","symbolTriangle","easeFns","cubic","easeCubic","bounce","easeBounce","elastic","easeElastic","back","easeBack","poly","easePoly","circleInOut","getNearestValue","filterData","getWindow","getQualifiedClassName","cancelAnimationFrame","cls","defaultValue","getDependencyOrder","dependencyOrder","visited","visit","objectIterator","Voronoi","common_utils_classCallCheck","_voronoi","_voronoiFn","addListenerToNamespace","namespaceInf","namespace","_listeners","getObjProp","Store","propName","propNames","callBack","on","calculatedProp","intSanitizer","transactor","holder","conf","stateProps","addAsMethod","nameSpaceProp","nsProp","compareTo","paramsLen","prevVal","spreadParams","sanitization","typeCheck","typeExpected","preset","oldValues","generateGetterSetters","propInfo","typeChecker","isEqual","oldVal","newVal","arraysEqual","is","ERROR_MSG","INTERFACE_IMPL","mergeRecursive","sink","createSelection","sel","appendObj","idFn","dataSelect","mergedSelection","numberInterpolator","interpolateNumber","piecewiseInterpolator","rgbToHsv","detectColor","col","getDataModelFromRange","selFields","selFn","getDataModelFromIdentifiers","filteredDataModel","dataArr","filteredSchema","include","registerListeners","listenerMap","_len3","_key3","propListenerMap","local","mapObj","propType","listenerFn","listener","isValidValue","getSymbol","stackOrders","_defineProperty","_stackOrders","stackOrderNone","stackOrderAscending","stackOffsets","_stackOffsets","yp","yn","stackOffsetNone","si","sij0","s3","sk","stack","orderNone","offsetNone","oz","kz","sz","sij","ki","d3Stack","pathInterpolators","curveStepAfter","curveStepBefore","curveStep","curveCatmullRom","Symbols","axisLeft","axisRight","axisTop","axisBottom","pie","descending","arcs","pa","cornerRadius","padRadius","a01","a11","a00","a10","da0","da1","ap","rp","rc0","rc1","p0","p1","oc","intersect","x3","y3","x32","y32","kc","lc","centroid","Scales","scaleBand","getSmallestDiff","points","timeFormats","timeDurations","formatTemporal","nearestInterval","getNearestInterval","getValueParser","retrieveNearestGroupByReducers","nearestReducers","groupDerivation","getParent","filteredReducers","_len4","measureFieldNames","_key4","xhtml","src_namespaces","xlink","xml","xmlns","src_namespace","namespaces","space","creator","fullname","creatorFixed","ownerDocument","creatorInherit","uri","namespaceURI","src_selector","selector","querySelector","selectorAll","querySelectorAll","matcher","matches","element","vendorMatches","webkitMatchesSelector","msMatchesSelector","mozMatchesSelector","oMatchesSelector","sparse","EnterNode","_next","__data__","keyPrefix","bindIndex","groupLength","dataLength","bindKey","nodeByKeyValue","keyValues","src_window","styleValue","classArray","classList","ClassList","_names","classedAdd","classedRemove","contains","textRemove","htmlRemove","nextSibling","lower","previousSibling","constantNull","selection_cloneShallow","cloneNode","selection_cloneDeep","filterEvents","event","mouseenter","mouseleave","filterContextListener","contextListener","related","relatedTarget","compareDocumentPosition","event1","event0","onRemove","typename","__on","removeEventListener","capture","onAdd","wrap","addEventListener","customEvent","sourceEvent","dispatchEvent","CustomEvent","createEvent","initEvent","bubbles","cancelable","detail","groups","parents","_groups","_parents","subgroups","subnode","subgroup","enterGroup","updateGroup","_enter","_exit","groups0","groups1","m0","merges","group0","group1","compareNode","sortgroups","sortgroup","getAttributeNS","attrRemoveNS","removeAttributeNS","attrRemove","removeAttribute","attrFunctionNS","attrFunction","attrConstantNS","attrConstant","priority","styleRemove","removeProperty","styleFunction","setProperty","styleConstant","propertyRemove","propertyFunction","propertyConstant","classed","classedFunction","classedTrue","classedFalse","textFunction","textConstant","html","htmlFunction","htmlConstant","deep","typenames","parseTypenames","dispatch","dispatchFunction","dispatchConstant","src_select","nextId","Local","current","src_point","ownerSVGElement","createSVGPoint","clientX","clientY","matrixTransform","getScreenCTM","inverse","getBoundingClientRect","clientLeft","clientTop","mouse","changedTouches","src_touch","touches","identifier","touch","Dispatch","T","types","nopropagation","stopImmediatePropagation","noevent","preventDefault","nodrag","view","__noselect","MozUserSelect","d3_drag_src_constant","DragEvent","subject","active","defaultFilter","button","defaultContainer","defaultSubject","defaultTouchable","src_drag","mousedownx","mousedowny","mousemoving","touchending","touchable","gestures","clickDistance2","drag","mousedowned","touchstarted","touchmoved","touchended","gesture","beforestart","mousemoved","mouseupped","yesdrag","noclick","clearTimeout","sublisteners","clickDistance","taskHead","taskTail","frame","timeout","pokeDelay","clockLast","clockNow","clockSkew","clock","performance","timer_typeof","now","setFrame","clearNow","Timer","_call","_time","timer","delay","restart","wake","timerFlush","nap","sleep","poke","clearInterval","setInterval","src_timeout","elapsed","emptyOn","emptyTween","CREATED","SCHEDULED","STARTING","STARTED","RUNNING","ENDING","ENDED","transition_schedule","timing","schedules","__transition","self","tween","state","duration","ease","schedule","tweenValue","_id","transition_interpolate","interpolateRgb","interpolateString","Transition","_name","newId","selection_prototype","inherit","id0","id1","onFunction","on0","on1","sit","attrTween","value00","value10","interpolate0","value1","attrTweenNS","styleTween","styleRemoveEnd","removeFunction","tweenRemove","tween0","tween1","tweenFunction","delayFunction","delayConstant","durationFunction","durationConstant","easeConstant","defaultTiming","easeCubicInOut","interrupt","selectElement","makeElement","elemType","callbacks","keyFn","SVGElement","selectorVal","selectorType","actualSelector","enterSel","mergeSel","exitSel","applyStyle","setElementAttrs","attrs","setAttrs","setStyles","styles","createElements","getClientPoint","pos","clientPoint","getEvent","d3event","getD3Drag","d3drag","getSmartComputedStyle","css","textEl","mandatoryStyle","fill-opacity","renderer_utils_typeof","computedStyle","styleForSmartLabel","hasTouch","events","EVENT_LIST","composition","resolveFn","notification","hasOwn","LifeCycleManager","lifecycle_manager_classCallCheck","_eventList","_promises","_notifiers","_lifeCycles","_unreleasedLifeCycles","_boot","_preparePromises","Promise","promise","_makeNotifierPromise","createPromise","then","prm","formalName","client","_releasePromisesFromCache","_notify","stage","_resolvePromise","retrieve","_callLifeCycleCallback","_cachePromise","_resetTargetPromise","lifeCycles","DRAG","HOVER","SELECTIONDRAG","CLICK","LONGTOUCH","TOUCHDRAG","ALL_ACTIONS","SELECTION_NEW_ENTRY","SELECTION_NEW_EXIT","SELECTION_NULL","SELECTION_OLD_ENTRY","SELECTION_OLD_EXIT","SelectionSet","completeSet","_volatile","selection_set_classCallCheck","_completeSetCount","_lockedSelection","_resetted","ids","entrySet","exitSet","lockedSel","addSet","removeSet","updateSet","changeSideEffectAvailability","toEnable","sideEffects","change","enable","disable","getMergedSet","helper_toConsumableArray","conditionsMap","newEntry","SELECTION","oldEntry","mergedEnter","newExit","oldExit","mergedExit","complete","getSetInfo","selectionSet","propagationData","resetted","getModelFromSet","condition","Firebolt","actions","behaviourEffectMap","firebolt_classCallCheck","_sideEffectDefinitions","_sideEffects","_propagationInf","_actions","behavioural","physical","_selectionSet","_volatileSelectionSet","_propagationFields","_sourceSideEffects","selectionBox","_propagationBehaviourMap","_sourceBehaviours","_actionBehaviourMap","_config","_behaviourEffectMap","_entryExitSet","_actionHistory","_queuedSideEffects","mapSideEffects","registerBehaviouralActions","registerSideEffects","registerPhysicalBehaviouralMap","physicalBehaviouralMap","registerPhysicalActions","behEffectMap","preventDefaultActions","effectNames","effects","firebolt_toConsumableArray","behaviours","initializeBehaviouralActions","dispatchableBehaviours","Action","prepareSelectionSets","initializeSideEffects","sideEffectStore","actionHistory","queuedSideEffects","sideEffect","combinedSet","unionSets","behaviour","entryExitSet","existingModel","effect","firebolt_typeof","sideEffectInstance","isEnabled","mutates","dispatchSideEffect","propagationInfo","propagate","getSideEffects","propagationSelectionSet","getPropagationSelectionSet","shouldApplySideEffects","sourceSelectionSet","applicableSideEffects","getApplicableSideEffects","applySideEffects","physicalAction","actionBehaviourMap","behaviourMap","mapActionsAndBehaviour","unsubscribe","onDataModelPropagation","propValue","dispatchBehaviour","uniqueIds","behaviouralActions","volatileSelectionSet","sideEffectDefinitions","sideEffectsMap","SideEffect","sideEffectConf","initedActions","initializePhysicalActions","physicalActions","phyAction","initedPhysicalActions","getDefaultTargetContainer","bindActionWithBehaviour","targets","behaviourList","xFields","yFields","xMeasures","FieldType","yMeasures","filterPropagationModel","_propModel$getData","fieldMap","getFullData","propagationSource","applicableSelectionSets","GenericBehaviour","firebolt","generic_classCallCheck","_enabled","selectionSets","getSelectionSets","_this$firebolt$getAdd","getAddSetFromCriteria","getPropagationInf","setSelectionSet","getEntryExitSet","_selectionSet$getSets","getSets","setConfig","isSourceFieldPresent","getSourceFields","VolatileBehaviour","reset","existingAddSet","updateExit","getCompleteSet","BRUSH","HIGHLIGHT","TOOLTIP","FILTER","SELECT","HighlightBehaviour","BrushBehaviour","BEHAVIOURNAMES","FilterBehaviour","PersistentBehaviour","updateEntry","mergedExitSet","completeSetCount","SelectBehaviour","getDragActionConfig","sourceInfo","axes","xAxis","yAxis","axisFields","xField","getMembers","yField","xFieldType","yFieldType","stPos","startPos","endPos","dragDim","MeasureSubtype","isXDimension","isYDimension","xRange","yRange","selectedDomains","rangeObj","xdom","ydom","snap","getNearestRange","attachDragEvent","targetEl","drawingInf","touchStart","d3Drag","getDrawingContext","getSourceInfo","beh","dragEnd","hover","interaction","tooltip","svgContainer","nearestPoint","getNearestPoint","getAllPoints","showInPosition","generatePayloadFromEvent","click","physical_defineProperty","_physicalActions","ACTIONNAMES","longtouch","touchEnd","touchdrag","PROPS","valueParser","GenericSideEffect","generic_sideeffect_classCallCheck","_strategy","_strategies","defaultConfig","SurrogateSideEffect","interactionType","layers","layer","interactive","applyInteractionStyle","SpawnableSideEffect","_drawingContext","changeVisibility","sideEffectGroup","visible","defClassName","classPrefix","SelectionBox","boxConf","box","drawingContext","unitWidth","unitHeight","selectionGroupClassName","hide","sourceInf","_getBoxDimensionsFrom","getBoxDimensionsFromPayload","direction","xDim","yDim","xLinear","yLinear","xCriteria","yCriteria","x1Val","x2Val","bandScale","x1DomainIndex","x2DomainIndex","_sort2","helper_slicedToArray","getScaleValue","getUnitWidth","y1Val","y2Val","y1DomainIndex","y2DomainIndex","_sort4","_xDim","_yDim","show","selectionBoxDrag","onDrag","boxClassName","INITIAL_STYLE","connectorClassName","margin","content","iconContainerSize","iconScale","iconShape","iconColor","rowMargin","separator","parentClassName","arrow","disabled","getArrowPos","dim","measurement","arrowPos","boxHeight","boxWidth","arrowWidth","plotBottom","boxBottom","plotRight","boxRight","placeArrow","tooltipArrow","_tooltipArrow","tooltipBackground","_tooltipBackground","arrowConf","_arrowOrientation","formatters","strategy_defineProperty","getDefaultTooltipFormatterFn","defaultFormatter","buildTooltipData","fieldValues","fieldspace","detailFields","containsDetailField","dataLen","dimensionMeasureMap","timeDiffs","defFormatter","getRowContent","formattedValue","measureIndex","formatterFn","uniqueVals","strategy_toConsumableArray","colorAxis","shapeAxis","shape","sizeAxis","isRetinalField","associatedMeasures","icon","getColor","getShape","getSize","formattedKey","measureFormatter","margin-left","displayFormat","getTabularData","fieldObj","allMeasures","_construct","strategy","DEFAULT_STRATEGY","Content","content_classCallCheck","_model","_formatter","ctx","_mount","table","tbody","margin-right","el","Tooltip","htmlContainer","tooltip_classCallCheck","connectorContainer","tooltipConf","contentClass","_tooltipContainer","_contentContainer","_contents","_tooltipConnectorContainer","qualifiedClassName","addClass","defConf","contentConfig","reorderContainers","contentConf","render","_target","repositionArrow","arrowDisabled","arrowOrient","outsidePlot","connector","_offset","orientation","_extent","arrowSize","topSpace","dimX","rightSpace","leftSpace","positionTop","positionRight","positionLeft","positionHorizontal","positionVertical","_position","_arrowPos","strategies","showSelectedItems","aggregatedModel","fieldsConf","measureNames","strategies_toConsumableArray","_getPrototypeOf2","side_effects_tooltip_classCallCheck","tooltip_possibleConstructorReturn","tooltip_getPrototypeOf","_tooltips","totalHeight","totalWidth","isEmpty","tooltips","boundBox","dataModels","fragmented","showVertically","tooltipPos","boxes","tooltip_toConsumableArray","sourceFields","indices","plotDimensions","getPlotPointsFromIdentifiers","plotDim","dt","dataTransform","layoutContainer","parentContainerDimensions","layoutBoundBox","unitBoundBox","tooltipInst","TooltipRenderer","timeDiffsByField","positionRelativeTo","tooltipBoundBox","getContents","spaceOutBoxes","spaceOutIfOverlap","firstBox","secondBox","opposite","Crossline","bandWidth","_this$config","bandClass","lineClass","elemData","axisIndex","fieldInst","xOffset","plotWidth","crossline_toConsumableArray","getPlotSpan","getPlotPadding","startPx","endPx","dataPoint","parentGroup","fade","fadeFn","focus","highlight","PlotHighlighter","plot_highlighter_classCallCheck","plot_highlighter_possibleConstructorReturn","plot_highlighter_getPrototypeOf","FilterEffect","entryModel","clearCaching","resetData","enableCaching","addLayer","layerDefs","layerRegistry","layerDef","mark","layerCls","shouldDrawAnchors","depLayerEncoding","encoding","defaultSizeValue","layerObj","instances","getTransitionConfig","calculateDomain","linkedLayer","AnchorEffect","anchors_classCallCheck","anchors_possibleConstructorReturn","anchors_getPrototypeOf","_layersMap","addAnchorLayers","metaInf","registry","layerDefsVal","registerImmediateListener","STATE_NAMESPACES","anchors_slicedToArray","_layers","elems","_linkedLayer$getTrans2","getLayerByName","getTransformedDataFromIdentifiers","transformedData","transformedDataModel","PersistentAnchors","BrushAnchors","behaviour_effect_map_defineProperty","BEHAVIOURS","STACK","ANGLE","RADIUS","SIZE","COLOR","SHAPE","ENCODING","X0","Y0","nearestPointThreshold","strokeOpacity","connectNullData","SimpleLayer","BOTTOM","TOP","LEFT","RIGHT","axisOrientationMap","axis_orientation_defineProperty","_axisOrientationMap","AxisOrientation","LINEAR","BAND","TIME","ORDINAL","QUANTIZE","QUANTILE","LOG","POW","IDENTITY","SEQUENTIAL","THRESHOLD","CONTINOUS","DISCRETE","HIDDEN","scaleLinear","scales","scaleThreshold","scaleLog","scalePow","scaleIdentity","scaleOrdinal","scaleSequential","scaleQuantize","scaleQuantile","scaleTime","scaleMap","scale_creator_defineProperty","_scaleMap","ScaleType","createScale","scaleFactory","adjustRange","axisName","axisNamePadding","fixedBaseline","labels","rotation","smartTicks","numberOfTicks","showAxisName","showInnerTicks","showOuterTicks","yOffset","rotateAxis","instance","tickText","labelManager","renderConfig","getTickSize","yShift","xShift","tickLabelDim","quadrant","rotationNormalizer","angleToRadian","angle","changeTickOrientation","selectContainer","axisInstance","_smartTicks","isSmartTicks","registerAnimationDoneHook","setFixedBaseline","setAxisNamePos","textNode","axisNameHeight","labelOffset","availableSpace","adjustHorizontalRange","adjustVerticalRange","rangeAdjustmentMap","space_setter_defineProperty","_rangeAdjustmentMap","setAxisRange","rangeBounds","getAdjustedRange","getAxisOffset","timeDiff","avWidth","bars","spaceSetter","spaceConfig","heightForTicks","_context$availableSpa","availWidth","availHeight","isOffset","_context$renderConfig","_context$getAxisDimen","getAxisDimensions","tickDimensions","allTickDimensions","axisNameDimensions","tickDimHeight","tickDimWidth","namePadding","labelConfig","minTickDistance","_minTickDistance","minTickSpace","_minTickSpace","_minDiff","minWidthBetweenTicks","minTickWidth","minTickHeight","noOfTicks","getTickValues","maxTickSpaces","widthForTicks","tickShifter","continous","totalTickWidth","getRotatedSpaces","rotatedHeight","rotatedWidth","setOffset","logicalSpace","getAxisComponentDimensions","axisTicks","largestTick","largestTickDimensions","smartTick","_context$config","labelFunc","_tickLabelStyle","originalLabel","getFormattedText","_axisNameStyle","getHorizontalAxisSpace","axisDimensions","_context$config2","axisDimHeight","minTickDiff","getMinTickDifference","cartesian_axis_helper_toConsumableArray","getVerticalAxisSpace","_context$config3","calculateBandSpace","largestDimHeight","_getHorizontalAxisSpa","_getVerticalAxisSpace","getValidDomain","userDom","setContinousAxisDomain","_domain","axisComponentDimensions","oldConfig","mockedOldConfig","shouldAxesScaleUpdate","hasAxesConfigChanged","properties","tickFormatter","sanitizeTickFormatter","_scale","_axis","createAxis","_tickFormatter","_renderConfig","_maxTickSpaces","SimpleAxis","simple_axis_classCallCheck","_dependencies","_range","_domainLock","_axisDimensions","defCon","simpleConfig","bodyElem","dist","_animationDonePromises","domainValue","setAxisComponentDimensions","axisClass","setTickConfig","domainVal","computeAxisDimensions","_getAxisComponentDime","labelHeight","labelWidth","calculateContinousSpace","_context$renderConfig6","axisNameWidth","_getHorizontalAxisSpa2","_getVerticalAxisSpace2","renderAxis","axisNameStyle","tickLabelStyle","axisTickFormatter","labelProps","axisNameSpace","all","LinearInterpolator","LogInterpolator","PowInterpolator","interpolatorMap","continous_axis_defineProperty","_interpolatorMap","ContinousAxis","continous_axis_classCallCheck","continous_axis_possibleConstructorReturn","continous_axis_getPrototypeOf","InterpolatorCls","_interpolator","_this$renderConfig","sanitizeDomain","_this$config2","newTickValues","tickSpace","_this$config3","getNumberOfTicks","labelDim","tickLength","numberOfValues","_this$smartTicks$","BandAxis","_get","band_axis_getPrototypeOf","_this$maxTickSpaces","_getRotatedSpaces","formatTickValue","_this$renderConfig2","TimeAxis","time_axis_classCallCheck","time_axis_possibleConstructorReturn","time_axis_getPrototypeOf","time_axis_get","rawTicks","resetTickInterval","_context$config8","x11Colors","Pink","LightPink","HotPink","DeepPink","PaleVioletRed","MediumVioletRed","LightSalmon","Salmon","DarkSalmon","LightCoral","IndianRed","Crimson","FireBrick","DarkRed","Red","OrangeRed","Tomato","Coral","DarkOrange","Orange","Gold","Yellow","LightYellow","LemonChiffon","LightGoldenrodYellow","PapayaWhip","Moccasin","PeachPuff","PaleGoldenrod","Khaki","DarkKhaki","Cornsilk","BlanchedAlmond","Bisque","NavajoWhite","Wheat","BurlyWood","Tan","RosyBrown","SandyBrown","Goldenrod","DarkGoldenrod","Peru","Chocolate","SaddleBrown","Sienna","Brown","Maroon","DarkOliveGreen","Olive","OliveDrab","YellowGreen","LimeGreen","Lime","LawnGreen","Chartreuse","GreenYellow","SpringGreen","MediumSpringGreen","LightGreen","PaleGreen","DarkSeaGreen","MediumSeaGreen","SeaGreen","ForestGreen","Green","DarkGreen","MediumAquamarine","Aqua","Cyan","LightCyan","PaleTurquoise","Aquamarine","Turquoise","MediumTurquoise","DarkTurquoise","LightSeaGreen","CadetBlue","DarkCyan","Teal","LightSteelBlue","PowderBlue","LightBlue","SkyBlue","LightSkyBlue","DeepSkyBlue","DodgerBlue","CornflowerBlue","SteelBlue","RoyalBlue","Blue","MediumBlue","DarkBlue","Navy","MidnightBlue","Lavender","Thistle","Plum","Violet","Orchid","Fuchsia","Magenta","MediumOrchid","MediumPurple","BlueViolet","DarkViolet","DarkOrchid","DarkMagenta","Purple","Indigo","DarkSlateBlue","SlateBlue","MediumSlateBlue","White","Snow","Honeydew","MintCream","Azure","AliceBlue","GhostWhite","WhiteSmoke","Seashell","Beige","OldLace","FloralWhite","Ivory","AntiqueWhite","Linen","LavenderBlush","MistyRose","Gainsboro","LightGray","Silver","DarkGrey","Grey","DimGrey","LightSlateGrey","SlateGrey","DarkSlateGrey","Black","palette","DEFAULT_GRADIENT_COLOR","DEFAULT_CONFIG","stops","getHslString","hslArr","convertToXllString","baseString","getActualHslColor","paletteColor","hexToHsv","props_toConsumableArray","newConfig","uniqueValues","treatNullMeasures","scaledVal","minDomainScaledVal","getStops","newStops","color_strategy_toConsumableArray","rangeStops","newStopsLength","newRange","hslInterpolator","interpolateHslLong","indexedDomain","scaleDomain","indexedDomainMeasure","normalDomain","steppedDomain","_getStops","continousSteppedDomain","_getStops2","uniqueRange","indexedRange","numVal","normalRange","strategyGetter","domainType","rangeType","schemeType","color_strategy_defineProperty","domainRange","ColorAxis","color_axis_classCallCheck","_domainType","_rangeType","_schemeType","getSchemeType","_colorStrategy","setColorStrategy","updateDomain","colorStrategy","getScheme","colorSchemes","hslColorArray","getRawColor","color_axis_toConsumableArray","scaleInfo","domainRangeFn","transformationArr","newH","newS","newL","newA","size_strategy_defineProperty","pieceWiseRange","size_strategy_toConsumableArray","intervals","newIntervals","discreteRange","SizeAxis","size_axis_classCallCheck","_sizeStrategy","setStrategy","domainInfo","domainFn","generator","ShapeAxis","shape_axis_classCallCheck","_generatedShapes","shapeType","shapeGenerator","generatorFn","generatedShapes","DATA_TYPES","group_transform","data_type_scale_map_defineProperty","_dataTypeScaleMap","groupByIndices","nestCollection","nestFn","identityTransform","transformMap","transform_factory_defineProperty","_transformMap","uniqueField","valueField","normalizedData","normalizeData","uniqueFieldIndex","valueFieldIndex","seriesKeyIndex","seriesKeys","tuples","rowObj","_tuple","seriesKey","newArr","orderBy","orderIndex","groupByIndex","localeCompare","stackData","seriesData","transformFactory","getLayerColor","colorEncoding","colorFieldIndex","rawColor","transfromColor","styleType","intensity","stateColor","originalColor","fillColorInfo","transformColor","interactionStyles","elements","getPlotElementsFromSet","_d$meta","colorTransform","_ref4","helpers_slicedToArray","getAxesScales","_map2","_map4","xScale","yScale","getIndividualClassName","individualClassName","classNameStr","attachDataToVoronoi","_ref5","helpers_toConsumableArray","updateStyle","positionPoints","positioner","encodingTransform","getPlotMeasurement","dimensionalValues","fieldInfo","encodingFieldsInf","transformType","_bandScale","span","groupSpan","offsetValues","actualGroupWidth","dataProps","innerPadding","getGroupSpan","isAxisBandScale","axisPadding","groupPadding","resolveInvalidTransformType","_context$encodingFiel","groupByField","groupByFieldMeasure","getValidTransformForAggFn","resolvedInvalidTransformType","_context$encodingFiel2","isCustomTransformTypeProvided","_customConfig","listener_map_slicedToArray","encodingValue","getEncodingFieldInf","_map6","x0Field","y0Field","colorField","shapeField","sizeField","_map8","_map10","xFieldSubType","yFieldSubType","_map12","xFieldIndex","yFieldIndex","x0FieldIndex","y0FieldIndex","resolveTransformType","_transformedData","getTransformedData","_normalizedData","getNormalizedData","calculateDomainFromData","_updateLock","getRenderProps","registerChangeListener","renderLayer","throwback","commit","defaultOptions","default_options_defineProperty","_defaultOptions","newConf","defaultPolicy","_cacheEnabled","_cachedData","BaseLayer","base_layer_classCallCheck","base_layer_possibleConstructorReturn","base_layer_getPrototypeOf","base_layer_assertThisInitialized","alias","_points","_measurement","_store","localNs","initializeGlobalState","globalState","getState","helpers_defineProperty","base_layer_defineProperty","global","unitRowIndex","unitColIndex","_encodingFieldsInf","_encodingTransform","_alias","transformData","encodingFieldInf","yEnc","xEnc","encodingType","transformedDataArr","fieldsLen","pointObj","_transformType","getValidTransform","pointMap","_pointMap","_dataProps","_this$encodingFieldsI","base_layer_slicedToArray","xMeasure","yMeasure","_identifiers$","_identifiers$2","xMeasureIndex","yMeasureIndex","getAllAttrs","filteredPoints","base_layer_toConsumableArray","sizeVal","enc","_identifiers$getData","identifierData","identifierSchema","_this$encodingFieldsI2","tupleArr","transformedVal","base_layer_construct","userConf","drawLine","curveInterpolatorFn","linepath","LineLayer","line_classCallCheck","line_possibleConstructorReturn","line_getPrototypeOf","isXDim","isYDim","xPx","yPx","_getLayerColor","stroke","rowId","cachePoint","seriesClassName","containerSelection","animateGroup","groupTransition","groupAnimateStyle","stroke-opacity","getPathStyle","translatePoints","colorValFn","colorVal","getDrawFn","searchRadius","_point$data$data","getIdentifiersFromData","layerId","drawArea","easeEffect","renderer_slicedToArray","enterAreaPath","updateAreaPath","selectionEnter","AreaLayer","area_get","area_getPrototypeOf","_getAxesScales","classNameFn","y0Px","invalidY","invalidY0","minOuterRadius","stroke-width","stroke-linejoin","innerRadiusFixer","states","fadeout","selected","ArcLayer","arc_classCallCheck","arc_possibleConstructorReturn","arc_getPrototypeOf","_prevPieData","pieData","pieIndex","prevData","_getFieldIndices","getFieldIndices","arc_helper_slicedToArray","angleField","radiusField","angleIndex","sizeIndex","radiusIndex","colorIndex","dataVal","uid","outerRadiusValue","angleVal","_previousInfo","getPreviousPoint","currIndex","prevArc","nextArc","_dataPoint$datum","_this$measurement","chartHeight","chartWidth","qualClassName","getRadiusRange","defaultRadius","radiusDomain","rangeValueGetter","getRangeValue","domainMultiplier","sizeAxisDomain","sizeMultiplier","_chartWidth","_chartHeight","consecutiveExits","exitCounter","arcFn","tweenPie","individualClass","tweenExit","exitArr","oldExitCounter","tweenExitPie","consecutiveExitArr","gElem","pieSlices","pieSliceInf","tData","drawText","selectionMerge","backgroundVal","textanchor","textStyle","background","backgroundPadding","_smartLabel$getOriSiz","backgroundEl","TextLayer","textEncoding","textField","textFormatter","backgroundEncoding","backgroundValue","textFieldIndex","textValue","text_slicedToArray","text-anchor","drawSymbols","createShape","groupElement","Element","newShape","nodeName","src","href","shapeElement","pathStr","checkPath","exitGroup","defColorStyle","fillOpacity","shapes","sizes","PointLayer","point_classCallCheck","point_possibleConstructorReturn","point_getPrototypeOf","sizeEncoding","shapeEncoding","sizeValue","shapeFieldIndex","sizeFieldIndex","_config$offset","offsetX","offsetY","point_slicedToArray","maxSize","generateDataPoints","point_toConsumableArray","drawFn","getMarkId","_maxSize","_getPlotMeasurement2","widthMetrics","heightMetrics","offsetXValues","offsetYValues","measurementConf","getMeasurementConfig","widthSpan","heightSpan","distanceLimit","drawRects","barEnterFn","transitionBars","selTransition","resolveDimByField","axesInfo","spaceType","sizeConfig","enterSpace","minVal","maxVal","diffPx","zeroPos","axisType","axisType0","resolveDimensions","_resolveDimByField","enterWidth","enterX","xPos","_resolveDimByField2","enterHeight","BarLayer","bar_classCallCheck","bar_possibleConstructorReturn","bar_getPrototypeOf","_plotPadding","_plotSpan","bar_get","getTranslatedPoints","normalizedDataArr","clipElement","clipPathElement","bar_slicedToArray","barWidthMetrics","barHeightMetrics","barWidthOffsets","barHeightOffsets","barWidth","barWidthOffset","barHeight","barHeightOffset","uniqueFieldType","pointFound","bar_toConsumableArray","p2","tick_renderer","ticksEnter","TickLayer","_config$span","xSpan","ySpan","x0Px","drawTicks","AREA_LAYER","ARC_LAYER","LINE_LAYER","TEXT_LAYER","POINT_LAYER","BAR_LAYER","TICK_LAYER","SIMPLE_LAYER","BASE_LAYER","sanitizeEncoding","layerFactory","compositeLayers","factoryObj","setLayerRegistry","reg","_layerRegistry","getSerializedConf","serializedDefs","defs","unitLayerDef","sDef","parseLayerDefinition","layerType","strs","layer_factory_toConsumableArray","getLayerInstance","layerConstructor","getLayerClass","composeLayers","sanitizeLayerConfig","DEFAULT_LAYERS","defaults_defineProperty","_DEFAULT_LAYERS","LAYER_TYPES","ROWS","COLUMNS","COL","ROW","CELL","X_AXES","Y_AXES","ENTRY_CELLS","EXIT_CELLS","PRIMARY","SECONDARY","local_options","local_options_defineProperty","_CONFIG$ROWS$COLUMNS$","SimpleGroup","Variable","ComposedVars","composed_vars_classCallCheck","texts","composed_vars_possibleConstructorReturn","composed_vars_getPrototypeOf","vars","_vars","member","getMinDiff","SimpleVariable","simple_var_classCallCheck","simple_var_possibleConstructorReturn","simple_var_getPrototypeOf","oneVar","_oneVar","dtFormat","minimumConsecutiveDifference","varInst","convertToVar","transformFields","field_sanitizer_slicedToArray","normalizedFields","normalizeFields","norFields","orderFields","fieldArray","temporalArr","categoricalArr","fieldList","numOfMeasures","allDimensions","field_sanitizer_toConsumableArray","rowsInfo","columnsInfo","rowDimensions","rowMeasures","rowTemporalFields","rowCategoricalFields","columnDimensions","columnMeasures","columnTemporalFields","columnCategoricalFields","VisualEncoder","_fieldInfo","_axisFrom","_headerFrom","__headerFrom","axisFrom","_getHeaderAxisFrom2","visual_encoder_slicedToArray","getHeaderAxisFrom","rowHeader","rowAxis","_getHeaderAxisFrom4","colHeader","colAxis","headerFrom","scaleMaps","dataTypeScaleMap","generateAxisFromMap","axesCreators","axisKey","groupAxes","currentAxes","cacheMaps","commonAxisKey","getAxisKey","axisConfig","getAxisConfig","axisInfo","axisOrientation","userAxisConfig","_rotationLock","resetDomain","createSimpleAxis","Cls","getIndex","arrIndex","CartesianEncoder","geomCellAxes","projections","rowFields","columnFields","rowIndex","columnIndex","xAxes","yAxes","lock","unlock","unitDomains","units","1","rIdx","unitsArr","_loop2","cIdx","len2","_resolver$axes","axesArr","adjustedDomain","alignZeroLine","getAdjustedDomain","y1ratio","y2ratio","allSameSign","facets","counter","primaryFacets","secondaryFacets","primaryFields","secondaryFields","primaryLen","secondaryLen","projArr","primaryField","secondaryField","facet","existIndex","axisFromIndex","cartesian_encoder_get","cartesian_encoder_getPrototypeOf","groupedModel","encodingObj","retriveDomainFromData","layerArray","serializedLayers","userLayerConfig","layerConfig","colField","colFieldName","rowField","configs","rowFieldName","rowFieldType","getDefaultMark","colFieldType","defConfigs","layerConfigs","getLayerConfFromFields","colFields","encodingArr","encoder_helper_toConsumableArray","colFieldExist","rowFieldExist","layerConf","mergedLayerConf","serializedLayerConfig","cartesian_encoder_toConsumableArray","PolarEncoder","pieAxes","domainProps","sanitizedRows","sanitizedColumns","polar_encoder_get","polar_encoder_getPrototypeOf","sanitizedFields","typeIndex","fieldSet","polar_encoder_toConsumableArray","facetFields","layerEncoding","encType","polar_encoder_defineProperty","RetinalEncoder","newAxes","createRetinalAxis","fieldProps","getAxisType","encodingConfigs","isDistributionEqual","group_utils_toConsumableArray","rowType","initializeCacheMaps","cellMap","xAxesMap","yAxesMap","entryCellMap","exitCellMap","headerCreator","fieldHeaders","TextCell","getHeaderText","rowLength","userAxisFromConfig","group_utils_slicedToArray","firstField","secondField","firstFieldType","secondFieldType","setFacetsAndProjections","encoder","_encoder$simpleEncode","simpleEncoder","getFacetsAndProjections","group_utils_defineProperty","getBorders","matrices","showRowBorders","showColBorders","showValueBorders","valueMatrix","_rows","leftRows","rightRows","_columns","topColumns","bottomColumns","_encoder$fieldInfo","allDimensionLength","allMeasuresLength","allTemporalFieldsLength","getRowBorders","borders","getColumnsBorders","getValueBorders","borderTypeRow","borderTypeCol","action_behaviour_map_defineProperty","ACTIONS","getLayerFromDef","existingLayer","_layerDeps","inst","colIndex","instanceArr","_timeDiffs","resolveEncodingTransform","layerInst","resolvable","depArr","sanitizeLayerDef","sanitizedDefs","sConf","getLayersBy","searchBy","removeLayersBy","createRenderPromise","_renderedPromise","_renderedResolve","GRID_BAND","GRID_LINE","getGridLayerDefinitions","getDefaultVisibilty","getLayerDefinition","_definition","_encoding","gridLines","gridBands","gridLineColor","zeroLineColor","gridBandColor","isLinearScale","grid_lines_defineProperty","isNegativeDomain","attachDataToGridLineLayers","_gridLines","_gridBands","gridLayerData","getGridLayerData","gridData","jsonData","_jsonData$push","grid_lines_toConsumableArray","trackerClassName","arcLayerClassName","sideEffectClassName","src_local_options","src_local_options_defineProperty","_CONFIG$LAYERDEFS$TRA","cachedData","local_options_toConsumableArray","oldData","calculateDomainListener","unionDomainFromLayers","layerAxisIndex","getDataDomain","domainValues","layerDomain","fieldDomain","fieldStr","_layerAxisIndex","src_listener_map_slicedToArray","fieldsVal","removeExitLayers","layersMap","markSet","listenerInf","hasPlotSpan","_lifeCycleManager","notify","axesObj","temporalFields","filteredFields","_ref6","_ref7","_ref8","_ref9","_ref10","_timeDiffsByField","createGridLineLayer","vuConf","createGridLines","createFn","iteratorFn","atomicDef","_ref11","_ref12","transformDataModels","transformVal","_ref15","_ref16","layerAxisIndexVal","axesVal","lyr","disableUpdate","attachDataToLayers","transformedDataModels","dataSource","enableUpdate","_dimensionMeasureMap","getDimensionMeasureMap","retinalEncodingsAndMeasures","_layer$encodingFields","_retinalEncodingsAndM","src_helper_toConsumableArray","retinalFields","attachAxisToLayers","axisInf","props_defineProperty","_PROPS","createSelectionSet","originalData","attachPropagationListener","firebolt_helper_slicedToArray","dispatchQueuedSideEffects","firebolt_helper_toConsumableArray","clearActionHistory","payloadGenerator","brush","selectionDataModel","propPayload","getRangeFromData","propCriteria","isDimension","payload_generator_toConsumableArray","__default","propagateValues","propagationFieldInf","propagationFields","sideEfffects","mergedModel","sourceUnit","sourceCanvas","parentAlias","propagationBehaviour","propFields","facetByFields","getModelWithFacetData","schema1","data1","schema2","data2","data_propagator_toConsumableArray","groupId","behaviourInstance","propagationConf","sourceBehaviour","enabled","propConf","propInf","UnitFireBolt","src_firebolt_classCallCheck","firebolt_possibleConstructorReturn","firebolt_getPrototypeOf","firebolt_assertThisInitialized","unitId","aliasName","propagationSourceCanvas","sourceUnitId","sourceSideEffects","sideEffectInstances","actionOnSource","mappedEffects","se","sideEffectChecker","enabledFn","payloadFn","sourceIdentifierFields","sourceBehaviours","firebolt_get","VisualUnit","visual_unit_classCallCheck","visual_unit_defineProperty","lifeCycleManager","_gridLinesSelection","_gridBandsSelection","_layerNamespaces","_transformedDataModels","localOptions","_firebolt","_rootSvg","class","renderGridLineLayers","gridLineParentGroup","_entry","grid_lines_slicedToArray","parentGroupClass","renderLayers","orderedLayers","layerParentGroup","layerDepOrder","_layerDepOrder","_sideEffectGroup","createSideEffectGroup","initSideEffects","rootSvg","_this$parentContainer","parentContainerInf","layerDefinition","layerDefinitions","components","layerIndex","startIndex","visual_unit_toConsumableArray","layersArr","_layersArr","markId","defArr","instanceValues","layerdeps","getLayerAxisIndex","_layer$config","stateStore","parentModel","dimValue","getNearestDimensionalValue","entryVal","pointInf","getMarkInfFromLayers","markInf","parsedIdentifiers","transposeArray","getPointsFromIdentifiers","visual_unit_construct","getFieldNames","fields1","matrix_model_toConsumableArray","createSelectedDataModel","uniqueKeyGenerator","keyArray","nextDepthUniqueValues","projectRows","allColumnProjections","rowProjections","optionalProjections","projectFields","_getFieldNames2","matrix_model_slicedToArray","projFieldNames","colProjFieldNames","pushToMatrix","valueCellCreator","_matrix$rowIndex","facetInfo","colProjections","rowProj","projIdx","_getFieldNames4","rowProjFieldNames","projectedDm","createValueCells","suppliedLayers","GeomCell","matrixLayers","horizontalAxis","verticalAxis","datamodelTransform","layerConfigArr","getLayerConfig","normalizedColumns","normalizedRows","geomCellKey","getCellKey","columnId","allFacets","cell_creator_toConsumableArray","rowFacets","colFacets","geomCell","updateCells","facetKey","createAxisCells","axisInst","_axisInst$config","AxisCell","BlankCell","headerPlaceholderGn","selectionObj","selectionKeys","keySet","createTextCells","generatePlaceholders","facetsAndProjections","encoders","valuesMatrix","rowKeys","columnKeys","takeAxisFrom","takeHeaderFrom","axisPlaceholderGn","selObj","axesMatrix","selObjProp","axesForDraw","rowsPrimary","rowPrime","columnsPrimary","colPrime","_selectionObj","rowsSecondary","columnsSecondary","getObjects","section","hContext","computeMatrices","componentRegistry","globalConfig","autoGroupBy","otherEncodings","matrixGnContext","getCellDef","isRowSizeEqual","isColumnSizeEqual","colCells","rowCells","resetSimpleAxes","newCacheMap","valueCellContext","serializeLayerConfig","extractFields","layerFields","flattenArray","getFieldsFromSuppliedLayers","suppliedLayerConfig","aggregationFns","nearestAggFns","resolvedAggFns","valueMatrixInfo","getMatrixModel","rowDataModels","colProj","firstLevelRowKeys","_rowDataModels","rowFacetFieldNames","selectedDataModel","newProjectedDataModels","_rowDataModels2","colFacetNames","firstLevelColumnKeys","dme","rIndex","cIndex","transposedColKeys","valueCellsCreator","placeholder","_mutateAxesFromMap","mutateAxesFromMap","xAxisSet","yAxisSet","axisId","createUnits","_generateMatrices","generateMatrices","leftHeaders","topHeaders","bottomHeaders","rightHeaders","cell_creator_slicedToArray","rowSec","colSec","leftFacets","rightFacets","rowPriority","colPriority","leftMatrix","rightMatrix","topMatrix","bottomMatrix","currentBottomLength","setAvailableSpace","rowMatrix","columnMatrix","RESOLVER_PROPS","MatrixResolver","matrix_resolver_classCallCheck","_registry","_layerConfig","_matrixLayers","_rowMatrix","_columnMatrix","_valueMatrix","_facets","_projections","_datamodelTransform","_units","_cacheMaps","_axes","maps","matrix_resolver_toConsumableArray","_horizontalAxis","_verticalAxis","matrixType","sideEffectRegistry","_this$dependencies","unitConfig","extractUnitConfig","globalStates","_this$getAllFields","retContext","getRetinalFieldsDomain","retinalEncoder","setCommonDomain","_this$axes","_this6","retinalAxes","updateModel","placeholders","bottomLeft","bottomRight","_this$dependencies3","showHeaders","matrix_resolver_slicedToArray","topCols","bottomCols","rowHeaders","blankCellCreator","footers","topLeft","topRight","ValueMatrix","matrixArr","value_matrix_classCallCheck","instancesById","cellValue","_instancesById","_matrix","_filterFn","rowWidth","currentRowWidth","getLogicalSpace","rowHeight","currentRowHeight","setMatrixInstances","_composition","createMatrices","matrixConfig","unsubscribeChangeListeners","retinalConfig","sanitizeRetinalConfig","retinalConf","confValue","getEncoder","groupType","fieldSanitizer","setAxisAndHeaders","placeholderInfo","getMatrices","_groupedDataModel","createRetinalAxes","setDomains","cornerMatrices","createHeaders","metaData","border","unionUnitDomains","registerDomainChangeListener","visual_group_props_defineProperty","visual_group_props_PROPS","cellRegistry","VisualGroup","visual_group_classCallCheck","visual_group_possibleConstructorReturn","visual_group_getPrototypeOf","componentSubRegistry","visual_group_assertThisInitialized","_selection","createUnitState","visual_group_helper_slicedToArray","createLayerState","setupChangeListeners","variable","findInGroup","channel","group_utils_this","facetType","projType","getRetinalAxes","getSimpleAxes","_this$resolver$getAll","visual_group_defineProperty","existingRemoveSet","select_toConsumableArray","firebolt_action_behaviour_map_defineProperty","action_behaviour_map_actionBehaviourMap","propagationBehaviourMap","_propagationBehaviour","firebolt_behaviour_effect_map_defineProperty","firebolt_behaviour_effect_map_behaviourEffectMap","propagationSideEffects","_propagationSideEffec","SCALE_FUNCTIONS","VALUE","canvasAlias","rawVal","check","assembleModelFromIdentifiers","src_firebolt_helper_toConsumableArray","LegendFireBolt","_Firebolt","legend_firebolt_classCallCheck","legend_firebolt_possibleConstructorReturn","legend_firebolt_getPrototypeOf","legend_firebolt_inherits","legend_firebolt_createClass","behaviourName","getCriteriaFromData","firebolt_physical_defineProperty","physical_physicalActions","boundingBox","gradientDimensions","axisScale","rangeShifter","drag_defineProperty","getSelectionCriteria","selectionBoxMeasure","drawingInfMeasure","subjectStartPoint","gradientDimension","legendGradContainer","legendSelGroup","enterFn","getMousePos","boundingClientRect","selection_box_drag_defineProperty","fadeOut","brighten","LegendHighlighter","legend_highlighter_classCallCheck","legend_highlighter_possibleConstructorReturn","legend_highlighter_getPrototypeOf","legendContainer","resetLogicalSpace","title","_title","ALIGN","DEFAULT_MEASUREMENT","LEGEND_TITLE","borderStyle","borderColor","bounds","upper","ICON_MAP","getScaleInfo","scaleType","steps","scaleFn","getInterpolatedData","domainForLegend","interpolatedFn","getDomainBounds","domainBounds","domainLeg","ele","legend_helper_defineProperty","getScaleFactor","SimpleLegend","simple_legend_classCallCheck","_metaData","_fieldName","_labelManager","_cells","defaultMeasurement","_computedStyle","legendBehaviours","_canvasAlias","getItemMeasures","_labelManager$getOriS","effPadding","effBorder","effMargin","dataFromScale","titleSpace","getTitleSpace","titleHeight","titleWidth","labelSpaces","getLabelSpaces","_computeItemSpaces","computeItemSpaces","maxItemSpaces","textOrientation","itemSpaces","iconSpaces","maxIconWidth","labelSpace","itemSpace","iconSpace","newLabelWidth","titleSpaces","_this$measurement2","titleCreator","titleContainer","marginPosition","_this$config4","_this$measurement3","renderTitle","simple_legend_defineProperty","legendOrientation","position_config_defineProperty","_legendOrientation","datasets","itemContainerMeasures","getStepSpacesInfo","iconHeight","iconWidth","stepPadding","horizontal","vertical","positionConfig","_positionConfig","alignmentMap","_alignmentMap","itemStack","_itemStack","createLegendSkeleton","gradWidth","gradHeight","maxGradHeight","maxGradWidth","legendBody","legendItem","getItemContainers","legendInstance","positionObj","createItemSkeleton","itemSkeleton","alignClass","applyItemStyle","measureType","stepColorCheck","_context$measurement","renderIcon","defaultIcon","DiscreteLegend","_getScaleInfo","discrete_legend_toConsumableArray","_field$schema","discrete_legend_defineProperty","discrete_legend_get","discrete_legend_getPrototypeOf","renderDiscreteItem","_context$measurement2","_item$icon","text-align","getGradientDomain","accumulator","currentValue","MAX_VALUE","MIN_VALUE","legendGradSvg","legendGradCont","linearGradient","makeLinearGradient","legendRect","GradientLegend","gradient_legend_toConsumableArray","gradient_legend_defineProperty","newAxis","axisSpace","axisDomainLength","_legendGradientSvg","gradient_legend_get","gradient_legend_getPrototypeOf","renderGradient","_createLegendSkeleton","StepLegend","step_legend_toConsumableArray","step_legend_defineProperty","lowerBounds","upperBounds","step_legend_get","step_legend_getPrototypeOf","stepData","renderStepItem","_context$measurement3","_item$icon2","_positionConfig$posit","PADDING","BORDER","MARGIN","TITLE_TEMPLATE_NOT_ALLOWED_TAGS","LEGEND_TYPE_MAP","constants_defineProperty","_LEGEND_TYPE_MAP","HORIZONTAL_CENTER","VERTICAL_CENTER","share","operators_construct","operators_toConsumableArray","strings","htmlCode","expLn","frag","createDocumentFragment","treeShakeNode","nodeType","Node","ELEMENT_NODE","tagName","_didIteratorError","_iteratorError","_step","_iterator","childNodes","err","canvasIterator","canvases","cFn","canvas","visualGroup","matrixInstance","_throwback","actionModel","ActionModel","action_model_classCallCheck","_registrableComponents","registerPropagationBehaviourMap","dissociateBehaviour","_len5","_key5","dissociateSideEffect","policy","registrableComponents","mergedPolicy","aliases","comp","*","propagationPayload","propagationCanvas","crossInteractionPolicy","TITLE_CONFIG","SUB_TITLE_CONFIG","maxLines","LAYOUT_ALIGN","canvas_local_options_defineProperty","_localOptions","canvasOptions","_canvasOptions","_sanitized","titleConfig","subtitle","sub","subtitleConfig","LayoutComponent","layoutComponent_classCallCheck","_boundBox","_renderAt","_alignWith","_alignment","_componentName","_className","DummyComponent","newDimensions","renderAt","component","componentName","pagination","scrollBar","thickness","speed","legend","minHeight","minCharacters","verticalAlign","collapse","invalidValues","DEFAULT_WIDTH","DEFAULT_HEIGHT","DEFAULT_CLASS_NAME","NODE_PREFIX","DefinitionModel","definitionModel_classCallCheck","_host","host","_cut","cut","_ratioWeight","ratioWeight","_preferred","preferred","_lanes","lanes","_remainingHeight","_remainingWidth","remainingHeight","remainingWidth","getNodeId","_uid","yExtraSpace","smallestHeight","getCutType","smallestExtraHeightHorizontally","MAX_SAFE_INTEGER","containerHeight","hostHeight","xExtraSpace","smallestWidth","smallestExtraWidthVertically","containerWidth","hostWidth","createPlaceHolderComponent","placeComponent","definitionModel","leftOvercomponentRationWidth","isPreferred","isGridComponent","componentRatioWidth","leftHeight","leftWidth","_component$getLogical","componentHeight","componentWidth","firstLaneConfig","firstLane","secondLane","tree_classCallCheck","_parentCut","_this$_children","tree_toConsumableArray","parentCut","bound","nodeconfig","searchNode","childNode","nodeId","deleteSearchNode","LayoutModel","measurements","layout_model_classCallCheck","_measurements","_root","createTree","setBoundBox","addChildren","lane","allocateBoundingBox","totalWeight","carry","lastSibling","ratio","setHostSpatialConfig","setHostPosition","negotiateDimension","alteredDim","nonAlteredDim","cumultiveExtraSpaceAmt","childrenLength","extraSpaceAmt","computePosition","determineBoundBox","bb","_lastSibling$boundBox","_top","_left","_height","_width","_instance$parent$boun","setSpatialConfig","Utils","utils_createClass","isDOMElement","getID","getElement","findContainer","coordinate","removeDiv","divId","DataPoint","data_point_classCallCheck","DataParser","data_parser_classCallCheck","data_parser_createClass","defaultDataPointLogic","nodepoints","getnodePoints","datapoint","HTMLDataAdapter","_DataParser","html_data_classCallCheck","html_data_possibleConstructorReturn","html_data_getPrototypeOf","html_data_inherits","html_data_createClass","getCoordinates","html_data_get","Renderer","renderer_classCallCheck","renderer_createClass","initRenderer","__logicalTree","HTMLRenderer","_Renderer","html_renderer_classCallCheck","html_renderer_possibleConstructorReturn","html_renderer_getPrototypeOf","_coordinates","html_renderer_inherits","html_renderer_createClass","createhtml","mainDiv","html_renderer_get","parentDiv","createAndCustomiseParent","hasHost","createAndPositionDiv","_objectSpread","div","coordinates","findNode","nodeID","renderer","renderHTML","DrawingManager","drawing_manager_classCallCheck","_componentMap","componentMap","_layoutClassName","layoutClassName","_renderer","drawing_manager_createClass","drawLayout","resolveAligment","componentData","alignWith","newNodeConfig","refNode","alignment","drawComponent","DefinitionManager","definition_manager_classCallCheck","_prioritySequence","_totalHeight","_totalWidth","_targetComponentMap","prepareTargetComponentMap","targetComponentMap","canvasComponent","tempDefModel","componentRef","getComponent","placeGridComponent","gridComponents","iscolumnPreffered","_placeComponent","rowpreffred","LayoutDef","layout_def_classCallCheck","_layoutDefinition","layout_def_createClass","addComponent","layoutDefinition","addMultipleComponent","componentArray","sanitizedDefinition","sanitizeConfig","hostObj","hostID","childHost","resetComponentMap","LayoutManager","layout_manager_classCallCheck","_dimension","_skeletonType","skeletonType","_layoutDef","_drawingManager","_rootNodeID","con","resetNode","updateNode","compute","_layout","calLayOutDef","_context$dimension","layoutDef","prioritySequence","generateConfigModel","negotiate","broadcast","layoutComponents","componentArr","compo","setupChangeListener","allOptions","_allOptions","canvas_helper_toConsumableArray","nameSpaceProps","equalityChecker","option","updateChecker","dispatchProps","_cachedProps","notifyAnimationEnd","centerMatrix","layout","viewInfo","viewMatricesInfo","promises","cellArr","lifeCycle","animDonePromises","animationDone","axisArr","applyInteractionPolicy","interactionPolicy","_interactionPolicy","_crossInteractionPolicy","unitFireBolt","changeBehaviourStateOnPropagation","changeSideEffectStateOnPropagation","createLayoutManager","src_options","isInteger","minUnitWidth","minUnitHeight","oldConf","fixScrollBarConfig","VIEW_INDEX","ROW_MATRIX_INDEX","2","COLUMN_MATRIX_INDEX","HEIGHT","ROW_ROOT","COLUMN_ROOT","VERTICAL","HORIZONTAL","GenericLayout","generic_layout_classCallCheck","_matrices","_centerMatrix","_mountPoint","DEFAULT_CONFIGURATION","grid_layout_defaults_defineProperty","_DEFAULT_CONFIGURATIO","_FieldNames$BORDER","DEFAULT_MEASUREMENTS","_DEFAULT_MEASUREMENTS","findInPage","page","combineMatrices","isTransposed","joinedMatrix","utils_toConsumableArray","rowData","computeLogicalSpace","maxMeasures","_config$isTransposed","unitMeasures","_getMeasureInfo","getMeasureInfo","firstMeasure","secondMeasure","minMeasures","getMinMeasures","_logicalSpace","utils_defineProperty","valueItem","maxMeasure","firstMeasureValue","secondMeasureValue","valueArray","_item$space","fMeasure","sMeasure","createMatrixEachLevel","_arr$i","extraCellsRemover","beg","distribution","extraCellLengths","VisualMatrix","visual_matrix_classCallCheck","_lastLevelKey","_primaryMatrix","_secondaryMatrix","_maxMeasures","_availableSpace","_layoutMatrix","_tree","_createTree2","matrixTree","lastLevelKey","layoutMatrix","primaryMatrix","secondaryMatrix","breakPage","primaryMatrixLength","newMatrix","keyLength","heightMeasures","populateMaxMeasures","widthMeasures","calculateDepth","viewableMatrix","createViewPortMatrix","viewableMeasures","redistributeSpaces","childDepth","createMatrixInstances","matrixInfo","breakPointer","_breakPointer","brokenMatrix","breakMatrix","nextLevel","removeExtraCells","RowVisualMatrix","row_matrix_classCallCheck","row_matrix_possibleConstructorReturn","row_matrix_getPrototypeOf","maxHeights","maxWidths","matrixInst","cellDimOptions","matrixIndex","_this2$getCellDimensi","getCellDimensions","widths","rowHeights","columnWidths","primary","secondary","begCellLen","endCellLen","remainaingAvailWidth","remainaingWidth","cWidths","conditions","maxPrioritySpace","availableWidth","currentWidth","prioritySpace","logicalWidths","getPriorityDistribution","mWidth","mHeight","redistributeViewSpaces","computeViewableSpaces","rHeights","gutter","spaceTakenByColumn","spaces","getDistributedHeight","heightWithoutGutter","distSum","gutterSum","availableHeight","colLen","distHeight","borderWidth","colHeight","colWidth","heights","ColumnVisualMatrix","column_matrix_classCallCheck","column_matrix_possibleConstructorReturn","column_matrix_getPrototypeOf","remainaingHeight","heightDist","divider","spaceTakenByRow","getDistributedWidth","layoutConfig","distWidth","rowLen","oldLogicalSpace","heightDistribution","getMatrixMeasurement","setViewSpaces","pointerType","viewSpaces","pointer","computations_defineProperty","paginationDetailsMap","scrollType","paginationMeasureGetter","relatedMaxMeasure","getMatrixMeasureForPagination","measureDetails","actualMeasure","scrollInfo","getMatrixHeightDetails","columnMatrixWidth","_getHeightRequiredByC","getHeightRequiredByColMatrix","maxColumnMatrixHeight","columnViewSpace","getViewableSpaces","columnPointer","columnMatrixHeight","maxHeightAvailableForRowMatrix","rowMatrixHeight","bufferCondition","isScroll","getActualBufferFromConfig","computations_slicedToArray","getBufferFromCondition","currentBufferType","horizontalBuffer","verticalBuffer","computeLayoutMeasurements","_getMatrixWidthDetail","getMatrixWidthDetails","_layout$config3","rowMatrixWidth","maxRowMatrixWidth","maxWidthAvailableForColumnMatrix","_getMatrixHeightDetai","_getActualBufferFromC","rowViewableSpaces","columnViewableSpaces","setValueMatrixMeasurements","computations_toConsumableArray","rowWidthsPrimary","rowWidthsSecondary","columnHeightsPrimary","columnHeightsSecondary","measureSum","total","GridLayout","layout_classCallCheck","layout_possibleConstructorReturn","layout_getPrototypeOf","_layoutId","_viewInfo","defaultViewInfo","_scrollInfo","generateVisualMatrices","begColCells","endColCells","gutterSpace","layout_helper_slicedToArray","_center","_bottom","layout_helper_toConsumableArray","RowMatrix","ColumnMatrix","layout_get","_computeLayoutMeasure","setViewInformation","pageNumber","pageType","totalPages","layout_defineProperty","renderGrid","currentPage","maxRowHeight","maxColWidth","rowPointer","getViewMatrices","rowMatrices","getViewableMatrices","columnMatrices","centralMatrixPointer","rowMatrixLen","columnMatrixLen","rowPages","columnPages","layoutDimensions","getViewMeasurements","_layout$config","rowSpaces","colSpaces","rightWidth","topHeight","bottomHeight","centerHeight","centerWidth","viewWidth","viewHeight","actualCenterMeasures","totalMeasures","unitHeights","unitWidths","borderMap","border_helper_defineProperty","_borderMap","specificBorderApplier","borderTypes","showBorders","borderInfo","borderType","applySpecificBorder","applyBorders","borderApplierFn","borderApplier","borderMapVal","orderMaker","nestByStack","updateArr","optionalParams","currStack","prevStack","arrVal","stackVal","currElemIndex","newElem","arrElem","returnArr","spanCalculator","isNull","maskCreator","_nestByStack","viewMatrix","hierarchy","_nestByStack2","spanGenerator","spans","ridx","currSpan","getOrder","isReverse","matrixSpanGeneratorMap","span_maker_defineProperty","_matrixSpanGeneratorM","orderGetter","viewMatrixMaker","spanMaker","matrixSpanGenerator","spanApplier","spaceAllocationDueToSpan","spanApplierMap","_spanApplierMap","TransactionSupport","INTERFACE_IMPl","CLASSPREFIX","HEADER","DATA","AXES","FACET_BY_FIELDS","FIELDS","TRANSFORM","LAYER_DEF","CONFIG","DETAIL_FIELDS","TEXT","AXIS","GEOM","BLANK","SimpleCell","simple_cell_classCallCheck","enums_defaults_defineProperty","_DEFAULT_CONFIG","_CONSTANTS$MARGIN","CONSTANTS","DEFAULT_PROPS","minSpacing","src_props_defineProperty","visual_cell_src_props_PROPS","caption","smartText","axis_cell_classCallCheck","axis_cell_possibleConstructorReturn","axis_cell_getPrototypeOf","_availHeight","_availWidth","axis_cell_assertThisInitialized","computeAxisSpace","logicalWidth","logicalHeight","spaceFixer","_axis$getLogicalSpace","_axis$config2","wrapperDiv","blank_cell_classCallCheck","blank_cell_possibleConstructorReturn","blank_cell_getPrototypeOf","blank_cell_assertThisInitialized","setSmartText","_context$minSpacing","minHeightSpace","minWidthSpace","paddedHeight","paddedWidth","text_cell_classCallCheck","text_cell_possibleConstructorReturn","text_cell_getPrototypeOf","text_cell_assertThisInitialized","computeTextSpace","_context$minSpacing2","minText","_minTextSpace","smartSpace","textAlign","vAlign","_this$smartText","translation","middle","geom_cell_classCallCheck","geom_cell_possibleConstructorReturn","geom_cell_getPrototypeOf","_unit","_datamodel","_facetByFields","_transform","_caption","geom_cell_assertThisInitialized","lockModel","unlockModel","captionSpace","computeGeomSpace","getCaptionSpace","captionDom","DEFAULT_PLACEHOLDERS","src_defaults_defineProperty","_DEFAULT_PLACEHOLDERS","resolveTitleSubTitleContent","rawContent","escapeHTML","htmlEscapes","&","<",">","\"","'","/","createHeading","prevCell","cellType","_minTickDiff","legendInitializer","legendConfig","prevLegends","legends","headerHeight","legendInfo","legendCreator","LegendCls","dataset","scaleProps","_scale$config","stepMapper","dataInfo","legendMeasures","getGroupByData","setLegendMeasures","MuzeComponent","_this$boundBox","HeaderComponent","headerComponent_classCallCheck","headerComponent_possibleConstructorReturn","headerComponent_getPrototypeOf","setParams","cont","renderHeader","LegendComponent","legendComponent_classCallCheck","legendComponent_possibleConstructorReturn","legendComponent_getPrototypeOf","legendSpace","sectionComponents","_this$params$config","legendMount","legWidth","legHeight","sections","currHeight","currWidth","leg","legendHeight","legendWidth","renderLegend","_defaultAlignmentHelp","defaultAlignmentHelper","arrowSizeMap","getUnitPositions","totalLength","viewLength","currentLen","unitPosition","createScrollBarArrow","createScrollBarRect","mover","applyScrollMouseDownAction","moverRect","scrollMaker","_mover$node$getBoundi","_rect$node$getBoundin","rectX","rectY","changeMoverPosition","registerListenerOnArrow","arrowType","_components","isTouchDevice","applyMoverDrag","moverStartPos","rectStartPos","distanceMoved","actualPosition","pageXOffset","pageYOffset","applyRectClick","emptyScrollAreaClick","manager","unitPositions","ScrollMaker","scroll_maker_classCallCheck","_attachedScrollAction","_unitPositions","scroll_maker_createClass","scrollTo","scrollDeltaTo","createScroll","scrollBarContainer","scrollContainerHelper","attachScrollAction","externalScrollAction","detachScrollAction","scrollMakerMap","_ScrollMaker","HorizontalScrollMaker","horizontal_scroll_maker_classCallCheck","horizontal_scroll_maker_possibleConstructorReturn","horizontal_scroll_maker_getPrototypeOf","horizontal_scroll_maker_inherits","horizontal_scroll_maker_createClass","horizontal_scroll_maker_get","prevArrow","nextArrow","_this$logicalSpace","scrollBarWithouArrowLength","_scrollBarWithouArrowLength","_this$_components$mov","positionAdjuster","newPosition","currentPos","_this$_components$mov2","moverPos","movedViewLength","performAttachedScrollFunction","delta","_this$_components$mov3","scrollPercentage","movement","VerticalScrollMaker","vertical_scroll_maker_classCallCheck","vertical_scroll_maker_possibleConstructorReturn","vertical_scroll_maker_getPrototypeOf","vertical_scroll_maker_inherits","vertical_scroll_maker_createClass","vertical_scroll_maker_get","ScrollComponent","scroll_component_classCallCheck","scrollBarComponentConfig","scroll_component_possibleConstructorReturn","scroll_component_getPrototypeOf","unitIndex","sanitizedUnitIndex","externalAction","MatrixComponent","matrix_component_classCallCheck","matrix_component_possibleConstructorReturn","matrix_component_getPrototypeOf","_this$params$config$s","containerForMatrix","applyScroll","_cellSpanMaker","cellSpanMaker","_matrixSpanGenerator","renderTable","applySpans","applier","renderPlaceholders","renderMatrix","applyScrollAction","scollDistance","GridComponent","grid_component_classCallCheck","grid_component_possibleConstructorReturn","grid_component_getPrototypeOf","_this$component$viewI","matrixDim","matrixName","updateWrapper","matrixWrapper","allComponents","_scrollBarManager","wheelDeltaX","wheelDeltaY","scrollBarManager","triggerScrollBarAction","movedView","scrollActionApplier","_this$component$0$0$b","sanitizeGrid","headerMap","headerCell","configType","createHeaderWrapper","headerType","layoutManager","renderDetails","_headerMap$headerType","headerConfig","component_wrapper_maker_objectSpread","wrapperParams","existingComponent","createScrollBarWrapper","scrollBarType","grid","_scrollBarMap$scrollB","scrollBarMap","layoutBasedMeasure","viewMeasure","rowAlign","colAlign","componentWrapperMaker","createLegendWrapper","legendWrapper","gridLayoutWrapper","verticalScrollBar","horizontalScrollBar","ScrollManager","scroll_manager_classCallCheck","_scrollBarComponents","_attachedComponents","scroll_manager_createClass","scrollBarComponents","attachedComponents","performScrollAction","getRenderDetails","_mount$getBoundingCli","heightAttr","widthAttr","visGroup","_visGroup$placeholder","legendPosition","layoutArrangement","arrangeComponents","_titleLayouts","titleLayouts","component_resolver_defineProperty","legendLayouts","titlePosition","subtitlePosition","availableHeightForCanvas","availableWidthForCanvas","_createHeaders","canvasHeight","canvasWidth","isSubtitle","headerOptions","_createHeading","createLegend","getLegendSpace","mountSpace","componentIndexes","renderLayout","_layoutManager","gridLayout","compWrappers","componentWrappers","gridWrapper","createScrollManager","horizontalScrollWrapper","verticalScrollWrapper","hScrollBar","vScrollBar","registerComponents","attachScrollListener","defaultInteractionPolicy","isMeasure","group_firebolt_toConsumableArray","getFieldsFromChannel","colDim","fieldInf","unitColFacets","equals","unitRowFacets","propagateWith","defaultCrossInteractionPolicy","propagationCanvasAlias","propagationUnit","GroupFireBolt","group_firebolt_classCallCheck","group_firebolt_possibleConstructorReturn","group_firebolt_getPrototypeOf","behaviouralAction","validFields","APP_INITIAL_STATE","app","Canvas","globalDependencies","canvas_classCallCheck","canvas_possibleConstructorReturn","canvas_getPrototypeOf","canvas_defineProperty","canvas_slicedToArray","canvas_assertThisInitialized","initedComponents","initCanvas","createGroupState","_VisualGroup$getState2","canvas_helper_slicedToArray","localState","register","prepareLayout","triggerReflow","setLayoutInfForUnits","getBoundBox","getRootNodeId","setLabelRotationForAxes","rotationVal","getAxes","initialSettings","regEntry","COMPONENTS","SUBREGISTRIES","regObj","globalCache","defaultRegistry","overrideRegistryDefinitions","overrideRegistry","muze","_transactor2","muze_slicedToArray","env","globalStore","componentSubRegistryDef","settings","withSettings","enableChainedTransaction","transactionModel","transactionEndpoint","transactionItems","Smartlabel","SideEffects","standards","Behaviours","pkg","operators","utils","lookupWhat","lookupDetails","lookupTarget","deps"],"mappings":"CAAA,SAAAA,iCAAAC,KAAAC,SACA,iBAAAC,SAAA,iBAAAC,OACAA,OAAAD,QAAAD,UACA,mBAAAG,eAAAC,IACAD,OAAA,UAAAH,SACA,iBAAAC,QACAA,QAAA,KAAAD,UAEAD,KAAA,KAAAC,UARA,CASCK,OAAA,WACD,yBCTA,IAAAC,oBAGA,SAAAC,oBAAAC,UAGA,GAAAF,iBAAAE,UACA,OAAAF,iBAAAE,UAAAP,QAGA,IAAAC,OAAAI,iBAAAE,WACAC,EAAAD,SACAE,GAAA,EACAT,YAUA,OANAU,QAAAH,UAAAI,KAAAV,OAAAD,QAAAC,cAAAD,QAAAM,qBAGAL,OAAAQ,GAAA,EAGAR,OAAAD,QA0DA,OArDAM,oBAAAM,EAAAF,QAGAJ,oBAAAO,EAAAR,iBAGAC,oBAAAQ,EAAA,SAAAd,QAAAe,KAAAC,QACAV,oBAAAW,EAAAjB,QAAAe,OACAG,OAAAC,eAAAnB,QAAAe,MAA0CK,YAAA,EAAAC,IAAAL,UAK1CV,oBAAAgB,EAAA,SAAAtB,SACA,oBAAAuB,eAAAC,aACAN,OAAAC,eAAAnB,QAAAuB,OAAAC,aAAwDC,MAAA,WAExDP,OAAAC,eAAAnB,QAAA,cAAiDyB,OAAA,KAQjDnB,oBAAAoB,EAAA,SAAAD,MAAAE,MAEA,GADA,EAAAA,OAAAF,MAAAnB,oBAAAmB,QACA,EAAAE,KAAA,OAAAF,MACA,KAAAE,MAAA,iBAAAF,oBAAAG,WAAA,OAAAH,MACA,IAAAI,GAAAX,OAAAY,OAAA,MAGA,GAFAxB,oBAAAgB,EAAAO,IACAX,OAAAC,eAAAU,GAAA,WAAyCT,YAAA,EAAAK,cACzC,EAAAE,MAAA,iBAAAF,MAAA,QAAAM,OAAAN,MAAAnB,oBAAAQ,EAAAe,GAAAE,IAAA,SAAAA,KAAgH,OAAAN,MAAAM,MAAqBC,KAAA,KAAAD,MACrI,OAAAF,IAIAvB,oBAAA2B,EAAA,SAAAhC,QACA,IAAAe,OAAAf,eAAA2B,WACA,SAAAM,aAA2B,OAAAjC,OAAA,SAC3B,SAAAkC,mBAAiC,OAAAlC,QAEjC,OADAK,oBAAAQ,EAAAE,OAAA,IAAAA,QACAA,QAIAV,oBAAAW,EAAA,SAAAmB,OAAAC,UAAsD,OAAAnB,OAAAoB,UAAAC,eAAA5B,KAAAyB,OAAAC,WAGtD/B,oBAAAkC,EAAA,GAIAlC,wCAAAmC,EAAA,sbClFA,SAAAC,EAAAhB,GACA,UAAAiB,QAAA3C,UAAA,UAAA2C,QAAA1C,QACAA,oBAEAC,yRAJA,CASCE,kBACD,gBAAAsC,GCTA,IAAAhB,KAGA,SAAAO,EAAAX,GAGA,GAAAI,EAAAJ,GACA,OAAAI,EAAAJ,GAAAtB,QAGA,IAAA4C,EAAAlB,EAAAJ,IACAd,IACAC,KACAT,YAUA,OANAU,mCAGAT,OAGA2C,EAAA5C,QA0DA,OArDAM,MAGAA,MAGAA,oBACAA,UACAY,2BAA0CE,uBAK1Cd,gBACA,oBAAAiB,eAAAC,aACAN,4CAAwDO,iBAExDP,sCAAiDO,YAQjDnB,kBAEA,GADA,EAAAoB,IAAAgB,EAAAT,EAAAS,IACA,EAAAhB,EAAA,OAAAgB,EACA,KAAAhB,GAAA,UAAAiB,QAAAD,SAAAd,WAAA,OAAAc,EACA,IAAApB,EAAAJ,OAAAY,OAAA,MAGA,GAFAxB,OACAY,mCAAyCE,wBACzC,EAAAM,GAAA,iBAAAgB,EAAA,QAAAE,KAAAF,EAAAT,EAAAnB,EAAAQ,EAAAsB,EAAA,SAAAlB,GAAgH,OAAAgB,EAAAhB,IAAqBM,cACrI,OAAAV,GAIAhB,gBACA,IAAAoB,EAAAgB,KAAAd,WACA,WAA2B,OAAAc,EAAAG,SAC3B,WAAiC,OAAAH,GAEjC,OADApC,aACAoB,GAIApB,kBAAsD,OAAAY,OAAAoB,UAAAC,eAAA5B,KAAA+B,EAAAhB,IAGtDpB,OAIA2B,IAAAQ,EAAA,GDxEA,ECwEA,SAAAC,KAAA1C,SAAAe,KAAA,YAAA+B,YAAA,4DAAAC,SAAA,wCAAAC,QAAA,QAAAC,QAAA,MAAAC,KAAA,oBAAAC,OAAA,kCAAAC,UAAA,uGAAAC,YAAAC,KAAA,MAAAC,IAAA,6CAAAC,eAAAzC,KAAA,gBAAA0C,MAAA,qBAAA1C,KAAA,iBAAA0C,MAAA,uBAAA1C,KAAA,aAAA0C,MAAA,oBAAAF,IAAA,sBAAAxC,KAAA,oBAAA0C,MAAA,qBAAAC,cAAAC,SAAA,UAAAC,iBAAAC,YAAA,SAAAC,aAAA,UAAAC,eAAA,QAAAC,eAAA,SAAAC,iCAAA,UAAAC,mBAAA,SAAAC,sBAAA,UAAAC,oBAAA,UAAAC,KAAA,QAAAC,YAAA,SAAAC,OAAA,SAAAC,uBAAA,SAAAC,uBAAA,QAAAC,yBAAA,QAAAC,sBAAA,QAAAC,+BAAA,SAAAC,MAAA,QAAAC,UAAA,SAAAC,MAAA,QAAAC,aAAA,QAAAC,wBAAA,QAAAC,mCAAA,SAAAC,cAAA,QAAAC,sBAAA,SAAAC,gBAAA,QAAAC,OAAA,SAAAC,MAAA,QAAAC,gBAAA,QAAAC,oBAAA,QAAAC,QAAA,UAAAC,cAAA,SAAAC,qBAAA,UAAAC,SAAAC,KAAA,6BAAAC,GAAA,4BAAAC,IAAA,kEAAAC,MAAA,4BAAAC,MAAA,8EAAAC,KAAA,eAAAC,cAAA,uBAAAC,KAAA,oEAAA3D,EAAAhB,EAAAO,GClFA,IAAMqE,EAAYhG,EAAQ,GAE1BL,EAAOD,QAAUsG,EAAUzD,QAAUyD,EAAUzD,QAAUyD,ouBCKzD,IAOeC,GANXC,UAAW,WACXC,QAAS,SACTC,QAAS,SACTC,KAAM,QCEKC,GANXC,YAAa,cACbC,SAAU,WACVC,IAAK,MACLC,OAAQ,UCAGC,GAHXC,WAAY,cCKDC,GAJXC,QAAS,UACTC,UAAW,aCGAC,GALXC,OAAQ,SACRC,QAAS,UACTC,IAAK,OCHT,SAASC,EAAqBC,GAC1B,OAAIA,aAAgBC,KACTD,EAGJ,IAAIC,KAAKD,GASpB,SAASE,EAAK5F,GACV,OAAQA,EAAI,GAAL,IAAgBA,EAAOA,EA8BP,SAAS6F,EAAmBC,GACnDC,KAAKD,OAASA,EACdC,KAAKC,gBACLD,KAAKE,kBAfTC,OAAOC,OAAS,SAAUC,GACtB,OAAOA,EAAKC,QAAQ,2BAA4B,SAkBpDR,EAAkBS,aAAe,IAIjCT,EAAkBU,yBACdC,KAAM,EACNC,MAAO,EACPC,IAAK,EACLC,KAAM,EACNC,OAAQ,EACRC,OAAQ,EACRC,YAAa,GAUjBjB,EAAkBkB,oBAAsB,SAAUC,GAC9C,OAAO,SAAUC,GACb,IAAIC,EACJ,OAAIC,SAASD,EAAYE,SAASH,EAAK,KAC5BC,EAGJF,IAYfnB,EAAkBwB,mBAAqB,SAAUC,EAAON,GACpD,OAAO,SAACC,GACJ,IACIzI,EADAD,SAGJ,IAAK0I,EAAO,OAAOD,EAEnB,IAAMO,EAAON,EAAIO,cAEjB,IAAKjJ,EAAI,EAAGC,EAAI8I,EAAMG,OAAQlJ,EAAIC,EAAGD,IACjC,GAAI+I,EAAM/I,GAAGiJ,gBAAkBD,EAC3B,OAAOhJ,EAIf,gBAAIA,EACOyI,EAEJ,OAqBfnB,EAAkB6B,oBAAsB,WACpC,IAAMC,GACFC,OACI,MACA,MACA,MACA,MACA,MACA,MACA,OAEJC,MACI,SACA,SACA,UACA,YACA,WACA,SACA,aAGFC,GACFF,OACI,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,OAEJC,MACI,UACA,WACA,QACA,QACA,MACA,OACA,OACA,SACA,YACA,UACA,WACA,aAsPR,OAjPIE,GAEIjJ,KAAM,IACNkJ,MAAO,EACPC,QAJD,SAAAA,UAIc,MAAO,UACpBC,OAAQrC,EAAkBkB,sBAC1BoB,UAND,SAAAA,UAMYlB,GAGP,OAFUxB,EAAoBwB,GAErBmB,WAAWC,aAG5B7J,GAEIM,KAAM,IACNkJ,MAAO,EACPC,QAJD,SAAAA,UAIc,MAAO,UACpBC,OAAQrC,EAAkBkB,sBAC1BoB,UAND,SAAAA,UAMYlB,GACP,IACMqB,EADI7C,EAAoBwB,GACdmB,WAAa,GAE7B,OAAkB,IAAVE,EAAc,GAAKA,GAAOD,aAG1C9H,GAEIzB,KAAM,IACNkJ,MAAO,EACPC,QAJD,SAAAA,UAIc,MAAO,WACpBC,OAAQ,SAAAA,OAACjB,GACL,OAAIA,EACOA,EAAIO,cAER,MAEXW,UAAW,SAAAA,UAAClB,GAIR,OAHUxB,EAAoBwB,GACdmB,WAEA,GAAK,KAAO,OAGpCG,GAEIzJ,KAAM,IACNkJ,MAAO,EACPC,QAJD,SAAAA,UAIc,MAAO,WACpBC,OAAQ,SAAAA,OAACjB,GACL,OAAIA,EACOA,EAAIO,cAER,MAEXW,UAAW,SAAAA,UAAClB,GAIR,OAHUxB,EAAoBwB,GACdmB,WAEA,GAAK,KAAO,OAGpCI,GAEI1J,KAAM,IACNkJ,MAAO,EACPC,QAJD,SAAAA,UAIc,MAAO,UACpBC,OAAQrC,EAAkBkB,sBAC1BoB,UAND,SAAAA,UAMYlB,GAIP,OAAOrB,EAHGH,EAAoBwB,GACfwB,gBAKvBC,GAEI5J,KAAM,IACNkJ,MAAO,EACPC,QAJD,SAAAA,UAIc,MAAO,UACpBC,OAAQrC,EAAkBkB,sBAC1BoB,UAND,SAAAA,UAMYlB,GAIP,OAAOrB,EAHGH,EAAoBwB,GACZ0B,gBAK1BC,GAEI9J,KAAM,IACNkJ,MAAO,EACPC,QAJD,SAAAA,UAIc,MAAO,UACpBC,OAAQrC,EAAkBkB,sBAC1BoB,UAND,SAAAA,UAMYlB,GAIP,OAHUxB,EAAoBwB,GACjB4B,kBAEHR,aAGlB1H,GAEI7B,KAAM,IACNkJ,MAAO,EACPC,QAJD,SAAAA,UAIc,UAAWN,EAAQC,MAAMkB,KAAK,KAA9B,KACbZ,OAAQrC,EAAkBwB,mBAAmBM,EAAQC,OACrDO,UAND,SAAAA,UAMYlB,GACP,IACM8B,EADItD,EAAoBwB,GAChB+B,SAEd,OAAQrB,EAAQC,MAAMmB,GAAMV,aAGpCY,GAEInK,KAAM,IACNkJ,MAAO,EACPC,QAJD,SAAAA,UAIc,UAAWN,EAAQE,KAAKiB,KAAK,KAA7B,KACbZ,OAAQrC,EAAkBwB,mBAAmBM,EAAQE,MACrDM,UAND,SAAAA,UAMYlB,GACP,IACM8B,EADItD,EAAoBwB,GAChB+B,SAEd,OAAQrB,EAAQE,KAAKkB,GAAMV,aAGnC5H,GAEI3B,KAAM,IACNkJ,MAAO,EACPC,QAJD,SAAAA,UAIc,MAAO,UACpBC,OAAQrC,EAAkBkB,sBAC1BoB,UAND,SAAAA,UAMYlB,GAIP,OAHUxB,EAAoBwB,GAChBiC,UAEHb,aAGnBxJ,GAEIC,KAAM,IACNkJ,MAAO,EACPC,QAJD,SAAAA,UAIc,MAAO,UACpBC,OAAQrC,EAAkBkB,sBAC1BoB,UAND,SAAAA,UAMYlB,GAIP,OAAOrB,EAHGH,EAAoBwB,GAChBiC,aAKtBC,GAEIrK,KAAM,IACNkJ,MAAO,EACPC,QAJD,SAAAA,UAIc,UAAWH,EAAUF,MAAMkB,KAAK,KAAhC,KACbZ,OAAQrC,EAAkBwB,mBAAmBS,EAAUF,OACvDO,UAND,SAAAA,UAMYlB,GACP,IACMmC,EADI3D,EAAoBwB,GACdoC,WAEhB,OAAQvB,EAAUF,MAAMwB,GAAQf,aAGxCiB,GAEIxK,KAAM,IACNkJ,MAAO,EACPC,QAJD,SAAAA,UAIc,UAAWH,EAAUD,KAAKiB,KAAK,KAA/B,KACbZ,OAAQrC,EAAkBwB,mBAAmBS,EAAUD,MACvDM,UAND,SAAAA,UAMYlB,GACP,IACMmC,EADI3D,EAAoBwB,GACdoC,WAEhB,OAAQvB,EAAUD,KAAKuB,GAAQf,aAGvC1J,GAEIG,KAAM,IACNkJ,MAAO,EACPC,QAJD,SAAAA,UAIc,MAAO,UACpBC,OALD,SAAAA,OAKSjB,GAAO,OAAOpB,wBAAwCoB,GAAO,GACrEkB,UAND,SAAAA,UAMYlB,GAIP,OAAOrB,EAHGH,EAAoBwB,GACdoC,WAEG,KAG3BE,GAEIzK,KAAM,IACNkJ,MAAO,EACPC,QAJD,SAAAA,UAIc,MAAO,YACpBC,OALD,SAAAA,OAKSjB,GACJ,IAAIuC,SACJ,GAAIvC,EAAK,CACL,IAAMzI,EAAIyI,EAAIQ,OACdR,EAAMA,EAAIwC,UAAUjL,EAAI,EAAGA,GAE/B,IAAI0I,EAAYrB,wBAAwCoB,GACpDyC,EAAc,IAAI/D,KAClBgE,EAAcC,KAAKC,MAAOH,EAAYI,cAAiB,KAO3D,OAHIrE,EAFJ+D,KAAYG,EAAczC,GAEM4C,cAAgBJ,EAAYI,gBACxDN,MAAYG,EAAc,GAAIzC,GAE3BzB,EAAoB+D,GAAQM,eAEvC3B,UAtBD,SAAAA,UAsBYlB,GACP,IACI8C,EADMtE,EAAoBwB,GACjB6C,cAAczB,WACvB7J,SAOJ,OALIuL,IACAvL,EAAIuL,EAAKtC,OACTsC,EAAOA,EAAKN,UAAUjL,EAAI,EAAGA,IAG1BuL,IAGfC,GAEIlL,KAAM,IACNkJ,MAAO,EACPC,QAJD,SAAAA,UAIc,MAAO,YACpBC,OAAQrC,EAAkBkB,sBAC1BoB,UAND,SAAAA,UAMYlB,GAIP,OAHUxB,EAAoBwB,GACf6C,cAAczB,eAgB7CxC,EAAkBoE,oBAAsB,WACpC,IAAMC,EAAcrE,EAAkB6B,sBAEtC,OACIf,KAAMuD,EAAYnC,EAClBoC,QAASD,EAAY1L,EACrB4L,eAAgBF,EAAY3J,EAC5B8J,eAAgBH,EAAY3B,EAC5B3B,OAAQsD,EAAY1B,EACpB3B,OAAQqD,EAAYxB,EACpB4B,UAAWJ,EAAYvJ,EACvB4J,SAAUL,EAAYjB,EACtBuB,aAAcN,EAAYzJ,EAC1BgK,4BAA6BP,EAAYrL,EACzC6L,YAAaR,EAAYf,EACzBwB,WAAYT,EAAYZ,EACxBsB,cAAeV,EAAYvL,EAC3BkM,WAAYX,EAAYX,EACxBuB,UAAWZ,EAAYF,IAW/BnE,EAAkBkF,cAAgB,WAC9B,IAAMb,EAAcrE,EAAkB6B,sBAChCsD,EAAkB,SAAAvL,IAMpB,IALA,IAAIlB,EAAI,EACJ0M,SACAC,SACE1M,EAAI2M,UAAK1D,OAERlJ,EAAIC,EAAGD,IACV0M,oBAAW1M,SAAX0M,UAAW1M,IACX4M,kBAAS5M,SAAT4M,UAAS5M,MACL2M,EAAcD,GAItB,OAAKC,EAEEA,EAAY,GAAGhD,OAAOgD,EAAY,IAFd,MAK/B,OACI1E,MAAO0D,EAAYX,EAAGW,EAAYF,EAC9BgB,GAEJvE,OAAQyD,EAAYf,EAAGe,EAAYZ,EAAGY,EAAYvL,EAC9CqM,GAEJtE,KAAMwD,EAAYvJ,EAAGuJ,EAAYjB,EAAGiB,EAAYzJ,EAAGyJ,EAAYrL,EAC3DmM,GAEJrE,MAAOuD,EAAYnC,EAAGmC,EAAY1L,EAAG0L,EAAY3J,EAAG2J,EAAY3B,EAC5D,SAAU6C,EAAcC,EAAcC,EAAWC,GAC7C,IAAIL,SACAM,SACAC,SACAxE,SAcJ,OAZIoE,IAAiBG,EAAUF,GAAaC,IACJ,OAAhCC,EAAO,GAAGtD,OAAOsD,EAAO,MACxBC,MAGJP,EAAcG,GAEdH,EADOG,GAGOD,EAGbF,GAELjE,EAAMiE,EAAY,GAAGhD,OAAOgD,EAAY,IACpCO,IACAxE,GAAO,IAEJA,GANoB,OASnCL,QAASsD,EAAY1B,EACjBwC,GAEJnE,QAASqD,EAAYxB,EACjBsC,KAUZnF,EAAkB6F,WAAa,SAAU5F,GAQrC,IAPA,IAAM6F,EAAc9F,EAAkBS,aAChC4D,EAAcrE,EAAkB6B,sBAChCkE,EAAgB3M,OAAO4M,KAAK3B,GAC5B4B,KACFvN,SACAwN,UAEIxN,EAAIuH,EAAOkG,QAAQL,EAAapN,EAAI,KAAO,GAC/CwN,EAAcjG,EAAOvH,EAAI,IACmB,IAAxCqN,EAAcI,QAAQD,IAE1BD,EAAWG,MACPjE,MAAOzJ,EACP2N,MAAOH,IAIf,OAAOD,GASXjG,EAAkBsG,SAAW,SAAUzG,EAAMI,GACzC,IAQItH,EARE4N,EAAQ3G,EAAoBC,GAC5BoG,EAAajG,EAAkB6F,WAAW5F,GAC1CoE,EAAcrE,EAAkB6B,sBAClC2E,EAAeC,OAAOxG,GACpB6F,EAAc9F,EAAkBS,aAClC4F,SACAK,SACAhO,SAGJ,IAAKA,EAAI,EAAGC,EAAIsN,EAAWrE,OAAQlJ,EAAIC,EAAGD,IAEtCgO,EAAerC,EADfgC,EAAQJ,EAAWvN,GAAG2N,OACY/D,UAAUiE,GAC5CC,EAAeA,EAAahG,QAAQ,IAAIH,OAAOyF,EAAcO,EAAO,KAAMK,GAG9E,OAAOF,GAQXxG,EAAkBxF,UAAUmM,MAAQ,SAAUC,EAAeC,GACzD,IAAM3B,EAAgBlF,EAAkBkF,gBAClC/E,EAAWD,KAAK4G,kBAAkBF,GAClCG,EAAa/G,EAAkBU,wBAC/BsG,EAAUH,GAAWA,EAAQG,QAC7BC,KACAC,KACFC,SACAC,SACAC,SACAjG,SACA1I,SACA4O,SACAC,SACA5O,SACAgL,KAEJ,IAAKwD,KAAejC,EAChB,MAAQzK,eAAe5B,KAAKqM,EAAeiC,GAA3C,CAMA,IAJAD,EAAKtF,OAAS,EAEdyF,GADAD,EAAiBlC,EAAciC,IACHK,OAAOJ,EAAexF,OAAS,EAAG,GAAG,GAE5DlJ,EAAI,EAAGC,EAAIyO,EAAexF,OAAQlJ,EAAIC,EAAGD,cAE1C0I,EAAMjB,GADNmH,EAAQF,EAAe1O,IACFO,OAGjBiO,EAAKd,KAAK,MAEVc,EAAKd,MAAMkB,EAAOlG,IAM1B,cAFAmG,EAAcF,EAAWI,MAAMvH,KAAMgH,KAEa,OAAhBK,KAA0BP,EACxD,MAGJC,EAAWF,EAAWI,IAAgBI,EAU1C,OAPIN,EAAWrF,QAAU1B,KAAKwH,gBAAgBT,EAAWrF,QAErD+B,EAAOgE,QAAQV,EAAW,GAAI,EAAG,GAEjCtD,EAAOgE,QAAPhE,QAAkBsD,GAGftD,GAQX3D,EAAkBxF,UAAUsM,kBAAoB,SAAUF,GACtD,IAYIjO,EAZEsH,EAASC,KAAKD,OACdoE,EAAcrE,EAAkB6B,sBAChCiE,EAAc9F,EAAkBS,aAChCwF,EAAajG,EAAkB6F,WAAW5F,GAC1C2H,KAEFC,SACAC,SACAC,SACAC,SACAC,SAGAvP,SAEJuP,EAAcxB,OAAOxG,GAErB,IAAMiI,EAAWjC,EAAWkC,IAAI,SAAAvN,GAAA,OAAOwN,EAAI/B,QACrCgC,EAAmBpC,EAAWrE,OACpC,IAAKlJ,EAAI2P,EAAmB,EAAG3P,GAAK,EAAGA,KACnCqP,EAAW9B,EAAWvN,GAAGyJ,OAEV,IAAM8F,EAAYrG,OAAS,YAKtCiG,IACAA,EAAsBI,EAAYrG,QAGtCoG,EAAaC,EAAYrE,UAAUmE,EAAW,EAAGF,GACjDI,EAAcA,EAAYrE,UAAU,EAAGmE,EAAW,GAC9C1H,OAAOC,OAAO0H,GACdC,EAAYrE,UAAUiE,EAAqBI,EAAYrG,QAE3DiG,EAAsBE,GAblBF,EAAsBE,EAgB9B,IAAKrP,EAAI,EAAGA,EAAI2P,EAAkB3P,IAC9BoP,EAAS7B,EAAWvN,GACpBuP,EAAcA,EAAYzH,QAAQsF,EAAcgC,EAAOzB,MAAOhC,EAAYyD,EAAOzB,OAAOjE,WAG5F,IAAMkG,EAAgB1B,EAAc2B,MAAM,IAAIlI,OAAO4H,QAGrD,IAFAK,EAAcE,QAET9P,EAAI,EAAGC,EAAIuP,EAAStG,OAAQlJ,EAAIC,EAAGD,IACpCkP,EAASM,EAASxP,IAAM4P,EAAc5P,GAE1C,OAAOkP,GAQX5H,EAAkBxF,UAAUiO,cAAgB,SAAU7B,GAClD,IAAI/G,EAAO,KACX,GAAI6I,OAAOpH,SAASsF,GAChB/G,EAAO,IAAIC,KAAK8G,QACb,IAAK1G,KAAKD,QAAUH,KAAK6G,MAAMC,GAClC/G,EAAO,IAAIC,KAAK8G,OAEf,CACD,IAAMzG,EAAWD,KAAKC,SAAWD,KAAKyG,MAAMC,GACxCzG,EAASyB,SACT1B,KAAKE,WAALF,kCAAsBJ,MAAtBI,oIAA8BC,MAC9BN,EAAOK,KAAKE,YAGpB,OAAOP,GAGXG,EAAkBxF,UAAUkN,gBAAkB,SAASiB,GACnD,OAAe,IAARA,GAAazI,KAAKD,OAAOsI,MAAM,QAAQ3G,QASlD5B,EAAkBxF,UAAU8L,SAAW,SAAUrG,EAAQ2G,GACrD,IAAIxG,SAQJ,OANIwG,EACAxG,EAAaF,KAAKE,WAAaF,KAAKuI,cAAc7B,IACzCxG,EAAaF,KAAKE,cAC3BA,EAAaF,KAAKuI,cAAc7B,IAG7B5G,EAAkBsG,SAASlG,EAAYH,ICruBnC,IAAA2I,EAAA,SAAAA,EAACC,GACZ,IAAInQ,EAAI,EACR,OAAO,WAAe,QAAAyB,EAAAmL,UAAA1D,OAAXkH,EAAWC,MAAA5O,GAAAW,EAAA,EAAAA,EAAAX,EAAAW,IAAXgO,EAAWhO,GAAAwK,UAAAxK,GAClBgO,EAAOE,QAAQ,SAAC5H,EAAK6H,GACXJ,EAAMI,aAAuBF,QAC/BF,EAAMI,GAAcF,MAAMG,MAAOtH,OAAQlJ,KAE7CmQ,EAAMI,GAAY7C,KAAKhF,KAE3B1I,wNCdFyQ,EAAe,SACfC,EAAgBhQ,OAAOoB,UAAUgI,SACjC6G,EAAc,kBACdC,EAAa,iBAEnB,SAASC,EAAenB,EAAKoB,GAIzB,IAHA,IAAI9Q,EAAI8Q,EAAU5H,OACd6H,GAAU,EAEP/Q,GAAG,CACN,GAAI0P,IAAQoB,EAAU9Q,GAElB,OADSA,EAGbA,GAAK,EAGT,OAAO+Q,EA2GX,SAASC,EAASC,EAAMC,EAAMC,GAE1B,gBAAWF,EAAP,YAAAG,EAAOH,MAASR,aAAuBS,EAAP,YAAAE,EAAOF,MAAST,EACzC,eAGAS,EAAP,YAAAE,EAAOF,MAAST,GAAyB,OAATS,EACzBD,aAGAA,EAAP,YAAAG,EAAOH,MAASR,IAChBQ,EAAOC,aAAgBb,aAnH/B,SAASgB,EAAMJ,EAAMC,EAAMC,EAAWG,EAAQC,GAC1C,IAAIC,EACAC,EACAC,EACAC,EACAC,EAcJ,GATKL,GAKDD,EAAO5D,KAAKuD,GACZM,EAAO7D,KAAKwD,KALZI,GAAUL,GACVM,GAAUL,IAOVA,aAAgBb,MAChB,IAAKmB,EAAO,EAAGA,EAAON,EAAKhI,OAAQsI,GAAQ,EAAG,CAC1C,IACIC,EAASR,EAAKO,GACdE,EAASR,EAAKM,GAElB,MAAOtP,GACH,mBAGOwP,EAAP,YAAAN,EAAOM,MAAWjB,EACZU,YAAaO,IACfT,EAAKO,GAAQE,IAIF,OAAXD,aAA0BA,EAAP,YAAAL,EAAOK,MAAWhB,IACrCgB,EAASR,EAAKO,GAAQE,aAAkBrB,cAG9B,KADduB,EAAOf,EAAea,EAAQH,IAE1BE,EAASR,EAAKO,GAAQF,EAAOM,GAG7BP,EAAMI,EAAQC,EAAQP,EAAWG,EAAQC,SAMrD,IAAKC,KAAQN,EAAM,CACf,IACIO,EAASR,EAAKO,GACdE,EAASR,EAAKM,GAElB,MAAOtP,GACH,SAGJ,GAAe,OAAXwP,aAA0BA,EAAP,YAAAN,EAAOM,MAAWjB,GAKrCkB,EAAMjB,EAAcvQ,KAAKuR,MACbf,GACO,OAAXc,aAA0BA,EAAP,YAAAL,EAAOK,MAAWhB,IACrCgB,EAASR,EAAKO,QAGJ,KADdI,EAAOf,EAAea,EAAQH,IAE1BE,EAASR,EAAKO,GAAQF,EAAOM,GAG7BP,EAAMI,EAAQC,EAAQP,EAAWG,EAAQC,IAGxCI,IAAQf,GACE,OAAXa,GAAqBA,aAAkBpB,QACvCoB,EAASR,EAAKO,QAGJ,KADdI,EAAOf,EAAea,EAAQH,IAE1BE,EAASR,EAAKO,GAAQF,EAAOM,GAG7BP,EAAMI,EAAQC,EAAQP,EAAWG,EAAQC,IAI7CN,EAAKO,GAAQE,MAGhB,CACD,GAAIP,YAAaO,EACb,SAEJT,EAAKO,GAAQE,GAIzB,OAAOT,EApGX,CAqHUA,EAAMC,EAAMC,GACXF,GCnIJ,SAASY,EAASnJ,GACrB,OAAO2H,MAAMwB,QAAQnJ,GA6BlB,SAASoJ,EAAYpJ,GACxB,MAAsB,mBAARA,EAaX,IAAMqJ,EAAc,SAAdA,IAAc,aAAY,IAAI3K,MAAO4K,UAAY3G,KAAK4G,MAAsB,IAAhB5G,KAAK6G,WASvE,SAASC,EAAWC,EAAMC,GAC7B,IAAKR,EAAQO,KAAUP,EAAQQ,GAC3B,OAAOD,IAASC,EAGpB,GAAID,EAAKlJ,SAAWmJ,EAAKnJ,OACrB,SAGJ,IAAK,IAAIlJ,EAAI,EAAGA,EAAIoS,EAAKlJ,OAAQlJ,IAC7B,GAAIoS,EAAKpS,KAAOqS,EAAKrS,GACjB,SAIR,SASG,SAASsS,EAAa5J,GACzB,OAAOA,EASJ,IAAM6J,EAAmB,SAAnBA,EAAoBC,GAC7B,OApEG,SAAmB9J,GACtB,MAAsB,iBAARA,EADX,CAoEU8J,GACFzM,EAAWE,QACX4L,EAAQW,IAASX,EAAQW,EAAK,IAC9BzM,EAAWG,QACX2L,EAAQW,KAA0B,IAAhBA,EAAKtJ,QAlF/B,SAAmBR,GACtB,OAAOA,IAAQhI,OAAOgI,GADnB,CAkFwD8J,EAAK,KACrDzM,EAAWC,UAEf,MChDIyM,GAnDXD,QAEAE,gBAHe,SAAAA,gBAGEC,EAAUpS,GACvB,IAAMqS,EAASrS,GAAQwR,IA4CvB,OA1CAvK,KAAKgL,KAAKI,IACNrS,KAAMqS,EACNxC,OAAQuC,EAERE,UAJgB,SAAAA,YAKZ,IAAIA,EAAYrL,KAAKsL,iBAQrB,OANKD,IACDA,EAAYrL,KAAKsL,oBACjBtL,KAAK4I,OAAOE,QAAQ,SAACyC,GACjBF,EAAUE,EAAMxS,QAAUwS,KAG3BF,GAEXG,WAfgB,SAAAA,aAgBZ,IAAIC,EAAgBzL,KAAK0L,eAUzB,OARKD,IACDA,EAAgBzL,KAAK0L,kBACrB1L,KAAK4I,OAAOE,QAAQ,SAACyC,GACbA,EAAMI,SAASrQ,OAAS6D,EAAUC,UAClCqM,EAAcF,EAAMxS,QAAUwS,MAInCE,GAEXG,aA5BgB,SAAAA,eA6BZ,IAAIC,EAAkB7L,KAAK8L,iBAU3B,OARK9L,KAAK8L,mBACND,EAAkB7L,KAAK8L,oBACvB9L,KAAK4I,OAAOE,QAAQ,SAACyC,GACbA,EAAMI,SAASrQ,OAAS6D,EAAUE,YAClCwM,EAAgBN,EAAMxS,QAAUwS,MAIrCM,IAGR7L,KAAKgL,KAAKI,0PCKVW,aA1CX,SAAArR,EAAawG,EAAKqK,iGAAOS,QACrB9S,OAAOC,eAAe6G,KAAM,UACxB5G,cACA6S,gBACAC,YACAzS,MAAOyH,IAGXlB,KAAKuL,MAAQA,qDAoBb,OAAOhF,OAAOvG,KAAKvG,+CAUnB,OAAOuG,KAAKvG,wCArBZ,OAAOuG,KAAKmM,aAyBLJ,GCjDR,SAASK,EAAoBC,EAAYC,GACxCD,EAAW3K,OAAS,GACD2K,EAAWE,MAAM,KACzBzD,QAAQ,SAAC0D,GAChB,IAAMC,EAAaD,EAAQD,MAAM,KAC3BrO,GAAUuO,EAAW,GACrBC,IAAQD,EAAW,IAAMA,EAAW,IAC1C,GAAIC,GAAOxO,EACP,IAAK,IAAI1F,EAAI0F,EAAO1F,GAAKkU,EAAKlU,GAAK,EAC/B8T,EAAS9T,8PCVvBmU,aAqBF,SAAAjS,EAAajB,iGAAOmT,QAChB5M,KAAKmM,OAAS1S,gEAdOoT,GACrB,OAAKA,EAGE3T,OAAO4T,OAAOH,EAAkBI,qBAAsBF,GAFlDF,EAAkBI,kEAsB7B,OAAO/M,KAAKmM,gDAUZ,OAAO5F,OAAOvG,KAAKmM,kDAGNjL,GACb,OAAQA,aAAeyL,KAAwBA,EAAkBK,mBAAmB9L,gDAGlEA,GAClB,OAAOA,aAAeyL,EAAoBzL,EAAMyL,EAAkBK,mBAAmB9L,SAlDvFyL,GAyDNA,EAAkBM,KAAO,IAAIN,EAAkB,QAC/CA,EAAkBO,GAAK,IAAIP,EAAkB,MAC7CA,EAAkBQ,IAAM,IAAIR,EAAkB,OAO9CA,EAAkBI,sBACdK,QAAST,EAAkBO,GAC3BG,IAAKV,EAAkBQ,IACvBG,KAAMX,EAAkBM,KACxBM,UAAWZ,EAAkBO,IAGlB,IAAAM,EAAAC,EAAAhL,EAAA,SAAA/H,EAAAhB,GAAA,GAAAmP,MAAAwB,QAAA3P,GAAA,OAAAA,EAAA,GAAAnB,OAAAmU,YAAAxU,OAAAwB,GAAA,gBAAAA,EAAAhB,GAAA,IAAAO,KAAAX,GAAA,EAAAsB,GAAA,EAAApC,OAAA,cAAAS,EAAA0U,EAAAjT,EAAAnB,OAAAmU,cAAApU,GAAAL,EAAA0U,EAAAC,QAAAC,QAAA5T,EAAAiM,KAAAjN,EAAAQ,QAAAC,GAAAO,EAAAyH,SAAAhI,GAAAJ,GAAA,UAAAoB,GAAAE,GAAA,EAAApC,EAAAkC,EAAA,aAAApB,GAAAqU,EAAAG,QAAAH,EAAAG,SAAA,WAAAlT,EAAA,MAAApC,GAAA,OAAAyB,EAAA,CAAAS,EAAAhB,GAAA,UAAAqU,UAAA,yDCjEFC,EACD,SADCA,EAEA,UAFAA,EAGA,QAHAA,EAIA,UAKAC,GACTC,MAAO,QACPC,UAAW,YACXC,WAAY,aACZC,QAAS,UACTC,UAAW,aCpBR,SAASC,EAAiBC,EAAKC,GAClC,IAAMC,KACAC,KASN,OARAH,EAAI5F,OAAOE,QAAQ,SAACyC,GAChBoD,EAAOzI,KAAKqF,EAAMI,SAAS5S,QAE/B0V,EAAI7F,OAAOE,QAAQ,SAACyC,IAC6B,IAAzCoD,EAAO1I,QAAQsF,EAAMI,SAAS5S,OAC9B2V,EAAOxI,KAAKqF,EAAMI,SAAS5S,QAG5B2V,ECRX,SAASE,IAAoB,SAYtB,SAASC,EAAcC,EAAKC,EAAKC,GAA+D,IAArDC,EAAqD7J,UAAA1D,OAAA,YAAA0D,UAAA,IAAAA,UAAA,GAAxB8J,EAAwB9J,UAAA1D,OAAA,YAAA0D,UAAA,GAAAA,UAAA,GAAb6I,EAAMC,MACtFvC,KACAX,KACAmE,EAAqBH,GAAYJ,EACjCQ,EAAgBN,EAAIO,gBACpBC,EAAgBP,EAAIM,gBACpBE,EAAoBH,EAAcrW,KAClCyW,EAAoBF,EAAcvW,KAClCA,EAAUqW,EAAcrW,KAAxBA,IAAgCuW,EAAcvW,KAC9C0W,EAAmBlB,EAAgBa,EAAeE,GAExD,GAAIC,IAAsBC,EACtB,MAAM,IAAIE,MAAM,8CA+EpB,OA5EAN,EAAcxG,OAAOE,QAAQ,SAACyC,GAC1B,IAAMoE,EAAYnG,KAAY+B,EAAMI,WACc,IAA9C8D,EAAiBxJ,QAAQ0J,EAAU5W,OAAiBkW,IACpDU,EAAU5W,KAAUqW,EAAcrW,KAAlC4W,IAA0CA,EAAU5W,MAExD4S,EAAOzF,KAAKyJ,KAEhBL,EAAc1G,OAAOE,QAAQ,SAACyC,GAC1B,IAAMoE,EAAYnG,KAAY+B,EAAMI,WACc,IAA9C8D,EAAiBxJ,QAAQ0J,EAAU5W,MAC9BkW,IACDU,EAAU5W,KAAUuW,EAAcvW,KAAlC4W,IAA0CA,EAAU5W,KACpD4S,EAAOzF,KAAKyJ,IAGhBhE,EAAOzF,KAAKyJ,KAKpBvD,EAAmB0C,EAAIc,YAAa,SAACpX,GACjC,IAAIqX,KACAC,SACJ1D,EAAmB2C,EAAIa,YAAa,SAACG,GACjC,IAAMC,KACAC,KACNA,EAAQV,MACRU,EAAQT,MACRJ,EAAcxG,OAAOE,QAAQ,SAACyC,GAC1ByE,EAAM9J,KAAKqF,EAAM2E,aAAalF,KAAKxS,IACnCyX,EAAQV,GAAmBhE,EAAMxS,QAAUwS,EAAM2E,aAAalF,KAAKxS,KAEvE8W,EAAc1G,OAAOE,QAAQ,SAACyC,IAC+B,IAAnDkE,EAAiBxJ,QAAQsF,EAAMI,SAAS5S,OAAgBkW,GAC1De,EAAM9J,KAAKqF,EAAM2E,aAAalF,KAAK+E,IAEvCE,EAAQT,GAAmBjE,EAAMxS,QAAUwS,EAAM2E,aAAalF,KAAK+E,KAGvE,IAIMI,EAAYC,GAAgBH,EAAQV,IACpCc,EAAYD,GAAgBH,EAAQT,IAC1C,GAAIL,EAAmBgB,EAAWE,EALb,kBAAMvB,EAAIwB,gBACV,kBAAMvB,EAAIuB,oBAI4D,CACvF,IAAMC,KACNP,EAAMlH,QAAQ,SAAC0H,EAASC,GACpBF,EAAS5E,EAAO8E,GAAK1X,MAAQyX,IAE7BX,GAAY5B,EAAMC,QAAUgB,EAC5BlE,EAAK8E,GAAeS,GAGpBvF,EAAK9E,KAAKqK,GACVV,KACAC,EAActX,QAEf,IAAK0W,IAAajB,EAAME,WAAae,IAAajB,EAAMG,cAAgByB,EAAU,CACrF,IAAMU,KACF9H,EAAM2G,EAAcxG,OAAOlH,OAAS,EACxCsO,EAAMlH,QAAQ,SAAC0H,EAASC,GAEhBF,EAAS5E,EAAO8E,GAAK1X,MADrB0X,GAAOhI,EACsB+H,EAGA,OAGrCX,KACAC,EAActX,EACdwS,EAAK9E,KAAKqK,QAKf,IAAIG,GAAU1F,EAAMW,GAAU5S,SC3GzC,SAAS4X,EAAW/V,EAAGwI,GACnB,IAAMwN,KAAQhW,EACRiW,KAAQzN,EACd,OAAIwN,EAAKC,GACG,EAERD,EAAKC,EACE,EAEJ,EAqEJ,SAASC,EAAWC,GAAyB,IAApBC,EAAoB5L,UAAA1D,OAAA,YAAA0D,UAAA,GAAAA,UAAA,GAAXuL,EAIrC,OAHII,EAAIrP,OAAS,GArBrB,SAASuP,EAAMF,EAAKG,EAAIC,EAAIH,GACxB,GAAIG,IAAOD,EAAM,OAAOH,EAExB,IAAMK,EAAMF,EAAKrN,KAAKwN,OAAOF,EAAKD,GAAM,GAKxC,OAJAD,EAAKF,EAAKG,EAAIE,EAAKJ,GACnBC,EAAKF,EAAKK,EAAM,EAAGD,EAAIH,GAzC3B,SAAgBD,EAAKG,EAAIE,EAAKD,EAAIH,GAG9B,IAFA,IAAMM,EAAUP,EACVQ,KACG/Y,EAAI0Y,EAAI1Y,GAAK2Y,EAAI3Y,GAAK,EAC3B+Y,EAAO/Y,GAAK8Y,EAAQ9Y,GAKxB,IAHA,IAAIoC,EAAIsW,EACJ9N,EAAIgO,EAAM,EAEL5Y,EAAI0Y,EAAI1Y,GAAK2Y,EAAI3Y,GAAK,EACvBoC,EAAIwW,GACJE,EAAQ9Y,GAAK+Y,EAAOnO,GACpBA,GAAK,GACEA,EAAI+N,GACXG,EAAQ9Y,GAAK+Y,EAAO3W,GACpBA,GAAK,GACEoW,EAAOO,EAAO3W,GAAI2W,EAAOnO,KAAO,GACvCkO,EAAQ9Y,GAAK+Y,EAAO3W,GACpBA,GAAK,IAEL0W,EAAQ9Y,GAAK+Y,EAAOnO,GACpBA,GAAK,GArBjB,CA0CU2N,EAAKG,EAAIE,EAAKD,EAAIH,GAEjBD,EARX,CAsBaA,EAAK,EAAGA,EAAIrP,OAAS,EAAGsP,GAE1BD,0HC3EX,SAASS,EAAWC,EAAUC,EAAUzP,GACpC,IAAI0P,SACJ,OAAQF,GACR,KAAKxS,EAAeC,WACpB,KAAKN,EAAiBE,SAEd6S,EADa,SAAbD,EACU,SAAC9W,EAAGwI,GAAJ,OAAUA,EAAEnB,GAASrH,EAAEqH,IAEvB,SAACrH,EAAGwI,GAAJ,OAAUxI,EAAEqH,GAASmB,EAAEnB,IAErC,MACJ,QACI0P,EAAU,SAAArY,EAACsB,EAAGwI,IACV,IAAMwN,KAAQhW,EAAEqH,GACV4O,KAAQzN,GAAEnB,GAChB,OAAI2O,EAAKC,EACe,SAAba,EAAsB,GAAK,EAElCd,EAAKC,EACe,SAAba,GAAuB,EAAI,EAE/B,GAGf,OAAOC,EAUX,SAASC,EAAU5G,EAAMjC,GACrB,IAAM8I,EAAU,IAAIC,IACdC,KAYN,OAVA/G,EAAKlC,QAAQ,SAACkJ,GACV,IAAMC,EAAWD,EAAMjJ,GACnB8I,EAAQK,IAAID,GACZF,EAAYF,EAAQxY,IAAI4Y,IAAW,GAAG/L,KAAK8L,IAE3CD,EAAY7L,MAAM+L,GAAWD,KAC7BH,EAAQM,IAAIF,EAAUF,EAAYrQ,OAAS,MAI5CqQ,EAYX,SAASK,GAAmBC,EAAcC,EAAcC,GACpD,IAAMrN,GACFsN,MAAOH,EAAa,IAQxB,OALAC,EAAaG,OAAO,SAACC,EAAK9E,EAAM+E,GAE5B,OADAD,EAAI9E,GAAQyE,EAAa,GAAGpK,IAAI,SAAAvN,GAAA,OAASsX,EAAMO,EAAmBI,GAAK1Q,SAChEyQ,GACRxN,GAEIA,ECtEJ,SAAS0N,GAAY9D,EAAKC,GAC7B,IAAM8D,KACAlH,KACAmH,KACA9H,KACAoE,EAAgBN,EAAIO,gBACpBC,EAAgBP,EAAIM,gBACpB0D,EAAwB3D,EAAc/D,YACtC2H,EAAwB1D,EAAcjE,YACtCtS,EAAUqW,EAAcrW,KAAxBA,UAAsCuW,EAAcvW,KAG1D,IAAK4R,EAAWmE,EAAImE,eAAe1G,MAAM,KAAK2G,OAAQnE,EAAIkE,eAAe1G,MAAM,KAAK2G,QAChF,OAAO,KAiBX,SAASC,EAAkBC,EAAI/H,EAAWgI,GACtCjH,EAAmBgH,EAAGxD,YAAa,SAACpX,GAChC,IAAMwX,KACFsD,EAAW,GACfR,EAAchK,QAAQ,SAACyK,GACnB,IAAM9Z,EAAQ4R,EAAUkI,GAAYrD,aAAalF,KAAKxS,GACtD8a,OAAgB7Z,EAChBuW,EAAMuD,GAAc9Z,IAEnBoZ,EAAUS,KACPD,GAAWrI,EAAK9E,KAAK8J,GACzB6C,EAAUS,SAStB,OAjCCxE,EAAImE,eAAe1G,MAAM,KAAMzD,QAAQ,SAAC0K,GACrC,IAAMjI,EAAQwH,EAAsBS,GACpC7H,EAAOzF,KAAKsD,KAAY+B,EAAMI,WAC9BmH,EAAc5M,KAAKqF,EAAMI,SAAS5S,QA2BtCoa,EAAkBpE,EAAKiE,MACvBG,EAAkBrE,EAAKiE,MAEhB,IAAIrC,GAAU1F,EAAMW,GAAU5S,kIC5DzC,SAAS0a,GAAkB1C,GACvB,OAAOA,EAAI2C,OAAO,SAAAhZ,GAAA,QAAUsP,aAAgB2J,KAShD,SAASC,GAAK7C,GACV,GAAI1G,EAAQ0G,MAAUA,EAAI,aAAclI,OAAQ,CAC5C,IAAMgL,EAAiBJ,GAAkB1C,GAIzC,OAHiB8C,EAAenS,OACZmS,EAAepB,OAAO,SAACC,EAAKoB,GAAN,OAAepB,EAAMoB,GAAM,GAC/CH,EAAkB1G,KAG5C,OAAO0G,EAAkB1G,KAU7B,SAAS8G,GAAKhD,GACV,GAAI1G,EAAQ0G,MAAUA,EAAI,aAAclI,OAAQ,CAC5C,IAAMmL,EAAWJ,GAAI7C,GACftI,EAAMsI,EAAIrP,QAAU,EAC1B,OAAQ8G,OAAOyL,MAAMD,IAAaA,aAAoBL,EAC7CA,EAAkB1G,KAAO+G,EAAWvL,EAEjD,OAAOkL,EAAkB1G,KAgG7B,IAAMiH,IACFN,OACAG,OACAI,IAzFJ,SAAAA,IAAcpD,GACV,GAAI1G,EAAQ0G,MAAUA,EAAI,aAAclI,OAAQ,CAE5C,IAAMuL,EAAiBX,GAAkB1C,GAEzC,OAAQqD,EAAe1S,OAAUmC,KAAKsQ,IAALtQ,cAAYuQ,IAAkBT,EAAkB1G,KAErF,OAAO0G,EAAkB1G,MAmFzBoH,IAzEJ,SAAAA,IAActD,GACV,GAAI1G,EAAQ0G,MAAUA,EAAI,aAAclI,OAAQ,CAE5C,IAAMuL,EAAiBX,GAAkB1C,GAEzC,OAAQqD,EAAe1S,OAAUmC,KAAKwQ,IAALxQ,cAAYuQ,IAAkBT,EAAkB1G,KAErF,OAAO0G,EAAkB1G,MAmEzBqH,MAzDJ,SAAAA,MAAgBvD,GACZ,OAAOA,EAAI,IAyDXwD,KA/CJ,SAAAA,KAAexD,GACX,OAAOA,EAAIA,EAAIrP,OAAS,IA+CxB8S,MArCJ,SAAAA,MAAgBzD,GACZ,OAAI1G,EAAQ0G,GACDA,EAAIrP,OAERiS,EAAkB1G,MAkCzBwH,IAbJ,SAAAA,IAAc1D,GACV,OAAOlN,KAAK6Q,KAbhB,SAAmB3D,GACf,IAAI4D,EAAOZ,GAAIhD,GACf,OAAOgD,GAAIhD,EAAI9I,IAAI,SAAAvN,GAAA,OAAAmJ,KAAA+Q,IAAQC,EAAMF,EAAS,MAF9C,CAa8B5D,MAexB+D,GAAqB,MAAAC,GAAA,oBAAAra,IAAAhB,GAAA,QAAAO,EAAA,EAAAA,EAAAP,EAAAgI,OAAAzH,IAAA,KAAAX,EAAAI,EAAAO,GAAAX,EAAAF,WAAAE,EAAAF,aAAA,EAAAE,EAAA2S,cAAA,YAAA3S,MAAA4S,UAAA,GAAAhT,OAAAC,eAAAuB,EAAApB,EAAAS,IAAAT,IAAA,gBAAAI,EAAAO,EAAAX,GAAA,OAAAW,GAAAS,EAAAhB,EAAAY,UAAAL,GAAAX,GAAAoB,EAAAhB,EAAAJ,GAAAI,GAAA,GCxIrBsb,cACF,SAAAta,IAAe,IAAAhB,EAAAsG,MAAA,SAAAtF,EAAAhB,GAAA,KAAAgB,aAAAhB,GAAA,UAAAqU,UAAA,sCAAA/N,KAAAtF,GACXsF,KAAK2I,MAAQ,IAAImJ,IACjB9R,KAAK2I,MAAMwJ,IAAI,aAAcyB,IAE7B1a,OAAO+b,QAAQf,IAAQpL,QAAQ,SAAC/O,GAC5Bmb,EAAKvM,MAAMwJ,IAAIpY,EAAI,GAAIA,EAAI,aAAAgb,GAAAra,IAAAX,IAAA,iBAAAN,MAAA,SAAAA,QAc/B,IAAK2L,UAAO1D,OACR,OAAO1B,KAAK2I,MAAMtP,IAAI,cAG1B,IAAI8b,0CAEJ,GAAuB,mBAAZA,EACPnV,KAAK2I,MAAMwJ,IAAI,aAAcgD,OAC1B,CAEH,GADAA,EAAU5O,OAAO4O,IAC6B,IAA1Cjc,OAAO4M,KAAKoO,IAAQjO,QAAQkP,GAG5B,MAAM,IAAIzF,MAAJ,WAAqByF,EAArB,0BAFNnV,KAAK2I,MAAMwJ,IAAI,aAAc+B,GAAOiB,IAK5C,OAAOnV,4CAmCDjH,EAAMoc,GAAS,IAAAlb,EAAA+F,KACrB,GAAuB,mBAAZmV,EACP,MAAM,IAAIzF,MAAM,gCAMpB,OAHA3W,EAAOwN,OAAOxN,GACdiH,KAAK2I,MAAMwJ,IAAIpZ,EAAMoc,GAEd,WAAQC,EAAKC,aAAatc,+CAGvBA,GACNiH,KAAK2I,MAAMuJ,IAAInZ,IACfiH,KAAK2I,MAAM2M,OAAOvc,yCAIjBA,GACL,OAAIA,aAAgBwc,SACTxc,EAEJiH,KAAK2I,MAAMtP,IAAIN,SA5FxBic,GA4GSQ,GAZO,WAClB,IAAI7M,EAAQ,KAQZ,OALkB,OAAVA,IACAA,EAAQ,IAAIqM,IAETrM,EAPO,GAAA8M,GAAA,SAAA/a,EAAAhB,GAAA,GAAAmP,MAAAwB,QAAA3P,GAAA,OAAAA,EAAA,GAAAnB,OAAAmU,YAAAxU,OAAAwB,GAAA,gBAAAA,EAAAhB,GAAA,IAAAO,KAAAX,GAAA,EAAAsB,GAAA,EAAApC,OAAA,cAAAS,EAAA0U,EAAAjT,EAAAnB,OAAAmU,cAAApU,GAAAL,EAAA0U,EAAAC,QAAAC,QAAA5T,EAAAiM,KAAAjN,EAAAQ,QAAAC,GAAAO,EAAAyH,SAAAhI,GAAAJ,GAAA,UAAAoB,GAAAE,GAAA,EAAApC,EAAAkC,EAAA,aAAApB,GAAAqU,EAAAG,QAAAH,EAAAG,SAAA,WAAAlT,EAAA,MAAApC,GAAA,OAAAyB,EAAA,CAAAS,EAAAhB,GAAA,UAAAqU,UAAA,yDC/Ff,SAAS2H,GAAmB5G,EAAKC,GACpC,IAIM4G,EAAkBpH,EAJFO,EAAIO,gBACJN,EAAIM,iBAK1B,OAAO,SAACc,EAAWE,GACf,IAAIuF,KASJ,OARAD,EAAgB7M,QAAQ,SAAC0K,GAGjBoC,IAFAzF,EAAUqD,GAAW/Z,QACrB4W,EAAUmD,GAAW/Z,QAASmc,KAM/BA,GCjBR,SAASC,GAAO/G,EAAKC,GACxB,IAAM8D,KACAlH,KACAmH,KACA9H,KACAoE,EAAgBN,EAAIO,gBACpBC,EAAgBP,EAAIM,gBACpB0D,EAAwB3D,EAAc/D,YACtC2H,EAAwB1D,EAAcjE,YACtCtS,EAAUqW,EAAcrW,KAAxBA,UAAsCuW,EAAcvW,KAG1D,IAAK4R,EAAWmE,EAAImE,eAAe1G,MAAM,KAAK2G,OAAQnE,EAAIkE,eAAe1G,MAAM,KAAK2G,QAChF,OAAO,KAgBX,SAASC,EAAmBC,EAAI/H,GAC5Be,EAAmBgH,EAAGxD,YAAa,SAACpX,GAChC,IAAMwX,KACFsD,EAAW,GACfR,EAAchK,QAAQ,SAACyK,GACnB,IAAM9Z,EAAQ4R,EAAUkI,GAAYrD,aAAalF,KAAKxS,GACtD8a,OAAgB7Z,EAChBuW,EAAMuD,GAAc9Z,IAEnBoZ,EAAUS,KACXtI,EAAK9E,KAAK8J,GACV6C,EAAUS,SAStB,OAhCCxE,EAAImE,eAAe1G,MAAM,KAAMzD,QAAQ,SAAC0K,GACrC,IAAMjI,EAAQwH,EAAsBS,GACpC7H,EAAOzF,KAAKsD,KAAY+B,EAAMI,WAC9BmH,EAAc5M,KAAKqF,EAAMI,SAAS5S,QA0BtCoa,EAAkBrE,EAAKiE,GACvBI,EAAkBpE,EAAKiE,GAEhB,IAAI8C,GAAU9K,EAAMW,GAAU5S,SCvDlC,SAASgd,GAAeC,EAAYC,EAAYjH,GACnD,OAAOH,EAAamH,EAAYC,EAAYjH,KAAiBf,EAAME,WAGhE,SAAS+H,GAAgBF,EAAYC,EAAYjH,GACpD,OAAOH,EAAaoH,EAAYD,EAAYhH,KAAiBf,EAAMG,sQCWlD+H,cAQjB,SAAAzb,EAAawV,EAAc7D,iGAAY+J,QACnCpW,KAAKkQ,aAAeA,EACpBlQ,KAAKqM,WAAaA,oDAUlB,MAAM,IAAIqD,MAAM,0BAAA3V,IAAA,SAAAN,MAAA,SAAAA,QAUhB,OAAOuG,KAAKkQ,aAAavE,4CAUzB,OAAO3L,KAAKkQ,aAAanX,0CAUzB,OAAOiH,KAAKkQ,aAAavE,OAAOrQ,6CAUhC,OAAO0E,KAAKkQ,aAAavE,OAAO0K,oDAUhC,OAAOrW,KAAKkQ,aAAavE,OAAO7Q,wDAUhC,OAAOkF,KAAKkQ,aAAavE,OAAO2K,aAAetW,KAAKkQ,aAAavE,OAAO5S,0CASpE,IAAA2B,EAAAsF,KACEgL,KAIN,OAHAoB,EAAmBpM,KAAKqM,WAAY,SAAC7T,GACjCwS,EAAK9E,KAAKgP,EAAKhF,aAAalF,KAAKxS,MAE9BwS,gDAUP,MAAM,IAAI0E,MAAM,2BAAAhV,EAxGHyb,GAwGGI,GAAA,oBAAA7b,IAAAhB,GAAA,QAAAO,EAAA,EAAAA,EAAAP,EAAAgI,OAAAzH,IAAA,KAAAX,EAAAI,EAAAO,GAAAX,EAAAF,WAAAE,EAAAF,aAAA,EAAAE,EAAA2S,cAAA,YAAA3S,MAAA4S,UAAA,GAAAhT,OAAAC,eAAAuB,EAAApB,EAAAS,IAAAT,IAAA,gBAAAI,EAAAO,EAAAX,GAAA,OAAAW,GAAAS,EAAAhB,EAAAY,UAAAL,GAAAX,GAAAoB,EAAAhB,EAAAJ,GAAAI,GAAA,GCpHH8c,qrBAAkBL,+CAY/B,OAHKnW,KAAKyW,gBACNzW,KAAKyW,cAAgBzW,KAAK0W,uBAEvB1W,KAAKyW,kEAUZ,MAAM,IAAI/G,MAAM,0BAAA3V,IAAA,gBAAAN,MAAA,SAAAA,QAWhB,OAAOuG,KAAKgL,aAjCCwL,GAiCDxL,sPChCC2L,qrBAAoBH,gDASjC,OAAO5X,EAAiBC,gEAUL,IAAAnE,EAAAsF,KACb4W,EAAO,IAAIC,IACXC,KAUN,OAPA1K,EAAmBpM,KAAKqM,WAAY,SAAC7T,GACjC,IAAMwZ,EAAQoD,EAAKlF,aAAalF,KAAKxS,GAChCoe,EAAK1E,IAAIF,KACV4E,EAAKG,IAAI/E,GACT8E,EAAO5Q,KAAK8L,MAGb8E,QA/BMH,GA+BNG,sPC7BME,eAQjB,SAAAtd,EAAawW,EAAc7D,iGAAY4K,yOAC7B/G,EAAc7D,IADe4K,OAGnC/B,EAAKgC,eAAiB,KAHaD,uUARLT,4DAqBX,IAAA9b,EAAAsF,KACb4W,EAAO,IAAIC,IACXC,KAYN,OARA1K,EAAmBpM,KAAKqM,WAAY,SAAC7T,GACjC,IAAMwZ,EAAQoD,EAAKlF,aAAalF,KAAKxS,GAChCoe,EAAK1E,IAAIF,KACV4E,EAAKG,IAAI/E,GACT8E,EAAO5Q,KAAK8L,MAIb8E,+DAWP,GAAI9W,KAAKkX,eACL,OAAOlX,KAAKkX,eAUhB,IAPA,IAAMC,EAAanX,KAAKgL,OAAO0I,OAAO,SAAAhZ,GAAA,QAAUsP,aAAgB2J,KAAoBT,KAAK,SAACtY,EAAGwI,GAAJ,OAAUxI,EAAIwI,IACjGgU,EAAQD,EAAWzV,OACrB2V,EAAU7O,OAAO8O,kBACjBC,SACAC,SACAC,EAAiB,EAEZjf,EAAI,EAAGA,EAAI4e,EAAO5e,IACvB+e,EAAYJ,EAAW3e,EAAI,IAC3Bgf,EAAYL,EAAW3e,MAEL+e,IAIlBF,EAAUxT,KAAKsQ,IAAIkD,EAASG,EAAYL,EAAW3e,EAAI,IACvDif,KAQJ,OALKA,IACDJ,EAAU,MAEdrX,KAAKkX,eAAiBG,EAEfrX,KAAKkX,sDAUZ,OAAOlX,KAAKkQ,aAAavE,OAAO5L,qDAUnB,IAAArF,EAAAsF,KACPgL,KASN,OARAoB,EAAmBpM,KAAKqM,WAAY,SAAC7T,GACjC,IAAMwZ,EAAQ0F,EAAKxH,aAAalF,KAAKxS,GACjCwZ,aAAiB2B,EACjB3I,EAAK9E,KAAK8L,GAEVhH,EAAK9E,KAAKpG,EAAkBsG,SAAS4L,EAAO0F,EAAK3X,aAGlDiL,QAxGMgM,GAwGNhM,sPC3GM2M,qrBAAenB,4DAS5B,IAAMoB,EAAU5X,KAAKkQ,aAAavE,OAAOkM,KACzC,OAAQD,EAAQ,GAAIA,EAAQA,EAAQlW,OAAS,OAAA3H,IAAA,OAAAN,MAAA,SAAAA,QAU7C,OAAOuG,KAAKkQ,aAAavE,OAAOkM,WApBnBF,GAoBmBE,sPClBnBC,qrBAAgB3B,+CAY7B,OAHKnW,KAAKyW,gBACNzW,KAAKyW,cAAgBzW,KAAK0W,uBAEvB1W,KAAKyW,mDAUZ,OAAOzW,KAAKkQ,aAAavE,OAAOoM,8CAUhC,OAAO/X,KAAKkQ,aAAavE,OAAOqM,UAAYlD,gDAShC,IACJmD,EAAiBjY,KAAKkQ,aAAavE,OAAnCsM,aACR,OAAOA,aAAwB1C,SAAW0C,EAAenN,sDAUzD,MAAM,IAAI4E,MAAM,0BAAA3V,IAAA,gBAAAN,MAAA,SAAAA,QAWhB,OAAOuG,KAAKgL,aAhEC8M,GAgED9M,sPC/DCkN,qrBAAmBJ,gDAShC,OAAO7Y,EAAeC,+DAUH,IAAAxE,EAAAsF,KACfmU,EAAM3L,OAAO8O,kBACbjD,EAAM7L,OAAO2P,kBAiBjB,OAdA/L,EAAmBpM,KAAKqM,WAAY,SAAC7T,GACjC,IAAMwZ,EAAQoD,EAAKlF,aAAalF,KAAKxS,GACjCwZ,aAAiB2B,IAIjB3B,EAAQmC,IACRA,EAAMnC,GAENA,EAAQqC,IACRA,EAAMrC,OAINmC,EAAKE,SAtCA6D,GAsCA7D,sPC5CA+D,kLAQb,MAAM,IAAI1I,MAAM,2BAAAhV,EARH0d,GAQGC,GAAA,oBAAA3d,IAAAhB,GAAA,QAAAO,EAAA,EAAAA,EAAAP,EAAAgI,OAAAzH,IAAA,KAAAX,EAAAI,EAAAO,GAAAX,EAAAF,WAAAE,EAAAF,aAAA,EAAAE,EAAA2S,cAAA,YAAA3S,MAAA4S,UAAA,GAAAhT,OAAAC,eAAAuB,EAAApB,EAAAS,IAAAT,IAAA,gBAAAI,EAAAO,EAAAX,GAAA,OAAAW,GAAAS,EAAAhB,EAAAY,UAAAL,GAAAX,GAAAoB,EAAAhB,EAAAJ,GAAAI,GAAA,GCJH4e,qrBAA0BF,4CAQpClX,GAQH,OALKyS,EAAkB4E,UAAUrX,GAGpByS,EAAkB6E,eAAetX,GAFjCqF,OAAOrF,GAAKuX,aAZZH,GAYYG,sPCXZC,eAOjB,SAAAhf,EAAaiS,iGAAQgN,kPAEjBzD,EAAKvJ,OAASA,EACduJ,EAAK0D,KAAO,IAAI9Y,EAAkBoV,EAAKvJ,OAAO5L,QAH7B4Y,uUAPmBP,4CAoBjClX,GACH,IAAIuC,SAEJ,GAAKkQ,EAAkB4E,UAAUrX,GAI7BuC,EAASkQ,EAAkB6E,eAAetX,OAJP,CACnC,IAAIhB,EAAaF,KAAK4Y,KAAKrQ,cAAcrH,GACzCuC,EAASvD,EAAaA,EAAWsK,UAAYmJ,EAAkBzG,GAInE,OAAOzJ,QA7BMiV,GA6BNjV,sPC9BMoV,qrBAAqBT,4CAQ/BlX,GAEHA,EAAMqF,OAAOrF,GACb,IAAIuC,SAEJ,GAAKkQ,EAAkB4E,UAAUrX,GAK7BuC,EAASkQ,EAAkB6E,eAAetX,OALP,CACnC,IAAI4X,EAAU5X,EAAImH,MALR,2DAMV5E,EAASqV,EAAatQ,OAAOuQ,WAAWD,EAAQ,IAAvCA,IAA8CtQ,OAAOuQ,WAAWD,EAAQ,IAC9DnF,EAAkBzG,GAIzC,OAAOzJ,QApBMoV,GAoBNpV,sPCpBMuV,qrBAAyBZ,4CAQnClX,GACH,IAAIuC,SAEJ,GAAKkQ,EAAkB4E,UAAUrX,GAI7BuC,EAASkQ,EAAkB6E,eAAetX,OAJP,CACnC,IAAIC,EAAY4X,WAAW7X,EAAK,IAChCuC,EAAS+E,OAAOyL,MAAM9S,GAAawS,EAAkBzG,GAAK/L,EAI9D,OAAOsC,QAjBMuV,GAiBNvV,sPCnBMwV,cAUjB,SAAAve,EAAa3B,EAAMiS,EAAMW,EAAQxJ,iGAAQ+W,QACrClZ,KAAKjH,KAAOA,EACZiH,KAAK2L,OAASA,EACd3L,KAAKmC,OAASA,EACdnC,KAAKgL,KAAOhL,KAAKmZ,UAAUnO,sDAUpBA,GAAM,IAAAtR,EAAAsG,KACb,OAAOgL,EAAK/C,IAAI,SAAAvN,GAAA,OAASwa,EAAK/S,OAAOsE,MAAMuL,WAzB9BiH,GC0Fd,SAASG,GAAaC,EAAY1N,EAAQ2N,GAC7C,IAAMC,KAUN,OARMD,GAAWA,EAAQ5X,SACrB4X,EAAU3N,EAAO1D,IAAI,SAAAvN,GAAA,OAAQsP,EAAKjR,QAGtCugB,EAAQxQ,QAAQ,SAAC0Q,EAAQhhB,GACrB+gB,EAAWC,GAAUhhB,IAGlBmT,EAAO1D,IAAI,SAAAvO,GAAA,OAzFtB,SAAyBsR,EAAMW,GAC3BX,EAAOA,MACP,IAAIkF,SAEJ,OAAQvE,EAAOrQ,MACf,KAAK6D,EAAUC,QACX,OAAQuM,EAAO0K,SACf,KAAKpX,EAAeC,WAGpB,QAEI,OADAgR,EAAe,IAAI+I,GAAatN,EAAO5S,KAAMiS,EAAMW,EAAQ,IAAIqN,IACxD,IAAId,GAAWhI,EAAf,MAAkClF,EAAKtJ,OAAS,IAE/D,KAAKvC,EAAUE,UACX,OAAQsM,EAAO0K,SACf,KAAKzX,EAAiBC,YAElB,OADAqR,EAAe,IAAI+I,GAAatN,EAAO5S,KAAMiS,EAAMW,EAAQ,IAAI2M,IACxD,IAAI3B,GAAYzG,EAAhB,MAAmClF,EAAKtJ,OAAS,IAC5D,KAAK9C,EAAiBE,SAElB,OADAoR,EAAe,IAAI+I,GAAatN,EAAO5S,KAAMiS,EAAMW,EAAQ,IAAI+M,GAAe/M,IACvE,IAAIqL,GAAS9G,EAAb,MAAgClF,EAAKtJ,OAAS,IACzD,KAAK9C,EAAiBI,OAElB,OADAkR,EAAe,IAAI+I,GAAatN,EAAO5S,KAAMiS,EAAMW,EAAQ,IAAIkN,IACxD,IAAIlB,GAAOzH,EAAX,MAA8BlF,EAAKtJ,OAAS,IACvD,QAEI,OADAwO,EAAe,IAAI+I,GAAatN,EAAO5S,KAAMiS,EAAMW,EAAQ,IAAI2M,IACxD,IAAI3B,GAAYzG,EAAhB,MAAmClF,EAAKtJ,OAAS,IAEhE,QAEI,OADAwO,EAAe,IAAI+I,GAAatN,EAAO5S,KAAMiS,EAAMW,EAAQ,IAAI2M,IACxD,IAAI3B,GAAYzG,EAAhB,MAAmClF,EAAKtJ,OAAS,KA/BhE,CAyF8C2X,EAAWE,EAAWvP,EAAKjR,OAAQiR,KC3GlE,IAAAyP,IACXC,WAAYnb,EAAWI,MCuCZgb,GAvBf,SAuBeA,GAvBE5I,EAAKpK,GAIlBA,EAAUzN,OAAO4T,WAFb8M,mBAEuCjT,GAE3C,IAAI6S,EACEK,KACA3T,EAAO4T,EAAYD,GAYzB,OAPIL,EAHA7S,EAAQiT,eAGC7I,EAAIzJ,OAAO,EAAG,GAAG,MAK9ByJ,EAAIjI,QAAQ,SAAApO,GAAA,OAASwL,sIAAQqF,OAErBiO,EAAQK,ICvChBE,MACAC,MACAC,GAAQ,GACRC,GAAU,GACVC,GAAS,GAEb,SAASC,GAAgBP,GACvB,OAAO,IAAItE,SAAS,IAAK,WAAasE,EAAQ5R,IAAI,SAASlP,EAAMP,GAC/D,OAAO6hB,KAAKC,UAAUvhB,GAAQ,OAASP,EAAI,MAC1CuK,KAAK,KAAO,KA0BF,IAAAwX,GAAA,SAAAA,GAASC,GACtB,IAAIC,EAAW,IAAIta,OAAO,KAAQqa,EAAY,SAC1CE,EAAYF,EAAUG,WAAW,GAWrC,SAASC,EAAUva,EAAMwa,GACvB,IAIInhB,EAJAohB,KACAC,EAAI1a,EAAKqB,OACT8L,EAAI,EACJvT,EAAI,EAEJ+gB,EAAMD,GAAK,EACXE,KAMJ,SAAS9U,IACP,GAAI6U,EAAK,OAAOhB,GAChB,GAAIiB,EAAK,OAAOA,KAAalB,GAG7B,IAAIvhB,EAAUK,EAAPqiB,EAAI1N,EACX,GAAInN,EAAKsa,WAAWO,KAAOjB,GAAO,CAChC,KAAOzM,IAAMuN,GAAK1a,EAAKsa,WAAWnN,KAAOyM,IAAS5Z,EAAKsa,aAAanN,KAAOyM,KAI3E,OAHKzhB,EAAIgV,IAAMuN,EAAGC,MACRniB,EAAIwH,EAAKsa,WAAWnN,QAAU0M,GAASe,KACxCpiB,IAAMshB,KAAUc,KAAgB5a,EAAKsa,WAAWnN,KAAO0M,MAAW1M,GACpEnN,EAAK8a,MAAMD,EAAI,EAAG1iB,EAAI,GAAG8H,QAAQ,MAAO,KAIjD,KAAOkN,EAAIuN,GAAG,CACZ,IAAKliB,EAAIwH,EAAKsa,WAAWniB,EAAIgV,QAAU0M,GAASe,UAC3C,GAAIpiB,IAAMshB,GAAUc,KAAgB5a,EAAKsa,WAAWnN,KAAO0M,MAAW1M,OACtE,GAAI3U,IAAM6hB,EAAW,SAC1B,OAAOra,EAAK8a,MAAMD,EAAG1iB,GAIvB,OAAOwiB,KAAY3a,EAAK8a,MAAMD,EAAGH,GAGnC,IA7BI1a,EAAKsa,WAAWI,EAAI,KAAOb,MAAWa,EACtC1a,EAAKsa,WAAWI,EAAI,KAAOZ,MAAUY,GA4BjCrhB,EAAIyM,OAAa6T,IAAK,CAE5B,IADA,IAAIoB,KACG1hB,IAAMqgB,IAAOrgB,IAAMsgB,IAAKoB,EAAIlV,KAAKxM,GAAIA,EAAIyM,IAC5C0U,GAA4B,OAAtBO,EAAMP,EAAEO,EAAKnhB,OACvB6gB,EAAK5U,KAAKkV,GAGZ,OAAON,EAgBT,SAASO,EAAUD,GACjB,OAAOA,EAAInT,IAAIqT,GAAavY,KAAKyX,GAGnC,SAASc,EAAYjb,GACnB,OAAe,MAARA,EAAe,GAChBoa,EAAS3c,KAAKuC,GAAQ,IAAM,IAAOA,EAAKC,QAAQ,KAAM,MAAU,IAChED,EAGR,OACEoG,MAlFF,SAAAA,MAAepG,EAAMwa,GACnB,IAAIU,EAAS1B,EAASiB,EAAOF,EAAUva,EAAM,SAAS+a,EAAK5iB,GACzD,GAAI+iB,EAAS,OAAOA,EAAQH,EAAK5iB,EAAI,GACrCqhB,EAAUuB,EAAKG,EAAUV,EA9B/B,SAAyBhB,EAASgB,GAChC,IAAIzgB,EAASggB,GAAgBP,GAC7B,OAAO,SAASuB,EAAK5iB,GACnB,OAAOqiB,EAAEzgB,EAAOghB,GAAM5iB,EAAGqhB,IAH7B,CA8BmDuB,EAAKP,GAAKT,GAAgBgB,KAGzE,OADAN,EAAKjB,QAAUA,MACRiB,GA6EPF,UAAWA,EACX7a,OA1BF,SAAAA,OAAgB+a,EAAMjB,GAEpB,OADe,MAAXA,IAAiBA,EA9EzB,SAAsBiB,GACpB,IAAIU,EAAYtiB,OAAOY,OAAO,MAC1B+f,KAUJ,OARAiB,EAAKhS,QAAQ,SAASsS,GACpB,IAAK,IAAIK,KAAUL,EACXK,KAAUD,GACd3B,EAAQ3T,KAAKsV,EAAUC,GAAUA,KAKhC5B,EAZT,CA8EgDiB,KACpCjB,EAAQ5R,IAAIqT,GAAavY,KAAKyX,IAAYkB,OAAOZ,EAAK7S,IAAI,SAASmT,GACzE,OAAOvB,EAAQ5R,IAAI,SAASwT,GAC1B,OAAOH,EAAYF,EAAIK,MACtB1Y,KAAKyX,MACNzX,KAAK,OAqBT4Y,WAlBF,SAAAA,WAAoBb,GAClB,OAAOA,EAAK7S,IAAIoT,GAAWtY,KAAK,SCzGhC6Y,GAAMC,GAAI,KCAVC,IDEkBF,GAAInV,MACAmV,GAAIhB,UACPgB,GAAI7b,OACA6b,GAAID,WCLrBE,GAAI,OAEQC,GAAIrV,MACAqV,GAAIlB,UACPkB,GAAI/b,OACA+b,GAAIH,WC4BhB,IAAAI,GAXf,SAWeA,GAXE5R,EAAKxD,GAKlBA,EAAUzN,OAAO4T,WAHb8M,kBACAoC,eAAgB,KAEuBrV,GAE3C,IAAMsV,EAAMJ,GAAMlV,EAAQqV,gBAC1B,OAAOE,GAAOD,EAAIrB,UAAUzQ,GAAMxD,ICoBvBwV,GAxBf,SAwBeA,GAxBIpL,GACf,IAAMyI,KACFhhB,EAAI,EACJ4jB,SACEvC,KACA3T,EAAO4T,EAAYD,GAgBzB,OAdA9I,EAAIjI,QAAQ,SAACkB,GACT,IAAMpB,KACN,IAAK,IAAI7O,KAAOiQ,EACRjQ,KAAOyf,EACP4C,EAAiB5C,EAAOzf,IAExByf,EAAOzf,GAAOvB,IACd4jB,EAAiB5jB,EAAI,GAEzBoQ,EAAOwT,GAAkBpS,EAAKjQ,GAElCmM,eAAQ0C,MAGJ1P,OAAO4M,KAAK0T,GAASK,IC1BlBwC,GAXf,SAWeA,GAXArR,EAAMrE,GACjB,IAAM2V,GAAeC,YAAUC,UAAQC,WACjC/C,EAAa3O,EAAiBC,GAEpC,IAAK0O,EACD,MAAM,IAAIhK,MAAM,mCAGpB,OAAO4M,EAAW5C,GAAY1O,EAAMrE,4gBCGjC,SAASyJ,GAAiBxH,GAC7B,IAAM8T,KAEN,OADAxjB,OAAO4M,KAAK8C,GAAQE,QAAQ,SAAC/O,GAAU2iB,EAAK3iB,GAAO,IAAIgS,EAAMnD,EAAO7O,GAAMA,KACnE2iB,EAGJ,IAOMC,GAAoB,SAApBA,GAAqBC,EAAOC,GAAuC,IAClCC,EADMjQ,EAA4BzH,UAAA1D,OAAA,YAAA0D,UAAA,GAAAA,UAAA,MAAf2X,EAAe3X,UAAA,GACxEyX,IAAc7O,GACd4O,EAAMI,YAAYtb,OAAS,GAC3Bob,IAAME,aAAY9W,KAAlB4W,WAA0BC,KAE1BH,EAAMI,YAAY9W,MACd+W,GAAIJ,EACJK,KAAMrQ,EACNsQ,SAAUJ,KAKTK,GAA4B,SAA5BA,GAA6BC,EAAUC,GAAU,IAAArjB,GAC1DsjB,IAAMC,qBAAoBtX,KAA1BqX,WAAkCF,EAASG,qBAA3CD,UAAmEF,EAASL,gBAsCnES,GAAqB,SAArBA,GAAsBb,GAC/B,IAAMc,EAAWd,EAAMe,UACjBC,EAAoBhB,EAAMiB,uBAShC,OARAH,EAASzK,eAAiB2K,EAAkBhV,OAAOX,IAAI,SAAAvN,GAAA,OAAKmgB,EAAE9hB,SAAQgK,KAAK,KAG3E6a,EAAkBtS,iBAAmB,KACrCsS,EAAkB9R,iBAAmB,KACrC8R,EAAkBlS,eAAiB,KACnCgS,EAASI,wBAAwBC,wBAE1BL,GAGEM,GAAyB,SAAzBA,GAA0BpB,EAAOqB,GAA4B,IAAhBpR,EAAgBzH,UAAA1D,OAAA,YAAA0D,UAAA,GAAAA,UAAA,MAChEyX,EAAYhQ,EAAOgQ,WjCvEpB,MiCwECqB,EAAkBrR,EAAOqR,oBAC3BC,KAiDJ,OA7CIA,EAHCF,EAAWvc,OAGNuc,EAAWhW,IAAI,SAAAvN,GAAA,OAAc,SAAC0jB,GAChC,IAAMC,EAAUD,EAAUE,UACpB3S,EAAS0S,EAAQ1S,OACjB4S,EAAeH,EAAUI,kBACzBC,EAAcL,EAAU/O,gBAAgBhE,YACxCL,EAAOqT,EAAQrT,KACf8L,EAAS5d,OAAOwlB,OAAOH,GAAc9L,OAAO,SAACC,EAAK9I,GAEpD,OADA8I,EAAI9I,EAAE+U,IAAI5lB,MAAQ0lB,EAAY7U,EAAE+U,IAAI5lB,MAAM+d,SACnCpE,OAGX,OAAO,SAAC9J,GAgBJ,QAfiBoC,EAAKtJ,QAAiBsJ,EAAK4T,KAAK,SAAAllB,GAAA,OAAOiS,EAAOkT,MAAM,SAACC,GAClE,KAAMA,EAAU/lB,QAAQ6P,GACpB,SAEJ,IAAMnP,EAAQmP,EAAOkW,EAAU/lB,MAAMgmB,UACrC,GAAIb,GAAmBY,EAAUxjB,OAAS6D,EAAUC,QAChD,OAAO3F,GAASqd,EAAOgI,EAAU/lB,MAAM,IAAMU,GAASqd,EAAOgI,EAAU/lB,MAAM,GAGjF,GAAI+lB,EAAUxjB,OAAS6D,EAAUE,UAC7B,SAEJ,IAAMsT,EAAM4L,EAAaO,EAAU/lB,MAAMkJ,MACzC,OAAOmZ,EAAIzI,KAAS/J,EAAOkW,EAAU/lB,MAAMgmB,eAzBpB,CA6BhCC,MA/BI,sBjC3EN,QiC8GDnC,EACgBY,GAAmBb,GAAOqC,OAAO,SAAAvkB,GAAA,OAAUyjB,EAAIU,MAAM,SAAAnlB,GAAA,OAAMwlB,EAAGtW,OAC1EuW,aACAxlB,KAAM2F,EAAcG,MAGRge,GAAmBb,GAAOqC,OAAO,SAAAvkB,GAAA,OAAUyjB,EAAIS,KAAK,SAAAllB,GAAA,OAAMwlB,EAAGtW,OACzEjP,KAAM2F,EAAcG,IACpB0f,gBAOCC,GAAkB,SAAlBA,GAAmB/B,EAAUgC,EAAUC,EAAcC,GAC9D,IAAMC,EAASnC,EAASM,MAAM4B,EAAYJ,WACpC9S,EA1GkB,SAAfoT,GAAgBpT,EAAYzD,EAAQyW,EAAUxS,EAAQwQ,GAC/D,IAAMqC,KACFC,GAAqB,EACnBhmB,EAASkT,EAATlT,KACFimB,SACAC,KACAC,EAAgB,SAAhBA,IAAgB,OAAMzC,EAAS/M,gBAC7ByP,EAAmB,SAAnBA,EAAmBrlB,GAAA,OAAS2kB,EA7CtC,SAA+BzW,EAAQpQ,GACnC,IAAMkkB,KADgCsD,uBAEtC,QAAA/mB,EAAA0U,EAAkB/E,EAAlBrP,OAAAmU,cAAApU,GAAAL,EAAA0U,EAAAC,QAAAC,MAAAvU,GAAA,EAA0B,KAAjBiS,EAAiBtS,EAAAQ,MACtBijB,EAAKnR,EAAMxS,QAAU,IAAIgT,EAAMR,EAAM2E,aAAalF,KAAKxS,GAAI+S,IAHzByU,6EAKtC,OAAOtD,EALX,CA8C6B9T,EAAQ3G,GAC7BA,EACA6d,EACAD,IAGAI,SAkBJ,OAhBIA,EADAtmB,IAAS2F,EAAcE,QACb,SAAA9E,GAAA,OAAUqlB,EAAiB9d,IAE3B,SAAAvH,GAAA,OAASqlB,EAAiB9d,IAGxCmK,EAAmBC,EAAY,SAAC7T,GACxBynB,EAAQznB,MACmB,IAAvBmnB,GAA4BnnB,IAAOmnB,EAAoB,GACvDC,EAAKF,EAAche,OAAS,EAC5Bge,EAAcE,GAASF,EAAcE,GAAIrT,MAAM,KAAK,GAApDmT,IAA0DlnB,GAE1DknB,EAAcxZ,KAAdwZ,GAAsBlnB,GAE1BmnB,EAAoBnnB,KAGrBknB,EAAc3c,KAAK,KA0EP0c,CACfD,EAAO5P,YACP4P,EAAO3B,uBAAuBjV,OAC9ByW,EACAC,EACAjC,GAQJ,OANAmC,EAAO5P,YAAcvD,EACrBmT,EAAO1B,wBAAwBC,wBAE/BpB,GAAkB6C,EAAQxR,GAAyBnB,OAAQyS,GAAgBD,GAC3EjC,GAA0BC,EAAUmC,GAE7BA,GAGEU,GAAmB,SAAnBA,GAAoB7C,EAAU8C,EAAWtT,EAAQuT,GAC1D,IAAMZ,EAASnC,EAASM,MAAM9Q,EAAOsS,WACjCkB,EAAgBF,EAiBpB,OAhBItT,EAAOlT,OAAS2F,EAAcE,UAC9B6gB,EAAgBD,EAAU1M,OAAO,SAAAhZ,GAAA,OAA+C,IAAlCylB,EAAUla,QAAQuN,MAIpEgM,EAAOvM,eAAiBoN,EAActd,KAAK,KAC3Cyc,EAAO1B,wBAAwBC,wBAE/BpB,GACI6C,EACAxR,GACEmS,YAAWtT,SAAQyT,gBAAiBD,GACtC,MAEJjD,GAA0BC,EAAUmC,GAE7BA,GAGEe,GAAqB,SAArBA,GAAsBC,GAO/B,IALAA,EAAahX,KAAYgX,IACTllB,OACZklB,EAAWllB,KAAO6D,EAAUE,YAG3BmhB,EAAWnK,QACZ,OAAQmK,EAAWllB,MACnB,KAAK6D,EAAUC,QACXohB,EAAWnK,QAAUpX,EAAeC,WACpC,MACJ,QACA,KAAKC,EAAUE,UACXmhB,EAAWnK,QAAUzX,EAAiBC,YAK9C,OAAO2hB,GAKEC,GAAa,SAAbA,GAAcC,EAAU1V,EAAMW,EAAQhF,GAC/CgF,EAAwBA,EAHmB1D,IAAI,SAAAvN,GAAA,OAAc6lB,GAAmBC,KAIhF7Z,EAAUzN,OAAO4T,OAAO5T,OAAO4T,UAAW6T,IAAgBha,GAC1D,IAAMia,EAAcC,EAAUla,EAAQ+S,YAEtC,IAAMkH,GAAsC,mBAAhBA,EACxB,MAAM,IAAIlR,MAAJ,mCAA6C/I,EAAQ+S,WAArD,WANiD,IAAA/L,EAS3BiT,EAAY5V,EAAMrE,GATS9N,EAAAioB,GAAAnT,EAAA,GASpD6L,EAToD3gB,EAAA,GAS5CkoB,EAT4CloB,EAAA,GAUrDsS,EAAWiO,GAAa2H,EAAepV,EAAQ6N,GAG/CwH,EAAY/V,EAAWC,gBAAgBC,EAAUxE,EAAQ5N,MAM/D,OALA2nB,EAASO,mBAAqBD,EAE9BN,EAAS9Q,YAAcmR,EAAcrf,QAAUqf,EAAc,GAAGrf,OAAzCqf,MAAuDA,EAAc,GAAGrf,OAAS,GAAM,GAC9Ggf,EAASzN,eAAkBtH,EAAO1D,IAAI,SAAAvN,GAAA,OAAKwmB,EAAEnoB,OAAOgK,OACpD2d,EAASS,YAAcxa,EAAQ+S,aAAenb,EAAWI,KAAOoM,EAAiBC,GAAQrE,EAAQ+S,WAC1FgH,GAGEU,GAAgB,SAAhBA,GAAiBzV,EAAQJ,GAGlC,IAFA,IAAI/S,EAAI,EAEDA,EAAImT,EAAOjK,SAAUlJ,EACxB,GAAI+S,IAAUI,EAAOnT,GAAGO,KACpB,OACIuC,KAAMqQ,EAAOnT,GAAG6d,SAAW1K,EAAOnT,GAAG8C,KACrC2G,MAAOzJ,GAInB,OAAO,MA6BL6oB,GAAgC,SAAhCA,GAAiCrC,EAAWZ,GAC9C,IAAMkD,EAAclD,EAAUmD,iBAC1BC,EAAiBxC,EAAU,GAC3ByC,EAAiBzC,EAAU,GAkB/B,OAhBAsC,EAAYxY,QAAQ,SAAC4Y,GACjB,GAAKA,EAAL,CADgC,IAMjBC,IANiBnpB,EA9BF,SAACkpB,GACnC,IAAIE,KACA/E,SAEJ,OADAA,EAAY6E,EAAWzE,IAEvB,KAAKjP,EACD4T,GAAUF,EAAWvE,UACrB,MACJ,KAAKnP,EACD4T,GAAUF,EAAWxE,KAAKoD,iBAC1B,MACJ,KAAKtS,EACD6O,EAAY,UACZ+E,GAAUF,EAAWxE,KAAK2E,cAActV,MAAM,KAAMmV,EAAWvE,UAC/D,MACJ,QACIN,EAAY,KAGhB,OACIA,YACA+E,UArB8B,CAmCuBF,GAA7C7E,EALwBrkB,EAKxBqkB,UAAW+E,EALappB,EAKbopB,OACf/E,IACA2E,GAAiBG,KAAe9E,GAAf8E,WAA6BC,GAA7BD,SACbxC,iBAEJsC,GAAiBK,KAAejF,GAAfiF,WAA6BF,GAA7BE,SACb3C,sBAKJqC,EAAgBC,IAWtBM,GAAuB,SAAvBA,EAAwB3D,EAAWY,GAA8C,IAAnCnS,EAAmCzH,UAAA1D,OAAA,YAAA0D,UAAA,GAAAA,UAAA,MAAtB4c,EAAsB5c,UAAA1D,OAAA,YAAA0D,UAAA,GAAAA,UAAA,MAC7E6c,EAAqBD,EAAaC,mBAClCC,EAAgBF,EAAaE,kBAE/B9D,IAAc6D,MAIAC,EAAcxgB,SAA+C,IAAtCwgB,EAAcjc,QAAQmY,KAElDA,EAAU+D,kBAAkBnD,EAAWnS,GAEnCuR,EAAUgE,UAClBtZ,QAAQ,SAACuZ,GAAU,IAAA7pB,EACe6oB,GAA8BrC,EAAWqD,GADxDppB,EAAA6nB,GAAAtoB,EAAA,GACnBgpB,EADmBvoB,EAAA,GACHwoB,EADGxoB,EAAA,GAExB8oB,EAAqBM,GAAQb,EAAgBC,GAAiB5U,EAAQmV,OA0BjEM,GAA2B,SAA3BA,GAA4BC,EAAaC,EAAYC,EAAgB5V,GAC9E,IAAIsQ,SACA6B,SACI0D,EAA4CD,EAA5CC,qBAAsBC,EAAsBF,EAAtBE,kBACxBC,EAAsBH,EAAeI,SACrCC,EAA8BjW,EAAOiW,4BAMvCC,KAEJ,GAAoB,OAAhBR,QAAwB1V,EAAOmW,WAC/BD,IACI5F,kBAED,KAAA1iB,EACCwoB,EAAkB/pB,OAAOwlB,OAAOgE,EAAqBQ,qBACrDP,IACAM,EAAkBA,EAAgBvP,OAAO,SAAAhZ,GAAA,OAAK5B,EAAE+T,OAAOgW,WAAaD,KAGxE,IAAMO,EAAmBF,EAAgBvP,OAjB5B,SAAC0P,GAEd,OADevW,EAAOmC,UAAa,sBACrBoU,EAAOvW,KAeqC5E,IAAI,SAAAvN,GAAA,OAAU2oB,EAAOxW,OAAOsQ,WAEhF+E,KAEN,QAAIS,EAA6B,CAC7B,IAAMW,EAAwBpqB,OAAOwlB,OAAOgE,EAAqBQ,gBAEjEI,EAAsBxa,QAAQ,SAACya,GAC3B,IAAMC,EAAaD,EAAU1W,YACzB2W,EAAWC,eAA2BD,EAAWH,SAAWxW,EAAOwW,QAC/DG,EAAWX,WAAaD,IAC5BV,EAAchc,KAAKqd,EAAU3G,QAC7BO,EAAWmG,EAAsB5P,OAAO,SAAAha,GAAA,OAAKZ,IAAMyqB,IAAWtb,IAAI,SAAAvN,GAAA,OAAK5B,EAAE+T,OAAOsQ,YACvEzb,QAAUqhB,EAAU7c,MACzBiX,WACAuG,OAAQH,EAAU3G,MAClB+G,KA/CU,SAAC/G,GAC/B,IADoD,IAAd+G,EAAcve,UAAA1D,OAAA,YAAA0D,UAAA,GAAAA,UAAA,MAC7CwX,EAAMgH,SACTD,EAAKzd,KAAK0W,GACVA,EAAQA,EAAMgH,QAElB,OAAOD,EALuB,CA+CeJ,EAAU3G,YAOnDO,GAAW0G,MAAGnI,OAAHmI,qBAAiBV,IAAkBZ,KAAc7O,OAAO,SAAAhZ,GAAA,OAAW,OAAN5B,IACxEiqB,EAAU7c,MACNiX,WACA+E,wBAAmBA,EAAnBA,GAAqCrV,EAAOqV,sBAIpD,IAAM4B,EAAYtB,EAAW5F,MAEvBmH,EAAa7qB,OAAO4T,QACtBkX,kBAAmBzB,EACnBK,uBACD/V,GAEGoX,EAAmBzB,EAAW0B,aAChCpB,GAA+BmB,IAC/BjF,EAAYhB,GAAuBiG,EAAkB9G,GACjDe,gBAAiB4E,IAErBf,GAAqBkC,EAAkBjF,EAAW+E,IAGtDhB,EAAUja,QAAQ,SAACqb,GACf,IAAMC,EAAmBpG,GAAuB8F,EAAWK,EAAIhH,UACzDwG,EAAOQ,EAAIR,KAEjB,GAAIA,EAAM,CACN,IAAMU,EA1HO,SAACrF,EAAW2E,GACjC,IAAK,IAAInrB,EAAI,EAAGiQ,EAAMkb,EAAKjiB,OAAQlJ,EAAIiQ,EAAKjQ,IAAK,CAC7C,IAAMokB,EAAQ+G,EAAKnrB,GACnBwmB,EAAYqC,GAA8BrC,EAAWpC,GAEzD,OAAOoC,EALc,CA0H0BoF,EAAkBT,EAAKW,WAC9DH,EAAIT,OAAOvB,kBAAkBkC,EAAeN,QAE5ChC,GAAqB+B,EAAWM,EAAkBL,GAC9C7B,cAAeiC,EAAIjC,cACnBD,mBAAoBa,GAA+BmB,6PCqKpDM,cA3jBX,SAAA7pB,KAAA,SAAAA,EAAAhB,GAAA,KAAAgB,aAAAhB,GAAA,UAAAqU,UAAA,sCAAwByW,QACpB,IAAIC,SAEJzkB,KAAK4jB,QAAU,KACf5jB,KAAKgd,eACLhd,KAAKwd,uBACLxd,KAAKoiB,aANeoC,2BAAR5C,EAAQ4C,qBAAR5C,EAAQ4C,gBAQE,IAAlB5C,EAAOlgB,SAAkB+iB,EAAS7C,EAAO,cAAe8C,GAExD1kB,KAAKiT,eAAiBwR,EAAOxR,eAC7BjT,KAAK4P,YAAc6U,EAAO7U,YAC1B5P,KAAKmhB,YAAcsD,EAAOtD,YAC1BnhB,KAAK4jB,QAAUa,EACfzkB,KAAKihB,mBAAqBjhB,KAAK4jB,QAAQ3C,mBACvCjhB,KAAK2kB,gBAAkBpa,IACvBvK,KAAK8d,wBAAwBC,0BAE7B0C,GAAUmE,cAAC5kB,MAAXygB,OAAoBmB,IACpB5hB,KAAK2kB,gBAAkB3kB,KAAKihB,mBAAmBloB,KAC/CiH,KAAK8d,wBAAwBC,wBAC7B/d,KAAK6kB,uBACD3B,kBACA4B,2EA0BR,OAAO9kB,KAAKqP,gBAAgBzG,OAAOX,IAAI,SAAAvN,GAAA,OAAK5B,EAAE6S,mDAY9C,OAAO3L,KAAK2kB,8DAIZ,OAAO3kB,KAAK+kB,kEAMZ,OAFA/kB,KAAK+kB,YDpEe,SAAfC,GAAetqB,EAA8BkjB,EAAmBqH,GAAmB,IAAA3rB,EAAAwnB,GAAApmB,EAAA,GAAlE2R,EAAkE/S,EAAA,GAAtD4rB,EAAsD5rB,EAAA,GACxF6rB,EAASD,EAAcxjB,OAASwjB,EAAc3Y,MAAM,QACpD6Y,EAAkBxH,EAAkBvS,YACpCga,EAAYF,EAAOld,IAAI,SAAAvN,GAAA,OT+BxB,SAAoCwV,EAAc7D,GAAY,IACzDV,EAAWuE,EAAXvE,OAER,OAAQA,EAAOrQ,MACf,KAAK6D,EAAUC,QACX,OAAQuM,EAAO0K,SACf,KAAKpX,EAAeC,WAEpB,QACI,OAAO,IAAIgZ,GAAWhI,EAAc7D,GAE5C,KAAKlN,EAAUE,UACX,OAAQsM,EAAO0K,SACf,KAAKzX,EAAiBC,YAClB,OAAO,IAAI8X,GAAYzG,EAAc7D,GACzC,KAAKzN,EAAiBE,SAClB,OAAO,IAAIkY,GAAS9G,EAAc7D,GACtC,KAAKzN,EAAiBI,OAClB,OAAO,IAAI2Y,GAAOzH,EAAc7D,GACpC,QACI,OAAO,IAAIsK,GAAYzG,EAAc7D,GAE7C,QACI,OAAO,IAAIsK,GAAYzG,EAAc7D,IAvBtC,CS/B2D+Y,EAAgBE,GAAMpV,aAAc7D,KAClG,OAAOpB,EAAWC,gBAAgBma,EAAWJ,GCgEtBD,EAAchlB,KAAK4P,YAAa5P,KAAKiT,gBACnDjT,KAAK6d,uBAAwB7d,KAAK2kB,iBAChC3kB,0DAIP,OAAOA,KAAKihB,sDAiCVsE,EAAUvW,GACZ,OAAOH,EAAa7O,KAAMulB,EAAUvW,6CAuB3BuW,GACT,OAAO1W,EAAa7O,KAAMulB,EAAU7P,GAAkB1V,KAAMulB,UAAWxrB,IAAA,QAAAN,MAAA,SAAAA,MAqBpE+rB,GACH,OAAO3P,GAAM7V,KAAMwlB,4CAoBXC,GACR,OAAO7S,GAAW5S,KAAMylB,wCAkDpBpG,EAAUxS,GACd,IAAM6Y,GACF/rB,KAAM2F,EAAcC,OACpB4f,cAIEI,GAAgBJ,WAFtBtS,EAAS3T,OAAO4T,UAAW4Y,EAAW7Y,IAEEsS,WA0BxC,OAvBItS,EAAOlT,OAAS2F,EAAcG,KACb2f,GACbpf,KACAqf,GACE1lB,KAAM2F,EAAcC,QACtBggB,GAEaH,GACbpf,KACAqf,GACE1lB,KAAM2F,EAAcE,SACtB+f,IAIEH,GACFpf,KACAqf,EACAxS,EACA0S,MAIDoG,qCAsBP,OAAQ3lB,KAAK4P,YAAYlO,SAAW1B,KAAKiT,eAAevR,6CAUnC,IAAlByd,IAAkB/Z,UAAA1D,OAAA,YAAA0D,UAAA,KAAAA,UAAA,GACfsY,EAAW,IAAI1d,KAAK4lB,YAAY5lB,MAMtC,OALImf,EACAzB,EAASmI,UAAU7lB,MAEnB0d,EAASmI,UAAU,MAEhBnI,wCA8CFyC,EAAWtT,GAChB,IAAM6Y,GACF/rB,KAAM2F,EAAcC,OACpB4f,cAEJtS,EAAS3T,OAAO4T,UAAW4Y,EAAW7Y,GACtC,IAAMiZ,EAAc9lB,KAAKwe,kBACnB4B,EAAYlnB,OAAO4M,KAAKggB,GACtBnsB,EAASkT,EAATlT,KAEJosB,EAAsB5F,EAAU1N,OAAO,SAACC,EAAKnH,GAM7C,MAL+B,WAA3BA,EAAMqa,YAAY7sB,KAClB2Z,EAAIxM,KAAJwM,+HAAY0N,EAAU1M,OAAO,SAAAhZ,GAAA,OAA0C,IAA7B8Y,EAAUwS,OAAOza,OACpDA,KAASua,GAChBpT,EAAIxM,KAAKqF,GAENmH,OAGXqT,EAAsBld,MAAMG,KAAK,IAAI6N,IAAIkP,IAAsB9d,IAAI,SAAAvN,GAAA,OAAS6Q,EAAMkN,SAkBlF,OAfI9e,IAAS2F,EAAcG,KACDygB,GAAiBlgB,KAAM+lB,GACzCpsB,KAAM2F,EAAcC,OACpB4f,UAAWtS,EAAOsS,WACnBiB,GACkBF,GAAiBlgB,KAAM+lB,GACxCpsB,KAAM2F,EAAcE,QACpB2f,UAAWtS,EAAOsS,WACnBiB,IAGmBF,GAAiBlgB,KAAM+lB,EAAqBlZ,EAAQuT,MAIvEhC,6CAIP,OAAOpe,KAAKimB,mEAWZ,OAPAjmB,KAAKimB,aAAejmB,KAAK+kB,YAAYnc,OAAO6J,OAAO,SAACC,EAAKwT,EAAU1tB,GAK/D,OAJAka,EAAIwT,EAASntB,SACTkJ,MAAOzJ,EACPmmB,KAAO5lB,KAAMmtB,EAASntB,OAAQuC,KAAM4qB,EAAS5qB,OAAQ+a,QAAS6P,EAAS7P,YAEpE3D,OAEJ1S,6CAWPA,KAAK4jB,SAAW5jB,KAAK4jB,QAAQuC,YAAYnmB,MACzCA,KAAK4jB,QAAU,KACf5jB,KAAKoiB,UAAUtZ,QAAQ,SAACuZ,GACpBA,EAAMuB,QAAU,OAEpB5jB,KAAKoiB,uDA6BIC,GACT,IAAI1P,EAAM3S,KAAKoiB,UAAUgE,UAAU,SAAA1sB,GAAA,OAAW2sB,IAAYhE,KACjD,IAAT1P,GAAa3S,KAAKoiB,UAAU9a,OAAOqL,EAAK,MAAA5Y,IAAA,YAAAN,MAAA,SAAAA,MAQjC6sB,GACPtmB,KAAK4jB,SAAW5jB,KAAK4jB,QAAQuC,YAAYnmB,MACzCA,KAAK4jB,QAAU0C,EACfA,GAAUA,EAAOlE,UAAUlc,KAAKlG,gDA4BhC,OAAOA,KAAK4jB,oDA6BZ,OAAO5jB,KAAKoiB,yDA4BZ,OAAOpiB,KAAKgd,mEA4BZ,OAAOhd,KAAKwd,0BAIL+G,GAJK/G,qoBCkFL9M,eA3lBX,SAAAhX,IAAsB,IAAAgB,GAAA,SAAAA,EAAAhB,GAAA,KAAAgB,aAAAhB,GAAA,UAAAqU,UAAA,sCAAA/N,KAAAtG,GAAA,QAAAO,EAAAmL,UAAA1D,OAANsF,EAAM6B,MAAA5O,GAAAW,EAAA,EAAAA,EAAAX,EAAAW,IAANoM,EAAMpM,GAAAwK,UAAAxK,GAAA,IAAApC,EAAA,SAAAkC,EAAAhB,GAAA,IAAAgB,EAAA,UAAA6rB,eAAA,oEAAA7sB,GAAA,UAAAiB,QAAAjB,IAAA,mBAAAA,EAAAgB,EAAAhB,EAAA,CAAAsG,MAAAtF,EAAAhB,EAAA8sB,WAAAttB,OAAAutB,eAAA/sB,IAAAf,KAAA4O,MAAA7M,GAAAsF,MAAA0b,OACT1U,KADS,OAGlBkO,EAAKwR,kBACLxR,EAAKyR,mBAJanuB,EAAA,gBAAAkC,EAAAhB,GAAA,sBAAAA,GAAA,OAAAA,EAAA,UAAAqU,UAAA,2DAAApT,QAAAjB,IAAAgB,EAAAJ,UAAApB,OAAAY,OAAAJ,KAAAY,WAAAsrB,aAAAnsB,MAAAiB,EAAAtB,YAAA,EAAA8S,UAAA,EAAAD,cAAA,KAAAvS,IAAAR,OAAA0tB,eAAA1tB,OAAA0tB,eAAAlsB,EAAAhB,GAAAgB,EAAA8rB,UAAA9sB,GAAA,CAAAA,EArCF6qB,8CAwGX5d,GAQLA,EAAUzN,OAAO4T,WANb+Z,MAAO,MACPzkB,UAAW,KACX0kB,WACAC,gBACA7T,SAEoCvM,GACxC,IAAMiC,EAAS5I,KAAK6d,uBAAuBjV,OAErCoe,E/BMP,SAASC,GAAaC,EAAY7a,EAAY6Y,EAAeiC,EAAgBxgB,GAChF,IAMMygB,GACFzb,UACAX,QACAqc,SAEEC,GAPN3gB,EAAUzN,OAAO4T,WAHbwa,UACAC,eAEoC5gB,IAOjB2gB,OACjBE,EAAaL,GAAkBA,EAAezlB,OAAS,EAEvD+lB,KAiDN,GA/CgBvC,EAAc3Y,MAAM,KAE5BzD,QAAQ,SAAC4e,GACb,IAAK,IAAIlvB,EAAI,EAAGA,EAAI0uB,EAAWxlB,OAAQlJ,GAAK,EACxC,GAAI0uB,EAAW1uB,GAAGO,SAAW2uB,EAAS,CAClCD,EAAWvhB,KAAKghB,EAAW1uB,IAC3B,SAMZivB,EAAW3e,QAAQ,SAACyC,GAEhB6b,EAAOzb,OAAOzF,KAAKqF,EAAMI,YAGzB2b,GACAF,EAAOzb,OAAOzF,MACVnN,KAAM,MACNuC,KAAM,eAId8Q,EAAmBC,EAAY,SAAC7T,GAC5B4uB,EAAOpc,KAAK9E,SACZ,IAAMyhB,EAAYP,EAAOpc,KAAKtJ,OAAS,EAEvC+lB,EAAW3e,QAAQ,SAACyC,EAAOwE,GACvBqX,EAAOpc,KAAK2c,GAAW5X,EAFf,GAE6BxE,EAAM2E,aAAalF,KAAKxS,KAE7D8uB,IACAF,EAAOpc,KAAK2c,GAAWF,EAAW/lB,QAAUlJ,GAGhD4uB,EAAOC,KAAKnhB,KAAK1N,GAIbgvB,GAAcJ,EAAOpc,KAAK2c,GAAWzhB,KAAK1N,KAI9CgvB,GA7HR,SAAkBnJ,EAAS8I,GAOvB,IAPuC,IAC/Bnc,EAAiBqT,EAAjBrT,KAAMW,EAAW0S,EAAX1S,OACV6H,SACAoU,SACAC,SACArvB,EAAI2uB,EAAezlB,OAAS,EAEzBlJ,GAAK,EAAGA,IACXgb,EAAY2T,EAAe3uB,GAAG,GAC9BovB,EAAWT,EAAe3uB,GAAG,IAC7BqvB,EAAWzG,GAAczV,EAAQ6H,MAO7BlJ,EAAWsd,GAEX9W,EAAU9F,EAAM,SAACpQ,EAAGwI,GAAJ,OAAUwkB,EAAShtB,EAAEitB,EAAS5lB,OAAQmB,EAAEykB,EAAS5lB,UAC1DoI,EAAQud,GAAW,WAC1B,IAAM7V,EAAcH,EAAU5G,EAAM6c,EAAS5lB,OACvC6lB,EAAYF,EAASA,EAASlmB,OAAS,GACvC4Q,EAAesV,EAASzM,MAAM,EAAGyM,EAASlmB,OAAS,GACnD6Q,EAAqBD,EAAarK,IAAI,SAAAvN,GAAA,OAAK0mB,GAAczV,EAAQkP,KAEvE9I,EAAYjJ,QAAQ,SAACuJ,GACjBA,EAAanM,KAAKkM,GAAmBC,EAAcC,EAAcC,MAGrEzB,EAAUiB,EAAa,SAACnX,EAAGwI,GACvB,IAAMxK,EAAIgC,EAAE,GACNX,EAAImJ,EAAE,GACZ,OAAO0kB,EAAUlvB,EAAGqB,KAIxB+Q,EAAKtJ,OAAS,EACdqQ,EAAYjJ,QAAQ,SAACkJ,GACjBhH,EAAK9E,KAAL8E,UAAagH,EAAM,OAnBG,IAsB1B4V,EAA8C,SAAnCrhB,OAAOqhB,GAAUnmB,cAA2B,OAAS,MAChEqP,EAAU9F,EAAMwG,EAAUqW,EAASvsB,KAAMssB,EAAUC,EAAS5lB,UAIpEoc,EAAQgJ,QACRrc,EAAKlC,QAAQ,SAACrP,GACV4kB,EAAQgJ,KAAKnhB,KAAKzM,EAAMsuB,SAjDhC,CA8HiBX,EAAQD,GAGjBxgB,EAAQ4gB,WAAY,CACpB,IAAMS,EAAUnf,qBAASA,MAAMue,EAAOzb,OAAOjK,UAASuG,IAAI,sBAC1Dmf,EAAOpc,KAAKlC,QAAQ,SAACkH,GACjBA,EAAMlH,QAAQ,SAACkC,EAAMxS,GACjBwvB,EAAQxvB,GAAG0N,KAAK8E,OAGxBoc,EAAOpc,KAAOgd,EAGlB,OAAOZ,G+BhF+BzuB,KAC9BqH,KACAA,KAAK6d,uBAAuBjV,OAC5B5I,KAAK4P,YACLjJ,EAAQogB,aAAene,EAAOX,IAAI,SAAAvN,GAAA,OAAK5B,EAAEC,SAAQgK,OAAS/C,KAAKiT,eAC/DtM,EAAQuM,MAEJqU,WAA8B,WAAlB5gB,EAAQkgB,MACpBS,SAAU3gB,EAAQmgB,UAI1B,IAAKngB,EAAQvE,UACT,OAAO4kB,EAxBG,IA2BN5kB,EAAcuE,EAAdvE,UACA4I,EAAuBgc,EAAvBhc,KAAMW,EAAiBqb,EAAjBrb,OAAQ0b,EAASL,EAATK,KAChBY,EAAatc,EAAO1D,IAAK,SAAAvN,GAAA,OAAKA,EAAE3B,OAEhCmvB,EADgBhvB,OAAO4M,KAAK1D,GACAqQ,OAAO,SAACC,EAAK9E,GAC3C,IAAM+E,EAAMsV,EAAWhiB,QAAQ2H,GAI/B,OAHa,IAAT+E,GACAD,EAAIxM,MAAMyM,EAAKvQ,EAAUwL,KAEtB8E,OAiCX,MA9BsB,WAAlB/L,EAAQkgB,MACRqB,EAAYpf,QAAQ,SAACqf,GACjB,IAAMC,EAAOD,EAAK,GACZE,EAAQF,EAAK,GAEnBnd,EAAKod,GAAMtf,QAAQ,SAACkJ,EAAOsW,GACvBtd,EAAKod,GAAME,GAAYD,EAAM1vB,YAEzBqZ,EACAqV,EAAKiB,GACL3c,EAAOyc,QAKnBpd,EAAKlC,QAAQ,SAACkJ,EAAOsW,GACjBJ,EAAYpf,QAAQ,SAACqf,GACjB,IAAMC,EAAOD,EAAK,GACZE,EAAQF,EAAK,GAEnBnW,EAAMoW,GAAQC,EAAM1vB,YAEhBqZ,EAAMoW,GACNf,EAAKiB,GACL3c,EAAOyc,QAMhBpB,wCA2BFuB,GAAwD,IAA7CC,EAA6CpjB,UAAA1D,OAAA,YAAA0D,UAAA,GAAAA,UAAA,MAA9ByH,EAA8BzH,UAAA1D,OAAA,YAAA0D,UAAA,GAAAA,UAAA,IAAnB+Z,cACpC0C,KAAmB0G,EAAUxlB,OAE7B0lB,EC3Kd,SAASC,GAAStK,EAAWjT,EAAUqd,EAAUG,GAC7C,IAAMC,EAxDV,SAAsBxK,EAAWjT,GAC7B,IAAMuD,KAEAma,EADazK,EAAU/O,gBACCzD,eAY9B,OAVA1S,OAAO+b,QAAQ4T,GAAY/f,QAAQ,SAAApO,GAAW,IAATX,EAAS0b,GAAA/a,EAAA,MACtCyQ,GAAYA,EAASzJ,QACU,IAA3ByJ,EAASlF,QAAQlM,IACjB2U,EAAOxI,KAAKnM,GAGhB2U,EAAOxI,KAAKnM,KAIb2U,EAfX,CAwDkC0P,EAAWjT,GACnC2d,EAhCV,SAAwB1K,GAA0B,IAAfoK,EAAepjB,UAAA1D,OAAA,YAAA0D,UAAA,GAAAA,UAAA,MACxCgiB,KAEA2B,EADa3K,EAAU/O,gBACD7D,aACtBwd,EAAaxT,GAAayT,iBAchC,OAZA/vB,OAAO4M,KAAKijB,GAAUjgB,QAAQ,SAACogB,GACU,iBAA1BV,EAASU,KAChBV,EAASU,GAAeH,EAASG,GAAalR,YAElD,IAAMmR,EAAY3T,GAAa4T,QAAQZ,EAASU,IAC5CC,EACA/B,EAAO8B,GAAeC,GAEtB/B,EAAO8B,GAAeF,EACtBR,EAASU,GAAepU,MAGzBsS,EAlBX,CAgCqChJ,EAAWoK,GACtCtB,EAAa9I,EAAU/O,gBACvBga,EAAgBnC,EAAW7b,YAC3Bie,EAASpC,EAAWnuB,KACpBwwB,KACAC,KACA7d,KACAkG,KACA7G,KACFyd,SAGJvvB,OAAO+b,QAAQoU,GAAevgB,QAAQ,SAAApO,GAAkB,IAAAhB,EAAA+b,GAAA/a,EAAA,GAAhBX,EAAgBL,EAAA,GAAXD,EAAWC,EAAA,GACpD,IAAgC,IAA5BkvB,EAAU3iB,QAAQlM,IAAe+uB,EAAW/uB,GAG5C,OAFA4R,EAAOzF,KAAKsD,KAAY/P,EAAMkS,WAEtBlS,EAAMkS,SAASrQ,MACvB,KAAK6D,EAAUC,QACXoqB,EAAWtjB,KAAKnM,GAChB,MACJ,QACA,KAAKoF,EAAUE,UACXkqB,EAAarjB,KAAKnM,MAK9B,IAAI0vB,EAAW,EACfrd,EAAmBgS,EAAUxO,YAAa,SAACpX,GACvC,IAAIoe,EAAO,GACX2S,EAAazgB,QAAQ,SAACoY,GAClBtK,EAAUA,EAAVA,IAAkByS,EAAcnI,GAAGhR,aAAalF,KAAKxS,cAErDqZ,EAAQ+E,IACR/E,EAAQ+E,GAAQ6S,EAChBze,EAAK9E,SACLqjB,EAAazgB,QAAQ,SAACoY,GAClBlW,EAAKye,GAAUvI,GAAKmI,EAAcnI,GAAGhR,aAAalF,KAAKxS,KAE3DgxB,EAAW1gB,QAAQ,SAACoY,GAChBlW,EAAKye,GAAUvI,IAAMmI,EAAcnI,GAAGhR,aAAalF,KAAKxS,MAE5DixB,GAAY,GAEZD,EAAW1gB,QAAQ,SAACoY,GAChBlW,EAAK6G,EAAQ+E,IAAOsK,GAAGhb,KAAKmjB,EAAcnI,GAAGhR,aAAalF,KAAKxS,QAM3E,IAAIqnB,KACAC,EAAgB,SAAhBA,IAAgB,OAAM1B,EAAU9N,gBAcpC,OAbAtF,EAAKlC,QAAQ,SAACsS,GACV,IAAMpL,EAAQoL,EACdoO,EAAW1gB,QAAQ,SAACoY,GAChBlR,EAAMkR,GAAK4H,EAAW5H,GAAG9F,EAAI8F,GAAIpB,EAAeD,OAGpD8I,GACAA,EAAkB7K,wBAClB2K,EAAeE,GAGfF,EAAe,IAAI3S,GAAU9K,EAAMW,GAAU5S,KAAMuwB,IAEhDb,GDuGkBC,cADP1oB,KAAMuoB,EAAWC,IAiB/B,OAdA7L,GACI8L,EACAza,GACEua,YAAW1G,gBAAeoH,eAAgBzT,GAAayT,kBACzDT,GAEJpL,GAA0Bpd,KAAMyoB,GAE5B5b,EAAOsS,UACPsJ,EAAa5C,UAAU7lB,MAEvByoB,EAAa5C,UAAU,MAGpB4C,qCAsDLtB,GACF,IAAMuC,EAAU1pB,KAAKse,SACjBuI,MAAO,MACP3T,KAAMiU,IAGJwC,GADSD,EAAQ/d,OAAO1D,IAAI,SAAAvN,GAAA,OAAS6Q,EAAMxS,QACnB2iB,OAAOgO,EAAQ1e,MAEvC4e,EAAW,IAAI5pB,KAAK4lB,YAAY+D,EAAcD,EAAQ/d,QAAU+N,WAAY,WAElF,OADAkQ,EAASjD,gBAAkBQ,EACpByC,0CAwBAtuB,EAAMqL,GACbrL,EAAOA,GAAQ0E,KAAKmhB,YACpBxa,EAAUzN,OAAO4T,WAAakP,eAAgB,KAAOrV,GAErD,IAAMiC,EAAS5I,KAAKqP,gBAAgBzG,OAC9BihB,EAAUjhB,EAAOX,IAAI,SAAAvN,GAAA,OAAKmgB,EAAEkG,kBAC5B+I,EAAYD,EAAQ,GAAGnoB,OACzBqoB,SACAC,SACAC,SAEJ,GAAI3uB,IAASiD,EAAWC,UAEpB,IADAurB,KACKC,EAAS,EAAGA,EAASF,EAAWE,IAAU,CAC3C,IAAM5O,KACN,IAAK6O,EAAS,EAAGA,EAASrhB,EAAOlH,OAAQuoB,IACrC7O,EAAIxS,EAAOqhB,GAAQlxB,QAAU8wB,EAAQI,GAAQD,GAEjDD,EAAe7jB,KAAKkV,QAErB,GAAI9f,IAASiD,EAAWE,QAAS,CAEpC,IADAsrB,GAAkBnhB,EAAOX,IAAI,SAAAvN,GAAA,OAAKmgB,EAAE9hB,SAAQgK,KAAK4D,EAAQqV,iBACpDgO,EAAS,EAAGA,EAASF,EAAWE,IAAU,CAC3C,IAAM5O,KACN,IAAK6O,EAAS,EAAGA,EAASrhB,EAAOlH,OAAQuoB,IACrC7O,EAAIlV,KAAK2jB,EAAQI,GAAQD,IAE7BD,EAAe7jB,KAAKkV,EAAIrY,KAAK4D,EAAQqV,iBAEzC+N,EAAiBA,EAAehnB,KAAK,UAClC,IAAIzH,IAASiD,EAAWG,QAU3B,MAAM,IAAIgR,MAAJ,aAAuBpU,EAAvB,qBARN,IADAyuB,GAAkBnhB,EAAOX,IAAI,SAAAvN,GAAA,OAAKmgB,EAAE9hB,UAC/BixB,EAAS,EAAGA,EAASF,EAAWE,IAAU,CAC3C,IAAM5O,KACN,IAAK6O,EAAS,EAAGA,EAASrhB,EAAOlH,OAAQuoB,IACrC7O,EAAIlV,KAAK2jB,EAAQI,GAAQD,IAE7BD,EAAe7jB,KAAKkV,IAM5B,OAAO2O,yCAGDxe,GACN,IAAMiI,EAAYjI,EAAMxS,OACxBiH,KAAKiT,gBAALjT,IAA2BwT,EAC3B,IAAMoK,EAAoB5d,KAAKihB,mBAE/B,GAAKrD,EAAkBvS,YAAYE,EAAMxS,QAElC,CACH,IAAMgQ,EAAa6U,EAAkBhV,OAAOwd,UAAU,SAAA1rB,GAAA,OAAawvB,EAAUnxB,SAAWya,IACxFzK,GAAc,IAAM6U,EAAkBhV,OAAOG,GAAcwC,QAH3DqS,EAAkBhV,OAAO1C,KAAKqF,GAYlC,OALAqS,EAAkBtS,iBAAmB,KACrCsS,EAAkB9R,iBAAmB,KACrC8R,EAAkBlS,eAAiB,KAEnC1L,KAAK8d,wBAAwBC,wBACtB/d,qDAuCQ2L,EAAQwe,EAAYtd,GAAQ,IAAAvT,EAAA0G,KAC3C2L,EAAS4U,GAAmB5U,GAC5BkB,EAAS3T,OAAO4T,WAAaqS,aAAiBiL,eAAqBvd,GAEnE,IAAM0R,EAAeve,KAAKwe,kBACpB6L,EAAUF,EAAWhP,MAAM,EAAGgP,EAAWzoB,OAAS,GAClD4oB,EAAaH,EAAWA,EAAWzoB,OAAS,GAElD,GAAI6c,EAAa5S,EAAO5S,QAAU8T,EAAOud,WACrC,MAAM,IAAI1a,MAAS/D,EAAO5S,KAApB,sCAGV,IAAMwxB,EAAkBF,EAAQpiB,IAAI,SAACsD,GACjC,IAAMif,EAAYjM,EAAahT,GAC/B,IAAKif,EAED,MAAM,IAAI9a,MAASnE,EAAb,gCAEV,OAAOif,EAAUvoB,QAGf0b,EAAQ3d,KAAK2d,MAAM9Q,EAAOsS,WAE1BsL,EAAK9M,EAAMtO,gBAAgBzG,OAC3B8hB,EAAiBH,EAAgBtiB,IAAI,SAAAvN,GAAA,OAAO+vB,EAAG9X,KAEjDkN,KACAC,EAAgB,SAAhBA,IAAgB,OAAM1K,EAAK9E,gBAEzBqa,KACNve,EAAmBuR,EAAM/N,YAAa,SAACpX,GACnC,IAAMoyB,EAAaF,EAAeziB,IAAI,SAAAvO,GAAA,OAAS6R,EAAM2E,aAAalF,KAAKxS,KACvEmyB,EAAenyB,GAAK8xB,sIAAcM,GAAdN,QAA0B9xB,EAAGsnB,EAAeD,OAhCzB,IAAAnX,EAkC3B0Q,IAAcuR,IAAkBhf,IAAUA,EAAO5S,OAA1DwS,EAlCoCsf,GAAAniB,EAAA,MAwC3C,OALAiV,EAAMmN,SAASvf,GAEfoR,GAAkBgB,EnCjdb,sBmCid8C9Q,OAAQlB,EAAQ/C,OAAQyhB,GAAWC,GACtFlN,GAA0Bpd,KAAM2d,GAEzBA,0CAWA4E,GAA2D,IAA9C1V,EAA8CzH,UAAA1D,OAAA,YAAA0D,UAAA,GAAAA,UAAA,MAAjC2lB,EAAiC3lB,UAAA,GAAjB2e,EAAiB3e,UAAA1D,OAAA,YAAA0D,UAAA,GAAAA,UAAA,MAC5D4lB,EAAkBne,EAAOme,gBACzBpI,EAAsB/V,EAAOgW,SAC7BoI,EAAUpe,EAAOoe,QACjBnH,EFjKkB,SAAClH,GAC7B,KAAOA,EAAMgH,SACThH,EAAQA,EAAMgH,QAElB,OAAOhH,EAJqB,CEiKW5c,MAC7B0iB,EAAuBoB,EAAUe,sBAEjCrC,GACF0B,aF5KuB,SAACtH,GAChC,KAAOA,EAAMgH,SAAWhH,EAAMI,YAAYkO,KAAK,SAAAxwB,GAAA,OAAK5B,EAAEmkB,KAAOjP,KACzD4O,EAAQA,EAAMgH,QAElB,OAAOhH,EAJwB,CE0KkB5c,MAGzC4c,MAAOkH,GAgBX,OAbAiH,GFlD0B,SAACrI,GAA6C,IAAvB7V,EAAuBzH,UAAA1D,OAAA,YAAA0D,UAAA,GAAAA,UAAA,MAAVwX,EAAUxX,UAAA,GACxE+lB,SACEH,EAAkBne,EAAOme,gBACzB7N,EAAWtQ,EAAOsQ,SAClBpjB,EAAS8S,EAAOwW,OAAhBtpB,IAA0B8S,EAAOgW,SAGnCsI,EADAH,EACkBtI,EAAqBQ,eAErBR,EAAqBoC,iBAG1B,OAAb3H,SACOgO,EAAgBpxB,GAEvBoxB,EAAgBpxB,IACZ6iB,QACA/P,UAjBsB,CEkDW6V,EAAsB7V,EAAQ7M,MACnEsiB,GAAyBC,EAAaC,GAAcE,uBAAsBG,SAAUD,GAChF1pB,OAAO4T,QACHme,WACDpe,IAEHme,GF5E6B,SAACtI,EAAsBF,EAAYC,GACxE,IAAMqC,EAAmBpC,EAAqBoC,iBAE9C,IAAK,IAAMzB,KAAUyB,EAAkB,CACnC,IACMtB,EADYsB,EAAiBzB,GACNxW,OACvB+V,EAAsBH,EAAe5V,OAAOgW,SAC5CuI,GAAwB3I,EAAesB,WAAWqH,uBACpD3I,EAAesB,WAAWqH,sBAAsB5H,EAAYf,EAAe5V,QAC/E,GAAI2W,EAAWX,WAAaD,GAAuBwI,EAAuB,CACtE,IAAMC,EAAgB7H,EAAWrG,SACjCmF,GAAyB+I,EAAe7I,GACpCE,uBACAC,qBACAE,SAAUD,GACXY,KAf0B,CE6EHd,EAAsBF,GAC5C3V,SACAkX,eAID/jB,sCAUPsrB,EAAWhf,GACX,OAAQgf,GACR,InCnhBmB,cmCohBftrB,KAAK0mB,eAAexgB,KAAKoG,GAG7B,OAAOtM,+CASEsrB,GACT,OAAQA,GACR,InCliBmB,cmCmiBftrB,KAAK0mB,kBAIT,OAAO1mB,qDAUQgf,EAAWiM,GAAS,IAAAhxB,EAAA+F,KACfA,KAAK0mB,eACX5d,QAAQ,SAAAxP,GAAA,OAAM4lB,EAAGvmB,KAAK+e,EAAMsH,EAAWiM,uCA8CpDM,EAAkB1e,GACnB,IAAM0R,EAAeve,KAAKwe,kBAE1B,IAAKD,EAAagN,GACd,MAAM,IAAI7b,MAAJ,SAAmB6b,EAAnB,kBAGV,IAAMC,EAAe3e,EAAO9T,MAAWwyB,EAAlB1e,UAErB,GAAI0R,EAAaiN,GACb,MAAM,IAAI9b,MAAJ,SAAmB8b,EAAnB,mBAGV,IAb2BC,EEtjB5B,SAAgCC,EAAcrf,EAAYQ,GAAQ,IAC/D8e,EAA4C9e,EAA5C8e,QAASC,EAAmC/e,EAAnC+e,UAAWC,EAAwBhf,EAAxBgf,QAAS3tB,EAAe2O,EAAf3O,MAAOwO,EAAQG,EAARH,IAD2B7T,EAEhD6yB,EAAa5U,SAFmC+D,EAAApY,EAAA5J,EAAA,GAE9DizB,EAF8DjR,EAAA,GAExDkR,EAFwDlR,EAAA,GAIhE8Q,IACDztB,EAAmB,IAAVA,KAAiBA,GAASA,EAAQ4tB,GAASA,EAAO5tB,EAC3DwO,EAAe,IAARA,KAAeA,GAAOA,EAAMqf,GAAUA,EAAO,EAAKrf,EAErDkf,IACAC,EAAUhoB,KAAKmoB,KAAKnoB,KAAKooB,IAAIvf,EAAMxO,GAAS0tB,IAGhDD,EAxDgB,SAAlBO,EAAmBL,EAAS3tB,EAAOwO,GAIrC,IAHA,IAAMif,KACF/d,EAAO1P,EAEJ0P,EAAOlB,GACVif,EAAQzlB,KAAK0H,GACbA,GAAQie,EAIZ,OAFAF,EAAQzlB,KAAK0H,GAEN+d,EA8COO,CAAgBL,EAAS3tB,EAAOwO,IAG1Cif,EAAQ,GAAKG,GACbH,EAAQlkB,QAAQqkB,GAEhBH,EAAQA,EAAQjqB,OAAS,IAAMqqB,GAC/BJ,EAAQzlB,KAAK6lB,EAAO,GAIxB,IADA,IAAMI,KACG3zB,EAAI,EAAGA,EAAImzB,EAAQjqB,OAAS,EAAGlJ,IACpC2zB,EAAajmB,MACThI,MAAOytB,EAAQnzB,GACfkU,IAAKif,EAAQnzB,EAAI,KAIzB,IAAM4zB,KAYN,OAXAhgB,EAAmBC,EAAY,SAAC7T,GAC5B,IAAMwZ,EAAQ0Z,EAAaxb,aAAalF,KAAKxS,GAC7C,GAAIwZ,aAAiB2B,EACjByY,EAAWlmB,KAAK8L,OADpB,CAKA,IAAMzQ,EArEU,SAAlB8qB,EAAmBF,EAAc1yB,GAOnC,IANA,IAAI6yB,EAAU,EACVC,EAAWJ,EAAazqB,OAAS,EACjC8qB,SACAjrB,SAGG+qB,GAAWC,GAAU,CAIxB,GAAI9yB,IAFJ8H,EAAQ4qB,EADRK,EAASF,EAAUzoB,KAAKwN,OAAOkb,EAAWD,GAAW,KAGlCpuB,OAASzE,EAAQ8H,EAAMmL,IACtC,OAAOnL,EACA9H,GAAS8H,EAAMmL,IACtB4f,EAAUE,EAAS,EACZ/yB,EAAQ8H,EAAMrD,QACrBquB,EAAWC,EAAS,GAI5B,OAAO,KAiDWH,CAAgBF,EAAcna,GAC5Coa,EAAWlmB,KAAQ3E,EAAMrD,MAAzBkuB,IAAkC7qB,EAAMmL,SAGnC0f,aAAYvU,KAAM8T,GA1CxB,CFmkBsB3rB,KAAKqP,gBAAgBhE,YAAYkgB,GACWvrB,KAAK4P,YAAa/C,GAA3Euf,EAdmBX,EAcnBW,WAAYvU,EAdO4T,EAcP5T,KAEd4U,EAAWrT,IAAcgT,KAEvBrzB,KAAMyyB,EACNlwB,KAAM6D,EAAUE,UAChBgX,QAASzX,EAAiBI,OAC1B6Y,UACC2T,IAAe,GAElB7N,EAAQ3d,KAAK2d,MAAM9Q,EAAOsS,WAMhC,OALAxB,EAAMmN,SAAS2B,GAEf9P,GAAkBgB,EnC5mBjB,OmC4mB8C4N,mBAAkB1e,SAAQ2e,gBAAgB,MACzFpO,GAA0Bpd,KAAM2d,GAEzBA,+CA8BP,OAAO,IAAIrf,EAHE0B,KAAK0sB,UAAUnuB,EAAWC,WACxBwB,KAAK2sB,wEAtjBW9f,GAC/B,OAAO8G,EAAkB3G,iBAAiBH,wCAf1C,OAAO2I,SA0kBA9E,GGnqBAkc,GAAoD1Y,GAApD0Y,IAAKC,GAA+C3Y,GAA/C2Y,IAAKC,GAA0C5Y,GAA1C4Y,IAAKC,GAAqC7Y,GAArC6Y,IAAKC,GAAgC9Y,GAAhC8Y,MAAOC,GAAyB/Y,GAAzB+Y,KAAMC,GAAmBhZ,GAAnBgZ,MAAYC,GAAOjZ,GAAZO,YCsBvD/D,GAAU0c,WACNC,QC8LmB,SAAAA,UAAA,QAAA3yB,EAAA0K,UAAA1D,OAAI4rB,EAAJzkB,MAAAnO,GAAAT,EAAA,EAAAA,EAAAS,EAAAT,IAAIqzB,EAAJrzB,GAAAmL,UAAAnL,GAAA,OACnB,SAACmZ,GAAqC,IAAjCvG,EAAiCzH,UAAA1D,OAAA,YAAA0D,UAAA,GAAAA,UAAA,IAAtB+Z,cACRoO,EAAYna,EACZoa,SACElM,KAyBN,OAvBAgM,EAAWxkB,QAAQ,SAAC+T,GAChB0Q,EAAY1Q,EAAU0Q,GACtBjM,EAAYpb,KAAZob,+HAAoBiM,EAAUvQ,cACzBwQ,IACDA,EAAaD,KAIjBC,GAAcA,IAAeD,GAC7BC,EAAWC,UAGf9Q,GAAkB4Q,EAAWvf,EAAwB,KAAMsT,GAE3DiM,EAAU/P,uBACVJ,GAA0BhK,EAAIma,GAE1B1gB,EAAOsS,UACPoO,EAAU1H,UAAUzS,GAEpBma,EAAU1H,UAAU,MAGjB0H,ID1NXG,IC4He,SAAAA,MAAA,QAAAhzB,EAAA0K,UAAA1D,OAAIsF,EAAJ6B,MAAAnO,GAAAT,EAAA,EAAAA,EAAAS,EAAAT,IAAI+M,EAAJ/M,GAAAmL,UAAAnL,GAAA,OAAa,SAAAS,GAAA,OAAM0Y,EAAGsa,IAAHta,QAAUpM,KD3H5CiY,OCgCkB,SAAAA,SAAA,QAAAvkB,EAAA0K,UAAA1D,OAAIsF,EAAJ6B,MAAAnO,GAAAT,EAAA,EAAAA,EAAAS,EAAAT,IAAI+M,EAAJ/M,GAAAmL,UAAAnL,GAAA,OAAa,SAAAS,GAAA,OAAM0Y,EAAG6L,OAAH7L,QAAapM,KD/BlD2mB,QC+DmB,SAAAA,UAAA,QAAAjzB,EAAA0K,UAAA1D,OAAIsF,EAAJ6B,MAAAnO,GAAAT,EAAA,EAAAA,EAAAS,EAAAT,IAAI+M,EAAJ/M,GAAAmL,UAAAnL,GAAA,OAAa,SAAAS,GAAA,OAAM0Y,EAAGua,QAAHva,QAAcpM,KD9DpD4mB,QCsJmB,SAAAA,UAAA,QAAAlzB,EAAA0K,UAAA1D,OAAIsF,EAAJ6B,MAAAnO,GAAAT,EAAA,EAAAA,EAAAS,EAAAT,IAAI+M,EAAJ/M,GAAAmL,UAAAnL,GAAA,OAAa,SAAAS,GAAA,OAAM0Y,EAAGwa,QAAHxa,QAAcpM,KDrJpD6mB,kBEvB6B,SAAAA,oBAAA,QAAAnzB,EAAA0K,UAAA1D,OAAIsF,EAAJ6B,MAAAnO,GAAAT,EAAA,EAAAA,EAAAS,EAAAT,IAAI+M,EAAJ/M,GAAAmL,UAAAnL,GAAA,OAAa,SAAAS,GAAA,OAAM0Y,EAAGya,kBAAHza,QAAwBpM,KFwBxEkM,KEfgB,SAAAA,OAAA,QAAAxY,EAAA0K,UAAA1D,OAAIsF,EAAJ6B,MAAAnO,GAAAT,EAAA,EAAAA,EAAAS,EAAAT,IAAI+M,EAAJ/M,GAAAmL,UAAAnL,GAAA,OAAa,SAAAS,GAAA,OAAM0Y,EAAGF,KAAHE,QAAWpM,KFgB9C6H,eACAif,cACAC,YG/BG,SAAAA,YAAsB/X,EAAYC,GACrC,OAAOpH,EAAamH,EAAYC,EAAYP,GAAkBM,EAAYC,QH+B1EF,iBACAG,kBACA8X,c7BxBG,SAAAA,cAAwBhY,EAAYC,EAAYjH,GACnD,OAAO6G,GAAME,GAAcC,EAAYC,EAAYjH,GAAWkH,GAAeF,EAAYC,EAAYjH,K6BwBrGif,UAEJvd,GAAUwd,MAAQC,EAClBj1B,OAAO4T,OAAO4D,GAAW0d,GACzB1d,GAAU5Q,kBAAoBA,EAC9B4Q,GAAU2d,WAAa9vB,EACvBmS,GAAU4d,cAAgBhvB,EAC1BoR,GAAU/D,kBAAoBgH,EAC9BjD,GAAU1V,QAAUuzB,GAAIvzB,QAET,IAAAwzB,GAAA90B,EAAAmB,QAAA4zB,qhBIhDf,SAAA/zB,EAAAhB,GACA,UAAAiB,QAAA3C,UAAA,UAAA2C,QAAA1C,QACAA,oBAEAC,yRAJA,CASCE,kBACD,gBAAAsC,GCTA,IAAAhB,KAGA,SAAAJ,EAAAW,GAGA,GAAAP,EAAAO,GACA,OAAAP,EAAAO,GAAAjC,QAGA,IAAAQ,EAAAkB,EAAAO,IACAzB,IACAC,KACAT,YAUA,OANAU,mCAGAT,OAGAO,EAAAR,QA0DA,OArDAM,MAGAA,MAGAA,oBACAA,UACAY,2BAA0CE,uBAK1Cd,gBACA,oBAAAiB,eAAAC,aACAN,4CAAwDO,iBAExDP,sCAAiDO,YAQjDnB,kBAEA,GADA,EAAAoB,IAAAgB,EAAApB,EAAAoB,IACA,EAAAhB,EAAA,OAAAgB,EACA,KAAAhB,GAAA,UAAAiB,QAAAD,SAAAd,WAAA,OAAAc,EACA,IAAAT,EAAAf,OAAAY,OAAA,MAGA,GAFAxB,OACAY,mCAAyCE,wBACzC,EAAAM,GAAA,iBAAAgB,EAAA,QAAAlC,KAAAkC,EAAApB,EAAAR,EAAAmB,EAAAzB,EAAA,SAAAkB,GAAgH,OAAAgB,EAAAhB,IAAqBM,cACrI,OAAAC,GAIA3B,gBACA,IAAAoB,EAAAgB,KAAAd,WACA,WAA2B,OAAAc,EAAAG,SAC3B,WAAiC,OAAAH,GAEjC,OADApC,aACAoB,GAIApB,kBAAsD,OAAAY,OAAAoB,UAAAC,eAAA5B,KAAA+B,EAAAhB,IAGtDpB,OAIAgB,IAAAmB,EAAA,GDxEA,ECwEA,SAAAC,EAAAhB,EAAAJ,GAAA,aAAAA,IAAAI,GAAA,IAAAO,EAAA,oBAAAS,IAAAhB,GAAA,QAAAJ,EAAA,EAAAA,EAAAI,EAAAgI,OAAApI,IAAA,KAAAW,EAAAP,EAAAJ,GAAAW,EAAAb,WAAAa,EAAAb,aAAA,EAAAa,EAAAgS,cAAA,YAAAhS,MAAAiS,UAAA,GAAAhT,OAAAC,eAAAuB,EAAAT,EAAAF,IAAAE,IAAA,gBAAAP,EAAAJ,EAAAW,GAAA,OAAAX,GAAAoB,EAAAhB,EAAAY,UAAAhB,GAAAW,GAAAS,EAAAhB,EAAAO,GAAAP,GAAA,GClFMg1B,EAAY,SAAZA,EAAa3d,EAAK4d,GACpB5d,EAAIjI,QAAQ,SAACqf,YACLA,GAA+B,OAATA,IAG1BwG,EAAKxG,GAAQ,MAAAlvB,EAAA,WAKjB,SAAAyB,EAAaqW,iGAAK/E,QACdhM,KAAK4uB,QACLF,EAAU3d,EAAK/Q,KAAK4uB,qDAGhB7d,GAEJ,OADA2d,EAAU3d,EAAK/Q,KAAK4uB,MACb5uB,6CAIP,OAAO9G,OAAO4M,KAAK9F,KAAK4uB,iDAGTC,EAAMC,GACrB,IAAI/0B,SACEg1B,KACFC,EAAKH,EAAKD,KACVK,EAAKH,EAAKF,KACd,IAAK70B,KAAOi1B,OACEz0B,eAAe5B,KAAKq2B,EAAIj1B,KAG9BA,KAAOk1B,GAGXF,EAAa7oB,KAAKnM,IAEtB,OAAO,IAAIm1B,EAAWH,SAjCT,GAiCSA,+jBClC9B,IACII,EAAiB,SAAjBA,EAAkBjnB,GAEd,GAAmB,qBAARA,EAAP,YAAAtN,EAAOsN,IAAkB,CACzB,GAAY,OAARA,EAAgB,SAEpB,GAAc,oBADNhP,OAAOoB,UAAUgI,SAAS3J,KAAKuP,GAEnC,MAA8E,YAAtEA,EAAI0d,YAAYtjB,WAAW+F,MAAM,4BAA8B,GAG/E,UAGsB+mB,EAAwB,oBAAXh3B,UAAwCA,OACpDi3B,EAAeD,EAAIE,uBAAyBF,EAAIG,6BACvEH,EAAII,0BAA4BJ,EAAIK,wBACpCL,EAAIM,yBACJ,SAAUpjB,GACNqjB,WAAWrjB,EANF,KASjBsjB,EAAiB,SAAjBA,IACI,OAAIA,EAAeC,cAAe,IAAIjwB,MAAO4K,UACjColB,EAAeC,WAAYvtB,YAAcstB,EAAeE,QAAQxtB,YAG5EstB,EAAeE,KAAO,GACtBF,EAAeC,YAAa,IAAIjwB,MAAO4K,WACJlI,YAAcstB,EAAeE,QAAQxtB,aAwC5EytB,EAAO,SAAPA,IAAsB,QAAAr1B,EAAA0K,UAAA1D,OAAXkgB,EAAW/Y,MAAAnO,GAAApB,EAAA,EAAAA,EAAAoB,EAAApB,IAAXsoB,EAAWtoB,GAAA8L,UAAA9L,GAClB,IAAM02B,KAEN,OADApO,EAAO9Y,QAAQ,SAAApO,GAAA,OAASs1B,EAAI9pB,KAAJ8pB,UAAY5oB,MAC7B4oB,GAQXC,EAAY,SAAZA,EAAaC,GACT,IAAIC,KACAC,EAAiB,KAKrB,OAHAF,EAAmBA,GACa,mBAArBA,GAAmCA,GAAqB,aAE5D,SAACG,EAAWpF,MACZ/kB,KAAKqB,MAAM4oB,EAAOE,GACE,OAAnBD,IACAA,EAAiBf,EAAa,WAC1B,IAAMiB,EAAQH,EAAMhV,MAAM,GAC1BgV,EAAMzuB,OAAS,EACf0uB,EAAiB,KAEVE,EAzCN7d,OAAO,SAAC9J,EAAOuW,GAEZ,OAAIA,EAAG4Q,QAAQnnB,EAAMV,IACVU,GAGXA,EAAMV,IAAIiX,EAAG4Q,MAAQ,EACrBnnB,EAAM4nB,OAAOrqB,KAAKgZ,GAEXvW,KACNV,OAASsoB,YACbA,OA8BaznB,QAAQ,SAAApO,GAAA,OAAMwkB,MAC5BgR,EAAiBjF,QAKjCuF,EAAQ,SAARA,EAAQ91B,GAAA,OAAa,mBAAAhB,EAAA0L,UAAA1D,OAAIkgB,EAAJ/Y,MAAAnP,GAAAO,EAAA,EAAAA,EAAAP,EAAAO,IAAI2nB,EAAJ3nB,GAAAmL,UAAAnL,GAAA,OAAe2nB,EAAO3Z,IAAI,SAACb,GAC5C,IAAMqpB,EAAOC,EAAUtpB,GACvB,OACIrO,KAAM03B,EAAK13B,KACX43B,cAAeF,EAAKE,cACpBl3B,MAAOg3B,EAAKG,UAGpBC,EAAkB,SAAlBA,IAAkB,QAAAn2B,EAAA0K,UAAA1D,OAAIkgB,EAAJ/Y,MAAAnO,GAAApB,EAAA,EAAAA,EAAAoB,EAAApB,IAAIsoB,EAAJtoB,GAAA8L,UAAA9L,GAAA,OACdoC,aAAckmB,EAAOzG,MAAM,EAAGyG,EAAOlgB,OAAS,GAC9Cwd,GAAI0C,EAAOA,EAAOlgB,OAAS,KAE/BovB,EAAmB,SAAnBA,EAAoBC,GAChB,IAAIf,KACE/nB,KA2BN,OA1BA8oB,EAAKjoB,QAAQ,SAAApO,GAAA,OAAQuN,EAAIwoB,EAAKE,gBAAkB,IAChD,SAASK,EAAKjgB,GACVA,EAAIjI,QAAQ,SAAC2nB,GACT,IAAIQ,EACAC,SACAC,SACAC,UACGH,EAAQR,EAAKE,iBAAkB1oB,GAIb,KADrBipB,EAAcjpB,EAAIgpB,KACQC,IAAgBlB,EAAItuB,OAAS,IAEnDyvB,EAASnB,EAAI7U,MAAM,EAAG+V,GACtBE,EAAUpB,EAAI7U,MAAM+V,EAAc,GAClClB,EAAMmB,EAAOzV,OAAO0V,GAGpBA,EAAQtoB,QAAQ,SAACqf,EAAM3vB,GAAP,OAAayP,EAAIkgB,EAAKwI,eAAiBn4B,EAAI24B,EAAOzvB,SAClEuG,EAAIgpB,GAASjB,EAAI9pB,KAAKuqB,GAAQ,GAXlCxoB,EAAIgpB,GAASjB,EAAI9pB,KAAKuqB,GAAQ,EAclCO,EAAIP,EAAKY,iBArBjB,CAwBIN,GACGf,GAEXsB,GACIC,WAAY,SAAAA,aAAe,QAAA72B,EAAA0K,UAAA1D,OAAXkgB,EAAW/Y,MAAAnO,GAAApB,EAAA,EAAAA,EAAAoB,EAAApB,IAAXsoB,EAAWtoB,GAAA8L,UAAA9L,GACvB,IAAMojB,KAIN,OAHAkF,EAAO9Y,QAAQ,SAAC0oB,GACZt4B,OAAO4T,OAAO4P,4HAAS8U,EAAYz4B,KAAOy4B,EAAY/3B,UAEnDijB,GAEX+U,SAAU,SAAAA,SAAA/2B,GAAA,OAAe82B,EAAY/3B,QAgBvCi4B,aACF,SAAAh3B,EAAa42B,iGAAUK,QACnB3xB,KAAKkf,GAAKoS,EACVtxB,KAAK4xB,iEAGe,IAAAl3B,EAEpB,OADAm3B,OAAKD,KAAI1rB,KAAT2rB,mBACO7xB,qDAIP,OAAOA,KAAK4xB,wCAIZ,OAAO5xB,KAAKkf,SAhBdwS,GAgBcxS,8XC1LhB,SAAAxkB,EAAa3B,EAAM43B,EAAehqB,iGAASmrB,QACbnrB,EAAUA,MACpC3G,KAAKjH,KAAOA,EACZiH,KAAK2wB,cAAgBA,EACrB3wB,KAAK+xB,SACL/xB,KAAKqxB,iBACLrxB,KAAKgyB,MAAQ,KACbhyB,KAAKiyB,kBACLjyB,KAAKkyB,UAAYvrB,EAAQurB,UACzBlyB,KAAKmyB,WACLnyB,KAAKsxB,SAAW,KAChBtxB,KAAKoyB,2EAGgB,QAAA13B,EAAAhB,EAAAsG,KAAA1G,EAAA8L,UAAA1D,OAALkwB,EAAK/oB,MAAAvP,GAAAd,EAAA,EAAAA,EAAAc,EAAAd,IAALo5B,EAAKp5B,GAAA4M,UAAA5M,GAGrB,OAFA65B,OAAKN,OAAM7rB,KAAXmsB,QAAmBT,GACnBA,EAAI9oB,QAAQ,SAAApO,GAAA,OAAS0oB,EAAMiO,cAAcnrB,KAAKgP,KACvClV,mDAGMywB,GAEb,OADAzwB,KAAKoyB,cAAclsB,KAAKuqB,GACjBzwB,6CAiBP,OAHAA,KAAK4wB,KAAO5wB,KAAKsxB,SAALtxB,aAAiBA,KAAKsyB,oBAClCtyB,KAAKmyB,QAAQjsB,KAAKlG,KAAK4wB,MACvB5wB,KAAKiyB,kBACEjyB,qDAIP,OAA0B,IAAtBA,KAAK+xB,MAAMrwB,SAEP3I,KAAMiH,KAAKjH,KACX43B,cAAe3wB,KAAK2wB,cACpBl3B,MAAOuG,KAAK4wB,OAGb5wB,KAAKkyB,UAALlyB,aAAkBA,KAAK+xB,MAAM9pB,IAAI,SAAAvN,GAAA,OAAQ63B,EAAK5B,6DAIrD,IACIwB,EAAUnyB,KAAKmyB,QACfK,EAAOL,EAAQA,EAAQzwB,OAAS,GAEpC,OAAuB,IAAnBywB,EAAQzwB,OACD1B,MAEXmyB,EAAQjsB,KAAKssB,GACNxyB,4CAIP,IAAMyyB,EAAOzyB,KAAKmyB,QACdK,EAAOC,EAAKA,EAAK/wB,OAAS,GAG9B,OAFA+wB,EAAK/wB,OAAS,EACd+wB,EAAKvsB,KAAKssB,GACHxyB,4CAIP,OAAqB,OAAdA,KAAKjH,sCAhDZ,OAAOiH,KAAKgyB,wBAGNv4B,GAGN,OAFAuG,KAAKgyB,MAAQv4B,EACbuG,KAAKiyB,kBACEjyB,WD0JKkf,GC1JLlf,kQC3BX,SAAAtF,KAAA,SAAAA,EAAAhB,GAAA,KAAAgB,aAAAhB,GAAA,UAAAqU,UAAA,sCAAe2kB,QACX1yB,KAAK+xB,SACL/xB,KAAKqwB,WACDsC,aACAC,oEAIY,IAAAl4B,EAEhB,OADA23B,OAAKN,OAAM7rB,KAAXmsB,mBACOryB,2DAGckf,GAAI,IAAAxlB,EAAAsG,KACnB6yB,EAAS7yB,KAAKqwB,UAAUuC,aAC1B3wB,EAAQ4wB,EAAO3sB,KFaN,SAAC4sB,EAAO5T,GACrB,IAAI6T,EAAM,SAANA,IACA7T,iBAAM4T,EAAM7qB,IAAI,SAACwoB,GACb,IACIgC,EAAOhC,EAAK0B,QACZ15B,EAAIg6B,EAAK/wB,OAAS,EACtB,OAAQ+wB,EAAKh6B,EAAI,EAAI,EAAI,EAAIA,EAAI,GAAIg6B,EAAKh6B,SAIlD,OADAs6B,EAAIjD,KAAOF,IACJmD,EAVM,CEb0B/yB,KAAK+xB,MAAO7S,IAAO,EAE1D,OAAO,WACHhK,EAAKmb,UAAUuC,aAAeC,EAAOnf,OAAO,SAACwL,EAAI1mB,GAAL,OAAWA,IAAMyJ,2DAI5Cid,GAAI,IAAAxlB,EAAAsG,KACnB6yB,EAAS7yB,KAAKqwB,UAAUsC,UAC1B1wB,EAAQ4wB,EAAO3sB,KFgBT,SAAC4sB,EAAO5T,GAClB,IAAI6T,EAAM,SAANA,IACA7T,iBAAM4T,EAAM7qB,IAAI,SAACwoB,GACb,IAAMgC,EAAOhC,EAAK0B,QAClB,OAAQM,EAAK,GAAIA,EAAKA,EAAK/wB,OAAS,SAI5C,OADAqxB,EAAIjD,KAAOF,IACJmD,EARG,CEhB0B/yB,KAAK+xB,MAAO7S,IAAO,EAEvD,OAAO,WACH9J,EAAKib,UAAUsC,UAAYE,EAAOnf,OAAO,SAACwL,EAAI1mB,GAAL,OAAWA,IAAMyJ,0DAK9D,QAASjC,KAAKqwB,UAAUsC,UAAUjxB,aDL3B1B,GCK2B0B,8XCtBtC,SAAAhH,IAAe,IAAAhB,EAAAsG,MAAA,SAAAtF,EAAAhB,GAAA,KAAAgB,aAAAhB,GAAA,UAAAqU,UAAA,sCAAA/N,KAAAtF,GACXsF,KAAKgzB,oBACLhzB,KAAKkyB,UAAY1B,EAAMxwB,KAAKgzB,kBAC5BhzB,KAAKlI,KAAO,IAAIm7B,EAAK,KAAM,MAAQf,UAAWlyB,KAAKkyB,YACnDlyB,KAAKlI,KAAKw5B,SAAWA,EAASC,WAE9BvxB,KAAKkzB,UAAY,KACjBlzB,KAAKmzB,cACLnzB,KAAKozB,qBACDC,yBACAC,uBAGJtzB,KAAKuzB,UAAYtD,EAAU,SAAChF,GACxB,IAAIgG,SACJ,IAAKA,KAAShG,EAAQuI,YAAa,CAC/B,OAAUj5B,eAAe5B,KAAKuc,EAAK8d,iBAAkB/B,GACjD,OAEJ/b,EAAK8d,iBAAiB/B,GAAOwC,mEAKxBvrB,EAAKwrB,GAClB,IACIC,EADAzyB,SAEE8xB,EAAmBhzB,KAAKgzB,iBAC1Bl7B,EAAOkI,KAAKlI,KACZo6B,EAAYlyB,KAAKkyB,UA8CrB,OA5CC,SAASlB,EAAK4C,EAAMjD,EAAewB,GAChC,IAAIp4B,SACAk3B,SACA4C,SACApD,SAEJ,IAAK12B,KAAO65B,EACR,MAAUr5B,eAAe5B,KAAKi7B,EAAM75B,GAcpC,GAVA02B,EAAO,IAAIwC,EAAKl5B,EADhBk3B,KAAWN,EAAgB52B,GACGm4B,cAC9Bc,EAAiB/B,GAASR,YAErBoD,EAAO1B,EAAQ0B,MAChBA,EAAKC,gBAAgBrD,GAGrB34B,EAAKg8B,gBAAgBrD,GAGrBtB,EAAejuB,EAAM0yB,EAAK75B,IAC1Bi3B,EAAI9vB,EAAJ8vB,GAAYL,EAAgB52B,EAA5Bi3B,KAAsC6C,KAAMpD,IAC5CA,EAAKa,SAAWA,EAASC,gBACtB,GAAIrwB,aAAewwB,EAAgB,KAAA54B,EACtC23B,EAAKa,SAAWpwB,EAAI7H,OACpB06B,KAAKD,gBAALC,UAAwB7yB,EAAI8yB,kBAAkB/rB,IAAI,SAAAvN,GAAA,OAASs4B,EAAiB/B,YAE5ER,EAAKa,SAAWA,EAASG,SACzBhB,EAAKG,KAAO1vB,EA7BvB,CAiCCgH,EAAe,OAAVwrB,EAAiB,GAAQA,EAAzBA,KACHG,KAAMb,EAAiBU,KAG3B1zB,KAAKkzB,UAAY,IAAI/gB,EAAWjZ,OAAO4M,KAAK9F,KAAKgzB,oBAIjDW,EAAiB3zB,KAAK4lB,YAAYqO,gBAAgBn8B,GAAM4jB,OAAO5jB,GAAM4b,OAAO,SAAAhZ,GAAA,OAAQ+1B,EAAKwB,kBAC1EnpB,QAAQ,SAAApO,GAAA,OAAQ+1B,EAAKrH,YACpC0H,EAAiB6C,GAAgB7qB,QAAQ,SAAApO,GAAA,OAAQ+1B,EAAKrH,YAC/CppB,gDAGGk0B,GACV,GAAIA,KAAQl0B,KAAKgzB,iBACb,OAAOhzB,KAAKgzB,iBAAiBkB,GAAMtD,wDAKrBuD,EAAOC,GAAQ,IAAA96B,EAAAW,EAAA+F,KAC3B8yB,EAAQqB,EAAMlsB,IAAI,SAAAvN,GAAA,OAAQ0a,EAAK4d,iBAAiBkB,KAClDG,GAAQC,MAAIC,GAAeC,SAAnBF,UAA+BxB,IAG3C,OADAA,EAAMhqB,QAAQ,SAAApO,GAAA,OAAQ+1B,EAAKgE,gBAAgBJ,KACpCA,mBAAuBD,EAAO94B,MAAQ84B,EAAOlV,2CAGrC,IACf,IAAIwV,SACAC,SAFWr7B,EAAA8L,UAAA1D,OAARkgB,EAAQ/Y,MAAAvP,GAAAd,EAAA,EAAAA,EAAAc,EAAAd,IAARopB,EAAQppB,GAAA4M,UAAA5M,GAGf,IACI45B,KACAU,EAAQlR,EAAO3Z,IAAI,SAACmb,GAEhB,OADAA,EAAM,GAAGwN,KAAOxN,EAAM,GACfA,EAAM,KAMrB,OAJA0P,EAAMhqB,QAAQ,SAAApO,GAAA,OAAQ+1B,EAAKrH,YAC3BgJ,EAAclsB,KAAdksB,UAAsBrC,iBAAQ+C,EAAM7qB,IAAI,SAAAvN,GAAA,OAAQ+1B,EAAK2B,oBACrDsC,EAAa,IAAIviB,EAAW2gB,EAAM7qB,IAAI,SAAAvN,GAAA,OAAQ+1B,EAAKE,iBAE9C3wB,KAAKmzB,aAMVwB,EAAgB7D,EAAiBgC,IACnBhqB,QAAQ,SAAApO,GAAA,OAAgBk6B,EAAaxL,YACnDsL,EAAWG,OAAOF,EAAc1sB,IAAI,SAAAvN,GAAA,OAAQ+1B,EAAKE,iBACjDyB,EAAclsB,KAAdksB,UAAsBrC,iBAAQ4E,EAAc1sB,IAAI,SAAAvN,GAAA,OAAQ+1B,EAAK2B,oBAE7DpyB,KAAK80B,0BAA0BjsB,MAAMG,KAAK,IAAI6N,IAAIub,IAAiBsC,GAC5D10B,OAXHA,KAAK80B,0BAA0B1C,GAC/BpyB,KAAKmzB,cACEnzB,8DAYYoyB,EAAesC,GAAY,IAAAp7B,EAAA0G,KAE9C+0B,KACAC,KAmBJ,OAlBIN,GAEoBviB,EAAW2b,WAAW9tB,KAAKkzB,UAAWwB,GAC9BO,UAEpBnsB,QAAQ,SAAApO,GAAA,OAASgd,EAAKsb,iBAAiB5P,GAAO8R,eAG1D9C,EAActpB,QAAQ,SAACpO,GACnBq6B,EAAS7uB,KAAT6uB,UAAiBr6B,EAAE21B,UAAUuC,iBAEjCR,EAActpB,QAAQ,SAACpO,GACnBs6B,EAAS9uB,KAAT8uB,UAAiBt6B,EAAE21B,UAAUsC,eAGhC3yB,KAAKozB,oBAAoBC,uBAAyB0B,EAASjsB,QAAQ,SAAApO,GAAA,OAAMwkB,OACzElf,KAAKozB,oBAAoBE,oBAAsBtzB,KAAKuzB,UAAUyB,GAAYxB,YAAakB,IACxF10B,KAAKm1B,2BACEn1B,oDAGgB,QAAAtF,EAAAsF,KAAAtG,EAAA0L,UAAA1D,OAAR0zB,EAAQvsB,MAAAnP,GAAAO,EAAA,EAAAA,EAAAP,EAAAO,IAARm7B,EAAQn7B,GAAAmL,UAAAnL,GACvB,IACI+M,EADUouB,EAAOntB,IAAI,SAAAvO,GAAA,OAAS27B,EAAKrC,iBAAiB/B,KACvChpB,IAAI,SAAAvN,GAAA,OAAS+1B,EAAMA,EAAKG,QAEzC,OADA5wB,KAAKs1B,OAALt1B,aAAegH,IACRhH,qDAWP,OADAA,KAAKmzB,cACEnzB,8DAMP,OAFAA,KAAKozB,oBAAoBC,yBACzBrzB,KAAKozB,oBAAoBE,sBAClBtzB,0DAGajG,GAEpB,OADAiG,KAAKozB,oBAAuBr5B,EAA5BiG,gBACOA,4DAGeixB,GACtB,OAAOjxB,KAAKgzB,iBAAiB/B,mDAvBTR,GACpB,IAAM8E,KAEN,OHdR,SAASC,EAAwB/E,EAAM8E,EAAUE,GAC7C,IAAIxE,SACJR,EAAKsB,MAAMjpB,QAAQ,SAAC4sB,GAChBF,EAAuBE,EAAWH,EAAUE,KAG5ChF,EAAKkF,WAAa1E,EAAQR,EAAKE,iBAAkB8E,IAGrDF,EAASrvB,KAAKuqB,GACdgF,EAAWxE,GAAS,GAVxB,CGa+BR,EAAM8E,MACtBA,QDtI2B7zB,GCsI3B6zB,iXC+Jf3Y,aA5TI,SAAAliB,KAAA,SAAAA,EAAAhB,GAAA,KAAAgB,aAAAhB,GAAA,UAAAqU,UAAA,sCAAe6nB,QACX51B,KAAK61B,OAAS,IAAIC,EAClB91B,KAAK+1B,aACL/1B,KAAKg2B,0DA6BL,IAAIC,SACA/tB,SAWJ,OATsB,IAAlB9C,UAAO1D,QACPu0B,EAAa,KACb/tB,4CAEA+tB,0CACA/tB,2CAGJlI,KAAKk2B,gBAAgBD,EAAY/tB,GAC1BlI,oDASgB,IAAAtF,EACnBy7B,EACAC,EACAC,SACA3C,SACA4C,SAiBJ,OAfIlxB,UAAO1D,OAAS,GAChBgyB,0CACA2C,0CACAC,4CAEA5C,EAAQ,KACR2C,0CACAC,2CAGJH,EAAoBG,EAAQzF,IAE5B0F,EADAH,EAAiB,IAAI1E,EAAeyE,EAAkBjX,KACvC4U,gBAAfyC,UAAkCJ,EAAkBz6B,eAEpDsE,KAAKk2B,gBAAgBxC,4HAAU2C,EAAUD,IAClCp2B,mDAIMi2B,EAAY/tB,GAEzB,OADAlI,KAAK61B,OAAOW,gBAAgBtuB,EAAK+tB,GAC1Bj2B,sCA0FPm0B,EAAOjV,EAAIuX,GACX,IAQiBC,EAPbC,EAAWxC,aAAiBtrB,MAAQsrB,GAASA,GAE7CyC,EAAQ52B,KAAK61B,OAAOgB,qBAAqBF,GACrCr7B,KAAM,YACN4jB,OAOR,OAJIuX,IAEAC,OAAKb,OAAOiB,kBAAkBC,uBAAuB,cAAaC,eAAlEN,UAAoFvC,IAEjFyC,qCAgBLzC,EAAOjV,EAAIuX,GACb,IASiBQ,EARbN,EAAWxC,aAAiBtrB,MAAQsrB,GAASA,GAE7CyC,EAAQ52B,KAAK61B,OAAOgB,qBAAqBF,GACrCr7B,KAAM,YACN4jB,OASR,OALIuX,IAEAQ,OAAKpB,OAAOiB,kBAAkBC,uBAAuB,iBAAgBC,eAArEC,UAAuF9C,IAGpFyC,uCAYP,OAFA52B,KAAK+1B,aACL/1B,KAAKg2B,MAAMt0B,OAAS,EACb1B,4CAYP,OAHAA,KAAK+1B,aACL/1B,KAAKk3B,QAALl3B,aAAgBA,KAAKg2B,QACrBh2B,KAAKg2B,MAAMt0B,OAAS,EACb1B,0CAkBP,IAEIyI,EAFAyrB,SACAhzB,SAGJ,OAAQuH,EAAMrD,UAAO1D,QACrB,KAAK,EACDwyB,0CACA,MAEJ,KAAK,EACDA,0CACAhzB,0CACA,MAEJ,QACI,OAAOlB,KAGX,OAAY,IAARyI,GACAzI,KAAK+1B,UAAY/1B,KAAKg2B,MAAM9vB,MAAMguB,EAAMhzB,IAAQlB,KAAKk3B,SAAShD,EAAMhzB,IAC7DlB,MAGJA,KAAK61B,OAAOsB,aAAajD,2CAIjB,QAAAx5B,EAAAhB,EAAAsG,KAAA1G,EAAA8L,UAAA1D,OAAPyyB,EAAOtrB,MAAAvP,GAAAd,EAAA,EAAAA,EAAAc,EAAAd,IAAP27B,EAAO37B,GAAA4M,UAAA5M,GAMf,OAAqB,IAAjB27B,EAAMzyB,OACC1B,OAGX61B,OAAKA,QAAOP,OAAZO,UAAsB1B,EAAMlsB,IAAI,SAAAvN,GAAA,OAASwa,EAAK2gB,OAAOuB,yBAAyBlD,EAAK,IAAKA,EAAK,QACtFl0B,4CAQP,OAAOA,KAAK61B,iDASZ,OAAO71B,KAAK61B,OAAO/9B,KAAK84B,4CA5Sb1oB,GACX,OAAO,IAAImvB,GAAQnB,gBAAgB,KAAMhuB,SA+SjD0U,GCzUA0a,uFCFAr/B,OAAOD,QAAU,SAASC,QAoBzB,OAnBKA,OAAOs/B,kBACXt/B,OAAOu/B,UAAY,aACnBv/B,OAAOw/B,SAEFx/B,OAAOy/B,WAAUz/B,OAAOy/B,aAC7Bx+B,OAAOC,eAAelB,OAAQ,UAC7BmB,YAAY,EACZC,IAAK,SAAAA,MACJ,OAAOpB,OAAOQ,KAGhBS,OAAOC,eAAelB,OAAQ,MAC7BmB,YAAY,EACZC,IAAK,SAAAA,MACJ,OAAOpB,OAAOO,KAGhBP,OAAOs/B,gBAAkB,GAEnBt/B,sVCdR,SAAS0/B,uBAAuBzvB,KAAO,OAAOA,KAAOA,IAAItO,WAAasO,KAAQrN,QAAWqN,KAJzFhP,OAAOC,eAAenB,QAAS,cAC3ByB,OAAO,IAKX,IAEIm+B,MAAQD,uBAFDE,oBAAQ,IAMfC,mBAAqBH,uBAFDE,oBAAQ,IAI5BE,MAAQH,MAAK,QAAYI,KAAuB,oBAAX5/B,OAAyBA,YAASmV,GACvE0qB,IAAMF,MAAM3I,IAAI8I,SAChBz1B,EAAIs1B,MAAM3I,IAAIvrB,KACdwQ,IAAM5R,EAAE4R,IACR5J,MAAQhI,EAAEgI,MAEV0tB,kBAAqBC,IAAK,UAC1BC,gBAAkBN,MAAMO,qBACxBC,oBAAsBF,gBAAgBG,SAAW,EAAI,IAsBzD,SAASC,kBAAkBC,GAAIC,UAAWC,YAAajyB,SACnD,IAAIkyB,QACA3E,KACA7f,IACAykB,aACAC,eAAgB,EAChBpwB,MAAQ8vB,kBAAkB9vB,MAE9B,QAAkB,IAAP+vB,IAAoC,WAAd/9B,QAAO+9B,IAAxC,CAwBA,IAAKxE,QApBD4E,aAAenwB,MAAM+vB,MACrBI,aAAarL,UAGjB9kB,MAAM+vB,IAAM14B,MACZ2G,QAAUA,aACFqyB,cAAgB53B,SAASiT,IAAM1N,QAAQqyB,eAAiB3kB,IAAM0jB,MAAMkB,qBAEnD,iBAAdN,YACPA,UAAYV,IAAIiB,eAAeP,aAGnCE,QAAUd,MAAMoB,gBAAgBR,YACxBS,UAAYrB,MAAMsB,YAEtBhB,gBAAgBiB,aAAejB,gBAAgBkB,MAASV,QAAQW,cAAiBX,QAAQY,eACzFV,eAAgB,GAGpBF,QAAQO,UAAY,GACPrB,MAAM2B,qBACfb,QAAQc,MAAMzF,MAAQ6D,MAAM2B,qBAAqBxF,MAGrDl0B,KAAK04B,GAAKA,GACV14B,KAAK45B,gBAAkBf,QAEvB74B,KAAK65B,kBAAoB,IAAI/B,mBAAkB,QAAYe,QAASE,cAAe,IACnF/4B,KAAK85B,iBAAmBlB,YACxB54B,KAAK+5B,OAAQ,EACb/5B,KAAK25B,SACL35B,KAAK2G,QAAUA,QAEf3G,KAAKg6B,YAaTvB,kBAAkBwB,YAAc,SAAUC,YAUtC,OATAA,WAAaA,gBAEG75B,KAEsB,iBAApB65B,WAAW75B,OACzB65B,WAAW75B,KAAO65B,WAAW75B,KAAKiC,YAFlC43B,WAAW75B,KAAO,GAKtB65B,WAAWC,MAAQD,WAAW75B,KAAKkM,MAAM,oBAClC2tB,YAIXzB,kBAAkB9vB,SAIlB8vB,kBAAkBn+B,UAAU8/B,qBAAuB,SAAU/5B,KAAMg6B,oBAAqB34B,QACpF,IAAK1B,KAAK+5B,MACN,OAAO,EAGX,IAAIO,KACAC,MACAC,GACAC,IACAC,YACAC,qBACAC,sBAAwB56B,KAAK2G,QAAQqyB,cACrCL,UAAY34B,KAAK66B,WACjBlB,MAAQ35B,KAAK25B,UACbmB,MAAQ96B,KAAK+6B,iBAAmB/6B,KAAK+6B,mBACrCC,iBAAmBh7B,KAAKi7B,oBAAsBj7B,KAAKi7B,sBACnDC,UAAY76B,MAAQs5B,MAAMwB,UArHtB,KAqH4CxB,MAAMyB,YArHlD,KAqH0EzB,MAAM0B,YArHhF,KAqHwG1B,MAAM2B,WArH9G,IAsHJC,cAAgBl7B,KAAO,QAAUs5B,MAAMwB,UAtHnC,KAsHyDxB,MAAMyB,YAtH/D,KAsHuFzB,MAAM0B,YAtH7F,KAsHqH1B,MAAM2B,WAtH3H,IA4IR,OApBAnD,iBAAiB93B,QAAUA,KAAO83B,iBAAiB93B,OAE9Cg6B,yBAGqD9sB,KAAjDotB,qBAAuBG,MAAMS,kBAC9B5C,UAAUS,UAAY/4B,KAAKm7B,OAASn7B,KAAKm7B,OAAO95B,QAAUmH,MAAMnH,OAAS,GAAGqB,KAAK1C,MACjFm6B,GAAK7B,UAAUc,YAEfd,UAAUS,UAAY/4B,KACtBo6B,IAAM9B,UAAUc,YAEhBkB,qBAAuBG,MAAMS,gBAAkBf,GAAK94B,OAAS+4B,MAAQ/4B,OAAS,GAC9Es5B,iBAAiB90B,KAAKq1B,eAClBP,iBAAiBt5B,OAASk5B,8BACnBE,MAAME,iBAAiB1yB,UAZtCqyB,qBAAuB,GAiBvBD,YAAcI,MAAMI,aACpBX,MAAQG,YAAYnuB,MAAM,MAEtBkvB,MAAO1iB,WAAWwhB,MAAM,GAAI,IAC5BmB,OAAQ3iB,WAAWwhB,MAAM,GAAI,OAIrC5B,UAAUS,UAAY/4B,KAEtBi6B,MACIoB,OAAQ/C,UAAUa,aAClBiC,MAAO9C,UAAUc,YAAckB,sBAGnCG,MAAMI,WAAaZ,KAAKmB,MAAQ,IAAMnB,KAAKoB,OAC3CV,iBAAiB90B,KAAKg1B,WAClBF,iBAAiBt5B,OAASk5B,8BACnBE,MAAME,iBAAiB1yB,SAG3BgyB,OAIX7B,kBAAkBn+B,UAAUqhC,YAAc,WACtC,IAAIC,QAAU57B,KAAK67B,cACflD,UAAY34B,KAAK66B,WACjBiB,QAAUF,QAAQE,QAEtB,OAAIA,QACO,SAAU3xB,KACb,IAAI4xB,KAAMN,MASV,OAPAK,QAAQE,YAAc7xB,KAEtBsxB,OADAM,KAAOD,QAAQG,WACFR,MAAQlD,qBACT,IACRkD,MAAQM,KAAKN,OAGVA,OAGJ,SAAUtxB,KAEb,OADAwuB,UAAUS,UAAYjvB,IACfwuB,UAAUc,cAkB7BhB,kBAAkBn+B,UAAU0/B,SAAW,SAAUL,OAC7C,OAAK35B,KAAK+5B,MAMNJ,QAAU35B,KAAK25B,OAAU35B,KAAKk8B,cAI7BvC,QACDA,MAAQ35B,KAAK25B,OAGjB5B,MAAMoE,cAAcxC,OACpB35B,KAAK25B,MAAQA,MAEb35B,KAAK67B,cAAgBO,MAAQp8B,KAAK65B,kBAAkBxgC,IAAIsgC,OAEpD35B,KAAK67B,eACL77B,KAAK66B,WAAauB,MAAM3L,KACxBzwB,KAAKq8B,SAAWD,MAAME,QACtBt8B,KAAKu8B,OAASH,MAAMI,UACpBx8B,KAAKy8B,YAAcL,MAAMM,WACzB18B,KAAKk8B,cAAe,GAEpBl8B,KAAKk8B,cAAe,EAGjBl8B,WAvBP,EALWA,KAGX,IAAIo8B,OAmCR3D,kBAAkBn+B,UAAUqiC,sBAAwB,SAAU/D,aAC1D,OAAK54B,KAAK+5B,OAGV/5B,KAAK85B,iBAAmBlB,YACjB54B,MAHIA,MA4Bfy4B,kBAAkBn+B,UAAUsiC,aAAe,SAAUv8B,KAAMw8B,SAAUC,UAAWC,QAC5E,IAAK/8B,KAAK+5B,MACN,OAAO,OAGExsB,IAATlN,MAA+B,OAATA,KACtBA,KAAO,GACgB,iBAATA,OACdA,KAAOA,KAAKiC,YAGhB,IAAImG,IACAu0B,QACAC,QACAC,QACAC,gBACAC,SACAC,SACAC,UACAC,aACAC,YACAC,SACAC,SACAC,YACAC,WACAC,qBACAC,QACAC,EACAv6B,EACAw6B,SACA7V,KACA8V,IACAC,mBACAC,gBACAC,OACAC,gBACAC,2BACAC,YAAa,EACbC,YAAc,EACdC,UAAY,EACZC,WAAa,EACbC,iBAAmB,EACnBC,SAAW,EACXC,UAAY,EACZC,cACAtmC,EAAI,EACJumC,YAAc/+B,KAAK85B,gBAAkB,GAAK,MAC1C4C,WAAa18B,KAAKy8B,YAClBH,QAAUt8B,KAAKq8B,SACf1D,UAAY34B,KAAK66B,WACjBuB,MAAQp8B,KAAK67B,cACbmD,cAAgB5C,MAAM4C,cACtBC,SAAW7C,MAAM6C,SACjBC,gBACAC,WAAa,EACbC,YAAc,EACdC,eAAiB,EACjBC,SAAW,SAASA,SAASn1B,KAI7B,IAFA,IAAIo1B,GAAK,KACL/mC,GAFJ2R,IAAMA,IAAI7J,QAAQ,SAAU,KAEhBoB,OACL69B,GAAGzhC,KAAKqM,IAAIq1B,OAAOhnC,GAAK,MAC/B,OAAO2R,IAAIgR,MAAM,EAAG3iB,EAAI,IAExBinC,YACAp/B,KAAMA,KACNw8B,SAAUA,SACVC,UAAWA,UACXrB,MAAO,KACPC,OAAQ,KACRgE,aAAc,KACdC,cAAe,KACfC,QAASv/B,KACTw/B,aAAa,GAYjB,GATAnC,SAAW19B,KAAK27B,cAKZmB,YAAcJ,aACdI,WAAa,KAGbnE,UAAW,CACX,IAAKN,gBAAgBU,cAAe,CAmBhC,IAlBAwF,WAAaxG,MAAM+H,YAAYhiC,KAAKuC,QAahCs4B,UAAUS,UAAY/4B,KACtBo/B,WAAWC,aAAerC,SAAW1E,UAAUc,YAC/CgG,WAAWE,cAAgBrC,UAAY3E,UAAUa,eAVjD0D,QAAU78B,KAAKC,QAAQy3B,MAAMgI,UAAW,SAAU13B,OAC9C,MAAiB,SAAVA,MAAmB,IAAM,MAEpCw1B,qBAAuB79B,KAAKggC,WAAW9C,SAAS,GAEhDuC,WAAWC,aAAerC,SAAWQ,qBAAqBpC,MAC1DgE,WAAWE,cAAgBrC,UAAYO,qBAAqBnC,QAO5D4B,WAAaR,WAAaO,UAAYR,SAGtC,OAFA4C,WAAWhE,MAAQgE,WAAWC,aAAerC,SAC7CoC,WAAW/D,OAAS+D,WAAWE,cAAgBrC,UACxCmC,WAGX,GAAI/C,WAAaI,UAIb,OAHA2C,WAAWp/B,KAAO,GAClBo/B,WAAWhE,MAAQgE,WAAWC,aAAe,EAC7CD,WAAW/D,OAAS+D,WAAWE,cAAgB,EACxCF,WAQf,GAHAp/B,KAAOi/B,SAASj/B,MAAMC,QAAQ,SAAU,KACxC68B,gBAAkBn9B,KAAK85B,gBAAkB+C,SAAWA,SAAWmC,eAE1DT,WAAY,CAab,GAXA91B,KADAq2B,WAAaz+B,KAAKkM,MAAM,KACP7K,OACjBs7B,QAAU,GAAIC,WACdQ,SAAWqB,WAAW,GAElB9+B,KAAKu8B,OAAOkB,UACZO,SAAWh+B,KAAKu8B,OAAOkB,UAAUhC,OAEjCuC,SAAWN,SAASD,UACpBz9B,KAAKu8B,OAAOkB,WAAchC,MAAOuC,WAGjCb,gBAAkBa,SAElBxlC,GADAykC,QAAU58B,KAAK4/B,OAAO,EAAGlI,MAAMmI,qBAAqB7/B,KAAM88B,gBAAiBn9B,OAAOuM,MAAM,KAC5E7K,WACT,IAAIs8B,SAAWnB,SAGlB,OAFA4C,WAAWp/B,KAAO,GAClBo/B,WAAWhE,MAAQgE,WAAWC,aAAeD,WAAW/D,OAAS+D,WAAWE,cAAgB,EACrFF,WACAV,eACP5B,gBAAkBN,SAAW,EAAIoC,UACXjB,SAClBe,YAAc,MAEd5B,gBAAkBN,SAAWoC,UACPjB,SAClBe,YAAc,KAEd5B,gBAAkB,EAClB4B,YAAc,KAQ1B,GAHAH,SAAWlB,SAAST,QAAQl6B,KAAK,KACjC87B,UAAY7+B,KAAKy8B,YAEbM,OAAQ,CACR,KAAOvkC,EAAIiQ,IAAKjQ,GAAK,EAajB,GAZAilC,SAAWR,QAAQzkC,GAAKsmC,WAAWtmC,GAC/BwH,KAAKu8B,OAAOkB,UACZO,SAAWh+B,KAAKu8B,OAAOkB,UAAUhC,OAE5BoC,uBAA0BG,SAAWH,qBAAqBsC,UAAU1C,aACrEO,SAAWN,SAASD,WAExBz9B,KAAKu8B,OAAOkB,WACRhC,MAAOuC,YAGfY,UAAYZ,UACGb,kBACNH,UACDA,QAAUC,QAAQ9hB,MAAM,GAAI,GAAGpY,KAAK,KAEpC67B,SAAW/B,UAKX,OAJA4C,WAAWp/B,KAAOi/B,SAAStC,SAAW+B,YACtCU,WAAWW,SAAWX,WAAWG,QACjCH,WAAWhE,MAAQiC,SAAS+B,WAAWp/B,MACvCo/B,WAAW/D,OAAS17B,KAAKy8B,YAClBgD,WAQnB,OAHAA,WAAWp/B,KAAO48B,QAAQl6B,KAAK,IAC/B08B,WAAWhE,MAAQmD,SACnBa,WAAW/D,OAAS17B,KAAKy8B,YAClBgD,WAEP,KAAOjnC,EAAIiQ,IAAKjQ,GAAK,EAkBjB,GAhBiB,OADjBilC,SAAWR,QAAQzkC,GAAKsmC,WAAWtmC,KACV8jC,UACrBmB,SAAW,UAGXz9B,KAAKu8B,OAAOkB,UACZO,SAAWh+B,KAAKu8B,OAAOkB,UAAUhC,OAE5BoC,uBAA0BG,SAAWH,qBAAqBsC,UAAU1C,aACrEO,SAAWN,SAASD,WAExBz9B,KAAKu8B,OAAOkB,WACRhC,MAAOuC,YAGfY,UAAYZ,UAEGb,kBACNH,UACDA,QAAUC,QAAQ9hB,MAAM,GAAI,GAAGpY,KAAK,KAEpC67B,SAAW/B,UAAU,CA2BrB,GAzBA6B,UAAYr+B,KAAK4/B,OAAO,EAAGhD,QAAQv7B,QAAQ2+B,YAAY,KACvD5B,SAAWp+B,KAAK4/B,OAAO,EAAGhD,QAAQv7B,QAAQ2+B,YAAY,KAClD3B,UAAYC,iBACZC,SAAWlB,SAAST,QAAQ9hB,MAAMwjB,gBAAkB,EAAGD,WAAW37B,KAAK,KACvEk6B,QAAQ31B,OAAOo3B,UAAW,EAAG,SAC7BC,gBAAkBD,UAClBnB,aAAemB,UAAY,GACpBD,SAAWE,iBACdF,WAAaxB,QAAQv7B,OAAS,GAC9Bk9B,SAAWlB,SAAST,QAAQ9hB,MAAMwjB,gBAAkB,EAAGD,WAAW37B,KAAK,KACvEk6B,QAAQ31B,OAAOm3B,SAAU,EAAG,YAE5BG,SAAWlB,SAAST,QAAQ9hB,MAAMwjB,gBAAkB,EAAGD,WAAW37B,KAAK,KACvEk6B,QAAQ31B,OAAOm3B,SAAU,EAAG,WAEhCE,gBAAkBF,SAClBlB,aAAekB,SAAW,IAE1BxB,QAAQ31B,OAAO21B,QAAQv7B,OAAS,EAAG,EAAG,QAAUo9B,WAAWtmC,IAC3D6mC,cAAgBpC,QAAQv7B,OAAS,EACjCk9B,SAAWlB,SAAST,QAAQ9hB,MAAMwjB,gBAAkB,EAAGU,cAAgB,GAAGt8B,KAAK,KAC/E47B,gBAAkBU,cAClB9B,aAAe/kC,IAEnBqmC,WAAa7+B,KAAKy8B,aACFK,UAMZ,OALA2C,WAAWp/B,KAAOi/B,SAAStC,SAAW+B,YACtCU,WAAWW,SAAWX,WAAWG,QAEjCH,WAAWhE,MAAQoB,SACnB4C,WAAW/D,OAASmD,UAAY7+B,KAAKy8B,YAC9BgD,WAEPjB,YAAcnqB,IAAImqB,YAAaI,UAC/B5B,QAAU,KACVQ,YAAczF,MAAMmI,qBAAqB7/B,KAAK4/B,OAAO1C,cAAeJ,gBAAiBn9B,MACrF4+B,SAAWlB,SAASr9B,KAAK4/B,OAAO1C,aAAcC,aAAe,IACzDP,QAAQv7B,OAAS67B,aAAeC,cAEhChlC,GADAykC,QAAUA,QAAQvhB,OAAOrb,KAAK4/B,OAAOhD,QAAQv7B,OAAQ67B,aAAeC,YAAcP,QAAQv7B,QAAQ6K,MAAM,MAC5F7K,OAAS,GAYzC,OALA88B,YAAcnqB,IAAImqB,YAAaI,UAE/Ba,WAAWp/B,KAAO48B,QAAQl6B,KAAK,IAC/B08B,WAAWhE,MAAQ+C,YACnBiB,WAAW/D,OAASmD,UACbY,WAWX,IARArC,SAAW/8B,KAAKC,QAAQy3B,MAAMuI,iBAAkB,MAEhDjgC,MADAA,KAAOA,KAAKC,QAAQy3B,MAAMuI,iBAAkBvI,MAAMwI,uBACtCjgC,QAAQ,iBAAkB,iBAAmBy3B,MAAMyI,iBAAkB,IAAKzI,MAAM0I,oBAAoB19B,KAAK,IAAM,eAE3H41B,UAAUS,UAAY/4B,KAIjB09B,EAAI,EAAGv6B,GAFZs6B,QAAUnF,UAAUN,gBAAgBqI,iBAAiBrI,gBAAgBsI,sBAE7Cj/B,OAAQq8B,EAAIv6B,EAAGu6B,GAAK,EACxC5V,KAAO2V,QAAQC,IAEX1F,gBAAgBuI,gBAAkB7I,MAAM8I,aAAa/iC,KAAKqqB,KAAK2Y,aAEnD,MADZ7C,IAAM9V,KAAKiR,aAEK,MAAR6E,IACAmB,WAAaF,aAAax9B,OACX,MAARu8B,MACPkB,UAAYD,aAAax9B,QAG7Bw9B,aAAah5B,MACT66B,SAAU3B,WACV4B,QAAS7B,UACThX,KAAMA,OAEV2W,WAAW54B,KAAK+3B,MAS5B,GAJAzlC,EAAI,EACJiQ,IAAMy2B,aAAax9B,QACnBs8B,SAAWkB,aAAa,GAAG/W,KAAKsR,aAEjBoD,SAIX,OAHA4C,WAAWp/B,KAAO,GAClBo/B,WAAWhE,MAAQgE,WAAWC,aAAeD,WAAW/D,OAAS+D,WAAWE,cAAgB,EAErFF,WAoBX,GAnBWzB,SAAWb,kBAAoBn9B,KAAK85B,mBAE3CqD,gBAAkBN,SAAW,EAAIoC,UACXjB,SAClBe,YAAc,MAEd5B,gBAAkBN,SAAWoC,UACPjB,SAClBe,YAAc,KAEd5B,gBAAkB,EAClB4B,YAAc,KAK1BpB,YAAcuB,aAAa,GAAG/W,KAAK8Y,WACnCrD,WAAasB,aAAa,GAAG/W,KAAK+Y,UAE9BnE,OACA,KAAOvkC,EAAIiQ,IAAKjQ,GAAK,GAEjB0lC,oBADA/V,KAAO+W,aAAa1mC,GAAG2vB,MACG8Y,WAAatD,YAAcxV,KAAKsR,aAEjC0D,kBAChBmB,6BACDA,2BAA6B9lC,GAE7BmgC,UAAUc,YAAcoD,WACxBwB,gBAAkB7lC,EAClBA,EAAIiQ,WAKhB,KAAOjQ,EAAIiQ,IAAKjQ,GAAK,EAEjB2lC,iBADAhW,KAAO+W,aAAa1mC,GAAG2vB,MACAqR,cAAgBrR,KAAK+Y,UAAYtD,YAGxDQ,OAAS,MAFTF,mBAAqB/V,KAAK8Y,WAAatD,YAAcxV,KAAKsR,aAIjC0D,iBAChBmB,6BACDA,2BAA6B9lC,GAG7B0lC,mBAAqBrB,WACrB6B,UAAYQ,aAAa1mC,GAAGuoC,SAC5BtC,SAAWS,aAAa1mC,GAAGwoC,QACvBtC,UAAYC,iBACZO,aAAaR,WAAWvW,KAAKiR,UAAY,QACzCuF,gBAAkBD,WACXD,SAAWE,iBAGdO,aAAaT,UAAUtW,KAAKiR,UAF5BqF,WAAajmC,EAE2B,SAEA,SAE5CmmC,gBAAkBF,UAElBtW,KAAKgZ,WAAWC,aAAahD,OAASnG,IAAIoJ,cAAc,MAAOlZ,MAI/DA,KAAKqR,aAAerR,KAAK+Y,UAAYpE,WAEjCsB,OACAA,OAAO+C,WAAWhb,YAAYiY,QACvBO,kBAAoBF,SAC3BS,aAAaT,UAAUtW,KAAKiR,UAAY,IAExC8F,aAAaR,WAAWvW,KAAKiR,UAAY,IAE7CiF,gBAAkB7lC,EAElBA,EAAIiQ,KAEJ61B,2BAA6B,OAKjCH,gBAAkBrB,YAClBuB,gBAAkB7lC,EAClBA,EAAIiQ,KAMpB,GAAI41B,gBAAkB51B,IAAK,CAOvB,IALAg3B,WAAWI,aAAc,EAGzBvB,2BAA6BA,4BAA0DD,gBAElF7lC,EAAIiQ,IAAM,EAAGjQ,GAAK8lC,2BAA4B9lC,GAAK,GACpD2vB,KAAO+W,aAAa1mC,GAAG2vB,MAElBgZ,WAAWhb,YAAYgC,MAGhC,KAAO3vB,GAAK,EAAGA,GAAK,EAChB2vB,KAAO+W,aAAa1mC,GAAG2vB,KACnB4P,MAAMuJ,eAAexjC,KAAKqqB,KAAK2Y,WAE/B3Y,KAAKgZ,WAAWhb,YAAYgC,MAE5B3vB,EAAI,EAgBpB,OAVIinC,WAAWp/B,KAAOs4B,UAAUS,UAAU94B,QAAQy3B,MAAMwJ,gBAAiB,MAAMjhC,QAAQ,WAAY,KAC3Fm/B,WAAWI,cACXJ,WAAWp/B,MAAQ0+B,YACnBU,WAAWW,SAAWhD,UAI9BqC,WAAW/D,OAAS/C,UAAUa,aAC9BiG,WAAWhE,MAAQ9C,UAAUc,YAEtBgG,WAGP,OADAA,WAAW+B,MAAQ,IAAI9xB,MAAM,qBACtB+vB,YAoBfhH,kBAAkBn+B,UAAU0lC,WAAa,SAAU3/B,KAAMohC,yBACrD,IAAKzhC,KAAK+5B,MACN,OAAO,EAGX,IAAI2H,QACAC,OACAC,MACAppC,EACAC,EACAopC,eAAiB,EACjBnG,OAAS,EACToG,iBAEJ,IAAKL,wBACD,OAAOzhC,KAAKo6B,qBAAqB/5B,MAKrC,IAAK7H,EAAI,EAAGC,GADZipC,QAAUrhC,KAAKkM,MAAM,KACG7K,OAAQlJ,EAAIC,EAAGD,IACnCmpC,OAASD,QAAQlpC,GACjBopC,MAAQ5hC,KAAKo6B,qBAAqBuH,QAAQ,EAAMD,QAAQhgC,QACxDg6B,OAASrnB,IAAIqnB,OAAQkG,MAAMlG,QAC3BmG,gBAAkBD,MAAMnG,MACxBqG,cAAcH,QAAUC,MAAMnG,MAGlC,OACIA,MAAOhxB,MAAMo3B,gBACbnG,OAAQA,OACRyE,UAAW2B,gBAOnBrJ,kBAAkBn+B,UAAUmzB,QAAU,WAClC,OAAKztB,KAAK+5B,OAIV/5B,KAAK65B,mBAAqB75B,KAAK65B,kBAAkBpM,SAAWztB,KAAK65B,kBAAkBpM,iBAE5EztB,KAAK66B,kBACL76B,KAAKq8B,gBACLr8B,KAAKu8B,cACLv8B,KAAK65B,yBACL75B,KAAK67B,qBACL77B,KAAK04B,UACL14B,KAAK25B,aACL35B,KAAK45B,uBACL55B,KAAK85B,gBAEL95B,MAfIA,MAkBfhI,QAAO,QAAcygC,kBACrBxgC,OAAOD,QAAUA,QAAO,mEC7yBxBkB,OAAOC,eAAenB,QAAS,cAC9ByB,OAAO,IAER,IAAIsoC,KACH/J,KAAM,SAASA,KAAK5I,KACnB,IAAI6I,IAAM7I,IAAI8I,SAEV8J,UADM5S,IAAI6S,UACMD,UAEhBhW,KAAOnoB,KAAKmoB,KACZ3a,MAAQxN,KAAKwN,MAEb6wB,aAAe,2BACfC,eAAiBD,aAAe,YAChC1B,iBAAmB0B,aAAe,MAkLtC,OA/KAH,KACC3S,IAAKA,IAEL+S,eAAgBA,eAEhB3B,iBAAkBA,iBAElBC,mBATwByB,6BAWxBjJ,qBAAsB,IAEtB4H,aAAc,IAAI1gC,OAAO,KAAOqgC,iBAAmB,MAEnDc,eAAgB,IAAInhC,OAAO,kCAE3BmgC,iBAAkB,2CAElBC,qBAAsB,kBAAoBC,iBAAmB,cAE7De,gBAAiB,IAAIphC,OAAO,kBAAoBqgC,iBAAmB,kCAAmC,MAEtGV,YAAa,IAAI3/B,OAAO,mBAAoB,KAE5C4/B,UAAW,aAEXqC,eAAgB,WAEhB/I,WAAY,MAGZK,sBACC2I,SAAU,WACVC,IAAK,UACLC,WAAY,SACZC,QAAS,MACT/G,MAAO,MACPC,OAAQ,MACR+G,SAAU,UAIXC,gBACCC,KAAM,OACNvH,WAAY,cACZwH,cAAe,cACfvH,WAAY,cACZwH,cAAe,cACf1H,SAAU,YACV2H,YAAa,YACbpG,WAAY,cACZqG,cAAe,cACfzH,UAAW,aACX0H,aAAc,cAIf1K,mBAAoB,SAASA,qBAC5B,IAAIoI,gBAAiBC,oBAAqBC,eAY1C,OAVI3I,IAAIgL,wBACPvC,gBAAkB,yBAClBC,oBAAsBH,iBACtBI,gBAAiB,IAEjBF,gBAAkB,uBAClBC,oBAAsB,OACtBC,gBAAiB,IAIjBrH,KAAM,QAAQz7B,KAAKkkC,aAAe5S,IAAI8T,MACtCC,OAAQC,QAAQhU,IAAIiU,UAAYpL,IAAIqL,eAAeC,WAAW,oDAAqD,QACnHjK,WAAY,IAAIn5B,OAAO,aAAarC,KAAKkkC,WACzCxJ,SAAU,IAAIr4B,OAAO,iBAAiBrC,KAAKkkC,WAC3CtB,gBAAiBA,gBACjBC,oBAAqBA,oBACrBC,eAAgBA,iBAWlBzH,gBAAiB,SAASA,gBAAgBqK,iBACzC,IAAIC,KAAM9K,UAEV,GAAI6K,kBAAoBA,gBAAgB/J,aAAe+J,gBAAgBhK,eACtE,GAAIgK,gBAAgBE,YAKnB,OAJAF,gBAAgBE,YAAY/K,UAAYV,IAAIoJ,cArGtC,QAsGN1I,UAAUmI,UAAYqB,eACtBxJ,UAAUgL,aAAa,cAAe,QACtChL,UAAUgL,aAAa,OAAQ,gBACxBhL,eAKR,IAFA8K,KAAOxL,IAAI2L,qBAAqB,QAAQ,KAE5BH,KAAKC,YAOhB,OANA/K,UAAYV,IAAIoJ,cA/GV,QAgHIP,UAAYqB,eACtBxJ,UAAUgL,aAAa,cAAe,QACtChL,UAAUgL,aAAa,OAAQ,gBACL,EAC1BF,KAAKC,YAAY/K,WACVA,WAMVuH,qBAAsB,SAASA,qBAAqB7/B,KAAMw8B,SAAUgH,IACnE,IAAKxjC,OAASA,KAAKqB,OAClB,OAAO,EAGR,IAAIosB,WACA4P,SAAWmG,GAAGlI,cACdmI,QAAU,EACVC,UAAY,EACZ1G,SAAWK,SAASr9B,MACpB2jC,SAAW3G,SAAWh9B,KAAKqB,OAK/B,GAHAosB,WAAa+O,SACbiH,QAAU9X,KAAK6Q,SAAWmH,UAEtB3G,SAAWR,SACd,OAAOx8B,KAAKqB,OAAS,EAQtB,IALIoiC,QAAUzjC,KAAKqB,SAClBosB,WAAa+O,SAAWQ,SACxByG,QAAUzjC,KAAKqB,QAGTosB,WAAa,GAAG,CAGtB,GAFAA,WAAa+O,SAAWa,SAASr9B,KAAK4/B,OAAO,EAAG6D,YAChDC,UAAY1yB,MAAMyc,WAAakW,WAI9B,OAAOF,QAFPA,SAAWC,UAMb,KAAOjW,WAAa,GAAG,CAGtB,GAFAA,WAAa+O,SAAWa,SAASr9B,KAAK4/B,OAAO,EAAG6D,YAChDC,UAAY1yB,MAAMyc,WAAakW,WAI9B,OAAOF,QAFPA,SAAWC,UAKb,OAAOD,SAWR3H,cAAe,SAASA,cAAc8H,UACrC,IAAIC,MAAQD,SAAS9I,SAAW8I,SAAS9I,UAAY,OAErD,OADA8I,SAASvH,WAAauH,SAASvH,YAAcuH,SAAS,gBAAwC,IAAtB5iC,SAAS6iC,MAAO,IAAY,KAC7FD,aAQXjsC,QAAO,QAAc+pC,IACrB9pC,OAAOD,QAAUA,QAAO,wvCCvMxB,IAAMmsC,KAAOtM,oBAAQ,IAErB5/B,OAAOD,QAAUmsC,KAAKtpC,QAAUspC,KAAKtpC,QAAUspC,gECE/C,IAIIpM,MANJ,SAASJ,uBAAuBzvB,KAAO,OAAOA,KAAOA,IAAItO,WAAasO,KAAQrN,QAAWqN,KAI7EyvB,CAFDE,oBAAQ,IAIF,QAAYG,KAAuB,oBAAX5/B,OAAyBA,YAASmV,GACvE0qB,IAAMF,MAAM3I,IAAI8I,SAChBG,gBAAkBN,MAAMO,qBACxBC,oBAAsBF,gBAAgBG,SAAW,EAAI,IAEzD,SAAS4L,iBAAiBxK,gBAAiBb,cAAesL,eACtD,IAAIC,IAGJD,eADAA,cAAgBA,cAAgB,EAAIA,cAAgB,GACpB,GAAKA,cAAgB,GAErDrkC,KAAKqkC,cAAgBA,cACrBrkC,KAAKsU,MAAQ,KACbtU,KAAKuU,KAAO,KACZvU,KAAKukC,cACLvkC,KAAK0B,OAAS,EACd1B,KAAKwkC,SAAW5K,gBAEZb,iBACAuL,IAAMrM,IAAIwM,gBAAgB,6BAA8B,QACpDC,eAAe,6BAA8B,QAAS,gCAC1DJ,IAAII,eAAe,6BAA8B,SAAU,KAC3DJ,IAAII,eAAe,6BAA8B,QAAS,KAC1D1kC,KAAK2kC,QAAUL,IACftkC,KAAKwkC,SAASd,YAAYY,MAIlCF,iBAAiB9pC,UAAUjB,IAAM,SAAUsgC,OACvC,IAAIiL,KACA7qC,IACA8qC,aACAN,WAAavkC,KAAKukC,WAClB97B,IAAMzI,KAAK0B,OACX2S,IAAMrU,KAAKqkC,cACXS,OAAS,GAEb,IAAK/qC,OAAOg+B,MAAM2K,oBACKn1B,IAAfosB,MAAM5/B,OACN+qC,QAAU/M,MAAM2K,eAAe3oC,KAAO,IAAM4/B,MAAM5/B,KAAO,KAIjE,IAAK+qC,OACD,OAAO,EAGX,GAAID,aAAeN,WAAWO,QACtB9kC,KAAKsU,QAAUuwB,eACfA,aAAaE,OAASF,aAAaE,KAAKn3B,KAAOi3B,aAAaj3B,MAC5Di3B,aAAaj3B,OAASi3B,aAAaj3B,KAAKm3B,KAAOF,aAAaE,MAC5DF,aAAaj3B,KAAO5N,KAAKsU,MACzBuwB,aAAaj3B,KAAKm3B,KAAOF,aACzB7kC,KAAKuU,OAASswB,eAAiB7kC,KAAKuU,KAAOswB,aAAaE,MACxDF,aAAaE,KAAO,KACpB/kC,KAAKsU,MAAQuwB,kBAEd,CACH,GAAIp8B,KAAO4L,IAGP,IAFAuwB,KAAOn8B,IAAM4L,IAAM,EAEZuwB,QACH5kC,KAAKglC,gBAAgBhlC,KAAKuU,MAGlCswB,aAAe7kC,KAAKilC,aAAaH,QAGrC,OAAOD,cAGXT,iBAAiB9pC,UAAU2qC,aAAe,SAAUH,QAChD,IAAIrU,KAAMkI,UA8DV,OA5DA34B,KAAKukC,WAAWO,QAAUnM,WACtB/qB,KAAM,KACNm3B,KAAM,KACNtU,KAAM,KACNuO,cAAe,EACftC,WAAY,EACZuC,SAAU,EACViG,aAAc,EACdJ,OAAQA,OACRtI,cAKJ7D,UAAU/qB,KAAO5N,KAAKsU,MACtBqkB,UAAU/qB,OAAS+qB,UAAU/qB,KAAKm3B,KAAOpM,WACzC34B,KAAKsU,MAAQqkB,UACR34B,KAAKuU,OACNvU,KAAKuU,KAAOokB,WAEhB34B,KAAK0B,QAAU,EAEf+uB,KAAOkI,UAAUlI,KAAOwH,IAAIoJ,cAAc,OAC1CrhC,KAAKwkC,SAASd,YAAYjT,MAEtB4H,gBAAgBkB,OAASlB,gBAAgB8K,OACzC1S,KAAKkJ,MAAMgK,aAAa,UAAWmB,QAEnCrU,KAAKkT,aAAa,QAASmB,QAG/BrU,KAAKkT,aAAa,cAAe,QACjClT,KAAKkT,aAAa,OAAQ,gBAC1BlT,KAAKkJ,MAAMwL,QAAU,eAErB1U,KAAK2I,UAAYrB,MAAMsB,WACvBV,UAAU+D,WAAajM,KAAK+I,aAC5Bb,UAAUuM,aAAezU,KAAKgJ,YAAc,EAExCpB,gBAAgBU,gBAChBtI,KAAOkI,UAAUmD,QAAU7D,IAAIwM,gBAAgB,6BAA8B,SACxEd,aAAa,QAASmB,QAC3B9kC,KAAK2kC,QAAQjB,YAAYjT,MAEzBA,KAAKuL,YAAcjE,MAAMsB,WACzBV,UAAU+D,WAAajM,KAAKwL,UAAUP,OACtC/C,UAAUuM,cAAgBzU,KAAKwL,UAAUR,MAAQlD,qBAAuB,EAExE9H,KAAKuL,YAAc,MACnBrD,UAAUqG,cAAgBvO,KAAKwL,UAAUR,MAAQlD,oBACjD9H,KAAKuL,YAAc,IACnBrD,UAAUsG,SAAWxO,KAAKwL,UAAUR,MAAQlD,sBAE5C9H,KAAK2I,UAAY,MACjBT,UAAUqG,cAAgBvO,KAAKgJ,YAC/BhJ,KAAK2I,UAAY,IACjBT,UAAUsG,SAAWxO,KAAKgJ,YAC1BhJ,KAAK2I,UAAY,IAGdT,WAGXyL,iBAAiB9pC,UAAU0qC,gBAAkB,SAAUI,MACnD,IAAIN,OAASM,KAAKN,OAEbA,QAAW9kC,KAAK0B,QAAW0jC,OAGhCplC,KAAK0B,QAAU,EAEf0jC,KAAKL,OAASK,KAAKL,KAAKn3B,KAAOw3B,KAAKx3B,MACpCw3B,KAAKx3B,OAASw3B,KAAKx3B,KAAKm3B,KAAOK,KAAKL,MACpC/kC,KAAKsU,QAAU8wB,OAASplC,KAAKsU,MAAQ8wB,KAAKx3B,MAC1C5N,KAAKuU,OAAS6wB,OAASplC,KAAKuU,KAAO6wB,KAAKL,MAExCK,KAAK3U,KAAK0Q,WAAWhb,YAAYif,KAAK3U,aAE/BzwB,KAAKukC,WAAWO,UAG3BV,iBAAiB9pC,UAAUmzB,QAAU,WACjC,IAAI1zB,IACAwqC,WAAavkC,KAAKukC,WAGtB,IAAKxqC,OADLiG,KAAKqkC,cAAgB,KACTE,WACRvkC,KAAKglC,gBAAgBT,WAAWxqC,MAGpCiG,KAAKwkC,SAASrD,WAAWhb,YAAYnmB,KAAKwkC,UAE1CxkC,KAAKwkC,SAAW,KAChBxkC,KAAKsU,MAAQ,KACbtU,KAAKuU,KAAO,MAGhBtc,OAAOD,QAAUosC,o2dCnLFiB,UAAA,SAASzqC,EAAGwI,GACzB,OAAOxI,EAAIwI,GAAK,EAAIxI,EAAIwI,EAAI,EAAIxI,GAAKwI,EAAI,EAAIkiC,KCChCC,SAAA,SAASC,SAEtB,OADuB,IAAnBA,QAAQ9jC,SAAc8jC,QAyB5B,SAASC,oBAAoB5qB,GAC3B,OAAO,SAAS/hB,EAAGilC,GACjB,OAAOsH,UAAUxqB,EAAE/hB,GAAIilC,IA3BW0H,CAAoBD,WAEtDE,KAAM,SAAAA,KAAS9qC,EAAGmjC,EAAG7sB,GAAIC,IAGvB,IAFU,MAAND,KAAYA,GAAK,GACX,MAANC,KAAYA,GAAKvW,EAAE8G,QAChBwP,GAAKC,IAAI,CACd,IAAIC,IAAMF,GAAKC,KAAO,EAClBq0B,QAAQ5qC,EAAEwW,KAAM2sB,GAAK,EAAG7sB,GAAKE,IAAM,EAClCD,GAAKC,IAEZ,OAAOF,IAETy0B,MAAO,SAAAA,MAAS/qC,EAAGmjC,EAAG7sB,GAAIC,IAGxB,IAFU,MAAND,KAAYA,GAAK,GACX,MAANC,KAAYA,GAAKvW,EAAE8G,QAChBwP,GAAKC,IAAI,CACd,IAAIC,IAAMF,GAAKC,KAAO,EAClBq0B,QAAQ5qC,EAAEwW,KAAM2sB,GAAK,EAAG5sB,GAAKC,IAC5BF,GAAKE,IAAM,EAElB,OAAOF,MCpBb,IAAI00B,gBAAkBL,SAASF,WACpBQ,YAAcD,gBAAgBD,MAE1BE,QADSD,gBAAgBF,KACzBG,aCJA,ICFAC,OAAA,SAAS/H,GACtB,OAAa,OAANA,EAAauH,KAAOvH,GCDzBgI,YAAQl9B,MAAMvO,UCAH0rC,WDEID,YAAM5qB,MACR4qB,YAAM99B,ICHR,SAAS/J,MAAO+nC,KAAMC,MACnChoC,OAASA,MAAO+nC,MAAQA,KAAMC,MAAQjsC,EAAImL,UAAU1D,QAAU,GAAKukC,KAAO/nC,MAAOA,MAAQ,EAAG,GAAKjE,EAAI,EAAI,GAAKisC,KAM9G,IAJA,IAAI1tC,GAAK,EACLyB,EAAoD,EAAhD4J,KAAKwQ,IAAI,EAAGxQ,KAAKmoB,MAAMia,KAAO/nC,OAASgoC,OAC3C3kC,MAAQ,IAAIsH,MAAM5O,KAEbzB,EAAIyB,GACXsH,MAAM/I,GAAK0F,MAAQ1F,EAAI0tC,KAGzB,OAAO3kC,QCXL4kC,IAAMtiC,KAAK6Q,KAAK,IAChB0xB,GAAKviC,KAAK6Q,KAAK,IACf2xB,GAAKxiC,KAAK6Q,KAAK,GAEJ4xB,UAAA,SAASpoC,MAAO+nC,KAAMzxB,OACnC,IAAI8P,QAEArqB,EACAssC,MACAL,KAHA1tC,GAAK,EAMT,GAD8Bgc,OAASA,OAAzBtW,OAASA,UAAvB+nC,MAAQA,OACczxB,MAAQ,EAAG,OAAQtW,OAEzC,IADIomB,QAAU2hB,KAAO/nC,SAAOjE,EAAIiE,MAAOA,MAAQ+nC,KAAMA,KAAOhsC,GACT,KAA9CisC,KAAOM,cAActoC,MAAO+nC,KAAMzxB,UAAkBpT,SAAS8kC,MAAO,SAEzE,GAAIA,KAAO,EAIT,IAHAhoC,MAAQ2F,KAAKmoB,KAAK9tB,MAAQgoC,MAC1BD,KAAOpiC,KAAKwN,MAAM40B,KAAOC,MACzBK,MAAQ,IAAI19B,MAAM5O,EAAI4J,KAAKmoB,KAAKia,KAAO/nC,MAAQ,MACtC1F,EAAIyB,GAAGssC,MAAM/tC,IAAM0F,MAAQ1F,GAAK0tC,UAKzC,IAHAhoC,MAAQ2F,KAAKwN,MAAMnT,MAAQgoC,MAC3BD,KAAOpiC,KAAKmoB,KAAKia,KAAOC,MACxBK,MAAQ,IAAI19B,MAAM5O,EAAI4J,KAAKmoB,KAAK9tB,MAAQ+nC,KAAO,MACtCztC,EAAIyB,GAAGssC,MAAM/tC,IAAM0F,MAAQ1F,GAAK0tC,KAK3C,OAFI5hB,SAASiiB,MAAMjiB,UAEZiiB,OAGF,SAASC,cAActoC,MAAO+nC,KAAMzxB,OACzC,IAAI0xB,MAAQD,KAAO/nC,OAAS2F,KAAKwQ,IAAI,EAAGG,OACpCiyB,MAAQ5iC,KAAKwN,MAAMxN,KAAK6iC,IAAIR,MAAQriC,KAAK8iC,MACzCnF,MAAQ0E,KAAOriC,KAAK+Q,IAAI,GAAI6xB,OAChC,OAAOA,OAAS,GACTjF,OAAS2E,IAAM,GAAK3E,OAAS4E,GAAK,EAAI5E,OAAS6E,GAAK,EAAI,GAAKxiC,KAAK+Q,IAAI,GAAI6xB,QAC1E5iC,KAAK+Q,IAAI,IAAK6xB,QAAUjF,OAAS2E,IAAM,GAAK3E,OAAS4E,GAAK,EAAI5E,OAAS6E,GAAK,EAAI,GAGlF,SAASO,SAAS1oC,MAAO+nC,KAAMzxB,OACpC,IAAIqyB,MAAQhjC,KAAKooB,IAAIga,KAAO/nC,OAAS2F,KAAKwQ,IAAI,EAAGG,OAC7CsyB,MAAQjjC,KAAK+Q,IAAI,GAAI/Q,KAAKwN,MAAMxN,KAAK6iC,IAAIG,OAAShjC,KAAK8iC,OACvDnF,MAAQqF,MAAQC,MAIpB,OAHItF,OAAS2E,IAAKW,OAAS,GAClBtF,OAAS4E,GAAIU,OAAS,EACtBtF,OAAS6E,KAAIS,OAAS,GACxBb,KAAO/nC,OAAS4oC,MAAQA,MCjDlB,ICEAC,SAAA,SAASroB,OAAQlkB,EAAGwsC,SAEjC,GADe,MAAXA,UAAiBA,QAAUlB,QACzB7rC,EAAIykB,OAAOhd,OAAjB,CACA,IAAKlH,GAAKA,IAAM,GAAKP,EAAI,EAAG,OAAQ+sC,QAAQtoB,OAAO,GAAI,EAAGA,QAC1D,GAAIlkB,GAAK,EAAG,OAAQwsC,QAAQtoB,OAAOzkB,EAAI,GAAIA,EAAI,EAAGykB,QAClD,IAAIzkB,EACAzB,GAAKyB,EAAI,GAAKO,EACdysC,GAAKpjC,KAAKwN,MAAM7Y,GAChB0uC,QAAUF,QAAQtoB,OAAOuoB,IAAKA,GAAIvoB,QAEtC,OAAOwoB,SADOF,QAAQtoB,OAAOuoB,GAAK,GAAIA,GAAK,EAAGvoB,QACpBwoB,SAAW1uC,EAAIyuC,MCV3C,SAASn1B,WAkDT,SAAS7J,QAAI7N,OAAQygB,GACnB,IAAI5S,IAAM,IAAI6J,QAGd,GAAI1X,kBAAkB0X,QAAK1X,OAAO+sC,KAAK,SAAS1tC,MAAOM,KAAOkO,IAAIkK,IAAIpY,IAAKN,cAGtE,GAAIoP,MAAMwB,QAAQjQ,QAAS,CAC9B,IAEInB,EAFAT,GAAK,EACLyB,EAAIG,OAAOsH,OAGf,GAAS,MAALmZ,EAAW,OAASriB,EAAIyB,GAAGgO,IAAIkK,IAAI3Z,EAAG4B,OAAO5B,SAC5C,OAASA,EAAIyB,GAAGgO,IAAIkK,IAAI0I,EAAE5hB,EAAImB,OAAO5B,GAAIA,EAAG4B,QAASnB,QAIvD,GAAImB,OAAQ,IAAK,IAAIL,OAAOK,OAAQ6N,IAAIkK,IAAIpY,IAAKK,OAAOL,MAE7D,OAAOkO,IAnET6J,QAAIxX,UAAY2N,QAAI3N,WAClBsrB,YAAa9T,QACbI,IAAK,SAAAA,IAASnY,KACZ,MAPgB,IAOCA,OAAQiG,MAE3B3G,IAAK,SAAAA,IAASU,KACZ,OAAOiG,KAVS,IAUKjG,MAEvBoY,IAAK,SAAAA,IAASpY,IAAKN,OAEjB,OADAuG,KAbgB,IAaFjG,KAAON,MACduG,MAETonC,OAAQ,SAAAA,OAASrtC,KACf,IAAIM,SAjBY,IAiBQN,IACxB,OAAOM,YAAY2F,aAAeA,KAAK3F,WAEzCgtC,MAAO,SAAAA,QACL,IAAK,IAAIhtC,YAAY2F,KArBL,MAqBe3F,SAAS,WAAsB2F,KAAK3F,WAErEyL,KAAM,SAAAA,OACJ,IAAIA,QACJ,IAAK,IAAIzL,YAAY2F,KAzBL,MAyBe3F,SAAS,IAAeyL,KAAKI,KAAK7L,SAAS8gB,MAAM,IAChF,OAAOrV,MAET4Y,OAAQ,SAAAA,SACN,IAAIA,UACJ,IAAK,IAAIrkB,YAAY2F,KA9BL,MA8Be3F,SAAS,IAAeqkB,OAAOxY,KAAKlG,KAAK3F,WACxE,OAAOqkB,QAETzJ,QAAS,SAAAA,UACP,IAAIA,WACJ,IAAK,IAAI5a,YAAY2F,KAnCL,MAmCe3F,SAAS,IAAe4a,QAAQ/O,MAAMnM,IAAKM,SAAS8gB,MAAM,GAAI1hB,MAAOuG,KAAK3F,YACzG,OAAO4a,SAETqlB,KAAM,SAAAA,OACJ,IAAIA,KAAO,EACX,IAAK,IAAIjgC,YAAY2F,KAxCL,MAwCe3F,SAAS,MAAiBigC,KACzD,OAAOA,MAETgN,MAAO,SAAAA,QACL,IAAK,IAAIjtC,YAAY2F,KAAM,GA5CX,MA4Ce3F,SAAS,GAAe,OAAO,EAC9D,OAAO,GAET8sC,KAAM,SAAAA,KAAStsB,GACb,IAAK,IAAIxgB,YAAY2F,KAhDL,MAgDe3F,SAAS,IAAewgB,EAAE7a,KAAK3F,UAAWA,SAAS8gB,MAAM,GAAInb,QA0BjFiI,oBCxEAs/B,SAAA,WACb,IAEIC,YACAC,QACAC,KAJA5hC,QACA6hC,aAKJ,SAASpgC,MAAMw+B,MAAO6B,MAAOC,aAAcC,WACzC,GAAIF,OAAS9hC,KAAKpE,OAEhB,OADkB,MAAd8lC,aAAoBzB,MAAM7yB,KAAKs0B,aAClB,MAAVC,QAAiBA,QAAO1B,OAASA,MAY1C,IATA,IAGIgC,SACAtuC,MAEAilB,OANAlmB,GAAK,EACLyB,EAAI8rC,MAAMrkC,OACV3H,IAAM+L,KAAK8hC,SAGXI,YAAc//B,UAEdxE,OAASokC,iBAEJrvC,EAAIyB,IACPykB,OAASspB,YAAY3uC,IAAI0uC,SAAWhuC,IAAIN,MAAQssC,MAAMvtC,IAAM,KAC9DkmB,OAAOxY,KAAKzM,OAEZuuC,YAAY71B,IAAI41B,UAAWtuC,QAQ/B,OAJAuuC,YAAYb,KAAK,SAASzoB,OAAQ3kB,KAChC+tC,UAAUrkC,OAAQ1J,IAAKwN,MAAMmX,OAAQkpB,MAAOC,aAAcC,cAGrDrkC,OAWT,OAAOikC,MACLttC,OAAQ,SAAAA,OAAS2rC,OAAS,OAAOx+B,MAAMw+B,MAAO,EAAGkC,aAAcC,YAC/DjgC,IAAK,SAAAA,IAAS89B,OAAS,OAAOx+B,MAAMw+B,MAAO,EAAGoC,UAAWC,SACzDnzB,QAAS,SAAAA,QAAS8wB,OAAS,OAX7B,SAAS9wB,SAAQhN,IAAK2/B,OACpB,KAAMA,MAAQ9hC,KAAKpE,OAAQ,OAAOuG,IAClC,IAAI89B,MAAOsC,QAAUV,UAASC,MAAQ,GAGtC,OAFc,MAAVH,SAAkBG,OAAS9hC,KAAKpE,OAAQqkC,MAAQ99B,IAAIgN,WACnD8wB,SAAY99B,IAAIk/B,KAAK,SAASv9B,EAAG0+B,GAAKvC,MAAM7/B,MAAMnM,IAAKuuC,EAAG5pB,OAAQzJ,SAAQrL,EAAGg+B,YAChE,MAAXS,QAAkBtC,MAAM7yB,KAAK,SAAStY,EAAGwI,GAAK,OAAOilC,QAAQztC,EAAEb,IAAKqJ,EAAErJ,OAAWgsC,MAMtD9wB,CAAQ1N,MAAMw+B,MAAO,EAAGoC,UAAWC,QAAS,IAC9EruC,IAAK,SAAAA,IAASjB,GAAmB,OAAdgN,KAAKI,KAAKpN,GAAW4uC,MACxCC,SAAU,SAAAA,SAAS9gB,OAA4C,OAAnC8gB,UAAS7hC,KAAKpE,OAAS,GAAKmlB,MAAc6gB,MACtEF,WAAY,SAAAA,WAAS3gB,OAA6B,OAApB2gB,YAAa3gB,MAAc6gB,MACzDD,OAAQ,SAAAA,OAAS5sB,GAAiB,OAAZ4sB,QAAS5sB,EAAU6sB,QAI7C,SAASO,eACP,SAGF,SAASC,UAAU9tC,OAAQL,IAAKN,OAC9BW,OAAOL,KAAON,MAGhB,SAAS0uC,YACP,OAAOlgC,UAGT,SAASmgC,OAAOngC,IAAKlO,IAAKN,OACxBwO,IAAIkK,IAAIpY,IAAKN,OCrEf,SAASod,WAET,IAAI0xB,MAAQtgC,QAAI3N,UAkBhB,SAAS6X,QAAI/X,OAAQygB,GACnB,IAAI1I,IAAM,IAAI0E,QAGd,GAAIzc,kBAAkByc,QAAKzc,OAAO+sC,KAAK,SAAS1tC,OAAS0Y,IAAI4E,IAAItd,cAG5D,GAAIW,OAAQ,CACf,IAAI5B,GAAK,EAAGyB,EAAIG,OAAOsH,OACvB,GAAS,MAALmZ,EAAW,OAASriB,EAAIyB,GAAGkY,IAAI4E,IAAI3c,OAAO5B,SACzC,OAASA,EAAIyB,GAAGkY,IAAI4E,IAAI8D,EAAEzgB,OAAO5B,GAAIA,EAAG4B,SAG/C,OAAO+X,IA7BT0E,QAAIvc,UAAY6X,QAAI7X,WAClBsrB,YAAa/O,QACb3E,IAAKq2B,MAAMr2B,IACX6E,IAAK,SAAAA,IAAStd,OAGZ,OADAuG,KFXgB,KEUhBvG,OAAS,KACcA,MAChBuG,MAETonC,OAAQmB,MAAMnB,OACdC,MAAOkB,MAAMlB,MACb3oB,OAAQ6pB,MAAMziC,KACdw0B,KAAMiO,MAAMjO,KACZgN,MAAOiB,MAAMjB,MACbH,KAAMoB,MAAMpB,MAmBCh1B,ICtCX4zB,gBAAQl9B,MAAMvO,UAEP2N,cAAM89B,gBAAM99B,IACZkT,YAAQ4qB,gBAAM5qB,MCAdqtB,UAAYzvC,KAAM,YAEd,SAAS0vC,QAAQlnC,OAC9B,IAAIU,MAAQgG,UACR6O,UACA4xB,QAAUF,SAId,SAASG,MAAM7vC,GACb,IAAIiB,IAAMjB,EAAI,GAAIN,EAAIyJ,MAAM5I,IAAIU,KAChC,IAAKvB,EAAG,CACN,GAAIkwC,UAAYF,SAAU,OAAOE,QACjCzmC,MAAMkQ,IAAIpY,IAAKvB,EAAIse,OAAO5Q,KAAKpN,IAEjC,OAAOyI,OAAO/I,EAAI,GAAK+I,MAAMG,QA0B/B,OAlCAH,MAAiB,MAATA,SAAqB4Z,YAAMxiB,KAAK4I,OAWxConC,MAAM7xB,OAAS,SAASoK,GACtB,IAAK9b,UAAU1D,OAAQ,OAAOoV,OAAOqE,QACrCrE,UAAa7U,MAAQgG,UAErB,IADA,IAA0BnP,EAAGiB,IAAzBvB,GAAK,EAAGyB,EAAIinB,EAAExf,SACTlJ,EAAIyB,GAAQgI,MAAMiQ,IAAInY,KAAOjB,EAAIooB,EAAE1oB,IAAM,KAAKyJ,MAAMkQ,IAAIpY,IAAK+c,OAAO5Q,KAAKpN,IAClF,OAAO6vC,OAGTA,MAAMpnC,MAAQ,SAAS2f,GACrB,OAAO9b,UAAU1D,QAAUH,MAAQ4Z,YAAMxiB,KAAKuoB,GAAIynB,OAASpnC,MAAM4Z,SAGnEwtB,MAAMD,QAAU,SAASxnB,GACvB,OAAO9b,UAAU1D,QAAUgnC,QAAUxnB,EAAGynB,OAASD,SAGnDC,MAAMC,KAAO,WACX,OAAOH,UACF3xB,OAAOA,QACPvV,MAAMA,OACNmnC,QAAQA,UAGRC,MCzCM,SAASE,OACtB,IAII3C,KACA4C,UALAH,MAAQF,UAAUC,aAAQn7B,GAC1BuJ,OAAS6xB,MAAM7xB,OACfiyB,aAAeJ,MAAMpnC,MACrBA,OAAS,EAAG,GAGZkJ,OAAQ,EACRu+B,aAAe,EACfC,aAAe,EACfC,MAAQ,GAGZ,SAASC,UACP,IAAIlvC,EAAI6c,SAASpV,OACb4iB,QAAU/iB,MAAM,GAAKA,MAAM,GAC3BrD,MAAQqD,MAAM+iB,QAAU,GACxB2hB,KAAO1kC,MAAM,EAAI+iB,SACrB4hB,MAAQD,KAAO/nC,OAAS2F,KAAKwQ,IAAI,EAAGpa,EAAI+uC,aAA8B,EAAfC,cACnDx+B,QAAOy7B,KAAOriC,KAAKwN,MAAM60B,OAC7BhoC,QAAU+nC,KAAO/nC,MAAQgoC,MAAQjsC,EAAI+uC,eAAiBE,MACtDJ,UAAY5C,MAAQ,EAAI8C,cACpBv+B,QAAOvM,MAAQ2F,KAAK4G,MAAMvM,OAAQ4qC,UAAYjlC,KAAK4G,MAAMq+B,YAC7D,IAAIpqB,OAAS0qB,UAASnvC,GAAGgO,IAAI,SAASzP,GAAK,OAAO0F,MAAQgoC,KAAO1tC,IACjE,OAAOuwC,aAAazkB,QAAU5F,OAAO4F,UAAY5F,QAkGnD,cA9GOiqB,MAAMD,QAebC,MAAM7xB,OAAS,SAASoK,GACtB,OAAO9b,UAAU1D,QAAUoV,OAAOoK,GAAIioB,WAAaryB,UAGrD6xB,MAAMpnC,MAAQ,SAAS2f,GACrB,OAAO9b,UAAU1D,QAAUH,QAAU2f,EAAE,IAAKA,EAAE,IAAKioB,WAAa5nC,MAAM4Z,SAGxEwtB,MAAMU,WAAa,SAASnoB,GAC1B,OAAO3f,QAAU2f,EAAE,IAAKA,EAAE,IAAKzW,OAAQ,EAAM0+B,WAG/CR,MAAMG,UAAY,WAChB,OAAOA,WAGTH,MAAMzC,KAAO,WACX,OAAOA,MAGTyC,MAAMl+B,MAAQ,SAASyW,GACrB,OAAO9b,UAAU1D,QAAU+I,QAAUyW,EAAGioB,WAAa1+B,OAGvDk+B,MAAMnG,QAAU,SAASthB,GACvB,OAAO9b,UAAU1D,QAAUsnC,aAAeC,aAAeplC,KAAKwQ,IAAI,EAAGxQ,KAAKsQ,IAAI,EAAG+M,IAAKioB,WAAaH,cAGrGL,MAAMK,aAAe,SAAS9nB,GAC5B,OAAO9b,UAAU1D,QAAUsnC,aAAenlC,KAAKwQ,IAAI,EAAGxQ,KAAKsQ,IAAI,EAAG+M,IAAKioB,WAAaH,cAGtFL,MAAMM,aAAe,SAAS/nB,GAC5B,OAAO9b,UAAU1D,QAAUunC,aAAeplC,KAAKwQ,IAAI,EAAGxQ,KAAKsQ,IAAI,EAAG+M,IAAKioB,WAAaF,cAGtFN,MAAMO,MAAQ,SAAShoB,GACrB,OAAO9b,UAAU1D,QAAUwnC,MAAQrlC,KAAKwQ,IAAI,EAAGxQ,KAAKsQ,IAAI,EAAG+M,IAAKioB,WAAaD,OAG/EP,MAAMC,KAAO,WACX,OAAOC,OACF/xB,OAAOA,UACPvV,MAAMA,OACNkJ,MAAMA,OACNu+B,aAAaA,cACbC,aAAaA,cACbC,MAAMA,QAGbP,MAAMW,aAAe,SAASC,GAAIC,IAChC,IAI2B5uC,EAAGwI,EAAG1J,EAC7B+vC,QALAv4B,IAAMq4B,GACNp4B,GAAK/L,UAAU1D,OAAS,GAAK8nC,GAAKt4B,GAClCoT,QAAU/iB,MAAM,GAAKA,MAAM,GAC3Bmd,OAAS4F,QAAUykB,eAAezkB,UAAYykB,eAC9C9uC,EAAIykB,OAAOhd,OAAS,EAKxB,GAHAgd,OAAOxY,KAAKwY,OAAOzkB,GAAK+F,KAAKkmC,QAEzB/0B,GAAKD,KAAIxX,EAAIwX,GAAIA,GAAKC,GAAIA,GAAKzX,KAC/ByX,GAAKuN,OAAO,IAAMxN,GAAK3P,MAAM,EAAE+iB,UAWnC,OARA1pB,EAAIiJ,KAAKwQ,IAAI,EAAGq1B,kBAAkBhrB,OAAQxN,KAC1Cu4B,QAAUC,kBAAkBhrB,OAAQvN,IACpC/N,EAAI8N,KAAKC,GAAKvW,EAAIiJ,KAAKwQ,IAAIzZ,EAAG6uC,QAAU,GAKpCnlB,UAAS5qB,EAAIkB,EAAGA,EAAIX,EAAImJ,EAAGA,EAAInJ,EAAIP,GAC/BkB,EAAIwI,OAAKmK,EAAYuJ,SAASqE,MAAMvgB,EAAGwI,EAAE,IAGnDulC,MAAMgB,OAAS,SAAUJ,GAAIC,IAC3B,IAKI5uC,EACAlB,EANAwX,IAAMq4B,GACNp4B,GAAK/L,UAAU1D,OAAS,GAAK8nC,GAAKt4B,GAClCoT,QAAU/iB,MAAM,GAAKA,MAAM,GAC3Bmd,OAAS4F,QAAUykB,eAAezkB,UAAYykB,eAC9C9uC,EAAIykB,OAAOhd,OAAS,EAMxB,GADIyP,GAAKD,KAAIxX,EAAIwX,GAAIA,GAAKC,GAAIA,GAAKzX,KAC/ByX,GAAKuN,OAAO,IAAMxN,GAAK3P,MAAM,EAAE+iB,UAQnC,OALA1pB,EAAIiJ,KAAKwQ,IAAI,EAAGq1B,kBAAkBhrB,OAAQxN,GAAI,SAKvC4F,SAASwN,QAAUrqB,EAAIW,EAAIA,IAE7BuuC,UAqBT,SAASO,kBAAmB34B,IAAKtX,MAAOmwC,MAStC,IARA,IAGIC,QACAz4B,IACA04B,GALAC,IAAM,EAENC,KADSj5B,IAAIrP,OACG,EAMbqoC,IAAMC,MACT54B,IAAMvN,KAAKwN,OAAO04B,IAAMC,MAAQ,GAChCF,GAAKjmC,KAAKooB,IAAIlb,IAAIK,KAAO3X,OACpBoK,KAAKooB,IAAIlb,IAAIK,IAAM,GAAK3X,QAEnBqwC,GACNC,IAAM34B,IAAM,EAGZ44B,KAAO54B,IAIf,OAAKw4B,MAILC,QAAU94B,IAAIi5B,SACEvwC,MACLuwC,KACAH,QAAUpwC,MACJ,IAATuwC,KAAqBA,KACT,SAATJ,KAAiBI,KAAO,EAAIA,KAE/BA,OAASj5B,IAAIrP,OAAS,EAAYsoC,KACtB,SAATJ,KAAiBI,KAAOA,KAAO,EAX/BA,KCzKE,IAAA9xC,OAAA,SAAS0tB,YAAa7tB,QAASuC,WAC5CsrB,YAAYtrB,UAAYvC,QAAQuC,UAAYA,UAC5CA,UAAUsrB,YAAcA,aAGnB,SAASqkB,OAAO3jB,OAAQ4jB,YAC7B,IAAI5vC,UAAYpB,OAAOY,OAAOwsB,OAAOhsB,WACrC,IAAK,IAAIP,OAAOmwC,WAAY5vC,UAAUP,KAAOmwC,WAAWnwC,KACxD,OAAOO,UCNF,SAAS6vC,SAET,IAGHC,IAAM,sBACNC,IAAM,gDACNC,IAAM,iDACNC,OAAS,mBACTC,OAAS,mBACTC,aAAe,IAAItqC,OAAO,WAAaiqC,IAAKA,IAAKA,KAAO,QACxDM,aAAe,IAAIvqC,OAAO,WAAamqC,IAAKA,IAAKA,KAAO,QACxDK,cAAgB,IAAIxqC,OAAO,YAAciqC,IAAKA,IAAKA,IAAKC,KAAO,QAC/DO,cAAgB,IAAIzqC,OAAO,YAAcmqC,IAAKA,IAAKA,IAAKD,KAAO,QAC/DQ,aAAe,IAAI1qC,OAAO,WAAakqC,IAAKC,IAAKA,KAAO,QACxDQ,cAAgB,IAAI3qC,OAAO,YAAckqC,IAAKC,IAAKA,IAAKD,KAAO,QAE/DU,OACFC,UAAW,SACXC,aAAc,SACdC,KAAM,MACNC,WAAY,QACZC,MAAO,SACPC,MAAO,SACPC,OAAQ,SACRC,MAAO,EACPC,eAAgB,SAChBC,KAAM,IACNC,WAAY,QACZC,MAAO,SACPC,UAAW,SACXC,UAAW,QACXC,WAAY,QACZC,UAAW,SACXC,MAAO,SACPC,eAAgB,QAChBC,SAAU,SACVC,QAAS,SACTC,KAAM,MACNC,SAAU,IACVC,SAAU,MACVC,cAAe,SACfC,SAAU,SACVC,UAAW,MACXC,SAAU,SACVC,UAAW,SACXC,YAAa,QACbC,eAAgB,QAChBC,WAAY,SACZC,WAAY,SACZC,QAAS,QACTC,WAAY,SACZC,aAAc,QACdC,cAAe,QACfC,cAAe,QACfC,cAAe,QACfC,cAAe,MACfC,WAAY,QACZC,SAAU,SACVC,YAAa,MACbC,QAAS,QACTC,QAAS,QACTC,WAAY,QACZC,UAAW,SACXC,YAAa,SACbC,YAAa,QACbC,QAAS,SACTC,UAAW,SACXC,WAAY,SACZC,KAAM,SACNC,UAAW,SACXC,KAAM,QACNC,MAAO,MACPC,YAAa,SACbC,KAAM,QACNC,SAAU,SACVC,QAAS,SACTC,UAAW,SACXC,OAAQ,QACRC,MAAO,SACPC,MAAO,SACPC,SAAU,SACVC,cAAe,SACfC,UAAW,QACXC,aAAc,SACdC,UAAW,SACXC,WAAY,SACZC,UAAW,SACXC,qBAAsB,SACtBC,UAAW,SACXC,WAAY,QACZC,UAAW,SACXC,UAAW,SACXC,YAAa,SACbC,cAAe,QACfC,aAAc,QACdC,eAAgB,QAChBC,eAAgB,QAChBC,eAAgB,SAChBC,YAAa,SACbC,KAAM,MACNC,UAAW,QACXC,MAAO,SACPC,QAAS,SACTC,OAAQ,QACRC,iBAAkB,QAClBC,WAAY,IACZC,aAAc,SACdC,aAAc,QACdC,eAAgB,QAChBC,gBAAiB,QACjBC,kBAAmB,MACnBC,gBAAiB,QACjBC,gBAAiB,SACjBC,aAAc,QACdC,UAAW,SACXC,UAAW,SACXC,SAAU,SACVC,YAAa,SACbC,KAAM,IACNC,QAAS,SACTC,MAAO,QACPC,UAAW,QACXC,OAAQ,SACRC,UAAW,SACXC,OAAQ,SACRC,cAAe,SACfC,UAAW,SACXC,cAAe,SACfC,cAAe,SACfC,WAAY,SACZC,UAAW,SACXC,KAAM,SACNC,KAAM,SACNC,KAAM,SACNC,WAAY,SACZC,OAAQ,QACRC,cAAe,QACfC,IAAK,SACLC,UAAW,SACXC,UAAW,QACXC,YAAa,QACbC,OAAQ,SACRC,WAAY,SACZC,SAAU,QACVC,SAAU,SACVC,OAAQ,SACRC,OAAQ,SACRC,QAAS,QACTC,UAAW,QACXC,UAAW,QACXC,UAAW,QACXC,KAAM,SACNC,YAAa,MACbC,UAAW,QACXC,IAAK,SACLC,KAAM,MACNC,QAAS,SACTC,OAAQ,SACRC,UAAW,QACXC,OAAQ,SACRC,MAAO,SACPC,MAAO,SACPC,WAAY,SACZC,OAAQ,SACRC,YAAa,UAeA,SAASC,YAAMr0C,QAC5B,IAAInH,EAEJ,OADAmH,QAAUA,OAAS,IAAI0Y,OAAOhX,eACtB7I,EAAI2xC,OAAO8J,KAAKt0C,SAAoC,IAAIu0C,KAA5B17C,EAAIyI,SAASzI,EAAE,GAAI,MAAmB,EAAI,GAAQA,GAAK,EAAI,IAASA,GAAK,EAAI,GAAY,IAAJA,GAAiB,GAAJA,IAAY,EAAU,GAAJA,EAAU,IAC3JA,EAAI4xC,OAAO6J,KAAKt0C,SAAWw0C,KAAKlzC,SAASzI,EAAE,GAAI,MAC/CA,EAAI6xC,aAAa4J,KAAKt0C,SAAW,IAAIu0C,IAAI17C,EAAE,GAAIA,EAAE,GAAIA,EAAE,GAAI,IAC3DA,EAAI8xC,aAAa2J,KAAKt0C,SAAW,IAAIu0C,IAAW,IAAP17C,EAAE,GAAW,IAAY,IAAPA,EAAE,GAAW,IAAY,IAAPA,EAAE,GAAW,IAAK,IAC/FA,EAAI+xC,cAAc0J,KAAKt0C,SAAWy0C,KAAK57C,EAAE,GAAIA,EAAE,GAAIA,EAAE,GAAIA,EAAE,KAC3DA,EAAIgyC,cAAcyJ,KAAKt0C,SAAWy0C,KAAY,IAAP57C,EAAE,GAAW,IAAY,IAAPA,EAAE,GAAW,IAAY,IAAPA,EAAE,GAAW,IAAKA,EAAE,KAC/FA,EAAIiyC,aAAawJ,KAAKt0C,SAAW00C,KAAK77C,EAAE,GAAIA,EAAE,GAAK,IAAKA,EAAE,GAAK,IAAK,IACpEA,EAAIkyC,cAAcuJ,KAAKt0C,SAAW00C,KAAK77C,EAAE,GAAIA,EAAE,GAAK,IAAKA,EAAE,GAAK,IAAKA,EAAE,IACxEmyC,MAAMxwC,eAAewF,QAAUw0C,KAAKxJ,MAAMhrC,SAC/B,gBAAXA,OAA2B,IAAIu0C,IAAIhP,IAAKA,IAAKA,IAAK,GAClD,KAGR,SAASiP,KAAKt6C,GACZ,OAAO,IAAIq6C,IAAIr6C,GAAK,GAAK,IAAMA,GAAK,EAAI,IAAU,IAAJA,EAAU,GAG1D,SAASu6C,KAAKl7C,EAAGo7C,EAAGtxC,EAAGxI,GAErB,OADIA,GAAK,IAAGtB,EAAIo7C,EAAItxC,EAAIkiC,KACjB,IAAIgP,IAAIh7C,EAAGo7C,EAAGtxC,EAAGxI,GAGnB,SAAS+5C,WAAW17C,GAEzB,OADMA,aAAakxC,QAAQlxC,EAAIm7C,YAAMn7C,IAChCA,EAEE,IAAIq7C,KADXr7C,EAAIA,EAAE27C,OACWt7C,EAAGL,EAAEy7C,EAAGz7C,EAAEmK,EAAGnK,EAAE47C,SAFjB,IAAIP,IAKd,SAASM,UAAIt7C,EAAGo7C,EAAGtxC,EAAGyxC,SAC3B,OAA4B,IAArBzvC,UAAU1D,OAAeizC,WAAWr7C,GAAK,IAAIg7C,IAAIh7C,EAAGo7C,EAAGtxC,EAAc,MAAXyxC,QAAkB,EAAIA,SAGlF,SAASP,IAAIh7C,EAAGo7C,EAAGtxC,EAAGyxC,SAC3B70C,KAAK1G,GAAKA,EACV0G,KAAK00C,GAAKA,EACV10C,KAAKoD,GAAKA,EACVpD,KAAK60C,SAAWA,QAkClB,SAASC,KAAIr7C,OAEX,QADAA,MAAQoK,KAAKwQ,IAAI,EAAGxQ,KAAKsQ,IAAI,IAAKtQ,KAAK4G,MAAMhR,QAAU,KACvC,GAAK,IAAM,IAAMA,MAAM6I,SAAS,IAGlD,SAASmyC,KAAK/rC,EAAGjO,EAAGhC,EAAGmC,GAIrB,OAHIA,GAAK,EAAG8N,EAAIjO,EAAIhC,EAAI6sC,IACf7sC,GAAK,GAAKA,GAAK,EAAGiQ,EAAIjO,EAAI6qC,IAC1B7qC,GAAK,IAAGiO,EAAI48B,KACd,IAAIyP,IAAIrsC,EAAGjO,EAAGhC,EAAGmC,GA6BnB,SAASo6C,IAAItsC,EAAGjO,EAAGhC,EAAGo8C,SAC3B,OAA4B,IAArBzvC,UAAU1D,OA3BZ,SAASuzC,WAAWh8C,GACzB,GAAIA,aAAa87C,IAAK,OAAO,IAAIA,IAAI97C,EAAEyP,EAAGzP,EAAEwB,EAAGxB,EAAER,EAAGQ,EAAE47C,SAEtD,GADM57C,aAAakxC,QAAQlxC,EAAIm7C,YAAMn7C,KAChCA,EAAG,OAAO,IAAI87C,IACnB,GAAI97C,aAAa87C,IAAK,OAAO97C,EAE7B,IAAIK,GADJL,EAAIA,EAAE27C,OACIt7C,EAAI,IACVo7C,EAAIz7C,EAAEy7C,EAAI,IACVtxC,EAAInK,EAAEmK,EAAI,IACV+Q,IAAMtQ,KAAKsQ,IAAI7a,EAAGo7C,EAAGtxC,GACrBiR,IAAMxQ,KAAKwQ,IAAI/a,EAAGo7C,EAAGtxC,GACrBsF,EAAI48B,IACJ7qC,EAAI4Z,IAAMF,IACV1b,GAAK4b,IAAMF,KAAO,EAUtB,OATI1Z,GACaiO,EAAXpP,IAAM+a,KAAUqgC,EAAItxC,GAAK3I,EAAc,GAATi6C,EAAItxC,GAC7BsxC,IAAMrgC,KAAUjR,EAAI9J,GAAKmB,EAAI,GAC5BnB,EAAIo7C,GAAKj6C,EAAI,EACvBA,GAAKhC,EAAI,GAAM4b,IAAMF,IAAM,EAAIE,IAAMF,IACrCzL,GAAK,IAELjO,EAAIhC,EAAI,GAAKA,EAAI,EAAI,EAAIiQ,EAEpB,IAAIqsC,IAAIrsC,EAAGjO,EAAGhC,EAAGQ,EAAE47C,SAIMI,CAAWvsC,GAAK,IAAIqsC,IAAIrsC,EAAGjO,EAAGhC,EAAc,MAAXo8C,QAAkB,EAAIA,SAGzF,SAASE,IAAIrsC,EAAGjO,EAAGhC,EAAGo8C,SACpB70C,KAAK0I,GAAKA,EACV1I,KAAKvF,GAAKA,EACVuF,KAAKvH,GAAKA,EACVuH,KAAK60C,SAAWA,QAiClB,SAASK,QAAQxsC,EAAGysC,GAAIC,IACtB,OAGY,KAHJ1sC,EAAI,GAAKysC,IAAMC,GAAKD,IAAMzsC,EAAI,GAChCA,EAAI,IAAM0sC,GACV1sC,EAAI,IAAMysC,IAAMC,GAAKD,KAAO,IAAMzsC,GAAK,GACvCysC,IAzKRj9C,OAAOiyC,MAAOiK,aACZiB,YAAa,SAAAA,cACX,OAAOr1C,KAAK40C,MAAMS,eAEpBP,IAAK,SAAAA,MACH,OAAO90C,KAAK40C,MAAME,OAEpBxyC,SAAU,SAAAA,WACR,OAAOtC,KAAK40C,MAAQ,MA+CxB18C,OAAOo8C,IAAKM,UAAK3K,OAAOE,OACtBmL,SAAU,SAAAA,SAAShN,GAEjB,OADAA,EAAS,MAALA,EA9Nc,EADF,GA+NWzkC,KAAK+Q,IA9Nd,EADF,GA+N8B0zB,GACvC,IAAIgM,IAAIt0C,KAAK1G,EAAIgvC,EAAGtoC,KAAK00C,EAAIpM,EAAGtoC,KAAKoD,EAAIklC,EAAGtoC,KAAK60C,UAE1DU,OAAQ,SAAAA,OAASjN,GAEf,OADAA,EAAS,MAALA,EAnOY,GAmOSzkC,KAAK+Q,IAnOd,GAmO0B0zB,GACnC,IAAIgM,IAAIt0C,KAAK1G,EAAIgvC,EAAGtoC,KAAK00C,EAAIpM,EAAGtoC,KAAKoD,EAAIklC,EAAGtoC,KAAK60C,UAE1DD,IAAK,SAAAA,MACH,OAAO50C,MAETq1C,YAAa,SAAAA,cACX,OAAQ,GAAKr1C,KAAK1G,GAAK0G,KAAK1G,GAAK,KACzB,GAAK0G,KAAK00C,GAAK10C,KAAK00C,GAAK,KACzB,GAAK10C,KAAKoD,GAAKpD,KAAKoD,GAAK,KACzB,GAAKpD,KAAK60C,SAAW70C,KAAK60C,SAAW,GAE/CC,IAAK,SAAAA,MACH,MAAO,IAAMA,KAAI90C,KAAK1G,GAAKw7C,KAAI90C,KAAK00C,GAAKI,KAAI90C,KAAKoD,IAEpDd,SAAU,SAAAA,WACR,IAAI1H,EAAIoF,KAAK60C,QACb,OAAc,KADQj6C,EAAIqZ,MAAMrZ,GAAK,EAAIiJ,KAAKwQ,IAAI,EAAGxQ,KAAKsQ,IAAI,EAAGvZ,KAC/C,OAAS,SACrBiJ,KAAKwQ,IAAI,EAAGxQ,KAAKsQ,IAAI,IAAKtQ,KAAK4G,MAAMzK,KAAK1G,IAAM,IAAM,KACtDuK,KAAKwQ,IAAI,EAAGxQ,KAAKsQ,IAAI,IAAKtQ,KAAK4G,MAAMzK,KAAK00C,IAAM,IAAM,KACtD7wC,KAAKwQ,IAAI,EAAGxQ,KAAKsQ,IAAI,IAAKtQ,KAAK4G,MAAMzK,KAAKoD,IAAM,KACzC,IAANxI,EAAU,IAAM,KAAOA,EAAI,SAqDtC1C,OAAO68C,IAAKC,IAAK/K,OAAOE,OACtBmL,SAAU,SAAAA,SAAShN,GAEjB,OADAA,EAAS,MAALA,EA9Sc,EADF,GA+SWzkC,KAAK+Q,IA9Sd,EADF,GA+S8B0zB,GACvC,IAAIyM,IAAI/0C,KAAK0I,EAAG1I,KAAKvF,EAAGuF,KAAKvH,EAAI6vC,EAAGtoC,KAAK60C,UAElDU,OAAQ,SAAAA,OAASjN,GAEf,OADAA,EAAS,MAALA,EAnTY,GAmTSzkC,KAAK+Q,IAnTd,GAmT0B0zB,GACnC,IAAIyM,IAAI/0C,KAAK0I,EAAG1I,KAAKvF,EAAGuF,KAAKvH,EAAI6vC,EAAGtoC,KAAK60C,UAElDD,IAAK,SAAAA,MACH,IAAIlsC,EAAI1I,KAAK0I,EAAI,IAAqB,KAAd1I,KAAK0I,EAAI,GAC7BjO,EAAIwZ,MAAMvL,IAAMuL,MAAMjU,KAAKvF,GAAK,EAAIuF,KAAKvF,EACzChC,EAAIuH,KAAKvH,EACT28C,GAAK38C,GAAKA,EAAI,GAAMA,EAAI,EAAIA,GAAKgC,EACjC06C,GAAK,EAAI18C,EAAI28C,GACjB,OAAO,IAAId,IACTY,QAAQxsC,GAAK,IAAMA,EAAI,IAAMA,EAAI,IAAKysC,GAAIC,IAC1CF,QAAQxsC,EAAGysC,GAAIC,IACfF,QAAQxsC,EAAI,IAAMA,EAAI,IAAMA,EAAI,IAAKysC,GAAIC,IACzCp1C,KAAK60C,UAGTQ,YAAa,SAAAA,cACX,OAAQ,GAAKr1C,KAAKvF,GAAKuF,KAAKvF,GAAK,GAAKwZ,MAAMjU,KAAKvF,KACzC,GAAKuF,KAAKvH,GAAKuH,KAAKvH,GAAK,GACzB,GAAKuH,KAAK60C,SAAW70C,KAAK60C,SAAW,MC1U1C,IAAIW,QAAU3xC,KAAK4xC,GAAK,IACpBC,QAAU,IAAM7xC,KAAK4xC,GCK5BE,GAAK,OACLC,GAAK,EACLC,GAAK,OACLC,OAAK,EAAI,GACTC,OAAK,EAAI,GACTC,GAAK,EAAID,OAAKA,OACdE,GAAKF,OAAKA,OAAKA,OAEnB,SAASG,WAAWj9C,GAClB,GAAIA,aAAak9C,IAAK,OAAO,IAAIA,IAAIl9C,EAAER,EAAGQ,EAAE2B,EAAG3B,EAAEmK,EAAGnK,EAAE47C,SACtD,GAAI57C,aAAam9C,IAAK,CACpB,GAAIniC,MAAMhb,EAAEyP,GAAI,OAAO,IAAIytC,IAAIl9C,EAAER,EAAG,EAAG,EAAGQ,EAAE47C,SAC5C,IAAInsC,EAAIzP,EAAEyP,EAAI8sC,QACd,OAAO,IAAIW,IAAIl9C,EAAER,EAAGoL,KAAKwyC,IAAI3tC,GAAKzP,EAAEJ,EAAGgL,KAAKyyC,IAAI5tC,GAAKzP,EAAEJ,EAAGI,EAAE47C,SAExD57C,aAAaq7C,MAAMr7C,EAAI07C,WAAW17C,IACxC,IAGuE8kC,EAAGwY,EAHtEj9C,EAAIk9C,SAASv9C,EAAEK,GACfo7C,EAAI8B,SAASv9C,EAAEy7C,GACftxC,EAAIozC,SAASv9C,EAAEmK,GACfI,EAAIizC,SAAS,SAAYn9C,EAAI,SAAYo7C,EAAI,SAAYtxC,GAAKwyC,IAKlE,OAJIt8C,IAAMo7C,GAAKA,IAAMtxC,EAAG26B,EAAIwY,EAAI/yC,GAC9Bu6B,EAAI0Y,SAAS,SAAYn9C,EAAI,SAAYo7C,EAAI,SAAYtxC,GAAKuyC,IAC9DY,EAAIE,SAAS,SAAYn9C,EAAI,SAAYo7C,EAAI,SAAYtxC,GAAKyyC,KAEzD,IAAIM,IAAI,IAAM3yC,EAAI,GAAI,KAAOu6B,EAAIv6B,GAAI,KAAOA,EAAI+yC,GAAIt9C,EAAE47C,SAOhD,SAAS6B,IAAIj+C,EAAGmC,EAAGwI,EAAGyxC,SACnC,OAA4B,IAArBzvC,UAAU1D,OAAew0C,WAAWz9C,GAAK,IAAI09C,IAAI19C,EAAGmC,EAAGwI,EAAc,MAAXyxC,QAAkB,EAAIA,SAGlF,SAASsB,IAAI19C,EAAGmC,EAAGwI,EAAGyxC,SAC3B70C,KAAKvH,GAAKA,EACVuH,KAAKpF,GAAKA,EACVoF,KAAKoD,GAAKA,EACVpD,KAAK60C,SAAWA,QA0BlB,SAAS4B,QAAQ/8C,GACf,OAAOA,EAAIu8C,GAAKpyC,KAAK+Q,IAAIlb,EAAG,EAAI,GAAKA,EAAIs8C,GAAKF,OAGhD,SAASa,QAAQj9C,GACf,OAAOA,EAAIq8C,OAAKr8C,EAAIA,EAAIA,EAAIs8C,IAAMt8C,EAAIo8C,QAGxC,SAASc,SAAS7Y,GAChB,OAAO,KAAOA,GAAK,SAAY,MAAQA,EAAI,MAAQl6B,KAAK+Q,IAAImpB,EAAG,EAAI,KAAO,MAG5E,SAASyY,SAASzY,GAChB,OAAQA,GAAK,MAAQ,OAAUA,EAAI,MAAQl6B,KAAK+Q,KAAKmpB,EAAI,MAAS,MAAO,KAG3E,SAAS8Y,WAAW59C,GAClB,GAAIA,aAAam9C,IAAK,OAAO,IAAIA,IAAIn9C,EAAEyP,EAAGzP,EAAEJ,EAAGI,EAAER,EAAGQ,EAAE47C,SAEtD,GADM57C,aAAak9C,MAAMl9C,EAAIi9C,WAAWj9C,IAC5B,IAARA,EAAE2B,GAAmB,IAAR3B,EAAEmK,EAAS,OAAO,IAAIgzC,IAAI9Q,IAAK,EAAGrsC,EAAER,EAAGQ,EAAE47C,SAC1D,IAAInsC,EAAI7E,KAAKizC,MAAM79C,EAAEmK,EAAGnK,EAAE2B,GAAK86C,QAC/B,OAAO,IAAIU,IAAI1tC,EAAI,EAAIA,EAAI,IAAMA,EAAG7E,KAAK6Q,KAAKzb,EAAE2B,EAAI3B,EAAE2B,EAAI3B,EAAEmK,EAAInK,EAAEmK,GAAInK,EAAER,EAAGQ,EAAE47C,SAOxE,SAASkC,IAAIruC,EAAG7P,EAAGJ,EAAGo8C,SAC3B,OAA4B,IAArBzvC,UAAU1D,OAAem1C,WAAWnuC,GAAK,IAAI0tC,IAAI1tC,EAAG7P,EAAGJ,EAAc,MAAXo8C,QAAkB,EAAIA,SAGlF,SAASuB,IAAI1tC,EAAG7P,EAAGJ,EAAGo8C,SAC3B70C,KAAK0I,GAAKA,EACV1I,KAAKnH,GAAKA,EACVmH,KAAKvH,GAAKA,EACVuH,KAAK60C,SAAWA,QA3DlB38C,OAAOi+C,IAAKO,IAAKzM,OAAOE,OACtBmL,SAAU,SAAAA,SAAShN,GACjB,OAAO,IAAI6N,IAAIn2C,KAAKvH,EA7ChB,IA6C8B,MAAL6vC,EAAY,EAAIA,GAAItoC,KAAKpF,EAAGoF,KAAKoD,EAAGpD,KAAK60C,UAExEU,OAAQ,SAAAA,OAASjN,GACf,OAAO,IAAI6N,IAAIn2C,KAAKvH,EAhDhB,IAgD8B,MAAL6vC,EAAY,EAAIA,GAAItoC,KAAKpF,EAAGoF,KAAKoD,EAAGpD,KAAK60C,UAExED,IAAK,SAAAA,MACH,IAAIpxC,GAAKxD,KAAKvH,EAAI,IAAM,IACpBslC,EAAI9pB,MAAMjU,KAAKpF,GAAK4I,EAAIA,EAAIxD,KAAKpF,EAAI,IACrC27C,EAAItiC,MAAMjU,KAAKoD,GAAKI,EAAIA,EAAIxD,KAAKoD,EAAI,IAIzC,OAAO,IAAIkxC,IACTsC,SAAU,WAJZ7Y,EAAI4X,GAAKgB,QAAQ5Y,IAIW,WAH5Bv6B,EAAIoyC,GAAKe,QAAQnzC,IAG2B,UAF5C+yC,EAAIV,GAAKc,QAAQJ,KAGfK,UAAU,SAAY7Y,EAAI,UAAYv6B,EAAI,QAAY+yC,GACtDK,SAAU,SAAY7Y,EAAI,SAAYv6B,EAAI,UAAY+yC,GACtDv2C,KAAK60C,aA4CX38C,OAAOk+C,IAAKW,IAAK9M,OAAOE,OACtBmL,SAAU,SAAAA,SAAShN,GACjB,OAAO,IAAI8N,IAAIp2C,KAAK0I,EAAG1I,KAAKnH,EAAGmH,KAAKvH,EA3GhC,IA2G8C,MAAL6vC,EAAY,EAAIA,GAAItoC,KAAK60C,UAExEU,OAAQ,SAAAA,OAASjN,GACf,OAAO,IAAI8N,IAAIp2C,KAAK0I,EAAG1I,KAAKnH,EAAGmH,KAAKvH,EA9GhC,IA8G8C,MAAL6vC,EAAY,EAAIA,GAAItoC,KAAK60C,UAExED,IAAK,SAAAA,MACH,OAAOsB,WAAWl2C,MAAM40C,UClH5B,IAAI1xC,GAAK,OACLK,EAAI,QACJyzC,GAAK,OACLC,aAAK,OACLC,EAAI,QACJC,GAAKD,EAAID,YACTG,GAAKF,EAAI3zC,EACT8zC,MAAQ9zC,EAAIyzC,EAAIC,YAAI/zC,EAgBT,SAASo0C,oBAAU5uC,EAAGjO,EAAGhC,EAAGo8C,SACzC,OAA4B,IAArBzvC,UAAU1D,OAfnB,SAAS61C,iBAAiBt+C,GACxB,GAAIA,aAAau+C,UAAW,OAAO,IAAIA,UAAUv+C,EAAEyP,EAAGzP,EAAEwB,EAAGxB,EAAER,EAAGQ,EAAE47C,SAC5D57C,aAAaq7C,MAAMr7C,EAAI07C,WAAW17C,IACxC,IAAIK,EAAIL,EAAEK,EAAI,IACVo7C,EAAIz7C,EAAEy7C,EAAI,IACVtxC,EAAInK,EAAEmK,EAAI,IACV3K,GAAK4+C,MAAQj0C,EAAI+zC,GAAK79C,EAAI89C,GAAK1C,IAAM2C,MAAQF,GAAKC,IAClDK,GAAKr0C,EAAI3K,EACT6vC,GAAK4O,GAAKxC,EAAIj8C,GAAKu+C,EAAIS,IAAMR,YAC7Bx8C,EAAIoJ,KAAK6Q,KAAK4zB,EAAIA,EAAImP,GAAKA,KAAOP,EAAIz+C,GAAK,EAAIA,IAC/CiQ,EAAIjO,EAAIoJ,KAAKizC,MAAMxO,EAAGmP,IAAM/B,QAAU,IAAMpQ,IAChD,OAAO,IAAIkS,UAAU9uC,EAAI,EAAIA,EAAI,IAAMA,EAAGjO,EAAGhC,EAAGQ,EAAE47C,SAIlB0C,CAAiB7uC,GAAK,IAAI8uC,UAAU9uC,EAAGjO,EAAGhC,EAAc,MAAXo8C,QAAkB,EAAIA,SAG9F,SAAS2C,UAAU9uC,EAAGjO,EAAGhC,EAAGo8C,SACjC70C,KAAK0I,GAAKA,EACV1I,KAAKvF,GAAKA,EACVuF,KAAKvH,GAAKA,EACVuH,KAAK60C,SAAWA,QCnCX,SAAS6C,MAAM3B,GAAI4B,GAAIC,GAAIC,GAAIC,IACpC,IAAI9B,GAAKD,GAAKA,GAAIE,GAAKD,GAAKD,GAC5B,QAAS,EAAI,EAAIA,GAAK,EAAIC,GAAKC,IAAM0B,IAC9B,EAAI,EAAI3B,GAAK,EAAIC,IAAM2B,IACvB,EAAI,EAAI7B,GAAK,EAAIC,GAAK,EAAIC,IAAM4B,GACjC5B,GAAK6B,IAAM,EDiCnB5/C,OAAOs/C,UAAWF,oBAAWrN,OAAOE,OAClCmL,SAAU,SAAAA,SAAShN,GAEjB,OADAA,EAAS,MAALA,EHnCc,EADF,GGoCWzkC,KAAK+Q,IHnCd,EADF,GGoC8B0zB,GACvC,IAAIkP,UAAUx3C,KAAK0I,EAAG1I,KAAKvF,EAAGuF,KAAKvH,EAAI6vC,EAAGtoC,KAAK60C,UAExDU,OAAQ,SAAAA,OAASjN,GAEf,OADAA,EAAS,MAALA,EHxCY,GGwCSzkC,KAAK+Q,IHxCd,GGwC0B0zB,GACnC,IAAIkP,UAAUx3C,KAAK0I,EAAG1I,KAAKvF,EAAGuF,KAAKvH,EAAI6vC,EAAGtoC,KAAK60C,UAExDD,IAAK,SAAAA,MACH,IAAIlsC,EAAIuL,MAAMjU,KAAK0I,GAAK,GAAK1I,KAAK0I,EAAI,KAAO8sC,QACzC/8C,GAAKuH,KAAKvH,EACVmC,EAAIqZ,MAAMjU,KAAKvF,GAAK,EAAIuF,KAAKvF,EAAIhC,GAAK,EAAIA,GAC1Cs/C,KAAOl0C,KAAKwyC,IAAI3tC,GAChBsvC,KAAOn0C,KAAKyyC,IAAI5tC,GACpB,OAAO,IAAI4rC,IACT,KAAO77C,EAAImC,GAAKsI,EAAI60C,KAAOx0C,EAAIy0C,OAC/B,KAAOv/C,EAAImC,GAAKo8C,EAAIe,KAAOd,YAAIe,OAC/B,KAAOv/C,EAAImC,GAAKs8C,EAAIa,OACpB/3C,KAAK60C,aCjDI,ICRAoD,aAAA,SAASla,GACtB,OAAO,WACL,OAAOA,ICAX,SAASma,OAAOt9C,EAAG9B,GACjB,OAAO,SAASY,GACd,OAAOkB,EAAIlB,EAAIZ,GAUZ,SAASq/C,UAAIv9C,EAAGwI,GACrB,IAAItK,EAAIsK,EAAIxI,EACZ,OAAO9B,EAAIo/C,OAAOt9C,EAAG9B,EAAI,KAAOA,GAAK,IAAMA,EAAI,IAAM+K,KAAK4G,MAAM3R,EAAI,KAAOA,GAAKs/C,aAASnkC,MAAMrZ,GAAKwI,EAAIxI,GAGnG,SAASy9C,MAAM70C,GACpB,OAAoB,IAAZA,GAAKA,GAAW80C,QAAU,SAAS19C,EAAGwI,GAC5C,OAAOA,EAAIxI,EAbf,SAAS29C,YAAY39C,EAAGwI,EAAGI,GACzB,OAAO5I,EAAIiJ,KAAK+Q,IAAIha,EAAG4I,GAAIJ,EAAIS,KAAK+Q,IAAIxR,EAAGI,GAAK5I,EAAG4I,EAAI,EAAIA,EAAG,SAAS9J,GACrE,OAAOmK,KAAK+Q,IAAIha,EAAIlB,EAAI0J,EAAGI,IAWZ+0C,CAAY39C,EAAGwI,EAAGI,GAAK40C,aAASnkC,MAAMrZ,GAAKwI,EAAIxI,IAInD,SAAS09C,QAAQ19C,EAAGwI,GACjC,IAAItK,EAAIsK,EAAIxI,EACZ,OAAO9B,EAAIo/C,OAAOt9C,EAAG9B,GAAKs/C,aAASnkC,MAAMrZ,GAAKwI,EAAIxI,GCtBrC,IAAA49C,QAAA,SAAUC,SAASj1C,GAChC,IAAI4wC,MAAQiE,MAAM70C,GAElB,SAASoxC,IAAI12C,MAAOwO,KAClB,IAAIpT,EAAI86C,OAAOl2C,MAAQw6C,UAASx6C,QAAQ5E,GAAIoT,IAAMgsC,UAAShsC,MAAMpT,GAC7Do7C,EAAIN,MAAMl2C,MAAMw2C,EAAGhoC,IAAIgoC,GACvBtxC,EAAIgxC,MAAMl2C,MAAMkF,EAAGsJ,IAAItJ,GACvByxC,QAAUyD,QAAQp6C,MAAM22C,QAASnoC,IAAImoC,SACzC,OAAO,SAASn7C,GAKd,OAJAwE,MAAM5E,EAAIA,EAAEI,GACZwE,MAAMw2C,EAAIA,EAAEh7C,GACZwE,MAAMkF,EAAIA,EAAE1J,GACZwE,MAAM22C,QAAUA,QAAQn7C,GACjBwE,MAAQ,IAMnB,OAFA02C,IAAIyD,MAAQI,SAEL7D,IAnBM,CAoBZ,GAEH,SAAS+D,UAAUC,QACjB,OAAO,SAASC,QACd,IAIIrgD,EAAG47C,MAJHn6C,EAAI4+C,OAAOn3C,OACXpI,EAAI,IAAIuP,MAAM5O,GACdy6C,EAAI,IAAI7rC,MAAM5O,GACdmJ,EAAI,IAAIyF,MAAM5O,GAElB,IAAKzB,EAAI,EAAGA,EAAIyB,IAAKzB,EACnB47C,MAAQsE,UAASG,OAAOrgD,IACxBc,EAAEd,GAAK47C,MAAM96C,GAAK,EAClBo7C,EAAEl8C,GAAK47C,MAAMM,GAAK,EAClBtxC,EAAE5K,GAAK47C,MAAMhxC,GAAK,EAMpB,OAJA9J,EAAIs/C,OAAOt/C,GACXo7C,EAAIkE,OAAOlE,GACXtxC,EAAIw1C,OAAOx1C,GACXgxC,MAAMS,QAAU,EACT,SAASn7C,GAId,OAHA06C,MAAM96C,EAAIA,EAAEI,GACZ06C,MAAMM,EAAIA,EAAEh7C,GACZ06C,MAAMhxC,EAAIA,EAAE1J,GACL06C,MAAQ,KAKd,IAAI0E,SAAWH,UH7CP,SAASj6B,QACtB,IAAIzkB,EAAIykB,OAAOhd,OAAS,EACxB,OAAO,SAAShI,GACd,IAAIlB,EAAIkB,GAAK,EAAKA,EAAI,EAAKA,GAAK,GAAKA,EAAI,EAAGO,EAAI,GAAK4J,KAAKwN,MAAM3X,EAAIO,GAChE29C,GAAKl5B,OAAOlmB,GACZq/C,GAAKn5B,OAAOlmB,EAAI,GAChBm/C,GAAKn/C,EAAI,EAAIkmB,OAAOlmB,EAAI,GAAK,EAAIo/C,GAAKC,GACtCC,GAAKt/C,EAAIyB,EAAI,EAAIykB,OAAOlmB,EAAI,GAAK,EAAIq/C,GAAKD,GAC9C,OAAOF,OAAOh+C,EAAIlB,EAAIyB,GAAKA,EAAG09C,GAAIC,GAAIC,GAAIC,OIhB/BiB,YDsDaJ,UEpDb,SAASj6B,QACtB,IAAIzkB,EAAIykB,OAAOhd,OACf,OAAO,SAAShI,GACd,IAAIlB,EAAIqL,KAAKwN,QAAQ3X,GAAK,GAAK,IAAMA,EAAIA,GAAKO,GAC1C09C,GAAKj5B,QAAQlmB,EAAIyB,EAAI,GAAKA,GAC1B29C,GAAKl5B,OAAOlmB,EAAIyB,GAChB49C,GAAKn5B,QAAQlmB,EAAI,GAAKyB,GACtB69C,GAAKp5B,QAAQlmB,EAAI,GAAKyB,GAC1B,OAAOy9C,OAAOh+C,EAAIlB,EAAIyB,GAAKA,EAAG09C,GAAIC,GAAIC,GAAIC,ODV/B,SAASl9C,EAAGwI,GACzB,OAAeA,GAARxI,GAAKA,EAAW,SAASlB,GAC9B,OAAOkB,EAAIwI,EAAI1J,wREAJ,ICAXs/C,IAAM,8CACNC,IAAM,IAAI94C,OAAO64C,IAAIv0B,OAAQ,KAclB,IAAAy0B,WAAA,SAASt+C,EAAGwI,GACzB,IACI+1C,GACAC,GACAC,GAHAC,GAAKN,IAAIO,UAAYN,IAAIM,UAAY,EAIrC/gD,GAAK,EACLiC,KACA++C,KAMJ,IAHA5+C,GAAQ,GAAIwI,GAAQ,IAGZ+1C,GAAKH,IAAI3E,KAAKz5C,MACdw+C,GAAKH,IAAI5E,KAAKjxC,MACfi2C,GAAKD,GAAGn3C,OAASq3C,KACpBD,GAAKj2C,EAAE+X,MAAMm+B,GAAID,IACb5+C,EAAEjC,GAAIiC,EAAEjC,IAAM6gD,GACb5+C,IAAIjC,GAAK6gD,KAEXF,GAAKA,GAAG,OAASC,GAAKA,GAAG,IACxB3+C,EAAEjC,GAAIiC,EAAEjC,IAAM4gD,GACb3+C,IAAIjC,GAAK4gD,IAEd3+C,IAAIjC,GAAK,KACTghD,EAAEtzC,MAAM1N,EAAGA,EAAGulC,EAAG+H,WAAOqT,GAAIC,OAE9BE,GAAKL,IAAIM,UAYX,OARID,GAAKl2C,EAAE1B,SACT23C,GAAKj2C,EAAE+X,MAAMm+B,IACT7+C,EAAEjC,GAAIiC,EAAEjC,IAAM6gD,GACb5+C,IAAIjC,GAAK6gD,IAKT5+C,EAAEiH,OAAS,EAAK83C,EAAE,GA7C3B,SAASC,IAAIr2C,GACX,OAAO,SAAS1J,GACd,OAAO0J,EAAE1J,GAAK,IA4CV+/C,CAAID,EAAE,GAAGzb,GApDjB,SAAS2b,YAAKt2C,GACZ,OAAO,WACL,OAAOA,GAmDHs2C,CAAKt2C,IACJA,EAAIo2C,EAAE93C,OAAQ,SAAShI,GACtB,IAAK,IAAWT,EAAPT,EAAI,EAAMA,EAAI4K,IAAK5K,EAAGiC,GAAGxB,EAAIugD,EAAEhhD,IAAIA,GAAKS,EAAE8kC,EAAErkC,GACrD,OAAOe,EAAEsI,KAAK,oSCpDT,ICPX42C,QACAC,QACAC,QACAC,QDIW/tC,UAAA,SAASnR,EAAGwI,GACzB,IAAkBvK,EAAda,EAAIqgD,aAAO32C,GACf,OAAY,MAALA,GAAmB,YAAN1J,EAAkB0+C,aAASh1C,IAClC,WAAN1J,EAAiBosC,WACZ,WAANpsC,GAAmBb,EAAIu7C,YAAMhxC,KAAOA,EAAIvK,EAAG+7C,SAAOoF,WAClD52C,aAAagxC,YAAQQ,QACrBxxC,aAAaxD,KEfN,SAAShF,EAAGwI,GACzB,IAAItK,EAAI,IAAI8G,KACZ,OAAewD,GAARxI,GAAKA,EAAW,SAASlB,GAC9B,OAAOZ,EAAEmhD,QAAQr/C,EAAIwI,EAAI1J,GAAIZ,IFazB+P,MAAMwB,QAAQjH,GGdP,SAASxI,EAAGwI,GACzB,IAII5K,EAJA0hD,GAAK92C,EAAIA,EAAE1B,OAAS,EACpBy4C,GAAKv/C,EAAIiJ,KAAKsQ,IAAI+lC,GAAIt/C,EAAE8G,QAAU,EAClCq8B,EAAI,IAAIl1B,MAAMsxC,IACdthD,EAAI,IAAIgQ,MAAMqxC,IAGlB,IAAK1hD,EAAI,EAAGA,EAAI2hD,KAAM3hD,EAAGulC,EAAEvlC,GAAKiB,UAAMmB,EAAEpC,GAAI4K,EAAE5K,IAC9C,KAAOA,EAAI0hD,KAAM1hD,EAAGK,EAAEL,GAAK4K,EAAE5K,GAE7B,OAAO,SAASkB,GACd,IAAKlB,EAAI,EAAGA,EAAI2hD,KAAM3hD,EAAGK,EAAEL,GAAKulC,EAAEvlC,GAAGkB,GACrC,OAAOb,IHGkB,mBAAduK,EAAE2b,SAAgD,mBAAf3b,EAAEd,UAA2B2R,MAAM7Q,GFftE,SAASxI,EAAGwI,GACzB,IAEIklC,EAFA9vC,KACAK,KAMJ,IAAKyvC,KAHK,OAAN1tC,GAA2B,WAAbD,QAAOC,KAAgBA,MAC/B,OAANwI,GAA2B,WAAbzI,QAAOyI,KAAgBA,MAE/BA,EACJklC,KAAK1tC,EACPpC,EAAE8vC,GAAK7uC,UAAMmB,EAAE0tC,GAAIllC,EAAEklC,IAErBzvC,EAAEyvC,GAAKllC,EAAEklC,GAIb,OAAO,SAAS5uC,GACd,IAAK4uC,KAAK9vC,EAAGK,EAAEyvC,GAAK9vC,EAAE8vC,GAAG5uC,GACzB,OAAOb,IEFHitC,YAAQlrC,EAAGwI,IIlBJg3C,UAAA,SAASx/C,EAAGwI,GACzB,OAAeA,GAARxI,GAAKA,EAAW,SAASlB,GAC9B,OAAOmK,KAAK4G,MAAM7P,EAAIwI,EAAI1J,KCF1B2gD,QAAU,IAAMx2C,KAAK4xC,GAEdhkB,oBACT6oB,WAAY,EACZC,WAAY,EACZC,OAAQ,EACRC,MAAO,EACPC,OAAQ,EACRC,OAAQ,GAGKC,UAAA,SAAShgD,EAAGwI,EAAGvK,EAAGC,EAAG4B,EAAGmgB,GACrC,IAAI6/B,OAAQC,OAAQF,MAKpB,OAJIC,OAAS72C,KAAK6Q,KAAK9Z,EAAIA,EAAIwI,EAAIA,MAAIxI,GAAK8/C,OAAQt3C,GAAKs3C,SACrDD,MAAQ7/C,EAAI/B,EAAIuK,EAAItK,KAAGD,GAAK+B,EAAI6/C,MAAO3hD,GAAKsK,EAAIq3C,QAChDE,OAAS92C,KAAK6Q,KAAK7b,EAAIA,EAAIC,EAAIA,MAAID,GAAK8hD,OAAQ7hD,GAAK6hD,OAAQF,OAASE,QACtE//C,EAAI9B,EAAIsK,EAAIvK,IAAG+B,GAAKA,EAAGwI,GAAKA,EAAGq3C,OAASA,MAAOC,QAAUA,SAE3DJ,WAAY5/C,EACZ6/C,WAAY1/B,EACZ2/B,OAAQ32C,KAAKizC,MAAM1zC,EAAGxI,GAAKy/C,QAC3BI,MAAO52C,KAAKg3C,KAAKJ,OAASJ,QAC1BK,OAAQA,OACRC,OAAQA,SCpBZ,SAASG,qBAAqBr0C,MAAOs0C,QAASC,QAASC,UAErD,SAASlzB,IAAIttB,GACX,OAAOA,EAAEiH,OAASjH,EAAEstB,MAAQ,IAAM,GAsCpC,OAAO,SAASntB,EAAGwI,GACjB,IAAI3I,KACA++C,KAOJ,OANA5+C,EAAI6L,MAAM7L,GAAIwI,EAAIqD,MAAMrD,GAtC1B,SAAS83C,UAAUC,GAAIC,GAAIC,GAAIC,GAAI7gD,EAAG++C,GACpC,GAAI2B,KAAOE,IAAMD,KAAOE,GAAI,CAC1B,IAAI9iD,EAAIiC,EAAEyL,KAAK,aAAc,KAAM60C,QAAS,KAAMC,SAClDxB,EAAEtzC,MAAM1N,EAAGA,EAAI,EAAGulC,EAAG+H,WAAOqV,GAAIE,MAAO7iD,EAAGA,EAAI,EAAGulC,EAAG+H,WAAOsV,GAAIE,WACtDD,IAAMC,KACf7gD,EAAEyL,KAAK,aAAem1C,GAAKN,QAAUO,GAAKN,SAkC5CE,CAAUtgD,EAAE0/C,WAAY1/C,EAAE2/C,WAAYn3C,EAAEk3C,WAAYl3C,EAAEm3C,WAAY9/C,EAAG++C,GA9BvE,SAASgB,OAAO5/C,EAAGwI,EAAG3I,EAAG++C,GACnB5+C,IAAMwI,GACJxI,EAAIwI,EAAI,IAAKA,GAAK,IAAcA,EAAIxI,EAAI,MAAKA,GAAK,KACtD4+C,EAAEtzC,MAAM1N,EAAGiC,EAAEyL,KAAK6hB,IAAIttB,GAAK,UAAW,KAAMwgD,UAAY,EAAGld,EAAG+H,WAAOlrC,EAAGwI,MAC/DA,GACT3I,EAAEyL,KAAK6hB,IAAIttB,GAAK,UAAY2I,EAAI63C,UA0BlCT,CAAO5/C,EAAE4/C,OAAQp3C,EAAEo3C,OAAQ//C,EAAG++C,GAtBhC,SAASiB,MAAM7/C,EAAGwI,EAAG3I,EAAG++C,GAClB5+C,IAAMwI,EACRo2C,EAAEtzC,MAAM1N,EAAGiC,EAAEyL,KAAK6hB,IAAIttB,GAAK,SAAU,KAAMwgD,UAAY,EAAGld,EAAG+H,WAAOlrC,EAAGwI,KAC9DA,GACT3I,EAAEyL,KAAK6hB,IAAIttB,GAAK,SAAW2I,EAAI63C,UAmBjCR,CAAM7/C,EAAE6/C,MAAOr3C,EAAEq3C,MAAOhgD,EAAG++C,GAf7B,SAAS7Q,MAAMwS,GAAIC,GAAIC,GAAIC,GAAI7gD,EAAG++C,GAChC,GAAI2B,KAAOE,IAAMD,KAAOE,GAAI,CAC1B,IAAI9iD,EAAIiC,EAAEyL,KAAK6hB,IAAIttB,GAAK,SAAU,KAAM,IAAK,KAAM,KACnD++C,EAAEtzC,MAAM1N,EAAGA,EAAI,EAAGulC,EAAG+H,WAAOqV,GAAIE,MAAO7iD,EAAGA,EAAI,EAAGulC,EAAG+H,WAAOsV,GAAIE,WAC/C,IAAPD,IAAmB,IAAPC,IACrB7gD,EAAEyL,KAAK6hB,IAAIttB,GAAK,SAAW4gD,GAAK,IAAMC,GAAK,KAW7C3S,CAAM/tC,EAAE8/C,OAAQ9/C,EAAE+/C,OAAQv3C,EAAEs3C,OAAQt3C,EAAEu3C,OAAQlgD,EAAG++C,GACjD5+C,EAAIwI,EAAI,KACD,SAAS1J,GAEd,IADA,IAA0BT,EAAtBT,GAAK,EAAGyB,EAAIu/C,EAAE93C,SACTlJ,EAAIyB,GAAGQ,GAAGxB,EAAIugD,EAAEhhD,IAAIA,GAAKS,EAAE8kC,EAAErkC,GACtC,OAAOe,EAAEsI,KAAK,MAKb,IAAIw4C,wBAA0BT,qBLtD9B,SAASU,SAAS/hD,OACvB,MAAc,SAAVA,MAAyBg4B,oBACxBkoB,UAASA,QAAUzhB,SAASmJ,cAAc,OAAQuY,QAAU1hB,SAASujB,gBAAiB5B,QAAU3hB,SAASwjB,aAC9G/B,QAAQhgB,MAAMgiB,UAAYliD,MAC1BA,MAAQogD,QAAQ+B,iBAAiBhC,QAAQlW,YAAYiW,SAAU,MAAMkC,iBAAiB,aACtFjC,QAAQzzB,YAAYwzB,SACpBlgD,MAAQA,MAAM0hB,MAAM,GAAI,GAAG5O,MAAM,KAC1BquC,WAAWnhD,MAAM,IAAKA,MAAM,IAAKA,MAAM,IAAKA,MAAM,IAAKA,MAAM,IAAKA,MAAM,MK+Cb,OAAQ,MAAO,QACxEqiD,wBAA0BhB,qBL7C9B,SAASiB,SAAStiD,OACvB,OAAa,MAATA,MAAsBg4B,oBACrBqoB,UAASA,QAAU5hB,SAASuM,gBAAgB,6BAA8B,MAC/EqV,QAAQnW,aAAa,YAAalqC,QAC5BA,MAAQqgD,QAAQ6B,UAAUK,QAAQC,gBACxCxiD,MAAQA,MAAMyiD,OACPtB,UAAUnhD,MAAMmB,EAAGnB,MAAM2J,EAAG3J,MAAMZ,EAAGY,MAAMX,EAAGW,MAAMiB,EAAGjB,MAAMohB,IAFL4W,qBKyCG,KAAM,IAAK,KC9DrE5tB,KAAKs4C,MCGf,SAASnH,QAAImD,KACX,OAAO,SAASj6C,MAAOwO,KACrB,IAAIhE,EAAIyvC,KAAKj6C,MAAQk+C,IAASl+C,QAAQwK,GAAIgE,IAAM0vC,IAAS1vC,MAAMhE,GAC3DjO,EAAI25C,QAAMl2C,MAAMzD,EAAGiS,IAAIjS,GACvBhC,EAAI27C,QAAMl2C,MAAMzF,EAAGiU,IAAIjU,GACvBo8C,QAAUT,QAAMl2C,MAAM22C,QAASnoC,IAAImoC,SACvC,OAAO,SAASn7C,GAKd,OAJAwE,MAAMwK,EAAIA,EAAEhP,GACZwE,MAAMzD,EAAIA,EAAEf,GACZwE,MAAMzF,EAAIA,EAAEiB,GACZwE,MAAM22C,QAAUA,QAAQn7C,GACjBwE,MAAQ,KAKN82C,QAAImD,WAAJnD,IACJqH,QAAUrH,QAAIZ,SCjBzB,SAAS2C,QAAIoB,KACX,OAAO,SAASj6C,MAAOwO,KACrB,IAAIhE,EAAIyvC,KAAKj6C,MAAQo+C,IAASp+C,QAAQwK,GAAIgE,IAAM4vC,IAAS5vC,MAAMhE,GAC3D7P,EAAIu7C,QAAMl2C,MAAMrF,EAAG6T,IAAI7T,GACvBJ,EAAI27C,QAAMl2C,MAAMzF,EAAGiU,IAAIjU,GACvBo8C,QAAUT,QAAMl2C,MAAM22C,QAASnoC,IAAImoC,SACvC,OAAO,SAASn7C,GAKd,OAJAwE,MAAMwK,EAAIA,EAAEhP,GACZwE,MAAMrF,EAAIA,EAAEa,GACZwE,MAAMzF,EAAIA,EAAEiB,GACZwE,MAAM22C,QAAUA,QAAQn7C,GACjBwE,MAAQ,KAKN64C,QAAIoB,WACEpB,QAAI3C,SCjBzB,SAASkD,wBAAUa,KACjB,OAAQ,SAASoE,eAAe/4C,GAG9B,SAAS8zC,UAAUp5C,MAAOwO,KACxB,IAAIhE,EAAIyvC,KAAKj6C,MAAQs+C,oBAAet+C,QAAQwK,GAAIgE,IAAM8vC,oBAAe9vC,MAAMhE,GACvEjO,EAAI25C,QAAMl2C,MAAMzD,EAAGiS,IAAIjS,GACvBhC,EAAI27C,QAAMl2C,MAAMzF,EAAGiU,IAAIjU,GACvBo8C,QAAUT,QAAMl2C,MAAM22C,QAASnoC,IAAImoC,SACvC,OAAO,SAASn7C,GAKd,OAJAwE,MAAMwK,EAAIA,EAAEhP,GACZwE,MAAMzD,EAAIA,EAAEf,GACZwE,MAAMzF,EAAIA,EAAEoL,KAAK+Q,IAAIlb,EAAG8J,IACxBtF,MAAM22C,QAAUA,QAAQn7C,GACjBwE,MAAQ,IAMnB,OAlBAsF,GAAKA,EAgBL8zC,UAAUe,MAAQkE,eAEXjF,UAnBD,CAoBL,GAGUA,wBAAUa,WAAVb,IACJmF,cAAgBnF,wBAAUlD,SC5BtB,SAASsI,oBAAUC,YAAaj+B,QAE7C,IADA,IAAIlmB,EAAI,EAAGyB,EAAIykB,OAAOhd,OAAS,EAAGkI,EAAI8U,OAAO,GAAIlR,EAAI,IAAI3E,MAAM5O,EAAI,EAAI,EAAIA,GACpEzB,EAAIyB,GAAGuT,EAAEhV,GAAKmkD,YAAY/yC,EAAGA,EAAI8U,SAASlmB,IACjD,OAAO,SAASkB,GACd,IAAIlB,EAAIqL,KAAKwQ,IAAI,EAAGxQ,KAAKsQ,IAAIla,EAAI,EAAG4J,KAAKwN,MAAM3X,GAAKO,KACpD,OAAOuT,EAAEhV,GAAGkB,EAAIlB,ICLL,ICAAokD,sBAAA,SAAS7e,GACtB,OAAO,WACL,OAAOA,ICFI8e,oBAAA,SAAS9e,GACtB,OAAQA,GCKNhmB,iBAAQ,EAAG,GAER,SAAS+kC,oBAAoBliD,EAAGwI,GACrC,OAAQA,GAAMxI,GAAKA,GACb,SAASmjC,GAAK,OAAQA,EAAInjC,GAAKwI,GAC/Bg1C,sBAASh1C,GAiBjB,SAAS25C,MAAMjmC,OAAQvV,MAAOy7C,cAAeC,eAC3C,IAAIC,GAAKpmC,OAAO,GAAIgzB,GAAKhzB,OAAO,GAAIyyB,GAAKhoC,MAAM,GAAIioC,GAAKjoC,MAAM,GAG9D,OAFIuoC,GAAKoT,IAAIA,GAAKF,cAAclT,GAAIoT,IAAK3T,GAAK0T,cAAczT,GAAID,MAC3D2T,GAAKF,cAAcE,GAAIpT,IAAKP,GAAK0T,cAAc1T,GAAIC,KACjD,SAASzL,GAAK,OAAOwL,GAAG2T,GAAGnf,KAGpC,SAASof,QAAQrmC,OAAQvV,MAAOy7C,cAAeC,eAC7C,IAAI/hC,EAAIrX,KAAKsQ,IAAI2C,OAAOpV,OAAQH,MAAMG,QAAU,EAC5C5I,EAAI,IAAI+P,MAAMqS,GACd5hB,EAAI,IAAIuP,MAAMqS,GACd1iB,GAAK,EAQT,IALIse,OAAOoE,GAAKpE,OAAO,KACrBA,OAASA,OAAOqE,QAAQmJ,UACxB/iB,MAAQA,MAAM4Z,QAAQmJ,aAGf9rB,EAAI0iB,GACXpiB,EAAEN,GAAKwkD,cAAclmC,OAAOte,GAAIse,OAAOte,EAAI,IAC3Cc,EAAEd,GAAKykD,cAAc17C,MAAM/I,GAAI+I,MAAM/I,EAAI,IAG3C,OAAO,SAASulC,GACd,IAAIvlC,EAAI4kD,OAAOtmC,OAAQinB,EAAG,EAAG7iB,GAAK,EAClC,OAAO5hB,EAAEd,GAAGM,EAAEN,GAAGulC,KAId,SAAS6K,KAAKnkB,OAAQ44B,QAC3B,OAAOA,OACFvmC,OAAO2N,OAAO3N,UACdvV,MAAMkjB,OAAOljB,SACbo7C,YAAYl4B,OAAOk4B,eACnBW,MAAM74B,OAAO64B,SAKL,SAASplC,WAAW8kC,cAAeC,eAChD,IAIIP,UACAa,OACAC,MANA1mC,OAASiB,gBACTxW,MAAQwW,gBACR4kC,YAAcc,UACdH,OAAQ,EAKZ,SAASnU,UAGP,OAFAuT,UAAY74C,KAAKsQ,IAAI2C,OAAOpV,OAAQH,MAAMG,QAAU,EAAIy7C,QAAUJ,MAClEQ,OAASC,MAAQ,KACV7U,MAGT,SAASA,MAAM5K,GACb,OAAQwf,SAAWA,OAASb,UAAU5lC,OAAQvV,MAAO+7C,MAtEzD,SAASI,mBAAmBV,eAC1B,OAAO,SAASpiD,EAAGwI,GACjB,IAAItK,EAAIkkD,cAAcpiD,GAAKA,EAAGwI,GAAKA,GACnC,OAAO,SAAS26B,GAAK,OAAOA,GAAKnjC,EAAI,EAAImjC,GAAK36B,EAAI,EAAItK,EAAEilC,KAmEK2f,CAAmBV,eAAiBA,cAAeL,gBAAgB5e,GA2BlI,OAxBA4K,MAAMgB,OAAS,SAASnmC,GACtB,OAAQg6C,QAAUA,MAAQd,UAAUn7C,MAAOuV,OAAQgmC,oBAAqBQ,MAnE5E,SAASK,mBAAmBV,eAC1B,OAAO,SAASriD,EAAGwI,GACjB,IAAI9J,EAAI2jD,cAAcriD,GAAKA,EAAGwI,GAAKA,GACnC,OAAO,SAAS1J,GAAK,OAAOA,GAAK,EAAIkB,EAAIlB,GAAK,EAAI0J,EAAI9J,EAAEI,KAgEwBikD,CAAmBV,eAAiBA,kBAAkBz5C,IAGxImlC,MAAM7xB,OAAS,SAASoK,GACtB,OAAO9b,UAAU1D,QAAUoV,OAAS7O,cAAItP,KAAKuoB,EAAG4kB,qBAASqD,WAAaryB,OAAOqE,SAG/EwtB,MAAMpnC,MAAQ,SAAS2f,GACrB,OAAO9b,UAAU1D,QAAUH,MAAQ4Z,YAAMxiB,KAAKuoB,GAAIioB,WAAa5nC,MAAM4Z,SAGvEwtB,MAAMU,WAAa,SAASnoB,GAC1B,OAAO3f,MAAQ4Z,YAAMxiB,KAAKuoB,GAAIy7B,YAAciB,UAAkBzU,WAGhER,MAAM2U,MAAQ,SAASp8B,GACrB,OAAO9b,UAAU1D,QAAU47C,QAAUp8B,EAAGioB,WAAamU,OAGvD3U,MAAMgU,YAAc,SAASz7B,GAC3B,OAAO9b,UAAU1D,QAAUi7C,YAAcz7B,EAAGioB,WAAawT,aAGpDxT,UC5GM,IAAA0U,cAAA,SAAS9f,EAAGvjC,GACzB,IAAKhC,GAAKulC,EAAIvjC,EAAIujC,EAAE+f,cAActjD,EAAI,GAAKujC,EAAE+f,iBAAiB73C,QAAQ,MAAQ,EAAG,OAAO,KACxF,IAAIzN,EAAGulD,YAAchgB,EAAE5iB,MAAM,EAAG3iB,GAIhC,OACEulD,YAAYr8C,OAAS,EAAIq8C,YAAY,GAAKA,YAAY5iC,MAAM,GAAK4iC,aAChEhgB,EAAE5iB,MAAM3iB,EAAI,KCTFwlD,aAAA,SAASjgB,GACtB,OAAOA,EAAI8f,cAAch6C,KAAKooB,IAAI8R,KAASA,EAAE,GAAKuH,KCFhD2Y,GAAK,2EAEM,SAASC,gBAAgBC,WACtC,OAAO,IAAIC,gBAAgBD,WAK7B,SAASC,gBAAgBD,WACvB,KAAM91C,MAAQ41C,GAAG5J,KAAK8J,YAAa,MAAM,IAAIzuC,MAAM,mBAAqByuC,WACxE,IAAI91C,MACJrI,KAAKq+C,KAAOh2C,MAAM,IAAM,IACxBrI,KAAKkpC,MAAQ7gC,MAAM,IAAM,IACzBrI,KAAKs+C,KAAOj2C,MAAM,IAAM,IACxBrI,KAAKu+C,OAASl2C,MAAM,IAAM,GAC1BrI,KAAK05C,OAASrxC,MAAM,GACpBrI,KAAKy7B,MAAQpzB,MAAM,KAAOA,MAAM,GAChCrI,KAAKw+C,QAAUn2C,MAAM,GACrBrI,KAAKy+C,UAAYp2C,MAAM,KAAOA,MAAM,GAAG8S,MAAM,GAC7Cnb,KAAKyY,OAASpQ,MAAM,GACpBrI,KAAK1E,KAAO+M,MAAM,KAAO,GAd3B61C,gBAAgB5jD,UAAY8jD,gBAAgB9jD,UAiB5C8jD,gBAAgB9jD,UAAUgI,SAAW,WACnC,OAAOtC,KAAKq+C,KACNr+C,KAAKkpC,MACLlpC,KAAKs+C,KACLt+C,KAAKu+C,QACJv+C,KAAK05C,KAAO,IAAM,KACJ,MAAd15C,KAAKy7B,MAAgB,GAAK53B,KAAKwQ,IAAI,EAAgB,EAAbrU,KAAKy7B,SAC3Cz7B,KAAKw+C,MAAQ,IAAM,KACD,MAAlBx+C,KAAKy+C,UAAoB,GAAK,IAAM56C,KAAKwQ,IAAI,EAAoB,EAAjBrU,KAAKy+C,aACrDz+C,KAAKyY,KAAO,IAAM,IACnBzY,KAAK1E,MCjCE,ICCJojD,eCAPC,qBACO5+C,qBACA6+C,2BFHIC,WAAA,SAASpkD,GACtBqkD,IAAK,IAAK,IAAkCC,GAA9B9kD,EAAIQ,EAAEiH,OAAQlJ,EAAI,EAAGyuC,IAAM,EAAOzuC,EAAIyB,IAAKzB,EACvD,OAAQiC,EAAEjC,IACR,IAAK,IAAKyuC,GAAK8X,GAAKvmD,EAAG,MACvB,IAAK,IAAgB,IAAPyuC,KAAUA,GAAKzuC,GAAGumD,GAAKvmD,EAAG,MACxC,QAAS,GAAIyuC,GAAK,EAAG,CAAE,KAAMxsC,EAAEjC,GAAI,MAAMsmD,IAAK7X,GAAK,GAGvD,OAAOA,GAAK,EAAIxsC,EAAE0gB,MAAM,EAAG8rB,IAAMxsC,EAAE0gB,MAAM4jC,GAAK,GAAKtkD,GGPtCukD,cAAA,SAASjhB,EAAGvjC,GACzB,IAAI1B,EAAI+kD,cAAc9f,EAAGvjC,GACzB,IAAK1B,EAAG,OAAOilC,EAAI,GACnB,IAAIggB,YAAcjlD,EAAE,GAChBmmD,SAAWnmD,EAAE,GACjB,OAAOmmD,SAAW,EAAI,KAAO,IAAIp2C,OAAOo2C,UAAUl8C,KAAK,KAAOg7C,YACxDA,YAAYr8C,OAASu9C,SAAW,EAAIlB,YAAY5iC,MAAM,EAAG8jC,SAAW,GAAK,IAAMlB,YAAY5iC,MAAM8jC,SAAW,GAC5GlB,YAAc,IAAIl1C,MAAMo2C,SAAWlB,YAAYr8C,OAAS,GAAGqB,KAAK,MCNzDm8C,aACbC,IAAK,SAAAj+B,EAAS6c,EAAGvjC,GAAK,OAAY,IAAJujC,GAASqhB,QAAQ5kD,IAC/C4I,EAAK,SAAAA,EAAS26B,GAAK,OAAOl6B,KAAK4G,MAAMszB,GAAGz7B,SAAS,IACjDzJ,EAAK,SAAAA,EAASklC,GAAK,OAAOA,EAAI,IAC9BjlC,EAAK,SAAAA,EAASilC,GAAK,OAAOl6B,KAAK4G,MAAMszB,GAAGz7B,SAAS,KACjD5H,EAAK,SAAAA,EAASqjC,EAAGvjC,GAAK,OAAOujC,EAAE+f,cAActjD,IAC7CqgB,EAAK,SAAAA,EAASkjB,EAAGvjC,GAAK,OAAOujC,EAAEqhB,QAAQ5kD,IACvCk6C,EAAK,SAAAA,EAAS3W,EAAGvjC,GAAK,OAAOujC,EAAEshB,YAAY7kD,IAC3CvB,EAAK,SAAAA,EAAS8kC,GAAK,OAAOl6B,KAAK4G,MAAMszB,GAAGz7B,SAAS,IACjD9H,EAAK,SAAAA,EAASujC,EAAGvjC,IAAK,OAAOwkD,cAAkB,IAAJjhB,EAASvjC,KACpDlB,EAAK0lD,cACLvkD,EHVa,SAASsjC,EAAGvjC,GACzB,IAAI1B,EAAI+kD,cAAc9f,EAAGvjC,GACzB,IAAK1B,EAAG,OAAOilC,EAAI,GACnB,IAAIggB,YAAcjlD,EAAE,GAChBmmD,SAAWnmD,EAAE,GACbN,EAAIymD,UAAYP,eAAuE,EAAtD76C,KAAKwQ,KAAK,EAAGxQ,KAAKsQ,IAAI,EAAGtQ,KAAKwN,MAAM4tC,SAAW,MAAY,EAC5FhlD,EAAI8jD,YAAYr8C,OACpB,OAAOlJ,IAAMyB,EAAI8jD,YACXvlD,EAAIyB,EAAI8jD,YAAc,IAAIl1C,MAAMrQ,EAAIyB,EAAI,GAAG8I,KAAK,KAChDvK,EAAI,EAAIulD,YAAY5iC,MAAM,EAAG3iB,GAAK,IAAMulD,YAAY5iC,MAAM3iB,GAC1D,KAAO,IAAIqQ,MAAM,EAAIrQ,GAAGuK,KAAK,KAAO86C,cAAc9f,EAAGl6B,KAAKwQ,IAAI,EAAG7Z,EAAIhC,EAAI,IAAI,IGCnF8mD,EAAK,SAAAA,EAASvhB,GAAK,OAAOl6B,KAAK4G,MAAMszB,GAAGz7B,SAAS,IAAIi9C,eACrDxhB,EAAK,SAAAA,EAASA,IAAK,OAAOl6B,KAAK4G,MAAMszB,IAAGz7B,SAAS,MChBpCk9C,aAAA,SAASzhB,GACtB,OAAOA,GCQL0hB,UAAY,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,GAAG,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,KAEhEC,WAAA,SAASf,QACtB,IAAIgB,MAAQhB,OAAOiB,UAAYjB,OAAOkB,UCZzB,SAASD,SAAUC,WAChC,OAAO,SAASpmD,MAAOgiC,OAOrB,IANA,IAAIjjC,EAAIiB,MAAMiI,OACVhI,KACAwhB,EAAI,EACJw5B,EAAIkL,SAAS,GACbl+C,OAAS,EAENlJ,EAAI,GAAKk8C,EAAI,IACdhzC,OAASgzC,EAAI,EAAIjZ,QAAOiZ,EAAI7wC,KAAKwQ,IAAI,EAAGonB,MAAQ/5B,SACpDhI,EAAEwM,KAAKzM,MAAMiK,UAAUlL,GAAKk8C,EAAGl8C,EAAIk8C,OAC9BhzC,QAAUgzC,EAAI,GAAKjZ,SACxBiZ,EAAIkL,SAAS1kC,GAAKA,EAAI,GAAK0kC,SAASl+C,QAGtC,OAAOhI,EAAE4qB,UAAUvhB,KAAK88C,YDHwBC,CAAYnB,OAAOiB,SAAUjB,OAAOkB,WAAapuB,aAC/FsuB,SAAWpB,OAAOoB,SAClBC,QAAUrB,OAAOqB,QACjBC,SAAWtB,OAAOsB,SEfT,SAASA,UACtB,OAAO,SAASxmD,OACd,OAAOA,MAAM6G,QAAQ,SAAU,SAAS9H,GACtC,OAAOynD,UAAUznD,MFYY0nD,CAAevB,OAAOsB,UAAYxuB,aAC/D0uB,QAAUxB,OAAOwB,SAAW,IAEhC,SAASC,UAAUjC,WAGjB,IAAIE,MAFJF,UAAYD,gBAAgBC,YAEPE,KACjBnV,MAAQiV,UAAUjV,MAClBoV,KAAOH,UAAUG,KACjBC,OAASJ,UAAUI,OACnB7E,KAAOyE,UAAUzE,KACjBje,MAAQ0iB,UAAU1iB,MAClB+iB,MAAQL,UAAUK,MAClBC,UAAYN,UAAUM,UACtBhmC,KAAO0lC,UAAU1lC,KACjBnd,KAAO6iD,UAAU7iD,KAGR,MAATA,MAAckjD,OAAQ,EAAMljD,KAAO,KAG7B4jD,YAAY5jD,QAAoB,MAAbmjD,YAAsBA,UAAY,IAAKhmC,MAAO,EAAMnd,KAAO,MAGpFo+C,MAAkB,MAAT2E,MAA0B,MAAVnV,SAAgBwQ,MAAO,EAAM2E,KAAO,IAAKnV,MAAQ,KAI9E,IAAImX,OAAoB,MAAX9B,OAAiBwB,SAAS,GAAgB,MAAXxB,QAAkB,SAASzgD,KAAKxC,MAAQ,IAAMA,KAAKmG,cAAgB,GAC3G6+C,OAAoB,MAAX/B,OAAiBwB,SAAS,GAAK,OAAOjiD,KAAKxC,MAAQ6kD,QAAU,GAKtEI,WAAarB,YAAY5jD,MACzBklD,YAAc,aAAa1iD,KAAKxC,MAUpC,SAASyE,OAAOtG,OACd,IAEIjB,EAAGyB,EAAGpB,EAFN4nD,YAAcJ,OACdK,YAAcJ,OAGlB,GAAa,MAAThlD,KACFolD,YAAcH,WAAW9mD,OAASinD,YAClCjnD,MAAQ,OACH,CAIL,IAAIknD,eAHJlnD,OAASA,OAGmB,EAe5B,GAdAA,MAAQ8mD,WAAW18C,KAAKooB,IAAIxyB,OAAQglD,WAGhChmC,OAAMhf,MAAQolD,WAAWplD,QAGzBknD,eAA4B,IAAVlnD,QAAaknD,eAAgB,GAGnDF,aAAeE,cAA0B,MAATrC,KAAeA,KAAO,IAAgB,MAATA,MAAyB,MAATA,KAAe,GAAKA,MAAQmC,YACzGC,aAAwB,MAATplD,KAAemkD,SAAS,EAAIf,eAAiB,GAAK,IAAMgC,aAAeC,eAA0B,MAATrC,KAAe,IAAM,IAIxHkC,YAEF,IADAhoD,GAAK,EAAGyB,EAAIR,MAAMiI,SACTlJ,EAAIyB,GACX,GAA6B,IAAzBpB,EAAIY,MAAMkhB,WAAWniB,KAAcK,EAAI,GAAI,CAC7C6nD,aAAqB,KAAN7nD,EAAWmnD,QAAUvmD,MAAM0hB,MAAM3iB,EAAI,GAAKiB,MAAM0hB,MAAM3iB,IAAMkoD,YAC3EjnD,MAAQA,MAAM0hB,MAAM,EAAG3iB,GACvB,OAOJgmD,QAAU9E,OAAMjgD,MAAQkmD,MAAMlmD,MAAOmnD,MAGzC,IAAIl/C,OAAS++C,YAAY/+C,OAASjI,MAAMiI,OAASg/C,YAAYh/C,OACzD8gC,QAAU9gC,OAAS+5B,MAAQ,IAAI5yB,MAAM4yB,MAAQ/5B,OAAS,GAAGqB,KAAKs7C,MAAQ,GAM1E,OAHIG,OAAS9E,OAAMjgD,MAAQkmD,MAAMnd,QAAU/oC,MAAO+oC,QAAQ9gC,OAAS+5B,MAAQilB,YAAYh/C,OAASk/C,KAAWpe,QAAU,IAG7G0G,OACN,IAAK,IAAKzvC,MAAQgnD,YAAchnD,MAAQinD,YAAcle,QAAS,MAC/D,IAAK,IAAK/oC,MAAQgnD,YAAcje,QAAU/oC,MAAQinD,YAAa,MAC/D,IAAK,IAAKjnD,MAAQ+oC,QAAQrnB,MAAM,EAAGzZ,OAAS8gC,QAAQ9gC,QAAU,GAAK++C,YAAchnD,MAAQinD,YAAcle,QAAQrnB,MAAMzZ,QAAS,MAC9H,QAASjI,MAAQ+oC,QAAUie,YAAchnD,MAAQinD,YAGnD,OAAOT,SAASxmD,OAOlB,OApEAglD,UAAyB,MAAbA,UAAoB,EAC1B,SAAS3gD,KAAKxC,MAAQuI,KAAKwQ,IAAI,EAAGxQ,KAAKsQ,IAAI,GAAIsqC,YAC/C56C,KAAKwQ,IAAI,EAAGxQ,KAAKsQ,IAAI,GAAIsqC,YA8D/B1+C,OAAOuC,SAAW,WAChB,OAAO67C,UAAY,IAGdp+C,OAaT,OACEA,OAAQqgD,UACRxB,aAZF,SAASA,aAAaT,UAAW1kD,OAC/B,IAAIohB,EAAIulC,YAAWjC,UAAYD,gBAAgBC,YAAsB7iD,KAAO,IAAK6iD,YAC7EzjD,EAAiE,EAA7DmJ,KAAKwQ,KAAK,EAAGxQ,KAAKsQ,IAAI,EAAGtQ,KAAKwN,MAAM4tC,aAASxlD,OAAS,KAC1D6uC,EAAIzkC,KAAK+Q,IAAI,IAAKla,GAClB2lD,OAASZ,SAAS,EAAI/kD,EAAI,GAC9B,OAAO,SAASjB,OACd,OAAOohB,EAAEytB,EAAI7uC,OAAS4mD,YJxHb,SAASQ,cAAc3W,YAIpC,OAHAyU,qBAASmC,WAAa5W,YACtBnqC,qBAAS4+C,qBAAO5+C,OAChB6+C,2BAAeD,qBAAOC,aACfD,qBAXTkC,EACEb,QAAS,IACTH,UAAW,IACXD,UAAW,GACXG,UAAW,IAAK,MORH,ICCAgB,eAAA,SAASjqC,OAAQtC,MAAO2pC,WACrC,IAGIM,UAHAvgD,MAAQ4Y,OAAO,GACfmvB,KAAOnvB,OAAOA,OAAOpV,OAAS,GAC9BwkC,KAAOU,SAAS1oC,MAAO+nC,KAAe,MAATzxB,MAAgB,GAAKA,OAGtD,QADA2pC,UAAYD,gBAA6B,MAAbC,UAAoB,KAAOA,YACrC7iD,MAChB,IAAK,IACH,IAAI7B,MAAQoK,KAAKwQ,IAAIxQ,KAAKooB,IAAI/tB,OAAQ2F,KAAKooB,IAAIga,OAE/C,OAD2B,MAAvBkY,UAAUM,WAAsBxqC,MAAMwqC,UCVjC,SAASvY,KAAMzsC,OAC5B,OAAOoK,KAAKwQ,IAAI,EAAgE,EAA7DxQ,KAAKwQ,KAAK,EAAGxQ,KAAKsQ,IAAI,EAAGtQ,KAAKwN,MAAM4tC,aAASxlD,OAAS,KAAWwlD,aAASp7C,KAAKooB,IAAIia,QDS5C8a,CAAgB9a,KAAMzsC,UAAS0kD,UAAUM,UAAYA,WACpGG,2BAAaT,UAAW1kD,OAEjC,IAAK,GACL,IAAK,IACL,IAAK,IACL,IAAK,IACL,IAAK,IACwB,MAAvB0kD,UAAUM,WAAsBxqC,MAAMwqC,UElBjC,SAASvY,KAAM7xB,KAE5B,OADA6xB,KAAOriC,KAAKooB,IAAIia,MAAO7xB,IAAMxQ,KAAKooB,IAAI5X,KAAO6xB,KACtCriC,KAAKwQ,IAAI,EAAG4qC,aAAS5qC,KAAO4qC,aAAS/Y,OAAS,EFgBK+a,CAAe/a,KAAMriC,KAAKwQ,IAAIxQ,KAAKooB,IAAI/tB,OAAQ2F,KAAKooB,IAAIga,WAAUkY,UAAUM,UAAYA,WAAgC,MAAnBN,UAAU7iD,OACrK,MAEF,IAAK,IACL,IAAK,IACwB,MAAvB6iD,UAAUM,WAAsBxqC,MAAMwqC,UDvBjC,SAASvY,MACtB,OAAOriC,KAAKwQ,IAAI,GAAI4qC,aAASp7C,KAAKooB,IAAIia,QCsBoBgb,CAAehb,SAAQiY,UAAUM,UAAYA,UAAuC,GAAP,MAAnBN,UAAU7iD,OAI9H,OAAOyE,qBAAOo+C,YGxBT,SAASgD,UAAUxY,OACxB,IAAI7xB,OAAS6xB,MAAM7xB,OAmDnB,OAjDA6xB,MAAMpC,MAAQ,SAAS/xB,OACrB,IAAI1b,EAAIge,SACR,OAAOyvB,UAAMztC,EAAE,GAAIA,EAAEA,EAAE4I,OAAS,GAAa,MAAT8S,MAAgB,GAAKA,QAG3Dm0B,MAAMyY,WAAa,SAAS5sC,MAAO2pC,WACjC,OAAOiD,eAAWtqC,SAAUtC,MAAO2pC,YAGrCxV,MAAM0Y,KAAO,SAAS7sC,OACP,MAATA,QAAeA,MAAQ,IAE3B,IAKI0xB,KALAptC,EAAIge,SACJmwB,GAAK,EACL8X,GAAKjmD,EAAE4I,OAAS,EAChBxD,MAAQpF,EAAEmuC,IACVhB,KAAOntC,EAAEimD,IA8Bb,OA3BI9Y,KAAO/nC,QACTgoC,KAAOhoC,MAAOA,MAAQ+nC,KAAMA,KAAOC,KACnCA,KAAOe,GAAIA,GAAK8X,GAAIA,GAAK7Y,OAG3BA,KAAOM,cAActoC,MAAO+nC,KAAMzxB,QAEvB,EAGT0xB,KAAOM,cAFPtoC,MAAQ2F,KAAKwN,MAAMnT,MAAQgoC,MAAQA,KACnCD,KAAOpiC,KAAKmoB,KAAKia,KAAOC,MAAQA,KACE1xB,OACzB0xB,KAAO,IAGhBA,KAAOM,cAFPtoC,MAAQ2F,KAAKmoB,KAAK9tB,MAAQgoC,MAAQA,KAClCD,KAAOpiC,KAAKwN,MAAM40B,KAAOC,MAAQA,KACC1xB,QAGhC0xB,KAAO,GACTptC,EAAEmuC,IAAMpjC,KAAKwN,MAAMnT,MAAQgoC,MAAQA,KACnCptC,EAAEimD,IAAMl7C,KAAKmoB,KAAKia,KAAOC,MAAQA,KACjCpvB,OAAOhe,IACEotC,KAAO,IAChBptC,EAAEmuC,IAAMpjC,KAAKmoB,KAAK9tB,MAAQgoC,MAAQA,KAClCptC,EAAEimD,IAAMl7C,KAAKwN,MAAM40B,KAAOC,MAAQA,KAClCpvB,OAAOhe,IAGF6vC,OAGFA,MAGM,SAASuP,gBACtB,IAAIvP,MAAQzwB,WAAW8kC,oBAAeC,YAMtC,OAJAtU,MAAMC,KAAO,WACX,OAAOA,KAAKD,MAAOuP,kBAGdiJ,UAAUxY,OC/DJ,SAASlX,oBACtB,IAAI3a,QAAU,EAAG,GAEjB,SAAS6xB,MAAM5K,GACb,OAAQA,EAaV,OAVA4K,MAAMgB,OAAShB,MAEfA,MAAM7xB,OAAS6xB,MAAMpnC,MAAQ,SAAS2f,GACpC,OAAO9b,UAAU1D,QAAUoV,OAAS7O,cAAItP,KAAKuoB,EAAG4kB,qBAAS6C,OAAS7xB,OAAOqE,SAG3EwtB,MAAMC,KAAO,WACX,OAAOnX,oBAAW3a,OAAOA,SAGpBqqC,UAAUxY,OCrBJ,IAAA0Y,KAAA,SAASvqC,OAAQwqC,UAG9B,IAII5nD,EAJAutC,GAAK,EACL8X,IAHJjoC,OAASA,OAAOqE,SAGAzZ,OAAS,EACrB6/C,GAAKzqC,OAAOmwB,IACZua,GAAK1qC,OAAOioC,IAUhB,OAPIyC,GAAKD,KACP7nD,EAAIutC,GAAIA,GAAK8X,GAAIA,GAAKrlD,EACtBA,EAAI6nD,GAAIA,GAAKC,GAAIA,GAAK9nD,GAGxBod,OAAOmwB,IAAMqa,SAASjwC,MAAMkwC,IAC5BzqC,OAAOioC,IAAMuC,SAASt1B,KAAKw1B,IACpB1qC,QCVT,SAASkmC,kBAAcpiD,EAAGwI,GACxB,OAAQA,EAAIS,KAAK6iC,IAAItjC,EAAIxI,IACnB,SAASmjC,GAAK,OAAOl6B,KAAK6iC,IAAI3I,EAAInjC,GAAKwI,GACvCg1C,sBAASh1C,GAGjB,SAAS65C,kBAAcriD,EAAGwI,GACxB,OAAOxI,EAAI,EACL,SAASlB,GAAK,OAAQmK,KAAK+Q,KAAKxR,EAAG1J,GAAKmK,KAAK+Q,KAAKha,EAAG,EAAIlB,IACzD,SAASA,GAAK,OAAOmK,KAAK+Q,IAAIxR,EAAG1J,GAAKmK,KAAK+Q,IAAIha,EAAG,EAAIlB,IAG9D,SAAS+nD,MAAM1jB,GACb,OAAO38B,SAAS28B,KAAO,KAAOA,GAAKA,EAAI,EAAI,EAAIA,EAGjD,SAAS2jB,KAAKC,MACZ,OAAgB,KAATA,KAAcF,MACfE,OAAS99C,KAAKqzC,EAAIrzC,KAAK+9C,IACvB,SAAS7jB,GAAK,OAAOl6B,KAAK+Q,IAAI+sC,KAAM5jB,IAG5C,SAAS8jB,KAAKF,MACZ,OAAOA,OAAS99C,KAAKqzC,EAAIrzC,KAAK6iC,IACf,KAATib,MAAe99C,KAAKi+C,OACV,IAATH,MAAc99C,KAAKk+C,OAClBJ,KAAO99C,KAAK6iC,IAAIib,MAAO,SAAS5jB,GAAK,OAAOl6B,KAAK6iC,IAAI3I,GAAK4jB,OAGpE,SAASK,QAAQnnC,GACf,OAAO,SAASkjB,GACd,OAAQljB,GAAGkjB,IAIA,SAAS2I,MACtB,IAAIiC,MAAQzwB,WAAW8kC,kBAAeC,mBAAenmC,QAAQ,EAAG,KAC5DA,OAAS6xB,MAAM7xB,OACf6qC,KAAO,GACPM,KAAOJ,KAAK,IACZK,KAAOR,KAAK,IAEhB,SAASvY,UAGP,OAFA8Y,KAAOJ,KAAKF,MAAOO,KAAOR,KAAKC,MAC3B7qC,SAAS,GAAK,IAAGmrC,KAAOD,QAAQC,MAAOC,KAAOF,QAAQE,OACnDvZ,MA2ET,OAxEAA,MAAMgZ,KAAO,SAASzgC,GACpB,OAAO9b,UAAU1D,QAAUigD,MAAQzgC,EAAGioB,WAAawY,MAGrDhZ,MAAM7xB,OAAS,SAASoK,GACtB,OAAO9b,UAAU1D,QAAUoV,OAAOoK,GAAIioB,WAAaryB,UAGrD6xB,MAAMpC,MAAQ,SAAS/xB,OACrB,IAGIlb,EAHAR,EAAIge,SACJnJ,EAAI7U,EAAE,GACN8Q,EAAI9Q,EAAEA,EAAE4I,OAAS,IAGjBpI,EAAIsQ,EAAI+D,KAAGnV,EAAImV,EAAGA,EAAI/D,EAAGA,EAAIpR,GAEjC,IAEIgC,EACA8tC,EACA5uC,EAJAlB,EAAIypD,KAAKt0C,GACTuN,EAAI+mC,KAAKr4C,GAIT3P,EAAa,MAATua,MAAgB,IAAMA,MAC1B+hC,KAEJ,KAAMoL,KAAO,IAAMzmC,EAAI1iB,EAAIyB,GAEzB,GADAzB,EAAIqL,KAAK4G,MAAMjS,GAAK,EAAG0iB,EAAIrX,KAAK4G,MAAMyQ,GAAK,EACvCvN,EAAI,GAAG,KAAOnV,EAAI0iB,IAAK1iB,EACzB,IAAK8vC,EAAI,EAAG9tC,EAAI0nD,KAAK1pD,GAAI8vC,EAAIqZ,OAAQrZ,EAEnC,MADA5uC,EAAIc,EAAI8tC,GACA36B,GAAR,CACA,GAAIjU,EAAIkQ,EAAG,MACX2sC,EAAErwC,KAAKxM,SAEJ,KAAOlB,EAAI0iB,IAAK1iB,EACrB,IAAK8vC,EAAIqZ,KAAO,EAAGnnD,EAAI0nD,KAAK1pD,GAAI8vC,GAAK,IAAKA,EAExC,MADA5uC,EAAIc,EAAI8tC,GACA36B,GAAR,CACA,GAAIjU,EAAIkQ,EAAG,MACX2sC,EAAErwC,KAAKxM,SAIX68C,EAAIhQ,UAAM/tC,EAAG0iB,EAAGrX,KAAKsQ,IAAI+G,EAAI1iB,EAAGyB,IAAIgO,IAAIi6C,MAG1C,OAAO5oD,EAAIi9C,EAAEjyB,UAAYiyB,GAG3B5N,MAAMyY,WAAa,SAAS5sC,MAAO2pC,WAGjC,GAFiB,MAAbA,YAAmBA,UAAqB,KAATwD,KAAc,MAAQ,KAChC,mBAAdxD,YAA0BA,UAAYp+C,qBAAOo+C,YACpD3pC,QAAUosC,IAAU,OAAOzC,UAClB,MAAT3pC,QAAeA,MAAQ,IAC3B,IAAI8zB,EAAIzkC,KAAKwQ,IAAI,EAAGstC,KAAOntC,MAAQm0B,MAAMpC,QAAQ7kC,QACjD,OAAO,SAAS5I,GACd,IAAIN,EAAIM,EAAIopD,KAAKr+C,KAAK4G,MAAMw3C,KAAKnpD,KAEjC,OADIN,EAAImpD,KAAOA,KAAO,KAAKnpD,GAAKmpD,MACzBnpD,GAAK8vC,EAAI6V,UAAUrlD,GAAK,KAInC6vC,MAAM0Y,KAAO,WACX,OAAOvqC,OAAOuqC,KAAKvqC,UACjBzF,MAAO,SAAAA,MAAS0sB,GAAK,OAAOmkB,KAAKr+C,KAAKwN,MAAM4wC,KAAKlkB,MACjD/R,KAAM,SAAAA,KAAS+R,GAAK,OAAOmkB,KAAKr+C,KAAKmoB,KAAKi2B,KAAKlkB,UAInD4K,MAAMC,KAAO,WACX,OAAOA,KAAKD,MAAOjC,MAAMib,KAAKA,QAGzBhZ,MC1HT,SAASwZ,MAAMpkB,EAAGkhB,UAChB,OAAOlhB,EAAI,GAAKl6B,KAAK+Q,KAAKmpB,EAAGkhB,UAAYp7C,KAAK+Q,IAAImpB,EAAGkhB,UAGxC,SAASrqC,MACtB,IAAIqqC,SAAW,EACXtW,MAAQzwB,WAGZ,SAAS8kC,cAAcpiD,EAAGwI,GACxB,OAAQA,EAAI++C,MAAM/+C,EAAG67C,WAAarkD,EAAIunD,MAAMvnD,EAAGqkD,YACzC,SAASlhB,GAAK,OAAQokB,MAAMpkB,EAAGkhB,UAAYrkD,GAAKwI,GAChDg1C,sBAASh1C,IAGjB,SAAS65C,cAAcriD,EAAGwI,GAExB,OADAA,EAAI++C,MAAM/+C,EAAG67C,WAAarkD,EAAIunD,MAAMvnD,EAAGqkD,WAChC,SAASvlD,GAAK,OAAOyoD,MAAMvnD,EAAIwI,EAAI1J,EAAG,EAAIulD,aAV/CnoC,OAAS6xB,MAAM7xB,OAqBnB,OARA6xB,MAAMsW,SAAW,SAAS/9B,GACxB,OAAO9b,UAAU1D,QAAUu9C,UAAY/9B,EAAGpK,OAAOA,WAAamoC,UAGhEtW,MAAMC,KAAO,WACX,OAAOA,KAAKD,MAAO/zB,MAAMqqC,SAASA,YAG7BkC,UAAUxY,OC7BJ,SAAS5B,oBACtB,IAAIjwB,UACAvV,SACA6gD,cAEJ,SAASjZ,UACP,IAAI3wC,EAAI,EAAGyB,EAAI4J,KAAKwQ,IAAI,EAAG9S,MAAMG,QAEjC,IADA0gD,WAAa,IAAIv5C,MAAM5O,EAAI,KAClBzB,EAAIyB,GAAGmoD,WAAW5pD,EAAI,GAAK6pD,SAAUvrC,OAAQte,EAAIyB,GAC1D,OAAO0uC,MAGT,SAASA,MAAM5K,GACb,IAAK9pB,MAAM8pB,GAAKA,GAAI,OAAOx8B,MAAM67C,OAAOgF,WAAYrkB,IAiCtD,OA9BA4K,MAAMW,aAAe,SAAS9lC,GAC5B,IAAIhL,EAAI+I,MAAM0E,QAAQzC,GACtB,OAAOhL,EAAI,GAAK8sC,IAAKA,MACnB9sC,EAAI,EAAI4pD,WAAW5pD,EAAI,GAAKse,OAAO,GACnCte,EAAI4pD,WAAW1gD,OAAS0gD,WAAW5pD,GAAKse,OAAOA,OAAOpV,OAAS,KAInEinC,MAAM7xB,OAAS,SAASoK,GACtB,IAAK9b,UAAU1D,OAAQ,OAAOoV,OAAOqE,QACrCrE,UACA,IAAK,IAAyBhe,EAArBN,EAAI,EAAGyB,EAAIinB,EAAExf,OAAWlJ,EAAIyB,IAAKzB,EAAsB,OAAfM,EAAIooB,EAAE1oB,KAAkByb,MAAMnb,GAAKA,IAAIge,OAAO5Q,KAAKpN,GAEpG,OADAge,OAAO5D,KAAKmyB,WACL8D,WAGTR,MAAMpnC,MAAQ,SAAS2f,GACrB,OAAO9b,UAAU1D,QAAUH,MAAQ4Z,YAAMxiB,KAAKuoB,GAAIioB,WAAa5nC,MAAM4Z,SAGvEwtB,MAAM2Z,UAAY,WAChB,OAAOF,WAAWjnC,SAGpBwtB,MAAMC,KAAO,WACX,OAAO7B,oBACFjwB,OAAOA,QACPvV,MAAMA,QAGNonC,MC7CM,SAAS4Z,oBACtB,IAAIhB,GAAK,EACLC,GAAK,EACLvnD,EAAI,EACJ6c,QAAU,IACVvV,OAAS,EAAG,GAEhB,SAASonC,MAAM5K,GACb,GAAIA,GAAKA,EAAG,OAAOx8B,MAAM67C,OAAOtmC,OAAQinB,EAAG,EAAG9jC,IAGhD,SAASkvC,UACP,IAAI3wC,GAAK,EAET,IADAse,OAAS,IAAIjO,MAAM5O,KACVzB,EAAIyB,GAAG6c,OAAOte,KAAOA,EAAI,GAAKgpD,IAAMhpD,EAAIyB,GAAKsnD,KAAOtnD,EAAI,GACjE,OAAO0uC,MAyBT,OAtBAA,MAAM7xB,OAAS,SAASoK,GACtB,OAAO9b,UAAU1D,QAAU6/C,IAAMrgC,EAAE,GAAIsgC,IAAMtgC,EAAE,GAAIioB,YAAcoY,GAAIC,KAGvE7Y,MAAMpnC,MAAQ,SAAS2f,GACrB,OAAO9b,UAAU1D,QAAUzH,GAAKsH,MAAQ4Z,YAAMxiB,KAAKuoB,IAAIxf,OAAS,EAAGynC,WAAa5nC,MAAM4Z,SAGxFwtB,MAAMW,aAAe,SAAS9lC,GAC5B,IAAIhL,EAAI+I,MAAM0E,QAAQzC,GACtB,OAAOhL,EAAI,GAAK8sC,IAAKA,KACf9sC,EAAI,GAAK+oD,GAAIzqC,OAAO,IACpBte,GAAKyB,GAAK6c,OAAO7c,EAAI,GAAIunD,KACxB1qC,OAAOte,EAAI,GAAIse,OAAOte,KAG/BmwC,MAAMC,KAAO,WACX,OAAO2Z,oBACFzrC,QAAQyqC,GAAIC,KACZjgD,MAAMA,QAGN4/C,UAAUxY,OCzCJ,SAAS0Z,sBACtB,IAAIvrC,QAAU,IACVvV,OAAS,EAAG,GACZtH,EAAI,EAER,SAAS0uC,MAAM5K,GACb,GAAIA,GAAKA,EAAG,OAAOx8B,MAAM67C,OAAOtmC,OAAQinB,EAAG,EAAG9jC,IAsBhD,OAnBA0uC,MAAM7xB,OAAS,SAASoK,GACtB,OAAO9b,UAAU1D,QAAUoV,OAASqE,YAAMxiB,KAAKuoB,GAAIjnB,EAAI4J,KAAKsQ,IAAI2C,OAAOpV,OAAQH,MAAMG,OAAS,GAAIinC,OAAS7xB,OAAOqE,SAGpHwtB,MAAMpnC,MAAQ,SAAS2f,GACrB,OAAO9b,UAAU1D,QAAUH,MAAQ4Z,YAAMxiB,KAAKuoB,GAAIjnB,EAAI4J,KAAKsQ,IAAI2C,OAAOpV,OAAQH,MAAMG,OAAS,GAAIinC,OAASpnC,MAAM4Z,SAGlHwtB,MAAMW,aAAe,SAAS9lC,GAC5B,IAAIhL,EAAI+I,MAAM0E,QAAQzC,GACtB,OAAQsT,OAAOte,EAAI,GAAIse,OAAOte,KAGhCmwC,MAAMC,KAAO,WACX,OAAOyZ,sBACFvrC,OAAOA,QACPvV,MAAMA,QAGNonC,MC/BT,IAAImN,YAAK,IAAIl2C,KACTm2C,YAAK,IAAIn2C,KAEE,SAAS4iD,YAAYC,OAAQC,QAASluC,MAAOjJ,OAE1D,SAAS+1C,SAAS3hD,MAChB,OAAO8iD,OAAO9iD,KAAO,IAAIC,MAAMD,OAAQA,KA4DzC,OAzDA2hD,SAASjwC,MAAQiwC,SAEjBA,SAASt1B,KAAO,SAASrsB,MACvB,OAAO8iD,OAAO9iD,KAAO,IAAIC,KAAKD,KAAO,IAAK+iD,QAAQ/iD,KAAM,GAAI8iD,OAAO9iD,MAAOA,MAG5E2hD,SAAS72C,MAAQ,SAAS9K,MACxB,IAAIu9C,GAAKoE,SAAS3hD,MACdmqC,GAAKwX,SAASt1B,KAAKrsB,MACvB,OAAOA,KAAOu9C,GAAKpT,GAAKnqC,KAAOu9C,GAAKpT,IAGtCwX,SAASqB,OAAS,SAAShjD,KAAMumC,MAC/B,OAAOwc,QAAQ/iD,KAAO,IAAIC,MAAMD,MAAe,MAARumC,KAAe,EAAIriC,KAAKwN,MAAM60B,OAAQvmC,MAG/E2hD,SAAS//C,MAAQ,SAASrD,MAAO+nC,KAAMC,MACrC,IAAgB0c,SAAZrhD,SAGJ,GAFArD,MAAQojD,SAASt1B,KAAK9tB,OACtBgoC,KAAe,MAARA,KAAe,EAAIriC,KAAKwN,MAAM60B,QAC/BhoC,MAAQ+nC,MAAWC,KAAO,GAAI,OAAO3kC,MAC3C,GAAGA,MAAM2E,KAAK08C,SAAW,IAAIhjD,MAAM1B,QAASwkD,QAAQxkD,MAAOgoC,MAAOuc,OAAOvkD,aAClE0kD,SAAW1kD,OAASA,MAAQ+nC,MACnC,OAAO1kC,OAGT+/C,SAAS5tC,OAAS,SAAS5V,MACzB,OAAO0kD,YAAY,SAAS7iD,MAC1B,GAAIA,MAAQA,KAAM,KAAO8iD,OAAO9iD,OAAQ7B,KAAK6B,OAAOA,KAAKs6C,QAAQt6C,KAAO,IACvE,SAASA,KAAMumC,MAChB,GAAIvmC,MAAQA,KACV,GAAIumC,KAAO,EAAG,OAASA,MAAQ,GAC7B,KAAOwc,QAAQ/iD,MAAO,IAAK7B,KAAK6B,aAC3B,OAASumC,MAAQ,GACtB,KAAOwc,QAAQ/iD,KAAM,IAAM7B,KAAK6B,YAMpC6U,QACF8sC,SAAS9sC,MAAQ,SAAStW,MAAOwO,KAG/B,OAFAopC,YAAGmE,SAAS/7C,OAAQ63C,YAAGkE,SAASvtC,KAChC+1C,OAAO3M,aAAK2M,OAAO1M,aACZlyC,KAAKwN,MAAMmD,MAAMshC,YAAIC,eAG9BuL,SAASziC,MAAQ,SAASqnB,MAExB,OADAA,KAAOriC,KAAKwN,MAAM60B,MACV9kC,SAAS8kC,OAAWA,KAAO,EAC3BA,KAAO,EACTob,SAAS5tC,OAAOnI,MACZ,SAASzS,GAAK,OAAOyS,MAAMzS,GAAKotC,MAAS,GACzC,SAASptC,GAAK,OAAOwoD,SAAS9sC,MAAM,EAAG1b,GAAKotC,MAAS,IAH3Cob,SADoB,OAQrCA,SChET,IAAIuB,wBAAcvB,YAAS,aAExB,SAAS3hD,KAAMumC,MAChBvmC,KAAKs6C,SAASt6C,KAAOumC,OACpB,SAAShoC,MAAOwO,KACjB,OAAOA,IAAMxO,QAIf2kD,wBAAYhkC,MAAQ,SAASypB,GAE3B,OADAA,EAAIzkC,KAAKwN,MAAMi3B,GACVlnC,SAASknC,IAAQA,EAAI,EACpBA,EAAI,EACHgZ,YAAS,SAAS3hD,MACvBA,KAAKs6C,QAAQp2C,KAAKwN,MAAM1R,KAAO2oC,GAAKA,IACnC,SAAS3oC,KAAMumC,MAChBvmC,KAAKs6C,SAASt6C,KAAOumC,KAAOoC,IAC3B,SAASpqC,MAAOwO,KACjB,OAAQA,IAAMxO,OAASoqC,IANJua,wBADgB,MAWxBA,4CCvBJC,gBDwBeD,wBAAYthD,MCxBV,KAGjBwhD,aAAe,OCDtBC,cAAS1B,YAAS,SAAS3hD,MAC7BA,KAAKs6C,QAAQt6C,KAAOA,KAAKmD,oBACxB,SAASnD,KAAMumC,MAChBvmC,KAAKs6C,SAASt6C,KDNY,ICMLumC,OACpB,SAAShoC,MAAOwO,KACjB,OAAQA,IAAMxO,ODRY,KCSzB,SAASyB,MACV,OAAOA,KAAKsjD,kBAGCD,yBCVXE,eDWiBF,cAAOzhD,MCXf+/C,YAAS,SAAS3hD,MAC7BA,KAAKs6C,QAAQt6C,KAAOA,KAAKmD,kBFJC,IEImBnD,KAAKiD,eACjD,SAASjD,KAAMumC,MAChBvmC,KAAKs6C,SAASt6C,KAAOumC,KAAO4c,iBAC3B,SAAS5kD,MAAOwO,KACjB,OAAQA,IAAMxO,OAAS4kD,gBACtB,SAASnjD,MACV,OAAOA,KAAK+C,gBAGCwgD,yBCVXC,WDWiBD,cAAO3hD,MCXjB+/C,YAAS,SAAS3hD,MAC3BA,KAAKs6C,QAAQt6C,KAAOA,KAAKmD,kBHJC,IGImBnD,KAAKiD,aAAgCjD,KAAK+C,aAAeogD,iBACrG,SAASnjD,KAAMumC,MAChBvmC,KAAKs6C,SAASt6C,KHJU,KGIHumC,OACpB,SAAShoC,MAAOwO,KACjB,OAAQA,IAAMxO,OHNU,MGOvB,SAASyB,MACV,OAAOA,KAAK0C,cAGC8gD,mBCVXngD,SDWemgD,UAAK5hD,MCXd+/C,YAAS,SAAS3hD,MAC1BA,KAAKyjD,SAAS,EAAG,EAAG,EAAG,IACtB,SAASzjD,KAAMumC,MAChBvmC,KAAK0jD,QAAQ1jD,KAAKwD,UAAY+iC,OAC7B,SAAShoC,MAAOwO,KACjB,OAAQA,IAAMxO,OAASwO,IAAI42C,oBAAsBplD,MAAMolD,qBAAuBR,gBJLvD,OIMtB,SAASnjD,MACV,OAAOA,KAAKwD,UAAY,KAGXH,gBACGA,QAAIzB,MCXtB,SAASgiD,QAAQ/qD,GACf,OAAO8oD,YAAS,SAAS3hD,MACvBA,KAAK0jD,QAAQ1jD,KAAKwD,WAAaxD,KAAKsD,SAAW,EAAIzK,GAAK,GACxDmH,KAAKyjD,SAAS,EAAG,EAAG,EAAG,IACtB,SAASzjD,KAAMumC,MAChBvmC,KAAK0jD,QAAQ1jD,KAAKwD,UAAmB,EAAP+iC,OAC7B,SAAShoC,MAAOwO,KACjB,OAAQA,IAAMxO,OAASwO,IAAI42C,oBAAsBplD,MAAMolD,qBAAuBR,gBAAkBC,eAI7F,IAAIS,OAASD,QAAQ,GACjBE,OAASF,QAAQ,GACjBG,QAAUH,QAAQ,GAClBI,UAAYJ,QAAQ,GACpBK,SAAWL,QAAQ,GACnBM,OAASN,QAAQ,GACjBO,SAAWP,QAAQ,GClB1BlgD,aDoBiBmgD,OAAOjiD,MACPkiD,OAAOliD,MACNmiD,QAAQniD,MACNoiD,UAAUpiD,MACXqiD,SAASriD,MACXsiD,OAAOtiD,MACLuiD,SAASviD,MC1BpB+/C,YAAS,SAAS3hD,MAC5BA,KAAK0jD,QAAQ,GACb1jD,KAAKyjD,SAAS,EAAG,EAAG,EAAG,IACtB,SAASzjD,KAAMumC,MAChBvmC,KAAKokD,SAASpkD,KAAK2D,WAAa4iC,OAC/B,SAAShoC,MAAOwO,KACjB,OAAOA,IAAIpJ,WAAapF,MAAMoF,WAAyD,IAA3CoJ,IAAI3I,cAAgB7F,MAAM6F,gBACrE,SAASpE,MACV,OAAOA,KAAK2D,cAGCD,sBCXXW,WDYgBX,YAAM9B,MCZf+/C,YAAS,SAAS3hD,MAC3BA,KAAKokD,SAAS,EAAG,GACjBpkD,KAAKyjD,SAAS,EAAG,EAAG,EAAG,IACtB,SAASzjD,KAAMumC,MAChBvmC,KAAKqkD,YAAYrkD,KAAKoE,cAAgBmiC,OACrC,SAAShoC,MAAOwO,KACjB,OAAOA,IAAI3I,cAAgB7F,MAAM6F,eAChC,SAASpE,MACV,OAAOA,KAAKoE,iBAIdC,UAAK6a,MAAQ,SAASypB,GACpB,OAAQlnC,SAASknC,EAAIzkC,KAAKwN,MAAMi3B,KAASA,EAAI,EAAYgZ,YAAS,SAAS3hD,MACzEA,KAAKqkD,YAAYngD,KAAKwN,MAAM1R,KAAKoE,cAAgBukC,GAAKA,GACtD3oC,KAAKokD,SAAS,EAAG,GACjBpkD,KAAKyjD,SAAS,EAAG,EAAG,EAAG,IACtB,SAASzjD,KAAMumC,MAChBvmC,KAAKqkD,YAAYrkD,KAAKoE,cAAgBmiC,KAAOoC,KALG,MASrCtkC,uBCrBXigD,WDsBejgD,UAAKzC,MCtBR+/C,YAAS,SAAS3hD,MAChCA,KAAKukD,cAAc,EAAG,IACrB,SAASvkD,KAAMumC,MAChBvmC,KAAKs6C,SAASt6C,KAAOumC,KAAO4c,iBAC3B,SAAS5kD,MAAOwO,KACjB,OAAQA,IAAMxO,OAAS4kD,gBACtB,SAASnjD,MACV,OAAOA,KAAKwkD,mBCPVC,SDWoBH,UAAU1iD,MCXpB+/C,YAAS,SAAS3hD,MAC9BA,KAAK0kD,cAAc,EAAG,EAAG,IACxB,SAAS1kD,KAAMumC,MAChBvmC,KAAKs6C,SAASt6C,KTJU,KSIHumC,OACpB,SAAShoC,MAAOwO,KACjB,OAAQA,IAAMxO,OTNU,MSOvB,SAASyB,MACV,OAAOA,KAAK2kD,iBCPVC,QDWkBH,QAAQ7iD,MCXjB+/C,YAAS,SAAS3hD,MAC7BA,KAAK6kD,YAAY,EAAG,EAAG,EAAG,IACzB,SAAS7kD,KAAMumC,MAChBvmC,KAAK8kD,WAAW9kD,KAAK+kD,aAAexe,OACnC,SAAShoC,MAAOwO,KACjB,OAAQA,IAAMxO,OVLS,OUMtB,SAASyB,MACV,OAAOA,KAAK+kD,aAAe,KAGdH,kBACMA,OAAOhjD,MCX5B,SAASojD,WAAWnsD,GAClB,OAAO8oD,YAAS,SAAS3hD,MACvBA,KAAK8kD,WAAW9kD,KAAK+kD,cAAgB/kD,KAAKilD,YAAc,EAAIpsD,GAAK,GACjEmH,KAAK6kD,YAAY,EAAG,EAAG,EAAG,IACzB,SAAS7kD,KAAMumC,MAChBvmC,KAAK8kD,WAAW9kD,KAAK+kD,aAAsB,EAAPxe,OACnC,SAAShoC,MAAOwO,KACjB,OAAQA,IAAMxO,OAAS6kD,eAIpB,IAAI8B,UAAYF,WAAW,GACvBG,UAAYH,WAAW,GACvBI,WAAaJ,WAAW,GACxBK,aAAeL,WAAW,GAC1BM,YAAcN,WAAW,GACzBO,UAAYP,WAAW,GACvBQ,YAAcR,WAAW,GClBhCS,UDoBoBP,UAAUtjD,MACVujD,UAAUvjD,MACTwjD,WAAWxjD,MACTyjD,aAAazjD,MACd0jD,YAAY1jD,MACd2jD,UAAU3jD,MACR4jD,YAAY5jD,MC1BvB+/C,YAAS,SAAS3hD,MAC/BA,KAAK8kD,WAAW,GAChB9kD,KAAK6kD,YAAY,EAAG,EAAG,EAAG,IACzB,SAAS7kD,KAAMumC,MAChBvmC,KAAK0lD,YAAY1lD,KAAK2lD,cAAgBpf,OACrC,SAAShoC,MAAOwO,KACjB,OAAOA,IAAI44C,cAAgBpnD,MAAMonD,cAAkE,IAAjD54C,IAAI64C,iBAAmBrnD,MAAMqnD,mBAC9E,SAAS5lD,MACV,OAAOA,KAAK2lD,iBCRVE,SDYmBJ,SAAS7jD,MCZlB+/C,YAAS,SAAS3hD,MAC9BA,KAAK0lD,YAAY,EAAG,GACpB1lD,KAAK6kD,YAAY,EAAG,EAAG,EAAG,IACzB,SAAS7kD,KAAMumC,MAChBvmC,KAAK8lD,eAAe9lD,KAAK4lD,iBAAmBrf,OAC3C,SAAShoC,MAAOwO,KACjB,OAAOA,IAAI64C,iBAAmBrnD,MAAMqnD,kBACnC,SAAS5lD,MACV,OAAOA,KAAK4lD,oBAIdC,QAAQ3mC,MAAQ,SAASypB,GACvB,OAAQlnC,SAASknC,EAAIzkC,KAAKwN,MAAMi3B,KAASA,EAAI,EAAYgZ,YAAS,SAAS3hD,MACzEA,KAAK8lD,eAAe5hD,KAAKwN,MAAM1R,KAAK4lD,iBAAmBjd,GAAKA,GAC5D3oC,KAAK0lD,YAAY,EAAG,GACpB1lD,KAAK6kD,YAAY,EAAG,EAAG,EAAG,IACzB,SAAS7kD,KAAMumC,MAChBvmC,KAAK8lD,eAAe9lD,KAAK4lD,iBAAmBrf,KAAOoC,KALH,MASrCkd,wBACOA,QAAQjkD,MCZ9B,SAASmkD,UAAU5sD,GACjB,GAAI,GAAKA,EAAE0K,GAAK1K,EAAE0K,EAAI,IAAK,CACzB,IAAI7D,KAAO,IAAIC,MAAM,EAAG9G,EAAEF,EAAGE,EAAEA,EAAGA,EAAEkJ,EAAGlJ,EAAE2J,EAAG3J,EAAE6J,EAAG7J,EAAE6sD,GAEnD,OADAhmD,KAAKqkD,YAAYlrD,EAAE0K,GACZ7D,KAET,OAAO,IAAIC,KAAK9G,EAAE0K,EAAG1K,EAAEF,EAAGE,EAAEA,EAAGA,EAAEkJ,EAAGlJ,EAAE2J,EAAG3J,EAAE6J,EAAG7J,EAAE6sD,GAGlD,SAASC,QAAQ9sD,GACf,GAAI,GAAKA,EAAE0K,GAAK1K,EAAE0K,EAAI,IAAK,CACzB,IAAI7D,KAAO,IAAIC,KAAKA,KAAKimD,KAAK,EAAG/sD,EAAEF,EAAGE,EAAEA,EAAGA,EAAEkJ,EAAGlJ,EAAE2J,EAAG3J,EAAE6J,EAAG7J,EAAE6sD,IAE5D,OADAhmD,KAAK8lD,eAAe3sD,EAAE0K,GACf7D,KAET,OAAO,IAAIC,KAAKA,KAAKimD,IAAI/sD,EAAE0K,EAAG1K,EAAEF,EAAGE,EAAEA,EAAGA,EAAEkJ,EAAGlJ,EAAE2J,EAAG3J,EAAE6J,EAAG7J,EAAE6sD,IAG3D,SAASG,QAAQtiD,GACf,OAAQA,EAAGA,EAAG5K,EAAG,EAAGE,EAAG,EAAGkJ,EAAG,EAAGS,EAAG,EAAGE,EAAG,EAAGgjD,EAAG,GA2UjD,ICzWIhH,yBACOoH,WAEAC,UACAC,SDqWPC,MAAQC,IAAK,GAAIjlC,EAAK,IAAKklC,EAAK,KAChCC,SAAW,UACXC,UAAY,KACZC,UAAY,sBAEhB,SAAS1mD,WAAIpG,MAAO4kD,KAAM5iB,OACxB,IAAI6iB,KAAO7kD,MAAQ,EAAI,IAAM,GACzBugD,QAAUsE,MAAQ7kD,MAAQA,OAAS,GACnCiI,OAASs4C,OAAOt4C,OACpB,OAAO48C,MAAQ58C,OAAS+5B,MAAQ,IAAI5yB,MAAM4yB,MAAQ/5B,OAAS,GAAGqB,KAAKs7C,MAAQrE,OAASA,QAGtF,SAASwM,QAAQ/rD,GACf,OAAOA,EAAE6F,QAAQimD,UAAW,QAG9B,SAASE,SAASC,OAChB,OAAO,IAAIvmD,OAAO,OAASumD,MAAMz+C,IAAIu+C,SAASzjD,KAAK,KAAO,IAAK,KAGjE,SAAS4jD,aAAaD,OAEpB,IADA,IAAIz+C,OAAUzP,GAAK,EAAGyB,EAAIysD,MAAMhlD,SACvBlJ,EAAIyB,GAAGgO,IAAIy+C,MAAMluD,GAAGiJ,eAAiBjJ,EAC9C,OAAOyP,IAGT,SAAS2+C,yBAAyB9tD,EAAGkhD,OAAQxhD,GAC3C,IAAIyB,EAAIosD,SAAShS,KAAK2F,OAAO7+B,MAAM3iB,EAAGA,EAAI,IAC1C,OAAOyB,GAAKnB,EAAE+tD,GAAK5sD,EAAE,GAAIzB,EAAIyB,EAAE,GAAGyH,SAAW,EAG/C,SAASolD,yBAAyBhuD,EAAGkhD,OAAQxhD,GAC3C,IAAIyB,EAAIosD,SAAShS,KAAK2F,OAAO7+B,MAAM3iB,EAAGA,EAAI,IAC1C,OAAOyB,GAAKnB,EAAE6U,GAAK1T,EAAE,GAAIzB,EAAIyB,EAAE,GAAGyH,SAAW,EAG/C,SAASqlD,sBAAsBjuD,EAAGkhD,OAAQxhD,GACxC,IAAIyB,EAAIosD,SAAShS,KAAK2F,OAAO7+B,MAAM3iB,EAAGA,EAAI,IAC1C,OAAOyB,GAAKnB,EAAEkuD,GAAK/sD,EAAE,GAAIzB,EAAIyB,EAAE,GAAGyH,SAAW,EAG/C,SAASulD,mBAAmBnuD,EAAGkhD,OAAQxhD,GACrC,IAAIyB,EAAIosD,SAAShS,KAAK2F,OAAO7+B,MAAM3iB,EAAGA,EAAI,IAC1C,OAAOyB,GAAKnB,EAAEouD,GAAKjtD,EAAE,GAAIzB,EAAIyB,EAAE,GAAGyH,SAAW,EAG/C,SAASylD,sBAAsBruD,EAAGkhD,OAAQxhD,GACxC,IAAIyB,EAAIosD,SAAShS,KAAK2F,OAAO7+B,MAAM3iB,EAAGA,EAAI,IAC1C,OAAOyB,GAAKnB,EAAEsuD,GAAKntD,EAAE,GAAIzB,EAAIyB,EAAE,GAAGyH,SAAW,EAG/C,SAAS2lD,cAAcvuD,EAAGkhD,OAAQxhD,GAChC,IAAIyB,EAAIosD,SAAShS,KAAK2F,OAAO7+B,MAAM3iB,EAAGA,EAAI,IAC1C,OAAOyB,GAAKnB,EAAE0K,GAAKvJ,EAAE,GAAIzB,EAAIyB,EAAE,GAAGyH,SAAW,EAG/C,SAAS4lD,UAAUxuD,EAAGkhD,OAAQxhD,GAC5B,IAAIyB,EAAIosD,SAAShS,KAAK2F,OAAO7+B,MAAM3iB,EAAGA,EAAI,IAC1C,OAAOyB,GAAKnB,EAAE0K,GAAKvJ,EAAE,KAAOA,EAAE,GAAK,GAAK,KAAO,KAAOzB,EAAIyB,EAAE,GAAGyH,SAAW,EAG5E,SAAS6lD,UAAUzuD,EAAGkhD,OAAQxhD,GAC5B,IAAIyB,EAAI,+BAA+Bo6C,KAAK2F,OAAO7+B,MAAM3iB,EAAGA,EAAI,IAChE,OAAOyB,GAAKnB,EAAE0uD,EAAIvtD,EAAE,GAAK,IAAMA,EAAE,IAAMA,EAAE,IAAM,OAAQzB,EAAIyB,EAAE,GAAGyH,SAAW,EAG7E,SAAS+lD,iBAAiB3uD,EAAGkhD,OAAQxhD,GACnC,IAAIyB,EAAIosD,SAAShS,KAAK2F,OAAO7+B,MAAM3iB,EAAGA,EAAI,IAC1C,OAAOyB,GAAKnB,EAAEF,EAAIqB,EAAE,GAAK,EAAGzB,EAAIyB,EAAE,GAAGyH,SAAW,EAGlD,SAASgmD,gBAAgB5uD,EAAGkhD,OAAQxhD,GAClC,IAAIyB,EAAIosD,SAAShS,KAAK2F,OAAO7+B,MAAM3iB,EAAGA,EAAI,IAC1C,OAAOyB,GAAKnB,EAAEA,GAAKmB,EAAE,GAAIzB,EAAIyB,EAAE,GAAGyH,SAAW,EAG/C,SAASimD,eAAe7uD,EAAGkhD,OAAQxhD,GACjC,IAAIyB,EAAIosD,SAAShS,KAAK2F,OAAO7+B,MAAM3iB,EAAGA,EAAI,IAC1C,OAAOyB,GAAKnB,EAAEF,EAAI,EAAGE,EAAEA,GAAKmB,EAAE,GAAIzB,EAAIyB,EAAE,GAAGyH,SAAW,EAGxD,SAASkmD,YAAY9uD,EAAGkhD,OAAQxhD,GAC9B,IAAIyB,EAAIosD,SAAShS,KAAK2F,OAAO7+B,MAAM3iB,EAAGA,EAAI,IAC1C,OAAOyB,GAAKnB,EAAEkJ,GAAK/H,EAAE,GAAIzB,EAAIyB,EAAE,GAAGyH,SAAW,EAG/C,SAASmmD,aAAa/uD,EAAGkhD,OAAQxhD,GAC/B,IAAIyB,EAAIosD,SAAShS,KAAK2F,OAAO7+B,MAAM3iB,EAAGA,EAAI,IAC1C,OAAOyB,GAAKnB,EAAE2J,GAAKxI,EAAE,GAAIzB,EAAIyB,EAAE,GAAGyH,SAAW,EAG/C,SAASomD,aAAahvD,EAAGkhD,OAAQxhD,GAC/B,IAAIyB,EAAIosD,SAAShS,KAAK2F,OAAO7+B,MAAM3iB,EAAGA,EAAI,IAC1C,OAAOyB,GAAKnB,EAAE6J,GAAK1I,EAAE,GAAIzB,EAAIyB,EAAE,GAAGyH,SAAW,EAG/C,SAASqmD,kBAAkBjvD,EAAGkhD,OAAQxhD,GACpC,IAAIyB,EAAIosD,SAAShS,KAAK2F,OAAO7+B,MAAM3iB,EAAGA,EAAI,IAC1C,OAAOyB,GAAKnB,EAAE6sD,GAAK1rD,EAAE,GAAIzB,EAAIyB,EAAE,GAAGyH,SAAW,EAG/C,SAASsmD,kBAAkBlvD,EAAGkhD,OAAQxhD,GACpC,IAAIyB,EAAIosD,SAAShS,KAAK2F,OAAO7+B,MAAM3iB,EAAGA,EAAI,IAC1C,OAAOyB,GAAKnB,EAAE6sD,EAAI9hD,KAAKwN,MAAMpX,EAAE,GAAK,KAAOzB,EAAIyB,EAAE,GAAGyH,SAAW,EAGjE,SAASumD,oBAAoBnvD,EAAGkhD,OAAQxhD,GACtC,IAAIyB,EAAIqsD,UAAUjS,KAAK2F,OAAO7+B,MAAM3iB,EAAGA,EAAI,IAC3C,OAAOyB,EAAIzB,EAAIyB,EAAE,GAAGyH,QAAU,EAGhC,SAASwmD,mBAAmBpvD,EAAGkhD,OAAQxhD,GACrC,IAAIyB,EAAIosD,SAAShS,KAAK2F,OAAO7+B,MAAM3iB,IACnC,OAAOyB,GAAKnB,EAAEqvD,GAAKluD,EAAE,GAAIzB,EAAIyB,EAAE,GAAGyH,SAAW,EAG/C,SAAS0mD,0BAA0BtvD,EAAGkhD,OAAQxhD,GAC5C,IAAIyB,EAAIosD,SAAShS,KAAK2F,OAAO7+B,MAAM3iB,IACnC,OAAOyB,GAAKnB,EAAEqvD,EAAc,KAARluD,EAAE,GAAYzB,EAAIyB,EAAE,GAAGyH,SAAW,EAGxD,SAAS2mD,iBAAiBvvD,EAAG0B,GAC3B,OAAOqF,WAAI/G,EAAEqK,UAAW3I,EAAG,GAG7B,SAAS8tD,aAAaxvD,EAAG0B,GACvB,OAAOqF,WAAI/G,EAAEuJ,WAAY7H,EAAG,GAG9B,SAAS+tD,aAAazvD,EAAG0B,GACvB,OAAOqF,WAAI/G,EAAEuJ,WAAa,IAAM,GAAI7H,EAAG,GAGzC,SAASguD,gBAAgB1vD,EAAG0B,GAC1B,OAAOqF,WAAI,EAAI4oD,QAAQj0C,MAAMk0C,SAAS5vD,GAAIA,GAAI0B,EAAG,GAGnD,SAASmuD,mBAAmB7vD,EAAG0B,GAC7B,OAAOqF,WAAI/G,EAAEgK,kBAAmBtI,EAAG,GAGrC,SAASouD,mBAAmB9vD,EAAG0B,GAC7B,OAAOmuD,mBAAmB7vD,EAAG0B,GAAK,MAGpC,SAASquD,kBAAkB/vD,EAAG0B,GAC5B,OAAOqF,WAAI/G,EAAEwK,WAAa,EAAG9I,EAAG,GAGlC,SAASsuD,cAAchwD,EAAG0B,GACxB,OAAOqF,WAAI/G,EAAE4J,aAAclI,EAAG,GAGhC,SAASuuD,cAAcjwD,EAAG0B,GACxB,OAAOqF,WAAI/G,EAAE8J,aAAcpI,EAAG,GAGhC,SAASwuD,0BAA0BlwD,GACjC,IAAIkK,IAAMlK,EAAEmK,SACZ,OAAe,IAARD,IAAY,EAAIA,IAGzB,SAASimD,uBAAuBnwD,EAAG0B,GACjC,OAAOqF,WAAIqpD,OAAW10C,MAAMk0C,SAAS5vD,GAAIA,GAAI0B,EAAG,GAGlD,SAAS2uD,oBAAoBrwD,EAAG0B,GAC9B,IAAIwI,IAAMlK,EAAEmK,SAEZ,OADAnK,EAAKkK,KAAO,GAAa,IAARA,IAAaomD,SAAatwD,GAAKswD,SAAap9B,KAAKlzB,GAC3D+G,WAAIupD,SAAa50C,MAAMk0C,SAAS5vD,GAAIA,IAA+B,IAAzB4vD,SAAS5vD,GAAGmK,UAAiBzI,EAAG,GAGnF,SAAS6uD,0BAA0BvwD,GACjC,OAAOA,EAAEmK,SAGX,SAASqmD,uBAAuBxwD,EAAG0B,GACjC,OAAOqF,WAAI0pD,OAAW/0C,MAAMk0C,SAAS5vD,GAAIA,GAAI0B,EAAG,GAGlD,SAASgvD,kBAAW1wD,EAAG0B,GACrB,OAAOqF,WAAI/G,EAAEiL,cAAgB,IAAKvJ,EAAG,GAGvC,SAASivD,eAAe3wD,EAAG0B,GACzB,OAAOqF,WAAI/G,EAAEiL,cAAgB,IAAOvJ,EAAG,GAGzC,SAASkvD,WAAW5wD,GAClB,IAAIy9C,EAAIz9C,EAAEwqD,oBACV,OAAQ/M,EAAI,EAAI,KAAOA,IAAM,EAAG,MAC1B12C,WAAI02C,EAAI,GAAK,EAAG,IAAK,GACrB12C,WAAI02C,EAAI,GAAI,IAAK,GAGzB,SAASoT,oBAAoB7wD,EAAG0B,GAC9B,OAAOqF,WAAI/G,EAAE4rD,aAAclqD,EAAG,GAGhC,SAASovD,gBAAgB9wD,EAAG0B,GAC1B,OAAOqF,WAAI/G,EAAEwrD,cAAe9pD,EAAG,GAGjC,SAASqvD,gBAAgB/wD,EAAG0B,GAC1B,OAAOqF,WAAI/G,EAAEwrD,cAAgB,IAAM,GAAI9pD,EAAG,GAG5C,SAASsvD,mBAAmBhxD,EAAG0B,GAC7B,OAAOqF,WAAI,EAAI0kD,WAAO/vC,MAAMgxC,YAAQ1sD,GAAIA,GAAI0B,EAAG,GAGjD,SAASuvD,sBAAsBjxD,EAAG0B,GAChC,OAAOqF,WAAI/G,EAAEkxD,qBAAsBxvD,EAAG,GAGxC,SAASyvD,sBAAsBnxD,EAAG0B,GAChC,OAAOuvD,sBAAsBjxD,EAAG0B,GAAK,MAGvC,SAAS0vD,qBAAqBpxD,EAAG0B,GAC/B,OAAOqF,WAAI/G,EAAEwsD,cAAgB,EAAG9qD,EAAG,GAGrC,SAAS2vD,iBAAiBrxD,EAAG0B,GAC3B,OAAOqF,WAAI/G,EAAEqrD,gBAAiB3pD,EAAG,GAGnC,SAAS4vD,iBAAiBtxD,EAAG0B,GAC3B,OAAOqF,WAAI/G,EAAEmqD,gBAAiBzoD,EAAG,GAGnC,SAAS6vD,6BAA6BvxD,GACpC,IAAIwxD,IAAMxxD,EAAE8rD,YACZ,OAAe,IAAR0F,IAAY,EAAIA,IAGzB,SAASC,0BAA0BzxD,EAAG0B,GACpC,OAAOqF,WAAIglD,UAAUrwC,MAAMgxC,YAAQ1sD,GAAIA,GAAI0B,EAAG,GAGhD,SAASgwD,uBAAuB1xD,EAAG0B,GACjC,IAAIwI,IAAMlK,EAAE8rD,YAEZ,OADA9rD,EAAKkK,KAAO,GAAa,IAARA,IAAaiiD,YAAYnsD,GAAKmsD,YAAYj5B,KAAKlzB,GACzD+G,WAAIolD,YAAYzwC,MAAMgxC,YAAQ1sD,GAAIA,IAAiC,IAA3B0sD,YAAQ1sD,GAAG8rD,aAAoBpqD,EAAG,GAGnF,SAASiwD,6BAA6B3xD,GACpC,OAAOA,EAAE8rD,YAGX,SAAS8F,0BAA0B5xD,EAAG0B,GACpC,OAAOqF,WAAIilD,UAAUtwC,MAAMgxC,YAAQ1sD,GAAIA,GAAI0B,EAAG,GAGhD,SAASmwD,cAAc7xD,EAAG0B,GACxB,OAAOqF,WAAI/G,EAAEysD,iBAAmB,IAAK/qD,EAAG,GAG1C,SAASowD,kBAAkB9xD,EAAG0B,GAC5B,OAAOqF,WAAI/G,EAAEysD,iBAAmB,IAAO/qD,EAAG,GAG5C,SAASqwD,gBACP,MAAO,QAGT,SAASC,uBACP,MAAO,IAGT,SAASC,oBAAoBjyD,GAC3B,OAAQA,EAGV,SAASkyD,2BAA2BlyD,GAClC,OAAO+K,KAAKwN,OAAOvY,EAAI,MC3mBV,SAAS+nD,4BAAc3W,YAMpC,OALAyU,yBDea,SAASmC,aAAanC,QACnC,IAAIsM,gBAAkBtM,OAAOuM,SACzBC,YAAcxM,OAAOh/C,KACrByrD,YAAczM,OAAO0M,KACrBC,eAAiB3M,OAAO4M,QACxBC,gBAAkB7M,OAAO8M,KACzBC,qBAAuB/M,OAAOgN,UAC9BC,cAAgBjN,OAAOkN,OACvBC,mBAAqBnN,OAAOoN,YAE5BC,SAAWvF,SAAS6E,gBACpBW,aAAetF,aAAa2E,gBAC5BY,UAAYzF,SAAS+E,iBACrBW,cAAgBxF,aAAa6E,iBAC7BY,eAAiB3F,SAASiF,sBAC1BW,mBAAqB1F,aAAa+E,sBAClCY,QAAU7F,SAASmF,eACnBW,YAAc5F,aAAaiF,eAC3BY,aAAe/F,SAASqF,oBACxBW,iBAAmB9F,aAAamF,oBAEhCY,SACF9xD,EAkPF,SAAS+xD,mBAAmB7zD,GAC1B,OAAO4yD,qBAAqB5yD,EAAEmK,WAlP9BC,EAqPF,SAAS0pD,cAAc9zD,GACrB,OAAO0yD,gBAAgB1yD,EAAEmK,WArPzBG,EAwPF,SAASypD,iBAAiB/zD,GACxB,OAAOgzD,mBAAmBhzD,EAAEwK,aAxP5BC,EA2PF,SAASupD,YAAYh0D,GACnB,OAAO8yD,cAAc9yD,EAAEwK,aA3PvBzK,EAAK,KACLC,EAAKuvD,iBACL3tD,EAAK2tD,iBACLxtC,EAAK+tC,mBACL5mD,EAAKsmD,aACL96C,EAAK+6C,aACLrtC,EAAKstC,gBACL7C,EAAKgD,mBACL/vD,EAAKiwD,kBACLpmD,EAAKqmD,cACLtuD,EAoPF,SAASuyD,aAAaj0D,GACpB,OAAOwyD,iBAAiBxyD,EAAEuJ,YAAc,MApPxC8lD,EAAK4C,oBACLtwD,EAAKuwD,2BACLroD,EAAKomD,cACLp7C,EAAKq7C,0BACLhC,EAAKiC,uBACL/B,EAAKiC,oBACLtC,EAAKwC,0BACLjC,EAAKkC,uBACLvrB,EAAK,KACLuhB,EAAK,KACL97C,EAAKgmD,kBACLvlD,EAAKwlD,eACLjC,EAAKkC,WACLvK,IAAK2L,sBAGHkC,YACFpyD,EAsOF,SAASqyD,sBAAsBn0D,GAC7B,OAAO4yD,qBAAqB5yD,EAAE8rD,cAtO9B1hD,EAyOF,SAASgqD,iBAAiBp0D,GACxB,OAAO0yD,gBAAgB1yD,EAAE8rD,cAzOzBxhD,EA4OF,SAAS+pD,oBAAoBr0D,GAC3B,OAAOgzD,mBAAmBhzD,EAAEwsD,gBA5O5B/hD,EA+OF,SAAS6pD,eAAet0D,GACtB,OAAO8yD,cAAc9yD,EAAEwsD,gBA/OvBzsD,EAAK,KACLC,EAAK6wD,oBACLjvD,EAAKivD,oBACL9uC,EAAKovC,sBACLjoD,EAAK4nD,gBACLp8C,EAAKq8C,gBACL3uC,EAAK4uC,mBACLnE,EAAKoE,sBACLnxD,EAAKsxD,qBACLznD,EAAK0nD,iBACL3vD,EAwOF,SAAS6yD,gBAAgBv0D,GACvB,OAAOwyD,iBAAiBxyD,EAAEwrD,eAAiB,MAxO3C6D,EAAK4C,oBACLtwD,EAAKuwD,2BACLroD,EAAKynD,iBACLz8C,EAAK08C,6BACLrD,EAAKuD,0BACLrD,EAAKsD,uBACL3D,EAAK4D,6BACLrD,EAAKsD,0BACL3sB,EAAK,KACLuhB,EAAK,KACL97C,EAAKmnD,cACL1mD,EAAK2mD,kBACLpD,EAAKqD,cACL1L,IAAK2L,sBAGHwC,QACF1yD,EAkJF,SAAS2yD,kBAAkBz0D,EAAGkhD,OAAQxhD,GACpC,IAAIyB,EAAImyD,eAAe/X,KAAK2F,OAAO7+B,MAAM3iB,IACzC,OAAOyB,GAAKnB,EAAE+tD,EAAIwF,mBAAmBpyD,EAAE,GAAGwH,eAAgBjJ,EAAIyB,EAAE,GAAGyH,SAAW,GAnJ9EwB,EAsJF,SAASsqD,aAAa10D,EAAGkhD,OAAQxhD,GAC/B,IAAIyB,EAAIiyD,UAAU7X,KAAK2F,OAAO7+B,MAAM3iB,IACpC,OAAOyB,GAAKnB,EAAE+tD,EAAIsF,cAAclyD,EAAE,GAAGwH,eAAgBjJ,EAAIyB,EAAE,GAAGyH,SAAW,GAvJzE0B,EA0JF,SAASqqD,gBAAgB30D,EAAGkhD,OAAQxhD,GAClC,IAAIyB,EAAIuyD,aAAanY,KAAK2F,OAAO7+B,MAAM3iB,IACvC,OAAOyB,GAAKnB,EAAEF,EAAI6zD,iBAAiBxyD,EAAE,GAAGwH,eAAgBjJ,EAAIyB,EAAE,GAAGyH,SAAW,GA3J5E6B,EA8JF,SAASmqD,WAAW50D,EAAGkhD,OAAQxhD,GAC7B,IAAIyB,EAAIqyD,QAAQjY,KAAK2F,OAAO7+B,MAAM3iB,IAClC,OAAOyB,GAAKnB,EAAEF,EAAI2zD,YAAYtyD,EAAE,GAAGwH,eAAgBjJ,EAAIyB,EAAE,GAAGyH,SAAW,GA/JvE7I,EAkKF,SAAS80D,oBAAoB70D,EAAGkhD,OAAQxhD,GACtC,OAAOo1D,eAAe90D,EAAGmyD,gBAAiBjR,OAAQxhD,IAlKlDM,EAAK4uD,gBACLhtD,EAAKgtD,gBACL7sC,EAAKmtC,kBACLhmD,EAAK4lD,YACLp6C,EAAKo6C,YACL1sC,EAAKysC,eACLhC,EAAKoC,kBACLnvD,EAAK6uD,iBACLhlD,EAAKolD,aACLrtD,EA+HF,SAASqzD,YAAY/0D,EAAGkhD,OAAQxhD,GAC9B,IAAIyB,EAAI+xD,SAAS3X,KAAK2F,OAAO7+B,MAAM3iB,IACnC,OAAOyB,GAAKnB,EAAE0B,EAAIyxD,aAAahyD,EAAE,GAAGwH,eAAgBjJ,EAAIyB,EAAE,GAAGyH,SAAW,GAhIxEymD,EAAKD,mBACLztD,EAAK2tD,0BACLzlD,EAAKmlD,aACLn6C,EAAKm5C,yBACLE,EAAKD,sBACLG,EAAKD,mBACLJ,EAAKD,yBACLQ,EAAKD,sBACLppB,EAmJF,SAAS+vB,gBAAgBh1D,EAAGkhD,OAAQxhD,GAClC,OAAOo1D,eAAe90D,EAAGqyD,YAAanR,OAAQxhD,IAnJ9C8mD,EAsJF,SAASyO,gBAAgBj1D,EAAGkhD,OAAQxhD,GAClC,OAAOo1D,eAAe90D,EAAGsyD,YAAapR,OAAQxhD,IAtJ9CgL,EAAK8jD,UACLrjD,EAAKojD,cACLG,EAAKD,UACLpI,IAAK8I,qBAWP,SAAS7H,UAAUjC,UAAWuO,SAC5B,OAAO,SAAS/sD,MACd,IAII9G,EACAgH,IACAE,OANAi6C,UACAxhD,GAAK,EACL0iB,EAAI,EACJjhB,EAAIkkD,UAAUz8C,OAOlB,IAFM/B,gBAAgBC,OAAOD,KAAO,IAAIC,MAAMD,SAErCnH,EAAIyB,GACqB,KAA5BkkD,UAAUxjC,WAAWniB,KACvBwhD,OAAO9zC,KAAKi4C,UAAUhjC,MAAMD,EAAG1iB,IACgB,OAA1CqH,IAAMqmD,KAAKrtD,EAAIslD,UAAU3e,SAAShnC,KAAcK,EAAIslD,UAAU3e,SAAShnC,GACvEqH,IAAY,MAANhH,EAAY,IAAM,KACzBkH,OAAS2sD,QAAQ7zD,MAAIA,EAAIkH,OAAOJ,KAAME,MAC1Cm6C,OAAO9zC,KAAKrN,GACZqiB,EAAI1iB,EAAI,GAKZ,OADAwhD,OAAO9zC,KAAKi4C,UAAUhjC,MAAMD,EAAG1iB,IACxBwhD,OAAOj3C,KAAK,KAIvB,SAASirD,SAAS7P,UAAW8P,SAC3B,OAAO,SAASjU,QACd,IAEIkU,KAAMlrD,IAFNlK,EAAIgtD,QAAQ,MAGhB,GAFQ8H,eAAe90D,EAAGqlD,UAAWnE,QAAU,GAAI,IAE1CA,OAAOt4C,OAAQ,OAAO,KAG/B,GAAI,MAAO5I,EAAG,OAAO,IAAI8G,KAAK9G,EAAEqvD,GAMhC,GAHI,MAAOrvD,IAAGA,EAAEkJ,EAAIlJ,EAAEkJ,EAAI,GAAW,GAANlJ,EAAE0B,GAG7B,MAAO1B,EAAG,CACZ,GAAIA,EAAEouD,EAAI,GAAKpuD,EAAEouD,EAAI,GAAI,OAAO,KAC1B,MAAOpuD,IAAIA,EAAE+tD,EAAI,GACnB,MAAO/tD,GAETo1D,MAD8BlrD,KAA9BkrD,KAAOtI,QAAQE,QAAQhtD,EAAE0K,KAAgBohD,aAC5B,GAAa,IAAR5hD,IAAY8hD,UAAU94B,KAAKkiC,MAAQpJ,UAAUoJ,MAC/DA,KAAO3J,WAAO5B,OAAOuL,KAAkB,GAAXp1D,EAAEouD,EAAI,IAClCpuD,EAAE0K,EAAI0qD,KAAK3I,iBACXzsD,EAAEF,EAAIs1D,KAAK5I,cACXxsD,EAAEA,EAAIo1D,KAAKxJ,cAAgB5rD,EAAE+tD,EAAI,GAAK,IAGtCqH,MAD8BlrD,KAA9BkrD,KAAOD,QAAQnI,QAAQhtD,EAAE0K,KAAgBP,UAC5B,GAAa,IAARD,IAAYumD,OAAWv9B,KAAKkiC,MAAQ3E,OAAW2E,MACjEA,KAAOzF,QAAQ9F,OAAOuL,KAAkB,GAAXp1D,EAAEouD,EAAI,IACnCpuD,EAAE0K,EAAI0qD,KAAKnqD,cACXjL,EAAEF,EAAIs1D,KAAK5qD,WACXxK,EAAEA,EAAIo1D,KAAK/qD,WAAarK,EAAE+tD,EAAI,GAAK,QAE5B,MAAO/tD,GAAK,MAAOA,KACtB,MAAOA,IAAIA,EAAE+tD,EAAI,MAAO/tD,EAAIA,EAAE6U,EAAI,EAAI,MAAO7U,EAAI,EAAI,GAC3DkK,IAAM,MAAOlK,EAAI8sD,QAAQE,QAAQhtD,EAAE0K,IAAIohD,YAAcqJ,QAAQnI,QAAQhtD,EAAE0K,IAAIP,SAC3EnK,EAAEF,EAAI,EACNE,EAAEA,EAAI,MAAOA,GAAKA,EAAE+tD,EAAI,GAAK,EAAU,EAAN/tD,EAAEsuD,GAASpkD,IAAM,GAAK,EAAIlK,EAAE+tD,EAAU,EAAN/tD,EAAEkuD,GAAShkD,IAAM,GAAK,GAKzF,MAAI,MAAOlK,GACTA,EAAEkJ,GAAKlJ,EAAE0uD,EAAI,IAAM,EACnB1uD,EAAE2J,GAAK3J,EAAE0uD,EAAI,IACN5B,QAAQ9sD,IAIVm1D,QAAQn1D,IAInB,SAAS80D,eAAe90D,EAAGqlD,UAAWnE,OAAQ9+B,GAO5C,IANA,IAGIriB,EACA4N,MAJAjO,EAAI,EACJyB,EAAIkkD,UAAUz8C,OACd9I,EAAIohD,OAAOt4C,OAIRlJ,EAAIyB,GAAG,CACZ,GAAIihB,GAAKtiB,EAAG,OAAQ,EAEpB,GAAU,MADVC,EAAIslD,UAAUxjC,WAAWniB,OAIvB,GAFAK,EAAIslD,UAAU3e,OAAOhnC,OACrBiO,MAAQ6mD,OAAOz0D,KAAKqtD,KAAO/H,UAAU3e,OAAOhnC,KAAOK,MACnCqiB,EAAIzU,MAAM3N,EAAGkhD,OAAQ9+B,IAAM,EAAI,OAAQ,OAClD,GAAIriB,GAAKmhD,OAAOr/B,WAAWO,KAChC,OAAQ,EAIZ,OAAOA,EAgFT,OA1LAwxC,QAAQ3uB,EAAIqiB,UAAU+K,YAAauB,SACnCA,QAAQpN,EAAIc,UAAUgL,YAAasB,SACnCA,QAAQ7zD,EAAIunD,UAAU6K,gBAAiByB,SACvCM,WAAWjvB,EAAIqiB,UAAU+K,YAAa6B,YACtCA,WAAW1N,EAAIc,UAAUgL,YAAa4B,YACtCA,WAAWn0D,EAAIunD,UAAU6K,gBAAiB+B,aAsLxCjtD,OAAQ,SAAAA,OAASo+C,WACf,IAAItjC,EAAIulC,UAAUjC,WAAa,GAAIuO,SAEnC,OADA7xC,EAAEvY,SAAW,WAAa,OAAO67C,WAC1BtjC,GAETpU,MAAO,SAAAA,MAAS03C,WACd,IAAI3jD,EAAIwzD,SAAS7P,WAAa,GAAIuH,WAElC,OADAlrD,EAAE8H,SAAW,WAAa,OAAO67C,WAC1B3jD,GAETwrD,UAAW,SAAAA,UAAS7H,WAClB,IAAItjC,EAAIulC,UAAUjC,WAAa,GAAI6O,YAEnC,OADAnyC,EAAEvY,SAAW,WAAa,OAAO67C,WAC1BtjC,GAETorC,SAAU,SAAAA,SAAS9H,WACjB,IAAI3jD,EAAIwzD,SAAS7P,UAAWyH,SAE5B,OADAprD,EAAE8H,SAAW,WAAa,OAAO67C,WAC1B3jD,IClVFsmD,CAAa5W,YACtB6b,WAAapH,yBAAO5+C,OACR4+C,yBAAOl4C,MACnBu/C,UAAYrH,yBAAOqH,UACnBC,SAAWtH,yBAAOsH,SACXtH,yBAjBTkC,EACEqK,SAAU,SACVvrD,KAAM,aACN0rD,KAAM,eACNE,SAAU,KAAM,MAChBE,MAAO,SAAU,SAAU,UAAW,YAAa,WAAY,SAAU,YACzEE,WAAY,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,OACtDE,QAAS,UAAW,WAAY,QAAS,QAAS,MAAO,OAAQ,OAAQ,SAAU,YAAa,UAAW,WAAY,YACvHE,aAAc,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,SCR7EnsD,KAAKtF,UAAU6zD,aAEzBnI,UARoB,0BCMV,IAAIpmD,KAAK,6BAEnBqmD,SDRoB,yBCM1B,ICAImI,oBAAiB,IACjBtL,oBAAkC,GAAjBsL,oBACjBC,kBAAgC,GAAjBvL,oBACfwL,iBAA6B,GAAfD,kBACdtL,kBAA6B,EAAduL,iBACfC,cAA8B,GAAdD,iBAChBE,aAA6B,IAAdF,iBAEnB,SAAS3uD,UAAKjG,GACZ,OAAO,IAAIkG,KAAKlG,GAGlB,SAASosC,YAAOpsC,GACd,OAAOA,aAAakG,MAAQlG,GAAK,IAAIkG,MAAMlG,GAGtC,SAAS+0D,SAASzqD,KAAMX,MAAO6qD,KAAMlrD,IAAKmgD,KAAMD,OAAQF,OAAQH,YAAa9iD,QAClF,IAAI4oC,MAAQzwB,WAAW8kC,oBAAeC,YAClCtT,OAAShB,MAAMgB,OACf7yB,OAAS6xB,MAAM7xB,OAEf43C,kBAAoB3uD,OAAO,OAC3B4uD,aAAe5uD,OAAO,OACtB6uD,aAAe7uD,OAAO,SACtB8uD,WAAa9uD,OAAO,SACpB+uD,UAAY/uD,OAAO,SACnBgvD,WAAahvD,OAAO,SACpB+sD,YAAc/sD,OAAO,MACrBypD,WAAazpD,OAAO,MAEpBivD,gBACDhM,OAAS,EAAQoL,sBACjBpL,OAAS,EAAI,EAAIoL,sBACjBpL,OAAQ,GAAI,GAAKoL,sBACjBpL,OAAQ,GAAI,GAAKoL,sBACjBlL,OAAS,EAAQJ,sBACjBI,OAAS,EAAI,EAAIJ,sBACjBI,OAAQ,GAAI,GAAKJ,sBACjBI,OAAQ,GAAI,GAAKJ,sBACfK,KAAO,EAAQkL,oBACflL,KAAO,EAAI,EAAIkL,oBACflL,KAAO,EAAI,EAAIkL,oBACflL,KAAM,GAAI,GAAKkL,oBACdrrD,IAAM,EAAQsrD,mBACdtrD,IAAM,EAAI,EAAIsrD,mBACfJ,KAAO,EAAQnL,oBAChB1/C,MAAQ,EAAQkrD,gBAChBlrD,MAAQ,EAAI,EAAIkrD,gBACfvqD,KAAO,EAAQwqD,eAGpB,SAASpN,WAAWzhD,MAClB,OAAQqjD,OAAOrjD,MAAQA,KAAO+uD,kBACxBxL,OAAOvjD,MAAQA,KAAOgvD,aACtBxL,KAAKxjD,MAAQA,KAAOivD,aACpB5rD,IAAIrD,MAAQA,KAAOkvD,WACnBxrD,MAAM1D,MAAQA,KAAQuuD,KAAKvuD,MAAQA,KAAOmvD,UAAYC,WACtD/qD,KAAKrE,MAAQA,KAAOmtD,YACpBtD,YAAY7pD,MAGpB,SAASsvD,aAAa3N,SAAUpjD,MAAO+nC,KAAMC,MAM3C,GALgB,MAAZob,WAAkBA,SAAW,IAKT,iBAAbA,SAAuB,CAChC,IAAIjE,OAASx5C,KAAKooB,IAAIga,KAAO/nC,OAASojD,SAClC9oD,EAAI+sC,SAAS,SAAS/sC,GAAK,OAAOA,EAAE,KAAOmtC,MAAMqpB,cAAe3R,QAChE7kD,IAAMw2D,cAActtD,QACtBwkC,KAAOU,SAAS1oC,MAAQswD,aAAcvoB,KAAOuoB,aAAclN,UAC3DA,SAAWt9C,MACFxL,GAET0tC,MADA1tC,EAAIw2D,cAAc3R,OAAS2R,cAAcx2D,EAAI,GAAG,GAAKw2D,cAAcx2D,GAAG,GAAK6kD,OAAS7kD,EAAI,EAAIA,IACnF,GACT8oD,SAAW9oD,EAAE,KAEb0tC,KAAOriC,KAAKwQ,IAAIuyB,SAAS1oC,MAAO+nC,KAAMqb,UAAW,GACjDA,SAAWuB,aAIf,OAAe,MAAR3c,KAAeob,SAAWA,SAASziC,MAAMqnB,MAsClD,OAnCAyC,MAAMgB,OAAS,SAASnmC,GACtB,OAAO,IAAI5D,KAAK+pC,OAAOnmC,KAGzBmlC,MAAM7xB,OAAS,SAASoK,GACtB,OAAO9b,UAAU1D,OAASoV,OAAO7O,cAAItP,KAAKuoB,EAAG4kB,cAAWhvB,SAAS7O,IAAItI,YAGvEgpC,MAAMpC,MAAQ,SAAS+a,SAAUpb,MAC/B,IAIIxsC,EAJAZ,EAAIge,SACJg/B,GAAKh9C,EAAE,GACPi9C,GAAKj9C,EAAEA,EAAE4I,OAAS,GAClBpI,EAAIy8C,GAAKD,GAKb,OAHIx8C,IAAGI,EAAIo8C,GAAIA,GAAKC,GAAIA,GAAKr8C,GAE7BA,GADAA,EAAIu1D,aAAa3N,SAAUxL,GAAIC,GAAI7P,OAC3BxsC,EAAE6H,MAAMu0C,GAAIC,GAAK,MAClBz8C,EAAII,EAAE4qB,UAAY5qB,GAG3BivC,MAAMyY,WAAa,SAAS5sC,MAAO2pC,WACjC,OAAoB,MAAbA,UAAoBiD,WAAarhD,OAAOo+C,YAGjDxV,MAAM0Y,KAAO,SAASC,SAAUpb,MAC9B,IAAIptC,EAAIge,SACR,OAAQwqC,SAAW2N,aAAa3N,SAAUxoD,EAAE,GAAIA,EAAEA,EAAE4I,OAAS,GAAIwkC,OAC3DpvB,OAAOuqC,KAAKvoD,EAAGwoD,WACf3Y,OAGRA,MAAMC,KAAO,WACX,OAAOA,KAAKD,MAAO8lB,SAASzqD,KAAMX,MAAO6qD,KAAMlrD,IAAKmgD,KAAMD,OAAQF,OAAQH,YAAa9iD,UAGlF4oC,MAGM,IAAAumB,SAAA,WACb,OAAOT,SAAS/F,SAAUyG,UAAWC,OAAU3G,QAAS4G,SAAUC,WAAYC,WAAYC,gBAAiBzJ,YAAYjvC,QAAQ,IAAIlX,KAAK,IAAM,EAAG,GAAI,IAAIA,KAAK,IAAM,EAAG,MCrI1J6vD,WAAA,SAASh1D,GACtB,OAAOA,EAAE4N,MAAM,SAASJ,IAAI,SAAS81B,GACnC,MAAO,IAAMA,KCAF8a,sBAAO,gECAPA,uBAAO,4HCAPA,YCAAA,WAAO,4HDAPA,WAAO,6HECP6W,cAAyBpY,oBAAU,IAAK,GAAK,GAAMA,qBAAW,IAAK,GAAK,ICArEoY,cAAyBpY,qBAAW,IAAK,IAAM,KAAOA,oBAAU,GAAI,IAAM,KAE1EoY,cAAyBpY,oBAAU,IAAK,IAAM,KAAOA,oBAAU,GAAI,IAAM,KAE7EA,sBCLd,SAASqY,KAAKpuD,OACZ,IAAItH,EAAIsH,MAAMG,OACd,OAAO,SAAShI,GACd,OAAO6H,MAAMsC,KAAKwQ,IAAI,EAAGxQ,KAAKsQ,IAAIla,EAAI,EAAG4J,KAAKwN,MAAM3X,EAAIO,OAI7C01D,KAAK9W,WAAO,qgDAER8W,KAAK9W,WAAO,qgDAEV8W,KAAK9W,WAAO,qgDAEb8W,KAAK9W,WAAO,qgDCbjB,SAAS+W,WAAWC,cACjC,IAAItO,GAAK,EACLC,GAAK,EACLlE,OAAQ,EAEZ,SAAS3U,MAAM5K,GACb,IAAIrkC,GAAKqkC,EAAIwjB,KAAOC,GAAKD,IACzB,OAAOsO,aAAavS,MAAQz5C,KAAKwQ,IAAI,EAAGxQ,KAAKsQ,IAAI,EAAGza,IAAMA,GAmB5D,OAhBAivC,MAAM7xB,OAAS,SAASoK,GACtB,OAAO9b,UAAU1D,QAAU6/C,IAAMrgC,EAAE,GAAIsgC,IAAMtgC,EAAE,GAAIynB,QAAU4Y,GAAIC,KAGnE7Y,MAAM2U,MAAQ,SAASp8B,GACrB,OAAO9b,UAAU1D,QAAU47C,QAAUp8B,EAAGynB,OAAS2U,OAGnD3U,MAAMknB,aAAe,SAAS3uC,GAC5B,OAAO9b,UAAU1D,QAAUmuD,aAAe3uC,EAAGynB,OAASknB,cAGxDlnB,MAAMC,KAAO,WACX,OAAOgnB,WAAWC,cAAc/4C,QAAQyqC,GAAIC,KAAKlE,MAAMA,QAGlD6D,UAAUxY,OC5BJ,IAAAmnB,8BAAA,SAAS3R,WAEtB,IADA,IAAIlkD,EAAIkkD,UAAUz8C,OAAS,EAAI,EAAGm3C,OAAS,IAAIhwC,MAAM5O,GAAIzB,EAAI,EACtDA,EAAIyB,GAAG4+C,OAAOrgD,GAAK,IAAM2lD,UAAUhjC,MAAU,EAAJ3iB,EAAa,IAAJA,GACzD,OAAOqgD,QCDMA,QCAAA,8BAAO,gEDAPA,8BAAO,qDEAPA,oCAAO,oDCAPA,qCAAO,4ECAPA,sCAAO,0DCAPA,sCAAO,oDCAPA,mCAAO,0DCAPA,mCAAO,oDCAPA,mCAAO,4ECAPkX,SAAA,SAASC,QACtB,OAAOC,SAAoBD,OAAOA,OAAOtuD,OAAS,KCAzCsuD,YAAS,IAAInnD,MAAM,GAAG6S,OAC/B,qBACA,2BACA,iCACA,uCACA,6CACA,mDACA,yDACA,+DACA,sEACAzT,IAAI4wC,+BAES8W,cAAKK,aCZTA,YAAS,IAAInnD,MAAM,GAAG6S,OAC/B,qBACA,2BACA,iCACA,uCACA,6CACA,mDACA,yDACA,+DACA,sEACAzT,IAAI4wC,+BAES8W,cAAKK,aCZTA,YAAS,IAAInnD,MAAM,GAAG6S,OAC/B,qBACA,2BACA,iCACA,uCACA,6CACA,mDACA,yDACA,+DACA,sEACAzT,IAAI4wC,+BAES8W,cAAKK,aCALL,cAZK,IAAI9mD,MAAM,GAAG6S,OAC/B,qBACA,2BACA,iCACA,uCACA,6CACA,mDACA,yDACA,+DACA,sEACAzT,IAAI4wC,gCCES8W,cAZK,IAAI9mD,MAAM,GAAG6S,OAC/B,qBACA,2BACA,iCACA,uCACA,6CACA,mDACA,yDACA,+DACA,sEACAzT,IAAI4wC,gCCES8W,cAZK,IAAI9mD,MAAM,GAAG6S,OAC/B,qBACA,2BACA,iCACA,uCACA,6CACA,mDACA,yDACA,+DACA,sEACAzT,IAAI4wC,gCCES8W,gBAZK,IAAI9mD,MAAM,GAAG6S,OAC/B,qBACA,2BACA,iCACA,uCACA,6CACA,mDACA,yDACA,+DACA,sEACAzT,IAAI4wC,gCCES8W,gBAZK,IAAI9mD,MAAM,GAAG6S,OAC/B,qBACA,2BACA,iCACA,uCACA,6CACA,mDACA,yDACA,+DACA,sEACAzT,IAAI4wC,gCCES8W,kBAZK,IAAI9mD,MAAM,GAAG6S,OAC/B,qBACA,2BACA,iCACA,uCACA,6CACA,mDACA,yDACA,+DACA,sEACAzT,IAAI4wC,gCCAS8W,cAVK,IAAI9mD,MAAM,GAAG6S,OAC/B,qBACA,2BACA,iCACA,uCACA,6CACA,mDACA,0DACAzT,IAAI4wC,gCCES8W,cAVK,IAAI9mD,MAAM,GAAG6S,OAC/B,qBACA,2BACA,iCACA,uCACA,6CACA,mDACA,0DACAzT,IAAI4wC,gCCES8W,cAVK,IAAI9mD,MAAM,GAAG6S,OAC/B,qBACA,2BACA,iCACA,uCACA,6CACA,mDACA,0DACAzT,IAAI4wC,gCCES8W,cAVK,IAAI9mD,MAAM,GAAG6S,OAC/B,qBACA,2BACA,iCACA,uCACA,6CACA,mDACA,0DACAzT,IAAI4wC,gCCES8W,gBAVK,IAAI9mD,MAAM,GAAG6S,OAC/B,qBACA,2BACA,iCACA,uCACA,6CACA,mDACA,0DACAzT,IAAI4wC,gCCES8W,cAVK,IAAI9mD,MAAM,GAAG6S,OAC/B,qBACA,2BACA,iCACA,uCACA,6CACA,mDACA,0DACAzT,IAAI4wC,gCCES8W,cAVK,IAAI9mD,MAAM,GAAG6S,OAC/B,qBACA,2BACA,iCACA,uCACA,6CACA,mDACA,0DACAzT,IAAI4wC,gCCES8W,cAVK,IAAI9mD,MAAM,GAAG6S,OAC/B,qBACA,2BACA,iCACA,uCACA,6CACA,mDACA,0DACAzT,IAAI4wC,gCCES8W,gBAVK,IAAI9mD,MAAM,GAAG6S,OAC/B,qBACA,2BACA,iCACA,uCACA,6CACA,mDACA,0DACAzT,IAAI4wC,gCCES8W,cAVK,IAAI9mD,MAAM,GAAG6S,OAC/B,qBACA,2BACA,iCACA,uCACA,6CACA,mDACA,0DACAzT,IAAI4wC,gCCES8W,gBAVK,IAAI9mD,MAAM,GAAG6S,OAC/B,qBACA,2BACA,iCACA,uCACA,6CACA,mDACA,0DACAzT,IAAI4wC,gCCES8W,gBAVK,IAAI9mD,MAAM,GAAG6S,OAC/B,qBACA,2BACA,iCACA,uCACA,6CACA,mDACA,0DACAzT,IAAI4wC,gCCRKmX,aAAS,IAAInnD,MAAM,GAAG6S,OAC/B,qBACA,2BACA,iCACA,uCACA,6CACA,mDACA,0DACAzT,IAAI4wC,+BAES8W,eAAKK,cCALL,gBAVK,IAAI9mD,MAAM,GAAG6S,OAC/B,qBACA,2BACA,iCACA,uCACA,6CACA,mDACA,0DACAzT,IAAI4wC,gCCES8W,eAVK,IAAI9mD,MAAM,GAAG6S,OAC/B,qBACA,2BACA,iCACA,uCACA,6CACA,mDACA,0DACAzT,IAAI4wC,gCCES8W,iBAVK,IAAI9mD,MAAM,GAAG6S,OAC/B,qBACA,2BACA,iCACA,uCACA,6CACA,mDACA,0DACAzT,IAAI4wC,gCCES8W,cAVK,IAAI9mD,MAAM,GAAG6S,OAC/B,qBACA,2BACA,iCACA,uCACA,6CACA,mDACA,0DACAzT,IAAI4wC,gCCES8W,iBAVK,IAAI9mD,MAAM,GAAG6S,OAC/B,qBACA,2BACA,iCACA,uCACA,6CACA,mDACA,0DACAzT,IAAI4wC,gCCRS6W,yCAAyBpY,oBAAU,IAAK,GAAK,GAAMA,qBAAW,IAAK,GAAK,ICA5E4Y,aAAOR,cAAyBpY,qBAAW,IAAK,IAAM,KAAOA,oBAAU,GAAI,IAAM,KAEjF6Y,aAAOT,cAAyBpY,oBAAU,IAAK,IAAM,KAAOA,oBAAU,GAAI,IAAM,KAEvFz+C,UAAIy+C,sBAEO8Y,yBAAA,SAAS12D,IAClBA,EAAI,GAAKA,EAAI,KAAGA,GAAKmK,KAAKwN,MAAM3X,IACpC,IAAI22D,GAAKxsD,KAAKooB,IAAIvyB,EAAI,IAItB,OAHAb,UAAE6P,EAAI,IAAMhP,EAAI,IAChBb,UAAE4B,EAAI,IAAM,IAAM41D,GAClBx3D,UAAEJ,EAAI,GAAM,GAAM43D,GACXx3D,UAAI,ICbL+7C,YACK/wC,KAAK4xC,GACL5xC,KAAK4xC,GCFlB,SAASka,aAAKpuD,OACZ,IAAItH,EAAIsH,MAAMG,OACd,OAAO,SAAShI,GACd,OAAO6H,MAAMsC,KAAKwQ,IAAI,EAAGxQ,KAAKsQ,IAAIla,EAAI,EAAG4J,KAAKwN,MAAM3X,EAAIO,OAI7C01D,0CAAK9W,8BAAO,qgDAEhByX,cAAQX,aAAK9W,8BAAO,qgDAEpB0X,gBAAUZ,aAAK9W,8BAAO,qgDAEtB2X,eAASb,aAAK9W,8BAAO,qgDCfnB4X,sBAAwB,YACxBC,qBAAuB,cACvBC,sBAAwB,eACxBC,uBAAyB,aACzBC,uBAAyB,YACzBC,sBAAwB,cACxBC,uBAAyB,eACzBC,wBAA0B,aCHxBC,iBAHXC,OAAQ,UCKGC,cALXC,WAAY,YACZC,cAAe,cACfC,eAAgB,iBCHTn2C,gBAAQtS,MAAMvO,UAAU6gB,MCApBo2C,qBAAA,SAASxzB,GACtB,OAAOA,GCELuE,SAAM,EACNqD,WAAQ,EACR6rB,YAAS,EACT9rB,UAAO,EACP+rB,QAAU,KAEd,SAASnX,WAAWvc,GAClB,MAAO,cAAgBA,EAAI,IAAO,MAGpC,SAASwc,WAAW/2C,GAClB,MAAO,gBAAkBA,EAAI,IAAO,IAiBtC,SAASkuD,WACP,OAAQ1xD,KAAK2xD,OAGf,SAASC,UAAKC,OAAQlpB,OACpB,IAAImpB,iBACAC,WAAa,KACb3Q,WAAa,KACb4Q,cAAgB,KAChBC,cAAgB,EAChBC,cAAgB,EAChBC,YAAc,EACd7pB,EAAIupB,SAAWvvB,UAAOuvB,SAAWnsB,WAAQ,EAAI,EAC7C3H,EAAI8zB,SAAWnsB,WAAQmsB,SAAWlsB,WAAQ,IAAM,IAChDgW,UAAYkW,SAAWvvB,UAAOuvB,SAAWL,YAASlX,WAAaC,WAEnE,SAASqX,KAAKt1B,SACZ,IAAI5d,OAAuB,MAAdqzC,WAAsBppB,MAAMpC,MAAQoC,MAAMpC,MAAMh/B,MAAMohC,MAAOmpB,eAAiBnpB,MAAM7xB,SAAYi7C,WACzGhyD,OAAuB,MAAdqhD,WAAsBzY,MAAMyY,WAAazY,MAAMyY,WAAW75C,MAAMohC,MAAOmpB,eAAiBrgC,qBAAY2vB,WAC7GgR,QAAUvuD,KAAKwQ,IAAI49C,cAAe,GAAKE,YACvC5wD,MAAQonC,MAAMpnC,QACd8wD,QAAU9wD,MAAM,GAAK,GACrB+wD,QAAU/wD,MAAMA,MAAMG,OAAS,GAAK,GACpC2gC,UAAYsG,MAAMG,UA/B1B,SAASypB,YAAO5pB,OACd,IAAIga,OAAS9+C,KAAKwQ,IAAI,EAAGs0B,MAAMG,YAAc,GAAK,EAElD,OADIH,MAAMl+B,UAASk4C,OAAS9+C,KAAK4G,MAAMk4C,SAChC,SAAS7pD,GACd,OAAQ6vC,MAAM7vC,GAAK6pD,SAVvB,SAAS7c,YAAO6C,OACd,OAAO,SAAS7vC,GACd,OAAQ6vC,MAAM7vC,MAmCqC6vC,MAAMC,QACrD4pB,UAAYl2B,QAAQk2B,UAAYl2B,QAAQk2B,YAAcl2B,QACtD3Y,KAAO6uC,UAAUC,UAAU,WAAWznD,MAAM,OAC5C0nD,KAAOF,UAAUC,UAAU,SAASznD,KAAK0T,OAAQiqB,OAAO9hB,QACxD8rC,SAAWD,KAAKE,OAChBC,UAAYH,KAAKI,QAAQj+B,OAAO,KAAKk+B,KAAK,QAAS,QACnDC,KAAON,KAAKzzC,OAAO,QACnB5e,KAAOqyD,KAAKzzC,OAAO,QAEvB0E,KAAOA,KAAK9Z,MAAM8Z,KAAKmvC,QAAQG,OAAO,OAAQ,SACzCF,KAAK,QAAS,UACdA,KAAK,SAAU,SAEpBL,KAAOA,KAAK7oD,MAAMgpD,WAElBG,KAAOA,KAAKnpD,MAAMgpD,UAAUh+B,OAAO,QAC9Bk+B,KAAK,SAAU,QACfA,KAAKh1B,EAAI,IAAKuK,EAAI2pB,gBAEvB5xD,KAAOA,KAAKwJ,MAAMgpD,UAAUh+B,OAAO,QAC9Bk+B,KAAK,OAAQ,QACbA,KAAKh1B,EAAGuK,EAAI8pB,SACZW,KAAK,KAAMlB,SAAWvvB,SAAM,MAAQuvB,SAAWL,YAAS,SAAW,WACnE73B,MAAM,YAAaq4B,eAEpB11B,UAAYk2B,YACd7uC,KAAOA,KAAKuvC,WAAW52B,SACvBo2B,KAAOA,KAAKQ,WAAW52B,SACvB02B,KAAOA,KAAKE,WAAW52B,SACvBj8B,KAAOA,KAAK6yD,WAAW52B,SAEvBq2B,SAAWA,SAASO,WAAW52B,SAC1By2B,KAAK,UAAWtB,SAChBsB,KAAK,YAAa,SAASj6D,GAAK,OAAOsI,SAAStI,EAAIupC,SAASvpC,IAAM6iD,UAAU7iD,GAAKkH,KAAKmzD,aAAa,eAEzGN,UACKE,KAAK,UAAWtB,SAChBsB,KAAK,YAAa,SAASj6D,GAAK,IAAI0B,EAAIwF,KAAKmhC,WAAWwwB,OAAQ,OAAOhW,UAAUnhD,GAAK4G,SAAS5G,EAAIA,EAAE1B,IAAM0B,EAAI6nC,SAASvpC,OAG/H65D,SAASvrB,SAETzjB,KACKovC,KAAK,IAAKlB,SAAWnsB,WAAQmsB,QAAUlsB,WAClC,IAAM2C,EAAI4pB,cAAgB,IAAMG,OAAS,QAAUC,OAAS,IAAMhqB,EAAI4pB,cACtE,IAAMG,OAAS,IAAM/pB,EAAI4pB,cAAgB,QAAUI,OAAS,IAAMhqB,EAAI4pB,eAEhFQ,KACKK,KAAK,UAAW,GAChBA,KAAK,YAAa,SAASj6D,GAAK,OAAO6iD,UAAUtZ,SAASvpC,MAE/Dk6D,KACKD,KAAKh1B,EAAI,IAAKuK,EAAI2pB,eAEvB5xD,KACK0yD,KAAKh1B,EAAGuK,EAAI8pB,SACZ/xD,KAAKN,QAEVyyD,UAAU9+C,OAAOg+C,UACZqB,KAAK,OAAQ,QACbA,KAAK,YAAa,IAClBA,KAAK,cAAe,cACpBA,KAAK,cAAelB,SAAWlsB,WAAQ,QAAUksB,SAAWnsB,UAAO,MAAQ,UAEhF8sB,UACKrrB,KAAK,WAAannC,KAAK2xD,OAAStvB,WA2CvC,OAxCAuvB,KAAKjpB,MAAQ,SAASznB,GACpB,OAAO9b,UAAU1D,QAAUinC,MAAQznB,EAAG0wC,MAAQjpB,OAGhDipB,KAAKI,cAAgB,SAAS9wC,GAC5B,OAAO9b,UAAU1D,QAAUswD,cAAgB9wC,EAAG0wC,MAAQI,eAGxDJ,KAAKrrB,MAAQ,WACX,OAAOurB,cAAgB32C,gBAAMxiB,KAAKyM,WAAYwsD,MAGhDA,KAAKE,cAAgB,SAAS5wC,GAC5B,OAAO9b,UAAU1D,QAAUowD,cAAqB,MAAL5wC,KAAiB/F,gBAAMxiB,KAAKuoB,GAAI0wC,MAAQE,cAAc32C,SAGnGy2C,KAAKG,WAAa,SAAS7wC,GACzB,OAAO9b,UAAU1D,QAAUqwD,WAAkB,MAAL7wC,EAAY,KAAO/F,gBAAMxiB,KAAKuoB,GAAI0wC,MAAQG,YAAcA,WAAW52C,SAG7Gy2C,KAAKxQ,WAAa,SAASlgC,GACzB,OAAO9b,UAAU1D,QAAU0/C,WAAalgC,EAAG0wC,MAAQxQ,YAGrDwQ,KAAKwB,SAAW,SAASlyC,GACvB,OAAO9b,UAAU1D,QAAUuwD,cAAgBC,eAAiBhxC,EAAG0wC,MAAQK,eAGzEL,KAAKK,cAAgB,SAAS/wC,GAC5B,OAAO9b,UAAU1D,QAAUuwD,eAAiB/wC,EAAG0wC,MAAQK,eAGzDL,KAAKM,cAAgB,SAAShxC,GAC5B,OAAO9b,UAAU1D,QAAUwwD,eAAiBhxC,EAAG0wC,MAAQM,eAGzDN,KAAKO,YAAc,SAASjxC,GAC1B,OAAO9b,UAAU1D,QAAUywD,aAAejxC,EAAG0wC,MAAQO,aAGhDP,KClKT,IAAIyB,GAAKxvD,KAAK4xC,GACV6d,IAAM,EAAID,GAEVE,WAAaD,IADH,KAGd,SAASE,OACPxzD,KAAKyzD,IAAMzzD,KAAK0zD,IAChB1zD,KAAK2zD,IAAM3zD,KAAK4zD,IAAM,KACtB5zD,KAAKkhB,EAAI,GAGX,SAASyC,YACP,OAAO,IAAI6vC,KAGbA,KAAKl5D,UAAYqpB,UAAKrpB,WACpBsrB,YAAa4tC,KACbK,OAAQ,SAAAA,OAAS91B,EAAGv6B,GAClBxD,KAAKkhB,GAAK,KAAOlhB,KAAKyzD,IAAMzzD,KAAK2zD,KAAO51B,GAAK,KAAO/9B,KAAK0zD,IAAM1zD,KAAK4zD,KAAOpwD,IAE7EswD,UAAW,SAAAA,YACQ,OAAb9zD,KAAK2zD,MACP3zD,KAAK2zD,IAAM3zD,KAAKyzD,IAAKzzD,KAAK4zD,IAAM5zD,KAAK0zD,IACrC1zD,KAAKkhB,GAAK,MAGd6yC,OAAQ,SAAAA,OAASh2B,EAAGv6B,GAClBxD,KAAKkhB,GAAK,KAAOlhB,KAAK2zD,KAAO51B,GAAK,KAAO/9B,KAAK4zD,KAAOpwD,IAEvDwwD,iBAAkB,SAAAA,iBAASxS,GAAIyS,GAAIl2B,EAAGv6B,GACpCxD,KAAKkhB,GAAK,MAAQsgC,GAAM,MAAQyS,GAAM,KAAOj0D,KAAK2zD,KAAO51B,GAAK,KAAO/9B,KAAK4zD,KAAOpwD,IAEnF0wD,cAAe,SAAAA,cAAS1S,GAAIyS,GAAIE,GAAIC,GAAIr2B,EAAGv6B,GACzCxD,KAAKkhB,GAAK,MAAQsgC,GAAM,MAAQyS,GAAM,MAAQE,GAAM,MAAQC,GAAM,KAAOp0D,KAAK2zD,KAAO51B,GAAK,KAAO/9B,KAAK4zD,KAAOpwD,IAE/G6wD,MAAO,SAAAA,MAAS7S,GAAIyS,GAAIE,GAAIC,GAAI96D,GAC9BkoD,IAAMA,GAAIyS,IAAMA,GAAIE,IAAMA,GAAIC,IAAMA,GAAI96D,GAAKA,EAC7C,IAAIioD,GAAKvhD,KAAK2zD,IACVW,GAAKt0D,KAAK4zD,IACVW,IAAMJ,GAAK3S,GACXgT,IAAMJ,GAAKH,GACXQ,IAAMlT,GAAKC,GACXkT,IAAMJ,GAAKL,GACXU,MAAQF,IAAMA,IAAMC,IAAMA,IAG9B,GAAIp7D,EAAI,EAAG,MAAM,IAAIoW,MAAM,oBAAsBpW,GAGjD,GAAiB,OAAb0G,KAAK2zD,IACP3zD,KAAKkhB,GAAK,KAAOlhB,KAAK2zD,IAAMnS,IAAM,KAAOxhD,KAAK4zD,IAAMK,SAIjD,GAAMU,MApDD,KAyDL,GAAM9wD,KAAKooB,IAAIyoC,IAAMH,IAAMC,IAAMC,KAzD5B,MAyDgDn7D,EAKrD,CACH,IAAIs7D,IAAMT,GAAK5S,GACXsT,IAAMT,GAAKE,GACXQ,MAAQP,IAAMA,IAAMC,IAAMA,IAC1BO,MAAQH,IAAMA,IAAMC,IAAMA,IAC1BG,IAAMnxD,KAAK6Q,KAAKogD,OAChBG,IAAMpxD,KAAK6Q,KAAKigD,OAChBl8D,EAAIa,EAAIuK,KAAK4vC,KAAK4f,GAAKxvD,KAAKqxD,MAAMJ,MAAQH,MAAQI,QAAU,EAAIC,IAAMC,OAAS,GAC/EE,IAAM18D,EAAIw8D,IACVG,IAAM38D,EAAIu8D,IAGVnxD,KAAKooB,IAAIkpC,IAAM,GA1EX,OA2ENn1D,KAAKkhB,GAAK,KAAOsgC,GAAK2T,IAAMV,KAAO,KAAOR,GAAKkB,IAAMT,MAGvD10D,KAAKkhB,GAAK,IAAM5nB,EAAI,IAAMA,EAAI,WAAao7D,IAAME,IAAMH,IAAMI,KAAQ,KAAO70D,KAAK2zD,IAAMnS,GAAK4T,IAAMb,KAAO,KAAOv0D,KAAK4zD,IAAMK,GAAKmB,IAAMZ,UApBtIx0D,KAAKkhB,GAAK,KAAOlhB,KAAK2zD,IAAMnS,IAAM,KAAOxhD,KAAK4zD,IAAMK,WAuBxDoB,IAAK,SAAAA,IAASt3B,EAAGv6B,EAAGlK,EAAGg8D,GAAI1kD,GAAI2kD,KAC7Bx3B,GAAKA,EAAGv6B,GAAKA,EACb,IAAIgyD,IADYl8D,GAAKA,GACRuK,KAAKwyC,IAAIif,IAClBG,GAAKn8D,EAAIuK,KAAKyyC,IAAIgf,IAClB/T,GAAKxjB,EAAIy3B,GACTlB,GAAK9wD,EAAIiyD,GACTC,GAAK,EAAIH,IACTI,GAAKJ,IAAMD,GAAK1kD,GAAKA,GAAK0kD,GAG9B,GAAIh8D,EAAI,EAAG,MAAM,IAAIoW,MAAM,oBAAsBpW,GAGhC,OAAb0G,KAAK2zD,IACP3zD,KAAKkhB,GAAK,IAAMqgC,GAAK,IAAM+S,IAIpBzwD,KAAKooB,IAAIjsB,KAAK2zD,IAAMpS,IAnGnB,MAmGoC19C,KAAKooB,IAAIjsB,KAAK4zD,IAAMU,IAnGxD,QAoGRt0D,KAAKkhB,GAAK,IAAMqgC,GAAK,IAAM+S,IAIxBh7D,IAGDq8D,GAAK,IAAGA,GAAKA,GAAKrC,IAAMA,KAGxBqC,GAAKpC,WACPvzD,KAAKkhB,GAAK,IAAM5nB,EAAI,IAAMA,EAAI,QAAUo8D,GAAK,KAAO33B,EAAIy3B,IAAM,KAAOhyD,EAAIiyD,IAAM,IAAMn8D,EAAI,IAAMA,EAAI,QAAUo8D,GAAK,KAAO11D,KAAK2zD,IAAMpS,IAAM,KAAOvhD,KAAK4zD,IAAMU,IAIrJqB,GAnHC,OAoHR31D,KAAKkhB,GAAK,IAAM5nB,EAAI,IAAMA,EAAI,SAAWq8D,IAAMtC,IAAO,IAAMqC,GAAK,KAAO11D,KAAK2zD,IAAM51B,EAAIzkC,EAAIuK,KAAKwyC,IAAIzlC,KAAO,KAAO5Q,KAAK4zD,IAAMpwD,EAAIlK,EAAIuK,KAAKyyC,IAAI1lC,QAGlJglD,KAAM,SAAAA,KAAS73B,EAAGv6B,EAAGqjD,EAAGn+C,GACtB1I,KAAKkhB,GAAK,KAAOlhB,KAAKyzD,IAAMzzD,KAAK2zD,KAAO51B,GAAK,KAAO/9B,KAAK0zD,IAAM1zD,KAAK4zD,KAAOpwD,GAAK,MAAQqjD,EAAK,MAAQn+C,EAAK,KAAQm+C,EAAK,KAEzHvkD,SAAU,SAAAA,WACR,OAAOtC,KAAKkhB,IAIDyC,uBCjIAkyC,sBAAA,SAAS93B,GACtB,OAAO,SAASqa,WACd,OAAOra,ICFA9R,IAAMpoB,KAAKooB,IACX6qB,MAAQjzC,KAAKizC,MACbT,IAAMxyC,KAAKwyC,IACXhiC,SAAMxQ,KAAKwQ,IACXF,SAAMtQ,KAAKsQ,IACXmiC,IAAMzyC,KAAKyyC,IACX5hC,UAAO7Q,KAAK6Q,KAEZ+8C,aAAU,MACV4B,QAAKxvD,KAAK4xC,GACVqgB,OAASzC,QAAK,EACdC,SAAM,EAAID,QAMd,SAAS0C,KAAKh4B,GACnB,OAAOA,GAAK,EAAI+3B,OAAS/3B,IAAM,GAAK+3B,OAASjyD,KAAKkyD,KAAKh4B,GCdzD,SAASi4B,eAAel9D,GACtB,OAAOA,EAAEm9D,YAGX,SAASC,eAAep9D,GACtB,OAAOA,EAAEq9D,YAGX,SAASC,cAAct9D,GACrB,OAAOA,EAAEu9D,WAGX,SAASC,YAAYx9D,GACnB,OAAOA,EAAEy9D,SAGX,SAASC,YAAY19D,GACnB,OAAOA,GAAKA,EAAE29D,SAYhB,SAASC,eAAenV,GAAI+S,GAAI9S,GAAIyS,GAAIzqB,GAAImtB,GAAIjB,IAC9C,IAAIjB,IAAMlT,GAAKC,GACXkT,IAAMJ,GAAKL,GACX/iD,IAAMwkD,GAAKiB,IAAMA,IAAMjiD,UAAK+/C,IAAMA,IAAMC,IAAMA,KAC9CkC,GAAK1lD,GAAKwjD,IACVmC,IAAM3lD,GAAKujD,IACXqC,IAAMvV,GAAKqV,GACXG,IAAMzC,GAAKuC,GACXG,IAAMxV,GAAKoV,GACXK,IAAMhD,GAAK4C,GACXK,KAAOJ,IAAME,KAAO,EACpBG,KAAOJ,IAAME,KAAO,EACpBzB,GAAKwB,IAAMF,IACXrB,GAAKwB,IAAMF,IACXK,GAAK5B,GAAKA,GAAKC,GAAKA,GACpBn8D,EAAIkwC,GAAKmtB,GACT1f,EAAI6f,IAAMG,IAAMD,IAAMD,IACtBj+D,GAAK28D,GAAK,GAAK,EAAI,GAAK/gD,UAAKL,SAAI,EAAG/a,EAAIA,EAAI89D,GAAKngB,EAAIA,IACrDogB,KAAOpgB,EAAIwe,GAAKD,GAAK18D,GAAKs+D,GAC1BE,MAAQrgB,EAAIue,GAAKC,GAAK38D,GAAKs+D,GAC3BG,KAAOtgB,EAAIwe,GAAKD,GAAK18D,GAAKs+D,GAC1BI,MAAQvgB,EAAIue,GAAKC,GAAK38D,GAAKs+D,GAC3BK,IAAMJ,IAAMH,IACZQ,IAAMJ,IAAMH,IACZQ,IAAMJ,IAAML,IACZU,IAAMJ,IAAML,IAMhB,OAFIM,IAAMA,IAAMC,IAAMA,IAAMC,IAAMA,IAAMC,IAAMA,MAAKP,IAAME,IAAKD,IAAME,MAGlEK,GAAIR,IACJS,GAAIR,IACJ7C,KAAMmC,GACNlC,KAAMmC,GACNC,IAAKO,KAAO7tB,GAAKlwC,EAAI,GACrBy9D,IAAKO,KAAO9tB,GAAKlwC,EAAI,ICtEzB,SAASy+D,OAAOz7B,SACdt8B,KAAKq8B,SAAWC,QAGlBy7B,OAAOz9D,WACL09D,UAAW,SAAAA,YACTh4D,KAAKi4D,MAAQ,GAEfC,QAAS,SAAAA,UACPl4D,KAAKi4D,MAAQ3yB,KAEf6yB,UAAW,SAAAA,YACTn4D,KAAKo4D,OAAS,GAEhBC,QAAS,SAAAA,WACHr4D,KAAKi4D,OAAyB,IAAfj4D,KAAKi4D,OAA+B,IAAhBj4D,KAAKo4D,SAAep4D,KAAKq8B,SAASy3B,YACzE9zD,KAAKi4D,MAAQ,EAAIj4D,KAAKi4D,OAExBK,MAAO,SAAAA,MAASv6B,EAAGv6B,GAEjB,OADAu6B,GAAKA,EAAGv6B,GAAKA,EACLxD,KAAKo4D,QACX,KAAK,EAAGp4D,KAAKo4D,OAAS,EAAGp4D,KAAKi4D,MAAQj4D,KAAKq8B,SAAS03B,OAAOh2B,EAAGv6B,GAAKxD,KAAKq8B,SAASw3B,OAAO91B,EAAGv6B,GAAI,MAC/F,KAAK,EAAGxD,KAAKo4D,OAAS,EACtB,QAASp4D,KAAKq8B,SAAS03B,OAAOh2B,EAAGv6B,MAKxB,IAAA+0D,aAAA,SAASj8B,SACtB,OAAO,IAAIy7B,OAAOz7B,UC7Bb,SAASyB,QAAEvjC,GAChB,OAAOA,EAAE,GAGJ,SAASgJ,QAAEhJ,GAChB,OAAOA,EAAE,GCAI,IAAAg+D,SAAA,WACb,IAAIz6B,EAAI06B,QACJj1D,EAAIk1D,QACJC,QAAUvgB,uBAAS,GACnB9b,QAAU,KACVs8B,MAAQC,aACRtb,OAAS,KAEb,SAASyV,KAAKhoD,MACZ,IAAIxS,EAEAM,EAEAggE,OAHA7+D,EAAI+Q,KAAKtJ,OAETq3D,UAAW,EAKf,IAFe,MAAXz8B,UAAiBihB,OAASqb,MAAME,OAASn1C,aAExCnrB,EAAI,EAAGA,GAAKyB,IAAKzB,IACdA,EAAIyB,GAAK0+D,QAAQ7/D,EAAIkS,KAAKxS,GAAIA,EAAGwS,SAAW+tD,YAC5CA,UAAYA,UAAUxb,OAAO4a,YAC5B5a,OAAO8a,WAEVU,UAAUxb,OAAO+a,OAAOv6B,EAAEjlC,EAAGN,EAAGwS,OAAQxH,EAAE1K,EAAGN,EAAGwS,OAGtD,GAAI8tD,OAAQ,OAAOvb,OAAS,KAAMub,OAAS,IAAM,KAuBnD,OApBA9F,KAAKj1B,EAAI,SAAS7c,GAChB,OAAO9b,UAAU1D,QAAUq8B,EAAiB,mBAAN7c,EAAmBA,EAAIk3B,uBAAUl3B,GAAI8xC,MAAQj1B,GAGrFi1B,KAAKxvD,EAAI,SAAS0d,GAChB,OAAO9b,UAAU1D,QAAU8B,EAAiB,mBAAN0d,EAAmBA,EAAIk3B,uBAAUl3B,GAAI8xC,MAAQxvD,GAGrFwvD,KAAK2F,QAAU,SAASz3C,GACtB,OAAO9b,UAAU1D,QAAUi3D,QAAuB,mBAANz3C,EAAmBA,EAAIk3B,wBAAWl3B,GAAI8xC,MAAQ2F,SAG5F3F,KAAK4F,MAAQ,SAAS13C,GACpB,OAAO9b,UAAU1D,QAAUk3D,MAAQ13C,EAAc,MAAXob,UAAoBihB,OAASqb,MAAMt8B,UAAW02B,MAAQ4F,OAG9F5F,KAAK12B,QAAU,SAASpb,GACtB,OAAO9b,UAAU1D,QAAe,MAALwf,EAAYob,QAAUihB,OAAS,KAAOA,OAASqb,MAAMt8B,QAAUpb,GAAI8xC,MAAQ12B,SAGjG02B,MC/CMgG,SAAA,WACb,IAAIzX,GAAKkX,QACLjX,GAAK,KACL8S,GAAKlc,sBAAS,GACd6b,GAAKyE,QACLC,QAAUvgB,uBAAS,GACnB9b,QAAU,KACVs8B,MAAQC,aACRtb,OAAS,KAEb,SAAS0b,KAAKjuD,MACZ,IAAIxS,EACA0iB,EACAotB,EAEAxvC,EAEAggE,OAHA7+D,EAAI+Q,KAAKtJ,OAETq3D,UAAW,EAEXG,IAAM,IAAIrwD,MAAM5O,GAChBk/D,IAAM,IAAItwD,MAAM5O,GAIpB,IAFe,MAAXqiC,UAAiBihB,OAASqb,MAAME,OAASn1C,aAExCnrB,EAAI,EAAGA,GAAKyB,IAAKzB,EAAG,CACvB,KAAMA,EAAIyB,GAAK0+D,QAAQ7/D,EAAIkS,KAAKxS,GAAIA,EAAGwS,SAAW+tD,SAChD,GAAIA,UAAYA,SACd79C,EAAI1iB,EACJ+kD,OAAOya,YACPza,OAAO4a,gBACF,CAGL,IAFA5a,OAAO8a,UACP9a,OAAO4a,YACF7vB,EAAI9vC,EAAI,EAAG8vC,GAAKptB,IAAKotB,EACxBiV,OAAO+a,MAAMY,IAAI5wB,GAAI6wB,IAAI7wB,IAE3BiV,OAAO8a,UACP9a,OAAO2a,UAGPa,WACFG,IAAI1gE,IAAM+oD,GAAGzoD,EAAGN,EAAGwS,MAAOmuD,IAAI3gE,IAAM87D,GAAGx7D,EAAGN,EAAGwS,MAC7CuyC,OAAO+a,MAAM9W,IAAMA,GAAG1oD,EAAGN,EAAGwS,MAAQkuD,IAAI1gE,GAAIy7D,IAAMA,GAAGn7D,EAAGN,EAAGwS,MAAQmuD,IAAI3gE,KAI3E,GAAIsgE,OAAQ,OAAOvb,OAAS,KAAMub,OAAS,IAAM,KAGnD,SAASM,WACP,OAAOpG,WAAO2F,QAAQA,SAASC,MAAMA,OAAOt8B,QAAQA,SAoDtD,OAjDA28B,KAAKl7B,EAAI,SAAS7c,GAChB,OAAO9b,UAAU1D,QAAU6/C,GAAkB,mBAANrgC,EAAmBA,EAAIk3B,uBAAUl3B,GAAIsgC,GAAK,KAAMyX,MAAQ1X,IAGjG0X,KAAK1X,GAAK,SAASrgC,GACjB,OAAO9b,UAAU1D,QAAU6/C,GAAkB,mBAANrgC,EAAmBA,EAAIk3B,uBAAUl3B,GAAI+3C,MAAQ1X,IAGtF0X,KAAKzX,GAAK,SAAStgC,GACjB,OAAO9b,UAAU1D,QAAU8/C,GAAU,MAALtgC,EAAY,KAAoB,mBAANA,EAAmBA,EAAIk3B,uBAAUl3B,GAAI+3C,MAAQzX,IAGzGyX,KAAKz1D,EAAI,SAAS0d,GAChB,OAAO9b,UAAU1D,QAAU4yD,GAAkB,mBAANpzC,EAAmBA,EAAIk3B,uBAAUl3B,GAAI+yC,GAAK,KAAMgF,MAAQ3E,IAGjG2E,KAAK3E,GAAK,SAASpzC,GACjB,OAAO9b,UAAU1D,QAAU4yD,GAAkB,mBAANpzC,EAAmBA,EAAIk3B,uBAAUl3B,GAAI+3C,MAAQ3E,IAGtF2E,KAAKhF,GAAK,SAAS/yC,GACjB,OAAO9b,UAAU1D,QAAUuyD,GAAU,MAAL/yC,EAAY,KAAoB,mBAANA,EAAmBA,EAAIk3B,uBAAUl3B,GAAI+3C,MAAQhF,IAGzGgF,KAAKI,OACLJ,KAAKK,OAAS,WACZ,OAAOF,WAAWr7B,EAAEwjB,IAAI/9C,EAAE8wD,KAG5B2E,KAAKM,OAAS,WACZ,OAAOH,WAAWr7B,EAAEwjB,IAAI/9C,EAAEywD,KAG5BgF,KAAKO,OAAS,WACZ,OAAOJ,WAAWr7B,EAAEyjB,IAAIh+C,EAAE8wD,KAG5B2E,KAAKN,QAAU,SAASz3C,GACtB,OAAO9b,UAAU1D,QAAUi3D,QAAuB,mBAANz3C,EAAmBA,EAAIk3B,wBAAWl3B,GAAI+3C,MAAQN,SAG5FM,KAAKL,MAAQ,SAAS13C,GACpB,OAAO9b,UAAU1D,QAAUk3D,MAAQ13C,EAAc,MAAXob,UAAoBihB,OAASqb,MAAMt8B,UAAW28B,MAAQL,OAG9FK,KAAK38B,QAAU,SAASpb,GACtB,OAAO9b,UAAU1D,QAAe,MAALwf,EAAYob,QAAUihB,OAAS,KAAOA,OAASqb,MAAMt8B,QAAUpb,GAAI+3C,MAAQ38B,SAGjG28B,MC3GMQ,eAAA,SAAS7+D,EAAGwI,GACzB,OAAOA,EAAIxI,GAAK,EAAIwI,EAAIxI,EAAI,EAAIwI,GAAKxI,EAAI,EAAI0qC,KCDhCo0B,sBAAA,SAAS5gE,GACtB,OAAOA,GCCsB6gE,YAAYd,cAE3C,SAASe,OAAOhB,OACd54D,KAAK65D,OAASjB,MAqBD,SAASe,YAAYf,OAElC,SAASkB,OAAOx9B,SACd,OAAO,IAAIs9B,OAAOhB,MAAMt8B,UAK1B,OAFAw9B,OAAOD,OAASjB,MAETkB,OA1BTF,OAAOt/D,WACL09D,UAAW,SAAAA,YACTh4D,KAAK65D,OAAO7B,aAEdE,QAAS,SAAAA,UACPl4D,KAAK65D,OAAO3B,WAEdC,UAAW,SAAAA,YACTn4D,KAAK65D,OAAO1B,aAEdE,QAAS,SAAAA,UACPr4D,KAAK65D,OAAOxB,WAEdC,MAAO,SAAAA,MAAS19D,EAAGtB,GACjB0G,KAAK65D,OAAOvB,MAAMh/D,EAAIuK,KAAKyyC,IAAI17C,GAAItB,GAAKuK,KAAKwyC,IAAIz7C,MCNtC,IChBJugB,yBAAQtS,MAAMvO,UAAU6gB,MCEpB,IAAA4+C,eACbC,KAAM,SAAAA,KAAS19B,QAAShC,MACtB,IAAIhhC,EAAIuK,KAAK6Q,KAAK4lB,KAAO+4B,SACzB/2B,QAAQu3B,OAAOv6D,EAAG,GAClBgjC,QAAQ+4B,IAAI,EAAG,EAAG/7D,EAAG,EAAGg6D,YCNb2G,cACbD,KAAM,SAAAA,KAAS19B,QAAShC,MACtB,IAAIhhC,EAAIuK,KAAK6Q,KAAK4lB,KAAO,GAAK,EAC9BgC,QAAQu3B,QAAQ,EAAIv6D,GAAIA,GACxBgjC,QAAQy3B,QAAQz6D,GAAIA,GACpBgjC,QAAQy3B,QAAQz6D,GAAI,EAAIA,GACxBgjC,QAAQy3B,OAAOz6D,GAAI,EAAIA,GACvBgjC,QAAQy3B,OAAOz6D,GAAIA,GACnBgjC,QAAQy3B,OAAO,EAAIz6D,GAAIA,GACvBgjC,QAAQy3B,OAAO,EAAIz6D,EAAGA,GACtBgjC,QAAQy3B,OAAOz6D,EAAGA,GAClBgjC,QAAQy3B,OAAOz6D,EAAG,EAAIA,GACtBgjC,QAAQy3B,QAAQz6D,EAAG,EAAIA,GACvBgjC,QAAQy3B,QAAQz6D,EAAGA,GACnBgjC,QAAQy3B,QAAQ,EAAIz6D,EAAGA,GACvBgjC,QAAQw3B,cCfRoG,MAAQr2D,KAAK6Q,KAAK,EAAI,GACtBylD,QAAkB,EAARD,MAECE,SACbJ,KAAM,SAAAA,KAAS19B,QAAShC,MACtB,IAAI92B,EAAIK,KAAK6Q,KAAK4lB,KAAO6/B,SACrBp8B,EAAIv6B,EAAI02D,MACZ59B,QAAQu3B,OAAO,GAAIrwD,GACnB84B,QAAQy3B,OAAOh2B,EAAG,GAClBzB,QAAQy3B,OAAO,EAAGvwD,GAClB84B,QAAQy3B,QAAQh2B,EAAG,GACnBzB,QAAQw3B,cCRRuG,GAAKx2D,KAAKyyC,IAAI+c,QAAK,IAAMxvD,KAAKyyC,IAAI,EAAI+c,QAAK,IAC3CiH,GAAKz2D,KAAKyyC,IAAIgd,SAAM,IAAM+G,GAC1BE,IAAM12D,KAAKwyC,IAAIid,SAAM,IAAM+G,GAEhBG,MACbR,KAAM,SAAAA,KAAS19B,QAAShC,MACtB,IAAIhhC,EAAIuK,KAAK6Q,KAPR,kBAOa4lB,MACdyD,EAAIu8B,GAAKhhE,EACTkK,EAAI+2D,GAAKjhE,EACbgjC,QAAQu3B,OAAO,GAAIv6D,GACnBgjC,QAAQy3B,OAAOh2B,EAAGv6B,GAClB,IAAK,IAAIhL,EAAI,EAAGA,EAAI,IAAKA,EAAG,CAC1B,IAAIoC,EAAI04D,SAAM96D,EAAI,EACdK,EAAIgL,KAAKwyC,IAAIz7C,GACbH,EAAIoJ,KAAKyyC,IAAI17C,GACjB0hC,QAAQy3B,OAAOt5D,EAAInB,GAAIT,EAAIS,GAC3BgjC,QAAQy3B,OAAOl7D,EAAIklC,EAAItjC,EAAI+I,EAAG/I,EAAIsjC,EAAIllC,EAAI2K,GAE5C84B,QAAQw3B,cCrBG2G,QACbT,KAAM,SAAAA,KAAS19B,QAAShC,MACtB,IAAIusB,EAAIhjD,KAAK6Q,KAAK4lB,MACdyD,GAAK8oB,EAAI,EACbvqB,QAAQs5B,KAAK73B,EAAGA,EAAG8oB,EAAGA,KCJtB6T,MAAQ72D,KAAK6Q,KAAK,GAEPimD,UACbX,KAAM,SAAAA,KAAS19B,QAAShC,MACtB,IAAI92B,GAAKK,KAAK6Q,KAAK4lB,MAAgB,EAARogC,QAC3Bp+B,QAAQu3B,OAAO,EAAO,EAAJrwD,GAClB84B,QAAQy3B,QAAQ2G,MAAQl3D,GAAIA,GAC5B84B,QAAQy3B,OAAO2G,MAAQl3D,GAAIA,GAC3B84B,QAAQw3B,cCPRr5D,MAAIoJ,KAAK6Q,KAAK,GAAK,EACnB4zB,MAAI,EAAIzkC,KAAK6Q,KAAK,IAClB9Z,MAAkB,GAAb0tC,MAAI,EAAI,GAEFsyB,KACbZ,KAAM,SAAAA,KAAS19B,QAAShC,MACtB,IAAIhhC,EAAIuK,KAAK6Q,KAAK4lB,KAAO1/B,OACrB2mD,GAAKjoD,EAAI,EACTg7D,GAAKh7D,EAAIgvC,MACTkZ,GAAKD,GACL0S,GAAK36D,EAAIgvC,MAAIhvC,EACb66D,IAAM3S,GACN4S,GAAKH,GACT33B,QAAQu3B,OAAOtS,GAAI+S,IACnBh4B,QAAQy3B,OAAOvS,GAAIyS,IACnB33B,QAAQy3B,OAAOI,GAAIC,IACnB93B,QAAQy3B,QAjBJ,GAiBexS,GAAK9mD,MAAI65D,GAAI75D,MAAI8mD,IAjBhC,GAiByC+S,IAC7Ch4B,QAAQy3B,QAlBJ,GAkBevS,GAAK/mD,MAAIw5D,GAAIx5D,MAAI+mD,IAlBhC,GAkByCyS,IAC7C33B,QAAQy3B,QAnBJ,GAmBeI,GAAK15D,MAAI25D,GAAI35D,MAAI05D,IAnBhC,GAmByCC,IAC7C93B,QAAQy3B,QApBJ,GAoBexS,GAAK9mD,MAAI65D,IApBxB,GAoBgCA,GAAK75D,MAAI8mD,IAC7CjlB,QAAQy3B,QArBJ,GAqBevS,GAAK/mD,MAAIw5D,IArBxB,GAqBgCA,GAAKx5D,MAAI+mD,IAC7CllB,QAAQy3B,QAtBJ,GAsBeI,GAAK15D,MAAI25D,IAtBxB,GAsBgCA,GAAK35D,MAAI05D,IAC7C73B,QAAQw3B,cCvBG+G,KAAA,aCAR,SAASvC,OAAMwC,KAAM/8B,EAAGv6B,GAC7Bs3D,KAAKz+B,SAAS63B,eACX,EAAI4G,KAAKrH,IAAMqH,KAAKnH,KAAO,GAC3B,EAAImH,KAAKpH,IAAMoH,KAAKlH,KAAO,GAC3BkH,KAAKrH,IAAM,EAAIqH,KAAKnH,KAAO,GAC3BmH,KAAKpH,IAAM,EAAIoH,KAAKlH,KAAO,GAC3BkH,KAAKrH,IAAM,EAAIqH,KAAKnH,IAAM51B,GAAK,GAC/B+8B,KAAKpH,IAAM,EAAIoH,KAAKlH,IAAMpwD,GAAK,GAI7B,SAASu3D,MAAMz+B,SACpBt8B,KAAKq8B,SAAWC,QAGlBy+B,MAAMzgE,WACJ09D,UAAW,SAAAA,YACTh4D,KAAKi4D,MAAQ,GAEfC,QAAS,SAAAA,UACPl4D,KAAKi4D,MAAQ3yB,KAEf6yB,UAAW,SAAAA,YACTn4D,KAAKyzD,IAAMzzD,KAAK2zD,IAChB3zD,KAAK0zD,IAAM1zD,KAAK4zD,IAAMtuB,IACtBtlC,KAAKo4D,OAAS,GAEhBC,QAAS,SAAAA,UACP,OAAQr4D,KAAKo4D,QACX,KAAK,EAAGE,OAAMt4D,KAAMA,KAAK2zD,IAAK3zD,KAAK4zD,KACnC,KAAK,EAAG5zD,KAAKq8B,SAAS03B,OAAO/zD,KAAK2zD,IAAK3zD,KAAK4zD,MAE1C5zD,KAAKi4D,OAAyB,IAAfj4D,KAAKi4D,OAA+B,IAAhBj4D,KAAKo4D,SAAep4D,KAAKq8B,SAASy3B,YACzE9zD,KAAKi4D,MAAQ,EAAIj4D,KAAKi4D,OAExBK,MAAO,SAAAA,MAASv6B,EAAGv6B,GAEjB,OADAu6B,GAAKA,EAAGv6B,GAAKA,EACLxD,KAAKo4D,QACX,KAAK,EAAGp4D,KAAKo4D,OAAS,EAAGp4D,KAAKi4D,MAAQj4D,KAAKq8B,SAAS03B,OAAOh2B,EAAGv6B,GAAKxD,KAAKq8B,SAASw3B,OAAO91B,EAAGv6B,GAAI,MAC/F,KAAK,EAAGxD,KAAKo4D,OAAS,EAAG,MACzB,KAAK,EAAGp4D,KAAKo4D,OAAS,EAAGp4D,KAAKq8B,SAAS03B,QAAQ,EAAI/zD,KAAKyzD,IAAMzzD,KAAK2zD,KAAO,GAAI,EAAI3zD,KAAK0zD,IAAM1zD,KAAK4zD,KAAO,GACzG,QAAS0E,OAAMt4D,KAAM+9B,EAAGv6B,GAE1BxD,KAAKyzD,IAAMzzD,KAAK2zD,IAAK3zD,KAAK2zD,IAAM51B,EAChC/9B,KAAK0zD,IAAM1zD,KAAK4zD,IAAK5zD,KAAK4zD,IAAMpwD,ICzCpC,SAASw3D,YAAY1+B,SACnBt8B,KAAKq8B,SAAWC,QAGlB0+B,YAAY1gE,WACV09D,UAAW6C,KACX3C,QAAS2C,KACT1C,UAAW,SAAAA,YACTn4D,KAAKyzD,IAAMzzD,KAAK2zD,IAAM3zD,KAAKi7D,IAAMj7D,KAAKk7D,IAAMl7D,KAAKm7D,IACjDn7D,KAAK0zD,IAAM1zD,KAAK4zD,IAAM5zD,KAAKo7D,IAAMp7D,KAAKq7D,IAAMr7D,KAAKs7D,IAAMh2B,IACvDtlC,KAAKo4D,OAAS,GAEhBC,QAAS,SAAAA,UACP,OAAQr4D,KAAKo4D,QACX,KAAK,EACHp4D,KAAKq8B,SAASw3B,OAAO7zD,KAAKi7D,IAAKj7D,KAAKo7D,KACpCp7D,KAAKq8B,SAASy3B,YACd,MAEF,KAAK,EACH9zD,KAAKq8B,SAASw3B,QAAQ7zD,KAAKi7D,IAAM,EAAIj7D,KAAKk7D,KAAO,GAAIl7D,KAAKo7D,IAAM,EAAIp7D,KAAKq7D,KAAO,GAChFr7D,KAAKq8B,SAAS03B,QAAQ/zD,KAAKk7D,IAAM,EAAIl7D,KAAKi7D,KAAO,GAAIj7D,KAAKq7D,IAAM,EAAIr7D,KAAKo7D,KAAO,GAChFp7D,KAAKq8B,SAASy3B,YACd,MAEF,KAAK,EACH9zD,KAAKs4D,MAAMt4D,KAAKi7D,IAAKj7D,KAAKo7D,KAC1Bp7D,KAAKs4D,MAAMt4D,KAAKk7D,IAAKl7D,KAAKq7D,KAC1Br7D,KAAKs4D,MAAMt4D,KAAKm7D,IAAKn7D,KAAKs7D,OAKhChD,MAAO,SAAAA,MAASv6B,EAAGv6B,GAEjB,OADAu6B,GAAKA,EAAGv6B,GAAKA,EACLxD,KAAKo4D,QACX,KAAK,EAAGp4D,KAAKo4D,OAAS,EAAGp4D,KAAKi7D,IAAMl9B,EAAG/9B,KAAKo7D,IAAM53D,EAAG,MACrD,KAAK,EAAGxD,KAAKo4D,OAAS,EAAGp4D,KAAKk7D,IAAMn9B,EAAG/9B,KAAKq7D,IAAM73D,EAAG,MACrD,KAAK,EAAGxD,KAAKo4D,OAAS,EAAGp4D,KAAKm7D,IAAMp9B,EAAG/9B,KAAKs7D,IAAM93D,EAAGxD,KAAKq8B,SAASw3B,QAAQ7zD,KAAKyzD,IAAM,EAAIzzD,KAAK2zD,IAAM51B,GAAK,GAAI/9B,KAAK0zD,IAAM,EAAI1zD,KAAK4zD,IAAMpwD,GAAK,GAAI,MACjJ,QAAS80D,OAAMt4D,KAAM+9B,EAAGv6B,GAE1BxD,KAAKyzD,IAAMzzD,KAAK2zD,IAAK3zD,KAAK2zD,IAAM51B,EAChC/9B,KAAK0zD,IAAM1zD,KAAK4zD,IAAK5zD,KAAK4zD,IAAMpwD,IC3CpC,SAAS+3D,UAAUj/B,SACjBt8B,KAAKq8B,SAAWC,QAGlBi/B,UAAUjhE,WACR09D,UAAW,SAAAA,YACTh4D,KAAKi4D,MAAQ,GAEfC,QAAS,SAAAA,UACPl4D,KAAKi4D,MAAQ3yB,KAEf6yB,UAAW,SAAAA,YACTn4D,KAAKyzD,IAAMzzD,KAAK2zD,IAChB3zD,KAAK0zD,IAAM1zD,KAAK4zD,IAAMtuB,IACtBtlC,KAAKo4D,OAAS,GAEhBC,QAAS,SAAAA,WACHr4D,KAAKi4D,OAAyB,IAAfj4D,KAAKi4D,OAA+B,IAAhBj4D,KAAKo4D,SAAep4D,KAAKq8B,SAASy3B,YACzE9zD,KAAKi4D,MAAQ,EAAIj4D,KAAKi4D,OAExBK,MAAO,SAAAA,MAASv6B,EAAGv6B,GAEjB,OADAu6B,GAAKA,EAAGv6B,GAAKA,EACLxD,KAAKo4D,QACX,KAAK,EAAGp4D,KAAKo4D,OAAS,EAAG,MACzB,KAAK,EAAGp4D,KAAKo4D,OAAS,EAAG,MACzB,KAAK,EAAGp4D,KAAKo4D,OAAS,EAAG,IAAI7W,IAAMvhD,KAAKyzD,IAAM,EAAIzzD,KAAK2zD,IAAM51B,GAAK,EAAGu2B,IAAMt0D,KAAK0zD,IAAM,EAAI1zD,KAAK4zD,IAAMpwD,GAAK,EAAGxD,KAAKi4D,MAAQj4D,KAAKq8B,SAAS03B,OAAOxS,GAAI+S,IAAMt0D,KAAKq8B,SAASw3B,OAAOtS,GAAI+S,IAAK,MACvL,KAAK,EAAGt0D,KAAKo4D,OAAS,EACtB,QAASE,OAAMt4D,KAAM+9B,EAAGv6B,GAE1BxD,KAAKyzD,IAAMzzD,KAAK2zD,IAAK3zD,KAAK2zD,IAAM51B,EAChC/9B,KAAK0zD,IAAM1zD,KAAK4zD,IAAK5zD,KAAK4zD,IAAMpwD,IC9BpC,SAASg4D,OAAOl/B,QAASm/B,MACvBz7D,KAAK07D,OAAS,IAAIX,MAAMz+B,SACxBt8B,KAAK27D,MAAQF,KAGfD,OAAOlhE,WACL69D,UAAW,SAAAA,YACTn4D,KAAK47D,MACL57D,KAAK67D,MACL77D,KAAK07D,OAAOvD,aAEdE,QAAS,SAAAA,UACP,IAAIt6B,EAAI/9B,KAAK47D,GACTp4D,EAAIxD,KAAK67D,GACT3gD,EAAI6iB,EAAEr8B,OAAS,EAEnB,GAAIwZ,EAAI,EAQN,IAPA,IAKIxhB,EALA6nD,GAAKxjB,EAAE,GACPu2B,GAAK9wD,EAAE,GACPgyD,GAAKz3B,EAAE7iB,GAAKqmC,GACZkU,GAAKjyD,EAAE0X,GAAKo5C,GACZ97D,GAAK,IAGAA,GAAK0iB,GACZxhB,EAAIlB,EAAI0iB,EACRlb,KAAK07D,OAAOpD,MACVt4D,KAAK27D,MAAQ59B,EAAEvlC,IAAM,EAAIwH,KAAK27D,QAAUpa,GAAK7nD,EAAI87D,IACjDx1D,KAAK27D,MAAQn4D,EAAEhL,IAAM,EAAIwH,KAAK27D,QAAUrH,GAAK56D,EAAI+7D,KAKvDz1D,KAAK47D,GAAK57D,KAAK67D,GAAK,KACpB77D,KAAK07D,OAAOrD,WAEdC,MAAO,SAAAA,MAASv6B,EAAGv6B,GACjBxD,KAAK47D,GAAG11D,MAAM63B,GACd/9B,KAAK67D,GAAG31D,MAAM1C,MAIH,SAAUs4D,OAAOL,MAE9B,SAASM,OAAOz/B,SACd,OAAgB,IAATm/B,KAAa,IAAIV,MAAMz+B,SAAW,IAAIk/B,OAAOl/B,QAASm/B,MAO/D,OAJAM,OAAON,KAAO,SAASA,MACrB,OAAOK,QAAQL,OAGVM,QAVM,CAWZ,KCvDI,SAASzD,eAAMwC,KAAM/8B,EAAGv6B,GAC7Bs3D,KAAKz+B,SAAS63B,cACZ4G,KAAKnH,IAAMmH,KAAKkB,IAAMlB,KAAKG,IAAMH,KAAKrH,KACtCqH,KAAKlH,IAAMkH,KAAKkB,IAAMlB,KAAKM,IAAMN,KAAKpH,KACtCoH,KAAKG,IAAMH,KAAKkB,IAAMlB,KAAKnH,IAAM51B,GACjC+8B,KAAKM,IAAMN,KAAKkB,IAAMlB,KAAKlH,IAAMpwD,GACjCs3D,KAAKG,IACLH,KAAKM,KAIF,SAASa,SAAS3/B,QAAS4/B,SAChCl8D,KAAKq8B,SAAWC,QAChBt8B,KAAKg8D,IAAM,EAAIE,SAAW,EAG5BD,SAAS3hE,WACP09D,UAAW,SAAAA,YACTh4D,KAAKi4D,MAAQ,GAEfC,QAAS,SAAAA,UACPl4D,KAAKi4D,MAAQ3yB,KAEf6yB,UAAW,SAAAA,YACTn4D,KAAKyzD,IAAMzzD,KAAK2zD,IAAM3zD,KAAKi7D,IAC3Bj7D,KAAK0zD,IAAM1zD,KAAK4zD,IAAM5zD,KAAKo7D,IAAM91B,IACjCtlC,KAAKo4D,OAAS,GAEhBC,QAAS,SAAAA,UACP,OAAQr4D,KAAKo4D,QACX,KAAK,EAAGp4D,KAAKq8B,SAAS03B,OAAO/zD,KAAKi7D,IAAKj7D,KAAKo7D,KAAM,MAClD,KAAK,EAAG9C,eAAMt4D,KAAMA,KAAK2zD,IAAK3zD,KAAK4zD,MAEjC5zD,KAAKi4D,OAAyB,IAAfj4D,KAAKi4D,OAA+B,IAAhBj4D,KAAKo4D,SAAep4D,KAAKq8B,SAASy3B,YACzE9zD,KAAKi4D,MAAQ,EAAIj4D,KAAKi4D,OAExBK,MAAO,SAAAA,MAASv6B,EAAGv6B,GAEjB,OADAu6B,GAAKA,EAAGv6B,GAAKA,EACLxD,KAAKo4D,QACX,KAAK,EAAGp4D,KAAKo4D,OAAS,EAAGp4D,KAAKi4D,MAAQj4D,KAAKq8B,SAAS03B,OAAOh2B,EAAGv6B,GAAKxD,KAAKq8B,SAASw3B,OAAO91B,EAAGv6B,GAAI,MAC/F,KAAK,EAAGxD,KAAKo4D,OAAS,EAAGp4D,KAAK2zD,IAAM51B,EAAG/9B,KAAK4zD,IAAMpwD,EAAG,MACrD,KAAK,EAAGxD,KAAKo4D,OAAS,EACtB,QAASE,eAAMt4D,KAAM+9B,EAAGv6B,GAE1BxD,KAAKyzD,IAAMzzD,KAAK2zD,IAAK3zD,KAAK2zD,IAAM3zD,KAAKi7D,IAAKj7D,KAAKi7D,IAAMl9B,EACrD/9B,KAAK0zD,IAAM1zD,KAAK4zD,IAAK5zD,KAAK4zD,IAAM5zD,KAAKo7D,IAAKp7D,KAAKo7D,IAAM53D,KAI1C,SAAUs4D,OAAOI,SAE9B,SAASC,SAAS7/B,SAChB,OAAO,IAAI2/B,SAAS3/B,QAAS4/B,SAO/B,OAJAC,SAASD,QAAU,SAASA,SAC1B,OAAOJ,QAAQI,UAGVC,UAVM,CAWZ,GCzDI,SAASC,eAAe9/B,QAAS4/B,SACtCl8D,KAAKq8B,SAAWC,QAChBt8B,KAAKg8D,IAAM,EAAIE,SAAW,EAG5BE,eAAe9hE,WACb09D,UAAW6C,KACX3C,QAAS2C,KACT1C,UAAW,SAAAA,YACTn4D,KAAKyzD,IAAMzzD,KAAK2zD,IAAM3zD,KAAKi7D,IAAMj7D,KAAKk7D,IAAMl7D,KAAKm7D,IAAMn7D,KAAKq8D,IAC5Dr8D,KAAK0zD,IAAM1zD,KAAK4zD,IAAM5zD,KAAKo7D,IAAMp7D,KAAKq7D,IAAMr7D,KAAKs7D,IAAMt7D,KAAKs8D,IAAMh3B,IAClEtlC,KAAKo4D,OAAS,GAEhBC,QAAS,SAAAA,UACP,OAAQr4D,KAAKo4D,QACX,KAAK,EACHp4D,KAAKq8B,SAASw3B,OAAO7zD,KAAKk7D,IAAKl7D,KAAKq7D,KACpCr7D,KAAKq8B,SAASy3B,YACd,MAEF,KAAK,EACH9zD,KAAKq8B,SAAS03B,OAAO/zD,KAAKk7D,IAAKl7D,KAAKq7D,KACpCr7D,KAAKq8B,SAASy3B,YACd,MAEF,KAAK,EACH9zD,KAAKs4D,MAAMt4D,KAAKk7D,IAAKl7D,KAAKq7D,KAC1Br7D,KAAKs4D,MAAMt4D,KAAKm7D,IAAKn7D,KAAKs7D,KAC1Bt7D,KAAKs4D,MAAMt4D,KAAKq8D,IAAKr8D,KAAKs8D,OAKhChE,MAAO,SAAAA,MAASv6B,EAAGv6B,GAEjB,OADAu6B,GAAKA,EAAGv6B,GAAKA,EACLxD,KAAKo4D,QACX,KAAK,EAAGp4D,KAAKo4D,OAAS,EAAGp4D,KAAKk7D,IAAMn9B,EAAG/9B,KAAKq7D,IAAM73D,EAAG,MACrD,KAAK,EAAGxD,KAAKo4D,OAAS,EAAGp4D,KAAKq8B,SAASw3B,OAAO7zD,KAAKm7D,IAAMp9B,EAAG/9B,KAAKs7D,IAAM93D,GAAI,MAC3E,KAAK,EAAGxD,KAAKo4D,OAAS,EAAGp4D,KAAKq8D,IAAMt+B,EAAG/9B,KAAKs8D,IAAM94D,EAAG,MACrD,QAAS80D,eAAMt4D,KAAM+9B,EAAGv6B,GAE1BxD,KAAKyzD,IAAMzzD,KAAK2zD,IAAK3zD,KAAK2zD,IAAM3zD,KAAKi7D,IAAKj7D,KAAKi7D,IAAMl9B,EACrD/9B,KAAK0zD,IAAM1zD,KAAK4zD,IAAK5zD,KAAK4zD,IAAM5zD,KAAKo7D,IAAKp7D,KAAKo7D,IAAM53D,KAI1C,SAAUs4D,OAAOI,SAE9B,SAASC,SAAS7/B,SAChB,OAAO,IAAI8/B,eAAe9/B,QAAS4/B,SAOrC,OAJAC,SAASD,QAAU,SAASA,SAC1B,OAAOJ,QAAQI,UAGVC,UAVM,CAWZ,GC1DI,SAASI,aAAajgC,QAAS4/B,SACpCl8D,KAAKq8B,SAAWC,QAChBt8B,KAAKg8D,IAAM,EAAIE,SAAW,EAG5BK,aAAajiE,WACX09D,UAAW,SAAAA,YACTh4D,KAAKi4D,MAAQ,GAEfC,QAAS,SAAAA,UACPl4D,KAAKi4D,MAAQ3yB,KAEf6yB,UAAW,SAAAA,YACTn4D,KAAKyzD,IAAMzzD,KAAK2zD,IAAM3zD,KAAKi7D,IAC3Bj7D,KAAK0zD,IAAM1zD,KAAK4zD,IAAM5zD,KAAKo7D,IAAM91B,IACjCtlC,KAAKo4D,OAAS,GAEhBC,QAAS,SAAAA,WACHr4D,KAAKi4D,OAAyB,IAAfj4D,KAAKi4D,OAA+B,IAAhBj4D,KAAKo4D,SAAep4D,KAAKq8B,SAASy3B,YACzE9zD,KAAKi4D,MAAQ,EAAIj4D,KAAKi4D,OAExBK,MAAO,SAAAA,MAASv6B,EAAGv6B,GAEjB,OADAu6B,GAAKA,EAAGv6B,GAAKA,EACLxD,KAAKo4D,QACX,KAAK,EAAGp4D,KAAKo4D,OAAS,EAAG,MACzB,KAAK,EAAGp4D,KAAKo4D,OAAS,EAAG,MACzB,KAAK,EAAGp4D,KAAKo4D,OAAS,EAAGp4D,KAAKi4D,MAAQj4D,KAAKq8B,SAAS03B,OAAO/zD,KAAKi7D,IAAKj7D,KAAKo7D,KAAOp7D,KAAKq8B,SAASw3B,OAAO7zD,KAAKi7D,IAAKj7D,KAAKo7D,KAAM,MAC3H,KAAK,EAAGp7D,KAAKo4D,OAAS,EACtB,QAASE,eAAMt4D,KAAM+9B,EAAGv6B,GAE1BxD,KAAKyzD,IAAMzzD,KAAK2zD,IAAK3zD,KAAK2zD,IAAM3zD,KAAKi7D,IAAKj7D,KAAKi7D,IAAMl9B,EACrD/9B,KAAK0zD,IAAM1zD,KAAK4zD,IAAK5zD,KAAK4zD,IAAM5zD,KAAKo7D,IAAKp7D,KAAKo7D,IAAM53D,KAI1C,SAAUs4D,OAAOI,SAE9B,SAASC,SAAS7/B,SAChB,OAAO,IAAIigC,aAAajgC,QAAS4/B,SAOnC,OAJAC,SAASD,QAAU,SAASA,SAC1B,OAAOJ,QAAQI,UAGVC,UAVM,CAWZ,GC7CI,SAAS7D,iBAAMwC,KAAM/8B,EAAGv6B,GAC7B,IAAIg+C,GAAKsZ,KAAKnH,IACVM,GAAK6G,KAAKlH,IACVO,GAAK2G,KAAKG,IACV7G,GAAK0G,KAAKM,IAEd,GAAIN,KAAK0B,OAAS/K,aAAS,CACzB,IAAI72D,EAAI,EAAIkgE,KAAK2B,QAAU,EAAI3B,KAAK0B,OAAS1B,KAAK4B,OAAS5B,KAAK6B,QAC5D1iE,EAAI,EAAI6gE,KAAK0B,QAAU1B,KAAK0B,OAAS1B,KAAK4B,QAC9Clb,IAAMA,GAAK5mD,EAAIkgE,KAAKrH,IAAMqH,KAAK6B,QAAU7B,KAAKG,IAAMH,KAAK2B,SAAWxiE,EACpEg6D,IAAMA,GAAKr5D,EAAIkgE,KAAKpH,IAAMoH,KAAK6B,QAAU7B,KAAKM,IAAMN,KAAK2B,SAAWxiE,EAGtE,GAAI6gE,KAAK8B,OAASnL,aAAS,CACzB,IAAIruD,EAAI,EAAI03D,KAAK+B,QAAU,EAAI/B,KAAK8B,OAAS9B,KAAK4B,OAAS5B,KAAK6B,QAC5D/jE,EAAI,EAAIkiE,KAAK8B,QAAU9B,KAAK8B,OAAS9B,KAAK4B,QAC9CvI,IAAMA,GAAK/wD,EAAI03D,KAAKnH,IAAMmH,KAAK+B,QAAU9+B,EAAI+8B,KAAK6B,SAAW/jE,EAC7Dw7D,IAAMA,GAAKhxD,EAAI03D,KAAKlH,IAAMkH,KAAK+B,QAAUr5D,EAAIs3D,KAAK6B,SAAW/jE,EAG/DkiE,KAAKz+B,SAAS63B,cAAc1S,GAAIyS,GAAIE,GAAIC,GAAI0G,KAAKG,IAAKH,KAAKM,KAG7D,SAAS0B,WAAWxgC,QAASygC,OAC3B/8D,KAAKq8B,SAAWC,QAChBt8B,KAAKg9D,OAASD,MAGhBD,WAAWxiE,WACT09D,UAAW,SAAAA,YACTh4D,KAAKi4D,MAAQ,GAEfC,QAAS,SAAAA,UACPl4D,KAAKi4D,MAAQ3yB,KAEf6yB,UAAW,SAAAA,YACTn4D,KAAKyzD,IAAMzzD,KAAK2zD,IAAM3zD,KAAKi7D,IAC3Bj7D,KAAK0zD,IAAM1zD,KAAK4zD,IAAM5zD,KAAKo7D,IAAM91B,IACjCtlC,KAAKw8D,OAASx8D,KAAK08D,OAAS18D,KAAK48D,OACjC58D,KAAKy8D,QAAUz8D,KAAK28D,QAAU38D,KAAK68D,QACnC78D,KAAKo4D,OAAS,GAEhBC,QAAS,SAAAA,UACP,OAAQr4D,KAAKo4D,QACX,KAAK,EAAGp4D,KAAKq8B,SAAS03B,OAAO/zD,KAAKi7D,IAAKj7D,KAAKo7D,KAAM,MAClD,KAAK,EAAGp7D,KAAKs4D,MAAMt4D,KAAKi7D,IAAKj7D,KAAKo7D,MAEhCp7D,KAAKi4D,OAAyB,IAAfj4D,KAAKi4D,OAA+B,IAAhBj4D,KAAKo4D,SAAep4D,KAAKq8B,SAASy3B,YACzE9zD,KAAKi4D,MAAQ,EAAIj4D,KAAKi4D,OAExBK,MAAO,SAAAA,MAASv6B,EAAGv6B,GAGjB,GAFAu6B,GAAKA,EAAGv6B,GAAKA,EAETxD,KAAKo4D,OAAQ,CACf,IAAI6E,IAAMj9D,KAAKi7D,IAAMl9B,EACjBm/B,IAAMl9D,KAAKo7D,IAAM53D,EACrBxD,KAAK48D,OAAS/4D,KAAK6Q,KAAK1U,KAAK68D,QAAUh5D,KAAK+Q,IAAIqoD,IAAMA,IAAMC,IAAMA,IAAKl9D,KAAKg9D,SAG9E,OAAQh9D,KAAKo4D,QACX,KAAK,EAAGp4D,KAAKo4D,OAAS,EAAGp4D,KAAKi4D,MAAQj4D,KAAKq8B,SAAS03B,OAAOh2B,EAAGv6B,GAAKxD,KAAKq8B,SAASw3B,OAAO91B,EAAGv6B,GAAI,MAC/F,KAAK,EAAGxD,KAAKo4D,OAAS,EAAG,MACzB,KAAK,EAAGp4D,KAAKo4D,OAAS,EACtB,QAASE,iBAAMt4D,KAAM+9B,EAAGv6B,GAG1BxD,KAAKw8D,OAASx8D,KAAK08D,OAAQ18D,KAAK08D,OAAS18D,KAAK48D,OAC9C58D,KAAKy8D,QAAUz8D,KAAK28D,QAAS38D,KAAK28D,QAAU38D,KAAK68D,QACjD78D,KAAKyzD,IAAMzzD,KAAK2zD,IAAK3zD,KAAK2zD,IAAM3zD,KAAKi7D,IAAKj7D,KAAKi7D,IAAMl9B,EACrD/9B,KAAK0zD,IAAM1zD,KAAK4zD,IAAK5zD,KAAK4zD,IAAM5zD,KAAKo7D,IAAKp7D,KAAKo7D,IAAM53D,IAI1C,IAAA25D,iBAAA,SAAUrB,OAAOiB,OAE9B,SAASK,WAAW9gC,SAClB,OAAOygC,MAAQ,IAAID,WAAWxgC,QAASygC,OAAS,IAAId,SAAS3/B,QAAS,GAOxE,OAJA8gC,WAAWL,MAAQ,SAASA,OAC1B,OAAOjB,QAAQiB,QAGVK,WAVM,CAWZ,ICnFH,SAASC,iBAAiB/gC,QAASygC,OACjC/8D,KAAKq8B,SAAWC,QAChBt8B,KAAKg9D,OAASD,MAGhBM,iBAAiB/iE,WACf09D,UAAW6C,KACX3C,QAAS2C,KACT1C,UAAW,SAAAA,YACTn4D,KAAKyzD,IAAMzzD,KAAK2zD,IAAM3zD,KAAKi7D,IAAMj7D,KAAKk7D,IAAMl7D,KAAKm7D,IAAMn7D,KAAKq8D,IAC5Dr8D,KAAK0zD,IAAM1zD,KAAK4zD,IAAM5zD,KAAKo7D,IAAMp7D,KAAKq7D,IAAMr7D,KAAKs7D,IAAMt7D,KAAKs8D,IAAMh3B,IAClEtlC,KAAKw8D,OAASx8D,KAAK08D,OAAS18D,KAAK48D,OACjC58D,KAAKy8D,QAAUz8D,KAAK28D,QAAU38D,KAAK68D,QACnC78D,KAAKo4D,OAAS,GAEhBC,QAAS,SAAAA,UACP,OAAQr4D,KAAKo4D,QACX,KAAK,EACHp4D,KAAKq8B,SAASw3B,OAAO7zD,KAAKk7D,IAAKl7D,KAAKq7D,KACpCr7D,KAAKq8B,SAASy3B,YACd,MAEF,KAAK,EACH9zD,KAAKq8B,SAAS03B,OAAO/zD,KAAKk7D,IAAKl7D,KAAKq7D,KACpCr7D,KAAKq8B,SAASy3B,YACd,MAEF,KAAK,EACH9zD,KAAKs4D,MAAMt4D,KAAKk7D,IAAKl7D,KAAKq7D,KAC1Br7D,KAAKs4D,MAAMt4D,KAAKm7D,IAAKn7D,KAAKs7D,KAC1Bt7D,KAAKs4D,MAAMt4D,KAAKq8D,IAAKr8D,KAAKs8D,OAKhChE,MAAO,SAAAA,MAASv6B,EAAGv6B,GAGjB,GAFAu6B,GAAKA,EAAGv6B,GAAKA,EAETxD,KAAKo4D,OAAQ,CACf,IAAI6E,IAAMj9D,KAAKi7D,IAAMl9B,EACjBm/B,IAAMl9D,KAAKo7D,IAAM53D,EACrBxD,KAAK48D,OAAS/4D,KAAK6Q,KAAK1U,KAAK68D,QAAUh5D,KAAK+Q,IAAIqoD,IAAMA,IAAMC,IAAMA,IAAKl9D,KAAKg9D,SAG9E,OAAQh9D,KAAKo4D,QACX,KAAK,EAAGp4D,KAAKo4D,OAAS,EAAGp4D,KAAKk7D,IAAMn9B,EAAG/9B,KAAKq7D,IAAM73D,EAAG,MACrD,KAAK,EAAGxD,KAAKo4D,OAAS,EAAGp4D,KAAKq8B,SAASw3B,OAAO7zD,KAAKm7D,IAAMp9B,EAAG/9B,KAAKs7D,IAAM93D,GAAI,MAC3E,KAAK,EAAGxD,KAAKo4D,OAAS,EAAGp4D,KAAKq8D,IAAMt+B,EAAG/9B,KAAKs8D,IAAM94D,EAAG,MACrD,QAAS80D,iBAAMt4D,KAAM+9B,EAAGv6B,GAG1BxD,KAAKw8D,OAASx8D,KAAK08D,OAAQ18D,KAAK08D,OAAS18D,KAAK48D,OAC9C58D,KAAKy8D,QAAUz8D,KAAK28D,QAAS38D,KAAK28D,QAAU38D,KAAK68D,QACjD78D,KAAKyzD,IAAMzzD,KAAK2zD,IAAK3zD,KAAK2zD,IAAM3zD,KAAKi7D,IAAKj7D,KAAKi7D,IAAMl9B,EACrD/9B,KAAK0zD,IAAM1zD,KAAK4zD,IAAK5zD,KAAK4zD,IAAM5zD,KAAKo7D,IAAKp7D,KAAKo7D,IAAM53D,KAI1C,SAAUs4D,OAAOiB,OAE9B,SAASK,WAAW9gC,SAClB,OAAOygC,MAAQ,IAAIM,iBAAiB/gC,QAASygC,OAAS,IAAIX,eAAe9/B,QAAS,GAOpF,OAJA8gC,WAAWL,MAAQ,SAASA,OAC1B,OAAOjB,QAAQiB,QAGVK,YAVM,CAWZ,ICtEH,SAASE,eAAehhC,QAASygC,OAC/B/8D,KAAKq8B,SAAWC,QAChBt8B,KAAKg9D,OAASD,MAGhBO,eAAehjE,WACb09D,UAAW,SAAAA,YACTh4D,KAAKi4D,MAAQ,GAEfC,QAAS,SAAAA,UACPl4D,KAAKi4D,MAAQ3yB,KAEf6yB,UAAW,SAAAA,YACTn4D,KAAKyzD,IAAMzzD,KAAK2zD,IAAM3zD,KAAKi7D,IAC3Bj7D,KAAK0zD,IAAM1zD,KAAK4zD,IAAM5zD,KAAKo7D,IAAM91B,IACjCtlC,KAAKw8D,OAASx8D,KAAK08D,OAAS18D,KAAK48D,OACjC58D,KAAKy8D,QAAUz8D,KAAK28D,QAAU38D,KAAK68D,QACnC78D,KAAKo4D,OAAS,GAEhBC,QAAS,SAAAA,WACHr4D,KAAKi4D,OAAyB,IAAfj4D,KAAKi4D,OAA+B,IAAhBj4D,KAAKo4D,SAAep4D,KAAKq8B,SAASy3B,YACzE9zD,KAAKi4D,MAAQ,EAAIj4D,KAAKi4D,OAExBK,MAAO,SAAAA,MAASv6B,EAAGv6B,GAGjB,GAFAu6B,GAAKA,EAAGv6B,GAAKA,EAETxD,KAAKo4D,OAAQ,CACf,IAAI6E,IAAMj9D,KAAKi7D,IAAMl9B,EACjBm/B,IAAMl9D,KAAKo7D,IAAM53D,EACrBxD,KAAK48D,OAAS/4D,KAAK6Q,KAAK1U,KAAK68D,QAAUh5D,KAAK+Q,IAAIqoD,IAAMA,IAAMC,IAAMA,IAAKl9D,KAAKg9D,SAG9E,OAAQh9D,KAAKo4D,QACX,KAAK,EAAGp4D,KAAKo4D,OAAS,EAAG,MACzB,KAAK,EAAGp4D,KAAKo4D,OAAS,EAAG,MACzB,KAAK,EAAGp4D,KAAKo4D,OAAS,EAAGp4D,KAAKi4D,MAAQj4D,KAAKq8B,SAAS03B,OAAO/zD,KAAKi7D,IAAKj7D,KAAKo7D,KAAOp7D,KAAKq8B,SAASw3B,OAAO7zD,KAAKi7D,IAAKj7D,KAAKo7D,KAAM,MAC3H,KAAK,EAAGp7D,KAAKo4D,OAAS,EACtB,QAASE,iBAAMt4D,KAAM+9B,EAAGv6B,GAG1BxD,KAAKw8D,OAASx8D,KAAK08D,OAAQ18D,KAAK08D,OAAS18D,KAAK48D,OAC9C58D,KAAKy8D,QAAUz8D,KAAK28D,QAAS38D,KAAK28D,QAAU38D,KAAK68D,QACjD78D,KAAKyzD,IAAMzzD,KAAK2zD,IAAK3zD,KAAK2zD,IAAM3zD,KAAKi7D,IAAKj7D,KAAKi7D,IAAMl9B,EACrD/9B,KAAK0zD,IAAM1zD,KAAK4zD,IAAK5zD,KAAK4zD,IAAM5zD,KAAKo7D,IAAKp7D,KAAKo7D,IAAM53D,KAI1C,SAAUs4D,OAAOiB,OAE9B,SAASK,WAAW9gC,SAClB,OAAOygC,MAAQ,IAAIO,eAAehhC,QAASygC,OAAS,IAAIR,aAAajgC,QAAS,GAOhF,OAJA8gC,WAAWL,MAAQ,SAASA,OAC1B,OAAOjB,QAAQiB,QAGVK,YAVM,CAWZ,IC3DH,SAASG,aAAajhC,SACpBt8B,KAAKq8B,SAAWC,QAGlBihC,aAAajjE,WACX09D,UAAW6C,KACX3C,QAAS2C,KACT1C,UAAW,SAAAA,YACTn4D,KAAKo4D,OAAS,GAEhBC,QAAS,SAAAA,UACHr4D,KAAKo4D,QAAQp4D,KAAKq8B,SAASy3B,aAEjCwE,MAAO,SAAAA,MAASv6B,EAAGv6B,GACjBu6B,GAAKA,EAAGv6B,GAAKA,EACTxD,KAAKo4D,OAAQp4D,KAAKq8B,SAAS03B,OAAOh2B,EAAGv6B,IACpCxD,KAAKo4D,OAAS,EAAGp4D,KAAKq8B,SAASw3B,OAAO91B,EAAGv6B,MClBlD,SAAS86C,cAAKvgB,GACZ,OAAOA,EAAI,GAAK,EAAI,EAOtB,SAASy/B,OAAO1C,KAAM3G,GAAIC,IACxB,IAAIqJ,GAAK3C,KAAKnH,IAAMmH,KAAKrH,IACrBiK,GAAKvJ,GAAK2G,KAAKnH,IACfgK,IAAM7C,KAAKlH,IAAMkH,KAAKpH,MAAQ+J,IAAMC,GAAK,IAAM,GAC/C1uC,IAAMolC,GAAK0G,KAAKlH,MAAQ8J,IAAMD,GAAK,IAAM,GACzCjjE,GAAKmjE,GAAKD,GAAK1uC,GAAKyuC,KAAOA,GAAKC,IACpC,OAAQpf,cAAKqf,IAAMrf,cAAKtvB,KAAOnrB,KAAKsQ,IAAItQ,KAAKooB,IAAI0xC,IAAK95D,KAAKooB,IAAI+C,IAAK,GAAMnrB,KAAKooB,IAAIzxB,KAAO,EAI5F,SAASojE,OAAO9C,KAAMphE,GACpB,IAAIgP,EAAIoyD,KAAKnH,IAAMmH,KAAKrH,IACxB,OAAO/qD,GAAK,GAAKoyD,KAAKlH,IAAMkH,KAAKpH,KAAOhrD,EAAIhP,GAAK,EAAIA,EAMvD,SAAS4+D,eAAMwC,KAAMhlB,GAAIC,IACvB,IAAIwL,GAAKuZ,KAAKrH,IACVa,GAAKwG,KAAKpH,IACVlS,GAAKsZ,KAAKnH,IACVM,GAAK6G,KAAKlH,IACV4B,IAAMhU,GAAKD,IAAM,EACrBuZ,KAAKz+B,SAAS63B,cAAc3S,GAAKiU,GAAIlB,GAAKkB,GAAK1f,GAAI0L,GAAKgU,GAAIvB,GAAKuB,GAAKzf,GAAIyL,GAAIyS,IAGhF,SAAS4J,UAAUvhC,SACjBt8B,KAAKq8B,SAAWC,QA0ClB,SAASwhC,UAAUxhC,SACjBt8B,KAAKq8B,SAAW,IAAI0hC,eAAezhC,SAOrC,SAASyhC,eAAezhC,SACtBt8B,KAAKq8B,SAAWC,QCvFlB,SAAS0hC,QAAQ1hC,SACft8B,KAAKq8B,SAAWC,QA2ClB,SAAS2hC,cAAclgC,GACrB,IAAIvlC,EAEAI,EADAqB,EAAI8jC,EAAEr8B,OAAS,EAEf9G,EAAI,IAAIiO,MAAM5O,GACdmJ,EAAI,IAAIyF,MAAM5O,GACdX,EAAI,IAAIuP,MAAM5O,GAElB,IADAW,EAAE,GAAK,EAAGwI,EAAE,GAAK,EAAG9J,EAAE,GAAKykC,EAAE,GAAK,EAAIA,EAAE,GACnCvlC,EAAI,EAAGA,EAAIyB,EAAI,IAAKzB,EAAGoC,EAAEpC,GAAK,EAAG4K,EAAE5K,GAAK,EAAGc,EAAEd,GAAK,EAAIulC,EAAEvlC,GAAK,EAAIulC,EAAEvlC,EAAI,GAE5E,IADAoC,EAAEX,EAAI,GAAK,EAAGmJ,EAAEnJ,EAAI,GAAK,EAAGX,EAAEW,EAAI,GAAK,EAAI8jC,EAAE9jC,EAAI,GAAK8jC,EAAE9jC,GACnDzB,EAAI,EAAGA,EAAIyB,IAAKzB,EAAGI,EAAIgC,EAAEpC,GAAK4K,EAAE5K,EAAI,GAAI4K,EAAE5K,IAAMI,EAAGU,EAAEd,IAAMI,EAAIU,EAAEd,EAAI,GAE1E,IADAoC,EAAEX,EAAI,GAAKX,EAAEW,EAAI,GAAKmJ,EAAEnJ,EAAI,GACvBzB,EAAIyB,EAAI,EAAGzB,GAAK,IAAKA,EAAGoC,EAAEpC,IAAMc,EAAEd,GAAKoC,EAAEpC,EAAI,IAAM4K,EAAE5K,GAE1D,IADA4K,EAAEnJ,EAAI,IAAM8jC,EAAE9jC,GAAKW,EAAEX,EAAI,IAAM,EAC1BzB,EAAI,EAAGA,EAAIyB,EAAI,IAAKzB,EAAG4K,EAAE5K,GAAK,EAAIulC,EAAEvlC,EAAI,GAAKoC,EAAEpC,EAAI,GACxD,OAAQoC,EAAGwI,GDpBby6D,UAAUvjE,WACR09D,UAAW,SAAAA,YACTh4D,KAAKi4D,MAAQ,GAEfC,QAAS,SAAAA,UACPl4D,KAAKi4D,MAAQ3yB,KAEf6yB,UAAW,SAAAA,YACTn4D,KAAKyzD,IAAMzzD,KAAK2zD,IAChB3zD,KAAK0zD,IAAM1zD,KAAK4zD,IAChB5zD,KAAKk+D,IAAM54B,IACXtlC,KAAKo4D,OAAS,GAEhBC,QAAS,SAAAA,UACP,OAAQr4D,KAAKo4D,QACX,KAAK,EAAGp4D,KAAKq8B,SAAS03B,OAAO/zD,KAAK2zD,IAAK3zD,KAAK4zD,KAAM,MAClD,KAAK,EAAG0E,eAAMt4D,KAAMA,KAAKk+D,IAAKN,OAAO59D,KAAMA,KAAKk+D,OAE9Cl+D,KAAKi4D,OAAyB,IAAfj4D,KAAKi4D,OAA+B,IAAhBj4D,KAAKo4D,SAAep4D,KAAKq8B,SAASy3B,YACzE9zD,KAAKi4D,MAAQ,EAAIj4D,KAAKi4D,OAExBK,MAAO,SAAAA,MAASv6B,EAAGv6B,GACjB,IAAIuyC,GAAKzQ,IAGT,GADQ9hC,GAAKA,GAAbu6B,GAAKA,KACK/9B,KAAK2zD,KAAOnwD,IAAMxD,KAAK4zD,IAAjC,CACA,OAAQ5zD,KAAKo4D,QACX,KAAK,EAAGp4D,KAAKo4D,OAAS,EAAGp4D,KAAKi4D,MAAQj4D,KAAKq8B,SAAS03B,OAAOh2B,EAAGv6B,GAAKxD,KAAKq8B,SAASw3B,OAAO91B,EAAGv6B,GAAI,MAC/F,KAAK,EAAGxD,KAAKo4D,OAAS,EAAG,MACzB,KAAK,EAAGp4D,KAAKo4D,OAAS,EAAGE,eAAMt4D,KAAM49D,OAAO59D,KAAM+1C,GAAKynB,OAAOx9D,KAAM+9B,EAAGv6B,IAAKuyC,IAAK,MACjF,QAASuiB,eAAMt4D,KAAMA,KAAKk+D,IAAKnoB,GAAKynB,OAAOx9D,KAAM+9B,EAAGv6B,IAGtDxD,KAAKyzD,IAAMzzD,KAAK2zD,IAAK3zD,KAAK2zD,IAAM51B,EAChC/9B,KAAK0zD,IAAM1zD,KAAK4zD,IAAK5zD,KAAK4zD,IAAMpwD,EAChCxD,KAAKk+D,IAAMnoB,OAQd+nB,UAAUxjE,UAAYpB,OAAOY,OAAO+jE,UAAUvjE,YAAYg+D,MAAQ,SAASv6B,EAAGv6B,GAC7Eq6D,UAAUvjE,UAAUg+D,MAAM3/D,KAAKqH,KAAMwD,EAAGu6B,IAO1CggC,eAAezjE,WACbu5D,OAAQ,SAAAA,OAAS91B,EAAGv6B,GAAKxD,KAAKq8B,SAASw3B,OAAOrwD,EAAGu6B,IACjD+1B,UAAW,SAAAA,YAAa9zD,KAAKq8B,SAASy3B,aACtCC,OAAQ,SAAAA,OAASh2B,EAAGv6B,GAAKxD,KAAKq8B,SAAS03B,OAAOvwD,EAAGu6B,IACjDm2B,cAAe,SAAAA,cAAS1S,GAAIyS,GAAIE,GAAIC,GAAIr2B,EAAGv6B,GAAKxD,KAAKq8B,SAAS63B,cAAcD,GAAIzS,GAAI4S,GAAID,GAAI3wD,EAAGu6B,KC1FjGigC,QAAQ1jE,WACN09D,UAAW,SAAAA,YACTh4D,KAAKi4D,MAAQ,GAEfC,QAAS,SAAAA,UACPl4D,KAAKi4D,MAAQ3yB,KAEf6yB,UAAW,SAAAA,YACTn4D,KAAK47D,MACL57D,KAAK67D,OAEPxD,QAAS,SAAAA,UACP,IAAIt6B,EAAI/9B,KAAK47D,GACTp4D,EAAIxD,KAAK67D,GACT5hE,EAAI8jC,EAAEr8B,OAEV,GAAIzH,EAEF,GADA+F,KAAKi4D,MAAQj4D,KAAKq8B,SAAS03B,OAAOh2B,EAAE,GAAIv6B,EAAE,IAAMxD,KAAKq8B,SAASw3B,OAAO91B,EAAE,GAAIv6B,EAAE,IACnE,IAANvJ,EACF+F,KAAKq8B,SAAS03B,OAAOh2B,EAAE,GAAIv6B,EAAE,SAI7B,IAFA,IAAI26D,GAAKF,cAAclgC,GACnBqgC,GAAKH,cAAcz6D,GACdyjC,GAAK,EAAG8X,GAAK,EAAGA,GAAK9kD,IAAKgtC,KAAM8X,GACvC/+C,KAAKq8B,SAAS63B,cAAciK,GAAG,GAAGl3B,IAAKm3B,GAAG,GAAGn3B,IAAKk3B,GAAG,GAAGl3B,IAAKm3B,GAAG,GAAGn3B,IAAKlJ,EAAEghB,IAAKv7C,EAAEu7C,MAKnF/+C,KAAKi4D,OAAyB,IAAfj4D,KAAKi4D,OAAqB,IAANh+D,IAAU+F,KAAKq8B,SAASy3B,YAC/D9zD,KAAKi4D,MAAQ,EAAIj4D,KAAKi4D,MACtBj4D,KAAK47D,GAAK57D,KAAK67D,GAAK,MAEtBvD,MAAO,SAAAA,MAASv6B,EAAGv6B,GACjBxD,KAAK47D,GAAG11D,MAAM63B,GACd/9B,KAAK67D,GAAG31D,MAAM1C,KCvClB,SAAS66D,KAAK/hC,QAAS5iC,GACrBsG,KAAKq8B,SAAWC,QAChBt8B,KAAKs+D,GAAK5kE,EAGZ2kE,KAAK/jE,WACH09D,UAAW,SAAAA,YACTh4D,KAAKi4D,MAAQ,GAEfC,QAAS,SAAAA,UACPl4D,KAAKi4D,MAAQ3yB,KAEf6yB,UAAW,SAAAA,YACTn4D,KAAK47D,GAAK57D,KAAK67D,GAAKv2B,IACpBtlC,KAAKo4D,OAAS,GAEhBC,QAAS,SAAAA,UACH,EAAIr4D,KAAKs+D,IAAMt+D,KAAKs+D,GAAK,GAAqB,IAAhBt+D,KAAKo4D,QAAcp4D,KAAKq8B,SAAS03B,OAAO/zD,KAAK47D,GAAI57D,KAAK67D,KACpF77D,KAAKi4D,OAAyB,IAAfj4D,KAAKi4D,OAA+B,IAAhBj4D,KAAKo4D,SAAep4D,KAAKq8B,SAASy3B,YACrE9zD,KAAKi4D,OAAS,IAAGj4D,KAAKs+D,GAAK,EAAIt+D,KAAKs+D,GAAIt+D,KAAKi4D,MAAQ,EAAIj4D,KAAKi4D,QAEpEK,MAAO,SAAAA,MAASv6B,EAAGv6B,GAEjB,OADAu6B,GAAKA,EAAGv6B,GAAKA,EACLxD,KAAKo4D,QACX,KAAK,EAAGp4D,KAAKo4D,OAAS,EAAGp4D,KAAKi4D,MAAQj4D,KAAKq8B,SAAS03B,OAAOh2B,EAAGv6B,GAAKxD,KAAKq8B,SAASw3B,OAAO91B,EAAGv6B,GAAI,MAC/F,KAAK,EAAGxD,KAAKo4D,OAAS,EACtB,QACE,GAAIp4D,KAAKs+D,IAAM,EACbt+D,KAAKq8B,SAAS03B,OAAO/zD,KAAK47D,GAAIp4D,GAC9BxD,KAAKq8B,SAAS03B,OAAOh2B,EAAGv6B,OACnB,CACL,IAAIg+C,GAAKxhD,KAAK47D,IAAM,EAAI57D,KAAKs+D,IAAMvgC,EAAI/9B,KAAKs+D,GAC5Ct+D,KAAKq8B,SAAS03B,OAAOvS,GAAIxhD,KAAK67D,IAC9B77D,KAAKq8B,SAAS03B,OAAOvS,GAAIh+C,IAK/BxD,KAAK47D,GAAK79B,EAAG/9B,KAAK67D,GAAKr4D,IAIZ,IAAA+6D,WAAA,SAASjiC,SACtB,OAAO,IAAI+hC,KAAK/hC,QAAS,KAGpB,SAASkiC,WAAWliC,SACzB,OAAO,IAAI+hC,KAAK/hC,QAAS,GAGpB,SAASmiC,UAAUniC,SACxB,OAAO,IAAI+hC,KAAK/hC,QAAS,GCnDZ,IAAAoiC,KAAA,SAASC,OAAQ93C,OAC9B,IAAO5sB,EAAI0kE,OAAOj9D,QAAU,EAC5B,IAAK,IAAWwZ,EAAGyiD,GAA2B1jE,EAArCzB,EAAI,EAAUw2B,GAAK2vC,OAAO93C,MAAM,IAAQjuB,EAAIo2B,GAAGttB,OAAQlJ,EAAIyB,IAAKzB,EAEvE,IADAmlE,GAAK3uC,GAAIA,GAAK2vC,OAAO93C,MAAMruB,IACtB0iB,EAAI,EAAGA,EAAItiB,IAAKsiB,EACnB8T,GAAG9T,GAAG,IAAM8T,GAAG9T,GAAG,GAAKjH,MAAM0pD,GAAGziD,GAAG,IAAMyiD,GAAGziD,GAAG,GAAKyiD,GAAGziD,GAAG,ICLjD0jD,WAAA,SAASD,QAEtB,IADA,IAAI1kE,EAAI0kE,OAAOj9D,OAAQzI,EAAI,IAAI4P,MAAM5O,KAC5BA,GAAK,GAAGhB,EAAEgB,GAAKA,EACxB,OAAOhB,GCET,SAAS4lE,WAAW/lE,EAAGiB,KACrB,OAAOjB,EAAEiB,KAGI,ICPA+kE,gBAAA,SAASH,QACtB,IAAII,KAAOJ,OAAO12D,IAAI2L,eACtB,OAAO8qD,WAAKC,QAAQzrD,KAAK,SAAStY,EAAGwI,GAAK,OAAO27D,KAAKnkE,GAAKmkE,KAAK37D,MAG3D,SAASwQ,cAAI+qD,QAElB,IADA,IAAsC/0D,EAAlCnP,EAAI,EAAGjC,GAAK,EAAGyB,EAAI0kE,OAAOj9D,SACrBlJ,EAAIyB,IAAO2P,GAAK+0D,OAAOnmE,GAAG,MAAIiC,GAAKmP,GAC5C,OAAOnP,ECFF,SAASukE,WAAWtlE,GACzB,QAASA,GAAK,IAAM,EAAIA,EAAIA,EAAIA,GAAKA,GAAK,GAAKA,EAAIA,EAAI,GAAK,GCPzC,SAASoiE,OAAOphE,GAGnC,SAASukE,OAAOvlE,GACd,OAAOmK,KAAK+Q,IAAIlb,EAAGgB,GAKrB,OARAA,GAAKA,EAMLukE,OAAOhgB,SAAW6c,OAEXmD,QATY,CAFN,GAcO,SAASnD,OAAOphE,GAGpC,SAASwkE,QAAQxlE,GACf,OAAO,EAAImK,KAAK+Q,IAAI,EAAIlb,EAAGgB,GAK7B,OARAA,GAAKA,EAMLwkE,QAAQjgB,SAAW6c,OAEZoD,QATa,CAdP,GAAf,IA0BWC,UAAa,SAASrD,OAAOphE,GAGtC,SAASykE,UAAUzlE,GACjB,QAASA,GAAK,IAAM,EAAImK,KAAK+Q,IAAIlb,EAAGgB,GAAK,EAAImJ,KAAK+Q,IAAI,EAAIlb,EAAGgB,IAAM,EAKrE,OARAA,GAAKA,EAMLykE,UAAUlgB,SAAW6c,OAEdqD,UATe,CA1BT,GCANt7D,KAAK4xC,GCAd,IAAI5kC,GAAK,EAAI,GACTuuD,GAAK,EAAI,GACTC,GAAK,EAAI,GACTC,GAAK,IACLC,GAAK,EAAI,GACTC,GAAK,GAAK,GACVC,GAAK,MACLC,GAAK,GAAK,GACVC,GAAK,GAAK,GACVC,GAAK,EAAI/uD,GAAKA,GAMX,SAASgvD,UAAUnmE,GACxB,OAAQA,GAAKA,GAAKmX,GAAK+uD,GAAKlmE,EAAIA,EAAIA,EAAI2lE,GAAKO,IAAMlmE,GAAK0lE,IAAM1lE,EAAI4lE,GAAK5lE,EAAI8lE,GAAKI,IAAMlmE,GAAK6lE,IAAM7lE,EAAI+lE,GAAKG,IAAMlmE,GAAKgmE,IAAMhmE,EAAIimE,ICd5G,SAAS7D,OAAOrhE,GAGnC,SAASqlE,OAAOpmE,GACd,OAAOA,EAAIA,IAAMe,EAAI,GAAKf,EAAIe,GAKhC,OARAA,GAAKA,EAMLqlE,OAAOC,UAAYjE,OAEZgE,QATY,CAFL,SAcM,SAAShE,OAAOrhE,GAGpC,SAASulE,QAAQtmE,GACf,QAASA,EAAIA,IAAMe,EAAI,GAAKf,EAAIe,GAAK,EAKvC,OARAA,GAAKA,EAMLulE,QAAQD,UAAYjE,OAEbkE,QATa,CAdN,SAAhB,IA0BWC,UAAa,SAASnE,OAAOrhE,GAGtC,SAASwlE,UAAUvmE,GACjB,QAASA,GAAK,GAAK,EAAIA,EAAIA,IAAMe,EAAI,GAAKf,EAAIe,IAAMf,GAAK,GAAKA,IAAMe,EAAI,GAAKf,EAAIe,GAAK,GAAK,EAK7F,OARAA,GAAKA,EAMLwlE,UAAUF,UAAYjE,OAEfmE,UATe,CA1BR,SCAZ3M,YAAM,EAAIzvD,KAAK4xC,GAiBRyqB,YAba,SAASpE,OAAOlhE,EAAGJ,GACzC,IAAIC,EAAIoJ,KAAKkyD,KAAK,GAAKn7D,EAAIiJ,KAAKwQ,IAAI,EAAGzZ,MAAQJ,GAAK84D,aAEpD,SAAS6M,UAAUzmE,GACjB,OAAOkB,EAAIiJ,KAAK+Q,IAAI,EAAG,KAAOlb,GAAKmK,KAAKyyC,KAAK77C,EAAIf,GAAKc,GAMxD,OAHA2lE,UAAUC,UAAY,SAASxlE,GAAK,OAAOkhE,OAAOlhE,EAAGJ,EAAI84D,cACzD6M,UAAUE,OAAS,SAAS7lE,GAAK,OAAOshE,OAAOlhE,EAAGJ,IAE3C2lE,UAVe,CAHR,EACH,IAeY,SAASrE,OAAOlhE,EAAGJ,GAC1C,IAAIC,EAAIoJ,KAAKkyD,KAAK,GAAKn7D,EAAIiJ,KAAKwQ,IAAI,EAAGzZ,MAAQJ,GAAK84D,aAEpD,SAAS4M,WAAWxmE,GAClB,OAAO,EAAIkB,EAAIiJ,KAAK+Q,IAAI,GAAI,IAAMlb,GAAKA,IAAMmK,KAAKyyC,KAAK58C,EAAIe,GAAKD,GAMlE,OAHA0lE,WAAWE,UAAY,SAASxlE,GAAK,OAAOkhE,OAAOlhE,EAAGJ,EAAI84D,cAC1D4M,WAAWG,OAAS,SAAS7lE,GAAK,OAAOshE,OAAOlhE,EAAGJ,IAE5C0lE,WAVgB,CAhBT,EACH,KCFEI,yBD8BY,SAASxE,OAAOlhE,EAAGJ,GAC5C,IAAIC,EAAIoJ,KAAKkyD,KAAK,GAAKn7D,EAAIiJ,KAAKwQ,IAAI,EAAGzZ,MAAQJ,GAAK84D,aAEpD,SAASiN,aAAa7mE,GACpB,QAASA,EAAQ,EAAJA,EAAQ,GAAK,EACpBkB,EAAIiJ,KAAK+Q,IAAI,EAAG,GAAKlb,GAAKmK,KAAKyyC,KAAK77C,EAAIf,GAAKc,GAC7C,EAAII,EAAIiJ,KAAK+Q,IAAI,GAAI,GAAKlb,GAAKmK,KAAKyyC,KAAK77C,EAAIf,GAAKc,IAAM,EAMhE,OAHA+lE,aAAaH,UAAY,SAASxlE,GAAK,OAAOkhE,OAAOlhE,EAAGJ,EAAI84D,cAC5DiN,aAAaF,OAAS,SAAS7lE,GAAK,OAAOshE,OAAOlhE,EAAGJ,IAE9C+lE,aAZkB,CA7BX,EACH,ICFE,SAASxiC,GACtB,OAAO,WACL,OAAOA,KCFJ,SAASA,YAAEjlC,GAChB,OAAOA,EAAE,GAGJ,SAAS0K,YAAE1K,GAChB,OAAOA,EAAE,GCLX,SAAS0nE,eACPxgE,KAAKkhB,EAAI,KAGJ,SAASu/C,aAAahwC,MAC3BA,KAAKu2B,EACLv2B,KAAKumB,EACLvmB,KAAKk1B,EACLl1B,KAAKhjB,EACLgjB,KAAKjuB,EACLiuB,KAAK1V,EAAI,KAuLX,SAAS2lD,mBAAmBC,KAAMlwC,MAChC,IAAIj2B,EAAIi2B,KACJ+oB,EAAI/oB,KAAKhjB,EACT6Y,OAAS9rB,EAAEwsD,EAEX1gC,OACEA,OAAOq/B,IAAMnrD,EAAG8rB,OAAOq/B,EAAInM,EAC1BlzB,OAAO7Y,EAAI+rC,EAEhBmnB,KAAKz/C,EAAIs4B,EAGXA,EAAEwN,EAAI1gC,OACN9rB,EAAEwsD,EAAIxN,EACNh/C,EAAEiT,EAAI+rC,EAAEmM,EACJnrD,EAAEiT,IAAGjT,EAAEiT,EAAEu5C,EAAIxsD,GACjBg/C,EAAEmM,EAAInrD,EAGR,SAASomE,oBAAoBD,KAAMlwC,MACjC,IAAIj2B,EAAIi2B,KACJ+oB,EAAI/oB,KAAKk1B,EACTr/B,OAAS9rB,EAAEwsD,EAEX1gC,OACEA,OAAOq/B,IAAMnrD,EAAG8rB,OAAOq/B,EAAInM,EAC1BlzB,OAAO7Y,EAAI+rC,EAEhBmnB,KAAKz/C,EAAIs4B,EAGXA,EAAEwN,EAAI1gC,OACN9rB,EAAEwsD,EAAIxN,EACNh/C,EAAEmrD,EAAInM,EAAE/rC,EACJjT,EAAEmrD,IAAGnrD,EAAEmrD,EAAEqB,EAAIxsD,GACjBg/C,EAAE/rC,EAAIjT,EAGR,SAASqmE,cAAcpwC,MACrB,KAAOA,KAAKk1B,GAAGl1B,KAAOA,KAAKk1B,EAC3B,OAAOl1B,KA5NT+vC,aAAalmE,WACXsrB,YAAa46C,aAEbvN,OAAQ,SAAAA,OAAS6N,MAAOrwC,MACtB,IAAInK,OAAQy6C,QAASC,MAErB,GAAIF,MAAO,CAKT,GAJArwC,KAAKjuB,EAAIs+D,MACTrwC,KAAK1V,EAAI+lD,MAAM/lD,EACX+lD,MAAM/lD,IAAG+lD,MAAM/lD,EAAEvY,EAAIiuB,MACzBqwC,MAAM/lD,EAAI0V,KACNqwC,MAAMrzD,EAAG,CAEX,IADAqzD,MAAQA,MAAMrzD,EACPqzD,MAAMnb,GAAGmb,MAAQA,MAAMnb,EAC9Bmb,MAAMnb,EAAIl1B,UAEVqwC,MAAMrzD,EAAIgjB,KAEZnK,OAASw6C,WACA9gE,KAAKkhB,GACd4/C,MAAQD,cAAc7gE,KAAKkhB,GAC3BuP,KAAKjuB,EAAI,KACTiuB,KAAK1V,EAAI+lD,MACTA,MAAMt+D,EAAIs+D,MAAMnb,EAAIl1B,KACpBnK,OAASw6C,QAETrwC,KAAKjuB,EAAIiuB,KAAK1V,EAAI,KAClB/a,KAAKkhB,EAAIuP,KACTnK,OAAS,MAOX,IALAmK,KAAKk1B,EAAIl1B,KAAKhjB,EAAI,KAClBgjB,KAAKu2B,EAAI1gC,OACTmK,KAAKumB,GAAI,EAET8pB,MAAQrwC,KACDnK,QAAUA,OAAO0wB,GAElB1wB,UADJy6C,QAAUz6C,OAAO0gC,GACMrB,GACrBqb,MAAQD,QAAQtzD,IACHuzD,MAAMhqB,GACjB1wB,OAAO0wB,EAAIgqB,MAAMhqB,GAAI,EACrB+pB,QAAQ/pB,GAAI,EACZ8pB,MAAQC,UAEJD,QAAUx6C,OAAO7Y,IACnBizD,mBAAmB1gE,KAAMsmB,QAEzBA,QADAw6C,MAAQx6C,QACO0gC,GAEjB1gC,OAAO0wB,GAAI,EACX+pB,QAAQ/pB,GAAI,EACZ4pB,oBAAoB5gE,KAAM+gE,WAG5BC,MAAQD,QAAQpb,IACHqb,MAAMhqB,GACjB1wB,OAAO0wB,EAAIgqB,MAAMhqB,GAAI,EACrB+pB,QAAQ/pB,GAAI,EACZ8pB,MAAQC,UAEJD,QAAUx6C,OAAOq/B,IACnBib,oBAAoB5gE,KAAMsmB,QAE1BA,QADAw6C,MAAQx6C,QACO0gC,GAEjB1gC,OAAO0wB,GAAI,EACX+pB,QAAQ/pB,GAAI,EACZ0pB,mBAAmB1gE,KAAM+gE,UAG7Bz6C,OAASw6C,MAAM9Z,EAEjBhnD,KAAKkhB,EAAE81B,GAAI,GAGb5P,OAAQ,SAAAA,OAAS3W,MACXA,KAAK1V,IAAG0V,KAAK1V,EAAEvY,EAAIiuB,KAAKjuB,GACxBiuB,KAAKjuB,IAAGiuB,KAAKjuB,EAAEuY,EAAI0V,KAAK1V,GAC5B0V,KAAK1V,EAAI0V,KAAKjuB,EAAI,KAElB,IACI6jB,QAGAzY,KACA4kC,IALAlsB,OAASmK,KAAKu2B,EAEdthB,KAAOjV,KAAKk1B,EACZhgB,MAAQlV,KAAKhjB,EAsCjB,GAhCKG,KAFA83B,KACKC,MACEk7B,cAAcl7B,OADFD,KADNC,MAIdrf,OACEA,OAAOq/B,IAAMl1B,KAAMnK,OAAOq/B,EAAI/3C,KAC7B0Y,OAAO7Y,EAAIG,KAEhB5N,KAAKkhB,EAAItT,KAGP83B,MAAQC,OACV6M,IAAM5kC,KAAKopC,EACXppC,KAAKopC,EAAIvmB,KAAKumB,EACdppC,KAAK+3C,EAAIjgB,KACTA,KAAKshB,EAAIp5C,KACLA,OAAS+3B,OACXrf,OAAS1Y,KAAKo5C,EACdp5C,KAAKo5C,EAAIv2B,KAAKu2B,EACdv2B,KAAO7iB,KAAKH,EACZ6Y,OAAOq/B,EAAIl1B,KACX7iB,KAAKH,EAAIk4B,MACTA,MAAMqhB,EAAIp5C,OAEVA,KAAKo5C,EAAI1gC,OACTA,OAAS1Y,KACT6iB,KAAO7iB,KAAKH,KAGd+kC,IAAM/hB,KAAKumB,EACXvmB,KAAO7iB,MAGL6iB,OAAMA,KAAKu2B,EAAI1gC,SACfksB,IACJ,GAAI/hB,MAAQA,KAAKumB,EAAKvmB,KAAKumB,GAAI,MAA/B,CAEA,EAAG,CACD,GAAIvmB,OAASzwB,KAAKkhB,EAAG,MACrB,GAAIuP,OAASnK,OAAOq/B,GAQlB,IAPAt/B,QAAUC,OAAO7Y,GACLupC,IACV3wB,QAAQ2wB,GAAI,EACZ1wB,OAAO0wB,GAAI,EACX0pB,mBAAmB1gE,KAAMsmB,QACzBD,QAAUC,OAAO7Y,GAEd4Y,QAAQs/B,GAAKt/B,QAAQs/B,EAAE3O,GACpB3wB,QAAQ5Y,GAAK4Y,QAAQ5Y,EAAEupC,EAAI,CAC5B3wB,QAAQ5Y,GAAM4Y,QAAQ5Y,EAAEupC,IAC3B3wB,QAAQs/B,EAAE3O,GAAI,EACd3wB,QAAQ2wB,GAAI,EACZ4pB,oBAAoB5gE,KAAMqmB,SAC1BA,QAAUC,OAAO7Y,GAEnB4Y,QAAQ2wB,EAAI1wB,OAAO0wB,EACnB1wB,OAAO0wB,EAAI3wB,QAAQ5Y,EAAEupC,GAAI,EACzB0pB,mBAAmB1gE,KAAMsmB,QACzBmK,KAAOzwB,KAAKkhB,EACZ,YAUF,IAPAmF,QAAUC,OAAOq/B,GACL3O,IACV3wB,QAAQ2wB,GAAI,EACZ1wB,OAAO0wB,GAAI,EACX4pB,oBAAoB5gE,KAAMsmB,QAC1BD,QAAUC,OAAOq/B,GAEdt/B,QAAQs/B,GAAKt/B,QAAQs/B,EAAE3O,GACtB3wB,QAAQ5Y,GAAK4Y,QAAQ5Y,EAAEupC,EAAI,CAC1B3wB,QAAQs/B,GAAMt/B,QAAQs/B,EAAE3O,IAC3B3wB,QAAQ5Y,EAAEupC,GAAI,EACd3wB,QAAQ2wB,GAAI,EACZ0pB,mBAAmB1gE,KAAMqmB,SACzBA,QAAUC,OAAOq/B,GAEnBt/B,QAAQ2wB,EAAI1wB,OAAO0wB,EACnB1wB,OAAO0wB,EAAI3wB,QAAQs/B,EAAE3O,GAAI,EACzB4pB,oBAAoB5gE,KAAMsmB,QAC1BmK,KAAOzwB,KAAKkhB,EACZ,MAGJmF,QAAQ2wB,GAAI,EACZvmB,KAAOnK,OACPA,OAASA,OAAO0gC,SACRv2B,KAAKumB,GAEXvmB,OAAMA,KAAKumB,GAAI,MA+CRwpB,kCC1OR,SAASS,WAAWv7B,KAAMC,MAAOgS,GAAIC,IAC1C,IAAIrlB,MAAQ,KAAM,MACdtwB,MAAQ8vB,cAAM7rB,KAAKqsB,MAAQ,EAO/B,OANAA,KAAKmT,KAAOA,KACZnT,KAAKoT,MAAQA,MACTgS,IAAIupB,WAAW3uC,KAAMmT,KAAMC,MAAOgS,IAClCC,IAAIspB,WAAW3uC,KAAMoT,MAAOD,KAAMkS,IACtCupB,cAAMz7B,KAAKzjC,OAAOm/D,UAAUl7D,KAAKjE,OACjCk/D,cAAMx7B,MAAM1jC,OAAOm/D,UAAUl7D,KAAKjE,OAC3BswB,KAGF,SAAS8uC,iBAAiB37B,KAAMiS,GAAIC,IACzC,IAAIrlB,MAAQolB,GAAIC,IAEhB,OADArlB,KAAKmT,KAAOA,KACLnT,KAGF,SAAS2uC,WAAW3uC,KAAMmT,KAAMC,MAAO27B,QACvC/uC,KAAK,IAAOA,KAAK,GAIXA,KAAKmT,OAASC,MACvBpT,KAAK,GAAK+uC,OAEV/uC,KAAK,GAAK+uC,QANV/uC,KAAK,GAAK+uC,OACV/uC,KAAKmT,KAAOA,KACZnT,KAAKoT,MAAQA,OASjB,SAAS47B,SAAShvC,KAAMgvB,GAAI+S,GAAI9S,GAAIyS,IAClC,IAUI36D,EAVAsB,EAAI23B,KAAK,GACTnvB,EAAImvB,KAAK,GACTivC,GAAK5mE,EAAE,GACP6mE,GAAK7mE,EAAE,GAGPk7C,GAAK,EACLC,GAAK,EACLyf,GAJKpyD,EAAE,GAIGo+D,GACV/L,GAJKryD,EAAE,GAIGq+D,GAId,GADAnoE,EAAIioD,GAAKigB,GACJhM,MAAMl8D,EAAI,GAAf,CAEA,GADAA,GAAKk8D,GACDA,GAAK,EAAG,CACV,GAAIl8D,EAAIw8C,GAAI,OACRx8C,EAAIy8C,KAAIA,GAAKz8C,QACZ,GAAIk8D,GAAK,EAAG,CACjB,GAAIl8D,EAAIy8C,GAAI,OACRz8C,EAAIw8C,KAAIA,GAAKx8C,GAInB,GADAA,EAAIkoD,GAAKggB,GACJhM,MAAMl8D,EAAI,GAAf,CAEA,GADAA,GAAKk8D,GACDA,GAAK,EAAG,CACV,GAAIl8D,EAAIy8C,GAAI,OACRz8C,EAAIw8C,KAAIA,GAAKx8C,QACZ,GAAIk8D,GAAK,EAAG,CACjB,GAAIl8D,EAAIw8C,GAAI,OACRx8C,EAAIy8C,KAAIA,GAAKz8C,GAInB,GADAA,EAAIg7D,GAAKmN,GACJhM,MAAMn8D,EAAI,GAAf,CAEA,GADAA,GAAKm8D,GACDA,GAAK,EAAG,CACV,GAAIn8D,EAAIw8C,GAAI,OACRx8C,EAAIy8C,KAAIA,GAAKz8C,QACZ,GAAIm8D,GAAK,EAAG,CACjB,GAAIn8D,EAAIy8C,GAAI,OACRz8C,EAAIw8C,KAAIA,GAAKx8C,GAInB,GADAA,EAAI26D,GAAKwN,GACJhM,MAAMn8D,EAAI,GAAf,CAEA,GADAA,GAAKm8D,GACDA,GAAK,EAAG,CACV,GAAIn8D,EAAIy8C,GAAI,OACRz8C,EAAIw8C,KAAIA,GAAKx8C,QACZ,GAAIm8D,GAAK,EAAG,CACjB,GAAIn8D,EAAIw8C,GAAI,OACRx8C,EAAIy8C,KAAIA,GAAKz8C,GAGnB,QAAMw8C,GAAK,GAAQC,GAAK,KAEpBD,GAAK,IAAGvjB,KAAK,IAAMivC,GAAK1rB,GAAK0f,GAAIiM,GAAK3rB,GAAK2f,KAC3C1f,GAAK,IAAGxjB,KAAK,IAAMivC,GAAKzrB,GAAKyf,GAAIiM,GAAK1rB,GAAK0f,MACxC,OAGT,SAASiM,YAAYnvC,KAAMgvB,GAAI+S,GAAI9S,GAAIyS,IACrC,IAAIrc,GAAKrlB,KAAK,GACd,GAAIqlB,GAAI,OAAO,EAEf,IASI+pB,GACAC,GAVAjqB,GAAKplB,KAAK,GACVmT,KAAOnT,KAAKmT,KACZC,MAAQpT,KAAKoT,MACbk8B,GAAKn8B,KAAK,GACVo8B,GAAKp8B,KAAK,GACVq8B,GAAKp8B,MAAM,GACXq8B,GAAKr8B,MAAM,GACXs8B,IAAMJ,GAAKE,IAAM,EACjBG,IAAMJ,GAAKE,IAAM,EAIrB,GAAIA,KAAOF,GAAI,CACb,GAAIG,GAAK1gB,IAAM0gB,IAAMzgB,GAAI,OACzB,GAAIqgB,GAAKE,GAAI,CACX,GAAKpqB,IACA,GAAIA,GAAG,IAAMsc,GAAI,YADbtc,IAAMsqB,GAAI3N,IAEnB1c,IAAMqqB,GAAIhO,QACL,CACL,GAAKtc,IACA,GAAIA,GAAG,GAAK2c,GAAI,YADZ3c,IAAMsqB,GAAIhO,IAEnBrc,IAAMqqB,GAAI3N,UAKZ,GADAsN,GAAKM,IADLP,IAAME,GAAKE,KAAOC,GAAKF,KACRG,GACXN,IAAM,GAAKA,GAAK,EAClB,GAAIE,GAAKE,GAAI,CACX,GAAKpqB,IACA,GAAIA,GAAG,IAAMsc,GAAI,YADbtc,KAAO2c,GAAKsN,IAAMD,GAAIrN,IAE/B1c,KAAOqc,GAAK2N,IAAMD,GAAI1N,QACjB,CACL,GAAKtc,IACA,GAAIA,GAAG,GAAK2c,GAAI,YADZ3c,KAAOsc,GAAK2N,IAAMD,GAAI1N,IAE/Brc,KAAO0c,GAAKsN,IAAMD,GAAIrN,SAGxB,GAAIwN,GAAKE,GAAI,CACX,GAAKrqB,IACA,GAAIA,GAAG,IAAM6J,GAAI,YADb7J,IAAM4J,GAAIogB,GAAKpgB,GAAKqgB,IAE7BhqB,IAAM4J,GAAImgB,GAAKngB,GAAKogB,QACf,CACL,GAAKjqB,IACA,GAAIA,GAAG,GAAK4J,GAAI,YADZ5J,IAAM6J,GAAImgB,GAAKngB,GAAKogB,IAE7BhqB,IAAM2J,GAAIogB,GAAKpgB,GAAKqgB,IAO1B,OAFArvC,KAAK,GAAKolB,GACVplB,KAAK,GAAKqlB,IACH,EC9IT,SAASuqB,kBAAkBC,KAAM7vC,MAC/B,IAAI8vC,KAAOD,KAAKC,KACZC,GAAK/vC,KAAKmT,KACV68B,GAAKhwC,KAAKoT,MAEd,OADI08B,OAASE,KAAIA,GAAKD,GAAIA,GAAKD,MAC3BE,GAAW1+D,KAAKizC,MAAMyrB,GAAG,GAAKD,GAAG,GAAIC,GAAG,GAAKD,GAAG,KAChDD,OAASC,IAAIA,GAAK/vC,KAAK,GAAIgwC,GAAKhwC,KAAK,KACpC+vC,GAAK/vC,KAAK,GAAIgwC,GAAKhwC,KAAK,IACtB1uB,KAAKizC,MAAMwrB,GAAG,GAAKC,GAAG,GAAIA,GAAG,GAAKD,GAAG,KAGvC,SAASE,kBAAkBJ,KAAM7vC,MACtC,OAAOA,OAAOA,KAAKmT,OAAS08B,KAAKC,OAG5B,SAASI,gBAAgBL,KAAM7vC,MACpC,OAAOA,OAAOA,KAAKmT,OAAS08B,KAAKC,OCvBnC,IAEWK,YAFPC,cAaG,SAASC,aAAavN,KAC3B,IAAIwN,KAAOxN,IAAI7yD,EACXsgE,KAAOzN,IAAIt6C,EAEf,GAAK8nD,MAASC,KAAd,CAEA,IAAIC,MAAQF,KAAKR,KACbW,MAAQ3N,IAAIgN,KACZY,MAAQH,KAAKT,KAEjB,GAAIU,QAAUE,MAAd,CAEA,IAAIC,GAAKF,MAAM,GACXG,GAAKH,MAAM,GACXxB,GAAKuB,MAAM,GAAKG,GAChBzB,GAAKsB,MAAM,GAAKI,GAChBtL,GAAKoL,MAAM,GAAKC,GAChBpL,GAAKmL,MAAM,GAAKE,GAEhBrqE,EAAI,GAAK0oE,GAAK1J,GAAK2J,GAAK5J,IAC5B,KAAI/+D,IAAMsqE,kBAAV,CAEA,IAAIC,GAAK7B,GAAKA,GAAKC,GAAKA,GACpB6B,GAAKzL,GAAKA,GAAKC,GAAKA,GACpB/5B,GAAK+5B,GAAKuL,GAAK5B,GAAK6B,IAAMxqE,EAC1B0K,GAAKg+D,GAAK8B,GAAKzL,GAAKwL,IAAMvqE,EAE1ByqE,OAASZ,WAAW56C,OAAS,IApCnC,SAASy7C,SACP/C,aAAazgE,MACbA,KAAK+9B,EACL/9B,KAAKwD,EACLxD,KAAKq1D,IACLr1D,KAAKqiE,KACLriE,KAAK83D,GAAK,MA+BVyL,OAAOlO,IAAMA,IACbkO,OAAOlB,KAAOW,MACdO,OAAOxlC,EAAIA,EAAImlC,GACfK,OAAO//D,GAAK+/D,OAAOzL,GAAKt0D,EAAI2/D,IAAMt/D,KAAK6Q,KAAKqpB,EAAIA,EAAIv6B,EAAIA,GAExD6xD,IAAIkO,OAASA,OAKb,IAHA,IAAIE,OAAS,KACThzC,KAAOizC,QAAQxiD,EAEZuP,MACL,GAAI8yC,OAAO//D,EAAIitB,KAAKjtB,GAAM+/D,OAAO//D,IAAMitB,KAAKjtB,GAAK+/D,OAAOxlC,GAAKtN,KAAKsN,EAAI,CACpE,IAAItN,KAAKk1B,EACJ,CAAE8d,OAAShzC,KAAKjuB,EAAG,MADZiuB,KAAOA,KAAKk1B,MAEnB,CACL,IAAIl1B,KAAKhjB,EACJ,CAAEg2D,OAAShzC,KAAM,MADVA,KAAOA,KAAKhjB,EAK5Bi2D,QAAQzQ,OAAOwQ,OAAQF,QAClBE,SAAQf,YAAca,WAGtB,SAASI,aAAatO,KAC3B,IAAIkO,OAASlO,IAAIkO,OACbA,SACGA,OAAO/gE,IAAGkgE,YAAca,OAAOxoD,GACpC2oD,QAAQt8B,OAAOm8B,QACfZ,WAAWz8D,KAAKq9D,QAChB9C,aAAa8C,QACblO,IAAIkO,OAAS,MCrEjB,IAAIK,aASJ,SAASC,YAAYxB,MACnB,IAAIyB,MAAQF,UAAU77C,OAAS,IARjC,SAASg8C,QACPtD,aAAazgE,MACbA,KAAKuyB,KACLvyB,KAAKqiE,KACLriE,KAAKujE,OAAS,MAMd,OADAO,MAAMzB,KAAOA,KACNyB,MAGT,SAASE,YAAYF,OACnBH,aAAaG,OACbG,QAAQ78B,OAAO08B,OACfF,UAAU19D,KAAK49D,OACfrD,aAAaqD,OAGR,SAASI,YAAYJ,OAC1B,IAAIP,OAASO,MAAMP,OACfxlC,EAAIwlC,OAAOxlC,EACXv6B,EAAI+/D,OAAOzL,GACXwJ,QAAUvjC,EAAGv6B,GACbo/C,SAAWkhB,MAAMthE,EACjBoL,KAAOk2D,MAAM/oD,EACbopD,cAAgBL,OAEpBE,YAAYF,OAGZ,IADA,IAAIjB,KAAOjgB,SACJigB,KAAKU,QACL1/D,KAAKooB,IAAI8R,EAAI8kC,KAAKU,OAAOxlC,GAAK0zB,iBAC9B5tD,KAAKooB,IAAIzoB,EAAIq/D,KAAKU,OAAOzL,IAAMrG,iBACpC7O,SAAWigB,KAAKrgE,EAChB2hE,aAAa18D,QAAQo7D,MACrBmB,YAAYnB,MACZA,KAAOjgB,SAGTuhB,aAAa18D,QAAQo7D,MACrBc,aAAad,MAGb,IADA,IAAIC,KAAOl1D,KACJk1D,KAAKS,QACL1/D,KAAKooB,IAAI8R,EAAI+kC,KAAKS,OAAOxlC,GAAK0zB,iBAC9B5tD,KAAKooB,IAAIzoB,EAAIs/D,KAAKS,OAAOzL,IAAMrG,iBACpC7jD,KAAOk1D,KAAK/nD,EACZopD,aAAaj+D,KAAK48D,MAClBkB,YAAYlB,MACZA,KAAOl1D,KAGTu2D,aAAaj+D,KAAK48D,MAClBa,aAAab,MAEb,IACIsB,KADAC,MAAQF,aAAaziE,OAEzB,IAAK0iE,KAAO,EAAGA,KAAOC,QAASD,KAC7BtB,KAAOqB,aAAaC,MACpBvB,KAAOsB,aAAaC,KAAO,GAC3BlD,WAAW4B,KAAKvwC,KAAMswC,KAAKR,KAAMS,KAAKT,KAAMf,QAG9CuB,KAAOsB,aAAa,IACpBrB,KAAOqB,aAAaE,MAAQ,IACvB9xC,KAAO0uC,WAAW4B,KAAKR,KAAMS,KAAKT,KAAM,KAAMf,QAEnDsB,aAAaC,MACbD,aAAaE,MAGR,SAASwB,SAASjC,MASvB,IARA,IAEIQ,KACAC,KACAyB,IACAC,IALAzmC,EAAIskC,KAAK,GACToC,UAAYpC,KAAK,GAKjB5xC,KAAOwzC,QAAQ/iD,EAEZuP,MAEL,IADA8zC,IAAMG,eAAej0C,KAAMg0C,WAAa1mC,GAC9B0zB,gBAAShhC,KAAOA,KAAKk1B,MAAQ,CAErC,MADA6e,IAAMzmC,EAAI4mC,gBAAgBl0C,KAAMg0C,YACtBhT,iBAMH,CACD8S,KAAO9S,iBACToR,KAAOpyC,KAAKjuB,EACZsgE,KAAOryC,MACE+zC,KAAO/S,iBAChBoR,KAAOpyC,KACPqyC,KAAOryC,KAAK1V,GAEZ8nD,KAAOC,KAAOryC,KAEhB,MAfA,IAAKA,KAAKhjB,EAAG,CACXo1D,KAAOpyC,KACP,MAEFA,KAAOA,KAAKhjB,GFhGb,SAASm3D,WAAWvC,MACzB,OAAOlB,cAAMkB,KAAKpgE,QAChBogE,KAAMA,KACNjB,cE6GFwD,CAAWvC,MACX,IAAIwC,OAAShB,YAAYxB,MAGzB,GAFA4B,QAAQhR,OAAO4P,KAAMgC,QAEhBhC,MAASC,KAAd,CAEA,GAAID,OAASC,KAOX,OANAa,aAAad,MACbC,KAAOe,YAAYhB,KAAKR,MACxB4B,QAAQhR,OAAO4R,OAAQ/B,MACvB+B,OAAOtyC,KAAOuwC,KAAKvwC,KAAO0uC,WAAW4B,KAAKR,KAAMwC,OAAOxC,MACvDO,aAAaC,WACbD,aAAaE,MAIf,GAAKA,KAAL,CAMAa,aAAad,MACbc,aAAab,MAEb,IAAIC,MAAQF,KAAKR,KACbb,GAAKuB,MAAM,GACXtB,GAAKsB,MAAM,GACXG,GAAKb,KAAK,GAAKb,GACf2B,GAAKd,KAAK,GAAKZ,GACfwB,MAAQH,KAAKT,KACbxK,GAAKoL,MAAM,GAAKzB,GAChB1J,GAAKmL,MAAM,GAAKxB,GAChB3oE,EAAI,GAAKoqE,GAAKpL,GAAKqL,GAAKtL,IACxBiN,GAAK5B,GAAKA,GAAKC,GAAKA,GACpBG,GAAKzL,GAAKA,GAAKC,GAAKA,GACpBwJ,SAAWxJ,GAAKgN,GAAK3B,GAAKG,IAAMxqE,EAAI0oE,IAAK0B,GAAKI,GAAKzL,GAAKiN,IAAMhsE,EAAI2oE,IAEtEP,WAAW4B,KAAKvwC,KAAMwwC,MAAOE,MAAO3B,QACpCuD,OAAOtyC,KAAO0uC,WAAW8B,MAAOV,KAAM,KAAMf,QAC5CwB,KAAKvwC,KAAO0uC,WAAWoB,KAAMY,MAAO,KAAM3B,QAC1CsB,aAAaC,MACbD,aAAaE,WAzBX+B,OAAOtyC,KAAO0uC,WAAW4B,KAAKR,KAAMwC,OAAOxC,OA4B/C,SAASqC,eAAerP,IAAKoP,WAC3B,IAAIpC,KAAOhN,IAAIgN,KACX0C,MAAQ1C,KAAK,GACb2C,MAAQ3C,KAAK,GACb4C,KAAOD,MAAQP,UAEnB,IAAKQ,KAAM,OAAOF,MAElB,IAAIlC,KAAOxN,IAAI7yD,EACf,IAAKqgE,KAAM,OAAQjiB,IAGnB,IAAIskB,OADJ7C,KAAOQ,KAAKR,MACK,GACb8C,MAAQ9C,KAAK,GACb+C,MAAQD,MAAQV,UAEpB,IAAKW,MAAO,OAAOF,MAEnB,IAAIG,GAAKH,MAAQH,MACbO,KAAO,EAAIL,KAAO,EAAIG,MACtBhiE,EAAIiiE,GAAKD,MAEb,OAAIE,OAAeliE,EAAIS,KAAK6Q,KAAKtR,EAAIA,EAAI,EAAIkiE,MAAQD,GAAKA,KAAO,EAAID,OAASD,MAAQC,MAAQ,EAAIJ,MAAQC,KAAO,KAAOK,KAAOP,OAEvHA,MAAQG,OAAS,EAG3B,SAASP,gBAAgBtP,IAAKoP,WAC5B,IAAI3B,KAAOzN,IAAIt6C,EACf,GAAI+nD,KAAM,OAAO4B,eAAe5B,KAAM2B,WACtC,IAAIpC,KAAOhN,IAAIgN,KACf,OAAOA,KAAK,KAAOoC,UAAYpC,KAAK,GAAKzhB,ICzLpC,IAEIqjB,QACA9C,cACAuC,QACA3xC,cALA0/B,gBAAU,KACV2R,iBAAW,MAMtB,SAASmC,aAAa3qE,EAAGwI,EAAGvK,GAC1B,OAAQ+B,EAAE,GAAK/B,EAAE,KAAOuK,EAAE,GAAKxI,EAAE,KAAOA,EAAE,GAAKwI,EAAE,KAAOvK,EAAE,GAAK+B,EAAE,IAGnE,SAAS4qE,cAAc5qE,EAAGwI,GACxB,OAAOA,EAAE,GAAKxI,EAAE,IACTwI,EAAE,GAAKxI,EAAE,GAGH,SAAS6qE,QAAQC,MAAOC,QACrC,IACI5nC,EACAv6B,EACA+/D,OAHAlB,KAAOqD,MAAMxyD,KAAKsyD,eAAez9C,MAUrC,IALAgK,iBACAovC,cAAQ,IAAIt4D,MAAM68D,MAAMhkE,QACxBuiE,QAAU,IAAIzD,iBACdkD,QAAU,IAAIlD,mBAIZ,GADA+C,OAASb,YACLL,QAAUkB,QAAUlB,KAAK,GAAKkB,OAAO//D,GAAM6+D,KAAK,KAAOkB,OAAO//D,GAAK6+D,KAAK,GAAKkB,OAAOxlC,GAClFskC,KAAK,KAAOtkC,GAAKskC,KAAK,KAAO7+D,IAC/B8gE,SAASjC,MACTtkC,EAAIskC,KAAK,GAAI7+D,EAAI6+D,KAAK,IAExBA,KAAOqD,MAAM39C,UACR,KAAIw7C,OAGT,MAFAW,YAAYX,OAAOlO,KAQvB,GHrBK,SAASuQ,oBACd,IAAK,IAA6BxD,KAAMhB,UAAWlmD,EAAGtiB,EAA7CJ,EAAI,EAAGyB,EAAIknE,cAAMz/D,OAA+BlJ,EAAIyB,IAAKzB,EAChE,IAAK4pE,KAAOjB,cAAM3oE,MAAQI,GAAKwoE,UAAYgB,KAAKhB,WAAW1/D,QAAS,CAClE,IAAIO,MAAQ,IAAI4G,MAAMjQ,GAClBmtC,MAAQ,IAAIl9B,MAAMjQ,GACtB,IAAKsiB,EAAI,EAAGA,EAAItiB,IAAKsiB,EAAGjZ,MAAMiZ,GAAKA,EAAG6qB,MAAM7qB,GAAKinD,kBAAkBC,KAAMrwC,cAAMqvC,UAAUlmD,KAEzF,IADAjZ,MAAMiR,KAAK,SAAS1a,EAAG0iB,GAAK,OAAO6qB,MAAM7qB,GAAK6qB,MAAMvtC,KAC/C0iB,EAAI,EAAGA,EAAItiB,IAAKsiB,EAAG6qB,MAAM7qB,GAAKkmD,UAAUn/D,MAAMiZ,IACnD,IAAKA,EAAI,EAAGA,EAAItiB,IAAKsiB,EAAGkmD,UAAUlmD,GAAK6qB,MAAM7qB,IGWjD0qD,GAEID,OAAQ,CACV,IAAIpkB,IAAMokB,OAAO,GAAG,GAChBrR,IAAMqR,OAAO,GAAG,GAChBnkB,IAAMmkB,OAAO,GAAG,GAChB1R,IAAM0R,OAAO,GAAG,IJqGjB,SAASE,UAAUtkB,GAAI+S,GAAI9S,GAAIyS,IAIpC,IAHA,IACI1hC,KADA/5B,EAAIu5B,cAAMrwB,OAGPlJ,KACAkpE,YAAYnvC,KAAOR,cAAMv5B,GAAI+oD,GAAI+S,GAAI9S,GAAIyS,KACtCsN,SAAShvC,KAAMgvB,GAAI+S,GAAI9S,GAAIyS,MAC1BpwD,KAAKooB,IAAIsG,KAAK,GAAG,GAAKA,KAAK,GAAG,IAAMk/B,iBAClC5tD,KAAKooB,IAAIsG,KAAK,GAAG,GAAKA,KAAK,GAAG,IAAMk/B,yBACtC1/B,cAAMv5B,GI7GfqtE,CAAUtkB,GAAI+S,GAAI9S,GAAIyS,IHbnB,SAAS6R,UAAUvkB,GAAI+S,GAAI9S,GAAIyS,IACpC,IACI8R,MACA3D,KACAC,KACA2D,UACA5E,UACA6E,WACA/nE,MACAgoE,OACAC,OACAz5D,IACA05D,KACAC,KAZAC,OAASnF,cAAMz/D,OAaf6kE,OAAQ,EAEZ,IAAKR,MAAQ,EAAGA,MAAQO,SAAUP,MAChC,GAAI3D,KAAOjB,cAAM4E,OAAQ,CAMvB,IALA1D,KAAOD,KAAKC,KAEZ2D,WADA5E,UAAYgB,KAAKhB,WACK1/D,OAGfskE,aACAj0C,cAAMqvC,UAAU4E,aACnB5E,UAAU95D,OAAO0+D,UAAW,GAMhC,IADAA,UAAY,EAAGC,WAAa7E,UAAU1/D,OAC/BskE,UAAYC,YACyCG,MAA1D15D,IAAM+1D,gBAAgBL,KAAMrwC,cAAMqvC,UAAU4E,cAAyB,GAAIK,KAAO35D,IAAI,GACPw5D,QAA7EhoE,MAAQskE,kBAAkBJ,KAAMrwC,cAAMqvC,YAAY4E,UAAYC,eAA8B,GAAIE,OAASjoE,MAAM,IAC3G2F,KAAKooB,IAAIm6C,KAAOF,QAAUzU,iBAAW5tD,KAAKooB,IAAIo6C,KAAOF,QAAU1U,mBACjE2P,UAAU95D,OAAO0+D,UAAW,EAAGj0C,cAAM7rB,KAAKm7D,iBAAiBgB,KAAM31D,IAC7D7I,KAAKooB,IAAIm6C,KAAO7kB,IAAMkQ,iBAAWwC,GAAKoS,KAAO5U,iBAAWlQ,GAAI19C,KAAKooB,IAAIi6C,OAAS3kB,IAAMkQ,gBAAU0U,OAASlS,IACrGpwD,KAAKooB,IAAIo6C,KAAOpS,IAAMxC,iBAAWjQ,GAAK4kB,KAAO3U,iBAAW5tD,KAAKooB,IAAIk6C,OAASlS,IAAMxC,gBAAUyU,OAAS1kB,GAAIyS,IACvGpwD,KAAKooB,IAAIm6C,KAAO5kB,IAAMiQ,iBAAW4U,KAAO/R,GAAK7C,iBAAWjQ,GAAI39C,KAAKooB,IAAIi6C,OAAS1kB,IAAMiQ,gBAAU0U,OAAS7R,IACvGzwD,KAAKooB,IAAIo6C,KAAO/R,IAAM7C,iBAAW2U,KAAO7kB,GAAKkQ,iBAAW5tD,KAAKooB,IAAIk6C,OAAS7R,IAAM7C,gBAAUyU,OAAS3kB,GAAI+S,IACvG,OAAS,KACb2R,YAIFA,aAAYM,OAAQ,GAM5B,GAAIA,MAAO,CACT,IAAI/Q,GAAIC,GAAI2B,GAAIoP,GAAK5lB,IAErB,IAAKmlB,MAAQ,EAAGQ,MAAQ,KAAMR,MAAQO,SAAUP,OAC1C3D,KAAOjB,cAAM4E,UAIf3O,IAFA5B,IADA6M,KAAOD,KAAKC,MACF,GAAK9gB,IAELiU,IADVC,GAAK4M,KAAK,GAAK/N,IACKmB,IACX+Q,KAAIA,GAAKpP,GAAImP,MAAQnE,MAIlC,GAAImE,MAAO,CACT,IAAIE,KAAOllB,GAAI+S,IAAKoS,KAAOnlB,GAAI0S,IAAK0S,KAAOnlB,GAAIyS,IAAK2S,KAAOplB,GAAI8S,IAC/DiS,MAAMnF,UAAUl7D,KACd6rB,cAAM7rB,KAAKm7D,iBAAiBgB,KAAOkE,MAAMlE,KAAMoE,IAAKC,MAAQ,EAC5D30C,cAAM7rB,KAAKm7D,iBAAiBgB,KAAMqE,IAAKC,MAAQ,EAC/C50C,cAAM7rB,KAAKm7D,iBAAiBgB,KAAMsE,IAAKC,MAAQ,EAC/C70C,cAAM7rB,KAAKm7D,iBAAiBgB,KAAMuE,IAAKH,MAAQ,IAMrD,IAAKV,MAAQ,EAAGA,MAAQO,SAAUP,OAC5B3D,KAAOjB,cAAM4E,UACV3D,KAAKhB,UAAU1/D,eACXy/D,cAAM4E,QGjEjBD,CAAUvkB,GAAI+S,GAAI9S,GAAIyS,IAGxBj0D,KAAK+xB,MAAQA,cACb/xB,KAAKmhE,MAAQA,cAEb8C,QACAP,QACA3xC,cACAovC,cAAQ,KAGVsE,QAAQnrE,WACNsrB,YAAa6/C,QAEboB,SAAU,SAAAA,WACR,IAAI90C,MAAQ/xB,KAAK+xB,MAEjB,OAAO/xB,KAAKmhE,MAAMl5D,IAAI,SAASm6D,MAC7B,IAAI0E,QAAU1E,KAAKhB,UAAUn5D,IAAI,SAASzP,GAAK,OAAOgqE,kBAAkBJ,KAAMrwC,MAAMv5B,MAEpF,OADAsuE,QAAQ97D,KAAOo3D,KAAKC,KAAKr3D,KAClB87D,WAIXC,UAAW,SAAAA,YACT,IAAIA,aACAh1C,MAAQ/xB,KAAK+xB,MAsBjB,OApBA/xB,KAAKmhE,MAAMr4D,QAAQ,SAASs5D,KAAM5pE,GAChC,GAAMI,GAAKwoE,UAAYgB,KAAKhB,WAAW1/D,OASvC,IARA,IACI0/D,UAEAxoE,EACA+kE,GAJA0E,KAAOD,KAAKC,KAEZnnD,GAAK,EAGL8rD,GAAKj1C,MAAMqvC,UAAUxoE,EAAI,IACzBo2B,GAAKg4C,GAAGthC,OAAS28B,KAAO2E,GAAGrhC,MAAQqhC,GAAGthC,OAEjCxqB,EAAItiB,GACX+kE,GAAK3uC,GAELA,IADAg4C,GAAKj1C,MAAMqvC,UAAUlmD,KACbwqB,OAAS28B,KAAO2E,GAAGrhC,MAAQqhC,GAAGthC,KAClCi4B,IAAM3uC,IAAMx2B,EAAImlE,GAAG17D,OAASzJ,EAAIw2B,GAAG/sB,OAASsjE,aAAalD,KAAM1E,GAAI3uC,IAAM,GAC3E+3C,UAAU7gE,MAAMm8D,KAAKr3D,KAAM2yD,GAAG3yD,KAAMgkB,GAAGhkB,SAKtC+7D,WAGTE,MAAO,SAAAA,QACL,OAAOjnE,KAAK+xB,MAAMre,OAAO,SAAS6e,MAChC,OAAOA,KAAKoT,QACX19B,IAAI,SAASsqB,MACd,OACE9N,OAAQ8N,KAAKmT,KAAK16B,KAClBqyC,OAAQ9qB,KAAKoT,MAAM36B,SAKzBkgB,KAAM,SAAAA,KAAS6S,EAAGv6B,EAAG0jE,QAInB,IAHA,IAAiBjgC,GAAkDm7B,KAA/DtH,KAAO96D,KAAU++C,GAAK+b,KAAKqM,QAAU,EAAGltE,EAAI6gE,KAAKqG,MAAMz/D,SAGlD0gE,KAAOtH,KAAKqG,MAAMpiB,MAAM,KAAMA,IAAM9kD,EAAG,OAAO,KACvD,IAAIu7D,GAAKz3B,EAAIqkC,KAAKC,KAAK,GAAI5M,GAAKjyD,EAAI4+D,KAAKC,KAAK,GAAIjL,GAAK5B,GAAKA,GAAKC,GAAKA,GAGtE,GACE2M,KAAOtH,KAAKqG,MAAMl6B,GAAK8X,IAAKA,GAAK,KACjCqjB,KAAKhB,UAAUt4D,QAAQ,SAASpO,GAC9B,IAAI63B,KAAOuoC,KAAK/oC,MAAMr3B,GAAIkP,EAAI2oB,KAAKmT,KACnC,GAAK97B,IAAMw4D,KAAKC,MAASz4D,IAAQA,EAAI2oB,KAAKoT,OAA1C,CACA,IAAIyhC,GAAKrpC,EAAIn0B,EAAE,GAAIy9D,GAAK7jE,EAAIoG,EAAE,GAAIiuC,GAAKuvB,GAAKA,GAAKC,GAAKA,GAClDxvB,GAAKuf,KAAIA,GAAKvf,GAAIkH,GAAKn1C,EAAE3H,gBAEjB,OAAP88C,IAIT,OAFA+b,KAAKqM,OAASlgC,GAEG,MAAVigC,QAAkB9P,IAAM8P,OAASA,OAAS9E,KAAKC,KAAO,OCvIlD,IAAAiF,YAAA,WACb,IAAIvpC,EAAI06B,YACJj1D,EAAIk1D,YACJiN,OAAS,KAEb,SAAS4B,QAAQv8D,MACf,OAAO,IAAIy6D,QAAQz6D,KAAK/C,IAAI,SAASnP,EAAGN,GACtC,IAAIiC,GAAKoJ,KAAK4G,MAAMszB,EAAEjlC,EAAGN,EAAGwS,MAAQymD,iBAAWA,gBAAS5tD,KAAK4G,MAAMjH,EAAE1K,EAAGN,EAAGwS,MAAQymD,iBAAWA,iBAG9F,OAFAh3D,EAAEwH,MAAQzJ,EACViC,EAAEuQ,KAAOlS,EACF2B,IACLkrE,QA+BN,OA5BA4B,QAAQV,SAAW,SAAS77D,MAC1B,OAAOu8D,QAAQv8D,MAAM67D,YAGvBU,QAAQN,MAAQ,SAASj8D,MACvB,OAAOu8D,QAAQv8D,MAAMi8D,SAGvBM,QAAQR,UAAY,SAAS/7D,MAC3B,OAAOu8D,QAAQv8D,MAAM+7D,aAGvBQ,QAAQxpC,EAAI,SAAS7c,GACnB,OAAO9b,UAAU1D,QAAUq8B,EAAiB,mBAAN7c,EAAmBA,EAAIk3B,yBAAUl3B,GAAIqmD,SAAWxpC,GAGxFwpC,QAAQ/jE,EAAI,SAAS0d,GACnB,OAAO9b,UAAU1D,QAAU8B,EAAiB,mBAAN0d,EAAmBA,EAAIk3B,yBAAUl3B,GAAIqmD,SAAW/jE,GAGxF+jE,QAAQ5B,OAAS,SAASzkD,GACxB,OAAO9b,UAAU1D,QAAUikE,OAAc,MAALzkD,EAAY,QAAUA,EAAE,GAAG,IAAKA,EAAE,GAAG,MAAOA,EAAE,GAAG,IAAKA,EAAE,GAAG,KAAMqmD,SAAW5B,UAAYA,OAAO,GAAG,GAAIA,OAAO,GAAG,KAAMA,OAAO,GAAG,GAAIA,OAAO,GAAG,MAGpL4B,QAAQjtC,KAAO,SAASpZ,GACtB,OAAO9b,UAAU1D,QAAUikE,OAAc,MAALzkD,EAAY,OAAS,EAAG,KAAMA,EAAE,IAAKA,EAAE,KAAMqmD,SAAW5B,SAAWA,OAAO,GAAG,GAAKA,OAAO,GAAG,GAAIA,OAAO,GAAG,GAAKA,OAAO,GAAG,KAGxJ4B,kXCsKMC,gCAzMX,SAAAA,2JAAex7D,CAAAhM,KAAAwnE,WACXxnE,KAAKynE,SAELznE,KAAK0nE,UACL1nE,KAAK2nE,YACL3nE,KAAK4nE,MAAQ,GAMb5nE,KAAK6nE,cAEL7nE,KAAK8nE,mRASL,OAAO5uE,OAAOwlB,OAAO1e,KAAK0nE,0CAWxBK,QAASC,UAAU,IAAA9yD,MAAAlV,KACrB,GAAIgoE,SAAU,CACVhoE,KAAKynE,SACLznE,KAAKioE,UAAYD,SACjB,IAAME,WAENH,QAAQj/D,QAAQ,WACZ,IAAM7G,MAAQ+lE,SAAQzgE,WAAR,EAAAnC,WACd8iE,QAAQjmE,OAARmD,UAAA1D,QAAA,OAAA6L,EAAAnI,UAAA,KAGJ,IAAM+iE,aAyBN,OAvBAjvE,OAAO4M,KAAK9F,KAAK0nE,QAAQ5+D,QAAQ,SAAC4vB,IACzBwvC,QAAQxvC,KACTyvC,UAAUjiE,KAAKwyB,MAIvBx/B,OAAO4M,KAAKoiE,SAASp/D,QAAQ,SAAC4vB,IACrBxjB,MAAKwyD,OAAOhvC,KAGbxjB,MAAKwyD,OAAOhvC,IAAMwvC,QAAQxvC,IAC1BxjB,MAAKuyD,MAAMvhE,KAAKgiE,QAAQxvC,MAHxBxjB,MAAK2yD,WAAW3hE,KAAKgiE,QAAQxvC,OAOrCyvC,UAAUr/D,QAAQ,SAAC4vB,IACf,IAAM0vC,OAASlzD,MAAKwyD,OAAOhvC,IAC3BxjB,MAAK4yD,UAAU5hE,KAAKkiE,eAEblzD,MAAKwyD,OAAOhvC,MAIhB14B,KAGX,GAAI+nE,QAAQrmE,OAAS1B,KAAKynE,MAAM/lE,OAE5B,IADA,IACSlJ,EADQwH,KAAKynE,MAAM/lE,OACLlJ,EAAIuvE,QAAQrmE,OAAQlJ,GAAK,EAC5CwH,KAAK6nE,WAAW3hE,KAAK6hE,QAAQvvE,QAE9B,CAGH,IADA,IAAM6vE,KAAON,QAAQrmE,OACZlJ,GAAI6vE,KAAM7vE,GAAIwH,KAAKynE,MAAM/lE,OAAQlJ,IAAK,EAAG,CAC9C,IAAM4vE,OAASpoE,KAAKynE,MAAMjvE,WACnBwH,KAAK0nE,OAAOU,OAAO1vC,IAC1B14B,KAAK8nE,UAAU5hE,KAAKkiE,QAExBpoE,KAAKynE,MAAQznE,KAAKynE,MAAMtsD,MAAMktD,KAAMroE,KAAKynE,MAAM/lE,QAEnD,OAAO1B,2CAWHsM,UAAU,IAAA8I,OAAApV,KAQd,OAPAA,KAAA,IAAA0b,OAAS1b,KAAK4nE,MAAd,SAA2B9+D,QAAQ,WAC/B,IAAMkC,KAAI5F,UAAA1D,QAAA,OAAA6L,EAAAnI,UAAA,GACJszB,GAAKtjB,OAAK6yD,UAAY7yD,OAAK6yD,UAAL1gE,MAAA6N,OAAIhQ,WAAyB4F,KAAK0tB,KAALtzB,UAAA1D,QAAA,OAAA6L,EAAAnI,UAAA,IACzDgQ,OAAKsyD,OAAOhvC,IAAMpsB,SAAQ/E,WAAR,EAAAnC,WAClBgQ,OAAKuyD,SAASjvC,IAAM1tB,OAExBhL,KAAK4nE,MAAQ,GACN5nE,2CAYP,OADAA,KAAK4nE,MAAQ,QACN5nE,uCAaLjG,IAAKN,OAEP,OADAuG,KAAKynE,MAAM3+D,QAAQ,SAAAkB,MAAI,OAAIA,KAAK+oD,KAAKh5D,IAAKN,SACnCuG,yCAUJwyD,WAAW,IAAA96C,OAAA1X,KAQd,OAPAwyD,UAAUiV,MAAM3+D,QAAQ,WAAe,QAAAw/D,KAAAljE,UAAA1D,OAAXkgB,OAAW,IAAA/Y,MAAAy/D,MAAAC,KAAA,EAAAA,KAAAD,KAAAC,OAAX3mD,OAAW2mD,MAAAnjE,UAAAmjE,MACnC,IAAM7vC,GAAKhhB,OAAKuwD,UAAYvwD,OAAKuwD,UAAL1gE,MAAAmQ,OAAkBkK,QAAWA,OAAO,GAAG8W,IAAM9W,OAAO,GAChFlK,OAAKgwD,OAAOhvC,IAAM9W,OAAO,GACzBlK,OAAK+vD,MAAMvhE,KAAK0b,OAAO,MAG3B5hB,KAAK6nE,cACE7nE,yCAcP,OAJAA,KAAK4nE,MAAQ,OAIN5nE,uCAGLkf,IAAI,IAAAmW,OAAAr1B,KAIN,OAHA9G,OAAO4M,KAAK9F,KAAK0nE,QAAQ5+D,QAAQ,SAACpO,EAAGlC,GACjC0mB,GAAGmW,OAAKqyC,OAAOhtE,GAAI26B,OAAKsyC,SAASjtE,GAAIlC,KAElCwH,qCAGNkf,IAAI,IAAAspD,OAAAxoE,KAKL,OAJA9G,OAAO4M,KAAK9F,KAAK0nE,QAAQ5+D,QAAQ,WAAe,QAAA2/D,MAAArjE,UAAA1D,OAAXkgB,OAAW,IAAA/Y,MAAA4/D,OAAAC,MAAA,EAAAA,MAAAD,MAAAC,QAAX9mD,OAAW8mD,OAAAtjE,UAAAsjE,OAC5C,IAAM3uE,IAAM6nB,OAAO,GACnB4mD,OAAKd,OAAO3tE,KAAOmlB,GAAE3X,WAAF,GAAGihE,OAAKd,OAAO3tE,MAAf2hB,OAAwBkG,QAAQ4mD,OAAKb,SAAS5tE,UAE9DiG,6CAUMA,KAAA,IAAA0b,OAAS1b,KAAK4nE,MAAd,SAER9+D,QAAQ,SAAAkB,MAAI,OAAIA,KAAKo9B,WACP,KAAfpnC,KAAK4nE,OACL5nE,KAAKmnC,KAAK,SAAAzsC,GAAC,OAAIA,EAAE0sC,WAErBpnC,KAAA,IAAA0b,OAAS1b,KAAK4nE,MAAd,YACA5nE,KAAK4nE,MAAQ,knEChJbj7D,kBAAsBrO,oBAAtBqO,kBAGFwiB,gBAFc/2B,OAAOuwE,YAEJ,SAAjBx5C,eAAkBjnB,KAEpB,GAAmB,WAAf0gE,oBAAO1gE,KAAkB,CACzB,GAAY,OAARA,IAAgB,OAAO,EAE3B,GAAc,oBADNhP,OAAOoB,UAAUgI,SAAS3J,KAAKuP,KAEnC,MAA8E,YAAtEA,IAAI0d,YAAYtjB,WAAW+F,MAAM,4BAA8B,GAG/E,OAAO,IAQPkC,YAAc,SAAdA,cAAc,YAAAmR,QAAY,IAAI9b,MAAO4K,WAAvBkR,OAAmC7X,KAAK4G,MAAsB,IAAhB5G,KAAK6G,YAO/DiT,MAAQ,SAARA,MAAS1kB,GACX,IACI2Q,EADE2zC,UAEN,IAAK,IAAMxjD,OAAOd,OACPsB,eAAe5B,KAAKM,EAAGc,OAC1B6P,EAAI3Q,EAAEc,KACNwjD,OAAOxjD,KAAOo1B,eAAevlB,GAAK+T,MAAM/T,GAAKA,GAGrD,OAAO2zC,QAoBLsrB,mBACO,SAAAC,QAAChjE,KAAMoC,KACZ,GAAmB,WAAf0gE,oBAAO1gE,KACP,OAAOwH,MAAM,iCAGjB,IAAMq5D,gBAjBS,SAAjBC,eAAkBljE,KAAMoC,KAC1B,IAAM6gE,mBAON,OANAjjE,KAAKgD,QAAQ,SAAC/O,KACNA,OAAOmO,KAGX6gE,gBAAgB7iE,KAAKnM,OAElBgvE,gBASqBC,CAAeljE,KAAMoC,KAC7C,OAAI6gE,gBAAgBrnE,OACTgO,MAAK,+BAAAgM,OAAgCqtD,gBAAgBhmE,KAAK,QAE9DmF,KAiBT+gE,OAAS,SAATA,OAAUj+D,KAAMO,OAAP,OAAiB1H,KAAKwQ,IAAL9M,MAAA1D,KAAIqlE,mBAAQl+D,KAAK/C,IAAI,SAAAnP,GAAC,OAAIA,EAAEyS,YAQtD49D,OAAS,SAATA,OAAUn+D,KAAMO,OAAP,OAAiB1H,KAAKsQ,IAAL5M,MAAA1D,KAAIqlE,mBAAQl+D,KAAK/C,IAAI,SAAAnP,GAAC,OAAIA,EAAEyS,YAUtD69D,+BAAoB,SAApBA,kBAAqBp+D,KAAMpC,OAAQygE,WAAc,IAAA/0C,KAC/Cxd,OACEwyD,UAEN,OADAt+D,KAAOA,KAAK,aAAcnC,MAAQmC,MAAQA,MAClCq+D,WACR,KAAKE,gCAAiB1qE,YAClBiY,QAASwd,SAAG5Y,OAAHnU,MAAA+sB,KAAA40C,mBAAal+D,KAAK/C,IAAI,SAAA8I,KAAG,OAAIA,IAAI9I,IAAI,SAAAnP,GAAC,OAAIA,EAAE8P,OAAO,MAAK8K,OAAO,SAAA5a,GAAC,YAAUyU,IAANzU,QAC7E,MACJ,QACI,IADJ,IAAA0wE,MAAA,SAAAA,MACahxE,EAAOiQ,KACZ,IAAMsI,IAAM/F,KAAKxS,GAFzBixE,QAAAC,eAGiC9gE,OAHjC,GAGe+gE,OAHfF,QAAA,GAGuBG,OAHvBH,QAAA,GAIcI,KAAO94D,IAAI2C,OAAO,SAAA5a,GAAC,OAAKmb,MAAMnb,EAAE6wE,WAChC/+D,KAAOmG,IAAI2C,OAAO,SAAA5a,GAAC,OAAKmb,MAAMnb,EAAE8wE,WACtC,GAAIC,KAAKnoE,QAAUkJ,KAAKlJ,OAAQ,CAC5B,IAAMooE,SAAWX,OAAOU,KAAMF,QACxBI,UAAYZ,OAAOv+D,KAAMg/D,QACzBI,SAAWf,OAAOY,KAAMF,QACxBM,UAAYhB,OAAOr+D,KAAMg/D,QAC/BN,OAAOpjE,MAAMrC,KAAKsQ,IAAI21D,SAAUC,WAAYlmE,KAAKwQ,IAAI21D,SAAUC,eAV9DzxE,EAAI,EAAGiQ,IAAMuC,KAAKtJ,OAAQlJ,EAAIiQ,IAAKjQ,IAAKgxE,MAAxChxE,GAaTse,OAASwyD,OAAO5nE,QAAUmC,KAAKsQ,IAAL5M,MAAA1D,KAAIqlE,mBAAQI,OAAOrhE,IAAI,SAAAnP,GAAC,OAAIA,EAAE,OAAM+K,KAAKwQ,IAAL9M,MAAA1D,KAAIqlE,mBAAQI,OAAOrhE,IAAI,SAAAnP,GAAC,OAAIA,EAAE,WAGhG,OAAOge,QASLozD,yBAAc,SAAdA,YAAeC,QAASd,WAC1B,IAGoDe,MAHhDtzD,WACJqzD,QAAUA,QAAQz2D,OAAO,SAAA22D,KAAG,OAAIA,KAAOA,IAAI3oE,UAC/BA,SAEJoV,OADAuyD,YAAcE,gCAAiB1qE,aACtBurE,UAAG1uD,OAAHnU,MAAA6iE,MAAAlB,mBAAaiB,WAEZtmE,KAAKsQ,IAAL5M,MAAA1D,KAAIqlE,mBAAQiB,QAAQliE,IAAI,SAAAnP,GAAC,OAAIA,EAAE,OAAM+K,KAAKwQ,IAAL9M,MAAA1D,KAAIqlE,mBAAQiB,QAAQliE,IAAI,SAAAnP,GAAC,OAAIA,EAAE,SAItF,OAAOge,QAGLwzD,WACF/G,OAAQgH,cACRC,MAAOC,aACPrQ,QAASsQ,QACTjQ,OAAQkQ,OACRnQ,KAAMoQ,KACNhQ,IAAKiQ,IACLlQ,SAAUmQ,UAGRC,SACFC,MAAOC,WACPC,OAAQC,UACRjzB,OClOG,SAASA,kBAAOx+C,GACrB,OAAQA,GDkON0xE,QAASC,WACTC,KAAMC,UACNC,KAAMC,UACNlI,OE9NG,SAASmI,YAAYhyE,GAC1B,QAASA,GAAK,IAAM,EAAI,EAAImK,KAAK6Q,KAAK,EAAIhb,EAAIA,GAAKmK,KAAK6Q,KAAK,GAAKhb,GAAK,GAAKA,GAAK,GAAK,IFiRxDgwC,+BAAoB,SAApBA,kBAAqB34B,IAAKtX,MAAOmwC,MAS7D,IARA,IAIIx4B,IACA04B,GALAC,IAAM,EAENC,KADWj5B,IAAIrP,OACC,EAMbqoC,IAAMC,MACT54B,IAAMvN,KAAKwN,OAAO04B,IAAMC,MAAQ,GAChCF,GAAKjmC,KAAKooB,IAAIlb,IAAIK,KAAO3X,OACpBoK,KAAKooB,IAAIlb,IAAIK,IAAM,GAAK3X,QAEnBqwC,GACNC,IAAM34B,IAAM,EAEZ44B,KAAO54B,IAIf,IAAKw4B,KACD,OAAOI,KAGX,IAAMH,QAAU94B,IAAIi5B,MACpB,OAAIH,UAAYpwC,MACLuwC,KACAH,QAAUpwC,MACJ,IAATuwC,KAAqBA,KACT,SAATJ,KAAkBI,KAAO,EAAIA,KAEpCA,OAASj5B,IAAIrP,OAAS,EAAYsoC,KACtB,SAATJ,KAAkBI,KAAOA,KAAO,GAGrC2hC,gBAAkB,SAAlBA,gBAAmB3gE,KAAMjR,KAC3B,IAAM6xE,WAAa5gE,KAAK0I,OAAO,SAAA5a,GAAC,MAAiB,iBAANA,IAC3C,OAAO8yE,WAAWliC,+BAAkBkiC,WAAY7xE,OAO9C8xE,UAAY,SAAZA,YAAY,OAAMzzE,QA6DQ0zE,uBAvDJx8C,sBAEGy8C,qBAqDyB,SAAxBD,sBAAyBE,IAAKtzC,GAAI2nB,QAE9D,OADA2rB,IAAMA,IAAI1rE,QAAQ,OAAQ,KACnB,GAAAob,OAAI2kC,OAAJ,KAAA3kC,OAAcswD,KAAd,GAAAtwD,OAAwB2kC,OAAxB,KAAA3kC,OAAkCswD,IAAlC,KAAAtwD,OAAyCgd,OAYnBuzC,aAAe,SAAfA,aAAgB7kE,MAAO3N,OACpD,YAAqB,IAAV2N,OAA2C,WAAjBwhE,oBAAOxhE,SAAuBA,MACxD3N,MAEJ2N,OAUL8kE,mBAAqB,SAArBA,mBAAsBp2C,OA4BxB,IA3BA,IAAMq2C,mBACAC,WACAtmE,KAAO5M,OAAO4M,KAAKgwB,OAQnBu2C,MAAQ,SAARA,MAAStzE,MACX,GAAIozE,gBAAgBzqE,SAAWoE,KAAKpE,OAChC,OAAO,EAEX0qE,QAAQrzE,OAAQ,EAEhB,IADA,IAAMg5B,MAAQ+D,MAAM/8B,MACX2B,EAAI,EAAGA,EAAIq3B,MAAMrwB,OAAQhH,IAAK,CACnC,IAAMk3B,IAAMG,MAAMr3B,GACb0xE,QAAQx6C,MACTy6C,MAAMz6C,KAKd,OADAu6C,gBAAgBjmE,KAAKnN,OACd,GAGFP,EAAI,EAAGA,EAAIsN,KAAKpE,SACjB2qE,MAAMvmE,KAAKtN,IADcA,KAIjC,OAAO2zE,iBASLG,eAAiB,SAAjBA,eAAkBpkE,IAAKgX,IACzB,IAAK,IAAMnlB,OAAOmO,IACVhP,OAAOqB,eAAe5B,KAAKuP,IAAKnO,MAChCmlB,GAAGnlB,IAAKmO,MAUaqkE,gCAK7B,SAAAA,UAAwB,IAAXvhE,KAAW5F,UAAA1D,OAAA,QAAA6L,IAAAnI,UAAA,GAAAA,UAAA,MAAAonE,4BAAAxsE,KAAAusE,SACpBvsE,KAAKysE,SAAWlF,cAAUxpC,EAAE,SAAAjlC,GAAC,OAAIA,EAAEilC,IAAGv6B,EAAE,SAAA1K,GAAC,OAAIA,EAAE0K,IAC/CxD,KAAKgL,KAAKA,+EAQRA,OAIF,OAHIA,QACAhL,KAAK0sE,WAAa1sE,KAAKysE,SAASzhE,QAE7BhL,uCAUL+9B,EAAGv6B,EAAG0jE,QACR,OAAOlnE,KAAK0sE,WAAWxhD,KAAK6S,EAAGv6B,EAAG0jE,uBAIpCyF,uBAAyB,SAAzBA,uBAA0BC,aAAc1tD,GAAIod,SAC9C,IAAIviC,IAAM6yE,aAAa7yE,IACjB8yE,UAAYD,aAAaC,UAC3BA,YACCvwC,QAAQwwC,WAAWD,aAAevwC,QAAQwwC,WAAWD,eACjD9yE,MACDA,IAAMb,OAAO4M,KAAKw2B,QAAQwwC,WAAWD,YAAYnrE,QAErD46B,QAAQwwC,WAAWD,WAAW9yE,KAAOmlB,KAErCnlB,IAAMb,OAAO4M,KAAKw2B,QAAQwwC,YAAYprE,OACtC46B,QAAQwwC,WAAW/yE,KAAOmlB,KAW5B6tD,WAAa,SAAbA,WAAc7kE,KAChB,QAAYqF,IAARrF,KAA6B,OAARA,IACrB,OAAOA,IAFwB,IAInC,IAAIkf,OAASlf,IAJsBogE,KAAAljE,UAAA1D,OAAXkH,OAAW,IAAAC,MAAAy/D,KAAA,EAAAA,KAAA,KAAAC,KAAA,EAAAA,KAAAD,KAAAC,OAAX3/D,OAAW2/D,KAAA,GAAAnjE,UAAAmjE,MAKnC,IAAK,IAAI/vE,EAAI,EAAGiQ,IAAMG,OAAOlH,OAAQlJ,EAAIiQ,WAEtB8E,KADf6Z,OAASA,OAAOxe,OAAOpQ,MACgB,OAAX4uB,QAFc5uB,KAM9C,OAAO4uB,QAYL4lD,8BAMF,SAAAA,MAAangE,QAAQ2/D,4BAAAxsE,KAAAgtE,OAEjBhtE,KAAK4c,MAAQya,mBAAMv9B,OAAO+S,QAC1B7M,KAAK8sE,iGAWL,OAAO9sE,KAAK4c,MAAM8P,kDAUdugD,SAAUxzE,OAEduG,KAAK4c,MAAMsX,KAAK+4C,SAAUxzE,6EAWoByzE,UAAWC,SAAU12C,aAAgC,IAAnBm2C,aAAmBxnE,UAAA1D,OAAA,QAAA6L,IAAAnI,UAAA,GAAAA,UAAA,MAC/F+uB,MAAQ+4C,UACPrkE,MAAMwB,QAAQ6iE,aACf/4C,OAAS+4C,YAEb,IAAMhuD,GAAKlf,KAAK4c,MAAMhP,KAAKumB,MAAOg5C,SAAU12C,aAE5C,OADAk2C,uBAAuBC,aAAc1tD,GAAIlf,MAClCA,iFAU2CktE,UAAWC,SAAU12C,aAAgC,IAAnBm2C,aAAmBxnE,UAAA1D,OAAA,QAAA6L,IAAAnI,UAAA,GAAAA,UAAA,MACnG+uB,MAAQ+4C,UACPrkE,MAAMwB,QAAQ6iE,aACf/4C,OAAS+4C,YAEb,IAAMhuD,GAAKlf,KAAK4c,MAAMwwD,GAAGj5C,MAAOg5C,SAAU12C,aAE1C,OADAk2C,uBAAuBC,aAAc1tD,GAAIlf,MAClCA,qCAUNitE,UACD,OAAOjtE,KAAK4c,MAAMsX,KAAK+4C,oDAWjBA,SAAUE,UAChB,OAAOntE,KAAK4c,MAAMywD,eAAeJ,SAAUE,gDAGvCF,SAAUxzE,OAEd,OADAuG,KAAK4c,MAAMiY,OAAOo4C,SAAUxzE,OACrBuG,6DAKP,OADA9G,OAAOwlB,OAAO1e,KAAK8sE,YAAYhkE,QAAQ,SAAAoW,IAAE,OAAIA,OACtClf,uDAGqB,IAAnB4sE,aAAmBxnE,UAAA1D,OAAA,QAAA6L,IAAAnI,UAAA,GAAAA,UAAA,MACpBynE,UAAmBD,aAAnBC,UAAW9yE,IAAQ6yE,aAAR7yE,IACbs2B,UAAYrwB,KAAK8sE,WAAWD,WAClC,GAAI9yE,IAAK,CACL,IAAMmlB,GAAK6tD,WAAW18C,UAAWt2B,KACjCmlB,IAAMA,UAENhmB,OAAOwlB,OAAO2R,WAAWvnB,QAAQ,SAAAoW,IAAE,OAAIA,OACvClf,KAAK8sE,WAAWD,cAEpB,OAAO7sE,kBAUTstE,aAAe,SAAfA,aAAgBpsE,KAClB,IAAM6P,IAAM7P,IAAIoB,WAAW+F,MAAM,eACjC,OAAK0I,IAKE1P,SAAS0P,IAAI,GAAI,IAHb,MAyBTw8D,wBAAa,SAAbA,WAAcC,OAAQ7mE,QAASiW,OAA6B,IAC1D6wD,KADoCb,aAAsBxnE,UAAA1D,OAAA,QAAA6L,IAAAnI,UAAA,GAAAA,UAAA,MAExDuD,MAAQiU,OAASA,iBAAiBya,mBAAQza,MAAQya,mBAAMv9B,WACxD4zE,cACN,IAAK,IAAMx5C,QAAQvtB,QACf,MAAOpM,eAAe5B,KAAKgO,QAASutB,MAAO,CAEvC,IAAMy5C,cADNF,KAAO9mE,QAAQutB,OACUhX,MAAOuwD,KAAKvwD,KAAKywD,YACtCC,mBAAa,EACXf,UAAYD,aAAaC,UAE3Be,cADAf,UACa,GAAAnxD,OAAMmxD,UAAN,KAAAnxD,OAAmBwY,MAEhBA,KAEfvrB,MAAMurB,KAAN,GAAAxY,OAAckyD,kBACfF,WAAWx5C,MAAQu5C,KAAKh0E,QAER,IAAhBk0E,cACAH,OAAOt5C,MAAS,SAACoI,QAASpf,KAAM2wD,QAAhB,OAA2B,WAAe,IACtD,IAAI3sE,IACA4sE,UAFkDrF,MAAArjE,UAAA1D,OAAXkgB,OAAW,IAAA/Y,MAAA4/D,OAAAC,MAAA,EAAAA,MAAAD,MAAAC,QAAX9mD,OAAW8mD,OAAAtjE,UAAAsjE,OAGtD,IAAMqF,UAAYnsD,OAAOlgB,OACnBssE,QAAUrlE,MAAMurB,KAAK25C,QAC3B,GAAIE,UAAW,CAEX,IAAME,aAAe/wD,MAAQA,KAAK+wD,aAClC/sE,IAAM0gB,OACN,IAAMlD,UACN,GAAIxB,KAAM,CACN,IAAK,IAAI1kB,EAAI,EAAGA,EAAIu1E,UAAWv1E,IAAK,CAChC0I,IAAM0gB,OAAOppB,GACb,IAAM01E,aAAehxD,KAAKgxD,eAAiBD,aAAe/wD,KAAKgxD,aAAa11E,GACxE0kB,KAAKgxD,cACHC,UAAYjxD,KAAKixD,YAAcF,aAAe/wD,KAAKixD,UAAU31E,GAAK0kB,KAAKixD,WAM7E,GALID,cAAwC,mBAAjBA,eAEvBhtE,IAAMgtE,aAAahtE,IAAK8sE,QAASR,SAGjCW,UAEA,GAAyB,mBAAdA,UAA0B,CACjC,IAAIC,aAAelxD,KAAKkxD,aACpBA,cAAgBH,eAChBG,aAAeA,aAAa51E,IAG5Bs1E,UADAM,eAGY,EAGZD,UAAUjtE,OAAS4sE,WACnBpvD,OAAOxY,KAAKhF,UAEb,GAAyB,iBAAditE,WACd,GAAkB,gBAAdA,UAA6B,CAC7B,IAAMC,cAAeH,aAAe/wD,KAAKkxD,aAAa51E,GAClD0kB,KAAKkxD,aACLltE,KAAQA,IAAI0kB,YAAY7sB,OAASq1E,eACjC1vD,OAAOxY,KAAKhF,WAKpBwd,OAAOxY,KAAKhF,UAGhBwd,OAAOxY,KAAKhF,KAGpB,IAAMmtE,OAASnxD,KAAKmxD,OACdC,UAAYhyC,QAAQpI,KAAK25C,QAC/BQ,QAAUA,OAAO3vD,OAAO,GAAI8uD,QACxBS,cACAK,UAAUxlE,QAAQ,SAACrP,MAAOjB,QACJ+U,IAAdmR,OAAOlmB,KACPkmB,OAAOlmB,GAAKiB,SAIxBilB,OAAOhd,QAAU46B,QAAQpI,KAAK25C,OAAQI,aAAevvD,OAASA,OAAO,SAErE4d,QAAQpI,KAAK25C,OAAQI,aAAe/sE,IAAMA,IAAI,IAElD,OAAOssE,OAGX,OAAOlxC,QAAQpI,KAAK25C,SAtER,CAuEbllE,MAAO8kE,KAAKvwD,KAAM0wD,gBAKjC,QAA+BrgE,IAA3Bq/D,aAAaC,UACblkE,MAAMksB,OAAO64C,gBACV,CACH,IAAMb,WAAYD,aAAaC,UAC/BlkE,MAAMksB,OAAOg4C,WAAWa,YAG5B,OAAQF,OAAQ7kE,QASd4lE,sBAAwB,SAAxBA,sBAAyBjyC,QAASnI,OACpCj7B,OAAO+b,QAAQkf,OAAOrrB,QAAQ,SAAC0lE,UAC3B,IAAMt6C,KAAOs6C,SAAS,GAChBC,YAAcD,SAAS,GAAGC,YAC1BxtE,OAASutE,SAAS,GAAGvC,aACrBiC,aAAeM,SAAS,GAAGN,aAC3B5zE,UAAYgiC,QAAQ1W,YAAYtrB,UAChCpB,OAAOqB,eAAe5B,KAAK2B,UAAW45B,QACpCjzB,SACAq7B,QAAO,IAAA5gB,OAAKwY,OAAUjzB,QAE1Bq7B,QAAQpI,MAAQ,WACZ,GAAI9uB,UAAO1D,OAAQ,CACf,IAAIjI,MAAK2L,UAAA1D,QAAA,OAAA6L,EAAAnI,UAAA,GAIT,OAHI8oE,eACAz0E,MAAQy0E,aAAa5xC,QAADl3B,UAAA1D,QAAA,OAAA6L,EAAAnI,UAAA,KAEpBqpE,cAAgBA,YAAYh1E,OACrB6iC,QAAO,IAAA5gB,OAAKwY,QAEvBoI,QAAO,IAAA5gB,OAAKwY,OAAUz6B,MACf6iC,SACT,OAAOA,QAAO,IAAA5gB,OAAKwY,YAwC/Bw6C,qBAAU,SAAVA,QAAUpzE,MAAI,OAAI,SAACqzE,OAAQC,QAC7B,MAAa,UAATtzE,OACKqzE,QAlBO,SAAdE,YAAejkE,KAAMC,MACvB,GAAID,KAAKlJ,SAAWmJ,KAAKnJ,OAAU,OAAO,EAC1C,IAAK,IAAIlJ,EAAIoS,KAAKlJ,OAAQlJ,GAAK,EAAGA,IAC9B,GAAIoS,KAAKpS,KAAOqS,KAAKrS,GAAM,OAAO,EAGtC,OAAO,EAeIq2E,CAAYF,OAAQC,QACX,WAATtzE,KACApC,OAAO41E,GAAGH,OAAQC,QACpBD,SAAWC,SAqBlBG,WACFC,eAAgB,0BASdC,eAAiB,SAAjBA,eAAkBxqD,OAAQyqD,MAC5B,IAAK,IAAMh7C,QAAQg7C,KACX//C,eAAe1K,OAAOyP,QAAU/E,eAAe+/C,KAAKh7C,OACpD+6C,eAAexqD,OAAOyP,MAAOg7C,KAAKh7C,OAC3Bg7C,KAAKh7C,gBAAiBh7B,QAAUg2E,KAAKh7C,MAAMtO,cAAgB1sB,QAClEurB,OAAOyP,SACP+6C,eAAexqD,OAAOyP,MAAOg7C,KAAKh7C,QAElCzP,OAAOyP,MAAQg7C,KAAKh7C,MAG5B,OAAOzP,QAaL0qD,6BAAkB,SAAlBA,gBAAmBC,IAAKC,UAAWrkE,KAAMskE,MAC3C,IAAI9c,UAAY4c,KGl6BL,SAASG,aAAuB,IAAXvkE,KAAW5F,UAAA1D,OAAA,QAAA6L,IAAAnI,UAAA,GAAAA,UAAA,MAC3C,OAAO,IAAIoiE,qBAAUx8D,MHi6BEukE,KAKjBC,iBAHNhd,UAAYA,UAAUxnD,KAAKA,KAAMskE,OAETxc,QAAQj+B,OAAOw6C,WACTxlE,MAAM2oD,WAGpC,OADAA,UAAUI,QAAUJ,UAAUI,OAAOxrB,SAC9BooC,iBAqDL3f,0BAAe,SAAfA,eAAe,OAAMlT,WAMrB8yB,gCAAqB,SAArBA,qBAAqB,OAAMC,YAwB3BC,mCAAwB,SAAxBA,wBAAwB,OAAMjzB,qBAsBpC,IA8BMkzB,SAAW,SAAXA,SAAYt2E,EAAGo7C,EAAGtxC,GAAa,IAAVxI,EAAUwK,UAAA1D,OAAA,QAAA6L,IAAAnI,UAAA,GAAAA,UAAA,GAAN,EAC3B9L,GAAKA,EAAGo7C,GAAKA,EAAGtxC,GAAKA,EAAGxI,GAAKA,EAC7BtB,GAAK,IAAKo7C,GAAK,IAAKtxC,GAAK,IACzB,IAEIsF,EACAjO,EAHE4Z,IAAMxQ,KAAKwQ,IAAI/a,EAAGo7C,EAAGtxC,GACrB+Q,IAAMtQ,KAAKsQ,IAAI7a,EAAGo7C,EAAGtxC,GAGrB3K,GAAK4b,IAAMF,KAAO,EAExB,GAAIE,MAAQF,IACRzL,EAAIjO,EAAI,MACL,CACH,IAAM3B,EAAIub,IAAMF,IAEhB,OADA1Z,EAAIhC,EAAI,GAAMK,GAAK,EAAIub,IAAMF,KAAOrb,GAAKub,IAAMF,KACvCE,KACR,KAAK/a,EAAGoP,GAAKgsC,EAAItxC,GAAKtK,GAAK47C,EAAItxC,EAAI,EAAI,GAAI,MAC3C,KAAKsxC,EAAGhsC,GAAKtF,EAAI9J,GAAKR,EAAI,EAAG,MAC7B,KAAKsK,EAAGsF,GAAKpP,EAAIo7C,GAAK57C,EAAI,EAG1B4P,GAAK,EAET,OAAQA,EAAGjO,EAAGhC,EAAGmC,IAgDfi1E,YAAc,SAAdA,YAAeC,KAWjB,MAViB,yCAUJhyE,KAAKgyE,MALA,iHAKkBhyE,KAAKgyE,KAC9B,MAVM,0CAWGhyE,KAAKgyE,MALP,sGAKyBhyE,KAAKgyE,KACrC,MALM,yBAMGhyE,KAAKgyE,KACd,MACFA,KA0EPC,sBAAwB,SAAxBA,sBAAyB3xD,UAAWjB,SAAUxjB,MAChD,GAAiB,OAAbwjB,SACA,OAAO,KAEX,IAAM6yD,UAAY92E,OAAO4M,KAAKqX,UAU9B,OAAOiB,UAAUa,OATH,SAARgxD,MAAQrnE,QAAM,OAAIonE,UAAUnxD,MAAM,SAACtT,OACrC,IAAMrK,IAAM0H,OAAO2C,OAAO9R,MACpB8H,MAAQ4b,SAAS5R,OAAO,aAAc1C,MAAQsU,SAAS5R,OAAO,GAAK4R,SAAS5R,OAClF,MAAwB,iBAAbhK,MAAM,QACyBgM,IAA/BhM,MAAM2pB,KAAK,SAAApyB,GAAC,OAAIA,IAAMoI,OAE1BK,OAAQL,KAAOK,MAAM,IAAML,KAAOK,MAAM,OAI/C4d,WAAW,EACXxlB,aAWFu2E,yCAA8B,SAA9BA,4BAA+B9xD,UAAWmE,YAAa5oB,MACzD,IAAIw2E,kBACJ,GAAI5tD,uBAAuB1Z,MAAO,CAC9B,IAAM0V,aAAeH,UAAUI,kBAEzB4xD,QAAU7tD,YAAYpH,MAAM,EAAGoH,YAAY7gB,QACjD,GAAI6gB,uBAAuBhN,SACvB46D,kBAAoB5tD,YAAYnE,cAAe,QAC5C,GAAImE,uBAAuB1Z,OAAS0Z,YAAY,GAAG7gB,OAAQ,CAC9D,IAAM2uE,eAAiB9tD,YAAY,GAAG7O,OAAO,SAAA5a,GAAC,OAAIA,KAAKylB,eACvD4xD,kBAAoB/xD,UAAUa,OAAO,SAACrW,QAClC,IAAI0nE,SAAU,EAMd,OALAD,eAAevnE,QAAQ,SAACgW,UAAWnM,KAC/B,IAAMlZ,MAAQmP,OAAOkW,WAAWC,UAC1B9c,MAAQmuE,QAAQhqD,UAAU,SAAAttB,GAAC,OAAIA,EAAE6Z,OAASlZ,QAChD62E,QAAUA,UAAsB,IAAXruE,QAElBquE,UAEPnxD,WAAW,EACXxlB,kBAIRw2E,kBAAoBJ,sBAAsB3xD,UAAWmE,YAAa5oB,MAEtE,OAAOw2E,mBASLI,+BAAoB,SAApBA,kBAAqBj0C,QAASk0C,aAA2B,QAAAC,MAAArrE,UAAA1D,OAAXkgB,OAAW,IAAA/Y,MAAA4nE,MAAA,EAAAA,MAAA,KAAAC,MAAA,EAAAA,MAAAD,MAAAC,QAAX9uD,OAAW8uD,MAAA,GAAAtrE,UAAAsrE,OAC3D,IAAMC,gBAAkBH,YAAWjpE,WAAX,GAAY+0B,SAAZ5gB,OAAwBkG,SAChD,IAAK,IAAM7nB,OAAO42E,gBACd,MAAOp2E,eAAe5B,KAAKg4E,gBAAiB52E,KAAM,CAC9C,IAAM8yE,UAAYjrD,OAAO,GACrB/nB,GAAK,KACLgzE,YACAhzE,GAAKgzE,UAAU+D,OAEnB,IAAMC,OAASF,gBAAgB52E,KACzB+2E,SAAWD,OAAOv1E,KAClB64B,MAAQ08C,OAAO18C,MACf48C,WAAaF,OAAOG,SAC1B10C,QAAQ3zB,QAAQmoE,UAAU38C,MAAO48C,YAAY,GACzClE,UAAWhzE,OAMrBo3E,aAAe,SAAfA,aAAex3E,OAAK,OAAKwa,MAAMxa,QAAUA,SAAWmnD,KAAYnnD,QAAUmnD,KA0B1E3rB,QAAU,SAAVA,QAAUlkB,KAAG,OAAKA,eAAelI,MAAQkI,KAAOA,MAmEhDmgE,uBAAY,SAAZA,UAAY51E,MAAI,OIr3CP,WACb,IAAIA,KAAO88C,sBAASmrB,eAChBjpC,KAAO8d,sBAAS,IAChB9b,QAAU,KAEd,SAASiiB,SACP,IAAIua,OAGJ,GAFKx8B,UAASA,QAAUw8B,OAASn1C,YACjCroB,KAAKiM,MAAMvH,KAAMoF,WAAW40D,KAAK19B,SAAUhC,KAAK/yB,MAAMvH,KAAMoF,YACxD0zD,OAAQ,OAAOx8B,QAAU,KAAMw8B,OAAS,IAAM,KAepD,OAZAva,OAAOjjD,KAAO,SAAS4lB,GACrB,OAAO9b,UAAU1D,QAAUpG,KAAoB,mBAAN4lB,EAAmBA,EAAIk3B,sBAASl3B,GAAIq9B,QAAUjjD,MAGzFijD,OAAOjkB,KAAO,SAASpZ,GACrB,OAAO9b,UAAU1D,QAAU44B,KAAoB,mBAANpZ,EAAmBA,EAAIk3B,uBAAUl3B,GAAIq9B,QAAUjkB,MAG1FikB,OAAOjiB,QAAU,SAASpb,GACxB,OAAO9b,UAAU1D,QAAU46B,QAAe,MAALpb,EAAY,KAAOA,EAAGq9B,QAAUjiB,SAGhEiiB,OJ61CiBA,GAASjjD,KAAKgvE,UAAUhvE,QAE5C61E,aAAWC,gBAAAC,gBKz4CS,OL04CKC,YADdF,gBAAAC,aK34Cc,YL64CKE,iBAFnBH,gBAAAC,aK14Ce,aCCjB,SAAS1S,QACtB,OAAOt5B,gBAAUs5B,QAAQr6C,YNw4CV+sD,cAKXG,cAAYJ,gBAAAK,iBK74Cc,YEHjB,SAAS9S,OAAQ93C,OAC9B,IAAO5sB,EAAI0kE,OAAOj9D,QAAU,EAC5B,IAAK,IAAIlJ,EAAUM,EAAG28D,GAAIic,GAAIC,GAAI13E,EAAtBihB,EAAI,EAAqBtiB,EAAI+lE,OAAO93C,MAAM,IAAInlB,OAAQwZ,EAAItiB,IAAKsiB,EACzE,IAAKw2D,GAAKC,GAAK,EAAGn5E,EAAI,EAAGA,EAAIyB,IAAKzB,GAC3Bi9D,IAAM38D,EAAI6lE,OAAO93C,MAAMruB,IAAI0iB,IAAI,GAAKpiB,EAAE,KAAO,GAChDA,EAAE,GAAK44E,GAAI54E,EAAE,GAAK44E,IAAMjc,IACfA,GAAK,GACd38D,EAAE,GAAK64E,GAAI74E,EAAE,GAAK64E,IAAMlc,IAExB38D,EAAE,GAAK44E,KPu4CGN,gBAAAK,cK54CS,OL84CKG,MAFdR,gBAAAK,cK34CW,SGHd,SAAS9S,OAAQ93C,OAC9B,IAAO5sB,EAAI0kE,OAAOj9D,QAAU,EAA5B,CACA,IAAK,IAAIlJ,EAAGyB,EAAgCuJ,EAA7B0X,EAAI,EAAGtiB,EAAI+lE,OAAO,GAAGj9D,OAAWwZ,EAAItiB,IAAKsiB,EAAG,CACzD,IAAK1X,EAAIhL,EAAI,EAAGA,EAAIyB,IAAKzB,EAAGgL,GAAKm7D,OAAOnmE,GAAG0iB,GAAG,IAAM,EACpD,GAAI1X,EAAG,IAAKhL,EAAI,EAAGA,EAAIyB,IAAKzB,EAAGmmE,OAAOnmE,GAAG0iB,GAAG,IAAM1X,EAEpDk7D,KAAKC,OAAQ93C,URw4CGuqD,gBAAAK,cK14CW,SIJd,SAAS9S,OAAQ93C,OAC9B,IAAO5sB,EAAI0kE,OAAOj9D,QAAU,IAAS9I,GAAK+kE,GAAKgB,OAAO93C,MAAM,KAAKnlB,QAAU,EAA3E,CACA,IAAK,IAAkBi8D,GAAI/kE,EAAGqB,EAArBuJ,EAAI,EAAG0X,EAAI,EAAaA,EAAItiB,IAAKsiB,EAAG,CAC3C,IAAK,IAAI1iB,EAAI,EAAGw2B,GAAK,EAAGC,GAAK,EAAGz2B,EAAIyB,IAAKzB,EAAG,CAK1C,IAJA,IAAIq5E,GAAKlT,OAAO93C,MAAMruB,IAClBs5E,KAAOD,GAAG32D,GAAG,IAAM,EAEnB62D,IAAMD,MADCD,GAAG32D,EAAI,GAAG,IAAM,IACF,EAChBotB,EAAI,EAAGA,EAAI9vC,IAAK8vC,EAAG,CAC1B,IAAI0pC,GAAKrT,OAAO93C,MAAMyhB,IAGtBypC,KAFWC,GAAG92D,GAAG,IAAM,IACZ82D,GAAG92D,EAAI,GAAG,IAAM,GAG7B8T,IAAM8iD,KAAM7iD,IAAM8iD,GAAKD,KAEzBnU,GAAGziD,EAAI,GAAG,IAAMyiD,GAAGziD,EAAI,GAAG,GAAK1X,EAC3BwrB,KAAIxrB,GAAKyrB,GAAKD,IAEpB2uC,GAAGziD,EAAI,GAAG,IAAMyiD,GAAGziD,EAAI,GAAG,GAAK1X,EAC/Bk7D,KAAKC,OAAQ93C,UT03CG4qD,eAQZQ,mBAAQ,SAARA,MAAQrwD,QAAM,OlB/4CL,WACb,IAAI9b,KAAOsyC,0BACPvxB,MAAQqrD,WACRvvB,OAASwvB,KACT14E,MAAQolE,WAEZ,SAASoT,MAAMjnE,MACb,IACIxS,EAIA45E,GALAC,GAAKvsE,KAAKyB,MAAMvH,KAAMoF,WAEtBxM,EAAIoS,KAAKtJ,OACTzH,EAAIo4E,GAAG3wE,OACP4wE,GAAK,IAAIzpE,MAAM5O,GAGnB,IAAKzB,EAAI,EAAGA,EAAIyB,IAAKzB,EAAG,CACtB,IAAK,IAAkD+5E,IAA9CC,GAAKH,GAAG75E,GAAIq5E,GAAKS,GAAG95E,GAAK,IAAIqQ,MAAMjQ,GAAIsiB,EAAI,EAAQA,EAAItiB,IAAKsiB,EACnE22D,GAAG32D,GAAKq3D,KAAO,GAAI94E,MAAMuR,KAAKkQ,GAAIs3D,GAAIt3D,EAAGlQ,OACzCunE,IAAIvnE,KAAOA,KAAKkQ,GAElB22D,GAAG93E,IAAMy4E,GAGX,IAAKh6E,EAAI,EAAG45E,GAAKvrD,MAAMyrD,IAAK95E,EAAIyB,IAAKzB,EACnC85E,GAAGF,GAAG55E,IAAIyJ,MAAQzJ,EAIpB,OADAmqD,OAAO2vB,GAAIF,IACJE,GAmBT,OAhBAL,MAAMnsE,KAAO,SAASob,GACpB,OAAO9b,UAAU1D,QAAUoE,KAAoB,mBAANob,EAAmBA,EAAIk3B,sBAASj9B,yBAAMxiB,KAAKuoB,IAAK+wD,OAASnsE,MAGpGmsE,MAAMx4E,MAAQ,SAASynB,GACrB,OAAO9b,UAAU1D,QAAUjI,MAAqB,mBAANynB,EAAmBA,EAAIk3B,uBAAUl3B,GAAI+wD,OAASx4E,OAG1Fw4E,MAAMprD,MAAQ,SAAS3F,GACrB,OAAO9b,UAAU1D,QAAUmlB,MAAa,MAAL3F,EAAYgxD,WAAyB,mBAANhxD,EAAmBA,EAAIk3B,sBAASj9B,yBAAMxiB,KAAKuoB,IAAK+wD,OAASprD,OAG7HorD,MAAMtvB,OAAS,SAASzhC,GACtB,OAAO9b,UAAU1D,QAAUihD,OAAc,MAALzhC,EAAYixD,KAAajxD,EAAG+wD,OAAStvB,QAGpEsvB,MkBi2CeQ,GAAU3sE,KAAK8b,OAAO9b,MAAM68C,OAAO6uB,aAAa5vD,OAAO+gC,SAC9D97B,MAAMsqD,YAAYvvD,OAAOiF,OADlB4rD,CAC0B7wD,OAAO5W,OAenD0nE,mBACF7Z,yBACA8Z,yBACAC,2BACAC,qBACAC,iCACArU,UAAWkU,UACXvV,WAAY0V,iBACZ5sC,KAAM2sC,WACNrU,WAAYoU,WACZ16B,OAAQ2gB,cAGNka,SACFC,SxDrwCG,SAASA,SAASrqC,OACvB,OAAOipB,UAAKlsB,UAAMiD,QwDqwChBsqC,UxD9wCG,SAASA,UAAUtqC,OACxB,OAAOipB,UAAKjsB,WAAOgD,QwD8wCjBuqC,QxDnxCG,SAASA,QAAQvqC,OACtB,OAAOipB,UAAKtvB,SAAKqG,QwDmxCfwqC,WxD5wCG,SAASA,WAAWxqC,OACzB,OAAOipB,UAAKJ,YAAQ7oB,QwD4wClBqqB,cACAiG,cACAma,IUv7CW,WACb,IAAI35E,MAAQg4B,sBACR+V,WAAa6rC,eACbngE,KAAO,KACPmjD,WAAaje,sBAAS,GACtBme,SAAWne,sBAASkb,UACpBmD,SAAWre,sBAAS,GAExB,SAASg7B,IAAIpoE,MACX,IAAIxS,EAEA0iB,EACAotB,EAMA13B,GAGAhH,EAXA3P,EAAI+Q,KAAKtJ,OAGTkS,IAAM,EACN3R,MAAQ,IAAI4G,MAAM5O,GAClBq5E,KAAO,IAAIzqE,MAAM5O,GACjBq7D,IAAMe,WAAW9uD,MAAMvH,KAAMoF,WAC7BuwD,GAAK9xD,KAAKsQ,IAAIm/C,SAAKzvD,KAAKwQ,KAAKi/C,SAAKiD,SAAShvD,MAAMvH,KAAMoF,WAAakwD,KAEpE96D,EAAIqJ,KAAKsQ,IAAItQ,KAAKooB,IAAI0pC,IAAM17D,EAAGw8D,SAASlvD,MAAMvH,KAAMoF,YACpDmuE,GAAK/4E,GAAKm7D,GAAK,GAAK,EAAI,GAG5B,IAAKn9D,EAAI,EAAGA,EAAIyB,IAAKzB,GACdoR,EAAI0pE,KAAKrxE,MAAMzJ,GAAKA,IAAMiB,MAAMuR,KAAKxS,GAAIA,EAAGwS,OAAS,IACxD4I,KAAOhK,GASX,IAJkB,MAAd49B,WAAoBvlC,MAAMiR,KAAK,SAAS1a,EAAG0iB,GAAK,OAAOssB,WAAW8rC,KAAK96E,GAAI86E,KAAKp4D,MACnE,MAARhI,MAAcjR,MAAMiR,KAAK,SAAS1a,EAAG0iB,GAAK,OAAOhI,KAAKlI,KAAKxS,GAAIwS,KAAKkQ,MAGxE1iB,EAAI,EAAG8vC,EAAI10B,KAAO+hD,GAAK17D,EAAIs5E,IAAM3/D,IAAM,EAAGpb,EAAIyB,IAAKzB,EAAG88D,GAAK1kD,GAC9DsK,EAAIjZ,MAAMzJ,GAAiBoY,GAAK0kD,KAAlB1rD,EAAI0pE,KAAKp4D,IAAmB,EAAItR,EAAI0+B,EAAI,GAAKirC,GAAID,KAAKp4D,IAClElQ,KAAMA,KAAKkQ,GACXjZ,MAAOzJ,EACPiB,MAAOmQ,EACPysD,WAAYf,GACZiB,SAAU3lD,GACV6lD,SAAUj8D,GAId,OAAO84E,KA2BT,OAxBAF,IAAI35E,MAAQ,SAASynB,GACnB,OAAO9b,UAAU1D,QAAUjI,MAAqB,mBAANynB,EAAmBA,EAAIk3B,uBAAUl3B,GAAIkyD,KAAO35E,OAGxF25E,IAAI5rC,WAAa,SAAStmB,GACxB,OAAO9b,UAAU1D,QAAU8lC,WAAatmB,EAAGhO,KAAO,KAAMkgE,KAAO5rC,YAGjE4rC,IAAIlgE,KAAO,SAASgO,GAClB,OAAO9b,UAAU1D,QAAUwR,KAAOgO,EAAGsmB,WAAa,KAAM4rC,KAAOlgE,MAGjEkgE,IAAI/c,WAAa,SAASn1C,GACxB,OAAO9b,UAAU1D,QAAU20D,WAA0B,mBAANn1C,EAAmBA,EAAIk3B,uBAAUl3B,GAAIkyD,KAAO/c,YAG7F+c,IAAI7c,SAAW,SAASr1C,GACtB,OAAO9b,UAAU1D,QAAU60D,SAAwB,mBAANr1C,EAAmBA,EAAIk3B,uBAAUl3B,GAAIkyD,KAAO7c,UAG3F6c,IAAI3c,SAAW,SAASv1C,GACtB,OAAO9b,UAAU1D,QAAU+0D,SAAwB,mBAANv1C,EAAmBA,EAAIk3B,uBAAUl3B,GAAIkyD,KAAO3c,UAGpF2c,KVg3CL/d,IpDn3CW,WACb,IAAIY,YAAcD,eACdG,YAAcD,eACdsd,aAAep7B,sBAAS,GACxBq7B,UAAY,KACZpd,WAAaD,cACbG,SAAWD,YACXG,SAAWD,YACXl6B,QAAU,KAEd,SAAS+4B,MACP,IAAIyD,OACAx/D,EACAiwC,IAAM0sB,YAAY1uD,MAAMvH,KAAMoF,WAC9BokC,IAAM2sB,YAAY5uD,MAAMvH,KAAMoF,WAC9BkwD,GAAKe,WAAW9uD,MAAMvH,KAAMoF,WAAa0wD,OACzCllD,GAAK2lD,SAAShvD,MAAMvH,KAAMoF,WAAa0wD,OACvCH,GAAK1pC,IAAIrb,GAAK0kD,IACdI,GAAK9kD,GAAK0kD,GAQd,GANKh5B,UAASA,QAAUw8B,OAASn1C,YAG7B6lB,GAAKD,KAAIjwC,EAAIkwC,GAAIA,GAAKD,GAAIA,GAAKjwC,GAG7BkwC,GAAKioB,aAGN,GAAIkE,GAAKrC,SAAM7B,aAClBn1B,QAAQu3B,OAAOrqB,GAAK6M,IAAIif,IAAK9rB,GAAK8M,IAAIgf,KACtCh5B,QAAQ+4B,IAAI,EAAG,EAAG7rB,GAAI8rB,GAAI1kD,IAAK8kD,IAC3BnsB,GAAKkoB,eACPn1B,QAAQu3B,OAAOtqB,GAAK8M,IAAIzlC,IAAK24B,GAAK+M,IAAI1lC,KACtC0rB,QAAQ+4B,IAAI,EAAG,EAAG9rB,GAAI34B,GAAI0kD,GAAII,SAK7B,CACH,IAWI5f,GACAC,GAZA29B,IAAMpe,GACNqe,IAAM/iE,GACNgjE,IAAMte,GACNue,IAAMjjE,GACNkjE,IAAMne,GACNoe,IAAMpe,GACNqe,GAAKvd,SAASlvD,MAAMvH,KAAMoF,WAAa,EACvC6uE,GAAMD,GAAKviB,eAAagiB,WAAaA,UAAUlsE,MAAMvH,KAAMoF,WAAasP,UAAK60B,GAAKA,GAAKC,GAAKA,KAC5FmtB,GAAKxiD,SAAI8X,IAAIud,GAAKD,IAAM,GAAIiqC,aAAajsE,MAAMvH,KAAMoF,YACrD8uE,IAAMvd,GACNwd,IAAMxd,GAKV,GAAIsd,GAAKxiB,aAAS,CAChB,IAAI2iB,GAAKre,KAAKke,GAAK1qC,GAAK+M,IAAI09B,KACxBK,GAAKte,KAAKke,GAAKzqC,GAAK8M,IAAI09B,MACvBF,KAAY,EAALM,IAAU3iB,cAA8BmiB,KAArBQ,IAAO1e,GAAK,GAAK,EAAeme,KAAOO,KACjEN,IAAM,EAAGF,IAAMC,KAAOve,GAAK1kD,IAAM,IACjCmjE,KAAY,EAALM,IAAU5iB,cAA8BiiB,KAArBW,IAAO3e,GAAK,GAAK,EAAeie,KAAOU,KACjEN,IAAM,EAAGL,IAAMC,KAAOre,GAAK1kD,IAAM,GAGxC,IAAI6jD,IAAMjrB,GAAK6M,IAAIq9B,KACfhf,IAAMlrB,GAAK8M,IAAIo9B,KACf1c,IAAMztB,GAAK8M,IAAIw9B,KACf5c,IAAM1tB,GAAK+M,IAAIu9B,KAGnB,GAAIld,GAAKlF,aAAS,CAChB,IAAIqF,IAAMttB,GAAK6M,IAAIs9B,KACf5c,IAAMvtB,GAAK8M,IAAIq9B,KACfzc,IAAM3tB,GAAK8M,IAAIu9B,KACfzc,IAAM5tB,GAAK+M,IAAIs9B,KAGnB,GAAIje,GAAKtC,QAAI,CACX,IAAIihB,GAAKR,IAAMriB,aAhIzB,SAAS8iB,UAAUhzB,GAAI+S,GAAI9S,GAAIyS,GAAIE,GAAIC,GAAIogB,GAAIC,IAC7C,IAAIzd,IAAMxV,GAAKD,GAAI0V,IAAMhD,GAAKK,GAC1BogB,IAAMF,GAAKrgB,GAAIwgB,IAAMF,GAAKrgB,GAC1B16D,GAAKg7E,KAAOpgB,GAAKF,IAAMugB,KAAOpzB,GAAK4S,MAAQwgB,IAAM3d,IAAM0d,IAAMzd,KACjE,OAAQ1V,GAAK7nD,EAAIs9D,IAAK1C,GAAK56D,EAAIu9D,KA4HEsd,CAAU9f,IAAKC,IAAKwC,IAAKC,IAAKL,IAAKC,IAAKC,IAAKC,MAAQD,IAAKC,KAC/EuK,GAAK/M,IAAM6f,GAAG,GACd7S,GAAK/M,IAAM4f,GAAG,GACdpR,GAAKpM,IAAMwd,GAAG,GACdnR,GAAKpM,IAAMud,GAAG,GACdM,GAAK,EAAIt+B,IDhJhB,SAAS4e,KAAKn3B,GACnB,OAAOA,EAAI,EAAI,EAAIA,GAAK,EAAIs1B,QAAKxvD,KAAKqxD,KAAKn3B,GC+IlBm3B,EAAMsM,GAAK0B,GAAKzB,GAAK0B,KAAOzuD,UAAK8sD,GAAKA,GAAKC,GAAKA,IAAM/sD,UAAKwuD,GAAKA,GAAKC,GAAKA,MAAQ,GAC/F0R,GAAKngE,UAAK4/D,GAAG,GAAKA,GAAG,GAAKA,GAAG,GAAKA,GAAG,IACzCJ,IAAM//D,SAAIwiD,IAAKptB,GAAKsrC,KAAOD,GAAK,IAChCT,IAAMhgE,SAAIwiD,IAAKntB,GAAKqrC,KAAOD,GAAK,KAK9Bb,IAAMtiB,aAGH0iB,IAAM1iB,cACb3b,GAAK4gB,eAAeQ,IAAKC,IAAK1C,IAAKC,IAAKlrB,GAAI2qC,IAAKze,IACjD3f,GAAK2gB,eAAeI,IAAKC,IAAKC,IAAKC,IAAKztB,GAAI2qC,IAAKze,IAEjDp5B,QAAQu3B,OAAO/d,GAAG+hB,GAAK/hB,GAAG2e,IAAK3e,GAAGgiB,GAAKhiB,GAAG4e,KAGtCyf,IAAMxd,GAAIr6B,QAAQ+4B,IAAIvf,GAAG+hB,GAAI/hB,GAAGgiB,GAAIqc,IAAKr9B,MAAMhB,GAAG4e,IAAK5e,GAAG2e,KAAM3d,MAAMf,GAAG2e,IAAK3e,GAAG0e,MAAOiB,KAI1Fp5B,QAAQ+4B,IAAIvf,GAAG+hB,GAAI/hB,GAAGgiB,GAAIqc,IAAKr9B,MAAMhB,GAAG4e,IAAK5e,GAAG2e,KAAM3d,MAAMhB,GAAGihB,IAAKjhB,GAAGghB,MAAOpB,IAC9Ep5B,QAAQ+4B,IAAI,EAAG,EAAG7rB,GAAIsN,MAAMhB,GAAGgiB,GAAKhiB,GAAGihB,IAAKjhB,GAAG+hB,GAAK/hB,GAAGghB,KAAMhgB,MAAMf,GAAG+hB,GAAK/hB,GAAGghB,IAAKhhB,GAAG8hB,GAAK9hB,GAAG+gB,MAAOpB,IACrGp5B,QAAQ+4B,IAAItf,GAAG8hB,GAAI9hB,GAAG+hB,GAAIqc,IAAKr9B,MAAMf,GAAGghB,IAAKhhB,GAAG+gB,KAAMhgB,MAAMf,GAAG2e,IAAK3e,GAAG0e,MAAOiB,OAK7Ep5B,QAAQu3B,OAAOY,IAAKC,KAAMp4B,QAAQ+4B,IAAI,EAAG,EAAG7rB,GAAIkqC,IAAKC,KAAMje,KArB1Cp5B,QAAQu3B,OAAOY,IAAKC,KAyBpCnrB,GAAKkoB,cAAcqiB,IAAMriB,aAGtByiB,IAAMziB,cACb3b,GAAK4gB,eAAeM,IAAKC,IAAKH,IAAKC,IAAKxtB,IAAK2qC,IAAKxe,IAClD3f,GAAK2gB,eAAejC,IAAKC,IAAKwC,IAAKC,IAAK5tB,IAAK2qC,IAAKxe,IAElDp5B,QAAQy3B,OAAOje,GAAG+hB,GAAK/hB,GAAG2e,IAAK3e,GAAGgiB,GAAKhiB,GAAG4e,KAGtCwf,IAAMvd,GAAIr6B,QAAQ+4B,IAAIvf,GAAG+hB,GAAI/hB,GAAGgiB,GAAIoc,IAAKp9B,MAAMhB,GAAG4e,IAAK5e,GAAG2e,KAAM3d,MAAMf,GAAG2e,IAAK3e,GAAG0e,MAAOiB,KAI1Fp5B,QAAQ+4B,IAAIvf,GAAG+hB,GAAI/hB,GAAGgiB,GAAIoc,IAAKp9B,MAAMhB,GAAG4e,IAAK5e,GAAG2e,KAAM3d,MAAMhB,GAAGihB,IAAKjhB,GAAGghB,MAAOpB,IAC9Ep5B,QAAQ+4B,IAAI,EAAG,EAAG9rB,GAAIuN,MAAMhB,GAAGgiB,GAAKhiB,GAAGihB,IAAKjhB,GAAG+hB,GAAK/hB,GAAGghB,KAAMhgB,MAAMf,GAAG+hB,GAAK/hB,GAAGghB,IAAKhhB,GAAG8hB,GAAK9hB,GAAG+gB,KAAMpB,IACpGp5B,QAAQ+4B,IAAItf,GAAG8hB,GAAI9hB,GAAG+hB,GAAIoc,IAAKp9B,MAAMf,GAAGghB,IAAKhhB,GAAG+gB,KAAMhgB,MAAMf,GAAG2e,IAAK3e,GAAG0e,MAAOiB,MAK7Ep5B,QAAQ+4B,IAAI,EAAG,EAAG9rB,GAAIsqC,IAAKD,IAAKle,IArBIp5B,QAAQy3B,OAAOiD,IAAKC,UA1F1C36B,QAAQu3B,OAAO,EAAG,GAoHvC,GAFAv3B,QAAQw3B,YAEJgF,OAAQ,OAAOx8B,QAAU,KAAMw8B,OAAS,IAAM,KAyCpD,OAtCAzD,IAAIyf,SAAW,WACb,IAAIx7E,IAAM28D,YAAY1uD,MAAMvH,KAAMoF,aAAc+wD,YAAY5uD,MAAMvH,KAAMoF,YAAc,EAClFxK,IAAMy7D,WAAW9uD,MAAMvH,KAAMoF,aAAcmxD,SAAShvD,MAAMvH,KAAMoF,YAAc,EAAIiuD,QAAK,EAC3F,OAAQhd,IAAIz7C,GAAKtB,EAAGg9C,IAAI17C,GAAKtB,IAG/B+7D,IAAIY,YAAc,SAAS/0C,GACzB,OAAO9b,UAAU1D,QAAUu0D,YAA2B,mBAAN/0C,EAAmBA,EAAIk3B,uBAAUl3B,GAAIm0C,KAAOY,aAG9FZ,IAAIc,YAAc,SAASj1C,GACzB,OAAO9b,UAAU1D,QAAUy0D,YAA2B,mBAANj1C,EAAmBA,EAAIk3B,uBAAUl3B,GAAIm0C,KAAOc,aAG9Fd,IAAIme,aAAe,SAAStyD,GAC1B,OAAO9b,UAAU1D,QAAU8xE,aAA4B,mBAANtyD,EAAmBA,EAAIk3B,uBAAUl3B,GAAIm0C,KAAOme,cAG/Fne,IAAIoe,UAAY,SAASvyD,GACvB,OAAO9b,UAAU1D,QAAU+xE,UAAiB,MAALvyD,EAAY,KAAoB,mBAANA,EAAmBA,EAAIk3B,uBAAUl3B,GAAIm0C,KAAOoe,WAG/Gpe,IAAIgB,WAAa,SAASn1C,GACxB,OAAO9b,UAAU1D,QAAU20D,WAA0B,mBAANn1C,EAAmBA,EAAIk3B,uBAAUl3B,GAAIm0C,KAAOgB,YAG7FhB,IAAIkB,SAAW,SAASr1C,GACtB,OAAO9b,UAAU1D,QAAU60D,SAAwB,mBAANr1C,EAAmBA,EAAIk3B,uBAAUl3B,GAAIm0C,KAAOkB,UAG3FlB,IAAIoB,SAAW,SAASv1C,GACtB,OAAO9b,UAAU1D,QAAU+0D,SAAwB,mBAANv1C,EAAmBA,EAAIk3B,uBAAUl3B,GAAIm0C,KAAOoB,UAG3FpB,IAAI/4B,QAAU,SAASpb,GACrB,OAAO9b,UAAU1D,QAAW46B,QAAe,MAALpb,EAAY,KAAOA,EAAIm0C,KAAO/4B,SAG/D+4B,KoD6rCL3tB,eAGEqtC,QACFlsC,KAAMmsC,MAGJC,gBAAkB,SAAlBA,gBAAmBC,QAGrB,IADA,IAAI79D,SADJ69D,OAASA,OAAOhiE,KAAK,SAACtY,EAAGwI,GAAJ,OAAUxI,EAAIwI,KACd,GAAK8xE,OAAO,GACxB18E,EAAI,EAAGA,EAAI08E,OAAOxzE,OAAQlJ,IAC/B6e,QAAUxT,KAAKsQ,IAAIkD,QAAS69D,OAAO18E,GAAK08E,OAAO18E,EAAI,IAGvD,OAAO6e,SAGL89D,aACFtyB,YAAa,yBACbG,OAAQ,sBACRE,OAAQ,mBACRC,KAAM,mBACNngD,IAAK,gBACLK,MAAO,QACPW,KAAM,MAGJoxE,gBACD,cAAe,SAAU,SAAU,OAAQ,MAAO,QAAS,SAC3D,EAAG,IAAM,IAAO,KAAS,MAAU,OAAY,UAQ9CC,4BAAiB,SAAjBA,eAAkB57E,MAAO6nD,UAC3B,IAAMg0B,gBANiB,SAArBC,mBAAsBj0B,UACxB,IAAMr/C,MAAQynC,+BAAkB0rC,cAAc,GAAI9zB,UAClD,OAAO8zB,cAAc,GAAGnzE,OAIAszE,CAAmBj0B,UAC3C,OAAOxhD,iCAAkBsG,SAAS3M,MAAO07E,YAAYG,mBAiCnDE,gBANgBp9E,OAAOk3B,uBAAyBl3B,OAAOm3B,6BACzDn3B,OAAOo3B,0BAA4Bp3B,OAAOq3B,wBAA0Br3B,OAAOs3B,wBAKxD,SAAjB8lD,eAAiB3oE,QAAM,OAAI,SAAC3L,KAC9B,OAAIA,eAAeyL,kBACRzL,OAAO2L,OAASA,OAAO3L,KAAvB,GAAAwa,OAAiCxa,KAErCA,OAGLu0E,4CAAiC,SAAjCA,+BAAkCr3D,WACpC,IAAIs3D,mBACA9nE,KAAOwQ,UACX,EAAG,CACC,IAAMkD,YAAc1T,KAAK2T,iBACzB,GAAID,YAAa,CACb,IAAMq0D,gBAAkBr0D,YAAYgD,UAAU4G,KAAK,SAAAxJ,YAAU,MWnhDvC,UXmhD2CA,WAAWzE,KAC5E,GAAI04D,gBAAiB,CACjBD,gBAAkBC,gBAAgBx4D,aAClC,cAGHvP,KAAOA,KAAKgoE,aAZmD,IAcxE,IAAMC,oBACA9sD,SAAW3K,UAAU/O,gBAAgB7D,aAf6BsqE,MAAA1wE,UAAA1D,OAAtBq0E,kBAAsB,IAAAltE,MAAAitE,MAAA,EAAAA,MAAA,KAAAE,MAAA,EAAAA,MAAAF,MAAAE,QAAtBD,kBAAsBC,MAAA,GAAA5wE,UAAA4wE,OA2BxE,OAXAD,kBAAkBjtE,QAAQ,SAACogB,aACvB,GAAIwsD,gBAAgBxsD,aAChB2sD,iBAAiB3sD,aAAewsD,gBAAgBxsD,iBAC7C,CACH,IAAMwC,aAAe3C,SAASG,aAC1BwC,eACAmqD,iBAAiB3sD,aAAewC,aAAa1T,eAKlD69D,kBYxiDAI,MAAQ,+BAEJC,gBACb5xC,IAAK,6BACL2xC,MAAOA,MACPE,MAAO,+BACPC,IAAK,uCACLC,MAAO,iCCLMC,cAAA,SAASv9E,MACtB,IAAIsnD,OAAStnD,MAAQ,GAAIP,EAAI6nD,OAAOp6C,QAAQ,KAE5C,OADIzN,GAAK,GAAqC,WAA/B6nD,OAAStnD,KAAKoiB,MAAM,EAAG3iB,MAAiBO,KAAOA,KAAKoiB,MAAM3iB,EAAI,IACtE+9E,eAAWh8E,eAAe8lD,SAAWm2B,MAAOD,eAAWl2B,QAASuwB,MAAO73E,MAAQA,MCczE,IAAA09E,QAAA,SAAS19E,MACtB,IAAI29E,SAAW7J,cAAU9zE,MACzB,OAAQ29E,SAAS9F,MARnB,SAAS+F,aAAaD,UACpB,OAAO,WACL,OAAO12E,KAAK42E,cAAcnyC,gBAAgBiyC,SAASF,MAAOE,SAAS9F,SAZvE,SAASiG,eAAe99E,MACtB,OAAO,WACL,IAAIm/B,SAAWl4B,KAAK42E,cAChBE,IAAM92E,KAAK+2E,aACf,OAAOD,MAAQb,OAAS/9C,SAASujB,gBAAgBs7B,eAAiBd,MAC5D/9C,SAASmJ,cAActoC,MACvBm/B,SAASuM,gBAAgBqyC,IAAK/9E,SAchB29E,WCvBxB,SAAShY,iBAEM,IAAAsY,aAAA,SAASC,UACtB,OAAmB,MAAZA,SAAmBvY,cAAO,WAC/B,OAAO1+D,KAAKk3E,cAAcD,YCJ9B,SAAS3vC,oBACP,SAGa,IAAA6vC,YAAA,SAASF,UACtB,OAAmB,MAAZA,SAAmB3vC,kBAAQ,WAChC,OAAOtnC,KAAKo3E,iBAAiBH,YCN7BI,QAAU,SAAAA,QAASJ,UACrB,OAAO,WACL,OAAOj3E,KAAKs3E,QAAQL,YAIxB,GAAwB,oBAAb/+C,SAA0B,CACnC,IAAIq/C,gBAAUr/C,SAASujB,gBACvB,IAAK87B,gBAAQD,QAAS,CACpB,IAAIE,cAAgBD,gBAAQE,uBACrBF,gBAAQG,mBACRH,gBAAQI,oBACRJ,gBAAQK,iBACfP,QAAU,SAAAA,QAASJ,UACjB,OAAO,WACL,OAAOO,cAAc7+E,KAAKqH,KAAMi3E,aAMzBI,wBCrBAQ,OAAA,SAASviD,QACtB,OAAO,IAAIzsB,MAAMysB,OAAO5zB,SCMnB,SAASo2E,UAAUxxD,OAAQtU,OAChChS,KAAK42E,cAAgBtwD,OAAOswD,cAC5B52E,KAAK+2E,aAAezwD,OAAOywD,aAC3B/2E,KAAK+3E,MAAQ,KACb/3E,KAAK4jB,QAAU0C,OACftmB,KAAKg4E,SAAWhmE,MAGlB8lE,UAAUx9E,WACRsrB,YAAakyD,UACbp0C,YAAa,SAAAA,YAASrhB,OAAS,OAAOriB,KAAK4jB,QAAQwd,aAAa/e,MAAOriB,KAAK+3E,QAC5E32C,aAAc,SAAAA,aAAS/e,MAAOzU,MAAQ,OAAO5N,KAAK4jB,QAAQwd,aAAa/e,MAAOzU,OAC9EspE,cAAe,SAAAA,cAASD,UAAY,OAAOj3E,KAAK4jB,QAAQszD,cAAcD,WACtEG,iBAAkB,SAAAA,iBAASH,UAAY,OAAOj3E,KAAK4jB,QAAQwzD,iBAAiBH,YCpB/D,ICIXgB,UAAY,IAEhB,SAASC,UAAU5xD,OAAQq5B,MAAOmT,MAAOx9B,OAAQs9B,KAAM5nD,MASrD,IARA,IACIylB,KADAj4B,EAAI,EAEJ2/E,YAAcx4B,MAAMj+C,OACpB02E,WAAaptE,KAAKtJ,OAKflJ,EAAI4/E,aAAc5/E,GACnBi4B,KAAOkvB,MAAMnnD,KACfi4B,KAAKunD,SAAWhtE,KAAKxS,GACrB88B,OAAO98B,GAAKi4B,MAEZqiC,MAAMt6D,GAAK,IAAIs/E,UAAUxxD,OAAQtb,KAAKxS,IAK1C,KAAOA,EAAI2/E,cAAe3/E,GACpBi4B,KAAOkvB,MAAMnnD,MACfo6D,KAAKp6D,GAAKi4B,MAKhB,SAAS4nD,QAAQ/xD,OAAQq5B,MAAOmT,MAAOx9B,OAAQs9B,KAAM5nD,KAAMjR,KACzD,IAAIvB,EACAi4B,KAKAsX,SAJAuwC,kBACAH,YAAcx4B,MAAMj+C,OACpB02E,WAAaptE,KAAKtJ,OAClB62E,UAAY,IAAI1vE,MAAMsvE,aAK1B,IAAK3/E,EAAI,EAAGA,EAAI2/E,cAAe3/E,GACzBi4B,KAAOkvB,MAAMnnD,MACf+/E,UAAU//E,GAAKuvC,SAAWkwC,UAAYl+E,IAAIpB,KAAK83B,KAAMA,KAAKunD,SAAUx/E,EAAGmnD,OACnE5X,YAAYuwC,eACd1lB,KAAKp6D,GAAKi4B,KAEV6nD,eAAevwC,UAAYtX,MAQjC,IAAKj4B,EAAI,EAAGA,EAAI4/E,aAAc5/E,GAExBi4B,KAAO6nD,eADXvwC,SAAWkwC,UAAYl+E,IAAIpB,KAAK2tB,OAAQtb,KAAKxS,GAAIA,EAAGwS,SAElDsqB,OAAO98B,GAAKi4B,KACZA,KAAKunD,SAAWhtE,KAAKxS,GACrB8/E,eAAevwC,UAAY,MAE3B+qB,MAAMt6D,GAAK,IAAIs/E,UAAUxxD,OAAQtb,KAAKxS,IAK1C,IAAKA,EAAI,EAAGA,EAAI2/E,cAAe3/E,GACxBi4B,KAAOkvB,MAAMnnD,KAAQ8/E,eAAeC,UAAU//E,MAAQi4B,OACzDmiC,KAAKp6D,GAAKi4B,MClDhB,SAAS4U,eAAUzqC,EAAGwI,GACpB,OAAOxI,EAAIwI,GAAK,EAAIxI,EAAIwI,EAAI,EAAIxI,GAAKwI,EAAI,EAAIkiC,ICoBhC,IC1CAkzC,WAAA,SAAS/nD,MACtB,OAAQA,KAAKmmD,eAAiBnmD,KAAKmmD,cAAcl7B,aACzCjrB,KAAKyH,UAAYzH,MAClBA,KAAKirB,aC4BP,SAAS+8B,WAAWhoD,KAAM13B,MAC/B,OAAO03B,KAAKkJ,MAAMkiB,iBAAiB9iD,OAC5B2iD,WAAYjrB,MAAMmrB,iBAAiBnrB,KAAM,MAAMorB,iBAAiB9iD,MCjCzE,SAAS2/E,WAAW1+B,QAClB,OAAOA,OAAOvhC,OAAOlM,MAAM,SAG7B,SAASosE,UAAUloD,MACjB,OAAOA,KAAKkoD,WAAa,IAAIC,UAAUnoD,MAGzC,SAASmoD,UAAUnoD,MACjBzwB,KAAK+zB,MAAQtD,KACbzwB,KAAK64E,OAASH,WAAWjoD,KAAK0iC,aAAa,UAAY,IAuBzD,SAAS2lB,WAAWroD,KAAMi2B,OAExB,IADA,IAAI31B,KAAO4nD,UAAUloD,MAAOj4B,GAAK,EAAGyB,EAAIysD,MAAMhlD,SACrClJ,EAAIyB,GAAG82B,KAAKha,IAAI2vC,MAAMluD,IAGjC,SAASugF,cAActoD,KAAMi2B,OAE3B,IADA,IAAI31B,KAAO4nD,UAAUloD,MAAOj4B,GAAK,EAAGyB,EAAIysD,MAAMhlD,SACrClJ,EAAIyB,GAAG82B,KAAKqW,OAAOsf,MAAMluD,IA3BpCogF,UAAUt+E,WACRyc,IAAK,SAAAA,IAAShe,MACJiH,KAAK64E,OAAO5yE,QAAQlN,MACpB,IACNiH,KAAK64E,OAAO3yE,KAAKnN,MACjBiH,KAAK+zB,MAAM4P,aAAa,QAAS3jC,KAAK64E,OAAO91E,KAAK,QAGtDqkC,OAAQ,SAAAA,OAASruC,MACf,IAAIP,EAAIwH,KAAK64E,OAAO5yE,QAAQlN,MACxBP,GAAK,IACPwH,KAAK64E,OAAOvxE,OAAO9O,EAAG,GACtBwH,KAAK+zB,MAAM4P,aAAa,QAAS3jC,KAAK64E,OAAO91E,KAAK,QAGtDi2E,SAAU,SAAAA,SAASjgF,MACjB,OAAOiH,KAAK64E,OAAO5yE,QAAQlN,OAAS,IC7BxC,SAASkgF,aACPj5E,KAAKg8B,YAAc,GCDrB,SAASk9C,aACPl5E,KAAKo5B,UAAY,GCDnB,SAAS+oB,cACHniD,KAAKm5E,aAAan5E,KAAKmhC,WAAWuC,YAAY1jC,MCDpD,SAASo5E,QACHp5E,KAAKq5E,iBAAiBr5E,KAAKmhC,WAAWC,aAAaphC,KAAMA,KAAKmhC,WAAW3T,YCE/E,SAAS8rD,eACP,OAAO,KCJT,SAASlyC,gBACP,IAAI9gB,OAAStmB,KAAKmhC,WACd7a,QAAQA,OAAOH,YAAYnmB,MCFjC,SAASu5E,yBACP,OAAOv5E,KAAKmhC,WAAWC,aAAaphC,KAAKw5E,WAAU,GAAQx5E,KAAKm5E,aAGlE,SAASM,sBACP,OAAOz5E,KAAKmhC,WAAWC,aAAaphC,KAAKw5E,WAAU,GAAOx5E,KAAKm5E,aAGlD,ICRXO,gBAEOC,SAAQ,KAEK,oBAAbzhD,WAEH,iBADQA,SAASujB,kBAErBi+B,cAAgBE,WAAY,YAAaC,WAAY,cAIzD,SAASC,sBAAsB9I,SAAU/uE,MAAO09C,OAE9C,OADAqxB,SAAW+I,gBAAgB/I,SAAU/uE,MAAO09C,OACrC,SAASg6B,OACd,IAAIK,QAAUL,MAAMM,cACfD,UAAYA,UAAYh6E,MAAkD,EAAxCg6E,QAAQE,wBAAwBl6E,QACrEgxE,SAASr4E,KAAKqH,KAAM25E,QAK1B,SAASI,gBAAgB/I,SAAU/uE,MAAO09C,OACxC,OAAO,SAASw6B,QACd,IAAIC,OAAST,SACbA,SAAQQ,OACR,IACEnJ,SAASr4E,KAAKqH,KAAMA,KAAKg4E,SAAU/1E,MAAO09C,OAD5C,QAGEg6B,SAAQS,SAad,SAASC,SAASC,UAChB,OAAO,WACL,IAAIlN,GAAKptE,KAAKu6E,KACd,GAAKnN,GAAL,CACA,IAAK,IAAkCn0E,EAA9BiiB,EAAI,EAAG1iB,GAAK,EAAGI,EAAIw0E,GAAG1rE,OAAWwZ,EAAItiB,IAAKsiB,EAC7CjiB,EAAIm0E,GAAGlyD,GAAMo/D,SAASh/E,MAAQrC,EAAEqC,OAASg/E,SAASh/E,MAASrC,EAAEF,OAASuhF,SAASvhF,KAGjFq0E,KAAK50E,GAAKS,EAFV+G,KAAKw6E,oBAAoBvhF,EAAEqC,KAAMrC,EAAE+3E,SAAU/3E,EAAEwhF,WAK7CjiF,EAAG40E,GAAG1rE,OAASlJ,SACTwH,KAAKu6E,OAIrB,SAASG,MAAMJ,SAAU7gF,MAAOghF,SAC9B,IAAIE,KAAOjB,aAAan/E,eAAe+/E,SAASh/E,MAAQw+E,sBAAwBC,gBAChF,OAAO,SAASjhF,EAAGN,EAAGmnD,OACpB,IAAoB1mD,EAAhBm0E,GAAKptE,KAAKu6E,KAASvJ,SAAW2J,KAAKlhF,MAAOjB,EAAGmnD,OACjD,GAAIytB,GAAI,IAAK,IAAIlyD,EAAI,EAAGtiB,EAAIw0E,GAAG1rE,OAAQwZ,EAAItiB,IAAKsiB,EAC9C,IAAKjiB,EAAIm0E,GAAGlyD,IAAI5f,OAASg/E,SAASh/E,MAAQrC,EAAEF,OAASuhF,SAASvhF,KAI5D,OAHAiH,KAAKw6E,oBAAoBvhF,EAAEqC,KAAMrC,EAAE+3E,SAAU/3E,EAAEwhF,SAC/Cz6E,KAAK46E,iBAAiB3hF,EAAEqC,KAAMrC,EAAE+3E,SAAWA,SAAU/3E,EAAEwhF,QAAUA,cACjExhF,EAAEQ,MAAQA,OAIduG,KAAK46E,iBAAiBN,SAASh/E,KAAM01E,SAAUyJ,SAC/CxhF,GAAKqC,KAAMg/E,SAASh/E,KAAMvC,KAAMuhF,SAASvhF,KAAMU,MAAOA,MAAOu3E,SAAUA,SAAUyJ,QAASA,SACrFrN,GACAA,GAAGlnE,KAAKjN,GADJ+G,KAAKu6E,MAAQthF,IA0BnB,SAAS4hF,YAAYV,OAAQnJ,SAAUlW,KAAM9zD,MAClD,IAAIozE,OAAST,SACbQ,OAAOW,YAAcnB,SACrBA,SAAQQ,OACR,IACE,OAAOnJ,SAASzpE,MAAMuzD,KAAM9zD,MAD9B,QAGE2yE,SAAQS,QCtGZ,SAASW,cAActqD,KAAMn1B,KAAMsmB,QACjC,IAAIxpB,OAASsjD,WAAYjrB,MACrBkpD,MAAQvhF,OAAO4iF,YAEE,mBAAVrB,MACTA,MAAQ,IAAIA,MAAMr+E,KAAMsmB,SAExB+3D,MAAQvhF,OAAO8/B,SAAS+iD,YAAY,SAChCr5D,QAAQ+3D,MAAMuB,UAAU5/E,KAAMsmB,OAAOu5D,QAASv5D,OAAOw5D,YAAazB,MAAM0B,OAASz5D,OAAOy5D,QACvF1B,MAAMuB,UAAU5/E,MAAM,GAAO,IAGpCm1B,KAAKsqD,cAAcpB,OAeN,ICEJ7hF,gBAAQ,MAEZ,SAAS0vE,oBAAU8T,OAAQC,SAChCv7E,KAAKw7E,QAAUF,OACft7E,KAAKy7E,SAAWF,QAGlB,SAAS/oB,sBACP,OAAO,IAAIgV,sBAAYtvC,SAASujB,kBAAmB3jD,gBAGrD0vE,oBAAUltE,UAAYk4D,oBAAUl4D,WAC9BsrB,YAAa4hD,oBACbvoD,OCzCa,SAASA,QACA,mBAAXA,SAAuBA,OAASg4D,aAASh4D,SAEpD,IAAK,IAAIq8D,OAASt7E,KAAKw7E,QAAS5iF,EAAI0iF,OAAO55E,OAAQg6E,UAAY,IAAI7yE,MAAMjQ,GAAIsiB,EAAI,EAAGA,EAAItiB,IAAKsiB,EAC3F,IAAK,IAAiFuV,KAAMkrD,QAAnFh8B,MAAQ27B,OAAOpgE,GAAIjhB,EAAI0lD,MAAMj+C,OAAQk6E,SAAWF,UAAUxgE,GAAK,IAAIrS,MAAM5O,GAAmBzB,EAAI,EAAGA,EAAIyB,IAAKzB,GAC9Gi4B,KAAOkvB,MAAMnnD,MAAQmjF,QAAU18D,OAAOtmB,KAAK83B,KAAMA,KAAKunD,SAAUx/E,EAAGmnD,UAClE,aAAclvB,OAAMkrD,QAAQ3D,SAAWvnD,KAAKunD,UAChD4D,SAASpjF,GAAKmjF,SAKpB,OAAO,IAAInU,oBAAUkU,UAAW17E,KAAKy7E,WD8BrChpB,UE1Ca,SAASxzC,QACA,mBAAXA,SAAuBA,OAASk4D,YAAYl4D,SAEvD,IAAK,IAAIq8D,OAASt7E,KAAKw7E,QAAS5iF,EAAI0iF,OAAO55E,OAAQg6E,aAAgBH,WAAcrgE,EAAI,EAAGA,EAAItiB,IAAKsiB,EAC/F,IAAK,IAAyCuV,KAArCkvB,MAAQ27B,OAAOpgE,GAAIjhB,EAAI0lD,MAAMj+C,OAAclJ,EAAI,EAAGA,EAAIyB,IAAKzB,GAC9Di4B,KAAOkvB,MAAMnnD,MACfkjF,UAAUx1E,KAAK+Y,OAAOtmB,KAAK83B,KAAMA,KAAKunD,SAAUx/E,EAAGmnD,QACnD47B,QAAQr1E,KAAKuqB,OAKnB,OAAO,IAAI+2C,oBAAUkU,UAAWH,UF+BhC7nE,OG3Ca,SAASrL,OACD,mBAAVA,QAAsBA,MAAQgvE,YAAQhvE,QAEjD,IAAK,IAAIizE,OAASt7E,KAAKw7E,QAAS5iF,EAAI0iF,OAAO55E,OAAQg6E,UAAY,IAAI7yE,MAAMjQ,GAAIsiB,EAAI,EAAGA,EAAItiB,IAAKsiB,EAC3F,IAAK,IAAuEuV,KAAnEkvB,MAAQ27B,OAAOpgE,GAAIjhB,EAAI0lD,MAAMj+C,OAAQk6E,SAAWF,UAAUxgE,MAAe1iB,EAAI,EAAGA,EAAIyB,IAAKzB,GAC3Fi4B,KAAOkvB,MAAMnnD,KAAO6P,MAAM1P,KAAK83B,KAAMA,KAAKunD,SAAUx/E,EAAGmnD,QAC1Di8B,SAAS11E,KAAKuqB,MAKpB,OAAO,IAAI+2C,oBAAUkU,UAAW17E,KAAKy7E,WHiCrCzwE,Kf6Ba,SAASvR,MAAOM,KAC7B,IAAKN,MAGH,OAFAuR,KAAO,IAAInC,MAAM7I,KAAKs6B,QAASpf,GAAK,EACpClb,KAAKmnC,KAAK,SAASruC,GAAKkS,OAAOkQ,GAAKpiB,IAC7BkS,KAGT,IAAIhR,KAAOD,IAAMs+E,QAAUH,UACvBqD,QAAUv7E,KAAKy7E,SACfH,OAASt7E,KAAKw7E,QAEG,mBAAV/hF,QAAsBA,MDvFpB,SAASskC,GACtB,OAAO,WACL,OAAOA,GCqFgCqa,CAAS3+C,QAElD,IAAK,IAAIb,EAAI0iF,OAAO55E,OAAQ4zB,OAAS,IAAIzsB,MAAMjQ,GAAIk6D,MAAQ,IAAIjqD,MAAMjQ,GAAIg6D,KAAO,IAAI/pD,MAAMjQ,GAAIsiB,EAAI,EAAGA,EAAItiB,IAAKsiB,EAAG,CAC/G,IAAIoL,OAASi1D,QAAQrgE,GACjBykC,MAAQ27B,OAAOpgE,GACfi9D,YAAcx4B,MAAMj+C,OACpBsJ,KAAOvR,MAAMd,KAAK2tB,OAAQA,QAAUA,OAAO0xD,SAAU98D,EAAGqgE,SACxDnD,WAAaptE,KAAKtJ,OAClBm6E,WAAa/oB,MAAM53C,GAAK,IAAIrS,MAAMuvE,YAClC0D,YAAcxmD,OAAOpa,GAAK,IAAIrS,MAAMuvE,YAGxCp+E,KAAKssB,OAAQq5B,MAAOk8B,WAAYC,YAFhBlpB,KAAK13C,GAAK,IAAIrS,MAAMsvE,aAEoBntE,KAAMjR,KAK9D,IAAK,IAAoB6oD,SAAUh1C,KAA1Bq5B,GAAK,EAAG8X,GAAK,EAAmB9X,GAAKmxC,aAAcnxC,GAC1D,GAAI2b,SAAWi5B,WAAW50C,IAAK,CAE7B,IADIA,IAAM8X,KAAIA,GAAK9X,GAAK,KACfr5B,KAAOkuE,YAAY/8B,QAAUA,GAAKq5B,aAC3Cx1B,SAASm1B,MAAQnqE,MAAQ,MAQ/B,OAHA0nB,OAAS,IAAIkyC,oBAAUlyC,OAAQimD,UACxBQ,OAASjpB,MAChBx9B,OAAO0mD,MAAQppB,KACRt9B,QepEPw9B,MjB7Ca,WACb,OAAO,IAAI0U,oBAAUxnE,KAAK+7E,QAAU/7E,KAAKw7E,QAAQvzE,IAAI4vE,QAAS73E,KAAKy7E,WiB6CnE7oB,KI9Ca,WACb,OAAO,IAAI4U,oBAAUxnE,KAAKg8E,OAASh8E,KAAKw7E,QAAQvzE,IAAI4vE,QAAS73E,KAAKy7E,WJ8ClE5xE,MKhDa,SAAS2oD,WAEtB,IAAK,IAAIypB,QAAUj8E,KAAKw7E,QAASU,QAAU1pB,UAAUgpB,QAASW,GAAKF,QAAQv6E,OAAQyzC,GAAK+mC,QAAQx6E,OAAQ9I,EAAIiL,KAAKsQ,IAAIgoE,GAAIhnC,IAAKinC,OAAS,IAAIvzE,MAAMszE,IAAKjhE,EAAI,EAAGA,EAAItiB,IAAKsiB,EACpK,IAAK,IAAmGuV,KAA/F4rD,OAASJ,QAAQ/gE,GAAIohE,OAASJ,QAAQhhE,GAAIjhB,EAAIoiF,OAAO36E,OAAQmI,MAAQuyE,OAAOlhE,GAAK,IAAIrS,MAAM5O,GAAUzB,EAAI,EAAGA,EAAIyB,IAAKzB,GACxHi4B,KAAO4rD,OAAO7jF,IAAM8jF,OAAO9jF,MAC7BqR,MAAMrR,GAAKi4B,MAKjB,KAAOvV,EAAIihE,KAAMjhE,EACfkhE,OAAOlhE,GAAK+gE,QAAQ/gE,GAGtB,OAAO,IAAIssD,oBAAU4U,OAAQp8E,KAAKy7E,WLmClC50D,MMnDa,WAEb,IAAK,IAAIy0D,OAASt7E,KAAKw7E,QAAStgE,GAAK,EAAGtiB,EAAI0iF,OAAO55E,SAAUwZ,EAAItiB,GAC/D,IAAK,IAA8D63B,KAA1DkvB,MAAQ27B,OAAOpgE,GAAI1iB,EAAImnD,MAAMj+C,OAAS,EAAGkM,KAAO+xC,MAAMnnD,KAAYA,GAAK,IAC1Ei4B,KAAOkvB,MAAMnnD,MACXoV,MAAQA,OAAS6iB,KAAK0oD,aAAavrE,KAAKuzB,WAAWC,aAAa3Q,KAAM7iB,MAC1EA,KAAO6iB,MAKb,OAAOzwB,MNyCPkT,KdlDa,SAASsyB,SAGtB,SAAS+2C,YAAY3hF,EAAGwI,GACtB,OAAOxI,GAAKwI,EAAIoiC,QAAQ5qC,EAAEo9E,SAAU50E,EAAE40E,WAAap9E,GAAKwI,EAHrDoiC,UAASA,QAAUH,gBAMxB,IAAK,IAAIi2C,OAASt7E,KAAKw7E,QAAS5iF,EAAI0iF,OAAO55E,OAAQ86E,WAAa,IAAI3zE,MAAMjQ,GAAIsiB,EAAI,EAAGA,EAAItiB,IAAKsiB,EAAG,CAC/F,IAAK,IAAmFuV,KAA/EkvB,MAAQ27B,OAAOpgE,GAAIjhB,EAAI0lD,MAAMj+C,OAAQ+6E,UAAYD,WAAWthE,GAAK,IAAIrS,MAAM5O,GAAUzB,EAAI,EAAGA,EAAIyB,IAAKzB,GACxGi4B,KAAOkvB,MAAMnnD,MACfikF,UAAUjkF,GAAKi4B,MAGnBgsD,UAAUvpE,KAAKqpE,aAGjB,OAAO,IAAI/U,oBAAUgV,WAAYx8E,KAAKy7E,UAAU50D,ScmChDluB,KOrDa,WACb,IAAI2T,SAAWlH,UAAU,GAGzB,OAFAA,UAAU,GAAKpF,KACfsM,SAAS/E,MAAM,KAAMnC,WACdpF,MPkDP8yB,MQtDa,WACb,IAAIA,MAAQ,IAAIjqB,MAAM7I,KAAKs6B,QAAS9hC,GAAK,EAEzC,OADAwH,KAAKmnC,KAAK,WAAarU,QAAQt6B,GAAKwH,OAC7B8yB,ORoDPrC,KSvDa,WAEb,IAAK,IAAI6qD,OAASt7E,KAAKw7E,QAAStgE,EAAI,EAAGtiB,EAAI0iF,OAAO55E,OAAQwZ,EAAItiB,IAAKsiB,EACjE,IAAK,IAAIykC,MAAQ27B,OAAOpgE,GAAI1iB,EAAI,EAAGyB,EAAI0lD,MAAMj+C,OAAQlJ,EAAIyB,IAAKzB,EAAG,CAC/D,IAAIi4B,KAAOkvB,MAAMnnD,GACjB,GAAIi4B,KAAM,OAAOA,KAIrB,OAAO,MT+CP6J,KUxDa,WACb,IAAIA,KAAO,EAEX,OADAt6B,KAAKmnC,KAAK,aAAe7M,OAClBA,MVsDPgN,MWzDa,WACb,OAAQtnC,KAAKywB,QXyDb0W,KY1Da,SAAS76B,UAEtB,IAAK,IAAIgvE,OAASt7E,KAAKw7E,QAAStgE,EAAI,EAAGtiB,EAAI0iF,OAAO55E,OAAQwZ,EAAItiB,IAAKsiB,EACjE,IAAK,IAAgDuV,KAA5CkvB,MAAQ27B,OAAOpgE,GAAI1iB,EAAI,EAAGyB,EAAI0lD,MAAMj+C,OAAclJ,EAAIyB,IAAKzB,GAC9Di4B,KAAOkvB,MAAMnnD,KAAI8T,SAAS3T,KAAK83B,KAAMA,KAAKunD,SAAUx/E,EAAGmnD,OAI/D,OAAO3/C,MZmDP+yD,KbjBa,SAASh6D,KAAMU,OAC5B,IAAIi9E,SAAW7J,cAAU9zE,MAEzB,GAAIqM,UAAU1D,OAAS,EAAG,CACxB,IAAI+uB,KAAOzwB,KAAKywB,OAChB,OAAOimD,SAAS9F,MACVngD,KAAKisD,eAAehG,SAASF,MAAOE,SAAS9F,OAC7CngD,KAAK0iC,aAAaujB,UAG1B,OAAO12E,KAAKmnC,MAAe,MAAT1tC,MACXi9E,SAAS9F,MA7ClB,SAAS+L,aAAajG,UACpB,OAAO,WACL12E,KAAK48E,kBAAkBlG,SAASF,MAAOE,SAAS9F,SARpD,SAASiM,WAAW9jF,MAClB,OAAO,WACLiH,KAAK88E,gBAAgB/jF,QAiDgD,mBAAVU,MACtDi9E,SAAS9F,MApBlB,SAASmM,eAAerG,SAAUj9E,OAChC,OAAO,WACL,IAAImQ,EAAInQ,MAAM8N,MAAMvH,KAAMoF,WACjB,MAALwE,EAAW5J,KAAK48E,kBAAkBlG,SAASF,MAAOE,SAAS9F,OAC1D5wE,KAAK0kC,eAAegyC,SAASF,MAAOE,SAAS9F,MAAOhnE,KAZ7D,SAASozE,aAAajkF,KAAMU,OAC1B,OAAO,WACL,IAAImQ,EAAInQ,MAAM8N,MAAMvH,KAAMoF,WACjB,MAALwE,EAAW5J,KAAK88E,gBAAgB/jF,MAC/BiH,KAAK2jC,aAAa5qC,KAAM6Q,KAyBxB8sE,SAAS9F,MAnClB,SAASqM,eAAevG,SAAUj9E,OAChC,OAAO,WACLuG,KAAK0kC,eAAegyC,SAASF,MAAOE,SAAS9F,MAAOn3E,SARxD,SAASyjF,aAAankF,KAAMU,OAC1B,OAAO,WACLuG,KAAK2jC,aAAa5qC,KAAMU,UAuC+Bi9E,SAAUj9E,SaKnEkgC,MXtCa,SAAS5gC,KAAMU,MAAO0jF,UACnC,OAAO/3E,UAAU1D,OAAS,EACpB1B,KAAKmnC,MAAe,MAAT1tC,MAtBnB,SAAS2jF,YAAYrkF,MACnB,OAAO,WACLiH,KAAK25B,MAAM0jD,eAAetkF,QAqBe,mBAAVU,MAXnC,SAAS6jF,cAAcvkF,KAAMU,MAAO0jF,UAClC,OAAO,WACL,IAAIvzE,EAAInQ,MAAM8N,MAAMvH,KAAMoF,WACjB,MAALwE,EAAW5J,KAAK25B,MAAM0jD,eAAetkF,MACpCiH,KAAK25B,MAAM4jD,YAAYxkF,KAAM6Q,EAAGuzE,YAVzC,SAASK,cAAczkF,KAAMU,MAAO0jF,UAClC,OAAO,WACLn9E,KAAK25B,MAAM4jD,YAAYxkF,KAAMU,MAAO0jF,aAiBXpkF,KAAMU,MAAmB,MAAZ0jF,SAAmB,GAAKA,WAC1D1E,WAAWz4E,KAAKywB,OAAQ13B,OWiC9BsB,SazCa,SAAStB,KAAMU,OAC5B,OAAO2L,UAAU1D,OAAS,EACpB1B,KAAKmnC,MAAe,MAAT1tC,MAtBnB,SAASgkF,eAAe1kF,MACtB,OAAO,kBACEiH,KAAKjH,QAqB8B,mBAAVU,MAXpC,SAASikF,iBAAiB3kF,KAAMU,OAC9B,OAAO,WACL,IAAImQ,EAAInQ,MAAM8N,MAAMvH,KAAMoF,WACjB,MAALwE,SAAkB5J,KAAKjH,MACtBiH,KAAKjH,MAAQ6Q,IAVtB,SAAS+zE,iBAAiB5kF,KAAMU,OAC9B,OAAO,WACLuG,KAAKjH,MAAQU,SAiBaV,KAAMU,QAC5BuG,KAAKywB,OAAO13B,OboClB6kF,QVDa,SAAS7kF,KAAMU,OAC5B,IAAIitD,MAAQgyB,WAAW3/E,KAAO,IAE9B,GAAIqM,UAAU1D,OAAS,EAAG,CAExB,IADA,IAAIqvB,KAAO4nD,UAAU34E,KAAKywB,QAASj4B,GAAK,EAAGyB,EAAIysD,MAAMhlD,SAC5ClJ,EAAIyB,GAAG,IAAK82B,KAAKioD,SAAStyB,MAAMluD,IAAK,OAAO,EACrD,OAAO,EAGT,OAAOwH,KAAKmnC,MAAuB,mBAAV1tC,MAf3B,SAASokF,gBAAgBn3B,MAAOjtD,OAC9B,OAAO,YACJA,MAAM8N,MAAMvH,KAAMoF,WAAa0zE,WAAaC,eAAe/4E,KAAM0mD,SAc5CjtD,MA5B1B,SAASqkF,YAAYp3B,OACnB,OAAO,WACLoyB,WAAW94E,KAAM0mD,SAIrB,SAASq3B,aAAar3B,OACpB,OAAO,WACLqyB,cAAc/4E,KAAM0mD,UAsBFA,MAAOjtD,SUV3B4G,KT9Ca,SAAS5G,OACtB,OAAO2L,UAAU1D,OACX1B,KAAKmnC,KAAc,MAAT1tC,MACNw/E,YAA+B,mBAAVx/E,MAVjC,SAASukF,aAAavkF,OACpB,OAAO,WACL,IAAImQ,EAAInQ,MAAM8N,MAAMvH,KAAMoF,WAC1BpF,KAAKg8B,YAAmB,MAALpyB,EAAY,GAAKA,IATxC,SAASq0E,aAAaxkF,OACpB,OAAO,WACLuG,KAAKg8B,YAAcviC,SAgBGA,QAClBuG,KAAKywB,OAAOuL,aSyClBkiD,KR/Ca,SAASzkF,OACtB,OAAO2L,UAAU1D,OACX1B,KAAKmnC,KAAc,MAAT1tC,MACNy/E,YAA+B,mBAAVz/E,MAVjC,SAAS0kF,aAAa1kF,OACpB,OAAO,WACL,IAAImQ,EAAInQ,MAAM8N,MAAMvH,KAAMoF,WAC1BpF,KAAKo5B,UAAiB,MAALxvB,EAAY,GAAKA,IATtC,SAASw0E,aAAa3kF,OACpB,OAAO,WACLuG,KAAKo5B,UAAY3/B,SAgBKA,QAClBuG,KAAKywB,OAAO2I,WQ0ClB+oB,MP7Da,WACb,OAAOniD,KAAKmnC,KAAKgb,cO6DjBi3B,MN9Da,WACb,OAAOp5E,KAAKmnC,KAAKiyC,QM8DjBvkD,OcjEa,SAAS97B,MACtB,IAAIe,OAAyB,mBAATf,KAAsBA,KAAO09E,QAAQ19E,MACzD,OAAOiH,KAAKif,OAAO,WACjB,OAAOjf,KAAK0jC,YAAY5pC,OAAOyN,MAAMvH,KAAMoF,ed+D7C6tD,OL7Da,SAASl6D,KAAM0qE,QAC5B,IAAI3pE,OAAyB,mBAATf,KAAsBA,KAAO09E,QAAQ19E,MACrDkmB,OAAmB,MAAVwkD,OAAiB6V,aAAiC,mBAAX7V,OAAwBA,OAASwT,aAASxT,QAC9F,OAAOzjE,KAAKif,OAAO,WACjB,OAAOjf,KAAKohC,aAAatnC,OAAOyN,MAAMvH,KAAMoF,WAAY6Z,OAAO1X,MAAMvH,KAAMoF,YAAc,SK0D3FgiC,OJhEa,WACb,OAAOpnC,KAAKmnC,KAAKC,gBIgEjBzpB,MH9Da,SAAS0gE,MACtB,OAAOr+E,KAAKif,OAAOo/D,KAAO5E,oBAAsBF,yBG8DhDvnE,MevEa,SAASvY,OACtB,OAAO2L,UAAU1D,OACX1B,KAAK3F,SAAS,WAAYZ,OAC1BuG,KAAKywB,OAAOunD,UfqElB5K,GFIa,SAASkN,SAAU7gF,MAAOghF,SACvC,IAA+CjiF,EAAyBkB,EAApE4kF,UA5CN,SAASC,eAAeD,WACtB,OAAOA,UAAU7lE,OAAOlM,MAAM,SAAStE,IAAI,SAASvO,GAClD,IAAIX,KAAO,GAAIP,EAAIkB,EAAEuM,QAAQ,KAE7B,OADIzN,GAAK,IAAGO,KAAOW,EAAEyhB,MAAM3iB,EAAI,GAAIkB,EAAIA,EAAEyhB,MAAM,EAAG3iB,KAC1C8C,KAAM5B,EAAGX,KAAMA,QAwCTwlF,CAAejE,SAAW,IAAQrgF,EAAIqkF,UAAU58E,OAEhE,KAAI0D,UAAU1D,OAAS,GAAvB,CAcA,IAFA0rE,GAAK3zE,MAAQihF,MAAQL,SACN,MAAXI,UAAiBA,SAAU,GAC1BjiF,EAAI,EAAGA,EAAIyB,IAAKzB,EAAGwH,KAAKmnC,KAAKimC,GAAGkR,UAAU9lF,GAAIiB,MAAOghF,UAC1D,OAAOz6E,KAdL,IAAIotE,GAAKptE,KAAKywB,OAAO8pD,KACrB,GAAInN,GAAI,IAAK,IAA0Bn0E,EAAtBiiB,EAAI,EAAGtiB,EAAIw0E,GAAG1rE,OAAWwZ,EAAItiB,IAAKsiB,EACjD,IAAK1iB,EAAI,EAAGS,EAAIm0E,GAAGlyD,GAAI1iB,EAAIyB,IAAKzB,EAC9B,IAAKkB,EAAI4kF,UAAU9lF,IAAI8C,OAASrC,EAAEqC,MAAQ5B,EAAEX,OAASE,EAAEF,KACrD,OAAOE,EAAEQ,OEXjB+kF,SD5Ca,SAASljF,KAAMsmB,QAC5B,OAAO5hB,KAAKmnC,MAAwB,mBAAXvlB,OAP3B,SAAS68D,iBAAiBnjF,KAAMsmB,QAC9B,OAAO,WACL,OAAOm5D,cAAc/6E,KAAM1E,KAAMsmB,OAAOra,MAAMvH,KAAMoF,cARxD,SAASs5E,iBAAiBpjF,KAAMsmB,QAC9B,OAAO,WACL,OAAOm5D,cAAc/6E,KAAM1E,KAAMsmB,WAaXtmB,KAAMsmB,WC4CjB4wC,sCgB1EAmsB,WAAA,SAAS1H,UACtB,MAA2B,iBAAbA,SACR,IAAIzP,sBAAYtvC,SAASg/C,cAAcD,aAAc/+C,SAASujB,kBAC9D,IAAI+rB,sBAAYyP,WAAYn/E,iBCLhC8mF,OAAS,EAMb,SAASC,QACP7+E,KAAKkhB,EAAI,OAAS09D,QAAQt8E,SAAS,IAGrCu8E,MAAMvkF,UARS,SAASs2E,QACtB,OAAO,IAAIiO,OAOWvkF,WACtBsrB,YAAai5D,MACbxlF,IAAK,SAAAA,IAASo3B,MAEZ,IADA,IAAIiI,GAAK14B,KAAKkhB,IACLwX,MAAMjI,OAAO,KAAMA,KAAOA,KAAK0Q,YAAa,OACrD,OAAO1Q,KAAKiI,KAEdvmB,IAAK,SAAAA,IAASse,KAAMh3B,OAClB,OAAOg3B,KAAKzwB,KAAKkhB,GAAKznB,OAExB2tC,OAAQ,SAAAA,OAAS3W,MACf,OAAOzwB,KAAKkhB,KAAKuP,aAAeA,KAAKzwB,KAAKkhB,IAE5C5e,SAAU,SAAAA,WACR,OAAOtC,KAAKkhB,ICtBD,IAAA45D,YAAA,WAEb,IADA,IAAqBr2D,OAAjBq6D,QAAUnF,SACPl1D,OAASq6D,QAAQhE,aAAagE,QAAUr6D,OAC/C,OAAOq6D,SCLMC,UAAA,SAAStuD,KAAMkpD,OAC5B,IAAIr1C,IAAM7T,KAAKuuD,iBAAmBvuD,KAElC,GAAI6T,IAAI26C,eAAgB,CACtB,IAAI3mB,MAAQh0B,IAAI26C,iBAGhB,OAFA3mB,MAAMv6B,EAAI47C,MAAMuF,QAAS5mB,MAAM90D,EAAIm2E,MAAMwF,UACzC7mB,MAAQA,MAAM8mB,gBAAgB3uD,KAAK4uD,eAAeC,YACpCvhD,EAAGu6B,MAAM90D,GAGzB,IAAIoyD,KAAOnlC,KAAK8uD,wBAChB,OAAQ5F,MAAMuF,QAAUtpB,KAAKlwB,KAAOjV,KAAK+uD,WAAY7F,MAAMwF,QAAUvpB,KAAKtzB,IAAM7R,KAAKgvD,YCRxEC,MAAA,SAASjvD,MACtB,IAAIkpD,MAAQmB,cAEZ,OADInB,MAAMgG,iBAAgBhG,MAAQA,MAAMgG,eAAe,IAChDrnB,UAAM7nC,KAAMkpD,QCHNiG,UAAA,SAASnvD,KAAMovD,QAASC,YACjC16E,UAAU1D,OAAS,IAAGo+E,WAAaD,QAASA,QAAU/E,cAAc6E,gBAExE,IAAK,IAA6CI,MAAzCvnF,EAAI,EAAGyB,EAAI4lF,QAAUA,QAAQn+E,OAAS,EAAUlJ,EAAIyB,IAAKzB,EAChE,IAAKunF,MAAQF,QAAQrnF,IAAIsnF,aAAeA,WACtC,OAAOxnB,UAAM7nC,KAAMsvD,OAIvB,OAAO,MCZLllB,eAAQphE,MAAO,SAAAA,WAEnB,SAAS+kF,oBACP,IAAK,IAAyC9kF,EAArClB,EAAI,EAAGyB,EAAImL,UAAU1D,OAAQwf,KAAW1oB,EAAIyB,IAAKzB,EAAG,CAC3D,KAAMkB,EAAI0L,UAAU5M,GAAK,KAAQkB,KAAKwnB,EAAI,MAAM,IAAIxR,MAAM,iBAAmBhW,GAC7EwnB,EAAExnB,MAEJ,OAAO,IAAIsmF,SAAS9+D,GAGtB,SAAS8+D,SAAS9+D,GAChBlhB,KAAKkhB,EAAIA,EAqDX,SAAS7nB,aAAIiC,KAAMvC,MACjB,IAAK,IAA4BF,EAAxBL,EAAI,EAAGyB,EAAIqB,KAAKoG,OAAWlJ,EAAIyB,IAAKzB,EAC3C,IAAKK,EAAIyC,KAAK9C,IAAIO,OAASA,KACzB,OAAOF,EAAEY,MAKf,SAAS0Y,aAAI7W,KAAMvC,KAAMuT,UACvB,IAAK,IAAI9T,EAAI,EAAGyB,EAAIqB,KAAKoG,OAAQlJ,EAAIyB,IAAKzB,EACxC,GAAI8C,KAAK9C,GAAGO,OAASA,KAAM,CACzBuC,KAAK9C,GAAKqiE,cAAMv/D,KAAOA,KAAK6f,MAAM,EAAG3iB,GAAGkjB,OAAOpgB,KAAK6f,MAAM3iB,EAAI,IAC9D,MAIJ,OADgB,MAAZ8T,UAAkBhR,KAAK4K,MAAMnN,KAAMA,KAAMU,MAAO6S,WAC7ChR,KAzDT0kF,SAAS1lF,UAAYkkF,kBAASlkF,WAC5BsrB,YAAao6D,SACb5S,GAAI,SAAAA,GAASkN,SAAUhuE,UACrB,IAEI5S,EAFAwnB,EAAIlhB,KAAKkhB,EACT++D,EAbR,SAAS1B,wBAAeD,UAAW4B,OACjC,OAAO5B,UAAU7lE,OAAOlM,MAAM,SAAStE,IAAI,SAASvO,GAClD,IAAIX,KAAO,GAAIP,EAAIkB,EAAEuM,QAAQ,KAE7B,GADIzN,GAAK,IAAGO,KAAOW,EAAEyhB,MAAM3iB,EAAI,GAAIkB,EAAIA,EAAEyhB,MAAM,EAAG3iB,IAC9CkB,IAAMwmF,MAAM3lF,eAAeb,GAAI,MAAM,IAAIgW,MAAM,iBAAmBhW,GACtE,OAAQ4B,KAAM5B,EAAGX,KAAMA,QAQfwlF,CAAejE,SAAW,GAAIp5D,GAElC1oB,GAAK,EACLyB,EAAIgmF,EAAEv+E,OAGV,KAAI0D,UAAU1D,OAAS,GAAvB,CAOA,GAAgB,MAAZ4K,UAAwC,mBAAbA,SAAyB,MAAM,IAAIoD,MAAM,qBAAuBpD,UAC/F,OAAS9T,EAAIyB,GACX,GAAIP,GAAK4gF,SAAW2F,EAAEznF,IAAI8C,KAAM4lB,EAAExnB,GAAKyY,aAAI+O,EAAExnB,GAAI4gF,SAASvhF,KAAMuT,eAC3D,GAAgB,MAAZA,SAAkB,IAAK5S,KAAKwnB,EAAGA,EAAExnB,GAAKyY,aAAI+O,EAAExnB,GAAI4gF,SAASvhF,KAAM,MAG1E,OAAOiH,KAZL,OAASxH,EAAIyB,GAAG,IAAKP,GAAK4gF,SAAW2F,EAAEznF,IAAI8C,QAAU5B,EAAIL,aAAI6nB,EAAExnB,GAAI4gF,SAASvhF,OAAQ,OAAOW,GAc/FkvC,KAAM,SAAAA,OACJ,IAAIA,QAAW1nB,EAAIlhB,KAAKkhB,EACxB,IAAK,IAAIxnB,KAAKwnB,EAAG0nB,KAAKlvC,GAAKwnB,EAAExnB,GAAGyhB,QAChC,OAAO,IAAI6kE,SAASp3C,OAEtBjwC,KAAM,SAAAA,KAAS2C,KAAMw/D,MACnB,IAAK7gE,EAAImL,UAAU1D,OAAS,GAAK,EAAG,IAAK,IAAgCzH,EAAGP,EAA/BsN,KAAO,IAAI6B,MAAM5O,GAAIzB,EAAI,EAASA,EAAIyB,IAAKzB,EAAGwO,KAAKxO,GAAK4M,UAAU5M,EAAI,GACnH,IAAKwH,KAAKkhB,EAAE3mB,eAAee,MAAO,MAAM,IAAIoU,MAAM,iBAAmBpU,MACrE,IAAuB9C,EAAI,EAAGyB,GAAzBP,EAAIsG,KAAKkhB,EAAE5lB,OAAoBoG,OAAQlJ,EAAIyB,IAAKzB,EAAGkB,EAAElB,GAAGiB,MAAM8N,MAAMuzD,KAAM9zD,OAEjFO,MAAO,SAAAA,MAASjM,KAAMw/D,KAAM9zD,MAC1B,IAAKhH,KAAKkhB,EAAE3mB,eAAee,MAAO,MAAM,IAAIoU,MAAM,iBAAmBpU,MACrE,IAAK,IAAI5B,EAAIsG,KAAKkhB,EAAE5lB,MAAO9C,EAAI,EAAGyB,EAAIP,EAAEgI,OAAQlJ,EAAIyB,IAAKzB,EAAGkB,EAAElB,GAAGiB,MAAM8N,MAAMuzD,KAAM9zD,QAuBxEw3E,mCCjFR,SAAS2B,gBACdxG,SAAMyG,2BAGO,IAAAC,QAAA,WACb1G,SAAM2G,iBACN3G,SAAMyG,4BCLOG,OAAA,SAASC,MACtB,IAAI1oF,KAAO0oF,KAAKtoD,SAASujB,gBACrB+W,UAAYvzC,WAAOuhE,MAAMpT,GAAG,iBAAkBiT,SAAS,GACvD,kBAAmBvoF,KACrB06D,UAAU4a,GAAG,mBAAoBiT,SAAS,IAE1CvoF,KAAK2oF,WAAa3oF,KAAK6hC,MAAM+mD,cAC7B5oF,KAAK6hC,MAAM+mD,cAAgB,SCVhB,IAAAC,qBAAA,SAAS5iD,GACtB,OAAO,WACL,OAAOA,ICFI,SAAS6iD,UAAUvjC,OAAQ/hD,KAAMulF,QAASnoD,GAAIooD,OAAQ/iD,EAAGv6B,EAAGgyD,GAAIC,GAAI+oB,UACjFx+E,KAAKq9C,OAASA,OACdr9C,KAAK1E,KAAOA,KACZ0E,KAAK6gF,QAAUA,QACf7gF,KAAK8/E,WAAapnD,GAClB14B,KAAK8gF,OAASA,OACd9gF,KAAK+9B,EAAIA,EACT/9B,KAAKwD,EAAIA,EACTxD,KAAKw1D,GAAKA,GACVx1D,KAAKy1D,GAAKA,GACVz1D,KAAKkhB,EAAIs9D,SCFX,SAASuC,gBACP,OAAQpH,SAAMqH,OAGhB,SAASC,mBACP,OAAOjhF,KAAKmhC,WAGd,SAAS+/C,eAAepoF,GACtB,OAAY,MAALA,GAAailC,EAAG47C,SAAM57C,EAAGv6B,EAAGm2E,SAAMn2E,GAAK1K,EAGhD,SAASqoF,mBACP,MAAO,iBAAkBnhF,KDR3B4gF,UAAUtmF,UAAU8yE,GAAK,WACvB,IAAI3zE,MAAQuG,KAAKkhB,EAAEksD,GAAG7lE,MAAMvH,KAAKkhB,EAAG9b,WACpC,OAAO3L,QAAUuG,KAAKkhB,EAAIlhB,KAAOvG,OCSpB,IAAA2nF,SAAA,WACb,IAOIC,WACAC,WACAC,YACAC,YAVA9tE,OAASqtE,cACTpoD,UAAYsoD,iBACZJ,QAAUK,eACVO,UAAYN,iBACZO,YACArxD,UAAYmuD,aAAS,QAAS,OAAQ,OACtCsC,OAAS,EAKTa,eAAiB,EAErB,SAASC,KAAKpvB,WACZA,UACK4a,GAAG,iBAAkByU,aACvBnuE,OAAO+tE,WACLrU,GAAG,kBAAmB0U,cACtB1U,GAAG,iBAAkB2U,YACrB3U,GAAG,iCAAkC4U,YACrCroD,MAAM,eAAgB,QACtBA,MAAM,8BAA+B,iBAG5C,SAASkoD,cACP,IAAIL,aAAgB9tE,OAAOnM,MAAMvH,KAAMoF,WAAvC,CACA,IAAI68E,QAAUC,YAAY,QAASvpD,UAAUpxB,MAAMvH,KAAMoF,WAAYs6E,MAAO1/E,KAAMoF,WAC7E68E,UACLhjE,WAAO06D,SAAM6G,MAAMpT,GAAG,iBAAkB+U,YAAY,GAAM/U,GAAG,eAAgBgV,YAAY,GACzF7B,OAAO5G,SAAM6G,MACbL,gBACAoB,aAAc,EACdF,WAAa1H,SAAMuF,QACnBoC,WAAa3H,SAAMwF,QACnB8C,QAAQ,WAGV,SAASE,aAEP,GADA9B,WACKkB,YAAa,CAChB,IAAI/rB,GAAKmkB,SAAMuF,QAAUmC,WAAY5rB,GAAKkkB,SAAMwF,QAAUmC,WAC1DC,YAAc/rB,GAAKA,GAAKC,GAAKA,GAAKksB,eAEpCD,SAAShC,MAAM,QAGjB,SAAS0C,aACPnjE,WAAO06D,SAAM6G,MAAMpT,GAAG,8BAA+B,MH1DlD,SAASiV,QAAQ7B,KAAM8B,SAC5B,IAAIxqF,KAAO0oF,KAAKtoD,SAASujB,gBACrB+W,UAAYvzC,WAAOuhE,MAAMpT,GAAG,iBAAkB,MAC9CkV,UACF9vB,UAAU4a,GAAG,aAAciT,SAAS,GACpC1wD,WAAW,WAAa6iC,UAAU4a,GAAG,aAAc,OAAU,IAE3D,kBAAmBt1E,KACrB06D,UAAU4a,GAAG,mBAAoB,OAEjCt1E,KAAK6hC,MAAM+mD,cAAgB5oF,KAAK2oF,kBACzB3oF,KAAK2oF,YGgDZ4B,CAAQ1I,SAAM6G,KAAMe,aACpBlB,UACAqB,SAAShC,MAAM,OAGjB,SAASoC,eACP,GAAKpuE,OAAOnM,MAAMvH,KAAMoF,WAAxB,CACA,IAEwB5M,EAAGypF,QAFvBpC,QAAUlG,SAAMgG,eAChB9mF,EAAI8/B,UAAUpxB,MAAMvH,KAAMoF,WAC1BnL,EAAI4lF,QAAQn+E,OAEhB,IAAKlJ,EAAI,EAAGA,EAAIyB,IAAKzB,GACfypF,QAAUC,YAAYrC,QAAQrnF,GAAGsnF,WAAYjnF,EAAGknF,UAAO//E,KAAMoF,cAC/D+6E,gBACA8B,QAAQ,WAKd,SAASF,aACP,IACwBvpF,EAAGypF,QADvBpC,QAAUlG,SAAMgG,eAChB1lF,EAAI4lF,QAAQn+E,OAEhB,IAAKlJ,EAAI,EAAGA,EAAIyB,IAAKzB,GACfypF,QAAUP,SAAS7B,QAAQrnF,GAAGsnF,eAChCO,UACA4B,QAAQ,SAKd,SAASD,aACP,IACwBxpF,EAAGypF,QADvBpC,QAAUlG,SAAMgG,eAChB1lF,EAAI4lF,QAAQn+E,OAIhB,IAFI8/E,aAAae,aAAaf,aAC9BA,YAAc7xD,WAAW,WAAa6xD,YAAc,MAAS,KACxDhpF,EAAI,EAAGA,EAAIyB,IAAKzB,GACfypF,QAAUP,SAAS7B,QAAQrnF,GAAGsnF,eAChCK,gBACA8B,QAAQ,QAKd,SAASC,YAAYxpD,GAAIC,UAAW2/B,MAAOwC,KAAM9zD,MAC/C,IAA8BvM,EAAG+6D,GAAIC,GAAjCj7D,EAAI89D,MAAM3/B,UAAWD,IACrB8pD,aAAenyD,UAAUuY,OAE7B,GAAKiyC,YAAY,IAAI+F,UAAUgB,KAAM,cAAennF,EAAGi+B,GAAIooD,OAAQtmF,EAAE,GAAIA,EAAE,GAAI,EAAG,EAAGgoF,cAAe,WAClG,OAAuD,OAAlD7I,SAAMkH,QAAUpmF,EAAIomF,QAAQt5E,MAAMuzD,KAAM9zD,SAC7CwuD,GAAK/6D,EAAEsjC,EAAIvjC,EAAE,IAAM,EACnBi7D,GAAKh7D,EAAE+I,EAAIhJ,EAAE,IAAM,GACZ,KAGT,OAAO,SAASynF,QAAQ3mF,MACtB,IAAYrB,EAARm6E,GAAK55E,EACT,OAAQc,MACN,IAAK,QAASomF,SAAShpD,IAAMupD,QAAShoF,EAAI6mF,SAAU,MACpD,IAAK,aAAcY,SAAShpD,MAAOooD,OACnC,IAAK,OAAQtmF,EAAI89D,MAAM3/B,UAAWD,IAAKz+B,EAAI6mF,OAE7CjG,YAAY,IAAI+F,UAAUgB,KAAMtmF,KAAMb,EAAGi+B,GAAIz+B,EAAGO,EAAE,GAAKg7D,GAAIh7D,EAAE,GAAKi7D,GAAIj7D,EAAE,GAAK45E,GAAG,GAAI55E,EAAE,GAAK45E,GAAG,GAAIoO,cAAeA,aAAaj7E,MAAOi7E,cAAelnF,KAAMw/D,KAAM9zD,QA6BpK,OAzBA46E,KAAKluE,OAAS,SAASwN,GACrB,OAAO9b,UAAU1D,QAAUgS,OAAsB,mBAANwN,EAAmBA,EAAIk3B,uBAAWl3B,GAAI0gE,MAAQluE,QAG3FkuE,KAAKjpD,UAAY,SAASzX,GACxB,OAAO9b,UAAU1D,QAAUi3B,UAAyB,mBAANzX,EAAmBA,EAAIk3B,qBAASl3B,GAAI0gE,MAAQjpD,WAG5FipD,KAAKf,QAAU,SAAS3/D,GACtB,OAAO9b,UAAU1D,QAAUm/E,QAAuB,mBAAN3/D,EAAmBA,EAAIk3B,qBAASl3B,GAAI0gE,MAAQf,SAG1Fe,KAAKH,UAAY,SAASvgE,GACxB,OAAO9b,UAAU1D,QAAU+/E,UAAyB,mBAANvgE,EAAmBA,EAAIk3B,uBAAWl3B,GAAI0gE,MAAQH,WAG9FG,KAAKxU,GAAK,WACR,IAAI3zE,MAAQ42B,UAAU+8C,GAAG7lE,MAAM8oB,UAAWjrB,WAC1C,OAAO3L,QAAU42B,UAAYuxD,KAAOnoF,OAGtCmoF,KAAKa,cAAgB,SAASvhE,GAC5B,OAAO9b,UAAU1D,QAAUigF,gBAAkBzgE,GAAKA,GAAKA,EAAG0gE,MAAQ/9E,KAAK6Q,KAAKitE,iBAGvEC,mSCrKT,IAIIc,SACAC,SALAC,YAAQ,EACRC,QAAU,EACVvhC,eAAW,EACXwhC,UAAY,IAGZC,UAAY,EACZC,SAAW,EACXC,UAAY,EACZC,MAA+B,YAAvB,oBAAOC,YAAP,YAAAC,aAAOD,eAA4BA,YAAYE,IAAMF,YAAcvjF,KAC3E0jF,SAA6B,YAAlB,oBAAOlrF,OAAP,YAAAgrF,aAAOhrF,UAAuBA,OAAOk3B,sBAAwBl3B,OAAOk3B,sBAAsBt1B,KAAK5B,QAAU,SAASyiB,GAAK8U,WAAW9U,EAAG,KAE7I,SAASwoE,MACd,OAAOL,WAAaM,SAASC,UAAWP,SAAWE,MAAMG,MAAQJ,WAGnE,SAASM,WACPP,SAAW,EAGN,SAASQ,QACdxjF,KAAKyjF,MACLzjF,KAAK0jF,MACL1jF,KAAK+3E,MAAQ,KA0BR,SAAS4L,YAAMr3E,SAAUs3E,MAAOv4B,MACrC,IAAI3xD,EAAI,IAAI8pF,MAEZ,OADA9pF,EAAEmqF,QAAQv3E,SAAUs3E,MAAOv4B,MACpB3xD,EAcT,SAASoqF,OACPd,UAAYD,UAAYG,MAAMG,OAASJ,UACvCL,YAAQC,QAAU,EAClB,KAdK,SAASkB,aACdV,QACET,YAEF,IADA,IAAkBloF,EAAdhB,EAAIgpF,SACDhpF,IACAgB,EAAIsoF,SAAWtpF,EAAEgqF,QAAU,GAAGhqF,EAAE+pF,MAAM9qF,KAAK,KAAM+B,GACtDhB,EAAIA,EAAEq+E,QAEN6K,YAOAmB,GADF,QAGEnB,YAAQ,EAWZ,SAASoB,MACP,IAAIluC,GAAmBE,GAAfD,GAAK2sC,SAAcr3B,KAAOzK,IAClC,KAAO7K,IACDA,GAAG0tC,OACDp4B,KAAOtV,GAAG2tC,QAAOr4B,KAAOtV,GAAG2tC,OAC/B5tC,GAAKC,GAAIA,GAAKA,GAAGgiC,QAEjB/hC,GAAKD,GAAGgiC,MAAOhiC,GAAGgiC,MAAQ,KAC1BhiC,GAAKD,GAAKA,GAAGiiC,MAAQ/hC,GAAK0sC,SAAW1sC,IAGzC2sC,SAAW7sC,GACXmuC,MAAM54B,MAtBJ24B,GACAhB,SAAW,GAIf,SAASkB,OACP,IAAIb,IAAMH,MAAMG,MAAOO,MAAQP,IAAMN,UACjCa,MAAQd,YAAWG,WAAaW,MAAOb,UAAYM,KAkBzD,SAASY,MAAM54B,MACTu3B,cACAC,UAASA,QAAUN,aAAaM,UACxBx3B,KAAO23B,SACP,IACN33B,KAAOzK,MAAUiiC,QAAUlzD,WAAWm0D,KAAMz4B,KAAO63B,MAAMG,MAAQJ,YACjE3hC,iBAAUA,eAAW6iC,cAAc7iC,mBAElCA,iBAAUyhC,UAAYG,MAAMG,MAAO/hC,eAAW8iC,YAAYF,KAAMpB,YACrEF,YAAQ,EAAGU,SAASQ,QAjFxBN,MAAMlpF,UAAYqpF,YAAMrpF,WACtBsrB,YAAa49D,MACbK,QAAS,SAAAA,QAASv3E,SAAUs3E,MAAOv4B,MACjC,GAAwB,mBAAb/+C,SAAyB,MAAM,IAAIyB,UAAU,8BACxDs9C,MAAgB,MAARA,KAAeg4B,OAASh4B,OAAkB,MAATu4B,MAAgB,GAAKA,OACzD5jF,KAAK+3E,OAAS4K,WAAa3iF,OAC1B2iF,SAAUA,SAAS5K,MAAQ/3E,KAC1B0iF,SAAW1iF,KAChB2iF,SAAW3iF,MAEbA,KAAKyjF,MAAQn3E,SACbtM,KAAK0jF,MAAQr4B,KACb44B,SAEFh+C,KAAM,SAAAA,OACAjmC,KAAKyjF,QACPzjF,KAAKyjF,MAAQ,KACbzjF,KAAK0jF,MAAQ9iC,IACbqjC,WC1CS,IAAAI,YAAA,SAAS/3E,SAAUs3E,MAAOv4B,MACvC,IAAI3xD,EAAI,IAAI8pF,MAMZ,OALAI,MAAiB,MAATA,MAAgB,GAAKA,MAC7BlqF,EAAEmqF,QAAQ,SAASS,SACjB5qF,EAAEusC,OACF35B,SAASg4E,QAAUV,QAClBA,MAAOv4B,MACH3xD,GCNL6qF,QAAU/F,aAAS,QAAS,MAAO,aACnCgG,cAEOC,QAAU,EACVC,UAAY,EACZC,SAAW,EACXC,QAAU,EACVC,QAAU,EACVC,OAAS,EACTC,MAAQ,EAEJC,oBAAA,SAASv0D,KAAM13B,KAAM2/B,GAAIz2B,MAAO09C,MAAOslC,QACpD,IAAIC,UAAYz0D,KAAK00D,aACrB,GAAKD,WACA,GAAIxsD,MAAMwsD,UAAW,YADVz0D,KAAK00D,iBAmCvB,SAASrrF,gBAAO22B,KAAMiI,GAAI0sD,MACxB,IACIC,MADAH,UAAYz0D,KAAK00D,aAgBrB,SAASjnF,MAAMomF,SACb,IAAI9rF,EAAG0iB,EAAGjhB,EAAGhB,EAGb,GAAImsF,KAAKE,QAAUZ,UAAW,OAAOz+C,OAErC,IAAKztC,KAAK0sF,UAER,IADAjsF,EAAIisF,UAAU1sF,IACRO,OAASqsF,KAAKrsF,KAApB,CAKA,GAAIE,EAAEqsF,QAAUV,QAAS,OAAO/B,YAAQ3kF,OAIpCjF,EAAEqsF,QAAUT,SACd5rF,EAAEqsF,MAAQP,MACV9rF,EAAE0qF,MAAM19C,OACRhtC,EAAEm0E,GAAGz0E,KAAK,YAAa83B,KAAMA,KAAKunD,SAAU/+E,EAAEgJ,MAAOhJ,EAAE0mD,cAChDulC,UAAU1sF,KAMTA,EAAIkgC,KACZz/B,EAAEqsF,MAAQP,MACV9rF,EAAE0qF,MAAM19C,cACDi/C,UAAU1sF,IAoBrB,GAZAqqF,YAAQ,WACFuC,KAAKE,QAAUV,UACjBQ,KAAKE,MAAQT,QACbO,KAAKzB,MAAME,QAAQnxB,KAAM0yB,KAAKxB,MAAOwB,KAAK/5B,MAC1CqH,KAAK4xB,YAMTc,KAAKE,MAAQX,SACbS,KAAKhY,GAAGz0E,KAAK,QAAS83B,KAAMA,KAAKunD,SAAUoN,KAAKnjF,MAAOmjF,KAAKzlC,OACxDylC,KAAKE,QAAUX,SAAnB,CAKA,IAJAS,KAAKE,MAAQV,QAGbS,MAAQ,IAAIx8E,MAAM5O,EAAImrF,KAAKC,MAAM3jF,QAC5BlJ,EAAI,EAAG0iB,GAAK,EAAG1iB,EAAIyB,IAAKzB,GACvBS,EAAImsF,KAAKC,MAAM7sF,GAAGiB,MAAMd,KAAK83B,KAAMA,KAAKunD,SAAUoN,KAAKnjF,MAAOmjF,KAAKzlC,UACrE0lC,QAAQnqE,GAAKjiB,GAGjBosF,MAAM3jF,OAASwZ,EAAI,GAGrB,SAASw3C,KAAK4xB,SAKZ,IAJA,IAAI5qF,EAAI4qF,QAAUc,KAAKG,SAAWH,KAAKI,KAAK7sF,KAAK,KAAM2rF,QAAUc,KAAKG,WAAaH,KAAKzB,MAAME,QAAQ59C,MAAOm/C,KAAKE,MAAQR,OAAQ,GAC9HtsF,GAAK,EACLyB,EAAIorF,MAAM3jF,SAELlJ,EAAIyB,GACXorF,MAAM7sF,GAAGG,KAAK,KAAMe,GAIlB0rF,KAAKE,QAAUR,SACjBM,KAAKhY,GAAGz0E,KAAK,MAAO83B,KAAMA,KAAKunD,SAAUoN,KAAKnjF,MAAOmjF,KAAKzlC,OAC1D1Z,QAIJ,SAASA,OAIP,IAAK,IAAIztC,KAHT4sF,KAAKE,MAAQP,MACbK,KAAKzB,MAAM19C,cACJi/C,UAAUxsD,IACHwsD,UAAW,cAClBz0D,KAAK00D,aA/FdD,UAAUxsD,IAAM0sD,KAChBA,KAAKzB,MAAQA,YAEb,SAAS8B,SAASnB,SAChBc,KAAKE,MAAQZ,UACbU,KAAKzB,MAAME,QAAQ3lF,MAAOknF,KAAKxB,MAAOwB,KAAK/5B,MAGvC+5B,KAAKxB,OAASU,SAASpmF,MAAMomF,QAAUc,KAAKxB,QAPrB,EAAGwB,KAAK/5B,MAxCrCvxD,CAAO22B,KAAMiI,IACX3/B,KAAMA,KACNkJ,MAAOA,MACP09C,MAAOA,MACPytB,GAAImX,QACJc,MAAOb,WACPn5B,KAAM45B,OAAO55B,KACbu4B,MAAOqB,OAAOrB,MACd2B,SAAUN,OAAOM,SACjBC,KAAMP,OAAOO,KACb7B,MAAO,KACP2B,MAAOb,WAIJ,SAASzsD,KAAKvH,KAAMiI,IACzB,IAAI+sD,SAAWpsF,aAAIo3B,KAAMiI,IACzB,GAAI+sD,SAASH,MAAQb,QAAS,MAAM,IAAI/0E,MAAM,+BAC9C,OAAO+1E,SAGF,SAAStzE,aAAIse,KAAMiI,IACxB,IAAI+sD,SAAWpsF,aAAIo3B,KAAMiI,IACzB,GAAI+sD,SAASH,MAAQX,SAAU,MAAM,IAAIj1E,MAAM,6BAC/C,OAAO+1E,SAGF,SAASpsF,aAAIo3B,KAAMiI,IACxB,IAAI+sD,SAAWh1D,KAAK00D,aACpB,IAAKM,YAAcA,SAAWA,SAAS/sD,KAAM,MAAM,IAAIhpB,MAAM,wBAC7D,OAAO+1E,SCqBF,SAASC,WAAWxyB,WAAYn6D,KAAMU,OAC3C,IAAIi/B,GAAKw6B,WAAWyyB,IAOpB,OALAzyB,WAAW/rB,KAAK,WACd,IAAIs+C,SAAWtzE,aAAInS,KAAM04B,KACxB+sD,SAAShsF,QAAUgsF,SAAShsF,WAAaV,MAAQU,MAAM8N,MAAMvH,KAAMoF,aAG/D,SAASqrB,MACd,OAAOp3B,aAAIo3B,KAAMiI,IAAIj/B,MAAMV,OC3EhB,IAAA6sF,uBAAA,SAAShrF,EAAGwI,GACzB,IAAIvK,EACJ,OAAqB,iBAANuK,EAAiBssE,WAC1BtsE,aAAagxC,YAAQyxC,SACpBhtF,EAAIu7C,YAAMhxC,KAAOA,EAAIvK,EAAGgtF,SACzBC,YAAmBlrF,EAAGwI,ICAf,ICNXokE,+BAAYhV,cAAUl4D,UAAUsrB,YCarB,ICIX8S,cAAK,EAEF,SAASqtD,WAAWzK,OAAQC,QAASxiF,KAAM2/B,IAChD14B,KAAKw7E,QAAUF,OACft7E,KAAKy7E,SAAWF,QAChBv7E,KAAKgmF,MAAQjtF,KACbiH,KAAK2lF,IAAMjtD,GAON,SAASutD,QACd,QAASvtD,cAGX,IAAIwtD,oBAAsB1zB,cAAUl4D,UAEpCyrF,WAAWzrF,UAVI,SAAS44D,0BAAWn6D,MACjC,OAAOy5D,gBAAYU,WAAWn6D,OASEuB,WAChCsrB,YAAamgE,WACb9mE,OCpCa,SAASA,QACtB,IAAIlmB,KAAOiH,KAAKgmF,MACZttD,GAAK14B,KAAK2lF,IAEQ,mBAAX1mE,SAAuBA,OAASg4D,aAASh4D,SAEpD,IAAK,IAAIq8D,OAASt7E,KAAKw7E,QAAS5iF,EAAI0iF,OAAO55E,OAAQg6E,UAAY,IAAI7yE,MAAMjQ,GAAIsiB,EAAI,EAAGA,EAAItiB,IAAKsiB,EAC3F,IAAK,IAAiFuV,KAAMkrD,QAAnFh8B,MAAQ27B,OAAOpgE,GAAIjhB,EAAI0lD,MAAMj+C,OAAQk6E,SAAWF,UAAUxgE,GAAK,IAAIrS,MAAM5O,GAAmBzB,EAAI,EAAGA,EAAIyB,IAAKzB,GAC9Gi4B,KAAOkvB,MAAMnnD,MAAQmjF,QAAU18D,OAAOtmB,KAAK83B,KAAMA,KAAKunD,SAAUx/E,EAAGmnD,UAClE,aAAclvB,OAAMkrD,QAAQ3D,SAAWvnD,KAAKunD,UAChD4D,SAASpjF,GAAKmjF,QACd8J,oBAAS7J,SAASpjF,GAAIO,KAAM2/B,GAAIlgC,EAAGojF,SAAUviF,aAAIo3B,KAAMiI,MAK7D,OAAO,IAAIqtD,WAAWrK,UAAW17E,KAAKy7E,SAAU1iF,KAAM2/B,KDqBtD+5B,UErCa,SAASxzC,QACtB,IAAIlmB,KAAOiH,KAAKgmF,MACZttD,GAAK14B,KAAK2lF,IAEQ,mBAAX1mE,SAAuBA,OAASk4D,YAAYl4D,SAEvD,IAAK,IAAIq8D,OAASt7E,KAAKw7E,QAAS5iF,EAAI0iF,OAAO55E,OAAQg6E,aAAgBH,WAAcrgE,EAAI,EAAGA,EAAItiB,IAAKsiB,EAC/F,IAAK,IAAyCuV,KAArCkvB,MAAQ27B,OAAOpgE,GAAIjhB,EAAI0lD,MAAMj+C,OAAclJ,EAAI,EAAGA,EAAIyB,IAAKzB,EAClE,GAAIi4B,KAAOkvB,MAAMnnD,GAAI,CACnB,IAAK,IAA2D6pB,MAAvDqV,SAAWzY,OAAOtmB,KAAK83B,KAAMA,KAAKunD,SAAUx/E,EAAGmnD,OAAewmC,QAAU9sF,aAAIo3B,KAAMiI,IAAK4P,EAAI,EAAG7vC,EAAIi/B,SAASh2B,OAAQ4mC,EAAI7vC,IAAK6vC,GAC/HjmB,MAAQqV,SAAS4Q,KACnBm9C,oBAASpjE,MAAOtpB,KAAM2/B,GAAI4P,EAAG5Q,SAAUyuD,SAG3CzK,UAAUx1E,KAAKwxB,UACf6jD,QAAQr1E,KAAKuqB,MAKnB,OAAO,IAAIs1D,WAAWrK,UAAWH,QAASxiF,KAAM2/B,KFkBhDhlB,OGvCa,SAASrL,OACD,mBAAVA,QAAsBA,MAAQgvE,YAAQhvE,QAEjD,IAAK,IAAIizE,OAASt7E,KAAKw7E,QAAS5iF,EAAI0iF,OAAO55E,OAAQg6E,UAAY,IAAI7yE,MAAMjQ,GAAIsiB,EAAI,EAAGA,EAAItiB,IAAKsiB,EAC3F,IAAK,IAAuEuV,KAAnEkvB,MAAQ27B,OAAOpgE,GAAIjhB,EAAI0lD,MAAMj+C,OAAQk6E,SAAWF,UAAUxgE,MAAe1iB,EAAI,EAAGA,EAAIyB,IAAKzB,GAC3Fi4B,KAAOkvB,MAAMnnD,KAAO6P,MAAM1P,KAAK83B,KAAMA,KAAKunD,SAAUx/E,EAAGmnD,QAC1Di8B,SAAS11E,KAAKuqB,MAKpB,OAAO,IAAIs1D,WAAWrK,UAAW17E,KAAKy7E,SAAUz7E,KAAKgmF,MAAOhmF,KAAK2lF,MH6BjE97E,MIzCa,SAASqpD,YACtB,GAAIA,WAAWyyB,MAAQ3lF,KAAK2lF,IAAK,MAAM,IAAIj2E,MAE3C,IAAK,IAAIusE,QAAUj8E,KAAKw7E,QAASU,QAAUhpB,WAAWsoB,QAASW,GAAKF,QAAQv6E,OAAQyzC,GAAK+mC,QAAQx6E,OAAQ9I,EAAIiL,KAAKsQ,IAAIgoE,GAAIhnC,IAAKinC,OAAS,IAAIvzE,MAAMszE,IAAKjhE,EAAI,EAAGA,EAAItiB,IAAKsiB,EACrK,IAAK,IAAmGuV,KAA/F4rD,OAASJ,QAAQ/gE,GAAIohE,OAASJ,QAAQhhE,GAAIjhB,EAAIoiF,OAAO36E,OAAQmI,MAAQuyE,OAAOlhE,GAAK,IAAIrS,MAAM5O,GAAUzB,EAAI,EAAGA,EAAIyB,IAAKzB,GACxHi4B,KAAO4rD,OAAO7jF,IAAM8jF,OAAO9jF,MAC7BqR,MAAMrR,GAAKi4B,MAKjB,KAAOvV,EAAIihE,KAAMjhE,EACfkhE,OAAOlhE,GAAK+gE,QAAQ/gE,GAGtB,OAAO,IAAI6qE,WAAW3J,OAAQp8E,KAAKy7E,SAAUz7E,KAAKgmF,MAAOhmF,KAAK2lF,MJ2B9DnzB,UFxCa,WACb,OAAO,IAAIgV,+BAAUxnE,KAAKw7E,QAASx7E,KAAKy7E,WEwCxCvoB,WK1Ca,WAKb,IAJA,IAAIn6D,KAAOiH,KAAKgmF,MACZI,IAAMpmF,KAAK2lF,IACXU,IAAMJ,QAED3K,OAASt7E,KAAKw7E,QAAS5iF,EAAI0iF,OAAO55E,OAAQwZ,EAAI,EAAGA,EAAItiB,IAAKsiB,EACjE,IAAK,IAAyCuV,KAArCkvB,MAAQ27B,OAAOpgE,GAAIjhB,EAAI0lD,MAAMj+C,OAAclJ,EAAI,EAAGA,EAAIyB,IAAKzB,EAClE,GAAIi4B,KAAOkvB,MAAMnnD,GAAI,CACnB,IAAI2tF,QAAU9sF,aAAIo3B,KAAM21D,KACxBX,oBAASh1D,KAAM13B,KAAMstF,IAAK7tF,EAAGmnD,OAC3B0L,KAAM86B,QAAQ96B,KAAO86B,QAAQvC,MAAQuC,QAAQZ,SAC7C3B,MAAO,EACP2B,SAAUY,QAAQZ,SAClBC,KAAMW,QAAQX,OAMtB,OAAO,IAAIO,WAAWzK,OAAQt7E,KAAKy7E,SAAU1iF,KAAMstF,MLwBnD1tF,KAAMutF,oBAAoBvtF,KAC1Bm6B,MAAOozD,oBAAoBpzD,MAC3BrC,KAAMy1D,oBAAoBz1D,KAC1B6J,KAAM4rD,oBAAoB5rD,KAC1BgN,MAAO4+C,oBAAoB5+C,MAC3BH,KAAM++C,oBAAoB/+C,KAC1BimC,GM3Ba,SAASr0E,KAAMi4E,UAC5B,IAAIt4C,GAAK14B,KAAK2lF,IAEd,OAAOvgF,UAAU1D,OAAS,EACpBrI,aAAI2G,KAAKywB,OAAQiI,IAAI00C,GAAGA,GAAGr0E,MAC3BiH,KAAKmnC,KApBb,SAASm/C,WAAW5tD,GAAI3/B,KAAMi4E,UAC5B,IAAIuV,IAAKC,IAAKC,IAThB,SAASvoF,SAAMnF,MACb,OAAQA,KAAO,IAAI0f,OAAOlM,MAAM,SAASsS,MAAM,SAASnlB,GACtD,IAAIlB,EAAIkB,EAAEuM,QAAQ,KAElB,OADIzN,GAAK,IAAGkB,EAAIA,EAAEyhB,MAAM,EAAG3iB,KACnBkB,GAAW,UAANA,IAKKwE,CAAMnF,MAAQi/B,KAAO7lB,aACzC,OAAO,WACL,IAAIszE,SAAWgB,IAAIzmF,KAAM04B,IACrB00C,GAAKqY,SAASrY,GAKdA,KAAOmZ,MAAMC,KAAOD,IAAMnZ,IAAIxkC,QAAQwkC,GAAGr0E,KAAMi4E,UAEnDyU,SAASrY,GAAKoZ,KASAF,CAAW5tD,GAAI3/B,KAAMi4E,YNuBrCje,KOca,SAASh6D,KAAMU,OAC5B,IAAIi9E,SAAW7J,cAAU9zE,MAAOP,EAAiB,cAAbk+E,SAA2B57B,wBAAuB6B,uBACtF,OAAO38C,KAAK0mF,UAAU3tF,KAAuB,mBAAVU,OAC5Bi9E,SAAS9F,MAjBlB,SAASmM,oBAAerG,SAAU/5B,YAAaljD,OAC7C,IAAIktF,QACAC,QACAC,aACJ,OAAO,WACL,IAAI3/C,OAAQ4/C,OAASrtF,MAAMuG,MAC3B,GAAc,MAAV8mF,OAEJ,OADA5/C,OAASlnC,KAAK08E,eAAehG,SAASF,MAAOE,SAAS9F,UACpCkW,OAAS,KACrB5/C,SAAWy/C,SAAWG,SAAWF,QAAUC,aAC3CA,aAAelqC,YAAYgqC,QAAUz/C,OAAQ0/C,QAAUE,QAJ7B9mF,KAAK48E,kBAAkBlG,SAASF,MAAOE,SAAS9F,SApBpF,SAASoM,kBAAajkF,KAAM4jD,YAAaljD,OACvC,IAAIktF,QACAC,QACAC,aACJ,OAAO,WACL,IAAI3/C,OAAQ4/C,OAASrtF,MAAMuG,MAC3B,GAAc,MAAV8mF,OAEJ,OADA5/C,OAASlnC,KAAKmzD,aAAap6D,SACT+tF,OAAS,KACrB5/C,SAAWy/C,SAAWG,SAAWF,QAAUC,aAC3CA,aAAelqC,YAAYgqC,QAAUz/C,OAAQ0/C,QAAUE,QAJ7B9mF,KAAK88E,gBAAgB/jF,SAyBA29E,SAAUl+E,EAAGktF,WAAW1lF,KAAM,QAAUjH,KAAMU,QACtF,MAATA,OAAiBi9E,SAAS9F,MA5DlC,SAAS+L,kBAAajG,UACpB,OAAO,WACL12E,KAAK48E,kBAAkBlG,SAASF,MAAOE,SAAS9F,SARpD,SAASiM,gBAAW9jF,MAClB,OAAO,WACLiH,KAAK88E,gBAAgB/jF,SAgE4C29E,WAC5DA,SAAS9F,MA5ClB,SAASqM,oBAAevG,SAAU/5B,YAAamqC,QAC7C,IAAIH,QACAE,aACJ,OAAO,WACL,IAAI3/C,OAASlnC,KAAK08E,eAAehG,SAASF,MAAOE,SAAS9F,OAC1D,OAAO1pC,SAAW4/C,OAAS,KACrB5/C,SAAWy/C,QAAUE,aACrBA,aAAelqC,YAAYgqC,QAAUz/C,OAAQ4/C,UAlBvD,SAAS5J,kBAAankF,KAAM4jD,YAAamqC,QACvC,IAAIH,QACAE,aACJ,OAAO,WACL,IAAI3/C,OAASlnC,KAAKmzD,aAAap6D,MAC/B,OAAOmuC,SAAW4/C,OAAS,KACrB5/C,SAAWy/C,QAAUE,aACrBA,aAAelqC,YAAYgqC,QAAUz/C,OAAQ4/C,WAgDEpQ,SAAUl+E,EAAGiB,MAAQ,MPlB5EitF,UQ9Ba,SAAS3tF,KAAMU,OAC5B,IAAIM,IAAM,QAAUhB,KACpB,GAAIqM,UAAU1D,OAAS,EAAG,OAAQ3H,IAAMiG,KAAKqlF,MAAMtrF,OAASA,IAAIoS,OAChE,GAAa,MAAT1S,MAAe,OAAOuG,KAAKqlF,MAAMtrF,IAAK,MAC1C,GAAqB,mBAAVN,MAAsB,MAAM,IAAIiW,MAC3C,IAAIgnE,SAAW7J,cAAU9zE,MACzB,OAAOiH,KAAKqlF,MAAMtrF,KAAM28E,SAAS9F,MA5BnC,SAASmW,YAAYrQ,SAAUj9E,OAC7B,SAAS4rF,QACP,IAAI50D,KAAOzwB,KAAMxH,EAAIiB,MAAM8N,MAAMkpB,KAAMrrB,WACvC,OAAO5M,GAAK,SAASkB,GACnB+2B,KAAKiU,eAAegyC,SAASF,MAAOE,SAAS9F,MAAOp4E,EAAEkB,KAI1D,OADA2rF,MAAMl5E,OAAS1S,MACR4rF,OAGT,SAASqB,UAAU3tF,KAAMU,OACvB,SAAS4rF,QACP,IAAI50D,KAAOzwB,KAAMxH,EAAIiB,MAAM8N,MAAMkpB,KAAMrrB,WACvC,OAAO5M,GAAK,SAASkB,GACnB+2B,KAAKkT,aAAa5qC,KAAMP,EAAEkB,KAI9B,OADA2rF,MAAMl5E,OAAS1S,MACR4rF,QAS2D3O,SAAUj9E,SRyB5EkgC,MSNa,SAAS5gC,KAAMU,MAAO0jF,UACnC,IAAI3kF,EAAqB,cAAhBO,MAAQ,IAAsB+hD,wBAAuB6B,uBAC9D,OAAgB,MAATljD,MAAgBuG,KACdgnF,WAAWjuF,KA/CtB,SAASqkF,kBAAYrkF,KAAM4jD,aACzB,IAAIgqC,QACAC,QACAC,aACJ,OAAO,WACL,IAAI3/C,OAASvN,WAAM35B,KAAMjH,MACrB+tF,QAAU9mF,KAAK25B,MAAM0jD,eAAetkF,MAAO4gC,WAAM35B,KAAMjH,OAC3D,OAAOmuC,SAAW4/C,OAAS,KACrB5/C,SAAWy/C,SAAWG,SAAWF,QAAUC,aAC3CA,aAAelqC,YAAYgqC,QAAUz/C,OAAQ0/C,QAAUE,SAsCrC1J,CAAYrkF,KAAMP,IACnC40E,GAAG,aAAer0E,KAnC7B,SAASkuF,eAAeluF,MACtB,OAAO,WACLiH,KAAK25B,MAAM0jD,eAAetkF,OAiCKkuF,CAAeluF,OAC1CiH,KAAKgnF,WAAWjuF,KAAuB,mBAAVU,MAnBrC,SAAS6jF,oBAAcvkF,KAAM4jD,YAAaljD,OACxC,IAAIktF,QACAC,QACAC,aACJ,OAAO,WACL,IAAI3/C,OAASvN,WAAM35B,KAAMjH,MACrB+tF,OAASrtF,MAAMuG,MAEnB,OADc,MAAV8mF,SAA0B9mF,KAAK25B,MAAM0jD,eAAetkF,MAApC+tF,OAA2CntD,WAAM35B,KAAMjH,OACpEmuC,SAAW4/C,OAAS,KACrB5/C,SAAWy/C,SAAWG,SAAWF,QAAUC,aAC3CA,aAAelqC,YAAYgqC,QAAUz/C,OAAQ0/C,QAAUE,SAUrDxJ,CAAcvkF,KAAMP,EAAGktF,WAAW1lF,KAAM,SAAWjH,KAAMU,QA/BrE,SAAS+jF,oBAAczkF,KAAM4jD,YAAamqC,QACxC,IAAIH,QACAE,aACJ,OAAO,WACL,IAAI3/C,OAASvN,WAAM35B,KAAMjH,MACzB,OAAOmuC,SAAW4/C,OAAS,KACrB5/C,SAAWy/C,QAAUE,aACrBA,aAAelqC,YAAYgqC,QAAUz/C,OAAQ4/C,SAyB3CtJ,CAAczkF,KAAMP,EAAGiB,MAAQ,IAAK0jF,WTA9C6J,WU7Ca,SAASjuF,KAAMU,MAAO0jF,UACnC,IAAIpjF,IAAM,UAAYhB,MAAQ,IAC9B,GAAIqM,UAAU1D,OAAS,EAAG,OAAQ3H,IAAMiG,KAAKqlF,MAAMtrF,OAASA,IAAIoS,OAChE,GAAa,MAAT1S,MAAe,OAAOuG,KAAKqlF,MAAMtrF,IAAK,MAC1C,GAAqB,mBAAVN,MAAsB,MAAM,IAAIiW,MAC3C,OAAO1P,KAAKqlF,MAAMtrF,IAhBpB,SAASitF,WAAWjuF,KAAMU,MAAO0jF,UAC/B,SAASkI,QACP,IAAI50D,KAAOzwB,KAAMxH,EAAIiB,MAAM8N,MAAMkpB,KAAMrrB,WACvC,OAAO5M,GAAK,SAASkB,GACnB+2B,KAAKkJ,MAAM4jD,YAAYxkF,KAAMP,EAAEkB,GAAIyjF,WAIvC,OADAkI,MAAMl5E,OAAS1S,MACR4rF,MAQgB2B,CAAWjuF,KAAMU,MAAmB,MAAZ0jF,SAAmB,GAAKA,YVyCvE98E,KD1Ca,SAAS5G,OACtB,OAAOuG,KAAKqlF,MAAM,OAAyB,mBAAV5rF,MARnC,SAASukF,kBAAavkF,OACpB,OAAO,WACL,IAAIqtF,OAASrtF,MAAMuG,MACnBA,KAAKg8B,YAAwB,MAAV8qD,OAAiB,GAAKA,QAMrC9I,CAAa0H,WAAW1lF,KAAM,OAAQvG,QAf9C,SAASwkF,kBAAaxkF,OACpB,OAAO,WACLuG,KAAKg8B,YAAcviC,OAcfwkF,CAAsB,MAATxkF,MAAgB,GAAKA,MAAQ,MCwChD2tC,OHlDa,WACb,OAAOpnC,KAAKotE,GAAG,aATjB,SAAS8Z,eAAexuD,IACtB,OAAO,WACL,IAAIpS,OAAStmB,KAAKmhC,WAClB,IAAK,IAAI3oC,KAAKwH,KAAKmlF,aAAc,IAAK3sF,IAAMkgC,GAAI,OAC5CpS,QAAQA,OAAOH,YAAYnmB,OAKJknF,CAAelnF,KAAK2lF,OGkDjDN,MLRa,SAAStsF,KAAMU,OAC5B,IAAIi/B,GAAK14B,KAAK2lF,IAId,GAFA5sF,MAAQ,GAEJqM,UAAU1D,OAAS,EAAG,CAExB,IADA,IACkChI,EAD9B2rF,MAAQhsF,aAAI2G,KAAKywB,OAAQiI,IAAI2sD,MACxB7sF,EAAI,EAAGyB,EAAIorF,MAAM3jF,OAAWlJ,EAAIyB,IAAKzB,EAC5C,IAAKkB,EAAI2rF,MAAM7sF,IAAIO,OAASA,KAC1B,OAAOW,EAAED,MAGb,OAAO,KAGT,OAAOuG,KAAKmnC,MAAe,MAAT1tC,MAhEpB,SAAS0tF,YAAYzuD,GAAI3/B,MACvB,IAAIquF,OAAQC,OACZ,OAAO,WACL,IAAI5B,SAAWtzE,aAAInS,KAAM04B,IACrB2sD,MAAQI,SAASJ,MAKrB,GAAIA,QAAU+B,OAEZ,IAAK,IAAI5uF,EAAI,EAAGyB,GADhBotF,OAASD,OAAS/B,OACS3jF,OAAQlJ,EAAIyB,IAAKzB,EAC1C,GAAI6uF,OAAO7uF,GAAGO,OAASA,KAAM,EAC3BsuF,OAASA,OAAOlsE,SACT7T,OAAO9O,EAAG,GACjB,MAKNitF,SAASJ,MAAQgC,SAIrB,SAASC,cAAc5uD,GAAI3/B,KAAMU,OAC/B,IAAI2tF,OAAQC,OACZ,GAAqB,mBAAV5tF,MAAsB,MAAM,IAAIiW,MAC3C,OAAO,WACL,IAAI+1E,SAAWtzE,aAAInS,KAAM04B,IACrB2sD,MAAQI,SAASJ,MAKrB,GAAIA,QAAU+B,OAAQ,CACpBC,QAAUD,OAAS/B,OAAOlqE,QAC1B,IAAK,IAAIzhB,GAAKX,KAAMA,KAAMU,MAAOA,OAAQjB,EAAI,EAAGyB,EAAIotF,OAAO3lF,OAAQlJ,EAAIyB,IAAKzB,EAC1E,GAAI6uF,OAAO7uF,GAAGO,OAASA,KAAM,CAC3BsuF,OAAO7uF,GAAKkB,EACZ,MAGAlB,IAAMyB,GAAGotF,OAAOnhF,KAAKxM,GAG3B+rF,SAASJ,MAAQgC,UAmB4C3uD,GAAI3/B,KAAMU,SKNzEmqF,MW9Ca,SAASnqF,OACtB,IAAIi/B,GAAK14B,KAAK2lF,IAEd,OAAOvgF,UAAU1D,OACX1B,KAAKmnC,MAAuB,mBAAV1tC,MAhB1B,SAAS8tF,cAAc7uD,GAAIj/B,OACzB,OAAO,WACLu+B,KAAKh4B,KAAM04B,IAAIkrD,OAASnqF,MAAM8N,MAAMvH,KAAMoF,aAI9C,SAASoiF,cAAc9uD,GAAIj/B,OACzB,OAAOA,OAASA,MAAO,WACrBu+B,KAAKh4B,KAAM04B,IAAIkrD,MAAQnqF,SAUAi/B,GAAIj/B,QACvBJ,aAAI2G,KAAKywB,OAAQiI,IAAIkrD,OXwC3B2B,SY/Ca,SAAS9rF,OACtB,IAAIi/B,GAAK14B,KAAK2lF,IAEd,OAAOvgF,UAAU1D,OACX1B,KAAKmnC,MAAuB,mBAAV1tC,MAhB1B,SAASguF,iBAAiB/uD,GAAIj/B,OAC5B,OAAO,WACL0Y,aAAInS,KAAM04B,IAAI6sD,UAAY9rF,MAAM8N,MAAMvH,KAAMoF,aAIhD,SAASsiF,iBAAiBhvD,GAAIj/B,OAC5B,OAAOA,OAASA,MAAO,WACrB0Y,aAAInS,KAAM04B,IAAI6sD,SAAW9rF,SAUCi/B,GAAIj/B,QAC1BJ,aAAI2G,KAAKywB,OAAQiI,IAAI6sD,UZyC3BC,KarDa,SAAS/rF,OACtB,IAAIi/B,GAAK14B,KAAK2lF,IAEd,OAAOvgF,UAAU1D,OACX1B,KAAKmnC,KAXb,SAASwgD,aAAajvD,GAAIj/B,OACxB,GAAqB,mBAAVA,MAAsB,MAAM,IAAIiW,MAC3C,OAAO,WACLyC,aAAInS,KAAM04B,IAAI8sD,KAAO/rF,OAQPkuF,CAAajvD,GAAIj/B,QAC3BJ,aAAI2G,KAAKywB,OAAQiI,IAAI8sD,OCT7B,IAAIoC,eACFv8B,KAAM,KACNu4B,MAAO,EACP2B,SAAU,IACVC,KAAMqC,YAGR,SAAS1B,mBAAQ11D,KAAMiI,IAErB,IADA,IAAIusD,SACKA,OAASx0D,KAAK00D,iBAAmBF,OAASA,OAAOvsD,MACxD,KAAMjI,KAAOA,KAAK0Q,YAChB,OAAOymD,cAAcv8B,KAAOg4B,MAAOuE,cAGvC,OAAO3C,OCfTzyB,cAAUl4D,UAAUwtF,UCFL,SAAS/uF,MACtB,OAAOiH,KAAKmnC,KAAK,YCDJ,SAAS1W,KAAM13B,MAC5B,IACI0sF,SACA3E,OAEAtoF,EAJA0sF,UAAYz0D,KAAK00D,aAGjB79C,OAAQ,EAGZ,GAAK49C,UAAL,CAIA,IAAK1sF,KAFLO,KAAe,MAARA,KAAe,KAAOA,KAAO,GAE1BmsF,WACHO,SAAWP,UAAU1sF,IAAIO,OAASA,MACvC+nF,OAAS2E,SAASH,MAAQX,UAAYc,SAASH,MAAQR,OACvDW,SAASH,MAAQP,MACjBU,SAAS9B,MAAM19C,OACX66C,QAAQ2E,SAASrY,GAAGz0E,KAAK,YAAa83B,KAAMA,KAAKunD,SAAUyN,SAASxjF,MAAOwjF,SAAS9lC,cACjFulC,UAAU1sF,IAL8B8uC,OAAQ,EAQrDA,cAAc7W,KAAK00D,cDlBrB2C,CAAU9nF,KAAMjH,SDCpBy5D,cAAUl4D,UAAU44D,WDiBL,SAASn6D,MACtB,IAAI2/B,GACAusD,OAEAlsF,gBAAgBgtF,YAClBrtD,GAAK3/B,KAAK4sF,IAAK5sF,KAAOA,KAAKitF,QAE3BttD,GAAKutD,SAAUhB,OAAS2C,eAAev8B,KAAOg4B,MAAOtqF,KAAe,MAARA,KAAe,KAAOA,KAAO,IAG3F,IAAK,IAAIuiF,OAASt7E,KAAKw7E,QAAS5iF,EAAI0iF,OAAO55E,OAAQwZ,EAAI,EAAGA,EAAItiB,IAAKsiB,EACjE,IAAK,IAAyCuV,KAArCkvB,MAAQ27B,OAAOpgE,GAAIjhB,EAAI0lD,MAAMj+C,OAAclJ,EAAI,EAAGA,EAAIyB,IAAKzB,GAC9Di4B,KAAOkvB,MAAMnnD,KACfitF,oBAASh1D,KAAM13B,KAAM2/B,GAAIlgC,EAAGmnD,MAAOslC,QAAUkB,mBAAQ11D,KAAMiI,KAKjE,OAAO,IAAIqtD,WAAWzK,OAAQt7E,KAAKy7E,SAAU1iF,KAAM2/B,oTI7BrD,IAAMqvD,6BAAgB,SAAhBA,cAAgBxQ,SAAO,OAAIt4D,WAAOs4D,UAUlCyQ,YAAc,SAAdA,YAAe1hE,OAAQ2hE,SAAUj9E,KAAMisE,UAAoC,IAA1BiR,UAA0B9iF,UAAA1D,OAAA,QAAA6L,IAAAnI,UAAA,GAAAA,UAAA,MAAV+iF,MAAU/iF,UAAA1D,OAAA,EAAA0D,UAAA,QAAAmI,GACxE+Y,kBAAkBqiD,aAAeriD,kBAAkB8hE,cACpD9hE,OAASyhE,6BAAczhE,SAG3B,IAMI5S,OANE20E,YAAcpR,SAAWA,SAAS,GAAK,KACzCqR,aAAe,KACfC,eAAiB,KACjBhR,QAAU,KACViR,SAAW,KACXC,SAAW,KAEXJ,YACoB,MAAhBA,aACAC,aAAe,KACfC,eAAiBtR,WAEjBqR,aAAe,QACfC,eAAiC,MAAhBtR,SAAS,GAAaA,SAAtB,IAAAv7D,OAAqCu7D,YAG1DsR,eAAiBN,SACjBv0E,QAAS,GAEb6jE,QAAUjxD,OAAOmsC,UAAU81B,gBAE3B70E,SAAW6jE,QAAUA,QAAQ7jE,OAAO,WAChC,OAAO1T,KAAKmhC,aAAe7a,OAAOmK,UAItC+3D,UAFAjR,QAAUA,QAAQvsE,KAAKA,KAAMm9E,QAEVr1B,QACMj+B,OAAOozD,UAAY,OAC5CC,UAAUp1B,OAAS01B,SAASrhD,KAAK,WAAqB,QAAAmhC,KAAAljE,UAAA1D,OAARkgB,OAAQ,IAAA/Y,MAAAy/D,MAAAC,KAAA,EAAAA,KAAAD,KAAAC,OAAR3mD,OAAQ2mD,MAAAnjE,UAAAmjE,MAClD2f,UAAUp1B,MAAVvrD,MAAA2gF,WAAgBH,6BAAc/nF,OAArB0b,OAA+BkG,WAG5C6mE,SAAWD,SAAS3+E,MAAM0tE,SAC1B2Q,UAAU5yD,QAAUmzD,SAASthD,KAAK,WAAqB,QAAAshC,MAAArjE,UAAA1D,OAARkgB,OAAQ,IAAA/Y,MAAA4/D,OAAAC,MAAA,EAAAA,MAAAD,MAAAC,QAAR9mD,OAAQ8mD,OAAAtjE,UAAAsjE,OACnDwf,UAAU5yD,OAAV/tB,MAAA2gF,WAAiBH,6BAAc/nF,OAAtB0b,OAAgCkG,WAExB,UAAjB0mE,aACAG,SAAS7K,QAAwB,MAAhByK,YAAsBpR,SAASvzE,UAAU,EAAGuzE,SAASv1E,QAAUu1E,UAAU,GAClE,OAAjBqR,cACPG,SAAS11B,KAAK,KAAMkkB,SAASvzE,UAAU,EAAGuzE,SAASv1E,SAEvD,IAAMgnF,QAAUnR,QAAQ3kB,OASxB,OAPIs1B,UAAUt1B,KACV81B,QAAQvhD,KAAK,WAAqB,QAAAspC,MAAArrE,UAAA1D,OAARkgB,OAAQ,IAAA/Y,MAAA4nE,OAAAC,MAAA,EAAAA,MAAAD,MAAAC,QAAR9uD,OAAQ8uD,OAAAtrE,UAAAsrE,OAC9BwX,UAAUt1B,KAAVrrD,MAAA2gF,WAAeH,6BAAc/nF,OAApB0b,OAA8BkG,WAG3C8mE,QAAQthD,SAELqhD,UASLE,WAAa,SAAbA,WAAcxgE,KAAM8b,UAItB,OAHA/qC,OAAO+b,QAAQgvB,UAAUn7B,QAAQ,SAAChQ,GAC9BqvB,KAAKwR,MAAM7gC,EAAE,GAAIA,EAAE,aAEhBqvB,MAiBLygE,gBAAkB,SAAlBA,gBAAmBrR,QAASsR,OAC9B,IAAK,IAAM9uF,OAAO8uF,WACPtuF,eAAe5B,KAAKkwF,MAAO9uF,MAC9Bw9E,QAAQxkB,KAAKh5D,IAAK8uF,MAAM9uF,OAY9B+uF,wBAAW,SAAXA,SAAYvR,QAASsR,MAAO/nD,WAO9B,OANMy2C,mBAAmB/kB,gBACrB+kB,QAAUwQ,6BAAcxQ,eAEdhqE,IAAduzB,UAA0By2C,QAAQ9kB,UAAR,IAAA/2C,OAAsBolB,YAAaqG,KAAK,WAC9DyhD,gBAAgB3pE,WAAOjf,MAAO6oF,SAC7BD,gBAAgBrR,QAASsR,OACvBtR,SAyCLwR,yBAAY,SAAZA,UAAaxR,QAASyR,QAIxB,IAAK,IAAMjvF,OAHLw9E,mBAAmB/kB,gBACrB+kB,QAAUwQ,6BAAcxQ,UAEVyR,YACPzuF,eAAe5B,KAAKqwF,OAAQjvF,MAC/Bw9E,QAAQ59C,MAAM5/B,IAAKivF,OAAOjvF,MAGlC,OAAOw9E,SAYL0R,8BAAiB,SAAjBA,eAAkBrnE,QACpB,IACI5W,KACAokE,IAFEz2C,UAAY1Z,WAAO2C,OAAO+W,WAKZ,iBADpB3tB,KAAO4W,OAAO5W,QAEVA,KAAOnC,MAAMmC,MAAMqzC,OAAOp2C,IAAI,SAACnP,EAAGN,GAAJ,OAAUA,KAE5C42E,IAAMz2C,UAAU85B,UAAU7wC,OAAOq1D,UAAUjsE,KAAKA,OAEhDokE,IAAMz2C,UAAU85B,UAAU7wC,OAAOq1D,UAAUvjE,OAAO,WAC9C,OAAO1T,KAAKmhC,aAAexI,UAAUlI,SACtCzlB,KAAK4W,OAAO5W,OAEY8nD,QAAQj+B,OAAOjT,OAAOiT,QAAQhrB,MAAMulE,KAAKjoC,KAAK,SAAUruC,EAAGN,GAClFopB,OAAOulB,KAAKruC,EAAGmmB,WAAOjf,MAAOxH,KAGlBu6D,KAAK,QAASnxC,OAAOkf,WAAa,IACjDsuC,IAAIxc,OAAOxrB,UA0CT8hD,8BAAiB,SAAjBA,iBACF,IAAMC,IAAMC,UAAW7hF,WAAX,EAAAnC,WACZ,OACI24B,EAAGorD,IAAI,GACP3lF,EAAG2lF,IAAI,KAeTE,wBAAW,SAAXA,WAAW,OAAMC,UAMjBC,yBAAY,SAAZA,YAAY,OAAMC,UAElBC,qCAAwB,SAAxBA,sBAAyB9pC,MAAO+pC,KAClC,IAAIC,OAEEC,gBACFC,eAAgB,GAEd/oD,UAA2B,iBAAR4oD,IAAmBA,IAAOA,eAAe7gF,MAAQ6gF,IAAI3mF,KAAK,UAAOwK,EAGtFo8E,OADAhqC,MAAMlvB,iBAAkBk4C,YACfhpB,MAAM9qB,OAAO,OAAOqpD,KAPhB,KASJv+B,MAAM9qB,OAAO,QAAQx0B,KATjB,KAYbygC,UACA6oD,OAAO52B,KAAK,QAASjyB,WACC,WAAfgpD,sBAAOJ,cACPA,IAAI,gBACXza,eAAe2a,eAAgBF,MAGnCC,OAAOhwD,MAAMiwD,gBACb,IAAMG,cAAgB3xF,OAAOwjD,iBAAiB+tC,OAAOl5D,QAC/Cu5D,oBACF7uD,SAAU4uD,cAAc5uD,SACxBC,WAAY2uD,cAAc3uD,WAC1BC,WAAY0uD,cAAc1uD,WAC1BC,UAAWyuD,cAAczuD,WAK7B,OAFAquD,OAAOviD,SAEA4iD,oBAGLC,SAAW,SAAXA,WAAW,MAAM,iBAAkB/xD,SAASujB,6HC1T5CyuC,QACF,cACA,eACA,UACA,aACA,QACA,eACA,UACA,gBAaEC,eATF,SACA,OACA,QACA,OACA,gBACA,SACA,WAKSrhF,QAAQ,SAACshF,aAClBF,OAAOphF,QAAQ,SAAC6wE,OACZwQ,WAAWjkF,KAAX,GAAAwV,OAAmB0uE,YAAnB,KAAA1uE,OAAkCi+D,YAI3BwQ,+TClBf,IAAM74D,2BAAW,SAAXA,SAAW+4D,WAAS,OAAI,SAAAC,cAAY,OAAID,UAAUC,gBASlDC,OAAS,SAATA,OAAU9lE,OAAQpqB,UAAT,OAAsBnB,OAAOoB,UAAUC,eAAe5B,KAAK8rB,OAAQpqB,WClBnEmwF,6BDkCX,SAAAA,mLAAeC,CAAAzqF,KAAAwqF,kBACXxqF,KAAK0qF,WAAaP,WAClBnqF,KAAK2qF,UAAY,IAAI74E,IACrB9R,KAAK4qF,cACL5qF,KAAK6qF,eACL7qF,KAAK8qF,yBACL9qF,KAAK+qF,8TASL/qF,KAAK4qF,WAAa5qF,KAAK0qF,WAAWj4E,OAAO,SAACC,IAAK3Z,MAE3C,OADA2Z,IAAI3Z,MAAQu4B,2BACL5e,SAEX1S,KAAKgrF,6DAWC1/D,WACN,OAAOtrB,KAAK2qF,UAAUtxF,IAAIiyB,6EAURA,WAAW,IAAApW,MAAAlV,KAC7B,OAAO,IAAIirF,QAAQ,SAAC7hE,SAChBlU,MAAK01E,WAAWt/D,WAAagG,2BAASlI,uEAU1B,IAAAhU,OAAApV,KAChBA,KAAK0qF,WAAW5hF,QAAQ,SAACwiB,WACrB,IAAM4/D,QAAU91E,OAAK+1E,qBAAqB7/D,WAC1ClW,OAAKu1E,UAAUx4E,IAAImZ,UAAW4/D,SEpFb,SAAhBE,cAAiBF,QAAS5/D,UAAWgR,SAC9C4uD,QAAQG,KAAK,WACT,IAAMC,IAAMhvD,QAAQ6uD,qBAAqB7/D,WACzCgR,QAAQquD,UAAUx4E,IAAImZ,UAAWggE,KACjCF,cAAcE,IAAKhgE,UAAWgR,WFiF1B8uD,CAAcF,QAAS5/D,UAAWlW,kEAezBkW,UAAWg/D,cACxBtqF,KAAK4qF,WAAWt/D,WAAWg/D,oDAYvBA,cAGJ,IAAMF,YAAcE,aAAaiB,YAAcjB,aAAakB,OAAO5lE,YAAY2lE,aAC/EjB,aAAaiB,WAAanB,YAC1BpqF,KAAKyrF,4BACLzrF,KAAK0rF,QAAQtB,YAAaE,sDAcrBF,YAAaE,cAClB,IAAMqB,MAAQrB,aAAajnE,OACrBiI,UAAS,GAAA5P,OAAM0uE,YAAN,KAAA1uE,OAAqBiwE,OAGpC3rF,KAAK4rF,gBAAgBtgE,UAAWg/D,cAGhC,IAAMY,QAAUlrF,KAAK6rF,SAASvgE,WAE1BtrB,KAAK6qF,YAAYT,cACbpqF,KAAK6qF,YAAYT,aAAauB,OAE9B3rF,KAAK8rF,uBAAuB1B,YAAauB,MAAOT,SAMpDlrF,KAAK+rF,cAAc3B,YAAauB,MAAOT,+EAYvBd,YAAauB,MAAOT,SACxC,IAAM5/D,UAAS,GAAA5P,OAAM0uE,YAAN,KAAA1uE,OAAqBiwE,OACpC3rF,KAAK6qF,YAAYT,aAAauB,OAAOT,SACrClrF,KAAKgsF,oBAAoB1gE,yFASA,IAAA5T,OAAA1X,KACJ9G,OAAO4M,KAAK9F,KAAK8qF,uBACzBhiF,QAAQ,SAACshF,aACHlxF,OAAO4M,KAAK4R,OAAKozE,sBAAsBV,cAC/CthF,QAAQ,SAAC6iF,OACZ,GAAIj0E,OAAKmzE,YAAYT,cACb1yE,OAAKmzE,YAAYT,aAAauB,OAAQ,CAEtC,IAAMT,QAAUxzE,OAAKozE,sBAAsBV,aAAauB,OAExDj0E,OAAKo0E,uBAAuB1B,YAAauB,MAAOT,gBAEzCxzE,OAAKozE,sBAAsBV,aAAauB,gEAepDvB,YAAauB,MAAOT,SAC1BX,OAAOvqF,KAAK8qF,sBAAuBV,eACpCpqF,KAAK8qF,sBAAsBV,iBAG1BG,OAAOvqF,KAAK8qF,sBAAsBV,aAAcuB,SACjD3rF,KAAK8qF,sBAAsBV,aAAauB,WAE5C3rF,KAAK8qF,sBAAsBV,aAAauB,OAAST,oDAS1B,IAAjBe,WAAiB7mF,UAAA1D,OAAA,QAAA6L,IAAAnI,UAAA,GAAAA,UAAA,MACvBpF,KAAK6qF,YAAcoB,WAGnBjsF,KAAKyrF,4FASYngE,WAAW,IAAA+J,OAAAr1B,KAC5B2vB,WAAW,WACP0F,OAAKu1D,WAAWt/D,WAAagG,2BAC7B+D,OAAKs1D,UAAUx4E,IAAImZ,UAAW+J,OAAK81D,qBAAqB7/D,aACzD,2BGhPL3e,sBAAoBrO,oBAAUqO,kBCLvBu/E,KAAO,OACPC,MAAQ,QACRC,cAAgB,gBAChBC,MAAQ,QACRC,UAAY,YACZC,UAAY,YACZC,YAAc,ICNrBC,oBAAsB,EACtBC,oBAAsB,EACtBC,eAAiB,EACjBC,oBAAsB,EACtBC,oBAAsB,uSCFbC,6BCkBX,SAAAA,aAAaC,YAAaC,uKAAWC,CAAAjtF,KAAA8sF,cACjC9sF,KAAK+sF,YAAcA,YACnB/sF,KAAK4uB,KAAOm+D,YAAYt6E,OAAO,SAACvK,IAAKnO,KAEjC,OADAmO,IAAInO,KAAO4yF,eACJzkF,SAEXlI,KAAKgtF,UAAYA,UACjBhtF,KAAKktF,kBAAoBH,YAAYrrF,OACrC1B,KAAKmtF,oBACLntF,KAAKotF,WAAY,kSAWhBC,KACDrtF,KAAKotF,WAAY,EAEjB,IAAMj7E,IAAMnS,KAAK4uB,KAMjB,IAAK,IAAM70B,OAJXszF,IAAIvkF,QAAQ,SAACtQ,GACT2Z,IAAI3Z,GAAKi0F,sBAGKt6E,IACVA,IAAIpY,OAAS0yF,qBAAuBt6E,IAAIpY,OAAS6yF,sBACjDz6E,IAAIpY,KAAOoY,IAAIpY,KAAO,EAAI8yF,mBAAqBH,oBAGvD,OAAO1sF,2CAUHqtF,KACJ,IAAMl7E,IAAMnS,KAAK4uB,KAMjB,OAJAy+D,IAAIvkF,QAAQ,SAACtQ,GACT2Z,IAAI3Z,GAAKo0F,sBAGN5sF,uDAYP,IAAMmS,IAAMnS,KAAK4uB,KAGjB,IAAK,IAAM70B,OAAOoY,IACdA,IAAIpY,KAAOoY,IAAIpY,OAAS0yF,oBAAsBG,oBAAsBz6E,IAAIpY,KAE5E,OAAOiG,qDAaP,IAAMmS,IAAMnS,KAAK4uB,KAEjB,IAAK,IAAM70B,OAAOoY,IACdA,IAAIpY,KAAOoY,IAAIpY,OAAS2yF,mBAAqBG,mBAAqB16E,IAAIpY,KAE1E,OAAOiG,2CAWHqtF,KACJrtF,KAAKotF,WAAY,EAEjB,IAAMj7E,IAAMnS,KAAK4uB,KAKjB,IAAK,IAAM70B,OAJXszF,IAAIvkF,QAAQ,SAACtQ,GACT2Z,IAAI3Z,GAAKk0F,qBAGKv6E,IACVA,IAAIpY,OAAS2yF,oBAAsBv6E,IAAIpY,OAAS8yF,qBAChD16E,IAAIpY,KAAoB,IAAboY,IAAIpY,KAAa0yF,oBAAsBG,qBAI1D,OAAO5sF,+CAIP,IAAMmS,IAAMnS,KAAK4uB,KACXxH,QACFkmE,iBACAC,gBACAR,gBAGJ,IAAK,IAAMhzF,OAAOoY,IACVA,IAAIpY,KAAO,GACXoY,IAAIpY,OAAS6yF,qBAAuBxlE,OAAOkmE,SAAS,GAAGpnF,KAAKnM,KAC5DoY,IAAIpY,OAAS0yF,qBAAuBrlE,OAAOkmE,SAAS,GAAGpnF,KAAKnM,MACrDoY,IAAIpY,KAAO,IAClBoY,IAAIpY,OAAS8yF,oBAAsBzlE,OAAOmmE,QAAQ,GAAGrnF,KAAKnM,KAC1DoY,IAAIpY,OAAS2yF,oBAAsBtlE,OAAOmmE,QAAQ,GAAGrnF,KAAKnM,MAE9DqtB,OAAO2lE,YAAY7mF,KAAKnM,KAQ5B,OALC,WAAY,WAAW+O,QAAQ,SAACxN,MAC7B8rB,OAAO9rB,MAAQ8rB,OAAO9rB,MAAM2M,IAAI,SAAAvN,GAAC,OAAIA,EAAEuN,IAAIO,YAE/C4e,OAAO2lE,YAAc3lE,OAAO2lE,YAAY9kF,IAAIO,QAErC4e,2CAaJimE,KACH,IAAMl7E,IAAMnS,KAAK4uB,KACjB,GAAIy+D,IACAA,IAAIvkF,QAAQ,SAACtQ,GACT2Z,IAAI3Z,GAAKm0F,qBAEV,CACH,IAAMa,UAAYxtF,KAAKmtF,iBACvB,IAAK,IAAMpzF,OAAOoY,IACRpY,OAAOyzF,YACTr7E,IAAIpY,KAAO4yF,gBAKvB,OADA3sF,KAAKotF,WAAY,EACVptF,uDAWP,IAAMmS,IAAMnS,KAAK4uB,KACX6+D,UAEN,IAAK,IAAM1zF,OAAOoY,IACdA,IAAIpY,OAAS0yF,qBAAuBgB,OAAOvnF,KAAKnM,KAGpD,OAAO0zF,uEAWUA,QACjB,IAAMt7E,IAAMnS,KAAK4uB,KACjB,OAAO6+D,OAAO/5E,OAAO,SAAA5a,GAAC,OAAIqZ,IAAIrZ,KAAO2zF,qBAAuBt6E,IAAIrZ,KAAO8zF,oFAWvDc,WAChB,IAAMv7E,IAAMnS,KAAK4uB,KACjB,OAAO8+D,UAAUh6E,OAAO,SAAA5a,GAAC,OAAIqZ,IAAIrZ,KAAO4zF,oBAAsBv6E,IAAIrZ,KAAO+zF,uEAQzE,IAAM16E,IAAMnS,KAAK4uB,KACX++D,aAEN,IAAK,IAAM5zF,OAAOoY,IACdA,IAAIpY,OAAS6yF,qBAAuBe,UAAUznF,KAAKnM,KAEvD,OAAO4zF,0DAQP,IAAMx7E,IAAMnS,KAAK4uB,KACX++D,aAEN,IAAK,IAAM5zF,OAAOoY,IACdA,IAAIpY,OAAS8yF,oBAAsBc,UAAUznF,KAAKnM,KAGtD,OAAO4zF,0DAUP,IAAMx7E,IAAMnS,KAAK4uB,KACX8+D,aAEN,IAAK,IAAM3zF,OAAOoY,IACdA,IAAIpY,OAAS2yF,oBAAsBgB,UAAUxnF,KAAKnM,KAEtD,OAAO2zF,kEAUP,IAAMv7E,IAAMnS,KAAK4uB,KACXm+D,eAEN,IAAK,IAAMhzF,OAAOoY,IACd46E,YAAY7mF,KAAKnM,KAGrB,OAAOgzF,8EAIP,OAAO/sF,KAAKktF,8DAIZ,OAAOltF,KAAKotF,kDAQZ,IAAMj7E,IAAMnS,KAAK4uB,KAEjB,IAAK,IAAM70B,OAAOoY,IACVA,IAAIpY,OAAS0yF,oBACbt6E,IAAIpY,KAAO2yF,mBACJv6E,IAAIpY,OAAS2yF,mBACpBv6E,IAAIpY,KAAO0yF,oBACJt6E,IAAIpY,OAAS6yF,oBACpBz6E,IAAIpY,KAAO8yF,mBAEX16E,IAAIpY,KAAO6yF,oBAInB,OAAO5sF,mfChUR,IAmCM4tF,6BAA+B,SAA/BA,6BAAgCtxD,QAASpd,GAAI2uE,UACtD,IAAMC,YAAcxxD,QAAQwxD,cAC5B,IAAK,IAAM/zF,OAAO+zF,YACd,MAAOvzF,eAAe5B,KAAKm1F,YAAa/zF,KAAM,CAC1C,IAAIg0F,QAAS,EACT7uE,KAAkB,IAAZA,GAAGnlB,OACTg0F,QAAS,GAETA,SACAF,SAAWC,YAAY/zF,KAAKi0F,SAAWF,YAAY/zF,KAAKk0F,aAM3DC,aAAe,SAAfA,aAAe/7E,KAAG,OAAAg8E,yBAAQ,IAAIt3E,OAAJ6E,OAAAyyE,yBAAYh8E,IAAI,IAAhBg8E,yBAAuBh8E,IAAI,QAe5Di8E,eACFC,UAAWC,qBACXC,UAAWD,qBACXE,aAAcF,oBAA+BA,qBAC7CG,SAAUH,oBACVI,SAAUJ,oBACVK,YAAaL,mBAA8BA,oBAC3CM,aAaSC,WAAa,SAAbA,WAAcvzF,KAAM6W,IAAKtF,QAClC,IAAI+P,MAAQ,KACNuzD,kBAAoBtjE,OAAOsjE,kBAC3B2e,aAAejiF,OAAOiiF,aAU5B,OATKjiF,OAAOkiF,gBAMD5e,oBACPvzD,MAAiB,gBAATthB,KAAyB60E,kBAAkB,GAAKA,kBAAkB,IALtEvzD,MADAkyE,aAAaE,WACL,KAhBW,SAAlBC,gBAAmB3zF,KAAMshB,MAAOzK,KACzC,OAAIyK,MACOA,MAAMqC,OAAO,SAACrW,OAAQpQ,GAAT,OAChB41F,cAAc9yF,MAAMsjB,KAAK,SAAAswE,WAAS,OAAI/8E,IAAI3Z,KAAO02F,cAC9C/vE,WAAW,IAGf,KAWS8vE,CAAgB3zF,KAAMuR,OAAOuR,UAAWvR,OAAOiiF,aAAalgE,OAMxEvH,KAAMlV,IACNzQ,OAAQyQ,IAAIzQ,OACZkb,mjCC1EauyE,6BACjB,SAAAA,SAAa7yD,QAAS8yD,QAAStB,YAAauB,2KAAoBC,CAAAtvF,KAAAmvF,UAC5DnvF,KAAKs8B,QAAUA,QACft8B,KAAKuvF,0BACLvvF,KAAKwvF,gBACLxvF,KAAKyvF,mBACLzvF,KAAK0vF,UACDC,eACAC,aAEJ5vF,KAAK6vF,iBACL7vF,KAAK8vF,yBACL9vF,KAAK+vF,sBACL/vF,KAAKgwF,oBACDC,aAAc,SAAAA,eAAA,OAAM,IAExBjwF,KAAKkwF,4BACLlwF,KAAKmwF,qBACLnwF,KAAKowF,uBACLpwF,KAAKqwF,WACLrwF,KAAKswF,uBACLtwF,KAAKuwF,iBACLvwF,KAAKwwF,kBACLxwF,KAAKywF,sBAELzwF,KAAK0wF,eAAerB,oBACpBrvF,KAAK2wF,2BAA2BvB,QAAQO,aACxC3vF,KAAK4wF,oBAAoB9C,aACzB9tF,KAAK6wF,+BAA+BzB,QAAQ0B,wBAC5C9wF,KAAK+wF,wBAAwB3B,QAAQQ,+RAIrC,OAAIxqF,UAAO1D,QACP1B,KAAKqwF,QAAUphB,eAAejvE,KAAKqwF,QAANjrF,UAAA1D,QAAA,OAAA6L,EAAAnI,UAAA,IACtBpF,MAEJA,KAAKqwF,8DAGAW,cACZ,IAAM3B,mBAAqBrvF,KAAKswF,oBAChC,IAAK,IAAMv2F,OAAOi3F,aACd,MAAOz2F,eAAe5B,KAAKq4F,aAAcj3F,KAAM,CAC3C,IAAM+zF,YAAckD,aAAaj3F,SAC7Bk3F,uBAAwB,EACxBC,iBAAW,EACX/hE,eAAe2+D,cACfoD,YAAcpD,YAAYqD,QAC1BF,sBAAwBnD,YAAYmD,uBAEpCC,YAAcpD,aAEjBuB,mBAAmBt1F,OAASs1F,mBAAmBt1F,SAChDiG,KAAKswF,oBAAoBv2F,KAAzBq3F,2BAAoC,IAAIv6E,IAAIo6E,sBAAwBC,eAAHx1E,OAAA01E,2BACzD/B,mBAAmBt1F,MADsCq3F,2BAC7BF,gBAG5C,OAAOlxF,mFAGiBovF,SACxB,IAAMiC,WD3E8B,SAA/BC,6BAAgCh1D,QAAS8yD,SAClD,IAAMmC,0BAMN,OAJAnC,QAAUA,mBAAmBvmF,MAAQumF,QAAUl2F,OAAOwlB,OAAO0wE,UACrDtmF,QAAQ,SAAC0oF,QACbD,uBAAuBC,OAAOjG,cAAgB,IAAIiG,OAAOl1D,WAEtDi1D,uBCoEgBD,CAA6BtxF,KAAMovF,SAGtD,OAFApvF,KAAKyxF,qBAAqBJ,YAC1Bn4F,OAAO4T,OAAO9M,KAAK0vF,SAASC,YAAa0B,YAClCrxF,yEAIP,OAAOA,qEAGU8tF,aACjB,IAAK,IAAM/zF,OAAO+zF,YACd9tF,KAAKuvF,uBAAuBzB,YAAY/zF,KAAKwxF,cAAgBuC,YAAY/zF,KAG7E,OADAiG,KAAK0xF,wBACE1xF,+DAGO8tF,YAAagB,aAAc7jE,SAAS,IAAA/V,MAAAlV,KAC5C2xF,gBAAkB3xF,KAAK8tF,cACvB8D,cAAgB5xF,KAAKwwF,eACrBqB,kBAAoB7xF,KAAKywF,mBA6B/B,OA5BA3C,YAAYhlF,QAAQ,SAACgpF,YACjB,IAAInrF,QACA5N,KACEo4F,QAAUW,WAAWX,QACrBE,WAAaS,WAAWT,WACxBU,YDIO,SAAZC,UAAa11D,QAAS+0D,YAC/B,IAAIU,eACEruE,QACF8qE,YAAa,KACbG,WAAY,MAqBhB,OAnBA0C,WAAWvoF,QAAQ,SAACmpF,WAChB,IAAMC,aAAe51D,QAAQi0D,cAAc0B,WACvCC,eACAH,YAAc74F,OAAO4T,OAAOilF,YAAap0E,MAAMu0E,gBAC9C,cAAe,cAAcppF,QAAQ,SAACxN,MACnC,IAAMshB,MAAQs1E,aAAa52F,MAAMshB,MAC7Bu1E,cAAgBzuE,OAAOpoB,MAKvB62F,cAJCA,cAEM,GAAAz2E,OAAGkB,MAAM+P,YAAY1kB,IAAI,SAAAnP,GAAC,OAAIA,EAAEC,OAAMma,UAAtC,GAAAwI,OACJy2E,cAAcxlE,YAAY1kB,IAAI,SAAAnP,GAAC,OAAIA,EAAEC,OAAMma,QAC9BwQ,OAAOpoB,MAAQshB,MAAMqR,MAAMkkE,eAE3Bv1E,MALA8G,OAAOpoB,MAAQshB,MAOnCm1E,YAAYz2F,MAAMshB,MAAQu1E,mBAI/BJ,YC7BqBC,CAAU98E,MAAMm8E,YACpCF,QAAQroF,QAAQ,SAACspF,QACS,WAAlBC,gBAAOD,SACPr5F,KAAOq5F,OAAOr5F,KACd4N,QAAUyrF,OAAOzrF,SAEjB5N,KAAOq5F,OAGX,IAAME,mBAAqBX,gBAAgB54F,MACvCu5F,mBAAmBC,eACdD,mBAAmB1sE,YAAY4sE,WAChCt5F,OAAOwlB,OAAOkzE,eAAehzE,KAAK,SAAA9lB,GAAC,OAAIA,EAAEkyB,kBACzC6mE,kBAAiB,GAAAn2E,OAAI3iB,KAAJ,KAAA2iB,OAAY21E,WAAWtuF,UACpChK,UACA6oB,QAASmwE,YAAa9mE,QAAStkB,UAGnCuO,MAAKu9E,mBAAmB15F,KAAMg5F,YAAa9mE,QAAStkB,cAK7D3G,mEAGSjH,KAAM+1F,aAAc7jE,SAAuB,IAAdtkB,QAAcvB,UAAA1D,OAAA,QAAA6L,IAAAnI,UAAA,GAAAA,UAAA,MACrDusF,gBAAkB3xF,KAAK8tF,cACvBgE,WAAaH,gBAAgB54F,MAC/Bk1F,SAAU,EACVtnF,QAAQ+M,QAAU/M,QAAQ+M,OAAOo+E,cACjC7D,SAAU,IAEbA,SAAW0D,gBAAgB54F,MAAMwO,MAAMunF,aAAc7jE,QAAStkB,iGAGlCsB,KAE7B,OADAjI,KAAKkwF,yBAA2Bh3F,OAAO4T,OAAO9M,KAAKkwF,yBAA0BjoF,SACtEjI,iEAGQiyF,UAAWhnE,SAA+B,IAAtBynE,gBAAsBttF,UAAA1D,OAAA,QAAA6L,IAAAnI,UAAA,GAAAA,UAAA,MACnDutF,eAA0CplF,IAA9BmlF,gBAAgBC,WAA0BD,gBAAgBC,UAEtEtvE,OADqBrjB,KAAK0vF,SAASC,YACPsC,WAE5BnE,YDzDgB,SAAjB8E,eAAkBX,UAAW5C,oBACtC,IAAMvB,eACN,IAAK,IAAM/zF,OAAOs1F,mBAAoB,CAClC,IAAMgC,WAAat3F,IAAIwS,MAAM,KACf8kF,WAAWzyE,KAAK,SAAA9lB,GAAC,OAAIA,IAAMm5F,aAErCnE,YAAY5nF,MACRirF,QAAS9B,mBAAmBt1F,KAC5Bs3F,wBAIZ,OAAOvD,YC6CiB8E,CAAeX,UADRjyF,KAAKswF,qBAIhC,GAFAtwF,KAAKyvF,gBAAkBiD,gBAEnBrvE,OAAQ,CACR,IAAMyrE,aAAezrE,OAAOm7D,SAASvzD,SAC/B4nE,wBAA0B7yF,KAAK8yF,2BAA2BhE,cAChE9uF,KAAKuwF,cAAc0B,WAAaY,wBAChC,IAAME,uBAAyB/yF,KAAK+yF,uBAAuBJ,WAK3D,GAHIA,WACA3yF,KAAK2yF,UAAUV,UAAWhnE,QAAS6jE,aAAa5jE,KAAK,SAAApyB,GAAC,OAAIA,EAAEk6F,qBAAqBlF,aAEjFiF,uBAAwB,CACxB,IAAME,sBAAwBjzF,KAAKkzF,yBAAyBpF,YAAa7iE,QAASynE,iBAClF1yF,KAAKmzF,iBAAiBF,sBAAuBJ,wBAAyB5nE,UAI9E,OAAOjrB,mFAGiB8uF,cACxB,OAAOA,aAAa5jE,KAAK,SAAApyB,GAAC,OAAKA,EAAEk6F,6FAIjC,OAAO,8FAGwBf,UAAWx4F,OAM1C,OALIA,iBAAiB8b,SACjBvV,KAAKmwF,kBAAkB8B,WAAax4F,MAEpCuG,KAAKmwF,kBAAkB8B,WAAa,kBAAMx4F,OAEvCuG,mGAGyB8xF,WAAYr4F,OACxCA,iBAAiB8b,SACjBvV,KAAKgwF,mBAAmB8B,YAAcr4F,MAEtCuG,KAAKgwF,mBAAmB8B,YAAc,kBAAMr4F,qDAKhD,OAAOuG,uDAIP,OAAIoF,UAAY1D,QACZ1B,KAAKwvF,aAALpqF,UAAA1D,QAAA,OAAA6L,EAAAnI,UAAA,GACOpF,MAEJA,KAAKwvF,yEAGGtwE,IAEf,OADA0uE,6BAA6B5tF,KAAMkf,IAAI,GAChClf,mEAGSkf,IAEhB,OADA0uE,6BAA6B5tF,KAAMkf,IAAI,GAChClf,qEAGUiyF,UAAWmB,gBAC5B,IAAMC,mBAAqBrzF,KAAKowF,oBAChC,IAAK,IAAMr2F,OAAOs5F,mBACd,GAAIt5F,MAAQq5F,eAAgB,CACxB,IAAME,aAAeD,mBAAmBt5F,KACxCu5F,aAAajC,WAAaiC,aAAajC,WAAW39E,OAAO,SAAA5a,GAAC,OAAIA,IAAMm5F,YACpEjyF,KAAKuzF,uBAAuBx5F,KAIpC,OAAOiG,uEAGW8xF,WAAYG,WAC9B,IAAM5C,mBAAqBrvF,KAAKswF,oBAEhC,OADAjB,mBAAmB4C,WAAa5C,mBAAmB4C,WAAWv+E,OAAO,SAAA5a,GAAC,OAAKA,EAAEC,MAAQD,KAAOg5F,aACrF9xF,+EAGe8tF,aACtB,OAAOA,wFAGgB1vE,WAGvB,OAFAA,UAAUo1E,YAAY,eACtBp1E,UAAUgvD,GAAG,cAAeptE,KAAKyzF,0BAC1BzzF,6EAGe,IAAAoV,OAAApV,KACtB,OAAO,SAAC0zF,WACJ,IAAMzoE,QAAUyoE,UAAUzoE,QACpB5H,OAAS4H,QAAQ5H,OAEvBjO,OAAKu+E,kBAAkBtwE,OAAQ4H,SAC3B0nE,WAAW,mEAKHiB,UAAWC,oBAC3B,IAAMxC,WAAawC,oBAAsB7zF,KAAK0vF,SAASC,YACjDb,aAAe9uF,KAAK6vF,cACpBiE,qBAAuB9zF,KAAK8vF,sBAElC,IAAK,IAAM/1F,OAAOs3F,gBACP92F,eAAe5B,KAAK04F,WAAYt3F,OACnC+0F,aAAa/0F,KAAO,IAAI+yF,kBAAa8G,WACrCE,qBAAqB/5F,KAAO,IAAI+yF,kBAAa8G,WAAW,IAKhE,OAFA5zF,KAAK8vF,sBAAwBgE,qBAC7B9zF,KAAK8uF,aAAaA,cACX9uF,yDAIP,OAAIoF,UAAa1D,QACb1B,KAAK6vF,cAALzqF,UAAA1D,QAAA,OAAA6L,EAAAnI,UAAA,GACOpF,MAEJA,KAAK6vF,oFAIZ,IAAMkE,sBAAwB/zF,KAAKuvF,uBAEnC,OADAvvF,KAAK8tF,YDxSwB,SAAxB4D,sBAAyBp1D,QAASwxD,aAC3C,IAAMkG,eAAiB13D,QAAQkzD,aACzB3iF,OAASyvB,QAAQzvB,SASvB,OARAihF,YAAcA,uBAAuBjlF,MAAQilF,YAAc50F,OAAOwlB,OAAOovE,cAC7DhlF,QAAQ,SAACmrF,YACjB,IAAM1I,WAAa0I,WAAW1I,aACxB+G,mBAAqB0B,eAAezI,YAC1CyI,eAAezI,YAAc+G,oBAAsB,IAAI2B,WAAW33D,SAClE,IAAM43D,eAAiBrnF,OAAO0+E,YAC9B2I,gBAAkBF,eAAezI,YAAY1+E,OAAOqnF,kBAEjDF,eC6RctC,CAAsB1xF,KAAM+zF,wBACtC/zF,6EAGcovF,SACrB,IAAM+E,cDrR2B,SAA5BC,0BAA6B93D,QAAS8yD,SAC/C,IAAMiF,mBAEN,IAAK,IAAMt7F,QAAQq2F,aACL70F,eAAe5B,KAAKI,KAAMq2F,WAChCiF,gBAAgBt7F,MAAQq2F,QAAQr2F,MAAMujC,UAG9C,OAAO+3D,gBC6QmBD,CAA0Bp0F,KAAMovF,SAEtD,OADAl2F,OAAO4T,OAAO9M,KAAK0vF,SAASE,SAAUuE,eAC/Bn0F,yDAiBIqjB,OAAQza,QAAwB,IAAhBisB,OAAgBzvB,UAAA1D,OAAA,QAAA6L,IAAAnI,UAAA,IAAAA,UAAA,GACrCyuF,mBAAqB7zF,KAAK0vF,SAASC,YACzC,GAAI/mF,OAAOlH,OAAQ,CACf,GAAI2hB,SAAWmpE,YACX,IAAK,IAAMzyF,OAAO85F,mBACd7zF,KAAK+vF,mBAAmBh2F,MACpB6O,cACAisB,oBAIR70B,KAAK+vF,mBAAmB1sE,SACpBza,cACAisB,eAGR,OAAO70B,KAEX,OAAOA,KAAK+vF,yFAOQuE,WACpB,IAAMC,sBAAwBv0F,KAAK0vF,SAASE,SACtC3nF,IAAMjI,KAAKowF,oBAEjB,IAAK,IAAM/sE,UAAUpb,IACjB,OAAU1N,eAAe5B,KAAK0qB,OAAQpb,MAAQob,UAAYixE,WAAajxE,QAAS,CAC5E,IAAIg6B,YAAM,EACJwzB,OAAS5oE,IAAIob,QACnBg6B,OAASwzB,OAAOxzB,OAChB,IAAM0iC,MAAQlP,OAAOkP,MAChB1iC,SACDA,OAASr9C,KAAKs8B,QAAQk4D,8BAEbvK,YAAuB,IAAVlK,YAA4BxyE,IAAVwyE,OAAuBA,QAC3D//E,KAAKy0F,wBAAwBF,sBAAsBlxE,QACvDg6B,OAAQwzB,OAAOwgB,YAG3B,OAAOrxF,2FAGqBiI,KAE5B,OADAjI,KAAKowF,oBAAsBnhB,eAAejvE,KAAKowF,oBAAqBnoF,KAC7DjI,6EAWcqjB,OAAQqxE,QAASC,eAAe,IAAAj9E,OAAA1X,KAiBrD,MAhByB,iBAAb00F,UACRA,SAAWA,UAEfA,QAAQ5rF,QAAQ,SAACu0C,QACb,IAAM3pB,MAAQhc,OAAK4kB,QAAQ5I,QACrBZ,MAAQuqB,OAAO5sB,gBAAgBlb,SAAW8nC,OAAS0qC,6BAAcr0D,OAAO++B,UAAUpV,QACnFvqB,MAAMwU,UACHxU,iBAAiBjqB,MACjBiqB,MAAMhqB,QAAQ,SAAC2nB,MACXpN,OAAO0kE,6BAAct3D,MAAOkkE,iBAGhCtxE,OAAOyP,MAAO6hE,kBAInB30F,mEAIP,OAAOA,KAAKyvF,oFAGOtyE,UAA+B,IAArBsF,eAAqBrd,UAAA1D,OAAA,QAAA6L,IAAAnI,UAAA,GAAAA,UAAA,MAC5Ck3B,QAAUt8B,KAAKs8B,QACf6zC,kBAAoB1tD,eAAezX,KAAOyX,eAAezX,KAC3DsxB,QAAQ4zC,4BAA4B/yD,SAAU,OAC5Cy3E,QAAUt4D,QAAQ1zB,SAASm1B,MAC3B82D,QAAUv4D,QAAQ1zB,SAASpF,MAC3BsxF,UAAYF,QAAQ/1E,MAAM,SAAAtT,OAAK,OAAIA,MAAMjQ,SAAWy5F,yBAAU31F,UAC9D41F,UAAYH,QAAQh2E,MAAM,SAAAtT,OAAK,OAAIA,MAAMjQ,SAAWy5F,yBAAU31F,UACpE,OACIwd,MAAOuzD,kBACP9oD,KAAmB,OAAblK,SAAoB,KAAQsF,eAAezX,KrG0vB9B,SAAzBiqF,uBAA0Br4E,MAAOoC,UAAW+J,UAAa,IAEvD1E,cAFuD6wE,mBAClCl2E,UAAUV,UAA3BtT,KADmDkqF,mBACnDlqF,KAAMW,OAD6CupF,mBAC7CvpF,OAEd,GAAIA,OAAOjK,OAAQ,CACf,IAAMyzF,SAAWv4E,MAAM4B,kBACvB6F,cAAgBzH,MAAMqC,OAAO,SAACrW,QAQ1B,OAPgBoC,KAAK4T,KAAK,SAAAxD,KAAG,OAAIzP,OAAOkT,MAAM,SAACC,UAAWnM,KACtD,QAAKoW,UAAejK,UAAU/lB,QAAQo8F,UAC9BA,SAASr2E,UAAU/lB,MAAM4lB,IAAIrjB,OAASy5F,yBAAU31F,UAGjDgc,IAAIzI,OAAS/J,OAAOkW,UAAU/lB,MAAMgmB,gBAI/CI,WAAW,SAGfkF,cAAgBrF,UAGpB,OAAOqF,cqG/wByD4wE,CAAuBj1F,KAAKo1F,cAChF3yE,eAAezX,KAAK,GAAI8pF,WAAaE,WAAW12E,UAAU+I,KAAO8oD,kBAAkB,GAAG7xD,UAAU+I,gEAI1FhE,QACd,IAAMR,SAAW7iB,KAAKs8B,QAAQ5D,KAExB28D,mBADiBr1F,KAAKyvF,qBACa5sE,SACrCyyE,2BAQJ,OAPID,oBAAsBxyE,WACtByyE,yBAA2Bt1F,KAAK8vF,sBAAsBzsE,UAGtDgyE,mBACAC,wBAAwBpvF,KAAKlG,KAAK8uF,eAAezrE,SAE9CiyE,0EAIP,OAAOt1F,KAAKs8B,QAAQtxB,mDAIpB,OAAOhL,KAAKotF,kEAYC6E,WACb,OAAOjyF,KAAKuwF,cAAc0B,0TC5bbsD,oCACjB,SAAAA,iBAAaC,gKAAUC,CAAAz1F,KAAAu1F,kBACnBv1F,KAAKw1F,SAAWA,SAChBx1F,KAAK01F,UAAW,8RAYVzqE,SAAS,IAAA/V,MAAAlV,KACTmd,SAAW8N,QAAQ9N,SACnBq4E,SAAWx1F,KAAKw1F,SAChBjK,WAAavrF,KAAK4lB,YAAY2lE,aAC9BoK,cAAgBH,SAASI,iBAAiBrK,YAJjCsK,sBAQX71F,KAAKw1F,SAASM,sBAAsB34E,SAAUnd,KAAKw1F,SAASO,qBAFrD5lB,kBANI0lB,sBAMXj5E,MACAyK,KAPWwuE,sBAOXxuE,KAOJ,OALsBsuE,cAAc1tF,IAAI,SAAC6mF,cAErC,OADA55E,MAAK8gF,gBAAgB3uE,KAAMynE,cACpB55E,MAAK+gF,gBAAgBnH,aAAc3e,kBAAmBllD,qEAiBjE,OAAOjrB,6DAGM8uF,aAAc3e,kBAAmBllD,SAAS,IAAAirE,sBAKnDpH,aAAaqH,UAHb7I,SAFmD4I,sBAEnD5I,SACAC,QAHmD2I,sBAGnD3I,QACAR,YAJmDmJ,sBAInDnJ,YAEEtqE,eAAiBziB,KAAKw1F,SAASO,oBAC/B33E,UAAYpe,KAAKw1F,SAASJ,cAC1BgB,WACFC,qBAAsB5zE,eAAe4zE,qBACrCj4E,oBACA+xD,oCACA4e,gBAAiBtsE,eAAezX,KAChC8jF,2BAGJ,OACIxB,UAAWuB,WAAW,WAAYvB,SAAS,GAAI8I,WAC3CvH,WAAW,WAAYvB,SAAS,GAAI8I,YACxC7I,SAAUsB,WAAW,WAAYtB,QAAQ,GAAI6I,WACzCvH,WAAW,UAAWtB,QAAQ,GAAI6I,YACtC5H,YAAaK,WAAW,cAAeX,aAAaZ,UAAW8I,WAC/DzH,WAAYE,WAAW,aAAcX,aAAaX,SAAU6I,WAC5DrJ,YAAa8B,WAAW,WAAY9B,YAAaqJ,WACjDC,qBAAsB5zE,eAAe4zE,qBACrCztF,OF1BmB,SAAlB0tF,gBAAmB7zE,gBAAkC,IAAlBtF,SAAkB/X,UAAA1D,OAAA,QAAA6L,IAAAnI,UAAA,GAAAA,UAAA,MACxD4e,kBAAoBvB,eAAeuB,kBASzC,OAPIA,kBACeA,kBAAkB2I,YAAY1kB,IAAI,SAAAnP,GAAC,OAAIA,EAAEC,OACjDokB,oBAAoBtU,MACZsU,SAAS,GAETjkB,OAAO4M,KAAKqX,cEkBfm5E,CAAgB7zE,eAAgBwI,QAAQ9N,UAChD61E,oBAA+C,IAA3BlE,aAAa9B,mDASrChtF,KAAK01F,UAAW,4CAIhB11F,KAAK01F,UAAW,gDAIhB,OAAO11F,KAAK01F,qDAZZ,OAAO,6qCCnFMa,mtBAA0BhB,iUAC1B9H,OAAQqB,cACrB,GAAe,OAAXrB,OACAqB,aAAa0H,aACV,GAAI/I,OAAO/rF,OAAQ,CAEtB,IAAM+0F,eAAiBhJ,OAAO/5E,OAAO,SAAA5a,GAAC,OAAIg2F,aAAalgE,KAAK91B,KAAOw1F,qBACxDQ,aAAalgE,KAAK91B,KAAOw1F,sBACpCQ,aAAa4H,aAJS,IAKdpJ,SAAawB,aAAaqH,UAA1B7I,SACRwB,aAAa0H,MAAMtI,aAAaZ,WAChCwB,aAAa/3E,IAAI02E,QACjBqB,aAAax5D,OAAOmhE,qBAEpB3H,aAAa1nD,OAAO0nD,aAAa6H,2CClBhCC,MAAQ,QACRC,UAAY,YACZC,QAAU,UACVC,OAAS,SACTC,OAAS,stCCDDC,+vBAA2BV,oUAExC,OAAOM,ysCCGMK,mtBAAuBX,oTAEpC,OAAOY,2sCCPMC,8tBAAwBb,wTAErC,OAAOQ,iDAIP,OAAO,gvCCLMM,ywBAA4B9B,yUAC5B9H,OAAQqB,cACrB,GAAe,OAAXrB,OACAqB,aAAa0H,aACV,GAAI/I,OAAO/rF,OAAQ,CACtB,IAAM+gB,eAAiBziB,KAAKw1F,SAASO,oBAE/BU,eAAiBhJ,OAAO/5E,OAAO,SAAA5a,GAAC,OAAIg2F,aAAalgE,KAAK91B,KAAOw1F,qBAC5DQ,aAAalgE,KAAK91B,KAAOw1F,sBAChC,IAAiC,IAA7B7rE,eAAekwE,UAAqB,CACpC7D,aAAa4H,aADuB,IAE5BpJ,SAAawB,aAAaqH,UAA1B7I,SACRwB,aAAa0H,MAAMtI,aAAaZ,WAChCwB,aAAa/3E,IAAI02E,QACjBqB,aAAax5D,OAAOmhE,oBACjB,CAECA,eAAe/0F,QACfotF,aAAa4H,aACb5H,aAAa1nD,OAAOqvD,kBAEpB3H,aAAawI,cACbxI,aAAa/3E,IAAI02E,SAPlB,IASKF,QAAYuB,aAAaqH,UAAzB5I,QACFgK,cAAgBrJ,aAAaX,SAC7BiK,iBAAmB1I,aAAa6H,iBAAiBj1F,OACnD61F,cAAc71F,SAAW81F,kBACzB1I,aAAa0H,cAIrB1H,aAAa1nD,OAAO0nD,aAAa6H,kBAGrC,OAAO32F,guCCpCMy3F,guBAAwBJ,4TAErC,OAAOL,8BCgFAU,mBA9EwC,SAAtBA,oBAAuBC,WAAY9qF,OAAQ0R,cACxE,IAAMo5E,WAAWC,KAAK75D,IAAK45D,WAAWC,KAAKp0F,EACvC,OACI2Z,SAAU,MAIlB,IAAMy6E,KAAOD,WAAWC,KAClBC,MAAQD,KAAK75D,EAAE,GACf+5D,MAAQF,KAAKp0F,EAAE,GACfu0F,WAAaJ,WAAW/uF,OACxBovF,OAASD,WAAWh6D,EAAE,GAAGk6D,aAAa,GACtCC,OAASH,WAAWv0F,EAAE,GAAGy0F,aAAa,GACtCE,WAAa55E,aAAay5E,QAAQr5E,IAAItI,QACtC+hF,WAAa75E,aAAa25E,QAAQv5E,IAAItI,QACtCwS,cACAwvE,MAAQxrF,OAAOyrF,SACfC,OAAS1rF,OAAO0rF,OAEtB,GAAIF,MAAMt6D,IAAMw6D,OAAOx6D,GAAKs6D,MAAM70F,IAAM+0F,OAAO/0F,EAC3C,OACI2Z,SAAU,MAIlB,IAAMq7E,QAAUL,aAAeM,8BAAev5F,WAAck5F,aAAeK,8BAAev5F,YACrF,IAAK,MAAQ,MAAS,KACrBie,YACAu7E,aAAeP,aAAe5uB,gCAAiB1qE,YAC/C85F,aAAeP,aAAe7uB,gCAAiB1qE,YAC/C+5F,OAASf,MAAMvuD,aAAa+uD,MAAMt6D,EAAGw6D,OAAOx6D,GAC5C86D,OAASf,MAAMxuD,aAAa+uD,MAAM70F,EAAG+0F,OAAO/0F,GAC5Cs1F,iBACF/6D,EAAGs6D,MAAMt6D,IAAMw6D,OAAOx6D,KAAU26D,aAAeE,OAASA,OAAO1lF,KAAK,SAACtY,EAAGwI,GAAJ,OAAUxI,EAAIwI,IAClFI,EAAG60F,MAAM70F,IAAM+0F,OAAO/0F,KAAUm1F,aAAeE,OAASA,OAAO3lF,KAAK,SAACtY,EAAGwI,GAAJ,OAAUxI,EAAIwI,KAEhF21F,YAEN,GAAuB,IAAnBP,QAAQ92F,QAGR,GAFAq3F,SAASf,QAAUc,gBAAgB/6D,EACnCg7D,SAASb,QAAUY,gBAAgBt1F,EAC/Bw0F,SAAWE,OAAQ,CACnB,IAAMc,KAAOF,gBAAgB/6D,EACvBk7D,KAAOH,gBAAgBt1F,EACvB2Q,IAAM6kF,KAAK,GAAKC,KAAK,GAAKA,KAAOD,KACjC3kF,IAAMF,MAAQ8kF,KAAOD,KAAOC,KAC9B9kF,IAAI,GAAKE,IAAI,GACb0kF,SAASf,WAETe,SAASf,SAAW3jF,IAAI,GAAIF,IAAI,GAAKE,IAAI,GAAKF,IAAI,GAAKE,IAAI,IAE/DwU,WAAWkV,GAAKs6D,MAAMt6D,EAAGw6D,OAAOx6D,GAChClV,WAAWrlB,GAAK60F,MAAM70F,EAAG+0F,OAAO/0F,SAGpC2Z,SAASq7E,QAAQ,IAAMM,gBAAgBN,QAAQ,QAE5B,MAAfA,QAAQ,IACRO,SAASf,QAAU76E,SAAS4gB,EACxBo6D,aAAe5uB,gCAAiB1qE,cAChCgqB,WAAWkV,EAAKlxB,OAAOqsF,MAAQb,MAAMt6D,IAAMw6D,OAAOx6D,EAAK85D,MAAMsB,gBAAgBd,MAAMt6D,EAAGw6D,OAAOx6D,IACxFs6D,MAAMt6D,EAAGw6D,OAAOx6D,MAGzBg7D,SAASb,QAAU/6E,SAAS3Z,EACxB40F,aAAe7uB,gCAAiB1qE,cAChCgqB,WAAWrlB,EAAKqJ,OAAOqsF,MAAQb,MAAM70F,IAAM+0F,OAAO/0F,EAAKs0F,MAAMqB,gBAAgBd,MAAM70F,EAAG+0F,OAAO/0F,IACxF60F,MAAM70F,EAAG+0F,OAAO/0F,KAKjC,OACI2Z,SAAU47E,SACVlwE,wBCpEKuwE,2BAAkB,SAAlBA,gBAAmBC,SAAUhI,WAAYmE,SAAUzV,OAC5D,IAEIuZ,WAGAC,WALAjB,YACAC,UAGEiB,OAASjQ,2BAEf8P,SAAS1gG,KAAK6gG,SAASpsB,GAAG,QAAS,WAC/B,IAAMuM,MAAQ0P,0BACdiP,UACIv6D,EAAG47C,MAAM57C,EACTv6B,EAAGm2E,MAAMn2E,GAEb81F,WAAa9D,SAASl5D,QAAQm9D,oBAC9BF,YAAa,IAAI35F,MAAO4K,YACzB4iE,GAAG,OAAQ,WACV,IAAMuM,MAAQ0P,0BAKd,GAJAkP,QACIx6D,EAAG47C,MAAM57C,EACTv6B,EAAGm2E,MAAMn2E,KAETu8E,OAASl8E,KAAKooB,IAAIqsE,SAASv6D,EAAIw6D,OAAOx6D,IAAM,GAAhD,CAGAw6D,OAAOx6D,EAAIl6B,KAAKwQ,IAAI,EAAGxQ,KAAKsQ,IAAIokF,OAAOx6D,EAAGu7D,WAAW79D,QACrD88D,OAAO/0F,EAAIK,KAAKwQ,IAAI,EAAGxQ,KAAKsQ,IAAIokF,OAAO/0F,EAAG81F,WAAW59D,SAErD,IAAMzQ,QAAUysE,mBAAoBlC,SAASl5D,QAAQo9D,iBACjDpB,kBACAC,eACD/C,SAASl5D,QAAQtxB,OAAOwT,mBAC3B6yE,WAAWvoF,QAAQ,SAAA6wF,KAAG,OAAInE,SAAS7B,kBAAkBgG,IAAK1uE,cAC3DmiD,GAAG,MAAO,WACT,IAAMuM,MAAQ0P,0BACdkP,QACIx6D,EAAG47C,MAAM57C,EACTv6B,EAAGm2E,MAAMn2E,GAEb,IAAM+hF,UAAW,IAAI3lF,MAAO4K,UAAY+uF,WAExC,KAAIxZ,OAASwF,SAAW,KAAO1hF,KAAKooB,IAAIqsE,SAASv6D,EAAIw6D,OAAOx6D,IAAM,GAAlE,CAGAw6D,OAAOx6D,EAAIl6B,KAAKwQ,IAAI,EAAGxQ,KAAKsQ,IAAIokF,OAAOx6D,EAAGu7D,WAAW79D,QACrD88D,OAAO/0F,EAAIK,KAAKwQ,IAAI,EAAGxQ,KAAKsQ,IAAIokF,OAAO/0F,EAAG81F,WAAW59D,SAErD,IAAMzQ,QAAUysE,mBAAoBlC,SAASl5D,QAAQo9D,iBACjDpB,kBACAC,cACAW,MAAM,GACP1D,SAASl5D,QAAQtxB,OAAOwT,mBAC3ByM,QAAQ2uE,SAAU,EAClBvI,WAAWvoF,QAAQ,SAAA6wF,KAAG,OAAInE,SAAS7B,kBAAkBgG,IAAK1uE,gBCvBnD4uE,eAjC0B,SAARA,MAAQrE,UAAQ,OAAI,SAAC6D,SAAUhI,YAC5D,IAAMsC,kBAAoB,SAApBA,kBAA8B3sF,MAChC,IAAM2yE,MAAQ0P,0BACR/sD,QAAUk5D,SAASl5D,QAEnB3iC,KADc2iC,QAAQzvB,SAASitF,YAAYC,QACxBpgG,KACnBwvF,IAAMD,8BAAe5sD,QAAQm9D,oBAAoBO,aAAcrgB,OAC/DsgB,aAAe39D,QAAQ49D,gBAAgB/Q,IAAIprD,EAAGorD,IAAI3lF,GACpD22F,aChBgB,iBDgBFxgG,MCfA,eDeyBA,KACvCqR,KAAMhE,KACN2yE,cAEE1uD,SACF9N,SAAU88E,aAAeA,aAAavhE,GAAK,KAC3C0hE,eAAgBH,aAAaG,eAC7B/8C,OAAQ48C,aAAa58C,OACrBhb,SAAU8mD,IACVxvF,WAGJ03F,WAAWvoF,QAAQ,SAAA6wF,KAAG,OAAInE,SAAS7B,kBAAkBgG,IAAK1uE,WAC1D0uD,MAAM7iD,mBAGVuiE,SAASjsB,GAAG,YAAaumB,mBACRvmB,GAAG,YAAaumB,mBAChBvmB,GAAG,WAAY,WACZikB,WAAWvoF,QAAQ,SAAA6wF,KAAG,OAAInE,SAAS7B,kBAAkBgG,KACjDx8E,SAAU,aEnCzBk9E,iCAA2B,SAA3BA,yBAAqCrzF,KAAM2yE,MAAO6b,UAC3D,IAAMl5D,QAAUk5D,SAASl5D,QACnB6sD,IAAMD,8BAAe5sD,QAAQm9D,oBAAoBO,aAAcrgB,MAAMkG,QAAUlG,MAAMkG,QAAQ,GAAKlG,OAClGsgB,aAAe39D,QAAQ49D,gBAAgB/Q,IAAIprD,EAAGorD,IAAI3lF,GACpDwH,KAAMhE,KACN2yE,cAEJ,OACIx8D,SAAU88E,aAAeA,aAAavhE,GAAK,KAC3C0hE,eAAgBH,aAAaG,eAC7B/8C,OAAQ48C,aAAa58C,OACrBhb,SAAU8mD,MCMHmR,eAV0B,SAARA,MAAQ9E,UAAQ,OAAI,SAAC6D,SAAUhI,YAQ5DgI,SAASjsB,GAAG,QAPc,SAApBumB,kBAA8B3sF,MAChC,IAAM2yE,MAAQ0P,0BACRp+D,QAAUovE,iCAAyBrzF,KAAM2yE,MAAO6b,UACtDnE,WAAWvoF,QAAQ,SAAA6wF,KAAG,OAAInE,SAAS7B,kBAAkBgG,IAAK1uE,WAC1D0uD,MAAM7iD,kMCPP,IAAMu9D,iBAAekG,wBAAAC,oBACvBC,KCAmC,SAAP7Y,KAAO4T,UAAQ,OAAI,SAAC6D,SAAUhI,YAC3D+H,2BAAgBC,SAAUhI,WAAYmE,aDFd+E,wBAAAC,iBAEvBC,MAAoBZ,gBAFGU,wBAAAC,iBAGvBC,MAAoBH,gBAHGC,wBAAAC,iBAIvBC,UEDoB,SAAZC,UAAYlF,UAAQ,OAAI,SAAC6D,SAAUhI,YAC5C,IAAI1X,MACAghB,SAOJA,UAAW,EACXhhB,MAAQ0P,0BACRgQ,SAASjsB,GAAG,aAAc,SAACpmE,MACvB2yE,MAAQ0P,0BACRsR,UAAW,EACXhrE,WAAW,WACFgrE,SAGDtJ,WAAWvoF,QAAQ,SAAA6wF,KAAG,OAAInE,SAAS7B,kBAAkBgG,KACjDx8E,SAAU,SAhBA,SAApBw2E,kBAA8B3sF,MAChC,IAAMikB,QAAUovE,iCAAyBrzF,KAAM2yE,MAAO6b,UACtDnE,WAAWvoF,QAAQ,SAAA6wF,KAAG,OAAInE,SAAS7B,kBAAkBgG,IAAK1uE,WAC1D0uD,MAAM7iD,kBAUE68D,CAAkB3sF,OAMvB,OACJomE,GAAG,WAAY,WACdutB,UAAW,OF3BSJ,wBAAAC,iBAKvBC,UGJoB,SAAZG,UAAYpF,UAAQ,OAAI,SAAC6D,SAAUhI,YAC5C+H,2BAAgBC,SAAUhI,WAAYmE,UAAU,MHFxBgF,kBIPfK,OACTC,aACI7uB,aAAc,SAAAA,aAAA/qE,KAAG,OAAIA,iTCAd65F,mBCaX,SAAAA,kBAAavF,2KAAUwF,CAAAh7F,KAAA+6F,mBACnB/6F,KAAKw1F,SAAWA,SAChBx1F,KAAK01F,UAAW,EAChB11F,KAAKi7F,UAAY,UACjBj7F,KAAKqwF,WACLrwF,KAAK2lF,IAAMp7E,cACXvK,KAAKk7F,eACL3sB,sBAAsBvuE,KAAM66F,OAC5B76F,KAAK6M,OAAO7M,KAAK4lB,YAAYu1E,6UAiD7B,OAAI/1F,UAAO1D,QACP1B,KAAKqwF,QAAUphB,eAAejvE,KAAKqwF,QAANjrF,UAAA1D,QAAA,OAAA6L,EAAAnI,UAAA,IACtBpF,MAEJA,KAAKqwF,kDAKZ,OADArwF,KAAK01F,UAAW,EACT11F,6CAKP,OADAA,KAAK01F,UAAW,EACT11F,mDAIP,OAAOA,KAAK01F,+CAyBZ,OAAO11F,qDAWEjH,KAAMmmB,IAEf,OADAlf,KAAKk7F,YAAYniG,MAAQmmB,GAClBlf,6DA/FP,yDAUA,MAAO,kDAIP,MAAO,gDAWP,OAAO,wuCChCMo7F,0vBAA4BL,iUA2BtB5oF,KAA0C/M,UAAA1D,OAAA,QAAA6L,IAAAnI,UAAA,IAAAA,UAAA,OAAxBi2F,gBAAwBj2F,UAAA1D,OAAA,EAAA0D,UAAA,QAAAmI,EAAPhG,MAAOnC,UAAA1D,OAAA,EAAA0D,UAAA,QAAAmI,EAI7D,OAHevN,KAAKw1F,SAASl5D,QAAQg/D,SAC9BxyF,QAAQ,SAAAyyF,OAAK,OAAmC,IAA/BA,MAAM1uF,SAAS2uF,aACnCD,MAAME,sBAAsBJ,gBAAiBlpF,IAAIkV,KAAM9f,SACpDvH,6uCC7BM07F,owBAA4BX,iTAY9BpiE,UAAWsvD,SAAUj9E,KAAM81B,UAAWonD,WACjD,OAAOF,YAAYrvD,UAAWsvD,SAAUj9E,KAAM81B,UAAWonD,mEAiBzD,OAAI9iF,UAAe1D,QACf1B,KAAK27F,gBAALv2F,UAAA1D,QAAA,OAAA6L,EAAAnI,UAAA,GACOpF,MAEJA,KAAK27F,sDAIZ,OAAO37F,yCAIP,OAAOA,slBCpER,IA2GM47F,wBAAmB,SAAnBA,iBAAoBt/D,QAASu/D,gBAAiBC,SACvD,IAAMjvF,OAASyvB,QAAQzvB,SACjBi0B,UAAYj0B,OAAOkvF,aACnBC,YAAcnvF,OAAOmvF,YAC3BjU,6BAAc8T,iBAAiBppC,UAA/B,IAAA/2C,OAA6CsgF,YAA7C,KAAAtgF,OAA4DolB,YAC3CnH,MAAM,UAAWmiE,QAAU,QAAU,8vCCuB3CG,8uBAxHYP,4TAmChB5M,aAAc7jE,SACjB,IAAI8S,EACAv6B,EACAi4B,MACAC,OACE7uB,OAAS7M,KAAKqwF,QACd6L,QAAUrvF,OAAOsvF,IACjB3G,SAAWx1F,KAAKw1F,SAChB8D,WAAat5F,KAAKo8F,iBAClBnmE,WAAaqjE,WAAWuC,gBACxBQ,UAAY/C,WAAW79D,MACvB6gE,WAAahD,WAAW59D,OACxBsgE,YAAcnvF,OAAOmvF,YACrBO,wBAA0B1vF,OAAOkvF,aAEvC,GAAyB,OAArB9wE,QAAQ9N,SAER,OADAnd,KAAKw8F,KAAKlD,YACHt5F,KAGX,IAAMy8F,UAAYjH,SAASl5D,QAAQo9D,gBApBTgD,sBDlDS,SAA9BC,4BAA+B1xE,QAAS2sE,KAAMG,YACvD,IAAIv2C,GACA2S,GACAF,GACAG,GACAwkC,OACAC,OACA+D,UACEz/E,SAAW8N,QAAQ9N,SACnB0L,WAAaoC,QAAQpC,eACrBg0E,KAAOh0E,WAAWkV,EAClB++D,KAAOj0E,WAAWrlB,EAExB,GAAiB,OAAb2Z,SACA,OAAO,KAGX,IAAM06E,MAAQD,KAAK75D,EAAE,GACf+5D,MAAQF,KAAKp0F,EAAE,GACfu5F,QAAuC,WAA7BlF,MAAMjyE,YAAYtqB,OAC5B0hG,QAAuC,WAA7BlF,MAAMlyE,YAAYtqB,OAC5B08F,OAAM,GAAAt8E,OAAMq8E,WAAWh6D,EAAE,IACzBm6D,OAAM,GAAAx8E,OAAMq8E,WAAWv0F,EAAE,IACzBy5F,UAAY9/E,SAAS66E,QACrBkF,UAAY//E,SAAS+6E,QAU3B,GARI+E,WAAaA,UAAU,aAAcp0F,OACrC+vF,OAASqE,UAAU,GACnBpE,OAASoE,UAAU,KAEnBrE,OAASqE,cACTpE,OAASqE,eAEbN,UAAYK,WAAaC,UAAY,OAAUD,UAAY,WAAa,aACpErE,QAAUA,OAAOl3F,OACjB,GAAkC,SAA7Bo2F,MAAMlyE,YAAYtqB,QAAqByhG,QACxCv7C,GAAK2S,QAAK5mD,EACVqvF,UAAY,iBACT,CACH,IAEIO,MACAC,MAHEtmF,OAAS+gF,MAAM/gF,SACfumF,UAAyC,SAA7BxF,MAAMjyE,YAAYtqB,OAGpC,GAAI+hG,UAAW,CACX,IAAIC,cAAgBxmF,OAAO7Q,QAAQ2yF,OAAO,IACtC2E,cAAgBzmF,OAAO7Q,QAAQ2yF,OAAOA,OAAOl3F,OAAS,IAF/C87F,OAAAC,sBAGuBH,cAAeC,eAAerqF,KAAK,SAACtY,EAAGwI,GAAJ,OAAUxI,EAAIwI,IAHxE,GAGVk6F,cAHUE,OAAA,GAGKD,cAHLC,OAAA,GAIXL,MAAQrmF,OAAOwmF,eACfF,MAAQtmF,OAAOymF,oBAEfJ,MAAQvE,OAAO,GACfwE,MAAQxE,OAAOA,OAAOl3F,OAAS,GAEnC8/C,GAAKq2C,MAAM6F,cAAcP,OACzBhpC,GAAK0jC,MAAM6F,cAAcN,OACzBjpC,IAAMkpC,UAAYxF,MAAM8F,eAAiB,OAG7Cn8C,GAAK2S,QAAK5mD,EAEd,GAAIsrF,QAAUA,OAAOn3F,OACjB,GAAkC,SAA7Bm2F,MAAMjyE,YAAYtqB,QAAqB0hG,QACxC/oC,GAAKG,QAAK7mD,EACVqvF,UAAY,eACT,CACH,IAEIgB,MACAC,MAHE/mF,QAASghF,MAAMhhF,SAIrB,GAH+C,SAA7BghF,MAAMlyE,YAAYtqB,OAGrB,CACX,IAAIwiG,cAAgBhnF,QAAO7Q,QAAQ4yF,OAAO,IACtCkF,cAAgBjnF,QAAO7Q,QAAQ4yF,OAAOA,OAAOn3F,OAAS,IAF/Cs8F,OAAAP,sBAGuBK,cAAeC,eAAe7qF,KAAM,SAACtY,EAAGwI,GAAJ,OAAUA,EAAIxI,IAHzE,GAGVkjG,cAHUE,OAAA,GAGKD,cAHLC,OAAA,GAIXJ,MAAQ9mF,QAAOgnF,eACfD,MAAQ/mF,QAAOinF,oBAEfH,MAAQ/E,OAAO,GACfgF,MAAQhF,OAAOA,OAAOn3F,OAAS,GAEnCuyD,GAAK6jC,MAAM4F,cAAcE,OACzBxpC,GAAK0jC,MAAM4F,cAAcG,OACzBzpC,IAAmC,SAA7B0jC,MAAMlyE,YAAYtqB,OAAoBw8F,MAAM6F,eAAiB,OAGvE1pC,GAAKG,QAAK7mD,EAGd,GAAKyvF,SAAWD,UAAa9xE,QAAQ2uE,QAAS,CAC1C,GAAIiD,KAAM,KAAAoB,MAAAR,qBACKZ,KADL,GACLr7C,GADKy8C,MAAA,GACD9pC,GADC8pC,MAAA,GAGV,GAAInB,KAAM,KAAAoB,MAAAT,qBACKX,KADL,GACL7oC,GADKiqC,MAAA,GACD9pC,GADC8pC,MAAA,IAKd,OACI1nF,WACIgrC,MACA2S,MACAF,MACAG,OAEJwoC,qBChCiCD,CAA4B1xE,QAASwxE,UAAU7E,KAC5E6E,UAAU7zF,QADN4N,UArBkBkmF,sBAqBlBlmF,UAAWomF,UArBOF,sBAqBPE,UAEb1pC,WAAajoC,QAAQ2uE,SAAW/sF,OAAOqmD,WAE3B,SAAd0pC,WAAsC,aAAdA,WACxB7+D,EAAIl6B,KAAKsQ,IAAIqC,UAAUgrC,GAAIhrC,UAAU29C,IACrC14B,MAAQ53B,KAAKooB,IAAIzV,UAAU29C,GAAK39C,UAAUgrC,MAE1CzjB,EAAI,EACJtC,MAAQ4gE,WAEM,SAAdO,WAAsC,eAAdA,WACxBp5F,EAAIK,KAAKsQ,IAAIqC,UAAUy9C,GAAIz9C,UAAU49C,IACrC14B,OAAS73B,KAAKooB,IAAIzV,UAAU49C,GAAK59C,UAAUy9C,MAE3Cv4B,OAAS4gE,WACT94F,EAAI,GAERxD,KAAKm+F,KAAK7E,YAEV,IAAMpkB,SAEEn3C,IACAv6B,IACAi4B,YACAC,gBAMFo2D,WAAa9xF,KACbwyD,UAHiBw1B,YAAYD,6BAAc9xD,YAAa,KAAM,GAAlC,IAAAva,OAC1BsgF,YAD0B,KAAAtgF,OACX6gF,0BAEU9pC,UAAU,QAAQznD,KAAKkqE,QAClD+a,aAAez9B,UAAUM,QAAQj+B,OAAO,QAC7BsS,KAAK,YCpGE,SAAnBi3D,iBAAmB5I,UAAQ,OAAI,SAAC6D,SAAUhI,YACnD,IAAIxQ,QACAyY,WACEh9D,QAAUk5D,SAASl5D,QACnB+hE,OAAS,SAATA,OAAUpzE,SACZomE,WAAWvoF,QAAQ,SAAAua,QAAM,OAAImyE,SAAS7B,kBAAkBtwE,OAAQ4H,YAE9DuuE,OAASjQ,2BAEf8P,SAAS1gG,KAAK6gG,SAASpsB,GAAG,QAAS,WAC/B,IAAMuM,MAAQ0P,0BACdiQ,WAAah9D,QAAQm9D,oBACrB5Y,QAAUlH,MAAMkH,UACjBzT,GAAG,OAAQ,WACV,IAAMuM,MAAQ0P,0BACdxI,QAAQ9iD,GAAK47C,MAAMnkB,GACnBqrB,QAAQr9E,GAAKm2E,MAAMlkB,GACnB,IAAMh6B,MAAQ69D,WAAW79D,MACnBC,OAAS49D,WAAW59D,OACpBqC,EAAIl6B,KAAKsQ,IAAIsnB,MAAQolD,QAAQplD,MAAO53B,KAAKwQ,IAAIwsE,QAAQ9iD,EAAG,IACxDv6B,EAAIK,KAAKsQ,IAAIunB,OAASmlD,QAAQnlD,OAAQ73B,KAAKwQ,IAAIwsE,QAAQr9E,EAAG,IAC1D4wD,GAAK5wD,EAAIq9E,QAAQnlD,OACjBy4B,GAAKp2B,EAAI8iD,QAAQplD,MAEvB,GAAIsC,GAAK,GAAKo2B,IAAM14B,OAASj4B,GAAK,GAAK4wD,IAAM14B,OAAQ,CACjD,IAAMzQ,QAAUysE,mBAAoBp7D,QAAQo9D,iBACxCpB,UACIv6D,IACAv6B,KAEJ+0F,QACIx6D,EAAGo2B,GACH3wD,EAAG4wD,KAER93B,QAAQtxB,OAAOwT,mBAClB6/E,OAAOpzE,YAEZmiD,GAAG,MAAO,WACT,IAAM3xC,MAAQ69D,WAAW79D,MACnBC,OAAS49D,WAAW59D,OACpBqC,EAAIl6B,KAAKsQ,IAAIsnB,MAAQolD,QAAQplD,MAAO53B,KAAKwQ,IAAIwsE,QAAQ9iD,EAAG,IACxDv6B,EAAIK,KAAKsQ,IAAIunB,OAASmlD,QAAQnlD,OAAQ73B,KAAKwQ,IAAIwsE,QAAQr9E,EAAG,IAC1D4wD,GAAK5wD,EAAIq9E,QAAQnlD,OACjBy4B,GAAKp2B,EAAI8iD,QAAQplD,MAEvB,GAAIsC,GAAK,GAAKo2B,IAAM14B,OAASj4B,GAAK,GAAK4wD,IAAM14B,OAAQ,CACjD,IAAMzQ,QAAUysE,mBAAoBp7D,QAAQo9D,iBACxCpB,UACIv6D,IACAv6B,KAEJ+0F,QACIx6D,EAAGo2B,GACH3wD,EAAG4wD,IAEP8kC,MAAM,GACP58D,QAAQtxB,OAAOwT,mBAClByM,QAAQ2uE,SAAU,EAClByE,OAAOpzE,cD2CSmzE,CAAiB5I,SAAjB4I,CAA2BrW,6BAAc/nF,OAAQ,SAAU8xF,cAE9DjoF,MAAM2oD,WACNrrB,KAAK,SAAU0hD,OACZ,IAAItR,QAAUwQ,6BAAc/nF,MAE5B,IAAK,IAAMjG,OADXm5D,aAAeqkB,QAAUA,QAAQrkB,aAAaqyB,SAASryB,WAAWqyB,WAChDsD,WACPtuF,eAAe5B,KAAKkwF,MAAO9uF,MAC9Bk3E,aAAa4X,MAAM9uF,OAASw9E,QAAQxkB,KAAKh5D,IAAK8uF,MAAM9uF,QAK1EukG,aAAexyB,sBAAsBowB,QAAQH,aAAc/7F,KAAK2lF,IAAKqW,aAI3E,OAHA/L,aAAarS,QAAQ0gB,aAAav7F,KAAK,MAAM,GAC7CktF,aAAarS,QAAQse,QAAQp7D,WAAW,GAEjC9gC,uCAGLs5F,YACFsC,wBAAiB57F,KAAMs5F,WAAWuC,iBAAiB,qCAGjDvC,YACFsC,wBAAiB57F,KAAMs5F,WAAWuC,iBAAiB,2DA9GnD,OACIE,aAAc,sBACdj7D,UAAW,GACXk7D,Yb1Be,Oa2BfG,KACIJ,aAAc,gBACdj7D,UAAW,IAEfoyB,YACIqyB,SAAU,sDAMlB,MAAO,mCE7BFgZ,eACTl8D,SAAU,WACV5G,MAAO,EACPC,OAAQ,GCVCy/D,8BACTa,YDHuB,OCIvBD,aAAc,cACdyC,mBAAoB,qBACpB19D,UAAW,GACX1lB,KACIqjF,OAAQ,GAEZC,SACItsC,QAAS,EACTusC,kBAAmB,GACnBC,UAAW,EACXC,UAAW,SACXC,UAAW,UACXC,UAAW,MACXN,OAAQ,GACRO,UAAW,IACXl+D,UAAW,4BACXm+D,gBAAiB,oCAErBC,OACI5kE,KAAM,GACN6kE,UAAU,EACVpD,aAAc,gBACdj7D,UAAW,GACXsT,MAAO,2BCxBFgrD,mBAAc,SAAdA,YAAevtC,OAAQwtC,IAAKC,YAAazyF,QAClD,IAAI0yF,SACIxhE,EAA8BuhE,YAA9BvhE,EAAGv6B,EAA2B87F,YAA3B97F,EAAGg8F,UAAwBF,YAAxBE,UAAWC,SAAaH,YAAbG,SAEnBC,WADgB7yF,OAAOqyF,MAAMC,SACA,EAAItyF,OAAOqyF,MAAM5kE,KAEpD,GFLsB,SEKlBu3B,QFRmB,UEQMA,OAAwB,CACjD,IAAI3zD,MAAQ,EACR0mC,KAAO46D,UAAY,EACjBG,WAAaN,IAAI77F,EAAI67F,IAAI3jE,OACzBkkE,UAAYp8F,EAAIg8F,UAElBH,IAAI77F,EAAIA,GACRtF,MAAQmhG,IAAI77F,EAAIA,EAChBohC,MAAQ+6D,YAAcC,UAAaA,UAAYP,IAAI77F,EAAK67F,IAAI3jE,QAAU,GAC/DkkE,UAAYD,aACnB/6D,KAAO/gC,KAAKooB,IAAIzoB,GAAK67F,IAAI77F,EAAI67F,IAAI3jE,SAAW,GAEhD6jE,SAAWrhG,MAAQ0mC,KAAO86D,WAAa,MACpC,CACH,IAAIxhG,OAAQ,EACR0mC,MAAO66D,SAAW,EAChBI,UAAYR,IAAIthE,EAAIshE,IAAI5jE,MACxBqkE,SAAW/hE,EAAI0hE,SAEjBJ,IAAIthE,EAAIA,GACR7/B,OAAQmhG,IAAIthE,EAAIA,EAChB6G,OAAQi7D,WAAaC,SAAYA,SAAWT,IAAIthE,EAAKshE,IAAI5jE,OAAS,GAC3DqkE,SAAWD,YAClBj7D,MAAO/gC,KAAKooB,IAAI8R,GAAKshE,IAAIthE,EAAIshE,IAAI5jE,QAAU,GAE/C8jE,SAAWrhG,OAAQ0mC,MAAO86D,WAAa,EAE3C,OAAOH,UAUEQ,kBAAa,SAAbA,WAAczjE,QAAS+F,SAAUk9D,UAC1C,IAAMS,aAAe1jE,QAAQ2jE,cACvBC,kBAAoB5jE,QAAQ6jE,mBAC5BtzF,OAASyvB,QAAQ+zD,QACjB2L,YAAcnvF,OAAOmvF,YACrBoE,UAAYvzF,OAAOqyF,MACnBp+D,UAAYgrC,sBAAsBs0B,UAAUrE,aAAcz/D,QAAQqpD,IAAK94E,OAAOmvF,aAEpFgE,aAAarmE,MAAM,UAAW,SAC9BqmE,aAAajtC,KAAK,QAAlB,GAAAr3C,OAA8BolB,UAAU/9B,KAAK,OFlDrB,SEmDpBs/B,UFlDqB,UEkDQA,UAC7B29D,aAAarmE,MAAM,MAAnB,GAAAje,OAA6B6jF,SAA7B,OACAS,aAAarmE,MAAM,OAAQ,IAC3BumE,kBAAkBvmE,MAAM,MAAxB,GAAAje,OAAkC6jF,SAAlC,OACAW,kBAAkBvmE,MAAM,OAAQ,MFrDV,WEuDtB0I,SAA8B29D,aAAarmE,MAAM,MAAO,QAAUqmE,aAAarmE,MAAM,MAAnB,IAAAje,OAC1D0kF,UAAU9lE,KADgD,OAElE0lE,aAAarmE,MAAM,OAAnB,GAAAje,OAA8B6jF,SAA9B,OFzDsB,WE0DtBl9D,SAA8B69D,kBAAkBvmE,MAAM,MAAO,QAAUumE,kBAAkBvmE,MAAM,MAAxB,IAAAje,OAC/D0kF,UAAU9lE,KAAO,EAD8C,OAEvE4lE,kBAAkBvmE,MAAM,OAAxB,GAAAje,OAAmC6jF,SAAnC,QAEJS,aAAapiB,QAAb,GAAAliE,OAAwBsgF,YAAxB,mBAAqD,GACrDgE,aAAapiB,QAAb,GAAAliE,OAAwBsgF,YAAxB,mBAAAtgF,OAAqD4gB,QAAQ+jE,oBAAqB,GAClFL,aAAapiB,QAAb,GAAAliE,OAAwBsgF,YAAxB,mBAAAtgF,OAAqD2mB,WAAY,GACjE69D,kBAAkBtiB,QAAlB,GAAAliE,OAA6BsgF,YAA7B,8BAAqE,GACrEkE,kBAAkBtiB,QAAlB,GAAAliE,OAA6BsgF,YAA7B,8BAAAtgF,OAAqE4gB,QAAQ+jE,oBAAqB,GAClGH,kBAAkBtiB,QAAlB,GAAAliE,OAA6BsgF,YAA7B,8BAAAtgF,OAAqE2mB,WAAY,63CCjE7E11B,2BAAsBrO,oBAAtBqO,kBAEF2zF,oBAAa,SAAbA,WAAcl+F,UAAWk/C,SAAUw5C,aAAtB,IAAAxmE,KAAA,OAAAisE,wBAAAjsE,QACdi1C,gCAAiBzqE,SAAW,SAACrF,OAC1B,OAAIA,iBAAiBkT,2BACVmuF,YAAYrhG,OAEhB47E,4BAAe57E,MAAO6nD,YALlBi/C,wBAAAjsE,KAOdmkE,8BAAev5F,WAAa,SAAAzF,OAAK,OAAKA,iBAAiBkT,2BAAoBmuF,YAAYrhG,OACpF2I,UAAU3I,MAAM2lD,QAAQ,MARbmhD,wBAAAjsE,KASdi1C,gCAAiB1qE,YAAc,SAAApF,OAAK,OAAIqhG,YAAYrhG,SATtC66B,MAYbksE,sCAA+B,SAA/BA,6BAAgCp+F,UAAWq+F,kBAAZ,OAAiCx0B,aAAa7pE,UAAWq+F,mBAsBjFC,0BAAmB,SAAnBA,iBAAoBtiF,WAAoC,IAAzBvR,OAAyBzH,UAAA1D,OAAA,QAAA6L,IAAAnI,UAAA,GAAAA,UAAA,MAAZk3B,QAAYl3B,UAAA1D,OAAA,EAAA0D,UAAA,QAAAmI,EAC7DozF,eACEtiF,QAAUD,UAAUE,UACpBtT,KAAOqT,QAAQrT,KACfW,OAAS0S,QAAQ1S,OACjBqzF,UAAYnyF,OAAOmyF,UACnBzgF,aAAeH,UAAUI,kBACzBoiF,WAAaxiF,UAAU/O,gBACvBwxF,aAAevkE,QAAQukE,iBACvBh4E,WAAald,OAAO+H,OAAO,SAAA5a,GAAC,OAAIA,EAAEwC,OAASy5F,yBAAU11F,YACrD0pB,SAAWpd,OAAO+H,OAAO,SAAA5a,GAAC,OAAIA,EAAEwC,OAASy5F,yBAAU31F,UACnD0hG,oBAAsBn1F,OAAOuf,KAAK,SAAApyB,GAAC,OAAsC,IAAlC+nG,aAAa56F,QAAQnN,EAAEC,QAC9DgoG,QAAU/1F,KAAKtJ,OAEjBo5F,YAIAx+D,QAJAw+D,YACAlD,KAGAt7D,QAHAs7D,KACAoJ,oBAEA1kE,QAFA0kE,oBACAC,UACA3kE,QADA2kE,UAEEC,aAAeZ,oBAAW,KAAM,KAAMxF,aAAavxB,gCAAiB1qE,aACpEsiG,cAAgB,SAAhBA,cAAiB51F,MAAOjQ,MAC1B,IAAI7B,MACA2nG,eACAC,aACE3iF,UACAzc,MAAQsc,aAAahT,OAAOtJ,MAC5Bq/C,SAAW/iC,aAAahT,OAAOoT,IAAItI,UAAYkzD,gCAAiBzqE,SAAWmiG,UAAU11F,OAAS,EAC9F+1F,YAAcd,sCAA6BF,oBAAW,SAAAp/F,KAAG,OAAIA,KAAKogD,SAAUw5C,aAAax/F,MAC3F4lG,cAEJ,GAAc,OAAVznG,MAAgB,CAChB,IAAI8nG,WAAajmG,OAASm9F,8BAAev5F,WAAa8L,KAAK/C,IAAI,SAAAnP,GAAC,OAAIA,EAAEmJ,SAArDu/F,2BACT,IAAI3qF,IAAI7L,KAAK/C,IAAI,SAAAnP,GAAC,OAAIA,EAAEmJ,WAChCs/F,WAAaA,WAAW7tF,OAAO,SAAA5a,GAAC,MAAU,KAANA,IACpC,IAAM2oG,UAAY7J,KAAKxjD,MAAM,GACvBstD,UAAY9J,KAAK+J,MAAM,GACvBC,SAAWhK,KAAKt9D,KAAK,GACrBunE,gBAAkBJ,WAAaC,WAAaE,WAAab,QAAU,GACjEzlG,OAASm9F,8BAAev5F,WAEhCqiG,WAAWz4F,QAAQ,SAAC5H,IAAK1I,GACrB,IAAIuB,IACE+nG,mBAAqBd,oBAAoBz1F,OAE/C,GAAIu2F,oBAAsBA,mBAAmBpgG,QAAUq/F,QAAU,EAAG,CAChEhnG,IAAMmH,IACN,IAAI6gG,MACAtoG,MAAO,IAWX,GARIooG,iBACAE,MACIzmG,KAAM,OACN84C,MAAOqtD,UAAUO,SAAS9gG,KAC1BygG,MAAOD,UAAUO,SAAS/gG,KAC1Bo5B,KAAMsnE,SAASM,QAAQhhG,KAAO2L,OAAO+xF,YAGzCkD,mBAAmBpgG,OAAS,EAAG,CAC/B,IAAMygG,aAAe7mG,OAASiuE,gCAAiBzqE,SAAWwiG,YAAYvnG,IAAKunD,UAAYvnD,IACvF2kB,OAAOxY,MAAM67F,KAAD,GAAArmF,OAAUymF,gBACtBL,mBAAmBh5F,QAAQ,SAACgP,SACxBupF,aAAe9iF,aAAazG,SAAS7V,MACrCxI,MAAQuR,KAAKxS,GAAG6oG,cAChB,IAAMppF,aAAe2oF,WAAWh4F,OAAOy4F,cAAcppF,eAC/CmqF,iBAAmB5B,sCACrBF,oBAAWroF,aAAcqpC,SAAUw5C,aAAarC,8BAAev5F,aACnEkiG,eAAiBgB,iBAAiB3oG,OAClCilB,OAAOxY,OACHzM,MAAK,GAAAiiB,OAAK5D,SAAL4D,OAAesjF,WACpBrlE,OACI0oE,cAAA,GAAA3mF,OAAkB7O,OAAO4xF,OAAzB,QAEJ39D,UAAS,GAAAplB,OAAK7O,OAAOmvF,YAAZ,kBAETviG,MAAK,GAAAiiB,OAAK0lF,gBACVtgE,UAAS,GAAAplB,OAAK7O,OAAOmvF,YAAZ,2BAGd,CACHqF,aAAe9iF,aAAaujF,mBAAmB,IAAI7/F,MACnDxI,MAAQuR,KAAKxS,GAAG6oG,cAChB,IAAMppF,aAAe2oF,WAAWh4F,OAAOy4F,cAAcppF,eAC/CmqF,iBAAmB5B,sCACrBF,oBAAWroF,aAAcqpC,SAAUw5C,aAAarC,8BAAev5F,aACnEkiG,eAAiBgB,iBAAiB3oG,OAClC,IAAM0oG,cAAe7mG,OAASiuE,gCAAiBzqE,SAAWwiG,YAAYvnG,IAAKunD,UAAYvnD,IACvF2kB,OAAOxY,MACH67F,MAEItoG,MAAK,GAAAiiB,OAAKymF,eACVrhE,UAAS,GAAAplB,OAAK7O,OAAOmvF,YAAZ,kBAGTviG,MAAK,GAAAiiB,OAAK0lF,gBACVtgE,UAAS,GAAAplB,OAAK7O,OAAOmvF,YAAZ,2BAKrBjiG,IAAMwR,MAEN61F,eAAiBE,YADjB7nG,MAAQyH,KAERwd,OAAOxY,OACHzM,MAAK,GAAAiiB,OAAK3hB,KAAL2hB,OAAWsjF,WAChBl+D,UAAS,GAAAplB,OAAK7O,OAAOmvF,YAAZ,kBAETviG,MAAK,GAAAiiB,OAAK0lF,gBACVtgE,UAAS,GAAAplB,OAAK7O,OAAOmvF,YAAZ,uBAKzB,OAAOt9E,QAEP4jF,cAAgB,WAEpB,GAAIvB,QAAU,GAAKD,oBACfH,YA1Ie,SAAjB4B,eAAkBlkF,QAASie,QAASmkE,kBACtC,IAAM3lF,QACE9P,KAA6BqT,QAA7BrT,KAAMW,OAAuB0S,QAAvB1S,OAAQi1F,WAAeviF,QAAfuiF,WACtB9lF,KAAK5U,KAAKyF,OAAO1D,IAAI,SAAAnP,GAAC,OAAIA,EAAEC,QAH+B,IAInD+hG,YAA2Bx+D,QAA3Bw+D,YAAamG,UAAc3kE,QAAd2kE,UAarB,OAZAj2F,KAAKlC,QAAQ,SAAChQ,GACV,IAAMsiB,OACNzP,OAAO7C,QAAQ,SAAC05F,SAAUhqG,GACtB,IAAM8oD,SAAWkhD,SAASnsF,UAAYkzD,gCAAiBzqE,SAAWmiG,UAAUuB,SAASzpG,MAAQ,EACvFkf,aAAeuqF,SAASlnG,OAASy5F,yBAAU31F,SAAWwhG,WAAWh4F,OAAOpQ,GAAGyf,eAG3Exe,MAFc+mG,sCAA6BF,oBAAWroF,aACxDqpC,SAAUw5C,aAAa0H,SAASnsF,SAAUoqF,iBAChCa,CAAYxoG,EAAEN,IAC5B4iB,IAAIlV,KAAKzM,SAEbqhB,KAAK5U,KAAKkV,OAEPN,KAyHWynF,EACVv3F,UACAW,cACAi1F,uBACDtkE,QAAS4kE,cACZoB,cAAgB,YACb,CACHz5E,WAAW/f,QAAQ,SAACkB,MAChB,IAAM1O,KAAO0O,KAAKqM,QAAUrM,KAAKqM,QAAUrM,KAAK1O,KAChDqlG,eAAWjlF,OAAA8lF,2BAAOb,aAAPa,2BAAuBL,cAAcn3F,KAAKjR,KAAMuC,UAG/D,IAAMmnG,YAAcjB,2BAAAkB,WAAQ7rF,IAAX2qF,2BAAkBtoG,OAAOwlB,OAAOsiF,yBACxBD,QAAU,EAAIh4E,SAASrV,OAAO,SAAA5a,GAAC,OAAqC,IAAjC2pG,YAAYx8F,QAAQnN,EAAEC,QAC5EgwB,UAEWjgB,QAAQ,SAACkB,MACtB,IAAM1O,KAAO0O,KAAKqM,QAAUrM,KAAKqM,QAAUrM,KAAK1O,KAChDqlG,eAAWjlF,OAAA8lF,2BAAOb,aAAPa,2BAAuBL,cAAcn3F,KAAKjR,KAAMuC,UAInE,OACIojG,QAASiC,YACT2B,8BAQKK,mBACT56D,SAAU,SAAAA,SAAC/8B,KAAM6B,OAAQyvB,SAErB,OADeokE,0BAAiB11F,KAAM6B,OAAQyvB,WAKzCsmE,iBAAmB,0SC3LXC,2BAIjB,SAAAA,gKAAeC,CAAA9iG,KAAA6iG,SACX7iG,KAAK+iG,OAAS,KACd/iG,KAAKi7F,UAAY2H,iBACjB5iG,KAAKgjG,WAAa,KAClBhjG,KAAKqwF,QAAUrwF,KAAK4lB,YAAYu1E,iSAahC,OAAI/1F,UAAE1D,OAAS,GACX1B,KAAKqwF,QAAUphB,eAAejvE,KAAKqwF,QAANjrF,UAAA1D,QAAA,OAAA6L,EAAAnI,UAAA,IACtBpF,MAEJA,KAAKqwF,8CAORrmF,MAIJ,OAHAhK,KAAK+iG,OAAS/4F,KAAK4S,MACnB5c,KAAKi7F,eAA8B1tF,IAAlBvD,KAAK24F,SAAyB34F,KAAK24F,SAAWC,iBAC/D5iG,KAAKgjG,WAAah5F,KAAK5H,UAChBpC,6CAGFijG,KAEL,OADAjjG,KAAKq8B,SAAW4mE,IACTjjG,2CAGH0zB,OACJ,IAAI1oB,KACE6B,OAAS7M,KAAKqwF,QACdsO,kBAAoB9xF,OAAO8xF,kBAC3Bv8F,UAAYpC,KAAKgjG,WACjBjE,UAAYlyF,OAAOkyF,UACnBniF,MAAQ5c,KAAK+iG,OAUnB,GARA/iG,KAAKkjG,OAASxvE,OAEV1oB,KADA4R,iBAAiB/T,MACV+T,MAEAxa,qBAAqBmT,SAAWnT,UAAUpC,KAAK+iG,OAAQ/iG,KAAKq8B,UAC/DsmE,kBAAS3iG,KAAKi7F,WAAWj7F,KAAK+iG,OAAQ/iG,KAAK6M,SAAU7M,KAAKq8B,qBAG9C9mB,SAChBme,MAAMwqD,KAAKlzE,YACR,CACH,IAAI0zF,QAAU1zF,KACVs3F,cAAgB,UAEhBnzE,eAAenkB,QACf0zF,QAAU1zF,KAAK0zF,QACf4D,cAAgBt3F,KAAKs3F,eAGzB,IAAM7+D,KAAOukD,YAAYt0D,MAAO,OAAQ4uE,eAAhB,GAAA5mF,OAAmC7O,OAAOmvF,YAA1C,uBACpB,SAAAljG,GAAC,OAAIA,IAET,GAAsB,UAAlBwpG,cAA2B,CAC3B,IAAMa,MAAQnb,YAAYvkD,KAAM,SAAU,GAAjB,GAAA/nB,OAAwB7O,OAAOmvF,YAA/B,mBACnBoH,MAAQpb,YAAYmb,MAAO,SAAU,GAAlB,GAAAznF,OAAyB7O,OAAOmvF,YAAhC,yBACnBlhF,KAAOktE,YAAYob,MAAO,KAAM1E,QAAd,GAAAhjF,OAA0B7O,OAAOmvF,YAAjC,uBACxBlhF,KAAKqsB,KAAK,SAAUruC,EAAGN,GACnBuvF,6BAAc/nF,MAAM49E,QAApB,GAAAliE,OAA+B7O,OAAOmvF,YAAtC,uBAAAtgF,OAAuEljB,IAAK,KAElEwvF,YAAYltE,KAAM,KAAM,SAAAhiB,GAAC,OAAIA,GAAlB,GAAA4iB,OAAwB7O,OAAOmvF,YAA/B,wBACnB70D,KAAK,SAAUruC,GACjBivF,6BAAc/nF,MAAMk+E,KAAKplF,SAE1B,CACH,IAAMgiB,MAAOktE,YAAYvkD,KAAM,MAAOi7D,QAAd,GAAAhjF,OAA0B7O,OAAOmvF,YAAjC,iBAClB76B,OAAQ6mB,YAAYltE,MAAM,OAAQ,SAAAhiB,GAAC,OAAIA,GAApB,GAAA4iB,OAA0B7O,OAAOmvF,YAAjC,qBACzB76B,OAAMpO,KAAK,QAAX,GAAAr3C,OAAuB7O,OAAOmvF,YAA9B,qBACAjT,yBAAUjuE,OACN2jF,OAAQM,YAEZhW,yBAAU5nB,QACNh8B,QAAS,eACTk+D,eAAA,GAAA3nF,OAAmB7O,OAAOulD,QAA1B,QAGJ+O,OAAMh6B,KAAK,SAAUruC,GACjB,IAAMwqG,GAAKvb,6BAAc/nF,MAEzB,GADAsjG,GAAGplB,KAAK,IACJplF,aAAaI,OACb,GAAe,SAAXJ,EAAEwC,KAAiB,CACnB,IAAMgpC,IAAM0jD,YAAYsb,GAAI,OAAQ,IAC9B3/E,KAAOqkE,YAAY1jD,IAAK,QAAS,IACjCq9D,MAAQ7oG,EAAE6oG,iBAAiBpsF,SAAWzc,EAAE6oG,MAAQzwB,uBAAUp4E,EAAE6oG,OAElE7Y,wBAASxkD,KACLvG,EAAG,EACHv6B,EAAG,EACHi4B,MAAOkjE,kBACPjjE,OAAQijE,oBAEZ7V,wBAASnlE,MACL7qB,EAAG6oG,MAAMrnE,KAAKxhC,EAAEwhC,KAAbqnE,GACHhmD,UAAS,aAAAjgC,OAAeijF,kBAAoB,EAAnC,MAAAjjF,OAAyCijF,kBAAoB,EAA7D,OAEb5V,yBAAUplE,MACN06B,KAAMvlD,EAAEs7C,QAEZ20C,yBAAUzkD,KACN7I,MAAK,GAAA/f,OAAKijF,kBAAL,MACLjjE,OAAM,GAAAhgB,OAAKijF,kBAAL,aAGV2E,GAAGplB,KAAKplF,EAAEW,OACVX,EAAEgoC,WAAawiE,GAAG1lB,QAAQ9kF,EAAEgoC,WAAW,GACvCioD,yBAAUua,GAAIxqG,EAAE6gC,YAGpB2pE,GAAGplB,KAAKplF,MAKxB,OAAOkH,2CAKP,OADAA,KAAK+iG,OAAS,KACP/iG,6DA5HP,IAAM6M,OAASsuF,6BAAcuD,QAE7B,OADA7xF,OAAOmvF,YAAcb,6BAAca,YAC5BnvF,qTCZM02F,2BAMjB,SAAAA,QAAaC,cAAexJ,oKAAcyJ,CAAAzjG,KAAAujG,SACtC,IAAIG,mBAAqB1J,aACzBh6F,KAAK2lF,IAAMp7E,cACXvK,KAAKqwF,WACLrwF,KAAK6M,WACL,IAAM82F,YAAc3jG,KAAKqwF,QACnB2L,YAAc2H,YAAY3H,YAC1B4H,aAAeD,YAAYjF,QAAQO,gBACnCtmE,UAAYqvD,YAAYwb,cAAe,OAAQ,GAAxB,GAAA9nF,OAA+BsgF,YAA/B,uBAC7Bh8F,KAAK66B,WAAalC,UAClB34B,KAAK6jG,kBAAoBlrE,UAAU9D,OAAO,OAAO8E,MAAM,WAAY,YACnE35B,KAAK8jG,kBAAoB9jG,KAAK6jG,kBAAkBhvE,OAAO,OAAOk+B,KAAK,QAA1C,GAAAr3C,OAAsDsgF,YAAtD,KAAAtgF,OAAqEkoF,eAC9F5jG,KAAKmgG,mBAAqBngG,KAAK6jG,kBAAkBhvE,OAAO,OAAO8E,MAAM,WAAY,YACjF35B,KAAKigG,cAAgBjgG,KAAK6jG,kBAAkBhvE,OAAO,OAE9CmlE,eACD0J,mBAAqBF,cAAc3uE,OAAO,OAAO8E,MAAM,iBAAkB,SAE7E35B,KAAK+jG,aACL/jG,KAAKgkG,2BAA6Bjc,6BAAc2b,oBAC3C7uE,OAAO,KACPk+B,KAAK,QAFwB,GAAAr3C,OAEZioF,YAAY3H,YAFA,KAAAtgF,OAEeioF,YAAYnF,qBAC7D,IAAM9lE,GAAK14B,KAAK2lF,IACVoW,aAAe4H,YAAY5H,aAC3BkI,mBAAqBn4B,sBAAsBiwB,aAAcrjE,GAAIirE,YAAY3H,aAE/EjT,yBAAU/oF,KAAKigG,cAAe1B,eAC9BxV,yBAAU/oF,KAAKmgG,mBAAoB5B,eACnCv+F,KAAKkkG,SAASD,mBAAmBlhG,KAAK,MACtC/C,KAAKkkG,SAASP,YAAY7iE,WAC1B9gC,KAAKw8F,wRASL,GAAIp3F,UAAO1D,OAAS,EAAG,CACnB,IAAMyiG,QAAUl1B,kBAAmBjvE,KAAK4lB,YAAYu1E,iBAEpD,OADAn7F,KAAKqwF,QAAUphB,eAAek1B,QAAD/+F,UAAA1D,QAAA,OAAA6L,EAAAnI,UAAA,IACtBpF,KAEX,OAAOA,KAAKqwF,kDAeNvvD,WAEN,OADA9gC,KAAK6jG,kBAAkBjmB,QAAQ98C,WAAW,GACnC9gC,+CAIP,OAAIoF,UAAI1D,QACJ1B,KAAKq8B,SAALj3B,UAAA1D,QAAA,OAAA6L,EAAAnI,UAAA,GACOpF,MAEJA,KAAKq8B,iDAGPtjC,KAAMiS,MAA0B,IAApBo5F,cAAoBh/F,UAAA1D,OAAA,QAAA6L,IAAAnI,UAAA,GAAAA,UAAA,MAC/ByH,OAAS7M,KAAK6M,SACZmvF,YAAgBnvF,OAAhBmvF,YACF4H,aAAe/2F,OAAO6xF,QAAQ59D,UAC9B1+B,UAAYyK,OAAOzK,UACnB0+B,UAAYsjE,cAActjE,WAAd,GAAAplB,OAA8BsgF,YAA9B,KAAAtgF,OAA6CkoF,aAA7C,KAAAloF,OAA6D3iB,MACzE2lG,QAAU1+F,KAAK+jG,UAAUhrG,MAAQiH,KAAK+jG,UAAUhrG,OAAS,IAAI8pG,gBAC7DlqE,UAAYqvD,YAAYhoF,KAAK8jG,kBAAmB,OAAQM,cAAcv9E,OAAQia,WACpFnI,UAAUo6B,KAAK,QAAf,GAAAr3C,OAA2BsgF,YAA3B,KAAAtgF,OAA0CkoF,aAA1C,KAAAloF,OAA0DolB,YH5BjC,SAApBujE,kBAAqBzqE,gBAAiBkH,WAC/ClH,gBAAgB64B,UAAU3xB,WAAW5tB,KAAK,SAACtY,EAAGwI,GAAJ,OAAUxI,EAAIwI,IG4BpDihG,CAAkBrkG,KAAK8jG,kBAAN,IAAApoF,OAA6BsgF,YAA7B,KAAAtgF,OAA4CkoF,eAC7D,IAAMU,YAAcz3F,OAAO6xF,QAoB3B,OAnBA0F,cAAcpI,YAAch8F,KAAKqwF,QAAQ2L,YACzC0C,QAAQ7xF,OAAOy3F,aAEF,OAATt5F,MACA0zF,QAAQr3D,QACR1O,UAAUyO,gBACHpnC,KAAK+jG,UAAUhrG,QAEtB2lG,QAAQppE,QACJ1Y,MAAO5R,KACP5I,UAAWgiG,cAAchiG,WAAaA,YAE1Cs8F,QAAQpiE,QAAQt8B,KAAKq8B,UACrBqiE,QAAQ6F,OAAO5rE,YAGdz/B,OAAO4M,KAAK9F,KAAK+jG,WAAWriG,QAC7B1B,KAAKw8F,OAEFx8F,uDAIP,OAAO9G,OAAOwlB,OAAO1e,KAAK+jG,qDASpBhmE,EAAGv6B,GAAc,IAAXiqE,KAAWroE,UAAA1D,OAAA,QAAA6L,IAAAnI,UAAA,GAAAA,UAAA,MACvB,IAAKlM,OAAO4M,KAAK9F,KAAK+jG,WAAWriG,OAE7B,OADA1B,KAAKw8F,OACEx8F,KAEXA,KAAKm+F,OACL,IAAM9gD,OAASr9C,KAAKwkG,QACdC,gBAAkBh3B,KAAKg3B,gBAE7B,GAAIpnD,QAAUonD,gBAAiB,CAC3B,IAAMh0E,KAAOzwB,KAAK6jG,kBAAkBpzE,OAC9B5jB,OAAS7M,KAAKqwF,QACdqU,cAAgB73F,OAAOqyF,MAAMC,SAC7BO,WAAagF,cAAgB,EAAI73F,OAAOqyF,MAAM5kE,KAC9CqqE,YAAc3kG,KAAKqgG,kBACnBuE,YLxJQ,SKwJMD,aL3JL,UK2JmCA,YAC7CnhG,EAAIitB,KAAK+I,aAAekmE,WAAcriD,OAAO75C,GAAKA,EAAK65C,OAAO75C,EAAI65C,OAAO3hB,OACzEqC,EAAItN,KAAKgJ,YAAcimE,WAAcriD,OAAOtf,GAAKA,EAAKsf,OAAOtf,EAAIsf,OAAO5hB,MAE7E,IAAKipE,cACD,GAAIE,YAAa,CACb,IAAIjhF,KACJ3jB,KAAKigG,cAActmE,MAAM,UAAW,QACpC35B,KAAKmgG,mBAAmBxmE,MAAM,UAAW,QACzC35B,KAAKgkG,2BAA2BrqE,MAAM,UAAW,SACjD,IAAMkrE,UAAY7kG,KAAKgkG,2BAA2BvxC,UAAU,QAAQznD,MAAM,IACpE8nD,MAAQ+xC,UAAU/xC,QAAQj+B,OAAO,QLnKjC,SKoKF8vE,YACAhhF,KAAO,KAAAjI,OAAKqiB,EAAL,KAAAriB,OAAUlY,EAAIitB,KAAK+I,aAAe,EAAlC,OAAA9d,OAAyC2hC,OAAOtf,EAAIsf,OAAO5hB,OAA3D,IAAA/f,OACG2hC,OAAO75C,EAAI65C,OAAO3hB,OAAS,GLzKlC,UK0KIipE,YACPhhF,KAAO,KAAAjI,OAAKqiB,EAAItN,KAAKgJ,YAAd,KAAA/d,OAA6BlY,EAAIitB,KAAK+I,aAAe,GAArD,MAAA9d,OACS2hC,OAAOtf,EADhB,KAAAriB,OACqB2hC,OAAO75C,EAAI65C,OAAO3hB,OAAS,GL1KnD,WK2KGipE,cACPhhF,KAAO,KAAAjI,OAAKqiB,EAAItN,KAAKgJ,YAAc,EAA5B,KAAA/d,OAAiClY,EAAIitB,KAAK+I,cAA1C,MAAA9d,OACK2hC,OAAOtf,EAAIsf,OAAO5hB,MAAQ,EAD/B,KAAA/f,OACoC2hC,OAAO75C,IAEtDsvD,MAAMjpD,MAAMg7F,WAAW9xC,KAAK,IAAKpvC,MAAMgW,MAAM,UAAW,aACrD,CACH,IAAM4lE,SAAWH,mBAAYuF,YAAatnD,QACtCtf,IACAv6B,IACAg8F,UAAW/uE,KAAK+I,aAChBimE,SAAUhvE,KAAKgJ,aAChBz5B,KAAKqwF,SAER0P,kBAAW//F,KAAMA,KAAKqgG,kBAAmBd,UACzCv/F,KAAKgkG,2BAA2BrqE,MAAM,UAAW,SAK7D,IAAMgpB,OAAS3iD,KAAK8kG,UAChB/mE,EAAG,EACHv6B,EAAG,GAKP,OAHAxD,KAAK6jG,kBAAkBlqE,MAAM,OAA7B,GAAAje,OAAwCinC,OAAO5kB,EAAIA,EAAnD,OAA0DpE,MAAM,MAAhE,GAAAje,OACOinC,OAAOn/C,EAAIA,EADlB,OAGOxD,mEAQSq/F,KAAuB,IACnCn3F,IADmCgN,MAAAlV,KAAlB2jG,YAAkBv+F,UAAA1D,OAAA,QAAA6L,IAAAnI,UAAA,GAAAA,UAAA,MAEnC2/F,YAAcpB,YAAYoB,YAE9B,GADA/kG,KAAKm+F,QACAkB,IAED,OADAr/F,KAAKw8F,OACEx8F,KAGX,IAAM2lE,OAAS3lE,KAAKglG,QACdv0E,KAAOzwB,KAAK6jG,kBAAkBpzE,OAEpCzwB,KAAK6jG,kBAAkBlqE,MAAM,MAAO,OACnBA,MAAM,OAAQ,OAC/B,IAAMF,YAAchJ,KAAKgJ,YAAc,EACjCD,aAAe/I,KAAK+I,aAAe,EACnC3sB,OAAS7M,KAAKqwF,QACd1tC,OAAS3iD,KAAK8kG,QACdJ,cAAgB73F,OAAOqyF,MAAMC,SAC7B8F,UAAYP,cAAgB,EAAI73F,OAAOqyF,MAAM5kE,KAC7C0/B,UAA4BzsD,IAArBo2F,YAAY3pC,MAAqB2pC,YAAY3pC,KACpDkrC,SAAW7F,IAAI77F,EAEf2hG,KAAO9F,IAAIthE,EAAIshE,IAAI5jE,MAAQknB,OAAO5kB,EAClCqnE,WAAaz/B,OAAOlqC,MAAQ0pE,KAC5BE,UAAYhG,IAAIthE,EAAI4kB,OAAO5kB,EAAI4nC,OAAO5nC,EACtCunE,YAAcJ,SAAY1rE,aAAeyrE,UACzCM,cAAgBH,YAAc3rE,YAAcwrE,UAC5CO,aAAeH,WAAa5rE,YAAcwrE,UAwGhD,OA/BAjlG,KAAKwkG,QAAUnF,IACV0F,cAEGA,YADAO,YACc,WACPC,eAAiBC,aACV,aAEA,YAIF,eAAhBT,YACA78F,IAnFuB,SAArBu9F,qBACF,IAAIpjE,SACAtE,EAAIshE,IAAIthE,EAAIshE,IAAI5jE,MAChBj4B,EAAI67F,IAAI77F,EAwBZ,OAtBI+hG,eACAljE,SL/OY,OKgPZtE,GAAKknE,WACEO,cACPznE,EAAIshE,IAAIthE,EAAItE,YACZ4I,SLlPa,QKmPbtE,GAAKknE,YAEL5iE,SAAW,OACXtE,GAAKknE,WAEL5F,IAAI3jE,OAASlC,eACbh2B,EAAIK,KAAKwQ,IAAI,EAAGgrF,IAAI77F,EAAI67F,IAAI3jE,OAAS,EAAIlC,aAAe,KAWxD6I,kBACAk9D,SATaH,mBAAY/8D,SAAUg9D,KACnCthE,IACAv6B,IACAg8F,UAAWhmE,aACXimE,SAAUhmE,aACXvkB,MAAKm7E,SAKJtyD,IACAv6B,KAoDEiiG,GACiB,aAAhBV,cACP78F,IAlDqB,SAAnBw9F,mBACF,IAAIrjE,SACA7+B,EAEAu6B,EAAIshE,IAAIthE,EAAItE,YAAc,EAAI4lE,IAAI5jE,MAAQ,EAwB9C,OArBKkqC,OAAOlqC,OAAS4jE,IAAIthE,EAAI4kB,OAAO5kB,GAAMtE,YACtCsE,EAAI4nC,OAAOlqC,MAAQhC,YAAckpB,OAAO5kB,EAChCA,EAAI4kB,OAAO5kB,EAAK4nC,OAAO5nC,IAC/BA,EAAI4nC,OAAO5nC,GAGXunE,aACA9hG,EAAI67F,IAAI77F,EAAIg2B,aAAeyrE,UAC3B5iE,SLzRc,WK2Rd7+B,EAAI67F,IAAI77F,EAAI67F,IAAI3jE,OAASupE,UACzB5iE,SL3RW,QKsSXA,kBACAk9D,SATaH,mBAAY/8D,SAAUg9D,KACnCthE,IACAv6B,IACAg8F,UAAWhmE,aACXimE,SAAUhmE,aACXvkB,MAAKm7E,SAKJtyD,IACAv6B,KAkBEkiG,IAGV1lG,KAAK2lG,WACD5nE,EAAG71B,IAAI61B,EACPv6B,EAAG0E,IAAI1E,GAGXxD,KAAK4lG,UAAY19F,IAAIq3F,SAChBmF,eAGD1kG,KAAKigG,cAActmE,MAAM,UAAW,QACpC35B,KAAKmgG,mBAAmBxmE,MAAM,UAAW,SAHzComE,kBAAW//F,KAAMkI,IAAIm6B,SAAUn6B,IAAIq3F,UAKvCv/F,KAAKqgG,kBAAoBn4F,IAAIm6B,SAC7B23B,MAAQh6D,KAAKqiC,SAASn6B,IAAI61B,EAAG71B,IAAI1E,GAC1BxD,yCAUP,OAFAA,KAAK6jG,kBAAkBlqE,MAAM,UAAW,QACxC35B,KAAKgkG,2BAA2BrqE,MAAM,UAAW,QAC1C35B,yCASP,OADAA,KAAK6jG,kBAAkBlqE,MAAM,UAAW,SACjC35B,2CAGH2lE,SAEJ,OADA3lE,KAAKglG,QAAUr/B,QACR3lE,2CAGH2iD,SAEJ,OADA3iD,KAAK8kG,QAAUniD,QACR3iD,6CAOP,OAHAA,KAAK6jG,kBAAkBz8D,SACvBpnC,KAAKmgG,mBAAmB/4D,SACxBpnC,KAAKgkG,2BAA2B58D,SACzBpnC,6DA1SP,OAAOm7F,shBC5ER,IAAM0K,uBACTC,kBAAmB,SAAAA,kBAAC1yF,IAChB,IAAMiL,QAAUjL,GAAGkL,UACbyK,SAAW1K,QAAQ1S,OAAO+H,OAAO,SAAA5a,GAAC,OAAIA,EAAEwC,OAASy5F,yBAAU31F,UAC3D2mG,gBAAkB3yF,GAAGwa,SAAS,IAAK7E,SAAStW,OAAO,SAACC,IAAK9I,GAE3D,OADA8I,IAAI9I,EAAE7Q,MAAuB,UAAf6Q,EAAEoO,SAAuB,MAAQpO,EAAEoO,SAC1CtF,UAELrH,UAAY+H,GAAG/D,gBAAgBhE,YAC/B26F,WAAaD,gBAAgBvnF,kBAC/BE,SACAjlB,MAAK,GAAAiiB,OAAK2C,QAAQrT,KAAKtJ,QACvBi4B,OACIkJ,cAAe,SAEpB,kBACGojE,aAAel9E,SAAS9gB,IAAI,SAAAnP,GAAC,OAAIA,EAAEC,OAUzC,OATIktG,aAAavkG,SACbgd,UAAMhD,OAAAwqF,6BAAOxnF,SAAW,IAAAhD,OAAKrQ,UAAU46F,aAAa,IAAIjuF,WAAWunC,cAA3C,MAAA7jC,OAA6DuqF,aAAa,KAE1FxsG,MAAK,GAAAiiB,OAAKqqF,gBAAgBznF,UAAUtT,KAAK,GAAGg7F,WAAWC,aAAa,IAAIhkG,OAAOm9C,QAAQ,IACvFzlB,OACIkJ,cAAe,aAIvBnkB,ssDCnBK6kF,4DACjB,SAAAA,UAAwB,IAAA4C,iBAAAjxF,yKAAAkxF,CAAApmG,KAAAujG,SAAA,QAAAj7B,KAAAljE,UAAA1D,OAARkgB,OAAQ,IAAA/Y,MAAAy/D,MAAAC,KAAA,EAAAA,KAAAD,KAAAC,OAAR3mD,OAAQ2mD,MAAAnjE,UAAAmjE,MAAA,OACpBrzD,MAAAmxF,kCAAArmG,MAAAmmG,iBAAAG,uBAAA/C,UAAA5qG,KAAA4O,MAAA4+F,kBAAAnmG,MAAA0b,OAASkG,WACJ2kF,aACLrxF,MAAKgmF,YAAc2K,sBACnB3wF,MAAK+lF,UAAY,UAJG/lF,yXADSwmF,4UAsB1B5M,aAAc7jE,SAAuB,IAAdtkB,QAAcvB,UAAA1D,OAAA,QAAA6L,IAAAnI,UAAA,GAAAA,UAAA,MACpCohG,YAAc,EACdC,WAAa,EACXroF,UAAY0wE,aAAaN,YAAY5xE,MACrC0f,QAAUt8B,KAAKw1F,SAASl5D,QACxBg9D,WAAat5F,KAAKo8F,iBACxB,GAAKh+E,UAAUsoF,WAAkC,OAArBz7E,QAAQ9N,WAA4D,IAAtC2xE,aAAauH,qBAEnE,OADAr2F,KAAKw8F,KAAK71F,QAAS,MACZ3G,KAGX,IAAM2mG,SAAW3mG,KAAKumG,UAChB15F,OAAS7M,KAAK6M,SACd+5F,UACFnrE,MAAO69D,WAAW79D,MAClBC,OAAQ49D,WAAW59D,QAEjB0+D,eAAiBnvE,QAAQmvE,eACzBv6F,IAAMgN,OAAO21B,QACbqkE,cACAC,WtBjDY,esBiDCj6F,OAAOlT,KACpB8iG,UAAYngE,QAAQo9D,gBACpB9wF,OAAS6zF,UAAU7zF,OAEnBm+F,oBADYn+F,OAAOm1B,EAAE,IAAKn1B,OAAOm1B,EAAE,GAAGziC,SAAWy5F,yBAAU11F,WAE3D2nG,WAAa/7E,QAAQoX,SACrB4kE,SACAn0C,SACAzrC,KAAOjJ,UAAUE,UAAU+I,KAC7By/E,WACAD,WAAW3gG,KAAXqB,MAAAs/F,WAAUK,0BAAS7/E,KAAKpf,IAAI,SAAAnP,GAAC,OAAIslB,UAAUa,OAAO,SAACsJ,UAAW/vB,GAAZ,OAAkBA,IAAMM,IACtEqmB,WAAW,QAGf0nF,WAAW3gG,KAAKkY,WAGpB,IAAIi/B,OAASpyB,QAAQoyB,OACjB/qC,gBACJ,GAAI+qC,OAAQ,CACR/qC,aAAe+qC,OAAO,OAGtB,IAFA,IAAM8pD,aAAel8E,QAAQk8E,aACvBC,WACG5uG,EAAI,EAAGiQ,IAAM6J,aAAa5Q,OAAQlJ,EAAIiQ,IAAKjQ,KACD,IAA3C2uG,aAAalhG,QAAQqM,aAAa9Z,KAClC4uG,QAAQlhG,KAAK1N,GAGrB6kD,OAASA,OAAOp1C,IAAI,SAAAnP,GAAC,OAAIA,EAAE4a,OAAO,SAAC9J,EAAGpR,GAAJ,OAAkC,IAAxB4uG,QAAQnhG,QAAQzN,OAQhE,IALA,IAAM6uG,eAAiB/qE,QAAQgrE,6BAA6BjqD,QAAUpyB,QAAQ9N,UAC1E8e,SAAS,IAIJzjC,GAAI,EAAGA,GAAIquG,WAAWnlG,OAAQlJ,KAAK,CACxC,IAAI+uG,QAAUF,eAAe7uG,IAC7B,GAAIsuG,WAAY,CACZ,IAAMj+E,WAAag+E,WAAWruG,IAAG8lB,UAAU3S,OAAO+H,OAAO,SAAA5a,GAAC,OAAIA,EAAEwC,OAASy5F,yBAAU11F,YAC9E4I,IAAI,SAAAnP,GAAC,OAAIA,EAAEC,OAEhBwuG,SADAA,QAAUjrE,QAAQgrE,6BAA6BT,WAAWruG,IAAGm1B,QAAQ9E,aAAeoT,SAAS,MACxEsrE,QAAQ,GAGjC,IAAIC,GAAKX,WAAWruG,IAChBqU,OAAOjE,SACP4+F,GAAKA,GAAG75E,QAAQ9gB,OAAOjE,QACnBuW,WAAW,KAGftS,OAAO46F,gBACPD,GAAK36F,OAAO46F,cAAcD,GAAIhvG,KAGlCs6D,MAAMt6D,KAAK,EAnB6B,IAoBfkvG,gBAA+CpO,WAAhE1/D,gBAAkC+tE,0BAA8BrO,WAA9BqO,0BACpCC,eAAiBF,gBAAgBnoB,wBACjCsoB,aAAevO,WAAWkK,cAAcjkB,wBAExCt+C,WAAa4mE,aAAaniE,KAAOkiE,eAAeliE,KAChDxE,UAAY2mE,aAAavlE,IAAMslE,eAAetlE,IAC9CwlE,YAAcnB,SAASnuG,IAAKmuG,SAASnuG,KAAM,IAAIuvG,gBAAgBL,gBAC7DpO,WAAWU,cAEnByC,UAAUxxE,QAAUA,QACpBwxE,UAAUjH,SAAWx1F,KAAKw1F,SAC1BiH,UAAUoE,aAAevkE,QAAQukE,eACjCpE,UAAUwE,UAAY3kE,QAAQ0rE,mBAC9BvL,UAAU3B,YAAcx+D,QAAQw+D,cAChCgN,YAAYxrE,QAAQmgE,WACpB,IAAMkG,SAAWkD,sBAAWl/F,QAAQg8F,UAiBpC,GAhBAmF,YAAYpJ,QAAQ/3F,QAAQg8F,UAAY3iG,KAAKi7F,UAAWuM,IACpDplG,UAAWugG,SACX97E,MAAOlgB,QAAQkgB,QAEFha,OAAO7M,KAAK6M,UACZ84D,QACG5nC,EAAG,EACHv6B,EAAG,EACHi4B,MAAOksE,0BAA0BlsE,MACjCC,OAAQisE,0BAA0BjsE,SAErCinB,QACG5kB,EAAGkD,YAAcp0B,OAAO81C,OAAO5kB,GAAK,GACpCv6B,EAAG09B,WAAar0B,OAAO81C,OAAOn/C,GAAK,KAGnD42F,eACA0N,YAAYzlE,SAAS2kE,WAAWjpE,EAAIl+B,IAAKmnG,WAAWxjG,EAAI3D,SACrD,KAAI0nG,QAUJ,CACHO,YAAYtL,OACZ,MAXAsL,YAAYG,oBACRlqE,EAAGwpE,QAAQxpE,EACXv6B,EAAG+jG,QAAQ/jG,EACXi4B,MAAO8rE,QAAQ9rE,OAAS,EACxBC,OAAQ6rE,QAAQ7rE,QAAU,IAE1BqpE,YAAa+B,WACRC,eAAiB,aAAe,gBAAcx5F,IAO3D,GAAIu5F,WAAY,CACZ,IAAMzkE,SAAWylE,YAAYnC,UACvBuC,gBAAkBJ,YAAYjE,kBAAkBpzE,OAAO8uD,wBAI7D,GAFAinB,aAAe0B,gBAAgBxsE,OAAS77B,IACxC4mG,YAAcyB,gBAAgBzsE,MAAQ57B,IAClCknG,eAAiBP,YAAclN,WAAW59D,OAAS+qE,WAAanN,WAAW79D,MAC3E,MAEJwrE,MAAM/gG,MACF63B,EAAGsE,SAAStE,EACZv6B,EAAG6+B,SAAS7+B,EACZi4B,MAAOysE,gBAAgBzsE,MACvBC,OAAQwsE,gBAAgBxsE,OACxBq+D,QAAS+N,eAKrB,IAAK,IAAM/tG,OAAO4sG,SACd,IAAK7zC,MAAM/4D,KAAM,CACb,IAAMggG,QAAU4M,SAAS5sG,KACzBggG,QAAQ2E,QAAQzzE,QAAQ5H,OAAQ,MAC3B02E,QAAQoO,cAAczmG,SACvBq4F,QAAQ3yD,gBACDu/D,SAAS5sG,MAU5B,OANI+sG,cCzLiB,SAAhBsB,cAAiBnB,MAAOthC,OAAQohC,gBACzC,IAAIvjG,EACAk4B,OACAqC,EACAtC,MACAjjC,EAEEiQ,IAAMw+F,MAAMvlG,OACZ2mG,kBAAoB,SAApBA,kBAAqBC,SAAUC,UAAWC,UAC5CzqE,EAAIuqE,SAASvqE,EACbtC,MAAQ6sE,SAAS7sE,MACjBj4B,EAAI8kG,SAAS9kG,EACbk4B,OAAS4sE,SAAS5sE,OAClB,IAAM81B,OAAShuD,EAAIk4B,OACbiK,MAAQ5H,EAAItC,MAEdsrE,gBACIyB,SAAWhlG,EAAK+kG,UAAU/kG,EAAI+kG,UAAU7sE,OAAU81B,OAAS+2C,UAAU/kG,KACrE+kG,UAAU/kG,EAAIglG,SAAWF,SAAS9kG,EAAI+kG,UAAU7sE,OAZhD,EAaQ81B,OAbR,IAeGg3C,SAAWzqE,EAAKwqE,UAAUxqE,EAAIwqE,UAAU9sE,MAASkK,MAAQ4iE,UAAUxqE,KAC1EwqE,UAAUxqE,EAAIyqE,SAAWF,SAASvqE,EAAIwqE,UAAU9sE,MAhB5C,EAiBIkK,MAjBJ,IAwBZ,IAHAshE,MAAM/zF,KAAK,SAACtY,EAAGwI,GAAJ,OAAW2jG,eAAiBnsG,EAAE4I,EAAIJ,EAAEI,EAAI5I,EAAEmjC,EAAI36B,EAAE26B,IAC3DvlC,EAAI,EAECA,EAAI,EAAGA,EAAIiQ,IAAM,EAAGjQ,IACrB6vG,kBAAkBpB,MAAMzuG,GAAIyuG,MAAMzuG,EAAI,IAG1C,GAAKyuG,MAAMzuG,GAAGgL,EAAIyjG,MAAMzuG,GAAGkjC,OAAUiqC,OAAOjqC,QACnCurE,MAAMzuG,GAAGulC,EAAIkpE,MAAMzuG,GAAGijC,MAASkqC,OAAOlqC,MAM3C,IALIsrE,eACAE,MAAMzuG,GAAGgL,GAAMyjG,MAAMzuG,GAAGkjC,OAASurE,MAAMzuG,GAAGgL,EAAKmiE,OAAOjqC,OAEtDurE,MAAMzuG,GAAGulC,GAAMkpE,MAAMzuG,GAAGijC,MAAQwrE,MAAMzuG,GAAGulC,EAAK4nC,OAAOlqC,MAEpDjjC,EAAIiQ,IAAM,EAAGjQ,EAAI,EAAGA,IACrB6vG,kBAAkBpB,MAAMzuG,GAAIyuG,MAAMzuG,EAAI,IAAI,GDgJ1C4vG,CAAcnB,MAAOL,SAAUG,gBAC/BE,MAAMn+F,QAAQ,SAAAqzF,KAAG,OAAIA,IAAIpC,QAAQ13D,SAAS85D,IAAIp+D,EAAGo+D,IAAI34F,GACjDihG,iBAAiB,OAGlBzkG,uCAGL2G,SACF,IAAMggG,SAAW3mG,KAAKumG,UACtB,IAAK,IAAMxsG,OAAO4sG,SACd,MAAOpsG,eAAe5B,KAAKguG,SAAU5sG,KAAM,CACvC,IAAM4oG,SAAWh8F,QAAQg8F,UAAY3iG,KAAKi7F,UAC1C0L,SAAS5sG,KAAK2kG,QAAQiE,SAAU,MAChCgE,SAAS5sG,KAAKyiG,gEAtLtB,OACIh6D,QAAS,EACTmgB,QACI5kB,EAAG,EACHv6B,EAAG,oDAMX,MAAO,ouDEtBMilG,otBAAkB/M,6SAa5B5M,aAAc7jE,SAAS,IACtByQ,OACAgtE,UACAvqC,GACA1iC,MAJsBvmB,MAAAlV,KAAA2oG,aAStB3oG,KAAK6M,SAHLi0B,UANsB6nE,aAMtB7nE,UACA8nE,UAPsBD,aAOtBC,UACAC,UARsBF,aAQtBE,UAEEzqF,UAAY0wE,aAAaN,YAAY5xE,MACrC08E,WAAat5F,KAAKo8F,iBACxB,GAAInxE,QAAQ9N,UAAYiB,WAAaA,UAAUsoF,UAC3C,OAAO1mG,KAEX,GAAyB,OAArBirB,QAAQ9N,WAAsBiB,UAE9B,OADApe,KAAKw8F,OACEx8F,KAGX,IAAMqe,QAAUD,UAAUE,UACpBm+E,UAAYz8F,KAAKw1F,SAASl5D,QAAQo9D,gBAClC9B,KAAO6E,UAAU7E,KACjBG,WAAa0E,UAAU7zF,OACvBA,OAASkmF,aAAalmF,OACtBoC,KAAOqT,QAAQrT,KACfuT,aAAeH,UAAUI,kBACzBw7E,aAAeV,WAAWuC,gBAE1BiN,YA+BN,GA9BAlgG,OAAOE,QAAQ,SAACyC,OACZ,IAAMxC,WAAawV,aAAahT,QAAUgT,aAAahT,OAAOtJ,MACxDmuE,QAAUplE,KAAK/C,IAAI,SAAAnP,GAAC,OAAIA,EAAEiQ,cAC1BggG,YAAc,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAI79E,KAAK,SAACna,KAC7D,IAAMi4F,UAAYjR,WAAWhnF,IAAI,IAAIA,IAAI,IACzC,OAAOi4F,WAAaA,UAAU1tG,SAAWy5F,yBAAU11F,YACJ,IAA3C2pG,UAAU/Q,aAAahyF,QAAQsF,SAEvC,QAAkBgC,IAAdw7F,WAA2B/9F,KAAKtJ,OAAQ,CACxC,IAAMpG,KAAOytG,UAAU,GACjBn3C,KAAOgmC,KAAKt8F,MAAMytG,UAAU,IAC5BtvG,MAAQ22E,QAAQ,GACtBs4B,UAAY92C,KAAK+rC,gBAAkB,EACnCx/B,GAAKvM,KAAK8rC,cAAcjkG,OAASivG,UAAY,EAAIpP,WAAW2P,QAC5D,IAAMC,UAAYrlG,KAAKwQ,IAAL9M,MAAA1D,KAAIslG,4BAAQj0F,MAAKsgF,SAASl5D,QAAQg/D,SAASrzF,IAAI,SAAAszF,OAAK,OAAIA,MAAM6N,cAAc9tG,UACxFuE,IAAMgE,KAAKwQ,IAAL9M,MAAA1D,KAAIslG,4BAAQj0F,MAAKsgF,SAASl5D,QAAQg/D,SAASrzF,IAAI,SAAAszF,OAAK,OAAIA,MAAM8N,iBAAiB/tG,UAC3FogC,OAAS49D,WAAW59D,OACpBD,MAAQ69D,WAAW79D,MACnB,IAAM6tE,QAAUnrC,GAAK+qC,UAAY,EAAIrpG,IAAM,EACrC0pG,MAAQprC,GAAK+qC,UAAY,EAAIrpG,IAAM,EACnC2pG,aAEFA,UAAU1wG,EADD,MAATwC,KACA,OAAAogB,OAAqB4tF,QAArB,SAAA5tF,OAAoC6tF,MAApC,OAAA7tF,OAA+C+f,MAA/C,KAAA/f,OAAwD6tF,MAAxD,OAAA7tF,OAAmE+f,MAAnE,KAAA/f,OAA4E4tF,QAA5E,MAEA,KAAA5tF,OAAmB4tF,QAAnB,SAAA5tF,OAAkC6tF,MAAlC,SAAA7tF,OAA+C6tF,MAA/C,KAAA7tF,OAAwDggB,OAAxD,OAAAhgB,OAAoE4tF,QAApE,KAAA5tF,OAA+EggB,OAA/E,MAEJ8tE,UAAU1oE,UAAYooE,UAAYN,UAAYC,UAC9CC,SAAS5iG,KAAKsjG,cAGlBV,SAASpnG,OAAQ,CACjB,IAAM+nG,YAAczpG,KAAKqhC,cAAc24D,aAAc,KAAM,GAAIl5D,WAClD9gC,KAAKqhC,cAAcooE,YAAa,OAAQX,UAChD/1C,KAAK,IAAK,SAAAj6D,GAAC,OAAIA,EAAEA,IAAG6gC,MAAM,iBAAkB,QAChCo5B,KAAK,QAAS,SAAAj6D,GAAC,OAAIA,EAAEgoC,YAE1C,OAAO9gC,yCAIP,IAAM8gC,UAAY9gC,KAAK6M,SAASi0B,UAC1Bw4D,WAAat5F,KAAKo8F,iBACxBrU,6BAAcuR,WAAWuC,iBAAiBppC,UAA1C,IAAA/2C,OAAwDolB,YAAasG,iEAnFrE,OACItG,UAAS,GAAAplB,OxBTM,OwBSN,oBACTktF,UAAS,GAAAltF,OxBVM,OwBUN,cACTmtF,UAAS,GAAAntF,OxBXM,OwBWN,+DAKb,MAAO,6BCAFmqF,qBACT6D,KAjBW,SAATC,OAAUx3F,IAAKmqB,QAASqmE,UAAa,IAEnCnU,YAIAr8E,IAJAq8E,YACAG,WAGAx8E,IAHAw8E,WACApB,QAEAp7E,IAFAo7E,QACAR,YACA56E,IADA46E,YAGCyB,YAAY9sF,QAAWitF,WAAWjtF,QAGnC46B,QAAQm/D,sBAAsBlO,QAAQ,MAAQoV,UAAU,GACxDrmE,QAAQm/D,sBAAsBjN,eAAiBmU,UAAU,IAHzDrmE,QAAQm/D,sBAAsB1O,eAAiB4V,UAAU,IAS7DiH,MAAO,SAAAA,MAACz3F,IAAKmqB,SAAY,IAEjBkyD,YAGAr8E,IAHAq8E,YACAG,WAEAx8E,IAFAw8E,WACA5B,YACA56E,IADA46E,YAECyB,YAAY9sF,QAAWitF,WAAWjtF,QAGnC46B,QAAQm/D,sBAAsB9M,cAAgB,SAAS,GACvDryD,QAAQm/D,sBAAsBjN,eAAiB,SAAS,IAHxDlyD,QAAQm/D,sBAAsB1O,eAAiB,SAAS,IAMhE8c,UAAW,SAAAA,UAAC13F,IAAKmqB,SAAY,IAErBkyD,YAKAr8E,IALAq8E,YACAG,WAIAx8E,IAJAw8E,WACArB,SAGAn7E,IAHAm7E,SACAC,QAEAp7E,IAFAo7E,QACAR,YACA56E,IADA46E,YAECyB,YAAY9sF,QAAWitF,WAAWjtF,QAGnC46B,QAAQm/D,sBAAsBnO,SAAS,MAAQ,aAAa,GAC5DhxD,QAAQm/D,sBAAsBlO,QAAQ,MAAQ,aAAa,IAH3DjxD,QAAQm/D,sBAAsB1O,eAAiB,aAAa,wxCCrCnD+c,gEACjB,SAAAA,kBAAwB,IAAA3D,iBAAAjxF,qKAAA60F,CAAA/pG,KAAA8pG,iBAAA,QAAAxhC,KAAAljE,UAAA1D,OAARkgB,OAAQ,IAAA/Y,MAAAy/D,MAAAC,KAAA,EAAAA,KAAAD,KAAAC,OAAR3mD,OAAQ2mD,MAAAnjE,UAAAmjE,MAAA,OACpBrzD,MAAA80F,2CAAAhqG,MAAAmmG,iBAAA8D,gCAAAH,kBAAAnxG,KAAA4O,MAAA4+F,kBAAAnmG,MAAA0b,OAASkG,WACJq5E,UAAY,YACjB/lF,MAAKgmF,YAAc2K,oBAHC3wF,mZADiBkmF,8TAelCtM,aAAc7jE,SAAuB,IAAdtkB,QAAcvB,UAAA1D,OAAA,QAAA6L,IAAAnI,UAAA,GAAAA,UAAA,MAClCu9F,SAAW3iG,KAAKk7F,YAAYv0F,QAAQg8F,UAAY3iG,KAAKi7F,WAM3D,OAJ0C,IAAtCnM,aAAauH,sBACbsM,SAAS7T,aAAc9uF,KAAM2G,QAAQg8F,UAAY3iG,KAAKi7F,WAGnDj7F,uDAdP,MAAO,sDAIP,MAAO,s1CCbMkqG,2wBAAqB9O,oUAa/BtM,aAAc7jE,SACjB,IAAMqR,QAAUt8B,KAAKw1F,SAASl5D,QACxB6tE,WAAarb,aAAaN,YAAY5xE,MAM5C,OALyB,OAArBqO,QAAQ9N,SACRmf,QAAQ8tE,eAAeC,YAEvB/tE,QAAQguE,gBAAgBt/F,KAAKm/F,YAE1BnqG,uDAnBP,MAAO,iDAIP,MAAO,wDAIP,OAAO,swDCNf,IAAMuqG,iBAAW,SAAXA,SAAYC,UAAWC,cAAenuE,QAASw1D,YACjD,IAAMwJ,UAwCN,OAvCIkP,WACAA,UAAU1hG,QAAQ,SAAC4hG,UACf,IAAMC,KAAOD,SAASC,KAChBC,SAAWH,cAAcE,MAC/B,GAAIC,UAAYA,SAASC,oBAAqB,CAC1C,IAAMC,iBAAmBJ,SAAS/rF,IAAIosF,SAChCA,UACFhtE,EAAGgvC,WAAW+9B,iBAAkB,IAAK,SACrCtnG,EAAGupE,WAAW+9B,iBAAkB,IAAK,SACrC12D,MAAO24B,WAAW+9B,iBAAkB,QAAS,SAC7CxwE,MACI/uB,MAAOwhE,WAAW+9B,iBAAkB,OAAQ,SAC5CrxG,MAAOq4F,WAAWkZ,qBAGpBjyG,KAAI,GAAA2iB,OAAMgvF,SAAS/rF,IAAI5lB,KAAnB,KAAA2iB,OAA2Bo2E,WAAWlsE,YAAY2lE,cACtD0f,UACFC,UAAW5uE,QAAQiuE,UACfxxG,UACA4xG,KAAM,QACN7pE,UAAWgxD,WAAWlsE,YAAYu1E,gBAAgBr6D,UAClDiqE,kBACApvD,WACIrgD,KAAM,YAEV43D,WAAY4+B,WAAWqZ,sBACvBC,iBAAiB,EACjB3mF,OAAQ,SAAAA,OAAArR,IAAE,OAAIA,GAAG6L,OAAO,kBAAM,IAC1BE,WAAW,KAEfq8E,aAAa,EACb+I,QAAQ,IAEZ8G,YAAaX,SAAS/rF,IAAI5lB,MAE9BuiG,OAAOp1F,KAAK+kG,aAIjB3P,QAGUgQ,oDACjB,SAAAA,eAAwB,IAAAnF,iBAAAjxF,4JAAAq2F,CAAAvrG,KAAAsrG,cAAA,QAAAhjC,KAAAljE,UAAA1D,OAARkgB,OAAQ,IAAA/Y,MAAAy/D,MAAAC,KAAA,EAAAA,KAAAD,KAAAC,OAAR3mD,OAAQ2mD,MAAAnjE,UAAAmjE,MAAA,OACpBrzD,MAAAs2F,kCAAAxrG,MAAAmmG,iBAAAsF,uBAAAH,eAAA3yG,KAAA4O,MAAA4+F,kBAAAnmG,MAAA0b,OAASkG,WACJ8pF,cACLx2F,MAAKy2F,kBAHez2F,8XADcwmF,gUAqBnB,IAAAtmF,OAAApV,KACTs8B,QAAUt8B,KAAKw1F,SAASl5D,QACxBsvE,QAAUtvE,QAAQsvE,UAClBnB,cAAgBnuE,QAAQuvE,WAAWpB,cACnCqB,aAAexvE,QAAQouE,WAM7B,OALApuE,QAAQ3zB,QAAQojG,0BAAhB,GAAArwF,OACOswF,0BAAiBt7C,qBADxB,KAAAh1C,OACgDkwF,QAAQ/+B,UADxD,aAC8E,SAAAv4C,MAAmB,IAAfk2E,UAAeyB,sBAAA33E,KAAA,MACzFlf,OAAK82F,QAAU3B,iBAASC,UAAWC,cAAenuE,QAASlnB,UAEnEpV,KAAKksG,QAAU3B,iBAASuB,aAAcrB,cAAenuE,QAASt8B,MACvDA,uEAIP,OACIm/F,UAAU,+DASd,OAAO,wCAGJrQ,cACH,IAAM1J,KAAOplF,KACPoe,UAAY0wE,aAAaN,YAAY5xE,MAC3C,IAA0C,IAAtCkyE,aAAauH,qBAAgC,CAC7C,IACMwF,gBADa77F,KAAKo8F,iBACWP,gBAC7B/6D,UAAS,GAAAplB,OAAM1b,KAAK6M,SAASi0B,WAC7Bw6D,OAASt7F,KAAKksG,QACdzC,YAAczpG,KAAKqhC,cAAcw6D,gBAAiB,KAAM,GAA1C,GAAAngF,OAAiDolB,UAAjD,eACC9gC,KAAKqhC,cAAcooE,YAAa,IAAKvwG,OAAOwlB,OAAO48E,SAC3Dn0D,KAAK,SAAUo0D,OACxB,IAAM2P,UAAY3P,MAAM2P,UAClBiB,MAAQ/mB,KAAK/jD,cAAcrhC,KAAM,IAAKkrG,UAAWpqE,WAFxBsrE,uBAAAH,sBAGX7mB,KAAKoQ,SAASl5D,QAAQ+vE,eAAe9Q,MAAM8P,aACjBiB,kCAAkCluF,WAJjD,GAIxBmuF,gBAJwBH,uBAAA,GAIPzgG,OAJOygG,uBAAA,GAKzBI,qBAAuB,IAAIluG,oBAAUiuG,gBAAiB5gG,QAC5DwgG,MAAMhlE,KAAK,SAAUruC,EAAGN,GACpB0yG,UAAU1yG,GAAGwS,KAAKwhG,sBAAsB94E,MAAM1zB,UAI1D,OAAOA,+CA7DP,MAAO,oEAIP,OACI8gC,UAAS,GAAAplB,O5B/DM,O4B+DN,mEAKb,MAAO,q0CCjEM+wF,2yBAA0BnB,qWAYvC,OACInM,UAAU,qDAXd,MAAO,2EAIP,OACIr+D,UAAS,GAAAplB,O7BVM,O6BUN,0zCCPAgxF,ovBAAqBpB,iVAYlC,OACInM,UAAU,qDAXd,MAAO,sEAIP,OACIr+D,UAAS,GAAAplB,O9BVM,O8BUN,+NCRd,IAAM2zE,yCAAkBsd,oCAAArc,uBAC1Bsc,OAAoB,gBACjB7zG,KAAM,cACN4N,SACIg8F,SAAU,SAEf,kBANwBgK,oCAAArc,oBAAA,GAAA50E,OAOvBkxF,MAPuB,KAAAlxF,OAOHkxF,UACpB7zG,KAAM,UACN4N,SACIg8F,SAAU,oBACV97E,MAAO,EACPnT,OAAQ,SAAAA,OAAA4oB,SAAO,MAA8B,eAA1BA,QAAQzvB,SAASlT,UAZjBgzG,oCAAArc,oBAe1Bsc,YACG7zG,KAAM,cACN4N,SACIg8F,SAAU,cAEf,aACC5pG,KAAM,UACN4N,SACIkgB,MAAO,OAEZ,YAzBwB8lF,oCAAArc,oBA0B1Bsc,QAAqB,WA1BKD,oCAAArc,oBA2B1Bsc,SACG7zG,KAAM,cACN4N,SACIg8F,SAAU,UAEf,uBAhCwBrS,qBCDlBuc,MAAQ,QAGRC,MAAQ,QACRC,OAAS,SACTC,KAAO,OACPC,MAAQ,QACRC,MAAQ,QAGRC,UACT7tD,EAAG,IACHr7C,EAAG,IACHmpG,GAAI,KACJC,GAAI,MCbKlS,mCACTa,YDHuB,OCIvBD,aAAc,aACdj7D,UAAW,GACX6b,YAAa,SACbhB,WACIrgD,KAAMuxG,OAEV/S,eAGAwT,sBAAuB,GACvBvC,UACI32D,SACArW,KACAv6B,KACA8wD,MACAi5C,eACI9zG,MAAO,IAGfy5D,YACIk/B,OAAQ,QACR7M,SAAU,KAEdioB,iBAAiB,2TCbAC,qhBAGb,MAAM,IAAI/9F,MAAMq/D,UAAUC,oEAS1B,MAAM,IAAIt/D,MAAMq/D,UAAUC,wDAU1B,MAAM,IAAIt/D,MAAMq/D,UAAUC,oDAW1B,MAAM,IAAIt/D,MAAMq/D,UAAUC,8DAQ1B,MAAM,IAAIt/D,MAAMq/D,UAAUC,gDAQ1B,MAAM,IAAIt/D,MAAMq/D,UAAUC,4FAa1B,MAAM,IAAIt/D,MAAMq/D,UAAUC,gFAc1B,MAAM,IAAIt/D,MAAMq/D,UAAUC,4FAY1B,MAAM,IAAIt/D,MAAMq/D,UAAUC,8DAU1B,MAAM,IAAIt/D,MAAMq/D,UAAUC,0EAQ1B,MAAM,IAAIt/D,MAAMq/D,UAAUC,wEAQ1B,MAAM,IAAIt/D,MAAMq/D,UAAUC,4EAQ1B,OAAOhvE,6DAIP,MAAM,IAAI0P,MAAMq/D,UAAUC,sDAQ1B,MAAM,IAAIt/D,MAAMq/D,UAAUC,wDAI1B,MAAM,IAAIt/D,MAAMq/D,UAAUC,mCCxJrB76C,aACTyjE,QACAlkE,SACA4rE,eACAsM,WACA5gG,QACA6B,UACAiuF,aACI7uB,aAAc,SAAAA,aAAA/qE,KAAG,OAAIA,2LCKtB,cAAMwsG,wBAAS,SACTC,qBAAM,MACNC,sBAAO,OACPC,uBAAQ,QAMRC,oBAAkBC,gCAAAC,uBAC1BC,sBAAuBl7B,QAAQC,UADL+6B,gCAAAC,oBAE1BC,wBAAyBl7B,QAAQI,YAFP46B,gCAAAC,oBAG1BC,uBAAwBl7B,QAAQE,WAHN86B,gCAAAC,oBAI1BC,qBAAsBl7B,QAAQG,SAJJ86B,qBCjBlBE,OAAS,SACTC,KAAO,OACPC,KAAO,WACPnB,iBAAQ,QACRoB,QAAU,UACVC,SAAW,WACXC,SAAW,WACXC,IAAM,MACNC,IAAM,MACNC,oBAAW,WACXC,WAAa,aACbC,UAAY,YCdZC,mCAAY,aACZC,SAAW,WACXH,qBAAa,aACbN,kBAAU,UACVH,iBAAS,SAETI,mBAAW,WASXS,OAAS,8LCHlBC,YAcAC,uBAdAD,YACAE,eAaAD,uBAbAC,eACAC,SAYAF,uBAZAE,SACAC,SAWAH,uBAXAG,SACAC,cAUAJ,uBAVAI,cACAC,aASAL,uBATAK,aACAC,gBAQAN,uBARAM,gBACAC,cAOAP,uBAPAO,cACAC,cAMAR,uBANAQ,cAIAz6B,UAEAi6B,uBAFAj6B,UACA06B,UACAT,uBADAS,UAESC,UAAQC,6BAAAC,aAChBC,OAAmBd,aADHY,6BAAAC,UAEhBC,KAAiB96B,WAFD46B,6BAAAC,UAGhBC,SAAqBN,eAHLI,6BAAAC,UAIhBC,SAAqBL,eAJLG,6BAAAC,UAKhBC,UAAsBZ,gBALNU,6BAAAC,UAMhBC,WAAuBP,iBANPK,6BAAAC,UAOhBC,IAAgBX,UAPAS,6BAAAC,UAQhBC,IAAgBV,UARAQ,6BAAAC,UAShBC,oBAAqBT,eATLO,6BAAAC,UAUhBC,KAAiBJ,WAVDE,6BAAAC,UAWhBC,iBAAkBd,aAXFY,6BAAAC,UAYhBC,QAAoBR,cAZJO,WA6Dd,SAASE,0BAAanuF,QACzB,IAAKA,OAAOtmB,OAASq0G,SAAS/tF,OAAOtmB,MACjC,MAAM,IAAIoU,MAAJ,GAAAgM,OAAakG,OAAOtmB,KAApB,+BAEV,IAAKuN,MAAMwB,QAAQuX,OAAOrgB,OACtB,MAAM,IAAImO,MAAM,oCAEpB,IAAIsgG,aAAe,KACbzuG,MAAQqgB,OAAOrgB,MAErB,GAAIqgB,OAAOtmB,OAAS4yG,kBAAUtsF,OAAOiuC,aAAc,CAE/C,GADAmgD,aAAeL,SAAS/tF,OAAOiuC,cAC3BjuC,OAAOiuC,eAAiBigD,IACxB,OAAOE,eAAezuG,MAAMA,OAAO09C,SAASr9B,OAAOq9B,UAChD,GAAIr9B,OAAOiuC,eAAiBigD,IAC/B,OAAOE,eAAezuG,MAAMA,OAAOogD,MAAM//B,OAAO+/B,YAGpDquD,aAAeL,SAAS/tF,OAAOtmB,MAMnC,OAHIsmB,OAAOtmB,OAASgzG,oBAChB0B,eAAe3uD,OAEZ2uD,eAAezuG,MAAMA,OC3GzB,wBAAM45F,6CACTziE,GAAInuB,cACJ0lG,aAAa,EACbC,UACInU,aAAc,aAElBoU,gBAAiB,GACjBxuD,KAAM,GACNq6C,YFfuB,OEgBvBl7D,UAAS,GAAAplB,OFhBc,OEgBd,SACTujC,SAAU,EACV4Q,aAAc,SACdugD,eAAe,EACfC,QACIC,SAAU,KACVC,WAAY,MAEhBxL,YAAa,OACb9sF,aAAc,SAAAA,aAAA/W,KAAG,OAAIA,KACrBshC,QAAS,GACT6e,MAAM,EACNmvD,cAAe,GACfh2D,QAAQ,EACR2jD,MAAM,EACNsS,cAAc,EACdC,gBAAgB,EAChBC,gBAAgB,EAChBh3E,SACAr+B,KAAM,SACN8lD,WAAY,KACZ2Q,WAAY,KACZk3C,QAAS,EACT2H,QAAS,GCxBPC,yBAAa,SAAbA,WAAcC,SAAUC,SAAUC,cACpC,IAAIV,SACE1+C,KAAOk/C,SAASl/C,OAChB/kD,OAASikG,SAASjkG,SAClBokG,aAAeH,SAASG,eACxBV,WAAaO,SAASP,aACtB5nE,MAAQipB,KAAKjpB,QAEbpC,OADYoC,MAAMpC,OAASoC,MAAM5B,UAAY4B,MAAM7xB,UAGrDiuF,YAGAl4F,OAHAk4F,YACAqL,cAEAvjG,OAFAujG,cACA90G,KACAuR,OADAvR,KAGA+0G,OACAY,aADAZ,OAGJC,SAAWD,OAAOC,SAElB,IAAMl9C,SAAW09C,SAASI,cAkD1B,OAjDAH,SAAS5pE,KAAK,SAAUruC,EAAGmJ,OACvB,IAAIkvG,OACAC,OACAp/F,MAAQu+F,WAAWtuG,OAASsuG,WAAWtuG,OAAO5B,KAAOvH,EAEzDkZ,MAAQA,MAAM1P,WAEd,IAAM+uG,aAAeL,aAAahxE,WAAWhuB,OAEvCypB,MAA6B,GAArB41E,aAAa51E,MACrBC,OAA+B,GAAtB21E,aAAa31E,OAExB40E,SAAW,IACXA,SAAW,IAAMA,UAGrB,IAAMgB,SAAW,EAAIztG,KAAKwN,MAAMi/F,SAAW,IACrCiB,oBAAuBD,SAAW,GAAM,EAAKhB,SAAW,IAAMzsG,KAAKmoB,KAAKskF,SAAW,KAAOA,UAAY,IAE5Ga,OAASttG,KAAK6Q,KAAK7Q,KAAA+Q,IAAA8mB,OAAU,GAAV73B,KAAA+Q,IAAc6mB,MAAS,IAAK53B,KAAKyyC,I1Jg6BtC,SAAhBk7D,cAAgBC,OAAK,OAAIA,MAAQ5tG,KAAK4xC,GAAK,I0Jh6Be+7D,CAAcD,qBAEpD,IAAbD,UAA+B,IAAbA,UAAqBC,mBAAqB,MAAQA,oBAAsB,KAC3FJ,QAAmB,EAATz1E,QAEd01E,OAAS31E,MAGL21E,OADa,KAAbd,SACS50E,OACW,MAAb40E,UACG50E,OAED,EAGTqpE,cAAgBkJ,sBAChBmD,OAAUhB,eAAiB7pE,MAAM,KAAOztC,GAAKwC,OAAS4yG,iBAAUkD,OAASA,OAAS,EAAIA,OACtFrpB,6BAAc/nF,MACG+yD,KAAK,YADtB,aAAAr3C,QACiD01F,OAASh+C,SAD1D,sCAAA13C,QAEuBy1F,OAAS/9C,SAFhC,aAAA13C,OAEoD40F,SAFpD,QAIAc,OAAUhB,eAAiB7pE,MAAM,KAAOztC,GAAKwC,OAAS4yG,iBAAUkD,OAASA,OAAS,EAAIA,OAEtFrpB,6BAAc/nF,MACG+yD,KAAK,YADtB,aAAAr3C,OACgD01F,OAASh+C,SADzD,sCAAA13C,OAEsBy1F,OAAS/9C,SAF/B,aAAA13C,OAEmD40F,SAFnD,OAIJvoB,6BAAc/nF,MAAMkzD,aACHqyB,SAAS,KAAMllF,KAAK2R,SAElC++F,UASLW,oCAAwB,SAAxBA,sBAAyBC,gBAAiBC,aAAcx+C,UAAa,IAEnEy+C,YACAD,aADAC,YAEEhlG,OAAS+kG,aAAa/kG,SACtBokG,aAAeW,aAAaX,eAC5BD,aAAeY,aAAal2G,eAAes1G,aAE7CjM,YAEAl4F,OAFAk4F,YACA/I,YACAnvF,OADAmvF,YAGAqU,OACAY,aADAZ,OAGAC,SAEAD,OAFAC,SACYwB,aACZzB,OADAE,WAGEQ,SAAWY,gBAAgBl/C,UAAU,cAI3C,GAHAs+C,SAASt+C,UAAU,SAASrrB,UAGxBkpE,UHjGW,QGiGEvL,aHlGC,WGkGsBA,YAEjC,GAAKuL,UAAawB,aAElB,CAEH,GADAf,SAAS1wG,KAAK,IHtGH,QGuGP0kG,aHxGU,WGwGaA,YACvBgM,SAASh+C,KAAK,IAAK,GACFA,KAAK,IAAK,GACVA,KAAK,YAAa,IAClB1yD,KAAK,IACR2nF,YAAY+oB,SAAU,QAAS,SAACj4G,EAAGN,GAC7C,OAAIq5G,YAAYr5G,GACLq5G,YAAYr5G,GAAG2hC,UAFL,GAAAze,OAInBsgF,YAJmB,gBAMnBjpC,KAAK,KAAM,KACAp5B,MAAM,UAAW,KAEjBu5B,aACAqyB,SAAS,KACTnY,GAAG,MAAOwkC,aAAaG,6BACvBh/C,KAAK,KAAM,SAACj6D,EAAGN,GACZ,MH1HV,WG0HcusG,aAAgC,IAANvsG,EACnBq5G,YAAY,GAAGlyE,eAElBkyE,YAAY,GAAGlyE,eAAiBkyE,YAAY,GAAG13E,MAAMz4B,OAAS,GAAK0xD,WAE9Ez5B,MAAM,UAAW,GACjBt5B,KAAK,SAAA3F,GAAC,OAAIA,IACVq4D,KAAK,IAAK,QAEbi1B,YAAY+oB,SAAU,QAAS,SAACj4G,EAAGN,GAAJ,OAAUq5G,YAAYr5G,GAAG2hC,OAA7C,GAAAze,OAAuDsgF,YAAvD,gBACnB37F,KAAK,SAAA3F,GAAC,OAAIA,SA/BpBq2G,SAASh+C,KAAK,YAAa,SAF3B89C,yBAAWe,aAAcb,SAAUC,cAqCvC,OAAOD,UAGLiB,+BAAmB,SAAnBA,iBAAoBJ,cAAiB,IAEnCxB,cACAwB,aAAa/kG,SADbujG,cAGAM,eACAkB,aAAaX,eADbP,eAEE55F,OAAS86F,aAAa96F,SACxBs5F,eAAiBt5F,OAAOpV,QAAUgvG,gBAClCkB,aAAaI,oBAWfC,6BAAiB,SAAjBA,eAAkBC,SAAUnN,YAAah8E,UAAa,IAEpDopF,eAIAppF,SAJAopF,eACAvB,QAGA7nF,SAHA6nF,QACAwB,YAEArpF,SAFAqpF,YACAC,eACAtpF,SADAspF,eAEJ,OAAQtN,aACR,KAAKkJ,sBACDiE,SAASn/C,KAAK,YAAd,aAAAr3C,SACmB22F,eAAe52E,MAAQ02E,gBAD1C,KAAAz2F,OAC6Dk1F,QAAUwB,YADvE,iBAEA,MACJ,KAAKnE,uBACDiE,SAASn/C,KAAK,YAAd,aAAAr3C,OACmB22F,eAAe52E,MAAQ02E,eAD1C,KAAAz2F,OAC6Dk1F,QAAUwB,YADvE,gBAEA,MACJ,KAAKnE,qBACDiE,SAASn/C,KAAK,YAAd,aAAAr3C,OACkB22F,eAAe52E,MAAQ,EADzC,KAAA/f,QAC+C22F,eAAe32E,OAASy2E,eADvE,MAEA,MACJ,KAAKlE,wBACDiE,SAASn/C,KAAK,YAAd,aAAAr3C,OACkB22F,eAAe52E,MAAQ,EADzC,KAAA/f,OAC8C22F,eAAe32E,OAASy2E,eAAiB,EADvF,MAKJ,OAAOD,0LC1MX,IAAMI,sBAAwB,SAAxBA,sBAAyB/wG,MAAOqjC,MAGlC,OAFArjC,MAAM,IAAMqjC,KACZrjC,MAAM,IAAMqjC,KACLrjC,OAELgxG,oBAAsB,SAAtBA,oBAAuBhxG,MAAOqjC,MAGhC,OAFArjC,MAAM,IAAMqjC,KACZrjC,MAAM,IAAMqjC,KACLrjC,OAGLixG,oBAAkBC,4BAAAC,uBACnB/E,qBAAM2E,uBADaG,4BAAAC,oBAEnBhF,wBAAS4E,uBAFUG,4BAAAC,oBAGnB9E,sBAAO2E,qBAHYE,4BAAAC,oBAInB7E,uBAAQ0E,qBAJWG,qBAOXC,aAAe,SAAfA,aAAgBr2E,QAAShhC,KAAMs3G,YAAajwD,QACrDrmB,QAAQ/6B,MAAMqxG,aACdjwD,QAAUrmB,QAAQzvB,OAAR4lG,+BAAA,GAAA/2F,OAAqBpgB,KAArB,UAAoCqnD,UAcrCkwD,iBAAmB,SAAnBA,iBAAoBx7F,QAAS9V,MAAOuV,OAAQjK,QAAW,IAE5Dk4F,YAEAl4F,OAFAk4F,YACAkL,YACApjG,OADAojG,YAEErrE,KAhBY,SAAhBkuE,cAAiBC,SAAUxxG,MAAOuV,QACpC,IAAMk8F,QAAUnvG,KAAKooB,IAAI1qB,MAAM,GAAKA,MAAM,IAGpC0xG,KAAOD,SAFDA,SAAWl8F,OAAO,GAAKA,OAAO,IACrBi8F,UAKrB,OAFaC,QADIA,SAAWC,KAAO,GACDA,MAEpB,EAQDH,CAAcz7F,QAAS9V,MAAOuV,QAC3C,OAAIm5F,YACOuC,mBAAmBzN,aAAaxjG,MAAOqjC,MAE3CrjC,OAGE2xG,YAAc,SAAdA,YAAe52E,QAAS62E,aACjC,IAAIlkD,aACAmkD,eACEvmG,OAASyvB,QAAQzvB,SAH0BwmG,sBAQ7C/2E,QAAQ+1E,iBAHDiB,WALsCD,sBAK7C53E,MACQ83E,YANqCF,sBAM7C33E,OACA8G,QAP6C6wE,sBAO7C7wE,QAGAF,IAIAE,QAJAF,IACAoD,KAGAlD,QAHAkD,KACA8rB,OAEAhvB,QAFAgvB,OACA7rB,MACAnD,QADAmD,MAGA6tE,SACAL,YADAK,SAhB6CC,sBAqB7Cn3E,QAAQ20E,eAFRR,aAnB6CgD,sBAmB7ChD,aACAJ,OApB6CoD,sBAoB7CpD,OAGAC,SACAD,OADAC,SAGAF,cAGAvjG,OAHAujG,cACAD,gBAEAtjG,OAFAsjG,gBACAp+C,WACAllD,OADAklD,WA5B6C2hD,sBAmC7Cp3E,QAAQq3E,oBAJRC,eA/B6CF,sBA+B7CE,eACAC,kBAhC6CH,sBAgC7CG,kBACAC,mBAjC6CJ,sBAiC7CI,mBACA1gD,SAlC6CsgD,sBAkC7CtgD,SAGQ2gD,cAERH,eAFAl4E,OACOs4E,aACPJ,eADAn4E,MAGEw4E,YAAcxD,aAAeN,gBAAkB,EAC/C+D,aAAgB3D,YAAY,EAAMD,SAAUD,OAAOC,UACnD6D,gBAAkB73E,QAAQ83E,iBAC1BC,aAAe/3E,QAAQg4E,cACvBj9F,QAAUilB,QAAQi4E,SAClBz9F,OAASwlB,QAAQxlB,SACjBq7F,eAAiB2B,mBAAmBp4E,OACpC84E,qBAAuBL,gBAAgB14E,MACvCg5E,aAAeJ,aAAa54E,MAC5Bi5E,cAAgBL,aAAa34E,OAEnC,OACI2vB,MACIttB,EAAG,SAAAA,IACC,IAAM42E,UAAYr4E,QAAQs4E,gBAAgBlzG,OAiC1C,OA3BA0xG,eAAiBG,YAAcpB,eAAiB/+C,SAAW6gD,aAH3DhlD,cAAiBqkD,YAAcqB,UAAY,GAAMH,sBAAyBG,WAKvDF,cAA6B,IAAbnE,WAE/B4D,YAAY5D,SAA+B,OAApBD,OAAOC,UAAqB,GAAKA,SAGpDrhD,aAAeylD,gBACftB,eAAiBG,YACjBtkD,aAAeylD,cACfp4E,QAAQ20E,cAAeP,gBAAgB,EAAOC,gBAAgB,MAGlE4C,YAAcpB,gBACd71E,QAAQ20E,cAAe9S,MAAM,IAIjCwU,aAAar2E,QAAS,IAAKu2E,iBAAiBx7F,SAAU43C,aAAe,EACjEqkD,WAAa5tE,KAAOC,MAAQspB,aAAe,GAAIn4C,OAAQjK,QACnD2mG,SAAWD,YAAc,MAEjCj3E,QAAQu4E,eACJp5E,MAAOwzB,aACPvzB,OAAQ03E,eACRr2E,OAAqB,OAAbuzE,WAEL4D,aAEX1wG,EAAG,SAAAA,IACC,IAAIsxG,cAAgBxB,WACdyB,YAAchB,cAAgB,EAmBpC,OAjBApB,aAAar2E,QAAS,IAAKu2E,iBAAiBx7F,SACvCk8F,YAAcjxE,IAAMkvB,OAASujD,YAAaA,aAAcj+F,OAAQjK,QAC7D2mG,SAAWF,WAAa,MAE3BA,WAAanB,eAAiB8B,aAAgBO,uBAC/CM,cAAgB,EAChBx4E,QAAQ20E,cAAeP,gBAAgB,EAAOC,gBAAgB,KAGlEr0E,QAAQu4E,eACJp5E,MAAOq5E,cACPp5E,OAAQ63E,YACRx2E,QAAQ,IAERu2E,WAAanB,gBACb71E,QAAQ20E,cAAe9S,MAAM,IAE1B+V,cAGfrrE,MACI9K,EAAG,SAAAA,IACC40E,aAAar2E,QAAS,KAAM,EAAGg3E,WAAa5tE,KAAOC,OAAQ6tE,SAAWD,YAAc,MACpF,IAAMhyG,MAAQ+6B,QAAQ/6B,QAQtB,GALA0tD,cAAiB1tD,MAAM,GAAKA,MAAM,KAAOwwD,YAAcj7C,QAAQpV,OAAU8yG,qBAGzEpB,eAAiBG,YAAcpB,eAAiB/+C,SAAW6gD,YAEvDhlD,aAAewlD,cAA6B,IAAbnE,SAE/B4D,YAAY5D,SAAwB,OAAbA,UAAqB,GAAKA,SACjD4D,YAAY3D,YAAa,EAGrBthD,aAAeylD,gBACftB,eAAiB,EACjBnkD,aAAe,EACf3yB,QAAQ20E,cAAeP,gBAAgB,EAAOC,gBAAgB,IAC9Dr0E,QAAQ/6B,OAAOmzG,cAAgB,EAAGpB,WAAaoB,cAAgB,UAEhE,GAAI3iD,WAAY,CACDuhD,WAAax8F,OAAOpV,OAAU8yG,qBACjCC,cACXn4E,QAAQ/6B,OAAOmzG,cAAgB,EAAGpB,WAAaoB,cAAgB,IAYvE,OATInB,YAAcpB,gBACd71E,QAAQ20E,cAAe9S,MAAM,EAAOuS,gBAAgB,EAAOC,gBAAgB,IAG/Er0E,QAAQu4E,eACJp5E,MAAOwzB,aACPvzB,OAAQ03E,eACRr2E,OAAqB,OAAbuzE,WAEL4D,aAEX1wG,EAAG,SAAAA,IACCmvG,aAAar2E,QAAS,KAAMi3E,YAAc/hD,OAAQlvB,KAAMkxE,SAAWF,WAAa,MAEhF,IAAIwB,cAAgBxB,WAAanB,eAAiB/+C,SAAW6gD,YAc7D,OAbIa,eAAiBN,uBACjBM,cAAgB,EAChBx4E,QAAQ20E,cAAeP,gBAAgB,EAAOC,gBAAgB,KAGlEr0E,QAAQu4E,eACJp5E,MAAOq5E,cACPp5E,OAAQ63E,YACRx2E,QAAQ,IAERu2E,WAAanB,gBACb71E,QAAQ20E,cAAe9S,MAAM,IAE1B+V,cAGfc,WACIj3E,EAAG,SAAAA,IACCm2E,YAAY3D,YAAa,EACzB,IAAMwE,YAAcf,aAAe,EAInCrB,aAAar2E,QAAS,MAFL8zE,cAAgB,EAAI2E,aAEErvE,KAAM4tE,WAAa3tE,MAAQovE,aAC9DvB,SAAWD,YAAc,MAE7B,IAAMhyG,MAAQ+6B,QAAQ/6B,QAGhB0zG,eAAiBpB,kBAAkBnyG,QAAUsyG,aAAeQ,sBAwBlE,OAvBuBjzG,MAAM,GAAKA,MAAM,GAGnB0zG,gBAAsC,OAApB5E,OAAOC,WACtCiD,YAAcS,aAAeC,YAAc7gD,SAAW++C,gBACtD+B,YAAY5D,SAAW,KACvBh0E,QAAQ20E,cACJP,gBAAgB,EAChBD,cAAc,MAGlByD,YAAY5D,UAAY,GACxBh0E,QAAQ20E,cACJP,gBAAgB,EAChBD,aAAc8C,YAAcS,aAAeC,YAAc7gD,SAAW++C,mBAM5EoB,YAAcpB,gBACd71E,QAAQ20E,cAAe9S,MAAM,IAE1B+V,aAEX1wG,EAAG,SAAAA,IACC0wG,YAAY3D,YAAa,EACzB,IAAMwE,YAAcnB,eAAel4E,OAAS,EAa5C,OAVAi3E,aAAar2E,QAAS,KAAMi3E,YAAc/hD,QAFzB4+C,cAAgB,EAAI2E,aAEwBA,YAAczyE,KACvEkxE,SAAWF,WAAa,MAGxBA,WAAaU,aAAe7B,eAAiB8B,cAC7C33E,QAAQ20E,cAAeP,gBAAgB,IACnC4C,WAAanB,gBACb71E,QAAQ20E,cAAe9S,MAAM,KAG9B+V,siBChRhB,IAAMgB,iBAAmB,SAAnBA,mBAAoD,IAAhC5E,SAAgClrG,UAAA1D,OAAA,QAAA6L,IAAAnI,UAAA,GAAAA,UAAA,GAArB,EAAGq2B,MAAkBr2B,UAAA1D,OAAA,EAAA0D,UAAA,QAAAmI,EAAXmuB,OAAWt2B,UAAA1D,OAAA,EAAA0D,UAAA,QAAAmI,EACzD4nG,cAAgBz5E,OAChB05E,aAAe35E,MACnB,GAAI60E,SAAU,CACV,IAAMmB,OAAUnB,UAAY,GAAKzsG,KAAK4xC,GAAM,IAC5C2/D,aAAevxG,KAAKooB,IAAIyP,OAAS73B,KAAKyyC,IAAIm7D,QAAU5tG,KAAKooB,IAAIwP,MAAQ53B,KAAKwyC,IAAIo7D,QAC9E0D,cAAgBtxG,KAAKooB,IAAIwP,MAAQ53B,KAAKyyC,IAAIm7D,QAAU5tG,KAAKooB,IAAIyP,OAAS73B,KAAKwyC,IAAIo7D,QAEnF,OAASh2E,MAAO25E,aAAc15E,OAAQy5E,gBAG7BE,iBAAY,SAAZA,UAAa/4E,SACtB,IAAIyB,EAAI,EACJv6B,EAAI,EACF8xG,aAAeh5E,QAAQg5E,eACvBzoG,OAASyvB,QAAQzvB,SAEnBk4F,YAGAl4F,OAHAk4F,YACAkE,QAEAp8F,OAFAo8F,QACA2H,QACA/jG,OADA+jG,QAEA7L,cAAgB6I,wBAChB7vE,OAAgBxwB,IAAZ07F,QAAwBqM,aAAa75E,MAAQwtE,SAEjDlE,cAAgB4I,uBAChBnqG,OAAgB+J,IAAZqjG,QAAwB0E,aAAa55E,OAASk1E,SAEtDt0E,QAAQzvB,QAASo8F,QAASlrE,EAAG6yE,QAASptG,KAuB7B+xG,2BAA6B,SAA7BA,2BAA8Bj5E,SACvC,IAGIk5E,UAHAC,YAAc,GACdC,uBAA0Bj6E,MAAO,EAAGC,OAAQ,GAC5Ci6E,aAEE9B,qBACAlrE,MAAQrM,QAAQqM,QACd8nE,aAAiBn0E,QAAQ20E,eAAzBR,aAP2CmF,gBAQtBt5E,QAAQzvB,SAA7BklD,WAR2C6jD,gBAQ3C7jD,WAAYh5D,KAR+B68G,gBAQ/B78G,KACZi4G,aAAiB10E,QAAQ5gC,eAAzBs1G,aACF6E,UAAYltE,MAAMpC,OAASoC,MAAM5B,UAAY4B,MAAM7xB,OA+BzD,OA5BAk6F,aAAah3E,SAASsC,QAAQw5E,iBAM9BN,WAHAA,UAAYzjD,YAAc8jD,aAGJ5tG,IAAI,SAAC8tG,cAAev9G,GACtC,IAAMga,MAAQ8pB,QAAQ05E,iBAAiBD,cAAev9G,EAAGg9G,WAGnD5B,eAAiB5C,aAAahxE,WAAWxtB,OAY/C,OATAqhG,kBAAkB3tG,KAAK0tG,gBAGnBA,eAAen4E,MAAQi6E,sBAAsBj6E,QAC7Cg6E,YAAcjjG,MAEdmjG,WADAA,UAAYr5E,QAAQi0E,aAAej0E,QAAQi0E,aAAa/3G,WAExDk9G,sBAAwB9B,gBAErBphG,QAGXw+F,aAAah3E,SAASsC,QAAQ25E,iBAI1BnC,mBAHuBrD,aAAeO,aAAahxE,WAAWjnC,OAAU0iC,MAAO,EAAGC,OAAQ,GAI1F+5E,wBACAC,4CACA7B,oCACA2B,oBACAG,oBACAviD,SAAU92B,QAAQ40E,gBAqDbgF,uBAAyB,SAAzBA,uBAA0B55E,QAAS65E,eAAgB50G,OAC5D,IAAIk6B,MACAC,OACE5kB,OAASwlB,QAAQxlB,SACfs8C,SAAiD+iD,eAAjD/iD,SAAUwgD,eAAuCuC,eAAvCvC,eAAgBE,mBAAuBqC,eAAvBrC,mBAJoCsC,iBAK9B95E,QAAQzvB,SAAxCsjG,gBAL8DiG,iBAK9DjG,gBAAiBp+C,WAL6CqkD,iBAK7CrkD,WACjB0+C,aAAiBn0E,QAAQ20E,eAAzBR,aACQ4F,cAAkBvC,mBAA1Bp4E,OACQq4E,cAAuCH,eAA/Cl4E,OAA8Bs4E,aAAiBJ,eAAxBn4E,MAK/B,GAHAA,MAAQl6B,OAASA,MAAMG,OAASH,MAAM,GAAKA,MAAM,GAAK,EAEtDm6B,OAAS,EACLq2B,WAAY,CACZ,IAAMukD,YAAch6E,QAAQi6E,uBADhBjiF,MAGRzwB,KAAKsQ,IAAL5M,MAAA1D,KAAI2yG,wCAAQzkD,YAARr2C,OAAA86F,wCAAuB1/F,UAC3BjT,KAAKwQ,IAAL9M,MAAA1D,KAAI2yG,wCAAQzkD,YAARr2C,OAAA86F,wCAAuB1/F,WAG/B2kB,OAPYnH,KAAA,GAAAA,KAAA,IAOWzwB,KAAKooB,IAAIqqF,cAAiBtC,aAAe13E,QAAQ83E,iBAAiB34E,OAS7F,OAJIC,OAHCD,OAAmB,IAAVA,MAGDs4E,cAFAlwG,KAAKwQ,IAAI2/F,aAAcD,gBAOhCt4E,YACAC,OAJJA,SAAW+0E,aAAe4F,cAAgBlG,gBAAkB,GAAK/8C,WAgBxDqjD,qBAAuB,SAAvBA,qBAAwBn6E,QAAS65E,gBAC1C,IAAIz6E,OACAD,MACE3kB,OAASwlB,QAAQxlB,SACfs8C,SAAiD+iD,eAAjD/iD,SAAUwgD,eAAuCuC,eAAvCvC,eAAgBE,mBAAuBqC,eAAvBrC,mBAJ2B4C,iBAKrBp6E,QAAQzvB,SAAxCsjG,gBALqDuG,iBAKrDvG,gBAAiBp+C,WALoC2kD,iBAKpC3kD,WACjB0+C,aAAiBn0E,QAAQ20E,eAAzBR,aACQ4F,cAAkBvC,mBAA1Bp4E,OACQq4E,cAAuCH,eAA/Cl4E,OAIR,GAFAA,OAAS,EACTD,MAHuDm4E,eAAxBn4E,MAI3Bs2B,WAAY,CACZ,IAAMukD,YAAch6E,QAAQi6E,uBADhBnsC,OAGRvmE,KAAKsQ,IAAL5M,MAAA1D,KAAI2yG,wCAAQzkD,YAARr2C,OAAA86F,wCAAuB1/F,UAC3BjT,KAAKwQ,IAAL9M,MAAA1D,KAAI2yG,wCAAQzkD,YAARr2C,OAAA86F,wCAAuB1/F,WAG/B4kB,QAPY0uC,MAAA,GAAAA,MAAA,IAOYvmE,KAAKooB,IAAIqqF,aAAgBvC,cAIrD,OACIr4E,cACAD,MAJJA,QAAUg1E,aAAe4F,cAAgB,GAAKjjD,SAAW+8C,kBAYhDwG,0BAAqB,SAArBA,mBAAsBr6E,SAC/B,IAAM/6B,MAAQ+6B,QAAQ/6B,QAChB40G,eAAiB75E,QAAQq3E,oBACvB5O,YAAgBzoE,QAAQzvB,SAAxBk4F,YACA5G,KAAS7hE,QAAQ20E,eAAjB9S,KACAuX,sBAAwDS,eAAxDT,sBAAuBF,UAAiCW,eAAjCX,UAAW3B,kBAAsBsC,eAAtBtC,kBAC1B+C,iBAAqBlB,sBAA7Bh6E,OACF+4E,aAAen4E,QAAQ83E,iBAAiB34E,MAC9C,GAAIspE,cAAgB4I,sBAAO5I,cAAgB2I,wBAAQ,KAAAmJ,sBAI3CX,uBAAuB55E,QAAS65E,eAAgB50G,OAFhDk6B,OAF2Co7E,sBAE3Cp7E,MACAC,QAH2Cm7E,sBAG3Cn7E,OAYJ,OATKD,QAAmB,IAAVA,SACVA,OAAQo4E,kBAAkBphG,OAAO,SAAC/Y,EAAGO,GAAJ,OAC7BP,EAAImK,KAAKsQ,IAAIla,EAAEwhC,MAAOxhC,EAAEyhC,QAAU+4E,cAAc,KAE3C,IAATtW,OACAziE,QAAS,EACTD,OAAQ,IAIRA,aACAC,gBAzBmC,IAAAo7E,sBAgCvCL,qBAAqBn6E,QAAS65E,gBAF9B16E,MA9BuCq7E,sBA8BvCr7E,MACAC,OA/BuCo7E,sBA+BvCp7E,OAUJ,OAPKA,QAAqB,IAAXA,SACXA,OAAS85E,UAAU9zG,QAAUk1G,iBAAmBt6E,QAAQ83E,iBAAiB14E,QAAUk7E,mBAE1E,IAATzY,OACA1iE,MAAQ,IAIRA,YACAC,gBAwDKq7E,sBAAiB,SAAjBA,eAAkBz6E,QAASxlB,QAAW,IAC/BkgG,QAAY16E,QAAQzvB,SAA5BiK,OAMR,OAJIkgG,UACAlgG,OAASkgG,SAGN/qC,aAAan1D,YAGXmgG,uBAAyB,SAAzBA,uBAA0B36E,QAASxlB,QAAW,IAC/CuqC,KAAS/kB,QAAQzvB,SAAjBw0C,KACF1Y,MAAQrM,QAAQqM,MAAM3uC,KAAKsiC,SAEjCqM,QAAQ7xB,OAAOA,QACfuqC,MAAQ1Y,QAAQ0Y,OAChB/kB,QAAQ46E,QAAUvuE,QAAQ7xB,UCvVjB+jF,aACTwX,kBACA8D,kBACAgB,2BACAtqG,QACIqhE,aAAc,SAAAA,aAAC5xC,QAAS7iC,OACpB,IAAM29G,UAAYl+G,OAAO4T,UAAWwvB,QAAQ+zD,aACtCgnB,gBAAkBpoC,kBAAmBmoC,YAC3C39G,MAAQw1E,eAAeooC,gBAAiB59G,QAElC02G,gBAAkBtsG,KAAKwQ,IAAI5a,MAAM02G,gBAAiB,GACxD,IAAMmH,sBDuVkB,SAAvBC,uBAA4D,IAApCrvG,IAAoC9C,UAAA1D,OAAA,QAAA6L,IAAAnI,UAAA,GAAAA,UAAA,MAA1BqE,KAA0BrE,UAAA1D,OAAA,QAAA6L,IAAAnI,UAAA,GAAAA,UAAA,MAAfoyG,WAAepyG,UAAA1D,OAAA,EAAA0D,UAAA,QAAAmI,EACrE,SAAKrU,OAAO4M,KAAKoC,KAAKxG,SAAWxI,OAAO4M,KAAK2D,MAAM/H,SAG5C81G,WAAW54F,KAAK,SAAA7kB,KAAG,OAAImO,IAAInO,OAAS0P,KAAK1P,OC3VVw9G,CAC1B99G,MAAO29G,WAAY,eAAgB,WAAY,OAAQ,gBAErDK,cAAgBn7E,QAAQo7E,sBAAsBj+G,OAEhD69G,wBACAh7E,QAAQq7E,OAASr7E,QAAQyzE,YAAYt2G,OACrC6iC,QAAQs7E,MAAQt7E,QAAQu7E,WAAWp+G,QAGvC6iC,QAAQw7E,eAAiB,SAAAvxE,OAAK,OAAIkxE,cAAclxE,QAhBlB,IAAAp6B,OAwB1B1S,MALA42G,OAnB0BlkG,OAmB1BkkG,OACAlS,KApB0BhyF,OAoB1BgyF,KACAuS,eArB0BvkG,OAqB1BukG,eACAC,eAtB0BxkG,OAsB1BwkG,eACAF,aAvB0BtkG,OAuB1BskG,aASJ,OAPAn0E,QAAQ20E,cACJZ,cACAlS,UACAuS,8BACAC,8BACAF,4BAEGh3G,QAGfw3G,cACI/iC,aAAc,SAAAA,aAAC5xC,QAAS7iC,OACpB,IAAM29G,UAAYl+G,OAAO4T,UAAWwvB,QAAQy7E,mBAE5C,OADAt+G,MAAQw1E,eAAemoC,UAAW39G,SAI1C67G,gBACA5hF,SAEAnyB,OACI2sE,aAAc,SAAAA,aAAC5xC,QAAS7iC,OAGpB,OAFA6iC,QAAQqM,QAAQpnC,MAAM9H,OACtB6iC,QAAQg5E,aAAa,MACd77G,QAIf82G,cACAn9C,YACAyhD,eACI3mC,aAAc,SAAAA,aAAC5xC,QAAS7iC,OACpB,IAAM29G,UAAYl+G,OAAO4T,UAAWwvB,QAAQ07E,oBAE5C,OADAv+G,MAAQw1E,eAAemoC,UAAW39G,SAI1CqhG,aACI7uB,aAAc,SAAAA,aAAA/qE,KAAG,OAAIA,0SClDR+2G,kCAMjB,SAAAA,WAAaprG,OAAQnR,wKAAcw8G,CAAAl4G,KAAAi4G,YAC/Bj4G,KAAK2lF,IAAMp7E,cAEXvK,KAAKm4G,cAAgBz8G,aACrBsE,KAAKkjG,OAAS,KACdljG,KAAKo4G,UACLp4G,KAAKk3G,WACLl3G,KAAKq4G,aAAc,EACnBr4G,KAAKs4G,mBACLt4G,KAAK6xG,eAEL,IAAM0G,OAAStpC,kBAAmBjvE,KAAK4lB,YAAYu1E,iBAC7Cqd,aAAevpC,eAAespC,OAAQ1rG,QAEtC4rG,SAAW1wB,6BAAc,QACzBiU,YAAcwc,aAAaxc,YACjCh8F,KAAK81G,gBAAkBrsB,qCAAsBgvB,SAAD,GAAA/8F,OAAcsgF,YAAd,WAC5Ch8F,KAAKi2G,eAAiBxsB,qCAAsBgvB,SAAD,GAAA/8F,OAAcsgF,YAAd,eAE3CtgG,aAAas1G,aAAah3E,SAASh6B,KAAK81G,iBACxC,IAAM4C,KAAOh9G,aAAas1G,aAAahxE,WAAW,KAElDhgC,KAAKo0G,kBAAqB34E,MAAoB,EAAbi9E,KAAKj9E,MAAY,EAAGC,OAAQg9E,KAAKh9E,OAAS,GAC3E17B,KAAKs0G,cAAgB54G,aAAas1G,aAAahxE,WAAW,OAE1DuuC,sBAAsBvuE,KAAM66F,aAC5B76F,KAAK6M,OAAO2rG,cAEZx4G,KAAK23G,OAAS33G,KAAK+vG,YAAY/vG,KAAKqwF,SACpCrwF,KAAK43G,MAAQ53G,KAAK63G,WAAW73G,KAAKqwF,SAClCrwF,KAAK24G,8UAoBL,OAAO34G,2CAUP,OAAIoF,UAAO1D,QACP1B,KAAK23G,OAALvyG,UAAA1D,QAAA,OAAA6L,EAAAnI,UAAA,GACOpF,MAEJA,KAAK23G,yDAKZ,OADA33G,KAAKk3G,WACEl3G,yCAUP,OAAIoF,UAAO1D,QACP1B,KAAK43G,MAALxyG,UAAA1D,QAAA,OAAA6L,EAAAnI,UAAA,GACOpF,MAEJA,KAAK43G,8CAWZ,GAAIxyG,UAAO1D,OAAQ,CACf,IAAMk3G,YAAc7B,sBAAe/2G,KAADoF,UAAA1D,QAAA,OAAA6L,EAAAnI,UAAA,IAKlC,OAJApF,KAAK2oC,QAAQ7xB,OAAO8hG,aACpB54G,KAAKk3G,QAAUl3G,KAAK2oC,QAAQ7xB,SAC5B9W,KAAK64G,6BACL74G,KAAKs1G,aAAa,MACXt1G,KAEX,OAAOA,KAAKk3G,wFAIZl3G,KAAKm3G,wBAAwB5B,2BAA2Bv1G,2DAUxD,OAAOA,KAAKm4G,8DASHtrG,QAAQ,IAEb80C,KAIA90C,OAJA80C,KAeJ,OATcouD,2BACVvtE,QAHA31B,OAHA21B,QAOAqtB,aAJAhjD,OAFAgjD,aAOA5Q,SALApyC,OADAoyC,SAOA0C,UACApgD,MANUvB,KAAKuB,QAOfjG,KAAM0E,KAAK4lB,YAAYtqB,6EAMR7B,OAAO,IAClB2nD,WAA6B3nD,MAA7B2nD,WAAYnpC,aAAiBxe,MAAjBwe,aAEpB,OAAImpC,WACO,SAAA7a,OAAK,OAAI,SAACrlC,IAAK1I,GAAN,OAAY4oD,WAAWnpC,aAAa/W,KAAMA,IAAK1I,EAAG+tC,SAG/D,kBAAM,SAAArlC,KAAG,OAAI+W,aAAa/W,qEAIjClB,KAAKs1G,aAAa,MAClBt1G,KAAKuB,UAFY,IAAAonG,aASb3oG,KAAK6M,SALLwjG,OAJa1H,aAIb0H,OACAlS,KALawK,aAKbxK,KACAuS,eANa/H,aAMb+H,eACAC,eAPahI,aAObgI,eACAF,aARa9H,aAQb8H,aAEJzwG,KAAKixG,cACDZ,cACAlS,UACAuS,8BACAC,8BACAF,sFAIUpwG,KAAM4B,MAAOuzG,WAG3B,OAAOpzG,EAFWpC,KAAK83G,gBAENtC,UAAVpzG,CAAqB/B,KAAM4B,qDAS1B4K,QAAQ,IACRk4F,YAAgBl4F,OAAhBk4F,YACF+T,UAAYhL,mBAAmB/I,aAErC,OAAI+T,UACaA,UAAU94G,KAAK2oC,SAGzB,mEAW8C,IAAtClN,MAAsCr2B,UAAA1D,OAAA,QAAA6L,IAAAnI,UAAA,GAAAA,UAAA,GAA9B,EAAGs2B,OAA2Bt2B,UAAA1D,OAAA,EAAA0D,UAAA,QAAAmI,EAAnBi1B,QAAmBp9B,UAAA1D,OAAA,EAAA0D,UAAA,QAAAmI,EAAVimG,SAAUpuG,UAAA1D,OAAA,EAAA0D,UAAA,QAAAmI,EACjD2mG,eAEDnP,YACA/kG,KAAK6M,SADLk4F,YAiBH,OAdA/kG,KAAKqyG,gBAAiB52E,YAAOC,cAAQ8G,kBAGjC0xE,YADAnP,cAAgB4I,sBAAO5I,cAAgB2I,wBACzBwF,YAAYlzG,MAAQwzG,oBAAYwB,UAAUj3E,IAE1Cm1E,YAAYlzG,MAAQwzG,oBAAYwB,UAAUxxG,IAI5DxD,KAAKixG,cACDZ,OAAQ6D,cAEZl0G,KAAK+4G,gBACL/4G,KAAKkxG,cACElxG,2DASP,OAAOA,yDAGIg5G,WACX,GAAkB,OAAdA,gBAAoCzrG,IAAdyrG,UAG1B,OAAOh5G,KAAK2oC,OAAL3oC,CAAag5G,6DAUpB,OAAOh5G,KAAK4xD,OAAOwB,yEASO,QAAAkV,KAAAljE,UAAA1D,OAARkgB,OAAQ,IAAA/Y,MAAAy/D,MAAAC,KAAA,EAAAA,KAAAD,KAAAC,OAAR3mD,OAAQ2mD,MAAAnjE,UAAAmjE,MAE1B,OADAvoE,KAAKm2G,eFtLwB,SAAxB8C,sBAAyB38E,SAClC,IAAIs3E,kBACIvD,OAAW/zE,QAAQ20E,eAAnBZ,OACAE,WAAyBF,OAAzBE,WAAYD,SAAaD,OAAbC,SAH0B4I,sBAW1C3D,2BAA2Bj5E,SAN3Bo5E,sBAL0CwD,sBAK1CxD,sBACAF,UAN0C0D,sBAM1C1D,UACAG,UAP0CuD,sBAO1CvD,UACA7B,mBAR0CoF,sBAQ1CpF,mBACAD,kBAT0CqF,sBAS1CrF,kBACAzgD,SAV0C8lD,sBAU1C9lD,SAEY+lD,YAAmCzD,sBAA3Ch6E,OAA4B09E,WAAe1D,sBAAtBj6E,MAM7B,OAAsB,IAHPa,QAAQxlB,SAGZpV,OACA,MAOXkyG,eAAiBsB,iBAAiB5E,UAJ9BsD,eADArD,WACiBoF,WAEEl6E,MAAO29E,WAAY19E,OAAQy9E,cAES19E,MAAOm4E,eAAel4E,QAEhE,IAAb03B,WACAwgD,gBAAmBn4E,MAAO,EAAGC,OAAQ,KAGrCm4E,oCACAzgD,kBACAwgD,8BACAE,sCACA4B,4CACAF,uBEiJyCjuG,WAArB,GAAsBvH,MAAtB0b,OAA+BkG,UAC5C5hB,KAAKm2G,2EAgBZ,OANKn2G,KAAKs1G,iBACNt1G,KAAKs1G,aFlBsB,SAA1B+D,wBAA2B/8E,SACpC,IAAM/6B,MAAQ+6B,QAAQ/6B,QAChB40G,eAAiB75E,QAAQq3E,oBACvB5O,YAAgBzoE,QAAQzvB,SAAxBk4F,YAHwCuU,uBAIjBh9E,QAAQ20E,eAA/B9S,KAJwCmb,uBAIxCnb,KAAMsS,aAJkC6I,uBAIlC7I,aACNqD,mBAAuBqC,eAAvBrC,mBAER,IAAa,IAAT3V,KACA,OACI1iE,MAAO,EACPC,OAAQ,GAVgC,IAcjC69E,cAAkBzF,mBAAzBr4E,MAER,GAAIspE,cAAgB4I,sBAAO5I,cAAgB2I,wBAAQ,KAAA8L,uBAI3CtD,uBAAuB55E,QAAS65E,eAAgB50G,OAFhDk6B,QAF2C+9E,uBAE3C/9E,MACAC,SAH2C89E,uBAG3C99E,OAIJ,OACID,MAHc53B,KAAKwQ,IAAIonB,QAAO89E,eAI9B79E,iBAzBwC,IAAA+9E,uBA+B5ChD,qBAAqBn6E,QAAS65E,gBAF9B16E,MA7B4Cg+E,uBA6B5Ch+E,MACAC,OA9B4C+9E,uBA8B5C/9E,OAKJ,OACID,YACAC,OAJc73B,KAAKwQ,IAAIqnB,OAAQ+0E,aAAe8I,cAAgB,IEfxCF,CAAwBr5G,OAC1CA,KAAKs1G,eACLD,iBAAUr1G,OAGPA,KAAKs1G,qDAQR77G,OACJ,OAAOuG,KAAK2oC,QAAQgB,OAAOlwC,+DAUdm+C,GAAIC,IACjB,OAAQD,GAAIC,sDAGFD,GAAIC,IACd,OAAQ73C,KAAK2pC,OAAOiO,IAAK53C,KAAK2pC,OAAOkO,yEAIrC,OAAO73C,KAAK8W,+EAGQi7C,YACpB,OAAOA,+DAYP,OAAO,gDAWP,OACIh5D,KAAMiH,KAAKjH,KACXuC,KAAM0E,KAAK1E,KACXiG,MAAOvB,KAAKuB,QACZsL,OAAQ7M,KAAK6M,kDAwBjB,OAJI7M,KAAK0zB,UACL1zB,KAAK+4G,gBJxKV,SAASW,WAAY9H,cACxB,IAAM/kG,OAAS+kG,aAAa/kG,SACtBokG,aAAeW,aAAaX,eAC5BD,aAAeY,aAAal2G,eAAes1G,aAC3Ct9E,MAAQk+E,aAAal+E,QACrBnyB,MAAQqwG,aAAarwG,QACrBqwD,KAAOggD,aAAahgD,OACpBjpB,MAAQipE,aAAajpE,QAEPgxE,cAIf/H,aAJDqE,eACiB2D,eAGhBhI,aAHDkE,gBACgB+D,kBAEfjI,aAFDkG,eACA/lD,WACC6/C,aADD7/C,WAGAgzC,YAQCl4F,OARDk4F,YACAhsG,KAOC8T,OAPD9T,KACAkwG,QAMCp8F,OANDo8F,QACA2H,QAKC/jG,OALD+jG,QACAT,gBAICtjG,OAJDsjG,gBACArvE,UAGCj0B,OAHDi0B,UACApI,GAEC7rB,OAFD6rB,GACAsjE,YACCnvF,OADDmvF,YAGAmC,KAGA8S,aAHA9S,KACAsS,aAEAQ,aAFAR,aACAJ,OACAY,aADAZ,OAGJ,GAAKlS,KAAL,CAIA,IAAM/qC,SAAWw+C,aAAaV,cAExBS,gBAAkB3pB,YAAYD,6BAAcr0D,OAAQ,KAAMk+E,cAA7B,GAAAl2F,OAA+ColB,cAC9E,SAAA/mC,KAAG,OAAIA,IAAI8S,SAAS6rB,KAGxBs4E,aAAah3E,SAAS4/E,gBAEtB,IAAM/D,UAAYltE,MAAMpC,OAASoC,MAAM5B,UAAY4B,MAAM7xB,OAEnDyvB,MAAQwrB,YAAcH,KAAKG,cAAgB8jD,YAEjDjkD,KAAKxQ,WAAWy4D,kBAAkBtzE,QAGlC,IAAM8rE,eAAiBxuG,KAAKooB,IAAI1qB,MAAM,GAAKA,MAAM,IAG3Cu4G,WAAalI,aAAauF,0BAA0BzB,sBAG1D/D,gBAAgB5+C,KAAK,YAArB,aAAAr3C,OAA+CutF,QAA/C,KAAAvtF,OAA0Dk1F,QAA1D,MACAoB,+BAAiBJ,eACS,IAAtBvB,OAAOE,YAAqC,IAAbn9C,SAC/Bu+C,gBAAgBz+C,aACCqyB,SAAS,KACTnY,GAAG,MAAOwkC,aAAaG,6BACvBp5G,KAAKi5D,MAEtB+/C,gBAAgBh5G,KAAKi5D,MAEzB+/C,gBAAgBl/C,UAAU,SAASmrB,QAAnC,GAAAliE,OAA8CsgF,YAA9C,WAAmE,GACnE2V,gBAAgBl/C,UAAU,cAAcmrB,QAAxC,GAAAliE,OAAmDsgF,YAAnD,gBAA6E,GAG5D2V,gBAAgBl/C,UAAU,cAClCmrB,QAAT,GAAAliE,OAAoBsgF,YAApB,WAAyC,GACxBpe,QADjB,GAAAliE,OAC4BsgF,YAD5B,WAAAtgF,OACiDgd,KAAM,GAEvDg5E,oCAAsBC,gBAAiBC,aAAcx+C,UAGrD,IAAM8+C,SAAWlqB,YAAY2pB,gBAAiB,QAAS54G,MAA3B,GAAA2iB,OAAqCsgF,YAArC,eACXjpC,KAAK,cAAe,UACpB6qB,QAFA,GAAAliE,OAEWsgF,YAFX,eAAAtgF,OAEoCgd,KAAM,GAC1Cr4B,KAAK,SAAAvH,GAAC,OAAIA,IAG3Bo5G,SAASt0B,QAAQmxB,QAAS0B,cAG1B,IAAM2B,YAAcC,eAAiB,EAGrCrB,aAAah3E,SAAS2/E,eACtB,IAAMI,cAAgB/I,aAAahxE,WAAWjnC,MACxCgwB,UACF+wF,sBACA1mD,kBACA+8C,gCACAgC,eAAgB4H,cAAcr+E,OAC9B69E,cAAeQ,cAAct+E,MAC7Bm1E,gBACA3H,gBACAmJ,wBACAC,eAAgBT,aAAaS,kBAGjCJ,6BAAeC,SAAUnN,YAAah8E,WImE9B2wF,CAAW15G,OAERA,6CAWP,OADA+nF,6BAAc/nF,KAAK0zB,SAAS0T,SACrBpnC,uDASP,OAAOA,mDAUP,IAAMuB,MAAQvB,KAAKuB,QACnB,OAAOA,MAAM,GAAKA,MAAM,uEAUxB,IAAMonC,MAAQ3oC,KAAK2oC,QACbpnC,MAAQonC,MAAMpnC,QACduV,OAAS6xB,MAAM7xB,SAErB,OAAOjT,KAAKooB,IAAI1qB,MAAM,GAAKA,MAAM,KAAOuV,OAAO,GAAKA,OAAO,0DAU3D,OAAOm0E,QAAQ+uB,IAAIh6G,KAAK24G,sGAIxB,IAAItuB,UACEa,QAAU,IAAID,QAAQ,SAAC7hE,SACzBihE,UAAYjhE,UAIhB,OAFAppB,KAAK24G,uBAAuBzyG,KAAKglF,SAE1B,WACHb,4CAjFJ,OAAOrqF,KAAK2lF,4DApTZ,OAAOwV,4VC/DM8e,mhBAEJptG,QAAQ,IAEbtL,MACAsL,OADAtL,MAEEyuG,aAAeL,SAASz3D,OAE9B,OADAl4C,KAAK23G,OAAS3H,eAAezuG,MAAMA,OAC5BvB,KAAK23G,2DAGDqB,WACX,OAAOh5G,KAAK23G,OAAOqB,WAAa,yDAGpBliG,QAIZ,OAHIA,OAAOpV,QAAUoV,OAAO,KAAOA,OAAO,KACtCA,QAAU,EAAgB,GAAZA,OAAO,KAElBA,4TCnBMojG,wfAEJrtG,QAAQ,IAEbtL,MAEAsL,OAFAtL,MACAogD,KACA90C,OADA80C,KAEEquD,aAAeL,SAASjpE,IAE9B,OADA1mC,KAAK23G,OAAS3H,eAAezuG,MAAMA,OAAOogD,KAAKA,MACxC3hD,KAAK23G,2DAGDqB,WACX,OAAIA,WAAa,EACN,EAGJh5G,KAAK23G,OAAOqB,WAAa,yDAGpBliG,QACZ,OAAIA,OAAO,IAAM,GACLjT,KAAKwQ,IAAI,EAAGyC,OAAO,IAAKjT,KAAKwQ,IAAI,EAAGyC,OAAO,KAC9CA,0UCvBIqjG,wfAEJttG,QAAQ,IAEbtL,MAEAsL,OAFAtL,MACA09C,SACApyC,OADAoyC,SAEE+wD,aAAeL,SAAS/6F,IAE9B,OADA5U,KAAK23G,OAAS3H,eAAezuG,MAAMA,OAAO09C,SAASA,UAC5Cj/C,KAAK23G,2DAGDqB,WACX,OAAOh5G,KAAK23G,OAAOqB,WAAa,yDAGpBliG,QACZ,OAAOA,28CCPR,IAAMsjG,iBAAeC,8BAAAC,oBACvB9L,IAAM0L,qBADiBG,8BAAAC,iBAEvB7L,IAAM0L,qBAFiBE,8BAAAC,iBAGvBpM,OAAS+L,2BAHcK,kBAMPC,mDACjB,SAAAA,cAAa1tG,OAAQnR,cAAc,mKAAA8+G,CAAAx6G,KAAAu6G,eAC/B1tG,OAAOu0C,WAAav0C,OAAOu0C,YAAe,SAAAlgD,KAAG,OAAIA,KADlBu5G,yCAAAz6G,KAAA06G,8BAAAH,eAAA5hH,KAAAqH,KAEzB6M,OAAQnR,sZAHqBu8G,qUAW1BprG,QAAQ,IAEb80C,KAIA90C,OAJA80C,KACAnf,QAGA31B,OAHA21B,QACAqtB,aAEAhjD,OAFAgjD,aACA5Q,SACApyC,OADAoyC,SAEE19C,MAAQvB,KAAKuB,QACbo5G,gBAAkBP,gBAAgBvqD,cAExC7vD,KAAK46G,cAAgB,IAAID,gBACzB,IAAIhyE,MAAQ3oC,KAAK46G,cAAc7K,aAC3BvtE,gBACAyc,kBACA0C,UACApgD,cAIJ,OADAonC,MAAQA,MAAM0Y,2DAeH23D,WACX,GAAkB,OAAdA,gBAAoCzrG,IAAdyrG,UAG1B,OAAOh5G,KAAK46G,cAAcld,cAAcsb,6DAQ7B,IAAA6B,mBAIP76G,KAAKixG,eAFLP,eAFOmK,mBAEPnK,eACAC,eAHOkK,mBAGPlK,eAEE/+C,KAAO5xD,KAAK4xD,OAIlB,OAHAA,KAAKK,eAAiC,IAAnBy+C,eAA2B,EAAI,GAClD9+C,KAAKM,eAAiC,IAAnBy+C,eAA2B,EAAI,GAE3C/+C,KAAKwB,mDAWZ,GAAIhuD,UAAO1D,OAAQ,CACf,IAAMs3G,UAAYh5G,KAAK46G,cAAcE,eAAe/D,sBAAe/2G,KAADoF,UAAA1D,QAAA,OAAA6L,EAAAnI,UAAA,KAIlE,OAHA6xG,uBAAuBj3G,KAAMg5G,WAC7Bh5G,KAAK64G,6BACL74G,KAAKs1G,aAAa,MACXt1G,KAEX,OAAOA,KAAKk3G,sEAWyC,IAAtCz7E,MAAsCr2B,UAAA1D,OAAA,QAAA6L,IAAAnI,UAAA,GAAAA,UAAA,GAA9B,EAAGs2B,OAA2Bt2B,UAAA1D,OAAA,EAAA0D,UAAA,QAAAmI,EAAnBi1B,QAAmBp9B,UAAA1D,OAAA,EAAA0D,UAAA,QAAAmI,EAAVimG,SAAUpuG,UAAA1D,OAAA,EAAA0D,UAAA,QAAAmI,EACjD2mG,eAEDnP,YACA/kG,KAAK6M,SADLk4F,YAiBH,OAdA/kG,KAAKqyG,gBAAiB52E,YAAOC,cAAQ8G,kBAGjC0xE,YADAnP,cAAgB4I,sBAAO5I,cAAgB2I,wBACzBwF,YAAYlzG,MAAQwzG,oBAAYwB,UAAUj3E,IAE1Cm1E,YAAYlzG,MAAQwzG,oBAAYwB,UAAUxxG,IAI5DxD,KAAKixG,cACDZ,OAAQ6D,cAEZl0G,KAAK+4G,gBACL/4G,KAAKkxG,cACElxG,2DAUM,IAAA+6G,cAIT/6G,KAAK6M,SAFLklD,WAFSgpD,cAEThpD,WACA3Q,WAHS25D,cAGT35D,WAGAsvD,eACA1wG,KAAKixG,eADLP,eAEE9+C,KAAO5xD,KAAK4xD,OAElB,IAAK8+C,eAED,OADA9+C,KAAKG,eACE/xD,KAGX,GAAI+xD,WAEA,OADAA,sBAAsBlpD,OAAS7I,KAAK4xD,OAAOG,WAAWA,YAC/C/xD,KAEX,IAAMg7G,cAAgBh7G,KAAK40G,gBAE3BhjD,KAAKG,WAAWipD,eAChB,IAAMv7E,WAAaz/B,KAAKtE,eAAes1G,aACvCvxE,WAAWzF,SAASh6B,KAAK81G,iBAEzB,IAAMvF,WAAayK,cAAc/yG,IAAI,SAACvN,GAClC,IAAM2F,KAAO+gD,WAAW1mD,GAClBugH,UAAYx7E,WAAWO,WAAW3/B,MAGxC,OADA46G,UAAU56G,KAAOA,KACV46G,YAIX,OADAj7G,KAAKuwG,WAAWA,YACTvwG,2DAUP,IADak7G,cAKTl7G,KAAK6M,SAFLk4F,YAHSmW,cAGTnW,YACAhzC,WAJSmpD,cAITnpD,WAEExwD,MAAQvB,KAAKuB,QACbqwD,KAAO5xD,KAAK4xD,OAEZygD,eAAiBxuG,KAAKooB,IAAI1qB,MAAM,GAAKA,MAAM,IAE3Cu4G,WAAa95G,KAAKm3G,0BAA0BzB,sBAElD,OAAI3jD,WACOH,KAAKjpB,QAAQpC,MAAMwrB,YNrKN,SAAnBopD,iBAAoB9I,eAAgB+I,SAAUxpD,KAAMggD,cAC7D,IAAMrrE,MAAQqrB,KAAKjpB,QAAQpC,QACnBiqE,cAAkBoB,aAAa/kG,SAA/B2jG,cACF6K,WAAa90E,MAAM7kC,OACrB45G,eAAiBD,WAEjBA,YAAyB,IAAXD,UAAkB/I,iBAChCiJ,eAAiBz3G,KAAKwN,MAAMghG,gBAA6B,IAAX+I,YAGlDE,eAAiBz3G,KAAKsQ,IAAIq8F,cAAe3sG,KAAKwQ,IAAI,EAAGinG,iBACrD,IAAIvpD,WAAaH,KAAKjpB,QAAQpC,MAAM+0E,gBAMpC,OAJuB,IAAnBA,iBAEAvpD,aADAA,WAAaH,KAAKjpB,QAAQpC,MAAM,KACP,GAAIwrB,WAAWA,WAAWrwD,OAAS,KAEzDqwD,WMwJIopD,CAAiB9I,eAFbyH,WAAW/U,cAAgB2I,yBAAU3I,cAAgB4I,qBAAM,QAAU,UAE9B/7C,KAAM5xD,0EAIxD,OAAOi1E,gBAAgBj1E,KAAK6M,SAASklD,sEAWvBg/C,UAAU,IAEpBhM,YACA/kG,KAAK6M,SADLk4F,YAOAuL,SAHAtwG,KAAKixG,eADLZ,OAIAC,SAEE1+C,KAAO5xD,KAAK4xD,OACZrrB,MAAQqrB,KAAKjpB,QAAQpC,QAZHg1E,kBAcEv7G,KAAKuwG,aAAa,GAApC90E,MAdgB8/E,kBAchB9/E,MAAOC,OAdS6/E,kBAcT7/E,OAYf,OAVAk2B,KAAKI,cAAc,SAACl5D,GAChB,GAAIA,IAAMytC,MAAM,GAAI,CAChB,GAAKw+D,cAAgB6I,uBAAQ7I,cAAgB8I,uBACzC,uBAAAnyF,OAAyBggB,OAAU,EAAnC,OAEJ,IAAKqpE,cAAgB4I,sBAAO5I,cAAgB2I,2BAAY4C,SACpD,mBAAA50F,OAAoB+f,MAAQ,EAA5B,QAAqC,EAArC,OAEN,MAAO,KAENs1E,+CAzLP,OAAO7C,qtDCrDMsN,ssBAAiBvD,iTASrBprG,QACT,OAAA4uG,KAAAC,yBAAAF,SAAAlhH,WAAA,cAAA0F,MAAArH,KAAAqH,KAAyB6M,sEAsB4B,IAAtC4uB,MAAsCr2B,UAAA1D,OAAA,QAAA6L,IAAAnI,UAAA,GAAAA,UAAA,GAA9B,EAAGs2B,OAA2Bt2B,UAAA1D,OAAA,EAAA0D,UAAA,QAAAmI,EAAnBi1B,QAAmBp9B,UAAA1D,OAAA,EAAA0D,UAAA,QAAAmI,EAAVimG,SAAUpuG,UAAA1D,OAAA,EAAA0D,UAAA,QAAAmI,EACjD2mG,eAEDnP,YACA/kG,KAAK6M,SADLk4F,YAgBH,OAbA/kG,KAAKqyG,gBAAiB52E,YAAOC,cAAQ8G,kBAGjC0xE,YADAnP,cAAgB4I,sBAAO5I,cAAgB2I,wBACzBwF,YAAYlzG,MAAQwzG,oBAAY3qE,KAAK9K,IAErCm1E,YAAYlzG,MAAQwzG,oBAAY3qE,KAAKrlC,IAIvDxD,KAAKixG,cACDZ,OAAQ6D,cAEZl0G,KAAK+4G,gBACE/4G,2DAUP,IACIk6B,WADAq2E,WAAa,GAEXz5F,OAAS9W,KAAK8W,SACZk6F,aAAiBhxG,KAAKm4G,cAAtBnH,aAJK+J,cAKmB/6G,KAAK6M,SAA7BklD,WALKgpD,cAKLhpD,WAAYvvB,QALPu4E,cAKOv4E,QACZ6tE,OAAWrwG,KAAKixG,eAAhBZ,OANKsL,oBAO8C37G,KAAK60G,gBAAhDtB,YAPHoI,oBAOLjgF,OAA4B43E,WAPvBqI,oBAOgBlgF,MAAmBsB,OAPnC4+E,oBAOmC5+E,OAPnC6+E,kBAQa1G,iBAAiB7E,OAAOC,SAAUgD,WAAYC,aAAhE93E,MARKmgF,kBAQLngF,MAAOC,OARFkgF,kBAQElgF,OAaf,GAXAq2B,YAAc/xD,KAAK4xD,OAAOG,WAAWA,YACrCw+C,WAAax+C,YAAcj7C,OAG3Bk6F,aAAah3E,SAASh6B,KAAK81G,iBAGJ,iBAAZtzE,SAAwBA,SAAW,GAAKA,SAAW,GAC1DxiC,KAAK2oC,QAAQnG,QAAQA,SAGrB1rB,QAAUA,OAAOpV,OAAQ,CACzB,IAAMgd,OAASqzC,YAAcj7C,OACvB2gG,cAAgBz3G,KAAK83G,eAAep5F,QAC1C6xF,WAAa7xF,OAAOzW,IAAI,SAACnP,EAAGN,GAIxB,OAHAw4G,aAAar0E,uBAAsB,GAEnCzC,WAAa82E,aAAap0E,aAAa66E,cAAc3+G,EAAGN,GAAIijC,MAAOC,OAAQqB,QACpEi0E,aAAaprF,YAAYqU,YAAYC,cAIpD,OADAl6B,KAAKuwG,WAAWA,YACTvwG,+DAeP,OALKA,KAAKs1G,iBACNt1G,KAAKs1G,aAAaqB,0BAAmB32G,OACrCq1G,iBAAUr1G,MACVA,KAAKs1G,gBAEFt1G,KAAKs1G,qEASZ,OAAOt1G,KAAK4xD,OAAOjpB,QAAQ7xB,iEAGd5V,KACb,OAAOlB,KAAK86F,aAAL96F,CAAmBkB,yEAGPzH,OAAO,IAAAyb,MAAAlV,KAClBohD,WAAe3nD,MAAf2nD,WAER,OAAIA,WACO,SAAA7a,OAAK,OAAI,SAACrlC,IAAK1I,GAAN,OAAY4oD,WAAWlsC,MAAK2mG,gBAAgB36G,KAAMA,IAAK1I,EAAG+tC,SAEvE,kBAAM,SAAArlC,KAAG,OAAIgU,MAAK2mG,gBAAgB36G,2DAUzC,OAAOlB,KAAK2oC,QAAQG,8DAST,IAAAgzE,oBAIP97G,KAAKixG,eAFLP,eAFOoL,oBAEPpL,eACAC,eAHOmL,oBAGPnL,eAEE/+C,KAAO5xD,KAAK4xD,OAIlB,OAFAA,KAAKK,cAAcy+C,eAAiB,EAAI,GACxC9+C,KAAKM,cAAcy+C,eAAiB,EAAI,GACjC/+C,KAAKwB,6DAGFxb,GAAIC,IACd,OAAO73C,KAAK2oC,QAAQW,aAAasO,GAAIC,4DASxBD,GAAIC,IACjB,IAAMlP,MAAQ3oC,KAAK2oC,QACbpnC,MAAQonC,MAAMpnC,QACd+iB,QAAU/iB,MAAM,GAAKA,MAAM,GAE3BokE,OAAS3lE,KAAKspC,aAAasO,GAAIC,IAGrC,OAFWlP,MAAMrkB,QAAUqhD,OAAOA,OAAOjkE,OAAS,GAAKikE,OAAO,IACnDh9B,MAAMrkB,QAAUqhD,OAAO,GAAKA,OAAOA,OAAOjkE,OAAS,IAAMinC,MAAMG,mDA5J1E,OAAOqlE,yuDCXM4N,yCAEjB,SAAAA,WAAwB,IAAA5V,iBAAAjxF,8JAAA8mG,CAAAh8G,KAAA+7G,UAAA,QAAAzzC,KAAAljE,UAAA1D,OAARkgB,OAAQ,IAAA/Y,MAAAy/D,MAAAC,KAAA,EAAAA,KAAAD,KAAAC,OAAR3mD,OAAQ2mD,MAAAnjE,UAAAmjE,MAAA,OACpBrzD,MAAA+mG,oCAAAj8G,MAAAmmG,iBAAA+V,yBAAAH,WAAApjH,KAAA4O,MAAA4+F,kBAAAnmG,MAAA0b,OAASkG,WACJ2yF,SAAW3zD,IAFI1rC,8XAFU+iG,iTAcrB12G,OACT,IAAIonC,MAAQwzE,cAAAD,yBAAAH,SAAAzhH,WAAA,cAAA0F,MAAArH,KAAAqH,KAAkBuB,OAG9B,OADAonC,MAAQA,MAAM0Y,qDAqBNx0C,QAAQ,IACRk4F,YAAgBl4F,OAAhBk4F,YACF+T,UAAYhL,mBAAmB/I,aAErC,OAAI+T,UACaA,UAAU94G,KAAK2oC,SAGzB,6DAGMznC,KACb,OAAOlB,KAAK2oC,QAAQyY,YAAbphD,CAA0BkB,yEAGdzH,OAAO,IAAA2b,OAAApV,KAClBohD,WAAe3nD,MAAf2nD,WAER,OAAIA,WACO,SAAC7a,OACJ,IAAM61E,SAAW71E,MAAMt+B,IAAI,SAAAvO,GAAC,OAAIA,EAAE8Q,YAClC,OAAO,SAACtJ,IAAK1I,GAAN,OAAY4oD,WAAWhsC,OAAKymG,gBAAgB36G,KAAMA,IAAIsJ,UAAWhS,EAAG4jH,YAG5E,kBAAM,SAAAl7G,KAAG,OAAIkU,OAAKymG,gBAAgB36G,yDAS9B,IAAA25G,mBAIP76G,KAAKixG,eAFLP,eAFOmK,mBAEPnK,eACAC,eAHOkK,mBAGPlK,eAEE/+C,KAAO5xD,KAAK4xD,OAGlB,OAFAA,KAAKK,eAAiC,IAAnBy+C,eAA2B,EAAI,GAClD9+C,KAAKM,eAAiC,IAAnBy+C,eAA2B,EAAI,GAClDwL,cAAAD,yBAAAH,SAAAzhH,WAAA,cAAA0F,MAAArH,KAAAqH,4DAUA,OAAOA,KAAK6M,SAASklD,YAAc/xD,KAAK2oC,QAAQpC,gDAU3C3B,MAEL,OADA5kC,KAAKu0G,SAAW1wG,KAAKsQ,IAAInU,KAAKu0G,SAAU3vE,MACjC5kC,6CAWP,GAAIoF,UAAO1D,OAAQ,CACf,IAAMk3G,YAAc7B,sBAAe/2G,KAADoF,UAAA1D,QAAA,OAAA6L,EAAAnI,UAAA,IAMlC,OALA6xG,uBAAuBj3G,KAAM44G,aAC7B54G,KAAK64G,6BACL74G,KAAKs1G,aAAa,MRwOG,SAApB+G,kBAAqB//E,QAASxlB,QAAW,IAAAwlG,iBAI9ChgF,QAAQzvB,SAFRk4F,YAF8CuX,iBAE9CvX,YACAyO,SAH8C8I,iBAG9C9I,SAEEn8F,QAAUilB,QAAQi4E,SAGxB,GAAIj4E,QAAQ/6B,QAAQG,SAAWqjG,cAAgB4I,sBAAO5I,cAAgB2I,yBAAS,CAC3E,IAAMiH,UAAYr4E,QAAQs4E,gBAAgBlzG,OADiC2xG,sBAExC/2E,QAAQ+1E,iBAAnC52E,MAFmE43E,sBAEnE53E,MAAOC,OAF4D23E,sBAE5D33E,OAAQ8G,QAFoD6wE,sBAEpD7wE,QAGnBkD,KAEAlD,QAFAkD,KACAC,MACAnD,QADAmD,MAGEspB,cAAiBxzB,OAASk5E,UAAY,GAAMr4E,QAAQ83E,iBAAiB34E,OAAUk5E,UAErFr4E,QAAQu4E,eACJp5E,MAAOwzB,eAIX0jD,aAAar2E,QAAS,IAAKu2E,iBAAiBx7F,SAAU43C,aAAe,EACjExzB,MAAQiK,KAAOC,MAAQspB,aAAe,GAAIn4C,OAAQwlB,QAAQzvB,UACtD2mG,SAAW93E,OAAS,MAE5BY,QAAQy8E,iBQlQJsD,CAAkBr8G,KAAM44G,aACjB54G,KAEX,OAAOA,KAAKk3G,kEAeZ,OALKl3G,KAAKs1G,iBACNt1G,KAAKs1G,aAAaqB,0BAAmB32G,OACrCA,KAAKs1G,eACLD,iBAAUr1G,OAEPA,KAAKs1G,mFAIZ,OAAOrgC,gBAAgBj1E,KAAK6M,SAASklD,0EAWgB,IAAtCt2B,MAAsCr2B,UAAA1D,OAAA,QAAA6L,IAAAnI,UAAA,GAAAA,UAAA,GAA9B,EAAGs2B,OAA2Bt2B,UAAA1D,OAAA,EAAA0D,UAAA,QAAAmI,EAAnBi1B,QAAmBp9B,UAAA1D,OAAA,EAAA0D,UAAA,QAAAmI,EAAVimG,SAAUpuG,UAAA1D,OAAA,EAAA0D,UAAA,QAAAmI,EACjD2mG,eAEDnP,YACA/kG,KAAK6M,SADLk4F,YAiBH,OAdA/kG,KAAKqyG,gBAAiB52E,YAAOC,cAAQ8G,kBAGjC0xE,YADAnP,cAAgB4I,sBAAO5I,cAAgB2I,wBACzBwF,YAAYlzG,MAAQwzG,oBAAYnoD,KAAKttB,IAErCm1E,YAAYlzG,MAAQwzG,oBAAYnoD,KAAK7nD,IAIvDxD,KAAKixG,cACDZ,OAAQ6D,cAEZl0G,KAAK+4G,gBACL/4G,KAAKkxG,cACElxG,2DAUP,IAAIuwG,WACAr2E,WACI63B,WAAe/xD,KAAK6M,SAApBklD,WACAs+C,OAAWrwG,KAAKixG,eAAhBZ,OAJKsL,oBAK8C37G,KAAK60G,gBAAhDtB,YALHoI,oBAKLjgF,OAA4B43E,WALvBqI,oBAKgBlgF,MAAmBsB,OALnC4+E,oBAKmC5+E,OACxCi0E,aAAiBhxG,KAAKm4G,cAAtBnH,aACFl6F,OAAS9W,KAAK40G,gBAEpB7iD,YAAc/xD,KAAK4xD,OAAOG,WAAWA,YATxB,IAAA6pD,kBAWa1G,iBAAiB7E,OAAOC,SAAUgD,WAAYC,aAAhE93E,MAXKmgF,kBAWLngF,MAAOC,OAXFkgF,kBAWElgF,OAOf,GALA60E,WAAax+C,YAAcj7C,OAG3Bk6F,aAAah3E,SAASh6B,KAAK81G,iBAEvBh/F,QAAUA,OAAOpV,OAAQ,CACzB,IAAMgd,OAASqzC,YAAcj7C,OACvB2gG,cAAgBz3G,KAAK83G,eAAep5F,QAC1C6xF,WAAa7xF,OAAOzW,IAAI,SAACnP,EAAGN,GAIxB,OAHAw4G,aAAar0E,uBAAsB,GAEnCzC,WAAa82E,aAAap0E,aAAa66E,cAAc3+G,EAAGN,GAAIijC,MAAOC,OAAQqB,QACpEi0E,aAAaprF,YAAYqU,YAAYC,cAIpD,OADAl6B,KAAKuwG,WAAWA,YACTvwG,2CApLP,OAAOouG,qBC7CFmO,WACTC,MAAQ1nE,IAAK,SAAUF,IAAK,eAC5B6nE,WAAa3nE,IAAK,SAAUF,IAAK,eACjC8nE,SAAW5nE,IAAK,SAAUF,IAAK,eAC/B+nE,UAAY7nE,IAAK,SAAUF,IAAK,cAChCgoE,eAAiB9nE,IAAK,SAAUF,IAAK,eACrCioE,iBAAmB/nE,IAAK,SAAUF,IAAK,cACvCkoE,aAAehoE,IAAK,SAAUF,IAAK,eACnCmoE,QAAUjoE,IAAK,SAAUF,IAAK,eAC9BooE,YAAcloE,IAAK,SAAUF,IAAK,eAClCqoE,YAAcnoE,IAAK,SAAUF,IAAK,eAClCsoE,WAAapoE,IAAK,SAAUF,IAAK,aACjCuoE,SAAWroE,IAAK,SAAUF,IAAK,aAC/BwoE,WAAatoE,IAAK,SAAUF,IAAK,aACjCyoE,SAAWvoE,IAAK,SAAUF,IAAK,WAC/B0oE,KAAOxoE,IAAK,SAAUF,IAAK,WAC3B2oE,WAAazoE,IAAK,SAAUF,IAAK,YACjC4oE,QAAU1oE,IAAK,SAAUF,IAAK,aAC9B6oE,OAAS3oE,IAAK,SAAUF,IAAK,cAC7B8oE,YAAc5oE,IAAK,SAAUF,IAAK,aAClC+oE,QAAU7oE,IAAK,SAAUF,IAAK,aAC9BgpE,MAAQ9oE,IAAK,SAAUF,IAAK,aAC5BipE,QAAU/oE,IAAK,SAAUF,IAAK,aAC9BkpE,aAAehpE,IAAK,SAAUF,IAAK,eACnCmpE,cAAgBjpE,IAAK,SAAUF,IAAK,eACpCopE,sBAAwBlpE,IAAK,SAAUF,IAAK,eAC5CqpE,YAAcnpE,IAAK,SAAUF,IAAK,eAClCspE,UAAYppE,IAAK,SAAUF,IAAK,eAChCupE,WAAarpE,IAAK,SAAUF,IAAK,eACjCwpE,eAAiBtpE,IAAK,SAAUF,IAAK,eACrCypE,OAASvpE,IAAK,SAAUF,IAAK,eAC7B0pE,WAAaxpE,IAAK,SAAUF,IAAK,eACjC2pE,UAAYzpE,IAAK,SAAUF,IAAK,eAChC4pE,gBAAkB1pE,IAAK,SAAUF,IAAK,eACtC6pE,QAAU3pE,IAAK,SAAUF,IAAK,eAC9B8pE,aAAe5pE,IAAK,SAAUF,IAAK,eACnC+pE,OAAS7pE,IAAK,SAAUF,IAAK,eAC7BgqE,WAAa9pE,IAAK,SAAUF,IAAK,eACjCiqE,KAAO/pE,IAAK,SAAUF,IAAK,eAC3BkqE,WAAahqE,IAAK,SAAUF,IAAK,eACjCmqE,YAAcjqE,IAAK,SAAUF,IAAK,cAClCoqE,WAAalqE,IAAK,SAAUF,IAAK,cACjCqqE,eAAiBnqE,IAAK,SAAUF,IAAK,cACrCsqE,MAAQpqE,IAAK,SAAUF,IAAK,cAC5BuqE,WAAarqE,IAAK,SAAUF,IAAK,cACjCwqE,aAAetqE,IAAK,SAAUF,IAAK,aACnCyqE,QAAUvqE,IAAK,SAAUF,IAAK,aAC9B0qE,OAASxqE,IAAK,SAAUF,IAAK,aAC7B2qE,QAAUzqE,IAAK,SAAUF,IAAK,WAC9B4qE,gBAAkB1qE,IAAK,SAAUF,IAAK,aACtC6qE,OAAS3qE,IAAK,SAAUF,IAAK,aAC7B8qE,WAAa5qE,IAAK,SAAUF,IAAK,cACjC+qE,aAAe7qE,IAAK,SAAUF,IAAK,cACnCgrE,WAAa9qE,IAAK,SAAUF,IAAK,aACjCirE,MAAQ/qE,IAAK,SAAUF,IAAK,WAC5BkrE,WAAahrE,IAAK,SAAUF,IAAK,aACjCmrE,YAAcjrE,IAAK,SAAUF,IAAK,aAClCorE,aAAelrE,IAAK,SAAUF,IAAK,cACnCqrE,aAAenrE,IAAK,SAAUF,IAAK,aACnCsrE,mBAAqBprE,IAAK,SAAUF,IAAK,aACzCurE,YAAcrrE,IAAK,SAAUF,IAAK,eAClCwrE,WAAatrE,IAAK,SAAUF,IAAK,eACjCyrE,cAAgBvrE,IAAK,SAAUF,IAAK,eACpC0rE,gBAAkBxrE,IAAK,SAAUF,IAAK,cACtC2rE,UAAYzrE,IAAK,SAAUF,IAAK,aAChC4rE,aAAe1rE,IAAK,SAAUF,IAAK,aACnC6rE,OAAS3rE,IAAK,SAAUF,IAAK,WAC7B8rE,WAAa5rE,IAAK,SAAUF,IAAK,WACjC+rE,kBAAoB7rE,IAAK,SAAUF,IAAK,eACxCgsE,MAAQ9rE,IAAK,SAAUF,IAAK,aAC5BisE,MAAQ/rE,IAAK,SAAUF,IAAK,aAC5BksE,WAAahsE,IAAK,SAAUF,IAAK,eACjCmsE,eAAiBjsE,IAAK,SAAUF,IAAK,eACrCosE,YAAclsE,IAAK,SAAUF,IAAK,eAClCqsE,WAAansE,IAAK,SAAUF,IAAK,cACjCssE,iBAAmBpsE,IAAK,SAAUF,IAAK,cACvCusE,eAAiBrsE,IAAK,SAAUF,IAAK,aACrCwsE,eAAiBtsE,IAAK,SAAUF,IAAK,cACrCysE,WAAavsE,IAAK,SAAUF,IAAK,cACjC0sE,UAAYxsE,IAAK,SAAUF,IAAK,aAChC2sE,MAAQzsE,IAAK,SAAUF,IAAK,aAC5B4sE,gBAAkB1sE,IAAK,SAAUF,IAAK,eACtC6sE,YAAc3sE,IAAK,SAAUF,IAAK,eAClC8sE,WAAa5sE,IAAK,SAAUF,IAAK,eACjC+sE,SAAW7sE,IAAK,SAAUF,IAAK,eAC/BgtE,cAAgB9sE,IAAK,SAAUF,IAAK,eACpCitE,aAAe/sE,IAAK,SAAUF,IAAK,aACnCktE,YAAchtE,IAAK,SAAUF,IAAK,cAClCmtE,gBAAkBjtE,IAAK,SAAUF,IAAK,eACtCotE,WAAaltE,IAAK,SAAUF,IAAK,cACjCqtE,WAAantE,IAAK,SAAUF,IAAK,cACjCstE,MAAQptE,IAAK,SAAUF,IAAK,WAC5ButE,YAAcrtE,IAAK,SAAUF,IAAK,WAClCwtE,UAAYttE,IAAK,SAAUF,IAAK,WAChCytE,MAAQvtE,IAAK,SAAUF,IAAK,WAC5B0tE,cAAgBxtE,IAAK,SAAUF,IAAK,aACpC2tE,UAAYztE,IAAK,SAAUF,IAAK,eAChC4tE,SAAW1tE,IAAK,SAAUF,IAAK,eAC/B6tE,MAAQ3tE,IAAK,SAAUF,IAAK,eAC5B8tE,QAAU5tE,IAAK,SAAUF,IAAK,eAC9B+tE,QAAU7tE,IAAK,SAAUF,IAAK,eAC9BguE,SAAW9tE,IAAK,SAAUF,IAAK,aAC/BiuE,SAAW/tE,IAAK,SAAUF,IAAK,aAC/BkuE,cAAgBhuE,IAAK,SAAUF,IAAK,cACpCmuE,cAAgBjuE,IAAK,SAAUF,IAAK,eACpCouE,YAAcluE,IAAK,SAAUF,IAAK,cAClCquE,YAAcnuE,IAAK,SAAUF,IAAK,aAClCsuE,YAAcpuE,IAAK,SAAUF,IAAK,cAClCuuE,aAAeruE,IAAK,SAAUF,IAAK,aACnCwuE,QAAUtuE,IAAK,SAAUF,IAAK,aAC9ByuE,QAAUvuE,IAAK,SAAUF,IAAK,YAC9B0uE,eAAiBxuE,IAAK,SAAUF,IAAK,aACrC2uE,WAAazuE,IAAK,SAAUF,IAAK,cACjC4uE,iBAAmB1uE,IAAK,SAAUF,IAAK,eACvC6uE,OAAS3uE,IAAK,SAAUF,IAAK,eAC7B8uE,MAAQ5uE,IAAK,SAAUF,IAAK,eAC5B+uE,UAAY7uE,IAAK,SAAUF,IAAK,eAChCgvE,WAAa9uE,IAAK,SAAUF,IAAK,eACjCivE,OAAS/uE,IAAK,SAAUF,IAAK,eAC7BkvE,WAAahvE,IAAK,SAAUF,IAAK,eACjCmvE,YAAcjvE,IAAK,SAAUF,IAAK,eAClCovE,YAAclvE,IAAK,SAAUF,IAAK,eAClCqvE,UAAYnvE,IAAK,SAAUF,IAAK,eAChCsvE,OAASpvE,IAAK,SAAUF,IAAK,eAC7BuvE,SAAWrvE,IAAK,SAAUF,IAAK,eAC/BwvE,aAAetvE,IAAK,SAAUF,IAAK,eACnCyvE,OAASvvE,IAAK,SAAUF,IAAK,eAC7B0vE,cAAgBxvE,IAAK,SAAUF,IAAK,eACpC2vE,OAASzvE,IAAK,SAAUF,IAAK,eAC7B4vE,eAAiB1vE,IAAK,SAAUF,IAAK,eACrC6vE,WAAa3vE,IAAK,SAAUF,IAAK,eACjC8vE,WAAa5vE,IAAK,SAAUF,IAAK,eACjC+vE,WAAa7vE,IAAK,SAAUF,IAAK,eACjCgwE,QAAU9vE,IAAK,SAAUF,IAAK,eAC9BiwE,UAAY/vE,IAAK,SAAUF,IAAK,eAChCkwE,MAAQhwE,IAAK,SAAUF,IAAK,eAC5BmwE,SAAWjwE,IAAK,SAAUF,IAAK,eAC/BowE,gBAAkBlwE,IAAK,SAAUF,IAAK,eACtCqwE,WAAanwE,IAAK,SAAUF,IAAK,eACjCswE,eAAiBpwE,IAAK,SAAUF,IAAK,YACrCuwE,OAASrwE,IAAK,SAAUF,IAAK,UCtIpBwwE,SACT,UACA,UACA,UACA,UACA,UACA,WAGSC,uBAAyB,UAEzBC,gBACT/jH,MAAO6jH,QACP3rH,MAAO2rH,QAAQ,GACfl/E,MAAM,EACNq/E,MAAO,EACPjqH,KAAM4yG,weCjBH,IAAMsX,mBAAe,SAAfA,aAAeC,QAAM,cAAA/pG,OAAwB,IAAZ+pG,OAAO,GAAnB,KAAA/pG,OAA2C,IAAZ+pG,OAAO,GAAtC,MAAA/pG,OAA+D,IAAZ+pG,OAAO,GAA1D,MAAA/pG,OAChC+pG,OAAO,IAAM,EADmB,MAGrBC,mBAAqB,SAArBA,mBAAqBC,YAAU,OAAKA,WAAWp5G,MAAM,UACjDkG,OAAO,SAACsrB,EAAGrjC,GAAJ,SAAAghB,OAAaqiB,GAAbriB,OAAiBhhB,EAAE8kC,OAAO,GAAG+f,eAA7B7jC,OAA6ChhB,EAAEygB,MAAM,KAAM,KAEtEyqG,wBAAoB,SAApBA,kBAAqBlrH,EAAGmrH,cACjC,IAAIzxE,MAAQ,GACZ,GAAiB,iBAAN15C,EAGP,GADAA,GADAA,EAAIA,EAAE4F,QAAQ,KAAM,KACdmB,chBUK,QgBTPouE,YAAYn1E,IhBQJ,SgBRkBm1E,YAAYn1E,GAEtC05C,QADAA,MAAQ15C,EAAE2N,MAAM,mBACD,GAAK,IAAK+rC,MAAM,GAAK,IAAKA,MAAM,GAAK,IAAKA,MAAM,IAAM,QAClE,GhBII,QgBJAy7B,YAAYn1E,GACnB05C,MvKimCK,SAAX0xE,SAAYhxE,KACd,IAAMrxC,OAAS,4CAA4C4wC,KAAKS,KAE1Dx7C,EAAI+H,SAASoC,OAAO,GAAI,IACxBixC,EAAIrzC,SAASoC,OAAO,GAAI,IACxBL,EAAI/B,SAASoC,OAAO,GAAI,IACxB7I,EAAI6I,OAAO,GAAKpC,SAASoC,OAAO,GAAI,IAAM,EAChD,OAAOmsE,SAASt2E,EAAGo7C,EAAGtxC,EAAGxI,GuKxmCTkrH,CAASprH,QACd,GhBCI,QgBDAm1E,YAAYn1E,GAAY,CAC/B,IAAMo1E,IAAMp1E,EAAEgJ,UAAUhJ,EAAEuL,QAAQ,KAAO,EAAGvL,EAAE2lC,YAAY,MAAM9zB,MAAM,QACtE6nC,MAAQw7B,SAAQroE,WAAR,EAAAw+G,wBAAYj2C,WACbysC,UAAUmJ,mBAAmBhrH,MACpC05C,MAAQw7B,SAAQroE,WAAR,EAAAw+G,wBAAYxJ,UAAUmJ,mBAAmBhrH,IAAIk6C,IAAIroC,MAAM,aAKnE6nC,MAHS15C,aAAamO,MAGdnO,EAFAk1E,SAASi2C,cAIrB,OAAOzxE,OAGEymD,wBACThuF,QACIqhE,aAAc,SAAAA,aAAC5xC,QAASzvB,QACpB,IAAM0rG,OAAStpC,kBAAmB3yC,QAAQ1W,YAAYu1E,iBAClDtuF,OAAOvR,OAAS4yG,mBAChBrhG,OAAOtL,MAAQsL,OAAOtL,QAAUg3G,OAAOh3G,MAAM,IAC7CsL,OAAOtL,MAAQsL,OAAOtL,MAAMG,OAAS,EAAImL,OAAOtL,OAAS8jH,wBAA1C3pG,OAAAqqG,wBAAqEl5G,OAAOtL,SAE/F,IAAM61G,UAAYnoC,eAAespC,OAAQj8E,QAAQzvB,UAC3Cm5G,UAAY/2C,eAAemoC,UAAWvqG,QAO5C,OALIm5G,UAAUzkH,iBAAiBsH,QAC3Bm9G,UAAUzkH,MAAQykH,UAAUzkH,MAAM0G,IAAI,SAACvN,EAAGlC,GAAJ,OAAUotH,wBAAkBlrH,EAAG0qH,QAAQ5sH,MAC7EwtH,UAAUT,MAAQ14G,OAAO04G,OAASS,UAAUzkH,MAAMG,QAEtDskH,UAAUvsH,MAAQmsH,wBAAkBI,UAAUvsH,MAAOusH,UAAUvsH,OACxDusH,YAGflvG,UACA6xB,SACAs9E,iBCtDSC,yBAAoB,SAApBA,kBAAqBlN,UAAWmN,UAAWC,oBACpD,OAAIpN,qBAAqBrsG,sBACdy5G,mBAEJD,urBCAX,IAAME,wBAAW,SAAXA,SAAYvvG,OAAQyuG,OACtB,IAAIe,YAEJ,GAAIf,iBAAiB18G,MACjBy9G,SAAWf,MAAMpqG,QAAQjI,OACzBozG,SAAWC,iCAAI,IAAI1vG,KAAKC,OAAO,IAAhB4E,OAAA6qG,iCAAuBhB,QAAOzuG,OAAO,OAAM5D,YAG1D,IADA,IAAM28C,aAAe4f,kCAAkBloE,WAAlB,EAAAg/G,iCAAwBzvG,SACpCte,EAAI,EAAGA,GAAK+sH,MAAO/sH,IACxB8tH,SAAS9tH,GAAKq3D,aAAar3D,EAAI+sH,OAOvC,OAHIe,SAAS,GAAKxvG,OAAO,IACrBwvG,SAASh+G,SAEJwO,cAAQwvG,oBAGfE,0BAAa,SAAbA,WAAcC,eAAgBllH,OAChC,IAAImlH,YAGJ,GAAID,eAFmB5iH,KAAKsQ,IAAI5S,MAAMG,OAAQ,IAI1C,IADA,IAAMmuD,aAAe8f,qCzK29BL,SAAlBg3C,kBAAkB,OAAMC,QyK39BuBD,GAAmBplH,MAAM0G,IAAI,SAAAvN,GAAC,OAAI8qH,mBAAa9qH,MACnFlC,EAAI,EAAGA,EAAIiuH,eAAgBjuH,IAChCkuH,SAASluH,GAAKq3D,aAAar3D,GAAKiuH,eAAiB,SAGrDC,SAAWnlH,MAAM4Z,MAAM,EAAGsrG,gBAE9B,OAASC,oBASPG,cAAgB,SAAhBA,cAAiB/vG,QACnB,IAAMyqF,WAAazqF,OAEnB,OAASA,OADSA,OAAO7O,IAAI,SAACnP,EAAGN,GAAJ,OAAWA,GAAMse,OAAOpV,OAAS,KAClC6/F,sBAAYulB,aAAc,EAAG,KASvDC,qBAAuB,SAAvBA,qBAAwBjwG,OAAQyuG,MAAOhkH,OAEzC,OAASuV,cAAQyqF,WADEzqF,OACUgwG,aAAc,EAAG,GAAIvlH,cAShDylH,aAAe,SAAfA,aAAgBlwG,OAAQyuG,MAAOhkH,OAEjC,OAASggG,WADUzqF,OACEA,cAAQuqC,MAAM,EAAM9/C,cAUvC0lH,6BAAgB,SAAhBA,cAAiBnwG,OAAQyuG,MAAOhkH,OAAU,IAAA2lH,UACHb,wBAASvvG,OAAQyuG,OAA1ChkB,WAD4B2lB,UACpCpwG,OAAoBwvG,SADgBY,UAChBZ,SAG5B,OAAS/kB,sBAAYzqF,OAAQwvG,SAAUjlE,MAAM,EAAM9/C,MAF9BilH,0BAAWF,SAAS5kH,OAAS,EAAGH,OAA7CmlH,WAKNS,sCAAyB,SAAzBA,uBAA0BrwG,OAAQyuG,MAAOhkH,OAAU,IAAA6lH,WACZf,wBAASvvG,OAAQvV,MAAMG,OAAS,GAEzE,OAAS6/F,WAH4C6lB,WAC7CtwG,OAEaA,OAHgCswG,WACzBd,SAEWjlE,MAAM,EAAM9/C,MADlCA,MAAM0G,IAAI,SAAAvN,GAAC,OAAI8qH,mBAAa9qH,OAa3C2sH,YAAc,SAAdA,YAAezO,YAAajwE,MAAO7xB,OAAQyqF,YAG7C,OAAO54D,MADQ7xB,OADDyqF,WAAWt7F,QAAQ2yG,gBAa/B0O,4BAAe,SAAfA,aAAgB1O,YAAajwE,MAAO7xB,QACtC,IAAMywG,QAAU3O,YAAc9hG,OAAO,KAAOA,OAAOA,OAAOpV,OAAS,GAAKoV,OAAO,IAE/E,OAAOovG,yBAAkBtN,YAAajwE,MAAM4+E,QAAS5+E,MAAM,KASzD6+E,2BAAc,SAAdA,YAAe5O,YAAajwE,MAAO7xB,QAArB,OAAgCovG,yBAAkBtN,YAAajwE,MAAMiwE,aACrFjwE,MAAM7xB,OAAO,MAiDJ2wG,eAAiB,SAAjBA,eAAkBC,WAAYC,UAAWC,WAAYrC,OAApC,OA1CX,SAAb1f,aAAa,IAAAvxE,KAAA,OAAAuzF,8BAAAvzF,QAAA,GAAA5Y,OACXmzF,UADW,KAAAnzF,OACEmzF,UADF,KAAAnzF,OACeizF,aAC1BhmE,MAAOgmE,WACPmZ,YAAa,SAAAA,cAAA,OAAMf,sBACnBttH,MAAO,SAAAA,QAAA,OAAM6tH,+BAJFO,8BAAAvzF,KAAA,GAAA5Y,OAMXmzF,UANW,KAAAnzF,OAMEozF,SANF,KAAApzF,OAMcizF,aACzBhmE,MAAOgmE,WACPmZ,YAAa,SAAAA,cAAA,OAAMf,sBACnBttH,MAAO,SAAAA,QAAA,OAAM6tH,+BATFO,8BAAAvzF,KAAA,GAAA5Y,OAWXozF,SAXW,KAAApzF,OAWCozF,SAXD,KAAApzF,OAWaizF,aACxBhmE,MAAOgmE,WACPmZ,YAAa,SAAAA,cAAA,OAAMjB,eACnBptH,MAAO,SAAAA,QAAA,OAAM4tH,eAdFQ,8BAAAvzF,KAAA,GAAA5Y,OAgBXozF,SAhBW,KAAApzF,OAgBCozF,SAhBD,KAAApzF,OAgBa2yF,UACxB1lE,MAAO0lE,QACPyZ,YAAa,SAAAA,cAAA,OAAMd,cACnBvtH,MAAO,SAAAA,QAAA,OAAM+tH,8BAnBFK,8BAAAvzF,KAAA,GAAA5Y,OAqBXmzF,UArBW,KAAAnzF,OAqBEmzF,UArBF,KAAAnzF,OAqBe2yF,UAC1B1lE,MAAOulE,OACP4Z,YAAa,SAAAA,cAAA,OAAMX,uCACnB1tH,MAAO,SAAAA,QAAA,OAAM+tH,8BAxBFK,8BAAAvzF,KAAA,GAAA5Y,OA0BXmzF,UA1BW,KAAAnzF,OA0BEozF,SA1BF,KAAApzF,OA0Bc2yF,UACzB1lE,MAAO4lE,SACPuZ,YAAa,SAAAA,cAAA,OAAMb,8BACnBxtH,MAAO,SAAAA,QAAA,OAAM+tH,8BA7BFlzF,KA2CduxE,GAAA,GAAAnqF,OAAqBgsG,WAArB,KAAAhsG,OAAmCisG,UAAnC,KAAAjsG,OAAgDksG,YAAc,8xBCpK9CG,gCAUjB,SAAAA,UAAal7G,iKAAQm7G,CAAAhoH,KAAA+nH,WACjBx5C,sBAAsBvuE,KAAM66F,wBAC5B76F,KAAK6M,OAAOA,QAEZ7M,KAAKioH,YAAoC,WAAtBjoH,KAAKqwF,QAAQ/0F,KAAoBuzG,UAAYC,SAChE9uG,KAAKkoH,WAAoC,WAAtBloH,KAAKqwF,QAAQ/0F,MAAsB0E,KAAKqwF,QAAQnqD,KAAoB4oE,SAAZD,UAE3E7uG,KAAKmoH,YlBqCN,SAASC,cAAep4D,QAO3B,OALIA,QAA8B,iBAAZA,QACS,MAAdA,OAAO,GAAa2+C,qBAEpBN,kBkB1CM+Z,CAAcpoH,KAAKqwF,QAAQ9uF,OAE9CvB,KAAKqoH,eAAiBroH,KAAKsoH,iBAAiBtoH,KAAKioH,YAAajoH,KAAKkoH,WAAYloH,KAAKmoH,aACpFnoH,KAAK23G,OAAS33G,KAAK+vG,YAAY/vG,KAAKqoH,gBAEpCroH,KAAK2lF,IAAMp7E,cAEXvK,KAAKuoH,aAAa17G,OAAOiK,4SAgChB0xG,eAAe,IAChBjnH,MAAUvB,KAAK6M,SAAftL,MACR,OAAIA,OAA4B,iBAAXA,MlBlBtB,SAASknH,UAAWz4D,QACvB,MAAkB,MAAdA,OAAO,GACAu/C,gBAAgBmZ,8BAAa14D,SAEjCs/C,aAAaoZ,8BAAa14D,SkBelBy4D,CAAUlnH,OAEdwuG,2BACHz0G,KAAMktH,cAAc7/E,MACpBpnC,wEAaUmmH,WAAYC,UAAWC,YACnB5nH,KAAK6M,SAAf04G,MAER,OAAOkC,eAAeC,WAAYC,UAAWC,8DAUnCe,eACV,OAAOnD,mBAAamD,yDASd3P,WACN,OAAOh5G,KAAKwlH,aAAaxlH,KAAK4oH,YAAY5P,4DASjCA,WACT,GAAIh5G,KAAK8W,eAA0BvJ,IAAdyrG,UAAyB,CAC1C,IAAMrwE,MAAQ3oC,KAAK2oC,QACbpnC,MAAQonC,MAAMpnC,MAAQonC,MAAMpnC,QAAU,KACtC6yC,MAAQp0C,KAAKqoH,eAAe5uH,MAAM8H,MAA1BvB,CAAiCg5G,UAAWrwE,MAAO3oC,KAAK8W,SAAU9W,KAAKimH,gBACrF,GAAI7xE,MAAO,CACP,GAAqB,iBAAVA,MAAoB,CAC3B,IAAM07B,IAAM17B,MAAM1wC,UAAU0wC,MAAMnuC,QAAQ,KAAO,EAAGmuC,MAAM/T,YAAY,MAAM9zB,MAAM,QAClF,OAAOqjE,SAAQroE,WAAR,EAAAshH,6BAAY/4C,MAEvB,OAAA+4C,6BAAWz0E,QAGnB,OAAAy0E,6BAAW7oH,KAAK6M,SAASpT,2DAUF,IAAbqd,OAAa1R,UAAA1D,OAAA,QAAA6L,IAAAnI,UAAA,GAAAA,UAAA,MACvB,GAAI0R,OAAOpV,OAAQ,CACf,IAAMinC,MAAQ3oC,KAAK2oC,QACbpnC,MAAQonC,MAAMpnC,MAAQonC,MAAMpnC,QAAU,KAEtCunH,UADgB9oH,KAAKqoH,eAAeP,aACxBiB,CAAcjyG,OAAQ9W,KAAK6M,SAAS04G,MAAOhkH,OAE7DvB,KAAK8W,OAAOgyG,UAAUhyG,QACtBgyG,UAAUvnH,OAASvB,KAAK2oC,QAAQpnC,MAAMunH,UAAUvnH,OAChDvB,KAAKimH,aAAa6C,UAAUvnB,YAC5BvhG,KAAK2oC,QAAQ7xB,OAAOgyG,UAAUhC,aAAe9mH,KAAK8W,UAEtD,OAAO9W,mDAWP,OACI1E,KAAM0E,KAAK4lB,YAAYtqB,OACvBqtC,MAAO3oC,KAAK2oC,QACZ7xB,OAAQ9W,KAAK8W,SACbjK,OAAQ7M,KAAK6M,gEAILunC,MAAO40E,mBACnB,IAAMtgH,EAAe,IAAX0rC,MAAM,GACV35C,EAAe,IAAX25C,MAAM,GACV37C,EAAe,IAAX27C,MAAM,GACVx5C,EAAIw5C,MAAM,IAAM,EAChB60E,KAAOvgH,EAAIsgH,kBAAkB,GAC7BE,KAAOzuH,EAAIuuH,kBAAkB,GAC7BG,KAAO1wH,EAAIuwH,kBAAkB,GAC7BI,KAAOxuH,EAAIouH,kBAAkB,IAAM,EAEzC,OAAS50E,MAAK,QAAA14B,OAAUutG,KAAV,KAAAvtG,OAAkBwtG,KAAlB,MAAAxtG,OAA2BytG,KAA3B,MAAAztG,OAAoC0tG,KAApC,KAA6C30E,MAAOw0E,KAAO,IAAKC,KAAO,IAAKC,KAAO,IAAKC,uCAQtG,OAAOppH,KAAK2lF,4DAlJZ,OAAO2/B,mDAWP,MnBnDa,yBoBXRA,yBACT7rH,MAAO,GACP8H,OAAQ,GAAI,6qBCShB,IAqFMskG,0BAAUwjB,6BAAAnuB,eAAA,GAAAx/E,OACRozF,SADQ,KAAApzF,OACImzF,YACZlmE,MAAOulE,OACPp3F,OAxFc,SAAhB+vG,cAAiB/vG,QACnB,IAAMyqF,WAAazqF,OAEnB,OAASA,OADSA,OAAO7O,IAAI,SAACnP,EAAGN,GAAJ,OAAWA,GAAMse,OAAOpV,OAAS,KAClC6/F,sBAAYulB,aAAc,EAAG,KAsFrDvlH,MAzBe,SAAjB+nH,eAAkB1Q,YAAajwE,MAAO7xB,OAAQyqF,YAChD,IACMgmB,OAASzwG,OADDyqF,WAAWt7F,QAAQ2yG,cAGjC,OADWjpC,qCAAwBF,kCAAH85C,gCAA6B5gF,MAAMpnC,SAC5D2d,CAAGqoG,WAiBE8B,6BAAAnuB,YAAA,GAAAx/E,OAMRmzF,UANQ,KAAAnzF,OAMKmzF,YACblmE,MAAOulE,OACPp3F,OAjFa,SAAfkwG,aAAgBlwG,QAElB,OAASyqF,WADUzqF,OACEA,gBAgFjBvV,MAjBY,SAAdimH,YAAe5O,YAAajwE,MAAO7xB,QAArB,OAChBovG,yBAAkBtN,YAAajwE,MAAMiwE,aAAcjwE,MAAM7xB,OAAO,QAOpDuyG,6BAAAnuB,YAAA,GAAAx/E,OAWRmzF,UAXQ,KAAAnzF,OAWKozF,WACbnmE,MAAOimE,UACP93F,OA1Ec,SAAhBmwG,cAAiBnwG,OAAQ0yG,WAC3B,IAAIC,gBACJ,GAAID,qBAAqB3gH,MACrB4gH,aAAeD,UAAUruG,QAAQjI,YAGjC,IADA,IAAM28C,aAAe4f,kCAAkBloE,WAAlB,EAAAgiH,gCAAwBzyG,SACpCte,EAAI,EAAGA,EAAIgxH,UAAWhxH,IAC3BixH,aAAajxH,GAAKq3D,aAAar3D,GAAKgxH,UAAY,IAOxD,OAJIC,aAAa,GAAK3yG,OAAO,IACzB2yG,aAAanhH,SAGRi5F,WAAYkoB,aAAc3yG,OADjB2yG,aACoCpoE,MAAM,IA6DxD9/C,MAjDc,SAAhBmoH,cAAiB9Q,YAAajwE,MAAO7xB,QACvC,IAAMywG,QAAU3O,YAAc9hG,OAAO,KAAOA,OAAOA,OAAOpV,OAAS,GAAKoV,OAAO,IACzE+4C,aAAe4f,kCAAkBloE,WAAlB,EAAAgiH,gCAAwB5gF,MAAMpnC,UACnD,OAAO2kH,yBAAkBtN,YAAa/oD,aAAa03D,QAAS13D,aAAa/4C,OAAO,QAgCpEokF,aChGHL,uBACThuF,UACAiK,QACIo3D,aAAc,SAAAA,aAAC5xC,QAAS7iC,OAEpB,OADA6iC,QAAQqM,QAAQ7xB,OAAOrd,OAChBA,QAGf8H,SACAonC,SACAs9E,kTCMiB0D,8BAOjB,SAAAA,SAAa98G,gKAAQ+8G,CAAA5pH,KAAA2pH,UACjBp7C,sBAAsBvuE,KAAM66F,uBAE5B76F,KAAK2lF,IAAMp7E,cACXvK,KAAKqwF,QAAUn3F,OAAO4T,UAAW9M,KAAK4lB,YAAYu1E,gBAAiBtuF,QAEnE7M,KAAKioH,YAAoC,WAAtBjoH,KAAKqwF,QAAQ/0F,KAAoBuzG,UAAYC,SAChE9uG,KAAKkoH,WAAarZ,UAElB7uG,KAAK6pH,cAAgB7pH,KAAK8pH,YAAY9pH,KAAKioH,YAAajoH,KAAKkoH,YAC7DloH,KAAK23G,OAAS33G,KAAK+vG,YAAY/vG,KAAK6pH,eACpC7pH,KAAKo4G,OAASp4G,KAAKqwF,QAAQ9uF,MAE3BvB,KAAKuoH,aAAa17G,OAAOiK,wSAYhB4wG,WAAYC,WACrB,OFyEsB,SAAjBF,eAAkBC,WAAYC,WAAb,OACzB9hB,yBAAU,GAAAnqF,OAAIgsG,WAAJ,KAAAhsG,OAAkBisG,YE1ElBF,CAAeC,WAAYC,2DASzBhlB,UAAU,IAEfphG,MACAvB,KAAK6M,SADLtL,MAEJ,OAAOwuG,2BACHz0G,KAAMqnG,SAASh6D,MACfpnC,wDAiCgB,IAAfy3G,UAAe5zG,UAAA1D,OAAA,QAAA6L,IAAAnI,UAAA,GAAAA,UAAA,GAAH,EAGb3L,MACAuG,KAAK6M,SADLpT,MAEEkvC,MAAQ3oC,KAAK2oC,QACb7xB,OAAS9W,KAAK8W,WAAa,EAAG,GAEpC,OAAK6xB,OAAS7xB,OAAO,KAAOA,OAAO,GAGxB9W,KAAK6pH,cAActoH,MAAMy3G,UAAWrwE,MAAO3oC,KAAK8W,SAAU9W,KAAKimH,gBAF5DxsH,wDAaJqd,QACV,GAAIA,OAAQ,CACR,IAEMizG,YAAaC,EAFFhqH,KAAK6pH,cAAc/yG,QAERA,OAAQ9W,KAAK6M,SAAS28G,WAElDxpH,KAAK8W,OAAOizG,WAAWjzG,QACvB9W,KAAKimH,aAAa8D,WAAWxoB,YAE7BvhG,KAAK2oC,QAAQ7xB,OAAOizG,WAAWjD,aAAe9mH,KAAK8W,UAEvD,OAAO9W,mDAWP,OACI1E,KAAM0E,KAAK4lB,YAAYtqB,OACvBqtC,MAAO3oC,KAAK2oC,QACZ7xB,OAAQ9W,KAAK8W,SACbvV,MAAOvB,KAAKuB,QACZsL,OAAQ7M,KAAK6M,0CASjB,OAAO7M,KAAK2lF,4DA/EZ,OAAO2/B,4DAWP,MvB1EY,uBwBbPA,oCACT2E,UAAW,KACXxwH,MAAO,SACP8H,OAAQ,SAAU,UAAW,OAAQ,QAAS,SAAU,MAAO,aCHtDs5F,wBACThuF,UACAiK,UACA6xB,SACAs9E,gBACAgE,kUCWiBC,gCAOjB,SAAAA,UAAar9G,iKAAQs9G,CAAAnqH,KAAAkqH,WACjB37C,sBAAsBvuE,KAAM66F,wBAE5B76F,KAAK2lF,IAAMp7E,cACXvK,KAAKqwF,QAAUn3F,OAAO4T,UAAW9M,KAAK4lB,YAAYu1E,iBAClDn7F,KAAKqwF,QAAUphB,eAAejvE,KAAKqwF,QAASxjF,QAE5C7M,KAAK23G,OAAS5H,2BACVz0G,KAAM,UACNiG,MAAOvB,KAAKqwF,QAAQ9uF,QAExBvB,KAAKuoH,aAAa17G,OAAOiK,sSAgCnBrd,OACN,IAAKuG,KAAK2oC,UAAY3oC,KAAK8W,WAAard,OAASA,iBAAiBkT,sBAC9D,OAAO3M,KAAK6M,SAASpT,MAGzB,GAAIuG,KAAKoqH,iBACL,OAAOpqH,KAAKoqH,iBAAiB3wH,OAGjC,IAAM4wH,UAAYrqH,KAAK2oC,OAAL3oC,CAAavG,OAC/B,MAAkB,WAAd4wH,UACOn5C,uBAAUm5C,WAGdA,8DASgB,IAAbvzG,OAAa1R,UAAA1D,OAAA,QAAA6L,IAAAnI,UAAA,GAAAA,UAAA,MAUvB,OATI0R,OAAOpV,SACP1B,KAAKimH,aAAanvG,QAClB9W,KAAK8W,OAAOA,QACZ9W,KAAK2oC,QAAQ7xB,OAAOA,QAEhB9W,KAAK6M,SAASo9G,YACdjqH,KAAKoqH,iBCzFS,SAAjBE,eAAkBxzG,OAAQyzG,aACnC,IAAMC,mBAIN,OAHA1zG,OAAOhO,QAAQ,SAACrP,OACZ+wH,gBAAgB/wH,OAAS8wH,YAAY9wH,SAElC+wH,gBDoF6BF,CAAexzG,OAAQ9W,KAAK6M,SAASo9G,aAG9DjqH,mDAWP,OACI1E,KAAM0E,KAAK4lB,YAAYtqB,OACvBqtC,MAAO3oC,KAAK2oC,QACZ7xB,OAAQ9W,KAAK8W,SACbvV,MAAOvB,KAAK6M,SAAStL,MACrBsL,OAAQ7M,KAAK6M,0CASjB,OAAO7M,KAAK2lF,4DA/EZ,OAAO2/B,uEAWP,M1B5Ca,gN4BVrB,IAAMmF,mBAGO,UAHPA,oBAIQ,WCICC,iBDEcC,mCAAAC,qBATd,YAUa9a,MADC6a,mCAAAC,kBAExBH,mBAAqB3a,QAFG6a,mCAAAC,kBAGxBH,oBAAsB3a,MCLZ,SAACnkG,OAAQX,KAAM6B,QAC1B,IAAM+gB,QAAU/gB,OAAO+gB,mBAAmB/kB,MAAQgE,OAAO+gB,SAAW/gB,OAAO+gB,SACrEi9F,eAAiBj9F,QAAQ3lB,IAAI,SAAAuL,WAAS,OAAI7H,OAAOya,UAAU,SAAAttB,GAAC,OAAIA,EAAEC,OAASya,cAEjF,QAA2CjG,IAAvCs9G,eAAe3/F,KAAK,SAAApyB,GAAC,OAAW,IAAPA,IACzB,MAAM,IAAI4W,MAAJ,iBAAAgM,OAA2BkS,QAA3B,yBAGV,IAAM7b,YpLg5Ca,SAAjB+4G,eAAkBlpG,QACpB,IAAMmpG,OAASrjF,WAEf,OADA9lB,OAAO9b,KAAKgD,QAAQ,SAAA/O,KAAG,OAAIgxH,OAAOhxH,IAAI,SAAAjB,GAAC,OAAIA,EAAEiB,SACtCgxH,OAAO91G,QAAQ2M,OAAO5W,MoLn5CT8/G,EAChBhlH,KAAM+kH,eACN7/G,YASJ,OANA+G,YAAYjJ,QAAQ,SAAChQ,GACjB,IAAMiB,IAAMjB,EAAEiB,IACV4S,sBAAkB4L,UAAUxe,OAC5BjB,EAAEiB,IAAM4S,sBAAkB6L,eAAeze,QAG1CgY,cCZKi5G,uMCPhB,IAAMC,cAAYC,iCAAAC,iBCJO,WFOxB,SAASH,kBAAmBr/G,OAAQX,KAAM6B,QACtC,OAAO7B,OCJMkgH,iCAAAC,cCHI,QDKKxrE,iBAFTurE,iCAAAC,cCFI,QCgEP,SAACx/G,OAAQX,KAAM6B,QAC1B,IAAMu+G,YAAcv+G,OAAOu+G,YACrBC,WAAax+G,OAAOpT,MACpBm0B,QAAU/gB,OAAO+gB,QACjB1a,KAAOrG,OAAOqG,MAAQ,aACtBo4G,eAzDY,SAAhBC,cAAiBvgH,KAAMW,OAAQ0/G,WAAYD,YAAax9F,SAC1D,IAAM7b,YAAc4tC,gBAAMh0C,OAAQX,MAC9B4iB,QAASw9F,cAEPI,iBAAmB7/G,OAAOya,UAAU,SAAAttB,GAAC,OAAIA,EAAEC,OAASqyH,cACpDK,gBAAkB9/G,OAAOya,UAAU,SAAAttB,GAAC,OAAIA,EAAEC,OAASsyH,aACnDK,eAAiB//G,OAAOya,UAAU,SAAAttB,GAAC,OAAIA,EAAEC,OAAS60B,UAClD+9F,WAAa3gH,KAAK/C,IAAI,SAAAnP,GAAC,OAAIA,EAAE4yH,kBAAiBh4G,OAAO,SAAC1J,KAAMm/E,IAAKp4E,KAAZ,OAAoBA,IAAI9K,QAAQ+D,QAAUm/E,MAAKj2E,OACpG+U,WAAatc,OAAO8G,OAAO,SAACC,IAAKxK,IAAK1P,GAExC,OADAka,IAAIla,GAAK0P,IAAInP,KACN2Z,SA8BX,OACI1H,KA7BY+G,YAAY9J,IAAI,SAAC8I,KAC7B,IAAM66G,UACAC,OAAS96G,IAAI2N,OAAOjM,OAAO,SAACC,IAAK0I,KAUnC,OATA1I,IAAM0I,IAAI3I,OAAO,SAACvK,IAAKzO,MAAOjB,GAO1B,OANIA,IAAMkzH,gBACNxjH,IAAIzO,OAAS2hB,IAAIqwG,iBACjBG,OAAOnyH,OAAS2hB,KACT5iB,IAAMizH,kBACbvjH,IAAI+f,WAAWzvB,IAAMiB,OAElByO,KACRwK,UAcP,OAXAm5G,OAAOC,OAASF,OAEhBD,WAAW7iH,QAAQ,SAACijH,WAChB,QAA0Bx+G,IAAtBs+G,OAAOE,WAA0B,CACjCF,OAAOE,WAAa,EACpB,IAAMC,OAAS,IAAInjH,MAAMkI,IAAI2N,OAAO,GAAGhd,QACvCsqH,OAAOR,kBAAoBz6G,IAAIhX,IAC/BiyH,OAAON,gBAAkBK,UACzBF,OAAOC,OAAOC,WAAaC,UAG5BH,SAKP/lH,KAAM6lH,YAeaJ,CAAcvgH,KAAMW,OAAQ0/G,WAAYD,YAAax9F,SACtE9nB,KAAOwlH,eAAexlH,KACtBmC,OACAgkH,QAAUp/G,OAAOo/G,QACjBC,WAAavgH,OAAOya,UAAU,SAAAttB,GAAC,OAAIA,EAAEC,OAASkzH,UAC9CE,aAAexgH,OAAOya,UAAU,SAAAttB,GAAC,OAAIA,EAAEC,OAAS60B,WAClC,IAAhBs+F,aACApmH,KAAKgD,QAAQ,SAAC/O,KACV,IAAMhB,KAAOiS,KAAKkgB,KAAK,SAAApyB,GAAC,OAAIA,EAAEqzH,gBAAkBpyH,MAChDkO,IAAIlO,KAAOhB,KAAKmzH,cAEpBZ,eAAexlH,KAAKoN,KAAK,SAACtY,EAAGwI,GAAJ,OAAU6E,IAAIrN,GAAGwxH,cAAcnkH,IAAI7E,OAGhE,IAAMipH,UAAYp6C,oBACdnsE,KAAMwlH,eAAexlH,KACrB68C,OAAQ91C,OAAO81C,QAAU,YACzB97B,MAAO3T,KACPlI,KAAMsgH,eAAetgH,OAOzB,OALAqhH,UAAUvjH,QAAQ,SAACwjH,YACfA,WAAWxjH,QAAQ,SAACuV,SAChBA,QAAQrT,KAAOqT,QAAQrT,KAAK8gH,OAAOQ,WAAWvyH,SAG/CsyH,YF5FOlB,eAqBHoB,sBARf,SAASA,iBAAkBjxH,MACvB,IAAMqgD,UAAYsvE,aAAa3vH,MAC/B,GAAyB,mBAAdqgD,UACP,MAAM,IAAIjsC,MAAM,oCAEpB,OAAOisC,urCGbX,IAAMwyD,aAAO2B,2BAAU3B,KAEVqe,cAAgB,SAAhBA,cAAgBl4F,KAAA81C,OAAqE,IAAlEp4D,MAAkEsiB,KAAlEtiB,MAAO/P,MAA2DqyB,KAA3DryB,MAAWwqH,cAAgDriD,MAAhDqiD,cAAehrB,UAAiCr3B,MAAjCq3B,UAAWirB,gBAAsBtiD,MAAtBsiD,gBACpEC,SAAW,GACXv4E,MAAQ,GAQZ,OAPIq4E,eAAiBA,cAAchzH,iBAAiB8b,UAChD6+B,MAAQq4E,cAAchzH,MAAMuY,MAAO/P,OACnC0qH,SAAWF,cAAchzH,MAAMuY,MAAO/P,SAEtC0qH,SAAWlrB,UAAUmnB,YAAY52G,MAAMy1D,MAAMilD,kBAC7Ct4E,MAAQqtD,UAAU+jB,aAAamH,YAE1Bv4E,YAAOu4E,oBAGdC,eAAiB,SAAjBA,eAAkBnrB,UAAWzvF,MAAO66G,UAAWC,WACjD96G,MAAMkL,KAAK6vG,WAAWF,WAAa76G,MAAMkL,KAAK6vG,WAAWF,YAAc76G,MAAMkL,KAAK8vG,cAClF,IAAMC,cAAgBxrB,UAAUyrB,eAAel7G,MAAMkL,KAAK6vG,WAAWF,WAAYC,WAGjF,OAFA96G,MAAMkL,KAAK6vG,WAAWF,WAAaI,cAAcx4E,KAE1Cw4E,eAGExxB,8BAAwB,SAAxBA,sBAAyBn/D,QAASwyD,aAAcq+B,kBAAmBtgH,QAC5E,IAAMugH,SAAW9wF,QAAQ+wF,uBAAuBv+B,cAE1C2S,UADOnlE,QAAQs7D,OACExjD,MACjB7sC,MAAQsF,OAAOtF,MACf8zF,gBAAkBxuF,OAAOwuF,gBAC/B8xB,kBAAkBrkH,QAAQ,SAAC6wB,OACvB,IAAMkzF,UAAYlzF,MAAMr+B,KACxB8xH,SAASzzF,MAAMkzF,UAAY,SAAC/zH,GAAM,IAAAw0H,QACwBx0H,EAAEokB,KAAhDqwG,eADsBD,QACtBC,eAAgBR,WADMO,QACNP,WAAYC,cADNM,QACMN,cAEpC,GADAO,eAAelyB,iBAAmBkyB,eAAelyB,qBAC7C9zF,QAAUgmH,eAAelyB,iBAAiBwxB,WAI1C,OAFAU,eAAelyB,iBAAiBwxB,WAAalzF,MAAMmzF,UACrCF,eAAenrB,UAAW3oG,EAAG+zH,UAAWlzF,MAAMmzF,WAAW14E,MAG3E,IAAK7sC,OAASgmH,eAAelyB,iBAAiBwxB,WAG1C,OADAU,eAAelyB,iBAAiBwxB,WAAa,KACtCD,eAAenrB,UAAW3oG,EAAG+zH,UAAWlzF,MAAMmzF,UAAU7kH,IAAI,SAAAvN,GAAC,OAAKA,KAAI05C,MAZnD,IAAAo5E,MAAAC,sBAcTV,WAAWF,WAAaE,WAAWF,WAAaG,cAdvC,GAcvBtkH,EAduB8kH,MAAA,GAcpB/yH,EAdoB+yH,MAAA,GAcjB/0H,EAdiB+0H,MAAA,GAcd5yH,EAdc4yH,MAAA,GAe9B,cAAA9xG,OAAmB,IAAJhT,EAAf,KAAAgT,OAA8B,IAAJjhB,EAA1B,MAAAihB,OAA0C,IAAJjjB,EAAtC,OAAAijB,OAAmD9gB,GAAK,EAAxD,UAmCC8yH,sBAAgB,SAAhBA,cAAiB91B,MAAS,IAAA+1B,MAAAF,uBACXtgB,SAAS7tD,EAAG6tD,SAASlpG,GAAGgE,IAAI,SAAAvN,GAAC,OAAIk9F,KAAKl9F,KAD3B,GAC5Bm9F,MAD4B81B,MAAA,GACrB71B,MADqB61B,MAAA,GAAAC,MAAAH,uBAET51B,MAAOC,OAAO7vF,IAAI,SAAAvN,GAAC,OAAIA,GAAKA,EAAEiuC,UAFrB,GAGnC,OACIkvD,YACAC,YACA+1B,OAN+BD,MAAA,GAO/BE,OAP+BF,MAAA,KAiF1BG,uBAAyB,SAAzBA,uBAA0Bj1H,EAAGN,EAAGwS,KAAMsxB,SAC/C,IAAMwE,UAAYxE,QAAQzvB,SAASmhH,oBAC/BC,aAAe,GAInB,OAHIntF,qBAAqBvrB,WACrB04G,aAAentF,UAAUhoC,EAAGN,EAAGwS,KAAMsxB,UAElC2xF,cAiGEC,oBAAsB,SAAtBA,oBAAuB3mD,QAAS2N,QAAW,IAAAi5C,MACpD5mD,QAAQv8D,MAAKmjH,UAAGzyG,OAAHnU,MAAA4mH,MAAAC,0BAAal5C,SAAQxhE,OAAO,SAAA5a,GAAC,YAAcyU,IAAVzU,EAAE6sF,MAAmB19E,IAAI,SAACnP,GACpE,IAAMw/D,MAAQx/D,EAAEw8B,OAChB,OACIyI,EAAGu6B,MAAMv6B,EACTv6B,EAAG80D,MAAM90D,EACTwH,KAAMlS,OAYLu1H,oBAAc,SAAdA,YAAehxE,OAAQ2rC,OAAQ5hD,QACxC,IAAK,IAAMrtC,OAAOivF,YACPzuF,eAAe5B,KAAKqwF,OAAQjvF,MAC/BsjD,OAAO1jB,MAAM5/B,IAAKqtC,OAAS,KAAO4hD,OAAOjvF,OAiCxCu0H,eAAiB,SAAjBA,eAAkBhyF,QAAS44C,QACpC,IAAMq5C,WAAajyF,QAAQkyF,oBAC3B,OAAID,WACOA,WAAWr5C,OAAQ54C,SAAWmD,WAAYnD,QAAQ67E,cAAc14E,aAEpEy1C,QAyBEu5C,2BAAqB,SAArBA,mBAAsBnyF,QAASoyF,mBACxC,IAAMC,UAAYryF,QAAQsyF,oBACpBh3B,KAAOt7D,QAAQs7D,OACfi3B,cAAgBvyF,QAAQuyF,gBACxBhiH,OAASyvB,QAAQzvB,SACjBwwF,UAAY/gE,QAAQwyF,WAE1B,OAAQ,IAAK,KAAK7mH,IAAI,SAAC3M,MACnB,IAAIyzH,KAAO,EACPC,UAAY,EACZxsF,QAAU,EACVysF,gBACJ,GAAIN,UAAS,GAAAjzG,OAAIpgB,KAAJ,gBAAyBy5F,yBAAU11F,UAAW,CACvD,IAAI6vH,iBAEEnc,SADa4b,UAAS,GAAAjzG,OAAIpgB,KAAJ,mBAA4BiuE,gCAAiBzqE,SAC3Cw9B,QAAQ6yF,YAAYluB,UAAU3lG,MAAQ,EAC9Ds2D,KAAOgmC,KAAKt8F,MACZuE,IAAMgN,OAAM,MAAA6O,OAAOpgB,KAAKikD,gBACxB6vE,aAAeviH,OAAOuiH,aACtBtpH,KAAO4oH,kBACP/lF,MAAQipB,KAAKjpB,QACnBqmF,UAjCgB,SAAfK,aAAgBz9D,KAAMv6C,SAC/B,IACMokB,MAAQm2B,KAAK+rC,eACbh1D,MAAQipB,KAAKjpB,QACbpnC,MAAQonC,MAAMpnC,QACduV,OAAS6xB,MAAM7xB,SAIrB,OAHC2kB,OAAqB53B,KAAKooB,IAAI1qB,MAAM,GAAKA,MAAM,IAAMsC,KAAKooB,IAAInV,OAAO,GAAKA,OAAO,IAAOO,QA2BrEg4G,CAAaz9D,KAAMmhD,UAC/B,IAAMuc,gBAAkB19D,KAAKhsC,YAAYtqB,SAAW6yG,aAC9CohB,YAAc39D,KAAK/kD,SAAS21B,QAIlC,GAAsB,UAAlBqsF,cAA2B,CAC3B,IAAMW,aAAeF,gBAAkB,EAAIC,YAAcP,UAAY,EACrE3xB,UAAU97F,OAAOiuH,aAAcR,UAAYQ,eAAe14G,OAAOhR,MAAMkjC,aAAaomF,cACpFL,KAAO1xB,UAAUv0D,YACjBomF,iBAAmBF,WAAaM,gBAAkB,EAAIC,YAAcP,WACpEC,aAAenpH,KAAKmC,IAAI,SAAAlO,KAAG,OAAIsjG,UAAUtjG,MAAQu1H,gBAAkB,EAAKN,UAAY,UACjF,QAAYzhH,IAAR1N,IAAmB,CAC1B,IAAI8iD,OACJ,GAAI2sE,gBAAiB,CACjB,IAAMppF,KAAOyC,MAAMzC,OACnByc,OAASha,MAAMnG,UAAY0D,KAC3B6oF,KAAOpmF,MAAMG,YAAc6Z,YAE3BosE,KAAOC,UAEXC,aAAenpH,KAAKmC,IAAI,kBAAOqnH,iBAAoB3sE,OAAS,GAAOosE,KAAO,SAI1EG,iBADAH,KAAOC,WADPxsF,QAAU8sF,gBAAkB,EAAIC,YAAcP,WAG9CC,aAAenpH,KAAKmC,IAAI,kBAAOqnH,gBAAkB,GAAMP,KAAO,IAGlEC,UAAYE,iBACZ1sF,QAAU8sF,gBAAkBC,YAAc39D,KAAKjpB,QAAQzC,OAASqpF,YAAcP,UAGlF,OACID,UACAE,0BACAD,oBACAxsF,oBAgBCitF,oCAA8B,SAA9BA,4BAA+BnzF,SAAY,IAAAozF,sBAMhDpzF,QAAQsyF,oBAJR52B,OAFgD03B,sBAEhD13B,OACAE,OAHgDw3B,sBAGhDx3B,OACAC,WAJgDu3B,sBAIhDv3B,WACAC,WALgDs3B,sBAKhDt3B,WAEEu3B,aAAerzF,QAAQzvB,SAAS8uC,UAAU/tB,QAC1CrP,aAAe+d,QAAQtxB,OAAOwT,kBAC9BoxG,oBAAsBrxG,aAAaoxG,eAAiBpxG,aAAaoxG,cAAchxG,IAAIrjB,OAASy5F,yBAAU31F,QAC5G,OAAK44F,SAAWE,QAAU03B,sBAAwBD,cAAgBx3B,aAAepD,yBAAU11F,WACvF+4F,aAAerD,yBAAU11F,UxC9bT,WwCicb,MAKEwwH,kCAA4B,SAA5BA,0BAA6BvzF,SACtC,IAAMwzF,6BAA+BL,oCAA4BnzF,SACjE,GAAIwzF,6BACA,OAAOA,6BAHuC,IAAAC,uBAW9CzzF,QAAQsyF,oBAJR52B,OAP8C+3B,uBAO9C/3B,OACAE,OAR8C63B,uBAQ9C73B,OACAC,WAT8C43B,uBAS9C53B,WACAC,WAV8C23B,uBAU9C33B,WAEEu3B,aAAerzF,QAAQzvB,SAAS8uC,UAAU/tB,QAC1CoiG,gCAAkCjjD,WAAWzwC,QAAQ2zF,cAAe,YAAa,QACnFpB,cAAgBvyF,QAAQzvB,SAAS8uC,UAAUrgD,KAE/C,IAAK00H,+BAAiCL,cAAgBx3B,aAAeC,WAAY,CAC7E,IAAM1sE,aAAeysE,aAAepD,yBAAU31F,QAAU44F,OAASE,OAEjE22B,cxCxckB,QwCucgBp5C,4CAA+Bn5C,QAAQtxB,OAAQ0gB,cAAxEA,cAC8BmhF,MxC1d1B,QwC6djB,OAAOgiB,skBC3dX,oBAQar+C,yBAAc,SAAdA,YAAel0C,QAASziC,IAAV,QAEnBs6B,OAAO,GAAAzY,OAAI7hB,GAAG+2E,MAAP,KAAAl1D,OCdK,SDeZs1D,SAAU,SAAAA,SAAA18C,MAAc,IAAVtpB,KAAUklH,2BAAA57F,KAAA,MACdznB,OAASyvB,QAAQzvB,SACjBsjH,cAAgBtjH,OAAOk+F,SAC7B,GAAI//F,MAAQmlH,cAAe,CACvB,IAAM5xG,aAAevT,KAAKwT,kBACpBowG,kBD8Fa,SAAtBwB,oBAAuBrlB,SAAUxsF,cAAiB,IAAA8xG,MAAA5C,uBAEtDtgB,SAAS7tD,EAAG6tD,SAASlpG,EAAGkpG,SAASC,GAAID,SAASE,GAAIJ,MAAOC,MAAOF,MAAM/kG,IAAI,SAAAvN,GAAC,OAAIqwG,SAASrwG,IACrFqwG,SAASrwG,GAAG6Q,QAHuC,GACpDysF,OADoDq4B,MAAA,GAC5Cn4B,OAD4Cm4B,MAAA,GACpCC,QADoCD,MAAA,GAC3BE,QAD2BF,MAAA,GAClBG,WADkBH,MAAA,GACNI,WADMJ,MAAA,GACMK,UADNL,MAAA,GAAAM,MAAAlD,uBAKzBz1B,OAAQE,OAAQo4B,QAASC,SAAStoH,IAAI,SAAAvN,GAAC,OAAI6jB,aAAa7jB,IACtF6jB,aAAa7jB,GAAGikB,IAAIrjB,OANmC,GAKpD68F,WALoDw4B,MAAA,GAKxCv4B,WALwCu4B,MAAA,GAAAC,OAAAnD,uBAQnBz1B,OAAQE,QAAQjwF,IAAI,SAAAvN,GAAC,OAAI6jB,aAAa7jB,KAAO6jB,aAAa7jB,GAAGikB,IAAItI,SACrGkI,aAAa7jB,GAAGikB,IAAIrjB,QATmC,GAQpDu1H,cARoDD,OAAA,GAQrCE,cARqCF,OAAA,GAAAG,OAAAtD,uBAWKz1B,OAAQE,OAAQo4B,QAASC,SACpFtoH,IAAI,SAAAvN,GAAC,OAAI6jB,aAAa7jB,IAAM6jB,aAAa7jB,GAAGuH,QAZU,GAc3D,OACI+1F,cACAE,cACAs4B,sBACAC,sBACAC,oBACAJ,gBACAC,gBACAp4B,sBACAC,sBACAy4B,4BACAC,4BACAE,YA1BuDD,OAAA,GA2BvDE,YA3BuDF,OAAA,GA4BvDG,aA5BuDH,OAAA,GA6BvDI,aA7BuDJ,OAAA,IC9FrBX,CAAoBD,cAAe5xG,cAC7D+d,QAAQsyF,kBAAkBA,mBAC1BtyF,QAAQ80F,uBACR90F,QAAQ+0F,iBAAmB/0F,QAAQg1F,mBAAmBtmH,KAAM6B,OACxDyvB,QAAQuyF,gBAAiBD,mBAC7BtyF,QAAQi1F,gBAAkBj1F,QAAQk1F,kBAAkBl1F,QAAQ+0F,iBAAkB9yG,cAC9E,IAAMzH,OAASwlB,QAAQm1F,wBAAwBn1F,QAAQi1F,gBAAiBj1F,QAAQsyF,oBAC5EtyF,QAAQtxB,OAAOwT,mBACnB8d,QAAQ46E,QAAUpgG,QACjBwlB,QAAQo1F,aAAep1F,QAAQxlB,OAAOA,UAG/Cxb,KAAM,8BAGN64B,OAAO,GAAAzY,OAAI7hB,GAAG+2E,MAAP,KAAAl1D,OClCO,WDmCds1D,SAAU,SAAAA,SAAAntD,OAAgB,IAChBunF,gBADgB8kB,2BAAArsG,MAAA,MACSunF,gBACzBj3E,MAAQmI,QAAQq1F,iBAChBhpH,MAAQ2zB,QAAQ3zB,QAChBikE,cACFC,UAAS,GAAAnxD,OAAKswF,0BAAiBr7C,sBAAtB,KAAAj1C,OAA+C4gB,QAAQsvE,UAAU/+B,WAC1E9yE,IAAK,kBAET4O,MAAM6qF,YAAY5mB,eACM,IAApBw+B,iBACAj3E,MAAMjuB,KAAN,GAAAwV,OAAc7hB,GAAG+2E,MAAjB,KAAAl1D,OC9CI,SDgDR/S,MAAMipH,uBAAuBz9F,MACzB,YA7CI,SAAd09F,YAAev1F,SACjB,IAAM5I,MAAQ4I,QAAQ5I,QAClBA,QACA4I,QAAQioE,OAAO7wE,OACf4I,QAAQ5gC,eAAeo2H,UAAUC,OAAO5gE,aAAYE,eAAe,IA0CvDwgE,CAAYv1F,WACb,EAAOswC,eAElBtxE,KAAM,kNElDP,IAAM02H,gBAAcC,+BAAAC,mBDFL,UCIdz4H,MAAO,KACPyjB,MACIgxD,aAAc,SAAAA,aAACrhE,OAAQuqG,UAAW96E,SAC9BA,QAAQ2zF,cAAgBpjH,OACxB,IAAM+Y,YAAc0W,QAAQ1W,YACtBusG,QAAUljD,kBAAmBrpD,YAAYu1E,iBAC/C,OAAOv1E,YAAYwsG,cAAcD,QAAStlH,YAR/BolH,+BAAAC,gBDHP,QCgBZz4H,MAAO,KACPyjB,MACImxD,OAAQ,SAAAA,OAACrjE,KAAMsxB,SACPA,QAAQ+1F,cACR/1F,QAAQg2F,YAAYpsH,KAAK8E,MAEzBsxB,QAAQg2F,aAAetnH,UAnBhBknH,2sFC2CNK,4CAqBjB,SAAAA,UAAavnH,KAAM4sF,KAAM/qF,QAA2B,IAAAqI,MAAnBxZ,aAAmB0J,UAAA1D,OAAA,QAAA6L,IAAAnI,UAAA,GAAAA,UAAA,qKAAAotH,CAAAxyH,KAAAuyH,WAChDr9G,oLAAAu9G,CAAAzyH,KAAA0yH,0BAAAH,WAAA55H,KAAAqH,OAEAuuE,sBAAsBokD,kEAAAz9G,QAAMif,aAC5Bjf,MAAKlK,KAAKA,MACVkK,MAAK0iF,KAAKA,MACV1iF,MAAKrI,OAAOA,QACZqI,MAAK09G,MAAM19G,MAAK0Q,YAAY2lE,aAAehhF,eAC3C2K,MAAKxZ,aAAaA,cAClBwZ,MAAK29G,WACL39G,MAAKo9G,eACLp9G,MAAKywE,IAAMp7E,cACX2K,MAAK49G,gBACL59G,MAAKyjG,0BACLzjG,MAAK+6G,cAAgB,KAd2B/6G,iYArBjBu4F,6SAmD/B,GAAIroG,UAAO1D,OAAQ,CACf1B,KAAK+yH,OAAL3tH,UAAA1D,QAAA,OAAA6L,EAAAnI,UAAA,GACA,IAAMwmG,QAAU5rG,KAAK4rG,UACfonB,QAAO,GAAAt3G,OAAMswF,0BAAiBr7C,sBAAvB,KAAAj1C,OAAgDkwF,QAAQ/+B,YJuU5C,SAAxBomD,sBAAyB32F,SAClC,IAAM3zB,MAAQ2zB,QAAQ3zB,QAChBuqH,YAAc52F,QAAQ1W,YAAYutG,WAAW,GAC7CtmD,UAAYvwC,QAAQsvE,UAAU/+B,UACpC,IAAK,IAAM34C,QAAQg/F,YACfvqH,MAAMksB,OAAN,GAAAnZ,OAAgBswF,0BAAiBp7C,uBAAjC,KAAAl1C,OAA2DwY,MAA3Dk/F,0BACKvmD,UAAY,OI5UbomD,CAAsBjzH,MACtB,IAAM2I,MAAQ3I,KAAK2I,QAenB,OAdAA,MAAMksB,OAAN,GAAAnZ,OAAgBswF,0BAAiBr7C,qMAAjC0iE,IACKznB,QAAQ/+B,UAAY,OAGzBU,wBAAWvtE,KAAMgyH,eAAgBrpH,MAAMiU,OACnCiwD,UAAWmmD,UAEfziD,+BAAkBvwE,KAAMwwE,0BACpBI,MAAOoiD,QACPM,OAAQtnB,0BAAiBp7C,yBAEzB2iE,aAAc3nB,QAAQ2nB,aACtBC,aAAc5nB,QAAQ4nB,eAEnBxzH,KAEX,OAAOA,KAAK+yH,+CAIZ,IAAM7+F,KAAI,GAAAxY,OAAMswF,0BAAiBp7C,uBAAvB,KAAAl1C,OFxHI,SEwHJ,KAAAA,OAAiE1b,KAAK4rG,UAAU/+B,WAC1F,OAAIznE,UAAI1D,QACJ1B,KAAK2I,QAAQopH,OAAO79F,KAApB9uB,UAAA1D,QAAA,OAAA6L,EAAAnI,UAAA,IACOpF,MAEJA,KAAK2I,QAAQtP,IAAI66B,oEAiExB,OAAI9uB,UAAU1D,QACV1B,KAAKyzH,mBAALruH,UAAA1D,QAAA,OAAA6L,EAAAnI,UAAA,GACOpF,MAEJA,KAAKyzH,iFAIZ,OAAIruH,UAAkB1D,QAClB1B,KAAK0zH,mBAALtuH,UAAA1D,QAAA,OAAA6L,EAAAnI,UAAA,GACOpF,MAEJA,KAAK0zH,yDAmBZ,OAAItuH,UAAO1D,QACP1B,KAAK2zH,OAALvuH,UAAA1D,QAAA,OAAA6L,EAAAnI,UAAA,GACOpF,MAEJA,KAAK2zH,QAAU3zH,KAAK4lB,YAAY2lE,iEAIvC,OAAInmF,UAAO1D,QACP1B,KAAKm4G,cAAL/yG,UAAA1D,QAAA,OAAA6L,EAAAnI,UAAA,GACOpF,MAEJA,KAAKm4G,oEAKZ,OADAn4G,KAAKqyH,eAAgB,EACdryH,yDAKP,OADAA,KAAKqyH,eAAgB,EACdryH,KAAKgL,KAAKhL,KAAKsyH,YAAY,kDAWlC,OAAOtyH,KAAK6M,yCAWZ,OAAO7M,KAAK2lF,kEAaIvnE,UAAWvR,OAAQgiH,cAAeD,mBAClD,OJ/HqB,SAAhBgF,cAAiBx1G,UAAWvR,OAAQgiH,cAAegF,kBAC5D,IAAM7oH,KAAOoT,UAAUE,SAAUwI,SAAS,IACpCnb,OAASX,KAAKW,OACdgwC,UAAY9uC,OAAO8uC,UAErBq8C,OAIA67B,iBAJA77B,OACAE,OAGA27B,iBAHA37B,OACAC,WAEA07B,iBAFA17B,WACAC,WACAy7B,iBADAz7B,WAEEgzB,YAAcjzB,aAAepD,yBAAU31F,QAAU84F,OAASF,OAEhE,OAAOu0B,kBAAiBsC,cAAjBtC,CAAgC5gH,OAAQX,KAAKA,MAChD4iB,QAAS+tB,UAAU/tB,QACnBw9F,wBACAl4G,KAAMyoC,UAAUzoC,MAAQ,OACxByvC,OAAQhH,UAAUgH,OAClBspE,QAAStwE,UAAUswE,QACnBxyH,MAAO2+F,aAAerD,yBAAU31F,QAAU84F,OAASF,QACpDhtF,KAAKqc,MI4GGusG,CAAcx1G,UAAWvR,OAAQgiH,cAAeD,2FAYlC5jH,MACrB,IAAIm/D,WAMJ,OALgBnqE,KAAKgL,OAAO07F,YAGxBv8B,QJ3C2B,SAA1BsnD,wBAA2BzmH,KAAM6oH,iBAAkBhF,eAAkB,IAE1EgC,cAMAgD,iBANAhD,cACAC,cAKA+C,iBALA/C,cACA94B,OAIA67B,iBAJA77B,OACAE,OAGA27B,iBAHA37B,OACAo4B,QAEAuD,iBAFAvD,QACAC,QACAsD,iBADAtD,QAEEpmD,WACA2pD,KAAO3mB,SAASlpG,EAChB8vH,KAAO5mB,SAAS7tD,EAUtB,OATI04C,SACA7tB,QAAQpsC,EAAIqrC,+BAAkBp+D,KAAMslH,SAAWzB,gBAAkBhiB,OAASknB,KAAM5mB,SAASC,KAAO2mB,KAAMA,MAClGlD,gBAEJ34B,SACA/tB,QAAQ3mE,EAAI4lE,+BAAkBp+D,KAAMulH,SAAW1B,gBAAkBhiB,OAASM,SAASE,GAAIF,SAASlpG,IAC3F6vH,KAAMA,MAAOhD,gBAGf3mD,QIsBWsnD,CAAwBzmH,KAAMhL,KAAK4uH,oBAAqB5uH,KAAK6uH,kBAEpE1kD,4DAaI6pD,cACX,IAAM7pD,QAAUnqE,KAAK2I,QAChBtP,IADW,GAAAqiB,OACJswF,0BAAiBp7C,uBADb,KAAAl1C,OFxTF,SEwTE,KAAAA,OACuD1b,KAAK4rG,UAAU/+B,YACtF,YAAwBt/D,IAAjBymH,aAA6B7pD,QAAQ6pD,kBAAsB7pD,oEASnDoiC,gBAAiBhuF,cAChC,OJpIyB,SAApBizG,kBAAqBjlB,gBAAiBhuF,aAAcs1G,iBAAkBhF,eAC/E,IAAMoF,mBxCjMc,awCiMOpF,eAA8BtiB,iBAAmBA,gBAExEpU,WAKA07B,iBALA17B,WACA64B,YAIA6C,iBAJA7C,YACAC,YAGA4C,iBAHA5C,YACAC,aAEA2C,iBAFA3C,aACAC,aACA0C,iBADA1C,aAEE+C,UAAYh7H,OAAO4M,KAAKyY,cAAc7c,OAK5C,OAAOuyH,mBAAmBhsH,IAAI,SAAC+C,MAE3B,OxCjNa,UwCgNE6jH,cAA0B7jH,KAAK0T,OAAS1T,MACzC/C,IAAI,SAACnP,GACf,IACIkX,MAGIxM,EACA8wD,GACAv2B,EACAwjB,GAPJ4yE,YAuCJ,OArCItF,gBAAkBhiB,OAClB78F,MAAQlX,EAAEkS,SAKNlS,EAAE,IAAMA,EAAE,IACV0K,EAAI+9C,GAAKzoD,EAAE,GACXilC,EAAIu2B,GAAKx7D,EAAE,KAEX0K,EAAI+9C,GAAKzoD,EAAE,GACXilC,EAAIu2B,GAAKx7D,EAAE,KAGfq7H,SAAWh8B,aAAepD,yBAAU31F,SAChC2+B,IACAwjB,MACA/9C,EAAGwM,MAAMihH,aACT38D,GAAItkD,MAAMihH,eAEVlzF,EAAG/tB,MAAMghH,aACTzvE,GAAIvxC,MAAMghH,aACVxtH,IACA8wD,QAEKmT,MAAQz3D,MACjBmkH,SAASxuC,IAAM31E,MAAMkkH,cAErBC,UACIp2F,EAAGjlC,EAAEk4H,aACLxtH,EAAG1K,EAAEm4H,aACL1vE,GAAIzoD,EAAEo4H,cACN58D,GAAIx7D,EAAEq4H,gBAED1pD,MAAQ3uE,EACjBq7H,SAASxuC,IAAM7sF,EAAEo7H,YAEdC,aAEZzgH,OAAO,SAAA5a,GAAC,OAAIA,EAAE4I,SI0EN8vH,CAAkBjlB,gBAAiBhuF,aAAcve,KAAK4uH,oBAAqB5uH,KAAK6uH,2EAwBvF,OAAO,yEAGYxzB,gBAAiBvM,aAAcvnF,MAAOyhF,QACzD,IAEImkC,mBAFsBntH,KAAK6M,SAASitF,iBAEEuB,kBAC1C8xB,kBAAoBnkC,QAAUmkC,oBAE1B1xB,8BAAsBz7F,KAAM8uF,aAAcq+B,mBACtC5lH,YACA8zF,wFAOR,OADAr7F,KAAK0xH,aAAc,EACZ1xH,yDAKP,OADAA,KAAK0xH,aAAc,EACZ1xH,yEAIPA,KAAKo0H,eJ6EoB,SAApBC,kBAAoB/3F,SAAO,OAAImzF,oCAA4BnzF,UAAYA,QAAQzvB,SAAS8uC,UAAUrgD,KI7EjF+4H,CAAkBr0H,4DAIxC,OAAOA,KAAKo0H,uDAQZ,OAAOp0H,iDAUP,MAAO,4CAaP,OAJAA,KAAK2I,QAAQ6qF,aACT3mB,UAAS,GAAAnxD,OAAKswF,0BAAiBr7C,sBAAtB,KAAAj1C,OAA+C1b,KAAK4rG,UAAU/+B,aAE3Ekb,6BAAc/nF,KAAK0zB,SAAS0T,SACrBpnC,mDAUCjG,IAAKiR,MACb,GAAY,OAARjR,IACA,OAAOiG,KAEX,IAAMs0H,SAAWt0H,KAAKu0H,UAGtB,OAFCD,SAASv6H,OAASu6H,SAASv6H,SAC5Bu6H,SAASv6H,KAAKmM,KAAK8E,MACZhL,mDAWP,OAAIoF,UAAU1D,QACV1B,KAAKw0H,WAALpvH,UAAA1D,QAAA,OAAA6L,EAAAnI,UAAA,GACOpF,MAEJA,KAAKw0H,iFAWQxpH,MACpB,IAAMW,OAAS3L,KAAKgL,OAAOsT,UAAU3S,OAC/B4S,aAAeve,KAAKgL,OAAOwT,kBAC3B+D,oBAHoBkyG,sBASlBz0H,KAAK4uH,oBAJLz2B,WALkBs8B,sBAKlBt8B,WACAC,WANkBq8B,sBAMlBr8B,WACAJ,OAPkBy8B,sBAOlBz8B,OACAE,OARkBu8B,sBAQlBv8B,OARkBy1B,MAAA+G,0BAWIv8B,WAAYC,YAAYnwF,IAAI,SAAA3M,MAAI,OAAIA,OAASy5F,yBAAU31F,UAX3D,GAWnBu1H,SAXmBhH,MAAA,GAWTiH,SAXSjH,MAAA,GAoB1B,GARAhiH,OAAO7C,QAAQ,SAAChQ,EAAGN,GACf,IAAMO,KAAOD,EAAEC,KACXwlB,aAAaxlB,MAAM4lB,IAAIrjB,OAASy5F,yBAAU11F,YAC1CkjB,YAAY,GAAGrc,KAAKnN,MACpBwpB,YAAY,GAAGrc,KAAK8E,KAAKxS,OAI7Bm8H,UAAYC,SAAU,KAAAC,cAAAC,eAChBC,cAAgBx2G,aAAay5E,QAAQ/1F,MACrC+yH,cAAgBz2G,aAAa25E,QAAQj2F,OAC3C4yH,cAAAtyG,YAAY,IAAGrc,KAAfqB,MAAAstH,eAAwB78B,OAAQE,UAChC48B,eAAAvyG,YAAY,IAAGrc,KAAfqB,MAAAutH,gBAAwB9pH,KAAK+pH,eAAgB/pH,KAAKgqH,iBAEtD,OAAOzyG,8DAIP,OAAO,oDAIP,OACIwb,EAAG,EACHv6B,EAAG,2DAKP,OACIu6B,EAAG,EACHv6B,EAAG,6EAyBe+e,aAA0B,IAAA+R,KAM5CrM,WACAvJ,OAP+B7R,OAAazH,UAAA1D,OAAA,QAAA6L,IAAAnI,UAAA,GAAAA,UAAA,MAC1C6vH,YAAcpoH,OAAOooH,YACrBh5F,QAAUpvB,OAAOovB,QACvB,IAAKj8B,KAAKgL,OACN,SAIJ,GAAIuX,uBAAuBjkB,oBAAW,CAClC,IAAM+f,QAAUkE,YAAYjE,UAC5B2J,WAAa5J,QAAQ1S,OAAO1D,IAAI,SAAAnP,GAAC,OAAIA,EAAEC,OACvC2lB,OAASL,QAAQrT,UAEjBid,WAAa1F,YAAY,GACzB7D,OAAS6D,YAAYpH,MAAM,EAAGoH,YAAY7gB,QAG9C,IAAMwzE,OAASl1E,KAAK6yH,QACdt0G,aAAeve,KAAKgL,OAAOwT,kBAE3B02G,gBAAiB5gG,SAAG5Y,OAAHnU,MAAA+sB,KAAA6gG,6BAAajgD,SAAQxhE,OAAO,SAAC4kD,OAAU,IAClDmP,MAAenP,MAAfmP,MAAOke,IAAQrtB,MAARqtB,IAEf,OAAO19D,WAAWpJ,MAAM,SAACtT,MAAOoH,KAC5B,OAAIpH,SAASgT,cAAgBA,aAAahT,OAAOoT,IAAIrjB,OAASy5F,yBAAU11F,WACW,IAAxEqf,OAAO0H,UAAU,SAAAttB,GAAC,OAAIA,EAAE6Z,OAAS80D,MAAMlpD,aAAahT,OAAOtJ,SAC3DsJ,QAAU0lD,gBAAeC,SACkB,IAA3CxyC,OAAO0H,UAAU,SAAAttB,GAAC,OAAIA,EAAE6Z,OAASgzE,UAIpD,OAAOsvC,YAAcC,eAAiBA,eAAejtH,IAAI,SAACnP,GACtD,IAAMoP,IAAMyV,MAAM7kB,GAClB,GAAImjC,QAAS,CACT,IAAM3G,OAASptB,IAAIotB,QAAUptB,IAC7B,QAAiBqF,IAAbrF,IAAIoyB,KAAoB,CACxB,IAAM86F,QAA0C,EAAhCvxH,KAAK6Q,KAAKxM,IAAIoyB,KAAOz2B,KAAK4xC,IAC1CngB,OAAOmG,MAAQ25F,QACf9/F,OAAOoG,OAAS05F,QAChB9/F,OAAOyI,GAAKq3F,QAAU,EACtB9/F,OAAO9xB,GAAK4xH,QAAU,YAED7nH,IAAjB+nB,OAAOmG,QACPnG,OAAOmG,MAAQ,QAEGluB,IAAlB+nB,OAAOoG,SACPpG,OAAOoG,OAAS,GAK5B,OAAOxzB,IAAIotB,QAAUptB,MACtBgL,KAAK,SAACtY,EAAGwI,GAAJ,OAAUxI,EAAE4I,EAAIJ,EAAEI,gGAGK+e,aAAa,IAUxC8+E,aACAg0B,IAXwCC,qBACe/yG,YAAYjE,UAAzDi3G,eAD8BD,qBACpCtqH,KAA8BwqH,iBADMF,qBACd3pH,OACxB2/G,eAAiBtrH,KAAKuxH,gBACtBhzG,aAAeve,KAAKgL,OAAOwT,kBAHWi3G,uBASxCz1H,KAAK4uH,oBAJL12B,OALwCu9B,uBAKxCv9B,OACAF,OANwCy9B,uBAMxCz9B,OACAI,WAPwCq9B,uBAOxCr9B,WAPwCq9B,uBAQxCt9B,aAIepD,yBAAU31F,SACzBiiG,aAAe9iF,aAAay5E,QAAQ/1F,MACpCozH,IAAM,KACCj9B,aAAerD,yBAAU31F,UAChCiiG,aAAe9iF,aAAa25E,QAAQj2F,MACpCozH,IAAM,KAGV,IAAM9oB,mBAsBN,OArBA+e,eAAexiH,QAAQ,SAACsnE,SACpBA,QAAQtnE,QAAQ,SAACuV,SACb,IAAMq3G,SAAWr3G,QAAQopD,MAGzB,GAFc+tD,iBAAiB32G,MAAM,SAAC3W,IAAK1P,GAAN,OACmD,IAApF+8H,eAAenvG,UAAU,SAAAttB,GAAC,OAAI48H,SAASn3G,aAAarW,IAAInP,MAAMkJ,SAAWnJ,EAAEN,OACpE,CACP,IAAMm9H,eAAiBt3G,QAAQg3G,KACzBj6G,IAAMiD,QAAQopD,MACdz3D,SACN,IAAK,IAAMjW,OAAOwkB,aAAc,CAC5B,IAAMtc,MAAQsc,aAAaxkB,KAAKkI,MAChC+N,MAAMjW,KAAOqhB,IAAInZ,OACbA,QAAUo/F,eACVrxF,MAAMjW,KAAO47H,gBAGrBppB,gBAAgBrmG,KAAK8J,aAKzBu8F,gBAAiBvsG,KAAKgL,OAAOsT,UAAU3S,8EAa3BwG,KACpB,OAAO41E,6BAAc/nF,KAAK0zB,SAAS++B,UAAUzyD,KAAKioF,YAAYv0E,OAAO,SAAA1I,MAAI,QACpEA,OAAkC,IAA3BmH,IAAIlM,QAAQ+E,KAAK26E,6DAU7B,OAAOsF,QAAQ+uB,IAAIh6G,KAAK24G,sGAIxB,IAAItuB,UACEa,QAAU,IAAID,QAAQ,SAAC7hE,SACzBihE,UAAYjhE,UAIhB,OAFAppB,KAAK24G,uBAAuBzyG,KAAKglF,SAE1B,WACHb,qEAKJ,IAAMuhB,QAAU5rG,KAAK4rG,UACrB,OAAO,GAAAlwF,OAAIswF,0BAAiBn7C,uBAArB,cAAAn1C,OAAwDkwF,QAAQ2nB,aAAhE,QAAA73G,OACAswF,0BAAiBn7C,uBADjB,cAAAn1C,OACoDkwF,QAAQ4nB,aAD5D,oDAlkBP,QAEQ18G,YAGAjK,UACA7B,kDA4Cc,QAAAs9D,KAAAljE,UAAA1D,OAARkgB,OAAQ,IAAA/Y,MAAAy/D,MAAAC,KAAA,EAAAA,KAAAD,KAAAC,OAAR3mD,OAAQ2mD,MAAAnjE,UAAAmjE,MACtB,OAAAqtD,qBAAW51H,KAAQ4hB,8DAcnB,OACI+5B,WACIrgD,KAAM,iEAkBImyE,KAAMooD,UACxB,OAAO5mD,eAAexB,KAAMooD,0DAkB5B,MAAO,qEAoHP,OAAO,mBCzST7iE,cAAO+f,QAAQ/f,KAEfhkD,kBAAW,SAAXA,SAAYlW,GAAM,IACZw8B,OAAWx8B,EAAXw8B,OACR,OAAoB,OAAbA,OAAO9xB,GAA2B,OAAb8xB,OAAOyI,GAQ1B+3F,kBAAW,SAAXA,SAAYx5F,SACrB,IAAI44F,eACI35B,MAAyFj/D,QAAzFi/D,MAAO5iE,UAAkF2D,QAAlF3D,UAAWu8C,OAAuE54C,QAAvE44C,OAAQv4B,YAA+DrgB,QAA/DqgB,YAAa6wD,gBAAkDlxE,QAAlDkxE,gBAAiB1sE,UAAiCxE,QAAjCwE,UAAWnH,MAAsB2C,QAAtB3C,MAAOu5B,WAAe52B,QAAf42B,WAC5Ex/B,MAAQq0D,6BAAcpvD,WAAWo6B,KAAK,QAASjyB,WAC/Ci1F,oBAAsBrjD,kBAAkB/1B,aACxCq5E,SAAWhjE,gBACJ4F,MAAMm9D,qBACNh4F,EAAE,SAAAjlC,GAAC,OAAIA,EAAEw8B,OAAOyI,IAChBv6B,EAAE,SAAA1K,GAAC,OAAIA,EAAEw8B,OAAO9xB,IAChBm1D,QAAQ3pD,mBAErBkmH,eAAiBhgD,OACbs4B,kBACA0nB,eAAiBhgD,OAAOxhE,OAAO1E,oBAGnCq/G,oBAAY36F,MAAOiG,OACnB,IAAI49C,QAAUyQ,YAAYt0D,MAAO,QAAS,IAS1C,OARA6jD,QAAQqG,QAAQ1I,OAAO,GAAGp0C,WAAW,GAChCoyB,WAAWisC,WACZ5nB,QAAUA,QAAQrkB,aACjBqyB,SAASryB,WAAWqyB,UACpBnY,GAAG,MAAOmuB,MAAMwW,8BAErBx6B,QAAQxkB,KAAK,IAAKijE,SAASd,iBACVv7F,MAAM,eAAgB,GAChC49C,SC5CE4jB,mCACTa,Y9CHuB,O8CIvBD,aAAc,aACdj7D,UAAW,GACX6b,YAAa,SACbhB,WACIrgD,KAAM,SAEVw+F,aACI+P,YACIvuG,KAAM,SACNwxH,WAAY,EAAG,GAAI,GAAI,KAE3BpjB,OACIpuG,KAAM,SACNwxH,WAAY,EAAG,EAAG,GAAK,KAE3BljB,QACItuG,KAAM,SACNwxH,WAAY,EAAG,EAAG,GAAK,MAG/Bxf,sBAAuB,GACvBvC,UACI32D,SACArW,KACAv6B,KACA+pG,eACI9zG,MAAO,IAGfy5D,YACIk/B,OAAQ,QACR7M,SAAU,KAEdioB,iBAAiB,srCCLAyoB,oCAOjB,SAAAA,YAAsB,IAAA9vB,iBAAAjxF,yJAAAghH,CAAAl2H,KAAAi2H,WAAA,QAAA3tD,KAAAljE,UAAA1D,OAANsF,KAAM,IAAA6B,MAAAy/D,MAAAC,KAAA,EAAAA,KAAAD,KAAAC,OAANvhE,KAAMuhE,MAAAnjE,UAAAmjE,MAAA,OAClBrzD,MAAAihH,+BAAAn2H,MAAAmmG,iBAAAiwB,oBAAAH,YAAAt9H,KAAA4O,MAAA4+F,kBAAAnmG,MAAA0b,OAAS1U,SACJylE,SAAW,IAAIF,qBAFFr3D,qXAPaq9G,6RA8B/B,MAAO,qDAqCP,OAAOuD,0EAeM9qH,KAAM4jH,kBAAmBh3B,MAAM,IAAAxiF,OAAApV,KACxCk1E,UACE2iB,MAAQD,KAAK75D,EACb+5D,MAAQF,KAAKp0F,EACbi+F,UAAY7J,KAAKxjD,MACjB22D,SAAW/qG,KAAK6M,SAASk+F,SACvB5S,WAA2By2B,kBAA3Bz2B,WAAYC,WAAew2B,kBAAfx2B,WACdi+B,OAASl+B,aAAepD,yBAAU11F,UAClCi3H,OAASl+B,aAAerD,yBAAU11F,UAClCtF,IAAMs8H,OAASlpB,SAAS7tD,EAAKg3E,OAASnpB,SAASlpG,EAAI,KACnDwoH,cAAgB1hB,SAAS32D,MACzBo8E,WAAa/D,cAAclhH,MAC3BgT,aAAeve,KAAKgL,OAAOwT,kBAC3BkuG,gBAAkB8D,YAAcjyG,aAAaiyG,YAAYvuH,MACzD03B,SACAzc,QAgCN,OA9BAg4D,OAASlqE,KAAK/C,IAAI,SAACnP,EAAGN,GAClB,IAAM+9H,IAAM1+B,MAAM6F,cAAc5kG,EAAEilC,GAAK85D,MAAM8F,eAAiB,EACxD64B,IAAM1+B,MAAM4F,cAAc5kG,EAAE0K,GAAKs0F,MAAM6F,eAAiB,EAFtC84B,eAGIjK,eAAgBx6G,MAAOlZ,EAAGmJ,MAAOzJ,IACzDi0H,4BAAehrB,oBAAWirB,kCADtBt4E,MAHgBqiF,eAGhBriF,MAAOu4E,SAHS8J,eAGT9J,SAGfhzF,MAAM+8F,OAAStiF,MACfza,MAAM,gBAAkB,EACxBzc,KAAK6vG,cACL7vG,KAAK8vG,cAAgBL,SACrBzvG,KAAKqwG,kBAEL,IAAMj1D,OACFxF,SACAx9B,QACIyI,EAAGjlC,EAAEilC,aAAapxB,sBAAoB,KAAO4pH,IAC7C/yH,EAAG1K,EAAE0K,aAAamJ,sBAAoB,KAAO6pH,KAEjD78F,YACA8tC,MAAO3uE,EAAE2uE,MACTke,IAAK7sF,EAAE6sF,IACPgxC,MAAO79H,EAAE6sF,IACTlhE,OAAQ3rB,EAAE2uE,MACVvqD,WAIJ,OAFAo7C,MAAMx3B,UAAYitF,uBAAuBj1H,EAAGN,EAAGwS,KAAMoK,QACrDA,OAAKwhH,WAAW99H,EAAEiB,KAAMu+D,OACjBA,QAEX4c,OAASo5C,eAAetuH,KAAMk1E,8CAS1Bv8C,WAAW,IACXu8C,OACA2hD,gBACAl9F,MAHWjiB,OAAA1X,KAKT6M,OAAS7M,KAAK6M,SAEhBk+F,SAKAl+F,OALAk+F,SACApuD,YAIA9vC,OAJA8vC,YACA7b,UAGAj0B,OAHAi0B,UACAi7D,aAEAlvF,OAFAkvF,aACA7oC,WACArmD,OADAqmD,WAEEo4D,eAAiBtrH,KAAKuxH,gBACtBhlB,gBAAkBvsG,KAAKqxH,iBACvB9yG,aAAeve,KAAKgL,OAAOwT,kBAC3Bo5E,KAAO53F,KAAK43F,OACZ9xF,KAAOymG,gBAAgBtkG,IAAI,SAAAnP,GAAC,OAAIA,EAAEiB,MAClCkqG,mBAAqBn4B,sBAAsBiwB,aAAc/7F,KAAK04B,KAAM7rB,OAAOmvF,aAC3E86B,mBAAqB/uC,6BAAcpvD,WACnC63F,WAAazlB,SAAS32D,MAAM7oC,MAC5BmhH,gBAAkBnuG,aAAaiyG,aAAejyG,aAAaiyG,YAAYvuH,MAoD7E,OAlDAjC,KAAK6yH,WACL7yH,KAAKu0H,aACLuC,mBAAmBl5C,QAAQqmB,mBAAmBlhG,KAAK,MAAM,GACzD+zH,mBAAmBl5C,QAAQ98C,WAAW,GACtCknD,YAAYrvD,UAAW,IAAK2yF,eAAgB,MACxCx4D,MAAO,SAAAA,MAACnT,QPmHQ,SAAfo3E,aAAgBrjG,MAAO4I,SAChC,IAAI06F,gBACA1hG,OACI49B,WAAkC52B,QAAlC42B,WAAY+jE,kBAAsB36F,QAAtB26F,kBACZ1xC,SAA+BryB,WAA/BqyB,SAAU6M,OAAqBl/B,WAArBk/B,OAAQ+M,SAAajsC,WAAbisC,SACtB83B,oBACAluC,yBAAUr1D,MAAMjD,OAAQwmG,kBAAkBnkE,OAC1Cx9B,OAAS2hG,kBAAkB3hG,OASvB0hG,gBARC73B,SAQiBzrE,MAPAA,MAAMw/B,aACnBsyB,KAAKza,QAAQqnB,SACb7M,SAASA,UACTnY,GAAG,MAAO,WACPihD,oBAAYtmC,6BAAc/nF,MAAOs1B,QAAQ,KAKrD+4F,oBAAY2I,gBAAiB1hG,SOpIrByhG,CAAap3E,OACTuT,sBACA+jE,mBACInkE,OACIokE,iBAAkB,EAClBrtC,eAAgBnyE,OAAKy/G,eAAe,iBAExC7hG,QACI4hG,iBAAkBnsB,SAASwC,cAAc9zG,WAKzD67B,OAAQ,SAAAA,OAACqqB,MAAOywB,QAAS53E,GAKrB,IAAI47C,MAJJ8gC,OAASx9D,OAAK0/G,gBAAgBhnD,QAAS14D,OAAKk3G,oBAAqBh3B,KAAMp/F,GACvEkf,OAAKm7G,QAAQ3sH,KAAKgvE,QAClB2hD,gBAAkB,GAAAn7G,OAAGuoF,mBAAmB,GAAtB,KAAAvoF,OAA4B5V,KAAKtN,IAAMA,GAAIiJ,cAG7D,IAAM41H,WAAatsB,SAAS32D,MAAM36C,MAC5B69H,SAAWpiD,OAAOhqD,KAAK,SAAApyB,GAAC,OAAiC,OAA7BA,EAAE2uE,MAAMilD,uBACLn/G,IAA7BzU,EAAE2uE,MAAMilD,mBAGZt4E,MADAijF,WACQA,WAAWjnD,QAAS53E,EAAG8yH,gBAEvB1zB,KAAKxjD,MAAM4tD,SAASs1B,UAAYA,SAAS7vD,MAAMilD,kBAG3D/yF,MAAQjiB,OAAKy/G,aAAa/iF,OAC1B18B,OAAK6/G,WAAL7/G,EACI6jF,MAAO7jF,OACPihB,UAAWgnB,MAAMlvB,OACjBksB,wBACAu4B,cACAp0C,UAAW+1F,gBACX3jE,sBACAv5B,MAAOA,UACP6zE,gBAAiB3gG,OAAO2gG,oBAGjC,SAAA10G,GAAC,OAAIA,EAAE,GAAG2uE,MAAMilD,kBAAoB5zH,EAAE,GAAG6sF,MAE5CuoC,oBAAoBluH,KAAKysE,SAAUzsE,KAAK6yH,SACjC7yH,uDAQGo0C,OACV,OACIsiF,OAAQtiF,MACRy1C,eAAgB,6DAUP9rD,EAAGv6B,EAAGqJ,QACnB,IAAI2qH,aAAe3qH,OAAO2qH,aACpBxsH,KAAOhL,KAAKgL,OAElB,IAAKA,MAASA,MAAQA,KAAK07F,UACvB,OAAO,KAGX8wB,kBAAgCjqH,IAAjBiqH,aAA6BA,aAAex3H,KAAK6M,SAASygG,sBACzE,IAAMh1C,MAAQt4D,KAAKysE,SAASvhD,KAAK6S,EAAGv6B,EAAGg0H,cACjC3uG,WAAakkD,WAAWzU,MAAO,OAAQ,OAAQ,UAErD,GAAIA,MAAO,KAAAm/D,iBACgBn/D,MAAMttD,KAAKA,KAA1By8D,MADDgwD,iBACChwD,MAAOke,IADR8xC,iBACQ9xC,IAEf,OACIjtD,GAFgB14B,KAAK03H,uBAAuBjwD,MAAOke,KAGnD98D,aACIkV,EAAGlV,WAAWkV,EACdv6B,EAAGqlB,WAAWrlB,EACdi4B,MAAO,EACPC,OAAQ,IAEZi8F,QAAS33H,KAAK04B,MAGtB,OAAO,uDA7OP,MAAO,6DAkBP,OAAOyiE,sFAYW1tB,KAAMooD,UACxB,IAAMhpH,OAAS0lH,qBAAUH,cAAc3kD,KAAMooD,UACvC9qB,SAAWl+F,OAAOk+F,SAClBpvD,UAAY9uC,OAAO8uC,UACnB60E,WAAazlB,SAAS32D,OAAS22D,SAAS32D,MAAM7oC,MAKpD,OAHIilH,aAAe70E,UAAU/tB,UACzB+tB,UAAU/tB,QAAU4iG,YAEjB3jH,qEAYP,OAAO,0jBChGf,IAAMosD,cAAO8Z,QAAQ9Z,KAuCN2+D,cAjC6B,SAAXA,SAAYh2G,QACzC,IAAIszG,eACI35B,MAAyF35E,OAAzF25E,MAAO5iE,UAAkF/W,OAAlF+W,UAAWu8C,OAAuEtzD,OAAvEszD,OAAQv7C,MAA+D/X,OAA/D+X,MAAOu5B,WAAwDtxC,OAAxDsxC,WAAYpyB,UAA4Clf,OAA5Ckf,UAAW0sE,gBAAiC5rF,OAAjC4rF,gBAAiB7wD,YAAgB/6B,OAAhB+6B,YAEjEk7E,WAAyB3kE,WAAjCk/B,OAAoB7M,SAAaryB,WAAbqyB,SACtB7xD,MAAQq0D,6BAAcpvD,WACtBo9F,oBAAsBrjD,kBAAkB/1B,aACxC6V,UAAY9+B,MAAM++B,UAAU,QAAQznD,MAAM4W,OAAOszD,SAPHy4C,MAAAmK,wBAQX,QAAS,UAAU7vH,IAAI,SAAAvN,GAAC,OAAIu+D,gBAAOL,MAAMm9D,qBACjEh4F,EAAE,SAAAjlC,GAAC,OAAIA,EAAE4B,GAAGqjC,IACZk2B,GAAG,SAAAn7D,GAAC,OAAIA,EAAE4B,GAAG8I,IACb8wD,GAAG,SAAAx7D,GAAC,OAAIA,EAAE4B,GAAG45D,KACbqE,QAAQ,SAAA7/D,GAAC,OAAe,OAAXA,EAAE4B,GAAG8I,MAZiB,GAQ7Cu0H,cAR6CpK,MAAA,GAQ9BqK,eAR8BrK,MAAA,GAepDuH,eAAiBhgD,OACjBxhD,MAAMq/B,KAAK,QAASjyB,WAChB0sE,kBACA0nB,eAAiBhgD,OAAOxhE,OAAO,SAAA5a,GAAC,OAAmB,OAAfA,EAAEw8B,OAAO9xB,KAEjD,IAAMy0H,eAAiBzlE,UAAUM,QAAQj+B,OAAO,QAAQk+B,KAAK,IAAKglE,cAAc7C,iBAChF1iE,UAAU3oD,MAAMouH,gBAAgB/kE,aAAasyB,KAAKza,QAAQ8sD,aACzCtyC,SAASA,UACTnY,GAAG,MAAOmuB,MAAMwW,6BAChBh/C,KAAK,IAAKilE,eAAe9C,iBACzB/tF,KAAK,SAAUruC,GACZ,IAAMy+E,QAAUwQ,6BAAc/nF,MAE9Bu3E,QAAQqG,QAAQ9kF,EAAE,GAAGgoC,WAAW,GAChC5nC,OAAO4M,KAAK6zB,OAAO7wB,QAAQ,SAAA/O,KAAG,OAAIw9E,QAAQ59C,MAAM5/B,IAAK4/B,MAAM5/B,irDCR9Dm+H,4qBAAkBjC,mTAwBVjrH,KAAM4jH,kBAAmBrwG,cAC9C,IAAM4rD,QAAUguD,SAAAC,oBAAAF,UAAA59H,WAAA,0BAAA0F,MAAArH,KAAAqH,KAA8BgL,KAAMuT,cAOpD,OANC4uF,SAAS7tD,EAAG6tD,SAASlpG,GAAG6E,QAAQ,SAACxN,MACcszH,kBADL,GAAAlzG,OAC3BpgB,KAD2B,gBAErBy5F,yBAAU31F,cAA6BmO,IAAlB48D,QAAQ7uE,QAC3C6uE,QAAQ7uE,MAAM,GAAKuI,KAAKsQ,IAAIg2D,QAAQ7uE,MAAM,GAAI,MAG/C6uE,sDAQP,OAAOytD,sEAUM5sH,KAAM4jH,kBAAmBh3B,MAAM,IAAA1iF,MAAAlV,KACxCk1E,UACE25C,cAAgB7uH,KAAK6uH,gBACrBptB,UAAY7J,KAAKxjD,MACjBvnC,OAAS7M,KAAK6M,SAEd4/G,cADW5/G,OAAOk+F,SACO32D,MACzBo8E,WAAa/D,cAAclhH,MAC3BgT,aAAeve,KAAKgL,OAAOwT,kBAC3BkuG,gBAAkB8D,YAAcjyG,aAAaiyG,YAAYvuH,MACvD+1F,OAA4B42B,kBAA5B52B,OAAQE,OAAoB02B,kBAApB12B,OAAQq4B,QAAY3B,kBAAZ2B,QAVoB8H,eAczC3K,sBAAc91B,MAFbC,MAZwCwgC,eAYxCxgC,MACAC,MAbwCugC,eAaxCvgC,MAEEwgC,YAAczrH,OAAOmhH,oBACrBqI,OAAS93G,aAAay5E,SAAWz5E,aAAay5E,QAAQr5E,IAAIrjB,OAASy5F,yBAAU11F,UAC7Ei3H,OAAS/3G,aAAa25E,SAAW35E,aAAa25E,QAAQv5E,IAAIrjB,OAASy5F,yBAAU11F,UAC7EtF,IAAMs8H,OAAS,IAAOC,OAAS,IAAM,KAwC3C,OAvCAphD,OAASlqE,KAAK/C,IAAI,SAACnP,EAAGN,GAClB,IAAM+9H,IAAM1+B,MAAM6F,cAAc5kG,EAAEilC,GAAK85D,MAAM8F,eAAiB,EACxD64B,IAAM1+B,MAAM4F,cAAc5kG,EAAE0K,GAC5B+0H,KAAQhI,SAAW1B,gBAAkBhiB,MAAS/U,MAAM4F,cAAc5kG,EAAEw7D,IAAMwjC,MAAM4F,cAAc,GAH5E+4B,eAIIjK,eAAgBx6G,MAAOlZ,EAAGmJ,MAAOzJ,IACzDi0H,4BAAehrB,oBAAWirB,kCADtBt4E,MAJgBqiF,eAIhBriF,MAAOu4E,SAJS8J,eAIT9J,SAEThzF,SACAzc,QACNyc,MAAM0kB,KAAOjK,MAEbl3B,KAAK6vG,cACL7vG,KAAK8vG,cAAgBL,SACrBzvG,KAAKqwG,kBACL,IAAMiL,SAAW1/H,EAAE0K,aAAamJ,sBAC1B8rH,UAAY3/H,EAAEw7D,cAAc3nD,sBAC5B2rD,OACFxF,OACI/0B,EAAGw4F,IACH/yH,EAAGg1H,SAAW,KAAO1gC,MAAM4F,cAAc,GACzCppC,GAAImkE,UAAY,KAAO3gC,MAAM4F,cAAc,IAE/CpoE,QACIyI,EAAGw4F,IACH/yH,EAAGg1H,SAAW,KAAOhC,IACrBliE,GAAImkE,UAAY,KAAOF,MAE3B5yC,IAAK7sF,EAAE6sF,IACPle,MAAO3uE,EAAE2uE,MACThjD,OAAQ3rB,EAAE2uE,MACVkvD,MAAO79H,EAAE6sF,IACT7kD,UAAWw3F,YAAcA,YAAYx/H,EAAGN,EAAGwS,KAAMkK,OAAQ,GACzDykB,YACAzc,WAIJ,OAFAo7C,MAAMx3B,UAAYitF,uBAAuBj1H,EAAGN,EAAGwS,KAAMkK,OACrDA,MAAK0hH,WAAW99H,EAAEiB,KAAMu+D,OACjBA,QAEX4c,OAASo5C,eAAetuH,KAAMk1E,4EAK9Bl1E,KAAKo0H,eAAiBvE,kCAA0B7vH,wDAQtCo0C,OACV,OACIiK,KAAMjK,+DArHV,OAAO+mD,kFAWP,MAAO,wBChDFA,kCACTa,YlDHuB,OkDIvBD,aAAc,YACdv5D,SAAWF,IAAK,EAAGkvB,OAAQ,EAAG9rB,KAAM,EAAGC,MAAO,GAC9C7E,UAAW,GACX43F,eAAgB,GAChB5+B,aACI+P,YACIvuG,KAAM,OACNwxH,WAAY,EAAG,GAAI,GAAI,KAE3BpjB,OACIpuG,KAAM,OACNwxH,WAAY,EAAG,EAAG,GAAK,KAE3BljB,QACItuG,KAAM,OACNwxH,WAAY,EAAG,EAAG,GAAK,MAG/BpxF,OAAQ,IACRD,MAAO,IACPvoB,KAAM,GACNsgE,aAAc,EACd/c,SAAU,EACVgd,UAAW,EACXpd,WAAY,EACZE,SAAU,IACV1d,QAAS,UAAW,OAAQ,QAAS,SAAU,SAAU,UACzD8C,WACIrgD,KAAM,YAEVyvG,UACI4tB,gBACIl/H,MAAO,OAEXm/H,mBACIn/H,MAAO,SAEXg4G,OACIh4G,MAAO,KAEXytE,QACIztE,MAAO,KAEXo7C,SACIp7C,MAAO,KAEX26C,OACI36C,MAAO,KAEXkoG,OACIloG,MAAO,KAEX6gC,MACI7gC,MAAO,MAGfo/H,iBAAkB,GAClB3lE,YACIk/B,OAAQ,QACR7M,SAAU,KAEduzC,QACIjvB,WACI/oE,UAAS,GAAAplB,OlDnEM,OkDmEN,yBAEbq9G,SACIj4F,UAAS,GAAAplB,OlDtEM,OkDsEN,uBAEbs9G,UACIl4F,UAAS,GAAAplB,OlDzEM,OkDyEN,8uDCvDrB,IAAM03D,QAAML,QAAQK,IACd/d,QAAM0d,QAAQ1d,IAWC4jE,kCAEjB,SAAAA,SAAajuH,KAAM4sF,KAAM/qF,OAAQnR,cAAc,IAAAwZ,MAAA,wJAAAgkH,CAAAl5H,KAAAi5H,WAC3C/jH,MAAAikH,8BAAAn5H,KAAAo5H,mBAAAH,UAAAtgI,KAAAqH,KAAMgL,KAAM4sF,KAAM/qF,OAAQnR,gBACrB29H,gBAFsCnkH,kXAFbq9G,yRAoC9B,MAAO,qEAWSn0G,UAAWvR,QAAQ,IAAAuI,OAAApV,KAC/Bs5H,WACEC,YAEFljE,WAKAxpD,OALAwpD,WACAE,SAIA1pD,OAJA0pD,SACAw0C,SAGAl+F,OAHAk+F,SACA73F,KAEArG,OAFAqG,KACAwlH,eACA7rH,OADA6rH,eAEEc,SAAWx5H,KAAKqxH,qBAVaoI,iBC0CZ,SAAlBC,gBAAmB3uB,SAAUxsF,cAAiB,IAAAovG,MAAAgM,0BACG7sB,MAAOC,OAAQE,MAAOD,MACvE/kG,IAAI,SAAAvN,GAAC,OAAIqwG,SAASrwG,GAAG6Q,QAFyB,GAChDquH,WADgDjM,MAAA,GACpCkM,YADoClM,MAAA,GACvB6C,WADuB7C,MAAA,GAAAC,MAAA+L,0BAGTC,WAHSjM,MAAA,GAGckM,aAChE5xH,IAAI,SAACvN,GACF,IAAM+yE,KAAOlvD,aAAa7jB,GAC1B,OAAI+yE,MAAQA,KAAK9uD,IAAIrjB,OAASy5F,yBAAU31F,QAC7BquE,KAAKxrE,MAET,OATwC,GAYvD,OACI63H,WAbmDlM,MAAA,GAcnDmM,UAdmDnM,MAAA,GAenDoM,YAfmDpM,MAAA,GAgBnDqM,WALeltD,WAAWxuD,aAAciyG,WAAY,UDpChDkJ,CAAgB3uB,SANC/qG,KAAKgL,OAAOwT,mBAE7Bs7G,WAb+BL,iBAa/BK,WACAC,UAd+BN,iBAc/BM,UACAC,YAf+BP,iBAe/BO,YACAC,WAhB+BR,iBAgB/BQ,WAEEC,QAAU97G,UAAUE,UACpBtT,KAAOkvH,QAAQlvH,KACfqc,KAAO6yG,QAAQ7yG,KAErBrnB,KAAKq5H,gBAELG,SAAS1wH,QAAQ,SAACpO,EAAGuH,OACjBmT,OAAKikH,aAAa3+H,EAAEy/H,MAAQz/H,EAAGuH,OAC/Bs3H,SAAS7+H,EAAEuH,OAASvH,IAKxB4+H,QAAUlmD,UACL/c,WAAYA,WAAa,IAAOxyD,KAAK4xC,IACrC8gB,SAAS1yD,KAAK4xC,GAAK8gB,SAAW,KAC9B98D,MAAM,SAAAX,GAAC,OAAIA,EAAEghI,aAAe,IAC5BtyF,WAAW,MAEhBt0B,KAAKxR,QAAUs4H,aAAeV,QAAQpmH,KAAK,SAACtY,EAAGwI,GAC3C,MnDjGa,QmDiGT8P,KACOtY,EAAEo/H,aAAe52H,EAAE42H,aACrB52H,EAAE42H,aAAep/H,EAAEo/H,eAEhC,IAAM5E,QAAUpqH,KAAKyH,OAAO,SAACC,IAAK5Z,GAAN,OAAY4Z,KAAO5Z,EAAEihI,YAAc,IAAI,GAgBnE,OAbAT,QAAUA,QAAQtuH,MAAM/C,IAAI,SAACnP,EAAGN,GAW5B,OAVAM,EAAEshI,iBAAmBpvH,KAAKxS,GAAGwhI,cAAgBtB,eAC7C5/H,EAAEm9D,YAAcppD,OAAOopD,YACvBn9D,EAAEw+H,SAAWtsH,KAAKxS,GAAGyhI,YACrBnhI,EAAEuhI,SAAWrvH,KAAKxS,GAAGshI,YACrBhhI,EAAEs8H,QAAUA,QACZt8H,EAAEqhI,IAAM9yG,KAAK7uB,GACbM,EAAE69H,MAAQ79H,EAAEqhI,IACZrhI,EAAE2rB,OAASzZ,KAAKxS,GAChBM,EAAEwhI,cAAgBllH,OAAKikH,aAAavgI,EAAEqhI,KAAO/kH,OAAKikH,aAAavgI,EAAEqhI,KAAK,GC3FlD,SAAnBI,iBAAoBf,SAAUgB,UAAW3tH,QAClD,IAAM4tH,QAAUjB,SAASgB,UAAY,GAC/BE,QAAUlB,SAASgB,WAEzB,OAAIC,SAAWC,SAEPrkE,WAAYokE,QAAQlkE,SACpBA,SAAUmkE,QAAQrkE,YAEdqkE,SAORrkE,WAAYxpD,OAAOwpD,WAAaxyD,KAAK4xC,GAAK,EAAI,IAC9C8gB,SAAU1pD,OAAOwpD,WAAaxyD,KAAK4xC,GAAK,EAAI,MANxC4gB,WAAYxpD,OAAO0pD,SAAW1yD,KAAK4xC,GAAK,EAAI,IAC5C8gB,SAAU1pD,OAAO0pD,SAAW1yD,KAAK4xC,GAAK,EAAI,KDgFtC8kF,CAAiBhB,SAAUzgI,EAAEmJ,MAAO4K,QACjC/T,gEAYIkS,MACf,OAAOA,6EAUcA,MAErB,OACIk8D,OAAQkC,gCAAmBp+D,OnDtJL,iGmDkKb+yB,EAAGv6B,GAAgB,IAAbqJ,OAAazH,UAAA1D,OAAA,QAAA6L,IAAAnI,UAAA,GAAAA,UAAA,MAC1BokG,UAAYzhB,6BAAcl7E,OAAO8sE,MAAMt8B,QAAQryC,OAAO,GAC5D,GAAImkB,eAAeq6E,WAAY,KAAAmxB,iBACLnxB,UAAUx3F,MAAxBhH,KADmB2vH,iBACnB3vH,KAAMmvH,IADaQ,iBACbR,IACd,OACIzhG,GAAI14B,KAAK03H,uBAAuB1sH,KAAMmvH,KACtCxC,QAAS33H,KAAK04B,MAGtB,OAAO,2EAUavmB,KACpB,OAAO41E,6BAAc/nF,KAAK0zB,SAAS++B,UAAUzyD,KAAKioF,YAAYv0E,OAAO,SAAA5a,GAAC,OAAkC,IAA9BqZ,IAAIlM,QAAQnN,EAAEkZ,MAAMmoH,6CAU1FxhG,WAAW,IAAAjhB,OAAA1X,KAAA46H,kBAIX56H,KAAKs/F,cAFL5jE,OAFWk/F,kBAEXl/F,OACAD,MAHWm/F,kBAGXn/F,MAHWktE,aAiBZ3oG,KAAK6M,SAXJmvF,YANW2M,aAMX3M,YACAD,aAPW4M,aAOX5M,aACA28B,eARW/vB,aAQX+vB,eACAziE,YATW0yC,aASX1yC,YACAE,YAVWwyC,aAUXxyC,YACAqd,aAXWm1B,aAWXn1B,aACA/c,SAZWkyC,aAYXlyC,SACAgd,UAbWk1B,aAaXl1B,UACAjxC,QAdWmmE,aAcXnmE,QACA0wB,WAfWy1C,aAeXz1C,WACA2lE,iBAhBWlwB,aAgBXkwB,iBAEEj3B,SAAW5hG,KAAK43F,OAAOt9D,KACvBiyE,gBAAkBvsG,KAAKqxH,iBACvBwJ,YAAcn/F,OAAS8G,QAAQF,IAAME,QAAQgvB,OAC7CspE,WAAar/F,MAAQ+G,QAAQkD,KAAOlD,QAAQmD,MAC5Co1F,cAAgBjvD,sBAAsBiwB,aAAc/7F,KAAK04B,KAAMsjE,aAE/Dz6F,MCpMgB,SAAjBy5H,eAAkBv/F,MAAOC,OAAQ7uB,QAAW,IAEjD6rH,eAIA7rH,OAJA6rH,eACAziE,YAGAppD,OAHAopD,YACAE,YAEAtpD,OAFAspD,YACA0iE,iBACAhsH,OADAgsH,iBAGJ,OAAQh1H,KAAKwQ,IAAK4hD,YAAc4iE,kBAAoB,EAAIH,gBAAiBviE,aAAetyD,KAAKsQ,IAAIunB,OAC7FD,OAAS,GD2LKu/F,CAAeF,WAAYD,aACrCnC,8BACAziE,wBACAE,wBACA0iE,oCAEEp3B,UAAYzhG,KAAK43F,OAAOxjD,MACxB6mF,cAAgB9kE,aAAetyD,KAAKsQ,IAAI0mH,YAAaC,YAAc,EACnEI,aAAel7H,KAAK8W,SAASowD,OAC7Bi0D,iBAAmB,SAAnBA,iBAAmBriI,GAAC,OChOL,SAAhBsiI,cAAiBppH,MAAOzQ,MAAOuV,OAAQmkH,cAAer5B,UAC/D,IAAIy5B,iBAAmB,EAEnBjB,iBAEApoH,MAFAooH,iBACAhF,QACApjH,MADAojH,QAEEkG,eAAiB15B,SAAS9qF,SAC1BykH,eAAiB35B,SAASM,QAAQkzB,UAAYkG,eAAiB15B,SAASrgG,QAAQ,GAAKqgG,SAAS/0F,SAASpT,OAI7G,OAFA4hI,mBAAqB95H,MAAM,GAAKA,MAAM,KAAOuV,OAAO,GAAKA,OAAO,KAC9CvV,MAAM,IAAM64H,iBAAmBtjH,OAAO,IAAMukH,kBAC1CJ,eAAiBM,eDqNHH,CAActiI,EAAGyI,MAAO25H,aAAcD,cAAer5B,WAE7Ej+E,KAAO0xC,UAEJY,YAAYA,YAAcpyD,KAAKsQ,IAAI0mH,YAAc,EAAGC,WAAa,EAAG7kE,aAAe,GACnFud,aAAaA,cACb/c,SAASA,UACTgd,UAAUA,WACnBzzE,KAAKw7H,YAAcV,WACnB96H,KAAKy7H,aAAeZ,YAEpB,IAAMnmF,EAAIszC,YAAYD,6BAAcpvD,WAAY,KAAM,GAAjC,GAAAjd,OAAwCq/G,cAAc,GAAtD,WACZn9C,QADC,GAAAliE,OACUq/G,cAAc,GADxB,WACoC,GACrChoE,KAAK,YAFJ,aAAAr3C,OAE8Bo/G,WAAa,EAF3C,KAAAp/G,OAEgDm/G,YAAc,EAF9D,MAyBJa,oBACFC,YAAc,EAqBlB,OAPA3zC,YAAYtzC,EAAG,IAAK63D,gBAAT,GAAA7wF,OAA6Bq/G,cAAc,KAE9CzlG,OAvCM,SAAR+vD,MAASl9D,MACX6/D,YAAY7/D,KAAM,OAAQ,SAACrvB,EAAGN,GAAJ,QACtBwZ,MAAOlZ,EACPmJ,MAAOzJ,EACPojI,MAAOj4G,KACPzG,MACI8vG,cAAevrB,UAAUmnB,YAAY9vH,EAAEw+H,UACvCvK,cACAQ,sBAPG,GAAA7xG,OASJq/G,cAAc,GATV,UAUMphG,MAAM,OAAQ,SAAA7gC,GAAC,OAAI2oG,UAAUO,SAASlpG,EAAEkZ,MAAMslH,YAC9CpkE,aACAqyB,SAASryB,WAAWqyB,UACpBnY,GAAG,MAAO11D,OAAKq6F,6BACfrrB,UAAU,IAAK,mBAAApe,KAAAljE,UAAA1D,OAAIkgB,OAAJ,IAAA/Y,MAAAy/D,MAAAC,KAAA,EAAAA,KAAAD,KAAAC,OAAI3mD,OAAJ2mD,MAAAnjE,UAAAmjE,MAAA,OClMpB,SAAXszD,SAAYl4G,KAAMw3G,iBAAkB/3H,GAAM,IAC3C4O,MAAU5O,EAAE,GAAZ4O,MACFmkD,YAAcglE,iBAAiBnpH,OAGrC,OAFAA,MAAMmkD,YAAcA,YACpBnkD,MAAMsoH,cAAcnkE,YAAcnkD,MAAMsoH,cAAcnkE,aAAeA,YAC9D,SAAUz8D,GACb,OAAOiqB,KAAKksC,4BAAe79C,MAAMsoH,cAAetoH,MAApC69C,CAA2Cn2D,KD4LJmiI,CAASl4G,KAAMw3G,iBAAkBv5G,UAC/DmxC,KAAK,QAAS,SAACj6D,EAAGN,GACf,IAAMsjI,gBAAkB/N,uBAAuBj1H,EAAGN,EAAG+zG,gBAAiB70F,QACtE,SAAAgE,OAAUq/G,cAAc,GAAxB,UAAAr/G,OAAmCq/G,cAAc,GAAjD,UAAAr/G,OAA4D5iB,EAAEmJ,MAA9D,0CAAAyZ,OACMogH,oBAqBtBlpE,KAhBU,SAAZmpE,UAAa5zG,KAAMrvB,GACrB,IAAIkjI,QAAUN,iBAAiBC,aACzBM,eAAiBN,YAClBK,QAEMA,QAAQA,QAAQt6H,OAAS,GAAGsQ,MAAM/P,QAAUnJ,EAAEmJ,MAAQ,EAC7D+5H,QAAQ91H,MAAOiiB,UAAMnW,MAAOlZ,IAE5B6iI,cAJAK,UAAa7zG,UAAMnW,MAAOlZ,IAM9B4iI,iBAAiBO,gBAAkBD,WAQtBjpE,KAAK,QAAS,SAACj6D,EAAGN,GAAJ,SAAAkjB,OAAaq/G,cAAc,GAA3B,KAAAr/G,OAAiCq/G,cAAc,GAA/C,KAAAr/G,OAAqDljB,KC3MhE,SAAf0jI,aAAgBR,iBAAkBxoE,WAAYioE,iBAAkBx3G,MACrE+3G,iBAAiBh6H,OAAS,GAC1Bg6H,iBAAiB5yH,QAAQ,SAACqzH,oBACtB,IAAM9lE,WAAa8lE,mBAAmB,GAAGnqH,MAAMqkD,WACzCE,SAAW4lE,mBAAmBA,mBAAmBz6H,OAAS,GAAGsQ,MAAMukD,SACnEnlD,IAAiB,EAAVvN,KAAK4xC,GAAS4gB,YAA0B,EAAVxyD,KAAK4xC,GAAU4gB,WAAaE,UAEvE4lE,mBAAmBrzH,QAAQ,SAACpO,GAAM,IACtBytB,KAAgBztB,EAAhBytB,KAAMnW,MAAUtX,EAAVsX,MAEdmW,KAAKgf,KAAK,WACN,IAAMi1F,MAAQr0C,6BAAc/nF,MAC5Bo8H,MAAM3pE,UAAU,QACCS,aACAqyB,SAASryB,WAAWqyB,UACpBmB,UAAU,IAAK,kBAAM,SAAUhtF,GAC5B,IAAMy8D,YAAcglE,iBAAiBnpH,OAErC,OADAA,MAAMmkD,YAAcA,YACbxyC,KAAKksC,4BAAe79C,OACvBqkD,WAAYjlD,IACZmlD,SAAUnlD,IACV+kD,yBAHQtG,CAITn2D,OAEN0tC,SACjBg1F,MAAMh1F,eDmLlB80F,CAAaR,iBAAkBxoE,WAAYioE,iBAAkBx3G,MACtD3jB,+EAUeuiB,aACtB,IAAKviB,KAAKgL,OACN,SAEJ,IAAMid,WAAa1F,YAAY,GACzB7D,OAAS6D,YAAYpH,MAAM,EAAGoH,YAAY7gB,QAC1C26H,UAAYt0C,6BAAc/nF,KAAK0zB,SAAS++B,UAAU,QAAQznD,OAC1DuT,aAAeve,KAAKgL,OAAOwT,kBAc3B89G,YAZeD,UAAU3oH,OAAO,SAAC6oH,OACnC,IAAMvxH,KAAOuxH,MAAMvqH,MAAMhH,KACnBmvH,IAAMoC,MAAMvqH,MAAMmoH,IACxB,OAAOlyG,WAAWpJ,MAAM,SAACtT,MAAOoH,KAC5B,OAAIpH,SAASgT,cAAgBA,aAAahT,OAAOoT,IAAIrjB,OAASy5F,yBAAU11F,WACU,IAAvEqf,OAAO0H,UAAU,SAAAttB,GAAC,OAAIA,EAAE6Z,OAAS3H,KAAKuT,aAAahT,OAAOtJ,SAC1DsJ,QAAU0lD,gBAAeC,SACkB,IAA3CxyC,OAAO0H,UAAU,SAAAttB,GAAC,OAAIA,EAAE6Z,OAASwnH,UAKnB,GACjC,GAAImC,YAAa,CACb,IAAMxnD,SAAWwnD,YAAYV,MAAM9mD,SAASwnD,YAAYtqH,OACxD,QACI+rB,EAAG+2C,SAAS,GAAK90E,KAAKw7H,YAAc,EACpCh4H,EAAGsxE,SAAS,GAAK90E,KAAKy7H,aAAe,EACrChgG,MAAO,EACPC,OAAQ,IAGhB,iEAIA,OAAO,GAAAhgB,OAAIswF,0BAAiBn7C,uBAArB,2EApSP,OAAOsqC,iFAWP,MAAO,sBEaAqhC,cAvDE,SAAXA,SAAY7jG,UAAW3tB,KAAM6B,OAAQ4yB,YACvC,IAAM+yB,UAAYu1B,6BAAcpvD,WAAW85B,UAAU,KAAKznD,KAAKA,MAEzDyxH,eAAiBjqE,UAAUM,QAAQj+B,OAAO,KAC3CsS,KAAK,SAAU9oB,SACZyqE,wBAAS9oF,KAAMqe,QAAQy0C,SAE1BjpD,MAAM2oD,WACL74B,MAAQ8vD,qCAAsB1B,6BAAcpvD,WAAY9rB,OAAOi0B,WAC/D3F,SAAW95B,SAASs4B,MAAMwB,SAAU,IA2C1C,OAzCAsE,WAAWzF,SAASL,OACpB8iG,eAAet1F,KAAK,SAAU9oB,SAC1B,IAGIq+G,cAHEnlD,QAAUwQ,6BAAc/nF,MACtBs1B,OAAsDjX,QAAtDiX,OAAQj1B,KAA8Cge,QAA9Che,KAAM+zC,MAAwC/1B,QAAxC+1B,MAAOuoF,WAAiCt+G,QAAjCs+G,WAAmBC,UAAcv+G,QAArBsb,MACnCkjG,WAAax+G,QAAQw+G,WAE3B,GAAIH,cAAgBG,WAAWpjI,MAAO,CAClC,IACImrC,KADEk4F,kBAAoBD,WAAWr6F,QADHu6F,sBAGRt9F,WAAWO,WAAW3hB,QAAQhe,MAAhDo7B,MAH0BshG,sBAG1BthG,MAAOC,OAHmBqhG,sBAGnBrhG,OACTshG,aAAeh1C,YAAYzQ,QAAS,QAAS,IAG/C3yC,KADe,QAAf+3F,WACOlhG,MACe,UAAfkhG,WACA,EAEAlhG,MAAQ,EAGnBqtD,wBAASk0C,aAAavsG,QAClBsN,EAAGzI,OAAOyI,EAAI6G,KAAOk4F,kBAAoB,EACzCt5H,EAAG8xB,OAAO9xB,EAAI23B,SAAW2hG,kBAAoB,EAC7CrhG,MAAOA,MAAQqhG,kBACfphG,OAAQA,OAASohG,oBAErBD,YAAc9zC,yBAAUi0C,cACpBH,WAAYH,gBAGpB,IAAM/yC,OAAS3B,YAAYzQ,QAAS,OAAQ,SAAAz+E,GAAC,OAAKA,KAAIuH,KAAKA,MACrD6xG,SAAWvoB,OAAOl5D,OACxBmsG,WAAa7zC,yBAAUmpB,SAAU0qB,WACjCxoF,OAAS20C,yBAAUmpB,UACf7zD,KAAMjK,QAEV/1B,QAAQyiB,WAAa6oD,OAAO/L,QAAQv/D,QAAQyiB,WAAW,GACvDgoD,wBAASopB,SAAU58E,QACnBq0D,OAAO52B,KAAK,cAAe4pE,cAE/BnqE,UAAUI,OAAOxrB,SACVorB,WChEE2oC,mCACTY,aAAc,aACdC,YtDJuB,OsDKvBl7D,UAAW,GACX6a,WACIrgD,KAAM,YAEVw+F,aACI+P,YACIvuG,KAAM,OACNwxH,WAAY,EAAG,GAAI,GAAI,KAE3BpjB,OACIpuG,KAAM,OACNwxH,WAAY,EAAG,EAAG,GAAK,KAE3BljB,QACItuG,KAAM,OACNwxH,WAAY,EAAG,EAAG,GAAK,MAG/B55D,YACIk/B,OAAQ,QACR7M,SAAU,KAEdwlB,UACI32D,SACA/zC,MACI5G,MAAO,GACP2I,UAAW,SAAAA,UAAClB,IAAK1I,EAAGwS,KAAMsxB,SAEtB,OADoBA,QAAQw+D,aACrBA,CAAY55F,MAEvB27H,YACIr6F,QAAS,MAIrBs2F,QACIjvB,WACI/oE,UAAS,GAAAplB,OtD1CM,OsD0CN,0BAEbq9G,SACIj4F,UAAS,GAAAplB,OtD7CM,OsD6CN,wBAEbs9G,UACIl4F,UAAS,GAAAplB,OtDhDM,OsDgDN,quDCvBAuhH,4qBAAkB1K,6RAc/B,MAAO,+DAUMvnH,KAAM+/F,SAAUnT,MAgB7B,IAhBmC,IAAA1iF,MAAAlV,KAC/Bk1E,UACEusB,UAAY7J,KAAKxjD,MACjB8oF,aAAenyB,SAAS1qG,KACf88H,UAA+CD,aAAtD3xH,MAAkB9R,MAAoCyjI,aAApCzjI,MAAkB2jI,cAAkBF,aAA7B96H,UAC3BqqH,cAAgB1hB,SAAS32D,MACzBo8E,WAAa/D,eAAiBA,cAAclhH,MAC5CgT,aAAeve,KAAKgL,OAAOwT,kBAE3B6+G,mBAAqBtyB,SAAS1qG,KAAKw8H,WACnCC,kBAAoBO,mBAAmB76F,QACvC86F,gBAAkBD,mBAAmB5jI,MACrCizH,gBAAkBnuG,aAAaiyG,YAAcjyG,aAAaiyG,YAAYvuH,OAAS,EAC/Es7H,eAAiBJ,UAAY5+G,aAAa4+G,YAAc5+G,aAAa4+G,WAAWl7H,OAAS,EACzF8xH,KAAO5mB,SAAS7tD,EAChBw0E,KAAO3mB,SAASlpG,EAfaulE,MAAA,SAAAA,MAgB1BhxE,EAAOiQ,KACZ,IAAM3P,EAAIkS,KAAKxS,GACT4iB,IAAMtiB,EAAE2uE,MACR+1D,UAAYL,UAAY/hH,IAAImiH,gBAAkB9jI,MAnBrBk0H,MAAA8P,oBAqBX1J,KAAMD,MAAM7rH,IAAI,SAAA3M,MAAI,OAAKs8F,KAAKt8F,MAAQs8F,KAAKt8F,MAAMoiG,cAAc5kG,EAAEwC,OAC7Es8F,KAAKt8F,MAAMqiG,eAAiB,EAAI,IAtBT,GAqBxB44B,IArBwB5I,MAAA,GAqBnB6I,IArBmB7I,MAAA,GAAA8I,eAwBHjK,eAAgBx6G,MAAOlZ,EAAGmJ,MAAOzJ,IACvDi0H,4BAAehrB,oBAAWirB,kCADxBt4E,MAxBuBqiF,eAwBvBriF,MAAOu4E,SAxBgB8J,eAwBhB9J,SAGTr0D,OACFxF,SACAx9B,QACIyI,EAAGw4F,IACH/yH,EAAGgzH,KAEPn2H,KAAM+8H,cAAcI,UAAWhlI,EAAGwS,KAAMkK,OACxCk/B,YACAyoF,YACIpjI,MAAO6jI,2BAA2B/nH,SAAW+nH,gBAAgBxkI,EAAGN,EAAGwS,KAAMkK,OAAQ,KACjFstB,QAASs6F,mBAEb5/G,MACI6vG,cACAC,cAAeL,SACfY,mBAEJ5zF,SACA8tC,MAAOrsD,IACPuqE,IAAK7sF,EAAE6sF,IACPlhE,OAAQ3rB,EAAE2uE,MACVkvD,MAAO79H,EAAE6sF,KAGbrtB,MAAMx3B,UAAYitF,uBAAuBj1H,EAAGN,EAAGwS,KAAMkK,OACrDggE,OAAOhvE,KAAKoyD,QApCP9/D,EAAI,EAAGiQ,IAAMuC,KAAKtJ,OAAQlJ,EAAIiQ,IAAKjQ,IAAKgxE,MAAxChxE,GA4CT,OAJA08E,QADAA,OAASo5C,eAAetuH,KAAMk1E,SACdxhE,OAAO,SAAC5a,GACpB,IAAMw8B,OAASx8B,EAAEw8B,OACjB,OAAQrhB,MAAMqhB,OAAOyI,KAAO9pB,MAAMqhB,OAAO9xB,2CAUzCm1B,WAAW,IACXu8C,OADW9/D,OAAApV,KAET6M,OAAS7M,KAAK6M,SACdk+F,SAAWl+F,OAAOk+F,SAClBugB,eAAiBtrH,KAAKuxH,gBACtBzwF,UAAYj0B,OAAOi0B,UACnBmjE,mBAAqBn4B,sBAAsBj/D,OAAOkvF,aAAc/7F,KAAK04B,KAAM7rB,OAAOmvF,aAClFpE,KAAO53F,KAAK43F,OAoBlB,OAnB2B7P,6BAAcpvD,WAEtBilD,QAAnB,GAAAliE,OAA8BuoF,mBAAmBlhG,KAAK,KAAtD,KAAA2Y,OAA8DolB,YAAa,GAC3EmoD,+BACIj+E,KAAMsgH,eACNz2F,OAAQ,IACRoiD,SAAU,IACVt+C,oBACAwO,KAAM,SAAAA,KAACipC,QAASzwB,MAAOnnD,GACnB,IAAMi4B,KAAOkvB,MAAMlvB,OACnBykD,OAAS9/D,OAAKgiH,gBAAgBhnD,QAAS26B,SAAUnT,KAAMp/F,GACvDuwF,yBAAUt4D,MACNitG,cvD/Hc,WuDiIlBlB,cAAS/rG,KAAMykD,QACXp0C,UAAWmjE,mBAAmB,IAC/B7uF,OAAK+iG,cAAc14E,eAGvBz/B,6DAjHP,OAAOm7F,kFAIP,MAAO,wBC2EAwiC,eAtCgC,SAAdA,YAAe/7G,QAAW,IAC/C25E,MAAoD35E,OAApD25E,MAAO5iE,UAA6C/W,OAA7C+W,UAAWu8C,OAAkCtzD,OAAlCszD,OAAQhiB,WAA0BtxC,OAA1BsxC,WAAYpyB,UAAclf,OAAdkf,UACtCykD,SAA+BryB,WAA/BqyB,SAAU6M,OAAqBl/B,WAArBk/B,OAAQ+M,SAAajsC,WAAbisC,SACpBzrE,MAAQq0D,6BAAcpvD,WAG5B,OADAjF,MAAMq/B,KAAK,QAASjyB,WACbknD,YAAYt0D,MAAO,IAAKwhD,OAAQ,MACnCpiB,MAAO,SAAAA,MAACnT,MAAO7mD,GAAM,IACTg6D,MAAUh6D,EAAVg6D,MACRnT,MAAMoT,KAAK,YAAX,aAAAr3C,OAAqCo3C,MAAM/0B,EAA3C,KAAAriB,OAAgDo3C,MAAMtvD,EAAtD,OAEJ8xB,OAAQ,SAAAA,OAACqqB,MAAO7mD,IAvDJ,SAAd8kI,YAAwB9kI,EAAG+kI,cAAc,IACnCl8B,MAAwB7oG,EAAxB6oG,MAAOrnE,KAAiBxhC,EAAjBwhC,KAAMhF,OAAWx8B,EAAXw8B,OAErB,GAAIqsE,iBAAiB1W,QACjB0W,MAAMtW,KAAK,SAACr7D,KACRl3B,EAAE6oG,MAAQ3xE,IACV4tG,YAAY9kI,EAAG+kI,qBAEhB,GAAIl8B,iBAAiBm8B,QAAS,CACjC,IAAIC,SAAWp8B,MAAMnoB,WAAU,GAE/B,GAAwC,QAApCukD,SAASC,SAASv8H,cAAyB,CAC3C,IAAMw8H,IAAMF,SAASE,KAAOF,SAASG,MACrCH,SAAW7lG,SAASuM,gBAAgB,6BAA8B,UACzDd,aAAa,OAAQs6F,KAElC,IAAME,aAAep2C,6BAAcg2C,UACT,SAAtBA,SAASC,UAA6C,UAAtBD,SAASC,SACzCG,aAAaprE,KAAK,YAAlB,SAAAr3C,OAAwC4e,KAAO,IAA/C,OAEA6jG,aAAaprE,KAAK,SAAUz4B,MAC5B6jG,aAAaprE,KAAK,QAASz4B,OAE/B6jG,aAAaprE,KAAK,KAAMz4B,KAAO,GAC/B6jG,aAAaprE,KAAK,KAAMz4B,KAAO,GAC/B0tD,YAAY61C,aAAc,kBAAME,WAAW,SACxC,GAAqB,iBAAVp8B,MAAoB,CAClC,IAAIy8B,QAIAA,QA5CM,SAAZC,UAAal0H,KACf,SAAI,0CAA0CrM,KAAKqM,MAAQ,UAAUrM,KAAKqM,MAAQA,IAAIzI,OAAS,GAwCvF28H,CAAU18B,OACAA,MAEAzwB,uBAAUywB,OAAOrnE,KAAKA,KAAtB42C,CAA4B57C,QAE1C0yD,YAAY61C,aAAc,OAAQ,SAAA7yH,MAAI,OAAKA,QAAO+nD,KAAK,IAAKqrE,cAE5DtlI,EAAE6oG,MAAQ,SACVi8B,YAAY9kI,EAAG+kI,cAoBXD,CAAY9kI,EAAG6mD,OADG,IAEVrqB,OAAkBx8B,EAAlBw8B,OAAQqE,MAAU7gC,EAAV6gC,MAChB2yC,eAAe3yC,MAAO,SAAA5/B,KAAG,OAAI4lD,MAAMhmB,MAAM5/B,IAAK4/B,MAAM5/B,QACpD4lD,MAAMoT,KAAK,QAASjyB,WACpB6e,MAAMi+B,QAAQ9kF,EAAEgoC,WAAW,GACtBq+D,WACDx/C,MAAQA,MAAMuT,aACTqyB,SAASryB,WAAWqyB,UACpBnY,GAAG,MAAOmuB,MAAMwW,8BAEzBpyD,MAAMoT,KAAK,YAAX,aAAAr3C,OAAqC4Z,OAAOyI,EAA5C,KAAAriB,OAAiD4Z,OAAO9xB,EAAxD,OAEJovD,KAAM,SAAAA,KAAC0rE,WACEn/B,SAODm/B,UAAUl3F,SANVk3F,UAAUprE,aAAasyB,KAAKza,QAAQqnB,SACnC7M,SAASA,UACTnY,GAAG,MAAO,kBAAMkxD,UAAUl3F,WAC1BzN,MAAM,eAAgB,GACtBA,MAAM,iBAAkB,KAKlC/X,OAAOumE,QCzGDgT,oCACTY,aAAc,cACdj7D,UAAW,GACXk7D,YzDLuB,OyDMvBuiC,cAAe,SACfzkC,aACI+P,YACIvuG,KAAM,OACNwxH,WAAY,EAAG,GAAI,GAAI,KAE3BpjB,OACIpuG,KAAM,OACNwxH,WAAY,EAAG,EAAG,GAAK,KAE3BljB,QACItuG,KAAM,OACNwxH,WAAY,EAAG,EAAG,GAAK,MAI/BsC,aAAc,GACd9hB,sBAAuB,GACvB3xD,WACIrgD,KAAM,YAEV43D,YACIk/B,OAAQ,QACR7M,SAAU,KAEdwlB,UACIzwE,MACI7gC,MAAO,IAEX26C,SACAutD,OACIloG,MAAO,UAEXskC,KACAv6B,KACA+pG,eACI9zG,MAAO,IAEX+kI,aACI/kI,MAAO,KAGfglI,QAAS,SAAU,QAAS,UAAW,SAAU,OAAQ,MAAO,YAChEC,OAAQ,GAAI,GAAI,GAAI,GAAI,GAAI,mrEChBXC,sCAOjB,SAAAA,aAAsB,IAAAx4B,iBAAAjxF,0JAAA0pH,CAAA5+H,KAAA2+H,YAAA,QAAAr2D,KAAAljE,UAAA1D,OAANsF,KAAM,IAAA6B,MAAAy/D,MAAAC,KAAA,EAAAA,KAAAD,KAAAC,OAANvhE,KAAMuhE,MAAAnjE,UAAAmjE,MAAA,OAClBrzD,MAAA2pH,gCAAA7+H,MAAAmmG,iBAAA24B,qBAAAH,aAAAhmI,KAAA4O,MAAA4+F,kBAAAnmG,MAAA0b,OAAS1U,SACJylE,SAAW,IAAIF,qBACpBr3D,MAAK45G,WAAa/5C,OAAOlsC,OAHP3zB,wXAPcq9G,iSAoBhC,MAAO,4DAoDMvnH,KAAM+/F,SAAUnT,MA2B7B,IA3BgD,IAAAxiF,OAAApV,KAAb6M,OAAazH,UAAA1D,OAAA,QAAA6L,IAAAnI,UAAA,GAAAA,UAAA,MAC5C8vE,UAEM6pD,aAKNh0B,SALAzwE,KACO0kG,cAIPj0B,SAJApJ,MACO8qB,cAGP1hB,SAHA32D,MACArW,EAEAgtE,SAFAhtE,EACAv6B,EACAunG,SADAvnG,EAEEktH,UAAYqO,aAAaxzH,MACzB0zH,UAAYF,aAAatlI,MACzBg3H,WAAauO,cAAczzH,MAC3BysF,OAASj6D,EAAExyB,MACX2sF,OAAS10F,EAAE+H,MACHq2F,SAA+BhK,KAArCt9D,KAAuBonE,UAAc9J,KAArB+J,MAClBpjF,aAAeve,KAAKgL,OAAOwT,kBAC3B63G,OAAS93G,aAAay5E,SAAWz5E,aAAay5E,QAAQr5E,IAAIrjB,OAASy5F,yBAAU11F,UAC7Ei3H,OAAS/3G,aAAa25E,SAAW35E,aAAa25E,QAAQv5E,IAAIrjB,OAASy5F,yBAAU11F,UAC7EtF,IAAMs8H,OAASlpB,SAAS7tD,EAAKg3E,OAASnpB,SAASlpG,EAAI,KACnDusH,WAAa/D,eAAiBA,cAAclhH,MAC5CmhH,gBAAkBnuG,aAAaiyG,aAAejyG,aAAaiyG,YAAYvuH,MACvEq9F,YAAct/F,KAAKs/F,cACnB4/B,gBAAkB3gH,aAAakyG,aAAelyG,aAAakyG,YAAYxuH,MACvEk9H,eAAiB5gH,aAAamyG,YAAcnyG,aAAamyG,WAAWzuH,MACpEw/F,UAAY7J,KAAKxjD,MAxByBgrF,eAyBbvyH,OAAO81C,OAA/B08E,QAzBqCD,eAyBxCrhG,EAAeuhG,QAzByBF,eAyB5B57H,EAzB4BgmE,MAAA,SAAAA,MA2BvChxE,EAAOiQ,KACZ,IAAM3P,EAAIkS,KAAKxS,GACT4iB,IAAMtiB,EAAE2uE,MACRntC,KAAO2kG,qBAAqB1pH,SAAW0pH,UAAUnmI,EAAGN,GAAKopG,SAASM,QAAQ9mF,IAAI+jH,iBAC9Ex9B,MAAQD,UAAUO,SAAS7mF,IAAI8jH,kBA/BOvR,MAAA4R,qBAiC1BpyB,SAAS7tD,EAAG6tD,SAASlpG,GAAGgE,IAAI,SAAC3M,MAC3C,IAAM7B,MAAoB,OAAZX,EAAEwC,WAAiBiS,EAAYzU,EAAEwC,MACzCwc,QAAUxc,OAAS6xG,SAAS7tD,EAAIggD,YAAY7jE,MAAQ6jE,YAAY5jE,OACtE,OAAQqvE,SAASzvG,MAAMiQ,MAAsBqsF,KAAKt8F,MAAMoiG,cAAcjkG,OAAvCqe,QAAU,IApCD,GAiCvCy+G,IAjCuC5I,MAAA,GAiClC6I,IAjCkC7I,MAAA,GAuC5C4I,KAAO8I,QACP7I,KAAO8I,QAxCqC,IAAA7I,eA0ChBjK,eAAgBx6G,MAAOlZ,EAAGmJ,MAAOzJ,IACvDi0H,4BAAehrB,oBAAWirB,kCADxBt4E,MA1CoCqiF,eA0CpCriF,MAAOu4E,SA1C6B8J,eA0C7B9J,SAGThzF,OACF0kB,KAAMjK,MACNsiF,OAAQtiF,OAGZ,IAAKngC,MAAMsiH,OAAStiH,MAAMuiH,KAAM,CAC5B,IAAMl+D,OACFxF,OACI/0B,EAAGw4F,IACH/yH,EAAGgzH,KAEPlhG,QACIyI,EAAGw4F,IACH/yH,EAAGgzH,KAEP70B,YACArnE,KAAMz2B,KAAKooB,IAAIqO,MACfpd,MACI6vG,cACAC,cAAeL,SACfY,mBAEJ5zF,YACA8tC,MAAOrsD,IACPuqE,IAAK7sF,EAAE6sF,IACPlhE,OAAQ3rB,EAAE2uE,MACVkvD,MAAO79H,EAAE6sF,KAEbrtB,MAAMx3B,UAAYitF,uBAAuBj1H,EAAGN,EAAGwS,KAAMoK,QACrD8/D,OAAOhvE,KAAKoyD,OACZljD,OAAKwhH,WAAW99H,EAAEiB,KAAMu+D,SAhDvB9/D,EAAI,EAAGiQ,IAAMuC,KAAKtJ,OAAQlJ,EAAIiQ,IAAKjQ,IAAKgxE,MAAxChxE,GAoDT,OADA08E,OAASo5C,eAAetuH,KAAMk1E,8CAU1Bv8C,WAAW,IAEXk+F,gBAFWn/G,OAAA1X,KACXw/H,QAAU,EAER3yH,OAAS7M,KAAK6M,SACd/G,KAAO9F,KAAKqxH,iBAAiBppH,IAAI,SAAAnP,GAAC,OAAIA,EAAEiB,MACtCm5D,WAAqDrmD,OAArDqmD,WAAYpyB,UAAyCj0B,OAAzCi0B,UAAWi7D,aAA8BlvF,OAA9BkvF,aAAcC,YAAgBnvF,OAAhBmvF,YACvCsvB,eAAiBtrH,KAAKuxH,gBACtBuF,mBAAqB/uC,6BAAcpvD,WACnCsrE,mBAAqBn4B,sBAAsBiwB,aAAc/7F,KAAK04B,KAAMsjE,aAC1Eh8F,KAAK6yH,WACL7yH,KAAKu0H,aAELuC,mBAAmBl5C,QAAQqmB,mBAAmBlhG,KAAK,MAAM,GAAM66E,QAAQ98C,WAAW,GAElF9gC,KAAK6yH,QAAU7yH,KAAKy/H,mBAAmBnU,eAAgBxlH,MACvD,IAAM6F,OAAS3L,KAAKgL,OAAO2hB,YAiB3B,OAhBAq7D,YAAYrvD,UAAW,IAAK34B,KAAK6yH,QAAS,MACtCv9F,OAAQ,SAAAA,OAACqqB,MAAOu1B,QACZsqD,QAAU37H,KAAKwQ,IAAL9M,MAAA1D,MAAS27H,SAAL9jH,OAAAgkH,wBAAiBxqD,OAAOjtE,IAAI,SAAAnP,GAAC,OAAIA,EAAEwhC,UACjDu8F,gBAAe,GAAAn7G,OAAMuoF,mBAAmB,IACxCvsF,OAAKkO,YAAY+5G,QAAjBjoH,EACI6jF,MAAO7jF,OACPihB,UAAWgnB,MAAMlvB,OACjBykD,cACAp0C,UAAW+1F,gBACX3jE,sBACAi1B,MAAO,SAAAA,MAAAv+E,GAAC,OlBuQH,SAAZg2H,UAAan7G,OAAQ9Y,QAAT,OAAoB8Y,OAAO/Q,OAAO,SAACxS,IAAK1I,GAAN,OAAYmT,OAAOnT,IAC1EmT,OAAOnT,GAAG8C,OAASy5F,yBAAU11F,YAAW0D,OkBxQZ68H,CAAUh2H,EAAE6a,OAAQ9Y,aAGzC,SAAAX,MAAI,OAAIA,KAAK,GAAG26E,MACnB3lF,KAAK6/H,SAA0C,EAA/Bh8H,KAAK6Q,KAAK8qH,QAAU37H,KAAK4xC,IACzCy4E,oBAAoBluH,KAAKysE,SAAUzsE,KAAK6yH,SACjC7yH,mEAGSsrH,eAAgBxlH,MAAM,IAAAuvB,OAAAr1B,KAChC+qG,SAAW/qG,KAAK6M,SAASk+F,SACzBnT,KAAO53F,KAAK43F,OAFoBkoC,qBAAAP,oBAGA9Q,2BAAmBzuH,KAAM8F,MAHzB,GAG/Bi6H,aAH+BD,qBAAA,GAGjBE,cAHiBF,qBAAA,GAIhCG,cAAgBF,aAAa9Q,iBAC7BiR,cAAgBF,cAAc/Q,iBACpC,OAAO3D,eAAerjH,IAAI,SAACmoE,QAAS53E,GAChC,IAAM2nI,gBAAkB9qG,OAAK+qG,qBAAqBH,cAAcznI,GAAI0nI,cAAc1nI,GAAIunI,aAAahR,KAC/FiR,cAAcjR,MAClB,OAAO15F,OAAK+hG,gBAAgBhnD,QAAS26B,SAAUnT,KAAMuoC,mBACtDzsH,OAAO,SAAA5a,GAAC,OAAIA,EAAE4I,2EAGC29H,QAASC,QAASe,UAAWC,YAC/C,OACI39E,QACI5kB,GAAIshG,SAAW,GAAKgB,UAAY,EAChC78H,GAAI87H,SAAW,GAAKgB,WAAa,GAErCvR,MACIhxF,EAAGsiG,UACH78H,EAAG88H,qEAWEviG,EAAGv6B,GAChB,IAAM+8H,cAAgB18H,KAAKwQ,IAAIrU,KAAK6/H,SAAU7/H,KAAK6M,SAASygG,uBAE5D,IAAKttG,KAAKgL,OACN,OAAO,KAGX,IAAMstD,MAAQt4D,KAAKysE,SAASvhD,KAAK6S,EAAGv6B,EAAG+8H,eACjC13G,WAAayvC,OAASA,MAAMttD,KAAKA,KAAKsqB,OACtC4xC,OAAS5O,MAAQz0D,KAAK6Q,KAAK4jD,MAAMttD,KAAKA,KAAKsvB,KAAOz2B,KAAK4xC,IAAM,EAEnE,GAAI6iB,MAAO,KAAAm/D,iBACgBn/D,MAAMttD,KAAKA,KAA1By8D,MADDgwD,iBACChwD,MAAOke,IADR8xC,iBACQ9xC,IAEf,OACIjtD,GAFgB14B,KAAK03H,uBAAuBjwD,MAAOke,KAGnD98D,aACIkV,EAAGlV,WAAWkV,EACdv6B,EAAGqlB,WAAWrlB,EACdi4B,MAAOyrC,OACPxrC,OAAQwrC,SAEZywD,QAAS33H,KAAK04B,MAGtB,OAAO,6DAhOP,OAAOyiE,uFAGW1tB,KAAMooD,UACxB,IAAMhpH,OAAS0lH,qBAAUH,cAAc3kD,KAAMooD,UACvC9qB,SAAWl+F,OAAOk+F,SAClBpvD,UAAY9uC,OAAO8uC,UACnB60E,WAAazlB,SAAS32D,OAAS22D,SAAS32D,MAAM7oC,MAKpD,OAHIilH,aACA70E,UAAU/tB,QAAU4iG,YAEjB3jH,uDAWP,MAAO,gDAWP,OAAO8wH,iCCnDyB6C,mBAAY,SAAZA,UAAa5+G,QAAW,IACpD25E,MAAoC35E,OAApC25E,MAAOrmB,OAA6BtzD,OAA7BszD,OAAQv8C,UAAqB/W,OAArB+W,UAAWwvD,MAAUvmE,OAAVumE,MAKlC,OAAOH,YAAYrvD,UAAW,OAAQu8C,OAAQ,MAH1CpiB,MADc,SAAAA,MACP3qC,KAAMrvB,IAdF,SAAb2nI,WAAct4G,KAAMrvB,GACtB,IAAM05D,UAAYrqC,KACZ2qC,MAAQh6D,EAAEg6D,UAChB55D,OAAO+b,QAAQ69C,OAAOhqD,QAAQ,SAAAiqD,MAAI,OAAM9+C,MAAM8+C,KAAK,KAAOP,UAAUO,KAAKA,KAAK,GAAIA,KAAK,MAWjE0tE,CAAWt4G,KAAMrvB,IACnCw8B,OAFc,SAAAA,OAENnN,KAAMrvB,EAAGN,IAtCF,SAAjBkoI,eAAkBnlC,MAAOpzE,KAAMnW,MAAO/P,MAAOq6B,SAAY,IACnD42B,WAAe52B,QAAf42B,WACAqyB,SAA+BryB,WAA/BqyB,SAAU4Z,SAAqBjsC,WAArBisC,SAAU/M,OAAWl/B,WAAXk/B,OACtB5/B,UAAYrqC,KAEZw4G,cAAgBxhC,SAAW3sC,UAC7BA,UAAUU,aACTqyB,SAASA,UACTC,KAAKza,QAAQqnB,SACbhlB,GAAG,MAAOmuB,MAAMwW,6BACfz8E,OAAStjB,MAAMsjB,QAAUtjB,MACzBq8G,YAAcr8G,MAAM2nB,UAC1B3nB,MAAM8uB,WAAa0xB,UAAUorB,QAAQ5rE,MAAM8uB,WAAW,GACtD5nC,OAAO+b,QAAQqgB,QAAQxsB,QAAQ,SAAAiqD,MAAI,OAAM9+C,MAAM8+C,KAAK,KAAO4tE,cAAc5tE,KAAKA,KAAK,GAAIA,KAAK,MAC5F75D,OAAO+b,QAAQo5G,aAAavlH,QAAQ,SAAAm7B,UAAQ,OAAIuuB,UAAU74B,MAAMsK,SAAS,GAAIA,SAAS,MAwB5Dy8F,CAAenlC,MAAOpzE,KAAMrvB,EAAGN,EAAGopB,UAEGumE,QChDtDgT,kCACTa,Y5DHuB,O4DIvBD,aAAc,YACdj7D,UAAW,GACXg5D,aACI+P,YACIvuG,KAAM,OACNwxH,WAAY,EAAG,GAAI,GAAI,KAE3BpjB,OACIpuG,KAAM,OACNwxH,WAAY,EAAG,EAAG,GAAK,KAE3BljB,QACItuG,KAAM,OACNwxH,WAAY,EAAG,EAAG,GAAK,MAG/BnxE,WACIrgD,KAAM,SAEV43D,YACIk/B,OAAQ,QACR7M,SAAU,KAEd6pC,aAAc,GACdrkB,UACI32D,SACArW,KACAv6B,KACA+9C,MACA+S,OAEJwkE,QACIjvB,WACI/oE,UAAS,GAAAplB,O5DrCM,O4DqCN,yBAEbq9G,SACIj4F,UAAS,GAAAplB,O5DxCM,O4DwCN,uBAEbs9G,UACIl4F,UAAS,GAAAplB,O5D3CM,O4D2CN,0BC9BfklH,sDAAoB,SAApBA,kBAAqBtlI,KAAMulI,SAAUh0H,OAAQ7B,MAC/C,IAWIm+E,IAXE23C,UAAqB,MAATxlI,KAAe,QAAU,SADag5B,MAE7BznB,OAAM,GAAA6O,OAAIpgB,KAAJ,cAAsBulI,SAAQ,GAAAnlH,OAAIpgB,KAAJ,UAAxD+tE,UAFiD/0C,KAAA,GAEtCs9B,KAFsCt9B,KAAA,GAIpDu6F,cAIAhiH,OAJAgiH,cACAkQ,aAGAlyH,OAHAkyH,aACAgC,WAEAl0H,OAFAk0H,WACAzhC,YACAzyF,OADAyyF,YAGE2/B,UAAYF,aAAatlI,MAC3Bq5D,MAAQ,EAER0jB,MAAQ,EACRwqD,WAAa,EACjB,QAAkBzzH,IAAd87D,UACA,GAAIx8D,OAAM,GAAA6O,OAAIpgB,KAAJ,WAAmB,CACzB,IAEI6Y,IACAE,IAHE4sH,OAASj2H,KAAK1P,MACd4lI,OAASl2H,KAAI,GAAA0Q,OAAIpgB,KAAJ,MAGnB,GAAe,OAAX2lI,QAA8B,OAAXC,OACnB,OACIF,gBAAYzzH,EACZulD,WAAOvlD,EACP47E,SAAK57E,EACLipE,WAAOjpE,GAEJ87D,YAAcovB,8BAAev5F,YAAcmqE,YAAcE,gCAAiBzqE,UACjFqV,IAAMtQ,KAAKsQ,IAAI8sH,OAAQC,QACvB7sH,IAAMxQ,KAAKwQ,IAAI4sH,OAAQC,UAEvB/sH,IAAM8sH,OACN5sH,IAAM6sH,QAEV,IAAMjyB,OAAkB,MAAT3zG,MAAgB6Y,IAAKE,MAAQA,IAAKF,KACjDg1E,IAAMv3B,KAAK8rC,cAAcuR,OAAO,IAAMr9C,KAAK+rC,eAAiB,EAC5DnnB,MAAQ3yE,KAAKooB,IAAI2lC,KAAK8rC,cAAcuR,OAAO,IAAM9lB,KAAOv3B,KAAK+rC,eAAiB,EAE9E7qC,MAAQq2B,IACR63C,WAAa,OACV,GAAI33D,YAAcE,gCAAiB1qE,aAAewqE,YAAcE,gCAAiBzqE,SAAU,CAK9F,GAJAqqF,IAAMv3B,KAAK8rC,cAAc1yF,KAAK1P,QACzBylI,WAAoB,MAATzlI,KAAe,iBAAmB,oBAAsB,GAExEk7E,MAAQuqD,WAAoB,MAATzlI,KAAe,WAAa,kBAC7BiS,IAAd0xH,UAAyB,CACzB,IAAMkC,OAASlC,UAAYzoD,MAC3BA,OAAS2qD,OACTh4C,KAAOg4C,OAAS,EAEpBruE,MAAQq2B,IACR63C,WAAaxqD,UACV,CACH,IAAM4qD,QAAUxvE,KAAK8rC,cAAc,GAC7B2jC,SAAWzvE,KAAK8rC,cAAc1yF,KAAK1P,OACnCgmI,UAAY1vE,KAAK8rC,cAAc1yF,KAAI,GAAA0Q,OAAIpgB,KAAJ,OAEzC0lI,WAAa,EACA,MAAT1lI,MACA6tF,IAAMn+E,KAAK1P,MAAQ,GAAKuzH,gBAAkBhiB,MAAQw0B,SAAWD,QAC7D5qD,MAAQ3yE,KAAKooB,IAAIk9D,KAAO0lC,gBAAkBhiB,MAAQy0B,UAAat2H,KAAK1P,OAAS,EAAI+lI,SAAWD,YAE5Fj4C,IAAM0lC,gBAAkBhiB,OAAS7hG,KAAK1P,OAAS,EAAI+lI,SAAWD,QAC9D5qD,MAAQ3yE,KAAKooB,IAAIk9D,KAAO0lC,gBAAkBhiB,MAAQy0B,UAAat2H,KAAK1P,OAAS,EAAI8lI,QAAUC,YAE/FvuE,MAAQsuE,aAGZj4C,IAAM,EACN3S,MAAQ8oB,YAAYwhC,WAGxB,OACIE,sBACAluE,YACAq2B,QACA3S,eAYF+qD,kBAAoB,SAApBA,kBAAqBv2H,KAAM6B,OAAQ+qF,MACrC,IAAMipC,UACFhpC,MAAOD,KAAK75D,EACZ+5D,MAAOF,KAAKp0F,GAH8Bg+H,mBAU1CZ,6BAAkB,IAAKC,SAAUh0H,OAAQ7B,MAJ7By2H,WAN8BD,mBAM1CR,WACOU,OAPmCF,mBAO1C1uE,MACK6uE,KARqCH,mBAQ1Cr4C,IACO1tD,MATmC+lG,mBAS1ChrD,MAT0CorD,oBAiB1ChB,6BAAkB,IAAKC,SAAUh0H,OAAQ7B,MAJ7B62H,YAb8BD,oBAa1CZ,WAKJ,OACIluE,OACI/0B,EAAG2jG,OACHl+H,EArBsCo+H,oBAc1C9uE,MAQIr3B,MAAOgmG,WACP/lG,OAAQmmG,aAEZvsG,QACIyI,EAAG4jG,KACHn+H,EA3BsCo+H,oBAe1Cz4C,IAaI1tD,YACAC,OA7BsCkmG,oBAgB1CprD,smFCpGR,IAAMp3E,QAAU21F,yBAAU31F,QACpB41E,cAAYD,OAAOlsC,KAaJi5F,kCAIjB,SAAAA,WAAwB,IAAA37B,iBAAAjxF,wJAAA6sH,CAAA/hI,KAAA8hI,UAAA,QAAAx5D,KAAAljE,UAAA1D,OAARkgB,OAAQ,IAAA/Y,MAAAy/D,MAAAC,KAAA,EAAAA,KAAAD,KAAAC,OAAR3mD,OAAQ2mD,MAAAnjE,UAAAmjE,MAAA,OACpBrzD,MAAA8sH,8BAAAhiI,MAAAmmG,iBAAA87B,mBAAAH,WAAAnpI,KAAA4O,MAAA4+F,kBAAAnmG,MAAA0b,OAASkG,WACJktG,WAAa95C,gBAClB9/D,MAAKgtH,cACDnkG,EAAG,EACHv6B,EAAG,GAEP0R,MAAKitH,WACDpkG,EAAG,EACHv6B,EAAG,GAEP0R,MAAKq/G,aAXer/G,kXAJUq9G,yRAyB9B,MAAO,+EAmDcvnH,KAAM6oH,iBAAkBt1G,cAC7C,IAAMzH,OAASsrH,QAAAH,mBAAAH,SAAAxnI,WAAA,0BAAA0F,MAAArH,KAAAqH,KAA8BgL,KAAM6oH,iBAAkBt1G,cAOrE,OANC,IAAK,KAAKzV,QAAQ,SAAChQ,GACZ+6H,iBAAgB,GAAAn4G,OAAI5iB,EAAJ,gBAAsBsG,SAAW0X,OAAOhe,KACxD+6H,iBAAgB,GAAAn4G,OAAI5iB,EAAJ,YAAkBge,OAAOhe,GAAKge,OAAOhe,GAAGoa,KAAK,SAACtY,EAAGwI,GAAJ,OAAUxI,EAAIwI,IACtE0T,OAAOhe,GAAG,GAAK+K,KAAKsQ,IAAI2C,OAAOhe,GAAG,GAAI,MAG5Cge,+DAWM9L,KAAM+1H,YACnB,ODgB2B,SAAtBsB,oBAAuB/lG,QAAStxB,KAAM+1H,YAsB/C,IArBA,IAAI7rD,UACE61B,SAAWzuE,QAAQzvB,SAASk+F,SAC5BnT,KAAOt7D,QAAQs7D,OACf6J,UAAY7J,KAAKxjD,MACjB71B,aAAe+d,QAAQtxB,OAAOwT,kBAC9BiuG,cAAgB1hB,SAAS32D,MACzBo8E,WAAa/D,cAAclhH,MAC3BwzH,aAAeh0B,SAASzwE,SARgCo1F,sBActDpzF,QAAQsyF,oBAJR0B,QAVsDZ,sBAUtDY,QACAC,QAXsDb,sBAWtDa,QACAM,cAZsDnB,sBAYtDmB,cACAC,cAbsDpB,sBAatDoB,cAEFxxB,YAAchjE,QAAQgjE,cACtB+2B,OAASxF,gBAAkBtnD,gCAAiB1qE,aAAegyH,gBAAkBtnD,gCAAiBzqE,SAC9Fw3H,OAASxF,gBAAkBvnD,gCAAiB1qE,aAAeiyH,gBAAkBvnD,gCAAiBzqE,SAC9F/E,IAAMs8H,OAAS,IAAOC,OAAS,IAAM,KACrCzH,cAAgBvyF,QAAQuyF,gBACxBnC,gBAAkB8D,YAAcjyG,aAAaiyG,aAAejyG,aAAaiyG,YAAYvuH,MAElFzJ,EAAI,EAAGiQ,IAAMuC,KAAKtJ,OAAQlJ,EAAIiQ,IAAKjQ,IAAK,CAC7C,IAAMM,EAAIkS,KAAKxS,GACTmhC,SACAzc,QACA2L,WAAa04G,kBAAkBzoI,GACjCq/F,WAAY04B,cACZz4B,WAAY04B,cACZR,gBACAC,gBACA1B,4BACAvvB,wBACAyhC,sBACAhC,2BACDnnC,MAb0C6+B,eAejBjK,eAAgBx6G,MAAOlZ,EAAGmJ,MAAOzJ,IACvDi0H,4BAAehrB,oBAAWirB,kCADxBt4E,MAfqCqiF,eAerCriF,MAAOu4E,SAf8B8J,eAe9B9J,SAGfhzF,MAAM0kB,KAAOjK,MACbl3B,KAAK6vG,cACL7vG,KAAK8vG,cAAgBL,SACrBzvG,KAAKqwG,kBAEL,IAAMj4F,OAASzM,WAAWyM,OAE1B,IAAKrhB,MAAMqhB,OAAOyI,KAAO9pB,MAAMqhB,OAAO9xB,SAAgB+J,IAAVzU,EAAE6sF,IAAmB,CAC7D,IAAIrtB,MAAQ,MACZA,OACIxF,MAAOjqC,WAAWiqC,MAClBx9B,cACAqE,YACA8tC,MAAO3uE,EAAE2uE,MACTke,IAAK7sF,EAAE6sF,IACPlhE,OAAQ3rB,EAAE2uE,MACVkvD,MAAO79H,EAAE6sF,IACTzoE,YAEE4jB,UAAYitF,uBAAuBj1H,EAAGN,EAAGwS,KAAMsxB,SACrD44C,OAAOhvE,KAAKoyD,OAEZh8B,QAAQs6F,WAAW99H,EAAEiB,KAAMu+D,QAKnC,OADA4c,OAASo5C,eAAehyF,QAAS44C,QClFtBmtD,CAAoBriI,KAAMgL,KAAM+1H,kDAQnCpoG,WAAW,IAAAvjB,OAAApV,KACT6M,OAAS7M,KAAK6M,SACdqmD,WAAarmD,OAAOqmD,WACpBovE,kBAAoBtiI,KAAKuxH,gBAEzBzrH,KADkB9F,KAAKqxH,iBACAppH,IAAI,SAAAnP,GAAC,OAAIA,EAAEiB,MAClCwkB,aAAeve,KAAKgL,OAAOwT,kBAC3Bo5E,KAAO53F,KAAK43F,OACZl8D,OAASk8D,KAAKp0F,GAAKo0F,KAAKp0F,EAAEmlC,QAAQpnC,QAAQ,GAC1Ck6B,MAAQm8D,KAAK75D,GAAK65D,KAAK75D,EAAE4K,QAAQpnC,QAAQ,GACzCw6F,aAAelvF,OAAOkvF,aACtBkI,mBAAqBn4B,sBAAsBiwB,aAAc/7F,KAAK04B,KAAM7rB,OAAOmvF,aAC3El7D,UAAYj0B,OAAOi0B,UACnBg2F,mBAAqB/uC,6BAAcpvD,WACnC9P,WAAa3vB,OAAOwlB,OAAOH,cAAc7K,OAAO,SAAAhZ,GAAC,OAAIA,EAAEikB,IAAIrjB,OAASy5F,yBAAU11F,YAC/E4I,IAAI,SAAAvN,GAAC,OAAIA,EAAEuH,QA+BhB,OA9BA60H,mBAAmBl5C,QAAQqmB,mBAAmBlhG,KAAK,MAAM,GACzD+zH,mBAAmBl5C,QAAQ98C,WAAW,GrHmE1B,SAAdyhG,YAAe5pG,UAAW2mE,YAAa5mE,IACzC,IAAM8pG,gBAAkBx6C,YAAY/oE,WAAO0Z,WAAY,YAAa,GAAjC,IAAAjd,OAAyCgd,KACvDsvD,YAAYw6C,gBAAiB,QAAS,IAC9CzvE,KAAK,IAAKusC,YAAYvhE,GAClBg1B,KAAK,IAAKusC,YAAYvhE,GACtBg1B,KAAK,QAASusC,YAAY7jE,OAC1Bs3B,KAAK,SAAUusC,YAAY5jE,QAC5C8mG,gBAAgBzvE,KAAK,YAArB,QAAAr3C,OAA0Cgd,GAA1C,MqHzEI6pG,CAAY5pG,WACRoF,EAAG,EACHv6B,EAAG,EACHi4B,YACAC,eAJO,MAAAhgB,OAKF1b,KAAK04B,OAEd14B,KAAK6yH,QAAU7yH,KAAKy/H,mBAAmB6C,kBAAmBx8H,MAE1DmjF,+BACIj+E,KAAMhL,KAAK6yH,QACXl6F,oBACAs+C,SAAU,IACVpiD,OAAQ,IACRsS,KAAM,SAAAA,KAAC+tC,OAAQv1B,MAAOnnD,GAClB,IAAMq+H,gBAAkB,GAAAn7G,OAAGuoF,mBAAmB,GAAtB,KAAAvoF,OAA4B5V,KAAKtN,IAAMA,GAAIiJ,cACnEk+C,MAAMhmB,MAAM,UAAW,SACvB6mG,oBACIjlC,MAAOnmF,OACPujB,UAAWgnB,MAAMlvB,OACjBykD,cACAp0C,UAAW+1F,gBACX3jE,sBACAv5B,SACAwuD,MAAO,SAAAA,MAAArvF,GAAC,OAAI+vB,WAAW5gB,IAAI,SAAAlO,KAAG,OAAIjB,EAAE2uE,MAAM1tE,OAAMgJ,KAAK,WAI1D/C,mEAWSsrH,eAAgBxlH,MAAM,IAAA4R,OAAA1X,KAAA8/H,qBAAA2C,kBACMhU,2BAAmBzuH,KAAM8F,MAD/B,GAC/B48H,gBAD+B5C,qBAAA,GACd6C,iBADc7C,qBAAA,GAEhC8C,gBAAkBF,gBAAgBzT,iBAClC4T,iBAAmBF,iBAAiB1T,iBAW1C,OAVAjvH,KAAKmiI,WACDpkG,EAAG2kG,gBAAgB1T,WAAa,EAChCxrH,EAAGm/H,iBAAiB3T,WAAa,GAErChvH,KAAKkiI,cACDnkG,EAAG2kG,gBAAgBlgG,SAAW,EAC9Bh/B,EAAGm/H,iBAAiBngG,SAAW,GAGnCxiC,KAAKu0H,aACEjJ,eAAerjH,IAAI,SAAC+C,KAAMxS,GAAP,OAAakf,OAAK0/G,gBAAgBpsH,MAEpD83H,SAAUJ,gBAAgB3T,KAC1BgU,eAAgBH,gBAAgBpqI,IAAM,EACtCwqI,UAAWL,iBAAiB5T,KAC5BkU,gBAAiBJ,iBAAiBrqI,IAAM,8DAKhD,OAAOwH,KAAKkiI,iFAIZliI,KAAKo0H,eAAiBvE,kCAA0B7vH,8DASnC+9B,EAAGv6B,GAChB,IAAKxD,KAAKgL,OACN,OAAO,KAEX,IACIvR,MACAy7E,OACAguD,gBACA1X,iBACA5/C,WACArpD,YACA4gH,WAAa,KACX/kH,UAAYpe,KAAKgL,OACjBqT,QAAUD,UAAUE,UACpBC,aAAeH,UAAUI,kBACzBo5E,KAAO53F,KAAK43F,OACZ5sF,KAAOqT,QAAQrT,KACfspH,SAAWt0H,KAAKu0H,UAjBHE,sBAuBXz0H,KAAK4uH,oBAJL52B,OAnBWy8B,sBAmBXz8B,OACAE,OApBWu8B,sBAoBXv8B,OACA24B,cArBW4D,sBAqBX5D,cACAC,cAtBW2D,sBAsBX3D,cAGJD,gBAAkBp4B,8BAAev5F,YAEjCzF,MADOm+F,KAAKp0F,EACCmmC,OAAOnmC,GACpBgoH,iBAAmBjtG,aAAa25E,QAAQj2F,MACxCihI,gBAAkBpS,gBAGlBr3H,MADOm+F,KAAK75D,EACC4L,OAAO5L,GACpBytF,iBAAmBjtG,aAAay5E,QAAQ/1F,MACxCihI,gBAAkBrS,eAGlBqS,kBAAoB35D,gCAAiB1qE,cACrCq2E,OAASo/C,SAAS76H,QAGlBypI,kBAAoB35D,gCAAiBzqE,WACrC8sE,WAAaw3D,sBAAI,IAAIvsH,IAAI7L,KAAK/C,IAAI,SAAAnP,GAAC,OAAIA,EAAE0yH,sBAEzCt2C,OAASo/C,SADT76H,MAAQkyE,gBAAgBC,WAAYnyE,SAGxC,IAAMgP,IAAMysE,QAAUA,OAAOxzE,OAC7BwzE,QAAUA,OAAOhiE,KAAK,SAACmhE,GAAIgvD,IAAL,OAAYhvD,GAAG/+C,OAAO9xB,EAAI6/H,GAAG/tG,OAAO9xB,IAC1D,IAAK,IAAIhL,EAAI,EAAGA,EAAIiQ,IAAKjQ,IAAK,CAC1B,IAAM8/D,MAAQ4c,OAAO18E,GACf88B,OAASgjC,MAAMhjC,OACrB,GAAIyI,GAAKzI,OAAOyI,GAAKA,GAAMzI,OAAOmG,MAAQnG,OAAOyI,GAAMv6B,GAAK8xB,OAAO9xB,GAAKA,GAAM8xB,OAAOoG,OAASpG,OAAO9xB,EAAI,CACrG2/H,WAAa7qE,MACb,MAEJ6qE,WAAa,KAGjB,IAAMzkH,OAASykH,YAAcA,WAAW17D,MAIxC,OAHI/oD,SACA6D,YAAcviB,KAAK03H,uBAAuBh5G,OAAQykH,WAAWx9C,MAE1Dw9C,YACHt6G,YAAas6G,WAAW7tG,QACxBoD,GAAInW,YACJo1G,QAAS33H,KAAK04B,MACdyqG,6DAIJ,OAAOnjI,KAAKmiI,4DAIZ,OAAO,oDA5OP,MAAO,4DAQP,OAAOhnC,qFAYW1tB,KAAMooD,UACxB,IAAMhpH,OAAS0lH,qBAAUH,cAAc3kD,KAAMooD,UAEvCrF,WADW3jH,OAAOk+F,SACI32D,MAAM7oC,MAC5BowC,UAAY9uC,OAAO8uC,UAKzB,OAHI60E,aACA70E,UAAU/tB,QAAU4iG,YAEjB3jH,uBC/FFsuF,mCACTY,aAAc,aACdj7D,UAAW,GACXk7D,Y/DLuB,O+DMvBlC,aACI+P,YACIvuG,KAAM,SACNwxH,WAAY,EAAG,GAAI,GAAI,KAE3BpjB,OACIpuG,KAAM,SACNwxH,WAAY,EAAG,EAAG,GAAI,KAE1BljB,QACItuG,KAAM,SACNwxH,WAAY,EAAG,EAAG,GAAI,MAG9BsC,aAAc,GACdzzE,WACIrgD,KAAM,YAEV43D,YACIk/B,OAAQ,QACR7M,SAAU,KAEdwlB,UACI32D,SACArW,KACAv6B,KACA+9C,MACA+S,MACAi5C,eACI9zG,MAAO,IAEX+kI,aACI/kI,MAAO,KAGfq/H,QACIjvB,WACI/oE,UAAS,GAAAplB,O/D3CM,O+D2CN,0BAEbq9G,SACIj4F,UAAS,GAAAplB,O/D9CM,O+D8CN,wBAEbs9G,UACIl4F,UAAS,GAAAplB,O/DjDM,O+DiDN,2BC1CqB4nH,cAAA,SAAC1hH,QAAW,IAC1CszD,OAAwCtzD,OAAxCszD,OAAQv8C,UAAgC/W,OAAhC+W,UAAWwvD,MAAqBvmE,OAArBumE,MAAOrnD,UAAclf,OAAdkf,UAC5BpN,MAAQq0D,6BAAcpvD,WACtB4N,MAAQ7S,MAAM++B,UAAU,QAAQznD,KAAKkqE,OAAQiT,OAC7Co7C,WAAah9F,MAAMusB,QAAQj+B,OAAO,QAUxC,OARAnB,MAAMq/B,KAAK,QAASjyB,WAAa,IACjCyiG,WAAWp8F,KAAK,SAAUruC,GACtB,IAAM05D,UAAYu1B,6BAAc/nF,MAC1B8yD,MAAQh6D,EAAEg6D,UAChB55D,OAAO+b,QAAQ69C,OAAOhqD,QAAQ,SAAAiqD,MAAI,OAAM9+C,MAAM8+C,KAAK,KAAOP,UAAUO,KAAKA,KAAK,GAAIA,KAAK,QAG3FxsB,MAAMqsB,OAAOxrB,SACNb,MAAM18B,MAAM05H,YACFp8F,KAAK,SAAUruC,GACZ,IAAM05D,UAAYu1B,6BAAc/nF,MAC1Bs1B,OAASx8B,EAAEw8B,OACX+4F,YAAcv1H,EAAE6gC,UAChB4nB,QAAmBh0C,IAAd+nB,OAAOisB,GAAmBjsB,OAAOisB,GAAKjsB,OAAOyI,EAClDu2B,QAAmB/mD,IAAd+nB,OAAOg/B,GAAmBh/B,OAAOg/B,GAAKh/B,OAAO9xB,EAClDmgB,KAAI,KAAAjI,OAAQ4Z,OAAOyI,EAAf,KAAAriB,OAAoB4Z,OAAO9xB,EAA3B,OAAAkY,OAAkC6lC,GAAlC,KAAA7lC,OAAwC44C,IAClDx7D,EAAEgoC,WAAa0xB,UAAUorB,QAAQ9kF,EAAEgoC,WAAW,GAC9C0xB,UAAUO,KAAK,IAAKpvC,MACpBzqB,OAAO+b,QAAQo5G,aAAavlH,QAAQ,SAAAm7B,UAAQ,OAAIuuB,UAAU74B,MAAMsK,SAAS,GAAIA,SAAS,4rCCbzFu/F,6qBAAkB7E,yRA0C/B,MAAO,+DAUM3zH,KAAM+/F,SAAUnT,MAyB7B,IAzBgD,IAAb/qF,OAAazH,UAAA1D,OAAA,QAAA6L,IAAAnI,UAAA,GAAAA,UAAA,MAC5C8vE,UAD4CmjD,eAKxC3K,sBAAc91B,MAFdC,MAHwCwgC,eAGxCxgC,MACAC,MAJwCugC,eAIxCvgC,MAEFv5E,aAAeve,KAAKgL,OAAOwT,kBANei2G,sBAcxCz0H,KAAK4uH,oBANL52B,OARwCy8B,sBAQxCz8B,OACAE,OATwCu8B,sBASxCv8B,OACAo4B,QAVwCmE,sBAUxCnE,QACAC,QAXwCkE,sBAWxClE,QACAp4B,WAZwCs8B,sBAYxCt8B,WACAC,WAbwCq8B,sBAaxCr8B,WAEFi+B,OAASl+B,aAAepD,yBAAU11F,UAClCi3H,OAASl+B,aAAerD,yBAAU11F,UAClCtF,IAAMs8H,OAASlpB,SAAS7tD,EAAKg3E,OAASnpB,SAASlpG,EAAI,KACnDwoH,cAAgB1hB,SAAS32D,MACzBo8E,WAAa/D,eAAiBA,cAAclhH,MAC5CmhH,gBAAkBnuG,aAAaiyG,aAAejyG,aAAaiyG,YAAYvuH,MACvEq9F,YAAct/F,KAAKs/F,cACnBmC,UAAY7J,KAAKxjD,MAtByBgrF,eAuBbvyH,OAAO81C,OAA/B08E,QAvBqCD,eAuBxCrhG,EAAeuhG,QAvByBF,eAuB5B57H,EAvB4BigI,aAwBjB52H,OAAOkiH,KAA3B2U,MAxBqCD,aAwBxC1lG,EAAa4lG,MAxB2BF,aAwB9BjgI,EACThL,EAAI,EAAGiQ,IAAMuC,KAAKtJ,OAAQlJ,EAAIiQ,IAAKjQ,IAAK,CAC7C,IAAI+9H,SAAG,EACHqN,UAAI,EACJrL,UAAI,EACJ/B,SAAG,EACD19H,EAAIkS,KAAKxS,GACT4iB,IAAMtiB,EAAE2uE,MACVuwB,SAEA4rC,MADArN,IAAM1+B,MAAM6F,cAAc5kG,EAAEilC,GAAKshG,SACpBqE,OAGbxrC,SAEAqgC,KAAe,QADf/B,IAAM1+B,MAAM4F,cAAc5kG,EAAE0K,GAAK87H,SACX9I,IAAMmN,MAAQ,MAGnC3rC,SACDu+B,IAAM,EACNqN,KAAOtkC,YAAY7jE,MACdxnB,MAAMuiH,OAEP+B,KADA/B,KAAOmN,MAAQ,IAKlBzrC,SACDs+B,IAAM,EACN+B,KAAOj5B,YAAY5jE,OACnBkoG,KAAOrN,KAAOmN,MAAQ,GAGtBpT,UACAsT,KAAO/rC,MAAM6F,cAAc5kG,EAAEyoD,IAAMmiF,MACnClN,KAAOmN,MAAQ,EACfpL,MAAQoL,MAAQ,GAGhBpT,UACAgI,KAAOzgC,MAAM4F,cAAc5kG,EAAEw7D,IAAMqvE,MACnCpN,KAAOmN,MAAQ,EACfE,MAAQF,MAAQ,GAEpB,IAAM/pG,SACAzc,QA5CuCu5G,eA6CjBjK,eAAgBx6G,MAAOlZ,EAAGmJ,MAAOzJ,IACvDi0H,4BAAehrB,oBAAWirB,kCADxBt4E,MA7CqCqiF,eA6CrCriF,MAAOu4E,SA7C8B8J,eA6C9B9J,SAOf,GAJAhzF,MAAM+8F,OAAStiF,MACfl3B,KAAK6vG,cACL7vG,KAAK8vG,cAAgBL,SACrBzvG,KAAKqwG,mBACAt5G,MAAMsiH,OAAStiH,MAAMuiH,KAAM,CAC5B,IAAMl+D,OACFxF,SACAx9B,QACIyI,EAAGw4F,IACH/yH,EAAGgzH,IACHj1E,GAAIqiF,KACJtvE,GAAIikE,MAER5+F,YACA8tC,MAAOrsD,IACPuqE,IAAK7sF,EAAE6sF,IACPlhE,OAAQrJ,IACRu7G,MAAO79H,EAAE6sF,IACTzoE,WAEJo7C,MAAMx3B,UAAYitF,uBAAuBj1H,EAAGN,EAAGwS,KAAMhL,MACrDk1E,OAAOhvE,KAAKoyD,OACZt4D,KAAK42H,WAAW99H,EAAEiB,KAAMu+D,QAIhC,OADA4c,OAASo5C,eAAetuH,KAAMk1E,0EAIZmqD,QAASC,QAASe,UAAWC,YAC/C,OACI39E,QACI5kB,EAAIshG,SAAW,EACf77H,EAAI87H,SAAW,GAEnBvQ,MACIhxF,EAAGsiG,UACH78H,EAAG88H,qEAxJX,OAAOnlC,kFAWP,MAAO,+CAWP,OAAO0oC,+BClDFC,uBAAa,OACbC,sBAAY,MACZC,uBAAa,OACbC,uBAAa,OACbC,wBAAc,QACdC,sBAAY,MACZC,uBAAa,OACbC,yBAAe,SACfC,uBAAa,6fCN1B,oBAqBMC,iBAAmB,SAAnBA,iBAAoBx5B,UAEtB,IAAK,IAAMhxG,OAAOgxG,SACe,iBAAlBA,SAAShxG,OAChBgxG,SAAShxG,MACLwR,MAAOw/F,SAAShxG,QC1BjByqI,kBDyCO,WAClB,IAAMC,mBACAC,YACFC,iBAAkB,SAAAA,iBAACC,KACfF,WAAWG,eAAiBD,KAEhCE,kBAAmB,SAAAA,kBAACn6B,KAAMD,UACtB,IAAIq6B,eACEC,KAAOP,gBAAgB95B,MACvBwnB,QAAUljD,kBAAmBy7B,UAGnC,GAAIs6B,KACAD,eAAiBC,KAAK/8H,IAAI,SAACg9H,cACvB,IAAMC,QAGN,OA1DS,SAAvBC,qBAAwBj2D,KAAMhlC,WAAYwgE,SAAU06B,WACtD,IAAK,IAAMrrI,OAAOmwC,WACd,GAAIhxC,OAAOqB,eAAe5B,KAAKuxC,WAAYnwC,KAAM,CAC7C,IAAIsrI,UAAI,EACJ3xC,eAAS,EACP/0E,IAAMurB,WAAWnwC,KACnBo1B,eAAexQ,MACfuwD,KAAKn1E,QACLorI,qBAAqBj2D,KAAKn1E,KAAM4kB,IAAK+rF,SAAU06B,YACzB,iBAARzmH,MAAqB0mH,KAAO1mH,IAAIpS,MAAM,OAAS84H,KAAK,KAAOD,eAEvD73H,KADlBmmF,UAAY3mB,WAAUxlE,WAAV,GAAWmjG,UAAXhvF,OAAA4pH,gCAAwBD,KAAKlqH,MAAM,EAAGkqH,KAAK3jI,cAEnDwtE,KAAKn1E,KAAO25F,WAGhBxkB,KAAKn1E,KAAO4kB,KAyCRwmH,CAAqBD,KAAMD,aAAc9S,QAASxnB,MAClD45B,iBAAiBW,KAAKn6B,UACfm6B,WAER,CACH,IAAMn6B,SAAWonB,QAAQpnB,SAEzBw5B,iBAAiBx5B,UACjBg6B,eAAiB5S,QAGrB,OAAO4S,gBAEXQ,iBAAkB,SAAAA,iBAAC76B,UAAwB,QAAApiC,KAAAljE,UAAA1D,OAAXkgB,OAAW,IAAA/Y,MAAAy/D,KAAA,EAAAA,KAAA,KAAAC,KAAA,EAAAA,KAAAD,KAAAC,OAAX3mD,OAAW2mD,KAAA,GAAAnjE,UAAAmjE,MACvC,IAAMkiC,cAAgBi6B,WAAWG,eAE3B35B,WADNR,SAAaA,oBAAoB7hG,MAAsB6hG,UAAZA,WAChBziG,IAAI,SAACgjG,UAC5B,IAAMu6B,iBAAmB/6B,cAAcQ,SAASN,MAChD,OAAO66B,iBAAiB1rI,OAAjByN,MAAAi+H,iBAA2B5jH,UAEtC,OAA4B,IAArBspF,UAAUxpG,OAAewpG,UAAU,GAAKA,WAEnDu6B,cAAe,SAAAA,cAAA96B,MAAI,OAAI+5B,WAAWG,eAAel6B,OASjD+6B,cAAe,SAAAA,cAACN,UAAW56B,WACvBi6B,gBAAgBW,WAAa56B,WAEjCm7B,oBAAqB,SAAAA,oBAACj7B,UAClB,IAAMynB,QAAUljD,kBAAmBy7B,UAEnC,OADA65B,iBAAiBpS,QAAQpnB,UAClBonB,UAGf,OAAOuS,WAvDW,+KEjCf,0BAAMkB,gBAAcC,wBAAAC,mBACtBC,uBAAyB7N,gBADH2N,wBAAAC,gBAEtBC,sBAAwB9M,cAFF4M,wBAAAC,gBAGtBC,uBAAyB9P,gBAHH4P,wBAAAC,gBAItBC,uBAAyB9I,gBAJH4I,wBAAAC,gBAKtBC,wBAA0BpH,kBALJkH,wBAAAC,gBAMtBC,uBAAyBvC,gBANHqC,wBAAAC,gBAOtBC,sBAAwBjE,cAPF+D,wBAAAC,gBAQtBC,uBAAyBxT,sBARHuT,qDCHdxmF,EAAI,IAIJr7C,EAAI,IA0EJ+hI,KAAO,OAKPC,QAAU,UAKVC,IAAM,MAKNC,IAAM,MAUNl5B,sBAAQ,QAKRC,sBAAQ,QAKRF,qBAAO,OA6BPY,eAAO,OAIPC,gBAAQ,QAiBRu4B,KAAO,OAIPC,OAAS,QAITC,OAAS,QAITC,YAAc,YAQdC,WAAa,WA4Bbz5B,iBAAS,SAITD,gBAAQ,QAoCR25B,QAAU,UAIVC,UAAY,6LChPzB,IAAAC,eAAAC,6BAAAC,yBDQsB,aCRtBD,6BAAAC,sBAEKb,SAFLY,6BAAAC,sBAGKZ,YAHLW,6BAAAC,sBAIK55B,0BAJL25B,6BAAAC,sBAKK35B,0BALL05B,6BAAAC,sBAMK75B,yBANL45B,6BAAAC,sBDuGsB,aCvGtBD,6BAAAC,sBD4GsB,aC5GtBD,6BAAAC,sBDiHyB,gBCjHzBA,2TC+BeC,6fArCP,MAAM,IAAIp3H,MAAMq/D,UAAUC,wDAY1B,MAAM,IAAIt/D,MAAMq/D,UAAUC,8DAU1B,MAAM,IAAIt/D,MAAMq/D,UAAUC,kEAW1B,MAAM,IAAIt/D,MAAMq/D,UAAUC,mUCzCb+3D,yeAQb,MAAM,IAAIr3H,MAAMq/D,UAAUC,4DAS1B,MAAM,IAAIt/D,MAAMq/D,UAAUC,qxCCyEnBg4D,kCA/EX,SAAAA,eAAuB,IAAA7gC,iBAAAjxF,kKAAA+xH,CAAAjnI,KAAAgnI,cAAA,QAAA1+D,KAAAljE,UAAA1D,OAAPwlI,MAAO,IAAAr+H,MAAAy/D,MAAAC,KAAA,EAAAA,KAAAD,KAAAC,OAAP2+D,MAAO3+D,MAAAnjE,UAAAmjE,MAAA,OACnBrzD,MAAAiyH,wCAAAnnI,MAAAmmG,iBAAAihC,6BAAAJ,eAAAruI,KAAA4O,MAAA4+F,kBAAAnmG,MAAA0b,OAASwrH,UACJG,KAAKH,OAFShyH,0YAPA6xH,gTAanB,OAAI3hI,UAAO1D,QACP1B,KAAKsnI,MAALliI,UAAA1D,QAAA,OAAA6L,EAAAnI,UAAA,GACOpF,MAEJA,KAAKsnI,0CAGH,QAAA7+D,MAAArjE,UAAA1D,OAAJ0R,GAAI,IAAAvK,MAAA4/D,OAAAC,MAAA,EAAAA,MAAAD,MAAAC,QAAJt1D,GAAIs1D,OAAAtjE,UAAAsjE,OACT,OAAIt1D,GAAG1R,QACH1B,KAAKqnI,OAAOv+H,QAAQ,SAAAhQ,GAAC,OAAIA,EAAEkS,KAAKoI,GAAG,MAC5BpT,MAEJA,KAAKynE,sDAWZ,OADaznE,KAAKqnI,OACNp/H,IAAI,SAAAs/H,QAAM,OAAIA,OAAOtvC,aAAa,yCAS9C,OAAOj4F,KAAKqnI,OAAO,GAAG/rI,mDAItB,OAAO0E,KAAKqnI,OAAOp/H,IAAI,SAAAnP,GAAC,OAAIA,EAAEwJ,aAAYS,KAAK,yDAS/C,OAAO/C,KAAKqnI,OAAO,GAAGpvH,qDAGlByG,QACJ,OAAO1e,KAAKqnI,OAAO,GAAGtnI,OAAO2e,kDAU7B,OAAO1e,KAAKqnI,OAAO,GAAGhxH,0DAUtB,OAAOrW,KAAKqnI,OAAO,GAAGG,wvCCpFTC,8CAOjB,SAAAA,eAAapnI,MAAM,IAAA6U,MAAA,+JAAAwyH,CAAA1nI,KAAAynI,iBACfvyH,MAAAyyH,qCAAA3nI,KAAA4nI,0BAAAH,gBAAA9uI,KAAAqH,QACK6nI,OAAOxnI,MAFG6U,sYAPqB6xH,6SAmBpC,OAAI3hI,UAAK1D,QACL1B,KAAK8nI,QAAL1iI,UAAA1D,QAAA,OAAA6L,EAAAnI,UAAA,GACOpF,MAEJA,KAAK8nI,4CAIZ,OAAI1iI,UAAG1D,QACH1B,KAAKynE,MAALriE,UAAA1D,QAAA,OAAA6L,EAAAnI,UAAA,GACOpF,MAEJA,KAAKynE,kDAIZ,OAAOznE,KAAK6nI,6DAUZ,MAAoB,YAAhB7nI,KAAK1E,OACa0E,KAAKgL,OAAOqE,gBAAgB7D,aAAaxL,KAAK6nI,UAC/C5vH,eACZ,SAAA/W,KAAG,OAAIA,2CAGZwd,QACJ,GAAIA,QAA6B,aAAnB1e,KAAKqW,UAA0B,CACzC,IAAMjU,UAAYpC,KAAKgL,OAAOqE,gBAAgBzD,eAAe5L,KAAK6nI,UAAUl8H,SAAS5L,OAC/EgoI,SAAW,IAAIjoI,iCAAkBsC,WACvCsc,OAASA,OAAOzW,IAAI,SAAAvN,GAAC,OAAIqtI,SAASx/H,cAAc7N,KAEpD,OAAOgkB,uDAUP,OAAQ1e,KAAK6nI,8CAWb,OADiB7nI,KAAKgL,OAAOwT,kBAAkBxe,KAAK6nI,UAAUlpH,IAC9CrjB,+CAWhB,IAAM4qB,SAAWlmB,KAAKgL,OAAOwT,kBAAkBxe,KAAK6nI,UAAUlpH,IAC9D,OAAOuH,SAAS7P,SAAW6P,SAAS5qB,qDAUpC,OADmB0E,KAAKgL,OAAOqE,gBACbhE,YAAYrL,KAAK6nI,UAAUG,qEAQzCC,SACJ,OAAOjoI,KAAK6nI,WAAaI,QAAQJ,gmCC7GzC,IAmFMK,6BAAe,SAAfA,aAAgBx3H,UAAW9H,QAC7B,IAAMy+H,QAUN,OARAz+H,QAAUA,OAAOE,QAAQ,SAACyC,OAClBA,iBAAiBy7H,eACjBK,KAAKnhI,KAAKqF,OACVA,MAAMP,KAAK0F,YAEX22H,KAAKnhI,KAAK,IAAIuhI,0BAAel8H,OAAOP,KAAK0F,cAG1C22H,MAWEc,gCAAkB,SAAlBA,gBAAmBz3H,UAAW7D,QAAW,IAAA8gH,MAAAya,+BACjBpC,KAAMC,SAASh+H,IAAI,SAACW,QACjD,IAAMy/H,iBA5CU,SAAlBC,gBAAmBz7H,OAAQvR,MAC7B,IAAMitB,aACA3f,OAASiE,OAAOvR,MAQtB,OANMsN,OAAO,aAAcC,OAGvB0f,UAAU,GAAK3f,OAAO,OACtB2f,UAAU,GAAK3f,OAAO,QAHtB2f,UAAU,GAAK3f,OAKZ2f,UAkCsB+/G,CAAgBz7H,OAAQjE,QAC3C2/H,WAAaL,6BAAax3H,UAAW23H,iBAAiB,KAK5D,OAHIA,iBAAiB,KACjBE,UAAU,GAAKL,6BAAax3H,UAAW23H,iBAAiB,KA/GhD,SAAdG,YAAeC,WAAYntI,MAC7B,IAAMiuB,qBACAC,mBACAk/G,oBACAC,uBAENF,WAAW3/H,QAAQ,SAAC8/H,UAAW3mI,OAC3B2mI,UAAU9/H,QAAQ,SAACyC,ONsCF,cMrCTA,MAAMjQ,QACNiuB,aAAatnB,OAAOiE,KAAKqF,ON+NjB,aM9NRA,MAAM8K,UAAyBqyH,YAAYzmI,OAAOiE,KAAKqF,OAASo9H,eAAe1mI,OAAOiE,KAAKqF,QAE3Fie,WAAWvnB,OAAOiE,KAAKqF,WAKnC,IAAMs9H,cAAgBr/G,WAAW,GAAG9nB,QAAU8nB,WAAW,GAAKA,WAAW,GAAG9nB,OAAS,GAGrF,IAAK+mI,WAAW,KAEZj/G,WAAW,GAAKluB,OAAS2qI,QAAUz8G,WAAW,MAE9CA,WAAW,GAAKluB,OAAS2qI,QAAUz8G,WAAW,MAE9CD,aAAa,MAEbA,aAAa,GAAKA,aAAa,GACT,IAAlBs/G,eAAqB,CACrB,IAAMC,iBAAaptH,OAAAqtH,kCAAOx/G,aAAa,IAApBw/G,kCAA2Bx/G,aAAa,KACvDjuB,OAAS2qI,SACT18G,aAAa,GAAKu/G,cAAcA,cAAcpnI,OAAS,IAAMonI,cAAcA,cAAcpnI,OAAS,OAElGonI,cAAcxhI,QAAQ,EAAG,IAEzBiiB,aAAa,MAEjBA,aAAa,GAAbw/G,kCAAsBD,eAQ9B,OAJIv/G,aAAa,GAAG7nB,QAAU6nB,aAAa,GAAG7nB,QAAUmnI,cAAgB,IACpEt/G,aAAa,MAAb7N,OAAAqtH,kCAAsBx/G,aAAa,IAAnCw/G,kCAA0Cx/G,aAAa,KACvDA,aAAa,QAGb3gB,OAAQ2gB,aAAathB,IAAI,SAAC8oB,KAAMv4B,GAAP,OAAoB,IAANA,EACnCgxB,WAAWhxB,GAAGkjB,OAAO6N,aAAa/wB,IAAM+wB,aAAa/wB,GAAGkjB,OAAO8N,WAAWhxB,MAC9EqwB,cAAUnN,OAAAqtH,kCAAMx/G,aAAa,IAAnBw/G,kCAA0Bx/G,aAAa,KACjDR,YAAQrN,OAAAqtH,kCAAMv/G,WAAW,IAAjBu/G,kCAAwBv/G,WAAW,KAC3CxS,YAAQ0E,OAAAqtH,kCAAML,YAAY,IAAlBK,kCAAyBL,YAAY,KAC7C/xH,eAAW+E,OAAAqtH,kCAAMJ,eAAe,IAArBI,kCAA4BJ,eAAe,MA6D/CH,CAAYD,UAAW3/H,UARgB,GAC3CogI,SAD2Crb,MAAA,GACjCsb,YADiCtb,MAAA,GAWtC7yG,KAKRkuH,SALApgI,OACYsgI,cAIZF,SAJAngH,WACUsgH,YAGVH,SAHAjgH,SACUqgH,kBAEVJ,SAFAhyH,SACaqyH,qBACbL,SADAryH,YAGQkD,QAKRovH,YALArgI,OACY0gI,iBAIZL,YAJApgH,WACU0gH,eAGVN,YAHAlgH,SAIJ,OACIjO,UACAouH,4BACAC,wBACAC,oCACAC,0CACAxvH,gBACA2vH,qBARAP,YAFAjyH,SAWAyyH,wBATAR,YADAtyH,YAWA2yH,kCACAC,q4BC1IaG,uiBAQb,MAAM,IAAIh6H,MAAMq/D,UAAUC,0EAS1B,MAAM,IAAIt/D,MAAMq/D,UAAUC,wEAS1B,MAAM,IAAIt/D,MAAMq/D,UAAUC,8DAI1B,OAAI5pE,UAAK1D,QACL1B,KAAK2pI,WAAa16D,eAAejvE,KAAK2pI,eAANvkI,UAAA1D,QAAA,OAAA6L,EAAAnI,UAAA,IACzBpF,MAEJA,KAAK2pI,iEAWAj5H,UAAW7D,QAEvB,OADA7M,KAAK2uH,UAAUwZ,gCAAgBz3H,UAAW7D,SACnC7M,KAAK2uH,wDAWZ,OAAIvpH,UAAO1D,QACP1B,KAAK4pI,UAALxkI,UAAA1D,QAAA,OAAA6L,EAAAnI,UAAA,GACOpF,MAEJA,KAAK4pI,0DAWZ,OAAIxkI,UAAO1D,QACP1B,KAAK6pI,YAALzkI,UAAA1D,QAAA,OAAA6L,EAAAnI,UAAA,GACOpF,MAEJA,KAAK8pI,2EAU0B,IAAvBC,SAAuB3kI,UAAA1D,OAAA,QAAA6L,IAAAnI,UAAA,GAAAA,UAAA,MAARwD,OAAQxD,UAAA1D,OAAA,EAAA0D,UAAA,QAAAmI,EAAAy8H,oBAAAC,6BACTC,8BAAkB/D,IAAKv9H,OAAOkS,KAAMivH,UAD3B,GAC/BI,UAD+BH,oBAAA,GACpBI,QADoBJ,oBAAA,GAAAK,oBAAAJ,6BAETC,8BPKf,SOLyCthI,OAAOiR,QAASkwH,UAFjC,GAE/BO,UAF+BD,oBAAA,GAEpBE,QAFoBF,oBAAA,GAYtC,OARArqI,KAAK+pI,UACD3uH,IAAKgvH,QACL3uH,OAAQ8uH,UAEZvqI,KAAKwqI,YACDpvH,IAAK+uH,UACL1uH,OAAQ6uH,YAELtqI,0BC5GFyqI,WACTvyF,OAAQqiE,6BACR1xE,KAAM2yE,mBACNxkG,SAAU+kG,mBACVzhF,KAAMqvF,mBACNv1E,MAAO2zE,qBACPpmB,MAAOuoB,sBCHEwgB,sCACTl0H,UAAWs5F,2BAAU3B,KACrBx3F,YAAam5F,2BAAU3B,KACvBn3F,SAAU84F,2BAAU1B,KACpBt2F,QAASg4F,2BAAU5B,OACnBh2F,WAAY43F,2BAAU5B,kgBCK1B,IA+Fay8B,mCAAsB,SAAtBA,oBAAuBtJ,SAAU1S,UAAWic,aAAc/J,UACnE,IAAIgK,QACIC,UAA2BjK,SAA3BiK,UAAWhwC,YAAgB+lC,SAAhB/lC,YACbiwC,eACEniI,OAAkB+lH,UAAlB/lH,OAAQ3G,MAAU0sH,UAAV1sH,MAEVgG,IADgB2iI,aAAdI,UACa,GAAAtvH,OAAI2lH,SAAJ,YAEf4J,cAAgBC,WAAW7J,SAAUp/H,OAwB3C,OAvBA2G,OAAOE,QAAQ,SAACyC,MAAOw9F,WACnB8hC,QAAUK,WAAW7J,SAAUp/H,MAAO8mG,UAAW2hC,qCAAiBn/H,MAAM8K,YACxE,IAEIu7C,KAFEu5E,WA1GQ,SAAhBC,cAAiBC,SAAU9/H,MAAOq/H,cACpC,IAAIU,gBACIrpI,MAA+BopI,SAA/BppI,MAAO8mG,UAAwBsiC,SAAxBtiC,UAAWs4B,SAAagK,SAAbhK,SAClBx0H,OAAqB+9H,aAArB/9H,OAAQw1B,SAAauoG,aAAbvoG,SACVkpG,eAAiB1+H,OAAO+qF,MAAQ/qF,OAAO+qF,KAAKypC,cAU9CiK,gBV6OY,SU9OZjpG,UAFoBg/F,WAAap9H,GADjCgqG,iCAJAL,KAIAK,iCAHAJ,QAGAI,iCAFAN,IAEAM,iCADAP,SAKkC3E,WAEhB1mE,SAEtB,IAAM8oG,YACFzyG,GAAE,GAAAhd,OAAK2lH,SAAL,KAAA3lH,OAAiBzZ,MAAjB,KAAAyZ,OAA0BqtF,WAC5BhwG,KAAMwS,MAAMjJ,WACZiJ,MAAOA,MAAMjJ,WACb2V,aAAc1M,MAAM0M,eACpB8sF,YAAaumC,gBACb76B,cAAc,EACdtS,MAAM,EACN7iG,KAAMovI,qCAAiBn/H,MAAM8K,YAKjC,OAHAk1H,eAAex5E,WAAaxmD,MAAMxL,OAAOwrI,eAAex5E,YACxDw5E,eAAez0H,OAASvL,MAAMxL,OAAOwrI,eAAez0H,QAE7Cm4D,eAAek8D,WAAYI,gBA2EXH,EAAgBnpI,YAAO8mG,oBAAWs4B,mBAAY91H,MAAOq/H,cAGnE3iI,IAAIiK,IAAI24H,WAGTj5E,KAAO3pD,IAAI5O,IAAIwxI,UACVW,eAAgB,EACrB55E,KAAK/kD,OAAOs+H,YACZA,WAAWr0H,OAAS86C,KAAK96C,OAAOq0H,WAAWr0H,QAAU86C,KAAK65E,eAL1D75E,KApEa,SAAnB85E,iBAAoBP,WAAY5/H,MAAOq/H,cAAiB,IAClD55B,aAAiB45B,aAAjB55B,aAGR,OADmB,IAAI26B,EADXlB,UAAUC,qCAAiBn/H,MAAM8K,aAClB80H,YAAcn6B,4BAiE1B06B,CAAiBP,WAAY5/H,MAAOq/H,cAO/Ch5E,KAAKkpC,YAAYA,aACjBiwC,YAAY7kI,KAAK0rD,MACjB3pD,IAAIkK,IAAI04H,QAASj5E,QAGjBm5E,YAAYrpI,SACZuG,IAAIkK,IAAI84H,cAAeF,aACvBD,UAAU/zH,IAAIk0H,gBAGXF,aA+EEa,SAAW,SAAXA,SAAY76H,IAAK7P,KAI1B,IAHA,IAAI1I,EAAI,EACJqzI,UAAY,GAEK,IAAdA,UAAmBrzI,EAAIuY,IAAIrP,QAC1BqP,IAAIvY,GAAG8J,aAAepB,IAAIoB,aAC1BupI,SAAWrzI,GAEfA,IAEJ,OAAOqzI,o1EClNUC,iyBAAyBpC,qVAoB9BkB,aAAcjc,UAAWryF,SAAS,IAAApnB,MAAAlV,KACpC+rI,gBAEFn0C,KACAgzC,aADAhzC,KAGAo0C,YAEArd,UAFAqd,YACA5kC,QACAunB,UADAvnB,QAGA6kC,UAEAD,YAFAC,UACAC,aACAF,YADAE,aAMEn0C,aACFnvF,OAAQqjI,UACRhqI,MAHAmlG,QAFC+kC,WAODvjI,OAAQsjI,aACRjqI,MANAmlG,QADCglC,cASCC,MAAQz0C,KAAK75D,MACbuuG,MAAQ10C,KAAKp0F,MAgBnB,OAdCyoI,UAAWC,cAAcpjI,QAAQ,SAACF,OAAQpQ,GACvC,IAAM8C,KAAa,IAAN9C,EAAU2tI,IXoCb,SWnCJv0E,KAAa,IAANp5D,EAAUyL,EAAIq7C,EAEvB12C,OAAOlH,OAAS,EAChBkpI,aAAavoG,SXiMT,OW/LJuoG,aAAavoG,SAAWntB,MAAK60H,WAAWzuI,MAE5CywI,aAAan6E,MAAQ+4E,mCAAoB/4E,KAAMmmC,WAAWv/F,GAAIoyI,cAC1DE,UAAWl5E,OAAStS,EAAI+sF,MAAQC,MAChCxxC,YAAax+D,QAAQhL,SAASwpE,kBAG/BixC,iEAGIpjI,MAAOivF,MAClB,IAAMy0C,MAAQz0C,KAAK75D,EACbuuG,MAAQ10C,KAAKp0F,EACnBmF,MAAMiU,MAAM2vH,OACZ,IAAK,IAAI/zI,EAAI,EAAGA,EAAI6zI,MAAM3qI,OAAQlJ,IAC9B,IAAK,IAAI0iB,EAAI,EAAGA,EAAImxH,MAAM7zI,GAAGkJ,OAAQwZ,IACjCvS,MAAMopH,OAAN,GAAAr2G,OAAgBswF,0BAAiBn7C,uBAAjC,aAAoE,GAApEn1C,OAAwEljB,EAAxE,KAA8E6zI,MAAM7zI,GAAG0iB,GAAGpE,UAGlG,IAAK,IAAIte,GAAI,EAAGA,GAAI8zI,MAAM5qI,OAAQlJ,KAC9B,IAAK,IAAI0iB,GAAI,EAAGA,GAAIoxH,MAAM9zI,IAAGkJ,OAAQwZ,KACjCvS,MAAMopH,OAAN,GAAAr2G,OAAgBswF,0BAAiBn7C,uBAAjC,cAAAn1C,OAAoEljB,GAAI,EAAxE,KAA8E8zI,MAAM9zI,IAAG0iB,IAAGpE,UAC1Fw1H,MAAM9zI,IAAG0iB,IAAGm9F,aAAc,EAIlC1vG,MAAMiU,MAAM4vH,mEAGElwG,SAUd,IATA,IAAM3zB,MAAQ2zB,QAAQ3zB,QAChB8jI,YAAc9jI,MAAMtP,IAAN,GAAAqiB,OAAaswF,0BAAiBv7C,sBAA9B,YACdn/B,SAAWgL,QAAQhL,WACnBo7G,MAAQp7G,SAASo7G,QACjBviE,SACF/jB,KACAumF,MAPmBnjE,MAAA,SAAAA,MAUdojE,KAAUnkI,KAEf,IADA,IAAMokI,SAAWH,MAAME,MAXJE,OAAA,SAAAA,OAYVC,KAAUC,MACf,IACMj1C,WADO80C,SAASE,MACEnkI,UACvBmvF,WAAWh6D,EAAGg6D,WAAWv0F,GAAGsF,QAAQ,SAACqC,SAAUk2H,UAC5Cl2H,SAASrC,QAAQ,SAACyC,MAAOw9F,WACrB,IAAMhvG,IAAOsnI,SAAD,GAAA3lH,OAAwCkxH,KAAxC,KAAAlxH,OAAgDqtF,WAAhD,IAAArtF,OAAgBqxH,MAAhBrxH,OAAuBqtF,WAC7B1+B,IAAMoiE,YAAW,GAAA/wH,OAAIkxH,MAAJlxH,OAAWqxH,OAE9B1iE,KAAmC,IAA5BnxE,OAAO4M,KAAKukE,KAAK3oE,SACxByoE,QAAQk3D,UAAUtnI,KAAOmwE,0BAAcC,QAAQk3D,WAAal3D,QAAQk3D,UAAUtnI,SAC1EswE,IAAG,GAAA3uD,OAAInQ,SAAWA,MAAM8K,iBAVnC02H,KAAO,EAAGC,KAAOH,SAASnrI,OAAQqrI,KAAOC,KAAMD,OAAQD,OAAvDC,OAFJH,KAAO,EAAGnkI,IAAMikI,MAAMhrI,OAAQkrI,KAAOnkI,IAAKmkI,OAAQpjE,MAAlDojE,MAVc,IAAAK,eA6BQ37G,SAASsmE,OAA7By0C,MA7BYY,eA6BflvG,EAAauuG,MA7BEW,eA6BLzpI,EAClBmF,MAAMiU,MAAM2vH,QACXF,MAAOC,OAAOxjI,QAAQ,SAACokI,QAAS7L,UAC7B6L,QAAQpkI,QAAQ,SAAC8uF,KAAMjlF,KACnB,IAAMwB,OACAE,OACFyC,UACAq2H,kBACAv1C,KAAKl2F,OAAS,GAAoC,WAA/Bk2F,KAAK,GAAGhyE,YAAYtqB,QAAuBs8F,KAAK,GAAG/qF,SAASugI,gBAC/Ex1C,KAAK9uF,QAAQ,SAAC8oD,KAAMp5D,GAChB,IAAMuB,IAAOsnI,SAAD,GAAA3lH,OAA+B/I,IAA/B,KAAA+I,OAAsCljB,GAAtC,IAAAkjB,OAAgB/I,KAAhB+I,OAAsBljB,GAClCse,OAASqzD,QAAQk3D,UAAUtnI,KAC3Boa,IAAI3b,GAAKse,OAAO,GAChBzC,IAAI7b,GAAKse,OAAO,KAEpBq2H,eDpFa,SAApBE,kBAAqBh5H,IAAKF,KACnC,IAAMm5H,QAAUj5H,IAAI,IAAMA,IAAI,GAAKF,IAAI,IACjCo5H,QAAUl5H,IAAI,IAAMA,IAAI,GAAKF,IAAI,IAGnCq5H,aAAc,EA0BlB,OAvBIr5H,IAAI,GAAK,GAAKA,IAAI,GAAK,GAAKA,IAAI,GAAK,GAAKE,IAAI,GAAK,IACnDm5H,aAAc,EACdr5H,IAAI,GAAK,EACTA,IAAI,GAAK,GAITA,IAAI,GAAK,GAAKA,IAAI,GAAK,GAAKA,IAAI,GAAK,GAAKE,IAAI,GAAK,IACnDm5H,aAAc,EACdn5H,IAAI,GAAK,EACTA,IAAI,GAAK,GAIRm5H,aAAeF,UAAYC,UACxBD,QAAUC,QAEVp5H,IAAI,GAAKA,IAAI,GAAKE,IAAI,GAAKA,IAAI,GAG/BF,IAAI,GAAKA,IAAI,GAAKE,IAAI,GAAKA,IAAI,MAIlCF,IAAI,GAAIE,IAAI,KACZF,IAAI,GAAIE,IAAI,KCmDgBg5H,CAAkBh5H,IAAKF,MAG5CyjF,KAAK9uF,QAAQ,SAAC8oD,KAAM3vD,OAChB,IAAMlI,IAAOsnI,SAAD,GAAA3lH,OAAmC/I,IAAnC,KAAA+I,OAA0CzZ,OAA1C,IAAAyZ,OAAgB/I,KAAhB+I,OAAsBzZ,QAClC6U,OAASq2H,eAAelrI,QAAUkoE,QAAQk3D,UAAUtnI,OAE1C63D,KAAK96C,OAAOA,QACtB,IAAMxb,KAAQ+lI,SAAiB,IAAN,IACzB14H,MAAMopH,OAAN,GAAAr2G,OAAgBswF,0BAAiBn7C,uBAAjC,YAAAn1C,OAAkEpgB,KAAlE,KAAAogB,OAA0E/I,KAA1E+I,OAAgFzZ,OAAS6U,cAIrGnO,MAAMiU,MAAM4vH,iFAUS5jI,OAAQtN,MAY7B,IAXA,IAAImyI,UACAzB,eACA0B,QAAU,EACRC,iBACAC,mBACAC,cAAgBjlI,OAAO,GACvBklI,gBAAkBllI,OAAO,GACzBmlI,WAAaF,cAAcnsI,OAC3BssI,aAAeF,gBAAgBpsI,OAC/BqoI,SAAW/pI,KAAK+pI,WAEbvxI,EAAI,EAAGA,EAAIu1I,WAAYv1I,IAAK,CACjC,IAAIy1I,SAAWJ,cAAcr1I,IACvB01I,aAAeL,cAAcr1I,GAEnC,GX/HW,YW+HP01I,aAAa5yI,OAAoB,CACjC,IAAM6yI,eAAiBL,gBAAgBJ,SACnCS,gBXjIG,YWiIeA,eAAe7yI,SACjCoyI,UACAO,SAAWC,aAAcC,iBAE7BnC,YAAY9lI,KAAK+nI,cAEjBR,OAAOvnI,KAAKgoI,cACZP,cAAcznI,KAAKgoI,cAG3B,GAAIF,aAAeN,QACf,IAAK,IAAIl1I,IAAIk1I,QAASl1I,IAAIw1I,aAAcx1I,MAAK,CACzC,IAAM21I,gBAAiBL,gBAAgBt1I,KACjCy1I,UAAWE,iBX9IV,YW+IHA,gBAAe7yI,OACf0wI,YAAY9lI,KAAK+nI,WAEjBR,OAAOvnI,KAAKioI,iBACZP,gBAAgB1nI,KAAKioI,kBAIjC,IAAKR,cAAcjsI,QAAUksI,gBAAgBlsI,UAAYsqI,YAAYtqI,OAEjE,GAAKqoI,SADLzuI,KAAOA,OAAS4qI,IX3GN,SW2GqB5qI,QACPsyG,gBXxDjB,QWwDyBm8B,SAASzuI,QAAkBqyI,cAAcjsI,OAUlE,CACH,IACM0sI,OAAQR,gBADQ,GAEtB5B,cAAgBoC,SAChB,IAAMC,YAAazC,SAAS+B,cAAeS,QACvCC,aAAc,IACdrC,cAAgBoC,OAAOA,SACvBT,cAAcrmI,OAAO+mI,YAAY,IAErCT,gBAAgBtmI,OARM,EAQgB,OAnBuC,CAC7E,IAAMgnI,cAAgBX,cAAcjsI,OAAS,EACvC0sI,MAAQT,cAAcW,eAC5BtC,cAAgBoC,QAChB,IAAMC,WAAazC,SAASgC,gBAAiBQ,OACzCC,YAAc,IACdrC,cAAgBoC,MAAOA,QACvBR,gBAAgBtmI,OAAO+mI,WAAY,IAEvCV,cAAcrmI,OAAOgnI,cAAe,GAgB5C,OACIb,OAFJA,QADAA,UAAM/xH,OAAOiyH,cAAkBC,kBACfl6H,OAAO,SAAC4vF,GAAIrhG,MAAOmjF,MAAZ,OAAqBnjF,QAAUmjF,KAAKh/D,UAAU,SAAA1sB,GAAC,OAAKA,EAAE4I,aAAeghG,GAAGhhG,eAG3F0pI,+EAYQt7H,UAAW7D,QACvB,OAAA0hI,sBAAAC,iCAAA1C,iBAAAxxI,WAAA,iBAAA0F,MAAArH,KAAAqH,KAA4B0Q,UAAW7D,8EAUnBg6F,WAAYkE,UAChC,IAAM0jC,aAAe5nC,WAAW4nC,aAC1BtkE,WACN,IAAK,IAAMpwE,OAAOgxG,SACd,MAAOxwG,eAAe5B,KAAKoyG,SAAUhxG,KAAM,CACvC,IAAM20I,YAAc3jC,SAAShxG,KACvBwR,MAAQmjI,YAAYnjI,MAC1B,IAAKmjI,YAAY53H,QAAUvL,MAAO,CAC9B,IAAMuL,OAAS63H,sBAAsBF,aAAcljI,OACnD4+D,QAAQ5+D,OAASuL,QAI7B,OAAOqzD,0EASWykE,YAClB,IAAMC,oBAON,OALAD,WAAWltI,QAAUktI,WAAW9lI,QAAQ,SAACyyF,MAAO/iG,GAC5C,IAAMmmB,IAAM6lH,kBAAamB,oBAAoBpqC,OAC7C58E,IAAIkI,MAAQruB,EACZq2I,iBAAiB3oI,KAAKyY,OAEnBkwH,uEAWKjmI,OAAQkmI,iBACpB,IAAMC,eAEF7C,aAEAtjI,OAFAsjI,aACAD,UACArjI,OADAqjI,UAiDJ,OA7CAC,aAAapjI,QAAQ,SAACkmI,UAClB,IAAMC,aAAeD,SAAS1sI,WAC9B2pI,UAAUnjI,QAAQ,SAAComI,UACf,IAAIC,WACEC,aAAeF,SAAS5sI,WACxByoG,UACFhtE,GACIxyB,MAAO0jI,cAEXzrI,GACI+H,MAAO6jI,eAGTC,aAAeH,SAAS74H,UAExBs0F,KDjJQ,SAAjB2kC,eAAkBC,aAAcF,cAWzC,MV6CuB,gBUrDnBE,cVqDmB,gBUrDaF,aV6DrB,MAJK,aUvDTE,cVuDS,aUvDoBF,aV+DxB,OAIC,QWyEQC,CADQN,SAAS34H,UACYg5H,cAEpCG,aACF7kC,UACAhsF,KACIgsF,UACAI,qBAIF0kC,aD9FgB,SAAzBC,uBAA0BC,UAAW1D,UAAW6C,iBAAvB,OAA2CA,gBAAgBp7H,OAAO,SAAC+5D,MAAS,IAAAn5C,KAAA81C,MAAAvmD,MACxGgyG,SAAWpoD,gBAAgB5kE,MAAQ4kE,MAAQA,MAC3CmiE,aAAct7G,SAAG5Y,OAAHnU,MAAA+sB,KAAAu7G,iCAAaha,SAAS5tH,IAAI,SAAAnP,GAAC,OAAIA,EAAEiyG,WAAUr3F,OAAO,SAAA5a,GAAC,YAAUyU,IAANzU,MAE3E,IAAK82I,YAAYluI,OACb,OAAO,EAGX,IAAMkzF,SAAUxqB,UAAG1uD,OAAHnU,MAAA6iE,MAAAylE,iCAAaD,YAAY3nI,IAAI,SAAAnP,GAAC,OAAKA,EAAEilC,GAAKjlC,EAAEilC,EAAExyB,MAAOzS,EAAEyoD,IAAMzoD,EAAEyoD,GAAGh2C,WACrEmI,OAAO,SAAA5a,GAAC,YAAUyU,IAANzU,GAAyB,OAANA,IACtC+7F,SAAUhxE,UAAGnI,OAAHnU,MAAAsc,MAAAgsH,iCAAaD,YAAY3nI,IAAI,SAAAnP,GAAC,OAAKA,EAAE0K,GAAK1K,EAAE0K,EAAE+H,MAAOzS,EAAEw7D,IAAMx7D,EAAEw7D,GAAG/oD,WACrEmI,OAAO,SAAA5a,GAAC,YAAUyU,IAANzU,GAAyB,OAANA,IAE5C,IAAK87F,QAAQlzF,SAAWmzF,QAAQnzF,OAC5B,OAAO,EAGX,IAAMouI,gBAAgBl7C,QAAQlzF,QAASkzF,QAAQ/1E,MAAM,SAAA/lB,GAAC,OAA8B,IAA1B62I,UAAU1pI,QAAQnN,KACtEi3I,gBAAgBl7C,QAAQnzF,QAASmzF,QAAQh2E,MAAM,SAAA/lB,GAAC,OAA8B,IAA1BmzI,UAAUhmI,QAAQnN,KAC5E,OAAI87F,QAAQlzF,QAAUmzF,QAAQnzF,OACnBouI,eAAiBC,cAErBD,eAAiBC,gBCwESL,CAAuBV,SAAS/2C,aACjDi3C,SAASj3C,aAAc62C,qBAEvBK,QADAM,aAAa/tI,OACH+tI,aAAaxnI,IAAI,SAAC+nI,WACxB,IAAMC,gBAAkBhhE,eAAeA,kBAAmBugE,WAAW,GAAG7wH,KAAMqxH,WACxEE,sBAAwB1L,kBAAaM,kBAAkBmL,gBAAgBtlC,KACzEslC,iBACJ,OACItlC,KAAMslC,gBAAgBtlC,KACtB9jF,MAAOopH,gBAAgBppH,MACvBlI,IAAKuxH,yBAIHV,WAGdT,YAAY7oI,KAAZqB,MAAAwnI,YAAWoB,oCAAShB,cAGrBJ,kDAvUP,MXwMiB,syEY3NJqB,qvBAAqB1G,qUAU1BkB,aAAcjc,WAAW,IAI3Bod,aADFnB,aADAhzC,KAIAwP,QACAunB,UADAvnB,QAGA+kC,SAEA/kC,QAFA+kC,SACAC,YACAhlC,QADAglC,YAGEiE,QAAUtE,aAAa34D,QAS7B,OAPAi9D,QAAQlE,UAAYkE,QAAQlE,cAC5BkE,QAAQlE,UAAUC,gBAElBL,aAAa34D,IAAMi9D,QACnBtE,aAAahuG,EAAI,KACjBguG,aAAavoI,EAAI,KAEVuoI,qFAUcnjI,QASrB,IARA,IAAI8kI,QAAU,EACRD,UACAzB,eACA6B,cAAgBjlI,OAAO,GACvBklI,gBAAkBllI,OAAO,GACzBmlI,WAAaF,cAAcnsI,OAC3BssI,aAAeF,gBAAgBpsI,OAE5BlJ,EAAI,EAAGA,EAAIu1I,WAAYv1I,IAAK,CACjC,IAAM01I,aAAeL,cAAcr1I,GACnC,GZJW,YYIP01I,aAAa5yI,OAAoB,CACjC,IAAM6yI,eAAiBL,gBAAgBJ,WACjCO,QAAUE,gBAAkBD,aAAcC,iBAAmBD,cACnElC,YAAY9lI,KAAK+nI,cAEjBR,OAAOvnI,KAAKgoI,cAGpB,GAAIF,aAAeN,QACf,IAAK,IAAIl1I,GAAIk1I,QAASl1I,GAAIw1I,aAAcx1I,KAAK,CACzC,IAAM21I,gBAAiBL,gBAAgBt1I,IACjCy1I,UAAWE,iBZfV,YYgBHA,gBAAe7yI,OACf0wI,YAAY9lI,KAAK+nI,UAEjBR,OAAOvnI,KAAKioI,iBAIxB,OACIV,cACAzB,mFAIU1vG,SACd,IAAM3zB,MAAQ2zB,QAAQ3zB,QAChBwhE,QAAUxhE,MAAMtP,IAAN,GAAAqiB,OAAaswF,0BAAiBv7C,sBAA9B,YACV6/E,aACFppE,QAAStmB,KAAWA,MAExB1nD,OAAOwlB,OAAOyrD,SAASrhE,QAAQ,SAACkwG,WAC5B,IAAK,IAAMj/G,OAAOi/G,UACds3B,YAAYv2I,MAAQ8J,KAAKsQ,IAAI6kG,UAAUj/G,KAAK,GAAIu2I,YAAYv2I,KAAK,IAC7D8J,KAAKsQ,IAAI6kG,UAAUj/G,KAAK,GAAIu2I,YAAYv2I,KAAK,OAGzD4O,MAAMopH,OAAN,GAAAr2G,OAAgBswF,0BAAiBn7C,uBAAjC,kBAAyEy/E,YAAYppE,kEAWrF,OAAOlnE,6CAcP,OAAIoF,UAAO1D,QACP1B,KAAKksG,QAAL9mG,UAAA1D,QAAA,OAAA6L,EAAAnI,UAAA,GACOpF,MAEJA,KAAKksG,8DAUAx7F,UAAW7D,QACvB,IAAI0jI,sBACAC,yBACE5nI,OAAS6nI,kBAAAC,6BAAAN,aAAA91I,WAAA,iBAAA0F,MAAArH,KAAAqH,KAAqB0Q,UAAW7D,QAE3CyuF,OACAzuF,OADAyuF,OAGAxgF,KAEAlS,OAFAkS,KACAjB,QACAjR,OADAiR,QAGEkxF,SADQzP,OAAO,GACEyP,SACjB7jC,OAAS6jC,UAAYA,SAAS7jC,OAAS6jC,SAAS7jC,OAAO37D,MAAQ,KAC/DkmG,MAAQ1G,UAAYA,SAAS0G,MAAQ1G,SAAS0G,MAAMlmG,MAAQ,KAC5DolI,iBAAmBJ,cAAeC,kBAYxC,OAVC11H,KAAMjB,SAAS/Q,QAAQ,SAACugE,UAAWunE,WAChCvnE,UAAUvgE,QAAQ,SAAC+nI,SAAUr4I,GAAX,OAAiBq4I,SAAS/nI,QAAQ,SAACyC,OAC7CA,MAAMjJ,aAAe4kE,QAAU37D,MAAMjJ,aAAemvG,OZnGjD,YYmG0DlmG,MAAMjQ,QACnEq1I,gBAAgBC,WAAWp4I,GAAG0N,KAAKqF,aAI/CilI,iBAAmBM,gCAAI,IAAIj6H,IAAI25H,mBAC/BD,cAAgBO,gCAAI,IAAIj6H,IAAI05H,gBAC5BvwI,KAAK2uH,WAAY7zG,KAAMy1H,cAAe12H,QAAS22H,mBACxCxwI,KAAK2uH,kFAGQ9nB,WAAYkE,SAAUgmC,YAAanjH,SACvD,IAAI8iG,UACAF,WACE5nH,UACA0yF,OAASt7F,KAAKs7F,SACdl9E,UAAYyoF,WAAW4nC,aACvBlwH,aAAeH,UAAUI,kBACzB2rD,WACN,GAAImxB,QAAUA,OAAO,GAAI,CACrB,IACM01C,cADQ11C,OAAO,GACO38E,IAAIosF,cAE/BgC,iBAAQD,gBAAOE,qBAAMC,uBAAOnkG,QAAQ,SAACmoI,SAClC,IAAM1lI,MAAQylI,cAAcC,SAAWD,cAAcC,SAAS1lI,MAAQ,GAChEmgB,aAAenN,aAAahT,QZ5H3B,YY4HqCgT,aAAahT,OAAOoT,IAAIrjB,KAChE21I,UAAYjkC,sBAAQthF,eACpBglG,UAAYnlH,OAEZ0lI,UAAYhkC,wBACZujB,WAAajlH,OAEjBgT,aAAahT,SAAWmgB,cAAgB9iB,OAAO1C,KAAKqF,SAU5D,GANImlH,YACAvmD,QAAQumD,WAAatyG,UAAUwP,QAAQmjH,6LAAlBG,IAChBxgB,UAAY,QACdrhH,gBAAgBhE,YAAYqlH,WAAW55G,UAG1C05G,WAAY,CACZ,IAAMp9G,GAAKgL,UAAUwP,WAAVlS,OAAAo1H,gCAAsBC,aAAgBnoI,QAASglB,QAAQ7E,UAClEohD,QAAQqmD,YAAcp9G,GAAG/D,gBAAgBhE,YAAYmlH,YAAY15G,SAErE,OAAOqzD,8DAUKvhE,OAAQkmI,iBACpB,IAAIC,eAEI7C,aAEAtjI,OAFAsjI,aACAD,UACArjI,OADAqjI,UAsBR,SApBevwH,OAAAo1H,gCAAO5E,cAAP4E,gCAAwB7E,YAE7BnjI,QAAQ,WACd,IACI+D,QACA89F,KZAG,MYCHhsF,KACIosF,cAGJ+jC,iBAAmBA,gBAAgBptI,OAAS,IAC5CmL,OAASoiE,eAAepiE,OAAQiiI,gBAAgB,KAEpDC,YAAY7oI,KAAK2G,UAEM,IAAvBkiI,YAAYrtI,SACZqtI,YAAcD,iBAGlB9uI,KAAKs7F,OAAOyzC,aACLA,8EAUWH,YAClB,IAAMC,oBASN,OAPAD,WAAWltI,QAAUktI,WAAW9lI,QAAQ,SAACyyF,OACrC,IAAM58E,IAAM6lH,kBAAaM,kBAAkBvpC,MAAMoP,KAAMpP,OACvDszC,iBAAiB3oI,MACbykG,KAAMpP,MAAMoP,KACZhsF,YAGDkwH,uDA3IP,MZgHa,qyCa/NAsC,2wBAAuBzH,6UAS5BkB,cAAc,IACdrsH,aAAyBqsH,aAAzBrsH,aAAc1R,OAAW+9H,aAAX/9H,OAChBukI,WAKN,OAHCnkC,sBAAOC,sBAAOF,sBAAMlkG,QAAQ,SAACu4H,UAC1B+P,QAAO,GAAA11H,OAAI2lH,WHkLU,SAApBgQ,kBAAqBzG,cAAkC,IAApB0G,WAAoBlsI,UAAA1D,OAAA,QAAA6L,IAAAnI,UAAA,GAAAA,UAAA,MACxDi8H,SAA2BuJ,aAA3BvJ,SAAU9iH,aAAiBqsH,aAAjBrsH,aACZhT,MAAQ+lI,WAAW/lI,MACnBqmD,QACA+5E,IAAMlB,UAAUpJ,UAItB,OAFAiQ,WAAWh2I,KAAOg2I,WAAWh2I,KAAOg2I,WAAWh2I,KAAOi2I,wBAAYhzH,aAAchT,OAAS,MACzFqmD,KAAK1rD,KAAK,IAAIylI,IAAI2F,aACX1/E,KG1L0By/E,EAAoBhQ,kBAAU9iH,2BAAgB1R,OAAOw0H,aAE3E+P,8DAsBKI,gBAAiB1C,iBAC7B,IAAMC,eAqBN,OApBAD,gBAAgBhmI,QAAQ,SAACpO,GACrB,IAAMmS,OAASnS,GACduyG,sBAAOC,sBAAOF,sBAAMlkG,QAAQ,SAAC8oD,MAC1B,GAAI4/E,gBAAgB5/E,OAAS4/E,gBAAgB5/E,MAAMrmD,MAAO,CACtD,IAAMoT,IAAM9R,OAAO8R,IACf9R,OAAO8R,eAAe9V,MACtB8V,IAAI7V,QAAQ,SAAC2kE,MACTA,KAAKs9B,SAAWt9B,KAAKs9B,cACpBt9B,KAAKs9B,SAASn5C,QAAU6b,KAAKs9B,SAASn5C,UACvC6b,KAAKs9B,SAASn5C,MAAMrmD,MAAQimI,gBAAgB5/E,MAAMrmD,SAGtDoT,IAAIosF,SAAWpsF,IAAIosF,cAClBpsF,IAAIosF,SAASn5C,QAAUjzC,IAAIosF,SAASn5C,UACrCjzC,IAAIosF,SAASn5C,MAAMrmD,MAAQimI,gBAAgB5/E,MAAMrmD,UAI7DwjI,YAAY7oI,KAAK2G,UAEdkiI,oEAUMzyG,SAAS,IACd6tC,QAA4B7tC,QAA5B6tC,QAASytB,KAAmBt7D,QAAnBs7D,KAAMmT,SAAazuE,QAAbyuE,SAevB,OAbA7xG,OAAO+b,QAAQ81F,UAAUjiG,QAAQ,SAACusH,KAC9B,GAAIA,IAAI,IAAMA,IAAI,GAAG9pH,MAAO,CACxB,IAAM0lI,QAAU5b,IAAI,GACd9pH,MAAQ8pH,IAAI,GAAG9pH,MAEjBA,OACAqsF,KAAKq5C,SAASnoI,QAAQ,SAAC8oD,MACnB,IAAM96C,OAASqzD,QAAQ5+D,QACtB8pH,IAAI,GAAGv+G,QAAU86C,KAAK22D,aAAazxG,aAK7C8gF,2CA3DP,MAAO,wwCCFR,wBASM65C,gCAAsB,SAAtBA,oBAAsB1gI,KAAG,SAAI2K,OAAAg2H,8BAAI3gI,IAAI,IAAR2gI,8BAAe3gI,IAAI,KAAI0B,OAAO,SAACi8D,QAAStzD,KAC9E,IAAMu2H,QAAUv2H,IAAI9f,OAKpB,MdSmB,YcZfq2I,SdkMgB,aclMOA,UACvBjjE,SAAU,GAEPA,UACR,IAMUkjE,oBAAsB,SAAtBA,sBAAsB,OAC/BC,QAAS,IAAI//H,IACbggI,SAAU,IAAIhgI,IACdigI,SAAU,IAAIjgI,IACdkgI,aAAc,IAAIlgI,IAClBmgI,YAAa,IAAIngI,MASRo5H,WAAa,SAAbA,WAAch7B,UAAD,QAAA5nC,KAAAljE,UAAA1D,OAAckgB,OAAd,IAAA/Y,MAAAy/D,KAAA,EAAAA,KAAA,KAAAC,KAAA,EAAAA,KAAAD,KAAAC,OAAc3mD,OAAd2mD,KAAA,GAAAnjE,UAAAmjE,MAAA,SAAA7sD,OAA4Bw0F,SAA5B,UAAAx0F,OAA6CkG,OAAO7e,KAAK,OA6DtEmvI,0BAAgB,SAAhBA,cAAiBtpI,OAAQupI,aAAcC,SAAvBhoE,OAAmE,IAAhC4xB,YAAgC5xB,MAAhC4xB,YAAagV,aAAmB5mC,MAAnB4mC,aAQzE,OAPgBpoG,OAAOlH,OAAS,EAAIkH,OAAO,GAAGX,IAAI,SAACm6D,KAAM5pE,GAAP,OAAa,IAAI45I,UAC/D92I,KdmJc,SclJdwlC,UAAS,GAAAplB,OAAKsgF,YAAL,mBAETgV,4BACDvsF,OA9BsB,SAAhB4tH,cAAiB/4H,QAASrX,MAAOqwI,WAC1C,IAAI94H,OAAS,GAEb,GAAIvX,QAAUqwI,UAAY,GAAKh5H,QAAQ5X,OAAS4wI,UAAW,CACvD,IAAK,IAAI95I,EAAIyJ,MAAOzJ,EAAI8gB,QAAQ5X,OAAS,EAAGlJ,IACxCghB,QAAM,GAAAkC,OAAOpC,QAAQ9gB,GAAG8J,WAAlB,OAGV,OADAkX,QAAUF,QAAQA,QAAQ5X,OAAS,GAAGY,WAEnC,OAAIgX,QAAQrX,OACRqX,QAAQrX,OAAOK,WAEnB,GAkBG+vI,CAAcF,aAAc35I,EAAGoQ,OAAO,GAAGlH,SAClCmL,QAASsxF,KAAM/7B,KAAKv1D,SAASsxF,aAyDrCozC,wBAAc,SAAdA,YAAehzH,aAAchT,OACtC,IAAI89D,Ud1De,Uc+DnB,OAHI99D,OdjJiB,cciJRgT,aAAahT,OAAOoT,IAAIrjB,OACjC+tE,UdxDc,Uc0DXA,WAUEslE,sBAAwB,SAAxBA,sBAAyBj+H,UAAW8C,WAE7C,OADc9C,UAAUrB,gBAAgBzG,OAAOsiB,KAAK,SAAApyB,GAAC,OAAIA,EAAEC,SAAWya,UAAUlR,aACnEwU,UA6DJozH,8BAAoB,SAApBA,kBAAqB5uI,KAAMsN,OAAQ2pI,oBAC5C,IAAIxI,SAAWwI,mBAAmBj3I,MAC9BkvI,WAAa,GACX7jI,QAAUrL,OAAS6qI,KAAOv4B,eAAMC,kBdtHpB,SAJH,OcuHoDpkC,QAAA+oE,0BAIjC5pI,OAJiC,GAI5D6pI,WAJ4DhpE,QAAA,GAIhDipE,YAJgDjpE,QAAA,GAK7DkpE,eAAiB,SAAjBA,eAAiBn6I,GAAC,OAAKi6I,WAAW/wI,OAAS+wI,WAAWj6I,GAAG8C,OAAS,MAClEs3I,gBAAkB,SAAlBA,gBAAkBp6I,GAAC,OAAKk6I,YAAYhxI,OAASgxI,YAAYl6I,GAAG8C,OAAS,MAwB3E,Md3PqB,ccqOjBq3I,eAAeF,WAAW/wI,OAAS,IdrOlB,ccqOsCkxI,gBAAgB,IACvEpI,WAAaT,SAAWpjI,QAAQ,EAAIA,QAAQV,QAAQ8jI,WAAapjI,QAAQ,GAGrEojI,SdvLU,WcsLVzuI,MAAoBm3I,WAAWA,WAAW/wI,OAAS,GAAGY,aAAeowI,YAAY,GAAGpwI,WdlI7E,McqIIynI,UAAYpjI,QAAQ,Id3OlB,cc6OVisI,gBAAgBF,YAAYhxI,OAAS,IAC5C8oI,WAAalvI,OAAS6qI,IAAMt4B,gBdpId,ScqIdk8B,SAAWzuI,OAAS6qI,IAAMt4B,gBdrIZ,WcuId28B,WAAalvI,OAAS6qI,IAAMv4B,ed3IjB,Mc4IXm8B,SAAWzuI,OAAS6qI,IAAMv4B,ed5If,OAjGI,Yc+Of+kC,eAAeF,WAAW/wI,OAAS,Id/OpB,Yc+OsCkxI,gBAAgB,GACrE7I,SAAWzuI,OAAS6qI,IAAMv4B,ed/If,MAjGI,YciPRglC,gBAAgB,GACvB7I,SAAWzuI,OAAS6qI,IAAMt4B,gBd7IZ,SArGC,YcmPR8kC,eAAeF,WAAW/wI,OAAS,KAC1CqoI,SAAWzuI,OAAS6qI,IAAMv4B,ednJf,QcqJP48B,WAAYT,WAYX8I,wBAA0B,SAA1BA,wBAA2Bv2G,QAASqyF,UAAWmkB,SAAY,IAEhElqI,OAEA+lH,UAFA/lH,OACAtN,KACAqzH,UADArzH,KAHgEy3I,sBAKpCD,QAAQE,cAAcC,wBAAwBrqI,OAAQtN,MAA9EmyI,OAL4DsF,sBAK5DtF,OAAQzB,YALoD+G,sBAKpD/G,YAKhB,OAHA1vG,QAAQmxG,OAARyF,8BAAA,GAAAx3H,OAAqBpgB,KAArB,UAAoCmyI,SACpCnxG,QAAQ0vG,YAARkH,8BAAA,GAAAx3H,OAA0BpgB,KAA1B,eAA8C0wI,eAErCyB,cAAQzB,wBAAapjI,gBAiDrBuqI,uBAAa,SAAbA,WAAcC,SAAUN,SACjC,IAAIO,gBAAmB/wG,KAAK,EAAOkvB,QAAQ,GACvC8hF,gBAAmB5tG,MAAM,EAAOC,OAAO,GACvC4tG,kBAAqBjxG,KAAK,EAAOkvB,QAAQ,EAAO9rB,MAAM,EAAOC,OAAO,GAEpE7qB,KAGAs4H,SAHAt4H,KACAjB,QAEAu5H,SAFAv5H,QACQ25H,YACRJ,SADA10H,OAPyC+0H,MAAAjB,0BASf13H,KATe,GAStC44H,SATsCD,MAAA,GAS5BE,UAT4BF,MAAA,GAAAG,SAAApB,0BAUT34H,QAVS,GAUtCg6H,WAVsCD,SAAA,GAU1BE,cAV0BF,SAAA,GAAAG,mBAkBzCjB,QAAQnkB,YANRua,cAZyC6K,mBAYzC7K,cACAI,iBAbyCyK,mBAazCzK,iBACAF,kBAdyC2K,mBAczC3K,kBACAI,qBAfyCuK,mBAezCvK,qBACAD,eAhByCwK,mBAgBzCxK,eACAJ,YAjByC4K,mBAiBzC5K,YAEE6K,mBAAqB9K,cAAcxnI,OAAS4nI,iBAAiB5nI,OAC7DuyI,kBAAoB9K,YAAYznI,OAAS6nI,eAAe7nI,OACxDwyI,wBAA0B9K,kBAAkB1nI,OAAS8nI,qBAAqB9nI,OAEhF,GdtKiB,UcsKboxI,QAAQltH,YAAYtqB,QACpB,IAAK04I,mBACD,OAASX,8BAAgBC,8BAAgBC,wCAE1C,IAAKU,oBAAsBC,yBAA2BF,oBAAsB,EAC/E,OAASX,8BAAgBC,8BAAgBC,mCAe7C,OAZAF,eA7EkB,SAAhBc,cAAiBzuG,KAAMC,OACzB,IAAMyuG,SACNA,KAAc,EACdA,QAAiB,GAKjB,OAJI1uG,KAAKhkC,OAAS,GAAKikC,MAAMjkC,OAAS,KAClC0yI,QAAQ9xG,KAAM,EACd8xG,QAAQ5iF,QAAS,GAEd4iF,QAqEUD,CAAcT,SAAUC,WACzCL,eAnEsB,SAApBe,kBAAqB/xG,IAAKkvB,QAC5B,IAAM4iF,SACNA,MAAe,EACfA,OAAgB,GAOhB,OANI9xG,IAAI5gC,QAAU8vD,OAAO9vD,UAChB4gC,IAAI,IAAMA,IAAI,GAAG5gC,OAAS,GAAO8vD,OAAO,IAAMA,OAAO,GAAG9vD,OAAS,KAClE0yI,QAAQ1uG,MAAO,EACf0uG,QAAQzuG,OAAQ,GAGjByuG,QAyDUC,CAAkBR,WAAYC,eAC/CP,iBAvDoB,SAAlBe,gBAAmBx5H,KAAMjB,SAC3B,IAAMu6H,SAAY9xG,KAAK,EAAMoD,MAAM,EAAM8rB,QAAQ,EAAM7rB,OAAO,GACxD4uG,eAAiB3mC,eAAMC,iBACvB2mC,edzMS,MAIG,UcqNlB,OAfA15H,KAAKhS,QAAQ,SAACpO,EAAGlC,GACTkC,EAAE,IAAMA,EAAE,GAAGgH,OACb0yI,QAAQG,cAAc/7I,KAAM,EAE5B47I,QAAQG,cAAc/7I,KAAM,IAGpCqhB,QAAQ/Q,QAAQ,SAACpO,EAAGlC,GACZkC,EAAEgH,OACF0yI,QAAQI,cAAch8I,KAAM,EAE5B47I,QAAQI,cAAch8I,KAAM,IAI7B47I,QAoCYE,EAAiBZ,SAAUC,YAAaE,WAAYC,gBAEnEN,YAAY9xI,OAAS,IACrB6xI,iBAAiBjxG,KAAM,EACvBixG,iBAAiB/hF,QAAS,GAE1BgiF,YAAY9xI,QAAU8xI,YAAY,GAAG9xI,OAAS,IAC9C6xI,iBAAiB7tG,MAAO,EACxB6tG,iBAAiB5tG,OAAQ,IAEpB0tG,8BAAgBC,8BAAgBC,4NClatC,IAAMlgD,oBAAkBohD,oCAAArkD,uBAC1BskD,wBAAQxoD,MACLmF,YAAaub,2BAAWhW,OACxB7W,OAAO,IAHgB00D,oCAAArkD,oBAK1BskD,wBAAQvoD,OACLkF,YAAaub,2BAAW/V,aAND49C,oCAAArkD,oBAQ1BskD,wBAAQpoD,WACL+E,YAAaub,2BAAW5V,QACxBjX,OAAO,IAVgB00D,oCAAArkD,oBAY1BskD,wBAAQnoD,WACL8E,YAAaub,2BAAWhW,OACxB7W,OAAO,IAdgB00D,oCAAArkD,oBAgB1BskD,wBAAQroD,OACLgF,YAAaub,2BAAW5V,QACxBjX,OAAO,IAlBgBqQ,+fCaxB,IAyCMukD,uBAAkB,SAAlBA,gBAAmBr4G,QAAS4N,WAAY0qG,cAAer+D,YAChE,IAAI20B,UAAY0pC,cACVl5I,aAAe4gC,QAAQu4G,WACvBjpC,QAAUtvE,QAAQsvE,UACnBgpC,gBACD1pC,UAAYs5B,kBAAae,iBAAiBr7F,YAC1CjV,QAAQi2E,WAAWpiG,QAAQ,SAACgsI,KAAMt8I,GAC9Bs8I,KAAKlpC,SACD2nB,aAAc3nB,QAAQugC,SACtB3Y,aAAc5nB,QAAQmpC,SACtBloE,UAAW0J,WAAW/9E,KAE1Bs8I,KAAKnsI,MAAM2zB,QAAQ3zB,YAG3B,IAAM2yF,UACA05C,YAAc//G,QAAQi2E,WAgB5B,OAfAhhE,WAAajV,QAAQiV,aACVz3B,OAAO,SAACC,IAAKiM,IAAKhM,KACzB,IAAMm+F,SAAWkkC,YAAYriI,KAW7B,OAVAm+F,SAASjkG,OAAO8R,KAChBmyF,SAAShW,YAAYx+D,QAAQw+D,eAC7BgW,SAASp1G,aAAaA,cACtBo1G,SAASqe,WACLluB,UAAW3kE,QAAQ24G,aAEnBt2H,IAAI5lB,MACJ+3G,SAAS8hB,MAAMj0G,IAAI5lB,MAEvBuiG,OAAOwV,SAAS8hB,SAAW9hB,SACpBp+F,SAEJ4oF,QAGE45C,yBAA2B,SAA3BA,yBAA4BC,UAAWxsI,OAChD,IAAM6lH,kBAAoB2mB,UAAUtoI,SAAS2hH,sBACvC4mB,WAAa5mB,kBAAkB4mB,WACjCC,UACJ,GAAID,WAAY,CACZ,IAAM7/G,SAAW6/G,WAAWzsI,OAC5B0sI,OAAS9/G,SAAS8/G,OAClBF,UAAU3mB,kBAAkBj5F,SAASrW,SAC9BsvG,6BAA6Bj5G,UACpC4/H,UAAU3mB,kBAAkBA,mBAEhC,OAAO6mB,QAgDEC,wBAAmB,SAAnBA,iBAAoB9qC,WAC7B,IAAM+qC,iBAoBN,OAnBA/qC,UAAU1hG,QAAQ,SAAC4hG,SAAUlyG,GACzB,IAAMmmB,IAAM+rF,SAAS/rF,IACfgsF,KAAOD,SAASC,KACtB,GAAKhsF,IAUIA,IAAI5lB,OACL4lB,IAAI5lB,KAAJ,GAAA2iB,OAAcivF,KAAd,KAAAjvF,OAAsBljB,IAE1B+8I,cAAcrvI,KAAKwkG,cAbb,CACN,IAAM8qC,MAAQhR,kBAAaM,kBAAkBp6B,SAASC,KAAMD,UACvD8qC,MAAMz8I,OACPy8I,MAAMz8I,KAAN,GAAA2iB,OAAgBivF,KAAhB,KAAAjvF,OAAwBljB,IAE5B+8I,cAAcrvI,MACVykG,KAAMD,SAASC,KACfhsF,IAAK62H,WASVD,eA4IEE,YAAc,SAAdA,YAAen6C,OAAQo6C,SAAUj8I,OAAnB,OAA6B6hG,OAAO5nF,OAAO,SAAC6nF,OAEnE,OAD0B,SAAbm6C,SAAsBn6C,MAAM31E,YAAY2lE,aAAegQ,MAAMq3B,WAC1Dn5H,SAGPk8I,eAAiB,SAAjBA,eAAkBr6C,OAAQo6C,SAAUj8I,OAC7C6hG,OAAO5nF,OAAO,SAACohI,MAEX,OAD0B,SAAbY,SAAsBZ,KAAKjoI,SAAS89F,KAAOmqC,KAAKliB,WAChDn5H,QACTq7I,KAAK1tG,UACE,MAQNwuG,oBAAsB,SAAtBA,oBAAuB79H,MACRA,KAAK89H,iBACbxqD,KAAK,WACjBtzE,KAAK89H,iBAAmB,IAAI5qD,QAAQ,SAAC7hE,SACjCrR,KAAK+9H,iBAAmB1sH,UAE5BwsH,oBAAoB79H,SCxUfg+H,UAAY,YACZC,UAAY,6uCCGjB7R,qBAA0B4B,4BAA1B5B,UAAWC,sBAAe2B,4BAAf3B,WAEbl2B,kBAAS4B,2BAAU5B,OAiEZ+nC,mCAA0B,SAA1BA,wBAA2B35G,QAASzvB,OAAQvR,MAAlB,OAA4B,IAAK,KAAK2M,IAAI,SAACo5H,UAC9E,IAAMzpC,KAAOt7D,QAAQs7D,OACrB,OAAKA,KAAKypC,WAGGp1D,aAAap/D,OAAOw0H,WAAax0H,OAAOw0H,UAAUljC,KAZvC,SAAtB+3C,oBAAuB/3C,KAAMvsC,MAC/B,OAAIA,KAAKhsC,YAAYtqB,SAAW4yG,mBACrB/P,KAWP+3C,CAAoBrpI,OAAOsxF,KAAMvG,KAAKypC,UAAU,KArE7B,SAArB8U,mBAAsB75G,QAASs7D,KAAMt8F,KAAMypG,aAAgB,IAAAqxC,YACzDrrC,SAUqCsrC,UATnCxpI,OAASyvB,QAAQzvB,SACfmvF,YAAsCnvF,OAAtCmvF,YAAas6C,UAAyBzpI,OAAzBypI,UAAWC,UAAc1pI,OAAd0pI,UAC1BC,cAAgBF,UAAUliG,MAC1BqiG,cAAgBH,UAAUG,cAC1B16C,aAAezgG,OAASy6I,UAAYQ,UAAUx6C,aAAeu6C,UAAUv6C,aACvE26C,cAAgBH,UAAUxxC,aAAa3wD,MACvCwd,KAAOgmC,KAAKmN,aAAa,GACzB4xC,cAAgB/kF,KAAKhsC,YAAYtqB,SAAW4yG,kBAE9C5yG,OAASy6I,WAAaY,eACdC,0BAAAP,aACHtxC,YADG,GAAArpF,OACcqpF,YADd,UAAA6xC,0BAAAP,UAAA,GAAA36H,OAEAqpF,YAFA,QAAArpF,OAEoBqpF,YAFpB,WAARgG,SAAQsrC,WAKRtrC,SAAW6rC,6BACN7xC,YAA2B,GAAArpF,OAAMqpF,YAAnB4xC,cAAa,gBAapC,OAVA5rC,SAAS32D,OACL36C,MAAO,SAAAA,MAACuR,KAAMxS,GACV,IAAMq+I,iBAAmBF,eAAiB/kF,KAAK96C,SAAS,GAAK,EAC7D,OAAIxb,OAASy6I,UACFW,cAAcl+I,EAAI,GAEtBq+I,kBAA0C,IAAtB7rI,KAAK+5F,aAAqB0xC,cAAgBD,iBAKzEtsG,YAAUksG,aACNr6C,aAAY,GAAArgF,OAAKqgF,aAAL,KAAArgF,OAAqBqpF,aACjCjkE,UAAWj0B,OAAOi0B,UAClB/nC,KAAMgsG,YACNipB,oBAAqB,SAAAA,oBAAChjH,KAAMxS,GAQxB,OANyBm+I,eAAiB/kF,KAAK96C,SAAS,GAAK,GAC1B,IAAX9L,KAAKxH,GAAWlI,OAASy6I,UACpC,GAAAr6H,OAAMsgF,YAAN,mBAEA,GAAAtgF,OAAMsgF,YAAN,UAAAtgF,OAA0BpgB,KAA1B,KAAAogB,OAAkCqpF,YAAlC,KAAArpF,OAAiDljB,EAAI,KAVhEo+I,0BAAAR,YAAA,MAAA16H,OAcCqpF,YAAYxlD,eAAkBjkD,OAASy6I,UAAY,OAAIxoI,GAdxDqpI,0BAAAR,YAAA,WAeNrrC,UAfMqrC,aAiBVx+C,KAAMg/C,6BACD7xC,YAAcnzC,MAEnB4pC,aAAa,GAmBH26C,CAAmB75G,QAASs7D,KAAMt8F,KAAM+lI,UAL3C,OAMZ3tH,OAAO,SAAA5a,GAAC,OAAU,OAANA,KA8GFg+I,2BAA6B,SAA7BA,2BAA8Bx6G,SAAY,IAAAhI,KAC7CsjE,KAAOt7D,QAAQs7D,OACf0H,aACF7jE,MAAOa,QAAQb,QACfC,OAAQY,QAAQZ,UAEd46G,UAAYh6G,QAAQy6G,WACpBR,UAAYj6G,QAAQ06G,WACpBC,cApHsB,SAAnBC,iBAAoBt/C,KAAMhvF,OAAQ2V,cAC3C,IAAM44H,YAyCN,OAxCC,IAAK,KAAKruI,QAAQ,SAACxN,MAChB,IAAIirC,MAAQqxD,KAAKt8F,MAAM,GAAGs5G,gBACpBv+F,QAAU02D,WAAWxuD,aAAcwuD,WAAWnkE,OAAQtN,KAAM,GAAG28F,aAAa,GAAI,MAAO,WACvFm/C,YACAzrI,SAEE5S,KAAM,SACNuC,KAAM,YAENvC,KAAM,SACNuC,KAAM,YAGNvC,KAAM,UACNuC,KAAM,YAENvC,KAAM,UACNuC,KAAM,YAENvC,KAAM,OACNuC,KAAM,YACN+a,kBAEAtd,KAAM,OACNuC,KAAM,YACN+a,kBAGF5N,IAAM5E,KAAKwQ,IAAIkyB,MAAM7kC,QAC3B6kC,MAAQlwB,UAAYkzD,gCAAiBzqE,SAAWynC,MAAMt+B,IAAI,SAAAnP,GAAC,OAAIA,EAAE0R,YAAa+7B,MAC9E,IAAK,IAAI/tC,EAAI,EAAGA,EAAIiQ,IAAKjQ,GAAK,EAAG,KAAA6+I,eAC7BD,SAASlxI,MAAT0wI,0BAAAS,kBAAA,GAAA37H,OACQpgB,KADR,SACsBirC,MAAM/tC,IAD5Bo+I,0BAAAS,eAAA,GAAA37H,OAEQpgB,KAFR,UAEuBirC,MAAM/tC,EAAI,IAFjCo+I,0BAAAS,eAAA,GAAA37H,OAGQpgB,KAHR,OAGoBirC,MAAM/tC,IAH1Bo+I,0BAAAS,eAAA,GAAA37H,OAIQpgB,KAJR,OAIoBirC,MAAM/tC,IAJ1B6+I,iBAOJF,SAAS77I,MAAQ,IAAIgD,oBAAU84I,SAAUzrI,UAEtCwrI,SA0EeD,CAAiBt/C,KAAMt7D,QAAQ1zB,SAAU0zB,QAAQtxB,OAAOwT,oBAC9E8V,SAAG5Y,OAAHnU,MAAA+sB,KAAAgjH,6BAAaf,WAAb76H,OAAA47H,6BAA2BhB,aAAWxtI,QAAQ,SAACgsI,MAC3CA,KAAK9pI,KAAK8pI,KAAKl9C,OAAO75D,EAAIk5G,cAAcl5G,EAAIk5G,cAAczzI,GAAG87F,YAAYA,gBCzMpEnE,kCACTa,YFPuB,OEQvBD,aAAc,cACdj7D,UAAW,GACXy2G,iBAAkB,sBAClBjB,WACIv6C,aAAc,kBACdj7D,UAAW,GACXq9D,MAAM,EACN/pD,MAAO,UACPqiG,cAAe,WAEnBF,WACIx6C,aAAc,kBACdj7D,UAAW,GACXq9D,MAAM,EACN36F,GACI4wC,OAAQ,OAAQ,YAEpBrW,GACIqW,OAAQ,OAAQ,aAGxBojG,kBAAmB,YACnB19C,aACIC,SACIpgG,KFvBgB,iBE0BxB89I,oBAAqB,osBC9BzB,IAAAC,mBAAAC,iCAAAC,yBCLsB,UDOdn+I,MAAO,KACPyjB,MACIgxD,aAAc,SAAAA,aAACrhE,OAAQuqG,WAAT,OACVnoC,eAAemoC,WAAanoC,kBAAmBksB,kCAAgBtuF,YAL/E8qI,iCAAAC,sBCFyB,YDYjBn+I,MAAO,KACPyjB,MACImxD,OAAQ,SAAAA,OAAAq8B,UAAQ,OAAI4qC,wBAAiB5qC,cAZjDitC,iCAAAC,sBCEyB,aDcjBn+I,MAAO,OAhBfk+I,iCAAAC,sBCOsB,UDYdn+I,MAAO,OAnBfk+I,iCAAAC,sBCJoB,QD0BZn+I,MAAO,KACPyjB,MACIixD,UAAW,SAAAA,UAAAr1E,GAAC,OAAIA,aAAawF,qBAC7B+vE,OAAQ,SAAAA,OAACrjE,KAAMsxB,SACX,GAAIA,QAAQC,OAAQ,CAChB,IAAMs7G,WAAav7G,QAAQu7G,aAC3Bv7G,QAAQu7G,cAARn8H,OAAAo8H,gCAAuBD,aAAY7sI,YAChC,CACH,IAAM+sI,QAAUz7G,QAAQtxB,OACxB+sI,SAAWA,QAAQvkD,YAAY,eAC/Bl3D,QAAQu7G,YAAY7sI,YAhCxC2sI,iCAAAC,sBCG+B,mBDmCvBn+I,MAAO,KACPyjB,MACIywD,aAAa,KAxCzBiqE,8lBEOA,WAgBaI,qCAA0B,SAA1BA,wBAA2B17G,QAASuwC,WAAV,OAAwB,WAC3D,IAAM/1D,ON+L2B,SAAxBmhI,sBAAyB38C,OAAQvD,WAAYmgD,eAAgB35H,cACtE,IAAI4rD,WA4BJ,OA3BAmxB,OAASA,OAAO5nF,OAAO,SAAA6nF,OAAK,OAA8B,OAA1BA,MAAM48C,mBAC/BrvI,QAAQ,SAACyyF,OACZ,IAAI68C,gBACEvrI,OAAS0uF,MAAM1uF,SACfk+F,SAAWl+F,OAAOk+F,SAClBstC,YAAc98C,MAAM48C,gBACpBxgB,QAAUp8B,MAAM7iE,KAEF,OAAhB2/G,cAAmD,IAA3BxrI,OAAOu+F,kBAC/BgtC,aAAel/I,OAAO+b,QAAQojI,aAC9BluE,QAAUiuE,aAAa3lI,OAAO,SAAC6lI,YAAaxhI,QACxC,IAAMk9G,aAAel9G,OAAO,GACtBvL,MAAQw/F,SAASipB,cAAczoH,MAC/Bw9F,UAAYmvC,eAAevgB,SAAS3D,cAC1C,GAAIA,gBAAgBj8B,WAAY,CAC5B,IAAMwgD,SAAQ,GAAA78H,OAAMq8E,WAAWi8B,cAAcjrB,YAC7CuvC,YAAYC,UAAYD,YAAYC,cACpCD,YAAYC,UAAYruE,0BAAcouE,YAAYC,UAAWzhI,OAAO,IAChEyH,aAAahT,OAAOoT,IAAItI,QAAUkI,aAAahT,OAAOoT,IAAItI,QAClDkI,aAAahT,OAAOoT,IAAIrjB,WAEpCg9I,YAAYtkB,cAAgBl9G,OAAO,GAEvC,OAAOwhI,aACRnuE,YAGJA,QM5NQ8tE,CAAsB37G,QAAQg/D,SAAUh/D,QAAQ1zB,SAAU0zB,QAAQk8G,gBAC7El8G,QAAQtxB,OAAOwT,mBACnB8d,QAAQ3zB,QAAQopH,OAAhB,GAAAr2G,OAA0BswF,0BAAiBv7C,sBAA3C,KAAA/0C,ODlBkB,SCkBlB,KAAAA,OAAoFmxD,WAAa/1D,UAGxF05D,6BAAc,SAAdA,YAAel0C,QAASuwC,UAAW++B,SAArB,QAEnBtwG,KAAM,4BACN64B,OAAO,GAAAzY,OAAImxD,UAAU+D,MAAd,KAAAl1D,ODrCO,WCsCds1D,SAAU,SAAAA,SAAA18C,MAAgB,IAAZznB,OAAY4rI,+BAAAnkH,KAAA,MACtBznB,QAAUyvB,QAAQk5D,WAAW3oF,OAAOA,OAAOitF,gBAI/Cx+F,KAAM,4BACN64B,OAAO,GAAAzY,OAAImxD,UAAU+D,MAAd,KAAAl1D,ODzCU,aC0CjBs1D,SAAU,SAAAA,SAAAntD,OAAmB,IAAf2mF,UAAeiuC,+BAAA50H,MAAA,MACnB60H,UAAYp8G,QAAQ1zB,SAC1B,GAAI4hG,WAAakuC,UAAW,EAnCf,SAAnBC,iBAAoBnuC,UAAWluE,SACjC,IAAMs8G,UAAYt8G,QAAQovE,WACpBmtC,WAMN,IAAK,IAAM9+I,OALXywG,UAAU1hG,QAAQ,SAAC4hG,SAAUlyG,GACzB,IAAMkgC,GAAE,GAAAhd,OAAMgvF,SAASC,KAAf,KAAAjvF,OAAuBljB,GAC/BqgJ,QAAQngH,KAAM,IAGAkgH,UACR7+I,OAAO8+I,UACTD,UAAU7+I,KAAK+O,QAAQ,SAAAyyF,OAAK,OAAIA,MAAMn0D,kBAC/BwxG,UAAU7+I,MAyBb4+I,CAAiBnuC,UAAWluE,SAC5B,IAAMs7D,KAAOt7D,QAAQs7D,OACrB,GAAIA,KAAK75D,GAAK65D,KAAKp0F,EAAG,CAClB,IAAM2wB,OAAQ,GAAAzY,OAAIswF,0BAAiBn7C,uBAArB,cAAAn1C,OAAwDkwF,QAAQugC,SAAhE,QAAAzwH,OACPswF,0BAAiBn7C,uBADV,cAAAn1C,OAC6CkwF,QAAQmpC,SADrD,MAERpsI,MAAQ2zB,QAAQ3zB,QAChBmwI,aACFjsE,UAAWA,UAAU+D,MACrB72E,IAAK,oBAET4O,MAAM6qF,YAAYslD,aAClBnwI,MAAMipH,uBAAuBz9F,MAAO,WAChC2iH,2BAA2Bx6G,WAC5B,EAAOw8G,aAGdx8G,QAAQiuE,SAASC,YAChB,IAAK,KAAK1hG,QAAQ,SAACxN,MAChBghC,QAAQs7D,KAAKt8F,OAASghC,QAAQs7D,KAAKt8F,MAAMwN,QAAQ,SAAC8oD,MAC9CA,KAAK/kD,QACDojG,YAAa3zE,QAAQg/D,SAAS18E,KAAK,SAAAk2H,MAAI,OAAIA,KAAKiE,sBAI5Dz8G,QAAQ08G,kBAAkBC,QACtBztD,OAAQlvD,QAAQg/D,SAChBj4E,OAAQ,cACRkoE,WAAY,cAMxBjwF,KAAM,4BACN64B,OAAO,GAAAzY,OAAImxD,UAAU+D,MAAd,KAAAl1D,ODjFK,SCkFZs1D,SAAU,SAAAA,SAAAm9C,OAAmB,IAAf/vG,UAAeq6H,+BAAAtqB,MAAA,MACnB+qB,QAAU58G,QAAQs7D,OAClBqJ,aACA+G,oBAEN9uG,OAAO+b,Q7Og5CI,SAAjBkkI,eAAkB/6H,WACpB,IAAMg7H,kBAMN,OALAlgJ,OAAO+b,QAAQmJ,UAAU/O,gBAAgBzD,gBAAgB9C,QAAQ,SAAAqlH,OAA2B,IAAAkrB,MAAA3vE,eAAAykD,MAAA,GAAzB36G,UAAyB6lI,MAAA,GAAd72C,SAAc62C,MAAA,GACpF72C,SAASnsF,YAAckzD,gCAAiBzqE,WACxCs6I,eAAe5lI,WAAagvF,YAG7B42C,e6Ov5CgBD,CAAe/6H,YAAYtV,QAAQ,SAAAwwI,OAA2B,IAAAC,MAAAd,+BAAAa,MAAA,GAAzB9lI,UAAyB+lI,MAAA,GAAd/2C,SAAc+2C,MAAA,GACzEvxC,iBAAiBx0F,WAAagvF,SAASwlC,iCAG3C9uI,OAAO+b,QAAQqnB,QAAQ1zB,UAAUE,QAAQ,SAAA0wI,OAAqB,IAAAC,OAAAhB,+BAAAe,MAAA,GAAnBl+I,KAAmBm+I,OAAA,GAAZluI,MAAYktI,+BAAAgB,OAAA,SAC1D,GAAIluI,MAAO,CACP,IAAMwnG,SAAW/K,iBAAgB,GAAAtsF,OAAInQ,QACjCwnG,WACA9R,UAAU3lG,MAAQy3G,SAClBmmC,QAAQ59I,MAAMwN,QAAQ,SAAA8oD,MAAI,OAAIA,KAAKv6C,QAAQ07F,gBAKvDz2E,QAAQo9G,kBAAoB1xC,iBAC5B1rE,QAAQ24G,WAAah0C,aAIzB3lG,KAAM,4BACN64B,OAAO,GAAAzY,OAAImxD,UAAU+D,MAAd,KAAAl1D,OD5GO,WC6Gds1D,SAAU,SAAAA,YJ8CiB,SAAtB2oE,oBAAuBr9G,SAChC,IAAMs9G,OAASt9G,QAAQzvB,SACjB++F,QAAUtvE,QAAQsvE,UAClBjjG,MAAQ2zB,QAAQ3zB,QAChBs4F,UAAY3kE,QAAQ24G,YACzBc,UAAWC,WAAWltI,QAAQ,SAACxN,MAC5B,IAAIqvG,KACA99F,OACAvR,OAASy6I,WACTprC,KAAOw5B,qBACPt3H,OAAS+sI,OAAOrD,YAEhB5rC,KAAOy5B,sBACPv3H,OAAS+sI,OAAOtD,WAEpB,IAAMnyI,YAAc8xI,mCAAwB35G,QAASzvB,OAAQvR,MAEvD8zE,IAAG,IAAA1zD,OAAOpgB,KAAP,aACTghC,QAAQ8yC,KAtCe,SAAlByqE,kBAAyE,IAAtD3uC,UAAsD9lG,UAAA1D,OAAA,QAAA6L,IAAAnI,UAAA,GAAAA,UAAA,MAAtC00I,SAAsC10I,UAAA1D,OAAA,EAAA0D,UAAA,QAAAmI,EAA5BpJ,YAA4BiB,UAAA1D,OAAA,EAAA0D,UAAA,QAAAmI,EAAfwsI,WAAe30I,UAAA1D,OAAA,EAAA0D,UAAA,QAAAmI,EAC5EtF,OAUN,IAAK,IAAMlO,OATXoK,YAAY2E,QAAQ,SAAC6V,KACjB,IAAM5lB,KAAO4lB,IAAIurB,WAAWnxC,KACxB+3G,SAAW5F,UAAUnyG,MACpB+3G,WACD5F,UAAUnyG,MAAQ+3G,SAAWgpC,SAASn7H,MAE1Co7H,WAAWjpC,SAAUnyF,IAAK5lB,MAC1BkP,IAAIlP,MAAQ,IAEEmyG,UACRnxG,OAAOkO,MACTijG,UAAUnxG,KAAKqtC,gBACR8jE,UAAUnxG,MAGzB,OAAOmxG,UAqBY2uC,CAAgBv9G,QAAQ8yC,KAAM,WACzC,IAAM0lE,KAAOtQ,kBAAae,kBAAmB56B,YAE7C,OADAmqC,KAAKp5I,aAAa4gC,QAAQu4G,YACnBC,MACR3wI,YAAa,SAACo3F,MAAOy+C,UAAWjgJ,KAC/B,IAAMmwC,WAAa8vG,UAAU9vG,WACvBsrG,MAAQhR,kBAAaM,kBAAkBn6B,KAAMzgE,YAC7CgvG,QAAUc,UAAUpiD,KAC1B2D,MAAMqQ,SACF2nB,aAAc3nB,QAAQugC,SACtB3Y,aAAc5nB,QAAQmpC,SACtBloE,UAAS,GAAAnxD,OAAKkwF,QAAQ/+B,WAAbnxD,OAAyBpgB,MAAzBogB,OAAgC3hB,OAExC4O,MAAMA,OACNkE,OAAO2oI,OACPrmB,WACGluB,sBAEHrJ,KAAKshD,WAEd58G,QAAO,IAAA5gB,OAAKpgB,OAAUpC,OAAOwlB,OAAO4d,QAAQ8yC,QInFxCuqE,CAAoBr9G,YAIxBhhC,KAAM,4BACN64B,OAAO,GAAAzY,OAAImxD,UAAU+D,MAAd,KAAAl1D,ODlHK,QCkHL,GAAAA,OACAmxD,UAAU+D,MADV,KAAAl1D,OD5GU,cC8GjBs1D,SAAU,SAAAA,SAAAipE,OAAAC,QAAkC,IAA9B97H,UAA8Bq6H,+BAAAwB,OAAA,MAAft+F,UAAe88F,+BAAAyB,OAAA,MACxC,GAAI97H,UAAW,CACX,IAAMyoF,WN3Ea,SAAtBszC,oBAAuBx+F,UAAWv9B,WAC3C,IAAMyoF,cACN,IAAK,IAAM9sG,OAAO4hD,UACd,MAAOphD,eAAe5B,KAAKgjD,UAAW5hD,KAAM,CACxC,IAAMqgJ,aAAez+F,UAAU5hD,KAC/B8sG,WAAW9sG,KAAOqgJ,aAAah8H,WAIvC,OAAOyoF,WMkEwBszC,CAAoBx+F,UAAWv9B,WAClDke,QAAQ3zB,QAAQopH,OAAhB,GAAAr2G,OAA0BmxD,UAAU+D,MAApC,KAAAl1D,ODhHe,mBCgHuDmrF,gBAK9EvrG,KAAM,4BACN64B,OAAO,GAAAzY,OAAImxD,UAAU+D,MAAd,KAAAl1D,ODtHgB,mBCsHhB,GAAAA,OACAmxD,UAAU+D,MADV,KAAAl1D,ODlHO,WCoHds1D,SAAU,SAAAA,SAAAqpE,OAAAC,QAAqC,IAAjC/tC,gBAAiCksC,+BAAA4B,OAAA,MAAZ/+C,OAAYm9C,+BAAA6B,OAAA,MACrCC,kBAAoBj+G,QAAQk8G,gBAC5BgC,QAAUl+G,QAAQs7D,OAClBx5E,UAAYke,QAAQtxB,OAC1B,GAAIuhG,iBAAmBjR,QAAUk/C,SAAWD,kBAAmB,CAC3Dj+G,QAAQ08G,kBAAkBC,QAASztD,OAAQ8P,OAAQj4E,OAAQ,eAAgBkoE,WAAY,UACvF,IAAM3uE,MAAQ0f,QAAQ3zB,QAAQiU,MAC9B0+E,OAAOxyF,QAAQ,SAAA2xI,KAAG,OAAIA,IAAIC,kBNuCR,SAArBC,mBAAsBr/C,OAAQloF,GAAIwnI,uBAC3Ct/C,OAAOxyF,QAAQ,SAACyyF,OACZ,IAAMs/C,WAAat/C,MAAM1uF,SAAS4X,OAC5BrG,UAAYy8H,sBAAsBtlI,SAAWslI,WAAWznI,IACzDwnI,sBAAsBC,aAAeznI,GACtCmoF,MAAMvwF,SAAWoT,WACjBm9E,MAAMvwF,KAAKoT,aM5CPu8H,CAAmBr/C,OAAQl9E,UAAWmuF,iBACtC3vF,MAAM2vH,OACNjxC,OAAOxyF,QAAQ,SAAC2xI,KACZA,IAAIK,eAAehkI,OAAO2jI,IAAIvjC,WAElCt6F,MAAM4vH,SACNlwG,QAAQy+G,qBN/Hc,SAAzBC,uBAA0B1/C,OAAQ/8E,cAC3C,IAAM08H,+BAoBN,IAAK,IAAMlhJ,OAlBXuhG,OAAOxyF,QAAQ,SAACyyF,OAAU,IAAA2/C,sBAOlB3/C,MAAMqzB,oBALN4B,WAFkB0qB,sBAElB1qB,WACAE,UAHkBwqB,sBAGlBxqB,UACAD,WAJkByqB,sBAIlBzqB,WAIE1nG,UARgBmyH,sBAKlBljD,OALkBkjD,sBAMlBhjD,QAE8BxkF,OAAO,SAAAnI,OAAK,OAAIgT,aAAahT,QAAUgT,aAAahT,OAAOoT,IAAIrjB,OAC7Fy5F,yBAAU31F,WACboxH,WAAYE,UAAWD,YAAY3nH,QAAQ,SAACyC,OACwC,IAAA4vI,sBAA7E58H,aAAahT,QAAUgT,aAAahT,OAAOoT,IAAIrjB,OAASy5F,yBAAU11F,aACjE47I,4BAA4B1vI,SAAW0vI,4BAA4B1vI,YACpE4vI,sBAAAF,4BAA4B1vI,QAAOrF,KAAnCqB,MAAA4zI,sBAAAC,6BAA2CryH,gBAKrCkyH,iCACP1gJ,eAAe5B,KAAKsiJ,4BAA6BlhJ,OACpDkhJ,4BAA4BlhJ,KAA5BqhJ,6BAAuC,IAAIvkI,IAAIokI,4BAA4BlhJ,QAGnF,OAAOkhJ,4BMqGoCD,CAAuB1/C,OAClDl9E,UAAUI,kBAAmB8d,QAAQ++G,iBN0CvB,SAArBC,mBAAsB1jD,KAAM0D,OAAQ48C,gBAC7C58C,OAAOxyF,QAAQ,SAACyyF,OACZ,IAAMo8B,QAAUp8B,MAAM7iE,KAChBwgH,WAEN5sE,eAAesrB,KAAM,SAAC79F,KAClB,IAAMwhJ,QAAUrD,eAAevgB,SAC3B4jB,SACA3jD,KAAK79F,OAASm/I,QAAQn/I,KAAO69F,KAAK79F,KAAKwhJ,QAAQxhJ,MAAQ,MAG/Db,OAAO4M,KAAKozI,SAASx3I,QAAU65F,MAAM3D,KAAKshD,WMpDlCoC,CAAmBd,QAASl/C,OAAQi/C,mBACpCj+G,QAAQ08G,kBAAkBC,QAASztD,OAAQ8P,OAAQj4E,OAAQ,UAAWkoE,WAAY,wLC/I3F,IAAMsP,iBAAK2gD,qBAAAC,UNSa,oBMTbD,qBAAAC,ONUY,oBMVZD,qBAAAC,ONWU,kBMXVD,qBAAAC,ONYI,aMZJD,qBAAAC,ONaS,iBMbTD,qBAAAC,OAAA,mBAAAD,qBAAAC,OAAA,QAQVxvE,cACIluC,KACAv6B,QAVMg4I,qBAAAC,OAAA,aAAAD,qBAAAC,OAAA,cAAAD,qBAAAC,OAAA,eAAAD,qBAAAC,OAAA,YAAAD,qBAAAC,OAAA,aAAAD,qBAAAC,OAAA,yBAAAD,qBAAAC,OAAA,eAoBVxvE,aAAc,SAAAA,aAAA/qE,KAAG,OAAIA,OApBXu6I,ykCCEX,IA8BMlrE,yBAAoB,SAApBA,kBAAqBilB,UAC9B,IAAMl5D,QAAUk5D,SAASl5D,QACnB3zB,MAAQ2zB,QAAQ3zB,QAEtBA,MAAMojG,2BAA0B,eAAArwF,OAAgB4gB,QAAQsvE,UAAU/+B,UAAlC,KAAAnxD,OHrChB,SGqCwE,SAAC0C,WAGrF,GAFWA,UAAU,GAEb,CACJo3E,SAASkmD,mBAAmBlmD,SAASl5D,QAAQtxB,OAAOsT,UAAU+I,MAC9DmuE,SAAS9D,wBACT,IAAMiqD,aAAenmD,SAASl5D,QAAQu7G,aAAa,GACnDriD,SAASomD,0BAA0BD,iBAI3ChzI,MAAMipH,wBAAuB,eAAAl2G,OAAgB4gB,QAAQsvE,UAAU/+B,UAAlC,KAAAnxD,OHhDb,SGgDqE,WAC5E85E,SAASl5D,QAAQ5I,SACG8hE,SAASl5D,QAAQu7G,aAAa,GACtCrkD,YAAY,iBAIjCl3D,QAAQu4G,WAAW/iB,UAAUF,wBAAwBzgE,aAAYE,eAC7D,SAAA/8B,MAAqBunH,8BAAAvnH,KAAA,QAhCY,SAA5BwnH,0BAA6Bx/G,SACtC,IAAMu1D,kBAAoBv1D,QAAQm0D,mBAClCv3F,OAAO+b,QAAQ48E,mBAAmB/oF,QAAQ,SAACsa,OACvC,IAAM0uE,WAAa1uE,MAAM,GACzBkZ,QAAQm2D,mBAARlrF,MAAA+0B,SAA2Bw1D,WAAW/4F,MAA/B2iB,OAAAqgI,kCAAwCjqD,WAAWlwE,YAE9D0a,QAAQm0D,sBA4BIqrD,CAA0BtmD,UA3CR,SAArBwmD,mBAAsB1/G,SAC/B,IAAMs1D,cAAgBt1D,QAAQk0D,eAC9B,IAAK,IAAMz2F,OAAO63F,cACVA,cAAc73F,KAAKixB,wBACZsR,QAAQk0D,eAAez2F,KAwC1BiiJ,CAAmBxmD,ohBC1DnC,IAoCaymD,kBACTC,MAAO,SAAAA,MAACprC,SAAUqrC,mBAAoBp4H,YAClC,IAAMq4H,YAAcr4H,WAAWkH,QACzB9N,SAvCW,SAAnBk/H,iBAAoBvrC,SAAUqrC,mBAAoBp4H,YACpD,IACM1F,QAAU89H,mBAAmB,GAAG79H,UAChCg+H,aAAev4H,WAAWkH,QAAQ9N,SAClC6G,kBAAoBD,WAAWC,kBAC/BrY,OAAS0S,QAAQ1S,OACjBwpF,SAAW2b,SAAS9lG,OAAOwT,kBAC3BxT,KAAOqT,QAAQrT,KA0BrB,OAzB2B8lG,SAASp4E,OAAS3U,WAAWlB,SAGzCy5H,aAEuB,OAAtBt4H,kBAA8BrY,OAAO8G,OAAO,SAACC,IAAKxK,IAAKjG,OAC/D,IAAIV,MACEgK,MAAQrD,IAAInP,KACZypG,SAAWrN,SAAS5pF,OAEpBgxI,aADO/5C,WAAaA,SAAS7jF,IAAItI,QAAUmsF,SAAS7jF,IAAItI,QAAUmsF,SAAS7jF,IAAIrjB,SACxDiuE,gCAAiB1qE,YAE9C,OAAK2jG,UAODjhG,MAHCg7I,YAGOvxI,KAAK/C,IAAI,SAAAnP,GAAC,OAAIA,EAAEmJ,UAFf4B,KAAKsQ,IAAL5M,MAAA1D,KAAI24I,oCAAQxxI,KAAK/C,IAAI,SAAAnP,GAAC,OAAIA,EAAEmJ,WAAU4B,KAAKwQ,IAAL9M,MAAA1D,KAAI24I,oCAAQxxI,KAAK/C,IAAI,SAAAnP,GAAC,OAAIA,EAAEmJ,YAI/EyQ,IAAInH,OAAShK,MACNmR,KATIA,SAUN,KAQQ2pI,CAAiBvrC,SAAUqrC,mBAAoBp4H,YAC1DkH,QAAU/xB,OAAO4T,UAAWsvI,aAElC,OADAnxH,QAAQ9N,SAAWA,SACZ8N,SAGXwxH,UAAW,SAAAA,UAAC3rC,SAAUqrC,mBAAoBp4H,YACtC,IAAMq4H,YAAcr4H,WAAWkH,QACzBjH,kBAAoBD,WAAWC,kBAC/B3F,QAAU89H,mBAAmB,GAAG79H,UAClC3S,OAAS0S,QAAQ1S,OACfsf,QAAU/xB,OAAO4T,UAAWsvI,aAClCzwI,OAAS0S,QAAQ1S,OACjB,IAAMX,KAAOqT,QAAQrT,KACfm8F,aAAex7F,OAAO1D,IAAI,SAAAnP,GAAC,OAAIA,EAAEC,OAIvC,OAHAkyB,QAAQ9N,UAAY6G,mBAAqBm4H,mBAAmB,GAAGz1C,UAAY,MACtES,cADczrF,OAAA8gI,oCACGxxI,OACtBigB,QAAQk8E,aAAenjF,kBAAoBA,kBAAkB2I,YAAY1kB,IAAI,SAAAnP,GAAC,OAAIA,EAAEC,UAC7EkyB,wgBCzDf,IAyBayxH,gCAAkB,SAAlBA,gBAAmB5rC,SAAUztF,QAAwB,IAC1D0rE,gBAD0CliF,OAAgBzH,UAAA1D,OAAA,QAAA6L,IAAAnI,UAAA,GAAAA,UAAA,MAExD6lB,QAAUpe,OAAOoe,QACjB6jE,aAAejiF,OAAOiiF,aACtB6tD,oBAAsB9vI,OAAO+vI,kBAAkBv5H,YAC/Cu5H,kBAAoBD,oBAAoB/zI,WACxCisB,OAAS8nH,oBAAoB9nH,OAC7B1X,SAAW8N,QAAQ9N,SACnBmf,QAAUw0E,SAASx0E,QACnBle,UAAYke,QAAQu7G,aAAa,GACjCh1H,SAAWyZ,QAAQ5D,KACnBmkH,aAAe/rC,SAAShjB,cACxBuB,mBAAqByhB,SAASxgB,oBAC9BwsD,YAAchuD,aAAaN,YAAY5xE,MACvC2B,aAAeH,UAAUI,kBAC/ByM,QAAQ8xH,WAAal6H,SACrBoI,QAAQ5H,OAASA,OACjB4H,QAAQ+xH,aAAe1gH,QAAQ2gH,cAC/B,IACMC,qBAD0BpsC,SAAS5gB,yBACY7sE,SAAWA,OAE5D85H,cACa,OAAbhgI,SACA4xE,gBAAkB,KACX5/D,eAAehS,WACtBggI,WAAajkJ,OAAO4M,KAAKqX,cACzB4xE,gBAAkB+tD,YAAcA,YAAYnvH,QAAQwvH,YAAc,OAElEA,WAAahgI,SAAS,GACtB4xE,gBAAkB+tD,YAAcA,YAAYnvH,QAAQwvH,YAAc,MAGtE,IAAMC,cAAgB9gH,QAAQ8gH,gBAC9B,GAAwB,OAApBruD,iBAA4B6tD,kBAAkBl7I,OAAQ,CACtD,IAAMkH,OAASmmF,gBAAgBzwE,UAAU3S,OAAO1D,IAAI,SAAAnP,GAAC,OAAIA,EAAEC,OAC3Dg2F,gBA5DsB,SAAxBsuD,sBAAyBjqI,GAAIpI,MAC/B,IAAMqT,QAAUjL,GAAGkL,UACbg/H,QAAUj/H,QAAQ1S,OAClB4xI,MAAQl/H,QAAQrT,KAChBosI,YACAoG,QAAUxyI,KAAK,GAAG/C,IAAI,SAAAnP,GAAC,OACzBC,KAAI,GAAA2iB,OAAK5iB,GACTwC,KAAMy5F,yBAAU11F,aAEdo+I,MAAQzyI,KAAK,GAanB,OAXAuyI,MAAMz0I,QAAQ,SAAChQ,GACX,IAAMkX,SACNstI,QAAQx0I,QAAQ,SAACZ,IAAK1P,GAClBwX,MAAM9H,IAAInP,MAAQD,EAAEN,KAExBglJ,QAAQ10I,QAAQ,SAACZ,IAAK1P,GAClBwX,MAAM9H,IAAInP,MAAQ0kJ,MAAMjlJ,KAE5B4+I,SAASlxI,KAAK8J,SAGX,IAAI1R,oBAAU84I,YAAd17H,OAAAgiI,kCAA4BJ,SAA5BI,kCAAwCF,WAsCzBH,CAAsBtuD,gBAAiBquD,eACzDD,WAAatoH,UAAMnZ,OAAAgiI,kCAAO90I,QAAP80I,kCAAkBd,oBAAqBA,kBAC1D7tD,gBAAkBA,gBAAgBphE,QAAQwvH,YAG9C,IAAIr6H,6BAA8B,EAC9Bq6H,WAAWz7I,QAAUy7I,WAAWt+H,MAAM,SAAAtT,OAAK,OAAIgT,aAAahT,QAC5DgT,aAAahT,OAAOoT,IAAIrjB,OAASy5F,yBAAU31F,YAC3C0jB,6BAA8B,GAGlC,IAAM66H,QAAUrhH,QAAQ2gH,cACxBhyH,QAAQ5H,OAASA,OACjB,IAAMu6H,kBAAoB9sC,SAASphB,SAASC,YAAYutD,sBAClDlyH,kBAAkB4yH,mBAAoBA,kBAAkBh4H,YAAY4sE,UAEpExjF,SAAW,SAAXA,SAAYoU,MAAOy6H,iBACrB,IAAM1sD,QAAU9B,mBAAmBjsE,MAAMvW,OAAOwW,QAC1CmvE,SAAUpvE,MAAMvW,OAAO8wI,SACzBxsD,QAAQvyE,KAAK,SAAA9lB,GAAC,OAAI+jJ,aAAa/jJ,EAAEC,MAAQD,GAAG8sB,YAAY4sE,YAC5D,OAAOpvE,MAAMvW,OAAO8wI,UAAYE,gBAAgBF,SAAWnrD,SAGzDsrD,gBAAkBhtC,SAASphB,SAASC,YAAYtsE,QAChDmvE,UAAUsrD,iBAAkBA,gBAAgBl4H,YAAY4sE,UAC1DzuE,YACAkH,gBACA5H,cACAlG,SAAU4xE,gBACV/jE,gBAAiBwnE,QACjB1vE,wDACA66H,gBACA96H,SAAU2vE,QAAUmrD,QAAU96H,SAC9B7T,kBACA+uI,QAAS,SAAAA,QAACC,SAAUxoD,UAAX,OAAyBnyE,SAAW65H,sBACzCc,SAAS/yH,QAAQ+xH,eAAiBxnD,SAASl5D,QAAQ2gH,gBAG3D7+H,UAAUu0E,UAAU5D,gBAAiBhrE,YAAY,GAE7CV,SAAW65H,uBACXn5H,YACIkH,gBACApI,SAAUmI,gBAAkB2yH,QAAU96H,SACtC1F,SAAU4xE,gBACV/jE,gCACAlI,wDACAO,OAAQ65H,qBACRS,gBACAl6H,cAAeJ,SAAW65H,qBAC1Ba,QAAS,SAAAA,QAACC,SAAUxoD,UAAX,OAAwBwoD,SAAS/yH,QAAQ+xH,eAAiBxnD,SAASl5D,QAAQ2gH,eACpFjuI,mBAGJoP,UAAUu0E,UAAU5D,gBAAiBhrE,YAAY,GAC7CqH,sBAAuB,SAAAA,sBAAC7H,UAAW06H,SAAZ,OAAwB16H,UAAUo6H,UAAYM,QAAQN,qlDC3GpEO,0CACjB,SAAAA,eAAwB,IAAA/3C,iBAAAjxF,iKAAAipI,CAAAn+I,KAAAk+I,cAAA,QAAA51E,KAAAljE,UAAA1D,OAARkgB,OAAQ,IAAA/Y,MAAAy/D,MAAAC,KAAA,EAAAA,KAAAD,KAAAC,OAAR3mD,OAAQ2mD,MAAAnjE,UAAAmjE,MAAA,OACpBrzD,kLAAAkpI,CAAAp+I,MAAAmmG,iBAAAk4C,wBAAAH,eAAAvlJ,KAAA4O,MAAA4+F,kBAAAnmG,MAAA0b,OAASkG,UACT2uD,yBAAkB+tE,8DAAAppI,SAFEA,gYADci6E,qTAM3B8C,UAAWhnE,QAAS6jE,aAAchB,aACzC4uD,gCAAgB18I,KAAMiyF,WAClBhnE,gBACA6jE,0BACAhB,wBACA8uD,kBAAmB58I,KAAK+vF,+FAINjC,YAAa7iE,QAASxI,gBAC5C,IAAM6Z,QAAUt8B,KAAKs8B,QACfiiH,OAASjiH,QAAQ5D,KACjB8lH,UAAYliH,QAAQ2gH,cACpBwB,wBAA0Bh8H,eAAe25H,aAAe35H,eAAe25H,YAAYY,aACnF0B,aAAej8H,eAAe25H,aAAe35H,eAAe25H,YAAYW,WACxE4B,kBAAoB3+I,KAAKgwF,mBACzB4uD,oBAAsB5+I,KAAK8tF,cAC3B+wD,gBAAiBH,cAAeA,eAAiBH,OAEjDtrD,sBAAwBhoE,QAAQ6iE,cAClCqD,QAASlmE,QAAQ6iE,YACjBuD,YAAapmE,QAAQ5H,UACpByqE,YAoBL,OAnBAmF,sBAAsBnqF,QAAQ,SAAChQ,GAC3B,IAAIgmJ,cAAgBhmJ,EAAEq4F,QACtB2tD,cAAgBA,cAAcprI,OAAO,SAACqrI,IAElC,GADgBH,oBAAoBG,GAAGhmJ,MAAQgmJ,IAAIn5H,YAAY4sE,YACb,IAAnC/vE,eAAeuI,gBAC1B,OAAO,EAEX,IAAK6zH,gBAAuC,OAArB5zH,QAAQ9N,SAAmB,CAC9C,IAAM6hI,kBAAoBL,kBAAkBI,GAAGhmJ,MAAQgmJ,IACvD,OAAOC,mBAAoBA,kBAAkBv8H,eAAe25H,YAAa9/G,SAE7E,OAAImiH,0BAA4BD,YAAaK,iBACb,IAArBE,GAAGt7H,gBAKlB3qB,EAAEq4F,QAAU2tD,gBAET7rD,4FAGaN,WACpB,OAAqB,IAAdA,kFAGe,IAAAv9E,OAAApV,KACtB,OAAO,SAACgL,KAAM6B,QACV,IAAIwpF,sBAAuB,EACvBrrE,iBAAkB,EAChBoxH,YAAcvvI,OAAOoe,QACrBjH,kBAAoBnX,OAAOmX,kBAC3Bi7H,UAAYpyI,OAAOkxI,QACnB16H,OAASxW,OAAOwW,OAChB67H,UAAYjD,iBAAiB54H,SAAW44H,iBAAiBQ,UAE/D,GAAIz4H,kBAAmB,CACnB,IAAMzF,aAAeyF,kBAAkBxF,kBACjC2gI,uBAAyBjmJ,OAAO4M,KAAKyY,cACrC4+H,WAAajkJ,OAAO4M,KAAKkF,KAAK,GAAGwT,mBAClCtlB,OAAOwlB,OAAOH,cAAcK,KAAK,SAAA9lB,GAAC,OAAIA,EAAE6lB,IAAIrjB,OAASy5F,yBAAU31F,YAChEi3F,qBAAuB8oD,uBAAuBvgI,KAAK,SAAA9lB,GAAC,OAA+B,IAA3BqkJ,WAAWl3I,QAAQnN,MAInF,IAAMmyB,QAAUi0H,UAAU9pI,OAAKknB,QAAStxB,KAAM6B,QACxCuyI,iBAAmBhqI,OAAK+6E,kBACxBnhF,SAAWowI,iBAAiB/7H,SAAW+7H,iBAAiB,KAC1DrB,SAAU,EAUd,GARI/uI,WACA+uI,QAAU/uI,SAASotI,gBAAmBhnI,OAAKknB,UAG3C2iH,YACAlB,QAAUkB,UAAUpyI,OAAQuI,UAAqB,IAAZ2oI,SAGrCA,QAAS,CACT,IAAM5sD,QAAU/7E,OAAKk7E,oBAAoBjtE,QACnCu7H,oBAAsBxpI,OAAK04E,cACjC9iE,gBAAkBne,OAAO8wI,QACrBxsD,QAAQvyE,KAAK,SAAA9lB,GAAC,OAAI8lJ,oBAAoB9lJ,EAAEC,MAAQD,GAAG8sB,YAAY4sE,YAAa3lF,OAAOme,gBAEvF,IAAMvI,gBACFkwE,WAAW,EACX3nF,UACAoxI,wBACAp4H,oCACAhB,YAAY,EACZqzE,0CACAxzE,SAAUhW,OAAO+V,oBACjBoI,gBAAiBne,OAAOme,iBAG5B5V,OAAKo7E,eAAentE,SAChB4H,gBACAxI,8BACAuI,iCAEJ5V,OAAKu+E,kBAAkBtwE,OAAQ4H,QAASxI,oFAK9B4uE,YAClB,IAAMrmF,KAAOhL,KAAKs8B,QAAQtxB,OAI1B,OAHIA,MACAhL,KAAK07I,mBAAmB1wI,KAAKsT,UAAU+I,KAAMgqE,YAE1CrxF,2EAOP,OAHIA,KAAKs8B,QAAQtxB,QACbq0I,aAAAhB,wBAAAH,aAAA5jJ,WAAA,wBAAA0F,MAAArH,KAAAqH,MAEGA,6CAKP,OADAA,KAAKs8B,QAAQu7G,aAAa,GAAGrkD,YAAY,eAClCxzF,uuDClGf,IAYqBs/I,kCAQjB,SAAAA,WAAazzC,SAAUnwG,cAAc,IAAAwZ,MAAAlV,+JAAAu/I,CAAAv/I,KAAAs/I,YACjCt/I,KAAK2lF,IAAMp7E,cACXvK,KAAKm4G,cAAgBz8G,aACrBsE,KAAK60I,YACD/iB,UAAW,IAAI9kD,mBAAJwyE,8BACNruF,aAAYE,eAAgB,IAEjC5xB,WAAY/jC,aAAa+jC,WACzBggH,iBAAkB/jJ,aAAa+jJ,kBAEnCz/I,KAAK81I,iBAAmB,KACxB91I,KAAK61I,iBAAmB,IAAI5qD,QAAQ,SAAC7hE,SACjClU,MAAK4gI,iBAAmB1sH,UAE5BwsH,oBAAoB51I,MACpBA,KAAK60I,WAAW/iB,UAAUF,wBAAwBzgE,aAAYE,eAAgB,WAC1En8C,MAAK4gI,mBACL5gI,MAAK8jI,kBAAkBC,QAASztD,OAAQt2E,MAAKomF,SAAUj4E,OAAQ,QAASkoE,WAAY,YAGxFvrF,KAAKg5I,kBAAoBt9I,aAAa+jJ,iBACtCz/I,KAAK0rG,cACL1rG,KAAK0/I,uBACL1/I,KAAK2/I,uBACL3/I,KAAK+2I,cACL/2I,KAAKg3I,cACLh3I,KAAK4/I,oBACL5/I,KAAKw4I,mBACLx4I,KAAK6/I,0BACLrb,kBAAaG,iBAAiB94B,SAASpB,eACvCl8B,sBAAsBvuE,KAAM66F,iBAC5B76F,KAAK6rG,SAASA,UACd7rG,KAAK63I,6SAiBL,GAAIzyI,UAAO1D,OAAQ,CACf1B,KAAK+yH,OAAL3tH,UAAA1D,QAAA,OAAA6L,EAAAnI,UAAA,GACA,IAAMwmG,QAAU5rG,KAAK4rG,UACrB5rG,KAAK2I,QAAQksB,OAAb,GAAAnZ,OAAuBswF,0BAAiBt7C,sBAAxC8uF,8BAAA,GAAA9jI,OACQkwF,QAAQ/+B,WAAc,OAE9B,IAAMmmD,QAAO,GAAAt3G,OAAMswF,0BAAiBt7C,qBAAvB,KAAAh1C,OAA+CkwF,QAAQ/+B,WAgBpE,OAfAU,wBAAWvtE,KAAM8/I,kBAAc9/I,KAAK2I,QAAQiU,OACxCiwD,UAAWmmD,UAEfziD,+BAAkBvwE,KAAMwwE,8BACpBI,MAAOoiD,QACPM,OAAQtnB,0BAAiBv7C,wBAEzB07E,SAAUvgC,QAAQugC,SAClB4I,SAAUnpC,QAAQmpC,WAEtB/0I,KAAKw1F,SAAS,IAAI0oD,sBAAal+I,MAC3B4vF,SAAUyE,gBACV1E,YAAakE,4BACb/C,uBAAwBuC,oBACzBvF,6BAAauB,0CACTrvF,KAEX,OAAOA,KAAK+yH,mDAyBZ,OAAI3tH,UAAS1D,QACT1B,KAAK+/I,UAAL36I,UAAA1D,QAAA,OAAA6L,EAAAnI,UAAA,GACOpF,MAEJA,KAAK+/I,0CAUZ,OAAO//I,KAAK2lF,kDAKZ,OADA3lF,KAAK+yH,OAAOn2G,MAAM2vH,OACXvsI,uDAKP,OADAA,KAAK+yH,OAAOn2G,MAAM4vH,SACXxsI,iEAIP,OAAIoF,UAAO1D,OACA1B,KAEJA,KAAK05I,wDAQR/gH,WACJ,IAAM9rB,OAAS7M,KAAK6M,SACZi0B,UAA8Dj0B,OAA9Di0B,UAAWi7D,aAAmDlvF,OAAnDkvF,aAAc07C,oBAAqC5qI,OAArC4qI,oBAAqBz7C,YAAgBnvF,OAAhBmvF,YAChDiI,mBAAqBn4B,sBAAsBiwB,aAAc/7F,KAAK04B,KAAM7rB,OAAOmvF,aAC3EvgE,MAAQz7B,KAAKy7B,QACbC,OAAS17B,KAAK07B,SACdo7F,mBAAqB/uC,6BAAcpvD,WAAWgB,MAAM,WAAY,YAEtE35B,KAAKggJ,SAAWh4D,YAAY8uC,mBAAoB,OAAQ,MAAOh2F,WAC9CnH,MAAM,QADP,GAAAje,OACmB+f,MADnB,OAC8B9B,MAAM,SADpC,GAAAje,OACiDggB,OADjD,OAGhB,IAAMjL,KAAOzwB,KAAKggJ,SAASvvH,OAC3Bq4D,wBAASr4D,MACLgL,YACAC,cACAukH,MAAOh8C,mBAAmBlhG,KAAK,OVJP,SAAvBm9I,qBAAwB5jH,QAAS3D,WAC1C,IACMqjE,YADS1/D,QAAQzvB,SACImvF,YACrBs6C,UAAYh6G,QAAQy6G,WACpBR,UAAYj6G,QAAQ06G,WAEpBmJ,oBAAsBn4D,YAAYrvD,UAAW,KAAM,GAAlB,GAAAjd,OAAyBsgF,YAAzB,KAAAtgF,ODrNV,wBCsN3B46H,UAAD,GAAA56H,OAAesgF,YAAf,KAAAtgF,ODxNuC,gBCyN/B66H,UAAD,GAAA76H,OAAesgF,YAAf,KAAAtgF,ODxNgC,gBCwN+B5S,QAAQ,SAACsa,OAAU,IAAAg9H,OAAAC,yBACxCj9H,MADwC,GACvE8nF,UADuEk1C,OAAA,GAC5DE,iBAD4DF,OAAA,GAExEnqH,WAAa+xD,YAAYm4D,oBAAqB,KAAM,GAA5B,IAAAzkI,OAAoC4kI,mBAC5Dx/G,UAAS,GAAAplB,OAAM4kI,iBAAN,UACft4D,YAAY/xD,WAAY,IAAKi1E,UAAlB,IAAAxvF,OAAiColB,YACxCxL,OAAQ,SAAAA,OAACqqB,MAAOmxD,UACZA,SAASqe,WAAYluB,UAAW3kE,QAAQ24G,aAAcvhH,MAAMisB,MAAMlvB,aURlFyvH,CAAqBlgJ,KAAMywB,MZmCP,SAAf8vH,aAAgBjkH,QAAS3D,UAAW2iE,OAAQgE,aACrDhjE,QAAQ08G,kBAAkBC,QAASztD,OAAQ8P,OAAQj4E,OAAQ,aAAckoE,WAAY,UACrF,IACMyQ,YADS1/D,QAAQzvB,SACImvF,YACrBwkD,cAAgBlkH,QAAQg/D,SAASpoF,KAAK,SAACtY,EAAGwI,GAAJ,OAAUxI,EAAEiS,SAASga,MAAQzjB,EAAEyJ,SAASga,QAC9E45H,iBAAmBz4D,YAAYrvD,UAAW,KAAM,GAAlB,GAAAjd,OAAyBsgF,YAAzB,iBAC9B0kD,cAAgBx0E,mBAAmB5vC,QAAQqkH,gBAC3CrlE,UACN0M,YAAYy4D,iBAAkB,IAAKD,cAAe,MAC9ClrH,OAAQ,SAAAA,OAACqqB,MAAO47C,OACZjgB,OAAOigB,MAAMq3B,UACTjzE,YACA47C,gBAIKmlD,cAAcz4I,IAAI,SAAAlP,MAAI,OAAIuiF,OAAOviF,QACzC+P,QAAQ,SAAC7P,GACd,IAAMsiG,MAAQtiG,EAAEsiG,MACV57C,MAAQ1mD,EAAE0mD,MAChB47C,MAAM+D,YAAYA,aAClB/D,MAAM4zB,WACFluB,UAAW3kE,QAAQ24G,cAEG,IAA1B15C,MAAM1uF,SAAS03F,QAAoBhJ,MAAM7nE,MAAMisB,MAAMlvB,UY1DrD8vH,CAAavgJ,KAAMywB,KAAMzwB,KAAKs7F,UAC1B7/D,YACAC,gBAEJ17B,KAAK4gJ,iBZyGwB,SAAxBC,sBAAyBloH,UAAWmI,WAAZ,OAA0BknD,YAAYrvD,UAAW,KAAM,GAAImI,WAAWrQ,OYzG3EowH,CAAsBpwH,KAAD,GAAA/U,OAAUsgF,YAAV,KAAAtgF,OAAyB+7H,sBACtE,IAAMjiD,SAAWx1F,KAAKw1F,WAEtB,OJ7NuB,SAAlBsrD,gBAAmBhzD,YAAa0H,UACzC,IAAK,IAAMz7F,OAAO+zF,iBACPvzF,eAAe5B,KAAKm1F,YAAa/zF,OACpC+zF,YAAY/zF,eAAgB2hG,+BAAuB5N,YAAY/zF,KAAKqiG,eAAe,WAE/E,OADgB5G,SAASl5D,QACVm9D,sBAEnB3L,YAAY/zF,KAAK+gG,YAAYtF,SAASl5D,QAAQw+D,gBIqNlDgmD,CAAgBtrD,SAAS1H,cAAe0H,UACjCx1F,yCAIP,OAAOA,KAAK61I,uEAaZ,OADA71I,KAAKu8B,QAAS,EACPv8B,yDAaP,OAFAA,KAAKu8B,QAAS,EACdv8B,KAAK63I,YAAY73I,KAAK63I,aAAa,KAC5B73I,mEAwBP,IAAM+gJ,QAAU/gJ,KAAKggJ,UAAYhgJ,KAAKggJ,SAASvvH,OACzCgL,MAAQz7B,KAAKy7B,QACbC,OAAS17B,KAAK07B,SAHHslH,sBAIUhhJ,KAAKihJ,qBAAxB39C,GAJS09C,sBAIT19C,GAAIz6E,WAJKm4H,sBAILn4H,WACZ,OACI26E,cAAexjG,KAAK0zB,QACpBsmE,aAAc+mD,QACdtlH,YACAC,cACAmgE,gBAAiB77F,KAAK4gJ,iBACtBhnH,gBAAiB0pE,GACjBqE,0BAA2B9+E,WAC3BogF,QAAS,EACT2H,QAAS,iDAUb,OACItV,OAAQt7F,KAAKs7F,SAASrzF,IAAI,SAAAszF,OAAK,OAAIA,MAAM7uE,cACzC7f,OAAQ7M,KAAK6M,SACb+qF,KAAM53F,KAAK43F,OAAO3vF,IAAI,SAAA2pD,MAAI,OAAIA,KAAKllC,qDAKvC,OAAItnB,UAAM1D,QACN1B,KAAKkjG,OAAL99F,UAAA1D,QAAA,OAAA6L,EAAAnI,UAAA,GACApF,KAAKukG,OAALn/F,UAAA1D,QAAA,OAAA6L,EAAAnI,UAAA,IACApF,KAAKw1F,WAAWjC,yBACTvzF,MAEJA,KAAKkjG,iDAyBNg+C,iBAAiB,IAAA92E,MAAAvmD,MAAAzO,OAAApV,KACjBmhJ,iBAAmB7L,wBAAiBrgH,QAAQisH,kBAE5CtI,UAAY54I,KAAK0rG,WACjBmtC,WACAlwI,OACF2yF,UACA8lD,YACIrpI,KAAM/X,OAGVqhJ,WAAa,EACbC,YAAal3E,UAAG1uD,OAAHnU,MAAA6iE,MAAAm3E,8BAAaroJ,OAAOwlB,OAAO1e,KAAK0rG,cAAahqG,OACxDkqG,QAAU5rG,KAAK4rG,UACfz3E,MAAQn0B,KAAK4/I,iBACbtkD,OAAS6lD,iBAAiBjuI,KAAK,SAACtY,EAAGwI,GAAJ,OAAUxI,EAAEisB,MAAQzjB,EAAEyjB,QAAOpU,OAAO,SAAC+uI,UAAW92C,UAAa,IAAA+2C,WACxFv3G,WAAawgE,SAAS/rF,IACtB+iI,OAASx3G,WAAWnxC,KACpB4oJ,OAAS1sH,QAAQiV,YACjBqsC,cACNorE,OAAO74I,QAAQ,SAAC6V,KACZA,IAAIkI,MAAQ6jF,SAAS7jF,MAAQw6H,WAC7B,IAAMx0E,UAAS,GAAAnxD,OAAMkwF,QAAQ/+B,WAAdnxD,OAA0B4lI,YACpC1I,UAAU8I,UACXJ,cACmC,IAA/Bp3G,WAAWkhE,kBACXj3E,MAAK,GAAAzY,OAAIswF,0BAAiBp7C,uBAArB,KAAAl1C,OPlWP,SOkWO,KAAAA,OAAyDmxD,aAAe,IAGrF0J,WAAWrwE,KAAK2mE,aAEpBw0E,YAAcM,OAAOjgJ,OACrB,IAAMwpG,UAAYypC,uBAAgBv/H,OAAM80B,WAAY0uG,UAAU8I,QAASnrE,YACvE5tE,MAAM2yF,OAASpiG,OAAO4T,OAAOnE,MAAM2yF,OAAQ4P,WAC3C,IAAM02C,eAAiB1oJ,OAAOwlB,OAAOwsF,WAIrC,OAHAs2C,WAAYC,WAAAD,WAAU9lI,OAAVnU,MAAAk6I,WAAAF,8BAAoBK,iBAChChJ,UAAU8I,QAAUE,eACpB/I,QAAQ6I,QAAUA,OACXF,eAGX74I,MAAMoP,KAAO/X,KACb,IAAM6hJ,aACAL,WAAY39H,UAAGnI,OAAHnU,MAAAsc,MAAA09H,8BAAaroJ,OAAOwlB,OAAO1e,KAAK0rG,cAElD81C,UAAU14I,QAAQ,SAACyyF,OACf,IAAMq3B,MAAQr3B,MAAMq3B,QACpBjqH,MAAM2yF,OAAOs3B,OAASr3B,MACtBsmD,UAAUjvB,YAEdt3B,OAAOxyF,QAAQ,SAACyyF,OACZ,IAAM85C,OAASH,yBAAyB35C,MAAO5yF,OAC/Ck5I,UAAUtmD,MAAMq3B,SAAWyiB,SAG/Br1I,KAAK2gJ,eAAiBkB,UACtB7hJ,KAAKw4I,gBAAkBt/I,OAAO4T,OAAO9M,KAAKw4I,gBZrMjB,SAApBsJ,kBAAqBxmD,OAAQ1yF,QACtC,IAAMsvI,kBAgBN,OAfA58C,OAAOxyF,QAAQ,SAACyyF,OAAU,IAAAwmD,cACKxmD,MAAM1uF,SAAzB+kD,KADcmwF,cACdnwF,KAAMm5C,SADQg3C,cACRh3C,SACRryE,GAAK6iE,MAAM7iE,MAChB,IAAK,KAAK5vB,QAAQ,SAACxN,MAChB,IAAI2G,MACEsJ,MAAQ0gE,aAAac,WAAWnb,KAAMt2D,MAAOyvG,SAASzvG,OAASyvG,SAASzvG,MAAMiQ,OAEhFtJ,MADA2G,OAAOtN,MACCsN,OAAOtN,MAAM8qB,UAAU,SAAA4iF,WAAS,OAA+C,IAA3CA,UAAU/Q,aAAahyF,QAAQsF,SAEnE,GAEX2sI,eAAex/G,MAAQw/G,eAAex/G,QACvCw/G,eAAex/G,IAAIp9B,MAAQ2G,UAG5Bi2I,eYoLwD4J,CAAkBxmD,OAAQt7F,KAAK4I,WAC1F,IAAMo5I,WAAahiJ,KAAK2I,QAYxB,OAVAq5I,WAAWxuD,aACPz5F,IAAK,0BACL8yE,UAAS,GAAAnxD,OAAKswF,0BAAiBt7C,qBAAtB,KAAAh1C,OAA8CkwF,QAAQ/+B,aAEnEm1E,WAAWj2C,0BAA0B7yG,OAAO4M,KAAKquB,OAAQ6jH,qCAAwBh4I,KAAM4rG,QAAQ/+B,YAC3F,GACI9yE,IAAK,0BACL8yE,UAAS,GAAAnxD,OAAKswF,0BAAiBt7C,qBAAtB,KAAAh1C,OAA8CkwF,QAAQ/+B,aAEvE7sE,KAAKs7F,OAAOkmD,WACLlmD,+CAUP,IAAMmkD,iBAAmBz/I,KAAKm4G,cAAcsnC,iBAY5C,OAXAA,iBAAiBxG,QAASztD,OAAQxrF,KAAMqjB,OAAQ,eAAgBkoE,WAAY,SAC5EvrF,KAAK2I,QAAQ6qF,aACT3mB,UAAS,GAAAnxD,OAAKswF,0BAAiBt7C,qBAAtB,KAAAh1C,OAA8C1b,KAAK4rG,UAAU/+B,aAE1Ekb,6BAAc/nF,KAAK0zB,SAAS0T,SAC5BpnC,KAAKw1F,WAAWpuD,SAEhBq4G,iBAAiBxG,QAASztD,OAAQxrF,KAAKs7F,SAAUj4E,OAAQ,eAAgBkoE,WAAY,UACrFvrF,KAAKs7F,SAASxyF,QAAQ,SAAAyyF,OAAK,OAAIA,MAAMn0D,WACrCq4G,iBAAiBxG,QAASztD,OAAQxrF,KAAKs7F,SAAUj4E,OAAQ,UAAWkoE,WAAY,UAChFk0D,iBAAiBxG,QAASztD,OAAQxrF,KAAMqjB,OAAQ,UAAWkoE,WAAY,SAChEvrF,qFAUkBuiB,YAAa5oB,KAAMsoJ,aAC5C,GAAoB,OAAhB1/H,YACA,OAAO,KAEX,IAAMnE,UAAY6jI,aAAejiJ,KAAKgL,OACtC,OAAOklE,yCAA4B9xD,UAAWmE,YAAa5oB,oDAY3D,OADAqG,KAAKgL,KAAKhL,KAAK63I,aAAa,IACrB73I,2DAUP,OACIghG,oBAAqBhhG,KAAK+6I,qBAC1BnyI,OAAQ5I,KAAK4I,SACboC,KAAMhL,KAAKgL,OACX4sF,KAAM53F,KAAK43F,sFAUU,IAAA+Q,aACa3oG,KAAK6M,SAAnCmvF,YADiB2M,aACjB3M,YAAaD,aADI4M,aACJ5M,aACrB,OAAO,IAAArgF,OAAKsgF,YAAL,KAAAtgF,OAAoBqgF,uEAYdzgG,MAEb,OADem6I,YAAYz1I,KAAKs7F,SAAU,OAAQhgG,4DAatCvC,MAEZ,OADe08I,YAAYz1I,KAAKs7F,SAAU,OAAQviG,MACpC,2DA2BDglC,EAAGv6B,EAAGqJ,QACnB,IAAIsnH,UACAz7F,GAAI,MAEFwpH,SZvQ4B,SAA7BC,2BAA8B7lH,QAAS+F,UAChD,IAAMz5B,OAAS0zB,QAAQ1zB,SACvB,IAAKA,OAAOm1B,EAAEr8B,SAAWkH,OAAOpF,EAAE9B,OAC9B,OAAO,KAEX,IAAMsJ,KAAOsxB,QAAQtxB,OACf4sF,KAAOt7D,QAAQs7D,OACfr5E,aAAevT,KAAKwT,kBACpBw5E,OAASjrB,WAAWnkE,OAAQ,IAAK,GAAGqvF,aAAa,GACjDC,OAASnrB,WAAWnkE,OAAQ,IAAK,GAAGqvF,aAAa,GACjDE,WAAa55E,aAAay5E,QAAQr5E,IAAItI,QACtC+hF,WAAa75E,aAAa25E,QAAQv5E,IAAItI,QAEtC+rI,WAAa,IAAKjqD,WAAYH,SAAU,IAAKI,WAAYF,SAAShtE,KAAK,SAAA9H,OAAK,OAC9EA,MAAM,KAAOmmD,gCAAiB1qE,aAAeukB,MAAM,KAAOmmD,gCAAiBzqE,WAE/E,IAAKsjJ,UAAajqD,aAAeM,8BAAev5F,YAAck5F,aAAeK,8BAAev5F,WACxF,OAAO,KAEX,IAAMqM,MAAQ62I,SAAS,GACjBngJ,MAAQsc,aAAahT,OAAOtJ,MAC9BlI,IAAM69F,KAAKwqD,SAAS,IAAI,GAAGz4G,OAAOtH,SAAS+/G,SAAS,KACxD,GAAIA,SAAS,KAAO74E,gCAAiBzqE,SAAU,CAC3C,IAAM8sE,WAAawvE,6BAAI,IAAIvkI,IAAI7L,KAAKsT,UAAUtT,KAAK/C,IAAI,SAAAnP,GAAC,OAAIA,EAAEmJ,WAC9DlI,IAAM4xE,gBAAgBC,WAAY7xE,KAGtC,YAAewT,IAARxT,MAAsBwR,QAASxR,MAAQ,KY4OzBooJ,CAA2BniJ,MACxC+9B,IACAv6B,MAGJ,GAAiB,OAAb0+I,UAAqBr1I,OAAOstF,aAAc,CAC1Cg6B,SAASz7F,GAAKwpH,SACd,IAAMG,SAAWriJ,KAAKsiJ,qBAAqBvkH,EAAGv6B,EAAGqJ,QAEjD,OADAsnH,SAAS92E,OAASglG,UAAYA,SAAS3pH,GAAK2pH,SAAS3pH,GAAKy7F,SAASz7F,GAC5Dy7F,SAGX,IAAMouB,QAAUviJ,KAAKsiJ,qBAAqBvkH,EAAGv6B,EAAGqJ,UAAa6rB,GAAI,MAIjE,OAHAy7F,SAAWj7H,OAAO4T,UAAWy1I,UAEpBllG,OAASklG,QAAQ7pH,GACnBy7F,2EAGWp2F,EAAGv6B,EAAGwD,MAMxB,IALA,IAAMs0F,OAASt7F,KAAKs7F,SACd7yF,IAAM6yF,OAAO55F,OACf42D,MAAQ,KAGH9/D,EAAI,EAAGA,EAAIiQ,IAAKjQ,IAAK,CAC1B,IAAM+iG,MAAQD,OAAO9iG,GAKrB,IAH2B,IADZ+iG,MAAM1uF,SACV2uF,cACPljC,MAAQijC,MAAMrB,gBAAgBn8D,EAAGv6B,EAAGwD,OAEpCsxD,MACA,OAAOA,MAGf,OAAOA,wFAsDmB/1C,aAA0B,IAAb1V,OAAazH,UAAA1D,OAAA,QAAA6L,IAAAnI,UAAA,GAAAA,UAAA,MAChD8vE,UACAstE,kBAAoBjgI,YACxB,GAAoB,OAAhBA,YACA,SAEJ,IAAM+4E,OAASt7F,KAAKs7F,SACd7yF,IAAM6yF,OAAO55F,OACfytB,eAAe5M,eACfigI,mBAAqBtpJ,OAAO4M,KAAKyc,cACjCigI,qBAAiB9mI,OAAA6lI,8BAAOiB,mBAAPjB,8BnPksBN,SAAjBkB,eAAiB1xI,KAAG,OAAIA,IAAI,GAAG9I,IAAI,SAAC6nE,IAAKt3E,GAAN,OAAYuY,IAAI9I,IAAI,SAAAmT,KAAG,OAAIA,IAAI5iB,OmPlsBdiqJ,CAAevpJ,OAAOwlB,OAAO6D,iBAE/E,IAAK,IAAI/pB,EAAI,EAAGA,EAAIiQ,IAAKjQ,IAAK,CAC1B,IAAM+iG,MAAQD,OAAO9iG,IACc,IAA/B+iG,MAAM1uF,SAAS2uF,cACftmB,UAAMx5D,OAAA6lI,8BAAOrsE,QAAPqsE,8BAAkBhmD,MAAMmnD,yBAAyBF,kBAAmB31I,WAGlF,OAAOqoE,mEAWQn8E,MAEf,OADA48I,eAAe,OAAQ58I,MAChBiH,mEAWS1E,MAEhB,OADAq6I,eAAe,OAAQr6I,MAChB0E,uDAlkBP,MAxDY,mDA4DZ,QAEQ8W,WAEJgpI,2DAyCkB,QAAAx3E,KAAAljE,UAAA1D,OAARkgB,OAAQ,IAAA/Y,MAAAy/D,MAAAC,KAAA,EAAAA,KAAAD,KAAAC,OAAR3mD,OAAQ2mD,MAAAnjE,UAAAmjE,MACtB,OAAAo6E,sBAAW3iJ,KAAQ4hB,mkCC1I3B,IAAMghI,cAAgB,SAAhBA,cAAiBC,SAAD,OAA4BA,QAA5Bz9I,UAAA1D,OAAA,QAAA6L,IAAAnI,UAAA,GAAAA,UAAA,OAA8C6C,IAAI,SAAAW,QAAM,OAAIA,OAAO6J,OAAO,SAACC,IAAK5Z,GAElG,OADA4Z,OAAGgJ,OAAAonI,+BAAOpwI,KAAPowI,+BAAehqJ,EAAEm/F,uBAYlB8qD,wBAA0B,SAA1BA,wBAA2BryI,UAAWuX,WAAY04E,aAAxB,OAC5BjwF,UAAUuO,OAAO,SAAArW,QAAM,OAAIqf,WAAWpJ,MAAM,SAACtT,MAAO+8B,GAAR,OAAc1/B,OAAO2C,OAAO9R,QAAUknG,YAAYr4D,QAS5F06G,gCAAqB,SAArBA,mBAAsBC,SAAU3mH,SAAiC,IAAxBsL,MAAwBxiC,UAAA1D,OAAA,QAAA6L,IAAAnI,UAAA,GAAAA,UAAA,GAAhB,EAAGlE,IAAakE,UAAA1D,OAAA,QAAA6L,IAAAnI,UAAA,GAAAA,UAAA,MAE/DqoI,OAGAnxG,QAHAmxG,OACArvH,UAEAke,QAFAle,UACA6nG,aACA3pF,QADA2pF,aAIJ,GAAIwnB,OAAO7lG,MAAQ,GAAI,CACnB,IAAMr8B,MAAQkiI,OAAO7lG,OACrBq+E,aAAan9G,QAAQ,SAACrP,OAClB,IAAM6jB,MAAQc,UAAUa,OAAO,SAAArW,QAAM,OAAIA,OAAO2C,OAAO9R,QAAUA,QAC3DypJ,sBAAwBvU,sBAAsBrxH,MAAOmwH,OAAO7lG,MAAQ,IAO1Eo7G,mBAAmBC,UALfxV,cACArvH,UAAWd,MACX2oG,aAAci9B,uBAGuBt7G,MAAQ,KAA/BlsB,OAAAonI,+BAAsC5hJ,MAAKzH,gBAGjEwsH,aAAan9G,QAAQ,SAACrP,OAClBwpJ,SAAS/8I,QAATwV,OAAAonI,+BAAkB5hJ,MAAKzH,YAW7B0pJ,YAAc,SAAdA,YAAezyI,UAAWs7H,aAAgB,IAExCoX,qBAGApX,YAHAoX,qBACAC,eAEArX,YAFAqX,eACAC,oBACAtX,YADAsX,oBAGJ,OAAID,eAAe3hJ,OAAS,EACjB2hJ,eAAep7I,IAAI,SAACs7I,eAAkB,IAAAC,gBAAAC,2BACGb,cAAcW,cAAeH,sBADhC,GAClCM,eADkCF,gBAAA,GAClBG,kBADkBH,gBAAA,GAEzC,OAAO9yI,UAAUid,WAAVjS,OAAAonI,+BAAsBY,gBAAtBZ,+BAAyCa,mBAAzCb,+BAA+DQ,0BAGtE5yI,YASNkzI,aAAe,SAAfA,aAAgBtnH,QAASunH,kBAAqB,IAAAC,iBAC5C3iF,SAEAjlB,OAIA5f,QAJA4f,OACAxrC,UAGA4rB,QAHA5rB,UACAqzI,UAEAznH,QAFAynH,UACAp1B,UACAryF,QADAqyF,UAIA00B,eAGA10B,UAHA00B,eACAW,eAEAr1B,UAFAq1B,eACAV,oBACA30B,UADA20B,oBAGAnX,SAEA4X,UAFA5X,SACAC,YACA2X,UADA3X,YAEE6X,QAAUZ,eAAgBlX,SAAYkX,eAAe3hJ,YAIvDsiJ,eAAetiJ,OAAS,EACxBy/D,MAAQ6iF,eAAe/7I,IAAI,SAACs7I,cAAeW,SAAY,IAAAC,gBAAAV,2BACJb,cAAcW,cAAeU,SADzB,GAC5CN,kBAD4CQ,gBAAA,GACzBC,kBADyBD,gBAAA,GAE7CE,YAAc3zI,UAAUid,WAAVjS,OAAAonI,+BAAsBa,mBAAtBb,+BAA4CsB,mBAA5CtB,+BAAkEQ,uBAChFtX,aAAgBC,UAAWgY,QAAS/X,aAAcqX,eAClDn8C,SAAY+kC,kBAAUC,YAAaA,YAAc4X,eAAetiJ,OAASwiJ,SAE/E,OAAOL,iBAAiBQ,aAAerY,wBAAa5kC,iBAAW28C,aAMnE5iF,OAAS0iF,iBAAiBnzI,WAAas7H,aAHjBC,UAAWgY,QAAS/X,iBAGU9kC,SAFlC+kC,kBAAUC,0BAEmC2X,YAGnE7nG,OAAOiwF,UAAYjwF,OAAOiwF,eAC1B2X,iBAAA5nG,OAAOiwF,WAAUjmI,KAAjBqB,MAAAu8I,iBAAAhB,+BAAyB3hF,kjCCxG7B,IAoBamjF,8BAAmB,SAAnBA,iBAAoBhoH,QAAS5rB,UAAWi+G,UAAW8e,QAAW,IAEnEzB,YAEArd,UAFAqd,YACA5kC,QACAunB,UADAvnB,QAGA6kC,UAEAD,YAFAC,UACAC,aACAF,YADAE,aAGCC,SAED/kC,QAFC+kC,SACAC,YACDhlC,QADCglC,YAGDmY,eAMAjoH,QANAioH,eACMC,SAKNloH,QALA8lC,KACA9wC,SAIAgL,QAJAhL,SACAzkB,OAGAyvB,QAHAzvB,OACAimI,QAEAx2G,QAFAw2G,QACAjyC,aACAvkE,QADAukE,aAEEjJ,KAAOtmE,SAASsmE,OAChBozC,UAAY15G,SAAS05G,YACrByZ,aAAenzH,SAASmzH,eACxBzzC,aAAe1/E,SAAS51B,eAAew+B,WACvCwqH,eAAiBpzH,SAASozH,iBAC1BC,aAAerzH,SAASqzH,eACxBC,mBAAqBtzH,SAASszH,qBAEhC5S,aAEAhH,UAFAgH,aACAC,YACAjH,UADAiH,YAEE4S,eAAiB/R,QAAQgS,gBAAiB5Y,0BAAcD,qBAAasY,oBACrE3Z,cAAiB/9H,cAAQmkG,0BAAcpZ,UAAMozC,qBAEnDrc,UAAUo2B,kBAAoBJ,aAAa/7I,OAC3C+lH,UAAUq2B,eAAiBN,eAAe97I,OAE1C,IAAMkiI,UAAYgI,QAAQj7B,WAAW+yB,aAAcjc,UAAWryF,SAE9DmoH,aAAatY,UAAYsY,aAAatY,UAAYsY,aAAatY,aAC/DsY,aAAatY,UAAUC,aAAeyY,eAGtC,IAAMI,YhBTgB,SAAbC,WAAcvuB,MAAOwuB,UAAR,cAAAzpI,OAA6Bi7G,MAA7B,KAAAj7G,OAAsCypI,UgBSxCD,CAAW/Y,SAAUC,aACnCxjI,QACFpF,EAAGyoI,UACHluG,EAAGmuG,cAGDkZ,cAAY1pI,OAAA2pI,+BACV5X,OAAO6X,UAAU,IADPD,+BACc5X,OAAO8X,UAAU,QAD/B7pI,OAAA2pI,+BAEV5X,OAAO6X,UAAU,IAFPD,+BAEc5X,OAAO8X,UAAU,MAE3CC,SAAYvT,YAAY//H,IAAI+yI,aAAgChT,YAAY54I,IAAI4rJ,aAAjC,IAAIT,SAarD,OAXAgB,SAASx6I,KAAK0F,WACGknF,KAAKkzC,WACLliI,OAAOA,QACP+yC,UAAUipG,oBACV/jD,aAAaA,cACbu8C,cAAcgI,WAC/BpT,aAAa7/H,IAAI8yI,YAAaO,UAC9BvT,YAAY38H,OAAO2vI,aAnFH,SAAdQ,YAAen0H,SAAUm8G,OAAQ+X,WAClCrf,IAAKD,KAAKp9H,QAAQ,SAACyC,OAChB,IAAM41D,MAAQ7vC,SAAQ,GAAA5V,OAAInQ,MAAJ,YAChBm6I,SAAWjY,OAAM,GAAA/xH,OAAInQ,MAAJ,WAAmB,GAAGxI,QAE5Co+D,MAAMukF,YAAcvkF,MAAMukF,cAC3BvkF,MAAMukF,UAAUx/I,KAAKs/I,UACrBl0H,SAAQ,GAAA5V,OAAInQ,MAAJ,UAAkB41D,SA8E9BskF,CAAYn0H,SAAUm8G,OAAQ+X,UAEvBxT,aAAa34I,IAAI4rJ,cAatBU,6BAAkB,SAAlBA,gBAAmBnzF,UAAWolC,KAAMmR,UAAW5nC,OAA7B,OACpBgO,6BAAgB3c,UAAW,SAAAZ,MAAI,OAAIA,MAAMgmC,KAAM,SAAC5tF,KAAMxR,GAAP,OAAaA,EAAIwR,KAAKyI,OAAO,SAAC/X,EAAGT,GAE5E,OAAOS,GADIT,EAAEy+B,GAAKqwE,YAEnB,MAAK9gG,IAAI,SAAC2pD,MACT,GAAIA,MAAQA,KAAKm3C,WAAY,CACzB,IAAM68C,SAAWh0F,KAAKm3C,WADG88C,iBAEKD,SAAS/4I,SAA/Bk4F,YAFiB8gD,iBAEjB9gD,YAAa5G,KAFI0nD,iBAEJ1nD,KAErB,OAAO,IAAIh9B,MAAM2kF,UAAWrhI,OAAOmhI,UAAU/4I,QACzC2mG,SAAUzO,cAAgBkJ,iCAAgBL,MAAQ7I,cAAgBkJ,iCAAgBN,IAClFxP,YAGR,OAAO,IAAIh9B,MAAM4kF,WAAYl5I,QAASsxF,MAAM,OAoE9C6nD,iCAAsB,SAAtBA,oBAAuB1pH,QAAS2pH,aAAc9kF,MAAO6vC,cAAiB,IAEpEp/C,KAIAt1B,QAJAs1B,KACA9rD,KAGAw2B,QAHAx2B,KACAxK,KAEAghC,QAFAhhC,KACA8yI,MACA9xG,QADA8xG,MAEEV,QAAU97E,KAAKlwD,OAASoE,KAAKpE,OAC7BwkJ,cAAgBpgJ,KAAKpE,OAASkwD,KAAK3pD,IAAI,SAACnP,EAAGN,GAAJ,OAAUsN,KAAKjC,KAAKwN,MAAM7Y,EAAIk1I,eAE3E,OAAOv+D,6BAAgB82E,aAAY,GAAAvqI,OAAIpgB,KAAJ,YAAoB,SAAA6qJ,QAAM,OAAIA,QAAQD,cACrE,SAACC,OAAQ3tJ,GAAT,SAAAkjB,OAAkByqI,OAAOpjJ,KAAK,KAA9B,KAAA2Y,OAAsCljB,KACzByP,IAAI,SAAAk+I,QAAM,OAxBP,SAAlBC,gBAAmB5zF,UAAWl5C,QAAS6nD,MAAO6vC,cAA5B,OAA6C7hC,6BAAgB3c,UACjF,SAAAhgD,OAAK,OAAI,IAAI2uD,MAAMixE,aAAephC,4BAAgBvsF,OAAOjS,QAAQ8G,QAAS,SAACvf,IAAKvB,GAAN,OAAYuB,IAAMvB,IAuB7D4tJ,CAAgB,KAAMD,OAAQhlF,MAAO6vC,cACnC/oG,IAAI,SAACm6D,KAAM95B,EAAG9vC,GAAV,OAAgB4pE,KAAK39C,OAAO0hI,OAAO3tJ,IAAIqU,OAAOuhI,YAajFiY,kCAAuB,SAAvBA,qBAAwB/pH,QAAS6kC,MAAO6vC,cAC1C,IAAIi1C,aAEA7S,SAOA92G,QAPA82G,SACAxqI,OAMA0zB,QANA1zB,OACA09I,qBAKAhqH,QALAgqH,qBACA9zF,UAIAl2B,QAJAk2B,UACA47E,MAGA9xG,QAHA8xG,MACAmY,SAEAjqH,QAFAiqH,SACAj1H,SACAgL,QADAhL,SAGAxW,KAEAlS,OAFAkS,KACAjB,QACAjR,OADAiR,QAGA2sI,aACApT,SADAoT,aAGAnD,eAEAiD,qBAFAjD,eACAW,eACAsC,qBADAtC,eAGAyC,QAEAD,aAFAC,QACAC,WACAF,aADAE,WAEEC,aAAeJ,SAASvT,cAAcpJ,UACtCgd,eAAiBL,SAASvT,cAAcnJ,YAE9Coc,aAAezzF,eAEd,MAAOlT,EAAGr7C,GAAG6E,QAAQ,SAAC8oD,MACnB,IAAMm4E,SAAWn4E,OAAStS,EAAIqnG,aAAalrI,OAASkrI,aAAavrI,IACjE6qI,aApHkB,SAApBY,kBAAqBvqH,QAASwqH,OAAQ3lF,OAAU,IAK9C4lF,WAFAzqH,QADA82G,SAGA2T,WAGJ,OAAO,SAACzrJ,KAAMyuI,UACV,IAAMnyC,KAAOmvD,WAAU,GAAArrI,OAAIpgB,OAE3B,GAAIs8F,MAAQA,KAAKl2F,OACb,GAAIpG,OAASgkD,GAAKhkD,OAAS2I,EAAG,CAC1B,IAAMgkB,WAAa3sB,OAAS2I,EAAI+hI,KAAOC,SAEtCQ,QAASC,WAAW59H,QAAQ,SAACugE,UAAWpnE,OACrC,IAAM+kJ,WAAU,GAAAtrI,OAAMuM,YAANvM,OAAmB2tD,WAC/B0/B,UAAY9mG,MACZglJ,YAAcrvD,KACdmyC,WAAal8B,iB9BRf,W8BQwBk8B,WACtBhhC,UAAY,EAAIA,WAEfh8B,WAAW6qB,KAAM,EAAGmR,aACrBk+C,gBAEJH,OAAOE,YAAcrB,6BAAgBmB,OAAOE,YAAaC,YAAal+C,UAAW5nC,cAGrF2lF,OAAOI,YAAcvB,6BAAgBmB,OAAOK,SAAUvvD,KAAK3vF,IAAI,sBAAW,EAAGk5D,OAC7E2lF,OAAOM,eAAiBzB,6BAAgBmB,OAAOO,SAAUzvD,KAAK,GAAI,EAAGz2B,OAG7E,OAAO2lF,QAoFQD,CAAkBvqH,QAAS2pH,aAAc9kF,MAAzC0lF,CAAgDj1F,KAAMm4E,YAjCd,IAAAud,cAyCvDrB,aAJAiB,YArCuDI,cAqCvDJ,YACAK,cAtCuDD,cAsCvDC,cACAH,eAvCuDE,cAuCvDF,eACAI,iBAxCuDF,cAwCvDE,iBAGEpd,QAAU8c,aAAeA,YAAYO,aAAa/lJ,OAASwlJ,YAAYO,aACxEF,eAAiBA,cAAcE,aAAa/lJ,OAAS6lJ,cAAcE,gBAClEld,QAAU6c,gBAAkBA,eAAeK,aAAa/lJ,OAAS0lJ,eAAeK,aACjFD,kBAAoBA,iBAAiBC,aAAa/lJ,OAAS8lJ,iBAAiBC,gBA6CjF,QA1CMnsJ,KAAMsyG,eAAM85C,QAAS5sI,KAAK,GAAI82C,KAAMw4E,QAASI,WAAYoc,eAAexrI,MACxE9f,KAAMuyG,gBAAO65C,QAAS5sI,KAAK,GAAI82C,KAAMw4E,QAASI,WAAYoc,eAAexrI,MACzE9f,K9B/HS,M8B+HEosJ,QAAS7tI,QAAQ,GAAI+3C,KAAM24E,QAASC,WAAYoc,eAAenrI,SAC1EngB,K9B5HY,S8B4HEosJ,QAAS7tI,QAAQ,GAAI+3C,KAAM24E,QAASC,WAAYoc,eAAenrI,SAGtE3S,QAAQ,SAAC+D,OAAQ5K,OAC1B,IAAI6D,KACApE,OAEApG,KAIAuR,OAJAvR,KACAosJ,QAGA76I,OAHA66I,QACA91F,KAEA/kD,OAFA+kD,KACA44E,WACA39H,OADA29H,WAWJ,GARIvoI,MAAQ,GACR6D,KAAO2gJ,QACP/kJ,OAAS2hJ,eAAe3hJ,OAAS,EAAI2hJ,eAAe3hJ,OAAS,IAE7DoE,KAAO4gJ,WACPhlJ,OAASsiJ,eAAetiJ,OAAS,EAAIsiJ,eAAetiJ,OAAS,GAEjEoE,KAAOA,KAAKmC,IAAI,SAAA8I,KAAG,OAAIA,IAAI9I,IAAI,SAAA/G,KAAG,OAAIowB,SAASwpE,aAATxpE,CAAuBpwB,SACzDwmJ,QAAQhmJ,QAAU8oI,aAAelvI,MAAQs2D,MAAQ9rD,KAAKpE,OAAQ,CAC9D,IAAMimJ,UAAa/1F,UAAMlwD,cAAQpG,WAC7Bge,WACArX,MAAQ,GACR0lJ,SAAS7hJ,KAAOA,KAChB6hJ,SAASvZ,MAAQA,MAAMtzH,KACvBxB,QAAU0sI,iCAAoB2B,SAAU1B,aAAc9kF,MAAO6vC,gBAE7D22C,SAASvZ,MAAQA,MAAMv0H,QACvB8tI,SAAS7hJ,KAAOA,KAAK,GAAGmC,IAAI,SAAClO,IAAKvB,GAAN,OAAYsN,KAAKmC,IAAI,SAAAvN,GAAC,OAAIA,EAAElC,OAExD8gB,QAAU0sI,iCAAoB2B,SAAU1B,aAAc9kF,MAAO6vC,eAEjEi1C,aAAY,GAAAvqI,OAAIpgB,KAAJ,YAAqBge,aAEjC2sI,aAAY,GAAAvqI,OAAIpgB,KAAJ,YAAqB,OAGlC2qJ,cAqIE2B,6BAAkB,SAAlBA,gBAAmBtrH,QAASzvB,QAAW,IAE5CykB,SAIAgL,QAJAhL,SACA5gB,UAGA4rB,QAHA5rB,UACAm3I,kBAEAvrH,QAFAurH,kBACAtB,SACAjqH,QADAiqH,SAGIuB,aAGAj7I,OAHAi7I,aACAt1F,UAEA3lD,OAFA2lD,UACA7W,UACA9uC,OADA8uC,UAEF/tB,QAAUk6H,aAAaC,YACT/2C,aAAiB1/E,SAAS51B,eAAtCw+B,WACFi7D,SAAWzkF,UAAU8N,kBACrBuwH,YAAcz9G,SAASy9G,cACvBljC,SAAWv6E,SAASu6E,WACVm5C,eAAmB1zH,SAASozH,iBAApC97I,OACQm8I,kBAAsBzzH,SAASqzH,eAAvC/7I,OACFo/I,eAAiB12H,SAASgyH,oBAAoBz2I,OAAQkiI,aACtDuX,qBAAuBh1H,SAASvK,eAChCkhI,iBAGFlD,oCACAC,8BACAsB,0CACAhrD,OAAQyzC,YACR55C,kBACA6yD,8BACAzB,kBACAnY,MAAO0Z,aAAa1Z,UACpBrE,SAAU+d,aAAa/d,aACvBv3E,oBACAlhC,mBAEE6vC,OACFqjF,SAAUlzH,SAAS42H,WAAWr8C,SAAS24C,UACvCsB,SAAUx0H,SAAS42H,WAAWr8C,SAASi6C,UACvCC,UAAWz0H,SAAS42H,WAAWr8C,SAASk6C,WACxC3T,SAAU9gH,SAAS42H,WAAWr8C,SAASumC,WAErC+V,eAAiB1W,gCAAoBuT,gBACrCoD,kBAAoB3W,gCAAoBsT,mBAE9CzzH,SAAS+2H,aACT/2H,SAASg3H,aACTh3H,SAASszH,mBAAmBjpG,eAG5BrqB,SAASi3H,kBAlDuC,IAuD1CC,aACFvW,YAFA3gH,SAAS05G,YADTgH,aAIAA,aAAc,IAAIlgI,KAGtBwf,SAAS05G,UAAUwd,aAEnB,IAAMC,kBACF57I,OAAQi7I,aACRvD,eAAgBgC,SAASvT,cAAc0V,qBAAqBp3H,SAASy9G,eACrEz9G,kBACA8wC,KAAMjB,MAAMqjF,SACZ1R,QAASyT,SAASvT,cAClBwV,wBACA3nD,aAAch0F,OAAOwuE,QAEnB98D,aAAe7N,UAAU8N,kBAC3BiwH,aAAe/9H,UACnB,IAAKkd,QAAQuxE,SAAU,CACnB,IACM/+E,UhBrGe,SAAhBuoI,cAAiBrC,qBAAsBsC,aAAgB,IAAAvP,MAC1DzwI,OAAS1P,OAAOwlB,OAAO4nI,sBAAsBr+I,IAAI,SAAC8I,KAAQ,IAAAy8G,MAAAW,MACtD06B,cAAer7B,UAAG9xG,OAAHnU,MAAAimH,MAAAkkB,8BAAa3gI,MAClC,OAAOo9G,UAAGzyG,OAAHnU,MAAA4mH,MAAAujB,8BAAamX,aAAa5gJ,IAAI,SAACsD,OAClC,OAAIA,iBAAiBw7H,kBACVx7H,MAAM0sF,aAEV1sF,YAGf,OAAO8tI,UAAG39H,OAAHnU,MAAA8xI,MAAA3H,8BAAa9oI,QAAb8S,OAAAg2H,8BAAwBkX,egB2FTD,CAAcrC,qBhB7GG,SAA9BwC,4BAA+BC,oBAAqBxqI,cAAiB,IAAAsF,MAC1Ejb,UACEgnI,YAAcmZ,oBAAoB9gJ,IAAI,SAAAwlE,MAAI,OAAKA,KAAKs9B,eAG1D,OADAniG,QADAA,UAAM8S,OAAAg2H,8BAAO9oI,UAAQib,UAAGnI,OAAHnU,MAAAsc,MAAA6tH,8BAAa9B,YAAY3nI,IAAI,SAAAotH,KAAG,OAAIn8H,OAAOwlB,OAAO22G,KAAKptH,IAAI,SAAAnP,GAAC,OAAIA,EAAEyS,eACvEmI,OAAO,SAAAnI,OAAK,OAAIgT,aAAahT,QAAUgT,aAAahT,OAAOoT,IAAIrjB,OAASy5F,yBAAU11F,YgBwG/EypJ,CAA4BL,iBAAiBlE,eAAgB7zI,UAAU8N,oBAGhFqK,WAAazI,UAAU1M,OAAO,SAAAnI,OAAK,OACrCgT,aAAahT,QAAUgT,aAAahT,OAAOoT,IAAIrjB,OAASy5F,yBAAU11F,YAChE2pJ,eAAiBp7H,QAAQ7E,SACzBk9E,aAAe/sG,OAAO4M,KAAK4K,UAAUrB,gBAAgB7D,cACrDy9I,cAAgBxzE,4CAA8BluE,WAA9B,GAA+BmJ,WAA/BgL,OAAA2pI,+BAA6Cp/C,gBAC7DijD,eAAiBj6E,eAAeg6E,cAAeD,gBAErDva,aAAe/9H,UAAUkd,QAAQ/E,WAAWnnB,OAASmnB,YAAc,IAAKqgI,gBAAgBv7H,QAAQvN,WAIpG,IAEM+oI,gBDtZoB,SAAjBC,eAAkBhrI,UAAWkoI,qBAAsBzC,kBAC5D,IAAIwF,iBACE5C,WACAC,cACAtD,wBACAlnG,UACA6nG,aAEAp1B,UAAYz1H,OAAO4T,UAAWw5I,sBAEhChB,UAGA32B,UAHA22B,UACAC,UAEA52B,UAFA42B,UAUJ,GARI52B,UADAq1B,eAGWl7I,QAAQ,SAACwgJ,SACpBlG,qBAAqBl9I,KAArBqB,MAAA67I,qBAAoBN,+BAASwG,YAEjC36B,UAAUy0B,qBAAuBA,qBAG7BkC,UAAU5jJ,OAAS,EAAG,CAEtB,IAAM6J,MAAQ+5I,UAAU,GAAGhjJ,WACrBinJ,kBAAoB5a,sBAAsBvwH,UAAW7S,OAG3Dy3I,gCAAmByD,SAAWhZ,OAAQ6X,UAAWlnI,oBAAW6nG,aAAcsjC,oBAG1E9C,QAAQ39I,QAAQ,SAAC5H,KAAQ,IAAAsoJ,eAEdC,mBAFchG,2BAEQb,cAAc0C,WAFtB,MAGfoE,kBAAoB3G,wBAAwB3kI,UAAWqrI,mBAAoBvoJ,KAG3EyoJ,uBAAyBxG,YAAYuG,kBAAmB/6B,YAC9D66B,eAAAH,eAAcnjJ,KAAdqB,MAAAiiJ,eAAA1G,+BAAsB6G,yBAEtBA,uBAAuB7gJ,QAAQ,WAC3Bi7I,UAAU79I,MAAMo/I,UAAWpkJ,cAGhC,KAAA0oJ,iBAEHA,gBAAAP,eAAcnjJ,KAAdqB,MAAAqiJ,gBAAA9G,+BAAsBK,YAAY/kI,UAAWuwG,aAOjD,GAHA06B,cAAgBA,cAAc3nJ,OAAS,EAAI2nJ,mBAGvC9D,UAAU7jJ,OAAS,EAAG,CACtB,IAAMmoJ,cAAgBtE,UAAUt9I,IAAI,SAAAnP,GAAC,SAAA4iB,OAAO5iB,KAEtCyS,OAAQs+I,cAAc,GACtBC,qBAAuBnb,sBAAsBvwH,UAAW7S,QAG9Dy3I,gCAAmB0D,YACfjZ,OAAQoc,cACRzrI,oBACA6nG,aAAc6jC,uBAGlBT,cAAcvgJ,QAAQ,SAACihJ,IAAKC,QACxBjG,UAAUiG,QAAUjG,UAAUiG,iBAC9BtD,WAAW59I,QAAQ,SAAC5H,IAAK+oJ,QACrB/tG,OAAO8tG,QAAU9tG,OAAO8tG,YAGxB,IAAMt5I,UAAYq5I,eAAezrJ,oBAAYyrJ,IAAM3rI,UAG7CsrI,kBAAoB3G,wBAAwBryI,UAAWm5I,cAAe3oJ,KACtEo7B,SACF4f,cACAxrC,UAAWg5I,kBACX3F,WACIuB,UAAWvB,UAAUiG,QACrBzE,WAAYA,UAAWrkJ,KACvBirI,SAAU6d,OACV5d,YAAa6d,QAEjBt7B,qBAEJi1B,aAAatnH,QAASunH,2BAK9BwF,cAAcvgJ,QAAQ,SAACihJ,IAAKC,QACxBjG,UAAUiG,QAAUjG,UAAUiG,iBAC9B,IAAM1tH,SACF4f,cACAxrC,UAAWq5I,KAAO3rI,UAClB2lI,WACIuB,UAAWvB,UAAUiG,QACrBzE,kBACApZ,SAAU6d,OACV5d,YAAa,GAEjBzd,qBAGJi1B,aAAatnH,QAASunH,oBAK9B,IAAMqG,kBAAoBxD,WAAWhlJ,OAAS,EAAIglJ,WAAW,GAAGz+I,IAAI,SAAC6nE,IAAKt3E,GAAN,OACpDkuJ,WAAWz+I,IAAI,SAAAmT,KAAG,OAAIA,IAAI5iB,OAAOkuJ,WAEjD,OAASxqG,cAAQuqG,gBAASC,WAAYwD,mBCqSdd,CAAe3a,aAAc6X,qBAFjCh1H,SAAS64H,kBAAkB1B,mBAI/Cn3H,SAAS05G,YAAYiH,YAAYnpI,QAAQ,SAACshJ,aACtCA,YAAYhjH,WAEhB9V,SAAS05G,YAAYiH,YAAY5qG,QACjC/V,SAASkiH,YAAY2V,gBAAgBjtG,QAhGW,IAAAmuG,mBhB1OnB,SAApBC,kBAAqBtf,UAAWpzC,MACzC,IAAIy0C,MAAQ,KACRC,MAAQ,KAERwF,SAEA9G,UAFA8G,SACAC,SACA/G,UADA+G,SAGGwY,SAEH3yD,KAFA75D,EACGysH,SACH5yD,KADAp0F,EAeJ,OAZA+mJ,UAAYA,SAASzhJ,QAAQ,SAAC2hJ,QAC1B,IAAM5yD,MAAQi6C,SAASz4I,IAAIoxJ,SAC3Bpe,MAAQA,WACFnmI,KAAK2xF,SAGf2yD,UAAYA,SAAS1hJ,QAAQ,SAAC2hJ,QAC1B,IAAM3yD,MAAQi6C,SAAS14I,IAAIoxJ,SAC3Bne,MAAQA,WACFpmI,KAAK4xF,UAIXu0C,YAAOC,agBmTcge,CAAkBh5H,SAAS05G,YAAa15G,SAASsmE,QAAlEy0C,MAlGwCge,mBAkGxChe,MAAOC,MAlGiC+d,mBAkGjC/d,MAEfh7G,SAASsmE,MACL75D,EAAGsuG,MACH7oI,EAAG8oI,QAEP,IAAM3jI,MAAQ2oB,SAAS3oB,SAEtB0jI,MAAOC,OAAOxjI,QAAQ,SAACokI,QAAS5xI,MAC7B,IAAMoyE,eACNw/D,QAAUA,aACFpkI,QAAQ,SAAC8uF,KAAMjlF,KACnBilF,KAAK9uF,QAAQ,SAAC8oD,KAAMm3C,WAChBr7B,WAAU,GAAAhyD,OAAI/I,KAAJ+I,OAAUqtF,YAAe,SAG3CpgG,MAAMksB,OAAN,GAAAnZ,OAAgBswF,0BAAiBn7C,uBAAjC,YAAAn1C,OAAkEpgB,KAAO,IAAM,KAAOoyE,cAE1Fp8C,SAASo5H,YAAY7C,kBAAmBh7I,QAExC,IAtHgD89I,kBAzHpB,SAAnBC,iBAAoBtuH,QAAS82G,SAAUjyE,MAAO6vC,cAAiB,IAEpE1U,WAUChgE,QAVDggE,WACAD,UASC//D,QATD+/D,UACAiqD,qBAQChqH,QARDgqH,qBACAtB,eAOC1oH,QAPD0oH,eACAD,kBAMCzoH,QANDyoH,kBACAvyF,UAKCl2B,QALDk2B,UACAu3E,SAICztG,QAJDytG,SACAqE,MAGC9xG,QAHD8xG,MACAmY,SAECjqH,QAFDiqH,SACAj1H,SACCgL,QADDhL,SAgBE20H,aAAeI,mCAbjBz9I,QACIkS,KAAMkqI,eACNnrI,QAASkrI,mBAEb3R,kBACAkT,0CACA9zF,oBACAu3E,kBACAqE,YACAmY,kBACAj1H,mBAG0D6vC,MAAO6vC,cAEjEo2C,eAQAnB,aARAmB,eACAI,iBAOAvB,aAPAuB,iBACAN,YAMAjB,aANAiB,YACAK,cAKAtB,aALAsB,cACAsD,YAIA5E,aAJA4E,YACAC,WAGA7E,aAHA6E,WACAC,cAEA9E,aAFA8E,cACAC,aACA/E,aADA+E,aApCoEr9B,MAAAs9B,4BAsC1B/D,YAAaK,cAAeH,eAAgBI,kBACrFv/I,IAAI,SAAAnP,GAAC,OAAKA,EAAIA,EAAE2uJ,kBAvCmD,GAsCjEN,SAtCiEx5B,MAAA,GAsCvDu9B,OAtCuDv9B,MAAA,GAsC/C05B,SAtC+C15B,MAAA,GAsCrCw9B,OAtCqCx9B,MAAA,GAAAC,MAAAq9B,4BAwCrCJ,YAAaG,cAC3C/iJ,IAAI,SAAAvN,GAAC,OAAKA,EAAIA,EAAE+sJ,aACAx/I,IAAI,SAAA4S,GAAC,OAAIA,EAAE4sI,oBA1CwC,GAwCjE2D,WAxCiEx9B,MAAA,GAwCrDy9B,YAxCqDz9B,MAAA,GA2CpE09B,YAAcJ,OAAOxpJ,OAAS,GAAK,EACvCylJ,SAASzlJ,QAAU4pJ,cACnB,IAAIC,YAAcJ,OAAOzpJ,OAAS,GAAK,EACvC2lJ,SAAS3lJ,QAAU6pJ,cAGnB,IAAIC,WAAaJ,WAAW1pJ,OAAS0pJ,WAAWnjJ,IAAI,SAACnP,EAAGN,GAEpD,OADA2uJ,SAAS3uJ,GAAK2uJ,SAAS3uJ,IAAM2uJ,SAAS3uJ,UACtCkjB,OAAA2pI,+BAAWvsJ,GAAXusJ,+BAAiB8B,SAAS3uJ,OACxB2uJ,SAAWA,SAASl/I,IAAI,SAAAnP,GAAC,OAAKA,QAG9B2yJ,YAAcP,OAAOxpJ,OAASwpJ,OAAOjjJ,IAAI,SAACnP,EAAGN,GAAJ,OAAWM,GAAX4iB,OAAA2pI,+BAAkBgG,YAAY7yJ,WAAe6yJ,YAAY3pJ,OACpG2pJ,YAAYpjJ,IAAI,SAAAnP,GAAC,OAAAusJ,+BAAQvsJ,QAEvB4yJ,aACFZ,YACgBA,WAAWrD,aACnB3+I,QAAQ,SAACpO,GACQA,EAAE+sJ,aACV3+I,QAAQ,SAACi1B,EAAGvlC,GACrBkzJ,UAAUlzJ,GAAKkzJ,UAAUlzJ,OACzBkzJ,UAAUlzJ,GAAG0N,KAAK63B,OAK1BspH,SAAS3lJ,QACTgqJ,UAAUxlJ,KAAKmhJ,UAInB,IAAIsE,gBACAR,OAAOzpJ,QACPiqJ,aAAazlJ,KAAKilJ,QAEtB,IAAMS,oBAAsBD,aAAajqJ,OACrCqpJ,eACgBA,cAActD,aACtB3+I,QAAQ,SAACpO,GACQA,EAAE+sJ,aACV3+I,QAAQ,SAACi1B,EAAGvlC,GACrBmzJ,aAAanzJ,EAAIozJ,qBAAuBD,aAAanzJ,EAAIozJ,yBACzDD,aAAanzJ,EAAIozJ,qBAAqB1lJ,KAAK63B,OAKvD,IAAKytH,WAAW9pJ,SAAW+pJ,YAAY/pJ,OAAQ,CAC3C,IAAM0gE,KAAO,IAAIjB,MAAM4kF,UACvB3jF,KAAKypF,kBAAkBxvD,UAAWC,YAClCkvD,aAAeppF,OAGnB,KAAKspF,UAAUhqJ,QAAYiqJ,aAAajqJ,QAAWiqJ,aAAa,GAAGjqJ,QAAS,CACxE,IAAM0gE,MAAO,IAAIjB,MAAM4kF,UACvB3jF,MAAKypF,kBAAkBxvD,UAAWC,YAClCqvD,eAAiBvpF,QAGrB,OACItnD,MAAO0wI,WAAYC,aACnB5xI,SAAU6xI,UAAWC,cACrB1F,0BACAsF,wBACAD,yBA8IAV,CAAiB3C,iBAVjBzB,aAAc2C,gBACdpC,WAAYz1H,SAASsmE,QASuBz2B,MAAO6vC,cALnDl2F,KA5H4C6vI,kBA4H5C7vI,KACAjB,QA7H4C8wI,kBA6H5C9wI,QACAosI,aA9H4C0E,kBA8H5C1E,aACAqF,YA/H4CX,kBA+H5CW,YACAC,YAhI4CZ,kBAgI5CY,YAMJ,OAHAj6H,SAASw6H,UAAUhxI,MACnBwW,SAASy6H,aAAalyI,UAGlBiB,KAAMwW,SAASw6H,YACfjyI,QAASyX,SAASy6H,eAClBrtI,OAAQ4S,SAASkiH,cACjB4U,oCACAD,8BACAhrE,UACI/hE,IAAKkwI,YACLx7E,IAAKy7E,aAET/4F,UAAWyzF,aACXp/C,YACI4nC,0BACAwT,YAAavxI,aC5lBZs7I,gBACTtwJ,gBACAgxI,SACAkY,sBACA7V,eACA0V,gBACA4D,YACAC,YACAwD,aACAC,gBACAvY,eACAV,WACAh4C,w3CCSiBmxD,0CAOjB,SAAAA,eAAavwJ,4KAAcwwJ,CAAAlsJ,KAAAisJ,gBACvBjsJ,KAAKmsJ,aACLnsJ,KAAKosJ,gBACLpsJ,KAAKqsJ,iBACLrsJ,KAAKm4G,cAAgBz8G,aACrBsE,KAAKssJ,cACLtsJ,KAAKusJ,iBACLvsJ,KAAKwsJ,gBACLxsJ,KAAKysJ,SAAYnH,aAAeC,cAChCvlJ,KAAK0sJ,cAAiBrJ,kBAAoBW,mBAC1ChkJ,KAAK2sJ,uBACL3sJ,KAAK4sJ,UACL5sJ,KAAK6sJ,cACL7sJ,KAAK8sJ,OACD/uH,KACAv6B,KACA4wC,SACA9Z,QACAqnE,UAEJpzB,sBAAsBvuE,KAAMgsJ,gBAC5BhsJ,KAAKgrI,UAAU4G,2UAUQ,IAAA18H,MAAAlV,KACvB,OAAIoF,UAAa1D,QACbxI,OAAO+b,QAAP7P,UAAA1D,QAAA,OAAA6L,EAAAnI,UAAA,IAAgC0D,QAAQ,SAAC5H,KACrCgU,MAAKi3I,UAAUjrJ,IAAI,IAAMA,IAAI,KAE1BlB,MAEJA,KAAKmsJ,wDAUI,QAAA/2I,OAAApV,KAAAsoE,KAAAljE,UAAA1D,OAANqrJ,KAAM,IAAAlkJ,MAAAy/D,MAAAC,KAAA,EAAAA,KAAAD,KAAAC,OAANwkF,KAAMxkF,MAAAnjE,UAAAmjE,MAChB,OAAIwkF,KAAKrrJ,SACJ0kI,KAAMC,OAAQC,OAAQC,YAAaC,YAAY19H,QAAQ,SAACpO,GACrD0a,OAAKy3I,WAAL,GAAAnxI,OAAmBhhB,EAAnB,QAA6BqyJ,KAAK,GAAL,GAAArxI,OAAWhhB,EAAX,SAAsB0a,OAAKy3I,WAAL,GAAAnxI,OAAmBhhB,EAAnB,UAEhDsF,MAEJA,KAAK6sJ,+CAWZ,OAAIznJ,UAAK1D,QACL1B,KAAK8sJ,MAAQ5zJ,OAAO4T,UAAW9M,KAAK8sJ,MAAvB1nJ,UAAA1D,QAAA,OAAA6L,EAAAnI,UAAA,IACNpF,MAEJA,KAAK8sJ,8CAUG,IAAAp1I,OAAA1X,KACf,OAAIoF,UAAO1D,QACPxI,OAAO+b,QAAP7P,UAAA1D,QAAA,OAAA6L,EAAAnI,UAAA,IAA0B0D,QAAQ,SAACpO,GAC/Bgd,OAAK+0I,QAAQ/xJ,EAAE,IAAMA,EAAE,KAEpBsF,MAEJA,KAAKysJ,0DAUa,IAAAp3H,OAAAr1B,KACzB,OAAIoF,UAAY1D,QACZxI,OAAO+b,QAAP7P,UAAA1D,QAAA,OAAA6L,EAAAnI,UAAA,IAA+B0D,QAAQ,SAACpO,GACpC26B,OAAKq3H,aAAahyJ,EAAE,IAAMA,EAAE,KAEzBsF,MAEJA,KAAK0sJ,6EAWK7/I,OAAQkiI,aACzB,IAAMiZ,kBACA1E,uBA2BN,OA1B4Bt2C,qBAAMC,sBAAOC,uBAEtBpkG,QAAQ,SAACxN,MACxB,GAAIuR,OAAOvR,OAASuR,OAAOvR,MAAMiQ,MAAO,CACpC,IAAM8pH,IAAMxoH,OAAOvR,MACnB0sJ,eAAe1sJ,MAAQ+5H,IAAI9pH,MAC3B+3I,oBAAoBp9I,KAAKmvH,IAAI9pH,UAIjCsB,OAAM,QACNy2I,oBAAoBp9I,KAApBqB,MAAA+7I,oBAAmB0J,kCAASngJ,OAAOwuE,SAGnC0zD,YAAYrtI,QACZqtI,YAAYjmI,QAAQ,SAACyyF,OACbA,MAAMwP,UACN7xG,OAAOwlB,OAAO68E,MAAMwP,UAAUjiG,QAAQ,SAACusH,KAC/BA,MAAmD,IAA5CiuB,oBAAoBr9I,QAAQovH,IAAI9pH,QACvC+3I,oBAAoBp9I,KAAKmvH,IAAI9pH,MAAQ8pH,IAAI9pH,MAAQ8pH,SAMrEr1H,KAAKgsI,aAAcsX,0CACZ0E,qEAUKltI,KAAMg4H,SAClB,OAAIh4H,MACA9a,KAAKitJ,gBAAkBpa,wBAAwB7yI,MAAQ1E,KAAM6qI,IAAKv9H,OAAQkS,MAAQg4H,SAC3E9yI,MAEJA,KAAKitJ,kEAUFpzI,QAASi5H,SACnB,OAAIj5H,SACA7Z,KAAKktJ,cAAgBra,wBAAwB7yI,MAAQ1E,KAAM4qI,IAAKt9H,OAAQiR,SAAWi5H,SAC5E9yI,MAEJA,KAAKktJ,4DAWJ9qF,MACR,IAAMypC,SAAW7rG,KAAK6rG,WAOtB,OALA3yG,OAAOwlB,OAAOmtF,UAAU/iG,QAAQ,SAACpO,GACzBA,EAAEJ,qBAAqB8nE,OACvBA,KAAO1nE,KAGR0nE,iEAWQ9lC,SAIf,OAFAt8B,KAAKykJ,iBAEE,SAAC/zI,UAAWi+G,UAAW8e,QAAvB,OAAkC6W,8BAAiBhoH,QAAS5rB,UAAWi+G,UAAW8e,iDAUpF0f,WAAY7gJ,UACjBtM,KAAKmtJ,cAAcrkJ,QAAQ,SAACsS,IAAK4uI,QAC7B5uI,IAAItS,QAAQ,SAACgnE,IAAKm6E,QACd39I,SAAS09I,OAAQC,OAAQn6E,6DAYjC,IAAM1oD,OAASpnB,KAAKgsI,cAKpB,OAHA9yI,OAAO+b,QAAQjV,KAAKytI,UAAU3kI,QAAQ,SAACpO,GACnC0sB,OAAO1sB,EAAE,IAAMA,EAAE,KAEd0sB,iEASP,OAAOpnB,KAAK43F,MACR75D,EAAG,IAAIlnB,IACPrT,EAAG,IAAIqT,sDAWFgxI,kBAAmBh7I,QAAQ,IAAA27D,OAAAxoE,KAEhC8nJ,aAEAj7I,OAFAi7I,aACAl1B,MACA/lH,OADA+lH,MAGAnoB,cAEAo9C,kBAFAp9C,cACA2iD,mBACAvF,kBADAuF,mBAPgCC,mBAYhCrtJ,KAAKtE,eAFO+jC,WAVoB4tH,mBAUhCnzH,WACAulH,iBAXgC4N,mBAWhC5N,iBAGE/S,WAEA4gB,WlBxNmB,SAApBC,kBAAqB1gJ,QAC9B,IAAMygJ,cAQN,Od6KuB,cAID,YAIA,ac1LZxkJ,QAAQ,SAACiqD,WACMxlD,IAAjBV,OAAOkmD,QACPu6F,WAAWv6F,MAAQlmD,OAAOkmD,SAG3Bu6F,WkB+MgBC,CAAkBzF,kBAC/B50B,YAAcosB,uBAAWnsB,WAAW,GACpCq6B,gBACA7kJ,MAAQ3I,KAAK2I,QA6BnB,IAAK,IAAM5O,OA5BXiG,KAAK8I,QhClGe,cgCkGO,SAACtQ,EAAG0iB,EAAGooF,IAC9B,IAAIvrF,KAAOurF,GAAG7+E,SACd,IAAK1M,KAAM,CACP,IAAM80D,UAAS,GAAAnxD,OAAMljB,GAANkjB,OAAUR,GAEzBnD,KAAOunI,uBAAWxlJ,QACd2wG,4BACA2iD,wCAEA3tH,sBACAggH,oCAEJ+N,aAAa3gF,WAAa,KAC1B90D,KAAK6zF,SACDugC,SAAU3zI,EACVu8I,SAAU75H,EACV2xD,sBAEJ90D,KAAKpP,MAAMA,OACX26F,GAAG7+E,OAAO1M,OAEb20H,MAAMl0I,KAAOk0I,MAAMl0I,OACpBk0I,MAAMl0I,GAAG0iB,GAAKnD,KACdA,KAAKklI,YAAYrqB,OACjB76G,KAAK+iF,YAAYtyB,OAAKsyB,eACtBwI,GAAGz2F,OAAOygJ,cAGIp6B,YACdvqH,MAAMksB,OAAN,GAAAnZ,OAAgBswF,0BAAiBv7C,sBAAjC,KAAA/0C,OAA0D3hB,KAAOyzJ,cAIrE,OADA/N,iBAAiBxG,QAASztD,OAAQkhD,MAAOrpH,OhC1JtB,cgC0J2CkoE,WhC9IlD,SgC+ILvrF,KAAK0sI,MAAMA,qDASV7/H,OAAQ6D,UAAW61I,UAAU,IAEjCnyG,MAIAvnC,OAJAunC,MACAutD,MAGA90F,OAHA80F,MACArnE,KAEAztB,OAFAytB,KAGE1M,QADF/gB,OADAi7I,aAEyBC,YAPQ0F,mBAWjCztJ,KAAK+mB,eAFLu+H,UATiCmI,mBASjCnI,UACAC,UAViCkI,mBAUjClI,UAEEx6C,UACF32D,YACAutD,YACArnE,WAEEy2G,eAAWr1H,OAAAsxI,kCAAO1H,UAAUr9I,IAAI,SAAAvN,GAAC,OAAIA,EAAE4H,cAA5B0qJ,kCAA4CzH,UAAUt9I,IAAI,SAAAvN,GAAC,OAAIA,EAAE4H,eAC5EorJ,YACFvjF,QAASo8E,SAASvT,cAAc2a,uBAAuBj9I,UAAWq6F,SAAUgmC,YAAanjH,SACzFgqE,KAAM53F,KAAK43F,OACXmT,mBAGJ,OADAw7C,SAASqH,eAAeC,gBAAgBH,YACjC1tJ,mFAMP,OAFAA,KAAKysJ,WACLzsJ,KAAK0sJ,gBACE1sJ,6DASO,IAAA8tJ,WAKV9tJ,KAAK43F,OAHLxjD,MAFU05G,WAEV15G,MACAutD,MAHUmsD,WAGVnsD,MACArnE,KAJUwzH,WAIVxzH,KAGJ,OACI8Z,MAAO44G,kCAAI54G,OACXutD,MAAOqrD,kCAAIrrD,OACXrnE,KAAM0yH,kCAAI1yH,2DAWHh/B,MACX,OAAO0E,KAAK43F,OAAL,GAAAl8E,OAAepgB,mEAUPijB,aAAc1R,OAAQ05I,UAAU,IAAAwH,OAAA/tJ,KACzC+uI,YAAc/uI,KAAK+uI,cACzB/uI,KAAKsjJ,oBAAoBz2I,OAAQkiI,aACjC,IAAMif,YAAczH,SAASqH,eAAe/1C,YACxCt5F,0BACA1R,cACA+qF,KAAM53F,KAAK43F,SAGX6nD,iBACAz/I,KAAKtE,eADL+jJ,kBAGHxyC,sBAAOC,sBAAOF,sBAAMlkG,QAAQ,SAACpO,GAC1BqzJ,OAAKn2D,OAAOl9F,GAAKszJ,YAAYtzJ,KAGjC+kJ,iBAAiBxG,QAASztD,OAAQxrF,KAAK43F,OAAQv0E,OhC3P5B,cgC2PiDkoE,WhCnPxD,SgCoPZk0D,iBAAiBxG,QAASztD,OAAQxrF,KAAK0sI,QAASrpH,OhCxO3B,egCwOkDkoE,WhChP3D,SgCkPZ,IAAMmhD,SACA+X,aAAezkJ,KAAKykJ,eAY1B,OAVAzkJ,KAAK8I,QhCzOe,cgCyOO,SAACtQ,EAAG0iB,EAAGooF,IAC9BA,GAAG1L,KAAKo2D,aACR1qD,GAAG7+E,UAAY6+E,GAAG7+E,SAAS42H,cAAcxuI,QACzCy2F,GAAGoH,SAAS67C,SAASqH,eAAe9I,eAAej4I,OAAQ43I,aAAajsJ,GAAG0iB,KAC3EooF,GAAG2qD,cAEHvhB,MAAMxmI,KAAKo9F,GAAG7+E,YAGlBg7H,iBAAiBxG,QAASztD,OAAQkhD,MAAOrpH,OhC1P1B,UgC0P2CkoE,WhC9P9C,SgC+PLvrF,yDAWIkuJ,aAAcjmI,WAAYpb,QACrC,IAAIshJ,cACAC,eAEAtzI,KAEAozI,aAFApzI,KACAjB,QACAq0I,aADAr0I,QALyCw0I,oBAUzCruJ,KAAKtE,eAFOs1G,aAR6Bq9C,oBAQzCn0H,WACAulH,iBATyC4O,oBASzC5O,iBAGA6O,YAEAzhJ,OAFAyhJ,YACAtyD,YACAnvF,OADAmvF,YAEEo2C,SAAWpyI,KAAKkoJ,WAAWloJ,KAAK6rG,WAAWumC,UAC3C2T,UAAY/lJ,KAAKkoJ,WAAWloJ,KAAK6rG,WAAWk6C,WAhBLtS,MAAA8a,8BAiBfzzI,KAjBe,GAiBtC44H,SAjBsCD,MAAA,GAiB5BE,UAjB4BF,MAAA,GAAAG,SAAA2a,8BAkBf10I,QAlBe,GAkBtC20I,QAlBsC5a,SAAA,GAkB7B6a,WAlB6B7a,SAAA,GAmBvC8a,WAAazmI,WAAWnN,KACxB6zI,iBAAmB,SAAnBA,iBAAmBvsF,MAAI,OAAI,IAAI2jF,WAAYl5I,QAASsxF,KAAM/7B,KAAKv1D,SAASsxF,QAIxE7kF,SACFosB,KAAMwsG,0BAAcwB,SAAUgb,WAAW,GAAIJ,YAAclc,SAAW2T,WAChE/pD,wBAAagV,4BACnBrrE,MAAOusG,0BAAcyB,UAAW+a,WAAW,GAAIJ,YAAclc,SAAW2T,WAClE/pD,wBAAagV,6BAEjB49C,SACFlpH,KAAMguG,SAAShyI,OAAS,EAAIgyI,SAAS,GAAGzrI,IAAI0mJ,qBAC5ChpH,MAAOguG,UAAUjyI,OAAS,EAAIiyI,UAAU,GAAG1rI,IAAI0mJ,sBAhCNhhC,MAAA4gC,+BAkChB3gD,eAAMC,iBAAO5lG,IAAI,SAAA3M,MAAI,OAAIkzJ,QAAQvmJ,IAAI,SAAC6nE,IAAKt3E,GACpE,OAAIA,IAAMg2J,QAAQ9sJ,OAAS,EAChB4X,QAAQhe,MAEZszJ,QAAQtzJ,UAtC0B,GAkCtCuzJ,QAlCsClhC,MAAA,GAkC7BmhC,SAlC6BnhC,MAAA,GA0C7C,GAAuB,IAAnB6gC,QAAQ9sJ,OAAc,KAAAksH,MAAA2gC,+BACO3gD,eAAMC,iBAAO5lG,IAAI,SAAA3M,MAAI,OAAImzJ,WAAWxmJ,IAAI,SAAC6nE,IAAKt3E,GACvE,OAAU,IAANA,EACO8gB,QAAQhe,MAEZszJ,QAAQtzJ,UALG,GACrB6yJ,WADqBvgC,MAAA,GACTwgC,YADSxgC,MAAA,QAQtBugC,WAAaM,WAAWxmJ,IAAI,kBAAOyrI,SAAShyI,OAAS,EAAIgyI,SAAS,GAAGzrI,IAAI0mJ,uBACzEP,YAAcK,WAAWxmJ,IAAI,kBAAO0rI,UAAUjyI,OAAS,EAAIiyI,UAAU,GAAG1rI,IAAI0mJ,uBAShF,OANAlP,iBAAiBxG,QACbztD,QAASqjE,QAASC,SAAUX,WAAYC,aACxC/qI,OhC9Ue,cgC+UfkoE,WhCnTiB,mBgCsTZsjE,gBAASC,kBAAUX,sBAAYC,yEAa/B19I,UAAW7D,OAAQg7I,kBAAmBtB,UAQ/C,OAAOqB,8BANHl3I,oBACAm3I,oCACAtB,kBACAj1H,SAAUtxB,MAGkB6M,8CAIhC,OAAIzH,UAAO1D,QACP1B,KAAK+yH,OAAL3tH,UAAA1D,QAAA,OAAA6L,EAAAnI,UAAA,GACOpF,MAEJA,KAAK+yH,iUClaLg8B,wBAzHX,SAAAA,YAAaC,sKAAWC,CAAAjvJ,KAAA+uJ,aACpB,IAAMG,iBAENlvJ,KAAKk8C,OAAO8yG,eACZhvJ,KAAK0T,OAAO,kBAAM,IAElB1T,KAAKmnC,KAAK,SAACm8D,GAAIspC,KAAMG,MACjB,IAAMoiB,UAAY7rD,GAAGvkF,UACrB,GAAIowI,WAAaA,UAAUz2H,GAAI,CAC3B,IAAMA,GAAKy2H,UAAUz2H,KACrBw2H,cAAcx2H,KACVo4E,SAAUq+C,UACVhjB,SAAUS,KACVmI,SAAUhI,SAKtB/sI,KAAKkvJ,cAAcA,iUAInB,OAAI9pJ,UAAG1D,QACH1B,KAAKovJ,eAALhqJ,UAAA1D,QAAA,OAAA6L,EAAAnI,UAAA,GACOpF,MAEJA,KAAKovJ,uDAUZ,OAAIhqJ,UAAO1D,QACP1B,KAAKqvJ,QAALjqJ,UAAA1D,QAAA,OAAA6L,EAAAnI,UAAA,GACOpF,MAEJA,KAAKqvJ,gDAYZ,OAAIjqJ,UAAG1D,QACH1B,KAAKsvJ,UAALlqJ,UAAA1D,QAAA,OAAA6L,EAAAnI,UAAA,GACOpF,MAEJA,KAAKsvJ,gDASZ,IAAIC,SAAW,EASf,OAPAvvJ,KAAKk8C,SAASpzC,QAAQ,SAACsS,KACnB,IAAIo0I,gBAAkB,EACtBp0I,IAAItS,QAAQ,SAACs5D,MACTotF,iBAAmBptF,KAAKqtF,kBAAkBh0H,QAE9C8zH,SAAW1rJ,KAAKwQ,IAAIk7I,SAAUC,mBAE3BD,iDASP,IAAIG,UAAY,EAShB,OAPA1vJ,KAAKk8C,SAASpzC,QAAQ,SAACsS,KACnB,IAAIu0I,iBAAmB,EACvBv0I,IAAItS,QAAQ,SAACs5D,MACTutF,iBAAmB9rJ,KAAKwQ,IAAIs7I,iBAAkBvtF,KAAKqtF,kBAAkB/zH,UAEzEg0H,WAAaC,mBAEVD,4CAULxwI,IACF,IAAMg9B,OAASl8C,KAAKk8C,SACdltC,SAAWhP,KAAK0T,SAStB,OAPAwoC,OAAOpzC,QAAQ,SAACsS,IAAK4uI,QACjB5uI,IAAItS,QAAQ,SAACgnE,IAAKm6E,QACVj7I,SAAS8gE,MACT5wD,GAAG4wD,IAAKk6E,OAAQC,OAAQ/tG,YAI7Bl8C,qEAGU04B,IACjB,OAAO14B,KAAKkvJ,gBAAgBx2H,0mBC3H7B,6BAgCMk3H,0BAAqB,SAArBA,mBAAsBtzH,QAAS8tH,aAAgB,IAEpD1rI,OAGA0rI,YAHA1rI,OACA5D,KAEAsvI,YAFAtvI,KACAjB,QACAuwI,YADAvwI,QAcJ,OAZA6E,OAASA,WACT5D,KAAOA,SACPjB,QAAUA,YACVyiB,QAAQuzH,aAAazc,UACjB35I,MAAO,IAAIs1J,aAAYrwI,QACvBgnB,KAAM,IAAIqpH,aAAYj0I,KAAK,IAC3B6qB,MAAO,IAAIopH,aAAYj0I,KAAK,IAC5BwnB,IAAK,IAAIysH,aAAYl1I,QAAQ,IAC7B23C,OAAQ,IAAIu9F,aAAYl1I,QAAQ,KAGpCyiB,QAAQ67E,cAAc2Z,UAAUC,OAAO5gE,aAAYG,gBAAgB,GAC5Dh1B,SAGEwzH,sBAAiB,SAAjBA,eAAkBxzH,SAC3B,IAAMxhB,KAAOwhB,QAAQxhB,OACfjB,QAAUyiB,QAAQziB,UAClBu6B,MAAQ9X,QAAQ8X,QAChB1jC,UAAY4rB,QAAQtxB,OACpBsvB,KAAOgC,QAAQhC,OACf+gD,OAAS/+C,QAAQ++C,SACjBigB,OAASh/D,QAAQg/D,SACjB3/C,UAAYrf,QAAQqf,YACpB9uC,OAASyvB,QAAQzvB,SACjB80F,MAAQrlE,QAAQqlE,QAGhBrwE,SAAWgL,QAAQhL,WACzBA,SAAS3oB,MAAM2zB,QAAQ3zB,SACvB2oB,SAASwpE,YAAYx+D,QAAQw+D,eAE7B,IAAIi1D,cACAv9F,UAAWl2B,QAAQk2B,YACnBogE,MAAOt2F,QAAQs2F,QACfk1B,aAAcj7I,WACdiO,UACAjB,gBACAwhE,cACAigB,cACA3/C,sBCxDkC,SAA7Bq0G,2BAA8B1zH,SACvCA,QAAQ3zB,QAAQ6qF,aACZ3mB,UAAW,QACX9yE,IAAK,gBDwDTi2J,CAA2B1zH,SAE3B,IAAM2zH,cAlEoB,SAAxBC,sBAAyBC,aAC3B,IAAM1iF,QACN,IAAK,IAAM1zE,OAAOo2J,YAAa,CAC3B,IAAMC,UAAYD,YAAYp2J,KAM1B0zE,KAAK1zE,KALgB,iBAAdq2J,WAA2BA,UAKtBA,WAHR7kJ,MAAO4kJ,YAAYp2J,MAM/B,OAAO0zE,KAsDeyiF,EAClB97G,YACAutD,YACArnE,YAGJy1H,aAAe72J,OAAO4T,OAAOijJ,aAAcE,eAE3C,IAAM1J,YACNA,SAASqH,eAAiB,IAAIzc,+BAC9BoV,SAASvT,cpB6Ja,SAAbqd,WAAc/0D,QACvB,IAAIw3C,QAAU,IAAIhH,mCAMlB,OAJIxwC,OAAO55F,SAEPoxI,QAAUx3C,OAAOz8E,MAAM,SAAAnkB,GAAC,MAAe,QAAXA,EAAEiwG,OAAkB,IAAIylC,2BAAiB0C,SAElEA,QoBpKkBud,CAAW/0D,QACpChqE,SAASwhH,QAAQyT,SAASvT,eAG1B12G,QAAQg0H,UAAU/J,SAASvT,cAAcptH,YAAYtqB,QAGrD,IAAMsN,OAAS29I,SAASvT,cAAcud,eAAe7/I,UAAWq/I,cAChExJ,SAASvT,cAAcwd,kBAAkB3jJ,OAASA,OAAOk9H,YAAenhI,QAExE0yF,QAAUhqE,SAASy9G,YAAYzzC,QAE/BhqE,SAASozH,eAAe97I,OAAOkS,KAAMyrI,UAAU5B,aAAa/7I,OAAOiR,QAAS0sI,UAE5E,IAAMkK,gBAAkBn/H,SAASo/H,YAAYhgJ,UAAWq/I,aAAczzH,QAAQuvE,WAAY06C,UA6B1F,OA5BAjqH,QAAQq0H,kBAAoBF,gBAAgB5pD,WAAW4nC,aAEvDnyG,QAAQk2B,UAAUi+F,gBAAgBj+F,WAGlClhC,SAASs/H,kBAAkBH,gBAAgB5pD,WAAWo7C,YAAYzjI,kBAAmByxI,cAC7E1J,UAGRj1H,SAASu/H,WAAWd,aAAcU,gBAAgB5pD,WAAY0/C,UAG9DqJ,0BAAmBtzH,QAASm0H,iBAG5Bn0H,QAAQw0H,eAAex/H,SAASy/H,cAAcN,gBAAiB7nJ,OAAQiE,SAGvEyvB,QAAQm0H,gBAAgBA,iBAExBn0H,QAAQuzH,aAAaj4D,KAAOtmE,SAASsmE,OACrCt7D,QAAQ00H,UACJC,OAAQ9d,uBAAWsd,gBAAiBlK,SAASvT,iBAGjD1hH,SAASwhH,UAAUoe,iBAAiB50H,SCzHI,SAA/B60H,6BAAgC70H,SAC3BA,QAAQ3zB,QAChBipH,wBAAuB,GAAAl2G,OAAIswF,0BAAiBv7C,sBAArB,YAAsD,WAC/En0B,QAAQhL,WAAWwhH,UAAUoe,iBAAiB50H,WAC/C,GACCuwC,UAAW,QACX9yE,IAAK,gBDqHTo3J,CAA6B70H,SACtBA,+LE9IJ,IAAMu+D,8BAAKu2D,kCAAAC,0BACdz+B,SACA5nH,QACA8lJ,gBACI7kF,cACI4iF,WACAC,YACAX,cACAC,iBAGRkC,aAEAU,UACI/kF,cACIglF,YAGRR,iBACIxkF,iBAEJ36C,YACAwpE,aACI7uB,aAAc,SAAAA,aAAA/qE,KAAG,OAAIA,MAEzB2qG,UACI39B,aAAc,SAAAA,aAAC5xC,QAAS7iC,OAIpB,OAHI6iC,QAAQhL,UACRgL,QAAQhL,WAAWu6E,SAASpyG,MAAM63J,cAE/B73J,QAGf+4D,cpCLkB,aoC5BJ4+F,kCAAAC,yBAmCbrrB,SAnCaorB,kCAAAC,yBAoCbprB,YApCamrB,kCAAAC,yBAqCbpkD,0BArCamkD,kCAAAC,yBAsCbnkD,0BAtCakkD,kCAAAC,yBAuCbrkD,yBAvCaokD,kCAAAC,yBpC2HI,aoC3HJD,kCAAAC,yBpCgII,aoChIJD,kCAAAC,yBpCqIO,gBoCrIPA,myCC0PHE,oCApNX,SAAAA,YAAa1lD,SAAUnwG,cAAc,IAAAwZ,iKAAAs8I,CAAAxxJ,KAAAuxJ,aACjCr8I,0LAAAu8I,CAAAzxJ,KAAA0xJ,4BAAAH,aAAA54J,KAAAqH,OADiC,IAI7B2xJ,qBACA9lD,SADA8lD,qBAJ6B,OAOjCz8I,MAAKijG,cAAgBz8G,aAKrB6yE,sBAAsBqjF,sEAAA18I,QAAM2lF,8BAC5BtsB,sBAAsBqjF,sEAAA18I,QAAM4qI,eAG5B5qI,MAAK26I,gBAEL36I,MAAKuyD,SAELvyD,MAAKguF,OAAS,KAEdhuF,MAAK28I,cAEL38I,MAAKoc,SAAS,IAAI26H,+BAAe/2I,MAAKijG,gBAEtCy3C,0BAAmBgC,sEAAA18I,YAEnBA,MAAK22F,UACDpB,cAAeknD,qBAAqBlnD,cAAcpxG,MAClDi4J,aAAcK,qBAAqBL,aAAaj4J,QA9BnB6b,uYAVf4xH,ySAuDlB,OAAI1hI,UAAO1D,QACP1B,KAAK+yH,OAAL3tH,UAAA1D,QAAA,OAAA6L,EAAAnI,UAAA,GHxEyB,SAAxB6tH,sBAAyB32F,SAClC,IAAM42F,YAAc52F,QAAQ1W,YAAYutG,WAAW,GACrC72F,QAAQ3zB,QAChBksB,OAAOm3E,0BAAiBn7C,uBAAwBqiE,aGsE9CD,CAAsBjzH,MH/EH,SAAlB8xJ,gBAAmBx1H,SAAY,IACjC42F,YADiC6+B,kCAClBzS,uBAAWnsB,WADO,MAE1B72F,QAAQ3zB,QAChBksB,OAAOm3E,0BAAiBv7C,sBAAuByiE,aG6E7C4+B,CAAgB9xJ,MHpEI,SAAnBgyJ,iBAAoB11H,SAAY,IAClC42F,YADkC6+B,kCACnBx/B,qBAAUY,WADS,MAEzC72F,QAAQ3zB,QAAQksB,OAAOm3E,0BAAiBp7C,uBAAwBsiE,aGmExD8+B,CAAiBhyJ,MFvFO,SAAvBiyJ,qBAAwB31H,SACjC,IAAM3zB,MAAQ2zB,QAAQ3zB,QAEtBA,MAAMipH,wBAAuB,GAAAl2G,OAAIswF,0BAAiBn7C,uBAArB,cAAyD,WAChEv0B,QAAQhL,WAAWsmE,OAC3B75D,EAAEj1B,QAAQ,SAAA8uF,MAAI,OAAIA,KAAK9uF,QAAQ,SAAC8oD,MACtCA,KAAK2yC,eAIb57F,MAAMipH,wBAAuB,GAAAl2G,OAAIswF,0BAAiBn7C,uBAArB,cAAyD,WAChEv0B,QAAQhL,WAAWsmE,OAC3Bp0F,EAAEsF,QAAQ,SAAA8uF,MAAI,OAAIA,KAAK9uF,QAAQ,SAAC8oD,MACtCA,KAAK2yC,eE4EL0tD,CAAqBjyJ,MACdA,MAEJA,KAAK+yH,+DASZ,OAAI3tH,UAAS1D,OACF1B,KAEJA,KAAKoqF,cAAcgpD,2DA8B1B,OAAIhuI,UAAO1D,OACA1B,KAEJA,KAAK6vJ,2DAWZ,OADA7vJ,KAAK2I,QAAQiU,MAAM2vH,OACZvsI,uDAUP,OADAA,KAAK2I,QAAQiU,MAAM4vH,SACZxsI,yCAWJkyJ,UACH,OvBrBmB,SAAdC,YAAeD,SAAU9xI,WAClC,IAAIgyI,QAAU,KAQd,OANCnlD,sBAAOD,qBAAME,uBAAOpkG,QAAQ,SAACpO,GACtB23J,iBAAK1pJ,MAAMtP,IAAIqB,IAAMw3J,WAAaG,iBAAK1pJ,MAAMtP,IAAIqB,GAAG,KACpD03J,QAAU13J,KAId03J,SACSA,mBAEZjsB,IAAKD,KAAKp9H,QAAQ,SAACwpJ,WAChBlyI,UAAS,GAAA1E,OAAI42I,UAAJ,WAAuBxpJ,QAAQ,SAACpO,GACjCA,EAAE4H,aAAe4vJ,WACjBE,SAAYA,QdwHP,QcxHuB92J,KAAMg3J,YAAcpsB,Id7D1C,Sc6DyDC,UAKvEisB,WAIHjsB,IAAKD,KAAKp9H,QAAQ,SAACypJ,UAChBnyI,UAAS,GAAA1E,OAAI62I,SAAJ,gBAA2BzpJ,QAAQ,SAACpO,GACzCA,EAAEoO,QAAQ,SAAClQ,GACHA,EAAE0J,aAAe4vJ,WACjBE,QAAUG,WAAarsB,IAAM5mF,EAAIr7C,SAM7CmuJ,SACSA,iBAEN,OuBhBID,CAAYD,SAAUlyJ,KAAKsxB,WAAWvK,wDAWxCzrB,MACL,MrClBe,YqCkBXA,KACO0E,KAAKsxB,WAAWkhI,iBAEpBxyJ,KAAKsxB,WAAWmhI,cAAcn3J,gDAS/BA,MACN,OAAO0E,KAAKsxB,WAAL,GAAA5V,OAAmBpgB,KAAnB,8EAGW82J,SAAS,IAAAM,sBAIvB1yJ,KAAKsxB,WAAWvK,eAFhBs8H,eAFuBqP,sBAEvBrP,eACAW,eAHuB0O,sBAGvB1O,eAEJ,OAAOoO,UAAYnuJ,EAAIo/I,eAAiBW,6EAGxB0B,UAChB,IAAMp0H,SAAWtxB,KAAKsxB,WAEtB,OADcA,SAASg3H,WAAW5C,WAAap0H,SAAS+2H,WAAW3C,0EAIpDrkB,SAAUqkB,UACzB,IAAMp0H,SAAWtxB,KAAKsxB,WAItB,OAHcA,SAASg3H,WAAW5C,WAAap0H,SAAS+2H,WAAW3C,WAChD,GAAG3mI,UAAU64E,OAAOypC,4DAW9B,IAAA/sG,KACH3rB,MAAQ3I,KAAK2I,QAEnB,OAAAgqJ,4BAAAr+H,QrCzMc,SqC0MA3rB,MAAMtP,IrC1MN,WqCyMds5J,4BAAAr+H,KrC5Ja,QqC8JA3rB,MAAMtP,IrC9JN,UqC4Jbi7B,6DAaA,OAAOt0B,KAAK2wJ,0EAIZb,sBAAe9vJ,oDA7Kf,QACI8W,QACIinB,KACAv6B,KACA0jE,y3DC7EKuwB,wyBAAwBJ,mWAKxB5J,OAAQqB,cACrB,GAAe,OAAXrB,OACAqB,aAAa0H,aACV,GAAI/I,OAAO/rF,OAAQ,CAEtB,IAAMkxJ,kBAAoBnlE,OAAO/5E,OAAO,SAAA5a,GAAC,OAAIg2F,aAAalgE,KAAK91B,KAAOw1F,gCAAUzB,oBACzEiC,aAAalgE,KAAK91B,KAAOw1F,gCAAU5B,qBAEtCkmE,kBAAkBlxJ,QAClBotF,aAAawI,cACbxI,aAAa/3E,IAAI67I,qBAEjB9jE,aAAa4H,aACb5H,aAAa1nD,OAAOqmD,SAVF,IAYdF,QAAYuB,aAAaqH,UAAzB5I,QACFgK,iBAAa77E,OAAAm3I,yBAAO,IAAIh8I,IAAI02E,QAAQ,KAAvBslE,yBAA+B,IAAIh8I,IAAI02E,QAAQ,MAC5DiK,iBAAmB1I,aAAa6H,iBAAiBj1F,OACnD6rF,QAAQ,GAAG7rF,SAAW81F,kBAAoBD,cAAc71F,SAAW81F,kBACnE1I,aAAa0H,aAGjB1H,aAAa1nD,OAAO0nD,aAAa6H,kBAErC,OAAO32F,uDA3BP,MAAO,iOCFf,2EAEaqzF,kDAAkBy/D,6CAAAC,2CAC1Bre,wBAAQxoD,MACL7uC,OAAM,IAAA3hC,OAJM,OAIN,kBACN21E,YAAaub,2BAAWhW,SAHDk8D,6CAAAC,wCAK1Bre,wBAAQvoD,OACL9uC,QAAQ,IAAA3hC,OARI,OAQJ,oBACR21E,YAAaub,2BAAW/V,aAPDi8D,6CAAAC,wCAS1Bre,wBAAQroD,OACLhvC,QAAQ,IAAA3hC,OAZI,OAYJ,oBACR21E,YAAaub,2BAAW5V,UAXD+7D,yCAelBC,8CAAuBF,6CAAAG,yBAC/BrmD,2BAAW5V,OAAS4V,2BAAW7V,QADA+7D,6CAAAG,sBAE/BrmD,2BAAWhW,MAAQgW,2BAAW/V,WAFCo8D,wNChB7B,IAAM5jE,sDAAkB6jE,6CAAAC,oDCHV,SCAO,gBFKpBp6J,KEJmB,cFKnB4N,SACIg8F,SAAU,WAJSuwD,6CAAAC,iDCFN,aCAE,gBFEID,6CAAAC,iDAAA,WASvBp6J,KEXmB,cFYnB4N,SACIg8F,SAAU,WAXSwwD,kDAgBlBC,wBAAsBF,6CAAAG,yBCnBd,UDqBbt6J,KEpBmB,cFqBnB4N,SACIg8F,SAAU,WAJauwD,6CAAAG,sBClBV,cD0BjBt6J,KE1BmB,cF2BnB4N,SACIg8F,SAAU,WAVauwD,6CAAAG,sBCfb,UD4BI,WAbSA,uBGCtBC,iBACTh5H,KAAM,UACNqnE,MAAO,WACPvtD,MAAO,YASEm/G,MAAQ,shBC3Bd,IAAM5gE,iBAAY,SAAZA,UAAa6C,SAAUnyE,OAAQyrE,cAA8B,IAClEC,gBADkDliF,OAAgBzH,UAAA1D,OAAA,QAAA6L,IAAAnI,UAAA,GAAAA,UAAA,MAEhE9J,KAAOk6F,SAASl5D,QAAQ1W,YAAYtqB,OACpC2vB,QAAUpe,OAAOoe,QACjBjgB,KAAOwqF,SAASl5D,QAAQtxB,OACxBgmJ,SAAWx7D,SAASl5D,QAAQ00H,WAC5B3nF,UAAY2nF,SAAS1yI,UAAU3S,OAAO,GAAGrQ,KAEzC8gJ,eACAv5H,SAAW2yE,SAASl5D,QAAQqpD,IAClCy2D,YAAY/4H,OAAS2vI,6CAAwB3vI,SAAWA,OACxD+4H,YAAYtuD,YAAcslE,uBAAuB/vI,QACjD+4H,YAAYY,aAAexnD,SAASl5D,QAAQk3H,cAC5C,IAAMxoI,gBAAkBwqE,SAAS9F,SAASC,YAAYysD,YAAY/4H,QAAQuC,YAAY4sE,UACtF,GAAyB,OAArBvnE,QAAQ9N,SACR4xE,gBAAkB,SACf,CACH,IAAMzB,SAAWwB,aAAaN,YAC1B9vE,OAAS1T,KAAK0I,OAAO,SAAA5a,GAAC,OAAqC,IAAjCw0F,SAASjmE,KAAKphB,QAAQnN,EAAE4/B,MAAYzwB,IAAI,SAAAnP,GAAC,OAAIA,EAAE26J,SAC7E,GDPY,SCORn4J,MDkBY,aClBMA,MDmBP,YCnB4B+tE,UAAwB,CAC/D,IAAM99D,MAAQrS,OAAO4M,KAAKmlB,QAAQ9N,cAAgB,GAElD4xE,iBADArwE,OAAS1T,KAAK0I,OAAO,SAAA5a,GAAC,OAAqC,IAAjCw0F,SAASjmE,KAAKphB,QAAQnN,EAAE4/B,MAAYzwB,IAAI,SAAAnP,GAAC,OAAIA,EAAEyI,SAChDG,OAASsvJ,SAAS/xI,OAAO,SAACrW,QAE/C,IADA,IAAI8qJ,OAAQ,EACHl7J,EAAI,EAAGA,EAAIkmB,OAAOhd,SAET,KADdgyJ,MAAQ9qJ,OAAO2C,OAAO9R,OAASilB,OAAOlmB,GAAG,IAAMoQ,OAAO2C,OAAO9R,OAASilB,OAAOlmB,GAAG,IADjDA,KAMnC,OAAOk7J,QAEPv0I,WAAW,IACV,SDpBO,aCqBL7jB,KACPyzF,gBAAkBhf,sBAAsBihF,SAAU/lI,QAAQ9N,UACnDuB,OAAOhd,OACdqtF,gBnQwoCyB,SAA/B4kE,6BAAgC/2I,MAAO2F,aACzC,IACIvX,KADAW,UAEEwpF,SAAWv4E,MAAM4B,kBA2BvB,OA1BI+D,YAAY7gB,OAAQ,WAGpB,IAFA,IAAMkH,OAAS2Z,YAAY,GACrB9Z,IAAMG,OAAOlH,OACVlJ,EAAI,EAAGA,EAAIiQ,IAAKjQ,IAAK,CAC1B,IAAM+S,MAAQ3C,OAAOpQ,GACfgqG,SAAWrN,SAAS5pF,QAAUrS,OAAO4T,UAAWqoF,SAAS5pF,OAAOoT,KAClE6jF,UACA72F,OAAOzF,KAAKhN,OAAO4T,OAAO01F,WAIlCx3F,QAEA,IADA,IAAMwO,OAAS+I,YAAY,GAZPuqH,OAAA,SAAAA,OAaXt0I,KACL,IACM6vE,QADO9lD,YAAY/pB,KAEpBsQ,QAAQ,SAACmJ,SAAU86H,MACpB1kE,KAAK7uD,OAAOuzH,OAAS96H,WAEzBjH,KAAK9E,KAAKmiE,OANL7vE,IAAI,EAAGA,IAAI+pB,YAAY7gB,OAAQlJ,KAAK,EAAGs0I,OAAvCt0I,KAbW,IAsBpBwS,QACAW,WAGG,IAAIiR,MAAMgJ,YAAY5a,KAAMW,QmQtqCTgoJ,CAA6B3C,UAAW/lI,QAAQ9N,SAAS,IAA7BzB,OAAAk4I,sCAAoCl1I,OAAOzW,IAAI,SAAAnP,GAAC,OAAKA,SAEnGsjJ,YAAYj/H,SAAW,KACvB4xE,gBAAkBiiE,SAAS/xI,OAAO,kBAAM,IACpCE,WAAW,KAKvB,IAAI2D,6BAA8B,EAE9BisE,kBAEAjsE,4BADeisE,gBAAgBpiE,YACM9N,MAAM,SAAA/lB,GAAC,MDZ7B,YCYiCA,EAAEwC,QAGtD,IAAMyoB,YACFlB,SAAQ,UAAAnH,OAAYmH,UACpBoI,QAASmxH,YACTj/H,SAAmC,OAAzBi/H,YAAYj/H,SAAoB,KAAO4xE,gBACjD/jE,gCACAlI,wDACAO,OAAQ+4H,YAAY/4H,QAGxB2tI,SAASr+D,UAAU5D,gBAAiBhrE,YAAY,ywCCzD7C,IAAM8vI,+BAAb,SAAAC,WACI,SAAAD,iBAAwB,IAAA1tD,iBAAAjxF,oKAAA6+I,CAAA/zJ,KAAA6zJ,gBAAA,QAAAvrF,KAAAljE,UAAA1D,OAARkgB,OAAQ,IAAA/Y,MAAAy/D,MAAAC,KAAA,EAAAA,KAAAD,KAAAC,OAAR3mD,OAAQ2mD,MAAAnjE,UAAAmjE,MAAA,OACpBrzD,MAAA8+I,0CAAAh0J,MAAAmmG,iBAAA8tD,+BAAAJ,iBAAAl7J,KAAA4O,MAAA4+F,kBAAAnmG,MAAA0b,OAASkG,WACJ8vE,wBAFex8E,MAD5B,0XAAAg/I,CAAAL,eAAoC1kE,qQAApCglE,CAAAN,iBAAA95J,IAAA,6BAAAN,MAAA,SAAAq5F,2BAMgChE,cACxB,OAAOA,aAAa,MAP5B/0F,IAAA,YAAAN,MAAA,SAAAk5F,UAUeyhE,cAAenpI,QAAS6jE,cAC/B6D,iBAAU3yF,KAAMo0J,cAAetlE,cAC3B7jE,qBAZZlxB,IAAA,wBAAAN,MAAA,SAAAq8F,sBAgB2B34E,UACnB,IAAIuB,OACAk1E,UACEt4F,KAAO0E,KAAKs8B,QAAQ1W,YAAYtqB,OAkBtC,OAhBiB,OAAb6hB,SACAy2E,UAAY,KFfJ,SEgBDt4F,MACPojB,OAASxlB,OAAOwlB,OAAOvB,UACvBy2E,UAAY5zF,KAAKs8B,QAAQtxB,OAAO0I,OAAO,SAAA5a,GAAC,OAAiC,IAA7B4lB,OAAOzY,QAAQnN,EAAEyI,SAAe0G,IAAI,SAAAnP,GAAC,OAAIA,EAAE4/B,MFjB3E,aEkBLp9B,KACPs4F,cAEAl1E,OAASvB,SAAS,IAEdy2E,UAAY5zF,KAAKs8B,QAAQtxB,OAAO0I,OAAO,SAAA5a,GAAC,OAAkC,IAA9B4lB,OAAOzY,QAAQnN,EAAE26J,UAAgBxrJ,IAAI,SAAAnP,GAAC,OAAIA,EAAE4/B,MAExFha,OAASxlB,OAAOwlB,OAAOvB,UACvBy2E,UAAY5zF,KAAKs8B,QAAQtxB,OAAO0I,OAAO,SAAA5a,GAAC,OAAiC,IAA7B4lB,OAAOzY,QAAQnN,EAAEyI,SAAe0G,IAAI,SAAAnP,GAAC,OAAIA,EAAE4/B,OAI3FrR,KAAMusE,UACNh3E,MAAO,SAvCnB7iB,IAAA,cAAAN,MAAA,SAAA27F,cA4CQ,OAAO,SA5Cfy+D,eAAA,2KCC2B,6BCkBZh6D,wBArB0B,SAARA,MAAQrE,UAAQ,OAAI,SAAC6D,SAAUhI,YAC5D,IAAMsC,kBAAoB,SAApBA,kBAA8B3sF,MAChC,IAAM2yE,MAAQ0P,0BACRp+D,SACF9N,SAAUq4E,SAASl5D,QAAQ+3H,oBAAoBrtJ,OAEnDqqF,WAAWvoF,QAAQ,SAAAmpF,WAAS,OAAIuD,SAAS7B,kBAAkB1B,UAAWhnE,WACtE0uD,MAAM7iD,mBAGVuiE,SAASjsB,GAAG,YAAaumB,mBACRvmB,GAAG,YAAaumB,mBAChBvmB,GAAG,WAAY,WACZ,IAAMuM,MAAQ0P,0BACdgI,WAAWvoF,QAAQ,SAAAmpF,WAAS,OAAIuD,SAAS7B,kBAAkB1B,WACvD90E,SAAU,SAEdw8D,MAAM7iD,sBCRfwjE,wBAXD,SAARA,MAAQ9E,UAAQ,OAAI,SAAC6D,SAAUhI,YAQjCgI,SAASjsB,GAAG,QAPc,SAApBumB,kBAA8B3sF,MAChC,IAAMikB,SACF9N,SAAUq4E,SAASl5D,QAAQ+3H,oBAAoBrtJ,OAEnDqqF,WAAWvoF,QAAQ,SAAAmpF,WAAS,OAAIuD,SAAS7B,kBAAkB1B,UAAWhnE,oMCNvE,IAAMopE,mCAAeigE,iCAAAC,4BCLR,OJWoB,SAAP3yE,KAAO4T,UAAQ,OAAI,SAAC6D,SAAUhI,YAC3D,IAEIpmE,QAFAqtE,YACAC,UAEEiB,OAASjQ,2BACTjtD,QAAUk5D,SAASl5D,QACnBk4H,YAAcl4H,QAAQgjE,cAAcm1D,mBACpCpzB,SAAsC,eAA3B/kG,QAAQzvB,SAASq8B,MAAyB,IAAM,IAC3DwrH,UAAYp4H,QAAQs1B,OAAOntC,SAASkkB,QACpCgsH,aAAeD,UAAUnzJ,QAAqB,MAAb8/H,SAAmB,EAAI,GAE9DhoC,SAAS1gG,KAAK6gG,SAASpsB,GAAG,QAAS,WAC/B,IAAMuM,MAAQ0P,0BACdiP,UACIv6D,EAAG47C,MAAM57C,EACTv6B,EAAGm2E,MAAMn2E,KAEd4pE,GAAG,OAAQ,WACV,IAAMuM,MAAQ0P,2BAEdkP,QACIx6D,EAAG47C,MAAM57C,EACTv6B,EAAGm2E,MAAMn2E,IAENu6B,EAAIl6B,KAAKwQ,IAAI,EAAGxQ,KAAKsQ,IAAIokF,OAAOx6D,EAAGy2H,YAAY/4H,QACtD88D,OAAO/0F,EAAIK,KAAKwQ,IAAI,EAAGxQ,KAAKsQ,IAAIokF,OAAO/0F,EAAGgxJ,YAAY94H,SAEtDzQ,SACI9N,SAAUy3I,uBACLt4H,QAAQ9oB,aAAekhJ,UAAU/qH,OAAO2uD,SAAS+oC,UAA2B,EAAfszB,cAC1DD,UAAU/qH,OAAO4uD,OAAO8oC,UAA2B,EAAfszB,eAAmBzhJ,KAAK,SAACtY,EAAGwI,GAAJ,OAAUxI,EAAIwI,MAGtFiuF,WAAWvoF,QAAQ,SAAAmpF,WAAS,OAAIuD,SAAS7B,kBAAkB1B,UAAWhnE,aACvEmiD,GAAG,MAAO,WACT,IAAMuM,MAAQ0P,2BAEdkP,QACIx6D,EAAG47C,MAAM57C,EACTv6B,EAAGm2E,MAAMn2E,IAENu6B,EAAIl6B,KAAKwQ,IAAI,EAAGxQ,KAAKsQ,IAAIokF,OAAOx6D,EAAGy2H,YAAY/4H,QACtD88D,OAAO/0F,EAAIK,KAAKwQ,IAAI,EAAGxQ,KAAKsQ,IAAIokF,OAAO/0F,EAAGgxJ,YAAY94H,SAElDzQ,QADAqtE,SAAS+oC,YAAc9oC,OAAO8oC,WAE1BlkH,cAIAA,SAAUy3I,uBACLt4H,QAAQ9oB,aAAekhJ,UAAU/qH,OAAO2uD,SAAS+oC,UAA2B,EAAfszB,cAC1DD,UAAU/qH,OAAO4uD,OAAO8oC,UAA2B,EAAfszB,eAAmBzhJ,KAAK,SAACtY,EAAGwI,GAAJ,OAAUxI,EAAIwI,MAI1FiuF,WAAWvoF,QAAQ,SAAAmpF,WAAS,OAAIuD,SAAS7B,kBAAkB1B,UAAWhnE,iBG7DlDqpI,iCAAAC,yBCJP,QDMI16D,yBAFGy6D,iCAAAC,yBCFP,QDKIj6D,yBAHGi6D,gNEE5B,IAAMM,qBAAuB,SAAvBA,qBAAwBh0E,QAASjvB,KAAM7oC,UACzC,IAAI5L,YAEAu3I,UAEA9iG,KAFA8iG,UACArzB,SACAzvE,KADAyvE,SAGA/oC,SAKAvvE,SALAuvE,SACAC,OAIAxvE,SAJAwvE,OACAu8D,oBAGA/rI,SAHA+rI,oBACAC,kBAEAhsI,SAFAgsI,kBACApyG,OACA55B,SADA45B,OAEEqyG,kBAAoBn0E,QAAQwgD,UAalC,OAVIlkH,SADAm7E,SAAS+oC,YAAc9oC,OAAO8oC,aAEvB2zB,kBAAoBF,qBAAuBC,kBAAoBpyG,QAC1D+xG,UAAU/qH,OAAOorH,kBAAoBpyG,OAASmyG,qBACtDJ,UAAU/qH,OAAOorH,kBAAoBpyG,SAClCqyG,kBAAoBryG,OAASA,QACxB+xG,UAAU/qH,OAAgB,EAATgZ,QAAa+xG,UAAU/qH,OAAOmrH,oBAA+B,EAATnyG,UAErE+xG,UAAU/qH,OAAOqrH,mBAAoBN,UAAU/qH,OAAOqrH,kBAAoBF,sBAE7E,MAAbzzB,UAA8BlkH,SAASmH,UAChCnH,y5CC6CI8+E,4zBAlEuCP,mWAmBhB5M,aAAc7jE,SAC5C,IAAI8S,EACAv6B,EACAi4B,MACAC,OACE85D,SAAWx1F,KAAKw1F,SAChBl5D,QAAUk5D,SAASl5D,QACnBzvB,OAAS7M,KAAK6M,SACd+kD,KAAOt1B,QAAQs1B,OAAOntC,SACtBqc,UAAS,GAAAplB,OAAM7O,OAAOmvF,YAAb,KAAAtgF,OAA4B7O,OAAOi0B,WAE5ChqB,OAASmU,QAAQ9N,SAASq4E,SAASl5D,QAAQ9oB,aAC3CkhJ,UAAY9iG,KAAKjpB,QACjBpnC,MAAQuV,QAAU86C,KAAK8rC,cAAc5mF,OAAO,IAAK86C,KAAK8rC,cAAc5mF,OAAO,QAE3EuqH,STjBY,eSiBD/kG,QAAQzvB,SAASq8B,MAAuB,IAAM,IAEzD+rH,kBAAoBz/D,SAASl5D,QAAQgjE,cAAcm1D,mBAAgC,MAAbpzB,STxC9D,SAFD,SS6CPszB,aAAeD,UAAUnzJ,QAAqB,MAAb8/H,SAAmB,EAAI,GACxD6zB,oBAAsB54H,QAAQm9D,oBAAoBO,aAClDm7D,eAAiBntE,YAAYktE,oBAAqB,KAAM,GAA5B,GAAAx5I,OAAmC7O,OAAOmvF,YAA1C,yBTxBhB,eS0BdxG,SAASl5D,QAAQzvB,SAASq8B,OAC1BnL,EAAIx8B,MAAM,GAAKozJ,cAAgB,EAC/BnxJ,EAAI,EACJi4B,MAAQl6B,MAAM,GAAKA,MAAM,IAAM,EAC/Bm6B,OAASu5H,oBAETl3H,EAAI,EACJv6B,EAAIjC,MAAM,GAAKozJ,cAAgB,EAC/Bj5H,OAASn6B,MAAM,GAAKA,MAAM,IAAM,EAChCk6B,MAAQw5H,mBAKGjtE,YAAYmtE,eTjCf,SSiCwCr+I,cAAQinB,IAAGv6B,IAAGi4B,YAAOC,gBAAWoF,WAC9EgyB,MAJU,SAAVsiG,QAAoB9xD,KD9BF,SAAnBlF,iBAAmB5I,UAAQ,OAAI,SAAC6D,SAAUhI,YACnD,IACIpmE,QADAqtE,YAEEC,UACAiB,OAASjQ,2BACTjtD,QAAUk5D,SAASl5D,QACnBo4H,UAAYp4H,QAAQs1B,OAAOntC,SAASkkB,QACpC04F,SRdgB,eQcL/kG,QAAQzvB,SAASq8B,MAAuB,IAAM,IAIzDngB,UACFgsI,kBAJsBz4H,QAAQgjE,cAAcm1D,mBAAgC,MAAbpzB,SRtClD,QAEC,UQyCd1+E,OAHW+xG,UAAUnzJ,QAAqB,MAAb8/H,SAAmB,EAAI,IAKpDxgD,WAEJwY,SAAS1gG,KAAK6gG,SAASpsB,GAAG,QAAS,WAC/B,IAAMuM,MAAQ0P,0BACdiP,ShL6LY,SAAd+8D,YAAe99E,QAASoC,OAC1B,IAAM27E,mBAAqB/9E,QAAQgI,wBACnC,OACIxhD,EAAG47C,MAAM57C,EAAIu3H,mBAAmBv3H,EAChCv6B,EAAGm2E,MAAMn2E,EAAI8xJ,mBAAmB9xJ,GgLjMrB6xJ,CAAYr1J,KAAM25E,MAAMmB,aACnC+F,QAAUlH,MAAMkH,UACjBzT,GAAG,OAAQ,WACV,IAAMuM,MAAQ0P,0BACRyrE,oBAAsBj0E,QAAqB,MAAbwgD,SRrDvB,QAEC,UQqDdxgD,QAAQ9iD,GAAK47C,MAAMnkB,GACnBqrB,QAAQr9E,GAAKm2E,MAAMlkB,GAEnB1sC,SAAS+rI,oBAAsBA,oBAC/B/rI,SAASuvE,SAAWA,SACpBvvE,SAASwvE,OAASA,OAClB,IAAMp7E,SAAW03I,qBAAqBh0E,SAAW6zE,oBAAWrzB,mBAAYt4G,UAExEkC,SACI9N,SAAUo4I,qCACLj5H,QAAQ9oB,YAAc2J,UAE3Bq4I,SAAS,GAEbhgE,SAAS7B,kBAAkBtC,WAAW,GAAIpmE,WAC3CmiD,GAAG,MAAO,WACT,IAAMuM,MAAQ0P,0BACRyrE,oBAAsBj0E,QAAqB,MAAbwgD,SRxEvB,QAEC,UQuEdt4G,SAAS+rI,oBAAsBA,oBAC/B/rI,SAASuvE,SAAWA,SACpBvvE,SAASwvE,OAASA,OAClB,IAAMp7E,SAAW03I,qBAAqBl7E,OAAS+6E,oBAAWrzB,mBAAYt4G,UACtEkC,SACI9N,SAAUo4I,qCACLj5H,QAAQ9oB,YAAc2J,UAE3Bq4I,SAAS,EACT3oJ,QACIqmD,YACIqyB,SAAU,OAItBiQ,SAAS7B,kBAAkBtC,WAAW,GAAIpmE,aC3BtCmzE,CAAiB5I,SAAjB4I,CAA2BkF,IAAK,aAI7BvwC,KAAK,IAAKvvD,GACAuvD,KAAK,IAAKh1B,GACVg1B,KTnEJ,QSmEgBt3B,OACZs3B,KTlEH,SSkEgBr3B,0DA5D9B,MVdoB,qEUsBpB,OACIoF,UAAW,uBACXk7D,YTxBe,4BUEd6J,yCAAa,SAAbA,WAAcrQ,UACvB,IAAMl5D,QAAUk5D,SAASl5D,QACnBshD,QAAU,SAAVA,QAAWzrE,IAAK2uB,UAAWitD,QAC7B,IAAMiO,YAAc1/D,QAAQzvB,SAASmvF,YACrCjU,6BAAczrD,QAAQ5I,SACL++B,UADjB,IAAA/2C,OAC+BsgF,YAD/B,oBAEiBtoF,OAAO,SAAA5a,GAAC,OAAgC,IAA5BqZ,IAAIkV,KAAKphB,QAAQnN,EAAE4/B,MAC/B+5B,UAAU,OACVmrB,QAAQ98C,UAAWitD,SAGxC,OACI2b,KAAM,SAAAA,KAACv3F,KAAqB,IAAhBtF,OAAgBzH,UAAA1D,OAAA,QAAA6L,IAAAnI,UAAA,GAAAA,UAAA,MAClB42F,YAAc1/D,QAAQzvB,SAASmvF,YAChC7pF,IAAIq8E,YAAY9sF,QAAWyQ,IAAIw8E,WAAWjtF,QAG3Ck8E,QAAQzrE,IAAIw8E,WAAY9hF,OAAOi0B,WAAP,GAAAplB,OAAuBsgF,YAAvB,qBAAsD,GAC9Epe,QAAQzrE,IAAIw8E,WAAY9hF,OAAOi0B,WAAP,GAAAplB,OAAuBsgF,YAAvB,oBAAqD,GAC7Epe,QAAQzrE,IAAIq8E,YAAa3hF,OAAOi0B,WAAP,GAAAplB,OAAuBsgF,YAAvB,oBAAqD,IAJ9Epe,QAAQzrE,IAAI46E,YAAalgF,OAAOi0B,WAAP,GAAAplB,OAAuBsgF,YAAvB,oBAAqD,IAOtFy5D,SAAU,SAAAA,SAACtjJ,KAAqB,IAAhBtF,OAAgBzH,UAAA1D,OAAA,QAAA6L,IAAAnI,UAAA,GAAAA,UAAA,MACtB42F,YAAc1/D,QAAQzvB,SAASmvF,YAChC7pF,IAAIq8E,YAAY9sF,QAAWyQ,IAAIw8E,WAAWjtF,QAG3Ck8E,QAAQzrE,IAAIq8E,YAAa3hF,OAAOi0B,WAAP,GAAAplB,OAAuBsgF,YAAvB,qBAAsD,GAC/Epe,QAAQzrE,IAAIw8E,WAAY9hF,OAAOi0B,WAAP,GAAAplB,OAAuBsgF,YAAvB,qBAAsD,IAH9Epe,QAAQzrE,IAAI46E,YAAalgF,OAAOi0B,WAAP,GAAAplB,OAAuBsgF,YAAvB,qBAAsD,6yCCvB1E05D,kEACjB,SAAAA,oBAAwB,IAAAvvD,iBAAAjxF,uKAAAygJ,CAAA31J,KAAA01J,mBAAA,QAAAptF,KAAAljE,UAAA1D,OAARkgB,OAAQ,IAAA/Y,MAAAy/D,MAAAC,KAAA,EAAAA,KAAAD,KAAAC,OAAR3mD,OAAQ2mD,MAAAnjE,UAAAmjE,MAAA,OACpBrzD,MAAA0gJ,6CAAA51J,MAAAmmG,iBAAA0vD,kCAAAH,oBAAA/8J,KAAA4O,MAAA4+F,kBAAAnmG,MAAA0b,OAASkG,WACJs5E,YAAc2K,yCAAW3wF,MAAKsgF,UACnCtgF,MAAK+lF,UAAY,WAHG/lF,yZADmB6lF,0TAWpCjM,aAAc7jE,SAAuB,IAAdtkB,QAAcvB,UAAA1D,OAAA,QAAA6L,IAAAnI,UAAA,GAAAA,UAAA,OAGxCu9F,EAFiB3iG,KAAKk7F,YAAYv0F,QAAQg8F,UAAY3iG,KAAKi7F,YAElDnM,aAAc9uF,wDANvB,MZXmB,uCaCd66F,oBACThuF,QACIqhE,aAAc,SAAAA,aAAC5xC,QAAS7iC,OAAV,OAAoBw1E,eAAe3yC,QAAQ+zD,YAAe52F,SAE5EuR,QACAwI,aACAsiJ,mBACAx2D,aACIpxB,aAAc,SAAAA,aAAC5xC,QAAS7iC,OACpB,IAAM6lG,YAAcrwB,eAAe3yC,QAAQw2F,aAAcr5H,OAKzD,OAJC,UAAW,SAAU,UAAUqP,QAAQ,SAAC0tE,OACrC8oB,YAAY9oB,OAAS3yE,KAAKsQ,IAAImrF,YAAY9oB,OAAS,EAAI8oB,YAAY9oB,OAAS,EAChD,GAAvB8oB,YAAYziE,SAAwC,GAAxByiE,YAAYxiE,aAE1CwiE,cAGfgW,gBACA07C,YACAzvJ,OACI2sE,aAAc,SAAAA,aAAC5xC,QAAS7iC,OAIpB,OAHA6iC,QAAQqM,QAAQpnC,MAAM9H,OACtB6iC,QAAQy5H,oBACRz5H,QAAQ3zB,QAAQopH,OAAO,QAASt4H,OACzBA,QAGfkvC,SACA4nE,cACA5nG,SACAqtJ,OACI9nF,aAAc,SAAAA,aAAC5xC,QAAS7iC,OAAV,OAAoBw1E,eAAe3yC,QAAQ25H,WAAcx8J,SAE3EqhG,aACI7uB,aAAc,SAAAA,aAAA/qE,KAAG,OAAIA,OC7BhBg1J,iBACG,aADHA,eAEC,WAGDC,qBACTz6H,OAAQ,GACRD,MAAO,GACPoB,SAAU+jB,IACV9jB,UAAW8jB,IACXpe,QAAS,EACTi8D,OAAQ,EACRwyD,OAAQ,GAGCmF,cACT/1J,KAAM,GACN0kG,YAAa,SAAAA,YAAC5b,KACV,MbCY,SaDRA,KbES,UaFOA,IbCR,OAKE,WaATm8B,gCACTtpB,YAAa,OACbq6D,YAAa,QACbC,YAAa,gBACbl0J,WACIm0J,QACIn9E,MAAO,YACPo9E,MAAO,cAGfxsJ,MACI3J,MACI0kG,YAAa,QACbtpE,MAAO,GACPr5B,UAAW,SAAAA,UAAClB,IAAK1I,EAAGwS,KAAMsxB,SAAf,OAA2BA,QAAQw+D,aAARx+D,CAAsBp7B,OAEhE6gG,MACIjhE,UAAW,cACXpF,OAAQ,GACRD,MAAO,GACP2Y,MAAO,iBACP94C,KAAM,YAWLm7J,kBAAW,SAAXA,SAAY10D,MACrB,OAAIA,MAA0B,iBAAVA,KACT7wB,uBAAU6wB,MACZA,uLC/CN,IAAM20D,2BAAe,SAAfA,aAAgB/tH,OACzB,IAAMguH,UAAYhuH,MAAM/iB,YAAYtqB,OAKpC,OAASq7J,oBAAW7/I,OAJL6xB,MAAMs9E,eAIO2wC,MAHdjuH,MAAM97B,SAAS04G,OAAS,EAGHsxC,QAFnBvD,gBAAgBqD,aAYvBG,kCAAsB,SAAtBA,oBAAuBhgJ,OAAQ8/I,OAIxC,IAHA,IAAMG,mBACAC,eAAiBvnF,kCAAqB34D,OAAO,GAAIA,OAAO,IAErDte,EAAI,EAAGA,GAAKo+J,MAAOp+J,IACxBu+J,gBAAgBv+J,GAAKw+J,eAAex+J,EAAIo+J,OAE5C,OAAOG,iBAmMEE,gBAAkB,SAAlBA,gBAAmB37J,KAAMwtH,UAAWiB,YAAe,IAAAz1F,KAExDuiI,QAGA/tC,UAHA+tC,QACAF,UAEA7tC,UAFA6tC,UACAhuH,MACAmgF,UADAngF,MAGA7xB,OAIAizG,WAJAjzG,OACAogJ,aAGAntC,WAHAmtC,aACAC,UAEAptC,WAFAotC,UACAP,MACA7sC,WADA6sC,MAEEQ,IAAMtgJ,OAAgB,UAATxb,KAAmB,EAAIwb,OAAOpV,OAAS,GACpDwkC,KAAO0wH,MAAe,UAATt7J,KAAmB,EAAIs7J,MAAMl1J,OAAS,GAEzD,OAAA21J,6BAAA/iI,QACKqiI,UAA0B,SAAdA,UAAuBhuH,MAAMkuH,SAASO,KAAOzuH,MAAM2uH,iBAAmB3uH,MAAMkuH,SAASO,MADtGC,6BAAA/iI,KAAA,QAEW4iI,aAAa57J,OAFxB+7J,6BAAA/iI,KAAA,KAGiB,UAATh5B,KAAmB,EAAI67J,UAAUz1J,OAAS,GAHlD21J,6BAAA/iI,KAAA,SAIY8iI,IAAKlxH,OAJjB5R,uWCjOiBijI,sCAOjB,SAAAA,aAAa77J,0KAAc87J,CAAAx3J,KAAAu3J,cACvBv3J,KAAKynE,SACLznE,KAAKy3J,aACLz3J,KAAKkjG,OAAS,KACdljG,KAAK03J,WAAa,KAClB13J,KAAKi2J,OAAS/8J,OAAO4T,UAAWspJ,cAChCp2J,KAAKy3J,UAAY,KACjBz3J,KAAK23J,cAAgBj8J,aAAas1G,aAClChxG,KAAK43J,OAASl8J,aAAaylE,MAC3BnhE,KAAK2lF,IAAMp7E,cACXvK,KAAK8yH,aAAe55H,OAAO4T,UAAW9M,KAAK4lB,YAAYiyI,sBACvD73J,KAAKqwF,QAAUphB,kBAAmBjvE,KAAK4lB,YAAYu1E,iBAEnD5sB,sBAAsBvuE,KAAM66F,oBAC5B76F,KAAK83J,eAAiBruE,qCAAsB1B,6BAAc,QAAf,GAAArsE,OACpC1b,KAAK6M,SAASmvF,YADsB,sBAG3Ch8F,KAAK+/I,UAAY,IAAI8T,+BAAe7zJ,MAChC2vF,YAAaz2F,OAAO4T,UAAW+mF,4BAAoBkkE,sCACnDnoE,SAAUyE,kCACVvD,uBAAwBuC,kDACzBvF,sCAAauB,sVAIhB,OAAOrvF,KAAK2lF,gDA2CZ,OAAIvgF,UAAO1D,OACA1B,KAEJA,KAAK+/I,sDAUZ,MflFY,yDesFZ,OAAI36I,UAAM1D,QACN1B,KAAKg4J,aAAL5yJ,UAAA1D,QAAA,OAAA6L,EAAAnI,UAAA,GACOpF,MAEJA,KAAKg4J,mDAUZ,OAAI5yJ,UAAO1D,QACP1B,KAAKkjG,OAAL99F,UAAA1D,QAAA,OAAA6L,EAAAnI,UAAA,GACApF,KAAKukG,SACEvkG,MAEJA,KAAKkjG,+DAWE,IAAAyF,aAIV3oG,KAAK6M,SAFL7C,KAFU2+F,aAEV3+F,KACAgyF,YAHU2M,aAGV3M,YAIJ,OAFAh8F,KAAK23J,cAAc39H,SAASyvD,qCAAsB1B,6BAAc,QAAf,GAAArsE,OAC1CsgF,YAD0C,uBDnD1B,SAAlBi8D,gBAAmB37H,QAASpI,KAAM9xB,WAC3C,IAAMo0E,SACAxrE,KAAOsxB,QAAQtxB,OACfgmG,aAAe10E,QAAQq7H,cAO7B,OALA3sJ,KAAKlC,QAAQ,SAACkB,KAAM/H,OAChB,IAAMxI,MAAQy6B,KAAOlqB,KAAKkqB,MAAQlqB,KADRkuJ,sBAEAlnD,aAAahxE,WAAW59B,UAAU3I,MAAOwI,MAAO+I,KAAMsxB,UAAxEZ,OAFkBw8H,sBAElBx8H,OAAQD,MAFUy8H,sBAEVz8H,MAChB+6C,MAAMv0E,QAAWy5B,OAAQA,OAAS,EAAGD,MAAOA,MAAQ,KAEjD+6C,MC2CIyhF,CAAgBj4J,KAAMuzJ,MAAOvpJ,KAAK3J,KAAK+B,yEAU7B,IAAAw4H,kBASb56H,KAAKs/F,cAPL7jE,MAFam/F,kBAEbn/F,MACAC,OAHak/F,kBAGbl/F,OACAmB,SAJa+9F,kBAIb/9F,SACAC,UALa89F,kBAKb99F,UACA0F,QANao4F,kBAMbp4F,QACAi8D,OAPam8B,kBAObn8B,OACAwyD,OARar2B,kBAQbq2B,OAGA/nH,MACAlpC,KAAK6M,SADLq8B,MAIEivH,WAAuB,EAAV31H,QACb41H,UAAqB,EAATnH,OACZoH,UAAqB,EAAT55D,OAElBz+F,KAAKgL,KAAKhL,KAAKs4J,cAAct4J,KAAK2oC,UAElC,IAAM4vH,WAAav4J,KAAKw4J,gBAClBC,YAAcF,WAAW78H,OAAS,EAAI68H,WAAW78H,OAASy8H,WAAa,EACvEO,WAAaH,WAAW98H,MAAQ08H,WAGhCQ,YAAc34J,KAAK44J,eAAeT,WAAYjvH,OA1BnC2vH,mBDzCQ,SAApBC,kBAAqBjsJ,OAAQkc,SAAU/d,MAChD,IAAIw7F,YAAc,EACdC,WAAa,EACbsyD,eACAt9H,MAAO,EAAGC,OAAQ,GAGlBy8H,WAKApvI,SALAovI,WACAO,WAIA3vI,SAJA2vI,WACAC,YAGA5vI,SAHA4vI,YACAF,YAEA1vI,SAFA0vI,YACA57H,SACA9T,SADA8T,SAGA7yB,KAEA6C,OAFA7C,KACAk/B,MACAr8B,OADAq8B,MAGA64D,KAEA/3F,KAFA+3F,KAGEi3D,gBADFhvJ,KADA3J,KAEyB0kG,YACvBk0D,cACAC,cACFC,aAAe,EA6EnB,OA5EAR,YAAY7vJ,QAAQ,SAACswJ,WAAY5gK,GAC7B,IAAM6gK,WAAc59H,MAAO,EAAGC,OAAQ,GAChC49H,WAAc79H,MAAO,EAAGC,OAAQ,GAChC1pB,MAAQhH,KAAKxS,Od/HP,SciIRwgK,iBdhIS,UcgImBA,iBAE5BI,WAAW39H,OAAS08H,WACpBmB,UAAU79H,OAASzpB,MAAMsoB,KAAO,EAAIz2B,KAAK6Q,KAAK1C,MAAMsoB,KAAOz2B,KAAK4xC,IAAMssD,KAAKtmE,OAAS08H,WACpFgB,aAAet1J,KAAKwQ,IAAIilJ,UAAU79H,MAAO09H,cACzCE,UAAU59H,MAAQ29H,WAAW39H,MAAQ09H,aAGrCC,WAAW19H,OAAS73B,KAAKwQ,IAAI+kJ,WAAW19H,OAAQqmE,KAAKrmE,QAAUy8H,WAC/DmB,UAAU59H,OAAS09H,WAAW19H,OAC9B29H,UAAU39H,OAAS09H,WAAW19H,SAG9B09H,WAAW39H,MAAQ53B,KAAKwQ,IAAI+kJ,WAAW39H,MAAOzpB,MAAMsoB,KAAO,EAAIz2B,KAAK6Q,KAAK1C,MAAMsoB,KAAOz2B,KAAK4xC,IACzFssD,KAAKtmE,OAAS08H,WAChBmB,UAAU79H,MAAQ29H,WAAW39H,MAC7B49H,UAAU59H,MAAQ29H,WAAW39H,MAC7B09H,aAAet1J,KAAKwQ,IAAIilJ,UAAU79H,MAAO09H,cAGzCC,WAAW19H,QAAUy8H,WACrBmB,UAAU59H,OAASqmE,KAAKrmE,OAASy8H,WACjCkB,UAAU39H,OAAS09H,WAAW19H,OAAS49H,UAAU59H,QAGvC,eAAVwN,MACAs9D,YAAc3iG,KAAKwQ,IAAImyF,YAAa6yD,UAAU39H,SAE9C8qE,aAAe6yD,UAAU39H,OACzB+qE,WAAa5iG,KAAKwQ,IAAIoyF,WAAY4yD,UAAU59H,MAAOi9H,aAEvDK,eACIt9H,MAAO53B,KAAKwQ,IAAIglJ,UAAU59H,MAAOs9H,cAAct9H,OAC/CC,OAAQ73B,KAAKwQ,IAAIglJ,UAAU39H,OAAQq9H,cAAcr9H,SAErDu9H,WAAW/yJ,KAAKmzJ,WAChBH,WAAWhzJ,KAAKozJ,aAEpBL,WAAWnwJ,QAAQ,SAACuwJ,UAAW7gK,GAC3B,GAAc,eAAV0wC,MACAmwH,UAAU39H,OAAS8qE,YACnB0yD,WAAW1gK,GAAGijC,MAAQ09H,ad1Kd,Sc2KJH,iBd1KK,Uc0KuBA,iBAC5BL,YAAYngK,GAAGkjC,OAAS8qE,YACxB0yD,WAAW1gK,GAAGkjC,OAAS8qE,YACvByyD,WAAWzgK,GAAGijC,MAAQk9H,YAAYngK,GAAGijC,MAAQ09H,eAE7CR,YAAYngK,GAAGijC,MAAQ09H,aACvBF,WAAWzgK,GAAGijC,MAAQ09H,aACtBR,YAAYngK,GAAGijC,MAAQ09H,cAE3B1yD,WAAa5iG,KAAKwQ,IAAIoyF,WAAawyD,WAAWzgK,GAAGijC,YAGjD,GADA49H,UAAU59H,MAAQ53B,KAAKwQ,IAAIoyF,WAAY5pE,UdvLhC,QcwLHm8H,iBdrLM,WcqLqBA,gBAC3BL,YAAYngK,GAAGijC,MAAQgrE,WACvByyD,WAAW1gK,GAAGijC,MAAQgrE,WACtB0yD,aAAe1yD,eACZ,CACH,IAAM2S,WAAau/C,YAAYngK,GAAGijC,MAC5B89H,cAAiBR,cAAct9H,MAAQ09H,aAC7CD,WAAW1gK,GAAGijC,MAAQ09H,aACtBF,WAAWzgK,GAAGijC,MAAQk9H,YAAYngK,GAAGijC,MAAQ09H,aAC7CR,YAAYngK,GAAGijC,MAAQ53B,KAAKwQ,IAAI+kG,WAAYmgD,eAC5C9yD,WAAa5iG,KAAKwQ,IAAIoyF,WAAY4yD,UAAU59H,UAIxDgrE,WAAa5iG,KAAKmoB,KAAKnoB,KAAKwQ,IAAIoyF,WAAYiyD,aAAeP,WAC3D3xD,aAAeiyD,YAAcN,YAEpB3xD,YADTA,YAAc3iG,KAAKmoB,KAAKw6E,aACFC,sBAAYwyD,sBAAYC,sBAAYH,4BAAeI,2BC/BjEL,CAAkB94J,KAAK6M,UACzBsrJ,sBAAYO,sBAAYC,wBAAaF,wBAAa57H,kBAAUC,qBAAa98B,KAAKgL,QAF5Ew7F,YA5BaqyD,mBA4BbryD,YAAaC,WA5BAoyD,mBA4BApyD,WAAYwyD,WA5BZJ,mBA4BYI,WAAYC,WA5BxBL,mBA4BwBK,WAAYH,cA5BpCF,mBA4BoCE,cAAeI,aA5BnDN,mBA4BmDM,aAiBpE,OAbAn5J,KAAKs/F,aACD7jE,MAAO53B,KAAKwQ,IAAIoyF,WAAYhrE,OAAS48H,UAAYD,UACjD18H,OAAQ73B,KAAKwQ,IAAImyF,YAAa9qE,QAAU28H,UAAYD,UACpDO,wBACAO,sBACAD,sBACAF,4BACAI,0BACAK,aACI/9H,MAAO53B,KAAKsQ,IAAI0oB,SAAU78B,KAAKs/F,cAAc7jE,OAAS48H,UAAYD,UAClE18H,OAAQ+8H,eAGTz4J,2DAYP,OAFAA,KAAK23J,cAAc39H,SAASyvD,qCAAsB1B,6BAAc,QAAf,GAAArsE,OACN1b,KAAK6M,SAASmvF,YADR,mBAE1Ch8F,KAAK23J,cAAc33H,WAAWhgC,KAAKg2J,QAAQ31J,KAAOL,KAAKg2J,QAAQ31J,KAAO,oDAUpEs4B,WAAW,IAAA8gI,mBACsCz5J,KAAKs/F,cAAvDk6D,YADYC,mBACZD,YAAavI,OADDwI,mBACCxI,OAAQzuH,QADTi3H,mBACSj3H,QAAS/G,MADlBg+H,mBACkBh+H,MAAOoB,SADzB48H,mBACyB58H,SADzBq+E,cAEiBl7G,KAAK6M,SAAlCwpJ,YAFYn7C,cAEZm7C,YAAaC,YAFDp7C,cAECo7C,YACrB,ODvLoB,SAAfoD,aAAgB/gI,UAAWq9H,MAAO12D,YAAazyF,QACxD,IAAM6rJ,WAAa70J,KAAKsQ,IAAImrF,YAAYziE,SAAUyiE,YAAY7jE,OAExDk+H,eAAiB3xE,YAAYrvD,UAAW,SAAU,GAAtB,GAAAjd,OAA6B7O,OAAOmvF,YAApC,kBACzBriE,MdnDQ,QckDM,GAAAje,OACEg9I,WADF,OAEd/+H,MdlDS,ScgDK,GAAAje,OAEG4jF,YAAY5jE,OAFf,OAGd/B,MAAM,gBAHQ,GAAAje,OAGY4jF,YAAY2xD,OAHxB,OAAAv1I,OAGoC7O,OAAOwpJ,YAH3C,KAAA36I,OAG0D7O,OAAOypJ,cAC/E38H,MAAM,aAAcq8H,MAAMjxD,uBAAuBxvF,SAClDygJ,MAAMjxD,YAAYl4F,OAAOw1B,UAAY2zH,MAAMjxD,aACnD,OAAO/c,YAAY2xE,eAAgB,MAAO,GAAxB,GAAAj+I,OAA+B7O,OAAOmvF,YAAtC,uBACDriE,MdzDA,QcwDV,GAAAje,OAC0Bg9I,WAD1B,OAEU/+H,MdzDG,YcuDb,GAAAje,OAE6Bg9I,WAF7B,OAGU/+H,MdzDC,ScyDa,QACdA,MAAM,cAAe,GACrBA,MAAM,UALhB,GAAAje,OAK8B4jF,YAAY98D,QAL1C,OAMUniC,KAAK21J,MAAM31J,MACXs5B,MAAM,aAAc,UACpBlJ,OCsKNipI,CAAa/gI,UAAW34B,KAAKg2J,SAChCt6H,OAAQ89H,YAAY99H,OACpBD,YACAoB,kBACAo0H,cACAzuH,gBACA6zH,wBACAC,yBACDt2J,KAAK6M,kDAWR,IAgBI+sJ,eAhBEpkE,SAAWx1F,KAAKw1F,WADhBqkE,cAOF75J,KAAK6M,SAJLmvF,YAHE69D,cAGF79D,YACAq6D,YAJEwD,cAIFxD,YACAC,YALEuD,cAKFvD,YACAj0H,SANEw3H,cAMFx3H,SANEy3H,mBAeF95J,KAAKs/F,cANLziE,SATEi9H,mBASFj9H,SACAC,UAVEg9H,mBAUFh9H,UACArB,MAXEq+H,mBAWFr+H,MACAC,OAZEo+H,mBAYFp+H,OACA+iE,OAbEq7D,mBAaFr7D,OACAwyD,OAdE6I,mBAcF7I,OAEE6E,gBAAkB9tE,YAAYD,6BAAc/nF,KAAK0zB,SAAU,OAAQ,GAAtC,GAAAhY,OAA6CsgF,YAA7C,gBAEnC,OAAQ35D,UACR,IfxPW,MeyPPu3H,eAAc,UAAAl+I,OftPJ,UeuPV,MACJ,If1PY,Oe2PRk+I,eAAc,UAAAl+I,Of1PL,Se2PT,MACJ,If3Pc,Se4PVk+I,eAAc,UAAAl+I,Of/PP,OegQP,MACJ,QACIk+I,eAAc,UAAAl+I,OfjQN,Qe+QZ,OAZAo6I,gBAAgBl4E,QAAhB,GAAAliE,OAA2BsgF,YAA3B,gBAAAtgF,OAAqD1b,KAAK2lF,MAAO,GACjEmwE,gBAAgBn8H,MAAM,QAAS,QAE/Bm8H,gBAAgBn8H,MAAM,QAAtB,GAAAje,OAAkC7X,KAAKsQ,IAAI0oB,SAAUpB,OAAkB,EAATgjE,OAA9D,OACiB9kE,MAAM,SADvB,GAAAje,OACoC7X,KAAKsQ,IAAI2oB,UAAWpB,QAAmB,EAAT+iE,OADlE,OAEiB9kE,MAFjB,GAAAje,OAE0Bk+I,gBAF1B,GAAAl+I,OAE+C+iF,OAF/C,OAGiB9kE,MAAM,SAHvB,GAAAje,OAGoCu1I,OAHpC,OAAAv1I,OAGgD26I,YAHhD,KAAA36I,OAG+D46I,cAC/Dt2J,KAAK81J,gBAAgBA,gBAAgBrlI,QAGrCzwB,KAAK+5J,YAAYjE,iBACjBtgE,SAASkmD,mBAAmB17I,KAAKgL,OAAO/C,IAAI,SAAAnP,GAAC,OAAIA,EAAE4/B,MAC5Co9H,gFASU9qJ,MACjB,IAAMwI,UAAYxT,KAAKwT,YAEvB,MAAa,YADAxT,KAAKgxJ,WAAW1yI,UAAU3S,OAAO,GAAGrQ,sLAE7C0+J,IACKxmJ,UAAYxI,KAAKzJ,SAGjBiS,YAAaxI,KAAKyoJ,iDArPhB/3J,cACX,OAAO,IAAI67J,aAAa77J,oEAWxB,OAAO4pH,+FAWP,OAAO6wC,2NC9Ef,IAAM8D,mBAAiBC,+BAAAC,sBhBeG,cgBblBC,SAAU,SAAAA,SAAApvJ,MAAI,OACVoQ,KAAM,GACNK,OAAQzQ,OAEZqvJ,sBAAuB,SAAAA,sBAAC/6D,aAAgB,IAEhC25D,WAEA35D,YAFA25D,WACAx9H,MACA6jE,YADA7jE,MAEJ,OACIrgB,KACIqgB,MAAK,GAAA/f,OAAK+f,MAAL,MACL+G,QAAO,GAAA9mB,OAAK,EAAL,OAEXD,QACIggB,MAAO,SAAAA,MAAC3iC,EAAGN,GAAJ,SAAAkjB,OAAau9I,WAAWzgK,GAAGijC,MAA3B,OACP+G,QAAO,GAAA9mB,OAAK,EAAL,SAInB4+I,kBAAmB,SAAAA,kBAACh7D,aAAgB,IACxBy5D,cAA0Bz5D,YAA1By5D,cACR,OACIwB,WAF8Bj7D,YAAX5jE,OAGnB8+H,UAAWzB,cAAct9H,MACzBg/H,aACIC,YAAY,EACZC,UAAU,OA7BPT,+BAAAC,mBhBgBC,YgBmBhBC,SAAU,SAAAA,SAAApvJ,MAAI,OACVoQ,IAAKpQ,KACLyQ,OAAQ,SAAAA,OAAA3iB,GAAC,OAAKA,MAElBuhK,sBAAuB,SAAAA,sBAAC/6D,YAAazyF,QAAW,IAExC4uB,MACA6jE,YADA7jE,MAEI+G,QAAY31B,OAAZ21B,QAER,OACIpnB,KACIqgB,MAAK,GAAA/f,OAAK+f,MAAL,MACL+G,QAAO,GAAA9mB,OAAK8mB,QAAL,OAEX/mB,QACIggB,MAAK,GAAA/f,OAAK+f,MAAL,MACL+G,QAAO,GAAA9mB,OAAK,EAAL,SAInB4+I,kBAAmB,SAAAA,kBAACh7D,aAAgB,IACxBy5D,cAAyBz5D,YAAzBy5D,cAAet9H,MAAU6jE,YAAV7jE,MACvB,OACI8+H,WAAYxB,cAAcr9H,OAC1B8+H,UAAW/+H,MACXg/H,aACIC,YAAY,EACZC,UAAU,OA/DPR,oBAsEVS,gBAAcV,+BAAAW,mBhB1DP,OgB2DRZ,kBAAiB,UADFC,+BAAAW,gBhBzDN,QgB2DRZ,kBAAiB,UAFHC,+BAAAW,gBhB3DR,MgB8DRZ,kBAAiB,YAHDC,+BAAAW,gBhBxDL,SgB4DRZ,kBAAiB,YAJJY,iBAOdC,cAAYZ,+BAAAa,iBhBjEL,OAcD,OgBmDMb,+BAAAa,chBhEJ,QAUA,SgBsDIb,+BAAAa,chBlEN,MAMG,UgB4DGb,+BAAAa,chB/DH,SAGA,UgB4DGA,eAgBZC,WAASd,+BAAAe,chBjFF,QgBkFP1H,MhB1EQ,UgByEC2G,+BAAAe,WhBhFD,SAOA,QgB2EA1H,QAFC2G,+BAAAe,WhBlFH,OgBqFP1H,MhB5ES,UgByEC2G,+BAAAe,WhB/EA,UAMD,QgB6EC1H,QAJA0H,YClDTC,8BAAuB,SAAvBA,qBAAwB5+H,QAAS3D,UAAWqjE,YAAahxF,MAClE,IAAImwJ,UACAC,WACAC,cACAC,aACEh8D,YAAchjE,QAAQgjE,cAEpBb,OAOAa,YAPAb,OACAwyD,OAMA3xD,YANA2xD,OACAuI,YAKAl6D,YALAk6D,YACA/9H,MAIA6jE,YAJA7jE,MACAC,OAGA4jE,YAHA5jE,OACAmB,SAEAyiE,YAFAziE,SACAC,UACAwiE,YADAxiE,UAGRs+H,WAAa1/H,QAAU89H,YAAY99H,OAAS,EAAI+iE,OAAS,EAAIwyD,QAC7DkK,UAAY1/H,OAAkB,EAATgjE,OAAsB,EAATwyD,QAElCoK,cAAgBv+H,WAAa08H,YAAY99H,OAAkB,EAAT+iE,OAAsB,EAATwyD,QAC/DqK,aAAez+H,UAAqB,EAAT4hE,OAAsB,EAATwyD,QAExC,IAAIsK,WAAavzE,YAAYrvD,UAAW,OAAQ,GAApB,GAAAjd,OAA2BsgF,YAA3B,iBAiB5B,OAhBAu/D,WAAWt8I,OAAX,IAAAvD,OAAsBsgF,YAAtB,qBAAqD50D,SAEjDk0H,cAAgBA,aAAeH,YAC/BI,WAAaA,WAAW5hI,MjB7EX,QiB6EA,GAAAje,OAA2B4/I,aAA3B,OAA6C3hI,MAAM,aAAc,WAG9E0hI,eAAiBA,cAAgBD,YACjCG,WAAW5hI,MjB/EG,SiB+Ed,GAAAje,OAA4B2/I,cAA5B,OAA+C1hI,MAAM,aAAc,WAGvE4hI,WAAavzE,YAAYuzE,WAAY,OAAQ,GAArB,GAAA7/I,OAA4BsgF,YAA5B,sBAEbriE,MjBtFM,QiBsFjB,GAAAje,OAA2By/I,UAA3B,OACAI,WAAW5hI,MjBrFO,SiBqFlB,GAAAje,OAA4B0/I,WAA5B,QAGSI,WA1EoB,SAApBC,kBAAqB9iI,UAAW3tB,KAAM0wJ,gBAC/C,IAAMp8D,YAAco8D,eAAep8D,cAC7BzyF,OAAS6uJ,eAAe7uJ,SAE1BosJ,WACA35D,YADA25D,WAGAj9D,YAEAnvF,OAFAmvF,YACA35D,SACAx1B,OADAw1B,SAEEs5H,YAAcf,eAAev4H,UAC7B+3H,SAAWuB,YAAYvB,SAASpvJ,MAChC+d,SAAW4yI,YAAYtB,sBAAsB/6D,YAAazyF,QAE1DiO,KAAOktE,YAAYrvD,UAAW,MAAOyhI,SAASh/I,IAA5B,GAAAM,OAAoCsgF,YAApC,gBACxBlhF,KAAK6e,MjB7Ba,SiB6BC,SAAC7gC,EAAGN,GAAJ,SAAAkjB,OAAau9I,WAAWzgK,GAAGkjC,OAA3B,QACnB5gB,KAAK6e,MjBhCY,QiBgCC5Q,SAAS3N,IAAIqgB,OAC/B3gB,KAAK6e,MAAM,UAAW5Q,SAAS3N,IAAIonB,SAEnC,IAAM3oB,QAAUmuE,YAAYltE,KAAM,MAAOs/I,SAAS3+I,OAAvB,GAAAC,OAAkCsgF,YAAlC,oBAI3B,OAHAniF,QAAQ8f,MjBpCS,QiBoCI5Q,SAAStN,OAAOggB,OACrC5hB,QAAQ8f,MAAM,UAAW5Q,SAAStN,OAAO+mB,SAElC3oB,QAkDY4hJ,CAAkBF,WAAYvwJ,KAAMsxB,WAW9Cs/H,4BAAqB,SAArBA,mBAAsBt/H,QAAS3D,WAAc,IAAAi9E,gBAIlDt5E,QAAQzvB,SAFRmvF,YAFkD4Z,gBAElD5Z,YAGEg9D,gBALgDpjD,gBAGlD5rG,KAEyB3J,KAAK0kG,YAE5B9yB,MAAQ+oF,UAAUhC,iBAClB6C,aAAe7zE,YAAYrvD,UAAW,MAAO,SAAC7/B,EAAGN,GAAJ,OAAUy5E,MAAMhqE,IAAI,SAAAvN,GAAC,OAAKA,EAAG5B,EAAE4B,GAAI5B,EAAEs7C,MAAOt7C,EAAEwhC,KAC7FxhC,EAAEW,MAAO6iC,QAAQ9oB,YAAahb,MADF,GAAAkjB,OACUsgF,YADV,sBAG1B8/D,WAAahB,aAAa9B,iBAGhC,OADA6C,aAAaj+E,QAAQk+E,YAAY,IACxBD,4BASAE,wBAAiB,SAAjBA,eAAkB/xJ,KAAMgyJ,YAAaC,eAAgB3/H,SAAY,IAAA4/H,qBAMtE5/H,QAAQgjE,cAJR98D,QAFsE05H,qBAEtE15H,QACAm2H,YAHsEuD,qBAGtEvD,YACAO,WAJsEgD,qBAItEhD,WACAC,aALsE+C,qBAKtE/C,aAEEv0H,KAAOq3H,eAA4B,GAAVz5H,QAAc,EAE7C,OAAIx4B,KAAK,KAAOupJ,MACZ,GAAA73I,OAAUi9I,YAAY3uJ,KAAK,IAAIgyJ,aAA/B,MAEJ,GAAAtgJ,OAA0B,UAAhBsgJ,aAA4BC,eAAgC/C,WAAWlvJ,KAAK,IAAIgyJ,aAAep3H,KAAlDu0H,aAAvD,OA+ESgD,oBAAa,SAAbA,WAAcp6D,KAAMppE,UAAW3mB,MAAOsqB,SAAY,IAEvD0/D,YAMA1/D,QANA0/D,YACAu+D,WAKAj+H,QALAi+H,WACAC,UAIAl+H,QAJAk+H,UACArB,aAGA78H,QAHA68H,aACA32H,QAEAlG,QAFAkG,QACA4R,MACA9X,QADA8X,MAEE9P,IAAM0jD,YAAYrvD,UAAW,MAAO,SAAA9d,GAAC,OAAKA,IAAzB,GAAAa,OAAgCsgF,YAAhC,qBACtBjpC,KjBhOgB,QiBgOJomG,cACZpmG,KjB/NiB,SiB+NJwnG,YACb5gI,MjBlOgB,QiB+NL,GAAAje,OAGKy9I,aAHL,OAIXx/H,MjBjOiB,SiB6NN,GAAAje,OAIM6+I,WAJN,OjBjMI,SiBuMZx4D,KAxEY,SAAd67B,YAAwB9kI,EAAGqvB,KAAMi0I,YAAa3gI,MAAOC,QACvD,IAAMmiG,aAAe11G,KAEfmS,KAAOxhC,EAAE,IAAM+K,KAAKsQ,IAAIsnB,MAAOC,QAAU73B,KAAK4xC,GAC9CksD,MAAQ7oG,EAAE,IAAMsjK,YAEtB,GAAIz6D,iBAAiB1W,QACjB0W,MAAMtW,KAAK,SAACr7D,KAER,OADAl3B,EAAE6oG,MAAQ3xE,IACH4tG,YAAY9kI,EAAGqvB,YAEvB,IAAIw5E,iBAAiBm8B,QAAS,CACjC,IAAIC,SAAWp8B,MAAMnoB,WAAU,GAE/B,GAAwC,QAApCukD,SAASC,SAASv8H,cAAyB,CAC3C,IAAMw8H,IAAMF,SAASE,KAAOF,SAASG,MACrCH,SAAW7lG,SAASuM,gBAAgB,6BAA8B,UACzDd,aAAa,OAAQs6F,KAIlC,OAFqBl2C,6BAAcg2C,UACtBhrE,KAAK,YAAlB,SAAAr3C,OAAwC4e,KAAO,IAA/C,MACOytD,6BAAc81C,aAAaptG,OAAOiT,YAAYq6F,WAErD,IAAIK,QADD,GAAqB,iBAAVz8B,MAOd,OAFIy8B,QAxCM,SAAZC,UAAal0H,KACf,SAAI,0CAA0CrM,KAAKqM,MAAQ,UAAUrM,KAAKqM,MAAQA,IAAIzI,OAAS,GAoCvF28H,CAAU18B,OACAA,MAEA80D,kBAAS90D,OAAOrnE,KAAKA,KAArBm8H,GAEPzuE,YAAY61C,aAAc,OAAQ,SAAA7yH,MAAI,OAAKA,QAAO+nD,KAAK,IAAKqrE,SAGvE,OADAtlI,EAAE,GAAK,SACA8kI,YAAY9kI,EAAGqvB,KAAM,UA0CxBy1G,CAAY5rH,MADEg2E,YAAY1jD,IAAK,KAAMtyB,MAAM,IAAlB,GAAA0J,OAA0BsgF,YAA1B,iBACChqF,MAAM,GAAK,SAAW,SAAUwoJ,UAAWD,YACpDxnG,KAAK,YADtB,aAAAr3C,OACgDy9I,aAAe,EAAI32H,QADnE,KAAA9mB,OAC8E6+I,WAAa,EAD3F,MAEiBxnG,KAAK,OAAQ/gD,MAAM,IAAMoiC,OAE1C4zC,YAAY1jD,IjB7MA,QiB6MYtyB,MAAM,IAAnB,GAAA0J,OAA2BsgF,YAA3B,iBACMjpC,KAAK,IAAK,GACVA,KAAK,IAAK,GACVA,KjB9OJ,QiB8OgBomG,cACZpmG,KjB7OH,SiB6OgBwnG,YACbxnG,KAAK,OAAQ/gD,MAAM,IAAMoiC,i+ECrO7BioH,0wBAAuB9E,iVAgCzB5uH,OAAO,IAAA2zH,cACqB5F,2BAAa/tH,OAA5CguH,UADU2F,cACV3F,UAAW7/I,OADDwlJ,cACCxlJ,OAAQ+/I,QADTyF,cACSzF,QACvBE,gBAAkBwF,kCAAI,IAAI1lJ,IAAIC,SAC5BvL,MAAQvL,KAAKgxJ,WAAW3hJ,gBAAgBzG,OAAO,GAHnC4zJ,cAIQjxJ,MAAMI,SAAxBrQ,KAJUkhK,cAIVlhK,KAAM+a,QAJImmJ,cAIJnmJ,QA6Bd,OA3BA0gJ,gBAAkBA,gBAAgB9uJ,IAAI,SAACmvJ,IAAK5+J,GAAM,IAAA87B,KAC1C76B,MAAQ,EACR8H,MAAQ,EACNkyJ,OAASsD,gBAAgBv+J,GAC/B,GAAI8C,OAASy5F,yBAAU31F,QAAS,CAG5BmC,OAFA9H,QAAUs9J,gBAAgBv+J,IAAI4mD,QAAQ,IACtB23G,gBAAgBv+J,EAAI,IAAMu+J,gBAAgBv+J,EAAI,IAAMiB,OAC5C2lD,QAAQ,QAC7B,CACH,IAAI45D,UAAYy6C,OACZp9I,UAAYkzD,gCAAiBzqE,WAC7Bk6G,UAAY3jC,4BAAe0hF,gBAAgBv+J,GAAI+S,MAAMy8H,iCAEzDvuI,MAAQu/G,UACRz3G,OAASy3G,WAEb,OAAAyjD,+BAAAnoI,QACKqiI,UAAYhuH,MAAMkuH,SAASO,MADhCqF,+BAAAnoI,KAAA,QAEI76B,OAFJgjK,+BAAAnoI,KAAA,KAGQ97B,GAHRikK,+BAAAnoI,KAAA,QAII/yB,OAJJk7J,+BAAAnoI,KAAA,SAKIm/H,QALJn/H,OAOD5gB,OAAO,SAAA5a,GAAC,OAAgB,OAAZA,EAAEW,QAEjBs9J,gBlBvCY,SkBuCMJ,UAAqBI,gBAAgB7jJ,KAAK,SAACtY,EAAGwI,GAAJ,OAAUxI,EAAE+7J,WAAavzJ,EAAEuzJ,aACjFI,wDAYN,IAAMvhE,SAAWx1F,KAAKw1F,WAChBxqF,KAAOhL,KAAKgL,OACVgxF,YAAgBh8F,KAAK6M,SAArBmvF,YACF85D,gBAAkB4G,oBAAAC,+BAAAN,eAAA/hK,WAAA,SAAA0F,MAAArH,KAAAqH,KAAaA,KAAK0zB,SAElC8nI,WAAeN,8BAAqBl7J,KAAM81J,gBAAiB95D,YAAahxF,MAAxEwwJ,WAMR,ODwJ0B,SAArBoB,mBAAsBtgI,QAAS3D,WACxC,IAAMq4E,aAAe10E,QAAQq7H,cADyBvhD,iBAKlD95E,QAAQzvB,SAFL7C,KAH+CosG,iBAG/CpsG,KACAgyF,YAJ+Coa,iBAI/Cpa,YAJ+C6gE,sBASlDvgI,QAAQgjE,cAFR65D,aAPkD0D,sBAOlD1D,aACA32H,QARkDq6H,sBAQlDr6H,QARkDs6H,WAe9C9yJ,KAAK+3F,KAJEy4D,UAXuCsC,WAW9CrhI,MACQ8+H,WAZsCuC,WAY9CphI,OACA0Y,MAb8C0oH,WAa9C1oH,MACAtT,UAd8Cg8H,WAc9Ch8H,UAGFk4H,gBAAkBhvJ,KAAK3J,KAAK0kG,YAC5B3iG,UAAY4H,KAAK3J,KAAK+B,UAE5B4uG,aAAar0E,uBAAsB,GACnCgsD,WAAWhwD,WACP8C,MAAO,SAAAA,MAAA3iC,GAAC,OAAIijK,wBAAejjK,EjBhRd,SiBgRwB,EAAOwjC,UAC5CZ,OAAQ,SAAAA,OAAA5iC,GAAC,OAAIijK,wBAAejjK,EjB/Qd,UiB+QyB,EAAOwjC,UAC9CygI,ajBzPc,SiB0Pdv6H,QAAO,GAAA9mB,OAAK8mB,QAAL,QAGXwuE,aAAah3E,SAASsC,QAAQw7H,gBAC9B,IAAM1nF,QAAUz3C,UAAU3tB,OAC1B2tB,UAAUwO,KAAK,SAAUruC,EAAGN,GACpBM,EAAE,KAAOy6J,MACTxrE,6BAAc/nF,MAAMK,KAAK+B,UAAUtJ,EAAE,GAAIN,EAAG43E,QAAS9zC,UACpC3C,MADjB,WAAAje,OjBrQS,UiBsQyBs9I,gBjBvQ1B,OACC,SiBsQqE,QAG9EjxE,6BAAc/nF,MAAM49E,QAApB,GAAAliE,OAA+BsgF,YAA/B,KAAAtgF,OAA8ColB,YAAa,GAC3DinD,6BAAc/nF,MAAM49E,QAApB,GAAAliE,OAA+BsgF,YAA/B,KAAAtgF,OAA8ColB,UAA9C,KAAAplB,OAA2DljB,IAAK,GAChE2jK,oBAAW,SAAUp0E,6BAAc/nF,MAAOlH,GACtCkjG,wBACAw+D,oBAEAD,sBACApB,0BACA32H,gBACA4R,iBCzMRwoH,CAAmB58J,KADM47J,4BAAmB57J,KAAMw7J,YAA1CK,cAER/F,gBAAgBrjG,UAAU,OAAO94B,MAAM,QlB3E3B,QkB4EZ67D,SAASjC,yBACTiC,SAASkmD,mBAAmB17I,KAAKgL,OAAO/C,IAAI,SAAAnP,GAAC,OAAIA,EAAE4/B,MAC5Co9H,wDA7EIp6J,cACX,OAAO,IAAI2gK,eAAe3gK,kDAW1B,MlBGgB,iCmB9BXshK,kBAAoB,SAApBA,kBAAqBhyJ,MAC9B,MAA6B,iBAAlBA,KAAK,GAAGvR,MACRuR,KAAKyH,OAAO,SAACwqJ,YAAaC,cAAd,OACdr5J,KAAKsQ,IAAI+oJ,aAAazjK,MAAOwjK,YAAY,IAAKp5J,KAAKwQ,IAAI6oJ,aAAazjK,MAAOwjK,YAAY,OACnFz0J,OAAO20J,UAAW30J,OAAO40J,YAE/BpyJ,KAAK/C,IAAI,SAAAvN,GAAC,OAAIA,EAAEjB,SA+DrByhK,qCAAuB,SAAvBA,qBAAwBviI,UAAWqjE,YAAahxF,MAClD,IAAM8L,OAASkmJ,kBAAkBhyJ,MAC3B8qJ,gBAAkB9tE,YAAYrvD,UAAW,OAAQ,GAApB,GAAAjd,OAA2BsgF,YAA3B,iBAC7BqhE,cAAgBr1E,YAAY8tE,gBAAiB,OAAQ,GAA1B,GAAAp6I,OAAiCsgF,YAAjC,cAC3BshE,eAAiBt1E,YAAYq1E,cAAe,KAAM,GAAtB,GAAA3hJ,OAA6BsgF,YAA7B,oBAIlC,OACI85D,gCACAwH,8BACAD,4BACAE,eAhE0B,SAArBC,mBAAsB7kI,UAAW3tB,KAAM8L,QAChD,IAAMkuH,KAAOh9C,YAAYrvD,UAAW,QAAS,IACvC4kI,eAAiBv1E,YAAYg9C,KAAM,kBAAmB,IAC/CjyE,KAAK,KAAM,mBACXA,KAAK,KAAM,MACXA,KAAK,KAAM,MAIxB,OAHAi1B,YAAYu1E,eAAgB,OAAQvyJ,KAAM,iBACzB+nD,KAAK,SAAU,SAAAj6D,GAAC,SAAA4iB,OAA+B,KAAvB5iB,EAAEW,MAAQqd,OAAO,KAAaA,OAAO,GAAKA,OAAO,IAAzD,OAChBi8C,KAAK,aAAc,SAAAj6D,GAAC,OAAIA,EAAEs7C,QACpCmpH,eAgDgBC,CAAmBH,cAAeryJ,KAAM8L,QAQ3D2mJ,WAPez1E,YAAYs1E,eAAgB,QAAS,GAA1B,GAAA5hJ,OAAiCsgF,YAAjC,qBAmBrB0d,2BAAa,SAAbA,WAAcp9E,QAAS3D,UAAW+C,OAAQD,OACnD,IAAMm2B,KAAOt1B,QAAQs1B,OAErBA,KAAKi6F,kBAAkBpwH,MAAOC,QAC9Bk2B,KAAK2yC,OAAO5rE,UAAUlI,QACtBmhC,KAAKntC,SAAS8/E,m+ECnGGm5D,0wBAAuBnG,iUAiCpC,OAAInyJ,UAAK1D,QACL1B,KAAK43G,MAALxyG,UAAA1D,QAAA,OAAA6L,EAAAnI,UAAA,GACOpF,MAEJA,KAAK43G,0DAUDjvE,OACX,IAAIouH,mBADcuF,cAE4B5F,2BAAa/tH,OAAnDguH,UAFU2F,cAEV3F,UAAW7/I,OAFDwlJ,cAECxlJ,OAAQ8/I,MAFT0F,cAES1F,MAAOC,QAFhByF,cAEgBzF,QAelC,OAbID,iBAAiB/tJ,OACbiO,OAAO,GAAK8/I,MAAM,KAClBG,gBAAgB,GAAKjgJ,OAAO,IAEhCigJ,mBAAer7I,OAAAiiJ,kCAAO5G,iBAAP4G,kCAA2B/G,QACtC9/I,OAAOA,OAAOpV,OAAS,GAAKk1J,MAAMA,MAAMl1J,OAAS,IACjDq1J,gBAAgB7wJ,KAAK4Q,OAAO,KAGhCigJ,gBAAkBD,kCAAoBhgJ,OAAQ8/I,MAAQ,IAE1DG,gBAAkB4G,kCAAI,IAAI9mJ,IAAIkgJ,kBAAkB7jJ,KAAK,SAACtY,EAAGwI,GAAJ,OAAUxI,EAAIwI,KAE5C6E,IAAI,SAACmvJ,IAAK5+J,GAAM,IAAA87B,KAC7B76B,MAAQs9J,gBAAgBv+J,GAC9B,OAAAolK,+BAAAtpI,QACKqiI,UpBtCG,SoBsCSA,UAAqBhuH,MAAMkuH,SAASO,KAAOzuH,MAAM2uH,iBACxD3uH,MAAMkuH,SAAShzJ,KAAKwN,MAAM+lJ,OAFpCwG,+BAAAtpI,KAAA,SAGY76B,MAAM2lD,QAAQ,IAH1Bw+G,+BAAAtpI,KAAA,KAIQ97B,GAJR87B,OAMD5gB,OAAO,SAAA5a,GAAC,OAAgB,OAAZA,EAAEW,8DAWL0+J,YACZn4J,KAAK6M,QACD7C,MACI3J,MACI0kG,YAAa/kG,KAAK6M,SAASw1B,aAIvC,IAAMuvB,KDvDY,SAAbimD,WAAcv7E,SACvB,IAAMtxB,KAAOsxB,QAAQtxB,OACbk+B,MAAU5M,QAAQzvB,SAAlBq8B,MACF48G,SAAWxpH,QAAQs7H,OAAO9R,SAC1B+X,QAAU,IAAItjD,8BAChB7hF,GAAE,UAAAhd,OAAY4gB,QAAQqpD,KACtBof,YAAa77D,QAAUgtH,enB3BV,QACC,SmB2Bdv8H,MAAO2C,QAAQw7H,eACfz2G,MAAM,EACNovD,cAAc,EACd1+C,WAAY/mD,KAAK/C,IAAI,SAAAnP,GAAC,OAAIA,EAAEW,QAC5B22G,eAAe,EACfC,QACIC,SAAU,KAEbU,aAAc10E,QAAQq7H,gBAI3B,OAFAkG,QAAQ/mJ,OAAOkmJ,kBAAkBhyJ,OACjC6yJ,QAAQt8J,OAAO,EAAG,KACX,IAAIukJ,UAAWrhI,OAAOo5I,SAAShxJ,QAClC4xF,QAAU/4D,KAAM,EAAG8rB,OAAQ,EAAGlvB,IAAK,EAAGqD,MAAO,KCmChCkyE,CAAW73G,MAClB89J,UAAYlsG,KAAK69F,kBACjBj5E,OAAU/6C,MAAOqiI,UAAUriI,MAAQ08H,WAAYz8H,OAAQoiI,UAAUpiI,OAASy8H,YAC1E4F,iBAAmBnsG,KAAKntC,SAAS3N,SAASpV,OAC1Ci3J,YAAc,IAAI9vJ,MAAMk1J,kBAAkB1/G,KAAKm4B,OAGrD,OADAx2E,KAAK4xD,KAAKA,MACH+mG,0EAUP,OACI3+D,aAAch6F,KAAKg+J,4DAYvB,IAAMxoE,SAAWx1F,KAAKw1F,WAChBsgE,gBAAkBmI,oBAAAC,+BAAAR,eAAApjK,WAAA,SAAA0F,MAAArH,KAAAqH,KAAaA,KAAK0zB,SAM1C,ODpBsB,SAAjByqI,eAAkB7hI,QAAS3D,WACpC,IAAIyiI,WACAD,UAF8C/kD,iBAO9C95E,QAAQzvB,SAHRq8B,MAJ8CktE,iBAI9CltE,MACA8yD,YAL8Coa,iBAK9Cpa,YACAhyF,KAN8CosG,iBAM9CpsG,KAEEgB,KAAOsxB,QAAQtxB,OAR6BozJ,sBAgB9ClD,qCAAqBviI,UAAWqjE,YAAahxF,MAL7C8qJ,gBAX8CsI,sBAW9CtI,gBACAuH,cAZ8Ce,sBAY9Cf,cACAC,eAb8Cc,sBAa9Cd,eACAC,eAd8Ca,sBAc9Cb,eACAE,WAf8CW,sBAe9CX,WAEEriD,SAAW9+E,QAAQs1B,OAAOntC,SAASkvF,oBAAoBC,eAjBXsoD,qBA4B9C5/H,QAAQgjE,cATR98D,QAnB8C05H,qBAmB9C15H,QACAi8D,OApB8Cy9D,qBAoB9Cz9D,OACAwyD,OArB8CiL,qBAqB9CjL,OACAuI,YAtB8C0C,qBAsB9C1C,YACAT,cAvB8CmD,qBAuB9CnD,cACAj8H,UAxB8Co/H,qBAwB9Cp/H,UACAD,SAzB8Cq/H,qBAyB9Cr/H,SACAnB,OA1B8CwgI,qBA0B9CxgI,OACAD,MA3B8CygI,qBA2B9CzgI,MAEEg5H,sBAEN2G,WAAav3J,KAAKwN,MAAMqqB,QAAU89H,YAAY99H,OAAS,EAAI+iE,OAAS,EAAIwyD,SACxEkK,UAAYt3J,KAAKwN,MAAMoqB,OAAkB,EAATgjE,OAAsB,EAATwyD,SAEzC/nH,QAAUgtH,kBACVzB,mBAAmB/4H,OAAS1xB,KAAK+3F,KAAKrmE,OACtC+4H,mBAAmBh5H,MAAQ0/H,UAAY,EAAI34H,QAAU44E,SAAS3/E,MAAQ,EACtE8hI,eAAexqG,KAAK,KAAM,QAAQA,KAAK,KAAM,MAC7CuqG,eAAevqG,KAAK,YAApB,cAAAr3C,OAA+C0/F,SAAS3/E,MAAQ,EAAhE,QACAi+E,2BAAWp9E,QAASw5H,gBAAiBsF,WAAapxJ,KAAK+3F,KAAKrmE,OAAS8G,QAAS24H,UAAY,EAAI34H,QAAU,GACxGszH,gBAAgBl4E,QAAhB,GAAAliE,OAA2BsgF,YAA3B,eAAqDvgE,MAAQoB,UAE7D8rD,WAAWmtE,iBACPp6H,OAAM,GAAAhgB,OAAKq9I,cAAcr9H,OAASu1H,OAASzuH,QAArC,MACN/G,MAAK,GAAA/f,OAAK7X,KAAKsQ,IAAIsnB,MAAOoB,UAArB,MACL2F,QAAO,GAAA9mB,OAAK8mB,QAAL,QAGXi7H,WAAW1qG,KAAK,SAAU0hG,mBAAmB/4H,QAC7C+hI,WAAW1qG,KAAK,QAAS0hG,mBAAmBh5H,MAAQ2/E,SAAS3/E,MAAQ,KAErEg5H,mBAAmB/4H,OAAS0/H,WAAa,EAAI54H,QAAU44E,SAAS1/E,OAAS,EACzE+4H,mBAAmBh5H,MAAQzxB,KAAK+3F,KAAKtmE,MACrC8hI,eAAexqG,KAAK,KAAM,MAAMA,KAAK,KAAM,QAC3CuqG,eAAevqG,KAAK,YAApB,eAAAr3C,OAAgD0/F,SAAS1/E,OAAS,EAAlE,MACAg+E,2BAAWp9E,QAASw5H,gBAAiBsF,WAAa,EAAI54H,QAAU,EAAG24H,UAAYnxJ,KAAK+3F,KAAKtmE,MAAkB,EAAV+G,SACjGszH,gBAAgBl4E,QAAhB,GAAAliE,OAA2BsgF,YAA3B,eAAqDtgE,OAASoB,WAC9D6rD,WAAWmtE,iBACPp6H,OAAM,GAAAhgB,OAAK7X,KAAKsQ,IAAIunB,OAAQoB,WAAtB,MACNrB,MAAK,GAAA/f,OAAK+f,MAAL,MACL+G,QAAO,GAAA9mB,OAAK8mB,QAAL,QAEXi7H,WAAW1qG,KAAK,SAAU0hG,mBAAmB/4H,OAAS0/E,SAAS1/E,OAAS,GACxE+hI,WAAW1qG,KAAK,QAAS0hG,mBAAmBh5H,QAIhDktD,WAAW00E,eACP3hI,OAAM,GAAAhgB,OAAK+4I,mBAAmB/4H,OAAxB,MACND,MAAK,GAAA/f,OAAK+4I,mBAAmBh5H,MAAxB,QAITktD,WAAW80E,YACPp/G,KAAM,0BAEVg/G,cAActqG,KAAK,SAAU0hG,mBAAmB/4H,QAChD2hI,cAActqG,KAAK,QAAS0hG,mBAAmBh5H,OAE/Ca,QAAQgjE,aACJm1D,wCAEJn4H,QAAQ0hI,mBAAqBX,cClEzBc,CAAen+J,KAAM81J,iBACrBA,gBAAgBrjG,UAAU,OAAO94B,MAAM,QpB/G3B,QoBgHZ67D,SAASjC,yBACTiC,SAASkmD,mBAAmB17I,KAAKgL,OAAO/C,IAAI,SAAAnP,GAAC,OAAIA,EAAE4/B,MAC5Co9H,gFASU9qJ,MACjB,QAAShL,KAAKwT,cAAexI,KAAKvR,gDAhIvBiC,cACX,OAAO,IAAIgiK,eAAehiK,kDAW1B,MpBhBgB,+7EqBGH2iK,8tBAAmB9G,iUAgCrB5uH,OACX,IAAIwuH,aADcmF,cAE4B5F,2BAAa/tH,OAAnDguH,UAFU2F,cAEV3F,UAAW7/I,OAFDwlJ,cAECxlJ,OAAQ8/I,MAFT0F,cAES1F,MAAOC,QAFhByF,cAEgBzF,QAE1Bz0J,UAAcpC,KAAK6M,SAAnBzK,UACF80J,cACF99E,MAAO,KAAMo9E,MAAO,MA6BxB,GA1BII,iBAAiB/tJ,OACbiO,OAAO,GAAK8/I,MAAM,KAClBM,aAAa99E,OAAQ,GAAA19D,OAAItZ,UAAUm0J,OAAOn9E,MAArB,KAAA19D,OAA8Bk7I,MAAM,MAE7DO,aAASz7I,OAAA4iJ,8BAAOnH,WAAPmH,8BAAqB1H,QAC1B9/I,OAAOA,OAAOpV,OAAS,GAAKk1J,MAAMA,MAAMl1J,OAAS,KACjDw1J,aAAaV,OAAQ,GAAA96I,OAAItZ,UAAUm0J,OAAOC,MAArB,KAAA96I,OAA8Bk7I,MAAMA,MAAMl1J,OAAS,OAG5Ey1J,UAAYL,kCAAoBhgJ,OAAQ8/I,OAI5CO,WADAA,UAAYmH,8BAAI,IAAIznJ,IAAIsgJ,YAAYjkJ,KAAK,SAACtY,EAAGwI,GAAJ,OAAUxI,EAAIwI,KACjC6E,IAAI,SAACmvJ,IAAK5+J,GAAM,IAAA87B,KAC9B76B,MAAQ,KAIZ,OAHIjB,EAAI2+J,UAAUz1J,OAAS,IACvBjI,MAAK,GAAAiiB,OAAO07I,IAAIh4G,QAAQ,GAAnB,OAAA1jC,QAA8By7I,UAAU3+J,EAAI,GAAG4mD,QAAQ,KAEhEm/G,2BAAAjqI,QACKqiI,UrBxCG,SqBwCSA,UAAqBhuH,MAAMkuH,SAASO,KAAOzuH,MAAM2uH,iBAAmB3uH,MAAMkuH,SAASO,MADpGmH,2BAAAjqI,KAAA,QAEI76B,OAFJ8kK,2BAAAjqI,KAAA,KAGQ97B,EAAI,GAHZ+lK,2BAAAjqI,KAAA,SAIY8iI,IAAKD,UAAU3+J,EAAI,KAJ/B87B,OAMD5gB,OAAO,SAAA5a,GAAC,OAAgB,OAAZA,EAAEW,QAEby9J,aAAa99E,MAAO,CACpB,IAAMolF,YAAcvH,gBrBlDX,SqBkDoCtuH,YAAOkuH,gBAASF,sBACvD7/I,cAAQ8/I,YAAOM,4BACrBC,WAAaqH,aAAJ9iJ,OAAA4iJ,8BAAoBnH,YAEjC,GAAID,aAAaV,MAAO,CACpB,IAAMiI,YAAcxH,gBrBxDX,SqBwDoCtuH,YAAOkuH,gBAASF,sBAC3D7/I,cAAQ8/I,YAAOM,0BAAcC,sBAC/BA,aAASz7I,OAAA4iJ,8BAAOnH,YAAWsH,cAE/B,OAAOtH,gEAWKgB,WAAYjvH,OAQxB,OAPAlpC,KAAK6M,QACD7C,MACI3J,MACI0kG,YAAa/kG,KAAK6M,SAASw1B,aAIvCq8H,gBAAAC,2BAAAN,WAAA/jK,WAAA,iBAAA0F,MAAArH,KAAAqH,KAA4Bm4J,WAAYjvH,mDAUxC,MrB3FY,+CqBsGZ,IAAMssD,SAAWx1F,KAAKw1F,WADhBulB,cAE4B/6G,KAAK6M,SAA/BmvF,YAFF+e,cAEE/e,YAAa35D,SAFf04E,cAEe14E,SACfr3B,KLzCU,SAAX4zJ,SAAW5zJ,MAAI,IAAAspB,KAAA,OAAA4lI,+BAAA5lI,QhBzER,OgB0ERtpB,KAAKsZ,WADW41I,+BAAA5lI,KhBxEP,QgB0ERtpB,KAAKsZ,WAFU41I,+BAAA5lI,KhB1ET,MgB6ERtpB,MAHiBkvJ,+BAAA5lI,KhBvEN,SgB2ERtpB,MAJcspB,KKyCPsqI,CAAS5+J,KAAKgL,QAAQq3B,UAE7ByzH,gBAAkB4I,gBAAAC,2BAAAN,WAAA/jK,WAAA,SAAA0F,MAAArH,KAAAqH,KAAaA,KAAK0zB,SAGlC8nI,WAAeN,8BAAqBl7J,KAAM81J,gBAAiB95D,YAAahxF,MAAxEwwJ,WAOR,OJiKsB,SAAjBqD,eAAkBviI,QAAS3D,WACpC,IAAMq4E,aAAe10E,QAAQq7H,cADqBjhD,iBAM/Cp6E,QAAQzvB,SAHT7C,KAHgD0sG,iBAGhD1sG,KACAq4B,SAJgDq0E,iBAIhDr0E,SACA25D,YALgD0a,iBAKhD1a,YALgD8iE,sBAW/CxiI,QAAQgjE,cAHTy5D,cARgD+F,sBAQhD/F,cACAI,aATgD2F,sBAShD3F,aACA32H,QAVgDs8H,sBAUhDt8H,QAVgDu8H,YAgB/C/0J,KAAK+3F,KAHLtmE,MAb+CsjI,YAa/CtjI,MACAC,OAd+CqjI,YAc/CrjI,OACA0Y,MAf+C2qH,YAe/C3qH,MAGChyC,UACD4H,KAAK3J,KADJ+B,UAGJ4uG,aAAar0E,uBAAsB,GArBe,IAAAqiI,sBAsBHpE,eAAev4H,UAAUi4H,mBACpEvB,4BAAer9H,cAAQD,cADnB8+H,WAtB0CyE,sBAsB1CzE,WAAYC,UAtB8BwE,sBAsB9BxE,UAAWC,YAtBmBuE,sBAsBnBvE,YAI/B9xE,WAAWhwD,WACP8C,MAAO,SAAAA,MAAA3iC,GAAC,OAAIijK,wBAAejjK,EjB9Ud,QiB8UwB2hK,YAAYC,WAAYp+H,UAC7DZ,OAAQ,SAAAA,OAAA5iC,GAAC,OAAIijK,wBAAejjK,EjB7Ud,SiB6UyB2hK,YAAYE,SAAUr+H,UAC7DygI,aAAc,SACdv6H,QAAO,GAAA9mB,OAAK8mB,QAAL,QAGXwuE,aAAah3E,SAASsC,QAAQw7H,gBAC9B,IAAM1nF,QAAUz3C,UAAU3tB,OAC1B2tB,UAAUwO,KAAK,SAAUruC,EAAGN,GACpBM,EAAE,KAAOy6J,MACTxrE,6BAAc/nF,MAAMK,KAAK+B,UAAUtJ,EAAE,GAAIN,EAAG43E,QAAS9zC,UAErD6/H,oBjB5TQ,OiB4TSp0E,6BAAc/nF,MAAOlH,GAClCkjG,wBACAw+D,oBACAD,sBACApB,0BACA/kH,gBIjNRyqH,CAAe7+J,KAFU47J,4BAAmB57J,KAAMw7J,YAA1CK,cAGR/F,gBAAgBrjG,UAAU,OAAO94B,MAAM,QrB3H3B,QqB4HZ67D,SAASjC,yBACTiC,SAASkmD,mBAAmB17I,KAAKgL,OAAO/C,IAAI,SAAAnP,GAAC,OAAIA,EAAE4/B,MAC5Co9H,gFAUU9qJ,MAEjB,OAAAuzJ,8BADkBv+J,KAAKwT,YAENxI,KAAKzJ,+CAtIX7F,cACX,OAAO,IAAI2iK,WAAW3iK,kDAWtB,MrB1BY,sMsBZb,IAaMujK,QAAU,UACVC,OAAS,SACTC,OAAS,SAiBTC,iCACT,SACA,SAGSC,iBAAeC,yBAAAC,oBAAA,GAAA7jJ,OARL,UAQK,KACT,EADS,KAAAA,OAlCP,SAmCgB2gJ,gCADTiD,yBAAAC,iBAAA,GAAA7jJ,OARL,UAQK,KAET,EAFS,KAAAA,OAhCR,QAkCgB2gJ,gCAFRiD,yBAAAC,iBAAA,GAAA7jJ,OARL,UAQK,KAGT,EAHS,KAAAA,OAjCP,SAoCgB2gJ,gCAHTiD,yBAAAC,iBAAA,GAAA7jJ,OARL,UAQK,KAIT,EAJS,KAAAA,OAlCP,SAsCiB2gJ,gCAJViD,yBAAAC,iBAAA,GAAA7jJ,OARL,UAQK,KAKT,EALS,KAAAA,OAjCP,SAsCiB2gJ,gCALViD,yBAAAC,iBAAA,GAAA7jJ,OARL,UAQK,KAMT,EANS,KAAAA,OAhCR,QAsCiB2gJ,gCANTiD,yBAAAC,iBAAA,GAAA7jJ,OATN,SASM,KAOV,EAPU,KAAAA,OAhCR,QAuCgB2gJ,gCAPRiD,yBAAAC,iBAAA,GAAA7jJ,OATN,SASM,KAQV,EARU,KAAAA,OAhCR,QAwCe2gJ,gCARPiD,yBAAAC,iBAAA,GAAA7jJ,OATN,SASM,KASV,EATU,KAAAA,OAjCP,SA0CgB2gJ,gCATTiD,yBAAAC,iBAAA,GAAA7jJ,OATN,SASM,KAUV,EAVU,KAAAA,OAlCP,SA4Ce2iJ,wBAVRiB,yBAAAC,iBAAA,GAAA7jJ,OATN,SASM,KAWV,EAXU,KAAAA,OAlCP,SA6CgBgiJ,gCAXT6B,kBAcf3xD,mBAAO,OACPC,oBAAQ,QACRH,qBAAS,SACTC,kBAAM,MAQN6xD,kBAAoB,WACpBC,gBAAkB,+tCC/CxB,IAAMC,gBAAQ,SAARA,QAAQ,QAAAp3F,KAAAljE,UAAA1D,OAAI2lI,KAAJ,IAAAx+H,MAAAy/D,MAAAC,KAAA,EAAAA,KAAAD,KAAAC,OAAI8+D,KAAJ9+D,MAAAnjE,UAAAmjE,MAAA,OAAAo3F,oBAAiB34B,cAAjB44B,4BAAiCv4B,KAAKp/H,IAAI,SAAAiqJ,UAAQ,OAAI,IAAIzqB,0BAAeyqB,eAqCvF,SAASh0E,eAAM2hF,SAKlB,IAJA,IAAIC,SAAW,GACTC,MAAK36J,UAAA1D,QAAA,IAAA0D,UAAA1D,OAAA,EACPlJ,EAAI,EAEDA,EAAIunK,QAASvnK,EAChBsnK,UAAYD,QAAQrnK,IAAUA,EAAlB,KAAA4M,UAAA1D,QAAkBlJ,EAAlB,OAAA+U,EAAAnI,UAAkB5M,EAAlB,IAEhBsnK,UAAYD,QAAQrnK,GAEpB,IAAMwnK,KAAO9nI,SAAS+nI,yBAChBpnI,QAAUX,SAASmJ,cAAc,OAEvC2+H,KAAKt8H,YAAY7K,SACjBA,QAAQO,UAAY0mI,SA3CxB,SAASI,cAAezvI,MACpB,GAAIA,KAAK0vI,WAAaC,KAAKC,aAE3B,IAA6E,IAAzEjB,gCAAgCn5J,QAAQwqB,KAAK6vI,QAAQ7+J,eACrDgvB,KAAK0Q,WAAWhb,YAAYsK,UACzB,KAAAzQ,2BAAA,EAAAugJ,mBAAA,EAAAC,oBAAAjzJ,EAAA,IACH,QAAAkzJ,MAAAC,UAAwBjwI,KAAKkwI,WAA7BpnK,OAAAmU,cAAAsS,2BAAAygJ,MAAAC,UAAA9yJ,QAAAC,MAAAmS,2BAAA,EACIkgJ,cADqCO,MAAAhnK,OADtC,MAAAmnK,KAAAL,mBAAA,EAAAC,eAAAI,IAAA,YAAA5gJ,2BAAA,MAAA0gJ,UAAA5yJ,QAAA4yJ,UAAA5yJ,SAAA,WAAAyyJ,kBAAA,MAAAC,kBAwCPN,CAAcrnI,SAhBsB,IAiB5BO,UAAcP,QAAdO,UAER,OAAO,kBAAMA,2SC3EjB,iCAiBMynI,4BAAiB,SAAjBA,eAAkBC,SAAU/mB,WAAYgnB,KAC1CD,SAASh4J,QAAQ,SAACk4J,QACCA,OAAO52E,cAAc62E,YAAYC,iBAAiBznK,MAC1D0tC,KAAK,SAAAi7B,MAAI,OAAI23E,WAAW33E,KAAKrjD,UAAUy2E,cAC9CurE,KAAOA,IAAIC,QAEOA,OAAOG,WAEfp1D,2BAA2B56C,aAAYG,gBAbtC,SAAbyf,WAAciwF,OAAQ9hJ,IAAT,OAAgB,WACX8hJ,OAAO52E,cAAc62E,YAAYC,iBAAiBznK,MAC1D0tC,KAAK,SAAAi7B,MAAI,OAAIljD,GAAGkjD,KAAKrjD,UAAUy2E,eAYnCzkB,CAAWiwF,OAAQjnB,gBAsWlBqnB,YAAqB,eArV9B,SAAAC,yKAAeC,CAAAthK,KAAAqhK,aACXrhK,KAAKuhK,yTAWW,QAAAj5F,KAAAljE,UAAA1D,OAAZ0/I,WAAY,IAAAv4I,MAAAy/D,MAAAC,KAAA,EAAAA,KAAAD,KAAAC,OAAZ64E,WAAY74E,MAAAnjE,UAAAmjE,MAEhB,OADAvoE,KAAKuhK,uBAAyBngB,WACvBphJ,6EAsCcqjB,QAOrB,OANAw9I,4BAAe7gK,KAAKuhK,uBAAwB,SAAC/rE,UACzCA,SAASzE,wBAAwB1tE,SAClC,SAAC29I,QACAA,OAAOxrE,WAAWzE,wBAAwB1tE,UAGvCrjB,qFAuC6B,QAAAyoE,MAAArjE,UAAA1D,OAAT0tF,QAAS,IAAAvmF,MAAA4/D,OAAAC,MAAA,EAAAA,MAAAD,MAAAC,QAAT0mB,QAAS1mB,OAAAtjE,UAAAsjE,OAOpC,OANAm4F,4BAAe7gK,KAAKuhK,uBAAwB,SAAC/rE,UACzCA,SAAS7E,2BAA2BvB,UACrC,SAAC4xE,QACAA,OAAOxrE,WAAW7E,2BAA2BvB,WAG1CpvF,2FAiCqBiI,KAM5B,OALA44J,4BAAe7gK,KAAKuhK,uBAAwB,SAAC/rE,UACzCA,SAAS3E,+BAA+B5oF,MACzC,SAAC+4J,QACAA,OAAOxrE,WAAW3E,+BAA+B5oF,OAE9CjI,6FAqBsBiI,KAO7B,OANA44J,4BAAe7gK,KAAKuhK,uBAAwB,SAAC/rE,UACzCA,SAASgsE,gCAAgCv5J,MAC1C,SAAC+4J,QACAA,OAAOxrE,WAAWgsE,gCAAgCv5J,OAG/CjI,2DA+BKiI,KAMZ,OALA44J,4BAAe7gK,KAAKuhK,uBAAwB,SAAC/rE,UACzCA,SAAS9E,eAAezoF,MACzB,SAAC+4J,QACAA,OAAOxrE,WAAW9E,eAAezoF,OAE9BjI,uEAyB0B,QAAAywE,MAAArrE,UAAA1D,OAAbosF,YAAa,IAAAjlF,MAAA4nE,OAAAC,MAAA,EAAAA,MAAAD,MAAAC,QAAbod,YAAapd,OAAAtrE,UAAAsrE,OAMjC,OALAmwF,4BAAe7gK,KAAKuhK,uBAAwB,SAAC/rE,UACzCA,SAAS5E,oBAAoB9C,cAC9B,SAACkzE,QACAA,OAAOxrE,WAAW5E,oBAAoB9C,eAEnC9tF,uEAgBmB,QAAA81E,MAAA1wE,UAAA1D,OAANqrJ,KAAM,IAAAlkJ,MAAAitE,OAAAE,MAAA,EAAAA,MAAAF,MAAAE,QAAN+2E,KAAM/2E,OAAA5wE,UAAA4wE,OAM1B,OALA6qF,4BAAe7gK,KAAKuhK,uBAAwB,SAAC/rE,UACzCu3D,KAAKjkJ,QAAQ,SAAA5H,KAAG,OAAIs0F,SAASisE,oBAAoBvgK,IAAI,GAAIA,IAAI,OAC9D,SAAC8/J,QACAjU,KAAKjkJ,QAAQ,SAAA5H,KAAG,OAAI8/J,OAAOxrE,WAAWisE,oBAAoBvgK,IAAI,GAAIA,IAAI,QAEnElB,yEAgBoB,QAAA0hK,MAAAt8J,UAAA1D,OAANqrJ,KAAM,IAAAlkJ,MAAA64J,OAAAC,MAAA,EAAAA,MAAAD,MAAAC,QAAN5U,KAAM4U,OAAAv8J,UAAAu8J,OAM3B,OALAd,4BAAe7gK,KAAKuhK,uBAAwB,SAAC/rE,UACzCu3D,KAAKjkJ,QAAQ,SAAA5H,KAAG,OAAIs0F,SAASosE,qBAAqB1gK,IAAI,GAAIA,IAAI,OAC/D,SAAC8/J,QACAjU,KAAKjkJ,QAAQ,SAAA5H,KAAG,OAAI8/J,OAAOxrE,WAAWosE,qBAAqB1gK,IAAI,GAAIA,IAAI,QAEpElB,iFA6C4B,IAAb6hK,OAAaz8J,UAAA1D,OAAA,QAAA6L,IAAAnI,UAAA,GAAAA,UAAA,MAC7B08J,sBAAwB9hK,KAAKuhK,uBAC7BQ,aAAe9yF,eAAeA,kBAtXtB,SAAhBmjD,cAAiB0vC,uBACnB,IAAME,QAAUF,sBAAsB75J,IAAI,SAAAg6J,MAAI,OAAIA,KAAKrvC,UACvD,OACIvhC,YACI6wE,IAAK,SAAAhhJ,EAACihJ,oBACF,IAAMC,kBAAoBD,mBAAmBnlB,aAC7C,OAAOolB,oBAA4D,IAAxCJ,QAAQ/7J,QAAQm8J,sBAgXIhwC,CAAc0vC,wBAAyBD,QAM9F,OAJAC,sBAAsBh5J,QAAQ,SAACk4J,QAC3BA,OAAOxrE,WAAW6sE,uBAAuBN,gBAGtC/hK,yBC5XFsiK,cACTjgI,SAAU,MACV6G,MAAO,OACP1G,QAAS,EACT1B,UAAS,GAAAplB,OH6Bc,OG7Bd,qBAGA6mJ,kBACTlgI,SAAU,MACV6G,MAAO,OACP1G,QAAS,GACTggI,SAAU,EACV1hI,UAAS,GAAAplB,OHqBc,OGrBd,wBAOA+mJ,kBAEH,+LCWH,IAAM3iB,cAAY4iB,oCAAAC,iBJ7BL,QI+BZlpK,MAAO,KACPyjB,MACIixD,UAAW,cACXC,aAAc,WALDs0F,oCAAAC,cJ5BF,WIqCflpK,MAAO,KACPyjB,MACIixD,UAAW,cACXC,aAAc,WAZDs0F,oCAAAC,cJ1BJ,SI0CblpK,MAAO,KACPyjB,MACIixD,UAAW,cACXC,aAAc,SACdF,aAAc,SAAAA,aAACrhE,QACX,MAAsB,iBAAXA,QAAkC,OAAXA,QAE1BtB,MAAOsB,QAGRA,WA1BE61J,oCAAAC,cJzBJ,SIwDblpK,MAAO,KACPyjB,MACIixD,UAAW,cACXC,aAAc,SACdF,aAAc,SAAAA,aAACrhE,QACX,MAAsB,iBAAXA,QAAkC,OAAXA,QAE1BtB,MAAOsB,QAGRA,WAzCE61J,oCAAAC,cJxBL,QIsEZlpK,MAAO,KACPyjB,MACIixD,UAAW,cACXC,aAAc,SACdF,aAAc,SAAAA,aAACrhE,QACX,MAAsB,iBAAXA,QAAkC,OAAXA,QAE1BtB,MAAOsB,QAGRA,WAxDE61J,oCAAAC,cJvBH,UIoFdlpK,SACAyjB,MACIixD,UAAW,cACXC,aAAc,WAhEDs0F,oCAAAC,cJtBH,UI2FdlpK,SACAyjB,MACIixD,UAAW,cACXC,aAAc,WAxEDs0F,oCAAAC,cJrBA,aIiGjBlpK,MAAO,KACPyjB,MACIixD,UAAW,cACXC,aAAc,YA/EDu0F,eAoFZC,eAAaF,oCAAAG,kBJ3FL,SI6FbppK,OAAQ,KAAM,MACdyjB,MACIixD,WAAY,cAAe,eAC3BC,cAAe,WAAY,UAC3BH,cAAc,EACdC,cAAe,SAAC8nF,OACZ,GAAqB,iBAAVA,MAAoB,CAC3B,IAAMt8J,EAAI,SAAJA,IAAI,OAAMs8J,OAEhB,OADAt8J,EAAEopK,YAAa,EACRppK,EAEX,OAAOs8J,OACR,SAAC+M,aACA,IAAMr9I,UAAYupD,kBAAmBqzF,cACrC,OAAOrzF,eAAevpD,UAAWq9I,kBAhBvBL,oCAAAG,eJ1FD,YI+GjBppK,OAAQ,KAAM,MACdyjB,MACIixD,WAAY,cAAe,eAC3BC,cAAe,WAAY,UAC3BH,cAAc,EACdC,cAAe,SAAC80F,UACZ,GAAwB,iBAAbA,SAAuB,CAC9B,IAAMC,IAAM,SAANA,MAAM,OAAMD,UAElB,OADAC,IAAIH,YAAa,EACVG,IAEX,OAAOD,UACR,SAACE,gBACA,IAAMx9I,UAAYupD,kBAAmBszF,kBACrC,OAAOtzF,eAAevpD,UAAWw9I,qBAnCvBL,uTCtHLM,2BACjB,SAAAA,gBAAapqK,KAAM8vB,WAAY+H,oKAAMwyI,CAAApjK,KAAAmjK,iBACjCnjK,KAAKgyB,MAAQpB,KACb5wB,KAAKqjK,WACD3nI,OAAQ7S,WAAW6S,OACnBD,MAAO5S,WAAW4S,MAClB6G,IAAK,KACLoD,KAAM,MAEV1lC,KAAKsjK,UAAY,KACjBtjK,KAAKujK,WAAa,KAClBvjK,KAAKwjK,WAAa,KAClBxjK,KAAKwkG,QAAU,KACfxkG,KAAK2lG,UAAY,KACjB3lG,KAAKyjK,eAAiB1qK,KACtBiH,KAAK0jK,WAAa,wUAIlB,MAAM,IAAIh0J,MAAM,8FAIhB,MAAM,IAAIA,MAAM,oEAGdtI,OAIF,OAHIA,QACApH,KAAKyjK,eAAiBr8J,OAEnBpH,KAAKyjK,qDAGRr8J,OAIJ,OAHIA,QACApH,KAAKwkG,QAAUp9F,OAEZpH,KAAKwkG,kDAGNp9F,OAIN,OAHIA,QACApH,KAAK2lG,UAAYv+F,OAEdpH,KAAK2lG,sDAGLv+F,OAIP,OAHIA,QACApH,KAAKwjK,WAAap8J,OAEfpH,KAAKwjK,uDAGLp8J,OAIP,OAHIA,QACApH,KAAKujK,WAAan8J,OAEfpH,KAAKujK,qDAGNn8J,OAIN,OAHIA,QACApH,KAAKsjK,UAAYl8J,OAEdpH,KAAKsjK,oDAGNl8J,OAIN,OAHIA,OACAlO,OAAO4T,OAAO9M,KAAKqjK,UAAWj8J,OAE3BpH,KAAKqjK,sDAGLj8J,OAIP,OAHIA,QACApH,KAAK0jK,WAAat8J,OAEfpH,KAAK0jK,+CAIZ,MAAM,IAAIh0J,MAAM,uzCCtDTi0J,8vBA3BcR,4UAErB,OACI1nI,MAAOz7B,KAAK4mG,WAAWnrE,MACvBC,OAAQ17B,KAAK4mG,WAAWlrE,kEAId+xC,MAOd,OANAztE,KAAK4mG,UAAWtkE,IAAKmrC,KAAKjqE,EAAGkiC,KAAM+nC,KAAK1vC,IACxC/9B,KAAK4jK,eACDnoI,MAAOgyC,KAAKhyC,MACZC,OAAQ+xC,KAAK/xC,QAEjB17B,KAAK6jK,SAASp2F,KAAKo2F,UACZ7jK,yCAIP,IAAKA,KAAK8jK,UACN,MAAM,IAAIp0J,MAAJ,yBAAAgM,OAAmC1b,KAAK+jK,gBAGlD,OADA/jK,KAAK8jK,UAAUpwI,MAAMwE,SAASgB,eAAel5B,KAAK6jK,WAC3C7jK,2BCzBFslH,6BACTtpB,YAAa,OACblC,aACIhI,WAAY,cAEhBkyE,WAAY,SACZC,WACIC,UAAW,GACXC,MAAO,EACPxJ,UACIzxH,MAAO,SAEXwxH,YACIxxH,MAAO,WAGfk7H,QACI/hI,SAAU,QACV+R,OACI+pD,MAAM,EACN37D,QAAS,EACTi8D,OAAQ,EACRwyD,OAAQ,EACRv1H,OAAQ,GACRD,MAAO,IAEXkmE,OACIxD,MAAM,EACN37D,QAAS,EACTi8D,OAAQ,EACRwyD,OAAQ,EACRv1H,OAAQ,GACRD,MAAO,IAEXnB,MACI6jE,MAAM,EACN37D,QAAS,EACTi8D,OAAQ,EACRwyD,OAAQ,EACRv1H,OAAQ,GACRD,MAAO,KAGf6yH,aAAa,EACbtwH,SAAU,IACVqmI,UAAW,IACXj2B,OACItzH,MACIwpJ,cAAe,GAEnBzqJ,SACI2oJ,SAAU,EACV+B,cAAe,SACfD,cAAe,IAGvBrT,QACIt3H,MAAO,QACPya,MAAO,UACP3Y,MAAO,EACP+oI,UAAU,EACVpyG,QAAS,GAEb21F,aACI5oD,UAAU,GAEdslE,kBChEEC,cAAgB,IAChBC,eAAiB,IACjBC,mBAAkB,GAAAlpJ,OAAM4pG,4BAAetpB,YAArB,+BAClB6oE,YAAW,GAAAnpJ,OAAM4pG,4BAAetpB,YAArB,4TCLI8oE,2BACjB,SAAAA,gBAAaj4J,sKAAQk4J,CAAA/kK,KAAA8kK,iBACjB9kK,KAAKglK,MAAQn4J,OAAOo4J,MAAQ,KAC5BjlK,KAAKklK,KAAOr4J,OAAOs4J,KAAO,KAC1BnlK,KAAKolK,aAAsC,IAAvBv4J,OAAOw4J,YAAoB,EAAIx4J,OAAOw4J,aAAe,EACzErlK,KAAKslK,WAAaz4J,OAAO04J,YAAa,EACtCvlK,KAAKwlK,OAAS34J,OAAO44J,UACrBzlK,KAAK0lK,iBAAmB,EACxB1lK,KAAK2lK,gBAAkB,6SAGrBV,OAIF,OAHIA,QACAjlK,KAAKglK,MAAQC,OAEVjlK,KAAKglK,kDAGLO,YAIP,OAHIA,aACAvlK,KAAKslK,WAAaC,YAEfvlK,KAAKslK,2CAGXH,MAID,OAHIA,OACAnlK,KAAKklK,KAAOC,MAETnlK,KAAKklK,qDAGHG,cAIT,OAHIA,eACArlK,KAAKolK,aAAeC,cAEjBrlK,KAAKolK,iDAGTK,QAIH,OAHIA,SACAzlK,KAAKwlK,OAASC,QAEXzlK,KAAKwlK,+DAGCI,kBAIb,OAHIA,mBACA5lK,KAAK0lK,iBAAmBE,kBAErB5lK,KAAK0lK,uEAGAG,iBAIZ,OAHIA,kBACA7lK,KAAK2lK,gBAAkBE,iBAEpB7lK,KAAK2lK,uCCvCb,IAAMG,UAAa,WACtB,IAAIC,KAAO,EACX,OAAO,oBAAArqJ,OAASmpJ,YAAT,KAAAnpJ,SAA0BqqJ,OAFX,GAKnB,SAASC,YAAav1I,MACzB,IAAIw1I,eAAiB,EACrB,GAA0B,MAAtBx1I,KAAKy1I,aACLD,eAmBD,SAASE,gCAAiC11I,MAC7C,IAAIw1I,eAAiBz9J,OAAO49J,iBAO5B,OANA31I,KAAKiH,WAAW5uB,QAAQ,SAACuZ,OACrB,IAAM3Z,EAAIs9J,YAAY3jJ,OAClB3Z,EAAIu9J,iBACJA,eAAiBv9J,KAGlBu9J,eA3BcE,CAAgC11I,WAC9C,GAA0B,MAAtBA,KAAKy1I,aACZz1I,KAAKiH,WAAW5uB,QAAQ,SAACuZ,OACrB4jJ,gBAAkBD,YAAY3jJ,cAE/B,GAAIoO,KAAK7T,QAAQqoJ,QAAUx0I,KAAK7T,QAAQqoJ,OAAOxV,gBAAiB,CACnE,IAAM4W,gBAAkB51I,KAAKm2E,WAAWlrE,OAClC4qI,WAAa71I,KAAK7T,QAAQqoJ,OAAOxV,kBAAkB/zH,QAEzDuqI,eAAiBI,gBAAkBC,YACd,IACjBL,eAAiB,QAGrBA,eAAiB,EAErB,OAAOA,eAcJ,SAASM,YAAa91I,MACzB,IAAI+1I,cAAgB,EACpB,GAA0B,MAAtB/1I,KAAKy1I,aACLM,cAkBD,SAASC,6BAA8Bh2I,MAC1C,IAAI+1I,cAAgBh+J,OAAO49J,iBAO3B,OANA31I,KAAKiH,WAAW5uB,QAAQ,SAACuZ,OACrB,IAAMwkC,EAAI0/G,YAAYlkJ,OAClBwkC,EAAI2/G,gBACJA,cAAgB3/G,KAGjB2/G,cA1BaC,CAA6Bh2I,WAC1C,GAA0B,MAAtBA,KAAKy1I,aACZz1I,KAAKiH,WAAW5uB,QAAQ,SAACuZ,OACrBmkJ,eAAiBD,YAAYlkJ,cAE9B,GAAIoO,KAAK7T,QAAQqoJ,QAAUx0I,KAAK7T,QAAQqoJ,OAAOxV,gBAAiB,CACnE,IAAMiX,eAAiBj2I,KAAKm2E,WAAWnrE,MACjCkrI,UAAYl2I,KAAK7T,QAAQqoJ,OAAOxV,kBAAkBh0H,OACxD+qI,cAAgBE,eAAiBC,WACb,IAChBH,cAAgB,QAGpBA,cAAgB,EAEpB,OAAOA,cA0DJ,SAASI,2BAA4BlrI,OAAQD,MAAO4G,UACvD,IAAM4/H,KAAO,IAAI0B,gBAAe,GAAKjoI,cAAQD,cAG7C,OAFAwmI,KAAKlpK,KAAK,eACVkpK,KAAK5/H,SAASA,UACP4/H,KAGJ,SAAS4E,eAAgBC,gBAAiBhD,WAAyD,IAGlGiD,6BAHoDC,YAA8C5hK,UAAA1D,OAAA,QAAA6L,IAAAnI,UAAA,IAAAA,UAAA,GAAzB6hK,gBAAyB7hK,UAAA1D,OAAA,QAAA6L,IAAAnI,UAAA,IAAAA,UAAA,GAClG+/J,IAAM,GACN+B,oBAAsB,EAEtBC,WAAa,EACbC,UAAY,EAEhB,IAAKtD,UACD,OAASxvJ,MAAOwyJ,gBAAiB9jH,OAAQ8jH,iBARyD,IAAAO,sBAW3CvD,UAAUrU,kBAArD6X,gBAXsFD,sBAW9F3rI,OAAgC6rI,eAX8DF,sBAWrE5rI,MAC3B4G,SAAWyhI,UAAUzhI,WACV,QAAbA,UAAmC,WAAbA,UACtB8iI,IAAM,IACN+B,oBAAsBI,gBAAkBR,gBAAgBlB,kBACxDuB,WAAaL,gBAAgBlB,kBAAoB0B,gBACjDF,UAAYN,gBAAgBjB,mBAE5BV,IAAM,IACN+B,oBAAsBK,eAAiBT,gBAAgBjB,iBACvDuB,UAAYN,gBAAgBjB,iBAAmB0B,eAC/CJ,WAAaL,gBAAgBlB,mBAEjCmB,6BAA+B,EAAIG,oBAGnCJ,gBAAgB3B,IAAIA,KACpB,IAAMqC,iBACFvC,KAAMnB,UAAU/qK,OAChBosK,IAAK,KACLE,YAAa6B,oBACb3B,WAAW0B,iBAA0BD,YACrCvB,UAEEgC,UAAY,IAAI3C,gBAAgB0C,iBACtCC,UAAU7B,gBAAgB0B,iBAC1BG,UAAU5B,eAAe0B,gBAEzB,IAOMG,WAAa,IAAI5C,iBANnBG,KAAM,KACNE,IAAK,KACLE,YAAa0B,6BACbxB,WAAW0B,kBAA2BD,YACtCvB,WAYJ,OATAiC,WAAW9B,gBAAgBuB,YAC3BO,WAAW7B,eAAeuB,WACtBJ,YACAF,gBAAgBrB,OAAOgC,YACH,QAAbplI,UAAmC,SAAbA,SAC7BykI,gBAAgBrB,OAAOgC,UAAWC,aAElCZ,gBAAgBrB,OAAOiC,WAAYD,aAE9BnzJ,MAAOmzJ,UAAWzkH,OAAQ0kH,0vBChDxBtH,kCA/IX,SAAAA,KAAap1J,yJAAM28J,CAAA3nK,KAAAogK,MACfpgK,KAAK+iG,OAAS/3F,KACdhL,KAAK4jB,QAAU,KACf5jB,KAAKoiB,aACLpiB,KAAK4nK,WAAa,KAClB5nK,KAAKqjK,WACD/gI,IAAK,KACLoD,KAAM,KACNhK,OAAQ,KACRD,MAAO,MAGXz7B,KAAK2lF,IAAM3lF,KAAK+iG,OAAOkiE,iBAAkB9B,iBAAmBnjK,KAAK+iG,OAAOkiE,OAAOpB,WACnE7jK,KAAK+iG,OAAOkiE,OAAOpB,WACnBiC,yRAGH7wJ,SAAS,IAAA4yJ,gBAAA3yJ,MAAAlV,MAClB6nK,gBAAA7nK,KAAKoiB,WAAUlc,KAAfqB,MAAAsgK,gBAAAC,uBAAuB7yJ,UACvBA,QAAQnM,QAAQ,SAACpO,GAAQA,EAAE4rB,OAAOpR,iDAIlC,OAAwB,OAAjBlV,KAAK4jB,gDAIZ,OAAQ5jB,KAAKoiB,UAAU1gB,uDAIvB,OAAO1B,KAAK+iG,OAAOoiE,wDAInB,QAASnlK,KAAK+iG,OAAOwiE,sDAGf7tI,WAIN,OAHIA,YACA13B,KAAKoiB,UAAYsV,WAEd13B,KAAKoiB,gDAGRkE,SAIJ,OAHIA,UACAtmB,KAAK4jB,QAAU0C,SAEZtmB,KAAK4jB,oDAGLmkJ,YAIP,OAHIA,aACA/nK,KAAK4nK,WAAaG,YAEf/nK,KAAK4nK,yCAGZlvI,KAIA,OAHIA,MACA14B,KAAK2lF,IAAMjtD,KAER14B,KAAK2lF,wCAGT/oE,QAIH,OAHIA,SACA5c,KAAK+iG,OAASnmF,QAEX5c,KAAK+iG,iDAGNilE,OASN,OARIA,QACAhoK,KAAKqjK,WACD/gI,IAAK0lI,MAAM1lI,IACXoD,KAAMsiI,MAAMtiI,KACZhK,OAAQssI,MAAMtsI,OACdD,MAAOusI,MAAMvsI,QAGdz7B,KAAKqjK,wDAMJ4E,YAAY,IAAA7yJ,OAAApV,KAChBA,KAAK2lF,MAAQsiF,WAAWtiF,KACxB3lF,KAAK+iG,OAAOoiE,IAAI8C,WAAW9C,KAC3BnlK,KAAK+iG,OAAOsiE,YAAY4C,WAAW5C,cAEnCrlK,KAAKoiB,UAAUtZ,QAAQ,SAAC2nB,MACpB,GAAIA,KAAKk1D,MAAQsiF,WAAWtiF,IAGxB,OAFAl1D,KAAK7T,MAAMuoJ,IAAI8C,WAAW9C,UAC1B10I,KAAK7T,MAAMyoJ,YAAY4C,WAAW5C,aAGtCjwJ,OAAK8yJ,WAAWz3I,KAAMw3I,4DAMtBx3I,KAAMw3I,YAAY,IAAAvwJ,OAAA1X,KAC1BywB,KAAKiH,WAAW5uB,QAAQ,SAACq/J,WACjBA,UAAUzvI,OAASuvI,WAAWtiF,KAC9BwiF,UAAUvrJ,QAAQuoJ,IAAI8C,WAAW9C,KACjCgD,UAAUvrJ,QAAQyoJ,YAAY4C,WAAW5C,cAEzC3tJ,OAAKwwJ,WAAWC,UAAWF,qDAS/BG,QAAQ,IAAA/yI,OAAAr1B,KACZA,KAAKoiB,UAAUtZ,QAAQ,SAAC2nB,MACpB,GAAIA,KAAKiI,OAAS0vI,OAAQ,CACtB,IAAMnmK,MAAQozB,OAAKjT,UAAUnc,QAAQwqB,MACrC4E,OAAK0tE,OAAO0iE,QAAQn+J,OAAOrF,MAAO,GAEtCozB,OAAKgzI,iBAAiB53I,KAAM23I,oEAKlB33I,KAAM23I,QAAQ,IAAA5/F,OAAAxoE,KAC5BywB,KAAKiH,WAAW5uB,QAAQ,SAACq/J,WACrB,GAAIA,UAAUzvI,OAAS0vI,OAAQ,CAC3B,IAAMnmK,MAAQwuB,KAAKiH,WAAWzxB,QAAQkiK,WACtC13I,KAAK7T,QAAQ6oJ,QAAQn+J,OAAOrF,MAAO,QAEnCumE,OAAK6/F,iBAAiBF,UAAWC,0TCtI5BE,oCACjB,SAAAA,YAAaC,aAAc17J,mKAAQ27J,CAAAxoK,KAAAsoK,aAC/BtoK,KAAKyoK,cAAgBF,aACrBvoK,KAAKqwF,QAAUxjF,OACf7M,KAAK0oK,MAAQ1oK,KAAK2oK,WAAW3oK,KAAKqwF,QAAS,MAC3CrwF,KAAK4oK,wTAGG/7J,OAAQyZ,QAChB,IAAMmK,KAAO,IAAI2vI,uBAAKvzJ,QAClByZ,QACAmK,KAAKs3I,UAAUzhJ,OAAO4/I,cACtB5/I,OAAOuiJ,aAAap4I,QAEpBzwB,KAAK0oK,MAAQj4I,KANO,IAAAzQ,2BAAA,EAAAugJ,mBAAA,EAAAC,oBAAAjzJ,EAAA,IAQxB,QAAAkzJ,MAAAC,UAAmB7zJ,OAAO44J,QAA1BlsK,OAAAmU,cAAAsS,2BAAAygJ,MAAAC,UAAA9yJ,QAAAC,MAAAmS,2BAAA,EAAmC,KAAxB8oJ,KAAwBrI,MAAAhnK,MAC/BuG,KAAK2oK,WAAWG,KAAMr4I,OATF,MAAAmwI,KAAAL,mBAAA,EAAAC,eAAAI,IAAA,YAAA5gJ,2BAAA,MAAA0gJ,UAAA5yJ,QAAA4yJ,UAAA5yJ,SAAA,WAAAyyJ,kBAAA,MAAAC,gBAYxB,OAAOxgK,KAAK0oK,wDAIZ1oK,KAAK0oK,MAAM9hE,UACPtkE,IAAK,EACLoD,KAAM,EACNjK,MAAOz7B,KAAKyoK,cAAchtI,MAC1BC,OAAQ17B,KAAKyoK,cAAc/sI,SF8OhC,SAASqtI,oBAAqBt4I,MACjC,IAAMu4I,YAAcv4I,KAAKiH,WACAzvB,IAAI,SAAAoa,OAAK,OAAIA,MAAMzF,QAAQyoJ,gBAC3B5yJ,OAAO,SAACw2J,MAAO/nK,KAAR,OAAgB+nK,MAAQ/nK,KAAK,GAE7DuvB,KAAKiH,WAAW5uB,QAAQ,SAACuZ,MAAO7pB,EAAGk/B,UAC/B,IAAMwxI,YAAcxxI,SAASl/B,EAAI,GAC3B2wK,MAAQ9mJ,MAAMzF,QAAQyoJ,cAAgB2D,YAElB,MAAtB3mJ,MAAM0lJ,YACN1lJ,MAAMukF,UACFtkE,IAAK9pC,EAAI0wK,YAAYtiE,WAAWtkE,IAAM4mI,YAAYtiE,WAAWlrE,OAAS,EACtEgK,KAAMrjB,MAAMiE,SAASsgF,WAAWlhE,KAChChK,OAAQrZ,MAAMiE,SAASsgF,WAAWlrE,OAASytI,MAC3C1tI,MAAOpZ,MAAMiE,SAASsgF,WAAWnrE,QAGrCpZ,MAAMukF,UACFtkE,IAAKjgB,MAAMiE,SAASsgF,WAAWtkE,IAC/BoD,KAAMltC,EAAI0wK,YAAYtiE,WAAWlhE,KAAOwjI,YAAYtiE,WAAWnrE,MAAQ,EACvEC,OAAQrZ,MAAMiE,SAASsgF,WAAWlrE,OAClCD,MAAOpZ,MAAMiE,SAASsgF,WAAWnrE,MAAQ0tI,QAGjDJ,oBAAoB1mJ,SEpQpB0mJ,CAAoB/oK,KAAK0oK,+DAGZj4I,MAAM,IAAAvb,MAAAlV,KACnBywB,KAAKiH,WAAW5uB,QAAQ,SAACuZ,OACrBimJ,YAAYc,qBAAqB/mJ,OACjCnN,MAAKm0J,gBAAgBhnJ,uDAsBzB,OF0JD,SAASinJ,mBAAoB74I,MAQhC,IAPA,IAAI80I,UAEAgE,WACAC,cAFAC,uBAAyB,EAIvBC,eAAiBj5I,KAAKiH,WAAWh2B,OAE9BO,MAAQ,EAAGA,MAAQynK,eAAgBznK,QAAS,CACjD,IACI0nK,cADAzqJ,QAAE,EAEAmD,MAAQoO,KAAKiH,WAAWz1B,OAEJ,MAAtBogB,MAAM0lJ,aACN7oJ,GAAK8mJ,YACLuD,WAAa,SACbC,cAAgB,UAEhBtqJ,GAAKqnJ,YACLgD,WAAa,QACbC,cAAgB,UAIhBnnJ,MAAM2kJ,cAENzB,UAAYljJ,OAKhBonJ,wBAA2BE,cAAgBzqJ,GAAGmD,OAC9CA,MAAMukF,WAAW2iE,aAAeI,cAEhCtnJ,MAAMukF,WAAW4iE,eAAiBnnJ,MAAMiE,SAASsgF,WAAW4iE,eAE5DF,mBAAmBjnJ,QAGnBkjJ,YACAA,UAAU3+D,WAAW2iE,aAAeE,uBACpClE,UAAU3+D,WAAW4iE,eAAiBjE,UAAUj/I,SAASsgF,WAAW4iE,eACpEF,mBAAmB/D,YEtMnB+D,CAAmBtpK,KAAK0oK,OF0MzB,SAASkB,gBAAiBn5I,MAC7BA,KAAKiH,WAAW5uB,QAAQ,SAACuZ,MAAO7pB,EAAGk/B,UAC/B,IAAMkvE,SAnLP,SAASijE,kBAAmBC,GAAItxK,EAAGuY,IAAK+/F,UAC3C,GAAIt4G,EAAG,CAEH,IAFGuxK,sBAEiBh5J,IAAIvY,EAAI,GACmDouG,WAAlEojE,MAHVD,sBAGKznI,IAAiB2nI,OAHtBF,sBAGgBrkI,KAAqBwkI,QAHrCH,sBAG6BruI,OAAwByuI,OAHrDJ,sBAG8CtuI,MACjD,OACIA,MAAOquI,GAAGruI,MACVC,OAAQouI,GAAGpuI,OAEX4G,IAA8B,MAAzBwuE,SAASi3D,YAChBiC,MAAOE,QAAUF,MAEftkI,KAA+B,MAAzBorE,SAASi3D,YACjBkC,OAAQA,OAAQE,QAb+B,IAAAC,sBAiBlBt5D,SAASxqF,SAASsgF,WAAxCojE,KAjBwCI,sBAiB7C9nI,IAAiB2nI,MAjB4BG,sBAiBlC1kI,KACnB,OACIjK,MAAOquI,GAAGruI,MACVC,OAAQouI,GAAGpuI,OACX4G,IAAK0nI,KACLtkI,KAAMukI,OA6JWJ,CAAkBxnJ,MAAMukF,WAAYpuG,EAAGk/B,SAAUrV,OAClEA,MAAMukF,SAASA,UACfgjE,gBAAgBvnJ,SE7MhBunJ,CAAgB5pK,KAAK0oK,OACd1oK,mDAKP,OADAA,KAAKqpK,gBAAgBrpK,KAAK0oK,OACnB1oK,yCAIP,OAAOA,KAAK0oK,0EA3Baj4I,MACzB,IAAMq5I,GAAKr5I,KAAKm2E,WACVq+D,KAAOx0I,KAAK7T,QAAQqoJ,OAC1B,GAAIA,MAAQA,KAAKoF,iBAAkB,CAC/B,IAAM58F,MACF1vC,EAAG+rI,GAAGpkI,KACNliC,EAAGsmK,GAAGxnI,IACN7G,MAAOquI,GAAGruI,MACVC,OAAQouI,GAAGpuI,OACXmoI,SAAUpzI,KAAKiI,MAEnBusI,KAAKoF,iBAAiB58F,mTCxD3B,IAAM68F,MAAb,oBAAAA,4JAAA34I,CAAA3xB,KAAAsqK,OAAA,2NAAAC,CAAAD,MAAA,OAAAvwK,IAAA,eAAAN,MAAA,SAAA+wK,aACyBjzF,SACjB,OAAOA,mBAAmBumD,WAFlC/jI,IAAA,QAAAN,MAAA,SAAAgxK,MAKkBlzF,SACV,OAAOA,QAAQ7+C,MANvB3+B,IAAA,aAAAN,MAAA,SAAAixK,WASuBhyI,IACf,OAAOR,SAASgB,eAAeR,OAVvC3+B,IAAA,gBAAAN,MAAA,SAAAkxK,cAa0B3/J,MAClB,OAAOA,KAAK0I,OAAO,SAAAk3J,YAAU,OAAyB,MAArBA,WAAWtkJ,SAAgB,MAdpEvsB,IAAA,YAAAN,MAAA,SAAAoxK,UAoBsBC,OACyB,OAAnC5yI,SAASgB,eAAe4xI,QAAmB5yI,SAASgB,eAAe4xI,OAAO1jI,aArBtFkjI,MAAA,qSCCqBS,gCACjB,SAAAA,UAAat6I,+JAAMu6I,CAAAhrK,KAAA+qK,WACf/qK,KAAK+zB,MAAQtD,KACbzwB,KAAK0jK,WAAajzI,KAAK7T,QAAQqoJ,iBAAkB9B,gBAC7B1yI,KAAK7T,QAAQqoJ,OAAOnkI,YAAc8jI,2SAItD,OAAO5kK,KAAK+zB,gDAIZ,OAAO/zB,KAAK+zB,MAAMnX,QAAQqoJ,iBAAkB9B,8DAI5C,OAAOnjK,KAAK0jK,YAAckB,mUCjB3B,IAAMqG,uBAAb,WACI,SAAAA,WAAajgK,gKAAMkgK,CAAAlrK,KAAAirK,YACfjrK,KAAKynE,MAAQz8D,KAFrB,6OAAAmgK,CAAAF,aAAAlxK,IAAA,wBAAAN,MAAA,SAAA2xK,wBAMQ,IAAMC,cAEN,OCRqB,SAAhBC,cAAiB76I,KAAM46I,YAChC,IAAME,UAAY,IAAIR,qBAAUt6I,MAChC46I,WAAWnlK,KAAKqlK,WAChB96I,KAAKiH,WAAW5uB,QAAQ,SAACuZ,OACrBipJ,cAAcjpJ,MAAOgpJ,cDGrBC,CAActrK,KAAKynE,MAAO4jG,YACnBA,eARfJ,WAAA,mtDEAO,IAAMO,gBAAb,SAAAC,aAAA,SAAAD,kBAAA,8JAAAE,CAAA1rK,KAAAwrK,iBAAAG,oCAAA3rK,KAAA4rK,yBAAAJ,iBAAAjkK,MAAAvH,KAAAoF,YAAA,8WAAAymK,CAAAL,gBAAqCP,wPAArCa,CAAAN,kBAAAzxK,IAAA,iBAAAN,MAAA,SAAAsyK,iBAEQ,OAAAC,cAAAJ,yBAAAJ,gBAAAlxK,WAAA,wBAAA0F,MAAArH,KAAAqH,UAFRwrK,gBAAA,+RCFO,IAAMS,SAAb,oBAAAA,kKAAAC,CAAAlsK,KAAAisK,UAAA,oOAAAE,CAAAF,WAAAlyK,IAAA,eAAAN,MAAA,SAAA2yK,aAEkB37I,KAAMkwC,MAChBlwC,KAAK47I,cAAgB1rG,SAH7BsrG,SAAA,i3ECIO,IAAMK,2BAAb,SAAAC,WACI,SAAAD,aAAathK,MAAM,IAAAkK,MAAA,kKAAAs3J,CAAAxsK,KAAAssK,eACfp3J,MAAAu3J,wCAAAzsK,KAAA0sK,6BAAAJ,cAAA3zK,KAAAqH,QACKynE,MAAQz8D,KACbkK,MAAKy3J,aAAe,IAAInB,gBAAgBt2J,MAAKuyD,OAAOskG,iBAHrC72J,MADvB,sXAAA03J,CAAAN,aAAkCL,sPAAlCY,CAAAP,eAAAvyK,IAAA,aAAAN,MAAA,SAAAqzK,WAOgBp5I,MAAOoN,WAAW,IAAA1rB,OAAApV,KACpB+sK,QAAUr5I,MAChBs5I,kBAAAN,6BAAAJ,aAAAhyK,WAAA,eAAA0F,MAAArH,KAAAqH,KAAmB+sK,QAAS/sK,KAAKynE,OACjCznE,KAAKitK,UAAYjtK,KAAKktK,yBAAyBpsI,WAC/C9gC,KAAK2sK,aAAa7jK,QAAQ,SAAC2nB,MACvB,GAAIA,KAAK08I,UAAW,CAChB,IAAMlI,KAAOx0I,KAAKA,OAClBrb,OAAK63J,UAAUvpI,YAAYtuB,OAAKg4J,qBAALC,iBAA+BpI,KAAKr+D,YAC3DluE,GAAIusI,KAAKvsI,KACToI,UAAWrQ,KAAKqQ,mBAG5BisI,QAAQrpI,YAAY1jC,KAAKitK,cAnBjClzK,IAAA,uBAAAN,MAAA,SAAA2zK,qBAsB0BvgK,QAAQ,IAClBy1B,IAA4Cz1B,OAA5Cy1B,IAAKoD,KAAuC74B,OAAvC64B,KAAMhK,OAAiC7uB,OAAjC6uB,OAAQD,MAAyB5uB,OAAzB4uB,MAAOqF,UAAkBj0B,OAAlBi0B,UAAWpI,GAAO7rB,OAAP6rB,GAEvC40I,IADcp1I,SAASgB,eAAeR,KACjBR,SAASmJ,cAAc,OAQlD,OAPAisI,IAAI3zI,MAAM0I,SAAW,WACrBirI,IAAI3zI,MAAM+L,KAAV,GAAAhqB,OAAoBgqB,KAApB,MACA4nI,IAAI3zI,MAAM2I,IAAV,GAAA5mB,OAAmB4mB,IAAnB,MACAgrI,IAAI3zI,MAAM+B,OAAV,GAAAhgB,OAAsBggB,OAAtB,MACA4xI,IAAI3zI,MAAM8B,MAAV,GAAA/f,OAAqB+f,MAArB,MACA6xI,IAAI50I,GAAKA,GACT40I,IAAIxsI,UAAYA,UACTwsI,OAjCfvzK,IAAA,2BAAAN,MAAA,SAAAyzK,yBAoC8BpsI,WACtB,IAAMnI,UAAY2xI,MAAMK,cAAc3qK,KAAK2sK,cACrC1H,KAAOtsI,UAAUlI,OACjBw8I,UAAYjtK,KAAKotK,qBAALC,iBAA+BpI,KAAKr+D,YAClDluE,GAAIusI,KAAKvsI,KACToI,UAAWnI,UAAUmI,eAGzB,OAFAmsI,UAAUnsI,UAAYA,UACtBmsI,UAAUtzI,MAAM0I,SAAW,WACpB4qI,aA5CflzK,IAAA,cAAAN,MAAA,SAAA8zK,cAgDQ,OAAOvtK,KAAK2sK,iBAhDpBL,aAAA,GCEakB,SAAW,SAAXA,SAAYlxI,QAASmxI,QAAV,OACAnxI,QAAQoxI,WAAWH,cAAcriJ,KAAK,SAAAotC,OAAK,OAAIA,MAAM7nC,OAAOiI,OAAS+0I,UAEhFE,kBAAa,SAAbA,WAAcrxI,SACvBA,QAAQoxI,SAAS,IAAIpB,2BAAahwI,QAAQtxB,SAC1CsxB,QAAQoxI,WAAWZ,WAAWxwI,QAAQ5I,QAAS4I,QAAQwE,iTCRpD,IAAM8sI,+BAAb,WACI,SAAAA,eAAa5iK,KAAM0iK,SAAU/0I,yKAAWk1I,CAAA7tK,KAAA4tK,gBACpC5tK,KAAKynE,MAAQz8D,KAAK21D,KAClB3gE,KAAK8tK,cAAgB9iK,KAAK+iK,aAC1B/tK,KAAKguK,iBAAmBhjK,KAAKijK,gBAC7BjuK,KAAKkuK,UAAYR,SACjB1tK,KAAKkjG,OAASonE,MAAME,aAAa7xI,WAAaA,UAAY2xI,MAAMI,WAAW/xI,WANnF,yPAAAw1I,CAAAP,iBAAA7zK,IAAA,OAAAN,MAAA,SAAAugE,OAaQ,ODFkB,SAAbo0G,WAAc9xI,SACvB,OAAQA,QAAQoxI,YAChB,IAAK,OACDC,kBAAWrxI,SACX,MACJ,QACIqxI,kBAAWrxI,UCPX8xI,CAAWpuK,MDyBY,SAAlBquK,gBAAmB/xI,QAASgyI,eACrCA,cAAc52I,WAAW5uB,QAAQ,SAACg7J,WAC9B,IAAMmB,KAAOnB,UAAUlnJ,QAAQqoJ,OAC/B,GAAIA,gBAAgB9B,iBAAmB8B,KAAKsJ,YAAa,CACrD,IAAIC,iBACEl2G,MAAQk1G,SAASlxI,QAASwnI,UAAUprI,MAAMjI,OAC1CA,KAAO6nC,MAAMsuC,WACb6nE,QAAUjB,SAASlxI,QAASA,QAAQyxI,eAAe10K,IAAI4rK,KAAKsJ,aAAa1K,YAC1DpzI,OACAm2E,WACrB,OAAQq+D,KAAKyJ,aACb,IAAK,OACDF,eACIlsI,IAAK7R,KAAK6R,IACVoD,KAAM+oI,QAAQ/oI,KACdhK,OAAQjL,KAAKiL,OACbD,MAAO53B,KAAKooB,IAAIwE,KAAKgL,MAAQ53B,KAAKooB,IAAIwiJ,QAAQ/oI,KAAOjV,KAAKiV,QAE9D,MAEJ,IAAK,QACD8oI,eACIlsI,IAAK7R,KAAK6R,IACVoD,KAAMjV,KAAKiV,KACXhK,OAAQjL,KAAKiL,OACbD,MAAO53B,KAAKooB,IAAIwE,KAAKgL,MAAQ53B,KAAKooB,IAAIwE,KAAKiV,KAAOjV,KAAKgL,OAASgzI,QAAQ/oI,KAAO+oI,QAAQhzI,UAE3F,MAEJ,IAAK,MACD+yI,eACIlsI,IAAKmsI,QAAQnsI,IACboD,KAAMjV,KAAKiV,KACXhK,OAAQ73B,KAAKooB,IAAIwE,KAAKiL,OAAS73B,KAAKooB,IAAIwiJ,QAAQnsI,IAAM7R,KAAK6R,MAC3D7G,MAAOhL,KAAKgL,OAEhB,MAEJ,IAAK,SACD+yI,eACIlsI,IAAK7R,KAAK6R,IACVoD,KAAMjV,KAAKiV,KACXhK,OAAQ73B,KAAKooB,IAAIwE,KAAK6R,IAAMmsI,QAAQnsI,IAAMmsI,QAAQ/yI,QAClDD,MAAOhL,KAAKgL,OAEhB,MAEJ,IAAK,WACD+yI,eACIlsI,IAAK7R,KAAK6R,IACVoD,KAAM+oI,QAAQ/oI,KACdhK,OAAQjL,KAAKiL,OACbD,MAAOgzI,QAAQhzI,OAEnB,MAEJ,IAAK,WACD+yI,eACIlsI,IAAKmsI,QAAQnsI,IACboD,KAAMjV,KAAKiV,KACXhK,OAAQ+yI,QAAQnsI,IAChB7G,MAAOhL,KAAKgL,OAOpBviC,OAAO4T,OAAO0hK,eAAiB91I,GAAI4/B,MAAM5/B,KAAMoI,UAAWmkI,KAAKnkI,cAC/DxE,QAAQoxI,WAAWN,qBAAqBoB,eACxClyI,QAAQyxI,eAAe10K,IAAI4rK,KAAKlsK,QAAQsxK,kBACpCtsI,EAAGywI,cAAc9oI,KACjBliC,EAAGgrK,cAAclsI,IACjB5G,OAAQ8yI,cAAc9yI,OACtBD,MAAO+yI,cAAc/yI,QAI7B4yI,gBAAgB/xI,QAASwnI,aCtGzBuK,CAAgBruK,KAAMA,KAAKynE,ODUN,SAAhBknG,cAAiBL,eAC1BA,cAAc52I,WAAW5uB,QAAQ,SAAC2nB,MAC9B,IAAMw0I,KAAOx0I,KAAK7T,QAAQqoJ,OACtBA,gBAAgB9B,iBAChB8B,KAAKjrG,OAET20G,cAAcl+I,QCfdk+I,CAAc3uK,KAAKynE,OACZznE,QAbfjG,IAAA,OAAAN,MAAA,SAAAuR,KAgBUA,OAIF,OAHIA,QACAhL,KAAKynE,MAAQz8D,OAEVhL,KAAKynE,SApBpB1tE,IAAA,eAAAN,MAAA,SAAAs0K,aAuBkB3mK,OAIV,OAHIA,QACApH,KAAK8tK,cAAgB1mK,OAElBpH,KAAK8tK,iBA3BpB/zK,IAAA,YAAAN,MAAA,SAAAqnC,UA8Be15B,OAIP,OAHIA,QACApH,KAAKguK,iBAAmB5mK,OAErBpH,KAAKguK,oBAlCpBj0K,IAAA,WAAAN,MAAA,SAAAi0K,SAqCctmK,OAIN,OAHIA,QACApH,KAAKkuK,UAAY9mK,OAEdpH,KAAKkuK,aAzCpBn0K,IAAA,QAAAN,MAAA,SAAAi6B,MA4CWtsB,OAIH,OAHIA,QACApH,KAAKkjG,OAAS97F,OAEXpH,KAAKkjG,WAhDpB0qE,eAAA,6SCAqBgB,gDACjB,SAAAA,kBAAab,aAAc3kI,SAAUo9D,YAAaC,6KAAYooE,CAAA7uK,KAAA4uK,mBAC1D5uK,KAAK8tK,cAAgBC,aACrB/tK,KAAK8uK,kBAAoB1lI,SACzBppC,KAAK+uK,aAAevoE,YACpBxmG,KAAKgvK,YAAcvoE,WACnBzmG,KAAKivK,oBAAsB,4VZ0G5B,SAASC,0BAA2B5yI,SACvCA,QAAQ6yI,mBAAmB,IAAIr9J,KAC/BwqB,QAAQyxI,eAAejlK,QAAQ,SAACrP,OAC5B,GAAI6iC,QAAQ6yI,qBAAqBj9J,IAAIzY,MAAM4jD,UACvC/gB,QAAQ6yI,qBAAqB91K,IAAII,MAAM4jD,UAAUn3C,KAAKzM,WACnD,CACH,IAAM4uE,QACNA,KAAKniE,KAAKzM,OACV6iC,QAAQ6yI,qBAAqBh9J,IAAI1Y,MAAM4jD,SAAUgrB,SY7GrD6mG,CAA0BlvK,MAC1B,IAAMovK,gBAAkBpvK,KAAKivK,oBAAoB51K,IAAI,UAC/CytK,gBAAkB,IAAIhC,oBACxBuK,aAAevI,gBACnBA,gBAAgBlB,gBAAgB5lK,KAAK+uK,cACrCjI,gBAAgBjB,eAAe7lK,KAAKgvK,aAEpC,IAAIM,aAAe,KAUnB,OARAtvK,KAAK8uK,kBAAkBhmK,QAAQ,SAAC/P,MAC5Bu2K,aZwGL,SAASC,aAAcH,gBAAiBrL,eAC3C,IAAM9B,KAAOmN,gBAAgBlkJ,KAAK,SAAA44I,WAAS,OAAIA,UAAU/qK,SAAWgrK,gBACpE,OAAQ9B,OAAkB,IAAVA,KAAeA,KAAO,KY1GfsN,CAAaH,gBAAiBr2K,MAEzCs2K,aADS,SAATt2K,KACe8tK,eAAewI,aAAcC,cAActsH,OZ4KnE,SAASwsH,mBAAoB1I,gBAAiB2I,gBAMjD,IALA,IAAIJ,aAAevI,gBACbhsJ,KAAO20J,eAAe/tK,OACtB+Z,OAASX,KAAO20J,eAAe,GAAG/tK,OAAS,EAC3Cg6B,OAAS+zI,eAAeh9J,OAAO,SAACC,IAAKxR,KAAN,OAAewR,IAAMxR,IAAI,GAAGuuJ,kBAAkB/zH,QAAS,GAEnFljC,EAAI,EAAGA,EAAIijB,OAAQjjB,IAAK,CAC7B,IAAMk3K,kBAAoBl3K,IAAMijB,OAAS,EADZk0J,gBAIH9I,eAAewI,aAFNzI,2BAA2BlrI,OAClB+zI,eAAe,GAAGj3K,GAAGi3J,kBAAkBh0H,MAAO,QACPi0I,mBAA3Ep7J,MAJqBq7J,gBAIrBr7J,MAAO0uC,OAJc2sH,gBAId3sH,OACfqsH,aAAe/6J,MACf,IAAK,IAAI4G,EAAI,EAAGA,EAAIJ,KAAMI,IAAK,CAC3B,IAAM00J,YAAc10J,IAAOJ,KAAO,EAClCu0J,aAAexI,eAAewI,aAAcI,eAAev0J,GAAG1iB,GAAIo3K,aAAa,GAAM5sH,OAEzFqsH,aAAersH,OAEnB,OAAOqsH,aY5LoBG,CAAmBH,aAAcC,aAAaxL,aAG9DgD,kEAGG1/J,OAIV,OAHIA,QACApH,KAAK8tK,cAAgB1mK,OAElBpH,KAAK8tK,4EAGI1mK,OAIhB,OAHIA,QACApH,KAAKivK,oBAAsB7nK,OAExBpH,KAAKivK,2UC3Cb,IAAMY,qBAAb,WACI,SAAAA,qKAAeC,CAAA9vK,KAAA6vK,WACX7vK,KAAK8tK,cAAgB,IAAIh8J,IACzB9R,KAAK+vK,kBAAoB,KAHjC,0OAAAC,CAAAH,YAAA91K,IAAA,eAAAN,MAAA,SAAAw2K,aAMkBnM,WACV9jK,KAAK8tK,cAAc37J,IAAI2xJ,UAAU/qK,OAAQ+qK,cAPjD/pK,IAAA,mBAAAN,MAAA,SAAAy2K,iBAUsBvxJ,KAId,OAHIA,MACA3e,KAAK+vK,kBAAoBpxJ,KAEtB3e,KAAK+vK,qBAdpBh2K,IAAA,uBAAAN,MAAA,SAAA02K,qBAiB0BC,gBAAgB,IAAAl7J,MAAAlV,KAClCowK,eAAetnK,QAAQ,SAACm5J,MACpB/sJ,MAAK+6J,aAAahO,WAnB9BloK,IAAA,sBAAAN,MAAA,SAAA42K,sBAyBQ,OCzBD,SAASC,eAAgBh0I,QAASi0I,SACrC,IAAMC,OAASD,QAAQtL,OACnBsL,QAAQ9K,SAAW8K,QAAQ9K,QAAQ/jK,QACnC6uK,QAAQ9K,QAAQ38J,QAAQ,SAAA2nK,WAAS,OAAIH,eAAeh0I,QAASm0I,aAEnD,MAAVD,QAAsC,iBAAZA,aACiBjjK,IAAvC+uB,QAAQyxI,eAAe10K,IAAIm3K,SAC3BD,QAAQtL,KAAK3oI,QAAQyxI,eAAe10K,IAAIm3K,SDiB5CF,CAAetwK,KAAMA,KAAK+vK,mBACnB/vK,KAAKkwK,sBAzBpBn2K,IAAA,eAAAN,MAAA,SAAAs0K,eA6BQ,OAAO/tK,KAAK8tK,iBA7BpB/zK,IAAA,oBAAAN,MAAA,SAAAi3K,oBAgCQ1wK,KAAK8tK,cAAczmI,YAhC3BwoI,UAAA,ySEYqBc,wCACjB,SAAAA,cAAaljG,mKAAMmjG,CAAA5wK,KAAA2wK,eACf3wK,KAAKsjK,UAAY71F,KAAKo2F,SACtB7jK,KAAKguK,iBAAmBvgG,KAAK3sC,UAC7B9gC,KAAK6wK,YACDp1I,MAAOgyC,KAAKhyC,OAASipI,cACrBhpI,OAAQ+xC,KAAK/xC,QAAUipI,gBAG3B3kK,KAAK8wK,cAAgBrjG,KAAKsjG,cAAgB,OAC1C/wK,KAAK+vK,kBAAoB,KACzB/vK,KAAKgxK,WAAa,IAAInB,qBACtB7vK,KAAKixK,gBAAkB,KACvBjxK,KAAK8uK,qBACL9uK,KAAK2gE,KAAO,KACZ3gE,KAAKkxK,YAAc,qTAGZ9pK,OAIP,OAHIA,QACApH,KAAKgxK,WAAa5pK,OAEfpH,KAAKgxK,qEAGE5pK,OAId,OAHIA,QACApH,KAAK8uK,kBAAoB1nK,OAEtBpH,KAAK8uK,8DAGL1nK,OAIP,OAHIA,OACAlO,OAAO4T,OAAO9M,KAAK6wK,WAAYzpK,OAE5BpH,KAAK6wK,6DAGF/M,WACV9jK,KAAKgxK,WAAWf,aAAanM,6EAGXsM,gBAClBpwK,KAAKgxK,WAAWb,qBAAqBC,4DAG9B3/I,MACHzwB,KAAKmxK,KACLnxK,KAAKmxK,IAAIC,UAAU3gJ,oDAQf5jB,QACR7M,KAAK2gE,KAAK0wG,WAAWxkK,QACrB7M,KAAK+vK,kBAAoB/vK,KAAK2gE,KAAK/jD,MACnC5c,KAAKsxK,oDAKDhH,MAAME,aAAaxqK,KAAKsjK,WACxBtjK,KAAKsjK,UAAUiO,QAAUvxK,KAEzBk4B,SAASgB,eAAel5B,KAAKsjK,WAAWiO,QAAUvxK,KAGtDA,KAAK+vK,kBDvEN,SAASyB,aAAcl1I,SAAS,IAAAm1I,mBACTn1I,QAAQ9lB,YAA1BklB,OAD2B+1I,mBAC3B/1I,OAAQD,MADmBg2I,mBACnBh2I,MAMhB,OALmB,IAAImzI,qCAAkBtyI,QAAQo1I,YAAY3D,eACnBzxI,QAAQq1I,mBACRj2I,OACAD,OACVm2I,sBCiEHJ,CAAaxxK,MACtCA,KAAKgxK,WAAWd,iBAAiBlwK,KAAK+vK,mBACtC/vK,KAAK+vK,kBAAoB/vK,KAAKgxK,WAAWX,sBACzCrwK,KAAKuxK,QAAU,IAAIjJ,0BACf7sI,MAAOz7B,KAAK6wK,WAAWp1I,MACvBC,OAAQ17B,KAAK6wK,WAAWn1I,QAExB17B,KAAK+vK,mBACT/vK,KAAK2gE,KAAO3gE,KAAKuxK,QAAQM,YAAYlxG,OACrC3gE,KAAKuxK,QAAQO,YACb9xK,KAAKixK,gBAAkB,IAAIrD,gCACvBjtG,KAAM3gE,KAAK2gE,KACXotG,aAAc/tK,KAAKgxK,WAAWjD,eAC9BE,gBAAiBjuK,KAAKguK,kBACvBhuK,KAAK8wK,cAAe9wK,KAAKsjK,WAExBtjK,KAAKkxK,YACLlxK,KAAK2gE,KAAKjoC,GAAG14B,KAAKkxK,aAElBlxK,KAAKkxK,YAAclxK,KAAK2gE,KAAKjoC,KAGjC14B,KAAKixK,gBAAgBj3G,6DAIrB,OAAOh6D,KAAKkxK,0EAOIa,kBAAkB,IAAA78J,MAAAlV,KAgBlC,OAfAA,KAAK8uK,kBAAkBptK,OAAS,EAChC1B,KAAKgxK,WAAWN,oBAChBqB,iBAAiBjpK,QAAQ,SAAC6vB,WAClBA,YACAzjB,MAAK45J,kBAAkB5oK,KAAKyyB,UAAU5/B,QACtCmc,MAAK+6J,aAAat3I,WACO,SAArBA,UAAU5/B,QACV4/B,UAAUmrI,UAAUh7J,QAAQ,SAACkpK,cACzBA,aAAalpK,QAAQ,SAACmpK,OAClB/8J,MAAK+6J,aAAagC,cAM/BjyK,uDAGG+jK,eACV,OAAO/jK,KAAKgxK,WAAWjD,eAAe10K,IAAI0qK,yDAGpCrwI,OAIN,OAHIA,QACA1zB,KAAKsjK,UAAY5vI,OAEd1zB,KAAKsjK,glCClIb,IAyIM4O,2BAAsB,SAAtBA,oBAAuB51I,SAChC,IAAM3zB,MAAQ2zB,QAAQy2F,OAEhBo/C,WAAaj5K,OAAO4M,KAAKw2B,QAAQ81I,aACjCj+I,SAAKzY,OAAA22J,gCAAOF,YAAPE,gCAAsBn5K,OAAO4M,KAAK88J,iBACvC0P,kBAAiB52J,OAAA22J,gCAAIF,YAAJE,gCAAmBn5K,OAAO4M,KAAK88J,iBAAgB36J,IAAI,SAAAisB,MAAI,SAAAxY,OACvEswF,0BAAiBj7C,uBADsD,KAAAr1C,OAC5BwY,QAClDvrB,MAAMipH,uBAAuB0gD,eAAgB,WAAe,QAAAhqG,KAAAljE,UAAA1D,OAAXkgB,OAAW,IAAA/Y,MAAAy/D,MAAAC,KAAA,EAAAA,KAAAD,KAAAC,OAAX3mD,OAAW2mD,MAAAnjE,UAAAmjE,OA5FxC,SAAlBgqG,gBAAmBp+I,MAAOvS,QAC5B,IAAI3B,QAAU,SAAAA,UAAA,OAAM,GACZkU,MAAMtV,MAAM,SAAC2zJ,OAAQh6K,GACzB,OAAQg6K,QACR,I1BlEY,O0BmEZ,I1BlEe,U0BmEf,I1B9Dc,S0B+DVvyJ,QAAUyuD,qBAAQ,SAClB,MAEJ,I1BpEa,Q0BqEb,I1BpEY,O0BqEZ,I1BvEa,Q0BwEb,I1BzEY,O0B0EZ,I1B5Dc,S0B6DVzuD,QAAUyuD,qBAAQ,UAClB,MACJ,QACIzuD,QAAU,SAAAA,UAAA,OAAM,GAGpB,IAAM0uD,OAAS/sD,OAAOppB,GAAG,GACnBo2E,OAAShtD,OAAOppB,GAAG,GAEzB,OAAOynB,QAAQ0uD,OAAQC,UAqEL2jG,CAAgBp+I,MAAOvS,SAjE3B,SAAhB6wJ,cAAiBt+I,MAAOvS,QAAR,OAAmBuS,MAAMtV,MAAM,SAAC2zJ,OAAQh6K,GAC1D,IAAM0I,IAAM0gB,OAAOppB,GAAG,GACtB,OAAQg6K,QACR,I1B7FgB,O0B8FhB,I1B7FmB,U0B8Ff,OAAe,OAARtxK,IAEX,I1B/FgB,O0BgGZ,OAAOA,MAAQA,IAAIwlG,UAEvB,QACI,OAAO,MAuDO+rE,CAAct+I,MAAOvS,SAGhB0a,QAAQ5I,WAtHN,SAAhBg/I,cAAiBp2I,SAC1B,IAAMmjH,iBAAmBnjH,QAAQ5gC,eAAe+jJ,iBAChDA,iBAAiBxG,QAASztD,OAAQlvD,QAASjZ,OAAQ,iBACnD,IAAM49I,YAAc3kI,QAAQ8tD,cAAc62E,YAEpCkR,WAAa71I,QAAQ81I,YAC3B,IAAK,IAAMr4K,OAAOo4K,WAAY,CAC1B,IAAM14K,MAAQ6iC,QAAQviC,OACR,OAAVN,OACAwnK,YAAYlnK,MAAQknK,YAAYlnK,KAAKN,OATP,IAY9BgrK,cAAkBnoI,QAAQzvB,SAA1B43J,cAERxD,YAAYnmE,YAAYtlB,eAAeivF,gBACvCxD,YAAYnR,iBACZxzH,QAAQq2I,gBACRlzB,iBAAiBxG,QAASztD,OAAQlvD,QAASjZ,OAAQ,gBACnDo8H,iBAAiBxG,QAASztD,OAAQlvD,QAASjZ,OAAQ,YAqG3CqvJ,CAAcp2I,SACdA,QAAQioE,UAvDc,SAArBquE,mBAAsBt2I,SAC/B,IAAMu2I,aAAev2I,QAAQw2I,SAASC,WAAWC,iBAAiB5/B,SAAS7gF,OAAO,OAC5E0gH,YACNJ,aAAa/pK,QAAQ,SAACoqK,SAClBA,QAAQpqK,QAAQ,SAACs5D,MACb6wG,SAAS/sK,KAAKk8D,KAAKrjD,UAAUlR,YAGrC,IAAM4xI,iBAAmBnjH,QAAQ62I,YAC7BF,SAASvxK,OACTupF,QAAQ+uB,IAAIi5D,UAAU5nF,KAAK,WAEvBo0D,iBAAiBxG,QAASztD,OAAQlvD,QAASjZ,OAAQ,UACnD,IAAM+vJ,oBAENP,aAAa/pK,QAAQ,SAACoqK,SAClBA,QAAQpqK,QAAQ,SAACs5D,MACbA,KAAKrjD,UAAUu8E,SAASxyF,QAAQ,SAACyyF,OAC7B63E,iBAAiBltK,KAAKq1F,MAAM83E,wBAKvC/2I,QAAQ+vG,QAAS/vG,QAAQgwG,SAASxjI,QAAQ,SAACwqK,UACxCA,QAAUA,aACFxqK,QAAQ,SAAC8uF,MACbA,KAAK9uF,QAAQ,SAAC88I,UACVwtB,iBAAiBltK,KAAK0/I,SAASytB,uBAK3CpoF,QAAQ+uB,IAAIo5D,kBAAkB/nF,KAAK,WAC/Bo0D,iBAAiBxG,QAASztD,OAAQlvD,QAASjZ,OAAQ,qBAI3Do8H,iBAAiBxG,QAASztD,OAAQlvD,QAASjZ,OAAQ,iBAoBnDuvJ,CAAmBt2I,WACpB,IAGMi3I,uBAAyB,SAAzBA,uBAA0B/9E,UACnC,IACMyrE,YADSzrE,SAASl5D,QACG8tD,cAAc62E,YACzC,GAAIA,YAAa,CACb,IAAMztB,YAAcytB,YAAYC,iBAAiBznK,OAEjD+5K,EAD0Bh+E,SAASi+E,oBACjBjgC,YAAah+C,UAC/B,IAAM6sE,uBAAyB7sE,SAASk+E,wBAClCriF,WAAagxE,uBAAuBhxE,WACpCvD,YAAcu0E,uBAAuBv0E,YAC3C0lD,YAAYrsG,KAAK,SAACi7B,MACd,IAAMuxG,aAAevxG,KAAKrjD,UAAUy2E,WACpC,IAAK,IAAMz7F,OAAOs3F,WACdsiF,aAAaC,kCAAkC75K,IAAKs3F,WAAWt3F,MAEnE,IAAK,IAAMA,SAAO+zF,YACd6lF,aAAaE,mCAAmC95K,MAAK+zF,YAAY/zF,YAoDpE+5K,2BAAsB,SAAtBA,sBAIT,OAHsB,IAAInD,8BACtB7vI,UAAW,0BC9NJizI,aACX/oK,MACIvR,MAAO,KACPyjB,MACIixD,UAAW,SAAAA,UAAAr1E,GAAC,OAAIA,aAAawF,uBAGrCm9B,OACIhiC,MAAO,EACPyjB,MACIgxD,aAAcZ,aACda,UAAW3lE,OAAOwrK,YAG1Bt4I,QACIjiC,MAAO,EACPyjB,MACIgxD,aAAcZ,aACda,UAAW3lE,OAAOwrK,YAG1BC,cACIx6K,MAAO,GACPyjB,MACIgxD,aAAcZ,aACda,UAAW3lE,OAAOwrK,YAG1BE,eACIz6K,MAAO,GACPyjB,MACIgxD,aAAcZ,aACda,UAAW3lE,OAAOwrK,YAG1BnnK,QACIpT,MAAO,KACPyjB,MACIixD,UAAW,cACXC,aAAc,SACdF,aAAc,SAAAA,aAACrhE,OAAQuqG,WAEnB,IAAM+8D,QAAUllG,kBAA8B,OAAXpiE,UAAuBuqG,WACpD1xF,UAAYupD,eAAeklG,QAAS7uD,6BACtC6M,QAAUljD,eAAevpD,UAAW7Y,QAGxC,OAFAslH,QD1CkB,SAArBiiD,mBAAsBvnK,QAE/B,OADAA,OAAOo3J,UAAUC,UAAYrgK,KAAKsQ,IAAI,GAAItQ,KAAKwQ,IAAI,GAAIxH,OAAOo3J,UAAUC,YACjEr3J,OCwCeunK,CAAmBjiD,aC1DhCkiD,YACT/xI,IAAK,EACLiwB,OAAQ,EACRf,OAAQ,GAGC8iH,kBACTluH,EAAG,MACHumF,EAAG,SACH4nC,EAAG,UAGMC,qBACTpuH,EAAG,OACHumF,EAAG,SACH4nC,EAAG,SAiNME,uBAAS,SAgBTC,SAAW,UACXC,YAAc,aAGdC,yBAAW,WACXC,2BAAa,kXC7OLC,wCAYjB,SAAAA,cAAa7+I,WAAYqpE,YAAazyF,OAAQnR,2KAAcq5K,CAAA/0K,KAAA80K,eACxD90K,KAAKqwF,WACLrwF,KAAK8yH,gBACL9yH,KAAKg1K,aAGLh1K,KAAKm4G,cAAgBz8G,aAErBsE,KAAKs/F,YAAYA,aACjBt/F,KAAKi2B,WAAWA,YAChBj2B,KAAK6M,OAAOA,0TAQZ,OACIyyF,YAAat/F,KAAKs/F,cAClBzyF,OAAQ7M,KAAK6M,SACbumI,SAAUpzI,KAAKozI,kDASfvmI,SACJ,OAAIA,SACA7M,KAAKqwF,QAAUphB,eAAejvE,KAAKqwF,YAAexjF,SAClD7M,KAAKqwF,QAAQ4gE,OAAOx1H,MAAQ53B,KAAKwQ,IAAI,EAAGrU,KAAKqwF,QAAQ4gE,OAAOx1H,OACrDz7B,MAEJA,KAAKqwF,wDAQHiP,cACT,OAAIA,cACAt/F,KAAK8yH,aAAe7jD,eAAejvE,KAAK8yH,iBAAoBxzB,cAErDt/F,MAEJA,KAAK8yH,uDAQNsgB,WACN,OAAIA,WACApzI,KAAKg1K,UAAYnsG,oBDmJV,MAIG,SADA,UCtJiDuqE,WAEpDpzI,MAEJA,KAAKg1K,sDAQL94H,QACP,OAAIA,QACAl8C,KAAKssJ,WAAapwG,OACXl8C,MAEJA,KAAKssJ,6DAQFpwG,QACV,OAAIA,QACAl8C,KAAKusJ,cAAgBrwG,OACdl8C,MAEJA,KAAKusJ,gEAQFrwG,QACV,OAAIA,QACAl8C,KAAKi1K,cAAgB/4H,OACdl8C,MAEJA,KAAKi1K,4DAQJh/I,aACR,OAAIA,aACAj2B,KAAKk1K,YAAcj/I,YAEZj2B,MAEJA,KAAKk1K,yNC1Ib,IAAMC,uBAAqBC,oCAAAC,yBFgCZ,UEhCYD,oCAAAE,sBF6Kb,QE3KO,SAFMF,oCAAAE,mBFkLb,QE/KO,WAHMF,oCAAAE,mBFuLb,QEnLO,GAJMF,oCAAAE,mBF4LV,YEvLO,GALGF,oCAAAE,mBFiMX,UE3LO,GANIA,qBAAAF,oCAAAC,sBF0PR,aElPG,UARKD,oCAAAC,sBF2PZ,SElPG,IATSD,oCAAAC,sBF2MP,eEjMKv6J,QAAUjB,aAVRu7J,oCAAAC,sBFsMN,gBE3LKv6J,QAAUjB,aAXTu7J,oCAAAC,sBFgNR,aEpMKv6J,QAAUjB,aAZPu7J,oCAAAC,sBF+CD,kBElCG,GAbFD,oCAAAC,sBFoDE,qBEtCG,GAdLD,oCAAAC,sBF0CJ,gBE3BG,GAfCD,oCAAAC,sBFqCP,aErBG,GAhBIA,uBAuBrBE,sBAAoBH,oCAAAI,yBFDP,QEEG,KADIJ,oCAAAI,sBFIN,SEFG,KAFGJ,oCAAAI,sBF4IP,YEzIG,KAHIJ,oCAAAI,sBFiJN,aE7IG,KAJGA,spBCvBjC,IAAM9tI,WAAOqrC,QAAQrrC,KA2Bf+tI,WAAa,SAAbA,WAAcj9K,EAAGk9K,MACnB,IAAIlhK,MAAQ,EACZ,IAAK,IAAMupB,KAAK23I,KACZ,GAAIl9K,EAAIk9K,KAAK33I,GAAI,CACbvpB,MAAQupB,EACR,MAGR,OAAOvpB,OAUEmhK,gBAAkB,SAAlBA,gBAAmBz5H,OAAQrvC,QAAW,IACvC+oK,aAAiB/oK,OAAjB+oK,aACJC,aAAe35H,OAAO,GAAGx6C,OAAS,EAAIw6C,OAAO,GAAKA,OAAO,GAgB7D,OAfI05H,cACAC,aAAe35H,OAAO,GAAGx6C,OAAS,EAAnBo0K,wBAA2B55H,OAAO,OACjD25H,aAAe35H,OAAO,GAAGx6C,OAAS,KAAnBga,OAAAo6J,wBAA2BD,cAA3BC,wBAA4C55H,OAAO,KAAM25H,cAExEA,aAAeA,aAAa5tK,IAAI,SAACmT,IAAK+wH,UAClC,IAAI4pC,WAOJ,OANI75H,OAAO,GAAGx6C,OAAS,IACnBq0K,QAAUD,wBAAI55H,OAAO,GAAGiwF,YAExBjwF,OAAO,GAAGx6C,OAAS,IACnBq0K,WAAOr6J,OAAAo6J,wBAAOC,SAAPD,wBAAmB55H,OAAO,GAAGiwF,aAEjC4pC,UAGRF,cAyKEG,0BAAsB,SAAtBA,sBAA0D,IAAnChsK,KAAmC5E,UAAA1D,OAAA,QAAA6L,IAAAnI,UAAA,GAAAA,UAAA,MAAxByH,OAAwBzH,UAAA1D,OAAA,EAAA0D,UAAA,QAAAmI,EAAhB0oK,YAAgB7wK,UAAA1D,OAAA,EAAA0D,UAAA,QAAAmI,EAAA2oK,qBACpBrpK,OAAvC+oK,+BAD2D,IAAAM,2CACrCC,aAAiBtpK,OAAjBspK,aADqCC,gBAjOhD,SAAjBC,eAAkBT,cACpB,OAAIA,cAEIU,aAAc7B,uBACd8B,cH4KS,UGxKbD,aHwKa,QGvKbC,cAAe9B,wBA0NqB4B,CAAeT,cAA/CU,aAF2DF,gBAE3DE,aAAcC,cAF6CH,gBAE7CG,cACd73J,OAAW1U,KAAX0U,OACF83J,YA/DoB,SAAjBC,eAAkBb,aAAcO,cACzC,OAAKP,cAODl6I,OAAQ,EACRD,MAAO06I,aAAa16I,QANhBC,OAAQy6I,aAAaz6I,OACrBD,MAAO,GA2DKg7I,CAAeb,aAAcO,cACjD,GAAIz3J,OAAO,GAAG3kB,IAAK,KAAA28K,cACTphE,cAAYqhE,qBAAAD,iBAAMJ,aAAe,GAArBK,qBAAAD,cAAyBH,cAAgB,GAAzCG,eAYlB,OAVAh4J,OAAO5V,QAAQ,SAAC8tK,WAEZ,IAAMpgG,MAAQw/F,oBAAoBY,UAAW/pK,OAAQopK,aAErD3gE,aAAaghE,cAAgBzyK,KAAKwQ,IAAIihG,aAAaghE,cAAe9/F,MAAM8/F,cACpEE,YAAYF,eAEhBhhE,aAAaihE,iBAAmB//F,MAAM+/F,iBAE1CvsK,KAAKwsE,MAAQ8+B,aACNA,aAEX,OAzD2B,SAAlBm6C,gBAAmBzlJ,KAAM+e,SAAUytJ,aAAiC,IAAAliJ,KAApBuiJ,WAAoBzxK,UAAA1D,OAAA,QAAA6L,IAAAnI,UAAA,GAAAA,UAAA,MACrEkxK,aAAgCvtJ,SAAhCutJ,aAAcC,cAAkBxtJ,SAAlBwtJ,cAClBO,kBAAoB,EACpBC,mBAAqB,EAmBzB,OAlBA/sK,KAAK0U,OAAO5V,QAAQ,SAACkuK,YAAe,IAAAC,YAC5BC,SAAW,EACXC,SAAW,EACfH,WAAWluK,QAAQ,SAACshJ,YAAarV,UAC7BqV,YAAYyB,oBACZ,IAAMr1E,MAAQ4zE,YAAYqF,kBAE1B0nB,SAAWtzK,KAAKwQ,IAAI8iK,UAAW3gG,MAAM+/F,eAAgBC,YAAYD,gBACjEM,WAAW9hC,UAAYlxI,KAAKwQ,IAAIwiK,WAAW9hC,WAAa,EAAGv+D,MAAM8/F,eACjEY,WAAaL,WAAW9hC,YAE5BgiC,oBAAsBI,SACtBL,kBAAoBjzK,KAAKwQ,IAAIyiK,kBAAmBI,UAChDltK,KAAKwsE,OAALmgG,qBAAAM,eACKV,cAAgB1yK,KAAKmoB,KAAK+qJ,qBAD/BJ,qBAAAM,YAEKX,aAAezyK,KAAKmoB,KAAK8qJ,oBAF9BG,eAKJN,qBAAAriJ,QACKiiJ,cAAgBQ,oBADrBJ,qBAAAriJ,KAEKgiJ,aAAeQ,mBAFpBxiJ,KAmCOm7H,CAAgBzlJ,MAAQssK,0BAAcC,6BAAiBC,YAAaP,cAoDlEmB,sBAAwB,SAAxBA,sBAAyBptK,KAAM4rK,cACxC,GAAI5rK,KAAK0U,OAAO,GAAG3kB,IAAK,CACpB,IAAMgX,OAaN,OAZA/G,KAAK0U,OAAO5V,QAAQ,SAACuZ,OACZuzJ,aAGiBwB,sBAAsB/0J,MAAOuzJ,cACrC9sK,QAAQ,SAACpO,EAAGlC,GAAM,IAAA6+K,OACxBtmK,IAAIvY,GAAKuY,IAAIvY,QACb6+K,OAAAtmK,IAAIvY,IAAG0N,KAAPqB,MAAA8vK,OAAAvB,wBAAep7K,MALnBqW,IAAI7K,KAAJqB,MAAAwJ,IAAG+kK,wBAASsB,sBAAsB/0J,MAAOuzJ,kBASjD5rK,KAAKkyC,OAASnrC,IACPA,IAOX,OAFI/G,KAAKkyC,OAHJ05H,aAGa5rK,KAAK0U,OAAO,GAAGzW,IAAI,SAAC6nE,IAAKilE,UAAN,OAAmB/qI,KAAK0U,OAAOzW,IAAI,SAAAmT,KAAG,OAAIA,IAAI25H,cAFjE/qI,KAAK0U,OAIhB1U,KAAKkyC,QAwIHo7H,kBAAoB,SAApBA,kBAAqBvmK,IAAKwmK,IAAK7qK,KAAX,OAAmBqE,IAAIoK,MAAMo8J,KAAM7qK,MCldvDmuF,2BACThuF,QACIqhE,aAAc,SAAAA,aAAC5xC,QAAS7iC,OAAV,OAAoBw1E,eAAe3yC,QAAQ+zD,YAAe52F,SAE5Ew8K,eACA5jE,kBACAiD,iBCHSna,4CACTq8E,gBACAx7E,YAAa,OACby1C,qBAAqB,EACrB0kC,cACIz6I,OAAQ,IACRD,MAAO,IACPw1H,OAAQ,GAEZ2kB,cAAc,EACdxnC,ML0OmB,UKzOnBqpC,0TCDiBC,sCAQjB,SAAAA,aAAax7H,QAAqB,IAAbrvC,OAAazH,UAAA1D,OAAA,QAAA6L,IAAAnI,UAAA,GAAAA,UAAA,kKAAAuyK,CAAA33K,KAAA03K,cAE9B13K,KAAK43K,cAAgB,EACrB53K,KAAK63K,eAAiB37H,OAAO,OAC7Bl8C,KAAK83K,iBAAmB57H,OAAO,OAC/Bl8C,KAAK+3K,gBACL/3K,KAAKg4K,mBAGLzpG,sBAAsBvuE,KAAM66F,2BAC5B,IAAM0d,OAASr/G,OAAO4T,UAAW9M,KAAK4lB,YAAYu1E,iBAClDn7F,KAAK6M,OAAOoiE,eAAespC,OAAQ1rG,SAEnC7M,KAAKi4K,cAAgBtC,iBAAiBz5H,OAAO,OAAUA,OAAO,QAAWl8C,KAAK6M,4UAU9E,MAAM,IAAI6C,MAAMq/D,UAAUC,sFAI1B,MAAM,IAAIt/D,MAAMq/D,UAAUC,4EAU1B,MAAM,IAAIt/D,MAAMq/D,UAAUC,0FAI1B,MAAM,IAAIt/D,MAAMq/D,UAAUC,wEAY1B,MAAM,IAAIt/D,MAAMq/D,UAAUC,gFAa1B,MAAM,IAAIt/D,MAAMq/D,UAAUC,wFAU1B,MAAM,IAAIt/D,MAAMq/D,UAAUC,8EAW1B,MAAM,IAAIt/D,MAAMq/D,UAAUC,sEAW1B,OAAI5pE,UAAO1D,OACA1B,KAEJA,KAAK63K,yEAIZ,OAAIzyK,UAAO1D,OACA1B,KAEJA,KAAK83K,qDAIZ,OAAI1yK,UAAO1D,OACA1B,KAEJA,KAAKk4K,sDAOF,IAAAC,aHnEQ,SAAbxP,WAAcrsI,SACvB,IAAI87I,cACAC,aAAe,EACfjqC,MHwKe,UGvKbrjB,OAASrjF,aACT5hC,QACAwyK,aAAeh8I,QAAQ27I,cACvBM,cAAgBj8I,QAAQi8I,gBACxBC,gBAAkBl8I,QAAQk8I,kBARG5iE,gBASCt5E,QAAQzvB,SAApC+oK,aAT2BhgE,gBAS3BggE,aAAc6C,UATa7iE,gBASb6iE,UAEtB,GAAK7C,aAsCE,CAQH,GANIxnC,MADyB,IAAzBmqC,cAAc72K,OHyHH,UGvHuB,IAA3B82K,gBAAgB92K,OHwHV,YGrHL62K,cAAc72K,QAAU82K,gBAAgB92K,OHoHrC,UACE,YGnHb62K,cAAc72K,OAAS,EAAG,CAC1B,IAAK,IAAIlJ,IAAI,EAAGA,IAAI+/K,cAAc72K,OAAS,EAAGlJ,MAC1CsN,KAAKI,KAAK1N,KAGdsN,KAAKI,KAAKqyK,cAAc72K,OAAS,GH8GpB,cG5GT0sI,QACAiqC,aAAeE,cAAc72K,OAAS,GAG9C,GAAI82K,gBAAgB92K,OAAS,EAAG,CAE5B,IADA,IAAMg3K,oBAAsBH,cAAc72K,OACjClJ,IAAIggL,gBAAgB92K,OAAS,EAAGlJ,IAAI,EAAGA,MAC5CsN,KAAKI,KAAK1N,IAAIkgL,qBAGlB5yK,KAAKI,KAAKwyK,qBHiGC,YG/FPtqC,QACAiqC,aAAeK,qBAUvB,IAAIC,UAPJ7yK,KAAKgD,QAAQ,SAAC/O,KACV,IAAI2zI,SAAW,EACf,OAAO3iB,OAAOhxH,IAAI,SAACjB,GAEf,OADA40I,UACA,GAAAhyH,OAAU5iB,EAAEiB,KAAKglB,UAAjB,KAAArD,OAA8B+5J,WAAW/nC,QAAS+qC,gBAI1DE,UAAYL,aAAa,GAAGrwK,IAAI,SAAC6nE,IAAKilE,UAAN,OAAmBujC,aAAarwK,IAAI,SAAAmT,KAAG,OAAIA,IAAI25H,cAC/EqjC,WAAartD,OAAO91G,QAAQ0jK,eA9Eb,CAQf,GANIvqC,MADyB,IAAzBmqC,cAAc72K,OH+JH,UG7JuB,IAA3B82K,gBAAgB92K,OH8JV,YG3JL62K,cAAc72K,QAAU82K,gBAAgB92K,OH0JrC,UACE,YGzJb62K,cAAc72K,OAAS,EAAG,CAC1B,IAAK,IAAIlJ,EAAI,EAAGA,EAAI+/K,cAAc,GAAG72K,OAAS,EAAGlJ,IAC7CsN,KAAKI,KAAK1N,GAEdsN,KAAKI,KAAKqyK,cAAc,GAAG72K,OAAS,GHqJvB,cGpJT0sI,OAAkD,IAA3BoqC,gBAAgB92K,SACvC22K,aAAeE,cAAc,GAAG72K,OAAS,GAGjD,GAAI82K,gBAAgB92K,OAAS,EAAG,CAE5B,IADA,IAAMk3K,UAAYL,cAAc72K,OAAS,EAAI62K,cAAc,GAAG72K,OAAS,EAC9DlJ,GAAIggL,gBAAgB,GAAG92K,OAAS,EAAGlJ,GAAI,EAAGA,KAC/CsN,KAAKI,KAAK1N,GAAIogL,WAElB9yK,KAAKI,KAAK0yK,WH0IC,YGxIPxqC,QACAiqC,aAAeO,gBAGnBP,aAAeE,cAAc72K,OAAS,EAAI62K,cAAc,GAAG72K,OAAS,EAAI,EAE5EoE,KAAKgD,QAAQ,SAAC/O,KACV,IAAI2zI,SAAW,EACf,OAAO3iB,OAAOhxH,IAAI,SAACjB,GAEf,OADA40I,UACA,GAAAhyH,OAAU5iB,EAAEiB,KAAKglB,UAAjB,KAAArD,OAA8B+5J,WAAW/nC,QAAS+qC,gBAG1DL,WAAartD,OAAO91G,QAAQqjK,cA2ChC,OAAS33G,KAAMy3G,WAAYC,2BGvBQ1P,CAAW3oK,MAAlC2gE,KADEw3G,aACFx3G,KAAM03G,aADJF,aACIE,aAEd,OADAr4K,KAAK43K,cAAgBS,aACd13G,+DAUP,OAAO3gE,KAAKs1G,2EAUG75E,MAAOC,QACtB17B,KAAKqyG,gBAAiB52E,YAAOC,gBAC7B,IAAMilC,KAAO3gE,KAAK2gE,OACZk4G,eAAiB74K,KAAK84K,oBAAoBrE,uBAAQ9zG,MAClDo4G,cAAgB/4K,KAAK84K,oBNiBd,QMjByCn4G,MAChD/4B,MAAQ5nC,KAAKg5K,eAAeD,cAAeF,gBAIjD,OAFA74K,KAAKi5K,eAAiBj5K,KAAKk5K,qBAAqBtxI,OAChD5nC,KAAKm5K,iBAAmBn5K,KAAKo5K,mBAAmB39I,MAAOC,QAChD17B,qEAYU1E,KAAM88K,YAAsC,IAAAljK,MAAAlV,KAA1B4nC,MAA0BxiC,UAAA1D,OAAA,QAAA6L,IAAAnI,UAAA,GAAAA,UAAA,GAAlB,EAAG2jB,SAAe3jB,UAAA1D,OAAA,QAAA6L,IAAAnI,UAAA,GAAAA,UAAA,MAE7D,GADA2jB,SAAS6e,OAAS/jC,KAAKwQ,IAAI0U,SAAS6e,QAAU,EAAGwwI,WAAW5hG,MAAMl7E,OAC9D88K,WAAW15J,OAAQ,CACnB,IAAM26J,WAAazxI,MAAQ,EAC3BwwI,WAAW15J,OAAO5V,QAAQ,SAACuZ,OACnBA,MAAMm0D,QACNztD,SAAW7T,MAAK4jK,oBAAoBx9K,KAAM+mB,MAAOg3J,WAAYtwJ,aAIzE,OAAOA,uEAUP,OAAO/oB,KAAKm5K,mFAUZ,OAAOn5K,KAAKi5K,iFAUMrxI,OAClB,IAAM72B,OAEN,OHsP6B,SAAxBuoK,wBAAiE,IAAxCvoK,IAAwC3L,UAAA1D,OAAA,QAAA6L,IAAAnI,UAAA,GAAAA,UAAA,MAA9BwiC,MAA8BxiC,UAAA1D,OAAA,EAAA0D,UAAA,QAAAmI,EAAvBgsK,WAAuBn0K,UAAA1D,OAAA,EAAA0D,UAAA,QAAAmI,EAAXulK,OAAW1tK,UAAA1D,OAAA,EAAA0D,UAAA,QAAAmI,EACpEisK,aAAe1G,OAAO2G,cAGxB7D,aAFW9C,OAAOjmK,SAElB+oK,aAGAj1G,KAEA44G,WAFA54G,KACA23G,aACAiB,WADAjB,aAGJ,GAAc,IAAV1wI,MAAa,CACb,IAAM8xI,aAnJa,SAAdC,YAAez9H,OAAQ05H,aAAc4D,cAC9C,IAAMjB,iBACAC,mBAsBN,OArBI5C,aACA15H,OAAOpzC,QAAQ,SAACsS,IAAK+wH,UACbA,UAAYqtC,aACZhB,gBAAgBtyK,KAAKkV,KAErBm9J,cAAcryK,KAAKkV,OAI3B8gC,OAAOpzC,QAAQ,SAACsS,IAAK+wH,UACjB/wH,IAAItS,QAAQ,SAAC2S,OAAQ2wH,aACbA,aAAeotC,cACfhB,gBAAgBrsC,UAAYqsC,gBAAgBrsC,cAC5CqsC,gBAAgBrsC,UAAUjmI,KAAKuV,UAE/B88J,cAAcpsC,UAAYosC,cAAcpsC,cACxCosC,cAAcpsC,UAAUjmI,KAAKuV,cAKrC88J,cAAeC,iBA2HEmB,CAAYh5G,KAAKzkB,OAAQ05H,aAAc4D,cAO5D,OANAzoK,IAAI7K,MACAg2C,OAAQykB,KAAKzkB,OACbq8H,cAAemB,aAAa,GAC5BlB,gBAAiBkB,aAAa,GAC9BljG,MAAO7V,KAAK6V,QAETzlE,IAEX,IAAM6oK,UAAYhyI,MAAQ,EAO1B,OANA+4B,KAAKjiD,OAAO5V,QAAQ,SAACpO,GACjB4+K,sBAAsBvoK,IAAK6oK,WACvBj5G,KAAMjmE,EACN49K,2BACDxF,UAEA/hK,IGnRHuoK,CAAsBvoK,IAAK62B,MAAO5nC,KAAK65K,mBAAoB75K,MACpD+Q,4DA1FP,OAAOoqF,sxCC7HM2+E,mDAQjB,SAAAA,gBAAa59H,QAAqB,IAAAhnC,MAAbrI,OAAazH,UAAA1D,OAAA,QAAA6L,IAAAnI,UAAA,GAAAA,UAAA,qKAAA20K,CAAA/5K,KAAA85K,kBAC9B5kK,MAAA8kK,qCAAAh6K,KAAAi6K,0BAAAH,iBAAAnhL,KAAAqH,KAAMk8C,OAAQrvC,UAET4sK,cAAiBv9H,OAAO,GAAGx6C,OAAS,EAAIw6C,OAAO,GAAG,GAAGx6C,OAAS,EACnEwT,MAAK+iK,cAAgBtC,iBAAiBz5H,OAAO,OAAUA,OAAO,QAAWhnC,MAAKrI,UAG9EqI,MAAKgjK,OACDn+K,IAAK26K,SACLh2J,OAAQxJ,MAAKyzJ,cAEjBzzJ,MAAKwhK,cAAgBxhK,MAAK8gK,sBAXI9gK,uYAROwiK,iVA6BrC,IAAMU,WAAap4K,KAAK2gE,OAExB,OADAy2G,sBAAsBgB,YAAY,GAC3BpC,0BAAoBoC,WAAYp4K,KAAK6M,SAAU7M,KAAKi2K,mFAGxCltJ,UAAU,IAAA3T,OAAApV,KAEzBk6K,WAGAnxJ,SAHAmxJ,WACAC,UAEApxJ,SAFAoxJ,UACAz+I,OACA3S,SADA2S,OAEJ,OAAO17B,KAAKi5K,eAAehxK,IAAI,SAACmyK,WAAY5hL,GACxC,IAAM6hL,gBAAmBD,sBAAYD,oBAAWD,sBAAYI,YAAa9hL,GAD3B+hL,sBAEDnlK,OAAKolK,kBAAkBH,gBAA5DI,OAFsCF,sBAEtCE,OAAQC,WAF8BH,sBAE9BG,WAAYC,aAFkBJ,sBAElBI,aACtB9B,gBAAkBn9I,OAAQA,QAC1B6tG,eAAiBkxC,OAEvB,OACIC,YACIE,QAASF,WAAW,GACpBG,UAAWH,WAAW,IAE1BC,cACIC,QAASD,aAAa,GACtBE,UAAWF,aAAa,IAE5Bj/I,QACIk/I,QAAS/B,eAAe,GACxBgC,UAAWhC,eAAe,IAE9Bp9I,OACIm/I,QAASrxC,eAAe,GACxBsxC,UAAWtxC,eAAe,mEAYtB,IAAA5gC,aAIZ3oG,KAAK6M,SAFL+oK,aAFYjtE,aAEZitE,aACA6B,iBAHY9uE,aAGZ8uE,iBAEEv7H,OAASl8C,KAAKi4K,cACdt3G,KAAOsO,kBAAmBjvE,KAAK2gE,QAC/Bm6G,WAAarD,iBAAiB,GAC9BsD,WAAatD,iBAAiB,IAAMjvK,OAAO2P,kBAC3CmgK,aAAgB1C,aACtB15H,OAAO/gC,MAAM,GAAGlT,IAAI,SAAAvN,GAAC,OAAI48K,kBAAkB58K,EAAGogL,WAAYC,cADrBzD,kBAAkBp7H,OAAQ4+H,WAAYC,YAM3E,OAHAp6G,KAAKjiD,OAAS44J,kBAAkB32G,KAAKjiD,OAAQo8J,WAAYC,YACzDp6G,KAAKzkB,OAASo7H,kBAAkB32G,KAAKzkB,OAAQ4+H,WAAYC,aAGrDp6G,UACA23G,mGAIiBvvJ,UACrB,IAAIiyJ,qBACAC,gBACAC,WACAC,cACAC,iBAAmB,EAEnBl/H,OAKAnzB,SALAmzB,OACOm/H,eAIPtyJ,SAJA0S,MACa0+I,UAGbpxJ,SAHAktJ,YACUqF,aAEVvyJ,SAFA8T,SACAnB,OACA3S,SADA2S,OAEEyhD,SAAWn9E,KAAK6M,SAASswE,SACzBu7F,oBAAsB14K,KAAKu4K,gBAAgB72K,OAAS1B,KAAKu4K,gBAAgB,GAAG72K,OAAS,EAErFg3G,QAENsiE,qBAAuBK,eACvBJ,gBAAkBK,cAGdH,WADa,IAAbh+F,UACcu7F,oBAAsB,EAAGA,qBAGb,IAAbv7F,UAAkBu7F,oBAAsB,IAAMA,sBAGpD5vK,QAAQ,SAACtQ,GAChBkgH,KAAKlgH,GAAK2hL,UAAU3hL,GACpB4iL,kBAAoBjB,UAAU3hL,GAC9BwiL,sBAAwBtiE,KAAKlgH,GAC7ByiL,iBAAmBviE,KAAKlgH,KAE5B0jD,OAAO,GAAGpzC,QAAQ,SAACpO,EAAGlC,IACa,IAA3B2iL,WAAWl1K,QAAQzN,KACnBkgH,KAAKlgH,GAAKwiL,sBAAwBb,UAAU3hL,GAAKyiL,oBAGzD/+H,OAAOpzC,QAAQ,SAAAsS,KAAG,OAAIA,IAAItS,QAAQ,SAACgnE,IAAKi9D,OACF,IAA9BouC,WAAWl1K,QAAQ8mI,OACnBj9D,IAAI+7E,kBAAkBnzC,KAAKq0B,MAAOrxG,QAElCw/I,QAAQnuC,MAAQlpI,KAAKwQ,IAAI6mK,QAAQnuC,OAAS,EAAGlpI,KAAKwN,MAAMy+D,IAAI2/E,kBAAkBh0H,SAE9Ey/I,QAAQnuC,MAAQ,MAIxB,IAAMwuC,cAAgBF,eAAiBH,QAAQzoK,OAAO,SAAC/Y,EAAGO,GAAJ,OAAUP,EAAIO,IAQpE,OAPIshL,cAAgB,EAChBL,QAAUA,QAAQjzK,IAAI,kBAAM,IAE5BkzK,WAAWryK,QAAQ,SAACtQ,GAChB0iL,QAAQ1iL,GAAKqL,KAAKwN,MAAMkqK,eAAiB7iE,KAAKlgH,GAAK4iL,kBAAoB,MAGxEF,8DAWKnC,cAAeF,gBAC3B,IAAIrgL,EACIkjC,OAAW17B,KAAKqyG,iBAAhB32E,OAER,IAAKljC,EAAI,EAAGA,EAAIqgL,eAAen3K,UACvBm3K,eAAergL,IAAMkjC,QADUljC,KAIvC,OAAOqL,KAAKsQ,IAAI4kK,cAAcr3K,OAAS,EAAGlJ,iEAY1BijC,MAAOC,QAAQ,IAAAhkB,OAAA1X,KAC3Bk6K,cACAC,aACElE,YAAcj2K,KAAKi2K,cAEnBp5I,SAAWo5I,YAAYxjK,OAAO,SAAC/Y,EAAGO,GAEpC,OADAP,GAAKO,IAGHuhL,cAAgBx7K,KAAKy7K,yBACvBv/H,OAAQl8C,KAAKi4K,cACbp7I,kBACAo5I,wBACAx6I,YACAC,gBAYJ,OATA17B,KAAKi5K,eAAenwK,QAAQ,SAACsxK,YACzB,IAGMzzK,SAAY+0K,OAFH,EAEWC,QADV,EACmBz/H,OAHpBk+H,WAAWl+H,OAGiBzgB,YAAOC,cAAQw+I,sBAAYC,oBAAWqB,6BAC3EzyJ,SAAWrR,OAAKkkK,uBAAuBj1K,SAC7CwzK,UAAYpxJ,SAASoxJ,UACrBD,WAAanxJ,SAASmxJ,aAEnBl6K,KAAK67K,uBAAwBngJ,cAAQD,YAAOy+I,sBAAYC,4FAS3CpxJ,UACpB,IACI+yJ,SACAH,QAFAT,WAGEjF,YAAcj2K,KAAKi2K,cAJKl7D,cAW1B/6G,KAAK6M,SAJL4kI,oBAP0B12B,cAO1B02B,oBACA+lC,aAR0Bz8D,cAQ1By8D,aACA5B,aAT0B76D,cAS1B66D,aACAmG,OAV0BhhE,cAU1BghE,OAEI7/H,OAAyDnzB,SAAzDmzB,OAAQxgB,OAAiD3S,SAAjD2S,OAAQw+I,WAAyCnxJ,SAAzCmxJ,WAAYC,UAA6BpxJ,SAA7BoxJ,UAAWqB,cAAkBzyJ,SAAlByyJ,cAC/CG,QJyC0B,SAArBK,mBAAsB9/H,OAAQ64F,UACvC,IAAIr5G,OAAS,EACTD,MAAQ,EAOZ,OANAygB,OAAOpzC,QAAQ,SAACsS,KACZ,IACM6gK,OADM7gK,IAAI25H,UACG0a,kBACnBh0H,MAAQ53B,KAAKwQ,IAAIonB,MAAOwgJ,OAAOxgJ,OAC/BC,QAAUugJ,OAAOvgJ,UAGjBD,YACAC,eIpDUsgJ,CAAmB9/H,OAAQl8C,KAAK43K,eAAel8I,OAEzD,IAAMmB,SAAWo5I,YAAYxjK,OAAO,SAAC/Y,EAAGO,GAEpC,OADAP,GAAKO,IAGT8uB,SAASktJ,YAAcA,YACvBltJ,SAAS8T,SAAWA,SAEhBq+I,QADAr+I,SAAW,EACD2+I,cAEAvF,YAAYhuK,IAAI,kBAAM,IAEpC6zK,SJ2J4B,SAAvBI,qBAAwB5/I,SACjC,IAEI6/I,oBAFAC,QAAU,EACVC,UAAY,EAGZzG,aAQAt5I,QARAs5I,aACA4B,aAOAl7I,QAPAk7I,aACA8E,gBAMAhgJ,QANAggJ,gBACA5gJ,OAKAY,QALAZ,OACA+1G,oBAIAn1G,QAJAm1G,oBACAsqC,OAGAz/I,QAHAy/I,OACA7/H,OAEA5f,QAFA4f,OACA6wF,KACAzwG,QADAywG,KAGAyqC,mBAAoCjqK,IAApBiqK,aAAa,KAC7B4E,QAAU5E,aAAa/kK,OAAO,SAAC/Y,EAAGO,GAE9B,OADAP,GAAKO,KAIT8hL,aAAwBxuK,IAAdwuK,OAAO,KACjBM,UAAYN,OAAOtpK,OAAO,SAAC/Y,EAAGO,GAE1B,OADAP,GAAKO,KAIbkiL,oBAAsBG,gBAAkBz4K,KAAKwN,MAAMirK,gBAAkBD,WAErE,IAAME,OAASrgI,OAAOx6C,OACtB,OAAOw6C,OAAOj0C,IAAI,SAACmT,IAAKwxH,MACpB,IACMp2D,MADMp7D,IAAI2xH,MACE0iB,kBAAkB/zH,OAChC8gJ,WAAchmG,MAA0CA,MAAQ96C,QAAzCygJ,oBAAsBzgJ,QASjD,OAPKk6I,eACG4B,aAAa91K,OAAS,GAAK66K,SAAW/E,aAAa91K,OACnD86K,WAAcL,oBAAsB3E,aAAa5qC,MAAQwvC,SAClD3qC,qBAA0C,IAAnBn1G,QAAQZ,UACtC8gJ,WAAcL,oBAAsBI,SAGrC14K,KAAKwN,MAAMmrK,cIrMPN,EACPhgI,cACA6wF,KAAM/sI,KAAK43K,cACXl8I,OAAQigJ,QACRW,gBAAiB5gJ,OACjB+1G,wCACA+lC,0BACA5B,0BACAmG,gBAEA5B,UAAUz4K,OAAS,IACnBw5K,QAAUA,QAAQjzK,IAAI,SAACvN,EAAGlC,GAAJ,OAAUqL,KAAKwQ,IAAI3Z,EAAGy/K,UAAU,GAAG3hL,IAAM,MAEnE2hL,UAAUj0K,KAAKg1K,SACf,IAAK,IAAIn9I,EAAI,EAAGA,EAAIo8I,UAAUz4K,OAAQq8B,IAClCo8I,UAAUp8I,GAAKm9I,QAGnB,OADAhB,WAAWh0K,KAAK41K,WACP3B,oBAAWD,mFAULnxJ,UAAU,IAAAsM,OAAAr1B,KAInBy8K,YADFz8K,KAAK6M,SADLspK,aAE6BllB,OACzBmpB,WAAmDrxJ,SAAnDqxJ,WAAYD,UAAuCpxJ,SAAvCoxJ,UAAWD,WAA4BnxJ,SAA5BmxJ,WAAYI,YAAgBvxJ,SAAhBuxJ,YACrCp+H,OAASk+H,WAAWl+H,OACpBw+H,aAAe,IAAK,IACpBC,eAAiB,IAAK,IAEtBF,QAAU,EAAG,GACbjB,aAAex5K,KAAKy5K,cAsB1B,OApBAv9H,OAAOpzC,QAAQ,SAACsS,IAAKwxH,MACjBxxH,IAAItS,QAAQ,SAACs5D,KAAM2qE,MACf,IAAM2vC,UAAYxC,WAAWI,aAAa1tC,OAAS,EAC7C+vC,SAAWxC,UAAUG,aAAavtC,MAExC3qE,KAAKypF,kBAAkB8wB,SAAUD,UAAYD,aAEhC,IAAT7vC,MAAcG,KAAOysC,cACrBmB,aAAa,GAAG5tC,MAAQ4vC,SACxBlC,OAAO,IAAMA,OAAO,IAAM,GAAKkC,UACf,IAAT/vC,MAAcG,MAAQysC,eAC7BmB,aAAa,GAAG5tC,KAAOysC,cAAgBmD,SACvClC,OAAO,IAAMA,OAAO,IAAM,GAAKkC,UAE/B5vC,OAAS13G,OAAKuiJ,gBACd8C,WAAW,GAAG9tC,MAAQ8vC,UACtBhC,WAAW,GAAG9tC,MAAQ8vC,gBAK9BE,SAzBa,EAAG,GA0BhBnC,cACAC,sBACAC,uyCCrTSkC,yDAQjB,SAAAA,mBAAa3gI,QAAqB,IAAAhnC,MAAbrI,OAAazH,UAAA1D,OAAA,QAAA6L,IAAAnI,UAAA,GAAAA,UAAA,wKAAA03K,CAAA98K,KAAA68K,qBAC9B3nK,MAAA6nK,wCAAA/8K,KAAAg9K,6BAAAH,oBAAAlkL,KAAAqH,KAAMk8C,OAAQrvC,UAET4sK,cAAgBv9H,OAAO,GAAGx6C,OAG/BwT,MAAKgjK,OACDn+K,IAAK46K,YACLj2J,OAAQxJ,MAAKyzJ,cAEjBzzJ,MAAKwhK,cAAgBxhK,MAAK8gK,sBAVI9gK,gZARUwiK,6VA4BxC,IAAMU,WAAap4K,KAAK2gE,OAExB,OADAy2G,sBAAsBgB,YAAY,GAC3BpC,0BAAoBoC,WAAYp4K,KAAK6M,SAAU7M,KAAKi2K,mFAGxCltJ,UAAU,IAAA3T,OAAApV,KAEzBk6K,WAIAnxJ,SAJAmxJ,WACAC,UAGApxJ,SAHAoxJ,UACAz+I,OAEA3S,SAFA2S,OACAD,MACA1S,SADA0S,MAGJ,OAAOz7B,KAAKi5K,eAAehxK,IAAI,SAACmyK,WAAY5hL,GACxC,IAAM6hL,gBAAmBD,sBAAYD,oBAAWD,sBAAYI,YAAa9hL,EAAGkjC,eAD9B6+I,sBAM1CnlK,OAAKolK,kBAAkBH,gBAHvBuC,QAH0CrC,sBAG1CqC,QACAlC,WAJ0CH,sBAI1CG,WACAC,aAL0CJ,sBAK1CI,aAEE9B,eAAiB+D,QACjBrzC,gBAAkB9tG,MAAOA,OAE/B,OACIi/I,YACIE,QAASF,WAAW,GACpBG,UAAWH,WAAW,IAE1BC,cACIC,QAASD,aAAa,GACtBE,UAAWF,aAAa,IAE5Bj/I,QACIk/I,QAAS/B,eAAe,GACxBgC,UAAWhC,eAAe,IAE9Bp9I,OACIm/I,QAASrxC,eAAe,GACxBsxC,UAAWtxC,eAAe,mEAYtB,IAAA5gC,aAIZ3oG,KAAK6M,SAFL+oK,aAFYjtE,aAEZitE,aACA6B,iBAHY9uE,aAGZ8uE,iBAEEv7H,OAASl8C,KAAKi4K,cACdt3G,KAAOsO,kBAAmBjvE,KAAK2gE,QAC/Bm6G,WAAarD,iBAAiB,GAC9BsD,WAAatD,iBAAiB,IAAMjvK,OAAO2P,kBAC3CmgK,aAAgB1C,aACtB15H,OAAO/gC,MAAM,GAAGlT,IAAI,SAAAvN,GAAC,OAAI48K,kBAAkB58K,EAAGogL,WAAYC,cADrBzD,kBAAkBp7H,OAAQ4+H,WAAYC,YAO3E,OAJAp6G,KAAKjiD,OAAS44J,kBAAkB32G,KAAKjiD,OAAQo8J,WAAYC,YAEzDp6G,KAAKzkB,OAASykB,KAAKzkB,OAAOj0C,IAAI,SAAAvN,GAAC,OAAI48K,kBAAkB58K,EAAGogL,WAAYC,eAGhEp6G,UACA23G,mGAIiBvvJ,UAAU,IAE3B2S,OAEA3S,SAFA2S,OACAw+I,WACAnxJ,SADAmxJ,WAEA+C,iBAAmBvhJ,OACnBwhJ,cACA/B,cACAgC,QAAU,EACRhgG,SAAWn9E,KAAK6M,SAASswE,SACzBu7F,oBAAsB14K,KAAKu4K,gBAAgB72K,OAsBjD,OApBiB,IAAby7E,UACAg+F,YAAczC,oBAAsB,EAAGA,qBACvCyE,QAAU,IAEVhC,WAA0B,IAAbh+F,UAAkBu7F,oBAAsB,IAAMA,qBAC3DyE,QAAU,GAEdjD,WAAWpxK,QAAQ,SAACpO,EAAGlC,IACY,IAA3B2iL,WAAWl1K,QAAQzN,KACnB0kL,WAAW1kL,GAAKkC,EAChBuiL,kBAAoBviL,KAGxBuiL,iBAAmB,EACnBC,WAAaA,WAAWj1K,IAAI,kBAAM,IAElCkzK,WAAWryK,QAAQ,SAACpO,GAChBwiL,WAAWxiL,GAAKmJ,KAAKsQ,IAAI+lK,WAAWx/K,GAAKuiL,iBAAoBE,WAG9DD,iEAWKnE,eACZ,IAAI79J,EACIugB,MAAUz7B,KAAKqyG,iBAAf52E,MAER,IAAKvgB,EAAI,EAAGA,EAAI69J,cAAcr3K,UACtBq3K,cAAc79J,IAAMugB,OADUvgB,KAGtC,OAAOrX,KAAKsQ,IAAI4kK,cAAcr3K,OAAS,EAAGwZ,iEAY1BugB,MAAOC,QAAQ,IAAAhkB,OAAA1X,KAC3Bk6K,cACAC,aAYJ,OAVAn6K,KAAKi5K,eAAenwK,QAAQ,SAACsxK,YACzB,IAGMzzK,SAAY+0K,OAFH,EAEWC,QADV,EACmBz/H,OAHpBk+H,WAAWl+H,OAGiBzgB,YAAOC,cAAQw+I,sBAAYC,qBAChElE,YAAcv+J,OAAKkkK,uBAAuBj1K,SAChDwzK,UAAYlE,YAAYkE,UACxBD,WAAajE,YAAYiE,aAGtBl6K,KAAK67K,uBAAwBngJ,cAAQD,YAAOy+I,sBAAYC,4FAS3CpxJ,UACpB,IAAI+yJ,YAEA5/H,OAIAnzB,SAJAmzB,OACAzgB,MAGA1S,SAHA0S,MACAy+I,WAEAnxJ,SAFAmxJ,WACAC,UACApxJ,SADAoxJ,UAEEsC,YAAcz8K,KAAK6M,SAASspK,aAAallB,OAEzCyqB,OLwDiB,SAAlB0B,gBAAmBhiK,KAC5B,IAAIsgB,OAAS,EACTD,MAAQ,EAMZ,OALArgB,IAAItS,QAAQ,SAACgnE,KACT,IAAMmsG,OAASnsG,IAAI2/E,kBACnB/zH,OAAS73B,KAAKwQ,IAAIqnB,OAAQugJ,OAAOvgJ,QACjCD,OAASwgJ,OAAOxgJ,SAGhBA,YACAC,eKlEe0hJ,CAAgBlhI,OAAOl8C,KAAK43K,gBAAgBn8I,MACrDy/I,QLoKqB,SAAtBmC,oBAAuB/gJ,QAASghJ,cAAiB,IAEtDjC,eAGA/+I,QAHA++I,eACA5/I,MAEAa,QAFAb,MACArgB,IACAkhB,QADAlhB,IAGAq2H,oBAGA6rC,aAHA7rC,oBACAmkC,aAEA0H,aAFA1H,aACA4B,aACA8F,aADA9F,aAEA4E,QAAU,EAOd,OANI5E,cAAgBA,aAAa,KAC7B4E,QAAU5E,aAAa/kK,OAAO,SAAC/Y,EAAGO,GAE9B,OADAP,GAAKO,KAINmhB,IAAInT,IAAI,SAAC6nE,IAAKilE,UACjB,IAAMv+D,MAAQ1G,IAAI2/E,kBAAkBh0H,MAChC8hJ,UAAa/mG,MAAoCA,MAAQ/6C,OAAnC4/I,eAAiB5/I,OAC3C,GAAIm6I,aACA,GAAI4B,aAAa91K,OAAS,EACtB67K,UAAalC,eAAiB7D,aAAaziC,UAAYqnC,aACpD,GAAI3qC,qBAAiC,IAAVh2G,MAAa,CAC3C,IAAM+hJ,OAASpiK,IAAI1Z,OACnB67K,UAAalC,eAAiBmC,OAGtC,OAAO35K,KAAKwN,MAAMksK,aKjMFF,EACZjiK,IAAK8gC,OAAOl8C,KAAK43K,eACjBn8I,MAAOigJ,OACPL,eAAgB5/I,OACjBz7B,KAAK6M,UAERqvC,OAAOpzC,QAAQ,SAACsS,IAAKwxH,MAAN,OAAexxH,IAAItS,QAAQ,SAACgnE,IAAKi9D,MAC5C,IAAM0wC,gBAAkB3tG,IAAI2/E,kBAE5B3/E,IAAI+7E,kBAAkBqvB,QAAQnuC,MAAQ0vC,YAAagB,gBAAgB/hJ,QACnEogJ,SAASlvC,MAAQ/oI,KAAKwQ,IAAIynK,SAASlvC,OAAS,EAAG/oI,KAAKwN,MAAMy+D,IAAI2/E,kBAAkB/zH,aAEhFw+I,WAAWx4K,OAAS,IACpBo6K,SAAWA,SAAS7zK,IAAI,SAACvN,EAAGlC,GAAJ,OAAUqL,KAAKwQ,IAAI3Z,EAAGw/K,WAAW,GAAG1hL,OAEhE0hL,WAAWh0K,KAAK41K,UAChB,IAAK,IAAI/9I,EAAI,EAAGA,EAAIm8I,WAAWx4K,OAAQq8B,IACnCm8I,WAAWn8I,GAAK+9I,SAGpB,OADA3B,UAAUj0K,KAAKg1K,UACNhB,sBAAYC,iFAUNpxJ,UAAU,IAAAsM,OAAAr1B,KAInBy8K,YADFz8K,KAAK6M,SADLspK,aAE6BllB,OACzBmpB,WAA2DrxJ,SAA3DqxJ,WAAY1+I,OAA+C3S,SAA/C2S,OAAQy+I,UAAuCpxJ,SAAvCoxJ,UAAWD,WAA4BnxJ,SAA5BmxJ,WAAYI,YAAgBvxJ,SAAhBuxJ,YAC7Cp+H,OAASk+H,WAAWl+H,OACpBw+H,aAAe,IAAK,IACpBC,eAAiB,IAAK,IACtBiC,SAAW,EAAG,GAEdpD,aAAex5K,KAAKy5K,cAEpBiE,mBAAqB19K,KAAKy7K,yBAA0B//I,cAAQw+I,WAAYA,WAAW,SAsBzF,OApBAh+H,OAAOpzC,QAAQ,SAACsS,IAAKwxH,MACjBxxH,IAAItS,QAAQ,SAACs5D,KAAM2qE,MACf,IAAM2vC,UAAYgB,mBAAmB9wC,OAAS,EACxC+vC,SAAWxC,UAAUG,aAAavtC,MAExC3qE,KAAKypF,kBAAkB8wB,SAAWF,YAAaC,WAElC,IAAT3vC,MAAcH,KAAO4sC,cACrBkB,WAAW,GAAG9tC,MAAQ8vC,UACtBE,QAAQ,IAAMA,QAAQ,IAAM,GAAKF,WACjB,IAAT3vC,MAAcH,MAAQ4sC,eAC7BkB,WAAW,GAAG9tC,KAAO4sC,cAAgBkD,UACrCE,QAAQ,IAAMA,QAAQ,IAAM,GAAKF,WAEjC9vC,OAASv3G,OAAKuiJ,gBACd+C,aAAa,GAAG5tC,MAAQ4vC,SACxBhC,aAAa,GAAG5tC,MAAQ4vC,eAKhCC,gBACAnC,QA3BY,EAAG,GA4BfC,sBACAC,+zEC7QL,SAASgD,qBAAsBzhI,OAAQ5gD,MAC1C,OAAI4gD,OACOA,OAAOuzG,kBAAkBn0J,MAE7B,EAoBX,IAAMuwJ,+BAAoB,SAApBA,kBAAqB3vG,OAAQu+H,OAAQmC,SACvC1gI,OAAOpzC,QAAQ,SAACsS,IAAKwxH,MACjBxxH,IAAItS,QAAQ,SAACshJ,YAAard,MACtBqd,YAAYyB,kBAAkB4uB,OAAO1tC,MAAO6vC,QAAQhwC,YAK1DgxC,cAAgB,SAAhBA,cAAiB9K,OAAQ+K,YAAaC,YACxC,IAAIC,QAAUjL,OAAOjmK,SAAP,GAAA6O,OAAmBmiK,YAAnB,YAKd,OAJIC,WAAWp8K,OAAS,EAAIq8K,UACxBA,QAAU,EACVjL,OAAOjmK,OAAPmxK,+BAAA,GAAAtiK,OAAoBmiK,YAApB,WAA2CE,WAExCA,SAGLE,sBACFxiK,QACIo7J,WTgNsC,mCS/MtC36H,OTgNqB,eS/MrB8/G,YToIa,QSnIbkiB,WAAYrJ,4BAEhBz5J,KACIy7J,WT4MuC,iCS3MvC36H,OT4MkB,YS3MlB8/G,YAAayY,uBACbyJ,WAAYtJ,2BAkDduJ,wBAA0B,SAA1BA,wBAA2BrL,OAAQ3lB,WAAYixB,kBAAmBtlH,QAAxC,OAlCM,SAAhCulH,8BAAiCvL,OAAQwL,eAAgBzH,WAAY/9G,QAAW,IAE9EkrG,WACA8O,OAAOjmK,SADPm3J,WAGA9nH,OAGAoiI,eAHApiI,OACA8/G,YAEAsiB,eAFAtiB,YACAkiB,WACAI,eADAJ,WAGJ,OAAQla,YACR,ITuKoB,WStKhB,OAAO6S,WACX,QACI,IAAM0H,cAAgBZ,qBAAqB7K,OAAO52H,UAAW8/G,aAAeljG,OAK5E,OAHIylH,cAAgB1H,YAChB/D,OAAO0L,WAAPR,+BAAqBE,YAAa,IAE/Br6K,KAAKwQ,IAAIwiK,WAAY0H,gBAgBhCF,CAA8BvL,OAAQmL,qBAAqB9wB,YAAaixB,kBAAmBtlH,SA+DzF2lH,oCAAyB,SAAzBA,uBAA0B3L,OAAQ4L,mBAAsB,IAEtDhjJ,OACAo3I,OAAOxzE,cADP5jE,OAGAo9B,OACAg6G,OAAOjmK,SADPisD,OALsD6lH,sBA5BzB,SAA/BC,6BAAgC9L,OAAQ4L,mBAAsB,IAE5DhjJ,OACAo3I,OAAOxzE,cADP5jE,OAEEqwH,aAAe+mB,OAAO/mB,eAGtB8yB,sBAAwBh7K,KAAKsQ,IAAI43I,aAAa0D,kBAAkB/zH,OAAQA,OAAS,GAIvFqwH,aAAaF,kBAAkB6yB,kBAAmBG,uBAGlD,IAGMC,gBAHkB/yB,aAAagzB,oBAGGjM,OAAOjmK,SAASmyK,eAKxD,OACIC,mBAHuBH,gBAAgBpjJ,OAAOk/I,QAAUkE,gBAAgBpjJ,OAAOm/I,UAI/EgE,6CAakDD,CAA6B9L,OAAQ4L,mBAAnFO,mBATkDN,sBASlDM,mBAAoBJ,sBAT8BF,sBAS9BE,sBAGtBK,+BAAiCxjJ,OAAS73B,KAAKsQ,IAAI0qK,sBAAuBI,oBAKhF,OACIA,sCACAJ,4CACAM,gBALoBhB,wBAAwBrL,OTwCjC,MSxC8CoM,+BAAgCpmH,QAMzFomH,gEAoDFE,iBACFC,UAAU,EACVrb,WTMkB,USWhBsb,uCAA4B,SAA5BA,0BAA6BxM,QAAW,IAEtCh6G,OACAg6G,OAAOjmK,SADPisD,OAFsC60D,MAAA4xD,4BAIE1K,2BAAYD,0BAAU3sK,IAAI,SAAC3M,MACnE,OAnBuB,SAAzBkkL,uBAA0B1M,OAAQx3K,MACpC,IAAMkjL,WAAa1L,OAAO0L,aAKpBiB,mBACFzb,WAHA8O,OAAOjmK,SADPm3J,WAKAqb,SAAUb,WAAWljL,OAGzB,OAAOpC,OAAO4M,KAAKs5K,iBAAiBvgK,MAAM,SAAAnkB,GAAC,OAAI0kL,gBAAgB1kL,KAAO+kL,kBAAkB/kL,KAQhF8kL,CAAuB1M,OAAQx3K,MACxBw9D,OAEJ,IAR+B,GAW1C,OACI4mH,iBAZsC/xD,MAAA,GAatCgyD,eAbsChyD,MAAA,KAuBjCiyD,uCAA4B,SAA5BA,0BAA6B9M,QACtC,IAAMhnB,UAAYgnB,OAAOhnB,YACnBC,aAAe+mB,OAAO/mB,eAFqB8zB,sBAhLvB,SAAxBC,sBAAyBhN,QAC3B,IAAMhnB,UAAYgnB,OAAOhnB,YAErBrwH,MACAq3I,OAAOxzE,cADP7jE,MAHkCskJ,gBAQlCjN,OAAOjmK,SAFPokJ,OANkC8uB,gBAMlC9uB,OACAn4F,OAPkCinH,gBAOlCjnH,OAIE2jH,YAAcxrB,OAAOx1H,MAGrBukJ,eAAiBrC,qBAAqB7xB,UT0D3B,SSvDXm0B,kBAAoBp8K,KAAKsQ,IAAI6rK,eAAiBlnH,OAAQr9B,MAAQ,GAG9DykJ,iCAAmCzkJ,MAAQwkJ,kBAAoBxD,YAKrE,OACIuD,8BACAC,oCACAvB,kBALsBP,wBAAwBrL,OT4FhC,SS5FgDoN,iCAAkC,GAMhGA,mEA6JAJ,CAAsBhN,QAJtBkN,eAN6CH,sBAM7CG,eACAC,kBAP6CJ,sBAO7CI,kBACAC,iCAR6CL,sBAQ7CK,iCACAxB,kBAT6CmB,sBAS7CnB,kBAT6CyB,sBAiB7C1B,oCAAuB3L,OAAQ4L,mBAH/BO,mBAd6CkB,sBAc7ClB,mBACAE,gBAf6CgB,sBAe7ChB,gBACAD,+BAhB6CiB,sBAgB7CjB,+BAhB6CkB,sBAsB7Cd,uCAA0BxM,QAF1B4M,iBApB6CU,sBAoB7CV,iBACAC,eArB6CS,sBAqB7CT,eAEJ7zB,UAAUD,kBAAkBo0B,kBAAoBN,eAAgBR,gBAAkBO,kBAGlF,IAAMW,kBAAoBv0B,UAAUizB,oBAC9BuB,qBAAuBv0B,aAAagzB,oBAS1C,OANAnB,cAAc9K,OT1FC,MS0FYuN,mBAC3BzC,cAAc9K,OT5FI,SS4FYwN,sBAzHC,SAA7BC,2BAA8BzN,OAAQuN,kBAAmBC,sBAAyB,IAAAhsJ,KAAA81C,MAAAvmD,MAAA2pG,MAAAW,MAC9E0kD,aAAeC,OAAOD,eAGxB5hB,OACA6hB,OAAOjmK,SADPokJ,OAEE7d,SAAW0/B,OAAO1/B,WAEpB9wG,IAEA8wG,SAFA9wG,IACAkvB,OACA4hF,SADA5hF,OAIEirH,YAAcxrB,OAAOx1H,MAGrBi/I,YAAapmJ,SAAG5Y,OAAHnU,MAAA+sB,KAAAksJ,+BAAaH,kBAAkBp4K,IAAI,SAAAvN,GAAC,OAAIA,EAAEggL,WAAWE,YAGlE6F,kBAAmBr2G,UAAG1uD,OAAHnU,MAAA6iE,MAAAo2G,+BAAaH,kBAAkBp4K,IAAI,SAAAvN,GAAC,OAAIA,EAAEigL,aAAaC,YAC1E8F,oBAAqB78J,UAAGnI,OAAHnU,MAAAsc,MAAA28J,+BAAaH,kBAAkBp4K,IAAI,SAAAvN,GAAC,OAAIA,EAAEigL,aAAaE,cAG5EF,cAAentD,UAAG9xG,OAAHnU,MAAAimH,MAAAgzD,+BAAaF,qBAAqBr4K,IAAI,SAAAvN,GAAC,OAAIA,EAAEigL,aAAaC,YAGzE+F,qBAAuBL,qBAAqB,GAAG5F,WAAWE,QAC1DgG,wBAAyBzyD,UAAGzyG,OAAHnU,MAAA4mH,MAAAqyD,+BAAaF,qBAAqBr4K,IAAI,SAAAvN,GAAC,OAAIA,EAAEggL,WAAWG,cAIvFhI,aAAa/pK,QAAQ,SAACozC,OAAQ0wF,MAC1B1wF,OAAOpzC,QAAQ,SAACshJ,YAAard,MACzBqd,YAAYyB,kBAAkB8uB,aAAa5tC,MAAQ0vC,YAAa/B,WAAW9tC,MAAQ6vC,iBAM3F5wB,+BAAkBvpH,IAAI,GAAIm+I,iBAAkBE,sBAE5C90B,+BAAkBvpH,IAAI,GAAIo+I,mBAAoBC,sBAE9C90B,+BAAkBr6F,OAAO,GAAIivH,iBAAkBG,wBAE/C/0B,+BAAkBr6F,OAAO,GAAIkvH,mBAAoBE,wBA+EjDL,CAA2BzN,OAAQuN,kBAAmBC,uBAGlDnB,gBAAiBA,gBAAkBO,iBACnCM,eAAgBA,eAAiBL,eACjCT,+BAAgCA,+BAAiCQ,iBAEjET,sCACAP,oCACAwB,oEC1RFW,WAAa,SAAbA,WAAar3J,YAAU,OAAIA,WAAW/W,OAAO,SAACquK,MAAOhpK,SAAR,OAAoBgpK,MAAQhpK,SAAS,yrDCrCnEipK,2CAUjB,SAAAA,WAAa3tC,SAAUn9G,WAAYqpE,YAAazyF,QAAQ,IAAAqI,MAAA,2JAAA8rK,CAAAhhL,KAAA+gL,aACpD7rK,MAAA+rK,iCAAAjhL,KAAAkhL,sBAAAH,YAAApoL,KAAAqH,KAAMi2B,WAAYqpE,YAAazyF,UAC1BumI,SAASA,UACdl+H,MAAKrI,OAAOqI,MAAK0Q,YAAYu1E,iBAC7BjmF,MAAKisK,UAAY52K,cACjB2K,MAAKksK,UAAYlsK,MAAK0Q,YAAYy7J,kBAClCnsK,MAAKosK,aAAgB5mB,YAAY,EAAOC,UAAU,GANEzlJ,0XAVpB4/J,0SA0E1B1hC,WACN,OAAIA,WACApzI,KAAKg1K,UC1FqB,SAAzBuM,uBAA0BjlJ,QAAS82G,UAE5C,IAIIouC,YACAC,YALAj2B,cACAC,eACAC,aACAC,gBALqD/1C,gBAgBrDt5E,QAAQzvB,SAPRs7I,eATqDvyC,gBASrDuyC,eACAC,kBAVqDxyC,gBAUrDwyC,kBACAs5B,YAXqD9rE,gBAWrD8rE,YACAlK,aAZqD5hE,gBAYrD4hE,aACAvmB,OAbqDr7C,gBAarDq7C,OACAwnB,UAdqD7iE,gBAcrD6iE,UACAt7F,SAfqDy4B,gBAerDz4B,SAfqD++E,qBAoBrD5/H,QAAQgjE,cAFR40E,cAlBqDhY,qBAkBrDgY,cACAD,aAnBqD/X,qBAmBrD+X,aAEI3xI,IAAwB8wG,SAAxB9wG,IAAKiwB,OAAmB6gF,SAAnB7gF,OAAQf,OAAW4hF,SAAX5hF,OArBoCw4G,KAAA2X,4BAsBjBr/I,IAtBiB,GAsBlDusH,QAtBkDmb,KAAA,GAsBzCn2B,WAtByCm2B,KAAA,GAsB7Blb,SAtB6Bkb,KAAA,GAAA4X,QAAAD,4BAuBdpvH,OAvBc,GAuBlDmhF,SAvBkDkuC,QAAA,GAuBxCpuC,YAvBwCouC,QAAA,GAuB3BjuC,UAvB2BiuC,QAAA,GAAAC,QAAAF,4BAwBRnwH,OAxBQ,GAwBlD28F,WAxBkD0zB,QAAA,GAwBtC/tC,cAxBsC+tC,QAAA,GAwBvBzzB,YAxBuByzB,QAAA,GAqFzD,OA3DInuC,SAAShyI,OAAS,IAElB8pJ,cAAU9vI,OAAAomK,gCAAOjzB,SAAPizB,gCAAmBpuC,UAAnBouC,gCAAgC3zB,cAE1Cxa,UAAUjyI,OAAS,IAEnB+pJ,eAAW/vI,OAAAomK,gCAAOhzB,UAAPgzB,gCAAoBnuC,WAApBmuC,gCAAkC1zB,eAE7Cva,WAAWnyI,OAAS,GAAKmyI,WAAW,GAAGnyI,OAAS,IAEhDgqJ,UAAY7X,WAAW5rI,IAAI,SAACnP,EAAGN,GAAJ,SAAAkjB,OAAAomK,gCAAcjzB,QAAQr2J,IAAtBspL,gCAA6BhpL,GAA7BgpL,gCAAmChzB,SAASt2J,QAEvEs7I,cAAcpyI,OAAS,GAAKoyI,cAAc,GAAGpyI,OAAS,IAEtDiqJ,aAAe7X,cAAc7rI,IAAI,SAACnP,EAAGN,GAAJ,SAAAkjB,OAAAomK,gCAAc3zB,WAAW31J,IAAzBspL,gCAAgChpL,GAAhCgpL,gCAAsC1zB,YAAY51J,QAGvF8jC,QAAQwvH,UAAU,IAAIi2B,4BAAWv2B,WAAYC,cACzCha,oBAAqB0W,eACrBqvB,aAAcA,aAAa18J,KAC3BihK,OAAQ2F,YAAY5mK,KACpBq7J,cACI16I,MAAOw4I,aACPv4I,OAAQw4I,cACRjjB,OAAQA,OAAOx1H,OAEnB0hD,SAAUA,SAAS/hE,IACnBq9J,UAAWA,UAAU39J,KAAK7S,IAAI,SAAAvN,GAAC,OAAIA,EAAImJ,KAAKwQ,IAAIw6I,QAAQntJ,OAAQotJ,SAASptJ,UACzE+1K,kBAAmB5oB,QAAQntJ,OAAQysJ,WAAWzsJ,WAI9C8/K,YADA3yB,QAAQntJ,OAAS,EACHmtJ,QAAQ,GAAGntJ,OAEXysJ,WAAWzsJ,OAAS,EAAIysJ,WAAW,GAAGzsJ,OAAS,EAI7D+/K,YADA3yB,SAASptJ,OAAS,EACJotJ,SAAS,GAAGptJ,OAEZ0sJ,YAAY1sJ,OAAS,EAAI0sJ,YAAY,GAAG1sJ,OAAS,EAGnE46B,QAAQyvH,aAAa,IAAIi2B,kCAAct2B,UAAWC,eAC9Cla,oBAAqB2W,kBACrBovB,aAAcA,aAAa39J,QAC3BkiK,OAAQ2F,YAAY7nK,QACpB+7J,cAAc,EACdO,cACI16I,MAAOw4I,aACPv4I,OAAQw4I,cACRjjB,OAAQA,OAAOx1H,OAEnB0hD,SAAUA,SAASrN,IACnB2oG,UAAWA,UAAU5+J,QACrB49J,kBAAmB+J,YAAaC,gBAEpCnlJ,QAAQu2I,aAAar/B,aAEdJ,SDKkBmuC,CAAuBvhL,KAAMozI,WACvCpzI,MAEXiiL,WAAAf,sBAAAH,WAAAzmL,WAAA,WAAA0F,MAAArH,KAAAqH,KAAsBozI,iEAWtBpzI,KAAKw+K,YAAa9jB,YAAY,EAAOC,UAAU,IADlC,IAAAunB,sBAKTtC,uCAA0B5/K,MAF1Bk/K,+BAHSgD,sBAGThD,+BACAgB,iCAJSgC,sBAIThC,iCAIJ,OADAlgL,KAAKmiL,mBAAmBjD,+BAAgCgB,kCACjDlgL,+CAGD1E,KAAM8mL,YACZ,IAAMC,SAAW/mL,KAAKmG,cAEhB6gL,WADuBtiL,KAAK+yK,WAA1BC,iBAC2B,GAAAt3J,OAAI2mK,SAAJ,UAC7BtE,QAAUl6K,KAAKsQ,IAAItQ,KAAKwQ,IAAI,EAAG+tK,YAAaE,YAMlD,OALAtiL,KAAK6M,iLAAL01K,IAAA,GAAA7mK,OACQ2mK,SADR,WAC4BtE,QAAU,IAEtC/9K,KAAKmiL,qBACLniL,KAAKwiL,aACExiL,yCAGJ1E,MAAM,IACD03K,iBAAqBhzK,KAAK+yK,WAA1BC,iBACFqP,SAAW/mL,KAAKmG,cACtB,OACI6gL,WAAYtP,iBAAgB,GAAAt3J,OAAI2mK,SAAJ,UAC5BI,YAAaziL,KAAK6M,SAAL,GAAA6O,OAAiB2mK,SAAjB,YAAsC,+CAKvD,OAAIj9K,UAAS1D,QACT1B,KAAKohL,UAALh8K,UAAA1D,QAAA,OAAA6L,EAAAnI,UAAA,GACOpF,MAEJA,KAAKohL,0DAIZ,OAAIh8K,UAAW1D,QACX1B,KAAKshL,YAAcryG,eAAejvE,KAAKshL,YAANl8K,UAAA1D,QAAA,OAAA6L,EAAAnI,UAAA,IAC1BpF,MAEJA,KAAKshL,0EASIoB,aAAcC,aAAa,IAAA5nE,cAKvC/6G,KAAK6M,SAHL+1K,WAFuC7nE,cAEvC6nE,WACA5D,cAHuCjkE,cAGvCikE,cACA/tB,OAJuCl2C,cAIvCk2C,OAEE+hB,iBD/JiB,SAAlB6P,gBAAmB/P,OAAQ8P,WAAY5D,eAYhD,IAXA,IAAMlzB,UAAYgnB,OAAOhnB,YACnBC,aAAe+mB,OAAO/mB,eACtB8mB,aAAeC,OAAOD,eACtBz/B,SAAW0/B,OAAO1/B,WAClB0vC,YAAch3B,UAAUi3B,sBACxBC,eAAiBj3B,aAAag3B,sBAC9BE,sBACF7nK,IAAK,EACLK,OAAQ,GAGHjjB,EAAIoqL,WAAa,EAAGpqL,GAAK,EAAGA,IAAK,CACtC,IAAMkJ,OAASmC,KAAKwQ,IAAIyuK,YAAYtqL,GAAG+/K,cAAc72K,OACjDohL,YAAYtqL,GAAGggL,gBAAgB92K,QACnCuhL,qBAAqB7nK,KAAO1Z,OAGhC,IAAK,IAAIlJ,GAAIwmL,cAAgB,EAAGxmL,IAAK,EAAGA,KAAK,CACzC,IAAM0jD,OAAS8mI,eAAexqL,IACtB+/K,cAAmCr8H,OAAnCq8H,cAAeC,gBAAoBt8H,OAApBs8H,gBACjB92K,QAASmC,KAAKwQ,IAAIkkK,cAAc,GAAKA,cAAc,GAAG72K,OAAS,EACjE82K,gBAAgB,GAAKA,gBAAgB,GAAG92K,OAAS,GACrDuhL,qBAAqBxnK,QAAU/Z,QAGnC0xI,SAAS9wG,IAAI,GAAK0gJ,eAAehE,eAAezG,cAChDnlC,SAAS5hF,OAAO,GAAKwxH,eAAehE,eAAexG,gBAEnDplC,SAAS7gF,OAAO,GAAKuwH,YAAYF,YAAYrK,cAC7CnlC,SAAS7gF,OAAO,GAAKuwH,YAAYF,YAAYpK,gBAE7C,IAAM0K,aAAer/K,KAAKwQ,IAAI++H,SAAS7gF,OAAO,GAAG7wD,OAAQ0xI,SAAS7gF,OAAO,GAAG7wD,QAEtEyhL,gBAAkBt/K,KAAKwQ,IAAI++H,SAAS9wG,IAAI,GAAG,GAAK8wG,SAAS9wG,IAAI,GAAG,GAAG5gC,OAAS,EAAG0xI,SAAS5hF,OAAO,GAAG,GAChG4hF,SAAS5hF,OAAO,GAAG,GAAG9vD,OAAS,GAIvC,OAHA0xI,SAAS7gF,OAAO,GAAKsgH,aAAa13J,MAAM8nK,qBAAqB7nK,IAAK6nK,qBAAqB7nK,IAAM8nK,cACxFj7K,IAAI,SAAAi0C,QAAM,OAAIA,OAAO/gC,MAAM8nK,qBAAqBxnK,OAAQwnK,qBAAqBxnK,OAAS0nK,oBAGvF/vC,kBACAgwC,SAAUN,YAAYphL,OACtB2hL,YAAaL,eAAethL,QCqHHmhL,CAAgB7iL,KAAM4iL,WAAY5D,eACrDsE,iBD3GqB,SAAtBC,oBAAuBzQ,OAAQ4P,aAAcC,aACtD,IAAM72B,UAAYgnB,OAAOhnB,YACnBC,aAAe+mB,OAAO/mB,eAF0Cy3B,eAMlE1Q,OAAOjmK,SAFPmyK,cAJkEwE,eAIlExE,cACA4D,WALkEY,eAKlEZ,WAGEa,UAAY33B,UAAUizB,oBAAoB6D,YAC1Cc,UAAY33B,aAAagzB,oBAAoBC,eAG/CtE,WAEA+I,UAFA/I,WACOsF,eACPyD,UADAhoJ,MAGAk/I,aAEA+I,UAFA/I,aACQsE,mBACRyE,UADAhoJ,OAGa0rI,UAAqC4Y,eAA9CpF,QAA+B+I,WAAe3D,eAA1BnF,UACX+I,UAAuC3E,mBAAhDrE,QAA+BiJ,aAAiB5E,mBAA5BpE,UAEtBiJ,aAAejD,WAAWnG,WAAWE,SACrCmJ,YAAclD,WAAWlG,aAAaC,SACtCoJ,WAAa5c,UAAWvjK,KAAKsQ,IAAI4vK,YAAapB,aAAcgB,YAC5DM,YAAcL,UAAW//K,KAAKsQ,IAAI2vK,aAAcpB,cAAemB,cAErE,OACIG,oBACAC,sBACAC,sBACIxoJ,OAAQooJ,aACRroJ,MAAOsoJ,aAEXI,eACI1oJ,MAAOolJ,WAAWmD,WAClBtoJ,OAAQmlJ,WAAWoD,aAEvBG,YAAa1J,WACb2J,WAAY1J,cCmEa4I,CAAoBvjL,KAAM0iL,aAAcC,aAMjE,OALAW,iBAAiBryB,OAASA,OAC1BjxJ,KAAK+yK,UACDC,kCACAsQ,oCAEGtjL,iEAzIP,OAAO9G,OAAO4T,WACVw2K,kBACIryB,OAAQjxJ,KAAKm7F,gBAAgB81D,OAC7BgzB,YAAa,EAAG,EAAG,GACnBD,WAAY,EAAG,EAAG,IAEtBhR,kBACIqQ,YAAa,EACbD,SAAU,EACVhwC,UAAY9wG,OAASiwB,UAAYf,8EAazC,OAAO+jH,2EAWP,OAAOJ,8DAWP,OAAO,IAAI4L,WAAW,KAAM,KAAM/gL,KAAK63J,qBAAsB73J,KAAKm7F,oNE5E1E,0CAAMmpF,WAASC,6BAAAC,cAAA,GAAA9oK,ObqOI,MarOJ,KAAAA,ObsOK,QA0BM,MahQX6oK,6BAAAC,WAAA,GAAA9oK,ObqOI,MarOJ,KAAAA,Ob+PO,UA5BA,UanOP6oK,6BAAAC,WAAA,GAAA9oK,ObqOI,MarOJ,KAAAA,ObuOM,SAyBK,MahQX6oK,6BAAAC,WAAA,GAAA9oK,ObyOO,SazOP,KAAAA,ObsOK,QAFD,OapOJ6oK,6BAAAC,WAAA,GAAA9oK,ObyOO,SazOP,KAAAA,Ob+PO,UAtBA,UazOP6oK,6BAAAC,WAAA,GAAA9oK,ObyOO,SazOP,KAAAA,ObuOM,SAHF,OapOJ6oK,6BAAAC,WAAA,GAAA9oK,ObwOO,SaxOP,KAAAA,ObsOK,QA0BM,MahQX6oK,6BAAAC,WAAA,GAAA9oK,ObwOO,SaxOP,KAAAA,Ob+PO,UA5BA,UanOP6oK,6BAAAC,WAAA,GAAA9oK,ObwOO,SaxOP,KAAAA,ObuOM,SAyBK,MahQX8oK,YAgBTC,oCAAwB,SAAxBA,sBAAyBC,YAAaC,YAAaxjH,MAAOyjH,YAAe,IAEvExwI,MAGAwwI,WAHAxwI,MACA3Y,MAEAmpJ,WAFAnpJ,MACA9B,MACAirJ,WADAjrJ,MAEE08H,YAAW,GAAA36I,OAAM+f,MAAN,OAAA/f,OAAiBie,OAElC+qJ,YAAY57K,QAAQ,SAAC+7K,aAZG,SAAtBC,oBAAuB3jH,MAAO/sB,MAAO94C,KAAMq+B,OAC7CwnC,MAAMxnC,MAAN,UAAAje,OAAsBpgB,MAAtB,GAAAogB,OAAiCie,MAAjC,KAAAje,OAA0C04B,QAYtC0wI,CAAoB3jH,MAAOwjH,YAAYE,YAAczwI,MbgOhC,gBahOuDywI,WAAYxuB,gBAiBnF0uB,2BAAe,SAAfA,aAAgB5jH,MAAO8vF,OAAQ71I,IAAKK,QAC7C,IAAMupK,gBAdY,SAAhBC,cAAiB9jH,MAAOyjH,YAAe,IAEtCvxC,eAGDuxC,WAHCvxC,eACDC,eAEAsxC,WAFAtxC,eACAC,iBACAqxC,WADArxC,iBAEF,OACIn4H,IAAK,SAAAA,MAAA,OAAMqpK,qCbiMA,MAGG,UapMkCpxC,eAAgBlyE,MAAOyjH,aACvEnpK,OAAQ,SAAAA,SAAA,OAAMgpK,qCbiMF,OACC,SalMsCnxC,eAAgBnyE,MAAOyjH,aAC1EryH,OAAQ,SAAAA,SAAA,OAAMkyH,qCbgMF,OACC,QAFF,MAGG,UalMkDlxC,iBAAkBpyE,MAAOyjH,cAKrEK,CAAc9jH,MAAO8vF,QACvCi0B,aAAeZ,UAAS,GAAA5oK,OAAI44J,iBAAiBD,WAAWj5J,MAAhC,KAAAM,OAAyC84J,oBAAoB/4J,UACvFypK,cACAF,gBAAgBE,+LC9CxB,IAAMC,WAAa,SAAbA,WAAap0K,KAAG,OAAIlI,MAAMG,KAAKH,MAAMkI,IAAIrP,QAAQoE,SAEjDs/K,YAAc,SAAdA,YAAenzG,MAAOozG,WAAmC,IAAxBC,eAAwBlgL,UAAA1D,OAAA,QAAA6L,IAAAnI,UAAA,GAAAA,UAAA,MAEvDyhB,MAEAy+J,eAFAz+J,MACAshE,MACAm9F,eADAn9F,MAEEp3E,IAAMs0K,UAAUlqK,QAChBoqK,UAAYtzG,MAAM92D,QAClBqqK,UAAYD,UAAUpqK,QAS5B,GANA0L,MAAQA,OAAShe,MAAMG,KAAKH,MAAMkI,IAAIrP,QAAQoE,QAG9CqiF,MAAQA,OAAU,SAAAv+E,GAAC,OAAIA,GAGE,IAArB27K,UAAU7jL,OAAc,CACxB,IAAMsqH,WAIN,OAHAnlG,MAAM/d,QAAQ,SAACpO,GACXsxH,QAAO9lH,KAAK6K,IAAIrW,OAEX8qL,oBAAWD,UAAWx0K,IAAKA,IAAKi7G,SAQ7C,IALA,IAAIy5D,OAAS,GACTC,SAAW,GACT15D,UAGGxzH,EAAIquB,MAAMnlB,OAAS,EAAGlJ,GAAK,EAAGA,IAAK,CAExC,IAAMmtL,cAAgB9+J,MAAMruB,GAO5B,IAJAitL,QAAUt9F,MAAMp3E,IAAI40K,oBACpBD,UAAYv9F,MAAMo9F,UAAUI,iBAIxB35D,OAAO25D,eAAiB,SACrB,CACHD,SAAW,GAGX,IAAK,IAAIxqK,EAAI1iB,EAAG0iB,EAAI2L,MAAMnlB,OAAQwZ,IAAK,CACnC,IAAM0qK,QAAU/+J,MAAM3L,GAChB2qK,QAAU90K,IAAI60K,SAEpB55D,OAAO45D,SAAWC,QAGlBN,UAAUK,SAAWC,QACrBH,SAAWD,SAIvB,IAAMK,aAIN,OAHAj/J,MAAM/d,QAAQ,SAACpO,GACXorL,UAAU5/K,KAAK8lH,OAAOtxH,OAEjB8qL,oBAAWD,oBAAWx0K,IAAK+0K,YAGlCC,eAAiB,SAAjBA,eAAkBl8J,QAASI,OAAQiyB,OAAQ0wF,MAG7C,IAAK/iH,QACD,OAAO,kBAAM,GAGjB,IAAMsxJ,YACF//J,IAAK,SAAAA,IAAA5G,OAAK,OAAI0nC,OAAO0wF,KAAOp4H,QAAU0nC,OAAO0wF,KAAOp4H,OAAOyV,SAC3DxO,OAAQ,SAAAA,OAAAjH,OAAK,OAAI0nC,OAAO0wF,MAAM3iH,OAASzV,SAG3C,OAAO,SAAClZ,MAIJ,IAHA,IAAIkZ,MAAQ,EACRwxK,QAAS,GAELA,QAC4B,OAA5B7K,WAAW7/K,MAAMkZ,OACjBA,OAAS,EAETwxK,QAAS,EAGjB,OAAOxxK,QAITyxK,YAAc,SAAdA,YAAe/pI,OAAQr1B,OAAT,OAChBzL,IAAK,SAAAA,MACD,IAAI62D,SACJ,OAAO/1B,OAAOj0C,IAAI,SAACvN,GAAM,IAAAwrL,aAIbd,YAAYnzG,MAAOv3E,GAAKytF,MAAO,SAAAA,MAAAjnF,KAAG,OAAIA,IAAI6d,WAAW8H,cAFrD0+J,UAFaW,aAEbX,UACAx0K,IAHam1K,aAGbn1K,IAIR,OADAkhE,MAAQszG,UACDx0K,OAGf0K,OAAQ,SAAAA,SACJ,IAAIw2D,SACEk0G,cAiBN,OAhBAjqI,OAAOx6C,QAAUw6C,OAAO,GAAGpzC,QAAQ,SAACs5D,KAAM2yE,UACtC,IAAMqxC,aACNlqI,OAAOpzC,QAAQ,SAACsS,KACZgrK,UAAUlgL,KAAKkV,IAAI25H,aAH4B,IAAAsxC,cAQ3CjB,YAAYnzG,MAAOm0G,WAAaj+F,MAAO,SAAAA,MAAAjnF,KAAG,OAAIA,IAAI6d,WAAW8H,cAF7D0+J,UAN2Cc,cAM3Cd,UACAx0K,IAP2Cs1K,cAO3Ct1K,IAERkhE,MAAQszG,UAERrpI,OAAOpzC,QAAQ,SAACsS,IAAK+wH,UACjBg6C,WAAWh6C,UAAYg6C,WAAWh6C,cAClCg6C,WAAWh6C,UAAU4I,UAAYhkI,IAAIo7H,cAGtCg6C,cAITG,cAAgB,SAAhBA,cAAgBH,YAAU,OAC5B/qK,IAAK,SAAAA,MACD,IAAMmrK,SAUN,OATAJ,WAAWr9K,QAAQ,SAACsS,IAAKorK,MACrBD,MAAMC,MAAQD,MAAMC,UACpBprK,IAAItS,QAAQ,SAACgnE,IAAKt3E,GACd,GAAI2tL,WAAWK,MAAMhuL,GAAI,CACrB,IAAMiuL,SAAWV,eAAej2G,IAAKt3E,EAAG2tL,WAAYK,KAAnCT,CAAyC,OAC1DU,UAAYF,MAAMC,MAAMtgL,KAAKugL,eAIlCF,OAEX9qK,OAAQ,SAAAA,SAAA,OAAM0qK,WAAWl+K,IAAI,SAACmT,IAAKorK,MAAN,OAAeprK,IAAInT,IAAI,SAAC6nE,IAAKt3E,GAAN,OAAYutL,eAAej2G,IAAKt3E,EAAG2tL,WAAYK,KAAnCT,CAAyC,YACxFryK,OAAO,SAAAo8D,KAAG,OAAY,IAARA,WAG7B42G,SAAW,SAAXA,SAAWC,WAAS,OACtBvrK,IAAK,SAAAA,IAAC8gC,QACF,OAAIyqI,UACOxB,WAAWjpI,OAAO,IAAI53B,UAE1B6gK,WAAWjpI,OAAO,KAE7BzgC,OAAQ,SAAAA,OAACygC,QACL,OAAIyqI,UACOxB,WAAWjpI,QAAQ53B,UAEvB6gK,WAAWjpI,WAIpB0qI,wBAAsBC,0BAAAC,yBAAA,GAAAprK,OdoET,McpES,OAEpBqrK,YAAaL,UAAS,GAAT,OACbM,gBAAiB,SAAAA,kBAAA,OAAef,YAAW1+K,WAAX,EAAAnC,WAAA,QAChC6hL,UAAW,SAAAA,YAAA,OAAeX,cAAa/+K,WAAb,EAAAnC,WAAA,UAJNyhL,0BAAAC,sBAAA,GAAAprK,OduEN,ScvEM,OAOpBqrK,YAAaL,UAAS,GAAT,OACbM,gBAAiB,SAAAA,kBAAA,OAAef,YAAW1+K,WAAX,EAAAnC,WAAA,QAChC6hL,UAAW,SAAAA,YAAA,OAAeX,cAAa/+K,WAAb,EAAAnC,WAAA,UATNyhL,0BAAAC,sBAAA,GAAAprK,OdwEN,ScxEM,OAYpBqrK,YAAaL,UAAS,GAAT,IACbM,gBAAiB,SAAAA,kBAAA,OAAef,YAAW1+K,WAAX,EAAAnC,WAAA,KAChC6hL,UAAW,SAAAA,YAAA,OAAeX,cAAa/+K,WAAb,EAAAnC,WAAA,OAdNyhL,0BAAAC,sBAAA,GAAAprK,OdwEN,ScxEM,OAiBpBqrK,YAAaL,UAAS,GAAT,IACbM,gBAAiB,SAAAA,kBAAA,OAAef,YAAW1+K,WAAX,EAAAnC,WAAA,KAChC6hL,UAAW,SAAAA,YAAA,OAAeX,cAAa/+K,WAAb,EAAAnC,WAAA,OAnBN0hL,uBAuBtBI,oBAAsB,SAAtBA,oBAAuB5rL,MACzB,IAAM2uH,UAAY28D,uBAAuBtrL,MACzC,OAAI2uH,YAIA88D,YAAa,SAAAA,cAAA,OAAM,MACnBC,gBAAiB,SAAAA,gBAAA9qI,QAAM,OAAI,kBAAMA,SACjC+qI,UAAW,SAAAA,YAAA,OAAM,kBAAM,SA+B/B,IAqBME,YAAc,SAAdA,YAAehmH,MAAOolH,MAAO15K,OAAQvR,MACvC,IAAMmhL,YAAc5vK,OAAOokJ,OAAOx1H,MAElC0lC,MAAMpO,KAAKz3D,KAAM,SAAU8mE,KAAM2yE,UAC7B,IAAMhmB,KAAOw3D,MAAMnkH,KAAK+pE,UAAU4I,UAIlC,OA7ByB,SAA3BqyC,yBAA4Br4D,KAAMq7B,YAAaqyB,aAAgB,IAAAnoJ,KAC3DoH,OAAS0uH,YAAY72C,cACrB93E,MAAQ2uH,YAAY92C,aAE1B,OAAAuzE,0BAAAvyJ,QdaoB,UcbpB,WAEQyzD,6BAAc/nF,MAAM25B,MAAM,SAA1B,GAAAje,OAAuCggB,OAAS+gJ,YAAhD,OACI1tD,KAAO,IACPhnC,6BAAc/nF,MAAM25B,MAAM,SAA1B,GAAAje,OAAuCggB,OAASqzF,KAAO0tD,YAAe1tD,KAAtE,OACAq7B,YAAYyB,kBAAkBpwH,MAAOC,OAASqzF,SAL1D83D,0BAAAvyJ,KdcoB,UcdpB,WASYy6F,KAAO,GACPq7B,YAAYyB,kBAAkBpwH,MAAQszF,KAAO0tD,aAAe1tD,KAAO,GAAIrzF,QAE3EqsD,6BAAc/nF,MAAM25B,MAAM,SAA1B,GAAAje,OAAuCggB,OAAvC,SAZRpH,KAwBI8yJ,CAAyBr4D,KAFL3sD,KAAKgoF,YAEmBqyB,aAAanhL,MAAMtB,KAAKgG,KAApEonL,GACOr4D,QAITs4D,gBAAcR,0BAAAS,mBAAA,GAAA5rK,Od3BD,Mc2BC,MACF,MADEmrK,0BAAAS,gBAAA,GAAA5rK,Od3BD,Mc2BC,MAEF,SAAAwF,IAAA,QAAAonD,KAAAljE,UAAA1D,OAAIkgB,OAAJ,IAAA/Y,MAAAy/D,MAAAC,KAAA,EAAAA,KAAAD,KAAAC,OAAI3mD,OAAJ2mD,MAAAnjE,UAAAmjE,MAAA,OAAe4+G,YAAW5/K,WAAX,EAAeqa,OAAflG,QdjBT,eceJmrK,0BAAAS,gBAAA,GAAA5rK,Od3BD,Mc2BC,MAGF,MAHEmrK,0BAAAS,gBAAA,GAAA5rK,OdvBE,ScuBF,MAIC,SAAAwF,IAAA,QAAAunD,MAAArjE,UAAA1D,OAAIkgB,OAAJ,IAAA/Y,MAAA4/D,OAAAC,MAAA,EAAAA,MAAAD,MAAAC,QAAI9mD,OAAJ8mD,OAAAtjE,UAAAsjE,OAAA,OAAey+G,YAAW5/K,WAAX,EAAeqa,OAAflG,QdpBZ,ecgBJmrK,0BAAAS,gBAAA,GAAA5rK,OdvBE,ScuBF,MAKC,MALDmrK,0BAAAS,gBAAA,GAAA5rK,OdvBE,ScuBF,MAMC,SAAAwF,IAAA,QAAAuvD,MAAArrE,UAAA1D,OAAIkgB,OAAJ,IAAA/Y,MAAA4nE,OAAAC,MAAA,EAAAA,MAAAD,MAAAC,QAAI9uD,OAAJ8uD,OAAAtrE,UAAAsrE,OAAA,OAAey2G,YAAW5/K,WAAX,EAAeqa,OAAflG,QdtBZ,ecgBJmrK,0BAAAS,gBAAA,GAAA5rK,OdxBE,ScwBF,MAOC,MAPDmrK,0BAAAS,gBAAA,GAAA5rK,OdxBE,ScwBF,MAQC,SAAAwF,IAAA,QAAA40D,MAAA1wE,UAAA1D,OAAIkgB,OAAJ,IAAA/Y,MAAAitE,OAAAE,MAAA,EAAAA,MAAAF,MAAAE,QAAIp0D,OAAJo0D,OAAA5wE,UAAA4wE,OAAA,OAAemxG,YAAW5/K,WAAX,EAAeqa,OAAflG,QdvBZ,eceJmrK,0BAAAS,gBAAA,GAAA5rK,OdxBE,ScwBF,MASC,MATD4rK,4TChQCC,wkBAKb,MAAM,IAAI73K,MAAMq/D,UAAUy4G,sDAO1B,MAAM,IAAI93K,MAAMq/D,UAAUy4G,wDAO1B,MAAM,IAAI93K,MAAMq/D,UAAUy4G,wDAO1B,MAAM,IAAI93K,MAAMq/D,UAAUy4G,gOCvB3B,ICJM55E,qCAAO,OACPC,sCAAQ,QACRH,uCAAS,SACTC,oCAAM,MAEN85E,4CAAc,OASdC,iBAAS,SAGTC,qBAAO,OACPC,qBAAO,OACPC,0BAAkB,gBAClBC,iBAAS,SACTC,0BAAY,YACZC,UAAY,WACZC,2BAAS,SACTC,cAAgB,eCzBhBC,eAAO,OAEPC,eAAO,OAEPC,KAAO,OAEPC,MAAQ,6UCsHNC,uBArGX,SAAAA,WAAa17K,kKAAQ27K,CAAAxoL,KAAAuoL,YACjBvoL,KAAK2lF,IAAMp7E,cAEX,IAAMmb,UAAYupD,kBAAmBjvE,KAAK4lB,YAAYu1E,iBACtDn7F,KAAKqwF,QAAUphB,eAAevpD,UAAW7Y,YAEzC7M,KAAKkjG,OAAS,uSA8Bd,MAAM,IAAIxzF,MAAMq/D,UAAUC,gDAU1B,MAAM,IAAIt/D,MAAMq/D,UAAUC,8DAS1B,MAAM,IAAIt/D,MAAMq/D,UAAUC,0EAU1B,MAAM,IAAIt/D,MAAMq/D,UAAUC,8EAW1B,MAAM,IAAIt/D,MAAMq/D,UAAUC,wDAU1B,MAAM,IAAIt/D,MAAMq/D,UAAUC,wDAU1B,MAAM,IAAIt/D,MAAMq/D,UAAUC,iDAhF1B,MDzCc,iECoDd,6MC3CD,gCAAMs2C,+BAAcmjE,8BAAAC,mBHPL,UGOKD,8BAAAE,qBAElBC,qCAAiB,GAFCH,8BAAAE,kBAGlBC,sCAAkB,GAHAH,8BAAAE,kBAIlBC,oCAAgB,GAJEH,8BAAAE,kBAKlBC,uCAAmB,GALDD,oBAAAF,8BAAAC,gBHFA,aGSE,GAPFD,8BAAAC,gBHEF,YGME,GARAD,8BAAAC,gBHAG,gBGSE,MATLD,8BAAAC,gBHCD,YAKJ,UGNKD,8BAAAC,gBHKP,QGME,GAXKD,8BAAAC,gBHmBF,WGPE,GAZAD,8BAAAC,gBHoBF,gBGPE,GAbAD,8BAAAC,gBHqBH,WGPE,MAdCA,8LCP3B,IAAMG,eACFn1J,SACA6/E,eACAD,cACAzmG,QACIqhE,aAAc,SAAAA,aAAC5xC,QAAS7iC,OAAV,OAAoBw1E,eAAe3yC,QAAQ+zD,QAAS52F,SAEtE67G,gBACAwzE,cACArkK,WAoBSo2E,sCAAKkuF,yBAAAC,+BACbX,KAAOp5G,gBAjBRjkE,QACAi+K,WACAp8K,UACA+qF,MACI1pB,aAAc,SAAAA,aAAC5xC,QAAS7iC,OAAV,OAAoBP,OAAO4T,OAAOwvB,QAAQwwH,MAAOrzJ,SAEnE2jJ,iBACAx0I,UACA+yC,aACA+uD,YACA7J,iBAOkCgoF,gBADpBE,yBAAAC,4BAEbb,eAAOl5G,gBAJRi6G,cAIkCL,gBAFpBE,yBAAAC,4BAGbZ,eAAOS,eAHME,yBAAAC,4BAIbV,MAAQO,eAJKG,0lCCdlB,IA+MeljC,gCAvKX,SAAAA,SAAaj5I,QAAQ,IAAAqI,MAAA,8JAAAi0K,CAAAnpL,KAAA8lJ,WACjB5wI,iLAAAk0K,CAAAppL,KAAAqpL,yBAAAvjC,UAAAntJ,KAAAqH,KAAM6M,UAED+qG,MAAQ,KACb1iG,MAAKo0K,aAAe,KACpBp0K,MAAKq0K,YAAc,KACnBr0K,MAAKwhK,cAAgB,KAErBnoG,sBAAsBi7G,gEAAAt0K,QAAM2lF,qCAAMutF,iBARjBlzK,8XARFqzK,gSAoCf,OAAOvoL,KAAKykB,SAASiU,iDAoBrB,OACIp9B,KAAM8sL,eACNx2H,KAAM5xD,KAAKykB,SAASiI,uEAyBxB,OAHK1sB,KAAKs1G,gBACNt1G,KAAKs1G,aAjHQ,SAAnBm0E,iBAAoBntJ,SACtB,IAAIotJ,aACAC,cACE/3H,KAAOt1B,QAAQ7X,SAHamxF,gBAO9Bt5E,QAAQzvB,SAFR+8K,WAL8Bh0E,gBAK9Bg0E,WACAnrF,OAN8BmX,gBAM9BnX,OAN8BorF,sBAW9Bj4H,KAAK69F,kBAFLh0H,MAT8BouJ,sBAS9BpuJ,MACAC,OAV8BmuJ,sBAU9BnuJ,OAWJ,OANa,IADLk2B,KAAK/kD,SADLsxF,MAGJwrF,cAAgB9lL,KAAKwN,MAAMqqB,OAAS+iE,OAAOn8D,IAAMm8D,OAAOjtC,OAASo4H,YACjEF,aAAe7lL,KAAKwN,MAAMoqB,MAAQgjE,OAAO/4D,KAAO+4D,OAAO94D,MAAQikJ,cAE9DF,aAAgCjuJ,MAAlBkuJ,cAAyBjuJ,SAGxCD,MAAOiuJ,aACPhuJ,OAAQiuJ,eA0FcF,CAAiBzpL,OAEhCA,KAAKs1G,2EAYG75E,MAAOC,QACtB17B,KAAKszG,WAAW73E,OAChBz7B,KAAKuzG,YAAY73E,QAFa,IAAAitE,aAM1B3oG,KAAK6M,SAFL4xF,OAJ0BkK,aAI1BlK,OACA+U,SAL0B7K,aAK1B6K,SAUJ,OAPI/3E,OAASC,QACT17B,KAAKykB,SAASonI,kBAAkBpwH,MAAOC,OAAQ+iE,OAAQ+U,UACvDxzG,KAAKykB,SAAS6wF,aAAa,OAE3Bt1G,KAAKykB,SAASsxI,oBAElB/1J,KAAKs1G,aAAa,MACXt1G,2CAUuB0zB,OAC9B,IAAKA,MACD,OAAO1zB,KAEX,IAAM4xD,KAAO5xD,KAAKykB,SACZ8uF,YAAcvzG,KAAKuzG,cACnBD,WAAatzG,KAAKszG,aAEpB7U,OACAz+F,KAAK6M,SADL4xF,OAGAn8D,IAIAm8D,OAJAn8D,IACAkvB,OAGAitC,OAHAjtC,OACA9rB,KAEA+4D,OAFA/4D,KACAC,MACA84D,OADA94D,MAdiCmkJ,cAmBjCl4H,KAAK/kD,SAFLsxF,KAjBiC2rF,cAiBjC3rF,KACA4G,YAlBiC+kF,cAkBjC/kF,YAEEglF,WAAa/hG,YAAYD,6BAAcr0D,OAAQ,OAAQ1zB,MAA/B,GAAA0b,OAAyC+rK,4CAAzC,KAAA/rK,OL5Jb,cK6JX82C,UAAYw1B,YAAY+hG,WAAY,OAAQ,GAArB,GAAAruK,OAA4B+rK,4CAA5B,oBAkB7B,OAjBAj1H,UAAUorB,QAAV,GAAAliE,OAAqB+rK,4CAArB,oBAAA/rK,OAAmDqpF,cAAe,GAElE/kG,KAAK0zB,MAAMA,OACN4/E,YACD9gD,UAAUO,KLhLD,QKgLT,GAAAr3C,OAAyB,EAAzB,OAEC63F,aACD/gD,UAAUO,KLpLA,SKoLV,GAAAr3C,OAA0B,EAA1B,OAEJquK,WAAWpwJ,MLrLE,QKqLb,GAAAje,OAA2ByiF,KAAOt6F,KAAKwN,MAAMiiG,YAAc,EAA3D,OACiB35E,MLvLH,SKsLd,GAAAje,OACkCyiF,KAAOt6F,KAAKwN,MAAMkiG,aAAe,EADnE,OAEiB55E,MAAM,aAAc2I,KACpB3I,MAAM,gBAAiB63B,QACvB73B,MAAM,cAAe+L,MACrB/L,MAAM,eAAgBgM,OAEvCisB,KAAKl+B,MAAM8+B,UAAU/hC,QACd+hC,kDAYP,OAFAxyD,KAAKykB,UAAYzkB,KAAKykB,SAAS2iB,SAC/BpnC,KAAK0zB,SAAW1zB,KAAK0zB,QAAQ0T,SACtBpnC,sCAjJP,OAAOooL,8CAoBP,OAAOpoL,KAAK2lF,4DAwBZ,OAAO2/B,unCCqCAygC,iCAjIX,SAAAA,UAAal5I,QAAQ,IAAAqI,MAAA,+JAAA80K,CAAAhqL,KAAA+lJ,WACjB7wI,oLAAA+0K,CAAAjqL,KAAAkqL,0BAAAnkC,WAAAptJ,KAAAqH,KAAM6M,SAEN0hE,sBAAsB47G,kEAAAj1K,QAAM2lF,qCAAMytF,QAHjBpzK,iYAPDqzK,oSA8BhB,OAAOvoL,KAAK04B,iDAgCZ,OACIp9B,KAAMgtL,iEAYV,OAAKtoL,KAAKs1G,eAMHt1G,KAAKs1G,gBAJJ75E,MAAOz7B,KAAKy7B,OAAS,EACrBC,OAAQ17B,KAAK07B,QAAU,+DAchBD,MAAOC,QAItB,OAHA17B,KAAKszG,WAAW73E,OAChBz7B,KAAKuzG,YAAY73E,QACjB17B,KAAKs1G,aAAa,MACXt1G,2CAWuB0zB,OAC9B,GAAIA,MAAO,KACCiG,MAAU35B,KAAK6M,SAAf8sB,MAER35B,KAAK0zB,MAAMA,OACX,IAAMiF,UAAYovD,6BAAcr0D,OAC1BvL,KAAO6/D,YAAYrvD,UAAW,OAAQ34B,KAAK04B,KACjDvQ,KAAKy1D,QAAL,GAAAliE,OAAgB+rK,4CAAhB,KAAA/rK,ONnGc,eMmG+B,GAC7CyM,KAAKwR,MAAM,QAAX,GAAAje,OAAuB1b,KAAKszG,aAA5B,OACAnrF,KAAKwR,MAAM,SAAX,GAAAje,OAAwB1b,KAAKuzG,cAA7B,OACAprF,KAAK+1D,KAAK,IAENvkD,OACAgvD,WAAWxgE,KAAMwR,OAEvB,OAAO35B,6CAWT,OADAA,KAAK0zB,SAAW1zB,KAAK0zB,QAAQ0T,SACtBpnC,sCAjHP,OAAOsoL,qCAgCP,OAAOtoL,KAAK2lF,4DAXZ,OAAO2/B,ooCC5Cf,IAAM8kE,aAAe,SAAfA,aAAgB9tJ,SAClB,IAAM7X,OAAS6X,QAAQ7X,SADO4lK,oBAK1B/tJ,QAAQwsJ,aAFAwB,eAHkBD,oBAG1B3uJ,OACO6uJ,cAJmBF,oBAI1B5uJ,MAJ0Bm6E,gBAS3Bt5E,QAAQzvB,SAFR4xF,OAP2BmX,gBAO3BnX,OACA6R,SAR2BsF,gBAQ3BtF,SAGC5qE,KAIC+4D,OAJD/4D,KACAC,MAGC84D,OAHD94D,MAIE6kJ,aADD/rF,OAFDn8D,IAECm8D,OADDjtC,OAEgC84H,eAC9BG,YAAc/kJ,KAAOC,MAAQ4kJ,cAC7Bh3E,YAAcj3E,QAAQi3E,cAAgBi3E,aACtCl3E,WAAah3E,QAAQg3E,aAAem3E,YACpCz5E,aAAe10E,QAAQ5gC,eAAes1G,aAO5C,OALAA,aAAah3E,SAASsC,QAAQw7H,iBAE7BxnD,UAAYh0E,QAAQ4sJ,UAAUl4E,aAAap0E,aAAanY,OAAQ6uF,WAAYC,aAAa,IAC1FjD,UAAYh0E,QAAQ4sJ,UAAUl4E,aAAap0E,aAAanY,OAAQ8uF,YAAaD,YAAY,IAElFh3E,SAiQI81G,oCArLX,SAAAA,SAAavlI,OAAQnR,cAAc,IAAAwZ,8JAAAw1K,CAAA1qL,KAAAoyI,WAC/Bl9H,iLAAAy1K,CAAA3qL,KAAA4qL,yBAAAx4C,UAAAz5I,KAAAqH,KAAM6M,UAEDsrG,cAAgBz8G,aACrBwZ,MAAKwuJ,WAAaxuJ,MAAKm7E,QAAQvvD,YAClB5rB,MAAKm7E,QAAQ/0F,OAASosL,iBAAtB,GAAAhsK,OAAkC+rK,4CAAlC,KAAA/rK,OAAiDgsK,iBAAjD,YAAAhsK,OAAoE+rK,4CAApE,KAAA/rK,OAAmFysK,eAAnF,UACbjzK,MAAK4iJ,eAAiBruE,qCAAsB1B,6BAAc,QAAS7yE,MAAKwuJ,YACxExuJ,MAAKijG,cAAcnH,aAAah3E,SAAS9kB,MAAK4iJ,gBAC9CvpF,sBAAsBs8G,gEAAA31K,QAAM2lF,qCAAMstF,iBAClC,IAAM3xG,MAAQthE,MAAKijG,cAAcnH,aAAahxE,WAAW,KAT1B,OAU/B9qB,MAAK4zK,YAAartJ,MAAO53B,KAAKwN,MAAoB,EAAdmlE,MAAM/6C,MAAY,GAAIC,OAAQ73B,KAAKwN,MAAMmlE,MAAM96C,OAAS,KAC5F0uJ,aAAaS,gEAAA31K,SAXkBA,8XARhBqzK,gSAuCf,OAAOvoL,KAAKykB,6DAqBZ,OAAOzkB,KAAKm4G,4DAUZ,OACI93G,KAAML,KAAKykB,SACXnpB,KAAM6sL,0EA0BV,OAHKnoL,KAAKs1G,gBACNt1G,KAAKs1G,aA1JQ,SAAnBw1E,iBAAoBxuJ,SAAY,IAC1B00E,aAAiB10E,QAAQ5gC,eAAzBs1G,aAD0B+5E,qBAK9BzuJ,QAAQwsJ,aAFAwB,eAHsBS,qBAG9BrvJ,OACO6uJ,cAJuBQ,qBAI9BtvJ,MAJ8B26E,iBAW/B95E,QAAQzvB,SAJR4xF,OAP+B2X,iBAO/B3X,OACAN,KAR+BiY,iBAQ/BjY,KACAqkE,SAT+BpsD,iBAS/BosD,SACA8B,cAV+BluD,iBAU/BkuD,cAGA5+H,KAIC+4D,OAJD/4D,KACAC,MAGC84D,OAHD94D,MAIG6kJ,aADF/rF,OAFDn8D,IAECm8D,OADDjtC,OAEiC84H,eAC9BG,YAAc/kJ,KAAOC,MAAQ4kJ,cAC7Bh3E,YAAcj3E,QAAQi3E,cAAgBi3E,aACtCl3E,WAAah3E,QAAQg3E,aAAem3E,YACpChmK,OAAS6X,QAAQ7X,SACjB+xD,MAAQl6C,QAAQ4sJ,YAChB8B,QAAU,IAAIniL,MAAMy7J,eAAejmH,KAAK,KAAKt7C,KAAK,IAClDkoL,cAAgBj6E,aAAahxE,WAAWgrJ,SAS9C,GAPA1uJ,QAAQzvB,QAASyjG,UAAU,IACvB95B,MAAM/6C,OAAS63E,YAAc,IAAMkvD,WACnChsF,MAAM96C,OAAS86C,MAAM72C,cAAgB6iI,UAErClvD,YAAcA,WAAa98B,MAAM/6C,QACjC+6C,MAAM/6C,MAAQwvJ,cAAcxvJ,OAE5B63E,YAAcA,WAAazvG,KAAKsQ,IAAI82K,cAAcxvJ,MAAO+6C,MAAM92C,cAAe,CAC9E,IAAMwrJ,WAAal6E,aAAap0E,aAAanY,OAAQ8uF,YAAa03E,cAAcvvJ,QAAQ,GACxF86C,MAAM/6C,MAAQyvJ,WAAWxvJ,OACzB86C,MAAM96C,OAASwvJ,WAAWzvJ,MAC1Ba,QAAQzvB,QAASyjG,UAAU,IAC3Bh0E,QAAQ4sJ,UAAUgC,YAGtB,OAAI/sF,MAEI1iE,MAAO53B,KAAKmoB,KAAKwqD,MAAM/6C,OAASgvJ,YAChC/uJ,OAAQ73B,KAAKmoB,KAAKwqD,MAAM96C,QAAU8uJ,eAGtC/uJ,MAAO,EACPC,OAAQ,GAyGcovJ,CAAiB9qL,OAEhCA,KAAKs1G,2EAWG75E,MAAOC,QAKtB,OAJA17B,KAAKszG,WAAW73E,OAChBz7B,KAAKuzG,YAAY73E,QACjB0uJ,aAAapqL,MACbA,KAAKs1G,aAAa,MACXt1G,2CAWH0zB,OACJ,IAAM4/E,WAAatzG,KAAKszG,aAClBC,YAAcvzG,KAAKuzG,cAFd5K,aASP3oG,KAAK6M,SALL4xF,OAJOkK,aAIPlK,OACAN,KALOwK,aAKPxK,KACAomE,cANO57D,aAMP47D,cACA4mB,UAPOxiF,aAOPwiF,UACA76E,SARO3H,aAQP2H,SAIJ,GADAtwG,KAAK0zB,MAAMA,OACPyqE,KAAM,CACN,IAAMxlE,UAAYovD,6BAAcr0D,OAC1BvL,KAAO6/D,YAAYrvD,UAAW,OAAQ34B,KAAK04B,IAAzB,GAAAhd,OAAiC+rK,4CAAjC,KAAA/rK,OP3NX,cO4NP0vK,OAAS7mB,eAAiBj0D,SAAW,SAAW,MAHhD+6E,gBAOFrrL,KAAKkpL,YAFLztJ,MALE4vJ,gBAKF5vJ,MACAC,OANE2vJ,gBAMF3vJ,OAGQ4uJ,eACRtqL,KAAK8oL,aADLptJ,OAEE4vJ,aACFhpJ,IAAK7G,MAAQ6uJ,eAAiB,EAC9BiB,OAAQ9vJ,MAAQ,EAAI6uJ,eACpB94H,OAAQ84H,gBAGZ3xJ,UAAUgB,MAAM,iBAAkByxJ,QAGlCjjK,KAAKy1D,QAAQ59E,KAAK0jK,YAAY,GAG9Bv7I,KAAKwR,MAAM,aAAcwxJ,WACzBhjK,KAAKwR,MAAM,UAAW,UACtBxR,KAAKwR,MAAM,YAAa22E,SAAQ,aAAA50F,OAAgBggB,OAAS,EAAzB,yBAAAhgB,OAC1B4vK,YAAYF,QADc,sBACgB,IAChDjjK,KAAKwR,MPjQI,QOiQS25E,WAAU,GAAA53F,OAAM43F,WAAN,MAAuB,SAClD3F,oCAAKD,uCAAQE,qCAAMC,uCAAO/kG,QAAQ,SAACxN,MAChCq9B,UAAUgB,MAAV,UAAAje,OAA0BpgB,MAA1B,GAAAogB,OAAqC+iF,OAAOnjG,MAA5C,SAEJ6sB,KAAKwR,MAAM,aAAcwxJ,WACzBhjK,KAAKwR,MAAM,UAAW,UAEtB35B,KAAKm4G,cAAcnH,aAAah3E,SAASh6B,KAAK83J,gBAC9C3vI,KAAK+1D,KAAKl+E,KAAKm4G,cAAcnH,aAAap0E,aAAa58B,KAAKykB,SAAU6uF,WAAYC,aAAa,GAAMlzG,MAEzG,OAAOL,6CAWP,OADAA,KAAK0zB,SAAW1zB,KAAK0zB,QAAQ0T,SACtBpnC,sCA5JP,OAAOmoL,8CAqBP,OAAOnoL,KAAK2lF,4DAkCZ,OAAO2/B,2mCC9Kf,0BAwMek/B,gCAnLX,SAAAA,SAAa33I,QAAQ,IAAAqI,MAAA,8JAAAs2K,CAAAxrL,KAAAwkJ,WACjBtvI,iLAAAu2K,CAAAzrL,KAAA0rL,yBAAAlnC,UAAA7rJ,KAAAqH,KAAM6M,UAED8+K,MAAQ,KACbz2K,MAAKg3F,QAAU,KACfh3F,MAAK43I,SACL53I,MAAK02K,cACL12K,MAAK22K,kBACL32K,MAAKu0D,QAAU,KACfv0D,MAAK42K,WAAa,KAClB52K,MAAK62K,SAAW,KAEhBx9G,sBAAsBy9G,gEAAA92K,QAAM2lF,qCAAMwtF,OAZjBnzK,8XAPFqzK,gSAuCf,OAAOvoL,KAAKykB,uDAsBZ,OACInpB,KAAM+sL,KACNtwK,KAAM/X,KAAKykB,SAASiI,YACpBu8J,QAASjpL,KAAKipL,6DAqBP,IAAA7zK,OAAApV,KACL+X,KAAO/X,KAAKykB,SAMlB,OALA1M,KAAKk0K,aACJjE,UAAWD,0BAAWH,qBAAME,iBAAQG,2BAAQN,qBAAMC,qBAAMC,0BAAiBK,eAAep/K,QAAQ,SAACorB,MAC9F9e,OAAK8e,SAAWnc,KAAKmc,MAAM9e,OAAK8e,WAEpCnc,KAAKm0K,cACElsL,+DAUP,IAAMipL,QAAUjpL,KAAKipL,UAEjBkD,cAAiB1wJ,MAAO,EAAGC,OAAQ,GAIvC,OAHIutJ,UACAkD,aAAelD,QAAQx5B,mBAEpB08B,uEAaP,OAHKnsL,KAAKs1G,gBACNt1G,KAAKs1G,aArIQ,SAAnB82E,iBAAoB9vJ,SACtB,IAAMzvB,OAASyvB,QAAQ7X,SAAS5X,SACxB4uB,MAAkB5uB,OAAlB4uB,MAAOC,OAAW7uB,OAAX6uB,OACf,OACID,MAAO53B,KAAKmoB,KAAKyP,OACjBC,OAAQ73B,KAAKmoB,KAAK0P,OAASY,QAAQ+vJ,kBAAkB3wJ,SAgI/B0wJ,CAAiBpsL,OAEhCA,KAAKs1G,2EAYG75E,MAAOC,QACtB,IAAM3jB,KAAO/X,KAAKykB,SAQlB,OANAzkB,KAAKszG,WAAW73E,OAChBz7B,KAAKuzG,YAAY73E,QACjB3jB,KAAKk0K,YACLl0K,KAAK0jB,MAAMA,OAAOC,OAAOA,OAAS17B,KAAKqsL,kBAAkB3wJ,QACzD3jB,KAAKm0K,cACLlsL,KAAKs1G,aAAa,MACXt1G,2CAUH0zB,OACJ,GAAIA,MAAO,CACP1zB,KAAK0zB,MAAMA,OACX,IAAM6/E,YAAcvzG,KAAKuzG,cACnBD,WAAatzG,KAAKszG,aAClB21E,QAAUjpL,KAAKipL,UACfc,WAAa/hG,YAAYD,6BAAcr0D,OAAQ,OAAQ,GAA/B,GAAAhY,OAAsC+rK,4CAAtC,KAAA/rK,ORhKjB,cQkKb,GAAIutK,QAAS,CACT,IAAMqD,WAAatkG,YAAY+hG,WAAY,OAAQd,SAArB,GAAAvtK,OAAkC+rK,4CAAlC,kBAA8Dh3J,OAC5Fw4J,QAAQ1kF,OAAO+nF,YAEnB,IAAM95H,UAAYw1B,YAAY+hG,WAAY,OAAQ,GAArB,GAAAruK,OAA4B+rK,4CAA5B,UAC7BsC,WAAWpwJ,MRtLF,QQsLT,GAAAje,OAA2B43F,WAA3B,OAA2C35E,MRvLjC,SQuLV,GAAAje,OAA4D63F,YAA5D,OACA/gD,UAAU74B,MRvLD,QQuLT,GAAAje,OAA0B43F,WAA1B,OACiB35E,MRzLP,SQwLV,GAAAje,OACkC63F,YAAcvzG,KAAKqsL,kBAAkB3wJ,OADvE,OAEA17B,KAAKykB,SAASiP,MAAM8+B,UAAU/hC,QAElC,OAAOzwB,6CAYP,OAFAA,KAAK0zB,SAAW1zB,KAAK0zB,QAAQ0T,SAC7BpnC,KAAKykB,SAAS2iB,SACPpnC,sCAzJP,OAAOqoL,oCAqBP,OAAOroL,KAAKykB,SAASiU,6DA0BrB,OAAO4sF,8NCzGR,IAAMinE,sBAAoBC,4BAAAC,yBCRN,aDSElE,aADIiE,4BAAAC,sBCPR,WDSEr6C,eAFMo6C,4BAAAC,sBCNR,WDSE3mC,WAHM0mC,4BAAAC,sBCJR,WDQEjoC,WAJMgoC,4BAAAC,sBCLP,YDUE1mC,YALK0mC,uBEYlBn7B,cAZM,SAAfA,eACF,IAAM1sB,IAAM2nD,qBACZ,OACIp6K,IAAK,SAAAA,IAACpY,IAAK4kB,KAIP,OAHI5kB,OAAO6qI,MACPA,IAAI7qI,KAAO4kB,KAER2yI,cAEXj4J,IAAK,SAAAA,MAAA,OAAMurI,OCPb8nD,wCAA8B,SAA9BA,4BAA+BC,YACjC,MAA0B,mBAAfA,YAA8BA,WAAWxzK,UjVwyCrC,SAAbyzK,WAAcziL,KAChB,IAAM0iL,aACFC,IAAK,QACLC,IAAK,OACLC,IAAK,OACLC,IAAK,SACLC,IAAK,SACLC,IAAK,UAGT,MAAO,GAAAzxK,OAAIvR,KAAO7J,QADE,YACmB,SAAA+H,OAAK,OAAIwkL,YAAYxkL,SiV/yCrDukL,CAAWD,cAFPA,cAuDTS,cAAgB,SAAhBA,cAAiBvgL,OAAQvR,KAAM01G,aAAcq8E,UAC/C,OAAKxgL,OA1Ca,SAAhBqlI,cAAiBrlI,OAAQygL,SAAUt8E,aAAcq8E,UACnD,IAAI5uF,UAEAC,QAGA7xF,OAHA6xF,QACA1C,YAEAnvF,OAFAmvF,YACAwmE,SACA31J,OADA21J,SAEEpgG,KAAOirH,UAAY,IAAIj7C,eAErB92I,KAAmB,UAAbgyL,SAAuB,SAAW,OACxCxsJ,UAAS,GAAAplB,OAAKsgF,YAAL,KAAAtgF,OAAoB4xK,SAApB,WAETt8E,4BAENnkG,QAAS21J,oBAAYsmB,YAAartJ,MAAO,EAAGC,OAAQ,IAYtD,OAVA0mC,KAAK39C,OAAOi6E,SACZt8B,KAAKmrH,cAAiB7xJ,OAAQ,EAAGD,MAAO,GAGpCgjE,OADA5xF,OAAOw1B,WAAasrE,mBACTrrE,IAAK,EAAGkvB,OAAQ3kD,OAAO21B,UAEvBF,IAAKz1B,OAAO21B,QAASgvB,OAAQ,GAE5C4Q,KAAKv1D,QAAS4xF,iBAGV/iE,OAAQ0mC,KAAKqtF,kBAAkB/zH,OAC/B0mC,WAgBG8vE,CACHrlI,OACAvR,KACA01G,aACAq8E,UANkB,ICrBbG,+BAAoB,SAApBA,kBAAqBC,aAAczsB,OAAQ1hE,YAAaouF,aACjE,IAAMC,WAEFjyJ,OAGA4jE,YAHA5jE,OACAD,MAEA6jE,YAFA7jE,MACAmyJ,aACAtuF,YADAsuF,aAGAvrJ,SAEAorJ,aAFAprJ,SACA6G,MACAukJ,aADAvkJ,MAGE2kJ,WA9CmB,SAAhBC,cAAiB9sB,QAC1B,IAAI+sB,UACEC,WACAp2F,KAAOopE,OAAOxO,iBAmBpB,OAjBAt5J,OAAO+b,QAAQ2iF,MAAM9uF,QAAQ,SAACuiI,UAC1B,IAAM1iG,MAAQ0iG,SAAS,GAAG,GACpBsrB,UAAYtrB,SAAS,GACrB4iD,WAAajtB,OAAOrK,aAE1B,GAAIs3B,WAAW1iL,OAASo9B,MAAO,KAAAulJ,cAIvBvlJ,MAAM97B,SAFNvR,KAFuB4yL,cAEvB5yL,KACA4qC,KAHuBgoJ,cAGvBhoJ,KAGEioJ,WAA6B,kBAATjoJ,MAAqBA,KAC/C6nJ,UAAY1uB,gBAAe,GAAA3jJ,OAAIpgB,KAAJ,KAAAogB,OAAYyyK,WAAZ,KAAAzyK,OAA0Bi7I,YACrDq3B,QAAQ9nL,MAAOyiC,YAAOq4H,cAAQxtJ,UAAWy6K,WAAW1iL,MAAOwiL,oBAAWp3B,yBAIvEq3B,QAwBYF,CAAc9sB,QACzByD,cAAkBzD,OAAOn0J,SAAzB43J,cAEFtiK,OAASqzE,eAAeivF,eAkD9B,OAjDAopB,WAAW/kL,QAAQ,SAACslL,SAAUnsL,OAC1B,IAAImiK,UAEEiqB,kBAEEN,UAIAK,SAJAL,UACAplJ,MAGAylJ,SAHAzlJ,MACAn1B,UAEA46K,SAFA56K,UACAmjJ,UACAy3B,SADAz3B,UAEF9pJ,OAAS4gL,aAAa92B,eACtBX,MAAQnpJ,OAAOmpJ,UACrBA,MAAM31J,KAAO21J,MAAM31J,MAAQmT,UACvB3G,OAAOsxF,OACPtxF,OAAOw1B,SAAWA,SAClBx1B,OAAOq8B,MAAQA,MAGXk7H,OADAspB,YAAYzrL,OACHyrL,YAAYzrL,OAAOmiK,OAEnB2pB,UAAUj0L,QACfk3G,aAAcgwD,OAAO7oD,cAAcj+E,WACnCinC,OACI2kF,mBAAU1T,0BAItBi8C,eAAevxJ,U1DzBH,a0DyBeoM,MAAsBxN,OAASkyJ,aAAyB,GAATlyJ,OAC1E2yJ,eAAexxJ,S1DzBD,e0DyBYqM,MAAuBzN,MAAgB,GAARA,MACzD4yJ,eAAe5yJ,MAAQ53B,KAAKsQ,IAAIk6K,eAAexxJ,SAAUhwB,OAAO4uB,OAChE4yJ,eAAe3yJ,OAAS73B,KAAKsQ,IAAIk6K,eAAevxJ,UAAWjwB,OAAO6uB,SAEjEujI,QAASC,OAAQC,QAAQr2J,QAAQ,SAACpO,GAC/B2zL,eAAe3zL,GAAKmS,OAAOnS,KAG/B0pK,OAAOz7H,MAAMA,OACImyD,YAAY34F,QACZ6zJ,MAAMA,OACNxiJ,UAAUA,WACV3G,OAAOA,QACPmkJ,SAASgQ,OAAO52E,cAAc62E,YAAYqtB,iBAAiB3gK,SAASna,aACpE8rF,YAAY+uF,gBACZ76B,YAAYwN,OAAOpuC,SACnB27D,oBAEjBZ,QAAQznL,MAAO86J,cAAQoD,cAAQzN,yBAGhCg3B,o0CC9GUa,ixBAAsBrrB,0VACpB,IAAAsrB,eACWzuL,KAAK4mG,WAC/B,OAASnrE,MAFMgzJ,eACPhzJ,MACQC,OAFD+yJ,eACA/yJ,kEAID+xC,MACdztE,KAAK4mG,UAAWtkE,IAAKmrC,KAAKjqE,EAAGkiC,KAAM+nC,KAAK1vC,IACxC/9B,KAAK4jK,eACDnoI,MAAOgyC,KAAKhyC,MACZC,OAAQ+xC,KAAK/xC,QAEjB17B,KAAK6jK,SAASp2F,KAAKo2F,4DAInB,OAAO7jK,KAAK4mG,iEAIZ,MAAMl3F,MAAM,2EAIZ,MAAMA,MAAM,+zCCtBCg/K,yDACjB,SAAAA,gBAAa9sK,QAAQ,IAAA1M,MAAA,oKAAAy5K,CAAA3uL,KAAA0uL,kBACjBx5K,MAAA05K,0CAAA5uL,KAAA6uL,+BAAAH,iBAAA/1L,KAAAqH,KAAM4hB,OAAO7oB,KAAM6oB,OAAOkiJ,UAAUrU,kBAAmB,KAClDq/B,UAAUltK,QAFE1M,iZADoBs5K,mUAM3B71J,WACV,IAAM2kJ,aAAet9K,KAAK4hB,OAAO/U,OACjC8rB,UAAYovD,6BAAcpvD,WAFL,IAGbuQ,MAAUo0I,aAAVp0I,MACFkmC,IAAMz2C,UACT85B,UADS,IAAA/2C,OACK4hK,aAAathF,YADlB,qBAEThxF,MAAMhL,KAAKjH,OACdq2E,IAAIxc,OAAOxrB,SACX,IAEM2nJ,KAFW3/G,IAAItc,QAAQj+B,OAAO,OAEdhrB,MAAMulE,KAC5B2/G,KAAKnxG,QAAL,GAAAliE,OAAgB4hK,aAAathF,YAA7B,qBAA4D,GAXvC,IAAAyyF,eAYKzuL,KAAK4mG,WAAvBlrE,OAZa+yJ,eAYb/yJ,OAAQD,MAZKgzJ,eAYLhzJ,MAChBz7B,KAAK8jK,UAAUjY,kBAAkBpwH,MAAOC,QAExC17B,KAAK8jK,WAAa9jK,KAAK8jK,UAAUv/D,OAAOwqF,KAAKt+J,QAE7Cs+J,KAAKt8H,UAAU,OAAOmrB,QAAtB,GAAAliE,OAAiC4hK,aAAathF,YAA9C,mBAA2E,GAC3E+yF,KAAKp1J,MAAM,QAAX,GAAAje,OAAuB,IAAvB,MAEI4hK,cAAgBt9K,KAAK8jK,WACrBirB,KAAKp1J,MAAM,QAASi0E,oBACHj0E,MAAM,aAAcuP,yCAKvCvQ,WACF34B,KAAKgvL,aAAar2J,WAAaT,SAASgB,eAAel5B,KAAK6jK,iEAGjDjiJ,QAGX,OAFA5hB,KAAKjH,KAAK6oB,OAAO7oB,MACjBiH,KAAK4mG,SAAShlF,OAAOkiJ,UAAUrU,mBACxBzvJ,iDAGA4hB,QACP5hB,KAAK8jK,UAAYliJ,OAAOkiJ,UACxB9jK,KAAK4hB,OAASA,OACd5hB,KAAKq9C,OAAOz7B,OAAO/U,OAAOwwC,QAC1Br9C,KAAKqiC,SAASzgB,OAAO/U,OAAOw1B,UAC5BriC,KAAK8gC,UAAUlf,OAAO/U,OAAOi0B,WAC7B9gC,KAAKuuK,UAAU3sJ,OAAO/U,OAAO0hK,WAC7BvuK,KAAK0uK,UAAU9sJ,OAAO/U,OAAO6hK,qEAGfjhG,MACdztE,KAAK4mG,UAAWtkE,IAAKmrC,KAAKjqE,EACtBkiC,KAAM+nC,KAAK1vC,EACXtC,MAAOgyC,KAAKhyC,MACZC,OAAQ+xC,KAAK/xC,SACjB17B,KAAK6jK,SAASp2F,KAAKo2F,0yCCtCNorB,yDACjB,SAAAA,gBAAartK,QAAQ,IAAA1M,MAAA,oKAAAg6K,CAAAlvL,KAAAivL,kBACjB/5K,MAAAi6K,0CAAAnvL,KAAAovL,+BAAAH,iBAAAt2L,KAAAqH,KAAM4hB,OAAO7oB,KAAM6oB,OAAO/U,OAAOyyF,YAAY+vF,YAAa,KACrDP,UAAUltK,QAFE1M,iZADoBs5K,mUAM3B71J,WACVA,UAAYovD,6BAAcpvD,WAC1B,IAAM22J,qBAFeC,oBAGavvL,KAAK4hB,OAAO/U,OAAtCw1B,SAHaktJ,oBAGbltJ,SAAU25D,YAHGuzF,oBAGHvzF,YACZwzF,YAAcxnG,YAAYrvD,UAAW,OAAQ34B,KAAKohJ,YAAzB,GAAA1lI,OACIsgF,YADJ,qBACqC,SAAAljG,GAAC,OAAIA,IACzE02L,YAAY5xG,QAAZ,GAAAliE,OAAuBsgF,YAAvB,YAA6C,GAC7C,IAAM9yD,MAAS7G,WAAaurE,oBAAQvrE,WAAawrE,oB7D4BjC,WACE,a6D5BZ4hF,SAAWzvL,KAAK4jK,cAAcnoI,MAC9Bi0J,UAAY1vL,KAAK4jK,cAAcloI,OAQrC,IANC/C,UAAW62J,aAAa1mL,QAAQ,SAACqf,MAC9BA,KAAKwR,MAAM,QAAX,GAAAje,OAAuB7X,KAAKwN,MAAMo+K,UAAlC,OACiB91J,MAAM,SADvB,GAAAje,OACoCg0K,UADpC,OAEiB/1J,MAAM,QAASi0E,sB7DqBpB,a6DlBZ1kE,MAAoB,CACpB,IAAIymJ,UAAY,EACZC,WAAaF,UACbG,UAAY,EAEhB7vL,KAAKohJ,WAAWt4I,QAAQ,SAAC+kL,YACrB,IAAMiC,IAAMjC,WAAWzpB,OACnB0rB,IAAIxwF,cAAc5jE,OAASk0J,YAC3BD,WACAE,UAAY,EACZD,WAAaF,WAEbC,SAAW,GAAKA,WAEpBL,kBAAkBK,UAAYL,kBAAkBK,cAChDC,YAAc/rL,KAAKsQ,IAAI27K,IAAIxwF,cAAc5jE,OAAQk0J,YACjDC,UAAYhsL,KAAKwQ,IAAIxQ,KAAKsQ,IAAI27K,IAAIxwF,cAAc7jE,MAAOq0J,IAAIxwF,cAAcziE,UAAWgzJ,WACpFP,kBAAkBK,UAAUzpL,MACxBk+J,OAAQ0rB,IACRC,aAAcL,UACdM,YAAaH,cAIrB,IAAMn8J,MAAQs0D,YAAYwnG,aAAc,OAAQF,kBAAvB,GAAA5zK,OAA6CsgF,YAA7C,oBAEzBtoE,MAAMkqD,QAAN,GAAAliE,OAAiBsgF,YAAjB,6BAAwD,GACvCriE,MAAM,QAAS,SAAA7gC,GAAC,SAAA4iB,OAAO5iB,EAAE,GAAGk3L,YAAZ,QACjChoG,YAAYt0D,OAAQ,OAAQ,SAAA56B,GAAC,OAAIA,GAAtB,GAAA4iB,OAA4BsgF,YAA5B,yBAAiE,SAAAljG,GAAC,OAAIA,EAAEsrK,OAAO1rI,OACzEyO,KAAK,SAAUruC,GACZA,EAAEsrK,OAAO1wI,MAAM1zB,QAElB25B,MAAM,QAAS,SAAA7gC,GAAC,SAAA4iB,OAAO5iB,EAAEk3L,YAAT,YAC9B,CACH,IAAMt8J,OAAQs0D,YAAYwnG,YAAa,OAAQ,GAAtB,GAAA9zK,OAA6BsgF,YAA7B,oBACzBtoE,OAAMkqD,QAAN,GAAAliE,OAAiBsgF,YAAjB,+BAA0D,GAC1DtoE,OAAMkqD,QAAN,GAAAliE,OAAiBsgF,YAAjB,mBAA+C,IAAK,GACnCriE,MAAM,QADvB,GAAAje,OACmC+zK,SADnC,OAGAznG,YAAYt0D,OAAO,MAAO1zB,KAAKohJ,WAApB,GAAA1lI,OAAmCsgF,YAAnC,yBAAwE,SAAAljG,GAAC,OAAIA,EAAEsrK,OAAO1rI,OAChFyO,KAAK,SAAUruC,GAAKA,EAAEsrK,OAAO1wI,MAAM1zB,QACnC25B,MAAM,QAAS,SAAA7gC,GAAC,SAAA4iB,OAAO5iB,EAAEsrK,OAAO9kE,cAAc7jE,MAA9B,2CAInC9C,WACF34B,KAAKiwL,aAAat3J,WAAaT,SAASgB,eAAel5B,KAAK6jK,iEAGjDjiJ,QAIX,OAHA5hB,KAAKjH,KAAK6oB,OAAO7oB,MACjBiH,KAAK4mG,SAAShlF,OAAO/U,OAAOyyF,YAAY+vF,aACxCrvL,KAAK8uL,UAAUltK,QACR5hB,iDAGA4hB,QACP5hB,KAAKohJ,WAAax/H,OAAOkiJ,UACzB9jK,KAAK4hB,OAASA,OACd5hB,KAAKq9C,OAAOz7B,OAAO/U,OAAOwwC,QAC1Br9C,KAAKqiC,SAASzgB,OAAO/U,OAAOw1B,UAJb,IAAA6tJ,sBAhGvB,SAASC,uBAAwB9tJ,UAC7B,IAAIqsI,UAAY,KACVH,UAAS,GAAA7yJ,OAAM44J,iBAAiB,GAAvB,KAAA54J,OAA6B84J,oBAAoB,IAChE,OAAQnyI,UACR,KAAKsrE,kBACL,KAAKD,qBACDghE,UAAYlP,kBACZ,MACJ,KAAK5xD,mBACL,KAAKC,oBACD6gE,UAAYjP,gBACZ,MACJ,QACIiP,UAAYjP,gBAEhB,OAASiP,oBAAWH,qBAsFiB4hB,CAAuBvuK,OAAO/U,OAAOw1B,UAA9DksI,UALO2hB,sBAKP3hB,UAAWG,UALJwhB,sBAKIxhB,UACnB1uK,KAAK8gC,UAAUlf,OAAO/U,OAAOi0B,WAC7B9gC,KAAKuuK,UAAU3sJ,OAAO/U,OAAO0hK,WAAaA,WAC1CvuK,KAAK0uK,UAAU9sJ,OAAO/U,OAAO6hK,WAAaA,kCCpG5Cl1E,uCAASjQ,4BAET6mG,cACF1qJ,K9DEiB,Q8DDjBC,M9DCiB,Q8DAjBrD,I9DCkB,S8DAlBkvB,O9DAkB,U8DGT6+H,iBAAmB,SAAnBA,iBAAoBla,aAAcma,YAAaC,YACxD,IAAIC,WAAa,EAIjB,OAHiBra,aAAayE,SAAWzE,aAAayE,QAAQl5K,OAC1Dy0K,aAAayE,QAAUzE,aAAa0E,WAExB5yK,IAAI,SAACvN,GACjB,IAAM+1L,aAA4B,IAAbD,YAAoBF,YAAcC,YAEvD,OADAC,YAAc91L,EACP+1L,gBAIFC,4BAAuB,SAAvBA,qBAAwBh9J,MAAOp4B,KAAMuR,QAAW,IAErDmvF,YAEAnvF,OAFAmvF,YACAkoE,UACAr3J,OADAq3J,UAEEhlE,MAAQlX,YAAYt0D,MAAO,OAAQp4B,MAAhB,GAAAogB,OAA0BsgF,YAA1B,kBAAAtgF,OAAsDpgB,OAS/E,OAPA4jG,MAAMthB,QAAN,GAAAliE,OAAiBsgF,YAAjB,kBAA6C,GAC7CkD,MAAMvlE,MAAMy2J,aAAa90L,MAAzB,GAAAogB,OAAmCwoJ,UAAnC,OAEgBl8E,YAAYkX,MAAO,OAAQ,GAAhB,GAAAxjF,OAAuBsgF,YAAvB,0BAEnBjpC,KAAK,KAAb,GAAAr3C,OAAsBsgF,YAAtB,0BAAAtgF,OAA0DpgB,OAEnD4jG,OAGEyxF,2BAAsB,SAAtBA,oBAAuBj9J,MAAO7mB,QAAW,IAE9CmvF,YACAnvF,OADAmvF,YAEEpmC,KAAOoyB,YAAYt0D,MAAO,OAAQ,GAAhB,GAAAhY,OAAuBsgF,YAAvB,iBAGxB,OAASpmC,UAAMg7H,MAFD5oG,YAAYpyB,KAAM,OAAQ,GAAf,GAAAl6C,OAAsBsgF,YAAtB,oBAyDvB60F,2BAA6B,SAA7BA,2BAA8BC,UAAWC,YAAa5sB,OAAU,IAE9DysB,MAEAE,UAFAF,MACAh7H,KACAk7H,UADAl7H,KAH8Do7H,sBAKjDJ,MAAMngK,OAAO8uD,wBAAtBxhD,EAL0DizJ,sBAK1DjzJ,EAAGv6B,EALuDwtL,sBAKvDxtL,EALuDytL,sBAMnCr7H,KAAKnlC,OAAO8uD,wBAAhC2xG,MANuDD,sBAM1DlzJ,EAAaozJ,MAN6CF,sBAMhDztL,EAElButL,YAAYK,qBAAsBrzJ,EAAGA,EAAImzJ,MAAQ/sB,MAAO3gK,EAAGA,EAAI2tL,MAAQhtB,SAGrEktB,+BAA0B,SAA1BA,wBAA2BN,YAAaD,UAAWQ,UAAWntB,OAChE,IAAIxgF,MAAQ,GACNub,MAAQ6xF,YAAYQ,YAAYD,WAChCE,cAAgBvnG,WAEtBiV,MAAM9xB,GAAGokH,cAAgB,aAAe,YAAa,WACnCnoG,0BAER/I,iBAENqD,MAAQS,YAAY,WAChBysG,2BAA2BC,UAAWC,YAAa5sB,QACpD,OACJ/2F,GAAGokH,cAAgB,WAAa,UAAW,WAC5BnoG,0BAER/I,iBAEN6D,cAAcR,SACfvW,GAAG,QAAS,WACXyjH,2BAA2BC,UAAWC,YAAa5sB,UAI9C5zF,0CAAoB,SAApBA,kBAAqBwgH,aAAgB,IAE1CD,UACAC,YAAYQ,YADZT,UAGE3sB,MAAQ4sB,YAAYlkL,SAASs3J,MAEnCktB,+BAAwBN,YAAaD,UAAW,aAAc3sB,OAnF3C,SAAjBstB,eAAkBV,YAAaD,WACjC,IAAIx4F,YACAo5F,cAAgB,EAChBn5F,UAEAq4F,MAEAE,UAFAF,MAGEe,aADFb,UADAl7H,KAEsBnlC,OAAO8uD,wBAEjCqxG,MAAMj4L,KAAK6gG,gBACMpsB,GAAG,QAAS,WACT,IAAMuM,MAAQ0P,0BAEdqoG,cAAgBd,MAAMngK,OAAO8uD,wBAC7B+Y,UACIv6D,EAAG47C,MAAM57C,EACTv6B,EAAGm2E,MAAMn2E,KAGhB4pE,GAAG,OAAQ,WACR,IAAMuM,MAAQ0P,0BACRjxF,OAASyzE,YAMT+lH,iBAJNr5F,QACIx6D,EAAG47C,MAAM57C,EACTv6B,EAAGm2E,MAAMn2E,IAGCu6B,EAAIu6D,SAASv6D,EADrB6zJ,gBAECr5F,OAAO/0F,EAAI80F,SAAS90F,EAErBquL,gBACF9zJ,EAAG2zJ,cAAc3zJ,EAAI6zJ,gBAAkBD,aAAa5zJ,EAAI3lC,OAAO05L,YAC/DtuL,EAAGkuL,cAAcluL,EAAIouL,gBAAkBD,aAAanuL,EAAIpL,OAAO25L,aAGnEhB,YAAYK,oBAAoBS,mBA+CpDJ,CAAeV,YAAaD,WA/FF,SAAjBkB,eAAkBjB,YAAaD,WAGpCA,UADAl7H,KAGCwX,GAAG,QAAS,WACb,IAAMuM,MAAQ0P,0BACd0nG,YAAYkB,qBAAqBt4G,SAyFrCq4G,CAAejB,YAAaD,WAC5BO,+BAAwBN,YAAaD,UAAW,YAAa3sB,QC1JpDtpE,8BAEThuF,QACIqhE,aAAc,SAAAA,aAAC5xC,QAAS7iC,OAEpB,OADAA,MAAQw1E,eAAe3yC,QAAQ+zD,QAAS52F,SAIhDy4L,WACAC,iBACA78E,iTCLG,IAAM88E,yBAAb,WAEI,SAAAA,yKAAeC,CAAAryL,KAAAoyL,aACXpyL,KAAKuxL,eACLvxL,KAAK02K,iBACL12K,KAAKsyL,sBAAwB,aAC7BtyL,KAAKqwF,SACD6zE,UAAW,GACXC,MAAO,GAEXnkK,KAAKuyL,eAAiB,KAEtBhkH,sBAAsBvuE,KAAM66F,8BAZpC,gPAAA23F,CAAAJ,cAAAr4L,IAAA,uBAAAN,MAAA,SAAAw4L,uBAoBQ,MAAM,IAAIljH,UAAU,6BApB5Bh1E,IAAA,sBAAAN,MAAA,SAAA23L,sBAwBQ,MAAM,IAAIriH,UAAU,6BAxB5Bh1E,IAAA,WAAAN,MAAA,SAAAg5L,WA4BQ,MAAM,IAAI1jH,UAAU,6BA5B5Bh1E,IAAA,gBAAAN,MAAA,SAAAi5L,gBAgCQ,MAAM,IAAI3jH,UAAU,6BAhC5Bh1E,IAAA,eAAAN,MAAA,SAAAk5L,aAmCkB18J,YAGV,OACI28J,mBFiHyB,SAAxBC,sBAAyB58J,WAAYppB,OAAQgc,WAAYvtB,MAAS,IAEvE0gG,YACAnvF,OADAmvF,YAEE42F,mBAAqB5qG,YAAYD,6BAAc9xD,YAAa,OAAQ,GAApC,IAAAva,OAA4CsgF,YAA5C,gBAAAtgF,OAAsEpgB,OAK5G,OAHAs3L,mBAAmBh1G,QAAnB,GAAAliE,OAA8BsgF,YAA9B,gBAAwD,GACxD42F,mBAAmBj5J,M9DtJF,Q8DsJjB,GAAAje,OAAmCmN,WAAW4S,MAA9C,OACAm3J,mBAAmBj5J,M9DtJD,S8DsJlB,GAAAje,OAAoCmN,WAAW6S,OAA/C,OACOk3J,mBE1HqBC,CAAsB58J,WAH/Bj2B,KAAK6M,SAG8C7M,KAAKs1G,eAAgBt1G,KAAK4lB,YAAYtqB,YAvChHvB,IAAA,qBAAAN,MAAA,SAAAq5L,mBA2CwBC,sBAEhB,OADA/yL,KAAKsyL,sBAAwBS,qBACtB/yL,QA7CfjG,IAAA,qBAAAN,MAAA,SAAAu5L,qBAkDQ,OADAhzL,KAAKsyL,sBAAwB,aACtBtyL,QAlDfjG,IAAA,kBAAAN,MAAA,SAAAg2J,kBAsDQ,OAAOzvJ,KAAKs1G,kBAtDpBv7G,IAAA,oBAAAN,MAAA,SAAA82E,oBA2DQ,OADAA,0CAAkBvwE,MACXA,QA3DfjG,IAAA,SAAAN,MAAA,SAAA2tC,SAgEQ,OADApnC,KAAKuxL,YAAYqB,mBAAmBxrJ,SAC7BpnC,UAhEfjG,IAAA,OAAAN,MAAA,SAAA6B,OAgBQ,MAAM,IAAIyzE,UAAU,8BAhB5BqjH,YAAA,8hKCHA,IAAMa,gBACFv4B,WCDJ,SAAAw4B,cAAA,SAAAC,wBAAA,4KAAAC,CAAApzL,KAAAmzL,uBAAAE,kDAAArzL,KAAAszL,uCAAAH,uBAAA5rL,MAAAvH,KAAAoF,YAAA,0YAAAmuL,CAAAJ,sBAA2Cf,oSAA3CoB,CAAAL,wBAAAp5L,IAAA,eAAAN,MAAA,SAAAk5L,aAakB18J,YAA8C,IAAlCpN,WAAkCzjB,UAAA1D,OAAA,QAAA6L,IAAAnI,UAAA,GAAAA,UAAA,GAArBpF,KAAKs1G,eAClCzoG,OAAS7M,KAAK6M,SACZ+lL,mBAFgDa,4BAAAH,uCAAAH,sBAAA74L,WAAA,eAAA0F,MAAArH,KAAAqH,KAENi2B,WAAYppB,OAAQgc,YAA9D+pK,mBACFc,UAAYhD,4BAAqBkC,mBAAoB,OAAQ/lL,QAC7DikL,UAAYH,2BAAoBiC,mBAAoB/lL,QACpD8mL,UAAYjD,4BAAqBkC,mBAAoB,QAAS/lL,QAEhE+jL,MAEAE,UAFAF,MACAh7H,KACAk7H,UADAl7H,KARoDg+H,mBAWO5zL,KAAKs1G,eAA5D55E,OAXgDk4J,mBAWhDl4J,OAAQD,MAXwCm4J,mBAWxCn4J,MAAO60J,YAXiCsD,mBAWjCtD,YAAaC,WAXoBqD,mBAWpBrD,WAAYlM,WAXQuP,mBAWRvP,WAC1CwP,2BAA6Bp4J,MAAiB,EAATC,OAE3Ck6B,KAAKj8B,MlEfQ,QkEeb,GAAAje,OAAqBmN,WAAW4S,MAAiB,EAATC,OAAxC,OACAk6B,KAAKj8B,MlEfS,SkEed,GAAAje,OAAsB,IAAtB,MACAk1K,MAAMj3J,MlEjBO,QkEiBb,GAAAje,OAAuB60K,WAAasD,2BAA8BvD,YAAlE,OACAM,MAAMj3J,MlEjBQ,SkEiBd,GAAAje,OAAuB,IAAvB,MACAk1K,MAAMj3J,MAAMi0E,mBAAZ,GAAAlyF,OAAqB,EAArB,OAEA1b,KAAKuxL,aACDmC,oBACAC,oBACA7C,oBACA8B,uCAEJ5yL,KAAK8zL,4BAA8BD,2BACnC7zL,KAAKmyL,cAAc9B,iBAAiBhM,WAAYiM,YAAaC,aAC7DvwL,KAAKuwE,uBAzCbx2E,IAAA,uBAAAN,MAAA,SAAAw4L,qBA4C0Bt4G,OAAO,IAAAo6G,sBAIrB/zL,KAAKuxL,YAAYT,UAFjBF,MAFqBmD,sBAErBnD,MACAh7H,KAHqBm+H,sBAGrBn+H,KAEEuuG,MAAQnkK,KAAK6M,SAASs3J,MALH6sB,sBAMRJ,MAAMngK,OAAO8uD,wBAAtBxhD,EANiBizJ,sBAMjBjzJ,EAAGv6B,EANcwtL,sBAMdxtL,EANcytL,sBAOMr7H,KAAKnlC,OAAO8uD,wBAAhC2xG,MAPcD,sBAOjBlzJ,EAAaozJ,MAPIF,sBAOPztL,EACdwwL,iBAA2B,GAAR7vB,MACnBxqF,MAAM57C,EAAIA,IACVi2J,iBAA4B,IAAR7vB,OAExBnkK,KAAKoxL,qBAAsBrzJ,EAAGA,EAAImzJ,MAAQ8C,iBAAkBxwL,EAAGA,EAAI2tL,MAAQ6C,sBAxDnFj6L,IAAA,sBAAAN,MAAA,SAAA23L,oBA2DyB6C,aACjB,IAAIC,WAD0BC,uBAK1Bn0L,KAAKuxL,YAAYT,UAFjBF,MAH0BuD,uBAG1BvD,MAGEe,aANwBwC,uBAI1Bv+H,KAEsBnlC,OAAO8uD,wBAC3B60G,SAAWxD,MAAMngK,OAAO8uD,wBAE1B+wG,YACCtwL,KAAKs1G,eADNg7E,YAIA4D,WADAD,YAAYl2J,EAAI,EACH,EACNk2J,YAAYl2J,EAAIq2J,SAAS34J,MAAQk2J,aAAal2J,MACxCk2J,aAAal2J,MAAQ24J,SAAS34J,MAE9Bw4J,YAAYl2J,EAG7B6yJ,MAAMj3J,MAAMi0E,mBAAZ,GAAAlyF,OAAqBw4K,WAArB,OACA,IACMG,gBAAmBH,WAAa5D,YADhBtwL,KAAK8zL,4BAG3B9zL,KAAKkyL,UAAUoC,8BAA8Bt0L,KAAK4lB,YAAYtqB,OAAQ+4L,oBAnF9Et6L,IAAA,gBAAAN,MAAA,SAAAi5L,cAsFmB6B,OAAO,IAAAC,uBAIdx0L,KAAKuxL,YAAYT,UAFjBF,MAFc4D,uBAEd5D,MACAh7H,KAHc4+H,uBAGd5+H,KAEEw+H,SAAWxD,MAAMngK,OAAO8uD,wBACxBoyG,aAAe/7H,KAAKnlC,OAAO8uD,wBAGjC,OADAv/E,KAAKoxL,qBAAsB5tL,EAAG,EAAGu6B,EAAGq2J,SAASr2J,EAAI4zJ,aAAa5zJ,EAAIw2J,QAC3Dv0L,QA/FfjG,IAAA,WAAAN,MAAA,SAAAg5L,SA0GcgC,kBAAkB,IAIlBL,SADFp0L,KAAKuxL,YAAYT,UADjBF,MAEmBngK,OAAO8uD,wBACxBm1G,SAAYD,kBAAoBz0L,KAAK8zL,4BAA8BM,SAAS34J,OAAU,IAG5F,OADAz7B,KAAKoxL,qBAAsB5tL,EAAG,EAAGu6B,EAAG22J,WAC7B10L,UAlHfjG,IAAA,OAAAN,MAAA,SAAA6B,OAUQ,MlEoDkB,iBkE9D1B63L,sBAAA,GDEIx4B,SEFJ,SAAAu4B,cAAA,SAAAyB,sBAAA,0KAAAC,CAAA50L,KAAA20L,qBAAAE,gDAAA70L,KAAA80L,qCAAAH,qBAAAptL,MAAAvH,KAAAoF,YAAA,sYAAA2vL,CAAAJ,oBAAyCvC,8RAAzC4C,CAAAL,sBAAA56L,IAAA,eAAAN,MAAA,SAAAk5L,aAakB18J,YAA8C,IAAlCpN,WAAkCzjB,UAAA1D,OAAA,QAAA6L,IAAAnI,UAAA,GAAAA,UAAA,GAArBpF,KAAKs1G,eAClCzoG,OAAS7M,KAAK6M,SACZ+lL,mBAFgDqC,0BAAAH,qCAAAH,oBAAAr6L,WAAA,eAAA0F,MAAArH,KAAAqH,KAENi2B,WAAYpN,YAAtD+pK,mBACFc,UAAYhD,4BAAqBkC,mBAAoB,MAAO/lL,QAC5DikL,UAAYH,2BAAoBiC,mBAAoB/lL,QACpD8mL,UAAYjD,4BAAqBkC,mBAAoB,SAAU/lL,QAEjE+jL,MAEAE,UAFAF,MACAh7H,KACAk7H,UADAl7H,KARoDg+H,mBAUQ5zL,KAAKs1G,eAA7D55E,OAVgDk4J,mBAUhDl4J,OAAQD,MAVwCm4J,mBAUxCn4J,MAAO60J,YAViCsD,mBAUjCtD,YAAaC,WAVoBqD,mBAUpBrD,WAAYnM,YAVQwP,mBAURxP,YAC1CyP,2BAA6Bn4J,OAAiB,EAARD,MAE5Cm6B,KAAKj8B,MnEbS,SmEad,GAAAje,OAAsBm4K,2BAAtB,OACAj+H,KAAKj8B,MnEfQ,QmEeb,GAAAje,OAAqB,IAArB,MACAk1K,MAAMj3J,MnEhBO,QmEgBb,GAAAje,OAAsB,IAAtB,MACAk1K,MAAMj3J,MnEhBQ,SmEgBd,GAAAje,OAAwB60K,WAAasD,2BAA8BvD,YAAnE,OACAM,MAAMj3J,MAAMg0E,kBAAZ,GAAAjyF,OAAoB,EAApB,OAEA1b,KAAKuxL,aACDmC,oBACAC,oBACA7C,oBACA8B,uCAEJ5yL,KAAK8zL,4BAA8BD,2BAEnC7zL,KAAKmyL,cAAc9B,iBAAiBjM,YAAakM,YAAaC,aAC9DvwL,KAAKuwE,uBAzCbx2E,IAAA,uBAAAN,MAAA,SAAAw4L,qBA4C0Bt4G,OAAO,IAAAo6G,sBAIrB/zL,KAAKuxL,YAAYT,UAFjBF,MAFqBmD,sBAErBnD,MACAh7H,KAHqBm+H,sBAGrBn+H,KAEEuuG,MAAQnkK,KAAK6M,SAASs3J,MALH6sB,sBAMRJ,MAAMngK,OAAO8uD,wBAAtBxhD,EANiBizJ,sBAMjBjzJ,EAAGv6B,EANcwtL,sBAMdxtL,EANcytL,sBAOMr7H,KAAKnlC,OAAO8uD,wBAAhC2xG,MAPcD,sBAOjBlzJ,EAAaozJ,MAPIF,sBAOPztL,EAEdwwL,iBAA2B,GAAR7vB,MACnBxqF,MAAMn2E,EAAIA,IACVwwL,iBAA4B,IAAR7vB,OAExBnkK,KAAKoxL,qBAAsBrzJ,EAAGA,EAAImzJ,MAAQ8C,iBAAkBxwL,EAAGA,EAAI2tL,MAAQ6C,sBAzDnFj6L,IAAA,sBAAAN,MAAA,SAAA23L,oBA4DyB6C,aACjB,IAAIC,WAD0BC,uBAK1Bn0L,KAAKuxL,YAAYT,UAFjBF,MAH0BuD,uBAG1BvD,MACAh7H,KAJ0Bu+H,uBAI1Bv+H,KAGA06H,YACCtwL,KAAKs1G,eADNg7E,YAEEqB,aAAe/7H,KAAKnlC,OAAO8uD,wBAC3B60G,SAAWxD,MAAMngK,OAAO8uD,wBAG1B20G,WADAD,YAAYzwL,EAAI,EACH,EACNywL,YAAYzwL,EAAI4wL,SAAS14J,OAASi2J,aAAaj2J,OACzCi2J,aAAaj2J,OAAS04J,SAAS14J,OAE/Bu4J,YAAYzwL,EAE7BotL,MAAMj3J,MAAMg0E,kBAAZ,GAAAjyF,OAAoBw4K,WAApB,OACA,IACMG,gBAAmBH,WAAa5D,YADhBtwL,KAAK8zL,4BAG3B9zL,KAAKkyL,UAAUoC,8BAA8Bt0L,KAAK4lB,YAAYtqB,OAAQ+4L,oBAnF9Et6L,IAAA,gBAAAN,MAAA,SAAAi5L,cAgGmB6B,OAAO,IAAAC,uBAIdx0L,KAAKuxL,YAAYT,UAFjBF,MAFc4D,uBAEd5D,MACAh7H,KAHc4+H,uBAGd5+H,KAEEw+H,SAAWxD,MAAMngK,OAAO8uD,wBACxBoyG,aAAe/7H,KAAKnlC,OAAO8uD,wBAGjC,OADAv/E,KAAKoxL,qBAAsB5tL,EAAG4wL,SAAS5wL,EAAImuL,aAAanuL,EAAI+wL,MAAOx2J,EAAG,IAC/D/9B,QAzGfjG,IAAA,WAAAN,MAAA,SAAAg5L,SAoHcgC,kBAAkB,IAIlBL,SADFp0L,KAAKuxL,YAAYT,UADjBF,MAEmBngK,OAAO8uD,wBACxBm1G,SAAYD,kBAAoBz0L,KAAK8zL,4BAA8BM,SAAS14J,QAAW,IAG7F,OADA17B,KAAKoxL,qBAAsBrzJ,EAAG,EAAGv6B,EAAGkxL,WAC7B10L,UA5HfjG,IAAA,OAAAN,MAAA,SAAA6B,OAUQ,MnEmDgB,emE7DxBq5L,oBAAA,IFcqBO,yCAEjB,SAAAA,gBAAatzK,QAAQ,IAAA1M,qKAAAigL,CAAAn1L,KAAAk1L,iBACjB,IAAM9C,YAAca,eAAerxK,OAAO/U,OAAOvR,MADhC,OAGjBsmB,OAAOkiJ,UAAY,IAAIsuB,YACvBxwK,OAAOkiJ,UAAUj3J,OAAO+U,OAAO/U,OAAOuoL,0BACtCxzK,OAAOkiJ,UAAUxuD,aAAa1zF,OAAOiH,aACrC3T,MAAAmgL,2CAAAr1L,KAAAs1L,gCAAAJ,iBAAAv8L,KAAAqH,KAAM4hB,OAAO7oB,KAAM6oB,OAAOkiJ,UAAUrU,kBAAmB,KAClDq/B,UAAUltK,QAPE1M,mZAFoBs5K,8TAarC,OAAIppL,UAAQ1D,QACR1B,KAAK8jK,UAAUouB,QAAf9sL,UAAA1D,QAAA,OAAA6L,EAAAnI,UAAA,IACOpF,MAEJA,KAAK8jK,UAAUouB,8DAaXqC,OAEX,OADAv0L,KAAK8jK,UAAU4uB,cAAc6B,OACtBv0L,+CAWDy0L,kBAEN,OADAz0L,KAAK8jK,UAAU2uB,SAASgC,kBACjBz0L,iEAcQu1L,WACf,IAAMpD,cAAgBnyL,KAAK8jK,UAAUquB,gBAC/BqD,mBAAqB3xL,KAAKsQ,IAAItQ,KAAKwQ,IAAI,EAAGkhL,WAAYpD,cAAczwL,OAAS,GAEnF,OADA1B,KAAK8jK,UAAU2uB,SAASN,cAAcqD,qBAC/Bx1L,qFAaP,OAAOA,KAAK8jK,UAAUquB,kDAGpBx5J,WAEF,OADA34B,KAAK8jK,UAAU6uB,aAAah6J,WAAaT,SAASgB,eAAel5B,KAAK6jK,aAC/D7jK,mEAUSy1L,gBAEhB,OADAz1L,KAAK8jK,UAAUgvB,mBAAmB2C,gBAC3Bz1L,qEAWP,OADAA,KAAK8jK,UAAUkvB,qBACRhzL,yDAGI4hB,QAMX,OALA5hB,KAAKjH,KAAK6oB,OAAO7oB,MACjBiH,KAAK8jK,UAAUj3J,OAAO+U,OAAO/U,OAAOuoL,0BACpCp1L,KAAK8jK,UAAUxuD,aAAa1zF,OAAOiH,YACnC7oB,KAAK4mG,SAAS5mG,KAAK8jK,UAAUrU,mBAC7BzvJ,KAAK8uL,UAAUltK,QACR5hB,iDAGA4hB,QACP5hB,KAAK8jK,UAAYliJ,OAAOkiJ,WAAa9jK,KAAK8jK,UAC1C9jK,KAAK4hB,OAASA,OACd5hB,KAAKq9C,OAAOz7B,OAAO/U,OAAOwwC,QAC1Br9C,KAAKqiC,SAASzgB,OAAO/U,OAAOw1B,UAC5BriC,KAAK8gC,UAAUlf,OAAO/U,OAAOi0B,WAC7B9gC,KAAKuuK,UAAU3sJ,OAAO/U,OAAO0hK,WAC7BvuK,KAAK0uK,UAAU9sJ,OAAO/U,OAAO6hK,mDAI7B1uK,KAAK8jK,UAAU18H,+yCGvIvB,IAOqBsuJ,0DAEjB,SAAAA,gBAAa9zK,QAAQ,IAAA1M,MAAA,qKAAAygL,CAAA31L,KAAA01L,kBACjBxgL,MAAA0gL,2CAAA51L,KAAA61L,gCAAAH,iBAAA/8L,KAAAqH,KAAM4hB,OAAO7oB,KAAM6oB,OAAO/U,OAAOgc,WAAY,KACxCimK,UAAUltK,QACf1M,MAAK4rB,UAAUlf,OAAO/U,OAAOi0B,WAHZ5rB,mZAFoBs5K,oUAQ5B71J,WACT,IAAMvd,IAAMpb,KAAK4hB,OAAO/U,OAAOuO,IACzBK,OAASzb,KAAK4hB,OAAO/U,OAAO4O,OAFdq6K,sBAGa91L,KAAK4hB,OAAO/U,OAAO2xK,WAA5C9jB,WAHYo7B,sBAGZp7B,WAAYC,SAHAm7B,sBAGAn7B,SACpBhiI,UAAUgB,MpEyCM,WAID,WoE5CfhB,UAAUgB,MpEdG,QAyDD,QoE1CZhB,UAAUgB,MpEdI,SAwDF,QoExCR+gI,YAAyB,IAAXj/I,SACdkd,UAAUgB,MpEoCE,WADF,UoElCVhB,UAAUgB,MpEnBD,QoEmBc,SAGvBghI,UxCwMU,WwCxMEv/I,MACZud,UAAUgB,MpE+BE,WADF,UoE7BVhB,UAAUgB,MpEvBA,SoEuBc,2DAIlB1D,YAEV,IAAM+lE,YAAch8F,KAAK4hB,OAAO/U,OAAOmvF,YACjC5gF,IAAMpb,KAAK4hB,OAAO/U,OAAOuO,IACzBK,OAASzb,KAAK4hB,OAAO/U,OAAO4O,OAC5BoN,WAAa7oB,KAAK4hB,OAAO/U,OAAOgc,WAChCooI,OAASjxJ,KAAK4hB,OAAO/U,OAAOokJ,OAG5B8kC,mBAAqB/tG,YAAY/xD,WAAY,OAAQ,GAArB,GAAAva,OAA4BsgF,YAA5B,UAAAtgF,OAAgDN,IAAhD,KAAAM,OAAuDD,OAAS,IACjGmiE,QADsB,GAAAliE,OACXsgF,YADW,UAAAtgF,OACSN,MAAO,GACtCwiE,QAFsB,GAAAliE,OAEXsgF,YAFW,UAES,GAEpCh8F,KAAKg2L,YAAYD,oBAbK,IAAAE,e1BuKvB,SAASC,cAAeh6I,OAAQ5gD,KAAM2G,OACzC,IAAIskL,MAAQ,KACRJ,WAAajqI,OAF+Bi6I,qBAO5CjP,oBAAmB,GAAAxrK,OAAIpgB,KAAJ,KAAAogB,OAAYzZ,QAH/B8kL,YAJ4CoP,qBAI5CpP,YACAC,gBAL4CmP,qBAK5CnP,gBACAC,UAN4CkP,qBAM5ClP,UAQJ,OALI/qI,OAAOx6C,SAGP6kL,MAAQU,UADRd,WAAaa,gBAAgB9qI,OADf6qI,YAAY7qI,QACb8qI,GACLC,KAEHd,sBAAYI,a0BnKb2P,CAAcl2L,KAAK8jK,UAAW1oJ,IAAKK,QAFnC0qK,WAhBkB8P,eAgBlB9P,WACAI,MAjBkB0P,eAiBlB1P,MAIIplH,MAAUnhE,KAAKo2L,YAAYL,mBAAjB,GAAAr6K,OAAwCsgF,YAAxC,SAA4DmqF,YAAtEhlH,O1BgNU,SAAbk1H,WAAcl1H,MAAOolH,MAAO15K,OAAQvR,MAC7C,IAAMg7L,QAAUjP,eAAe/rL,MAC3Bg7L,SACAA,QAAQn1H,MAAOolH,MAAO15K,Q0BjNtBwpL,CAAWl1H,MAAOolH,OAAS19J,sBAAYooI,eAA7B,GAAAv1I,OAA0CN,IAA1C,KAAAM,OAAiDD,SAzDxC,SAArB86K,mBAAsBp1H,OAExBA,MAAMh6B,KAAK,SAAUi7B,MACjBA,KAAKgoF,YAAY7lD,OAAOvkG,QAuDxBu2L,CAAmBp1H,OAEnBA,MAAMvO,OAAOzrB,KAAK,SAACi7B,MACfA,KAAKgoF,YAAYhjH,WAGrB29I,2BAAa5jH,MAAO8vF,OAAQ71I,IAAKK,wDAGxBiY,MAAOoN,UAAWi1I,SAC3B,IAAM5yE,MAAQnb,YAAYt0D,MAAO,SAAU,UAAlB,GAAAhY,OAAgColB,UAAhC,WACnB2C,KAAOukD,YAAYmb,MAAO,SAAU,UAAlB,GAAAznF,OAAgColB,UAAhC,UAClBhmB,KAAOktE,YAAYvkD,KAAM,KAAMsyI,QAAb,GAAAr6J,OAAyBolB,UAAzB,QAIxB,OAASqiE,YAAO1/D,UAAM3oB,UAAMqmD,MAHd6mB,YAAYltE,KAAM,KAAM,SAAChiB,EAAGN,GAAJ,OAAUM,EAAE4a,OAAO,SAAAhZ,GAAC,OAAU,OAANA,IAAYuN,IAAI,SAAAvN,GAAC,OAClD0vJ,YAAa1vJ,EAAGyxI,SAAU3zI,MAD9B,GAAAkjB,OACwColB,UADxC,UAC4D,SAAA/mC,KAAG,OAAIA,IAAIqwJ,YAAY1xH,wCAK1GC,WACF34B,KAAKw2L,aAAa79J,WAAaT,SAASgB,eAAel5B,KAAK6jK,iEAGjDjiJ,QAIX,OAHA5hB,KAAKjH,KAAK6oB,OAAO7oB,MACjBiH,KAAK4mG,SAAShlF,OAAO/U,OAAOgc,YAC5B7oB,KAAK8uL,UAAUltK,QACR5hB,iDAGA4hB,QACP5hB,KAAK8jK,UAAYliJ,OAAOkiJ,UACxB9jK,KAAK4hB,OAASA,OACd5hB,KAAKq9C,OAAOz7B,OAAO/U,OAAOwwC,QAC1Br9C,KAAKqiC,SxCoIM,OwCnIXriC,KAAK8gC,UAAUlf,OAAO/U,OAAOi0B,6xCC5FrC,IAAM21J,iCAAoB,SAApBA,kBAAqBtuK,KAAM6zE,YAAa06F,cAAep7L,MACzDysF,6BAAc5/D,MACGsqC,UADjB,IAAA/2C,OAC+BsgF,YAD/B,UAEiB3hG,SAASiB,KAAMo7L,gBAwBfC,sDAEjB,SAAAA,cAAa/0K,QAAQ,IAAA1M,MAAA,mKAAA0hL,CAAA52L,KAAA22L,gBACjBzhL,MAAA2hL,yCAAA72L,KAAA82L,8BAAAH,eAAAh+L,KAAAqH,KAAM4hB,OAAO7oB,KAAM6oB,OAAO/U,OAAOgc,WAAY,KACxC4mJ,kBACLv6J,MAAK45K,UAAUltK,QAHE1M,6YAFkBs5K,gUAcnC,IALA,IAAI9yJ,OAAS,EACTD,MAAQ,EAFAs7J,sBAGmC/2L,KAAK8jK,UAAUiP,WAAtDC,iBAHI+jB,sBAGJ/jB,iBAAkBsQ,iBAHdyT,sBAGczT,iBACpB9E,WAAax+K,KAAK8jK,UAAU0a,aAEzBhmL,EAAI,EAAGA,EAAI,EAAGA,IAAK,CAClBwH,KAAKyvK,eAAe/tK,QAAU1B,KAAKyvK,eAAej3K,aAAcqQ,QAClE7I,KAAKyvK,eAAej3K,OAExB,IAAK,IAAI0iB,EAAI,EAAGA,EAAI,EAAGA,IAAK,CACxB,IAAM87K,WAAct7J,OAAQ4nJ,iBAAiBW,WAAWzrL,GAAIijC,MAAO6nJ,iBAAiBU,UAAU9oK,IACxFghC,OAAS82H,iBAAiB5/B,SAAjB,GAAA13H,OAA6B44J,iBAAiB97K,KAAM0iB,GAC7D+7K,WAAU,GAAAv7K,OAAM44J,iBAAiB97K,GAAvB,KAAAkjB,OAA6B84J,oBAAoBt5J,IAC3D60I,cACFlnI,WAAYmuK,UACZ/lC,OAAQqyB,iBAAiBryB,OACzBj1D,YAAah8F,KAAK4hB,OAAO/U,OAAOmvF,YAChCwiF,sBACApjK,IAAKk5J,iBAAiB97K,GACtBijB,OAAQP,GAEZ,GAAIlb,KAAKyvK,eAAej3K,GAAG0iB,aAAcszK,cACrCxuL,KAAKyvK,eAAej3K,GAAG0iB,GAAGg8K,eACtBn+L,KAAMk+L,WACNnzB,UAAW5nH,OACXrvC,OAAQkjJ,mBAET,CACH,IAAMonC,cAAgB,IAAIzB,kCACtB38L,KAAMk+L,WACNnzB,UAAW5nH,OACXrvC,OAAQkjJ,eAEZ/vJ,KAAKyvK,eAAej3K,GAAG0N,KAAKixL,eAEtB,IAAN3+L,IACAijC,OAASu7J,UAAUv7J,OAEb,IAANvgB,IACAwgB,QAAUs7J,UAAUt7J,SAIhC17B,KAAK4mG,UAAWlrE,cAAQD,cAExBz7B,KAAK8jK,UAAY9jK,KAAKyvK,eACtBzvK,KAAKo3L,cAAgBp3L,KAAKyvK,2EAI1B,OAAIrqK,UAAQ1D,QACR1B,KAAKq3L,kBAALjyL,UAAA1D,QAAA,OAAA6L,EAAAnI,UAAA,GACOpF,MAEJA,KAAKq3L,sFAUQ,IAAAjiL,OAAApV,KAuBpB,OAtBA+nF,6BAAa,IAAArsE,OAAK1b,KAAK8jK,UAAU,GAAG,GAAGD,aACtBz2F,GAAG,QAAS,WACT,IAAMuM,MAAQ0P,0BAEViuG,YAEA39G,MAFA29G,YACAC,YACA59G,MADA49G,YAIJ59G,MAAM2G,iBACN3G,MAAM7iD,kBAGc,IAAhBwgK,aAAqBzzL,KAAKooB,IAAIqrK,aAAezzL,KAAKooB,IAAIsrK,cACtDniL,OAAKoiL,mBAAmBC,uBAAuB,aAAcH,aAI7C,IAAhBC,aAAqB1zL,KAAKooB,IAAIqrK,aAAezzL,KAAKooB,IAAIsrK,cACtDniL,OAAKoiL,mBAAmBC,uBAAuB,WAAYF,eAG5Ev3L,qEAGU48F,UAAW86F,WAE5B,OApHoB,SAAtBC,oBAAuBjD,SAAUp4J,SACnC,IAAM0/D,YAAc1/D,QAAQ1a,OAAO/U,OAAOmvF,YAE1C,OACI0+D,WAAY,SAAAA,cACP,EAAG,EAAG,GAAG5xJ,QAAQ,SAAApO,GAAC,OACf+7L,iCAAiB,IAAA/6K,OAAK4gB,QAAQwnI,UAAUppK,GAAG,GAAGmpK,YAAc7nE,YAAa04F,SAAU,iBAE3F/5B,SAAU,SAAAA,YACL,EAAG,EAAG,GAAG7xJ,QAAQ,SAAApO,GAAC,OACf+7L,iCAAiB,IAAA/6K,OAAK4gB,QAAQwnI,UAAU,GAAGppK,GAAGmpK,YAAc7nE,YAAa04F,SAAU,iBAyG3FiD,CAAoBD,UAAW13L,MAAM48F,aAC9B58F,uDAGI,IAAA43L,sBACW53L,KAAK8jK,UAAU,GAAG,GAAGl9D,WAAnCtkE,IADGs1J,sBACHt1J,IAAKoD,KADFkyJ,sBACElyJ,KADF+oJ,eAEezuL,KAAK4mG,WAE/B,OACItkE,QACAoD,UACAhK,OAPO+yJ,eAEH/yJ,OAMJD,MAROgzJ,eAEKhzJ,2DAUL7Z,QAIX,OAHA5hB,KAAKjH,KAAK6oB,OAAO7oB,MACjBiH,KAAK4mG,SAAShlF,OAAO/U,OAAOgc,YAC5B7oB,KAAK8uL,UAAUltK,QACR5hB,iDAGA4hB,QAMP,OALA5hB,KAAK8jK,UAAYliJ,OAAOkiJ,UACxB9jK,KAAK4hB,OAASA,OACd5hB,KAAKq9C,OAAOz7B,OAAO/U,OAAOwwC,QAC1Br9C,KAAK8gC,UAAUlf,OAAO/U,OAAOi0B,WAC7B9gC,KAAK63L,eACE73L,2qBC9Jf,IAAM83L,WACF9hC,OACI+hC,WAAY,YACZC,WAAY11B,cAEhBU,UACI+0B,WAAY,eACZC,WAAYz1B,mBAad01B,4CAAsB,SAAtBA,oBAAuBC,WAAYC,cAAeC,eACpD,IAAIv/J,QAAU,KAENuoH,WAA6Bg3C,cAA7Bh3C,WAAYk8B,aAAiB8a,cAAjB9a,aAHkD+a,sBAInCP,UAAUI,YAArCH,WAJ8DM,sBAI9DN,WAAYC,WAJkDK,sBAIlDL,WACd36I,QAAWA,OnEfC,UmEiBlB,GAAI+jG,WAAW9nI,SAAW8nI,WAAW9nI,QAAQy+K,YAAa,CACtD,IAAIO,aAAehb,aAAa4a,YAC1B1+K,OAAS4nI,WAAW9nI,QAAQy+K,Y1CwMpB,Y0CtMdO,aAAep/L,OAAO4T,UAAWwrL,aAAlBC,sCACXv8F,YAAashF,aAAathF,aACvB3+C,QACHkxH,UAAS,GAAA7yJ,OAAK44J,iBAAiB,GAAtB,KAAA54J,OAA4B84J,oBAAoB,IACzD9F,UAAWjM,kBACX3hI,UAAWk3J,WAAWl3J,cAGToI,QACbovJ,aAAa5pB,UAAY,KACzB4pB,aAAa/pB,UAAY,MAEzB+pB,aAAapvJ,QAAU2kE,sBACvByqF,aAAa5pB,UAAY7gE,qBAG7B,IAAM2qF,eACFz/L,KAAMm/L,WACNp0B,UAAWtqJ,OACX3M,OAAQyrL,cAGNG,kBAAoBN,cAAc5oB,aAAa2oB,YAEjDr/J,QADA4/J,kBACUA,kBACCvB,cAAcsB,eAEf,IAAI9J,gCAAgB8J,eAGtC,OAAO3/J,SAuCL6/J,+CAAyB,SAAzBA,uBAA0BC,cAAeR,cAAeC,cAAeQ,MACzE,IACQtb,aAAiB8a,cAAjB9a,aACFjgI,QAAWA,OnE7FC,UmE8FV4mH,UAAcqZ,aAAdrZ,UACAqf,iBAAqBsV,KAAK7lB,WAA1BuQ,iBAEJY,qBAGAZ,iBAHAY,qBACAE,YAEAd,iBAFAc,YACAC,WACAf,iBADAe,WAT8EwU,sBAnCjE,SAAfC,aAAejsL,QAAM,OACvB8tJ,UACIoJ,cAAe,oBACftoI,MAAO,YACPC,OAAQ,qBACRq9J,mBtE9Dc,SsE+DdC,YAAa,aACbC,SAAU,EACVC,SAA2B,UAAjBrsL,OAAOq8B,MAAoB,EAAI,EACzC7G,SAAUx1B,OAAOq8B,MACjBwlI,UAAW/gE,mBAEf+sD,YACIqJ,cAAe,sBACftoI,MAAO,qBACPs9J,mBtEzEa,QsE0EbC,YAAa,YACbt9J,OAAQ,YACRu9J,SAA2B,QAAjBpsL,OAAOq8B,MAAkB,EAAI,EACvCgwJ,SAAU,EACV72J,SAAUx1B,OAAOq8B,MACjBwlI,UAAW9gE,qBA4BXkrF,CAAa70B,UAAU00B,gBAAgBA,eAFvC50B,cAZ8E80B,sBAY9E90B,cAAeg1B,mBAZ+DF,sBAY/DE,mBAAoBt9J,MAZ2Co9J,sBAY3Cp9J,MAAOC,OAZoCm9J,sBAYpCn9J,OAAQu9J,SAZ4BJ,sBAY5BI,SAAUC,SAZkBL,sBAYlBK,SAC5DF,YAb8EH,sBAa9EG,YAAa32J,SAbiEw2J,sBAajEx2J,SAAUqsI,UAbuDmqB,sBAavDnqB,UAErB7lJ,YACFq7I,UAAWD,UAAUC,UACrB60B,mBAAoBzV,iBAAiB0V,aAAa,IAEhD3Z,SAAWuZ,KAAKpa,aAAama,eAC7BrI,YAAcpM,qBAAqB6U,oBACnCxI,WAAajN,iBAAiB0V,aAAa,GAgB3CR,eACFz/L,KAAMgrK,cACNl3J,OAhBiB3T,OAAO4T,UAAPyrL,sCACjBv8F,YAAashF,aAAathF,aACvB3+C,QACH+3I,yBAA0BmD,wCACnBt0B,WACHjoE,YAAashF,aAAathF,cAG9B1gG,KAAMq9L,cACNpqB,UAAS,GAAA7yJ,OAAK44J,iBAAiB2kB,UAAtB,KAAAv9K,OAAmC84J,oBAAoB0kB,WAChExqB,oBACArsI,qBAMAxZ,YACI4S,MAAO5S,WAAW4S,OAClBC,OAAQ7S,WAAW6S,QACnB40J,wBACAC,sBACAnM,wBACAC,wBAIFoU,kBAAoBN,cAAc5oB,aAAaxL,eAErD,OAAKsb,SAKDoZ,kBACmBA,kBACMvB,cAAcsB,eAEpB,IAAItD,gBAAgBsD,gBARvCC,mBAAqBA,kBAAkBrxJ,SAChC,OA4FF+xJ,8CAAwB,SAAxBA,sBAAyBhB,cAAeS,KAAMR,eAAtB,OACjCpiC,MAAOiiC,4CtErOU,QsEqOiBE,cAAeC,eACjDp1B,SAAUi1B,4CtErOW,WsEqOoBE,cAAeC,eACxDh0B,OA1EwB,SAAtBg1B,oBAAuBjB,cAAeC,eACxC,IAAIiB,cAAgB,KACZj4C,WAA0Cg3C,cAA1Ch3C,WAAYk8B,aAA8B8a,cAA9B9a,aAAch+E,YAAgB84F,cAAhB94F,YAC5BjiD,QAAWA,OnExKC,UmE0KlB,GAAI+jG,WAAWusC,SAAWvsC,WAAWusC,QAAQjsL,OAAQ,CACjD,IAAM+rL,aAAe8K,wCAAKjb,aAAalZ,OAAW/mH,QAAQiiD,0BACpDk5F,eACFz/L,KtEtKU,SsEuKV+qK,UAAW1iB,WAAWusC,QACtB9gL,OAAQ4gL,cAGNgL,kBAAoBN,cAAc5oB,atE3K1B,UsE8KV8pB,cADAZ,kBACgBA,kBACJvB,cAAcsB,eAEV,IAAIvJ,gCAAgBuJ,eAG5C,OAAOa,cAoDCD,CAAoBjB,cAAeC,eAC3CQ,KAzCsB,SAApBU,kBAAqBnB,cAAeC,cAAeQ,MACrD,IACMv7I,QAAWA,OnEzMC,UmE0MVigI,aAAiB8a,cAAjB9a,aAQFkb,eACFz/L,KnErNY,OmEsNZ+qK,UAAW80B,KACX/rL,OATW0rL,wCACRl7I,QACH2mH,WAAYsZ,aAAatZ,WACzBhoE,YAAashF,aAAathF,YAC1BnzE,YAAc6S,OAAQ,EAAGD,MAAO,MAO9Bg9J,kBAAoBN,cAAc5oB,anEzNxB,QmEgOhB,OANIkpB,kBACcA,kBACDvB,cAAcsB,eAEb,IAAI7B,6BAAc6B,eAoB9Bc,CAAkBnB,cAAeC,cAAeQ,MACtDW,kBAAmBb,+CtEnMC,WsEmMgCP,cAAeC,cAAeQ,MAClFY,oBAAqBd,+CtEnMC,asEmMkCP,cAAeC,cAAeQ,0SCrQnF,IAAMa,cAAb,WAEI,SAAAA,6KAAeC,CAAA15L,KAAAy5L,eACXz5L,KAAK25L,wBACL35L,KAAK45L,uBAJb,sPAAAC,CAAAJ,gBAAA1/L,IAAA,sBAAAN,MAAA,SAAAqgM,sBAQQ,OAAI10L,UAAI1D,QACJ1B,KAAK25L,qBAALv0L,UAAA1D,QAAA,OAAA6L,EAAAnI,UAAA,GACOpF,MAEJA,KAAK25L,wBAZpB5/L,IAAA,qBAAAN,MAAA,SAAAsgM,qBAgBQ,OAAI30L,UAAI1D,QACJ1B,KAAK45L,oBAALx0L,UAAA1D,QAAA,OAAA6L,EAAAnI,UAAA,GACOpF,MAEJA,KAAK45L,uBApBpB7/L,IAAA,gCAAAN,MAAA,SAAA66L,8BAuBmCh5L,KAAM+4L,iBACjCn7L,OAAOwlB,OAAO1e,KAAK+5L,sBAAsBjxL,QAAQ,SAACpO,GAC9CA,EAAEs/L,oBAAoB1+L,KAAM+4L,sBAzBxCt6L,IAAA,yBAAAN,MAAA,SAAAg+L,uBA6B4Bn8L,KAAMi5L,OAC1Bv0L,KAAK85L,sBAAsBx+L,OAAS0E,KAAK85L,sBAAsBx+L,MAAMo3L,cAAc6B,WA9B3FkF,cAAA,GC+CaQ,8BAAmB,SAAnBA,iBAAoB39J,QAAS5I,OACtC,IAAI4pJ,aAAeruG,kBAAmB3yC,QAAQzvB,UADEqtL,sBAGxBxmK,MAAM6rD,wBAAxB7jD,OAH0Cw+J,sBAG1Cx+J,OAAQD,MAHkCy+J,sBAGlCz+J,MACR0+J,WAAa79J,QAAQZ,SACrB0+J,UAAY99J,QAAQb,QACpB4+J,SAAW/9J,QAAQ8tD,cAAc62E,YANSq5B,sBAc5CD,SAAS5pC,kBANTrI,kBAR4CkyC,sBAQ5ClyC,kBACAD,eAT4CmyC,sBAS5CnyC,eACAhrE,SAV4Cm9G,sBAU5Cn9G,SACAriE,KAX4Cw/K,sBAW5Cx/K,KACAjB,QAZ4CygL,sBAY5CzgL,QACA6E,OAb4C47K,sBAa5C57K,OAb4Ck3F,gBAuB5Ct5E,QAAQzvB,SAPRmxB,SAhB4C43E,gBAgB5C53E,SACAqmI,UAjB4CzuD,gBAiB5CyuD,UACAroE,YAlB4C4Z,gBAkB5C5Z,YACAsyD,YAnB4C14C,gBAmB5C04C,YACA8V,OApB4CxuD,gBAoB5CwuD,OACAJ,WArB4CpuD,gBAqB5CouD,WACAC,UAtB4CruD,gBAsB5CquD,UAIElB,YAAczmI,QAAQ05H,QAAQ,GAE9BkN,eAAiB5mI,QAAQ0mI,WAAW,GAEpCu3B,eAAiBn2B,OAAO/hI,SAExBm4J,kB5BvEuB,SAApBC,kBAAqBn+J,SAAY,IAAAo+J,cACpCjN,aAAenxJ,QAAQzvB,SAASu3J,OAChCrB,YAAczmI,QAAQ05H,QAAQ,GAC9BkN,eAAiB5mI,QAAQ0mI,WAAW,GACpC23B,cAAYC,kCAAAF,iBAAA,GAAAh/K,OACViyF,kBADU,KAAAjyF,OACHiyF,oB5CcE,QACI,WAgCJ,U4ChDCitF,kCAAAF,cAAA,GAAAh/K,OAEVgyF,qBAFU,KAAAhyF,OAEAgyF,uB5C8CD,QAhCI,WADJ,U4CfCktF,kCAAAF,cAAA,GAAAh/K,OAGViyF,kBAHU,KAAAjyF,OAGHgyF,uB5CYE,QAiCA,QAhCI,a4ChBHktF,kCAAAF,cAAA,GAAAh/K,OAIVgyF,qBAJU,KAAAhyF,OAIAiyF,oB5CYG,WAgCJ,QAjCA,U4CfC+sF,eAMZG,gB5CQY,SAmCA,oBAnCA,W4CJZC,cAAgB/3B,YAAY1gI,UAAYsrE,kBACxCotF,iBAAmB73B,eAAe7gI,UAAYsrE,kBAEpD,OACIr0F,QAASqhL,aAAY,GAAAj/K,OAAIo/K,cAAJ,KAAAp/K,OAAqBq/K,mBAC1CpN,QAASF,aAAaprJ,WAAaurE,oBAAQ6/E,aAAaprJ,WAAasrE,kBACrEktF,cAAc,GAAKA,cAAc,I4BmDXJ,CAAkBn+J,SAE5CZ,OAAS73B,KAAKwN,MAAMqqB,QACpBD,MAAQ53B,KAAKwN,MAAMoqB,OAEnB,IAAMu/J,yBAA2Bn3L,KAAKwQ,IAAI8lL,WAAa,EAAIA,WAAaz+J,OAAQ2oI,WAC1E42B,wBAA0Bp3L,KAAKwQ,IAAI+lL,UAAY,EAAIA,UAAY3+J,MAAOuC,UAtC5Bk9J,efoCvB,SAAhBnqC,cAAiBz0H,QAAS6+J,aAAcC,aACjD,IAAIxN,aAAe,EACbt0K,WACA0pJ,SAAW1mI,QAAQ0mI,WACnBq4B,WAAa3O,wCAA4B1pB,SAAS,IAsBxD,OApBAm4B,cAAgB,KAAOC,aAAe,MAAQ,QAAS,YAAYtyL,QAAQ,SAACxN,MACxE,IAAMggM,cAAgBh/J,QAAQhhC,QACxBojG,QAAUguF,wCAA4B4O,cAAc,IAC1D,GAAI58F,QAAQh9F,OAAQ,CAChB,IAAMmL,OAASyuL,cAAc,GAE7BzuL,OAAO4uB,MAAQa,QAAQb,QACvB5uB,OAAO6uB,OAASY,QAAQZ,SACxB7uB,OAAOmvF,YAAc1/D,QAAQzvB,SAASmvF,YACtCnvF,OAAO6xF,QAAUA,QACjB7xF,OAAO21B,QAAoB,UAATlnC,MAAqB+/L,WAAW35L,OAAgCmL,OAAO21B,QAA7BwgI,SAAS,GAAGxgI,QAPxD,IAAA+4J,eASSnO,cAAcvgL,OAAQvR,KAAMghC,QAAQ5gC,eAAew+B,WACxEoC,QAAO,GAAA5gB,OAAIpgB,KAAJ,UADHogC,OATQ6/J,eASR7/J,OAAQ0mC,KATAm5H,eASAn5H,KAGhB9oD,QAAO,GAAAoC,OAAIpgB,KAAJ,SAAkB8mE,KACzB9lC,QAAQuzH,aAAav0J,MAAQ8mE,KAC7BwrH,cAAgBlyJ,WAGfkyJ,0BAAct0K,iBerBWy3I,CAAcz0H,QAAS0+J,yBAA0BC,yBAA3E3hL,QAzCwC4hL,eAyCxC5hL,QAASs0K,aAzC+BsN,eAyC/BtN,aAGXD,QdwEkB,SAAf6N,aAAgBl/J,QAASsxJ,aAAclyJ,OAAQD,OACxD,IAAM6jE,aACF5jE,cACAD,YACAmyJ,2BAEIxpB,OAAW9nI,QAAQzvB,SAAnBu3J,OACAjmE,KAAmBimE,OAAnBjmE,KAAM97D,SAAa+hI,OAAb/hI,SAEd+hI,OAAOpoE,YAAc1/D,QAAQzvB,SAASmvF,YACtC,IAAM9yD,MAAS7G,WAAaurE,oBAAQvrE,WAAawrE,oB1D5G7B,WACE,a0D+GtB,OAFAu2D,OAAOjmE,KAAOA,K1D9GM,a0D8GGj1D,OAAsBzN,MAAQ,K1D7G/B,e0D6GwCyN,OAAwBxN,OAAS,IAAQyiE,KACvGimE,OAAOl7H,MAAQA,MACRskJ,+BAAkBppB,OAAQ9nI,QAASgjE,YAAahjE,QAAQqxJ,actF/C6N,CAAal/J,QAASsxJ,aAAcoN,yBAA0BC,yBAC9E3+J,QAAQuzH,aAAauU,UACrBupB,QAAQ7kL,QAAQ,SAACpO,GACb4hC,QAAQuzH,aAAauU,OAAO1pK,EAAEi8J,WAAaj8J,EAAE0pK,SAGjD,IAAMirB,Yd2BoB,SAAjBoM,eAAkB9N,QAASF,aAAcnR,gBAAiBjB,gBACnE,IACMgU,aAAgB5zJ,MAAO,EAAGC,OAAQ,GA2BxC,OA5BuBiyJ,QAAQ1lL,IAAI,SAAA4lL,YAAU,OAAIA,WAAWzpB,OAAO9kE,gBAGpDx2F,QAAQ,SAAC0tE,OACpB,IAAI96C,OACAD,MACJA,MAAQ53B,KAAKsQ,IAAIqiE,MAAM/6C,MAAO+6C,MAAM35C,UACpCnB,OAAS73B,KAAKsQ,IAAIqiE,MAAM96C,OAAQ86C,MAAM15C,W1DlEpB,e0DoEd2wJ,aAAavkJ,MACTmmJ,YAAY5zJ,MAAQA,MAAQ4/I,gBAC5BgU,YAAY5zJ,MAAQ4/I,eACpBgU,YAAY3zJ,QAAUA,SAEtB2zJ,YAAY5zJ,OAASA,MACrB4zJ,YAAY3zJ,OAAS73B,KAAKwQ,IAAIg7K,YAAY3zJ,OAAQA,SAE/C2zJ,YAAY3zJ,OAASA,OAAS4gJ,iBACrC+S,YAAY3zJ,OAASA,OACrB2zJ,YAAY5zJ,OAASA,QAErB4zJ,YAAY3zJ,QAAUA,OACtB2zJ,YAAY5zJ,MAAQ53B,KAAKwQ,IAAIg7K,YAAY5zJ,MAAOA,U1DjFlC,e0DoFlBgyJ,aAAavkJ,QACbmmJ,YAAY5zJ,MAAQ4/I,gBAEjBgU,YcxDaoM,CAAe9N,QAASvpB,OAAQ42B,yBAA0BC,yBACxEjL,YAAeuK,iBAAmB3sF,oBAAQ2sF,iBAAmB1sF,oBAASwhF,YAAY5zJ,MAAQ,EAC1Fs0J,aAAgBwK,iBAAmB5sF,mBAAO4sF,iBAAmB7sF,qBAAU2hF,YAAY3zJ,OAAS,EAG5F0lH,YACF9nI,gBACAq0K,gBACA7sB,UAAWxkI,SACXxhB,UACAjB,gBACA6E,cACAoyI,eAAgBupC,SAASvpC,kBAGvBxxD,aACFo8F,YACIhgK,cACAD,aAEJmyJ,0BACAyB,wBACA+L,YAAaH,wBACbE,aAAcH,yBACdv/J,MAAOw/J,wBAA0BjL,YACjCt0J,OAAQs/J,yBAA2BpN,aAAemC,aAClD7b,cAAe53I,QAAQ43I,gBACvBD,aAAc33I,QAAQ23I,gBAiB1B,OACIqJ,aAhBJA,aAAeruG,eAAequG,cAC1BthF,wBACAsyD,wBACA2C,OAAQhiF,eAAeorH,SAASrpC,WAAWC,OAAQ30H,QAAQzvB,SAASokJ,QACpEupC,oCACAp2B,cACAtrG,OAAQmrG,UAAUC,UAClBF,sBACAhO,MAAO+M,YACPC,SAAUE,eACV9a,oCACAD,8BACAz0H,YACAypD,oBAIAikE,sBACA9hD,0BAIFq8F,kBACF3lC,MAAO,EACPgN,SAAU,EACVoB,OAAQ,EACRm1B,kBAAmB,EACnBC,oBAAqB,EACrBZ,KAAM,GA0CGgD,0BAAe,SAAfA,aAAgB56B,OAAQo3B,eACjC,IAAMD,cAAgBn3B,OAAO66B,eACvBC,WAAa96B,OAAO8R,SAGtB8lB,KACA+C,iBADA/C,KAIEmD,aAAe5C,8CAAsBhB,cAAe2D,WAAY1D,eAChE4D,kBAAoB9iM,OAAO4M,KAAK61L,kBAAkB1zL,IAAI,SAAAvN,GAAC,OAAIqhM,aAAarhM,KACxEuhM,YAAcD,kBAAkBpD,OA1Cd,SAAtBsD,oBAAuBF,kBAAmBh7B,QAAW,IAGnDu4B,kBAEAoC,iBAFApC,kBACAX,KACA+C,iBADA/C,KAGEuD,wBAA0BH,kBAF5BL,iBAHAnC,qBAME4C,sBAAwBJ,kBAAkBzC,mBAC1C0C,YAAcD,kBAAkBpD,MAChCpB,iBAAmB,IAAIiC,cACvBK,uBAENsC,wBAA0BtC,oBAAoBn/B,SAAWyhC,uBACzDD,0BAA4BrC,oBAAoBp/B,WAAayhC,yBAE7D3E,iBACiBsC,oBAAoBA,qBACpBC,oBACGnB,KAAMqD,cAE1Bj7B,OAAO52E,cAAciyG,WAAaF,wBAClCn7B,OAAO52E,cAAckyG,WAAaF,uBAEjCD,wBAAyBC,uBAAuBtzL,QAAQ,SAAC+vB,SACtDA,SAAWA,QAAQq5J,QAAQsF,oBAG/ByE,YAAYzE,iBAAiBA,kBAe7B0E,CAAoBF,kBAAmBh7B,QAEvCm3B,cAAcoE,mBAAmBP,mBAAmB1qB,UACpD2qB,YAAYO,6wDCxMhB,IAAMC,0BAA2B,SAA3BA,yBAA4BjpD,YAAah+C,UAAa,IAAAlhE,KAAA81C,MAClDsyH,UAAY,SAAZA,UAAYnxL,OAAK,OAAIA,MAAMjQ,SAAWy5F,yBAAU31F,SAEhD6hK,YADSzrE,SAASl5D,QACG8tD,cAAc62E,YACnCrsE,SAAUtgE,SAAG5Y,OAAHnU,MAAA+sB,KAAAqoK,iCAAa17B,YAAY27B,qBAAqB,OACxD/nG,SAAUzqB,UAAG1uD,OAAHnU,MAAA6iE,MAAAuyH,iCAAa17B,YAAY27B,qBAAqB,OACxDC,OAASjoG,QAAQ/1E,MAAM,SAAAtT,OAAK,OAAIA,MAAMjQ,SAAWy5F,yBAAU11F,YAC3Dy9L,SAAW77B,YAAY3vI,WAAWvK,eAClCu+H,UAAYw3C,SAASx3C,UACrBC,UAAYu3C,SAASv3C,UAC3B/R,YAAYrsG,KAAK,SAACi7B,MACd,IAAMuxG,aAAevxG,KAAKrjD,UAAUy2E,WACpC,IAAMZ,QAAQ/1E,MAAM69K,aAAc7nG,QAAQh2E,MAAM69K,WAAa,CACzD,IAGIv/C,WAHEpM,YAAc3uE,KAAKrjD,UAAUq+H,gBAAgB,GAC7C2/C,cAAgBhsD,YAAYr9H,OAAO,SAAA5a,GAAC,OAA+C,IAA3CysJ,UAAUn/H,UAAU,SAAAxc,GAAC,OAAIA,EAAEozL,OAAOlkM,OAC1EmkM,cAAgBlsD,YAAYr9H,OAAO,SAAA5a,GAAC,OAA+C,IAA3CwsJ,UAAUl/H,UAAU,SAAAxc,GAAC,OAAIA,EAAEozL,OAAOlkM,OAG5EqkJ,WADA0/C,OACaE,cAAc90L,IAAI,SAAAnP,GAAC,SAAA4iB,OAAO5iB,KAE1BmkM,cAAch1L,IAAI,SAAAnP,GAAC,SAAA4iB,OAAO5iB,KAG3C66K,aAAaupB,cAAc,IAAK//C,YAAY,OAKlDggD,gCACF9rG,YACI6wE,IAAK,SAAAhhJ,EAACihJ,mBAAoB7lI,SACtB,IAAM8gK,uBAAyBj7B,mBAAmBnlB,aAC5CwW,YAAcl3H,QAAQ2gH,cAC5B,OAAOmgD,wBAAyB5pC,cAAgB4pC,yBAGxDtvG,aACIiM,QAAS,SAAAA,QAACooE,mBAAoB7lI,SAC1B,IAAM+gK,gBAAkBl7B,mBAAmBplB,WACrCqlB,kBAAoBD,mBAAmBnlB,aACvCuB,OAASjiH,QAAQ5D,KACjB86H,YAAcl3H,QAAQ2gH,cAC5B,OAAImlB,oBACOA,oBAAsB5O,aAAqBjV,SAAW8+C,oBCpD9DC,oCD0EX,SAAAA,gBAAwB,IAAAn3F,iBAAAjxF,mKAAAqoL,CAAAv9L,KAAAs9L,eAAA,QAAAh1H,KAAAljE,UAAA1D,OAARkgB,OAAQ,IAAA/Y,MAAAy/D,MAAAC,KAAA,EAAAA,KAAAD,KAAAC,OAAR3mD,OAAQ2mD,MAAAnjE,UAAAmjE,MAAA,OACpBrzD,MAAAsoL,yCAAAx9L,MAAAmmG,iBAAAs3F,8BAAAH,gBAAA3kM,KAAA4O,MAAA4+F,kBAAAnmG,MAAA0b,OAASkG,WACJ6xJ,mBAAqBv+J,MAAK0Q,YAAY62K,2BAC3CvnL,MAAKmtJ,uBAAuBntJ,MAAK0Q,YAAYu3K,iCAHzBjoL,6YADei6E,8UAgBnC,OAAI/pF,UAAO1D,QACP1B,KAAKyzK,oBAAqBruK,UAAA1D,QAAA,OAAA6L,EAAAnI,UAAA,KAAapF,KAAK4lB,YAAY62K,2BACjDz8L,MAEJA,KAAKyzK,2FAGmB,IAAAr+J,OAAApV,KAC/B,GAAIoF,UAAO1D,OAAQ,CACf1B,KAAK0zK,wBAA0BzkG,eAAeA,kBAC1CjvE,KAAK4lB,YAAYu3K,kCAAkC/3L,UAAA1D,QAAA,OAAA6L,EAAAnI,UAAA,SACvD,IAAMk3B,QAAUt8B,KAAKs8B,QAKrB,OAJAi3I,uBAAuBvzK,MACvBs8B,QAAQ6kI,WAAWp1D,2BAA2B56C,aAAYG,gBAAiB,WACvEiiH,uBAAuBn+J,UAEpBpV,KAEX,OAAOA,KAAK0zK,oFA8CGzhF,UAAWhnE,SAC1B,IAAMmxH,YAAcljJ,OAAO4T,OAAOme,SAC5B9N,SAAWi/H,YAAYj/H,SACvBnS,KAAOhL,KAAKs8B,QAAQ8tD,cAAc62E,YAAYqtB,iBAC9C/vK,aAAevT,KAAKwT,kBACpB5B,MAAQszD,yCAA4BllE,KAAMmS,UAC1CugL,kBAAoB19L,KAAK0vF,SAASC,YAAYsC,WAEpD,GAAIyrG,kBAAmB,CACnB,IACMC,aADSxuK,eAAehS,UAAYjkB,OAAO4M,KAAKqX,UAAaA,SAAWA,SAAS,OAC5DzJ,OAAO,SAAAnI,OAAK,OAAIA,SAASgT,eAC9Ci0E,QAAUkrG,kBAAkB93K,YAAY4sE,UACxCzuE,YACFkH,QAASmxH,YACT/4H,OAAQ4uE,UACR90E,SAAUP,MACViG,SAAU7iB,KAAKs8B,QAAQs2F,QACvB5nG,gBAAiBwnE,QACjB1vE,4BAA6B66K,YAAY9+K,MAAM,SAAAtT,OAAK,OAAIgT,aAAahT,OAAOoT,IAAIrjB,OAC5Ey5F,yBAAU31F,WAElB4L,KAAK2nF,UAAU/1E,MAAOmH,YAAY,GAEtC,OAAO/jB,qEAGU8tF,aACjB,IAAK,IAAM/zF,OAAO+zF,YACd9tF,KAAKuvF,uBAAuBzB,YAAY/zF,KAAKwxF,cAAgBuC,YAAY/zF,KAE7E,OAAOiG,mFAtGP,OAAOy8L,gHAIP,OAAOU,oDEvFFS,mBACTC,KACIl+I,SACA+sF,SACApxC,UACA0lE,WAEJpwF,OACIowF,UACArhH,SACA+sF,SACApxC,olDCsBawiG,4CAUjB,SAAAA,OAAaC,oBAAoB,IAAA7oL,2JAAA8oL,CAAAh+L,KAAA89L,SAC7B5oL,wKAAA+oL,CAAAj+L,KAAAk+L,sBAAAJ,QAAAnlM,KAAAqH,QAEKoyK,YAAcl5K,OAAO4T,UAAWnG,YAASm5I,cAC9C5qI,MAAKi3I,aACLj3I,MAAK26I,gBACL36I,MAAKy9J,gBACLz9J,MAAKy+G,OAAS,KACdz+G,MAAK4gI,iBAAmB,KACxB5gI,MAAK2gI,iBAAmB,IAAI5qD,QAAQ,SAAC7hE,SACjClU,MAAK4gI,iBAAmB1sH,UAE5BlU,MAAK26I,aAAaijB,OAAS,IAAIiO,kBAC/B7rK,MAAK69G,OAAS,IAAI/lD,mBAAM4wH,mBAExB1oL,MAAKisJ,WAAa,IAAIn0F,6LAAJmxH,IACbhtI,aAAYG,gBAAiB,IAIlC,IAAMub,UAAYm/B,0BAAiBj7C,uBAC1BpoD,MArBoBy1L,qBAqBX7wH,wBAAW8wH,0DAAAnpL,QAAMvO,YAASuO,MAAK69G,OAAOn2G,OACpDiwD,sBAtByB,aAwB7BU,wBAAW8wH,0DAAAnpL,QAAM4qI,aAAcn3I,OAC3BkkE,sBAEJU,wBAAW8wH,0DAAAnpL,QAAM0tJ,cAAej6J,OAC5BkkE,sBAGJ33D,MAAKxZ,aAAaxC,OAAO4T,UAAWixL,mBAAoB7oL,MAAKijG,gBAC7DjjG,MAAKsgF,SAAS,IAAI8nG,gBAAJe,0DAAAnpL,SACVy6E,YAAakE,4BACbjE,SAAUyE,gBACVvD,2BACDhD,6BAAauB,0CAChBn6E,MAAK09G,MAAL,UAAAl3G,OAAqBnR,gBACrB2K,MAAK8gJ,MAAM,OACX9gJ,MAAK8tJ,SAAS,OACd9tJ,MAAKkvJ,WACLlvJ,MAAKk/B,UACLl/B,MAAKysF,UACLzsF,MAAKolB,SACL43I,2BAAoBmsB,0DAAAnpL,SAEpBA,MAAK2mL,eAAiB/nB,6BA9CO5+J,sXAVDqyK,8SAoE5B,OAAIniL,UAAO1D,OACA1B,KAEJA,KAAKoqF,cAAc0oF,yDAoB1B,OAAI1tK,UAAO1D,OACA1B,KAEJA,KAAK6vJ,iDAIZ,OAAO7vJ,KAAK61I,uDAkBZ,GAAIzwI,UAAO1D,OAAQ,CACf,IAAMu/J,YAAcjhK,KAAKoqF,cAAc62E,YAGvC,OAFAjhK,KAAK2zH,OAALvuH,UAAA1D,QAAA,OAAA6L,EAAAnI,UAAA,GACA67J,aAAeA,YAAYruC,MAAM5yH,KAAK4yH,SAC/B5yH,KAEX,OAAOA,KAAK2zH,mDA4CZ,OAAIvuH,UAAS1D,QACT1B,KAAK+/I,UAAL36I,UAAA1D,QAAA,OAAA6L,EAAAnI,UAAA,GACOpF,MAEJA,KAAK+/I,sDASK,QAAAz3E,KAAAljE,UAAA1D,OAARkgB,OAAQ,IAAA/Y,MAAAy/D,MAAAC,KAAA,EAAAA,KAAAD,KAAAC,OAAR3mD,OAAQ2mD,MAAAnjE,UAAAmjE,MACjB,GAAI3mD,OAAOlgB,OAAQ,CACf,IAAM0/I,WAAaloJ,OAAO4T,UAAW8U,OAAO,GAAGw/H,YACzCuQ,qBAAuBz4J,OAAO4T,UAAW8U,OAAO,GAAG+vI,sBAEzD3xJ,KAAKmsJ,WAAc/K,sBAAYuQ,2CAC/B,IAAM2sC,iBlD3MQ,SAAbC,WAAcjiK,SAGvB,OAAQ,IAFIA,QAAQ6vH,UAAU/K,WAEdmQ,YAAYj1H,QAAQ6vH,UAAWjzJ,OAAO4T,QAClDglH,UAAWx1F,QAAQ6kI,YACpB7kI,QAAQ5gC,kBkDsMsB6iM,CAAWv+L,MAKpC,OAHAA,KAAK6vJ,aAAaoR,YAAcq9B,iBAAiB,GlDO7B,SAAnBE,iBAAoBliK,SAAY,IAAAmiK,uBAAAC,4BACPntC,aAAYp+B,WADL,GAClCD,YADkCurE,uBAAA,GACrBE,WADqBF,uBAAA,GAEnC91L,MAAQ2zB,QAAQy2F,OACtBpqH,MAAMksB,OAAO,YAAaq+F,aAC1BvqH,MAAMksB,OAAO,cAAe8pK,YkDVpBH,CAAiBx+L,MACjBA,KAAKoqF,cAAc62E,YAAYruC,MAAM5yH,KAAK4yH,SAASjqH,MAAM3I,KAAK+yH,QACvD/yH,KAEX,OAAOA,KAAKmsJ,8DAOZ,OAAI/mJ,UAAM1D,QACN1B,KAAKm4G,cAAL/yG,UAAA1D,QAAA,OAAA6L,EAAAnI,UAAA,GACOpF,MAGJA,KAAKm4G,0DAULlsB,YACP,IAAMwzD,iBAAmBz/I,KAAKtE,eAAe+jJ,iBAC7C,OAAIxzD,YACAwzD,iBAAiBm/C,SAAS3yG,YACnBjsF,MAEJy/I,yDAUP,OAAIr6I,UAAO1D,OACA1B,KAEJA,KAAKoqF,cAAcg6E,yCAmBxB94I,WAEF,OADyBtrB,KAAKtE,eAAe+jJ,iBACrB5zD,SAASvgE,mDASjC,IAAMoI,MAAQ1zB,KAAK0zB,QAEb+rH,iBAAmBz/I,KAAKtE,eAAe+jJ,iBAEvC24C,cAAgB6B,8BAAiBj6L,KAAM0zB,OAC7C+rH,iBAAiBxG,QAASztD,OAAQxrF,KAAMqjB,OAAQ,eJ/R3B,SAAhBw7K,cAAiB/rB,OAAQslB,eAAkB,IAC5Ch3C,WAA0Cg3C,cAA1Ch3C,WAAYk8B,aAA8B8a,cAA9B9a,aAAch+E,YAAgB84F,cAAhB94F,YAE9BxkF,KAIAsmI,WAJAtmI,KACAjB,QAGAunI,WAHAvnI,QACA6E,OAEA0iI,WAFA1iI,OACAoyI,eACA1P,WADA0P,eAGAjC,QAIAiC,eAJAjC,QACAC,SAGAgC,eAHAhC,SACAX,WAEA2C,eAFA3C,WACAC,YACA0C,eADA1C,YAEAtzI,MAAQjB,SACRi5J,OAAOxzE,YAAYA,aACFzyF,OAAOywK,cACPlqC,UACG9wG,KAAMusH,QAASh1I,QAAQ,GAAIi1I,UAC3Bv8F,QAASz3C,KAAK,GAAI4D,OAAQ5D,KAAK,IAC/B02C,QAAS28F,WAAYt0I,QAAQ,GAAIu0I,eAEpC0wC,gBI2QjBD,CAAc7+L,KAAK8yK,SAAUslB,eAE7Bp4L,KAAK67L,eAAerlL,WAChBklB,OAAQ08J,cAAc94F,YAAY67F,aAClC1/J,MAAO28J,cAAc94F,YAAY87F,cAGrCp7L,KAAK67L,eAAeh4B,SAASnwI,OAG7BkoK,0BAAa57L,KAAMo4L,elD7RS,SAAvB2G,qBAAwBziK,SACjC,IAAM67J,cAAgB77J,QAAQu/J,eACxBj1F,SAAWuxF,cAAc5oB,aAAa,QAAQyvB,cAC9CxrD,YAAcl3G,QAAQ8tD,cAAc62E,YAAYC,iBAAiBznK,MACjEmgC,gBAAkBmuD,6BAAa,IAAArsE,OAAKy8K,cAAc8G,kBAAmBxuK,OAC3E+iH,YAAYrsG,KAAK,SAACi7B,MACdA,KAAKrjD,UAAUkiI,oBACX39C,GAAI1pE,gBACJ/Q,WAAY+9E,akDuRhBm4F,CAAqB/+L,MlDnHU,SAA1Bk/L,wBAA2B5iK,SACpC,IAAIg0E,SAAW,EAET+7B,MAAQ/vG,QAAQ+vG,aAEtB,WACI,IAAK,IAAI7zI,EAAI,EAAGA,EAAI6zI,MAAM3qI,OAAQlJ,IAC9B,IAAK,IAAI0iB,EAAI,EAAGA,EAAImxH,MAAM7zI,GAAGkJ,OAAQwZ,IAAK,CACtC,IAAMikL,YAAc9yD,MAAM7zI,GAAG0iB,GAAG+1F,eAAeZ,OAAOC,SACtD,GAAI6uF,aAA+B,IAAhBA,YAEf,YADA7uF,SAAW6uF,cAL3B,GAYI7uF,UACA+7B,MAAMvjI,QAAQ,SAAC8uF,MACXA,KAAK9uF,QAAQ,SAAC8oD,MACVA,KAAKq/C,cAAeZ,QAAUC,qBAC9B1+C,KAAK2+C,WAAW3+C,KAAKmnD,qBkDiG7BmmF,CAAwBl/L,4CAmBxB,OAAOA,KAAKoqF,cAAc62E,YAAYm+B,QAAQ,2CAkB9C,OAAOp/L,KAAKoqF,cAAc62E,YAAYm+B,QAAQ,6DAkB9C,OADoBp/L,KAAKoqF,cAAc62E,YACpBm+B,Q5EvTJ,iD4E2Tf,GAAIh6L,UAAO1D,OAAQ,CACf,IAAIjI,MAAK2L,UAAA1D,QAAA,OAAA6L,EAAAnI,UAAA,GAKT,MAJyB,iBAArBA,UAAA1D,QAAA,OAAA6L,EAAAnI,UAAA,MACA3L,MAAQsuF,6BAAa3iF,UAAA1D,QAAA,OAAA6L,EAAAnI,UAAA,IAAYqrB,QAErCzwB,KAAKkjG,OAASzpG,MACPuG,KAEX,OAAOA,KAAKkjG,2DA1NKm8F,gBAAiBC,SAAUvB,oBAC5C,IAAMjtF,SAAW,IAAIgtF,OAAOC,oBAE5B,IAAK,IAAMhkM,OAAOslM,gBACdvuF,SAAS/2G,KAAKslM,gBAAgBtlM,MAIlC,OADA+2G,SAASjF,SAASyzF,UACXxuF,yDAWP,MAAO,uBCrLFyuF,YACThuC,yBACAjS,mCAESkgD,eACTluC,2BACA7mD,cCTW,WACX,IAAMm6B,IAAMgB,eACN65D,QACFttL,IAAK,SAAAA,IAACpY,IAAK4kB,KAEP,OADAimH,IAAI7qI,KAAO4kB,IACJ8gL,QAEXpmM,IAAK,SAAAA,MAAA,OAAMurI,MAEf,OAAO66D,wjBCuBX,IAAMC,eACAC,gBAAkBJ,WAElBK,4BAA8B,SAA9BA,4BAA+BC,iBAAkBh0F,UACnD,IAAK,IAAM33E,QAAQ2rK,iBACfh0F,SAAS15F,IAAI+hB,KAAM2rK,iBAAiB3rK,QA+BtC4rK,UAAO,SAAPA,OAAa,IAAAC,aAAAC,mBAEYzyH,2BAAe5mE,aAF3B,GAERs5L,IAFQF,aAAA,GAEHG,YAFGH,aAAA,GAGT3+C,WAAaloJ,OAAO4T,UAAWyyL,YAC/BY,wBAA0BjnM,OAAO4T,OAAO0yL,eACxC7tC,wBAEN,IAAK,IAAMz9H,QAAQisK,wBACfxuC,qBAAqBz9H,MAAQisK,wBAAwBjsK,QAgEzD,OA5DA+rK,IAAIj/B,OAAS,WAET,IAAMo/B,SAAWF,YAAYxzK,YACvBs0I,OAAS88B,cAAOuC,aAAaD,UAC/Bh/C,sBACAuQ,2CACDsuC,IAAIlC,sBAKP,OvWgyByB,SAA3BuC,yBAA4BC,iBAAkBC,oBAAqBC,kBACrEA,iBAAiB33L,QAAQ,SAAAkB,MAAI,OAAIu2L,iBAAiBnzH,GAAGpjE,KAAM,SAAA6Z,OAAA,IAAI+qD,OAAJlF,eAAA7lD,MAAA,aAAgB28K,oBAAoBx2L,MAAM4kE,YuWnyBjG0xH,CAAyBJ,YAAal/B,OAAQ9nK,OAAO4M,KAAKs6L,WAEnDp/B,QAIXi/B,IAAIlC,mBAAqB,WAIrB,OAHK2B,YAAYxlK,aACbwlK,YAAYxlK,WAAa,IAAIwmK,4BAAW,EAAG,UAG3CxmK,WAAYwlK,YAAYxlK,WACxBulH,iBAAkB,IAAIj1D,oBAM9By1G,IAAIG,SAAW,kBAAMF,YAAYxzK,aAEjCuzK,IAAIp0F,SAAW,WAAyB,QAAAvjC,KAAAljE,UAAA1D,OAArBm+L,iBAAqB,IAAAh3L,MAAAy/D,MAAAC,KAAA,EAAAA,KAAAD,KAAAC,OAArBs3H,iBAAqBt3H,MAAAnjE,UAAAmjE,MAEpC,GAAIs3H,iBAAiBn+L,OAAQ,CACzB,IAAK,IAAMwyB,SAAQ2rK,iBACX3rK,SAAQyrK,kBACRv+C,WAAWltH,OAAQ2rK,iBAAiB3rK,QAG5C,OAAO+rK,IAEX,OAAO7+C,YAGX6+C,IAAI3uC,aAAe,WACf,IAAMA,aAAeK,qBAAqBL,aAC1C,OAAIlsJ,UAAiB1D,QACjBk+L,4BAA2Bx6L,UAAA1D,QAAA,OAAA6L,EAAAnI,UAAA,GAAsBksJ,cAC1C2uC,KAEJ3uC,aAAaj4J,OAGxB4mM,IAAIx1F,cAAgB,WAChB,IAAMA,cAAgBknD,qBAAqBlnD,cAC3C,OAAIrlG,UAAiB1D,QACjBk+L,4BAA2Bx6L,UAAA1D,QAAA,OAAA6L,EAAAnI,UAAA,GAAsBqlG,eAC1Cw1F,KAEJx1F,cAAcpxG,OAGlB4mM,KAGLU,aACF7yG,yCACA8yG,WACIxlG,wCACAM,kDACAX,4BAIF8lG,YACFhtG,+CACA+sG,WACIrrG,0CACA8B,mDACAd,+CAIRupG,UAAKxhM,UAAYA,oBACjBwhM,UAAK9kM,QAAU8lM,aAAI9lM,QACnB8kM,UAAKa,YAAcA,YACnBb,UAAKz+B,YAAcA,YACnBy+B,UAAKt7D,aAAeA,kBACpBs7D,UAAK1yK,UAAY2zK,0BACjBjB,UAAKe,WAAaA,WAClBf,UAAKkB,OACD93G,6CACAG,iCACArB,wBACAD,2CACAjoF,mDACA+3B,QvWk0CY,SAAVA,QAAWopK,WAAYC,eAAb,OACZ9rD,WAAY,SAAAA,WAACzsI,OACT,IAAMw4L,aAAex4L,MAAMs4L,YACrB5rD,OAAS6rD,cAAc/lL,MAAM,EAAG+lL,cAAcx/L,OAAS,GACvDwd,GAAKgiL,cAAcA,cAAcx/L,OAAS,GAE1C0/L,KAAO/rD,OAAOptI,IAAI,SAAAkC,KAAG,OAAIg3L,aAAah3L,OAC5C,OACI+U,GAAIA,GAAE3X,WAAF,EAAA2hE,mBAAMk4H,OACV/rD,mBuWx0CGyqD","file":"muze.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"muze\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"muze\"] = factory();\n\telse\n\t\troot[\"muze\"] = factory();\n})(window, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 7);\n","(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"DataModel\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"DataModel\"] = factory();\n\telse\n\t\troot[\"DataModel\"] = factory();\n})(window, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 1);\n","const DataModel = require('./export');\n\nmodule.exports = DataModel.default ? DataModel.default : DataModel;\n","/**\n * DataFormat Enum defines the format of the input data.\n * Based on the format of the data the respective adapter is loaded.\n *\n * @readonly\n * @enum {string}\n */\nconst DataFormat = {\n    FLAT_JSON: 'FlatJSON',\n    DSV_STR: 'DSVStr',\n    DSV_ARR: 'DSVArr',\n    AUTO: 'Auto'\n};\n\nexport default DataFormat;\n","/**\n * DimensionSubtype enum defines the sub types of the Dimensional Field.\n *\n * @readonly\n * @enum {string}\n */\nconst DimensionSubtype = {\n    CATEGORICAL: 'categorical',\n    TEMPORAL: 'temporal',\n    GEO: 'geo',\n    BINNED: 'binned'\n};\n\nexport default DimensionSubtype;\n","/**\n * MeasureSubtype enum defines the sub types of the Measure Field.\n *\n * @readonly\n * @enum {string}\n */\nconst MeasureSubtype = {\n    CONTINUOUS: 'continuous'\n};\n\nexport default MeasureSubtype;\n","/**\n * FieldType enum defines the high level field based on which visuals are controlled.\n * Measure in a high level is numeric field and Dimension in a high level is string field.\n *\n * @readonly\n * @enum {string}\n */\nconst FieldType = {\n    MEASURE: 'measure',\n    DIMENSION: 'dimension'\n};\n\nexport default FieldType;\n","/**\n * Filtering mode enum defines the filering modes of DataModel.\n *\n * @readonly\n * @enum {string}\n */\nconst FilteringMode = {\n    NORMAL: 'normal',\n    INVERSE: 'inverse',\n    ALL: 'all'\n};\n\nexport default FilteringMode;\n","/**\n * Creates a JS native date object from input\n *\n * @param {string | number | Date} date Input using which date object to be created\n * @return {Date} : JS native date object\n */\nfunction convertToNativeDate (date) {\n    if (date instanceof Date) {\n        return date;\n    }\n\n    return new Date(date);\n}\n/**\n * Apply padding before a number if its less than 1o. This is used when constant digit's number to be returned\n * between 0 - 99\n *\n * @param {number} n Input to be padded\n * @return {string} Padded number\n */\nfunction pad (n) {\n    return (n < 10) ? (`0${n}`) : n;\n}\n/*\n * DateFormatter utility to convert any date format to any other date format\n * DateFormatter parse a date time stamp specified by a user abiding by rules which are defined\n * by user in terms of token. It creates JS native date object from the user specified format.\n * That native date can also be displayed\n * in any specified format.\n * This utility class only takes care of format conversion only\n */\n\n/*\n * Escapes all the special character that are used in regular expression.\n * Like\n * RegExp.escape('sgfd-$') // Output: sgfd\\-\\$\n *\n * @param text {String} : text which is to be escaped\n */\nRegExp.escape = function (text) {\n    return text.replace(/[-[\\]{}()*+?.,\\\\^$|#\\s]/g, '\\\\$&');\n};\n\n/**\n * DateTimeFormatter class to convert any user format of date time stamp to any other format\n * of date time stamp.\n *\n * @param {string} format Format of the date given. For the above date,\n * 'year: %Y, month: %b, day: %d'.\n * @class\n */\n/* istanbul ignore next */ function DateTimeFormatter (format) {\n    this.format = format;\n    this.dtParams = undefined;\n    this.nativeDate = undefined;\n}\n\n// The identifier of the tokens\nDateTimeFormatter.TOKEN_PREFIX = '%';\n\n// JS native Date constructor takes the date params (year, month, etc) in a certail sequence.\n// This defines the sequence of the date parameters in the constructor.\nDateTimeFormatter.DATETIME_PARAM_SEQUENCE = {\n    YEAR: 0,\n    MONTH: 1,\n    DAY: 2,\n    HOUR: 3,\n    MINUTE: 4,\n    SECOND: 5,\n    MILLISECOND: 6\n};\n\n/*\n * This is a default number parsing utility. It tries to parse a number in integer, if parsing is unsuccessful, it\n * gives back a default value.\n *\n * @param: defVal {Number} : Default no if the parsing to integer is not successful\n * @return {Function} : An closure function which is to be called by passing an the value which needs to be parsed.\n */\nDateTimeFormatter.defaultNumberParser = function (defVal) {\n    return function (val) {\n        let parsedVal;\n        if (isFinite(parsedVal = parseInt(val, 10))) {\n            return parsedVal;\n        }\n\n        return defVal;\n    };\n};\n\n/*\n * This is a default number range utility. It tries to find an element in the range. If not found it returns a\n * default no as an index.\n *\n * @param: range {Array} : The list which is to be serached\n * @param: defVal {Number} : Default no if the serach and find does not return anything\n * @return {Function} : An closure function which is to be called by passing an the value which needs to be found\n */\nDateTimeFormatter.defaultRangeParser = function (range, defVal) {\n    return (val) => {\n        let i;\n        let l;\n\n        if (!val) { return defVal; }\n\n        const nVal = val.toLowerCase();\n\n        for (i = 0, l = range.length; i < l; i++) {\n            if (range[i].toLowerCase() === nVal) {\n                return i;\n            }\n        }\n\n        if (i === undefined) {\n            return defVal;\n        }\n        return null;\n    };\n};\n\n/*\n * Defines the tokens which are supporter by the dateformatter. Using this definitation a value gets extracted from\n * the user specifed date string. This also formats the value for display purpose from native JS date.\n * The definition of each token contains the following named properties\n * {\n *     %token_name% : {\n *         name: name of the token, this is used in reverse lookup,\n *         extract: a function that returns the regular expression to extract that piece of information. All the\n *                  regex should be gouped by using ()\n *         parser: a function which receives value extracted by the above regex and parse it to get the date params\n *         formatter: a formatter function that takes milliseconds or JS Date object and format the param\n *                  represented by the token only.\n *     }\n * }\n *\n * @return {Object} : Definition of the all the supported tokens.\n */\nDateTimeFormatter.getTokenDefinitions = function () {\n    const daysDef = {\n        short: [\n            'Sun',\n            'Mon',\n            'Tue',\n            'Wed',\n            'Thu',\n            'Fri',\n            'Sat'\n        ],\n        long: [\n            'Sunday',\n            'Monday',\n            'Tuesday',\n            'Wednesday',\n            'Thursday',\n            'Friday',\n            'Saturday'\n        ]\n    };\n    const monthsDef = {\n        short: [\n            'Jan',\n            'Feb',\n            'Mar',\n            'Apr',\n            'May',\n            'Jun',\n            'Jul',\n            'Aug',\n            'Sep',\n            'Oct',\n            'Nov',\n            'Dec'\n        ],\n        long: [\n            'January',\n            'February',\n            'March',\n            'April',\n            'May',\n            'June',\n            'July',\n            'August',\n            'September',\n            'October',\n            'November',\n            'December'\n        ]\n    };\n\n    const definitions = {\n        H: {\n            // 24 hours format\n            name: 'H',\n            index: 3,\n            extract () { return '(\\\\d+)'; },\n            parser: DateTimeFormatter.defaultNumberParser(),\n            formatter (val) {\n                const d = convertToNativeDate(val);\n\n                return d.getHours().toString();\n            }\n        },\n        l: {\n            // 12 hours format\n            name: 'l',\n            index: 3,\n            extract () { return '(\\\\d+)'; },\n            parser: DateTimeFormatter.defaultNumberParser(),\n            formatter (val) {\n                const d = convertToNativeDate(val);\n                const hours = d.getHours() % 12;\n\n                return (hours === 0 ? 12 : hours).toString();\n            }\n        },\n        p: {\n            // AM or PM\n            name: 'p',\n            index: 3,\n            extract () { return '(AM|PM)'; },\n            parser: (val) => {\n                if (val) {\n                    return val.toLowerCase();\n                }\n                return null;\n            },\n            formatter: (val) => {\n                const d = convertToNativeDate(val);\n                const hours = d.getHours();\n\n                return (hours < 12 ? 'AM' : 'PM');\n            }\n        },\n        P: {\n            // am or pm\n            name: 'P',\n            index: 3,\n            extract () { return '(am|pm)'; },\n            parser: (val) => {\n                if (val) {\n                    return val.toLowerCase();\n                }\n                return null;\n            },\n            formatter: (val) => {\n                const d = convertToNativeDate(val);\n                const hours = d.getHours();\n\n                return (hours < 12 ? 'am' : 'pm');\n            }\n        },\n        M: {\n            // Two digit minutes 00 - 59\n            name: 'M',\n            index: 4,\n            extract () { return '(\\\\d+)'; },\n            parser: DateTimeFormatter.defaultNumberParser(),\n            formatter (val) {\n                const d = convertToNativeDate(val);\n                const mins = d.getMinutes();\n\n                return pad(mins);\n            }\n        },\n        S: {\n            // Two digit seconds 00 - 59\n            name: 'S',\n            index: 5,\n            extract () { return '(\\\\d+)'; },\n            parser: DateTimeFormatter.defaultNumberParser(),\n            formatter (val) {\n                const d = convertToNativeDate(val);\n                const seconds = d.getSeconds();\n\n                return pad(seconds);\n            }\n        },\n        K: {\n            // Milliseconds\n            name: 'K',\n            index: 6,\n            extract () { return '(\\\\d+)'; },\n            parser: DateTimeFormatter.defaultNumberParser(),\n            formatter (val) {\n                const d = convertToNativeDate(val);\n                const ms = d.getMilliseconds();\n\n                return ms.toString();\n            }\n        },\n        a: {\n            // Short name of day, like Mon\n            name: 'a',\n            index: 2,\n            extract () { return `(${daysDef.short.join('|')})`; },\n            parser: DateTimeFormatter.defaultRangeParser(daysDef.short),\n            formatter (val) {\n                const d = convertToNativeDate(val);\n                const day = d.getDay();\n\n                return (daysDef.short[day]).toString();\n            }\n        },\n        A: {\n            // Long name of day, like Monday\n            name: 'A',\n            index: 2,\n            extract () { return `(${daysDef.long.join('|')})`; },\n            parser: DateTimeFormatter.defaultRangeParser(daysDef.long),\n            formatter (val) {\n                const d = convertToNativeDate(val);\n                const day = d.getDay();\n\n                return (daysDef.long[day]).toString();\n            }\n        },\n        e: {\n            // 8 of March, 11 of November\n            name: 'e',\n            index: 2,\n            extract () { return '(\\\\d+)'; },\n            parser: DateTimeFormatter.defaultNumberParser(),\n            formatter (val) {\n                const d = convertToNativeDate(val);\n                const day = d.getDate();\n\n                return day.toString();\n            }\n        },\n        d: {\n            // 08 of March, 11 of November\n            name: 'd',\n            index: 2,\n            extract () { return '(\\\\d+)'; },\n            parser: DateTimeFormatter.defaultNumberParser(),\n            formatter (val) {\n                const d = convertToNativeDate(val);\n                const day = d.getDate();\n\n                return pad(day);\n            }\n        },\n        b: {\n            // Short month, like Jan\n            name: 'b',\n            index: 1,\n            extract () { return `(${monthsDef.short.join('|')})`; },\n            parser: DateTimeFormatter.defaultRangeParser(monthsDef.short),\n            formatter (val) {\n                const d = convertToNativeDate(val);\n                const month = d.getMonth();\n\n                return (monthsDef.short[month]).toString();\n            }\n        },\n        B: {\n            // Long month, like January\n            name: 'B',\n            index: 1,\n            extract () { return `(${monthsDef.long.join('|')})`; },\n            parser: DateTimeFormatter.defaultRangeParser(monthsDef.long),\n            formatter (val) {\n                const d = convertToNativeDate(val);\n                const month = d.getMonth();\n\n                return (monthsDef.long[month]).toString();\n            }\n        },\n        m: {\n            // Two digit month of year like 01 for January\n            name: 'm',\n            index: 1,\n            extract () { return '(\\\\d+)'; },\n            parser (val) { return DateTimeFormatter.defaultNumberParser()(val) - 1; },\n            formatter (val) {\n                const d = convertToNativeDate(val);\n                const month = d.getMonth();\n\n                return pad(month + 1);\n            }\n        },\n        y: {\n            // Short year like 90 for 1990\n            name: 'y',\n            index: 0,\n            extract () { return '(\\\\d{2})'; },\n            parser (val) {\n                let result;\n                if (val) {\n                    const l = val.length;\n                    val = val.substring(l - 2, l);\n                }\n                let parsedVal = DateTimeFormatter.defaultNumberParser()(val);\n                let presentDate = new Date();\n                let presentYear = Math.trunc((presentDate.getFullYear()) / 100);\n\n                result = `${presentYear}${parsedVal}`;\n\n                if (convertToNativeDate(result).getFullYear() > presentDate.getFullYear()) {\n                    result = `${presentYear - 1}${parsedVal}`;\n                }\n                return convertToNativeDate(result).getFullYear();\n            },\n            formatter (val) {\n                const d = convertToNativeDate(val);\n                let year = d.getFullYear().toString();\n                let l;\n\n                if (year) {\n                    l = year.length;\n                    year = year.substring(l - 2, l);\n                }\n\n                return year;\n            }\n        },\n        Y: {\n            // Long year like 1990\n            name: 'Y',\n            index: 0,\n            extract () { return '(\\\\d{4})'; },\n            parser: DateTimeFormatter.defaultNumberParser(),\n            formatter (val) {\n                const d = convertToNativeDate(val);\n                const year = d.getFullYear().toString();\n\n                return year;\n            }\n        }\n    };\n\n    return definitions;\n};\n\n/*\n * The tokens which works internally is not user friendly in terms of memorizing the names. This gives a formal\n * definition to the informal notations.\n *\n * @return {Object} : Formal definition of the tokens\n */\nDateTimeFormatter.getTokenFormalNames = function () {\n    const definitions = DateTimeFormatter.getTokenDefinitions();\n\n    return {\n        HOUR: definitions.H,\n        HOUR_12: definitions.l,\n        AMPM_UPPERCASE: definitions.p,\n        AMPM_LOWERCASE: definitions.P,\n        MINUTE: definitions.M,\n        SECOND: definitions.S,\n        SHORT_DAY: definitions.a,\n        LONG_DAY: definitions.A,\n        DAY_OF_MONTH: definitions.e,\n        DAY_OF_MONTH_CONSTANT_WIDTH: definitions.d,\n        SHORT_MONTH: definitions.b,\n        LONG_MONTH: definitions.B,\n        MONTH_OF_YEAR: definitions.m,\n        SHORT_YEAR: definitions.y,\n        LONG_YEAR: definitions.Y\n    };\n};\n\n/*\n * This defines the rules and declares dependencies that resolves a date parameter (year, month etc) from\n * the date time parameter array.\n *\n * @return {Object} : An object that contains dependencies and a resolver function. The dependencies values are fed\n *                  to the resolver function in that particular sequence only.\n */\nDateTimeFormatter.tokenResolver = function () {\n    const definitions = DateTimeFormatter.getTokenDefinitions();\n    const defaultResolver = (...args) => { // eslint-disable-line require-jsdoc\n        let i = 0;\n        let arg;\n        let targetParam;\n        const l = args.length;\n\n        for (; i < l; i++) {\n            arg = args[i];\n            if (args[i]) {\n                targetParam = arg;\n            }\n        }\n\n        if (!targetParam) { return null; }\n\n        return targetParam[0].parser(targetParam[1]);\n    };\n\n    return {\n        YEAR: [definitions.y, definitions.Y,\n            defaultResolver\n        ],\n        MONTH: [definitions.b, definitions.B, definitions.m,\n            defaultResolver\n        ],\n        DAY: [definitions.a, definitions.A, definitions.e, definitions.d,\n            defaultResolver\n        ],\n        HOUR: [definitions.H, definitions.l, definitions.p, definitions.P,\n            function (hourFormat24, hourFormat12, ampmLower, ampmUpper) {\n                let targetParam;\n                let amOrpm;\n                let isPM;\n                let val;\n\n                if (hourFormat12 && (amOrpm = (ampmLower || ampmUpper))) {\n                    if (amOrpm[0].parser(amOrpm[1]) === 'pm') {\n                        isPM = true;\n                    }\n\n                    targetParam = hourFormat12;\n                } else if (hourFormat12) {\n                    targetParam = hourFormat12;\n                } else {\n                    targetParam = hourFormat24;\n                }\n\n                if (!targetParam) { return null; }\n\n                val = targetParam[0].parser(targetParam[1]);\n                if (isPM) {\n                    val += 12;\n                }\n                return val;\n            }\n        ],\n        MINUTE: [definitions.M,\n            defaultResolver\n        ],\n        SECOND: [definitions.S,\n            defaultResolver\n        ]\n    };\n};\n\n/*\n * Finds token from the format rule specified by a user.\n * @param format {String} : The format of the input date specified by the user\n * @return {Array} : An array of objects which contains the available token and their occurence index in the format\n */\nDateTimeFormatter.findTokens = function (format) {\n    const tokenPrefix = DateTimeFormatter.TOKEN_PREFIX;\n    const definitions = DateTimeFormatter.getTokenDefinitions();\n    const tokenLiterals = Object.keys(definitions);\n    const occurrence = [];\n    let i;\n    let forwardChar;\n\n    while ((i = format.indexOf(tokenPrefix, i + 1)) >= 0) {\n        forwardChar = format[i + 1];\n        if (tokenLiterals.indexOf(forwardChar) === -1) { continue; }\n\n        occurrence.push({\n            index: i,\n            token: forwardChar\n        });\n    }\n\n    return occurrence;\n};\n\n/*\n * Format any JS date to a specified date given by user.\n *\n * @param date {Number | Date} : The date object which is to be formatted\n * @param format {String} : The format using which the date will be formatted for display\n */\nDateTimeFormatter.formatAs = function (date, format) {\n    const nDate = convertToNativeDate(date);\n    const occurrence = DateTimeFormatter.findTokens(format);\n    const definitions = DateTimeFormatter.getTokenDefinitions();\n    let formattedStr = String(format);\n    const tokenPrefix = DateTimeFormatter.TOKEN_PREFIX;\n    let token;\n    let formattedVal;\n    let i;\n    let l;\n\n    for (i = 0, l = occurrence.length; i < l; i++) {\n        token = occurrence[i].token;\n        formattedVal = definitions[token].formatter(nDate);\n        formattedStr = formattedStr.replace(new RegExp(tokenPrefix + token, 'g'), formattedVal);\n    }\n\n    return formattedStr;\n};\n\n/*\n * Parses the user specified date string to extract the date time params.\n *\n * @return {Array} : Value of date time params in an array [year, month, day, hour, minutes, seconds, milli]\n */\nDateTimeFormatter.prototype.parse = function (dateTimeStamp, options) {\n    const tokenResolver = DateTimeFormatter.tokenResolver();\n    const dtParams = this.extractTokenValue(dateTimeStamp);\n    const dtParamSeq = DateTimeFormatter.DATETIME_PARAM_SEQUENCE;\n    const noBreak = options && options.noBreak;\n    const dtParamArr = [];\n    const args = [];\n    let resolverKey;\n    let resolverParams;\n    let resolverFn;\n    let val;\n    let i;\n    let param;\n    let resolvedVal;\n    let l;\n    let result = [];\n\n    for (resolverKey in tokenResolver) {\n        if (!{}.hasOwnProperty.call(tokenResolver, resolverKey)) { continue; }\n\n        args.length = 0;\n        resolverParams = tokenResolver[resolverKey];\n        resolverFn = resolverParams.splice(resolverParams.length - 1, 1)[0];\n\n        for (i = 0, l = resolverParams.length; i < l; i++) {\n            param = resolverParams[i];\n            val = dtParams[param.name];\n\n            if (val === undefined) {\n                args.push(null);\n            } else {\n                args.push([param, val]);\n            }\n        }\n\n        resolvedVal = resolverFn.apply(this, args);\n\n        if ((resolvedVal === undefined || resolvedVal === null) && !noBreak) {\n            break;\n        }\n\n        dtParamArr[dtParamSeq[resolverKey]] = resolvedVal;\n    }\n\n    if (dtParamArr.length && this.checkIfOnlyYear(dtParamArr.length))\n     {\n        result.unshift(dtParamArr[0], 0, 1); }\n    else {\n        result.unshift(...dtParamArr);\n    }\n\n    return result;\n};\n\n/*\n * Extract the value of the token from user specified date time string.\n *\n * @return {Object} : An key value pair which contains the tokens as key and value as pair\n */\nDateTimeFormatter.prototype.extractTokenValue = function (dateTimeStamp) {\n    const format = this.format;\n    const definitions = DateTimeFormatter.getTokenDefinitions();\n    const tokenPrefix = DateTimeFormatter.TOKEN_PREFIX;\n    const occurrence = DateTimeFormatter.findTokens(format);\n    const tokenObj = {};\n\n    let lastOccurrenceIndex;\n    let occObj;\n    let occIndex;\n    let targetText;\n    let regexFormat;\n\n    let l;\n    let i;\n\n    regexFormat = String(format);\n\n    const tokenArr = occurrence.map(obj => obj.token);\n    const occurrenceLength = occurrence.length;\n    for (i = occurrenceLength - 1; i >= 0; i--) {\n        occIndex = occurrence[i].index;\n\n        if (occIndex + 1 === regexFormat.length - 1) {\n            lastOccurrenceIndex = occIndex;\n            continue;\n        }\n\n        if (lastOccurrenceIndex === undefined) {\n            lastOccurrenceIndex = regexFormat.length;\n        }\n\n        targetText = regexFormat.substring(occIndex + 2, lastOccurrenceIndex);\n        regexFormat = regexFormat.substring(0, occIndex + 2) +\n            RegExp.escape(targetText) +\n            regexFormat.substring(lastOccurrenceIndex, regexFormat.length);\n\n        lastOccurrenceIndex = occIndex;\n    }\n\n    for (i = 0; i < occurrenceLength; i++) {\n        occObj = occurrence[i];\n        regexFormat = regexFormat.replace(tokenPrefix + occObj.token, definitions[occObj.token].extract());\n    }\n\n    const extractValues = dateTimeStamp.match(new RegExp(regexFormat)) || [];\n    extractValues.shift();\n\n    for (i = 0, l = tokenArr.length; i < l; i++) {\n        tokenObj[tokenArr[i]] = extractValues[i];\n    }\n    return tokenObj;\n};\n\n/*\n * Give back the JS native date formed from  user specified date string\n *\n * @return {Date} : Native JS Date\n */\nDateTimeFormatter.prototype.getNativeDate = function (dateTimeStamp) {\n    let date = null;\n    if (Number.isFinite(dateTimeStamp)) {\n        date = new Date(dateTimeStamp);\n    } else if (!this.format && Date.parse(dateTimeStamp)) {\n        date = new Date(dateTimeStamp);\n    }\n    else {\n        const dtParams = this.dtParams = this.parse(dateTimeStamp);\n        if (dtParams.length) {\n            this.nativeDate = new Date(...dtParams);\n            date = this.nativeDate;\n        }\n    }\n    return date;\n};\n\nDateTimeFormatter.prototype.checkIfOnlyYear = function(len) {\n    return len === 1 && this.format.match(/y|Y/g).length;\n};\n\n/*\n * Represents JS native date to a user specified format.\n *\n * @param format {String} : The format according to which the date is to be represented\n * @return {String} : The formatted date string\n */\nDateTimeFormatter.prototype.formatAs = function (format, dateTimeStamp) {\n    let nativeDate;\n\n    if (dateTimeStamp) {\n        nativeDate = this.nativeDate = this.getNativeDate(dateTimeStamp);\n    } else if (!(nativeDate = this.nativeDate)) {\n        nativeDate = this.getNativeDate(dateTimeStamp);\n    }\n\n    return DateTimeFormatter.formatAs(nativeDate, format);\n};\n\nexport { DateTimeFormatter as default };\n","/**\n * The utility function to calculate major column.\n *\n * @param {Object} store - The store object.\n * @return {Function} Returns the push function.\n */\nexport default (store) => {\n    let i = 0;\n    return (...fields) => {\n        fields.forEach((val, fieldIndex) => {\n            if (!(store[fieldIndex] instanceof Array)) {\n                store[fieldIndex] = Array.from({ length: i });\n            }\n            store[fieldIndex].push(val);\n        });\n        i++;\n    };\n};\n","/* eslint-disable */\nconst OBJECTSTRING = 'object';\nconst objectToStrFn = Object.prototype.toString;\nconst objectToStr = '[object Object]';\nconst arrayToStr = '[object Array]';\n\nfunction checkCyclicRef(obj, parentArr) {\n    let i = parentArr.length;\n    let bIndex = -1;\n\n    while (i) {\n        if (obj === parentArr[i]) {\n            bIndex = i;\n            return bIndex;\n        }\n        i -= 1;\n    }\n\n    return bIndex;\n}\n\nfunction merge(obj1, obj2, skipUndef, tgtArr, srcArr) {\n    var item,\n        srcVal,\n        tgtVal,\n        str,\n        cRef;\n    // check whether obj2 is an array\n    // if array then iterate through it's index\n    // **** MOOTOOLS precution\n\n    if (!srcArr) {\n        tgtArr = [obj1];\n        srcArr = [obj2];\n    }\n    else {\n        tgtArr.push(obj1);\n        srcArr.push(obj2);\n    }\n\n    if (obj2 instanceof Array) {\n        for (item = 0; item < obj2.length; item += 1) {\n            try {\n                srcVal = obj1[item];\n                tgtVal = obj2[item];\n            }\n            catch (e) {\n                continue;\n            }\n\n            if (typeof tgtVal !== OBJECTSTRING) {\n                if (!(skipUndef && tgtVal === undefined)) {\n                    obj1[item] = tgtVal;\n                }\n            }\n            else {\n                if (srcVal === null || typeof srcVal !== OBJECTSTRING) {\n                    srcVal = obj1[item] = tgtVal instanceof Array ? [] : {};\n                }\n                cRef = checkCyclicRef(tgtVal, srcArr);\n                if (cRef !== -1) {\n                    srcVal = obj1[item] = tgtArr[cRef];\n                }\n                else {\n                    merge(srcVal, tgtVal, skipUndef, tgtArr, srcArr);\n                }\n            }\n        }\n    }\n    else {\n        for (item in obj2) {\n            try {\n                srcVal = obj1[item];\n                tgtVal = obj2[item];\n            }\n            catch (e) {\n                continue;\n            }\n\n            if (tgtVal !== null && typeof tgtVal === OBJECTSTRING) {\n                // Fix for issue BUG: FWXT-602\n                // IE < 9 Object.prototype.toString.call(null) gives\n                // '[object Object]' instead of '[object Null]'\n                // that's why null value becomes Object in IE < 9\n                str = objectToStrFn.call(tgtVal);\n                if (str === objectToStr) {\n                    if (srcVal === null || typeof srcVal !== OBJECTSTRING) {\n                        srcVal = obj1[item] = {};\n                    }\n                    cRef = checkCyclicRef(tgtVal, srcArr);\n                    if (cRef !== -1) {\n                        srcVal = obj1[item] = tgtArr[cRef];\n                    }\n                    else {\n                        merge(srcVal, tgtVal, skipUndef, tgtArr, srcArr);\n                    }\n                }\n                else if (str === arrayToStr) {\n                    if (srcVal === null || !(srcVal instanceof Array)) {\n                        srcVal = obj1[item] = [];\n                    }\n                    cRef = checkCyclicRef(tgtVal, srcArr);\n                    if (cRef !== -1) {\n                        srcVal = obj1[item] = tgtArr[cRef];\n                    }\n                    else {\n                        merge(srcVal, tgtVal, skipUndef, tgtArr, srcArr);\n                    }\n                }\n                else {\n                    obj1[item] = tgtVal;\n                }\n            }\n            else {\n                if (skipUndef && tgtVal === undefined) {\n                    continue;\n                }\n                obj1[item] = tgtVal;\n            }\n        }\n    }\n    return obj1;\n}\n\n\nfunction extend2 (obj1, obj2, skipUndef) {\n    //if none of the arguments are object then return back\n    if (typeof obj1 !== OBJECTSTRING && typeof obj2 !== OBJECTSTRING) {\n        return null;\n    }\n\n    if (typeof obj2 !== OBJECTSTRING || obj2 === null) {\n        return obj1;\n    }\n\n    if (typeof obj1 !== OBJECTSTRING) {\n        obj1 = obj2 instanceof Array ? [] : {};\n    }\n    merge(obj1, obj2, skipUndef);\n    return obj1;\n}\n\nexport { extend2 as default };\n","import { DataFormat } from '../enums';\n\n/**\n * Checks whether the value is an array.\n *\n * @param  {*} val - The value to be checked.\n * @return {boolean} Returns true if the value is an array otherwise returns false.\n */\nexport function isArray (val) {\n    return Array.isArray(val);\n}\n\n/**\n * Checks whether the value is an object.\n *\n * @param  {*} val - The value to be checked.\n * @return {boolean} Returns true if the value is an object otherwise returns false.\n */\nexport function isObject (val) {\n    return val === Object(val);\n}\n\n/**\n * Checks whether the value is a string value.\n *\n * @param  {*} val - The value to be checked.\n * @return {boolean} Returns true if the value is a string value otherwise returns false.\n */\nexport function isString (val) {\n    return typeof val === 'string';\n}\n\n/**\n * Checks whether the value is callable.\n *\n * @param {*} val - The value to be checked.\n * @return {boolean} Returns true if the value is callable otherwise returns false.\n */\nexport function isCallable (val) {\n    return typeof val === 'function';\n}\n\n/**\n * Returns the unique values from the input array.\n *\n * @param {Array} data - The input array.\n * @return {Array} Returns a new array of unique values.\n */\nexport function uniqueValues (data) {\n    return [...new Set(data)];\n}\n\nexport const getUniqueId = () => `id-${new Date().getTime()}${Math.round(Math.random() * 10000)}`;\n\n/**\n * Checks Whether two arrays have same content.\n *\n * @param {Array} arr1 - The first array.\n * @param {Array} arr2 - The 2nd array.\n * @return {boolean} Returns whether two array have same content.\n */\nexport function isArrEqual(arr1, arr2) {\n    if (!isArray(arr1) || !isArray(arr2)) {\n        return arr1 === arr2;\n    }\n\n    if (arr1.length !== arr2.length) {\n        return false;\n    }\n\n    for (let i = 0; i < arr1.length; i++) {\n        if (arr1[i] !== arr2[i]) {\n            return false;\n        }\n    }\n\n    return true;\n}\n\n/**\n * It is the default number format function for the measure field type.\n *\n * @param {any} val - The input value.\n * @return {number} Returns a number value.\n */\nexport function formatNumber(val) {\n    return val;\n}\n\n/**\n * Returns the detected data format.\n *\n * @param {any} data - The input data to be tested.\n * @return {string} Returns the data format name.\n */\nexport const detectDataFormat = (data) => {\n    if (isString(data)) {\n        return DataFormat.DSV_STR;\n    } else if (isArray(data) && isArray(data[0])) {\n        return DataFormat.DSV_ARR;\n    } else if (isArray(data) && (data.length === 0 || isObject(data[0]))) {\n        return DataFormat.FLAT_JSON;\n    }\n    return null;\n};\n","import { FieldType } from './enums';\nimport { getUniqueId } from './utils';\n\nconst fieldStore = {\n    data: {},\n\n    createNamespace (fieldArr, name) {\n        const dataId = name || getUniqueId();\n\n        this.data[dataId] = {\n            name: dataId,\n            fields: fieldArr,\n\n            fieldsObj () {\n                let fieldsObj = this._cachedFieldsObj;\n\n                if (!fieldsObj) {\n                    fieldsObj = this._cachedFieldsObj = {};\n                    this.fields.forEach((field) => {\n                        fieldsObj[field.name()] = field;\n                    });\n                }\n                return fieldsObj;\n            },\n            getMeasure () {\n                let measureFields = this._cachedMeasure;\n\n                if (!measureFields) {\n                    measureFields = this._cachedMeasure = {};\n                    this.fields.forEach((field) => {\n                        if (field.schema().type === FieldType.MEASURE) {\n                            measureFields[field.name()] = field;\n                        }\n                    });\n                }\n                return measureFields;\n            },\n            getDimension () {\n                let dimensionFields = this._cachedDimension;\n\n                if (!this._cachedDimension) {\n                    dimensionFields = this._cachedDimension = {};\n                    this.fields.forEach((field) => {\n                        if (field.schema().type === FieldType.DIMENSION) {\n                            dimensionFields[field.name()] = field;\n                        }\n                    });\n                }\n                return dimensionFields;\n            },\n        };\n        return this.data[dataId];\n    },\n};\n\nexport default fieldStore;\n","/**\n * The wrapper class on top of the primitive value of a field.\n *\n * @todo Need to have support for StringValue, NumberValue, DateTimeValue\n * and GeoValue. These types should expose predicate API mostly.\n */\nclass Value {\n\n  /**\n   * Creates new Value instance.\n   *\n   * @param {*} val - the primitive value from the field cell.\n   * @param {string | Field} field - The field from which the value belongs.\n   */\n    constructor (val, field) {\n        Object.defineProperty(this, '_value', {\n            enumerable: false,\n            configurable: false,\n            writable: false,\n            value: val\n        });\n\n        this.field = field;\n    }\n\n  /**\n   * Returns the field value.\n   *\n   * @return {*} Returns the current value.\n   */\n    get value () {\n        return this._value;\n    }\n\n  /**\n   * Converts to human readable string.\n   *\n   * @override\n   * @return {string} Returns a human readable string of the field value.\n   *\n   */\n    toString () {\n        return String(this.value);\n    }\n\n  /**\n   * Returns the value of the field.\n   *\n   * @override\n   * @return {*} Returns the field value.\n   */\n    valueOf () {\n        return this.value;\n    }\n}\n\nexport default Value;\n","/**\n * Iterates through the diffSet array and call the callback with the current\n * index.\n *\n * @param {string} rowDiffset - The row diffset string e.g. '0-4,6,10-13'.\n * @param {Function} callback - The callback function to be called with every index.\n */\nexport function rowDiffsetIterator (rowDiffset, callback) {\n    if (rowDiffset.length > 0) {\n        const rowDiffArr = rowDiffset.split(',');\n        rowDiffArr.forEach((diffStr) => {\n            const diffStsArr = diffStr.split('-');\n            const start = +(diffStsArr[0]);\n            const end = +(diffStsArr[1] || diffStsArr[0]);\n            if (end >= start) {\n                for (let i = start; i <= end; i += 1) {\n                    callback(i);\n                }\n            }\n        });\n    }\n}\n","/**\n * A parser to parser null, undefined, invalid and NIL values.\n *\n * @public\n * @class\n */\nclass InvalidAwareTypes {\n    /**\n     * Static method which gets/sets the invalid value registry.\n     *\n     * @public\n     * @param {Object} config - The custom configuration supplied by user.\n     * @return {Object} Returns the invalid values registry.\n     */\n    static invalidAwareVals (config) {\n        if (!config) {\n            return InvalidAwareTypes._invalidAwareValsMap;\n        }\n        return Object.assign(InvalidAwareTypes._invalidAwareValsMap, config);\n    }\n\n    /**\n     * Initialize a new instance.\n     *\n     * @public\n     * @param {string} value - The value of the invalid data type.\n     */\n    constructor (value) {\n        this._value = value;\n    }\n\n    /**\n     * Returns the current value of the instance.\n     *\n     * @public\n     * @return {string} Returns the value of the invalid data type.\n     */\n    value () {\n        return this._value;\n    }\n\n    /**\n     * Returns the current value of the instance in string format.\n     *\n     * @public\n     * @return {string} Returns the value of the invalid data type.\n     */\n    toString () {\n        return String(this._value);\n    }\n\n    static isInvalid(val) {\n        return (val instanceof InvalidAwareTypes) || !!InvalidAwareTypes.invalidAwareVals()[val];\n    }\n\n    static getInvalidType(val) {\n        return val instanceof InvalidAwareTypes ? val : InvalidAwareTypes.invalidAwareVals()[val];\n    }\n}\n\n/**\n * Enums for Invalid types.\n */\nInvalidAwareTypes.NULL = new InvalidAwareTypes('null');\nInvalidAwareTypes.NA = new InvalidAwareTypes('na');\nInvalidAwareTypes.NIL = new InvalidAwareTypes('nil');\n\n/**\n * Default Registry for mapping the invalid values.\n *\n * @private\n */\nInvalidAwareTypes._invalidAwareValsMap = {\n    invalid: InvalidAwareTypes.NA,\n    nil: InvalidAwareTypes.NIL,\n    null: InvalidAwareTypes.NULL,\n    undefined: InvalidAwareTypes.NA\n};\n\nexport default InvalidAwareTypes;\n","export { DataFormat, FilteringMode } from '../enums';\n/**\n * The event name for data propagation.\n */\nexport const PROPAGATION = 'propagation';\n\n/**\n * The name of the unique row id column in DataModel.\n */\nexport const ROW_ID = '__id__';\n\n/**\n * The enums for operation names performed on DataModel.\n */\nexport const DM_DERIVATIVES = {\n    SELECT: 'select',\n    PROJECT: 'project',\n    GROUPBY: 'group',\n    COMPOSE: 'compose',\n    CAL_VAR: 'calculatedVariable',\n    BIN: 'bin'\n};\n\nexport const JOINS = {\n    CROSS: 'cross',\n    LEFTOUTER: 'leftOuter',\n    RIGHTOUTER: 'rightOuter',\n    NATURAL: 'natural',\n    FULLOUTER: 'fullOuter'\n};\n\nexport const LOGICAL_OPERATORS = {\n    AND: 'and',\n    OR: 'or'\n};\n","/**\n * The helper function that returns an array of common schema\n * from two fieldStore instances.\n *\n * @param {FieldStore} fs1 - The first FieldStore instance.\n * @param {FieldStore} fs2 - The second FieldStore instance.\n * @return {Array} An array containing the common schema.\n */\nexport function getCommonSchema (fs1, fs2) {\n    const retArr = [];\n    const fs1Arr = [];\n    fs1.fields.forEach((field) => {\n        fs1Arr.push(field.schema().name);\n    });\n    fs2.fields.forEach((field) => {\n        if (fs1Arr.indexOf(field.schema().name) !== -1) {\n            retArr.push(field.schema().name);\n        }\n    });\n    return retArr;\n}\n","import DataModel from '../datamodel';\nimport { extend2 } from '../utils';\nimport { getCommonSchema } from './get-common-schema';\nimport { rowDiffsetIterator } from './row-diffset-iterator';\nimport { JOINS } from '../constants';\nimport { prepareJoinData } from '../helper';\n/**\n * Default filter function for crossProduct.\n *\n * @return {boolean} Always returns true.\n */\nfunction defaultFilterFn() { return true; }\n\n/**\n * Implementation of cross product operation between two DataModel instances.\n * It internally creates the data and schema for the new DataModel.\n *\n * @param {DataModel} dataModel1 - The left DataModel instance.\n * @param {DataModel} dataModel2 - The right DataModel instance.\n * @param {Function} filterFn - The filter function which is used to filter the tuples.\n * @param {boolean} [replaceCommonSchema=false] - The flag if the common name schema should be there.\n * @return {DataModel} Returns The newly created DataModel instance from the crossProduct operation.\n */\nexport function crossProduct (dm1, dm2, filterFn, replaceCommonSchema = false, jointype = JOINS.CROSS) {\n    const schema = [];\n    const data = [];\n    const applicableFilterFn = filterFn || defaultFilterFn;\n    const dm1FieldStore = dm1.getFieldspace();\n    const dm2FieldStore = dm2.getFieldspace();\n    const dm1FieldStoreName = dm1FieldStore.name;\n    const dm2FieldStoreName = dm2FieldStore.name;\n    const name = `${dm1FieldStore.name}.${dm2FieldStore.name}`;\n    const commonSchemaList = getCommonSchema(dm1FieldStore, dm2FieldStore);\n\n    if (dm1FieldStoreName === dm2FieldStoreName) {\n        throw new Error('DataModels must have different alias names');\n    }\n    // Here prepare the schema\n    dm1FieldStore.fields.forEach((field) => {\n        const tmpSchema = extend2({}, field.schema());\n        if (commonSchemaList.indexOf(tmpSchema.name) !== -1 && !replaceCommonSchema) {\n            tmpSchema.name = `${dm1FieldStore.name}.${tmpSchema.name}`;\n        }\n        schema.push(tmpSchema);\n    });\n    dm2FieldStore.fields.forEach((field) => {\n        const tmpSchema = extend2({}, field.schema());\n        if (commonSchemaList.indexOf(tmpSchema.name) !== -1) {\n            if (!replaceCommonSchema) {\n                tmpSchema.name = `${dm2FieldStore.name}.${tmpSchema.name}`;\n                schema.push(tmpSchema);\n            }\n        } else {\n            schema.push(tmpSchema);\n        }\n    });\n\n    // Here prepare Data\n    rowDiffsetIterator(dm1._rowDiffset, (i) => {\n        let rowAdded = false;\n        let rowPosition;\n        rowDiffsetIterator(dm2._rowDiffset, (ii) => {\n            const tuple = [];\n            const userArg = {};\n            userArg[dm1FieldStoreName] = {};\n            userArg[dm2FieldStoreName] = {};\n            dm1FieldStore.fields.forEach((field) => {\n                tuple.push(field.partialField.data[i]);\n                userArg[dm1FieldStoreName][field.name()] = field.partialField.data[i];\n            });\n            dm2FieldStore.fields.forEach((field) => {\n                if (!(commonSchemaList.indexOf(field.schema().name) !== -1 && replaceCommonSchema)) {\n                    tuple.push(field.partialField.data[ii]);\n                }\n                userArg[dm2FieldStoreName][field.name()] = field.partialField.data[ii];\n            });\n\n            let cachedStore = {};\n            let cloneProvider1 = () => dm1.detachedRoot();\n            let cloneProvider2 = () => dm2.detachedRoot();\n\n            const dm1Fields = prepareJoinData(userArg[dm1FieldStoreName]);\n            const dm2Fields = prepareJoinData(userArg[dm2FieldStoreName]);\n            if (applicableFilterFn(dm1Fields, dm2Fields, cloneProvider1, cloneProvider2, cachedStore)) {\n                const tupleObj = {};\n                tuple.forEach((cellVal, iii) => {\n                    tupleObj[schema[iii].name] = cellVal;\n                });\n                if (rowAdded && JOINS.CROSS !== jointype) {\n                    data[rowPosition] = tupleObj;\n                }\n                else {\n                    data.push(tupleObj);\n                    rowAdded = true;\n                    rowPosition = i;\n                }\n            } else if ((jointype === JOINS.LEFTOUTER || jointype === JOINS.RIGHTOUTER) && !rowAdded) {\n                const tupleObj = {};\n                let len = dm1FieldStore.fields.length - 1;\n                tuple.forEach((cellVal, iii) => {\n                    if (iii <= len) {\n                        tupleObj[schema[iii].name] = cellVal;\n                    }\n                    else {\n                        tupleObj[schema[iii].name] = null;\n                    }\n                });\n                rowAdded = true;\n                rowPosition = i;\n                data.push(tupleObj);\n            }\n        });\n    });\n\n    return new DataModel(data, schema, { name });\n}\n","/**\n * The default sort function.\n *\n * @param {*} a - The first value.\n * @param {*} b - The second value.\n * @return {number} Returns the comparison result e.g. 1 or 0 or -1.\n */\nfunction defSortFn (a, b) {\n    const a1 = `${a}`;\n    const b1 = `${b}`;\n    if (a1 < b1) {\n        return -1;\n    }\n    if (a1 > b1) {\n        return 1;\n    }\n    return 0;\n}\n\n/**\n * The helper function for merge sort which creates the sorted array\n * from the two halves of the input array.\n *\n * @param {Array} arr - The target array which needs to be merged.\n * @param {number} lo - The starting index of the first array half.\n * @param {number} mid - The ending index of the first array half.\n * @param {number} hi - The ending index of the second array half.\n * @param {Function} sortFn - The sort function.\n */\nfunction merge (arr, lo, mid, hi, sortFn) {\n    const mainArr = arr;\n    const auxArr = [];\n    for (let i = lo; i <= hi; i += 1) {\n        auxArr[i] = mainArr[i];\n    }\n    let a = lo;\n    let b = mid + 1;\n\n    for (let i = lo; i <= hi; i += 1) {\n        if (a > mid) {\n            mainArr[i] = auxArr[b];\n            b += 1;\n        } else if (b > hi) {\n            mainArr[i] = auxArr[a];\n            a += 1;\n        } else if (sortFn(auxArr[a], auxArr[b]) <= 0) {\n            mainArr[i] = auxArr[a];\n            a += 1;\n        } else {\n            mainArr[i] = auxArr[b];\n            b += 1;\n        }\n    }\n}\n\n/**\n * The helper function for merge sort which would be called\n * recursively for sorting the array halves.\n *\n * @param {Array} arr - The target array which needs to be sorted.\n * @param {number} lo - The starting index of the array half.\n * @param {number} hi - The ending index of the array half.\n * @param {Function} sortFn - The sort function.\n * @return {Array} Returns the target array itself.\n */\nfunction sort (arr, lo, hi, sortFn) {\n    if (hi === lo) { return arr; }\n\n    const mid = lo + Math.floor((hi - lo) / 2);\n    sort(arr, lo, mid, sortFn);\n    sort(arr, mid + 1, hi, sortFn);\n    merge(arr, lo, mid, hi, sortFn);\n\n    return arr;\n}\n\n/**\n * The implementation of merge sort.\n * It is used in DataModel for stable sorting as it is not sure\n * what the sorting algorithm used by browsers is stable or not.\n *\n * @param {Array} arr - The target array which needs to be sorted.\n * @param {Function} [sortFn=defSortFn] - The sort function.\n * @return {Array} Returns the input array itself in sorted order.\n */\nexport function mergeSort (arr, sortFn = defSortFn) {\n    if (arr.length > 1) {\n        sort(arr, 0, arr.length - 1, sortFn);\n    }\n    return arr;\n}\n","import { DimensionSubtype, MeasureSubtype } from '../enums';\nimport { rowDiffsetIterator } from './row-diffset-iterator';\nimport { mergeSort } from './merge-sort';\nimport { fieldInSchema } from '../helper';\nimport { isCallable, isArray, } from '../utils';\n/**\n * Generates the sorting functions to sort the data of a DataModel instance\n * according to the input data type.\n *\n * @param {string} dataType - The data type e.g. 'measure', 'datetime' etc.\n * @param {string} sortType - The sorting order i.e. 'asc' or 'desc'.\n * @param {integer} index - The index of the data which will be sorted.\n * @return {Function} Returns the the sorting function.\n */\nfunction getSortFn (dataType, sortType, index) {\n    let retFunc;\n    switch (dataType) {\n    case MeasureSubtype.CONTINUOUS:\n    case DimensionSubtype.TEMPORAL:\n        if (sortType === 'desc') {\n            retFunc = (a, b) => b[index] - a[index];\n        } else {\n            retFunc = (a, b) => a[index] - b[index];\n        }\n        break;\n    default:\n        retFunc = (a, b) => {\n            const a1 = `${a[index]}`;\n            const b1 = `${b[index]}`;\n            if (a1 < b1) {\n                return sortType === 'desc' ? 1 : -1;\n            }\n            if (a1 > b1) {\n                return sortType === 'desc' ? -1 : 1;\n            }\n            return 0;\n        };\n    }\n    return retFunc;\n}\n\n/**\n * Groups the data according to the specified target field.\n *\n * @param {Array} data - The input data array.\n * @param {number} fieldIndex - The target field index within schema array.\n * @return {Array} Returns an array containing the grouped data.\n */\nfunction groupData(data, fieldIndex) {\n    const hashMap = new Map();\n    const groupedData = [];\n\n    data.forEach((datum) => {\n        const fieldVal = datum[fieldIndex];\n        if (hashMap.has(fieldVal)) {\n            groupedData[hashMap.get(fieldVal)][1].push(datum);\n        } else {\n            groupedData.push([fieldVal, [datum]]);\n            hashMap.set(fieldVal, groupedData.length - 1);\n        }\n    });\n\n    return groupedData;\n}\n\n/**\n * Creates the argument value used for sorting function when sort is done\n * with another fields.\n *\n * @param {Array} groupedDatum - The grouped datum for a single dimension field value.\n * @param {Array} targetFields - An array of the sorting fields.\n * @param {Array} targetFieldDetails - An array of the sorting field details in schema.\n * @return {Object} Returns an object containing the value of sorting fields and the target field name.\n */\nfunction createSortingFnArg(groupedDatum, targetFields, targetFieldDetails) {\n    const arg = {\n        label: groupedDatum[0]\n    };\n\n    targetFields.reduce((acc, next, idx) => {\n        acc[next] = groupedDatum[1].map(datum => datum[targetFieldDetails[idx].index]);\n        return acc;\n    }, arg);\n\n    return arg;\n}\n\n/**\n * Sorts the data before return in dataBuilder.\n *\n * @param {Object} dataObj - An object containing the data and schema.\n * @param {Array} sortingDetails - An array containing the sorting configs.\n */\nfunction sortData(dataObj, sortingDetails) {\n    const { data, schema } = dataObj;\n    let fieldName;\n    let sortMeta;\n    let fDetails;\n    let i = sortingDetails.length - 1;\n\n    for (; i >= 0; i--) {\n        fieldName = sortingDetails[i][0];\n        sortMeta = sortingDetails[i][1];\n        fDetails = fieldInSchema(schema, fieldName);\n\n        if (!fDetails) {\n            // eslint-disable-next-line no-continue\n            continue;\n        }\n\n        if (isCallable(sortMeta)) {\n            // eslint-disable-next-line no-loop-func\n            mergeSort(data, (a, b) => sortMeta(a[fDetails.index], b[fDetails.index]));\n        } else if (isArray(sortMeta)) {\n            const groupedData = groupData(data, fDetails.index);\n            const sortingFn = sortMeta[sortMeta.length - 1];\n            const targetFields = sortMeta.slice(0, sortMeta.length - 1);\n            const targetFieldDetails = targetFields.map(f => fieldInSchema(schema, f));\n\n            groupedData.forEach((groupedDatum) => {\n                groupedDatum.push(createSortingFnArg(groupedDatum, targetFields, targetFieldDetails));\n            });\n\n            mergeSort(groupedData, (a, b) => {\n                const m = a[2];\n                const n = b[2];\n                return sortingFn(m, n);\n            });\n\n            // Empty the array\n            data.length = 0;\n            groupedData.forEach((datum) => {\n                data.push(...datum[1]);\n            });\n        } else {\n            sortMeta = String(sortMeta).toLowerCase() === 'desc' ? 'desc' : 'asc';\n            mergeSort(data, getSortFn(fDetails.type, sortMeta, fDetails.index));\n        }\n    }\n\n    dataObj.uids = [];\n    data.forEach((value) => {\n        dataObj.uids.push(value.pop());\n    });\n}\n\n\n/**\n * Builds the actual data array.\n *\n * @param {Array} fieldStore - An array of field.\n * @param {string} rowDiffset - A string consisting of which rows to be included eg. '0-2,4,6';\n * @param {string} colIdentifier - A string consisting of the details of which column\n * to be included eg 'date,sales,profit';\n * @param {Object} sortingDetails - An object containing the sorting details of the DataModel instance.\n * @param {Object} options - The options required to create the type of the data.\n * @return {Object} Returns an object containing the multidimensional array and the relative schema.\n */\nexport function dataBuilder (fieldStore, rowDiffset, colIdentifier, sortingDetails, options) {\n    const defOptions = {\n        addUid: false,\n        columnWise: false\n    };\n    options = Object.assign({}, defOptions, options);\n\n    const retObj = {\n        schema: [],\n        data: [],\n        uids: []\n    };\n    const addUid = options.addUid;\n    const reqSorting = sortingDetails && sortingDetails.length > 0;\n    // It stores the fields according to the colIdentifier argument\n    const tmpDataArr = [];\n    // Stores the fields according to the colIdentifier argument\n    const colIArr = colIdentifier.split(',');\n\n    colIArr.forEach((colName) => {\n        for (let i = 0; i < fieldStore.length; i += 1) {\n            if (fieldStore[i].name() === colName) {\n                tmpDataArr.push(fieldStore[i]);\n                break;\n            }\n        }\n    });\n\n    // Inserts the schema to the schema object\n    tmpDataArr.forEach((field) => {\n        /** @todo Need to use extend2 here otherwise user can overwrite the schema. */\n        retObj.schema.push(field.schema());\n    });\n\n    if (addUid) {\n        retObj.schema.push({\n            name: 'uid',\n            type: 'identifier'\n        });\n    }\n\n    rowDiffsetIterator(rowDiffset, (i) => {\n        retObj.data.push([]);\n        const insertInd = retObj.data.length - 1;\n        let start = 0;\n        tmpDataArr.forEach((field, ii) => {\n            retObj.data[insertInd][ii + start] = field.partialField.data[i];\n        });\n        if (addUid) {\n            retObj.data[insertInd][tmpDataArr.length] = i;\n        }\n        // Creates an array of unique identifiers for each row\n        retObj.uids.push(i);\n\n        // If sorting needed then there is the need to expose the index\n        // mapping from the old index to its new index\n        if (reqSorting) { retObj.data[insertInd].push(i); }\n    });\n\n    // Handles the sort functionality\n    if (reqSorting) {\n        sortData(retObj, sortingDetails);\n    }\n\n    if (options.columnWise) {\n        const tmpData = Array(...Array(retObj.schema.length)).map(() => []);\n        retObj.data.forEach((tuple) => {\n            tuple.forEach((data, i) => {\n                tmpData[i].push(data);\n            });\n        });\n        retObj.data = tmpData;\n    }\n\n    return retObj;\n}\n","import DataModel from '../datamodel';\nimport { extend2 } from '../utils';\nimport { rowDiffsetIterator } from './row-diffset-iterator';\nimport { isArrEqual } from '../utils/helper';\n\n/**\n * Performs the union operation between two dm instances.\n *\n * @todo Fix the conflicts between union and difference terminology here.\n *\n * @param {dm} dm1 - The first dm instance.\n * @param {dm} dm2 - The second dm instance.\n * @return {dm} Returns the newly created dm after union operation.\n */\nexport function difference (dm1, dm2) {\n    const hashTable = {};\n    const schema = [];\n    const schemaNameArr = [];\n    const data = [];\n    const dm1FieldStore = dm1.getFieldspace();\n    const dm2FieldStore = dm2.getFieldspace();\n    const dm1FieldStoreFieldObj = dm1FieldStore.fieldsObj();\n    const dm2FieldStoreFieldObj = dm2FieldStore.fieldsObj();\n    const name = `${dm1FieldStore.name} union ${dm2FieldStore.name}`;\n\n   // For union the columns should match otherwise return a clone of the dm1\n    if (!isArrEqual(dm1._colIdentifier.split(',').sort(), dm2._colIdentifier.split(',').sort())) {\n        return null;\n    }\n\n    // Prepare the schema\n    (dm1._colIdentifier.split(',')).forEach((fieldName) => {\n        const field = dm1FieldStoreFieldObj[fieldName];\n        schema.push(extend2({}, field.schema()));\n        schemaNameArr.push(field.schema().name);\n    });\n\n    /**\n     * The helper function to create the data.\n     *\n     * @param {dm} dm - The dm instance for which the data is inserted.\n     * @param {Object} fieldsObj - The fieldStore object format.\n     * @param {boolean} addData - If true only tuple will be added to the data.\n     */\n    function prepareDataHelper(dm, fieldsObj, addData) {\n        rowDiffsetIterator(dm._rowDiffset, (i) => {\n            const tuple = {};\n            let hashData = '';\n            schemaNameArr.forEach((schemaName) => {\n                const value = fieldsObj[schemaName].partialField.data[i];\n                hashData += `-${value}`;\n                tuple[schemaName] = value;\n            });\n            if (!hashTable[hashData]) {\n                if (addData) { data.push(tuple); }\n                hashTable[hashData] = true;\n            }\n        });\n    }\n\n    // Prepare the data\n    prepareDataHelper(dm2, dm2FieldStoreFieldObj, false);\n    prepareDataHelper(dm1, dm1FieldStoreFieldObj, true);\n\n    return new DataModel(data, schema, { name });\n}\n\n","import { isArray } from '../utils';\nimport InvalidAwareTypes from '../invalid-aware-types';\n\n\nfunction getFilteredValues(arr) {\n    return arr.filter(item => !(item instanceof InvalidAwareTypes));\n}\n/**\n * Reducer function that returns the sum of all the values.\n *\n * @public\n * @param  {Array.<number>} arr - The input array.\n * @return {number} Returns the sum of the array.\n */\nfunction sum (arr) {\n    if (isArray(arr) && !(arr[0] instanceof Array)) {\n        const filteredNumber = getFilteredValues(arr);\n        const totalSum = filteredNumber.length ?\n                            filteredNumber.reduce((acc, curr) => acc + curr, 0)\n                            : InvalidAwareTypes.NULL;\n        return totalSum;\n    }\n    return InvalidAwareTypes.NULL;\n}\n\n/**\n * Reducer function that returns the average of all the values.\n *\n * @public\n * @param  {Array.<number>} arr - The input array.\n * @return {number} Returns the mean value of the array.\n */\nfunction avg (arr) {\n    if (isArray(arr) && !(arr[0] instanceof Array)) {\n        const totalSum = sum(arr);\n        const len = arr.length || 1;\n        return (Number.isNaN(totalSum) || totalSum instanceof InvalidAwareTypes) ?\n                 InvalidAwareTypes.NULL : totalSum / len;\n    }\n    return InvalidAwareTypes.NULL;\n}\n\n/**\n * Reducer function that gives the min value amongst all the values.\n *\n * @public\n * @param  {Array.<number>} arr - The input array.\n * @return {number} Returns the minimum value of the array.\n */\nfunction min (arr) {\n    if (isArray(arr) && !(arr[0] instanceof Array)) {\n        // Filter out undefined, null and NaN values\n        const filteredValues = getFilteredValues(arr);\n\n        return (filteredValues.length) ? Math.min(...filteredValues) : InvalidAwareTypes.NULL;\n    }\n    return InvalidAwareTypes.NULL;\n}\n\n/**\n * Reducer function that gives the max value amongst all the values.\n *\n * @public\n * @param  {Array.<number>} arr - The input array.\n * @return {number} Returns the maximum value of the array.\n */\nfunction max (arr) {\n    if (isArray(arr) && !(arr[0] instanceof Array)) {\n        // Filter out undefined, null and NaN values\n        const filteredValues = getFilteredValues(arr);\n\n        return (filteredValues.length) ? Math.max(...filteredValues) : InvalidAwareTypes.NULL;\n    }\n    return InvalidAwareTypes.NULL;\n}\n\n/**\n * Reducer function that gives the first value of the array.\n *\n * @public\n * @param  {Array} arr - The input array.\n * @return {number} Returns the first value of the array.\n */\nfunction first (arr) {\n    return arr[0];\n}\n\n/**\n * Reducer function that gives the last value of the array.\n *\n * @public\n * @param  {Array} arr - The input array.\n * @return {number} Returns the last value of the array.\n */\nfunction last (arr) {\n    return arr[arr.length - 1];\n}\n\n/**\n * Reducer function that gives the count value of the array.\n *\n * @public\n * @param  {Array} arr - The input array.\n * @return {number} Returns the length of the array.\n */\nfunction count (arr) {\n    if (isArray(arr)) {\n        return arr.length;\n    }\n    return InvalidAwareTypes.NULL;\n}\n\n/**\n * Calculates the variance of the input array.\n *\n * @param  {Array.<number>} arr - The input array.\n * @return {number} Returns the variance of the input array.\n */\nfunction variance (arr) {\n    let mean = avg(arr);\n    return avg(arr.map(num => (num - mean) ** 2));\n}\n\n/**\n * Calculates the square root of the variance of the input array.\n *\n * @public\n * @param  {Array.<number>} arr - The input array.\n * @return {number} Returns the square root of the variance.\n */\nfunction std (arr) {\n    return Math.sqrt(variance(arr));\n}\n\n\nconst fnList = {\n    sum,\n    avg,\n    min,\n    max,\n    first,\n    last,\n    count,\n    std\n};\n\nconst defaultReducerName = 'sum';\n\nexport {\n    defaultReducerName,\n    sum as defReducer,\n    fnList,\n};\n","import { defReducer, fnList } from '../operator';\n\n/**\n * A page level storage which stores, registers, unregisters reducers for all the datamodel instances. There is only one\n * reducer store available in a page. All the datamodel instances receive same instance of reducer store. DataModel\n * out of the box provides handful of {@link reducer | reducers} which can be used as reducer funciton.\n *\n * @public\n * @namespace DataModel\n */\nclass ReducerStore {\n    constructor () {\n        this.store = new Map();\n        this.store.set('defReducer', defReducer);\n\n        Object.entries(fnList).forEach((key) => {\n            this.store.set(key[0], key[1]);\n        });\n    }\n\n    /**\n     * Changes the `defaultReducer` globally. For all the fields which does not have `defAggFn` mentioned in schema, the\n     * value of `defaultReducer` is used for aggregation.\n     *\n     * @public\n     * @param {string} [reducer='sum'] - The name of the default reducer. It picks up the definition from store by doing\n     * name lookup. If no name is found then it takes `sum` as the default reducer.\n     * @return {ReducerStore} Returns instance of the singleton store in page.\n     */\n    defaultReducer (...params) {\n        if (!params.length) {\n            return this.store.get('defReducer');\n        }\n\n        let reducer = params[0];\n\n        if (typeof reducer === 'function') {\n            this.store.set('defReducer', reducer);\n        } else {\n            reducer = String(reducer);\n            if (Object.keys(fnList).indexOf(reducer) !== -1) {\n                this.store.set('defReducer', fnList[reducer]);\n            } else {\n                throw new Error(`Reducer ${reducer} not found in registry`);\n            }\n        }\n        return this;\n    }\n\n    /**\n     *\n     * Registers a {@link reducer | reducer}.\n     * A {@link reducer | reducer} has to be registered before it is used.\n     *\n     * @example\n     *  // find the mean squared value of a given set\n     *  const reducerStore = DataModel.Reducers();\n     *\n     *  reducers.register('meanSquared', (arr) => {\n     *      const squaredVal = arr.map(item => item * item);\n     *      let sum = 0;\n     *      for (let i = 0, l = squaredVal.length; i < l; i++) {\n     *          sum += squaredVal[i++];\n     *      }\n     *\n     *      return sum;\n     *  })\n     *\n     *  // datamodel (dm) is already prepared with cars.json\n     *  const dm1 = dm.groupBy(['origin'], {\n     *      accleration: 'meanSquared'\n     *  });\n     *\n     * @public\n     *\n     * @param {string} name formal name for a reducer. If the given name already exists in store it is overridden by new\n     *      definition.\n     * @param {Function} reducer definition of {@link reducer} function.\n     *\n     * @return {Function} function for unregistering the reducer.\n     */\n    register (name, reducer) {\n        if (typeof reducer !== 'function') {\n            throw new Error('Reducer should be a function');\n        }\n\n        name = String(name);\n        this.store.set(name, reducer);\n\n        return () => { this.__unregister(name); };\n    }\n\n    __unregister (name) {\n        if (this.store.has(name)) {\n            this.store.delete(name);\n        }\n    }\n\n    resolve (name) {\n        if (name instanceof Function) {\n            return name;\n        }\n        return this.store.get(name);\n    }\n}\n\nconst reducerStore = (function () {\n    let store = null;\n\n    function getStore () {\n        if (store === null) {\n            store = new ReducerStore();\n        }\n        return store;\n    }\n    return getStore();\n}());\n\nexport default reducerStore;\n","import { getCommonSchema } from './get-common-schema';\n\n/**\n * The filter function used in natural join.\n * It generates a function that will have the logic to join two\n * DataModel instances by the process of natural join.\n *\n * @param {DataModel} dm1 - The left DataModel instance.\n * @param {DataModel} dm2 - The right DataModel instance.\n * @return {Function} Returns a function that is used in cross-product operation.\n */\nexport function naturalJoinFilter (dm1, dm2) {\n    const dm1FieldStore = dm1.getFieldspace();\n    const dm2FieldStore = dm2.getFieldspace();\n    // const dm1FieldStoreName = dm1FieldStore.name;\n    // const dm2FieldStoreName = dm2FieldStore.name;\n    const commonSchemaArr = getCommonSchema(dm1FieldStore, dm2FieldStore);\n\n    return (dm1Fields, dm2Fields) => {\n        let retainTuple = true;\n        commonSchemaArr.forEach((fieldName) => {\n            if (dm1Fields[fieldName].value ===\n                dm2Fields[fieldName].value && retainTuple) {\n                retainTuple = true;\n            } else {\n                retainTuple = false;\n            }\n        });\n        return retainTuple;\n    };\n}\n","import DataModel from '../export';\nimport { extend2 } from '../utils';\nimport { rowDiffsetIterator } from './row-diffset-iterator';\nimport { isArrEqual } from '../utils/helper';\n/**\n * Performs the union operation between two dm instances.\n *\n * @param {dm} dm1 - The first dm instance.\n * @param {dm} dm2 - The second dm instance.\n * @return {dm} Returns the newly created dm after union operation.\n */\nexport function union (dm1, dm2) {\n    const hashTable = {};\n    const schema = [];\n    const schemaNameArr = [];\n    const data = [];\n    const dm1FieldStore = dm1.getFieldspace();\n    const dm2FieldStore = dm2.getFieldspace();\n    const dm1FieldStoreFieldObj = dm1FieldStore.fieldsObj();\n    const dm2FieldStoreFieldObj = dm2FieldStore.fieldsObj();\n    const name = `${dm1FieldStore.name} union ${dm2FieldStore.name}`;\n\n    // For union the columns should match otherwise return a clone of the dm1\n    if (!isArrEqual(dm1._colIdentifier.split(',').sort(), dm2._colIdentifier.split(',').sort())) {\n        return null;\n    }\n\n    // Prepare the schema\n    (dm1._colIdentifier.split(',')).forEach((fieldName) => {\n        const field = dm1FieldStoreFieldObj[fieldName];\n        schema.push(extend2({}, field.schema()));\n        schemaNameArr.push(field.schema().name);\n    });\n\n    /**\n     * The helper function to create the data.\n     *\n     * @param {dm} dm - The dm instance for which the data is inserted.\n     * @param {Object} fieldsObj - The fieldStore object format.\n     */\n    function prepareDataHelper (dm, fieldsObj) {\n        rowDiffsetIterator(dm._rowDiffset, (i) => {\n            const tuple = {};\n            let hashData = '';\n            schemaNameArr.forEach((schemaName) => {\n                const value = fieldsObj[schemaName].partialField.data[i];\n                hashData += `-${value}`;\n                tuple[schemaName] = value;\n            });\n            if (!hashTable[hashData]) {\n                data.push(tuple);\n                hashTable[hashData] = true;\n            }\n        });\n    }\n\n    // Prepare the data\n    prepareDataHelper(dm1, dm1FieldStoreFieldObj);\n    prepareDataHelper(dm2, dm2FieldStoreFieldObj);\n\n    return new DataModel(data, schema, { name });\n}\n","import { crossProduct } from './cross-product';\nimport { JOINS } from '../constants';\nimport { union } from './union';\n\n\nexport function leftOuterJoin (dataModel1, dataModel2, filterFn) {\n    return crossProduct(dataModel1, dataModel2, filterFn, false, JOINS.LEFTOUTER);\n}\n\nexport function rightOuterJoin (dataModel1, dataModel2, filterFn) {\n    return crossProduct(dataModel2, dataModel1, filterFn, false, JOINS.RIGHTOUTER);\n}\n\nexport function fullOuterJoin (dataModel1, dataModel2, filterFn) {\n    return union(leftOuterJoin(dataModel1, dataModel2, filterFn), rightOuterJoin(dataModel1, dataModel2, filterFn));\n}\n","import { rowDiffsetIterator } from '../../operator/row-diffset-iterator';\n\n/**\n * In {@link DataModel}, every tabular data consists of column, a column is stored as field.\n * Field contains all the data for a given column in an array.\n *\n * Each record consists of several fields; the fields of all records form the columns.\n * Examples of fields: name, gender, sex etc.\n *\n * In DataModel, each field can have multiple attributes which describes its data and behaviour.\n * A field can have two types of data: Measure and Dimension.\n *\n * A Dimension Field is the context on which a data is categorized and the measure is the numerical values that\n * quantify the data set.\n * In short a dimension is the lens through which you are looking at your measure data.\n *\n * Refer to {@link Schema} to get info about possible field attributes.\n *\n * @public\n * @class\n */\nexport default class Field {\n    /**\n     * Initialize a new instance.\n     *\n     * @public\n     * @param {PartialField} partialField - The partialField instance which holds the whole data.\n     * @param {string} rowDiffset - The data subset definition.\n     */\n    constructor (partialField, rowDiffset) {\n        this.partialField = partialField;\n        this.rowDiffset = rowDiffset;\n    }\n\n    /**\n     * Generates the field type specific domain.\n     *\n     * @public\n     * @abstract\n     */\n    domain () {\n        throw new Error('Not yet implemented');\n    }\n\n    /**\n     * Returns the the field schema.\n     *\n     * @public\n     * @return {string} Returns the field schema.\n     */\n    schema () {\n        return this.partialField.schema;\n    }\n\n    /**\n     * Returns the name of the field.\n     *\n     * @public\n     * @return {string} Returns the name of the field.\n     */\n    name () {\n        return this.partialField.name;\n    }\n\n    /**\n     * Returns the type of the field.\n     *\n     * @public\n     * @return {string} Returns the type of the field.\n     */\n    type () {\n        return this.partialField.schema.type;\n    }\n\n    /**\n     * Returns the subtype of the field.\n     *\n     * @public\n     * @return {string} Returns the subtype of the field.\n     */\n    subtype () {\n        return this.partialField.schema.subtype;\n    }\n\n    /**\n     * Returns the description of the field.\n     *\n     * @public\n     * @return {string} Returns the description of the field.\n     */\n    description () {\n        return this.partialField.schema.description;\n    }\n\n    /**\n     * Returns the display name of the field.\n     *\n     * @public\n     * @return {string} Returns the display name of the field.\n     */\n    displayName () {\n        return this.partialField.schema.displayName || this.partialField.schema.name;\n    }\n\n    /**\n     * Returns the data associated with the field.\n     *\n     * @public\n     * @return {Array} Returns the data.\n     */\n    data () {\n        const data = [];\n        rowDiffsetIterator(this.rowDiffset, (i) => {\n            data.push(this.partialField.data[i]);\n        });\n        return data;\n    }\n\n    /**\n     * Returns the formatted version of the underlying field data.\n     *\n     * @public\n     * @abstract\n     */\n    formattedData () {\n        throw new Error('Not yet implemented');\n    }\n}\n","import Field from '../field';\n\n/**\n * Represents dimension field type.\n *\n * @public\n * @class\n * @extends Field\n */\nexport default class Dimension extends Field {\n    /**\n     * Returns the domain for the dimension field.\n     *\n     * @override\n     * @public\n     * @return {any} Returns the calculated domain.\n     */\n    domain () {\n        if (!this._cachedDomain) {\n            this._cachedDomain = this.calculateDataDomain();\n        }\n        return this._cachedDomain;\n    }\n\n    /**\n     * Calculates the corresponding field domain.\n     *\n     * @public\n     * @abstract\n     */\n    calculateDataDomain () {\n        throw new Error('Not yet implemented');\n    }\n\n     /**\n     * Returns the formatted version of the underlying field data.\n     *\n     * @public\n     * @override\n     * @return {Array} Returns the formatted data.\n     */\n    formattedData () {\n        return this.data();\n    }\n}\n","import { rowDiffsetIterator } from '../../operator/row-diffset-iterator';\nimport { DimensionSubtype } from '../../enums';\nimport Dimension from '../dimension';\n/**\n * Represents categorical field subtype.\n *\n * @public\n * @class\n * @extends Dimension\n */\nexport default class Categorical extends Dimension {\n    /**\n     * Returns the subtype of the field.\n     *\n     * @public\n     * @override\n     * @return {string} Returns the subtype of the field.\n     */\n    subtype () {\n        return DimensionSubtype.CATEGORICAL;\n    }\n\n    /**\n     * Calculates the corresponding field domain.\n     *\n     * @public\n     * @override\n     * @return {Array} Returns the unique values.\n     */\n    calculateDataDomain () {\n        const hash = new Set();\n        const domain = [];\n\n        // here don't use this.data() as the iteration will be occurred two times on same data.\n        rowDiffsetIterator(this.rowDiffset, (i) => {\n            const datum = this.partialField.data[i];\n            if (!hash.has(datum)) {\n                hash.add(datum);\n                domain.push(datum);\n            }\n        });\n        return domain;\n    }\n}\n","import { rowDiffsetIterator } from '../../operator/row-diffset-iterator';\nimport Dimension from '../dimension';\nimport { DateTimeFormatter } from '../../utils';\nimport InvalidAwareTypes from '../../invalid-aware-types';\n\n/**\n * Represents temporal field subtype.\n *\n * @public\n * @class\n * @extends Dimension\n */\nexport default class Temporal extends Dimension {\n     /**\n     * Initialize a new instance.\n     *\n     * @public\n     * @param {PartialField} partialField - The partialField instance which holds the whole data.\n     * @param {string} rowDiffset - The data subset definition.\n     */\n    constructor (partialField, rowDiffset) {\n        super(partialField, rowDiffset);\n\n        this._cachedMinDiff = null;\n    }\n\n     /**\n     * Calculates the corresponding field domain.\n     *\n     * @public\n     * @override\n     * @return {Array} Returns the unique values.\n     */\n    calculateDataDomain () {\n        const hash = new Set();\n        const domain = [];\n\n        // here don't use this.data() as the iteration will be\n        // occurred two times on same data.\n        rowDiffsetIterator(this.rowDiffset, (i) => {\n            const datum = this.partialField.data[i];\n            if (!hash.has(datum)) {\n                hash.add(datum);\n                domain.push(datum);\n            }\n        });\n\n        return domain;\n    }\n\n\n    /**\n     * Calculates the minimum consecutive difference from the associated field data.\n     *\n     * @public\n     * @return {number} Returns the minimum consecutive diff in milliseconds.\n     */\n    minimumConsecutiveDifference () {\n        if (this._cachedMinDiff) {\n            return this._cachedMinDiff;\n        }\n\n        const sortedData = this.data().filter(item => !(item instanceof InvalidAwareTypes)).sort((a, b) => a - b);\n        const arrLn = sortedData.length;\n        let minDiff = Number.POSITIVE_INFINITY;\n        let prevDatum;\n        let nextDatum;\n        let processedCount = 0;\n\n        for (let i = 1; i < arrLn; i++) {\n            prevDatum = sortedData[i - 1];\n            nextDatum = sortedData[i];\n\n            if (nextDatum === prevDatum) {\n                continue;\n            }\n\n            minDiff = Math.min(minDiff, nextDatum - sortedData[i - 1]);\n            processedCount++;\n        }\n\n        if (!processedCount) {\n            minDiff = null;\n        }\n        this._cachedMinDiff = minDiff;\n\n        return this._cachedMinDiff;\n    }\n\n    /**\n     * Returns the format specified in the input schema while creating field.\n     *\n     * @public\n     * @return {string} Returns the datetime format.\n     */\n    format () {\n        return this.partialField.schema.format;\n    }\n\n    /**\n     * Returns the formatted version of the underlying field data.\n     *\n     * @public\n     * @override\n     * @return {Array} Returns the formatted data.\n     */\n    formattedData () {\n        const data = [];\n        rowDiffsetIterator(this.rowDiffset, (i) => {\n            const datum = this.partialField.data[i];\n            if (datum instanceof InvalidAwareTypes) {\n                data.push(datum);\n            } else {\n                data.push(DateTimeFormatter.formatAs(datum, this.format()));\n            }\n        });\n        return data;\n    }\n}\n\n","import Dimension from '../dimension';\n\n/**\n * Represents binned field subtype.\n *\n * @public\n * @class\n * @extends Dimension\n */\nexport default class Binned extends Dimension {\n    /**\n     * Calculates the corresponding field domain.\n     *\n     * @public\n     * @override\n     * @return {Array} Returns the last and first values of bins config array.\n     */\n    calculateDataDomain () {\n        const binsArr = this.partialField.schema.bins;\n        return [binsArr[0], binsArr[binsArr.length - 1]];\n    }\n\n    /**\n     * Returns the bins config provided while creating the field instance.\n     *\n     * @public\n     * @return {Array} Returns the bins array config.\n     */\n    bins () {\n        return this.partialField.schema.bins;\n    }\n}\n","import { formatNumber } from '../../utils';\nimport { defaultReducerName } from '../../operator/group-by-function';\nimport Field from '../field';\n\n/**\n * Represents measure field type.\n *\n * @public\n * @class\n * @extends Field\n */\nexport default class Measure extends Field {\n  /**\n   * Returns the domain for the measure field.\n   *\n   * @override\n   * @public\n   * @return {any} Returns the calculated domain.\n   */\n    domain () {\n        if (!this._cachedDomain) {\n            this._cachedDomain = this.calculateDataDomain();\n        }\n        return this._cachedDomain;\n    }\n\n  /**\n   * Returns the unit of the measure field.\n   *\n   * @public\n   * @return {string} Returns unit of the field.\n   */\n    unit () {\n        return this.partialField.schema.unit;\n    }\n\n  /**\n   * Returns the aggregation function name of the measure field.\n   *\n   * @public\n   * @return {string} Returns aggregation function name of the field.\n   */\n    defAggFn () {\n        return this.partialField.schema.defAggFn || defaultReducerName;\n    }\n\n  /**\n   * Returns the number format of the measure field.\n   *\n   * @public\n   * @return {Function} Returns number format of the field.\n   */\n    numberFormat () {\n        const { numberFormat } = this.partialField.schema;\n        return numberFormat instanceof Function ? numberFormat : formatNumber;\n    }\n\n  /**\n   * Calculates the corresponding field domain.\n   *\n   * @public\n   * @abstract\n   */\n    calculateDataDomain () {\n        throw new Error('Not yet implemented');\n    }\n\n    /**\n     * Returns the formatted version of the underlying field data.\n     *\n     * @public\n     * @override\n     * @return {Array} Returns the formatted data.\n     */\n    formattedData () {\n        return this.data();\n    }\n}\n","import { rowDiffsetIterator } from '../../operator/row-diffset-iterator';\nimport { MeasureSubtype } from '../../enums';\nimport Measure from '../measure';\nimport InvalidAwareTypes from '../../invalid-aware-types';\n\n/**\n * Represents continuous field subtype.\n *\n * @public\n * @class\n * @extends Measure\n */\nexport default class Continuous extends Measure {\n    /**\n     * Returns the subtype of the field.\n     *\n     * @public\n     * @override\n     * @return {string} Returns the subtype of the field.\n     */\n    subtype () {\n        return MeasureSubtype.CONTINUOUS;\n    }\n\n    /**\n     * Calculates the corresponding field domain.\n     *\n     * @public\n     * @override\n     * @return {Array} Returns the min and max values.\n     */\n    calculateDataDomain () {\n        let min = Number.POSITIVE_INFINITY;\n        let max = Number.NEGATIVE_INFINITY;\n\n        // here don't use this.data() as the iteration will be occurred two times on same data.\n        rowDiffsetIterator(this.rowDiffset, (i) => {\n            const datum = this.partialField.data[i];\n            if (datum instanceof InvalidAwareTypes) {\n                return;\n            }\n\n            if (datum < min) {\n                min = datum;\n            }\n            if (datum > max) {\n                max = datum;\n            }\n        });\n\n        return [min, max];\n    }\n}\n","/**\n * A interface to represent a parser which is responsible to parse the field.\n *\n * @public\n * @interface\n */\nexport default class FieldParser {\n    /**\n     * Parses a single value of a field and return the sanitized form.\n     *\n     * @public\n     * @abstract\n     */\n    parse () {\n        throw new Error('Not yet implemented');\n    }\n}\n","import FieldParser from '../field-parser';\nimport InvalidAwareTypes from '../../../invalid-aware-types';\n\n/**\n * A FieldParser which parses the categorical values.\n *\n * @public\n * @class\n * @implements {FieldParser}\n */\nexport default class CategoricalParser extends FieldParser {\n  /**\n   * Parses a single value of a field and returns the stringified form.\n   *\n   * @public\n   * @param {string|number} val - The value of the field.\n   * @return {string} Returns the stringified value.\n   */\n    parse (val) {\n        let result;\n        // check if invalid date value\n        if (!InvalidAwareTypes.isInvalid(val)) {\n            result = String(val).trim();\n        } else {\n            result = InvalidAwareTypes.getInvalidType(val);\n        }\n        return result;\n    }\n}\n","import { DateTimeFormatter } from '../../../utils';\nimport FieldParser from '../field-parser';\nimport InvalidAwareTypes from '../../../invalid-aware-types';\n\n/**\n * A FieldParser which parses the temporal values.\n *\n * @public\n * @class\n * @implements {FieldParser}\n */\nexport default class TemporalParser extends FieldParser {\n    /**\n     * Initialize a new instance.\n     *\n     * @public\n     * @param {Object} schema - The schema object for the corresponding field.\n     */\n    constructor (schema) {\n        super();\n        this.schema = schema;\n        this._dtf = new DateTimeFormatter(this.schema.format);\n    }\n\n    /**\n     * Parses a single value of a field and returns the millisecond value.\n     *\n     * @public\n     * @param {string|number} val - The value of the field.\n     * @return {number} Returns the millisecond value.\n     */\n    parse (val) {\n        let result;\n        // check if invalid date value\n        if (!InvalidAwareTypes.isInvalid(val)) {\n            let nativeDate = this._dtf.getNativeDate(val);\n            result = nativeDate ? nativeDate.getTime() : InvalidAwareTypes.NA;\n        } else {\n            result = InvalidAwareTypes.getInvalidType(val);\n        }\n        return result;\n    }\n}\n","import FieldParser from '../field-parser';\nimport InvalidAwareTypes from '../../../invalid-aware-types';\n\n/**\n * A FieldParser which parses the binned values.\n *\n * @public\n * @class\n * @implements {FieldParser}\n */\nexport default class BinnedParser extends FieldParser {\n  /**\n   * Parses a single binned value of a field and returns the sanitized value.\n   *\n   * @public\n   * @param {string} val - The value of the field.\n   * @return {string} Returns the sanitized value.\n   */\n    parse (val) {\n        const regex = /^\\s*([+-]?\\d+(?:\\.\\d+)?)\\s*-\\s*([+-]?\\d+(?:\\.\\d+)?)\\s*$/;\n        val = String(val);\n        let result;\n        // check if invalid date value\n        if (!InvalidAwareTypes.isInvalid(val)) {\n            let matched = val.match(regex);\n            result = matched ? `${Number.parseFloat(matched[1])}-${Number.parseFloat(matched[2])}`\n                             : InvalidAwareTypes.NA;\n        } else {\n            result = InvalidAwareTypes.getInvalidType(val);\n        }\n        return result;\n    }\n}\n","import FieldParser from '../field-parser';\nimport InvalidAwareTypes from '../../../invalid-aware-types';\n\n/**\n * A FieldParser which parses the continuous values.\n *\n * @public\n * @class\n * @implements {FieldParser}\n */\nexport default class ContinuousParser extends FieldParser {\n  /**\n   * Parses a single value of a field and returns the number form.\n   *\n   * @public\n   * @param {string|number} val - The value of the field.\n   * @return {string} Returns the number value.\n   */\n    parse (val) {\n        let result;\n        // check if invalid date value\n        if (!InvalidAwareTypes.isInvalid(val)) {\n            let parsedVal = parseFloat(val, 10);\n            result = Number.isNaN(parsedVal) ? InvalidAwareTypes.NA : parsedVal;\n        } else {\n            result = InvalidAwareTypes.getInvalidType(val);\n        }\n        return result;\n    }\n}\n","/**\n * Stores the full data and the metadata of a field. It provides\n * a single source of data from which the future Field\n * instance can get a subset of it with a rowDiffset config.\n *\n * @class\n * @public\n */\nexport default class PartialField {\n    /**\n     * Initialize a new instance.\n     *\n     * @public\n     * @param {string} name - The name of the field.\n     * @param {Array} data - The data array.\n     * @param {Object} schema - The schema object of the corresponding field.\n     * @param {FieldParser} parser - The parser instance corresponding to that field.\n     */\n    constructor (name, data, schema, parser) {\n        this.name = name;\n        this.schema = schema;\n        this.parser = parser;\n        this.data = this._sanitize(data);\n    }\n\n    /**\n     * Sanitizes the field data.\n     *\n     * @private\n     * @param {Array} data - The actual input data.\n     * @return {Array} Returns the sanitized data.\n     */\n    _sanitize (data) {\n        return data.map(datum => this.parser.parse(datum));\n    }\n}\n","import { FieldType, DimensionSubtype, MeasureSubtype } from './enums';\nimport {\n    Categorical,\n    Temporal,\n    Binned,\n    Continuous,\n    CategoricalParser,\n    TemporalParser,\n    BinnedParser,\n    ContinuousParser,\n    PartialField\n} from './fields';\n\n/**\n * Creates a field instance according to the provided data and schema.\n *\n * @param {Array} data - The field data array.\n * @param {Object} schema - The field schema object.\n * @return {Field} Returns the newly created field instance.\n */\nfunction createUnitField(data, schema) {\n    data = data || [];\n    let partialField;\n\n    switch (schema.type) {\n    case FieldType.MEASURE:\n        switch (schema.subtype) {\n        case MeasureSubtype.CONTINUOUS:\n            partialField = new PartialField(schema.name, data, schema, new ContinuousParser());\n            return new Continuous(partialField, `0-${data.length - 1}`);\n        default:\n            partialField = new PartialField(schema.name, data, schema, new ContinuousParser());\n            return new Continuous(partialField, `0-${data.length - 1}`);\n        }\n    case FieldType.DIMENSION:\n        switch (schema.subtype) {\n        case DimensionSubtype.CATEGORICAL:\n            partialField = new PartialField(schema.name, data, schema, new CategoricalParser());\n            return new Categorical(partialField, `0-${data.length - 1}`);\n        case DimensionSubtype.TEMPORAL:\n            partialField = new PartialField(schema.name, data, schema, new TemporalParser(schema));\n            return new Temporal(partialField, `0-${data.length - 1}`);\n        case DimensionSubtype.BINNED:\n            partialField = new PartialField(schema.name, data, schema, new BinnedParser());\n            return new Binned(partialField, `0-${data.length - 1}`);\n        default:\n            partialField = new PartialField(schema.name, data, schema, new CategoricalParser());\n            return new Categorical(partialField, `0-${data.length - 1}`);\n        }\n    default:\n        partialField = new PartialField(schema.name, data, schema, new CategoricalParser());\n        return new Categorical(partialField, `0-${data.length - 1}`);\n    }\n}\n\n\n/**\n * Creates a field instance from partialField and rowDiffset.\n *\n * @param {PartialField} partialField - The corresponding partial field.\n * @param {string} rowDiffset - The data subset config.\n * @return {Field} Returns the newly created field instance.\n */\nexport function createUnitFieldFromPartial(partialField, rowDiffset) {\n    const { schema } = partialField;\n\n    switch (schema.type) {\n    case FieldType.MEASURE:\n        switch (schema.subtype) {\n        case MeasureSubtype.CONTINUOUS:\n            return new Continuous(partialField, rowDiffset);\n        default:\n            return new Continuous(partialField, rowDiffset);\n        }\n    case FieldType.DIMENSION:\n        switch (schema.subtype) {\n        case DimensionSubtype.CATEGORICAL:\n            return new Categorical(partialField, rowDiffset);\n        case DimensionSubtype.TEMPORAL:\n            return new Temporal(partialField, rowDiffset);\n        case DimensionSubtype.BINNED:\n            return new Binned(partialField, rowDiffset);\n        default:\n            return new Categorical(partialField, rowDiffset);\n        }\n    default:\n        return new Categorical(partialField, rowDiffset);\n    }\n}\n\n/**\n * Creates the field instances with input data and schema.\n *\n * @param {Array} dataColumn - The data array for fields.\n * @param {Array} schema - The schema array for fields.\n * @param {Array} headers - The array of header names.\n * @return {Array.<Field>} Returns an array of newly created field instances.\n */\nexport function createFields(dataColumn, schema, headers) {\n    const headersObj = {};\n\n    if (!(headers && headers.length)) {\n        headers = schema.map(item => item.name);\n    }\n\n    headers.forEach((header, i) => {\n        headersObj[header] = i;\n    });\n\n    return schema.map(item => createUnitField(dataColumn[headersObj[item.name]], item));\n}\n","import { DataFormat } from './enums';\n\nexport default {\n    dataFormat: DataFormat.AUTO\n};\n","import { columnMajor } from '../utils';\n\n/**\n * Parses and converts data formatted in DSV array to a manageable internal format.\n *\n * @param {Array.<Array>} arr - A 2D array containing of the DSV data.\n * @param {Object} options - Option to control the behaviour of the parsing.\n * @param {boolean} [options.firstRowHeader=true] - Whether the first row of the dsv data is header or not.\n * @return {Array} Returns an array of headers and column major data.\n * @example\n *\n * // Sample input data:\n * const data = [\n *    [\"a\", \"b\", \"c\"],\n *    [1, 2, 3],\n *    [4, 5, 6],\n *    [7, 8, 9]\n * ];\n */\nfunction DSVArr (arr, options) {\n    const defaultOption = {\n        firstRowHeader: true,\n    };\n    options = Object.assign({}, defaultOption, options);\n\n    let header;\n    const columns = [];\n    const push = columnMajor(columns);\n\n    if (options.firstRowHeader) {\n        // If header present then mutate the array.\n        // Do in-place mutation to save space.\n        header = arr.splice(0, 1)[0];\n    } else {\n        header = [];\n    }\n\n    arr.forEach(field => push(...field));\n\n    return [header, columns];\n}\n\nexport default DSVArr;\n","var EOL = {},\n    EOF = {},\n    QUOTE = 34,\n    NEWLINE = 10,\n    RETURN = 13;\n\nfunction objectConverter(columns) {\n  return new Function(\"d\", \"return {\" + columns.map(function(name, i) {\n    return JSON.stringify(name) + \": d[\" + i + \"]\";\n  }).join(\",\") + \"}\");\n}\n\nfunction customConverter(columns, f) {\n  var object = objectConverter(columns);\n  return function(row, i) {\n    return f(object(row), i, columns);\n  };\n}\n\n// Compute unique columns in order of discovery.\nfunction inferColumns(rows) {\n  var columnSet = Object.create(null),\n      columns = [];\n\n  rows.forEach(function(row) {\n    for (var column in row) {\n      if (!(column in columnSet)) {\n        columns.push(columnSet[column] = column);\n      }\n    }\n  });\n\n  return columns;\n}\n\nexport default function(delimiter) {\n  var reFormat = new RegExp(\"[\\\"\" + delimiter + \"\\n\\r]\"),\n      DELIMITER = delimiter.charCodeAt(0);\n\n  function parse(text, f) {\n    var convert, columns, rows = parseRows(text, function(row, i) {\n      if (convert) return convert(row, i - 1);\n      columns = row, convert = f ? customConverter(row, f) : objectConverter(row);\n    });\n    rows.columns = columns || [];\n    return rows;\n  }\n\n  function parseRows(text, f) {\n    var rows = [], // output rows\n        N = text.length,\n        I = 0, // current character index\n        n = 0, // current line number\n        t, // current token\n        eof = N <= 0, // current token followed by EOF?\n        eol = false; // current token followed by EOL?\n\n    // Strip the trailing newline.\n    if (text.charCodeAt(N - 1) === NEWLINE) --N;\n    if (text.charCodeAt(N - 1) === RETURN) --N;\n\n    function token() {\n      if (eof) return EOF;\n      if (eol) return eol = false, EOL;\n\n      // Unescape quotes.\n      var i, j = I, c;\n      if (text.charCodeAt(j) === QUOTE) {\n        while (I++ < N && text.charCodeAt(I) !== QUOTE || text.charCodeAt(++I) === QUOTE);\n        if ((i = I) >= N) eof = true;\n        else if ((c = text.charCodeAt(I++)) === NEWLINE) eol = true;\n        else if (c === RETURN) { eol = true; if (text.charCodeAt(I) === NEWLINE) ++I; }\n        return text.slice(j + 1, i - 1).replace(/\"\"/g, \"\\\"\");\n      }\n\n      // Find next delimiter or newline.\n      while (I < N) {\n        if ((c = text.charCodeAt(i = I++)) === NEWLINE) eol = true;\n        else if (c === RETURN) { eol = true; if (text.charCodeAt(I) === NEWLINE) ++I; }\n        else if (c !== DELIMITER) continue;\n        return text.slice(j, i);\n      }\n\n      // Return last token before EOF.\n      return eof = true, text.slice(j, N);\n    }\n\n    while ((t = token()) !== EOF) {\n      var row = [];\n      while (t !== EOL && t !== EOF) row.push(t), t = token();\n      if (f && (row = f(row, n++)) == null) continue;\n      rows.push(row);\n    }\n\n    return rows;\n  }\n\n  function format(rows, columns) {\n    if (columns == null) columns = inferColumns(rows);\n    return [columns.map(formatValue).join(delimiter)].concat(rows.map(function(row) {\n      return columns.map(function(column) {\n        return formatValue(row[column]);\n      }).join(delimiter);\n    })).join(\"\\n\");\n  }\n\n  function formatRows(rows) {\n    return rows.map(formatRow).join(\"\\n\");\n  }\n\n  function formatRow(row) {\n    return row.map(formatValue).join(delimiter);\n  }\n\n  function formatValue(text) {\n    return text == null ? \"\"\n        : reFormat.test(text += \"\") ? \"\\\"\" + text.replace(/\"/g, \"\\\"\\\"\") + \"\\\"\"\n        : text;\n  }\n\n  return {\n    parse: parse,\n    parseRows: parseRows,\n    format: format,\n    formatRows: formatRows\n  };\n}\n","import dsv from \"./dsv\";\n\nvar csv = dsv(\",\");\n\nexport var csvParse = csv.parse;\nexport var csvParseRows = csv.parseRows;\nexport var csvFormat = csv.format;\nexport var csvFormatRows = csv.formatRows;\n","import dsv from \"./dsv\";\n\nvar tsv = dsv(\"\\t\");\n\nexport var tsvParse = tsv.parse;\nexport var tsvParseRows = tsv.parseRows;\nexport var tsvFormat = tsv.format;\nexport var tsvFormatRows = tsv.formatRows;\n","import { dsvFormat as d3Dsv } from 'd3-dsv';\nimport DSVArr from './dsv-arr';\n\n/**\n * Parses and converts data formatted in DSV string to a manageable internal format.\n *\n * @todo Support to be given for https://tools.ietf.org/html/rfc4180.\n * @todo Sample implementation https://github.com/knrz/CSV.js/.\n *\n * @param {string} str - The input DSV string.\n * @param {Object} options - Option to control the behaviour of the parsing.\n * @param {boolean} [options.firstRowHeader=true] - Whether the first row of the dsv string data is header or not.\n * @param {string} [options.fieldSeparator=\",\"] - The separator of two consecutive field.\n * @return {Array} Returns an array of headers and column major data.\n * @example\n *\n * // Sample input data:\n * const data = `\n * a,b,c\n * 1,2,3\n * 4,5,6\n * 7,8,9\n * `\n */\nfunction DSVStr (str, options) {\n    const defaultOption = {\n        firstRowHeader: true,\n        fieldSeparator: ','\n    };\n    options = Object.assign({}, defaultOption, options);\n\n    const dsv = d3Dsv(options.fieldSeparator);\n    return DSVArr(dsv.parseRows(str), options);\n}\n\nexport default DSVStr;\n","import { columnMajor } from '../utils';\n\n/**\n * Parses and converts data formatted in JSON to a manageable internal format.\n *\n * @param {Array.<Object>} arr - The input data formatted in JSON.\n * @return {Array.<Object>} Returns an array of headers and column major data.\n * @example\n *\n * // Sample input data:\n * const data = [\n *    {\n *      \"a\": 1,\n *      \"b\": 2,\n *      \"c\": 3\n *    },\n *    {\n *      \"a\": 4,\n *      \"b\": 5,\n *      \"c\": 6\n *    },\n *    {\n *      \"a\": 7,\n *      \"b\": 8,\n *      \"c\": 9\n *    }\n * ];\n */\nfunction FlatJSON (arr) {\n    const header = {};\n    let i = 0;\n    let insertionIndex;\n    const columns = [];\n    const push = columnMajor(columns);\n\n    arr.forEach((item) => {\n        const fields = [];\n        for (let key in item) {\n            if (key in header) {\n                insertionIndex = header[key];\n            } else {\n                header[key] = i++;\n                insertionIndex = i - 1;\n            }\n            fields[insertionIndex] = item[key];\n        }\n        push(...fields);\n    });\n\n    return [Object.keys(header), columns];\n}\n\nexport default FlatJSON;\n","import FlatJSON from './flat-json';\nimport DSVArr from './dsv-arr';\nimport DSVStr from './dsv-str';\nimport { detectDataFormat } from '../utils';\n\n/**\n * Parses the input data and detect the format automatically.\n *\n * @param {string|Array} data - The input data.\n * @param {Object} options - An optional config specific to data format.\n * @return {Array.<Object>} Returns an array of headers and column major data.\n */\nfunction Auto (data, options) {\n    const converters = { FlatJSON, DSVStr, DSVArr };\n    const dataFormat = detectDataFormat(data);\n\n    if (!dataFormat) {\n        throw new Error('Couldn\\'t detect the data format');\n    }\n\n    return converters[dataFormat](data, options);\n}\n\nexport default Auto;\n","import { FieldType, FilteringMode, DimensionSubtype, MeasureSubtype, DataFormat } from './enums';\nimport fieldStore from './field-store';\nimport Value from './value';\nimport {\n    rowDiffsetIterator\n} from './operator';\nimport { DM_DERIVATIVES, LOGICAL_OPERATORS } from './constants';\nimport { createFields, createUnitFieldFromPartial } from './field-creator';\nimport defaultConfig from './default-config';\nimport * as converter from './converter';\nimport { extend2, detectDataFormat } from './utils';\n\n/**\n * Prepares the selection data.\n */\nfunction prepareSelectionData (fields, i) {\n    const resp = {};\n    for (let field of fields) {\n        resp[field.name()] = new Value(field.partialField.data[i], field);\n    }\n    return resp;\n}\n\nexport function prepareJoinData (fields) {\n    const resp = {};\n    Object.keys(fields).forEach((key) => { resp[key] = new Value(fields[key], key); });\n    return resp;\n}\n\nexport const updateFields = ([rowDiffset, colIdentifier], partialFieldspace, fieldStoreName) => {\n    let collID = colIdentifier.length ? colIdentifier.split(',') : [];\n    let partialFieldMap = partialFieldspace.fieldsObj();\n    let newFields = collID.map(coll => createUnitFieldFromPartial(partialFieldMap[coll].partialField, rowDiffset));\n    return fieldStore.createNamespace(newFields, fieldStoreName);\n};\n\nexport const persistDerivation = (model, operation, config = {}, criteriaFn) => {\n    if (operation === DM_DERIVATIVES.COMPOSE) {\n        model._derivation.length = 0;\n        model._derivation.push(...criteriaFn);\n    } else {\n        model._derivation.push({\n            op: operation,\n            meta: config,\n            criteria: criteriaFn\n        });\n    }\n};\n\nexport const persistAncestorDerivation = (sourceDm, newDm) => {\n    newDm._ancestorDerivation.push(...sourceDm._ancestorDerivation, ...sourceDm._derivation);\n};\n\nexport const selectHelper = (rowDiffset, fields, selectFn, config, sourceDm) => {\n    const newRowDiffSet = [];\n    let lastInsertedValue = -1;\n    let { mode } = config;\n    let li;\n    let cachedStore = {};\n    let cloneProvider = () => sourceDm.detachedRoot();\n    const selectorHelperFn = index => selectFn(\n        prepareSelectionData(fields, index),\n        index,\n        cloneProvider,\n        cachedStore\n    );\n\n    let checker;\n    if (mode === FilteringMode.INVERSE) {\n        checker = index => !selectorHelperFn(index);\n    } else {\n        checker = index => selectorHelperFn(index);\n    }\n\n    rowDiffsetIterator(rowDiffset, (i) => {\n        if (checker(i)) {\n            if (lastInsertedValue !== -1 && i === (lastInsertedValue + 1)) {\n                li = newRowDiffSet.length - 1;\n                newRowDiffSet[li] = `${newRowDiffSet[li].split('-')[0]}-${i}`;\n            } else {\n                newRowDiffSet.push(`${i}`);\n            }\n            lastInsertedValue = i;\n        }\n    });\n    return newRowDiffSet.join(',');\n};\n\nexport const cloneWithAllFields = (model) => {\n    const clonedDm = model.clone(false);\n    const partialFieldspace = model.getPartialFieldspace();\n    clonedDm._colIdentifier = partialFieldspace.fields.map(f => f.name()).join(',');\n\n    // flush out cached namespace values on addition of new fields\n    partialFieldspace._cachedFieldsObj = null;\n    partialFieldspace._cachedDimension = null;\n    partialFieldspace._cachedMeasure = null;\n    clonedDm.__calculateFieldspace().calculateFieldsConfig();\n\n    return clonedDm;\n};\n\nexport const filterPropagationModel = (model, propModels, config = {}) => {\n    const operation = config.operation || LOGICAL_OPERATORS.AND;\n    const filterByMeasure = config.filterByMeasure || false;\n    let fns = [];\n    if (!propModels.length) {\n        fns = [() => false];\n    } else {\n        fns = propModels.map(propModel => ((dataModel) => {\n            const dataObj = dataModel.getData();\n            const schema = dataObj.schema;\n            const fieldsConfig = dataModel.getFieldsConfig();\n            const fieldsSpace = dataModel.getFieldspace().fieldsObj();\n            const data = dataObj.data;\n            const domain = Object.values(fieldsConfig).reduce((acc, v) => {\n                acc[v.def.name] = fieldsSpace[v.def.name].domain();\n                return acc;\n            }, {});\n\n            return (fields) => {\n                const include = !data.length ? false : data.some(row => schema.every((propField) => {\n                    if (!(propField.name in fields)) {\n                        return true;\n                    }\n                    const value = fields[propField.name].valueOf();\n                    if (filterByMeasure && propField.type === FieldType.MEASURE) {\n                        return value >= domain[propField.name][0] && value <= domain[propField.name][1];\n                    }\n\n                    if (propField.type !== FieldType.DIMENSION) {\n                        return true;\n                    }\n                    const idx = fieldsConfig[propField.name].index;\n                    return row[idx] === fields[propField.name].valueOf();\n                }));\n                return include;\n            };\n        })(propModel));\n    }\n\n    let filteredModel;\n    if (operation === LOGICAL_OPERATORS.AND) {\n        filteredModel = cloneWithAllFields(model).select(fields => fns.every(fn => fn(fields)), {\n            saveChild: false,\n            mode: FilteringMode.ALL\n        });\n    } else {\n        filteredModel = cloneWithAllFields(model).select(fields => fns.some(fn => fn(fields)), {\n            mode: FilteringMode.ALL,\n            saveChild: false\n        });\n    }\n\n    return filteredModel;\n};\n\nexport const cloneWithSelect = (sourceDm, selectFn, selectConfig, cloneConfig) => {\n    const cloned = sourceDm.clone(cloneConfig.saveChild);\n    const rowDiffset = selectHelper(\n        cloned._rowDiffset,\n        cloned.getPartialFieldspace().fields,\n        selectFn,\n        selectConfig,\n        sourceDm\n    );\n    cloned._rowDiffset = rowDiffset;\n    cloned.__calculateFieldspace().calculateFieldsConfig();\n\n    persistDerivation(cloned, DM_DERIVATIVES.SELECT, { config: selectConfig }, selectFn);\n    persistAncestorDerivation(sourceDm, cloned);\n\n    return cloned;\n};\n\nexport const cloneWithProject = (sourceDm, projField, config, allFields) => {\n    const cloned = sourceDm.clone(config.saveChild);\n    let projectionSet = projField;\n    if (config.mode === FilteringMode.INVERSE) {\n        projectionSet = allFields.filter(fieldName => projField.indexOf(fieldName) === -1);\n    }\n    // cloned._colIdentifier = sourceDm._colIdentifier.split(',')\n    //                         .filter(coll => projectionSet.indexOf(coll) !== -1).join();\n    cloned._colIdentifier = projectionSet.join(',');\n    cloned.__calculateFieldspace().calculateFieldsConfig();\n\n    persistDerivation(\n        cloned,\n        DM_DERIVATIVES.PROJECT,\n        { projField, config, actualProjField: projectionSet },\n        null\n    );\n    persistAncestorDerivation(sourceDm, cloned);\n\n    return cloned;\n};\n\nexport const sanitizeUnitSchema = (unitSchema) => {\n    // Do deep clone of the unit schema as the user might change it later.\n    unitSchema = extend2({}, unitSchema);\n    if (!unitSchema.type) {\n        unitSchema.type = FieldType.DIMENSION;\n    }\n\n    if (!unitSchema.subtype) {\n        switch (unitSchema.type) {\n        case FieldType.MEASURE:\n            unitSchema.subtype = MeasureSubtype.CONTINUOUS;\n            break;\n        default:\n        case FieldType.DIMENSION:\n            unitSchema.subtype = DimensionSubtype.CATEGORICAL;\n            break;\n        }\n    }\n\n    return unitSchema;\n};\n\nexport const sanitizeSchema = schema => schema.map(unitSchema => sanitizeUnitSchema(unitSchema));\n\nexport const updateData = (relation, data, schema, options) => {\n    schema = sanitizeSchema(schema);\n    options = Object.assign(Object.assign({}, defaultConfig), options);\n    const converterFn = converter[options.dataFormat];\n\n    if (!(converterFn && typeof converterFn === 'function')) {\n        throw new Error(`No converter function found for ${options.dataFormat} format`);\n    }\n\n    const [header, formattedData] = converterFn(data, options);\n    const fieldArr = createFields(formattedData, schema, header);\n\n    // This will create a new fieldStore with the fields\n    const nameSpace = fieldStore.createNamespace(fieldArr, options.name);\n    relation._partialFieldspace = nameSpace;\n    // If data is provided create the default colIdentifier and rowDiffset\n    relation._rowDiffset = formattedData.length && formattedData[0].length ? `0-${formattedData[0].length - 1}` : '';\n    relation._colIdentifier = (schema.map(_ => _.name)).join();\n    relation._dataFormat = options.dataFormat === DataFormat.AUTO ? detectDataFormat(data) : options.dataFormat;\n    return relation;\n};\n\nexport const fieldInSchema = (schema, field) => {\n    let i = 0;\n\n    for (; i < schema.length; ++i) {\n        if (field === schema[i].name) {\n            return {\n                type: schema[i].subtype || schema[i].type,\n                index: i\n            };\n        }\n    }\n    return null;\n};\n\n\nexport const getDerivationArguments = (derivation) => {\n    let params = [];\n    let operation;\n    operation = derivation.op;\n    switch (operation) {\n    case DM_DERIVATIVES.SELECT:\n        params = [derivation.criteria];\n        break;\n    case DM_DERIVATIVES.PROJECT:\n        params = [derivation.meta.actualProjField];\n        break;\n    case DM_DERIVATIVES.GROUPBY:\n        operation = 'groupBy';\n        params = [derivation.meta.groupByString.split(','), derivation.criteria];\n        break;\n    default:\n        operation = null;\n    }\n\n    return {\n        operation,\n        params\n    };\n};\n\nconst applyExistingOperationOnModel = (propModel, dataModel) => {\n    const derivations = dataModel.getDerivations();\n    let selectionModel = propModel[0];\n    let rejectionModel = propModel[1];\n\n    derivations.forEach((derivation) => {\n        if (!derivation) {\n            return;\n        }\n\n        const { operation, params } = getDerivationArguments(derivation);\n        if (operation) {\n            selectionModel = selectionModel[operation](...params, {\n                saveChild: false\n            });\n            rejectionModel = rejectionModel[operation](...params, {\n                saveChild: false\n            });\n        }\n    });\n\n    return [selectionModel, rejectionModel];\n};\n\nconst getFilteredModel = (propModel, path) => {\n    for (let i = 0, len = path.length; i < len; i++) {\n        const model = path[i];\n        propModel = applyExistingOperationOnModel(propModel, model);\n    }\n    return propModel;\n};\n\nconst propagateIdentifiers = (dataModel, propModel, config = {}, propModelInf = {}) => {\n    const nonTraversingModel = propModelInf.nonTraversingModel;\n    const excludeModels = propModelInf.excludeModels || [];\n\n    if (dataModel === nonTraversingModel) {\n        return;\n    }\n\n    const propagate = excludeModels.length ? excludeModels.indexOf(dataModel) === -1 : true;\n\n    propagate && dataModel.handlePropagation(propModel, config);\n\n    const children = dataModel._children;\n    children.forEach((child) => {\n        let [selectionModel, rejectionModel] = applyExistingOperationOnModel(propModel, child);\n        propagateIdentifiers(child, [selectionModel, rejectionModel], config, propModelInf);\n    });\n};\n\nexport const getRootGroupByModel = (model) => {\n    while (model._parent && model._derivation.find(d => d.op !== DM_DERIVATIVES.GROUPBY)) {\n        model = model._parent;\n    }\n    return model;\n};\n\nexport const getRootDataModel = (model) => {\n    while (model._parent) {\n        model = model._parent;\n    }\n    return model;\n};\n\nexport const getPathToRootModel = (model, path = []) => {\n    while (model._parent) {\n        path.push(model);\n        model = model._parent;\n    }\n    return path;\n};\n\nexport const propagateToAllDataModels = (identifiers, rootModels, propagationInf, config) => {\n    let criteria;\n    let propModel;\n    const { propagationNameSpace, propagateToSource } = propagationInf;\n    const propagationSourceId = propagationInf.sourceId;\n    const propagateInterpolatedValues = config.propagateInterpolatedValues;\n    const filterFn = (entry) => {\n        const filter = config.filterFn || (() => true);\n        return filter(entry, config);\n    };\n\n    let criterias = [];\n\n    if (identifiers === null && config.persistent !== true) {\n        criterias = [{\n            criteria: []\n        }];\n    } else {\n        let actionCriterias = Object.values(propagationNameSpace.mutableActions);\n        if (propagateToSource !== false) {\n            actionCriterias = actionCriterias.filter(d => d.config.sourceId !== propagationSourceId);\n        }\n\n        const filteredCriteria = actionCriterias.filter(filterFn).map(action => action.config.criteria);\n\n        const excludeModels = [];\n\n        if (propagateToSource !== false) {\n            const sourceActionCriterias = Object.values(propagationNameSpace.mutableActions);\n\n            sourceActionCriterias.forEach((actionInf) => {\n                const actionConf = actionInf.config;\n                if (actionConf.applyOnSource === false && actionConf.action === config.action &&\n                        actionConf.sourceId !== propagationSourceId) {\n                    excludeModels.push(actionInf.model);\n                    criteria = sourceActionCriterias.filter(d => d !== actionInf).map(d => d.config.criteria);\n                    criteria.length && criterias.push({\n                        criteria,\n                        models: actionInf.model,\n                        path: getPathToRootModel(actionInf.model)\n                    });\n                }\n            });\n        }\n\n\n        criteria = [].concat(...[...filteredCriteria, identifiers]).filter(d => d !== null);\n        criterias.push({\n            criteria,\n            excludeModels: [...excludeModels, ...config.excludeModels || []]\n        });\n    }\n\n    const rootModel = rootModels.model;\n\n    const propConfig = Object.assign({\n        sourceIdentifiers: identifiers,\n        propagationSourceId\n    }, config);\n\n    const rootGroupByModel = rootModels.groupByModel;\n    if (propagateInterpolatedValues && rootGroupByModel) {\n        propModel = filterPropagationModel(rootGroupByModel, criteria, {\n            filterByMeasure: propagateInterpolatedValues\n        });\n        propagateIdentifiers(rootGroupByModel, propModel, propConfig);\n    }\n\n    criterias.forEach((inf) => {\n        const propagationModel = filterPropagationModel(rootModel, inf.criteria);\n        const path = inf.path;\n\n        if (path) {\n            const filteredModel = getFilteredModel(propagationModel, path.reverse());\n            inf.models.handlePropagation(filteredModel, propConfig);\n        } else {\n            propagateIdentifiers(rootModel, propagationModel, propConfig, {\n                excludeModels: inf.excludeModels,\n                nonTraversingModel: propagateInterpolatedValues && rootGroupByModel\n            });\n        }\n    });\n};\n\nexport const propagateImmutableActions = (propagationNameSpace, rootModels, propagationInf) => {\n    const immutableActions = propagationNameSpace.immutableActions;\n\n    for (const action in immutableActions) {\n        const actionInf = immutableActions[action];\n        const actionConf = actionInf.config;\n        const propagationSourceId = propagationInf.config.sourceId;\n        const filterImmutableAction = propagationInf.propConfig.filterImmutableAction ?\n            propagationInf.propConfig.filterImmutableAction(actionConf, propagationInf.config) : true;\n        if (actionConf.sourceId !== propagationSourceId && filterImmutableAction) {\n            const criteriaModel = actionConf.criteria;\n            propagateToAllDataModels(criteriaModel, rootModels, {\n                propagationNameSpace,\n                propagateToSource: false,\n                sourceId: propagationSourceId\n            }, actionConf);\n        }\n    }\n};\n\nexport const addToPropNamespace = (propagationNameSpace, config = {}, model) => {\n    let sourceNamespace;\n    const isMutableAction = config.isMutableAction;\n    const criteria = config.criteria;\n    const key = `${config.action}-${config.sourceId}`;\n\n    if (isMutableAction) {\n        sourceNamespace = propagationNameSpace.mutableActions;\n    } else {\n        sourceNamespace = propagationNameSpace.immutableActions;\n    }\n\n    if (criteria === null) {\n        delete sourceNamespace[key];\n    } else {\n        sourceNamespace[key] = {\n            model,\n            config\n        };\n    }\n\n    return this;\n};\n","import { FilteringMode } from './enums';\nimport { getUniqueId } from './utils';\nimport { updateFields, cloneWithSelect, cloneWithProject, updateData } from './helper';\nimport { crossProduct, difference, naturalJoinFilter, union } from './operator';\n\n/**\n * Relation provides the definitions of basic operators of relational algebra like *selection*, *projection*, *union*,\n * *difference* etc.\n *\n * It is extended by {@link DataModel} to inherit the functionalities of relational algebra concept.\n *\n * @class\n * @public\n * @module Relation\n * @namespace DataModel\n */\nclass Relation {\n\n    /**\n     * Creates a new Relation instance by providing underlying data and schema.\n     *\n     * @private\n     *\n     * @param {Object | string | Relation} data - The input tabular data in dsv or json format or\n     * an existing Relation instance object.\n     * @param {Array} schema - An array of data schema.\n     * @param {Object} [options] - The optional options.\n     */\n    constructor (...params) {\n        let source;\n\n        this._parent = null;\n        this._derivation = [];\n        this._ancestorDerivation = [];\n        this._children = [];\n\n        if (params.length === 1 && ((source = params[0]) instanceof Relation)) {\n            // parent datamodel was passed as part of source\n            this._colIdentifier = source._colIdentifier;\n            this._rowDiffset = source._rowDiffset;\n            this._dataFormat = source._dataFormat;\n            this._parent = source;\n            this._partialFieldspace = this._parent._partialFieldspace;\n            this._fieldStoreName = getUniqueId();\n            this.__calculateFieldspace().calculateFieldsConfig();\n        } else {\n            updateData(this, ...params);\n            this._fieldStoreName = this._partialFieldspace.name;\n            this.__calculateFieldspace().calculateFieldsConfig();\n            this._propagationNameSpace = {\n                mutableActions: {},\n                immutableActions: {}\n            };\n        }\n    }\n\n    /**\n     * Retrieves the {@link Schema | schema} details for every {@link Field | field} as an array.\n     *\n     * @public\n     *\n     * @return {Array.<Schema>} Array of fields schema.\n     *      ```\n     *      [\n     *          { name: 'Name', type: 'dimension' },\n     *          { name: 'Miles_per_Gallon', type: 'measure', numberFormat: (val) => `${val} miles / gallon` },\n     *          { name: 'Cylinder', type: 'dimension' },\n     *          { name: 'Displacement', type: 'measure', defAggFn: 'max' },\n     *          { name: 'HorsePower', type: 'measure', defAggFn: 'max' },\n     *          { name: 'Weight_in_lbs', type: 'measure', defAggFn: 'avg',  },\n     *          { name: 'Acceleration', type: 'measure', defAggFn: 'avg' },\n     *          { name: 'Year', type: 'dimension', subtype: 'datetime', format: '%Y' },\n     *          { name: 'Origin' }\n     *      ]\n     *      ```\n     */\n    getSchema () {\n        return this.getFieldspace().fields.map(d => d.schema());\n    }\n\n    /**\n     * Returns the name of the {@link DataModel} instance. If no name was specified during {@link DataModel}\n     * initialization, then it returns a auto-generated name.\n     *\n     * @public\n     *\n     * @return {string} Name of the DataModel instance.\n     */\n    getName() {\n        return this._fieldStoreName;\n    }\n\n    getFieldspace () {\n        return this._fieldspace;\n    }\n\n    __calculateFieldspace () {\n        this._fieldspace = updateFields([this._rowDiffset, this._colIdentifier],\n             this.getPartialFieldspace(), this._fieldStoreName);\n        return this;\n    }\n\n    getPartialFieldspace () {\n        return this._partialFieldspace;\n    }\n\n    /**\n     * Performs {@link link_of_cross_product | cross-product} between two {@link DataModel} instances and returns a\n     * new {@link DataModel} instance containing the results. This operation is also called theta join.\n     *\n     * Cross product takes two set and create one set where each value of one set is paired with each value of another\n     * set.\n     *\n     * This method takes an optional predicate which filters the generated result rows. If the predicate returns true\n     * the combined row is included in the resulatant table.\n     *\n     * @example\n     *  let originDM = dm.project(['Origin','Origin_Formal_Name']);\n     *  let carsDM = dm.project(['Name','Miles_per_Gallon','Origin'])\n     *\n     *  console.log(carsDM.join(originDM)));\n     *\n     *  console.log(carsDM.join(originDM,\n     *      obj => obj.[originDM.getName()].Origin === obj.[carsDM.getName()].Origin));\n     *\n     * @text\n     * This is chained version of `join` operator. `join` can also be used as\n     * {@link link_to_join_op | functional operator}.\n     *\n     * @public\n     *\n     * @param {DataModel} joinWith - The DataModel to be joined with the current instance DataModel.\n     * @param {SelectionPredicate} filterFn - The predicate function that will filter the result of the crossProduct.\n     *\n     * @return {DataModel} New DataModel instance created after joining.\n     */\n    join (joinWith, filterFn) {\n        return crossProduct(this, joinWith, filterFn);\n    }\n\n    /**\n     * {@link natural_join | Natural join} is a special kind of cross-product join where filtering of rows are performed\n     * internally by resolving common fields are from both table and the rows with common value are included.\n     *\n     * @example\n     *  let originDM = dm.project(['Origin','Origin_Formal_Name']);\n     *  let carsDM = dm.project(['Name','Miles_per_Gallon','Origin'])\n     *\n     *  console.log(carsDM.naturalJoin(originDM));\n     *\n     * @text\n     * This is chained version of `naturalJoin` operator. `naturalJoin` can also be used as\n     * {@link link_to_join_op | functional operator}.\n     *\n     * @public\n     *\n     * @param {DataModel} joinWith - The DataModel with which the current instance of DataModel on which the method is\n     *      called will be joined.\n     * @return {DataModel} New DataModel instance created after joining.\n     */\n    naturalJoin (joinWith) {\n        return crossProduct(this, joinWith, naturalJoinFilter(this, joinWith), true);\n    }\n\n    /**\n     * {@link link_to_union | Union} operation can be termed as vertical stacking of all rows from both the DataModel\n     * instances, provided that both of the {@link DataModel} instances should have same column names.\n     *\n     * @example\n     * console.log(EuropeanMakerDM.union(USAMakerDM));\n     *\n     * @text\n     * This is chained version of `naturalJoin` operator. `naturalJoin` can also be used as\n     * {@link link_to_join_op | functional operator}.\n     *\n     * @public\n     *\n     * @param {DataModel} unionWith - DataModel instance for which union has to be applied with the instance on which\n     *      the method is called\n     *\n     * @return {DataModel} New DataModel instance with the result of the operation\n     */\n    union (unionWith) {\n        return union(this, unionWith);\n    }\n\n    /**\n     * {@link link_to_difference | Difference } operation only include rows which are present in the datamodel on which\n     * it was called but not on the one passed as argument.\n     *\n     * @example\n     * console.log(highPowerDM.difference(highExpensiveDM));\n     *\n     * @text\n     * This is chained version of `naturalJoin` operator. `naturalJoin` can also be used as\n     * {@link link_to_join_op | functional operator}.\n     *\n     * @public\n     *\n     * @param {DataModel} differenceWith - DataModel instance for which difference has to be applied with the instance\n     *      on which the method is called\n     * @return {DataModel} New DataModel instance with the result of the operation\n     */\n    difference (differenceWith) {\n        return difference(this, differenceWith);\n    }\n\n    /**\n     * {@link link_to_selection | Selection} is a row filtering operation. It expects a predicate and an optional mode\n     * which control which all rows should be included in the resultant DataModel instance.\n     *\n     * {@link SelectionPredicate} is a function which returns a boolean value. For selection operation the selection\n     * function is called for each row of DataModel instance with the current row passed as argument.\n     *\n     * After executing {@link SelectionPredicate} the rows are labeled as either an entry of selection set or an entry\n     * of rejection set.\n     *\n     * {@link FilteringMode} operates on the selection and rejection set to determine which one would reflect in the\n     * resultant datamodel.\n     *\n     * @warning\n     * Selection and rejection set is only a logical idea for concept explanation purpose.\n     *\n     * @example\n     *  // with selection mode NORMAL:\n     *  const normDt = dt.select(fields => fields.Origin.value === \"USA\")\n     *  console.log(normDt));\n     *\n     * // with selection mode INVERSE:\n     * const inverDt = dt.select(fields => fields.Origin.value === \"USA\", { mode: DataModel.FilteringMode.INVERSE })\n     * console.log(inverDt);\n     *\n     * // with selection mode ALL:\n     * const dtArr = dt.select(fields => fields.Origin.value === \"USA\", { mode: DataModel.FilteringMode.ALL })\n     * // print the selected parts\n     * console.log(dtArr[0]);\n     * // print the inverted parts\n     * console.log(dtArr[1]);\n     *\n     * @text\n     * This is chained version of `select` operator. `select` can also be used as\n     * {@link link_to_join_op | functional operator}.\n     *\n     * @public\n     *\n     * @param {Function} selectFn - The predicate function which is called for each row with the current row.\n     * ```\n     *  function (row, i, cloneProvider, store)  { ... }\n     * ```\n     * @param {Object} config - The configuration object to control the inclusion exclusion of a row in resultant\n     * DataModel instance.\n     * @param {FilteringMode} [config.mode=FilteringMode.NORMAL] - The mode of the selection.\n     * @return {DataModel} Returns the new DataModel instance(s) after operation.\n     */\n    select (selectFn, config) {\n        const defConfig = {\n            mode: FilteringMode.NORMAL,\n            saveChild: true\n        };\n        config = Object.assign({}, defConfig, config);\n\n        const cloneConfig = { saveChild: config.saveChild };\n        let oDm;\n\n        if (config.mode === FilteringMode.ALL) {\n            const selectDm = cloneWithSelect(\n                this,\n                selectFn,\n                { mode: FilteringMode.NORMAL },\n                cloneConfig\n            );\n            const rejectDm = cloneWithSelect(\n                this,\n                selectFn,\n                { mode: FilteringMode.INVERSE },\n                cloneConfig\n            );\n            oDm = [selectDm, rejectDm];\n        } else {\n            oDm = cloneWithSelect(\n                this,\n                selectFn,\n                config,\n                cloneConfig\n            );\n        }\n\n        return oDm;\n    }\n\n    /**\n     * Retrieves a boolean value if the current {@link DataModel} instance has data.\n     *\n     * @example\n     * const schema = [\n     *    { name: 'CarName', type: 'dimension' },\n     *    { name: 'HorsePower', type: 'measure' },\n     *    { name: \"Origin\", type: 'dimension' }\n     * ];\n     * const data = [];\n     *\n     * const dt = new DataModel(data, schema);\n     * console.log(dt.isEmpty());\n     *\n     * @public\n     *\n     * @return {Boolean} True if the datamodel has no data, otherwise false.\n     */\n    isEmpty () {\n        return !this._rowDiffset.length || !this._colIdentifier.length;\n    }\n\n    /**\n     * Creates a clone from the current DataModel instance with child parent relationship.\n     *\n     * @private\n     * @param {boolean} [saveChild=true] - Whether the cloned instance would be recorded in the parent instance.\n     * @return {DataModel} - Returns the newly cloned DataModel instance.\n     */\n    clone (saveChild = true) {\n        const clonedDm = new this.constructor(this);\n        if (saveChild) {\n            clonedDm.setParent(this);\n        } else {\n            clonedDm.setParent(null);\n        }\n        return clonedDm;\n    }\n\n    /**\n     * {@link Projection} is filter column (field) operation. It expects list of fields' name and either include those\n     * or exclude those based on {@link FilteringMode} on the resultant variable.\n     *\n     * Projection expects array of fields name based on which it creates the selection and rejection set. All the field\n     * whose name is present in array goes in selection set and rest of the fields goes in rejection set.\n     *\n     * {@link FilteringMode} operates on the selection and rejection set to determine which one would reflect in the\n     * resulatant datamodel.\n     *\n     * @warning\n     * Selection and rejection set is only a logical idea for concept explanation purpose.\n     *\n     * @example\n     *  const dm = new DataModel(data, schema);\n     *\n     *  // with projection mode NORMAL:\n     *  const normDt = dt.project([\"Name\", \"HorsePower\"]);\n     *  console.log(normDt.getData());\n     *\n     *  // with projection mode INVERSE:\n     *  const inverDt = dt.project([\"Name\", \"HorsePower\"], { mode: DataModel.FilteringMode.INVERSE })\n     *  console.log(inverDt.getData());\n     *\n     *  // with selection mode ALL:\n     *  const dtArr = dt.project([\"Name\", \"HorsePower\"], { mode: DataModel.FilteringMode.ALL })\n     *  // print the normal parts\n     *  console.log(dtArr[0].getData());\n     *  // print the inverted parts\n     *  console.log(dtArr[1].getData());\n     *\n     * @text\n     * This is chained version of `select` operator. `select` can also be used as\n     * {@link link_to_join_op | functional operator}.\n     *\n     * @public\n     *\n     * @param {Array.<string | Regexp>} projField - An array of column names in string or regular expression.\n     * @param {Object} [config] - An optional config to control the creation of new DataModel\n     * @param {FilteringMode} [config.mode=FilteringMode.NORMAL] - Mode of the projection\n     *\n     * @return {DataModel} Returns the new DataModel instance after operation.\n     */\n    project (projField, config) {\n        const defConfig = {\n            mode: FilteringMode.NORMAL,\n            saveChild: true\n        };\n        config = Object.assign({}, defConfig, config);\n        const fieldConfig = this.getFieldsConfig();\n        const allFields = Object.keys(fieldConfig);\n        const { mode } = config;\n\n        let normalizedProjField = projField.reduce((acc, field) => {\n            if (field.constructor.name === 'RegExp') {\n                acc.push(...allFields.filter(fieldName => fieldName.search(field) !== -1));\n            } else if (field in fieldConfig) {\n                acc.push(field);\n            }\n            return acc;\n        }, []);\n\n        normalizedProjField = Array.from(new Set(normalizedProjField)).map(field => field.trim());\n        let dataModel;\n\n        if (mode === FilteringMode.ALL) {\n            let projectionClone = cloneWithProject(this, normalizedProjField, {\n                mode: FilteringMode.NORMAL,\n                saveChild: config.saveChild\n            }, allFields);\n            let rejectionClone = cloneWithProject(this, normalizedProjField, {\n                mode: FilteringMode.INVERSE,\n                saveChild: config.saveChild\n            }, allFields);\n            dataModel = [projectionClone, rejectionClone];\n        } else {\n            let projectionClone = cloneWithProject(this, normalizedProjField, config, allFields);\n            dataModel = projectionClone;\n        }\n\n        return dataModel;\n    }\n\n    getFieldsConfig () {\n        return this._fieldConfig;\n    }\n\n    calculateFieldsConfig () {\n        this._fieldConfig = this._fieldspace.fields.reduce((acc, fieldDef, i) => {\n            acc[fieldDef.name()] = {\n                index: i,\n                def: { name: fieldDef.name(), type: fieldDef.type(), subtype: fieldDef.subtype() }\n            };\n            return acc;\n        }, {});\n        return this;\n    }\n\n\n    /**\n     * Frees up the resources associated with the current DataModel instance and breaks all the links instance has in\n     * the DAG.\n     *\n     * @public\n     */\n    dispose () {\n        this._parent && this._parent.removeChild(this);\n        this._parent = null;\n        this._children.forEach((child) => {\n            child._parent = null;\n        });\n        this._children = [];\n    }\n\n    /**\n     * Removes the specified child {@link DataModel} from the child list of the current {@link DataModel} instance.\n     *\n     * @example\n     * const schema = [\n     *    { name: 'Name', type: 'dimension' },\n     *    { name: 'HorsePower', type: 'measure' },\n     *    { name: \"Origin\", type: 'dimension' }\n     * ];\n     *\n     * const data = [\n     *    { Name: \"chevrolet chevelle malibu\", Horsepower: 130, Origin: \"USA\" },\n     *    { Name: \"citroen ds-21 pallas\", Horsepower: 115, Origin: \"Europe\" },\n     *    { Name: \"datsun pl510\", Horsepower: 88, Origin: \"Japan\" },\n     *    { Name: \"amc rebel sst\", Horsepower: 150, Origin: \"USA\"},\n     * ]\n     *\n     * const dt = new DataModel(data, schema);\n     *\n     * const dt2 = dt.select(fields => fields.Origin.value === \"USA\")\n     * dt.removeChild(dt2);\n     *\n     * @private\n     *\n     * @param {DataModel} child - Delegates the parent to remove this child.\n     */\n    removeChild (child) {\n        let idx = this._children.findIndex(sibling => sibling === child);\n        idx !== -1 ? this._children.splice(idx, 1) : true;\n    }\n\n    /**\n     * Sets the specified {@link DataModel} as a parent for the current {@link DataModel} instance.\n     *\n     * @param {DataModel} parent - The datamodel instance which will act as parent.\n     */\n    setParent (parent) {\n        this._parent && this._parent.removeChild(this);\n        this._parent = parent;\n        parent && parent._children.push(this);\n    }\n\n    /**\n     * Returns the parent {@link DataModel} instance.\n     *\n     * @example\n     * const schema = [\n     *    { name: 'Name', type: 'dimension' },\n     *    { name: 'HorsePower', type: 'measure' },\n     *    { name: \"Origin\", type: 'dimension' }\n     * ];\n     *\n     * const data = [\n     *    { Name: \"chevrolet chevelle malibu\", Horsepower: 130, Origin: \"USA\" },\n     *    { Name: \"citroen ds-21 pallas\", Horsepower: 115, Origin: \"Europe\" },\n     *    { Name: \"datsun pl510\", Horsepower: 88, Origin: \"Japan\" },\n     *    { Name: \"amc rebel sst\", Horsepower: 150, Origin: \"USA\"},\n     * ]\n     *\n     * const dt = new DataModel(data, schema);\n     *\n     * const dt2 = dt.select(fields => fields.Origin.value === \"USA\");\n     * const parentDm = dt2.getParent();\n     *\n     * @return {DataModel} Returns the parent DataModel instance.\n     */\n    getParent () {\n        return this._parent;\n    }\n\n    /**\n     * Returns the immediate child {@link DataModel} instances.\n     *\n     * @example\n     * const schema = [\n     *    { name: 'Name', type: 'dimension' },\n     *    { name: 'HorsePower', type: 'measure' },\n     *    { name: \"Origin\", type: 'dimension' }\n     * ];\n     *\n     * const data = [\n     *    { Name: \"chevrolet chevelle malibu\", Horsepower: 130, Origin: \"USA\" },\n     *    { Name: \"citroen ds-21 pallas\", Horsepower: 115, Origin: \"Europe\" },\n     *    { Name: \"datsun pl510\", Horsepower: 88, Origin: \"Japan\" },\n     *    { Name: \"amc rebel sst\", Horsepower: 150, Origin: \"USA\"},\n     * ]\n     *\n     * const dt = new DataModel(data, schema);\n     *\n     * const childDm1 = dt.select(fields => fields.Origin.value === \"USA\");\n     * const childDm2 = dt.select(fields => fields.Origin.value === \"Japan\");\n     * const childDm3 = dt.groupBy([\"Origin\"]);\n     *\n     * @return {DataModel[]} Returns the immediate child DataModel instances.\n     */\n    getChildren () {\n        return this._children;\n    }\n\n    /**\n     * Returns the in-between operation meta data while creating the current {@link DataModel} instance.\n     *\n     * @example\n     * const schema = [\n     *   { name: 'Name', type: 'dimension' },\n     *   { name: 'HorsePower', type: 'measure' },\n     *   { name: \"Origin\", type: 'dimension' }\n     * ];\n     *\n     * const data = [\n     *   { Name: \"chevrolet chevelle malibu\", Horsepower: 130, Origin: \"USA\" },\n     *   { Name: \"citroen ds-21 pallas\", Horsepower: 115, Origin: \"Europe\" },\n     *   { Name: \"datsun pl510\", Horsepower: 88, Origin: \"Japan\" },\n     *   { Name: \"amc rebel sst\", Horsepower: 150, Origin: \"USA\"},\n     * ]\n     *\n     * const dt = new DataModel(data, schema);\n     * const dt2 = dt.select(fields => fields.Origin.value === \"USA\");\n     * const dt3 = dt2.groupBy([\"Origin\"]);\n     * const derivations = dt3.getDerivations();\n     *\n     * @return {Any[]} Returns the derivation meta data.\n     */\n    getDerivations () {\n        return this._derivation;\n    }\n\n    /**\n     * Returns the in-between operation meta data happened from root {@link DataModel} to current instance.\n     *\n     * @example\n     * const schema = [\n     *   { name: 'Name', type: 'dimension' },\n     *   { name: 'HorsePower', type: 'measure' },\n     *   { name: \"Origin\", type: 'dimension' }\n     * ];\n     *\n     * const data = [\n     *   { Name: \"chevrolet chevelle malibu\", Horsepower: 130, Origin: \"USA\" },\n     *   { Name: \"citroen ds-21 pallas\", Horsepower: 115, Origin: \"Europe\" },\n     *   { Name: \"datsun pl510\", Horsepower: 88, Origin: \"Japan\" },\n     *   { Name: \"amc rebel sst\", Horsepower: 150, Origin: \"USA\"},\n     * ]\n     *\n     * const dt = new DataModel(data, schema);\n     * const dt2 = dt.select(fields => fields.Origin.value === \"USA\");\n     * const dt3 = dt2.groupBy([\"Origin\"]);\n     * const ancDerivations = dt3.getAncestorDerivations();\n     *\n     * @return {Any[]} Returns the previous derivation meta data.\n     */\n    getAncestorDerivations () {\n        return this._ancestorDerivation;\n    }\n}\n\nexport default Relation;\n","/* eslint-disable default-case */\n\nimport { FieldType, DimensionSubtype, DataFormat } from './enums';\nimport {\n    persistDerivation,\n    persistAncestorDerivation,\n    getRootGroupByModel,\n    propagateToAllDataModels,\n    getRootDataModel,\n    propagateImmutableActions,\n    addToPropNamespace,\n    sanitizeUnitSchema\n} from './helper';\nimport { DM_DERIVATIVES, PROPAGATION } from './constants';\nimport {\n    dataBuilder,\n    rowDiffsetIterator,\n    groupBy\n} from './operator';\nimport { createBinnedFieldData } from './operator/bucket-creator';\nimport Relation from './relation';\nimport reducerStore from './utils/reducer-store';\nimport { createFields } from './field-creator';\nimport InvalidAwareTypes from './invalid-aware-types';\n\n/**\n * DataModel is an in-browser representation of tabular data. It supports\n * {@link https://en.wikipedia.org/wiki/Relational_algebra | relational algebra} operators as well as generic data\n * processing opearators.\n * DataModel extends {@link Relation} class which defines all the relational algebra opreators. DataModel gives\n * definition of generic data processing operators which are not relational algebra complient.\n *\n * @public\n * @class\n * @extends Relation\n * @memberof Datamodel\n */\nclass DataModel extends Relation {\n    /**\n     * Creates a new DataModel instance by providing data and schema. Data could be in the form of\n     * - Flat JSON\n     * - DSV String\n     * - 2D Array\n     *\n     * By default DataModel finds suitable adapter to serialize the data. DataModel also expects a\n     * {@link Schema | schema} for identifying the variables present in data.\n     *\n     * @constructor\n     * @example\n     * const data = loadData('cars.csv');\n     * const schema = [\n     *      { name: 'Name', type: 'dimension' },\n     *      { name: 'Miles_per_Gallon', type: 'measure', unit : 'cm', scale: '1000', numberformat: val => `${val}G`},\n     *      { name: 'Cylinders', type: 'dimension' },\n     *      { name: 'Displacement', type: 'measure' },\n     *      { name: 'Horsepower', type: 'measure' },\n     *      { name: 'Weight_in_lbs', type: 'measure' },\n     *      { name: 'Acceleration', type: 'measure' },\n     *      { name: 'Year', type: 'dimension', subtype: 'datetime', format: '%Y' },\n     *      { name: 'Origin', type: 'dimension' }\n     * ];\n     * const dm = new DataModel(data, schema, { name: 'Cars' });\n     * table(dm);\n     *\n     * @public\n     *\n     * @param {Array.<Object> | string | Array.<Array>} data Input data in any of the mentioned formats\n     * @param {Array.<Schema>} schema Defination of the variables. Order of the variables in data and order of the\n     *      variables in schema has to be same.\n     * @param {object} [options] Optional arguments to specify more settings regarding the creation part\n     * @param {string} [options.name] Name of the datamodel instance. If no name is given an auto generated name is\n     *      assigned to the instance.\n     * @param {string} [options.fieldSeparator=','] specify field separator type if the data is of type dsv string.\n     */\n    constructor (...args) {\n        super(...args);\n\n        this._onPropagation = [];\n        this._sortingDetails = [];\n    }\n\n    /**\n     * Reducers are simple functions which reduces an array of numbers to a representative number of the set.\n     * Like an array of numbers `[10, 20, 5, 15]` can be reduced to `12.5` if average / mean reducer function is\n     * applied. All the measure fields in datamodel (variables in data) needs a reducer to handle aggregation.\n     *\n     * @public\n     *\n     * @return {ReducerStore} Singleton instance of {@link ReducerStore}.\n     */\n    static get Reducers () {\n        return reducerStore;\n    }\n\n    /**\n     * Configure null, undefined, invalid values in the source data\n     *\n     * @public\n     *\n     * @param {Object} [config] - Configuration to control how null, undefined and non-parsable values are\n     * represented in DataModel.\n     * @param {string} [config.undefined] - Define how an undefined value will be represented.\n     * @param {string} [config.null] - Define how a null value will be represented.\n     * @param {string} [config.invalid] - Define how a non-parsable value will be represented.\n     */\n    static configureInvalidAwareTypes (config) {\n        return InvalidAwareTypes.invalidAwareVals(config);\n    }\n\n    /**\n     * Retrieve the data attached to an instance in JSON format.\n     *\n     * @example\n     * // DataModel instance is already prepared and assigned to dm variable\n     *  const data = dm.getData({\n     *      order: 'column',\n     *      formatter: {\n     *          origin: (val) => val === 'European Union' ? 'EU' : val;\n     *      }\n     *  });\n     *  console.log(data);\n     *\n     * @public\n     *\n     * @param {Object} [options] Options to control how the raw data is to be returned.\n     * @param {string} [options.order='row'] Defines if data is retieved in row order or column order. Possible values\n     *      are `'rows'` and `'columns'`\n     * @param {Function} [options.formatter=null] Formats the output data. This expects an object, where the keys are\n     *      the name of the variable needs to be formatted. The formatter function is called for each row passing the\n     *      value of the cell for a particular row as arguments. The formatter is a function in the form of\n     *      `function (value, rowId, schema) => { ... }`\n     *      Know more about {@link Fomatter}.\n     *\n     * @return {Array} Returns a multidimensional array of the data with schema. The return format looks like\n     *      ```\n     *          {\n     *              data,\n     *              schema\n     *          }\n     *      ```\n     */\n    getData (options) {\n        const defOptions = {\n            order: 'row',\n            formatter: null,\n            withUid: false,\n            getAllFields: false,\n            sort: []\n        };\n        options = Object.assign({}, defOptions, options);\n        const fields = this.getPartialFieldspace().fields;\n\n        const dataGenerated = dataBuilder.call(\n            this,\n            this.getPartialFieldspace().fields,\n            this._rowDiffset,\n            options.getAllFields ? fields.map(d => d.name()).join() : this._colIdentifier,\n            options.sort,\n            {\n                columnWise: options.order === 'column',\n                addUid: !!options.withUid\n            }\n        );\n\n        if (!options.formatter) {\n            return dataGenerated;\n        }\n\n        const { formatter } = options;\n        const { data, schema, uids } = dataGenerated;\n        const fieldNames = schema.map((e => e.name));\n        const fmtFieldNames = Object.keys(formatter);\n        const fmtFieldIdx = fmtFieldNames.reduce((acc, next) => {\n            const idx = fieldNames.indexOf(next);\n            if (idx !== -1) {\n                acc.push([idx, formatter[next]]);\n            }\n            return acc;\n        }, []);\n\n        if (options.order === 'column') {\n            fmtFieldIdx.forEach((elem) => {\n                const fIdx = elem[0];\n                const fmtFn = elem[1];\n\n                data[fIdx].forEach((datum, datumIdx) => {\n                    data[fIdx][datumIdx] = fmtFn.call(\n                        undefined,\n                        datum,\n                        uids[datumIdx],\n                        schema[fIdx]\n                    );\n                });\n            });\n        } else {\n            data.forEach((datum, datumIdx) => {\n                fmtFieldIdx.forEach((elem) => {\n                    const fIdx = elem[0];\n                    const fmtFn = elem[1];\n\n                    datum[fIdx] = fmtFn.call(\n                        undefined,\n                        datum[fIdx],\n                        uids[datumIdx],\n                        schema[fIdx]\n                    );\n                });\n            });\n        }\n\n        return dataGenerated;\n    }\n\n    /**\n     * Groups the data using particular dimensions and by reducing measures. It expects a list of dimensions using which\n     * it projects the datamodel and perform aggregations to reduce the duplicate tuples. Refer this\n     * {@link link_to_one_example_with_group_by | document} to know the intuition behind groupBy.\n     *\n     * DataModel by default provides definition of few {@link reducer | Reducers}.\n     * {@link ReducerStore | User defined reducers} can also be registered.\n     *\n     * This is the chained implementation of `groupBy`.\n     * `groupBy` also supports {@link link_to_compose_groupBy | composability}\n     *\n     * @example\n     * const groupedDM = dm.groupBy(['Year'], { horsepower: 'max' } );\n     * console.log(groupedDm);\n     *\n     * @public\n     *\n     * @param {Array.<string>} fieldsArr - Array containing the name of dimensions\n     * @param {Object} [reducers={}] - A map whose key is the variable name and value is the name of the reducer. If its\n     *      not passed, or any variable is ommitted from the object, default aggregation function is used from the\n     *      schema of the variable.\n     *\n     * @return {DataModel} Returns a new DataModel instance after performing the groupby.\n     */\n    groupBy (fieldsArr, reducers = {}, config = { saveChild: true }) {\n        const groupByString = `${fieldsArr.join()}`;\n        let params = [this, fieldsArr, reducers];\n        const newDataModel = groupBy(...params);\n\n        persistDerivation(\n            newDataModel,\n            DM_DERIVATIVES.GROUPBY,\n            { fieldsArr, groupByString, defaultReducer: reducerStore.defaultReducer() },\n            reducers\n        );\n        persistAncestorDerivation(this, newDataModel);\n\n        if (config.saveChild) {\n            newDataModel.setParent(this);\n        } else {\n            newDataModel.setParent(null);\n        }\n\n        return newDataModel;\n    }\n\n    /**\n     * Performs sorting operation on the current {@link DataModel} instance according to the specified sorting details.\n     * Like every other operator it doesn't mutate the current DataModel instance on which it was called, instead\n     * returns a new DataModel instance containing the sorted data.\n     *\n     * DataModel support multi level sorting by listing the variables using which sorting needs to be performed and\n     * the type of sorting `ASC` or `DESC`.\n     *\n     * In the following example, data is sorted by `Origin` field in `DESC` order in first level followed by another\n     * level of sorting by `Acceleration` in `ASC` order.\n     *\n     * @example\n     * // here dm is the pre-declared DataModel instance containing the data of 'cars.json' file\n     * let sortedDm = dm.sort([\n     *    [\"Origin\", \"DESC\"]\n     *    [\"Acceleration\"] // Default value is ASC\n     * ]);\n     *\n     * console.log(dm.getData());\n     * console.log(sortedDm.getData());\n     *\n     * // Sort with a custom sorting function\n     * sortedDm = dm.sort([\n     *    [\"Origin\", \"DESC\"]\n     *    [\"Acceleration\", (a, b) => a - b] // Custom sorting function\n     * ]);\n     *\n     * console.log(dm.getData());\n     * console.log(sortedDm.getData());\n     *\n     * @text\n     * DataModel also provides another sorting mechanism out of the box where sort is applied to a variable using\n     * another variable which determines the order.\n     * Like the above DataModel contains three fields `Origin`, `Name` and `Acceleration`. Now, the data in this\n     * model can be sorted by `Origin` field according to the average value of all `Acceleration` for a\n     * particular `Origin` value.\n     *\n     * @example\n     * // here dm is the pre-declared DataModel instance containing the data of 'cars.json' file\n     * const sortedDm = dm.sort([\n     *     ['Origin', ['Acceleration', (a, b) => avg(...a.Acceleration) - avg(...b.Acceleration)]]\n     * ]);\n     *\n     * console.log(dm.getData());\n     * console.log(sortedDm.getData());\n     *\n     * @public\n     *\n     * @param {Array.<Array>} sortingDetails - Sorting details based on which the sorting will be performed.\n     * @return {DataModel} Returns a new instance of DataModel with sorted data.\n     */\n    sort (sortingDetails) {\n        const rawData = this.getData({\n            order: 'row',\n            sort: sortingDetails\n        });\n        const header = rawData.schema.map(field => field.name);\n        const dataInCSVArr = [header].concat(rawData.data);\n\n        const sortedDm = new this.constructor(dataInCSVArr, rawData.schema, { dataFormat: 'DSVArr' });\n        sortedDm._sortingDetails = sortingDetails;\n        return sortedDm;\n    }\n\n    /**\n     * Performs the serialization operation on the current {@link DataModel} instance according to the specified data\n     * type. When an {@link DataModel} instance is created, it de-serializes the input data into its internal format,\n     * and during its serialization process, it converts its internal data format to the specified data type and returns\n     * that data regardless what type of data is used during the {@link DataModel} initialization.\n     *\n     * @example\n     * // here dm is the pre-declared DataModel instance.\n     * const csvData = dm.serialize(DataModel.DataFormat.DSV_STR, { fieldSeparator: \",\" });\n     * console.log(csvData); // The csv formatted data.\n     *\n     * const jsonData = dm.serialize(DataModel.DataFormat.FLAT_JSON);\n     * console.log(jsonData); // The json data.\n     *\n     * @public\n     *\n     * @param {string} type - The data type name for serialization.\n     * @param {Object} options - The optional option object.\n     * @param {string} options.fieldSeparator - The field separator character for DSV data type.\n     * @return {Array|string} Returns the serialized data.\n     */\n    serialize (type, options) {\n        type = type || this._dataFormat;\n        options = Object.assign({}, { fieldSeparator: ',' }, options);\n\n        const fields = this.getFieldspace().fields;\n        const colData = fields.map(f => f.formattedData());\n        const rowsCount = colData[0].length;\n        let serializedData;\n        let rowIdx;\n        let colIdx;\n\n        if (type === DataFormat.FLAT_JSON) {\n            serializedData = [];\n            for (rowIdx = 0; rowIdx < rowsCount; rowIdx++) {\n                const row = {};\n                for (colIdx = 0; colIdx < fields.length; colIdx++) {\n                    row[fields[colIdx].name()] = colData[colIdx][rowIdx];\n                }\n                serializedData.push(row);\n            }\n        } else if (type === DataFormat.DSV_STR) {\n            serializedData = [fields.map(f => f.name()).join(options.fieldSeparator)];\n            for (rowIdx = 0; rowIdx < rowsCount; rowIdx++) {\n                const row = [];\n                for (colIdx = 0; colIdx < fields.length; colIdx++) {\n                    row.push(colData[colIdx][rowIdx]);\n                }\n                serializedData.push(row.join(options.fieldSeparator));\n            }\n            serializedData = serializedData.join('\\n');\n        } else if (type === DataFormat.DSV_ARR) {\n            serializedData = [fields.map(f => f.name())];\n            for (rowIdx = 0; rowIdx < rowsCount; rowIdx++) {\n                const row = [];\n                for (colIdx = 0; colIdx < fields.length; colIdx++) {\n                    row.push(colData[colIdx][rowIdx]);\n                }\n                serializedData.push(row);\n            }\n        } else {\n            throw new Error(`Data type ${type} is not supported`);\n        }\n\n        return serializedData;\n    }\n\n    addField (field) {\n        const fieldName = field.name();\n        this._colIdentifier += `,${fieldName}`;\n        const partialFieldspace = this._partialFieldspace;\n\n        if (!partialFieldspace.fieldsObj()[field.name()]) {\n            partialFieldspace.fields.push(field);\n        } else {\n            const fieldIndex = partialFieldspace.fields.findIndex(fieldinst => fieldinst.name() === fieldName);\n            fieldIndex >= 0 && (partialFieldspace.fields[fieldIndex] = field);\n        }\n\n        // flush out cached namespace values on addition of new fields\n        partialFieldspace._cachedFieldsObj = null;\n        partialFieldspace._cachedDimension = null;\n        partialFieldspace._cachedMeasure = null;\n\n        this.__calculateFieldspace().calculateFieldsConfig();\n        return this;\n    }\n\n    /**\n    * Creates a new variable calculated from existing variables. This method expects the definition of the newly created\n    * variable and a function which resolves the value of the new variable from existing variables.\n    *\n    * Can create a new measure based on existing variables:\n    * @example\n    *  // DataModel already prepared and assigned to dm variable;\n    *  const newDm = dataModel.calculateVariable({\n    *      name: 'powerToWeight',\n    *      type: 'measure'\n    *  }, ['horsepower', 'weight_in_lbs', (hp, weight) => hp / weight ]);\n    *\n    *\n    * Can create a new dimension based on existing variables:\n    * @example\n    *  // DataModel already prepared and assigned to dm variable;\n    *  const child = dataModel.calculateVariable(\n    *     {\n    *       name: 'Efficiency',\n    *       type: 'dimension'\n    *     }, ['horsepower', (hp) => {\n    *      if (hp < 80) { return 'low'; },\n    *      else if (hp < 120) { return 'moderate'; }\n    *      else { return 'high' }\n    *  }]);\n    *\n    * @public\n    *\n    * @param {Object} schema - The schema of newly defined variable.\n    * @param {Array.<string|function>} dependency - An array containing the dependency variable names and a resolver\n    * function as the last element.\n    * @param {Object} config - An optional config object.\n    * @param {boolean} [config.saveChild] - Whether the newly created DataModel will be a child.\n    * @param {boolean} [config.replaceVar] - Whether the newly created variable will replace the existing variable.\n    * @return {DataModel} Returns an instance of DataModel with the new field.\n    */\n    calculateVariable (schema, dependency, config) {\n        schema = sanitizeUnitSchema(schema);\n        config = Object.assign({}, { saveChild: true, replaceVar: false }, config);\n\n        const fieldsConfig = this.getFieldsConfig();\n        const depVars = dependency.slice(0, dependency.length - 1);\n        const retrieveFn = dependency[dependency.length - 1];\n\n        if (fieldsConfig[schema.name] && !config.replaceVar) {\n            throw new Error(`${schema.name} field already exists in datamodel`);\n        }\n\n        const depFieldIndices = depVars.map((field) => {\n            const fieldSpec = fieldsConfig[field];\n            if (!fieldSpec) {\n                // @todo dont throw error here, use warning in production mode\n                throw new Error(`${field} is not a valid column name.`);\n            }\n            return fieldSpec.index;\n        });\n\n        const clone = this.clone(config.saveChild);\n\n        const fs = clone.getFieldspace().fields;\n        const suppliedFields = depFieldIndices.map(idx => fs[idx]);\n\n        let cachedStore = {};\n        let cloneProvider = () => this.detachedRoot();\n\n        const computedValues = [];\n        rowDiffsetIterator(clone._rowDiffset, (i) => {\n            const fieldsData = suppliedFields.map(field => field.partialField.data[i]);\n            computedValues[i] = retrieveFn(...fieldsData, i, cloneProvider, cachedStore);\n        });\n        const [field] = createFields([computedValues], [schema], [schema.name]);\n        clone.addField(field);\n\n        persistDerivation(clone, DM_DERIVATIVES.CAL_VAR, { config: schema, fields: depVars }, retrieveFn);\n        persistAncestorDerivation(this, clone);\n\n        return clone;\n    }\n\n    /**\n     * Propagates changes across all the connected DataModel instances.\n     *\n     * @param {Array} identifiers - A list of identifiers that were interacted with.\n     * @param {Object} payload - The interaction specific details.\n     *\n     * @return {DataModel} DataModel instance.\n     */\n    propagate (identifiers, config = {}, addToNameSpace, propConfig = {}) {\n        const isMutableAction = config.isMutableAction;\n        const propagationSourceId = config.sourceId;\n        const payload = config.payload;\n        const rootModel = getRootDataModel(this);\n        const propagationNameSpace = rootModel._propagationNameSpace;\n        const rootGroupByModel = getRootGroupByModel(this);\n        const rootModels = {\n            groupByModel: rootGroupByModel,\n            model: rootModel\n        };\n\n        addToNameSpace && addToPropNamespace(propagationNameSpace, config, this);\n        propagateToAllDataModels(identifiers, rootModels, { propagationNameSpace, sourceId: propagationSourceId },\n            Object.assign({\n                payload\n            }, config));\n\n        if (isMutableAction) {\n            propagateImmutableActions(propagationNameSpace, rootModels, {\n                config,\n                propConfig\n            }, this);\n        }\n\n        return this;\n    }\n\n    /**\n     * Associates a callback with an event name.\n     *\n     * @param {string} eventName - The name of the event.\n     * @param {Function} callback - The callback to invoke.\n     * @return {DataModel} Returns this current DataModel instance itself.\n     */\n    on (eventName, callback) {\n        switch (eventName) {\n        case PROPAGATION:\n            this._onPropagation.push(callback);\n            break;\n        }\n        return this;\n    }\n\n    /**\n     * Unsubscribes the callbacks for the provided event name.\n     *\n     * @param {string} eventName - The name of the event to unsubscribe.\n     * @return {DataModel} Returns the current DataModel instance itself.\n     */\n    unsubscribe (eventName) {\n        switch (eventName) {\n        case PROPAGATION:\n            this._onPropagation = [];\n            break;\n\n        }\n        return this;\n    }\n\n    /**\n     * This method is used to invoke the method associated with propagation.\n     *\n     * @param {Object} payload The interaction payload.\n     * @param {DataModel} identifiers The propagated DataModel.\n     * @memberof DataModel\n     */\n    handlePropagation (propModel, payload) {\n        let propListeners = this._onPropagation;\n        propListeners.forEach(fn => fn.call(this, propModel, payload));\n    }\n\n    /**\n     * Performs the binning operation on a measure field based on the binning configuration. Binning means discretizing\n     * values of a measure. Binning configuration contains an array; subsequent values from the array marks the boundary\n     * of buckets in [inclusive, exclusive) range format. This operation does not mutate the subject measure field,\n     * instead, it creates a new field (variable) of type dimension and subtype binned.\n     *\n     * Binning can be configured by\n     * - providing custom bin configuration with non-uniform buckets,\n     * - providing bins count,\n     * - providing each bin size,\n     *\n     * When custom `buckets` are provided as part of binning configuration:\n     * @example\n     *  // DataModel already prepared and assigned to dm variable\n     *  const config = { name: 'binnedHP', buckets: [30, 80, 100, 110] }\n     *  const binnedDM = dataModel.bin('horsepower', config);\n     *\n     * @text\n     * When `binsCount` is defined as part of binning configuration:\n     * @example\n     *  // DataModel already prepared and assigned to dm variable\n     *  const config = { name: 'binnedHP', binsCount: 5, start: 0, end: 100 }\n     *  const binDM = dataModel.bin('horsepower', config);\n     *\n     * @text\n     * When `binSize` is defined as part of binning configuration:\n     * @example\n     *  // DataModel already prepared and assigned to dm variable\n     *  const config = { name: 'binnedHorsepower', binSize: 20, start: 5}\n     *  const binDM = dataModel.bin('horsepower', config);\n     *\n     * @public\n     *\n     * @param {string} measureFieldName - The name of the target measure field.\n     * @param {Object} config - The config object.\n     * @param {string} [config.name] - The name of the new field which will be created.\n     * @param {string} [config.buckets] - An array containing the bucket ranges.\n     * @param {string} [config.binSize] - The size of each bin. It is ignored when buckets are given.\n     * @param {string} [config.binsCount] - The total number of bins to generate. It is ignored when buckets are given.\n     * @param {string} [config.start] - The start value of the bucket ranges. It is ignored when buckets are given.\n     * @param {string} [config.end] - The end value of the bucket ranges. It is ignored when buckets are given.\n     * @return {DataModel} Returns a new {@link DataModel} instance with the new field.\n     */\n    bin (measureFieldName, config) {\n        const fieldsConfig = this.getFieldsConfig();\n\n        if (!fieldsConfig[measureFieldName]) {\n            throw new Error(`Field ${measureFieldName} doesn't exist`);\n        }\n\n        const binFieldName = config.name || `${measureFieldName}_binned`;\n\n        if (fieldsConfig[binFieldName]) {\n            throw new Error(`Field ${binFieldName} already exists`);\n        }\n\n        const measureField = this.getFieldspace().fieldsObj()[measureFieldName];\n        const { binnedData, bins } = createBinnedFieldData(measureField, this._rowDiffset, config);\n\n        const binField = createFields([binnedData], [\n            {\n                name: binFieldName,\n                type: FieldType.DIMENSION,\n                subtype: DimensionSubtype.BINNED,\n                bins\n            }], [binFieldName])[0];\n\n        const clone = this.clone(config.saveChild);\n        clone.addField(binField);\n\n        persistDerivation(clone, DM_DERIVATIVES.BIN, { measureFieldName, config, binFieldName }, null);\n        persistAncestorDerivation(this, clone);\n\n        return clone;\n    }\n\n    /**\n     * Creates a new {@link DataModel} instance with completely detached root from current {@link DataModel} instance,\n     * the new {@link DataModel} instance has no parent-children relationship with the current one, but has same data as\n     * the current one.\n     * This API is useful when a completely different {@link DataModel} but with same data as the current instance is\n     * needed.\n     *\n     * @example\n     *  const dm = new DataModel(data, schema);\n     *  const detachedDm = dm.detachedRoot();\n     *\n     * // has different namespace\n     * console.log(dm.getPartialFieldspace().name);\n     * console.log(detachedDm.getPartialFieldspace().name);\n     *\n     * // has same data\n     * console.log(dm.getData());\n     * console.log(detachedDm.getData());\n     *\n     * @public\n     *\n     * @return {DataModel} Returns a detached {@link DataModel} instance.\n     */\n    detachedRoot () {\n        const data = this.serialize(DataFormat.FLAT_JSON);\n        const schema = this.getSchema();\n\n        return new DataModel(data, schema);\n    }\n}\n\nexport default DataModel;\n","import { extend2 } from '../utils';\nimport { rowDiffsetIterator } from './row-diffset-iterator';\nimport DataModel from '../export';\nimport reducerStore from '../utils/reducer-store';\nimport { defaultReducerName } from './group-by-function';\nimport { FieldType } from '../enums';\n\n/**\n * This function sanitize the user given field and return a common Array structure field\n * list\n * @param  {DataModel} dataModel the dataModel operating on\n * @param  {Array} fieldArr  user input of field Array\n * @return {Array}           arrays of field name\n */\nfunction getFieldArr (dataModel, fieldArr) {\n    const retArr = [];\n    const fieldStore = dataModel.getFieldspace();\n    const dimensions = fieldStore.getDimension();\n\n    Object.entries(dimensions).forEach(([key]) => {\n        if (fieldArr && fieldArr.length) {\n            if (fieldArr.indexOf(key) !== -1) {\n                retArr.push(key);\n            }\n        } else {\n            retArr.push(key);\n        }\n    });\n\n    return retArr;\n}\n\n/**\n * This sanitize the reducer provide by the user and create a common type of object.\n * user can give function Also\n * @param  {DataModel} dataModel     dataModel to worked on\n * @param  {Object|function} [reducers={}] reducer provided by the users\n * @return {Object}               object containing reducer function for every measure\n */\nfunction getReducerObj (dataModel, reducers = {}) {\n    const retObj = {};\n    const fieldStore = dataModel.getFieldspace();\n    const measures = fieldStore.getMeasure();\n    const defReducer = reducerStore.defaultReducer();\n\n    Object.keys(measures).forEach((measureName) => {\n        if (typeof reducers[measureName] !== 'string') {\n            reducers[measureName] = measures[measureName].defAggFn();\n        }\n        const reducerFn = reducerStore.resolve(reducers[measureName]);\n        if (reducerFn) {\n            retObj[measureName] = reducerFn;\n        } else {\n            retObj[measureName] = defReducer;\n            reducers[measureName] = defaultReducerName;\n        }\n    });\n    return retObj;\n}\n\n/**\n * main function which perform the group-by operations which reduce the measures value is the\n * fields are common according to the reducer function provided\n * @param  {DataModel} dataModel the dataModel to worked\n * @param  {Array} fieldArr  fields according to which the groupby should be worked\n * @param  {Object|Function} reducers  reducers function\n * @param {DataModel} existingDataModel Existing datamodel instance\n * @return {DataModel} new dataModel with the group by\n */\nfunction groupBy (dataModel, fieldArr, reducers, existingDataModel) {\n    const sFieldArr = getFieldArr(dataModel, fieldArr);\n    const reducerObj = getReducerObj(dataModel, reducers);\n    const fieldStore = dataModel.getFieldspace();\n    const fieldStoreObj = fieldStore.fieldsObj();\n    const dbName = fieldStore.name;\n    const dimensionArr = [];\n    const measureArr = [];\n    const schema = [];\n    const hashMap = {};\n    const data = [];\n    let newDataModel;\n\n    // Prepare the schema\n    Object.entries(fieldStoreObj).forEach(([key, value]) => {\n        if (sFieldArr.indexOf(key) !== -1 || reducerObj[key]) {\n            schema.push(extend2({}, value.schema()));\n\n            switch (value.schema().type) {\n            case FieldType.MEASURE:\n                measureArr.push(key);\n                break;\n            default:\n            case FieldType.DIMENSION:\n                dimensionArr.push(key);\n            }\n        }\n    });\n    // Prepare the data\n    let rowCount = 0;\n    rowDiffsetIterator(dataModel._rowDiffset, (i) => {\n        let hash = '';\n        dimensionArr.forEach((_) => {\n            hash = `${hash}-${fieldStoreObj[_].partialField.data[i]}`;\n        });\n        if (hashMap[hash] === undefined) {\n            hashMap[hash] = rowCount;\n            data.push({});\n            dimensionArr.forEach((_) => {\n                data[rowCount][_] = fieldStoreObj[_].partialField.data[i];\n            });\n            measureArr.forEach((_) => {\n                data[rowCount][_] = [fieldStoreObj[_].partialField.data[i]];\n            });\n            rowCount += 1;\n        } else {\n            measureArr.forEach((_) => {\n                data[hashMap[hash]][_].push(fieldStoreObj[_].partialField.data[i]);\n            });\n        }\n    });\n\n    // reduction\n    let cachedStore = {};\n    let cloneProvider = () => dataModel.detachedRoot();\n    data.forEach((row) => {\n        const tuple = row;\n        measureArr.forEach((_) => {\n            tuple[_] = reducerObj[_](row[_], cloneProvider, cachedStore);\n        });\n    });\n    if (existingDataModel) {\n        existingDataModel.__calculateFieldspace();\n        newDataModel = existingDataModel;\n    }\n    else {\n        newDataModel = new DataModel(data, schema, { name: dbName });\n    }\n    return newDataModel;\n}\n\nexport { groupBy, getFieldArr, getReducerObj };\n","import { rowDiffsetIterator } from './row-diffset-iterator';\nimport InvalidAwareTypes from '../invalid-aware-types';\n\nconst generateBuckets = (binSize, start, end) => {\n    const buckets = [];\n    let next = start;\n\n    while (next < end) {\n        buckets.push(next);\n        next += binSize;\n    }\n    buckets.push(next);\n\n    return buckets;\n};\n\nconst findBucketRange = (bucketRanges, value) => {\n    let leftIdx = 0;\n    let rightIdx = bucketRanges.length - 1;\n    let midIdx;\n    let range;\n\n    // Here use binary search as the bucketRanges is a sorted array\n    while (leftIdx <= rightIdx) {\n        midIdx = leftIdx + Math.floor((rightIdx - leftIdx) / 2);\n        range = bucketRanges[midIdx];\n\n        if (value >= range.start && value < range.end) {\n            return range;\n        } else if (value >= range.end) {\n            leftIdx = midIdx + 1;\n        } else if (value < range.start) {\n            rightIdx = midIdx - 1;\n        }\n    }\n\n    return null;\n};\n\n /**\n  * Creates the bin data from input measure field and supplied configs.\n  *\n  * @param {Measure} measureField - The Measure field instance.\n  * @param {string} rowDiffset - The datamodel rowDiffset values.\n  * @param {Object} config - The config object.\n  * @return {Object} Returns the binned data and the corresponding bins.\n  */\nexport function createBinnedFieldData (measureField, rowDiffset, config) {\n    let { buckets, binsCount, binSize, start, end } = config;\n    const [dMin, dMax] = measureField.domain();\n\n    if (!buckets) {\n        start = (start !== 0 && (!start || start > dMin)) ? dMin : start;\n        end = (end !== 0 && (!end || end < dMax)) ? (dMax + 1) : end;\n\n        if (binsCount) {\n            binSize = Math.ceil(Math.abs(end - start) / binsCount);\n        }\n\n        buckets = generateBuckets(binSize, start, end);\n    }\n\n    if (buckets[0] > dMin) {\n        buckets.unshift(dMin);\n    }\n    if (buckets[buckets.length - 1] <= dMax) {\n        buckets.push(dMax + 1);\n    }\n\n    const bucketRanges = [];\n    for (let i = 0; i < buckets.length - 1; i++) {\n        bucketRanges.push({\n            start: buckets[i],\n            end: buckets[i + 1]\n        });\n    }\n\n    const binnedData = [];\n    rowDiffsetIterator(rowDiffset, (i) => {\n        const datum = measureField.partialField.data[i];\n        if (datum instanceof InvalidAwareTypes) {\n            binnedData.push(datum);\n            return;\n        }\n\n        const range = findBucketRange(bucketRanges, datum);\n        binnedData.push(`${range.start}-${range.end}`);\n    });\n\n    return { binnedData, bins: buckets };\n}\n","import { fnList } from '../operator/group-by-function';\n\nexport const { sum, avg, min, max, first, last, count, std: sd } = fnList;\n","import DataModel from './datamodel';\nimport {\n  compose,\n  bin,\n  select,\n  project,\n  groupby as groupBy,\n  calculateVariable,\n  sort,\n  crossProduct,\n  difference,\n  naturalJoin,\n  leftOuterJoin,\n  rightOuterJoin,\n  fullOuterJoin,\n  union\n} from './operator';\nimport * as Stats from './stats';\nimport * as enums from './enums';\nimport { DateTimeFormatter } from './utils';\nimport { DataFormat, FilteringMode } from './constants';\nimport InvalidAwareTypes from './invalid-aware-types';\nimport pkg from '../package.json';\n\nDataModel.Operators = {\n    compose,\n    bin,\n    select,\n    project,\n    groupBy,\n    calculateVariable,\n    sort,\n    crossProduct,\n    difference,\n    naturalJoin,\n    leftOuterJoin,\n    rightOuterJoin,\n    fullOuterJoin,\n    union\n};\nDataModel.Stats = Stats;\nObject.assign(DataModel, enums);\nDataModel.DateTimeFormatter = DateTimeFormatter;\nDataModel.DataFormat = DataFormat;\nDataModel.FilteringMode = FilteringMode;\nDataModel.InvalidAwareTypes = InvalidAwareTypes;\nDataModel.version = pkg.version;\n\nexport default DataModel;\n","import { persistDerivation, persistAncestorDerivation } from '../helper';\nimport { DM_DERIVATIVES } from '../constants';\n\n/**\n * DataModel's opearators are exposed as composable functional operators as well as chainable operators. Chainable\n * operators are called on the instances of {@link Datamodel} and {@link Relation} class.\n *\n * Those same operators can be used as composable operators from `DataModel.Operators` namespace.\n *\n * All these operators have similar behaviour. All these operators when called with the argument returns a function\n * which expects a DataModel instance.\n *\n * @public\n * @module Operators\n * @namespace DataModel\n */\n\n/**\n * This is functional version of selection operator. {@link link_to_selection | Selection} is a row filtering operation.\n * It takes {@link SelectionPredicate | predicate} for filtering criteria and returns a function.\n * The returned function is called with the DataModel instance on which the action needs to be performed.\n *\n * {@link SelectionPredicate} is a function which returns a boolean value. For selection opearation the selection\n * function is called for each row of DataModel instance with the current row passed as argument.\n *\n * After executing {@link SelectionPredicate} the rows are labeled as either an entry of selection set or an entry\n * of rejection set.\n *\n * {@link FilteringMode} operates on the selection and rejection set to determine which one would reflect in the\n * resulatant datamodel.\n *\n * @warning\n * [Warn] Selection and rejection set is only a logical idea for concept explanation purpose.\n *\n * @error\n * [Error] `FilteringMode.ALL` is not a valid working mode for functional version of `select`. Its only avialable on the\n * chained version.\n *\n * @example\n * const select = DataModel.Operators.select;\n * usaCarsFn = select(fields => fields.Origin.value === 'USA');\n * usaCarsDm = usaCarsFn(dm);\n * console.log(usaCarsDm);\n *\n * @public\n * @namespace DataModel\n * @module Operators\n *\n * @param {SelectionPredicate} selectFn - Predicate funciton which is called for each row with the current row\n *      ```\n *          function (row, i)  { ... }\n *      ```\n * @param {Object} [config] - The configuration object to control the inclusion exclusion of a row in resultant\n *      DataModel instance\n * @param {FilteringMode} [config.mode=FilteringMode.NORMAL] - The mode of the selection\n *\n * @return {PreparatorFunction} Function which expects an instance of DataModel on which the operator needs to be\n *      applied.\n */\nexport const select = (...args) => dm => dm.select(...args);\n\n/**\n * This is functional version of projection operator. {@link link_to_projection | Projection} is a column filtering\n * operation.It expects list of fields name and either include those or exclude those based on {@link FilteringMode} on\n * the  resultant variable.It returns a function which is called with the DataModel instance on which the action needs\n * to be performed.\n *\n * Projection expects array of fields name based on which it creates the selection and rejection set. All the field\n * whose name is present in array goes in selection set and rest of the fields goes in rejection set.\n *\n * {@link FilteringMode} operates on the selection and rejection set to determine which one would reflect in the\n * resulatant datamodel.\n *\n * @warning\n * Selection and rejection set is only a logical idea for concept explanation purpose.\n *\n * @error\n * `FilteringMode.ALL` is not a valid working mode for functional version of `select`. Its only avialable on the\n * chained version.\n *\n * @public\n * @namespace DataModel\n * @module Operators\n *\n * @param {Array.<string | Regexp>} projField - An array of column names in string or regular expression.\n * @param {Object} [config] - An optional config to control the creation of new DataModel\n * @param {FilteringMode} [config.mode=FilteringMode.NORMAL] - Mode of the projection\n *\n * @return {PreparatorFunction} Function which expects an instance of DataModel on which the operator needs to be\n *      applied.\n */\nexport const project = (...args) => dm => dm.project(...args);\n\n/**\n * This is functional version of binnig operator. Binning happens on a measure field based on a binning configuration.\n * Binning in DataModel does not aggregate the number of rows present in DataModel instance after binning, it just adds\n * a new field with the binned value. Refer binning {@link example_of_binning | example} to have a intuition of what\n * binning is and the use case.\n *\n * Binning can be configured by\n * - providing custom bin configuration with non uniform buckets\n * - providing bin count\n * - providing each bin size\n *\n * When custom buckets are provided as part of binning configuration\n * @example\n *  // DataModel already prepared and assigned to dm vairable\n *  const buckets = {\n *      start: 30\n *      stops: [80, 100, 110]\n *  };\n *  const config = { buckets, name: 'binnedHP' }\n *  const binFn = bin('horsepower', config);\n *  const binnedDm = binFn(dm);\n *\n * @text\n * When `binCount` is defined as part of binning configuration\n * @example\n *  // DataModel already prepared and assigned to dm vairable\n *  const config = { binCount: 5, name: 'binnedHP' }\n *  const binFn = bin('horsepower', config);\n *  const binnedDm = binFn(Dm);\n *\n * @text\n * When `binSize` is defined as part of binning configuration\n * @example\n *  // DataModel already prepared and assigned to dm vairable\n *  const config = { binSize: 200, name: 'binnedHorsepower' }\n *  const binnedDm = dataModel.bin('horsepower', config);\n *  const binnedDm = binFn(Dm);\n *\n * @public\n * @namespace DataModel\n * @module Operators\n *\n * @param {String} name Name of measure which will be used to create bin\n * @param {Object} config Config required for bin creation\n * @param {Array.<Number>} config.bucketObj.stops Defination of bucket ranges. Two subsequent number from arrays\n *      are picked and a range is created. The first number from range is inclusive and the second number from range\n *      is exclusive.\n * @param {Number} [config.bucketObj.startAt] Force the start of the bin from a particular number.\n *      If not mentioned, the start of the bin or the lower domain of the data if stops is not mentioned, else its\n *      the first value of the stop.\n * @param {Number} config.binSize Bucket size for each bin\n * @param {Number} config.binCount Number of bins which will be created\n * @param {String} config.name Name of the new binned field to be created\n *\n * @return {PreparatorFunction} Function which expects an instance of DataModel on which the operator needs to be\n *      applied.\n */\nexport const bin = (...args) => dm => dm.bin(...args);\n\n/**\n * This is functional version of `groupBy` operator.Groups the data using particular dimensions and by reducing\n * measures. It expects a list of dimensions using which it projects the datamodel and perform aggregations to reduce\n * the duplicate tuples. Refer this {@link link_to_one_example_with_group_by | document} to know the intuition behind\n * groupBy.\n *\n * DataModel by default provides definition of few {@link reducer | Reducers}.\n * {@link ReducerStore | User defined reducers} can also be registered.\n *\n * This is the chained implementation of `groupBy`.\n * `groupBy` also supports {@link link_to_compose_groupBy | composability}\n *\n * @example\n * const groupBy = DataModel.Operators.groupBy;\n * const groupedFn = groupBy(['Year'], { horsepower: 'max' } );\n * groupedDM = groupByFn(dm);\n *\n * @public\n *\n * @param {Array.<string>} fieldsArr - Array containing the name of dimensions\n * @param {Object} [reducers={}] - A map whose key is the variable name and value is the name of the reducer. If its\n *      not passed, or any variable is ommitted from the object, default aggregation function is used from the\n *      schema of the variable.\n *\n * @return {PreparatorFunction} Function which expects an instance of DataModel on which the operator needs to be\n *      applied.\n */\nexport const groupBy = (...args) => dm => dm.groupBy(...args);\n\n/**\n * Enables composing operators to run multiple operations and save group of operataion as named opration on a DataModel.\n * The resulting DataModel will be the result of all the operation provided. The operations provided will be executed in\n * a serial manner ie. result of one operation will be the input for the next operations (like pipe operator in unix).\n *\n * Suported operations in compose are\n * - `select`\n * - `project`\n * - `groupBy`\n * - `bin`\n * - `compose`\n *\n * @example\n * const compose = DataModel.Operators.compose;\n * const select = DataModel.Operators.select;\n * const project = DataModel.Operators.project;\n *\n * let composedFn = compose(\n *    select(fields => fields.netprofit.value <= 15),\n *    project(['netprofit', 'netsales']));\n *\n * const dataModel = new DataModel(data1, schema1);\n *\n * let composedDm = composedFn(dataModel);\n *\n * @public\n * @namespace DataModel\n * @module Operators\n *\n * @param {Array.<Operators>} operators: An array of operation that will be applied on the\n * datatable.\n *\n * @returns {DataModel} Instance of resultant DataModel\n */\nexport const compose = (...operations) =>\n    (dm, config = { saveChild: true }) => {\n        let currentDM = dm;\n        let firstChild;\n        const derivations = [];\n\n        operations.forEach((operation) => {\n            currentDM = operation(currentDM);\n            derivations.push(...currentDM._derivation);\n            if (!firstChild) {\n                firstChild = currentDM;\n            }\n        });\n\n        if (firstChild && firstChild !== currentDM) {\n            firstChild.dispose();\n        }\n\n        persistDerivation(currentDM, DM_DERIVATIVES.COMPOSE, null, derivations);\n        // reset all ancestorDerivation saved in-between compose\n        currentDM._ancestorDerivation = [];\n        persistAncestorDerivation(dm, currentDM);\n\n        if (config.saveChild) {\n            currentDM.setParent(dm);\n        } else {\n            currentDM.setParent(null);\n        }\n\n        return currentDM;\n    };\n","/**\n * Wrapper on calculateVariable() method of DataModel to behave\n * the pure-function functionality.\n *\n * @param {Array} args - The argument list.\n * @return {any} Returns the returned value of calling function.\n */\nexport const calculateVariable = (...args) => dm => dm.calculateVariable(...args);\n\n/**\n * Wrapper on sort() method of DataModel to behave\n * the pure-function functionality.\n *\n * @param {Array} args - The argument list.\n * @return {any} Returns the returned value of calling function.\n */\nexport const sort = (...args) => dm => dm.sort(...args);\n","import { crossProduct } from './cross-product';\nimport { naturalJoinFilter } from './natural-join-filter-function';\n\nexport function naturalJoin (dataModel1, dataModel2) {\n    return crossProduct(dataModel1, dataModel2, naturalJoinFilter(dataModel1, dataModel2), true);\n}\n","(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"hyperdis\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"hyperdis\"] = factory();\n\telse\n\t\troot[\"hyperdis\"] = factory();\n})(window, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n","const makeEntry = (arr, sCon) => {\n    arr.forEach((elem) => {\n        if (elem === undefined || elem === null) {\n            return;\n        }\n        sCon[elem] = 1;\n    });\n};\n\nexport default class ForeignSet {\n    constructor (arr) {\n        this._set = {};\n        makeEntry(arr, this._set);\n    }\n\n    append (arr) {\n        makeEntry(arr, this._set);\n        return this;\n    }\n\n    toArray () {\n        return Object.keys(this._set);\n    }\n\n    static difference (set1, set2) {\n        let key;\n        const filteredKeys = [],\n            s1 = set1._set,\n            s2 = set2._set;\n        for (key in s1) {\n            if (!({}).hasOwnProperty.call(s1, key)) {\n                continue;\n            }\n            if (key in s2) {\n                continue;\n            }\n            filteredKeys.push(key);\n        }\n        return new ForeignSet(filteredKeys);\n    }\n}\n","/* global window */\n\nimport ForeignSet from './set';\n\nconst\n    isSimpleObject = (obj) => {\n        let token;\n        if (typeof obj === 'object') {\n            if (obj === null) { return false; }\n            token = Object.prototype.toString.call(obj);\n            if (token === '[object Object]') {\n                return (obj.constructor.toString().match(/^function (.*)\\(\\)/m) || [])[1] === 'Object';\n            }\n        }\n        return false;\n    },\n    minMsThreshold = 16,\n    /* istanbul ignore next */win = typeof window === 'undefined' ? (this || {}) : window,\n    /* istanbul ignore next */ reqAnimFrame = win.requestAnimationFrame || win.webkitRequestAnimationFrame ||\n        win.mozRequestAnimationFrame || win.oRequestAnimationFrame ||\n        win.msRequestAnimationFrame ||\n        function (callback) {\n            setTimeout(callback, minMsThreshold);\n        },\n\n    getTimeBasedId = () => {\n        if (getTimeBasedId.__lastTime === new Date().getTime()) {\n            return (getTimeBasedId.__lastTime).toString() + (getTimeBasedId.__id++).toString();\n        }\n\n        getTimeBasedId.__id = 0;\n        getTimeBasedId.__lastTime = new Date().getTime();\n        return (getTimeBasedId.__lastTime).toString() + (getTimeBasedId.__id++).toString();\n    },\n    pullableRecent = (nodes, fn) => {\n        let nFn = () => {\n            fn(...nodes.map((node) => {\n                const\n                    hist = node.history,\n                    l = hist.length - 1;\n                return [hist[l - 1 < 0 ? 0 : l - 1], hist[l]];\n            }));\n        };\n        nFn.__id = getTimeBasedId();\n        return nFn;\n    },\n    pullableEnd = (nodes, fn) => {\n        let nFn = () => {\n            fn(...nodes.map((node) => {\n                const hist = node.history;\n                return [hist[0], hist[hist.length - 1]];\n            }));\n        };\n        nFn.__id = getTimeBasedId();\n        return nFn;\n    },\n    unique = fns => fns\n                    .reduce((store, fn) => {\n                // @warn function with side effect, it mutates the store passed during initialization\n                        if (fn.__id in store.map) {\n                            return store;\n                        }\n\n                        store.map[fn.__id] = 1;\n                        store.unique.push(fn);\n\n                        return store;\n                    }, { map: {}, unique: [] })\n                    .unique,\n    compose = fns => () => {\n        fns.forEach(fn => fn());\n    },\n    flat = (...params) => {\n        const res = [];\n        params.forEach(param => res.push(...param));\n        return res;\n    },\n    identityMap = arrays => arrays,\n    splitPathProp = (path) => {\n        const pathArr = path.split('.'),\n            len = pathArr.length;\n        return [pathArr.slice(0, len - 1), pathArr[len - 1]];\n    },\n    scheduler = (onFinishCallback) => {\n        let queue = [],\n            animationFrame = null;\n\n        onFinishCallback = onFinishCallback &&\n            typeof onFinishCallback === 'function' && onFinishCallback || (() => { });\n\n        return (listeners, payload) => {\n            [].push.apply(queue, listeners);\n            if (animationFrame === null) {\n                animationFrame = reqAnimFrame(() => {\n                    const tempQ = queue.slice(0);\n                    queue.length = 0;\n                    animationFrame = null;\n\n                    unique(tempQ).forEach(fn => fn());\n                    onFinishCallback(payload);\n                });\n            }\n        };\n    },\n    fetch = namedNode => (...params) => params.map((param) => {\n        const node = namedNode[param];\n        return {\n            name: node.name,\n            qualifiedName: node.qualifiedName,\n            value: node.seed\n        };\n    }),\n    fetchAggregator = (...params) => ({\n        dependencies: params.slice(0, params.length - 1),\n        fn: params[params.length - 1]\n    }),\n    getUpstreamNodes = (list) => {\n        let res = [];\n        const map = {};\n        list.forEach(node => map[node.qualifiedName] = -1);\n        function rec (arr) {\n            arr.forEach((node) => {\n                let qname,\n                    placedIndex,\n                    preArr,\n                    postArr;\n                if (!((qname = node.qualifiedName) in map)) {\n                    map[qname] = res.push(node) - 1;\n                } else {\n                    placedIndex = map[qname];\n                    if (placedIndex !== -1 && placedIndex !== res.length - 1) {\n                        // If not the last element, readjust the array so that the later dependency position is saved\n                        preArr = res.slice(0, placedIndex);\n                        postArr = res.slice(placedIndex + 1);\n                        res = preArr.concat(postArr);\n\n                        // reset the index in map\n                        postArr.forEach((elem, i) => map[elem.qualifiedName] = i + preArr.length);\n                        map[qname] = res.push(node) - 1;\n                    }\n                }\n                rec(node.outgoingEdges);\n            });\n        }\n        rec(list);\n        return res;\n    },\n    resolver = {\n        accumulate: (...params) => {\n            const resp = {};\n            params.forEach((nodeDetails) => {\n                Object.assign(resp, { [nodeDetails.name]: nodeDetails.value });\n            });\n            return resp;\n        },\n        identity: nodeDetails => nodeDetails.value\n    };\n\nfunction resolveDependencyOrder (node, resolved, resolveMap) {\n    let qname;\n    node.edges.forEach((neighbour) => {\n        resolveDependencyOrder(neighbour, resolved, resolveMap);\n    });\n\n    if (node.isRoot() || (qname = node.qualifiedName) in resolveMap) {\n        return;\n    }\n    resolved.push(node);\n    resolveMap[qname] = 1;\n}\n\nclass CustomResolver {\n    constructor (resolver) {\n        this.fn = resolver;\n        this.dep = [];\n    }\n\n    addDependencies(...dep) {\n        this.dep.push(...dep);\n        return this;\n    }\n\n    getDependencies () {\n        return this.dep;\n    }\n\n    get () {\n        return this.fn;\n    }\n}\n\nexport {\n    isSimpleObject,\n    scheduler,\n    compose,\n    flat,\n    identityMap,\n    pullableEnd,\n    pullableRecent,\n    unique,\n    splitPathProp,\n    resolver,\n    ForeignSet,\n    resolveDependencyOrder,\n    fetch,\n    fetchAggregator,\n    CustomResolver,\n    getUpstreamNodes\n};\n","export default class GraphNode {\n    constructor (name, qualifiedName, options) {\n        /* istanbul ignore next */options = options || {};\n        this.name = name;\n        this.qualifiedName = qualifiedName;\n        this.edges = [];\n        this.outgoingEdges = [];\n        this._seed = null;\n        this.requireResolve = true;\n        this.retriever = options.retriever;\n        this.history = [];\n        this.resolver = null;\n        this.electricEdges = [];\n    }\n\n    addDependencies (...dep) {\n        this.edges.push(...dep);\n        dep.forEach(entry => entry.outgoingEdges.push(this));\n        return this;\n    }\n\n    addElectricNode (node) {\n        this.electricEdges.push(node);\n        return this;\n    }\n\n    get seed () {\n        return this._seed;\n    }\n\n    set seed (value) {\n        this._seed = value;\n        this.requireResolve = true;\n        return this;\n    }\n\n    resolve () {\n        this.seed = this.resolver(...this.retrieveDetails());\n        this.history.push(this.seed);\n        this.requireResolve = false;\n        return this;\n    }\n\n    retrieveDetails () {\n        if (this.edges.length === 0) {\n            return [{\n                name: this.name,\n                qualifiedName: this.qualifiedName,\n                value: this.seed\n            }];\n        }\n        return this.retriever(...this.edges.map(edge => edge.qualifiedName));\n    }\n\n    repeatHead () {\n        const\n            history = this.history,\n            head = history[history.length - 1];\n        // @todo- Akash, write test case if history.length === 0 to pass code coverage\n        if (history.length === 0) {\n            return this;\n        }\n        history.push(head);\n        return this;\n    }\n\n    flush () {\n        const hist = this.history,\n            head = hist[hist.length - 1];\n        hist.length = 0;\n        hist.push(head);\n        return this;\n    }\n\n    isRoot () {\n        return this.name === null;\n    }\n}\n","import {\n    pullableRecent,\n    pullableEnd\n} from './utils';\n\nexport default class ElectricNode {\n    constructor () {\n        this.edges = [];\n        this.listeners = {\n            nextFrame: [],\n            currentFrame: []\n        };\n    }\n\n    addEdges (...nodes) {\n        this.edges.push(...nodes);\n        return this;\n    }\n\n    regListenerForCurrFrame (fn) {\n        const lstnrs = this.listeners.currentFrame;\n        let index = lstnrs.push(pullableRecent(this.edges, fn)) - 1;\n\n        return () => {\n            this.listeners.currentFrame = lstnrs.filter((fn, i) => i !== index);\n        };\n    }\n\n    regListenerForNextFrame (fn) {\n        const lstnrs = this.listeners.nextFrame;\n        let index = lstnrs.push(pullableEnd(this.edges, fn)) - 1;\n\n        return () => {\n            this.listeners.nextFrame = lstnrs.filter((fn, i) => i !== index);\n        };\n    }\n\n    hasNextFrameListener () {\n        return !!this.listeners.nextFrame.length;\n    }\n}\n","import {\n    isSimpleObject,\n    resolver,\n    // upstreamNodes,\n    flat,\n    resolveDependencyOrder,\n    getUpstreamNodes,\n    ForeignSet,\n    fetch,\n    CustomResolver,\n    scheduler\n} from './utils';\nimport Node from './graph-node';\nimport ElectricNode from './electric-node';\n\nexport default class Graph {\n    constructor () {\n        this.qualifiedNodeMap = {};\n        this.retriever = fetch(this.qualifiedNodeMap);\n        this.root = new Node(null, null, { retriever: this.retriever });\n        this.root.resolver = resolver.accumulate;\n\n        this._wholeSet = null;\n        this._propagate = true;\n        this.propagationOverride = {\n            currentFrameListeners: false,\n            nextFrameListeners: false\n        };\n\n        this._schedule = scheduler((payload) => {\n            let qname;\n            for (qname in payload.flushTarget) {\n                if (!({}).hasOwnProperty.call(this.qualifiedNodeMap, qname)) {\n                    return;\n                }\n                this.qualifiedNodeMap[qname].flush();\n            }\n        });\n    }\n\n    createNodesFrom (obj, mount) {\n        let val,\n            resolveReqList;\n        const qualifiedNodeMap = this.qualifiedNodeMap,\n            root = this.root,\n            retriever = this.retriever;\n\n        (function rec (objn, qualifiedName, history) {\n            let key,\n                qname,\n                perv,\n                node;\n\n            for (key in objn) {\n                if (!({}).hasOwnProperty.call(objn, key)) {\n                    continue;\n                }\n                qname = `${qualifiedName}${key}`;\n                node = new Node(key, qname, { retriever });\n                qualifiedNodeMap[qname] = node;\n\n                if ((perv = history.perv) !== undefined) {\n                    perv.addDependencies(node);\n                } else {\n                    // top most level entries\n                    root.addDependencies(node);\n                }\n\n                if (isSimpleObject(val = objn[key])) {\n                    rec(val, `${qualifiedName}${key}.`, { perv: node });\n                    node.resolver = resolver.accumulate;\n                } else if (val instanceof CustomResolver) {\n                    node.resolver = val.get();\n                    node.addDependencies(...val.getDependencies().map(qname => qualifiedNodeMap[qname]));\n                } else {\n                    node.resolver = resolver.identity;\n                    node.seed = val;\n                    // node.resolve();\n                }\n            }\n        }(obj, mount === null ? '' : `${mount}.`, {\n            perv: qualifiedNodeMap[mount]\n        }));\n\n        this._wholeSet = new ForeignSet(Object.keys(this.qualifiedNodeMap));\n\n        // Recalculate the model without firing the listeners\n        // @todo selective branch resolve. Currently resolve gets called even for a branch which was updated\n        resolveReqList = this.constructor.getResolvedList(root).concat(root).filter(node => node.requireResolve);\n        resolveReqList.forEach(node => node.resolve());\n        getUpstreamNodes(resolveReqList).forEach(node => node.resolve());\n        return this;\n    }\n\n    getNodeValue (prop) {\n        if (prop in this.qualifiedNodeMap) {\n            return this.qualifiedNodeMap[prop].seed;\n        }\n        return undefined;\n    }\n\n    createElectricNodeOf (props, fnSpec) {\n        const nodes = props.map(prop => this.qualifiedNodeMap[prop]),\n            eNode = new ElectricNode().addEdges(...nodes);\n\n        nodes.forEach(node => node.addElectricNode(eNode));\n        return eNode[`regListenerFor${fnSpec.type}`](fnSpec.fn);\n    }\n\n    update (...params) {\n        let changedSet,\n            upstreamNodes;\n        const\n            electricEdges = [],\n            nodes = params.map((entry) => {\n                entry[0].seed = entry[1];\n                return entry[0];\n            });\n        nodes.forEach(node => node.resolve());\n        electricEdges.push(...flat(...nodes.map(node => node.electricEdges)));\n        changedSet = new ForeignSet(nodes.map(node => node.qualifiedName));\n\n        if (!this._propagate) {\n            this.__execUniqueElectricEdges(electricEdges);\n            this._propagate = true;\n            return this;\n        }\n\n        upstreamNodes = getUpstreamNodes(nodes);\n        upstreamNodes.forEach(upstreamNode => upstreamNode.resolve());\n        changedSet.append(upstreamNodes.map(node => node.qualifiedName));\n        electricEdges.push(...flat(...upstreamNodes.map(node => node.electricEdges)));\n\n        this.__execUniqueElectricEdges(Array.from(new Set(electricEdges)), changedSet);\n        return this;\n    }\n\n    __execUniqueElectricEdges (electricEdges, changedSet) {\n        const\n            cfLstnrs = [], // current frame listeners\n            nfLstnrs = []; // next frame listeners\n        if (changedSet) {\n            const\n                differenceSet = ForeignSet.difference(this._wholeSet, changedSet),\n                entries = differenceSet.toArray();\n\n            entries.forEach(entry => this.qualifiedNodeMap[entry].repeatHead());\n        }\n\n        electricEdges.forEach((e) => {\n            cfLstnrs.push(...e.listeners.currentFrame);\n        });\n        electricEdges.forEach((e) => {\n            nfLstnrs.push(...e.listeners.nextFrame);\n        });\n\n        !this.propagationOverride.currentFrameListeners && cfLstnrs.forEach(fn => fn());\n        !this.propagationOverride.nextFrameListeners && this._schedule(nfLstnrs, { flushTarget: changedSet });\n        this.resetPropagationOverride();\n        return this;\n    }\n\n    resetNodeValue (...qnames) {\n        const nodes = qnames.map(qname => this.qualifiedNodeMap[qname]),\n            args = nodes.map(node => [node, node.seed]);\n        this.update(...args);\n        return this;\n    }\n\n    static getResolvedList (node) {\n        const resolved = [];\n        resolveDependencyOrder(node, resolved, {});\n        return resolved;\n    }\n\n    stopPropagation () {\n        this._propagate = false;\n        return this;\n    }\n\n    resetPropagationOverride () {\n        this.propagationOverride.currentFrameListeners = false;\n        this.propagationOverride.nextFrameListeners = false;\n        return this;\n    }\n\n    setPropagationOverride (key) {\n        this.propagationOverride[`${key}Listeners`] = true;\n        return this;\n    }\n\n    getNodeFromQualifiedName (qname) {\n        return this.qualifiedNodeMap[qname];\n    }\n}\n","import Graph from './graph';\nimport { CustomResolver, fetchAggregator } from './utils';\n\n/**\n * The container class for Hyperdis. Hyperdis is an enabler for observable object with few interesting features like,\n * calculated property, next frame and same frame listeners, multiple listeners etc with a dependency resolving system.\n * It internally uses a graph to hold the hierarchial relationship of a object. Model is merely a container which\n * ties all the components together.\n *\n * @todo Circular dependency detection is not present\n *\n * @example check src/index.spec.js\n * @class\n */\nclass Model {\n    constructor () {\n        this._graph = new Graph();\n        this._lockFlag = false;\n        this._reqQ = [];\n    }\n\n    /**\n     * Static method to create and init the model with an observable seed\n     *\n     * @param {Object} obj The target object which is required to be made observable\n     * @return {Model} instance of the observable object model\n     */\n    static create (obj) {\n        return new Model()._addPropInModel(null, obj);\n    }\n\n    /**\n     * Appends more observable property on the already observable instance. This mutates the original model.\n     *\n     * This function works in two mode. One being\n     * @param {String} mountPoint the property on which the new set of properties will be mounted. If its a nested\n     *                          property then the mountPoint has to be written such a way so it feels like you are\n     *                          accessing the object. If the mount point is not found then he obeservables are added in\n     *                          the root.\n     * @param {Object} The target object which is required to be made observable\n     *\n     * Another being\n     * @param {Object} The target object which is required to be made observable\n     *\n     * @return {Model} instance of the observable object model\n     */\n    append (...params) {\n        let mountPoint,\n            obj;\n\n        if (params.length === 1) {\n            mountPoint = null;\n            obj = params[0];\n        } else {\n            mountPoint = params[0];\n            obj = params[1];\n        }\n\n        this._addPropInModel(mountPoint, obj);\n        return this;\n    }\n\n    /**\n     * Creates a calculated variable from existing variable. This variable can't be updated from outside.\n     * @param {string} mountpoint property path on which the new variable will be placed\n     * @param {string} name name of the variable. If the variable could have hierarchy like `limits.start`\n     * @param {Function} fn funtion where the dependent variables are injected based on the dependency requirement\n     */\n    calculatedProp (...params) {\n        let calculationConfig,\n            customResolver,\n            varName,\n            mount,\n            fetchFn;\n\n        if (params.length > 2) {\n            mount = params[0];\n            varName = params[1];\n            fetchFn = params[2];\n        } else {\n            mount = null;\n            varName = params[0];\n            fetchFn = params[1];\n        }\n\n        calculationConfig = fetchFn(fetchAggregator);\n        customResolver = new CustomResolver(calculationConfig.fn);\n        customResolver.addDependencies(...calculationConfig.dependencies);\n\n        this._addPropInModel(mount, { [varName]: customResolver });\n        return this;\n    }\n\n    // eslint-disable-next-line require-jsdoc\n    _addPropInModel (mountPoint, obj) {\n        this._graph.createNodesFrom(obj, mountPoint);\n        return this;\n    }\n\n    /**\n     * Register a listener in the current frame when a property or group of properties is changed.\n     *\n     * @example\n     * This function takes a single or group of property and handler which is called when any of the properties are\n     * changed.\n     * When a single property is changed the handler is called with two parameter, what was the old value of the state\n     * property and what is the new value.\n     * myState.on('range.start', (oldValue, newValue) => {\n     *      console.log('Value before prop change', oldValue);\n     *      console.log('Value after prop change', newValue);\n     * });\n     *\n     * myState.prop('range.start', 9);\n     * // Output\n     * Value before prop change 1\n     * Value after prop change 9\n     *\n     * If a handler is registered on change of a property which has another state property as value, then the handler\n     * gets called whenever any state property connected to it gets changed\n     *\n     * myState.on('range', (oldValue, newValue) => {\n     *      console.log('Value before prop change', oldValue);\n     *      console.log('Value after prop change', newValue);\n     * });\n     *\n     * myState.prop('range.start', 10);\n     * myState.prop('range.type.absolute', false);\n     *\n     * // Output\n     * Value before prop change\n     * range {\n     *      start: 9,\n     *      end: 5,\n     *      type: {\n     *          absolute: true\n     *      }\n     * }\n     * Value after prop change\n     * range: {\n     *      start: 10,\n     *      end: 5,\n     *      type: {\n     *          absolute: false\n     *      }\n     * }\n     * If a handler is registered with more than one property change then, the handler is called when any of the\n     * properties gets changed. In this cast the handler is called with more than one parameter: each for one state\n     * property which is registered for listening. Each parameter is of type array containing [oldValue, newValue]\n     *\n     * myState.on('range.start', 'range.end', (start, end) => {\n     *      console.log('Start', start);\n     *      console.log('End', end);\n     * });\n     *\n     * myState.prop('range.start', 12);\n     *\n     * // Output\n     * Start [10, 12]\n     * End [5, 5]\n     *\n     * myState.prop('range.end', 7);\n     *\n     * // Output\n     * Start [12, 12]\n     * End [5, 7]\n     *\n     * The on returns a function which is when called the listener registered gets unregistered\n     *\n     * let unsub = myState.on(['range.start', 'range.end'], (start, end) => {\n     *      console.log('Start', start);\n     *      console.log('End', end);\n     * });\n     *\n     * // Unsubscribe\n     * unsub()\n     *\n     * On takes an optional boolean value as the last parameter, which if passed as a true value the handler gets called\n     * during registration itself.\n     *\n     * @param {Array.<String>} props List of properties which is of interest\n     * @param {Function} fn Listener to be executed when any of them is changed. The listener is called with the old\n     *                      value and new value of the properties\n     * @param {*} instantCall When registered if the function is to be triggered with the value of the property\n     *\n     * @return {Function} function to unsubscribe from the listeners registry\n     */\n    on (props, fn, instantCall) {\n        const\n            propsArr = props instanceof Array ? props : [props],\n            // All there listeners will be executed in the current stack frame\n            unsub = this._graph.createElectricNodeOf(propsArr, {\n                type: 'CurrFrame',\n                fn\n            });\n\n        if (instantCall) {\n            // Bar current next frame listeners from getting fired\n            this._graph.stopPropagation().setPropagationOverride('nextFrame').resetNodeValue(...props);\n        }\n        return unsub;\n    }\n\n    /**\n     * Register a listener for the next frame when a property or group of properties is changed.\n     *\n     * @example\n     * See the examples for the on listener\n     *\n     * @param {Array.<String>} props List of properties which is of interest\n     * @param {Function} fn Listener to be executed when any of them is changed. The listener is called with the old\n     *                      value and new value of the properties. Here the oldvalue is last value of the last frame\n     * @param {*} instantCall When registered if the function is to be triggered with the value of the property\n     *\n     * @return {Function} function to unsubscribe from the listeners registry\n     */\n    next (props, fn, instantCall) {\n        const\n            propsArr = props instanceof Array ? props : [props],\n            // All there listeners will be executed at the tick of next animation frame\n            unsub = this._graph.createElectricNodeOf(propsArr, {\n                type: 'NextFrame',\n                fn\n            });\n\n        // @todo check support for this from the graph side\n        if (instantCall) {\n            // Bar current frame listeners from getting fired\n            this._graph.stopPropagation().setPropagationOverride('currentFrame').resetNodeValue(...props);\n        }\n\n        return unsub;\n    }\n\n    /**\n     * Lock queues the request of property change and releases the change when unlock is called. This is helpful when\n     * multiple property is getting called and the model listeners are to be fired once at the end of update.\n     *\n     * @return {Model} instance of the model\n     */\n    lock () {\n        this._lockFlag = true;\n        this._reqQ.length = 0;\n        return this;\n    }\n\n    /**\n     * Unlock unleashes the change done after the lock was called.\n\n     * @return {Model} instance of the model\n     */\n    unlock () {\n        this._lockFlag = false;\n        this.setProp(...this._reqQ);\n        this._reqQ.length = 0;\n        return this;\n    }\n\n    /**\n     * This acts as getter and setter. If the function is called by passing only one argument, it retrieve the value\n     * associated with the property. If the same function is called using two parameters, first one being the property\n     * and second one being the value, then the value is set for the property and the handlers are called (if any)\n     * which got registered using the on function\n     *\n     * Getter\n     * @param {string} prop property path whose value to be retrieved\n     * @return {Object} value of the property at the time of call\n     *\n     * Setter\n     * @param {string} property property path whose value to be ser\n     * @return {Model} instance of the model\n     */\n    prop (...params) {\n        let prop,\n            val,\n            len;\n\n        switch (len = params.length) {\n        case 1:\n            prop = params[0];\n            break;\n\n        case 2:\n            prop = params[0];\n            val = params[1];\n            break;\n\n        default:\n            return this;\n        }\n\n        if (len === 2) {\n            this._lockFlag ? this._reqQ.push([prop, val]) : this.setProp([prop, val]);\n            return this;\n        }\n\n        return this._graph.getNodeValue(prop);\n    }\n\n    // eslint-disable-next-line require-jsdoc\n    setProp (...props) {\n        // Filter out the calculated variables, so that it cant be changed from outside\n        // @todo if a node is not leafValue, and change is called, ignore it too\n        // props = props.filter(prop => !(VirtualObj.walkTill(prop[0].split('.'), this._vObj).leafValue()\n        //     instanceof CalculatedVar));\n\n        if (props.length === 0) {\n            return this;\n        }\n\n        this._graph.update(...props.map(prop => [this._graph.getNodeFromQualifiedName(prop[0]), prop[1]]));\n        return this;\n    }\n\n    /**\n     * Retrieves the graph representation of the object\n     * @return {Graph} instance of the graph associated to the model\n     */\n    graph () {\n        return this._graph;\n    }\n\n    /**\n     * Get serialized data from the model\n     *\n     * @return {Object} Serialized data\n     */\n    serialize () {\n        return this._graph.root.seed;\n    }\n}\n\nexport default Model;\n","import Model from './model';\n\nexport default Model;\n","module.exports = function(module) {\n\tif (!module.webpackPolyfill) {\n\t\tmodule.deprecate = function() {};\n\t\tmodule.paths = [];\n\t\t// module.parent = undefined by default\n\t\tif (!module.children) module.children = [];\n\t\tObject.defineProperty(module, \"loaded\", {\n\t\t\tenumerable: true,\n\t\t\tget: function() {\n\t\t\t\treturn module.l;\n\t\t\t}\n\t\t});\n\t\tObject.defineProperty(module, \"id\", {\n\t\t\tenumerable: true,\n\t\t\tget: function() {\n\t\t\t\treturn module.i;\n\t\t\t}\n\t\t});\n\t\tmodule.webpackPolyfill = 1;\n\t}\n\treturn module;\n};\n","'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n    value: true\n});\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\nvar _lib = require('./lib');\n\nvar _lib2 = _interopRequireDefault(_lib);\n\nvar _containerManager = require('./container-manager');\n\nvar _containerManager2 = _interopRequireDefault(_containerManager);\n\nvar slLib = _lib2['default'].init(typeof window !== \"undefined\" ? window : undefined),\n    doc = slLib.win.document,\n    M = slLib.win.Math,\n    max = M.max,\n    round = M.round,\n    BLANK = '',\n    htmlSplCharSpace = { ' ': '&nbsp;' },\n    documentSupport = slLib.getDocumentSupport(),\n    SVG_BBOX_CORRECTION = documentSupport.isWebKit ? 0 : 4.5;\n\n/*\n * Create new instance of SmartLabelManager.\n *\n * SmartLabelManager controls the lifetime of the execution space where the text's metrics will be calculated.\n * This takes a string for a given style and returns the height, width.\n * If a bound box is defined it wraps the text and returns the wrapped height and width.\n * It allows to append ellipsis at the end if the text is truncated.\n *\n * @param {String | Number} id - Id of the instance. If the same id is passed, it disposes the old instance and\n *                              save the new one;\n * @param {String | HTMLElement} container - The id or the instance of the container where the intermediate dom\n *                              elements are to be attached. If not passed, it appends in div\n *\n * @param {Boolean} useEllipses - This decides if a ellipses to be appended if the text is truncated.\n * @param {Object} options - Control options\n *                          {\n *                              maxCacheLimit: No of letter to be cached. Default: 500.\n *                          }\n * @constructor\n */\nfunction SmartLabelManager(id, container, useEllipses, options) {\n    var wrapper,\n        prop,\n        max,\n        prevInstance,\n        isBrowserLess = false,\n        store = SmartLabelManager.store;\n\n    if (typeof id === 'undefined' || typeof id === 'object') {\n        return;\n    }\n\n    if (prevInstance = store[id]) {\n        prevInstance.dispose();\n    }\n\n    store[id] = this;\n    options = options || {};\n    options.maxCacheLimit = isFinite(max = options.maxCacheLimit) ? max : slLib.maxDefaultCacheLimit;\n\n    if (typeof container === 'string') {\n        container = doc.getElementById(container);\n    }\n\n    wrapper = slLib.createContainer(container);\n    wrapper.innerHTML = slLib.testStrAvg;\n\n    if (documentSupport.isHeadLess || !documentSupport.isIE && !wrapper.offsetHeight && !wrapper.offsetWidth) {\n        isBrowserLess = true;\n    }\n\n    wrapper.innerHTML = '';\n    for (prop in slLib.parentContainerStyle) {\n        wrapper.style[prop] = slLib.parentContainerStyle[prop];\n    }\n\n    this.id = id;\n    this.parentContainer = wrapper;\n\n    this._containerManager = new _containerManager2['default'](wrapper, isBrowserLess, 10);\n    this._showNoEllipses = !useEllipses;\n    this._init = true;\n    this.style = {};\n    this.options = options;\n\n    this.setStyle();\n}\n\n/*\n * getSmartText returns the text separated by <br/> whenever a break is necessary. This is to recgonize one\n * generalized format independent of the implementation (canvas based solution, svg based solution). This method\n * converts the output of getSmartText().text to array of lines if the text is wrapped. It sets a named property\n * `lines` on the object passed as parameter.\n *\n * @param {Object} smartlabel - the object returned by getSmartText based on which line arr which to be formed.\n *\n * @return {Object} - The same object which was passed in the arguments. Also a named property `lines` is set.\n */\nSmartLabelManager.textToLines = function (smartlabel) {\n    smartlabel = smartlabel || {};\n\n    if (!smartlabel.text) {\n        smartlabel.text = '';\n    } else if (typeof smartlabel.text !== 'string') {\n        smartlabel.text = smartlabel.text.toString();\n    }\n\n    smartlabel.lines = smartlabel.text.split(/\\n|<br\\s*?\\/?>/ig);\n    return smartlabel;\n};\n\n// Saves all the instance created so far\nSmartLabelManager.store = {};\n\n// Calculates space taken by a character with an approximation value which is calculated by repeating the\n// character by string length times.\nSmartLabelManager.prototype._calCharDimWithCache = function (text, calculateDifference, length) {\n    if (!this._init) {\n        return false;\n    }\n\n    var size,\n        csArr,\n        tw,\n        twi,\n        cachedStyle,\n        asymmetricDifference,\n        maxAdvancedCacheLimit = this.options.maxCacheLimit,\n        container = this._container,\n        style = this.style || {},\n        cache = this._advancedCache || (this._advancedCache = {}),\n        advancedCacheKey = this._advancedCacheKey || (this._advancedCacheKey = []),\n        cacheName = text + (style.fontSize || BLANK) + (style.fontFamily || BLANK) + (style.fontWeight || BLANK) + (style.fontStyle || BLANK),\n        cacheInitName = text + 'init' + (style.fontSize || BLANK) + (style.fontFamily || BLANK) + (style.fontWeight || BLANK) + (style.fontStyle || BLANK);\n\n    htmlSplCharSpace[text] && (text = htmlSplCharSpace[text]);\n\n    if (!calculateDifference) {\n        asymmetricDifference = 0;\n    } else {\n        if ((asymmetricDifference = cache[cacheInitName]) === undefined) {\n            container.innerHTML = text.repeat ? text.repeat(length) : Array(length + 1).join(text); // jshint ignore:line\n            tw = container.offsetWidth;\n\n            container.innerHTML = text;\n            twi = container.offsetWidth;\n\n            asymmetricDifference = cache[cacheInitName] = (tw - length * twi) / (length + 1);\n            advancedCacheKey.push(cacheInitName);\n            if (advancedCacheKey.length > maxAdvancedCacheLimit) {\n                delete cache[advancedCacheKey.shift()];\n            }\n        }\n    }\n\n    if (cachedStyle = cache[cacheName]) {\n        csArr = cachedStyle.split(',');\n        return {\n            width: parseFloat(csArr[0], 10),\n            height: parseFloat(csArr[1], 10)\n        };\n    }\n\n    container.innerHTML = text;\n\n    size = {\n        height: container.offsetHeight,\n        width: container.offsetWidth + asymmetricDifference\n    };\n\n    cache[cacheName] = size.width + ',' + size.height;\n    advancedCacheKey.push(cacheName);\n    if (advancedCacheKey.length > maxAdvancedCacheLimit) {\n        delete cache[advancedCacheKey.shift()];\n    }\n\n    return size;\n};\n\n// Provide function to calculate the height and width based on the environment and available support from dom.\nSmartLabelManager.prototype._getWidthFn = function () {\n    var contObj = this._containerObj,\n        container = this._container,\n        svgText = contObj.svgText;\n\n    if (svgText) {\n        return function (str) {\n            var bbox, width;\n\n            svgText.textContent = str;\n            bbox = svgText.getBBox();\n            width = bbox.width - SVG_BBOX_CORRECTION;\n            if (width < 1) {\n                width = bbox.width;\n            }\n\n            return width;\n        };\n    } else {\n        return function (str) {\n            container.innerHTML = str;\n            return container.offsetWidth;\n        };\n    }\n};\n\n/*\n * Sets the style based on which the text's metrics to be calculated.\n *\n * @param {Object} style - The style object which affects the text size\n *                      {\n *                          fontSize / 'font-size' : MUST BE FOLLOWED BY PX (10px, 11px)\n *                          fontFamily / 'font-family'\n *                          fontWeight / 'font-weight'\n *                          fontStyle / 'font-style'\n *                      }\n *\n * @return {SmartLabelManager} - Current instance of SmartLabelManager\n */\nSmartLabelManager.prototype.setStyle = function (style) {\n    if (!this._init) {\n        return this;\n    }\n\n    var sCont;\n\n    if (style === this.style && !this._styleNotSet) {\n        return;\n    }\n\n    if (!style) {\n        style = this.style;\n    }\n\n    slLib.setLineHeight(style);\n    this.style = style;\n\n    this._containerObj = sCont = this._containerManager.get(style);\n\n    if (this._containerObj) {\n        this._container = sCont.node;\n        this._context = sCont.context;\n        this._cache = sCont.charCache;\n        this._lineHeight = sCont.lineHeight;\n        this._styleNotSet = false;\n    } else {\n        this._styleNotSet = true;\n    }\n\n    return this;\n};\n\n/*\n * Decides whether ellipses to be shown if the node is truncated\n *\n * @param {Boolean} useEllipses - decides if a ellipses to be appended if the text is truncated. Default: false\n *\n * @return {SmartLabelManager} - Current instance of SmartLabelManager\n */\nSmartLabelManager.prototype.useEllipsesOnOverflow = function (useEllipses) {\n    if (!this._init) {\n        return this;\n    }\n    this._showNoEllipses = !useEllipses;\n    return this;\n};\n\n/*\n * Get wrapped or truncated text if a bound box is defined around it. The result text would be separated by <br/>\n * if wrapped\n *\n * @param {String} text - the subject text\n * @param {Number} maxWidth - width in px of the the bound box\n * @param {Number} maxHeight - height in px of the the bound box\n * @param {Boolean} noWrap - whether the text to be wrapped. Default false.\n *\n * @return {Object} - The metrics of the text bounded by the box\n *                  {\n *                      height : height of the wrapped text\n *                      width : width of the wrapped text\n *                      isTruncated : whether the text is truncated\n *                      maxHeight : Maximum height given\n *                      maxWidth : Maximum width given\n *                      oriText : Original text sent\n *                      oriTextHeight : Original text height\n *                      oriTextWidth : Original text width\n *                      text : SMART TEXT\n *                  }\n */\nSmartLabelManager.prototype.getSmartText = function (text, maxWidth, maxHeight, noWrap) {\n    if (!this._init) {\n        return false;\n    }\n\n    if (text === undefined || text === null) {\n        text = '';\n    } else if (typeof text !== 'string') {\n        text = text.toString();\n    }\n\n    var len,\n        trimStr,\n        tempArr,\n        tmpText,\n        maxWidthWithEll,\n        toolText,\n        oriWidth,\n        oriHeight,\n        newCharIndex,\n        nearestChar,\n        tempChar,\n        getWidth,\n        initialLeft,\n        initialTop,\n        getOriSizeImproveObj,\n        spanArr,\n        x,\n        y,\n        minWidth,\n        elem,\n        chr,\n        elemRightMostPoint,\n        elemLowestPoint,\n        lastBR,\n        removeFromIndex,\n        removeFromIndexForEllipses,\n        hasHTMLTag = false,\n        maxStrWidth = 0,\n        lastDash = -1,\n        lastSpace = -1,\n        lastIndexBroken = -1,\n        strWidth = 0,\n        strHeight = 0,\n        oriTextArr = [],\n        i = 0,\n        ellipsesStr = this._showNoEllipses ? '' : '...',\n        lineHeight = this._lineHeight,\n        context = this._context,\n        container = this._container,\n        sCont = this._containerObj,\n        ellipsesWidth = sCont.ellipsesWidth,\n        dotWidth = sCont.dotWidth,\n        characterArr = [],\n        dashIndex = -1,\n        spaceIndex = -1,\n        lastLineBreak = -1,\n        fastTrim = function fastTrim(str) {\n        str = str.replace(/^\\s\\s*/, '');\n        var ws = /\\s/,\n            i = str.length;\n        while (ws.test(str.charAt(i -= 1))) {/* jshint noempty:false */}\n        return str.slice(0, i + 1);\n    },\n        smartLabel = {\n        text: text,\n        maxWidth: maxWidth,\n        maxHeight: maxHeight,\n        width: null,\n        height: null,\n        oriTextWidth: null,\n        oriTextHeight: null,\n        oriText: text,\n        isTruncated: false\n    };\n\n    getWidth = this._getWidthFn();\n\n    // In some browsers, offsetheight of a single-line text is getting little (1 px) heigher value of the\n    // lineheight. As a result, smartLabel is unable to return single-line text.\n    // To fix this, increase the maxHeight a little amount. Hence maxHeight =  lineHeight * 1.2\n    if (maxHeight === lineHeight) {\n        maxHeight *= 1.2;\n    }\n\n    if (container) {\n        if (!documentSupport.isBrowserLess) {\n            hasHTMLTag = slLib.xmlTagRegEx.test(text);\n            if (!hasHTMLTag) {\n                // Due to support of <,> for xml we convert &lt;, &gt; to <,> respectively so to get the correct\n                // width it is required to convert the same before calculation for the new improve version of the\n                // get text width.\n                tmpText = text.replace(slLib.ltgtRegex, function (match) {\n                    return match === '&lt;' ? '<' : '>';\n                });\n                getOriSizeImproveObj = this.getOriSize(tmpText, true);\n\n                smartLabel.oriTextWidth = oriWidth = getOriSizeImproveObj.width;\n                smartLabel.oriTextHeight = oriHeight = getOriSizeImproveObj.height;\n            } else {\n                container.innerHTML = text;\n                smartLabel.oriTextWidth = oriWidth = container.offsetWidth;\n                smartLabel.oriTextHeight = oriHeight = container.offsetHeight;\n            }\n\n            if (oriHeight <= maxHeight && oriWidth <= maxWidth) {\n                smartLabel.width = smartLabel.oriTextWidth = oriWidth;\n                smartLabel.height = smartLabel.oriTextHeight = oriHeight;\n                return smartLabel;\n            }\n\n            if (lineHeight > maxHeight) {\n                smartLabel.text = '';\n                smartLabel.width = smartLabel.oriTextWidth = 0;\n                smartLabel.height = smartLabel.oriTextHeight = 0;\n                return smartLabel;\n            }\n        }\n\n        // Calculate width with ellipses\n        text = fastTrim(text).replace(/(\\s+)/g, ' ');\n        maxWidthWithEll = this._showNoEllipses ? maxWidth : maxWidth - ellipsesWidth;\n\n        if (!hasHTMLTag) {\n            oriTextArr = text.split('');\n            len = oriTextArr.length;\n            trimStr = '', tempArr = [];\n            tempChar = oriTextArr[0];\n\n            if (this._cache[tempChar]) {\n                minWidth = this._cache[tempChar].width;\n            } else {\n                minWidth = getWidth(tempChar);\n                this._cache[tempChar] = { width: minWidth };\n            }\n\n            if (maxWidthWithEll > minWidth) {\n                tempArr = text.substr(0, slLib.getNearestBreakIndex(text, maxWidthWithEll, this)).split('');\n                i = tempArr.length;\n            } else if (minWidth > maxWidth) {\n                smartLabel.text = '';\n                smartLabel.width = smartLabel.oriTextWidth = smartLabel.height = smartLabel.oriTextHeight = 0;\n                return smartLabel;\n            } else if (ellipsesStr) {\n                maxWidthWithEll = maxWidth - 2 * dotWidth;\n                if (maxWidthWithEll > minWidth) {\n                    ellipsesStr = '..';\n                } else {\n                    maxWidthWithEll = maxWidth - dotWidth;\n                    if (maxWidthWithEll > minWidth) {\n                        ellipsesStr = '.';\n                    } else {\n                        maxWidthWithEll = 0;\n                        ellipsesStr = '';\n                    }\n                }\n            }\n\n            strWidth = getWidth(tempArr.join(''));\n            strHeight = this._lineHeight;\n\n            if (noWrap) {\n                for (; i < len; i += 1) {\n                    tempChar = tempArr[i] = oriTextArr[i];\n                    if (this._cache[tempChar]) {\n                        minWidth = this._cache[tempChar].width;\n                    } else {\n                        if (!getOriSizeImproveObj || !(minWidth = getOriSizeImproveObj.detailObj[tempChar])) {\n                            minWidth = getWidth(tempChar);\n                        }\n                        this._cache[tempChar] = {\n                            width: minWidth\n                        };\n                    }\n                    strWidth += minWidth;\n                    if (strWidth > maxWidthWithEll) {\n                        if (!trimStr) {\n                            trimStr = tempArr.slice(0, -1).join('');\n                        }\n                        if (strWidth > maxWidth) {\n                            smartLabel.text = fastTrim(trimStr) + ellipsesStr;\n                            smartLabel.tooltext = smartLabel.oriText;\n                            smartLabel.width = getWidth(smartLabel.text);\n                            smartLabel.height = this._lineHeight;\n                            return smartLabel;\n                        }\n                    }\n                }\n\n                smartLabel.text = tempArr.join('');\n                smartLabel.width = strWidth;\n                smartLabel.height = this._lineHeight;\n                return smartLabel;\n            } else {\n                for (; i < len; i += 1) {\n                    tempChar = tempArr[i] = oriTextArr[i];\n                    if (tempChar === ' ' && !context) {\n                        tempChar = '&nbsp;';\n                    }\n\n                    if (this._cache[tempChar]) {\n                        minWidth = this._cache[tempChar].width;\n                    } else {\n                        if (!getOriSizeImproveObj || !(minWidth = getOriSizeImproveObj.detailObj[tempChar])) {\n                            minWidth = getWidth(tempChar);\n                        }\n                        this._cache[tempChar] = {\n                            width: minWidth\n                        };\n                    }\n                    strWidth += minWidth;\n\n                    if (strWidth > maxWidthWithEll) {\n                        if (!trimStr) {\n                            trimStr = tempArr.slice(0, -1).join('');\n                        }\n                        if (strWidth > maxWidth) {\n                            /** @todo use regular expressions for better performance. */\n                            lastSpace = text.substr(0, tempArr.length).lastIndexOf(' ');\n                            lastDash = text.substr(0, tempArr.length).lastIndexOf('-');\n                            if (lastSpace > lastIndexBroken) {\n                                strWidth = getWidth(tempArr.slice(lastIndexBroken + 1, lastSpace).join(''));\n                                tempArr.splice(lastSpace, 1, '<br/>');\n                                lastIndexBroken = lastSpace;\n                                newCharIndex = lastSpace + 1;\n                            } else if (lastDash > lastIndexBroken) {\n                                if (lastDash === tempArr.length - 1) {\n                                    strWidth = getWidth(tempArr.slice(lastIndexBroken + 1, lastSpace).join(''));\n                                    tempArr.splice(lastDash, 1, '<br/>-');\n                                } else {\n                                    strWidth = getWidth(tempArr.slice(lastIndexBroken + 1, lastSpace).join(''));\n                                    tempArr.splice(lastDash, 1, '-<br/>');\n                                }\n                                lastIndexBroken = lastDash;\n                                newCharIndex = lastDash + 1;\n                            } else {\n                                tempArr.splice(tempArr.length - 1, 1, '<br/>' + oriTextArr[i]);\n                                lastLineBreak = tempArr.length - 2;\n                                strWidth = getWidth(tempArr.slice(lastIndexBroken + 1, lastLineBreak + 1).join(''));\n                                lastIndexBroken = lastLineBreak;\n                                newCharIndex = i;\n                            }\n                            strHeight += this._lineHeight;\n                            if (strHeight > maxHeight) {\n                                smartLabel.text = fastTrim(trimStr) + ellipsesStr;\n                                smartLabel.tooltext = smartLabel.oriText;\n                                // The max width among all the lines will be the width of the string.\n                                smartLabel.width = maxWidth;\n                                smartLabel.height = strHeight - this._lineHeight;\n                                return smartLabel;\n                            } else {\n                                maxStrWidth = max(maxStrWidth, strWidth);\n                                trimStr = null;\n                                nearestChar = slLib.getNearestBreakIndex(text.substr(newCharIndex), maxWidthWithEll, this);\n                                strWidth = getWidth(text.substr(newCharIndex, nearestChar || 1));\n                                if (tempArr.length < newCharIndex + nearestChar) {\n                                    tempArr = tempArr.concat(text.substr(tempArr.length, newCharIndex + nearestChar - tempArr.length).split(''));\n                                    i = tempArr.length - 1;\n                                }\n                            }\n                        }\n                    }\n                }\n\n                maxStrWidth = max(maxStrWidth, strWidth);\n\n                smartLabel.text = tempArr.join('');\n                smartLabel.width = maxStrWidth;\n                smartLabel.height = strHeight;\n                return smartLabel;\n            }\n        } else {\n            toolText = text.replace(slLib.spanAdditionRegx, '$2');\n            text = text.replace(slLib.spanAdditionRegx, slLib.spanAdditionReplacer);\n            text = text.replace(/(<br\\s*\\/*\\>)/g, '<span class=\"' + [slLib.classNameWithTag, ' ', slLib.classNameWithTagBR].join('') + '\">$1</span>');\n\n            container.innerHTML = text;\n\n            spanArr = container[documentSupport.childRetriverFn](documentSupport.childRetriverString);\n\n            for (x = 0, y = spanArr.length; x < y; x += 1) {\n                elem = spanArr[x];\n                //chech whether this span is temporary inserted span from it's class\n                if (documentSupport.noClassTesting || slLib.classNameReg.test(elem.className)) {\n                    chr = elem.innerHTML;\n                    if (chr !== '') {\n                        if (chr === ' ') {\n                            spaceIndex = characterArr.length;\n                        } else if (chr === '-') {\n                            dashIndex = characterArr.length;\n                        }\n\n                        characterArr.push({\n                            spaceIdx: spaceIndex,\n                            dashIdx: dashIndex,\n                            elem: elem\n                        });\n                        oriTextArr.push(chr);\n                    }\n                }\n            }\n\n            i = 0;\n            len = characterArr.length;\n            minWidth = characterArr[0].elem.offsetWidth;\n\n            if (minWidth > maxWidth) {\n                smartLabel.text = '';\n                smartLabel.width = smartLabel.oriTextWidth = smartLabel.height = smartLabel.oriTextHeight = 0;\n\n                return smartLabel;\n            } else if (minWidth > maxWidthWithEll && !this._showNoEllipses) {\n\n                maxWidthWithEll = maxWidth - 2 * dotWidth;\n                if (maxWidthWithEll > minWidth) {\n                    ellipsesStr = '..';\n                } else {\n                    maxWidthWithEll = maxWidth - dotWidth;\n                    if (maxWidthWithEll > minWidth) {\n                        ellipsesStr = '.';\n                    } else {\n                        maxWidthWithEll = 0;\n                        ellipsesStr = '';\n                    }\n                }\n            }\n\n            initialLeft = characterArr[0].elem.offsetLeft;\n            initialTop = characterArr[0].elem.offsetTop;\n\n            if (noWrap) {\n                for (; i < len; i += 1) {\n                    elem = characterArr[i].elem;\n                    elemRightMostPoint = elem.offsetLeft - initialLeft + elem.offsetWidth;\n\n                    if (elemRightMostPoint > maxWidthWithEll) {\n                        if (!removeFromIndexForEllipses) {\n                            removeFromIndexForEllipses = i;\n                        }\n                        if (container.offsetWidth > maxWidth) {\n                            removeFromIndex = i;\n                            i = len;\n                        }\n                    }\n                }\n            } else {\n                for (; i < len; i += 1) {\n                    elem = characterArr[i].elem;\n                    elemLowestPoint = elem.offsetHeight + (elem.offsetTop - initialTop);\n                    elemRightMostPoint = elem.offsetLeft - initialLeft + elem.offsetWidth;\n\n                    lastBR = null;\n\n                    if (elemRightMostPoint > maxWidthWithEll) {\n                        if (!removeFromIndexForEllipses) {\n                            removeFromIndexForEllipses = i;\n                        }\n\n                        if (elemRightMostPoint > maxWidth) {\n                            lastSpace = characterArr[i].spaceIdx;\n                            lastDash = characterArr[i].dashIdx;\n                            if (lastSpace > lastIndexBroken) {\n                                characterArr[lastSpace].elem.innerHTML = '<br/>';\n                                lastIndexBroken = lastSpace;\n                            } else if (lastDash > lastIndexBroken) {\n                                if (lastDash === i) {\n                                    // in case the overflowing character itself is the '-'\n                                    characterArr[lastDash].elem.innerHTML = '<br/>-';\n                                } else {\n                                    characterArr[lastDash].elem.innerHTML = '-<br/>';\n                                }\n                                lastIndexBroken = lastDash;\n                            } else {\n                                elem.parentNode.insertBefore(lastBR = doc.createElement('br'), elem);\n                            }\n\n                            //check whether this break made current element outside the area height\n                            if (elem.offsetHeight + elem.offsetTop > maxHeight) {\n                                //remove the lastly inserted line break\n                                if (lastBR) {\n                                    lastBR.parentNode.removeChild(lastBR);\n                                } else if (lastIndexBroken === lastDash) {\n                                    characterArr[lastDash].elem.innerHTML = '-';\n                                } else {\n                                    characterArr[lastSpace].elem.innerHTML = ' ';\n                                }\n                                removeFromIndex = i;\n                                //break the looping condition\n                                i = len;\n                            } else {\n                                removeFromIndexForEllipses = null;\n                            }\n                        }\n                    } else {\n                        //check whether this break made current element outside the area height\n                        if (elemLowestPoint > maxHeight) {\n                            removeFromIndex = i;\n                            i = len;\n                        }\n                    }\n                }\n            }\n\n            if (removeFromIndex < len) {\n                //set the trancated property of the smartlabel\n                smartLabel.isTruncated = true;\n\n                /** @todo is this really needed? */\n                removeFromIndexForEllipses = removeFromIndexForEllipses ? removeFromIndexForEllipses : removeFromIndex;\n\n                for (i = len - 1; i >= removeFromIndexForEllipses; i -= 1) {\n                    elem = characterArr[i].elem;\n                    //chech whether this span is temporary inserted span from it's class\n                    elem.parentNode.removeChild(elem);\n                }\n\n                for (; i >= 0; i -= 1) {\n                    elem = characterArr[i].elem;\n                    if (slLib.classNameBrReg.test(elem.className)) {\n                        //chech whether this span is temporary inserted span from it's class\n                        elem.parentNode.removeChild(elem);\n                    } else {\n                        i = 0;\n                    }\n                }\n            }\n\n            //get the smart text\n            smartLabel.text = container.innerHTML.replace(slLib.spanRemovalRegx, '$1').replace(/\\&amp\\;/g, '&');\n            if (smartLabel.isTruncated) {\n                smartLabel.text += ellipsesStr;\n                smartLabel.tooltext = toolText;\n            }\n        }\n\n        smartLabel.height = container.offsetHeight;\n        smartLabel.width = container.offsetWidth;\n\n        return smartLabel;\n    } else {\n        smartLabel.error = new Error('Body Tag Missing!');\n        return smartLabel;\n    }\n};\n\n/*\n * Get the height and width of a text.\n *\n * @param {String} text - Text whose metrics to be measured\n * @param {Boolean} Optional detailedCalculationFlag - this flag if set it calculates per letter position\n *                          information and returns it. Ideally you dont need it unless you want to post process the\n *                          string. And its an EXPENSIVE OPERATION.\n *\n * @return {Object} - If detailedCalculationFlag is set to true the returned object would be\n *                  {\n *                      height: height of the text\n *                      width: width of the text\n *                      detailObj: detail calculation of letters in the format {lettername: width}\n *                  }\n *                  If detailedCalculationFlag is set to false the returned object wont have the detailObj prop.\n */\nSmartLabelManager.prototype.getOriSize = function (text, detailedCalculationFlag) {\n    if (!this._init) {\n        return false;\n    }\n\n    var textArr,\n        letter,\n        lSize,\n        i,\n        l,\n        cumulativeSize = 0,\n        height = 0,\n        indiSizeStore = {};\n\n    if (!detailedCalculationFlag) {\n        return this._calCharDimWithCache(text);\n    }\n\n    // Calculate the width of every letter with an approximation\n    textArr = text.split('');\n    for (i = 0, l = textArr.length; i < l; i++) {\n        letter = textArr[i];\n        lSize = this._calCharDimWithCache(letter, true, textArr.length);\n        height = max(height, lSize.height);\n        cumulativeSize += lSize.width;\n        indiSizeStore[letter] = lSize.width;\n    }\n\n    return {\n        width: round(cumulativeSize),\n        height: height,\n        detailObj: indiSizeStore\n    };\n};\n\n/*\n * Dispose the container and object allocated by the smartlabel\n */\nSmartLabelManager.prototype.dispose = function () {\n    if (!this._init) {\n        return this;\n    }\n\n    this._containerManager && this._containerManager.dispose && this._containerManager.dispose();\n\n    delete this._container;\n    delete this._context;\n    delete this._cache;\n    delete this._containerManager;\n    delete this._containerObj;\n    delete this.id;\n    delete this.style;\n    delete this.parentContainer;\n    delete this._showNoEllipses;\n\n    return this;\n};\n\nexports['default'] = SmartLabelManager;\nmodule.exports = exports['default'];","'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n\tvalue: true\n});\nvar lib = {\n\tinit: function init(win) {\n\t\tvar doc = win.document,\n\t\t    nav = win.navigator,\n\t\t    userAgent = nav.userAgent,\n\t\t    DIV = 'DIV',\n\t\t    ceil = Math.ceil,\n\t\t    floor = Math.floor,\n\t\t    containerInstanceCount = 0,\n\t\t    clsNameSpace = 'fusioncharts-smartlabel-',\n\t\t    containerClass = clsNameSpace + 'container',\n\t\t    classNameWithTag = clsNameSpace + 'tag',\n\t\t    classNameWithTagBR = clsNameSpace + 'br';\n\n\t\tlib = {\n\t\t\twin: win,\n\n\t\t\tcontainerClass: containerClass,\n\n\t\t\tclassNameWithTag: classNameWithTag,\n\n\t\t\tclassNameWithTagBR: classNameWithTagBR,\n\n\t\t\tmaxDefaultCacheLimit: 500,\n\n\t\t\tclassNameReg: new RegExp('\\b' + classNameWithTag + '\\b'),\n\n\t\t\tclassNameBrReg: new RegExp('\\b' + classNameWithTagBR + '\\b'),\n\n\t\t\tspanAdditionRegx: /(<[^<\\>]+?\\>)|(&(?:[a-z]+|#[0-9]+);|.)/ig,\n\n\t\t\tspanAdditionReplacer: '$1<span class=\"' + classNameWithTag + '\">$2</span>',\n\n\t\t\tspanRemovalRegx: new RegExp('\\\\<span[^\\\\>]+?' + classNameWithTag + '[^\\\\>]{0,}\\\\>(.*?)\\\\<\\\\/span\\\\>', 'ig'),\n\n\t\t\txmlTagRegEx: new RegExp('<[^>][^<]*[^>]+>', 'i'),\n\n\t\t\tltgtRegex: /&lt;|&gt;/g,\n\n\t\t\tbrReplaceRegex: /<br\\/>/ig,\n\n\t\t\ttestStrAvg: 'WgI',\n\n\t\t\t// This style is applied over the parent smartlabel container. The container is kept hidden from the viewport\n\t\t\tparentContainerStyle: {\n\t\t\t\tposition: 'absolute',\n\t\t\t\ttop: '-9999em',\n\t\t\t\twhiteSpace: 'nowrap',\n\t\t\t\tpadding: '0px',\n\t\t\t\twidth: '1px',\n\t\t\t\theight: '1px',\n\t\t\t\toverflow: 'hidden'\n\t\t\t},\n\n\t\t\t// All the style which might affect the text metrics\n\t\t\tsupportedStyle: {\n\t\t\t\tfont: 'font',\n\t\t\t\tfontFamily: 'font-family',\n\t\t\t\t'font-family': 'font-family',\n\t\t\t\tfontWeight: 'font-weight',\n\t\t\t\t'font-weight': 'font-weight',\n\t\t\t\tfontSize: 'font-size',\n\t\t\t\t'font-size': 'font-size',\n\t\t\t\tlineHeight: 'line-height',\n\t\t\t\t'line-height': 'line-height',\n\t\t\t\tfontStyle: 'font-style',\n\t\t\t\t'font-style': 'font-style'\n\t\t\t},\n\n\t\t\t// Get the support list for html the document where the text calcution is to be done.\n\t\t\tgetDocumentSupport: function getDocumentSupport() {\n\t\t\t\tvar childRetriverFn, childRetriverString, noClassTesting;\n\n\t\t\t\tif (doc.getElementsByClassName) {\n\t\t\t\t\tchildRetriverFn = 'getElementsByClassName';\n\t\t\t\t\tchildRetriverString = classNameWithTag;\n\t\t\t\t\tnoClassTesting = true;\n\t\t\t\t} else {\n\t\t\t\t\tchildRetriverFn = 'getElementsByTagName';\n\t\t\t\t\tchildRetriverString = 'span';\n\t\t\t\t\tnoClassTesting = false;\n\t\t\t\t}\n\n\t\t\t\treturn {\n\t\t\t\t\tisIE: /msie/i.test(userAgent) && !win.opera,\n\t\t\t\t\thasSVG: Boolean(win.SVGAngle || doc.implementation.hasFeature('http://www.w3.org/TR/SVG11/feature#BasicStructure', '1.1')),\n\t\t\t\t\tisHeadLess: new RegExp(' HtmlUnit').test(userAgent),\n\t\t\t\t\tisWebKit: new RegExp(' AppleWebKit/').test(userAgent),\n\t\t\t\t\tchildRetriverFn: childRetriverFn,\n\t\t\t\t\tchildRetriverString: childRetriverString,\n\t\t\t\t\tnoClassTesting: noClassTesting\n\t\t\t\t};\n\t\t\t},\n\n\t\t\t/*\n    * Create a html div element and attach it with a parent. All the subsequent operations are performed\n    * by upding this dom tree only.\n    *\n    * @param {HTMLElement} - The html element where the newly created div is to be attached. If not passed,\n    *                      the new div is appended on the body.\n    */\n\t\t\tcreateContainer: function createContainer(containerParent) {\n\t\t\t\tvar body, container;\n\n\t\t\t\tif (containerParent && (containerParent.offsetWidth || containerParent.offsetHeight)) {\n\t\t\t\t\tif (containerParent.appendChild) {\n\t\t\t\t\t\tcontainerParent.appendChild(container = doc.createElement(DIV));\n\t\t\t\t\t\tcontainer.className = containerClass;\n\t\t\t\t\t\tcontainer.setAttribute('aria-hidden', 'true');\n\t\t\t\t\t\tcontainer.setAttribute('role', 'presentation');\n\t\t\t\t\t\treturn container;\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tbody = doc.getElementsByTagName('body')[0];\n\n\t\t\t\t\tif (body && body.appendChild) {\n\t\t\t\t\t\tcontainer = doc.createElement(DIV);\n\t\t\t\t\t\tcontainer.className = containerClass;\n\t\t\t\t\t\tcontainer.setAttribute('aria-hidden', 'true');\n\t\t\t\t\t\tcontainer.setAttribute('role', 'presentation');\n\t\t\t\t\t\tcontainerInstanceCount += 1;\n\t\t\t\t\t\tbody.appendChild(container);\n\t\t\t\t\t\treturn container;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t},\n\n\t\t\t// Finds a approximate position where the text is to be broken\n\t\t\tgetNearestBreakIndex: function getNearestBreakIndex(text, maxWidth, sl) {\n\t\t\t\tif (!text || !text.length) {\n\t\t\t\t\treturn 0;\n\t\t\t\t}\n\n\t\t\t\tvar difference,\n\t\t\t\t    getWidth = sl._getWidthFn(),\n\t\t\t\t    charLen = 0,\n\t\t\t\t    increment = 0,\n\t\t\t\t    oriWidth = getWidth(text),\n\t\t\t\t    avgWidth = oriWidth / text.length;\n\n\t\t\t\tdifference = maxWidth;\n\t\t\t\tcharLen = ceil(maxWidth / avgWidth);\n\n\t\t\t\tif (oriWidth < maxWidth) {\n\t\t\t\t\treturn text.length - 1;\n\t\t\t\t}\n\n\t\t\t\tif (charLen > text.length) {\n\t\t\t\t\tdifference = maxWidth - oriWidth;\n\t\t\t\t\tcharLen = text.length;\n\t\t\t\t}\n\n\t\t\t\twhile (difference > 0) {\n\t\t\t\t\tdifference = maxWidth - getWidth(text.substr(0, charLen));\n\t\t\t\t\tincrement = floor(difference / avgWidth);\n\t\t\t\t\tif (increment) {\n\t\t\t\t\t\tcharLen += increment;\n\t\t\t\t\t} else {\n\t\t\t\t\t\treturn charLen;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\twhile (difference < 0) {\n\t\t\t\t\tdifference = maxWidth - getWidth(text.substr(0, charLen));\n\t\t\t\t\tincrement = floor(difference / avgWidth);\n\t\t\t\t\tif (increment) {\n\t\t\t\t\t\tcharLen += increment;\n\t\t\t\t\t} else {\n\t\t\t\t\t\treturn charLen;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn charLen;\n\t\t\t},\n\n\t\t\t/*\n    * Determine lineheight of a text for a given style. It adds propery lineHeight to the style passed\n    *\n    * @param {Object} - The style based on which the text's metric needs to be calculated. The calculation happens\n    *                  based on fontSize property, if its not present a default font size is assumed.\n    *\n    * @return {Object} - The style that was passed with lineHeight as a named propery set on the object.\n    */\n\t\t\tsetLineHeight: function setLineHeight(styleObj) {\n\t\t\t\tvar fSize = styleObj.fontSize = styleObj.fontSize || '12px';\n\t\t\t\tstyleObj.lineHeight = styleObj.lineHeight || styleObj['line-height'] || parseInt(fSize, 10) * 1.2 + 'px';\n\t\t\t\treturn styleObj;\n\t\t\t}\n\t\t};\n\n\t\treturn lib;\n\t}\n};\n\nexports['default'] = lib;\nmodule.exports = exports['default'];","const Muze = require('./muze');\n\nmodule.exports = Muze.default ? Muze.default : Muze;\n","'use strict';\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\nvar _lib = require('./lib');\n\nvar _lib2 = _interopRequireDefault(_lib);\n\nvar slLib = _lib2['default'].init(typeof window !== \"undefined\" ? window : undefined),\n    doc = slLib.win.document,\n    documentSupport = slLib.getDocumentSupport(),\n    SVG_BBOX_CORRECTION = documentSupport.isWebKit ? 0 : 4.5;\n\nfunction ContainerManager(parentContainer, isBrowserLess, maxContainers) {\n    var svg;\n\n    maxContainers = maxContainers > 5 ? maxContainers : 5;\n    maxContainers = maxContainers < 20 ? maxContainers : 20;\n\n    this.maxContainers = maxContainers;\n    this.first = null;\n    this.last = null;\n    this.containers = {};\n    this.length = 0;\n    this.rootNode = parentContainer;\n\n    if (isBrowserLess) {\n        svg = doc.createElementNS('http://www.w3.org/2000/svg', 'svg');\n        svg.setAttributeNS('http://www.w3.org/2000/svg', 'xlink', 'http://www.w3.org/1999/xlink');\n        svg.setAttributeNS('http://www.w3.org/2000/svg', 'height', '0');\n        svg.setAttributeNS('http://www.w3.org/2000/svg', 'width', '0');\n        this.svgRoot = svg;\n        this.rootNode.appendChild(svg);\n    }\n}\n\nContainerManager.prototype.get = function (style) {\n    var diff,\n        key,\n        containerObj,\n        containers = this.containers,\n        len = this.length,\n        max = this.maxContainers,\n        keyStr = '';\n\n    for (key in slLib.supportedStyle) {\n        if (style[key] !== undefined) {\n            keyStr += slLib.supportedStyle[key] + ':' + style[key] + ';';\n        }\n    }\n\n    if (!keyStr) {\n        return false;\n    }\n\n    if (containerObj = containers[keyStr]) {\n        if (this.first !== containerObj) {\n            containerObj.prev && (containerObj.prev.next = containerObj.next);\n            containerObj.next && (containerObj.next.prev = containerObj.prev);\n            containerObj.next = this.first;\n            containerObj.next.prev = containerObj;\n            this.last === containerObj && (this.last = containerObj.prev);\n            containerObj.prev = null;\n            this.first = containerObj;\n        }\n    } else {\n        if (len >= max) {\n            diff = len - max + 1;\n            // +1 is to remove an extra entry to make space for the new container to be added.\n            while (diff--) {\n                this.removeContainer(this.last);\n            }\n        }\n        containerObj = this.addContainer(keyStr);\n    }\n\n    return containerObj;\n};\n\nContainerManager.prototype.addContainer = function (keyStr) {\n    var node, container;\n\n    this.containers[keyStr] = container = {\n        next: null,\n        prev: null,\n        node: null,\n        ellipsesWidth: 0,\n        lineHeight: 0,\n        dotWidth: 0,\n        avgCharWidth: 4,\n        keyStr: keyStr,\n        charCache: {}\n    };\n\n    // Since the container objects are arranged from most recent to least recent order, we need to add the new\n    // object at the beginning of the list.\n    container.next = this.first;\n    container.next && (container.next.prev = container);\n    this.first = container;\n    if (!this.last) {\n        this.last = container;\n    }\n    this.length += 1;\n\n    node = container.node = doc.createElement('div');\n    this.rootNode.appendChild(node);\n\n    if (documentSupport.isIE && !documentSupport.hasSVG) {\n        node.style.setAttribute('cssText', keyStr);\n    } else {\n        node.setAttribute('style', keyStr);\n    }\n\n    node.setAttribute('aria-hidden', 'true');\n    node.setAttribute('role', 'presentation');\n    node.style.display = 'inline-block';\n\n    node.innerHTML = slLib.testStrAvg; // A test string.\n    container.lineHeight = node.offsetHeight;\n    container.avgCharWidth = node.offsetWidth / 3;\n\n    if (documentSupport.isBrowserLess) {\n        node = container.svgText = doc.createElementNS('http://www.w3.org/2000/svg', 'text');\n        node.setAttribute('style', keyStr);\n        this.svgRoot.appendChild(node);\n\n        node.textContent = slLib.testStrAvg; // A test string.\n        container.lineHeight = node.getBBox().height;\n        container.avgCharWidth = (node.getBBox().width - SVG_BBOX_CORRECTION) / 3;\n\n        node.textContent = '...';\n        container.ellipsesWidth = node.getBBox().width - SVG_BBOX_CORRECTION;\n        node.textContent = '.';\n        container.dotWidth = node.getBBox().width - SVG_BBOX_CORRECTION;\n    } else {\n        node.innerHTML = '...';\n        container.ellipsesWidth = node.offsetWidth;\n        node.innerHTML = '.';\n        container.dotWidth = node.offsetWidth;\n        node.innerHTML = '';\n    }\n\n    return container;\n};\n\nContainerManager.prototype.removeContainer = function (cObj) {\n    var keyStr = cObj.keyStr;\n\n    if (!keyStr || !this.length || !cObj) {\n        return;\n    }\n    this.length -= 1;\n\n    cObj.prev && (cObj.prev.next = cObj.next);\n    cObj.next && (cObj.next.prev = cObj.prev);\n    this.first === cObj && (this.first = cObj.next);\n    this.last === cObj && (this.last = cObj.prev);\n\n    cObj.node.parentNode.removeChild(cObj.node);\n\n    delete this.containers[keyStr];\n};\n\nContainerManager.prototype.dispose = function () {\n    var key,\n        containers = this.containers;\n\n    this.maxContainers = null;\n    for (key in containers) {\n        this.removeContainer(containers[key]);\n    }\n\n    this.rootNode.parentNode.removeChild(this.rootNode);\n\n    this.rootNode = null;\n    this.first = null;\n    this.last = null;\n};\n\nmodule.exports = ContainerManager;","export default function(a, b) {\n  return a < b ? -1 : a > b ? 1 : a >= b ? 0 : NaN;\n}\n","import ascending from \"./ascending\";\n\nexport default function(compare) {\n  if (compare.length === 1) compare = ascendingComparator(compare);\n  return {\n    left: function(a, x, lo, hi) {\n      if (lo == null) lo = 0;\n      if (hi == null) hi = a.length;\n      while (lo < hi) {\n        var mid = lo + hi >>> 1;\n        if (compare(a[mid], x) < 0) lo = mid + 1;\n        else hi = mid;\n      }\n      return lo;\n    },\n    right: function(a, x, lo, hi) {\n      if (lo == null) lo = 0;\n      if (hi == null) hi = a.length;\n      while (lo < hi) {\n        var mid = lo + hi >>> 1;\n        if (compare(a[mid], x) > 0) hi = mid;\n        else lo = mid + 1;\n      }\n      return lo;\n    }\n  };\n}\n\nfunction ascendingComparator(f) {\n  return function(d, x) {\n    return ascending(f(d), x);\n  };\n}\n","import ascending from \"./ascending\";\nimport bisector from \"./bisector\";\n\nvar ascendingBisect = bisector(ascending);\nexport var bisectRight = ascendingBisect.right;\nexport var bisectLeft = ascendingBisect.left;\nexport default bisectRight;\n","import {pair} from \"./pairs\";\n\nexport default function(values0, values1, reduce) {\n  var n0 = values0.length,\n      n1 = values1.length,\n      values = new Array(n0 * n1),\n      i0,\n      i1,\n      i,\n      value0;\n\n  if (reduce == null) reduce = pair;\n\n  for (i0 = i = 0; i0 < n0; ++i0) {\n    for (value0 = values0[i0], i1 = 0; i1 < n1; ++i1, ++i) {\n      values[i] = reduce(value0, values1[i1]);\n    }\n  }\n\n  return values;\n}\n","export default function(x) {\n  return x === null ? NaN : +x;\n}\n","var array = Array.prototype;\n\nexport var slice = array.slice;\nexport var map = array.map;\n","export default function(start, stop, step) {\n  start = +start, stop = +stop, step = (n = arguments.length) < 2 ? (stop = start, start = 0, 1) : n < 3 ? 1 : +step;\n\n  var i = -1,\n      n = Math.max(0, Math.ceil((stop - start) / step)) | 0,\n      range = new Array(n);\n\n  while (++i < n) {\n    range[i] = start + i * step;\n  }\n\n  return range;\n}\n","var e10 = Math.sqrt(50),\n    e5 = Math.sqrt(10),\n    e2 = Math.sqrt(2);\n\nexport default function(start, stop, count) {\n  var reverse,\n      i = -1,\n      n,\n      ticks,\n      step;\n\n  stop = +stop, start = +start, count = +count;\n  if (start === stop && count > 0) return [start];\n  if (reverse = stop < start) n = start, start = stop, stop = n;\n  if ((step = tickIncrement(start, stop, count)) === 0 || !isFinite(step)) return [];\n\n  if (step > 0) {\n    start = Math.ceil(start / step);\n    stop = Math.floor(stop / step);\n    ticks = new Array(n = Math.ceil(stop - start + 1));\n    while (++i < n) ticks[i] = (start + i) * step;\n  } else {\n    start = Math.floor(start * step);\n    stop = Math.ceil(stop * step);\n    ticks = new Array(n = Math.ceil(start - stop + 1));\n    while (++i < n) ticks[i] = (start - i) / step;\n  }\n\n  if (reverse) ticks.reverse();\n\n  return ticks;\n}\n\nexport function tickIncrement(start, stop, count) {\n  var step = (stop - start) / Math.max(0, count),\n      power = Math.floor(Math.log(step) / Math.LN10),\n      error = step / Math.pow(10, power);\n  return power >= 0\n      ? (error >= e10 ? 10 : error >= e5 ? 5 : error >= e2 ? 2 : 1) * Math.pow(10, power)\n      : -Math.pow(10, -power) / (error >= e10 ? 10 : error >= e5 ? 5 : error >= e2 ? 2 : 1);\n}\n\nexport function tickStep(start, stop, count) {\n  var step0 = Math.abs(stop - start) / Math.max(0, count),\n      step1 = Math.pow(10, Math.floor(Math.log(step0) / Math.LN10)),\n      error = step0 / step1;\n  if (error >= e10) step1 *= 10;\n  else if (error >= e5) step1 *= 5;\n  else if (error >= e2) step1 *= 2;\n  return stop < start ? -step1 : step1;\n}\n","export default function(values) {\n  return Math.ceil(Math.log(values.length) / Math.LN2) + 1;\n}\n","import number from \"./number\";\n\nexport default function(values, p, valueof) {\n  if (valueof == null) valueof = number;\n  if (!(n = values.length)) return;\n  if ((p = +p) <= 0 || n < 2) return +valueof(values[0], 0, values);\n  if (p >= 1) return +valueof(values[n - 1], n - 1, values);\n  var n,\n      i = (n - 1) * p,\n      i0 = Math.floor(i),\n      value0 = +valueof(values[i0], i0, values),\n      value1 = +valueof(values[i0 + 1], i0 + 1, values);\n  return value0 + (value1 - value0) * (i - i0);\n}\n","export var prefix = \"$\";\n\nfunction Map() {}\n\nMap.prototype = map.prototype = {\n  constructor: Map,\n  has: function(key) {\n    return (prefix + key) in this;\n  },\n  get: function(key) {\n    return this[prefix + key];\n  },\n  set: function(key, value) {\n    this[prefix + key] = value;\n    return this;\n  },\n  remove: function(key) {\n    var property = prefix + key;\n    return property in this && delete this[property];\n  },\n  clear: function() {\n    for (var property in this) if (property[0] === prefix) delete this[property];\n  },\n  keys: function() {\n    var keys = [];\n    for (var property in this) if (property[0] === prefix) keys.push(property.slice(1));\n    return keys;\n  },\n  values: function() {\n    var values = [];\n    for (var property in this) if (property[0] === prefix) values.push(this[property]);\n    return values;\n  },\n  entries: function() {\n    var entries = [];\n    for (var property in this) if (property[0] === prefix) entries.push({key: property.slice(1), value: this[property]});\n    return entries;\n  },\n  size: function() {\n    var size = 0;\n    for (var property in this) if (property[0] === prefix) ++size;\n    return size;\n  },\n  empty: function() {\n    for (var property in this) if (property[0] === prefix) return false;\n    return true;\n  },\n  each: function(f) {\n    for (var property in this) if (property[0] === prefix) f(this[property], property.slice(1), this);\n  }\n};\n\nfunction map(object, f) {\n  var map = new Map;\n\n  // Copy constructor.\n  if (object instanceof Map) object.each(function(value, key) { map.set(key, value); });\n\n  // Index array by numeric index or specified key function.\n  else if (Array.isArray(object)) {\n    var i = -1,\n        n = object.length,\n        o;\n\n    if (f == null) while (++i < n) map.set(i, object[i]);\n    else while (++i < n) map.set(f(o = object[i], i, object), o);\n  }\n\n  // Convert object to map.\n  else if (object) for (var key in object) map.set(key, object[key]);\n\n  return map;\n}\n\nexport default map;\n","import map from \"./map\";\n\nexport default function() {\n  var keys = [],\n      sortKeys = [],\n      sortValues,\n      rollup,\n      nest;\n\n  function apply(array, depth, createResult, setResult) {\n    if (depth >= keys.length) {\n      if (sortValues != null) array.sort(sortValues);\n      return rollup != null ? rollup(array) : array;\n    }\n\n    var i = -1,\n        n = array.length,\n        key = keys[depth++],\n        keyValue,\n        value,\n        valuesByKey = map(),\n        values,\n        result = createResult();\n\n    while (++i < n) {\n      if (values = valuesByKey.get(keyValue = key(value = array[i]) + \"\")) {\n        values.push(value);\n      } else {\n        valuesByKey.set(keyValue, [value]);\n      }\n    }\n\n    valuesByKey.each(function(values, key) {\n      setResult(result, key, apply(values, depth, createResult, setResult));\n    });\n\n    return result;\n  }\n\n  function entries(map, depth) {\n    if (++depth > keys.length) return map;\n    var array, sortKey = sortKeys[depth - 1];\n    if (rollup != null && depth >= keys.length) array = map.entries();\n    else array = [], map.each(function(v, k) { array.push({key: k, values: entries(v, depth)}); });\n    return sortKey != null ? array.sort(function(a, b) { return sortKey(a.key, b.key); }) : array;\n  }\n\n  return nest = {\n    object: function(array) { return apply(array, 0, createObject, setObject); },\n    map: function(array) { return apply(array, 0, createMap, setMap); },\n    entries: function(array) { return entries(apply(array, 0, createMap, setMap), 0); },\n    key: function(d) { keys.push(d); return nest; },\n    sortKeys: function(order) { sortKeys[keys.length - 1] = order; return nest; },\n    sortValues: function(order) { sortValues = order; return nest; },\n    rollup: function(f) { rollup = f; return nest; }\n  };\n}\n\nfunction createObject() {\n  return {};\n}\n\nfunction setObject(object, key, value) {\n  object[key] = value;\n}\n\nfunction createMap() {\n  return map();\n}\n\nfunction setMap(map, key, value) {\n  map.set(key, value);\n}\n","import {default as map, prefix} from \"./map\";\n\nfunction Set() {}\n\nvar proto = map.prototype;\n\nSet.prototype = set.prototype = {\n  constructor: Set,\n  has: proto.has,\n  add: function(value) {\n    value += \"\";\n    this[prefix + value] = value;\n    return this;\n  },\n  remove: proto.remove,\n  clear: proto.clear,\n  values: proto.keys,\n  size: proto.size,\n  empty: proto.empty,\n  each: proto.each\n};\n\nfunction set(object, f) {\n  var set = new Set;\n\n  // Copy constructor.\n  if (object instanceof Set) object.each(function(value) { set.add(value); });\n\n  // Otherwise, assume it’s an array.\n  else if (object) {\n    var i = -1, n = object.length;\n    if (f == null) while (++i < n) set.add(object[i]);\n    else while (++i < n) set.add(f(object[i], i, object));\n  }\n\n  return set;\n}\n\nexport default set;\n","var array = Array.prototype;\n\nexport var map = array.map;\nexport var slice = array.slice;\n","import {map} from \"d3-collection\";\nimport {slice} from \"./array\";\n\nexport var implicit = {name: \"implicit\"};\n\nexport default function ordinal(range) {\n  var index = map(),\n      domain = [],\n      unknown = implicit;\n\n  range = range == null ? [] : slice.call(range);\n\n  function scale(d) {\n    var key = d + \"\", i = index.get(key);\n    if (!i) {\n      if (unknown !== implicit) return unknown;\n      index.set(key, i = domain.push(d));\n    }\n    return range[(i - 1) % range.length];\n  }\n\n  scale.domain = function(_) {\n    if (!arguments.length) return domain.slice();\n    domain = [], index = map();\n    var i = -1, n = _.length, d, key;\n    while (++i < n) if (!index.has(key = (d = _[i]) + \"\")) index.set(key, domain.push(d));\n    return scale;\n  };\n\n  scale.range = function(_) {\n    return arguments.length ? (range = slice.call(_), scale) : range.slice();\n  };\n\n  scale.unknown = function(_) {\n    return arguments.length ? (unknown = _, scale) : unknown;\n  };\n\n  scale.copy = function() {\n    return ordinal()\n        .domain(domain)\n        .range(range)\n        .unknown(unknown);\n  };\n\n  return scale;\n}\n","import {range as sequence} from \"d3-array\";\nimport ordinal from \"./ordinal\";\n\nexport default function band() {\n  var scale = ordinal().unknown(undefined),\n      domain = scale.domain,\n      ordinalRange = scale.range,\n      range = [0, 1],\n      step,\n      bandwidth,\n      round = false,\n      paddingInner = 0,\n      paddingOuter = 0,\n      align = 0.5;\n\n  delete scale.unknown;\n  function rescale() {\n    var n = domain().length,\n        reverse = range[1] < range[0],\n        start = range[reverse - 0],\n        stop = range[1 - reverse];\n    step = (stop - start) / Math.max(1, n - paddingInner + paddingOuter * 2);\n    if (round) step = Math.floor(step);\n    start += (stop - start - step * (n - paddingInner)) * align;\n    bandwidth = step * (1 - paddingInner);\n    if (round) start = Math.round(start), bandwidth = Math.round(bandwidth);\n    var values = sequence(n).map(function(i) { return start + step * i; });\n    return ordinalRange(reverse ? values.reverse() : values);\n  }\n\n  scale.domain = function(_) {\n    return arguments.length ? (domain(_), rescale()) : domain();\n  };\n\n  scale.range = function(_) {\n    return arguments.length ? (range = [+_[0], +_[1]], rescale()) : range.slice();\n  };\n\n  scale.rangeRound = function(_) {\n    return range = [+_[0], +_[1]], round = true, rescale();\n  };\n\n  scale.bandwidth = function() {\n    return bandwidth;\n  };\n\n  scale.step = function() {\n    return step;\n  };\n\n  scale.round = function(_) {\n    return arguments.length ? (round = !!_, rescale()) : round;\n  };\n\n  scale.padding = function(_) {\n    return arguments.length ? (paddingInner = paddingOuter = Math.max(0, Math.min(1, _)), rescale()) : paddingInner;\n  };\n\n  scale.paddingInner = function(_) {\n    return arguments.length ? (paddingInner = Math.max(0, Math.min(1, _)), rescale()) : paddingInner;\n  };\n\n  scale.paddingOuter = function(_) {\n    return arguments.length ? (paddingOuter = Math.max(0, Math.min(1, _)), rescale()) : paddingOuter;\n  };\n\n  scale.align = function(_) {\n    return arguments.length ? (align = Math.max(0, Math.min(1, _)), rescale()) : align;\n  };\n\n  scale.copy = function() {\n    return band()\n        .domain(domain())\n        .range(range)\n        .round(round)\n        .paddingInner(paddingInner)\n        .paddingOuter(paddingOuter)\n        .align(align);\n  };\n\n  scale.invertExtent = function(r0, r1) {\n    var lo = +r0,\n        hi = arguments.length > 1 ? +r1 : lo,\n        reverse = range[1] < range[0],\n        values = reverse ? ordinalRange().reverse() : ordinalRange(),\n        n = values.length - 1, a, b, t,\n        hiIndex;\n    values.push(values[n] + this.step());\n    // order range inputs, bail if outside of scale range\n    if (hi < lo) t = lo, lo = hi, hi = t;\n    if (hi < values[0] || lo > range[1-reverse]) return undefined;\n\n    // binary search to index into scale range\n    a = Math.max(0, getClosestIndexOf(values, lo));\n    hiIndex = getClosestIndexOf(values, hi);\n    b = lo===hi ? a : Math.max(a, hiIndex - 1);\n\n    // increment index a if lo is within padding gap\n    // if (lo - values[a] > bandwidth + 1e-10) ++a;\n\n    if (reverse) t = a, a = n - b, b = n - t; // map + swap\n    return (a > b) ? undefined : domain().slice(a, b+1);\n  };\n\n  scale.invert = function (r0, r1) {\n    var lo = +r0,\n        hi = arguments.length > 1 ? +r1 : lo,\n        reverse = range[1] < range[0],\n        values = reverse ? ordinalRange().reverse() : ordinalRange(),\n        n = values.length - 1,\n        a,\n        t;\n\n    // order range inputs, bail if outside of scale range\n    if (hi < lo) t = lo, lo = hi, hi = t;\n    if (hi < values[0] || lo > range[1-reverse]) return undefined;\n\n    // binary search to index into scale range\n    a = Math.max(0, getClosestIndexOf(values, lo, 'left'));\n\n    // increment index a if lo is within padding gap\n    // if (lo - values[a] > bandwidth + 1e-10) ++a;\n\n    return domain()[reverse ? n - a : a];\n  }\n  return rescale();\n}\n\nfunction pointish(scale) {\n  var copy = scale.copy;\n\n  scale.padding = scale.paddingOuter;\n  delete scale.paddingInner;\n  delete scale.paddingOuter;\n\n  scale.copy = function() {\n    return pointish(copy());\n  };\n\n  return scale;\n}\n\nexport function point() {\n  return pointish(band().paddingInner(1));\n}\n\nfunction getClosestIndexOf (arr, value, side) {\n  var low = 0,\n      arrLen = arr.length,\n      high = arrLen - 1,\n      highVal,\n      mid,\n      d1,\n      d2;\n\n  while (low < high) {\n      mid = Math.floor((low + high) / 2);\n      d1 = Math.abs(arr[mid] - value);\n      d2 = Math.abs(arr[mid + 1] - value);\n\n      if (d2 <= d1) {\n          low = mid + 1;\n      }\n      else {\n          high = mid;\n      }\n  }\n\n  if (!side) {\n      return high;\n  }\n\n  highVal = arr[high];\n  if (highVal === value) {\n      return high;\n  } else if (highVal > value) {\n      if (high === 0) { return high; }\n      return side === 'left'? high - 1 : high;\n  } else {\n      if (high === arr.length - 1) { return high; }\n      return side === 'left'? high : high + 1;\n  }\n}","export default function(constructor, factory, prototype) {\n  constructor.prototype = factory.prototype = prototype;\n  prototype.constructor = constructor;\n}\n\nexport function extend(parent, definition) {\n  var prototype = Object.create(parent.prototype);\n  for (var key in definition) prototype[key] = definition[key];\n  return prototype;\n}\n","import define, {extend} from \"./define\";\n\nexport function Color() {}\n\nexport var darker = 0.7;\nexport var brighter = 1 / darker;\n\nvar reI = \"\\\\s*([+-]?\\\\d+)\\\\s*\",\n    reN = \"\\\\s*([+-]?\\\\d*\\\\.?\\\\d+(?:[eE][+-]?\\\\d+)?)\\\\s*\",\n    reP = \"\\\\s*([+-]?\\\\d*\\\\.?\\\\d+(?:[eE][+-]?\\\\d+)?)%\\\\s*\",\n    reHex3 = /^#([0-9a-f]{3})$/,\n    reHex6 = /^#([0-9a-f]{6})$/,\n    reRgbInteger = new RegExp(\"^rgb\\\\(\" + [reI, reI, reI] + \"\\\\)$\"),\n    reRgbPercent = new RegExp(\"^rgb\\\\(\" + [reP, reP, reP] + \"\\\\)$\"),\n    reRgbaInteger = new RegExp(\"^rgba\\\\(\" + [reI, reI, reI, reN] + \"\\\\)$\"),\n    reRgbaPercent = new RegExp(\"^rgba\\\\(\" + [reP, reP, reP, reN] + \"\\\\)$\"),\n    reHslPercent = new RegExp(\"^hsl\\\\(\" + [reN, reP, reP] + \"\\\\)$\"),\n    reHslaPercent = new RegExp(\"^hsla\\\\(\" + [reN, reP, reP, reN] + \"\\\\)$\");\n\nvar named = {\n  aliceblue: 0xf0f8ff,\n  antiquewhite: 0xfaebd7,\n  aqua: 0x00ffff,\n  aquamarine: 0x7fffd4,\n  azure: 0xf0ffff,\n  beige: 0xf5f5dc,\n  bisque: 0xffe4c4,\n  black: 0x000000,\n  blanchedalmond: 0xffebcd,\n  blue: 0x0000ff,\n  blueviolet: 0x8a2be2,\n  brown: 0xa52a2a,\n  burlywood: 0xdeb887,\n  cadetblue: 0x5f9ea0,\n  chartreuse: 0x7fff00,\n  chocolate: 0xd2691e,\n  coral: 0xff7f50,\n  cornflowerblue: 0x6495ed,\n  cornsilk: 0xfff8dc,\n  crimson: 0xdc143c,\n  cyan: 0x00ffff,\n  darkblue: 0x00008b,\n  darkcyan: 0x008b8b,\n  darkgoldenrod: 0xb8860b,\n  darkgray: 0xa9a9a9,\n  darkgreen: 0x006400,\n  darkgrey: 0xa9a9a9,\n  darkkhaki: 0xbdb76b,\n  darkmagenta: 0x8b008b,\n  darkolivegreen: 0x556b2f,\n  darkorange: 0xff8c00,\n  darkorchid: 0x9932cc,\n  darkred: 0x8b0000,\n  darksalmon: 0xe9967a,\n  darkseagreen: 0x8fbc8f,\n  darkslateblue: 0x483d8b,\n  darkslategray: 0x2f4f4f,\n  darkslategrey: 0x2f4f4f,\n  darkturquoise: 0x00ced1,\n  darkviolet: 0x9400d3,\n  deeppink: 0xff1493,\n  deepskyblue: 0x00bfff,\n  dimgray: 0x696969,\n  dimgrey: 0x696969,\n  dodgerblue: 0x1e90ff,\n  firebrick: 0xb22222,\n  floralwhite: 0xfffaf0,\n  forestgreen: 0x228b22,\n  fuchsia: 0xff00ff,\n  gainsboro: 0xdcdcdc,\n  ghostwhite: 0xf8f8ff,\n  gold: 0xffd700,\n  goldenrod: 0xdaa520,\n  gray: 0x808080,\n  green: 0x008000,\n  greenyellow: 0xadff2f,\n  grey: 0x808080,\n  honeydew: 0xf0fff0,\n  hotpink: 0xff69b4,\n  indianred: 0xcd5c5c,\n  indigo: 0x4b0082,\n  ivory: 0xfffff0,\n  khaki: 0xf0e68c,\n  lavender: 0xe6e6fa,\n  lavenderblush: 0xfff0f5,\n  lawngreen: 0x7cfc00,\n  lemonchiffon: 0xfffacd,\n  lightblue: 0xadd8e6,\n  lightcoral: 0xf08080,\n  lightcyan: 0xe0ffff,\n  lightgoldenrodyellow: 0xfafad2,\n  lightgray: 0xd3d3d3,\n  lightgreen: 0x90ee90,\n  lightgrey: 0xd3d3d3,\n  lightpink: 0xffb6c1,\n  lightsalmon: 0xffa07a,\n  lightseagreen: 0x20b2aa,\n  lightskyblue: 0x87cefa,\n  lightslategray: 0x778899,\n  lightslategrey: 0x778899,\n  lightsteelblue: 0xb0c4de,\n  lightyellow: 0xffffe0,\n  lime: 0x00ff00,\n  limegreen: 0x32cd32,\n  linen: 0xfaf0e6,\n  magenta: 0xff00ff,\n  maroon: 0x800000,\n  mediumaquamarine: 0x66cdaa,\n  mediumblue: 0x0000cd,\n  mediumorchid: 0xba55d3,\n  mediumpurple: 0x9370db,\n  mediumseagreen: 0x3cb371,\n  mediumslateblue: 0x7b68ee,\n  mediumspringgreen: 0x00fa9a,\n  mediumturquoise: 0x48d1cc,\n  mediumvioletred: 0xc71585,\n  midnightblue: 0x191970,\n  mintcream: 0xf5fffa,\n  mistyrose: 0xffe4e1,\n  moccasin: 0xffe4b5,\n  navajowhite: 0xffdead,\n  navy: 0x000080,\n  oldlace: 0xfdf5e6,\n  olive: 0x808000,\n  olivedrab: 0x6b8e23,\n  orange: 0xffa500,\n  orangered: 0xff4500,\n  orchid: 0xda70d6,\n  palegoldenrod: 0xeee8aa,\n  palegreen: 0x98fb98,\n  paleturquoise: 0xafeeee,\n  palevioletred: 0xdb7093,\n  papayawhip: 0xffefd5,\n  peachpuff: 0xffdab9,\n  peru: 0xcd853f,\n  pink: 0xffc0cb,\n  plum: 0xdda0dd,\n  powderblue: 0xb0e0e6,\n  purple: 0x800080,\n  rebeccapurple: 0x663399,\n  red: 0xff0000,\n  rosybrown: 0xbc8f8f,\n  royalblue: 0x4169e1,\n  saddlebrown: 0x8b4513,\n  salmon: 0xfa8072,\n  sandybrown: 0xf4a460,\n  seagreen: 0x2e8b57,\n  seashell: 0xfff5ee,\n  sienna: 0xa0522d,\n  silver: 0xc0c0c0,\n  skyblue: 0x87ceeb,\n  slateblue: 0x6a5acd,\n  slategray: 0x708090,\n  slategrey: 0x708090,\n  snow: 0xfffafa,\n  springgreen: 0x00ff7f,\n  steelblue: 0x4682b4,\n  tan: 0xd2b48c,\n  teal: 0x008080,\n  thistle: 0xd8bfd8,\n  tomato: 0xff6347,\n  turquoise: 0x40e0d0,\n  violet: 0xee82ee,\n  wheat: 0xf5deb3,\n  white: 0xffffff,\n  whitesmoke: 0xf5f5f5,\n  yellow: 0xffff00,\n  yellowgreen: 0x9acd32\n};\n\ndefine(Color, color, {\n  displayable: function() {\n    return this.rgb().displayable();\n  },\n  hex: function() {\n    return this.rgb().hex();\n  },\n  toString: function() {\n    return this.rgb() + \"\";\n  }\n});\n\nexport default function color(format) {\n  var m;\n  format = (format + \"\").trim().toLowerCase();\n  return (m = reHex3.exec(format)) ? (m = parseInt(m[1], 16), new Rgb((m >> 8 & 0xf) | (m >> 4 & 0x0f0), (m >> 4 & 0xf) | (m & 0xf0), ((m & 0xf) << 4) | (m & 0xf), 1)) // #f00\n      : (m = reHex6.exec(format)) ? rgbn(parseInt(m[1], 16)) // #ff0000\n      : (m = reRgbInteger.exec(format)) ? new Rgb(m[1], m[2], m[3], 1) // rgb(255, 0, 0)\n      : (m = reRgbPercent.exec(format)) ? new Rgb(m[1] * 255 / 100, m[2] * 255 / 100, m[3] * 255 / 100, 1) // rgb(100%, 0%, 0%)\n      : (m = reRgbaInteger.exec(format)) ? rgba(m[1], m[2], m[3], m[4]) // rgba(255, 0, 0, 1)\n      : (m = reRgbaPercent.exec(format)) ? rgba(m[1] * 255 / 100, m[2] * 255 / 100, m[3] * 255 / 100, m[4]) // rgb(100%, 0%, 0%, 1)\n      : (m = reHslPercent.exec(format)) ? hsla(m[1], m[2] / 100, m[3] / 100, 1) // hsl(120, 50%, 50%)\n      : (m = reHslaPercent.exec(format)) ? hsla(m[1], m[2] / 100, m[3] / 100, m[4]) // hsla(120, 50%, 50%, 1)\n      : named.hasOwnProperty(format) ? rgbn(named[format])\n      : format === \"transparent\" ? new Rgb(NaN, NaN, NaN, 0)\n      : null;\n}\n\nfunction rgbn(n) {\n  return new Rgb(n >> 16 & 0xff, n >> 8 & 0xff, n & 0xff, 1);\n}\n\nfunction rgba(r, g, b, a) {\n  if (a <= 0) r = g = b = NaN;\n  return new Rgb(r, g, b, a);\n}\n\nexport function rgbConvert(o) {\n  if (!(o instanceof Color)) o = color(o);\n  if (!o) return new Rgb;\n  o = o.rgb();\n  return new Rgb(o.r, o.g, o.b, o.opacity);\n}\n\nexport function rgb(r, g, b, opacity) {\n  return arguments.length === 1 ? rgbConvert(r) : new Rgb(r, g, b, opacity == null ? 1 : opacity);\n}\n\nexport function Rgb(r, g, b, opacity) {\n  this.r = +r;\n  this.g = +g;\n  this.b = +b;\n  this.opacity = +opacity;\n}\n\ndefine(Rgb, rgb, extend(Color, {\n  brighter: function(k) {\n    k = k == null ? brighter : Math.pow(brighter, k);\n    return new Rgb(this.r * k, this.g * k, this.b * k, this.opacity);\n  },\n  darker: function(k) {\n    k = k == null ? darker : Math.pow(darker, k);\n    return new Rgb(this.r * k, this.g * k, this.b * k, this.opacity);\n  },\n  rgb: function() {\n    return this;\n  },\n  displayable: function() {\n    return (0 <= this.r && this.r <= 255)\n        && (0 <= this.g && this.g <= 255)\n        && (0 <= this.b && this.b <= 255)\n        && (0 <= this.opacity && this.opacity <= 1);\n  },\n  hex: function() {\n    return \"#\" + hex(this.r) + hex(this.g) + hex(this.b);\n  },\n  toString: function() {\n    var a = this.opacity; a = isNaN(a) ? 1 : Math.max(0, Math.min(1, a));\n    return (a === 1 ? \"rgb(\" : \"rgba(\")\n        + Math.max(0, Math.min(255, Math.round(this.r) || 0)) + \", \"\n        + Math.max(0, Math.min(255, Math.round(this.g) || 0)) + \", \"\n        + Math.max(0, Math.min(255, Math.round(this.b) || 0))\n        + (a === 1 ? \")\" : \", \" + a + \")\");\n  }\n}));\n\nfunction hex(value) {\n  value = Math.max(0, Math.min(255, Math.round(value) || 0));\n  return (value < 16 ? \"0\" : \"\") + value.toString(16);\n}\n\nfunction hsla(h, s, l, a) {\n  if (a <= 0) h = s = l = NaN;\n  else if (l <= 0 || l >= 1) h = s = NaN;\n  else if (s <= 0) h = NaN;\n  return new Hsl(h, s, l, a);\n}\n\nexport function hslConvert(o) {\n  if (o instanceof Hsl) return new Hsl(o.h, o.s, o.l, o.opacity);\n  if (!(o instanceof Color)) o = color(o);\n  if (!o) return new Hsl;\n  if (o instanceof Hsl) return o;\n  o = o.rgb();\n  var r = o.r / 255,\n      g = o.g / 255,\n      b = o.b / 255,\n      min = Math.min(r, g, b),\n      max = Math.max(r, g, b),\n      h = NaN,\n      s = max - min,\n      l = (max + min) / 2;\n  if (s) {\n    if (r === max) h = (g - b) / s + (g < b) * 6;\n    else if (g === max) h = (b - r) / s + 2;\n    else h = (r - g) / s + 4;\n    s /= l < 0.5 ? max + min : 2 - max - min;\n    h *= 60;\n  } else {\n    s = l > 0 && l < 1 ? 0 : h;\n  }\n  return new Hsl(h, s, l, o.opacity);\n}\n\nexport function hsl(h, s, l, opacity) {\n  return arguments.length === 1 ? hslConvert(h) : new Hsl(h, s, l, opacity == null ? 1 : opacity);\n}\n\nfunction Hsl(h, s, l, opacity) {\n  this.h = +h;\n  this.s = +s;\n  this.l = +l;\n  this.opacity = +opacity;\n}\n\ndefine(Hsl, hsl, extend(Color, {\n  brighter: function(k) {\n    k = k == null ? brighter : Math.pow(brighter, k);\n    return new Hsl(this.h, this.s, this.l * k, this.opacity);\n  },\n  darker: function(k) {\n    k = k == null ? darker : Math.pow(darker, k);\n    return new Hsl(this.h, this.s, this.l * k, this.opacity);\n  },\n  rgb: function() {\n    var h = this.h % 360 + (this.h < 0) * 360,\n        s = isNaN(h) || isNaN(this.s) ? 0 : this.s,\n        l = this.l,\n        m2 = l + (l < 0.5 ? l : 1 - l) * s,\n        m1 = 2 * l - m2;\n    return new Rgb(\n      hsl2rgb(h >= 240 ? h - 240 : h + 120, m1, m2),\n      hsl2rgb(h, m1, m2),\n      hsl2rgb(h < 120 ? h + 240 : h - 120, m1, m2),\n      this.opacity\n    );\n  },\n  displayable: function() {\n    return (0 <= this.s && this.s <= 1 || isNaN(this.s))\n        && (0 <= this.l && this.l <= 1)\n        && (0 <= this.opacity && this.opacity <= 1);\n  }\n}));\n\n/* From FvD 13.37, CSS Color Module Level 3 */\nfunction hsl2rgb(h, m1, m2) {\n  return (h < 60 ? m1 + (m2 - m1) * h / 60\n      : h < 180 ? m2\n      : h < 240 ? m1 + (m2 - m1) * (240 - h) / 60\n      : m1) * 255;\n}\n","export var deg2rad = Math.PI / 180;\nexport var rad2deg = 180 / Math.PI;\n","import define, {extend} from \"./define\";\nimport {Color, rgbConvert, Rgb} from \"./color\";\nimport {deg2rad, rad2deg} from \"./math\";\n\n// https://beta.observablehq.com/@mbostock/lab-and-rgb\nvar K = 18,\n    Xn = 0.96422,\n    Yn = 1,\n    Zn = 0.82521,\n    t0 = 4 / 29,\n    t1 = 6 / 29,\n    t2 = 3 * t1 * t1,\n    t3 = t1 * t1 * t1;\n\nfunction labConvert(o) {\n  if (o instanceof Lab) return new Lab(o.l, o.a, o.b, o.opacity);\n  if (o instanceof Hcl) {\n    if (isNaN(o.h)) return new Lab(o.l, 0, 0, o.opacity);\n    var h = o.h * deg2rad;\n    return new Lab(o.l, Math.cos(h) * o.c, Math.sin(h) * o.c, o.opacity);\n  }\n  if (!(o instanceof Rgb)) o = rgbConvert(o);\n  var r = rgb2lrgb(o.r),\n      g = rgb2lrgb(o.g),\n      b = rgb2lrgb(o.b),\n      y = xyz2lab((0.2225045 * r + 0.7168786 * g + 0.0606169 * b) / Yn), x, z;\n  if (r === g && g === b) x = z = y; else {\n    x = xyz2lab((0.4360747 * r + 0.3850649 * g + 0.1430804 * b) / Xn);\n    z = xyz2lab((0.0139322 * r + 0.0971045 * g + 0.7141733 * b) / Zn);\n  }\n  return new Lab(116 * y - 16, 500 * (x - y), 200 * (y - z), o.opacity);\n}\n\nexport function gray(l, opacity) {\n  return new Lab(l, 0, 0, opacity == null ? 1 : opacity);\n}\n\nexport default function lab(l, a, b, opacity) {\n  return arguments.length === 1 ? labConvert(l) : new Lab(l, a, b, opacity == null ? 1 : opacity);\n}\n\nexport function Lab(l, a, b, opacity) {\n  this.l = +l;\n  this.a = +a;\n  this.b = +b;\n  this.opacity = +opacity;\n}\n\ndefine(Lab, lab, extend(Color, {\n  brighter: function(k) {\n    return new Lab(this.l + K * (k == null ? 1 : k), this.a, this.b, this.opacity);\n  },\n  darker: function(k) {\n    return new Lab(this.l - K * (k == null ? 1 : k), this.a, this.b, this.opacity);\n  },\n  rgb: function() {\n    var y = (this.l + 16) / 116,\n        x = isNaN(this.a) ? y : y + this.a / 500,\n        z = isNaN(this.b) ? y : y - this.b / 200;\n    x = Xn * lab2xyz(x);\n    y = Yn * lab2xyz(y);\n    z = Zn * lab2xyz(z);\n    return new Rgb(\n      lrgb2rgb( 3.1338561 * x - 1.6168667 * y - 0.4906146 * z),\n      lrgb2rgb(-0.9787684 * x + 1.9161415 * y + 0.0334540 * z),\n      lrgb2rgb( 0.0719453 * x - 0.2289914 * y + 1.4052427 * z),\n      this.opacity\n    );\n  }\n}));\n\nfunction xyz2lab(t) {\n  return t > t3 ? Math.pow(t, 1 / 3) : t / t2 + t0;\n}\n\nfunction lab2xyz(t) {\n  return t > t1 ? t * t * t : t2 * (t - t0);\n}\n\nfunction lrgb2rgb(x) {\n  return 255 * (x <= 0.0031308 ? 12.92 * x : 1.055 * Math.pow(x, 1 / 2.4) - 0.055);\n}\n\nfunction rgb2lrgb(x) {\n  return (x /= 255) <= 0.04045 ? x / 12.92 : Math.pow((x + 0.055) / 1.055, 2.4);\n}\n\nfunction hclConvert(o) {\n  if (o instanceof Hcl) return new Hcl(o.h, o.c, o.l, o.opacity);\n  if (!(o instanceof Lab)) o = labConvert(o);\n  if (o.a === 0 && o.b === 0) return new Hcl(NaN, 0, o.l, o.opacity);\n  var h = Math.atan2(o.b, o.a) * rad2deg;\n  return new Hcl(h < 0 ? h + 360 : h, Math.sqrt(o.a * o.a + o.b * o.b), o.l, o.opacity);\n}\n\nexport function lch(l, c, h, opacity) {\n  return arguments.length === 1 ? hclConvert(l) : new Hcl(h, c, l, opacity == null ? 1 : opacity);\n}\n\nexport function hcl(h, c, l, opacity) {\n  return arguments.length === 1 ? hclConvert(h) : new Hcl(h, c, l, opacity == null ? 1 : opacity);\n}\n\nexport function Hcl(h, c, l, opacity) {\n  this.h = +h;\n  this.c = +c;\n  this.l = +l;\n  this.opacity = +opacity;\n}\n\ndefine(Hcl, hcl, extend(Color, {\n  brighter: function(k) {\n    return new Hcl(this.h, this.c, this.l + K * (k == null ? 1 : k), this.opacity);\n  },\n  darker: function(k) {\n    return new Hcl(this.h, this.c, this.l - K * (k == null ? 1 : k), this.opacity);\n  },\n  rgb: function() {\n    return labConvert(this).rgb();\n  }\n}));\n","import define, {extend} from \"./define\";\nimport {Color, rgbConvert, Rgb, darker, brighter} from \"./color\";\nimport {deg2rad, rad2deg} from \"./math\";\n\nvar A = -0.14861,\n    B = +1.78277,\n    C = -0.29227,\n    D = -0.90649,\n    E = +1.97294,\n    ED = E * D,\n    EB = E * B,\n    BC_DA = B * C - D * A;\n\nfunction cubehelixConvert(o) {\n  if (o instanceof Cubehelix) return new Cubehelix(o.h, o.s, o.l, o.opacity);\n  if (!(o instanceof Rgb)) o = rgbConvert(o);\n  var r = o.r / 255,\n      g = o.g / 255,\n      b = o.b / 255,\n      l = (BC_DA * b + ED * r - EB * g) / (BC_DA + ED - EB),\n      bl = b - l,\n      k = (E * (g - l) - C * bl) / D,\n      s = Math.sqrt(k * k + bl * bl) / (E * l * (1 - l)), // NaN if l=0 or l=1\n      h = s ? Math.atan2(k, bl) * rad2deg - 120 : NaN;\n  return new Cubehelix(h < 0 ? h + 360 : h, s, l, o.opacity);\n}\n\nexport default function cubehelix(h, s, l, opacity) {\n  return arguments.length === 1 ? cubehelixConvert(h) : new Cubehelix(h, s, l, opacity == null ? 1 : opacity);\n}\n\nexport function Cubehelix(h, s, l, opacity) {\n  this.h = +h;\n  this.s = +s;\n  this.l = +l;\n  this.opacity = +opacity;\n}\n\ndefine(Cubehelix, cubehelix, extend(Color, {\n  brighter: function(k) {\n    k = k == null ? brighter : Math.pow(brighter, k);\n    return new Cubehelix(this.h, this.s, this.l * k, this.opacity);\n  },\n  darker: function(k) {\n    k = k == null ? darker : Math.pow(darker, k);\n    return new Cubehelix(this.h, this.s, this.l * k, this.opacity);\n  },\n  rgb: function() {\n    var h = isNaN(this.h) ? 0 : (this.h + 120) * deg2rad,\n        l = +this.l,\n        a = isNaN(this.s) ? 0 : this.s * l * (1 - l),\n        cosh = Math.cos(h),\n        sinh = Math.sin(h);\n    return new Rgb(\n      255 * (l + a * (A * cosh + B * sinh)),\n      255 * (l + a * (C * cosh + D * sinh)),\n      255 * (l + a * (E * cosh)),\n      this.opacity\n    );\n  }\n}));\n","export function basis(t1, v0, v1, v2, v3) {\n  var t2 = t1 * t1, t3 = t2 * t1;\n  return ((1 - 3 * t1 + 3 * t2 - t3) * v0\n      + (4 - 6 * t2 + 3 * t3) * v1\n      + (1 + 3 * t1 + 3 * t2 - 3 * t3) * v2\n      + t3 * v3) / 6;\n}\n\nexport default function(values) {\n  var n = values.length - 1;\n  return function(t) {\n    var i = t <= 0 ? (t = 0) : t >= 1 ? (t = 1, n - 1) : Math.floor(t * n),\n        v1 = values[i],\n        v2 = values[i + 1],\n        v0 = i > 0 ? values[i - 1] : 2 * v1 - v2,\n        v3 = i < n - 1 ? values[i + 2] : 2 * v2 - v1;\n    return basis((t - i / n) * n, v0, v1, v2, v3);\n  };\n}\n","export default function(x) {\n  return function() {\n    return x;\n  };\n}\n","import constant from \"./constant\";\n\nfunction linear(a, d) {\n  return function(t) {\n    return a + t * d;\n  };\n}\n\nfunction exponential(a, b, y) {\n  return a = Math.pow(a, y), b = Math.pow(b, y) - a, y = 1 / y, function(t) {\n    return Math.pow(a + t * b, y);\n  };\n}\n\nexport function hue(a, b) {\n  var d = b - a;\n  return d ? linear(a, d > 180 || d < -180 ? d - 360 * Math.round(d / 360) : d) : constant(isNaN(a) ? b : a);\n}\n\nexport function gamma(y) {\n  return (y = +y) === 1 ? nogamma : function(a, b) {\n    return b - a ? exponential(a, b, y) : constant(isNaN(a) ? b : a);\n  };\n}\n\nexport default function nogamma(a, b) {\n  var d = b - a;\n  return d ? linear(a, d) : constant(isNaN(a) ? b : a);\n}\n","import {rgb as colorRgb} from \"d3-color\";\nimport basis from \"./basis\";\nimport basisClosed from \"./basisClosed\";\nimport nogamma, {gamma} from \"./color\";\n\nexport default (function rgbGamma(y) {\n  var color = gamma(y);\n\n  function rgb(start, end) {\n    var r = color((start = colorRgb(start)).r, (end = colorRgb(end)).r),\n        g = color(start.g, end.g),\n        b = color(start.b, end.b),\n        opacity = nogamma(start.opacity, end.opacity);\n    return function(t) {\n      start.r = r(t);\n      start.g = g(t);\n      start.b = b(t);\n      start.opacity = opacity(t);\n      return start + \"\";\n    };\n  }\n\n  rgb.gamma = rgbGamma;\n\n  return rgb;\n})(1);\n\nfunction rgbSpline(spline) {\n  return function(colors) {\n    var n = colors.length,\n        r = new Array(n),\n        g = new Array(n),\n        b = new Array(n),\n        i, color;\n    for (i = 0; i < n; ++i) {\n      color = colorRgb(colors[i]);\n      r[i] = color.r || 0;\n      g[i] = color.g || 0;\n      b[i] = color.b || 0;\n    }\n    r = spline(r);\n    g = spline(g);\n    b = spline(b);\n    color.opacity = 1;\n    return function(t) {\n      color.r = r(t);\n      color.g = g(t);\n      color.b = b(t);\n      return color + \"\";\n    };\n  };\n}\n\nexport var rgbBasis = rgbSpline(basis);\nexport var rgbBasisClosed = rgbSpline(basisClosed);\n","export default function(a, b) {\n  return a = +a, b -= a, function(t) {\n    return a + b * t;\n  };\n}\n","import {basis} from \"./basis\";\n\nexport default function(values) {\n  var n = values.length;\n  return function(t) {\n    var i = Math.floor(((t %= 1) < 0 ? ++t : t) * n),\n        v0 = values[(i + n - 1) % n],\n        v1 = values[i % n],\n        v2 = values[(i + 1) % n],\n        v3 = values[(i + 2) % n];\n    return basis((t - i / n) * n, v0, v1, v2, v3);\n  };\n}\n","import value from \"./value\";\n\nexport default function(a, b) {\n  var i = {},\n      c = {},\n      k;\n\n  if (a === null || typeof a !== \"object\") a = {};\n  if (b === null || typeof b !== \"object\") b = {};\n\n  for (k in b) {\n    if (k in a) {\n      i[k] = value(a[k], b[k]);\n    } else {\n      c[k] = b[k];\n    }\n  }\n\n  return function(t) {\n    for (k in i) c[k] = i[k](t);\n    return c;\n  };\n}\n","import number from \"./number\";\n\nvar reA = /[-+]?(?:\\d+\\.?\\d*|\\.?\\d+)(?:[eE][-+]?\\d+)?/g,\n    reB = new RegExp(reA.source, \"g\");\n\nfunction zero(b) {\n  return function() {\n    return b;\n  };\n}\n\nfunction one(b) {\n  return function(t) {\n    return b(t) + \"\";\n  };\n}\n\nexport default function(a, b) {\n  var bi = reA.lastIndex = reB.lastIndex = 0, // scan index for next number in b\n      am, // current match in a\n      bm, // current match in b\n      bs, // string preceding current number in b, if any\n      i = -1, // index in s\n      s = [], // string constants and placeholders\n      q = []; // number interpolators\n\n  // Coerce inputs to strings.\n  a = a + \"\", b = b + \"\";\n\n  // Interpolate pairs of numbers in a & b.\n  while ((am = reA.exec(a))\n      && (bm = reB.exec(b))) {\n    if ((bs = bm.index) > bi) { // a string precedes the next number in b\n      bs = b.slice(bi, bs);\n      if (s[i]) s[i] += bs; // coalesce with previous string\n      else s[++i] = bs;\n    }\n    if ((am = am[0]) === (bm = bm[0])) { // numbers in a & b match\n      if (s[i]) s[i] += bm; // coalesce with previous string\n      else s[++i] = bm;\n    } else { // interpolate non-matching numbers\n      s[++i] = null;\n      q.push({i: i, x: number(am, bm)});\n    }\n    bi = reB.lastIndex;\n  }\n\n  // Add remains of b.\n  if (bi < b.length) {\n    bs = b.slice(bi);\n    if (s[i]) s[i] += bs; // coalesce with previous string\n    else s[++i] = bs;\n  }\n\n  // Special optimization for only a single match.\n  // Otherwise, interpolate each of the numbers and rejoin the string.\n  return s.length < 2 ? (q[0]\n      ? one(q[0].x)\n      : zero(b))\n      : (b = q.length, function(t) {\n          for (var i = 0, o; i < b; ++i) s[(o = q[i]).i] = o.x(t);\n          return s.join(\"\");\n        });\n}\n","import {color} from \"d3-color\";\nimport rgb from \"./rgb\";\nimport array from \"./array\";\nimport date from \"./date\";\nimport number from \"./number\";\nimport object from \"./object\";\nimport string from \"./string\";\nimport constant from \"./constant\";\n\nexport default function(a, b) {\n  var t = typeof b, c;\n  return b == null || t === \"boolean\" ? constant(b)\n      : (t === \"number\" ? number\n      : t === \"string\" ? ((c = color(b)) ? (b = c, rgb) : string)\n      : b instanceof color ? rgb\n      : b instanceof Date ? date\n      : Array.isArray(b) ? array\n      : typeof b.valueOf !== \"function\" && typeof b.toString !== \"function\" || isNaN(b) ? object\n      : number)(a, b);\n}\n","import decompose, {identity} from \"./decompose\";\n\nvar cssNode,\n    cssRoot,\n    cssView,\n    svgNode;\n\nexport function parseCss(value) {\n  if (value === \"none\") return identity;\n  if (!cssNode) cssNode = document.createElement(\"DIV\"), cssRoot = document.documentElement, cssView = document.defaultView;\n  cssNode.style.transform = value;\n  value = cssView.getComputedStyle(cssRoot.appendChild(cssNode), null).getPropertyValue(\"transform\");\n  cssRoot.removeChild(cssNode);\n  value = value.slice(7, -1).split(\",\");\n  return decompose(+value[0], +value[1], +value[2], +value[3], +value[4], +value[5]);\n}\n\nexport function parseSvg(value) {\n  if (value == null) return identity;\n  if (!svgNode) svgNode = document.createElementNS(\"http://www.w3.org/2000/svg\", \"g\");\n  svgNode.setAttribute(\"transform\", value);\n  if (!(value = svgNode.transform.baseVal.consolidate())) return identity;\n  value = value.matrix;\n  return decompose(value.a, value.b, value.c, value.d, value.e, value.f);\n}\n","export default function(a, b) {\n  var d = new Date;\n  return a = +a, b -= a, function(t) {\n    return d.setTime(a + b * t), d;\n  };\n}\n","import value from \"./value\";\n\nexport default function(a, b) {\n  var nb = b ? b.length : 0,\n      na = a ? Math.min(nb, a.length) : 0,\n      x = new Array(na),\n      c = new Array(nb),\n      i;\n\n  for (i = 0; i < na; ++i) x[i] = value(a[i], b[i]);\n  for (; i < nb; ++i) c[i] = b[i];\n\n  return function(t) {\n    for (i = 0; i < na; ++i) c[i] = x[i](t);\n    return c;\n  };\n}\n","export default function(a, b) {\n  return a = +a, b -= a, function(t) {\n    return Math.round(a + b * t);\n  };\n}\n","var degrees = 180 / Math.PI;\n\nexport var identity = {\n  translateX: 0,\n  translateY: 0,\n  rotate: 0,\n  skewX: 0,\n  scaleX: 1,\n  scaleY: 1\n};\n\nexport default function(a, b, c, d, e, f) {\n  var scaleX, scaleY, skewX;\n  if (scaleX = Math.sqrt(a * a + b * b)) a /= scaleX, b /= scaleX;\n  if (skewX = a * c + b * d) c -= a * skewX, d -= b * skewX;\n  if (scaleY = Math.sqrt(c * c + d * d)) c /= scaleY, d /= scaleY, skewX /= scaleY;\n  if (a * d < b * c) a = -a, b = -b, skewX = -skewX, scaleX = -scaleX;\n  return {\n    translateX: e,\n    translateY: f,\n    rotate: Math.atan2(b, a) * degrees,\n    skewX: Math.atan(skewX) * degrees,\n    scaleX: scaleX,\n    scaleY: scaleY\n  };\n}\n","import number from \"../number\";\nimport {parseCss, parseSvg} from \"./parse\";\n\nfunction interpolateTransform(parse, pxComma, pxParen, degParen) {\n\n  function pop(s) {\n    return s.length ? s.pop() + \" \" : \"\";\n  }\n\n  function translate(xa, ya, xb, yb, s, q) {\n    if (xa !== xb || ya !== yb) {\n      var i = s.push(\"translate(\", null, pxComma, null, pxParen);\n      q.push({i: i - 4, x: number(xa, xb)}, {i: i - 2, x: number(ya, yb)});\n    } else if (xb || yb) {\n      s.push(\"translate(\" + xb + pxComma + yb + pxParen);\n    }\n  }\n\n  function rotate(a, b, s, q) {\n    if (a !== b) {\n      if (a - b > 180) b += 360; else if (b - a > 180) a += 360; // shortest path\n      q.push({i: s.push(pop(s) + \"rotate(\", null, degParen) - 2, x: number(a, b)});\n    } else if (b) {\n      s.push(pop(s) + \"rotate(\" + b + degParen);\n    }\n  }\n\n  function skewX(a, b, s, q) {\n    if (a !== b) {\n      q.push({i: s.push(pop(s) + \"skewX(\", null, degParen) - 2, x: number(a, b)});\n    } else if (b) {\n      s.push(pop(s) + \"skewX(\" + b + degParen);\n    }\n  }\n\n  function scale(xa, ya, xb, yb, s, q) {\n    if (xa !== xb || ya !== yb) {\n      var i = s.push(pop(s) + \"scale(\", null, \",\", null, \")\");\n      q.push({i: i - 4, x: number(xa, xb)}, {i: i - 2, x: number(ya, yb)});\n    } else if (xb !== 1 || yb !== 1) {\n      s.push(pop(s) + \"scale(\" + xb + \",\" + yb + \")\");\n    }\n  }\n\n  return function(a, b) {\n    var s = [], // string constants and placeholders\n        q = []; // number interpolators\n    a = parse(a), b = parse(b);\n    translate(a.translateX, a.translateY, b.translateX, b.translateY, s, q);\n    rotate(a.rotate, b.rotate, s, q);\n    skewX(a.skewX, b.skewX, s, q);\n    scale(a.scaleX, a.scaleY, b.scaleX, b.scaleY, s, q);\n    a = b = null; // gc\n    return function(t) {\n      var i = -1, n = q.length, o;\n      while (++i < n) s[(o = q[i]).i] = o.x(t);\n      return s.join(\"\");\n    };\n  };\n}\n\nexport var interpolateTransformCss = interpolateTransform(parseCss, \"px, \", \"px)\", \"deg)\");\nexport var interpolateTransformSvg = interpolateTransform(parseSvg, \", \", \")\", \")\");\n","var rho = Math.SQRT2,\n    rho2 = 2,\n    rho4 = 4,\n    epsilon2 = 1e-12;\n\nfunction cosh(x) {\n  return ((x = Math.exp(x)) + 1 / x) / 2;\n}\n\nfunction sinh(x) {\n  return ((x = Math.exp(x)) - 1 / x) / 2;\n}\n\nfunction tanh(x) {\n  return ((x = Math.exp(2 * x)) - 1) / (x + 1);\n}\n\n// p0 = [ux0, uy0, w0]\n// p1 = [ux1, uy1, w1]\nexport default function(p0, p1) {\n  var ux0 = p0[0], uy0 = p0[1], w0 = p0[2],\n      ux1 = p1[0], uy1 = p1[1], w1 = p1[2],\n      dx = ux1 - ux0,\n      dy = uy1 - uy0,\n      d2 = dx * dx + dy * dy,\n      i,\n      S;\n\n  // Special case for u0 ≅ u1.\n  if (d2 < epsilon2) {\n    S = Math.log(w1 / w0) / rho;\n    i = function(t) {\n      return [\n        ux0 + t * dx,\n        uy0 + t * dy,\n        w0 * Math.exp(rho * t * S)\n      ];\n    }\n  }\n\n  // General case.\n  else {\n    var d1 = Math.sqrt(d2),\n        b0 = (w1 * w1 - w0 * w0 + rho4 * d2) / (2 * w0 * rho2 * d1),\n        b1 = (w1 * w1 - w0 * w0 - rho4 * d2) / (2 * w1 * rho2 * d1),\n        r0 = Math.log(Math.sqrt(b0 * b0 + 1) - b0),\n        r1 = Math.log(Math.sqrt(b1 * b1 + 1) - b1);\n    S = (r1 - r0) / rho;\n    i = function(t) {\n      var s = t * S,\n          coshr0 = cosh(r0),\n          u = w0 / (rho2 * d1) * (coshr0 * tanh(rho * s + r0) - sinh(r0));\n      return [\n        ux0 + u * dx,\n        uy0 + u * dy,\n        w0 * coshr0 / cosh(rho * s + r0)\n      ];\n    }\n  }\n\n  i.duration = S * 1000;\n\n  return i;\n}\n","import {hsl as colorHsl} from \"d3-color\";\nimport color, {hue} from \"./color\";\n\nfunction hsl(hue) {\n  return function(start, end) {\n    var h = hue((start = colorHsl(start)).h, (end = colorHsl(end)).h),\n        s = color(start.s, end.s),\n        l = color(start.l, end.l),\n        opacity = color(start.opacity, end.opacity);\n    return function(t) {\n      start.h = h(t);\n      start.s = s(t);\n      start.l = l(t);\n      start.opacity = opacity(t);\n      return start + \"\";\n    };\n  }\n}\n\nexport default hsl(hue);\nexport var hslLong = hsl(color);\n","import {hcl as colorHcl} from \"d3-color\";\nimport color, {hue} from \"./color\";\n\nfunction hcl(hue) {\n  return function(start, end) {\n    var h = hue((start = colorHcl(start)).h, (end = colorHcl(end)).h),\n        c = color(start.c, end.c),\n        l = color(start.l, end.l),\n        opacity = color(start.opacity, end.opacity);\n    return function(t) {\n      start.h = h(t);\n      start.c = c(t);\n      start.l = l(t);\n      start.opacity = opacity(t);\n      return start + \"\";\n    };\n  }\n}\n\nexport default hcl(hue);\nexport var hclLong = hcl(color);\n","import {cubehelix as colorCubehelix} from \"d3-color\";\nimport color, {hue} from \"./color\";\n\nfunction cubehelix(hue) {\n  return (function cubehelixGamma(y) {\n    y = +y;\n\n    function cubehelix(start, end) {\n      var h = hue((start = colorCubehelix(start)).h, (end = colorCubehelix(end)).h),\n          s = color(start.s, end.s),\n          l = color(start.l, end.l),\n          opacity = color(start.opacity, end.opacity);\n      return function(t) {\n        start.h = h(t);\n        start.s = s(t);\n        start.l = l(Math.pow(t, y));\n        start.opacity = opacity(t);\n        return start + \"\";\n      };\n    }\n\n    cubehelix.gamma = cubehelixGamma;\n\n    return cubehelix;\n  })(1);\n}\n\nexport default cubehelix(hue);\nexport var cubehelixLong = cubehelix(color);\n","export default function piecewise(interpolate, values) {\n  var i = 0, n = values.length - 1, v = values[0], I = new Array(n < 0 ? 0 : n);\n  while (i < n) I[i] = interpolate(v, v = values[++i]);\n  return function(t) {\n    var i = Math.max(0, Math.min(n - 1, Math.floor(t *= n)));\n    return I[i](t - i);\n  };\n}\n","export default function(interpolator, n) {\n  var samples = new Array(n);\n  for (var i = 0; i < n; ++i) samples[i] = interpolator(i / (n - 1));\n  return samples;\n}\n","export default function(x) {\n  return function() {\n    return x;\n  };\n}\n","export default function(x) {\n  return +x;\n}\n","import {bisect} from \"d3-array\";\nimport {interpolate as interpolateValue, interpolateRound} from \"d3-interpolate\";\nimport {map, slice} from \"./array\";\nimport constant from \"./constant\";\nimport number from \"./number\";\n\nvar unit = [0, 1];\n\nexport function deinterpolateLinear(a, b) {\n  return (b -= (a = +a))\n      ? function(x) { return (x - a) / b; }\n      : constant(b);\n}\n\nfunction deinterpolateClamp(deinterpolate) {\n  return function(a, b) {\n    var d = deinterpolate(a = +a, b = +b);\n    return function(x) { return x <= a ? 0 : x >= b ? 1 : d(x); };\n  };\n}\n\nfunction reinterpolateClamp(reinterpolate) {\n  return function(a, b) {\n    var r = reinterpolate(a = +a, b = +b);\n    return function(t) { return t <= 0 ? a : t >= 1 ? b : r(t); };\n  };\n}\n\nfunction bimap(domain, range, deinterpolate, reinterpolate) {\n  var d0 = domain[0], d1 = domain[1], r0 = range[0], r1 = range[1];\n  if (d1 < d0) d0 = deinterpolate(d1, d0), r0 = reinterpolate(r1, r0);\n  else d0 = deinterpolate(d0, d1), r0 = reinterpolate(r0, r1);\n  return function(x) { return r0(d0(x)); };\n}\n\nfunction polymap(domain, range, deinterpolate, reinterpolate) {\n  var j = Math.min(domain.length, range.length) - 1,\n      d = new Array(j),\n      r = new Array(j),\n      i = -1;\n\n  // Reverse descending domains.\n  if (domain[j] < domain[0]) {\n    domain = domain.slice().reverse();\n    range = range.slice().reverse();\n  }\n\n  while (++i < j) {\n    d[i] = deinterpolate(domain[i], domain[i + 1]);\n    r[i] = reinterpolate(range[i], range[i + 1]);\n  }\n\n  return function(x) {\n    var i = bisect(domain, x, 1, j) - 1;\n    return r[i](d[i](x));\n  };\n}\n\nexport function copy(source, target) {\n  return target\n      .domain(source.domain())\n      .range(source.range())\n      .interpolate(source.interpolate())\n      .clamp(source.clamp());\n}\n\n// deinterpolate(a, b)(x) takes a domain value x in [a,b] and returns the corresponding parameter t in [0,1].\n// reinterpolate(a, b)(t) takes a parameter t in [0,1] and returns the corresponding domain value x in [a,b].\nexport default function continuous(deinterpolate, reinterpolate) {\n  var domain = unit,\n      range = unit,\n      interpolate = interpolateValue,\n      clamp = false,\n      piecewise,\n      output,\n      input;\n\n  function rescale() {\n    piecewise = Math.min(domain.length, range.length) > 2 ? polymap : bimap;\n    output = input = null;\n    return scale;\n  }\n\n  function scale(x) {\n    return (output || (output = piecewise(domain, range, clamp ? deinterpolateClamp(deinterpolate) : deinterpolate, interpolate)))(+x);\n  }\n\n  scale.invert = function(y) {\n    return (input || (input = piecewise(range, domain, deinterpolateLinear, clamp ? reinterpolateClamp(reinterpolate) : reinterpolate)))(+y);\n  };\n\n  scale.domain = function(_) {\n    return arguments.length ? (domain = map.call(_, number), rescale()) : domain.slice();\n  };\n\n  scale.range = function(_) {\n    return arguments.length ? (range = slice.call(_), rescale()) : range.slice();\n  };\n\n  scale.rangeRound = function(_) {\n    return range = slice.call(_), interpolate = interpolateRound, rescale();\n  };\n\n  scale.clamp = function(_) {\n    return arguments.length ? (clamp = !!_, rescale()) : clamp;\n  };\n\n  scale.interpolate = function(_) {\n    return arguments.length ? (interpolate = _, rescale()) : interpolate;\n  };\n\n  return rescale();\n}\n","// Computes the decimal coefficient and exponent of the specified number x with\n// significant digits p, where x is positive and p is in [1, 21] or undefined.\n// For example, formatDecimal(1.23) returns [\"123\", 0].\nexport default function(x, p) {\n  if ((i = (x = p ? x.toExponential(p - 1) : x.toExponential()).indexOf(\"e\")) < 0) return null; // NaN, ±Infinity\n  var i, coefficient = x.slice(0, i);\n\n  // The string returned by toExponential either has the form \\d\\.\\d+e[-+]\\d+\n  // (e.g., 1.2e+3) or the form \\de[-+]\\d+ (e.g., 1e+3).\n  return [\n    coefficient.length > 1 ? coefficient[0] + coefficient.slice(2) : coefficient,\n    +x.slice(i + 1)\n  ];\n}\n","import formatDecimal from \"./formatDecimal\";\n\nexport default function(x) {\n  return x = formatDecimal(Math.abs(x)), x ? x[1] : NaN;\n}\n","// [[fill]align][sign][symbol][0][width][,][.precision][~][type]\nvar re = /^(?:(.)?([<>=^]))?([+\\-( ])?([$#])?(0)?(\\d+)?(,)?(\\.\\d+)?(~)?([a-z%])?$/i;\n\nexport default function formatSpecifier(specifier) {\n  return new FormatSpecifier(specifier);\n}\n\nformatSpecifier.prototype = FormatSpecifier.prototype; // instanceof\n\nfunction FormatSpecifier(specifier) {\n  if (!(match = re.exec(specifier))) throw new Error(\"invalid format: \" + specifier);\n  var match;\n  this.fill = match[1] || \" \";\n  this.align = match[2] || \">\";\n  this.sign = match[3] || \"-\";\n  this.symbol = match[4] || \"\";\n  this.zero = !!match[5];\n  this.width = match[6] && +match[6];\n  this.comma = !!match[7];\n  this.precision = match[8] && +match[8].slice(1);\n  this.trim = !!match[9];\n  this.type = match[10] || \"\";\n}\n\nFormatSpecifier.prototype.toString = function() {\n  return this.fill\n      + this.align\n      + this.sign\n      + this.symbol\n      + (this.zero ? \"0\" : \"\")\n      + (this.width == null ? \"\" : Math.max(1, this.width | 0))\n      + (this.comma ? \",\" : \"\")\n      + (this.precision == null ? \"\" : \".\" + Math.max(0, this.precision | 0))\n      + (this.trim ? \"~\" : \"\")\n      + this.type;\n};\n","// Trims insignificant zeros, e.g., replaces 1.2000k with 1.2k.\nexport default function(s) {\n  out: for (var n = s.length, i = 1, i0 = -1, i1; i < n; ++i) {\n    switch (s[i]) {\n      case \".\": i0 = i1 = i; break;\n      case \"0\": if (i0 === 0) i0 = i; i1 = i; break;\n      default: if (i0 > 0) { if (!+s[i]) break out; i0 = 0; } break;\n    }\n  }\n  return i0 > 0 ? s.slice(0, i0) + s.slice(i1 + 1) : s;\n}\n","import formatDecimal from \"./formatDecimal\";\n\nexport var prefixExponent;\n\nexport default function(x, p) {\n  var d = formatDecimal(x, p);\n  if (!d) return x + \"\";\n  var coefficient = d[0],\n      exponent = d[1],\n      i = exponent - (prefixExponent = Math.max(-8, Math.min(8, Math.floor(exponent / 3))) * 3) + 1,\n      n = coefficient.length;\n  return i === n ? coefficient\n      : i > n ? coefficient + new Array(i - n + 1).join(\"0\")\n      : i > 0 ? coefficient.slice(0, i) + \".\" + coefficient.slice(i)\n      : \"0.\" + new Array(1 - i).join(\"0\") + formatDecimal(x, Math.max(0, p + i - 1))[0]; // less than 1y!\n}\n","import formatLocale from \"./locale\";\n\nvar locale;\nexport var format;\nexport var formatPrefix;\n\ndefaultLocale({\n  decimal: \".\",\n  thousands: \",\",\n  grouping: [3],\n  currency: [\"$\", \"\"]\n});\n\nexport default function defaultLocale(definition) {\n  locale = formatLocale(definition);\n  format = locale.format;\n  formatPrefix = locale.formatPrefix;\n  return locale;\n}\n","import formatDecimal from \"./formatDecimal\";\n\nexport default function(x, p) {\n  var d = formatDecimal(x, p);\n  if (!d) return x + \"\";\n  var coefficient = d[0],\n      exponent = d[1];\n  return exponent < 0 ? \"0.\" + new Array(-exponent).join(\"0\") + coefficient\n      : coefficient.length > exponent + 1 ? coefficient.slice(0, exponent + 1) + \".\" + coefficient.slice(exponent + 1)\n      : coefficient + new Array(exponent - coefficient.length + 2).join(\"0\");\n}\n","import formatPrefixAuto from \"./formatPrefixAuto\";\nimport formatRounded from \"./formatRounded\";\n\nexport default {\n  \"%\": function(x, p) { return (x * 100).toFixed(p); },\n  \"b\": function(x) { return Math.round(x).toString(2); },\n  \"c\": function(x) { return x + \"\"; },\n  \"d\": function(x) { return Math.round(x).toString(10); },\n  \"e\": function(x, p) { return x.toExponential(p); },\n  \"f\": function(x, p) { return x.toFixed(p); },\n  \"g\": function(x, p) { return x.toPrecision(p); },\n  \"o\": function(x) { return Math.round(x).toString(8); },\n  \"p\": function(x, p) { return formatRounded(x * 100, p); },\n  \"r\": formatRounded,\n  \"s\": formatPrefixAuto,\n  \"X\": function(x) { return Math.round(x).toString(16).toUpperCase(); },\n  \"x\": function(x) { return Math.round(x).toString(16); }\n};\n","export default function(x) {\n  return x;\n}\n","import exponent from \"./exponent\";\nimport formatGroup from \"./formatGroup\";\nimport formatNumerals from \"./formatNumerals\";\nimport formatSpecifier from \"./formatSpecifier\";\nimport formatTrim from \"./formatTrim\";\nimport formatTypes from \"./formatTypes\";\nimport {prefixExponent} from \"./formatPrefixAuto\";\nimport identity from \"./identity\";\n\nvar prefixes = [\"y\",\"z\",\"a\",\"f\",\"p\",\"n\",\"µ\",\"m\",\"\",\"k\",\"M\",\"G\",\"T\",\"P\",\"E\",\"Z\",\"Y\"];\n\nexport default function(locale) {\n  var group = locale.grouping && locale.thousands ? formatGroup(locale.grouping, locale.thousands) : identity,\n      currency = locale.currency,\n      decimal = locale.decimal,\n      numerals = locale.numerals ? formatNumerals(locale.numerals) : identity,\n      percent = locale.percent || \"%\";\n\n  function newFormat(specifier) {\n    specifier = formatSpecifier(specifier);\n\n    var fill = specifier.fill,\n        align = specifier.align,\n        sign = specifier.sign,\n        symbol = specifier.symbol,\n        zero = specifier.zero,\n        width = specifier.width,\n        comma = specifier.comma,\n        precision = specifier.precision,\n        trim = specifier.trim,\n        type = specifier.type;\n\n    // The \"n\" type is an alias for \",g\".\n    if (type === \"n\") comma = true, type = \"g\";\n\n    // The \"\" type, and any invalid type, is an alias for \".12~g\".\n    else if (!formatTypes[type]) precision == null && (precision = 12), trim = true, type = \"g\";\n\n    // If zero fill is specified, padding goes after sign and before digits.\n    if (zero || (fill === \"0\" && align === \"=\")) zero = true, fill = \"0\", align = \"=\";\n\n    // Compute the prefix and suffix.\n    // For SI-prefix, the suffix is lazily computed.\n    var prefix = symbol === \"$\" ? currency[0] : symbol === \"#\" && /[boxX]/.test(type) ? \"0\" + type.toLowerCase() : \"\",\n        suffix = symbol === \"$\" ? currency[1] : /[%p]/.test(type) ? percent : \"\";\n\n    // What format function should we use?\n    // Is this an integer type?\n    // Can this type generate exponential notation?\n    var formatType = formatTypes[type],\n        maybeSuffix = /[defgprs%]/.test(type);\n\n    // Set the default precision if not specified,\n    // or clamp the specified precision to the supported range.\n    // For significant precision, it must be in [1, 21].\n    // For fixed precision, it must be in [0, 20].\n    precision = precision == null ? 6\n        : /[gprs]/.test(type) ? Math.max(1, Math.min(21, precision))\n        : Math.max(0, Math.min(20, precision));\n\n    function format(value) {\n      var valuePrefix = prefix,\n          valueSuffix = suffix,\n          i, n, c;\n\n      if (type === \"c\") {\n        valueSuffix = formatType(value) + valueSuffix;\n        value = \"\";\n      } else {\n        value = +value;\n\n        // Perform the initial formatting.\n        var valueNegative = value < 0;\n        value = formatType(Math.abs(value), precision);\n\n        // Trim insignificant zeros.\n        if (trim) value = formatTrim(value);\n\n        // If a negative value rounds to zero during formatting, treat as positive.\n        if (valueNegative && +value === 0) valueNegative = false;\n\n        // Compute the prefix and suffix.\n        valuePrefix = (valueNegative ? (sign === \"(\" ? sign : \"-\") : sign === \"-\" || sign === \"(\" ? \"\" : sign) + valuePrefix;\n        valueSuffix = (type === \"s\" ? prefixes[8 + prefixExponent / 3] : \"\") + valueSuffix + (valueNegative && sign === \"(\" ? \")\" : \"\");\n\n        // Break the formatted value into the integer “value” part that can be\n        // grouped, and fractional or exponential “suffix” part that is not.\n        if (maybeSuffix) {\n          i = -1, n = value.length;\n          while (++i < n) {\n            if (c = value.charCodeAt(i), 48 > c || c > 57) {\n              valueSuffix = (c === 46 ? decimal + value.slice(i + 1) : value.slice(i)) + valueSuffix;\n              value = value.slice(0, i);\n              break;\n            }\n          }\n        }\n      }\n\n      // If the fill character is not \"0\", grouping is applied before padding.\n      if (comma && !zero) value = group(value, Infinity);\n\n      // Compute the padding.\n      var length = valuePrefix.length + value.length + valueSuffix.length,\n          padding = length < width ? new Array(width - length + 1).join(fill) : \"\";\n\n      // If the fill character is \"0\", grouping is applied after padding.\n      if (comma && zero) value = group(padding + value, padding.length ? width - valueSuffix.length : Infinity), padding = \"\";\n\n      // Reconstruct the final output based on the desired alignment.\n      switch (align) {\n        case \"<\": value = valuePrefix + value + valueSuffix + padding; break;\n        case \"=\": value = valuePrefix + padding + value + valueSuffix; break;\n        case \"^\": value = padding.slice(0, length = padding.length >> 1) + valuePrefix + value + valueSuffix + padding.slice(length); break;\n        default: value = padding + valuePrefix + value + valueSuffix; break;\n      }\n\n      return numerals(value);\n    }\n\n    format.toString = function() {\n      return specifier + \"\";\n    };\n\n    return format;\n  }\n\n  function formatPrefix(specifier, value) {\n    var f = newFormat((specifier = formatSpecifier(specifier), specifier.type = \"f\", specifier)),\n        e = Math.max(-8, Math.min(8, Math.floor(exponent(value) / 3))) * 3,\n        k = Math.pow(10, -e),\n        prefix = prefixes[8 + e / 3];\n    return function(value) {\n      return f(k * value) + prefix;\n    };\n  }\n\n  return {\n    format: newFormat,\n    formatPrefix: formatPrefix\n  };\n}\n","export default function(grouping, thousands) {\n  return function(value, width) {\n    var i = value.length,\n        t = [],\n        j = 0,\n        g = grouping[0],\n        length = 0;\n\n    while (i > 0 && g > 0) {\n      if (length + g + 1 > width) g = Math.max(1, width - length);\n      t.push(value.substring(i -= g, i + g));\n      if ((length += g + 1) > width) break;\n      g = grouping[j = (j + 1) % grouping.length];\n    }\n\n    return t.reverse().join(thousands);\n  };\n}\n","export default function(numerals) {\n  return function(value) {\n    return value.replace(/[0-9]/g, function(i) {\n      return numerals[+i];\n    });\n  };\n}\n","import exponent from \"./exponent\";\n\nexport default function(step) {\n  return Math.max(0, -exponent(Math.abs(step)));\n}\n","import {tickStep} from \"d3-array\";\nimport {format, formatPrefix, formatSpecifier, precisionFixed, precisionPrefix, precisionRound} from \"d3-format\";\n\nexport default function(domain, count, specifier) {\n  var start = domain[0],\n      stop = domain[domain.length - 1],\n      step = tickStep(start, stop, count == null ? 10 : count),\n      precision;\n  specifier = formatSpecifier(specifier == null ? \",f\" : specifier);\n  switch (specifier.type) {\n    case \"s\": {\n      var value = Math.max(Math.abs(start), Math.abs(stop));\n      if (specifier.precision == null && !isNaN(precision = precisionPrefix(step, value))) specifier.precision = precision;\n      return formatPrefix(specifier, value);\n    }\n    case \"\":\n    case \"e\":\n    case \"g\":\n    case \"p\":\n    case \"r\": {\n      if (specifier.precision == null && !isNaN(precision = precisionRound(step, Math.max(Math.abs(start), Math.abs(stop))))) specifier.precision = precision - (specifier.type === \"e\");\n      break;\n    }\n    case \"f\":\n    case \"%\": {\n      if (specifier.precision == null && !isNaN(precision = precisionFixed(step))) specifier.precision = precision - (specifier.type === \"%\") * 2;\n      break;\n    }\n  }\n  return format(specifier);\n}\n","import exponent from \"./exponent\";\n\nexport default function(step, value) {\n  return Math.max(0, Math.max(-8, Math.min(8, Math.floor(exponent(value) / 3))) * 3 - exponent(Math.abs(step)));\n}\n","import exponent from \"./exponent\";\n\nexport default function(step, max) {\n  step = Math.abs(step), max = Math.abs(max) - step;\n  return Math.max(0, exponent(max) - exponent(step)) + 1;\n}\n","import {ticks, tickIncrement} from \"d3-array\";\nimport {interpolateNumber as reinterpolate} from \"d3-interpolate\";\nimport {default as continuous, copy, deinterpolateLinear as deinterpolate} from \"./continuous\";\nimport tickFormat from \"./tickFormat\";\n\nexport function linearish(scale) {\n  var domain = scale.domain;\n\n  scale.ticks = function(count) {\n    var d = domain();\n    return ticks(d[0], d[d.length - 1], count == null ? 10 : count);\n  };\n\n  scale.tickFormat = function(count, specifier) {\n    return tickFormat(domain(), count, specifier);\n  };\n\n  scale.nice = function(count) {\n    if (count == null) count = 10;\n\n    var d = domain(),\n        i0 = 0,\n        i1 = d.length - 1,\n        start = d[i0],\n        stop = d[i1],\n        step;\n\n    if (stop < start) {\n      step = start, start = stop, stop = step;\n      step = i0, i0 = i1, i1 = step;\n    }\n\n    step = tickIncrement(start, stop, count);\n\n    if (step > 0) {\n      start = Math.floor(start / step) * step;\n      stop = Math.ceil(stop / step) * step;\n      step = tickIncrement(start, stop, count);\n    } else if (step < 0) {\n      start = Math.ceil(start * step) / step;\n      stop = Math.floor(stop * step) / step;\n      step = tickIncrement(start, stop, count);\n    }\n\n    if (step > 0) {\n      d[i0] = Math.floor(start / step) * step;\n      d[i1] = Math.ceil(stop / step) * step;\n      domain(d);\n    } else if (step < 0) {\n      d[i0] = Math.ceil(start * step) / step;\n      d[i1] = Math.floor(stop * step) / step;\n      domain(d);\n    }\n\n    return scale;\n  };\n\n  return scale;\n}\n\nexport default function linear() {\n  var scale = continuous(deinterpolate, reinterpolate);\n\n  scale.copy = function() {\n    return copy(scale, linear());\n  };\n\n  return linearish(scale);\n}\n","import {map} from \"./array\";\nimport {linearish} from \"./linear\";\nimport number from \"./number\";\n\nexport default function identity() {\n  var domain = [0, 1];\n\n  function scale(x) {\n    return +x;\n  }\n\n  scale.invert = scale;\n\n  scale.domain = scale.range = function(_) {\n    return arguments.length ? (domain = map.call(_, number), scale) : domain.slice();\n  };\n\n  scale.copy = function() {\n    return identity().domain(domain);\n  };\n\n  return linearish(scale);\n}\n","export default function(domain, interval) {\n  domain = domain.slice();\n\n  var i0 = 0,\n      i1 = domain.length - 1,\n      x0 = domain[i0],\n      x1 = domain[i1],\n      t;\n\n  if (x1 < x0) {\n    t = i0, i0 = i1, i1 = t;\n    t = x0, x0 = x1, x1 = t;\n  }\n\n  domain[i0] = interval.floor(x0);\n  domain[i1] = interval.ceil(x1);\n  return domain;\n}\n","import {ticks} from \"d3-array\";\nimport {format} from \"d3-format\";\nimport constant from \"./constant\";\nimport nice from \"./nice\";\nimport {default as continuous, copy} from \"./continuous\";\n\nfunction deinterpolate(a, b) {\n  return (b = Math.log(b / a))\n      ? function(x) { return Math.log(x / a) / b; }\n      : constant(b);\n}\n\nfunction reinterpolate(a, b) {\n  return a < 0\n      ? function(t) { return -Math.pow(-b, t) * Math.pow(-a, 1 - t); }\n      : function(t) { return Math.pow(b, t) * Math.pow(a, 1 - t); };\n}\n\nfunction pow10(x) {\n  return isFinite(x) ? +(\"1e\" + x) : x < 0 ? 0 : x;\n}\n\nfunction powp(base) {\n  return base === 10 ? pow10\n      : base === Math.E ? Math.exp\n      : function(x) { return Math.pow(base, x); };\n}\n\nfunction logp(base) {\n  return base === Math.E ? Math.log\n      : base === 10 && Math.log10\n      || base === 2 && Math.log2\n      || (base = Math.log(base), function(x) { return Math.log(x) / base; });\n}\n\nfunction reflect(f) {\n  return function(x) {\n    return -f(-x);\n  };\n}\n\nexport default function log() {\n  var scale = continuous(deinterpolate, reinterpolate).domain([1, 10]),\n      domain = scale.domain,\n      base = 10,\n      logs = logp(10),\n      pows = powp(10);\n\n  function rescale() {\n    logs = logp(base), pows = powp(base);\n    if (domain()[0] < 0) logs = reflect(logs), pows = reflect(pows);\n    return scale;\n  }\n\n  scale.base = function(_) {\n    return arguments.length ? (base = +_, rescale()) : base;\n  };\n\n  scale.domain = function(_) {\n    return arguments.length ? (domain(_), rescale()) : domain();\n  };\n\n  scale.ticks = function(count) {\n    var d = domain(),\n        u = d[0],\n        v = d[d.length - 1],\n        r;\n\n    if (r = v < u) i = u, u = v, v = i;\n\n    var i = logs(u),\n        j = logs(v),\n        p,\n        k,\n        t,\n        n = count == null ? 10 : +count,\n        z = [];\n\n    if (!(base % 1) && j - i < n) {\n      i = Math.round(i) - 1, j = Math.round(j) + 1;\n      if (u > 0) for (; i < j; ++i) {\n        for (k = 1, p = pows(i); k < base; ++k) {\n          t = p * k;\n          if (t < u) continue;\n          if (t > v) break;\n          z.push(t);\n        }\n      } else for (; i < j; ++i) {\n        for (k = base - 1, p = pows(i); k >= 1; --k) {\n          t = p * k;\n          if (t < u) continue;\n          if (t > v) break;\n          z.push(t);\n        }\n      }\n    } else {\n      z = ticks(i, j, Math.min(j - i, n)).map(pows);\n    }\n\n    return r ? z.reverse() : z;\n  };\n\n  scale.tickFormat = function(count, specifier) {\n    if (specifier == null) specifier = base === 10 ? \".0e\" : \",\";\n    if (typeof specifier !== \"function\") specifier = format(specifier);\n    if (count === Infinity) return specifier;\n    if (count == null) count = 10;\n    var k = Math.max(1, base * count / scale.ticks().length); // TODO fast estimate?\n    return function(d) {\n      var i = d / pows(Math.round(logs(d)));\n      if (i * base < base - 0.5) i *= base;\n      return i <= k ? specifier(d) : \"\";\n    };\n  };\n\n  scale.nice = function() {\n    return domain(nice(domain(), {\n      floor: function(x) { return pows(Math.floor(logs(x))); },\n      ceil: function(x) { return pows(Math.ceil(logs(x))); }\n    }));\n  };\n\n  scale.copy = function() {\n    return copy(scale, log().base(base));\n  };\n\n  return scale;\n}\n","import constant from \"./constant\";\nimport {linearish} from \"./linear\";\nimport {default as continuous, copy} from \"./continuous\";\n\nfunction raise(x, exponent) {\n  return x < 0 ? -Math.pow(-x, exponent) : Math.pow(x, exponent);\n}\n\nexport default function pow() {\n  var exponent = 1,\n      scale = continuous(deinterpolate, reinterpolate),\n      domain = scale.domain;\n\n  function deinterpolate(a, b) {\n    return (b = raise(b, exponent) - (a = raise(a, exponent)))\n        ? function(x) { return (raise(x, exponent) - a) / b; }\n        : constant(b);\n  }\n\n  function reinterpolate(a, b) {\n    b = raise(b, exponent) - (a = raise(a, exponent));\n    return function(t) { return raise(a + b * t, 1 / exponent); };\n  }\n\n  scale.exponent = function(_) {\n    return arguments.length ? (exponent = +_, domain(domain())) : exponent;\n  };\n\n  scale.copy = function() {\n    return copy(scale, pow().exponent(exponent));\n  };\n\n  return linearish(scale);\n}\n\nexport function sqrt() {\n  return pow().exponent(0.5);\n}\n","import {ascending, bisect, quantile as threshold} from \"d3-array\";\nimport {slice} from \"./array\";\n\nexport default function quantile() {\n  var domain = [],\n      range = [],\n      thresholds = [];\n\n  function rescale() {\n    var i = 0, n = Math.max(1, range.length);\n    thresholds = new Array(n - 1);\n    while (++i < n) thresholds[i - 1] = threshold(domain, i / n);\n    return scale;\n  }\n\n  function scale(x) {\n    if (!isNaN(x = +x)) return range[bisect(thresholds, x)];\n  }\n\n  scale.invertExtent = function(y) {\n    var i = range.indexOf(y);\n    return i < 0 ? [NaN, NaN] : [\n      i > 0 ? thresholds[i - 1] : domain[0],\n      i < thresholds.length ? thresholds[i] : domain[domain.length - 1]\n    ];\n  };\n\n  scale.domain = function(_) {\n    if (!arguments.length) return domain.slice();\n    domain = [];\n    for (var i = 0, n = _.length, d; i < n; ++i) if (d = _[i], d != null && !isNaN(d = +d)) domain.push(d);\n    domain.sort(ascending);\n    return rescale();\n  };\n\n  scale.range = function(_) {\n    return arguments.length ? (range = slice.call(_), rescale()) : range.slice();\n  };\n\n  scale.quantiles = function() {\n    return thresholds.slice();\n  };\n\n  scale.copy = function() {\n    return quantile()\n        .domain(domain)\n        .range(range);\n  };\n\n  return scale;\n}\n","import {bisect} from \"d3-array\";\nimport {slice} from \"./array\";\nimport {linearish} from \"./linear\";\n\nexport default function quantize() {\n  var x0 = 0,\n      x1 = 1,\n      n = 1,\n      domain = [0.5],\n      range = [0, 1];\n\n  function scale(x) {\n    if (x <= x) return range[bisect(domain, x, 0, n)];\n  }\n\n  function rescale() {\n    var i = -1;\n    domain = new Array(n);\n    while (++i < n) domain[i] = ((i + 1) * x1 - (i - n) * x0) / (n + 1);\n    return scale;\n  }\n\n  scale.domain = function(_) {\n    return arguments.length ? (x0 = +_[0], x1 = +_[1], rescale()) : [x0, x1];\n  };\n\n  scale.range = function(_) {\n    return arguments.length ? (n = (range = slice.call(_)).length - 1, rescale()) : range.slice();\n  };\n\n  scale.invertExtent = function(y) {\n    var i = range.indexOf(y);\n    return i < 0 ? [NaN, NaN]\n        : i < 1 ? [x0, domain[0]]\n        : i >= n ? [domain[n - 1], x1]\n        : [domain[i - 1], domain[i]];\n  };\n\n  scale.copy = function() {\n    return quantize()\n        .domain([x0, x1])\n        .range(range);\n  };\n\n  return linearish(scale);\n}\n","import {bisect} from \"d3-array\";\nimport {slice} from \"./array\";\n\nexport default function threshold() {\n  var domain = [0.5],\n      range = [0, 1],\n      n = 1;\n\n  function scale(x) {\n    if (x <= x) return range[bisect(domain, x, 0, n)];\n  }\n\n  scale.domain = function(_) {\n    return arguments.length ? (domain = slice.call(_), n = Math.min(domain.length, range.length - 1), scale) : domain.slice();\n  };\n\n  scale.range = function(_) {\n    return arguments.length ? (range = slice.call(_), n = Math.min(domain.length, range.length - 1), scale) : range.slice();\n  };\n\n  scale.invertExtent = function(y) {\n    var i = range.indexOf(y);\n    return [domain[i - 1], domain[i]];\n  };\n\n  scale.copy = function() {\n    return threshold()\n        .domain(domain)\n        .range(range);\n  };\n\n  return scale;\n}\n","var t0 = new Date,\n    t1 = new Date;\n\nexport default function newInterval(floori, offseti, count, field) {\n\n  function interval(date) {\n    return floori(date = new Date(+date)), date;\n  }\n\n  interval.floor = interval;\n\n  interval.ceil = function(date) {\n    return floori(date = new Date(date - 1)), offseti(date, 1), floori(date), date;\n  };\n\n  interval.round = function(date) {\n    var d0 = interval(date),\n        d1 = interval.ceil(date);\n    return date - d0 < d1 - date ? d0 : d1;\n  };\n\n  interval.offset = function(date, step) {\n    return offseti(date = new Date(+date), step == null ? 1 : Math.floor(step)), date;\n  };\n\n  interval.range = function(start, stop, step) {\n    var range = [], previous;\n    start = interval.ceil(start);\n    step = step == null ? 1 : Math.floor(step);\n    if (!(start < stop) || !(step > 0)) return range; // also handles Invalid Date\n    do range.push(previous = new Date(+start)), offseti(start, step), floori(start);\n    while (previous < start && start < stop);\n    return range;\n  };\n\n  interval.filter = function(test) {\n    return newInterval(function(date) {\n      if (date >= date) while (floori(date), !test(date)) date.setTime(date - 1);\n    }, function(date, step) {\n      if (date >= date) {\n        if (step < 0) while (++step <= 0) {\n          while (offseti(date, -1), !test(date)) {} // eslint-disable-line no-empty\n        } else while (--step >= 0) {\n          while (offseti(date, +1), !test(date)) {} // eslint-disable-line no-empty\n        }\n      }\n    });\n  };\n\n  if (count) {\n    interval.count = function(start, end) {\n      t0.setTime(+start), t1.setTime(+end);\n      floori(t0), floori(t1);\n      return Math.floor(count(t0, t1));\n    };\n\n    interval.every = function(step) {\n      step = Math.floor(step);\n      return !isFinite(step) || !(step > 0) ? null\n          : !(step > 1) ? interval\n          : interval.filter(field\n              ? function(d) { return field(d) % step === 0; }\n              : function(d) { return interval.count(0, d) % step === 0; });\n    };\n  }\n\n  return interval;\n}\n","import interval from \"./interval\";\n\nvar millisecond = interval(function() {\n  // noop\n}, function(date, step) {\n  date.setTime(+date + step);\n}, function(start, end) {\n  return end - start;\n});\n\n// An optimized implementation for this simple case.\nmillisecond.every = function(k) {\n  k = Math.floor(k);\n  if (!isFinite(k) || !(k > 0)) return null;\n  if (!(k > 1)) return millisecond;\n  return interval(function(date) {\n    date.setTime(Math.floor(date / k) * k);\n  }, function(date, step) {\n    date.setTime(+date + step * k);\n  }, function(start, end) {\n    return (end - start) / k;\n  });\n};\n\nexport default millisecond;\nexport var milliseconds = millisecond.range;\n","export var durationSecond = 1e3;\nexport var durationMinute = 6e4;\nexport var durationHour = 36e5;\nexport var durationDay = 864e5;\nexport var durationWeek = 6048e5;\n","import interval from \"./interval\";\nimport {durationSecond} from \"./duration\";\n\nvar second = interval(function(date) {\n  date.setTime(date - date.getMilliseconds());\n}, function(date, step) {\n  date.setTime(+date + step * durationSecond);\n}, function(start, end) {\n  return (end - start) / durationSecond;\n}, function(date) {\n  return date.getUTCSeconds();\n});\n\nexport default second;\nexport var seconds = second.range;\n","import interval from \"./interval\";\nimport {durationMinute, durationSecond} from \"./duration\";\n\nvar minute = interval(function(date) {\n  date.setTime(date - date.getMilliseconds() - date.getSeconds() * durationSecond);\n}, function(date, step) {\n  date.setTime(+date + step * durationMinute);\n}, function(start, end) {\n  return (end - start) / durationMinute;\n}, function(date) {\n  return date.getMinutes();\n});\n\nexport default minute;\nexport var minutes = minute.range;\n","import interval from \"./interval\";\nimport {durationHour, durationMinute, durationSecond} from \"./duration\";\n\nvar hour = interval(function(date) {\n  date.setTime(date - date.getMilliseconds() - date.getSeconds() * durationSecond - date.getMinutes() * durationMinute);\n}, function(date, step) {\n  date.setTime(+date + step * durationHour);\n}, function(start, end) {\n  return (end - start) / durationHour;\n}, function(date) {\n  return date.getHours();\n});\n\nexport default hour;\nexport var hours = hour.range;\n","import interval from \"./interval\";\nimport {durationDay, durationMinute} from \"./duration\";\n\nvar day = interval(function(date) {\n  date.setHours(0, 0, 0, 0);\n}, function(date, step) {\n  date.setDate(date.getDate() + step);\n}, function(start, end) {\n  return (end - start - (end.getTimezoneOffset() - start.getTimezoneOffset()) * durationMinute) / durationDay;\n}, function(date) {\n  return date.getDate() - 1;\n});\n\nexport default day;\nexport var days = day.range;\n","import interval from \"./interval\";\nimport {durationMinute, durationWeek} from \"./duration\";\n\nfunction weekday(i) {\n  return interval(function(date) {\n    date.setDate(date.getDate() - (date.getDay() + 7 - i) % 7);\n    date.setHours(0, 0, 0, 0);\n  }, function(date, step) {\n    date.setDate(date.getDate() + step * 7);\n  }, function(start, end) {\n    return (end - start - (end.getTimezoneOffset() - start.getTimezoneOffset()) * durationMinute) / durationWeek;\n  });\n}\n\nexport var sunday = weekday(0);\nexport var monday = weekday(1);\nexport var tuesday = weekday(2);\nexport var wednesday = weekday(3);\nexport var thursday = weekday(4);\nexport var friday = weekday(5);\nexport var saturday = weekday(6);\n\nexport var sundays = sunday.range;\nexport var mondays = monday.range;\nexport var tuesdays = tuesday.range;\nexport var wednesdays = wednesday.range;\nexport var thursdays = thursday.range;\nexport var fridays = friday.range;\nexport var saturdays = saturday.range;\n","import interval from \"./interval\";\n\nvar month = interval(function(date) {\n  date.setDate(1);\n  date.setHours(0, 0, 0, 0);\n}, function(date, step) {\n  date.setMonth(date.getMonth() + step);\n}, function(start, end) {\n  return end.getMonth() - start.getMonth() + (end.getFullYear() - start.getFullYear()) * 12;\n}, function(date) {\n  return date.getMonth();\n});\n\nexport default month;\nexport var months = month.range;\n","import interval from \"./interval\";\n\nvar year = interval(function(date) {\n  date.setMonth(0, 1);\n  date.setHours(0, 0, 0, 0);\n}, function(date, step) {\n  date.setFullYear(date.getFullYear() + step);\n}, function(start, end) {\n  return end.getFullYear() - start.getFullYear();\n}, function(date) {\n  return date.getFullYear();\n});\n\n// An optimized implementation for this simple case.\nyear.every = function(k) {\n  return !isFinite(k = Math.floor(k)) || !(k > 0) ? null : interval(function(date) {\n    date.setFullYear(Math.floor(date.getFullYear() / k) * k);\n    date.setMonth(0, 1);\n    date.setHours(0, 0, 0, 0);\n  }, function(date, step) {\n    date.setFullYear(date.getFullYear() + step * k);\n  });\n};\n\nexport default year;\nexport var years = year.range;\n","import interval from \"./interval\";\nimport {durationMinute} from \"./duration\";\n\nvar utcMinute = interval(function(date) {\n  date.setUTCSeconds(0, 0);\n}, function(date, step) {\n  date.setTime(+date + step * durationMinute);\n}, function(start, end) {\n  return (end - start) / durationMinute;\n}, function(date) {\n  return date.getUTCMinutes();\n});\n\nexport default utcMinute;\nexport var utcMinutes = utcMinute.range;\n","import interval from \"./interval\";\nimport {durationHour} from \"./duration\";\n\nvar utcHour = interval(function(date) {\n  date.setUTCMinutes(0, 0, 0);\n}, function(date, step) {\n  date.setTime(+date + step * durationHour);\n}, function(start, end) {\n  return (end - start) / durationHour;\n}, function(date) {\n  return date.getUTCHours();\n});\n\nexport default utcHour;\nexport var utcHours = utcHour.range;\n","import interval from \"./interval\";\nimport {durationDay} from \"./duration\";\n\nvar utcDay = interval(function(date) {\n  date.setUTCHours(0, 0, 0, 0);\n}, function(date, step) {\n  date.setUTCDate(date.getUTCDate() + step);\n}, function(start, end) {\n  return (end - start) / durationDay;\n}, function(date) {\n  return date.getUTCDate() - 1;\n});\n\nexport default utcDay;\nexport var utcDays = utcDay.range;\n","import interval from \"./interval\";\nimport {durationWeek} from \"./duration\";\n\nfunction utcWeekday(i) {\n  return interval(function(date) {\n    date.setUTCDate(date.getUTCDate() - (date.getUTCDay() + 7 - i) % 7);\n    date.setUTCHours(0, 0, 0, 0);\n  }, function(date, step) {\n    date.setUTCDate(date.getUTCDate() + step * 7);\n  }, function(start, end) {\n    return (end - start) / durationWeek;\n  });\n}\n\nexport var utcSunday = utcWeekday(0);\nexport var utcMonday = utcWeekday(1);\nexport var utcTuesday = utcWeekday(2);\nexport var utcWednesday = utcWeekday(3);\nexport var utcThursday = utcWeekday(4);\nexport var utcFriday = utcWeekday(5);\nexport var utcSaturday = utcWeekday(6);\n\nexport var utcSundays = utcSunday.range;\nexport var utcMondays = utcMonday.range;\nexport var utcTuesdays = utcTuesday.range;\nexport var utcWednesdays = utcWednesday.range;\nexport var utcThursdays = utcThursday.range;\nexport var utcFridays = utcFriday.range;\nexport var utcSaturdays = utcSaturday.range;\n","import interval from \"./interval\";\n\nvar utcMonth = interval(function(date) {\n  date.setUTCDate(1);\n  date.setUTCHours(0, 0, 0, 0);\n}, function(date, step) {\n  date.setUTCMonth(date.getUTCMonth() + step);\n}, function(start, end) {\n  return end.getUTCMonth() - start.getUTCMonth() + (end.getUTCFullYear() - start.getUTCFullYear()) * 12;\n}, function(date) {\n  return date.getUTCMonth();\n});\n\nexport default utcMonth;\nexport var utcMonths = utcMonth.range;\n","import interval from \"./interval\";\n\nvar utcYear = interval(function(date) {\n  date.setUTCMonth(0, 1);\n  date.setUTCHours(0, 0, 0, 0);\n}, function(date, step) {\n  date.setUTCFullYear(date.getUTCFullYear() + step);\n}, function(start, end) {\n  return end.getUTCFullYear() - start.getUTCFullYear();\n}, function(date) {\n  return date.getUTCFullYear();\n});\n\n// An optimized implementation for this simple case.\nutcYear.every = function(k) {\n  return !isFinite(k = Math.floor(k)) || !(k > 0) ? null : interval(function(date) {\n    date.setUTCFullYear(Math.floor(date.getUTCFullYear() / k) * k);\n    date.setUTCMonth(0, 1);\n    date.setUTCHours(0, 0, 0, 0);\n  }, function(date, step) {\n    date.setUTCFullYear(date.getUTCFullYear() + step * k);\n  });\n};\n\nexport default utcYear;\nexport var utcYears = utcYear.range;\n","import {\n  timeDay,\n  timeSunday,\n  timeMonday,\n  timeThursday,\n  timeYear,\n  utcDay,\n  utcSunday,\n  utcMonday,\n  utcThursday,\n  utcYear\n} from \"d3-time\";\n\nfunction localDate(d) {\n  if (0 <= d.y && d.y < 100) {\n    var date = new Date(-1, d.m, d.d, d.H, d.M, d.S, d.L);\n    date.setFullYear(d.y);\n    return date;\n  }\n  return new Date(d.y, d.m, d.d, d.H, d.M, d.S, d.L);\n}\n\nfunction utcDate(d) {\n  if (0 <= d.y && d.y < 100) {\n    var date = new Date(Date.UTC(-1, d.m, d.d, d.H, d.M, d.S, d.L));\n    date.setUTCFullYear(d.y);\n    return date;\n  }\n  return new Date(Date.UTC(d.y, d.m, d.d, d.H, d.M, d.S, d.L));\n}\n\nfunction newYear(y) {\n  return {y: y, m: 0, d: 1, H: 0, M: 0, S: 0, L: 0};\n}\n\nexport default function formatLocale(locale) {\n  var locale_dateTime = locale.dateTime,\n      locale_date = locale.date,\n      locale_time = locale.time,\n      locale_periods = locale.periods,\n      locale_weekdays = locale.days,\n      locale_shortWeekdays = locale.shortDays,\n      locale_months = locale.months,\n      locale_shortMonths = locale.shortMonths;\n\n  var periodRe = formatRe(locale_periods),\n      periodLookup = formatLookup(locale_periods),\n      weekdayRe = formatRe(locale_weekdays),\n      weekdayLookup = formatLookup(locale_weekdays),\n      shortWeekdayRe = formatRe(locale_shortWeekdays),\n      shortWeekdayLookup = formatLookup(locale_shortWeekdays),\n      monthRe = formatRe(locale_months),\n      monthLookup = formatLookup(locale_months),\n      shortMonthRe = formatRe(locale_shortMonths),\n      shortMonthLookup = formatLookup(locale_shortMonths);\n\n  var formats = {\n    \"a\": formatShortWeekday,\n    \"A\": formatWeekday,\n    \"b\": formatShortMonth,\n    \"B\": formatMonth,\n    \"c\": null,\n    \"d\": formatDayOfMonth,\n    \"e\": formatDayOfMonth,\n    \"f\": formatMicroseconds,\n    \"H\": formatHour24,\n    \"I\": formatHour12,\n    \"j\": formatDayOfYear,\n    \"L\": formatMilliseconds,\n    \"m\": formatMonthNumber,\n    \"M\": formatMinutes,\n    \"p\": formatPeriod,\n    \"Q\": formatUnixTimestamp,\n    \"s\": formatUnixTimestampSeconds,\n    \"S\": formatSeconds,\n    \"u\": formatWeekdayNumberMonday,\n    \"U\": formatWeekNumberSunday,\n    \"V\": formatWeekNumberISO,\n    \"w\": formatWeekdayNumberSunday,\n    \"W\": formatWeekNumberMonday,\n    \"x\": null,\n    \"X\": null,\n    \"y\": formatYear,\n    \"Y\": formatFullYear,\n    \"Z\": formatZone,\n    \"%\": formatLiteralPercent\n  };\n\n  var utcFormats = {\n    \"a\": formatUTCShortWeekday,\n    \"A\": formatUTCWeekday,\n    \"b\": formatUTCShortMonth,\n    \"B\": formatUTCMonth,\n    \"c\": null,\n    \"d\": formatUTCDayOfMonth,\n    \"e\": formatUTCDayOfMonth,\n    \"f\": formatUTCMicroseconds,\n    \"H\": formatUTCHour24,\n    \"I\": formatUTCHour12,\n    \"j\": formatUTCDayOfYear,\n    \"L\": formatUTCMilliseconds,\n    \"m\": formatUTCMonthNumber,\n    \"M\": formatUTCMinutes,\n    \"p\": formatUTCPeriod,\n    \"Q\": formatUnixTimestamp,\n    \"s\": formatUnixTimestampSeconds,\n    \"S\": formatUTCSeconds,\n    \"u\": formatUTCWeekdayNumberMonday,\n    \"U\": formatUTCWeekNumberSunday,\n    \"V\": formatUTCWeekNumberISO,\n    \"w\": formatUTCWeekdayNumberSunday,\n    \"W\": formatUTCWeekNumberMonday,\n    \"x\": null,\n    \"X\": null,\n    \"y\": formatUTCYear,\n    \"Y\": formatUTCFullYear,\n    \"Z\": formatUTCZone,\n    \"%\": formatLiteralPercent\n  };\n\n  var parses = {\n    \"a\": parseShortWeekday,\n    \"A\": parseWeekday,\n    \"b\": parseShortMonth,\n    \"B\": parseMonth,\n    \"c\": parseLocaleDateTime,\n    \"d\": parseDayOfMonth,\n    \"e\": parseDayOfMonth,\n    \"f\": parseMicroseconds,\n    \"H\": parseHour24,\n    \"I\": parseHour24,\n    \"j\": parseDayOfYear,\n    \"L\": parseMilliseconds,\n    \"m\": parseMonthNumber,\n    \"M\": parseMinutes,\n    \"p\": parsePeriod,\n    \"Q\": parseUnixTimestamp,\n    \"s\": parseUnixTimestampSeconds,\n    \"S\": parseSeconds,\n    \"u\": parseWeekdayNumberMonday,\n    \"U\": parseWeekNumberSunday,\n    \"V\": parseWeekNumberISO,\n    \"w\": parseWeekdayNumberSunday,\n    \"W\": parseWeekNumberMonday,\n    \"x\": parseLocaleDate,\n    \"X\": parseLocaleTime,\n    \"y\": parseYear,\n    \"Y\": parseFullYear,\n    \"Z\": parseZone,\n    \"%\": parseLiteralPercent\n  };\n\n  // These recursive directive definitions must be deferred.\n  formats.x = newFormat(locale_date, formats);\n  formats.X = newFormat(locale_time, formats);\n  formats.c = newFormat(locale_dateTime, formats);\n  utcFormats.x = newFormat(locale_date, utcFormats);\n  utcFormats.X = newFormat(locale_time, utcFormats);\n  utcFormats.c = newFormat(locale_dateTime, utcFormats);\n\n  function newFormat(specifier, formats) {\n    return function(date) {\n      var string = [],\n          i = -1,\n          j = 0,\n          n = specifier.length,\n          c,\n          pad,\n          format;\n\n      if (!(date instanceof Date)) date = new Date(+date);\n\n      while (++i < n) {\n        if (specifier.charCodeAt(i) === 37) {\n          string.push(specifier.slice(j, i));\n          if ((pad = pads[c = specifier.charAt(++i)]) != null) c = specifier.charAt(++i);\n          else pad = c === \"e\" ? \" \" : \"0\";\n          if (format = formats[c]) c = format(date, pad);\n          string.push(c);\n          j = i + 1;\n        }\n      }\n\n      string.push(specifier.slice(j, i));\n      return string.join(\"\");\n    };\n  }\n\n  function newParse(specifier, newDate) {\n    return function(string) {\n      var d = newYear(1900),\n          i = parseSpecifier(d, specifier, string += \"\", 0),\n          week, day;\n      if (i != string.length) return null;\n\n      // If a UNIX timestamp is specified, return it.\n      if (\"Q\" in d) return new Date(d.Q);\n\n      // The am-pm flag is 0 for AM, and 1 for PM.\n      if (\"p\" in d) d.H = d.H % 12 + d.p * 12;\n\n      // Convert day-of-week and week-of-year to day-of-year.\n      if (\"V\" in d) {\n        if (d.V < 1 || d.V > 53) return null;\n        if (!(\"w\" in d)) d.w = 1;\n        if (\"Z\" in d) {\n          week = utcDate(newYear(d.y)), day = week.getUTCDay();\n          week = day > 4 || day === 0 ? utcMonday.ceil(week) : utcMonday(week);\n          week = utcDay.offset(week, (d.V - 1) * 7);\n          d.y = week.getUTCFullYear();\n          d.m = week.getUTCMonth();\n          d.d = week.getUTCDate() + (d.w + 6) % 7;\n        } else {\n          week = newDate(newYear(d.y)), day = week.getDay();\n          week = day > 4 || day === 0 ? timeMonday.ceil(week) : timeMonday(week);\n          week = timeDay.offset(week, (d.V - 1) * 7);\n          d.y = week.getFullYear();\n          d.m = week.getMonth();\n          d.d = week.getDate() + (d.w + 6) % 7;\n        }\n      } else if (\"W\" in d || \"U\" in d) {\n        if (!(\"w\" in d)) d.w = \"u\" in d ? d.u % 7 : \"W\" in d ? 1 : 0;\n        day = \"Z\" in d ? utcDate(newYear(d.y)).getUTCDay() : newDate(newYear(d.y)).getDay();\n        d.m = 0;\n        d.d = \"W\" in d ? (d.w + 6) % 7 + d.W * 7 - (day + 5) % 7 : d.w + d.U * 7 - (day + 6) % 7;\n      }\n\n      // If a time zone is specified, all fields are interpreted as UTC and then\n      // offset according to the specified time zone.\n      if (\"Z\" in d) {\n        d.H += d.Z / 100 | 0;\n        d.M += d.Z % 100;\n        return utcDate(d);\n      }\n\n      // Otherwise, all fields are in local time.\n      return newDate(d);\n    };\n  }\n\n  function parseSpecifier(d, specifier, string, j) {\n    var i = 0,\n        n = specifier.length,\n        m = string.length,\n        c,\n        parse;\n\n    while (i < n) {\n      if (j >= m) return -1;\n      c = specifier.charCodeAt(i++);\n      if (c === 37) {\n        c = specifier.charAt(i++);\n        parse = parses[c in pads ? specifier.charAt(i++) : c];\n        if (!parse || ((j = parse(d, string, j)) < 0)) return -1;\n      } else if (c != string.charCodeAt(j++)) {\n        return -1;\n      }\n    }\n\n    return j;\n  }\n\n  function parsePeriod(d, string, i) {\n    var n = periodRe.exec(string.slice(i));\n    return n ? (d.p = periodLookup[n[0].toLowerCase()], i + n[0].length) : -1;\n  }\n\n  function parseShortWeekday(d, string, i) {\n    var n = shortWeekdayRe.exec(string.slice(i));\n    return n ? (d.w = shortWeekdayLookup[n[0].toLowerCase()], i + n[0].length) : -1;\n  }\n\n  function parseWeekday(d, string, i) {\n    var n = weekdayRe.exec(string.slice(i));\n    return n ? (d.w = weekdayLookup[n[0].toLowerCase()], i + n[0].length) : -1;\n  }\n\n  function parseShortMonth(d, string, i) {\n    var n = shortMonthRe.exec(string.slice(i));\n    return n ? (d.m = shortMonthLookup[n[0].toLowerCase()], i + n[0].length) : -1;\n  }\n\n  function parseMonth(d, string, i) {\n    var n = monthRe.exec(string.slice(i));\n    return n ? (d.m = monthLookup[n[0].toLowerCase()], i + n[0].length) : -1;\n  }\n\n  function parseLocaleDateTime(d, string, i) {\n    return parseSpecifier(d, locale_dateTime, string, i);\n  }\n\n  function parseLocaleDate(d, string, i) {\n    return parseSpecifier(d, locale_date, string, i);\n  }\n\n  function parseLocaleTime(d, string, i) {\n    return parseSpecifier(d, locale_time, string, i);\n  }\n\n  function formatShortWeekday(d) {\n    return locale_shortWeekdays[d.getDay()];\n  }\n\n  function formatWeekday(d) {\n    return locale_weekdays[d.getDay()];\n  }\n\n  function formatShortMonth(d) {\n    return locale_shortMonths[d.getMonth()];\n  }\n\n  function formatMonth(d) {\n    return locale_months[d.getMonth()];\n  }\n\n  function formatPeriod(d) {\n    return locale_periods[+(d.getHours() >= 12)];\n  }\n\n  function formatUTCShortWeekday(d) {\n    return locale_shortWeekdays[d.getUTCDay()];\n  }\n\n  function formatUTCWeekday(d) {\n    return locale_weekdays[d.getUTCDay()];\n  }\n\n  function formatUTCShortMonth(d) {\n    return locale_shortMonths[d.getUTCMonth()];\n  }\n\n  function formatUTCMonth(d) {\n    return locale_months[d.getUTCMonth()];\n  }\n\n  function formatUTCPeriod(d) {\n    return locale_periods[+(d.getUTCHours() >= 12)];\n  }\n\n  return {\n    format: function(specifier) {\n      var f = newFormat(specifier += \"\", formats);\n      f.toString = function() { return specifier; };\n      return f;\n    },\n    parse: function(specifier) {\n      var p = newParse(specifier += \"\", localDate);\n      p.toString = function() { return specifier; };\n      return p;\n    },\n    utcFormat: function(specifier) {\n      var f = newFormat(specifier += \"\", utcFormats);\n      f.toString = function() { return specifier; };\n      return f;\n    },\n    utcParse: function(specifier) {\n      var p = newParse(specifier, utcDate);\n      p.toString = function() { return specifier; };\n      return p;\n    }\n  };\n}\n\nvar pads = {\"-\": \"\", \"_\": \" \", \"0\": \"0\"},\n    numberRe = /^\\s*\\d+/, // note: ignores next directive\n    percentRe = /^%/,\n    requoteRe = /[\\\\^$*+?|[\\]().{}]/g;\n\nfunction pad(value, fill, width) {\n  var sign = value < 0 ? \"-\" : \"\",\n      string = (sign ? -value : value) + \"\",\n      length = string.length;\n  return sign + (length < width ? new Array(width - length + 1).join(fill) + string : string);\n}\n\nfunction requote(s) {\n  return s.replace(requoteRe, \"\\\\$&\");\n}\n\nfunction formatRe(names) {\n  return new RegExp(\"^(?:\" + names.map(requote).join(\"|\") + \")\", \"i\");\n}\n\nfunction formatLookup(names) {\n  var map = {}, i = -1, n = names.length;\n  while (++i < n) map[names[i].toLowerCase()] = i;\n  return map;\n}\n\nfunction parseWeekdayNumberSunday(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 1));\n  return n ? (d.w = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseWeekdayNumberMonday(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 1));\n  return n ? (d.u = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseWeekNumberSunday(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.U = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseWeekNumberISO(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.V = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseWeekNumberMonday(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.W = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseFullYear(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 4));\n  return n ? (d.y = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseYear(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.y = +n[0] + (+n[0] > 68 ? 1900 : 2000), i + n[0].length) : -1;\n}\n\nfunction parseZone(d, string, i) {\n  var n = /^(Z)|([+-]\\d\\d)(?::?(\\d\\d))?/.exec(string.slice(i, i + 6));\n  return n ? (d.Z = n[1] ? 0 : -(n[2] + (n[3] || \"00\")), i + n[0].length) : -1;\n}\n\nfunction parseMonthNumber(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.m = n[0] - 1, i + n[0].length) : -1;\n}\n\nfunction parseDayOfMonth(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.d = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseDayOfYear(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 3));\n  return n ? (d.m = 0, d.d = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseHour24(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.H = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseMinutes(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.M = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseSeconds(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.S = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseMilliseconds(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 3));\n  return n ? (d.L = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseMicroseconds(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 6));\n  return n ? (d.L = Math.floor(n[0] / 1000), i + n[0].length) : -1;\n}\n\nfunction parseLiteralPercent(d, string, i) {\n  var n = percentRe.exec(string.slice(i, i + 1));\n  return n ? i + n[0].length : -1;\n}\n\nfunction parseUnixTimestamp(d, string, i) {\n  var n = numberRe.exec(string.slice(i));\n  return n ? (d.Q = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseUnixTimestampSeconds(d, string, i) {\n  var n = numberRe.exec(string.slice(i));\n  return n ? (d.Q = (+n[0]) * 1000, i + n[0].length) : -1;\n}\n\nfunction formatDayOfMonth(d, p) {\n  return pad(d.getDate(), p, 2);\n}\n\nfunction formatHour24(d, p) {\n  return pad(d.getHours(), p, 2);\n}\n\nfunction formatHour12(d, p) {\n  return pad(d.getHours() % 12 || 12, p, 2);\n}\n\nfunction formatDayOfYear(d, p) {\n  return pad(1 + timeDay.count(timeYear(d), d), p, 3);\n}\n\nfunction formatMilliseconds(d, p) {\n  return pad(d.getMilliseconds(), p, 3);\n}\n\nfunction formatMicroseconds(d, p) {\n  return formatMilliseconds(d, p) + \"000\";\n}\n\nfunction formatMonthNumber(d, p) {\n  return pad(d.getMonth() + 1, p, 2);\n}\n\nfunction formatMinutes(d, p) {\n  return pad(d.getMinutes(), p, 2);\n}\n\nfunction formatSeconds(d, p) {\n  return pad(d.getSeconds(), p, 2);\n}\n\nfunction formatWeekdayNumberMonday(d) {\n  var day = d.getDay();\n  return day === 0 ? 7 : day;\n}\n\nfunction formatWeekNumberSunday(d, p) {\n  return pad(timeSunday.count(timeYear(d), d), p, 2);\n}\n\nfunction formatWeekNumberISO(d, p) {\n  var day = d.getDay();\n  d = (day >= 4 || day === 0) ? timeThursday(d) : timeThursday.ceil(d);\n  return pad(timeThursday.count(timeYear(d), d) + (timeYear(d).getDay() === 4), p, 2);\n}\n\nfunction formatWeekdayNumberSunday(d) {\n  return d.getDay();\n}\n\nfunction formatWeekNumberMonday(d, p) {\n  return pad(timeMonday.count(timeYear(d), d), p, 2);\n}\n\nfunction formatYear(d, p) {\n  return pad(d.getFullYear() % 100, p, 2);\n}\n\nfunction formatFullYear(d, p) {\n  return pad(d.getFullYear() % 10000, p, 4);\n}\n\nfunction formatZone(d) {\n  var z = d.getTimezoneOffset();\n  return (z > 0 ? \"-\" : (z *= -1, \"+\"))\n      + pad(z / 60 | 0, \"0\", 2)\n      + pad(z % 60, \"0\", 2);\n}\n\nfunction formatUTCDayOfMonth(d, p) {\n  return pad(d.getUTCDate(), p, 2);\n}\n\nfunction formatUTCHour24(d, p) {\n  return pad(d.getUTCHours(), p, 2);\n}\n\nfunction formatUTCHour12(d, p) {\n  return pad(d.getUTCHours() % 12 || 12, p, 2);\n}\n\nfunction formatUTCDayOfYear(d, p) {\n  return pad(1 + utcDay.count(utcYear(d), d), p, 3);\n}\n\nfunction formatUTCMilliseconds(d, p) {\n  return pad(d.getUTCMilliseconds(), p, 3);\n}\n\nfunction formatUTCMicroseconds(d, p) {\n  return formatUTCMilliseconds(d, p) + \"000\";\n}\n\nfunction formatUTCMonthNumber(d, p) {\n  return pad(d.getUTCMonth() + 1, p, 2);\n}\n\nfunction formatUTCMinutes(d, p) {\n  return pad(d.getUTCMinutes(), p, 2);\n}\n\nfunction formatUTCSeconds(d, p) {\n  return pad(d.getUTCSeconds(), p, 2);\n}\n\nfunction formatUTCWeekdayNumberMonday(d) {\n  var dow = d.getUTCDay();\n  return dow === 0 ? 7 : dow;\n}\n\nfunction formatUTCWeekNumberSunday(d, p) {\n  return pad(utcSunday.count(utcYear(d), d), p, 2);\n}\n\nfunction formatUTCWeekNumberISO(d, p) {\n  var day = d.getUTCDay();\n  d = (day >= 4 || day === 0) ? utcThursday(d) : utcThursday.ceil(d);\n  return pad(utcThursday.count(utcYear(d), d) + (utcYear(d).getUTCDay() === 4), p, 2);\n}\n\nfunction formatUTCWeekdayNumberSunday(d) {\n  return d.getUTCDay();\n}\n\nfunction formatUTCWeekNumberMonday(d, p) {\n  return pad(utcMonday.count(utcYear(d), d), p, 2);\n}\n\nfunction formatUTCYear(d, p) {\n  return pad(d.getUTCFullYear() % 100, p, 2);\n}\n\nfunction formatUTCFullYear(d, p) {\n  return pad(d.getUTCFullYear() % 10000, p, 4);\n}\n\nfunction formatUTCZone() {\n  return \"+0000\";\n}\n\nfunction formatLiteralPercent() {\n  return \"%\";\n}\n\nfunction formatUnixTimestamp(d) {\n  return +d;\n}\n\nfunction formatUnixTimestampSeconds(d) {\n  return Math.floor(+d / 1000);\n}\n","import formatLocale from \"./locale\";\n\nvar locale;\nexport var timeFormat;\nexport var timeParse;\nexport var utcFormat;\nexport var utcParse;\n\ndefaultLocale({\n  dateTime: \"%x, %X\",\n  date: \"%-m/%-d/%Y\",\n  time: \"%-I:%M:%S %p\",\n  periods: [\"AM\", \"PM\"],\n  days: [\"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\"],\n  shortDays: [\"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\"],\n  months: [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"],\n  shortMonths: [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"]\n});\n\nexport default function defaultLocale(definition) {\n  locale = formatLocale(definition);\n  timeFormat = locale.format;\n  timeParse = locale.parse;\n  utcFormat = locale.utcFormat;\n  utcParse = locale.utcParse;\n  return locale;\n}\n","import {utcFormat} from \"./defaultLocale\";\n\nexport var isoSpecifier = \"%Y-%m-%dT%H:%M:%S.%LZ\";\n\nfunction formatIsoNative(date) {\n  return date.toISOString();\n}\n\nvar formatIso = Date.prototype.toISOString\n    ? formatIsoNative\n    : utcFormat(isoSpecifier);\n\nexport default formatIso;\n","import {isoSpecifier} from \"./isoFormat\";\nimport {utcParse} from \"./defaultLocale\";\n\nfunction parseIsoNative(string) {\n  var date = new Date(string);\n  return isNaN(date) ? null : date;\n}\n\nvar parseIso = +new Date(\"2000-01-01T00:00:00.000Z\")\n    ? parseIsoNative\n    : utcParse(isoSpecifier);\n\nexport default parseIso;\n","import {bisector, tickStep} from \"d3-array\";\nimport {interpolateNumber as reinterpolate} from \"d3-interpolate\";\nimport {timeYear, timeMonth, timeWeek, timeDay, timeHour, timeMinute, timeSecond, timeMillisecond} from \"d3-time\";\nimport {timeFormat} from \"d3-time-format\";\nimport {map} from \"./array\";\nimport {default as continuous, copy, deinterpolateLinear as deinterpolate} from \"./continuous\";\nimport nice from \"./nice\";\n\nvar durationSecond = 1000,\n    durationMinute = durationSecond * 60,\n    durationHour = durationMinute * 60,\n    durationDay = durationHour * 24,\n    durationWeek = durationDay * 7,\n    durationMonth = durationDay * 30,\n    durationYear = durationDay * 365;\n\nfunction date(t) {\n  return new Date(t);\n}\n\nfunction number(t) {\n  return t instanceof Date ? +t : +new Date(+t);\n}\n\nexport function calendar(year, month, week, day, hour, minute, second, millisecond, format) {\n  var scale = continuous(deinterpolate, reinterpolate),\n      invert = scale.invert,\n      domain = scale.domain;\n\n  var formatMillisecond = format(\".%L\"),\n      formatSecond = format(\":%S\"),\n      formatMinute = format(\"%I:%M\"),\n      formatHour = format(\"%I %p\"),\n      formatDay = format(\"%a %d\"),\n      formatWeek = format(\"%b %d\"),\n      formatMonth = format(\"%B\"),\n      formatYear = format(\"%Y\");\n\n  var tickIntervals = [\n    [second,  1,      durationSecond],\n    [second,  5,  5 * durationSecond],\n    [second, 15, 15 * durationSecond],\n    [second, 30, 30 * durationSecond],\n    [minute,  1,      durationMinute],\n    [minute,  5,  5 * durationMinute],\n    [minute, 15, 15 * durationMinute],\n    [minute, 30, 30 * durationMinute],\n    [  hour,  1,      durationHour  ],\n    [  hour,  3,  3 * durationHour  ],\n    [  hour,  6,  6 * durationHour  ],\n    [  hour, 12, 12 * durationHour  ],\n    [   day,  1,      durationDay   ],\n    [   day,  2,  2 * durationDay   ],\n    [  week,  1,      durationWeek  ],\n    [ month,  1,      durationMonth ],\n    [ month,  3,  3 * durationMonth ],\n    [  year,  1,      durationYear  ]\n  ];\n\n  function tickFormat(date) {\n    return (second(date) < date ? formatMillisecond\n        : minute(date) < date ? formatSecond\n        : hour(date) < date ? formatMinute\n        : day(date) < date ? formatHour\n        : month(date) < date ? (week(date) < date ? formatDay : formatWeek)\n        : year(date) < date ? formatMonth\n        : formatYear)(date);\n  }\n\n  function tickInterval(interval, start, stop, step) {\n    if (interval == null) interval = 10;\n\n    // If a desired tick count is specified, pick a reasonable tick interval\n    // based on the extent of the domain and a rough estimate of tick size.\n    // Otherwise, assume interval is already a time interval and use it.\n    if (typeof interval === \"number\") {\n      var target = Math.abs(stop - start) / interval,\n          i = bisector(function(i) { return i[2]; }).right(tickIntervals, target);\n      if (i === tickIntervals.length) {\n        step = tickStep(start / durationYear, stop / durationYear, interval);\n        interval = year;\n      } else if (i) {\n        i = tickIntervals[target / tickIntervals[i - 1][2] < tickIntervals[i][2] / target ? i - 1 : i];\n        step = i[1];\n        interval = i[0];\n      } else {\n        step = Math.max(tickStep(start, stop, interval), 1);\n        interval = millisecond;\n      }\n    }\n\n    return step == null ? interval : interval.every(step);\n  }\n\n  scale.invert = function(y) {\n    return new Date(invert(y));\n  };\n\n  scale.domain = function(_) {\n    return arguments.length ? domain(map.call(_, number)) : domain().map(date);\n  };\n\n  scale.ticks = function(interval, step) {\n    var d = domain(),\n        t0 = d[0],\n        t1 = d[d.length - 1],\n        r = t1 < t0,\n        t;\n    if (r) t = t0, t0 = t1, t1 = t;\n    t = tickInterval(interval, t0, t1, step);\n    t = t ? t.range(t0, t1 + 1) : []; // inclusive stop\n    return r ? t.reverse() : t;\n  };\n\n  scale.tickFormat = function(count, specifier) {\n    return specifier == null ? tickFormat : format(specifier);\n  };\n\n  scale.nice = function(interval, step) {\n    var d = domain();\n    return (interval = tickInterval(interval, d[0], d[d.length - 1], step))\n        ? domain(nice(d, interval))\n        : scale;\n  };\n\n  scale.copy = function() {\n    return copy(scale, calendar(year, month, week, day, hour, minute, second, millisecond, format));\n  };\n\n  return scale;\n}\n\nexport default function() {\n  return calendar(timeYear, timeMonth, timeWeek, timeDay, timeHour, timeMinute, timeSecond, timeMillisecond, timeFormat).domain([new Date(2000, 0, 1), new Date(2000, 0, 2)]);\n}\n","export default function(s) {\n  return s.match(/.{6}/g).map(function(x) {\n    return \"#\" + x;\n  });\n}\n","import colors from \"./colors\";\n\nexport default colors(\"1f77b4ff7f0e2ca02cd627289467bd8c564be377c27f7f7fbcbd2217becf\");\n","import colors from \"./colors\";\n\nexport default colors(\"393b795254a36b6ecf9c9ede6379398ca252b5cf6bcedb9c8c6d31bd9e39e7ba52e7cb94843c39ad494ad6616be7969c7b4173a55194ce6dbdde9ed6\");\n","import colors from \"./colors\";\n\nexport default colors(\"1f77b4aec7e8ff7f0effbb782ca02c98df8ad62728ff98969467bdc5b0d58c564bc49c94e377c2f7b6d27f7f7fc7c7c7bcbd22dbdb8d17becf9edae5\");\n","import colors from \"./colors\";\n\nexport default colors(\"3182bd6baed69ecae1c6dbefe6550dfd8d3cfdae6bfdd0a231a35474c476a1d99bc7e9c0756bb19e9ac8bcbddcdadaeb636363969696bdbdbdd9d9d9\");\n","import {cubehelix} from \"d3-color\";\nimport {interpolateCubehelixLong} from \"d3-interpolate\";\n\nexport default interpolateCubehelixLong(cubehelix(300, 0.5, 0.0), cubehelix(-240, 0.5, 1.0));\n","import {cubehelix} from \"d3-color\";\nimport {interpolateCubehelixLong} from \"d3-interpolate\";\n\nexport var warm = interpolateCubehelixLong(cubehelix(-100, 0.75, 0.35), cubehelix(80, 1.50, 0.8));\n\nexport var cool = interpolateCubehelixLong(cubehelix(260, 0.75, 0.35), cubehelix(80, 1.50, 0.8));\n\nvar rainbow = cubehelix();\n\nexport default function(t) {\n  if (t < 0 || t > 1) t -= Math.floor(t);\n  var ts = Math.abs(t - 0.5);\n  rainbow.h = 360 * t - 100;\n  rainbow.s = 1.5 - 1.5 * ts;\n  rainbow.l = 0.8 - 0.9 * ts;\n  return rainbow + \"\";\n}\n","import colors from \"./colors\";\n\nfunction ramp(range) {\n  var n = range.length;\n  return function(t) {\n    return range[Math.max(0, Math.min(n - 1, Math.floor(t * n)))];\n  };\n}\n\nexport default ramp(colors(\"44015444025645045745055946075a46085c460a5d460b5e470d60470e6147106347116447136548146748166848176948186a481a6c481b6d481c6e481d6f481f70482071482173482374482475482576482677482878482979472a7a472c7a472d7b472e7c472f7d46307e46327e46337f463480453581453781453882443983443a83443b84433d84433e85423f854240864241864142874144874045884046883f47883f48893e49893e4a893e4c8a3d4d8a3d4e8a3c4f8a3c508b3b518b3b528b3a538b3a548c39558c39568c38588c38598c375a8c375b8d365c8d365d8d355e8d355f8d34608d34618d33628d33638d32648e32658e31668e31678e31688e30698e306a8e2f6b8e2f6c8e2e6d8e2e6e8e2e6f8e2d708e2d718e2c718e2c728e2c738e2b748e2b758e2a768e2a778e2a788e29798e297a8e297b8e287c8e287d8e277e8e277f8e27808e26818e26828e26828e25838e25848e25858e24868e24878e23888e23898e238a8d228b8d228c8d228d8d218e8d218f8d21908d21918c20928c20928c20938c1f948c1f958b1f968b1f978b1f988b1f998a1f9a8a1e9b8a1e9c891e9d891f9e891f9f881fa0881fa1881fa1871fa28720a38620a48621a58521a68522a78522a88423a98324aa8325ab8225ac8226ad8127ad8128ae8029af7f2ab07f2cb17e2db27d2eb37c2fb47c31b57b32b67a34b67935b77937b87838b9773aba763bbb753dbc743fbc7340bd7242be7144bf7046c06f48c16e4ac16d4cc26c4ec36b50c46a52c56954c56856c66758c7655ac8645cc8635ec96260ca6063cb5f65cb5e67cc5c69cd5b6ccd5a6ece5870cf5773d05675d05477d1537ad1517cd2507fd34e81d34d84d44b86d54989d5488bd6468ed64590d74393d74195d84098d83e9bd93c9dd93ba0da39a2da37a5db36a8db34aadc32addc30b0dd2fb2dd2db5de2bb8de29bade28bddf26c0df25c2df23c5e021c8e020cae11fcde11dd0e11cd2e21bd5e21ad8e219dae319dde318dfe318e2e418e5e419e7e419eae51aece51befe51cf1e51df4e61ef6e620f8e621fbe723fde725\"));\n\nexport var magma = ramp(colors(\"00000401000501010601010802010902020b02020d03030f03031204041405041606051806051a07061c08071e0907200a08220b09240c09260d0a290e0b2b100b2d110c2f120d31130d34140e36150e38160f3b180f3d19103f1a10421c10441d11471e114920114b21114e22115024125325125527125829115a2a115c2c115f2d11612f116331116533106734106936106b38106c390f6e3b0f703d0f713f0f72400f74420f75440f764510774710784910784a10794c117a4e117b4f127b51127c52137c54137d56147d57157e59157e5a167e5c167f5d177f5f187f601880621980641a80651a80671b80681c816a1c816b1d816d1d816e1e81701f81721f817320817521817621817822817922827b23827c23827e24828025828125818326818426818627818827818928818b29818c29818e2a81902a81912b81932b80942c80962c80982d80992d809b2e7f9c2e7f9e2f7fa02f7fa1307ea3307ea5317ea6317da8327daa337dab337cad347cae347bb0357bb2357bb3367ab5367ab73779b83779ba3878bc3978bd3977bf3a77c03a76c23b75c43c75c53c74c73d73c83e73ca3e72cc3f71cd4071cf4070d0416fd2426fd3436ed5446dd6456cd8456cd9466bdb476adc4869de4968df4a68e04c67e24d66e34e65e44f64e55064e75263e85362e95462ea5661eb5760ec5860ed5a5fee5b5eef5d5ef05f5ef1605df2625df2645cf3655cf4675cf4695cf56b5cf66c5cf66e5cf7705cf7725cf8745cf8765cf9785df9795df97b5dfa7d5efa7f5efa815ffb835ffb8560fb8761fc8961fc8a62fc8c63fc8e64fc9065fd9266fd9467fd9668fd9869fd9a6afd9b6bfe9d6cfe9f6dfea16efea36ffea571fea772fea973feaa74feac76feae77feb078feb27afeb47bfeb67cfeb77efeb97ffebb81febd82febf84fec185fec287fec488fec68afec88cfeca8dfecc8ffecd90fecf92fed194fed395fed597fed799fed89afdda9cfddc9efddea0fde0a1fde2a3fde3a5fde5a7fde7a9fde9aafdebacfcecaefceeb0fcf0b2fcf2b4fcf4b6fcf6b8fcf7b9fcf9bbfcfbbdfcfdbf\"));\n\nexport var inferno = ramp(colors(\"00000401000501010601010802010a02020c02020e03021004031204031405041706041907051b08051d09061f0a07220b07240c08260d08290e092b10092d110a30120a32140b34150b37160b39180c3c190c3e1b0c411c0c431e0c451f0c48210c4a230c4c240c4f260c51280b53290b552b0b572d0b592f0a5b310a5c320a5e340a5f3609613809623909633b09643d09653e0966400a67420a68440a68450a69470b6a490b6a4a0c6b4c0c6b4d0d6c4f0d6c510e6c520e6d540f6d550f6d57106e59106e5a116e5c126e5d126e5f136e61136e62146e64156e65156e67166e69166e6a176e6c186e6d186e6f196e71196e721a6e741a6e751b6e771c6d781c6d7a1d6d7c1d6d7d1e6d7f1e6c801f6c82206c84206b85216b87216b88226a8a226a8c23698d23698f24699025689225689326679526679727669827669a28659b29649d29649f2a63a02a63a22b62a32c61a52c60a62d60a82e5fa92e5eab2f5ead305dae305cb0315bb1325ab3325ab43359b63458b73557b93556ba3655bc3754bd3853bf3952c03a51c13a50c33b4fc43c4ec63d4dc73e4cc83f4bca404acb4149cc4248ce4347cf4446d04545d24644d34743d44842d54a41d74b3fd84c3ed94d3dda4e3cdb503bdd513ade5238df5337e05536e15635e25734e35933e45a31e55c30e65d2fe75e2ee8602de9612bea632aeb6429eb6628ec6726ed6925ee6a24ef6c23ef6e21f06f20f1711ff1731df2741cf3761bf37819f47918f57b17f57d15f67e14f68013f78212f78410f8850ff8870ef8890cf98b0bf98c0af98e09fa9008fa9207fa9407fb9606fb9706fb9906fb9b06fb9d07fc9f07fca108fca309fca50afca60cfca80dfcaa0ffcac11fcae12fcb014fcb216fcb418fbb61afbb81dfbba1ffbbc21fbbe23fac026fac228fac42afac62df9c72ff9c932f9cb35f8cd37f8cf3af7d13df7d340f6d543f6d746f5d949f5db4cf4dd4ff4df53f4e156f3e35af3e55df2e661f2e865f2ea69f1ec6df1ed71f1ef75f1f179f2f27df2f482f3f586f3f68af4f88ef5f992f6fa96f8fb9af9fc9dfafda1fcffa4\"));\n\nexport var plasma = ramp(colors(\"0d088710078813078916078a19068c1b068d1d068e20068f2206902406912605912805922a05932c05942e05952f059631059733059735049837049938049a3a049a3c049b3e049c3f049c41049d43039e44039e46039f48039f4903a04b03a14c02a14e02a25002a25102a35302a35502a45601a45801a45901a55b01a55c01a65e01a66001a66100a76300a76400a76600a76700a86900a86a00a86c00a86e00a86f00a87100a87201a87401a87501a87701a87801a87a02a87b02a87d03a87e03a88004a88104a78305a78405a78606a68707a68808a68a09a58b0aa58d0ba58e0ca48f0da4910ea3920fa39410a29511a19613a19814a099159f9a169f9c179e9d189d9e199da01a9ca11b9ba21d9aa31e9aa51f99a62098a72197a82296aa2395ab2494ac2694ad2793ae2892b02991b12a90b22b8fb32c8eb42e8db52f8cb6308bb7318ab83289ba3388bb3488bc3587bd3786be3885bf3984c03a83c13b82c23c81c33d80c43e7fc5407ec6417dc7427cc8437bc9447aca457acb4679cc4778cc4977cd4a76ce4b75cf4c74d04d73d14e72d24f71d35171d45270d5536fd5546ed6556dd7566cd8576bd9586ada5a6ada5b69db5c68dc5d67dd5e66de5f65de6164df6263e06363e16462e26561e26660e3685fe4695ee56a5de56b5de66c5ce76e5be76f5ae87059e97158e97257ea7457eb7556eb7655ec7754ed7953ed7a52ee7b51ef7c51ef7e50f07f4ff0804ef1814df1834cf2844bf3854bf3874af48849f48948f58b47f58c46f68d45f68f44f79044f79143f79342f89441f89540f9973ff9983ef99a3efa9b3dfa9c3cfa9e3bfb9f3afba139fba238fca338fca537fca636fca835fca934fdab33fdac33fdae32fdaf31fdb130fdb22ffdb42ffdb52efeb72dfeb82cfeba2cfebb2bfebd2afebe2afec029fdc229fdc328fdc527fdc627fdc827fdca26fdcb26fccd25fcce25fcd025fcd225fbd324fbd524fbd724fad824fada24f9dc24f9dd25f8df25f8e125f7e225f7e425f6e626f6e826f5e926f5eb27f4ed27f3ee27f3f027f2f227f1f426f1f525f0f724f0f921\"));\n","import {linearish} from \"./linear\";\n\nexport default function sequential(interpolator) {\n  var x0 = 0,\n      x1 = 1,\n      clamp = false;\n\n  function scale(x) {\n    var t = (x - x0) / (x1 - x0);\n    return interpolator(clamp ? Math.max(0, Math.min(1, t)) : t);\n  }\n\n  scale.domain = function(_) {\n    return arguments.length ? (x0 = +_[0], x1 = +_[1], scale) : [x0, x1];\n  };\n\n  scale.clamp = function(_) {\n    return arguments.length ? (clamp = !!_, scale) : clamp;\n  };\n\n  scale.interpolator = function(_) {\n    return arguments.length ? (interpolator = _, scale) : interpolator;\n  };\n\n  scale.copy = function() {\n    return sequential(interpolator).domain([x0, x1]).clamp(clamp);\n  };\n\n  return linearish(scale);\n}\n","export default function(specifier) {\n  var n = specifier.length / 6 | 0, colors = new Array(n), i = 0;\n  while (i < n) colors[i] = \"#\" + specifier.slice(i * 6, ++i * 6);\n  return colors;\n}\n","import colors from \"../colors\";\n\nexport default colors(\"7fc97fbeaed4fdc086ffff99386cb0f0027fbf5b17666666\");\n","import colors from \"../colors\";\n\nexport default colors(\"1f77b4ff7f0e2ca02cd627289467bd8c564be377c27f7f7fbcbd2217becf\");\n","import colors from \"../colors\";\n\nexport default colors(\"1b9e77d95f027570b3e7298a66a61ee6ab02a6761d666666\");\n","import colors from \"../colors\";\n\nexport default colors(\"a6cee31f78b4b2df8a33a02cfb9a99e31a1cfdbf6fff7f00cab2d66a3d9affff99b15928\");\n","import colors from \"../colors\";\n\nexport default colors(\"fbb4aeb3cde3ccebc5decbe4fed9a6ffffcce5d8bdfddaecf2f2f2\");\n","import colors from \"../colors\";\n\nexport default colors(\"b3e2cdfdcdaccbd5e8f4cae4e6f5c9fff2aef1e2cccccccc\");\n","import colors from \"../colors\";\n\nexport default colors(\"e41a1c377eb84daf4a984ea3ff7f00ffff33a65628f781bf999999\");\n","import colors from \"../colors\";\n\nexport default colors(\"66c2a5fc8d628da0cbe78ac3a6d854ffd92fe5c494b3b3b3\");\n","import colors from \"../colors\";\n\nexport default colors(\"8dd3c7ffffb3bebadafb807280b1d3fdb462b3de69fccde5d9d9d9bc80bdccebc5ffed6f\");\n","import {interpolateRgbBasis} from \"d3-interpolate\";\n\nexport default function(scheme) {\n  return interpolateRgbBasis(scheme[scheme.length - 1]);\n}\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"d8b365f5f5f55ab4ac\",\n  \"a6611adfc27d80cdc1018571\",\n  \"a6611adfc27df5f5f580cdc1018571\",\n  \"8c510ad8b365f6e8c3c7eae55ab4ac01665e\",\n  \"8c510ad8b365f6e8c3f5f5f5c7eae55ab4ac01665e\",\n  \"8c510abf812ddfc27df6e8c3c7eae580cdc135978f01665e\",\n  \"8c510abf812ddfc27df6e8c3f5f5f5c7eae580cdc135978f01665e\",\n  \"5430058c510abf812ddfc27df6e8c3c7eae580cdc135978f01665e003c30\",\n  \"5430058c510abf812ddfc27df6e8c3f5f5f5c7eae580cdc135978f01665e003c30\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"af8dc3f7f7f77fbf7b\",\n  \"7b3294c2a5cfa6dba0008837\",\n  \"7b3294c2a5cff7f7f7a6dba0008837\",\n  \"762a83af8dc3e7d4e8d9f0d37fbf7b1b7837\",\n  \"762a83af8dc3e7d4e8f7f7f7d9f0d37fbf7b1b7837\",\n  \"762a839970abc2a5cfe7d4e8d9f0d3a6dba05aae611b7837\",\n  \"762a839970abc2a5cfe7d4e8f7f7f7d9f0d3a6dba05aae611b7837\",\n  \"40004b762a839970abc2a5cfe7d4e8d9f0d3a6dba05aae611b783700441b\",\n  \"40004b762a839970abc2a5cfe7d4e8f7f7f7d9f0d3a6dba05aae611b783700441b\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"e9a3c9f7f7f7a1d76a\",\n  \"d01c8bf1b6dab8e1864dac26\",\n  \"d01c8bf1b6daf7f7f7b8e1864dac26\",\n  \"c51b7de9a3c9fde0efe6f5d0a1d76a4d9221\",\n  \"c51b7de9a3c9fde0eff7f7f7e6f5d0a1d76a4d9221\",\n  \"c51b7dde77aef1b6dafde0efe6f5d0b8e1867fbc414d9221\",\n  \"c51b7dde77aef1b6dafde0eff7f7f7e6f5d0b8e1867fbc414d9221\",\n  \"8e0152c51b7dde77aef1b6dafde0efe6f5d0b8e1867fbc414d9221276419\",\n  \"8e0152c51b7dde77aef1b6dafde0eff7f7f7e6f5d0b8e1867fbc414d9221276419\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"998ec3f7f7f7f1a340\",\n  \"5e3c99b2abd2fdb863e66101\",\n  \"5e3c99b2abd2f7f7f7fdb863e66101\",\n  \"542788998ec3d8daebfee0b6f1a340b35806\",\n  \"542788998ec3d8daebf7f7f7fee0b6f1a340b35806\",\n  \"5427888073acb2abd2d8daebfee0b6fdb863e08214b35806\",\n  \"5427888073acb2abd2d8daebf7f7f7fee0b6fdb863e08214b35806\",\n  \"2d004b5427888073acb2abd2d8daebfee0b6fdb863e08214b358067f3b08\",\n  \"2d004b5427888073acb2abd2d8daebf7f7f7fee0b6fdb863e08214b358067f3b08\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"ef8a62f7f7f767a9cf\",\n  \"ca0020f4a58292c5de0571b0\",\n  \"ca0020f4a582f7f7f792c5de0571b0\",\n  \"b2182bef8a62fddbc7d1e5f067a9cf2166ac\",\n  \"b2182bef8a62fddbc7f7f7f7d1e5f067a9cf2166ac\",\n  \"b2182bd6604df4a582fddbc7d1e5f092c5de4393c32166ac\",\n  \"b2182bd6604df4a582fddbc7f7f7f7d1e5f092c5de4393c32166ac\",\n  \"67001fb2182bd6604df4a582fddbc7d1e5f092c5de4393c32166ac053061\",\n  \"67001fb2182bd6604df4a582fddbc7f7f7f7d1e5f092c5de4393c32166ac053061\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"ef8a62ffffff999999\",\n  \"ca0020f4a582bababa404040\",\n  \"ca0020f4a582ffffffbababa404040\",\n  \"b2182bef8a62fddbc7e0e0e09999994d4d4d\",\n  \"b2182bef8a62fddbc7ffffffe0e0e09999994d4d4d\",\n  \"b2182bd6604df4a582fddbc7e0e0e0bababa8787874d4d4d\",\n  \"b2182bd6604df4a582fddbc7ffffffe0e0e0bababa8787874d4d4d\",\n  \"67001fb2182bd6604df4a582fddbc7e0e0e0bababa8787874d4d4d1a1a1a\",\n  \"67001fb2182bd6604df4a582fddbc7ffffffe0e0e0bababa8787874d4d4d1a1a1a\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"fc8d59ffffbf91bfdb\",\n  \"d7191cfdae61abd9e92c7bb6\",\n  \"d7191cfdae61ffffbfabd9e92c7bb6\",\n  \"d73027fc8d59fee090e0f3f891bfdb4575b4\",\n  \"d73027fc8d59fee090ffffbfe0f3f891bfdb4575b4\",\n  \"d73027f46d43fdae61fee090e0f3f8abd9e974add14575b4\",\n  \"d73027f46d43fdae61fee090ffffbfe0f3f8abd9e974add14575b4\",\n  \"a50026d73027f46d43fdae61fee090e0f3f8abd9e974add14575b4313695\",\n  \"a50026d73027f46d43fdae61fee090ffffbfe0f3f8abd9e974add14575b4313695\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"fc8d59ffffbf91cf60\",\n  \"d7191cfdae61a6d96a1a9641\",\n  \"d7191cfdae61ffffbfa6d96a1a9641\",\n  \"d73027fc8d59fee08bd9ef8b91cf601a9850\",\n  \"d73027fc8d59fee08bffffbfd9ef8b91cf601a9850\",\n  \"d73027f46d43fdae61fee08bd9ef8ba6d96a66bd631a9850\",\n  \"d73027f46d43fdae61fee08bffffbfd9ef8ba6d96a66bd631a9850\",\n  \"a50026d73027f46d43fdae61fee08bd9ef8ba6d96a66bd631a9850006837\",\n  \"a50026d73027f46d43fdae61fee08bffffbfd9ef8ba6d96a66bd631a9850006837\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"fc8d59ffffbf99d594\",\n  \"d7191cfdae61abdda42b83ba\",\n  \"d7191cfdae61ffffbfabdda42b83ba\",\n  \"d53e4ffc8d59fee08be6f59899d5943288bd\",\n  \"d53e4ffc8d59fee08bffffbfe6f59899d5943288bd\",\n  \"d53e4ff46d43fdae61fee08be6f598abdda466c2a53288bd\",\n  \"d53e4ff46d43fdae61fee08bffffbfe6f598abdda466c2a53288bd\",\n  \"9e0142d53e4ff46d43fdae61fee08be6f598abdda466c2a53288bd5e4fa2\",\n  \"9e0142d53e4ff46d43fdae61fee08bffffbfe6f598abdda466c2a53288bd5e4fa2\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"e5f5f999d8c92ca25f\",\n  \"edf8fbb2e2e266c2a4238b45\",\n  \"edf8fbb2e2e266c2a42ca25f006d2c\",\n  \"edf8fbccece699d8c966c2a42ca25f006d2c\",\n  \"edf8fbccece699d8c966c2a441ae76238b45005824\",\n  \"f7fcfde5f5f9ccece699d8c966c2a441ae76238b45005824\",\n  \"f7fcfde5f5f9ccece699d8c966c2a441ae76238b45006d2c00441b\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"e0ecf49ebcda8856a7\",\n  \"edf8fbb3cde38c96c688419d\",\n  \"edf8fbb3cde38c96c68856a7810f7c\",\n  \"edf8fbbfd3e69ebcda8c96c68856a7810f7c\",\n  \"edf8fbbfd3e69ebcda8c96c68c6bb188419d6e016b\",\n  \"f7fcfde0ecf4bfd3e69ebcda8c96c68c6bb188419d6e016b\",\n  \"f7fcfde0ecf4bfd3e69ebcda8c96c68c6bb188419d810f7c4d004b\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"e0f3dba8ddb543a2ca\",\n  \"f0f9e8bae4bc7bccc42b8cbe\",\n  \"f0f9e8bae4bc7bccc443a2ca0868ac\",\n  \"f0f9e8ccebc5a8ddb57bccc443a2ca0868ac\",\n  \"f0f9e8ccebc5a8ddb57bccc44eb3d32b8cbe08589e\",\n  \"f7fcf0e0f3dbccebc5a8ddb57bccc44eb3d32b8cbe08589e\",\n  \"f7fcf0e0f3dbccebc5a8ddb57bccc44eb3d32b8cbe0868ac084081\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"fee8c8fdbb84e34a33\",\n  \"fef0d9fdcc8afc8d59d7301f\",\n  \"fef0d9fdcc8afc8d59e34a33b30000\",\n  \"fef0d9fdd49efdbb84fc8d59e34a33b30000\",\n  \"fef0d9fdd49efdbb84fc8d59ef6548d7301f990000\",\n  \"fff7ecfee8c8fdd49efdbb84fc8d59ef6548d7301f990000\",\n  \"fff7ecfee8c8fdd49efdbb84fc8d59ef6548d7301fb300007f0000\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"ece2f0a6bddb1c9099\",\n  \"f6eff7bdc9e167a9cf02818a\",\n  \"f6eff7bdc9e167a9cf1c9099016c59\",\n  \"f6eff7d0d1e6a6bddb67a9cf1c9099016c59\",\n  \"f6eff7d0d1e6a6bddb67a9cf3690c002818a016450\",\n  \"fff7fbece2f0d0d1e6a6bddb67a9cf3690c002818a016450\",\n  \"fff7fbece2f0d0d1e6a6bddb67a9cf3690c002818a016c59014636\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"ece7f2a6bddb2b8cbe\",\n  \"f1eef6bdc9e174a9cf0570b0\",\n  \"f1eef6bdc9e174a9cf2b8cbe045a8d\",\n  \"f1eef6d0d1e6a6bddb74a9cf2b8cbe045a8d\",\n  \"f1eef6d0d1e6a6bddb74a9cf3690c00570b0034e7b\",\n  \"fff7fbece7f2d0d1e6a6bddb74a9cf3690c00570b0034e7b\",\n  \"fff7fbece7f2d0d1e6a6bddb74a9cf3690c00570b0045a8d023858\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"e7e1efc994c7dd1c77\",\n  \"f1eef6d7b5d8df65b0ce1256\",\n  \"f1eef6d7b5d8df65b0dd1c77980043\",\n  \"f1eef6d4b9dac994c7df65b0dd1c77980043\",\n  \"f1eef6d4b9dac994c7df65b0e7298ace125691003f\",\n  \"f7f4f9e7e1efd4b9dac994c7df65b0e7298ace125691003f\",\n  \"f7f4f9e7e1efd4b9dac994c7df65b0e7298ace125698004367001f\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"fde0ddfa9fb5c51b8a\",\n  \"feebe2fbb4b9f768a1ae017e\",\n  \"feebe2fbb4b9f768a1c51b8a7a0177\",\n  \"feebe2fcc5c0fa9fb5f768a1c51b8a7a0177\",\n  \"feebe2fcc5c0fa9fb5f768a1dd3497ae017e7a0177\",\n  \"fff7f3fde0ddfcc5c0fa9fb5f768a1dd3497ae017e7a0177\",\n  \"fff7f3fde0ddfcc5c0fa9fb5f768a1dd3497ae017e7a017749006a\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"edf8b17fcdbb2c7fb8\",\n  \"ffffcca1dab441b6c4225ea8\",\n  \"ffffcca1dab441b6c42c7fb8253494\",\n  \"ffffccc7e9b47fcdbb41b6c42c7fb8253494\",\n  \"ffffccc7e9b47fcdbb41b6c41d91c0225ea80c2c84\",\n  \"ffffd9edf8b1c7e9b47fcdbb41b6c41d91c0225ea80c2c84\",\n  \"ffffd9edf8b1c7e9b47fcdbb41b6c41d91c0225ea8253494081d58\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"f7fcb9addd8e31a354\",\n  \"ffffccc2e69978c679238443\",\n  \"ffffccc2e69978c67931a354006837\",\n  \"ffffccd9f0a3addd8e78c67931a354006837\",\n  \"ffffccd9f0a3addd8e78c67941ab5d238443005a32\",\n  \"ffffe5f7fcb9d9f0a3addd8e78c67941ab5d238443005a32\",\n  \"ffffe5f7fcb9d9f0a3addd8e78c67941ab5d238443006837004529\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"fff7bcfec44fd95f0e\",\n  \"ffffd4fed98efe9929cc4c02\",\n  \"ffffd4fed98efe9929d95f0e993404\",\n  \"ffffd4fee391fec44ffe9929d95f0e993404\",\n  \"ffffd4fee391fec44ffe9929ec7014cc4c028c2d04\",\n  \"ffffe5fff7bcfee391fec44ffe9929ec7014cc4c028c2d04\",\n  \"ffffe5fff7bcfee391fec44ffe9929ec7014cc4c02993404662506\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"ffeda0feb24cf03b20\",\n  \"ffffb2fecc5cfd8d3ce31a1c\",\n  \"ffffb2fecc5cfd8d3cf03b20bd0026\",\n  \"ffffb2fed976feb24cfd8d3cf03b20bd0026\",\n  \"ffffb2fed976feb24cfd8d3cfc4e2ae31a1cb10026\",\n  \"ffffccffeda0fed976feb24cfd8d3cfc4e2ae31a1cb10026\",\n  \"ffffccffeda0fed976feb24cfd8d3cfc4e2ae31a1cbd0026800026\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"deebf79ecae13182bd\",\n  \"eff3ffbdd7e76baed62171b5\",\n  \"eff3ffbdd7e76baed63182bd08519c\",\n  \"eff3ffc6dbef9ecae16baed63182bd08519c\",\n  \"eff3ffc6dbef9ecae16baed64292c62171b5084594\",\n  \"f7fbffdeebf7c6dbef9ecae16baed64292c62171b5084594\",\n  \"f7fbffdeebf7c6dbef9ecae16baed64292c62171b508519c08306b\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"e5f5e0a1d99b31a354\",\n  \"edf8e9bae4b374c476238b45\",\n  \"edf8e9bae4b374c47631a354006d2c\",\n  \"edf8e9c7e9c0a1d99b74c47631a354006d2c\",\n  \"edf8e9c7e9c0a1d99b74c47641ab5d238b45005a32\",\n  \"f7fcf5e5f5e0c7e9c0a1d99b74c47641ab5d238b45005a32\",\n  \"f7fcf5e5f5e0c7e9c0a1d99b74c47641ab5d238b45006d2c00441b\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"f0f0f0bdbdbd636363\",\n  \"f7f7f7cccccc969696525252\",\n  \"f7f7f7cccccc969696636363252525\",\n  \"f7f7f7d9d9d9bdbdbd969696636363252525\",\n  \"f7f7f7d9d9d9bdbdbd969696737373525252252525\",\n  \"fffffff0f0f0d9d9d9bdbdbd969696737373525252252525\",\n  \"fffffff0f0f0d9d9d9bdbdbd969696737373525252252525000000\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"efedf5bcbddc756bb1\",\n  \"f2f0f7cbc9e29e9ac86a51a3\",\n  \"f2f0f7cbc9e29e9ac8756bb154278f\",\n  \"f2f0f7dadaebbcbddc9e9ac8756bb154278f\",\n  \"f2f0f7dadaebbcbddc9e9ac8807dba6a51a34a1486\",\n  \"fcfbfdefedf5dadaebbcbddc9e9ac8807dba6a51a34a1486\",\n  \"fcfbfdefedf5dadaebbcbddc9e9ac8807dba6a51a354278f3f007d\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"fee0d2fc9272de2d26\",\n  \"fee5d9fcae91fb6a4acb181d\",\n  \"fee5d9fcae91fb6a4ade2d26a50f15\",\n  \"fee5d9fcbba1fc9272fb6a4ade2d26a50f15\",\n  \"fee5d9fcbba1fc9272fb6a4aef3b2ccb181d99000d\",\n  \"fff5f0fee0d2fcbba1fc9272fb6a4aef3b2ccb181d99000d\",\n  \"fff5f0fee0d2fcbba1fc9272fb6a4aef3b2ccb181da50f1567000d\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"fee6cefdae6be6550d\",\n  \"feeddefdbe85fd8d3cd94701\",\n  \"feeddefdbe85fd8d3ce6550da63603\",\n  \"feeddefdd0a2fdae6bfd8d3ce6550da63603\",\n  \"feeddefdd0a2fdae6bfd8d3cf16913d948018c2d04\",\n  \"fff5ebfee6cefdd0a2fdae6bfd8d3cf16913d948018c2d04\",\n  \"fff5ebfee6cefdd0a2fdae6bfd8d3cf16913d94801a636037f2704\"\n).map(colors);\n\nexport default ramp(scheme);\n","import {cubehelix} from \"d3-color\";\nimport {interpolateCubehelixLong} from \"d3-interpolate\";\n\nexport default interpolateCubehelixLong(cubehelix(300, 0.5, 0.0), cubehelix(-240, 0.5, 1.0));\n","import {cubehelix} from \"d3-color\";\nimport {interpolateCubehelixLong} from \"d3-interpolate\";\n\nexport var warm = interpolateCubehelixLong(cubehelix(-100, 0.75, 0.35), cubehelix(80, 1.50, 0.8));\n\nexport var cool = interpolateCubehelixLong(cubehelix(260, 0.75, 0.35), cubehelix(80, 1.50, 0.8));\n\nvar c = cubehelix();\n\nexport default function(t) {\n  if (t < 0 || t > 1) t -= Math.floor(t);\n  var ts = Math.abs(t - 0.5);\n  c.h = 360 * t - 100;\n  c.s = 1.5 - 1.5 * ts;\n  c.l = 0.8 - 0.9 * ts;\n  return c + \"\";\n}\n","import {rgb} from \"d3-color\";\n\nvar c = rgb(),\n    pi_1_3 = Math.PI / 3,\n    pi_2_3 = Math.PI * 2 / 3;\n\nexport default function(t) {\n  var x;\n  t = (0.5 - t) * Math.PI;\n  c.r = 255 * (x = Math.sin(t)) * x;\n  c.g = 255 * (x = Math.sin(t + pi_1_3)) * x;\n  c.b = 255 * (x = Math.sin(t + pi_2_3)) * x;\n  return c + \"\";\n}\n","import colors from \"../colors\";\n\nfunction ramp(range) {\n  var n = range.length;\n  return function(t) {\n    return range[Math.max(0, Math.min(n - 1, Math.floor(t * n)))];\n  };\n}\n\nexport default ramp(colors(\"44015444025645045745055946075a46085c460a5d460b5e470d60470e6147106347116447136548146748166848176948186a481a6c481b6d481c6e481d6f481f70482071482173482374482475482576482677482878482979472a7a472c7a472d7b472e7c472f7d46307e46327e46337f463480453581453781453882443983443a83443b84433d84433e85423f854240864241864142874144874045884046883f47883f48893e49893e4a893e4c8a3d4d8a3d4e8a3c4f8a3c508b3b518b3b528b3a538b3a548c39558c39568c38588c38598c375a8c375b8d365c8d365d8d355e8d355f8d34608d34618d33628d33638d32648e32658e31668e31678e31688e30698e306a8e2f6b8e2f6c8e2e6d8e2e6e8e2e6f8e2d708e2d718e2c718e2c728e2c738e2b748e2b758e2a768e2a778e2a788e29798e297a8e297b8e287c8e287d8e277e8e277f8e27808e26818e26828e26828e25838e25848e25858e24868e24878e23888e23898e238a8d228b8d228c8d228d8d218e8d218f8d21908d21918c20928c20928c20938c1f948c1f958b1f968b1f978b1f988b1f998a1f9a8a1e9b8a1e9c891e9d891f9e891f9f881fa0881fa1881fa1871fa28720a38620a48621a58521a68522a78522a88423a98324aa8325ab8225ac8226ad8127ad8128ae8029af7f2ab07f2cb17e2db27d2eb37c2fb47c31b57b32b67a34b67935b77937b87838b9773aba763bbb753dbc743fbc7340bd7242be7144bf7046c06f48c16e4ac16d4cc26c4ec36b50c46a52c56954c56856c66758c7655ac8645cc8635ec96260ca6063cb5f65cb5e67cc5c69cd5b6ccd5a6ece5870cf5773d05675d05477d1537ad1517cd2507fd34e81d34d84d44b86d54989d5488bd6468ed64590d74393d74195d84098d83e9bd93c9dd93ba0da39a2da37a5db36a8db34aadc32addc30b0dd2fb2dd2db5de2bb8de29bade28bddf26c0df25c2df23c5e021c8e020cae11fcde11dd0e11cd2e21bd5e21ad8e219dae319dde318dfe318e2e418e5e419e7e419eae51aece51befe51cf1e51df4e61ef6e620f8e621fbe723fde725\"));\n\nexport var magma = ramp(colors(\"00000401000501010601010802010902020b02020d03030f03031204041405041606051806051a07061c08071e0907200a08220b09240c09260d0a290e0b2b100b2d110c2f120d31130d34140e36150e38160f3b180f3d19103f1a10421c10441d11471e114920114b21114e22115024125325125527125829115a2a115c2c115f2d11612f116331116533106734106936106b38106c390f6e3b0f703d0f713f0f72400f74420f75440f764510774710784910784a10794c117a4e117b4f127b51127c52137c54137d56147d57157e59157e5a167e5c167f5d177f5f187f601880621980641a80651a80671b80681c816a1c816b1d816d1d816e1e81701f81721f817320817521817621817822817922827b23827c23827e24828025828125818326818426818627818827818928818b29818c29818e2a81902a81912b81932b80942c80962c80982d80992d809b2e7f9c2e7f9e2f7fa02f7fa1307ea3307ea5317ea6317da8327daa337dab337cad347cae347bb0357bb2357bb3367ab5367ab73779b83779ba3878bc3978bd3977bf3a77c03a76c23b75c43c75c53c74c73d73c83e73ca3e72cc3f71cd4071cf4070d0416fd2426fd3436ed5446dd6456cd8456cd9466bdb476adc4869de4968df4a68e04c67e24d66e34e65e44f64e55064e75263e85362e95462ea5661eb5760ec5860ed5a5fee5b5eef5d5ef05f5ef1605df2625df2645cf3655cf4675cf4695cf56b5cf66c5cf66e5cf7705cf7725cf8745cf8765cf9785df9795df97b5dfa7d5efa7f5efa815ffb835ffb8560fb8761fc8961fc8a62fc8c63fc8e64fc9065fd9266fd9467fd9668fd9869fd9a6afd9b6bfe9d6cfe9f6dfea16efea36ffea571fea772fea973feaa74feac76feae77feb078feb27afeb47bfeb67cfeb77efeb97ffebb81febd82febf84fec185fec287fec488fec68afec88cfeca8dfecc8ffecd90fecf92fed194fed395fed597fed799fed89afdda9cfddc9efddea0fde0a1fde2a3fde3a5fde5a7fde7a9fde9aafdebacfcecaefceeb0fcf0b2fcf2b4fcf4b6fcf6b8fcf7b9fcf9bbfcfbbdfcfdbf\"));\n\nexport var inferno = ramp(colors(\"00000401000501010601010802010a02020c02020e03021004031204031405041706041907051b08051d09061f0a07220b07240c08260d08290e092b10092d110a30120a32140b34150b37160b39180c3c190c3e1b0c411c0c431e0c451f0c48210c4a230c4c240c4f260c51280b53290b552b0b572d0b592f0a5b310a5c320a5e340a5f3609613809623909633b09643d09653e0966400a67420a68440a68450a69470b6a490b6a4a0c6b4c0c6b4d0d6c4f0d6c510e6c520e6d540f6d550f6d57106e59106e5a116e5c126e5d126e5f136e61136e62146e64156e65156e67166e69166e6a176e6c186e6d186e6f196e71196e721a6e741a6e751b6e771c6d781c6d7a1d6d7c1d6d7d1e6d7f1e6c801f6c82206c84206b85216b87216b88226a8a226a8c23698d23698f24699025689225689326679526679727669827669a28659b29649d29649f2a63a02a63a22b62a32c61a52c60a62d60a82e5fa92e5eab2f5ead305dae305cb0315bb1325ab3325ab43359b63458b73557b93556ba3655bc3754bd3853bf3952c03a51c13a50c33b4fc43c4ec63d4dc73e4cc83f4bca404acb4149cc4248ce4347cf4446d04545d24644d34743d44842d54a41d74b3fd84c3ed94d3dda4e3cdb503bdd513ade5238df5337e05536e15635e25734e35933e45a31e55c30e65d2fe75e2ee8602de9612bea632aeb6429eb6628ec6726ed6925ee6a24ef6c23ef6e21f06f20f1711ff1731df2741cf3761bf37819f47918f57b17f57d15f67e14f68013f78212f78410f8850ff8870ef8890cf98b0bf98c0af98e09fa9008fa9207fa9407fb9606fb9706fb9906fb9b06fb9d07fc9f07fca108fca309fca50afca60cfca80dfcaa0ffcac11fcae12fcb014fcb216fcb418fbb61afbb81dfbba1ffbbc21fbbe23fac026fac228fac42afac62df9c72ff9c932f9cb35f8cd37f8cf3af7d13df7d340f6d543f6d746f5d949f5db4cf4dd4ff4df53f4e156f3e35af3e55df2e661f2e865f2ea69f1ec6df1ed71f1ef75f1f179f2f27df2f482f3f586f3f68af4f88ef5f992f6fa96f8fb9af9fc9dfafda1fcffa4\"));\n\nexport var plasma = ramp(colors(\"0d088710078813078916078a19068c1b068d1d068e20068f2206902406912605912805922a05932c05942e05952f059631059733059735049837049938049a3a049a3c049b3e049c3f049c41049d43039e44039e46039f48039f4903a04b03a14c02a14e02a25002a25102a35302a35502a45601a45801a45901a55b01a55c01a65e01a66001a66100a76300a76400a76600a76700a86900a86a00a86c00a86e00a86f00a87100a87201a87401a87501a87701a87801a87a02a87b02a87d03a87e03a88004a88104a78305a78405a78606a68707a68808a68a09a58b0aa58d0ba58e0ca48f0da4910ea3920fa39410a29511a19613a19814a099159f9a169f9c179e9d189d9e199da01a9ca11b9ba21d9aa31e9aa51f99a62098a72197a82296aa2395ab2494ac2694ad2793ae2892b02991b12a90b22b8fb32c8eb42e8db52f8cb6308bb7318ab83289ba3388bb3488bc3587bd3786be3885bf3984c03a83c13b82c23c81c33d80c43e7fc5407ec6417dc7427cc8437bc9447aca457acb4679cc4778cc4977cd4a76ce4b75cf4c74d04d73d14e72d24f71d35171d45270d5536fd5546ed6556dd7566cd8576bd9586ada5a6ada5b69db5c68dc5d67dd5e66de5f65de6164df6263e06363e16462e26561e26660e3685fe4695ee56a5de56b5de66c5ce76e5be76f5ae87059e97158e97257ea7457eb7556eb7655ec7754ed7953ed7a52ee7b51ef7c51ef7e50f07f4ff0804ef1814df1834cf2844bf3854bf3874af48849f48948f58b47f58c46f68d45f68f44f79044f79143f79342f89441f89540f9973ff9983ef99a3efa9b3dfa9c3cfa9e3bfb9f3afba139fba238fca338fca537fca636fca835fca934fdab33fdac33fdae32fdaf31fdb130fdb22ffdb42ffdb52efeb72dfeb82cfeba2cfebb2bfebd2afebe2afec029fdc229fdc328fdc527fdc627fdc827fdca26fdcb26fccd25fcce25fcd025fcd225fbd324fbd524fbd724fad824fada24f9dc24f9dd25f8df25f8e125f7e225f7e425f6e626f6e826f5e926f5eb27f4ed27f3ee27f3f027f2f227f1f426f1f525f0f724f0f921\"));\n","export const UNIT_GLOBAL_NAMESPACE = 'app.units';\nexport const UNIT_LOCAL_NAMESPACE = 'local.units';\nexport const LAYER_LOCAL_NAMESPACE = 'local.layers';\nexport const LAYER_GLOBAL_NAMESPACE = 'app.layers';\nexport const GROUP_GLOBAL_NAMESPACE = 'app.group';\nexport const GROUP_LOCAL_NAMESPACE = 'local.group';\nexport const CANVAS_LOCAL_NAMESPACE = 'local.canvas';\nexport const CANVAS_GLOBAL_NAMESPACE = 'app.canvas';\n\n","const ReservedFields = {\n    ROW_ID: '__id__'\n};\n\nexport default ReservedFields;\n","const CommonProps = {\n    ACTION_INF: 'actionInf',\n    ON_LAYER_DRAW: 'onLayerDraw',\n    MATRIX_CREATED: 'matrixCreated'\n};\n\nexport default CommonProps;\n","export var slice = Array.prototype.slice;\n","export default function(x) {\n  return x;\n}\n","import {slice} from \"./array\";\nimport identity from \"./identity\";\n\nvar top = 1,\n    right = 2,\n    bottom = 3,\n    left = 4,\n    epsilon = 1e-6;\n\nfunction translateX(x) {\n  return \"translate(\" + (x + 0.5) + \",0)\";\n}\n\nfunction translateY(y) {\n  return \"translate(0,\" + (y + 0.5) + \")\";\n}\n\nfunction number(scale) {\n  return function(d) {\n    return +scale(d);\n  };\n}\n\nfunction center(scale) {\n  var offset = Math.max(0, scale.bandwidth() - 1) / 2; // Adjust for 0.5px offset.\n  if (scale.round()) offset = Math.round(offset);\n  return function(d) {\n    return +scale(d) + offset;\n  };\n}\n\nfunction entering() {\n  return !this.__axis;\n}\n\nfunction axis(orient, scale) {\n  var tickArguments = [],\n      tickValues = null,\n      tickFormat = null,\n      tickTransform = null,\n      tickSizeInner = 6,\n      tickSizeOuter = 6,\n      tickPadding = 3,\n      k = orient === top || orient === left ? -1 : 1,\n      x = orient === left || orient === right ? \"x\" : \"y\",\n      transform = orient === top || orient === bottom ? translateX : translateY;\n\n  function axis(context) {\n    var values = tickValues == null ? (scale.ticks ? scale.ticks.apply(scale, tickArguments) : scale.domain()) : tickValues,\n        format = tickFormat == null ? (scale.tickFormat ? scale.tickFormat.apply(scale, tickArguments) : identity) : tickFormat,\n        spacing = Math.max(tickSizeInner, 0) + tickPadding,\n        range = scale.range(),\n        range0 = +range[0] + 0.5,\n        range1 = +range[range.length - 1] + 0.5,\n        position = (scale.bandwidth ? center : number)(scale.copy()),\n        selection = context.selection ? context.selection() : context,\n        path = selection.selectAll(\".domain\").data([null]),\n        tick = selection.selectAll(\".tick\").data(values, scale).order(),\n        tickExit = tick.exit(),\n        tickEnter = tick.enter().append(\"g\").attr(\"class\", \"tick\"),\n        line = tick.select(\"line\"),\n        text = tick.select(\"text\");\n\n    path = path.merge(path.enter().insert(\"path\", \".tick\")\n        .attr(\"class\", \"domain\")\n        .attr(\"stroke\", \"#000\"));\n\n    tick = tick.merge(tickEnter);\n\n    line = line.merge(tickEnter.append(\"line\")\n        .attr(\"stroke\", \"#000\")\n        .attr(x + \"2\", k * tickSizeInner));\n\n    text = text.merge(tickEnter.append(\"text\")\n        .attr(\"fill\", \"#000\")\n        .attr(x, k * spacing)\n        .attr(\"dy\", orient === top ? \"0em\" : orient === bottom ? \"0.71em\" : \"0.32em\"))\n        .style('transform', tickTransform);\n\n    if (context !== selection) {\n      path = path.transition(context);\n      tick = tick.transition(context);\n      line = line.transition(context);\n      text = text.transition(context);\n\n      tickExit = tickExit.transition(context)\n          .attr(\"opacity\", epsilon)\n          .attr(\"transform\", function(d) { return isFinite(d = position(d)) ? transform(d) : this.getAttribute(\"transform\"); });\n\n      tickEnter\n          .attr(\"opacity\", epsilon)\n          .attr(\"transform\", function(d) { var p = this.parentNode.__axis; return transform(p && isFinite(p = p(d)) ? p : position(d)); });\n    }\n\n    tickExit.remove();\n\n    path\n        .attr(\"d\", orient === left || orient == right\n            ? \"M\" + k * tickSizeOuter + \",\" + range0 + \"H0.5V\" + range1 + \"H\" + k * tickSizeOuter\n            : \"M\" + range0 + \",\" + k * tickSizeOuter + \"V0.5H\" + range1 + \"V\" + k * tickSizeOuter);\n\n    tick\n        .attr(\"opacity\", 1)\n        .attr(\"transform\", function(d) { return transform(position(d)); });\n\n    line\n        .attr(x + \"2\", k * tickSizeInner);\n\n    text\n        .attr(x, k * spacing)\n        .text(format);\n\n    selection.filter(entering)\n        .attr(\"fill\", \"none\")\n        .attr(\"font-size\", 10)\n        .attr(\"font-family\", \"sans-serif\")\n        .attr(\"text-anchor\", orient === right ? \"start\" : orient === left ? \"end\" : \"middle\");\n\n    selection\n        .each(function() { this.__axis = position; });\n  }\n\n  axis.scale = function(_) {\n    return arguments.length ? (scale = _, axis) : scale;\n  };\n\n  axis.tickTransform = function(_) {\n    return arguments.length ? (tickTransform = _, axis) : tickTransform;\n  };\n\n  axis.ticks = function() {\n    return tickArguments = slice.call(arguments), axis;\n  };\n\n  axis.tickArguments = function(_) {\n    return arguments.length ? (tickArguments = _ == null ? [] : slice.call(_), axis) : tickArguments.slice();\n  };\n\n  axis.tickValues = function(_) {\n    return arguments.length ? (tickValues = _ == null ? null : slice.call(_), axis) : tickValues && tickValues.slice();\n  };\n\n  axis.tickFormat = function(_) {\n    return arguments.length ? (tickFormat = _, axis) : tickFormat;\n  };\n\n  axis.tickSize = function(_) {\n    return arguments.length ? (tickSizeInner = tickSizeOuter = +_, axis) : tickSizeInner;\n  };\n\n  axis.tickSizeInner = function(_) {\n    return arguments.length ? (tickSizeInner = +_, axis) : tickSizeInner;\n  };\n\n  axis.tickSizeOuter = function(_) {\n    return arguments.length ? (tickSizeOuter = +_, axis) : tickSizeOuter;\n  };\n\n  axis.tickPadding = function(_) {\n    return arguments.length ? (tickPadding = +_, axis) : tickPadding;\n  };\n\n  return axis;\n}\n\nexport function axisTop(scale) {\n  return axis(top, scale);\n}\n\nexport function axisRight(scale) {\n  return axis(right, scale);\n}\n\nexport function axisBottom(scale) {\n  return axis(bottom, scale);\n}\n\nexport function axisLeft(scale) {\n  return axis(left, scale);\n}\n","var pi = Math.PI,\n    tau = 2 * pi,\n    epsilon = 1e-6,\n    tauEpsilon = tau - epsilon;\n\nfunction Path() {\n  this._x0 = this._y0 = // start of current subpath\n  this._x1 = this._y1 = null; // end of current subpath\n  this._ = \"\";\n}\n\nfunction path() {\n  return new Path;\n}\n\nPath.prototype = path.prototype = {\n  constructor: Path,\n  moveTo: function(x, y) {\n    this._ += \"M\" + (this._x0 = this._x1 = +x) + \",\" + (this._y0 = this._y1 = +y);\n  },\n  closePath: function() {\n    if (this._x1 !== null) {\n      this._x1 = this._x0, this._y1 = this._y0;\n      this._ += \"Z\";\n    }\n  },\n  lineTo: function(x, y) {\n    this._ += \"L\" + (this._x1 = +x) + \",\" + (this._y1 = +y);\n  },\n  quadraticCurveTo: function(x1, y1, x, y) {\n    this._ += \"Q\" + (+x1) + \",\" + (+y1) + \",\" + (this._x1 = +x) + \",\" + (this._y1 = +y);\n  },\n  bezierCurveTo: function(x1, y1, x2, y2, x, y) {\n    this._ += \"C\" + (+x1) + \",\" + (+y1) + \",\" + (+x2) + \",\" + (+y2) + \",\" + (this._x1 = +x) + \",\" + (this._y1 = +y);\n  },\n  arcTo: function(x1, y1, x2, y2, r) {\n    x1 = +x1, y1 = +y1, x2 = +x2, y2 = +y2, r = +r;\n    var x0 = this._x1,\n        y0 = this._y1,\n        x21 = x2 - x1,\n        y21 = y2 - y1,\n        x01 = x0 - x1,\n        y01 = y0 - y1,\n        l01_2 = x01 * x01 + y01 * y01;\n\n    // Is the radius negative? Error.\n    if (r < 0) throw new Error(\"negative radius: \" + r);\n\n    // Is this path empty? Move to (x1,y1).\n    if (this._x1 === null) {\n      this._ += \"M\" + (this._x1 = x1) + \",\" + (this._y1 = y1);\n    }\n\n    // Or, is (x1,y1) coincident with (x0,y0)? Do nothing.\n    else if (!(l01_2 > epsilon));\n\n    // Or, are (x0,y0), (x1,y1) and (x2,y2) collinear?\n    // Equivalently, is (x1,y1) coincident with (x2,y2)?\n    // Or, is the radius zero? Line to (x1,y1).\n    else if (!(Math.abs(y01 * x21 - y21 * x01) > epsilon) || !r) {\n      this._ += \"L\" + (this._x1 = x1) + \",\" + (this._y1 = y1);\n    }\n\n    // Otherwise, draw an arc!\n    else {\n      var x20 = x2 - x0,\n          y20 = y2 - y0,\n          l21_2 = x21 * x21 + y21 * y21,\n          l20_2 = x20 * x20 + y20 * y20,\n          l21 = Math.sqrt(l21_2),\n          l01 = Math.sqrt(l01_2),\n          l = r * Math.tan((pi - Math.acos((l21_2 + l01_2 - l20_2) / (2 * l21 * l01))) / 2),\n          t01 = l / l01,\n          t21 = l / l21;\n\n      // If the start tangent is not coincident with (x0,y0), line to.\n      if (Math.abs(t01 - 1) > epsilon) {\n        this._ += \"L\" + (x1 + t01 * x01) + \",\" + (y1 + t01 * y01);\n      }\n\n      this._ += \"A\" + r + \",\" + r + \",0,0,\" + (+(y01 * x20 > x01 * y20)) + \",\" + (this._x1 = x1 + t21 * x21) + \",\" + (this._y1 = y1 + t21 * y21);\n    }\n  },\n  arc: function(x, y, r, a0, a1, ccw) {\n    x = +x, y = +y, r = +r;\n    var dx = r * Math.cos(a0),\n        dy = r * Math.sin(a0),\n        x0 = x + dx,\n        y0 = y + dy,\n        cw = 1 ^ ccw,\n        da = ccw ? a0 - a1 : a1 - a0;\n\n    // Is the radius negative? Error.\n    if (r < 0) throw new Error(\"negative radius: \" + r);\n\n    // Is this path empty? Move to (x0,y0).\n    if (this._x1 === null) {\n      this._ += \"M\" + x0 + \",\" + y0;\n    }\n\n    // Or, is (x0,y0) not coincident with the previous point? Line to (x0,y0).\n    else if (Math.abs(this._x1 - x0) > epsilon || Math.abs(this._y1 - y0) > epsilon) {\n      this._ += \"L\" + x0 + \",\" + y0;\n    }\n\n    // Is this arc empty? We’re done.\n    if (!r) return;\n\n    // Does the angle go the wrong way? Flip the direction.\n    if (da < 0) da = da % tau + tau;\n\n    // Is this a complete circle? Draw two arcs to complete the circle.\n    if (da > tauEpsilon) {\n      this._ += \"A\" + r + \",\" + r + \",0,1,\" + cw + \",\" + (x - dx) + \",\" + (y - dy) + \"A\" + r + \",\" + r + \",0,1,\" + cw + \",\" + (this._x1 = x0) + \",\" + (this._y1 = y0);\n    }\n\n    // Is this arc non-empty? Draw an arc!\n    else if (da > epsilon) {\n      this._ += \"A\" + r + \",\" + r + \",0,\" + (+(da >= pi)) + \",\" + cw + \",\" + (this._x1 = x + r * Math.cos(a1)) + \",\" + (this._y1 = y + r * Math.sin(a1));\n    }\n  },\n  rect: function(x, y, w, h) {\n    this._ += \"M\" + (this._x0 = this._x1 = +x) + \",\" + (this._y0 = this._y1 = +y) + \"h\" + (+w) + \"v\" + (+h) + \"h\" + (-w) + \"Z\";\n  },\n  toString: function() {\n    return this._;\n  }\n};\n\nexport default path;\n","export default function(x) {\n  return function constant() {\n    return x;\n  };\n}\n","export var abs = Math.abs;\nexport var atan2 = Math.atan2;\nexport var cos = Math.cos;\nexport var max = Math.max;\nexport var min = Math.min;\nexport var sin = Math.sin;\nexport var sqrt = Math.sqrt;\n\nexport var epsilon = 1e-12;\nexport var pi = Math.PI;\nexport var halfPi = pi / 2;\nexport var tau = 2 * pi;\n\nexport function acos(x) {\n  return x > 1 ? 0 : x < -1 ? pi : Math.acos(x);\n}\n\nexport function asin(x) {\n  return x >= 1 ? halfPi : x <= -1 ? -halfPi : Math.asin(x);\n}\n","import {path} from \"d3-path\";\nimport constant from \"./constant\";\nimport {abs, acos, asin, atan2, cos, epsilon, halfPi, max, min, pi, sin, sqrt, tau} from \"./math\";\n\nfunction arcInnerRadius(d) {\n  return d.innerRadius;\n}\n\nfunction arcOuterRadius(d) {\n  return d.outerRadius;\n}\n\nfunction arcStartAngle(d) {\n  return d.startAngle;\n}\n\nfunction arcEndAngle(d) {\n  return d.endAngle;\n}\n\nfunction arcPadAngle(d) {\n  return d && d.padAngle; // Note: optional!\n}\n\nfunction intersect(x0, y0, x1, y1, x2, y2, x3, y3) {\n  var x10 = x1 - x0, y10 = y1 - y0,\n      x32 = x3 - x2, y32 = y3 - y2,\n      t = (x32 * (y0 - y2) - y32 * (x0 - x2)) / (y32 * x10 - x32 * y10);\n  return [x0 + t * x10, y0 + t * y10];\n}\n\n// Compute perpendicular offset line of length rc.\n// http://mathworld.wolfram.com/Circle-LineIntersection.html\nfunction cornerTangents(x0, y0, x1, y1, r1, rc, cw) {\n  var x01 = x0 - x1,\n      y01 = y0 - y1,\n      lo = (cw ? rc : -rc) / sqrt(x01 * x01 + y01 * y01),\n      ox = lo * y01,\n      oy = -lo * x01,\n      x11 = x0 + ox,\n      y11 = y0 + oy,\n      x10 = x1 + ox,\n      y10 = y1 + oy,\n      x00 = (x11 + x10) / 2,\n      y00 = (y11 + y10) / 2,\n      dx = x10 - x11,\n      dy = y10 - y11,\n      d2 = dx * dx + dy * dy,\n      r = r1 - rc,\n      D = x11 * y10 - x10 * y11,\n      d = (dy < 0 ? -1 : 1) * sqrt(max(0, r * r * d2 - D * D)),\n      cx0 = (D * dy - dx * d) / d2,\n      cy0 = (-D * dx - dy * d) / d2,\n      cx1 = (D * dy + dx * d) / d2,\n      cy1 = (-D * dx + dy * d) / d2,\n      dx0 = cx0 - x00,\n      dy0 = cy0 - y00,\n      dx1 = cx1 - x00,\n      dy1 = cy1 - y00;\n\n  // Pick the closer of the two intersection points.\n  // TODO Is there a faster way to determine which intersection to use?\n  if (dx0 * dx0 + dy0 * dy0 > dx1 * dx1 + dy1 * dy1) cx0 = cx1, cy0 = cy1;\n\n  return {\n    cx: cx0,\n    cy: cy0,\n    x01: -ox,\n    y01: -oy,\n    x11: cx0 * (r1 / r - 1),\n    y11: cy0 * (r1 / r - 1)\n  };\n}\n\nexport default function() {\n  var innerRadius = arcInnerRadius,\n      outerRadius = arcOuterRadius,\n      cornerRadius = constant(0),\n      padRadius = null,\n      startAngle = arcStartAngle,\n      endAngle = arcEndAngle,\n      padAngle = arcPadAngle,\n      context = null;\n\n  function arc() {\n    var buffer,\n        r,\n        r0 = +innerRadius.apply(this, arguments),\n        r1 = +outerRadius.apply(this, arguments),\n        a0 = startAngle.apply(this, arguments) - halfPi,\n        a1 = endAngle.apply(this, arguments) - halfPi,\n        da = abs(a1 - a0),\n        cw = a1 > a0;\n\n    if (!context) context = buffer = path();\n\n    // Ensure that the outer radius is always larger than the inner radius.\n    if (r1 < r0) r = r1, r1 = r0, r0 = r;\n\n    // Is it a point?\n    if (!(r1 > epsilon)) context.moveTo(0, 0);\n\n    // Or is it a circle or annulus?\n    else if (da > tau - epsilon) {\n      context.moveTo(r1 * cos(a0), r1 * sin(a0));\n      context.arc(0, 0, r1, a0, a1, !cw);\n      if (r0 > epsilon) {\n        context.moveTo(r0 * cos(a1), r0 * sin(a1));\n        context.arc(0, 0, r0, a1, a0, cw);\n      }\n    }\n\n    // Or is it a circular or annular sector?\n    else {\n      var a01 = a0,\n          a11 = a1,\n          a00 = a0,\n          a10 = a1,\n          da0 = da,\n          da1 = da,\n          ap = padAngle.apply(this, arguments) / 2,\n          rp = (ap > epsilon) && (padRadius ? +padRadius.apply(this, arguments) : sqrt(r0 * r0 + r1 * r1)),\n          rc = min(abs(r1 - r0) / 2, +cornerRadius.apply(this, arguments)),\n          rc0 = rc,\n          rc1 = rc,\n          t0,\n          t1;\n\n      // Apply padding? Note that since r1 ≥ r0, da1 ≥ da0.\n      if (rp > epsilon) {\n        var p0 = asin(rp / r0 * sin(ap)),\n            p1 = asin(rp / r1 * sin(ap));\n        if ((da0 -= p0 * 2) > epsilon) p0 *= (cw ? 1 : -1), a00 += p0, a10 -= p0;\n        else da0 = 0, a00 = a10 = (a0 + a1) / 2;\n        if ((da1 -= p1 * 2) > epsilon) p1 *= (cw ? 1 : -1), a01 += p1, a11 -= p1;\n        else da1 = 0, a01 = a11 = (a0 + a1) / 2;\n      }\n\n      var x01 = r1 * cos(a01),\n          y01 = r1 * sin(a01),\n          x10 = r0 * cos(a10),\n          y10 = r0 * sin(a10);\n\n      // Apply rounded corners?\n      if (rc > epsilon) {\n        var x11 = r1 * cos(a11),\n            y11 = r1 * sin(a11),\n            x00 = r0 * cos(a00),\n            y00 = r0 * sin(a00);\n\n        // Restrict the corner radius according to the sector angle.\n        if (da < pi) {\n          var oc = da0 > epsilon ? intersect(x01, y01, x00, y00, x11, y11, x10, y10) : [x10, y10],\n              ax = x01 - oc[0],\n              ay = y01 - oc[1],\n              bx = x11 - oc[0],\n              by = y11 - oc[1],\n              kc = 1 / sin(acos((ax * bx + ay * by) / (sqrt(ax * ax + ay * ay) * sqrt(bx * bx + by * by))) / 2),\n              lc = sqrt(oc[0] * oc[0] + oc[1] * oc[1]);\n          rc0 = min(rc, (r0 - lc) / (kc - 1));\n          rc1 = min(rc, (r1 - lc) / (kc + 1));\n        }\n      }\n\n      // Is the sector collapsed to a line?\n      if (!(da1 > epsilon)) context.moveTo(x01, y01);\n\n      // Does the sector’s outer ring have rounded corners?\n      else if (rc1 > epsilon) {\n        t0 = cornerTangents(x00, y00, x01, y01, r1, rc1, cw);\n        t1 = cornerTangents(x11, y11, x10, y10, r1, rc1, cw);\n\n        context.moveTo(t0.cx + t0.x01, t0.cy + t0.y01);\n\n        // Have the corners merged?\n        if (rc1 < rc) context.arc(t0.cx, t0.cy, rc1, atan2(t0.y01, t0.x01), atan2(t1.y01, t1.x01), !cw);\n\n        // Otherwise, draw the two corners and the ring.\n        else {\n          context.arc(t0.cx, t0.cy, rc1, atan2(t0.y01, t0.x01), atan2(t0.y11, t0.x11), !cw);\n          context.arc(0, 0, r1, atan2(t0.cy + t0.y11, t0.cx + t0.x11), atan2(t1.cy + t1.y11, t1.cx + t1.x11), !cw);\n          context.arc(t1.cx, t1.cy, rc1, atan2(t1.y11, t1.x11), atan2(t1.y01, t1.x01), !cw);\n        }\n      }\n\n      // Or is the outer ring just a circular arc?\n      else context.moveTo(x01, y01), context.arc(0, 0, r1, a01, a11, !cw);\n\n      // Is there no inner ring, and it’s a circular sector?\n      // Or perhaps it’s an annular sector collapsed due to padding?\n      if (!(r0 > epsilon) || !(da0 > epsilon)) context.lineTo(x10, y10);\n\n      // Does the sector’s inner ring (or point) have rounded corners?\n      else if (rc0 > epsilon) {\n        t0 = cornerTangents(x10, y10, x11, y11, r0, -rc0, cw);\n        t1 = cornerTangents(x01, y01, x00, y00, r0, -rc0, cw);\n\n        context.lineTo(t0.cx + t0.x01, t0.cy + t0.y01);\n\n        // Have the corners merged?\n        if (rc0 < rc) context.arc(t0.cx, t0.cy, rc0, atan2(t0.y01, t0.x01), atan2(t1.y01, t1.x01), !cw);\n\n        // Otherwise, draw the two corners and the ring.\n        else {\n          context.arc(t0.cx, t0.cy, rc0, atan2(t0.y01, t0.x01), atan2(t0.y11, t0.x11), !cw);\n          context.arc(0, 0, r0, atan2(t0.cy + t0.y11, t0.cx + t0.x11), atan2(t1.cy + t1.y11, t1.cx + t1.x11), cw);\n          context.arc(t1.cx, t1.cy, rc0, atan2(t1.y11, t1.x11), atan2(t1.y01, t1.x01), !cw);\n        }\n      }\n\n      // Or is the inner ring just a circular arc?\n      else context.arc(0, 0, r0, a10, a00, cw);\n    }\n\n    context.closePath();\n\n    if (buffer) return context = null, buffer + \"\" || null;\n  }\n\n  arc.centroid = function() {\n    var r = (+innerRadius.apply(this, arguments) + +outerRadius.apply(this, arguments)) / 2,\n        a = (+startAngle.apply(this, arguments) + +endAngle.apply(this, arguments)) / 2 - pi / 2;\n    return [cos(a) * r, sin(a) * r];\n  };\n\n  arc.innerRadius = function(_) {\n    return arguments.length ? (innerRadius = typeof _ === \"function\" ? _ : constant(+_), arc) : innerRadius;\n  };\n\n  arc.outerRadius = function(_) {\n    return arguments.length ? (outerRadius = typeof _ === \"function\" ? _ : constant(+_), arc) : outerRadius;\n  };\n\n  arc.cornerRadius = function(_) {\n    return arguments.length ? (cornerRadius = typeof _ === \"function\" ? _ : constant(+_), arc) : cornerRadius;\n  };\n\n  arc.padRadius = function(_) {\n    return arguments.length ? (padRadius = _ == null ? null : typeof _ === \"function\" ? _ : constant(+_), arc) : padRadius;\n  };\n\n  arc.startAngle = function(_) {\n    return arguments.length ? (startAngle = typeof _ === \"function\" ? _ : constant(+_), arc) : startAngle;\n  };\n\n  arc.endAngle = function(_) {\n    return arguments.length ? (endAngle = typeof _ === \"function\" ? _ : constant(+_), arc) : endAngle;\n  };\n\n  arc.padAngle = function(_) {\n    return arguments.length ? (padAngle = typeof _ === \"function\" ? _ : constant(+_), arc) : padAngle;\n  };\n\n  arc.context = function(_) {\n    return arguments.length ? ((context = _ == null ? null : _), arc) : context;\n  };\n\n  return arc;\n}\n","function Linear(context) {\n  this._context = context;\n}\n\nLinear.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n      case 1: this._point = 2; // proceed\n      default: this._context.lineTo(x, y); break;\n    }\n  }\n};\n\nexport default function(context) {\n  return new Linear(context);\n}\n","export function x(p) {\n  return p[0];\n}\n\nexport function y(p) {\n  return p[1];\n}\n","import {path} from \"d3-path\";\nimport constant from \"./constant\";\nimport curveLinear from \"./curve/linear\";\nimport {x as pointX, y as pointY} from \"./point\";\n\nexport default function() {\n  var x = pointX,\n      y = pointY,\n      defined = constant(true),\n      context = null,\n      curve = curveLinear,\n      output = null;\n\n  function line(data) {\n    var i,\n        n = data.length,\n        d,\n        defined0 = false,\n        buffer;\n\n    if (context == null) output = curve(buffer = path());\n\n    for (i = 0; i <= n; ++i) {\n      if (!(i < n && defined(d = data[i], i, data)) === defined0) {\n        if (defined0 = !defined0) output.lineStart();\n        else output.lineEnd();\n      }\n      if (defined0) output.point(+x(d, i, data), +y(d, i, data));\n    }\n\n    if (buffer) return output = null, buffer + \"\" || null;\n  }\n\n  line.x = function(_) {\n    return arguments.length ? (x = typeof _ === \"function\" ? _ : constant(+_), line) : x;\n  };\n\n  line.y = function(_) {\n    return arguments.length ? (y = typeof _ === \"function\" ? _ : constant(+_), line) : y;\n  };\n\n  line.defined = function(_) {\n    return arguments.length ? (defined = typeof _ === \"function\" ? _ : constant(!!_), line) : defined;\n  };\n\n  line.curve = function(_) {\n    return arguments.length ? (curve = _, context != null && (output = curve(context)), line) : curve;\n  };\n\n  line.context = function(_) {\n    return arguments.length ? (_ == null ? context = output = null : output = curve(context = _), line) : context;\n  };\n\n  return line;\n}\n","import {path} from \"d3-path\";\nimport constant from \"./constant\";\nimport curveLinear from \"./curve/linear\";\nimport line from \"./line\";\nimport {x as pointX, y as pointY} from \"./point\";\n\nexport default function() {\n  var x0 = pointX,\n      x1 = null,\n      y0 = constant(0),\n      y1 = pointY,\n      defined = constant(true),\n      context = null,\n      curve = curveLinear,\n      output = null;\n\n  function area(data) {\n    var i,\n        j,\n        k,\n        n = data.length,\n        d,\n        defined0 = false,\n        buffer,\n        x0z = new Array(n),\n        y0z = new Array(n);\n\n    if (context == null) output = curve(buffer = path());\n\n    for (i = 0; i <= n; ++i) {\n      if (!(i < n && defined(d = data[i], i, data)) === defined0) {\n        if (defined0 = !defined0) {\n          j = i;\n          output.areaStart();\n          output.lineStart();\n        } else {\n          output.lineEnd();\n          output.lineStart();\n          for (k = i - 1; k >= j; --k) {\n            output.point(x0z[k], y0z[k]);\n          }\n          output.lineEnd();\n          output.areaEnd();\n        }\n      }\n      if (defined0) {\n        x0z[i] = +x0(d, i, data), y0z[i] = +y0(d, i, data);\n        output.point(x1 ? +x1(d, i, data) : x0z[i], y1 ? +y1(d, i, data) : y0z[i]);\n      }\n    }\n\n    if (buffer) return output = null, buffer + \"\" || null;\n  }\n\n  function arealine() {\n    return line().defined(defined).curve(curve).context(context);\n  }\n\n  area.x = function(_) {\n    return arguments.length ? (x0 = typeof _ === \"function\" ? _ : constant(+_), x1 = null, area) : x0;\n  };\n\n  area.x0 = function(_) {\n    return arguments.length ? (x0 = typeof _ === \"function\" ? _ : constant(+_), area) : x0;\n  };\n\n  area.x1 = function(_) {\n    return arguments.length ? (x1 = _ == null ? null : typeof _ === \"function\" ? _ : constant(+_), area) : x1;\n  };\n\n  area.y = function(_) {\n    return arguments.length ? (y0 = typeof _ === \"function\" ? _ : constant(+_), y1 = null, area) : y0;\n  };\n\n  area.y0 = function(_) {\n    return arguments.length ? (y0 = typeof _ === \"function\" ? _ : constant(+_), area) : y0;\n  };\n\n  area.y1 = function(_) {\n    return arguments.length ? (y1 = _ == null ? null : typeof _ === \"function\" ? _ : constant(+_), area) : y1;\n  };\n\n  area.lineX0 =\n  area.lineY0 = function() {\n    return arealine().x(x0).y(y0);\n  };\n\n  area.lineY1 = function() {\n    return arealine().x(x0).y(y1);\n  };\n\n  area.lineX1 = function() {\n    return arealine().x(x1).y(y0);\n  };\n\n  area.defined = function(_) {\n    return arguments.length ? (defined = typeof _ === \"function\" ? _ : constant(!!_), area) : defined;\n  };\n\n  area.curve = function(_) {\n    return arguments.length ? (curve = _, context != null && (output = curve(context)), area) : curve;\n  };\n\n  area.context = function(_) {\n    return arguments.length ? (_ == null ? context = output = null : output = curve(context = _), area) : context;\n  };\n\n  return area;\n}\n","export default function(a, b) {\n  return b < a ? -1 : b > a ? 1 : b >= a ? 0 : NaN;\n}\n","export default function(d) {\n  return d;\n}\n","import curveLinear from \"./linear\";\n\nexport var curveRadialLinear = curveRadial(curveLinear);\n\nfunction Radial(curve) {\n  this._curve = curve;\n}\n\nRadial.prototype = {\n  areaStart: function() {\n    this._curve.areaStart();\n  },\n  areaEnd: function() {\n    this._curve.areaEnd();\n  },\n  lineStart: function() {\n    this._curve.lineStart();\n  },\n  lineEnd: function() {\n    this._curve.lineEnd();\n  },\n  point: function(a, r) {\n    this._curve.point(r * Math.sin(a), r * -Math.cos(a));\n  }\n};\n\nexport default function curveRadial(curve) {\n\n  function radial(context) {\n    return new Radial(curve(context));\n  }\n\n  radial._curve = curve;\n\n  return radial;\n}\n","import curveRadial, {curveRadialLinear} from \"./curve/radial\";\nimport line from \"./line\";\n\nexport function lineRadial(l) {\n  var c = l.curve;\n\n  l.angle = l.x, delete l.x;\n  l.radius = l.y, delete l.y;\n\n  l.curve = function(_) {\n    return arguments.length ? c(curveRadial(_)) : c()._curve;\n  };\n\n  return l;\n}\n\nexport default function() {\n  return lineRadial(line().curve(curveRadialLinear));\n}\n","export var slice = Array.prototype.slice;\n","import {pi, tau} from \"../math\";\n\nexport default {\n  draw: function(context, size) {\n    var r = Math.sqrt(size / pi);\n    context.moveTo(r, 0);\n    context.arc(0, 0, r, 0, tau);\n  }\n};\n","export default {\n  draw: function(context, size) {\n    var r = Math.sqrt(size / 5) / 2;\n    context.moveTo(-3 * r, -r);\n    context.lineTo(-r, -r);\n    context.lineTo(-r, -3 * r);\n    context.lineTo(r, -3 * r);\n    context.lineTo(r, -r);\n    context.lineTo(3 * r, -r);\n    context.lineTo(3 * r, r);\n    context.lineTo(r, r);\n    context.lineTo(r, 3 * r);\n    context.lineTo(-r, 3 * r);\n    context.lineTo(-r, r);\n    context.lineTo(-3 * r, r);\n    context.closePath();\n  }\n};\n","var tan30 = Math.sqrt(1 / 3),\n    tan30_2 = tan30 * 2;\n\nexport default {\n  draw: function(context, size) {\n    var y = Math.sqrt(size / tan30_2),\n        x = y * tan30;\n    context.moveTo(0, -y);\n    context.lineTo(x, 0);\n    context.lineTo(0, y);\n    context.lineTo(-x, 0);\n    context.closePath();\n  }\n};\n","import {pi, tau} from \"../math\";\n\nvar ka = 0.89081309152928522810,\n    kr = Math.sin(pi / 10) / Math.sin(7 * pi / 10),\n    kx = Math.sin(tau / 10) * kr,\n    ky = -Math.cos(tau / 10) * kr;\n\nexport default {\n  draw: function(context, size) {\n    var r = Math.sqrt(size * ka),\n        x = kx * r,\n        y = ky * r;\n    context.moveTo(0, -r);\n    context.lineTo(x, y);\n    for (var i = 1; i < 5; ++i) {\n      var a = tau * i / 5,\n          c = Math.cos(a),\n          s = Math.sin(a);\n      context.lineTo(s * r, -c * r);\n      context.lineTo(c * x - s * y, s * x + c * y);\n    }\n    context.closePath();\n  }\n};\n","export default {\n  draw: function(context, size) {\n    var w = Math.sqrt(size),\n        x = -w / 2;\n    context.rect(x, x, w, w);\n  }\n};\n","var sqrt3 = Math.sqrt(3);\n\nexport default {\n  draw: function(context, size) {\n    var y = -Math.sqrt(size / (sqrt3 * 3));\n    context.moveTo(0, y * 2);\n    context.lineTo(-sqrt3 * y, -y);\n    context.lineTo(sqrt3 * y, -y);\n    context.closePath();\n  }\n};\n","var c = -0.5,\n    s = Math.sqrt(3) / 2,\n    k = 1 / Math.sqrt(12),\n    a = (k / 2 + 1) * 3;\n\nexport default {\n  draw: function(context, size) {\n    var r = Math.sqrt(size / a),\n        x0 = r / 2,\n        y0 = r * k,\n        x1 = x0,\n        y1 = r * k + r,\n        x2 = -x1,\n        y2 = y1;\n    context.moveTo(x0, y0);\n    context.lineTo(x1, y1);\n    context.lineTo(x2, y2);\n    context.lineTo(c * x0 - s * y0, s * x0 + c * y0);\n    context.lineTo(c * x1 - s * y1, s * x1 + c * y1);\n    context.lineTo(c * x2 - s * y2, s * x2 + c * y2);\n    context.lineTo(c * x0 + s * y0, c * y0 - s * x0);\n    context.lineTo(c * x1 + s * y1, c * y1 - s * x1);\n    context.lineTo(c * x2 + s * y2, c * y2 - s * x2);\n    context.closePath();\n  }\n};\n","export default function() {}\n","export function point(that, x, y) {\n  that._context.bezierCurveTo(\n    (2 * that._x0 + that._x1) / 3,\n    (2 * that._y0 + that._y1) / 3,\n    (that._x0 + 2 * that._x1) / 3,\n    (that._y0 + 2 * that._y1) / 3,\n    (that._x0 + 4 * that._x1 + x) / 6,\n    (that._y0 + 4 * that._y1 + y) / 6\n  );\n}\n\nexport function Basis(context) {\n  this._context = context;\n}\n\nBasis.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 =\n    this._y0 = this._y1 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 3: point(this, this._x1, this._y1); // proceed\n      case 2: this._context.lineTo(this._x1, this._y1); break;\n    }\n    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n      case 1: this._point = 2; break;\n      case 2: this._point = 3; this._context.lineTo((5 * this._x0 + this._x1) / 6, (5 * this._y0 + this._y1) / 6); // proceed\n      default: point(this, x, y); break;\n    }\n    this._x0 = this._x1, this._x1 = x;\n    this._y0 = this._y1, this._y1 = y;\n  }\n};\n\nexport default function(context) {\n  return new Basis(context);\n}\n","import noop from \"../noop\";\nimport {point} from \"./basis\";\n\nfunction BasisClosed(context) {\n  this._context = context;\n}\n\nBasisClosed.prototype = {\n  areaStart: noop,\n  areaEnd: noop,\n  lineStart: function() {\n    this._x0 = this._x1 = this._x2 = this._x3 = this._x4 =\n    this._y0 = this._y1 = this._y2 = this._y3 = this._y4 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 1: {\n        this._context.moveTo(this._x2, this._y2);\n        this._context.closePath();\n        break;\n      }\n      case 2: {\n        this._context.moveTo((this._x2 + 2 * this._x3) / 3, (this._y2 + 2 * this._y3) / 3);\n        this._context.lineTo((this._x3 + 2 * this._x2) / 3, (this._y3 + 2 * this._y2) / 3);\n        this._context.closePath();\n        break;\n      }\n      case 3: {\n        this.point(this._x2, this._y2);\n        this.point(this._x3, this._y3);\n        this.point(this._x4, this._y4);\n        break;\n      }\n    }\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; this._x2 = x, this._y2 = y; break;\n      case 1: this._point = 2; this._x3 = x, this._y3 = y; break;\n      case 2: this._point = 3; this._x4 = x, this._y4 = y; this._context.moveTo((this._x0 + 4 * this._x1 + x) / 6, (this._y0 + 4 * this._y1 + y) / 6); break;\n      default: point(this, x, y); break;\n    }\n    this._x0 = this._x1, this._x1 = x;\n    this._y0 = this._y1, this._y1 = y;\n  }\n};\n\nexport default function(context) {\n  return new BasisClosed(context);\n}\n","import {point} from \"./basis\";\n\nfunction BasisOpen(context) {\n  this._context = context;\n}\n\nBasisOpen.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 =\n    this._y0 = this._y1 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (this._line || (this._line !== 0 && this._point === 3)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; break;\n      case 1: this._point = 2; break;\n      case 2: this._point = 3; var x0 = (this._x0 + 4 * this._x1 + x) / 6, y0 = (this._y0 + 4 * this._y1 + y) / 6; this._line ? this._context.lineTo(x0, y0) : this._context.moveTo(x0, y0); break;\n      case 3: this._point = 4; // proceed\n      default: point(this, x, y); break;\n    }\n    this._x0 = this._x1, this._x1 = x;\n    this._y0 = this._y1, this._y1 = y;\n  }\n};\n\nexport default function(context) {\n  return new BasisOpen(context);\n}\n","import {Basis} from \"./basis\";\n\nfunction Bundle(context, beta) {\n  this._basis = new Basis(context);\n  this._beta = beta;\n}\n\nBundle.prototype = {\n  lineStart: function() {\n    this._x = [];\n    this._y = [];\n    this._basis.lineStart();\n  },\n  lineEnd: function() {\n    var x = this._x,\n        y = this._y,\n        j = x.length - 1;\n\n    if (j > 0) {\n      var x0 = x[0],\n          y0 = y[0],\n          dx = x[j] - x0,\n          dy = y[j] - y0,\n          i = -1,\n          t;\n\n      while (++i <= j) {\n        t = i / j;\n        this._basis.point(\n          this._beta * x[i] + (1 - this._beta) * (x0 + t * dx),\n          this._beta * y[i] + (1 - this._beta) * (y0 + t * dy)\n        );\n      }\n    }\n\n    this._x = this._y = null;\n    this._basis.lineEnd();\n  },\n  point: function(x, y) {\n    this._x.push(+x);\n    this._y.push(+y);\n  }\n};\n\nexport default (function custom(beta) {\n\n  function bundle(context) {\n    return beta === 1 ? new Basis(context) : new Bundle(context, beta);\n  }\n\n  bundle.beta = function(beta) {\n    return custom(+beta);\n  };\n\n  return bundle;\n})(0.85);\n","export function point(that, x, y) {\n  that._context.bezierCurveTo(\n    that._x1 + that._k * (that._x2 - that._x0),\n    that._y1 + that._k * (that._y2 - that._y0),\n    that._x2 + that._k * (that._x1 - x),\n    that._y2 + that._k * (that._y1 - y),\n    that._x2,\n    that._y2\n  );\n}\n\nexport function Cardinal(context, tension) {\n  this._context = context;\n  this._k = (1 - tension) / 6;\n}\n\nCardinal.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 = this._x2 =\n    this._y0 = this._y1 = this._y2 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 2: this._context.lineTo(this._x2, this._y2); break;\n      case 3: point(this, this._x1, this._y1); break;\n    }\n    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n      case 1: this._point = 2; this._x1 = x, this._y1 = y; break;\n      case 2: this._point = 3; // proceed\n      default: point(this, x, y); break;\n    }\n    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n  }\n};\n\nexport default (function custom(tension) {\n\n  function cardinal(context) {\n    return new Cardinal(context, tension);\n  }\n\n  cardinal.tension = function(tension) {\n    return custom(+tension);\n  };\n\n  return cardinal;\n})(0);\n","import noop from \"../noop\";\nimport {point} from \"./cardinal\";\n\nexport function CardinalClosed(context, tension) {\n  this._context = context;\n  this._k = (1 - tension) / 6;\n}\n\nCardinalClosed.prototype = {\n  areaStart: noop,\n  areaEnd: noop,\n  lineStart: function() {\n    this._x0 = this._x1 = this._x2 = this._x3 = this._x4 = this._x5 =\n    this._y0 = this._y1 = this._y2 = this._y3 = this._y4 = this._y5 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 1: {\n        this._context.moveTo(this._x3, this._y3);\n        this._context.closePath();\n        break;\n      }\n      case 2: {\n        this._context.lineTo(this._x3, this._y3);\n        this._context.closePath();\n        break;\n      }\n      case 3: {\n        this.point(this._x3, this._y3);\n        this.point(this._x4, this._y4);\n        this.point(this._x5, this._y5);\n        break;\n      }\n    }\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; this._x3 = x, this._y3 = y; break;\n      case 1: this._point = 2; this._context.moveTo(this._x4 = x, this._y4 = y); break;\n      case 2: this._point = 3; this._x5 = x, this._y5 = y; break;\n      default: point(this, x, y); break;\n    }\n    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n  }\n};\n\nexport default (function custom(tension) {\n\n  function cardinal(context) {\n    return new CardinalClosed(context, tension);\n  }\n\n  cardinal.tension = function(tension) {\n    return custom(+tension);\n  };\n\n  return cardinal;\n})(0);\n","import {point} from \"./cardinal\";\n\nexport function CardinalOpen(context, tension) {\n  this._context = context;\n  this._k = (1 - tension) / 6;\n}\n\nCardinalOpen.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 = this._x2 =\n    this._y0 = this._y1 = this._y2 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (this._line || (this._line !== 0 && this._point === 3)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; break;\n      case 1: this._point = 2; break;\n      case 2: this._point = 3; this._line ? this._context.lineTo(this._x2, this._y2) : this._context.moveTo(this._x2, this._y2); break;\n      case 3: this._point = 4; // proceed\n      default: point(this, x, y); break;\n    }\n    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n  }\n};\n\nexport default (function custom(tension) {\n\n  function cardinal(context) {\n    return new CardinalOpen(context, tension);\n  }\n\n  cardinal.tension = function(tension) {\n    return custom(+tension);\n  };\n\n  return cardinal;\n})(0);\n","import {epsilon} from \"../math\";\nimport {Cardinal} from \"./cardinal\";\n\nexport function point(that, x, y) {\n  var x1 = that._x1,\n      y1 = that._y1,\n      x2 = that._x2,\n      y2 = that._y2;\n\n  if (that._l01_a > epsilon) {\n    var a = 2 * that._l01_2a + 3 * that._l01_a * that._l12_a + that._l12_2a,\n        n = 3 * that._l01_a * (that._l01_a + that._l12_a);\n    x1 = (x1 * a - that._x0 * that._l12_2a + that._x2 * that._l01_2a) / n;\n    y1 = (y1 * a - that._y0 * that._l12_2a + that._y2 * that._l01_2a) / n;\n  }\n\n  if (that._l23_a > epsilon) {\n    var b = 2 * that._l23_2a + 3 * that._l23_a * that._l12_a + that._l12_2a,\n        m = 3 * that._l23_a * (that._l23_a + that._l12_a);\n    x2 = (x2 * b + that._x1 * that._l23_2a - x * that._l12_2a) / m;\n    y2 = (y2 * b + that._y1 * that._l23_2a - y * that._l12_2a) / m;\n  }\n\n  that._context.bezierCurveTo(x1, y1, x2, y2, that._x2, that._y2);\n}\n\nfunction CatmullRom(context, alpha) {\n  this._context = context;\n  this._alpha = alpha;\n}\n\nCatmullRom.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 = this._x2 =\n    this._y0 = this._y1 = this._y2 = NaN;\n    this._l01_a = this._l12_a = this._l23_a =\n    this._l01_2a = this._l12_2a = this._l23_2a =\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 2: this._context.lineTo(this._x2, this._y2); break;\n      case 3: this.point(this._x2, this._y2); break;\n    }\n    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n\n    if (this._point) {\n      var x23 = this._x2 - x,\n          y23 = this._y2 - y;\n      this._l23_a = Math.sqrt(this._l23_2a = Math.pow(x23 * x23 + y23 * y23, this._alpha));\n    }\n\n    switch (this._point) {\n      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n      case 1: this._point = 2; break;\n      case 2: this._point = 3; // proceed\n      default: point(this, x, y); break;\n    }\n\n    this._l01_a = this._l12_a, this._l12_a = this._l23_a;\n    this._l01_2a = this._l12_2a, this._l12_2a = this._l23_2a;\n    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n  }\n};\n\nexport default (function custom(alpha) {\n\n  function catmullRom(context) {\n    return alpha ? new CatmullRom(context, alpha) : new Cardinal(context, 0);\n  }\n\n  catmullRom.alpha = function(alpha) {\n    return custom(+alpha);\n  };\n\n  return catmullRom;\n})(0.5);\n","import {CardinalClosed} from \"./cardinalClosed\";\nimport noop from \"../noop\";\nimport {point} from \"./catmullRom\";\n\nfunction CatmullRomClosed(context, alpha) {\n  this._context = context;\n  this._alpha = alpha;\n}\n\nCatmullRomClosed.prototype = {\n  areaStart: noop,\n  areaEnd: noop,\n  lineStart: function() {\n    this._x0 = this._x1 = this._x2 = this._x3 = this._x4 = this._x5 =\n    this._y0 = this._y1 = this._y2 = this._y3 = this._y4 = this._y5 = NaN;\n    this._l01_a = this._l12_a = this._l23_a =\n    this._l01_2a = this._l12_2a = this._l23_2a =\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 1: {\n        this._context.moveTo(this._x3, this._y3);\n        this._context.closePath();\n        break;\n      }\n      case 2: {\n        this._context.lineTo(this._x3, this._y3);\n        this._context.closePath();\n        break;\n      }\n      case 3: {\n        this.point(this._x3, this._y3);\n        this.point(this._x4, this._y4);\n        this.point(this._x5, this._y5);\n        break;\n      }\n    }\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n\n    if (this._point) {\n      var x23 = this._x2 - x,\n          y23 = this._y2 - y;\n      this._l23_a = Math.sqrt(this._l23_2a = Math.pow(x23 * x23 + y23 * y23, this._alpha));\n    }\n\n    switch (this._point) {\n      case 0: this._point = 1; this._x3 = x, this._y3 = y; break;\n      case 1: this._point = 2; this._context.moveTo(this._x4 = x, this._y4 = y); break;\n      case 2: this._point = 3; this._x5 = x, this._y5 = y; break;\n      default: point(this, x, y); break;\n    }\n\n    this._l01_a = this._l12_a, this._l12_a = this._l23_a;\n    this._l01_2a = this._l12_2a, this._l12_2a = this._l23_2a;\n    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n  }\n};\n\nexport default (function custom(alpha) {\n\n  function catmullRom(context) {\n    return alpha ? new CatmullRomClosed(context, alpha) : new CardinalClosed(context, 0);\n  }\n\n  catmullRom.alpha = function(alpha) {\n    return custom(+alpha);\n  };\n\n  return catmullRom;\n})(0.5);\n","import {CardinalOpen} from \"./cardinalOpen\";\nimport {point} from \"./catmullRom\";\n\nfunction CatmullRomOpen(context, alpha) {\n  this._context = context;\n  this._alpha = alpha;\n}\n\nCatmullRomOpen.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 = this._x2 =\n    this._y0 = this._y1 = this._y2 = NaN;\n    this._l01_a = this._l12_a = this._l23_a =\n    this._l01_2a = this._l12_2a = this._l23_2a =\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (this._line || (this._line !== 0 && this._point === 3)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n\n    if (this._point) {\n      var x23 = this._x2 - x,\n          y23 = this._y2 - y;\n      this._l23_a = Math.sqrt(this._l23_2a = Math.pow(x23 * x23 + y23 * y23, this._alpha));\n    }\n\n    switch (this._point) {\n      case 0: this._point = 1; break;\n      case 1: this._point = 2; break;\n      case 2: this._point = 3; this._line ? this._context.lineTo(this._x2, this._y2) : this._context.moveTo(this._x2, this._y2); break;\n      case 3: this._point = 4; // proceed\n      default: point(this, x, y); break;\n    }\n\n    this._l01_a = this._l12_a, this._l12_a = this._l23_a;\n    this._l01_2a = this._l12_2a, this._l12_2a = this._l23_2a;\n    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n  }\n};\n\nexport default (function custom(alpha) {\n\n  function catmullRom(context) {\n    return alpha ? new CatmullRomOpen(context, alpha) : new CardinalOpen(context, 0);\n  }\n\n  catmullRom.alpha = function(alpha) {\n    return custom(+alpha);\n  };\n\n  return catmullRom;\n})(0.5);\n","import noop from \"../noop\";\n\nfunction LinearClosed(context) {\n  this._context = context;\n}\n\nLinearClosed.prototype = {\n  areaStart: noop,\n  areaEnd: noop,\n  lineStart: function() {\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (this._point) this._context.closePath();\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    if (this._point) this._context.lineTo(x, y);\n    else this._point = 1, this._context.moveTo(x, y);\n  }\n};\n\nexport default function(context) {\n  return new LinearClosed(context);\n}\n","function sign(x) {\n  return x < 0 ? -1 : 1;\n}\n\n// Calculate the slopes of the tangents (Hermite-type interpolation) based on\n// the following paper: Steffen, M. 1990. A Simple Method for Monotonic\n// Interpolation in One Dimension. Astronomy and Astrophysics, Vol. 239, NO.\n// NOV(II), P. 443, 1990.\nfunction slope3(that, x2, y2) {\n  var h0 = that._x1 - that._x0,\n      h1 = x2 - that._x1,\n      s0 = (that._y1 - that._y0) / (h0 || h1 < 0 && -0),\n      s1 = (y2 - that._y1) / (h1 || h0 < 0 && -0),\n      p = (s0 * h1 + s1 * h0) / (h0 + h1);\n  return (sign(s0) + sign(s1)) * Math.min(Math.abs(s0), Math.abs(s1), 0.5 * Math.abs(p)) || 0;\n}\n\n// Calculate a one-sided slope.\nfunction slope2(that, t) {\n  var h = that._x1 - that._x0;\n  return h ? (3 * (that._y1 - that._y0) / h - t) / 2 : t;\n}\n\n// According to https://en.wikipedia.org/wiki/Cubic_Hermite_spline#Representations\n// \"you can express cubic Hermite interpolation in terms of cubic Bézier curves\n// with respect to the four values p0, p0 + m0 / 3, p1 - m1 / 3, p1\".\nfunction point(that, t0, t1) {\n  var x0 = that._x0,\n      y0 = that._y0,\n      x1 = that._x1,\n      y1 = that._y1,\n      dx = (x1 - x0) / 3;\n  that._context.bezierCurveTo(x0 + dx, y0 + dx * t0, x1 - dx, y1 - dx * t1, x1, y1);\n}\n\nfunction MonotoneX(context) {\n  this._context = context;\n}\n\nMonotoneX.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 =\n    this._y0 = this._y1 =\n    this._t0 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 2: this._context.lineTo(this._x1, this._y1); break;\n      case 3: point(this, this._t0, slope2(this, this._t0)); break;\n    }\n    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    var t1 = NaN;\n\n    x = +x, y = +y;\n    if (x === this._x1 && y === this._y1) return; // Ignore coincident points.\n    switch (this._point) {\n      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n      case 1: this._point = 2; break;\n      case 2: this._point = 3; point(this, slope2(this, t1 = slope3(this, x, y)), t1); break;\n      default: point(this, this._t0, t1 = slope3(this, x, y)); break;\n    }\n\n    this._x0 = this._x1, this._x1 = x;\n    this._y0 = this._y1, this._y1 = y;\n    this._t0 = t1;\n  }\n}\n\nfunction MonotoneY(context) {\n  this._context = new ReflectContext(context);\n}\n\n(MonotoneY.prototype = Object.create(MonotoneX.prototype)).point = function(x, y) {\n  MonotoneX.prototype.point.call(this, y, x);\n};\n\nfunction ReflectContext(context) {\n  this._context = context;\n}\n\nReflectContext.prototype = {\n  moveTo: function(x, y) { this._context.moveTo(y, x); },\n  closePath: function() { this._context.closePath(); },\n  lineTo: function(x, y) { this._context.lineTo(y, x); },\n  bezierCurveTo: function(x1, y1, x2, y2, x, y) { this._context.bezierCurveTo(y1, x1, y2, x2, y, x); }\n};\n\nexport function monotoneX(context) {\n  return new MonotoneX(context);\n}\n\nexport function monotoneY(context) {\n  return new MonotoneY(context);\n}\n","function Natural(context) {\n  this._context = context;\n}\n\nNatural.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x = [];\n    this._y = [];\n  },\n  lineEnd: function() {\n    var x = this._x,\n        y = this._y,\n        n = x.length;\n\n    if (n) {\n      this._line ? this._context.lineTo(x[0], y[0]) : this._context.moveTo(x[0], y[0]);\n      if (n === 2) {\n        this._context.lineTo(x[1], y[1]);\n      } else {\n        var px = controlPoints(x),\n            py = controlPoints(y);\n        for (var i0 = 0, i1 = 1; i1 < n; ++i0, ++i1) {\n          this._context.bezierCurveTo(px[0][i0], py[0][i0], px[1][i0], py[1][i0], x[i1], y[i1]);\n        }\n      }\n    }\n\n    if (this._line || (this._line !== 0 && n === 1)) this._context.closePath();\n    this._line = 1 - this._line;\n    this._x = this._y = null;\n  },\n  point: function(x, y) {\n    this._x.push(+x);\n    this._y.push(+y);\n  }\n};\n\n// See https://www.particleincell.com/2012/bezier-splines/ for derivation.\nfunction controlPoints(x) {\n  var i,\n      n = x.length - 1,\n      m,\n      a = new Array(n),\n      b = new Array(n),\n      r = new Array(n);\n  a[0] = 0, b[0] = 2, r[0] = x[0] + 2 * x[1];\n  for (i = 1; i < n - 1; ++i) a[i] = 1, b[i] = 4, r[i] = 4 * x[i] + 2 * x[i + 1];\n  a[n - 1] = 2, b[n - 1] = 7, r[n - 1] = 8 * x[n - 1] + x[n];\n  for (i = 1; i < n; ++i) m = a[i] / b[i - 1], b[i] -= m, r[i] -= m * r[i - 1];\n  a[n - 1] = r[n - 1] / b[n - 1];\n  for (i = n - 2; i >= 0; --i) a[i] = (r[i] - a[i + 1]) / b[i];\n  b[n - 1] = (x[n] + a[n - 1]) / 2;\n  for (i = 0; i < n - 1; ++i) b[i] = 2 * x[i + 1] - a[i + 1];\n  return [a, b];\n}\n\nexport default function(context) {\n  return new Natural(context);\n}\n","function Step(context, t) {\n  this._context = context;\n  this._t = t;\n}\n\nStep.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x = this._y = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (0 < this._t && this._t < 1 && this._point === 2) this._context.lineTo(this._x, this._y);\n    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n    if (this._line >= 0) this._t = 1 - this._t, this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n      case 1: this._point = 2; // proceed\n      default: {\n        if (this._t <= 0) {\n          this._context.lineTo(this._x, y);\n          this._context.lineTo(x, y);\n        } else {\n          var x1 = this._x * (1 - this._t) + x * this._t;\n          this._context.lineTo(x1, this._y);\n          this._context.lineTo(x1, y);\n        }\n        break;\n      }\n    }\n    this._x = x, this._y = y;\n  }\n};\n\nexport default function(context) {\n  return new Step(context, 0.5);\n}\n\nexport function stepBefore(context) {\n  return new Step(context, 0);\n}\n\nexport function stepAfter(context) {\n  return new Step(context, 1);\n}\n","export default function(series, order) {\n  if (!((n = series.length) > 1)) return;\n  for (var i = 1, j, s0, s1 = series[order[0]], n, m = s1.length; i < n; ++i) {\n    s0 = s1, s1 = series[order[i]];\n    for (j = 0; j < m; ++j) {\n      s1[j][1] += s1[j][0] = isNaN(s0[j][1]) ? s0[j][0] : s0[j][1];\n    }\n  }\n}\n","export default function(series) {\n  var n = series.length, o = new Array(n);\n  while (--n >= 0) o[n] = n;\n  return o;\n}\n","import {slice} from \"./array\";\nimport constant from \"./constant\";\nimport offsetNone from \"./offset/none\";\nimport orderNone from \"./order/none\";\n\nfunction stackValue(d, key) {\n  return d[key];\n}\n\nexport default function() {\n  var keys = constant([]),\n      order = orderNone,\n      offset = offsetNone,\n      value = stackValue;\n\n  function stack(data) {\n    var kz = keys.apply(this, arguments),\n        i,\n        m = data.length,\n        n = kz.length,\n        sz = new Array(n),\n        oz;\n\n    for (i = 0; i < n; ++i) {\n      for (var ki = kz[i], si = sz[i] = new Array(m), j = 0, sij; j < m; ++j) {\n        si[j] = sij = [0, +value(data[j], ki, j, data)];\n        sij.data = data[j];\n      }\n      si.key = ki;\n    }\n\n    for (i = 0, oz = order(sz); i < n; ++i) {\n      sz[oz[i]].index = i;\n    }\n\n    offset(sz, oz);\n    return sz;\n  }\n\n  stack.keys = function(_) {\n    return arguments.length ? (keys = typeof _ === \"function\" ? _ : constant(slice.call(_)), stack) : keys;\n  };\n\n  stack.value = function(_) {\n    return arguments.length ? (value = typeof _ === \"function\" ? _ : constant(+_), stack) : value;\n  };\n\n  stack.order = function(_) {\n    return arguments.length ? (order = _ == null ? orderNone : typeof _ === \"function\" ? _ : constant(slice.call(_)), stack) : order;\n  };\n\n  stack.offset = function(_) {\n    return arguments.length ? (offset = _ == null ? offsetNone : _, stack) : offset;\n  };\n\n  return stack;\n}\n","import none from \"./none\";\n\nexport default function(series) {\n  var sums = series.map(sum);\n  return none(series).sort(function(a, b) { return sums[a] - sums[b]; });\n}\n\nexport function sum(series) {\n  var s = 0, i = -1, n = series.length, v;\n  while (++i < n) if (v = +series[i][1]) s += v;\n  return s;\n}\n","export function cubicIn(t) {\n  return t * t * t;\n}\n\nexport function cubicOut(t) {\n  return --t * t * t + 1;\n}\n\nexport function cubicInOut(t) {\n  return ((t *= 2) <= 1 ? t * t * t : (t -= 2) * t * t + 2) / 2;\n}\n","var exponent = 3;\n\nexport var polyIn = (function custom(e) {\n  e = +e;\n\n  function polyIn(t) {\n    return Math.pow(t, e);\n  }\n\n  polyIn.exponent = custom;\n\n  return polyIn;\n})(exponent);\n\nexport var polyOut = (function custom(e) {\n  e = +e;\n\n  function polyOut(t) {\n    return 1 - Math.pow(1 - t, e);\n  }\n\n  polyOut.exponent = custom;\n\n  return polyOut;\n})(exponent);\n\nexport var polyInOut = (function custom(e) {\n  e = +e;\n\n  function polyInOut(t) {\n    return ((t *= 2) <= 1 ? Math.pow(t, e) : 2 - Math.pow(2 - t, e)) / 2;\n  }\n\n  polyInOut.exponent = custom;\n\n  return polyInOut;\n})(exponent);\n","var pi = Math.PI,\n    halfPi = pi / 2;\n\nexport function sinIn(t) {\n  return 1 - Math.cos(t * halfPi);\n}\n\nexport function sinOut(t) {\n  return Math.sin(t * halfPi);\n}\n\nexport function sinInOut(t) {\n  return (1 - Math.cos(pi * t)) / 2;\n}\n","var b1 = 4 / 11,\n    b2 = 6 / 11,\n    b3 = 8 / 11,\n    b4 = 3 / 4,\n    b5 = 9 / 11,\n    b6 = 10 / 11,\n    b7 = 15 / 16,\n    b8 = 21 / 22,\n    b9 = 63 / 64,\n    b0 = 1 / b1 / b1;\n\nexport function bounceIn(t) {\n  return 1 - bounceOut(1 - t);\n}\n\nexport function bounceOut(t) {\n  return (t = +t) < b1 ? b0 * t * t : t < b3 ? b0 * (t -= b2) * t + b4 : t < b6 ? b0 * (t -= b5) * t + b7 : b0 * (t -= b8) * t + b9;\n}\n\nexport function bounceInOut(t) {\n  return ((t *= 2) <= 1 ? 1 - bounceOut(1 - t) : bounceOut(t - 1) + 1) / 2;\n}\n","var overshoot = 1.70158;\n\nexport var backIn = (function custom(s) {\n  s = +s;\n\n  function backIn(t) {\n    return t * t * ((s + 1) * t - s);\n  }\n\n  backIn.overshoot = custom;\n\n  return backIn;\n})(overshoot);\n\nexport var backOut = (function custom(s) {\n  s = +s;\n\n  function backOut(t) {\n    return --t * t * ((s + 1) * t + s) + 1;\n  }\n\n  backOut.overshoot = custom;\n\n  return backOut;\n})(overshoot);\n\nexport var backInOut = (function custom(s) {\n  s = +s;\n\n  function backInOut(t) {\n    return ((t *= 2) < 1 ? t * t * ((s + 1) * t - s) : (t -= 2) * t * ((s + 1) * t + s) + 2) / 2;\n  }\n\n  backInOut.overshoot = custom;\n\n  return backInOut;\n})(overshoot);\n","var tau = 2 * Math.PI,\n    amplitude = 1,\n    period = 0.3;\n\nexport var elasticIn = (function custom(a, p) {\n  var s = Math.asin(1 / (a = Math.max(1, a))) * (p /= tau);\n\n  function elasticIn(t) {\n    return a * Math.pow(2, 10 * --t) * Math.sin((s - t) / p);\n  }\n\n  elasticIn.amplitude = function(a) { return custom(a, p * tau); };\n  elasticIn.period = function(p) { return custom(a, p); };\n\n  return elasticIn;\n})(amplitude, period);\n\nexport var elasticOut = (function custom(a, p) {\n  var s = Math.asin(1 / (a = Math.max(1, a))) * (p /= tau);\n\n  function elasticOut(t) {\n    return 1 - a * Math.pow(2, -10 * (t = +t)) * Math.sin((t + s) / p);\n  }\n\n  elasticOut.amplitude = function(a) { return custom(a, p * tau); };\n  elasticOut.period = function(p) { return custom(a, p); };\n\n  return elasticOut;\n})(amplitude, period);\n\nexport var elasticInOut = (function custom(a, p) {\n  var s = Math.asin(1 / (a = Math.max(1, a))) * (p /= tau);\n\n  function elasticInOut(t) {\n    return ((t = t * 2 - 1) < 0\n        ? a * Math.pow(2, 10 * t) * Math.sin((s - t) / p)\n        : 2 - a * Math.pow(2, -10 * t) * Math.sin((s + t) / p)) / 2;\n  }\n\n  elasticInOut.amplitude = function(a) { return custom(a, p * tau); };\n  elasticInOut.period = function(p) { return custom(a, p); };\n\n  return elasticInOut;\n})(amplitude, period);\n","export default function(x) {\n  return function() {\n    return x;\n  };\n}\n","export function x(d) {\n  return d[0];\n}\n\nexport function y(d) {\n  return d[1];\n}\n","function RedBlackTree() {\n  this._ = null; // root node\n}\n\nexport function RedBlackNode(node) {\n  node.U = // parent node\n  node.C = // color - true for red, false for black\n  node.L = // left node\n  node.R = // right node\n  node.P = // previous node\n  node.N = null; // next node\n}\n\nRedBlackTree.prototype = {\n  constructor: RedBlackTree,\n\n  insert: function(after, node) {\n    var parent, grandpa, uncle;\n\n    if (after) {\n      node.P = after;\n      node.N = after.N;\n      if (after.N) after.N.P = node;\n      after.N = node;\n      if (after.R) {\n        after = after.R;\n        while (after.L) after = after.L;\n        after.L = node;\n      } else {\n        after.R = node;\n      }\n      parent = after;\n    } else if (this._) {\n      after = RedBlackFirst(this._);\n      node.P = null;\n      node.N = after;\n      after.P = after.L = node;\n      parent = after;\n    } else {\n      node.P = node.N = null;\n      this._ = node;\n      parent = null;\n    }\n    node.L = node.R = null;\n    node.U = parent;\n    node.C = true;\n\n    after = node;\n    while (parent && parent.C) {\n      grandpa = parent.U;\n      if (parent === grandpa.L) {\n        uncle = grandpa.R;\n        if (uncle && uncle.C) {\n          parent.C = uncle.C = false;\n          grandpa.C = true;\n          after = grandpa;\n        } else {\n          if (after === parent.R) {\n            RedBlackRotateLeft(this, parent);\n            after = parent;\n            parent = after.U;\n          }\n          parent.C = false;\n          grandpa.C = true;\n          RedBlackRotateRight(this, grandpa);\n        }\n      } else {\n        uncle = grandpa.L;\n        if (uncle && uncle.C) {\n          parent.C = uncle.C = false;\n          grandpa.C = true;\n          after = grandpa;\n        } else {\n          if (after === parent.L) {\n            RedBlackRotateRight(this, parent);\n            after = parent;\n            parent = after.U;\n          }\n          parent.C = false;\n          grandpa.C = true;\n          RedBlackRotateLeft(this, grandpa);\n        }\n      }\n      parent = after.U;\n    }\n    this._.C = false;\n  },\n\n  remove: function(node) {\n    if (node.N) node.N.P = node.P;\n    if (node.P) node.P.N = node.N;\n    node.N = node.P = null;\n\n    var parent = node.U,\n        sibling,\n        left = node.L,\n        right = node.R,\n        next,\n        red;\n\n    if (!left) next = right;\n    else if (!right) next = left;\n    else next = RedBlackFirst(right);\n\n    if (parent) {\n      if (parent.L === node) parent.L = next;\n      else parent.R = next;\n    } else {\n      this._ = next;\n    }\n\n    if (left && right) {\n      red = next.C;\n      next.C = node.C;\n      next.L = left;\n      left.U = next;\n      if (next !== right) {\n        parent = next.U;\n        next.U = node.U;\n        node = next.R;\n        parent.L = node;\n        next.R = right;\n        right.U = next;\n      } else {\n        next.U = parent;\n        parent = next;\n        node = next.R;\n      }\n    } else {\n      red = node.C;\n      node = next;\n    }\n\n    if (node) node.U = parent;\n    if (red) return;\n    if (node && node.C) { node.C = false; return; }\n\n    do {\n      if (node === this._) break;\n      if (node === parent.L) {\n        sibling = parent.R;\n        if (sibling.C) {\n          sibling.C = false;\n          parent.C = true;\n          RedBlackRotateLeft(this, parent);\n          sibling = parent.R;\n        }\n        if ((sibling.L && sibling.L.C)\n            || (sibling.R && sibling.R.C)) {\n          if (!sibling.R || !sibling.R.C) {\n            sibling.L.C = false;\n            sibling.C = true;\n            RedBlackRotateRight(this, sibling);\n            sibling = parent.R;\n          }\n          sibling.C = parent.C;\n          parent.C = sibling.R.C = false;\n          RedBlackRotateLeft(this, parent);\n          node = this._;\n          break;\n        }\n      } else {\n        sibling = parent.L;\n        if (sibling.C) {\n          sibling.C = false;\n          parent.C = true;\n          RedBlackRotateRight(this, parent);\n          sibling = parent.L;\n        }\n        if ((sibling.L && sibling.L.C)\n          || (sibling.R && sibling.R.C)) {\n          if (!sibling.L || !sibling.L.C) {\n            sibling.R.C = false;\n            sibling.C = true;\n            RedBlackRotateLeft(this, sibling);\n            sibling = parent.L;\n          }\n          sibling.C = parent.C;\n          parent.C = sibling.L.C = false;\n          RedBlackRotateRight(this, parent);\n          node = this._;\n          break;\n        }\n      }\n      sibling.C = true;\n      node = parent;\n      parent = parent.U;\n    } while (!node.C);\n\n    if (node) node.C = false;\n  }\n};\n\nfunction RedBlackRotateLeft(tree, node) {\n  var p = node,\n      q = node.R,\n      parent = p.U;\n\n  if (parent) {\n    if (parent.L === p) parent.L = q;\n    else parent.R = q;\n  } else {\n    tree._ = q;\n  }\n\n  q.U = parent;\n  p.U = q;\n  p.R = q.L;\n  if (p.R) p.R.U = p;\n  q.L = p;\n}\n\nfunction RedBlackRotateRight(tree, node) {\n  var p = node,\n      q = node.L,\n      parent = p.U;\n\n  if (parent) {\n    if (parent.L === p) parent.L = q;\n    else parent.R = q;\n  } else {\n    tree._ = q;\n  }\n\n  q.U = parent;\n  p.U = q;\n  p.L = q.R;\n  if (p.L) p.L.U = p;\n  q.R = p;\n}\n\nfunction RedBlackFirst(node) {\n  while (node.L) node = node.L;\n  return node;\n}\n\nexport default RedBlackTree;\n","import {cells, edges, epsilon} from \"./Diagram\";\n\nexport function createEdge(left, right, v0, v1) {\n  var edge = [null, null],\n      index = edges.push(edge) - 1;\n  edge.left = left;\n  edge.right = right;\n  if (v0) setEdgeEnd(edge, left, right, v0);\n  if (v1) setEdgeEnd(edge, right, left, v1);\n  cells[left.index].halfedges.push(index);\n  cells[right.index].halfedges.push(index);\n  return edge;\n}\n\nexport function createBorderEdge(left, v0, v1) {\n  var edge = [v0, v1];\n  edge.left = left;\n  return edge;\n}\n\nexport function setEdgeEnd(edge, left, right, vertex) {\n  if (!edge[0] && !edge[1]) {\n    edge[0] = vertex;\n    edge.left = left;\n    edge.right = right;\n  } else if (edge.left === right) {\n    edge[1] = vertex;\n  } else {\n    edge[0] = vertex;\n  }\n}\n\n// Liang–Barsky line clipping.\nfunction clipEdge(edge, x0, y0, x1, y1) {\n  var a = edge[0],\n      b = edge[1],\n      ax = a[0],\n      ay = a[1],\n      bx = b[0],\n      by = b[1],\n      t0 = 0,\n      t1 = 1,\n      dx = bx - ax,\n      dy = by - ay,\n      r;\n\n  r = x0 - ax;\n  if (!dx && r > 0) return;\n  r /= dx;\n  if (dx < 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  } else if (dx > 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  }\n\n  r = x1 - ax;\n  if (!dx && r < 0) return;\n  r /= dx;\n  if (dx < 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  } else if (dx > 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  }\n\n  r = y0 - ay;\n  if (!dy && r > 0) return;\n  r /= dy;\n  if (dy < 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  } else if (dy > 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  }\n\n  r = y1 - ay;\n  if (!dy && r < 0) return;\n  r /= dy;\n  if (dy < 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  } else if (dy > 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  }\n\n  if (!(t0 > 0) && !(t1 < 1)) return true; // TODO Better check?\n\n  if (t0 > 0) edge[0] = [ax + t0 * dx, ay + t0 * dy];\n  if (t1 < 1) edge[1] = [ax + t1 * dx, ay + t1 * dy];\n  return true;\n}\n\nfunction connectEdge(edge, x0, y0, x1, y1) {\n  var v1 = edge[1];\n  if (v1) return true;\n\n  var v0 = edge[0],\n      left = edge.left,\n      right = edge.right,\n      lx = left[0],\n      ly = left[1],\n      rx = right[0],\n      ry = right[1],\n      fx = (lx + rx) / 2,\n      fy = (ly + ry) / 2,\n      fm,\n      fb;\n\n  if (ry === ly) {\n    if (fx < x0 || fx >= x1) return;\n    if (lx > rx) {\n      if (!v0) v0 = [fx, y0];\n      else if (v0[1] >= y1) return;\n      v1 = [fx, y1];\n    } else {\n      if (!v0) v0 = [fx, y1];\n      else if (v0[1] < y0) return;\n      v1 = [fx, y0];\n    }\n  } else {\n    fm = (lx - rx) / (ry - ly);\n    fb = fy - fm * fx;\n    if (fm < -1 || fm > 1) {\n      if (lx > rx) {\n        if (!v0) v0 = [(y0 - fb) / fm, y0];\n        else if (v0[1] >= y1) return;\n        v1 = [(y1 - fb) / fm, y1];\n      } else {\n        if (!v0) v0 = [(y1 - fb) / fm, y1];\n        else if (v0[1] < y0) return;\n        v1 = [(y0 - fb) / fm, y0];\n      }\n    } else {\n      if (ly < ry) {\n        if (!v0) v0 = [x0, fm * x0 + fb];\n        else if (v0[0] >= x1) return;\n        v1 = [x1, fm * x1 + fb];\n      } else {\n        if (!v0) v0 = [x1, fm * x1 + fb];\n        else if (v0[0] < x0) return;\n        v1 = [x0, fm * x0 + fb];\n      }\n    }\n  }\n\n  edge[0] = v0;\n  edge[1] = v1;\n  return true;\n}\n\nexport function clipEdges(x0, y0, x1, y1) {\n  var i = edges.length,\n      edge;\n\n  while (i--) {\n    if (!connectEdge(edge = edges[i], x0, y0, x1, y1)\n        || !clipEdge(edge, x0, y0, x1, y1)\n        || !(Math.abs(edge[0][0] - edge[1][0]) > epsilon\n            || Math.abs(edge[0][1] - edge[1][1]) > epsilon)) {\n      delete edges[i];\n    }\n  }\n}\n","import {createBorderEdge} from \"./Edge\";\nimport {cells, edges, epsilon} from \"./Diagram\";\n\nexport function createCell(site) {\n  return cells[site.index] = {\n    site: site,\n    halfedges: []\n  };\n}\n\nfunction cellHalfedgeAngle(cell, edge) {\n  var site = cell.site,\n      va = edge.left,\n      vb = edge.right;\n  if (site === vb) vb = va, va = site;\n  if (vb) return Math.atan2(vb[1] - va[1], vb[0] - va[0]);\n  if (site === va) va = edge[1], vb = edge[0];\n  else va = edge[0], vb = edge[1];\n  return Math.atan2(va[0] - vb[0], vb[1] - va[1]);\n}\n\nexport function cellHalfedgeStart(cell, edge) {\n  return edge[+(edge.left !== cell.site)];\n}\n\nexport function cellHalfedgeEnd(cell, edge) {\n  return edge[+(edge.left === cell.site)];\n}\n\nexport function sortCellHalfedges() {\n  for (var i = 0, n = cells.length, cell, halfedges, j, m; i < n; ++i) {\n    if ((cell = cells[i]) && (m = (halfedges = cell.halfedges).length)) {\n      var index = new Array(m),\n          array = new Array(m);\n      for (j = 0; j < m; ++j) index[j] = j, array[j] = cellHalfedgeAngle(cell, edges[halfedges[j]]);\n      index.sort(function(i, j) { return array[j] - array[i]; });\n      for (j = 0; j < m; ++j) array[j] = halfedges[index[j]];\n      for (j = 0; j < m; ++j) halfedges[j] = array[j];\n    }\n  }\n}\n\nexport function clipCells(x0, y0, x1, y1) {\n  var nCells = cells.length,\n      iCell,\n      cell,\n      site,\n      iHalfedge,\n      halfedges,\n      nHalfedges,\n      start,\n      startX,\n      startY,\n      end,\n      endX,\n      endY,\n      cover = true;\n\n  for (iCell = 0; iCell < nCells; ++iCell) {\n    if (cell = cells[iCell]) {\n      site = cell.site;\n      halfedges = cell.halfedges;\n      iHalfedge = halfedges.length;\n\n      // Remove any dangling clipped edges.\n      while (iHalfedge--) {\n        if (!edges[halfedges[iHalfedge]]) {\n          halfedges.splice(iHalfedge, 1);\n        }\n      }\n\n      // Insert any border edges as necessary.\n      iHalfedge = 0, nHalfedges = halfedges.length;\n      while (iHalfedge < nHalfedges) {\n        end = cellHalfedgeEnd(cell, edges[halfedges[iHalfedge]]), endX = end[0], endY = end[1];\n        start = cellHalfedgeStart(cell, edges[halfedges[++iHalfedge % nHalfedges]]), startX = start[0], startY = start[1];\n        if (Math.abs(endX - startX) > epsilon || Math.abs(endY - startY) > epsilon) {\n          halfedges.splice(iHalfedge, 0, edges.push(createBorderEdge(site, end,\n              Math.abs(endX - x0) < epsilon && y1 - endY > epsilon ? [x0, Math.abs(startX - x0) < epsilon ? startY : y1]\n              : Math.abs(endY - y1) < epsilon && x1 - endX > epsilon ? [Math.abs(startY - y1) < epsilon ? startX : x1, y1]\n              : Math.abs(endX - x1) < epsilon && endY - y0 > epsilon ? [x1, Math.abs(startX - x1) < epsilon ? startY : y0]\n              : Math.abs(endY - y0) < epsilon && endX - x0 > epsilon ? [Math.abs(startY - y0) < epsilon ? startX : x0, y0]\n              : null)) - 1);\n          ++nHalfedges;\n        }\n      }\n\n      if (nHalfedges) cover = false;\n    }\n  }\n\n  // If there weren’t any edges, have the closest site cover the extent.\n  // It doesn’t matter which corner of the extent we measure!\n  if (cover) {\n    var dx, dy, d2, dc = Infinity;\n\n    for (iCell = 0, cover = null; iCell < nCells; ++iCell) {\n      if (cell = cells[iCell]) {\n        site = cell.site;\n        dx = site[0] - x0;\n        dy = site[1] - y0;\n        d2 = dx * dx + dy * dy;\n        if (d2 < dc) dc = d2, cover = cell;\n      }\n    }\n\n    if (cover) {\n      var v00 = [x0, y0], v01 = [x0, y1], v11 = [x1, y1], v10 = [x1, y0];\n      cover.halfedges.push(\n        edges.push(createBorderEdge(site = cover.site, v00, v01)) - 1,\n        edges.push(createBorderEdge(site, v01, v11)) - 1,\n        edges.push(createBorderEdge(site, v11, v10)) - 1,\n        edges.push(createBorderEdge(site, v10, v00)) - 1\n      );\n    }\n  }\n\n  // Lastly delete any cells with no edges; these were entirely clipped.\n  for (iCell = 0; iCell < nCells; ++iCell) {\n    if (cell = cells[iCell]) {\n      if (!cell.halfedges.length) {\n        delete cells[iCell];\n      }\n    }\n  }\n}\n","import {RedBlackNode} from \"./RedBlackTree\";\nimport {circles, epsilon2} from \"./Diagram\";\n\nvar circlePool = [];\n\nexport var firstCircle;\n\nfunction Circle() {\n  RedBlackNode(this);\n  this.x =\n  this.y =\n  this.arc =\n  this.site =\n  this.cy = null;\n}\n\nexport function attachCircle(arc) {\n  var lArc = arc.P,\n      rArc = arc.N;\n\n  if (!lArc || !rArc) return;\n\n  var lSite = lArc.site,\n      cSite = arc.site,\n      rSite = rArc.site;\n\n  if (lSite === rSite) return;\n\n  var bx = cSite[0],\n      by = cSite[1],\n      ax = lSite[0] - bx,\n      ay = lSite[1] - by,\n      cx = rSite[0] - bx,\n      cy = rSite[1] - by;\n\n  var d = 2 * (ax * cy - ay * cx);\n  if (d >= -epsilon2) return;\n\n  var ha = ax * ax + ay * ay,\n      hc = cx * cx + cy * cy,\n      x = (cy * ha - ay * hc) / d,\n      y = (ax * hc - cx * ha) / d;\n\n  var circle = circlePool.pop() || new Circle;\n  circle.arc = arc;\n  circle.site = cSite;\n  circle.x = x + bx;\n  circle.y = (circle.cy = y + by) + Math.sqrt(x * x + y * y); // y bottom\n\n  arc.circle = circle;\n\n  var before = null,\n      node = circles._;\n\n  while (node) {\n    if (circle.y < node.y || (circle.y === node.y && circle.x <= node.x)) {\n      if (node.L) node = node.L;\n      else { before = node.P; break; }\n    } else {\n      if (node.R) node = node.R;\n      else { before = node; break; }\n    }\n  }\n\n  circles.insert(before, circle);\n  if (!before) firstCircle = circle;\n}\n\nexport function detachCircle(arc) {\n  var circle = arc.circle;\n  if (circle) {\n    if (!circle.P) firstCircle = circle.N;\n    circles.remove(circle);\n    circlePool.push(circle);\n    RedBlackNode(circle);\n    arc.circle = null;\n  }\n}\n","import {RedBlackNode} from \"./RedBlackTree\";\nimport {createCell} from \"./Cell\";\nimport {attachCircle, detachCircle} from \"./Circle\";\nimport {createEdge, setEdgeEnd} from \"./Edge\";\nimport {beaches, epsilon} from \"./Diagram\";\n\nvar beachPool = [];\n\nfunction Beach() {\n  RedBlackNode(this);\n  this.edge =\n  this.site =\n  this.circle = null;\n}\n\nfunction createBeach(site) {\n  var beach = beachPool.pop() || new Beach;\n  beach.site = site;\n  return beach;\n}\n\nfunction detachBeach(beach) {\n  detachCircle(beach);\n  beaches.remove(beach);\n  beachPool.push(beach);\n  RedBlackNode(beach);\n}\n\nexport function removeBeach(beach) {\n  var circle = beach.circle,\n      x = circle.x,\n      y = circle.cy,\n      vertex = [x, y],\n      previous = beach.P,\n      next = beach.N,\n      disappearing = [beach];\n\n  detachBeach(beach);\n\n  var lArc = previous;\n  while (lArc.circle\n      && Math.abs(x - lArc.circle.x) < epsilon\n      && Math.abs(y - lArc.circle.cy) < epsilon) {\n    previous = lArc.P;\n    disappearing.unshift(lArc);\n    detachBeach(lArc);\n    lArc = previous;\n  }\n\n  disappearing.unshift(lArc);\n  detachCircle(lArc);\n\n  var rArc = next;\n  while (rArc.circle\n      && Math.abs(x - rArc.circle.x) < epsilon\n      && Math.abs(y - rArc.circle.cy) < epsilon) {\n    next = rArc.N;\n    disappearing.push(rArc);\n    detachBeach(rArc);\n    rArc = next;\n  }\n\n  disappearing.push(rArc);\n  detachCircle(rArc);\n\n  var nArcs = disappearing.length,\n      iArc;\n  for (iArc = 1; iArc < nArcs; ++iArc) {\n    rArc = disappearing[iArc];\n    lArc = disappearing[iArc - 1];\n    setEdgeEnd(rArc.edge, lArc.site, rArc.site, vertex);\n  }\n\n  lArc = disappearing[0];\n  rArc = disappearing[nArcs - 1];\n  rArc.edge = createEdge(lArc.site, rArc.site, null, vertex);\n\n  attachCircle(lArc);\n  attachCircle(rArc);\n}\n\nexport function addBeach(site) {\n  var x = site[0],\n      directrix = site[1],\n      lArc,\n      rArc,\n      dxl,\n      dxr,\n      node = beaches._;\n\n  while (node) {\n    dxl = leftBreakPoint(node, directrix) - x;\n    if (dxl > epsilon) node = node.L; else {\n      dxr = x - rightBreakPoint(node, directrix);\n      if (dxr > epsilon) {\n        if (!node.R) {\n          lArc = node;\n          break;\n        }\n        node = node.R;\n      } else {\n        if (dxl > -epsilon) {\n          lArc = node.P;\n          rArc = node;\n        } else if (dxr > -epsilon) {\n          lArc = node;\n          rArc = node.N;\n        } else {\n          lArc = rArc = node;\n        }\n        break;\n      }\n    }\n  }\n\n  createCell(site);\n  var newArc = createBeach(site);\n  beaches.insert(lArc, newArc);\n\n  if (!lArc && !rArc) return;\n\n  if (lArc === rArc) {\n    detachCircle(lArc);\n    rArc = createBeach(lArc.site);\n    beaches.insert(newArc, rArc);\n    newArc.edge = rArc.edge = createEdge(lArc.site, newArc.site);\n    attachCircle(lArc);\n    attachCircle(rArc);\n    return;\n  }\n\n  if (!rArc) { // && lArc\n    newArc.edge = createEdge(lArc.site, newArc.site);\n    return;\n  }\n\n  // else lArc !== rArc\n  detachCircle(lArc);\n  detachCircle(rArc);\n\n  var lSite = lArc.site,\n      ax = lSite[0],\n      ay = lSite[1],\n      bx = site[0] - ax,\n      by = site[1] - ay,\n      rSite = rArc.site,\n      cx = rSite[0] - ax,\n      cy = rSite[1] - ay,\n      d = 2 * (bx * cy - by * cx),\n      hb = bx * bx + by * by,\n      hc = cx * cx + cy * cy,\n      vertex = [(cy * hb - by * hc) / d + ax, (bx * hc - cx * hb) / d + ay];\n\n  setEdgeEnd(rArc.edge, lSite, rSite, vertex);\n  newArc.edge = createEdge(lSite, site, null, vertex);\n  rArc.edge = createEdge(site, rSite, null, vertex);\n  attachCircle(lArc);\n  attachCircle(rArc);\n}\n\nfunction leftBreakPoint(arc, directrix) {\n  var site = arc.site,\n      rfocx = site[0],\n      rfocy = site[1],\n      pby2 = rfocy - directrix;\n\n  if (!pby2) return rfocx;\n\n  var lArc = arc.P;\n  if (!lArc) return -Infinity;\n\n  site = lArc.site;\n  var lfocx = site[0],\n      lfocy = site[1],\n      plby2 = lfocy - directrix;\n\n  if (!plby2) return lfocx;\n\n  var hl = lfocx - rfocx,\n      aby2 = 1 / pby2 - 1 / plby2,\n      b = hl / plby2;\n\n  if (aby2) return (-b + Math.sqrt(b * b - 2 * aby2 * (hl * hl / (-2 * plby2) - lfocy + plby2 / 2 + rfocy - pby2 / 2))) / aby2 + rfocx;\n\n  return (rfocx + lfocx) / 2;\n}\n\nfunction rightBreakPoint(arc, directrix) {\n  var rArc = arc.N;\n  if (rArc) return leftBreakPoint(rArc, directrix);\n  var site = arc.site;\n  return site[1] === directrix ? site[0] : Infinity;\n}\n","import {addBeach, removeBeach} from \"./Beach\";\nimport {sortCellHalfedges, cellHalfedgeStart, clipCells} from \"./Cell\";\nimport {firstCircle} from \"./Circle\";\nimport {clipEdges} from \"./Edge\";\nimport RedBlackTree from \"./RedBlackTree\";\n\nexport var epsilon = 1e-6;\nexport var epsilon2 = 1e-12;\nexport var beaches;\nexport var cells;\nexport var circles;\nexport var edges;\n\nfunction triangleArea(a, b, c) {\n  return (a[0] - c[0]) * (b[1] - a[1]) - (a[0] - b[0]) * (c[1] - a[1]);\n}\n\nfunction lexicographic(a, b) {\n  return b[1] - a[1]\n      || b[0] - a[0];\n}\n\nexport default function Diagram(sites, extent) {\n  var site = sites.sort(lexicographic).pop(),\n      x,\n      y,\n      circle;\n\n  edges = [];\n  cells = new Array(sites.length);\n  beaches = new RedBlackTree;\n  circles = new RedBlackTree;\n\n  while (true) {\n    circle = firstCircle;\n    if (site && (!circle || site[1] < circle.y || (site[1] === circle.y && site[0] < circle.x))) {\n      if (site[0] !== x || site[1] !== y) {\n        addBeach(site);\n        x = site[0], y = site[1];\n      }\n      site = sites.pop();\n    } else if (circle) {\n      removeBeach(circle.arc);\n    } else {\n      break;\n    }\n  }\n\n  sortCellHalfedges();\n\n  if (extent) {\n    var x0 = +extent[0][0],\n        y0 = +extent[0][1],\n        x1 = +extent[1][0],\n        y1 = +extent[1][1];\n    clipEdges(x0, y0, x1, y1);\n    clipCells(x0, y0, x1, y1);\n  }\n\n  this.edges = edges;\n  this.cells = cells;\n\n  beaches =\n  circles =\n  edges =\n  cells = null;\n}\n\nDiagram.prototype = {\n  constructor: Diagram,\n\n  polygons: function() {\n    var edges = this.edges;\n\n    return this.cells.map(function(cell) {\n      var polygon = cell.halfedges.map(function(i) { return cellHalfedgeStart(cell, edges[i]); });\n      polygon.data = cell.site.data;\n      return polygon;\n    });\n  },\n\n  triangles: function() {\n    var triangles = [],\n        edges = this.edges;\n\n    this.cells.forEach(function(cell, i) {\n      if (!(m = (halfedges = cell.halfedges).length)) return;\n      var site = cell.site,\n          halfedges,\n          j = -1,\n          m,\n          s0,\n          e1 = edges[halfedges[m - 1]],\n          s1 = e1.left === site ? e1.right : e1.left;\n\n      while (++j < m) {\n        s0 = s1;\n        e1 = edges[halfedges[j]];\n        s1 = e1.left === site ? e1.right : e1.left;\n        if (s0 && s1 && i < s0.index && i < s1.index && triangleArea(site, s0, s1) < 0) {\n          triangles.push([site.data, s0.data, s1.data]);\n        }\n      }\n    });\n\n    return triangles;\n  },\n\n  links: function() {\n    return this.edges.filter(function(edge) {\n      return edge.right;\n    }).map(function(edge) {\n      return {\n        source: edge.left.data,\n        target: edge.right.data\n      };\n    });\n  },\n\n  find: function(x, y, radius) {\n    var that = this, i0, i1 = that._found || 0, n = that.cells.length, cell;\n\n    // Use the previously-found cell, or start with an arbitrary one.\n    while (!(cell = that.cells[i1])) if (++i1 >= n) return null;\n    var dx = x - cell.site[0], dy = y - cell.site[1], d2 = dx * dx + dy * dy;\n\n    // Traverse the half-edges to find a closer cell, if any.\n    do {\n      cell = that.cells[i0 = i1], i1 = null;\n      cell.halfedges.forEach(function(e) {\n        var edge = that.edges[e], v = edge.left;\n        if ((v === cell.site || !v) && !(v = edge.right)) return;\n        var vx = x - v[0], vy = y - v[1], v2 = vx * vx + vy * vy;\n        if (v2 < d2) d2 = v2, i1 = v.index;\n      });\n    } while (i1 !== null);\n\n    that._found = i0;\n\n    return radius == null || d2 <= radius * radius ? cell.site : null;\n  }\n}\n","import constant from \"./constant\";\nimport {x as pointX, y as pointY} from \"./point\";\nimport Diagram, {epsilon} from \"./Diagram\";\n\nexport default function() {\n  var x = pointX,\n      y = pointY,\n      extent = null;\n\n  function voronoi(data) {\n    return new Diagram(data.map(function(d, i) {\n      var s = [Math.round(x(d, i, data) / epsilon) * epsilon, Math.round(y(d, i, data) / epsilon) * epsilon];\n      s.index = i;\n      s.data = d;\n      return s;\n    }), extent);\n  }\n\n  voronoi.polygons = function(data) {\n    return voronoi(data).polygons();\n  };\n\n  voronoi.links = function(data) {\n    return voronoi(data).links();\n  };\n\n  voronoi.triangles = function(data) {\n    return voronoi(data).triangles();\n  };\n\n  voronoi.x = function(_) {\n    return arguments.length ? (x = typeof _ === \"function\" ? _ : constant(+_), voronoi) : x;\n  };\n\n  voronoi.y = function(_) {\n    return arguments.length ? (y = typeof _ === \"function\" ? _ : constant(+_), voronoi) : y;\n  };\n\n  voronoi.extent = function(_) {\n    return arguments.length ? (extent = _ == null ? null : [[+_[0][0], +_[0][1]], [+_[1][0], +_[1][1]]], voronoi) : extent && [[extent[0][0], extent[0][1]], [extent[1][0], extent[1][1]]];\n  };\n\n  voronoi.size = function(_) {\n    return arguments.length ? (extent = _ == null ? null : [[0, 0], [+_[0], +_[1]]], voronoi) : extent && [extent[1][0] - extent[0][0], extent[1][1] - extent[0][1]];\n  };\n\n  return voronoi;\n}\n","/**\n * This class represents a selection applied on a data array.\n *\n * @class Selection\n */\nclass Selection {\n    /**\n     * Creates an instance of Selection.\n     * @param {Array<DataObject>} data Array of DataObjects.\n     * @memberof Selection\n     */\n    constructor () {\n        this._data = [];\n        // // map of id to data\n        this._idMap = {};\n        this._dataMap = {};\n        this._mode = '';\n        // data.forEach((item, idx) => {\n        //     const index = item.id || idx;\n        //     this._idMap[index] = item;\n        // });\n        // // array to store data in enter phase\n        this._enterdata = [];\n        // // array to store data in exit phase\n        this._exitdata = [];\n    }\n    /**\n     *  Gets the object bound to a class\n     *\n     * @return {Object} current data set bound to the class\n     * @memberof Selection\n     */\n    getObjects () {\n        return Object.values(this._idMap);\n    }\n\n    /**\n     * This method is used to supply seed data to a selection.\n     *\n     * @param {Array} newData Seed data to create the enter selection.\n     * @param {Functon | undefined } idGetter This function is used to uniqely identify a data entry.\n     * @return {Selection} Modified selection.\n     * @memberof Selection\n     */\n    data (newData, idGetter) {\n        if (idGetter) {\n            this._data = [];\n            this._idGetter = idGetter;\n            const tempMap = {};\n\n            newData.forEach((...params) => {\n                const index = idGetter(...params);\n                tempMap[index] = params[0];\n            });\n            // check if any data items have been removed\n            const purgedIds = [];\n\n            Object.keys(this._idMap).forEach((id) => {\n                if (!tempMap[id]) {\n                    purgedIds.push(id);\n                }\n            });\n\n            Object.keys(tempMap).forEach((id) => {\n                if (!this._idMap[id]) {\n                    this._enterdata.push(tempMap[id]);\n                } else {\n                    this._idMap[id] = tempMap[id];\n                    this._data.push(tempMap[id]);\n                }\n            });\n            // move the purged items to exit selection\n            purgedIds.forEach((id) => {\n                const purged = this._idMap[id];\n                this._exitdata.push(purged);\n                // this._data = this._data.slice(id, 1);\n                delete this._idMap[id];\n            });\n            // this._data = this._data.slice(temp, this._data.length);\n\n            return this;\n        }\n        // no id getter supplied so use indices\n        if (newData.length > this._data.length) {\n            const startIdx = this._data.length;\n            for (let i = startIdx; i < newData.length; i += 1) {\n                this._enterdata.push(newData[i]);\n            }\n        } else {\n            // push to exit selection\n            const temp = newData.length;\n            for (let i = temp; i < this._data.length; i += 1) {\n                const purged = this._data[i];\n                delete this._idMap[purged.id];\n                this._exitdata.push(purged);\n            }\n            this._data = this._data.slice(temp, this._data.length);\n        }\n        return this;\n    }\n\n    /**\n     * Applies the supplied callback to each data element\n     * and returns a new selection.\n     *\n     * @param {Function} callback Callback to execute on each item.\n     * @return {Selection} New selection with data created using callback.\n     * @memberof EnterSelection\n     */\n    append (callback) {\n        this[`_${this._mode}data`].forEach((...params) => {\n            const data = params[0];\n            const id = this._idGetter ? this._idGetter(...params) : (data.id || params[1]);\n            this._idMap[id] = callback(...params);\n            this._dataMap[id] = data;\n        });\n        this._mode = '';\n        return this;\n    }\n\n    /**\n     * This method returns an enter selection that\n     * allows or update operations.\n     *\n     * @return {EnterSelection} Instance of enter selection.\n     * @memberof Selection\n     */\n    enter () {\n        this._mode = 'enter';\n        return this;\n        // return new EnterSelection(this._enterdata, this._idMap, this._idGetter);\n    }\n\n    /**\n     * This method is used to set key value pairs\n     * on data objects.\n     *\n     * @param {string} key Name of property.\n     * @param {any} value Value of property.\n     * @return {Selection} Modified selection.\n     * @memberof Selection\n     */\n    attr (key, value) {\n        this._data.forEach(item => item.attr(key, value));\n        return this;\n    }\n\n    /**\n     * This method merges the data of one selection with another.\n     *\n     * @param {Selection} selection Instance of selection.\n     * @return {Selection} Modified selection.\n     * @memberof Selection\n     */\n    merge (selection) {\n        selection._data.forEach((...params) => {\n            const id = this._idGetter ? this._idGetter(...params) : (params[0].id || params[1]);\n            this._idMap[id] = params[0];\n            this._data.push(params[0]);\n        });\n        // reset enter selection\n        this._enterdata = [];\n        return this;\n    }\n\n    /**\n     * Returns a selection with exit data.\n     *\n     * @return {Selection} Instance of selection.\n     * @memberof Selection\n     */\n    exit () {\n        this._mode = 'exit';\n        // const exitdata = this._exitdata;\n        // const exitSelection = new Selection(exitdata);\n        // this._exitdata = [];\n        return this;\n    }\n\n    each (fn) {\n        Object.keys(this._idMap).forEach((e, i) => {\n            fn(this._idMap[e], this._dataMap[e], i);\n        });\n        return this;\n    }\n\n    map (fn) {\n        Object.keys(this._idMap).forEach((...params) => {\n            const key = params[0];\n            this._idMap[key] = fn(this._idMap[key], ...params, this._dataMap[key]);\n        });\n        return this;\n    }\n\n    /**\n     * Executes the cleanup operation associated with data objets.\n     *\n     * @memberof Selection\n     */\n    remove () {\n        // do cleanup on DDO's\n        const data = this[`_${this._mode}data`];\n\n        data.forEach(item => item.remove());\n        if (this._mode === '') {\n            this.each(e => e.remove());\n        }\n        this[`_${this._mode}data`] = [];\n        this._mode = '';\n    }\n}\n\nexport default Selection;\n","/* global window, requestAnimationFrame, cancelAnimationFrame */\nimport { FieldType, DimensionSubtype, DateTimeFormatter, default as DataModel } from 'datamodel';\nimport {\n    axisLeft,\n    axisRight,\n    axisTop,\n    axisBottom\n} from 'd3-axis';\nimport {\n    symbolCircle,\n    symbolCross,\n    symbolDiamond,\n    symbolSquare,\n    symbolStar,\n    symbolWye,\n    symbolTriangle,\n    symbol,\n    stack as d3Stack,\n    stackOffsetDiverging,\n    stackOrderNone,\n    stackOrderAscending,\n    stackOrderDescending,\n    stackOffsetNone,\n    stackOffsetExpand,\n    stackOffsetWiggle,\n    pie,\n    arc,\n    line,\n    curveLinear,\n    curveStepAfter,\n    curveStepBefore,\n    curveStep,\n    curveCatmullRom,\n    area\n} from 'd3-shape';\nimport { scaleBand } from 'd3-scale';\nimport { nest } from 'd3-collection';\nimport {\n    interpolate,\n    interpolateRgb,\n    piecewise,\n    interpolateNumber,\n    interpolateHslLong\n} from 'd3-interpolate';\nimport {\n    easeCubic,\n    easeBounce,\n    easePoly,\n    easeBack,\n    easeCircle,\n    easeLinear,\n    easeElastic\n} from 'd3-ease';\nimport {\n   color,\n   rgb,\n   hsl\n} from 'd3-color';\nimport { voronoi } from 'd3-voronoi';\nimport Model from 'hyperdis';\nimport { dataSelect } from './DataSystem';\nimport * as STACK_CONFIG from './enums/stack-config';\nimport { DM_OPERATION_GROUP } from './enums';\n\nconst { InvalidAwareTypes } = DataModel;\nconst HTMLElement = window.HTMLElement;\n\nconst isSimpleObject = (obj) => {\n    let token;\n    if (typeof obj === 'object') {\n        if (obj === null) { return false; }\n        token = Object.prototype.toString.call(obj);\n        if (token === '[object Object]') {\n            return (obj.constructor.toString().match(/^function (.*)\\(\\)/m) || [])[1] === 'Object';\n        }\n    }\n    return false;\n};\n\n/**\n * Returns unique id\n * @return {string} Unique id string\n */\nconst\n    getUniqueId = () => `id-${new Date().getTime()}${Math.round(Math.random() * 10000)}`;\n\n/**\n * Deep copies an object and returns a new object.\n * @param {Object} o Object to clone\n * @return {Object} New Object.\n */\nconst clone = (o) => {\n    const output = {};\n    let v;\n    for (const key in o) {\n        if ({}.hasOwnProperty.call(o, key)) {\n            v = o[key];\n            output[key] = isSimpleObject(v) ? clone(v) : v;\n        }\n    }\n    return output;\n};\n\n/**\n* Checks the existence of keys in an object\n* @param {Array} keys Set of keys which are to be checked\n* @param {Object} obj whose keys are checked from the set of keys provided\n* @return {Object} Error if the keys are absent, or the object itself\n*/\nconst checkExistence = (keys, obj) => {\n    const nonExistentKeys = [];\n    keys.forEach((key) => {\n        if (key in obj) {\n            return;\n        }\n        nonExistentKeys.push(key);\n    });\n    return nonExistentKeys;\n};\n\nconst sanitizeIP = {\n    typeObj: (keys, obj) => {\n        if (typeof obj !== 'object') {\n            return Error('Argument type object expected');\n        }\n\n        const nonExistentKeys = checkExistence(keys, obj);\n        if (nonExistentKeys.length) {\n            return Error(`Missing keys from parameter ${nonExistentKeys.join(', ')}`);\n        }\n        return obj;\n    },\n\n    /* istanbul ignore next */ htmlElem: (elem) => {\n        if (!(elem instanceof HTMLElement)) {\n            return Error('HTMLElement required');\n        }\n        return elem;\n    }\n};\n\n/**\n * Gets the maximum value from an array of objects for a given property name\n * @param  {Array.<Object>} data   Array of objects\n * @param  {string} field Field name\n * @return {number} Maximum value\n */\nconst getMax = (data, field) => Math.max(...data.map(d => d[field]));\n\n/**\n * Gets the minimum value from an array of objects for a given property name\n * @param  {Array.<Object>} data   Array of objects\n * @param  {string} field Field name\n * @return {number} Minimum value\n */\nconst getMin = (data, field) => Math.min(...data.map(d => d[field]));\n\n/**\n * Gets the domain from the data based on the field name and type of field\n * @param  {Array.<Object> | Array.<Array>} data       Data Array\n * @param  {Array.<string>} fields    Array of fields from where the domain will be calculated\n * @param {string} fieldType Type of field - nominal, quantitiative, temporal.\n * @return {Array} Usually contains a min and max value if field is quantitative or\n * an array of values if field type is nominal or ordinal\n */\nconst getDomainFromData = (data, fields, fieldType) => {\n    let domain;\n    const domArr = [];\n    data = data[0] instanceof Array ? data : [data];\n    switch (fieldType) {\n    case DimensionSubtype.CATEGORICAL:\n        domain = [].concat(...data.map(arr => arr.map(d => d[fields[0]]).filter(d => d !== undefined)));\n        break;\n    default:\n        for (let i = 0, len = data.length; i < len; i++) {\n            const arr = data[i];\n            const [field0, field1] = fields;\n            const arr0 = arr.filter(d => !isNaN(d[field0]));\n            const arr1 = arr.filter(d => !isNaN(d[field1]));\n            if (arr0.length || arr1.length) {\n                const firstMin = getMin(arr0, field0);\n                const secondMin = getMin(arr1, field1);\n                const firstMax = getMax(arr0, field0);\n                const secondMax = getMax(arr1, field1);\n                domArr.push([Math.min(firstMin, secondMin), Math.max(firstMax, secondMax)]);\n            }\n        }\n        domain = domArr.length ? [Math.min(...domArr.map(d => d[0])), Math.max(...domArr.map(d => d[1]))] : [];\n        break;\n    }\n    return domain;\n};\n\n/**\n * Union Domain values\n * @param {Array.<Array>} domains Array of domain values\n * @param {string} fieldType type of field - dimension,measure or datetime.\n * @return {Array} Unioned domain of all domain values.\n */\nconst unionDomain = (domains, fieldType) => {\n    let domain = [];\n    domains = domains.filter(dom => dom && dom.length);\n    if (domains.length) {\n        if (fieldType === DimensionSubtype.CATEGORICAL) {\n            domain = [].concat(...domains);\n        } else {\n            domain = [Math.min(...domains.map(d => d[0])), Math.max(...domains.map(d => d[1]))];\n        }\n    }\n\n    return domain;\n};\n\nconst symbolFns = {\n    circle: symbolCircle,\n    cross: symbolCross,\n    diamond: symbolDiamond,\n    square: symbolSquare,\n    star: symbolStar,\n    wye: symbolWye,\n    triangle: symbolTriangle\n};\n\nconst easeFns = {\n    cubic: easeCubic,\n    bounce: easeBounce,\n    linear: easeLinear,\n    elastic: easeElastic,\n    back: easeBack,\n    poly: easePoly,\n    circle: easeCircle\n};\n\n/**\n * Returns the maximum or minimum points of a compare value from an array of objects.\n * @param {Array} points Array of objects\n * @param {string} compareValue Key in the object on which the comparing will be done.\n * @param {string} minOrMax minimum or maximum.\n * @return {Object} Minimum or maximum point.\n */\nconst getExtremePoint = (points, compareValue, minOrMax) => {\n    let extremePoint;\n    let point;\n    const len = points.length;\n    let minOrMaxVal = minOrMax === 'max' ? -Infinity : Infinity;\n    let val;\n\n    for (let i = 0; i < len; i++) {\n        point = points[i];\n        val = point[compareValue];\n        if (minOrMax === 'min' ? val < minOrMaxVal : val > minOrMaxVal) {\n            minOrMaxVal = val;\n            extremePoint = point;\n        }\n    }\n\n    return extremePoint;\n};\n\n/**\n * Returns the minimum point of a compare value from an array of objects.\n * @param {Array} points Array of objects\n * @param {string} compareValue Key in the object on which the comparing will be done.\n * @return {Object} Minimum point.\n */\nconst getMinPoint = (points, compareValue) => getExtremePoint(points, compareValue, 'min');\n\n/**\n * Returns the maximum point of a compare value from an array of objects.\n * @param {Array} points Array of objects\n * @param {string} compareValue Key in the object on which the comparing will be done.\n * @return {Object} Maximum point.\n */\nconst getMaxPoint = (points, compareValue) => getExtremePoint(points, compareValue, 'max');\n\n/**\n * Gets the index of the closest value of the given value from the array.\n * @param {Array} arr Array of values\n * @param {number} value Value from which the nearest value will be calculated.\n * @param {string} side side property.\n * @return {number} index of the closest value\n */\n/* istanbul ignore next */const getClosestIndexOf = (arr, value, side) => {\n    let low = 0;\n    const arrLen = arr.length;\n    let high = arrLen - 1;\n\n    let mid;\n    let d1;\n    let d2;\n\n    while (low < high) {\n        mid = Math.floor((low + high) / 2);\n        d1 = Math.abs(arr[mid] - value);\n        d2 = Math.abs(arr[mid + 1] - value);\n\n        if (d2 <= d1) {\n            low = mid + 1;\n        } else {\n            high = mid;\n        }\n    }\n\n    if (!side) {\n        return high;\n    }\n\n    const highVal = arr[high];\n    if (highVal === value) {\n        return high;\n    } else if (highVal > value) {\n        if (high === 0) { return high; }\n        return side === 'left' ? high - 1 : high;\n    }\n    if (high === arr.length - 1) { return high; }\n    return side === 'left' ? high : high + 1;\n};\n\nconst getNearestValue = (data, key) => {\n    const filterData = data.filter(d => typeof d === 'number');\n    return filterData[getClosestIndexOf(filterData, key)];\n};\n\n/**\n * Returns the browser window object\n * @return {Window} Window object\n*/\nconst getWindow = () => window;\n\n/**\n * Returns the browser window object\n * @return {Window} Window object\n*/\nconst reqAnimFrame = (() => requestAnimationFrame)();\n\nconst cancelAnimFrame = (() => cancelAnimationFrame)();\n\n/**\n * Capitalizes the first letter of the word\n * @param {string} text word\n * @return {string} Capitalized word\n */\nconst capitalizeFirst = (text) => {\n    text = text.toLowerCase();\n\n    return text.replace(/\\w\\S*/g, txt => txt.charAt(0).toUpperCase() + txt.substr(1));\n};\n\n/**\n *\n *\n * @param {*} arr\n */\nconst unique = arr => ([...new Set(arr)]);\n\n/**\n * Gets the minimum difference between two consecutive numbers  in an array.\n * @param {Array} arr Array of numbers\n * @param {number} index index of the value\n * @return {number} minimum difference between values\n */\n/* istanbul ignore next */ const getMinDiff = (arr, index) => {\n    let diff;\n    let uniqueVals;\n    if (index !== undefined) {\n        uniqueVals = unique(arr.map(d => d[index]));\n    } else {\n        uniqueVals = unique(arr);\n    }\n    if (uniqueVals.length > 1) {\n        diff = Math.abs(uniqueVals[1] - uniqueVals[0]);\n        for (let i = 2, len = uniqueVals.length; i < len; i++) {\n            diff = Math.min(diff, Math.abs(uniqueVals[i] - uniqueVals[i - 1]));\n        }\n    } else {\n        diff = uniqueVals[0];\n    }\n\n    return diff;\n};\n\n/**\n * Returns the class name appended with a given id.\n * @param {string} cls class name\n * @param {string} id unique identifier\n * @param {string} prefix string needed to add before the classname\n * @return {string} qualified class name\n */\n/* istanbul ignore next */const getQualifiedClassName = (cls, id, prefix) => {\n    cls = cls.replace(/^\\.*/, '');\n    return [`${prefix}-${cls}`, `${prefix}-${cls}-${id}`];\n};\n\n/**\n * This method is used to set the default value for variables\n * without sullying the code with conditional statements.\n *\n * @export\n * @param {any} param The parameter to test.\n * @param {any} value The default value to assign.\n * @return {any} The value.\n */\n/* istanbul ignore next */ const defaultValue = (param, value) => {\n    if (typeof param === 'undefined' || (typeof param === 'object' && !param)) {\n        return value;\n    }\n    return param;\n};\n\n/**\n * DESCRIPTION TODO\n *\n * @export\n * @param {Object} graph graph whose dependency order has to be generated\n * @return {Object}\n */\nconst getDependencyOrder = (graph) => {\n    const dependencyOrder = [];\n    const visited = {};\n    const keys = Object.keys(graph);\n    /**\n     * DESCRIPTION TODO\n     *\n     * @export\n     * @param {Object} name\n     * @return {Object}\n     */\n    const visit = (name) => {\n        if (dependencyOrder.length === keys.length) {\n            return true;\n        }\n        visited[name] = true;\n        const edges = graph[name];\n        for (let e = 0; e < edges.length; e++) {\n            const dep = edges[e];\n            if (!visited[dep]) {\n                visit(dep);\n            }\n        }\n\n        dependencyOrder.push(name);\n        return false;\n    };\n\n    for (let i = 0; i < keys.length; i++) {\n        if (visit(keys[i], i)) break;\n    }\n\n    return dependencyOrder;\n};\n\n/**\n * Iterates over the properties of an object and applies the function\n *\n * @param {any} obj object to be iterated upon\n * @param {any} fn  function to be applied on it\n */\nconst objectIterator = (obj, fn) => {\n    for (const key in obj) {\n        if (Object.hasOwnProperty.call(obj, key)) {\n            fn(key, obj);\n        }\n    }\n};\n\n/**\n * This class creates a d3 voronoi for retrieving the nearest neighbour of any point from a set of two\n * dimensional points\n * @class Voronoi\n */\n/* istanbul ignore next */ class Voronoi {\n    /**\n     * Initialize the voronoi with the data given.\n     * @param {Array.<Object>} data Array of points.\n     */\n    constructor (data = []) {\n        this._voronoi = voronoi().x(d => d.x).y(d => d.y);\n        this.data(data);\n    }\n\n    /**\n     * Sets the data to voronoi\n     * @param {Array.<Object>} data Array of objects.\n     * @return {Voronoi} Instance of voronoi.\n     */\n    data (data) {\n        if (data) {\n            this._voronoiFn = this._voronoi(data);\n        }\n        return this;\n    }\n\n    /**\n     * Finds the closest point to the x and y position given.\n     * @param {number} x x value\n     * @param {number} y y value\n     * @param {number} radius search radius.\n     * @return {Object} Details of the nearest point.\n     */\n    find (x, y, radius) {\n        return this._voronoiFn.find(x, y, radius);\n    }\n}\n\nconst addListenerToNamespace = (namespaceInf, fn, context) => {\n    let key = namespaceInf.key;\n    const namespace = namespaceInf.namespace;\n    if (namespace) {\n        !context._listeners[namespace] && (context._listeners[namespace] = []);\n        if (!key) {\n            key = Object.keys(context._listeners[namespace]).length;\n        }\n        context._listeners[namespace][key] = fn;\n    } else {\n        key = Object.keys(context._listeners).length;\n        context._listeners[key] = fn;\n    }\n};\n\n/**\n *\n *\n * @param {*} obj\n * @param {*} fields\n *\n */\nconst getObjProp = (obj, ...fields) => {\n    if (obj === undefined || obj === null) {\n        return obj;\n    }\n    let retObj = obj;\n    for (let i = 0, len = fields.length; i < len; i++) {\n        retObj = retObj[fields[i]];\n        if (retObj === undefined || retObj === null) {\n            break;\n        }\n    }\n    return retObj;\n};\n\n/**\n * Methods to handle changes to table configuration and reactivity are handled by this\n * class.\n */\n/**\n *  Common store class\n *\n * @class Store\n */\nclass Store {\n    /**\n     * Creates an instance of Store.\n     * @param {Object} config The object to create the state store with.\n     * @memberof Store\n     */\n    constructor (config) {\n        // create reactive model\n        this.model = Model.create(config);\n        this._listeners = {};\n    }\n\n    /**\n     * This method returns a plain JSON object\n     * with all the fields in the state store.\n     *\n     * @return {Object} Serialized representation of state store.\n     * @memberof Store\n     */\n    serialize () {\n        return this.model.serialize();\n    }\n\n    /**\n     * This method is used to update the value of a property in the state store.\n     *\n     * @param {string} propName The name of the property.\n     * @param {number} value The new value of the property.\n     * @memberof Store\n     */\n    commit (propName, value) {\n        // check if appropriate enum has been used\n        this.model.prop(propName, value);\n    }\n\n    /**\n     * This method is used to register a callbacl that will execute\n     * when one or more properties change.\n     *\n     * @param {string | Array} propNames name of property or array of props.\n     * @param {Function} callBack The callback to execute.\n     * @memberof Store\n     */\n    /* istanbul ignore next */registerChangeListener (propNames, callBack, instantCall, namespaceInf = {}) {\n        let props = propNames;\n        if (!Array.isArray(propNames)) {\n            props = [propNames];\n        }\n        const fn = this.model.next(props, callBack, instantCall);\n        addListenerToNamespace(namespaceInf, fn, this);\n        return this;\n    }\n    /**\n     * This method is used to register a callbacl that will execute\n     * when one or more properties change.\n     *\n     * @param {string | Array} propNames name of property or array of props.\n     * @param {Function} callBack The callback to execute.\n     * @memberof Store\n     */\n    /* istanbul ignore next */ registerImmediateListener (propNames, callBack, instantCall, namespaceInf = {}) {\n        let props = propNames;\n        if (!Array.isArray(propNames)) {\n            props = [propNames];\n        }\n        const fn = this.model.on(props, callBack, instantCall);\n        addListenerToNamespace(namespaceInf, fn, this);\n        return this;\n    }\n    /**\n     * This method is used to get the name of the property\n     * from the state store.\n     *\n     * @param {string} propName The name of the field in state store.\n     * @return {any} The value of the field.\n     * @memberof Store\n     */\n    get (propName) {\n        return this.model.prop(propName);\n    }\n\n    /**\n     * This method is used to register a computed property that is computed every time\n     * the store value changes.\n     *\n     * @param {string} propName The name of the property to create.\n     * @param {Function} callBack The function to execute when depemdent props change.\n     * @memberof Store\n     */\n    computed (propName, callBack) {\n        return this.model.calculatedProp(propName, callBack);\n    }\n\n    append (propName, value) {\n        this.model.append(propName, value);\n        return this;\n    }\n\n    unsubscribeAll () {\n        Object.values(this._listeners).forEach(fn => fn());\n        return this;\n    }\n\n    unsubscribe (namespaceInf = {}) {\n        const { namespace, key } = namespaceInf;\n        const listeners = this._listeners[namespace];\n        if (key) {\n            const fn = getObjProp(listeners, key);\n            fn && fn();\n        } else {\n            Object.values(listeners).forEach(fn => fn());\n            this._listeners[namespace] = [];\n        }\n        return this;\n    }\n}\n\n/**\n * Sanitize an input number / string mixed number. Currently dot in the no is not supported.\n *\n * @param {number | string} val pure number or string mixed number\n * @return {number | null}  Number if it can be extracted. Otherwise null\n */\nconst intSanitizer = (val) => {\n    const arr = val.toString().match(/(\\d+)(px)*/g);\n    if (!arr) {\n        // If only characters are passed\n        return null;\n    }\n\n    return parseInt(arr[0], 10);\n};\n\n/**\n * Setter getter creator from config\n * Format\n *  PROPERTRY_NAME: {\n *      value: // default value of the property,\n *      meta: {\n *          typeCheck: // The setter value will be checked using this. If the value is function then the setter value\n *                     // is passed as args. (Optional)\n *          typeExpected: // The output of typecheck action will be tested against this. Truthy value will set the\n *                       // value to the setter\n *          sanitizaiton: // Need for sanitization before type is checked\n *      }\n *  }\n *\n * @param {Object} holder an empty object on which the getters and setters will be mounted\n * @param {Object} options options config based on which the getters and setters are determined.\n * @param {Hyperdis} model optional model to attach the property. If not sent new moel is created.\n * @return {Array}\n */\nconst transactor = (holder, options, model, namespaceInf = {}) => {\n    let conf;\n    const store = model && model instanceof Model ? model : Model.create({});\n    const stateProps = {};\n    for (const prop in options) {\n        if ({}.hasOwnProperty.call(options, prop)) {\n            conf = options[prop];\n            const addAsMethod = conf.meta ? conf.meta.addAsMethod : true;\n            let nameSpaceProp;\n            const namespace = namespaceInf.namespace;\n            if (namespace) {\n                nameSpaceProp = `${namespace}.${prop}`;\n            } else {\n                nameSpaceProp = prop;\n            }\n            if (!store.prop(`${nameSpaceProp}`)) {\n                stateProps[prop] = conf.value;\n            }\n            if (addAsMethod !== false) {\n                holder[prop] = ((context, meta, nsProp) => (...params) => {\n                    let val;\n                    let compareTo;\n                    const paramsLen = params.length;\n                    const prevVal = store.prop(nsProp);\n                    if (paramsLen) {\n                        // If parameters are passed then it's a setter\n                        const spreadParams = meta && meta.spreadParams;\n                        val = params;\n                        const values = [];\n                        if (meta) {\n                            for (let i = 0; i < paramsLen; i++) {\n                                val = params[i];\n                                const sanitization = meta.sanitization && (spreadParams ? meta.sanitization[i] :\n                                    meta.sanitization);\n                                const typeCheck = meta.typeCheck && (spreadParams ? meta.typeCheck[i] : meta.typeCheck);\n                                if (sanitization && typeof sanitization === 'function') {\n                                    // Sanitize if required\n                                    val = sanitization(val, prevVal, holder);\n                                }\n\n                                if (typeCheck) {\n                                    // Checking if a setter is valid\n                                    if (typeof typeCheck === 'function') {\n                                        let typeExpected = meta.typeExpected;\n                                        if (typeExpected && spreadParams) {\n                                            typeExpected = typeExpected[i];\n                                        }\n                                        if (typeExpected) {\n                                            compareTo = typeExpected;\n                                        } else {\n                                            compareTo = true;\n                                        }\n\n                                        if (typeCheck(val) === compareTo) {\n                                            values.push(val);\n                                        }\n                                    } else if (typeof typeCheck === 'string') {\n                                        if (typeCheck === 'constructor') {\n                                            const typeExpected = spreadParams ? meta.typeExpected[i] :\n                                                meta.typeExpected;\n                                            if (val && (val.constructor.name === typeExpected)) {\n                                                values.push(val);\n                                            }\n                                        }\n                                    } else {\n                                        // context.prop(key, val);\n                                        values.push(val);\n                                    }\n                                } else {\n                                    values.push(val);\n                                }\n                            }\n                            const preset = meta.preset;\n                            const oldValues = context.prop(nsProp);\n                            preset && preset(values[0], holder);\n                            if (spreadParams) {\n                                oldValues.forEach((value, i) => {\n                                    if (values[i] === undefined) {\n                                        values[i] = value;\n                                    }\n                                });\n                            }\n                            values.length && context.prop(nsProp, spreadParams ? values : values[0]);\n                        } else {\n                            context.prop(nsProp, spreadParams ? val : val[0]);\n                        }\n                        return holder;\n                    }\n                // No parameters are passed hence its a getter\n                    return context.prop(nsProp);\n                })(store, conf.meta, nameSpaceProp);\n            }\n        }\n    }\n\n    if (namespaceInf.namespace === undefined) {\n        store.append(stateProps);\n    } else {\n        const namespace = namespaceInf.namespace;\n        store.append(namespace, stateProps);\n    }\n\n    return [holder, store];\n};\n\n/**\n *\n *\n * @param {*} context\n * @param {*} props\n */\nconst generateGetterSetters = (context, props) => {\n    Object.entries(props).forEach((propInfo) => {\n        const prop = propInfo[0];\n        const typeChecker = propInfo[1].typeChecker;\n        const defVal = propInfo[1].defaultValue;\n        const sanitization = propInfo[1].sanitization;\n        const prototype = context.constructor.prototype;\n        if (!(Object.hasOwnProperty.call(prototype, prop))) {\n            if (defVal) {\n                context[`_${prop}`] = defVal;\n            }\n            context[prop] = (...params) => {\n                if (params.length) {\n                    let value = params[0];\n                    if (sanitization) {\n                        value = sanitization(context, params[0]);\n                    }\n                    if (typeChecker && !typeChecker(value)) {\n                        return context[`_${prop}`];\n                    }\n                    context[`_${prop}`] = value;\n                    return context;\n                } return context[`_${prop}`];\n            };\n        }\n    });\n};\n\n/**\n *\n *\n * @param {*} arr\n * @param {*} prop\n */\nconst getArraySum = (arr, prop) => arr.reduce((total, elem) => {\n    total += prop ? elem[prop] : elem;\n    return total;\n}, 0);\n\n/**\n *\n *\n * @param {*} arr1\n * @param {*} arr2\n *\n */\nconst arraysEqual = (arr1, arr2) => {\n    if (arr1.length !== arr2.length) { return false; }\n    for (let i = arr1.length; i >= 0; i--) {\n        if (arr1[i] !== arr2[i]) { return false; }\n    }\n\n    return true;\n};\n\n/* eslint valid-typeof:0 */\n/**\n * Returns a validation function which can be used to validate variables against a type and value\n *\n * @param {any} type type of value that the object should have\n * @return {Object} validation function\n */\nconst isEqual = type => (oldVal, newVal) => {\n    if (type === 'Array') {\n        if (!oldVal) {\n            return false;\n        }\n        return arraysEqual(oldVal, newVal);\n    } else if (type === 'Object') {\n        return Object.is(oldVal, newVal);\n    } return oldVal === newVal;\n};\n\n/**\n * Description @todo\n *\n * @param {any} transactionModel @todo\n * @param {any} transactionEndpoint @todo\n * @param {any} transactionItems @todo\n * @return {any} @todo\n */\nconst enableChainedTransaction = (transactionModel, transactionEndpoint, transactionItems) =>\n    transactionItems.forEach(item => transactionModel.on(item, ([, newVal]) => transactionEndpoint[item](newVal)));\n\n/**\n * Chceks if the element is istanceof HTMLElement\n *\n * @param {Object} elem any JS Object\n */\nconst isHTMLElem = elem => elem instanceof HTMLElement;\n\nconst ERROR_MSG = {\n    INTERFACE_IMPL: 'Method not implemented'\n};\n\n/**\n * Merges the sink object in the source by recursively iterating through the object properties\n * @param {Object} source Source Object\n * @param {Object} sink Sink Object\n * @return {Object} Merged object\n */\nconst mergeRecursive = (source, sink) => {\n    for (const prop in sink) {\n        if (isSimpleObject(source[prop]) && isSimpleObject(sink[prop])) {\n            mergeRecursive(source[prop], sink[prop]);\n        } else if (sink[prop] instanceof Object && sink[prop].constructor === Object) {\n            source[prop] = {};\n            mergeRecursive(source[prop], sink[prop]);\n        } else {\n            source[prop] = sink[prop];\n        }\n    }\n    return source;\n};\n\n/**\n * Creates a selection set from a data set with corresponding attributes\n *\n * @export\n * @param {Selection} sel contains previous selection\n * @param {Object} appendObj Object to be appended\n * @param {Array} data Data based on which the selection is entered/updated/removed\n * @param {Object} [attrs={}] Attributes to be set on the data\n * @return {Selection} Merged selection\n */\nconst createSelection = (sel, appendObj, data, idFn) => {\n    let selection = sel || dataSelect([]);\n\n    selection = selection.data(data, idFn);\n\n    const enter = selection.enter().append(appendObj);\n    const mergedSelection = enter.merge(selection);\n\n    selection.exit() && selection.exit().remove();\n    return mergedSelection;\n};\n\nconst interpolateArray = (data, fitCount) => {\n    const linearInterpolate = function (before, after, atPoint) {\n        return before + (after - before) * atPoint;\n    };\n    const newData = [];\n    const springFactor = ((data.length - 1) / (fitCount - 1));\n    newData[0] = data[0]; // for new allocation\n    for (let i = 1; i < fitCount - 1; i++) {\n        const tmp = i * springFactor;\n        const before = (Math.floor(tmp)).toFixed();\n        const after = (Math.ceil(tmp)).toFixed();\n        const atPoint = tmp - before;\n        newData[i] = linearInterpolate(data[before], data[after], atPoint);\n    }\n    newData[fitCount - 1] = data[data.length - 1]; // for new allocation\n    return newData;\n};\n\n/**\n *\n *\n * @param {*} fn\n */\nconst nextFrame = (fn) => {\n    setTimeout(() => {\n        fn();\n    }, 0);\n};\n\n/**\n *\n *\n * @param {*} angle\n */\nconst angleToRadian = angle => angle * Math.PI / 180;\n\n/**\n *\n *\n * @param {*} newName\n * @param {*} oldName\n */\nconst replaceCSSPrefix = () => {\n    // @todo\n};\n\n/**\n * Gets the  interpolator function from d3 color\n *\n */\nconst interpolator = () => interpolate;\n\n/**\n * Gets the number interpolator from d3 color\n *\n */\nconst numberInterpolator = () => interpolateNumber;\n\n/**\n * Gets the rgb interpolator from d3 color\n *\n */\nconst colorInterpolator = () => interpolateRgb;\n\n/**\n * Gets the hsl interpolator from d3 color\n *\n */\nconst hslInterpolator = () => interpolateHslLong;\n\nconst transformColors = () => ({\n    color,\n    rgb,\n    hsl\n});\n\n/**\n * Gets the piecewise interpolator from d3 color\n *\n */\nconst piecewiseInterpolator = () => piecewise;\n\nfunction hue2rgb (p, q, t) {\n    if (t < 0) t += 1;\n    if (t > 1) t -= 1;\n    if (t < 1 / 6) return p + (q - p) * 6 * t;\n    if (t < 1 / 2) return q;\n    if (t < 2 / 3) return p + (q - p) * (2 / 3 - t) * 6;\n    return p;\n}\n\n  /**\n   * Converts an HSL color value to RGB. Conversion formula\n   * adapted from http://en.wikipedia.org/wiki/HSL_color_space.\n   * Assumes h, s, and l are contained in the set [0, 1] and\n   * returns r, g, and b in the set [0, 255].\n   *\n   * @param   Number  h       The hue\n   * @param   Number  s       The saturation\n   * @param   Number  l       The lightness\n   * @return  Array           The RGB representation\n   */\nconst hslToRgb = (h, s, l, a = 1) => {\n    let r;\n    let g;\n    let b;\n\n    if (s === 0) {\n        r = g = b = l; // achromatic\n    } else {\n        const q = l < 0.5 ? l * (1 + s) : l + s - l * s;\n        const p = 2 * l - q;\n\n        r = hue2rgb(p, q, h + 1 / 3);\n        g = hue2rgb(p, q, h);\n        b = hue2rgb(p, q, h - 1 / 3);\n    }\n\n    return [r * 255, g * 255, b * 255, a];\n};\n\n  /**\n   * Converts an RGB color value to HSV. Conversion formula\n   * adapted from http://en.wikipedia.org/wiki/HSV_color_space.\n   * Assumes r, g, and b are contained in the set [0, 255] and\n   * returns h, s, and v in the set [0, 1].\n   *\n   * @param   Number  r       The red color value\n   * @param   Number  g       The green color value\n   * @param   Number  b       The blue color value\n   * @return  Array           The HSV representation\n   */\nconst rgbToHsv = (r, g, b, a = 1) => {\n    r = +r; g = +g; b = +b; a = +a;\n    r /= 255; g /= 255; b /= 255;\n    const max = Math.max(r, g, b);\n    const min = Math.min(r, g, b);\n    let h;\n    let s;\n    const l = (max + min) / 2;\n\n    if (max === min) {\n        h = s = 0; // achromatic\n    } else {\n        const d = max - min;\n        s = l > 0.5 ? d / (2 - max - min) : d / (max + min);\n        switch (max) {\n        case r: h = (g - b) / d + (g < b ? 6 : 0); break;\n        case g: h = (b - r) / d + 2; break;\n        case b: h = (r - g) / d + 4; break;\n        default: break;\n        }\n        h /= 6;\n    }\n    return [h, s, l, a];\n};\n\n  /**\n   * Converts an HSV color value to RGB. Conversion formula\n   * adapted from http://en.wikipedia.org/wiki/HSV_color_space.\n   * Assumes h, s, and v are contained in the set [0, 1] and\n   * returns r, g, and b in the set [0, 255].\n   *\n   * @param   Number  h       The hue\n   * @param   Number  s       The saturation\n   * @param   Number  v       The value\n   * @return  Array           The RGB representation\n   */\nconst hsvToRgb = (h, s, v, a = 1) => {\n    let r;\n    let g;\n    let b;\n\n    const i = Math.floor(h * 6);\n    const f = h * 6 - i;\n    const p = v * (1 - s);\n    const q = v * (1 - f * s);\n    const t = v * (1 - (1 - f) * s);\n\n    switch (i % 6) {\n    case 0: r = v; g = t; b = p; break;\n    case 1: r = q; g = v; b = p; break;\n    case 2: r = p; g = v; b = t; break;\n    case 3: r = p; g = q; b = v; break;\n    case 4: r = t; g = p; b = v; break;\n    case 5: r = v; g = p; b = q; break;\n    default: break;\n    }\n\n    return [r * 255, g * 255, b * 255, a];\n};\n\nconst hexToHsv = (hex) => {\n    const result = /^#?([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})$/i.exec(hex);\n\n    const r = parseInt(result[1], 16);\n    const g = parseInt(result[2], 16);\n    const b = parseInt(result[3], 16);\n    const a = result[4] ? parseInt(result[4], 16) : 1;\n    return rgbToHsv(r, g, b, a);\n};\n\nconst detectColor = (col) => {\n    const matchRgb = /rgb\\((\\d{1,3}), (\\d{1,3}), (\\d{1,3})\\)/;\n    const matchHsl = /hsl\\((\\d+),\\s*([\\d.]+)%,\\s*([\\d.]+)%\\)/g;\n\n    // Source :  https://gist.github.com/sethlopezme/d072b945969a3cc2cc11\n     // eslint-disable-next-line\n    const matchRgba = /rgba?\\(((25[0-5]|2[0-4]\\d|1\\d{1,2}|\\d\\d?)\\s*,\\s*?){2}(25[0-5]|2[0-4]\\d|1\\d{1,2}|\\d\\d?)\\s*,?\\s*([01]\\.?\\d*?)?\\)/;\n     // eslint-disable-next-line\n    const matchHsla = /^hsla\\((0|360|35\\d|3[0-4]\\d|[12]\\d\\d|0?\\d?\\d),(0|100|\\d{1,2})%,(0|100|\\d{1,2})%,(0?\\.\\d|1(\\.0)?)\\)$/;\n    const matchHex = /^#([0-9a-f]{3}){1,2}$/i;\n\n    if (matchRgb.test(col) || matchRgba.test(col)) {\n        return 'rgb';\n    } else if (matchHsl.test(col) || matchHsla.test(col)) {\n        return 'hsl';\n    } else if (matchHex.test(col)) {\n        return 'hex';\n    } return col;\n};\n\n/**\n *\n *\n * @param {*} model\n * @param {*} propModel\n *\n */\nconst filterPropagationModel = (model, propModel, measures) => {\n    const { data, schema } = propModel.getData();\n    let filteredModel;\n    if (schema.length) {\n        const fieldMap = model.getFieldsConfig();\n        filteredModel = model.select((fields) => {\n            const include = data.some(row => schema.every((propField, idx) => {\n                if (!measures && (!(propField.name in fieldMap) ||\n                        fieldMap[propField.name].def.type === FieldType.MEASURE)) {\n                    return true;\n                }\n                return row[idx] === fields[propField.name].valueOf();\n            }));\n            return include;\n        }, {\n            saveChild: false\n        });\n    } else {\n        filteredModel = propModel;\n    }\n\n    return filteredModel;\n};\n\nconst assembleModelFromIdentifiers = (model, identifiers) => {\n    let schema = [];\n    let data;\n    const fieldMap = model.getFieldsConfig();\n    if (identifiers.length) {\n        const fields = identifiers[0];\n        const len = fields.length;\n        for (let i = 0; i < len; i++) {\n            const field = fields[i];\n            const fieldObj = fieldMap[field] && Object.assign({}, fieldMap[field].def);\n            if (fieldObj) {\n                schema.push(Object.assign(fieldObj));\n            }\n        }\n\n        data = [];\n        const header = identifiers[0];\n        for (let i = 1; i < identifiers.length; i += 1) {\n            const vals = identifiers[i];\n            const temp = {};\n            vals.forEach((fieldVal, cIdx) => {\n                temp[header[cIdx]] = fieldVal;\n            });\n            data.push(temp);\n        }\n    } else {\n        data = [];\n        schema = [];\n    }\n\n    return new model.constructor(data, schema);\n};\n\n/**\n *\n *\n * @param {*} dataModel\n * @param {*} criteria\n *\n */\nconst getDataModelFromRange = (dataModel, criteria, mode) => {\n    if (criteria === null) {\n        return null;\n    }\n    const selFields = Object.keys(criteria);\n    const selFn = fields => selFields.every((field) => {\n        const val = fields[field].value;\n        const range = criteria[field][0] instanceof Array ? criteria[field][0] : criteria[field];\n        if (typeof range[0] === 'string') {\n            return range.find(d => d === val) !== undefined;\n        }\n        return range ? val >= range[0] && val <= range[1] : true;\n    });\n\n    return dataModel.select(selFn, {\n        saveChild: false,\n        mode\n    });\n};\n\n/**\n *\n *\n * @param {*} dataModel\n * @param {*} identifiers\n *\n */\nconst getDataModelFromIdentifiers = (dataModel, identifiers, mode) => {\n    let filteredDataModel;\n    if (identifiers instanceof Array) {\n        const fieldsConfig = dataModel.getFieldsConfig();\n\n        const dataArr = identifiers.slice(1, identifiers.length);\n        if (identifiers instanceof Function) {\n            filteredDataModel = identifiers(dataModel, {}, false);\n        } else if (identifiers instanceof Array && identifiers[0].length) {\n            const filteredSchema = identifiers[0].filter(d => d in fieldsConfig);\n            filteredDataModel = dataModel.select((fields) => {\n                let include = true;\n                filteredSchema.forEach((propField, idx) => {\n                    const value = fields[propField].valueOf();\n                    const index = dataArr.findIndex(d => d[idx] === value);\n                    include = include && index !== -1;\n                });\n                return include;\n            }, {\n                saveChild: false,\n                mode\n            });\n        }\n    } else {\n        filteredDataModel = getDataModelFromRange(dataModel, identifiers, mode);\n    }\n    return filteredDataModel;\n};\n\n/**\n *\n *\n * @param {*} context\n * @param {*} listenerMap\n */\nconst registerListeners = (context, listenerMap, ...params) => {\n    const propListenerMap = listenerMap(context, ...params);\n    for (const key in propListenerMap) {\n        if ({}.hasOwnProperty.call(propListenerMap, key)) {\n            const namespace = params[0];\n            let ns = null;\n            if (namespace) {\n                ns = namespace.local;\n            }\n            const mapObj = propListenerMap[key];\n            const propType = mapObj.type;\n            const props = mapObj.props;\n            const listenerFn = mapObj.listener;\n            context.store()[propType](props, listenerFn, false, {\n                namespace: ns\n            });\n        }\n    }\n};\n\nconst isValidValue = value => !isNaN(value) && value !== -Infinity && value !== Infinity;\n/**\n *\n *\n * @param {*} str\n *\n */\nconst escapeHTML = (str) => {\n    const htmlEscapes = {\n        '&': '&amp;',\n        '<': '&lt;',\n        '>': '&gt;',\n        '\"': '&quot;',\n        \"'\": '&#x27;',\n        '/': '&#x2F;'\n    };\n    const htmlEscaper = /[&<>\"'/]/g;\n    return (`${str}`).replace(htmlEscaper, match => htmlEscapes[match]);\n};\n\n/**\n *\n *\n * @param {*} arr\n */\nconst transposeArray = arr => arr[0].map((col, i) => arr.map(row => row[i]));\nconst toArray = arr => (arr instanceof Array ? arr : [arr]);\nconst extendsClass = (cls, extendsFrom, found) => {\n    if (!cls) {\n        return false;\n    }\n    const prototype = cls.prototype;\n    if (prototype instanceof extendsFrom) {\n        found = true;\n    } else {\n        found = extendsClass(prototype, extendsFrom, found);\n    }\n    return found;\n};\n\n/**\n *\n * @param {*} dm1\n * @param {*} dm2\n */\nconst concatModels = (dm1, dm2) => {\n    const dataObj1 = dm1.getData();\n    const dataObj2 = dm2.getData();\n    const data1 = dataObj1.data;\n    const data2 = dataObj2.data;\n    const schema1 = dataObj1.schema;\n    const schema2 = dataObj2.schema;\n    const tuples1 = {};\n    const tuples2 = {};\n    const commonTuples = {};\n    for (let i = 0; i < data1.length; i++) {\n        for (let ii = 0; ii < data2.length; ii++) {\n            const row1 = data1[i];\n            const row2 = data2[ii];\n            const dim1Values = row1.filter((d, idx) => schema1[idx].type === FieldType.DIMENSION);\n            const dim2Values = row2.filter((d, idx) => schema2[idx].type === FieldType.DIMENSION);\n            const allDimSame = dim1Values.every(value => dim2Values.indexOf(value) !== -1);\n            if (allDimSame) {\n                const key = dim1Values.join();\n                !commonTuples[key] && (commonTuples[key] = {});\n                row1.forEach((value, idx) => {\n                    commonTuples[key][schema1[idx].name] = value;\n                });\n                row2.forEach((value, idx) => {\n                    commonTuples[key][schema2[idx].name] = value;\n                });\n            } else {\n                const dm1Key = dim1Values.join();\n                const dm2Key = dim2Values.join();\n                if (!commonTuples[dm1Key] && !commonTuples[dm2Key]) {\n                    !tuples1[dm1Key] && (tuples1[dm1Key] = {});\n                    !tuples2[dm2Key] && (tuples2[dm2Key] = {});\n                    row1.forEach((value, idx) => {\n                        tuples1[dm1Key][schema1[idx].name] = value;\n                    });\n                    row2.forEach((value, idx) => {\n                        tuples2[dm2Key][schema2[idx].name] = value;\n                    });\n                }\n            }\n        }\n    }\n\n    const commonSchema = [...schema1, ...schema2.filter(s2 => schema1.findIndex(s1 => s1.name === s2.name) === -1)];\n    const data = [...Object.values(tuples1), ...Object.values(tuples2), ...Object.values(commonTuples)];\n    return [data, commonSchema];\n};\n\nconst getSymbol = type => symbol().type(symbolFns[type]);\n\nconst stackOrders = {\n    [STACK_CONFIG.ORDER_NONE]: stackOrderNone,\n    [STACK_CONFIG.ORDER_ASCENDING]: stackOrderAscending,\n    [STACK_CONFIG.ORDER_DESCENDING]: stackOrderDescending\n};\nconst stackOffsets = {\n    [STACK_CONFIG.OFFSET_DIVERGING]: stackOffsetDiverging,\n    [STACK_CONFIG.OFFSET_NONE]: stackOffsetNone,\n    [STACK_CONFIG.OFFSET_EXPAND]: stackOffsetExpand,\n    [STACK_CONFIG.OFFSET_WIGGLE]: stackOffsetWiggle\n};\n\n// eslint-disable-next-line require-jsdoc\nconst stack = params => d3Stack().keys(params.keys).offset(stackOffsets[params.offset])\n                .order(stackOrders[params.order])(params.data);\n\n/**\n * Groups the data into a hierarchical tree structure based on one or more fields.\n * @param { Object } params Configuration properties for nesting data\n * @param { Array.<Array> } params.data Data which needs to be grouped\n * @param { Array.<number> } params.keys Field indices by which the data will be grouped\n * @return { Array.<Object> } Grouped data array\n */\nconst nestCollection = (params) => {\n    const nestFn = nest();\n    params.keys.forEach(key => nestFn.key(d => d[key]));\n    return nestFn.entries(params.data);\n};\n\nconst pathInterpolators = {\n    curveLinear,\n    curveStepAfter,\n    curveStepBefore,\n    curveStep,\n    curveCatmullRom,\n    stepAfter: curveStepAfter,\n    catmullRom: curveCatmullRom,\n    step: curveStep,\n    stepBefore: curveStepBefore,\n    linear: curveLinear\n};\n\nconst Symbols = {\n    axisLeft,\n    axisRight,\n    axisTop,\n    axisBottom,\n    line,\n    area,\n    pie,\n    arc,\n    nest\n};\n\nconst Scales = {\n    band: scaleBand\n};\n\nconst getSmallestDiff = (points) => {\n    points = points.sort((a, b) => a - b);\n    let minDiff = points[1] - points[0];\n    for (let i = 2; i < points.length; i++) {\n        minDiff = Math.min(minDiff, points[i] - points[i - 1]);\n    }\n\n    return minDiff;\n};\n\nconst timeFormats = {\n    millisecond: '%A, %b %e, %H:%M:%S.%L',\n    second: '%A, %b %e, %H:%M:%S',\n    minute: '%A, %b %e, %H:%M',\n    hour: '%A, %b %e, %H:%M',\n    day: '%A, %b %e, %Y',\n    month: '%B %Y',\n    year: '%Y'\n};\n\nconst timeDurations = [\n    ['millisecond', 'second', 'minute', 'hour', 'day', 'month', 'year'],\n    [1, 1000, 60000, 3600000, 86400000, 2592000000, 31536000000]\n];\n\nconst getNearestInterval = (interval) => {\n    const index = getClosestIndexOf(timeDurations[1], interval);\n    return timeDurations[0][index];\n};\n\nconst formatTemporal = (value, interval) => {\n    const nearestInterval = getNearestInterval(interval);\n    return DateTimeFormatter.formatAs(value, timeFormats[nearestInterval]);\n};\n\nconst temporalFields = (dataModel) => {\n    const filteredFields = {};\n    Object.entries(dataModel.getFieldspace().getDimension()).forEach(([fieldName, fieldObj]) => {\n        if (fieldObj.subtype() === DimensionSubtype.TEMPORAL) {\n            filteredFields[fieldName] = fieldObj;\n        }\n    });\n    return filteredFields;\n};\n\nconst require = (lookupWhat, lookupDetails) => ({\n    resolvable: (store) => {\n        const lookupTarget = store[lookupWhat];\n        const depArr = lookupDetails.slice(0, lookupDetails.length - 1);\n        const fn = lookupDetails[lookupDetails.length - 1]; // fn\n\n        const deps = depArr.map(str => lookupTarget[str]);\n        return {\n            fn: fn(...deps),\n            depArr\n        };\n    }\n});\n\nconst nextAnimFrame = window.requestAnimationFrame || window.webkitRequestAnimationFrame ||\n    window.mozRequestAnimationFrame || window.oRequestAnimationFrame || window.msRequestAnimationFrame ||\n    function (callback) {\n        setTimeout(callback, 16);\n    };\n\nconst getValueParser = config => (val) => {\n    if (val instanceof InvalidAwareTypes) {\n        return val in config ? config[val] : `${val}`;\n    }\n    return val;\n};\n\nconst retrieveNearestGroupByReducers = (dataModel, ...measureFieldNames) => {\n    let nearestReducers = {};\n    let next = dataModel;\n    do {\n        const derivations = next.getDerivations();\n        if (derivations) {\n            const groupDerivation = derivations.reverse().find(derivation => derivation.op === DM_OPERATION_GROUP);\n            if (groupDerivation) {\n                nearestReducers = groupDerivation.criteria || {};\n                break;\n            }\n        }\n    } while (next = next.getParent());\n\n    const filteredReducers = {};\n    const measures = dataModel.getFieldspace().getMeasure();\n    measureFieldNames.forEach((measureName) => {\n        if (nearestReducers[measureName]) {\n            filteredReducers[measureName] = nearestReducers[measureName];\n        } else {\n            const measureField = measures[measureName];\n            if (measureField) {\n                filteredReducers[measureName] = measureField.defAggFn();\n            }\n        }\n    });\n\n    return filteredReducers;\n};\n\nexport {\n    getValueParser,\n    require,\n    Scales,\n    Symbols,\n    pathInterpolators,\n    stack,\n    nestCollection,\n    getSymbol,\n    transformColors,\n    detectColor,\n    hexToHsv,\n    hslToRgb,\n    rgbToHsv,\n    hsvToRgb,\n    concatModels,\n    toArray,\n    angleToRadian,\n    escapeHTML,\n    generateGetterSetters,\n    getArraySum,\n    interpolator,\n    piecewiseInterpolator,\n    getDataModelFromIdentifiers,\n    getDataModelFromRange,\n    colorInterpolator,\n    numberInterpolator,\n    ERROR_MSG,\n    reqAnimFrame,\n    nextAnimFrame,\n    filterPropagationModel,\n    transposeArray,\n    cancelAnimFrame,\n    getMax,\n    getMin,\n    getDomainFromData,\n    getUniqueId,\n    mergeRecursive,\n    unionDomain,\n    symbolFns,\n    easeFns,\n    clone,\n    isEqual,\n    interpolateArray,\n    getMinPoint,\n    defaultValue,\n    getMaxPoint,\n    getClosestIndexOf,\n    Voronoi,\n    checkExistence,\n    sanitizeIP,\n    getMinDiff,\n    capitalizeFirst,\n    getWindow,\n    getQualifiedClassName,\n    Store,\n    getDependencyOrder,\n    objectIterator,\n    intSanitizer,\n    transactor,\n    enableChainedTransaction,\n    isHTMLElem,\n    isSimpleObject,\n    nextFrame,\n    registerListeners,\n    replaceCSSPrefix,\n    getObjProp,\n    extendsClass,\n    assembleModelFromIdentifiers,\n    isValidValue,\n    hslInterpolator,\n    getSmallestDiff,\n    getNearestValue,\n    retrieveNearestGroupByReducers,\n    createSelection,\n    formatTemporal,\n    temporalFields\n};\n","export function linear(t) {\n  return +t;\n}\n","export function circleIn(t) {\n  return 1 - Math.sqrt(1 - t * t);\n}\n\nexport function circleOut(t) {\n  return Math.sqrt(1 - --t * t);\n}\n\nexport function circleInOut(t) {\n  return ((t *= 2) <= 1 ? 1 - Math.sqrt(1 - t * t) : Math.sqrt(1 - (t -= 2) * t) + 1) / 2;\n}\n","import Selection from './selection';\n/**\n * This function applies a selection operation on a data array.\n *\n * @export\n * @param {Array} [data=[]] The data array to be observed.\n * @return {Selection} Instance of a selection.\n */\nexport default function dataSelect (data = []) {\n    return new Selection(data);\n}\n\n","import {path} from \"d3-path\";\nimport circle from \"./symbol/circle\";\nimport cross from \"./symbol/cross\";\nimport diamond from \"./symbol/diamond\";\nimport star from \"./symbol/star\";\nimport square from \"./symbol/square\";\nimport triangle from \"./symbol/triangle\";\nimport wye from \"./symbol/wye\";\nimport constant from \"./constant\";\n\nexport var symbols = [\n  circle,\n  cross,\n  diamond,\n  square,\n  star,\n  triangle,\n  wye\n];\n\nexport default function() {\n  var type = constant(circle),\n      size = constant(64),\n      context = null;\n\n  function symbol() {\n    var buffer;\n    if (!context) context = buffer = path();\n    type.apply(this, arguments).draw(context, +size.apply(this, arguments));\n    if (buffer) return context = null, buffer + \"\" || null;\n  }\n\n  symbol.type = function(_) {\n    return arguments.length ? (type = typeof _ === \"function\" ? _ : constant(_), symbol) : type;\n  };\n\n  symbol.size = function(_) {\n    return arguments.length ? (size = typeof _ === \"function\" ? _ : constant(+_), symbol) : size;\n  };\n\n  symbol.context = function(_) {\n    return arguments.length ? (context = _ == null ? null : _, symbol) : context;\n  };\n\n  return symbol;\n}\n","export const ORDER_ASCENDING = 'ascending';\nexport const ORDER_DESCENDING = 'descending';\nexport const ORDER_NONE = 'none';\nexport const OFFSET_DIVERGING = 'diverging';\nexport const OFFSET_NONE = 'none';\nexport const OFFSET_EXPAND = 'expand';\nexport const OFFSET_WIGGLE = 'wiggle';\n","import ascending from \"./ascending\";\n\nexport default function(series) {\n  return ascending(series).reverse();\n}\n","export default function(series, order) {\n  if (!((n = series.length) > 1)) return;\n  for (var i, j = 0, d, dy, yp, yn, n, m = series[order[0]].length; j < m; ++j) {\n    for (yp = yn = 0, i = 0; i < n; ++i) {\n      if ((dy = (d = series[order[i]][j])[1] - d[0]) >= 0) {\n        d[0] = yp, d[1] = yp += dy;\n      } else if (dy < 0) {\n        d[1] = yn, d[0] = yn += dy;\n      } else {\n        d[0] = yp;\n      }\n    }\n  }\n}\n","import none from \"./none\";\n\nexport default function(series, order) {\n  if (!((n = series.length) > 0)) return;\n  for (var i, n, j = 0, m = series[0].length, y; j < m; ++j) {\n    for (y = i = 0; i < n; ++i) y += series[i][j][1] || 0;\n    if (y) for (i = 0; i < n; ++i) series[i][j][1] /= y;\n  }\n  none(series, order);\n}\n","import none from \"./none\";\n\nexport default function(series, order) {\n  if (!((n = series.length) > 0) || !((m = (s0 = series[order[0]]).length) > 0)) return;\n  for (var y = 0, j = 1, s0, m, n; j < m; ++j) {\n    for (var i = 0, s1 = 0, s2 = 0; i < n; ++i) {\n      var si = series[order[i]],\n          sij0 = si[j][1] || 0,\n          sij1 = si[j - 1][1] || 0,\n          s3 = (sij0 - sij1) / 2;\n      for (var k = 0; k < i; ++k) {\n        var sk = series[order[k]],\n            skj0 = sk[j][1] || 0,\n            skj1 = sk[j - 1][1] || 0;\n        s3 += skj0 - skj1;\n      }\n      s1 += sij0, s2 += s3 * sij0;\n    }\n    s0[j - 1][1] += s0[j - 1][0] = y;\n    if (s1) y -= s2 / s1;\n  }\n  s0[j - 1][1] += s0[j - 1][0] = y;\n  none(series, order);\n}\n","import constant from \"./constant\";\nimport descending from \"./descending\";\nimport identity from \"./identity\";\nimport {tau} from \"./math\";\n\nexport default function() {\n  var value = identity,\n      sortValues = descending,\n      sort = null,\n      startAngle = constant(0),\n      endAngle = constant(tau),\n      padAngle = constant(0);\n\n  function pie(data) {\n    var i,\n        n = data.length,\n        j,\n        k,\n        sum = 0,\n        index = new Array(n),\n        arcs = new Array(n),\n        a0 = +startAngle.apply(this, arguments),\n        da = Math.min(tau, Math.max(-tau, endAngle.apply(this, arguments) - a0)),\n        a1,\n        p = Math.min(Math.abs(da) / n, padAngle.apply(this, arguments)),\n        pa = p * (da < 0 ? -1 : 1),\n        v;\n\n    for (i = 0; i < n; ++i) {\n      if ((v = arcs[index[i] = i] = +value(data[i], i, data)) > 0) {\n        sum += v;\n      }\n    }\n\n    // Optionally sort the arcs by previously-computed values or by data.\n    if (sortValues != null) index.sort(function(i, j) { return sortValues(arcs[i], arcs[j]); });\n    else if (sort != null) index.sort(function(i, j) { return sort(data[i], data[j]); });\n\n    // Compute the arcs! They are stored in the original data's order.\n    for (i = 0, k = sum ? (da - n * pa) / sum : 0; i < n; ++i, a0 = a1) {\n      j = index[i], v = arcs[j], a1 = a0 + (v > 0 ? v * k : 0) + pa, arcs[j] = {\n        data: data[j],\n        index: i,\n        value: v,\n        startAngle: a0,\n        endAngle: a1,\n        padAngle: p\n      };\n    }\n\n    return arcs;\n  }\n\n  pie.value = function(_) {\n    return arguments.length ? (value = typeof _ === \"function\" ? _ : constant(+_), pie) : value;\n  };\n\n  pie.sortValues = function(_) {\n    return arguments.length ? (sortValues = _, sort = null, pie) : sortValues;\n  };\n\n  pie.sort = function(_) {\n    return arguments.length ? (sort = _, sortValues = null, pie) : sort;\n  };\n\n  pie.startAngle = function(_) {\n    return arguments.length ? (startAngle = typeof _ === \"function\" ? _ : constant(+_), pie) : startAngle;\n  };\n\n  pie.endAngle = function(_) {\n    return arguments.length ? (endAngle = typeof _ === \"function\" ? _ : constant(+_), pie) : endAngle;\n  };\n\n  pie.padAngle = function(_) {\n    return arguments.length ? (padAngle = typeof _ === \"function\" ? _ : constant(+_), pie) : padAngle;\n  };\n\n  return pie;\n}\n","export const DM_OPERATION_GROUP = 'group';\n","export var xhtml = \"http://www.w3.org/1999/xhtml\";\n\nexport default {\n  svg: \"http://www.w3.org/2000/svg\",\n  xhtml: xhtml,\n  xlink: \"http://www.w3.org/1999/xlink\",\n  xml: \"http://www.w3.org/XML/1998/namespace\",\n  xmlns: \"http://www.w3.org/2000/xmlns/\"\n};\n","import namespaces from \"./namespaces\";\n\nexport default function(name) {\n  var prefix = name += \"\", i = prefix.indexOf(\":\");\n  if (i >= 0 && (prefix = name.slice(0, i)) !== \"xmlns\") name = name.slice(i + 1);\n  return namespaces.hasOwnProperty(prefix) ? {space: namespaces[prefix], local: name} : name;\n}\n","import namespace from \"./namespace\";\nimport {xhtml} from \"./namespaces\";\n\nfunction creatorInherit(name) {\n  return function() {\n    var document = this.ownerDocument,\n        uri = this.namespaceURI;\n    return uri === xhtml && document.documentElement.namespaceURI === xhtml\n        ? document.createElement(name)\n        : document.createElementNS(uri, name);\n  };\n}\n\nfunction creatorFixed(fullname) {\n  return function() {\n    return this.ownerDocument.createElementNS(fullname.space, fullname.local);\n  };\n}\n\nexport default function(name) {\n  var fullname = namespace(name);\n  return (fullname.local\n      ? creatorFixed\n      : creatorInherit)(fullname);\n}\n","function none() {}\n\nexport default function(selector) {\n  return selector == null ? none : function() {\n    return this.querySelector(selector);\n  };\n}\n","function empty() {\n  return [];\n}\n\nexport default function(selector) {\n  return selector == null ? empty : function() {\n    return this.querySelectorAll(selector);\n  };\n}\n","var matcher = function(selector) {\n  return function() {\n    return this.matches(selector);\n  };\n};\n\nif (typeof document !== \"undefined\") {\n  var element = document.documentElement;\n  if (!element.matches) {\n    var vendorMatches = element.webkitMatchesSelector\n        || element.msMatchesSelector\n        || element.mozMatchesSelector\n        || element.oMatchesSelector;\n    matcher = function(selector) {\n      return function() {\n        return vendorMatches.call(this, selector);\n      };\n    };\n  }\n}\n\nexport default matcher;\n","export default function(update) {\n  return new Array(update.length);\n}\n","import sparse from \"./sparse\";\nimport {Selection} from \"./index\";\n\nexport default function() {\n  return new Selection(this._enter || this._groups.map(sparse), this._parents);\n}\n\nexport function EnterNode(parent, datum) {\n  this.ownerDocument = parent.ownerDocument;\n  this.namespaceURI = parent.namespaceURI;\n  this._next = null;\n  this._parent = parent;\n  this.__data__ = datum;\n}\n\nEnterNode.prototype = {\n  constructor: EnterNode,\n  appendChild: function(child) { return this._parent.insertBefore(child, this._next); },\n  insertBefore: function(child, next) { return this._parent.insertBefore(child, next); },\n  querySelector: function(selector) { return this._parent.querySelector(selector); },\n  querySelectorAll: function(selector) { return this._parent.querySelectorAll(selector); }\n};\n","export default function(x) {\n  return function() {\n    return x;\n  };\n}\n","import {Selection} from \"./index\";\nimport {EnterNode} from \"./enter\";\nimport constant from \"../constant\";\n\nvar keyPrefix = \"$\"; // Protect against keys like “__proto__”.\n\nfunction bindIndex(parent, group, enter, update, exit, data) {\n  var i = 0,\n      node,\n      groupLength = group.length,\n      dataLength = data.length;\n\n  // Put any non-null nodes that fit into update.\n  // Put any null nodes into enter.\n  // Put any remaining data into enter.\n  for (; i < dataLength; ++i) {\n    if (node = group[i]) {\n      node.__data__ = data[i];\n      update[i] = node;\n    } else {\n      enter[i] = new EnterNode(parent, data[i]);\n    }\n  }\n\n  // Put any non-null nodes that don’t fit into exit.\n  for (; i < groupLength; ++i) {\n    if (node = group[i]) {\n      exit[i] = node;\n    }\n  }\n}\n\nfunction bindKey(parent, group, enter, update, exit, data, key) {\n  var i,\n      node,\n      nodeByKeyValue = {},\n      groupLength = group.length,\n      dataLength = data.length,\n      keyValues = new Array(groupLength),\n      keyValue;\n\n  // Compute the key for each node.\n  // If multiple nodes have the same key, the duplicates are added to exit.\n  for (i = 0; i < groupLength; ++i) {\n    if (node = group[i]) {\n      keyValues[i] = keyValue = keyPrefix + key.call(node, node.__data__, i, group);\n      if (keyValue in nodeByKeyValue) {\n        exit[i] = node;\n      } else {\n        nodeByKeyValue[keyValue] = node;\n      }\n    }\n  }\n\n  // Compute the key for each datum.\n  // If there a node associated with this key, join and add it to update.\n  // If there is not (or the key is a duplicate), add it to enter.\n  for (i = 0; i < dataLength; ++i) {\n    keyValue = keyPrefix + key.call(parent, data[i], i, data);\n    if (node = nodeByKeyValue[keyValue]) {\n      update[i] = node;\n      node.__data__ = data[i];\n      nodeByKeyValue[keyValue] = null;\n    } else {\n      enter[i] = new EnterNode(parent, data[i]);\n    }\n  }\n\n  // Add any remaining nodes that were not bound to data to exit.\n  for (i = 0; i < groupLength; ++i) {\n    if ((node = group[i]) && (nodeByKeyValue[keyValues[i]] === node)) {\n      exit[i] = node;\n    }\n  }\n}\n\nexport default function(value, key) {\n  if (!value) {\n    data = new Array(this.size()), j = -1;\n    this.each(function(d) { data[++j] = d; });\n    return data;\n  }\n\n  var bind = key ? bindKey : bindIndex,\n      parents = this._parents,\n      groups = this._groups;\n\n  if (typeof value !== \"function\") value = constant(value);\n\n  for (var m = groups.length, update = new Array(m), enter = new Array(m), exit = new Array(m), j = 0; j < m; ++j) {\n    var parent = parents[j],\n        group = groups[j],\n        groupLength = group.length,\n        data = value.call(parent, parent && parent.__data__, j, parents),\n        dataLength = data.length,\n        enterGroup = enter[j] = new Array(dataLength),\n        updateGroup = update[j] = new Array(dataLength),\n        exitGroup = exit[j] = new Array(groupLength);\n\n    bind(parent, group, enterGroup, updateGroup, exitGroup, data, key);\n\n    // Now connect the enter nodes to their following update node, such that\n    // appendChild can insert the materialized enter node before this node,\n    // rather than at the end of the parent node.\n    for (var i0 = 0, i1 = 0, previous, next; i0 < dataLength; ++i0) {\n      if (previous = enterGroup[i0]) {\n        if (i0 >= i1) i1 = i0 + 1;\n        while (!(next = updateGroup[i1]) && ++i1 < dataLength);\n        previous._next = next || null;\n      }\n    }\n  }\n\n  update = new Selection(update, parents);\n  update._enter = enter;\n  update._exit = exit;\n  return update;\n}\n","import {Selection} from \"./index\";\n\nexport default function(compare) {\n  if (!compare) compare = ascending;\n\n  function compareNode(a, b) {\n    return a && b ? compare(a.__data__, b.__data__) : !a - !b;\n  }\n\n  for (var groups = this._groups, m = groups.length, sortgroups = new Array(m), j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, sortgroup = sortgroups[j] = new Array(n), node, i = 0; i < n; ++i) {\n      if (node = group[i]) {\n        sortgroup[i] = node;\n      }\n    }\n    sortgroup.sort(compareNode);\n  }\n\n  return new Selection(sortgroups, this._parents).order();\n}\n\nfunction ascending(a, b) {\n  return a < b ? -1 : a > b ? 1 : a >= b ? 0 : NaN;\n}\n","import namespace from \"../namespace\";\n\nfunction attrRemove(name) {\n  return function() {\n    this.removeAttribute(name);\n  };\n}\n\nfunction attrRemoveNS(fullname) {\n  return function() {\n    this.removeAttributeNS(fullname.space, fullname.local);\n  };\n}\n\nfunction attrConstant(name, value) {\n  return function() {\n    this.setAttribute(name, value);\n  };\n}\n\nfunction attrConstantNS(fullname, value) {\n  return function() {\n    this.setAttributeNS(fullname.space, fullname.local, value);\n  };\n}\n\nfunction attrFunction(name, value) {\n  return function() {\n    var v = value.apply(this, arguments);\n    if (v == null) this.removeAttribute(name);\n    else this.setAttribute(name, v);\n  };\n}\n\nfunction attrFunctionNS(fullname, value) {\n  return function() {\n    var v = value.apply(this, arguments);\n    if (v == null) this.removeAttributeNS(fullname.space, fullname.local);\n    else this.setAttributeNS(fullname.space, fullname.local, v);\n  };\n}\n\nexport default function(name, value) {\n  var fullname = namespace(name);\n\n  if (arguments.length < 2) {\n    var node = this.node();\n    return fullname.local\n        ? node.getAttributeNS(fullname.space, fullname.local)\n        : node.getAttribute(fullname);\n  }\n\n  return this.each((value == null\n      ? (fullname.local ? attrRemoveNS : attrRemove) : (typeof value === \"function\"\n      ? (fullname.local ? attrFunctionNS : attrFunction)\n      : (fullname.local ? attrConstantNS : attrConstant)))(fullname, value));\n}\n","export default function(node) {\n  return (node.ownerDocument && node.ownerDocument.defaultView) // node is a Node\n      || (node.document && node) // node is a Window\n      || node.defaultView; // node is a Document\n}\n","import defaultView from \"../window\";\n\nfunction styleRemove(name) {\n  return function() {\n    this.style.removeProperty(name);\n  };\n}\n\nfunction styleConstant(name, value, priority) {\n  return function() {\n    this.style.setProperty(name, value, priority);\n  };\n}\n\nfunction styleFunction(name, value, priority) {\n  return function() {\n    var v = value.apply(this, arguments);\n    if (v == null) this.style.removeProperty(name);\n    else this.style.setProperty(name, v, priority);\n  };\n}\n\nexport default function(name, value, priority) {\n  return arguments.length > 1\n      ? this.each((value == null\n            ? styleRemove : typeof value === \"function\"\n            ? styleFunction\n            : styleConstant)(name, value, priority == null ? \"\" : priority))\n      : styleValue(this.node(), name);\n}\n\nexport function styleValue(node, name) {\n  return node.style.getPropertyValue(name)\n      || defaultView(node).getComputedStyle(node, null).getPropertyValue(name);\n}\n","function classArray(string) {\n  return string.trim().split(/^|\\s+/);\n}\n\nfunction classList(node) {\n  return node.classList || new ClassList(node);\n}\n\nfunction ClassList(node) {\n  this._node = node;\n  this._names = classArray(node.getAttribute(\"class\") || \"\");\n}\n\nClassList.prototype = {\n  add: function(name) {\n    var i = this._names.indexOf(name);\n    if (i < 0) {\n      this._names.push(name);\n      this._node.setAttribute(\"class\", this._names.join(\" \"));\n    }\n  },\n  remove: function(name) {\n    var i = this._names.indexOf(name);\n    if (i >= 0) {\n      this._names.splice(i, 1);\n      this._node.setAttribute(\"class\", this._names.join(\" \"));\n    }\n  },\n  contains: function(name) {\n    return this._names.indexOf(name) >= 0;\n  }\n};\n\nfunction classedAdd(node, names) {\n  var list = classList(node), i = -1, n = names.length;\n  while (++i < n) list.add(names[i]);\n}\n\nfunction classedRemove(node, names) {\n  var list = classList(node), i = -1, n = names.length;\n  while (++i < n) list.remove(names[i]);\n}\n\nfunction classedTrue(names) {\n  return function() {\n    classedAdd(this, names);\n  };\n}\n\nfunction classedFalse(names) {\n  return function() {\n    classedRemove(this, names);\n  };\n}\n\nfunction classedFunction(names, value) {\n  return function() {\n    (value.apply(this, arguments) ? classedAdd : classedRemove)(this, names);\n  };\n}\n\nexport default function(name, value) {\n  var names = classArray(name + \"\");\n\n  if (arguments.length < 2) {\n    var list = classList(this.node()), i = -1, n = names.length;\n    while (++i < n) if (!list.contains(names[i])) return false;\n    return true;\n  }\n\n  return this.each((typeof value === \"function\"\n      ? classedFunction : value\n      ? classedTrue\n      : classedFalse)(names, value));\n}\n","function textRemove() {\n  this.textContent = \"\";\n}\n\nfunction textConstant(value) {\n  return function() {\n    this.textContent = value;\n  };\n}\n\nfunction textFunction(value) {\n  return function() {\n    var v = value.apply(this, arguments);\n    this.textContent = v == null ? \"\" : v;\n  };\n}\n\nexport default function(value) {\n  return arguments.length\n      ? this.each(value == null\n          ? textRemove : (typeof value === \"function\"\n          ? textFunction\n          : textConstant)(value))\n      : this.node().textContent;\n}\n","function htmlRemove() {\n  this.innerHTML = \"\";\n}\n\nfunction htmlConstant(value) {\n  return function() {\n    this.innerHTML = value;\n  };\n}\n\nfunction htmlFunction(value) {\n  return function() {\n    var v = value.apply(this, arguments);\n    this.innerHTML = v == null ? \"\" : v;\n  };\n}\n\nexport default function(value) {\n  return arguments.length\n      ? this.each(value == null\n          ? htmlRemove : (typeof value === \"function\"\n          ? htmlFunction\n          : htmlConstant)(value))\n      : this.node().innerHTML;\n}\n","function raise() {\n  if (this.nextSibling) this.parentNode.appendChild(this);\n}\n\nexport default function() {\n  return this.each(raise);\n}\n","function lower() {\n  if (this.previousSibling) this.parentNode.insertBefore(this, this.parentNode.firstChild);\n}\n\nexport default function() {\n  return this.each(lower);\n}\n","import creator from \"../creator\";\nimport selector from \"../selector\";\n\nfunction constantNull() {\n  return null;\n}\n\nexport default function(name, before) {\n  var create = typeof name === \"function\" ? name : creator(name),\n      select = before == null ? constantNull : typeof before === \"function\" ? before : selector(before);\n  return this.select(function() {\n    return this.insertBefore(create.apply(this, arguments), select.apply(this, arguments) || null);\n  });\n}\n","function remove() {\n  var parent = this.parentNode;\n  if (parent) parent.removeChild(this);\n}\n\nexport default function() {\n  return this.each(remove);\n}\n","function selection_cloneShallow() {\n  return this.parentNode.insertBefore(this.cloneNode(false), this.nextSibling);\n}\n\nfunction selection_cloneDeep() {\n  return this.parentNode.insertBefore(this.cloneNode(true), this.nextSibling);\n}\n\nexport default function(deep) {\n  return this.select(deep ? selection_cloneDeep : selection_cloneShallow);\n}\n","var filterEvents = {};\n\nexport var event = null;\n\nif (typeof document !== \"undefined\") {\n  var element = document.documentElement;\n  if (!(\"onmouseenter\" in element)) {\n    filterEvents = {mouseenter: \"mouseover\", mouseleave: \"mouseout\"};\n  }\n}\n\nfunction filterContextListener(listener, index, group) {\n  listener = contextListener(listener, index, group);\n  return function(event) {\n    var related = event.relatedTarget;\n    if (!related || (related !== this && !(related.compareDocumentPosition(this) & 8))) {\n      listener.call(this, event);\n    }\n  };\n}\n\nfunction contextListener(listener, index, group) {\n  return function(event1) {\n    var event0 = event; // Events can be reentrant (e.g., focus).\n    event = event1;\n    try {\n      listener.call(this, this.__data__, index, group);\n    } finally {\n      event = event0;\n    }\n  };\n}\n\nfunction parseTypenames(typenames) {\n  return typenames.trim().split(/^|\\s+/).map(function(t) {\n    var name = \"\", i = t.indexOf(\".\");\n    if (i >= 0) name = t.slice(i + 1), t = t.slice(0, i);\n    return {type: t, name: name};\n  });\n}\n\nfunction onRemove(typename) {\n  return function() {\n    var on = this.__on;\n    if (!on) return;\n    for (var j = 0, i = -1, m = on.length, o; j < m; ++j) {\n      if (o = on[j], (!typename.type || o.type === typename.type) && o.name === typename.name) {\n        this.removeEventListener(o.type, o.listener, o.capture);\n      } else {\n        on[++i] = o;\n      }\n    }\n    if (++i) on.length = i;\n    else delete this.__on;\n  };\n}\n\nfunction onAdd(typename, value, capture) {\n  var wrap = filterEvents.hasOwnProperty(typename.type) ? filterContextListener : contextListener;\n  return function(d, i, group) {\n    var on = this.__on, o, listener = wrap(value, i, group);\n    if (on) for (var j = 0, m = on.length; j < m; ++j) {\n      if ((o = on[j]).type === typename.type && o.name === typename.name) {\n        this.removeEventListener(o.type, o.listener, o.capture);\n        this.addEventListener(o.type, o.listener = listener, o.capture = capture);\n        o.value = value;\n        return;\n      }\n    }\n    this.addEventListener(typename.type, listener, capture);\n    o = {type: typename.type, name: typename.name, value: value, listener: listener, capture: capture};\n    if (!on) this.__on = [o];\n    else on.push(o);\n  };\n}\n\nexport default function(typename, value, capture) {\n  var typenames = parseTypenames(typename + \"\"), i, n = typenames.length, t;\n\n  if (arguments.length < 2) {\n    var on = this.node().__on;\n    if (on) for (var j = 0, m = on.length, o; j < m; ++j) {\n      for (i = 0, o = on[j]; i < n; ++i) {\n        if ((t = typenames[i]).type === o.type && t.name === o.name) {\n          return o.value;\n        }\n      }\n    }\n    return;\n  }\n\n  on = value ? onAdd : onRemove;\n  if (capture == null) capture = false;\n  for (i = 0; i < n; ++i) this.each(on(typenames[i], value, capture));\n  return this;\n}\n\nexport function customEvent(event1, listener, that, args) {\n  var event0 = event;\n  event1.sourceEvent = event;\n  event = event1;\n  try {\n    return listener.apply(that, args);\n  } finally {\n    event = event0;\n  }\n}\n","import defaultView from \"../window\";\n\nfunction dispatchEvent(node, type, params) {\n  var window = defaultView(node),\n      event = window.CustomEvent;\n\n  if (typeof event === \"function\") {\n    event = new event(type, params);\n  } else {\n    event = window.document.createEvent(\"Event\");\n    if (params) event.initEvent(type, params.bubbles, params.cancelable), event.detail = params.detail;\n    else event.initEvent(type, false, false);\n  }\n\n  node.dispatchEvent(event);\n}\n\nfunction dispatchConstant(type, params) {\n  return function() {\n    return dispatchEvent(this, type, params);\n  };\n}\n\nfunction dispatchFunction(type, params) {\n  return function() {\n    return dispatchEvent(this, type, params.apply(this, arguments));\n  };\n}\n\nexport default function(type, params) {\n  return this.each((typeof params === \"function\"\n      ? dispatchFunction\n      : dispatchConstant)(type, params));\n}\n","import selection_select from \"./select\";\nimport selection_selectAll from \"./selectAll\";\nimport selection_filter from \"./filter\";\nimport selection_data from \"./data\";\nimport selection_enter from \"./enter\";\nimport selection_exit from \"./exit\";\nimport selection_merge from \"./merge\";\nimport selection_order from \"./order\";\nimport selection_sort from \"./sort\";\nimport selection_call from \"./call\";\nimport selection_nodes from \"./nodes\";\nimport selection_node from \"./node\";\nimport selection_size from \"./size\";\nimport selection_empty from \"./empty\";\nimport selection_each from \"./each\";\nimport selection_attr from \"./attr\";\nimport selection_style from \"./style\";\nimport selection_property from \"./property\";\nimport selection_classed from \"./classed\";\nimport selection_text from \"./text\";\nimport selection_html from \"./html\";\nimport selection_raise from \"./raise\";\nimport selection_lower from \"./lower\";\nimport selection_append from \"./append\";\nimport selection_insert from \"./insert\";\nimport selection_remove from \"./remove\";\nimport selection_clone from \"./clone\";\nimport selection_datum from \"./datum\";\nimport selection_on from \"./on\";\nimport selection_dispatch from \"./dispatch\";\n\nexport var root = [null];\n\nexport function Selection(groups, parents) {\n  this._groups = groups;\n  this._parents = parents;\n}\n\nfunction selection() {\n  return new Selection([[document.documentElement]], root);\n}\n\nSelection.prototype = selection.prototype = {\n  constructor: Selection,\n  select: selection_select,\n  selectAll: selection_selectAll,\n  filter: selection_filter,\n  data: selection_data,\n  enter: selection_enter,\n  exit: selection_exit,\n  merge: selection_merge,\n  order: selection_order,\n  sort: selection_sort,\n  call: selection_call,\n  nodes: selection_nodes,\n  node: selection_node,\n  size: selection_size,\n  empty: selection_empty,\n  each: selection_each,\n  attr: selection_attr,\n  style: selection_style,\n  property: selection_property,\n  classed: selection_classed,\n  text: selection_text,\n  html: selection_html,\n  raise: selection_raise,\n  lower: selection_lower,\n  append: selection_append,\n  insert: selection_insert,\n  remove: selection_remove,\n  clone: selection_clone,\n  datum: selection_datum,\n  on: selection_on,\n  dispatch: selection_dispatch\n};\n\nexport default selection;\n","import {Selection} from \"./index\";\nimport selector from \"../selector\";\n\nexport default function(select) {\n  if (typeof select !== \"function\") select = selector(select);\n\n  for (var groups = this._groups, m = groups.length, subgroups = new Array(m), j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, subgroup = subgroups[j] = new Array(n), node, subnode, i = 0; i < n; ++i) {\n      if ((node = group[i]) && (subnode = select.call(node, node.__data__, i, group))) {\n        if (\"__data__\" in node) subnode.__data__ = node.__data__;\n        subgroup[i] = subnode;\n      }\n    }\n  }\n\n  return new Selection(subgroups, this._parents);\n}\n","import {Selection} from \"./index\";\nimport selectorAll from \"../selectorAll\";\n\nexport default function(select) {\n  if (typeof select !== \"function\") select = selectorAll(select);\n\n  for (var groups = this._groups, m = groups.length, subgroups = [], parents = [], j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, node, i = 0; i < n; ++i) {\n      if (node = group[i]) {\n        subgroups.push(select.call(node, node.__data__, i, group));\n        parents.push(node);\n      }\n    }\n  }\n\n  return new Selection(subgroups, parents);\n}\n","import {Selection} from \"./index\";\nimport matcher from \"../matcher\";\n\nexport default function(match) {\n  if (typeof match !== \"function\") match = matcher(match);\n\n  for (var groups = this._groups, m = groups.length, subgroups = new Array(m), j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, subgroup = subgroups[j] = [], node, i = 0; i < n; ++i) {\n      if ((node = group[i]) && match.call(node, node.__data__, i, group)) {\n        subgroup.push(node);\n      }\n    }\n  }\n\n  return new Selection(subgroups, this._parents);\n}\n","import sparse from \"./sparse\";\nimport {Selection} from \"./index\";\n\nexport default function() {\n  return new Selection(this._exit || this._groups.map(sparse), this._parents);\n}\n","import {Selection} from \"./index\";\n\nexport default function(selection) {\n\n  for (var groups0 = this._groups, groups1 = selection._groups, m0 = groups0.length, m1 = groups1.length, m = Math.min(m0, m1), merges = new Array(m0), j = 0; j < m; ++j) {\n    for (var group0 = groups0[j], group1 = groups1[j], n = group0.length, merge = merges[j] = new Array(n), node, i = 0; i < n; ++i) {\n      if (node = group0[i] || group1[i]) {\n        merge[i] = node;\n      }\n    }\n  }\n\n  for (; j < m0; ++j) {\n    merges[j] = groups0[j];\n  }\n\n  return new Selection(merges, this._parents);\n}\n","export default function() {\n\n  for (var groups = this._groups, j = -1, m = groups.length; ++j < m;) {\n    for (var group = groups[j], i = group.length - 1, next = group[i], node; --i >= 0;) {\n      if (node = group[i]) {\n        if (next && next !== node.nextSibling) next.parentNode.insertBefore(node, next);\n        next = node;\n      }\n    }\n  }\n\n  return this;\n}\n","export default function() {\n  var callback = arguments[0];\n  arguments[0] = this;\n  callback.apply(null, arguments);\n  return this;\n}\n","export default function() {\n  var nodes = new Array(this.size()), i = -1;\n  this.each(function() { nodes[++i] = this; });\n  return nodes;\n}\n","export default function() {\n\n  for (var groups = this._groups, j = 0, m = groups.length; j < m; ++j) {\n    for (var group = groups[j], i = 0, n = group.length; i < n; ++i) {\n      var node = group[i];\n      if (node) return node;\n    }\n  }\n\n  return null;\n}\n","export default function() {\n  var size = 0;\n  this.each(function() { ++size; });\n  return size;\n}\n","export default function() {\n  return !this.node();\n}\n","export default function(callback) {\n\n  for (var groups = this._groups, j = 0, m = groups.length; j < m; ++j) {\n    for (var group = groups[j], i = 0, n = group.length, node; i < n; ++i) {\n      if (node = group[i]) callback.call(node, node.__data__, i, group);\n    }\n  }\n\n  return this;\n}\n","function propertyRemove(name) {\n  return function() {\n    delete this[name];\n  };\n}\n\nfunction propertyConstant(name, value) {\n  return function() {\n    this[name] = value;\n  };\n}\n\nfunction propertyFunction(name, value) {\n  return function() {\n    var v = value.apply(this, arguments);\n    if (v == null) delete this[name];\n    else this[name] = v;\n  };\n}\n\nexport default function(name, value) {\n  return arguments.length > 1\n      ? this.each((value == null\n          ? propertyRemove : typeof value === \"function\"\n          ? propertyFunction\n          : propertyConstant)(name, value))\n      : this.node()[name];\n}\n","import creator from \"../creator\";\n\nexport default function(name) {\n  var create = typeof name === \"function\" ? name : creator(name);\n  return this.select(function() {\n    return this.appendChild(create.apply(this, arguments));\n  });\n}\n","export default function(value) {\n  return arguments.length\n      ? this.property(\"__data__\", value)\n      : this.node().__data__;\n}\n","import {Selection, root} from \"./selection/index\";\n\nexport default function(selector) {\n  return typeof selector === \"string\"\n      ? new Selection([[document.querySelector(selector)]], [document.documentElement])\n      : new Selection([[selector]], root);\n}\n","var nextId = 0;\n\nexport default function local() {\n  return new Local;\n}\n\nfunction Local() {\n  this._ = \"@\" + (++nextId).toString(36);\n}\n\nLocal.prototype = local.prototype = {\n  constructor: Local,\n  get: function(node) {\n    var id = this._;\n    while (!(id in node)) if (!(node = node.parentNode)) return;\n    return node[id];\n  },\n  set: function(node, value) {\n    return node[this._] = value;\n  },\n  remove: function(node) {\n    return this._ in node && delete node[this._];\n  },\n  toString: function() {\n    return this._;\n  }\n};\n","import {event} from \"./selection/on\";\n\nexport default function() {\n  var current = event, source;\n  while (source = current.sourceEvent) current = source;\n  return current;\n}\n","export default function(node, event) {\n  var svg = node.ownerSVGElement || node;\n\n  if (svg.createSVGPoint) {\n    var point = svg.createSVGPoint();\n    point.x = event.clientX, point.y = event.clientY;\n    point = point.matrixTransform(node.getScreenCTM().inverse());\n    return [point.x, point.y];\n  }\n\n  var rect = node.getBoundingClientRect();\n  return [event.clientX - rect.left - node.clientLeft, event.clientY - rect.top - node.clientTop];\n}\n","import sourceEvent from \"./sourceEvent\";\nimport point from \"./point\";\n\nexport default function(node) {\n  var event = sourceEvent();\n  if (event.changedTouches) event = event.changedTouches[0];\n  return point(node, event);\n}\n","import sourceEvent from \"./sourceEvent\";\nimport point from \"./point\";\n\nexport default function(node, touches, identifier) {\n  if (arguments.length < 3) identifier = touches, touches = sourceEvent().changedTouches;\n\n  for (var i = 0, n = touches ? touches.length : 0, touch; i < n; ++i) {\n    if ((touch = touches[i]).identifier === identifier) {\n      return point(node, touch);\n    }\n  }\n\n  return null;\n}\n","var noop = {value: function() {}};\n\nfunction dispatch() {\n  for (var i = 0, n = arguments.length, _ = {}, t; i < n; ++i) {\n    if (!(t = arguments[i] + \"\") || (t in _)) throw new Error(\"illegal type: \" + t);\n    _[t] = [];\n  }\n  return new Dispatch(_);\n}\n\nfunction Dispatch(_) {\n  this._ = _;\n}\n\nfunction parseTypenames(typenames, types) {\n  return typenames.trim().split(/^|\\s+/).map(function(t) {\n    var name = \"\", i = t.indexOf(\".\");\n    if (i >= 0) name = t.slice(i + 1), t = t.slice(0, i);\n    if (t && !types.hasOwnProperty(t)) throw new Error(\"unknown type: \" + t);\n    return {type: t, name: name};\n  });\n}\n\nDispatch.prototype = dispatch.prototype = {\n  constructor: Dispatch,\n  on: function(typename, callback) {\n    var _ = this._,\n        T = parseTypenames(typename + \"\", _),\n        t,\n        i = -1,\n        n = T.length;\n\n    // If no callback was specified, return the callback of the given type and name.\n    if (arguments.length < 2) {\n      while (++i < n) if ((t = (typename = T[i]).type) && (t = get(_[t], typename.name))) return t;\n      return;\n    }\n\n    // If a type was specified, set the callback for the given type and name.\n    // Otherwise, if a null callback was specified, remove callbacks of the given name.\n    if (callback != null && typeof callback !== \"function\") throw new Error(\"invalid callback: \" + callback);\n    while (++i < n) {\n      if (t = (typename = T[i]).type) _[t] = set(_[t], typename.name, callback);\n      else if (callback == null) for (t in _) _[t] = set(_[t], typename.name, null);\n    }\n\n    return this;\n  },\n  copy: function() {\n    var copy = {}, _ = this._;\n    for (var t in _) copy[t] = _[t].slice();\n    return new Dispatch(copy);\n  },\n  call: function(type, that) {\n    if ((n = arguments.length - 2) > 0) for (var args = new Array(n), i = 0, n, t; i < n; ++i) args[i] = arguments[i + 2];\n    if (!this._.hasOwnProperty(type)) throw new Error(\"unknown type: \" + type);\n    for (t = this._[type], i = 0, n = t.length; i < n; ++i) t[i].value.apply(that, args);\n  },\n  apply: function(type, that, args) {\n    if (!this._.hasOwnProperty(type)) throw new Error(\"unknown type: \" + type);\n    for (var t = this._[type], i = 0, n = t.length; i < n; ++i) t[i].value.apply(that, args);\n  }\n};\n\nfunction get(type, name) {\n  for (var i = 0, n = type.length, c; i < n; ++i) {\n    if ((c = type[i]).name === name) {\n      return c.value;\n    }\n  }\n}\n\nfunction set(type, name, callback) {\n  for (var i = 0, n = type.length; i < n; ++i) {\n    if (type[i].name === name) {\n      type[i] = noop, type = type.slice(0, i).concat(type.slice(i + 1));\n      break;\n    }\n  }\n  if (callback != null) type.push({name: name, value: callback});\n  return type;\n}\n\nexport default dispatch;\n","import {event} from \"d3-selection\";\n\nexport function nopropagation() {\n  event.stopImmediatePropagation();\n}\n\nexport default function() {\n  event.preventDefault();\n  event.stopImmediatePropagation();\n}\n","import {select} from \"d3-selection\";\nimport noevent from \"./noevent\";\n\nexport default function(view) {\n  var root = view.document.documentElement,\n      selection = select(view).on(\"dragstart.drag\", noevent, true);\n  if (\"onselectstart\" in root) {\n    selection.on(\"selectstart.drag\", noevent, true);\n  } else {\n    root.__noselect = root.style.MozUserSelect;\n    root.style.MozUserSelect = \"none\";\n  }\n}\n\nexport function yesdrag(view, noclick) {\n  var root = view.document.documentElement,\n      selection = select(view).on(\"dragstart.drag\", null);\n  if (noclick) {\n    selection.on(\"click.drag\", noevent, true);\n    setTimeout(function() { selection.on(\"click.drag\", null); }, 0);\n  }\n  if (\"onselectstart\" in root) {\n    selection.on(\"selectstart.drag\", null);\n  } else {\n    root.style.MozUserSelect = root.__noselect;\n    delete root.__noselect;\n  }\n}\n","export default function(x) {\n  return function() {\n    return x;\n  };\n}\n","export default function DragEvent(target, type, subject, id, active, x, y, dx, dy, dispatch) {\n  this.target = target;\n  this.type = type;\n  this.subject = subject;\n  this.identifier = id;\n  this.active = active;\n  this.x = x;\n  this.y = y;\n  this.dx = dx;\n  this.dy = dy;\n  this._ = dispatch;\n}\n\nDragEvent.prototype.on = function() {\n  var value = this._.on.apply(this._, arguments);\n  return value === this._ ? this : value;\n};\n","import {dispatch} from \"d3-dispatch\";\nimport {event, customEvent, select, mouse, touch} from \"d3-selection\";\nimport nodrag, {yesdrag} from \"./nodrag\";\nimport noevent, {nopropagation} from \"./noevent\";\nimport constant from \"./constant\";\nimport DragEvent from \"./event\";\n\n// Ignore right-click, since that should open the context menu.\nfunction defaultFilter() {\n  return !event.button;\n}\n\nfunction defaultContainer() {\n  return this.parentNode;\n}\n\nfunction defaultSubject(d) {\n  return d == null ? {x: event.x, y: event.y} : d;\n}\n\nfunction defaultTouchable() {\n  return \"ontouchstart\" in this;\n}\n\nexport default function() {\n  var filter = defaultFilter,\n      container = defaultContainer,\n      subject = defaultSubject,\n      touchable = defaultTouchable,\n      gestures = {},\n      listeners = dispatch(\"start\", \"drag\", \"end\"),\n      active = 0,\n      mousedownx,\n      mousedowny,\n      mousemoving,\n      touchending,\n      clickDistance2 = 0;\n\n  function drag(selection) {\n    selection\n        .on(\"mousedown.drag\", mousedowned)\n      .filter(touchable)\n        .on(\"touchstart.drag\", touchstarted)\n        .on(\"touchmove.drag\", touchmoved)\n        .on(\"touchend.drag touchcancel.drag\", touchended)\n        .style(\"touch-action\", \"none\")\n        .style(\"-webkit-tap-highlight-color\", \"rgba(0,0,0,0)\");\n  }\n\n  function mousedowned() {\n    if (touchending || !filter.apply(this, arguments)) return;\n    var gesture = beforestart(\"mouse\", container.apply(this, arguments), mouse, this, arguments);\n    if (!gesture) return;\n    select(event.view).on(\"mousemove.drag\", mousemoved, true).on(\"mouseup.drag\", mouseupped, true);\n    nodrag(event.view);\n    nopropagation();\n    mousemoving = false;\n    mousedownx = event.clientX;\n    mousedowny = event.clientY;\n    gesture(\"start\");\n  }\n\n  function mousemoved() {\n    noevent();\n    if (!mousemoving) {\n      var dx = event.clientX - mousedownx, dy = event.clientY - mousedowny;\n      mousemoving = dx * dx + dy * dy > clickDistance2;\n    }\n    gestures.mouse(\"drag\");\n  }\n\n  function mouseupped() {\n    select(event.view).on(\"mousemove.drag mouseup.drag\", null);\n    yesdrag(event.view, mousemoving);\n    noevent();\n    gestures.mouse(\"end\");\n  }\n\n  function touchstarted() {\n    if (!filter.apply(this, arguments)) return;\n    var touches = event.changedTouches,\n        c = container.apply(this, arguments),\n        n = touches.length, i, gesture;\n\n    for (i = 0; i < n; ++i) {\n      if (gesture = beforestart(touches[i].identifier, c, touch, this, arguments)) {\n        nopropagation();\n        gesture(\"start\");\n      }\n    }\n  }\n\n  function touchmoved() {\n    var touches = event.changedTouches,\n        n = touches.length, i, gesture;\n\n    for (i = 0; i < n; ++i) {\n      if (gesture = gestures[touches[i].identifier]) {\n        noevent();\n        gesture(\"drag\");\n      }\n    }\n  }\n\n  function touchended() {\n    var touches = event.changedTouches,\n        n = touches.length, i, gesture;\n\n    if (touchending) clearTimeout(touchending);\n    touchending = setTimeout(function() { touchending = null; }, 500); // Ghost clicks are delayed!\n    for (i = 0; i < n; ++i) {\n      if (gesture = gestures[touches[i].identifier]) {\n        nopropagation();\n        gesture(\"end\");\n      }\n    }\n  }\n\n  function beforestart(id, container, point, that, args) {\n    var p = point(container, id), s, dx, dy,\n        sublisteners = listeners.copy();\n\n    if (!customEvent(new DragEvent(drag, \"beforestart\", s, id, active, p[0], p[1], 0, 0, sublisteners), function() {\n      if ((event.subject = s = subject.apply(that, args)) == null) return false;\n      dx = s.x - p[0] || 0;\n      dy = s.y - p[1] || 0;\n      return true;\n    })) return;\n\n    return function gesture(type) {\n      var p0 = p, n;\n      switch (type) {\n        case \"start\": gestures[id] = gesture, n = active++; break;\n        case \"end\": delete gestures[id], --active; // nobreak\n        case \"drag\": p = point(container, id), n = active; break;\n      }\n      customEvent(new DragEvent(drag, type, s, id, n, p[0] + dx, p[1] + dy, p[0] - p0[0], p[1] - p0[1], sublisteners), sublisteners.apply, sublisteners, [type, that, args]);\n    };\n  }\n\n  drag.filter = function(_) {\n    return arguments.length ? (filter = typeof _ === \"function\" ? _ : constant(!!_), drag) : filter;\n  };\n\n  drag.container = function(_) {\n    return arguments.length ? (container = typeof _ === \"function\" ? _ : constant(_), drag) : container;\n  };\n\n  drag.subject = function(_) {\n    return arguments.length ? (subject = typeof _ === \"function\" ? _ : constant(_), drag) : subject;\n  };\n\n  drag.touchable = function(_) {\n    return arguments.length ? (touchable = typeof _ === \"function\" ? _ : constant(!!_), drag) : touchable;\n  };\n\n  drag.on = function() {\n    var value = listeners.on.apply(listeners, arguments);\n    return value === listeners ? drag : value;\n  };\n\n  drag.clickDistance = function(_) {\n    return arguments.length ? (clickDistance2 = (_ = +_) * _, drag) : Math.sqrt(clickDistance2);\n  };\n\n  return drag;\n}\n","var frame = 0, // is an animation frame pending?\n    timeout = 0, // is a timeout pending?\n    interval = 0, // are any timers active?\n    pokeDelay = 1000, // how frequently we check for clock skew\n    taskHead,\n    taskTail,\n    clockLast = 0,\n    clockNow = 0,\n    clockSkew = 0,\n    clock = typeof performance === \"object\" && performance.now ? performance : Date,\n    setFrame = typeof window === \"object\" && window.requestAnimationFrame ? window.requestAnimationFrame.bind(window) : function(f) { setTimeout(f, 17); };\n\nexport function now() {\n  return clockNow || (setFrame(clearNow), clockNow = clock.now() + clockSkew);\n}\n\nfunction clearNow() {\n  clockNow = 0;\n}\n\nexport function Timer() {\n  this._call =\n  this._time =\n  this._next = null;\n}\n\nTimer.prototype = timer.prototype = {\n  constructor: Timer,\n  restart: function(callback, delay, time) {\n    if (typeof callback !== \"function\") throw new TypeError(\"callback is not a function\");\n    time = (time == null ? now() : +time) + (delay == null ? 0 : +delay);\n    if (!this._next && taskTail !== this) {\n      if (taskTail) taskTail._next = this;\n      else taskHead = this;\n      taskTail = this;\n    }\n    this._call = callback;\n    this._time = time;\n    sleep();\n  },\n  stop: function() {\n    if (this._call) {\n      this._call = null;\n      this._time = Infinity;\n      sleep();\n    }\n  }\n};\n\nexport function timer(callback, delay, time) {\n  var t = new Timer;\n  t.restart(callback, delay, time);\n  return t;\n}\n\nexport function timerFlush() {\n  now(); // Get the current time, if not already set.\n  ++frame; // Pretend we’ve set an alarm, if we haven’t already.\n  var t = taskHead, e;\n  while (t) {\n    if ((e = clockNow - t._time) >= 0) t._call.call(null, e);\n    t = t._next;\n  }\n  --frame;\n}\n\nfunction wake() {\n  clockNow = (clockLast = clock.now()) + clockSkew;\n  frame = timeout = 0;\n  try {\n    timerFlush();\n  } finally {\n    frame = 0;\n    nap();\n    clockNow = 0;\n  }\n}\n\nfunction poke() {\n  var now = clock.now(), delay = now - clockLast;\n  if (delay > pokeDelay) clockSkew -= delay, clockLast = now;\n}\n\nfunction nap() {\n  var t0, t1 = taskHead, t2, time = Infinity;\n  while (t1) {\n    if (t1._call) {\n      if (time > t1._time) time = t1._time;\n      t0 = t1, t1 = t1._next;\n    } else {\n      t2 = t1._next, t1._next = null;\n      t1 = t0 ? t0._next = t2 : taskHead = t2;\n    }\n  }\n  taskTail = t0;\n  sleep(time);\n}\n\nfunction sleep(time) {\n  if (frame) return; // Soonest alarm already set, or will be.\n  if (timeout) timeout = clearTimeout(timeout);\n  var delay = time - clockNow; // Strictly less than if we recomputed clockNow.\n  if (delay > 24) {\n    if (time < Infinity) timeout = setTimeout(wake, time - clock.now() - clockSkew);\n    if (interval) interval = clearInterval(interval);\n  } else {\n    if (!interval) clockLast = clock.now(), interval = setInterval(poke, pokeDelay);\n    frame = 1, setFrame(wake);\n  }\n}\n","import {Timer} from \"./timer\";\n\nexport default function(callback, delay, time) {\n  var t = new Timer;\n  delay = delay == null ? 0 : +delay;\n  t.restart(function(elapsed) {\n    t.stop();\n    callback(elapsed + delay);\n  }, delay, time);\n  return t;\n}\n","import {dispatch} from \"d3-dispatch\";\nimport {timer, timeout} from \"d3-timer\";\n\nvar emptyOn = dispatch(\"start\", \"end\", \"interrupt\");\nvar emptyTween = [];\n\nexport var CREATED = 0;\nexport var SCHEDULED = 1;\nexport var STARTING = 2;\nexport var STARTED = 3;\nexport var RUNNING = 4;\nexport var ENDING = 5;\nexport var ENDED = 6;\n\nexport default function(node, name, id, index, group, timing) {\n  var schedules = node.__transition;\n  if (!schedules) node.__transition = {};\n  else if (id in schedules) return;\n  create(node, id, {\n    name: name,\n    index: index, // For context during callback.\n    group: group, // For context during callback.\n    on: emptyOn,\n    tween: emptyTween,\n    time: timing.time,\n    delay: timing.delay,\n    duration: timing.duration,\n    ease: timing.ease,\n    timer: null,\n    state: CREATED\n  });\n}\n\nexport function init(node, id) {\n  var schedule = get(node, id);\n  if (schedule.state > CREATED) throw new Error(\"too late; already scheduled\");\n  return schedule;\n}\n\nexport function set(node, id) {\n  var schedule = get(node, id);\n  if (schedule.state > STARTING) throw new Error(\"too late; already started\");\n  return schedule;\n}\n\nexport function get(node, id) {\n  var schedule = node.__transition;\n  if (!schedule || !(schedule = schedule[id])) throw new Error(\"transition not found\");\n  return schedule;\n}\n\nfunction create(node, id, self) {\n  var schedules = node.__transition,\n      tween;\n\n  // Initialize the self timer when the transition is created.\n  // Note the actual delay is not known until the first callback!\n  schedules[id] = self;\n  self.timer = timer(schedule, 0, self.time);\n\n  function schedule(elapsed) {\n    self.state = SCHEDULED;\n    self.timer.restart(start, self.delay, self.time);\n\n    // If the elapsed delay is less than our first sleep, start immediately.\n    if (self.delay <= elapsed) start(elapsed - self.delay);\n  }\n\n  function start(elapsed) {\n    var i, j, n, o;\n\n    // If the state is not SCHEDULED, then we previously errored on start.\n    if (self.state !== SCHEDULED) return stop();\n\n    for (i in schedules) {\n      o = schedules[i];\n      if (o.name !== self.name) continue;\n\n      // While this element already has a starting transition during this frame,\n      // defer starting an interrupting transition until that transition has a\n      // chance to tick (and possibly end); see d3/d3-transition#54!\n      if (o.state === STARTED) return timeout(start);\n\n      // Interrupt the active transition, if any.\n      // Dispatch the interrupt event.\n      if (o.state === RUNNING) {\n        o.state = ENDED;\n        o.timer.stop();\n        o.on.call(\"interrupt\", node, node.__data__, o.index, o.group);\n        delete schedules[i];\n      }\n\n      // Cancel any pre-empted transitions. No interrupt event is dispatched\n      // because the cancelled transitions never started. Note that this also\n      // removes this transition from the pending list!\n      else if (+i < id) {\n        o.state = ENDED;\n        o.timer.stop();\n        delete schedules[i];\n      }\n    }\n\n    // Defer the first tick to end of the current frame; see d3/d3#1576.\n    // Note the transition may be canceled after start and before the first tick!\n    // Note this must be scheduled before the start event; see d3/d3-transition#16!\n    // Assuming this is successful, subsequent callbacks go straight to tick.\n    timeout(function() {\n      if (self.state === STARTED) {\n        self.state = RUNNING;\n        self.timer.restart(tick, self.delay, self.time);\n        tick(elapsed);\n      }\n    });\n\n    // Dispatch the start event.\n    // Note this must be done before the tween are initialized.\n    self.state = STARTING;\n    self.on.call(\"start\", node, node.__data__, self.index, self.group);\n    if (self.state !== STARTING) return; // interrupted\n    self.state = STARTED;\n\n    // Initialize the tween, deleting null tween.\n    tween = new Array(n = self.tween.length);\n    for (i = 0, j = -1; i < n; ++i) {\n      if (o = self.tween[i].value.call(node, node.__data__, self.index, self.group)) {\n        tween[++j] = o;\n      }\n    }\n    tween.length = j + 1;\n  }\n\n  function tick(elapsed) {\n    var t = elapsed < self.duration ? self.ease.call(null, elapsed / self.duration) : (self.timer.restart(stop), self.state = ENDING, 1),\n        i = -1,\n        n = tween.length;\n\n    while (++i < n) {\n      tween[i].call(null, t);\n    }\n\n    // Dispatch the end event.\n    if (self.state === ENDING) {\n      self.on.call(\"end\", node, node.__data__, self.index, self.group);\n      stop();\n    }\n  }\n\n  function stop() {\n    self.state = ENDED;\n    self.timer.stop();\n    delete schedules[id];\n    for (var i in schedules) return; // eslint-disable-line no-unused-vars\n    delete node.__transition;\n  }\n}\n","import {get, set} from \"./schedule\";\n\nfunction tweenRemove(id, name) {\n  var tween0, tween1;\n  return function() {\n    var schedule = set(this, id),\n        tween = schedule.tween;\n\n    // If this node shared tween with the previous node,\n    // just assign the updated shared tween and we’re done!\n    // Otherwise, copy-on-write.\n    if (tween !== tween0) {\n      tween1 = tween0 = tween;\n      for (var i = 0, n = tween1.length; i < n; ++i) {\n        if (tween1[i].name === name) {\n          tween1 = tween1.slice();\n          tween1.splice(i, 1);\n          break;\n        }\n      }\n    }\n\n    schedule.tween = tween1;\n  };\n}\n\nfunction tweenFunction(id, name, value) {\n  var tween0, tween1;\n  if (typeof value !== \"function\") throw new Error;\n  return function() {\n    var schedule = set(this, id),\n        tween = schedule.tween;\n\n    // If this node shared tween with the previous node,\n    // just assign the updated shared tween and we’re done!\n    // Otherwise, copy-on-write.\n    if (tween !== tween0) {\n      tween1 = (tween0 = tween).slice();\n      for (var t = {name: name, value: value}, i = 0, n = tween1.length; i < n; ++i) {\n        if (tween1[i].name === name) {\n          tween1[i] = t;\n          break;\n        }\n      }\n      if (i === n) tween1.push(t);\n    }\n\n    schedule.tween = tween1;\n  };\n}\n\nexport default function(name, value) {\n  var id = this._id;\n\n  name += \"\";\n\n  if (arguments.length < 2) {\n    var tween = get(this.node(), id).tween;\n    for (var i = 0, n = tween.length, t; i < n; ++i) {\n      if ((t = tween[i]).name === name) {\n        return t.value;\n      }\n    }\n    return null;\n  }\n\n  return this.each((value == null ? tweenRemove : tweenFunction)(id, name, value));\n}\n\nexport function tweenValue(transition, name, value) {\n  var id = transition._id;\n\n  transition.each(function() {\n    var schedule = set(this, id);\n    (schedule.value || (schedule.value = {}))[name] = value.apply(this, arguments);\n  });\n\n  return function(node) {\n    return get(node, id).value[name];\n  };\n}\n","import {color} from \"d3-color\";\nimport {interpolateNumber, interpolateRgb, interpolateString} from \"d3-interpolate\";\n\nexport default function(a, b) {\n  var c;\n  return (typeof b === \"number\" ? interpolateNumber\n      : b instanceof color ? interpolateRgb\n      : (c = color(b)) ? (b = c, interpolateRgb)\n      : interpolateString)(a, b);\n}\n","function removeFunction(id) {\n  return function() {\n    var parent = this.parentNode;\n    for (var i in this.__transition) if (+i !== id) return;\n    if (parent) parent.removeChild(this);\n  };\n}\n\nexport default function() {\n  return this.on(\"end.remove\", removeFunction(this._id));\n}\n","import {selection} from \"d3-selection\";\n\nvar Selection = selection.prototype.constructor;\n\nexport default function() {\n  return new Selection(this._groups, this._parents);\n}\n","import {tweenValue} from \"./tween\";\n\nfunction textConstant(value) {\n  return function() {\n    this.textContent = value;\n  };\n}\n\nfunction textFunction(value) {\n  return function() {\n    var value1 = value(this);\n    this.textContent = value1 == null ? \"\" : value1;\n  };\n}\n\nexport default function(value) {\n  return this.tween(\"text\", typeof value === \"function\"\n      ? textFunction(tweenValue(this, \"text\", value))\n      : textConstant(value == null ? \"\" : value + \"\"));\n}\n","import {selection} from \"d3-selection\";\nimport transition_attr from \"./attr\";\nimport transition_attrTween from \"./attrTween\";\nimport transition_delay from \"./delay\";\nimport transition_duration from \"./duration\";\nimport transition_ease from \"./ease\";\nimport transition_filter from \"./filter\";\nimport transition_merge from \"./merge\";\nimport transition_on from \"./on\";\nimport transition_remove from \"./remove\";\nimport transition_select from \"./select\";\nimport transition_selectAll from \"./selectAll\";\nimport transition_selection from \"./selection\";\nimport transition_style from \"./style\";\nimport transition_styleTween from \"./styleTween\";\nimport transition_text from \"./text\";\nimport transition_transition from \"./transition\";\nimport transition_tween from \"./tween\";\n\nvar id = 0;\n\nexport function Transition(groups, parents, name, id) {\n  this._groups = groups;\n  this._parents = parents;\n  this._name = name;\n  this._id = id;\n}\n\nexport default function transition(name) {\n  return selection().transition(name);\n}\n\nexport function newId() {\n  return ++id;\n}\n\nvar selection_prototype = selection.prototype;\n\nTransition.prototype = transition.prototype = {\n  constructor: Transition,\n  select: transition_select,\n  selectAll: transition_selectAll,\n  filter: transition_filter,\n  merge: transition_merge,\n  selection: transition_selection,\n  transition: transition_transition,\n  call: selection_prototype.call,\n  nodes: selection_prototype.nodes,\n  node: selection_prototype.node,\n  size: selection_prototype.size,\n  empty: selection_prototype.empty,\n  each: selection_prototype.each,\n  on: transition_on,\n  attr: transition_attr,\n  attrTween: transition_attrTween,\n  style: transition_style,\n  styleTween: transition_styleTween,\n  text: transition_text,\n  remove: transition_remove,\n  tween: transition_tween,\n  delay: transition_delay,\n  duration: transition_duration,\n  ease: transition_ease\n};\n","import {selector} from \"d3-selection\";\nimport {Transition} from \"./index\";\nimport schedule, {get} from \"./schedule\";\n\nexport default function(select) {\n  var name = this._name,\n      id = this._id;\n\n  if (typeof select !== \"function\") select = selector(select);\n\n  for (var groups = this._groups, m = groups.length, subgroups = new Array(m), j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, subgroup = subgroups[j] = new Array(n), node, subnode, i = 0; i < n; ++i) {\n      if ((node = group[i]) && (subnode = select.call(node, node.__data__, i, group))) {\n        if (\"__data__\" in node) subnode.__data__ = node.__data__;\n        subgroup[i] = subnode;\n        schedule(subgroup[i], name, id, i, subgroup, get(node, id));\n      }\n    }\n  }\n\n  return new Transition(subgroups, this._parents, name, id);\n}\n","import {selectorAll} from \"d3-selection\";\nimport {Transition} from \"./index\";\nimport schedule, {get} from \"./schedule\";\n\nexport default function(select) {\n  var name = this._name,\n      id = this._id;\n\n  if (typeof select !== \"function\") select = selectorAll(select);\n\n  for (var groups = this._groups, m = groups.length, subgroups = [], parents = [], j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, node, i = 0; i < n; ++i) {\n      if (node = group[i]) {\n        for (var children = select.call(node, node.__data__, i, group), child, inherit = get(node, id), k = 0, l = children.length; k < l; ++k) {\n          if (child = children[k]) {\n            schedule(child, name, id, k, children, inherit);\n          }\n        }\n        subgroups.push(children);\n        parents.push(node);\n      }\n    }\n  }\n\n  return new Transition(subgroups, parents, name, id);\n}\n","import {matcher} from \"d3-selection\";\nimport {Transition} from \"./index\";\n\nexport default function(match) {\n  if (typeof match !== \"function\") match = matcher(match);\n\n  for (var groups = this._groups, m = groups.length, subgroups = new Array(m), j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, subgroup = subgroups[j] = [], node, i = 0; i < n; ++i) {\n      if ((node = group[i]) && match.call(node, node.__data__, i, group)) {\n        subgroup.push(node);\n      }\n    }\n  }\n\n  return new Transition(subgroups, this._parents, this._name, this._id);\n}\n","import {Transition} from \"./index\";\n\nexport default function(transition) {\n  if (transition._id !== this._id) throw new Error;\n\n  for (var groups0 = this._groups, groups1 = transition._groups, m0 = groups0.length, m1 = groups1.length, m = Math.min(m0, m1), merges = new Array(m0), j = 0; j < m; ++j) {\n    for (var group0 = groups0[j], group1 = groups1[j], n = group0.length, merge = merges[j] = new Array(n), node, i = 0; i < n; ++i) {\n      if (node = group0[i] || group1[i]) {\n        merge[i] = node;\n      }\n    }\n  }\n\n  for (; j < m0; ++j) {\n    merges[j] = groups0[j];\n  }\n\n  return new Transition(merges, this._parents, this._name, this._id);\n}\n","import {Transition, newId} from \"./index\";\nimport schedule, {get} from \"./schedule\";\n\nexport default function() {\n  var name = this._name,\n      id0 = this._id,\n      id1 = newId();\n\n  for (var groups = this._groups, m = groups.length, j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, node, i = 0; i < n; ++i) {\n      if (node = group[i]) {\n        var inherit = get(node, id0);\n        schedule(node, name, id1, i, group, {\n          time: inherit.time + inherit.delay + inherit.duration,\n          delay: 0,\n          duration: inherit.duration,\n          ease: inherit.ease\n        });\n      }\n    }\n  }\n\n  return new Transition(groups, this._parents, name, id1);\n}\n","import {get, set, init} from \"./schedule\";\n\nfunction start(name) {\n  return (name + \"\").trim().split(/^|\\s+/).every(function(t) {\n    var i = t.indexOf(\".\");\n    if (i >= 0) t = t.slice(0, i);\n    return !t || t === \"start\";\n  });\n}\n\nfunction onFunction(id, name, listener) {\n  var on0, on1, sit = start(name) ? init : set;\n  return function() {\n    var schedule = sit(this, id),\n        on = schedule.on;\n\n    // If this node shared a dispatch with the previous node,\n    // just assign the updated shared dispatch and we’re done!\n    // Otherwise, copy-on-write.\n    if (on !== on0) (on1 = (on0 = on).copy()).on(name, listener);\n\n    schedule.on = on1;\n  };\n}\n\nexport default function(name, listener) {\n  var id = this._id;\n\n  return arguments.length < 2\n      ? get(this.node(), id).on.on(name)\n      : this.each(onFunction(id, name, listener));\n}\n","import {interpolateTransformSvg as interpolateTransform} from \"d3-interpolate\";\nimport {namespace} from \"d3-selection\";\nimport {tweenValue} from \"./tween\";\nimport interpolate from \"./interpolate\";\n\nfunction attrRemove(name) {\n  return function() {\n    this.removeAttribute(name);\n  };\n}\n\nfunction attrRemoveNS(fullname) {\n  return function() {\n    this.removeAttributeNS(fullname.space, fullname.local);\n  };\n}\n\nfunction attrConstant(name, interpolate, value1) {\n  var value00,\n      interpolate0;\n  return function() {\n    var value0 = this.getAttribute(name);\n    return value0 === value1 ? null\n        : value0 === value00 ? interpolate0\n        : interpolate0 = interpolate(value00 = value0, value1);\n  };\n}\n\nfunction attrConstantNS(fullname, interpolate, value1) {\n  var value00,\n      interpolate0;\n  return function() {\n    var value0 = this.getAttributeNS(fullname.space, fullname.local);\n    return value0 === value1 ? null\n        : value0 === value00 ? interpolate0\n        : interpolate0 = interpolate(value00 = value0, value1);\n  };\n}\n\nfunction attrFunction(name, interpolate, value) {\n  var value00,\n      value10,\n      interpolate0;\n  return function() {\n    var value0, value1 = value(this);\n    if (value1 == null) return void this.removeAttribute(name);\n    value0 = this.getAttribute(name);\n    return value0 === value1 ? null\n        : value0 === value00 && value1 === value10 ? interpolate0\n        : interpolate0 = interpolate(value00 = value0, value10 = value1);\n  };\n}\n\nfunction attrFunctionNS(fullname, interpolate, value) {\n  var value00,\n      value10,\n      interpolate0;\n  return function() {\n    var value0, value1 = value(this);\n    if (value1 == null) return void this.removeAttributeNS(fullname.space, fullname.local);\n    value0 = this.getAttributeNS(fullname.space, fullname.local);\n    return value0 === value1 ? null\n        : value0 === value00 && value1 === value10 ? interpolate0\n        : interpolate0 = interpolate(value00 = value0, value10 = value1);\n  };\n}\n\nexport default function(name, value) {\n  var fullname = namespace(name), i = fullname === \"transform\" ? interpolateTransform : interpolate;\n  return this.attrTween(name, typeof value === \"function\"\n      ? (fullname.local ? attrFunctionNS : attrFunction)(fullname, i, tweenValue(this, \"attr.\" + name, value))\n      : value == null ? (fullname.local ? attrRemoveNS : attrRemove)(fullname)\n      : (fullname.local ? attrConstantNS : attrConstant)(fullname, i, value + \"\"));\n}\n","import {namespace} from \"d3-selection\";\n\nfunction attrTweenNS(fullname, value) {\n  function tween() {\n    var node = this, i = value.apply(node, arguments);\n    return i && function(t) {\n      node.setAttributeNS(fullname.space, fullname.local, i(t));\n    };\n  }\n  tween._value = value;\n  return tween;\n}\n\nfunction attrTween(name, value) {\n  function tween() {\n    var node = this, i = value.apply(node, arguments);\n    return i && function(t) {\n      node.setAttribute(name, i(t));\n    };\n  }\n  tween._value = value;\n  return tween;\n}\n\nexport default function(name, value) {\n  var key = \"attr.\" + name;\n  if (arguments.length < 2) return (key = this.tween(key)) && key._value;\n  if (value == null) return this.tween(key, null);\n  if (typeof value !== \"function\") throw new Error;\n  var fullname = namespace(name);\n  return this.tween(key, (fullname.local ? attrTweenNS : attrTween)(fullname, value));\n}\n","import {interpolateTransformCss as interpolateTransform} from \"d3-interpolate\";\nimport {style} from \"d3-selection\";\nimport {tweenValue} from \"./tween\";\nimport interpolate from \"./interpolate\";\n\nfunction styleRemove(name, interpolate) {\n  var value00,\n      value10,\n      interpolate0;\n  return function() {\n    var value0 = style(this, name),\n        value1 = (this.style.removeProperty(name), style(this, name));\n    return value0 === value1 ? null\n        : value0 === value00 && value1 === value10 ? interpolate0\n        : interpolate0 = interpolate(value00 = value0, value10 = value1);\n  };\n}\n\nfunction styleRemoveEnd(name) {\n  return function() {\n    this.style.removeProperty(name);\n  };\n}\n\nfunction styleConstant(name, interpolate, value1) {\n  var value00,\n      interpolate0;\n  return function() {\n    var value0 = style(this, name);\n    return value0 === value1 ? null\n        : value0 === value00 ? interpolate0\n        : interpolate0 = interpolate(value00 = value0, value1);\n  };\n}\n\nfunction styleFunction(name, interpolate, value) {\n  var value00,\n      value10,\n      interpolate0;\n  return function() {\n    var value0 = style(this, name),\n        value1 = value(this);\n    if (value1 == null) value1 = (this.style.removeProperty(name), style(this, name));\n    return value0 === value1 ? null\n        : value0 === value00 && value1 === value10 ? interpolate0\n        : interpolate0 = interpolate(value00 = value0, value10 = value1);\n  };\n}\n\nexport default function(name, value, priority) {\n  var i = (name += \"\") === \"transform\" ? interpolateTransform : interpolate;\n  return value == null ? this\n          .styleTween(name, styleRemove(name, i))\n          .on(\"end.style.\" + name, styleRemoveEnd(name))\n      : this.styleTween(name, typeof value === \"function\"\n          ? styleFunction(name, i, tweenValue(this, \"style.\" + name, value))\n          : styleConstant(name, i, value + \"\"), priority);\n}\n","function styleTween(name, value, priority) {\n  function tween() {\n    var node = this, i = value.apply(node, arguments);\n    return i && function(t) {\n      node.style.setProperty(name, i(t), priority);\n    };\n  }\n  tween._value = value;\n  return tween;\n}\n\nexport default function(name, value, priority) {\n  var key = \"style.\" + (name += \"\");\n  if (arguments.length < 2) return (key = this.tween(key)) && key._value;\n  if (value == null) return this.tween(key, null);\n  if (typeof value !== \"function\") throw new Error;\n  return this.tween(key, styleTween(name, value, priority == null ? \"\" : priority));\n}\n","import {get, init} from \"./schedule\";\n\nfunction delayFunction(id, value) {\n  return function() {\n    init(this, id).delay = +value.apply(this, arguments);\n  };\n}\n\nfunction delayConstant(id, value) {\n  return value = +value, function() {\n    init(this, id).delay = value;\n  };\n}\n\nexport default function(value) {\n  var id = this._id;\n\n  return arguments.length\n      ? this.each((typeof value === \"function\"\n          ? delayFunction\n          : delayConstant)(id, value))\n      : get(this.node(), id).delay;\n}\n","import {get, set} from \"./schedule\";\n\nfunction durationFunction(id, value) {\n  return function() {\n    set(this, id).duration = +value.apply(this, arguments);\n  };\n}\n\nfunction durationConstant(id, value) {\n  return value = +value, function() {\n    set(this, id).duration = value;\n  };\n}\n\nexport default function(value) {\n  var id = this._id;\n\n  return arguments.length\n      ? this.each((typeof value === \"function\"\n          ? durationFunction\n          : durationConstant)(id, value))\n      : get(this.node(), id).duration;\n}\n","import {get, set} from \"./schedule\";\n\nfunction easeConstant(id, value) {\n  if (typeof value !== \"function\") throw new Error;\n  return function() {\n    set(this, id).ease = value;\n  };\n}\n\nexport default function(value) {\n  var id = this._id;\n\n  return arguments.length\n      ? this.each(easeConstant(id, value))\n      : get(this.node(), id).ease;\n}\n","import {Transition, newId} from \"../transition/index\";\nimport schedule from \"../transition/schedule\";\nimport {easeCubicInOut} from \"d3-ease\";\nimport {now} from \"d3-timer\";\n\nvar defaultTiming = {\n  time: null, // Set on use.\n  delay: 0,\n  duration: 250,\n  ease: easeCubicInOut\n};\n\nfunction inherit(node, id) {\n  var timing;\n  while (!(timing = node.__transition) || !(timing = timing[id])) {\n    if (!(node = node.parentNode)) {\n      return defaultTiming.time = now(), defaultTiming;\n    }\n  }\n  return timing;\n}\n\nexport default function(name) {\n  var id,\n      timing;\n\n  if (name instanceof Transition) {\n    id = name._id, name = name._name;\n  } else {\n    id = newId(), (timing = defaultTiming).time = now(), name = name == null ? null : name + \"\";\n  }\n\n  for (var groups = this._groups, m = groups.length, j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, node, i = 0; i < n; ++i) {\n      if (node = group[i]) {\n        schedule(node, name, id, i, group, timing || inherit(node, id));\n      }\n    }\n  }\n\n  return new Transition(groups, this._parents, name, id);\n}\n","import {selection} from \"d3-selection\";\nimport selection_interrupt from \"./interrupt\";\nimport selection_transition from \"./transition\";\n\nselection.prototype.interrupt = selection_interrupt;\nselection.prototype.transition = selection_transition;\n","import interrupt from \"../interrupt\";\n\nexport default function(name) {\n  return this.each(function() {\n    interrupt(this, name);\n  });\n}\n","import {STARTING, ENDING, ENDED} from \"./transition/schedule\";\n\nexport default function(node, name) {\n  var schedules = node.__transition,\n      schedule,\n      active,\n      empty = true,\n      i;\n\n  if (!schedules) return;\n\n  name = name == null ? null : name + \"\";\n\n  for (i in schedules) {\n    if ((schedule = schedules[i]).name !== name) { empty = false; continue; }\n    active = schedule.state > STARTING && schedule.state < ENDING;\n    schedule.state = ENDED;\n    schedule.timer.stop();\n    if (active) schedule.on.call(\"interrupt\", node, node.__data__, schedule.index, schedule.group);\n    delete schedules[i];\n  }\n\n  if (empty) delete node.__transition;\n}\n","import { select, event as d3event, selection, clientPoint } from 'd3-selection';\nimport { drag as d3drag } from 'd3-drag';\nimport 'd3-transition';\nimport { mergeRecursive } from './common-utils';\n/**\n * This function takes a raw DOM element or\n * a string and returns a d3 selection of that element.\n *\n * @param {HTMLElement | string} element The element to wrap in d3 selection.\n * @return {Selection} Instance of d3 selection.\n */\nconst selectElement = element => select(element);\n\n/**\n * It creates a new d3 element on the parent element\n * @param  {Selection} parent Element to which the element is to be appended\n * @param  {Object} elemType Type of the new element\n * @param  {Array} data Data for the new element\n * @param  {Object} selector classname/id/tagname for the element\n * @return {HTMLElement} Newly Created Element\n */\nconst makeElement = (parent, elemType, data, selector, callbacks = {}, keyFn) => {\n    if ((parent instanceof HTMLElement || parent instanceof SVGElement)) {\n        parent = selectElement(parent);\n    }\n\n    const selectorVal = selector ? selector[0] : null;\n    let selectorType = null;\n    let actualSelector = null;\n    let element = null;\n    let enterSel = null;\n    let mergeSel = null;\n    let filter;\n    if (selectorVal) {\n        if (selectorVal === '#') {\n            selectorType = 'id';\n            actualSelector = selector;\n        } else {\n            selectorType = 'class';\n            actualSelector = selector[0] === '.' ? selector : `.${selector}`;\n        }\n    } else {\n        actualSelector = elemType;\n        filter = true;\n    }\n    element = parent.selectAll(actualSelector);\n\n    filter && (element = element.filter(function () {\n        return this.parentNode === parent.node();\n    }));\n    element = element.data(data, keyFn);\n\n    enterSel = element.enter()\n                            .append(elemType || 'div');\n    callbacks.enter && enterSel.each(function (...params) {\n        callbacks.enter(selectElement(this), ...params);\n    });\n\n    mergeSel = enterSel.merge(element);\n    callbacks.update && mergeSel.each(function (...params) {\n        callbacks.update(selectElement(this), ...params);\n    });\n    if (selectorType === 'class') {\n        mergeSel.classed(selectorVal === '.' ? selector.substring(1, selector.length) : selector, true);\n    } else if (selectorType === 'id') {\n        mergeSel.attr('id', selector.substring(1, selector.length));\n    }\n    const exitSel = element.exit();\n\n    if (callbacks.exit) {\n        exitSel.each(function (...params) {\n            callbacks.exit(selectElement(this), ...params);\n        });\n    } else {\n        exitSel.remove();\n    }\n    return mergeSel;\n};\n\n/**\n * This function applies styles to an element\n *  @param  {Object} elem Element Selection\n * @param  {Object} styleObj Style Object to be applied\n * @return {Element} Newly Created Element\n*/\nconst applyStyle = (elem, styleObj) => {\n    Object.entries(styleObj).forEach((d) => {\n        elem.style(d[0], d[1]);\n    }, this);\n    return elem;\n};\n\n/**\n * This function appends a dom element in another element.\n * @param {HTMLElement | SVGElement} element1 The element in which to append the second element\n * @param {HTMLElement | SVGElement} element2 The element which will be appended.\n */\nconst appendElement = (element1, element2) => {\n    element1.appendChild(element2);\n};\n\n/**\n * Sets the attributes to the element.\n * @param {HTMLElement | SVGElement} element Element on which attributes will be applied\n * @param {Object} attrs Attributes which need to be applied\n */\nconst setElementAttrs = (element, attrs) => {\n    for (const key in attrs) {\n        if ({}.hasOwnProperty.call(attrs, key)) {\n            element.attr(key, attrs[key]);\n        }\n    }\n};\n\n/**\n * Sets attributes in the svg or html element\n * @param {SVGElement | HTMLElement} element The element on which attrs will be applied\n * @param {Array.<Object>} attrs Array of attributes\n * @param {string} className className of elements to select.\n * @return {SVGElement | HTMLElement} SVGElement or html element.\n */\nconst setAttrs = (element, attrs, className) => {\n    if (!(element instanceof selection)) {\n        element = selectElement(element);\n    }\n    className !== undefined ? element.selectAll(`.${className}`).each(function () {\n        setElementAttrs(select(this), attrs);\n    }) : setElementAttrs(element, attrs);\n    return element;\n};\n\n/**\n * Adds a css class to elements which passes the filter function.If filter function is not given,\n * then all elements will be applied the class.\n * @param {HTMLElement | SVGElement} element element\n * @param {string} className css class\n * @param {string} selector css selector\n * @param {Function} filterFn filter method.\n */\nconst addClass = (element, className, selector, filterFn) => {\n    select(element).selectAll(selector).each(function (data) {\n        const elem = select(this);\n        filterFn ? filterFn(data) && elem.classed(className, true) :\n                elem.classed(className, true);\n    });\n};\n\n/**\n * Removes the css class from elements which passes the filter function.If filter function is not given,\n * then all elements will be applied the class.\n * @param {HTMLElement | SVGElement} element element\n * @param {string} className css class\n * @param {string} selector css selector\n * @param {Function} filterFn filter method.\n */\nconst removeClass = (element, className, selector, filterFn) => {\n    select(element).selectAll(selector).each(function (data) {\n        const elem = select(this);\n        filterFn ? filterFn(data) && elem.classed(className, false) :\n                elem.classed(className, false);\n    });\n};\n\n/**\n * Sets styles in the svg or html element\n * @param {SVGElement | HTMLElement} element The element on which styles will be applied\n * @param {Array.<Object>} styles Array of style attributes\n * @return {SVGElement | HTMLElement} SVGElement or html element.\n */\nconst setStyles = (element, styles) => {\n    if (!(element instanceof selection)) {\n        element = selectElement(element);\n    }\n    for (const key in styles) {\n        if ({}.hasOwnProperty.call(styles, key)) {\n            element.style(key, styles[key]);\n        }\n    }\n    return element;\n};\n\n/**\n * Creates svg or html elements by binding data to the selection.Removes extra elements\n * on exit.\n * @param {Object} params Parameter object\n * @param {SVGElement | HTMLElement} params.container Container element where all elements will be appended\n * @param {string} params.selector Selector by which elements will be selected from dom\n * @param {string} params.append Append tag\n * @param {Function} params.each Function which will be executed for each data point and element.\n */\nconst createElements = (params) => {\n    const container = select(params.container);\n    let data;\n    let sel;\n\n    data = params.data;\n    if (typeof data === 'number') {\n        data = Array(data).fill().map((d, i) => i);\n    }\n    sel = container.selectAll(params.selector).data(data);\n\n    sel = container.selectAll(params.selector).filter(function () {\n        return this.parentNode === container.node();\n    }).data(params.data);\n\n    const selectionMerge = sel.enter().append(params.append).merge(sel).each(function (d, i) {\n        params.each(d, select(this), i);\n    });\n\n    selectionMerge.attr('class', params.className || '');\n    sel.exit().remove();\n};\n\n/**\n * Clips an element with given measurement. Basically it is used to hide overflowing portions\n * of any element.\n * @param {SVGElement} container svg element which needs to be clipped.\n * @param {Object} measurement Dimensions of the clipped rectangle.\n * @param {string} id Unique id of the clip element\n */\nconst clipElement = (container, measurement, id) => {\n    const clipPathElement = makeElement(select(container), 'clipPath', [1], `#${id}`);\n    const clipPathRect = makeElement(clipPathElement, 'rect', [1]);\n    clipPathRect.attr('x', measurement.x)\n                    .attr('y', measurement.x)\n                    .attr('width', measurement.width)\n                    .attr('height', measurement.height);\n    clipPathElement.attr('clip-path', `url(#${id})`);\n};\n\n/**\n * Returns the element of the corresponding classname.\n * @param {HTMLElement | SVGElement} node html or svg node element.\n * @param {string} className css class to be applied.\n * @return {HTMLElement | SVGElement} html or svg element.\n */\nconst getElementsByClassName = (node, className) => select(node).selectAll(className).nodes();\n\n/**\n * Gets the mouse position relative to an svg type of element\n * @param {SVGElement} element Any svg element like rect, circle, etc.\n * @param {Event} event Event object.\n * @return {Object} x and y position relative to the container element passed.\n */\nconst getMousePos = (element, event) => {\n    const boundingClientRect = element.getBoundingClientRect();\n    return {\n        x: event.x - boundingClientRect.x,\n        y: event.y - boundingClientRect.y\n    };\n};\n\nconst getClientPoint = (...params) => {\n    const pos = clientPoint(...params);\n    return {\n        x: pos[0],\n        y: pos[1]\n    };\n};\n\n/** This function appends a dom element in another element.\n * @param {Object} tag The tag name of the element to append\n * @param {Object} mount Mount point fo the element\n * @return {Object} selection of the appended element\n */\nconst createElement = (tag, mount) => select(mount).append(tag).node();\n\n/**\n * Gets the d3 event function\n * @return {Object} d3 event\n */\nconst getEvent = () => d3event;\n\n/**\n * Gets the d3 drag function\n * @return {Object} d3 drag\n */\nconst getD3Drag = () => d3drag;\n\nconst getSmartComputedStyle = (group, css) => {\n    let textEl;\n    const testText = 'W';\n    const mandatoryStyle = {\n        'fill-opacity': 0\n    };\n    const className = typeof css === 'string' ? css : (css instanceof Array ? css.join(' ') : undefined);\n\n    if (group.node() instanceof HTMLElement) {\n        textEl = group.append('div').html(testText);\n    } else {\n        textEl = group.append('text').text(testText);\n    }\n\n    if (className) {\n        textEl.attr('class', className);\n    } else if (typeof css === 'object') {\n        delete css['fill-opacity'];\n        mergeRecursive(mandatoryStyle, css);\n    }\n\n    textEl.style(mandatoryStyle);\n    const computedStyle = window.getComputedStyle(textEl.node());\n    const styleForSmartLabel = {\n        fontSize: computedStyle.fontSize,\n        fontFamily: computedStyle.fontFamily,\n        fontWeight: computedStyle.fontWeight,\n        fontStyle: computedStyle.fontStyle\n    };\n\n    textEl.remove();\n\n    return styleForSmartLabel;\n};\n\nconst hasTouch = () => 'ontouchstart' in document.documentElement;\n\nexport {\n    hasTouch,\n    selectElement,\n    makeElement,\n    applyStyle,\n    addClass,\n    removeClass,\n    appendElement,\n    setAttrs,\n    setStyles,\n    createElement,\n    createElements,\n    clipElement,\n    getElementsByClassName,\n    getMousePos,\n    getEvent,\n    getD3Drag,\n    getSmartComputedStyle,\n    getClientPoint\n};\n","const events = [\n    'initialized',\n    'beforeupdate',\n    'updated',\n    'beforedraw',\n    'drawn',\n    'beforeremove',\n    'removed',\n    'animationend'\n];\n\nconst compositions = [\n    'canvas',\n    'unit',\n    'layer',\n    'axis',\n    'facet-headers',\n    'legend',\n    'caption'\n];\n\nconst EVENT_LIST = [];\n\ncompositions.forEach((composition) => {\n    events.forEach((event) => {\n        EVENT_LIST.push(`${composition}.${event}`);\n    });\n});\n\nexport default EVENT_LIST;\n","import EVENT_LIST from './event-list';\nimport { createPromise } from './helper';\n\n/**\n * At first call it accepts one function\n * calling it second time accepts notification object.\n * notification object then called with first accepted function\n *\n * @param {Function} resolveFn a promise's resolve function\n * @return {Function} a function to accept notification object\n */\nconst resolver = resolveFn => notification => resolveFn(notification);\n\n/**\n * Checks if the property string is present in the source object\n *\n * @param {Object} source source object whom you want to check the property\n * @param {string} property key name that need to be checked\n * @return {boolean} returns true if the property found in the source object\n */\nconst hasOwn = (source, property) => Object.prototype.hasOwnProperty.call(source, property);\n\n/**\n * LifeCycleManager which goes as a dependendecy to a muze\n * it accepts notification from the entire library throughout\n * the exeecution life\n *\n * @export\n * @class LifeCycleManager\n */\nexport default class LifeCycleManager {\n\n    /**\n     * Creates an instance of LifeCycleManager.\n     * @memberof LifeCycleManager\n     */\n    constructor () {\n        this._eventList = EVENT_LIST;\n        this._promises = new Map();\n        this._notifiers = {};\n        this._lifeCycles = {};\n        this._unreleasedLifeCycles = {};\n        this._boot();\n    }\n\n    /**\n     * Fills all the notifiers with resolver callback\n     *\n     * @memberof LifeCycleManager\n     */\n    _boot () {\n        this._notifiers = this._eventList.reduce((acc, name) => {\n            acc[name] = resolver;\n            return acc;\n        }, {});\n        this._preparePromises();\n    }\n\n    /**\n     * Public method which gives the promise corresponding\n     * to the event name\n     *\n     * @param {string} eventName name of the event like `canvas.drawn`\n     * @return {promise} promise that is passed to the user\n     * @memberof LifeCycleManager\n     */\n    retrieve (eventName) {\n        return this._promises.get(eventName);\n    }\n\n    /**\n     * Creates a promise that will be passed to user's callback\n     *\n     * @param {string} eventName name of the event like `canvas.drawn`\n     * @return {promise} a pending promise waiting for resolve to be called\n     * @memberof LifeCycleManager\n     */\n    _makeNotifierPromise (eventName) {\n        return new Promise((resolve) => {\n            this._notifiers[eventName] = resolver(resolve);\n        });\n    }\n\n    /**\n     * Prepares the promise map with pending promises\n     * all the promises are in a pending state where their's\n     * resolve function waiting to be called with notification object\n     * @memberof LifeCycleManager\n     */\n    _preparePromises () {\n        this._eventList.forEach((eventName) => {\n            const promise = this._makeNotifierPromise(eventName);\n            this._promises.set(eventName, promise);\n            createPromise(promise, eventName, this);\n        });\n    }\n\n    /**\n     * Resolves the promise with notification object\n     *\n     * @param {string} eventName name of the event in the system\n     * @param {Object} notification notification object\n     * @param {string} notification.formalName name of the sender creating the notification\n     * @param {Object} notification.client instance or array of instances sending the notification\n     * @param {string} notification.action the stage name when the event happened like `beforedraw`\n     *\n     * @memberof LifeCycleManager\n     */\n    _resolvePromise (eventName, notification) {\n        this._notifiers[eventName](notification);\n    }\n\n    /**\n     * Public method which is being called by different\n     * subcompoents of the system at different execution atages\n     * @param {Object} notification notification object\n     * @param {string} notification.formalName name of the sender creating the notification\n     * @param {Object} notification.client instance or array of instances sending the notification\n     * @param {string} notification.action the stage name when the event happened like `beforedraw`\n     * @memberof LifeCycleManager\n     */\n    notify (notification) {\n        // get the composition name from notification\n        // or from static formalName() method\n        const composition = notification.formalName || notification.client.constructor.formalName();\n        notification.formalName = composition;\n        this._releasePromisesFromCache();\n        this._notify(composition, notification);\n    }\n\n    /**\n     * Notify user the with promsie in a callback\n     * if callback not found then cache it\n     *\n     * @param {string} composition\n     * @param {Object} notification notification object\n     * @param {string} notification.formalName name of the sender creating the notification\n     * @param {Object} notification.client instance or array of instances sending the notification\n     * @param {string} notification.action the stage name when the event happened like `beforedraw`\n     * @memberof LifeCycleManager\n     */\n    _notify (composition, notification) {\n        const stage = notification.action;\n        const eventName = `${composition}.${stage}`;\n\n        // resolves promise with the notification object\n        this._resolvePromise(eventName, notification);\n\n        // get the promise from the promise map\n        const promise = this.retrieve(eventName);\n\n        if (this._lifeCycles[composition]) {\n            if (this._lifeCycles[composition][stage]) {\n                // if user given call back exists, then call with promise\n                this._callLifeCycleCallback(composition, stage, promise);\n            } else {\n                // otherwise cache the promise\n                this._cachePromise(composition, stage, promise);\n            }\n        } else {\n            this._cachePromise(composition, stage, promise);\n        }\n    }\n\n    /**\n     * Calls the user's callback with callback\n     *\n     * @param {string} composition name of the compositon like `canvas`\n     * @param {string} stage the stage name when the event happened like `beforedraw`\n     * @param {promise} promise promise that is passed to the user\n     * @memberof LifeCycleManager\n     */\n    _callLifeCycleCallback (composition, stage, promise) {\n        const eventName = `${composition}.${stage}`;\n        this._lifeCycles[composition][stage](promise);\n        this._resetTargetPromise(eventName);\n    }\n\n    /**\n     * Try to clear the cached promsies once we have\n     * macthed callbacks from the user\n     *\n     * @memberof LifeCycleManager\n     */\n    _releasePromisesFromCache () {\n        const compositions = Object.keys(this._unreleasedLifeCycles);\n        compositions.forEach((composition) => {\n            const stages = Object.keys(this._unreleasedLifeCycles[composition]);\n            stages.forEach((stage) => {\n                if (this._lifeCycles[composition]) {\n                    if (this._lifeCycles[composition][stage]) {\n                        // take the promise from unreleased lifeCycles\n                        const promise = this._unreleasedLifeCycles[composition][stage];\n                        // call the user given callback with that promise\n                        this._callLifeCycleCallback(composition, stage, promise);\n                        // delete promise from unreleased lifeCycles\n                        delete this._unreleasedLifeCycles[composition][stage];\n                    }\n                }\n            });\n        });\n    }\n\n    /**\n     * Cache the promise in the map. This cache\n     * then get consumed if we get user callbacks\n     * @param {string} composition name of the compositon like `canvas`\n     * @param {string} stage the stage name when the event happened like `beforedraw`\n     * @param {promise} promise promise that is passed to the user\n     * @memberof LifeCycleManager\n     */\n    _cachePromise (composition, stage, promise) {\n        if (!hasOwn(this._unreleasedLifeCycles, composition)) {\n            this._unreleasedLifeCycles[composition] = {};\n        }\n\n        if (!hasOwn(this._unreleasedLifeCycles[composition], stage)) {\n            this._unreleasedLifeCycles[composition][stage] = {};\n        }\n        this._unreleasedLifeCycles[composition][stage] = promise;\n    }\n\n    /**\n     * It register's the callbacks gievn the user\n     *\n     * @param {Object} [lifeCycles={}] a object with list of callbacks\n     * @memberof LifeCycleManager\n     */\n    register (lifeCycles = {}) {\n        this._lifeCycles = lifeCycles;\n        // as we get all the callbacks, try to call them\n        // from unreleased promise map\n        this._releasePromisesFromCache();\n    }\n\n    /**\n     * Reset the promise into pending state\n     *\n     * @param {string} eventName name of the event happening\n     * @memberof LifeCycleManager\n     */\n    _resetTargetPromise (eventName) {\n        setTimeout(() => {\n            this._notifiers[eventName] = resolver;\n            this._promises.set(eventName, this._makeNotifierPromise(eventName));\n        }, 0);\n    }\n}\n","import LifeCycleManager from './lifecycle-manager';\n\nexport default LifeCycleManager;\n","/**\n * Creates a new promise when the given promise is resolved. This needs to be done so that after the lifecycle event\n * is completed, then again when the event gets completed, then a new promise gets resolved.\n *\n * @param {Promise} promise Instance of promise\n * @param {string} eventName name of event\n * @param {LifeCycleManager} context Instance of lifecyclemanager\n */\nexport const createPromise = (promise, eventName, context) => {\n    promise.then(() => {\n        const prm = context._makeNotifierPromise(eventName);\n        context._promises.set(eventName, prm);\n        createPromise(prm, eventName, context);\n    });\n};\n","import { default as DataModel } from 'datamodel';\nimport * as scales from './scales';\nimport * as colorSchemes from './color-schemes';\nimport * as STATE_NAMESPACES from './enums/namespace';\n\nconst InvalidAwareTypes = DataModel.InvalidAwareTypes;\n\nexport {\n    InvalidAwareTypes,\n    DataModel\n};\n\nexport {\n    ReservedFields,\n    CommonProps\n} from './enums';\n\nexport { STATE_NAMESPACES };\n\nexport {\n    scales,\n    colorSchemes\n};\n\nexport {\n    getNearestValue,\n    getValueParser,\n    transformColors,\n    detectColor,\n    hslToRgb,\n    rgbToHsv,\n    hexToHsv,\n    hsvToRgb,\n    escapeHTML,\n    angleToRadian,\n    generateGetterSetters,\n    getArraySum,\n    ERROR_MSG,\n    interpolator,\n    colorInterpolator,\n    numberInterpolator,\n    piecewiseInterpolator,\n    reqAnimFrame,\n    cancelAnimFrame,\n    nextAnimFrame,\n    getMax,\n    getMin,\n    getDomainFromData,\n    getUniqueId,\n    mergeRecursive,\n    unionDomain,\n    replaceCSSPrefix,\n    symbolFns,\n    defaultValue,\n    easeFns,\n    clone,\n    interpolateArray,\n    getMinPoint,\n    getMaxPoint,\n    getClosestIndexOf,\n    registerListeners,\n    Voronoi,\n    checkExistence,\n    sanitizeIP,\n    getMinDiff,\n    capitalizeFirst,\n    getWindow,\n    getQualifiedClassName,\n    Store,\n    getDependencyOrder,\n    objectIterator,\n    intSanitizer,\n    transactor,\n    enableChainedTransaction,\n    isHTMLElem,\n    isEqual,\n    isSimpleObject,\n    nextFrame,\n    filterPropagationModel,\n    getObjProp,\n    getDataModelFromIdentifiers,\n    getDataModelFromRange,\n    transposeArray,\n    toArray,\n    extendsClass,\n    concatModels,\n    assembleModelFromIdentifiers,\n    isValidValue,\n    nestCollection,\n    stack,\n    getSymbol,\n    Scales,\n    Symbols,\n    pathInterpolators,\n    hslInterpolator,\n    getSmallestDiff,\n    require,\n    formatTemporal,\n    createSelection,\n    temporalFields,\n    retrieveNearestGroupByReducers\n} from './common-utils';\n\nexport {\n    selectElement,\n    makeElement,\n    applyStyle,\n    addClass,\n    removeClass,\n    appendElement,\n    setAttrs,\n    setStyles,\n    createElement,\n    createElements,\n    clipElement,\n    getElementsByClassName,\n    getMousePos,\n    getEvent,\n    getD3Drag,\n    getSmartComputedStyle,\n    getClientPoint,\n    hasTouch\n} from './renderer-utils';\n\nexport { default as Smartlabel } from 'fusioncharts-smartlabel';\n\nexport { dataSelect, DataObject } from './DataSystem';\n\nexport { default as LifeCycleManager } from './lifecycle-manager';\n\nexport { DimensionSubtype, FieldType, MeasureSubtype, DateTimeFormatter } from 'datamodel';\n\n","export const DRAG = 'drag';\nexport const HOVER = 'hover';\nexport const SELECTIONDRAG = 'selectiondrag';\nexport const CLICK = 'click';\nexport const LONGTOUCH = 'longtouch';\nexport const TOUCHDRAG = 'touchdrag';\nexport const ALL_ACTIONS = '*';\n","const SELECTION_NEW_ENTRY = 1;\nconst SELECTION_NEW_EXIT = -1;\nconst SELECTION_NULL = 0;\nconst SELECTION_OLD_ENTRY = 2;\nconst SELECTION_OLD_EXIT = -2;\n\nexport {\n    SELECTION_NEW_ENTRY,\n    SELECTION_NEW_EXIT,\n    SELECTION_NULL,\n    SELECTION_OLD_ENTRY,\n    SELECTION_OLD_EXIT\n};\n","import SelectionSet from './selection-set';\n\nexport default SelectionSet;\n","import {\n    SELECTION_NEW_ENTRY, SELECTION_NEW_EXIT, SELECTION_NULL, SELECTION_OLD_ENTRY, SELECTION_OLD_EXIT\n} from '../enums/selection';\n/* eslint-disable guard-for-in */\n\n/**\n * This component is used to keep track of the row tuples of the data which gets added and removed. This keeps\n * information of which rows are in previous and new entry set and previous and new exit set. This is initialized by\n * {@link Firebolt}.\n *\n * @public\n *\n * @class SelectionSet\n */\nclass SelectionSet {\n    /**\n     * Creates an instance of selection set\n     *\n     * @param {Array.<string>} completeSet Set of unique ids.\n     */\n    constructor (completeSet, _volatile) {\n        this.completeSet = completeSet;\n        this._set = completeSet.reduce((obj, key) => {\n            obj[key] = SELECTION_NULL;\n            return obj;\n        }, {});\n        this._volatile = _volatile;\n        this._completeSetCount = completeSet.length;\n        this._lockedSelection = {};\n        this._resetted = true;\n    }\n\n    /**\n     * Adds a set of ids to the selection set. This also moves the other rows to exit set.\n     *\n     * @public\n     * @param {Array.<number|string>} ids Array of unique ids.\n     *\n     * @return {SelectionSet} Instance of selection set.\n     */\n    add (ids) {\n        this._resetted = false;\n\n        const set = this._set;\n        // from exitset to entryset\n        ids.forEach((i) => {\n            set[i] = SELECTION_NEW_ENTRY;\n        });\n\n        for (const key in set) {\n            if (set[key] !== SELECTION_NEW_ENTRY && set[key] !== SELECTION_OLD_ENTRY) {\n                set[key] = set[key] < 0 ? SELECTION_OLD_EXIT : SELECTION_NEW_EXIT;\n            }\n        }\n        return this;\n    }\n\n    /**\n     * Adds an array of ids to the old entry set.\n     *\n     * @param {Array.<number|string>} ids Array of unique ids\n     *\n     * @return {SelectionSet} Instance of selection set.\n     */\n    update (ids) {\n        const set = this._set;\n        // from exitset to entryset\n        ids.forEach((i) => {\n            set[i] = SELECTION_OLD_ENTRY;\n        });\n\n        return this;\n    }\n\n    /**\n     * Moves all ids which in new entry set  to old entry set.\n     *\n     * @public\n     * @param {Array.<number|string>} ids Array of unique ids\n     *\n     * @return {SelectionSet} Instance of selection set.\n     */\n    updateEntry () {\n        const set = this._set;\n\n        // from exitset to entryset\n        for (const key in set) {\n            set[key] = set[key] === SELECTION_NEW_ENTRY ? SELECTION_OLD_ENTRY : set[key];\n        }\n        return this;\n    }\n\n    /**\n     * Moves an array of ids which are in new exit set to old exit set.\n     *\n     * @public\n     *\n     * @param {Array.<number|string>} ids Array of unique ids.\n     *\n     * @return {SelectionSet} Instance of selection set.\n     */\n    updateExit () {\n        const set = this._set;\n        // from exitset to entryset\n        for (const key in set) {\n            set[key] = set[key] === SELECTION_NEW_EXIT ? SELECTION_OLD_EXIT : set[key];\n        }\n        return this;\n    }\n\n    /**\n     * Removes an array of ids from the selection set. It also moves the remaining row ids to entry set.\n     *\n     * @public\n     * @param {Array.<string>} ids Array of unique ids\n     *\n     * @return {SelectionSet}  Instance of selection set\n     */\n    remove (ids) {\n        this._resetted = false;\n\n        const set = this._set;\n        ids.forEach((i) => {\n            set[i] = SELECTION_NEW_EXIT;\n        });\n\n        for (const key in set) {\n            if (set[key] !== SELECTION_NEW_EXIT && set[key] !== SELECTION_OLD_EXIT) {\n                set[key] = set[key] === 0 ? SELECTION_NEW_ENTRY : SELECTION_OLD_ENTRY;\n            }\n        }\n\n        return this;\n    }\n\n    getSets () {\n        const set = this._set;\n        const retObj = {\n            entrySet: [[], []],\n            exitSet: [[], []],\n            completeSet: []\n        };\n\n        for (const key in set) {\n            if (set[key] > 0) {\n                set[key] === SELECTION_OLD_ENTRY && retObj.entrySet[0].push(key);\n                set[key] === SELECTION_NEW_ENTRY && retObj.entrySet[1].push(key);\n            } else if (set[key] < 0) {\n                set[key] === SELECTION_OLD_EXIT && retObj.exitSet[0].push(key);\n                set[key] === SELECTION_NEW_EXIT && retObj.exitSet[1].push(key);\n            }\n            retObj.completeSet.push(key);\n        }\n\n        ['entrySet', 'exitSet'].forEach((type) => {\n            retObj[type] = retObj[type].map(e => e.map(Number));\n        });\n        retObj.completeSet = retObj.completeSet.map(Number);\n\n        return retObj;\n    }\n\n    /**\n     * Resets an array of ids in the selection set to initial state. It sets the value of every unique id value to\n     * null in the selection set which means they are neither in entry set nor in exit set. If no ids are passed,\n     * then it resets all the ids to null.\n     *\n     * @public\n     *\n     * @param {Array} ids Array of unique ids.\n     * @return {SelectionSet} Instance of selection set.\n     */\n    reset (ids) {\n        const set = this._set;\n        if (ids) {\n            ids.forEach((i) => {\n                set[i] = SELECTION_NULL;\n            });\n        } else {\n            const lockedSel = this._lockedSelection;\n            for (const key in set) {\n                if (!(key in lockedSel)) {\n                    set[key] = SELECTION_NULL;\n                }\n            }\n        }\n        this._resetted = true;\n        return this;\n    }\n\n    /**\n     * Gets the set of ids which are added in the selection set.\n     *\n     * @public\n     *\n     * @return {Array.<string>} Array of unique ids\n     */\n    getEntrySet () {\n        const set = this._set;\n        const addSet = [];\n\n        for (const key in set) {\n            set[key] === SELECTION_NEW_ENTRY && addSet.push(key);\n        }\n\n        return addSet;\n    }\n\n    /**\n     * Returns a set of unique ids which are already present in entry set.\n     *\n     * @public\n     * @param {Array} addSet Array of unique ids which are added\n     *\n     * @return {Array} Array of unique ids which are already in old entry set or new entry set\n     */\n    getExistingEntrySet (addSet) {\n        const set = this._set;\n        return addSet.filter(d => set[d] === SELECTION_NEW_ENTRY || set[d] === SELECTION_OLD_ENTRY);\n    }\n\n    /**\n     * Returns a set of unique ids which are already present in exit set.\n     *\n     * @public\n     * @param {Array} addSet Array of unique ids which are added\n     *\n     * @return {Array} Array of unique ids which are already in old exit set or new exit set\n     */\n    getExistingExitSet (removeSet) {\n        const set = this._set;\n        return removeSet.filter(d => set[d] === SELECTION_NEW_EXIT || set[d] === SELECTION_OLD_EXIT);\n    }\n\n    /**\n     * Gets the set of ids which are added in the selection set.\n     * @return {Array.<string>} Array of unique ids\n     */\n    getOldEntry () {\n        const set = this._set;\n        const updateSet = [];\n\n        for (const key in set) {\n            set[key] === SELECTION_OLD_ENTRY && updateSet.push(key);\n        }\n        return updateSet;\n    }\n\n    /**\n     * Gets the set of ids which are added in the selection set.\n     * @return {Array.<string>} Array of unique ids\n     */\n    getOldExit () {\n        const set = this._set;\n        const updateSet = [];\n\n        for (const key in set) {\n            set[key] === SELECTION_OLD_EXIT && updateSet.push(key);\n        }\n\n        return updateSet;\n    }\n\n    /**\n     * Gets the array of ids which are in the exit set.\n     *\n     * @public\n     * @return {Array.<string>} Array of unique ids\n     */\n    getExitSet () {\n        const set = this._set;\n        const removeSet = [];\n\n        for (const key in set) {\n            set[key] === SELECTION_NEW_EXIT && removeSet.push(key);\n        }\n        return removeSet;\n    }\n\n    /**\n     * Gets all the ids which are either in exit or entry set.\n     *\n     * @public\n     * @return {Array} Array of unique ids\n     */\n    getCompleteSet () {\n        const set = this._set;\n        const completeSet = [];\n\n        for (const key in set) {\n            completeSet.push(key);\n        }\n\n        return completeSet;\n    }\n\n    getCompleteSetCount () {\n        return this._completeSetCount;\n    }\n\n    resetted () {\n        return this._resetted;\n    }\n\n    /**\n     * Swaps the add set and remove set in the selection set.\n     * @return {SelectionSet} Instance of selection set.\n     */\n    toggle () {\n        const set = this._set;\n\n        for (const key in set) {\n            if (set[key] === SELECTION_NEW_ENTRY) {\n                set[key] = SELECTION_NEW_EXIT;\n            } else if (set[key] === SELECTION_NEW_EXIT) {\n                set[key] = SELECTION_NEW_ENTRY;\n            } else if (set[key] === SELECTION_OLD_ENTRY) {\n                set[key] = SELECTION_OLD_EXIT;\n            } else {\n                set[key] = SELECTION_OLD_ENTRY;\n            }\n        }\n\n        return this;\n    }\n}\n\nexport default SelectionSet;\n","import { clone } from 'muze-utils';\nimport * as SELECTION from '../enums/selection';\n\nexport const initializeSideEffects = (context, sideEffects) => {\n    const sideEffectsMap = context._sideEffects;\n    const config = context.config();\n    sideEffects = sideEffects instanceof Array ? sideEffects : Object.values(sideEffects);\n    sideEffects.forEach((SideEffect) => {\n        const formalName = SideEffect.formalName();\n        const sideEffectInstance = sideEffectsMap[formalName];\n        sideEffectsMap[formalName] = sideEffectInstance || new SideEffect(context);\n        const sideEffectConf = config[formalName];\n        sideEffectConf && sideEffectsMap[formalName].config(sideEffectConf);\n    });\n    return sideEffectsMap;\n};\n\nexport const initializeBehaviouralActions = (context, actions) => {\n    const dispatchableBehaviours = {};\n\n    actions = actions instanceof Array ? actions : Object.values(actions);\n    actions.forEach((Action) => {\n        dispatchableBehaviours[Action.formalName()] = new Action(context);\n    });\n    return dispatchableBehaviours;\n};\n\nexport const initializePhysicalActions = (context, actions) => {\n    const physicalActions = {};\n\n    for (const name in actions) {\n        if (!({}).hasOwnProperty.call(name, actions)) {\n            physicalActions[name] = actions[name](context);\n        }\n    }\n    return physicalActions;\n};\n\nexport const changeSideEffectAvailability = (context, fn, toEnable) => {\n    const sideEffects = context.sideEffects();\n    for (const key in sideEffects) {\n        if ({}.hasOwnProperty.call(sideEffects, key)) {\n            let change = true;\n            if (fn && fn(key) === false) {\n                change = false;\n            }\n            if (change) {\n                toEnable ? sideEffects[key].enable() : sideEffects[key].disable();\n            }\n        }\n    }\n};\n\nexport const getMergedSet = set => [...new Set([...set[0], ...set[1]])];\n\nexport const getSourceFields = (propagationInf, criteria = {}) => {\n    const sourceIdentifiers = propagationInf.sourceIdentifiers;\n    let sourceFields;\n    if (sourceIdentifiers) {\n        sourceFields = sourceIdentifiers.getSchema().map(d => d.name);\n    } else if (criteria instanceof Array) {\n        sourceFields = criteria[0];\n    } else {\n        sourceFields = Object.keys(criteria || {});\n    }\n    return sourceFields;\n};\n\nconst conditionsMap = {\n    newEntry: [SELECTION.SELECTION_NEW_ENTRY],\n    oldEntry: [SELECTION.SELECTION_OLD_ENTRY],\n    mergedEnter: [SELECTION.SELECTION_NEW_ENTRY, SELECTION.SELECTION_OLD_ENTRY],\n    newExit: [SELECTION.SELECTION_NEW_EXIT],\n    oldExit: [SELECTION.SELECTION_OLD_EXIT],\n    mergedExit: [SELECTION.SELECTION_NEW_EXIT, SELECTION.SELECTION_OLD_EXIT],\n    complete: []\n};\n\nexport const getModelFromSet = (type, model, set) => {\n    if (model) {\n        return model.select((fields, i) =>\n           (conditionsMap[type].some(condition => set[i] === condition)), {\n               saveChild: false\n           });\n    }\n    return null;\n};\n\nexport const getSetInfo = (type, set, config) => {\n    let model = null;\n    const filteredDataModel = config.filteredDataModel;\n    const selectionSet = config.selectionSet;\n    if (!config.propagationData) {\n        if (selectionSet.resetted()) {\n            model = null;\n        } else {\n            model = getModelFromSet(type, config.dataModel, config.selectionSet._set);\n        }\n    } else if (filteredDataModel) {\n        model = type === 'mergedEnter' ? filteredDataModel[0] : filteredDataModel[1];\n    }\n    return {\n        uids: set,\n        length: set.length,\n        model\n    };\n};\n\nexport const getSideEffects = (behaviour, behaviourEffectMap) => {\n    const sideEffects = [];\n    for (const key in behaviourEffectMap) {\n        const behaviours = key.split(',');\n        const found = behaviours.some(d => d === behaviour);\n        if (found) {\n            sideEffects.push({\n                effects: behaviourEffectMap[key],\n                behaviours\n            });\n        }\n    }\n    return sideEffects;\n};\n\nexport const unionSets = (context, behaviours) => {\n    let combinedSet = {};\n    const models = {\n        mergedEnter: null,\n        mergedExit: null\n    };\n    behaviours.forEach((behaviour) => {\n        const entryExitSet = context._entryExitSet[behaviour];\n        if (entryExitSet) {\n            combinedSet = Object.assign(combinedSet, clone(entryExitSet));\n            ['mergedEnter', 'mergedExit'].forEach((type) => {\n                const model = entryExitSet[type].model;\n                let existingModel = models[type];\n                if (!existingModel) {\n                    existingModel = models[type] = model;\n                } else if (`${model.getSchema().map(d => d.name).sort()}` ===\n                    `${existingModel.getSchema().map(d => d.name).sort()}`) {\n                    existingModel = models[type] = model.union(existingModel);\n                } else {\n                    existingModel = model;\n                }\n                combinedSet[type].model = existingModel;\n            });\n        }\n    });\n    return combinedSet;\n};\n","import {\n    mergeRecursive,\n    hasTouch,\n    filterPropagationModel,\n    FieldType,\n    selectElement,\n    isSimpleObject\n} from 'muze-utils';\nimport { ALL_ACTIONS } from './enums/actions';\nimport SelectionSet from './selection-set';\nimport {\n    initializeBehaviouralActions,\n    initializeSideEffects,\n    changeSideEffectAvailability,\n    initializePhysicalActions,\n    unionSets,\n    getSideEffects\n} from './helper';\n\n/**\n * This class is responsible for dispatching behavioural actions and side effects. It also keeps the information of\n * registered physical actions, behavioural actions and side effects. Also, it keeps the map of physical and behavioural\n * actions and behavioural actions and side effects. Whenever any behavioural action is dispatched, it also propagates\n * the rows which got affected to the other datamodels. This class is initialized by {@link VisualUnit} and legend to\n * manage it's interaction.\n *\n * @public\n * @class Firebolt\n * @module Firebolt\n */\nexport default class Firebolt {\n    constructor (context, actions, sideEffects, behaviourEffectMap) {\n        this.context = context;\n        this._sideEffectDefinitions = {};\n        this._sideEffects = {};\n        this._propagationInf = {};\n        this._actions = {\n            behavioural: {},\n            physical: {}\n        };\n        this._selectionSet = {};\n        this._volatileSelectionSet = {};\n        this._propagationFields = {};\n        this._sourceSideEffects = {\n            selectionBox: () => false\n        };\n        this._propagationBehaviourMap = {};\n        this._sourceBehaviours = {};\n        this._actionBehaviourMap = {};\n        this._config = {};\n        this._behaviourEffectMap = {};\n        this._entryExitSet = {};\n        this._actionHistory = {};\n        this._queuedSideEffects = {};\n\n        this.mapSideEffects(behaviourEffectMap);\n        this.registerBehaviouralActions(actions.behavioural);\n        this.registerSideEffects(sideEffects);\n        this.registerPhysicalBehaviouralMap(actions.physicalBehaviouralMap);\n        this.registerPhysicalActions(actions.physical);\n    }\n\n    config (...config) {\n        if (config.length) {\n            this._config = mergeRecursive(this._config, config[0]);\n            return this;\n        }\n        return this._config;\n    }\n\n    mapSideEffects (behEffectMap) {\n        const behaviourEffectMap = this._behaviourEffectMap;\n        for (const key in behEffectMap) {\n            if ({}.hasOwnProperty.call(behEffectMap, key)) {\n                const sideEffects = behEffectMap[key] || [];\n                let preventDefaultActions = false;\n                let effectNames;\n                if (isSimpleObject(sideEffects)) {\n                    effectNames = sideEffects.effects;\n                    preventDefaultActions = sideEffects.preventDefaultActions;\n                } else {\n                    effectNames = sideEffects;\n                }\n                !behaviourEffectMap[key] && (behaviourEffectMap[key] = []);\n                this._behaviourEffectMap[key] = [...new Set(preventDefaultActions ? effectNames :\n                    [...behaviourEffectMap[key], ...effectNames])];\n            }\n        }\n        return this;\n    }\n\n    registerBehaviouralActions (actions) {\n        const behaviours = initializeBehaviouralActions(this, actions);\n        this.prepareSelectionSets(behaviours);\n        Object.assign(this._actions.behavioural, behaviours);\n        return this;\n    }\n\n    prepareSelectionSets () {\n        return this;\n    }\n\n    registerSideEffects (sideEffects) {\n        for (const key in sideEffects) {\n            this._sideEffectDefinitions[sideEffects[key].formalName()] = sideEffects[key];\n        }\n        this.initializeSideEffects();\n        return this;\n    }\n\n    applySideEffects (sideEffects, selectionSet, payload) {\n        const sideEffectStore = this.sideEffects();\n        const actionHistory = this._actionHistory;\n        const queuedSideEffects = this._queuedSideEffects;\n        sideEffects.forEach((sideEffect) => {\n            let options;\n            let name;\n            const effects = sideEffect.effects;\n            const behaviours = sideEffect.behaviours;\n            const combinedSet = unionSets(this, behaviours, selectionSet);\n            effects.forEach((effect) => {\n                if (typeof effect === 'object') {\n                    name = effect.name;\n                    options = effect.options;\n                } else {\n                    name = effect;\n                }\n\n                const sideEffectInstance = sideEffectStore[name];\n                if (sideEffectInstance.isEnabled()) {\n                    if (!sideEffectInstance.constructor.mutates() &&\n                        Object.values(actionHistory).some(d => d.isMutableAction)) {\n                        queuedSideEffects[`${name}-${behaviours.join()}`] = {\n                            name,\n                            params: [combinedSet, payload, options]\n                        };\n                    } else {\n                        this.dispatchSideEffect(name, combinedSet, payload, options);\n                    }\n                }\n            });\n        });\n        return this;\n    }\n\n    dispatchSideEffect (name, selectionSet, payload, options = {}) {\n        const sideEffectStore = this.sideEffects();\n        const sideEffect = sideEffectStore[name];\n        let disable = false;\n        if (options.filter && options.filter(sideEffect)) {\n            disable = true;\n        }\n        !disable && sideEffectStore[name].apply(selectionSet, payload, options);\n    }\n\n    registerPropagationBehaviourMap (map) {\n        this._propagationBehaviourMap = Object.assign(this._propagationBehaviourMap, map || {});\n        return this;\n    }\n\n    dispatchBehaviour (behaviour, payload, propagationInfo = {}) {\n        const propagate = propagationInfo.propagate !== undefined ? propagationInfo.propagate : true;\n        const behaviouralActions = this._actions.behavioural;\n        const action = behaviouralActions[behaviour];\n        const behaviourEffectMap = this._behaviourEffectMap;\n        const sideEffects = getSideEffects(behaviour, behaviourEffectMap);\n        this._propagationInf = propagationInfo;\n\n        if (action) {\n            const selectionSet = action.dispatch(payload);\n            const propagationSelectionSet = this.getPropagationSelectionSet(selectionSet);\n            this._entryExitSet[behaviour] = propagationSelectionSet;\n            const shouldApplySideEffects = this.shouldApplySideEffects(propagate);\n\n            if (propagate) {\n                this.propagate(behaviour, payload, selectionSet.find(d => d.sourceSelectionSet), sideEffects);\n            }\n            if (shouldApplySideEffects) {\n                const applicableSideEffects = this.getApplicableSideEffects(sideEffects, payload, propagationInfo);\n                this.applySideEffects(applicableSideEffects, propagationSelectionSet, payload);\n            }\n        }\n\n        return this;\n    }\n\n    getPropagationSelectionSet (selectionSet) {\n        return selectionSet.find(d => !d.sourceSelectionSet);\n    }\n\n    shouldApplySideEffects () {\n        return true;\n    }\n\n    changeBehaviourStateOnPropagation (behaviour, value) {\n        if (value instanceof Function) {\n            this._sourceBehaviours[behaviour] = value;\n        } else {\n            this._sourceBehaviours[behaviour] = () => value;\n        }\n        return this;\n    }\n\n    changeSideEffectStateOnPropagation (sideEffect, value) {\n        if (value instanceof Function) {\n            this._sourceSideEffects[sideEffect] = value;\n        } else {\n            this._sourceSideEffects[sideEffect] = () => value;\n        }\n    }\n\n    propagate () {\n        return this;\n    }\n\n    sideEffects (...sideEffects) {\n        if (sideEffects.length) {\n            this._sideEffects = sideEffects[0];\n            return this;\n        }\n        return this._sideEffects;\n    }\n\n    enableSideEffects (fn) {\n        changeSideEffectAvailability(this, fn, true);\n        return this;\n    }\n\n    disableSideEffects (fn) {\n        changeSideEffectAvailability(this, fn, false);\n        return this;\n    }\n\n    dissociateBehaviour (behaviour, physicalAction) {\n        const actionBehaviourMap = this._actionBehaviourMap;\n        for (const key in actionBehaviourMap) {\n            if (key === physicalAction) {\n                const behaviourMap = actionBehaviourMap[key];\n                behaviourMap.behaviours = behaviourMap.behaviours.filter(d => d !== behaviour);\n                this.mapActionsAndBehaviour(key);\n            }\n        }\n\n        return this;\n    }\n\n    dissociateSideEffect (sideEffect, behaviour) {\n        const behaviourEffectMap = this._behaviourEffectMap;\n        behaviourEffectMap[behaviour] = behaviourEffectMap[behaviour].filter(d => (d.name || d) !== sideEffect);\n        return this;\n    }\n\n    getApplicableSideEffects (sideEffects) {\n        return sideEffects;\n    }\n\n    attachPropagationListener (dataModel) {\n        dataModel.unsubscribe('propagation');\n        dataModel.on('propagation', this.onDataModelPropagation());\n        return this;\n    }\n\n    onDataModelPropagation () {\n        return (propValue) => {\n            const payload = propValue.payload;\n            const action = payload.action;\n\n            this.dispatchBehaviour(action, payload, {\n                propagate: false\n            });\n        };\n    }\n\n    createSelectionSet (uniqueIds, behaviouralActions) {\n        const behaviours = behaviouralActions || this._actions.behavioural;\n        const selectionSet = this._selectionSet;\n        const volatileSelectionSet = this._volatileSelectionSet;\n\n        for (const key in behaviours) {\n            if ({}.hasOwnProperty.call(behaviours, key)) {\n                selectionSet[key] = new SelectionSet(uniqueIds);\n                volatileSelectionSet[key] = new SelectionSet(uniqueIds, true);\n            }\n        }\n        this._volatileSelectionSet = volatileSelectionSet;\n        this.selectionSet(selectionSet);\n        return this;\n    }\n\n    selectionSet (...selectionSet) {\n        if (selectionSet.length) {\n            this._selectionSet = selectionSet[0];\n            return this;\n        }\n        return this._selectionSet;\n    }\n\n    initializeSideEffects () {\n        const sideEffectDefinitions = this._sideEffectDefinitions;\n        this.sideEffects(initializeSideEffects(this, sideEffectDefinitions));\n        return this;\n    }\n\n    registerPhysicalActions (actions) {\n        const initedActions = initializePhysicalActions(this, actions);\n        Object.assign(this._actions.physical, initedActions);\n        return this;\n    }\n\n    /**\n     * Allows to propagate the datamodel with only the supplied fields. When propagation is done, then the fields\n     * which are supplied for the specified behavioural action is propagated.\n     *\n     * @public\n     *\n     * @param {string} action Name of behavioural action. If '*' is specified, then for all behavioural actions it is\n     * applied.\n     * @param {Array} fields Array of field names which will be propagated.\n     * @param {boolean} append If true, then it is appended to the existing propagation data model fields else only\n     * those fields are projected from propagation data model and propagated.\n     *\n     * @return {Firebolt} Instance of firebolt\n     */\n    propagateWith (action, fields, append = false) {\n        const behaviouralActions = this._actions.behavioural;\n        if (fields.length) {\n            if (action === ALL_ACTIONS) {\n                for (const key in behaviouralActions) {\n                    this._propagationFields[key] = {\n                        fields,\n                        append\n                    };\n                }\n            } else {\n                this._propagationFields[action] = {\n                    fields,\n                    append\n                };\n            }\n            return this;\n        }\n        return this._propagationFields;\n    }\n\n    /**\n     * Map actions and behaviours\n     * @return {Firebolt} Firebolt instance\n     */\n    mapActionsAndBehaviour (phyAction) {\n        const initedPhysicalActions = this._actions.physical;\n        const map = this._actionBehaviourMap;\n\n        for (const action in map) {\n            if (!({}).hasOwnProperty.call(action, map) && action === (phyAction || action)) {\n                let target;\n                const mapObj = map[action];\n                target = mapObj.target;\n                const touch = mapObj.touch;\n                if (!target) {\n                    target = this.context.getDefaultTargetContainer();\n                }\n                const bind = hasTouch() ? touch === true || touch === undefined : !touch;\n                bind && this.bindActionWithBehaviour(initedPhysicalActions[action],\n                    target, mapObj.behaviours);\n            }\n        }\n        return this;\n    }\n\n    registerPhysicalBehaviouralMap (map) {\n        this._actionBehaviourMap = mergeRecursive(this._actionBehaviourMap, map);\n        return this;\n    }\n\n    /**\n     * Binds a target element with an action.\n     *\n     * @param {Function} action Action method\n     * @param {string} target Class name of element\n     * @param {Array} behaviourList Array of behaviours\n     * @return {FireBolt} Instance of firebolt\n     */\n    bindActionWithBehaviour (action, targets, behaviourList) {\n        if (typeof (targets) === 'string') {\n            targets = [targets];\n        }\n        targets.forEach((target) => {\n            const mount = this.context.mount();\n            const nodes = target.node instanceof Function ? target : selectElement(mount).selectAll(target);\n            if (!nodes.empty()) {\n                if (nodes instanceof Array) {\n                    nodes.forEach((node) => {\n                        action(selectElement(node), behaviourList);\n                    });\n                } else {\n                    action(nodes, behaviourList);\n                }\n            }\n        });\n        return this;\n    }\n\n    getPropagationInf () {\n        return this._propagationInf;\n    }\n\n    getAddSetFromCriteria (criteria, propagationInf = {}) {\n        const context = this.context;\n        const filteredDataModel = propagationInf.data ? propagationInf.data :\n            context.getDataModelFromIdentifiers(criteria, 'all');\n        const xFields = context.fields().x || [];\n        const yFields = context.fields().y || [];\n        const xMeasures = xFields.every(field => field.type() === FieldType.MEASURE);\n        const yMeasures = yFields.every(field => field.type() === FieldType.MEASURE);\n        return {\n            model: filteredDataModel,\n            uids: criteria === null ? null : (propagationInf.data ? filterPropagationModel(this.getFullData(),\n                propagationInf.data[0], xMeasures && yMeasures).getData().uids : filteredDataModel[0].getData().uids)\n        };\n    }\n\n    getSelectionSets (action) {\n        const sourceId = this.context.id();\n        const propagationInf = this._propagationInf || {};\n        const propagationSource = propagationInf.sourceId;\n        let applicableSelectionSets = [];\n        if (propagationSource !== sourceId) {\n            applicableSelectionSets = [this._volatileSelectionSet[action]];\n        }\n\n        if (propagationSource) {\n            applicableSelectionSets.push(this.selectionSet()[action]);\n        }\n        return applicableSelectionSets;\n    }\n\n    getFullData () {\n        return this.context.data();\n    }\n\n    resetted () {\n        return this._resetted;\n    }\n\n    /**\n     * Returns the entry and exit set information of the specified behavioural action.\n     *\n     * @public\n     *\n     * @param {string} behaviour Name of behavioural action.\n     *\n     * @return {Object} Entry exit set information.\n     */\n    getEntryExitSet (behaviour) {\n        return this._entryExitSet[behaviour];\n    }\n}\n","import { getSetInfo, getMergedSet, getSourceFields } from '../../helper';\n\n/**\n * This is the base class has all the common functionalities needed for all behavioural actions. Any other behavioural\n * action needs to extend this class.\n *\n * @public\n * @class GenericBehaviour\n * @module GenericBehaviour\n */\nexport default class GenericBehaviour {\n    constructor (firebolt) {\n        this.firebolt = firebolt;\n        this._enabled = true;\n    }\n\n    /**\n     * Returns entry and exit set information. This method is called by firebolt when ```dispatchBehaviour``` is called\n     * dynamically or when any physical action is triggered on the chart.\n     *\n     * @param {Object} payload Payload information.\n     * @param {Object|Array} payload.criteria Identifiers of data interacted with.\n     *\n     * @return {Array} Entry and exit set information.\n     */\n    dispatch (payload) {\n        const criteria = payload.criteria;\n        const firebolt = this.firebolt;\n        const formalName = this.constructor.formalName();\n        const selectionSets = firebolt.getSelectionSets(formalName);\n        const {\n            model: filteredDataModel,\n            uids\n        } = this.firebolt.getAddSetFromCriteria(criteria, this.firebolt.getPropagationInf());\n        const entryExitSets = selectionSets.map((selectionSet) => {\n            this.setSelectionSet(uids, selectionSet);\n            return this.getEntryExitSet(selectionSet, filteredDataModel, payload);\n        });\n\n        return entryExitSets;\n    }\n\n    /**\n     * Updates the selection set by adding uids to the instance of {@link SelectionSet} or removing them.\n     * {@link SelectionSet} keeps the information of which rows are in the entry set and exit set.\n     *\n     * @public\n     * @param {Array} addSet Array of row ids which got affected during interaction.\n     * @param {SelectionSet} selectionSet Instance of selection set.\n     *\n     * @return {GenericBehaviour} Instance of behaviour.\n     */\n    setSelectionSet () {\n        return this;\n    }\n\n    getEntryExitSet (selectionSet, filteredDataModel, payload) {\n        const {\n            entrySet,\n            exitSet,\n            completeSet\n        } = selectionSet.getSets();\n        const propagationInf = this.firebolt.getPropagationInf();\n        const dataModel = this.firebolt.getFullData();\n        const setConfig = {\n            isSourceFieldPresent: propagationInf.isSourceFieldPresent,\n            dataModel,\n            filteredDataModel,\n            propagationData: propagationInf.data,\n            selectionSet\n        };\n\n        return {\n            entrySet: [getSetInfo('oldEntry', entrySet[0], setConfig),\n                getSetInfo('newEntry', entrySet[1], setConfig)],\n            exitSet: [getSetInfo('oldEntry', exitSet[0], setConfig),\n                getSetInfo('newExit', exitSet[1], setConfig)],\n            mergedEnter: getSetInfo('mergedEnter', getMergedSet(entrySet), setConfig),\n            mergedExit: getSetInfo('mergedExit', getMergedSet(exitSet), setConfig),\n            completeSet: getSetInfo('complete', completeSet, setConfig),\n            isSourceFieldPresent: propagationInf.isSourceFieldPresent,\n            fields: getSourceFields(propagationInf, payload.criteria),\n            sourceSelectionSet: selectionSet._volatile === true\n        };\n    }\n\n    static mutates () {\n        return false;\n    }\n\n    enable () {\n        this._enabled = true;\n    }\n\n    disable () {\n        this._enabled = false;\n    }\n\n    isEnabled () {\n        return this._enabled;\n    }\n}\n\n","import GenericBehaviour from './generic';\nimport { getMergedSet } from '../../helper';\nimport * as SELECTION from '../../enums/selection';\n\nexport default class VolatileBehaviour extends GenericBehaviour {\n    setSelectionSet (addSet, selectionSet) {\n        if (addSet === null) {\n            selectionSet.reset();\n        } else if (addSet.length) {\n                // new add set\n            const existingAddSet = addSet.filter(d => selectionSet._set[d] === SELECTION.SELECTION_NEW_ENTRY\n                    || selectionSet._set[d] === SELECTION.SELECTION_OLD_ENTRY);\n            selectionSet.updateExit();\n            const { entrySet } = selectionSet.getSets();\n            selectionSet.reset(getMergedSet(entrySet));\n            selectionSet.add(addSet);\n            selectionSet.update(existingAddSet);\n        } else {\n            selectionSet.remove(selectionSet.getCompleteSet());\n        }\n    }\n}\n","export const BRUSH = 'brush';\nexport const HIGHLIGHT = 'highlight';\nexport const TOOLTIP = 'tooltip';\nexport const FILTER = 'filter';\nexport const SELECT = 'select';\n","import VolatileBehaviour from './volatile';\nimport { HIGHLIGHT } from '../../enums/behaviours';\n\nexport default class HighlightBehaviour extends VolatileBehaviour {\n    static formalName () {\n        return HIGHLIGHT;\n    }\n}\n","import VolatileBehaviour from './volatile';\nimport * as BEHAVIOURNAMES from '../../enums/behaviours';\n\n/**\n * This is the behaviour for brushing a region on the chart. It accepts a payload\n * which contains the x and y range of the data and other configuration. It will then\n * create a selection box from the range and select the points which fall within the range.\n */\nexport default class BrushBehaviour extends VolatileBehaviour {\n    static formalName () {\n        return BEHAVIOURNAMES.BRUSH;\n    }\n}\n","import VolatileBehaviour from './volatile';\nimport { FILTER } from '../../enums/behaviours';\n\nexport default class FilterBehaviour extends VolatileBehaviour {\n    static formalName () {\n        return FILTER;\n    }\n\n    static mutates () {\n        return true;\n    }\n}\n","import GenericBehaviour from './generic';\nimport { getMergedSet } from '../../helper';\nimport * as SELECTION from '../../enums/selection';\n\nexport default class PersistentBehaviour extends GenericBehaviour {\n    setSelectionSet (addSet, selectionSet) {\n        if (addSet === null) {\n            selectionSet.reset();\n        } else if (addSet.length) {\n            const propagationInf = this.firebolt.getPropagationInf();\n            // new add set\n            const existingAddSet = addSet.filter(d => selectionSet._set[d] === SELECTION.SELECTION_NEW_ENTRY\n                || selectionSet._set[d] === SELECTION.SELECTION_OLD_ENTRY);\n            if (propagationInf.propagate === false) {\n                selectionSet.updateExit();\n                const { entrySet } = selectionSet.getSets();\n                selectionSet.reset(getMergedSet(entrySet));\n                selectionSet.add(addSet);\n                selectionSet.update(existingAddSet);\n            } else {\n                // existing add set\n                if (existingAddSet.length) {\n                    selectionSet.updateExit();\n                    selectionSet.remove(existingAddSet);\n                } else {\n                    selectionSet.updateEntry();\n                    selectionSet.add(addSet);\n                }\n                const { exitSet } = selectionSet.getSets();\n                const mergedExitSet = getMergedSet(exitSet);\n                const completeSetCount = selectionSet.getCompleteSet().length;\n                if (mergedExitSet.length === completeSetCount) {\n                    selectionSet.reset();\n                }\n            }\n        } else {\n            selectionSet.remove(selectionSet.getCompleteSet());\n        }\n\n        return this;\n    }\n}\n","import PersistentBehaviour from './persistent';\nimport { SELECT } from '../../enums/behaviours';\n\nexport default class SelectBehaviour extends PersistentBehaviour {\n    static formalName () {\n        return SELECT;\n    }\n}\n\n","import { DimensionSubtype, MeasureSubtype } from 'muze-utils';\n/**\n * Gets the drag action configuration\n * @param {VisualUnit} instance instance of visual unit\n * @param {Object} config x y positions\n * @return {Object} Payload of behaviour\n*/\n/* istanbul ignore next */ const getDragActionConfig = (sourceInfo, config, fieldsConfig) => {\n    if (!(sourceInfo.axes.x || sourceInfo.axes.y)) {\n        return {\n            criteria: null\n        };\n    }\n\n    const axes = sourceInfo.axes;\n    const xAxis = axes.x[0];\n    const yAxis = axes.y[0];\n    const axisFields = sourceInfo.fields;\n    const xField = axisFields.x[0].getMembers()[0];\n    const yField = axisFields.y[0].getMembers()[0];\n    const xFieldType = fieldsConfig[xField].def.subtype;\n    const yFieldType = fieldsConfig[yField].def.subtype;\n    const dimensions = {};\n    const stPos = config.startPos;\n    const endPos = config.endPos;\n\n    if (stPos.x === endPos.x && stPos.y === endPos.y) {\n        return {\n            criteria: null\n        };\n    }\n\n    const dragDim = xFieldType === MeasureSubtype.CONTINUOUS ? (yFieldType === MeasureSubtype.CONTINUOUS ?\n        ['x', 'y'] : ['y']) : ['x'];\n    const criteria = {};\n    const isXDimension = xFieldType === DimensionSubtype.CATEGORICAL;\n    const isYDimension = yFieldType === DimensionSubtype.CATEGORICAL;\n    const xRange = xAxis.invertExtent(stPos.x, endPos.x);\n    const yRange = yAxis.invertExtent(stPos.y, endPos.y);\n    const selectedDomains = {\n        x: stPos.x === endPos.x ? [] : (isXDimension ? xRange : xRange.sort((a, b) => a - b)),\n        y: stPos.y === endPos.y ? [] : (isYDimension ? yRange : yRange.sort((a, b) => a - b))\n    };\n    const rangeObj = {};\n\n    if (dragDim.length === 2) {\n        rangeObj[xField] = selectedDomains.x;\n        rangeObj[yField] = selectedDomains.y;\n        if (xField === yField) {\n            const xdom = selectedDomains.x;\n            const ydom = selectedDomains.y;\n            const min = xdom[0] > ydom[0] ? ydom : xdom;\n            const max = min === ydom ? xdom : ydom;\n            if (min[1] < max[0]) {\n                rangeObj[xField] = [];\n            } else {\n                rangeObj[xField] = [max[0], min[1] < max[1] ? min[1] : max[1]];\n            }\n            dimensions.x = [stPos.x, endPos.x];\n            dimensions.y = [stPos.y, endPos.y];\n        }\n    } else {\n        criteria[dragDim[0]] = selectedDomains[dragDim[0]] || [];\n\n        if (dragDim[0] === 'x') {\n            rangeObj[xField] = criteria.x;\n            if (xFieldType === DimensionSubtype.CATEGORICAL) {\n                dimensions.x = (config.snap && stPos.x !== endPos.x) ? xAxis.getNearestRange(stPos.x, endPos.x) :\n                    [stPos.x, endPos.x];\n            }\n        } else {\n            rangeObj[yField] = criteria.y;\n            if (yFieldType === DimensionSubtype.CATEGORICAL) {\n                dimensions.y = (config.snap && stPos.y !== endPos.y) ? yAxis.getNearestRange(stPos.y, endPos.y) :\n                    [stPos.y, endPos.y];\n            }\n        }\n    }\n\n    return {\n        criteria: rangeObj,\n        dimensions\n    };\n};\n\nexport default getDragActionConfig;\n","import {\n    getEvent,\n    getD3Drag\n } from 'muze-utils';\n\nimport getDragActionConfig from './drag-action-config';\n\n/**\n * Adds dragging action to the target element.\n * @param {VisualUnit} instance Instance of visual unit.\n * @param {SVGElement} targetEl Element on which brushing action is needed.\n * @param {Array} behaviours Array of behaviours\n */\nexport const attachDragEvent = (targetEl, behaviours, firebolt, touch) => {\n    let startPos = {};\n    let endPos = {};\n    let drawingInf;\n\n    const d3Drag = getD3Drag();\n    let touchStart;\n    targetEl.call(d3Drag().on('start', () => {\n        const event = getEvent();\n        startPos = {\n            x: event.x,\n            y: event.y\n        };\n        drawingInf = firebolt.context.getDrawingContext();\n        touchStart = new Date().getTime();\n    }).on('drag', () => {\n        const event = getEvent();\n        endPos = {\n            x: event.x,\n            y: event.y\n        };\n        if (touch && Math.abs(startPos.x - endPos.x) <= 5) {\n            return;\n        }\n        endPos.x = Math.max(0, Math.min(endPos.x, drawingInf.width));\n        endPos.y = Math.max(0, Math.min(endPos.y, drawingInf.height));\n\n        const payload = getDragActionConfig(firebolt.context.getSourceInfo(), {\n            startPos,\n            endPos\n        }, firebolt.context.data().getFieldsConfig());\n        behaviours.forEach(beh => firebolt.dispatchBehaviour(beh, payload));\n    }).on('end', () => {\n        const event = getEvent();\n        endPos = {\n            x: event.x,\n            y: event.y\n        };\n        const duration = new Date().getTime() - touchStart;\n\n        if (touch && duration > 100 && Math.abs(startPos.x - endPos.x) <= 5) {\n            return;\n        }\n        endPos.x = Math.max(0, Math.min(endPos.x, drawingInf.width));\n        endPos.y = Math.max(0, Math.min(endPos.y, drawingInf.height));\n\n        const payload = getDragActionConfig(firebolt.context.getSourceInfo(), {\n            startPos,\n            endPos,\n            snap: true\n        }, firebolt.context.data().getFieldsConfig());\n        payload.dragEnd = true;\n        behaviours.forEach(beh => firebolt.dispatchBehaviour(beh, payload));\n    }));\n};\n\n","import { getClientPoint, getEvent } from 'muze-utils';\nimport { CONSOLIDATED, FRAGMENTED } from '../../enums/constants';\n\n/**\n * Adds mouse interactions to target element.\n * @param {Firebolt} instance instance of firebolt.\n * @param {SVGElement} targetEl Element on which the event listeners will be attached.\n * @param {Array} behaviours Array of behaviours\n */\n/* istanbul ignore next */ const hover = firebolt => (targetEl, behaviours) => {\n    const dispatchBehaviour = function (args) {\n        const event = getEvent();\n        const context = firebolt.context;\n        const tooltipConf = context.config().interaction.tooltip;\n        const mode = tooltipConf.mode;\n        const pos = getClientPoint(context.getDrawingContext().svgContainer, event);\n        const nearestPoint = context.getNearestPoint(pos.x, pos.y, {\n            getAllPoints: mode === CONSOLIDATED || mode === FRAGMENTED,\n            data: args,\n            event\n        });\n        const payload = {\n            criteria: nearestPoint ? nearestPoint.id : null,\n            showInPosition: nearestPoint.showInPosition,\n            target: nearestPoint.target,\n            position: pos,\n            mode\n        };\n\n        behaviours.forEach(beh => firebolt.dispatchBehaviour(beh, payload));\n        event.stopPropagation();\n    };\n\n    targetEl.on('mouseover', dispatchBehaviour)\n                    .on('mousemove', dispatchBehaviour)\n                    .on('mouseout', () => {\n                        behaviours.forEach(beh => firebolt.dispatchBehaviour(beh, {\n                            criteria: null\n                        }));\n                    });\n};\n\nexport default hover;\n","export const CLASSPREFIX = 'muze';\nexport const CONSOLIDATED = 'consolidated';\nexport const FRAGMENTED = 'fragmented';\n\n","import { getClientPoint } from 'muze-utils';\n\nexport const generatePayloadFromEvent = function (args, event, firebolt) {\n    const context = firebolt.context;\n    const pos = getClientPoint(context.getDrawingContext().svgContainer, event.touches ? event.touches[0] : event);\n    const nearestPoint = context.getNearestPoint(pos.x, pos.y, {\n        data: args,\n        event\n    });\n    return {\n        criteria: nearestPoint ? nearestPoint.id : null,\n        showInPosition: nearestPoint.showInPosition,\n        target: nearestPoint.target,\n        position: pos\n    };\n};\n","import { getEvent } from 'muze-utils';\nimport { generatePayloadFromEvent } from './helpers';\n\n/**\n * Adds mouse interactions to target element.\n * @param {VisualUnit} instance instance of visual unit.\n * @param {SVGElement} targetEl Element on which the event listeners will be attached.\n * @param {Array} behaviours Array of behaviours\n */\n/* istanbul ignore next */ const click = firebolt => (targetEl, behaviours) => {\n    const dispatchBehaviour = function (args) {\n        const event = getEvent();\n        const payload = generatePayloadFromEvent(args, event, firebolt);\n        behaviours.forEach(beh => firebolt.dispatchBehaviour(beh, payload));\n        event.stopPropagation();\n    };\n\n    targetEl.on('click', dispatchBehaviour);\n};\nexport default click;\n","import drag from './drag';\nimport hover from './hover';\nimport { longtouch } from './longtouch';\nimport { touchdrag } from './touch-drag';\nimport * as ACTIONNAMES from '../../enums/actions';\nimport click from './click';\n\nexport const physicalActions = {\n    [ACTIONNAMES.DRAG]: drag,\n    [ACTIONNAMES.HOVER]: hover,\n    [ACTIONNAMES.CLICK]: click,\n    [ACTIONNAMES.LONGTOUCH]: longtouch,\n    [ACTIONNAMES.TOUCHDRAG]: touchdrag\n};\n\n","import { attachDragEvent } from './helpers/drag-event';\n\n/**\n * Adds dragging action to the target element.\n * @param {VisualUnit} instance Instance of visual unit.\n * @param {SVGElement} targetEl Element on which brushing action is needed.\n * @param {Array} behaviours Array of behaviours\n */\n/* istanbul ignore next */ const drag = firebolt => (targetEl, behaviours) => {\n    attachDragEvent(targetEl, behaviours, firebolt);\n};\n\nexport default drag;\n","/* global setTimeout */\nimport { getEvent } from 'muze-utils';\nimport { generatePayloadFromEvent } from './helpers';\n\n/**\n * Adds mouse interactions to target element.\n * @param {VisualUnit} instance instance of visual unit.\n * @param {SVGElement} targetEl Element on which the event listeners will be attached.\n * @param {Array} behaviours Array of behaviours\n */\nexport const longtouch = firebolt => (targetEl, behaviours) => {\n    let event;\n    let touchEnd;\n    const dispatchBehaviour = function (args) {\n        const payload = generatePayloadFromEvent(args, event, firebolt);\n        behaviours.forEach(beh => firebolt.dispatchBehaviour(beh, payload));\n        event.stopPropagation();\n    };\n\n    touchEnd = false;\n    event = getEvent();\n    targetEl.on('touchstart', (args) => {\n        event = getEvent();\n        touchEnd = false;\n        setTimeout(() => {\n            if (!touchEnd) {\n                dispatchBehaviour(args);\n            } else {\n                behaviours.forEach(beh => firebolt.dispatchBehaviour(beh, {\n                    criteria: null\n                }));\n            }\n        }, 100);\n    }).on('touchend', () => {\n        touchEnd = true;\n    });\n};\n","import { attachDragEvent } from './helpers/drag-event';\n\n/**\n * Adds dragging action to the target element.\n * @param {VisualUnit} instance Instance of visual unit.\n * @param {SVGElement} targetEl Element on which brushing action is needed.\n * @param {Array} behaviours Array of behaviours\n */\nexport const touchdrag = firebolt => (targetEl, behaviours) => {\n    attachDragEvent(targetEl, behaviours, firebolt, true);\n};\n\n","export const PROPS = {\n    valueParser: {\n        defaultValue: val => val\n    }\n};\n","import GenericSideEffect from './generic-sideeffect';\n\nexport default GenericSideEffect;\n","import { mergeRecursive, getUniqueId, generateGetterSetters } from 'muze-utils';\nimport { PROPS } from './props';\n\n/**\n * This is the base class of all side effects. It contains all common methods like setting configuration, disabling,\n * enabling side effect, etc. Every new side effect has to inherit this class or {@link SpawnableSideEffect} or\n * {@link SurrogateSideEffect} class. All side effects are initialized by firebolt. The instance of firebolt is\n * passed on initialization. The firebolt instance contains ```context``` which is the instance of visual unit with\n * which the firebolt is attached.\n *\n * @public\n * @class\n * @module GenericSideEffect\n */\nexport default class GenericSideEffect {\n    constructor (firebolt) {\n        this.firebolt = firebolt;\n        this._enabled = true;\n        this._strategy = 'default';\n        this._config = {};\n        this._id = getUniqueId();\n        this._strategies = {};\n        generateGetterSetters(this, PROPS);\n        this.config(this.constructor.defaultConfig());\n    }\n\n    /**\n     * Returns the default configuration of the side effect.\n     *\n     * @public\n     * @return {Object} Default configuration of side effect.\n     */\n    static defaultConfig () {\n        return {};\n    }\n\n    /**\n     * Returns the formal name of a side effect. This method must be implemented by all side effects which changes\n     * or adds any element in the visualization.\n     *\n     * @return {string} Formal name of side effect.\n     */\n    static formalName () {\n        return 'generic';\n    }\n\n    static target () {\n        return 'all';\n    }\n\n    /**\n     * Returns true if the side effects mutates the data of chart.\n     *\n     * @public\n     *\n     * @return {boolean} If the side effect mutates the data of chart.\n     */\n    static mutates () {\n        return false;\n    }\n\n    /**\n     * Sets or gets the configuration of side effect.\n     *\n     * When setter,\n     * @param {Object} config Configuration of side effect.\n     * @return {GenericSideEffect} Side effect instance.\n     *\n     * When getter,\n     * @return {Object} Side effect configuration.\n     */\n    config (...params) {\n        if (params.length) {\n            this._config = mergeRecursive(this._config, params[0]);\n            return this;\n        }\n        return this._config;\n    }\n\n    disable () {\n        this._enabled = false;\n        return this;\n    }\n\n    enable () {\n        this._enabled = true;\n        return this;\n    }\n\n    isEnabled () {\n        return this._enabled;\n    }\n\n    /**\n     * Applies the interaction effect on the chart. This is where the implemntation of the side effect is defined.\n     *\n     * @param {Object} selectionSet Contains the entry and exit set of data which got affected during interaction.\n     * @param {Object} selectionSet.mergedEnter Combined previous entry and new entry set.\n     * @param {DataModel} selectionSet.mergedEnter.model Instance of data model containing all rows which got\n     * affected during interaction.\n     * @param {Array} selectionSet.mergedEnter.uids Ids of all rows which were affected during interaction.\n     * @param {Object} selectionSet.mergedExit Combined previous exit and new exit set.\n     * @param {DataModel} selectionSet.mergedExit.model Instance of data model containing rows which were not affected\n     * during interaction.\n     * @param {Array} selectionSet.mergedExit.uids Ids of all rows which were not affected during interaction.\n     * @param {Object} selectionSet.entrySet Entry set information.\n     * @param {Array} selectionSet.entrySet[0].uids All row ids which got affected during previous interaction.\n     * @param {Array} selectionSet.entrySet[1].uids All row ids which got affected during current interaction.\n     * @param {Array} selectionSet.exitSet[0].uids All row ids which were not affected during previous interaction.\n     * @param {Array} selectionSet.exitSet[1].uids All row ids which were not affected during current interaction.\n     * @param {Object} payload Payload information of the behavioural action on trigger of which this side effect\n     * is applied.\n     * @param {Object} options Optional information for side effect like strategy, etc.\n     */\n    apply () {\n        return this;\n    }\n\n    /**\n     * Adds a new strategy method for this side effect. The strategy method is implemented by side effect class.\n     *\n     * @param {string} name Name of the strategy.\n     * @param {Function} fn Strategy method.\n     *\n     * @return {GenericSideEffect} Instance of side effect.\n     */\n    addStrategy (name, fn) {\n        this._strategies[name] = fn;\n        return this;\n    }\n}\n","import GenericSideEffect from './generic';\n\n/**\n * This class is inherited by all side effects which changes the look of any existing elements in the visualization.\n * For example, if a side effect wants to change the color of bar plots, then it is a surrogate side effect.\n *\n * To use this,\n * ```\n *      const SurrogateSideEffect = muze.SideEffects.standards.SurrogateSideEffect;\n *\n *      class BarColorChanger extends SurrogateSideEffect {\n *          static formalName () {\n *              return 'colorChanger';\n *          }\n *\n *          // Implement the logic of applying the style here.\n *          apply () {\n *          }\n *      }\n * ```\n * @public\n *\n * @module SurrogateSideEffect\n * @class\n * @extends GenericSideEffect\n */\nexport default class SurrogateSideEffect extends GenericSideEffect {\n    /**\n     * Applies or removes interaction styles from plot elements. An array of row ids needs to be passed\n     * which identifies the plot elements and applies styles to them.\n     *\n     * To apply the interaction style,\n     * ```\n     *      const entryRowIds = entrySet[0].uids;\n     *      const interactionStyle = [{\n     *          type: 'fill',\n     *          intensity: [0, 0, 15, 0] // hsla configuration\n     *      }];\n     *\n     *      this.applyInteractionStyle(entryRowIds, interactionStyle, 'brighten', true);\n     * ```\n     * @public\n     * @param {Array} set Array of row ids.\n     * @param {Array} config Style configuration.\n     * @param {Object} config[0] fill or stroke configuration.\n     * @param {string} config[0].type Type of style - fill or stroke.\n     * @param {Array} config[0].intensity hsla configuration.\n     * @param {string} interactionType Type of interaction. This is needed for storing the styles for\n     * each type of interaction in the plot elements.\n     * @param {boolean} apply Whether to apply or remove the interaction style.\n     *\n     * @return {SurrogateSideEffect} Instance of surrogate side effect.\n     */\n    applyInteractionStyle (set, config = {}, interactionType, apply) {\n        const layers = this.firebolt.context.layers();\n        layers.forEach(layer => layer.config().interactive !== false &&\n            layer.applyInteractionStyle(interactionType, set.uids, apply));\n        return this;\n    }\n}\n","import { makeElement } from 'muze-utils';\n\nimport GenericSideEffect from './generic';\n\n/**\n * Any side effect which will add any new element to the chart like drawing a rectangular box or any annotation over\n * the chart needs to inherit this class. This class has methods which returns the container where the dom elements\n * needs to be created.\n *\n * To use this,\n * ```\n *      const SpawnableSideEffect = muze.SideEffects.standards.SpawnableSideEffect;\n *\n *      class SelectionBox extends SpawnableSideEffect {\n *          static formalName () {\n *              return 'selectionBox';\n *          }\n *\n *          // Implement the logic of applying the style here.\n *          apply () {\n *          }\n *      }\n * ```\n * @public\n * @class\n * @extends GenericSideEffect\n * @module SpawnableSideEffect\n */\nexport default class SpawnableSideEffect extends GenericSideEffect {\n    /**\n     * Creates a html or svg element in the container.\n     *\n     * @public\n     * @param {SVGElement|HTMLElement} container Container where the dom element will be rendered.\n     * @param {string} elemType Type of dom element.\n     * @param {Array} data Array of objects with which the dom elements will be binded.\n     * @param {string} className class name of the element.\n     *\n     * @return {Selection} D3 Selection of the element.\n     */\n    createElement (container, elemType, data, className, callbacks) {\n        return makeElement(container, elemType, data, className, callbacks);\n    }\n\n    /**\n     * Returns the drawing information for side effect like svg container, dimensions of the visual unit.\n     *\n     * @public\n     * @return {Object} Drawing information for side effect.\n     * ```\n     *      sideEffectGroup: // svg container where the side effect needs to be appended.\n     *      svgContainer: // svg container of the {@link VisualUnit}.\n     *      htmlContainer: // html div container of the {@link VisualUnit}.\n     *      width: // Width of the {@link VisualUnit}\n     *      height: // Height of the {@link VisualUnit}\n     * ```\n     */\n    drawingContext (...drawingContext) {\n        if (drawingContext.length) {\n            this._drawingContext = drawingContext[0];\n            return this;\n        }\n        return this._drawingContext();\n    }\n\n    show () {\n        return this;\n    }\n\n    hide () {\n        return this;\n    }\n}\n","import { selectElement } from 'muze-utils';\n\nexport const getBoxDimensionsFromPayload = (payload, axes, axisFields) => {\n    let x1;\n    let x2;\n    let y1;\n    let y2;\n    let xRange;\n    let yRange;\n    let direction;\n    const criteria = payload.criteria;\n    const dimensions = payload.dimensions || {};\n    const xDim = dimensions.x;\n    const yDim = dimensions.y;\n\n    if (criteria === null) {\n        return null;\n    }\n\n    const xAxis = axes.x[0];\n    const yAxis = axes.y[0];\n    const xLinear = xAxis.constructor.type() === 'linear';\n    const yLinear = yAxis.constructor.type() === 'linear';\n    const xField = `${axisFields.x[0]}`;\n    const yField = `${axisFields.y[0]}`;\n    const xCriteria = criteria[xField];\n    const yCriteria = criteria[yField];\n\n    if (xCriteria && xCriteria[0] instanceof Array) {\n        xRange = xCriteria[0];\n        yRange = xCriteria[1];\n    } else {\n        xRange = xCriteria || [];\n        yRange = yCriteria || [];\n    }\n    direction = xCriteria && yCriteria ? 'both' : (xCriteria ? 'vertical' : 'horizontal');\n    if (xRange && xRange.length) {\n        if ((yAxis.constructor.type() === 'band' && xLinear)) {\n            x1 = x2 = undefined;\n            direction = 'horizontal';\n        } else {\n            const domain = xAxis.domain();\n            const bandScale = xAxis.constructor.type() === 'band';\n            let x1Val;\n            let x2Val;\n            if (bandScale) {\n                let x1DomainIndex = domain.indexOf(xRange[0]);\n                let x2DomainIndex = domain.indexOf(xRange[xRange.length - 1]);\n                [x1DomainIndex, x2DomainIndex] = [x1DomainIndex, x2DomainIndex].sort((a, b) => a - b);\n                x1Val = domain[x1DomainIndex];\n                x2Val = domain[x2DomainIndex];\n            } else {\n                x1Val = xRange[0];\n                x2Val = xRange[xRange.length - 1];\n            }\n            x1 = xAxis.getScaleValue(x1Val);\n            x2 = xAxis.getScaleValue(x2Val);\n            x2 += bandScale ? xAxis.getUnitWidth() : 0;\n        }\n    } else {\n        x1 = x2 = undefined;\n    }\n    if (yRange && yRange.length) {\n        if ((xAxis.constructor.type() === 'band' && yLinear)) {\n            y1 = y2 = undefined;\n            direction = 'vertical';\n        } else {\n            const domain = yAxis.domain();\n            const bandScale = yAxis.constructor.type() === 'band';\n            let y1Val;\n            let y2Val;\n            if (bandScale) {\n                let y1DomainIndex = domain.indexOf(yRange[0]);\n                let y2DomainIndex = domain.indexOf(yRange[yRange.length - 1]);\n                [y1DomainIndex, y2DomainIndex] = [y1DomainIndex, y2DomainIndex].sort(((a, b) => b - a));\n                y1Val = domain[y1DomainIndex];\n                y2Val = domain[y2DomainIndex];\n            } else {\n                y1Val = yRange[0];\n                y2Val = yRange[yRange.length - 1];\n            }\n            y1 = yAxis.getScaleValue(y1Val);\n            y2 = yAxis.getScaleValue(y2Val);\n            y2 += yAxis.constructor.type() === 'band' ? yAxis.getUnitWidth() : 0;\n        }\n    } else {\n        y1 = y2 = undefined;\n    }\n\n    if ((yLinear && xLinear) || !payload.dragEnd) {\n        if (xDim) {\n            [x1, x2] = xDim;\n        }\n        if (yDim) {\n            [y1, y2] = yDim;\n        }\n    }\n\n    return {\n        dimension: {\n            x1,\n            x2,\n            y1,\n            y2\n        },\n        direction\n    };\n};\n\nexport const changeVisibility = (context, sideEffectGroup, visible) => {\n    const config = context.config();\n    const className = config.defClassName;\n    const classPrefix = config.classPrefix;\n    selectElement(sideEffectGroup).selectAll(`.${classPrefix}-${className}`)\n                    .style('display', visible ? 'block' : 'none');\n};\n","import {\n    getQualifiedClassName,\n    selectElement,\n    makeElement,\n    isValidValue\n} from 'muze-utils';\nimport { CLASSPREFIX } from '../../enums/constants';\nimport './styles.scss';\nimport SpawnableSideEffect from '../spawnable';\nimport { selectionBoxDrag } from '../../actions/physical/selection-box-drag';\nimport { getBoxDimensionsFromPayload, changeVisibility } from './helper';\n\n/**\n * This class is used to create a selection box which is used by visual unit for brushing and\n * selection in the canvas.\n * @class SelectionBox\n */\nclass SelectionBox extends SpawnableSideEffect {\n    /**\n     * It returns the default configuration needed by selectionbox.\n     * @return {Object} Default configuration of the selection box.\n     */\n    static defaultConfig () {\n        return {\n            defClassName: 'selection-box-group',\n            className: '',\n            classPrefix: CLASSPREFIX,\n            box: {\n                defClassName: 'selection-box',\n                className: ''\n            },\n            transition: {\n                duration: 200\n            }\n        };\n    }\n\n    static formalName () {\n        return 'selectionBox';\n    }\n\n    /**\n     * Draws the selectionbox with the specified dimensions.\n     * @param {Object} dimension Dimensions of the selection box.\n     * @param {number} dimension.x1 Starting x position\n     * @param {number} dimension.x2 Ending x position\n     * @param {number} dimension.y1 Starting y position\n     * @param {number} dimension.y2 Ending y position\n     * @param {Object} conf Configuration needed to draw the selection box\n     * @param {number} unitWidth Width of the visual unit.\n     * @param {number} unitHeight Height of the visual unit.\n     */\n    apply (selectionSet, payload) {\n        let x;\n        let y;\n        let width;\n        let height;\n        const config = this._config;\n        const boxConf = config.box;\n        const firebolt = this.firebolt;\n        const drawingInf = this.drawingContext();\n        const mountPoint = drawingInf.sideEffectGroup;\n        const unitWidth = drawingInf.width;\n        const unitHeight = drawingInf.height;\n        const classPrefix = config.classPrefix;\n        const selectionGroupClassName = config.defClassName;\n\n        if (payload.criteria === null) {\n            this.hide(drawingInf);\n            return this;\n        }\n\n        const sourceInf = firebolt.context.getSourceInfo();\n        const { dimension, direction } = getBoxDimensionsFromPayload(payload, sourceInf.axes,\n            sourceInf.fields);\n        const transition = payload.dragEnd && config.transition;\n\n        if (direction === 'both' || direction === 'vertical') {\n            x = Math.min(dimension.x1, dimension.x2);\n            width = Math.abs(dimension.x2 - dimension.x1);\n        } else {\n            x = 0;\n            width = unitWidth;\n        }\n        if (direction === 'both' || direction === 'horizontal') {\n            y = Math.min(dimension.y1, dimension.y2);\n            height = Math.abs(dimension.y2 - dimension.y1);\n        } else {\n            height = unitHeight;\n            y = 0;\n        }\n        this.show(drawingInf);\n        // Create the data array for drawing the rectangle\n        const points = [\n            {\n                x,\n                y,\n                width,\n                height\n            }\n        ];\n        // Create the container group for selection box.\n        const selectionGroup = makeElement(selectElement(mountPoint), 'g', [1],\n            `.${classPrefix}-${selectionGroupClassName}`);\n        const sideEffect = this;\n        const selection = selectionGroup.selectAll('rect').data(points);\n        const selectionBox = selection.enter().append('rect')\n                        .each(function () {\n                            selectionBoxDrag(firebolt)(selectElement(this), ['brush'], sideEffect);\n                        })\n                        .merge(selection)\n                        .each(function (attrs) {\n                            let element = selectElement(this);\n                            transition && (element = element.transition().duration(transition.duration));\n                            for (const key in attrs) {\n                                if ({}.hasOwnProperty.call(attrs, key)) {\n                                    isValidValue(attrs[key]) && element.attr(key, attrs[key]);\n                                }\n                            }\n                        });\n        // Get the qualified class name for selection box rectangle\n        const boxClassName = getQualifiedClassName(boxConf.defClassName, this._id, classPrefix);\n        selectionBox.classed(boxClassName.join(' '), true);\n        selectionBox.classed(boxConf.className, true);\n\n        return this;\n    }\n\n    hide (drawingInf) {\n        changeVisibility(this, drawingInf.sideEffectGroup, false);\n    }\n\n    show (drawingInf) {\n        changeVisibility(this, drawingInf.sideEffectGroup, true);\n    }\n}\n\nexport default SelectionBox;\n\n","import {\n    getEvent,\n    getD3Drag\n } from 'muze-utils';\n\nimport getDragActionConfig from './helpers/drag-action-config';\n\nexport const selectionBoxDrag = firebolt => (targetEl, behaviours) => {\n    let subject;\n    let drawingInf;\n    const context = firebolt.context;\n    const onDrag = (payload) => {\n        behaviours.forEach(action => firebolt.dispatchBehaviour(action, payload));\n    };\n    const d3Drag = getD3Drag();\n\n    targetEl.call(d3Drag().on('start', () => {\n        const event = getEvent();\n        drawingInf = context.getDrawingContext();\n        subject = event.subject;\n    }).on('drag', () => {\n        const event = getEvent();\n        subject.x += event.dx;\n        subject.y += event.dy;\n        const width = drawingInf.width;\n        const height = drawingInf.height;\n        const x = Math.min(width - subject.width, Math.max(subject.x, 0));\n        const y = Math.min(height - subject.height, Math.max(subject.y, 0));\n        const y2 = y + subject.height;\n        const x2 = x + subject.width;\n\n        if (x >= 0 && x2 <= width && y >= 0 && y2 <= height) {\n            const payload = getDragActionConfig(context.getSourceInfo(), {\n                startPos: {\n                    x,\n                    y\n                },\n                endPos: {\n                    x: x2,\n                    y: y2\n                }\n            }, context.data().getFieldsConfig());\n            onDrag(payload);\n        }\n    }).on('end', () => {\n        const width = drawingInf.width;\n        const height = drawingInf.height;\n        const x = Math.min(width - subject.width, Math.max(subject.x, 0));\n        const y = Math.min(height - subject.height, Math.max(subject.y, 0));\n        const y2 = y + subject.height;\n        const x2 = x + subject.width;\n\n        if (x >= 0 && x2 <= width && y >= 0 && y2 <= height) {\n            const payload = getDragActionConfig(context.getSourceInfo(), {\n                startPos: {\n                    x,\n                    y\n                },\n                endPos: {\n                    x: x2,\n                    y: y2\n                },\n                snap: true\n            }, context.data().getFieldsConfig());\n            payload.dragEnd = true;\n            onDrag(payload);\n        }\n    }));\n};\n","export const CLASSPREFIX = 'muze';\nexport const ARROW_RIGHT = 'right';\nexport const ARROW_TOP = 'top';\nexport const ARROW_BOTTOM = 'bottom';\nexport const ARROW_LEFT = 'left';\nexport const TOOLTIP_LEFT = 'left';\nexport const TOOLTIP_RIGHT = 'right';\nexport const TOOLTIP_BOTTOM = 'bottom';\nexport const TOOLTIP_TOP = 'top';\nexport const INITIAL_STYLE = {\n    position: 'absolute',\n    width: 0,\n    height: 0\n};\n","import { CLASSPREFIX } from './constants';\n\nexport const defaultConfig = {\n    classPrefix: CLASSPREFIX,\n    defClassName: 'tooltip-box',\n    connectorClassName: 'tooltip-connectors',\n    className: '',\n    row: {\n        margin: 0\n    },\n    content: {\n        spacing: 5,\n        iconContainerSize: 10,\n        iconScale: 1,\n        iconShape: 'circle',\n        iconColor: '#ff0000',\n        rowMargin: '0px',\n        margin: 10,\n        separator: ':',\n        className: 'tooltip-content-container',\n        parentClassName: 'tooltip-content-parent-container'\n    },\n    arrow: {\n        size: 10,\n        disabled: false,\n        defClassName: 'tooltip-arrow',\n        className: '',\n        color: 'rgba(195,195,195,0.85)'\n    }\n};\n","import { getQualifiedClassName } from 'muze-utils';\nimport { TOOLTIP_LEFT, TOOLTIP_RIGHT, ARROW_RIGHT, ARROW_LEFT, TOOLTIP_BOTTOM } from './constants';\n\nexport const getArrowPos = (orient, dim, measurement, config) => {\n    let arrowPos;\n    const { x, y, boxHeight, boxWidth } = measurement;\n    const arrowDisabled = config.arrow.disabled;\n    const arrowWidth = arrowDisabled ? 0 : config.arrow.size;\n\n    if (orient === ARROW_LEFT || orient === ARROW_RIGHT) {\n        let start = 0;\n        let diff = boxHeight / 2;\n        const plotBottom = dim.y + dim.height;\n        const boxBottom = y + boxHeight;\n\n        if (dim.y > y) {\n            start = dim.y - y;\n            diff = (plotBottom >= boxBottom ? (boxBottom - dim.y) : dim.height) / 2;\n        } else if (boxBottom > plotBottom) {\n            diff = Math.abs(y - (dim.y + dim.height)) / 2;\n        }\n        arrowPos = start + diff - arrowWidth / 2;\n    } else {\n        let start = 0;\n        let diff = boxWidth / 2;\n        const plotRight = dim.x + dim.width;\n        const boxRight = x + boxWidth;\n\n        if (dim.x > x) {\n            start = dim.x - x;\n            diff = (plotRight >= boxRight ? (boxRight - dim.x) : dim.width) / 2;\n        } else if (boxRight > plotRight) {\n            diff = Math.abs(x - (dim.x + dim.width)) / 2;\n        }\n        arrowPos = start + diff - arrowWidth / 2;\n    }\n    return arrowPos;\n};\n\n/**\n * Places the arrow in the specified arrow position. It also applies appropriate arrow\n * class name to the arrow element.\n * @param {string} position Left, bottom or right position of the arrow;\n * @param {number} arrowPos position of arrow in pixels\n * @return {Tooltip} Instance of tooltip.\n */\nexport const placeArrow = (context, position, arrowPos) => {\n    const tooltipArrow = context._tooltipArrow;\n    const tooltipBackground = context._tooltipBackground;\n    const config = context._config;\n    const classPrefix = config.classPrefix;\n    const arrowConf = config.arrow;\n    const className = getQualifiedClassName(arrowConf.defClassName, context._id, config.classPrefix);\n\n    tooltipArrow.style('display', 'block');\n    tooltipArrow.attr('class', `${className.join(' ')}`);\n    if (position === TOOLTIP_LEFT || position === TOOLTIP_RIGHT) {\n        tooltipArrow.style('top', `${arrowPos}px`);\n        tooltipArrow.style('left', '');\n        tooltipBackground.style('top', `${arrowPos}px`);\n        tooltipBackground.style('left', '');\n    } else {\n        position === TOOLTIP_BOTTOM ? tooltipArrow.style('top', '100%') : tooltipArrow.style('top',\n            `-${arrowConf.size}px`);\n        tooltipArrow.style('left', `${arrowPos}px`);\n        position === TOOLTIP_BOTTOM ? tooltipBackground.style('top', '100%') : tooltipBackground.style('top',\n            `-${arrowConf.size + 3}px`);\n        tooltipBackground.style('left', `${arrowPos}px`);\n    }\n    tooltipArrow.classed(`${classPrefix}-tooltip-arrow`, true);\n    tooltipArrow.classed(`${classPrefix}-tooltip-arrow-${context._arrowOrientation}`, false);\n    tooltipArrow.classed(`${classPrefix}-tooltip-arrow-${position}`, true);\n    tooltipBackground.classed(`${classPrefix}-tooltip-background-arrow`, true);\n    tooltipBackground.classed(`${classPrefix}-tooltip-background-arrow-${context._arrowOrientation}`, false);\n    tooltipBackground.classed(`${classPrefix}-tooltip-background-arrow-${position}`, true);\n    return this;\n};\n\nexport const reorderContainers = (parentContainer, className) => {\n    parentContainer.selectAll(className).sort((a, b) => a - b);\n};\n","import {\n    formatTemporal,\n    DimensionSubtype,\n    MeasureSubtype,\n    FieldType,\n    DataModel,\n    defaultValue\n} from 'muze-utils';\n\nconst { InvalidAwareTypes } = DataModel;\n\nconst formatters = (formatter, interval, valueParser) => ({\n    [DimensionSubtype.TEMPORAL]: (value) => {\n        if (value instanceof InvalidAwareTypes) {\n            return valueParser(value);\n        }\n        return formatTemporal(value, interval);\n    },\n    [MeasureSubtype.CONTINUOUS]: value => (value instanceof InvalidAwareTypes ? valueParser(value) :\n        formatter(value.toFixed(2))),\n    [DimensionSubtype.CATEGORICAL]: value => valueParser(value)\n});\n\nconst getDefaultTooltipFormatterFn = (formatter, defaultFormatter) => defaultValue(formatter, defaultFormatter);\n\nconst getTabularData = (dataObj, context, defaultFormatter) => {\n    const rows = [];\n    const { data, schema, fieldspace } = dataObj;\n    rows.push(schema.map(d => d.name));\n    const { valueParser, timeDiffs } = context;\n    data.forEach((d) => {\n        const row = [];\n        schema.forEach((fieldObj, i) => {\n            const interval = fieldObj.subtype === DimensionSubtype.TEMPORAL ? timeDiffs[fieldObj.name] : 0;\n            const numberFormat = fieldObj.type === FieldType.MEASURE && fieldspace.fields[i].numberFormat();\n            const formatterFn = getDefaultTooltipFormatterFn(formatters(numberFormat,\n                interval, valueParser)[fieldObj.subtype], defaultFormatter);\n            const value = formatterFn(d[i]);\n            row.push(value);\n        });\n        rows.push(row);\n    });\n    return rows;\n};\n\nexport const buildTooltipData = (dataModel, config = {}, context) => {\n    let fieldValues = [];\n    const dataObj = dataModel.getData();\n    const data = dataObj.data;\n    const schema = dataObj.schema;\n    const separator = config.separator;\n    const fieldsConfig = dataModel.getFieldsConfig();\n    const fieldspace = dataModel.getFieldspace();\n    const detailFields = context.detailFields || [];\n    const dimensions = schema.filter(d => d.type === FieldType.DIMENSION);\n    const measures = schema.filter(d => d.type === FieldType.MEASURE);\n    const containsDetailField = schema.find(d => detailFields.indexOf(d.name) !== -1);\n    const dataLen = data.length;\n    const {\n        valueParser,\n        axes,\n        dimensionMeasureMap,\n        timeDiffs\n    } = context;\n    const defFormatter = formatters(null, null, valueParser)[DimensionSubtype.CATEGORICAL];\n    const getRowContent = (field, type) => {\n        let value;\n        let formattedValue;\n        let measureIndex;\n        const values = [];\n        const index = fieldsConfig[field].index;\n        const interval = fieldsConfig[field].def.subtype === DimensionSubtype.TEMPORAL ? timeDiffs[field] : 0;\n        const formatterFn = getDefaultTooltipFormatterFn(formatters(val => val, interval, valueParser)[type],\n            defFormatter);\n\n        if (value !== null) {\n            let uniqueVals = type === MeasureSubtype.CONTINUOUS ? data.map(d => d[index]) :\n                [...new Set(data.map(d => d[index]))];\n            uniqueVals = uniqueVals.filter(d => d !== '');\n            const colorAxis = axes.color[0];\n            const shapeAxis = axes.shape[0];\n            const sizeAxis = axes.size[0];\n            const isRetinalField = (colorAxis || shapeAxis || sizeAxis) && dataLen > 1 &&\n                    type !== MeasureSubtype.CONTINUOUS;\n\n            uniqueVals.forEach((val, i) => {\n                let key;\n                const associatedMeasures = dimensionMeasureMap[field];\n\n                if (associatedMeasures && associatedMeasures.length && dataLen > 1) {\n                    key = val;\n                    let icon = {\n                        value: ''\n                    };\n\n                    if (isRetinalField) {\n                        icon = {\n                            type: 'icon',\n                            color: colorAxis.getColor(val),\n                            shape: shapeAxis.getShape(val),\n                            size: sizeAxis.getSize(val) * config.iconScale\n                        };\n                    }\n                    if (associatedMeasures.length > 1) {\n                        const formattedKey = type === DimensionSubtype.TEMPORAL ? formatterFn(key, interval) : key;\n                        values.push([icon, `${formattedKey}`]);\n                        associatedMeasures.forEach((measure) => {\n                            measureIndex = fieldsConfig[measure].index;\n                            value = data[i][measureIndex];\n                            const numberFormat = fieldspace.fields[measureIndex].numberFormat();\n                            const measureFormatter = getDefaultTooltipFormatterFn(\n                                formatters(numberFormat, interval, valueParser)[MeasureSubtype.CONTINUOUS]);\n                            formattedValue = measureFormatter(value);\n                            values.push([{\n                                value: `${measure}${separator}`,\n                                style: {\n                                    'margin-left': `${config.margin}px}`\n                                },\n                                className: `${config.classPrefix}-tooltip-key`\n                            }, {\n                                value: `${formattedValue}`,\n                                className: `${config.classPrefix}-tooltip-value`\n                            }]);\n                        });\n                    } else {\n                        measureIndex = fieldsConfig[associatedMeasures[0]].index;\n                        value = data[i][measureIndex];\n                        const numberFormat = fieldspace.fields[measureIndex].numberFormat();\n                        const measureFormatter = getDefaultTooltipFormatterFn(\n                            formatters(numberFormat, interval, valueParser)[MeasureSubtype.CONTINUOUS]);\n                        formattedValue = measureFormatter(value);\n                        const formattedKey = type === DimensionSubtype.TEMPORAL ? formatterFn(key, interval) : key;\n                        values.push([\n                            icon,\n                            {\n                                value: `${formattedKey}`,\n                                className: `${config.classPrefix}-tooltip-key`\n                            },\n                            {\n                                value: `${formattedValue}`,\n                                className: `${config.classPrefix}-tooltip-value`\n                            }\n                        ]);\n                    }\n                } else {\n                    key = field;\n                    value = val;\n                    formattedValue = formatterFn(value);\n                    values.push([{\n                        value: `${key}${separator}`,\n                        className: `${config.classPrefix}-tooltip-key`\n                    }, {\n                        value: `${formattedValue}`,\n                        className: `${config.classPrefix}-tooltip-value`\n                    }]);\n                }\n            });\n        }\n        return values;\n    };\n    let displayFormat = 'keyValue';\n\n    if (dataLen > 1 && containsDetailField) {\n        fieldValues = getTabularData({\n            data,\n            schema,\n            fieldspace\n        }, context, defFormatter);\n        displayFormat = 'table';\n    } else {\n        dimensions.forEach((item) => {\n            const type = item.subtype ? item.subtype : item.type;\n            fieldValues = [...fieldValues, ...getRowContent(item.name, type)];\n        });\n\n        const allMeasures = [...new Set(...Object.values(dimensionMeasureMap))];\n        const filteredMeasures = dataLen > 1 ? measures.filter(d => allMeasures.indexOf(d.name) === -1)\n            : measures;\n\n        filteredMeasures.forEach((item) => {\n            const type = item.subtype ? item.subtype : item.type;\n            fieldValues = [...fieldValues, ...getRowContent(item.name, type)];\n        });\n    }\n\n    return {\n        content: fieldValues,\n        displayFormat\n    };\n};\n\n/**\n * This contains the strategy methods for showing tooltip in the chart.\n * @param {VisualUnit} context Attached instance.\n */\nexport const strategy = {\n    keyValue: (data, config, context) => {\n        const values = buildTooltipData(data, config, context);\n        return values;\n    }\n};\n\nexport const DEFAULT_STRATEGY = 'keyValue';\n","import {\n    selectElement,\n    mergeRecursive,\n    makeElement,\n    setAttrs,\n    setStyles,\n    getSymbol,\n    isSimpleObject\n} from 'muze-utils';\nimport { DEFAULT_STRATEGY, strategy } from './strategy';\nimport { defaultConfig } from './default-config';\n\n/**\n * This class is used to manage the content of tooltip.\n */\nexport default class Content {\n    /**\n     * Creates an instance of content.\n     */\n    constructor () {\n        this._model = null;\n        this._strategy = DEFAULT_STRATEGY;\n        this._formatter = null;\n        this._config = this.constructor.defaultConfig();\n    }\n   /**\n     * Returns the default configuration of tooltip\n     * @return {Object} Configuration of tooltip.\n     */\n    static defaultConfig () {\n        const config = defaultConfig.content;\n        config.classPrefix = defaultConfig.classPrefix;\n        return config;\n    }\n\n    config (...c) {\n        if (c.length > 0) {\n            this._config = mergeRecursive(this._config, c[0]);\n            return this;\n        }\n        return this._config;\n    }\n\n    /**\n     * Update model. The format contains presentation strategy which determines how to show the content.\n     * If no strategy is mentioned then default is to show key value pair\n    */\n    update (item) {\n        this._model = item.model;\n        this._strategy = item.strategy !== undefined ? item.strategy : DEFAULT_STRATEGY;\n        this._formatter = item.formatter;\n        return this;\n    }\n\n    context (ctx) {\n        this._context = ctx;\n        return this;\n    }\n\n    render (mount) {\n        let data;\n        const config = this._config;\n        const iconContainerSize = config.iconContainerSize;\n        const formatter = this._formatter;\n        const rowMargin = config.rowMargin;\n        const model = this._model;\n\n        this._mount = mount;\n        if (model instanceof Array) {\n            data = model;\n        } else {\n            data = formatter instanceof Function ? formatter(this._model, this._context) :\n                strategy[this._strategy](this._model, this.config(), this._context);\n        }\n\n        if (data instanceof Function) {\n            mount.html(data());\n        } else {\n            let content = data;\n            let displayFormat = 'default';\n\n            if (isSimpleObject(data)) {\n                content = data.content;\n                displayFormat = data.displayFormat;\n            }\n\n            const body = makeElement(mount, 'div', [displayFormat], `${config.classPrefix}-tooltip-content`, {},\n                d => d);\n\n            if (displayFormat === 'table') {\n                const table = makeElement(body, 'table', [1], `${config.classPrefix}-tooltip-table`);\n                const tbody = makeElement(table, 'tbody', [1], `${config.classPrefix}-tooltip-table-tbody`);\n                const rows = makeElement(tbody, 'tr', content, `${config.classPrefix}-tooltip-table-row`);\n                rows.each(function (d, i) {\n                    selectElement(this).classed(`${config.classPrefix}-tooltip-table-row-${i}`, true);\n                });\n                const cells = makeElement(rows, 'td', d => d, `${config.classPrefix}-tooltip-table-cell`);\n                cells.each(function (d) {\n                    selectElement(this).html(d);\n                });\n            } else {\n                const rows = makeElement(body, 'div', content, `${config.classPrefix}-tooltip-row`);\n                const cells = makeElement(rows, 'span', d => d, `${config.classPrefix}-tooltip-content`);\n                cells.attr('class', `${config.classPrefix}-tooltip-content`);\n                setStyles(rows, {\n                    margin: rowMargin\n                });\n                setStyles(cells, {\n                    display: 'inline-block',\n                    'margin-right': `${config.spacing}px`\n                });\n\n                cells.each(function (d) {\n                    const el = selectElement(this);\n                    el.html('');\n                    if (d instanceof Object) {\n                        if (d.type === 'icon') {\n                            const svg = makeElement(el, 'svg', [1]);\n                            const path = makeElement(svg, 'path', [1]);\n                            const shape = d.shape instanceof Function ? d.shape : getSymbol(d.shape);\n\n                            setAttrs(svg, {\n                                x: 0,\n                                y: 0,\n                                width: iconContainerSize,\n                                height: iconContainerSize\n                            });\n                            setAttrs(path, {\n                                d: shape.size(d.size)(),\n                                transform: `translate(${iconContainerSize / 2}, ${iconContainerSize / 2})`\n                            });\n                            setStyles(path, {\n                                fill: d.color\n                            });\n                            setStyles(svg, {\n                                width: `${iconContainerSize}px`,\n                                height: `${iconContainerSize}px`\n                            });\n                        } else {\n                            el.html(d.value);\n                            d.className && el.classed(d.className, true);\n                            setStyles(el, d.style);\n                        }\n                    } else {\n                        el.html(d);\n                    }\n                });\n            }\n        }\n        return this;\n    }\n\n    clear () {\n        this._model = null;\n        return this;\n    }\n}\n","import {\n    mergeRecursive,\n    getQualifiedClassName,\n    getUniqueId,\n    selectElement,\n    setStyles,\n    makeElement\n} from 'muze-utils';\nimport { ARROW_BOTTOM, ARROW_LEFT, ARROW_RIGHT, TOOLTIP_LEFT, TOOLTIP_RIGHT, TOOLTIP_BOTTOM, TOOLTIP_TOP,\n    INITIAL_STYLE } from './constants';\nimport { defaultConfig } from './default-config';\nimport { getArrowPos, placeArrow, reorderContainers } from './helper';\nimport './styles.scss';\nimport Content from './content';\n\n/**\n * This component is responsible for creating a tooltip element. It appends the tooltip\n * in the body element.\n * @class Tooltip\n */\nexport default class Tooltip {\n    /**\n     * Initializes the tooltip with the container element and configuration\n     * @param {HTMLElement} container container where the tooltip will be mounted.\n     * @param {string} className Class name of the tooltip.\n     */\n    constructor (htmlContainer, svgContainer) {\n        let connectorContainer = svgContainer;\n        this._id = getUniqueId();\n        this._config = {};\n        this.config({});\n        const tooltipConf = this._config;\n        const classPrefix = tooltipConf.classPrefix;\n        const contentClass = tooltipConf.content.parentClassName;\n        const container = makeElement(htmlContainer, 'div', [1], `${classPrefix}-tooltip-container`);\n        this._container = container;\n        this._tooltipContainer = container.append('div').style('position', 'absolute');\n        this._contentContainer = this._tooltipContainer.append('div').attr('class', `${classPrefix}-${contentClass}`);\n        this._tooltipBackground = this._tooltipContainer.append('div').style('position', 'relative');\n        this._tooltipArrow = this._tooltipContainer.append('div');\n\n        if (!svgContainer) {\n            connectorContainer = htmlContainer.append('svg').style('pointer-events', 'none');\n        }\n        this._contents = {};\n        this._tooltipConnectorContainer = selectElement(connectorContainer)\n            .append('g')\n            .attr('class', `${tooltipConf.classPrefix}-${tooltipConf.connectorClassName}`);\n        const id = this._id;\n        const defClassName = tooltipConf.defClassName;\n        const qualifiedClassName = getQualifiedClassName(defClassName, id, tooltipConf.classPrefix);\n\n        setStyles(this._tooltipArrow, INITIAL_STYLE);\n        setStyles(this._tooltipBackground, INITIAL_STYLE);\n        this.addClass(qualifiedClassName.join(' '));\n        this.addClass(tooltipConf.className);\n        this.hide();\n    }\n\n    /**\n     * Sets the configuration of tooltip.\n     * @param {Object} config Configuration of tooltip\n     * @return {Tooltip} Instance of tooltip\n     */\n    config (...config) {\n        if (config.length > 0) {\n            const defConf = mergeRecursive({}, this.constructor.defaultConfig());\n            this._config = mergeRecursive(defConf, config[0]);\n            return this;\n        }\n        return this._config;\n    }\n\n    /**\n     * Returns the default configuration of tooltip\n     * @return {Object} Configuration of tooltip.\n     */\n    static defaultConfig () {\n        return defaultConfig;\n    }\n    /**\n     * Sets the class name of tooltip\n     * @param {string} className tooltip class name\n     * @return {Tooltip} Instance of tooltip.\n     */\n    addClass (className) {\n        this._tooltipContainer.classed(className, true);\n        return this;\n    }\n\n    context (...ctx) {\n        if (ctx.length) {\n            this._context = ctx[0];\n            return this;\n        }\n        return this._context;\n    }\n\n    content (name, data, contentConfig = {}) {\n        const config = this.config();\n        const { classPrefix } = config;\n        const contentClass = config.content.className;\n        const formatter = config.formatter;\n        const className = contentConfig.className || `${classPrefix}-${contentClass}-${name}`;\n        const content = this._contents[name] = this._contents[name] || new Content();\n        const container = makeElement(this._contentContainer, 'div', [contentConfig.order], className);\n        container.attr('class', `${classPrefix}-${contentClass} ${className}`);\n        reorderContainers(this._contentContainer, `.${classPrefix}-${contentClass}`);\n        const contentConf = config.content;\n        contentConfig.classPrefix = this._config.classPrefix;\n        content.config(contentConf);\n\n        if (data === null) {\n            content.clear();\n            container.remove();\n            delete this._contents[name];\n        } else {\n            content.update({\n                model: data,\n                formatter: contentConfig.formatter || formatter\n            });\n            content.context(this._context);\n            content.render(container);\n        }\n\n        if (!Object.keys(this._contents).length) {\n            this.hide();\n        }\n        return this;\n    }\n\n    getContents () {\n        return Object.values(this._contents);\n    }\n\n    /**\n     * Positions the tooltip at the given x and y position.\n     * @param {number} x x position\n     * @param {number} y y position\n     * @return {Tooltip} Instance of tooltip.\n     */\n    position (x, y, conf = {}) {\n        if (!Object.keys(this._contents).length) {\n            this.hide();\n            return this;\n        }\n        this.show();\n        const target = this._target;\n        const repositionArrow = conf.repositionArrow;\n\n        if (target && repositionArrow) {\n            const node = this._tooltipContainer.node();\n            const config = this._config;\n            const arrowDisabled = config.arrow.disabled;\n            const arrowWidth = arrowDisabled ? 0 : config.arrow.size;\n            const arrowOrient = this._arrowOrientation;\n            const outsidePlot = arrowOrient === ARROW_LEFT || arrowOrient === ARROW_RIGHT ?\n                (y + node.offsetHeight - arrowWidth) < target.y || y > (target.y + target.height) :\n                (x + node.offsetWidth - arrowWidth) < target.x || x > (target.x + target.width);\n\n            if (!arrowDisabled) {\n                if (outsidePlot) {\n                    let path;\n                    this._tooltipArrow.style('display', 'none');\n                    this._tooltipBackground.style('display', 'none');\n                    this._tooltipConnectorContainer.style('display', 'block');\n                    const connector = this._tooltipConnectorContainer.selectAll('path').data([1]);\n                    const enter = connector.enter().append('path');\n                    if (arrowOrient === ARROW_LEFT) {\n                        path = `M ${x} ${y + node.offsetHeight / 2} L ${target.x + target.width}`\n                            + ` ${target.y + target.height / 2}`;\n                    } else if (arrowOrient === ARROW_RIGHT) {\n                        path = `M ${x + node.offsetWidth} ${y + node.offsetHeight / 2}`\n                                + ` L ${target.x} ${target.y + target.height / 2}`;\n                    } else if (arrowOrient === ARROW_BOTTOM) {\n                        path = `M ${x + node.offsetWidth / 2} ${y + node.offsetHeight}`\n                            + ` L ${target.x + target.width / 2} ${target.y}`;\n                    }\n                    enter.merge(connector).attr('d', path).style('display', 'block');\n                } else {\n                    const arrowPos = getArrowPos(arrowOrient, target, {\n                        x,\n                        y,\n                        boxHeight: node.offsetHeight,\n                        boxWidth: node.offsetWidth\n                    }, this._config);\n\n                    placeArrow(this, this._arrowOrientation, arrowPos);\n                    this._tooltipConnectorContainer.style('display', 'none');\n                }\n            }\n        }\n\n        const offset = this._offset || {\n            x: 0,\n            y: 0\n        };\n        this._tooltipContainer.style('left', `${offset.x + x}px`).style('top',\n            `${offset.y + y}px`);\n\n        return this;\n    }\n\n    /**\n     * Positions the tooltip relative to a rectangular box. It takes care of tooltip overflowing the\n     * boundaries.\n     * @param {Object} dim Dimensions of the plot.\n     */\n    positionRelativeTo (dim, tooltipConf = {}) {\n        let obj;\n        let orientation = tooltipConf.orientation;\n        this.show();\n        if (!dim) {\n            this.hide();\n            return this;\n        }\n\n        const extent = this._extent;\n        const node = this._tooltipContainer.node();\n\n        this._tooltipContainer.style('top', '0px')\n                        .style('left', '0px');\n        const offsetWidth = node.offsetWidth + 2;\n        const offsetHeight = node.offsetHeight + 2;\n        const config = this._config;\n        const offset = this._offset;\n        const arrowDisabled = config.arrow.disabled;\n        const arrowSize = arrowDisabled ? 0 : config.arrow.size;\n        const draw = tooltipConf.draw !== undefined ? tooltipConf.draw : true;\n        const topSpace = dim.y;\n        // When there is no space in right\n        const dimX = dim.x + dim.width + offset.x;\n        const rightSpace = extent.width - dimX;\n        const leftSpace = dim.x + offset.x - extent.x;\n        const positionTop = topSpace > (offsetHeight + arrowSize);\n        const positionRight = rightSpace >= offsetWidth + arrowSize;\n        const positionLeft = leftSpace >= offsetWidth + arrowSize;\n\n        const positionHorizontal = () => {\n            let position;\n            let x = dim.x + dim.width;\n            let y = dim.y;\n\n            if (positionRight) {\n                position = TOOLTIP_LEFT;\n                x += arrowSize;\n            } else if (positionLeft) {\n                x = dim.x - offsetWidth;\n                position = TOOLTIP_RIGHT;\n                x -= arrowSize;\n            } else {\n                position = 'left';\n                x += arrowSize;\n            }\n            if (dim.height < offsetHeight) {\n                y = Math.max(0, dim.y + dim.height / 2 - offsetHeight / 2);\n            }\n\n            const arrowPos = getArrowPos(position, dim, {\n                x,\n                y,\n                boxHeight: offsetHeight,\n                boxWidth: offsetWidth\n            }, this._config);\n\n            return {\n                position,\n                arrowPos,\n                x,\n                y\n            };\n        };\n\n        const positionVertical = () => {\n            let position;\n            let y;\n            // Position tooltip at the center of plot\n            let x = dim.x - offsetWidth / 2 + dim.width / 2;\n\n            // Overflows to the right\n            if ((extent.width - (dim.x + offset.x)) < offsetWidth) {\n                x = extent.width - offsetWidth - offset.x;\n            } else if ((x + offset.x) < extent.x) { // Overflows to the left\n                x = extent.x;\n            }\n\n            if (positionTop) {\n                y = dim.y - offsetHeight - arrowSize;\n                position = TOOLTIP_BOTTOM;\n            } else {\n                y = dim.y + dim.height + arrowSize;\n                position = TOOLTIP_TOP;\n            }\n\n            const arrowPos = getArrowPos(position, dim, {\n                x,\n                y,\n                boxHeight: offsetHeight,\n                boxWidth: offsetWidth\n            }, this._config);\n\n            return {\n                position,\n                arrowPos,\n                x,\n                y\n            };\n        };\n\n        this._target = dim;\n        if (!orientation) {\n            if (positionTop) {\n                orientation = 'vertical';\n            } else if (positionRight || positionLeft) {\n                orientation = 'horizontal';\n            } else {\n                orientation = 'vertical';\n            }\n        }\n\n        if (orientation === 'horizontal') {\n            obj = positionHorizontal();\n        } else if (orientation === 'vertical') {\n            obj = positionVertical();\n        }\n\n        this._position = {\n            x: obj.x,\n            y: obj.y\n        };\n\n        this._arrowPos = obj.arrowPos;\n        if (!arrowDisabled) {\n            placeArrow(this, obj.position, obj.arrowPos);\n        } else {\n            this._tooltipArrow.style('display', 'none');\n            this._tooltipBackground.style('display', 'none');\n        }\n        this._arrowOrientation = obj.position;\n        draw && this.position(obj.x, obj.y);\n        return this;\n    }\n\n    /**\n     * Hides the tooltip element.\n     * @return {Tooltip} Instance of tooltip.\n     */\n    hide () {\n        this._tooltipContainer.style('display', 'none');\n        this._tooltipConnectorContainer.style('display', 'none');\n        return this;\n    }\n\n    /**\n     * Shows the tooltip element.\n     * @return {Tooltip} Instance of tooltip.\n     */\n    show () {\n        this._tooltipContainer.style('display', 'block');\n        return this;\n    }\n\n    extent (extent) {\n        this._extent = extent;\n        return this;\n    }\n\n    offset (offset) {\n        this._offset = offset;\n        return this;\n    }\n\n    remove () {\n        this._tooltipContainer.remove();\n        this._tooltipBackground.remove();\n        this._tooltipConnectorContainer.remove();\n        return this;\n    }\n}\n","import { FieldType } from 'muze-utils';\n\nexport const strategies = {\n    showSelectedItems: (dm) => {\n        const dataObj = dm.getData();\n        const measures = dataObj.schema.filter(d => d.type === FieldType.MEASURE);\n        const aggregatedModel = dm.groupBy([''], measures.reduce((acc, v) => {\n            acc[v.name] = v.defAggFn === 'count' ? 'sum' : v.defAggFn;\n            return acc;\n        }, {}));\n        const fieldsObj = dm.getFieldspace().fieldsObj();\n        const fieldsConf = aggregatedModel.getFieldsConfig();\n        let values = [{\n            value: `${dataObj.data.length}`,\n            style: {\n                'font-weight': 'bold'\n            }\n        }, 'Items Selected'];\n        const measureNames = measures.map(d => d.name);\n        if (measureNames.length) {\n            values = [...values, ...[`(${fieldsObj[measureNames[0]].defAggFn().toUpperCase()}) ${measureNames[0]}`,\n                {\n                    value: `${aggregatedModel.getData().data[0][fieldsConf[measureNames[0]].index].toFixed(2)}`,\n                    style: {\n                        'font-weight': 'bold'\n                    }\n                }]];\n        }\n        return [values];\n    }\n};\n","import { Tooltip as TooltipRenderer } from '@chartshq/muze-tooltip';\nimport { FieldType } from 'muze-utils';\nimport { spaceOutBoxes } from '../helper';\nimport { strategies } from './strategies';\nimport { FRAGMENTED } from '../../enums/constants';\nimport SpawnableSideEffect from '../spawnable';\n\nimport './styles.scss';\n\nexport default class Tooltip extends SpawnableSideEffect {\n    constructor (...params) {\n        super(...params);\n        this._tooltips = {};\n        this._strategies = strategies;\n        this._strategy = 'default';\n    }\n\n    static defaultConfig () {\n        return {\n            padding: 5,\n            offset: {\n                x: 0,\n                y: 0\n            }\n        };\n    }\n\n    static formalName () {\n        return 'tooltip';\n    }\n\n    apply (selectionSet, payload, options = {}) {\n        let totalHeight = 0;\n        let totalWidth = 0;\n        const dataModel = selectionSet.mergedEnter.model;\n        const context = this.firebolt.context;\n        const drawingInf = this.drawingContext();\n        if ((dataModel.isEmpty() || payload.criteria === null) || selectionSet.isSourceFieldPresent === false) {\n            this.hide(options, null);\n            return this;\n        }\n\n        const tooltips = this._tooltips;\n        const config = this.config();\n        const boundBox = {\n            width: drawingInf.width,\n            height: drawingInf.height\n        };\n        const showInPosition = payload.showInPosition;\n        const pad = config.padding;\n        const dataModels = [];\n        const fragmented = config.mode === FRAGMENTED;\n        const sourceInf = context.getSourceInfo();\n        const fields = sourceInf.fields;\n        const xFieldDim = fields.x[0] ? fields.x[0].type() === FieldType.DIMENSION : false;\n        const showVertically = !!xFieldDim;\n        const tooltipPos = payload.position;\n        const boxes = [];\n        const enter = {};\n        const uids = dataModel.getData().uids;\n        if (fragmented) {\n            dataModels.push(...uids.map(d => dataModel.select((fieldsArr, i) => i === d, {\n                saveChild: false\n            })));\n        } else {\n            dataModels.push(dataModel);\n        }\n\n        let target = payload.target;\n        let targetFields = [];\n        if (target) {\n            targetFields = target[0] || [];\n            const sourceFields = payload.sourceFields;\n            const indices = [];\n            for (let i = 0, len = targetFields.length; i < len; i++) {\n                if (sourceFields.indexOf(targetFields[i]) !== -1) {\n                    indices.push(i);\n                }\n            }\n            target = target.map(d => d.filter((v, i) => indices.indexOf(i) !== -1));\n        }\n\n        const plotDimensions = context.getPlotPointsFromIdentifiers(target || payload.criteria, {\n            getBBox: true\n        });\n\n        // Show tooltip for each datamodel\n        for (let i = 0; i < dataModels.length; i++) {\n            let plotDim = plotDimensions[i];\n            if (fragmented) {\n                const dimensions = dataModels[i].getData().schema.filter(d => d.type === FieldType.DIMENSION)\n                    .map(d => d.name);\n                plotDim = context.getPlotPointsFromIdentifiers(dataModels[i].project(dimensions), { getBBox: true });\n                plotDim = plotDim && plotDim[0];\n            }\n\n            let dt = dataModels[i];\n            if (config.fields) {\n                dt = dt.project(config.fields, {\n                    saveChild: false\n                });\n            }\n            if (config.dataTransform) {\n                dt = config.dataTransform(dt, i);\n            }\n\n            enter[i] = true;\n            const { parentContainer: layoutContainer, parentContainerDimensions } = drawingInf;\n            const layoutBoundBox = layoutContainer.getBoundingClientRect();\n            const unitBoundBox = drawingInf.htmlContainer.getBoundingClientRect();\n\n            const offsetLeft = unitBoundBox.left - layoutBoundBox.left;\n            const offsetTop = unitBoundBox.top - layoutBoundBox.top;\n            const tooltipInst = tooltips[i] = tooltips[i] || new TooltipRenderer(layoutContainer,\n                    drawingInf.svgContainer);\n\n            sourceInf.payload = payload;\n            sourceInf.firebolt = this.firebolt;\n            sourceInf.detailFields = context.detailFields();\n            sourceInf.timeDiffs = context.timeDiffsByField();\n            sourceInf.valueParser = context.valueParser();\n            tooltipInst.context(sourceInf);\n            const strategy = strategies[options.strategy];\n            tooltipInst.content(options.strategy || this._strategy, dt, {\n                formatter: strategy,\n                order: options.order\n            })\n                            .config(this.config())\n                            .extent({\n                                x: 0,\n                                y: 0,\n                                width: parentContainerDimensions.width,\n                                height: parentContainerDimensions.height\n                            })\n                            .offset({\n                                x: offsetLeft + (config.offset.x || 0),\n                                y: offsetTop + (config.offset.y || 0)\n                            });\n\n            if (showInPosition) {\n                tooltipInst.position(tooltipPos.x + pad, tooltipPos.y + pad);\n            } else if (plotDim) {\n                tooltipInst.positionRelativeTo({\n                    x: plotDim.x,\n                    y: plotDim.y,\n                    width: plotDim.width || 0,\n                    height: plotDim.height || 0\n                }, {\n                    orientation: fragmented ?\n                        (showVertically ? 'horizontal' : 'vertical') : undefined\n                });\n            } else {\n                tooltipInst.hide();\n                break;\n            }\n\n            if (fragmented) {\n                const position = tooltipInst._position;\n                const tooltipBoundBox = tooltipInst._tooltipContainer.node().getBoundingClientRect();\n\n                totalHeight += tooltipBoundBox.height + pad;\n                totalWidth += tooltipBoundBox.width + pad;\n                if (showVertically ? totalHeight > drawingInf.height : totalWidth > drawingInf.width) {\n                    break;\n                }\n                boxes.push({\n                    x: position.x,\n                    y: position.y,\n                    width: tooltipBoundBox.width,\n                    height: tooltipBoundBox.height,\n                    tooltip: tooltipInst\n                });\n            }\n        }\n\n        for (const key in tooltips) {\n            if (!enter[key]) {\n                const tooltip = tooltips[key];\n                tooltip.content(payload.action, null);\n                if (!tooltip.getContents().length) {\n                    tooltip.remove();\n                    delete tooltips[key];\n                }\n            }\n        }\n        if (fragmented) {\n            spaceOutBoxes(boxes, boundBox, showVertically);\n            boxes.forEach(box => box.tooltip.position(box.x, box.y, {\n                repositionArrow: true\n            }));\n        }\n        return this;\n    }\n\n    hide (options) {\n        const tooltips = this._tooltips;\n        for (const key in tooltips) {\n            if ({}.hasOwnProperty.call(tooltips, key)) {\n                const strategy = options.strategy || this._strategy;\n                tooltips[key].content(strategy, null);\n                tooltips[key].hide();\n            }\n        }\n    }\n}\n","export const spaceOutBoxes = (boxes, extent, showVertically) => {\n    let y;\n    let height;\n    let x;\n    let width;\n    let i;\n    const pad = 5;\n    const len = boxes.length;\n    const spaceOutIfOverlap = (firstBox, secondBox, opposite) => {\n        x = firstBox.x;\n        width = firstBox.width;\n        y = firstBox.y;\n        height = firstBox.height;\n        const bottom = y + height;\n        const right = x + width;\n\n        if (showVertically) {\n            if (opposite ? y < (secondBox.y + secondBox.height) : bottom > secondBox.y) {\n                secondBox.y = opposite ? firstBox.y - secondBox.height - pad :\n                        bottom + pad;\n            }\n        } else if (opposite ? x < (secondBox.x + secondBox.width) : right > secondBox.x) {\n            secondBox.x = opposite ? firstBox.x - secondBox.width - pad :\n                    right + pad;\n        }\n    };\n\n    boxes.sort((a, b) => (showVertically ? a.y - b.y : a.x - b.x));\n    i = 0;\n\n    for (i = 0; i < len - 1; i++) {\n        spaceOutIfOverlap(boxes[i], boxes[i + 1]);\n    }\n\n    if ((boxes[i].y + boxes[i].height) > extent.height ||\n            (boxes[i].x + boxes[i].width) > extent.width) {\n        if (showVertically) {\n            boxes[i].y -= (boxes[i].height + boxes[i].y) - extent.height;\n        } else {\n            boxes[i].x -= (boxes[i].width + boxes[i].x) - extent.width;\n        }\n        for (i = len - 1; i > 0; i--) {\n            spaceOutIfOverlap(boxes[i], boxes[i - 1], true);\n        }\n    }\n    return boxes;\n}\n;\n","import { selectElement, FieldType } from 'muze-utils';\n\nimport './styles.scss';\nimport { CLASSPREFIX } from '../../enums/constants';\nimport SpawnableSideEffect from '../spawnable';\n\nexport default class Crossline extends SpawnableSideEffect {\n    static defaultConfig () {\n        return {\n            className: `${CLASSPREFIX}-crossline-group`,\n            bandClass: `${CLASSPREFIX}-crossband`,\n            lineClass: `${CLASSPREFIX}-crossline`\n        };\n    }\n\n    static formalName () {\n        return 'crossline';\n    }\n\n    apply (selectionSet, payload) {\n        let height;\n        let bandWidth;\n        let px;\n        let width;\n        const {\n            className,\n            bandClass,\n            lineClass\n        } = this.config();\n        const dataModel = selectionSet.mergedEnter.model;\n        const drawingInf = this.drawingContext();\n        if (payload.criteria && dataModel && dataModel.isEmpty()) {\n            return this;\n        }\n        if (payload.criteria === null || !dataModel) {\n            this.hide();\n            return this;\n        }\n\n        const dataObj = dataModel.getData();\n        const sourceInf = this.firebolt.context.getSourceInfo();\n        const axes = sourceInf.axes;\n        const axisFields = sourceInf.fields;\n        const fields = selectionSet.fields;\n        const data = dataObj.data;\n        const fieldsConfig = dataModel.getFieldsConfig();\n        const svgContainer = drawingInf.sideEffectGroup;\n\n        const elemData = [];\n        fields.forEach((field) => {\n            const fieldIndex = fieldsConfig[field] && fieldsConfig[field].index;\n            const dataArr = data.map(d => d[fieldIndex]);\n            const axisIndex = [['x', 0], ['x', 1], ['y', 0], ['y', 1]].find((arr) => {\n                const fieldInst = axisFields[arr[0]][arr[1]];\n                return fieldInst && fieldInst.type() === FieldType.DIMENSION &&\n                    fieldInst.getMembers().indexOf(field) !== -1;\n            });\n            if (axisIndex !== undefined && data.length) {\n                const type = axisIndex[0];\n                const axis = axes[type][axisIndex[1]];\n                const value = dataArr[0];\n                bandWidth = axis.getUnitWidth() || 0;\n                px = axis.getScaleValue(value) + bandWidth / 2 + drawingInf.xOffset;\n                const plotWidth = Math.max(...this.firebolt.context.layers().map(layer => layer.getPlotSpan()[type]));\n                const pad = Math.max(...this.firebolt.context.layers().map(layer => layer.getPlotPadding()[type]));\n                height = drawingInf.height;\n                width = drawingInf.width;\n                const startPx = px - plotWidth / 2 - pad / 2;\n                const endPx = px + plotWidth / 2 + pad / 2;\n                const dataPoint = {};\n                if (type === 'y') {\n                    dataPoint.d = `M 0 ${startPx} L 0 ${endPx} L ${width} ${endPx} L ${width} ${startPx} Z`;\n                } else {\n                    dataPoint.d = `M ${startPx} 0 L ${endPx} 0 L ${endPx} ${height} L ${startPx} ${height} Z`;\n                }\n                dataPoint.className = plotWidth ? bandClass : lineClass;\n                elemData.push(dataPoint);\n            }\n        });\n        if (elemData.length) {\n            const parentGroup = this.createElement(svgContainer, 'g', [1], className);\n            const elem = this.createElement(parentGroup, 'path', elemData);\n            elem.attr('d', d => d.d).style('pointer-events', 'none')\n                            .attr('class', d => d.className);\n        }\n        return this;\n    }\n\n    hide () {\n        const className = this.config().className;\n        const drawingInf = this.drawingContext();\n        selectElement(drawingInf.sideEffectGroup).selectAll(`.${className}`).remove();\n    }\n}\n","const fadeFn = (set, context, strategy) => {\n    const {\n        mergedEnter,\n        mergedExit,\n        exitSet,\n        completeSet\n    } = set;\n\n    if (!mergedEnter.length && !mergedExit.length) {\n        context.applyInteractionStyle(completeSet, {}, strategy, false);\n    } else {\n        context.applyInteractionStyle(exitSet[1], {}, strategy, true);\n        context.applyInteractionStyle(mergedEnter, {}, strategy, false);\n    }\n};\n\nexport const strategies = {\n    fade: fadeFn,\n    focus: (set, context) => {\n        const {\n            mergedEnter,\n            mergedExit,\n            completeSet\n        } = set;\n        if (!mergedEnter.length && !mergedExit.length) {\n            context.applyInteractionStyle(completeSet, {}, 'focus', false);\n        } else {\n            context.applyInteractionStyle(mergedExit, {}, 'focus', true);\n            context.applyInteractionStyle(mergedEnter, {}, 'focus', false);\n        }\n    },\n    highlight: (set, context) => {\n        const {\n            mergedEnter,\n            mergedExit,\n            entrySet,\n            exitSet,\n            completeSet\n        } = set;\n        if (!mergedEnter.length && !mergedExit.length) {\n            context.applyInteractionStyle(completeSet, {}, 'highlight', false);\n        } else {\n            context.applyInteractionStyle(entrySet[1], {}, 'highlight', true);\n            context.applyInteractionStyle(exitSet[1], {}, 'highlight', false);\n        }\n    }\n};\n","import SurrogateSideEffect from '../surrogate';\nimport { strategies } from './strategy';\n\nexport default class PlotHighlighter extends SurrogateSideEffect {\n    constructor (...params) {\n        super(...params);\n        this._strategy = 'highlight';\n        this._strategies = strategies;\n    }\n\n    static formalName () {\n        return 'highlighter';\n    }\n\n    static target () {\n        return 'visual-unit';\n    }\n\n    apply (selectionSet, payload, options = {}) {\n        const strategy = this._strategies[options.strategy || this._strategy];\n\n        if (selectionSet.isSourceFieldPresent !== false) {\n            strategy(selectionSet, this, options.strategy || this._strategy);\n        }\n\n        return this;\n    }\n}\n","import SurrogateSideEffect from '../surrogate';\n\nexport default class FilterEffect extends SurrogateSideEffect {\n    static formalName () {\n        return 'filter';\n    }\n\n    static target () {\n        return 'visual-unit';\n    }\n\n    static mutates () {\n        return true;\n    }\n\n    apply (selectionSet, payload) {\n        const context = this.firebolt.context;\n        const entryModel = selectionSet.mergedEnter.model;\n        if (payload.criteria === null) {\n            context.clearCaching().resetData();\n        } else {\n            context.enableCaching().data(entryModel);\n        }\n        return this;\n    }\n}\n","import { DataModel, STATE_NAMESPACES, getObjProp } from 'muze-utils';\nimport { CLASSPREFIX } from '../../enums/constants';\nimport SpawnableSideEffect from '../spawnable';\n\nimport './styles.scss';\n\nconst addLayer = (layerDefs, layerRegistry, context, sideEffect) => {\n    const layers = [];\n    if (layerDefs) {\n        layerDefs.forEach((layerDef) => {\n            const mark = layerDef.mark;\n            const layerCls = layerRegistry[mark];\n            if (layerCls && layerCls.shouldDrawAnchors()) {\n                const depLayerEncoding = layerDef.def.encoding;\n                const encoding = {\n                    x: getObjProp(depLayerEncoding, 'x', 'field'),\n                    y: getObjProp(depLayerEncoding, 'y', 'field'),\n                    color: getObjProp(depLayerEncoding, 'color', 'field'),\n                    size: {\n                        field: getObjProp(depLayerEncoding, 'size', 'field'),\n                        value: sideEffect.defaultSizeValue()\n                    }\n                };\n                const name = `${layerDef.def.name}-${sideEffect.constructor.formalName()}`;\n                const layerObj = {\n                    instances: context.addLayer({\n                        name,\n                        mark: 'point',\n                        className: sideEffect.constructor.defaultConfig().className,\n                        encoding,\n                        transform: {\n                            type: 'identity'\n                        },\n                        transition: sideEffect.getTransitionConfig(),\n                        calculateDomain: false,\n                        source: dm => dm.select(() => false, {\n                            saveChild: false\n                        }),\n                        interactive: false,\n                        render: false\n                    }),\n                    linkedLayer: layerDef.def.name\n                };\n                layers.push(layerObj);\n            }\n        });\n    }\n    return layers;\n};\n\nexport default class AnchorEffect extends SpawnableSideEffect {\n    constructor (...params) {\n        super(...params);\n        this._layersMap = {};\n        this.addAnchorLayers();\n    }\n\n    static target () {\n        return 'visual-unit';\n    }\n\n    static defaultConfig () {\n        return {\n            className: `${CLASSPREFIX}-anchors-group`\n        };\n    }\n\n    static formalName () {\n        return 'anchors';\n    }\n\n    addAnchorLayers () {\n        const context = this.firebolt.context;\n        const metaInf = context.metaInf();\n        const layerRegistry = context.registry().layerRegistry;\n        const layerDefsVal = context.layerDef();\n        context.store().registerImmediateListener(\n            `${STATE_NAMESPACES.UNIT_LOCAL_NAMESPACE}.${metaInf.namespace}.layerDef`, ([, layerDefs]) => {\n                this._layers = addLayer(layerDefs, layerRegistry, context, this);\n            });\n        this._layers = addLayer(layerDefsVal, layerRegistry, context, this);\n        return this;\n    }\n\n    getTransitionConfig () {\n        return {\n            disabled: true\n        };\n    }\n\n    /**\n     * Returns the default area value of the anchor point.\n     * @return { number } Default area value of anchor.\n     */\n    defaultSizeValue () {\n        return 100;\n    }\n\n    apply (selectionSet) {\n        const self = this;\n        const dataModel = selectionSet.mergedEnter.model;\n        if (selectionSet.isSourceFieldPresent !== false) {\n            const drawingInf = this.drawingContext();\n            const sideEffectGroup = drawingInf.sideEffectGroup;\n            const className = `${this.config().className}`;\n            const layers = this._layers;\n            const parentGroup = this.createElement(sideEffectGroup, 'g', [1], `${className}-container`);\n            const anchorGroups = this.createElement(parentGroup, 'g', Object.values(layers));\n            anchorGroups.each(function (layer) {\n                const instances = layer.instances;\n                const elems = self.createElement(this, 'g', instances, className);\n                const linkedLayer = self.firebolt.context.getLayerByName(layer.linkedLayer);\n                const [transformedData, schema] = linkedLayer.getTransformedDataFromIdentifiers(dataModel);\n                const transformedDataModel = new DataModel(transformedData, schema);\n                elems.each(function (d, i) {\n                    instances[i].data(transformedDataModel).mount(this);\n                });\n            });\n        }\n        return this;\n    }\n}\n","import AnchorEffect from './anchors';\nimport { CLASSPREFIX } from '../enums/constants';\n\nexport default class PersistentAnchors extends AnchorEffect {\n    static formalName () {\n        return 'persistent-anchors';\n    }\n\n    static defaultConfig () {\n        return {\n            className: `${CLASSPREFIX}-persistent-anchors`\n        };\n    }\n\n    getTransitionConfig () {\n        return {\n            disabled: true\n        };\n    }\n}\n","import AnchorEffect from './anchors';\nimport { CLASSPREFIX } from '../enums/constants';\n\nexport default class BrushAnchors extends AnchorEffect {\n    static formalName () {\n        return 'brush-anchors';\n    }\n\n    static defaultConfig () {\n        return {\n            className: `${CLASSPREFIX}-brush-anchors`\n        };\n    }\n\n    getTransitionConfig () {\n        return {\n            disabled: true\n        };\n    }\n}\n","import * as BEHAVIOURS from './enums/behaviours';\n\nexport const behaviourEffectMap = {\n    [BEHAVIOURS.BRUSH]: ['selectionBox', {\n        name: 'highlighter',\n        options: {\n            strategy: 'fade'\n        }\n    }, 'brush-anchors'],\n    [`${BEHAVIOURS.BRUSH},${BEHAVIOURS.SELECT}`]: [{\n        name: 'tooltip',\n        options: {\n            strategy: 'showSelectedItems',\n            order: 0,\n            filter: context => context.config().mode === 'fragmented'\n        }\n    }],\n    [BEHAVIOURS.HIGHLIGHT]: [{\n        name: 'highlighter',\n        options: {\n            strategy: 'highlight'\n        }\n    }, 'crossline', {\n        name: 'tooltip',\n        options: {\n            order: 9999\n        }\n    }, 'anchors'],\n    [BEHAVIOURS.FILTER]: ['filter'],\n    [BEHAVIOURS.SELECT]: [{\n        name: 'highlighter',\n        options: {\n            strategy: 'focus'\n        }\n    }, 'persistent-anchors']\n};\n","export const CLASSPREFIX = 'muze';\nexport const STACK = 'stack';\nexport const GROUP = 'group';\nexport const IDENTITY = 'identity';\nexport const ANGLE = 'angle';\nexport const RADIUS = 'radius';\nexport const SIZE = 'size';\nexport const COLOR = 'color';\nexport const SHAPE = 'shape';\nexport const OUTER_RADIUS_VALUE = 'outerRadiusValue';\nexport const TEXT_ANCHOR_MIDDLE = 'middle';\nexport const ENCODING = {\n    X: 'x',\n    Y: 'y',\n    X0: 'x0',\n    Y0: 'y0'\n};\n\nexport const ASCENDING = 'asc';\n\nexport const AGG_FN_SUM = 'sum';\n\nexport const AREA_LAYER = 'area';\nexport const ARC_LAYER = 'arc';\nexport const LINE_LAYER = 'line';\nexport const TEXT_LAYER = 'text';\nexport const POINT_LAYER = 'point';\nexport const BAR_LAYER = 'bar';\nexport const TICK_LAYER = 'tick';\nexport const SIMPLE_LAYER = 'simple';\nexport const BASE_LAYER = 'base';\n","import { CLASSPREFIX, STACK } from '../../enums/constants';\n\nexport const defaultConfig = {\n    classPrefix: CLASSPREFIX,\n    defClassName: 'layer-area',\n    className: '',\n    interpolate: 'linear',\n    transform: {\n        type: STACK\n    },\n    interaction: {\n\n    },\n    nearestPointThreshold: 10,\n    encoding: {\n        color: {},\n        x: {},\n        y: {},\n        y0: {},\n        strokeOpacity: {\n            value: 1\n        }\n    },\n    transition: {\n        effect: 'cubic',\n        duration: 1000\n    },\n    connectNullData: false\n};\n","import { ERROR_MSG } from 'muze-utils';\n\n/**\n * This is an interface class which any new layer class has to extend.\n *\n * @example\n * class BarLayer extends BaseLayer {\n *   update (params) {\n *       // super.update(params);\n *       // Update the bar layer\n *   }\n * }\n * @class\n */\nexport default class SimpleLayer {\n\n    formalName () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    /**\n     * Sets or gets the dependencies.\n     * @param {Object} dependencies Dependencies needed by layer\n     * @return {BaseLayer} Instance of base layer.\n     */\n    dependencies () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    /**\n     * Returns the config of the layer\n     *\n     * @param {Object} config Configuration of layer\n     * @return {Object} configuration of layer\n     */\n    config () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    /**\n     * Acts as a getter or setter function\n     * When setter\n     * Returns the datamodel of the layer\n     * @param { DataModel } dataModel instance of DataModel\n     * @return { DataModel } DataModel instance of the layer\n     */\n    data () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    /**\n     * Returns a serialized schema of the layer\n     * @return {Object} Serialized schema\n     */\n    serialize () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    /**\n     * Returns the unique identifier of this layer\n     * @return {string} id of the layer\n     */\n    id () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n    /*\n     * This method resolves the x, y, x0 and y0 values from the transformed data.\n     * It also checks the type of transformed data for example, if it is a stacked data\n     * then it fetches the y and y0 values from the stacked data.\n     * @param {Array.<Array>} transformedData transformed data\n     * @param {Object} fieldMap field definitions\n     * @param {string} transformType type of transformed data - stack, group or identity.\n     * @return {Array.<Object>} Normalized data\n     * @private\n     */\n    normalizeTransformedData () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    /**\n     * Gets the transform method from transform factory based on type of transform. It then calls the\n     * transform method with the data and passes the configuration parameters of transform such as\n     * groupBy, value field, etc.\n     *\n     * @param {DataModel} dataModel Instance of dataModel\n     * @param {Object} config configuration for transforming data\n     * @return {Array.<Array>} Transformed data.\n     * @private\n     */\n    getTransformedData () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    /**\n     * Calculates the domain from the data.\n     * It checks the type of field and calculates the domain based on that. For example, if it\n     * is a quantitative or temporal field, then it calculates the min and max from the data or\n     * if it is a nominal field then it gets all the values from the data of that field.\n     * @param {Array} data DataArray\n     * @return {Array} Domain values array.\n     */\n    _calculateDomainFromData () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    /**\n     * Returns the domain for the axis.\n     *\n     * @param {string} encodingType type of encoding x, y, color, etc.\n     * @return {Object} Axis domains\n     */\n    getDomain () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    /**\n     * Abstract method for getting nearest point\n     * @return {BaseLayer} Instance of base layer\n     */\n    getNearestPoint () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    /**\n     * Abstract method for highlighting points\n     * @return {BaseLayer} Instance of base layer\n     */\n    highlightPoint () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    /**\n     * Abstract method for deselecting points\n     * @return {BaseLayer} Instance of base layer\n     */\n    dehighlightPoint () {\n        return this;\n    }\n\n    linkLayerStore () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    /**\n     * Sets the container element for the layer to be renderered.\n     * @param {SVGElement} mountPoint SVG element or group element.\n     */\n    mount () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    render () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n}\n","export const props = {\n    axes: {},\n    mount: {},\n    measurement: {},\n    metaInf: {},\n    data: {},\n    config: {},\n    valueParser: {\n        defaultValue: val => val\n    }\n};\n","/**\n * @module Axis\n * This file declares a class that is used to render an axis to add  meaning to\n * plots.\n */\nimport { Symbols } from 'muze-utils';\nimport * as AxisOrientation from '../enums/axis-orientation';\n\n/**\n * @module Axis\n * This file exports constants that are used to reference axis orientations\n * in a consistent manner.\n */\nexport const BOTTOM = 'bottom';\nexport const TOP = 'top';\nexport const LEFT = 'left';\nexport const RIGHT = 'right';\n\n/**\n  * This object is used to associate the axis orientation with the d3 class\n  * used to represent that axis.\n  */\nexport const axisOrientationMap = {\n    [AxisOrientation.LEFT]: Symbols.axisLeft,\n    [AxisOrientation.BOTTOM]: Symbols.axisBottom,\n    [AxisOrientation.RIGHT]: Symbols.axisRight,\n    [AxisOrientation.TOP]: Symbols.axisTop\n};\n","/**\n * @module axis\n * This file exports constants used to reference scale type\n * consistently throughout the project.\n */\nexport const LINEAR = 'linear';\nexport const BAND = 'band';\nexport const TIME = 'temporal';\nexport const COLOR = 'color';\nexport const ORDINAL = 'ordinal';\nexport const QUANTIZE = 'quantize';\nexport const QUANTILE = 'quantile';\nexport const LOG = 'log';\nexport const POW = 'pow';\nexport const IDENTITY = 'identity';\nexport const SEQUENTIAL = 'sequential';\nexport const THRESHOLD = 'threshold';\n","export const CLASSPREFIX = 'muze';\n\nexport const CONTINOUS = 'continous';\nexport const DISCRETE = 'discrete';\nexport const SEQUENTIAL = 'sequential';\nexport const ORDINAL = 'ordinal';\nexport const LINEAR = 'linear';\nexport const THRESHOLD = 'threshold';\nexport const QUANTIZE = 'quantize';\nexport const QUANTILE = 'quantile';\n\nexport const COLOR = 'color';\nexport const SHAPE = 'shape';\nexport const SIZE = 'size';\n\nexport const DOMAIN = 'domain';\nexport const BAND = 'band';\nexport const HIDDEN = 'hidden';\nexport const NUMBER = 'number';\nexport const BOTTOM = 'bottom';\nexport const TOP = 'top';\n\nexport const RGB = 'rgb';\nexport const HEX = 'hex';\nexport const HSLA = 'hsla';\nexport const HSL = 'hsl';\n\n","import { scales, colorSchemes } from 'muze-utils';\n\nimport {\n    SEQUENTIAL,\n    ORDINAL,\n    LINEAR,\n    CONTINOUS,\n    THRESHOLD,\n    QUANTIZE\n} from './enums/constants';\n\nimport * as ScaleType from './enums/scale-type';\n\nconst {\n    scaleLinear,\n    scaleThreshold,\n    scaleLog,\n    scalePow,\n    scaleIdentity,\n    scaleOrdinal,\n    scaleSequential,\n    scaleQuantize,\n    scaleQuantile,\n    schemeCategory10,\n    schemeCategory20,\n    schemeCategory20b,\n    scaleBand,\n    scaleTime\n} = scales;\nexport const scaleMap = {\n    [ScaleType.LINEAR]: scaleLinear,\n    [ScaleType.BAND]: scaleBand,\n    [ScaleType.QUANTIZE]: scaleQuantize,\n    [ScaleType.QUANTILE]: scaleQuantile,\n    [ScaleType.THRESHOLD]: scaleThreshold,\n    [ScaleType.SEQUENTIAL]: scaleSequential,\n    [ScaleType.LOG]: scaleLog,\n    [ScaleType.POW]: scalePow,\n    [ScaleType.IDENTITY]: scaleIdentity,\n    [ScaleType.TIME]: scaleTime,\n    [ScaleType.COLOR]: scaleLinear,\n    [ScaleType.ORDINAL]: scaleOrdinal\n};\nexport const SCHEMES = {\n    SCHEME1: schemeCategory10,\n    SCHEME2: schemeCategory20,\n    SCHEME3: schemeCategory20b\n};\n\n/**\n * Accepts a scheme in a string format and returns the scale from d3-scale-chromatic\n *\n * @export\n * @param {string} scheme a string representing the kind of scheme for the color axis\n * @return {Object} The corresponding scale from a scheme type from d3 chromatic scale\n */\nexport function getScheme (scheme) {\n    if (scheme[0] === 'i') {\n        return scaleSequential(colorSchemes[scheme]);\n    }\n    return scaleOrdinal(colorSchemes[scheme]);\n}\n\n/**\n *\n *\n * @export\n * @param {*} scheme\n *\n */\nexport function getSchemeType (scheme) {\n    let schemeType = '';\n    if (scheme && typeof (scheme) === 'string') {\n        schemeType = scheme[0] === 'i' ? SEQUENTIAL : ORDINAL;\n    } else {\n        schemeType = ORDINAL;\n    }\n    return schemeType;\n}\n\n/**\n * This function is used to create a scale that is assigned to\n * an instance of axis.\n *\n * @export\n * @param {Object} params the input parameters to create a Scale object\n * @param {string} params.type the type of scale\n * @param {Array} params.range the range of scale\n * @return {Object} instance of scale\n */\nexport function createScale (params) {\n    if (!params.type || !scaleMap[params.type]) {\n        throw new Error(`${params.type} is not a valid scale type`);\n    }\n    if (!Array.isArray(params.range)) {\n        throw new Error('range parameter must be an array');\n    }\n    let scaleFactory = null;\n    const range = params.range;\n    // @todo: do it using scale decorator\n    if (params.type === LINEAR && params.interpolator) {\n        scaleFactory = scaleMap[params.interpolator];\n        if (params.interpolator === ScaleType.POW) {\n            return scaleFactory().range(range).exponent(params.exponent);\n        } else if (params.interpolator === ScaleType.LOG) {\n            return scaleFactory().range(range).base([params.base]);\n        }\n    } else {\n        scaleFactory = scaleMap[params.type];\n    }\n\n    if (params.type === QUANTIZE) {\n        scaleFactory().nice();\n    }\n    return scaleFactory().range(range);\n}\n\n/**\n * This method is used to update the range of a scale\n * so that the core module can remain agnostic of the d3\n * scale api.\n *\n * @export\n * @param {Scale} scale Instance of d3 Scale.\n * @param {Array} range new range of the scale.\n * @return {Scale} Updated scale.\n */\nexport function updateScaleRange (scale, range) {\n    return scale.range(range);\n}\n\n/**\n *\n *\n * @export\n * @param {*} domainType\n * @param {*} rangeType\n * @param {*} steps\n *\n */\nexport function getScaleType (domainType, rangeType, steps) {\n    if (rangeType === CONTINOUS) {\n        return LINEAR;\n    }\n    if (domainType === CONTINOUS) {\n        if (steps instanceof Array) {\n            return THRESHOLD;\n        }\n        return QUANTIZE;\n    }\n    return ORDINAL;\n}\n","import { getUniqueId } from 'muze-utils';\nimport { CLASSPREFIX } from '../enums/constants';\n\n/**\n *\n *\n */\nexport const defaultConfig = {\n    id: getUniqueId(),\n    adjustRange: false,\n    axisName: {\n        defClassName: 'axis-name'\n    },\n    axisNamePadding: 12,\n    base: 10,\n    classPrefix: CLASSPREFIX,\n    className: `${CLASSPREFIX}-axis`,\n    exponent: 1,\n    interpolator: 'linear',\n    fixedBaseline: true,\n    labels: {\n        rotation: null,\n        smartTicks: null\n    },\n    orientation: 'left',\n    numberFormat: val => val,\n    padding: 0.3,\n    nice: true,\n    numberOfTicks: 10,\n    rotate: false,\n    show: true,\n    showAxisName: true,\n    showInnerTicks: true,\n    showOuterTicks: true,\n    style: {},\n    type: 'linear',\n    tickFormat: null,\n    tickValues: null,\n    xOffset: 0,\n    yOffset: 0\n};\n\n","/**\n * This file exports functionality that is used to render axis.\n */\nimport { selectElement, makeElement, angleToRadian } from 'muze-utils';\nimport * as AxisOrientation from './enums/axis-orientation';\nimport { LINEAR, HIDDEN, BOTTOM, TOP } from './enums/constants';\n\n/**\n *\n *\n * @param {*} instance\n * @param {*} container\n * @param {*} labelManager\n * @param {*} config\n */\nconst rotateAxis = (instance, tickText, labelManager) => {\n    let rotation;\n    const axis = instance.axis();\n    const config = instance.config();\n    const renderConfig = instance.renderConfig();\n    const smartTicks = instance.smartTicks();\n    const scale = axis.scale();\n    const labelFunc = scale.ticks || scale.quantile || scale.domain;\n    const ticks = labelFunc();\n    const {\n        orientation,\n        fixedBaseline,\n        type\n    } = config;\n    const {\n        labels\n    } = renderConfig;\n\n    rotation = labels.rotation;\n\n    const tickSize = instance.getTickSize();\n    tickText.each(function (d, index) {\n        let yShift;\n        let xShift;\n        let datum = smartTicks[index] ? smartTicks[index].text : d;\n\n        datum = datum.toString();\n\n        const tickLabelDim = labelManager.getOriSize(datum);\n\n        const width = tickLabelDim.width * 0.5;\n        const height = tickLabelDim.height * 0.5;\n\n        if (rotation < 0) {\n            rotation = 360 + rotation;\n        }\n\n        const quadrant = 4 - Math.floor(rotation / 90);\n        const rotationNormalizer = ((quadrant % 2 === 0) ? rotation : 180 * Math.ceil(rotation / 180) - rotation) % 180;\n\n        yShift = Math.sqrt(height ** 2 + width ** 2) * Math.sin(angleToRadian(rotationNormalizer));\n\n        if ((quadrant === 3 || quadrant === 2) && !(rotationNormalizer > 67.5 && rotationNormalizer <= 90)) {\n            yShift += height * 2;\n        }\n        xShift = width;\n\n        if (rotation === 90) {\n            xShift = height;\n        } else if (rotation === 270) {\n            xShift = -height;\n        } else {\n            xShift = 0;\n        }\n\n        if (orientation === AxisOrientation.TOP) {\n            xShift = (fixedBaseline && ticks[0] === d && type === LINEAR) ? xShift + xShift / 2 : xShift;\n            selectElement(this)\n                            .attr('transform', `translate(${-xShift + tickSize}\n                                ${-yShift - tickSize}) rotate(${rotation})`);\n        } else {\n            xShift = (fixedBaseline && ticks[0] === d && type === LINEAR) ? xShift - xShift / 2 : xShift;\n\n            selectElement(this)\n                            .attr('transform', `translate(${xShift - tickSize}\n                                ${yShift + tickSize}) rotate(${rotation})`);\n        }\n        selectElement(this).transition()\n                        .duration(1000).text(datum);\n    });\n    return tickText;\n};\n\n/**\n *\n *\n * @param {*} tickText\n * @param {*} axisInstance\n */\nconst changeTickOrientation = (selectContainer, axisInstance, tickSize) => {\n    const {\n        _smartTicks\n    } = axisInstance;\n    const config = axisInstance.config();\n    const renderConfig = axisInstance.renderConfig();\n    const labelManager = axisInstance.dependencies().labelManager;\n    const {\n        orientation,\n        classPrefix\n    } = config;\n    const {\n        labels\n    } = renderConfig;\n    const {\n        rotation,\n        smartTicks: isSmartTicks\n    } = labels;\n\n    const tickText = selectContainer.selectAll('.tick text');\n    tickText.selectAll('tspan').remove();\n\n    // rotate labels if not enough space is available\n    if (rotation && (orientation === TOP || orientation === BOTTOM)) {\n        rotateAxis(axisInstance, tickText, labelManager);\n    } else if (!rotation && !isSmartTicks) {\n        tickText.attr('transform', '');\n    } else {\n        tickText.text('');\n        if (orientation === TOP || orientation === BOTTOM) {\n            tickText.attr('y', 0)\n                            .attr('x', 0)\n                            .attr('transform', '')\n                            .text('');\n            const tspan = makeElement(tickText, 'tspan', (d, i) => {\n                if (_smartTicks[i]) {\n                    return _smartTicks[i].lines;\n                } return [];\n            }, `${classPrefix}-smart-text`);\n\n            tspan.attr('dy', '0')\n                            .style('opacity', '0')\n\n                            .transition()\n                            .duration(1000)\n                            .on('end', axisInstance.registerAnimationDoneHook())\n                            .attr('dy', (d, i) => {\n                                if (orientation === BOTTOM || i !== 0) {\n                                    return _smartTicks[0].oriTextHeight;\n                                }\n                                return -_smartTicks[0].oriTextHeight * (_smartTicks[0].lines.length - 1) - tickSize;\n                            })\n                            .style('opacity', 1)\n                            .text(e => e)\n                            .attr('x', 0);\n        } else {\n            const tspan = makeElement(tickText, 'tspan', (d, i) => _smartTicks[i].lines, `${classPrefix}-smart-text`);\n            tspan.text(e => e);\n        }\n    }\n\n    return tickText;\n};\n\nconst setFixedBaseline = (axisInstance) => {\n    const {\n        fixedBaseline\n    } = axisInstance.config();\n    const {\n        showInnerTicks\n    } = axisInstance.renderConfig();\n    const domain = axisInstance.domain();\n    if (fixedBaseline && domain.length && showInnerTicks) {\n        axisInstance.setFixedBaseline();\n    }\n};\n\n/**\n *\n *\n * @param {*} textNode\n * @param {*} orientation\n * @param {*} measures\n */\nconst setAxisNamePos = (textNode, orientation, measures) => {\n    const {\n        axisNameHeight,\n        yOffset,\n        labelOffset,\n        availableSpace\n    } = measures;\n    switch (orientation) {\n    case AxisOrientation.LEFT:\n        textNode.attr('transform',\n            `translate(${-(availableSpace.width - axisNameHeight)},${yOffset + labelOffset})rotate(-90)`);\n        break;\n    case AxisOrientation.RIGHT:\n        textNode.attr('transform',\n             `translate(${(availableSpace.width - axisNameHeight)},${yOffset + labelOffset})rotate(90)`);\n        break;\n    case AxisOrientation.TOP:\n        textNode.attr('transform',\n             `translate(${availableSpace.width / 2},${-availableSpace.height + axisNameHeight})`);\n        break;\n    case AxisOrientation.BOTTOM:\n        textNode.attr('transform',\n             `translate(${availableSpace.width / 2},${availableSpace.height - axisNameHeight / 2})`);\n        break;\n    default:\n    }\n    return textNode;\n};\n\n/**\n * This method is used to render the axis inside an\n * svg container.\n *\n * @export\n * @param {Object} axisInstance the nput object required to render axis\n * @param {string} axisInstance.orientation the orientation of axis\n * @param {Object} axisInstance.scale instance of d3 scale\n * @param {SVGElement} axisInstance.container the container in which to render\n */\nexport function renderAxis (axisInstance) {\n    const config = axisInstance.config();\n    const renderConfig = axisInstance.renderConfig();\n    const labelManager = axisInstance.dependencies().labelManager;\n    const mount = axisInstance.mount();\n    const range = axisInstance.range();\n    const axis = axisInstance.axis();\n    const scale = axisInstance.scale();\n    const {\n        _axisNameStyle: axisNameStyle,\n        _tickLabelStyle: tickLabelStyle,\n        _tickFormatter: axisTickFormatter,\n        tickValues\n     } = axisInstance;\n    const {\n        orientation,\n        name,\n        xOffset,\n        yOffset,\n        axisNamePadding,\n        className,\n        id,\n        classPrefix\n     } = config;\n    const {\n        show,\n        showAxisName,\n        labels\n    } = renderConfig;\n\n    if (!show) {\n        return;\n    }\n\n    const tickSize = axisInstance.getTickSize();\n\n    const selectContainer = makeElement(selectElement(mount), 'g', [axisInstance], `${className}`, {},\n        key => key.config().id);\n\n    // Set style for tick labels\n    labelManager.setStyle(tickLabelStyle);\n\n    const labelFunc = scale.ticks || scale.quantile || scale.domain;\n\n    const ticks = tickValues || axis.tickValues() || labelFunc();\n\n    axis.tickFormat(axisTickFormatter(ticks));\n\n    // Get range(length of range)\n    const availableSpace = Math.abs(range[0] - range[1]);\n\n    // Get width and height taken by axis labels\n    const labelProps = axisInstance.axisComponentDimensions().largestTickDimensions;\n\n    // Draw axis ticks\n    selectContainer.attr('transform', `translate(${xOffset},${yOffset})`);\n    setFixedBaseline(axisInstance);\n    if (labels.smartTicks === false || tickSize === 0) {\n        selectContainer.transition()\n                        .duration(1000)\n                        .on('end', axisInstance.registerAnimationDoneHook())\n                        .call(axis);\n    } else {\n        selectContainer.call(axis);\n    }\n    selectContainer.selectAll('.tick').classed(`${classPrefix}-ticks`, true);\n    selectContainer.selectAll('.tick line').classed(`${classPrefix}-tick-lines`, true);\n\n    // Set classes for ticks\n    const tickText = selectContainer.selectAll('.tick text');\n    tickText.classed(`${classPrefix}-ticks`, true)\n                    .classed(`${classPrefix}-ticks-${id}`, true);\n\n    changeTickOrientation(selectContainer, axisInstance, tickSize);\n\n    // Create axis name\n    const textNode = makeElement(selectContainer, 'text', [name], `${classPrefix}-axis-name`)\n                    .attr('text-anchor', 'middle')\n                    .classed(`${classPrefix}-axis-name-${id}`, true)\n                    .text(d => d);\n\n    // Hide axis name if show is off\n    textNode.classed(HIDDEN, !showAxisName);\n\n    // render labels based on orientation of axis\n    const labelOffset = availableSpace / 2;\n\n    // Set style for axis name\n    labelManager.setStyle(axisNameStyle);\n    const axisNameSpace = labelManager.getOriSize(name);\n    const measures = {\n        labelProps,\n        tickSize,\n        axisNamePadding,\n        axisNameHeight: axisNameSpace.height,\n        axisNameWidth: axisNameSpace.width,\n        yOffset,\n        xOffset,\n        labelOffset,\n        availableSpace: axisInstance.availableSpace()\n    };\n    // Set position for axis name\n    setAxisNamePos(textNode, orientation, measures);\n}\n","import { BOTTOM, TOP, LEFT, RIGHT } from '../enums/axis-orientation';\n\nconst adjustHorizontalRange = (range, diff) => {\n    range[0] += diff;\n    range[1] -= diff;\n    return range;\n};\nconst adjustVerticalRange = (range, diff) => {\n    range[0] -= diff;\n    range[1] += diff;\n    return range;\n};\n\nconst rangeAdjustmentMap = {\n    [TOP]: adjustHorizontalRange,\n    [BOTTOM]: adjustHorizontalRange,\n    [LEFT]: adjustVerticalRange,\n    [RIGHT]: adjustVerticalRange\n};\n\nexport const setAxisRange = (context, type, rangeBounds, offset) => {\n    context.range(rangeBounds);\n    offset && context.config({ [`${type}Offset`]: offset });\n};\n\nconst getAxisOffset = (timeDiff, range, domain) => {\n    const avWidth = Math.abs(range[1] - range[0]);\n    const pvr = avWidth / (domain[1] - domain[0]);\n    const width = (pvr * timeDiff);\n    const bars = avWidth / width;\n    const barWidth = avWidth / (bars + 1);\n    const diff = avWidth - barWidth * bars;\n\n    return diff / 2;\n};\n\nexport const getAdjustedRange = (minDiff, range, domain, config) => {\n    const {\n        orientation,\n        adjustRange\n    } = config;\n    const diff = getAxisOffset(minDiff, range, domain);\n    if (adjustRange) {\n        return rangeAdjustmentMap[orientation](range, diff);\n    }\n    return range;\n};\n\nexport const spaceSetter = (context, spaceConfig) => {\n    let tickInterval;\n    let heightForTicks;\n    const config = context.config();\n    const {\n        width: availWidth,\n        height: availHeight,\n        padding\n    } = context.availableSpace();\n    const {\n        top,\n        left,\n        bottom,\n        right\n    } = padding;\n    const {\n        isOffset\n    } = spaceConfig;\n    const {\n        showAxisName,\n        labels\n    } = context.renderConfig();\n    const {\n        rotation\n    } = labels;\n    const {\n        fixedBaseline,\n        axisNamePadding,\n        tickValues\n    } = config;\n    const {\n        tickDimensions,\n        allTickDimensions,\n        axisNameDimensions,\n        tickSize\n    } = context.getAxisDimensions();\n    const {\n        height: tickDimHeight,\n        width: tickDimWidth\n    } = tickDimensions;\n\n    const namePadding = showAxisName ? axisNamePadding : 0;\n    const labelConfig = { smartTicks: true, rotation: labels.rotation };\n    const minTickDistance = context._minTickDistance;\n    const minTickSpace = context._minTickSpace;\n    const minDiff = context._minDiff;\n    const domain = context.domain();\n    const axisNameHeight = axisNameDimensions.height;\n    const minWidthBetweenTicks = minTickDistance.width;\n    const minTickWidth = minTickSpace.width;\n    const minTickHeight = minTickSpace.height;\n\n    return {\n        time: {\n            x: () => {\n                const noOfTicks = context.getTickValues().length;\n\n                // Get the Tick Interval\n                tickInterval = ((availWidth - (noOfTicks - 1) * (minWidthBetweenTicks)) / noOfTicks);\n\n                // Get height for ticks\n                heightForTicks = availHeight - axisNameHeight - tickSize - namePadding;\n\n                if (tickInterval < minTickWidth && rotation !== 0) {\n                    // set smart ticks and rotation config\n                    labelConfig.rotation = labels.rotation === null ? -90 : rotation;\n\n                    // Remove ticks if not enough height\n                    if (tickInterval < minTickHeight) {\n                        heightForTicks = availHeight;\n                        tickInterval = minTickHeight;\n                        context.renderConfig({ showInnerTicks: false, showOuterTicks: false });\n                    }\n                }\n                if (availHeight < axisNameHeight) {\n                    context.renderConfig({ show: false });\n                }\n\n                // set range for axis\n                setAxisRange(context, 'y', getAdjustedRange(minDiff, [tickInterval / 2,\n                    availWidth - left - right - tickInterval / 2], domain, config),\n                        isOffset ? availHeight : null);\n\n                context.maxTickSpaces({\n                    width: tickInterval,\n                    height: heightForTicks,\n                    noWrap: rotation !== null\n                });\n                return labelConfig;\n            },\n            y: () => {\n                let widthForTicks = availWidth;\n                const tickShifter = tickDimHeight / 2;\n\n                setAxisRange(context, 'x', getAdjustedRange(minDiff,\n                    [availHeight - top - bottom - tickShifter, tickShifter], domain, config),\n                        isOffset ? availWidth : null);\n\n                if ((availWidth - axisNameHeight - namePadding) <= minWidthBetweenTicks) {\n                    widthForTicks = 0;\n                    context.renderConfig({ showInnerTicks: false, showOuterTicks: false });\n                }\n\n                context.maxTickSpaces({\n                    width: widthForTicks,\n                    height: availHeight,\n                    noWrap: true\n                });\n                if (availWidth < axisNameHeight) {\n                    context.renderConfig({ show: false });\n                }\n                return labelConfig;\n            }\n        },\n        band: {\n            x: () => {\n                setAxisRange(context, 'y', [0, availWidth - left - right], isOffset ? availHeight : null);\n                const range = context.range();\n\n                // Get Tick Interval\n                tickInterval = ((range[1] - range[0]) / (tickValues || domain).length) - minWidthBetweenTicks;\n\n                // Get height available for ticks\n                heightForTicks = availHeight - axisNameHeight - tickSize - namePadding;\n\n                if (tickInterval < minTickWidth && rotation !== 0) {\n                    // set smart ticks and rotation config\n                    labelConfig.rotation = rotation === null ? -90 : rotation;\n                    labelConfig.smartTicks = false;\n\n                    // Ticks with overlapping height\n                    if (tickInterval < minTickHeight) {\n                        heightForTicks = 0;\n                        tickInterval = 0;\n                        context.renderConfig({ showInnerTicks: false, showOuterTicks: false });\n                        context.range([minTickHeight / 2, availWidth - minTickHeight / 2]);\n                    }\n                } else if (tickValues) {\n                    const interval = (availWidth / domain.length) - minWidthBetweenTicks;\n                    if (interval < minTickWidth) {\n                        context.range([minTickHeight / 2, availWidth - minTickHeight / 2]);\n                    }\n                }\n                if (availHeight < axisNameHeight) {\n                    context.renderConfig({ show: false, showInnerTicks: false, showOuterTicks: false });\n                }\n\n                context.maxTickSpaces({\n                    width: tickInterval,\n                    height: heightForTicks,\n                    noWrap: rotation !== null\n                });\n                return labelConfig;\n            },\n            y: () => {\n                setAxisRange(context, 'x', [availHeight - bottom, top], isOffset ? availWidth : null);\n\n                let widthForTicks = availWidth - axisNameHeight - tickSize - namePadding;\n                if (widthForTicks <= minWidthBetweenTicks) {\n                    widthForTicks = 0;\n                    context.renderConfig({ showInnerTicks: false, showOuterTicks: false });\n                }\n\n                context.maxTickSpaces({\n                    width: widthForTicks,\n                    height: availHeight,\n                    noWrap: true\n                });\n                if (availWidth < axisNameHeight) {\n                    context.renderConfig({ show: false });\n                }\n                return labelConfig;\n            }\n        },\n        continous: {\n            x: () => {\n                labelConfig.smartTicks = false;\n                const tickShifter = tickDimWidth / 2;\n\n                const baseline = fixedBaseline ? 0 : tickShifter;\n\n                setAxisRange(context, 'y', [baseline + left, availWidth - right - tickShifter],\n                    isOffset ? availHeight : null);\n\n                const range = context.range();\n\n                // Get Tick widths and available space\n                const totalTickWidth = allTickDimensions.length * (tickDimWidth + minWidthBetweenTicks);\n                const availableWidth = range[1] - range[0];\n\n                 // Rotate labels if not enough width\n                if (availableWidth < totalTickWidth && labels.rotation !== null) {\n                    if (availHeight - tickDimWidth - namePadding - tickSize > axisNameHeight) {\n                        labelConfig.rotation = null;\n                        context.renderConfig({\n                            showInnerTicks: true,\n                            showAxisName: true\n                        });\n                    } else {\n                        labelConfig.rotation = -90;\n                        context.renderConfig({\n                            showInnerTicks: true,\n                            showAxisName: availHeight - tickDimWidth - namePadding - tickSize > axisNameHeight\n\n                        });\n                    }\n                }\n\n                if (availHeight < axisNameHeight) {\n                    context.renderConfig({ show: false });\n                }\n                return labelConfig;\n            },\n            y: () => {\n                labelConfig.smartTicks = false;\n                const tickShifter = tickDimensions.height / 2;\n                const baseline = fixedBaseline ? 1 : tickShifter;\n\n                setAxisRange(context, 'x', [availHeight - bottom - baseline, tickShifter + top],\n                    isOffset ? availWidth : null);\n\n                // Remove display of ticks if no space is left\n                if (availWidth < tickDimWidth + axisNameHeight + namePadding) {\n                    context.renderConfig({ showInnerTicks: false });\n                    if (availWidth < axisNameHeight) {\n                        context.renderConfig({ show: false });\n                    }\n                }\n                return labelConfig;\n            }\n        }\n    };\n};\n","import { defaultValue } from 'muze-utils';\nimport { TOP, LEFT, BOTTOM } from '../enums/axis-orientation';\nimport { setAxisRange, getAdjustedRange } from './space-setter';\n\nexport const getRotatedSpaces = (rotation = 0, width, height) => {\n    let rotatedHeight = height;\n    let rotatedWidth = width;\n    if (rotation) {\n        const angle = ((rotation || 0) * Math.PI) / 180;\n        rotatedWidth = Math.abs(height * Math.sin(angle)) + Math.abs(width * Math.cos(angle));\n        rotatedHeight = Math.abs(width * Math.sin(angle)) + Math.abs(height * Math.cos(angle));\n    }\n    return { width: rotatedWidth, height: rotatedHeight };\n};\n\nexport const setOffset = (context) => {\n    let x = 0;\n    let y = 0;\n    const logicalSpace = context.logicalSpace();\n    const config = context.config();\n    const {\n        orientation,\n        xOffset,\n        yOffset\n    } = config;\n    if (orientation === LEFT) {\n        x = xOffset === undefined ? logicalSpace.width : xOffset;\n    }\n    if (orientation === TOP) {\n        y = yOffset === undefined ? logicalSpace.height : yOffset;\n    }\n    context.config({ xOffset: x, yOffset: y });\n};\n\nexport const getNumberOfTicks = (availableSpace, labelDim, axis, axisInstance) => {\n    const ticks = axis.scale().ticks();\n    const { numberOfTicks } = axisInstance.config();\n    const tickLength = ticks.length;\n    let numberOfValues = tickLength;\n\n    if (tickLength * (labelDim * 1.5) > availableSpace) {\n        numberOfValues = Math.floor(availableSpace / (labelDim * 1.5));\n    }\n\n    numberOfValues = Math.min(numberOfTicks, Math.max(2, numberOfValues));\n    let tickValues = axis.scale().ticks(numberOfValues);\n\n    if (numberOfValues === 2) {\n        tickValues = axis.scale().ticks(10);\n        tickValues = [tickValues[0], tickValues[tickValues.length - 1]];\n    }\n    return tickValues;\n};\n\nexport const getAxisComponentDimensions = (context) => {\n    let largestTick = '';\n    let largestTickDimensions = { width: 0, height: 0 };\n    let smartTick = {};\n    let axisTicks;\n    const allTickDimensions = [];\n    const scale = context.scale();\n    const { showAxisName } = context.renderConfig();\n    const { tickValues, name } = context.config();\n    const { labelManager } = context.dependencies();\n    const labelFunc = scale.ticks || scale.quantile || scale.domain;\n\n    // set the style on the shared label manager instance\n    labelManager.setStyle(context._tickLabelStyle);\n\n    // get the values along the domain\n    axisTicks = tickValues || labelFunc();\n\n    // Get the tick labels\n    axisTicks = axisTicks.map((originalLabel, i) => {\n        const label = context.getFormattedText(originalLabel, i, axisTicks);\n\n    // convert to string for quant values\n        const tickDimensions = labelManager.getOriSize(label);\n\n    // Get spaces for all labels\n        allTickDimensions.push(tickDimensions);\n\n    // Getting largest label\n        if (tickDimensions.width > largestTickDimensions.width) {\n            largestTick = label;\n            smartTick = context.smartTicks() ? context.smartTicks()[i] : {};\n            smartTick = smartTick || {};\n            largestTickDimensions = tickDimensions;\n        }\n        return label;\n    });\n\n    labelManager.setStyle(context._axisNameStyle);\n    const axisNameDimensions = showAxisName ? labelManager.getOriSize(name) : { width: 0, height: 0 };\n\n    return {\n        axisNameDimensions,\n        largestTick,\n        largestTickDimensions,\n        allTickDimensions,\n        axisTicks,\n        smartTick,\n        tickSize: context.getTickSize()\n    };\n};\n\nexport const computeAxisDimensions = (context) => {\n    let tickDimensions = {};\n    const { labels } = context.renderConfig();\n    const { smartTicks, rotation } = labels;\n    const {\n        largestTickDimensions,\n        axisTicks,\n        smartTick,\n        axisNameDimensions,\n        allTickDimensions,\n        tickSize\n    } = getAxisComponentDimensions(context);\n    const { height: labelHeight, width: labelWidth } = largestTickDimensions;\n\n    // get the domain of axis\n    const domain = context.domain();\n    // const angle = ((rotation || 0) * Math.PI) / 180;\n\n    if (domain.length === 0) {\n        return null;\n    }\n    if (smartTicks) {\n        tickDimensions = smartTick;\n    } else {\n        tickDimensions = { width: labelWidth, height: labelHeight };\n    }\n    tickDimensions = getRotatedSpaces(rotation, tickDimensions.width, tickDimensions.height);\n\n    if (tickSize === 0) {\n        tickDimensions = { width: 0, height: 0 };\n    }\n    return {\n        allTickDimensions,\n        tickSize,\n        tickDimensions,\n        axisNameDimensions,\n        largestTickDimensions,\n        axisTicks\n    };\n};\n\n/**\n *\n *\n * @param {*} axisDimensions\n * @param {*} config\n * @param {*} range\n *\n */\nexport const getHorizontalAxisSpace = (context, axisDimensions, range) => {\n    let width;\n    let height;\n    const domain = context.domain();\n    const { tickSize, tickDimensions, axisNameDimensions } = axisDimensions;\n    const { axisNamePadding, tickValues } = context.config();\n    const { showAxisName } = context.renderConfig();\n    const { height: axisDimHeight } = axisNameDimensions;\n    const { height: tickDimHeight, width: tickDimWidth } = tickDimensions;\n\n    width = range && range.length ? range[1] - range[0] : 0;\n\n    height = 0;\n    if (tickValues) {\n        const minTickDiff = context.getMinTickDifference();\n        const [min, max] = [\n            Math.min(...tickValues, ...domain),\n            Math.max(...tickValues, ...domain)\n        ];\n\n        width = ((max - min) / Math.abs(minTickDiff)) * (tickDimWidth + context._minTickDistance.width);\n    }\n    if (!width || width === 0) {\n        height = Math.max(tickDimWidth, tickDimHeight);\n    } else {\n        height = tickDimHeight;\n    }\n    height += (showAxisName ? axisDimHeight + axisNamePadding : 0) + tickSize;\n\n    return {\n        width,\n        height\n    };\n};\n\n/**\n *\n *\n * @param {*} axisDimensions\n * @param {*} config\n * @param {*} range\n *\n */\nexport const getVerticalAxisSpace = (context, axisDimensions) => {\n    let height;\n    let width;\n    const domain = context.domain();\n    const { tickSize, tickDimensions, axisNameDimensions } = axisDimensions;\n    const { axisNamePadding, tickValues } = context.config();\n    const { showAxisName } = context.renderConfig();\n    const { height: axisDimHeight } = axisNameDimensions;\n    const { height: tickDimHeight, width: tickDimWidth } = tickDimensions;\n\n    height = 0;\n    width = tickDimWidth;\n    if (tickValues) {\n        const minTickDiff = context.getMinTickDifference();\n        const [min, max] = [\n            Math.min(...tickValues, ...domain),\n            Math.max(...tickValues, ...domain)\n        ];\n\n        height = ((max - min) / Math.abs(minTickDiff)) * tickDimHeight;\n    }\n    width += (showAxisName ? axisDimHeight : 0) + tickSize + axisNamePadding;\n\n    return {\n        height,\n        width\n    };\n};\n\n/**\n * Calculates the logical space of the axis\n * @return {Object} Width and height occupied by the axis.\n */\nexport const calculateBandSpace = (context) => {\n    const range = context.range();\n    const axisDimensions = context.getAxisDimensions();\n    const { orientation } = context.config();\n    const { show } = context.renderConfig();\n    const { largestTickDimensions, axisTicks, allTickDimensions } = axisDimensions;\n    const { height: largestDimHeight } = largestTickDimensions;\n    const minTickWidth = context._minTickDistance.width;\n    if (orientation === TOP || orientation === BOTTOM) {\n        let {\n            width,\n            height\n        } = getHorizontalAxisSpace(context, axisDimensions, range);\n\n        if (!width || width === 0) {\n            width = allTickDimensions.reduce((t, n) =>\n                t + Math.min(n.width, n.height) + minTickWidth, 0);\n        }\n        if (show === false) {\n            height = 0;\n            width = 0;\n        }\n\n        return {\n            width,\n            height\n        };\n    }\n\n    let {\n        width,\n        height\n    } = getVerticalAxisSpace(context, axisDimensions, range);\n\n    if (!height || height === 0) {\n        height = axisTicks.length * (largestDimHeight + context._minTickDistance.height) + largestDimHeight;\n    }\n    if (show === false) {\n        width = 0;\n    }\n\n    return {\n        width,\n        height\n    };\n};\n\n/**\n * Calculates the logical space of the axis\n * @return {Object} Width and height occupied by the axis.\n */\nexport const calculateContinousSpace = (context) => {\n    const range = context.range();\n    const axisDimensions = context.getAxisDimensions();\n    const { orientation } = context.config();\n    const { show, showAxisName } = context.renderConfig();\n    const { axisNameDimensions } = axisDimensions;\n\n    if (show === false) {\n        return {\n            width: 0,\n            height: 0\n        };\n    }\n\n    const { width: axisNameWidth } = axisNameDimensions;\n\n    if (orientation === TOP || orientation === BOTTOM) {\n        const {\n            width,\n            height\n        } = getHorizontalAxisSpace(context, axisDimensions, range);\n        const axisWidth = Math.max(width, axisNameWidth);\n\n        return {\n            width: axisWidth,\n            height\n        };\n    }\n    const {\n        width,\n        height\n    } = getVerticalAxisSpace(context, axisDimensions, range);\n\n    const effHeight = Math.max(height, showAxisName ? axisNameWidth : 0);\n\n    return {\n        width,\n        height: effHeight\n    };\n};\n\n/**\n * Overwrites domain with user defined domain (if present)\n * @param {Object} context reference to current axes\n * @param {Array} domain default domain\n *\n * @return {Array} domain\n */\nexport const getValidDomain = (context, domain) => {\n    const { domain: userDom } = context.config();\n\n    if (userDom) {\n        domain = userDom;\n    }\n\n    return defaultValue(domain, []);\n};\n\nexport const setContinousAxisDomain = (context, domain) => {\n    const { nice } = context.config();\n    const scale = context.scale.bind(context);\n\n    scale().domain(domain);\n    nice && scale().nice();\n    context._domain = scale().domain();\n};\n\n/**\n * Checks if any of the properties have changed between two objects\n * @param {Object} obj first object\n * @param {Object} obj1 second object\n * @param {Array} properties properties to be compared between two objects\n *\n * @return {Boolean} boolean value\n */\nexport const hasAxesConfigChanged = (obj = {}, obj1 = {}, properties) => {\n    if (!Object.keys(obj).length || !Object.keys(obj1).length) {\n        return false;\n    }\n    return properties.some(key => obj[key] !== obj1[key]);\n};\n\nexport const resetTickInterval = (context, domain) => {\n    const {\n        orientation,\n        isOffset\n    } = context.config();\n    const minDiff = context._minDiff;\n\n     // Set available space on interaction\n    if (context.range().length && (orientation === TOP || orientation === BOTTOM)) {\n        const noOfTicks = context.getTickValues().length;\n        const { width, height, padding } = context.availableSpace();\n        const {\n\n            left,\n            right\n        } = padding;\n        // Get the Tick Interval\n        const tickInterval = ((width - (noOfTicks - 1) * (context._minTickDistance.width)) / noOfTicks);\n\n        context.maxTickSpaces({\n            width: tickInterval\n        });\n\n         // set range for axis\n        setAxisRange(context, 'y', getAdjustedRange(minDiff, [tickInterval / 2,\n            width - left - right - tickInterval / 2], domain, context.config()),\n                isOffset ? height : null);\n\n        context.setTickConfig();\n    }\n};\n","import { mergeRecursive } from 'muze-utils';\nimport { hasAxesConfigChanged } from './helper';\n\nexport const PROPS = {\n    availableSpace: {},\n    axisDimensions: {},\n    axisComponentDimensions: {},\n    config: {\n        sanitization: (context, value) => {\n            const oldConfig = Object.assign({}, context._config || {});\n            const mockedOldConfig = mergeRecursive({}, oldConfig);\n            value = mergeRecursive(mockedOldConfig, value);\n\n            value.axisNamePadding = Math.max(value.axisNamePadding, 0);\n            const shouldAxesScaleUpdate = hasAxesConfigChanged(\n                value, oldConfig, ['interpolator', 'exponent', 'base', 'orientation']\n            );\n            const tickFormatter = context.sanitizeTickFormatter(value);\n\n            if (shouldAxesScaleUpdate) {\n                context._scale = context.createScale(value);\n                context._axis = context.createAxis(value);\n            }\n\n            context._tickFormatter = ticks => tickFormatter(ticks);\n\n            const {\n                labels,\n                show,\n                showInnerTicks,\n                showOuterTicks,\n                showAxisName\n            } = value;\n            context.renderConfig({\n                labels,\n                show,\n                showInnerTicks,\n                showOuterTicks,\n                showAxisName\n            });\n            return value;\n        }\n    },\n    renderConfig: {\n        sanitization: (context, value) => {\n            const oldConfig = Object.assign({}, context._renderConfig || {});\n            value = mergeRecursive(oldConfig, value);\n            return value;\n        }\n    },\n    logicalSpace: {},\n    mount: {\n    },\n    range: {\n        sanitization: (context, value) => {\n            context.scale().range(value);\n            context.logicalSpace(null);\n            return value;\n        }\n    },\n\n    smartTicks: {},\n    tickSize: {},\n    maxTickSpaces: {\n        sanitization: (context, value) => {\n            const oldConfig = Object.assign({}, context._maxTickSpaces || {});\n            value = mergeRecursive(oldConfig, value);\n            return value;\n        }\n    },\n    valueParser: {\n        defaultValue: val => val\n    }\n};\n","import {\n    mergeRecursive,\n    getSmartComputedStyle,\n    selectElement,\n    generateGetterSetters,\n    getUniqueId\n} from 'muze-utils';\nimport { createScale } from '../scale-creator';\nimport { axisOrientationMap, BOTTOM, TOP } from '../enums/axis-orientation';\nimport { defaultConfig } from './default-config';\nimport { renderAxis } from '../axis-renderer';\nimport { spaceSetter } from './space-setter';\nimport {\n    getAxisComponentDimensions,\n    computeAxisDimensions,\n    calculateContinousSpace,\n    setOffset,\n    getValidDomain\n} from './helper';\nimport { PROPS } from './props';\n\nexport default class SimpleAxis {\n\n    /**\n     * Creates an instance of SimpleAxis.\n     * @memberof SimpleAxis\n     */\n    constructor (config, dependencies) {\n        this._id = getUniqueId();\n\n        this._dependencies = dependencies;\n        this._mount = null;\n        this._range = [];\n        this._domain = [];\n        this._domainLock = false;\n        this._axisDimensions = {};\n        this._smartTicks = [];\n\n        const defCon = mergeRecursive({}, this.constructor.defaultConfig());\n        const simpleConfig = mergeRecursive(defCon, config);\n\n        const bodyElem = selectElement('body');\n        const classPrefix = simpleConfig.classPrefix;\n        this._tickLabelStyle = getSmartComputedStyle(bodyElem, `${classPrefix}-ticks`);\n        this._axisNameStyle = getSmartComputedStyle(bodyElem, `${classPrefix}-axis-name`);\n\n        dependencies.labelManager.setStyle(this._tickLabelStyle);\n        const dist = dependencies.labelManager.getOriSize('w');\n\n        this._minTickDistance = { width: dist.width * 3 / 4, height: dist.height / 2 };\n        this._minTickSpace = dependencies.labelManager.getOriSize('www');\n\n        generateGetterSetters(this, PROPS);\n        this.config(simpleConfig);\n\n        this._scale = this.createScale(this._config);\n        this._axis = this.createAxis(this._config);\n        this._animationDonePromises = [];\n    }\n\n    /**\n     * Returns the default configuration of simple axis\n     *  @return {Object} default configurations\n     */\n    static defaultConfig () {\n        return defaultConfig;\n    }\n\n    /**\n     * Sets a fixed baseline for the first ticks so that they can render effectively within\n     * the given area\n     *\n     * @param {*} tickText\n     * @param {*} config\n     * @param {*} labelManager\n     */\n    setFixedBaseline () {\n        return this;\n    }\n\n    /**\n     *\n     *\n     * @readonly\n     * @memberof SimpleAxis\n     */\n    scale (...params) {\n        if (params.length) {\n            this._scale = params[0];\n            return this;\n        }\n        return this._scale;\n    }\n\n    resetDomain () {\n        this._domain = [];\n        return this;\n    }\n\n    /**\n     *\n     *\n     * @readonly\n     * @memberof SimpleAxis\n     */\n    axis (...params) {\n        if (params.length) {\n            this._axis = params[0];\n            return this;\n        }\n        return this._axis;\n    }\n\n    /**\n     *\n     *\n     * @param {*} d\n     *\n     * @memberof SimpleAxis\n     */\n    domain (...domain) {\n        if (domain.length) {\n            const domainValue = getValidDomain(this, domain[0]);\n            this.scale().domain(domainValue);\n            this._domain = this.scale().domain();\n            this.setAxisComponentDimensions();\n            this.logicalSpace(null);\n            return this;\n        }\n        return this._domain;\n    }\n\n    setAxisComponentDimensions () {\n        this.axisComponentDimensions(getAxisComponentDimensions(this));\n    }\n\n    /**\n     *\n     *\n     *\n     * @memberof SimpleAxis\n     */\n    dependencies () {\n        return this._dependencies;\n    }\n\n    /**\n     *\n     *\n     *\n     * @memberof SimpleAxis\n     */\n    createScale (config) {\n        const {\n            base,\n            padding,\n            interpolator,\n            exponent\n        } = config;\n        const range = this.range();\n        const scale = createScale({\n            padding,\n            interpolator,\n            exponent,\n            base,\n            range,\n            type: this.constructor.type()\n        });\n\n        return scale;\n    }\n\n    sanitizeTickFormatter (value) {\n        const { tickFormat, numberFormat } = value;\n\n        if (tickFormat) {\n            return ticks => (val, i) => tickFormat(numberFormat(val), val, i, ticks);\n        }\n\n        return () => val => numberFormat(val);\n    }\n\n    resetLogicalSpace () {\n        this.logicalSpace(null);\n        this.range([]);\n        const {\n            labels,\n            show,\n            showInnerTicks,\n            showOuterTicks,\n            showAxisName\n        } = this.config();\n        this.renderConfig({\n            labels,\n            show,\n            showInnerTicks,\n            showOuterTicks,\n            showAxisName\n        });\n    }\n\n    getFormattedText (text, index, axisTicks) {\n        const formatter = this._tickFormatter;\n\n        return formatter(axisTicks)(text, index);\n    }\n\n    /**\n     *\n     *\n     *\n     * @memberof SimpleAxis\n     */\n    createAxis (config) {\n        const { orientation } = config;\n        const axisClass = axisOrientationMap[orientation];\n\n        if (axisClass) {\n            const axis = axisClass(this.scale());\n            return axis;\n        }\n        return null;\n    }\n\n    /**\n     * This method is used to set the space availiable to render\n     * the SimpleCell.\n     *\n     * @param {number} width The width of SimpleCell.\n     * @param {number} height The height of SimpleCell.\n     * @memberof AxisCell\n     */\n    setAvailableSpace (width = 0, height, padding, isOffset) {\n        let labelConfig = {};\n        const {\n           orientation\n       } = this.config();\n\n        this.availableSpace({ width, height, padding });\n\n        if (orientation === TOP || orientation === BOTTOM) {\n            labelConfig = spaceSetter(this, { isOffset }).continous.x();\n        } else {\n            labelConfig = spaceSetter(this, { isOffset }).continous.y();\n        }\n\n        // Set config\n        this.renderConfig({\n            labels: labelConfig\n        });\n        this.setTickConfig();\n        this.getTickSize();\n        return this;\n    }\n\n    /**\n     *\n     *\n     * @memberof SimpleAxis\n     */\n    setTickConfig () {\n        return this;\n    }\n\n    getScaleValue (domainVal) {\n        if (domainVal === null || domainVal === undefined) {\n            return undefined;\n        }\n        return this.scale()(domainVal);\n    }\n\n    /**\n     *\n     *\n     *\n     * @memberof SimpleAxis\n     */\n    getTickSize () {\n        return this.axis().tickSize();\n    }\n\n    /**\n     * Gets the space occupied by the parts of an axis\n     *\n     * @return {Object} object with details about sizes of the axis.\n     * @memberof SimpleAxis\n     */\n    getAxisDimensions (...params) {\n        this.axisDimensions(computeAxisDimensions(this, ...params));\n        return this.axisDimensions();\n    }\n\n    /**\n     * Gets the space occupied by the axis\n     *\n     * @return {Object} object with details about size of the axis.\n     * @memberof SimpleAxis\n     */\n    getLogicalSpace () {\n        if (!this.logicalSpace()) {\n            this.logicalSpace(calculateContinousSpace(this));\n            this.logicalSpace();\n            setOffset(this);\n        }\n\n        return this.logicalSpace();\n    }\n\n    /**\n     * Returns the value from the domain when given a value from the range.\n     * @param {number} value Value from the range.\n     * @return {number} Value\n     */\n    invert (value) {\n        return this.scale().invert(value);\n    }\n\n    /**\n     * Gets the nearest range value from the given range values.\n     * @param {number} v1 Start range value\n     * @param {number} v2 End range value\n     *\n     * @return {Array} range values\n     */\n    getNearestRange (v1, v2) {\n        return [v1, v2];\n    }\n\n    invertExtent (v1, v2) {\n        return [this.invert(v1), this.invert(v2)];\n    }\n\n    getMinTickDifference () {\n        return this.domain();\n    }\n\n    getFormattedTickValues (tickValues) {\n        return tickValues;\n    }\n\n    /**\n     * This method returns the width in pixels for one\n     * unit along the axis. It is only applicable to band scale\n     * and returns undefined for other scale type.\n     *\n     * @return {number} the width of one band along band scale axis\n     * @memberof SimpleAxis\n     */\n    getUnitWidth () {\n        return 0;\n    }\n\n    /**\n     * This method returns an object that can be used to\n     * reconstruct this instance.\n     *\n     * @return {Object} the serializable props of axis\n     * @memberof SimpleAxis\n     */\n    serialize () {\n        return {\n            name: this.name,\n            type: this.type,\n            range: this.range(),\n            config: this.config()\n        };\n    }\n\n    /**\n     * Returns the id of the axis.\n     * @return {string} Unique identifier of the axis.\n     */\n    get id () {\n        return this._id;\n    }\n\n    /**\n     * This method is used to render the axis inside\n     * the supplied svg container.\n     *\n     * @param {SVGElement} svg the svg element in which to render the path\n     * @memberof SimpleAxis\n     */\n    /* istanbul ignore next */render () {\n        if (this.mount()) {\n            this.setTickConfig();\n            renderAxis(this);\n        }\n        return this;\n    }\n\n    /**\n     *\n     *\n     *\n     * @memberof SimpleAxis\n     */\n    remove () {\n        selectElement(this.mount()).remove();\n        return this;\n    }\n\n    /**\n     *\n     *\n     * @memberof SimpleAxis\n     */\n    unsubscribe () {\n        return this;\n    }\n\n    /**\n     *\n     *\n     *\n     * @memberof SimpleAxis\n     */\n    isReverse () {\n        const range = this.range();\n        return range[0] > range[1];\n    }\n\n    /**\n     *\n     *\n     *\n     * @memberof SimpleAxis\n     */\n    getPixelToValueRatio () {\n        const scale = this.scale();\n        const range = scale.range();\n        const domain = scale.domain();\n\n        return Math.abs(range[1] - range[0]) / (domain[1] - domain[0]);\n    }\n\n     /**\n     * Notifies when all animations/transitions of the axis are completed.\n     *\n     * @public\n     * @return {Promise} Returns a promise to notify the animation completion.\n     */\n    animationDone () {\n        return Promise.all(this._animationDonePromises);\n    }\n\n    registerAnimationDoneHook () {\n        let resolveFn;\n        const promise = new Promise((resolve) => {\n            resolveFn = resolve;\n        });\n        this._animationDonePromises.push(promise);\n\n        return () => {\n            resolveFn();\n        };\n    }\n}\n\n","import { scaleMap } from '../../scale-creator';\n\nexport default class LinearInterpolator {\n\n    createScale (config) {\n        const {\n            range\n        } = config;\n        const scaleFactory = scaleMap.linear;\n        this._scale = scaleFactory().range(range);\n        return this._scale;\n    }\n\n    getScaleValue (domainVal) {\n        return this._scale(domainVal) + 0.5;\n    }\n\n    sanitizeDomain (domain) {\n        if (domain.length && domain[0] === domain[1]) {\n            domain = [0, +domain[0] * 2];\n        }\n        return domain;\n    }\n}\n","import { scaleMap } from '../../scale-creator';\n\nexport default class LogInterpolator {\n\n    createScale (config) {\n        const {\n            range,\n            base\n        } = config;\n        const scaleFactory = scaleMap.log;\n        this._scale = scaleFactory().range(range).base(base);\n        return this._scale;\n    }\n\n    getScaleValue (domainVal) {\n        if (domainVal <= 0) {\n            return 1;\n        }\n\n        return this._scale(domainVal) + 0.5;\n    }\n\n    sanitizeDomain (domain) {\n        if (domain[0] <= 0) {\n            return [Math.max(1, domain[0]), Math.max(1, domain[1])];\n        } return domain;\n    }\n}\n","import { scaleMap } from '../../scale-creator';\n\nexport default class PowInterpolator {\n\n    createScale (config) {\n        const {\n            range,\n            exponent\n        } = config;\n        const scaleFactory = scaleMap.pow;\n        this._scale = scaleFactory().range(range).exponent(exponent);\n        return this._scale;\n    }\n\n    getScaleValue (domainVal) {\n        return this._scale(domainVal) + 0.5;\n    }\n\n    sanitizeDomain (domain) {\n        return domain;\n    }\n}\n","import { getSmallestDiff } from 'muze-utils';\nimport SimpleAxis from './simple-axis';\nimport { BOTTOM, TOP, LEFT, RIGHT } from '../enums/axis-orientation';\nimport { spaceSetter } from './space-setter';\nimport { LINEAR, LOG, POW } from '../enums/scale-type';\nimport { LogInterpolator, PowInterpolator, LinearInterpolator } from './interpolators';\nimport {\n    getNumberOfTicks,\n    getValidDomain,\n    setContinousAxisDomain\n} from './helper';\n\nexport const interpolatorMap = {\n    [LOG]: LogInterpolator,\n    [POW]: PowInterpolator,\n    [LINEAR]: LinearInterpolator\n};\n\nexport default class ContinousAxis extends SimpleAxis {\n    constructor (config, dependencies) {\n        config.tickFormat = config.tickFormat || (val => val);\n        super(config, dependencies);\n    }\n    /**\n     *\n     *\n     *\n     * @memberof SimpleAxis\n     */\n    createScale (config) {\n        const {\n            base,\n            padding,\n            interpolator,\n            exponent\n        } = config;\n        const range = this.range();\n        const InterpolatorCls = interpolatorMap[interpolator];\n\n        this._interpolator = new InterpolatorCls();\n        let scale = this._interpolator.createScale({\n            padding,\n            exponent,\n            base,\n            range\n        });\n\n        scale = scale.nice();\n        return scale;\n    }\n\n    /**\n     *\n     *\n     * @static\n     *\n     * @memberof ContinousAxis\n     */\n    static type () {\n        return LINEAR;\n    }\n\n    getScaleValue (domainVal) {\n        if (domainVal === null || domainVal === undefined) {\n            return undefined;\n        }\n        return this._interpolator.getScaleValue(domainVal);\n    }\n /**\n     *\n     *\n     *\n     * @memberof SimpleAxis\n     */\n    getTickSize () {\n        const {\n            showInnerTicks,\n            showOuterTicks\n        } = this.renderConfig();\n        const axis = this.axis();\n        axis.tickSizeInner(showInnerTicks === false ? 0 : 6);\n        axis.tickSizeOuter(showOuterTicks === false ? 0 : 6);\n\n        return axis.tickSize();\n    }\n\n    /**\n     *\n     *\n     * @param {*} d\n     *\n     * @memberof SimpleAxis\n     */\n    domain (...domain) {\n        if (domain.length) {\n            const domainVal = this._interpolator.sanitizeDomain(getValidDomain(this, domain[0]));\n            setContinousAxisDomain(this, domainVal);\n            this.setAxisComponentDimensions();\n            this.logicalSpace(null);\n            return this;\n        }\n        return this._domain;\n    }\n\n    /**\n     * This method is used to set the space availiable to render\n     * the SimpleCell.\n     *\n     * @param {number} width The width of SimpleCell.\n     * @param {number} height The height of SimpleCell.\n     * @memberof AxisCell\n     */\n    setAvailableSpace (width = 0, height, padding, isOffset) {\n        let labelConfig = {};\n        const {\n           orientation\n       } = this.config();\n\n        this.availableSpace({ width, height, padding });\n\n        if (orientation === TOP || orientation === BOTTOM) {\n            labelConfig = spaceSetter(this, { isOffset }).continous.x();\n        } else {\n            labelConfig = spaceSetter(this, { isOffset }).continous.y();\n        }\n\n        // Set config\n        this.renderConfig({\n            labels: labelConfig\n        });\n        this.setTickConfig();\n        this.getTickSize();\n        return this;\n    }\n\n    /**\n     *\n     *\n     * @param {*} tickValues\n     *\n     * @memberof SimpleAxis\n     */\n    setTickConfig () {\n        const {\n            tickValues,\n            tickFormat\n        } = this.config();\n        const {\n            showInnerTicks\n        } = this.renderConfig();\n        const axis = this.axis();\n\n        if (!showInnerTicks) {\n            axis.tickValues([]);\n            return this;\n        }\n\n        if (tickValues) {\n            tickValues instanceof Array && this.axis().tickValues(tickValues);\n            return this;\n        }\n        const newTickValues = this.getTickValues();\n\n        axis.tickValues(newTickValues);\n        const smartLabel = this.dependencies().labelManager;\n        smartLabel.setStyle(this._tickLabelStyle);\n\n        const smartTicks = newTickValues.map((e) => {\n            const text = tickFormat(e);\n            const tickSpace = smartLabel.getOriSize(text);\n\n            tickSpace.text = text;\n            return tickSpace;\n        });\n\n        this.smartTicks(smartTicks);\n        return this;\n    }\n\n    /**\n     *\n     *\n     *\n     * @memberof SimpleAxis\n     */\n    getTickValues () {\n        let labelDim = 0;\n        const {\n            orientation,\n            tickValues\n        } = this.config();\n        const range = this.range();\n        const axis = this.axis();\n\n        const availableSpace = Math.abs(range[0] - range[1]);\n\n        const labelProps = this.axisComponentDimensions().largestTickDimensions;\n\n        if (tickValues) {\n            return axis.scale().ticks(tickValues);\n        }\n        labelDim = labelProps[orientation === BOTTOM || orientation === TOP ? 'width' : 'height'];\n\n        return getNumberOfTicks(availableSpace, labelDim, axis, this);\n    }\n\n    getMinTickDifference () {\n        return getSmallestDiff(this.config().tickValues);\n    }\n\n    /**\n     * Sets a fixed baseline for the first ticks so that they can render effectively within\n     * the given area\n     *\n     * @param {*} tickText\n     * @param {*} config\n     * @param {*} labelManager\n     */\n    setFixedBaseline (tickText) {\n        const {\n            orientation\n        } = this.config();\n        const {\n            labels\n        } = this.renderConfig();\n\n        const {\n            rotation\n        } = labels;\n        const axis = this.axis();\n        const ticks = axis.scale().ticks();\n\n        const { width, height } = this.smartTicks()[0];\n\n        axis.tickTransform((d) => {\n            if (d === ticks[0]) {\n                if ((orientation === LEFT || orientation === RIGHT)) {\n                    return `translate(0, -${(height) / 3}px)`;\n                }\n                if ((orientation === TOP || orientation === BOTTOM) && !rotation) {\n                    return `translate(${width / 2}px,  ${0}px)`;\n                }\n            } return '';\n        });\n        return tickText;\n    }\n\n}\n","import SimpleAxis from './simple-axis';\nimport { BAND } from '../enums/scale-type';\nimport { TOP, BOTTOM } from '../enums/axis-orientation';\nimport { calculateBandSpace, setOffset, getRotatedSpaces } from './helper';\nimport { spaceSetter } from './space-setter';\n\nexport default class BandAxis extends SimpleAxis {\n\n    /**\n     *\n     *\n     * @param {*} config axes configuration\n     *\n     * @memberof BandAxis\n     */\n    createScale (config) {\n        return super.createScale(config);\n    }\n\n    /**\n     *\n     *\n     * @static\n     *\n     * @memberof BandAxis\n     */\n    static type () {\n        return BAND;\n    }\n\n     /**\n     * This method is used to set the space availiable to render\n     * the SimpleCell.\n     *\n     * @param {number} width The width of SimpleCell.\n     * @param {number} height The height of SimpleCell.\n     * @memberof AxisCell\n     */\n    setAvailableSpace (width = 0, height, padding, isOffset) {\n        let labelConfig = {};\n        const {\n           orientation\n       } = this.config();\n\n        this.availableSpace({ width, height, padding });\n\n        if (orientation === TOP || orientation === BOTTOM) {\n            labelConfig = spaceSetter(this, { isOffset }).band.x();\n        } else {\n            labelConfig = spaceSetter(this, { isOffset }).band.y();\n        }\n\n        // Set config\n        this.renderConfig({\n            labels: labelConfig\n        });\n        this.setTickConfig();\n        return this;\n    }\n\n    /**\n     *\n     *\n     *\n     * @memberof BandAxis\n     */\n    setTickConfig () {\n        let smartTicks = '';\n        let smartlabel;\n        const domain = this.domain();\n        const { labelManager } = this._dependencies;\n        const { tickValues, padding } = this.config();\n        const { labels } = this.renderConfig();\n        const { height: availHeight, width: availWidth, noWrap } = this.maxTickSpaces();\n        const { width, height } = getRotatedSpaces(labels.rotation, availWidth, availHeight);\n\n        tickValues && this.axis().tickValues(tickValues);\n        smartTicks = tickValues || domain;\n\n        // set the style on the shared label manager instance\n        labelManager.setStyle(this._tickLabelStyle);\n\n        // Update padding between plots\n        if (typeof padding === 'number' && padding >= 0 && padding <= 1) {\n            this.scale().padding(padding);\n        }\n\n        if (domain && domain.length) {\n            const values = tickValues || domain;\n            const tickFormatter = this._tickFormatter(values);\n            smartTicks = values.map((d, i) => {\n                labelManager.useEllipsesOnOverflow(true);\n\n                smartlabel = labelManager.getSmartText(tickFormatter(d, i), width, height, noWrap);\n                return labelManager.constructor.textToLines(smartlabel);\n            });\n        }\n        this.smartTicks(smartTicks);\n        return this;\n    }\n\n    /**\n     * Gets the space occupied by the axis\n     *\n     * @return {Object} object with details about size of the axis.\n     * @memberof SimpleAxis\n     */\n    getLogicalSpace () {\n        if (!this.logicalSpace()) {\n            this.logicalSpace(calculateBandSpace(this));\n            setOffset(this);\n            this.logicalSpace();\n        }\n        return this.logicalSpace();\n    }\n\n    /**\n     *\n     *\n     * @memberof BandAxis\n     */\n    getTickValues () {\n        return this.axis().scale().domain();\n    }\n\n    formatTickValue (val) {\n        return this.valueParser()(val);\n    }\n\n    sanitizeTickFormatter (value) {\n        const { tickFormat } = value;\n\n        if (tickFormat) {\n            return ticks => (val, i) => tickFormat(this.formatTickValue(val), val, i, ticks);\n        }\n        return () => val => this.formatTickValue(val);\n    }\n\n    /**\n     *\n     *\n     *\n     * @memberof BandAxis\n     */\n    getUnitWidth () {\n        return this.scale().bandwidth();\n    }\n\n    /**\n     *\n     *\n     *\n     * @memberof SimpleAxis\n     */\n    getTickSize () {\n        const {\n            showInnerTicks,\n            showOuterTicks\n        } = this.renderConfig();\n        const axis = this.axis();\n\n        axis.tickSizeInner(showInnerTicks ? 6 : 0);\n        axis.tickSizeOuter(showOuterTicks ? 6 : 0);\n        return axis.tickSize();\n    }\n\n    invertExtent (v1, v2) {\n        return this.scale().invertExtent(v1, v2);\n    }\n\n    /**\n     * Gets the nearest range value from the given range values.\n     * @param {number} v1 Start range value\n     * @param {number} v2 End range value\n     * @return {Array} range values\n     */\n    getNearestRange (v1, v2) {\n        const scale = this.scale();\n        const range = scale.range();\n        const reverse = range[0] > range[1];\n\n        const extent = this.invertExtent(v1, v2);\n        const p1 = scale(reverse ? extent[extent.length - 1] : extent[0]);\n        const p2 = scale(reverse ? extent[0] : extent[extent.length - 1]) + scale.bandwidth();\n        return [p1, p2];\n    }\n}\n","import { getSmallestDiff } from 'muze-utils';\nimport SimpleAxis from './simple-axis';\nimport { TIME } from '../enums/scale-type';\nimport { axisOrientationMap, BOTTOM, TOP } from '../enums/axis-orientation';\nimport {\n    calculateBandSpace, getRotatedSpaces, getValidDomain, setContinousAxisDomain, setOffset, resetTickInterval\n} from './helper';\nimport { spaceSetter } from './space-setter';\n\n/**\n *\n *\n * @export\n * @class TimeAxis\n * @extends {SimpleAxis}\n */\nexport default class TimeAxis extends SimpleAxis {\n\n    constructor (...params) {\n        super(...params);\n        this._minDiff = Infinity;\n    }\n\n    /**\n     *\n     *\n     * @param {*} range\n     *\n     * @memberof TimeAxis\n     */\n    createScale (range) {\n        let scale = super.createScale(range);\n\n        scale = scale.nice();\n        return scale;\n    }\n\n    /**\n     *\n     *\n     * @static\n     *\n     * @memberof TimeAxis\n     */\n    static type () {\n        return TIME;\n    }\n\n    /**\n     *\n     *\n     * @returns\n     * @memberof SimpleAxis\n     */\n    createAxis (config) {\n        const { orientation } = config;\n        const axisClass = axisOrientationMap[orientation];\n\n        if (axisClass) {\n            const axis = axisClass(this.scale());\n            return axis;\n        }\n        return null;\n    }\n\n    formatTickValue (val) {\n        return this.scale().tickFormat()(val);\n    }\n\n    sanitizeTickFormatter (value) {\n        const { tickFormat } = value;\n\n        if (tickFormat) {\n            return (ticks) => {\n                const rawTicks = ticks.map(t => t.getTime());\n                return (val, i) => tickFormat(this.formatTickValue(val), val.getTime(), i, rawTicks);\n            };\n        }\n        return () => val => this.formatTickValue(val);\n    }\n\n     /**\n     *\n     *\n     *\n     * @memberof SimpleAxis\n     */\n    getTickSize () {\n        const {\n            showInnerTicks,\n            showOuterTicks\n        } = this.renderConfig();\n        const axis = this.axis();\n        axis.tickSizeInner(showInnerTicks === false ? 0 : 6);\n        axis.tickSizeOuter(showOuterTicks === false ? 0 : 6);\n        return super.getTickSize();\n    }\n\n    /**\n     *\n     *\n     *\n     * @memberof TimeAxis\n     */\n    getTickValues () {\n        return this.config().tickValues || this.scale().ticks();\n    }\n\n    /**\n     *\n     *\n     * @param {*} diff\n     *\n     * @memberof TimeAxis\n     */\n    minDiff (diff) {\n        this._minDiff = Math.min(this._minDiff, diff);\n        return this;\n    }\n\n    /**\n     *\n     *\n     * @param {*} d\n     *\n     * @memberof SimpleAxis\n     */\n    domain (...domain) {\n        if (domain.length) {\n            const domainValue = getValidDomain(this, domain[0]);\n            setContinousAxisDomain(this, domainValue);\n            this.setAxisComponentDimensions();\n            this.logicalSpace(null);\n\n            resetTickInterval(this, domainValue);\n            return this;\n        }\n        return this._domain;\n    }\n\n    /**\n     * Gets the space occupied by the axis\n     *\n     * @return {Object} object with details about size of the axis.\n     * @memberof SimpleAxis\n     */\n    getLogicalSpace () {\n        if (!this.logicalSpace()) {\n            this.logicalSpace(calculateBandSpace(this));\n            this.logicalSpace();\n            setOffset(this);\n        }\n        return this.logicalSpace();\n    }\n\n    getMinTickDifference () {\n        return getSmallestDiff(this.config().tickValues);\n    }\n\n    /**\n     * This method is used to set the space availiable to render\n     * the SimpleCell.\n     *\n     * @param {number} width The width of SimpleCell.\n     * @param {number} height The height of SimpleCell.\n     * @memberof AxisCell\n     */\n    setAvailableSpace (width = 0, height, padding, isOffset) {\n        let labelConfig = {};\n        const {\n           orientation\n       } = this.config();\n\n        this.availableSpace({ width, height, padding });\n\n        if (orientation === TOP || orientation === BOTTOM) {\n            labelConfig = spaceSetter(this, { isOffset }).time.x();\n        } else {\n            labelConfig = spaceSetter(this, { isOffset }).time.y();\n        }\n\n        // Set config\n        this.renderConfig({\n            labels: labelConfig\n        });\n        this.setTickConfig();\n        this.getTickSize();\n        return this;\n    }\n\n    /**\n     *\n     *\n     * @returns\n     * @memberof BandAxis\n     */\n    setTickConfig () {\n        let smartTicks;\n        let smartlabel;\n        const { tickValues } = this.config();\n        const { labels } = this.renderConfig();\n        const { height: availHeight, width: availWidth, noWrap } = this.maxTickSpaces();\n        const { labelManager } = this._dependencies;\n        const domain = this.getTickValues();\n\n        tickValues && this.axis().tickValues(tickValues);\n\n        const { width, height } = getRotatedSpaces(labels.rotation, availWidth, availHeight);\n\n        smartTicks = tickValues || domain;\n\n        // set the style on the shared label manager instance\n        labelManager.setStyle(this._tickLabelStyle);\n\n        if (domain && domain.length) {\n            const values = tickValues || domain;\n            const tickFormatter = this._tickFormatter(values);\n            smartTicks = values.map((d, i) => {\n                labelManager.useEllipsesOnOverflow(true);\n\n                smartlabel = labelManager.getSmartText(tickFormatter(d, i), width, height, noWrap);\n                return labelManager.constructor.textToLines(smartlabel);\n            });\n        }\n        this.smartTicks(smartTicks);\n        return this;\n    }\n}\n","export const x11Colors = {\n    Pink: { hex: 'ffc0cb', rgb: '255,192,203' },\n    LightPink: { hex: 'ffb6c1', rgb: '255,182,193' },\n    HotPink: { hex: 'ff69b4', rgb: '255,105,180' },\n    DeepPink: { hex: 'ff1493', rgb: '255,20,147' },\n    PaleVioletRed: { hex: 'db7093', rgb: '219,112,147' },\n    MediumVioletRed: { hex: 'c71585', rgb: '199,21,133' },\n    LightSalmon: { hex: 'ffa07a', rgb: '255,160,122' },\n    Salmon: { hex: 'fa8072', rgb: '250,128,114' },\n    DarkSalmon: { hex: 'e9967a', rgb: '233,150,122' },\n    LightCoral: { hex: 'f08080', rgb: '240,128,128' },\n    IndianRed: { hex: 'cd5c5c', rgb: '205,92,92' },\n    Crimson: { hex: 'dc143c', rgb: '220,20,60' },\n    FireBrick: { hex: 'b22222', rgb: '178,34,34' },\n    DarkRed: { hex: '8b0000', rgb: '139,0,0' },\n    Red: { hex: 'ff0000', rgb: '255,0,0' },\n    OrangeRed: { hex: 'ff4500', rgb: '255,69,0' },\n    Tomato: { hex: 'ff6347', rgb: '255,99,71' },\n    Coral: { hex: 'ff7f50', rgb: '255,127,80' },\n    DarkOrange: { hex: 'ff8c00', rgb: '255,140,0' },\n    Orange: { hex: 'ffa500', rgb: '255,165,0' },\n    Gold: { hex: 'ffd700', rgb: '255,215,0' },\n    Yellow: { hex: 'ffff00', rgb: '255,255,0' },\n    LightYellow: { hex: 'ffffe0', rgb: '255,255,224' },\n    LemonChiffon: { hex: 'fffacd', rgb: '255,250,205' },\n    LightGoldenrodYellow: { hex: 'fafad2', rgb: '250,250,210' },\n    PapayaWhip: { hex: 'ffefd5', rgb: '255,239,213' },\n    Moccasin: { hex: 'ffe4b5', rgb: '255,228,181' },\n    PeachPuff: { hex: 'ffdab9', rgb: '255,218,185' },\n    PaleGoldenrod: { hex: 'eee8aa', rgb: '238,232,170' },\n    Khaki: { hex: 'f0e68c', rgb: '240,230,140' },\n    DarkKhaki: { hex: 'bdb76b', rgb: '189,183,107' },\n    Cornsilk: { hex: 'fff8dc', rgb: '255,248,220' },\n    BlanchedAlmond: { hex: 'ffebcd', rgb: '255,235,205' },\n    Bisque: { hex: 'ffe4c4', rgb: '255,228,196' },\n    NavajoWhite: { hex: 'ffdead', rgb: '255,222,173' },\n    Wheat: { hex: 'f5deb3', rgb: '245,222,179' },\n    BurlyWood: { hex: 'deb887', rgb: '222,184,135' },\n    Tan: { hex: 'd2b48c', rgb: '210,180,140' },\n    RosyBrown: { hex: 'bc8f8f', rgb: '188,143,143' },\n    SandyBrown: { hex: 'f4a460', rgb: '244,164,96' },\n    Goldenrod: { hex: 'daa520', rgb: '218,165,32' },\n    DarkGoldenrod: { hex: 'b8860b', rgb: '184,134,11' },\n    Peru: { hex: 'cd853f', rgb: '205,133,63' },\n    Chocolate: { hex: 'd2691e', rgb: '210,105,30' },\n    SaddleBrown: { hex: '8b4513', rgb: '139,69,19' },\n    Sienna: { hex: 'a0522d', rgb: '160,82,45' },\n    Brown: { hex: 'a52a2a', rgb: '165,42,42' },\n    Maroon: { hex: '800000', rgb: '128,0,0' },\n    DarkOliveGreen: { hex: '556b2f', rgb: '85,107,47' },\n    Olive: { hex: '808000', rgb: '128,128,0' },\n    OliveDrab: { hex: '6b8e23', rgb: '107,142,35' },\n    YellowGreen: { hex: '9acd32', rgb: '154,205,50' },\n    LimeGreen: { hex: '32cd32', rgb: '50,205,50' },\n    Lime: { hex: '00ff00', rgb: '0,255,0' },\n    LawnGreen: { hex: '7cfc00', rgb: '124,252,0' },\n    Chartreuse: { hex: '7fff00', rgb: '127,255,0' },\n    GreenYellow: { hex: 'adff2f', rgb: '173,255,47' },\n    SpringGreen: { hex: '00ff7f', rgb: '0,255,127' },\n    MediumSpringGreen: { hex: '00fa9a', rgb: '0,250,154' },\n    LightGreen: { hex: '90ee90', rgb: '144,238,144' },\n    PaleGreen: { hex: '98fb98', rgb: '152,251,152' },\n    DarkSeaGreen: { hex: '8fbc8f', rgb: '143,188,143' },\n    MediumSeaGreen: { hex: '3cb371', rgb: '60,179,113' },\n    SeaGreen: { hex: '2e8b57', rgb: '46,139,87' },\n    ForestGreen: { hex: '228b22', rgb: '34,139,34' },\n    Green: { hex: '008000', rgb: '0,128,0' },\n    DarkGreen: { hex: '006400', rgb: '0,100,0' },\n    MediumAquamarine: { hex: '66cdaa', rgb: '102,205,170' },\n    Aqua: { hex: '00ffff', rgb: '0,255,255' },\n    Cyan: { hex: '00ffff', rgb: '0,255,255' },\n    LightCyan: { hex: 'e0ffff', rgb: '224,255,255' },\n    PaleTurquoise: { hex: 'afeeee', rgb: '175,238,238' },\n    Aquamarine: { hex: '7fffd4', rgb: '127,255,212' },\n    Turquoise: { hex: '40e0d0', rgb: '64,224,208' },\n    MediumTurquoise: { hex: '48d1cc', rgb: '72,209,204' },\n    DarkTurquoise: { hex: '00ced1', rgb: '0,206,209' },\n    LightSeaGreen: { hex: '20b2aa', rgb: '32,178,170' },\n    CadetBlue: { hex: '5f9ea0', rgb: '95,158,160' },\n    DarkCyan: { hex: '008b8b', rgb: '0,139,139' },\n    Teal: { hex: '008080', rgb: '0,128,128' },\n    LightSteelBlue: { hex: 'b0c4de', rgb: '176,196,222' },\n    PowderBlue: { hex: 'b0e0e6', rgb: '176,224,230' },\n    LightBlue: { hex: 'add8e6', rgb: '173,216,230' },\n    SkyBlue: { hex: '87ceeb', rgb: '135,206,235' },\n    LightSkyBlue: { hex: '87cefa', rgb: '135,206,250' },\n    DeepSkyBlue: { hex: '00bfff', rgb: '0,191,255' },\n    DodgerBlue: { hex: '1e90ff', rgb: '30,144,255' },\n    CornflowerBlue: { hex: '6495ed', rgb: '100,149,237' },\n    SteelBlue: { hex: '4682b4', rgb: '70,130,180' },\n    RoyalBlue: { hex: '4169e1', rgb: '65,105,225' },\n    Blue: { hex: '0000ff', rgb: '0,0,255' },\n    MediumBlue: { hex: '0000cd', rgb: '0,0,205' },\n    DarkBlue: { hex: '00008b', rgb: '0,0,139' },\n    Navy: { hex: '000080', rgb: '0,0,128' },\n    MidnightBlue: { hex: '191970', rgb: '25,25,112' },\n    Lavender: { hex: 'e6e6fa', rgb: '230,230,250' },\n    Thistle: { hex: 'd8bfd8', rgb: '216,191,216' },\n    Plum: { hex: 'dda0dd', rgb: '221,160,221' },\n    Violet: { hex: 'ee82ee', rgb: '238,130,238' },\n    Orchid: { hex: 'da70d6', rgb: '218,112,214' },\n    Fuchsia: { hex: 'ff00ff', rgb: '255,0,255' },\n    Magenta: { hex: 'ff00ff', rgb: '255,0,255' },\n    MediumOrchid: { hex: 'ba55d3', rgb: '186,85,211' },\n    MediumPurple: { hex: '9370db', rgb: '147,112,219' },\n    BlueViolet: { hex: '8a2be2', rgb: '138,43,226' },\n    DarkViolet: { hex: '9400d3', rgb: '148,0,211' },\n    DarkOrchid: { hex: '9932cc', rgb: '153,50,204' },\n    DarkMagenta: { hex: '8b008b', rgb: '139,0,139' },\n    Purple: { hex: '800080', rgb: '128,0,128' },\n    Indigo: { hex: '4b0082', rgb: '75,0,130' },\n    DarkSlateBlue: { hex: '483d8b', rgb: '72,61,139' },\n    SlateBlue: { hex: '6a5acd', rgb: '106,90,205' },\n    MediumSlateBlue: { hex: '7b68ee', rgb: '123,104,238' },\n    White: { hex: 'ffffff', rgb: '255,255,255' },\n    Snow: { hex: 'fffafa', rgb: '255,250,250' },\n    Honeydew: { hex: 'f0fff0', rgb: '240,255,240' },\n    MintCream: { hex: 'f5fffa', rgb: '245,255,250' },\n    Azure: { hex: 'f0ffff', rgb: '240,255,255' },\n    AliceBlue: { hex: 'f0f8ff', rgb: '240,248,255' },\n    GhostWhite: { hex: 'f8f8ff', rgb: '248,248,255' },\n    WhiteSmoke: { hex: 'f5f5f5', rgb: '245,245,245' },\n    Seashell: { hex: 'fff5ee', rgb: '255,245,238' },\n    Beige: { hex: 'f5f5dc', rgb: '245,245,220' },\n    OldLace: { hex: 'fdf5e6', rgb: '253,245,230' },\n    FloralWhite: { hex: 'fffaf0', rgb: '255,250,240' },\n    Ivory: { hex: 'fffff0', rgb: '255,255,240' },\n    AntiqueWhite: { hex: 'faebd7', rgb: '250,235,215' },\n    Linen: { hex: 'faf0e6', rgb: '250,240,230' },\n    LavenderBlush: { hex: 'fff0f5', rgb: '255,240,245' },\n    MistyRose: { hex: 'ffe4e1', rgb: '255,228,225' },\n    Gainsboro: { hex: 'dcdcdc', rgb: '220,220,220' },\n    LightGray: { hex: 'd3d3d3', rgb: '211,211,211' },\n    Silver: { hex: 'c0c0c0', rgb: '192,192,192' },\n    DarkGrey: { hex: 'a9a9a9', rgb: '169,169,169' },\n    Grey: { hex: '808080', rgb: '128,128,128' },\n    DimGrey: { hex: '696969', rgb: '105,105,105' },\n    LightSlateGrey: { hex: '778899', rgb: '119,136,153' },\n    SlateGrey: { hex: '708090', rgb: '112,128,144' },\n    DarkSlateGrey: { hex: '2f4f4f', rgb: '47,79,79' },\n    Black: { hex: '000000', rgb: '0,0,0' }\n};\n","import {\n    LINEAR\n} from '../enums/constants';\n/**\n * Set of default colors\n */\nexport const palette = [\n    '#086bb6',\n    '#f37d45',\n    '#f5ce02',\n    '#67bda0',\n    '#c54e4e',\n    '#ae70af'\n];\n\nexport const DEFAULT_GRADIENT_COLOR = '#eaeaea';\n\nexport const DEFAULT_CONFIG = {\n    range: palette,\n    value: palette[0],\n    step: false,\n    stops: 5,\n    type: LINEAR\n};\n","import { mergeRecursive, detectColor, hexToHsv, rgbToHsv } from 'muze-utils';\nimport { x11Colors } from './color-maps';\nimport { palette, DEFAULT_GRADIENT_COLOR } from './defaults';\nimport { LINEAR, RGB, HEX, HSL, HSLA } from '../enums/constants';\n\nexport const getHslString = hslArr => `hsla(${hslArr[0] * 360},${hslArr[1] * 100}%,${hslArr[2] * 100}%,\\\n${hslArr[3] || 1})`;\n\nexport const convertToXllString = baseString => (baseString.split(' ') || [])\n                .reduce((x, e) => `${x}${e.charAt(0).toUpperCase()}${e.slice(1)}`, '');\n\nexport const getActualHslColor = (e, paletteColor) => {\n    let color = '';\n    if (typeof e === 'string') {\n        e = e.replace(/ /g, '');\n        e = e.toLowerCase();\n        if (detectColor(e) === HSL || detectColor(e) === HSLA) {\n            color = e.match(/(\\d+(\\.\\d+)?)/g);\n            color = [color[0] / 360, color[1] / 100, color[2] / 100, color[3] || 1];\n        } else if (detectColor(e) === HEX) {\n            color = hexToHsv(e);\n        } else if (detectColor(e) === RGB) {\n            const col = e.substring(e.indexOf('(') + 1, e.lastIndexOf(')')).split(/,\\s*/);\n            color = rgbToHsv(...col);\n        } else if (x11Colors[convertToXllString(e)]) {\n            color = rgbToHsv(...x11Colors[convertToXllString(e)].rgb.split(','));\n        }\n    } else if (!(e instanceof Array)) {\n        color = rgbToHsv(paletteColor);\n    } else {\n        color = e;\n    }\n    return color;\n};\n\nexport const PROPS = {\n    config: {\n        sanitization: (context, config) => {\n            const defCon = mergeRecursive({}, context.constructor.defaultConfig());\n            if (config.type === LINEAR) {\n                config.range = config.range || [defCon.range[0]];\n                config.range = config.range.length > 1 ? config.range : [DEFAULT_GRADIENT_COLOR, ...config.range];\n            }\n            const oldConfig = mergeRecursive(defCon, context.config());\n            const newConfig = mergeRecursive(oldConfig, config);\n\n            if (newConfig.range instanceof Array) {\n                newConfig.range = newConfig.range.map((e, i) => getActualHslColor(e, palette[i]));\n                newConfig.stops = config.stops || newConfig.range.length;\n            }\n            newConfig.value = getActualHslColor(newConfig.value, newConfig.value);\n            return newConfig;\n        }\n    },\n    domain: {},\n    scale: {},\n    uniqueValues: {}\n};\n","import { InvalidAwareTypes } from 'muze-utils';\n\nexport const treatNullMeasures = (domainVal, scaledVal, minDomainScaledVal) => {\n    if (domainVal instanceof InvalidAwareTypes) {\n        return minDomainScaledVal;\n    }\n    return scaledVal;\n};\n","import { numberInterpolator, piecewiseInterpolator, hslInterpolator } from 'muze-utils';\nimport { CONTINOUS, DISCRETE } from '../enums/constants';\nimport { LINEAR, SEQUENTIAL, ORDINAL, QUANTILE } from '../enums/scale-type';\nimport { getHslString } from './props';\nimport { treatNullMeasures } from '../helper';\n\nconst getStops = (domain, stops) => {\n    let newStops = [];\n\n    if (stops instanceof Array) {\n        newStops = stops.slice().sort();\n        newStops = [...new Set([domain[0], ...stops, domain[1]])].sort();\n    } else {\n        const interpolator = numberInterpolator()(...domain);\n        for (let i = 0; i <= stops; i++) {\n            newStops[i] = interpolator(i / stops);\n        }\n    }\n\n    if (newStops[0] < domain[0]) {\n        newStops.shift();\n    }\n    return { domain, newStops };\n};\n\nconst rangeStops = (newStopsLength, range) => {\n    let newRange = [];\n    const maxRangeLength = Math.min(range.length, 18);\n\n    if (newStopsLength > maxRangeLength) {\n        const interpolator = piecewiseInterpolator()(hslInterpolator(), range.map(e => getHslString(e)));\n        for (let i = 0; i < newStopsLength; i++) {\n            newRange[i] = interpolator(i / (newStopsLength - 1));\n        }\n    } else {\n        newRange = range.slice(0, newStopsLength);\n    }\n    return { newRange };\n};\n\n/**\n*\n*\n* @param {*} domain\n*\n*/\nconst indexedDomain = (domain) => {\n    const uniqueVals = domain;\n    const retDomain = domain.map((d, i) => (i) / (domain.length - 1));\n    return { domain: retDomain, uniqueVals, scaleDomain: [0, 1] };\n};\n\n/**\n *\n *\n * @param {*} domain\n *\n */\nconst indexedDomainMeasure = (domain, stops, range) => {\n    const uniqueVals = domain;\n    return { domain, uniqueVals, scaleDomain: [0, 1], range };\n};\n\n/**\n *\n *\n * @param {*} domain\n *\n */\nconst normalDomain = (domain, stops, range) => {\n    const uniqueVals = domain;\n    return { uniqueVals, domain, nice: true, range };\n};\n\n/**\n *\n *\n * @param {*} domain\n * @param {*} stops\n *\n */\nconst steppedDomain = (domain, stops, range) => {\n    const { domain: uniqueVals, newStops } = getStops(domain, stops);\n    const { newRange } = rangeStops(newStops.length - 1, range);\n\n    return { uniqueVals, domain: newStops, nice: true, range: newRange };\n};\n\nconst continousSteppedDomain = (domain, stops, range) => {\n    const { domain: uniqueVals, newStops } = getStops(domain, range.length - 1);\n    const hslRange = range.map(e => getHslString(e));\n    return { uniqueVals, domain: newStops, nice: true, range: hslRange };\n};\n\n/**\n *\n *\n * @param {*} domainValue\n * @param {*} scale\n * @param {*} domain\n * @param {*} uniqueVals\n *\n */\nconst uniqueRange = (domainValue, scale, domain, uniqueVals) => {\n    const index = uniqueVals.indexOf(domainValue);\n    const numVal = domain[index];\n    return scale(numVal);\n};\n\n/**\n *\n *\n * @param {*} domainValue\n * @param {*} scale\n * @param {*} domain\n *\n */\nconst indexedRange = (domainValue, scale, domain) => {\n    const numVal = (domainValue - domain[0]) / (domain[domain.length - 1] - domain[0]);\n\n    return treatNullMeasures(domainValue, scale(numVal), scale(0));\n};\n\n/**\n *\n *\n * @param {*} domainValue\n * @param {*} scale\n */\nconst normalRange = (domainValue, scale, domain) => treatNullMeasures(domainValue, scale(domainValue),\n    scale(domain[0]));\n\n/**\n *\n *\n * @param {*} stops\n */\nconst strategies = () => ({\n    [`${CONTINOUS}-${CONTINOUS}-${SEQUENTIAL}`]: {\n        scale: SEQUENTIAL,\n        domainRange: () => indexedDomainMeasure,\n        value: () => indexedRange\n    },\n    [`${CONTINOUS}-${DISCRETE}-${SEQUENTIAL}`]: {\n        scale: SEQUENTIAL,\n        domainRange: () => indexedDomainMeasure,\n        value: () => indexedRange\n    },\n    [`${DISCRETE}-${DISCRETE}-${SEQUENTIAL}`]: {\n        scale: SEQUENTIAL,\n        domainRange: () => indexedDomain,\n        value: () => uniqueRange\n    },\n    [`${DISCRETE}-${DISCRETE}-${ORDINAL}`]: {\n        scale: ORDINAL,\n        domainRange: () => normalDomain,\n        value: () => normalRange\n    },\n    [`${CONTINOUS}-${CONTINOUS}-${ORDINAL}`]: {\n        scale: LINEAR,\n        domainRange: () => continousSteppedDomain,\n        value: () => normalRange\n    },\n    [`${CONTINOUS}-${DISCRETE}-${ORDINAL}`]: {\n        scale: QUANTILE,\n        domainRange: () => steppedDomain,\n        value: () => normalRange\n\n    }\n});\n\n/**\n *\n *\n * @param {*} domainType\n * @param {*} rangeType\n * @param {*} schemeType\n * @param {*} stops\n */\nexport const strategyGetter = (domainType, rangeType, schemeType, stops) =>\n     strategies(stops)[`${domainType}-${rangeType}-${schemeType || ''}`];\n","/**\n * @module Axis\n * This file declares a class that is used to render an axis to add  meaning to\n * plots.\n */\nimport { getUniqueId, generateGetterSetters, rgbToHsv } from 'muze-utils';\nimport { createScale, getScheme, getSchemeType } from '../scale-creator';\nimport { CONTINOUS, DISCRETE, COLOR } from '../enums/constants';\nimport { strategyGetter } from './color-strategy';\nimport { DEFAULT_CONFIG } from './defaults';\nimport { PROPS, getHslString } from './props';\n\n/**\n* This class is used to instantiate a SimpleAxis.\n* @class SimpleAxis\n*/\nexport default class ColorAxis {\n\n    /**\n    * Creates an instance of SimpleAxis.\n    * @param {Object} config input parameters.\n    * @param {Object | undefined} params.range Type of color range.\n    * @param {string} params.name the label to show on axis.\n    * @param {string} params.type The type of scale to handle.\n    * @memberof ColorAxis\n    */\n    constructor (config) {\n        generateGetterSetters(this, PROPS);\n        this.config(config);\n\n        this._domainType = this._config.type === 'linear' ? CONTINOUS : DISCRETE;\n        this._rangeType = (this._config.type === 'linear' && !this._config.step) ? CONTINOUS : DISCRETE;\n\n        this._schemeType = getSchemeType(this._config.range);\n\n        this._colorStrategy = this.setColorStrategy(this._domainType, this._rangeType, this._schemeType);\n        this._scale = this.createScale(this._colorStrategy);\n\n        this._id = getUniqueId();\n\n        this.updateDomain(config.domain);\n    }\n\n    /**\n     *\n     *\n     * @static\n     *\n     * @memberof ColorAxis\n     */\n    static defaultConfig () {\n        return DEFAULT_CONFIG;\n    }\n\n    /**\n     *\n     *\n     * @static\n     *\n     * @memberof ColorAxis\n     */\n    static type () {\n        return COLOR;\n    }\n\n    /**\n     *\n     *\n     * @param {*} colorStrategy\n     *\n     * @memberof ColorAxis\n     */\n    createScale (colorStrategy) {\n        const { range } = this.config();\n        if (range && typeof (range) === 'string') {\n            return getScheme(range);\n        }\n        return createScale({\n            type: colorStrategy.scale,\n            range\n        });\n    }\n\n    /**\n     *\n     *\n     * @param {*} domainType\n     * @param {*} rangeType\n     * @param {*} schemeType\n     *\n     * @memberof ColorAxis\n     */\n    setColorStrategy (domainType, rangeType, schemeType) {\n        const { stops } = this.config();\n\n        return strategyGetter(domainType, rangeType, schemeType, stops);\n    }\n\n    /**\n     *\n     *\n     * @param {*} domainVal\n     *\n     * @memberof ColorAxis\n     */\n    getHslString (hslColorArray) {\n        return getHslString(hslColorArray);\n    }\n    /**\n     *\n     *\n     * @param {*} domainVal\n     *\n     * @memberof ColorAxis\n     */\n    getColor (domainVal) {\n        return this.getHslString(this.getRawColor(domainVal));\n    }\n    /**\n     *\n     *\n     * @param {*} domainVal\n     *\n     * @memberof ColorAxis\n     */\n    getRawColor (domainVal) {\n        if (this.domain() && domainVal !== undefined) {\n            const scale = this.scale();\n            const range = scale.range ? scale.range() : null;\n            const color = this._colorStrategy.value(range)(domainVal, scale, this.domain(), this.uniqueValues());\n            if (color) {\n                if (typeof color === 'string') {\n                    const col = color.substring(color.indexOf('(') + 1, color.lastIndexOf(')')).split(/,\\s*/);\n                    return rgbToHsv(...col);\n                }\n                return [...color];\n            }\n        }\n        return [...this.config().value];\n    }\n\n    /**\n     *\n     *\n     * @param {*} [domain=[]]\n     *\n     * @memberof ColorAxis\n     */\n    updateDomain (domain = []) {\n        if (domain.length) {\n            const scale = this.scale();\n            const range = scale.range ? scale.range() : null;\n            const domainRangeFn = this._colorStrategy.domainRange();\n            const scaleInfo = domainRangeFn(domain, this.config().stops, range);\n\n            this.domain(scaleInfo.domain);\n            scaleInfo.range && this.scale().range(scaleInfo.range);\n            this.uniqueValues(scaleInfo.uniqueVals);\n            this.scale().domain(scaleInfo.scaleDomain || this.domain());\n        }\n        return this;\n    }\n\n    /**\n     * This method returns an object that can be used to\n     * reconstruct this instance.\n     *\n     * @return {Object} the serializable props of axis\n     * @memberof ShapeAxis\n     */\n    serialize () {\n        return {\n            type: this.constructor.type(),\n            scale: this.scale(),\n            domain: this.domain(),\n            config: this.config()\n        };\n    }\n\n    transformColor (color, transformationArr) {\n        const h = color[0] * 360;\n        const s = color[1] * 100;\n        const l = color[2] * 100;\n        const a = color[3] || 1;\n        const newH = h + transformationArr[0];\n        const newS = s + transformationArr[1];\n        const newL = l + transformationArr[2];\n        const newA = a + transformationArr[3] || 0;\n\n        return { color: `hsla(${newH},${newS}%,${newL}%,${newA})`, hsla: [newH / 360, newS / 100, newL / 100, newA] };\n    }\n\n    /**\n     * Returns the id of the axis.\n     * @return {string} Unique identifier of the axis.\n     */\n    id () {\n        return this._id;\n    }\n\n}\n","export const DEFAULT_CONFIG = {\n    value: 36,\n    range: [36, 1000]\n};\n","import { numberInterpolator, piecewiseInterpolator } from 'muze-utils';\nimport { CONTINOUS, DISCRETE } from '../enums/constants';\nimport { LINEAR, THRESHOLD } from '../enums/scale-type';\nimport { treatNullMeasures } from '../helper';\n\n/**\n *\n *\n * @param {*} domain\n *\n */\nconst indexedDomain = (domain) => {\n    const uniqueVals = domain;\n    const retDomain = domain.map((d, i) => (i) / (domain.length - 1));\n    return { domain: retDomain, uniqueVals, scaleDomain: [0, 1] };\n};\n\n/**\n *\n *\n * @param {*} domain\n *\n */\nconst normalDomain = (domain) => {\n    const uniqueVals = domain;\n    return { uniqueVals, domain };\n};\n\n/**\n *\n *\n * @param {*} domain\n * @param {*} intervals\n *\n */\nconst steppedDomain = (domain, intervals) => {\n    let newIntervals = [];\n    if (intervals instanceof Array) {\n        newIntervals = intervals.slice().sort();\n    } else {\n        const interpolator = numberInterpolator()(...domain);\n        for (let i = 0; i < intervals; i++) {\n            newIntervals[i] = interpolator(i / (intervals - 1));\n        }\n    }\n    if (newIntervals[0] < domain[0]) {\n        newIntervals.shift();\n    }\n    const retDomain = newIntervals;\n    return { uniqueVals: newIntervals, domain: retDomain, nice: true };\n};\n\n/**\n *\n *\n * @param {*} domainValue\n * @param {*} scale\n * @param {*} domain\n * @param {*} uniqueVals\n *\n */\nconst discreteRange = (domainValue, scale, domain) => {\n    const numVal = (domainValue - domain[0]) / (domain[domain.length - 1] - domain[0]);\n    const interpolator = numberInterpolator()(...scale.range());\n    return treatNullMeasures(domainValue, interpolator(numVal), interpolator(domain[0]));\n};\n\n/**\n *\n *\n * @param {*} domainValue\n * @param {*} scale\n * @param {*} domain\n *\n */\nconst pieceWiseRange = (domainValue, scale, domain, uniqueVals) => {\n    const index = uniqueVals.indexOf(domainValue);\n    const numVal = domain[index];\n    const fn = piecewiseInterpolator()(numberInterpolator(), [...scale.range()]);\n    return fn(numVal);\n};\n\n/**\n *\n *\n * @param {*} domainValue\n * @param {*} scale\n */\nconst normalRange = (domainValue, scale, domain) =>\n    treatNullMeasures(domainValue, scale(domainValue), scale(domain[0]));\n\n/**\n *\n *\n * @param {*} intervals\n */\nconst strategies = {\n    [`${DISCRETE}-${CONTINOUS}`]: {\n        scale: LINEAR,\n        domain: indexedDomain,\n        range: pieceWiseRange\n    },\n    [`${CONTINOUS}-${CONTINOUS}`]: {\n        scale: LINEAR,\n        domain: normalDomain,\n        range: normalRange\n    },\n    [`${CONTINOUS}-${DISCRETE}`]: {\n        scale: THRESHOLD,\n        domain: steppedDomain,\n        range: discreteRange\n    }\n};\n\n/**\n *\n *\n * @param {*} domainType\n * @param {*} rangeType\n * @param {*} schemeType\n * @param {*} intervals\n */\nexport const strategyGetter = (domainType, rangeType) =>\n     strategies[`${domainType}-${rangeType}`];\n","export const PROPS = {\n    config: {},\n    domain: {\n        sanitization: (context, value) => {\n            context.scale().domain(value);\n            return value;\n        }\n    },\n    range: {},\n    scale: {},\n    uniqueValues: {}\n};\n","/**\n * @module Axis\n * This file declares a class that is used to render an axis to add  meaning to\n * plots.\n */\nimport { getUniqueId, generateGetterSetters } from 'muze-utils';\nimport { createScale } from '../scale-creator';\nimport { DEFAULT_CONFIG } from './defaults';\nimport { SIZE, CONTINOUS, DISCRETE } from '../enums/constants';\nimport { strategyGetter } from './size-strategy';\nimport { PROPS } from './props';\n\n/**\n* This class is used to instantiate a SimpleAxis.\n* @class SimpleAxis\n*/\nexport default class SizeAxis {\n\n    /**\n     * Creates an instance of SimpleAxis.\n     * @param {Object} config input parameters.\n     * @memberof SizeAxis\n     */\n    constructor (config) {\n        generateGetterSetters(this, PROPS);\n\n        this._id = getUniqueId();\n        this._config = Object.assign({}, this.constructor.defaultConfig(), config);\n        // @todo: Will use configuration override using scale decorator\n        this._domainType = this._config.type === 'linear' ? CONTINOUS : DISCRETE;\n        this._rangeType = CONTINOUS;\n\n        this._sizeStrategy = this.setStrategy(this._domainType, this._rangeType);\n        this._scale = this.createScale(this._sizeStrategy);\n        this._range = this._config.range;\n\n        this.updateDomain(config.domain);\n    }\n\n     /**\n     *\n     *\n     * @param {*} domainType\n     * @param {*} rangeType\n     * @param {*} schemeType\n     *\n     * @memberof ColorAxis\n     */\n    setStrategy (domainType, rangeType) {\n        return strategyGetter(domainType, rangeType);\n    }\n\n    /**\n     *\n     *\n     *\n     * @memberof SizeAxis\n     */\n    createScale (strategy) {\n        const {\n            range\n        } = this.config();\n        return createScale({\n            type: strategy.scale,\n            range\n        });\n    }\n\n    /**\n     *\n     *\n     * @static\n     *\n     * @memberof ColorAxis\n     */\n    static defaultConfig () {\n        return DEFAULT_CONFIG;\n    }\n\n     /**\n     *\n     *\n     * @static\n     *\n     * @memberof ColorAxis\n     */\n    static type () {\n        return SIZE;\n    }\n\n    /**\n     *\n     *\n     * @param {*} domainVal\n     *\n     * @memberof SizeAxis\n     */\n    getSize (domainVal = 0) {\n        let sizeVal = 1;\n        const {\n            value\n        } = this.config();\n        const scale = this.scale();\n        const domain = this.domain() || [1, 1];\n\n        if (!scale || domain[0] === domain[1]) {\n            sizeVal = value;\n        } else {\n            return this._sizeStrategy.range(domainVal, scale, this.domain(), this.uniqueValues());\n        }\n        return sizeVal;\n    }\n\n    /**\n     * This method is used to assign a domain to the axis.\n     *\n     * @param {Array} domain the domain of the scale\n     * @memberof SizeAxis\n     */\n    updateDomain (domain) {\n        if (domain) {\n            const domainFn = this._sizeStrategy.domain;\n\n            const domainInfo = domainFn(domain, this.config().intervals);\n\n            this.domain(domainInfo.domain);\n            this.uniqueValues(domainInfo.uniqueVals);\n\n            this.scale().domain(domainInfo.scaleDomain || this.domain());\n        }\n        return this;\n    }\n\n    /**\n     * This method returns an object that can be used to\n     * reconstruct this instance.\n     *\n     * @return {Object} the serializable props of axis\n     * @memberof ShapeAxis\n     */\n    serialize () {\n        return {\n            type: this.constructor.type(),\n            scale: this.scale(),\n            domain: this.domain(),\n            range: this.range(),\n            config: this.config()\n        };\n    }\n\n    /**\n     * Returns the id of the axis.\n     * @return {string} Unique identifier of the axis.\n     */\n    id () {\n        return this._id;\n    }\n}\n","export const DEFAULT_CONFIG = {\n    generator: null,\n    value: 'circle',\n    range: ['circle', 'diamond', 'star', 'cross', 'square', 'wye', 'triangle']\n};\n","export const PROPS = {\n    config: {},\n    domain: {},\n    scale: {},\n    uniqueValues: {},\n    generator: {}\n};\n\n","/**\n * @module Axis\n * This file declares a class that is used to render an axis to add  meaning to\n * plots.\n */\nimport { getUniqueId, getSymbol, generateGetterSetters, mergeRecursive, InvalidAwareTypes } from 'muze-utils';\nimport { createScale } from '../scale-creator';\nimport { DEFAULT_CONFIG } from './defaults';\nimport { SHAPE } from '../enums/constants';\nimport { shapeGenerator } from './helper';\nimport { PROPS } from './props';\n\n/**\n* This class is used to instantiate a SimpleAxis.\n* @class SimpleAxis\n*/\nexport default class ShapeAxis {\n    /**\n    * Creates an instance of SimpleAxis.\n    * @param {Object} params input parameters.\n    * @param {Object | undefined} params.range Type of color scheme.\n    * @memberof ShapeAxis\n    */\n    constructor (config) {\n        generateGetterSetters(this, PROPS);\n\n        this._id = getUniqueId();\n        this._config = Object.assign({}, this.constructor.defaultConfig());\n        this._config = mergeRecursive(this._config, config);\n\n        this._scale = createScale({\n            type: 'ordinal',\n            range: this._config.range\n        });\n        this.updateDomain(config.domain);\n    }\n\n     /**\n     *\n     *\n     * @static\n     *\n     * @memberof ColorAxis\n     */\n    static defaultConfig () {\n        return DEFAULT_CONFIG;\n    }\n\n     /**\n     *\n     *\n     * @static\n     *\n     * @memberof ColorAxis\n     */\n    static type () {\n        return SHAPE;\n    }\n\n    /**\n     *\n     *\n     * @param {*} value\n     *\n     * @memberof ShapeAxis\n     */\n    getShape (value) {\n        if (!this.scale() || !this.domain() || !value || value instanceof InvalidAwareTypes) {\n            return this.config().value;\n        }\n\n        if (this._generatedShapes) {\n            return this._generatedShapes[value];\n        }\n\n        const shapeType = this.scale()(value);\n        if (shapeType === 'string') {\n            return getSymbol(shapeType);\n        }\n\n        return shapeType;\n    }\n\n    /**\n     * This method is used to assign a domain to the axis.\n     *\n     * @param {Array} domain the domain of the scale\n     * @memberof ShapeAxis\n     */\n    updateDomain (domain = []) {\n        if (domain.length) {\n            this.uniqueValues(domain);\n            this.domain(domain);\n            this.scale().domain(domain);\n\n            if (this.config().generator) {\n                this._generatedShapes = shapeGenerator(domain, this.config().generator);\n            }\n        }\n        return this;\n    }\n\n    /**\n     * This method returns an object that can be used to\n     * reconstruct this instance.\n     *\n     * @return {Object} the serializable props of axis\n     * @memberof ShapeAxis\n     */\n    serialize () {\n        return {\n            type: this.constructor.type(),\n            scale: this.scale(),\n            domain: this.domain(),\n            range: this.config().range,\n            config: this.config()\n        };\n    }\n\n    /**\n     * Returns the id of the axis.\n     * @return {string} Unique identifier of the axis.\n     */\n    id () {\n        return this._id;\n    }\n}\n","/**\n *\n *\n * @param {*} domain\n * @param {*} generatorFn\n *\n */\nexport const shapeGenerator = (domain, generatorFn) => {\n    const generatedShapes = {};\n    domain.forEach((value) => {\n        generatedShapes[value] = generatorFn(value);\n    });\n    return generatedShapes;\n};\n","import * as ScaleType from './enums/scale-type';\n\nconst DATA_TYPES = {\n    DIMENSION: 'dimension',\n    CATEGORICAL: 'categorical',\n    MEASURE: 'measure',\n    TEMPORAL: 'temporal'\n};\n\n/**\n * Map of DataModel types to associated field types.\n */\nexport const dataTypeScaleMap = {\n    [DATA_TYPES.DIMENSION]: ScaleType.BAND,\n    [DATA_TYPES.MEASURE]: ScaleType.LINEAR,\n    [DATA_TYPES.TEMPORAL]: ScaleType.TIME\n};\n\n","import { nestCollection, InvalidAwareTypes } from 'muze-utils';\n\n/**\n * Create multiple datasets from a single dataset by grouping the data using\n * a dimensional field.\n * @param {Array} schema Name and type of fields are stored in schema\n * @param {Array} data Data array\n * @param {Object} config Configuration object\n * @return {Array} Grouped data array\n */\nexport default (schema, data, config) => {\n    const groupBy = config.groupBy instanceof Array ? config.groupBy : [config.groupBy];\n    const groupByIndices = groupBy.map(fieldName => schema.findIndex(d => d.name === fieldName));\n\n    if (groupByIndices.find(d => d === -1) !== undefined) {\n        throw new Error(`Groupby field ${groupBy} not found in schema`);\n    }\n\n    const groupedData = nestCollection({\n        keys: groupByIndices,\n        data\n    });\n\n    groupedData.forEach((d) => {\n        const key = d.key;\n        if (InvalidAwareTypes.isInvalid(key)) {\n            d.key = InvalidAwareTypes.getInvalidType(key);\n        }\n    });\n    return groupedData;\n};\n","/**\n * @module Transform\n * This file exports a function that is used to implement\n * the identity transform\n */\n /* eslint no-unused-vars: 0 */\n /**\n  * This function accepts data and returns the data unchanged.\n  * @param {Object} schema The schema.\n  * @param {Array} data The data array.\n  * @param {Object} config The config object.\n  * @return {Array} The unchanged data.\n  */\n function identityTransform (schema, data, config) {\n     return data;\n }\n\n export default identityTransform;\n","/**\n * @module Transform\n * This file exports the transform factory.\n */\nimport * as TransformType from '../enums/transform-type';\nimport identity from '../identity-transform';\nimport group from '../group-transform';\nimport stack from '../stack-transform';\n\n/* istanbul ignore next */\nconst transformMap = {\n    [TransformType.IDENTITY]: identity,\n    [TransformType.GROUP]: group,\n    [TransformType.STACK]: stack\n};\n\n/**\n * This function is used to retirn a transform associated\n * with the given type.\n *\n * @param {string} type The type of the transform.\n * @return {Function} The transform function.\n */\nfunction transformFactory (type) {\n    const transform = transformMap[type];\n    if (typeof transform !== 'function') {\n        throw new Error('Invalid transform type supplied.');\n    }\n    return transform;\n}\n\nexport default transformFactory;\n","/**\n * @module Transform\n * This module exports constants that are used to reference transforms in\n * a consistent manner throughout the project.\n */\n/* eslint one-var: 0 */\n export const IDENTITY = 'identity';\n export const GROUP = 'group';\n export const STACK = 'stack';\n export const FRACTURE = 'fracture';\n","import { stack } from 'muze-utils';\n\nimport group from '../group-transform';\n/*\n    Normalize the data to a form which can be given to d3 stack for stacking the data\n    ['Product', 'Sales', 'Region'],\n    0 ['A', 2000, 'North'],\n    1 ['A', 3000, 'South'],\n    2 ['B', 3000, 'South'],\n    3 ['B', 2000, 'North'],\n    4 ['C', 3000, 'South'],\n    5 ['C', 2000, 'North']\n            |\n            |\n    ['Product', 'North', 'South'],\n    ['A', 2000, 3000],\n    ['B', 2000, 3000],\n    ['C', 2000, 3000]\n*/\n// eslint-disable-next-line require-jsdoc\nconst normalizeData = (data, schema, valueField, uniqueField, groupBy) => {\n    const groupedData = group(schema, data, {\n        groupBy: uniqueField\n    });\n    const uniqueFieldIndex = schema.findIndex(d => d.name === uniqueField);\n    const valueFieldIndex = schema.findIndex(d => d.name === valueField);\n    const seriesKeyIndex = schema.findIndex(d => d.name === groupBy);\n    const seriesKeys = data.map(d => d[seriesKeyIndex]).filter((item, pos, arr) => arr.indexOf(item) === pos).sort();\n    const fieldNames = schema.reduce((acc, obj, i) => {\n        acc[i] = obj.name;\n        return acc;\n    }, {});\n    const dataArr = groupedData.map((arr) => {\n        const tuples = {};\n        const rowObj = arr.values.reduce((acc, row) => {\n            acc = row.reduce((obj, value, i) => {\n                if (i === seriesKeyIndex) {\n                    obj[value] = row[valueFieldIndex];\n                    tuples[value] = row;\n                } else if (i !== valueFieldIndex) {\n                    obj[fieldNames[i]] = value;\n                }\n                return obj;\n            }, acc);\n            return acc;\n        }, {});\n        rowObj._tuple = tuples;\n            // Set missing values field to zero value\n        seriesKeys.forEach((seriesKey) => {\n            if (rowObj[seriesKey] === undefined) {\n                rowObj[seriesKey] = 0;\n                const newArr = new Array(arr.values[0].length);\n                newArr[uniqueFieldIndex] = arr.key;\n                newArr[seriesKeyIndex] = seriesKey;\n                rowObj._tuple[seriesKey] = newArr;\n            }\n        });\n        return rowObj;\n    });\n\n    return {\n        data: dataArr,\n        keys: seriesKeys\n    };\n};\n/**\n * Generate a stacked representation of data\n * @param {Array} schema schema Array\n * @param {Array} data data array\n * @param {Object} config Configuration object\n * @return {Array} stacked data\n */\nexport default (schema, data, config) => {\n    const uniqueField = config.uniqueField;\n    const valueField = config.value;\n    const groupBy = config.groupBy;\n    const sort = config.sort || 'descending';\n    const normalizedData = normalizeData(data, schema, valueField, uniqueField, groupBy);\n    const keys = normalizedData.keys;\n    const map = {};\n    const orderBy = config.orderBy;\n    const orderIndex = schema.findIndex(d => d.name === orderBy);\n    const groupByIndex = schema.findIndex(d => d.name === groupBy);\n    if (orderIndex !== -1) {\n        keys.forEach((key) => {\n            const name = data.find(d => d[groupByIndex] === key);\n            map[key] = name[orderIndex];\n        });\n        normalizedData.keys.sort((a, b) => map[a].localeCompare(map[b]));\n    }\n\n    const stackData = stack({\n        keys: normalizedData.keys,\n        offset: config.offset || 'diverging',\n        order: sort,\n        data: normalizedData.data\n    });\n    stackData.forEach((seriesData) => {\n        seriesData.forEach((dataObj) => {\n            dataObj.data = dataObj.data._tuple[seriesData.key];\n        });\n    });\n    return stackData;\n};\n\n","import {\n    FieldType,\n    getDomainFromData,\n    setStyles,\n    easeFns,\n    selectElement,\n    DimensionSubtype,\n    STATE_NAMESPACES,\n    retrieveNearestGroupByReducers,\n    getObjProp\n} from 'muze-utils';\nimport { ScaleType } from '@chartshq/muze-axis';\nimport { transformFactory } from '@chartshq/transform';\nimport { IDENTITY, STACK, GROUP, COLOR, SHAPE, SIZE, ENCODING, AGG_FN_SUM } from '../enums/constants';\n\nconst BAND = ScaleType.BAND;\n\nexport const getLayerColor = ({ datum, index }, { colorEncoding, colorAxis, colorFieldIndex }) => {\n    let rawColor = '';\n    let color = '';\n    if (colorEncoding && colorEncoding.value instanceof Function) {\n        color = colorEncoding.value(datum, index);\n        rawColor = colorEncoding.value(datum, index);\n    } else {\n        rawColor = colorAxis.getRawColor(datum._data[colorFieldIndex]);\n        color = colorAxis.getHslString(rawColor);\n    }\n    return { color, rawColor };\n};\n\nconst transfromColor = (colorAxis, datum, styleType, intensity) => {\n    datum.meta.stateColor[styleType] = datum.meta.stateColor[styleType] || datum.meta.originalColor;\n    const fillColorInfo = colorAxis.transformColor(datum.meta.stateColor[styleType], intensity);\n    datum.meta.stateColor[styleType] = fillColorInfo.hsla;\n\n    return fillColorInfo;\n};\n\nexport const applyInteractionStyle = (context, selectionSet, interactionStyles, config) => {\n    const elements = context.getPlotElementsFromSet(selectionSet);\n    const axes = context.axes();\n    const colorAxis = axes.color;\n    const apply = config.apply;\n    const interactionType = config.interactionType;\n    interactionStyles.forEach((style) => {\n        const styleType = style.type;\n        elements.style(styleType, ((d) => {\n            const { colorTransform, stateColor, originalColor } = d.meta;\n            colorTransform[interactionType] = colorTransform[interactionType] || {};\n            if (apply && !colorTransform[interactionType][styleType]) {\n                // fade selections\n                colorTransform[interactionType][styleType] = style.intensity;\n                const color = transfromColor(colorAxis, d, styleType, style.intensity).color;\n                return color;\n            }\n            if (!apply && colorTransform[interactionType][styleType]) {\n                 // unfade selections\n                colorTransform[interactionType][styleType] = null;\n                return transfromColor(colorAxis, d, styleType, style.intensity.map(e => -e)).color;\n            }\n            const [h, s, l, a] = stateColor[styleType] ? stateColor[styleType] : originalColor;\n            return `hsla(${h * 360},${s * 100}%,${l * 100}%, ${a || 1})`;\n        }));\n    });\n};\n\n/**\n *\n *\n * @param {*} selectionSet\n * @param {*} className\n * @param {*} hasFaded\n */\nexport const fadeUnfadeSelection = (context, selectionSet, hasFaded, interaction) => {\n    const interactionConfig = { interaction, apply: hasFaded };\n    applyInteractionStyle(context, selectionSet, 'fade', interactionConfig);\n};\n\n/**\n *\n *\n * @param {*} selectionSet\n * @param {*} className\n * @param {*} hasFaded\n */\nexport const focusUnfocusSelection = (context, selectionSet, isFocussed, interaction) => {\n    const interactionConfig = { interaction, apply: isFocussed };\n    applyInteractionStyle(context, selectionSet, 'focus', interactionConfig);\n};\n\n/**\n *\n *\n * @param {*} axes\n *\n */\nexport const getAxesScales = (axes) => {\n    const [xAxis, yAxis] = [ENCODING.X, ENCODING.Y].map(e => axes[e]);\n    const [xScale, yScale] = [xAxis, yAxis].map(e => e && e.scale());\n    return {\n        xAxis,\n        yAxis,\n        xScale,\n        yScale\n    };\n};\n\n/**\n *\n *\n * @param {*} encoding\n * @param {*} fieldsConfig\n *\n */\nexport const getEncodingFieldInf = (encoding, fieldsConfig) => {\n    const [xField, yField, x0Field, y0Field, colorField, shapeField, sizeField] =\n        [ENCODING.X, ENCODING.Y, ENCODING.X0, ENCODING.Y0, COLOR, SHAPE, SIZE].map(e => encoding[e] &&\n            encoding[e].field);\n\n    const [xFieldType, yFieldType] = [xField, yField, x0Field, y0Field].map(e => fieldsConfig[e] &&\n        fieldsConfig[e].def.type);\n\n    const [xFieldSubType, yFieldSubType] = [xField, yField].map(e => fieldsConfig[e] && (fieldsConfig[e].def.subtype ||\n        fieldsConfig[e].def.type));\n\n    const [xFieldIndex, yFieldIndex, x0FieldIndex, y0FieldIndex] = [xField, yField, x0Field, y0Field]\n        .map(e => fieldsConfig[e] && fieldsConfig[e].index);\n\n    return {\n        xField,\n        yField,\n        colorField,\n        shapeField,\n        sizeField,\n        x0Field,\n        y0Field,\n        xFieldType,\n        yFieldType,\n        xFieldSubType,\n        yFieldSubType,\n        xFieldIndex,\n        yFieldIndex,\n        x0FieldIndex,\n        y0FieldIndex\n    };\n};\n\n/**\n *\n *\n * @param {*} dataModel\n * @param {*} config\n * @param {*} transformType\n *\n */\nexport const transformData = (dataModel, config, transformType, encodingFieldInf) => {\n    const data = dataModel.getData({ withUid: true });\n    const schema = data.schema;\n    const transform = config.transform;\n    const {\n        xField,\n        yField,\n        xFieldType,\n        yFieldType\n    } = encodingFieldInf;\n    const uniqueField = xFieldType === FieldType.MEASURE ? yField : xField;\n\n    return transformFactory(transformType)(schema, data.data, {\n        groupBy: transform.groupBy,\n        uniqueField,\n        sort: transform.sort || 'none',\n        offset: transform.offset,\n        orderBy: transform.orderBy,\n        value: yFieldType === FieldType.MEASURE ? yField : xField\n    }, data.uids);\n};\n\nexport const getIndividualClassName = (d, i, data, context) => {\n    const className = context.config().individualClassName;\n    let classNameStr = '';\n    if (className instanceof Function) {\n        classNameStr = className(d, i, data, context);\n    }\n    return classNameStr;\n};\n\n/*\n * This method resolves the x, y, x0 and y0 values from the transformed data.\n * It also checks the type of transformed data for example, if it is a stacked data\n * then it fetches the y and y0 values from the stacked data.\n * @param {Array.<Array>} transformedData transformed data\n * @param {Object} fieldsConfig field definitions\n * @param {string} transformType type of transformed data - stack, group or identity.\n * @return {Array.<Object>} Normalized data\n*/\nexport const getNormalizedData = (transformedData, fieldsConfig, encodingFieldInf, transformType) => {\n    const transformedDataArr = transformType === IDENTITY ? [transformedData] : transformedData;\n    const {\n        xFieldType,\n        xFieldIndex,\n        yFieldIndex,\n        x0FieldIndex,\n        y0FieldIndex\n    } = encodingFieldInf;\n    const fieldsLen = Object.keys(fieldsConfig).length;\n    /**\n     * Returns normalized data from transformed data. It recursively traverses through\n     * the transformed data if there it is nested.\n     */\n    return transformedDataArr.map((data) => {\n        const values = transformType === GROUP ? data.values : data;\n        return values.map((d) => {\n            let pointObj = {};\n            let tuple;\n            if (transformType === STACK) {\n                tuple = d.data || [];\n                let y;\n                let y0;\n                let x;\n                let x0;\n                if (d[1] >= d[0]) {\n                    y = x0 = d[1];\n                    x = y0 = d[0];\n                } else {\n                    y = x0 = d[0];\n                    x = y0 = d[1];\n                }\n\n                pointObj = xFieldType === FieldType.MEASURE ? {\n                    x,\n                    x0,\n                    y: tuple[yFieldIndex],\n                    y0: tuple[yFieldIndex]\n                } : {\n                    x: tuple[xFieldIndex],\n                    x0: tuple[xFieldIndex],\n                    y,\n                    y0\n                };\n                pointObj._data = tuple;\n                pointObj._id = tuple[fieldsLen];\n            } else {\n                pointObj = {\n                    x: d[xFieldIndex],\n                    y: d[yFieldIndex],\n                    x0: d[x0FieldIndex],\n                    y0: d[y0FieldIndex]\n                };\n                pointObj._data = d;\n                pointObj._id = d[fieldsLen];\n            }\n            return pointObj;\n        });\n    }).filter(d => d.length);\n};\n\nexport const calculateDomainFromData = (data, encodingFieldInf, transformType) => {\n    const {\n        xFieldSubType,\n        yFieldSubType,\n        xField,\n        yField,\n        x0Field,\n        y0Field\n    } = encodingFieldInf;\n    const domains = {};\n    const yEnc = ENCODING.Y;\n    const xEnc = ENCODING.X;\n    if (xField) {\n        domains.x = getDomainFromData(data, x0Field || transformType === STACK ? [xEnc, ENCODING.X0] : [xEnc, xEnc],\n            xFieldSubType);\n    }\n    if (yField) {\n        domains.y = getDomainFromData(data, y0Field || transformType === STACK ? [ENCODING.Y0, ENCODING.Y] :\n            [yEnc, yEnc], yFieldSubType);\n    }\n\n    return domains;\n};\n\nexport const attachDataToVoronoi = (voronoi, points) => {\n    voronoi.data([].concat(...points).filter(d => d._id !== undefined).map((d) => {\n        const point = d.update;\n        return {\n            x: point.x,\n            y: point.y,\n            data: d\n        };\n    }));\n};\n\n/**\n *\n *\n * @param {*} target\n * @param {*} styles\n * @param {*} remove\n */\nexport const updateStyle = (target, styles, remove) => {\n    for (const key in styles) {\n        if ({}.hasOwnProperty.call(styles, key)) {\n            target.style(key, remove ? null : styles[key]);\n        }\n    }\n};\n\n/**\n *\n *\n * @param {*} mount\n * @param {*} context\n */\nexport const animateGroup = (mount, context) => {\n    let groupTransition;\n    let update;\n    const { transition, groupAnimateStyle } = context;\n    const { duration, effect, disabled } = transition;\n    if (groupAnimateStyle) {\n        setStyles(mount.node(), groupAnimateStyle.enter);\n        update = groupAnimateStyle.update;\n        if (!disabled) {\n            groupTransition = mount.transition()\n                .ease(easeFns[effect])\n                .duration(duration)\n                .on('end', function () {\n                    updateStyle(selectElement(this), update, true);\n                });\n        } else {\n            groupTransition = mount;\n        }\n        updateStyle(groupTransition, update);\n    }\n};\n\nexport const positionPoints = (context, points) => {\n    const positioner = context.encodingTransform();\n    if (positioner) {\n        return positioner(points, context, { smartLabel: context._dependencies.smartLabel });\n    }\n    return points;\n};\n\n/**\n  * Gets the width of each group. It gets the width from axis if it is available for\n  * example when the scale is nominal else it calculates the width from the\n  * range of the axis and number of data points.\n  *\n  * @param {SimpleAxis} axis instance of axis\n  * @param {number} minDiff Minimum difference between data points\n  * @return {number} width of each bar\n  * @private\n*/\nexport const getGroupSpan = (axis, minDiff) => {\n    let groupSpan;\n    const width = axis.getUnitWidth();\n    const scale = axis.scale();\n    const range = scale.range();\n    const domain = scale.domain();\n    !width ? groupSpan = (Math.abs(range[1] - range[0]) / Math.abs(domain[1] - domain[0])) * minDiff :\n        (groupSpan = width);\n\n    return groupSpan;\n};\n\nexport const getPlotMeasurement = (context, dimensionalValues) => {\n    const fieldInfo = context.encodingFieldsInf();\n    const axes = context.axes();\n    const transformType = context.transformType();\n    const config = context.config();\n    const bandScale = context._bandScale;\n\n    return ['x', 'y'].map((type) => {\n        let span = 0;\n        let groupSpan = 0;\n        let padding = 0;\n        let offsetValues = [];\n        if (fieldInfo[`${type}FieldType`] === FieldType.DIMENSION) {\n            let actualGroupWidth;\n            const isTemporal = fieldInfo[`${type}FieldSubType`] === DimensionSubtype.TEMPORAL;\n            const timeDiff = isTemporal ? context.dataProps().timeDiffs[type] : 0;\n            const axis = axes[type];\n            const pad = config[`pad${type.toUpperCase()}`];\n            const innerPadding = config.innerPadding;\n            const keys = dimensionalValues;\n            const scale = axis.scale();\n            groupSpan = getGroupSpan(axis, timeDiff);\n            const isAxisBandScale = axis.constructor.type() === BAND;\n            const axisPadding = axis.config().padding;\n            // If it is a grouped bar then the width of each bar in a grouping is retrieved from\n            // a band scale. The band scale will have range equal to width of one group of bars and\n            // the domain is set to series keys.\n            if (transformType === 'group') {\n                const groupPadding = isAxisBandScale ? 0 : axisPadding * groupSpan / 2;\n                bandScale.range([groupPadding, groupSpan - groupPadding]).domain(keys).paddingInner(innerPadding);\n                span = bandScale.bandwidth();\n                actualGroupWidth = groupSpan - (isAxisBandScale ? 0 : axisPadding * groupSpan);\n                offsetValues = keys.map(key => bandScale(key) - (isAxisBandScale ? 0 : (groupSpan / 2)));\n            } else if (pad !== undefined) {\n                let offset;\n                if (isAxisBandScale) {\n                    const step = scale.step();\n                    offset = scale.padding() * step;\n                    span = scale.bandwidth() + offset;\n                } else {\n                    span = groupSpan;\n                }\n                offsetValues = keys.map(() => (isAxisBandScale ? -(offset / 2) : -(span / 2)));\n            } else {\n                padding = isAxisBandScale ? 0 : axisPadding * groupSpan;\n                span = groupSpan - padding;\n                actualGroupWidth = span;\n                offsetValues = keys.map(() => (isAxisBandScale ? 0 : -(span / 2)));\n            }\n\n            groupSpan = actualGroupWidth;\n            padding = isAxisBandScale ? axisPadding * axis.scale().step() : axisPadding * groupSpan;\n        }\n\n        return {\n            span,\n            offsetValues,\n            groupSpan,\n            padding\n        };\n    });\n};\n\nexport const initializeGlobalState = (context) => {\n    const store = context.store();\n    const globalState = context.constructor.getState()[0];\n    const namespace = context.metaInf().namespace;\n    for (const prop in globalState) {\n        store.append(`${STATE_NAMESPACES.LAYER_GLOBAL_NAMESPACE}.${prop}`, {\n            [namespace]: null\n        });\n    }\n};\n\nexport const resolveInvalidTransformType = (context) => {\n    const {\n        xField,\n        yField,\n        xFieldType,\n        yFieldType\n    } = context.encodingFieldsInf();\n    const groupByField = context.config().transform.groupBy;\n    const fieldsConfig = context.data().getFieldsConfig();\n    const groupByFieldMeasure = fieldsConfig[groupByField] && fieldsConfig[groupByField].def.type === FieldType.MEASURE;\n    if (!xField || !yField || groupByFieldMeasure || !groupByField || xFieldType === FieldType.DIMENSION &&\n        yFieldType === FieldType.DIMENSION) {\n        return IDENTITY;\n    }\n    return null;\n};\n\nexport const getValidTransform = context => resolveInvalidTransformType(context) || context.config().transform.type;\n\nexport const getValidTransformForAggFn = (context) => {\n    const resolvedInvalidTransformType = resolveInvalidTransformType(context);\n    if (resolvedInvalidTransformType) {\n        return resolvedInvalidTransformType;\n    }\n\n    const {\n        xField,\n        yField,\n        xFieldType,\n        yFieldType\n    } = context.encodingFieldsInf();\n    const groupByField = context.config().transform.groupBy;\n    const isCustomTransformTypeProvided = !!getObjProp(context._customConfig, 'transform', 'type');\n    let transformType = context.config().transform.type;\n\n    if (!isCustomTransformTypeProvided && groupByField && xFieldType !== yFieldType) {\n        const measureField = xFieldType === FieldType.MEASURE ? xField : yField;\n        const { [measureField]: aggFn } = retrieveNearestGroupByReducers(context.data(), measureField);\n        transformType = aggFn === AGG_FN_SUM ? STACK : GROUP;\n    }\n\n    return transformType;\n};\n\nexport const getMarkId = (source, schema) => source.filter((val, i) => schema[i] &&\n    schema[i].type === FieldType.DIMENSION).join();\n","import { CommonProps, STATE_NAMESPACES } from 'muze-utils';\nimport { getEncodingFieldInf } from '../helpers';\nimport * as PROPS from '../enums/props';\n\nconst renderLayer = (context) => {\n    const mount = context.mount();\n    if (mount) {\n        context.render(mount);\n        context.dependencies().throwback.commit(CommonProps.ON_LAYER_DRAW, true);\n    }\n};\n\nexport const listenerMap = (context, ns) => [\n    {\n        props: [`${ns.local}.${PROPS.DATA}`],\n        listener: ([, data]) => {\n            const config = context.config();\n            const encodingValue = config.encoding;\n            if (data && encodingValue) {\n                const fieldsConfig = data.getFieldsConfig();\n                const encodingFieldsInf = getEncodingFieldInf(encodingValue, fieldsConfig);\n                context.encodingFieldsInf(encodingFieldsInf);\n                context.resolveTransformType();\n                context._transformedData = context.getTransformedData(data, config,\n                    context.transformType(), encodingFieldsInf);\n                context._normalizedData = context.getNormalizedData(context._transformedData, fieldsConfig);\n                const domain = context.calculateDomainFromData(context._normalizedData, context.encodingFieldsInf(),\n                    context.data().getFieldsConfig());\n                context._domain = domain;\n                !context._updateLock && context.domain(domain);\n            }\n        },\n        type: 'registerImmediateListener'\n    },\n    {\n        props: [`${ns.local}.${PROPS.CONFIG}`],\n        listener: ([, config]) => {\n            const calculateDomain = config.calculateDomain;\n            const props = context.getRenderProps();\n            const store = context.store();\n            const namespaceInf = {\n                namespace: `${STATE_NAMESPACES.LAYER_LOCAL_NAMESPACE}.${context.metaInf().namespace}`,\n                key: 'renderListener'\n            };\n            store.unsubscribe(namespaceInf);\n            if (calculateDomain === false) {\n                props.push(`${ns.local}.${PROPS.DATA}`);\n            }\n            store.registerChangeListener(props,\n                () => {\n                    renderLayer(context);\n                }, false, namespaceInf);\n        },\n        type: 'registerImmediateListener'\n    }\n];\n\n","export const DATA = 'data';\nexport const CONFIG = 'config';\nexport const MEASUREMENT = 'measurement';\nexport const DOMAIN = 'domain';\nexport const MOUNT = 'mount';\n","import { mergeRecursive } from 'muze-utils';\nimport * as PROPS from '../enums/props';\n\nexport const defaultOptions = {\n    [PROPS.CONFIG]: {\n        value: null,\n        meta: {\n            sanitization: (config, oldConfig, context) => {\n                context._customConfig = config;\n                const constructor = context.constructor;\n                const newConf = mergeRecursive({}, constructor.defaultConfig());\n                return constructor.defaultPolicy(newConf, config);\n            }\n        }\n    },\n    [PROPS.DATA]: {\n        value: null,\n        meta: {\n            preset: (data, context) => {\n                if (context._cacheEnabled) {\n                    context._cachedData.push(data);\n                } else {\n                    context._cachedData = [data];\n                }\n            }\n        }\n    }\n    // [PROPS.MOUNT]: {\n    //     value: null\n    // },\n    // [PROPS.AXES]: {\n    //     value: null\n    // },\n    // [PROPS.MEASUREMENT]: {\n    //     value: null\n    // }\n};\n","import {\n    getUniqueId,\n    mergeRecursive,\n    FieldType,\n    selectElement,\n    ReservedFields,\n    registerListeners,\n    transactor,\n    DataModel,\n    clone,\n    generateGetterSetters,\n    STATE_NAMESPACES\n} from 'muze-utils';\nimport { SimpleLayer } from '../simple-layer';\nimport * as PROPS from '../enums/props';\nimport { props } from './props';\nimport {\n    transformData,\n    calculateDomainFromData,\n    getNormalizedData,\n    applyInteractionStyle,\n    initializeGlobalState,\n    getValidTransform\n} from '../helpers';\nimport { listenerMap } from './listener-map';\nimport { defaultOptions } from './default-options';\n\n/**\n * An abstract class which gives definition of common layer functionality like\n * - transforming data for various modes. Supported modes: identity, group and stack.\n * - calculating data domain\n * - linking dependent layers\n * - merging policy of configuration\n * - interaction sideffect helpers\n * - retrieving dom elements from data using id\n * - retrieving the physical dimensions of marks\n * - disposing layer\n *\n * Every layer has to extend base layer and give concrete definition.\n * This layer does not have any default visual. A new layer has to define the logic of `render` for rendering the\n * visuals\n *\n * @public\n * @class\n * @module BaseLayer\n */\nexport default class BaseLayer extends SimpleLayer {\n\n    /**\n     * Creates a layer using a configuration and data.\n     *\n     * @public\n     * @constructor\n     * @param {DataModel} data Instance of DataModel to be used. This DataModel instance serves as the data for a layer.\n     * @param {Object} axes Axes instances to be used for rendering the layer. Axes are used for mapping data from\n     *      value to px.\n     * @param {SimpleAxis} axes.x X axis of the layer. Based on the type of variable it gets instance of BandAxis,\n     *      TimeAxis, ContinuousAxis\n     * @param {SimpleAxis} axes.y X axis of the layer. Based on the type of variable it gets instance of BandAxis,\n     *      TimeAxis, ContinuousAxis\n     * @param {ColorAxis} axes.color Axis for coloring a layer using color interpolators\n     * @param {ShapeAxis} axes.shape Axis for providing a shape\n     * @param {SizeAxis} axes.size Axis for determining size of a mark using size interpolator\n     * @param {LayerConfig} config Configuration of the layer\n     * @param {Object} dependencies Dependencies of the layer\n     * @param {SmartLabel} dependencies.smartLabel Smartlabel singleton instance\n     */\n    constructor (data, axes, config, dependencies = {}) {\n        super();\n\n        generateGetterSetters(this, props);\n        this.data(data);\n        this.axes(axes);\n        this.config(config);\n        this.alias(this.constructor.formalName() + getUniqueId());\n        this.dependencies(dependencies);\n        this._points = [];\n        this._cachedData = [];\n        this._id = getUniqueId();\n        this._measurement = {};\n        this._animationDonePromises = [];\n        this._customConfig = null;\n    }\n\n    static getState () {\n        return [\n            {\n                domain: {}\n            },\n            {\n                config: {},\n                data: {}\n            }\n        ];\n    }\n\n    store (...params) {\n        if (params.length) {\n            this._store = params[0];\n            const metaInf = this.metaInf();\n            const localNs = `${STATE_NAMESPACES.LAYER_LOCAL_NAMESPACE}.${metaInf.namespace}`;\n            initializeGlobalState(this);\n            const store = this.store();\n            store.append(`${STATE_NAMESPACES.LAYER_LOCAL_NAMESPACE}`, {\n                [metaInf.namespace]: null\n            });\n\n            transactor(this, defaultOptions, store.model, {\n                namespace: localNs\n            });\n            registerListeners(this, listenerMap, {\n                local: localNs,\n                global: STATE_NAMESPACES.LAYER_GLOBAL_NAMESPACE\n            }, {\n                unitRowIndex: metaInf.unitRowIndex,\n                unitColIndex: metaInf.unitColIndex\n            });\n            return this;\n        }\n        return this._store;\n    }\n\n    domain (...dom) {\n        const prop = `${STATE_NAMESPACES.LAYER_GLOBAL_NAMESPACE}.${PROPS.DOMAIN}.${this.metaInf().namespace}`;\n        if (dom.length) {\n            this.store().commit(prop, dom[0]);\n            return this;\n        }\n        return this.store().get(prop);\n    }\n\n    /**\n     * Creates a layer instance\n     * @return {BaseLayer} Instance of a layer\n     */\n    static create (...params) {\n        return new this(...params);\n    }\n\n    /**\n     * Default configuration of the layer. This configuration gets merged to the user passed configuration using a\n     * plolicy. Base layer only returns part of configuraion, any layer overridding base layer should return its own\n     * configuration.\n     *\n     * @public\n     * @static\n     *\n     * @return {Object} Default configuration\n     */\n    static defaultConfig () {\n        return {\n            transform: {\n                type: 'identity'\n            }\n        };\n    }\n\n    /**\n     * Policy defines how user config gets merged to default config. The default policy here does a deep copy\n     * operation.\n     * Any policy which does more than deep copying should define the policy as a static member.\n     *\n     * @static\n     * @public\n     *\n     * @param {LayerConfig} conf Configuration with which the user config will be merged\n     * @param {LayerConfig} userConf Configuration given by the user\n     *\n     * @return {LayerConfig} Merged layer configuration\n     */\n    static defaultPolicy (conf, userConf) {\n        return mergeRecursive(conf, userConf);\n    }\n\n    /**\n     * Determines a name for a layer. This name of the layer is used in the input data to refer to this layer.\n     * ```\n     *  .layers([\n     *      mark: 'bar',\n     *      encoding: { ... }\n     *  ])\n     * ```\n     *\n     * @static\n     * @public\n     *\n     * @return {string} name of layer\n     */\n    static formalName () {\n        return 'base';\n    }\n\n    encodingFieldsInf (...fieldsInf) {\n        if (fieldsInf.length) {\n            this._encodingFieldsInf = fieldsInf[0];\n            return this;\n        }\n        return this._encodingFieldsInf;\n    }\n\n    encodingTransform (...encodingTransform) {\n        if (encodingTransform.length) {\n            this._encodingTransform = encodingTransform[0];\n            return this;\n        }\n        return this._encodingTransform;\n    }\n\n    /**\n     * Provides a alias for a layer. Like it's possible to have same layer (like bar) multiple times, but among multiple\n     * layers of same type if one layer has to be referred, alias is used. If no alias is given then `formalName` is set\n     * as the alias name.\n     *\n     *\n     * If used as setter\n     * @param  {string} alias Name of the alias\n     * @return {BaseLayer} Instance of current base layer\n     *\n     * If used as getter\n     * @return {string} Alias of the current layer\n     *\n     * @public\n     */\n    alias (...params) {\n        if (params.length) {\n            this._alias = params[0];\n            return this;\n        }\n        return this._alias || this.constructor.formalName();\n    }\n\n    dependencies (...params) {\n        if (params.length) {\n            this._dependencies = params[0];\n            return this;\n        }\n        return this._dependencies;\n    }\n\n    enableCaching () {\n        this._cacheEnabled = true;\n        return this;\n    }\n\n    clearCaching () {\n        this._cacheEnabled = false;\n        return this.data(this._cachedData[0]);\n    }\n\n    /**\n     * Serialize the schema. Merge config is used for serialization.\n     *\n     * @public\n     *\n     * @return {LayerConfig} Serialized schema\n     */\n    serialize () {\n        return this.config();\n    }\n\n    /**\n     * Returns the unique identifier of this layer. Id is auto generated during the creation proceess of a schema.\n     *\n     * @public\n     *\n     * @return {string} id of the layer\n     */\n    id () {\n        return this._id;\n    }\n\n    /**\n     * Returns the transformed data based on given transform type.\n     * It first gets the transform method from transform factory based on type of transform. It then calls the\n     * transform method with the data and passes the configuration parameters of transform such as\n     * groupBy, value field, etc.\n     *\n     * @param {DataModel} dataModel Instance of DataModel\n     * @param {Object} config Configuration for transforming data\n     * @return {Array.<Array>} Transformed data.\n     */\n    getTransformedData (dataModel, config, transformType, encodingFieldsInf) {\n        return transformData(dataModel, config, transformType, encodingFieldsInf);\n    }\n\n    /**\n     * Calculates the domain from the data.\n     * It checks the type of field and calculates the domain based on that. For example, if it\n     * is a quantitative or temporal field, then it calculates the min and max from the data or\n     * if it is a categorical field then it gets all the values from the data of that field.\n     * @param {Array} data DataArray\n     * @param {Object} fieldsConfig Configuration of fields\n     * @return {Array} Domain values array.\n     */\n    calculateDomainFromData (data) {\n        let domains = {};\n        const isEmpty = this.data().isEmpty();\n\n        if (!isEmpty) {\n            domains = calculateDomainFromData(data, this.encodingFieldsInf(), this.transformType());\n        }\n        return domains;\n    }\n\n    static shouldDrawAnchors () {\n        return false;\n    }\n\n    /**\n     * Returns the domain for the axis.\n     *\n     * @param {string} encodingType type of encoding x, y, etc.\n     * @return {Object} Axis domains\n     */\n    getDataDomain (encodingType) {\n        const domains = this.store()\n            .get(`${STATE_NAMESPACES.LAYER_GLOBAL_NAMESPACE}.${PROPS.DOMAIN}.${this.metaInf().namespace}`);\n        return encodingType !== undefined ? domains[encodingType] || [] : domains;\n    }\n\n    /**\n     * Normalizes the transformed data and returns it.\n     *\n     * @param {string} encodingType type of encoding x, y, etc.\n     * @return {Object} Axis domains\n     */\n    getNormalizedData (transformedData, fieldsConfig) {\n        return getNormalizedData(transformedData, fieldsConfig, this.encodingFieldsInf(), this.transformType());\n    }\n\n    /**\n     * Gets the nearest point closest to the given x and y coordinate. If no nearest point is found, then it returns\n     * null.\n     *\n     * @public\n     *\n     * @param {number} x X Coordinate.\n     * @param {number} y Y Coordinate.\n     *\n     * @return {Object} Information of the nearest point.\n     * ```\n     *      {\n     *          // id property contains the field names and their corresponding values in a 2d array. This is the data\n     *          // associated with the nearest point.\n     *          id: // Example data: [['Origin'], ['USA']],\n     *          dimensions: // Physical dimensions of the point.\n     *          layerId: // Id of the layer instance.\n     *      }\n     * ```\n     */\n    getNearestPoint () {\n        return null;\n    }\n\n    applyInteractionStyle (interactionType, selectionSet, apply, styles) {\n        const interactionConfig = this.config().interaction || {};\n\n        let interactionStyles = interactionConfig[interactionType];\n        interactionStyles = styles || interactionStyles;\n        if (interactionStyles) {\n            applyInteractionStyle(this, selectionSet, interactionStyles, {\n                apply,\n                interactionType\n            });\n        }\n    }\n\n    disableUpdate () {\n        this._updateLock = true;\n        return this;\n    }\n\n    enableUpdate () {\n        this._updateLock = false;\n        return this;\n    }\n\n    resolveTransformType () {\n        this._transformType = getValidTransform(this);\n    }\n\n    transformType () {\n        return this._transformType;\n    }\n\n    /**\n     * Renders the layer\n     * @return {BaseLayer} Instance of the layer.\n     */\n    render () {\n        return this;\n    }\n\n    /**\n     *\n     *\n     *\n     * @memberof BaseLayer\n     */\n    elemType () {\n        return 'g';\n    }\n\n    /**\n     * Disposes the entire layer.\n     *\n     * @return {BaseLayer} Instance of layer.\n     */\n    remove () {\n        this.store().unsubscribe({\n            namespace: `${STATE_NAMESPACES.LAYER_LOCAL_NAMESPACE}.${this.metaInf().namespace}`\n        });\n        selectElement(this.mount()).remove();\n        return this;\n    }\n\n    /**\n     * Stores point in an object with key as the categorical value or temporal value\n     *\n     * @param {string} key categorical value or temporal value\n     * @param {Object} data Information of the data point\n     * @return {BarLayer} Instance of bar layer\n     */\n    cachePoint (key, data) {\n        if (key === null) {\n            return this;\n        }\n        const pointMap = this._pointMap;\n        !pointMap[key] && (pointMap[key] = []);\n        pointMap[key].push(data);\n        return this;\n    }\n\n    /**\n     *\n     *\n     * @param {*} dataProps\n     *\n     * @memberof BaseLayer\n     */\n    dataProps (...dataProps) {\n        if (dataProps.length) {\n            this._dataProps = dataProps[0];\n            return this;\n        }\n        return this._dataProps;\n    }\n\n    /**\n     *\n     *\n     * @param {*} data\n     * @param {*} id\n     *\n     * @memberof BaseLayer\n     */\n    getIdentifiersFromData (data) {\n        const schema = this.data().getData().schema;\n        const fieldsConfig = this.data().getFieldsConfig();\n        const identifiers = [[], []];\n        const {\n                xFieldType,\n                yFieldType,\n                xField,\n                yField\n            } = this.encodingFieldsInf();\n\n        const [xMeasure, yMeasure] = [xFieldType, yFieldType].map(type => type === FieldType.MEASURE);\n        schema.forEach((d, i) => {\n            const name = d.name;\n            if (fieldsConfig[name].def.type === FieldType.DIMENSION) {\n                identifiers[0].push(name);\n                identifiers[1].push(data[i]);\n            }\n        });\n\n        if (xMeasure && yMeasure) {\n            const xMeasureIndex = fieldsConfig[xField].index;\n            const yMeasureIndex = fieldsConfig[yField].index;\n            identifiers[0].push(...[xField, yField]);\n            identifiers[1].push(...[data[xMeasureIndex], data[yMeasureIndex]]);\n        }\n        return identifiers;\n    }\n\n    hasPlotSpan () {\n        return false;\n    }\n\n    getPlotSpan () {\n        return {\n            x: 0,\n            y: 0\n        };\n    }\n\n    getPlotPadding () {\n        return {\n            x: 0,\n            y: 0\n        };\n    }\n\n    /**\n     * Returns the information of the marks corresponding to the supplied identifiers. Identifiers are a set of field\n     * names and their corresponding values in an array. It can also be an instance of datamodel.\n     *\n     * For example,\n     * ```\n     *  const identifiers = [\n     *      ['Origin', 'Cylinders'],\n     *      ['USA', '8']\n     *  ];\n     *  const points = barLayer.getPointsFromIdentifiers(identifiers);\n     * ```\n     * @public\n     * @param {Array|DataModel} identifiers Identifiers of the marks.\n     * @param {Object} config Optional configuration which describes how to get the information.\n     * @param {boolean} config.getAllAttrs If true, then returns all the information of the points, else returns only\n     * the positions of the points.\n     * @param {boolean} config.getBBox If true, then returns the bounding box of all the marks.\n     *\n     * @return {Array} Array of points contains\n     */\n    getPointsFromIdentifiers (identifiers, config = {}) {\n        const getAllAttrs = config.getAllAttrs;\n        const getBBox = config.getBBox;\n        if (!this.data()) {\n            return [];\n        }\n        let fieldNames;\n        let values;\n        if (identifiers instanceof DataModel) {\n            const dataObj = identifiers.getData();\n            fieldNames = dataObj.schema.map(d => d.name);\n            values = dataObj.data;\n        } else {\n            fieldNames = identifiers[0];\n            values = identifiers.slice(1, identifiers.length);\n        }\n\n        const points = this._points;\n        const fieldsConfig = this.data().getFieldsConfig();\n\n        const filteredPoints = [].concat(...points).filter((point) => {\n            const { _data, _id } = point;\n\n            return fieldNames.every((field, idx) => {\n                if (field in fieldsConfig && fieldsConfig[field].def.type === FieldType.DIMENSION) {\n                    return values.findIndex(d => d[idx] === _data[fieldsConfig[field].index]) !== -1;\n                } else if (field === ReservedFields.ROW_ID) {\n                    return values.findIndex(d => d[idx] === _id) !== -1;\n                } return true;\n            });\n        });\n        return getAllAttrs ? filteredPoints : filteredPoints.map((d) => {\n            const obj = clone(d);\n            if (getBBox) {\n                const update = obj.update || obj;\n                if (obj.size !== undefined) {\n                    const sizeVal = Math.sqrt(obj.size / Math.PI) * 2;\n                    update.width = sizeVal;\n                    update.height = sizeVal;\n                    update.x -= sizeVal / 2;\n                    update.y -= sizeVal / 2;\n                } else {\n                    if (update.width === undefined) {\n                        update.width = 2;\n                    }\n                    if (update.height === undefined) {\n                        update.height = 2;\n                    }\n                }\n            }\n\n            return obj.update || obj;\n        }).sort((a, b) => a.y - b.y);\n    }\n\n    getTransformedDataFromIdentifiers (identifiers) {\n        const { data: identifierData, schema: identifierSchema } = identifiers.getData();\n        const normalizedData = this._normalizedData;\n        const fieldsConfig = this.data().getFieldsConfig();\n        const {\n            yField,\n            xField,\n            yFieldType,\n            xFieldType\n        } = this.encodingFieldsInf();\n        let measureIndex;\n        let enc;\n        if (xFieldType === FieldType.MEASURE) {\n            measureIndex = fieldsConfig[xField].index;\n            enc = 'x';\n        } else if (yFieldType === FieldType.MEASURE) {\n            measureIndex = fieldsConfig[yField].index;\n            enc = 'y';\n        }\n\n        const transformedData = [];\n        normalizedData.forEach((dataArr) => {\n            dataArr.forEach((dataObj) => {\n                const tupleArr = dataObj._data;\n                const exist = identifierSchema.every((obj, i) =>\n                    identifierData.findIndex(d => tupleArr[fieldsConfig[obj.name].index] === d[i]) !== -1);\n                if (exist) {\n                    const transformedVal = dataObj[enc];\n                    const row = dataObj._data;\n                    const tuple = {};\n                    for (const key in fieldsConfig) {\n                        const index = fieldsConfig[key].index;\n                        tuple[key] = row[index];\n                        if (index === measureIndex) {\n                            tuple[key] = transformedVal;\n                        }\n                    }\n                    transformedData.push(tuple);\n                }\n            });\n        });\n\n        return [transformedData, this.data().getData().schema];\n    }\n\n    /**\n     * Returns the dom elements associated with the supplied set of row ids.\n     * Each element in the layer is mapped with a row of the datamodel. When given an array of row ids, it returns all\n     * the elements which is mapped with those row ids.\n     *\n     * @public\n     * @param {Array} set Array of row ids\n     *\n     * @return {Selection} D3 Selection of dom elements.\n     */\n    getPlotElementsFromSet (set) {\n        return selectElement(this.mount()).selectAll(this.elemType()).filter(data =>\n            (data ? set.indexOf(data._id) !== -1 : false));\n    }\n\n    /**\n     * Notifies when all animations/transitions of the layer are completed.\n     *\n     * @public\n     * @return {Promise} Returns a promise to notify the animation completion.\n     */\n    animationDone () {\n        return Promise.all(this._animationDonePromises);\n    }\n\n    registerAnimationDoneHook () {\n        let resolveFn;\n        const promise = new Promise((resolve) => {\n            resolveFn = resolve;\n        });\n        this._animationDonePromises.push(promise);\n\n        return () => {\n            resolveFn();\n        };\n    }\n\n    getRenderProps () {\n        const metaInf = this.metaInf();\n        return [`${STATE_NAMESPACES.GROUP_GLOBAL_NAMESPACE}.domain.y.${metaInf.unitRowIndex}0`,\n            `${STATE_NAMESPACES.GROUP_GLOBAL_NAMESPACE}.domain.x.${metaInf.unitColIndex}0`];\n    }\n}\n","import {\n    selectElement,\n    makeElement,\n    pathInterpolators,\n    Symbols\n} from 'muze-utils';\nimport { updateStyle } from '../../helpers';\n\nconst line = Symbols.line;\n\nconst filterFn = (d) => {\n    const { update } = d;\n    return update.y !== null && update.x !== null;\n};\n\n/**\n * Draws a line from the points\n * Generates a svg path string\n * @param {Object} params Contains container, points and interpolate attribute.\n */\nexport const drawLine = (context) => {\n    let filteredPoints;\n    const { layer, container, points, interpolate, connectNullData, className, style, transition } = context;\n    const mount = selectElement(container).attr('class', className);\n    const curveInterpolatorFn = pathInterpolators[interpolate];\n    const linepath = line()\n                .curve(curveInterpolatorFn)\n                .x(d => d.update.x)\n                .y(d => d.update.y)\n                .defined(filterFn);\n\n    filteredPoints = points;\n    if (connectNullData) {\n        filteredPoints = points.filter(filterFn);\n    }\n\n    updateStyle(mount, style);\n    let element = makeElement(mount, 'path', [1]);\n    element.classed(points[0].className, true);\n    if (!transition.disabled) {\n        element = element.transition()\n        .duration(transition.duration)\n        .on('end', layer.registerAnimationDoneHook());\n    }\n    element.attr('d', linepath(filteredPoints))\n                    .style('fill-opacity', 0);\n    return element;\n};\n","import { CLASSPREFIX } from '../../enums/constants';\n\nexport const defaultConfig = {\n    classPrefix: CLASSPREFIX,\n    defClassName: 'layer-line',\n    className: '',\n    interpolate: 'linear',\n    transform: {\n        type: 'group'\n    },\n    interaction: {\n        highlight: [{\n            type: 'stroke',\n            intensity: [0, 0, -15, 0]\n        }],\n        fade: [{\n            type: 'stroke',\n            intensity: [0, 0, +15, 0]\n        }],\n        focus: [{\n            type: 'stroke',\n            intensity: [0, 0, +15, 0]\n        }]\n    },\n    nearestPointThreshold: 20,\n    encoding: {\n        color: {},\n        x: {},\n        y: {},\n        strokeOpacity: {\n            value: 1\n        }\n    },\n    transition: {\n        effect: 'cubic',\n        duration: 1000\n    },\n    connectNullData: false\n};\n\n","import {\n    Voronoi,\n    getQualifiedClassName,\n    selectElement,\n    makeElement,\n    FieldType,\n    getObjProp,\n    InvalidAwareTypes\n} from 'muze-utils';\nimport { BaseLayer } from '../../base-layer';\nimport { drawLine } from './renderer';\nimport { defaultConfig } from './default-config';\nimport { ENCODING } from '../../enums/constants';\nimport {\n    attachDataToVoronoi,\n    animateGroup,\n    getLayerColor,\n    positionPoints,\n    getIndividualClassName\n} from '../../helpers';\n\nimport './styles.scss';\n\n/**\n * This layer is used to render straight or smoothed line paths. The mark type of this layer is ```line```.\n *\n * @public\n *\n * @class\n * @module LineLayer\n * @extends BaseLayer\n */\nexport default class LineLayer extends BaseLayer {\n\n    /**\n     * Creates an instance of LineLayer.\n     * @param {*} args\n     * @memberof LineLayer\n     */\n    constructor (...args) {\n        super(...args);\n        this._voronoi = new Voronoi();\n    }\n\n    /**\n     *\n     *\n     * @static\n     *\n     * @memberof LineLayer\n     */\n    static formalName () {\n        return 'line';\n    }\n\n    /**\n     *\n     *\n     *\n     * @memberof LineLayer\n     */\n    elemType () {\n        return 'path';\n    }\n\n    /**\n     * Default configuration of line layer\n     * @return {Object} Default configuration of layer\n     */\n    static defaultConfig () {\n        return defaultConfig;\n    }\n\n    /**\n     *\n     *\n     * @static\n     * @param {*} conf\n     * @param {*} userConf\n     *\n     * @memberof LineLayer\n     */\n    static defaultPolicy (conf, userConf) {\n        const config = BaseLayer.defaultPolicy(conf, userConf);\n        const encoding = config.encoding;\n        const transform = config.transform;\n        const colorField = encoding.color && encoding.color.field;\n\n        if (colorField && !transform.groupBy) {\n            transform.groupBy = colorField;\n        }\n        return config;\n    }\n\n    /**\n     * Returns the draw method for line\n     * @return {Function} Draw method of line layer\n     */\n    getDrawFn () {\n        return drawLine;\n    }\n\n    static shouldDrawAnchors () {\n        return true;\n    }\n\n    /**\n     * Generates the x and y positions for each point\n     * @param {Array} data Data Array\n     * @param {Object} encoding Visual Encodings of the layer\n     * @param {Object} axes Contains the axis\n     * @param {number} seriesIndex index of series\n     * @return {Array} Array of points\n     */\n    translatePoints (data, encodingFieldsInf, axes) {\n        let points = [];\n        const xAxis = axes.x;\n        const yAxis = axes.y;\n        const colorAxis = axes.color;\n        const encoding = this.config().encoding;\n        const { xFieldType, yFieldType } = encodingFieldsInf;\n        const isXDim = xFieldType === FieldType.DIMENSION;\n        const isYDim = yFieldType === FieldType.DIMENSION;\n        const key = isXDim ? ENCODING.X : (isYDim ? ENCODING.Y : null);\n        const colorEncoding = encoding.color;\n        const colorField = colorEncoding.field;\n        const fieldsConfig = this.data().getFieldsConfig();\n        const colorFieldIndex = colorField && fieldsConfig[colorField].index;\n        const style = {};\n        const meta = {};\n\n        points = data.map((d, i) => {\n            const xPx = xAxis.getScaleValue(d.x) + xAxis.getUnitWidth() / 2;\n            const yPx = yAxis.getScaleValue(d.y) + yAxis.getUnitWidth() / 2;\n            const { color, rawColor } = getLayerColor({ datum: d, index: i }, {\n                colorEncoding, colorAxis, colorFieldIndex });\n\n            style.stroke = color;\n            style['fill-opacity'] = 0;\n            meta.stateColor = {};\n            meta.originalColor = rawColor;\n            meta.colorTransform = {};\n\n            const point = {\n                enter: {},\n                update: {\n                    x: d.x instanceof InvalidAwareTypes ? null : xPx,\n                    y: d.y instanceof InvalidAwareTypes ? null : yPx\n                },\n                style,\n                _data: d._data,\n                _id: d._id,\n                rowId: d._id,\n                source: d._data,\n                meta\n            };\n            point.className = getIndividualClassName(d, i, data, this);\n            this.cachePoint(d[key], point);\n            return point;\n        });\n        points = positionPoints(this, points);\n        return points;\n    }\n\n    /**\n     * Renders the line plot\n     * @param {SVGElement} container svg element\n     * @return {LineLayer} instance of line layer\n     */\n    render (container) {\n        let points;\n        let seriesClassName;\n        let style;\n\n        const config = this.config();\n        const {\n            encoding,\n            interpolate,\n            className,\n            defClassName,\n            transition\n        } = config;\n        const normalizedData = this._normalizedData;\n        const transformedData = this._transformedData;\n        const fieldsConfig = this.data().getFieldsConfig();\n        const axes = this.axes();\n        const keys = transformedData.map(d => d.key);\n        const qualifiedClassName = getQualifiedClassName(defClassName, this.id(), config.classPrefix);\n        const containerSelection = selectElement(container);\n        const colorField = encoding.color.field;\n        const colorFieldIndex = fieldsConfig[colorField] && fieldsConfig[colorField].index;\n\n        this._points = [];\n        this._pointMap = {};\n        containerSelection.classed(qualifiedClassName.join(' '), true);\n        containerSelection.classed(className, true);\n        makeElement(container, 'g', normalizedData, null, {\n            enter: (group) => {\n                animateGroup(group, {\n                    transition,\n                    groupAnimateStyle: {\n                        enter: {\n                            'stroke-opacity': 0,\n                            'fill-opacity': this.getPathStyle()['fill-opacity']\n                        },\n                        update: {\n                            'stroke-opacity': encoding.strokeOpacity.value\n                        }\n                    }\n                });\n            },\n            update: (group, dataArr, i) => {\n                points = this.translatePoints(dataArr, this.encodingFieldsInf(), axes, i);\n                this._points.push(points);\n                seriesClassName = `${qualifiedClassName[0]}-${keys[i] || i}`.toLowerCase();\n\n                let color;\n                const colorValFn = encoding.color.value;\n                const colorVal = points.find(d => d._data[colorFieldIndex] !== null &&\n                        d._data[colorFieldIndex] !== undefined);\n\n                if (colorValFn) {\n                    color = colorValFn(dataArr, i, normalizedData);\n                } else {\n                    color = axes.color.getColor(colorVal && colorVal._data[colorFieldIndex]);\n                }\n\n                style = this.getPathStyle(color);\n                this.getDrawFn()({\n                    layer: this,\n                    container: group.node(),\n                    interpolate,\n                    points,\n                    className: seriesClassName,\n                    transition,\n                    style: style || {},\n                    connectNullData: config.connectNullData\n                });\n            }\n        }, d => d[0]._data[colorFieldIndex] || d[0]._id);\n\n        attachDataToVoronoi(this._voronoi, this._points);\n        return this;\n    }\n\n    /**\n     * Get the css styles need to be applied on the line path\n     * @param {string} color Color value\n     * @return {Object} Path styles\n     */\n    getPathStyle (color) {\n        return {\n            stroke: color,\n            'fill-opacity': '0'\n        };\n    }\n\n    /**\n     * Gets the nearest point closest to the given position\n     * @param {number} x x position\n     * @param {number} y y position\n     * @return {Object} Nearest point information\n     */\n    getNearestPoint (x, y, config) {\n        let searchRadius = config.searchRadius;\n        const data = this.data();\n\n        if (!data || (data && data.isEmpty())) {\n            return null;\n        }\n\n        searchRadius = searchRadius !== undefined ? searchRadius : this.config().nearestPointThreshold;\n        const point = this._voronoi.find(x, y, searchRadius);\n        const dimensions = getObjProp(point, 'data', 'data', 'update');\n\n        if (point) {\n            const { _data, _id } = point.data.data;\n            const identifiers = this.getIdentifiersFromData(_data, _id);\n            return {\n                id: identifiers,\n                dimensions: [{\n                    x: dimensions.x,\n                    y: dimensions.y,\n                    width: 2,\n                    height: 2\n                }],\n                layerId: this.id()\n            };\n        }\n        return null;\n    }\n}\n","import {\n    easeFns,\n    selectElement,\n    pathInterpolators,\n    Symbols\n} from 'muze-utils';\n\nconst area = Symbols.area;\n/**\n * Draws a line from the points\n * Generates a svg path string\n * @param {Object} params Contains container, points and interpolate attribute.\n */\nconst /* istanbul ignore next */ drawArea = (params) => {\n    let filteredPoints;\n    const { layer, container, points, style, transition, className, connectNullData, interpolate } = params;\n\n    const { effect: easeEffect, duration } = transition;\n    const mount = selectElement(container);\n    const curveInterpolatorFn = pathInterpolators[interpolate];\n    const selection = mount.selectAll('path').data([params.points]);\n    const [enterAreaPath, updateAreaPath] = ['enter', 'update'].map(e => area().curve(curveInterpolatorFn)\n                    .x(d => d[e].x)\n                    .y1(d => d[e].y)\n                    .y0(d => d[e].y0)\n                    .defined(d => d[e].y !== null\n            ));\n\n    filteredPoints = points;\n    mount.attr('class', className);\n    if (connectNullData) {\n        filteredPoints = points.filter(d => d.update.y !== null);\n    }\n    const selectionEnter = selection.enter().append('path').attr('d', enterAreaPath(filteredPoints));\n    selection.merge(selectionEnter).transition().ease(easeFns[easeEffect])\n                    .duration(duration)\n                    .on('end', layer.registerAnimationDoneHook())\n                    .attr('d', updateAreaPath(filteredPoints))\n                    .each(function (d) {\n                        const element = selectElement(this);\n\n                        element.classed(d[0].className, true);\n                        Object.keys(style).forEach(key => element.style(key, style[key]));\n                    });\n};\n\nexport default drawArea;\n","import { FieldType, InvalidAwareTypes } from 'muze-utils';\nimport { defaultConfig } from './default-config';\nimport { LineLayer } from '../line';\nimport drawArea from './renderer';\nimport './styles.scss';\nimport { STACK, ENCODING } from '../../enums/constants';\nimport {\n    getAxesScales,\n    positionPoints,\n    getLayerColor,\n    getIndividualClassName,\n    getValidTransformForAggFn\n} from '../../helpers';\n\n/**\n * Area layer renders a closed path. The mark type of this layer is ```area```. This layer can be used\n * to create stacked or multi-series areas and vertical range area plots by using the encoding properties.\n *\n * To create this layer using layer configuration from canvas,\n * ```\n *      canvas.layers([{\n *          mark: 'area',\n *          transform: {\n *              type: 'stack' // Produces a stacked area.\n *          }\n *      }]);\n * ```\n *\n * @public\n *\n * @class\n * @module AreaLayer\n * @extends LineLayer\n */\nexport default class AreaLayer extends LineLayer {\n    /** oation of line layer\n     * @return {Object} Default configuration of layer\n     */\n    static defaultConfig () {\n        return defaultConfig;\n    }\n\n    /**\n     *\n     *\n     * @static\n     *\n     * @memberof AreaLayer\n     */\n    static formalName () {\n        return 'area';\n    }\n\n    /**\n     * Calculates the domain from data. It calls its parent class's method which is line layer\n     * to get the domain and overwrites the domain according to its need.\n     * @return {Array} Domain values\n     */\n    calculateDomainFromData (data, encodingFieldsInf, fieldsConfig) {\n        const domains = super.calculateDomainFromData(data, fieldsConfig);\n        [ENCODING.X, ENCODING.Y].forEach((type) => {\n            const { [`${type}FieldType`]: fieldType } = encodingFieldsInf;\n            if (fieldType === FieldType.MEASURE && domains[type] !== undefined) {\n                domains[type][0] = Math.min(domains[type][0], 0);\n            }\n        });\n        return domains;\n    }\n\n    /**\n     * Returns the drawing method of this layer\n     * @return {Function} Draw method\n     */\n    getDrawFn () {\n        return drawArea;\n    }\n\n    /**\n     * Generates the x and y positions for each point\n     * @param {Array} data Data Array\n     * @param {Object} encoding Visual Encodings of the layer\n     * @param {Object} axes Contains the axis\n     * @return {Array} Array of points\n     */\n    translatePoints (data, encodingFieldsInf, axes) {\n        let points = [];\n        const transformType = this.transformType();\n        const colorAxis = axes.color;\n        const config = this.config();\n        const encoding = config.encoding;\n        const colorEncoding = encoding.color;\n        const colorField = colorEncoding.field;\n        const fieldsConfig = this.data().getFieldsConfig();\n        const colorFieldIndex = colorField && fieldsConfig[colorField].index;\n        const { xField, yField, y0Field } = encodingFieldsInf;\n        const {\n            xAxis,\n            yAxis\n       } = getAxesScales(axes);\n        const classNameFn = config.individualClassName;\n        const isXDim = fieldsConfig[xField] && fieldsConfig[xField].def.type === FieldType.DIMENSION;\n        const isYDim = fieldsConfig[yField] && fieldsConfig[yField].def.type === FieldType.DIMENSION;\n        const key = isXDim ? 'x' : (isYDim ? 'y' : null);\n        points = data.map((d, i) => {\n            const xPx = xAxis.getScaleValue(d.x) + xAxis.getUnitWidth() / 2;\n            const yPx = yAxis.getScaleValue(d.y);\n            const y0Px = (y0Field || transformType === STACK) ? yAxis.getScaleValue(d.y0) : yAxis.getScaleValue(0);\n            const { color, rawColor } = getLayerColor({ datum: d, index: i }, {\n                colorEncoding, colorAxis, colorFieldIndex });\n            const style = {};\n            const meta = {};\n            style.fill = color;\n            // style['fill-opacity'] = 0;\n            meta.stateColor = {};\n            meta.originalColor = rawColor;\n            meta.colorTransform = {};\n            const invalidY = d.y instanceof InvalidAwareTypes;\n            const invalidY0 = d.y0 instanceof InvalidAwareTypes;\n            const point = {\n                enter: {\n                    x: xPx,\n                    y: invalidY ? null : yAxis.getScaleValue(0),\n                    y0: invalidY0 ? null : yAxis.getScaleValue(0)\n                },\n                update: {\n                    x: xPx,\n                    y: invalidY ? null : yPx,\n                    y0: invalidY0 ? null : y0Px\n                },\n                _id: d._id,\n                _data: d._data,\n                source: d._data,\n                rowId: d._id,\n                className: classNameFn ? classNameFn(d, i, data, this) : '',\n                style,\n                meta\n            };\n            point.className = getIndividualClassName(d, i, data, this);\n            this.cachePoint(d[key], point);\n            return point;\n        });\n        points = positionPoints(this, points);\n        return points;\n    }\n\n    resolveTransformType () {\n        this._transformType = getValidTransformForAggFn(this);\n    }\n\n    /**\n     * Get the css styles need to be applied on the line path\n     * @param {string} color Color value\n     * @return {Object} Path styles\n     */\n    getPathStyle (color) {\n        return {\n            fill: color\n        };\n    }\n}\n\n","import { CLASSPREFIX } from '../../enums/constants';\n\nexport const defaultConfig = {\n    classPrefix: CLASSPREFIX,\n    defClassName: 'layer-arc',\n    padding: { top: 1, bottom: 1, left: 1, right: 1 },\n    className: '',\n    minOuterRadius: 10,\n    interaction: {\n        highlight: [{\n            type: 'fill',\n            intensity: [0, 0, -15, 0]\n        }],\n        fade: [{\n            type: 'fill',\n            intensity: [0, 0, +15, 0]\n        }],\n        focus: [{\n            type: 'fill',\n            intensity: [0, 0, +15, 0]\n        }]\n    },\n    height: 100,\n    width: 100,\n    sort: '',\n    cornerRadius: 0,\n    padAngle: 0,\n    padRadius: 0,\n    startAngle: 0,\n    endAngle: 360,\n    colors: ['#F44336', 'blue', 'green', 'yellow', 'orange', 'purple'],\n    transform: {\n        type: 'identity'\n    },\n    encoding: {\n        'stroke-width': {\n            value: '2px'\n        },\n        'stroke-linejoin': {\n            value: 'round'\n        },\n        angle: {\n            value: '1'\n        },\n        radius: {\n            value: '1'\n        },\n        opacity: {\n            value: '1'\n        },\n        color: {\n            value: '1'\n        },\n        shape: {\n            value: '1'\n        },\n        size: {\n            value: '1'\n        }\n    },\n    innerRadiusFixer: 10,\n    transition: {\n        effect: 'cubic',\n        duration: 500\n    },\n    states: {\n        highlight: {\n            className: `${CLASSPREFIX}-layer-arc-highlight`\n        },\n        fadeout: {\n            className: `${CLASSPREFIX}-layer-arc-fadeout`\n        },\n        selected: {\n            className: `${CLASSPREFIX}-layer-arc-selected`\n        }\n    }\n};\n\n","import {\n    makeElement,\n    selectElement,\n    getQualifiedClassName,\n    isSimpleObject,\n    getDomainFromData,\n    Symbols,\n    FieldType,\n    ReservedFields,\n    STATE_NAMESPACES\n} from 'muze-utils';\nimport { defaultConfig } from './default-config';\nimport { BaseLayer } from '../../base-layer';\nimport { ASCENDING, OUTER_RADIUS_VALUE } from '../../enums/constants';\nimport { getIndividualClassName } from '../../helpers';\nimport { getRangeValue, getRadiusRange, tweenPie, tweenExitPie, getFieldIndices, getPreviousPoint } from './arc-helper';\nimport './styles.scss';\n\nconst pie = Symbols.pie;\nconst arc = Symbols.arc;\n\n/**\n * Arc Layer creates a plot with polar coordinates.\n *\n * @public\n *\n * @class\n * @module ArcLayer\n * @extends BaseLayer\n */\nexport default class ArcLayer extends BaseLayer {\n\n    constructor (data, axes, config, dependencies) {\n        super(data, axes, config, dependencies);\n        this._prevPieData = {};\n    }\n\n    /**\n     * returns the default configuration of the layer\n     *\n     * @static\n     * @return {Object} Default configuration for arc layer\n     * @memberof ArcLayer\n     */\n    static defaultConfig () {\n        return defaultConfig;\n    }\n\n    /**\n     *\n     *\n     * @static\n     *\n     * @memberof ArcLayer\n     */\n    static formalName () {\n        return 'arc';\n    }\n\n    /**\n     *\n     *\n     *\n     * @memberof ArcLayer\n     */\n    elemType () {\n        return 'path';\n    }\n\n    /**\n     * Transforms data in the appropriate data structure to be consumed by the layer for rendering\n     *\n     * @param {Object} data data model associated with the layer\n     * @param {Object} config configuration of the layer that contains encoding and other parameters\n     * @return {Object} Transformed pie data\n     * @memberof ArcLayer\n     */\n    getTransformedData (dataModel, config) {\n        let pieData = [];\n        const pieIndex = {};\n        const {\n            startAngle,\n            endAngle,\n            encoding,\n            sort,\n            minOuterRadius\n        } = config;\n        const prevData = this._transformedData || [];\n        const fieldsConfig = this.data().getFieldsConfig();\n        const {\n            angleIndex,\n            sizeIndex,\n            radiusIndex,\n            colorIndex\n        } = getFieldIndices(encoding, fieldsConfig);\n        const dataVal = dataModel.getData();\n        const data = dataVal.data;\n        const uids = dataVal.uids;\n\n        this._prevPieData = {};\n\n        prevData.forEach((e, index) => {\n            this._prevPieData[e.uid] = [e, index];\n            pieIndex[e.index] = e;\n        });\n        // Creating pie data using angle field provided. If the angle field is a dimension,\n        // all the angles will be equal(360/number of dimensions)\n\n        pieData = pie()\n            .startAngle((startAngle / 180) * Math.PI)\n            .endAngle(Math.PI * endAngle / 180)\n            .value(d => d[angleIndex] || 1)\n            .sortValues(null);\n\n        sort.length && radiusIndex && pieData.sort((a, b) => {\n            if (sort === ASCENDING) {\n                return a[radiusIndex] - b[radiusIndex];\n            } return b[radiusIndex] - a[radiusIndex];\n        });\n        const sizeVal = data.reduce((acc, d) => acc + (d[sizeIndex] || 0), 1);\n\n        // Adding the radius field values to each data point in pie data\n        pieData = pieData(data).map((d, i) => {\n            d.outerRadiusValue = data[i][radiusIndex] || minOuterRadius;\n            d.innerRadius = config.innerRadius;\n            d.colorVal = data[i][colorIndex];\n            d.angleVal = data[i][angleIndex];\n            d.sizeVal = sizeVal;\n            d.uid = uids[i];\n            d.rowId = d.uid;\n            d.source = data[i];\n            d._previousInfo = this._prevPieData[d.uid] ? this._prevPieData[d.uid][0] :\n                getPreviousPoint(pieIndex, d.index, config);\n            return d;\n        });\n        return pieData;\n    }\n\n    /**\n     * Returns normalized data after transformation (it is the same in the case of pie layer)\n     *\n     * @param {Object} data transformed data\n     * @return {Object} normalized data\n     * @memberof ArcLayer\n     */\n    getNormalizedData (data) {\n        return data;\n    }\n\n    /**\n     *\n     *\n     * @param {Object} data\n     * @return {}\n     * @memberof ArcLayer\n     */\n    calculateDomainFromData (data) {\n        const domainKey = OUTER_RADIUS_VALUE;\n        return {\n            radius: getDomainFromData([data], [domainKey, domainKey])\n        };\n    }\n\n    /**\n     *\n     *\n     * @param {Object} x\n     * @param {Object} y\n     * @return {}\n     * @memberof ArcLayer\n     */\n    getNearestPoint (x, y, config = {}) {\n        const dataPoint = selectElement(config.event.target).data()[0];\n        if (isSimpleObject(dataPoint)) {\n            const { data, uid } = dataPoint.datum;\n            return {\n                id: this.getIdentifiersFromData(data, uid),\n                layerId: this.id()\n            };\n        }\n        return null;\n    }\n\n    /**\n     *\n     *\n     * @param {*} set\n     *\n     * @memberof ArcLayer\n     */\n    getPlotElementsFromSet (set) {\n        return selectElement(this.mount()).selectAll(this.elemType()).filter(d => set.indexOf(d.datum.uid) !== -1);\n    }\n\n    /**\n     *\n     *\n     * @param {Object} container\n     * @return {}\n     * @memberof ArcLayer\n     */\n    render (container) {\n        const {\n            height,\n            width\n        } = this.measurement();\n        const {\n            classPrefix,\n            defClassName,\n            minOuterRadius,\n            innerRadius,\n            outerRadius,\n            cornerRadius,\n            padAngle,\n            padRadius,\n            padding,\n            transition,\n            innerRadiusFixer\n       } = this.config();\n        const sizeAxis = this.axes().size;\n        const transformedData = this._transformedData;\n        const chartHeight = height - padding.top - padding.bottom;\n        const chartWidth = width - padding.left - padding.right;\n        const qualClassName = getQualifiedClassName(defClassName, this.id(), classPrefix);\n        // Sets range for radius\n        const range = getRadiusRange(chartWidth, chartHeight, {\n            minOuterRadius,\n            innerRadius,\n            outerRadius,\n            innerRadiusFixer\n        });\n        const colorAxis = this.axes().color;\n        const defaultRadius = outerRadius || Math.min(chartHeight, chartWidth) / 2;\n        const radiusDomain = this.domain().radius;\n        const rangeValueGetter = d => getRangeValue(d, range, radiusDomain, defaultRadius, sizeAxis);\n        // This returns a function that generates the arc path based on the datum provided\n        const path = arc()\n                // .outerRadius(d => rangeValueGetter(d))\n                .innerRadius(innerRadius ? Math.min(chartHeight / 2, chartWidth / 2, innerRadius) : 0)\n                .cornerRadius(cornerRadius)\n                .padAngle(padAngle)\n                .padRadius(padRadius);\n        this._chartWidth = chartWidth;\n        this._chartHeight = chartHeight;\n        // Creating the group that holds all the arcs\n        const g = makeElement(selectElement(container), 'g', [1], `${qualClassName[0]}-group`)\n                .classed(`${qualClassName[1]}-group`, true)\n                .attr('transform', `translate(${chartWidth / 2},${chartHeight / 2})`);\n        const tween = (elem) => {\n            makeElement(elem, 'path', (d, i) => [{\n                datum: d,\n                index: i,\n                arcFn: path,\n                meta: {\n                    originalColor: colorAxis.getRawColor(d.colorVal),\n                    stateColor: {},\n                    colorTransform: {}\n                }\n            }], `${qualClassName[0]}-path`)\n                            .style('fill', d => colorAxis.getColor(d.datum.colorVal))\n                            .transition()\n                            .duration(transition.duration)\n                            .on('end', this.registerAnimationDoneHook())\n                            .attrTween('d', (...params) => tweenPie(path, rangeValueGetter, params))\n                            .attr('class', (d, i) => {\n                                const individualClass = getIndividualClassName(d, i, transformedData, this);\n                                return `${qualClassName[0]}-path ${qualClassName[1]}-path-${d.index}\n                                    ${individualClass}`;\n                            });\n        };\n        const consecutiveExits = [];\n        let exitCounter = 0;\n        const tweenExit = (elem, d) => {\n            let exitArr = consecutiveExits[exitCounter];\n            const oldExitCounter = exitCounter;\n            if (!exitArr) {\n                exitArr = [{ elem, datum: d }];\n            } else if (exitArr[exitArr.length - 1].datum.index === d.index - 1) {\n                exitArr.push({ elem, datum: d });\n            } else {\n                exitCounter++;\n            }\n            consecutiveExits[oldExitCounter] = exitArr;\n        };\n        // Creating groups for all the arcs present individually\n        makeElement(g, 'g', transformedData, `${qualClassName[0]}`,\n            {\n                update: tween,\n                exit: tweenExit\n            })\n                        .attr('class', (d, i) => `${qualClassName[0]} ${qualClassName[1]}-${i}`);\n        tweenExitPie(consecutiveExits, transition, rangeValueGetter, path);\n        return this;\n    }\n\n    /**\n     *\n     *\n     * @param {*} identifiers\n     *\n     * @memberof BaseLayer\n     */\n    getPointsFromIdentifiers (identifiers) {\n        if (!this.data()) {\n            return [];\n        }\n        const fieldNames = identifiers[0];\n        const values = identifiers.slice(1, identifiers.length);\n        const pieSlices = selectElement(this.mount()).selectAll('path').data();\n        const fieldsConfig = this.data().getFieldsConfig();\n\n        const filteredPies = pieSlices.filter((tData) => {\n            const data = tData.datum.data;\n            const uid = tData.datum.uid;\n            return fieldNames.every((field, idx) => {\n                if (field in fieldsConfig && fieldsConfig[field].def.type === FieldType.DIMENSION) {\n                    return values.findIndex(d => d[idx] === data[fieldsConfig[field].index]) !== -1;\n                } else if (field === ReservedFields.ROW_ID) {\n                    return values.findIndex(d => d[idx] === uid) !== -1;\n                } return true;\n            });\n        });\n\n        const pieSliceInf = filteredPies[0];\n        if (pieSliceInf) {\n            const centroid = pieSliceInf.arcFn.centroid(pieSliceInf.datum);\n            return [{\n                x: centroid[0] + this._chartWidth / 2,\n                y: centroid[1] + this._chartHeight / 2,\n                width: 2,\n                height: 2\n            }];\n        }\n        return [];\n    }\n\n    getRenderProps () {\n        return [`${STATE_NAMESPACES.GROUP_GLOBAL_NAMESPACE}.domain.radius`];\n    }\n}\n","import { getObjProp, interpolator, FieldType, selectElement } from 'muze-utils';\nimport { ANGLE, RADIUS, SIZE, COLOR } from '../../enums/constants';\n\n/**\n * Returns the range value from a value inside the domain\n *\n * @param {Object} domainValue Value whose range has to be returned\n * @return {number} range value\n * @memberof ArcLayer\n */\nexport const getRangeValue = (datum, range, domain, defaultRadius, sizeAxis) => {\n    let domainMultiplier = 1;\n    const {\n        outerRadiusValue,\n        sizeVal\n    } = datum;\n    const sizeAxisDomain = sizeAxis.domain();\n    const sizeMultiplier = sizeAxis.getSize(sizeVal) / (sizeAxisDomain ? sizeAxis.range()[1] : sizeAxis.config().value);\n\n    domainMultiplier *= (range[1] - range[0]) / (domain[1] - domain[0]);\n    const rangeVal = (range[0] + (outerRadiusValue - domain[0]) * domainMultiplier);\n    return (rangeVal || defaultRadius) * sizeMultiplier;\n};\n\n/**\n *\n *\n * @memberof ArcLayer\n */\nexport const getRadiusRange = (width, height, config) => {\n    const {\n        minOuterRadius,\n        innerRadius,\n        outerRadius,\n        innerRadiusFixer\n    } = config;\n\n    return [Math.max((innerRadius + innerRadiusFixer || 0), minOuterRadius), outerRadius || Math.min(height,\n        width) / 2];\n};\nexport const getPreviousPoint = (prevData, currIndex, config) => {\n    const prevArc = prevData[currIndex - 1];\n    const nextArc = prevData[currIndex];\n\n    if (prevArc && nextArc) {\n        return {\n            startAngle: prevArc.endAngle,\n            endAngle: nextArc.startAngle\n        };\n    } else if (!nextArc) {\n        return {\n            startAngle: config.endAngle * Math.PI * 2 / 360,\n            endAngle: config.endAngle * Math.PI * 2 / 360\n        };\n    }\n    return {\n        startAngle: config.startAngle * Math.PI * 2 / 360,\n        endAngle: config.startAngle * Math.PI * 2 / 360\n    };\n};\n\n/**\n *\n *\n * @param {*} path\n * @param {*} b\n *\n * @memberof ArcLayer\n */\nexport const tweenPie = (path, rangeValueGetter, b) => {\n    const { datum } = b[0];\n    const outerRadius = rangeValueGetter(datum);\n    datum.outerRadius = outerRadius;\n    datum._previousInfo.outerRadius = datum._previousInfo.outerRadius || outerRadius;\n    return function (t) {\n        return path(interpolator()(datum._previousInfo, datum)(t));\n    };\n};\n\n/**\n *\n *\n * @param {*} path\n * @param {*} b\n *\n * @memberof ArcLayer\n */\nexport const tweenExitPie = (consecutiveExits, transition, rangeValueGetter, path) => {\n    if (consecutiveExits.length > 0) {\n        consecutiveExits.forEach((consecutiveExitArr) => {\n            const startAngle = consecutiveExitArr[0].datum.startAngle;\n            const endAngle = consecutiveExitArr[consecutiveExitArr.length - 1].datum.endAngle;\n            const mid = (Math.PI * 2 * startAngle) / ((Math.PI * 2) + startAngle - endAngle);\n\n            consecutiveExitArr.forEach((e) => {\n                const { elem, datum } = e;\n\n                elem.each(function () {\n                    const gElem = selectElement(this);\n                    gElem.selectAll('path')\n                                    .transition()\n                                    .duration(transition.duration)\n                                    .attrTween('d', () => function (t) {\n                                        const outerRadius = rangeValueGetter(datum);\n                                        datum.outerRadius = outerRadius;\n                                        return path(interpolator()(datum, {\n                                            startAngle: mid,\n                                            endAngle: mid,\n                                            outerRadius\n                                        })(t));\n                                    })\n                                    .remove();\n                    gElem.remove();\n                });\n            });\n        });\n    }\n};\n\nexport const getFieldIndices = (encoding, fieldsConfig) => {\n    const [angleField, radiusField, colorField, sizeField] = [ANGLE, RADIUS, COLOR, SIZE]\n            .map(e => encoding[e].field);\n    const [angleIndex, sizeIndex, radiusIndex] = [angleField, sizeField, radiusField]\n        .map((e) => {\n            const conf = fieldsConfig[e];\n            if (conf && conf.def.type === FieldType.MEASURE) {\n                return conf.index;\n            }\n            return null;\n        });\n    const colorIndex = getObjProp(fieldsConfig, colorField, 'index');\n    return {\n        angleIndex,\n        sizeIndex,\n        radiusIndex,\n        colorIndex\n    };\n};\n","import {\n    setAttrs,\n    setStyles,\n    selectElement,\n    makeElement,\n    getSmartComputedStyle\n} from 'muze-utils';\n\n/**\n * Draws svg text in the specified container.\n * @param {SVGElement} container Container where labels will be appended.\n * @param {Array.<Object>} data Data of the elements.\n * @return {Selection} d3 selection of the elements.\n */\nconst drawText = (container, data, config, smartLabel) => {\n    const selection = selectElement(container).selectAll('g').data(data);\n\n    const selectionMerge = selection.enter().append('g')\n        .each(function (dataObj) {\n            setAttrs(this, dataObj.enter);\n        })\n        .merge(selection);\n    const style = getSmartComputedStyle(selectElement(container), config.className);\n    const fontSize = parseInt(style.fontSize, 10);\n\n    smartLabel.setStyle(style);\n    selectionMerge.each(function (dataObj) {\n        const element = selectElement(this);\n        const { update, text, color, textanchor, style: textStyle } = dataObj;\n        const background = dataObj.background;\n        let backgroundVal;\n        if (backgroundVal = background.value) {\n            const backgroundPadding = background.padding;\n            let diff;\n            const { width, height } = smartLabel.getOriSize(dataObj.text);\n            const backgroundEl = makeElement(element, 'rect', [1]);\n\n            if (textanchor === 'end') {\n                diff = width;\n            } else if (textanchor === 'start') {\n                diff = 0;\n            } else {\n                diff = width / 2;\n            }\n\n            setAttrs(backgroundEl.node(), {\n                x: update.x - diff - backgroundPadding / 2,\n                y: update.y - fontSize - backgroundPadding / 2,\n                width: width + backgroundPadding,\n                height: height + backgroundPadding\n            });\n            background && setStyles(backgroundEl, {\n                background: backgroundVal\n            });\n        }\n        const textEl = makeElement(element, 'text', d => [d]).text(text);\n        const textNode = textEl.node();\n        textStyle && setStyles(textNode, textStyle);\n        color && setStyles(textNode, {\n            fill: color\n        });\n        dataObj.className && textEl.classed(dataObj.className, true);\n        setAttrs(textNode, update);\n        textEl.attr('text-anchor', textanchor);\n    });\n    selection.exit().remove();\n    return selection;\n};\n\nexport default drawText;\n","import { CLASSPREFIX } from '../../enums/constants';\n\nexport const defaultConfig = {\n    defClassName: 'layer-text',\n    classPrefix: CLASSPREFIX,\n    className: '',\n    transform: {\n        type: 'identity'\n    },\n    interaction: {\n        highlight: [{\n            type: 'fill',\n            intensity: [0, 0, -15, 0]\n        }],\n        fade: [{\n            type: 'fill',\n            intensity: [0, 0, +15, 0]\n        }],\n        focus: [{\n            type: 'fill',\n            intensity: [0, 0, +15, 0]\n        }]\n    },\n    transition: {\n        effect: 'cubic',\n        duration: 1000\n    },\n    encoding: {\n        color: {},\n        text: {\n            value: '',\n            formatter: (val, i, data, context) => {\n                const valueParser = context.valueParser();\n                return valueParser(val);\n            },\n            background: {\n                padding: 10\n            }\n        }\n    },\n    states: {\n        highlight: {\n            className: `${CLASSPREFIX}-layer-text-highlight`\n        },\n        fadeout: {\n            className: `${CLASSPREFIX}-layer-text-fadeout`\n        },\n        selected: {\n            className: `${CLASSPREFIX}-layer-text-selected`\n        }\n    }\n};\n","import {\n    getQualifiedClassName,\n    selectElement,\n    setStyles,\n    createElements\n} from 'muze-utils';\nimport { BaseLayer } from '../../base-layer';\nimport drawText from './renderer';\nimport { defaultConfig } from './default-config';\nimport { getLayerColor, positionPoints, getIndividualClassName } from '../../helpers';\nimport { TEXT_ANCHOR_MIDDLE, ENCODING } from '../../enums/constants';\n\nimport './styles.scss';\n\n/**\n * This layer is used to create labels for each data point. It has an encoding property ```text```\n * which determines from which field's data the value of the label will be taken. The text encoding\n * property is necessary for the layer to render the text.The mark type of this layer is ```text```.\n *\n * @public\n *\n * @class\n * @module TextLayer\n * @extends BaseLayer\n */\nexport default class TextLayer extends BaseLayer {\n    /**\n     * Returns the default configuration of the text layer\n     * @return {Object} Default configuration of the text layer\n     */\n    static defaultConfig () {\n        return defaultConfig;\n    }\n\n    static formalName () {\n        return 'text';\n    }\n\n    elemType () {\n        return 'text';\n    }\n\n    /**\n     * Generates an array of objects containing x, y, width and height of the points from the data\n     * @param  {Array.<Array>} data Data Array\n     * @param  {Object} encoding  Config\n     * @param  {Object} axes     Axes object\n     * @return {Array.<Object>}  Array of points\n     */\n    translatePoints (data, encoding, axes) {\n        let points = [];\n        const colorAxis = axes.color;\n        const textEncoding = encoding.text;\n        const { field: textField, value, formatter: textFormatter } = textEncoding;\n        const colorEncoding = encoding.color;\n        const colorField = colorEncoding && colorEncoding.field;\n        const fieldsConfig = this.data().getFieldsConfig();\n\n        const backgroundEncoding = encoding.text.background;\n        const backgroundPadding = backgroundEncoding.padding;\n        const backgroundValue = backgroundEncoding.value;\n        const colorFieldIndex = fieldsConfig[colorField] ? fieldsConfig[colorField].index : -1;\n        const textFieldIndex = textField ? fieldsConfig[textField] && fieldsConfig[textField].index : -1;\n        const xEnc = ENCODING.X;\n        const yEnc = ENCODING.Y;\n        for (let i = 0, len = data.length; i < len; i++) {\n            const d = data[i];\n            const row = d._data;\n            const textValue = textField ? row[textFieldIndex] : value;\n\n            const [xPx, yPx] = [xEnc, yEnc].map(type => (axes[type] ? axes[type].getScaleValue(d[type]) +\n                    axes[type].getUnitWidth() / 2 : 0));\n\n            const { color, rawColor } = getLayerColor({ datum: d, index: i },\n                { colorEncoding, colorAxis, colorFieldIndex });\n\n            const point = {\n                enter: {},\n                update: {\n                    x: xPx,\n                    y: yPx\n                },\n                text: textFormatter(textValue, i, data, this),\n                color,\n                background: {\n                    value: backgroundValue instanceof Function ? backgroundValue(d, i, data, this) : null,\n                    padding: backgroundPadding\n                },\n                meta: {\n                    stateColor: {},\n                    originalColor: rawColor,\n                    colorTransform: {}\n                },\n                style: {},\n                _data: row,\n                _id: d._id,\n                source: d._data,\n                rowId: d._id\n            };\n\n            point.className = getIndividualClassName(d, i, data, this);\n            points.push(point);\n        }\n\n        points = positionPoints(this, points);\n        points = points.filter((d) => {\n            const update = d.update;\n            return !isNaN(update.x) && !isNaN(update.y);\n        });\n        return points;\n    }\n\n    /**\n     * Renders the plot in the given container\n     * @param  {SVGElement} container SVGElement which will hold the plot\n     * @return {textLayer} Instance of text layer\n     */\n    render (container) {\n        let points;\n        const config = this.config();\n        const encoding = config.encoding;\n        const normalizedData = this._normalizedData;\n        const className = config.className;\n        const qualifiedClassName = getQualifiedClassName(config.defClassName, this.id(), config.classPrefix);\n        const axes = this.axes();\n        const containerSelection = selectElement(container);\n\n        containerSelection.classed(`${qualifiedClassName.join(' ')} ${className}`, true);\n        createElements({\n            data: normalizedData,\n            append: 'g',\n            selector: 'g',\n            container,\n            each: (dataArr, group, i) => {\n                const node = group.node();\n                points = this.translatePoints(dataArr, encoding, axes, i);\n                setStyles(node, {\n                    'text-anchor': TEXT_ANCHOR_MIDDLE\n                });\n                drawText(node, points, {\n                    className: qualifiedClassName[0]\n                }, this._dependencies.smartLabel);\n            }\n        });\n        return this;\n    }\n}\n","/* global Element, document  */\nimport {\n    makeElement,\n    selectElement,\n    easeFns,\n    objectIterator,\n    getSymbol\n} from 'muze-utils';\n\n/**\n *\n *\n * @param {*} str\n *\n */\nconst checkPath = (str) => {\n    if (/^[mzlhvcsqta]\\s*[-+.0-9][^mlhvzcsqta]+/i.test(str) && /[\\dz]$/i.test(str) && str.length > 4) {\n        return true;\n    }\n    return false;\n};\n\n/**\n *\n *\n * @param {*} d\n * @param {*} elem\n */\nconst createShape = function (d, groupElement) {\n    const { shape, size, update } = d;\n\n    if (shape instanceof Promise) {\n        shape.then((res) => {\n            d.shape = res;\n            createShape(d, groupElement);\n        });\n    } else if (shape instanceof Element) {\n        let newShape = shape.cloneNode(true);\n\n        if (newShape.nodeName.toLowerCase() === 'img') {\n            const src = newShape.src || newShape.href;\n            newShape = document.createElementNS('http://www.w3.org/2000/svg', 'image');\n            newShape.setAttribute('href', src);\n        }\n        const shapeElement = selectElement(newShape);\n        if (newShape.nodeName === 'path' || newShape.nodeName === 'image') {\n            shapeElement.attr('transform', `scale(${size / 100})`);\n        } else {\n            shapeElement.attr('height', size);\n            shapeElement.attr('width', size);\n        }\n        shapeElement.attr('x', -size / 2);\n        shapeElement.attr('y', -size / 2);\n        makeElement(groupElement, () => newShape, [1]);\n    } else if (typeof shape === 'string') {\n        let pathStr;\n        if (checkPath(shape)) {\n            pathStr = shape;\n        } else {\n            pathStr = getSymbol(shape).size(size)(update);\n        }\n        makeElement(groupElement, 'path', data => [data]).attr('d', pathStr);\n    } else {\n        d.shape = 'circle';\n        createShape(d, groupElement);\n    }\n};\n\n/**\n * Draws symbols using d3 symbol api\n * @param {Object} params Contains the svg container, points and other symbol related attributes.\n */\n/* istanbul ignore next */ const drawSymbols = (params) => {\n    const { layer, container, points, transition, className } = params;\n    const { duration, effect, disabled } = transition;\n    const mount = selectElement(container);\n\n    mount.attr('class', className);\n    return makeElement(mount, 'g', points, null, {\n        enter: (group, d) => {\n            const { enter } = d;\n            group.attr('transform', `translate(${enter.x},${enter.y})`);\n        },\n        update: (group, d) => {\n            createShape(d, group);\n            const { update, style } = d;\n            objectIterator(style, key => group.style(key, style[key]));\n            group.attr('class', className);\n            group.classed(d.className, true);\n            if (!disabled) {\n                group = group.transition()\n                    .duration(transition.duration)\n                    .on('end', layer.registerAnimationDoneHook());\n            }\n            group.attr('transform', `translate(${update.x},${update.y})`);\n        },\n        exit: (exitGroup) => {\n            if (!disabled) {\n                exitGroup.transition().ease(easeFns[effect])\n                .duration(duration)\n                .on('end', () => exitGroup.remove())\n                .style('fill-opacity', 0)\n                .style('stroke-opacity', 0);\n            } else {\n                exitGroup.remove();\n            }\n        }\n    }, params.keyFn);\n};\n\nexport default drawSymbols;\n","import { CLASSPREFIX } from '../../enums/constants';\n\nexport const defaultConfig = {\n    defClassName: 'layer-point',\n    className: '',\n    classPrefix: CLASSPREFIX,\n    defColorStyle: 'stroke',\n    interaction: {\n        highlight: [{\n            type: 'fill',\n            intensity: [0, 0, -20, 0]\n        }],\n        fade: [{\n            type: 'fill',\n            intensity: [0, 0, +20, 0]\n        }],\n        focus: [{\n            type: 'fill',\n            intensity: [0, 0, +20, 0]\n        }\n        ]\n    },\n    innerPadding: 0.1,\n    nearestPointThreshold: 10,\n    transform: {\n        type: 'identity'\n    },\n    transition: {\n        effect: 'cubic',\n        duration: 1000\n    },\n    encoding: {\n        size: {\n            value: 30\n        },\n        color: { },\n        shape: {\n            value: 'circle'\n        },\n        x: {},\n        y: {},\n        strokeOpacity: {\n            value: 0.5\n        },\n        fillOpacity: {\n            value: 0.5\n        }\n    },\n    shapes: ['circle', 'cross', 'diamond', 'square', 'star', 'wye', 'triangle'],\n    sizes: [20, 30, 40, 50, 60, 70]\n};\n","import {\n    Voronoi,\n    selectElement,\n    getQualifiedClassName,\n    makeElement,\n    FieldType,\n    Scales\n} from 'muze-utils';\nimport { BaseLayer } from '../../base-layer';\nimport drawSymbols from './renderer';\nimport { defaultConfig } from './default-config';\nimport { ENCODING } from '../../enums/constants';\nimport {\n    attachDataToVoronoi,\n    getLayerColor,\n    positionPoints,\n    getPlotMeasurement,\n    getIndividualClassName,\n    getMarkId\n} from '../../helpers';\n\nimport './styles.scss';\n\n/**\n * This layer is used to create various symbols for each data point. This is commonly used in\n * scatterplot visualizations. The mark type of this layer is ```point```.\n *\n * @public\n *\n * @class\n * @module PointLayer\n * @extends BaseLayer\n */\nexport default class PointLayer extends BaseLayer {\n\n    /**\n     * Creates an instance of PointLayer.\n     * @param {*} args\n     * @memberof PointLayer\n     */\n    constructor (...args) {\n        super(...args);\n        this._voronoi = new Voronoi();\n        this._bandScale = Scales.band();\n    }\n\n    /**\n     *\n     *\n     *\n     * @memberof PointLayer\n     */\n    elemType () {\n        return 'g';\n    }\n\n    /**\n     * Returns the default configuration of the point layer\n     * @return {Object} Default configuration of the point layer\n     */\n    static defaultConfig () {\n        return defaultConfig;\n    }\n\n    static defaultPolicy (conf, userConf) {\n        const config = BaseLayer.defaultPolicy(conf, userConf);\n        const encoding = config.encoding;\n        const transform = config.transform;\n        const colorField = encoding.color && encoding.color.field;\n\n        if (colorField) {\n            transform.groupBy = colorField;\n        }\n        return config;\n    }\n\n    /**\n     *\n     *\n     * @static\n     *\n     * @memberof PointLayer\n     */\n    static formalName () {\n        return 'point';\n    }\n\n    /**\n     *\n     *\n     * @static\n     *\n     * @memberof PointLayer\n     */\n    static drawFn () {\n        return drawSymbols;\n    }\n\n    /**\n     * Generates an array of objects containing x, y, width and height of the points from the data\n     * @param  {Array.<Array>} data Data Array\n     * @param  {Object} encoding  Config\n     * @param  {Object} axes     Axes object\n     * @return {Array.<Object>}  Array of points\n     */\n    translatePoints (data, encoding, axes, config = {}) {\n        let points = [];\n        const {\n            size: sizeEncoding,\n            shape: shapeEncoding,\n            color: colorEncoding,\n            x,\n            y\n        } = encoding;\n        const sizeField = sizeEncoding.field;\n        const sizeValue = sizeEncoding.value;\n        const shapeField = shapeEncoding.field;\n        const xField = x.field;\n        const yField = y.field;\n        const { size: sizeAxis, shape: shapeAxis } = axes;\n        const fieldsConfig = this.data().getFieldsConfig();\n        const isXDim = fieldsConfig[xField] && fieldsConfig[xField].def.type === FieldType.DIMENSION;\n        const isYDim = fieldsConfig[yField] && fieldsConfig[yField].def.type === FieldType.DIMENSION;\n        const key = isXDim ? ENCODING.X : (isYDim ? ENCODING.Y : null);\n        const colorField = colorEncoding && colorEncoding.field;\n        const colorFieldIndex = fieldsConfig[colorField] && fieldsConfig[colorField].index;\n        const measurement = this.measurement();\n        const shapeFieldIndex = fieldsConfig[shapeField] && fieldsConfig[shapeField].index;\n        const sizeFieldIndex = fieldsConfig[sizeField] && fieldsConfig[sizeField].index;\n        const colorAxis = axes.color;\n        const { x: offsetX, y: offsetY } = config.offset;\n\n        for (let i = 0, len = data.length; i < len; i++) {\n            const d = data[i];\n            const row = d._data;\n            const size = sizeValue instanceof Function ? sizeValue(d, i) : sizeAxis.getSize(row[sizeFieldIndex]);\n            const shape = shapeAxis.getShape(row[shapeFieldIndex]);\n\n            let [xPx, yPx] = [ENCODING.X, ENCODING.Y].map((type) => {\n                const value = d[type] === null ? undefined : d[type];\n                const measure = type === ENCODING.X ? measurement.width : measurement.height;\n                return !encoding[type].field ? measure / 2 : axes[type].getScaleValue(value);\n            });\n\n            xPx += offsetX;\n            yPx += offsetY;\n\n            const { color, rawColor } = getLayerColor({ datum: d, index: i },\n                { colorEncoding, colorAxis, colorFieldIndex });\n\n            const style = {\n                fill: color,\n                stroke: color\n            };\n\n            if (!isNaN(xPx) && !isNaN(yPx)) {\n                const point = {\n                    enter: {\n                        x: xPx,\n                        y: yPx\n                    },\n                    update: {\n                        x: xPx,\n                        y: yPx\n                    },\n                    shape,\n                    size: Math.abs(size),\n                    meta: {\n                        stateColor: {},\n                        originalColor: rawColor,\n                        colorTransform: {}\n                    },\n                    style,\n                    _data: row,\n                    _id: d._id,\n                    source: d._data,\n                    rowId: d._id\n                };\n                point.className = getIndividualClassName(d, i, data, this);\n                points.push(point);\n                this.cachePoint(d[key], point);\n            }\n        }\n        points = positionPoints(this, points);\n        return points;\n    }\n\n    /**\n     * Renders the plot in the given container.\n     *\n     * @param  {SVGElement} container SVGElement which will hold the plot\n     * @return {BarLayer} Instance of bar layer\n     */\n    render (container) {\n        let maxSize = 0;\n        let seriesClassName;\n        const config = this.config();\n        const keys = this._transformedData.map(d => d.key);\n        const { transition, className, defClassName, classPrefix } = config;\n        const normalizedData = this._normalizedData;\n        const containerSelection = selectElement(container);\n        const qualifiedClassName = getQualifiedClassName(defClassName, this.id(), classPrefix);\n        this._points = [];\n        this._pointMap = {};\n\n        containerSelection.classed(qualifiedClassName.join(' '), true).classed(className, true);\n\n        this._points = this.generateDataPoints(normalizedData, keys);\n        const schema = this.data().getSchema();\n        makeElement(container, 'g', this._points, null, {\n            update: (group, points) => {\n                maxSize = Math.max(maxSize, ...points.map(d => d.size));\n                seriesClassName = `${qualifiedClassName[0]}`;\n                this.constructor.drawFn()({\n                    layer: this,\n                    container: group.node(),\n                    points,\n                    className: seriesClassName,\n                    transition,\n                    keyFn: v => getMarkId(v.source, schema)\n                });\n            }\n        }, data => data[0]._id);\n        this._maxSize = Math.sqrt(maxSize / Math.PI) * 2;\n        attachDataToVoronoi(this._voronoi, this._points);\n        return this;\n    }\n\n    generateDataPoints (normalizedData, keys) {\n        const encoding = this.config().encoding;\n        const axes = this.axes();\n        const [widthMetrics, heightMetrics] = getPlotMeasurement(this, keys);\n        const offsetXValues = widthMetrics.offsetValues || [];\n        const offsetYValues = heightMetrics.offsetValues || [];\n        return normalizedData.map((dataArr, i) => {\n            const measurementConf = this.getMeasurementConfig(offsetXValues[i], offsetYValues[i], widthMetrics.span,\n                heightMetrics.span);\n            return this.translatePoints(dataArr, encoding, axes, measurementConf);\n        }).filter(d => d.length);\n    }\n\n    getMeasurementConfig (offsetX, offsetY, widthSpan, heightSpan) {\n        return {\n            offset: {\n                x: (offsetX || 0) + widthSpan / 2,\n                y: (offsetY || 0) + heightSpan / 2\n            },\n            span: {\n                x: widthSpan,\n                y: heightSpan\n            }\n        };\n    }\n\n    /**\n     * Gets the nearest point from a position.\n     * @param {number} x x position\n     * @param {number} y y position\n     * @return {Object} Point details\n     */\n    getNearestPoint (x, y) {\n        const distanceLimit = Math.max(this._maxSize, this.config().nearestPointThreshold);\n\n        if (!this.data()) {\n            return null;\n        }\n\n        const point = this._voronoi.find(x, y, distanceLimit);\n        const dimensions = point && point.data.data.update;\n        const radius = point ? Math.sqrt(point.data.data.size / Math.PI) : 0;\n\n        if (point) {\n            const { _data, _id } = point.data.data;\n            const identifiers = this.getIdentifiersFromData(_data, _id);\n            return {\n                id: identifiers,\n                dimensions: [{\n                    x: dimensions.x,\n                    y: dimensions.y,\n                    width: radius,\n                    height: radius\n                }],\n                layerId: this.id()\n            };\n        }\n        return null;\n    }\n}\n","import { makeElement, easeFns } from 'muze-utils';\n\n/**\n *\n *\n * @param {*} elem\n * @param {*} datum\n * @param {*} index\n * @param {*} context\n */\nconst transitionBars = (layer, elem, datum, index, context) => {\n    const { transition } = context;\n    const { duration, disabled, effect } = transition;\n    const selection = elem;\n\n    const selTransition = disabled ? selection :\n        selection.transition()\n        .duration(duration)\n        .ease(easeFns[effect])\n        .on('end', layer.registerAnimationDoneHook());\n    const update = datum.update || datum;\n    const updateStyle = datum.style || {};\n    datum.className && selection.classed(datum.className, true);\n    Object.entries(update).forEach(attr => (!isNaN(attr[1]) && selTransition.attr(attr[0], attr[1])));\n    Object.entries(updateStyle).forEach(styleObj => selection.style(styleObj[0], styleObj[1]));\n};\n\n/**\n *\n *\n * @param {*} elem\n * @param {*} d\n */\nconst barEnterFn = (elem, d) => {\n    const selection = elem;\n    const enter = d.enter || {};\n    Object.entries(enter).forEach(attr => (!isNaN(attr[1]) && selection.attr(attr[0], attr[1])));\n};\n\n/**\n * Draws rectangles by using d3 selection\n * @param  {Object} params Contains container element and points\n * @return {Selection} Bar Selection\n */\n/* istanbul ignore next */ export const drawRects = (params) => {\n    const { layer, points, container, keyFn } = params;\n    const updateFns = {\n        enter (elem, d) { barEnterFn(elem, d); },\n        update (elem, d, i) { transitionBars(layer, elem, d, i, params); }\n    };\n    return makeElement(container, 'rect', points, null, updateFns, keyFn);\n};\n","import { CLASSPREFIX } from '../../enums/constants';\n\nexport const defaultConfig = {\n    classPrefix: CLASSPREFIX,\n    defClassName: 'layer-bar',\n    className: '',\n    interaction: {\n        highlight: [{\n            type: 'fill',\n            intensity: [0, 0, -15, 0]\n        }],\n        fade: [{\n            type: 'fill',\n            intensity: [0, 0, +15, 0]\n        }],\n        focus: [{\n            type: 'fill',\n            intensity: [0, 0, +15, 0]\n        }]\n    },\n    transform: {\n        type: 'stack'\n    },\n    transition: {\n        effect: 'cubic',\n        duration: 1000\n    },\n    innerPadding: 0.1,\n    encoding: {\n        color: {},\n        x: {},\n        y: {},\n        x0: {},\n        y0: {}\n    },\n    states: {\n        highlight: {\n            className: `${CLASSPREFIX}-layer-bar-highlight`\n        },\n        fadeout: {\n            className: `${CLASSPREFIX}-layer-bar-fadeout`\n        },\n        selected: {\n            className: `${CLASSPREFIX}-layer-bar-selected`\n        }\n    }\n};\n\n","import { MeasureSubtype, DimensionSubtype } from 'muze-utils';\nimport { STACK } from '../../enums/constants';\nimport { getLayerColor, positionPoints, getIndividualClassName } from '../../helpers';\n\n/**\n *\n *\n * @param {*} type\n * @param {*} fieldInfo\n * @param {*} config\n * @param {*} data\n *\n */\nconst resolveDimByField = (type, axesInfo, config, data) => {\n    const spaceType = type === 'x' ? 'width' : 'height';\n    const [fieldType, axis] = [config[`${type}FieldType`], axesInfo[`${type}Axis`]];\n    const {\n        transformType,\n        sizeEncoding,\n        sizeConfig,\n        measurement\n    } = config;\n\n    const sizeValue = sizeEncoding.value;\n    let enter = 0;\n    let pos;\n    let space = 0;\n    let enterSpace = 0;\n    if (fieldType !== undefined) {\n        if (config[`${type}0Field`]) {\n            const minVal = data[type];\n            const maxVal = data[`${type}0`];\n            let min;\n            let max;\n            if (minVal === null || maxVal === null) {\n                return {\n                    enterSpace: undefined,\n                    enter: undefined,\n                    pos: undefined,\n                    space: undefined\n                };\n            } else if (fieldType === MeasureSubtype.CONTINUOUS || fieldType === DimensionSubtype.TEMPORAL) {\n                min = Math.min(minVal, maxVal);\n                max = Math.max(minVal, maxVal);\n            } else {\n                min = minVal;\n                max = maxVal;\n            }\n            const scales = type === 'x' ? [min, max] : [max, min];\n            pos = axis.getScaleValue(scales[0]) + axis.getUnitWidth() / 2;\n            space = Math.abs(axis.getScaleValue(scales[1]) - pos) + axis.getUnitWidth() / 2;\n\n            enter = pos;\n            enterSpace = 0;\n        } else if (fieldType === DimensionSubtype.CATEGORICAL || fieldType === DimensionSubtype.TEMPORAL) {\n            pos = axis.getScaleValue(data[type]) +\n                (sizeConfig[type === 'x' ? 'barWidthOffset' : 'barHeightOffset'] || 0);\n\n            space = sizeConfig[type === 'x' ? 'barWidth' : 'barHeight'];\n            if (sizeValue !== undefined) {\n                const diffPx = sizeValue * space;\n                space -= diffPx;\n                pos += diffPx / 2;\n            }\n            enter = pos;\n            enterSpace = space;\n        } else {\n            const zeroPos = axis.getScaleValue(0);\n            const axisType = axis.getScaleValue(data[type]);\n            const axisType0 = axis.getScaleValue(data[`${type}0`]);\n\n            enterSpace = 0;\n            if (type === 'x') {\n                pos = data[type] < 0 || transformType === STACK ? axisType : zeroPos;\n                space = Math.abs(pos - (transformType === STACK ? axisType0 : (data[type] >= 0 ? axisType : zeroPos)));\n            } else {\n                pos = transformType === STACK || data[type] >= 0 ? axisType : zeroPos;\n                space = Math.abs(pos - (transformType === STACK ? axisType0 : (data[type] >= 0 ? zeroPos : axisType)));\n            }\n            enter = zeroPos;\n        }\n    } else {\n        pos = 0;\n        space = measurement[spaceType];\n    }\n\n    return {\n        enterSpace,\n        enter,\n        pos,\n        space\n    };\n};\n\n/**\n *\n *\n * @param {*} data\n * @param {*} config\n * @param {*} axes\n *\n */\nconst resolveDimensions = (data, config, axes) => {\n    const axesInfo = {\n        xAxis: axes.x,\n        yAxis: axes.y\n    };\n    const {\n        enterSpace: enterWidth,\n        enter: enterX,\n        pos: xPos,\n        space: width\n    } = resolveDimByField('x', axesInfo, config, data);\n\n    const {\n        enterSpace: enterHeight,\n        enter: enterY,\n        pos: yPos,\n        space: height\n    } = resolveDimByField('y', axesInfo, config, data);\n    return {\n        enter: {\n            x: enterX,\n            y: enterY,\n            width: enterWidth,\n            height: enterHeight\n        },\n        update: {\n            x: xPos,\n            y: yPos,\n            width,\n            height\n        }\n    };\n};\n\n/**\n * Generates an array of objects containing x, y, width and height of the bars from the data\n * @param  {Array.<Array>} data Data Array\n * @param  {Object} encoding  Config\n * @param  {Object} axes     Axes object\n * @param {Object} conf config object for point generation\n * @return {Array.<Object>}  Array of points\n */\nexport const getTranslatedPoints = (context, data, sizeConfig) => {\n    let points = [];\n    const encoding = context.config().encoding;\n    const axes = context.axes();\n    const colorAxis = axes.color;\n    const fieldsConfig = context.data().getFieldsConfig();\n    const colorEncoding = encoding.color;\n    const colorField = colorEncoding.field;\n    const sizeEncoding = encoding.size || {};\n    const {\n            x0Field,\n            y0Field,\n            xFieldSubType,\n            yFieldSubType\n        } = context.encodingFieldsInf();\n    const measurement = context.measurement();\n    const isXDim = xFieldSubType === DimensionSubtype.CATEGORICAL || xFieldSubType === DimensionSubtype.TEMPORAL;\n    const isYDim = yFieldSubType === DimensionSubtype.CATEGORICAL || yFieldSubType === DimensionSubtype.TEMPORAL;\n    const key = isXDim ? 'x' : (isYDim ? 'y' : null);\n    const transformType = context.transformType();\n    const colorFieldIndex = colorField && fieldsConfig[colorField] && fieldsConfig[colorField].index;\n\n    for (let i = 0, len = data.length; i < len; i++) {\n        const d = data[i];\n        const style = {};\n        const meta = {};\n        const dimensions = resolveDimensions(d, {\n            xFieldType: xFieldSubType,\n            yFieldType: yFieldSubType,\n            x0Field,\n            y0Field,\n            transformType,\n            measurement,\n            sizeConfig,\n            sizeEncoding\n        }, axes);\n\n        const { color, rawColor } = getLayerColor({ datum: d, index: i },\n            { colorEncoding, colorAxis, colorFieldIndex });\n\n        style.fill = color;\n        meta.stateColor = {};\n        meta.originalColor = rawColor;\n        meta.colorTransform = {};\n\n        const update = dimensions.update;\n\n        if (!isNaN(update.x) && !isNaN(update.y) && d._id !== undefined) {\n            let point = null;\n            point = {\n                enter: dimensions.enter,\n                update,\n                style,\n                _data: d._data,\n                _id: d._id,\n                source: d._data,\n                rowId: d._id,\n                meta\n            };\n            point.className = getIndividualClassName(d, i, data, context);\n            points.push(point);\n            // Store each point in a hashmap with key as the dimensional or temporal field value\n            context.cachePoint(d[key], point);\n        }\n    }\n\n    points = positionPoints(context, points);\n    return points;\n};\n","import {\n    getQualifiedClassName,\n    selectElement,\n    createElements,\n    clipElement,\n    DimensionSubtype,\n    FieldType,\n    MeasureSubtype,\n    Scales,\n    getNearestValue\n} from 'muze-utils';\nimport { BaseLayer } from '../../base-layer';\nimport { drawRects } from './renderer';\nimport { defaultConfig } from './default-config';\nimport { getPlotMeasurement, getValidTransformForAggFn } from '../../helpers';\nimport './styles.scss';\nimport { getTranslatedPoints } from './bar-helper';\n\nconst MEASURE = FieldType.MEASURE;\nconst scaleBand = Scales.band;\n\n/**\n * Bar layer creates rectangle marks. The mark type of this layer is ```bar```. This layer can be used\n * to create stacked or grouped bars, range bars, heatmap plots and also reference bands by using\n * the encoding properties.\n *\n * @public\n *\n * @class\n * @module BarLayer\n * @extends BaseLayer\n */\nexport default class BarLayer extends BaseLayer {\n    /**\n     * Creates an instance of bar layer\n     */\n    constructor (...params) {\n        super(...params);\n        this._bandScale = scaleBand();\n        this._plotPadding = {\n            x: 0,\n            y: 0\n        };\n        this._plotSpan = {\n            x: 0,\n            y: 0\n        };\n        this._pointMap = {};\n    }\n\n    /**\n     *\n     *\n     *\n     * @memberof BarLayer\n     */\n    elemType () {\n        return 'rect';\n    }\n\n    /**\n     *\n     *\n     * @static\n     *\n     * @memberof BarLayer\n     */\n    static formalName () {\n        return 'bar';\n    }\n\n    /**\n     * Returns the default configuration of the bar layer\n     * @return {Object} Default configuration of the bar layer\n     */\n    static defaultConfig () {\n        return defaultConfig;\n    }\n\n    /**\n     *\n     *\n     * @static\n     * @param {*} conf\n     * @param {*} userConf\n     *\n     * @memberof BarLayer\n     */\n    static defaultPolicy (conf, userConf) {\n        const config = BaseLayer.defaultPolicy(conf, userConf);\n        const encoding = config.encoding;\n        const colorField = encoding.color.field;\n        const transform = config.transform;\n\n        if (colorField) {\n            transform.groupBy = colorField;\n        }\n        return config;\n    }\n\n    /**\n     *\n     *\n     * @param {*} data\n     * @param {*} fieldsConfig\n     *\n     * @memberof BarLayer\n     */\n    calculateDomainFromData (data, encodingFieldInf, fieldsConfig) {\n        const domain = super.calculateDomainFromData(data, encodingFieldInf, fieldsConfig);\n        ['x', 'y'].forEach((d) => {\n            if (encodingFieldInf[`${d}FieldType`] === MEASURE && domain[d]) {\n                encodingFieldInf[`${d}0Field}`] ? domain[d] = domain[d].sort((a, b) => a - b) :\n                    (domain[d][0] = Math.min(domain[d][0], 0));\n            }\n        });\n        return domain;\n    }\n\n    /**\n     * Generates an array of objects containing x, y, width and height of the bars from the data\n     * @param  {Array.<Array>} data Data Array\n     * @param  {Object} encoding  Config\n     * @param  {Object} axes     Axes object\n     * @param {Object} conf config object for point generation\n     * @return {Array.<Object>}  Array of points\n     */\n    translatePoints (data, sizeConfig) {\n        return getTranslatedPoints(this, data, sizeConfig);\n    }\n\n    /**\n     * Renders the plot in the given container\n     * @param  {SVGGroup} container SVGGroup where plot will be rendered.\n     * @return {BarLayer} Instance of bar layer.\n     */\n    render (container) {\n        const config = this.config();\n        const transition = config.transition;\n        const normalizedDataArr = this._normalizedData;\n        const transformedData = this._transformedData;\n        const keys = transformedData.map(d => d.key);\n        const fieldsConfig = this.data().getFieldsConfig();\n        const axes = this.axes();\n        const height = axes.y && axes.y.scale().range()[0];\n        const width = axes.x && axes.x.scale().range()[1];\n        const defClassName = config.defClassName;\n        const qualifiedClassName = getQualifiedClassName(defClassName, this.id(), config.classPrefix);\n        const className = config.className;\n        const containerSelection = selectElement(container);\n        const dimensions = Object.values(fieldsConfig).filter(e => e.def.type === FieldType.DIMENSION)\n            .map(e => e.index);\n        containerSelection.classed(qualifiedClassName.join(' '), true);\n        containerSelection.classed(className, true);\n        clipElement(container, {\n            x: 0,\n            y: 0,\n            width,\n            height\n        }, `id-${this.id()}`);\n\n        this._points = this.generateDataPoints(normalizedDataArr, keys);\n\n        createElements({\n            data: this._points,\n            container,\n            selector: 'g',\n            append: 'g',\n            each: (points, group, i) => {\n                const seriesClassName = `${qualifiedClassName[0]}-${keys[i] || i}`.toLowerCase();\n                group.style('display', 'block');\n                drawRects({\n                    layer: this,\n                    container: group.node(),\n                    points,\n                    className: seriesClassName,\n                    transition,\n                    style: {},\n                    keyFn: d => dimensions.map(key => d._data[key]).join('-')\n                });\n            }\n        });\n        return this;\n    }\n\n    /**\n     *\n     *\n     * @param {*} normalizedData\n     * @param {*} keys\n     *\n     * @memberof BarLayer\n     */\n    generateDataPoints (normalizedData, keys) {\n        const [barWidthMetrics, barHeightMetrics] = getPlotMeasurement(this, keys);\n        const barWidthOffsets = barWidthMetrics.offsetValues || [];\n        const barHeightOffsets = barHeightMetrics.offsetValues || [];\n        this._plotSpan = {\n            x: barWidthMetrics.groupSpan || 0,\n            y: barHeightMetrics.groupSpan || 0\n        };\n        this._plotPadding = {\n            x: barWidthMetrics.padding || 0,\n            y: barHeightMetrics.padding || 0\n        };\n\n        this._pointMap = {};\n        return normalizedData.map((data, i) => this.translatePoints(data,\n            {\n                barWidth: barWidthMetrics.span,\n                barWidthOffset: barWidthOffsets[i] || 0,\n                barHeight: barHeightMetrics.span,\n                barHeightOffset: barHeightOffsets[i] || 0\n            }));\n    }\n\n    getPlotPadding () {\n        return this._plotPadding;\n    }\n\n    resolveTransformType () {\n        this._transformType = getValidTransformForAggFn(this);\n    }\n\n    /**\n     * Gets the nearest point of the position passed.\n     * @param {number} x x position\n     * @param {number} y y position\n     * @return {Object} Nearest point.\n     */\n    getNearestPoint (x, y) {\n        if (!this.data()) {\n            return null;\n        }\n        let axis;\n        let value;\n        let points;\n        let uniqueFieldType;\n        let uniqueFieldIndex;\n        let filterData;\n        let identifiers;\n        let pointFound = null;\n        const dataModel = this.data();\n        const dataObj = dataModel.getData();\n        const fieldsConfig = dataModel.getFieldsConfig();\n        const axes = this.axes();\n        const data = dataObj.data;\n        const pointMap = this._pointMap;\n        const {\n                xField,\n                yField,\n                xFieldSubType,\n                yFieldSubType\n            } = this.encodingFieldsInf();\n\n        if (xFieldSubType === MeasureSubtype.CONTINUOUS) {\n            axis = axes.y;\n            value = axis.invert(y);\n            uniqueFieldIndex = fieldsConfig[yField].index;\n            uniqueFieldType = yFieldSubType;\n        } else {\n            axis = axes.x;\n            value = axis.invert(x);\n            uniqueFieldIndex = fieldsConfig[xField].index;\n            uniqueFieldType = xFieldSubType;\n        }\n\n        if (uniqueFieldType === DimensionSubtype.CATEGORICAL) {\n            points = pointMap[value];\n        }\n\n        if (uniqueFieldType === DimensionSubtype.TEMPORAL) {\n            filterData = [...new Set(data.map(d => d[uniqueFieldIndex]))];\n            value = getNearestValue(filterData, value);\n            points = pointMap[value];\n        }\n        const len = points && points.length;\n        points && points.sort((p1, p2) => p1.update.y - p2.update.y);\n        for (let i = 0; i < len; i++) {\n            const point = points[i];\n            const update = point.update;\n            if (x >= update.x && x <= (update.width + update.x) && y >= update.y && y <= (update.height + update.y)) {\n                pointFound = point;\n                break;\n            }\n            pointFound = null;\n        }\n\n        const values = pointFound && pointFound._data;\n        if (values) {\n            identifiers = this.getIdentifiersFromData(values, pointFound._id);\n        }\n        return pointFound ? {\n            dimensions: [pointFound.update],\n            id: identifiers,\n            layerId: this.id()\n        } : pointFound;\n    }\n\n    getPlotSpan () {\n        return this._plotSpan;\n    }\n\n    hasPlotSpan () {\n        return true;\n    }\n}\n","import { CLASSPREFIX } from '../../enums/constants';\n\nexport const defaultConfig = {\n    defClassName: 'layer-tick',\n    className: '',\n    classPrefix: CLASSPREFIX,\n    interaction: {\n        highlight: [{\n            type: 'stroke',\n            intensity: [0, 0, -15, 0]\n        }],\n        fade: [{\n            type: 'stroke',\n            intensity: [0, 0, 15, 0]\n        }],\n        focus: [{\n            type: 'stroke',\n            intensity: [0, 0, 15, 0]\n        }]\n    },\n    innerPadding: 0.1,\n    transform: {\n        type: 'identity'\n    },\n    transition: {\n        effect: 'cubic',\n        duration: 1000\n    },\n    encoding: {\n        color: { },\n        x: {},\n        y: {},\n        x0: {},\n        y0: {},\n        strokeOpacity: {\n            value: 0.5\n        },\n        fillOpacity: {\n            value: 0.5\n        }\n    },\n    states: {\n        highlight: {\n            className: `${CLASSPREFIX}-layer-tick-highlight`\n        },\n        fadeout: {\n            className: `${CLASSPREFIX}-layer-tick-fadeout`\n        },\n        selected: {\n            className: `${CLASSPREFIX}-layer-tick-selected`\n        }\n    }\n};\n","import { selectElement } from 'muze-utils';\n\n/**\n * Draws ticks by using d3 selection\n * @param  {Object} params Contains container element and points\n * @return {Selection} Ticks Selection\n */\nexport default /* istanbul ignore next */ (params) => {\n    const { points, container, keyFn, className } = params;\n    const mount = selectElement(container);\n    const ticks = mount.selectAll('path').data(points, keyFn);\n    const ticksEnter = ticks.enter().append('path');\n\n    mount.attr('class', className || '');\n    ticksEnter.each(function (d) {\n        const selection = selectElement(this);\n        const enter = d.enter || {};\n        Object.entries(enter).forEach(attr => (!isNaN(attr[1]) && selection.attr(attr[0], attr[1])));\n    });\n\n    ticks.exit().remove();\n    return ticks.merge(ticksEnter)\n                    .each(function (d) {\n                        const selection = selectElement(this);\n                        const update = d.update;\n                        const updateStyle = d.style || {};\n                        const x0 = update.x0 !== undefined ? update.x0 : update.x;\n                        const y0 = update.y0 !== undefined ? update.y0 : update.y;\n                        const path = `M ${update.x} ${update.y} L ${x0} ${y0}`;\n                        d.className && selection.classed(d.className, true);\n                        selection.attr('d', path);\n                        Object.entries(updateStyle).forEach(styleObj => selection.style(styleObj[0], styleObj[1]));\n                    });\n};\n\n","import { FieldType } from 'muze-utils';\nimport { PointLayer } from '../point';\nimport { defaultConfig } from './default-config';\nimport { ENCODING } from '../../enums/constants';\nimport drawTicks from './renderer';\nimport './styles.scss';\nimport { getAxesScales, getLayerColor, positionPoints, getIndividualClassName } from '../../helpers';\n\n/**\n * This layer is used to create small lines. The orientation of the line is determined by the positional\n * encoding properties x0 and y0. The mark type of the layer is ```tick```.\n *\n * @public\n *\n * @class\n * @module TickLayer\n * @extends BaseLayer\n */\nexport default class TickLayer extends PointLayer {\n\n    /**\n     *\n     *\n     * @staticg\n     *\n     * @memberof TickLayer\n     */\n    static defaultConfig () {\n        return defaultConfig;\n    }\n\n    /**\n     *\n     *\n     * @static\n     *\n     * @memberof TickLayer\n     */\n    static formalName () {\n        return 'tick';\n    }\n\n    /**\n     *\n     *\n     * @static\n     *\n     * @memberof TickLayer\n     */\n    static drawFn () {\n        return drawTicks;\n    }\n\n    /**\n     *\n     *\n     *\n     * @memberof TickLayer\n     */\n    elemType () {\n        return 'path';\n    }\n\n    /**\n     * Generates an array of objects containing x, y, width and height of the points from the data\n     * @param  {Array.<Array>} data Data Array\n     * @param  {Object} encoding  Config\n     * @param  {Object} axes     Axes object\n     * @return {Array.<Object>}  Array of points\n     */\n    translatePoints (data, encoding, axes, config = {}) {\n        let points = [];\n        const {\n                xAxis,\n                yAxis\n            } = getAxesScales(axes);\n        const fieldsConfig = this.data().getFieldsConfig();\n        const {\n                xField,\n                yField,\n                x0Field,\n                y0Field,\n                xFieldType,\n                yFieldType\n            } = this.encodingFieldsInf();\n        const isXDim = xFieldType === FieldType.DIMENSION;\n        const isYDim = yFieldType === FieldType.DIMENSION;\n        const key = isXDim ? ENCODING.X : (isYDim ? ENCODING.Y : null);\n        const colorEncoding = encoding.color;\n        const colorField = colorEncoding && colorEncoding.field;\n        const colorFieldIndex = fieldsConfig[colorField] && fieldsConfig[colorField].index;\n        const measurement = this.measurement();\n        const colorAxis = axes.color;\n        const { x: offsetX, y: offsetY } = config.offset;\n        const { x: xSpan, y: ySpan } = config.span;\n        for (let i = 0, len = data.length; i < len; i++) {\n            let xPx;\n            let x0Px;\n            let y0Px;\n            let yPx;\n            const d = data[i];\n            const row = d._data;\n            if (xField) {\n                xPx = xAxis.getScaleValue(d.x) + offsetX;\n                x0Px = xPx + xSpan;\n            }\n\n            if (yField) {\n                yPx = yAxis.getScaleValue(d.y) + offsetY;\n                y0Px = yPx !== null ? yPx + ySpan : null;\n            }\n\n            if (!xField) {\n                xPx = 0;\n                x0Px = measurement.width;\n                if (!isNaN(yPx)) {\n                    yPx += ySpan / 2;\n                    y0Px = yPx;\n                }\n            }\n\n            if (!yField) {\n                yPx = 0;\n                y0Px = measurement.height;\n                x0Px = xPx += xSpan / 2;\n            }\n\n            if (x0Field) {\n                x0Px = xAxis.getScaleValue(d.x0) + xSpan;\n                yPx += ySpan / 2;\n                y0Px -= ySpan / 2;\n            }\n\n            if (y0Field) {\n                y0Px = yAxis.getScaleValue(d.y0) + ySpan;\n                xPx += xSpan / 2;\n                x0Px -= xSpan / 2;\n            }\n            const style = {};\n            const meta = {};\n            const { color, rawColor } = getLayerColor({ datum: d, index: i },\n                { colorEncoding, colorAxis, colorFieldIndex });\n\n            style.stroke = color;\n            meta.stateColor = {};\n            meta.originalColor = rawColor;\n            meta.colorTransform = {};\n            if (!isNaN(xPx) && !isNaN(yPx)) {\n                const point = {\n                    enter: {},\n                    update: {\n                        x: xPx,\n                        y: yPx,\n                        x0: x0Px,\n                        y0: y0Px\n                    },\n                    style,\n                    _data: row,\n                    _id: d._id,\n                    source: row,\n                    rowId: d._id,\n                    meta\n                };\n                point.className = getIndividualClassName(d, i, data, this);\n                points.push(point);\n                this.cachePoint(d[key], point);\n            }\n        }\n        points = positionPoints(this, points);\n        return points;\n    }\n\n    getMeasurementConfig (offsetX, offsetY, widthSpan, heightSpan) {\n        return {\n            offset: {\n                x: (offsetX || 0),\n                y: (offsetY || 0)\n            },\n            span: {\n                x: widthSpan,\n                y: heightSpan\n            }\n        };\n    }\n}\n","export const AREA_LAYER = 'area';\nexport const ARC_LAYER = 'arc';\nexport const LINE_LAYER = 'line';\nexport const TEXT_LAYER = 'text';\nexport const POINT_LAYER = 'point';\nexport const BAR_LAYER = 'bar';\nexport const TICK_LAYER = 'tick';\nexport const SIMPLE_LAYER = 'simple';\nexport const BASE_LAYER = 'base';\n","import { isSimpleObject, mergeRecursive, getObjProp } from 'muze-utils';\n\nconst parseLayerDefinition = (sink, definition, layerDef, layerType) => {\n    for (const key in definition) {\n        if (Object.hasOwnProperty.call(definition, key)) {\n            let strs;\n            let propValue;\n            const def = definition[key];\n            if (isSimpleObject(def)) {\n                sink[key] = {};\n                parseLayerDefinition(sink[key], def, layerDef, layerType);\n            } else if (typeof def === 'string' && (strs = def.split('.')) && strs[0] === layerType) {\n                propValue = getObjProp(layerDef, ...strs.slice(1, strs.length));\n                if (propValue !== undefined) {\n                    sink[key] = propValue;\n                }\n            } else {\n                sink[key] = def;\n            }\n        }\n    }\n};\n\nconst sanitizeEncoding = (encoding) => {\n    // Create object for each encoding value if encoding value is a string\n    for (const key in encoding) {\n        if (typeof encoding[key] === 'string') {\n            encoding[key] = {\n                field: encoding[key]\n            };\n        }\n    }\n};\n\n/**\n * Layer Factory creates layers based on the layer type. All types of layers needs to register in\n * the layer factory. For getting a layer instance, getLayer method needs to invoked with the\n * layerType and other arguments. It also registers the definition of composite layers.\n *\n * @public\n *\n * @module LayerFactory\n */\nconst layerFactory = (() => {\n    const compositeLayers = {};\n    const factoryObj = {\n        setLayerRegistry: (reg) => {\n            factoryObj._layerRegistry = reg;\n        },\n        getSerializedConf: (mark, layerDef) => {\n            let serializedDefs;\n            const defs = compositeLayers[mark];\n            const newConf = mergeRecursive({}, layerDef);\n\n                // If it is a composite layer then resolve all the definitions of each unit layer\n            if (defs) {\n                serializedDefs = defs.map((unitLayerDef) => {\n                    const sDef = {};\n                    parseLayerDefinition(sDef, unitLayerDef, newConf, mark);\n                    sanitizeEncoding(sDef.encoding);\n                    return sDef;\n                });\n            } else {\n                const encoding = newConf.encoding;\n                // Create object for each encoding value if encoding value is a string\n                sanitizeEncoding(encoding);\n                serializedDefs = newConf;\n            }\n\n            return serializedDefs;\n        },\n        getLayerInstance: (layerDef, ...params) => {\n            const layerRegistry = factoryObj._layerRegistry;\n            layerDef = !(layerDef instanceof Array) ? [layerDef] : layerDef;\n            const instances = layerDef.map((layerObj) => {\n                const layerConstructor = layerRegistry[layerObj.mark];\n                return layerConstructor.create(...params);\n            });\n            return instances.length === 1 ? instances[0] : instances;\n        },\n        getLayerClass: mark => factoryObj._layerRegistry[mark],\n        /**\n         * Registers a new composite layer definition in the layer factory.\n         *\n         * @public\n         *\n         * @param {string} layerType Mark type of the new composite layer.\n         * @param {Array} layerDefs Layer definitions of the composite layer.\n         */\n        composeLayers: (layerType, layerDefs) => {\n            compositeLayers[layerType] = layerDefs;\n        },\n        sanitizeLayerConfig: (layerDef) => {\n            const newConf = mergeRecursive({}, layerDef);\n            sanitizeEncoding(newConf.encoding);\n            return newConf;\n        }\n    };\n    return factoryObj;\n})();\n\nexport default layerFactory;\n","import layerFactory from './layer-factory';\n\nexport default layerFactory;\n","import { AreaLayer } from './layers/area';\nimport { ArcLayer } from './layers/arc';\nimport { LineLayer } from './layers/line';\nimport { TextLayer } from './layers/text';\nimport { PointLayer } from './layers/point';\nimport { BarLayer } from './layers/bar';\nimport { BaseLayer } from './base-layer';\nimport * as LAYER_TYPES from './enums/layer-types';\nimport { TickLayer } from './layers/tick';\n\nexport const DEFAULT_LAYERS = {\n    [LAYER_TYPES.AREA_LAYER]: AreaLayer,\n    [LAYER_TYPES.ARC_LAYER]: ArcLayer,\n    [LAYER_TYPES.LINE_LAYER]: LineLayer,\n    [LAYER_TYPES.TEXT_LAYER]: TextLayer,\n    [LAYER_TYPES.POINT_LAYER]: PointLayer,\n    [LAYER_TYPES.TICK_LAYER]: TickLayer,\n    [LAYER_TYPES.BAR_LAYER]: BarLayer,\n    [LAYER_TYPES.BASE_LAYER]: BaseLayer\n};\n","/**\n * This file exports constants that are used as enums in the\n *  crosstab group implementation.\n */\n/**\n * Width of the crosstab.\n */\nexport const X = 'x';\n/**\n * Width of the crosstab.\n */\nexport const Y = 'y';\n/**\n * Width of the crosstab.\n */\nexport const WIDTH = 'width';\n\n/**\n * Height of the crosstab.\n */\nexport const HEIGHT = 'height';\n\n/**\n * Field referring to object storing measurement configuration.\n */\nexport const MEASUREMENT = 'measurement';\n\n/**\n * Field referring to object storing configuration properties.\n */\nexport const CONFIG = 'config';\n\n/**\n * Width of visual unit in crosstab.\n */\nexport const MIN_UNIT_WIDTH = 'minUnitWidth';\n\n/**\n * Height of visual unit.\n */\nexport const MIN_UNIT_HEIGHT = 'minUnitHeight';\n\n/**\n * Field to store the array of dimensions to facet by.\n */\nexport const DIMENSIONS = 'dimensions';\n\n/**\n * Field to store array of measures to use as x axis.\n */\nexport const MEASURES = 'measures';\n\n/**\n * Field to store the array of dimensions to facet by.\n */\nexport const DIMENSION = 'dimension';\n\n/**\n * Field to store array of measures to use as x axis.\n */\nexport const MEASURE = 'measure';\n\n/**\n * Flag to specify if model should be pivoted.\n */\nexport const PIVOT = 'pivot';\n\n/**\n * Flag to specify format\n */\nexport const FORMAT = 'format';\n\n/**\n * Mount point where the variable will be hosted\n */\nexport const MOUNT = 'mount';\n\n/**\n * Data update flag\n */\nexport const HAS_DATA_UPDATED = 'hasDataUpdated';\n\n/**\n * Field referring to object storing set of rows\n */\nexport const ROWS = 'rows';\n\n/**\n * Field referring to object storing set of columns\n */\nexport const COLUMNS = 'columns';\n\n/**\n * Field referring to object storing set of columns\n */\nexport const COL = 'col';\n\n/**\n * Field referring to object storing set of rows\n */\nexport const ROW = 'row';\n\n/**\n * Field referring to object storing set of columns\n */\nexport const COLUMN = 'column';\n\n/**\n * Field referring to object storing color field\n */\nexport const COLOR = 'color';\n\n/**\n * Field referring to object storing shape field\n */\nexport const SHAPE = 'shape';\n\n/**\n * Field referring to object storing size field\n */\nexport const SIZE = 'size';\n\n/**\n * Field referring to object storing detail field\n */\nexport const DETAIL = 'detail';\n\n/**\n * Field referring to object storing set of layers\n */\nexport const LAYERS = 'layers';\n\n/**\n * Field referring to object storing the transforms\n */\nexport const TRANSFORM = 'transform';\n\n/**\n * Field referring to object storing the transforms\n */\nexport const ORDINAL = 'ordinal';\n\n/**\n * Field referring to object storing the transforms\n */\nexport const LINEAR = 'linear';\n/**\n * Field referring to object storing the transforms\n */\nexport const LEFT = 'left';\n/**\n * Field referring to object storing the transforms\n */\nexport const RIGHT = 'right';\n/**\n * Field referring to object storing the transforms\n */\nexport const TOP = 'top';\n/**\n * Field referring to object storing the transforms\n */\nexport const BOTTOM = 'bottom';\n\n/**\n * Field referring to object storing the transforms\n */\nexport const RETINAL = 'retinal';\n/**\n * Field referring to object storing the transforms\n */\nexport const CELL = 'cell';\n/**\n * Field referring to object storing the transforms\n */\nexport const X_AXES = 'xAxes';\n/**\n * Field referring to object storing the transforms\n */\nexport const Y_AXES = 'yAxes';\n/**\n * Field referring to object storing the transforms\n */\nexport const ENTRY_CELLS = 'entryCell';\n/**\n * Field referring to object storing the transforms\n */\nexport const INITIALIZED = 'initialized';\n/**\n * Field referring to object storing the transforms\n */\nexport const EXIT_CELLS = 'exitCell';\n/**\n * Field referring to object storing the transforms\n */\nexport const AXIS = 'axis';\n/**\n * Field referring to object storing the transforms\n */\nexport const UNIT = 'unit';\n/**\n * Field referring to object storing the transforms\n */\nexport const UPDATED = 'updated';\n/**\n * Field referring to object storing the transforms\n */\nexport const BEFORE_UPDATE = 'beforeupdate';\n/**\n * Field referring to object storing the transforms\n */\nexport const VALUE_MATRIX = 'valueMatrix';\n/**\n * Field referring to object storing the transforms\n */\nexport const FACET_HEADERS = 'facet-headers';\n/**\n * Field referring to object storing the transforms\n */\nexport const RADIUS = 'radius';\n/**\n * Field referring to object storing the transforms\n */\nexport const ANGLE = 'angle';\n/**\n * Field referring to object storing the transforms\n */\nexport const ARC = 'arc';\n/**\n * Field referring to object storing the transforms\n */\nexport const CARTESIAN = 'cartesian';\n/**\n * Field referring to object storing the transforms\n */\nexport const POLAR = 'polar';\n/**\n * Field referring to object storing the transforms\n */\nexport const CATEGORICAL = 'categorical';\n/**\n * Field referring to object storing the transforms\n */\nexport const TEMPORAL = 'temporal';\n/**\n * Field referring to object storing the transforms\n */\nexport const BAR = 'bar';\n/**\n * Field referring to object storing the transforms\n */\nexport const LINE = 'line';\n/**\n * Field referring to object storing the transforms\n */\nexport const POINT = 'point';\n/**\n * Field referring to object storing the transforms\n */\nexport const PRIMARY = 'Primary';\n/**\n * Field referring to object storing the transforms\n */\nexport const SECONDARY = 'Secondary';\n/**\n * Field referring to object storing the transforms\n */\nexport const BOTH = 'both';\n/**\n * Field referring to object storing the transforms\n */\nexport const INTERACTION = 'interaction';\n/**\n * Field referring to object storing the transforms\n */\nexport const GRID_LINES = 'gridLines';\n/**\n * Field referring to object storing the transforms\n */\nexport const GRID_BANDS = 'gridBands';\n/**\n * Field referring to object storing the transforms\n */\nexport const HEADER = 'header';\n/**\n * Field referring to object storing the transforms\n */\nexport const FACET = 'facet';\n\n","import { ROWS, COLUMNS, COLOR, SHAPE, SIZE, DETAIL, LAYERS, TRANSFORM, CONFIG } from '../enums/constants';\n\n/**\n * This is the local options semantics based on which setters getters are created and reactivity is initiated.\n * This local object is only valid for Artboard.\n * Artboard merges global and local object both to the model\n *\n * Format\n *  PROPERTRY_NAME: {\n *      value: // default value of the property,\n *      meta: {\n *          typeCheck: // The setter value will be checked using this. If the value is function then the setter value\n *                     // is passed as args.\n *          typeExpected: // The output of typecheck action will be tested against this. Truthy value will set the\n *                       // value to the setter\n *          sanitizaiton: // Need for sanitization before type is checked\n *      }\n *  }\n *\n * @module\n */\n\nexport default {\n    [CONFIG]: {},\n    [ROWS]: {},\n    [COLUMNS]: {},\n    [COLOR]: {},\n    [SHAPE]: {},\n    [SIZE]: {},\n    [DETAIL]: {},\n    [LAYERS]: {},\n    [TRANSFORM]: {}\n};\n","import { ERROR_MSG } from 'muze-utils';\n\n/**\n * Interfaces for VisualGroup. Any new VisualGroup has to implement this class.\n * @class  SimpleGroup\n */\nclass SimpleGroup {\n\n    /**\n     * This method is used to set or get the DataModel instance.\n     *\n     * @param {DataModel | undefined} dataModel Instance of datamodel.\n\n     * @memberof  SimpleGroup\n     */\n    data () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    /**\n     * This method is used to set or get the group specific configuration\n     * properties\n     *\n     * @param {Object | undefined} configObj The input configuration.\n     *                                or instance of visual group.\n     * @memberof  SimpleGroup\n     */\n    config () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    /**\n     * This method is used to return a serialized representation of the\n     * instance's properties.\n     *\n     * @memberof  SimpleGroup\n     */\n    serialize () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    /**\n     * This method is used to get or set the measurement object which houses\n     * layout properties like width and height.\n     *\n     * @param {Object  | undefined} mObj The measurement properties.\n     * @memberof  SimpleGroup\n     */\n    measurement () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n}\n\nexport default SimpleGroup;\n","import { ERROR_MSG } from 'muze-utils';\n\n/**\n *\n *\n * @export\n * @class Variable\n */\nexport default class Variable {\n\n    /**\n     *\n     *\n     * @memberof Variable\n     */\n    type () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    /**\n     *\n     *\n     * @memberof Variable\n     */\n    toString () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n}\n","import Variable from './variable';\n\n/**\n * This is a wrapper on top of multiple variables which are of same type but they are shown in the same axis.This is\n * required in case of range plots or ohlc plots where one plot is mapped to multiple measure fields. At that time,\n * we need to create a composed variable from multiple variables. This class just wraps them into one variable instance\n * and provides methods to get the type and other common functionalities which can be performed on a simple variable\n * instance.\n *\n * @public\n * @class ComposeVars\n */\nclass ComposedVars extends Variable {\n\n    /**\n     * Creates an instance of ComposeVars.\n     *\n     * @param {Array} texts Array of field names\n     */\n    constructor (...texts) {\n        super(...texts);\n        this.vars(texts);\n    }\n\n    vars (...params) {\n        if (params.length) {\n            this._vars = params[0];\n            return this;\n        }\n        return this._vars;\n    }\n\n    data (...dm) {\n        if (dm.length) {\n            this.vars().forEach(d => d.data(dm[0]));\n            return this;\n        }\n        return this._data;\n    }\n\n    /**\n     * Get all the field names from composed variable instance.\n     *\n     * @public\n     * @return {Array} Array of field names.\n     */\n    getMembers () {\n        const vars = this.vars();\n        return vars.map(member => member.getMembers()[0]);\n    }\n\n    /**\n     * Type of field associated with this composed variable.\n     *\n     * @return {string} Type of variable (Measure/Dimension).\n     */\n    type () {\n        return this.vars()[0].type();\n    }\n\n    toString () {\n        return this.vars().map(d => d.toString()).join(',');\n    }\n\n    /**\n     * Returns the number formatter function of the variable.\n     *\n     * @return {Function} Number formatter function of the variable.\n     */\n    numberFormat () {\n        return this.vars()[0].numberFormat();\n    }\n\n    format (values) {\n        return this.vars()[0].format(values);\n    }\n\n    /**\n     * Returns the subtype of the fields associated with this variable instance.\n     *\n     * @public\n     * @return {string} Subtype of the variable.\n     */\n    subtype () {\n        return this.vars()[0].subtype();\n    }\n\n    /**\n     * Returns the consecutive minimum difference of the field values.\n     *\n     * @public\n     * @return {number} Minimum consecutive difference.\n     */\n    getMinDiff () {\n        return this.vars()[0].getMinDiff();\n    }\n}\n\nexport default ComposedVars;\n","import { DateTimeFormatter } from 'muze-utils';\nimport Variable from './variable';\n\n/**\n * This is a wrapper on top of fields passed in rows or columns in canvas. This is used to get the type of field or\n * get min difference from the field values.\n *\n * @public\n * @class SimpleVariable\n */\nexport default class SimpleVariable extends Variable {\n\n    /**\n     * Creates an instance of simple variable instance.\n     *\n     * @param {string} text Field name.\n     */\n    constructor (text) {\n        super();\n        this.oneVar(text);\n    }\n\n    /**\n     * Gets the field name associated with this variable instance.\n     *\n     * @public\n     * @return {string} Name of the field.\n     */\n    oneVar (...oneV) {\n        if (oneV.length) {\n            this._oneVar = oneV[0];\n            return this;\n        }\n        return this._oneVar;\n    }\n\n    data (...dm) {\n        if (dm.length) {\n            this._data = dm[0];\n            return this;\n        }\n        return this._data;\n    }\n\n    toString () {\n        return this.oneVar();\n    }\n\n    /**\n     * Gets the number formatter function of this variable.\n     *\n     * @public\n     * @return {Function} Number formatter function.\n     */\n    numberFormat () {\n        if (this.type() === 'measure') {\n            const formatter = this.data().getFieldspace().getMeasure()[this.oneVar()];\n            return formatter.numberFormat();\n        } return val => val;\n    }\n\n    format (values) {\n        if (values && this.subtype() === 'temporal') {\n            const formatter = this.data().getFieldspace().getDimension()[this.oneVar()].schema().format;\n            const dtFormat = new DateTimeFormatter(formatter);\n            values = values.map(e => dtFormat.getNativeDate(e));\n        }\n        return values;\n    }\n\n    /**\n     * Return the field names associated with this variable instance.\n     *\n     * @public\n     * @return {Array} Array of fields.\n     */\n    getMembers () {\n        return [this.oneVar()];\n    }\n\n    /**\n     * Returns the type of the variable. Whether it is measure or dimension.\n     *\n     * @public\n     * @return {string} Type of variable.\n     */\n    type () {\n        const fieldDef = this.data().getFieldsConfig()[this.oneVar()].def;\n        return fieldDef.type;\n    }\n\n    /**\n     * Returns the subtype of the variable. Subtype can be categorical or temporal. If no subtype is found, then it\n     * returns the type of the variable.\n     *\n     * @public\n     * @return {string} Subtype of variable.\n     */\n    subtype () {\n        const fieldDef = this.data().getFieldsConfig()[this.oneVar()].def;\n        return fieldDef.subtype || fieldDef.type;\n    }\n\n    /**\n     * Returns the minimum consecutive difference between the data values of this variable.\n     *\n     * @return {number} Minimum consecutive difference.\n     */\n    getMinDiff () {\n        const fieldSpace = this.data().getFieldspace();\n        return fieldSpace.fieldsObj()[this.oneVar()].minimumConsecutiveDifference();\n    }\n\n    /**\n     * Returns true if two variable instances are same.If both variable has the same field names, they are equal.\n     *\n     * @return {Boolean} Whether two variable instances are same.\n     */\n    equals (varInst) {\n        return this.oneVar() === varInst.oneVar();\n    }\n}\n","import { ComposedVars, SimpleVariable } from '../variable';\nimport { DIMENSION, COLUMNS, ROWS, TEMPORAL } from '../enums/constants';\n\n/**\n * Gets the list of fields in a sorted order by measurement and dimension\n *\n * @param {Array} fieldList List of fields in the view\n * @param {Object} fieldMap Mapping of fields in the datamodel\n * @return {Array} fields sorted by measurement and dimensions\n */\nconst orderFields = (fieldArray, type) => {\n    const dimensionArr = [[], []];\n    const measureArr = [[], []];\n    const temporalArr = [[], []];\n    const categoricalArr = [[], []];\n\n    fieldArray.forEach((fieldList, index) => {\n        fieldList.forEach((field) => {\n            if (field.type() === DIMENSION) {\n                dimensionArr[index].push(field);\n                field.subtype() === TEMPORAL ? temporalArr[index].push(field) : categoricalArr[index].push(field);\n            } else {\n                measureArr[index].push(field);\n            }\n        });\n    });\n\n    const numOfMeasures = measureArr[0].length + (measureArr[1] ? measureArr[1].length : 0);\n\n    // Single array of fields\n    if (!fieldArray[1]) {\n        // Push measures to bottom\n        measureArr[1] = type === COLUMNS ? measureArr[0] : [];\n        // Push measures to left\n        measureArr[0] = type !== COLUMNS ? measureArr[0] : [];\n        // Bottom and right dimensions empty\n        dimensionArr[1] = [];\n        // Left and top filled with dimensions\n        dimensionArr[0] = dimensionArr[0];\n        if (numOfMeasures === 0) {\n            const allDimensions = [...dimensionArr[0], ...dimensionArr[1]];\n            if (type === COLUMNS) {\n                dimensionArr[1] = allDimensions[allDimensions.length - 1] ? [allDimensions[allDimensions.length - 1]]\n                        : [];\n                allDimensions.splice(-1, 1);\n            } else {\n                dimensionArr[1] = [];\n            }\n            dimensionArr[0] = [...allDimensions];\n        }\n    }\n\n    if (dimensionArr[0].length && dimensionArr[1].length && numOfMeasures > 0) {\n        dimensionArr[0] = [...dimensionArr[0], ...dimensionArr[1]];\n        dimensionArr[1] = [];\n    }\n    return {\n        fields: dimensionArr.map((list, i) => (i === 1 ?\n            measureArr[i].concat(dimensionArr[i]) : dimensionArr[i].concat(measureArr[i]))),\n        dimensions: [...dimensionArr[0], ...dimensionArr[1]],\n        measures: [...measureArr[0], ...measureArr[1]],\n        temporal: [...temporalArr[0], ...temporalArr[1]],\n        categorical: [...categoricalArr[0], ...categoricalArr[1]]\n    };\n};\n\n/**\n * Gets the list of normalized fields\n *\n * @param {Array} fields List of fields in the view\n * @param {Object} fieldMap Mapping of fields in the datamodel\n * @return {Array} fields normalized by measurement and dimensions\n */\nconst normalizeFields = (config, type) => {\n    const fieldsArr = [];\n    const fields = config[type];\n\n    if (!(fields[0] instanceof Array)) {\n        fieldsArr[0] = fields;\n    } else {\n        fieldsArr[0] = fields[0] || [];\n        fieldsArr[1] = fields[1] || [];\n    }\n    return fieldsArr;\n};\n\n/**\n *\n *\n * @param {*} fields\n * @param {*} datamodel\n *\n */\nconst convertToVar = (datamodel, fields) => {\n    const vars = [];\n\n    fields && fields.forEach((field) => {\n        if (field instanceof ComposedVars) {\n            vars.push(field);\n            field.data(datamodel);\n        } else {\n            vars.push(new SimpleVariable(field).data(datamodel));\n        }\n    });\n    return vars;\n};\n\n/**\n *\n *\n * @param {*} rows\n * @param {*} columns\n * @param {*} datamodel\n *\n */\nexport const transformFields = (datamodel, config) => {\n    const [rowsInfo, columnsInfo] = [ROWS, COLUMNS].map((fields) => {\n        const normalizedFields = normalizeFields(config, fields);\n        const norFields = [convertToVar(datamodel, normalizedFields[0])];\n\n        if (normalizedFields[1]) {\n            norFields[1] = convertToVar(datamodel, normalizedFields[1]);\n        }\n        return orderFields(norFields, fields);\n    });\n    const {\n        fields: rows,\n        dimensions: rowDimensions,\n        measures: rowMeasures,\n        temporal: rowTemporalFields,\n        categorical: rowCategoricalFields\n    } = rowsInfo;\n    const {\n        fields: columns,\n        dimensions: columnDimensions,\n        measures: columnMeasures,\n        temporal: columnTemporalFields,\n        categorical: columnCategoricalFields\n    } = columnsInfo;\n    return {\n        rows,\n        rowDimensions,\n        rowMeasures,\n        rowTemporalFields,\n        rowCategoricalFields,\n        columns,\n        columnTemporalFields,\n        columnCategoricalFields,\n        columnDimensions,\n        columnMeasures\n    };\n};\n","import { ERROR_MSG, mergeRecursive } from 'muze-utils';\nimport { transformFields } from './field-sanitizer';\nimport { getHeaderAxisFrom } from '../group-helper/group-utils';\nimport { ROW, COLUMN } from '../enums/constants';\n\n/**\n *\n *\n * @export\n * @class VisualEncoder\n */\nexport default class VisualEncoder {\n\n    /**\n     *\n     *\n     * @memberof VisualEncoder\n     */\n    createAxis () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    /**\n     *\n     *\n     * @memberof VisualEncoder\n     */\n    setCommonDomain () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    /**\n     *\n     *\n     * @memberof VisualEncoder\n     */\n    getLayerConfig () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    fieldInfo (...info) {\n        if (info.length) {\n            this._fieldInfo = mergeRecursive(this._fieldInfo || {}, info[0]);\n            return this;\n        }\n        return this._fieldInfo;\n    }\n\n    /**\n     *\n     *\n     * @param {*} datamodel\n     * @param {*} config\n     *\n     * @memberof VisualEncoder\n     */\n    fieldSanitizer (datamodel, config) {\n        this.fieldInfo(transformFields(datamodel, config));\n        return this.fieldInfo();\n    }\n\n    /**\n     *\n     *\n     * @param {*} params\n     *\n     * @memberof VisualEncoder\n     */\n    axisFrom (...params) {\n        if (params.length) {\n            this._axisFrom = params[0];\n            return this;\n        }\n        return this._axisFrom;\n    }\n\n    /**\n     *\n     *\n     * @param {*} params\n     *\n     * @memberof VisualEncoder\n     */\n    headerFrom (...params) {\n        if (params.length) {\n            this._headerFrom = params[0];\n            return this;\n        }\n        return this.__headerFrom;\n    }\n\n    /**\n     *\n     *\n     * @param {*} axisFrom\n     *\n     * @memberof CartesianEncoder\n     */\n    setAxisAndHeaders (axisFrom = {}, fields) {\n        const [rowHeader, rowAxis] = getHeaderAxisFrom(ROW, fields.rows, axisFrom);\n        const [colHeader, colAxis] = getHeaderAxisFrom(COLUMN, fields.columns, axisFrom);\n\n        this.axisFrom({\n            row: rowAxis,\n            column: colAxis\n        });\n        this.headerFrom({\n            row: rowHeader,\n            column: colHeader\n        });\n        return this;\n    }\n}\n","import { ContinousAxis, BandAxis, TimeAxis, ColorAxis, SizeAxis, ShapeAxis } from '@chartshq/muze-axis';\n\nexport const scaleMaps = {\n    linear: ContinousAxis,\n    band: BandAxis,\n    temporal: TimeAxis,\n    size: SizeAxis,\n    color: ColorAxis,\n    shape: ShapeAxis\n};\n","import { ScaleType } from '@chartshq/muze-axis';\n\n/**\n * Map of DataModel types to associated field types.\n */\nexport const dataTypeScaleMap = {\n    dimension: ScaleType.BAND,\n    categorical: ScaleType.BAND,\n    temporal: ScaleType.TIME,\n    measure: ScaleType.LINEAR,\n    continuous: ScaleType.LINEAR\n};\n","import { mergeRecursive } from 'muze-utils';\nimport { AxisOrientation } from '@chartshq/muze-axis';\nimport { scaleMaps } from '../enums/scale-maps';\nimport { getAxisType, getAxisKey } from '../group-helper';\nimport { dataTypeScaleMap } from '../data-type-scale-map';\nimport { CATEGORICAL, TEMPORAL, BAR, LINE, POINT, BOTH, Y } from '../enums/constants';\n\n/**\n *\n *\n * @param {*} axisInfo\n * @param {*} field\n * @param {*} axesCreators\n *\n */\nconst getAxisConfig = (axisInfo, field, axesCreators) => {\n    let axisOrientation;\n    const { index, axisIndex, axisType } = axisInfo;\n    const { config, position } = axesCreators;\n    const userAxisConfig = config.axes ? (config.axes[axisType] || {}) : {};\n    const {\n        LEFT,\n        RIGHT,\n        TOP,\n        BOTTOM\n    } = AxisOrientation;\n    const allOrientations = axisType === Y ? [LEFT, RIGHT] : [TOP, BOTTOM];\n\n    if (position === BOTH) {\n        axisOrientation = allOrientations[axisIndex];\n    } else {\n        axisOrientation = position;\n    }\n    const axisConfig = {\n        id: `${axisType}-${index}-${axisIndex}`,\n        name: field.toString(),\n        field: field.toString(),\n        numberFormat: field.numberFormat(),\n        orientation: axisOrientation,\n        showAxisName: true,\n        show: true,\n        type: dataTypeScaleMap[field.subtype()]\n    };\n    userAxisConfig.tickValues = field.format(userAxisConfig.tickValues);\n    userAxisConfig.domain = field.format(userAxisConfig.domain);\n\n    return mergeRecursive(axisConfig, userAxisConfig);\n};\n\n/**\n *\n *\n * @param {*} axisInfo\n * @param {*} field\n * @param {*} axesCreators\n *\n */\nconst createSimpleAxis = (axisConfig, field, axesCreators) => {\n    const { labelManager } = axesCreators;\n    const Cls = scaleMaps[dataTypeScaleMap[field.subtype()]];\n    const simpleAxis = new Cls(axisConfig, { labelManager });\n    return simpleAxis;\n};\n\nexport const getAdjustedDomain = (max, min) => {\n    const y1ratio = max[0] / (max[0] - min[0]);\n    const y2ratio = max[1] / (max[1] - min[1]);\n\n    // adjust min/max values for positive negative values zero line etc\n    let allSameSign = false;\n\n    // if all numbers are positive set floor to zero\n    if (min[0] > 0 && min[1] > 0 && min[1] > 0 && max[1] > 0) {\n        allSameSign = true;\n        min[0] = 0;\n        min[1] = 0;\n    }\n\n    // if all numbers are negative set ceiling to zero\n    if (min[0] < 0 && min[1] < 0 && min[1] < 0 && max[1] < 0) {\n        allSameSign = true;\n        max[0] = 0;\n        max[1] = 0;\n    }\n\n    // align zero line if necessary\n    if (!allSameSign && y1ratio !== y2ratio) {\n        if (y1ratio < y2ratio) {\n                    // adjust min[1]\n            min[1] = min[0] / max[0] * max[1];\n        } else {\n                    // adjust min[0]\n            min[0] = min[1] / max[1] * max[0];\n        }\n    }\n    return [\n        [min[0], max[0]],\n        [min[1], max[1]]\n    ];\n};\n\n/**\n *\n *\n * @param {*} axisType\n * @param {*} fieldInfo\n * @param {*} axesCreators\n * @param {*} groupAxes\n *\n */\nexport const generateAxisFromMap = (axisType, fieldInfo, axesCreators, axesInfo) => {\n    let axisKey;\n    const { groupAxes, valueParser } = axesInfo;\n    const currentAxes = [];\n    const { fields, index } = fieldInfo;\n    const { cacheMaps } = axesCreators;\n    const map = cacheMaps[`${axisType}AxesMap`];\n\n    const commonAxisKey = getAxisKey(axisType, index);\n    fields.forEach((field, axisIndex) => {\n        axisKey = getAxisKey(axisType, index, axisIndex, dataTypeScaleMap[field.subtype()]);\n        const axisConfig = getAxisConfig({ index, axisIndex, axisType }, field, axesCreators);\n\n        let axis;\n        if (!map.has(axisKey)) {\n            axis = createSimpleAxis(axisConfig, field, axesCreators);\n        } else {\n            axis = map.get(axisKey);\n            axis._rotationLock = false;\n            axis.config(axisConfig);\n            axisConfig.domain ? axis.domain(axisConfig.domain) : axis.resetDomain();\n        }\n        axis.valueParser(valueParser);\n        currentAxes.push(axis);\n        map.set(axisKey, axis);\n    });\n\n    if (currentAxes.length) {\n        map.set(commonAxisKey, currentAxes);\n        groupAxes.add(commonAxisKey);\n    }\n\n    return currentAxes;\n};\n\n/**\n *\n *\n * @memberof MatrixResolver\n */\nexport const mutateAxesFromMap = (cacheMaps, axes) => {\n    const {\n        xAxesMap,\n        yAxesMap\n    } = cacheMaps;\n    const {\n        x: xAxisSet,\n        y: yAxisSet\n    } = axes;\n    const xAxes = [];\n    const yAxes = [];\n\n    xAxisSet.forEach((axisId) => {\n        const xAxis = xAxesMap.get(axisId);\n        xAxes.push(xAxis);\n    });\n    yAxisSet.forEach((axisId) => {\n        const yAxis = yAxesMap.get(axisId);\n        yAxes.push(yAxis);\n    });\n    return {\n        xAxes, yAxes\n    };\n};\n\n/**\n * return a default mark based on predefined set of rules of type and subtype of the fields\n *\n * @param {string} colFieldType dimension/measure - temporal/ordinal/nominal\n * @param {string} rowFieldType dimension/measure - temporal/ordinal/nominal\n * @return {Object} return mark type\n */\nexport const getDefaultMark = (colFieldType, rowFieldType) => {\n    let mark;\n\n    if (colFieldType === CATEGORICAL || rowFieldType === CATEGORICAL) {\n        mark = BAR;\n    } else if (colFieldType === TEMPORAL || rowFieldType === TEMPORAL) {\n        mark = LINE;\n    } else {\n        mark = POINT;\n    }\n\n    return mark;\n};\n\n/**\n *\n *\n * @param {*} axesCreators\n * @param {*} [fieldInfo=[]]\n *\n */\nexport const createRetinalAxis = (axesCreators, fieldProps = {}) => {\n    const { axisType, fieldsConfig } = axesCreators;\n    const field = fieldProps.field;\n    const axis = [];\n    const Cls = scaleMaps[axisType];\n\n    fieldProps.type = fieldProps.type ? fieldProps.type : getAxisType(fieldsConfig, field || null);\n    axis.push(new Cls(fieldProps));\n    return axis;\n};\n\n/**\n *\n *\n * @param {*} arr\n * @param {*} val\n *\n */\nexport const getIndex = (arr, val) => {\n    let i = 0;\n    let arrIndex = -1;\n\n    while (arrIndex === -1 && i < arr.length) {\n        if (arr[i].toString() === val.toString()) {\n            arrIndex = i;\n        }\n        i++;\n    }\n    return arrIndex;\n};\n\n/**\n *\n *\n * @param {*} colFields\n * @param {*} rowFields\n * @param {*} userLayerConfig\n *\n * @memberof CartesianEncoder\n */\nexport const getLayerConfFromFields = (colFields, rowFields, userLayerConfig) => userLayerConfig.filter((conf) => {\n    const userConf = conf instanceof Array ? conf : [conf];\n    const encodingArr = [].concat(...userConf.map(d => d.encoding).filter(d => d !== undefined));\n\n    if (!encodingArr.length) {\n        return true;\n    }\n\n    const xFields = [].concat(...encodingArr.map(d => [d.x && d.x.field, d.x0 && d.x0.field]))\n                .filter(d => d !== undefined && d !== null);\n    const yFields = [].concat(...encodingArr.map(d => [d.y && d.y.field, d.y0 && d.y0.field]))\n                .filter(d => d !== undefined && d !== null);\n\n    if (!xFields.length && !yFields.length) {\n        return true;\n    }\n\n    const colFieldExist = xFields.length ? xFields.every(d => colFields.indexOf(d) !== -1) : false;\n    const rowFieldExist = yFields.length ? yFields.every(d => rowFields.indexOf(d) !== -1) : false;\n    if (xFields.length && yFields.length) {\n        return colFieldExist && rowFieldExist;\n    }\n    return colFieldExist || rowFieldExist;\n});\n","import { layerFactory } from '@chartshq/visual-layer';\nimport { mergeRecursive, STATE_NAMESPACES, unionDomain } from 'muze-utils';\nimport {\n    generateAxisFromMap,\n    getDefaultMark,\n    getIndex,\n    getLayerConfFromFields,\n    getAdjustedDomain\n} from './encoder-helper';\nimport { retriveDomainFromData } from '../group-helper';\n\nimport { ROW, COLUMN, COL, LEFT, TOP, CARTESIAN, MEASURE, BOTH, X, Y } from '../enums/constants';\nimport VisualEncoder from './visual-encoder';\n\n/**\n *\n *\n * @export\n * @class CartesianEncoder\n * @extends {VisualEncoder}\n */\nexport default class CartesianEncoder extends VisualEncoder {\n\n    /**\n     *\n     *\n     *\n     * @memberof CartesianEncoder\n     */\n    static type () {\n        return CARTESIAN;\n    }\n\n    /**\n     *\n     *\n     * @param {*} axesCreators\n     * @param {*} fieldInfo\n     *\n     * @memberof CartesianEncoder\n     */\n    createAxis (axesCreators, fieldInfo, context) {\n        const geomCellAxes = {};\n        const {\n            axes\n        } = axesCreators;\n        const {\n            projections,\n            indices\n        } = fieldInfo;\n        const {\n            rowFields,\n            columnFields\n        } = projections;\n        const {\n             rowIndex,\n             columnIndex\n        } = indices;\n        const axisFields = [{\n            fields: rowFields,\n            index: rowIndex\n        }, {\n            fields: columnFields,\n            index: columnIndex\n        }];\n        const xAxes = axes.x || [];\n        const yAxes = axes.y || [];\n\n        [rowFields, columnFields].forEach((fields, i) => {\n            const type = i === 0 ? ROW : COLUMN;\n            const axis = i === 0 ? Y : X;\n\n            if (fields.length > 1) {\n                axesCreators.position = BOTH;\n            } else {\n                axesCreators.position = this.axisFrom()[type];\n            }\n            geomCellAxes[axis] = generateAxisFromMap(axis, axisFields[i], axesCreators, {\n                groupAxes: axis === X ? xAxes : yAxes,\n                valueParser: context.resolver.valueParser()\n            });\n        });\n        return geomCellAxes;\n    }\n\n    updateDomains (store, axes) {\n        const xAxes = axes.x;\n        const yAxes = axes.y;\n        store.model.lock();\n        for (let i = 0; i < xAxes.length; i++) {\n            for (let j = 0; j < xAxes[i].length; j++) {\n                store.commit(`${STATE_NAMESPACES.GROUP_GLOBAL_NAMESPACE}.domain.x.${0}${i}0`, xAxes[i][j].domain());\n            }\n        }\n        for (let i = 0; i < yAxes.length; i++) {\n            for (let j = 0; j < yAxes[i].length; j++) {\n                store.commit(`${STATE_NAMESPACES.GROUP_GLOBAL_NAMESPACE}.domain.y.${i}${0}0`, yAxes[i][j].domain());\n                yAxes[i][j]._domainLock = false;\n            }\n        }\n\n        store.model.unlock();\n    }\n\n    unionUnitDomains (context) {\n        const store = context.store();\n        const unitDomains = store.get(`${STATE_NAMESPACES.UNIT_GLOBAL_NAMESPACE}.domain`);\n        const resolver = context.resolver();\n        const units = resolver.units();\n        const domains = {\n            0: {},\n            1: {}\n        };\n\n        for (let rIdx = 0, len = units.length; rIdx < len; rIdx++) {\n            const unitsArr = units[rIdx];\n            for (let cIdx = 0, len2 = unitsArr.length; cIdx < len2; cIdx++) {\n                const unit = unitsArr[cIdx];\n                const axisFields = unit.fields();\n                [axisFields.x, axisFields.y].forEach((fieldArr, axisType) => {\n                    fieldArr.forEach((field, axisIndex) => {\n                        const key = !axisType ? `0${cIdx}${axisIndex}` : `${rIdx}0${axisIndex}`;\n                        const dom = unitDomains[`${rIdx}${cIdx}`];\n\n                        if (dom && Object.keys(dom).length !== 0) {\n                            domains[axisType][key] = unionDomain([(domains[axisType] && domains[axisType][key]) || [],\n                                dom[`${field}`]], field.subtype());\n                        }\n                    });\n                });\n            }\n        }\n\n        const { x: xAxes, y: yAxes } = resolver.axes();\n        store.model.lock();\n        [xAxes, yAxes].forEach((axesArr, axisType) => {\n            axesArr.forEach((axes, idx) => {\n                const min = [];\n                const max = [];\n                let domain = [];\n                let adjustedDomain = [];\n                if (axes.length > 1 && axes[0].constructor.type() === 'linear' && axes[0].config().alignZeroLine) {\n                    axes.forEach((axis, i) => {\n                        const key = !axisType ? `0${idx}${i}` : `${idx}0${i}`;\n                        domain = domains[axisType][key];\n                        min[i] = domain[0];\n                        max[i] = domain[1];\n                    });\n                    adjustedDomain = getAdjustedDomain(max, min);\n                }\n\n                axes.forEach((axis, index) => {\n                    const key = !axisType ? `0${idx}${index}` : `${idx}0${index}`;\n                    domain = adjustedDomain[index] || domains[axisType][key];\n\n                    domain && axis.domain(domain);\n                    const type = !axisType ? 'x' : 'y';\n                    store.commit(`${STATE_NAMESPACES.GROUP_GLOBAL_NAMESPACE}.domain.${type}.${idx}${index}`, domain);\n                });\n            });\n        });\n        store.model.unlock();\n    }\n\n    /**\n     *\n     *\n     * @param {*} fields\n     *\n     * @memberof CartesianEncoder\n     */\n    getFacetsAndProjections (fields, type) {\n        let facets = [];\n        let projections = [];\n        let counter = 0;\n        const primaryFacets = [];\n        const secondaryFacets = [];\n        const primaryFields = fields[0];\n        const secondaryFields = fields[1];\n        const primaryLen = primaryFields.length;\n        const secondaryLen = secondaryFields.length;\n        const axisFrom = this.axisFrom();\n\n        for (let i = 0; i < primaryLen; i++) {\n            let projArr = [primaryFields[i]];\n            const primaryField = primaryFields[i];\n\n            if (primaryField.type() === MEASURE) {\n                const secondaryField = secondaryFields[counter];\n                if (secondaryField && secondaryField.type() === MEASURE) {\n                    counter++;\n                    projArr = [primaryField, secondaryField];\n                }\n                projections.push(projArr);\n            } else {\n                facets.push(primaryField);\n                primaryFacets.push(primaryField);\n            }\n        }\n        if (secondaryLen > counter) {\n            for (let i = counter; i < secondaryLen; i++) {\n                const secondaryField = secondaryFields[i];\n                const projArr = [secondaryField];\n                if (secondaryField.type() === MEASURE) {\n                    projections.push(projArr);\n                } else {\n                    facets.push(secondaryField);\n                    secondaryFacets.push(secondaryField);\n                }\n            }\n        }\n        if ((primaryFacets.length || secondaryFacets.length) && !projections.length) {\n            type = type === COL ? COLUMN : type;\n            if ((axisFrom[type] === LEFT || axisFrom[type] === TOP) && primaryFacets.length) {\n                const axisFromIndex = primaryFacets.length - 1;\n                const facet = primaryFacets[axisFromIndex];\n                projections = [[facet]];\n                const existIndex = getIndex(secondaryFacets, facet);\n                if (existIndex > -1) {\n                    projections = [[facet, facet]];\n                    secondaryFacets.splice(existIndex, 1);\n                }\n                primaryFacets.splice(axisFromIndex, 1);\n            } else {\n                const axisFromIndex = 0;\n                const facet = secondaryFacets[axisFromIndex];\n                projections = [[facet]];\n                const existIndex = getIndex(primaryFacets, facet);\n                if (existIndex > -1) {\n                    projections = [[facet, facet]];\n                    primaryFacets.splice(existIndex, 1);\n                }\n                secondaryFacets.splice(axisFromIndex, 1);\n            }\n        }\n\n        facets = [...primaryFacets, ...secondaryFacets];\n        facets = facets.filter((el, index, self) => index === self.findIndex(t => (t.toString() === el.toString())));\n        return {\n            facets,\n            projections\n        };\n    }\n\n    /**\n     *\n     *\n     * @param {*} datamodel\n     * @param {*} config\n     *\n     * @memberof CartesianEncoder\n     */\n    fieldSanitizer (datamodel, config) {\n        return super.fieldSanitizer(datamodel, config);\n    }\n\n    /**\n     *\n     *\n     * @param {*} datamodel\n     *\n     * @memberof CartesianEncoder\n     */\n    getRetinalFieldsDomain (dataModels, encoding) {\n        const groupedModel = dataModels.groupedModel;\n        const domains = {};\n        for (const key in encoding) {\n            if ({}.hasOwnProperty.call(encoding, key)) {\n                const encodingObj = encoding[key];\n                const field = encodingObj.field;\n                if (!encodingObj.domain && field) {\n                    const domain = retriveDomainFromData(groupedModel, field);\n                    domains[field] = domain;\n                }\n            }\n        }\n        return domains;\n    }\n\n    /**\n     *\n     *\n     * @param {*} layerArray\n     * @memberof CartesianEncoder\n     */\n    serializeLayerConfig (layerArray) {\n        const serializedLayers = [];\n        // let currentLayerIndex = 0;\n        layerArray.length && layerArray.forEach((layer, i) => {\n            const def = layerFactory.sanitizeLayerConfig(layer);\n            def.order = i;\n            serializedLayers.push(def);\n        });\n        return serializedLayers;\n    }\n\n    /**\n     *\n     *\n     * @param {*} fields\n     * @param {*} userLayerConfig\n     *\n     * @memberof CartesianEncoder\n     */\n    getLayerConfig (fields, userLayerConfig) {\n        const layerConfig = [];\n        const {\n            columnFields,\n            rowFields\n        } = fields;\n\n        // let currentLayerIndex = 0;\n        columnFields.forEach((colField) => {\n            const colFieldName = colField.toString();\n            rowFields.forEach((rowField) => {\n                let configs = [];\n                const rowFieldName = rowField.toString();\n                const encoding = {\n                    x: {\n                        field: colFieldName\n                    },\n                    y: {\n                        field: rowFieldName\n                    }\n                };\n                const rowFieldType = rowField.subtype();\n                const colFieldType = colField.subtype();\n                const mark = getDefaultMark(colFieldType, rowFieldType);\n\n                const defConfigs = [{\n                    mark,\n                    def: {\n                        mark,\n                        encoding\n                    }\n                }];\n\n                const layerConfigs = getLayerConfFromFields(colField.getMembers(),\n                    rowField.getMembers(), userLayerConfig || []);\n                if (layerConfigs.length) {\n                    configs = layerConfigs.map((layerConf) => {\n                        const mergedLayerConf = mergeRecursive(mergeRecursive({}, defConfigs[0].def), layerConf);\n                        const serializedLayerConfig = layerFactory.getSerializedConf(mergedLayerConf.mark,\n                            mergedLayerConf);\n                        return {\n                            mark: mergedLayerConf.mark,\n                            order: mergedLayerConf.order,\n                            def: serializedLayerConfig\n                        };\n                    });\n                } else {\n                    configs = defConfigs;\n                }\n\n                layerConfig.push(...configs);\n            });\n        });\n        return layerConfig;\n    }\n}\n","import { layerFactory } from '@chartshq/visual-layer';\nimport { mergeRecursive, STATE_NAMESPACES } from 'muze-utils';\nimport VisualEncoder from './visual-encoder';\nimport { RADIUS, ANGLE, SIZE, MEASURE, ARC, POLAR, COLOR } from '../enums/constants';\n/**\n *\n *\n * @export\n * @class PolarEncoder\n * @extends {VisualEncoder}\n */\nexport default class PolarEncoder extends VisualEncoder {\n\n    /**\n     *\n     *\n     * @param {*} axesCreators\n     * @param {*} fieldInfo\n     *\n     * @memberof PolarEncoder\n     */\n    createAxis (axesCreators, fieldInfo) {\n        const {\n            axes\n        } = axesCreators;\n        const geomCellAxes = axes;\n        const {\n            indices\n        } = fieldInfo;\n        const {\n            rowIndex,\n            columnIndex\n        } = indices;\n        // Dummy axes for polar, to create blank cells\n        const pieAxes = geomCellAxes.pie || [];\n\n        pieAxes[rowIndex] = pieAxes[rowIndex] || [];\n        pieAxes[rowIndex][columnIndex] = [];\n\n        geomCellAxes.pie = pieAxes;\n        geomCellAxes.x = null;\n        geomCellAxes.y = null;\n\n        return geomCellAxes;\n    }\n\n    /**\n     *\n     *\n     * @param {*} fields\n     *\n     * @memberof CartesianEncoder\n     */\n    getFacetsAndProjections (fields) {\n        let counter = 0;\n        const facets = [];\n        const projections = [];\n        const primaryFields = fields[0];\n        const secondaryFields = fields[1];\n        const primaryLen = primaryFields.length;\n        const secondaryLen = secondaryFields.length;\n\n        for (let i = 0; i < primaryLen; i++) {\n            const primaryField = primaryFields[i];\n            if (primaryField.type() === MEASURE) {\n                const secondaryField = secondaryFields[counter++];\n                const projArr = secondaryField ? [primaryField, secondaryField] : [primaryField];\n                projections.push(projArr);\n            } else {\n                facets.push(primaryField);\n            }\n        }\n        if (secondaryLen > counter) {\n            for (let i = counter; i < secondaryLen; i++) {\n                const secondaryField = secondaryFields[i];\n                const projArr = [secondaryField];\n                if (secondaryField.type() === MEASURE) {\n                    projections.push(projArr);\n                } else {\n                    facets.push(secondaryField);\n                }\n            }\n        }\n        return {\n            facets,\n            projections\n        };\n    }\n\n    unionUnitDomains (context) {\n        const store = context.store();\n        const domains = store.get(`${STATE_NAMESPACES.UNIT_GLOBAL_NAMESPACE}.domain`);\n        const domainProps = {\n            radius: [Infinity, -Infinity]\n        };\n        Object.values(domains).forEach((domainVal) => {\n            for (const key in domainVal) {\n                domainProps[key] = [Math.min(domainVal[key][0], domainProps[key][0]),\n                    Math.min(domainVal[key][1], domainProps[key][1])];\n            }\n        });\n        store.commit(`${STATE_NAMESPACES.GROUP_GLOBAL_NAMESPACE}.domain.radius`, domainProps.radius);\n    }\n\n    /**\n     *\n     *\n     *\n     * @memberof PolarEncoder\n     */\n    setCommonDomain () {\n        // No domain to be set\n        return this;\n    }\n\n    /**\n     *\n     *\n     *\n     * @memberof PolarEncoder\n     */\n    static type () {\n        return POLAR;\n    }\n\n    layers (...layers) {\n        if (layers.length) {\n            this._layers = layers[0];\n            return this;\n        }\n        return this._layers;\n    }\n\n    /**\n     *\n     *\n     * @param {*} datamodel\n     * @param {*} config\n     * @memberof PolarEncoder\n     */\n    fieldSanitizer (datamodel, config) {\n        let sanitizedRows = [[], []];\n        let sanitizedColumns = [[], []];\n        const fields = super.fieldSanitizer(datamodel, config);\n        const {\n            layers\n        } = config;\n        const {\n            rows,\n            columns\n        } = fields;\n        const layer = layers[0];\n        const encoding = layer.encoding;\n        const radius = encoding && encoding.radius ? encoding.radius.field : null;\n        const angle = encoding && encoding.angle ? encoding.angle.field : null;\n        const sanitizedFields = [sanitizedRows, sanitizedColumns];\n\n        [rows, columns].forEach((fieldType, typeIndex) => {\n            fieldType.forEach((fieldSet, i) => fieldSet.forEach((field) => {\n                if (field.toString() !== radius && field.toString() !== angle && field.type() !== MEASURE) {\n                    sanitizedFields[typeIndex][i].push(field);\n                }\n            }));\n        });\n        sanitizedColumns = [...new Set(sanitizedColumns)];\n        sanitizedRows = [...new Set(sanitizedRows)];\n        this.fieldInfo({ rows: sanitizedRows, columns: sanitizedColumns });\n        return this.fieldInfo();\n    }\n\n    getRetinalFieldsDomain (dataModels, encoding, facetFields, groupBy) {\n        let sizeField;\n        let colorField;\n        const fields = [];\n        const layers = this.layers();\n        const dataModel = dataModels.groupedModel;\n        const fieldsConfig = dataModel.getFieldsConfig();\n        const domains = {};\n        if (layers && layers[0]) {\n            const layer = layers[0];\n            const layerEncoding = layer.def.encoding || {};\n\n            [RADIUS, ANGLE, SIZE, COLOR].forEach((encType) => {\n                const field = layerEncoding[encType] ? layerEncoding[encType].field : '';\n                const measureField = fieldsConfig[field] && fieldsConfig[field].def.type === MEASURE;\n                if (encType === SIZE && measureField) {\n                    sizeField = field;\n                }\n                if (encType === COLOR) {\n                    colorField = field;\n                }\n                fieldsConfig[field] && !measureField && fields.push(field);\n            });\n        }\n\n        if (sizeField) {\n            domains[sizeField] = dataModel.groupBy(facetFields, {\n                [sizeField]: 'sum'\n            }).getFieldspace().fieldsObj()[sizeField].domain();\n        }\n\n        if (colorField) {\n            const dm = dataModel.groupBy([...facetFields, ...fields], groupBy.measures);\n            domains[colorField] = dm.getFieldspace().fieldsObj()[colorField].domain();\n        }\n        return domains;\n    }\n    /**\n     *\n     *\n     * @param {*} fields\n     * @param {*} userLayerConfig\n     *\n     * @memberof PolarEncoder\n     */\n    getLayerConfig (fields, userLayerConfig) {\n        let layerConfig = [];\n        const {\n                columnFields,\n                rowFields\n            } = fields;\n        const allFields = [...columnFields, ...rowFields];\n\n        allFields.forEach(() => {\n            const encoding = {};\n            let config = {\n                mark: ARC,\n                def: {\n                    encoding\n                }\n            };\n            if (userLayerConfig && userLayerConfig.length > 0) {\n                config = mergeRecursive(config, userLayerConfig[0]);\n            }\n            layerConfig.push(config);\n        });\n        if (layerConfig.length === 0) {\n            layerConfig = userLayerConfig;\n        }\n\n        this.layers(layerConfig);\n        return layerConfig;\n    }\n\n    /**\n     *\n     *\n     * @param {*} layerArray\n     *\n     * @memberof PolarEncoder\n     */\n    serializeLayerConfig (layerArray) {\n        const serializedLayers = [];\n\n        layerArray.length && layerArray.forEach((layer) => {\n            const def = layerFactory.getSerializedConf(layer.mark, layer);\n            serializedLayers.push({\n                mark: layer.mark,\n                def\n            });\n        });\n        return serializedLayers;\n    }\n}\n","import { createRetinalAxis } from './encoder-helper';\nimport { COLOR, SHAPE, SIZE } from '../enums/constants';\nimport VisualEncoder from './visual-encoder';\n\n/**\n *\n *\n * @export\n * @class RetinalEncoder\n * @extends {VisualEncoder}\n */\nexport default class RetinalEncoder extends VisualEncoder {\n\n    /**\n     *\n     *\n     * @param {*} axesCreators\n     *\n     * @memberof RetinalEncoder\n     */\n    createAxis (axesCreators) {\n        const { fieldsConfig, config } = axesCreators;\n        const newAxes = {};\n\n        [COLOR, SHAPE, SIZE].forEach((axisType) => {\n            newAxes[`${axisType}`] = createRetinalAxis({ axisType, fieldsConfig }, config[axisType]);\n        });\n        return newAxes;\n    }\n\n    /**\n     *\n     *\n     * @static\n     *\n     * @memberof RetinalEncoder\n     */\n    static type () {\n        return 'retinal';\n    }\n\n    /**\n     *\n     *\n     * @param {*} fields\n     * @param {*} userLayerConfig\n     *\n     * @memberof RetinalEncoder\n     */\n    getLayerConfig (encodingConfigs, userLayerConfig) {\n        const layerConfig = [];\n        userLayerConfig.forEach((e) => {\n            const config = e;\n            [COLOR, SHAPE, SIZE].forEach((axis) => {\n                if (encodingConfigs[axis] && encodingConfigs[axis].field) {\n                    const def = config.def;\n                    if (config.def instanceof Array) {\n                        def.forEach((conf) => {\n                            conf.encoding = conf.encoding || {};\n                            !conf.encoding[axis] && (conf.encoding[axis] = {});\n                            conf.encoding[axis].field = encodingConfigs[axis].field;\n                        });\n                    } else {\n                        def.encoding = def.encoding || {};\n                        !def.encoding[axis] && (def.encoding[axis] = {});\n                        def.encoding[axis].field = encodingConfigs[axis].field;\n                    }\n                }\n            });\n            layerConfig.push(config);\n        });\n        return layerConfig;\n    }\n\n    /**\n     *\n     *\n     * @param {*} context\n     *\n     * @memberof RetinalEncoder\n     */\n    setCommonDomain (context) {\n        const { domains, axes, encoding } = context;\n\n        Object.entries(encoding).forEach((enc) => {\n            if (enc[1] && enc[1].field) {\n                const encType = enc[0];\n                const field = enc[1].field;\n\n                if (field) {\n                    axes[encType].forEach((axis) => {\n                        const domain = domains[field];\n                        !enc[1].domain && axis.updateDomain(domain);\n                    });\n                }\n            }\n        });\n        return axes;\n    }\n}\n","import { Store, FieldType } from 'muze-utils';\nimport { DATA_UPDATE_COUNTER } from '../enums/defaults';\nimport { Variable } from '../variable';\nimport { PolarEncoder, CartesianEncoder } from '../encoder';\nimport {\n    DIMENSION,\n    MEASURE,\n    ORDINAL,\n    LINEAR,\n    ROW,\n    COLUMN,\n    COL,\n    LEFT,\n    RIGHT,\n    TOP,\n    BOTTOM,\n    COLOR,\n    SIZE,\n    TEMPORAL,\n    SHAPE,\n    INTERACTION,\n    GRID_LINES,\n    GRID_BANDS,\n    HEADER,\n    FACET,\n    X,\n    Y,\n    POLAR\n} from '../enums/constants';\n\n/**\n * Creates an instance of a store which contains the arguments to make the class reactive\n *\n * @return {Object} instance of store\n * @memberof VisualGroup\n */\nexport const initStore = () => new Store({\n    [DATA_UPDATE_COUNTER]: DATA_UPDATE_COUNTER\n});\n\n/**\n *\n *\n * @param {*} arr\n */\nexport const isDistributionEqual = arr => [...arr[0], ...arr[1]].reduce((isEqual, row) => {\n    const rowType = row.type();\n\n    if (rowType === MEASURE || rowType === TEMPORAL) {\n        isEqual = true;\n    }\n    return isEqual;\n}, false);\n\n/**\n *\n *\n */\nexport const initializeCacheMaps = () => ({\n    cellMap: new Map(),\n    xAxesMap: new Map(),\n    yAxesMap: new Map(),\n    entryCellMap: new Map(),\n    exitCellMap: new Map()\n});\n\n/**\n *\n *\n * @param {*} axisName\n * @param {*} id\n */\nexport const getAxisKey = (axisName, ...params) => `${axisName}-axis-${params.join('-')}`;\n\n/**\n *\n *\n * @param {*} rowId\n * @param {*} columnId\n */\nexport const getCellKey = (rowId, columnId) => `cell-${rowId}-${columnId}`;\n\n/**\n *\n *\n * @param {*} config\n *\n */\nexport const extractUnitConfig = (config) => {\n    const unitConfig = {};\n    const attrNames = [INTERACTION, GRID_LINES, GRID_BANDS];\n\n    attrNames.forEach((attr) => {\n        if (config[attr] !== undefined) {\n            unitConfig[attr] = config[attr];\n        }\n    });\n    return unitConfig;\n};\n\n/**\n *\n *\n * @param {*} headers\n * @param {*} index\n * @param {*} rowLength\n *\n * @memberof MatrixResolver\n */\nexport const getHeaderText = (headers, index, rowLength) => {\n    let header = '';\n\n    if (index === rowLength - 1 && headers.length > rowLength) {\n        for (let i = index; i < headers.length - 1; i++) {\n            header += `${headers[i].toString()} / `;\n        }\n        header += headers[headers.length - 1].toString();\n        return header;\n    } else if (headers[index]) {\n        return headers[index].toString();\n    }\n    return '';\n};\n\n/**\n *\n *\n * @param {*} fields\n * @param {*} fieldHeaders\n * @param {*} TextCell\n * @param {*} labelManager\n *\n */\nexport const headerCreator = (fields, fieldHeaders, TextCell, { classPrefix, labelManager }) => {\n    const headers = fields.length > 0 ? fields[0].map((cell, i) => new TextCell({\n        type: HEADER,\n        className: `${classPrefix}-grid-headers`\n    }, {\n        labelManager\n    }).source(getHeaderText(fieldHeaders, i, fields[0].length))\n                    .config({ show: cell.config().show })) : [];\n    return headers;\n};\n\n/**\n *\n *\n * @param {*} variable\n * @param {*} allFields\n *\n */\nexport const findInGroup = (variable, allFields) => {\n    let channel = null;\n\n    [COLOR, SIZE, SHAPE].forEach((e) => {\n        if (this.store.get(e) && variable === this.store.get(e)[0]) {\n            channel = e;\n        }\n    });\n\n    if (channel) {\n        return { channel };\n    }\n    [ROW, COL].forEach((facetType) => {\n        allFields[`${facetType}Facets`].forEach((e) => {\n            if (e.toString() === variable) {\n                channel = { channel: FACET, type: facetType === COL ? COLUMN : ROW };\n            }\n        });\n    });\n\n    if (channel) {\n        return channel;\n    }\n\n    [ROW, COL].forEach((projType) => {\n        allFields[`${projType}Projections`].forEach((e) => {\n            e.forEach((m) => {\n                if (m.toString() === variable) {\n                    channel = projType === COL ? X : Y;\n                }\n            });\n        });\n    });\n\n    if (channel) {\n        return { channel };\n    }\n    return null;\n};\n\n/**\n *\n *\n * @param {*} datamodel\n * @param {*} field\n */\nexport const getAxisType = (fieldsConfig, field) => {\n    let fieldType = ORDINAL;\n\n    if (field && fieldsConfig[field].def.type !== DIMENSION) {\n        fieldType = LINEAR;\n    }\n    return fieldType;\n};\n\n/**\n *\n *\n * @param {*} datamodel\n * @param {*} fieldName\n *\n */\nexport const retriveDomainFromData = (datamodel, fieldName) => {\n    const field = datamodel.getFieldspace().fields.find(d => d.name() === fieldName.toString());\n    return field.domain();\n};\n\n/**\n *\n *\n * @memberof MatrixResolver\n */\nexport const mutateAxesFromMap = (cacheMaps, axes) => {\n    let xAxes = null;\n    let yAxes = null;\n    const {\n        xAxesMap,\n        yAxesMap\n    } = cacheMaps;\n    const {\n        x: xAxisSet,\n        y: yAxisSet\n    } = axes;\n\n    xAxisSet && xAxisSet.forEach((axisId) => {\n        const xAxis = xAxesMap.get(axisId);\n        xAxes = xAxes || [];\n        xAxes.push(xAxis);\n    });\n\n    yAxisSet && yAxisSet.forEach((axisId) => {\n        const yAxis = yAxesMap.get(axisId);\n        yAxes = yAxes || [];\n        yAxes.push(yAxis);\n    });\n\n    return {\n        xAxes, yAxes\n    };\n};\n\n/**\n *\n *\n * @param {*} layers\n *\n */\nexport const getEncoder = (layers) => {\n    let encoder = new CartesianEncoder();\n\n    if (layers.length) {\n        // Figuring out the kind of layers the group will have\n        encoder = layers.every(e => e.mark === 'arc') ? new PolarEncoder() : encoder;\n    }\n    return encoder;\n};\n\n/**\n *\n *\n * @param {*} type\n * @param {*} fields\n * @param {*} userAxisFromConfig\n *\n */\nexport const getHeaderAxisFrom = (type, fields, userAxisFromConfig) => {\n    let axisFrom = userAxisFromConfig[type];\n    let headerFrom = '';\n    const options = type === ROW ? [LEFT, RIGHT] : [BOTTOM, TOP];\n    const [firstField, secondField] = fields;\n    const firstFieldType = i => (firstField.length ? firstField[i].type() : null);\n    const secondFieldType = i => (secondField.length ? secondField[i].type() : null);\n\n    if (firstFieldType(firstField.length - 1) === DIMENSION && secondFieldType(0) === DIMENSION) {\n        headerFrom = axisFrom ? options[1 - options.indexOf(axisFrom)] : options[1];\n\n        if (type === COLUMN && (firstField[firstField.length - 1].toString() === secondField[0].toString())) {\n            axisFrom = TOP;\n        } else {\n            axisFrom = axisFrom || options[0];\n        }\n    } else if (secondFieldType(secondField.length - 1) === DIMENSION) {\n        headerFrom = type === ROW ? RIGHT : BOTTOM;\n        axisFrom = type === ROW ? RIGHT : BOTTOM;\n    } else {\n        headerFrom = type === ROW ? LEFT : TOP;\n        axisFrom = type === ROW ? LEFT : TOP;\n    }\n    if (firstFieldType(firstField.length - 1) === MEASURE && secondFieldType(0) === MEASURE) {\n        axisFrom = type === ROW ? LEFT : TOP;\n    } else if (secondFieldType(0) === MEASURE) {\n        axisFrom = type === ROW ? RIGHT : BOTTOM;\n    } else if (firstFieldType(firstField.length - 1) === MEASURE) {\n        axisFrom = type === ROW ? LEFT : TOP;\n    }\n    return [headerFrom, axisFrom];\n};\n\n/**\n *\n *\n * @param {*} type\n * @param {*} fields\n * @param {*} layers\n *\n * @memberof MatrixResolver\n */\nexport const setFacetsAndProjections = (context, fieldInfo, encoder) => {\n    const {\n        fields,\n        type\n    } = fieldInfo;\n    const { facets, projections } = encoder.simpleEncoder.getFacetsAndProjections(fields, type);\n\n    context.facets({ [`${type}Facets`]: facets });\n    context.projections({ [`${type}Projections`]: projections });\n\n    return { facets, projections, fields };\n};\n\nconst getRowBorders = (left, right) => {\n    const borders = {};\n    borders.top = false;\n    borders.bottom = false;\n    if (left.length > 1 || right.length > 1) {\n        borders.top = true;\n        borders.bottom = true;\n    }\n    return borders;\n};\n\nconst getColumnsBorders = (top, bottom) => {\n    const borders = {};\n    borders.left = false;\n    borders.right = false;\n    if (top.length || bottom.length) {\n        if ((top[0] && top[0].length > 1) || (bottom[0] && bottom[0].length > 1)) {\n            borders.left = true;\n            borders.right = true;\n        }\n    }\n    return borders;\n};\n\nconst getValueBorders = (rows, columns) => {\n    const borders = { top: true, left: true, bottom: true, right: true };\n    const borderTypeRow = [LEFT, RIGHT];\n    const borderTypeCol = [TOP, BOTTOM];\n    rows.forEach((e, i) => {\n        if (e[0] && e[0].length) {\n            borders[borderTypeRow[i]] = true;\n        } else {\n            borders[borderTypeRow[i]] = false;\n        }\n    });\n    columns.forEach((e, i) => {\n        if (e.length) {\n            borders[borderTypeCol[i]] = true;\n        } else {\n            borders[borderTypeCol[i]] = false;\n        }\n    });\n\n    return borders;\n};\n\nexport const getBorders = (matrices, encoder) => {\n    let showRowBorders = { top: false, bottom: false };\n    let showColBorders = { left: false, right: false };\n    let showValueBorders = { top: false, bottom: false, left: false, right: false };\n    const {\n        rows,\n        columns,\n        values: valueMatrix\n    } = matrices;\n    const [leftRows, rightRows] = rows;\n    const [topColumns, bottomColumns] = columns;\n    const {\n        rowDimensions,\n        columnDimensions,\n        rowTemporalFields,\n        columnTemporalFields,\n        columnMeasures,\n        rowMeasures\n    } = encoder.fieldInfo();\n    const allDimensionLength = rowDimensions.length + columnDimensions.length;\n    const allMeasuresLength = rowMeasures.length + columnMeasures.length;\n    const allTemporalFieldsLength = rowTemporalFields.length + columnTemporalFields.length;\n\n    if (encoder.constructor.type() === POLAR) {\n        if (!allDimensionLength) {\n            return { showRowBorders, showColBorders, showValueBorders };\n        }\n    } else if (!allMeasuresLength && !allTemporalFieldsLength && allDimensionLength <= 2) {\n        return { showRowBorders, showColBorders, showValueBorders };\n    }\n\n    showRowBorders = getRowBorders(leftRows, rightRows);\n    showColBorders = getColumnsBorders(topColumns, bottomColumns);\n    showValueBorders = getValueBorders([leftRows, rightRows], [topColumns, bottomColumns]);\n\n    if (valueMatrix.length > 1) {\n        showValueBorders.top = true;\n        showValueBorders.bottom = true;\n    }\n    if (valueMatrix.length && valueMatrix[0].length > 1) {\n        showValueBorders.left = true;\n        showValueBorders.right = true;\n    }\n    return { showRowBorders, showColBorders, showValueBorders };\n};\n\nexport const getFieldsFromSuppliedLayers = (suppliedLayerConfig, fieldsConfig) => {\n    let fields = [];\n    const encodingArr = suppliedLayerConfig.map(conf => (conf.encoding || {}));\n    fields = [...fields, [].concat(...encodingArr.map(enc => Object.values(enc).map(d => d.field)))];\n    fields = fields.filter(field => fieldsConfig[field] && fieldsConfig[field].def.type === FieldType.DIMENSION);\n    return fields;\n};\n\nexport const extractFields = (facetsAndProjections, layerFields) => {\n    const fields = Object.values(facetsAndProjections).map((arr) => {\n        const flattenArray = [].concat(...arr);\n        return [].concat(...flattenArray.map((field) => {\n            if (field instanceof Variable) {\n                return field.getMembers();\n            }\n            return field;\n        }));\n    });\n    return [].concat(...fields, ...layerFields);\n};\n","import { BEHAVIOURS, ACTIONS } from '@chartshq/muze-firebolt';\n\nexport const actionBehaviourMap = {\n    [ACTIONS.DRAG]: {\n        behaviours: [BEHAVIOURS.BRUSH],\n        touch: false\n    },\n    [ACTIONS.HOVER]: {\n        behaviours: [BEHAVIOURS.HIGHLIGHT]\n    },\n    [ACTIONS.LONGTOUCH]: {\n        behaviours: [BEHAVIOURS.SELECT],\n        touch: true\n    },\n    [ACTIONS.TOUCHDRAG]: {\n        behaviours: [BEHAVIOURS.BRUSH],\n        touch: true\n    },\n    [ACTIONS.CLICK]: {\n        behaviours: [BEHAVIOURS.SELECT],\n        touch: false\n    }\n};\n","import {\n    FieldType,\n    getDependencyOrder,\n    getObjProp,\n    defaultValue,\n    objectIterator,\n    unionDomain,\n    makeElement,\n    DimensionSubtype,\n    toArray,\n    MeasureSubtype,\n    getNearestValue\n} from 'muze-utils';\nimport { layerFactory } from '@chartshq/visual-layer';\n\nexport const getDimensionMeasureMap = (layers, fieldsConfig) => {\n    const retinalEncodingsAndMeasures = {};\n\n    layers.forEach((layer) => {\n        const {\n            colorField,\n            sizeField,\n            shapeField,\n            xField,\n            yField\n        } = layer.encodingFieldsInf();\n        const measures = [xField, yField].filter(field => fieldsConfig[field] && fieldsConfig[field].def.type ===\n            FieldType.MEASURE);\n        [colorField, sizeField, shapeField].forEach((field) => {\n            if (fieldsConfig[field] && fieldsConfig[field].def.type === FieldType.DIMENSION) {\n                !retinalEncodingsAndMeasures[field] && (retinalEncodingsAndMeasures[field] = []);\n                retinalEncodingsAndMeasures[field].push(...measures);\n            }\n        });\n    });\n\n    for (const key in retinalEncodingsAndMeasures) {\n        if ({}.hasOwnProperty.call(retinalEncodingsAndMeasures, key)) {\n            retinalEncodingsAndMeasures[key] = [...new Set(retinalEncodingsAndMeasures[key])];\n        }\n    }\n    return retinalEncodingsAndMeasures;\n};\n\nexport const transformDataModels = (transform, dataModel) => {\n    const dataModels = {};\n    for (const key in transform) {\n        if ({}.hasOwnProperty.call(transform, key)) {\n            const transformVal = transform[key];\n            dataModels[key] = transformVal(dataModel);\n        }\n    }\n\n    return dataModels;\n};\n\nexport const getLayerFromDef = (context, definition, existingLayer, namespaces) => {\n    let instances = existingLayer;\n    const dependencies = context._layerDeps;\n    const metaInf = context.metaInf();\n    if (!existingLayer) {\n        instances = layerFactory.getLayerInstance(definition);\n        toArray(instances).forEach((inst, i) => {\n            inst.metaInf({\n                unitRowIndex: metaInf.rowIndex,\n                unitColIndex: metaInf.colIndex,\n                namespace: namespaces[i]\n            });\n            inst.store(context.store());\n        });\n    }\n    const layers = {};\n    const instanceArr = toArray(instances);\n    definition = toArray(definition);\n    definition.reduce((acc, def, idx) => {\n        const instance = instanceArr[idx];\n        instance.config(def);\n        instance.valueParser(context.valueParser());\n        instance.dependencies(dependencies);\n        instance.dataProps({\n            timeDiffs: context._timeDiffs\n        });\n        if (def.name) {\n            instance.alias(def.name);\n        }\n        layers[instance.alias()] = instance;\n        return acc;\n    }, {});\n    return layers;\n};\n\nexport const resolveEncodingTransform = (layerInst, store) => {\n    const encodingTransform = layerInst.config().encodingTransform || {};\n    const resolvable = encodingTransform.resolvable;\n    let depArr = [];\n    if (resolvable) {\n        const resolved = resolvable(store);\n        depArr = resolved.depArr;\n        layerInst.encodingTransform(resolved.fn);\n    } else if (encodingTransform instanceof Function) {\n        layerInst.encodingTransform(encodingTransform);\n    }\n    return depArr;\n};\n\nexport const createLayers = (context, layerDefinitions) => {\n    const layersMap = context._layersMap;\n    const markSet = {};\n    const store = {\n        layers: {},\n        components: {\n            unit: context\n        }\n    };\n    let layerIndex = 0;\n    let layers = layerDefinitions.sort((a, b) => a.order - b.order).reduce((layersArr, layerDef, i) => {\n        const mark = layerDef.mark;\n        const definition = layerDef.def;\n        const markId = `${mark}-${i}`;\n        const defArr = toArray(definition);\n        defArr.forEach((def) => {\n            def.order = layerDef.order + layerIndex;\n        });\n        layerIndex += defArr.length;\n        const instances = getLayerFromDef(context, definition, layersMap[markId], i);\n        store.layers = Object.assign(store.layers, instances);\n        const instanceValues = Object.values(instances);\n        layersArr = layersArr.concat(...instanceValues);\n        layersMap[markId] = instanceValues;\n        markSet[markId] = markId;\n        return layersArr;\n    }, []);\n    store.unit = context;\n    const layerdeps = {};\n    layers.forEach((layer) => {\n        const depArr = resolveEncodingTransform(layer, store);\n        layerdeps[layer.alias()] = depArr;\n    });\n\n    const order = getDependencyOrder(layerdeps);\n    layers = order.map(name => store.layers[name]);\n    for (const key in layersMap) {\n        if (!(key in markSet)) {\n            layersMap[key].forEach(layer => layer.remove());\n            delete layersMap[key];\n        }\n    }\n    return layers;\n};\n\nexport const sanitizeLayerDef = (layerDefs) => {\n    const sanitizedDefs = [];\n    layerDefs.forEach((layerDef, i) => {\n        const def = layerDef.def;\n        const mark = layerDef.mark;\n        if (!def) {\n            const sConf = layerFactory.getSerializedConf(layerDef.mark, layerDef);\n            if (!sConf.name) {\n                sConf.name = `${mark}-${i}`;\n            }\n            sanitizedDefs.push({\n                mark: layerDef.mark,\n                def: sConf\n            });\n        } else {\n            if (!def.name) {\n                def.name = `${mark}-${i}`;\n            }\n            sanitizedDefs.push(layerDef);\n        }\n    });\n    return sanitizedDefs;\n};\n\nexport const attachDataToLayers = (layers, dm, transformedDataModels) => {\n    layers.forEach((layer) => {\n        const dataSource = layer.config().source;\n        const dataModel = dataSource instanceof Function ? dataSource(dm) :\n            (transformedDataModels[dataSource] || dm);\n        if (layer.data() !== dataModel) {\n            layer.data(dataModel);\n        }\n    });\n};\n\nexport const attachAxisToLayers = (axes, layers, layerAxisIndex) => {\n    layers.forEach((layer) => {\n        const layerId = layer.id();\n        const axesObj = {};\n\n        objectIterator(axes, (key) => {\n            const axisInf = layerAxisIndex[layerId];\n            if (axisInf) {\n                axes[key] && (axesObj[key] = axes[key][axisInf[key] || 0]);\n            }\n        });\n        Object.keys(axesObj).length && layer.axes(axesObj);\n    });\n};\n\nexport const getLayerAxisIndex = (layers, fields) => {\n    const layerAxisIndex = {};\n    layers.forEach((layer) => {\n        const { axis, encoding } = layer.config();\n        const id = layer.id();\n        ['x', 'y'].forEach((type) => {\n            let index;\n            const field = defaultValue(getObjProp(axis, type), encoding[type] && encoding[type].field);\n            if (fields[type]) {\n                index = fields[type].findIndex(fieldInst => fieldInst.getMembers().indexOf(field) !== -1);\n            } else {\n                index = 0;\n            }\n            !layerAxisIndex[id] && (layerAxisIndex[id] = {});\n            layerAxisIndex[id][type] = index;\n        });\n    });\n    return layerAxisIndex;\n};\n\nexport const unionDomainFromLayers = (layers, axisFields, layerAxisIndex, fieldsConfig) => {\n    let domains = {};\n    layers = layers.filter(layer => layer.getDataDomain() !== null);\n    layers.forEach((layer) => {\n        let domainValues = {};\n        const config = layer.config();\n        const encoding = config.encoding;\n        const layerDomain = layer.getDataDomain();\n        const layerId = layer.id();\n\n        if (layerDomain !== null && config.calculateDomain !== false) {\n            domainValues = Object.entries(layerDomain);\n            domains = domainValues.reduce((fieldDomain, domain) => {\n                const encodingType = domain[0];\n                const field = encoding[encodingType].field;\n                const axisIndex = layerAxisIndex[layerId][encodingType];\n                if (encodingType in axisFields) {\n                    const fieldStr = `${axisFields[encodingType][axisIndex]}`;\n                    fieldDomain[fieldStr] = fieldDomain[fieldStr] || [];\n                    fieldDomain[fieldStr] = unionDomain(([fieldDomain[fieldStr], domain[1]]),\n                        fieldsConfig[field].def.subtype ? fieldsConfig[field].def.subtype :\n                                fieldsConfig[field].def.type);\n                } else {\n                    fieldDomain[encodingType] = domain[1];\n                }\n                return fieldDomain;\n            }, domains);\n        }\n    });\n    return domains;\n};\n\nexport const renderLayers = (context, container, layers, measurement) => {\n    context._lifeCycleManager.notify({ client: layers, action: 'beforedraw', formalName: 'layer' });\n    const config = context.config();\n    const classPrefix = config.classPrefix;\n    const orderedLayers = context.layers().sort((a, b) => a.config().order - b.config().order);\n    const layerParentGroup = makeElement(container, 'g', [1], `${classPrefix}-layer-group`);\n    const layerDepOrder = getDependencyOrder(context._layerDepOrder);\n    const groups = {};\n    makeElement(layerParentGroup, 'g', orderedLayers, null, {\n        update: (group, layer) => {\n            groups[layer.alias()] = {\n                group,\n                layer\n            };\n        }\n    });\n    const layerSeq = layerDepOrder.map(name => groups[name]);\n    layerSeq.forEach((o) => {\n        const layer = o.layer;\n        const group = o.group;\n        layer.measurement(measurement);\n        layer.dataProps({\n            timeDiffs: context._timeDiffs\n        });\n        layer.config().render !== false && layer.mount(group.node());\n    });\n    return this;\n};\n\nexport const getNearestDimensionalValue = (context, position) => {\n    const fields = context.fields();\n    if (!fields.x.length || !fields.y.length) {\n        return null;\n    }\n    const data = context.data();\n    const axes = context.axes();\n    const fieldsConfig = data.getFieldsConfig();\n    const xField = getObjProp(fields, 'x', 0).getMembers()[0];\n    const yField = getObjProp(fields, 'y', 0).getMembers()[0];\n    const xFieldType = fieldsConfig[xField].def.subtype;\n    const yFieldType = fieldsConfig[yField].def.subtype;\n\n    const entryVal = [['x', xFieldType, xField], ['y', yFieldType, yField]].find(entry =>\n        entry[1] === DimensionSubtype.CATEGORICAL || entry[1] === DimensionSubtype.TEMPORAL);\n\n    if (!entryVal || (xFieldType !== MeasureSubtype.CONTINUOUS && yFieldType !== MeasureSubtype.CONTINUOUS)) {\n        return null;\n    }\n    const field = entryVal[2];\n    const index = fieldsConfig[field].index;\n    let key = axes[entryVal[0]][0].invert(position[entryVal[0]]);\n    if (entryVal[1] === DimensionSubtype.TEMPORAL) {\n        const filterData = [...new Set(data.getData().data.map(d => d[index]))];\n        key = getNearestValue(filterData, key);\n    }\n\n    return key !== undefined ? [[field], [key]] : null;\n};\n\nexport const getLayersBy = (layers, searchBy, value) => layers.filter((layer) => {\n    const name = searchBy === 'type' ? layer.constructor.formalName() : layer.alias();\n    return name === value;\n});\n\nexport const removeLayersBy = (layers, searchBy, value) => {\n    layers.filter((inst) => {\n        const name = searchBy === 'type' ? inst.config().mark : inst.alias();\n        if (name === value) {\n            inst.remove();\n            return false;\n        }\n        return true;\n    });\n};\n\nexport const createSideEffectGroup = (container, className) => makeElement(container, 'g', [1], className).node();\n\nexport const createRenderPromise = (unit) => {\n    const renderedPromise = unit._renderedPromise;\n    renderedPromise.then(() => {\n        unit._renderedPromise = new Promise((resolve) => {\n            unit._renderedResolve = resolve;\n        });\n        createRenderPromise(unit);\n    });\n};\n","export const CLASSPREFIX = 'muze';\nexport const IDFIELD = '__id__';\nexport const GRID_LINE_PARENT_GROUP_CLASS = 'grid-lines';\nexport const GRID_BAND_PARENT_GROUP_CLASS = 'grid-bands';\nexport const GRID_PARENT_GROUP = 'grid-parent-group';\nexport const BAND = 'band';\nexport const TICK = 'tick';\nexport const GRID_BAND = 'gridBands';\nexport const GRID_LINE = 'gridLines';\nexport const CONSOLIDATED = 'consolidated';\nexport const FRAGMENTED = 'fragmented';\nexport const FACET_BY_FIELDS = 'facetByFields';\nexport const RETINAL_FIELDS = 'retinalFields';\nexport const PARENT_ALIAS = 'parentAlias';\nexport const LAYERS = 'layers';\nexport const CACHED_DATA = 'cachedData';\nexport const STORE = 'store';\n","import { getObjProp, defaultValue, makeElement, DimensionSubtype, DataModel } from 'muze-utils';\nimport { ScaleType } from '@chartshq/muze-axis';\nimport { layerFactory, LAYER_TYPES } from '@chartshq/visual-layer';\nimport {\n    GRID_BAND,\n    GRID_LINE,\n    GRID_BAND_PARENT_GROUP_CLASS,\n    GRID_LINE_PARENT_GROUP_CLASS,\n    GRID_PARENT_GROUP\n} from '../enums/constants';\n\nconst { BAR_LAYER, TICK_LAYER } = LAYER_TYPES;\n\nconst LINEAR = ScaleType.LINEAR;\n\nconst getLayerDefinition = (context, axes, type, orientation) => {\n    let encoding;\n    const config = context.config();\n    const { classPrefix, gridLines, gridBands } = config;\n    const gridLineColor = gridLines.color;\n    const zeroLineColor = gridLines.zeroLineColor;\n    const defClassName = type === GRID_BAND ? gridBands.defClassName : gridLines.defClassName;\n    const gridBandColor = gridBands[orientation].color;\n    const axis = axes[orientation][0];\n    const isLinearScale = axis.constructor.type() === LINEAR;\n\n    if (type === GRID_BAND && isLinearScale) {\n        encoding = {\n            [orientation]: `${orientation}value`,\n            [`${orientation}0`]: `${orientation}value0`\n        };\n    } else {\n        encoding = {\n            [orientation]: isLinearScale ? `${orientation}value` : `${orientation}dim`\n        };\n    }\n    encoding.color = {\n        value: (data, i) => {\n            const isNegativeDomain = isLinearScale && axis.domain()[0] < 0;\n            if (type === GRID_BAND) {\n                return gridBandColor[i % 2];\n            }\n            return isNegativeDomain && data[orientation] === 0 ? zeroLineColor : gridLineColor;\n        }\n    };\n\n    return {\n        definition: {\n            defClassName: `${defClassName}-${orientation}`,\n            className: config.className,\n            name: orientation,\n            individualClassName: (data, i) => {\n                let className;\n                const isNegativeDomain = isLinearScale && axis.domain()[0] < 0;\n                if (isNegativeDomain && data.y === 0 && type !== GRID_BAND) {\n                    className = `${classPrefix}-axis-zero-line`;\n                } else {\n                    className = `${classPrefix}-grid-${type}-${orientation}-${i % 2}`;\n                }\n                return className;\n            },\n            [`pad${orientation.toUpperCase()}`]: type === GRID_BAND ? 0 : undefined,\n            encoding\n        },\n        axes: {\n            [orientation]: axis\n        },\n        interactive: false\n    };\n};\n\nconst getDefaultVisibilty = (show, axis) => {\n    if (axis.constructor.type() === LINEAR) {\n        return show;\n    }\n    return false;\n};\n\nexport const getGridLayerDefinitions = (context, config, type) => ['x', 'y'].map((axisType) => {\n    const axes = context.axes();\n    if (!axes[axisType]) {\n        return null;\n    }\n    const show = defaultValue(config[axisType] && config[axisType].show,\n        getDefaultVisibilty(config.show, axes[axisType][0]));\n\n    return show ? getLayerDefinition(context, axes, type, axisType) : null;\n}).filter(d => d !== null);\n\nexport const getGridLayerData = (axes, fields, fieldsConfig) => {\n    const gridData = {};\n    ['x', 'y'].forEach((type) => {\n        let ticks = axes[type][0].getTickValues();\n        const subtype = getObjProp(fieldsConfig, getObjProp(fields, type, 0).getMembers()[0], 'def', 'subtype');\n        const jsonData = [];\n        const schema = [\n            {\n                name: 'yvalue',\n                type: 'measure'\n            }, {\n                name: 'xvalue',\n                type: 'measure'\n            },\n            {\n                name: 'yvalue0',\n                type: 'measure'\n            }, {\n                name: 'xvalue0',\n                type: 'measure'\n            }, {\n                name: 'xdim',\n                type: 'dimension',\n                subtype\n            }, {\n                name: 'ydim',\n                type: 'dimension',\n                subtype\n            }\n        ];\n        const len = Math.max(ticks.length);\n        ticks = subtype === DimensionSubtype.TEMPORAL ? ticks.map(d => d.getTime()) : ticks;\n        for (let i = 0; i < len; i += 1) {\n            jsonData.push({\n                [`${type}value`]: ticks[i],\n                [`${type}value0`]: ticks[i + 1],\n                [`${type}dim`]: ticks[i],\n                [`${type}dim`]: ticks[i]\n            });\n        }\n        gridData[type] = new DataModel(jsonData, schema);\n    });\n    return gridData;\n};\n\n// @todo Use dataSelect method to reuse instances when the method is fixed. #110\nexport const createGridLines = (instances = {}, createFn, definitions, iteratorFn) => {\n    const map = {};\n    definitions.forEach((def) => {\n        const name = def.definition.name;\n        let instance = instances[name];\n        if (!instance) {\n            instances[name] = instance = createFn(def);\n        }\n        iteratorFn(instance, def, name);\n        map[name] = 1;\n    });\n    for (const key in instances) {\n        if (!(key in map)) {\n            instances[key].remove();\n            delete instances[key];\n        }\n    }\n    return instances;\n};\n\nexport const createGridLineLayer = (context) => {\n    const vuConf = context.config();\n    const metaInf = context.metaInf();\n    const store = context.store();\n    const timeDiffs = context._timeDiffs;\n    [GRID_BAND, GRID_LINE].forEach((type) => {\n        let mark;\n        let config;\n        if (type === GRID_BAND) {\n            mark = BAR_LAYER;\n            config = vuConf.gridBands;\n        } else {\n            mark = TICK_LAYER;\n            config = vuConf.gridLines;\n        }\n        const definitions = getGridLayerDefinitions(context, config, type);\n\n        const sel = `_${type}Selection`;\n        context[sel] = createGridLines(context[sel], () => {\n            const inst = layerFactory.getLayerInstance({ mark });\n            inst.dependencies(context._layerDeps);\n            return inst;\n        }, definitions, (layer, atomicDef, key) => {\n            const definition = atomicDef.definition;\n            const sConf = layerFactory.getSerializedConf(mark, definition);\n            const axesObj = atomicDef.axes;\n            layer.metaInf({\n                unitRowIndex: metaInf.rowIndex,\n                unitColIndex: metaInf.colIndex,\n                namespace: `${metaInf.namespace}${type}${key}`\n            })\n                .store(store)\n                .config(sConf)\n                .dataProps({\n                    timeDiffs\n                })\n                .axes(axesObj);\n        });\n        context[`_${type}`] = Object.values(context[sel]);\n    });\n};\n\nexport const attachDataToGridLineLayers = (context) => {\n    const axes = context.axes();\n    const measurement = {\n        width: context.width(),\n        height: context.height()\n    };\n    const gridLines = context._gridLines;\n    const gridBands = context._gridBands;\n    const gridLayerData = getGridLayerData(axes, context.fields(), context.data().getFieldsConfig());\n    [].concat(...gridBands, ...gridLines).forEach((inst) => {\n        inst.data(inst.axes().x ? gridLayerData.x : gridLayerData.y).measurement(measurement);\n    });\n};\n\nexport const renderGridLineLayers = (context, container) => {\n    const config = context.config();\n    const classPrefix = config.classPrefix;\n    const gridLines = context._gridLines;\n    const gridBands = context._gridBands;\n\n    const gridLineParentGroup = makeElement(container, 'g', [1], `${classPrefix}-${GRID_PARENT_GROUP}`);\n    [[gridLines, `${classPrefix}-${GRID_LINE_PARENT_GROUP_CLASS}`],\n            [gridBands, `${classPrefix}-${GRID_BAND_PARENT_GROUP_CLASS}`]].forEach((entry) => {\n                const [instances, parentGroupClass] = entry;\n                const mountPoint = makeElement(gridLineParentGroup, 'g', [1], `.${parentGroupClass}`);\n                const className = `${parentGroupClass}-group`;\n                makeElement(mountPoint, 'g', instances, `.${className}`, {\n                    update: (group, instance) => {\n                        instance.dataProps({ timeDiffs: context._timeDiffs }).mount(group.node());\n                    }\n                });\n            });\n};\n","import { CLASSPREFIX, CONSOLIDATED } from './enums/constants';\n\n/**\n * Returns the default configuration of the visual unit\n * @return {Object} Default configuration of visual unit\n */\nexport const defaultConfig = {\n    classPrefix: CLASSPREFIX,\n    defClassName: 'visual-unit',\n    className: '',\n    trackerClassName: 'visual-unit-tracker',\n    gridLines: {\n        defClassName: 'axis-grid-lines',\n        className: '',\n        show: true,\n        color: '#efefef',\n        zeroLineColor: '#b6b6b6'\n    },\n    gridBands: {\n        defClassName: 'axis-grid-bands',\n        className: '',\n        show: false,\n        y: {\n            color: ['#fff', '#fbfbfb']\n        },\n        x: {\n            color: ['#fff', '#f9f9f9']\n        }\n    },\n    arcLayerClassName: 'layer-arc',\n    interaction: {\n        tooltip: {\n            mode: CONSOLIDATED\n        }\n    },\n    sideEffectClassName: 'side-effect-container'\n};\n","import { mergeRecursive, DataModel } from 'muze-utils';\nimport { defaultConfig } from './default-config';\nimport { CONFIG, LAYERDEFS, TRANSFORM, DATA, LAYERS, TRANSFORMEDDATA } from './enums/reactive-props';\nimport { sanitizeLayerDef } from './helper';\n\nexport default {\n    [CONFIG]: {\n        value: null,\n        meta: {\n            sanitization: (config, oldConfig) => (\n                mergeRecursive(oldConfig || mergeRecursive({}, defaultConfig), config)\n            )\n        }\n    },\n    [LAYERDEFS]: {\n        value: null,\n        meta: {\n            preset: layerDef => sanitizeLayerDef(layerDef)\n        }\n    },\n    [TRANSFORM]: {\n        value: null\n    },\n    [LAYERS]: {\n        value: null\n    },\n    [DATA]: {\n        value: null,\n        meta: {\n            typeCheck: d => d instanceof DataModel,\n            preset: (data, context) => {\n                if (context._cache) {\n                    const cachedData = context.cachedData();\n                    context.cachedData([...cachedData, data]);\n                } else {\n                    const oldData = context.data();\n                    oldData && oldData.unsubscribe('propagation');\n                    context.cachedData([data]);\n                }\n            }\n        }\n    },\n    [TRANSFORMEDDATA]: {\n        value: null,\n        meta: {\n            addAsMethod: false\n        }\n    }\n};\n","export const CONFIG = 'config';\nexport const DATA = 'data';\nexport const AXES = 'axes';\nexport const LAYERDEFS = 'layerDef';\nexport const WIDTH = 'width';\nexport const HEIGHT = 'height';\nexport const MOUNT = 'mount';\nexport const TRANSFORM = 'transform';\nexport const TRANSFORMEDDATA = 'transformedData';\nexport const DATADOMAIN = 'dataDomain';\nexport const FIELDS = 'fields';\nexport const LAYERAXISINDEX = 'layerAxisIndex';\nexport const LAYERS = 'layers';\nexport const DOMAIN = 'domain';\n\n","import { STATE_NAMESPACES, temporalFields } from 'muze-utils';\nimport * as PROPS from './enums/reactive-props';\nimport {\n    transformDataModels,\n    getDimensionMeasureMap,\n    attachDataToLayers,\n    attachAxisToLayers,\n    unionDomainFromLayers\n} from './helper';\n\nimport { createGridLineLayer, attachDataToGridLineLayers } from './helper/grid-lines';\n\nconst removeExitLayers = (layerDefs, context) => {\n    const layersMap = context._layersMap;\n    const markSet = {};\n    layerDefs.forEach((layerDef, i) => {\n        const id = `${layerDef.mark}-${i}`;\n        markSet[id] = true;\n    });\n\n    for (const key in layersMap) {\n        if (!(key in markSet)) {\n            layersMap[key].forEach(layer => layer.remove());\n            delete layersMap[key];\n        }\n    }\n};\n\nexport const calculateDomainListener = (context, namespace) => () => {\n    const domain = unionDomainFromLayers(context.layers(), context.fields(), context._layerAxisIndex,\n        context.data().getFieldsConfig());\n    context.store().commit(`${STATE_NAMESPACES.UNIT_GLOBAL_NAMESPACE}.${PROPS.DOMAIN}.${namespace}`, domain);\n};\n\nexport const listenerMap = (context, namespace, metaInf) => ([\n    {\n        type: 'registerImmediateListener',\n        props: [`${namespace.local}.${PROPS.CONFIG}`],\n        listener: ([, config]) => {\n            config && context.firebolt().config(config.interaction);\n        }\n    },\n    {\n        type: 'registerImmediateListener',\n        props: [`${namespace.local}.${PROPS.LAYERDEFS}`],\n        listener: ([, layerDefs]) => {\n            const fieldsVal = context.fields();\n            if (layerDefs && fieldsVal) {\n                removeExitLayers(layerDefs, context);\n                const axes = context.axes();\n                if (axes.x || axes.y) {\n                    const props = [`${STATE_NAMESPACES.GROUP_GLOBAL_NAMESPACE}.domain.y.${metaInf.rowIndex}0`,\n                        `${STATE_NAMESPACES.GROUP_GLOBAL_NAMESPACE}.domain.x.${metaInf.colIndex}0`];\n                    const store = context.store();\n                    const listenerInf = {\n                        namespace: namespace.local,\n                        key: 'gridLineListener'\n                    };\n                    store.unsubscribe(listenerInf);\n                    store.registerChangeListener(props, () => {\n                        attachDataToGridLineLayers(context);\n                    }, false, listenerInf);\n                }\n\n                context.addLayer(layerDefs);\n                ['x', 'y'].forEach((type) => {\n                    context.axes[type] && context.axes[type].forEach((axis) => {\n                        axis.config({\n                            adjustRange: context.layers().some(inst => inst.hasPlotSpan())\n                        });\n                    });\n                });\n                context._lifeCycleManager.notify({\n                    client: context.layers(),\n                    action: 'initialized',\n                    formalName: 'layer'\n                });\n            }\n        }\n    },\n    {\n        type: 'registerImmediateListener',\n        props: [`${namespace.local}.${PROPS.DATA}`],\n        listener: ([, dataModel]) => {\n            const axesObj = context.axes();\n            const timeDiffs = {};\n            const timeDiffsByField = {};\n\n            Object.entries(temporalFields(dataModel)).forEach(([fieldName, fieldObj]) => {\n                timeDiffsByField[fieldName] = fieldObj.minimumConsecutiveDifference();\n            });\n\n            Object.entries(context.fields()).forEach(([type, [field]]) => {\n                if (field) {\n                    const timeDiff = timeDiffsByField[`${field}`];\n                    if (timeDiff) {\n                        timeDiffs[type] = timeDiff;\n                        axesObj[type].forEach(axis => axis.minDiff(timeDiff));\n                    }\n                }\n            });\n\n            context._timeDiffsByField = timeDiffsByField;\n            context._timeDiffs = timeDiffs;\n        }\n    },\n    {\n        type: 'registerImmediateListener',\n        props: [`${namespace.local}.${PROPS.CONFIG}`],\n        listener: () => {\n            createGridLineLayer(context);\n        }\n    },\n    {\n        type: 'registerImmediateListener',\n        props: [`${namespace.local}.${PROPS.DATA}`,\n            `${namespace.local}.${PROPS.TRANSFORM}`],\n        listener: ([, dataModel], [, transform]) => {\n            if (dataModel) {\n                const dataModels = transformDataModels(transform, dataModel);\n                context.store().commit(`${namespace.local}.${PROPS.TRANSFORMEDDATA}`, dataModels);\n            }\n        }\n    },\n    {\n        type: 'registerImmediateListener',\n        props: [`${namespace.local}.${PROPS.TRANSFORMEDDATA}`,\n            `${namespace.local}.${PROPS.LAYERS}`],\n        listener: ([, transformedData], [, layers]) => {\n            const layerAxisIndexVal = context._layerAxisIndex;\n            const axesVal = context.axes();\n            const dataModel = context.data();\n            if (transformedData && layers && axesVal && layerAxisIndexVal) {\n                context._lifeCycleManager.notify({ client: layers, action: 'beforeupdate', formalName: 'layer' });\n                const model = context.store().model;\n                layers.forEach(lyr => lyr.disableUpdate());\n                attachDataToLayers(layers, dataModel, transformedData);\n                model.lock();\n                layers.forEach((lyr) => {\n                    lyr.enableUpdate().domain(lyr._domain);\n                });\n                model.unlock();\n                context._dimensionMeasureMap = getDimensionMeasureMap(layers,\n                    dataModel.getFieldsConfig(), context.retinalFields());\n                attachAxisToLayers(axesVal, layers, layerAxisIndexVal);\n                context._lifeCycleManager.notify({ client: layers, action: 'updated', formalName: 'layer' });\n            }\n        }\n    }\n]);\n","import { FACET_BY_FIELDS, RETINAL_FIELDS, PARENT_ALIAS, LAYERS, CACHED_DATA } from './enums/constants';\n\nexport const PROPS = {\n    [FACET_BY_FIELDS]: {},\n    [RETINAL_FIELDS]: {},\n    [PARENT_ALIAS]: {},\n    [LAYERS]: {},\n    [CACHED_DATA]: {},\n    detailFields: {},\n    axes: {\n        defaultValue: {\n            x: [],\n            y: []\n        }\n    },\n    fields: {},\n    metaInf: {},\n    registry: {},\n    width: {},\n    height: {},\n    parentContainerInf: {},\n    valueParser: {\n        defaultValue: val => val\n    }\n};\n","import { CommonProps } from 'muze-utils';\nimport { SpawnableSideEffect } from '@chartshq/muze-firebolt';\nimport { DATA } from '../enums/reactive-props';\n\nexport const initSideEffects = (sideEffects, firebolt) => {\n    for (const key in sideEffects) {\n        if ({}.hasOwnProperty.call(sideEffects, key)) {\n            sideEffects[key] instanceof SpawnableSideEffect && sideEffects[key].drawingContext(() => {\n                const context = firebolt.context;\n                return context.getDrawingContext();\n            });\n            sideEffects[key].valueParser(firebolt.context.valueParser());\n        }\n    }\n};\n\nexport const clearActionHistory = (context) => {\n    const actionHistory = context._actionHistory;\n    for (const key in actionHistory) {\n        if (actionHistory[key].isMutableAction) {\n            delete context._actionHistory[key];\n        }\n    }\n};\n\nexport const dispatchQueuedSideEffects = (context) => {\n    const queuedSideEffects = context._queuedSideEffects;\n    Object.entries(queuedSideEffects).forEach((entry) => {\n        const sideEffect = entry[1];\n        context.dispatchSideEffect(sideEffect.name, ...sideEffect.params);\n    });\n    context._queuedSideEffects = {};\n};\n\nexport const registerListeners = (firebolt) => {\n    const context = firebolt.context;\n    const store = context.store();\n\n    store.registerImmediateListener([`local.units.${context.metaInf().namespace}.${DATA}`], (dataModel) => {\n        const dm = dataModel[1];\n\n        if (dm) {\n            firebolt.createSelectionSet(firebolt.context.data().getData().uids);\n            firebolt.initializeSideEffects();\n            const originalData = firebolt.context.cachedData()[0];\n            firebolt.attachPropagationListener(originalData);\n        }\n    });\n\n    store.registerChangeListener([`local.units.${context.metaInf().namespace}.${DATA}`], () => {\n        if (!firebolt.context.mount()) {\n            const originalData = firebolt.context.cachedData()[0];\n            originalData.unsubscribe('propagation');\n        }\n    });\n\n    context._layerDeps.throwback.registerChangeListener([CommonProps.ON_LAYER_DRAW],\n        ([, onlayerdraw]) => {\n            if (onlayerdraw) {\n                dispatchQueuedSideEffects(firebolt);\n                clearActionHistory(firebolt);\n            }\n        });\n};\n","import { DimensionSubtype } from 'muze-utils';\n\nconst getRangeFromData = (instance, selectionDataModel, propConfig) => {\n    let criteria;\n    const dataObj = selectionDataModel[0].getData();\n    const propCriteria = propConfig.payload.criteria;\n    const sourceIdentifiers = propConfig.sourceIdentifiers;\n    const schema = dataObj.schema;\n    const fieldMap = instance.data().getFieldsConfig();\n    const data = dataObj.data;\n    const isActionSourceSame = instance.id() === propConfig.sourceId;\n\n    if (isActionSourceSame) {\n        criteria = propCriteria;\n    } else {\n        criteria = (sourceIdentifiers !== null) ? schema.reduce((acc, obj, index) => {\n            let range;\n            const field = obj.name;\n            const fieldObj = fieldMap[field];\n            const type = fieldObj && (fieldObj.def.subtype ? fieldObj.def.subtype : fieldObj.def.type);\n            const isDimension = type === DimensionSubtype.CATEGORICAL;\n\n            if (!fieldObj) {\n                return acc;\n            }\n\n            if (!isDimension) {\n                range = [Math.min(...data.map(d => d[index])), Math.max(...data.map(d => d[index]))];\n            } else {\n                range = data.map(d => d[index]);\n            }\n            acc[field] = range;\n            return acc;\n        }, {}) : null;\n    }\n    return criteria;\n};\n\nexport const payloadGenerator = {\n    brush: (instance, selectionDataModel, propConfig) => {\n        const propPayload = propConfig.payload;\n        const criteria = getRangeFromData(instance, selectionDataModel, propConfig);\n        const payload = Object.assign({}, propPayload);\n        payload.criteria = criteria;\n        return payload;\n    },\n\n    __default: (instance, selectionDataModel, propConfig) => {\n        const propPayload = propConfig.payload;\n        const sourceIdentifiers = propConfig.sourceIdentifiers;\n        const dataObj = selectionDataModel[0].getData();\n        let schema = dataObj.schema;\n        const payload = Object.assign({}, propPayload);\n        schema = dataObj.schema;\n        const data = dataObj.data;\n        const sourceFields = schema.map(d => d.name);\n        payload.criteria = !sourceIdentifiers && selectionDataModel[0].isEmpty() ? null :\n            [sourceFields, ...data];\n        payload.sourceFields = sourceIdentifiers ? sourceIdentifiers.getSchema().map(d => d.name) : [];\n        return payload;\n    }\n};\n\n","import { isSimpleObject, FieldType, DataModel } from 'muze-utils';\n\nconst getModelWithFacetData = (dm, data) => {\n    const dataObj = dm.getData();\n    const schema1 = dataObj.schema;\n    const data1 = dataObj.data;\n    const jsonData = [];\n    const schema2 = data[0].map(d => ({\n        name: `${d}`,\n        type: FieldType.DIMENSION\n    }));\n    const data2 = data[1];\n\n    data1.forEach((d) => {\n        const tuple = {};\n        schema1.forEach((obj, i) => {\n            tuple[obj.name] = d[i];\n        });\n        schema2.forEach((obj, i) => {\n            tuple[obj.name] = data2[i];\n        });\n        jsonData.push(tuple);\n    });\n\n    return new DataModel(jsonData, [...schema1, ...schema2]);\n};\n\nexport const propagateValues = (instance, action, config = {}) => {\n    let propagationData;\n    const payload = config.payload;\n    const selectionSet = config.selectionSet;\n    const propagationFieldInf = config.propagationFields[action] || {};\n    const propagationFields = propagationFieldInf.fields || [];\n    const append = propagationFieldInf.append;\n    const criteria = payload.criteria;\n    const context = instance.context;\n    const dataModel = context.cachedData()[0];\n    const sourceId = context.id();\n    const sideEfffects = instance.sideEffects();\n    const behaviourEffectMap = instance._behaviourEffectMap;\n    const mergedModel = selectionSet.mergedEnter.model;\n    const fieldsConfig = dataModel.getFieldsConfig();\n    payload.sourceUnit = sourceId;\n    payload.action = action;\n    payload.sourceCanvas = context.parentAlias();\n    const propagationBehaviourMap = instance._propagationBehaviourMap;\n    const propagationBehaviour = propagationBehaviourMap[action] || action;\n\n    let propFields = [];\n    if (criteria === null) {\n        propagationData = null;\n    } else if (isSimpleObject(criteria)) {\n        propFields = Object.keys(criteria || {});\n        propagationData = mergedModel ? mergedModel.project(propFields) : null;\n    } else {\n        propFields = criteria[0];\n        propagationData = mergedModel ? mergedModel.project(propFields) : null;\n    }\n\n    const facetByFields = context.facetByFields();\n    if (propagationData !== null && propagationFields.length) {\n        const fields = propagationData.getData().schema.map(d => d.name);\n        propagationData = getModelWithFacetData(propagationData, facetByFields);\n        propFields = append ? [...fields, ...propagationFields] : propagationFields;\n        propagationData = propagationData.project(propFields);\n    }\n\n    let propagateInterpolatedValues = false;\n    if (propFields.length && propFields.every(field => fieldsConfig[field] &&\n        fieldsConfig[field].def.type === FieldType.MEASURE)) {\n        propagateInterpolatedValues = true;\n    }\n\n    const groupId = context.parentAlias();\n    payload.action = action;\n    const behaviourInstance = instance._actions.behavioural[propagationBehaviour];\n    const isMutableAction = behaviourInstance ? behaviourInstance.constructor.mutates() : false;\n\n    const filterFn = (entry, propagationConf) => {\n        const effects = behaviourEffectMap[entry.config.action];\n        const mutates = entry.config.groupId ?\n            effects.some(d => sideEfffects[d.name || d].constructor.mutates()) : true;\n        return entry.config.groupId !== propagationConf.groupId && mutates;\n    };\n\n    const sourceBehaviour = instance._actions.behavioural[action];\n    const mutates = sourceBehaviour ? sourceBehaviour.constructor.mutates() : false;\n    let propConfig = {\n        payload,\n        action,\n        criteria: propagationData,\n        isMutableAction: mutates,\n        propagateInterpolatedValues,\n        groupId,\n        sourceId: mutates ? groupId : sourceId,\n        filterFn,\n        enabled: (propConf, firebolt) => (action !== propagationBehaviour ?\n            propConf.payload.sourceCanvas === firebolt.context.parentAlias() : true)\n    };\n\n    dataModel.propagate(propagationData, propConfig, true);\n\n    if (action !== propagationBehaviour) {\n        propConfig = {\n            payload,\n            sourceId: isMutableAction ? groupId : sourceId,\n            criteria: propagationData,\n            isMutableAction,\n            propagateInterpolatedValues,\n            action: propagationBehaviour,\n            groupId,\n            applyOnSource: action === propagationBehaviour,\n            enabled: (propConf, firebolt) => propConf.payload.sourceCanvas !== firebolt.context.parentAlias(),\n            filterFn\n        };\n\n        dataModel.propagate(propagationData, propConfig, true, {\n            filterImmutableAction: (actionInf, propInf) => actionInf.groupId !== propInf.groupId\n        });\n    }\n};\n","import { FieldType } from 'muze-utils';\nimport { Firebolt } from '@chartshq/muze-firebolt';\nimport { registerListeners } from './helper';\nimport { payloadGenerator } from './payload-generator';\nimport { propagateValues } from './data-propagator';\n\n/**\n * This class manages the interactions of visual unit. It associates physical actions with\n * behavioural actions. It also propagates the behavioural actions to other datamodels.\n */\nexport default class UnitFireBolt extends Firebolt {\n    constructor (...params) {\n        super(...params);\n        registerListeners(this);\n    }\n\n    propagate (behaviour, payload, selectionSet, sideEffects) {\n        propagateValues(this, behaviour, {\n            payload,\n            selectionSet,\n            sideEffects,\n            propagationFields: this._propagationFields\n        });\n    }\n\n    getApplicableSideEffects (sideEffects, payload, propagationInf) {\n        const context = this.context;\n        const unitId = context.id();\n        const aliasName = context.parentAlias();\n        const propagationSourceCanvas = propagationInf.propPayload && propagationInf.propPayload.sourceCanvas;\n        const sourceUnitId = propagationInf.propPayload && propagationInf.propPayload.sourceUnit;\n        const sourceSideEffects = this._sourceSideEffects;\n        const sideEffectInstances = this.sideEffects();\n        const actionOnSource = sourceUnitId ? sourceUnitId === unitId : true;\n\n        const applicableSideEffects = payload.sideEffects ? [{\n            effects: payload.sideEffects,\n            behaviours: [payload.action]\n        }] : sideEffects;\n        applicableSideEffects.forEach((d) => {\n            let mappedEffects = d.effects;\n            mappedEffects = mappedEffects.filter((se) => {\n                const mutates = sideEffectInstances[se.name || se].constructor.mutates();\n                if (mutates && propagationInf.isMutableAction === false) {\n                    return false;\n                }\n                if (!actionOnSource && payload.criteria !== null) {\n                    const sideEffectChecker = sourceSideEffects[se.name || se];\n                    return sideEffectChecker ? sideEffectChecker(propagationInf.propPayload, context) : true;\n                }\n                if (propagationSourceCanvas === aliasName || actionOnSource) {\n                    return se.applyOnSource !== false;\n                }\n\n                return true;\n            });\n            d.effects = mappedEffects;\n        });\n        return applicableSideEffects;\n    }\n\n    shouldApplySideEffects (propagate) {\n        return propagate === false;\n    }\n\n    onDataModelPropagation () {\n        return (data, config) => {\n            let isSourceFieldPresent = true;\n            let isMutableAction = false;\n            const propPayload = config.payload;\n            const sourceIdentifiers = config.sourceIdentifiers;\n            const enabledFn = config.enabled;\n            const action = config.action;\n            const payloadFn = payloadGenerator[action] || payloadGenerator.__default;\n\n            if (sourceIdentifiers) {\n                const fieldsConfig = sourceIdentifiers.getFieldsConfig();\n                const sourceIdentifierFields = Object.keys(fieldsConfig);\n                const propFields = Object.keys(data[0].getFieldsConfig());\n                if (!Object.values(fieldsConfig).some(d => d.def.type === FieldType.MEASURE)) {\n                    isSourceFieldPresent = sourceIdentifierFields.some(d => propFields.indexOf(d) !== -1);\n                }\n            }\n\n            const payload = payloadFn(this.context, data, config);\n            const sourceBehaviours = this._sourceBehaviours;\n            const filterFn = sourceBehaviours[action] || sourceBehaviours['*'];\n            let enabled = true;\n\n            if (filterFn) {\n                enabled = filterFn(propPayload || {}, this.context);\n            }\n\n            if (enabledFn) {\n                enabled = enabledFn(config, this) && enabled !== false;\n            }\n\n            if (enabled) {\n                const effects = this._behaviourEffectMap[action];\n                const sideEffectInstances = this.sideEffects();\n                isMutableAction = config.groupId ?\n                    effects.some(d => sideEffectInstances[d.name || d].constructor.mutates()) : config.isMutableAction;\n\n                const propagationInf = {\n                    propagate: false,\n                    data,\n                    propPayload,\n                    sourceIdentifiers,\n                    persistent: false,\n                    isSourceFieldPresent,\n                    sourceId: config.propagationSourceId,\n                    isMutableAction: config.isMutableAction\n                };\n\n                this._actionHistory[action] = {\n                    payload,\n                    propagationInf,\n                    isMutableAction\n                };\n                this.dispatchBehaviour(action, payload, propagationInf);\n            }\n        };\n    }\n\n    prepareSelectionSets (behaviours) {\n        const data = this.context.data();\n        if (data) {\n            this.createSelectionSet(data.getData().uids, behaviours);\n        }\n        return this;\n    }\n\n    initializeSideEffects () {\n        if (this.context.data()) {\n            super.initializeSideEffects();\n        }\n        return this;\n    }\n\n    remove () {\n        this.context.cachedData()[0].unsubscribe('propagation');\n        return this;\n    }\n}\n","import { layerFactory } from '@chartshq/visual-layer';\nimport {\n    Store,\n    setAttrs,\n    getUniqueId,\n    getQualifiedClassName,\n    selectElement,\n    transactor,\n    makeElement,\n    registerListeners,\n    generateGetterSetters,\n    getDataModelFromIdentifiers,\n    isSimpleObject,\n    transposeArray,\n    CommonProps,\n    toArray,\n    STATE_NAMESPACES\n} from 'muze-utils';\nimport { physicalActions, sideEffects, behaviouralActions, behaviourEffectMap } from '@chartshq/muze-firebolt';\nimport { actionBehaviourMap } from './firebolt/action-behaviour-map';\nimport {\n    renderLayers,\n    getNearestDimensionalValue,\n    removeLayersBy,\n    getLayersBy,\n    getLayerFromDef,\n    getLayerAxisIndex,\n    sanitizeLayerDef,\n    createSideEffectGroup,\n    resolveEncodingTransform,\n    createRenderPromise\n} from './helper';\nimport { renderGridLineLayers } from './helper/grid-lines';\nimport localOptions from './local-options';\nimport { listenerMap, calculateDomainListener } from './listener-map';\nimport {\n    DOMAIN\n} from './enums/reactive-props';\nimport { PROPS } from './props';\nimport UnitFireBolt from './firebolt';\nimport { initSideEffects } from './firebolt/helper';\nimport './styles.scss';\n\nconst FORMAL_NAME = 'unit';\n\n/**\n * Visual Unit is hierarchical component created by {@link VisualGroup}. This component accepts layer definitions\n * and creates concrete layer instances from them, binds data and attaches axis to them. It also retreives the domain\n * from the layers and unions them and sets them on corresponding axis instances. This also creates the parent svg\n * groups for all the layers and delegates the rendering to all the layers.\n *\n * @public\n * @module VisualUnit\n * @class\n */\nexport default class VisualUnit {\n\n    /**\n     * Creates instance of visualization unit.\n     *\n     * @param {Object} registry  Component registry\n     * @param {Object} dependencies  Dependencies required by visual unit.\n     */\n    constructor (registry, dependencies) {\n        this._id = getUniqueId();\n        this._dependencies = dependencies;\n        this._layerDeps = {\n            throwback: new Store({\n                [CommonProps.ON_LAYER_DRAW]: false\n            }),\n            smartLabel: dependencies.smartLabel,\n            lifeCycleManager: dependencies.lifeCycleManager\n        };\n        this._renderedResolve = null;\n        this._renderedPromise = new Promise((resolve) => {\n            this._renderedResolve = resolve;\n        });\n        createRenderPromise(this);\n        this._layerDeps.throwback.registerChangeListener([CommonProps.ON_LAYER_DRAW], () => {\n            this._renderedResolve();\n            this._lifeCycleManager.notify({ client: this.layers(), action: 'drawn', formalName: 'layer' });\n        });\n\n        this._lifeCycleManager = dependencies.lifeCycleManager;\n        this._layersMap = {};\n        this._gridLinesSelection = {};\n        this._gridBandsSelection = {};\n        this._gridLines = [];\n        this._gridBands = [];\n        this._layerNamespaces = {};\n        this._layerAxisIndex = {};\n        this._transformedDataModels = {};\n        layerFactory.setLayerRegistry(registry.layerRegistry);\n        generateGetterSetters(this, PROPS);\n        this.registry(registry);\n        this.cachedData([]);\n    }\n\n    static formalName () {\n        return FORMAL_NAME;\n    }\n\n    static getState () {\n        return [\n            {\n                domain: {}\n            },\n            localOptions\n        ];\n    }\n\n    store (...params) {\n        if (params.length) {\n            this._store = params[0];\n            const metaInf = this.metaInf();\n            this.store().append(`${STATE_NAMESPACES.UNIT_LOCAL_NAMESPACE}`, {\n                [`${metaInf.namespace}`]: null\n            });\n            const localNs = `${STATE_NAMESPACES.UNIT_LOCAL_NAMESPACE}.${metaInf.namespace}`;\n            transactor(this, localOptions, this.store().model, {\n                namespace: localNs\n            });\n            registerListeners(this, listenerMap, {\n                local: localNs,\n                global: STATE_NAMESPACES.UNIT_GLOBAL_NAMESPACE\n            }, {\n                rowIndex: metaInf.rowIndex,\n                colIndex: metaInf.colIndex\n            });\n            this.firebolt(new UnitFireBolt(this, {\n                physical: physicalActions,\n                behavioural: behaviouralActions,\n                physicalBehaviouralMap: actionBehaviourMap\n            }, sideEffects, behaviourEffectMap));\n            return this;\n        }\n        return this._store;\n    }\n\n    /**\n     * Static helper for creates a unit instance\n     *\n     * @param {Object} [id] optional unique identifier for a unit; , id is calculated internally\n     * @param {DataModel} data instance of datamodel\n     * @param {Array.<Layer>} layers layer configuration\n     * @param {Object} config configurtion for the visual unit\n     * @return {VisualUnit} Instance of a unit\n     */\n    static create (...params) {\n        return new this(...params);\n    }\n\n    /**\n     * Returns the instance of firebolt associated with this visual unit. Firebolt dispatches the behavioural actions\n     * when any physical action happens on the elements of visual unit.\n     *\n     * @public\n     *\n     * @return {Firebolt} Instance of firebolt.\n     */\n    firebolt (...firebolt) {\n        if (firebolt.length) {\n            this._firebolt = firebolt[0];\n            return this;\n        }\n        return this._firebolt;\n    }\n\n    /**\n     * Returns the unique id of this visual unit.\n     *\n     * @public\n     * @return {string} Unique identifier.\n     */\n    id () {\n        return this._id;\n    }\n\n    lockModel () {\n        this._store.model.lock();\n        return this;\n    }\n\n    unlockModel () {\n        this._store.model.unlock();\n        return this;\n    }\n\n    timeDiffsByField (...params) {\n        if (params.length) {\n            return this;\n        }\n        return this._timeDiffsByField;\n    }\n\n    /**\n     * Renders the visual unit. It creates the layout and renders the axes and layers.\n     *\n     * @return {VisualUnit} Instance of visual unit.\n     */\n    render (container) {\n        const config = this.config();\n        const { className, defClassName, sideEffectClassName, classPrefix } = config;\n        const qualifiedClassName = getQualifiedClassName(defClassName, this.id(), config.classPrefix);\n        const width = this.width();\n        const height = this.height();\n        const containerSelection = selectElement(container).style('position', 'relative');\n\n        this._rootSvg = makeElement(containerSelection, 'svg', [null], className)\n                        .style('width', `${width}px`).style('height', `${height}px`);\n\n        const node = this._rootSvg.node();\n        setAttrs(node, {\n            width,\n            height,\n            class: qualifiedClassName.join(' ')\n        });\n        renderGridLineLayers(this, node);\n        renderLayers(this, node, this.layers(), {\n            width,\n            height\n        });\n        this._sideEffectGroup = createSideEffectGroup(node, `${classPrefix}-${sideEffectClassName}`);\n        const firebolt = this.firebolt();\n        initSideEffects(firebolt.sideEffects(), firebolt);\n        return this;\n    }\n\n    done () {\n        return this._renderedPromise;\n    }\n\n    /**\n     * Caches all the datamodels in an array from the next `data()` call on visual unit until `clearCaching()` or\n     * `resetData()` is called on it.\n     *\n     * @public\n     * @return {VisualUnit} Instance of visual unit.\n     */\n\n    enableCaching () {\n        this._cache = true;\n        return this;\n    }\n\n    /**\n     * Clears all the previous cached data.\n     *\n     * @public\n     * @segment VisualUnit\n     * @return {VisualUnit} Instance of visual unit.\n     */\n    clearCaching () {\n        this._cache = false;\n        this.cachedData([this.cachedData()[0]]);\n        return this;\n    }\n\n    /**\n     * Returns the drawing information from visual unit.Drawing context contains the dimensions of unit and the svg\n     * container of the visual unit.\n     *\n     * @public\n     *\n     * @return {Object} Drawing information.\n     *      ```\n     *          {\n     *              htmlContainer: // Html container of svg container of the visual unit\n     *              svgContainer: // Root svg container\n     *              width: // Width of the visual unit\n     *              height: // Height of the visual unit\n     *              sideEffectGroup: // Svg group for drawing side effect elements.\n     *              parentContainer: // Parent html container of the visual unit.\n     *              xOffset: // x offset space from the starting x position of the container,\n     *              yOffset: // y offset space from the starting y position of the container\n     *          }\n     *      ```\n     */\n    getDrawingContext () {\n        const rootSvg = this._rootSvg && this._rootSvg.node();\n        const width = this.width();\n        const height = this.height();\n        const { el, dimensions } = this.parentContainerInf();\n        return {\n            htmlContainer: this.mount(),\n            svgContainer: rootSvg,\n            width,\n            height,\n            sideEffectGroup: this._sideEffectGroup,\n            parentContainer: el,\n            parentContainerDimensions: dimensions,\n            xOffset: 0,\n            yOffset: 0\n        };\n    }\n\n    /**\n     * Returns the serialized configuration of visual unit.\n     *\n     * @return {Object} serialized configuration\n     */\n    serialize () {\n        return {\n            layers: this.layers().map(layer => layer.serialize()),\n            config: this.config(),\n            axes: this.axes().map(axis => axis.serialize())\n        };\n    }\n\n    mount (...mount) {\n        if (mount.length) {\n            this._mount = mount[0];\n            this.render(mount[0]);\n            this.firebolt().mapActionsAndBehaviour();\n            return this;\n        }\n        return this._mount;\n    }\n\n    /**\n     * Adds a new layer to the visual unit. It takes a layer definition and creates layer instances from them. It does\n     * not render the layers. It returns the layer instances in an array. If the layer definition is a composite layer,\n     * then multiple layer instances will be returned in the array.\n     *\n     * To add a layer in the unit,\n     * ```\n     *      unit.addLayer({\n     *          name: 'bullet',\n     *          mark: 'bar',\n     *          encoding: {\n     *              x: 'Year',\n     *              y: 'Acceleration',\n     *              color: 'Origin'\n     *          }\n     *      });\n     * ```\n     * @public\n     * @param {Object} layerDef Definition of new layer.\n     *\n     * @return {Array} Array of layer instances.\n     */\n    addLayer (layerDefinition) {\n        const layerDefinitions = sanitizeLayerDef(toArray(layerDefinition));\n\n        const layersMap = this._layersMap;\n        const markSet = {};\n        const store = {\n            layers: {},\n            components: {\n                unit: this\n            }\n        };\n        let layerIndex = 0;\n        let startIndex = [].concat(...Object.values(this._layersMap)).length;\n        const metaInf = this.metaInf();\n        const props = this._layerNamespaces;\n        const layers = layerDefinitions.sort((a, b) => a.order - b.order).reduce((layersArr, layerDef) => {\n            const definition = layerDef.def;\n            const markId = definition.name;\n            const defArr = toArray(definition);\n            const namespaces = [];\n            defArr.forEach((def) => {\n                def.order = layerDef.order + layerIndex;\n                const namespace = `${metaInf.namespace}${startIndex}`;\n                if (!layersMap[markId]) {\n                    startIndex++;\n                    if (definition.calculateDomain !== false) {\n                        props[`${STATE_NAMESPACES.LAYER_GLOBAL_NAMESPACE}.${DOMAIN}.${namespace}`] = true;\n                    }\n                }\n                namespaces.push(namespace);\n            });\n            layerIndex += defArr.length;\n            const instances = getLayerFromDef(this, definition, layersMap[markId], namespaces);\n            store.layers = Object.assign(store.layers, instances);\n            const instanceValues = Object.values(instances);\n            layersArr = layersArr.concat(...instanceValues);\n            layersMap[markId] = instanceValues;\n            markSet[markId] = markId;\n            return layersArr;\n        }, []);\n\n        store.unit = this;\n        const layerdeps = {};\n        const layersArr = [].concat(...Object.values(this._layersMap));\n\n        layersArr.forEach((layer) => {\n            const alias = layer.alias();\n            store.layers[alias] = layer;\n            layerdeps[alias] = [];\n        });\n        layers.forEach((layer) => {\n            const depArr = resolveEncodingTransform(layer, store);\n            layerdeps[layer.alias()] = depArr;\n        });\n\n        this._layerDepOrder = layerdeps;\n        this._layerAxisIndex = Object.assign(this._layerAxisIndex, getLayerAxisIndex(layers, this.fields()));\n        const stateStore = this.store();\n\n        stateStore.unsubscribe({\n            key: 'calculateDomainListener',\n            namespace: `${STATE_NAMESPACES.UNIT_LOCAL_NAMESPACE}.${metaInf.namespace}`\n        });\n        stateStore.registerImmediateListener(Object.keys(props), calculateDomainListener(this, metaInf.namespace),\n            false, {\n                key: 'calculateDomainListener',\n                namespace: `${STATE_NAMESPACES.UNIT_LOCAL_NAMESPACE}.${metaInf.namespace}`\n            });\n        this.layers(layersArr);\n        return layers;\n    }\n\n    /**\n     *\n     *\n     *\n     * @memberof VisualUnit\n     */\n    remove () {\n        const lifeCycleManager = this._dependencies.lifeCycleManager;\n        lifeCycleManager.notify({ client: this, action: 'beforeremove', formalName: 'unit' });\n        this.store().unsubscribe({\n            namespace: `${STATE_NAMESPACES.UNIT_LOCAL_NAMESPACE}.${this.metaInf().namespace}`\n        });\n        selectElement(this.mount()).remove();\n        this.firebolt().remove();\n        // Remove layers\n        lifeCycleManager.notify({ client: this.layers(), action: 'beforeremove', formalName: 'layer' });\n        this.layers().forEach(layer => layer.remove());\n        lifeCycleManager.notify({ client: this.layers(), action: 'removed', formalName: 'layer' });\n        lifeCycleManager.notify({ client: this, action: 'removed', formalName: 'unit' });\n        return this;\n    }\n\n    /**\n     *\n     *\n     * @param {*} identifiers\n     *\n     * @memberof VisualUnit\n     */\n    getDataModelFromIdentifiers (identifiers, mode, parentModel) {\n        if (identifiers === null) {\n            return null;\n        }\n        const dataModel = parentModel || this.data();\n        return getDataModelFromIdentifiers(dataModel, identifiers, mode);\n    }\n\n    /**\n     * Resets the data of visual unit to original data model. It also clears the cached data.\n     *\n     * @public\n     * @segment VisualUnit\n     * @return {VisualUnit} Instance of visual unit.\n     */\n    resetData () {\n        this.data(this.cachedData()[0]);\n        return this;\n    }\n\n    /**\n     *\n     *\n     *\n     * @memberof VisualUnit\n     */\n    getSourceInfo () {\n        return {\n            dimensionMeasureMap: this._dimensionMeasureMap,\n            fields: this.fields(),\n            data: this.data(),\n            axes: this.axes()\n        };\n    }\n\n    /**\n     *\n     *\n     *\n     * @memberof VisualUnit\n     */\n    getDefaultTargetContainer () {\n        const { classPrefix, defClassName } = this.config();\n        return [`.${classPrefix}-${defClassName}`];\n    }\n\n    /**\n     * Returns an array of layer instances which matches the supplied mark type.\n     *\n     * @public\n     *\n     * @param {string} type Mark type of layer.\n     *\n     * @return {Array} Array of layer instances.\n     */\n    getLayersByType (type) {\n        const layers = getLayersBy(this.layers(), 'type', type);\n        return layers;\n    }\n\n    /**\n     * Returns the layer instance which matches the supplied layer name. If no layer is found, then it returns\n     * undefined.\n     *\n     * @public\n     * @param {string} name Name of layer.\n     *\n     * @return {VisualUnit} Layer instance.\n     */\n    getLayerByName (name) {\n        const layers = getLayersBy(this.layers(), 'name', name);\n        return layers[0];\n    }\n\n    /**\n     * Returns the point located nearest to the supplied x and y position. It returns the unique identifiers of the\n     * point. This function also accepts an additional configuration `getAllPoints` inside `config` object in the third\n     * argument which if set to true, then it returns the identifiers of all the points which falls on the nearest\n     * x value or y value if any one of the field is a dimension. Additionally, a target property is also returned\n     * which contains the identifier of the nearest point. If no nearest point is found, then it returns identifier\n     * as null.\n     *\n     * @public\n     *\n     * @param {number} x X Position of the point from where nearest point is to be found.\n     * @param {number} y Y Position of the point from where nearest point is to be found.\n     * @param {Object} config Additional configuration options.\n     * @param {boolean} config.getAllPoints If true, then returns all the points nearest to the x value or y value if\n     * it is dimension.\n     * @param {Object} config.data Data associated with the nearest point.\n     * @return {Object} Nearest point information\n     * ```\n     *      {\n     *          id: [['Origin'], ['USA'], ['Japan']], // Identifiers of all the points closest to the x value.\n     *          target: [['Origin'], ['Japan']] // Identifier of the nearest point.\n     *      }\n     * ```\n     */\n    getNearestPoint (x, y, config) {\n        let pointObj = {\n            id: null\n        };\n        const dimValue = getNearestDimensionalValue(this, {\n            x,\n            y\n        });\n\n        if (dimValue !== null && config.getAllPoints) {\n            pointObj.id = dimValue;\n            const pointInf = this.getMarkInfFromLayers(x, y, config);\n            pointObj.target = pointInf && pointInf.id ? pointInf.id : pointObj.id;\n            return pointObj;\n        }\n\n        const markInf = this.getMarkInfFromLayers(x, y, config) || { id: null };\n        pointObj = Object.assign({}, markInf);\n\n        pointObj.target = markInf.id;\n        return pointObj;\n    }\n\n    getMarkInfFromLayers (x, y, args) {\n        const layers = this.layers();\n        const len = layers.length;\n        let point = null;\n        // Iterate through the layers array and fetch the nearest point from each layer. If a valid\n        // nearest point is found from any layer, then return that point.\n        for (let i = 0; i < len; i++) {\n            const layer = layers[i];\n            const config = layer.config();\n            if (config.interactive !== false) {\n                point = layer.getNearestPoint(x, y, args);\n            }\n            if (point) {\n                return point;\n            }\n        }\n        return point;\n    }\n\n    /**\n     * Get the information of all the marks such as x, y position and size from supplied identifiers. It\n     * returns an array of points whose data matches the given identifiers.\n     *\n     * @public\n     *\n     * @param {Array|Object} identifiers Field names and their corresponding values.\n     * ```\n     * identifiers can be given in an array of array,\n     *      ['Origin', 'Name'], // Names of the fields supplied in first array\n     *      ['USA', 'ford'], // Data values of each field supplied in rest of the arrays.\n     *      ['Japan', 'ford']\n     * or in an object,\n     *      {\n     *          Origin: ['USA']\n     *      }\n     * ```\n     * @param {Object} config Optional configurations which decides which information of the mark will\n     * be retrieved.\n     * @param {boolean} [config.getAllAttrs = false] If true, then returns all the information of each mark.\n     * @param {boolean} [config.getBBox = false] If true, then returns the bounding box of each mark.\n     *\n     * @return {Array} Array of objects containing the information of each point.\n     * ```\n     * By default, the method returns the array of points in this structure,\n     *      [\n     *          {\n     *              x: 20,\n     *              y: 100,\n     *              width: 200,\n     *              height: 100\n     *          }\n     *      ]\n     * If 'config.getAllAttrs' is true, then it returns all the information of each mark,\n     *      [\n     *      // Positions of mark on initial state of transition.\n     *          enter: {\n     *              x: 0,\n     *              y: 0\n     *          },\n     *          // Final positions of the mark\n     *          update: {\n     *              x: 20,\n     *              y: 10\n     *          },\n     *          style: // css styles of each mark\n     *          source: [200, 'USA'] // Row information of each mark\n     *          id: 20 // Row id of each mark\n     *      ]\n     * ```\n     */\n    getPlotPointsFromIdentifiers (identifiers, config = {}) {\n        let points = [];\n        let parsedIdentifiers = identifiers;\n        if (identifiers === null) {\n            return [];\n        }\n        const layers = this.layers();\n        const len = layers.length;\n        if (isSimpleObject(identifiers)) {\n            parsedIdentifiers = [Object.keys(identifiers)];\n            parsedIdentifiers = [...parsedIdentifiers, ...transposeArray(Object.values(identifiers))];\n        }\n        for (let i = 0; i < len; i++) {\n            const layer = layers[i];\n            if (layer.config().interactive !== false) {\n                points = [...points, ...layer.getPointsFromIdentifiers(parsedIdentifiers, config)];\n            }\n        }\n        return points;\n    }\n\n    /**\n     * Removes the layer instance which matches the supplied layer name.\n     *\n     * @public\n     * @param {string} name Name of layer\n     *\n     * @return {VisualUnit} Instance of visual unit.\n     */\n    removeLayerByName (name) {\n        removeLayersBy('name', name);\n        return this;\n    }\n\n    /**\n     * Removes all the layer instances which matches the supplied mark type.\n     *\n     * @public\n     * @param {string} type Mark type of layer.\n     *\n     * @return {VisualUnit} Instance of visual unit.\n     */\n    removeLayersByType (type) {\n        removeLayersBy('type', type);\n        return this;\n    }\n}\n","import { DataModel } from 'muze-utils';\n\nimport { retriveDomainFromData } from './group-utils';\n\n/**\n * Gets name of fields form the variables\n *\n * @param {*} fields1\n * @param {*} [fields2=[]]\n *\n */\nconst getFieldNames = (fields1, fields2 = []) => [fields1, fields2].map(fields => fields.reduce((acc, d) => {\n    acc = [...acc, ...d.getMembers()];\n    return acc;\n}, []));\n\n/**\n * Creates a selected datamodel from a parent datamodel and a set of field names\n *\n * @param {Object} datamodel provided as input\n * @param {Array} fieldNames schema  names\n * @param {Array} fieldValues values of those schema names to be selected\n * @return {Object} creates a new selected datamodel\n */\nconst createSelectedDataModel = (datamodel, fieldNames, fieldValues) =>\n    datamodel.select(fields => fieldNames.every((field, k) => fields[field].value === fieldValues[k]));\n\n/**\n *\n *\n * @param {*} facets\n * @param {*} keyArray\n *\n */\nconst uniqueKeyGenerator = (keyArray, context, depth = 0, val = []) => {\n    const {\n        facets,\n        dataModel,\n        uniqueValues\n    } = context;\n\n    // Get unique keys for the next depth recursively if required\n    if (facets[depth + 1]) {\n        const field = facets[depth];\n        uniqueValues.forEach((value) => {\n            const newDm = dataModel.select(fields => fields[field].value === value);\n            const nextDepthUniqueValues = retriveDomainFromData(newDm, facets[depth + 1]);\n            const newContext = {\n                facets,\n                dataModel: newDm,\n                uniqueValues: nextDepthUniqueValues\n            };\n\n            uniqueKeyGenerator(keyArray, newContext, depth + 1, [...val, value]);\n        });\n    } else {\n        uniqueValues.forEach((value) => {\n            keyArray.push([...val, value]);\n        });\n    }\n};\n\n/**\n * projects row model based on the set of row and/or column and other projection fields\n *\n * @param {Object} datamodel provided as input\n * @return {Object} Projected datamodel\n */\nconst projectRows = (datamodel, projections) => {\n    const {\n        allColumnProjections,\n        rowProjections,\n        optionalProjections\n    } = projections;\n\n    if (rowProjections.length > 0) {\n        return rowProjections.map((projectFields) => {\n            const [projFieldNames, colProjFieldNames] = getFieldNames(projectFields, allColumnProjections);\n            return datamodel.project([...projFieldNames, ...colProjFieldNames, ...optionalProjections]);\n        });\n    }\n    return [datamodel];\n};\n\n/**\n * Adds the datamodels to current row index based on column fields\n *\n * @param {Array} context current context\n * @param {Array} valueCellCreator List of facets applied to the current datamodel\n */\nconst pushToMatrix = (context, valueCellCreator) => {\n    let cells = [];\n    const {\n        matrix,\n        datamodel,\n        facetInfo,\n        fieldInfo\n    } = context;\n    // Get projected fields for current row\n    const {\n        rowProjections,\n        colProjections,\n        optionalProjections\n    } = fieldInfo;\n    const {\n        rowIndex,\n        columnIndex\n    } = facetInfo;\n    const rowProj = rowProjections[(rowIndex) % rowProjections.length] || [];\n\n    // Get the cells for the matrix from the return function of the callback on the datamodel.\n    // callback function -> (datamodel, {projections, indices}, facets)\n    if (colProjections.length > 0) {\n        cells = colProjections.map((projectFields, projIdx) => {\n            const [colProjFieldNames, rowProjFieldNames] = getFieldNames(projectFields, rowProj);\n            const projectedDm = datamodel.project([...colProjFieldNames, ...rowProjFieldNames, ...optionalProjections]);\n            const projections = { rowFields: rowProj, columnFields: projectFields };\n            const indices = { rowIndex, columnIndex: columnIndex * colProjections.length + projIdx };\n\n            return valueCellCreator(projectedDm, { projections, indices }, facetInfo);\n        });\n    } else {\n        const projections = { rowFields: rowProj, columnFields: [] };\n        const indices = { rowIndex, columnIndex };\n\n        cells = [valueCellCreator(datamodel, { projections, indices }, facetInfo)];\n    }\n\n    matrix[rowIndex] = matrix[rowIndex] || [];\n    matrix[rowIndex].push(...cells);\n};\n\n/**\n * Gets Matrixes for corresponding datamodel, facets and projections\n *\n * @param {Object} dataModel input datamodel\n * @param {Object} fieldMap corresponding fieldmap\n * @param {Array} facetsAndProjections contains the set of facets and projections for the matrices\n * @param {Function} valueCellCreator Callback executed after datamodels are prepared after sel/proj\n * @return {Object} set of matrices with the corresponding row and column keys\n */\nexport const getMatrixModel = (dataModel, facetsAndProjections, valueCellCreator) => {\n    let rowDataModels = [];\n    const rowKeys = [];\n    const columnKeys = [];\n    const allColumnProjections = [];\n    const matrix = [];\n    const facetInfo = [];\n\n    const fieldInfo = Object.assign({}, facetsAndProjections);\n    const {\n        rowFacets,\n        colFacets,\n        colProjections\n    } = fieldInfo;\n\n    colProjections.forEach((colProj) => {\n        allColumnProjections.push(...colProj);\n    });\n    fieldInfo.allColumnProjections = allColumnProjections;\n\n    // Performing row selection and projection\n    if (rowFacets.length > 0) {\n        // Get unique values for the root level of facet\n        const field = rowFacets[0].toString();\n        const firstLevelRowKeys = retriveDomainFromData(dataModel, field);\n\n        // Get unique keys in the form of an array of arrays for each row\n        uniqueKeyGenerator(rowKeys, { facets: rowFacets, dataModel, uniqueValues: firstLevelRowKeys });\n\n        // Apply selection -> projection -> row datamodels\n        rowKeys.forEach((val) => {\n            // Create faceted datamodel\n            const [rowFacetFieldNames] = getFieldNames(rowFacets);\n            const selectedDataModel = createSelectedDataModel(dataModel, rowFacetFieldNames, val);\n\n            // Project the datamodel based on the number of projections (based on last levels)\n            const newProjectedDataModels = projectRows(selectedDataModel, fieldInfo);\n            rowDataModels.push(...newProjectedDataModels);\n\n            newProjectedDataModels.forEach(() => {\n                facetInfo.push([rowFacets, val]);\n            });\n        });\n    } else {\n        // No row facets, hence only row projection\n        rowDataModels.push(...projectRows(dataModel, fieldInfo));\n    }\n\n    // Maintaining set of row datamodels for column resolution\n    rowDataModels = rowDataModels.length > 0 ? rowDataModels : [[]];\n\n    // Performing column selection and projection\n    if (colFacets.length > 0) {\n        const colFacetNames = colFacets.map(d => `${d}`);\n        // Get unique values for the root level of facet\n        const field = colFacetNames[0];\n        const firstLevelColumnKeys = retriveDomainFromData(dataModel, field);\n\n        // Get unique keys to create faceted datamodels: this time for columns\n        uniqueKeyGenerator(columnKeys, {\n            facets: colFacetNames,\n            dataModel,\n            uniqueValues: firstLevelColumnKeys\n        });\n        // For each row in the datamodel, apply selection -> projection -> push the projection to matri\n        rowDataModels.forEach((dme, rIndex) => {\n            facetInfo[rIndex] = facetInfo[rIndex] || [[], []];\n            columnKeys.forEach((val, cIndex) => {\n                matrix[rIndex] = matrix[rIndex] || [];\n\n                // If datamodel is not present in current row, choose parent datamodel\n                const datamodel = dme instanceof DataModel ? dme : dataModel;\n\n                // Selection is made on the datamodel for the current row\n                const selectedDataModel = createSelectedDataModel(datamodel, colFacetNames, val);\n                const context = {\n                    matrix,\n                    datamodel: selectedDataModel,\n                    facetInfo: {\n                        rowFacets: facetInfo[rIndex],\n                        colFacets: [colFacets, val],\n                        rowIndex: rIndex,\n                        columnIndex: cIndex\n                    },\n                    fieldInfo\n                };\n                pushToMatrix(context, valueCellCreator);\n            });\n        });\n    } else {\n        // No column facets, hence only row projection\n        rowDataModels.forEach((dme, rIndex) => {\n            facetInfo[rIndex] = facetInfo[rIndex] || [[], []];\n            const context = {\n                matrix,\n                datamodel: dme || dataModel,\n                facetInfo: {\n                    rowFacets: facetInfo[rIndex],\n                    colFacets: [[], []],\n                    rowIndex: rIndex,\n                    columnIndex: 0\n                },\n                fieldInfo\n            };\n\n            pushToMatrix(context, valueCellCreator);\n        });\n    }\n\n    // Getting column keys\n    const transposedColKeys = columnKeys.length > 0 ? columnKeys[0].map((col, i) =>\n                    columnKeys.map(row => row[i])) : columnKeys;\n\n    return { matrix, rowKeys, columnKeys: transposedColKeys };\n};\n","import { AxisOrientation } from '@chartshq/muze-axis';\nimport {\n    getObjProp,\n    FieldType,\n    STATE_NAMESPACES,\n    retrieveNearestGroupByReducers,\n    mergeRecursive,\n    createSelection\n} from 'muze-utils';\nimport { getMatrixModel } from './matrix-model';\nimport {\n    getCellKey,\n    isDistributionEqual,\n    mutateAxesFromMap,\n    getFieldsFromSuppliedLayers,\n    extractFields\n} from './group-utils';\nimport { ROW, ROWS, COLUMNS, COL, LEFT, RIGHT, TOP, BOTTOM, PRIMARY, SECONDARY, X, Y } from '../enums/constants';\n\n/**\n * Updates row and column cells with the geom cell corresponding to the facet keys\n *\n * @param {*} resolver\n * @param {*} facets\n */\nconst updateCells = (resolver, facets, geomCell) => {\n    [ROW, COL].forEach((field) => {\n        const cells = resolver[`${field}Cells`]();\n        const facetKey = facets[`${field}Facets`][1].join();\n\n        !cells[facetKey] && (cells[facetKey] = []);\n        cells[facetKey].push(geomCell);\n        resolver[`${field}Cells`](cells);\n    });\n};\n\n/**\n *\n *\n * @param {*} context\n * @param {*} datamodel\n * @param {*} fieldInfo\n * @param {*} facets\n *\n */\nexport const createValueCells = (context, datamodel, fieldInfo, facets) => {\n    const {\n        projections,\n        indices\n    } = fieldInfo;\n    const {\n        rowFields,\n        columnFields\n    } = projections;\n    const {\n         rowIndex,\n         columnIndex\n    } = indices;\n    const {\n        suppliedLayers,\n        cell: GeomCell,\n        resolver,\n        config,\n        encoder,\n        detailFields\n    } = context;\n    const axes = resolver.axes();\n    const cacheMaps = resolver.cacheMaps();\n    const matrixLayers = resolver.matrixLayers();\n    const labelManager = resolver.dependencies().smartlabel;\n    const horizontalAxis = resolver.horizontalAxis();\n    const verticalAxis = resolver.verticalAxis();\n    const datamodelTransform = resolver.datamodelTransform();\n    const {\n        entryCellMap,\n        exitCellMap\n    } = cacheMaps;\n    const layerConfigArr = encoder.getLayerConfig({ columnFields, rowFields }, suppliedLayers || []);\n    const axesCreators = { config, labelManager, axes, cacheMaps };\n\n    fieldInfo.normalizedColumns = verticalAxis.fields;\n    fieldInfo.normalizedRows = horizontalAxis.fields;\n\n    const groupAxes = encoder.createAxis(axesCreators, fieldInfo, context);\n\n    matrixLayers[rowIndex] = matrixLayers[rowIndex] ? matrixLayers[rowIndex] : [];\n    matrixLayers[rowIndex][columnIndex] = layerConfigArr;\n\n    // return from map if already there otherwise create and put in map\n    const geomCellKey = getCellKey(rowIndex, columnIndex);\n    const fields = {\n        y: rowFields,\n        x: columnFields\n    };\n\n    const allFacets = [\n        [...facets.rowFacets[0], ...facets.colFacets[0]],\n        [...facets.rowFacets[1], ...facets.colFacets[1]]\n    ];\n    const geomCell = !exitCellMap.has(geomCellKey) ? new GeomCell() : exitCellMap.get(geomCellKey);\n\n    geomCell.data(datamodel)\n                    .axes(groupAxes)\n                    .fields(fields)\n                    .transform(datamodelTransform)\n                    .detailFields(detailFields)\n                    .facetByFields(allFacets);\n    entryCellMap.set(geomCellKey, geomCell);\n    exitCellMap.delete(geomCellKey);\n\n    updateCells(resolver, facets, geomCell);\n\n    return entryCellMap.get(geomCellKey);\n};\n\n/**\n * Creates axis cells based on the set of axes\n *\n * @param {Selection} selection Contains a selection of the axis units\n * @param {Array} axes Actual axis units\n * @param {number} axisIndex 0-> primary axis, 1-> secondary axis(when dual axis is made)\n * @param {Object} cells Contains a collection of the cells\n * @return {Object} return either set of axis/blank cells depending on the config\n */\n\nconst createAxisCells = (selection, axes, axisIndex, cells) =>\n    createSelection(selection, axis => axis, axes, (item, i) => i + item.reduce((e, n) => {\n        const id = n.id + axisIndex;\n        return e + id;\n    }, '')).map((axis) => {\n        if (axis && axis[axisIndex]) {\n            const axisInst = axis[axisIndex];\n            const { orientation, show } = axisInst.config();\n\n            return new cells.AxisCell().source(axisInst).config({\n                isOffset: orientation === AxisOrientation.LEFT || orientation === AxisOrientation.TOP,\n                show\n            });\n        }\n        return new cells.BlankCell().config({ show: false });\n    });\n\n/**\n *\n *\n * @param {*} context\n * @param {*} selectionObj\n * @param {*} cells\n * @retur\n */\nconst axisPlaceholderGn = (context, selObj, cells) => {\n    const {\n        matrices\n    } = context;\n    const {\n        axesMatrix\n    } = matrices;\n\n    return (type, axisFrom) => {\n        const axes = axesMatrix[`${type}`];\n\n        if (axes && axes.length) {\n            if (type === X || type === Y) {\n                const fieldNames = type === Y ? ROWS : COLUMNS;\n\n                [PRIMARY, SECONDARY].forEach((fieldType, index) => {\n                    const selObjProp = `${fieldNames}${fieldType}`;\n                    let axisIndex = index;\n                    let axesForDraw = axes;\n                    if (axisFrom === RIGHT || axisFrom === BOTTOM) {\n                        axisIndex = 1 - axisIndex;\n                    }\n                    if (!getObjProp(axes, 0, axisIndex)) {\n                        axesForDraw = [];\n                    }\n                    selObj[selObjProp] = createAxisCells(selObj[selObjProp], axesForDraw, axisIndex, cells);\n                });\n            } else {\n                selObj.rowsPrimary = createAxisCells(selObj.rowPrime, axes.map(() => []), 0, cells);\n                selObj.columnsPrimary = createAxisCells(selObj.colPrime, axes[0], 0, cells);\n            }\n        }\n        return selObj;\n    };\n};\n\n/**\n * Creates header cells based on the set of headers\n *\n * @param {Object} selection Contains a selection of the header units\n * @param {string} headers Contains a list of the headers\n * @param {Object} cells Contains a collection of the cells\n * @param {Object} labelManager smart label instance\n * @return {Object} return either set of header cells depending on the config\n */\nconst createTextCells = (selection, headers, cells, labelManager) => createSelection(selection,\n    label => new cells.TextCell({}, { labelManager }).source(label), headers, (key, i) => key + i);\n\n/**\n *\n *\n * @param {*} context\n * @param {*} selectionObj\n * @param {*} cells\n * @param {*} labelManager\n *\n */\nconst headerPlaceholderGn = (context, selectionObj, cells, labelManager) => {\n    const {\n        axis,\n        keys,\n        type,\n        facet\n    } = context;\n    const counter = axis.length / keys.length;\n    const selectionKeys = keys.length ? axis.map((d, i) => keys[Math.floor(i / counter)]) : [];\n\n    return createSelection(selectionObj[`${type}Headers`], keySet => keySet, selectionKeys,\n        (keySet, i) => `${keySet.join(',')}-${i}`)\n                    .map(keySet => createTextCells(null, keySet, cells, labelManager)\n                                    .map((cell, k, i) => cell.source(keySet[i]).config(facet)));\n};\n\n/**\n * Creates a set of placeholders as a part of selection object\n *\n * @param {Array} normalizedOptions contains normalized rows and columns\n * @param {Array} matrices contains axis and value matrices\n * @param {aArrayny} projections contains set of row and column projections\n * @param {Object} cells Contains a collection of the cells\n * @param {Object} labelManager smart label instance\n * @return {Object} Creates a set of placeholders as a part of selections\n */\nconst generatePlaceholders = (context, cells, labelManager) => {\n    let selectionObj;\n    const {\n        matrices,\n        fields,\n        facetsAndProjections,\n        selection,\n        facet,\n        encoders,\n        resolver\n    } = context;\n    const {\n        rows,\n        columns\n    } = fields;\n    const {\n        valuesMatrix\n    } = matrices;\n    const {\n        rowProjections,\n        colProjections\n    } = facetsAndProjections;\n    const {\n        rowKeys,\n        columnKeys\n    } = valuesMatrix;\n    const takeAxisFrom = encoders.simpleEncoder._axisFrom;\n    const takeHeaderFrom = encoders.simpleEncoder._headerFrom;\n\n    selectionObj = selection || {};\n\n    ['pie', X, Y].forEach((axis) => {\n        const axisFrom = axis === X ? takeAxisFrom.column : takeAxisFrom.row;\n        selectionObj = axisPlaceholderGn(context, selectionObj, cells)(axis, axisFrom);\n    });\n\n    const {\n        rowsPrimary,\n        rowsSecondary,\n        columnsPrimary,\n        columnsSecondary\n    } = selectionObj;\n\n    const rowAxis = rowsPrimary && rowsPrimary.getObjects().length ? rowsPrimary.getObjects() :\n        (rowsSecondary && rowsSecondary.getObjects().length ? rowsSecondary.getObjects() : []);\n    const colAxis = columnsPrimary && columnsPrimary.getObjects().length ? columnsPrimary.getObjects() :\n        (columnsSecondary && columnsSecondary.getObjects().length ? columnsSecondary.getObjects() : []);\n\n    const headerConfig = [\n        { type: LEFT, section: rows[0], axis: rowAxis, headerFrom: takeHeaderFrom.row },\n        { type: RIGHT, section: rows[1], axis: rowAxis, headerFrom: takeHeaderFrom.row },\n        { type: TOP, section: columns[0], axis: colAxis, headerFrom: takeHeaderFrom.column },\n        { type: BOTTOM, section: columns[1], axis: colAxis, headerFrom: takeHeaderFrom.column }\n    ];\n\n    headerConfig.forEach((config, index) => {\n        let keys;\n        let length;\n        const {\n            type,\n            section,\n            axis,\n            headerFrom\n        } = config;\n\n        if (index < 2) {\n            keys = rowKeys;\n            length = rowProjections.length > 0 ? rowProjections.length : 1;\n        } else {\n            keys = columnKeys;\n            length = colProjections.length > 0 ? colProjections.length : 1;\n        }\n        keys = keys.map(arr => arr.map(val => resolver.valueParser()(val)));\n        if (section.length && headerFrom === type && axis && keys.length) {\n            const hContext = { axis, length, type };\n            let headers = [];\n            if (index < 2) {\n                hContext.keys = keys;\n                hContext.facet = facet.rows;\n                headers = headerPlaceholderGn(hContext, selectionObj, cells, labelManager);\n            } else {\n                hContext.facet = facet.columns;\n                hContext.keys = keys[0].map((key, i) => keys.map(e => e[i]));\n\n                headers = headerPlaceholderGn(hContext, selectionObj, cells, labelManager);\n            }\n            selectionObj[`${type}Headers`] = headers;\n        } else {\n            selectionObj[`${type}Headers`] = null;\n        }\n    });\n    return selectionObj;\n};\n\n/**\n * Generates matrices\n *\n * @param {Object} config Configuration to generate matrices\n * @param {Array} matrices Matrices containing the set of visual units and axes units\n * @param {Object} cells Contains a collection of the cells\n * @param {Object} labelManager smart label instance\n * @return {Object} contains a collection of matrices\n */\nexport const generateMatrices = (context, matrices, cells, labelManager) => {\n    const {\n        unitHeight,\n        unitWidth,\n        facetsAndProjections,\n        normalizedRows,\n        normalizedColumns,\n        selection,\n        axisFrom,\n        facet,\n        encoders,\n        resolver\n     } = context;\n    const placeholderContext = {\n        fields: {\n            rows: normalizedRows,\n            columns: normalizedColumns\n        },\n        matrices,\n        facetsAndProjections,\n        selection,\n        axisFrom,\n        facet,\n        encoders,\n        resolver\n    };\n    // Generate placeholders for all matrices\n    const selectionObj = generatePlaceholders(placeholderContext, cells, labelManager);\n    const {\n        columnsPrimary,\n        columnsSecondary,\n        rowsPrimary,\n        rowsSecondary,\n        leftHeaders,\n        topHeaders,\n        bottomHeaders,\n        rightHeaders\n    } = selectionObj;\n    const [rowPrime, rowSec, colPrime, colSec] = [rowsPrimary, rowsSecondary, columnsPrimary, columnsSecondary]\n        .map(d => (d ? d.getObjects() : []));\n    const [leftFacets, rightFacets] = [leftHeaders, rightHeaders]\n        .map(e => (e ? e.getObjects()\n                        .map(f => f.getObjects()) : []));\n    let rowPriority = rowSec.length ? 1 : -1;\n    rowPrime.length && rowPriority++;\n    let colPriority = colSec.length ? 1 : -1;\n    colPrime.length && colPriority++;\n\n    // Compute left matrix using left headers and the axes on the rows\n    let leftMatrix = leftFacets.length ? leftFacets.map((d, i) => {\n        rowPrime[i] = rowPrime[i] ? [rowPrime[i]] : [];\n        return [...d, ...rowPrime[i]];\n    }) : (rowPrime ? rowPrime.map(d => [d]) : []);\n\n    // Compute right matrix using right headers and the axes on the rows\n    const rightMatrix = rowSec.length ? rowSec.map((d, i) => [d, ...(rightFacets[i] || [])]) : (rightFacets.length ?\n        rightFacets.map(d => [...d]) : []);\n\n    const topMatrix = [];\n    if (topHeaders) {\n        const headers = topHeaders.getObjects();\n        headers.forEach((e) => {\n            const innerHeaders = e.getObjects();\n            innerHeaders.forEach((x, i) => {\n                topMatrix[i] = topMatrix[i] || [];\n                topMatrix[i].push(x);\n            });\n        });\n    }\n    // Compute top matrix using the top headers and axes on the columns\n    if (colPrime.length) {\n        topMatrix.push(colPrime);\n    }\n\n    // Bottom and right matrices are prepared using the user config.\n    let bottomMatrix = [];\n    if (colSec.length) {\n        bottomMatrix.push(colSec);\n    }\n    const currentBottomLength = bottomMatrix.length;\n    if (bottomHeaders) {\n        const headers = bottomHeaders.getObjects();\n        headers.forEach((e) => {\n            const innerHeaders = e.getObjects();\n            innerHeaders.forEach((x, i) => {\n                bottomMatrix[i + currentBottomLength] = bottomMatrix[i + currentBottomLength] || [];\n                bottomMatrix[i + currentBottomLength].push(x);\n            });\n        });\n    }\n\n    if (!leftMatrix.length && !rightMatrix.length) {\n        const cell = new cells.BlankCell();\n        cell.setAvailableSpace(unitWidth, unitHeight);\n        leftMatrix = [[cell]];\n    }\n\n    if (!topMatrix.length && (!bottomMatrix.length || !bottomMatrix[0].length)) {\n        const cell = new cells.BlankCell();\n        cell.setAvailableSpace(unitWidth, unitHeight);\n        bottomMatrix = [[cell]];\n    }\n\n    return {\n        rows: [leftMatrix, rightMatrix],\n        columns: [topMatrix, bottomMatrix],\n        selectionObj,\n        colPriority,\n        rowPriority\n    };\n};\n\n/**\n * Computes matrices for a group\n *\n * @param {Object} datamodel on which the matrices are to be computed\n * @param {Object} config configuration of the matrices\n * @param {Object} layerRegistry contains the registered layers\n * @return {Object} conputed matrices\n * @memberof MatrixResolver\n */\nexport const computeMatrices = (context, config) => {\n    const {\n        resolver,\n        datamodel,\n        componentRegistry,\n        encoders\n    } = context;\n    const {\n            globalConfig,\n            selection,\n            transform\n        } = config;\n    const groupBy = globalConfig.autoGroupBy;\n    const { smartlabel: labelManager } = resolver.dependencies();\n    const fieldMap = datamodel.getFieldsConfig();\n    const layerConfig = resolver.layerConfig();\n    const registry = resolver.registry();\n    const { fields: normalizedRows } = resolver.horizontalAxis();\n    const { fields: normalizedColumns } = resolver.verticalAxis();\n    const otherEncodings = resolver.optionalProjections(config, layerConfig);\n    const facetsAndProjections = resolver.getAllFields();\n    const matrixGnContext = {\n        // Configuration to be passed to generate the  different matrices.\n        // A common config is used for both value matrices and other matrices\n        normalizedColumns,\n        normalizedRows,\n        facetsAndProjections,\n        layers: layerConfig,\n        fieldMap,\n        otherEncodings,\n        encoders,\n        facet: globalConfig.facet || {},\n        axisFrom: globalConfig.axisFrom || {},\n        selection,\n        resolver\n    };\n    const cells = {\n        GeomCell: resolver.getCellDef(registry.GeomCell),\n        AxisCell: resolver.getCellDef(registry.AxisCell),\n        BlankCell: resolver.getCellDef(registry.BlankCell),\n        TextCell: resolver.getCellDef(registry.TextCell)\n    };\n    const isRowSizeEqual = isDistributionEqual(normalizedRows);\n    const isColumnSizeEqual = isDistributionEqual(normalizedColumns);\n\n    resolver.colCells({});\n    resolver.rowCells({});\n    resolver.datamodelTransform(transform || {});\n\n    // Cell creation begins here\n    resolver.resetSimpleAxes();\n\n    const {\n        entryCellMap\n    } = resolver.cacheMaps();\n    const newCacheMap = {\n        exitCellMap: entryCellMap,\n        entryCellMap: new Map()\n    };\n\n    resolver.cacheMaps(newCacheMap);\n\n    const valueCellContext = {\n        config: globalConfig,\n        suppliedLayers: encoders.simpleEncoder.serializeLayerConfig(resolver.layerConfig()),\n        resolver,\n        cell: cells.GeomCell,\n        encoder: encoders.simpleEncoder,\n        newCacheMap,\n        detailFields: config.detail\n    };\n    const fieldsConfig = datamodel.getFieldsConfig();\n    let groupedModel = datamodel;\n    if (!groupBy.disabled) {\n        const fields = getFieldsFromSuppliedLayers(valueCellContext.suppliedLayers, datamodel.getFieldsConfig());\n        const allFields = extractFields(facetsAndProjections, fields);\n\n        const dimensions = allFields.filter(field =>\n            fieldsConfig[field] && fieldsConfig[field].def.type === FieldType.DIMENSION);\n        const aggregationFns = groupBy.measures;\n        const measureNames = Object.keys(datamodel.getFieldspace().getMeasure());\n        const nearestAggFns = retrieveNearestGroupByReducers(datamodel, ...measureNames);\n        const resolvedAggFns = mergeRecursive(nearestAggFns, aggregationFns);\n\n        groupedModel = datamodel.groupBy(dimensions.length ? dimensions : [''], resolvedAggFns).project(allFields);\n    }\n\n    // return a callback function to create the cells from the matrix\n    const cellCreator = resolver.valueCellsCreator(valueCellContext);\n    // Creates value matrices from the datamodel and configs\n    const valueMatrixInfo = getMatrixModel(groupedModel, facetsAndProjections, cellCreator);\n\n    resolver.cacheMaps().exitCellMap.forEach((placeholder) => {\n        placeholder.remove();\n    });\n    resolver.cacheMaps().exitCellMap.clear();\n    resolver.valueMatrix(valueMatrixInfo.matrix);\n\n    const { xAxes, yAxes } = mutateAxesFromMap(resolver.cacheMaps(), resolver.axes());\n\n    resolver.axes({\n        x: xAxes,\n        y: yAxes\n    });\n    const store = resolver.store();\n\n    [xAxes, yAxes].forEach((axesArr, type) => {\n        const stateProps = {};\n        axesArr = axesArr || [];\n        axesArr.forEach((axes, idx) => {\n            axes.forEach((axis, axisIndex) => {\n                stateProps[`${idx}${axisIndex}`] = null;\n            });\n        });\n        store.append(`${STATE_NAMESPACES.GROUP_GLOBAL_NAMESPACE}.domain.${type ? 'y' : 'x'}`, stateProps);\n    });\n    resolver.createUnits(componentRegistry, config);\n\n    const matrices = {\n        valuesMatrix: valueMatrixInfo,\n        axesMatrix: resolver.axes()\n    };\n    // Create all matrices\n    const {\n        rows,\n        columns,\n        selectionObj,\n        rowPriority,\n        colPriority\n    } = generateMatrices(matrixGnContext, matrices, cells, labelManager);\n\n    resolver.rowMatrix(rows);\n    resolver.columnMatrix(columns);\n\n    return {\n        rows: resolver.rowMatrix(),\n        columns: resolver.columnMatrix(),\n        values: resolver.valueMatrix(),\n        isColumnSizeEqual,\n        isRowSizeEqual,\n        priority: {\n            row: rowPriority,\n            col: colPriority\n        },\n        selection: selectionObj,\n        dataModels: {\n            groupedModel,\n            parentModel: datamodel\n        }\n    };\n};\n","export const RESOLVER_PROPS = {\n    dependencies: {},\n    units: {},\n    datamodelTransform: {},\n    layerConfig: {},\n    matrixLayers: {},\n    colCells: {},\n    rowCells: {},\n    rowMatrix: {},\n    columnMatrix: {},\n    valueMatrix: {},\n    encoder: {},\n    valueParser: {}\n};\n","import { VisualUnit } from '@chartshq/visual-unit';\nimport { generateGetterSetters, STATE_NAMESPACES } from 'muze-utils';\nimport {\n     initializeCacheMaps,\n     headerCreator,\n     extractUnitConfig,\n     setFacetsAndProjections\n} from './group-utils';\nimport {\n     ROW, COL, LEFT, RIGHT, COLOR, SIZE, SHAPE, DETAIL, CELL, X_AXES, Y_AXES, ENTRY_CELLS, EXIT_CELLS, INITIALIZED,\n     AXIS, UNIT, BEFORE_UPDATE, UPDATED, VALUE_MATRIX, FACET_HEADERS\n} from '../enums/constants';\nimport { createValueCells, computeMatrices } from './cell-creator';\nimport { RESOLVER_PROPS } from './resolver-props';\n\n/**\n * Resolves the matrices from configuration provided\n *\n * @export\n * @class MatrixResolver\n */\nexport default class MatrixResolver {\n\n    /**\n     * Creates an instance of MatrixResolver.\n     * @param {Object} dependencies needed to run the resolver\n     * @memberof MatrixResolver\n     */\n    constructor (dependencies) {\n        this._registry = {};\n        this._layerConfig = [];\n        this._matrixLayers = [];\n        this._dependencies = dependencies;\n        this._rowMatrix = [];\n        this._columnMatrix = [];\n        this._valueMatrix = [];\n        this._facets = { rowFacets: [], colFacets: [] };\n        this._projections = { rowProjections: [], colProjections: [] };\n        this._datamodelTransform = {};\n        this._units = [];\n        this._cacheMaps = {};\n        this._axes = {\n            x: {},\n            y: {},\n            color: [],\n            size: [],\n            shape: []\n        };\n        generateGetterSetters(this, RESOLVER_PROPS);\n        this.cacheMaps(initializeCacheMaps());\n    }\n\n    /**\n     * Set:  Registers placeholders, Get: return {Object} those placeholders\n     *\n     * @param {Object} placeholders cells that will construct the group\n     * @return {Object} Either current instance or the set of placeholders\n     * @memberof MatrixResolver\n     */\n    registry (...placeholders) {\n        if (placeholders.length) {\n            Object.entries(placeholders[0]).forEach((val) => {\n                this._registry[val[0]] = val[1];\n            });\n            return this;\n        }\n        return this._registry;\n    }\n\n    /**\n     * Used to set the layer config from outside or get current layer info\n     *\n     * @param {Object} type configuration of layer provided externally\n     * @return {Object} either the layer or current instance\n     * @memberof MatrixResolver\n     */\n    cacheMaps (...maps) {\n        if (maps.length) {\n            [CELL, X_AXES, Y_AXES, ENTRY_CELLS, EXIT_CELLS].forEach((e) => {\n                this._cacheMaps[`${e}Map`] = maps[0][`${e}Map`] || this._cacheMaps[`${e}Map`];\n            });\n            return this;\n        }\n        return this._cacheMaps;\n    }\n\n    /**\n     * Used to set the layer config from outside or get current layer info\n     *\n     * @param {Object} type configuration of layer provided externally\n     * @return {Object} either the layer or current instance\n     * @memberof MatrixResolver\n     */\n    axes (...axes) {\n        if (axes.length) {\n            this._axes = Object.assign({}, this._axes, axes[0]);\n            return this;\n        }\n        return this._axes;\n    }\n\n    /**\n     *\n     *\n     * @param {*} facets\n     *\n     * @memberof MatrixResolver\n     */\n    facets (...facets) {\n        if (facets.length) {\n            Object.entries(facets[0]).forEach((e) => {\n                this._facets[e[0]] = e[1];\n            });\n            return this;\n        }\n        return this._facets;\n    }\n\n    /**\n     *\n     *\n     * @param {*} projections\n     *\n     * @memberof MatrixResolver\n     */\n    projections (...projections) {\n        if (projections.length) {\n            Object.entries(projections[0]).forEach((e) => {\n                this._projections[e[0]] = e[1];\n            });\n            return this;\n        }\n        return this._projections;\n    }\n\n    /**\n     *\n     *\n     * @param {*} config\n     * @param {*} layerConfig\n     *\n     * @memberof MatrixResolver\n     */\n    optionalProjections (config, layerConfig) {\n        const otherEncodings = {};\n        const optionalProjections = [];\n        const otherEncodingTypes = [SIZE, COLOR, SHAPE];\n\n        otherEncodingTypes.forEach((type) => {\n            if (config[type] && config[type].field) {\n                const enc = config[type];\n                otherEncodings[type] = enc.field;\n                optionalProjections.push(enc.field);\n            }\n        });\n\n        if (config[DETAIL]) {\n            optionalProjections.push(...config.detail);\n        }\n\n        if (layerConfig.length) {\n            layerConfig.forEach((layer) => {\n                if (layer.encoding) {\n                    Object.values(layer.encoding).forEach((enc) => {\n                        if (enc && optionalProjections.indexOf(enc.field) === -1) {\n                            optionalProjections.push(enc.field ? enc.field : enc);\n                        }\n                    });\n                }\n            });\n        }\n        this.projections({ optionalProjections });\n        return otherEncodings;\n    }\n\n    /**\n     * return the normalized set of rows and facets and projections\n     *\n     * @param {Object} rows parameters needed to set horizontal axis consisiting of rows\n     * @return {Object} facets, projections and normalized rows\n     * @memberof MatrixResolver\n     */\n    horizontalAxis (rows, encoder) {\n        if (rows) {\n            this._horizontalAxis = setFacetsAndProjections(this, { type: ROW, fields: rows }, encoder);\n            return this;\n        }\n        return this._horizontalAxis;\n    }\n\n    /**\n     * return the normalized set of columns and facets and projections\n     *\n     * @param {Object} columns parameters needed to set vertical axis consisiting of columns\n     * @return {Object} facets, projections and normalized columns\n     * @memberof MatrixResolver\n     */\n    verticalAxis (columns, encoder) {\n        if (columns) {\n            this._verticalAxis = setFacetsAndProjections(this, { type: COL, fields: columns }, encoder);\n            return this;\n        }\n        return this._verticalAxis;\n    }\n\n    /**\n     * Gets the class definition of a particular cell type(if the particular type has been extended, that particular\n     * definition is returned)\n     *\n     * @param {Object} cell cell whose class definition is to be retrieved\n     * @return {Object} cell definition\n     * @memberof MatrixResolver\n     */\n    getCellDef (cell) {\n        const registry = this.registry();\n\n        Object.values(registry).forEach((e) => {\n            if (e.prototype instanceof cell) {\n                cell = e;\n            }\n        });\n        return cell;\n    }\n\n    /**\n     * return a visual cell creator along with its axis information to be injected to the datamodel creation\n     * function\n     *\n     * @param {Object} GeomCell Type of cell to be created\n     * @return {Object} Created cell\n     * @memberof MatrixResolver\n     */\n    valueCellsCreator (context) {\n        // reset matrix layers\n        this.matrixLayers([]);\n\n        return (datamodel, fieldInfo, facets) => createValueCells(context, datamodel, fieldInfo, facets);\n    }\n\n    /**\n     * Callback to be applied on each cell of a matrix of a particular type\n     *\n     * @param {string} matrixType type of matrix on which callback is to be applied\n     * @param {Function} callback function to be applied to each cell\n     * @memberof MatrixResolver\n     */\n    forEach (matrixType, callback) {\n        this[matrixType]().forEach((row, rIndex) => {\n            row.forEach((col, cIndex) => {\n                callback(rIndex, cIndex, col);\n            });\n        });\n    }\n\n    /**\n     *\n     *\n     *\n     * @memberof MatrixResolver\n     */\n    getAllFields () {\n        const retObj = this.projections();\n\n        Object.entries(this.facets()).forEach((e) => {\n            retObj[e[0]] = e[1];\n        });\n        return retObj;\n    }\n\n    /**\n     *\n     *\n     * @memberof MatrixResolver\n     */\n    resetSimpleAxes () {\n        return this.axes({\n            x: new Set(),\n            y: new Set()\n        });\n    }\n\n    /**\n     *\n     *\n     * @param {*} componentRegistry\n     * @param {*} config\n     * @memberof MatrixResolver\n     */\n    createUnits (componentRegistry, config) {\n        const {\n            globalConfig,\n            alias\n        } = config;\n        const {\n            layerRegistry,\n            sideEffectRegistry\n        } = componentRegistry;\n        const {\n            smartlabel: smartLabel,\n            lifeCycleManager\n        } = this.dependencies();\n        // Provide the source for the matrix\n        const units = [[]];\n        // Setting unit configuration\n        const unitConfig = extractUnitConfig(globalConfig || {});\n        const globalState = VisualUnit.getState()[0];\n        const globalStates = {};\n        const store = this.store();\n        this.forEach(VALUE_MATRIX, (i, j, el) => {\n            let unit = el.source();\n            if (!unit) {\n                const namespace = `${i}${j}`;\n\n                unit = VisualUnit.create({\n                    layerRegistry,\n                    sideEffectRegistry\n                }, {\n                    smartLabel,\n                    lifeCycleManager\n                });\n                globalStates[namespace] = null;\n                unit.metaInf({\n                    rowIndex: i,\n                    colIndex: j,\n                    namespace\n                });\n                unit.store(store);\n                el.source(unit);\n            }\n            !units[i] && (units[i] = []);\n            units[i][j] = unit;\n            unit.parentAlias(alias);\n            unit.valueParser(this.valueParser());\n            el.config(unitConfig);\n        });\n\n        for (const key in globalState) {\n            store.append(`${STATE_NAMESPACES.UNIT_GLOBAL_NAMESPACE}.${key}`, globalStates);\n        }\n\n        lifeCycleManager.notify({ client: units, action: INITIALIZED, formalName: UNIT });\n        return this.units(units);\n    }\n\n    /**\n     *\n     *\n     * @param {*} config\n     * @memberof MatrixResolver\n     */\n    setDomains (config, datamodel, encoders) {\n        const {\n            color,\n            shape,\n            size,\n            globalConfig\n        } = config;\n        const groupBy = globalConfig.autoGroupBy;\n        const {\n            rowFacets,\n            colFacets\n        } = this.getAllFields();\n        const encoding = {\n            color,\n            shape,\n            size\n        };\n        const facetFields = [...rowFacets.map(e => e.toString()), ...colFacets.map(e => e.toString())];\n        const retContext = {\n            domains: encoders.simpleEncoder.getRetinalFieldsDomain(datamodel, encoding, facetFields, groupBy),\n            axes: this.axes(),\n            encoding\n        };\n        encoders.retinalEncoder.setCommonDomain(retContext);\n        return this;\n    }\n\n    resetFacetsAndProjections () {\n        this._facets = {};\n        this._projections = {};\n        return this;\n    }\n\n    /**\n     *\n     *\n     *\n     * @memberof MatrixResolver\n     */\n    getRetinalAxes () {\n        const {\n            color,\n            shape,\n            size\n        } = this.axes();\n\n        return {\n            color: [...color],\n            shape: [...shape],\n            size: [...size]\n        };\n    }\n\n    /**\n     *\n     *\n     * @param {*} type\n     *\n     * @memberof MatrixResolver\n     */\n    getSimpleAxes (type) {\n        return this.axes()[`${type}`];\n    }\n\n    /**\n     *\n     *\n     * @param {*} datamodel\n     * @param {*} config\n     * @memberof MatrixResolver\n     */\n    createRetinalAxes (fieldsConfig, config, encoders) {\n        const layerConfig = this.layerConfig();\n        this.optionalProjections(config, layerConfig);\n        const retinalAxes = encoders.retinalEncoder.createAxis({\n            fieldsConfig,\n            config,\n            axes: this.axes()\n        });\n        const {\n            lifeCycleManager\n        } = this.dependencies();\n\n        [COLOR, SHAPE, SIZE].forEach((e) => {\n            this.axes()[e] = retinalAxes[e];\n        });\n\n        lifeCycleManager.notify({ client: this.axes(), action: INITIALIZED, formalName: AXIS });\n        lifeCycleManager.notify({ client: this.units(), action: BEFORE_UPDATE, formalName: UNIT });\n\n        const units = [];\n        const matrixLayers = this.matrixLayers();\n\n        this.forEach(VALUE_MATRIX, (i, j, el) => {\n            el.axes(retinalAxes);\n            el.source() && el.source().retinalFields(config);\n            el.layerDef(encoders.retinalEncoder.getLayerConfig(config, matrixLayers[i][j]));\n            el.updateModel();\n\n            units.push(el.source());\n        });\n\n        lifeCycleManager.notify({ client: units, action: UPDATED, formalName: UNIT });\n        return this;\n    }\n\n    /**\n     *\n     *\n     * @param {*} placeholders\n     * @param {*} fieldNames\n     *\n     * @memberof MatrixResolver\n     */\n    createHeaders (placeholders, fieldNames, config) {\n        let bottomLeft = [];\n        let bottomRight = [];\n        const {\n            rows,\n            columns\n        } = placeholders;\n        const {\n            smartlabel: labelManager,\n            lifeCycleManager\n        } = this.dependencies();\n        const {\n            showHeaders,\n            classPrefix\n        } = config;\n        const TextCell = this.getCellDef(this.registry().TextCell);\n        const BlankCell = this.getCellDef(this.registry().BlankCell);\n        const [leftRows, rightRows] = rows;\n        const [topCols, bottomCols] = columns;\n        const rowHeaders = fieldNames.rows;\n        const blankCellCreator = cell => new BlankCell().config({ show: cell.config().show });\n\n        // Headers and footers are created based on the rows. Thereafter, using the column information\n        // they are tabularized into the current structure\n        const headers = {\n            left: headerCreator(leftRows, rowHeaders[0], showHeaders ? TextCell : BlankCell,\n                { classPrefix, labelManager }),\n            right: headerCreator(rightRows, rowHeaders[1], showHeaders ? TextCell : BlankCell,\n                { classPrefix, labelManager })\n        };\n        const footers = {\n            left: leftRows.length > 0 ? leftRows[0].map(blankCellCreator) : [],\n            right: rightRows.length > 0 ? rightRows[0].map(blankCellCreator) : []\n        };\n        const [topLeft, topRight] = [LEFT, RIGHT].map(type => topCols.map((col, i) => {\n            if (i === topCols.length - 1) {\n                return headers[type];\n            }\n            return footers[type];\n        }));\n\n        // Creating only bottom matrices if there is no information on the top\n        if (topCols.length === 0) {\n            [bottomLeft, bottomRight] = [LEFT, RIGHT].map(type => bottomCols.map((col, i) => {\n                if (i === 0) {\n                    return headers[type];\n                }\n                return footers[type];\n            }));\n        } else {\n            bottomLeft = bottomCols.map(() => (leftRows.length > 0 ? leftRows[0].map(blankCellCreator) : []));\n            bottomRight = bottomCols.map(() => (rightRows.length > 0 ? rightRows[0].map(blankCellCreator) : []));\n        }\n\n        lifeCycleManager.notify({\n            client: [topLeft, topRight, bottomLeft, bottomRight],\n            action: INITIALIZED,\n            formalName: FACET_HEADERS\n        });\n\n        return { topLeft, topRight, bottomLeft, bottomRight };\n    }\n\n    /**\n     *\n     *\n     * @param {*} datamodel\n     * @param {*} config\n     * @param {*} componentRegistry\n     * @param {*} encoders\n     *\n     * @memberof MatrixResolver\n     */\n    getMatrices (datamodel, config, componentRegistry, encoders) {\n        const context = {\n            datamodel,\n            componentRegistry,\n            encoders,\n            resolver: this\n        };\n\n        return computeMatrices(context, config);\n    }\n\n    store (...params) {\n        if (params.length) {\n            this._store = params[0];\n            return this;\n        }\n        return this._store;\n    }\n}\n","/**\n * This is a wrapper class over the matrix of cells which gets created in visual group. Visual Group creates left,\n * right, bottom and top and center matrices and wraps them using this class.\n *\n * @public\n * @class ValueMatrix\n */\nclass ValueMatrix {\n\n    /**\n     * Creates an instance of ValueMatrix.\n     *\n     * @param {Array} matrixArr Matrix array.\n     */\n    constructor (matrixArr) {\n        const instancesById = {};\n\n        this.matrix(matrixArr || []);\n        this.filter(() => true);\n\n        this.each((el, rIdx, cIdx) => {\n            const cellValue = el.valueOf();\n            if (cellValue && cellValue.id) {\n                const id = cellValue.id();\n                instancesById[id] = {\n                    instance: cellValue,\n                    rowIndex: rIdx,\n                    colIndex: cIdx\n                };\n            }\n        });\n\n        this.instancesById(instancesById);\n    }\n\n    instancesById (...id) {\n        if (id.length) {\n            this._instancesById = id[0];\n            return this;\n        }\n        return this._instancesById;\n    }\n\n    /**\n     * Returns the array of matrices contained in this instance.\n     *\n     * @public\n     * @return {Array} Array of matrices.\n     */\n    matrix (...matrix) {\n        if (matrix.length) {\n            this._matrix = matrix[0];\n            return this;\n        }\n        return this._matrix;\n    }\n\n    /**\n     * Sets a filter criteria. This filter criteria gets applied when each function is called.\n     *\n     * @public\n     * @param {Function} fn Filter function.\n     *\n     * @return {ValueMatrix} Instance of value matrix.\n     */\n    filter (...fn) {\n        if (fn.length) {\n            this._filterFn = fn[0];\n            return this;\n        }\n        return this._filterFn;\n    }\n\n    /**\n     * Returns the total width occupied by all the cells of the matrix.\n     *\n     * @return {Number} Width of the matrix.\n     */\n    width () {\n        let rowWidth = 0;\n\n        this.matrix().forEach((row) => {\n            let currentRowWidth = 0;\n            row.forEach((cell) => {\n                currentRowWidth += cell.getLogicalSpace().width;\n            });\n            rowWidth = Math.max(rowWidth, currentRowWidth);\n        });\n        return rowWidth;\n    }\n\n    /**\n     * Returns the total width occupied by all the cells of the matrix.\n     *\n     * @return {Number} Width of the matrix.\n     */\n    height () {\n        let rowHeight = 0;\n\n        this.matrix().forEach((row) => {\n            let currentRowHeight = 0;\n            row.forEach((cell) => {\n                currentRowHeight = Math.max(currentRowHeight, cell.getLogicalSpace().height);\n            });\n            rowHeight += currentRowHeight;\n        });\n        return rowHeight;\n    }\n\n    /**\n     * Iterates through the two dimensional matrix array and calls the given callback function with the cell instance,\n     * row index, column index and the matrix array.\n     *\n     * @param {Function} fn Callback function which will get called for every cell.\n     * @return {ValueMatrix} Instance of the value matrix.\n     */\n    each (fn) {\n        const matrix = this.matrix();\n        const filterFn = this.filter();\n\n        matrix.forEach((row, rIndex) => {\n            row.forEach((col, cIndex) => {\n                if (filterFn(col)) {\n                    fn(col, rIndex, cIndex, matrix);\n                }\n            });\n        });\n        return this;\n    }\n\n    findPlaceHolderById (id) {\n        return this.instancesById()[id];\n    }\n}\n\nexport default ValueMatrix;\n","import { VisualUnit } from '@chartshq/visual-unit';\nimport { STATE_NAMESPACES, CommonProps } from 'muze-utils';\nimport { BaseLayer } from '@chartshq/visual-layer';\nimport { getEncoder, getBorders } from '../group-helper';\nimport { RetinalEncoder } from '../encoder';\nimport { registerDomainChangeListener, unsubscribeChangeListeners } from './change-listener';\nimport ValueMatrix from './value-matrix';\n\nexport const createUnitState = (context) => {\n    const [globalState] = VisualUnit.getState();\n    const store = context.store();\n    store.append(STATE_NAMESPACES.UNIT_GLOBAL_NAMESPACE, globalState);\n};\n\nexport const initializeGlobalState = (context) => {\n    const globalState = context.constructor.getState()[0];\n    const store = context.store();\n    store.append(STATE_NAMESPACES.GROUP_GLOBAL_NAMESPACE, globalState);\n};\n\nexport const createLayerState = (context) => {\n    const [globalState] = BaseLayer.getState();\n    context.store().append(STATE_NAMESPACES.LAYER_GLOBAL_NAMESPACE, globalState);\n};\n\nconst sanitizeRetinalConfig = (retinalConf) => {\n    const conf = {};\n    for (const key in retinalConf) {\n        const confValue = retinalConf[key];\n        if (typeof confValue === 'string' || !confValue) {\n            conf[key] = {\n                field: retinalConf[key]\n            };\n        } else {\n            conf[key] = confValue;\n        }\n    }\n    return conf;\n};\n\nexport const setMatrixInstances = (context, placeholder) => {\n    let {\n        values,\n        rows,\n        columns\n    } = placeholder;\n    values = values || [];\n    rows = rows || [];\n    columns = columns || [];\n    context._composition.matrices = {\n        value: new ValueMatrix(values),\n        left: new ValueMatrix(rows[0]),\n        right: new ValueMatrix(rows[1]),\n        top: new ValueMatrix(columns[0]),\n        bottom: new ValueMatrix(columns[1])\n    };\n\n    context._dependencies.throwback.commit(CommonProps.MATRIX_CREATED, true);\n    return context;\n};\n\nexport const createMatrices = (context) => {\n    const rows = context.rows();\n    const columns = context.columns();\n    const color = context.color();\n    const datamodel = context.data();\n    const size = context.size();\n    const detail = context.detail();\n    const layers = context.layers();\n    const transform = context.transform();\n    const config = context.config();\n    const shape = context.shape();\n\n    // Get the resolver for the matrices\n    const resolver = context.resolver();\n    resolver.store(context.store());\n    resolver.valueParser(context.valueParser());\n    // Prepare configuration for matrix preparation\n    let matrixConfig = {\n        selection: context.selection(),\n        alias: context.alias(),\n        globalConfig: config || {},\n        rows,\n        columns,\n        detail,\n        layers,\n        transform\n    };\n\n    unsubscribeChangeListeners(context);\n\n    const retinalConfig = sanitizeRetinalConfig({\n        color,\n        shape,\n        size\n    });\n\n    matrixConfig = Object.assign(matrixConfig, retinalConfig);\n    // Create the encoders for the group\n    const encoders = {};\n    encoders.retinalEncoder = new RetinalEncoder();\n    encoders.simpleEncoder = getEncoder(layers);\n    resolver.encoder(encoders.simpleEncoder);\n\n    // Set the group type\n    context.groupType(encoders.simpleEncoder.constructor.type());\n\n    // Get sanitized fields as instances of the Vars Class\n    const fields = encoders.simpleEncoder.fieldSanitizer(datamodel, matrixConfig);\n    encoders.simpleEncoder.setAxisAndHeaders(config ? config.axisFrom : {}, fields);\n    // Setting layers for the code\n    layers && resolver.layerConfig(layers);\n    // Set the row and column axes\n    resolver.horizontalAxis(fields.rows, encoders).verticalAxis(fields.columns, encoders);\n    // Getting the placeholders\n    const placeholderInfo = resolver.getMatrices(datamodel, matrixConfig, context.registry(), encoders);\n    context._groupedDataModel = placeholderInfo.dataModels.groupedModel;\n    // Set the selection object\n    context.selection(placeholderInfo.selection);\n\n    // Create retinal axes\n    resolver.createRetinalAxes(placeholderInfo.dataModels.parentModel.getFieldsConfig(), retinalConfig,\n            encoders);\n\n    // Domains are evaluated for each of the axes for commonality\n    resolver.setDomains(matrixConfig, placeholderInfo.dataModels, encoders);\n\n    // Create matrix instances\n    setMatrixInstances(context, placeholderInfo);\n\n    // Prepare corner matrices\n    context.cornerMatrices(resolver.createHeaders(placeholderInfo, fields, config));\n\n    // Set placeholder information\n    context.placeholderInfo(placeholderInfo);\n\n    context._composition.axes = resolver.axes();\n    context.metaData({\n        border: getBorders(placeholderInfo, encoders.simpleEncoder)\n    });\n\n    resolver.encoder().unionUnitDomains(context);\n\n    registerDomainChangeListener(context);\n    return context;\n};\n","import { STATE_NAMESPACES } from 'muze-utils';\n\nexport const setupChangeListeners = (context) => {\n    const store = context.store();\n\n    store.registerChangeListener([`${STATE_NAMESPACES.GROUP_GLOBAL_NAMESPACE}.domain.x`], () => {\n        const groupAxes = context.resolver().axes();\n        groupAxes.x.forEach(axes => axes.forEach((axis) => {\n            axis.render();\n        }));\n    });\n\n    store.registerChangeListener([`${STATE_NAMESPACES.GROUP_GLOBAL_NAMESPACE}.domain.y`], () => {\n        const groupAxes = context.resolver().axes();\n        groupAxes.y.forEach(axes => axes.forEach((axis) => {\n            axis.render();\n        }));\n    });\n};\n\nexport const registerDomainChangeListener = (context) => {\n    const store = context.store();\n    store.registerChangeListener([`${STATE_NAMESPACES.UNIT_GLOBAL_NAMESPACE}.domain`], () => {\n        context.resolver().encoder().unionUnitDomains(context);\n    }, false, {\n        namespace: 'group',\n        key: 'unionDomain'\n    });\n};\n\nexport const unsubscribeChangeListeners = (context) => {\n    context.store().unsubscribe({\n        namespace: 'group',\n        key: 'unionDomain'\n    });\n};\n","import { ROWS, COLUMNS, COLOR, SHAPE, SIZE, DETAIL, LAYERS, TRANSFORM, CONFIG } from '../enums/constants';\n\nexport const PROPS = {\n    alias: {},\n    data: {},\n    cornerMatrices: {\n        defaultValue: {\n            topLeft: [],\n            topRight: [],\n            bottomLeft: [],\n            bottomRight: []\n        }\n    },\n    groupType: {},\n\n    metaData: {\n        defaultValue: {\n            border: {}\n        }\n    },\n    placeholderInfo: {\n        defaultValue: {}\n    },\n    resolver: {},\n    valueParser: {\n        defaultValue: val => val\n    },\n    registry: {\n        sanitization: (context, value) => {\n            if (context.resolver) {\n                context.resolver().registry(value.cellRegistry);\n            }\n            return value;\n        }\n    },\n    selection: {},\n    [CONFIG]: {},\n    [ROWS]: {},\n    [COLUMNS]: {},\n    [COLOR]: {},\n    [SHAPE]: {},\n    [SIZE]: {},\n    [DETAIL]: {},\n    [LAYERS]: {},\n    [TRANSFORM]: {}\n};\n","import { generateGetterSetters } from 'muze-utils';\nimport localOptions from './local-options';\nimport { SimpleGroup } from '../simple-group';\nimport {\n    MatrixResolver,\n    findInGroup\n} from '../group-helper';\nimport { createUnitState, initializeGlobalState, setMatrixInstances, createMatrices, createLayerState } from './helper';\nimport { setupChangeListeners } from './change-listener';\nimport { PROPS } from './props';\nimport {\n    CONFIG,\n    MOUNT,\n    RETINAL,\n    Y\n} from '../enums/constants';\n\n/**\n * VisualGroup is instantiated by canvas for creating {@link VisualUnit} and axes instances.It creates the\n * the matrix of visual units and axes. It also creates the layout instance which manages the allocation\n * of space of matrices.\n *\n * To get instance of visual group,\n * ```\n *      const visualGroup = canvas.composition().visualGroup;\n * ```\n * @public\n *\n * @class VisualGroup\n */\nclass VisualGroup extends SimpleGroup {\n\n    /**\n     * Creates an instance of VisualGroup. Requires dependencies and other registry options for placeholders\n     * and layers that create individual units.\n     *\n     * @param {Object} registry Key value pair of compostions for the group\n     * @param {Object} dependencies Dependencies needed to run the group\n     * @memberof VisualGroup\n     */\n    constructor (registry, dependencies) {\n        super();\n\n        const {\n            componentSubRegistry\n        } = registry;\n\n        this._dependencies = dependencies;\n        // Generate getter/setter methods for all properties of the class\n        // One can get each property by calling the method and can set it\n        // by passing paramaters for the same. Thus, one can chain setter\n        // getter methods.\n        generateGetterSetters(this, PROPS);\n        generateGetterSetters(this, localOptions);\n        // Populate the store with default values\n        // initialize group compositions\n        this._composition = {};\n        // store reference to data\n        this._data = [];\n        // store reference to mountpoint\n        this._mount = null;\n        // selection object that takes care of updating of components\n        this._selection = {};\n        // Create instance of matrix resolver\n        this.resolver(new MatrixResolver(this._dependencies));\n        // matrix instance store each of the matrices\n        setMatrixInstances(this, {});\n         // Getting indiviual registered items\n        this.registry({\n            layerRegistry: componentSubRegistry.layerRegistry.get(),\n            cellRegistry: componentSubRegistry.cellRegistry.get()\n        });\n    }\n\n    static getState () {\n        return [{\n            domain: {\n                x: {},\n                y: {},\n                radius: {}\n            }\n        }, {}];\n    }\n\n    store (...params) {\n        if (params.length) {\n            this._store = params[0];\n            initializeGlobalState(this);\n            createUnitState(this);\n            createLayerState(this);\n            // Register listeners\n            setupChangeListeners(this);\n            return this;\n        }\n        return this._store;\n    }\n\n    /**\n     * Return the instances of matrices created by the visual group.\n     *\n     * @return {Object} Instance of matrices.\n     */\n    matrixInstance (...matrices) {\n        if (matrices.length) {\n            return this;\n        }\n        return this.composition().matrices;\n    }\n\n    /**\n     * Returns the composition of visual group.\n     *\n     * @public\n     *\n     * @return {Object} Composition of visual group. It contains instance of matrices {@link ValueMatrix}\n     * and instances of axis.\n     * ```\n     *          {\n     *              matrices: {\n     *                  value: // Instance of center value matrix.\n     *                  left: // Instance of left value matrix\n     *                  right: // Instance of right value matrix\n     *                  bottom: // Instance of bottom value matrix\n     *                  top: // Instance of top value matrix.\n     *              },\n     *              axes: {\n     *                  x: // Array of x axis.\n     *                  y: // Array of y axis\n     *                  color: // Array of color axis\n     *                  shape: // Array of shape axis\n     *                  size: // Array of size axis.\n     *              }\n     *          }\n     * ```\n     */\n    composition (...params) {\n        if (params.length) {\n            return this;\n        }\n        return this._composition;\n    }\n\n    /**\n     * Locks the model to prevent change listeners to be triggered until unlocked\n     *\n     * @return {Object} Instance of class VisualGroup\n     * @memberof VisualGroup\n     */\n    lockModel () {\n        this.store().model.lock();\n        return this;\n    }\n\n    /**\n     * Unlocks the model so that all change listeners can be triggered\n     *\n     * @return {Object} Instance of class VisualGroup\n     */\n    unlockModel () {\n        this.store().model.unlock();\n        return this;\n    }\n\n    /**\n     * Returns the channel name of the variable. Channels are rows, columns, color, shape and size.\n     *\n     * @public\n     * @param {string} variable Name of the variable.\n     *\n     * @return {string} Name of the channel.\n     */\n    where (variable) {\n        return findInGroup(variable, this.resolver().getAllFields());\n    }\n\n    /**\n     * Gets the axis instances of the visual group based on the given axis type.\n     *\n     * @public\n     * @param {string} type Type of axis. X,Y or retinal axes.\n     *\n     * @return {Array} Array of axis instances.\n     */\n    getAxes (type) {\n        if (type === RETINAL) {\n            return this.resolver().getRetinalAxes();\n        }\n        return this.resolver().getSimpleAxes(type);\n    }\n\n    /**\n     * Returns the instances of cells based on the given type. Type can be given as `row' or `col`.\n     *\n     * @public\n     * @return {Array} Two dimensional array of cells.\n     */\n    getCells (type) {\n        return this.resolver()[`${type}Cells`]();\n    }\n\n    getFieldsFromChannel (channel) {\n        const {\n            rowProjections,\n            colProjections\n        } = this.resolver().getAllFields();\n        return channel === Y ? rowProjections : colProjections;\n    }\n\n    getCellsByFacetKey (facetKey) {\n        const resolver = this.resolver();\n        const cells = resolver.rowCells()[facetKey] || resolver.colCells()[facetKey] || [];\n        return cells;\n    }\n\n    getAxesByFacetKey (axisType, facetKey) {\n        const resolver = this.resolver();\n        const cells = resolver.rowCells()[facetKey] || resolver.colCells()[facetKey];\n        const axes = cells[0].valueOf().axes()[axisType] || [];\n\n        return axes;\n    }\n\n    /**\n     * This method is used to return a serialized representation of the instance's properties.\n     *\n     * @return {Object} Object with config proprties.\n     * @memberof VisualGroup\n     */\n    serialize () {\n        const store = this.store();\n\n        return {\n            [CONFIG]: store.get(CONFIG),\n            [MOUNT]: store.get(MOUNT)\n        };\n    }\n\n    /**\n     * Returns the grouped datamodel prepared by visual group. If there is no group by performed, then it returns the\n     * original data model passed to visual group.\n     *\n     * @return {DataModel} Grouped data model.\n     */\n    getGroupByData () {\n        return this._groupedDataModel;\n    }\n\n    createMatrices () {\n        createMatrices(this);\n    }\n}\n\nexport default VisualGroup;\n","import { PersistentBehaviour, SELECTION } from '@chartshq/muze-firebolt';\n\nexport default class SelectBehaviour extends PersistentBehaviour {\n    static formalName () {\n        return 'select';\n    }\n\n    setSelectionSet (addSet, selectionSet) {\n        if (addSet === null) {\n            selectionSet.reset();\n        } else if (addSet.length) {\n            // new add set\n            const existingRemoveSet = addSet.filter(d => selectionSet._set[d] === SELECTION.SELECTION_OLD_EXIT\n                || selectionSet._set[d] === SELECTION.SELECTION_NEW_EXIT);\n                // existing add set\n            if (existingRemoveSet.length) {\n                selectionSet.updateEntry();\n                selectionSet.add(existingRemoveSet);\n            } else {\n                selectionSet.updateExit();\n                selectionSet.remove(addSet);\n            }\n            const { exitSet } = selectionSet.getSets();\n            const mergedExitSet = [...new Set(exitSet[1]), ...new Set(exitSet[0])];\n            const completeSetCount = selectionSet.getCompleteSet().length;\n            if (exitSet[1].length !== completeSetCount && mergedExitSet.length === completeSetCount) {\n                selectionSet.reset();\n            }\n        } else {\n            selectionSet.remove(selectionSet.getCompleteSet());\n        }\n        return this;\n    }\n}\n","import { BEHAVIOURS, ACTIONS } from '@chartshq/muze-firebolt';\n\nconst CLASSPREFIX = 'muze';\n\nexport const actionBehaviourMap = {\n    [ACTIONS.DRAG]: {\n        target: `.${CLASSPREFIX}-gradient-rect`,\n        behaviours: [BEHAVIOURS.BRUSH]\n    },\n    [ACTIONS.HOVER]: {\n        target: [`.${CLASSPREFIX}-legend-columns`],\n        behaviours: [BEHAVIOURS.HIGHLIGHT]\n    },\n    [ACTIONS.CLICK]: {\n        target: [`.${CLASSPREFIX}-legend-columns`],\n        behaviours: [BEHAVIOURS.SELECT]\n    }\n};\n\nexport const propagationBehaviourMap = {\n    [BEHAVIOURS.SELECT]: BEHAVIOURS.FILTER,\n    [BEHAVIOURS.BRUSH]: BEHAVIOURS.HIGHLIGHT\n};\n","import * as BEHAVIOURS from '../enums/behaviours';\nimport * as sideEffects from '../enums/side-effects';\n\nexport const behaviourEffectMap = {\n    [BEHAVIOURS.BRUSH]: [sideEffects.SELECTIONBOX, {\n        name: sideEffects.Highlighter,\n        options: {\n            strategy: 'fade'\n        }\n    }],\n    [BEHAVIOURS.HIGHLIGHT]: [sideEffects.Highlighter],\n    select: [{\n        name: sideEffects.Highlighter,\n        options: {\n            strategy: 'fade'\n        }\n    }]\n};\n\nexport const propagationSideEffects = {\n    [BEHAVIOURS.BRUSH]: [{\n        name: sideEffects.Highlighter,\n        options: {\n            strategy: 'fade'\n        }\n    }],\n    [BEHAVIOURS.HIGHLIGHT]: [{\n        name: sideEffects.Highlighter,\n        options: {\n            strategy: 'fade'\n        }\n    }],\n    [BEHAVIOURS.SELECT]: ['filter']\n};\n\n","export const BRUSH = 'brush';\nexport const HIGHLIGHT = 'highlight';\nexport const TOOLTIP = 'tooltip';\nexport const FILTER = 'filter';\nexport const SELECT = 'select';\n\n","export const SELECTIONBOX = 'selectionBox';\nexport const Highlighter = 'highlighter';\n\n","export const CLASSPREFIX = 'muze';\nexport const IDFIELD = '__id__';\nexport const CONFIG = 'config';\nexport const DATAMODEL = 'dataModel';\nexport const AXES = 'axes';\nexport const LAYERDEFS = 'layerDef';\nexport const WIDTH = 'width';\nexport const MAXWIDTH = 'max-width';\nexport const HEIGHT = 'height';\nexport const MOUNTPOINT = 'mountPoint';\nexport const GRIDLINEPARENTGROUPCLASS = 'grid-lines';\nexport const TRANSFORM = 'transform';\nexport const CONSOLIDATED = 'consolidated';\nexport const FRAGMENTED = 'fragmented';\nexport const DEFAULTCOLOR = '#F44336';\nexport const DEFAULTSIZE = 50;\nexport const DEFAULTSHAPE = 'circle';\nexport const STEP = 'step';\nexport const GRADIENT = 'gradient';\nexport const ORDINAL = 'ordinal';\nexport const SCALE_FUNCTIONS = {\n    size: 'getSize',\n    shape: 'getShape',\n    color: 'getColor'\n};\nexport const TOP = 'top';\nexport const LEFT = 'left';\nexport const RIGHT = 'right';\nexport const BOTTOM = 'bottom';\nexport const HORIZONTAL = 'horizontal';\nexport const VERTICAL = 'vertical';\nexport const CENTER = 'center';\nexport const VALUE = 'value';\nexport const PATH = 'path';\nexport const SHAPE = 'shape';\nexport const ICON = 'icon';\nexport const RECT = 'rect';\nexport const START = 'start';\nexport const UPPER = 'upper';\nexport const LOWER = 'lower';\nexport const END = 'end';\nexport const SIZE = 'size';\nexport const DISCRETE = 'discrete';\nexport const MEASURE = 'measure';\n\n","import { assembleModelFromIdentifiers, getDataModelFromRange } from 'muze-utils';\nimport { propagationBehaviourMap } from './action-behaviour-map';\nimport { propagationSideEffects } from './behaviour-effect-map';\nimport { STEP, GRADIENT, DISCRETE, MEASURE } from '../enums/constants';\n\nexport const propagate = (firebolt, action, selectionSet, config = {}) => {\n    let propagationData;\n    const type = firebolt.context.constructor.type();\n    const payload = config.payload;\n    const data = firebolt.context.data();\n    const metaData = firebolt.context.metaData();\n    const fieldType = metaData.getData().schema[0].type;\n\n    const propPayload = {};\n    const sourceId = firebolt.context._id;\n    propPayload.action = propagationBehaviourMap[action] || action;\n    propPayload.sideEffects = propagationSideEffects[action];\n    propPayload.sourceCanvas = firebolt.context.canvasAlias();\n    const isMutableAction = firebolt._actions.behavioural[propPayload.action].constructor.mutates();\n    if (payload.criteria === null) {\n        propagationData = null;\n    } else {\n        const entrySet = selectionSet.mergedEnter;\n        let values = data.filter(d => entrySet.uids.indexOf(d.id) !== -1).map(d => d.rawVal);\n        if (type === STEP || (type === DISCRETE && fieldType === MEASURE)) {\n            const field = Object.keys(payload.criteria || {})[0];\n            values = data.filter(d => entrySet.uids.indexOf(d.id) !== -1).map(d => d.range);\n            propagationData = values.length ? metaData.select((fields) => {\n                let check = false;\n                for (let i = 0; i < values.length; i++) {\n                    check = fields[field].value >= values[i][0] && fields[field].value <= values[i][1];\n                    if (check === true) {\n                        break;\n                    }\n                }\n                return check;\n            }, {\n                saveChild: false\n            }) : null;\n        } else if (type === GRADIENT) {\n            propagationData = getDataModelFromRange(metaData, payload.criteria);\n        } else if (values.length) {\n            propagationData = assembleModelFromIdentifiers(metaData, [payload.criteria[0], ...values.map(d => [d])]);\n        } else {\n            propPayload.criteria = null;\n            propagationData = metaData.select(() => true, {\n                saveChild: false\n            });\n        }\n    }\n\n    let propagateInterpolatedValues = false;\n\n    if (propagationData) {\n        const schema = propagationData.getSchema();\n        propagateInterpolatedValues = schema.every(d => d.type === MEASURE);\n    }\n\n    const propConfig = {\n        sourceId: `legend-${sourceId}`,\n        payload: propPayload,\n        criteria: propPayload.criteria === null ? null : propagationData,\n        isMutableAction,\n        propagateInterpolatedValues,\n        action: propPayload.action\n    };\n\n    metaData.propagate(propagationData, propConfig, true);\n};\n","import { Firebolt } from '@chartshq/muze-firebolt';\nimport { propagate } from './helper';\nimport { STEP, GRADIENT } from '../enums/constants';\n\n/**\n * This class manages the interactions of legend.\n * @export\n * @class LegendFireBolt\n * @extends {Firebolt}\n */\nexport class LegendFireBolt extends Firebolt {\n    constructor (...params) {\n        super(...params);\n        this.initializeSideEffects();\n    }\n\n    getPropagationSelectionSet (selectionSet) {\n        return selectionSet[0];\n    }\n\n    propagate (behaviourName, payload, selectionSet) {\n        propagate(this, behaviourName, selectionSet, {\n            payload\n        });\n    }\n\n    getAddSetFromCriteria (criteria) {\n        let values;\n        let uniqueIds;\n        const type = this.context.constructor.type();\n\n        if (criteria === null) {\n            uniqueIds = null;\n        } else if (type === STEP) {\n            values = Object.values(criteria);\n            uniqueIds = this.context.data().filter(d => values.indexOf(d.range) !== -1).map(d => d.id);\n        } else if (type === GRADIENT) {\n            uniqueIds = [];\n        } else {\n            values = criteria[1];\n            if (values) {\n                uniqueIds = this.context.data().filter(d => values.indexOf(d.rawVal) !== -1).map(d => d.id);\n            } else {\n                values = Object.values(criteria);\n                uniqueIds = this.context.data().filter(d => values.indexOf(d.range) !== -1).map(d => d.id);\n            }\n        }\n        return {\n            uids: uniqueIds,\n            model: null\n        };\n    }\n\n    getFullData () {\n        return null;\n    }\n}\n","import {\n    getEvent,\n    getD3Drag\n } from 'muze-utils';\n\n/**\n * Adds dragging action to the target element.\n * @param {firebolt} firebolt firebolt\n * @param {SVGElement} targetEl Element on which brushing action is needed.\n * @param {Array} behaviours Array of behaviours\n */\n/* istanbul ignore next */ const drag = firebolt => (targetEl, behaviours) => {\n    let startPos = {};\n    let endPos = {};\n    let payload;\n    const d3Drag = getD3Drag();\n    const context = firebolt.context;\n    const boundingBox = context.measurement().gradientDimensions;\n    const axisType = context.config().align === 'horizontal' ? 'x' : 'y';\n    const axisScale = context.axis().source().scale();\n    const rangeShifter = axisScale.range()[axisType === 'x' ? 0 : 1];\n\n    targetEl.call(d3Drag().on('start', () => {\n        const event = getEvent();\n        startPos = {\n            x: event.x,\n            y: event.y\n        };\n    }).on('drag', () => {\n        const event = getEvent();\n\n        endPos = {\n            x: event.x,\n            y: event.y\n        };\n        endPos.x = Math.max(0, Math.min(endPos.x, boundingBox.width));\n        endPos.y = Math.max(0, Math.min(endPos.y, boundingBox.height));\n\n        payload = {\n            criteria: {\n                [context.fieldName()]: [axisScale.invert(startPos[axisType] + rangeShifter * 2),\n                    axisScale.invert(endPos[axisType] + rangeShifter * 2)].sort((a, b) => a - b)\n            }\n        };\n        behaviours.forEach(behaviour => firebolt.dispatchBehaviour(behaviour, payload));\n    }).on('end', () => {\n        const event = getEvent();\n\n        endPos = {\n            x: event.x,\n            y: event.y\n        };\n        endPos.x = Math.max(0, Math.min(endPos.x, boundingBox.width));\n        endPos.y = Math.max(0, Math.min(endPos.y, boundingBox.height));\n        if (startPos[axisType] === endPos[axisType]) {\n            payload = {\n                criteria: {}\n            };\n        } else {\n            payload = {\n                criteria: {\n                    [context.fieldName()]: [axisScale.invert(startPos[axisType] + rangeShifter * 2),\n                        axisScale.invert(endPos[axisType] + rangeShifter * 2)].sort((a, b) => a - b)\n                }\n            };\n        }\n        behaviours.forEach(behaviour => firebolt.dispatchBehaviour(behaviour, payload));\n    }));\n};\n\nexport default drag;\n","import { getEvent } from 'muze-utils';\n\n/**\n * Adds mouse interactions to target element.\n * @param {Firebolt} Firebolt instance of firebolt.\n * @param {SVGElement} targetEl Element on which the event listeners will be attached.\n * @param {Array} behaviours Array of behaviours\n */\n/* istanbul ignore next */ const hover = firebolt => (targetEl, behaviours) => {\n    const dispatchBehaviour = function (args) {\n        const event = getEvent();\n        const payload = {\n            criteria: firebolt.context.getCriteriaFromData(args)\n        };\n        behaviours.forEach(behaviour => firebolt.dispatchBehaviour(behaviour, payload));\n        event.stopPropagation();\n    };\n\n    targetEl.on('mouseover', dispatchBehaviour)\n                    .on('mousemove', dispatchBehaviour)\n                    .on('mouseout', () => {\n                        const event = getEvent();\n                        behaviours.forEach(behaviour => firebolt.dispatchBehaviour(behaviour, {\n                            criteria: null\n                        }));\n                        event.stopPropagation();\n                    });\n};\n\nexport default hover;\n","/**\n * Adds mouse interactions to target element.\n * @param {VisualUnit} instance instance of visual unit.\n * @param {SVGElement} targetEl Element on which the event listeners will be attached.\n * @param {Array} behaviours Array of behaviours\n */\nconst click = firebolt => (targetEl, behaviours) => {\n    const dispatchBehaviour = function (args) {\n        const payload = {\n            criteria: firebolt.context.getCriteriaFromData(args)\n        };\n        behaviours.forEach(behaviour => firebolt.dispatchBehaviour(behaviour, payload));\n    };\n\n    targetEl.on('click', dispatchBehaviour);\n};\n\nexport default click;\n","import drag from './drag';\nimport hover from './hover';\nimport click from './click';\nimport * as ACTIONNAMES from '../../enums/actions';\n\nexport const physicalActions = {\n    [ACTIONNAMES.DRAG]: drag,\n    [ACTIONNAMES.HOVER]: hover,\n    [ACTIONNAMES.CLICK]: click\n};\n\n","export const DRAG = 'drag';\nexport const HOVER = 'hover';\nexport const SELECTIONDRAG = 'selectiondrag';\nexport const CLICK = 'click';\n","import {\n    getMousePos,\n    getEvent,\n    getD3Drag\n } from 'muze-utils';\nimport { HEIGHT, WIDTH, HORIZONTAL } from '../../enums/constants';\n\nconst getSelectionCriteria = (subject, axis, measures) => {\n    let criteria = [];\n    const {\n        axisScale,\n        axisType\n    } = axis;\n    const {\n        startPos,\n        endPos,\n        selectionBoxMeasure,\n        drawingInfMeasure,\n        offset\n    } = measures;\n    const subjectStartPoint = subject[axisType];\n\n    if (startPos[axisType] === endPos[axisType]) {\n        criteria = [];\n    } else if (subjectStartPoint + selectionBoxMeasure >= drawingInfMeasure + offset) {\n        criteria = [axisScale.invert(drawingInfMeasure + offset - selectionBoxMeasure),\n            axisScale.invert(drawingInfMeasure + offset)];\n    } else if (subjectStartPoint - offset < offset) {\n        criteria = [axisScale.invert(offset * 2), axisScale.invert(selectionBoxMeasure + offset * 2)];\n    } else {\n        criteria = [axisScale.invert(subjectStartPoint), axisScale.invert(subjectStartPoint + selectionBoxMeasure)];\n    }\n    axisType === 'x' ? criteria : criteria.reverse();\n    return criteria;\n};\n\nexport const selectionBoxDrag = firebolt => (targetEl, behaviours) => {\n    let startPos = {};\n    let payload;\n    const endPos = {};\n    const d3Drag = getD3Drag();\n    const context = firebolt.context;\n    const axisScale = context.axis().source().scale();\n    const axisType = context.config().align === HORIZONTAL ? 'x' : 'y';\n    const drawingInfMeasure = context.measurement().gradientDimensions[axisType === 'x' ?\n        WIDTH : HEIGHT];\n    const offset = axisScale.range()[axisType === 'x' ? 0 : 1];\n    const measures = {\n        drawingInfMeasure,\n        offset\n    };\n    let subject = {};\n\n    targetEl.call(d3Drag().on('start', function () {\n        const event = getEvent();\n        startPos = getMousePos(this, event.sourceEvent);\n        subject = event.subject;\n    }).on('drag', () => {\n        const event = getEvent();\n        const selectionBoxMeasure = subject[axisType === 'x' ? WIDTH : HEIGHT];\n\n        subject.x += event.dx;\n        subject.y += event.dy;\n\n        measures.selectionBoxMeasure = selectionBoxMeasure;\n        measures.startPos = startPos;\n        measures.endPos = endPos;\n        const criteria = getSelectionCriteria(subject, { axisScale, axisType }, measures);\n\n        payload = {\n            criteria: {\n                [context.fieldName()]: criteria\n            },\n            fadeOut: true\n        };\n        firebolt.dispatchBehaviour(behaviours[0], payload);\n    }).on('end', () => {\n        const event = getEvent();\n        const selectionBoxMeasure = subject[axisType === 'x' ? WIDTH : HEIGHT];\n        measures.selectionBoxMeasure = selectionBoxMeasure;\n        measures.startPos = startPos;\n        measures.endPos = endPos;\n        const criteria = getSelectionCriteria(event, { axisScale, axisType }, measures);\n        payload = {\n            criteria: {\n                [context.fieldName()]: criteria\n            },\n            fadeOut: true,\n            config: {\n                transition: {\n                    duration: 200\n                }\n            }\n        };\n        firebolt.dispatchBehaviour(behaviours[0], payload);\n    }));\n};\n\n","import { makeElement } from 'muze-utils';\nimport { SpawnableSideEffect } from '@chartshq/muze-firebolt';\nimport { CLASSPREFIX, HEIGHT, WIDTH, HORIZONTAL, RECT } from '../../../enums/constants';\nimport { SELECTIONBOX } from '../../../enums/side-effects';\nimport { selectionBoxDrag } from '../../physical/selection-box-drag';\nimport './styles.scss';\n\n/**\n * This class is used to create a selection box which is used by visual unit for brushing and\n * selection in the canvas.\n * @class SelectionBox\n */\n/* istanbul ignore next */ class SelectionBox extends SpawnableSideEffect {\n    static formalName () {\n        return SELECTIONBOX;\n    }\n\n    /**\n     * It returns the default configuration needed by selectionbox.\n     * @return {Object} Default configuration of the selection box.\n     */\n    static defaultConfig () {\n        return {\n            className: 'legend-selection-box',\n            classPrefix: CLASSPREFIX\n        };\n    }\n\n    /**\n     * Draws the selectionbox with the specified dimensions.\n     */\n    /* istanbul ignore next */ apply (selectionSet, payload) {\n        let x;\n        let y;\n        let width;\n        let height;\n        const firebolt = this.firebolt;\n        const context = firebolt.context;\n        const config = this.config();\n        const axis = context.axis().source();\n        const className = `${config.classPrefix}-${config.className}`;\n\n        const domain = payload.criteria[firebolt.context.fieldName()];\n        const axisScale = axis.scale();\n        const range = domain ? [axis.getScaleValue(domain[0]), axis.getScaleValue(domain[1])] : [];\n\n        const axisType = context.config().align === HORIZONTAL ? 'x' : 'y';\n\n        const gradientDimension = firebolt.context.measurement().gradientDimensions[axisType === 'x' ?\n            HEIGHT : WIDTH];\n\n        const rangeShifter = axisScale.range()[axisType === 'x' ? 0 : 1];\n        const legendGradContainer = context.getDrawingContext().svgContainer;\n        const legendSelGroup = makeElement(legendGradContainer, 'g', [1], `${config.classPrefix}-selection-box-group`);\n\n        if (firebolt.context.config().align === HORIZONTAL) {\n            x = range[0] - rangeShifter || 0;\n            y = 0;\n            width = range[1] - range[0] || 0;\n            height = gradientDimension;\n        } else {\n            x = 0;\n            y = range[1] - rangeShifter || 0;\n            height = range[0] - range[1] || 0;\n            width = gradientDimension;\n        }\n        const enterFn = function (el) {\n            selectionBoxDrag(firebolt)(el, ['brush']);\n        };\n        const selBox = makeElement(legendSelGroup, RECT, [{ domain, x, y, width, height }], className,\n            { enter: enterFn });\n        selBox.attr('y', y)\n                        .attr('x', x)\n                        .attr(WIDTH, width)\n                        .attr(HEIGHT, height);\n    }\n}\n\nexport default SelectionBox;\n\n","import { selectElement } from 'muze-utils';\n\nexport const strategies = (firebolt) => {\n    const context = firebolt.context;\n    const classed = (set, className, change) => {\n        const classPrefix = context.config().classPrefix;\n        selectElement(context.mount())\n                        .selectAll(`.${classPrefix}-legend-columns`)\n                        .filter(d => set.uids.indexOf(d.id) !== -1)\n                        .selectAll('div')\n                        .classed(className, change);\n    };\n\n    return {\n        fade: (set, config = {}) => {\n            const classPrefix = context.config().classPrefix;\n            if (!set.mergedEnter.length && !set.mergedExit.length) {\n                classed(set.completeSet, config.className || `${classPrefix}-legend-fadeout`, false);\n            } else {\n                classed(set.mergedExit, config.className || `${classPrefix}-legend-brighten`, false);\n                classed(set.mergedExit, config.className || `${classPrefix}-legend-fadeout`, true);\n                classed(set.mergedEnter, config.className || `${classPrefix}-legend-fadeout`, false);\n            }\n        },\n        brighten: (set, config = {}) => {\n            const classPrefix = context.config().classPrefix;\n            if (!set.mergedEnter.length && !set.mergedExit.length) {\n                classed(set.completeSet, config.className || `${classPrefix}-legend-brighten`, false);\n            } else {\n                classed(set.mergedEnter, config.className || `${classPrefix}-legend-brighten`, true);\n                classed(set.mergedExit, config.className || `${classPrefix}-legend-brighten`, false);\n            }\n        }\n    };\n};\n","import { GenericSideEffect } from '@chartshq/muze-firebolt';\nimport { strategies } from './strategies';\nimport { Highlighter } from '../../../enums/side-effects';\n\nexport default class LegendHighlighter extends GenericSideEffect {\n    constructor (...params) {\n        super(...params);\n        this._strategies = strategies(this.firebolt);\n        this._strategy = 'brighten';\n    }\n\n    static formalName () {\n        return Highlighter;\n    }\n\n    apply (selectionSet, payload, options = {}) {\n        const strategy = this._strategies[options.strategy || this._strategy];\n\n        strategy(selectionSet, this);\n    }\n}\n","import { mergeRecursive } from 'muze-utils';\n\nexport const PROPS = {\n    config: {\n        sanitization: (context, value) => mergeRecursive(context._config || {}, value)\n    },\n    data: {},\n    fieldName: {},\n    legendContainer: {},\n    measurement: {\n        sanitization: (context, value) => {\n            const measurement = mergeRecursive(context._measurement, value);\n            ['padding', 'border', 'margin'].forEach((space) => {\n                measurement[space] = Math.min(measurement[space] > 0 ? measurement[space] : 0,\n                     measurement.maxWidth * 0.1, measurement.maxHeight * 0.1);\n            });\n            return measurement;\n        }\n    },\n    logicalSpace: {},\n    metaData: {},\n    range: {\n        sanitization: (context, value) => {\n            context.scale().range(value);\n            context.resetLogicalSpace();\n            context.store().commit('range', value);\n            return value;\n        }\n    },\n    scale: {},\n    smartTicks: {},\n    store: {},\n    title: {\n        sanitization: (context, value) => mergeRecursive(context._title || {}, value)\n    },\n    valueParser: {\n        defaultValue: val => val\n    }\n};\n","import { getSymbol } from 'muze-utils';\nimport {\n    CENTER,\n    LEFT,\n    RIGHT\n} from '../enums/constants';\n\nexport const ALIGN = {\n    HORIZONTAL: 'horizontal',\n    VERTICAL: 'vertical'\n};\n\nexport const DEFAULT_MEASUREMENT = {\n    height: 30,\n    width: 30,\n    maxWidth: Infinity,\n    maxHeight: Infinity,\n    padding: 2,\n    margin: 2,\n    border: 1\n};\n\nexport const LEGEND_TITLE = {\n    text: '',\n    orientation: (pos) => {\n        if (pos === LEFT || pos === RIGHT) {\n            return LEFT;\n        } return CENTER;\n    }\n};\n\nexport const DEFAULT_CONFIG = {\n    classPrefix: 'muze',\n    borderStyle: 'solid',\n    borderColor: 'rgba(0,0,0,0)',\n    formatter: {\n        bounds: {\n            lower: 'less than',\n            upper: 'more than'\n        }\n    },\n    item: {\n        text: {\n            orientation: 'right',\n            width: 10,\n            formatter: (val, i, data, context) => context.valueParser()(val)\n        },\n        icon: {\n            className: 'legend-icon',\n            height: 20,\n            width: 20,\n            color: 'rgba(0,0,0,.5)',\n            type: 'square'\n        }\n    }\n};\n\n/**\n * Creates a map of pre defined icons\n *\n * @param {string} icon Accepts a icon name like 'square', 'cross', 'diamond' etc\n * @return {Object} icon object which can be used to draw the icons\n */\nexport const ICON_MAP = (icon) => {\n    if (icon && typeof (icon) === 'string') {\n        return getSymbol(icon);\n    } return icon;\n};\n","import { makeElement, numberInterpolator } from 'muze-utils';\n\nimport {\n    SCALE_FUNCTIONS,\n    WIDTH,\n    HEIGHT,\n    LEFT,\n    RIGHT,\n    TOP,\n    BOTTOM,\n    MAXWIDTH\n} from '../enums/constants';\n\n/**\n *\n *\n * @param {*} scale\n *\n */\nexport const getScaleInfo = (scale) => {\n    const scaleType = scale.constructor.type();\n    const domain = scale.uniqueValues();\n    const steps = scale.config().stops || 1;\n    const scaleFn = SCALE_FUNCTIONS[scaleType];\n\n    return { scaleType, domain, steps, scaleFn };\n};\n\n/**\n *\n *\n * @param {*} domain\n * @param {*} steps\n *\n */\nexport const getInterpolatedData = (domain, steps) => {\n    const domainForLegend = [];\n    const interpolatedFn = numberInterpolator()(domain[0], domain[1]);\n\n    for (let i = 0; i <= steps; i++) {\n        domainForLegend[i] = interpolatedFn(i / steps);\n    }\n    return domainForLegend;\n};\n\n/**\n *\n *\n * @param {*} container\n * @param {*} text\n * @param {*} measurement\n * @param {*} classPrefix\n */\nexport const titleCreator = (container, title, measurement, config) => {\n    const titleWidth = Math.min(measurement.maxWidth, measurement.width);\n\n    const titleContainer = makeElement(container, 'table', [1], `${config.classPrefix}-legend-title`)\n            .style(WIDTH, `${titleWidth}px`)\n            .style(HEIGHT, `${measurement.height}px`)\n            .style('border-bottom', `${measurement.border}px ${config.borderStyle} ${config.borderColor}`)\n            .style('text-align', title.orientation instanceof Function ?\n            title.orientation(config.position) : title.orientation);\n    return makeElement(titleContainer, 'td', [1], `${config.classPrefix}-legend-title-text`)\n                    .style(WIDTH, `${titleWidth}px`)\n                    .style(MAXWIDTH, `${titleWidth}px`)\n                    .style(HEIGHT, '100%')\n                    .style('line-height', 1)\n                    .style('padding', `${measurement.padding}px`)\n                    .text(title.text)\n                    .style('overflow-x', 'scroll')\n                    .node();\n};\n\n/**\n *\n *\n * @param {*} data\n * @param {*} prop\n * @param {*} labelManager\n *\n */\nexport const getMaxMeasures = (data, prop, labelManager) => {\n    let maxHeight = -Infinity;\n    let maxWidth = -Infinity;\n\n    data.forEach((item) => {\n        const value = prop ? item[prop] : item;\n        const space = labelManager.getOriSize(value);\n        maxHeight = Math.max(space.height + 2, maxHeight);\n        maxWidth = Math.max(space.width + 2, maxWidth);\n    });\n\n    return { height: maxHeight, width: maxWidth };\n};\n\n/**\n *\n *\n * @param {*} data\n * @param {*} prop\n * @param {*} labelManager\n *\n */\nexport const getItemMeasures = (context, prop, formatter) => {\n    const space = [];\n    const data = context.data();\n    const labelManager = context._labelManager;\n\n    data.forEach((item, index) => {\n        const value = prop ? item[prop] : item;\n        const { height, width } = labelManager.getOriSize(formatter(value, index, data, context));\n        space[index] = { height: height + 1, width: width + 1 };\n    });\n    return space;\n};\n\n/**\n *\n *\n * @param {*} textOrientation\n * @param {*} effPadding\n * @param {*} titleSpace\n *\n * @memberof Legend\n */\nexport const computeItemSpaces = (config, measures, data) => {\n    let totalHeight = 0;\n    let totalWidth = 0;\n    let maxItemSpaces = {\n        width: 0, height: 0\n    };\n    const {\n        effPadding,\n        titleWidth,\n        labelSpaces,\n        titleHeight,\n        maxWidth\n    } = measures;\n    const {\n        item,\n        align\n    } = config;\n    const {\n        icon,\n        text\n    } = item;\n    const textOrientation = text.orientation;\n    const itemSpaces = [];\n    const iconSpaces = [];\n    let maxIconWidth = 0;\n    labelSpaces.forEach((labelSpace, i) => {\n        const itemSpace = { width: 0, height: 0 };\n        const iconSpace = { width: 0, height: 0 };\n        const datum = data[i] || {};\n            // Compute each legend item height/width\n        if (textOrientation === LEFT || textOrientation === RIGHT) {\n            // Get label, icon and item widths\n            labelSpace.width += effPadding;\n            iconSpace.width = (datum.size ? 2 * Math.sqrt(datum.size / Math.PI) : icon.width) + effPadding;\n            maxIconWidth = Math.max(iconSpace.width, maxIconWidth);\n            itemSpace.width = labelSpace.width + maxIconWidth;\n\n            // Get label, icon and item heights\n            labelSpace.height = Math.max(labelSpace.height, icon.height) + effPadding;\n            iconSpace.height = labelSpace.height;\n            itemSpace.height = labelSpace.height;\n        } else {\n            // Get label, icon and item widths\n            labelSpace.width = Math.max(labelSpace.width, datum.size ? 2 * Math.sqrt(datum.size / Math.PI)\n            : icon.width) + effPadding;\n            iconSpace.width = labelSpace.width;\n            itemSpace.width = labelSpace.width;\n            maxIconWidth = Math.max(iconSpace.width, maxIconWidth);\n\n            // Get label, icon and item heights\n            labelSpace.height += effPadding;\n            iconSpace.height = icon.height + effPadding;\n            itemSpace.height = labelSpace.height + iconSpace.height;\n        }\n        // Compute height and width of legend for each alignment\n        if (align === 'horizontal') {\n            totalHeight = Math.max(totalHeight, itemSpace.height);\n        } else {\n            totalHeight += itemSpace.height;\n            totalWidth = Math.max(totalWidth, itemSpace.width, titleWidth);\n        }\n        maxItemSpaces = {\n            width: Math.max(itemSpace.width, maxItemSpaces.width),\n            height: Math.max(itemSpace.height, maxItemSpaces.height)\n        };\n        itemSpaces.push(itemSpace);\n        iconSpaces.push(iconSpace);\n    });\n    itemSpaces.forEach((itemSpace, i) => {\n        if (align === 'horizontal') {\n            itemSpace.height = totalHeight;\n            iconSpaces[i].width = maxIconWidth;\n            if (textOrientation === LEFT || textOrientation === RIGHT) {\n                labelSpaces[i].height = totalHeight;\n                iconSpaces[i].height = totalHeight;\n                itemSpaces[i].width = labelSpaces[i].width + maxIconWidth;\n            } else {\n                labelSpaces[i].width = maxIconWidth;\n                itemSpaces[i].width = maxIconWidth;\n                labelSpaces[i].width = maxIconWidth;\n            }\n            totalWidth = Math.max(totalWidth + itemSpaces[i].width);\n        } else {\n            itemSpace.width = Math.max(totalWidth, maxWidth);\n            if (textOrientation === TOP || textOrientation === BOTTOM) {\n                labelSpaces[i].width = totalWidth;\n                iconSpaces[i].width = totalWidth;\n                maxIconWidth = totalWidth;\n            } else {\n                const labelWidth = labelSpaces[i].width;\n                const newLabelWidth = (maxItemSpaces.width - maxIconWidth);\n                iconSpaces[i].width = maxIconWidth;\n                itemSpaces[i].width = labelSpaces[i].width + maxIconWidth;\n                labelSpaces[i].width = Math.max(labelWidth, newLabelWidth);\n                totalWidth = Math.max(totalWidth, itemSpace.width);\n            }\n        }\n    });\n    totalWidth = Math.ceil(Math.max(totalWidth, titleWidth)) + effPadding;\n    totalHeight += titleHeight + effPadding;\n    totalHeight = Math.ceil(totalHeight);\n    return { totalHeight, totalWidth, itemSpaces, iconSpaces, maxItemSpaces, maxIconWidth };\n};\n\n/**\n *\n *\n * @param {*} type\n * @param {*} scaleInfo\n * @param {*} domainInfo\n *\n */\nexport const getDomainBounds = (type, scaleInfo, domainInfo) => {\n    const {\n        scaleFn,\n        scaleType,\n        scale\n    } = scaleInfo;\n    const {\n        domain,\n        domainBounds,\n        domainLeg,\n        steps\n    } = domainInfo;\n    const ele = domain[type === 'lower' ? 0 : domain.length - 1];\n    const step = steps[type === 'lower' ? 0 : steps.length - 1];\n\n    return {\n        [scaleType]: scaleType === 'size' ? scale[scaleFn](ele) * scale.getScaleFactor() : scale[scaleFn](ele),\n        value: domainBounds[type],\n        id: type === 'lower' ? 0 : domainLeg.length + 2,\n        range: [ele, step]\n    };\n};\n","import {\n    makeElement,\n    selectElement,\n    getUniqueId,\n    getSmartComputedStyle,\n    generateGetterSetters,\n    mergeRecursive\n} from 'muze-utils';\nimport { behaviouralActions } from '@chartshq/muze-firebolt';\nimport * as legendBehaviours from '../firebolt/behavioural';\n\nimport { LegendFireBolt } from '../firebolt/legend-firebolt';\nimport { actionBehaviourMap } from '../firebolt/action-behaviour-map';\nimport { physicalActions } from '../firebolt/physical';\nimport * as sideEffects from '../firebolt/side-effects';\nimport { behaviourEffectMap } from '../firebolt/behaviour-effect-map';\nimport { VALUE, PATH, RIGHT, LEFT, TOP, BOTTOM } from '../enums/constants';\nimport { PROPS } from './props';\nimport { DEFAULT_MEASUREMENT, DEFAULT_CONFIG, LEGEND_TITLE } from './defaults';\nimport { getItemMeasures, titleCreator, computeItemSpaces } from './legend-helper';\n\n/**\n * Creates a Legend from the axes of a canvas\n *\n * @param {Object} dependencies : legend data\n * @class SimpleLegend\n */\nexport default class SimpleLegend {\n\n    /**\n     * Creates an instance of Legend.\n     * @param {Object} dependencies Set of dependencies required by the legend\n     * @memberof Legend\n     */\n    constructor (dependencies) {\n        this._data = [];\n        this._metaData = [];\n        this._mount = null;\n        this._fieldName = null;\n        this._title = Object.assign({}, LEGEND_TITLE);\n        this._metaData = null;\n        this._labelManager = dependencies.labelManager;\n        this._cells = dependencies.cells;\n        this._id = getUniqueId();\n        this._measurement = Object.assign({}, this.constructor.defaultMeasurement());\n        this._config = mergeRecursive({}, this.constructor.defaultConfig());\n\n        generateGetterSetters(this, PROPS);\n        this._computedStyle = getSmartComputedStyle(selectElement('body'),\n            `${this.config().classPrefix}-legend-item-info`);\n\n        this._firebolt = new LegendFireBolt(this, {\n            behavioural: Object.assign({}, behaviouralActions, legendBehaviours),\n            physical: physicalActions,\n            physicalBehaviouralMap: actionBehaviourMap\n        }, sideEffects, behaviourEffectMap);\n    }\n\n    id () {\n        return this._id;\n    }\n    /**\n     * Initializes an instance of the class\n     *\n     * @static\n     * @param {Object} dependencies Set of dependencies required by the legend\n     * @return {Instance} returns a new instance of Legend\n     * @memberof Legend\n     */\n    static create (dependencies) {\n        return new SimpleLegend(dependencies);\n    }\n\n    /**\n     *\n     *\n     * @static\n     *\n     * @memberof SimpleLegend\n     */\n    static defaultConfig () {\n        return DEFAULT_CONFIG;\n    }\n\n    /**\n     *\n     *\n     * @static\n     *\n     * @memberof SimpleLegend\n     */\n    static defaultMeasurement () {\n        return DEFAULT_MEASUREMENT;\n    }\n\n    /**\n     *\n     *\n     * @readonly\n     * @memberof SimpleLegend\n     */\n    firebolt (...params) {\n        if (params.length) {\n            return this;\n        }\n        return this._firebolt;\n    }\n\n    /**\n     *\n     *\n     *\n     * @memberof Legend\n     */\n    elemType () {\n        return PATH;\n    }\n\n    canvasAlias (...alias) {\n        if (alias.length) {\n            this._canvasAlias = alias[0];\n            return this;\n        }\n        return this._canvasAlias;\n    }\n\n    /**\n     *\n     *\n     *\n     * @memberof Legend\n     */\n    mount (...params) {\n        if (params.length) {\n            this._mount = params[0];\n            this.render();\n            return this;\n        }\n        return this._mount;\n    }\n\n    /**\n     *\n     *\n     * @param {*} effPadding\n     * @param {*} align\n     *\n     * @memberof Legend\n     */\n    getLabelSpaces () {\n        const {\n            item,\n            classPrefix\n        } = this.config();\n        this._labelManager.setStyle(getSmartComputedStyle(selectElement('body'),\n            `${classPrefix}-legend-item-info`));\n        return getItemMeasures(this, VALUE, item.text.formatter);\n    }\n\n    /**\n     * Sets the height and width of a legend based on provided max\n     * height and width and based on its contents\n     *\n     * @return {Instance} Current instance\n     * @memberof Legend\n     */\n    setLegendMeasures () {\n        const {\n            width,\n            height,\n            maxWidth,\n            maxHeight,\n            padding,\n            margin,\n            border\n        } = this.measurement();\n        const {\n            align\n        } = this.config();\n\n        // Effective padding, margin and padding\n        const effPadding = padding * 2;\n        const effBorder = border * 2;\n        const effMargin = margin * 2;\n\n        this.data(this.dataFromScale(this.scale()));\n        // Get space occupied by title\n        const titleSpace = this.getTitleSpace();\n        const titleHeight = titleSpace.height > 0 ? titleSpace.height + effPadding : 0;\n        const titleWidth = titleSpace.width + effPadding;\n\n        // Get space occupied by labels\n        const labelSpaces = this.getLabelSpaces(effPadding, align);\n        const {\n            totalHeight, totalWidth, itemSpaces, iconSpaces, maxItemSpaces, maxIconWidth\n        } = computeItemSpaces(this.config(),\n        { effPadding, titleWidth, labelSpaces, titleHeight, maxWidth, maxHeight }, this.data());\n\n        this.measurement({\n            width: Math.max(totalWidth, width) + effMargin + effBorder,\n            height: Math.max(totalHeight, height) + effMargin + effBorder,\n            labelSpaces,\n            iconSpaces,\n            itemSpaces,\n            maxItemSpaces,\n            maxIconWidth,\n            titleSpaces: {\n                width: Math.min(maxWidth, this.measurement().width) - effMargin - effBorder,\n                height: titleHeight\n            }\n        });\n        return this;\n    }\n\n    /**\n     * Returns the space occupied by the legend title\n     *\n     * @return {Object} Space occupied by title\n     * @memberof Legend\n     */\n    getTitleSpace () {\n        this._labelManager.setStyle(getSmartComputedStyle(selectElement('body'),\n                                                `${this.config().classPrefix}-legend-title`));\n        return this._labelManager.getOriSize(this.title().text ? this.title().text : '');\n    }\n\n    /**\n     * Creates the title for the legend\n     *\n     * @param {DOM} container Container made for the title\n     * @return {Selection} Title and it's node\n     * @memberof Legend\n     */\n    renderTitle (container) {\n        const { titleSpaces, border, padding, width, maxWidth } = this.measurement();\n        const { borderStyle, borderColor } = this.config();\n        return titleCreator(container, this.title(), {\n            height: titleSpaces.height,\n            width,\n            maxWidth,\n            border,\n            padding,\n            borderStyle,\n            borderColor\n        }, this.config());\n    }\n\n    /**\n     * Render the legend with its title\n     *\n     * @param {DOM} mountPoint Point where the legend and title are to be appended\n     * @return {Instance} Current instance of legend\n     * @memberof Legend\n     */\n    render () {\n        const firebolt = this.firebolt();\n        const {\n            classPrefix,\n            borderStyle,\n            borderColor,\n            position\n        } = this.config();\n        const {\n            maxWidth,\n            maxHeight,\n            width,\n            height,\n            margin,\n            border\n        } = this.measurement();\n        const legendContainer = makeElement(selectElement(this.mount()), 'div', [1], `${classPrefix}-legend-box`);\n        let marginPosition;\n        switch (position) {\n        case TOP:\n            marginPosition = `margin-${BOTTOM}`;\n            break;\n        case LEFT:\n            marginPosition = `margin-${RIGHT}`;\n            break;\n        case BOTTOM:\n            marginPosition = `margin-${TOP}`;\n            break;\n        default:\n            marginPosition = `margin-${LEFT}`;\n        }\n        legendContainer.classed(`${classPrefix}-legend-box-${this._id}`, true);\n        legendContainer.style('float', 'left');\n        // set height and width\n        legendContainer.style('width', `${Math.min(maxWidth, width) - margin * 2}px`)\n                        .style('height', `${Math.min(maxHeight, height) - margin * 2}px`)\n                        .style(`${marginPosition}`, `${margin}px`)\n                        .style('border', `${border}px ${borderStyle} ${borderColor}`);\n        this.legendContainer(legendContainer.node());\n\n        // create title\n        this.renderTitle(legendContainer);\n        firebolt.createSelectionSet(this.data().map(d => d.id));\n        return legendContainer;\n    }\n  /**\n     *\n     *\n     * @param {*} data\n     *\n     * @memberof StepLegend\n     */\n    getCriteriaFromData (data) {\n        const fieldName = this.fieldName();\n        const type = this.metaData().getData().schema[0].type;\n        if (type === 'measure') {\n            return {\n                [fieldName]: data.range\n            };\n        }\n        return [[fieldName], [data.rawVal]];\n    }\n}\n","import {\n    LEFT,\n    RIGHT,\n    START,\n    END,\n    TOP,\n    BOTTOM,\n    HORIZONTAL,\n    VERTICAL,\n    CENTER,\n    SHAPE,\n    VALUE\n} from '../enums/constants';\n\nconst legendOrientation = {\n    [HORIZONTAL]: {\n        datasets: data => ({\n            row: [1],\n            column: data\n        }),\n        itemContainerMeasures: (measurement) => {\n            const {\n                itemSpaces,\n                width\n            } = measurement;\n            return {\n                row: {\n                    width: `${width}px`,\n                    padding: `${0}px`\n                },\n                column: {\n                    width: (d, i) => `${itemSpaces[i].width}px`,\n                    padding: `${0}px`\n                }\n            };\n        },\n        getStepSpacesInfo: (measurement) => {\n            const { maxItemSpaces, height } = measurement;\n            return {\n                iconHeight: height,\n                iconWidth: maxItemSpaces.width,\n                stepPadding: {\n                    horizontal: true,\n                    vertical: false\n                }\n            };\n        }\n    },\n    [VERTICAL]: {\n        datasets: data => ({\n            row: data,\n            column: d => [d]\n        }),\n        itemContainerMeasures: (measurement, config) => {\n            const {\n                width\n            } = measurement;\n            const { padding } = config;\n\n            return {\n                row: {\n                    width: `${width}px`,\n                    padding: `${padding}px`\n                },\n                column: {\n                    width: `${width}px`,\n                    padding: `${0}px`\n                }\n            };\n        },\n        getStepSpacesInfo: (measurement) => {\n            const { maxItemSpaces, width } = measurement;\n            return {\n                iconHeight: maxItemSpaces.height,\n                iconWidth: width,\n                stepPadding: {\n                    horizontal: false,\n                    vertical: true\n                }\n            };\n        }\n    }\n};\n\nexport const positionConfig = {\n    [LEFT]: legendOrientation[VERTICAL],\n    [RIGHT]: legendOrientation[VERTICAL],\n    [TOP]: legendOrientation[HORIZONTAL],\n    [BOTTOM]: legendOrientation[HORIZONTAL]\n};\n\nexport const alignmentMap = {\n    [LEFT]: END,\n    [RIGHT]: START,\n    [TOP]: CENTER,\n    [BOTTOM]: CENTER\n};\n\n// Reverses data for step legend\nexport const stepData = data => ({\n    [LEFT]: data.reverse(),\n    [RIGHT]: data.reverse(),\n    [TOP]: data,\n    [BOTTOM]: data\n});\n\n// Changes the item layout based on the position of the text\nexport const itemStack = {\n    [LEFT]: [VALUE, SHAPE],\n    [RIGHT]: [SHAPE, VALUE],\n    [TOP]: [VALUE, SHAPE],\n    [BOTTOM]: [SHAPE, VALUE]\n};\n","import { makeElement, selectElement, applyStyle } from 'muze-utils';\nimport { ICON_MAP } from './defaults';\nimport { positionConfig, alignmentMap, itemStack } from './position-config';\nimport {\n    WIDTH,\n    HEIGHT,\n    CENTER,\n    VALUE,\n    RECT,\n    LEFT,\n    RIGHT\n} from '../enums/constants';\n\n/**\n *\n *\n * @param {*} container\n * @param {*} data\n * @param {*} legendInstance\n * @param {*} align\n *\n */\nexport const getItemContainers = (container, data, legendInstance) => {\n    const measurement = legendInstance.measurement();\n    const config = legendInstance.config();\n    const {\n        itemSpaces\n    } = measurement;\n    const {\n        classPrefix,\n        position\n    } = config;\n    const positionObj = positionConfig[position];\n    const datasets = positionObj.datasets(data);\n    const measures = positionObj.itemContainerMeasures(measurement, config);\n\n    const rows = makeElement(container, 'div', datasets.row, `${classPrefix}-legend-row`);\n    rows.style(HEIGHT, (d, i) => `${itemSpaces[i].height}px`);\n    rows.style(WIDTH, measures.row.width);\n    rows.style('padding', measures.row.padding);\n\n    const columns = makeElement(rows, 'div', datasets.column, `${classPrefix}-legend-columns`);\n    columns.style(WIDTH, measures.column.width);\n    columns.style('padding', measures.column.padding);\n\n    return columns;\n};\n\n/**\n *\n *\n * @param {*} container\n * @param {*} classPrefix\n * @param {*} data\n *\n * @memberof DiscreteLegend\n */\nexport const createLegendSkeleton = (context, container, classPrefix, data) => {\n    let gradWidth = 0;\n    let gradHeight = 0;\n    let maxGradHeight = 0;\n    let maxGradWidth = 0;\n    const measurement = context.measurement();\n    const {\n            margin,\n            border,\n            titleSpaces,\n            width,\n            height,\n            maxWidth,\n            maxHeight\n        } = measurement;\n\n    gradHeight = height - (titleSpaces.height + 2 * margin + 2 * border);\n    gradWidth = width - (margin * 2 + border * 2);\n\n    maxGradHeight = maxHeight - (titleSpaces.height + margin * 2 + border * 2);\n    maxGradWidth = maxWidth - (margin * 2 + border * 2);\n\n    let legendBody = makeElement(container, 'div', [1], `${classPrefix}-legend-body`);\n    legendBody.select(`.${classPrefix}-legend-overflow`).remove();\n        // Create a div with scroll when overflow\n    if (maxGradWidth && maxGradWidth < gradWidth) {\n        legendBody = legendBody.style(WIDTH, `${maxGradWidth}px`).style('overflow-x', 'scroll');\n    }\n        // Create a div with scroll when overflow\n    if (maxGradHeight && maxGradHeight < gradHeight) {\n        legendBody.style(HEIGHT, `${maxGradHeight}px`).style('overflow-y', 'scroll');\n    }\n\n    legendBody = makeElement(legendBody, 'div', [1], `${classPrefix}-legend-overflow`);\n\n    legendBody.style(WIDTH, `${gradWidth}px`);\n    legendBody.style(HEIGHT, `${gradHeight}px`);\n\n    const legendItem = getItemContainers(legendBody, data, context);\n    return { legendItem };\n};\n\n/**\n * Creates legend item based on alignment and text orientation\n *\n * @param {Selection} container Point where items are to be mounted\n * @return {Instance} Current instance\n * @memberof Legend\n */\nexport const createItemSkeleton = (context, container) => {\n    const {\n        classPrefix,\n        item\n    } = context.config();\n    const textOrientation = item.text.orientation;\n\n    const stack = itemStack[textOrientation];\n    const itemSkeleton = makeElement(container, 'div', (d, i) => stack.map(e => [e, d[e], d.color, d.size,\n        d.value, context.fieldName(), i]), `${classPrefix}-legend-item-info`);\n\n    const alignClass = alignmentMap[textOrientation];\n\n    itemSkeleton.classed(alignClass, true);\n    return { itemSkeleton };\n};\n\n/**\n *\n *\n * @param {*} measureType\n * @param {*} stepColorCheck\n */\nexport const applyItemStyle = (item, measureType, stepColorCheck, context) => {\n    const {\n        padding,\n        labelSpaces,\n        iconSpaces,\n        maxIconWidth\n    } = context.measurement();\n    const diff = stepColorCheck ? -padding * 2 : 0;\n\n    if (item[0] === VALUE) {\n        return `${labelSpaces[item[6]][measureType]}px`;\n    }\n    return `${measureType === 'width' && !stepColorCheck ? maxIconWidth : iconSpaces[item[6]][measureType] - diff}px`;\n};\n\n/**\n *\n *\n * @param {*} str\n *\n */\nconst checkPath = (str) => {\n    if (/^[mzlhvcsqta]\\s*[-+.0-9][^mlhvzcsqta]+/i.test(str) && /[\\dz]$/i.test(str) && str.length > 4) {\n        return true;\n    }\n    return false;\n};\n\n/**\n *\n *\n * @param {*} d\n * @param {*} elem\n */\nconst createShape = function (d, elem, defaultIcon, width, height) {\n    const groupElement = elem;\n    // const { shape, size, update } = d;\n    const size = d[3] || Math.min(width, height) * Math.PI;\n    const shape = d[1] || defaultIcon;\n\n    if (shape instanceof Promise) {\n        shape.then((res) => {\n            d.shape = res;\n            return createShape(d, elem);\n        });\n    } else if (shape instanceof Element) {\n        let newShape = shape.cloneNode(true);\n\n        if (newShape.nodeName.toLowerCase() === 'img') {\n            const src = newShape.src || newShape.href;\n            newShape = document.createElementNS('http://www.w3.org/2000/svg', 'image');\n            newShape.setAttribute('href', src);\n        }\n        const shapeElement = selectElement(newShape);\n        shapeElement.attr('transform', `scale(${size / 100})`);\n        return selectElement(groupElement.node().appendChild(newShape));\n    } else if (typeof shape === 'string') {\n        let pathStr;\n        if (checkPath(shape)) {\n            pathStr = shape;\n        } else {\n            pathStr = ICON_MAP(shape).size(size)();\n        }\n        return makeElement(groupElement, 'path', data => [data]).attr('d', pathStr);\n    }\n    d[1] = 'circle';\n    return createShape(d, elem, 'circle');\n};\n\n/**\n * Returns the icon of the legend item\n *\n * @param {Object} datum Data property attached to the item\n * @param {number} width width of the item\n * @param {number} height height of the item\n * @return {Object|string} returns the path string or the string name of the icon\n * @memberof Legend\n */\nexport const getLegendIcon = (datum, width, height, defaultIcon) => {\n    const icon = ICON_MAP(datum[1]);\n\n    if (icon) {\n        return icon.size(datum[3] || Math.min(width, height) * Math.PI);\n    }\n    return ICON_MAP(datum[3] ? 'circle' : defaultIcon).size(datum[3] || Math.min(width, height) * Math.PI);\n};\n\n/**\n *\n *\n */\nexport const renderIcon = (icon, container, datum, context) => {\n    const {\n        classPrefix,\n        iconHeight,\n        iconWidth,\n        maxIconWidth,\n        padding,\n        color\n    } = context;\n    const svg = makeElement(container, 'svg', f => [f], `${classPrefix}-legend-icon-svg`)\n    .attr(WIDTH, maxIconWidth)\n    .attr(HEIGHT, iconHeight)\n    .style(WIDTH, `${maxIconWidth}px`)\n    .style(HEIGHT, `${iconHeight}px`);\n\n    if (icon !== RECT) {\n        const group = makeElement(svg, 'g', [datum[1]], `${classPrefix}-legend-icon`);\n        createShape(datum, group, datum[3] ? 'circle' : 'square', iconWidth, iconHeight)\n                        .attr('transform', `translate(${maxIconWidth / 2 - padding} ${iconHeight / 2})`)\n                        .attr('fill', datum[2] || color);\n    } else {\n        makeElement(svg, RECT, [datum[1]], `${classPrefix}-legend-icon`)\n                        .attr('x', 0)\n                        .attr('y', 0)\n                        .attr(WIDTH, maxIconWidth)\n                        .attr(HEIGHT, iconHeight)\n                        .attr('fill', datum[2] || color);\n    }\n};\n\n/**\n * Renders the items in the legend i.e, icon and text\n *\n * @param {DOM} container Point where item is to be mounted\n * @memberof Legend\n */\nexport const renderDiscreteItem = (context, container) => {\n    const labelManager = context._labelManager;\n    const {\n           item,\n           classPrefix\n    } = context.config();\n    const {\n        maxIconWidth,\n        padding\n    } = context.measurement();\n    const {\n            width: iconWidth,\n            height: iconHeight,\n            color,\n            className\n        } = item.icon;\n\n    const textOrientation = item.text.orientation;\n    const formatter = item.text.formatter;\n\n    labelManager.useEllipsesOnOverflow(true);\n    applyStyle(container, {\n        width: d => applyItemStyle(d, WIDTH, false, context),\n        height: d => applyItemStyle(d, HEIGHT, false, context),\n        'text-align': CENTER,\n        padding: `${padding}px`\n    });\n\n    labelManager.setStyle(context._computedStyle);\n    const dataArr = container.data();\n    container.each(function (d, i) {\n        if (d[0] === VALUE) {\n            selectElement(this).text(formatter(d[1], i, dataArr, context))\n                            .style(`padding-${textOrientation === RIGHT ? LEFT : RIGHT}`, '0px');\n        } else {\n            // const icon = getLegendIcon(d, iconWidth, iconHeight, type);\n            selectElement(this).classed(`${classPrefix}-${className}`, true);\n            selectElement(this).classed(`${classPrefix}-${className}-${i}`, true);\n            renderIcon('circle', selectElement(this), d, {\n                classPrefix,\n                iconWidth,\n                // iconWidth: 2 * Math.sqrt(d[3] / Math.PI) || iconWidth,\n                iconHeight,\n                maxIconWidth,\n                padding,\n                color\n            });\n        }\n    });\n};\n\n/**\n* Renders the items in the legend i.e, icon and text\n*\n* @param {DOM} container Point where item is to be mounted\n* @memberof Legend\n*/\nexport const renderStepItem = (context, container) => {\n    const labelManager = context._labelManager;\n    const {\n      item,\n      position,\n      classPrefix\n   } = context.config();\n    const {\n      maxItemSpaces,\n      maxIconWidth,\n      padding\n   } = context.measurement();\n    const {\n       width,\n       height,\n       color\n   } = item.icon;\n    const {\n        formatter\n   } = item.text;\n\n    labelManager.useEllipsesOnOverflow(true);\n    const { iconHeight, iconWidth, stepPadding } = positionConfig[position].getStepSpacesInfo({\n        maxItemSpaces, height, width\n    });\n\n    applyStyle(container, {\n        width: d => applyItemStyle(d, WIDTH, stepPadding.horizontal, context),\n        height: d => applyItemStyle(d, HEIGHT, stepPadding.vertical, context),\n        'text-align': 'center',\n        padding: `${padding}px`\n    });\n\n    labelManager.setStyle(context._computedStyle);\n    const dataArr = container.data();\n    container.each(function (d, i) {\n        if (d[0] === VALUE) {\n            selectElement(this).text(formatter(d[1], i, dataArr, context));\n        } else {\n            renderIcon(RECT, selectElement(this), d, {\n                classPrefix,\n                iconWidth,\n                iconHeight,\n                maxIconWidth,\n                color\n            });\n        }\n    });\n};\n","import {\n    FieldType,\n    DimensionSubtype,\n    formatTemporal\n} from 'muze-utils';\nimport SimpleLegend from './simple-legend';\nimport { DISCRETE, LEFT, SIZE } from '../enums/constants';\nimport { getScaleInfo } from './legend-helper';\nimport { createLegendSkeleton, createItemSkeleton, renderDiscreteItem } from './renderer';\nimport '../styles.scss';\n\n/**\n * Creates a Legend from the axes of a canvas\n *\n * @param {Object} dependencies : legend data\n * @class Legend\n */\nexport default class DiscreteLegend extends SimpleLegend {\n\n    /**\n     * Initializes an instance of the class\n     *\n     * @static\n     * @param {Object} dependencies Set of dependencies required by the legend\n     * @return {Instance} returns a new instance of Legend\n     * @memberof Legend\n     */\n    static create (dependencies) {\n        return new DiscreteLegend(dependencies);\n    }\n\n    /**\n     *\n     *\n     * @static\n     *\n     * @memberof DiscreteLegend\n     */\n    static type () {\n        return DISCRETE;\n    }\n\n    /**\n     *\n     *\n     * @param {*} scale\n     *\n     * @memberof DiscreteLegend\n     */\n    dataFromScale (scale) {\n        const { scaleType, domain, scaleFn } = getScaleInfo(scale);\n        let domainForLegend = [...new Set(domain)];\n        const field = this.metaData().getFieldspace().fields[0];\n        const { type, subtype } = field.schema();\n\n        domainForLegend = domainForLegend.map((ele, i) => {\n            let value = 0;\n            let range = 0;\n            const rawVal = domainForLegend[i];\n            if (type === FieldType.MEASURE) {\n                value = (+domainForLegend[i]).toFixed(0);\n                const nextVal = domainForLegend[i + 1] ? +domainForLegend[i + 1] : +value;\n                range = [value, nextVal.toFixed(0)];\n            } else {\n                let domainVal = rawVal;\n                if (subtype === DimensionSubtype.TEMPORAL) {\n                    domainVal = formatTemporal(domainForLegend[i], field.minimumConsecutiveDifference());\n                }\n                value = domainVal;\n                range = [domainVal];\n            }\n            return {\n                [scaleType]: scale[scaleFn](ele),\n                value,\n                id: i,\n                range,\n                rawVal\n            };\n        }).filter(d => d.value !== null);\n\n        domainForLegend = scaleType === SIZE ? domainForLegend.sort((a, b) => a[scaleType] - b[scaleType])\n            : domainForLegend;\n        return domainForLegend;\n    }\n\n    /**\n     * Render the legend with its title\n     *\n     * @param {DOM} mountPoint Point where the legend and title are to be appended\n     * @return {Instance} Current instance of legend\n     * @memberof Legend\n     */\n    render () {\n        const firebolt = this.firebolt();\n        const data = this.data();\n        const { classPrefix } = this.config();\n        const legendContainer = super.render(this.mount());\n        // create Legend\n        const { legendItem } = createLegendSkeleton(this, legendContainer, classPrefix, data);\n        const { itemSkeleton } = createItemSkeleton(this, legendItem);\n        renderDiscreteItem(this, itemSkeleton);\n        legendContainer.selectAll('div').style('float', LEFT);\n        firebolt.mapActionsAndBehaviour();\n        firebolt.createSelectionSet(this.data().map(d => d.id));\n        return legendContainer;\n    }\n}\n","import { makeElement, applyStyle } from 'muze-utils';\nimport { ContinousAxis } from '@chartshq/muze-axis';\nimport { BOTTOM, RIGHT } from '../enums/constants';\nimport { ALIGN } from './defaults';\nimport '../styles.scss';\n\n/**\n *\n *\n * @param {*} data\n *\n */\nexport const getGradientDomain = (data) => {\n    if (typeof data[0].value === 'number') {\n        return data.reduce((accumulator, currentValue) =>\n            [Math.min(currentValue.value, accumulator[0]), Math.max(currentValue.value, accumulator[1])],\n                [Number.MAX_VALUE, Number.MIN_VALUE]);\n    }\n    return data.map(e => e.value);\n};\n\n/**\n *\n *\n * @param {*} container\n * @param {*} data\n * @param {*} domain\n *\n */\nexport const makeLinearGradient = (container, data, domain) => {\n    const defs = makeElement(container, 'defs', [1]);\n    const linearGradient = makeElement(defs, 'linearGradient', [1])\n                .attr('id', 'linear-gradient')\n                .attr('x1', '0%')\n                .attr('y2', '0%');\n    makeElement(linearGradient, 'stop', data, 'stop-gradient')\n                    .attr('offset', d => `${(d.value - domain[0]) * 100 / (domain[1] - domain[0])}%`)\n                    .attr('stop-color', d => d.color);\n    return linearGradient;\n};\n\n/**\n * Creates an axis cell with a linear axis for computing space and\n * creating gradient legend\n *\n * @return {AxisCell} Instance of Axis Cell for the gradient axis\n * @memberof Legend\n */\nexport const createAxis = (context) => {\n    const data = context.data();\n    const { align } = context.config();\n    const AxisCell = context._cells.AxisCell;\n    const newAxis = new ContinousAxis({\n        id: `legend-${context._id}`,\n        orientation: align === ALIGN.VERTICAL ? RIGHT : BOTTOM,\n        style: context._computedStyle,\n        nice: false,\n        showAxisName: false,\n        tickValues: data.map(d => d.value),\n        fixedBaseline: false,\n        labels: {\n            rotation: 0\n        }\n    }, { labelManager: context._labelManager });\n\n    newAxis.domain(getGradientDomain(data));\n    newAxis.range([1, 1]);\n    return new AxisCell().source(newAxis).config({\n        margin: { left: 0, bottom: 0, top: 0, right: 0 }\n    });\n};\n\n/**\n *\n *\n * @param {*} container\n * @param {*} data\n * @param {*} classPrefix\n *\n * @memberof GradientLegend\n */\nconst createLegendSkeleton = (container, classPrefix, data) => {\n    const domain = getGradientDomain(data);\n    const legendContainer = makeElement(container, 'div', [1], `${classPrefix}-legend-body`);\n    const legendGradSvg = makeElement(legendContainer, 'svg', [1], `${classPrefix}-gradient`);\n    const legendGradCont = makeElement(legendGradSvg, 'g', [1], `${classPrefix}-gradient-group`);\n    const linearGradient = makeLinearGradient(legendGradSvg, data, domain);\n    const legendRect = makeElement(legendGradCont, 'rect', [1], `${classPrefix}-gradient-rect`);\n\n    return {\n        legendContainer,\n        legendGradCont,\n        legendGradSvg,\n        linearGradient,\n        legendRect\n    };\n};\n\n/**\n * Renders the axis for the gradient\n *\n * @param {Selection} container Point where axis is to be mounted\n * @param {number} height Height for axis\n * @param {number} width Width for axis\n * @memberof Legend\n */\nexport const renderAxis = (context, container, height, width) => {\n    const axis = context.axis();\n\n    axis.setAvailableSpace(width, height);\n    axis.render(container.node());\n    axis.source().render();\n};\n\n/**\n * Renders gradient legends\n *\n * @param {Selection} container Point where the legend is to be appended\n * @memberof GradientLegend\n */\nexport const renderGradient = (context, container) => {\n    let gradHeight = 0;\n    let gradWidth = 0;\n    const {\n        align,\n        classPrefix,\n        item\n    } = context.config();\n    const data = context.data();\n    // Create the skeleton for the legend\n    const {\n        legendContainer,\n        legendGradSvg,\n        legendGradCont,\n        linearGradient,\n        legendRect\n    } = createLegendSkeleton(container, classPrefix, data);\n    const labelDim = context.axis().source().getAxisDimensions().tickDimensions;\n    const {\n        padding,\n        margin,\n        border,\n        titleSpaces,\n        maxItemSpaces,\n        maxHeight,\n        maxWidth,\n        height,\n        width\n    } = context.measurement();\n    const gradientDimensions = {};\n\n    gradHeight = Math.floor(height - (titleSpaces.height + 2 * margin + 2 * border));\n    gradWidth = Math.floor(width - (margin * 2 + border * 2));\n\n    if (align === ALIGN.HORIZONTAL) {\n        gradientDimensions.height = item.icon.height;\n        gradientDimensions.width = gradWidth - 2 * padding - labelDim.width / 2;\n        linearGradient.attr('x2', '100%').attr('y1', '0%');\n        legendGradCont.attr('transform', `translate( ${labelDim.width / 2} 0)`);\n        renderAxis(context, legendContainer, gradHeight - item.icon.height - padding, gradWidth - 2 * padding - 1);\n        legendContainer.classed(`${classPrefix}-overflow-x`, width > maxWidth);\n\n        applyStyle(legendContainer, {\n            height: `${maxItemSpaces.height + border + padding}px`,\n            width: `${Math.min(width, maxWidth)}px`,\n            padding: `${padding}px`\n        });\n\n        legendRect.attr('height', gradientDimensions.height);\n        legendRect.attr('width', gradientDimensions.width - labelDim.width / 2);\n    } else {\n        gradientDimensions.height = gradHeight - 2 * padding - labelDim.height / 2;\n        gradientDimensions.width = item.icon.width;\n        linearGradient.attr('x2', '0%').attr('y1', '100%');\n        legendGradCont.attr('transform', `translate(0 ${labelDim.height / 2})`);\n        renderAxis(context, legendContainer, gradHeight - 2 * padding - 1, gradWidth - item.icon.width - padding * 2);\n        legendContainer.classed(`${classPrefix}-overflow-y`, height > maxHeight);\n        applyStyle(legendContainer, {\n            height: `${Math.min(height, maxHeight)}px`,\n            width: `${width}px`,\n            padding: `${padding}px`\n        });\n        legendRect.attr('height', gradientDimensions.height - labelDim.height / 2);\n        legendRect.attr('width', gradientDimensions.width);\n    }\n\n    // Apply Styles to the legend plot area\n    applyStyle(legendGradSvg, {\n        height: `${gradientDimensions.height}px`,\n        width: `${gradientDimensions.width}px`\n    });\n\n        // Apply styles to the legend rect\n    applyStyle(legendRect, {\n        fill: 'url(#linear-gradient)'\n    });\n    legendGradSvg.attr('height', gradientDimensions.height);\n    legendGradSvg.attr('width', gradientDimensions.width);\n\n    context.measurement({\n        gradientDimensions\n    });\n    context._legendGradientSvg = legendGradSvg;\n    return context;\n};\n","import SimpleLegend from './simple-legend';\nimport { getScaleInfo, getInterpolatedData } from './legend-helper';\nimport { GRADIENT, LEFT, SIZE } from '../enums/constants';\nimport { renderGradient, createAxis } from './gradient-helper';\nimport '../styles.scss';\n\n/**\n * Creates a Legend from the axes of a canvas\n *\n * @param {Object} dependencies : legend data\n * @class Legend\n */\nexport default class GradientLegend extends SimpleLegend {\n\n    /**\n     * Initializes an instance of the class\n     *\n     * @static\n     * @param {Object} dependencies Set of dependencies required by the legend\n     * @return {Instance} returns a new instance of Legend\n     * @memberof Legend\n     */\n    static create (dependencies) {\n        return new GradientLegend(dependencies);\n    }\n\n    /**\n     *\n     *\n     * @static\n     *\n     * @memberof GradientLegend\n     */\n    static type () {\n        return GRADIENT;\n    }\n\n    /**\n     *\n     *\n     * @param {*} axis\n     *\n     * @memberof GradientLegend\n     */\n    axis (...axis) {\n        if (axis.length) {\n            this._axis = axis[0];\n            return this;\n        }\n        return this._axis;\n    }\n\n    /**\n     *\n     *\n     * @param {*} scale\n     *\n     * @memberof GradientLegend\n     */\n    dataFromScale (scale) {\n        let domainForLegend = [];\n        const { scaleType, domain, steps, scaleFn } = getScaleInfo(scale);\n\n        if (steps instanceof Array) {\n            if (domain[0] < steps[0]) {\n                domainForLegend[0] = domain[0];\n            }\n            domainForLegend = [...domainForLegend, ...steps];\n            if (domain[domain.length - 1] > steps[steps.length - 1]) {\n                domainForLegend.push(domain[1]);\n            }\n        } else {\n            domainForLegend = getInterpolatedData(domain, steps - 1);\n        }\n        domainForLegend = [...new Set(domainForLegend)].sort((a, b) => a - b);\n\n        return domainForLegend.map((ele, i) => {\n            const value = domainForLegend[i];\n            return {\n                [scaleType]: scaleType === SIZE ? scale[scaleFn](ele) * scale.getScaleFactor()\n                    : scale[scaleFn](Math.floor(ele)),\n                value: +value.toFixed(2),\n                id: i\n            };\n        }).filter(d => d.value !== null);\n    }\n\n    /**\n     *\n     *\n     * @param {*} effPadding\n     * @param {*} align\n     *\n     * @memberof Legend\n     */\n    getLabelSpaces (effPadding) {\n        this.config({\n            item: {\n                text: {\n                    orientation: this.config().position\n                }\n            }\n        });\n        const axis = createAxis(this);\n        const axisSpace = axis.getLogicalSpace();\n        const space = { width: axisSpace.width - effPadding, height: axisSpace.height - effPadding };\n        const axisDomainLength = axis.source().domain().length;\n        const labelSpaces = new Array(axisDomainLength).fill(space);\n\n        this.axis(axis);\n        return labelSpaces;\n    }\n\n    /**\n     *\n     *\n     *\n     * @memberof GradientLegend\n     */\n    getDrawingContext () {\n        return {\n            svgContainer: this._legendGradientSvg\n        };\n    }\n\n    /**\n     * Render the legend with its title\n     *\n     * @param {DOM} mountPoint Point where the legend and title are to be appended\n     * @return {Instance} Current instance of legend\n     * @memberof Legend\n     */\n    render () {\n        const firebolt = this.firebolt();\n        const legendContainer = super.render(this.mount());\n        // create Legend\n        renderGradient(this, legendContainer);\n        legendContainer.selectAll('div').style('float', LEFT);\n        firebolt.mapActionsAndBehaviour();\n        firebolt.createSelectionSet(this.data().map(d => d.id));\n        return legendContainer;\n    }\n /**\n     *\n     *\n     * @param {*} data\n     *\n     * @memberof SimpleLegend\n     */\n    getCriteriaFromData (data) {\n        return [[this.fieldName()], [data.value]];\n    }\n}\n","import SimpleLegend from './simple-legend';\nimport {\n    getScaleInfo,\n    getInterpolatedData,\n    getDomainBounds\n} from './legend-helper';\nimport {\n    createLegendSkeleton,\n    createItemSkeleton,\n    renderStepItem\n} from './renderer';\nimport { STEP, RECT, LEFT, SIZE, UPPER, LOWER } from '../enums/constants';\nimport { stepData } from './position-config';\nimport '../styles.scss';\n\n/**\n * Creates a Legend from the axes of a canvas\n *\n * @param {Object} dependencies : legend data\n * @class Legend\n */\nexport default class StepLegend extends SimpleLegend {\n\n    /**\n     * Initializes an instance of the class\n     *\n     * @static\n     * @param {Object} dependencies Set of dependencies required by the legend\n     * @return {Instance} returns a new instance of Legend\n     * @memberof Legend\n     */\n    static create (dependencies) {\n        return new StepLegend(dependencies);\n    }\n\n    /**\n     *\n     *\n     * @static\n     *\n     * @memberof StepLegend\n     */\n    static type () {\n        return STEP;\n    }\n\n    /**\n     *\n     *\n     * @param {*} scale\n     *\n     * @memberof StepLegend\n     */\n    dataFromScale (scale) {\n        let domainLeg = [];\n        const { scaleType, domain, steps, scaleFn } = getScaleInfo(scale);\n\n        const { formatter } = this.config();\n        const domainBounds = {\n            lower: null, upper: null\n        };\n\n        if (steps instanceof Array) {\n            if (domain[0] < steps[0]) {\n                domainBounds.lower = [`${formatter.bounds.lower} ${steps[0]}`];\n            }\n            domainLeg = [...domainLeg, ...steps];\n            if (domain[domain.length - 1] > steps[steps.length - 1]) {\n                domainBounds.upper = [`${formatter.bounds.upper} ${steps[steps.length - 1]}`];\n            }\n        } else {\n            domainLeg = getInterpolatedData(domain, steps);\n        }\n\n        domainLeg = [...new Set(domainLeg)].sort((a, b) => a - b);\n        domainLeg = domainLeg.map((ele, i) => {\n            let value = null;\n            if (i < domainLeg.length - 1) {\n                value = `${(ele.toFixed(1))} - ${(+domainLeg[i + 1].toFixed(1))}`;\n            }\n            return {\n                [scaleType]: scaleType === SIZE ? scale[scaleFn](ele) * scale.getScaleFactor() : scale[scaleFn](ele),\n                value,\n                id: i + 1,\n                range: [ele, domainLeg[i + 1]]\n            };\n        }).filter(d => d.value !== null);\n\n        if (domainBounds.lower) {\n            const lowerBounds = getDomainBounds(LOWER, { scale, scaleFn, scaleType },\n                { domain, steps, domainBounds });\n            domainLeg = [lowerBounds, ...domainLeg];\n        }\n        if (domainBounds.upper) {\n            const upperBounds = getDomainBounds(UPPER, { scale, scaleFn, scaleType },\n            { domain, steps, domainBounds, domainLeg });\n            domainLeg = [...domainLeg, upperBounds];\n        }\n        return domainLeg;\n    }\n\n     /**\n     *\n     *\n     * @param {*} effPadding\n     * @param {*} align\n     *\n     * @memberof Legend\n     */\n    getLabelSpaces (effPadding, align) {\n        this.config({\n            item: {\n                text: {\n                    orientation: this.config().position\n                }\n            }\n        });\n        return super.getLabelSpaces(effPadding, align);\n    }\n\n    /**\n     *\n     *\n     *\n     * @memberof Legend\n     */\n    elemType () {\n        return RECT;\n    }\n\n     /**\n     * Render the legend with its title\n     *\n     * @param {DOM} mountPoint Point where the legend and title are to be appended\n     * @return {Instance} Current instance of legend\n     * @memberof Legend\n     */\n    render () {\n        const firebolt = this.firebolt();\n        const { classPrefix, position } = this.config();\n        const data = stepData(this.data())[position];\n\n        const legendContainer = super.render(this.mount());\n\n        // create Legend\n        const { legendItem } = createLegendSkeleton(this, legendContainer, classPrefix, data);\n        const { itemSkeleton } = createItemSkeleton(this, legendItem);\n\n        renderStepItem(this, itemSkeleton);\n        legendContainer.selectAll('div').style('float', LEFT);\n        firebolt.mapActionsAndBehaviour();\n        firebolt.createSelectionSet(this.data().map(d => d.id));\n        return legendContainer;\n    }\n\n    /**\n     *\n     *\n     * @param {*} data\n     *\n     * @memberof StepLegend\n     */\n    getCriteriaFromData (data) {\n        const fieldName = this.fieldName();\n        return {\n            [fieldName]: data.range\n        };\n    }\n}\n","import { GradientLegend, DiscreteLegend, StepLegend } from '@chartshq/muze-legend';\n\n/**\n * Contants to be used as attr\n */\nexport const ROWS = 'rows';\nexport const COLUMNS = 'columns';\nexport const DATA = 'data';\nexport const COLOR = 'color';\nexport const SHAPE = 'shape';\nexport const SIZE = 'size';\nexport const DETAIL = 'detail';\nexport const LAYERS = 'layers';\nexport const TRANSFORM = 'transform';\nexport const INITIALIZED = 'isInitialized';\nexport const SOURCE = 'source';\nexport const WIDTH = 'width';\nexport const HEIGHT = 'height';\nexport const PADDING = 'padding';\nexport const BORDER = 'border';\nexport const MARGIN = 'margin';\nexport const CONFIG = 'config';\nexport const MOUNT = 'mount';\nexport const CANVAS_UPDATED = 'canvasUpdated';\nexport const CLASSPREFIX = 'classPrefix';\nexport const POLICIES = '_policies';\nexport const LEGEND = 'legend';\nexport const TITLE = 'title';\nexport const SUB_TITLE = 'subtitle';\nexport const RESOLVE = 'resolve';\nexport const DISCRETE = 'discrete';\nexport const STEP_COLOR = 'step-color';\nexport const GRADIENT = 'gradient';\nexport const LINEAR = 'linear';\nexport const ORDINAL = 'ordinal';\nexport const MUZE_PREFIX = 'muze';\n\nexport const TITLE_TEMPLATE_NOT_ALLOWED_TAGS = [\n    'script',\n    'style'\n];\n\nexport const LEGEND_TYPE_MAP = {\n    [`${ORDINAL}-${true}-${COLOR}`]: DiscreteLegend,\n    [`${ORDINAL}-${true}-${SIZE}`]: DiscreteLegend,\n    [`${ORDINAL}-${true}-${SHAPE}`]: DiscreteLegend,\n    [`${ORDINAL}-${false}-${COLOR}`]: DiscreteLegend,\n    [`${ORDINAL}-${false}-${SHAPE}`]: DiscreteLegend,\n    [`${ORDINAL}-${false}-${SIZE}`]: DiscreteLegend,\n    [`${LINEAR}-${false}-${SIZE}`]: DiscreteLegend,\n    [`${LINEAR}-${true}-${SIZE}`]: DiscreteLegend,\n    [`${LINEAR}-${false}-${SHAPE}`]: DiscreteLegend,\n    [`${LINEAR}-${true}-${COLOR}`]: StepLegend,\n    [`${LINEAR}-${false}-${COLOR}`]: GradientLegend\n};\n\nexport const LEFT = 'left';\nexport const RIGHT = 'right';\nexport const BOTTOM = 'bottom';\nexport const TOP = 'top';\nexport const GROUP = 'group';\nexport const LAYOUT = 'layout';\nexport const RETINAL = 'retinal';\nexport const DIMENSION = 'dimension';\nexport const MEASURE = 'measure';\nexport const VERTICAL = 'vertical';\nexport const HORIZONTAL = 'horizontal';\nexport const HORIZONTAL_CENTER = 'h-center';\nexport const VERTICAL_CENTER = 'v-center';\nexport const HIDDEN = 'hidden';\nexport const OVERFLOW = 'overflow';\nexport const OVERFLOW_X = 'overflow-x';\nexport const OVERFLOW_Y = 'overflow-y';\nexport const AUTO = 'auto';\nexport const VISIBLE = 'visible';\n","import { ComposedVars, SimpleVariable } from '@chartshq/visual-group';\nimport { TITLE_TEMPLATE_NOT_ALLOWED_TAGS } from './constants';\n\n/**\n * This method creates a new composed variable instance from multiple variables. This is required when we have multiple\n * variables on a single axis and the union of domain of all the variables needs to be set on the axis.\n *\n * To create a new composed variable from multiple fields,\n * ```\n *  const sharedVar = share('open', 'high', 'low', 'close');\n *  canvas.rows([sharedVar])\n *      .columns(['date']);\n * ```\n *\n * @module Operators\n * @public\n * @function share\n * @param {Array} vars Variable names.\n *\n * @return {ComposedVars} Instance of composed variable\n */\nexport const share = (...vars) => new ComposedVars(...vars.map(variable => new SimpleVariable(variable)));\n\n/**\n *\n *\n * @param {*} node\n *\n */\nfunction treeShakeNode (node) {\n    if (node.nodeType !== Node.ELEMENT_NODE) { return; }\n\n    if (TITLE_TEMPLATE_NOT_ALLOWED_TAGS.indexOf(node.tagName.toLowerCase()) !== -1) {\n        node.parentNode.removeChild(node);\n    } else {\n        for (const childNode of node.childNodes) {\n            treeShakeNode(childNode);\n        }\n    }\n}\n\n/**\n * A string template tagged function which sanitizes input html formatted string according to the allowed html tags.\n * This is used to render html in canvas components like title and tooltip.\n *\n * To render html in canvas components,\n * ```\n *     canvas.title(html`<span style=font-size:20px;>TITLE</span>`);\n * ```\n *\n * @public\n * @module Operators\n * @function html\n * @param {Array.<string>} strings - The string parts of the template.\n * @param {Array} exps - The list of evaluated expression values.\n *\n * @return {Function} Returns a function which returns the sanitized html string.\n */\nexport function html (strings, ...exps) {\n    let htmlCode = '';\n    const expLn = exps.length;\n    let i = 0;\n\n    for (; i < expLn; ++i) {\n        htmlCode += strings[i] + exps[i];\n    }\n    htmlCode += strings[i];\n\n    const frag = document.createDocumentFragment();\n    const wrapper = document.createElement('div');\n\n    frag.appendChild(wrapper);\n    wrapper.innerHTML = htmlCode;\n\n    treeShakeNode(wrapper);\n    const { innerHTML } = wrapper;\n\n    return () => innerHTML;\n}\n","import { mergeRecursive, CommonProps } from 'muze-utils';\n\nconst defaultPolicy = (registrableComponents) => {\n    const aliases = registrableComponents.map(comp => comp.alias());\n    return {\n        behaviours: {\n            '*': (propagationPayload) => {\n                const propagationCanvas = propagationPayload.sourceCanvas;\n                return propagationCanvas ? aliases.indexOf(propagationCanvas) !== -1 : true;\n            }\n        }\n    };\n};\n\nconst listenerFn = (canvas, fn) => () => {\n    const valueMatrix = canvas.composition().visualGroup.matrixInstance().value;\n    valueMatrix.each(cell => fn(cell.valueOf().firebolt()));\n};\n\nconst canvasIterator = (canvases, iteratorFn, cFn) => {\n    canvases.forEach((canvas) => {\n        const matrix = canvas.composition().visualGroup.matrixInstance().value;\n        matrix.each(cell => iteratorFn(cell.valueOf().firebolt()));\n        cFn && cFn(canvas);\n        // Also register actions on canvas update\n        const throwback = canvas._throwback;\n\n        throwback.registerImmediateListener([CommonProps.MATRIX_CREATED],\n            listenerFn(canvas, iteratorFn));\n    });\n};\n\n/**\n * This class is initiated only once in lifecycle and is reponsible for regisration of physical and behavioural\n * actions and side effects and the mapping between them.\n *\n * To get the instance of action model\n * ```\n *  const ActionModel = muze.ActionModel;\n * ```\n *\n * @public\n * @module ActionModel\n */\nclass ActionModel {\n    constructor () {\n        this._registrableComponents = [];\n    }\n\n    /**\n     * Takes an array of canvases on which the physical and behavioural actions will get registered.\n     *\n     * @public\n     * @param  {Canvas} components Array of canvases\n     *\n     * @return {ActionModel} Instance of action model.\n     */\n    for (...components) {\n        this._registrableComponents = components;\n        return this;\n    }\n\n    /**\n     * Registers physical actions on the canvases. It takes an object with key as the name of action and value having\n     * the definition of the action.\n     *\n     * To register a {@link PhysicalAction},\n     * ```\n     *  const ActionModel = muze.ActionModel;\n     *  ActionModel\n     *       // Physical actions will be registered on these canvases.\n     *      .for(canvas)\n     *      .registerPhysicalActions({\n     *          // Key is the name of physical action.\n     *          ctrlClick: (firebolt) => (targetEl, behaviours) => {\n     *              targetEl.on('click', function (data) {\n     *                  const event = utils.getEvent();\n     *                  const pos = utils.getClientPoint(event, this);\n     *                  // Get the data point nearest to the mouse position.\n     *                  const nearestPoint = firebolt.context.getNearestPoint(pos, {\n     *                      data\n     *                  });\n     *                  // Prepare the payload\n     *                  const payload = {\n     *                      criteria: nearestPoint.id\n     *                  };\n     *                  behaviours.forEach((behaviour) => firebolt.dispatchBehaviour(behaviour, payload));\n     *              });\n     *          }\n     *      });\n     * ```\n     * @public\n     *\n     * @param {Object} action Names of physical actions and their definitions.\n     *\n     * @return {ActionModel} Instance of the action model.\n     */\n    registerPhysicalActions (action) {\n        canvasIterator(this._registrableComponents, (firebolt) => {\n            firebolt.registerPhysicalActions(action);\n        }, (canvas) => {\n            canvas.firebolt().registerPhysicalActions(action);\n        });\n\n        return this;\n    }\n\n    /**\n     * Registers behavioural actions on the canvases. It takes definitions of the behavioural actions and registers\n     * them on the canvases. Every behavioural action must inherit the {@link GenericBehaviour} class.\n     *\n     * To register a behavioural action\n     * ```\n     *  // Define a new behavioural action\n     *  class SingleSelectBehaviour extends GenericBehaviour {\n     *      static formalName () {\n     *          return 'singleSelect';\n     *      }\n     *\n     *      setSelectionSet (addSet, selectionSet) {\n     *          if (addSet === null) {\n     *              selectionSet.reset();\n     *          } else if (addSet.length) {\n     *              const existingAddSet = selectionSet.getExistingEntrySet(addSet);\n     *              if (existingAddSet.length){\n     *                  selectionSet.reset();\n     *              } else {\n     *               selectionSet.add(addSet);\n     *              }\n     *          } else {\n     *              selectionSet.reset();\n     *          }\n     *      }\n     * }\n     * muze.ActionModel.registerBehaviouralActions(SingleSelectBehaviour);\n     * ```\n     *\n     * @public\n     *\n     * @param {GenericBehaviour} actions Definition of behavioural actions.\n     *\n     * @return {ActionModel} Instance of action model.\n     */\n    registerBehaviouralActions (...actions) {\n        canvasIterator(this._registrableComponents, (firebolt) => {\n            firebolt.registerBehaviouralActions(actions);\n        }, (canvas) => {\n            canvas.firebolt().registerBehaviouralActions(actions);\n        });\n\n        return this;\n    }\n\n    /**\n     * Registers the mapping of physical and behavioural actions. This mapping is used to establish which behavioural\n     * actions should be dispatched on any triggering of physical actions.\n     *\n     * To map physical actions with behavioural actions,\n     * ```\n     *  muze.ActionModel.registerPhysicalBehaviouralMap({\n     *      ctrlClick: {\n     *          behaviours: ['select'] // This array must be the formal names of the behavioural actions.\n     *      }\n     *  });\n     * ```\n     *\n     * @public\n     * @param {Object} map Contains the physical and behavioural action map.\n     * ```\n     *   {\n     *      // Name of the physical action\n     *      click: {\n     *          // Target element selector. This is an optional field. If not passed, then by default takes the\n     *          // container element of visual unit.\n     *          target: '.muze-layers-area path',\n     *          // Behaviours which should be dispatched on triggering of the mapped physical action.\n     *          behaviours: ['select']\n     *      }\n     *   }\n     * ```\n     *\n     * @return {ActionModel} Instance of action model.\n     */\n    registerPhysicalBehaviouralMap (map) {\n        canvasIterator(this._registrableComponents, (firebolt) => {\n            firebolt.registerPhysicalBehaviouralMap(map);\n        }, (canvas) => {\n            canvas.firebolt().registerPhysicalBehaviouralMap(map);\n        });\n        return this;\n    }\n\n    /**\n     * Registers what behaviour to propagate on dispatch of a certain behavioural action. By default, when any\n     * behavioural action is dispatched, then the same behavioural action gets propagated to all the other canvases.\n     * This can be changed using this api.\n     *\n     * To register what behaviour should be propagated on dispatch of any behavioural action,\n     * ```\n     *  ActionModel.for(canvas1, canvas2).registerPropagationBehaviourMap({\n     *      select: 'filter',\n     *      brush: 'filter'\n     *  });\n     * ```\n     *\n     * @public\n     * @param {Object} map Propagation behaviour map.\n     *\n     * @return {ActionModel} Instance of action model.\n     */\n    registerPropagationBehaviourMap (map) {\n        canvasIterator(this._registrableComponents, (firebolt) => {\n            firebolt.registerPropagationBehaviourMap(map);\n        }, (canvas) => {\n            canvas.firebolt().registerPropagationBehaviourMap(map);\n        });\n\n        return this;\n    }\n\n    /**\n     * Registers the mapping of side effects and behavioural actions. It takes an object which contains key as the\n     * name of behavioural action and the side effects which will be linked to it.\n     *\n     * To map side effects to select behaviour,\n     * ```\n     *  muze.ActionModel.mapSideEffects({\n     *      select: ['infoBox'] // This array must be the formal names of the side effects\n     *  });\n     * ```\n     *\n     * To map side effects to select behaviour, but disable all the default side effects attached with this behaviour,\n     * ```\n     *  muze.ActionModel.mapSideEffects({\n     *      select: {\n     *          effects: ['infoBox'],\n     *          preventDefaultActions: true\n     *      }\n     *  });\n     * @public\n     * @param {Object} map Mapping of behavioural actions and side effects.\n     * ```\n     *     {\n     *          select: ['infoBox']\n     *     }\n     * ```\n     * @return {ActionModel} Instance of action model.\n     */\n    mapSideEffects (map) {\n        canvasIterator(this._registrableComponents, (firebolt) => {\n            firebolt.mapSideEffects(map);\n        }, (canvas) => {\n            canvas.firebolt().mapSideEffects(map);\n        });\n        return this;\n    }\n\n    /**\n     * Registers the side effects on the registered canvases. It takes definitions of side effects and registers them\n     * on the canvases. Every side effect must inherit the base class {@link GenericSideEffect} or\n     * {@link SpawnableSideEffect} or {@link SurrogateSideEffect} class.\n     *\n     * ```\n     * // Define a custom side effect\n     *  class InfoBox extends SpawnableSideEffect {\n     *      static formalName () {\n     *          return 'infoBox';\n     *      }\n     *\n     *      apply (selectionSet) {\n     *      }\n     *  }\n     *  muze.ActionModel.registerSideEffects(InfoBox);\n     * ```\n     * @public\n     * @param  {GenericSideEffect} sideEffects Definition of side effects.\n     *\n     * @return {ActionModel} Instance of action model.\n     */\n    registerSideEffects (...sideEffects) {\n        canvasIterator(this._registrableComponents, (firebolt) => {\n            firebolt.registerSideEffects(sideEffects);\n        }, (canvas) => {\n            canvas.firebolt().registerSideEffects(sideEffects);\n        });\n        return this;\n    }\n\n    /**\n     * Breaks the link between behavioural actions and physical actions. It takes an array of behavioural action\n     * and it's physical action.\n     *\n     * To dissociate behavioural actions from physical actions\n     * ```\n     *  muze.ActionModel.dissociateBehaviour(['select', 'click'], ['highlight', 'hover']);\n     * ```\n     * @public\n     * @param  {Array} maps Array of behavioural action and physical action.\n     *\n     * @return {ActionModel} Instance of action model.\n     */\n    dissociateBehaviour (...maps) {\n        canvasIterator(this._registrableComponents, (firebolt) => {\n            maps.forEach(val => firebolt.dissociateBehaviour(val[0], val[1]));\n        }, (canvas) => {\n            maps.forEach(val => canvas.firebolt().dissociateBehaviour(val[0], val[1]));\n        });\n        return this;\n    }\n\n    /**\n     * Breaks the link between side effects and behavioural actions. It takes an array of formal names of the side\n     * effects and it's linked behavioural action.\n     *\n     * To dissociate side effects from behavioural actions\n     * ```\n     *  muze.ActionModel.dissociateSideEffect(['crossline', 'highlight'], ['selectionBox', 'brush']);\n     * ```\n     * @public\n     * @param  {Array} maps Array of side effects and behavioural actions.\n     *\n     * @return {ActionModel} Instance of action model.\n     */\n    dissociateSideEffect (...maps) {\n        canvasIterator(this._registrableComponents, (firebolt) => {\n            maps.forEach(val => firebolt.dissociateSideEffect(val[0], val[1]));\n        }, (canvas) => {\n            maps.forEach(val => canvas.firebolt().dissociateSideEffect(val[0], val[1]));\n        });\n        return this;\n    }\n\n    /**\n     * By default cross interactivity is disabled between canvases. This enables cross interaction between the canvases\n     * so that any action happening in one canvas gets dispatched on other canvases as well. An optional policy can also\n     * be passed in this method. The policy can be used to control on which canvases the behavioural actions and\n     * side effects gets dispatched.\n     *\n     * To just enable cross interactivity between two canvases,\n     * ```\n     *  ActionModel.for(canvas1, canvas2)\n     *      .enableCrossInteractivity();\n     * ```\n     *\n     * To enable cross interactivity but enable any behavioural action only when it is triggered from canvas1.\n     * ```\n     *  ActionModel.for(canvas1, canvas2)\n     *      .enableCrossInteractivity({\n     *          behaviours: {\n     *              // Here * stands for any behavioural action name. We can also give any name of behavioural action\n     *              // in place of this.\n     *              '*': (propPayload, context) => {\n     *                  return propPayload.sourceCanvas === canvas1.alias();\n     *              }\n     *          }\n     *      });\n     * ```\n     *\n     * To enable cross interactivity but enable tooltip effect if the action is propagated from canvas1,\n     * ```\n     *  ActionModel.for(canvas1, canvas2)\n     *      .enableCrossInteractivity({\n     *          sideEffects: {\n     *              tooltip: (propPayload, context) => {\n     *                  return propPayload.sourceCanvas === canvas1.alias();\n     *              }\n     *          }\n     *      });\n     * ```\n     * @public\n     * @param {Object} policy Policy definition.\n     *\n     * @return {ActionModel} Instance of action model.\n     */\n    enableCrossInteractivity (policy = {}) {\n        const registrableComponents = this._registrableComponents;\n        const mergedPolicy = mergeRecursive(mergeRecursive({}, defaultPolicy(registrableComponents)), policy);\n\n        registrableComponents.forEach((canvas) => {\n            canvas.firebolt().crossInteractionPolicy(mergedPolicy);\n        });\n\n        return this;\n    }\n}\n\nexport const actionModel = (() => new ActionModel())();\n","import { MUZE_PREFIX } from '../constants';\n\nexport const TITLE_CONFIG = {\n    position: 'top',\n    align: 'left',\n    padding: 4,\n    className: `${MUZE_PREFIX}-title-container`\n};\n\nexport const SUB_TITLE_CONFIG = {\n    position: 'top',\n    align: 'left',\n    padding: 16,\n    maxLines: 2,\n    className: `${MUZE_PREFIX}-subtitle-container`\n};\n\nexport const GRID = 'grid';\n\nexport const CANVAS = 'canvas';\n\nexport const LAYOUT_ALIGN = {\n    TOP: 'top',\n    LEFT: 'left',\n    RIGHT: 'right',\n    BOTTOM: 'bottom'\n};\n","import { mergeRecursive } from 'muze-utils';\nimport {\n    ROWS,\n    COLUMNS,\n    COLOR,\n    SHAPE,\n    SIZE,\n    DETAIL,\n    LAYERS,\n    TRANSFORM,\n    TITLE,\n    SUB_TITLE\n} from '../constants';\nimport { TITLE_CONFIG, SUB_TITLE_CONFIG } from './defaults';\n/**\n * This is the local options semantics based on which setters getters are created and reactivity is initiated.\n * This local object is only valid for Canvas.\n * Canvas merges global and local object both to the model\n *\n * Format\n *  PROPERTRY_NAME: {\n *      value: // default value of the property,\n *      meta: {\n *          typeCheck: // The setter value will be checked using this. If the value is function then the setter value\n *                     // is passed as args.\n *          typeExpected: // The output of typecheck action will be tested against this. Truthy value will set the\n *                       // value to the setter\n *          sanitizaiton: // Need for sanitization before type is checked\n *      }\n *  }\n *\n * @module LocalOptions\n */\n\nexport const localOptions = {\n    [ROWS]: {\n        value: null,\n        meta: {\n            typeCheck: 'constructor',\n            typeExpected: 'Array'\n        }\n    },\n    [COLUMNS]: {\n        value: null,\n        meta: {\n            typeCheck: 'constructor',\n            typeExpected: 'Array'\n        }\n    },\n    [COLOR]: {\n        value: null,\n        meta: {\n            typeCheck: 'constructor',\n            typeExpected: 'Object',\n            sanitization: (config) => {\n                if (typeof config === 'string' || config === null) {\n                    return {\n                        field: config\n                    };\n                }\n                return config;\n            }\n        }\n    },\n    [SHAPE]: {\n        value: null,\n        meta: {\n            typeCheck: 'constructor',\n            typeExpected: 'Object',\n            sanitization: (config) => {\n                if (typeof config === 'string' || config === null) {\n                    return {\n                        field: config\n                    };\n                }\n                return config;\n            }\n        }\n    },\n    [SIZE]: {\n        value: null,\n        meta: {\n            typeCheck: 'constructor',\n            typeExpected: 'Object',\n            sanitization: (config) => {\n                if (typeof config === 'string' || config === null) {\n                    return {\n                        field: config\n                    };\n                }\n                return config;\n            }\n        }\n    },\n    [DETAIL]: {\n        value: [],\n        meta: {\n            typeCheck: 'constructor',\n            typeExpected: 'Array'\n        }\n    },\n\n    [LAYERS]: {\n        value: [],\n        meta: {\n            typeCheck: 'constructor',\n            typeExpected: 'Array'\n        }\n    },\n    [TRANSFORM]: {\n        value: null,\n        meta: {\n            typeCheck: 'constructor',\n            typeExpected: 'Object'\n        }\n    }\n};\n\nexport const canvasOptions = {\n    [TITLE]: {\n        value: [null, null],\n        meta: {\n            typeCheck: ['constructor', 'constructor'],\n            typeExpected: ['Function', 'Object'],\n            spreadParams: true,\n            sanitization: [(title) => {\n                if (typeof title === 'string') {\n                    const t = () => title;\n                    t._sanitized = true;\n                    return t;\n                }\n                return title;\n            }, (titleConfig) => {\n                const defConfig = mergeRecursive({}, TITLE_CONFIG);\n                return mergeRecursive(defConfig, titleConfig);\n            }]\n        }\n    },\n    [SUB_TITLE]: {\n        value: [null, null],\n        meta: {\n            typeCheck: ['constructor', 'constructor'],\n            typeExpected: ['Function', 'Object'],\n            spreadParams: true,\n            sanitization: [(subtitle) => {\n                if (typeof subtitle === 'string') {\n                    const sub = () => subtitle;\n                    sub._sanitized = true;\n                    return sub;\n                }\n                return subtitle;\n            }, (subtitleConfig) => {\n                const defConfig = mergeRecursive({}, SUB_TITLE_CONFIG);\n                return mergeRecursive(defConfig, subtitleConfig);\n            }]\n        }\n    }\n};\n","export default class LayoutComponent {\n    constructor (name, dimensions, seed) {\n        this._seed = seed;\n        this._boundBox = {\n            height: dimensions.height,\n            width: dimensions.width,\n            top: null,\n            left: null\n        };\n        this._renderAt = null;\n        this._alignWith = null;\n        this._alignment = null;\n        this._target = null;\n        this._position = null;\n        this._componentName = name;\n        this._className = null;\n    }\n\n    getLogicalSpace () {\n        throw new Error('getLogicalSpace is not defined');\n    }\n\n    setSpatialConfig () {\n        throw new Error('setSpatialSpace is not defined');\n    }\n\n    name (param) {\n        if (param) {\n            this._componentName = param;\n        }\n        return this._componentName;\n    }\n\n    target (param) {\n        if (param) {\n            this._target = param;\n        }\n        return this._target;\n    }\n\n    position (param) {\n        if (param) {\n            this._position = param;\n        }\n        return this._position;\n    }\n\n    alignment (param) {\n        if (param) {\n            this._alignment = param;\n        }\n        return this._alignment;\n    }\n\n    alignWith (param) {\n        if (param) {\n            this._alignWith = param;\n        }\n        return this._alignWith;\n    }\n\n    renderAt (param) {\n        if (param) {\n            this._renderAt = param;\n        }\n        return this._renderAt;\n    }\n\n    boundBox (param) {\n        if (param) {\n            Object.assign(this._boundBox, param);\n        }\n        return this._boundBox;\n    }\n\n    className (param) {\n        if (param) {\n            this._className = param;\n        }\n        return this._className;\n    }\n\n    draw () {\n        throw new Error('draw is not defined');\n    }\n  }\n\n","import LayoutComponent from './layoutComponent';\n\nclass DummyComponent extends LayoutComponent {\n    getLogicalSpace () {\n        return {\n            width: this.boundBox().width,\n            height: this.boundBox().height\n        };\n    }\n\n    setSpatialConfig (conf) {\n        this.boundBox({ top: conf.y, left: conf.x });\n        this.newDimensions = {\n            width: conf.width,\n            height: conf.height\n        };\n        this.renderAt(conf.renderAt);\n        return this;\n    }\n\n    draw () {\n        if (!this.component) {\n            throw new Error(`Component not set for ${this.componentName}`);\n        }\n        this.component.mount(document.getElementById(this.renderAt)); // Change the draw method to component draw\n        return this;\n    }\n}\n\nexport default DummyComponent;\n","export const DEFAULT_CONFIG = {\n    classPrefix: 'muze',\n    interaction: {\n        sideEffect: 'individual'\n    },\n    pagination: 'scroll',\n    scrollBar: {\n        thickness: 10,\n        speed: 2,\n        vertical: {\n            align: 'right'\n        },\n        horizontal: {\n            align: 'bottom'\n        }\n    },\n    legend: {\n        position: 'right',\n        color: {\n            show: true,\n            padding: 1,\n            margin: 3,\n            border: 1,\n            height: 20,\n            width: 20\n        },\n        shape: {\n            show: true,\n            padding: 1,\n            margin: 3,\n            border: 1,\n            height: 20,\n            width: 20\n        },\n        size: {\n            show: true,\n            padding: 1,\n            margin: 3,\n            border: 1,\n            height: 20,\n            width: 20\n        }\n    },\n    showHeaders: false,\n    minWidth: 100,\n    minHeight: 100,\n    facet: {\n        rows: {\n            minCharacters: 3\n        },\n        columns: {\n            maxLines: 2,\n            verticalAlign: 'middle',\n            minCharacters: 1\n        }\n    },\n    border: {\n        style: 'solid',\n        color: '#d6d6d6',\n        width: 2,\n        collapse: true,\n        spacing: 0\n    },\n    autoGroupBy: {\n        disabled: false\n    },\n    invalidValues: {}\n};\n","import { DEFAULT_CONFIG } from '../../../../muze/src/defaults';\n\nconst DEFAULT_WIDTH = 600;\nconst DEFAULT_HEIGHT = 400;\nconst DEFAULT_CLASS_NAME = `${DEFAULT_CONFIG.classPrefix}-layout-container-component`;\nconst NODE_PREFIX = `${DEFAULT_CONFIG.classPrefix}-layout-container`;\n\nexport {\n  DEFAULT_WIDTH,\n  DEFAULT_HEIGHT,\n  DEFAULT_CLASS_NAME,\n  NODE_PREFIX\n};\n","export default class DefinitionModel {\n    constructor (config) {\n        this._host = config.host || null;\n        this._cut = config.cut || null;\n        this._ratioWeight = config.ratioWeight === 0 ? 0 : config.ratioWeight || 1;\n        this._preferred = config.preferred || false;\n        this._lanes = config.lanes || [];\n        this._remainingHeight = 0;\n        this._remainingWidth = 0;\n    }\n\n    host (host) {\n        if (host) {\n            this._host = host;\n        }\n        return this._host;\n    }\n\n    preferred (preferred) {\n        if (preferred) {\n            this._preferred = preferred;\n        }\n        return this._preferred;\n    }\n\n    cut (cut) {\n        if (cut) {\n            this._cut = cut;\n        }\n        return this._cut;\n    }\n\n    ratioWeight (ratioWeight) {\n        if (ratioWeight) {\n            this._ratioWeight = ratioWeight;\n        }\n        return this._ratioWeight;\n    }\n\n    lanes (lanes) {\n        if (lanes) {\n            this._lanes = lanes;\n        }\n        return this._lanes;\n    }\n\n    remainingHeight (remainingHeight) {\n        if (remainingHeight) {\n            this._remainingHeight = remainingHeight;\n        }\n        return this._remainingHeight;\n    }\n\n    remainingWidth (remainingWidth) {\n        if (remainingWidth) {\n            this._remainingWidth = remainingWidth;\n        }\n        return this._remainingWidth;\n    }\n}\n","import { NODE_PREFIX } from '../../constants/defaults';\nimport DefinitionModel from '../definition-manager/definitionModel';\nimport DummyComponent from '../../layout-component/dummy-component';\n/**\n * Compares two strings in lowercase\n *\n * @export\n * @param {string} value the value to be compared\n * @param {string} compareTo whom the value would be compared\n * @return {boolean} true if values are equal\n */\nexport function isEqual (value, compareTo) {\n    if (typeof value !== 'string' || typeof compareTo !== 'string') {\n        throw new TypeError('value and compareTo must be string');\n    }\n    return value.toLowerCase() === compareTo.toLowerCase();\n}\n\nexport const getNodeId = (() => {\n    let _uid = 0;\n    return () => `${NODE_PREFIX}-${++_uid}`;\n})();\n\nexport function yExtraSpace (node) {\n    let smallestHeight = 0;\n    if (node.getCutType() === 'v') {\n        smallestHeight = smallestExtraHeightHorizontally(node); // eslint-disable-line no-use-before-define\n    } else if (node.getCutType() === 'h') {\n        node.children().forEach((child) => {\n            smallestHeight += yExtraSpace(child);\n        });\n    } else if (node.model().host() && node.model().host().getLogicalSpace) {\n        const containerHeight = node.boundBox().height;\n        const hostHeight = node.model().host().getLogicalSpace().height;\n\n        smallestHeight = containerHeight - hostHeight;\n        if (smallestHeight < 0) {\n            smallestHeight = 0;\n        }\n    } else {\n        smallestHeight = 0;\n    }\n    return smallestHeight;\n}\n\nexport function smallestExtraHeightHorizontally (node) {\n    let smallestHeight = Number.MAX_SAFE_INTEGER;\n    node.children().forEach((child) => {\n        const h = yExtraSpace(child);\n        if (h < smallestHeight) {\n            smallestHeight = h;\n        }\n    });\n    return smallestHeight;\n}\n\nexport function xExtraSpace (node) {\n    let smallestWidth = 0;\n    if (node.getCutType() === 'h') {\n        smallestWidth = smallestExtraWidthVertically(node); // eslint-disable-line no-use-before-define\n    } else if (node.getCutType() === 'v') {\n        node.children().forEach((child) => {\n            smallestWidth += xExtraSpace(child);\n        });\n    } else if (node.model().host() && node.model().host().getLogicalSpace) {\n        const containerWidth = node.boundBox().width;\n        const hostWidth = node.model().host().getLogicalSpace().width;\n        smallestWidth = containerWidth - hostWidth;\n        if (smallestWidth < 0) {\n            smallestWidth = 0;\n        }\n    } else {\n        smallestWidth = 0;\n    }\n    return smallestWidth;\n}\n\nexport function smallestExtraWidthVertically (node) {\n    let smallestWidth = Number.MAX_SAFE_INTEGER;\n    node.children().forEach((child) => {\n        const w = xExtraSpace(child);\n        if (w < smallestWidth) {\n            smallestWidth = w;\n        }\n    });\n    return smallestWidth;\n}\n\nexport function determineBoundBox (bb, i, arr, instance) {\n    if (i) {\n    // if not first sibling, take boundbox from previous sibling\n        const lastSibling = arr[i - 1];\n        const { top: _top, left: _left, height: _height, width: _width } = lastSibling.boundBox();\n        return {\n            width: bb.width,\n            height: bb.height,\n\n            top: instance.parentCut() === 'h'\n        ? _top + _height : _top,\n\n            left: instance.parentCut() === 'h'\n        ? _left : _left + _width\n        };\n    }\n  // if first sibling, take boundbox from parent\n    const { top: _top, left: _left } = instance.parent().boundBox();\n    return {\n        width: bb.width,\n        height: bb.height,\n        top: _top,\n        left: _left\n    };\n}\n\n// prepares the targetComponent Map for target Mapping ie. where a component should lie\nexport function prepareTargetComponentMap (context) {\n    context.targetComponentMap(new Map());\n    context.componentMap().forEach((value) => {\n        if (context.targetComponentMap().has(value.target())) {\n            context.targetComponentMap().get(value.target()).push(value);\n        } else {\n            const temp = [];\n            temp.push(value);\n            context.targetComponentMap().set(value.target(), temp);\n        }\n    });\n}\n\nexport function getComponent (canvasComponent, componentName) {\n    const comp = canvasComponent.find(component => component.name() === componentName);\n    return (comp && comp !== -1) ? comp : null;\n}\nexport function createPlaceHolderComponent (height, width, position) {\n    const comp = new DummyComponent(0, { height, width });\n    comp.name('placeHolder');\n    comp.position(position);\n    return comp;\n}\n\nexport function placeComponent (definitionModel, component, isPreferred = false, isGridComponent = false) {\n    let cut = '';\n    let componentRatioWidth = 1;\n    let leftOvercomponentRationWidth = 1;\n    let leftHeight = 0;\n    let leftWidth = 0;\n\n    if (!component) {\n        return { first: definitionModel, second: definitionModel };\n    }\n\n    const { height: componentHeight, width: componentWidth } = component.getLogicalSpace();\n    const position = component.position();\n    if (position === 'top' || position === 'bottom') {\n        cut = 'h';\n        componentRatioWidth = componentHeight / definitionModel.remainingHeight();\n        leftHeight = definitionModel.remainingHeight() - componentHeight;\n        leftWidth = definitionModel.remainingWidth();\n    } else {\n        cut = 'v';\n        componentRatioWidth = componentWidth / definitionModel.remainingWidth();\n        leftWidth = definitionModel.remainingWidth() - componentWidth;\n        leftHeight = definitionModel.remainingHeight();\n    }\n    leftOvercomponentRationWidth = 1 - componentRatioWidth;\n\n// update parentModel\n    definitionModel.cut(cut);\n    const firstLaneConfig = {\n        host: component.name(),\n        cut: null,\n        ratioWeight: componentRatioWidth,\n        preferred: isGridComponent ? false : isPreferred,\n        lanes: []\n    };\n    const firstLane = new DefinitionModel(firstLaneConfig);\n    firstLane.remainingHeight(componentHeight);\n    firstLane.remainingWidth(componentWidth);\n\n    const secondLaneConfig = {\n        host: null,\n        cut: null,\n        ratioWeight: leftOvercomponentRationWidth,\n        preferred: isGridComponent ? false : !isPreferred,\n        lanes: []\n    };\n    const secondLane = new DefinitionModel(secondLaneConfig);\n    secondLane.remainingHeight(leftHeight);\n    secondLane.remainingWidth(leftWidth);\n    if (isPreferred) {\n        definitionModel.lanes([firstLane]);\n    } else if (position === 'top' || position === 'left') {\n        definitionModel.lanes([firstLane, secondLane]);\n    } else {\n        definitionModel.lanes([secondLane, firstLane]);\n    }\n    return { first: firstLane, second: secondLane };\n}\n\nexport function placeGridComponent (definitionModel, gridComponents) {\n    let tempDefModel = definitionModel;\n    const rows = gridComponents.length;\n    const column = rows ? gridComponents[0].length : 0;\n    const height = gridComponents.reduce((acc, val) => (acc + val[0].getLogicalSpace().height), 0);\n\n    for (let i = 0; i < column; i++) {\n        const iscolumnPreffered = i === column - 1;\n        const columnPlaceHolderComponent = createPlaceHolderComponent(height,\n                                                    gridComponents[0][i].getLogicalSpace().width, 'left');\n        const { first, second } = placeComponent(tempDefModel, columnPlaceHolderComponent, iscolumnPreffered);\n        tempDefModel = first;\n        for (let j = 0; j < rows; j++) {\n            const rowpreffred = j === (rows - 1);\n            tempDefModel = placeComponent(tempDefModel, gridComponents[j][i], rowpreffred, true).second;\n        }\n        tempDefModel = second;\n    }\n    return tempDefModel;\n}\n\nexport function negotiateDimension (node) {\n    let preferred;\n    let cumultiveExtraSpaceAmt = 0;\n    let alteredDim;\n    let nonAlteredDim;\n\n    const childrenLength = node.children().length;\n\n    for (let index = 0; index < childrenLength; index++) {\n        let fn;\n        let extraSpaceAmt;\n        const child = node.children()[index];\n\n        if (child.parentCut() === 'h') {\n            fn = yExtraSpace;\n            alteredDim = 'height';\n            nonAlteredDim = 'width';\n        } else {\n            fn = xExtraSpace;\n            alteredDim = 'width';\n            nonAlteredDim = 'height';\n        }\n  // if vertical then get extra height from other node and push it to the preferred node.\n  // for horizontal cut the same thing is to be done with width\n        if (child.isPreferred()) {\n    // push extra space in sink. Execute it when all non preferred space are computed.\n            preferred = child;\n\n            continue; // eslint-disable-line no-continue\n        }\n  // reduce own height and save it in a var\n        cumultiveExtraSpaceAmt += (extraSpaceAmt = fn(child));\n        child.boundBox()[alteredDim] -= extraSpaceAmt;\n  // update nonaltered dim from parent for any change which happened during negotiation\n        child.boundBox()[nonAlteredDim] = child.parent().boundBox()[nonAlteredDim];\n\n        negotiateDimension(child);\n    }\n\n    if (preferred) {\n        preferred.boundBox()[alteredDim] += cumultiveExtraSpaceAmt;\n        preferred.boundBox()[nonAlteredDim] = preferred.parent().boundBox()[nonAlteredDim];\n        negotiateDimension(preferred);\n    }\n}\n\nexport function computePosition (node) {\n    node.children().forEach((child, i, children) => {\n        const boundBox = determineBoundBox(child.boundBox(), i, children, child);\n        child.boundBox(boundBox);\n        computePosition(child);\n    });\n}\n\nexport function allocateBoundingBox (node) {\n    const totalWeight = node.children()\n                            .map(child => child.model().ratioWeight())\n                            .reduce((carry, val) => carry + val, 0);\n\n    node.children().forEach((child, i, children) => {\n        const lastSibling = children[i - 1];\n        const ratio = child.model().ratioWeight() / totalWeight;\n\n        if (child.parentCut() === 'h') {\n            child.boundBox({\n                top: i ? lastSibling.boundBox().top + lastSibling.boundBox().height : 0,\n                left: child.parent().boundBox().left,\n                height: child.parent().boundBox().height * ratio,\n                width: child.parent().boundBox().width\n            });\n        } else {\n            child.boundBox({\n                top: child.parent().boundBox().top,\n                left: i ? lastSibling.boundBox().left + lastSibling.boundBox().width : 0,\n                height: child.parent().boundBox().height,\n                width: child.parent().boundBox().width * ratio\n            });\n        }\n        allocateBoundingBox(child);\n    });\n}\n\n","import { getNodeId } from '../helper';\nimport { LayoutComponent } from '../../layout-component';\n\nclass Node {\n    constructor (data) {\n        this._model = data;\n        this._parent = null;\n        this._children = [];\n        this._parentCut = null;\n        this._boundBox = {\n            top: null,\n            left: null,\n            height: null,\n            width: null\n        };\n\n        this._id = this._model.host() instanceof LayoutComponent && this._model.host().renderAt() ?\n                    this._model.host().renderAt() :\n                    getNodeId();\n    }\n\n    addChildren (entries) {\n        this._children.push(...entries);\n        entries.forEach((e) => { e.parent(this); });\n    }\n\n    isRoot () {\n        return this._parent === null;\n    }\n\n    isLeaf () {\n        return !this._children.length;\n    }\n\n    getCutType () {\n        return this._model.cut();\n    }\n\n    isPreferred () {\n        return !!this._model.preferred();\n    }\n\n    children (children) {\n        if (children) {\n            this._children = children;\n        }\n        return this._children;\n    }\n\n    parent (parent) {\n        if (parent) {\n            this._parent = parent;\n        }\n        return this._parent;\n    }\n\n    parentCut (parentCut) {\n        if (parentCut) {\n            this._parentCut = parentCut;\n        }\n        return this._parentCut;\n    }\n\n    id (id) {\n        if (id) {\n            this._id = id;\n        }\n        return this._id;\n    }\n\n    model (model) {\n        if (model) {\n            this._model = model;\n        }\n        return this._model;\n    }\n\n    boundBox (bound) {\n        if (bound) {\n            this._boundBox = {\n                top: bound.top,\n                left: bound.left,\n                height: bound.height,\n                width: bound.width\n            };\n        }\n        return this._boundBox;\n    }\n  /**\n     * function to search a node and update it with the config provided.\n     * @param  {Object} nodeconfig\n     */\n    updateNode (nodeconfig) {\n        if (this._id === nodeconfig._id) {\n            this._model.cut(nodeconfig.cut);\n            this._model.ratioWeight(nodeconfig.ratioWeight);\n        } else {\n            this._children.forEach((node) => {\n                if (node._id === nodeconfig._id) {\n                    node.model.cut(nodeconfig.cut);\n                    node.model.ratioWeight(nodeconfig.ratioWeight);\n                    return;\n                }\n                this.searchNode(node, nodeconfig);\n            });\n        }\n    }\n\n  // Recursive function to search a node\n    searchNode (node, nodeconfig) {\n        node.children().forEach((childNode) => {\n            if (childNode.id() === nodeconfig._id) {\n                childNode.model().cut(nodeconfig.cut);\n                childNode.model().ratioWeight(nodeconfig.ratioWeight);\n            } else {\n                this.searchNode(childNode, nodeconfig);\n            }\n        });\n    }\n\n  /**\n     * function to delete a node from tree Structure.\n     * @param  {String} nodeId - node Id of the Node\n     */\n    delete (nodeId) {\n        this._children.forEach((node) => {\n            if (node.id() === nodeId) {\n                const index = this._children.indexOf(node);\n                this._model.lanes().splice(index, 1);\n            }\n            this.deleteSearchNode(node, nodeId);\n        });\n    }\n\n  // Recursive function to search a node\n    deleteSearchNode (node, nodeId) {\n        node.children().forEach((childNode) => {\n            if (childNode.id() === nodeId) {\n                const index = node.children().indexOf(childNode);\n                node.model().lanes().splice(index, 1);\n            } else {\n                this.deleteSearchNode(childNode, nodeId);\n            }\n        });\n    }\n}\n\nexport default Node;\n","import Node from '../tree';\nimport {\n    allocateBoundingBox,\n    negotiateDimension,\n    computePosition\n} from '../helper';\n\nexport default class LayoutModel {\n    constructor (measurements, config) {\n        this._measurements = measurements;\n        this._config = config;\n        this._root = this.createTree(this._config, null);\n        this.setBoundBox();\n    }\n\n    createTree (config, parent) {\n        const node = new Node(config);\n        if (parent) {\n            node.parentCut(parent.getCutType());\n            parent.addChildren([node]);\n        } else {\n            this._root = node;\n        }\n        for (const lane of config.lanes()) {\n            this.createTree(lane, node);\n        }\n\n        return this._root;\n    }\n\n    setBoundBox () {\n        this._root.boundBox({\n            top: 0,\n            left: 0,\n            width: this._measurements.width,\n            height: this._measurements.height\n        });\n        allocateBoundingBox(this._root);\n    }\n\n    setHostPosition (node) {\n        node.children().forEach((child) => {\n            LayoutModel.setHostSpatialConfig(child);\n            this.setHostPosition(child);\n        });\n    }\n\n    static setHostSpatialConfig (node) {\n        const bb = node.boundBox();\n        const host = node.model().host();\n        if (host && host.setSpatialConfig) {\n            const conf = {\n                x: bb.left,\n                y: bb.top,\n                width: bb.width,\n                height: bb.height,\n                renderAt: node.id()\n            };\n            host.setSpatialConfig(conf);\n        }\n    }\n\n    negotiate () {\n        negotiateDimension(this._root);\n        computePosition(this._root);\n        return this;\n    }\n\n    broadcast () {\n        this.setHostPosition(this._root);\n        return this;\n    }\n\n    tree () {\n        return this._root;\n    }\n}\n","/* eslint no-undef: \"off\" */\n/* eslint default-case: \"off\" */\nexport class Utils {\n    static isDOMElement (element) {\n        return element instanceof Element;\n    }\n\n    static getID (element) {\n        return element.id;\n    }\n\n    static getElement (id) {\n        return document.getElementById(id);\n    }\n\n    static findContainer (data) {\n        return data.filter(coordinate => coordinate.parent == null)[0];\n    }\n  /**\n   * static method to remove the div\n   * @param  {} divId - div ID to be removed.\n   */\n    static removeDiv (divId) {\n        if (document.getElementById(divId) !== null) { document.getElementById(divId).remove(); }\n    }\n}\n","import { DEFAULT_CLASS_NAME } from '../constants/defaults';\nimport { LayoutComponent } from '../layout-component';\n\nexport default class DataPoint {\n    constructor (node) {\n        this._node = node;\n        this._className = node.model().host() instanceof LayoutComponent ?\n                            node.model().host().className() : DEFAULT_CLASS_NAME;\n    }\n\n    node () {\n        return this._node;\n    }\n\n    hasHost () {\n        return this._node.model().host() instanceof LayoutComponent;\n    }\n\n    className () {\n        return this._className || DEFAULT_CLASS_NAME;\n    }\n}\n","import { getnodePoints } from './helper';\n\nexport class DataParser {\n    constructor (data) {\n        this._data = data;\n    }\n\n    defaultDataPointLogic () {\n        const nodepoints = [];\n        getnodePoints(this._data, nodepoints);\n        return nodepoints;\n    }\n\n}\n","import DataPoint from './data-point';\n\nexport const getnodePoints = (node, nodepoints) => {\n    const datapoint = new DataPoint(node);\n    nodepoints.push(datapoint);\n    node.children().forEach((child) => {\n        getnodePoints(child, nodepoints);\n    });\n};\n","import { DataParser } from './data-parser';\n\nexport class HTMLDataAdapter extends DataParser {\n    getCoordinates () {\n        return super.defaultDataPointLogic();\n    }\n}\n","export class Renderer {\n\n    initRenderer (node, tree) {\n        node.__logicalTree = tree;\n    }\n}\n","import { HTMLDataAdapter } from '../data-adapters/html-data';\nimport { Utils } from '../utils';\nimport { Renderer } from './renderer';\n\nexport class HTMLRenderer extends Renderer {\n    constructor (data) {\n        super();\n        this._data = data;\n        this._coordinates = new HTMLDataAdapter(this._data).getCoordinates();\n    }\n\n    createhtml (mount, className) {\n        const mainDiv = mount;\n        super.initRenderer(mainDiv, this._data); // Initialise node with layout id\n        this.parentDiv = this.createAndCustomiseParent(className);\n        this._coordinates.forEach((node) => {\n            if (node.hasHost()) {\n                const host = node.node();\n                this.parentDiv.appendChild(this.createAndPositionDiv({ ...host.boundBox(),\n                    id: host.id(),\n                    className: node.className() }));\n            }\n        });\n        mainDiv.appendChild(this.parentDiv);\n    }\n\n    createAndPositionDiv (config) {\n        const { top, left, height, width, className, id } = config;\n        const existingDiv = document.getElementById(id);\n        const div = existingDiv || document.createElement('div');\n        div.style.position = 'absolute';\n        div.style.left = `${left}px`;\n        div.style.top = `${top}px`;\n        div.style.height = `${height}px`;\n        div.style.width = `${width}px`;\n        div.id = id;\n        div.className = className;\n        return div;\n    }\n\n    createAndCustomiseParent (className) {\n        const container = Utils.findContainer(this._coordinates);\n        const host = container.node();\n        const parentDiv = this.createAndPositionDiv({ ...host.boundBox(),\n            id: host.id(),\n            className: container.className() });\n        parentDiv.className = className;\n        parentDiv.style.position = 'relative';\n        return parentDiv;\n    }\n\n    coordinates () {\n        return this._coordinates;\n    }\n}\n","import { HTMLRenderer } from '../renderers/html-renderer';\nimport { LayoutComponent } from '../layout-component';\n\nexport const getChildNode = (context, config) =>\n                        context.renderer().createAndPositionDiv(config);\n\nexport const findNode = (context, nodeID) =>\n                        context.renderer().coordinates().find(point => point.node().id() === nodeID);\n\nexport const renderHTML = (context) => {\n    context.renderer(new HTMLRenderer(context.data()));\n    context.renderer().createhtml(context.mount(), context.className());\n};\n\nexport const drawLayout = (context) => {\n    switch (context.renderer()) {\n    case 'html' :\n        renderHTML(context);\n        break;\n    default:\n        renderHTML(context);\n    }\n};\n\nexport const drawComponent = (componentData) => {\n    componentData.children().forEach((node) => {\n        const host = node.model().host();\n        if (host instanceof LayoutComponent) {\n            host.draw();\n        }\n        drawComponent(node);\n    });\n};\n\nexport const removeElement = (elemID) => {\n    document.removeElement(document.getElementById(elemID));\n};\n\nexport const resolveAligment = (context, componentData) => {\n    componentData.children().forEach((component) => {\n        const host = component.model().host();\n        if (host instanceof LayoutComponent && host.alignWith()) {\n            let newNodeConfig = {};\n            const point = findNode(context, component.id()).node();\n            const node = point.boundBox();\n            const refNode = findNode(context, context.componentMap().get(host.alignWith()).renderAt())\n                                .node()\n                                .boundBox();\n            switch (host.alignment()) {\n            case 'left':\n                newNodeConfig = {\n                    top: node.top,\n                    left: refNode.left,\n                    height: node.height,\n                    width: Math.abs(node.width - Math.abs(refNode.left - node.left))\n                };\n                break;\n\n            case 'right':\n                newNodeConfig = {\n                    top: node.top,\n                    left: node.left,\n                    height: node.height,\n                    width: Math.abs(node.width - Math.abs(node.left + node.width - (refNode.left + refNode.width)))\n                };\n                break;\n\n            case 'top':\n                newNodeConfig = {\n                    top: refNode.top,\n                    left: node.left,\n                    height: Math.abs(node.height - Math.abs(refNode.top - node.top)),\n                    width: node.width\n                };\n                break;\n\n            case 'bottom':\n                newNodeConfig = {\n                    top: node.top,\n                    left: node.left,\n                    height: Math.abs(node.top - refNode.top + refNode.height),\n                    width: node.width\n                };\n                break;\n\n            case 'h-center':\n                newNodeConfig = {\n                    top: node.top,\n                    left: refNode.left,\n                    height: node.height,\n                    width: refNode.width\n                };\n                break;\n\n            case 'v-center':\n                newNodeConfig = {\n                    top: refNode.top,\n                    left: node.left,\n                    height: refNode.top,\n                    width: node.width\n                };\n                break;\n            default:\n                break;\n            }\n    // check if model in parent component\n            Object.assign(newNodeConfig, { id: point.id(), className: host.className() });\n            context.renderer().createAndPositionDiv(newNodeConfig);\n            context.componentMap().get(host.name()).setSpatialConfig({\n                x: newNodeConfig.left,\n                y: newNodeConfig.top,\n                height: newNodeConfig.height,\n                width: newNodeConfig.width\n\n            });\n        }\n        resolveAligment(context, component);\n    });\n};\n","import { Utils } from '../utils';\nimport { drawLayout, resolveAligment, drawComponent } from './helper';\n\nexport class DrawingManager {\n    constructor (data, renderer, container) {\n        this._data = data.tree;\n        this._componentMap = data.componentMap;\n        this._layoutClassName = data.layoutClassName;\n        this._renderer = renderer;\n        this._mount = Utils.isDOMElement(container) ? container : Utils.getElement(container);\n    }\n\n    draw () {\n        drawLayout(this);\n        resolveAligment(this, this._data);\n        drawComponent(this._data);\n        return this;\n    }\n\n    data (data) {\n        if (data) {\n            this._data = data;\n        }\n        return this._data;\n    }\n\n    componentMap (param) {\n        if (param) {\n            this._componentMap = param;\n        }\n        return this._componentMap;\n    }\n\n    className (param) {\n        if (param) {\n            this._layoutClassName = param;\n        }\n        return this._layoutClassName;\n    }\n\n    renderer (param) {\n        if (param) {\n            this._renderer = param;\n        }\n        return this._renderer;\n    }\n\n    mount (param) {\n        if (param) {\n            this._mount = param;\n        }\n        return this._mount;\n    }\n}\n","import DefinitionModel from './definitionModel';\nimport { prepareTargetComponentMap, getComponent, placeComponent, placeGridComponent } from '../helper';\n\nexport default class DefinitionManager {\n    constructor (componentMap, sequence, totalHeight, totalWidth) {\n        this._componentMap = componentMap;\n        this._prioritySequence = sequence;\n        this._totalHeight = totalHeight;\n        this._totalWidth = totalWidth;\n        this._targetComponentMap = null;\n    }\n\n    // create the config model\n    generateConfigModel () {\n        prepareTargetComponentMap(this);\n        const canvasComponent = this._targetComponentMap.get('canvas');\n        const definitionModel = new DefinitionModel({});\n        let tempDefModel = definitionModel;\n        definitionModel.remainingHeight(this._totalHeight);\n        definitionModel.remainingWidth(this._totalWidth);\n\n        let componentRef = null;\n\n        this._prioritySequence.forEach((name) => {\n            componentRef = getComponent(canvasComponent, name);\n            if (name !== 'grid') {\n                tempDefModel = placeComponent(tempDefModel, componentRef).second;\n            } else {\n                tempDefModel = placeGridComponent(tempDefModel, componentRef.component);\n            }\n        });\n        return definitionModel;\n    }\n\n    componentMap (param) {\n        if (param) {\n            this._componentMap = param;\n        }\n        return this._componentMap;\n    }\n\n    targetComponentMap (param) {\n        if (param) {\n            this._targetComponentMap = param;\n        }\n        return this._targetComponentMap;\n    }\n}\n","import { sanitizeConfig } from './helper';\n\nexport class LayoutDef {\n    constructor () {\n        this._componentMap = new Map();\n        this._layoutDefinition = null;\n    }\n\n    addComponent (component) {\n        this._componentMap.set(component.name(), component);\n    }\n\n    layoutDefinition (def) {\n        if (def) {\n            this._layoutDefinition = def;\n        }\n        return this._layoutDefinition;\n    }\n\n    addMultipleComponent (componentArray) {\n        componentArray.forEach((comp) => {\n            this.addComponent(comp);\n        });\n    }\n\n    sanitizedDefinition () {\n        sanitizeConfig(this, this._layoutDefinition);\n        return this.layoutDefinition();\n    }\n\n    componentMap () {\n        return this._componentMap;\n    }\n    resetComponentMap () {\n        this._componentMap.clear();\n    }\n}\n","import DefinitionManager from '../layout-definition/definition-manager';\n\nexport function sanitizeConfig (context, hostObj) {\n    const hostID = hostObj.host();\n    if (hostObj.lanes() && hostObj.lanes().length) {\n        hostObj.lanes().forEach(childHost => sanitizeConfig(context, childHost));\n    }\n    if (hostID != null && typeof (hostID) === 'string') {\n        if (context.componentMap().get(hostID) !== undefined) {\n            hostObj.host(context.componentMap().get(hostID));\n        }\n    }\n}\n\nexport function calLayOutDef (context) {\n    const { height, width } = context.dimension();\n    const defManager = new DefinitionManager(context.layoutDef().componentMap(),\n                                              context.prioritySequence(),\n                                              height,\n                                              width);\n    const genLayoutdef = defManager.generateConfigModel();\n    return genLayoutdef;\n}\n","import {\n  LayoutModel\n} from '../layout-definition';\n\nimport {\n  DEFAULT_WIDTH,\n  DEFAULT_HEIGHT\n} from '../constants/defaults';\n\nimport { DrawingManager } from '../drawing-manager';\nimport { Utils } from '../utils';\nimport { LayoutDef } from './layout-def';\nimport { calLayOutDef } from './helper';\n\nexport default class LayoutManager {\n    constructor (conf) {\n        this._renderAt = conf.renderAt;\n        this._layoutClassName = conf.className;\n        this._dimension = {\n            width: conf.width || DEFAULT_WIDTH,\n            height: conf.height || DEFAULT_HEIGHT\n        };\n\n        this._skeletonType = conf.skeletonType || 'html';\n        this._layoutDefinition = null;\n        this._layoutDef = new LayoutDef();\n        this._drawingManager = null;\n        this._prioritySequence = [];\n        this.tree = null;\n        this._rootNodeID = null;\n    }\n\n    layoutDef (param) {\n        if (param) {\n            this._layoutDef = param;\n        }\n        return this._layoutDef;\n    }\n\n    prioritySequence (param) {\n        if (param) {\n            this._prioritySequence = param;\n        }\n        return this._prioritySequence;\n    }\n\n    dimension (param) {\n        if (param) {\n            Object.assign(this._dimension, param);\n        }\n        return this._dimension;\n    }\n\n    addComponent (component) {\n        this._layoutDef.addComponent(component);\n    }\n\n    addMultipleComponent (componentArray) {\n        this._layoutDef.addMultipleComponent(componentArray);\n    }\n\n    resetNode (node) {\n        if (this.con) {\n            this.con.resetNode(node);\n        }\n    }\n\n  /**\n   * function to update the node and rerender the layout.\n   * @param  {} config - node configuration to change.\n   */\n    updateNode (config) {\n        this.tree.updateNode(config);\n        this._layoutDefinition = this.tree.model;\n        this.compute();\n    }\n\n    compute () {\n        //----\n        if (Utils.isDOMElement(this._renderAt)) {\n            this._renderAt._layout = this;\n        } else {\n            document.getElementById(this._renderAt)._layout = this;\n        }\n        //-----\n        this._layoutDefinition = calLayOutDef(this);\n        this._layoutDef.layoutDefinition(this._layoutDefinition);\n        this._layoutDefinition = this._layoutDef.sanitizedDefinition();\n        this._layout = new LayoutModel({\n            width: this._dimension.width,\n            height: this._dimension.height\n        },\n            this._layoutDefinition);\n        this.tree = this._layout.negotiate().tree();\n        this._layout.broadcast();\n        this._drawingManager = new DrawingManager({\n            tree: this.tree,\n            componentMap: this._layoutDef.componentMap(),\n            layoutClassName: this._layoutClassName\n        }, this._skeletonType, this._renderAt);\n\n        if (this._rootNodeID) {\n            this.tree.id(this._rootNodeID);\n        } else {\n            this._rootNodeID = this.tree.id();\n        }\n    // this will draw all the components by calling their draw method\n        this._drawingManager.draw();\n    }\n\n    getRootNodeId () {\n        return this._rootNodeID;\n    }\n\n  /**\n  * This function takes the LayoutComponents and Register them in component store\n  * @param {Array<LayoutComponent>} layoutComponents\n  */\n    registerComponents (layoutComponents) {\n        this._prioritySequence.length = 0;\n        this._layoutDef.resetComponentMap();\n        layoutComponents.forEach((container) => {\n            if (container) {\n                this._prioritySequence.push(container.name());\n                this.addComponent(container);\n                if (container.name() === 'grid') {\n                    container.component.forEach((componentArr) => {\n                        componentArr.forEach((compo) => {\n                            this.addComponent(compo);\n                        });\n                    });\n                }\n            }\n        });\n        return this;\n    }\n\n    getComponent (componentName) {\n        return this._layoutDef.componentMap().get(componentName);\n    }\n\n    renderAt (mount) {\n        if (mount) {\n            this._renderAt = mount;\n        }\n        return this._renderAt;\n    }\n}\n","import { isEqual, STATE_NAMESPACES, selectElement, getValueParser } from 'muze-utils';\nimport { VisualGroup } from '@chartshq/visual-group';\nimport { ROWS, COLUMNS, COLOR, SHAPE, SIZE, DETAIL, DATA, CONFIG }\n    from '../constants';\nimport { canvasOptions } from './local-options';\nimport { LayoutManager } from '../../../layout/src/tree-layout';\n\n/**\n * Instantiate high level components. Canvas knows what all high level component it has.\n * @nice-to-have dynamic high level components.\n *  - Is it even required ?\n *  - Reactive to source (canvas) streaming ?\n * @param {*} context Canvas instance\n * @return {Object.<Array>} Arrays of Title, visualGroup, Legend\n */\nexport const initCanvas = (context) => {\n    const reg = context._registry.components;\n\n    return [new reg.VisualGroup(context._registry, Object.assign({\n        throwback: context._throwback\n    }, context.dependencies()))];\n};\n\nexport const fixScrollBarConfig = (config) => {\n    config.scrollBar.thickness = Math.min(50, Math.max(10, config.scrollBar.thickness));\n    return config;\n};\n\nexport const setLayoutInfForUnits = (context) => {\n    const layoutManager = context._layoutManager;\n    const boundBox = layoutManager.getComponent('grid').getBoundBox();\n    const valueMatrix = context.composition().visualGroup.matrixInstance().value;\n    const parentContainer = selectElement(`#${layoutManager.getRootNodeId()}`).node();\n    valueMatrix.each((cell) => {\n        cell.valueOf().parentContainerInf({\n            el: parentContainer,\n            dimensions: boundBox\n        });\n    });\n};\n\n/**\n *\n *\n * @memberof Canvas\n */\nexport const dispatchProps = (context) => {\n    const lifeCycleManager = context.dependencies().lifeCycleManager;\n    lifeCycleManager.notify({ client: context, action: 'beforeupdate' });\n    const visualGroup = context.composition().visualGroup;\n\n    const allOptions = context._allOptions;\n    for (const key in allOptions) {\n        const value = context[key]();\n        if (value !== null) {\n            visualGroup[key] && visualGroup[key](value);\n        }\n    }\n    const { invalidValues } = context.config();\n\n    visualGroup.valueParser(getValueParser(invalidValues));\n    visualGroup.createMatrices();\n    context._cachedProps = {};\n    lifeCycleManager.notify({ client: context, action: 'initialized' });\n    lifeCycleManager.notify({ client: context, action: 'updated' });\n};\n\nconst equalityChecker = (props, params) => {\n    let checker = () => false;\n    return !props.every((option, i) => {\n        switch (option) {\n        case ROWS:\n        case COLUMNS:\n        case DETAIL:\n            checker = isEqual('Array');\n            break;\n\n        case SHAPE:\n        case SIZE:\n        case COLOR:\n        case DATA:\n        case CONFIG:\n            checker = isEqual('Object');\n            break;\n        default:\n            checker = () => true;\n            break;\n        }\n        const oldVal = params[i][0];\n        const newVal = params[i][1];\n\n        return checker(oldVal, newVal);\n    });\n};\n\nconst updateChecker = (props, params) => props.every((option, i) => {\n    const val = params[i][1];\n    switch (option) {\n    case ROWS:\n    case COLUMNS:\n        return val !== null;\n\n    case DATA:\n        return val && !val.isEmpty();\n\n    default:\n        return true;\n\n    }\n});\n\nexport const notifyAnimationEnd = (context) => {\n    const centerMatrix = context.layout().viewInfo().viewMatricesInfo.matrices.center[1] || [];\n    const promises = [];\n    centerMatrix.forEach((cellArr) => {\n        cellArr.forEach((cell) => {\n            promises.push(cell.valueOf().done());\n        });\n    });\n    const lifeCycleManager = context.lifeCycle();\n    if (promises.length) {\n        Promise.all(promises).then(() => {\n            // Update life cycle\n            lifeCycleManager.notify({ client: context, action: 'drawn' });\n            const animDonePromises = [];\n\n            centerMatrix.forEach((cellArr) => {\n                cellArr.forEach((cell) => {\n                    cell.valueOf().layers().forEach((layer) => {\n                        animDonePromises.push(layer.animationDone());\n                    });\n                });\n            });\n\n            [context.xAxes(), context.yAxes()].forEach((axisArr) => {\n                axisArr = axisArr || [];\n                axisArr.forEach((axes) => {\n                    axes.forEach((axisInst) => {\n                        animDonePromises.push(axisInst.animationDone());\n                    });\n                });\n            });\n\n            Promise.all(animDonePromises).then(() => {\n                lifeCycleManager.notify({ client: context, action: 'animationend' });\n            });\n        });\n    } else {\n        lifeCycleManager.notify({ client: context, action: 'animationend' });\n    }\n};\n\nexport const setupChangeListener = (context) => {\n    const store = context._store;\n\n    const allOptions = Object.keys(context._allOptions);\n    const props = [...allOptions, ...Object.keys(canvasOptions)];\n    const nameSpaceProps = [...allOptions, ...Object.keys(canvasOptions)].map(prop =>\n        `${STATE_NAMESPACES.CANVAS_LOCAL_NAMESPACE}.${prop}`);\n    store.registerChangeListener(nameSpaceProps, (...params) => {\n        let updateProps = equalityChecker(props, params);\n        updateProps = updateChecker(props, params);\n\n        // inform attached board to rerender\n        if (updateProps && context.mount()) {\n            dispatchProps(context);\n            context.render();\n        }\n        notifyAnimationEnd(context);\n    }, true);\n};\n\nexport const applyInteractionPolicy = (firebolt) => {\n    const canvas = firebolt.context;\n    const visualGroup = canvas.composition().visualGroup;\n    if (visualGroup) {\n        const valueMatrix = visualGroup.matrixInstance().value;\n        const interactionPolicy = firebolt._interactionPolicy;\n        interactionPolicy(valueMatrix, firebolt);\n        const crossInteractionPolicy = firebolt._crossInteractionPolicy;\n        const behaviours = crossInteractionPolicy.behaviours;\n        const sideEffects = crossInteractionPolicy.sideEffects;\n        valueMatrix.each((cell) => {\n            const unitFireBolt = cell.valueOf().firebolt();\n            for (const key in behaviours) {\n                unitFireBolt.changeBehaviourStateOnPropagation(key, behaviours[key]);\n            }\n            for (const key in sideEffects) {\n                unitFireBolt.changeSideEffectStateOnPropagation(key, sideEffects[key]);\n            }\n        });\n    }\n};\n\n/**\n * Sets the rotation for all x axes if any axis has the rotation config set in the\n * entire view\n *\n * @param {Array} columns Column cells that contain the axes cells\n */\nexport const setLabelRotationForAxes = (context) => {\n    let rotation = 0;\n\n    const xAxes = context.xAxes() || [];\n\n    (() => {\n        for (let i = 0; i < xAxes.length; i++) {\n            for (let j = 0; j < xAxes[i].length; j++) {\n                const rotationVal = xAxes[i][j].renderConfig().labels.rotation;\n                if (rotationVal && rotationVal !== 0) {\n                    rotation = rotationVal;\n                    return;\n                }\n            }\n        }\n    })();\n\n    if (rotation) {\n        xAxes.forEach((axes) => {\n            axes.forEach((axis) => {\n                axis.renderConfig({ labels: { rotation } });\n                axis.smartTicks(axis.setTickConfig());\n            });\n        });\n    }\n};\n\nexport const createGroupState = (context) => {\n    const [globalState, localState] = VisualGroup.getState();\n    const store = context._store;\n    store.append('app.group', globalState);\n    store.append('local.group', localState);\n};\n\nexport const removeChild = (mount) => {\n    while (mount.firstChild) {\n        mount.removeChild(mount.firstChild);\n    }\n};\n\nexport const createLayoutManager = () => {\n    const layoutManager = new LayoutManager({\n        className: 'muze-group-container'\n    });\n    return layoutManager;\n};\n","/**\n * This is the global options semantics based on which setters getters are created and reactivity is initiated.\n * Format\n *  PROPERTRY_NAME: {\n *      value: // default value of the property,\n *      meta: {\n *          typeCheck: // The setter value will be checked using this. If the value is function then the setter value\n *                     // is passed as args.\n *          typeExpected: // The output of typecheck action will be tested against this. Truthy value will set the\n *                       // value to the setter\n *          sanitizaiton: // Need for sanitization before type is checked\n *      }\n *  }\n * @module GlobalOptions\n */\n\nimport { intSanitizer, mergeRecursive, DataModel } from 'muze-utils';\nimport { fixScrollBarConfig } from './canvas/helper';\nimport { DEFAULT_CONFIG } from './defaults';\n\nexport default {\n    data: {\n        value: null,\n        meta: {\n            typeCheck: d => d instanceof DataModel\n        }\n    },\n    width: {\n        value: 0,\n        meta: {\n            sanitization: intSanitizer,\n            typeCheck: Number.isInteger\n        }\n    },\n    height: {\n        value: 0,\n        meta: {\n            sanitization: intSanitizer,\n            typeCheck: Number.isInteger\n        }\n    },\n    minUnitWidth: {\n        value: 50,\n        meta: {\n            sanitization: intSanitizer,\n            typeCheck: Number.isInteger\n        }\n    },\n    minUnitHeight: {\n        value: 50,\n        meta: {\n            sanitization: intSanitizer,\n            typeCheck: Number.isInteger\n        }\n    },\n    config: {\n        value: null,\n        meta: {\n            typeCheck: 'constructor',\n            typeExpected: 'Object',\n            sanitization: (config, oldConfig) => {\n                // Reset the configuration when null is passed\n                const oldConf = mergeRecursive({}, config === null ? {} : oldConfig);\n                const defConfig = mergeRecursive(oldConf, DEFAULT_CONFIG);\n                let newConf = mergeRecursive(defConfig, config);\n                newConf = fixScrollBarConfig(newConf);\n\n                return newConf;\n            }\n\n        }\n    }\n};\n","/**\n * This file exports constants that will be used to\n * create the state store of the table layout.\n */\n/**\n * The index of top, bottom and center in the matrix\n */\nexport const VIEW_INDEX = {\n    top: 0,\n    center: 1,\n    bottom: 2\n};\n\nexport const ROW_MATRIX_INDEX = {\n    0: 'top',\n    1: 'center',\n    2: 'bottom'\n};\n\nexport const COLUMN_MATRIX_INDEX = {\n    0: 'left',\n    1: 'middle',\n    2: 'right'\n};\n\n/**\n * The width of the grid suppied by the user.\n */\nexport const GRID_WIDTH = 'width';\n\n/**\n * The height of the grid supplied by the user.\n */\nexport const GRID_HEIGHT = 'height';\n\n/**\n  * The border for the grid\n  */\nexport const BORDER = 'border';\n\n /**\n  *  The index of the first visible row in view matrix.\n  */\nexport const ROW_POINTER = 'rowPointer';\n\n/**\n * The index of the first visible column in the view matrix.\n */\nexport const COLUMN_POINTER = 'columnPointer';\n\n/**\n * Flag to specify whether row sizes should be equal.\n */\nexport const ROW_SIZE_IS_EQUAL = 'isRowSizeEqual';\n\n/**\n * Flag to specify whether column sizes are equal.\n */\nexport const COLUMN_SIZE_IS_EQUAL = 'isColumnSizeEqual';\n\n/**\n * Field to store an array an of the widths of visible columns.\n * @computed\n */\nexport const COLUMN_WIDTHS = 'visibleColumnWidths';\n\n/**\n * Field to store an array of heights of visible rows.\n * @computed\n */\nexport const ROW_HEIGHTS = 'visibleRowHeights';\n\n/**\n * Field to store the width of the left matrix.\n * @computed\n */\nexport const LEFT_MATRIX_WIDTH = 'leftMatrixWidth';\n\n/**\n * Field to store the width of the right matrix.\n * @computed\n */\nexport const RIGHT_MATRIX_WIDTH = 'rightMatrixWidth';\n\n/**\n * Field to store the height of the top matrix.\n * @computed\n */\nexport const TOP_MATRIX_HEIGHT = 'topMatrixHeight';\n\n/**\n * Field to store the height of the bottom matrix.\n * @computed\n */\nexport const BOTTOM_MATRIX_HEIGHT = 'bottomMatrixHeight';\n\n/**\n * The dom element to render the layout inside.\n */\nexport const MOUNT_POINT = 'mount';\n\n/**\n * The id attribute of the left table element.\n */\nexport const LEFT_TABLE_ID = 'grid-left';\n\n/**\n * The id attribute of the right table element.\n */\nexport const RIGHT_TABLE_ID = 'grid-right';\n\n/**\n * The id attribute of the top table.\n */\nexport const TOP_TABLE_ID = 'grid-top';\n\n/**\n * The id attribute of the bottom table.\n */\nexport const BOTTOM_TABLE_ID = 'grid-bottom';\n\n/**\n * The id attribute of the center table.\n */\nexport const CENTER_TABLE_ID = 'grid-center';\n\n/**\n * The id attribute of the top div.\n */\nexport const TOP_DIV_ID = 'muze-div-top';\n\n/**\n * The id attribute of the bottom div.\n */\nexport const BOTTOM_DIV_ID = 'muze-div-bottom';\n\n/**\n * The id attribute of the center div.\n */\nexport const CENTER_DIV_ID = 'muze-div-center';\n\n/**\n * Field that indicates if the row configuration has changed\n */\nexport const HAVE_ROWS_CHANGED = 'haveRowsChanged';\n\n/**\n * Field that indicates if the column configuration has changed\n */\nexport const HAVE_COLUMNS_CHANGED = 'haveColumnsChanged';\n\n/**\n * Field that indicates if the values configuration for the center matrix has changed\n */\nexport const HAVE_VALUES_CHANGED = 'haveValuesChanged';\n\n/**\n * Field that indicates the width of row matrix\n */\nexport const ROW_MATRIX_WIDTH = 'rowMatrixWidth';\n\n/**\n * Field that indicates the height of row matrix\n */\nexport const COLUMN_MATRIX_HEIGHT = 'columnMatrixHeight';\n\n/**\n * Field that indicates the unit width of layout\n */\nexport const UNIT_WIDTH = 'unitWidth';\n\n/**\n * Field that indicates the unit height of layout\n */\nexport const UNIT_HEIGHT = 'unitHeight';\n\n/**\n * Field that indicates the style object\n */\nexport const STYLE = 'style';\n\n/**\n * Field that indicates the color configuration\n */\nexport const COLOR = 'color';\n\n/**\n * Field that indicates width\n */\nexport const WIDTH = 'width';\n\n/**\n * Field that indicates collpase property for border\n */\nexport const COLLAPSE = 'collapse';\n\n/**\n * Field that indicates spacing property for border\n */\nexport const SPACING = 'spacing';\n\n/**\n * Field that indicates spacing property for border\n */\nexport const DISTRIBUTION = 'distribution';\n\n/**\n * Field that indicates spacing property for border\n */\nexport const GUTTERSPACE = 'gutterSpace';\n\n/**\n * Field that indicates spacing property for border\n */\nexport const BREAK_PAGE = 'breakPage';\n\n/**\n * Field that indicates spacing property for border\n */\nexport const SHOW_ROW_BORDERS = 'showRowBorders';\n\n/**\n * Field that indicates spacing property for border\n */\nexport const SHOW_COL_BORDERS = 'showColBorders';\n\n/**\n * Field that indicates spacing property for border\n */\nexport const SHOW_VALUE_BORDERS = 'showValueBorders';\n\nexport const HEIGHT = 'height';\nexport const COLUMN = 'column';\nexport const ROW = 'row';\nexport const TOP = 'top';\nexport const LEFT = 'left';\nexport const RIGHT = 'right';\nexport const BOTTOM = 'bottom';\nexport const CENTER = 'center';\nexport const CLICK = 'click';\nexport const ROW_LEFT = 'rowLeft';\nexport const ROW_RIGHT = 'rowRight';\nexport const COLUMN_BOTTOM = 'colBottom';\nexport const COLUMN_TOP = 'colTop';\nexport const AUTO = 'auto';\nexport const ROW_SPAN = 'rowSpan';\nexport const COL_SPAN = 'colSpan';\nexport const ROW_ROOT = 'rowRoot';\nexport const COLUMN_ROOT = 'columnRoot';\nexport const PRIMARY = 'primary';\nexport const SECONDARY = 'secondary';\nexport const VERTICAL = 'vertical';\nexport const HORIZONTAL = 'horizontal';\n\nexport const BLANK_BORDERS = 'rgba(0,0,0,0)';\n\nexport const PAGINATION = 'pagination';\nexport const BUFFER = 'buffer';\nexport const HOLISTIC = 'holistic';\nexport const SCROLL = 'scroll';\nexport const MIDDLE = 'middle';\nexport const NO_BORDERS = null;\n\nexport const MAX_WIDTH_AVAIL_FOR_COL_MATRIX = 'maxWidthAvailableForColumnMatrix';\nexport const COLUMN_MATRIX = 'columnMatrix';\nexport const MAX_HEIGHT_AVAIL_FOR_ROW_MATRIX = 'maxHeightAvailableForRowMatrix';\nexport const ROW_MATRIX = 'rowMatrix';\n","import { sanitizeIP, mergeRecursive } from 'muze-utils';\nimport { TOP, CENTER, BOTTOM } from '../enums/constants';\n\n/*\n * This is the abstract implementation of the root layout. This takes care of common work which all the layouts\n * has to handle. The common work includes sanitizaion of inputs, update, rerender, dispose etc. This class can't be\n * used directly (as ofcourse this is an abstract implementaiton), the class which is implementing it has to implement\n * the necessary methods and gives its on visual.\n */\n\n/**\n * This class is used to create a generic layout. It can be extended to create layouts\n * of different types\n * @class GenericLayout\n */\nexport default class GenericLayout {\n\n    /**\n     * Creates an instance of TableLayout.\n     * @param {HTMLElement} mountPoint DOM element/d3 selection where the layout is to be mounted\n     * @param {Object} measurement The dimensions of the layout\n     * @param {Object} config configuration to be given for the layout\n     * @param {Object} dependencies external dependencies.\n     *\n     * @memberof GenericLayout\n     *\n     */\n    constructor (mountPoint, measurement, config, dependencies) {\n        this._config = {};\n        this._measurement = {};\n        this._matrices = [];\n        // External dependencies to be included for the layout. This includes the ext global dependencies like\n        // smartlabel which has one single implementation of throughout the page or per isntance\n        this._dependencies = dependencies;\n\n        this.measurement(measurement);\n        this.mountPoint(mountPoint);\n        this.config(config);\n    }\n\n    /**\n     * Returns an object which is used to recreate the layout.\n     * @return {Object} the serialized components\n     */\n    serialize () {\n        return {\n            measurement: this.measurement(),\n            config: this.config(),\n            matrices: this.matrices()\n        };\n    }\n\n     /**\n     * Sets/Gets the config for the layout\n     * @param {Object} config configuration for the layout\n     * @return {Layout|Object} Gets the Config/ Returns this instance when set\n     */\n    config (config) {\n        if (config) {\n            this._config = mergeRecursive(this._config || {}, config);\n            this._config.border.width = Math.max(0, this._config.border.width);\n            return this;\n        }\n        return this._config;\n    }\n\n    /**\n     * Sets/Gets the measurement for the layout\n     * @param {Object} measurement measurement for the layout\n     * @return {Layout|Object} Gets the measurement/ Returns this instance when set\n     */\n    measurement (measurement) {\n        if (measurement) {\n            this._measurement = mergeRecursive(this._measurement || {}, measurement);\n\n            return this;\n        }\n        return this._measurement;\n    }\n\n    /**\n     * Sets/Gets the matrices for the layout\n     * @param {Object} matrices matrices for the layout\n     * @return {Layout|Object} Gets the matrices/ Returns this instance when set\n     */\n    matrices (matrices) {\n        if (matrices) {\n            this._matrices = sanitizeIP.typeObj([TOP, CENTER, BOTTOM], matrices);\n\n            return this;\n        }\n        return this._matrices;\n    }\n\n    /**\n     * Sets/Gets the matrix for row\n     * @param {Object} matrix matrices for the layout\n     * @return {Layout|Object} Gets the matrix/ Returns this instance when set\n     */\n    rowMatrix (matrix) {\n        if (matrix) {\n            this._rowMatrix = matrix;\n            return this;\n        }\n        return this._rowMatrix;\n    }\n\n    /**\n     * Sets/Gets the matrix for columns\n     * @param {Object} matrix matrices for the layout\n     * @return {Layout|Object} Gets the matrix/ Returns this instance when set\n     */\n    columnMatrix (matrix) {\n        if (matrix) {\n            this._columnMatrix = matrix;\n            return this;\n        }\n        return this._columnMatrix;\n    }\n\n   /**\n     * Sets/Gets the matrix for value\n     * @param {Object} matrix matrices for the layout\n     * @return {Layout|Object} Gets the matrix/ Returns this instance when set\n     */\n    centerMatrix (matrix) {\n        if (matrix) {\n            this._centerMatrix = matrix;\n            return this;\n        }\n        return this._centerMatrix;\n    }\n\n    /**\n     * Sets/Gets the mountPoint for the layout\n     * @param {Object} mountPoint mountPoint for the layout\n     * @return {Layout|Object} Gets the mountPoint/ Returns this instance when set\n     */\n    mountPoint (mountPoint) {\n        if (mountPoint) {\n            this._mountPoint = mountPoint;\n\n            return this;\n        }\n        return this._mountPoint;\n    }\n}\n","import * as FieldNames from '../enums/constants';\n\n/**\n * Default configuration of the layout\n * @return {Object} returns the default configuration\n */\nexport const DEFAULT_CONFIGURATION = {\n    [FieldNames.BORDER]: {\n        [FieldNames.STYLE]: 'solid',\n        [FieldNames.COLOR]: '#d6d6d6',\n        [FieldNames.WIDTH]: 2,\n        [FieldNames.COLLAPSE]: true,\n        [FieldNames.SPACING]: 0\n    },\n    [FieldNames.PAGINATION]: 'scroll',\n    [FieldNames.BUFFER]: 20,\n    [FieldNames.GUTTERSPACE]: { rows: [], columns: [] },\n    [FieldNames.DISTRIBUTION]: { rows: [], columns: [] },\n    [FieldNames.BREAK_PAGE]: { rows: [], columns: [] },\n    [FieldNames.ROW_SIZE_IS_EQUAL]: false,\n    [FieldNames.COLUMN_SIZE_IS_EQUAL]: false,\n    [FieldNames.COLUMN_POINTER]: 0,\n    [FieldNames.ROW_POINTER]: 0\n};\n\n/**\n * Default measurements for the layout\n * @return {Object} returns the default measurements\n */\nexport const DEFAULT_MEASUREMENTS = {\n    [FieldNames.GRID_WIDTH]: 100,\n    [FieldNames.GRID_HEIGHT]: 100,\n    [FieldNames.UNIT_WIDTH]: 100,\n    [FieldNames.UNIT_HEIGHT]: 100\n};\n\nexport const BLANK_BORDERS = 'rgba(0,0,0,0)';\n","/**\n * This file exports utility functions that are used across the layout module\n */\nimport { Symbols } from 'muze-utils';\nimport { PRIMARY, SECONDARY, HEIGHT, WIDTH } from '../enums/constants';\n\nconst nest = Symbols.nest;\n/**\n *\n *\n * @param {*} isTransposed\n *\n */\nconst getMeasureInfo = (isTransposed) => {\n    if (isTransposed) {\n        return {\n            firstMeasure: HEIGHT,\n            secondMeasure: WIDTH\n        };\n    }\n    return {\n        firstMeasure: WIDTH,\n        secondMeasure: HEIGHT\n    };\n};\n\n/**\n *\n *\n * @param {*} i\n * @param {*} page\n *\n */\nconst findInPage = (i, page) => {\n    let count = 0;\n    for (const x in page) {\n        if (i < page[x]) {\n            count = x;\n            break;\n        }\n    }\n    return count;\n};\n\n/**\n * Creates a single matrix from two matrices\n *\n * @param {Array<Array>} matrix Input matrix\n * @return {Array<Array>} Joined matrix\n * @memberof VisualMatrix\n */\nexport const combineMatrices = (matrix, config) => {\n    const { isTransposed } = config;\n    let joinedMatrix = matrix[0].length > 0 ? matrix[0] : matrix[1];\n    if (isTransposed) {\n        joinedMatrix = matrix[0].length > 0 ? [...matrix[0]] : [];\n        joinedMatrix = matrix[1].length > 0 ? [...joinedMatrix, ...matrix[1]] : joinedMatrix;\n    } else {\n        joinedMatrix = joinedMatrix.map((row, rowIndex) => {\n            let rowData = [];\n            if (matrix[0].length > 0) {\n                rowData = [...matrix[0][rowIndex]];\n            }\n            if (matrix[1].length > 0) {\n                rowData = [...rowData, ...matrix[1][rowIndex]];\n            }\n            return rowData;\n        });\n    }\n    return joinedMatrix;\n};\n\n/**\n * Creates a hirachical tree from the context\n *\n * @param {Object} context context for creating tree\n * @return {Object} nested tree\n */\nexport const createTree = (context) => {\n    let matrixTree = {};\n    let lastLevelKey = 0;\n    let facet = PRIMARY;\n    const nestFn = nest();\n    const keys = [];\n    const layoutMatrix = context._layoutMatrix;\n    const primaryMatrix = context.primaryMatrix();\n    const secondaryMatrix = context.secondaryMatrix();\n    const { isTransposed, breakPage } = context.config();\n\n    if (!isTransposed) {\n        if (primaryMatrix.length === 0) {\n            facet = PRIMARY;\n        } else if (secondaryMatrix.length === 0) {\n            facet = SECONDARY;\n        } else {\n            facet = primaryMatrix.length >= secondaryMatrix.length ? PRIMARY : SECONDARY;\n        }\n        if (primaryMatrix.length > 0) {\n            for (let i = 0; i < primaryMatrix[0].length - 1; i++) {\n                keys.push(i);\n            }\n            keys.push(primaryMatrix[0].length - 1);\n            if (facet === SECONDARY || secondaryMatrix.length === 0) {\n                lastLevelKey = primaryMatrix[0].length - 1;\n            }\n        }\n        if (secondaryMatrix.length > 0) {\n            const keyLength = primaryMatrix.length > 0 ? primaryMatrix[0].length : 0;\n            for (let i = secondaryMatrix[0].length - 1; i > 0; i--) {\n                keys.push(i + keyLength);\n            }\n            keys.push(keyLength);\n\n            if (facet === PRIMARY) {\n                lastLevelKey = keyLength;\n            }\n        } else {\n            lastLevelKey = primaryMatrix.length > 0 ? primaryMatrix[0].length - 1 : 0;\n        }\n        keys.forEach((key) => {\n            let counter = -1;\n            return nestFn.key((d) => {\n                counter++;\n                return `${d[key].valueOf()}-${findInPage(counter, breakPage)}`;\n            });\n        });\n        matrixTree = nestFn.entries(layoutMatrix);\n    } else {\n        if (primaryMatrix.length === 0) {\n            facet = PRIMARY;\n        } else if (secondaryMatrix.length === 0) {\n            facet = SECONDARY;\n        } else {\n            facet = primaryMatrix.length >= secondaryMatrix.length ? PRIMARY : SECONDARY;\n        }\n        if (primaryMatrix.length > 0) {\n            for (let i = 0; i < primaryMatrix.length - 1; i++) {\n                keys.push(i);\n            }\n            // if (facet === PRIMARY) {\n            keys.push(primaryMatrix.length - 1);\n            // } else {\n            if (facet === SECONDARY) {\n                lastLevelKey = primaryMatrix.length - 1;\n            }\n        }\n        if (secondaryMatrix.length > 0) {\n            const primaryMatrixLength = primaryMatrix.length;\n            for (let i = secondaryMatrix.length - 1; i > 0; i--) {\n                keys.push(i + primaryMatrixLength);\n            }\n            // if (facet === SECONDARY) {\n            keys.push(primaryMatrixLength);\n            // }\n            if (facet === PRIMARY) {\n                lastLevelKey = primaryMatrixLength;\n            }\n        }\n        keys.forEach((key) => {\n            let counter = -1;\n            return nestFn.key((d) => {\n                counter++;\n                return `${d[key].valueOf()}-${findInPage(counter, breakPage)}`;\n            });\n        });\n        let newMatrix = [];\n        newMatrix = layoutMatrix[0].map((col, colIndex) => layoutMatrix.map(row => row[colIndex]));\n        matrixTree = nestFn.entries(newMatrix);\n    }\n    return { tree: matrixTree, lastLevelKey };\n};\n\n/**\n * Gives the min measues\n *\n * @param {boolean} isTransposed is column matrix\n * @param {Object} unitMeasures min measures to be given to cells\n * @return {Object} dimension min cell\n */\nexport const getMinMeasures = (isTransposed, unitMeasures) => {\n    if (!isTransposed) {\n        return {\n            height: unitMeasures.height,\n            width: 0\n        };\n    }\n    return {\n        height: 0,\n        width: unitMeasures.width\n    };\n};\n\n/**\n * Get the logical space from the tree\n *\n * @param {Node} item tree to be calculated\n * @param {number} measures width and height\n * @param {Array} minMeasures min measures for a cell\n * @param {Array} maxMeasure max measures for a col/row\n * @return {Object} dimension\n */\nexport const getLogicalSpace = (item, measures, minMeasures, maxMeasure = []) => {\n    const { firstMeasure, secondMeasure } = measures;\n    let firstMeasureValue = 0;\n    let secondMeasureValue = 0;\n    item.values.forEach((valueArray) => {\n        let fMeasure = 0;\n        let sMeasure = 0;\n        valueArray.forEach((placeholder, colIndex) => {\n            placeholder.setAvailableSpace();\n            const space = placeholder.getLogicalSpace();\n\n            sMeasure = Math.max(sMeasure, +space[secondMeasure], minMeasures[secondMeasure]);\n            maxMeasure[colIndex] = Math.max(maxMeasure[colIndex] || 0, space[firstMeasure]);\n            fMeasure += +maxMeasure[colIndex];\n        });\n        secondMeasureValue += sMeasure;\n        firstMeasureValue = Math.max(firstMeasureValue, fMeasure);\n        item.space = {\n            [secondMeasure]: Math.ceil(secondMeasureValue),\n            [firstMeasure]: Math.ceil(firstMeasureValue)\n        };\n    });\n    return {\n        [secondMeasure]: secondMeasureValue,\n        [firstMeasure]: firstMeasureValue\n    };\n};\n\n/**\n * Computes the logical spcae taken by the matrix tree\n *\n * @param {*} [item={}] tree to be viewed\n * @param {boolean} [isTransposed=false] is column matrix\n * @param {*} unitMeasures min measues for a cell\n * @param {Array} maxMeasure max measures for a col/row\n * @return {Object} logical space taken\n */\nexport const computeLogicalSpace = (item = {}, config, maxMeasures) => {\n    const { isTransposed = false, unitMeasures } = config;\n    const { firstMeasure, secondMeasure } = getMeasureInfo(isTransposed);\n    const { values } = item;\n    const minMeasures = getMinMeasures(isTransposed, unitMeasures);\n    if (values[0].key) {\n        const logicalSpace = { [firstMeasure]: 0, [secondMeasure]: 0 };\n\n        values.forEach((valueItem) => {\n            // Compute logical space for lowest level\n            const space = computeLogicalSpace(valueItem, config, maxMeasures);\n            // Set logical space for first measure\n            logicalSpace[firstMeasure] = Math.max(logicalSpace[firstMeasure], space[firstMeasure],\n                minMeasures[firstMeasure]);\n            // Set logical space for second measure\n            logicalSpace[secondMeasure] += +space[secondMeasure];\n        });\n        item.space = logicalSpace;\n        return logicalSpace;\n    }\n    return getLogicalSpace(item, { firstMeasure, secondMeasure }, minMeasures, maxMeasures);\n};\n\n/**\n * Gives the space taken by a row\n *\n * @param {Array} row matrix array of rows\n * @return {Object} dimension of the row\n */\nexport const spaceTakenByRow = (row) => {\n    let height = 0;\n    let width = 0;\n    row.forEach((col) => {\n        const spaces = col.getLogicalSpace();\n        height = Math.max(height, spaces.height);\n        width += spaces.width;\n    });\n    return {\n        width,\n        height\n    };\n};\n\n/**\n * Gives the space taken by a column\n *\n * @param {Array<Array>} matrix column matrix\n * @param {number} colIndex column index\n * @return {Object} dimension of the column\n */\nexport const spaceTakenByColumn = (matrix, colIndex) => {\n    let height = 0;\n    let width = 0;\n    matrix.forEach((row) => {\n        const col = row[colIndex];\n        const spaces = col.getLogicalSpace();\n        width = Math.max(width, spaces.width);\n        height += spaces.height;\n    });\n    return {\n        width,\n        height\n    };\n};\n\n/**\n * Creates different level matrices\n *\n * @param {Object} item matrix tree\n * @param {boolean} isTransposed is column matrix\n * @return {Object} matrix of each level\n */\nexport const createMatrixEachLevel = (item, isTransposed) => {\n    if (item.values[0].key) {\n        const arr = [];\n        item.values.forEach((child) => {\n            if (!isTransposed) {\n                arr.push(...createMatrixEachLevel(child, isTransposed));\n            } else {\n                const eachLevel = createMatrixEachLevel(child, isTransposed);\n                eachLevel.forEach((e, i) => {\n                    arr[i] = arr[i] || [];\n                    arr[i].push(...e);\n                });\n            }\n        });\n        item.matrix = arr;\n        return arr;\n    }\n    if (!isTransposed) {\n        item.matrix = item.values;\n    } else {\n        item.matrix = item.values[0].map((col, colIndex) => item.values.map(row => row[colIndex]));\n    }\n    return item.matrix;\n};\n\n/**\n * Breaks the matrix into two part\n *\n * @param {Array<Array>} matrix input matrix\n * @param {boolean} isTransposed is column matrix\n * @param {number} breakPointer point in matrix where it is to be broken\n * @return {Array} two broken matrix\n */\nexport const breakMatrix = (matrix, isTransposed, breakPointer) => {\n    const primaryMatrix = [];\n    const secondaryMatrix = [];\n    if (isTransposed) {\n        matrix.forEach((row, rowIndex) => {\n            if (rowIndex >= breakPointer) {\n                secondaryMatrix.push(row);\n            } else {\n                primaryMatrix.push(row);\n            }\n        });\n    } else {\n        matrix.forEach((row, rowIndex) => {\n            row.forEach((column, columnIndex) => {\n                if (columnIndex >= breakPointer) {\n                    secondaryMatrix[rowIndex] = secondaryMatrix[rowIndex] || [];\n                    secondaryMatrix[rowIndex].push(column);\n                } else {\n                    primaryMatrix[rowIndex] = primaryMatrix[rowIndex] || [];\n                    primaryMatrix[rowIndex].push(column);\n                }\n            });\n        });\n    }\n    return [primaryMatrix, secondaryMatrix];\n};\n\n/**\n * Distributed width returned\n *\n * @param {Object} context context for the width distibution\n * @return {number} distributed widths\n */\nexport const getDistributedWidth = (context, layoutConfig) => {\n    const {\n        availableWidth,\n        width,\n        row\n    } = context;\n    const {\n        isDistributionEqual,\n        isTransposed,\n        distribution\n    } = layoutConfig;\n    let distSum = 0;\n    if (distribution && distribution[0]) {\n        distSum = distribution.reduce((t, n) => {\n            t += n;\n            return t;\n        });\n    }\n    return row.map((col, colIndex) => {\n        const space = col.getLogicalSpace().width;\n        let distWidth = (space + (availableWidth - width) * (space / width));\n        if (isTransposed) {\n            if (distribution.length > 0) {\n                distWidth = (availableWidth * distribution[colIndex] / distSum);\n            } else if (isDistributionEqual || width === 0) {\n                const rowLen = row.length;\n                distWidth = (availableWidth / rowLen);\n            }\n        }\n        return Math.floor(distWidth);\n    });\n};\n\n/**\n * Distributeed heights returned\n *\n * @param {Object} context input for the height distribution\n * @return {Object} distribured heights\n */\nexport const getDistributedHeight = (context) => {\n    let distSum = 0;\n    let gutterSum = 0;\n    let heightWithoutGutter = 0;\n    const {\n        isTransposed,\n        distribution,\n        availableHeight,\n        height,\n        isDistributionEqual,\n        gutter,\n        matrix,\n        cIdx\n    } = context;\n\n    if (distribution && distribution[0] !== undefined) {\n        distSum = distribution.reduce((t, n) => {\n            t += n;\n            return t;\n        });\n    }\n    if (gutter && gutter[0] !== undefined) {\n        gutterSum = gutter.reduce((t, n) => {\n            t += n;\n            return t;\n        });\n    }\n    heightWithoutGutter = availableHeight - Math.floor(availableHeight * gutterSum);\n\n    const colLen = matrix.length;\n    return matrix.map((row, rIdx) => {\n        const col = row[cIdx];\n        const space = col.getLogicalSpace().height;\n        let distHeight = (space + (heightWithoutGutter - height) * (space / height));\n\n        if (!isTransposed) {\n            if (distribution.length > 0 && colLen === distribution.length) {\n                distHeight = (heightWithoutGutter * distribution[rIdx] / distSum);\n            } else if (isDistributionEqual || context.height === 0) {\n                distHeight = (heightWithoutGutter / colLen);\n            }\n        }\n        return Math.floor(distHeight);\n    });\n};\n\n/**\n *\n *\n * @param {*} arr\n * @param {*} beg\n * @param {*} end\n */\nexport const extraCellsRemover = (arr, beg, end) => arr.slice(beg, -end);\n\n/**\n * Creates matrix instancess\n *\n * @param {Array} [arr=[]] mutated arry\n * @param {number} depth depth of the tree\n * @param {Array} matrixInfo Details about the matrix(tree, etc) to be inserted\n * @param {boolean} layout Instance of layout\n */\nexport const createMatrixInstances = (arr = [], depth, matrixInfo, layout) => {\n    const breakPointer = layout._breakPointer;\n    const config = layout.config();\n    const {\n        isTransposed\n    } = config;\n    const {\n        tree,\n        layoutMatrix\n    } = matrixInfo;\n\n    if (depth === 0) {\n        const brokenMatrix = breakMatrix(tree.matrix, isTransposed, breakPointer);\n        arr.push({\n            matrix: tree.matrix,\n            primaryMatrix: brokenMatrix[0],\n            secondaryMatrix: brokenMatrix[1],\n            space: tree.space\n        });\n        return arr;\n    }\n    const nextLevel = depth - 1;\n    tree.values.forEach((e) => {\n        createMatrixInstances(arr, nextLevel, {\n            tree: e,\n            layoutMatrix\n        }, layout);\n    });\n    return arr;\n};\n","import { mergeRecursive } from 'muze-utils';\n\nexport const PROPS = {\n    config: {\n        sanitization: (context, value) => mergeRecursive(context._config || {}, value)\n    },\n    maxMeasures: {},\n    availableSpace: {},\n    logicalSpace: {}\n};\n","import { PRIMARY } from '../enums/constants';\n/**\n *\n *\n */\nexport const defaultConfig = {\n    distribution: [],\n    classPrefix: 'muze',\n    isDistributionEqual: true,\n    unitMeasures: {\n        height: 100,\n        width: 100,\n        border: 1\n    },\n    isTransposed: false,\n    facet: PRIMARY,\n    extraCellLengths: []\n};\n","import { mergeRecursive, generateGetterSetters, ERROR_MSG } from 'muze-utils';\nimport {\n    createTree,\n    combineMatrices,\n    createMatrixInstances\n  } from '../utils';\nimport { PROPS } from './props';\nimport { HEIGHT, WIDTH } from '../enums/constants';\nimport { defaultConfig } from './default-config';\n\n/**\n * This class used to create column / row matrix for GridLayout\n *\n * @class VisualMatrix\n */\nexport default class VisualMatrix {\n\n    /**\n     *Creates an instance of VisualMatrix.\n     * @param {any} matrix Two set of matrices\n     * @param {any} [config={}] Configuration for VisualMatrix\n     * @memberof VisualMatrix\n     */\n    constructor (matrix, config = {}) {\n        // Prepare matrices\n        this._lastLevelKey = 0;\n        this._primaryMatrix = matrix[0] || [];\n        this._secondaryMatrix = matrix[1] || [];\n        this._maxMeasures = [];\n        this._availableSpace = {};\n\n        // Store the config\n        generateGetterSetters(this, PROPS);\n        const defCon = Object.assign({}, this.constructor.defaultConfig());\n        this.config(mergeRecursive(defCon, config));\n\n        this._layoutMatrix = combineMatrices([matrix[0] || [], matrix[1] || []], this.config());\n    }\n\n     /**\n     * Computes the logical space taken by the entire matrixTree\n     *\n     * @return {Object} Logical space taken\n     * @memberof VisualMatrix\n     */\n    computeLogicalSpace () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    computeViewableSpaces () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    /**\n     *\n     *\n     * @return\n     * @memberof VisualMatrix\n     */\n    removeExtraCells () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    getPriorityDistribution () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    /**\n     * Calculates the depth of the tree that can be viewed\n     *\n     * @param {Array} widthMeasures array of widths\n     * @param {Array} heightMeasures array of heights\n     * @return {number} depth of the tree\n     * @memberof VisualMatrix\n     */\n    calculateDepth () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    /**\n     * Redistributes the provied space to all cells\n     *\n     * @param {*} viewableMatrix current viewport matrix\n     * @param {*} width provied width\n     * @param {*} height provied height\n     * @return {Object} current viewports matrixes with measures\n     * @memberof VisualMatrix\n     */\n    redistributeSpaces () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    /**\n     * Distibutes the given space row wisely\n     *\n     * @param {Object} measures Redistribution information\n     * @memberof VisualMatrix\n     */\n    redistributeViewSpaces () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    /**\n     * Dispatch the calculated cell dimensions to all the cells\n     *\n     * @param {Object} measures cell dimension information\n     * @return {Object} row and column heights / widths\n     * @memberof VisualMatrix\n     */\n    getCellDimensions () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    /**\n     *\n     *\n     * @param {*} params\n     * @returns\n     * @memberof VisualMatrix\n     */\n    primaryMatrix (...params) {\n        if (params.length) {\n            return this;\n        }\n        return this._primaryMatrix;\n    }\n\n    secondaryMatrix (...params) {\n        if (params.length) {\n            return this;\n        }\n        return this._secondaryMatrix;\n    }\n\n    tree (...params) {\n        if (params.length) {\n            return this;\n        }\n        return this._tree;\n    }\n\n    static defaultConfig () {\n        return defaultConfig;\n    }\n\n    createTree () {\n        const { tree, lastLevelKey } = createTree(this);\n        this._lastLevelKey = lastLevelKey;\n        return tree;\n    }\n\n    /**\n     * Returns the space taken by visual matrix\n     *\n     * @return {Object} space taken by the matrix\n     * @memberof VisualMatrix\n     */\n    getLogicalSpace () {\n        return this.logicalSpace();\n    }\n\n    /**\n     * Sets the provied space to the visual matrix\n     *\n     * @param {number} width width provided\n     * @param {number} height height provided\n     * @memberof VisualMatrix\n     */\n    setAvailableSpace (width, height) {\n        this.availableSpace({ width, height });\n        const tree = this.tree();\n        const heightMeasures = this.populateMaxMeasures(HEIGHT, tree);\n        const widthMeasures = this.populateMaxMeasures(WIDTH, tree);\n        const depth = this.calculateDepth(widthMeasures, heightMeasures);\n\n        this.viewableMatrix = this.createViewPortMatrix(depth);\n        this.viewableMeasures = this.redistributeSpaces(width, height);\n        return this;\n    }\n\n    /**\n     * Populate the max measures in the array\n     *\n     * @param {Array} measures array to be filled with max measures\n     * @param {Object} matrixTree matrix tree of visual matrix\n     * @param {number} measure width or height\n     * @param {number} [depth=0] depth of the tree that to be calculated\n     * @memberof VisualMatrix\n     */\n    populateMaxMeasures (type, matrixTree, depth = 0, measures = []) {\n        measures[depth] = Math.max(measures[depth] || 0, matrixTree.space[type]);\n        if (matrixTree.values) {\n            const childDepth = depth + 1;\n            matrixTree.values.forEach((child) => {\n                if (child.space) {\n                    measures = this.populateMaxMeasures(type, child, childDepth, measures);\n                }\n            });\n        }\n        return measures;\n    }\n\n    /**\n     * Gets the viewable measures for the current viewable matrix\n     *\n     * @return {Object} Set of viewable measures\n     * @memberof VisualMatrix\n     */\n    getViewableSpaces () {\n        return this.viewableMeasures;\n    }\n\n    /**\n     * Returns the matrix that can be viewed in the current viewport\n     *\n     * @return {Array} Set of matrices that can be viewed\n     * @memberof VisualMatrix\n     */\n    getViewableMatrices () {\n        return this.viewableMatrix;\n    }\n\n    /**\n     * Creates the viewport that can be viewed together\n     *\n     * @param {number} depth maxDepth that can be viewed in the viewport\n     * @return {Array<Object>} Set of matrices that can be viewed\n     * @memberof VisualMatrix\n     */\n    createViewPortMatrix (depth) {\n        const arr = [];\n        createMatrixInstances(arr, depth, this.removeExtraCells(), this);\n        return arr;\n    }\n}\n\n","import { mergeRecursive } from 'muze-utils';\nimport {\n    extraCellsRemover,\n    combineMatrices,\n    spaceTakenByColumn,\n    getDistributedHeight,\n    computeLogicalSpace,\n    createMatrixEachLevel\n  } from '../utils';\nimport { ROW_ROOT } from '../enums/constants';\nimport VisualMatrix from './visual-matrix';\n\n/**\n * This class used to create column / row matrix for GridLayout\n *\n * @class VisualMatrix\n */\nexport default class RowVisualMatrix extends VisualMatrix {\n\n    /**\n     *Creates an instance of VisualMatrix.\n     * @param {any} matrix Two set of matrices\n     * @param {any} [config={}] Configuration for VisualMatrix\n     * @memberof VisualMatrix\n     */\n    constructor (matrix, config = {}) {\n        super(matrix, config);\n\n        this._breakPointer = (matrix[0].length > 0 ? matrix[0][0].length : 0);\n        this._layoutMatrix = combineMatrices([matrix[0] || [], matrix[1] || []], this.config());\n\n        // Create Tree\n        this._tree = {\n            key: ROW_ROOT,\n            values: this.createTree()\n        };\n        this._logicalSpace = this.computeLogicalSpace();\n    }\n\n    /**\n     * Computes the logical space taken by the entire matrixTree\n     *\n     * @return {Object} Logical space taken\n     * @memberof VisualMatrix\n     */\n    computeLogicalSpace () {\n        const matrixTree = this.tree();\n        createMatrixEachLevel(matrixTree, false);\n        return computeLogicalSpace(matrixTree, this.config(), this.maxMeasures());\n    }\n\n    computeViewableSpaces (measures) {\n        const {\n            maxHeights,\n            maxWidths,\n            height\n        } = measures;\n        return this.viewableMatrix.map((matrixInst, i) => {\n            const cellDimOptions = { matrixInst, maxWidths, maxHeights, matrixIndex: i };\n            const { widths, rowHeights, columnWidths } = this.getCellDimensions(cellDimOptions);\n            const heightMeasures = [height, height];\n            const columnMeasures = widths;\n\n            return {\n                rowHeights: {\n                    primary: rowHeights[0],\n                    secondary: rowHeights[1]\n                },\n                columnWidths: {\n                    primary: columnWidths[0],\n                    secondary: columnWidths[1]\n                },\n                height: {\n                    primary: heightMeasures[0],\n                    secondary: heightMeasures[1]\n                },\n                width: {\n                    primary: columnMeasures[0],\n                    secondary: columnMeasures[1]\n                }\n            };\n        });\n    }\n\n    /**\n     *\n     *\n     * @return\n     * @memberof VisualMatrix\n     */\n    removeExtraCells () {\n        const {\n            isTransposed,\n            extraCellLengths\n        } = this.config();\n        const matrix = this._layoutMatrix;\n        const tree = mergeRecursive({}, this.tree());\n        const begCellLen = extraCellLengths[0];\n        const endCellLen = extraCellLengths[1] || Number.NEGATIVE_INFINITY;\n        const layoutMatrix = !isTransposed ? extraCellsRemover(matrix, begCellLen, endCellLen) :\n        matrix.slice(0).map(e => extraCellsRemover(e, begCellLen, endCellLen));\n\n        tree.values = extraCellsRemover(tree.values, begCellLen, endCellLen);\n        tree.matrix = extraCellsRemover(tree.matrix, begCellLen, endCellLen);\n\n        return {\n            tree,\n            layoutMatrix\n        };\n    }\n\n    getPriorityDistribution (measures) {\n        let remainaingAvailWidth;\n        let remainaingWidth;\n        let cWidths = [];\n        let conditions = [];\n        let maxPrioritySpace = 0;\n        const {\n            matrix,\n            width: availableWidth,\n            maxMeasures: maxWidths,\n            maxWidth: currentWidth,\n            height\n        } = measures;\n        const priority = this.config().priority;\n        const primaryMatrixLength = this.primaryMatrix().length ? this.primaryMatrix()[0].length : 0;\n\n        const dist = [];\n\n        remainaingAvailWidth = availableWidth;\n        remainaingWidth = currentWidth;\n\n        if (priority === 2) {\n            conditions = [primaryMatrixLength - 1, primaryMatrixLength];\n            // divider = Math.min(2, matrixLen);\n        } else {\n            conditions = priority === 0 ? [primaryMatrixLength - 1] : [primaryMatrixLength];\n            // divider = Math.min(1, matrixLen);\n        }\n        conditions.forEach((i) => {\n            dist[i] = maxWidths[i];\n            maxPrioritySpace += maxWidths[i];\n            remainaingAvailWidth -= dist[i];\n            remainaingWidth -= dist[i];\n        });\n        matrix[0].forEach((e, i) => {\n            if (conditions.indexOf(i) === -1) {\n                dist[i] = remainaingAvailWidth * (maxWidths[i] / remainaingWidth);\n            }\n        });\n        matrix.forEach(row => row.forEach((col, cIdx) => {\n            if (conditions.indexOf(cIdx) === -1) {\n                col.setAvailableSpace(dist[cIdx], height);\n\n                cWidths[cIdx] = Math.max(cWidths[cIdx] || 0, Math.floor(col.getLogicalSpace().width));\n            } else {\n                cWidths[cIdx] = 0;\n            }\n        }));\n\n        const prioritySpace = availableWidth - cWidths.reduce((t, n) => t + n);\n        if (prioritySpace < 0) {\n            cWidths = cWidths.map(() => 0);\n        } else {\n            conditions.forEach((i) => {\n                cWidths[i] = Math.floor(prioritySpace * (dist[i] / maxPrioritySpace || 1));\n            });\n        }\n        return cWidths;\n    }\n\n    /**\n     * Calculates the depth of the tree that can be viewed\n     *\n     * @param {Array} widthMeasures array of widths\n     * @param {Array} heightMeasures array of heights\n     * @return {number} depth of the tree\n     * @memberof VisualMatrix\n     */\n    calculateDepth (widthMeasures, heightMeasures) {\n        let i;\n        const { height } = this.availableSpace();\n\n        for (i = 0; i < heightMeasures.length; i++) {\n            if (heightMeasures[i] <= height) break;\n        }\n\n        return Math.min(widthMeasures.length - 1, i);\n    }\n\n    /**\n     * Redistributes the provied space to all cells\n     *\n     * @param {*} viewableMatrix current viewport matrix\n     * @param {*} width provied width\n     * @param {*} height provied height\n     * @return {Object} current viewports matrixes with measures\n     * @memberof VisualMatrix\n     */\n    redistributeSpaces (width, height) {\n        let maxHeights = [];\n        let maxWidths = [];\n        const maxMeasures = this.maxMeasures();\n\n        const maxWidth = maxMeasures.reduce((t, n) => {\n            t += n;\n            return t;\n        });\n        const logicalWidths = this.getPriorityDistribution({\n            matrix: this._layoutMatrix,\n            maxWidth,\n            maxMeasures,\n            width,\n            height\n        });\n\n        this.viewableMatrix.forEach((matrixInst) => {\n            const matrix = matrixInst.matrix;\n            const mWidth = 0;\n            const mHeight = 0;\n            const options = { mWidth, mHeight, matrix, width, height, maxHeights, maxWidths, logicalWidths };\n            const measures = this.redistributeViewSpaces(options);\n            maxWidths = measures.maxWidths;\n            maxHeights = measures.maxHeights;\n        });\n        return this.computeViewableSpaces({ height, width, maxHeights, maxWidths });\n    }\n\n    /**\n     * Distibutes the given space row wisely\n     *\n     * @param {Object} measures Redistribution information\n     * @memberof VisualMatrix\n     */\n    redistributeViewSpaces (measures) {\n        let cWidths = [];\n        let rHeights = [];\n        let mHeight = 0;\n        const maxMeasures = this.maxMeasures();\n\n        const {\n            isDistributionEqual,\n            distribution,\n            isTransposed,\n            gutter\n        } = this.config();\n        const { matrix, height, maxHeights, maxWidths, logicalWidths } = measures;\n        mHeight = spaceTakenByColumn(matrix, this._lastLevelKey).height;\n\n        const maxWidth = maxMeasures.reduce((t, n) => {\n            t += n;\n            return t;\n        });\n        measures.maxMeasures = maxMeasures;\n        measures.maxWidth = maxWidth;\n        if (maxWidth > 0) {\n            cWidths = logicalWidths;\n        } else {\n            cWidths = maxMeasures.map(() => 0);\n        }\n        rHeights = getDistributedHeight({\n            matrix,\n            cIdx: this._lastLevelKey,\n            height: mHeight,\n            availableHeight: height,\n            isDistributionEqual,\n            distribution,\n            isTransposed,\n            gutter\n        });\n        if (maxWidths.length > 0) {\n            cWidths = cWidths.map((e, i) => Math.max(e, maxWidths[0][i] || 0));\n        }\n        maxWidths.push(cWidths);\n        for (let x = 0; x < maxWidths.length; x++) {\n            maxWidths[x] = cWidths;\n        }\n        maxHeights.push(rHeights);\n        return { maxWidths, maxHeights };\n    }\n\n    /**\n     * Dispatch the calculated cell dimensions to all the cells\n     *\n     * @param {Object} measures cell dimension information\n     * @return {Object} row and column heights / widths\n     * @memberof VisualMatrix\n     */\n    getCellDimensions (measures) {\n        const {\n            unitMeasures\n        } = this.config();\n        const borderWidth = unitMeasures.border;\n        const { matrixInst, maxWidths, maxHeights, matrixIndex } = measures;\n        const matrix = matrixInst.matrix;\n        const rowHeights = [[0], [0]];\n        const columnWidths = [[0], [0]];\n        const heights = [0, 0];\n        const widths = [0, 0];\n        const breakPointer = this._breakPointer;\n\n        matrix.forEach((row, rIdx) => {\n            row.forEach((cell, cIdx) => {\n                const colHeight = maxHeights[matrixIndex][rIdx] || 0;\n                const colWidth = maxWidths[matrixIndex][cIdx];\n\n                cell.setAvailableSpace(colWidth, colHeight - borderWidth);\n\n                if (rIdx === 0 && cIdx < breakPointer) {\n                    columnWidths[0][cIdx] = colWidth;\n                    widths[0] = (widths[0] || 0) + colWidth;\n                } else if (rIdx === 0 && cIdx >= breakPointer) {\n                    columnWidths[1][cIdx - breakPointer] = colWidth;\n                    widths[1] = (widths[1] || 0) + colWidth;\n                }\n                if (cIdx === this._lastLevelKey) {\n                    rowHeights[0][rIdx] = colHeight;\n                    rowHeights[1][rIdx] = colHeight;\n                }\n            });\n        });\n        return {\n            heights,\n            widths,\n            rowHeights,\n            columnWidths\n        };\n    }\n}\n\n","import { mergeRecursive } from 'muze-utils';\nimport {\n    extraCellsRemover,\n    getDistributedWidth,\n    spaceTakenByRow,\n    createMatrixEachLevel,\n    computeLogicalSpace\n  } from '../utils';\nimport { COLUMN_ROOT } from '../enums/constants';\nimport VisualMatrix from './visual-matrix';\n\n/**\n * This class used to create column / row matrix for GridLayout\n *\n * @class VisualMatrix\n */\nexport default class ColumnVisualMatrix extends VisualMatrix {\n\n    /**\n     *Creates an instance of VisualMatrix.\n     * @param {any} matrix Two set of matrices\n     * @param {any} [config={}] Configuration for VisualMatrix\n     * @memberof VisualMatrix\n     */\n    constructor (matrix, config = {}) {\n        super(matrix, config);\n\n        this._breakPointer = matrix[0].length;\n\n        // Create Tree\n        this._tree = {\n            key: COLUMN_ROOT,\n            values: this.createTree()\n        };\n        this._logicalSpace = this.computeLogicalSpace();\n    }\n\n    /**\n     * Computes the logical space taken by the entire matrixTree\n     *\n     * @return {Object} Logical space taken\n     * @memberof VisualMatrix\n     */\n    computeLogicalSpace () {\n        const matrixTree = this.tree();\n        createMatrixEachLevel(matrixTree, true);\n        return computeLogicalSpace(matrixTree, this.config(), this.maxMeasures());\n    }\n\n    computeViewableSpaces (measures) {\n        const {\n            maxHeights,\n            maxWidths,\n            height,\n            width\n        } = measures;\n\n        return this.viewableMatrix.map((matrixInst, i) => {\n            const cellDimOptions = { matrixInst, maxWidths, maxHeights, matrixIndex: i, height };\n            const {\n                heights,\n                rowHeights,\n                columnWidths\n            } = this.getCellDimensions(cellDimOptions);\n            const heightMeasures = heights;\n            const columnMeasures = [width, width];\n\n            return {\n                rowHeights: {\n                    primary: rowHeights[0],\n                    secondary: rowHeights[1]\n                },\n                columnWidths: {\n                    primary: columnWidths[0],\n                    secondary: columnWidths[1]\n                },\n                height: {\n                    primary: heightMeasures[0],\n                    secondary: heightMeasures[1]\n                },\n                width: {\n                    primary: columnMeasures[0],\n                    secondary: columnMeasures[1]\n                }\n            };\n        });\n    }\n\n    /**\n     *\n     *\n     * @return\n     * @memberof VisualMatrix\n     */\n    removeExtraCells () {\n        const {\n            isTransposed,\n            extraCellLengths\n        } = this.config();\n        const matrix = this._layoutMatrix;\n        const tree = mergeRecursive({}, this.tree());\n        const begCellLen = extraCellLengths[0];\n        const endCellLen = extraCellLengths[1] || Number.NEGATIVE_INFINITY;\n        const layoutMatrix = !isTransposed ? extraCellsRemover(matrix, begCellLen, endCellLen) :\n        matrix.slice(0).map(e => extraCellsRemover(e, begCellLen, endCellLen));\n\n        tree.values = extraCellsRemover(tree.values, begCellLen, endCellLen);\n\n        tree.matrix = tree.matrix.map(e => extraCellsRemover(e, begCellLen, endCellLen));\n\n        return {\n            tree,\n            layoutMatrix\n        };\n    }\n\n    getPriorityDistribution (measures) {\n        const {\n            height,\n            maxHeights\n        } = measures;\n        let remainaingHeight = height;\n        let heightDist = [];\n        let conditions = [];\n        let divider = 2;\n        const priority = this.config().priority;\n        const primaryMatrixLength = this.primaryMatrix().length;\n\n        if (priority === 2) {\n            conditions = [primaryMatrixLength - 1, primaryMatrixLength];\n            divider = 2;\n        } else {\n            conditions = priority === 0 ? [primaryMatrixLength - 1] : [primaryMatrixLength];\n            divider = 1;\n        }\n        maxHeights.forEach((e, i) => {\n            if (conditions.indexOf(i) === -1) {\n                heightDist[i] = e;\n                remainaingHeight -= e;\n            }\n        });\n        if (remainaingHeight < 0) {\n            heightDist = heightDist.map(() => 0);\n        } else {\n            conditions.forEach((e) => {\n                heightDist[e] = Math.min(maxHeights[e], (remainaingHeight) / divider);\n            });\n        }\n        return heightDist;\n    }\n\n    /**\n     * Calculates the depth of the tree that can be viewed\n     *\n     * @param {Array} widthMeasures array of widths\n     * @param {Array} heightMeasures array of heights\n     * @return {number} depth of the tree\n     * @memberof VisualMatrix\n     */\n    calculateDepth (widthMeasures) {\n        let j;\n        const { width } = this.availableSpace();\n\n        for (j = 0; j < widthMeasures.length; j++) {\n            if (widthMeasures[j] <= width) break;\n        }\n        return Math.min(widthMeasures.length - 1, j);\n    }\n\n     /**\n     * Redistributes the provied space to all cells\n     *\n     * @param {*} viewableMatrix current viewport matrix\n     * @param {*} width provied width\n     * @param {*} height provied height\n     * @return {Object} current viewports matrixes with measures\n     * @memberof VisualMatrix\n     */\n    redistributeSpaces (width, height) {\n        let maxHeights = [];\n        let maxWidths = [];\n\n        this.viewableMatrix.forEach((matrixInst) => {\n            const matrix = matrixInst.matrix;\n            const mWidth = 0;\n            const mHeight = 0;\n            const options = { mWidth, mHeight, matrix, width, height, maxHeights, maxWidths };\n            const maxMeasures = this.redistributeViewSpaces(options);\n            maxWidths = maxMeasures.maxWidths;\n            maxHeights = maxMeasures.maxHeights;\n        });\n\n        return this.computeViewableSpaces({ height, width, maxHeights, maxWidths });\n    }\n\n    /**\n     * Distibutes the given space column wisely\n     *\n     * @param {Object} measures Redistribution information\n     * @memberof VisualMatrix\n     */\n    redistributeViewSpaces (measures) {\n        let rHeights = [];\n        const {\n            matrix,\n            width,\n            maxHeights,\n            maxWidths\n        } = measures;\n        const borderWidth = this.config().unitMeasures.border;\n\n        const mWidth = spaceTakenByRow(matrix[this._lastLevelKey]).width;\n        const cWidths = getDistributedWidth({\n            row: matrix[this._lastLevelKey],\n            width: mWidth,\n            availableWidth: width\n        }, this.config());\n\n        matrix.forEach((row, rIdx) => row.forEach((col, cIdx) => {\n            const oldLogicalSpace = col.getLogicalSpace();\n\n            col.setAvailableSpace(cWidths[cIdx] - borderWidth, oldLogicalSpace.height);\n            rHeights[rIdx] = Math.max(rHeights[rIdx] || 0, Math.floor(col.getLogicalSpace().height));\n        }));\n        if (maxHeights.length > 0) {\n            rHeights = rHeights.map((e, i) => Math.max(e, maxHeights[0][i]));\n        }\n        maxHeights.push(rHeights);\n        for (let x = 0; x < maxHeights.length; x++) {\n            maxHeights[x] = rHeights;\n        }\n        maxWidths.push(cWidths);\n        return { maxHeights, maxWidths };\n    }\n\n    /**\n     * Dispatch the calculated cell dimensions to all the cells\n     *\n     * @param {Object} measures cell dimension information\n     * @return {Object} row and column heights / widths\n     * @memberof VisualMatrix\n     */\n    getCellDimensions (measures) {\n        const {\n            unitMeasures\n        } = this.config();\n        const borderWidth = unitMeasures.border;\n        const { matrixInst, height, maxWidths, maxHeights, matrixIndex } = measures;\n        const matrix = matrixInst.matrix;\n        const rowHeights = [[0], [0]];\n        const columnWidths = [[0], [0]];\n        const heights = [0, 0];\n        const widths = [0, 0];\n        const breakPointer = this._breakPointer;\n\n        const heightDistribution = this.getPriorityDistribution({ height, maxHeights: maxHeights[0] || [] });\n\n        matrix.forEach((row, rIdx) => {\n            row.forEach((cell, cIdx) => {\n                const colHeight = heightDistribution[rIdx] || 0;\n                const colWidth = maxWidths[matrixIndex][cIdx];\n\n                cell.setAvailableSpace(colWidth - borderWidth, colHeight);\n\n                if (cIdx === 0 && rIdx < breakPointer) {\n                    rowHeights[0][rIdx] = colHeight;\n                    heights[0] = (heights[0] || 0) + colHeight;\n                } else if (cIdx === 0 && rIdx >= breakPointer) {\n                    rowHeights[1][rIdx - breakPointer] = colHeight;\n                    heights[1] = (heights[1] || 0) + colHeight;\n                }\n                if (rIdx === this._lastLevelKey) {\n                    columnWidths[0][cIdx] = colWidth;\n                    columnWidths[1][cIdx] = colWidth;\n                }\n            });\n        });\n        return {\n            heights,\n            widths,\n            rowHeights,\n            columnWidths\n        };\n    }\n}\n\n","import {\n    HEIGHT, WIDTH, COLUMN, ROW, HORIZONTAL, VERTICAL, HOLISTIC,\n    MAX_WIDTH_AVAIL_FOR_COL_MATRIX, COLUMN_MATRIX, MAX_HEIGHT_AVAIL_FOR_ROW_MATRIX, ROW_MATRIX, SCROLL\n} from '../enums/constants';\n\n/**\n * Gets measurement for an instance of visual matrix\n *\n * @param {Array} matrix instance of visual matrix\n * @param {string} type height/width\n * @return {Object} Logical height/width of the matrix\n */\nexport function getMatrixMeasurement (matrix, type) {\n    if (matrix) {\n        return matrix.getLogicalSpace()[type];\n    }\n    return 0;\n}\n\n/**\n * Sets available space for an instance of visual matrix\n *\n * @param {Array} matrix instance of visual matrix\n * @param {string} type height/width\n * @param {number} value Value of measurement\n */\nexport function setMatrixMeasurement (matrix, type, value) {\n    if (matrix) {\n        const spaces = matrix.getLogicalSpace();\n        if (value && spaces[type] !== value) {\n            type === HEIGHT ? matrix.setAvailableSpace(spaces.width, value) :\n                matrix.setAvailableSpace(value, spaces.height);\n        }\n    }\n}\n\nconst setAvailableSpace = (matrix, widths, heights) => {\n    matrix.forEach((row, rIdx) => {\n        row.forEach((placeholder, cIdx) => {\n            placeholder.setAvailableSpace(widths[cIdx], heights[rIdx]);\n        });\n    });\n};\n\nconst setViewSpaces = (layout, pointerType, viewSpaces) => {\n    let pointer = layout.config()[`${pointerType}Pointer`];\n    if (viewSpaces.length - 1 < pointer) {\n        pointer = 0;\n        layout.config({ [`${pointerType}Pointer`]: pointer });\n    }\n    return pointer;\n};\n\nconst paginationDetailsMap = {\n    column: {\n        maxMeasure: MAX_WIDTH_AVAIL_FOR_COL_MATRIX,\n        matrix: COLUMN_MATRIX,\n        measureType: WIDTH,\n        scrollType: HORIZONTAL\n    },\n    row: {\n        maxMeasure: MAX_HEIGHT_AVAIL_FOR_ROW_MATRIX,\n        matrix: ROW_MATRIX,\n        measureType: HEIGHT,\n        scrollType: VERTICAL\n    }\n};\n\n/**\n * This method provides the required width/height in the different pagination stages.\n * If the pagination is holistic, then only the max width/height will be provided for layouting\n * If scroll is enabled, then the entire width/height shall be provided for layouting\n * Note: width is required for scrolling the columns while height is required for scrolling rows\n *\n *\n * @param {Layout} layout Layout instance required for configuration details\n * @param {Object} measureDetails different measure details for row/column\n * @param {number} maxMeasure maximum width/height present for column/row respectively\n * @return {number} Provides the width/height based on which further calculation can occur\n */\nconst getMatrixMeasureForPagination = (layout, measureDetails, maxMeasure, buffer) => {\n    const {\n        pagination\n    } = layout.config();\n    const {\n        matrix,\n        measureType,\n        scrollType\n    } = measureDetails;\n\n    switch (pagination) {\n    case HOLISTIC:\n        return maxMeasure;\n    default: {\n        const actualMeasure = getMatrixMeasurement(layout[matrix](), measureType) + buffer;\n\n        if (actualMeasure > maxMeasure) {\n            layout.scrollInfo({ [scrollType]: true });\n        }\n        return Math.max(maxMeasure, actualMeasure);\n    }\n    }\n};\n\n/**\n * This method uses the getMatrixMeasureForPagination function to calculate maximum measure\n * depending on the layouting algorithm used\n *\n *\n * @param {Layout} layout Layout instance required for configuration details\n * @param {string} matrixType row/column\n * @param {number} relatedMaxMeasure maximum width/height present for column/row respectively\n * @return {number} Provides the width/height based on which further calculation can occur\n */\nconst paginationMeasureGetter = (layout, matrixType, relatedMaxMeasure, buffer) =>\n    getMatrixMeasureForPagination(layout, paginationDetailsMap[matrixType], relatedMaxMeasure, buffer);\n\nconst getMatrixWidthDetails = (layout) => {\n    const rowMatrix = layout.rowMatrix();\n    const {\n        width\n    } = layout.measurement();\n    const {\n        border,\n        buffer\n    } = layout.config();\n\n    // Border adjustment for each cell in the central matrix\n    const borderWidth = border.width;\n\n    // Get width of row matrix\n    const rowMatrixWidth = getMatrixMeasurement(rowMatrix, WIDTH);\n\n    // Get maximum width allowed for the row matrix\n    const maxRowMatrixWidth = Math.min(rowMatrixWidth + buffer, width / 2);\n\n    // Get maximum width available for the column matrix\n    const maxWidthAvailableForColumnMatrix = width - maxRowMatrixWidth - borderWidth;\n\n    // Set width for column matrix\n    const columnMatrixWidth = paginationMeasureGetter(layout, COLUMN, maxWidthAvailableForColumnMatrix, 0);\n\n    return {\n        rowMatrixWidth,\n        maxRowMatrixWidth,\n        columnMatrixWidth,\n        maxWidthAvailableForColumnMatrix\n    };\n};\n\nconst getHeightRequiredByColMatrix = (layout, columnMatrixWidth) => {\n    const {\n        height\n    } = layout.measurement();\n    const columnMatrix = layout.columnMatrix();\n\n    // Get maximum allowed height for colum matrix\n    const maxColumnMatrixHeight = Math.min(columnMatrix.getLogicalSpace().height, height / 2);\n\n    // Set the computed width and max height to column matrix to determine the actual height\n    // that will be taken by the column matrix\n    columnMatrix.setAvailableSpace(columnMatrixWidth, maxColumnMatrixHeight);\n\n    // Get the set of pages column view\n    const columnViewPages = columnMatrix.getViewableSpaces();\n\n    // Figuring out total space needed by current view space\n    const columnViewSpace = columnViewPages[layout.config().columnPointer];\n\n    // Getting height of column matrix\n    const columnMatrixHeight = columnViewSpace.height.primary + columnViewSpace.height.secondary;\n\n    return {\n        columnMatrixHeight,\n        maxColumnMatrixHeight\n    };\n};\n\nconst getMatrixHeightDetails = (layout, columnMatrixWidth) => {\n    const {\n        height\n    } = layout.measurement();\n    const {\n        buffer\n    } = layout.config();\n\n    // Get actual height required by column matrix\n    const { columnMatrixHeight, maxColumnMatrixHeight } = getHeightRequiredByColMatrix(layout, columnMatrixWidth);\n\n    // Based on column height, compute max height available for row matrix\n    const maxHeightAvailableForRowMatrix = height - Math.min(maxColumnMatrixHeight, columnMatrixHeight);\n\n    // Get height for row matrix\n    const rowMatrixHeight = paginationMeasureGetter(layout, ROW, maxHeightAvailableForRowMatrix, buffer);\n\n    return {\n        columnMatrixHeight,\n        maxColumnMatrixHeight,\n        rowMatrixHeight,\n        maxHeightAvailableForRowMatrix\n    };\n};\n\nconst setValueMatrixMeasurements = (layout, rowViewableSpaces, columnViewableSpaces) => {\n    const centerMatrix = layout.centerMatrix();\n\n    const {\n        border\n    } = layout.config();\n    const matrices = layout.matrices();\n    const {\n        top,\n        bottom\n    } = matrices;\n\n    // Border adjustment for each cell in the central matrix\n    const borderWidth = border.width;\n\n    // Get the heights for each cell in the row matrix\n    const rowHeights = [].concat(...rowViewableSpaces.map(e => e.rowHeights.primary));\n\n    // Get the widths for each of the row matrix cells(primary and secondary)\n    const rowWidthsPrimary = [].concat(...rowViewableSpaces.map(e => e.columnWidths.primary));\n    const rowWidthsSecondary = [].concat(...rowViewableSpaces.map(e => e.columnWidths.secondary));\n\n    // Get the widths for each cell in the column matrix\n    const columnWidths = [].concat(...columnViewableSpaces.map(e => e.columnWidths.primary));\n\n    // Get the widths for each of the column matrix cells(primary and secondary)\n    const columnHeightsPrimary = columnViewableSpaces[0].rowHeights.primary;\n    const columnHeightsSecondary = [].concat(...columnViewableSpaces.map(e => e.rowHeights.secondary));\n\n    // Setting the available space for each cell in the centre matrix computed throught the row and\n    // column matrices\n    centerMatrix.forEach((matrix, rIdx) => {\n        matrix.forEach((placeholder, cIdx) => {\n            placeholder.setAvailableSpace(columnWidths[cIdx] - borderWidth, rowHeights[rIdx] - borderWidth);\n        });\n    });\n\n    // Set the heights and widths for the corner matrices namely:\n    // TOP_LEFT\n    setAvailableSpace(top[0], rowWidthsPrimary, columnHeightsPrimary);\n    // TOP_RIGHT\n    setAvailableSpace(top[2], rowWidthsSecondary, columnHeightsPrimary);\n    // BOTTOM_LEFT\n    setAvailableSpace(bottom[0], rowWidthsPrimary, columnHeightsSecondary);\n     // BOTTOM_RIGHT\n    setAvailableSpace(bottom[2], rowWidthsSecondary, columnHeightsSecondary);\n};\n\nconst bufferCondition = {\n    isScroll: true,\n    pagination: SCROLL\n};\n\nconst getBufferFromCondition = (layout, type) => {\n    const scrollInfo = layout.scrollInfo();\n    const {\n        pagination\n    } = layout.config();\n\n    const currentBufferType = {\n        pagination,\n        isScroll: scrollInfo[type]\n    };\n\n    return Object.keys(bufferCondition).every(e => bufferCondition[e] === currentBufferType[e]);\n};\n\nconst getActualBufferFromConfig = (layout) => {\n    const {\n        buffer\n    } = layout.config();\n    const [horizontalBuffer, verticalBuffer] = [HORIZONTAL, VERTICAL].map((type) => {\n        if (getBufferFromCondition(layout, type)) {\n            return buffer;\n        }\n        return 0;\n    });\n\n    return {\n        horizontalBuffer,\n        verticalBuffer\n    };\n};\n/**\n * Computes the measurements of space for all matrices in the\n * layout\n *\n * @param {Object} layout Instance of grid layout\n * @return {Object} set of measurements for the layout\n */\nexport const computeLayoutMeasurements = (layout) => {\n    const rowMatrix = layout.rowMatrix();\n    const columnMatrix = layout.columnMatrix();\n\n    // Compute the widths of the row and column matrices\n    const {\n        rowMatrixWidth,\n        maxRowMatrixWidth,\n        maxWidthAvailableForColumnMatrix,\n        columnMatrixWidth\n    } = getMatrixWidthDetails(layout);\n\n    // Compute the heights of the row and column matrices\n    const {\n        columnMatrixHeight,\n        rowMatrixHeight,\n        maxHeightAvailableForRowMatrix\n    } = getMatrixHeightDetails(layout, columnMatrixWidth);\n\n    const {\n        horizontalBuffer,\n        verticalBuffer\n    } = getActualBufferFromConfig(layout);\n    rowMatrix.setAvailableSpace(maxRowMatrixWidth - verticalBuffer, rowMatrixHeight - horizontalBuffer);\n\n    // Get row and columns viewable spaces\n    const rowViewableSpaces = rowMatrix.getViewableSpaces();\n    const columnViewableSpaces = columnMatrix.getViewableSpaces();\n\n    // Set view spaces for row and columns\n    setViewSpaces(layout, ROW, rowViewableSpaces);\n    setViewSpaces(layout, COLUMN, columnViewableSpaces);\n\n    // Set measures for each cell of the value matrix\n    setValueMatrixMeasurements(layout, rowViewableSpaces, columnViewableSpaces);\n\n    return {\n        rowMatrixHeight: rowMatrixHeight - horizontalBuffer,\n        rowMatrixWidth: rowMatrixWidth - verticalBuffer,\n        maxHeightAvailableForRowMatrix: maxHeightAvailableForRowMatrix - horizontalBuffer,\n\n        columnMatrixHeight,\n        columnMatrixWidth,\n        maxWidthAvailableForColumnMatrix\n    };\n};\n","/**\n * Gets view matrices based on current pointers for row and column\n *\n * @param {Object} layout instance of layout\n * @param {number} rowPointer current row pointer\n * @param {number} columnPointer current column pointer\n * @return {Object} returns the view matrix and its relevant information\n */\nexport const getViewMatrices = (layout, rowPointer, columnPointer) => {\n    const rowMatrix = layout.rowMatrix();\n    const columnMatrix = layout.columnMatrix();\n    const centerMatrix = layout.centerMatrix();\n    const matrices = layout.matrices();\n    const rowMatrices = rowMatrix.getViewableMatrices();\n    const columnMatrices = columnMatrix.getViewableMatrices();\n    const centralMatrixPointer = {\n        row: 0,\n        column: 0\n    };\n\n    for (let i = rowPointer - 1; i >= 0; i--) {\n        const length = Math.max(rowMatrices[i].primaryMatrix.length,\n            rowMatrices[i].secondaryMatrix.length);\n        centralMatrixPointer.row += length;\n    }\n     /* istanbul ignore next */\n    for (let i = columnPointer - 1; i >= 0; i--) {\n        const matrix = columnMatrices[i];\n        const { primaryMatrix, secondaryMatrix } = matrix;\n        const length = Math.max(primaryMatrix[0] ? primaryMatrix[0].length : 0,\n            secondaryMatrix[0] ? secondaryMatrix[0].length : 0);\n        centralMatrixPointer.column += length;\n    }\n\n    matrices.top[1] = columnMatrices[columnPointer].primaryMatrix;\n    matrices.bottom[1] = columnMatrices[columnPointer].secondaryMatrix;\n\n    matrices.center[0] = rowMatrices[rowPointer].primaryMatrix;\n    matrices.center[2] = rowMatrices[rowPointer].secondaryMatrix;\n\n    const rowMatrixLen = Math.max(matrices.center[0].length, matrices.center[2].length);\n     /* istanbul ignore next */\n    const columnMatrixLen = Math.max(matrices.top[1][0] ? matrices.top[1][0].length : 0, matrices.bottom[1][0] ?\n            matrices.bottom[1][0].length : 0);\n    matrices.center[1] = centerMatrix.slice(centralMatrixPointer.row, centralMatrixPointer.row + rowMatrixLen)\n        .map(matrix => matrix.slice(centralMatrixPointer.column, centralMatrixPointer.column + columnMatrixLen));\n\n    return {\n        matrices,\n        rowPages: rowMatrices.length,\n        columnPages: columnMatrices.length\n    };\n};\n\nconst measureSum = measureArr => measureArr.reduce((total, measure) => total + measure, 0);\n/**\n * Returns measurements of the cells of the current matrix\n *\n * @param {Object} layout instance of layout\n * @return {Object} returns the measurements for current view matrix\n */\nexport const getViewMeasurements = (layout, maxRowHeight, maxColWidth) => {\n    const rowMatrix = layout.rowMatrix();\n    const columnMatrix = layout.columnMatrix();\n    const {\n        columnPointer,\n        rowPointer\n    } = layout.config();\n\n    const rowSpaces = rowMatrix.getViewableSpaces()[rowPointer];\n    const colSpaces = columnMatrix.getViewableSpaces()[columnPointer];\n\n    const {\n        rowHeights,\n        width: rowMatrixWidth\n    } = rowSpaces;\n    const {\n        columnWidths,\n        height: columnMatrixHeight\n    } = colSpaces;\n\n    const { primary: leftWidth, secondary: rightWidth } = rowMatrixWidth;\n    const { primary: topHeight, secondary: bottomHeight } = columnMatrixHeight;\n\n    const centerHeight = measureSum(rowHeights.primary);\n    const centerWidth = measureSum(columnWidths.primary);\n    const viewWidth = [leftWidth, Math.min(centerWidth, maxColWidth), rightWidth];\n    const viewHeight = [topHeight, Math.min(centerHeight, maxRowHeight), bottomHeight];\n\n    return {\n        viewWidth,\n        viewHeight,\n        actualCenterMeasures: {\n            height: centerHeight,\n            width: centerWidth\n        },\n        totalMeasures: {\n            width: measureSum(viewWidth),\n            height: measureSum(viewHeight)\n        },\n        unitHeights: rowHeights,\n        unitWidths: columnWidths\n    };\n};\n","/**\n * This file declares a table that can be extended to create a Datagrid, crosstab\n * and man other visualzations that require a tabular structure.\n */\n\nimport { getUniqueId, mergeRecursive } from 'muze-utils';\nimport GenericLayout from '../generic-layout';\nimport { DEFAULT_CONFIGURATION, DEFAULT_MEASUREMENTS } from './defaults';\nimport { generateVisualMatrices } from './layout-helper';\nimport { computeLayoutMeasurements } from './computations';\nimport { getViewMeasurements, getViewMatrices } from './view-info-getter';\n/**\n * This class is used to create a tabular structure that\n * can house charts and values.\n *\n * @class GridLayout\n */\nexport default class GridLayout extends GenericLayout {\n\n    /**\n     * Creates an instance of TableLayout.\n     * @param {HTMLElement} matrices Set of upto 9 matrices containing the cells to be rendered\n     * @param {HTMLElement} mountPoint DOM element/d3 selection where the layout is to be mounted\n     * @param {Object} measurement The dimensions of the layout\n     * @param {Object} config external configurations.\n     * @memberof GenericLayout\n     */\n    constructor (matrices, mountPoint, measurement, config) {\n        super(mountPoint, measurement, config);\n        this.matrices(matrices);\n        this.config(this.constructor.defaultConfig());\n        this._layoutId = getUniqueId();\n        this._viewInfo = this.constructor.defaultViewInfo();\n        this._scrollInfo = { horizontal: false, vertical: false };\n    }\n\n    static defaultViewInfo () {\n        return Object.assign({}, {\n            layoutDimensions: {\n                border: this.defaultConfig().border,\n                viewHeight: [0, 0, 0],\n                viewWidth: [0, 0, 0]\n            },\n            viewMatricesInfo: {\n                columnPages: 0,\n                rowPages: 0,\n                matrices: { top: [], center: [], bottom: [] }\n            }\n        });\n    }\n\n    /**\n     * Returns initial set of measurements for the grid layout\n     *\n     * @static\n     * @return {Object} Returns initial set of measurements\n     * @memberof GridLayout\n     */\n    static defaultMeasurement () {\n        return DEFAULT_MEASUREMENTS;\n    }\n\n    /**\n     * Returns initialconfiguration for grid layout\n     *\n     * @static\n     * @return {Object} Returns initial configuration for grid layout\n     * @memberof GridLayout\n     */\n    static defaultConfig () {\n        return DEFAULT_CONFIGURATION;\n    }\n\n    /**\n     * This function is used to return an instance of GridLayout\n     *\n     * @return {GridLayout} Instance of grid layout.\n     * @static\n     * @memberof GridLayout\n     */\n    static create () {\n        return new GridLayout(null, null, this.defaultMeasurement(), this.defaultConfig());\n    }\n\n    /**\n     * Sets/Gets the matrices for the layout\n     *\n     * @param {Array} matrices Set of matrices\n     * @return {Object} Getter/Setter\n     * @memberof GridLayout\n     */\n    matrices (matrices) {\n        if (matrices) {\n            this._matrices = generateVisualMatrices(this, matrices);\n            return this;\n        }\n        return super.matrices(matrices);\n    }\n\n    /**\n     * Triggers the computations for the layout based on the matrices available\n     * This causes a reflow in the entire layout system.\n     *\n     * @return {Object} Layout instance\n     * @memberof GridLayout\n     */\n    triggerReflow () {\n        this.scrollInfo({ horizontal: false, vertical: false });\n        const {\n            maxHeightAvailableForRowMatrix,\n            maxWidthAvailableForColumnMatrix\n        } = computeLayoutMeasurements(this);\n\n        this.setViewInformation(maxHeightAvailableForRowMatrix, maxWidthAvailableForColumnMatrix);\n        return this;\n    }\n\n    gotoPage (type, pageNumber) {\n        const pageType = type.toLowerCase();\n        const { viewMatricesInfo } = this.viewInfo();\n        const totalPages = viewMatricesInfo[`${pageType}Pages`];\n        const pointer = Math.min(Math.max(1, pageNumber), totalPages);\n        this.config({\n            [`${pageType}Pointer`]: pointer - 1\n        });\n        this.setViewInformation();\n        this.renderGrid();\n        return this;\n    }\n\n    pages (type) {\n        const { viewMatricesInfo } = this.viewInfo();\n        const pageType = type.toLowerCase();\n        return {\n            totalPages: viewMatricesInfo[`${pageType}Pages`],\n            currentPage: this.config()[`${pageType}Pointer`] + 1\n        };\n    }\n\n    viewInfo (...viewInfo) {\n        if (viewInfo.length) {\n            this._viewInfo = viewInfo[0];\n            return this;\n        }\n        return this._viewInfo;\n    }\n\n    scrollInfo (...scrollInfo) {\n        if (scrollInfo.length) {\n            this._scrollInfo = mergeRecursive(this._scrollInfo, scrollInfo[0]);\n            return this;\n        }\n        return this._scrollInfo;\n    }\n\n    /**\n     *\n     *\n     * @returns\n     * @memberof GridLayout\n     */\n    setViewInformation (maxRowHeight, maxColWidth) {\n        const {\n            rowPointer,\n            columnPointer,\n            border\n        } = this.config();\n        const viewMatricesInfo = getViewMatrices(this, rowPointer, columnPointer);\n        const layoutDimensions = getViewMeasurements(this, maxRowHeight, maxColWidth);\n        layoutDimensions.border = border;\n        this.viewInfo({\n            viewMatricesInfo,\n            layoutDimensions\n        });\n        return this;\n    }\n}\n","import RowMatrix from '../visual-matrix/row-matrix';\nimport ColumnMatrix from '../visual-matrix/column-matrix';\n\nexport const generateVisualMatrices = (context, matrices) => {\n    // Set of matrices for layout is generated starting with the left matrix\n    let leftMatrix = [];\n    let rightMatrix = [];\n    let topMatrix = [];\n    let bottomMatrix = [];\n    let begColCells;\n    let endColCells;\n    const {\n        isRowSizeEqual,\n        isColumnSizeEqual,\n        gutterSpace,\n        distribution,\n        border,\n        breakPage,\n        priority\n    } = context.config();\n    const {\n        minUnitHeight,\n        minUnitWidth\n    } = context.measurement();\n    const { top, center, bottom } = matrices;\n    const [topLeft, topColumns, topRight] = top;\n    const [leftRows, valueMatrix, rightRows] = center;\n    const [bottomLeft, bottomColumns, bottomRight] = bottom;\n\n    if (leftRows.length > 0) {\n        // If no left matrix is present, context will be empty\n        leftMatrix = [...topLeft, ...leftRows, ...bottomLeft];\n    }\n    if (rightRows.length > 0) {\n        // If no right matrix is present, context will be empty\n        rightMatrix = [...topRight, ...rightRows, ...bottomRight];\n    }\n    if (topColumns.length > 0 && topColumns[0].length > 0) {\n        // If no top matrix is present, context will be empty\n        topMatrix = topColumns.map((d, i) => [...topLeft[i], ...d, ...topRight[i]]);\n    }\n    if (bottomColumns.length > 0 && bottomColumns[0].length > 0) {\n        // If no bottom matrix is present, context will be empty\n        bottomMatrix = bottomColumns.map((d, i) => [...bottomLeft[i], ...d, ...bottomRight[i]]);\n    }\n\n    context.rowMatrix(new RowMatrix([leftMatrix, rightMatrix], {\n        isDistributionEqual: isRowSizeEqual,\n        distribution: distribution.rows,\n        gutter: gutterSpace.rows,\n        unitMeasures: {\n            width: minUnitWidth,\n            height: minUnitHeight,\n            border: border.width\n        },\n        priority: priority.row,\n        breakPage: breakPage.rows.map(e => e + Math.max(topLeft.length, topRight.length)),\n        extraCellLengths: [topLeft.length, bottomLeft.length]\n    }));\n\n    if (topLeft.length > 0) {\n        begColCells = topLeft[0].length;\n    } else {\n        begColCells = bottomLeft.length > 0 ? bottomLeft[0].length : 0;\n    }\n\n    if (topRight.length > 0) {\n        endColCells = topRight[0].length;\n    } else {\n        endColCells = bottomRight.length > 0 ? bottomRight[0].length : 0;\n    }\n\n    context.columnMatrix(new ColumnMatrix([topMatrix, bottomMatrix], {\n        isDistributionEqual: isColumnSizeEqual,\n        distribution: distribution.columns,\n        gutter: gutterSpace.columns,\n        isTransposed: true,\n        unitMeasures: {\n            width: minUnitWidth,\n            height: minUnitHeight,\n            border: border.width\n        },\n        priority: priority.col,\n        breakPage: breakPage.columns,\n        extraCellLengths: [begColCells, endColCells]\n    }));\n    context.centerMatrix(valueMatrix);\n\n    return matrices;\n};\n","import {\n    TOP, BOTTOM, LEFT, RIGHT, CENTER, BLANK_BORDERS, COLUMN, ROW,\n    VIEW_INDEX, ROW_MATRIX_INDEX, COLUMN_MATRIX_INDEX, MIDDLE, NO_BORDERS\n} from '../enums/constants';\n\nconst borderMap = {\n    [`${TOP}-${LEFT}`]: NO_BORDERS,\n    [`${TOP}-${MIDDLE}`]: COLUMN,\n    [`${TOP}-${RIGHT}`]: NO_BORDERS,\n    [`${CENTER}-${LEFT}`]: ROW,\n    [`${CENTER}-${MIDDLE}`]: CENTER,\n    [`${CENTER}-${RIGHT}`]: ROW,\n    [`${BOTTOM}-${LEFT}`]: NO_BORDERS,\n    [`${BOTTOM}-${MIDDLE}`]: COLUMN,\n    [`${BOTTOM}-${RIGHT}`]: NO_BORDERS\n};\n\nconst applySpecificBorder = (cells, color, type, style) => {\n    cells.style(`border-${type}`, `${style} ${color}`);\n};\n\nconst specificBorderApplier = (borderTypes, showBorders, cells, borderInfo) => {\n    const {\n        color,\n        width,\n        style\n    } = borderInfo;\n    const borderStyle = `${width}px ${style}`;\n\n    borderTypes.forEach((borderType) => {\n        applySpecificBorder(cells, showBorders[borderType] ? color : BLANK_BORDERS, borderType, borderStyle);\n    });\n};\n\nconst borderApplier = (cells, borderInfo) => {\n    const {\n       showRowBorders,\n      showColBorders,\n      showValueBorders\n  } = borderInfo;\n    return {\n        row: () => specificBorderApplier([TOP, BOTTOM], showRowBorders, cells, borderInfo),\n        column: () => specificBorderApplier([LEFT, RIGHT], showColBorders, cells, borderInfo),\n        center: () => specificBorderApplier([LEFT, RIGHT, TOP, BOTTOM], showValueBorders, cells, borderInfo)\n    };\n};\n\nexport const applyBorders = (cells, border, row, column) => {\n    const borderApplierFn = borderApplier(cells, border);\n    const borderMapVal = borderMap[`${ROW_MATRIX_INDEX[VIEW_INDEX[row]]}-${COLUMN_MATRIX_INDEX[column]}`];\n    if (borderMapVal) {\n        borderApplierFn[borderMapVal]();\n    }\n};\n","import { selectElement } from 'muze-utils';\nimport {\n     TOP, BOTTOM, ROW_SPAN, COL_SPAN, CENTER, ROW, COLUMN\n} from '../enums/constants';\n\nconst orderMaker = arr => Array.from(Array(arr.length).keys());\n\nconst nestByStack = (stack, updateArr, optionalParams = {}) => {\n    let {\n        order,\n        keyFn\n    } = optionalParams;\n    const arr = updateArr.slice();\n    const currStack = stack.slice();\n    const prevStack = currStack.slice();\n    // Order in which element are to be checked for nesting, default normal looping\n    // Order is always in the order of nest, i.e., left to right\n    order = order || Array.from(Array(arr.length).keys());\n\n    // Key function, if array of objects\n    keyFn = keyFn || (v => v);\n\n    // Return same array if stack is empty\n    if (currStack.length === 0) {\n        const newArr = [];\n        order.forEach((e) => {\n            newArr.push(arr[e]);\n        });\n        return { prevStack, currStack: arr, arr: newArr };\n    }\n\n    let arrVal = '';\n    let stackVal = '';\n    const newArr = [];\n\n    // Loop in order\n    for (let i = order.length - 1; i >= 0; i--) {\n        // Get current element index from the order given\n        const currElemIndex = order[i];\n\n        // Crete a hashmap for the hierarchy by joining strings of the array for both stack and input array\n        arrVal += keyFn(arr[currElemIndex]);\n        stackVal += keyFn(currStack[currElemIndex]);\n\n        // If the current value and value in stack is same, convert it to null\n        if (arrVal === stackVal) {\n            newArr[currElemIndex] = null;\n        } else {\n            stackVal = '';\n            // Loop from the current index in order to the last element in order to change the\n            // whole hierarchy\n            for (let j = i; j < order.length; j++) {\n                const newElem = order[j];\n                const arrElem = arr[newElem];\n\n                newArr[newElem] = arrElem;\n\n                // Reset stack to new stack\n                currStack[newElem] = arrElem;\n                stackVal = arrVal;\n            }\n        }\n    }\n    const returnArr = [];\n    order.forEach((e) => {\n        returnArr.push(newArr[e]);\n    });\n    return { prevStack, currStack, arr: returnArr };\n};\n\nconst spanCalculator = (colData, colIdx, matrix, rIdx) => {\n    // if data is not header cell then rowspan\n    // has to be 1\n    if (!colData) {\n        return () => 1;\n    }\n\n    const conditions = {\n        row: count => matrix[rIdx + count] && matrix[rIdx + count][colIdx],\n        column: count => matrix[rIdx][colIdx + count]\n    };\n\n    return (type) => {\n        let count = 1;\n        let isNull = false;\n\n        while (!isNull) {\n            if (conditions[type](count) === null) {\n                count += 1;\n            } else {\n                isNull = true;\n            }\n        }\n        return count;\n    };\n};\n\nconst maskCreator = (matrix, order) => ({\n    row: () => {\n        let stack = [];\n        return matrix.map((e) => {\n            const {\n                    currStack,\n                    arr\n                } = nestByStack(stack, e, { keyFn: val => val.valueOf(), order });\n\n            stack = currStack;\n            return arr;\n        });\n    },\n    column: () => {\n        let stack = [];\n        const viewMatrix = [];\n        matrix.length && matrix[0].forEach((cell, colIndex) => {\n            const hierarchy = [];\n            matrix.forEach((row) => {\n                hierarchy.push(row[colIndex]);\n            });\n            const {\n                    currStack,\n                    arr\n                } = nestByStack(stack, hierarchy, { keyFn: val => val.valueOf(), order });\n            stack = currStack;\n\n            matrix.forEach((row, rowIndex) => {\n                viewMatrix[rowIndex] = viewMatrix[rowIndex] || [];\n                viewMatrix[rowIndex][colIndex] = arr[rowIndex];\n            });\n        });\n        return viewMatrix;\n    }\n});\n\nconst spanGenerator = viewMatrix => ({\n    row: () => {\n        const spans = [];\n        viewMatrix.forEach((row, ridx) => {\n            spans[ridx] = spans[ridx] || [];\n            row.forEach((col, i) => {\n                if (viewMatrix[ridx][i]) {\n                    const currSpan = spanCalculator(col, i, viewMatrix, ridx)('row');\n                    currSpan && spans[ridx].push(currSpan);\n                }\n            });\n        });\n        return spans;\n    },\n    column: () => viewMatrix.map((row, ridx) => row.map((col, i) => spanCalculator(col, i, viewMatrix, ridx)('column'))\n                    .filter(col => col !== 1))\n});\n\nconst getOrder = isReverse => ({\n    row: (matrix) => {\n        if (isReverse) {\n            return orderMaker(matrix[0]).reverse();\n        }\n        return orderMaker(matrix[0]);\n    },\n    column: (matrix) => {\n        if (isReverse) {\n            return orderMaker(matrix).reverse();\n        }\n        return orderMaker(matrix);\n    }\n});\n\nconst matrixSpanGeneratorMap = {\n    [`${TOP}-1`]: {\n        orderGetter: getOrder(false)[COLUMN],\n        viewMatrixMaker: (...params) => maskCreator(...params)[COLUMN],\n        spanMaker: (...params) => spanGenerator(...params)[COLUMN]\n    },\n    [`${BOTTOM}-1`]: {\n        orderGetter: getOrder(true)[COLUMN],\n        viewMatrixMaker: (...params) => maskCreator(...params)[COLUMN],\n        spanMaker: (...params) => spanGenerator(...params)[COLUMN]\n    },\n    [`${CENTER}-0`]: {\n        orderGetter: getOrder(false)[ROW],\n        viewMatrixMaker: (...params) => maskCreator(...params)[ROW],\n        spanMaker: (...params) => spanGenerator(...params)[ROW]\n    },\n    [`${CENTER}-2`]: {\n        orderGetter: getOrder(true)[ROW],\n        viewMatrixMaker: (...params) => maskCreator(...params)[ROW],\n        spanMaker: (...params) => spanGenerator(...params)[ROW]\n    }\n};\n\nconst matrixSpanGenerator = (type) => {\n    const generator = matrixSpanGeneratorMap[type];\n    if (generator) {\n        return generator;\n    }\n    return {\n        orderGetter: () => null,\n        viewMatrixMaker: matrix => () => matrix,\n        spanMaker: () => () => null\n    };\n};\n\n/**\n * This function is used to set the col and row spans\n * for the matrices based on repeated/hierarchichal data\n *\n * @export\n * @param {Array} matrix The 2d array for which filtering is to be done\n * @param {string} type Type of array (center, top, bottom)\n * @param {number} index Index of array in the row\n * @return {Object} containing the view matrix and their spans\n */\nexport function cellSpanMaker (matrix, type, index) {\n    let spans = null;\n    let viewMatrix = matrix;\n    const {\n        orderGetter,\n        viewMatrixMaker,\n        spanMaker\n    } = matrixSpanGenerator(`${type}-${index}`);\n\n    if (matrix.length) {\n        const order = orderGetter(matrix);\n        viewMatrix = viewMatrixMaker(matrix, order)();\n        spans = spanMaker(viewMatrix)();\n    }\n    return { viewMatrix, spans };\n}\n\nconst spaceAllocationDueToSpan = (span, placeholder, borderWidth) => {\n    const height = placeholder.availHeight();\n    const width = placeholder.availWidth();\n\n    return {\n        [ROW_SPAN] () {\n            selectElement(this).style('height', `${height + borderWidth}px`);\n            if (span > 1) {\n                selectElement(this).style('height', `${height * span + borderWidth * (span)}px`);\n                placeholder.setAvailableSpace(width, height * span);\n            }\n        },\n        [COL_SPAN] () {\n            if (span > 1) {\n                placeholder.setAvailableSpace(width * span + borderWidth * (span - 1), height);\n            }\n            selectElement(this).style('height', `${height}px`);\n        }\n    };\n};\n\nconst spanApplier = (cells, spans, config, type) => {\n    const borderWidth = config.border.width;\n\n    cells.attr(type, function (cell, colIndex) {\n        const span = spans[cell.rowIndex][colIndex];\n        const placeholder = cell.placeholder;\n\n        spaceAllocationDueToSpan(span, placeholder, borderWidth)[type].bind(this)();\n        return span;\n    });\n};\n\nconst spanApplierMap = {\n    [`${TOP}-0`]: null,\n    [`${TOP}-1`]: (...params) => spanApplier(...params, COL_SPAN),\n    [`${TOP}-2`]: null,\n    [`${CENTER}-0`]: (...params) => spanApplier(...params, ROW_SPAN),\n    [`${CENTER}-1`]: null,\n    [`${CENTER}-2`]: (...params) => spanApplier(...params, ROW_SPAN),\n    [`${BOTTOM}-0`]: null,\n    [`${BOTTOM}-1`]: (...params) => spanApplier(...params, COL_SPAN),\n    [`${BOTTOM}-2`]: null\n};\n\nexport const applySpans = (cells, spans, config, type) => {\n    const applier = spanApplierMap[type];\n    if (applier) {\n        applier(cells, spans, config);\n    }\n};\n","import { ERROR_MSG } from 'muze-utils';\n/**\n * An Interface to be implemented if the transaction support is necessary. This class ensures reactivity to\n * global properties.\n */\nexport default class TransactionSupport {\n    /**\n     * Property accessor for data member of the class. Data is passed to the system by calling this method.\n     */\n    data () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPl);\n    }\n\n    /**\n     * Property accessor for width of the class. Width is passed as an integer.\n     */\n    width () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPl);\n    }\n\n    /**\n     * Property accessor for height of the class. Height is passed as an integer.\n     */\n    height () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPl);\n    }\n\n    /**\n     * Property accessor for config of the class. Config is passed as an object.\n     */\n    config () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPl);\n    }\n}\n","import { TOP, BOTTOM, LEFT, TITLE, SUB_TITLE, GROUP, LAYOUT, LEGEND } from '../constants';\n\n/**\n *\n *\n * @param {*} context\n *\n */\nexport const arrangeComponents = (context) => {\n    const legendConfig = context.config().legend;\n    const titleConfig = context.title()[1];\n    const subtitleConfig = context.subtitle()[1];\n    const titleLayouts = {\n        [`${TOP}-${TOP}`]: [TITLE, SUB_TITLE, GROUP],\n        [`${BOTTOM}-${BOTTOM}`]: [GROUP, SUB_TITLE, TITLE],\n        [`${TOP}-${BOTTOM}`]: [TITLE, GROUP, SUB_TITLE],\n        [`${BOTTOM}-${TOP}`]: [SUB_TITLE, GROUP, TITLE]\n    };\n    const legendLayouts = [\n        [LEGEND, LAYOUT],\n        [LAYOUT, LEGEND]\n    ];\n    const titlePosition = titleConfig.position || TOP;\n    const subtitlePosition = subtitleConfig.position || TOP;\n\n    return {\n        headers: titleLayouts[`${titlePosition}-${subtitlePosition}`],\n        legends: legendConfig.position === LEFT || legendConfig.position === TOP ?\n        legendLayouts[0] : legendLayouts[1]\n    };\n};\n","/**\n * Flag to specify whether direction is vertical.\n */\nexport const MARGIN = 'margin';\nexport const LEFT = 'left';\nexport const RIGHT = 'right';\nexport const BOTTOM = 'bottom';\nexport const TOP = 'top';\nexport const SPACE_FIXER = 'spaceFixer';\nexport const CLASSPREFIX = 'muze';\nexport const VERTICAL_ALIGN = 'verticalAlign';\nexport const TEXT_ALIGN = 'textAlign';\nexport const IS_OFFSET = 'isOffset';\nexport const MIDDLE = 'middle';\nexport const BASELINE = 'baseline';\nexport const SHOW = 'show';\nexport const CENTER = 'center';\nexport const TEXT = 'text';\nexport const HEADER = 'header';\nexport const HEIGHT = 'height';\nexport const WIDTH = 'width';\nexport const DATA = 'data';\nexport const AXES = 'axes';\nexport const FACET_BY_FIELDS = 'facetByFields';\nexport const FIELDS = 'fields';\nexport const TRANSFORM = 'transform';\nexport const LAYER_DEF = 'layerDef';\nexport const CONFIG = 'config';\nexport const DETAIL_FIELDS = 'detailFields';\nexport const MAX_LINES = 'maxLines';\nexport const MIN_CHARS = 'minCharacters';\nexport const ROTATION = 'rotation';\n\nexport const TEXT_CELL = 'text-cell';\nexport const AXIS_CELL = 'axis-cell';\nexport const GEOM_CELL = 'geom-cell';\nexport const BLANK_CELL = 'blank-cell';\n","// eneum to refer to simple cell\nexport const SIMPLE = 'simple';\n// eneum to refer to header cell\nexport const TEXT = 'text';\n// enum to refer to axis cell\nexport const AXIS = 'axis';\n// enum to refer to visual cell\nexport const GEOM = 'geom';\n// enum to refer blank cell\nexport const BLANK = 'blank';\n","import {\n    ERROR_MSG,\n    getUniqueId,\n    mergeRecursive\n} from 'muze-utils';\nimport { SIMPLE } from './enums/cell-type';\n\n/**\n * This file declares a class that is used as an interface to create new\n * SimpleCell elements.\n * @module SimpleCell\n */\n/**\n * Base class for all table cells.\n *\n * @interface\n * @class SimpleCell\n */\nclass SimpleCell {\n\n    /**\n     * Creates an instance of SimpleCell.\n     *\n     * @param {*} config The input configuration.\n     * @memberof SimpleCell\n     */\n    constructor (config) {\n        this._id = getUniqueId();\n\n        const defConfig = mergeRecursive({}, this.constructor.defaultConfig());\n        this._config = mergeRecursive(defConfig, config || {});\n\n        this._mount = null;\n    }\n\n    /**\n     * Returns the type of the placehlder.\n     *\n     * @readonly\n     * @memberof SimpleCell\n     */\n    get type () {\n        return SIMPLE;\n    }\n\n    /**\n     * Returns the type of the placehlder.\n     *\n     * @readonly\n     * @memberof SimpleCell\n     * @return {Object} Default config for the placeholder\n     */\n    static defaultConfig () {\n        return {};\n    }\n\n    /**\n     * Returns the value contained by the SimpleCell.\n     *\n     * @memberof SimpleCell\n     */\n    valueOf () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    /**\n     * Returns a unique identifier for the instance used\n     * to control selective rendering.\n     *\n     * @memberof SimpleCell\n     */\n    id () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    /**\n     * Returns a serialized representation of the instance.\n     *\n     * @memberof SimpleCell\n     */\n    serialize () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    /**\n     * Returns an object with width and height fields\n     * specifying the space taken up by this metod.\n     *\n     * @memberof SimpleCell\n     */\n    getLogicalSpace () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    /**\n     * Method used to set the space available to render the SimpleCell\n     *\n     * @param {number} width The available width.\n     * @param {number} height The available height.\n     * @memberof SimpleCell\n     */\n    setAvailableSpace () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    /**\n     * Render the SimpleCell inthe supplied mount point.\n     *\n     * @param {HTMLElement} mount The mount point to render in.\n     * @memberof SimpleCell\n     */\n    render () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    /**\n     * Render the SimpleCell inthe supplied mount point.\n     *\n     * @param {HTMLElement} mount The mount point to render in.\n     * @memberof SimpleCell\n     */\n    remove () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n}\n\nexport default SimpleCell;\n","/**\n * This file exports variables that are used as defaults for\n * the placeholders\n */\nimport * as CONSTANTS from './constants';\n\n /**\n * Default Configuration for the cells\n * @return {Object} Default configuration\n */\nexport const DEFAULT_CONFIG = {\n    [CONSTANTS.MARGIN]: {\n        [CONSTANTS.LEFT]: 0,\n        [CONSTANTS.RIGHT]: 0,\n        [CONSTANTS.TOP]: 0,\n        [CONSTANTS.BOTTOM]: 0\n    },\n    [CONSTANTS.SPACE_FIXER]: 2,\n    [CONSTANTS.IS_OFFSET]: false,\n    [CONSTANTS.VERTICAL_ALIGN]: null,\n    [CONSTANTS.TEXT_ALIGN]: CONSTANTS.CENTER,\n    [CONSTANTS.SHOW]: true,\n    [CONSTANTS.MAX_LINES]: 0,\n    [CONSTANTS.MIN_CHARS]: 0,\n    [CONSTANTS.ROTATION]: null\n};\n","import { mergeRecursive } from 'muze-utils';\nimport { GEOM, TEXT, AXIS, BLANK } from './enums/cell-type';\n\nconst DEFAULT_PROPS = {\n    mount: {},\n    availHeight: {},\n    availWidth: {},\n    config: {\n        sanitization: (context, value) => mergeRecursive(context._config, value)\n    },\n    logicalSpace: {},\n    minSpacing: {},\n    source: {}\n};\n\nconst geomProps = {\n    data: {},\n    caption: {},\n    config: {},\n    axes: {\n        sanitization: (context, value) => Object.assign(context._axes, value)\n    },\n    facetByFields: {},\n    fields: {},\n    transform: {},\n    layerDef: {},\n    detailFields: {}\n};\n\nconst textProps = {\n    smartText: {}\n};\nexport const PROPS = {\n    [GEOM]: mergeRecursive(geomProps, DEFAULT_PROPS),\n    [TEXT]: mergeRecursive(textProps, DEFAULT_PROPS),\n    [AXIS]: DEFAULT_PROPS,\n    [BLANK]: DEFAULT_PROPS\n};\n","/**\n * This file declares a class that represents a table cell\n * used to house an axis.\n * @module VisualCell\n */\nimport { selectElement, makeElement, generateGetterSetters } from 'muze-utils';\nimport { CLASSPREFIX, HEIGHT, WIDTH, AXIS_CELL } from './enums/constants';\nimport SimpleCell from './simple-cell';\nimport { DEFAULT_CONFIG } from './enums/defaults';\nimport { AXIS } from './enums/cell-type';\nimport { PROPS } from './props';\n\n/**\n * Computes the logical space of the an axis instance within an axis cell\n *\n * @param {Object} context Required to get the needed parameters to compute axis space\n * @return {Object} Returns the logical space for axis\n */\nconst computeAxisSpace = (context) => {\n    let logicalWidth;\n    let logicalHeight;\n    const axis = context.source();\n    const {\n        spaceFixer,\n        margin\n    } = context.config();\n    const {\n        width,\n        height\n    } = axis.getLogicalSpace();\n    const {\n            show\n        } = axis.config();\n    if (show === true) {\n        logicalHeight = Math.floor(height + margin.top + margin.bottom + spaceFixer);\n        logicalWidth = Math.floor(width + margin.left + margin.right + spaceFixer);\n    } else {\n        [logicalWidth, logicalHeight] = [width, height];\n    }\n    return {\n        width: logicalWidth,\n        height: logicalHeight\n    };\n};\n\n/**\n * Represents an axis cell.\n *\n * @class Axis\n */\nclass AxisCell extends SimpleCell {\n\n    /**\n     * Creates an instance of AxisCell.\n     *\n     * @param {Object} config The input config.\n     * @memberof AxisCell\n     */\n    constructor (config) {\n        super(config);\n\n        this._axis = null;\n        this._availHeight = null;\n        this._availWidth = null;\n        this._logicalSpace = null;\n\n        generateGetterSetters(this, PROPS[AXIS]);\n    }\n\n    /**\n     * return the type pf SimpleCell cell.\n     *\n     * @readonly\n     * @memberof AxisCell\n     */\n    get type () {\n        return AXIS;\n    }\n\n    /**\n     * This method return the value conatined by this SimpleCell.\n     *\n     * @return {SimpleAxis | ColorAxis} Instance of SimpleAxis or ColorAxis.\n     * @memberof AxisCell\n     */\n    valueOf () {\n        return this.source().id;\n    }\n\n    /**\n     * This method return the unique identififer of the axis\n     *\n     * @return {string} Id of the axis.\n     * @memberof AxisCell\n     */\n    get id () {\n        return this._id;\n    }\n\n    /**\n     * Retrns the serialized representation of this cell.\n     *\n     * @return {Object}Object with serializable props.\n     * @memberof AxisCell\n     */\n    serialize () {\n        return {\n            type: AXIS,\n            axis: this.source().serialize()\n        };\n    }\n\n    /**\n     * return the default configuration for the text cell\n     *\n     * @static\n     * @return {Object} Default configuration of the cell\n     * @memberof AxisCell\n     */\n    static defaultConfig () {\n        return DEFAULT_CONFIG;\n    }\n\n    /**\n     * return the space taken up by an axis element in the dom.\n     *\n     * @return {Object} Object with width and height fields.\n     * @memberof AxisCell\n     */\n    getLogicalSpace () {\n        if (!this.logicalSpace()) {\n            this.logicalSpace(computeAxisSpace(this));\n        }\n        return this.logicalSpace();\n    }\n\n    /**\n     * This method is used to set the space availiable to render\n     * the SimpleCell.\n     *\n     * @param {number} width The width of SimpleCell.\n     * @param {number} height The height of SimpleCell.\n     * @return {Instance} Returns current Instance\n     * @memberof AxisCell\n     */\n    setAvailableSpace (width, height) {\n        this.availWidth(width);\n        this.availHeight(height);\n        const {\n            margin,\n            isOffset\n        } = this.config();\n\n        if (width || height) {\n            this.source().setAvailableSpace(width, height, margin, isOffset);\n            this.source().logicalSpace(null);\n        } else {\n            this.source().resetLogicalSpace();\n        }\n        this.logicalSpace(null);\n        return this;\n    }\n\n    /**\n     * This method is used to render the axis inside the axis cell.\n     *\n     * @param {HTMLElement} mount The mount point.\n     * @return {Selection} node where axis mounted\n     * @memberof AxisCell\n     */\n    /* istanbul ignore next */render (mount) {\n        if (!mount) {\n            return this;\n        }\n        const axis = this.source();\n        const availHeight = this.availHeight();\n        const availWidth = this.availWidth();\n        const {\n            margin\n        } = this.config();\n        const {\n            top,\n            bottom,\n            left,\n            right\n        } = margin;\n        const {\n            show,\n            orientation\n        } = axis.config();\n        const wrapperDiv = makeElement(selectElement(mount), 'div', [this], `${CLASSPREFIX}-${AXIS_CELL}`);\n        const selection = makeElement(wrapperDiv, 'svg', [1], `${CLASSPREFIX}-axis-container`);\n        selection.classed(`${CLASSPREFIX}-axis-container-${orientation}`, true);\n\n        this.mount(mount);\n        if (!availWidth) {\n            selection.attr(WIDTH, `${0}px`);\n        }\n        if (!availHeight) {\n            selection.attr(HEIGHT, `${0}px`);\n        }\n        wrapperDiv.style(WIDTH, `${show ? Math.floor(availWidth) : 0}px`)\n                        .style(HEIGHT, `${show ? Math.floor(availHeight) : 0}px`)\n                        .style('margin-top', top)\n                        .style('margin-bottom', bottom)\n                        .style('margin-left', left)\n                        .style('margin-right', right);\n\n        axis.mount(selection.node());\n        return selection;\n    }\n\n    /**\n     * Disposes the cell\n     *\n     * @return {Instance} Current instance of AxisCell\n     * @memberof AxisCell\n     */\n    remove () {\n        this.source() && this.source().remove();\n        this.mount() && this.mount().remove();\n        return this;\n    }\n}\n\nexport default AxisCell;\n\n","/**\n * This file declares a class that represents a BLANK element in a  table.\n * @module VisualCell\n */\nimport {\n    selectElement,\n    makeElement,\n    applyStyle,\n    generateGetterSetters\n    } from 'muze-utils';\nimport SimpleCell from './simple-cell';\nimport { CLASSPREFIX, BLANK_CELL } from './enums/constants';\nimport { BLANK } from './enums/cell-type';\nimport { DEFAULT_CONFIG } from './enums/defaults';\nimport { PROPS } from './props';\n\n/**\n * Represents a table haeder.\n *\n * @class BLANK\n */\nclass BlankCell extends SimpleCell {\n\n    /**\n     * Creates an instance of BLANK.\n     * @param {Object} config The input configuration.\n     * @memberof BLANK\n     */\n    constructor (config) {\n        super(config);\n\n        generateGetterSetters(this, PROPS[BLANK]);\n    }\n\n    /**\n     * return the type pf SimpleCell cell.\n     *\n     * @readonly\n     * @memberof BlankCell\n     */\n    get type () {\n        return BLANK;\n    }\n\n    /**\n     * This method return the value contained by this SimpleCell.\n     *\n     * @return {string} The text value contained by this cell.\n     * @memberof BlankCell\n     */\n    valueOf () {\n        return this.id;\n    }\n\n    /**\n     * return the default configuration for the text cell\n     *\n     * @static\n     * @return {Object} Default configuration of the cell\n     * @memberof BlankCell\n     */\n    static defaultConfig () {\n        return DEFAULT_CONFIG;\n    }\n\n    /**\n     * This method is used to return a unique identifier for\n     * the BLANK cell.\n     *\n     * @return {string} The unique identifier for the BLANK.\n     * @memberof BlankCell\n     */\n    get id () {\n        return this._id;\n    }\n\n    /**\n     * This method is used to obtain a serialized representation of this instance.\n     *\n     * @return {Object} Object with serilizable props.\n     * @memberof BLANK\n     */\n    serialize () {\n        return {\n            type: BLANK\n        };\n    }\n\n    /**\n     * This method return the space taken up\n     * by the text with the style applied.\n     *\n     * @return {Object} width and height taken up by the text.\n     * @memberof BLANK\n     */\n    getLogicalSpace () {\n        if (!this.logicalSpace()) {\n            return {\n                width: this.width || 0,\n                height: this.height || 0\n            };\n        }\n        return this.logicalSpace();\n    }\n\n    /**\n     * This method is used to set the available space.\n     *\n     * @param {number} width The available width.\n     * @param {number} height The available height.\n     * @return {Instance} Returns current Instance\n     * @memberof BlankCell\n     */\n    setAvailableSpace (width, height) {\n        this.availWidth(width);\n        this.availHeight(height);\n        this.logicalSpace(null);\n        return this;\n    }\n\n    /**\n     * This method is used to render the BLANK cell inside\n     * the provided mount point.\n     *\n     * @param {HTMLElement} mount The mount point for this cell.\n     * @return {Instance} Returns current Instance\n     * @memberof BLANK\n     */\n    /* istanbul ignore next */render (mount) {\n        if (mount) {\n            const { style } = this.config();\n            // append span element to mount point\n            this.mount(mount);\n            const container = selectElement(mount);\n            const elem = makeElement(container, 'div', [this.id]);\n            elem.classed(`${CLASSPREFIX}-${BLANK_CELL}`, true);\n            elem.style('width', `${this.availWidth()}px`);\n            elem.style('height', `${this.availHeight()}px`);\n            elem.html('');\n            // apply style on the returned element\n            if (style) {\n                applyStyle(elem, style);\n            }\n        } return this;\n    }\n\n    /**\n     * Removes the cell(Disposal)\n     *\n     * @return {Instance} Returns current Instance\n     * @memberof BlankCell\n     */\n    remove () {\n        this.mount() && this.mount().remove();\n        return this;\n    }\n }\nexport default BlankCell;\n","/**\n * This file declares a class that represents a Text element in a  table.\n * @module VisualCell\n */\n\nimport {\n    selectElement,\n    makeElement,\n    getSmartComputedStyle,\n    generateGetterSetters\n} from 'muze-utils';\nimport SimpleCell from './simple-cell';\nimport { TEXT } from './enums/cell-type';\nimport { PROPS } from './props';\nimport { DEFAULT_CONFIG } from './enums/defaults';\nimport { CLASSPREFIX, TOP, BOTTOM, LEFT, RIGHT, HEADER, WIDTH, TEXT_CELL } from './enums/constants';\nimport './text-cell.scss';\n\nconst setSmartText = (context) => {\n    const source = context.source();\n    const {\n        height: minHeightSpace,\n        width: minWidthSpace\n    } = context.minSpacing();\n    const {\n       margin,\n       rotation\n   } = context.config();\n    const {\n        left,\n        right,\n        top,\n        bottom\n     } = margin;\n    const paddedHeight = top + bottom + minHeightSpace;\n    const paddedWidth = left + right + minWidthSpace;\n    const availHeight = context.availHeight() - paddedHeight;\n    const availWidth = context.availWidth() - paddedWidth;\n    const labelManager = context.dependencies().labelManager;\n\n    labelManager.setStyle(context._computedStyle);\n\n    !rotation && context.smartText(labelManager.getSmartText(source, availWidth, availHeight, false));\n    rotation && context.smartText(labelManager.getSmartText(source, availHeight, availWidth, true));\n\n    return context;\n};\n\n/**\n* Computes the Logical Space for the text\n*\n* @param {Object} context Required to get the needed parameters to compute text space\n* @return {Object} Logical space taken up by text\n* @memberof TextCell\n*/\nconst computeTextSpace = (context) => {\n    const { labelManager } = context.dependencies();\n    const {\n        height: minHeightSpace,\n        width: minWidthSpace\n    } = context.minSpacing();\n    const {\n       margin,\n       show,\n       maxLines,\n       minCharacters\n   } = context.config();\n    const {\n       left,\n       right,\n       top,\n       bottom\n    } = margin;\n    const paddedHeight = top + bottom + minHeightSpace;\n    const paddedWidth = left + right + minWidthSpace;\n    const availHeight = context.availHeight() - paddedHeight;\n    const availWidth = context.availWidth() - paddedWidth;\n    const source = context.source();\n    const space = context.smartText();\n    const minText = new Array(minCharacters).fill('W').join('');\n    const _minTextSpace = labelManager.getOriSize(minText);\n\n    context.config({ rotation: false });\n    if (space.width > (availWidth || 0) && maxLines) {\n        space.height = space.oriTextHeight * maxLines;\n    }\n    if (availWidth && availWidth < space.width) {\n        space.width = _minTextSpace.width;\n    }\n    if (availWidth && availWidth < Math.min(_minTextSpace.width, space.oriTextWidth)) {\n        const smartSpace = labelManager.getSmartText(source, availHeight, _minTextSpace.height, true);\n        space.width = smartSpace.height;\n        space.height = smartSpace.width;\n        context.config({ rotation: true });\n        context.smartText(smartSpace);\n    }\n\n    if (show) {\n        return {\n            width: Math.ceil(space.width) + paddedWidth,\n            height: Math.ceil(space.height) + paddedHeight\n        };\n    } return {\n        width: 0,\n        height: 0\n    };\n};\n\n/**\n * Represents a table haeder.\n *\n * @class Text\n */\nclass TextCell extends SimpleCell {\n\n    /**\n     * Creates an instance of Text.\n     * @param {Object} config The input configuration.\n     * @param {string} dependencies Dependencies for the class(labelManager)\n     * @memberof Text\n     */\n    constructor (config, dependencies) {\n        super(config);\n\n        this._dependencies = dependencies;\n        this._className = this._config.className ||\n                    (this._config.type === HEADER ? `${CLASSPREFIX}-${HEADER}-cell` : `${CLASSPREFIX}-${TEXT}-cell`);\n        this._computedStyle = getSmartComputedStyle(selectElement('body'), this._className);\n        this._dependencies.labelManager.setStyle(this._computedStyle);\n        generateGetterSetters(this, PROPS[TEXT]);\n        const space = this._dependencies.labelManager.getOriSize('w');\n        this.minSpacing({ width: Math.floor(space.width * 3 / 4), height: Math.floor(space.height / 2) });\n        setSmartText(this);\n    }\n\n    /**\n     * return the type pf SimpleCell cell.\n     *\n     * @readonly\n     * @memberof TextCell\n     */\n    get type () {\n        return TEXT;\n    }\n\n    /**\n     * This method return the value contained by this SimpleCell.\n     *\n     * @return {string} The text value contained by this cell.\n     * @memberof TextCell\n     */\n    valueOf () {\n        return this.source();\n    }\n\n    /**\n     * This method is used to return a unique identifier for\n     * the Text cell.\n     *\n     * @return {string} The unique identifier for the Text.\n     * @memberof TextCell\n     */\n    get id () {\n        return this._id;\n    }\n\n    /**\n     * Returns the dependencies of the instance\n     *\n     * @return {Object} Dependencies needed by the class\n     * @memberof TextCell\n     */\n    dependencies () {\n        return this._dependencies;\n    }\n\n    /**\n     * This method is used to obtain a serialized representation of this instance.\n     *\n     * @return {Object} Object with serilizable props.\n     * @memberof TextCell\n     */\n    serialize () {\n        return {\n            text: this.source(),\n            type: TEXT\n        };\n    }\n\n    /**\n     * return the default configuration for the text cell\n     *\n     * @static\n     * @return {Object} Default configuration of the cell\n     * @memberof TextCell\n     */\n    static defaultConfig () {\n        return DEFAULT_CONFIG;\n    }\n\n    /**\n     * This method return the space taken up\n     * by the text with the style applied.\n     *\n     * @return {Object} width and height taken up by the text.\n     * @memberof Text\n     */\n    getLogicalSpace () {\n        if (!this.logicalSpace()) {\n            this.logicalSpace(computeTextSpace(this));\n        }\n        return this.logicalSpace();\n    }\n\n    /**\n     * This method is used to set the available space.\n     *\n     * @param {number} width The available width.\n     * @param {number} height The available height.\n     * @return {Instance} Returns current Instance\n     * @memberof TextCell\n     */\n    setAvailableSpace (width, height) {\n        this.availWidth(width);\n        this.availHeight(height);\n        setSmartText(this);\n        this.logicalSpace(null);\n        return this;\n    }\n\n    /**\n     * This method is used to render the Text cell inside\n     * the provided mount point.\n     *\n     * @param {HTMLElement} mount The mount point for this cell.\n     * @return {Instance} Returns current Instance\n     * @memberof Text\n     */\n    render (mount) {\n        const availWidth = this.availWidth();\n        const availHeight = this.availHeight();\n        const {\n            margin,\n            show,\n            verticalAlign,\n            textAlign,\n            rotation\n        } = this.config();\n\n        this.mount(mount);\n        if (show) {\n            const container = selectElement(mount);\n            const elem = makeElement(container, 'div', [this.id], `${CLASSPREFIX}-${TEXT_CELL}`);\n            const vAlign = verticalAlign || rotation ? 'middle' : 'top';\n            const {\n                width,\n                height\n            } = this.smartText();\n            const {\n                height: minHeightSpace\n            } = this.minSpacing();\n            const translation = {\n                top: width + minHeightSpace / 2,\n                middle: width / 2 + minHeightSpace,\n                bottom: minHeightSpace\n            };\n\n            container.style('vertical-align', vAlign);\n\n            // Set class name\n            elem.classed(this._className, true);\n\n            // Apply styles\n            elem.style('text-align', textAlign);\n            elem.style('display', 'inline');\n            elem.style('transform', rotation ? `translate(${height / 2}px,\n                ${translation[vAlign]}px) rotate(-90deg)` : '');\n            elem.style(WIDTH, availWidth ? `${availWidth}px` : '100%');\n            [TOP, BOTTOM, LEFT, RIGHT].forEach((type) => {\n                container.style(`margin-${type}`, `${margin[type]}px`);\n            });\n            elem.style('text-align', textAlign);\n            elem.style('display', 'inline');\n            // set the text as the innerHTML\n            this._dependencies.labelManager.setStyle(this._computedStyle);\n            elem.html(this._dependencies.labelManager.getSmartText(this.source(), availWidth, availHeight, true).text);\n        }\n        return this;\n    }\n\n    /**\n     * Disposes the cell\n     *\n     * @return {Instance} Returns current Instance\n     * @memberof TextCell\n     */\n    remove () {\n        this.mount() && this.mount().remove();\n        return this;\n    }\n }\n\nexport default TextCell;\n","/**\n * This file declares a class that is used to represent a table cell\n * that houses a visual unit.\n * @module VisualCell\n */\n\nimport { selectElement, makeElement, generateGetterSetters } from 'muze-utils';\nimport SimpleCell from './simple-cell';\nimport { GEOM } from './enums/cell-type';\nimport { PROPS } from './props';\nimport {\n    CLASSPREFIX, HEIGHT, WIDTH, DATA, AXES, FACET_BY_FIELDS, FIELDS, TRANSFORM, LAYER_DEF, CONFIG, GEOM_CELL,\n    DETAIL_FIELDS\n} from './enums/constants';\nimport { DEFAULT_CONFIG } from './enums/defaults';\n\n/**\n * Calculates the logical space of the cell\n *\n * @param {Object} context Required to get the needed parameters to compute unit space\n * @return {Object} Logical space taken up by the unit\n * @memberof GeomCell\n */\nconst computeGeomSpace = (context) => {\n    const config = context.source().config();\n    const { width, height } = config;\n    return {\n        width: Math.ceil(width),\n        height: Math.ceil(height + context.getCaptionSpace().height)\n    };\n};\n\n /**\n * This class represents a SimpleCell for visual unit.\n *\n * @class GeomCell\n */\nclass GeomCell extends SimpleCell {\n\n    /**\n     * Creates an instance of GeomCell.\n     * @param {Object} config The input configuration.\n     * @memberof GeomCell\n     */\n    constructor (config) {\n        super(config);\n\n        this._unit = null;\n        this._layers = null;\n        this._axes = {};\n        this._datamodel = {};\n        this._facetByFields = {};\n        this._fields = null;\n        this._transform = null;\n        this._caption = null;\n\n        generateGetterSetters(this, PROPS[GEOM]);\n    }\n\n    /**\n     * return the type pf SimpleCell cell.\n     *\n     * @readonly\n     * @memberof GeomCell\n     */\n    get type () {\n        return GEOM;\n    }\n\n    /**\n     * This method return the value contained by this cell.\n     *\n     * @return {VisualUnit} Instance of visual unit contained by visual unit.\n     * @memberof GeomCell\n     */\n    valueOf () {\n        return this.source();\n    }\n\n    /**\n     * This method is used to return the id of the\n     * visual unit housed by this cell.\n     *\n     * @return {string} The unique id of the visual unit.\n     * @memberof GeomCell\n     */\n    get id () {\n        return this.source().id();\n    }\n\n    /**\n     * This method return a serialized representation of\n     * this instance.\n     *\n     * @return {Object} Object with serializable props.\n     * @memberof GeomCell\n     */\n    serialize () {\n        return {\n            type: GEOM,\n            unit: this.source().serialize(),\n            caption: this.caption()\n        };\n    }\n\n    /**\n     * return the default configuration for the geom cell\n     *\n     * @static\n     * @return {Object} Default configuration of the cell\n     * @memberof GeomCell\n     */\n    static defaultConfig () {\n        return DEFAULT_CONFIG;\n    }\n\n    /**\n     * Updates the model based on the changed parameters\n     *\n     * @return {Instance} return instance\n     * @memberof GeomCell\n     */\n    updateModel () {\n        const unit = this.source();\n        unit.lockModel();\n        [LAYER_DEF, TRANSFORM, AXES, FIELDS, CONFIG, DATA, AXES, FACET_BY_FIELDS, DETAIL_FIELDS].forEach((prop) => {\n            this[prop]() && unit[prop](this[prop]());\n        });\n        unit.unlockModel();\n        return this;\n    }\n\n    /**\n     * It gives the space taken by the caption of the unit\n     *\n     * @return {Object} return the space taken by caption\n     * @memberof GeomCell\n     */\n    getCaptionSpace () {\n        const caption = this.caption();\n\n        let captionSpace = { width: 0, height: 0 };\n        if (caption) {\n            captionSpace = caption.getLogicalSpace();\n        }\n        return captionSpace;\n    }\n\n    /**\n     * return the space taken up by the element in the dom.\n     *\n     * @return {Object} Object with width and height fields.\n     * @memberof GeomCell\n     */\n    getLogicalSpace () {\n        if (!this.logicalSpace()) {\n            this.logicalSpace(computeGeomSpace(this));\n        }\n        return this.logicalSpace();\n    }\n\n    /**\n     * This method is used to set the space available to\n     * render the SimpleCell.\n     *\n     * @param {number} width The available width.\n     * @param {number} height The available height.\n     * @return {Instance} Returns current Instance\n     * @memberof GeomCell\n     */\n    setAvailableSpace (width, height) {\n        const unit = this.source();\n\n        this.availWidth(width);\n        this.availHeight(height);\n        unit.lockModel();\n        unit.width(width).height(height - this.getCaptionSpace().height);\n        unit.unlockModel();\n        this.logicalSpace(null);\n        return this;\n    }\n\n    /**\n     * his method is used to render the visual unit inside the provided cell.\n     *\n     * @param {HTMLElement} mount The mountpoint in the table.\n     * @return {Instance} Returns current Instance\n     * @memberof GeomCell\n     */\n    render (mount) {\n        if (mount) {\n            this.mount(mount);\n            const availHeight = this.availHeight();\n            const availWidth = this.availWidth();\n            const caption = this.caption();\n            const wrapperDiv = makeElement(selectElement(mount), 'div', [1], `${CLASSPREFIX}-${GEOM_CELL}`);\n\n            if (caption) {\n                const captionDom = makeElement(wrapperDiv, 'div', [caption], `${CLASSPREFIX}-unit-caption`).node();\n                caption.render(captionDom);\n            }\n            const selection = makeElement(wrapperDiv, 'div', [1], `${CLASSPREFIX}-unit`);\n            wrapperDiv.style(WIDTH, `${availWidth}px`).style(HEIGHT, `${availHeight}px`);\n            selection.style(WIDTH, `${availWidth}px`)\n                            .style(HEIGHT, `${availHeight - this.getCaptionSpace().height}px`);\n            this.source().mount(selection.node());\n        }\n        return this;\n    }\n\n    /**\n     * Disposes the cell\n     *\n     * @return {Object} Current instance\n     * @memberof GeomCell\n     */\n    remove () {\n        this.mount() && this.mount().remove();\n        this.source().remove();\n        return this;\n    }\n}\n\nexport default GeomCell;\n","import AxisCell from './axis-cell';\nimport BlankCell from './blank-cell';\nimport TextCell from './text-cell';\nimport GeomCell from './geom-cell';\nimport SimpleCell from './simple-cell';\n\nimport * as CONSTANTS from './constants';\n\nexport const DEFAULT_PLACEHOLDERS = {\n    [CONSTANTS.SIMPLE_CELL]: SimpleCell,\n    [CONSTANTS.TEXT_CELL]: TextCell,\n    [CONSTANTS.AXIS_CELL]: AxisCell,\n    [CONSTANTS.GEOM_CELL]: GeomCell,\n    [CONSTANTS.BLANK_CELL]: BlankCell\n};\n\n","export const SIMPLE_CELL = 'SimpleCell';\nexport const TEXT_CELL = 'TextCell';\nexport const AXIS_CELL = 'AxisCell';\nexport const BLANK_CELL = 'BlankCell';\nexport const GEOM_CELL = 'GeomCell';\n\n","import { DEFAULT_PLACEHOLDERS } from './defaults';\n\n/**\n * Creates a registry for the cells, which can be used for\n * setting a new cell or getting the registered cells\n *\n * @return {Object} Setters and getters for registered cells\n */\nconst cellRegistry = () => {\n    const reg = DEFAULT_PLACEHOLDERS;\n    return {\n        set: (key, def) => {\n            if (key in reg) {\n                reg[key] = def;\n            }\n            return cellRegistry;\n        },\n        get: () => reg\n    };\n};\nexport default cellRegistry;\n","import { TextCell } from '@chartshq/visual-cell';\nimport { escapeHTML } from 'muze-utils';\nimport { TOP } from '../constants';\n\n/**\n *\n *\n * @param {*} rawContent\n *\n */\nconst resolveTitleSubTitleContent = (rawContent) => {\n    if (typeof rawContent === 'function' && !rawContent._sanitize) {\n        return rawContent();\n    }\n    return escapeHTML(rawContent());\n};\n\n/**\n *\n *\n * @param {*} config\n * @param {*} cellType\n * @param {*} labelManager\n * @param {*} prevCell\n *\n */\nconst headerCreator = (config, cellType, labelManager, prevCell) => {\n    let margin = {};\n    const {\n        content,\n        classPrefix,\n        maxLines\n    } = config;\n    const cell = prevCell || new TextCell(\n        {\n            type: cellType === 'title' ? 'header' : 'text',\n            className: `${classPrefix}-${cellType}-cell`\n        }, {\n            labelManager\n        })\n     .config({ maxLines }).minSpacing({ width: 0, height: 0 });\n\n    cell.source(content);\n    cell._minTickDiff = { height: 0, width: 0 };\n\n    if (config.position === TOP) {\n        margin = { top: 0, bottom: config.padding };\n    } else {\n        margin = { top: config.padding, bottom: 0 };\n    }\n    cell.config({ margin });\n\n    return {\n        height: cell.getLogicalSpace().height,\n        cell\n    };\n};\n\n/**\n *\n *\n * @param {*} config\n * @param {*} type\n * @param {*} labelManager\n * @param {*} cell\n *\n */\nconst createHeading = (config, type, labelManager, prevCell) => {\n    if (!config) { return ''; }\n\n    return headerCreator(\n        config,\n        type,\n        labelManager,\n        prevCell\n    );\n};\n\n/**\n *\n *\n * @param {*} context\n */\nexport const createHeaders = (context, canvasHeight, canvasWidth) => {\n    let headerHeight = 0;\n    const headers = {};\n    const subtitle = context.subtitle();\n    const isSubtitle = resolveTitleSubTitleContent(subtitle[0]);\n\n    canvasHeight >= 200 && canvasWidth >= 200 && ['title', 'subtitle'].forEach((type) => {\n        const headerOptions = context[type]();\n        const content = resolveTitleSubTitleContent(headerOptions[0]);\n        if (content.length) {\n            const config = headerOptions[1];\n\n            config.width = context.width();\n            config.height = context.height();\n            config.classPrefix = context.config().classPrefix;\n            config.content = content;\n            config.padding = (type === 'title' && !isSubtitle.length) ? subtitle[1].padding : config.padding;\n\n            const { height, cell } = createHeading(config, type, context.dependencies().smartlabel,\n                context[`${type}Cell`]);\n\n            headers[`${type}Cell`] = cell;\n            context._composition[type] = cell;\n            headerHeight += height;\n        }\n    });\n    return { headerHeight, headers };\n};\n\n","import { TextCell, AxisCell } from '@chartshq/visual-cell';\nimport { getValueParser } from 'muze-utils';\nimport {\n    VERTICAL, HORIZONTAL, LEFT, RIGHT, LEGEND_TYPE_MAP, PADDING, BORDER, MARGIN\n} from '../constants';\n\n/**\n *\n *\n * @param {*} legendConfig\n * @param {*} canvases\n *\n */\nexport const legendCreator = (canvas) => {\n    let LegendCls;\n    const dataset = [];\n    const axes = canvas.getRetinalAxes();\n\n    Object.entries(axes).forEach((axisInfo) => {\n        const scale = axisInfo[1][0];\n        const scaleType = axisInfo[0];\n        const scaleProps = canvas[scaleType]();\n\n        if (scaleProps.field && scale) {\n            const {\n                type,\n                step\n            } = scale.config();\n\n            const stepMapper = typeof step === 'boolean' ? step : false;\n            LegendCls = LEGEND_TYPE_MAP[`${type}-${stepMapper}-${scaleType}`];\n            dataset.push({ scale, canvas, fieldName: scaleProps.field, LegendCls, scaleType });\n        }\n    });\n\n    return dataset;\n};\n\n/**\n *\n *\n * @param {*} legendConfig\n * @param {*} canvases\n * @param {*} measurement\n * @param {*} prevLegends\n *\n */\nexport const legendInitializer = (legendConfig, canvas, measurement, prevLegends) => {\n    const legends = [];\n    const {\n        height,\n        width,\n        headerHeight\n    } = measurement;\n    const {\n        position,\n        align\n    } = legendConfig;\n\n    const legendInfo = legendCreator(canvas);\n    const { invalidValues } = canvas.config();\n\n    const parser = getValueParser(invalidValues);\n    legendInfo.forEach((dataInfo, index) => {\n        let legend = {};\n\n        const legendMeasures = {};\n        const {\n                LegendCls,\n                scale,\n                fieldName,\n                scaleType\n            } = dataInfo;\n        const config = legendConfig[scaleType] || {};\n        const title = config.title || {};\n        title.text = title.text || fieldName;\n        if (config.show) {\n            config.position = position;\n            config.align = align;\n\n            if (prevLegends[index]) {\n                legend = prevLegends[index].legend;\n            } else {\n                legend = LegendCls.create({\n                    labelManager: canvas._dependencies.smartlabel,\n                    cells: {\n                        AxisCell, TextCell\n                    }\n                });\n            }\n            legendMeasures.maxHeight = align === VERTICAL ? (height - headerHeight) : height * 0.2;\n            legendMeasures.maxWidth = align === HORIZONTAL ? width : width * 0.2;\n            legendMeasures.width = Math.min(legendMeasures.maxWidth, config.width);\n            legendMeasures.height = Math.min(legendMeasures.maxHeight, config.height);\n\n            [PADDING, BORDER, MARGIN].forEach((e) => {\n                legendMeasures[e] = config[e];\n            });\n\n            legend.scale(scale)\n                            .valueParser(parser)\n                            .title(title)\n                            .fieldName(fieldName)\n                            .config(config)\n                            .metaData(canvas.composition().visualGroup.getGroupByData().project([fieldName]))\n                            .measurement(legendMeasures)\n                            .canvasAlias(canvas.alias())\n                            .setLegendMeasures();\n\n            legends.push({ canvas, legend, scaleType });\n        }\n    });\n    return legends;\n};\n\n/**\n *\n *\n * @param {*} legends\n * @param {*} legendConfig\n * @param {*} availableHeight\n * @param {*} availableWidth\n *\n */\nexport const getLegendSpace = (legends, legendConfig, availableHeight, availableWidth) => {\n    const legendMeasures = legends.map(legendInfo => legendInfo.legend.measurement());\n    const legendSpace = { width: 0, height: 0 };\n\n    legendMeasures.forEach((space) => {\n        let height = 0;\n        let width = 0;\n        width = Math.min(space.width, space.maxWidth);\n        height = Math.min(space.height, space.maxHeight);\n\n        if (legendConfig.align === HORIZONTAL) {\n            if (legendSpace.width + width > availableWidth) {\n                legendSpace.width = availableWidth;\n                legendSpace.height += height;\n            } else {\n                legendSpace.width += width;\n                legendSpace.height = Math.max(legendSpace.height, height);\n            }\n        } else if (legendSpace.height + height > availableHeight) {\n            legendSpace.height = height;\n            legendSpace.width += width;\n        } else {\n            legendSpace.height += height;\n            legendSpace.width = Math.max(legendSpace.width, width);\n        }\n    });\n    if (legendConfig.align === HORIZONTAL) {\n        legendSpace.width = availableWidth;\n    }\n    return legendSpace;\n};\n\n/**\n *\n *\n * @param {*} context\n * @param {*} headerHeight\n *\n */\nexport const createLegend = (context, headerHeight, height, width) => {\n    const measurement = {\n        height,\n        width,\n        headerHeight\n    };\n    const { legend } = context.config();\n    const { show, position } = legend;\n\n    legend.classPrefix = context.config().classPrefix;\n    const align = (position === LEFT || position === RIGHT) ? VERTICAL : HORIZONTAL;\n\n    legend.show = show ? ((align === VERTICAL && width > 200) || (align === HORIZONTAL && height > 200)) : show;\n    legend.align = align;\n    return legendInitializer(legend, context, measurement, context.legends || []);\n};\n","import { LayoutComponent } from '../../../../layout/src/tree-layout';\n\nexport default class MuzeComponent extends LayoutComponent {\n    getLogicalSpace () {\n        const { width, height } = this.boundBox();\n        return { width, height };\n    }\n\n    setSpatialConfig (conf) {\n        this.boundBox({ top: conf.y, left: conf.x });\n        this.newDimensions = {\n            width: conf.width,\n            height: conf.height\n        };\n        this.renderAt(conf.renderAt);\n    }\n\n    getBoundBox () {\n        return this.boundBox();\n    }\n\n    updateWrapper () {\n        throw Error('Update is not implemented');\n    }\n\n    setParams () {\n        throw Error('set params is not implemented');\n    }\n}\n","import { selectElement } from 'muze-utils';\nimport MuzeComponent from './muze-chart-component';\nimport { LEFT } from '../../constants';\n\nexport default class HeaderComponent extends MuzeComponent {\n    constructor (params) {\n        super(params.name, params.component.getLogicalSpace(), 0);\n        this.setParams(params);\n    }\n\n    renderHeader (container) {\n        const layoutConfig = this.params.config;\n        container = selectElement(container);\n        const { align } = layoutConfig;\n        const sel = container\n          .selectAll(`.${layoutConfig.classPrefix}-inner-container`)\n          .data([this.name]);\n        sel.exit().remove();\n        const selEnter = sel.enter().append('div');\n\n        const cont = selEnter.merge(sel);\n        cont.classed(`${layoutConfig.classPrefix}-inner-container`, true);\n        const { height, width } = this.boundBox();\n        this.component.setAvailableSpace(width, height);\n\n        this.component && this.component.render(cont.node());\n\n        cont.selectAll('div').classed(`${layoutConfig.classPrefix}-inner-content`, true);\n        cont.style('width', `${100}%`);\n\n        if (layoutConfig && this.component) {\n            cont.style('float', LEFT)\n                            .style('text-align', align);\n                            // .style(`padding-${position === TOP ? BOTTOM : TOP}`, `${padding}px`);\n        }\n    }\n\n    draw (container) {\n        this.renderHeader(container || document.getElementById(this.renderAt()));\n    }\n\n    updateWrapper (params) {\n        this.name(params.name);\n        this.boundBox(params.component.getLogicalSpace());\n        return this;\n    }\n\n    setParams (params) {\n        this.component = params.component;\n        this.params = params;\n        this.target(params.config.target);\n        this.position(params.config.position);\n        this.className(params.config.className);\n        this.alignWith(params.config.alignWith);\n        this.alignment(params.config.alignment);\n    }\n\n    setSpatialConfig (conf) {\n        this.boundBox({ top: conf.y,\n            left: conf.x,\n            width: conf.width,\n            height: conf.height });\n        this.renderAt(conf.renderAt);\n    }\n}\n","import { makeElement, selectElement } from 'muze-utils';\nimport MuzeComponent from './muze-chart-component';\nimport {\n     LEFT, RIGHT, VERTICAL, HORIZONTAL, TOP, BOTTOM, HORIZONTAL_CENTER, VERTICAL_CENTER\n} from '../../constants';\nimport { ROW_MATRIX_INDEX, COLUMN_MATRIX_INDEX } from '../../../../layout/src/enums/constants';\n\nfunction defaultAlignmentHelper (position) {\n    let alignment = null;\n    const alignWith = `${ROW_MATRIX_INDEX[1]}-${COLUMN_MATRIX_INDEX[1]}`;\n    switch (position) {\n    case TOP:\n    case BOTTOM:\n        alignment = HORIZONTAL_CENTER;\n        break;\n    case LEFT:\n    case RIGHT:\n        alignment = VERTICAL_CENTER;\n        break;\n    default:\n        alignment = VERTICAL_CENTER;\n    }\n    return { alignment, alignWith };\n}\nexport default class LegendComponent extends MuzeComponent {\n    constructor (params) {\n        super(params.name, params.config.measurement.legendSpace, 0);\n        this.setParams(params);\n    }\n\n    renderLegend (container) {\n        container = selectElement(container);\n        const sectionComponents = [];\n        const { position, classPrefix } = this.params.config;\n        const legendMount = makeElement(container, 'div', [this.components],\n                                        `${classPrefix}-inner-content`, {}, d => d);\n        legendMount.classed(`${classPrefix}-legend`, true);\n        const align = (position === LEFT || position === RIGHT) ? VERTICAL : HORIZONTAL;\n        const legWidth = this.newDimensions.width;\n        const legHeight = this.newDimensions.height;\n\n        [container, legendMount].forEach((elem) => {\n            elem.style('width', `${Math.floor(legWidth)}px`)\n                            .style('height', `${legHeight}px`)\n                            .style('float', LEFT);\n        });\n\n        if (align === VERTICAL) {\n            let sections = -1;\n            let currHeight = legHeight;\n            let currWidth = 0;\n\n            this.components.forEach((legendInfo) => {\n                const leg = legendInfo.legend;\n                if (leg.measurement().height > currHeight) {\n                    sections++;\n                    currWidth = 0;\n                    currHeight = legHeight;\n                } else {\n                    sections < 0 && sections++;\n                }\n                sectionComponents[sections] = sectionComponents[sections] || [];\n                currHeight -= Math.min(leg.measurement().height, currHeight);\n                currWidth = Math.max(Math.min(leg.measurement().width, leg.measurement().maxWidth), currWidth);\n                sectionComponents[sections].push({\n                    legend: leg,\n                    legendHeight: legHeight,\n                    legendWidth: currWidth\n                });\n            });\n\n            const mount = makeElement(legendMount, ['div'], sectionComponents, `${classPrefix}-legend-section`);\n            // mount.each((d, i) => selectElement(this).classed(`${classPrefix}-legend-section-${i}`, true));\n            mount.classed(`${classPrefix}-legend-vertical-section`, true)\n                            .style('width', d => `${d[0].legendWidth}px`);\n            makeElement(mount, ['div'], d => d, `${classPrefix}-legend-components`, {}, d => d.legend.id())\n                            .each(function (d) {\n                                d.legend.mount(this);\n                            })\n                            .style('width', d => `${d.legendWidth}px`);\n        } else {\n            const mount = makeElement(legendMount, 'div', [1], `${classPrefix}-legend-section`);\n            mount.classed(`${classPrefix}-legend-horizontal-section`, true);\n            mount.classed(`${classPrefix}-legend-section-${0}`, true)\n                            .style('width', `${legWidth}px`);\n\n            makeElement(mount, 'div', this.components, `${classPrefix}-legend-components`, {}, d => d.legend.id())\n                            .each(function (d) { d.legend.mount(this); })\n                            .style('width', d => `${d.legend.measurement().width}px`);\n        }\n    }\n\n    draw (container) {\n        this.renderLegend(container || document.getElementById(this.renderAt()));\n    }\n\n    updateWrapper (params) {\n        this.name(params.name);\n        this.boundBox(params.config.measurement.legendSpace);\n        this.setParams(params);\n        return this;\n    }\n\n    setParams (params) {\n        this.components = params.component;\n        this.params = params;\n        this.target(params.config.target);\n        this.position(params.config.position);\n        const { alignWith, alignment } = defaultAlignmentHelper(params.config.position);\n        this.className(params.config.className);\n        this.alignWith(params.config.alignWith || alignWith);\n        this.alignment(params.config.alignment || alignment);\n    }\n\n}\n","import {\n    selectElement,\n    makeElement,\n    getD3Drag,\n    getEvent,\n    getWindow,\n    hasTouch\n} from 'muze-utils';\nimport './scroll-bar.scss';\nimport { WIDTH, HEIGHT } from '../../../constants';\n\nconst d3Drag = getD3Drag();\n\nconst arrowSizeMap = {\n    left: WIDTH,\n    right: WIDTH,\n    top: HEIGHT,\n    bottom: HEIGHT\n};\n\nexport const getUnitPositions = (unitMeasures, totalLength, viewLength) => {\n    let currentLen = 0;\n    const measures = unitMeasures.primary && unitMeasures.primary.length ?\n        unitMeasures.primary : unitMeasures.secondary;\n\n    return measures.map((e) => {\n        const unitPosition = currentLen * 100 / (totalLength - viewLength);\n        currentLen += e;\n        return unitPosition;\n    });\n};\n\nexport const createScrollBarArrow = (mount, type, config) => {\n    const {\n        classPrefix,\n        thickness\n    } = config;\n    const arrow = makeElement(mount, 'div', [type], `${classPrefix}-scroll-arrow-${type}`);\n\n    arrow.classed(`${classPrefix}-scroll-arrow`, true);\n    arrow.style(arrowSizeMap[type], `${thickness}px`);\n\n    const chevron = makeElement(arrow, 'div', [1], `${classPrefix}-scroll-arrow-chevron`);\n\n    chevron.attr('id', `${classPrefix}-scroll-arrow-chevron-${type}`);\n\n    return arrow;\n};\n\nexport const createScrollBarRect = (mount, config) => {\n    const {\n        classPrefix\n    } = config;\n    const rect = makeElement(mount, 'div', [1], `${classPrefix}-scroll-rect`);\n    const mover = makeElement(rect, 'div', [1], `${classPrefix}-scroll-mover`);\n\n    return { rect, mover };\n};\n\nexport const applyRectClick = (scrollMaker, moverRect) => {\n    const {\n        rect\n    } = moverRect;\n\n    rect.on('click', () => {\n        const event = getEvent();\n        scrollMaker.emptyScrollAreaClick(event);\n    });\n};\n\nconst applyMoverDrag = (scrollMaker, moverRect) => {\n    let startPos = {};\n    let moverStartPos = 0;\n    let endPos = {};\n    const {\n        mover,\n        rect\n    } = moverRect;\n    const rectStartPos = rect.node().getBoundingClientRect();\n\n    mover.call(d3Drag()\n                    .on('start', () => {\n                        const event = getEvent();\n\n                        moverStartPos = mover.node().getBoundingClientRect();\n                        startPos = {\n                            x: event.x,\n                            y: event.y\n                        };\n                    })\n                    .on('drag', () => {\n                        const event = getEvent();\n                        const window = getWindow();\n\n                        endPos = {\n                            x: event.x,\n                            y: event.y\n                        };\n                        const distanceMoved = {\n                            x: endPos.x - startPos.x,\n                            y: endPos.y - startPos.y\n                        };\n                        const actualPosition = {\n                            x: moverStartPos.x + distanceMoved.x - rectStartPos.x + window.pageXOffset,\n                            y: moverStartPos.y + distanceMoved.y - rectStartPos.y + window.pageYOffset\n                        };\n\n                        scrollMaker.changeMoverPosition(actualPosition);\n                    }));\n};\n\nconst applyScrollMouseDownAction = (moverRect, scrollMaker, speed) => {\n    const {\n        mover,\n        rect\n    } = moverRect;\n    const { x, y } = mover.node().getBoundingClientRect();\n    const { x: rectX, y: rectY } = rect.node().getBoundingClientRect();\n\n    scrollMaker.changeMoverPosition({ x: x - rectX + speed, y: y - rectY + speed });\n};\n\nconst registerListenerOnArrow = (scrollMaker, moverRect, arrowType, speed) => {\n    let timer = '';\n    const arrow = scrollMaker._components[arrowType];\n    const isTouchDevice = hasTouch();\n\n    arrow.on(isTouchDevice ? 'touchstart' : 'mousedown', () => {\n        const event = getEvent();\n\n        event.preventDefault();\n\n        timer = setInterval(() => {\n            applyScrollMouseDownAction(moverRect, scrollMaker, speed);\n        }, 100);\n    }).on(isTouchDevice ? 'touchend' : 'mouseup', () => {\n        const event = getEvent();\n\n        event.preventDefault();\n\n        clearInterval(timer);\n    }).on('click', () => {\n        applyScrollMouseDownAction(moverRect, scrollMaker, speed);\n    });\n};\n\nexport const registerListeners = (scrollMaker) => {\n    const {\n        moverRect\n    } = scrollMaker._components;\n\n    const speed = scrollMaker.config().speed;\n\n    registerListenerOnArrow(scrollMaker, moverRect, 'prevArrow', -speed);\n    applyMoverDrag(scrollMaker, moverRect);\n    applyRectClick(scrollMaker, moverRect);\n    registerListenerOnArrow(scrollMaker, moverRect, 'nextArrow', speed);\n};\n\nexport const scrollContainerHelper = (mountPoint, config, dimensions, type) => {\n    const {\n        classPrefix\n    } = config;\n    const scrollBarContainer = makeElement(selectElement(mountPoint), 'div', [1], `#${classPrefix}-scroll-bar-${type}`);\n\n    scrollBarContainer.classed(`${classPrefix}-scroll-bar`, true);\n    scrollBarContainer.style(WIDTH, `${dimensions.width}px`);\n    scrollBarContainer.style(HEIGHT, `${dimensions.height}px`);\n    return scrollBarContainer;\n};\n\n","import { mergeRecursive } from 'muze-utils';\n\nexport const PROPS = {\n\n    config: {\n        sanitization: (context, value) => {\n            value = mergeRecursive(context._config, value);\n            return value;\n        }\n    },\n    manager: {},\n    unitPositions: {},\n    logicalSpace: {}\n};\n\n","import { ERROR_MSG, generateGetterSetters } from 'muze-utils';\nimport {\n    scrollContainerHelper,\n    registerListeners\n} from './helper';\nimport { PROPS } from './props';\n\nexport class ScrollMaker {\n\n    constructor () {\n        this._components = {};\n        this._logicalSpace = {};\n        this._attachedScrollAction = () => {};\n        this._config = {\n            thickness: 10,\n            speed: 2\n        };\n        this._unitPositions = null;\n\n        generateGetterSetters(this, PROPS);\n    }\n\n    static type () {\n        throw new ERROR_MSG('Method not implemented');\n    }\n\n    emptyScrollAreaClick () {\n        throw new ERROR_MSG('Method not implemented');\n    }\n\n    changeMoverPosition () {\n        throw new ERROR_MSG('Method not implemented');\n    }\n\n    scrollTo () {\n        throw new ERROR_MSG('Method not implemented');\n    }\n\n    scrollDeltaTo () {\n        throw new ERROR_MSG('Method not implemented');\n    }\n\n    createScroll (mountPoint) {\n        const config = this.config();\n\n        return {\n            scrollBarContainer: scrollContainerHelper(mountPoint, config, this.logicalSpace(), this.constructor.type())\n        };\n    }\n\n    attachScrollAction (externalScrollAction) {\n        this._attachedScrollAction = externalScrollAction;\n        return this;\n    }\n\n    detachScrollAction () {\n        this._attachedScrollAction = () => {};\n        return this;\n    }\n\n    getLogicalSpace () {\n        return this.logicalSpace();\n    }\n\n    registerListeners () {\n        registerListeners(this);\n        return this;\n    }\n\n    remove () {\n        this._components.scrollBarContainer.remove();\n        return this;\n    }\n}\n\n","import MuzeComponent from './muze-chart-component';\nimport { HorizontalScrollMaker } from './scroll-bar-maker/horizontal-scroll-maker';\nimport { VerticalScrollMaker } from './scroll-bar-maker/vertical-scroll-maker';\n\nconst scrollMakerMap = {\n    horizontal: HorizontalScrollMaker,\n    vertical: VerticalScrollMaker\n};\n\n/**\n * Scroll Component acts as a wrapper over the scoll bars created using the respective Scroll Makers\n * This provides a consistent API for layouting using the tree layout system.\n *\n *\n * @class\n * @public\n * @module ScrollComponent\n */\nexport default class ScrollComponent extends MuzeComponent {\n\n    constructor (params) {\n        const ScrollMaker = scrollMakerMap[params.config.type];\n\n        params.component = new ScrollMaker();\n        params.component.config(params.config.scrollBarComponentConfig);\n        params.component.logicalSpace(params.dimensions);\n        super(params.name, params.component.getLogicalSpace(), 0);\n        this.setParams(params);\n    }\n\n    manager (...manager) {\n        if (manager.length) {\n            this.component.manager(manager[0]);\n            return this;\n        }\n        return this.component.manager();\n    }\n\n    /**\n     * Scrolls based on the actual pixel value provided. Since it's a delta change, the input will be\n     * a delta between (-Infinity, Infinity), based on which the scroll will occur. Only a delta movement in\n     * scroll occurs\n     *\n     * @public\n     *\n     * @param {number} delta Based on which the scroll will have a delta change in position\n     * @return {ScrollComponent} Instance of the ScrollComponent\n     */\n    scrollDeltaTo (delta) {\n        this.component.scrollDeltaTo(delta);\n        return this;\n    }\n\n    /**\n     * Scrolls to the specific point in the page. The input is provided as a percentage (0 - 100)\n     *\n     * @public\n     *\n     * @param {number} scrollPercentage Its the percentage based on which the scroll action will occur\n     * @return {ScrollComponent} Instance of the ScrollComponent\n     */\n    scrollTo (scrollPercentage) {\n        this.component.scrollTo(scrollPercentage);\n        return this;\n    }\n\n    /**\n     * Scrolls to the specific point in the page based on the unit index.\n     * The input is provided as a number represting the index for the unit.\n     * For vertical scroll, it's the row index that will be required.\n     * For horizontal scroll, it's the column index that will be required\n     *\n     * @public\n     *\n     * @param {number} unitIndex Index of the unit appearing in the grid\n     * @return {ScrollComponent} Instance of the ScrollComponent\n     */\n    scrollToUnitIndex (unitIndex) {\n        const unitPositions = this.component.unitPositions();\n        const sanitizedUnitIndex = Math.min(Math.max(0, unitIndex), unitPositions.length - 1);\n        this.component.scrollTo(unitPositions[sanitizedUnitIndex]);\n        return this;\n    }\n\n    /**\n     * Provides the positions of the units(either horizontal or vertical based on the type\n     * of scroll bar it wraps) relative to it's container. The position of the first unit starts at 0\n     *\n     *\n     * @public\n     *\n     * @return {Array} Positions of units either horizontal or vertical\n     */\n    getScrollPositionsForUnits () {\n        return this.component.unitPositions();\n    }\n\n    draw (container) {\n        this.component.createScroll(container || document.getElementById(this.renderAt()));\n        return this;\n    }\n\n    /**\n     * Can be used to attach a scroll action whenever scrolling occurs in the canvas\n     *\n     * @public\n     * @param {number} externalAction Action to be attached during scroll\n     * @return {ScrollComponent} Instance of the ScrollComponent\n     */\n    attachScrollAction (externalAction) {\n        this.component.attachScrollAction(externalAction);\n        return this;\n    }\n\n    /**\n     * Can be used to detach the scroll action already bound to the scroll bar\n     *\n     * @public\n     * @return {ScrollComponent} Instance of the ScrollComponent\n     */\n    detachScrollAction () {\n        this.component.detachScrollAction();\n        return this;\n    }\n\n    updateWrapper (params) {\n        this.name(params.name);\n        this.component.config(params.config.scrollBarComponentConfig);\n        this.component.logicalSpace(params.dimensions);\n        this.boundBox(this.component.getLogicalSpace());\n        this.setParams(params);\n        return this;\n    }\n\n    setParams (params) {\n        this.component = params.component || this.component;\n        this.params = params;\n        this.target(params.config.target);\n        this.position(params.config.position);\n        this.className(params.config.className);\n        this.alignWith(params.config.alignWith);\n        this.alignment(params.config.alignment);\n    }\n\n    remove () {\n        this.component.remove();\n    }\n}\n","import { ScrollMaker } from './scroll-maker';\nimport { createScrollBarRect, createScrollBarArrow, getUnitPositions } from './helper';\nimport { HORIZONTAL, HEIGHT, WIDTH, LEFT } from '../../../constants';\n\nexport class HorizontalScrollMaker extends ScrollMaker {\n\n    /**\n     * Describes the type of the ScrollMaker\n     *\n     * @public\n     *\n     * @return {String} Returns the type of scroll maker: horizontal\n     */\n    static type () {\n        return HORIZONTAL;\n    }\n\n    createScroll (mountPoint, dimensions = this.logicalSpace()) {\n        const config = this.config();\n        const { scrollBarContainer } = super.createScroll(mountPoint, config, dimensions);\n        const prevArrow = createScrollBarArrow(scrollBarContainer, 'left', config);\n        const moverRect = createScrollBarRect(scrollBarContainer, config);\n        const nextArrow = createScrollBarArrow(scrollBarContainer, 'right', config);\n        const {\n            mover,\n            rect\n        } = moverRect;\n\n        const { height, width, totalLength, viewLength, unitWidths } = this.logicalSpace();\n        const scrollBarWithouArrowLength = width - height * 2;\n\n        rect.style(WIDTH, `${dimensions.width - height * 2}px`);\n        rect.style(HEIGHT, `${100}%`);\n        mover.style(WIDTH, `${(viewLength * scrollBarWithouArrowLength) / totalLength}px`);\n        mover.style(HEIGHT, `${100}%`);\n        mover.style(LEFT, `${0}px`);\n\n        this._components = {\n            prevArrow,\n            nextArrow,\n            moverRect,\n            scrollBarContainer\n        };\n        this._scrollBarWithouArrowLength = scrollBarWithouArrowLength;\n        this.unitPositions(getUnitPositions(unitWidths, totalLength, viewLength));\n        this.registerListeners();\n    }\n\n    emptyScrollAreaClick (event) {\n        const {\n            mover,\n            rect\n        } = this._components.moverRect;\n        const speed = this.config().speed;\n        const { x, y } = mover.node().getBoundingClientRect();\n        const { x: rectX, y: rectY } = rect.node().getBoundingClientRect();\n        let positionAdjuster = speed * 10;\n        if (event.x < x) {\n            positionAdjuster = -speed * 10;\n        }\n        this.changeMoverPosition({ x: x - rectX + positionAdjuster, y: y - rectY + positionAdjuster });\n    }\n\n    changeMoverPosition (newPosition) {\n        let currentPos;\n        const {\n            mover,\n            rect\n        } = this._components.moverRect;\n        const rectStartPos = rect.node().getBoundingClientRect();\n        const moverPos = mover.node().getBoundingClientRect();\n        const {\n            totalLength\n         } = this.logicalSpace();\n\n        if (newPosition.x < 0) {\n            currentPos = 0;\n        } else if (newPosition.x + moverPos.width > rectStartPos.width) {\n            currentPos = rectStartPos.width - moverPos.width;\n        } else {\n            currentPos = newPosition.x;\n        }\n\n        mover.style(LEFT, `${currentPos}px`);\n        const totalDistance = this._scrollBarWithouArrowLength;\n        const movedViewLength = (currentPos * totalLength) / totalDistance;\n\n        this.manager().performAttachedScrollFunction(this.constructor.type(), movedViewLength);\n    }\n\n    scrollDeltaTo (delta) {\n        const {\n            mover,\n            rect\n        } = this._components.moverRect;\n        const moverPos = mover.node().getBoundingClientRect();\n        const rectStartPos = rect.node().getBoundingClientRect();\n\n        this.changeMoverPosition({ y: 0, x: moverPos.x - rectStartPos.x - delta });\n        return this;\n    }\n\n    /**\n     * Scrolls to the specific point in the page. The input is provided as a percentage (0 - 100)\n     *\n     * @public\n     *\n     * @param {number} scrollPercentage Its the percentage based on which the scroll action will occur\n     * @return {HorizontalScrollMaker} Instance of the HorizontalScrollMaker\n     */\n    scrollTo (scrollPercentage) {\n        const {\n            mover\n        } = this._components.moverRect;\n        const moverPos = mover.node().getBoundingClientRect();\n        const movement = (scrollPercentage * (this._scrollBarWithouArrowLength - moverPos.width)) / 100;\n\n        this.changeMoverPosition({ y: 0, x: movement });\n        return this;\n    }\n\n}\n\n","import { ScrollMaker } from './scroll-maker';\nimport { createScrollBarRect, createScrollBarArrow, getUnitPositions } from './helper';\nimport { VERTICAL, TOP, HEIGHT, WIDTH } from '../../../constants';\n\nexport class VerticalScrollMaker extends ScrollMaker {\n\n    /**\n     * Describes the type of the ScrollMaker\n     *\n     * @public\n     *\n     * @return {String} Returns the type of scroll maker: vertical\n     */\n    static type () {\n        return VERTICAL;\n    }\n\n    createScroll (mountPoint, dimensions = this.logicalSpace()) {\n        const config = this.config();\n        const { scrollBarContainer } = super.createScroll(mountPoint, dimensions);\n        const prevArrow = createScrollBarArrow(scrollBarContainer, 'top', config);\n        const moverRect = createScrollBarRect(scrollBarContainer, config);\n        const nextArrow = createScrollBarArrow(scrollBarContainer, 'bottom', config);\n        const {\n            mover,\n            rect\n        } = moverRect;\n        const { height, width, totalLength, viewLength, unitHeights } = this.logicalSpace();\n        const scrollBarWithouArrowLength = height - width * 2;\n\n        rect.style(HEIGHT, `${scrollBarWithouArrowLength}px`);\n        rect.style(WIDTH, `${100}%`);\n        mover.style(WIDTH, `${100}%`);\n        mover.style(HEIGHT, `${(viewLength * scrollBarWithouArrowLength) / totalLength}px`);\n        mover.style(TOP, `${0}px`);\n\n        this._components = {\n            prevArrow,\n            nextArrow,\n            moverRect,\n            scrollBarContainer\n        };\n        this._scrollBarWithouArrowLength = scrollBarWithouArrowLength;\n\n        this.unitPositions(getUnitPositions(unitHeights, totalLength, viewLength));\n        this.registerListeners();\n    }\n\n    emptyScrollAreaClick (event) {\n        const {\n            mover,\n            rect\n        } = this._components.moverRect;\n        const speed = this.config().speed;\n        const { x, y } = mover.node().getBoundingClientRect();\n        const { x: rectX, y: rectY } = rect.node().getBoundingClientRect();\n\n        let positionAdjuster = speed * 10;\n        if (event.y < y) {\n            positionAdjuster = -speed * 10;\n        }\n        this.changeMoverPosition({ x: x - rectX + positionAdjuster, y: y - rectY + positionAdjuster });\n    }\n\n    changeMoverPosition (newPosition) {\n        let currentPos;\n        const {\n            mover,\n            rect\n        } = this._components.moverRect;\n        const {\n            totalLength\n         } = this.logicalSpace();\n        const rectStartPos = rect.node().getBoundingClientRect();\n        const moverPos = mover.node().getBoundingClientRect();\n\n        if (newPosition.y < 0) {\n            currentPos = 0;\n        } else if (newPosition.y + moverPos.height > rectStartPos.height) {\n            currentPos = rectStartPos.height - moverPos.height;\n        } else {\n            currentPos = newPosition.y;\n        }\n        mover.style(TOP, `${currentPos}px`);\n        const totalDistance = this._scrollBarWithouArrowLength;\n        const movedViewLength = (currentPos * totalLength) / totalDistance;\n\n        this.manager().performAttachedScrollFunction(this.constructor.type(), movedViewLength);\n    }\n\n    /**\n     * Scrolls based on the actual pixel value provided. Since it's a delta change, the input will be\n     * a delta between (-Infinity, Infinity), based on which the scroll will occur. Only a delta movement in\n     * scroll occurs\n     *\n     * @public\n     *\n     * @param {number} delta Based on which the scroll will have a delta change in position\n     * @return {VerticalScrollMaker} Instance of the VerticalScrollMaker\n     */\n    scrollDeltaTo (delta) {\n        const {\n            mover,\n            rect\n        } = this._components.moverRect;\n        const moverPos = mover.node().getBoundingClientRect();\n        const rectStartPos = rect.node().getBoundingClientRect();\n\n        this.changeMoverPosition({ y: moverPos.y - rectStartPos.y - delta, x: 0 });\n        return this;\n    }\n\n    /**\n     * Scrolls to the specific point in the page. The input is provided as a percentage (0 - 100)\n     *\n     * @public\n     *\n     * @param {number} scrollPercentage Its the percentage based on which the scroll action will occur\n     * @return {VerticalScrollMaker} Instance of the VerticalScrollMaker\n     */\n    scrollTo (scrollPercentage) {\n        const {\n            mover\n        } = this._components.moverRect;\n        const moverPos = mover.node().getBoundingClientRect();\n        const movement = (scrollPercentage * (this._scrollBarWithouArrowLength - moverPos.height)) / 100;\n\n        this.changeMoverPosition({ x: 0, y: movement });\n        return this;\n    }\n\n}\n","import { makeElement } from 'muze-utils';\nimport { cellSpanMaker, applySpans } from '../../../../layout/src/grid-layout/span-maker';\nimport { applyBorders } from '../../../../layout/src/grid-layout/border-helper';\n\nimport {\n     TOP, CENTER\n} from '../../../../layout/src/enums/constants';\nimport MuzeComponent from './muze-chart-component';\nimport { WIDTH, HEIGHT, HIDDEN, OVERFLOW, AUTO, VISIBLE } from '../../constants';\n\nconst renderPlaceholders = (cells) => {\n    // Rendering content within placeholders\n    cells.each(function (cell) {\n        cell.placeholder.render(this);\n    });\n};\n\nexport default class MatrixComponent extends MuzeComponent {\n\n    constructor (params) {\n        super(params.name, params.config.dimensions, 0);\n        this.setParams(params);\n        this.className(params.config.className);\n    }\n\n    applyScroll (container) {\n        const row = this.params.config.row;\n        const column = this.params.config.column;\n        const { horizontal, vertical } = this.params.config.scrollInfo;\n        container.style(OVERFLOW, VISIBLE);\n        container.style(WIDTH, AUTO);\n        container.style(HEIGHT, AUTO);\n\n        if (horizontal && column === 1) {\n            container.style(OVERFLOW, HIDDEN);\n            container.style(WIDTH, '100%');\n        }\n\n        if (vertical && row === CENTER) {\n            container.style(OVERFLOW, HIDDEN);\n            container.style(HEIGHT, '100%');\n        }\n    }\n\n    renderMatrix (mountPoint) {\n        // Creating containers for each matrix individually\n        const classPrefix = this.params.config.classPrefix;\n        const row = this.params.config.row;\n        const column = this.params.config.column;\n        const dimensions = this.params.config.dimensions;\n        const border = this.params.config.border;\n\n        // Creating containers for each matrix individually\n        const containerForMatrix = makeElement(mountPoint, 'div', [1], `${classPrefix}-grid-${row}-${column + 1}`)\n            .classed(`${classPrefix}-grid-${row}`, true)\n            .classed(`${classPrefix}-grid`, true);\n\n        this.applyScroll(containerForMatrix);\n\n        const {\n            viewMatrix,\n            spans\n        } = cellSpanMaker(this.component, row, column);\n\n            // Rendering the table components\n        const { cells } = this.renderTable(containerForMatrix, `${classPrefix}-grid`, viewMatrix);\n\n        applySpans(cells, spans, { dimensions, border }, `${row}-${column}`);\n        renderPlaceholders(cells);\n\n        cells.exit().each((cell) => {\n            cell.placeholder.remove();\n        });\n\n        applyBorders(cells, border, row, column);\n    }\n\n    renderTable (mount, className, rowData) {\n        const table = makeElement(mount, 'table', ['layout'], `${className}-table`);\n        const body = makeElement(table, 'tbody', ['layout'], `${className}-body`);\n        const rows = makeElement(body, 'tr', rowData, `${className}-tr`);\n        const cells = makeElement(rows, 'td', (d, i) => d.filter(e => e !== null).map(e =>\n                                  ({ placeholder: e, rowIndex: i })), `${className}-td`, {}, key => key.placeholder.id);\n\n        return { table, body, rows, cells };\n    }\n\n    draw (container) {\n        this.renderMatrix(container || document.getElementById(this.renderAt()));\n    }\n\n    updateWrapper (params) {\n        this.name(params.name);\n        this.boundBox(params.config.dimensions);\n        this.setParams(params);\n        return this;\n    }\n\n    setParams (params) {\n        this.component = params.component;\n        this.params = params;\n        this.target(params.config.target);\n        this.position(TOP);\n        this.className(params.config.className);\n    }\n}\n","import { selectElement, getEvent } from 'muze-utils';\nimport MuzeComponent from './muze-chart-component';\nimport MatrixComponent from './matrix-component';\nimport { ROW_MATRIX_INDEX, COLUMN_MATRIX_INDEX } from '../../../../layout/src/enums/constants';\n\n/**\n * Based on the type of scroll, it changes the scrollLeft/scrollTop property of the specific\n * elements based on the scroll distance provided\n *\n *\n */\nconst applyScrollAction = (elem, classPrefix, scollDistance, type) => {\n    selectElement(elem)\n                    .selectAll(`.${classPrefix}-grid`)\n                    .property(type, scollDistance);\n};\n\n/**\n * Applies the action of the scroll by actually scrolling the respective matrices based on the\n * type of scroll. It returns a function which has both the scroll methods available\n *\n * @return {Object} contains the horizontal and vertical scroll actions on the grid component\n */\nconst scrollActionApplier = (movement, context) => {\n    const classPrefix = context.params.config.classPrefix;\n\n    return {\n        horizontal: () => {\n            [0, 1, 2].forEach(e =>\n                applyScrollAction(`#${context.component[e][1].renderAt()}`, classPrefix, movement, 'scrollLeft'));\n        },\n        vertical: () => {\n            [0, 1, 2].forEach(e =>\n                applyScrollAction(`#${context.component[1][e].renderAt()}`, classPrefix, movement, 'scrollTop'));\n        }\n    };\n};\n\nexport default class GridComponent extends MuzeComponent {\n\n    constructor (params) {\n        super(params.name, params.config.dimensions, 0);\n        this.gridComponents = [];\n        this.setParams(params);\n    }\n\n    sanitizeGrid () {\n        let height = 0;\n        let width = 0;\n        const { viewMatricesInfo, layoutDimensions } = this.component.viewInfo();\n        const scrollInfo = this.component.scrollInfo();\n\n        for (let i = 0; i < 3; i++) {\n            if (!(this.gridComponents.length && this.gridComponents[i] instanceof Array)) {\n                this.gridComponents[i] = [];\n            }\n            for (let j = 0; j < 3; j++) {\n                const matrixDim = { height: layoutDimensions.viewHeight[i], width: layoutDimensions.viewWidth[j] };\n                const matrix = viewMatricesInfo.matrices[`${ROW_MATRIX_INDEX[i]}`][j];\n                const matrixName = `${ROW_MATRIX_INDEX[i]}-${COLUMN_MATRIX_INDEX[j]}`;\n                const matrixConfig = {\n                    dimensions: matrixDim,\n                    border: layoutDimensions.border,\n                    classPrefix: this.params.config.classPrefix,\n                    scrollInfo,\n                    row: ROW_MATRIX_INDEX[i],\n                    column: j\n                };\n                if (this.gridComponents[i][j] instanceof MuzeComponent) {\n                    this.gridComponents[i][j].updateWrapper({\n                        name: matrixName,\n                        component: matrix,\n                        config: matrixConfig\n                    });\n                } else {\n                    const matrixWrapper = new MatrixComponent({\n                        name: matrixName,\n                        component: matrix,\n                        config: matrixConfig\n                    });\n                    this.gridComponents[i].push(matrixWrapper);\n                }\n                if (i === 0) {\n                    width += matrixDim.width;\n                }\n                if (j === 0) {\n                    height += matrixDim.height;\n                }\n            }\n        }\n        this.boundBox({ height, width });\n\n        this.component = this.gridComponents;\n        this.allComponents = this.gridComponents;\n    }\n\n    scrollBarManager (...manager) {\n        if (manager.length) {\n            this._scrollBarManager = manager[0];\n            return this;\n        }\n        return this._scrollBarManager;\n    }\n\n    /**\n     * Attaches a mousewheel listener to the center matrix, based on which the scrolling can occur.\n     * It uses the scroll component to change the position of the scroller, which ultimately scrolls the center matrix\n     *\n     *\n     * @return {GridComponent} Instance of the GridComponent\n     */\n    attachScrollListener () {\n        selectElement(`#${this.component[1][1].renderAt()}`)\n                        .on('wheel', () => {\n                            const event = getEvent();\n                            const {\n                                wheelDeltaX,\n                                wheelDeltaY\n                            } = event;\n\n                            // Prevent default behaviour and stop propagating\n                            event.preventDefault();\n                            event.stopPropagation();\n\n                            // Scrolling horizontally\n                            if (wheelDeltaX !== 0 && Math.abs(wheelDeltaX) > Math.abs(wheelDeltaY)) {\n                                this.scrollBarManager().triggerScrollBarAction('horizontal', wheelDeltaX);\n                            }\n\n                            // Scrolling Vertically\n                            if (wheelDeltaY !== 0 && Math.abs(wheelDeltaX) < Math.abs(wheelDeltaY)) {\n                                this.scrollBarManager().triggerScrollBarAction('vertical', wheelDeltaY);\n                            }\n                        });\n        return this;\n    }\n\n    performScrollAction (direction, movedView) {\n        scrollActionApplier(movedView, this)[direction]();\n        return this;\n    }\n\n    getBoundBox () {\n        const { top, left } = this.component[0][0].boundBox();\n        const { height, width } = this.boundBox();\n\n        return {\n            top,\n            left,\n            height,\n            width\n        };\n    }\n\n    updateWrapper (params) {\n        this.name(params.name);\n        this.boundBox(params.config.dimensions);\n        this.setParams(params);\n        return this;\n    }\n\n    setParams (params) {\n        this.component = params.component;\n        this.params = params;\n        this.target(params.config.target);\n        this.className(params.config.className);\n        this.sanitizeGrid();\n        return this;\n    }\n}\n","import { TITLE, SUB_TITLE, LEGEND, VERTICAL, HORIZONTAL, WIDTH, HEIGHT, TOP, LEFT, RIGHT } from '../constants';\nimport HeaderComponent from './components/headerComponent';\nimport LegendComponent from './components/legendComponent';\nimport ScrollComponent from './components/scroll-component';\nimport GridComponent from './components/grid-component';\nimport { TITLE_CONFIG, SUB_TITLE_CONFIG, GRID, CANVAS, LAYOUT_ALIGN } from './defaults';\nimport { ROW_MATRIX_INDEX, COLUMN_MATRIX_INDEX, CENTER } from '../../../layout/src/enums/constants';\n\n// Mapping between types of headers and their required configs for wrapper creation\nconst headerMap = {\n    title: {\n        headerCell: 'titleCell',\n        configType: TITLE_CONFIG\n    },\n    subtitle: {\n        headerCell: 'subtitleCell',\n        configType: SUB_TITLE_CONFIG\n    }\n};\n\n/**\n * Creates the wrapper for the header, i.e., title and subtitle to be used in the tree layout\n *\n *\n * @param {string} headerType type of header: title/subtite\n * @param {LayoutManager} layoutManager instance of Layout Manager which manages the layouting of the components\n * @param {Object} renderDetails Extra details required for rendering the headers\n * @return {Instance} Returns the respective wrappers\n */\nconst createHeaderWrapper = (headerType, layoutManager, renderDetails) => {\n    let wrapper = null;\n\n    const { components, layoutConfig } = renderDetails;\n    const { headerCell, configType } = headerMap[headerType];\n    const target = { target: CANVAS };\n\n    if (components.headers && components.headers[headerCell]) {\n        let headerConfig = layoutConfig[headerType];\n        const header = components.headers[headerCell];\n\n        headerConfig = Object.assign({}, headerConfig, {\n            classPrefix: layoutConfig.classPrefix,\n            ...target,\n            alignWith: `${ROW_MATRIX_INDEX[0]}-${COLUMN_MATRIX_INDEX[1]}`,\n            alignment: LAYOUT_ALIGN.LEFT,\n            className: configType.className\n        });\n\n        if (headerConfig.align === CENTER) {\n            headerConfig.alignment = null;\n            headerConfig.alignWith = null;\n        }\n        if (headerConfig.align === RIGHT) {\n            headerConfig.alignment = RIGHT;\n        }\n\n        const wrapperParams = {\n            name: headerType,\n            component: header,\n            config: headerConfig\n        };\n\n        const existingComponent = layoutManager.getComponent(headerType);\n        if (existingComponent) {\n            wrapper = existingComponent\n                      .updateWrapper(wrapperParams);\n        } else {\n            wrapper = new HeaderComponent(wrapperParams);\n        }\n    }\n    return wrapper;\n};\n\n// Mapping between types of scrollBars and their required configs for wrapper creation\nconst scrollBarMap = config => ({\n    vertical: {\n        componentName: 'verticalScrollBar',\n        width: 'thickness',\n        height: 'layoutBasedMeasure',\n        layoutBasedMeasure: HEIGHT,\n        viewMeasure: 'viewHeight',\n        rowAlign: 1,\n        colAlign: config.align === 'right' ? 2 : 0,\n        position: config.align,\n        alignment: TOP\n    },\n    horizontal: {\n        componentName: 'horizontalScrollBar',\n        width: 'layoutBasedMeasure',\n        layoutBasedMeasure: WIDTH,\n        viewMeasure: 'viewWidth',\n        height: 'thickness',\n        rowAlign: config.align === 'top' ? 0 : 2,\n        colAlign: 1,\n        position: config.align,\n        alignment: LEFT\n    }\n});\n\n/**\n * Creates the wrapper for the scroller, i.e., horizontal and vertical to be used in the tree layout\n *\n *\n * @param {string} scrollBarType type of scrollbar: horizontal/vertical\n * @param {LayoutManager} layoutManager instance of Layout Manager which manages the layouting of the components\n * @param {Object} renderDetails Extra details required for rendering the headers\n * @param {GridLayout} grid Instance of the grid layout\n * @return {Instance} Returns the respective wrappers\n */\nconst createScrollBarWrapper = (scrollBarType, layoutManager, renderDetails, grid) => {\n    let scrollBarWrapper = null;\n    const { layoutConfig } = renderDetails;\n    const target = { target: CANVAS };\n    const { scrollBar } = layoutConfig;\n    const { layoutDimensions } = grid.viewInfo();\n    const {\n        actualCenterMeasures,\n        unitHeights,\n        unitWidths\n    } = layoutDimensions;\n    const {\n        componentName, layoutBasedMeasure, width, height, rowAlign, colAlign,\n        viewMeasure, position, alignment\n    } = scrollBarMap(scrollBar[scrollBarType])[scrollBarType];\n    const dimensions = {\n        thickness: scrollBar.thickness,\n        layoutBasedMeasure: layoutDimensions[viewMeasure][1]\n    };\n    const isScroll = grid.scrollInfo()[scrollBarType];\n    const totalLength = actualCenterMeasures[layoutBasedMeasure];\n    const viewLength = layoutDimensions[viewMeasure][1];\n\n    const scrollConfig = Object.assign({}, {\n        classPrefix: layoutConfig.classPrefix,\n        ...target,\n        scrollBarComponentConfig: {\n            ...scrollBar,\n            classPrefix: layoutConfig.classPrefix\n        },\n\n        type: scrollBarType,\n        alignWith: `${ROW_MATRIX_INDEX[rowAlign]}-${COLUMN_MATRIX_INDEX[colAlign]}`,\n        alignment,\n        position\n    });\n\n    const wrapperParams = {\n        name: componentName,\n        config: scrollConfig,\n        dimensions: {\n            width: dimensions[width],\n            height: dimensions[height],\n            totalLength,\n            viewLength,\n            unitHeights,\n            unitWidths\n        }\n    };\n\n    const existingComponent = layoutManager.getComponent(componentName);\n\n    if (!isScroll) {\n        existingComponent && existingComponent.remove();\n        return null;\n    }\n\n    if (existingComponent) {\n        scrollBarWrapper = existingComponent\n                                .updateWrapper(wrapperParams);\n    } else {\n        scrollBarWrapper = new ScrollComponent(wrapperParams);\n    }\n\n    return scrollBarWrapper;\n};\n\n/**\n * Creates the wrapper for the legend to be used in the tree layout\n *\n *\n * @param {LayoutManager} layoutManager instance of Layout Manager which manages the layouting of the components\n * @param {Object} renderDetails Extra details required for rendering the headers\n * @return {Instance} Returns the respective wrappers\n */\nconst createLegendWrapper = (layoutManager, renderDetails) => {\n    let legendWrapper = null;\n    const { components, layoutConfig, measurement } = renderDetails;\n    const target = { target: CANVAS };\n\n    if (components.legends && components.legends.length) {\n        const legendConfig = { ...layoutConfig.legend, ...target, measurement };\n        const wrapperParams = {\n            name: LEGEND,\n            component: components.legends,\n            config: legendConfig\n        };\n\n        const existingComponent = layoutManager.getComponent(LEGEND);\n\n        if (existingComponent) {\n            legendWrapper = existingComponent\n                       .updateWrapper(wrapperParams);\n        } else {\n            legendWrapper = new LegendComponent(wrapperParams);\n        }\n    }\n    return legendWrapper;\n};\n\n/**\n * Creates the wrapper for the grid layout to be used in the tree layout\n *\n *\n * @param {LayoutManager} layoutManager instance of Layout Manager which manages the layouting of the components\n * @param {Object} renderDetails Extra details required for rendering the headers\n * @param {GridLayout} grid Instance of the grid layout\n * @return {Instance} Returns the respective wrappers\n */\nconst gridLayoutWrapper = (layoutManager, renderDetails, grid) => {\n    let gridWrapper = null;\n    const target = { target: CANVAS };\n    const { layoutConfig } = renderDetails;\n\n    const config = {\n        ...target,\n        pagination: layoutConfig.pagination,\n        classPrefix: layoutConfig.classPrefix,\n        dimensions: { height: 0, width: 0 }\n    };\n    const wrapperParams = {\n        name: GRID,\n        component: grid,\n        config\n    };\n    const existingComponent = layoutManager.getComponent(GRID);\n    if (existingComponent) {\n        gridWrapper = existingComponent\n                    .updateWrapper(wrapperParams);\n    } else {\n        gridWrapper = new GridComponent(wrapperParams);\n    }\n    return gridWrapper;\n};\n\n/**\n * Responsible for providing the wrapper creators for every component in Muze.\n * This function, when called, returns the set of components and their respective wrappers.\n *\n *\n *\n * @param {LayoutManager} layoutManager instance of Layout Manager which manages the layouting of the components\n * @param {GridLayout} grid Instance of the grid layout\n * @param {Object} renderDetails Extra details required for rendering the headers\n * @return {Instance} Returns the respective wrappers for each component\n */\nexport const componentWrapperMaker = (layoutManager, grid, renderDetails) => ({\n    title: createHeaderWrapper(TITLE, layoutManager, renderDetails),\n    subtitle: createHeaderWrapper(SUB_TITLE, layoutManager, renderDetails),\n    legend: createLegendWrapper(layoutManager, renderDetails),\n    grid: gridLayoutWrapper(layoutManager, renderDetails, grid),\n    verticalScrollBar: createScrollBarWrapper(VERTICAL, layoutManager, renderDetails, grid),\n    horizontalScrollBar: createScrollBarWrapper(HORIZONTAL, layoutManager, renderDetails, grid)\n});\n","export class ScrollManager {\n\n    constructor () {\n        this._scrollBarComponents = {};\n        this._attachedComponents = {};\n    }\n\n    scrollBarComponents (...sbc) {\n        if (sbc.length) {\n            this._scrollBarComponents = sbc[0];\n            return this;\n        }\n        return this._scrollBarComponents;\n    }\n\n    attachedComponents (...abc) {\n        if (abc.length) {\n            this._attachedComponents = abc[0];\n            return this;\n        }\n        return this._attachedComponents;\n    }\n\n    performAttachedScrollFunction (type, movedViewLength) {\n        Object.values(this.attachedComponents()).forEach((e) => {\n            e.performScrollAction(type, movedViewLength);\n        });\n    }\n\n    triggerScrollBarAction (type, delta) {\n        this.scrollBarComponents()[type] && this.scrollBarComponents()[type].scrollDeltaTo(delta);\n    }\n}\n","import { mergeRecursive } from 'muze-utils';\nimport { arrangeComponents } from './component-resolver';\nimport { createHeaders } from './title-maker';\nimport { createLegend, getLegendSpace } from './legend-maker';\nimport { componentWrapperMaker } from './component-wrapper-maker';\nimport { TOP, BOTTOM, LEFT, RIGHT } from '../constants';\nimport { ScrollManager } from './scroll-manager';\n\n/**\n *\n *\n * @param {*} context\n *\n */\nexport const prepareLayout = (layout, renderDetails) => {\n    const { components, layoutConfig, measurement } = renderDetails;\n    const {\n        rows,\n        columns,\n        values,\n        cornerMatrices\n    } = components;\n    const {\n        topLeft,\n        topRight,\n        bottomLeft,\n        bottomRight\n    } = cornerMatrices;\n    if (rows && columns) {\n        layout.measurement(measurement)\n                        .config(layoutConfig)\n                        .matrices({\n                            top: [topLeft, columns[0], topRight],\n                            center: [rows[0], values, rows[1]],\n                            bottom: [bottomLeft, columns[1], bottomRight]\n                        })\n                        .triggerReflow();\n    }\n};\n\n/**\n *\n *\n * @param {*} context\n * @param {*} mount\n *\n */\nexport const getRenderDetails = (context, mount) => {\n    let layoutConfig = mergeRecursive({}, context.config());\n    // Get height width of the mount point\n    let { height, width } = mount.getBoundingClientRect();\n    const heightAttr = context.height();\n    const widthAttr = context.width();\n    const visGroup = context.composition().visualGroup;\n    const {\n        isColumnSizeEqual,\n        isRowSizeEqual,\n        priority,\n        rows,\n        columns,\n        values\n    } = visGroup.placeholderInfo();\n    const {\n        minWidth,\n        minHeight,\n        classPrefix,\n        showHeaders,\n        legend,\n        pagination,\n        scrollBar\n    } = context.config();\n\n    // Get title configuration\n    const titleConfig = context.title()[1];\n     // Get subtitle configuration\n    const subtitleConfig = context.subtitle()[1];\n    // Get legend position\n    const legendPosition = legend.position;\n    // Arrange components according to config\n    const layoutArrangement = arrangeComponents(context);\n\n    height = Math.floor(height);\n    width = Math.floor(width);\n\n    const availableHeightForCanvas = Math.max(heightAttr > 0 ? heightAttr : height, minHeight);\n    const availableWidthForCanvas = Math.max(widthAttr > 0 ? widthAttr : width, minWidth);\n\n    // Create headers and determine header height\n    const { headers, headerHeight } = createHeaders(context, availableHeightForCanvas, availableWidthForCanvas);\n\n    // Create legends and determine legend space\n    const legends = createLegend(context, headerHeight, availableHeightForCanvas, availableWidthForCanvas);\n    context._composition.legend = {};\n    legends.forEach((e) => {\n        context._composition.legend[e.scaleType] = e.legend;\n    });\n\n    const legendSpace = getLegendSpace(legends, legend, availableHeightForCanvas, availableWidthForCanvas);\n    const legendWidth = (legendPosition === LEFT || legendPosition === RIGHT) ? legendSpace.width : 0;\n    const legendHeight = (legendPosition === TOP || legendPosition === BOTTOM) ? legendSpace.height : 0;\n\n    // Set components for layouting\n    const components = {\n        headers,\n        legends,\n        canvases: [context],\n        rows,\n        columns,\n        values,\n        cornerMatrices: visGroup.cornerMatrices()\n    };\n\n    const measurement = {\n        mountSpace: {\n            height,\n            width\n        },\n        headerHeight,\n        legendSpace,\n        canvasWidth: availableWidthForCanvas,\n        canvasHeight: availableHeightForCanvas,\n        width: availableWidthForCanvas - legendWidth,\n        height: availableHeightForCanvas - headerHeight - legendHeight,\n        minUnitHeight: context.minUnitHeight(),\n        minUnitWidth: context.minUnitWidth()\n    };\n    layoutConfig = mergeRecursive(layoutConfig, {\n        classPrefix,\n        showHeaders,\n        border: mergeRecursive(visGroup.metaData().border, context.config().border),\n        layoutArrangement,\n        legend,\n        buffer: scrollBar.thickness,\n        pagination,\n        title: titleConfig,\n        subtitle: subtitleConfig,\n        isColumnSizeEqual,\n        isRowSizeEqual,\n        mount,\n        priority\n    });\n    return {\n        layoutConfig,\n        components,\n        measurement\n    };\n};\n\nconst componentIndexes = {\n    title: 0,\n    subtitle: 1,\n    legend: 2,\n    verticalScrollBar: 3,\n    horizontalScrollBar: 4,\n    grid: 5\n};\n\n/**\n * Responsible for creating a scroll manager that manages interactions between the grid\n * component and the scroll bar components\n *\n * @param {Array} componentWrappers Contains the wrappers for all the components\n * @param {Canvas} canvas Instance of the current canvas\n * @return {Array} Positions of units either horizontal or vertical\n */\nconst createScrollManager = (componentWrappers, canvas) => {\n    const {\n        horizontalScrollBar,\n        verticalScrollBar,\n        grid\n    } = componentIndexes;\n\n    const horizontalScrollWrapper = componentWrappers[horizontalScrollBar];\n    const verticalScrollWrapper = componentWrappers[verticalScrollBar];\n    const gridWrapper = componentWrappers[grid];\n    const scrollBarManager = new ScrollManager();\n    const scrollBarComponents = {};\n\n    verticalScrollWrapper && (scrollBarComponents.vertical = verticalScrollWrapper);\n    horizontalScrollWrapper && (scrollBarComponents.horizontal = horizontalScrollWrapper);\n\n    scrollBarManager\n                    .scrollBarComponents(scrollBarComponents)\n                    .attachedComponents({\n                        grid: gridWrapper\n                    });\n    canvas.composition().hScrollBar = horizontalScrollWrapper;\n    canvas.composition().vScrollBar = verticalScrollWrapper;\n\n    [horizontalScrollWrapper, verticalScrollWrapper].forEach((wrapper) => {\n        wrapper && wrapper.manager(scrollBarManager);\n    });\n\n    gridWrapper.scrollBarManager(scrollBarManager);\n};\n\nexport const renderLayout = (canvas, renderDetails) => {\n    const layoutManager = canvas._layoutManager;\n    const gridLayout = canvas.layout();\n    const {\n\n        grid\n    } = componentIndexes;\n\n    // Get the component wrappers\n    const compWrappers = componentWrapperMaker(layoutManager, gridLayout, renderDetails);\n    const componentWrappers = Object.keys(componentIndexes).map(e => compWrappers[e]);\n    const gridWrapper = componentWrappers[grid];\n    createScrollManager(componentWrappers, canvas);\n\n    layoutManager.registerComponents(componentWrappers).compute();\n    gridWrapper.attachScrollListener();\n};\n\n","import {\n    getDataModelFromIdentifiers,\n    FieldType,\n    mergeRecursive,\n    isSimpleObject,\n    CommonProps\n} from 'muze-utils';\nimport { Firebolt } from '@chartshq/muze-firebolt';\n\nimport { applyInteractionPolicy } from '../helper';\n\nconst defaultInteractionPolicy = (valueMatrix, firebolt) => {\n    const isMeasure = field => field.type() === FieldType.MEASURE;\n    const canvas = firebolt.context;\n    const visualGroup = canvas.composition().visualGroup;\n    const xFields = [].concat(...visualGroup.getFieldsFromChannel('x'));\n    const yFields = [].concat(...visualGroup.getFieldsFromChannel('y'));\n    const colDim = xFields.every(field => field.type() === FieldType.DIMENSION);\n    const fieldInf = visualGroup.resolver().getAllFields();\n    const rowFacets = fieldInf.rowFacets;\n    const colFacets = fieldInf.colFacets;\n    valueMatrix.each((cell) => {\n        const unitFireBolt = cell.valueOf().firebolt();\n        if (!(xFields.every(isMeasure) && yFields.every(isMeasure))) {\n            const facetFields = cell.valueOf().facetByFields()[0];\n            const unitColFacets = facetFields.filter(d => colFacets.findIndex(v => v.equals(d)) !== -1);\n            const unitRowFacets = facetFields.filter(d => rowFacets.findIndex(v => v.equals(d)) !== -1);\n            let propFields;\n            if (colDim) {\n                propFields = unitColFacets.map(d => `${d}`);\n            } else {\n                propFields = unitRowFacets.map(d => `${d}`);\n            }\n\n            unitFireBolt.propagateWith('*', propFields, true);\n        }\n    });\n};\n\nconst defaultCrossInteractionPolicy = {\n    behaviours: {\n        '*': (propagationPayload, context) => {\n            const propagationCanvasAlias = propagationPayload.sourceCanvas;\n            const canvasAlias = context.parentAlias();\n            return propagationCanvasAlias ? canvasAlias === propagationCanvasAlias : true;\n        }\n    },\n    sideEffects: {\n        tooltip: (propagationPayload, context) => {\n            const propagationUnit = propagationPayload.sourceUnit;\n            const propagationCanvas = propagationPayload.sourceCanvas;\n            const unitId = context.id();\n            const canvasAlias = context.parentAlias();\n            if (propagationCanvas) {\n                return propagationCanvas !== canvasAlias ? true : unitId === propagationUnit;\n            }\n            return true;\n        }\n    }\n};\n\n/**\n * This class is responsible for dispatching any behavioural action to all the visual units housed by the canvas.\n * It is created by {@link Canvas}. This class does not handle any physical actions. Physical actions get triggered\n * in {@link VisualUnit} which is managed by it's own firebolt instance. The firebolt instance of canvas only\n * propagates the action to all the visual units in it's composition.\n *\n * To get the firebolt instance of {@link Canvas}\n * ```\n *  const firebolt = canvas.firebolt();\n * ```\n *\n * @class GroupFireBolt\n * @public\n */\nexport default class GroupFireBolt extends Firebolt {\n    constructor (...params) {\n        super(...params);\n        this._interactionPolicy = this.constructor.defaultInteractionPolicy();\n        this.crossInteractionPolicy(this.constructor.defaultCrossInteractionPolicy());\n    }\n\n    static defaultInteractionPolicy () {\n        return defaultInteractionPolicy;\n    }\n\n    static defaultCrossInteractionPolicy () {\n        return defaultCrossInteractionPolicy;\n    }\n\n    interactionPolicy (...policy) {\n        if (policy.length) {\n            this._interactionPolicy = policy[0] || this.constructor.defaultInteractionPolicy();\n            return this;\n        }\n        return this._interactionPolicy;\n    }\n\n    crossInteractionPolicy (...policy) {\n        if (policy.length) {\n            this._crossInteractionPolicy = mergeRecursive(mergeRecursive({},\n                this.constructor.defaultCrossInteractionPolicy()), policy[0] || {});\n            const context = this.context;\n            applyInteractionPolicy(this);\n            context._throwback.registerImmediateListener([CommonProps.MATRIX_CREATED], () => {\n                applyInteractionPolicy(this);\n            });\n            return this;\n        }\n        return this._crossInteractionPolicy;\n    }\n\n    /**\n     * Dispatches a behavioural action with a payload. It takes the name of the behavioural action and a payload\n     * object which contains the criteria aend an array of side effects which determines what side effects are\n     * going to be shown in each visual unit of the canvas. It prepares the datamodel from the given criteria\n     * and initiates a propagation from the datamodel of canvas. Then all the visual units of canvas which listens\n     * to the propagation gets informed on which rows got selected and dispatches the behavioural action sent during\n     * propagation.\n     *\n     * To dispatch a behavioural action on the canvas\n     * ```\n     *  // Get the firebolt instance of the canvas\n     *  const firebolt = canvas.firebolt();\n     *  // Dispatch a brush behaviour\n     *  firebolt.dispatchBehaviour('brush', {\n     *      // Selects all the rows with Horsepower having range between 100 and 200.\n     *      criteria: {\n     *          Horsepower: [100, 200]\n     *      }\n     *  });\n     * // On dispatch of this behavioural action, a selection box gets created and plots gets faded out which are the\n     * // default side effects mapped to this behavioural action.\n     * ```\n     *\n     * ```\n     * Additionally, it can also be passed an array of side effects in the payload.\n     *  // Dispatch a select behaviour with only crossline as side effect.\n     *  firebolt.dispatchBehaviour('select', {\n     *      criteria: {\n     *          Cylinders: ['8']\n     *      },\n     *      sideEffects: ['crossline']\n     *  });\n     * ```\n     *\n     * @public\n     *\n     * @param {string} behaviour Name of the behavioural action\n     * @param {Object} payload Object which contains the interaction information.\n     * @param {Object | Array.<Array>} payload.criteria Identifiers by which the selection happens.\n     * @param {Array.<string|Object>} payload.sideEffects Side effects which needs to be shown.\n     *\n     * @return {GroupFireBolt} Instance of firebolt.\n     */\n    dispatchBehaviour (behaviour, payload) {\n        const propPayload = Object.assign(payload);\n        const criteria = propPayload.criteria;\n        const data = this.context.composition().visualGroup.getGroupByData();\n        const fieldsConfig = data.getFieldsConfig();\n        const model = getDataModelFromIdentifiers(data, criteria);\n        const behaviouralAction = this._actions.behavioural[behaviour];\n\n        if (behaviouralAction) {\n            const fields = isSimpleObject(criteria) ? Object.keys(criteria) : (criteria ? criteria[0] : []);\n            const validFields = fields.filter(field => field in fieldsConfig);\n            const mutates = behaviouralAction.constructor.mutates();\n            const propConfig = {\n                payload: propPayload,\n                action: behaviour,\n                criteria: model,\n                sourceId: this.context.alias(),\n                isMutableAction: mutates,\n                propagateInterpolatedValues: validFields.every(field => fieldsConfig[field].def.type ===\n                    FieldType.MEASURE)\n            };\n            data.propagate(model, propConfig, true);\n        }\n        return this;\n    }\n\n    registerSideEffects (sideEffects) {\n        for (const key in sideEffects) {\n            this._sideEffectDefinitions[sideEffects[key].formalName()] = sideEffects[key];\n        }\n        return this;\n    }\n}\n","import GroupFireBolt from './group-firebolt';\n\nexport default GroupFireBolt;\n","export const APP_INITIAL_STATE = {\n    app: {\n        group: {},\n        units: {},\n        layers: {},\n        canvas: {}\n    },\n    local: {\n        canvas: {},\n        group: {},\n        units: {},\n        layers: {}\n    }\n};\n\n","import { GridLayout } from '@chartshq/layout';\nimport { transactor, Store, getUniqueId, selectElement, STATE_NAMESPACES, CommonProps } from 'muze-utils';\nimport { physicalActions, sideEffects, behaviouralActions, behaviourEffectMap } from '@chartshq/muze-firebolt';\nimport { RETINAL } from '../constants';\nimport TransactionSupport from '../transaction-support';\nimport { getRenderDetails, prepareLayout, renderLayout } from './layout-maker';\nimport { localOptions, canvasOptions } from './local-options';\nimport GroupFireBolt from './firebolt';\nimport options from '../options';\nimport { APP_INITIAL_STATE } from './app-state';\nimport { initCanvas,\n        setupChangeListener,\n        setLabelRotationForAxes,\n        createGroupState,\n        createLayoutManager,\n        setLayoutInfForUnits\n} from './helper';\n/**\n * Canvas is a logical component which houses a visualization by taking multiple variable in different encoding channel.\n * Canvas manages lifecycle of many other logical component and exposes one consistent interface for creation of chart.\n * Canvas is intialized from environment with settings from environment and singleton dependencies.\n *\n * To create an instance of canvas\n * ```\n *  const env = Muze();\n *  const canvas = env.canvas()\n * ```\n *\n *\n * @class\n * @public\n * @module Canvas\n */\nexport default class Canvas extends TransactionSupport {\n\n    /**\n     * Creates reactive property accessors.\n     * - data\n     * - height\n     * - width\n     * - config\n     * This configs are retrieved from options.\n     */\n    constructor (globalDependencies) {\n        super();\n\n        this._allOptions = Object.assign({}, options, localOptions);\n        this._registry = {};\n        this._composition = {};\n        this._cachedProps = {};\n        this._alias = null;\n        this._renderedResolve = null;\n        this._renderedPromise = new Promise((resolve) => {\n            this._renderedResolve = resolve;\n        });\n        this._composition.layout = new GridLayout();\n        this._store = new Store(APP_INITIAL_STATE);\n\n        this._throwback = new Store({\n            [CommonProps.MATRIX_CREATED]: false\n        });\n\n        // Setters and getters will be mounted on this. The object will be mutated.\n        const namespace = STATE_NAMESPACES.CANVAS_LOCAL_NAMESPACE;\n        const [, store] = transactor(this, options, this._store.model, {\n            namespace\n        });\n        transactor(this, localOptions, store, {\n            namespace\n        });\n        transactor(this, canvasOptions, store, {\n            namespace\n        });\n\n        this.dependencies(Object.assign({}, globalDependencies, this._dependencies));\n        this.firebolt(new GroupFireBolt(this, {\n            behavioural: behaviouralActions,\n            physical: physicalActions,\n            physicalBehaviouralMap: {}\n        }, sideEffects, behaviourEffectMap));\n        this.alias(`canvas-${getUniqueId()}`);\n        this.title('', {});\n        this.subtitle('', {});\n        this.legend({});\n        this.color({});\n        this.shape({});\n        this.size({});\n        setupChangeListener(this);\n         // init layoutManager\n        this._layoutManager = createLayoutManager();\n    }\n\n    /**\n     * Retrieves an instance of layout which is responsible for layouting. Layout is responsible for creating faceted\n     * presentation using table layout.\n     *\n     * @public\n     *\n     * @return {GridLayout} Instance of layout attached to canvas.\n     */\n    layout (...params) {\n        if (params.length) {\n            return this;\n        }\n        return this.composition().layout;\n    }\n\n    /**\n     * Retrieves the composition for a canvas\n     *\n     * @public\n     *\n     * @return {object} Instances of the components which canvas requires to draw the full visualization.\n     *      ```\n     *          {\n     *              layout: // Instance of {@link GridLayout}\n     *              legend: // Instance of {@link Legend}\n     *              subtitle: // Instance of {@link TextCell} using which the title is rendered\n     *              title: // Instance of {@link TextCell} using which the title is rendered\n     *              visualGroup: // Instance of {@link visualGroup}\n     *          }\n     *      ```\n     */\n    composition (...params) {\n        if (params.length) {\n            return this;\n        }\n        return this._composition;\n    }\n\n    done () {\n        return this._renderedPromise;\n    }\n\n    /**\n     * Sets or gets the alias of the canvas. Alias is a name by which the canvas can be referred.\n     *\n     * When setter\n     * @param {string} alias Name of the alias.\n     *\n     * @return {Canvas} Instance of the canvas.\n     *\n     * When getter\n     *\n     * @return {string} Alias of canvas.\n     *\n     * @public\n     */\n    alias (...params) {\n        if (params.length) {\n            const visualGroup = this.composition().visualGroup;\n            this._alias = params[0];\n            visualGroup && visualGroup.alias(this.alias());\n            return this;\n        }\n        return this._alias;\n    }\n\n    /**\n     * Creates an instance initiated with given settings.\n     *\n     * @param {Object} initialSettings Initial settings to be populated in the model\n     * @param {Object} regEntry newly created instance with the initial settings\n     * @param {Object} globalDependencies dependencies which will be created only once in the page\n     *\n     * @return {Object} newly created instance with the initial settings\n     */\n    static withSettings (initialSettings, regEntry, globalDependencies) {\n        const instance = new Canvas(globalDependencies);\n\n        for (const key in initialSettings) {\n            instance[key](initialSettings[key]);\n        }\n        // set registry for instance\n        instance.registry(regEntry);\n        return instance;\n    }\n\n    /**\n     *\n     *\n     * @static\n     *\n     * @memberof Canvas\n     */\n    static formalName () {\n        return 'canvas';\n    }\n\n    /**\n     * Returns the instance of firebolt associated with this canvas. The firebolt instance can be used to dispatch a\n     * behaviour dynamically on the canvas. This firebolt does not handle any physical actions. It is just used to\n     * propagate the action to all the visual units in it's composition.\n     *\n     * @public\n     *\n     * @return {GroupFireBolt} Instance of firebolt associated with canvas.\n     */\n    firebolt (...firebolt) {\n        if (firebolt.length) {\n            this._firebolt = firebolt[0];\n            return this;\n        }\n        return this._firebolt;\n    }\n\n    /**\n     * Registry peoperty accessor\n     *\n     * @param {Object} reg plain old javascript object keyvalue pairs. Key containing module name and value contains\n     * module definition class. The reg object has to be flat object of level 1.\n     */\n    registry (...params) {\n        if (params.length) {\n            const components = Object.assign({}, params[0].components);\n            const componentSubRegistry = Object.assign({}, params[0].componentSubRegistry);\n\n            this._registry = { components, componentSubRegistry };\n            const initedComponents = initCanvas(this);\n            // @todo is it okay to continue this tight behaviour? If not use a resolver to resolve diff component type.\n            this._composition.visualGroup = initedComponents[0];\n            createGroupState(this);\n            this.composition().visualGroup.alias(this.alias()).store(this._store);\n            return this;\n        }\n        return this._registry;\n    }\n\n    /*\n     * Prepare dependencies for top level elements\n     */\n    dependencies (...param) {\n        if (param.length) {\n            this._dependencies = param[0];\n            return this;\n        }\n        // @todo prepare dependencies here.\n        return this._dependencies;\n    }\n\n    /**\n     *\n     *\n     * @param {*} lifeCycles\n     *\n     * @memberof Canvas\n     */\n    lifeCycle (lifeCycles) {\n        const lifeCycleManager = this.dependencies().lifeCycleManager;\n        if (lifeCycles) {\n            lifeCycleManager.register(lifeCycles);\n            return this;\n        }\n        return lifeCycleManager;\n    }\n\n    /**\n     *\n     *\n     * @readonly\n     * @memberof Canvas\n     */\n    legend (...params) {\n        if (params.length) {\n            return this;\n        }\n        return this.composition().legend;\n    }\n\n    /**\n     * Returns a promise for various {@link LifecycleEvents} of the various components of canvas. The promise gets\n     * resolved once the particular event gets completed.\n     *\n     * To use this,\n     * ```\n     *      canvas.once('layer.drawn').then(() => {\n     *          // Do any post drawing work here.\n     *      });\n     * ```\n     * @public\n     *\n     * @param {string} eventName Name of the lifecycle event.\n     *\n     * @return {Promise} A pending promise waiting for resolve to be called.\n     */\n    once (eventName) {\n        const lifeCycleManager = this.dependencies().lifeCycleManager;\n        return lifeCycleManager.retrieve(eventName);\n    }\n\n    /**\n     * Internal function to trigger render, this method is cognizant of all the properties of the core modules and\n     * establish a passive reactivity. Passive reactivity is not always a bad thing :)\n     * @internal\n     */\n    render () {\n        const mount = this.mount();\n        // removeChild(mount);\n        const lifeCycleManager = this.dependencies().lifeCycleManager;\n        // Get render details including arrangement and measurement\n        const renderDetails = getRenderDetails(this, mount);\n        lifeCycleManager.notify({ client: this, action: 'beforedraw' });\n        // Prepare the layout by triggering the matrix calculation\n        prepareLayout(this.layout(), renderDetails);\n\n        this._layoutManager.dimension({\n            height: renderDetails.measurement.canvasHeight,\n            width: renderDetails.measurement.canvasWidth\n        });\n\n        this._layoutManager.renderAt(mount);\n\n        // Render each component\n        renderLayout(this, renderDetails);\n\n        setLayoutInfForUnits(this);\n\n        // setLabelRotation\n        setLabelRotationForAxes(this);\n    }\n\n    /**\n     * Returns the instances of x axis of the canvas. It returns the instances in a two dimensional array form.\n     *\n     * ```\n     *   // The first element in the sub array represents the top axis and the second element represents the bottom\n     *   // axis.\n     *   [\n     *      [X1, X2],\n     *      [X3, X4]\n     *   ]\n     * ```\n     * @public\n     *\n     * @return {Array.<Array>} Instances of x axis.\n     */\n    xAxes () {\n        return this.composition().visualGroup.getAxes('x');\n    }\n\n    /**\n     * Returns the instances of y axis of the canvas. It returns the instances in a two dimensional array form.\n     *\n     * ```\n     *   // The first element in the sub array represents the left axis and the second element represents the right\n     *   // axis.\n     *   [\n     *      [Y1, Y2],\n     *      [Y3, Y4]\n     *   ]\n     * ```\n     * @public\n     * @return {Array.<Array>} Instances of y axis.\n     */\n    yAxes () {\n        return this.composition().visualGroup.getAxes('y');\n    }\n\n    /**\n     * Returns all the retinal axis of the canvas. Color, shape and size axis are combinedly called retinal axis.\n     *\n     * @public\n     * @return {Object} Instances of retinal axis.\n     *          ```\n     *              {\n     *                  color: [ColorAxis], // Array of color axis.\n     *                  shape: [ShapeAxis], // Array of shape axis.\n     *                  size: [SizeAxis] // Array of size axis.\n     *              }\n     *          ```\n     */\n    getRetinalAxes () {\n        const visualGroup = this.composition().visualGroup;\n        return visualGroup.getAxes(RETINAL);\n    }\n\n    mount (...params) {\n        if (params.length) {\n            let value = params[0];\n            if (typeof params[0] === 'string') {\n                value = selectElement(params[0]).node();\n            }\n            this._mount = value;\n            return this;\n        }\n        return this._mount;\n    }\n}\n","import { cellRegistry, SimpleCell } from '@chartshq/visual-cell';\nimport { VisualUnit } from '@chartshq/visual-unit';\nimport { layerRegistry } from '@chartshq/visual-layer';\nimport { SimpleGroup, VisualGroup } from '@chartshq/visual-group';\n\nexport const COMPONENTS = {\n    VisualGroup,\n    VisualUnit\n};\nexport const SUBREGISTRIES = {\n    cellRegistry,\n    layerRegistry\n};\nexport const INTERFACES = {\n    SimpleGroup,\n    SimpleCell\n};\n\n","import { DEFAULT_LAYERS } from './defaults';\n\nexport default () => {\n    const reg = DEFAULT_LAYERS;\n    const regObj = {\n        set: (key, def) => {\n            reg[key] = def;\n            return regObj;\n        },\n        get: () => reg\n    };\n    return regObj;\n};\n","import {\n    transactor,\n    Smartlabel,\n    enableChainedTransaction,\n    LifeCycleManager,\n    DataModel,\n    makeElement,\n    getClientPoint,\n    selectElement,\n    getEvent,\n    require,\n    DateTimeFormatter\n} from 'muze-utils';\n\nimport {\n    SurrogateSideEffect,\n    SpawnableSideEffect,\n    sideEffects,\n    PersistentBehaviour,\n    GenericBehaviour,\n    VolatileBehaviour,\n    behaviouralActions,\n    GenericSideEffect\n} from '@chartshq/muze-firebolt';\nimport { layerFactory } from '@chartshq/visual-layer';\nimport pkg from '../package.json';\nimport * as operators from './operators';\nimport { actionModel as ActionModel } from './action-model';\nimport options from './options';\nimport { Canvas } from './canvas';\nimport { COMPONENTS, SUBREGISTRIES } from './default-registry';\nimport './muze.scss';\n\n// Cache singleton instances which should be included only once in a page\nconst globalCache = {};\nconst defaultRegistry = COMPONENTS;\n\nconst overrideRegistryDefinitions = (overrideRegistry, registry) => {\n    for (const prop in overrideRegistry) {\n        registry.set(prop, overrideRegistry[prop]);\n    }\n};\n\n/**\n * Entry point to renderer. Initializes an environment with settings and registries for canvas. This is a simple wrapper\n * over {@link Canvas} which enables common configuration passing to multiple such canvases.\n *\n * Everytime `muze()` is called it creates an environment. These environment supports subset of APIs of Canvas. If\n * common configuration is used to render multiple canvases then it can be set directly in the env. Like if data is\n * common across all the visulization then its better to set the data in env. When a canvas is created it receives all\n * those configuration from env.\n *\n * ```\n *  // Creates an environment\n *  const env = muze()\n *  // Set data property in environment, so that all the canvas created from the same environment gets this data\n *  // automatically\n *  env.data(dm);\n *  // Creates canvas, by default env pushes data to canvas instance\n *  const canvas = env.canvas();\n * ```\n *\n * If a property is set on both environment and canvas instance, property set on canvas instance gets more priority.\n *\n * @public\n * @module muze\n * @namespace Muze\n *\n * @return {Env} Instance of an environment\n */\nconst muze = () => {\n    // Setters and getters will be mounted on this. Object will be mutated.\n    const [env, globalStore] = transactor({}, options);\n    const components = Object.assign({}, COMPONENTS);\n    const componentSubRegistryDef = Object.assign(SUBREGISTRIES);\n    const componentSubRegistry = {};\n\n    for (const prop in componentSubRegistryDef) {\n        componentSubRegistry[prop] = componentSubRegistryDef[prop]();\n    }\n\n    // Apart form the setter getter, an instance method is injected to create real renderer instances\n    env.canvas = () => {\n        // Create a canvas instance with this settings\n        const settings = globalStore.serialize();\n        const canvas = Canvas.withSettings(settings, { /* registry */\n            components,\n            componentSubRegistry\n        }, env.globalDependencies());\n\n        // Whenever settings is changed canvas is updated\n        enableChainedTransaction(globalStore, canvas, Object.keys(settings));\n\n        return canvas;\n    };\n\n    // Global dependencies for for compositions. Only one copy of the same should be in the page\n    env.globalDependencies = () => {\n        if (!globalCache.smartlabel) {\n            globalCache.smartlabel = new Smartlabel(1, 'body');\n        }\n        return {\n            smartlabel: globalCache.smartlabel,\n            lifeCycleManager: new LifeCycleManager()\n        };\n    };\n\n    // Retrieves global settings. This getter is readonly so that user can't change this as change should happen\n    // only from setter to avoid unwanted sync issues.\n    env.settings = () => globalStore.serialize();\n\n    env.registry = (...overrideRegistry) => {\n        // Selectively copy the properties from COMPONENTS\n        if (overrideRegistry.length) {\n            for (const prop in overrideRegistry) {\n                if (prop in defaultRegistry) {\n                    components[prop] = overrideRegistry[prop];\n                }\n            }\n            return env;\n        }\n        return components;\n    };\n\n    env.cellRegistry = (...overrideRegistry) => {\n        const cellRegistry = componentSubRegistry.cellRegistry;\n        if (overrideRegistry.length) {\n            overrideRegistryDefinitions(overrideRegistry[0], cellRegistry);\n            return env;\n        }\n        return cellRegistry.get();\n    };\n\n    env.layerRegistry = (...overrideRegistry) => {\n        const layerRegistry = componentSubRegistry.layerRegistry;\n        if (overrideRegistry.length) {\n            overrideRegistryDefinitions(overrideRegistry[0], layerRegistry);\n            return env;\n        }\n        return layerRegistry.get();\n    };\n\n    return env;\n};\n\nconst SideEffects = {\n    sideEffects,\n    standards: {\n        SurrogateSideEffect,\n        SpawnableSideEffect,\n        GenericSideEffect\n    }\n};\n\nconst Behaviours = {\n    behaviouralActions,\n    standards: {\n        GenericBehaviour,\n        PersistentBehaviour,\n        VolatileBehaviour\n    }\n};\n\nmuze.DataModel = DataModel;\nmuze.version = pkg.version;\nmuze.SideEffects = SideEffects;\nmuze.ActionModel = ActionModel;\nmuze.layerFactory = layerFactory;\nmuze.Operators = operators;\nmuze.Behaviours = Behaviours;\nmuze.utils = {\n    getClientPoint,\n    getEvent,\n    makeElement,\n    selectElement,\n    DateTimeFormatter,\n    require\n};\n\nexport default muze;\n"],"sourceRoot":""}