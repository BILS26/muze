{"version":3,"sources":["webpack://muze/webpack/universalModuleDefinition","webpack://muze/webpack/bootstrap","webpack://muze/webpack://DataModel/webpack/universalModuleDefinition","webpack://muze/webpack://DataModel/webpack/bootstrap","webpack://muze/webpack://DataModel/node_modules/d3-dsv/src/csv.js","webpack://muze/webpack://DataModel/node_modules/d3-dsv/src/dsv.js","webpack://muze/webpack://DataModel/node_modules/d3-dsv/src/index.js","webpack://muze/webpack://DataModel/node_modules/d3-dsv/src/tsv.js","webpack://muze/webpack://DataModel/src/constants/index.js","webpack://muze/webpack://DataModel/src/converter/auto-resolver.js","webpack://muze/webpack://DataModel/src/converter/dsv-arr.js","webpack://muze/webpack://DataModel/src/converter/dsv-str.js","webpack://muze/webpack://DataModel/src/converter/flat-json.js","webpack://muze/webpack://DataModel/src/converter/index.js","webpack://muze/webpack://DataModel/src/datamodel.js","webpack://muze/webpack://DataModel/src/default-config.js","webpack://muze/webpack://DataModel/src/enums/data-format.js","webpack://muze/webpack://DataModel/src/enums/dimension-subtype.js","webpack://muze/webpack://DataModel/src/enums/field-type.js","webpack://muze/webpack://DataModel/src/enums/filtering-mode.js","webpack://muze/webpack://DataModel/src/enums/group-by-functions.js","webpack://muze/webpack://DataModel/src/enums/index.js","webpack://muze/webpack://DataModel/src/enums/measure-subtype.js","webpack://muze/webpack://DataModel/src/export.js","webpack://muze/webpack://DataModel/src/field-creator.js","webpack://muze/webpack://DataModel/src/field-store.js","webpack://muze/webpack://DataModel/src/fields/binned/index.js","webpack://muze/webpack://DataModel/src/fields/categorical/index.js","webpack://muze/webpack://DataModel/src/fields/continuous/index.js","webpack://muze/webpack://DataModel/src/fields/dimension/index.js","webpack://muze/webpack://DataModel/src/fields/field/index.js","webpack://muze/webpack://DataModel/src/fields/index.js","webpack://muze/webpack://DataModel/src/fields/measure/index.js","webpack://muze/webpack://DataModel/src/fields/parsers/binned-parser/index.js","webpack://muze/webpack://DataModel/src/fields/parsers/categorical-parser/index.js","webpack://muze/webpack://DataModel/src/fields/parsers/continuous-parser/index.js","webpack://muze/webpack://DataModel/src/fields/parsers/field-parser/index.js","webpack://muze/webpack://DataModel/src/fields/parsers/temporal-parser/index.js","webpack://muze/webpack://DataModel/src/fields/partial-field/index.js","webpack://muze/webpack://DataModel/src/fields/temporal/index.js","webpack://muze/webpack://DataModel/src/helper.js","webpack://muze/webpack://DataModel/src/index.js","webpack://muze/webpack://DataModel/src/invalid-aware-types.js","webpack://muze/webpack://DataModel/src/operator/bucket-creator.js","webpack://muze/webpack://DataModel/src/operator/compose.js","webpack://muze/webpack://DataModel/src/operator/cross-product.js","webpack://muze/webpack://DataModel/src/operator/data-builder.js","webpack://muze/webpack://DataModel/src/operator/difference.js","webpack://muze/webpack://DataModel/src/operator/get-common-schema.js","webpack://muze/webpack://DataModel/src/operator/group-by-function.js","webpack://muze/webpack://DataModel/src/operator/group-by.js","webpack://muze/webpack://DataModel/src/operator/index.js","webpack://muze/webpack://DataModel/src/operator/merge-sort.js","webpack://muze/webpack://DataModel/src/operator/natural-join-filter-function.js","webpack://muze/webpack://DataModel/src/operator/natural-join.js","webpack://muze/webpack://DataModel/src/operator/outer-join.js","webpack://muze/webpack://DataModel/src/operator/pure-operators.js","webpack://muze/webpack://DataModel/src/operator/row-diffset-iterator.js","webpack://muze/webpack://DataModel/src/operator/union.js","webpack://muze/webpack://DataModel/src/relation.js","webpack://muze/webpack://DataModel/src/stats/index.js","webpack://muze/webpack://DataModel/src/utils/column-major.js","webpack://muze/webpack://DataModel/src/utils/date-time-formatter.js","webpack://muze/webpack://DataModel/src/utils/domain-generator.js","webpack://muze/webpack://DataModel/src/utils/extend2.js","webpack://muze/webpack://DataModel/src/utils/helper.js","webpack://muze/webpack://DataModel/src/utils/index.js","webpack://muze/webpack://DataModel/src/utils/reducer-store.js","webpack://muze/webpack://DataModel/src/value.js","webpack://muze/webpack://hyperdis/webpack/universalModuleDefinition","webpack://muze/webpack://hyperdis/webpack/bootstrap","webpack://muze/webpack://hyperdis/src/electric-node.js","webpack://muze/webpack://hyperdis/src/graph-node.js","webpack://muze/webpack://hyperdis/src/graph.js","webpack://muze/webpack://hyperdis/src/index.js","webpack://muze/webpack://hyperdis/src/model.js","webpack://muze/webpack://hyperdis/src/utils/index.js","webpack://muze/webpack://hyperdis/src/utils/set.js","webpack://muze/(webpack)/buildin/module.js","webpack://muze/./packages/muze-utils/node_modules/fusioncharts-smartlabel/lib/SmartlabelManager.js","webpack://muze/./packages/muze-utils/node_modules/fusioncharts-smartlabel/lib/lib.js","webpack://muze/./packages/muze/src/index.js","webpack://muze/./packages/muze-utils/node_modules/fusioncharts-smartlabel/lib/container-manager.js","webpack://muze/./packages/muze-utils/node_modules/d3-array/src/ascending.js","webpack://muze/./packages/muze-utils/node_modules/d3-array/src/bisector.js","webpack://muze/./packages/muze-utils/node_modules/d3-array/src/bisect.js","webpack://muze/./packages/muze-utils/node_modules/d3-array/src/cross.js","webpack://muze/./packages/muze-utils/node_modules/d3-array/src/number.js","webpack://muze/./packages/muze-utils/node_modules/d3-array/src/array.js","webpack://muze/./packages/muze-utils/node_modules/d3-array/src/range.js","webpack://muze/./packages/muze-utils/node_modules/d3-array/src/ticks.js","webpack://muze/./packages/muze-utils/node_modules/d3-array/src/threshold/sturges.js","webpack://muze/./packages/muze-utils/node_modules/d3-array/src/quantile.js","webpack://muze/./packages/muze-utils/node_modules/d3-collection/src/map.js","webpack://muze/./packages/muze-utils/node_modules/d3-collection/src/nest.js","webpack://muze/./packages/muze-utils/node_modules/d3-collection/src/set.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale/src/array.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale/src/ordinal.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale/src/band.js","webpack://muze/./packages/muze-utils/node_modules/d3-color/src/define.js","webpack://muze/./packages/muze-utils/node_modules/d3-color/src/color.js","webpack://muze/./packages/muze-utils/node_modules/d3-color/src/math.js","webpack://muze/./packages/muze-utils/node_modules/d3-color/src/lab.js","webpack://muze/./packages/muze-utils/node_modules/d3-color/src/cubehelix.js","webpack://muze/./packages/muze-utils/node_modules/d3-interpolate/src/basis.js","webpack://muze/./packages/muze-utils/node_modules/d3-interpolate/src/constant.js","webpack://muze/./packages/muze-utils/node_modules/d3-interpolate/src/color.js","webpack://muze/./packages/muze-utils/node_modules/d3-interpolate/src/rgb.js","webpack://muze/./packages/muze-utils/node_modules/d3-interpolate/src/number.js","webpack://muze/./packages/muze-utils/node_modules/d3-interpolate/src/basisClosed.js","webpack://muze/./packages/muze-utils/node_modules/d3-interpolate/src/object.js","webpack://muze/./packages/muze-utils/node_modules/d3-interpolate/src/string.js","webpack://muze/./packages/muze-utils/node_modules/d3-interpolate/src/value.js","webpack://muze/./packages/muze-utils/node_modules/d3-interpolate/src/transform/parse.js","webpack://muze/./packages/muze-utils/node_modules/d3-interpolate/src/date.js","webpack://muze/./packages/muze-utils/node_modules/d3-interpolate/src/array.js","webpack://muze/./packages/muze-utils/node_modules/d3-interpolate/src/round.js","webpack://muze/./packages/muze-utils/node_modules/d3-interpolate/src/transform/decompose.js","webpack://muze/./packages/muze-utils/node_modules/d3-interpolate/src/transform/index.js","webpack://muze/./packages/muze-utils/node_modules/d3-interpolate/src/zoom.js","webpack://muze/./packages/muze-utils/node_modules/d3-interpolate/src/hsl.js","webpack://muze/./packages/muze-utils/node_modules/d3-interpolate/src/hcl.js","webpack://muze/./packages/muze-utils/node_modules/d3-interpolate/src/cubehelix.js","webpack://muze/./packages/muze-utils/node_modules/d3-interpolate/src/piecewise.js","webpack://muze/./packages/muze-utils/node_modules/d3-interpolate/src/quantize.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale/src/constant.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale/src/number.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale/src/continuous.js","webpack://muze/./packages/muze-utils/node_modules/d3-format/src/formatDecimal.js","webpack://muze/./packages/muze-utils/node_modules/d3-format/src/exponent.js","webpack://muze/./packages/muze-utils/node_modules/d3-format/src/formatSpecifier.js","webpack://muze/./packages/muze-utils/node_modules/d3-format/src/formatTrim.js","webpack://muze/./packages/muze-utils/node_modules/d3-format/src/formatPrefixAuto.js","webpack://muze/./packages/muze-utils/node_modules/d3-format/src/defaultLocale.js","webpack://muze/./packages/muze-utils/node_modules/d3-format/src/formatRounded.js","webpack://muze/./packages/muze-utils/node_modules/d3-format/src/formatTypes.js","webpack://muze/./packages/muze-utils/node_modules/d3-format/src/identity.js","webpack://muze/./packages/muze-utils/node_modules/d3-format/src/locale.js","webpack://muze/./packages/muze-utils/node_modules/d3-format/src/formatGroup.js","webpack://muze/./packages/muze-utils/node_modules/d3-format/src/formatNumerals.js","webpack://muze/./packages/muze-utils/node_modules/d3-format/src/precisionFixed.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale/src/tickFormat.js","webpack://muze/./packages/muze-utils/node_modules/d3-format/src/precisionPrefix.js","webpack://muze/./packages/muze-utils/node_modules/d3-format/src/precisionRound.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale/src/linear.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale/src/identity.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale/src/nice.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale/src/log.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale/src/pow.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale/src/quantile.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale/src/quantize.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale/src/threshold.js","webpack://muze/./packages/muze-utils/node_modules/d3-time/src/interval.js","webpack://muze/./packages/muze-utils/node_modules/d3-time/src/millisecond.js","webpack://muze/./packages/muze-utils/node_modules/d3-time/src/duration.js","webpack://muze/./packages/muze-utils/node_modules/d3-time/src/second.js","webpack://muze/./packages/muze-utils/node_modules/d3-time/src/minute.js","webpack://muze/./packages/muze-utils/node_modules/d3-time/src/hour.js","webpack://muze/./packages/muze-utils/node_modules/d3-time/src/day.js","webpack://muze/./packages/muze-utils/node_modules/d3-time/src/week.js","webpack://muze/./packages/muze-utils/node_modules/d3-time/src/month.js","webpack://muze/./packages/muze-utils/node_modules/d3-time/src/year.js","webpack://muze/./packages/muze-utils/node_modules/d3-time/src/utcMinute.js","webpack://muze/./packages/muze-utils/node_modules/d3-time/src/utcHour.js","webpack://muze/./packages/muze-utils/node_modules/d3-time/src/utcDay.js","webpack://muze/./packages/muze-utils/node_modules/d3-time/src/utcWeek.js","webpack://muze/./packages/muze-utils/node_modules/d3-time/src/utcMonth.js","webpack://muze/./packages/muze-utils/node_modules/d3-time/src/utcYear.js","webpack://muze/./packages/muze-utils/node_modules/d3-time-format/src/locale.js","webpack://muze/./packages/muze-utils/node_modules/d3-time-format/src/defaultLocale.js","webpack://muze/./packages/muze-utils/node_modules/d3-time-format/src/isoFormat.js","webpack://muze/./packages/muze-utils/node_modules/d3-time-format/src/isoParse.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale/src/time.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale/src/colors.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale/src/category10.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale/src/category20b.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale/src/category20.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale/src/category20c.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale/src/cubehelix.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale/src/rainbow.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale/src/viridis.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale/src/sequential.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/colors.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/categorical/Accent.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/categorical/category10.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/categorical/Dark2.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/categorical/Paired.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/categorical/Pastel1.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/categorical/Pastel2.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/categorical/Set1.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/categorical/Set2.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/categorical/Set3.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/ramp.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/diverging/BrBG.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/diverging/PRGn.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/diverging/PiYG.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/diverging/PuOr.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/diverging/RdBu.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/diverging/RdGy.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/diverging/RdYlBu.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/diverging/RdYlGn.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/diverging/Spectral.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/sequential-multi/BuGn.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/sequential-multi/BuPu.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/sequential-multi/GnBu.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/sequential-multi/OrRd.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/sequential-multi/PuBuGn.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/sequential-multi/PuBu.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/sequential-multi/PuRd.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/sequential-multi/RdPu.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/sequential-multi/YlGnBu.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/sequential-multi/YlGn.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/sequential-multi/YlOrBr.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/sequential-multi/YlOrRd.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/sequential-single/Blues.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/sequential-single/Greens.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/sequential-single/Greys.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/sequential-single/Purples.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/sequential-single/Reds.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/sequential-single/Oranges.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/sequential-multi/cubehelix.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/sequential-multi/rainbow.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/sequential-multi/sinebow.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/sequential-multi/viridis.js","webpack://muze/./packages/muze-utils/src/enums/namespace.js","webpack://muze/./packages/muze-utils/src/enums/reserved-fields.js","webpack://muze/./packages/muze-utils/src/enums/common-props.js","webpack://muze/./packages/muze-utils/src/enums/constants.js","webpack://muze/./packages/muze-utils/node_modules/d3-axis/src/array.js","webpack://muze/./packages/muze-utils/node_modules/d3-axis/src/identity.js","webpack://muze/./packages/muze-utils/node_modules/d3-axis/src/axis.js","webpack://muze/./packages/muze-utils/node_modules/d3-path/src/path.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/constant.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/math.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/arc.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/curve/linear.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/point.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/line.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/area.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/descending.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/identity.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/curve/radial.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/lineRadial.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/array.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/symbol/circle.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/symbol/cross.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/symbol/diamond.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/symbol/star.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/symbol/square.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/symbol/triangle.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/symbol/wye.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/noop.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/curve/basis.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/curve/basisClosed.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/curve/basisOpen.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/curve/bundle.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/curve/cardinal.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/curve/cardinalClosed.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/curve/cardinalOpen.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/curve/catmullRom.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/curve/catmullRomClosed.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/curve/catmullRomOpen.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/curve/linearClosed.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/curve/monotone.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/curve/natural.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/curve/step.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/offset/none.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/order/none.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/stack.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/order/ascending.js","webpack://muze/./packages/muze-utils/node_modules/d3-ease/src/cubic.js","webpack://muze/./packages/muze-utils/node_modules/d3-ease/src/poly.js","webpack://muze/./packages/muze-utils/node_modules/d3-ease/src/sin.js","webpack://muze/./packages/muze-utils/node_modules/d3-ease/src/bounce.js","webpack://muze/./packages/muze-utils/node_modules/d3-ease/src/back.js","webpack://muze/./packages/muze-utils/node_modules/d3-ease/src/elastic.js","webpack://muze/./packages/muze-utils/node_modules/d3-voronoi/src/constant.js","webpack://muze/./packages/muze-utils/node_modules/d3-voronoi/src/point.js","webpack://muze/./packages/muze-utils/node_modules/d3-voronoi/src/RedBlackTree.js","webpack://muze/./packages/muze-utils/node_modules/d3-voronoi/src/Edge.js","webpack://muze/./packages/muze-utils/node_modules/d3-voronoi/src/Cell.js","webpack://muze/./packages/muze-utils/node_modules/d3-voronoi/src/Circle.js","webpack://muze/./packages/muze-utils/node_modules/d3-voronoi/src/Beach.js","webpack://muze/./packages/muze-utils/node_modules/d3-voronoi/src/Diagram.js","webpack://muze/./packages/muze-utils/node_modules/d3-voronoi/src/voronoi.js","webpack://muze/./packages/muze-utils/src/DataSystem/selection.js","webpack://muze/./packages/muze-utils/src/enums/stack-config.js","webpack://muze/./packages/muze-utils/src/common-utils.js","webpack://muze/./packages/muze-utils/node_modules/d3-ease/src/linear.js","webpack://muze/./packages/muze-utils/node_modules/d3-ease/src/circle.js","webpack://muze/./packages/muze-utils/src/DataSystem/dataSelect.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/symbol.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/order/descending.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/offset/diverging.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/offset/expand.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/offset/wiggle.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/pie.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/namespaces.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/namespace.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/creator.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selector.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selectorAll.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/matcher.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/sparse.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/enter.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/constant.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/data.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/sort.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/attr.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/window.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/style.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/classed.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/text.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/html.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/raise.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/lower.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/insert.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/remove.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/clone.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/on.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/dispatch.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/index.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/select.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/selectAll.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/filter.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/exit.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/merge.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/order.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/call.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/nodes.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/node.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/size.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/empty.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/each.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/property.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/append.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/datum.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/select.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/local.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/sourceEvent.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/point.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/mouse.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/touch.js","webpack://muze/./packages/muze-utils/node_modules/d3-dispatch/src/dispatch.js","webpack://muze/./packages/muze-utils/node_modules/d3-drag/src/noevent.js","webpack://muze/./packages/muze-utils/node_modules/d3-drag/src/nodrag.js","webpack://muze/./packages/muze-utils/node_modules/d3-drag/src/constant.js","webpack://muze/./packages/muze-utils/node_modules/d3-drag/src/event.js","webpack://muze/./packages/muze-utils/node_modules/d3-drag/src/drag.js","webpack://muze/./packages/muze-utils/node_modules/d3-timer/src/timer.js","webpack://muze/./packages/muze-utils/node_modules/d3-timer/src/timeout.js","webpack://muze/./packages/muze-utils/node_modules/d3-transition/src/transition/schedule.js","webpack://muze/./packages/muze-utils/node_modules/d3-transition/src/transition/tween.js","webpack://muze/./packages/muze-utils/node_modules/d3-transition/src/transition/interpolate.js","webpack://muze/./packages/muze-utils/node_modules/d3-transition/src/transition/remove.js","webpack://muze/./packages/muze-utils/node_modules/d3-transition/src/transition/selection.js","webpack://muze/./packages/muze-utils/node_modules/d3-transition/src/transition/text.js","webpack://muze/./packages/muze-utils/node_modules/d3-transition/src/transition/index.js","webpack://muze/./packages/muze-utils/node_modules/d3-transition/src/transition/select.js","webpack://muze/./packages/muze-utils/node_modules/d3-transition/src/transition/selectAll.js","webpack://muze/./packages/muze-utils/node_modules/d3-transition/src/transition/filter.js","webpack://muze/./packages/muze-utils/node_modules/d3-transition/src/transition/merge.js","webpack://muze/./packages/muze-utils/node_modules/d3-transition/src/transition/transition.js","webpack://muze/./packages/muze-utils/node_modules/d3-transition/src/transition/on.js","webpack://muze/./packages/muze-utils/node_modules/d3-transition/src/transition/attr.js","webpack://muze/./packages/muze-utils/node_modules/d3-transition/src/transition/attrTween.js","webpack://muze/./packages/muze-utils/node_modules/d3-transition/src/transition/style.js","webpack://muze/./packages/muze-utils/node_modules/d3-transition/src/transition/styleTween.js","webpack://muze/./packages/muze-utils/node_modules/d3-transition/src/transition/delay.js","webpack://muze/./packages/muze-utils/node_modules/d3-transition/src/transition/duration.js","webpack://muze/./packages/muze-utils/node_modules/d3-transition/src/transition/ease.js","webpack://muze/./packages/muze-utils/node_modules/d3-transition/src/selection/transition.js","webpack://muze/./packages/muze-utils/node_modules/d3-transition/src/selection/index.js","webpack://muze/./packages/muze-utils/node_modules/d3-transition/src/selection/interrupt.js","webpack://muze/./packages/muze-utils/node_modules/d3-transition/src/interrupt.js","webpack://muze/./packages/muze-utils/src/renderer-utils.js","webpack://muze/./packages/muze-utils/src/lifecycle-manager/event-list.js","webpack://muze/./packages/muze-utils/src/lifecycle-manager/lifecycle-manager.js","webpack://muze/./packages/muze-utils/src/lifecycle-manager/index.js","webpack://muze/./packages/muze-utils/src/lifecycle-manager/helper.js","webpack://muze/./packages/muze-utils/src/index.js","webpack://muze/./packages/muze-firebolt/src/enums/actions.js","webpack://muze/./packages/muze-firebolt/src/enums/selection.js","webpack://muze/./packages/muze-firebolt/src/selection-set/index.js","webpack://muze/./packages/muze-firebolt/src/selection-set/selection-set.js","webpack://muze/./packages/muze-firebolt/src/helper/index.js","webpack://muze/./packages/muze-firebolt/src/firebolt.js","webpack://muze/./packages/muze-firebolt/src/actions/behavioural/generic.js","webpack://muze/./packages/muze-firebolt/src/actions/behavioural/volatile.js","webpack://muze/./packages/muze-firebolt/src/enums/behaviours.js","webpack://muze/./packages/muze-firebolt/src/actions/behavioural/highlight.js","webpack://muze/./packages/muze-firebolt/src/actions/behavioural/brush.js","webpack://muze/./packages/muze-firebolt/src/actions/behavioural/filter.js","webpack://muze/./packages/muze-firebolt/src/actions/behavioural/persistent.js","webpack://muze/./packages/muze-firebolt/src/actions/behavioural/select.js","webpack://muze/./packages/muze-firebolt/src/actions/physical/helpers/drag-action-config.js","webpack://muze/./packages/muze-firebolt/src/actions/physical/helpers/drag-event.js","webpack://muze/./packages/muze-firebolt/src/actions/physical/hover.js","webpack://muze/./packages/muze-firebolt/src/enums/constants.js","webpack://muze/./packages/muze-firebolt/src/actions/physical/helpers/index.js","webpack://muze/./packages/muze-firebolt/src/actions/physical/click.js","webpack://muze/./packages/muze-firebolt/src/actions/physical/index.js","webpack://muze/./packages/muze-firebolt/src/actions/physical/drag.js","webpack://muze/./packages/muze-firebolt/src/actions/physical/longtouch.js","webpack://muze/./packages/muze-firebolt/src/actions/physical/touch-drag.js","webpack://muze/./packages/muze-firebolt/src/side-effects/generic/props.js","webpack://muze/./packages/muze-firebolt/src/side-effects/generic/index.js","webpack://muze/./packages/muze-firebolt/src/side-effects/generic/generic-sideeffect.js","webpack://muze/./packages/muze-firebolt/src/side-effects/surrogate.js","webpack://muze/./packages/muze-firebolt/src/side-effects/spawnable.js","webpack://muze/./packages/muze-firebolt/src/side-effects/selection-box/helper.js","webpack://muze/./packages/muze-firebolt/src/side-effects/selection-box/index.js","webpack://muze/./packages/muze-firebolt/src/actions/physical/selection-box-drag.js","webpack://muze/./packages/muze-tooltip/src/constants.js","webpack://muze/./packages/muze-tooltip/src/default-config.js","webpack://muze/./packages/muze-tooltip/src/helper.js","webpack://muze/./packages/muze-tooltip/src/content.js","webpack://muze/./packages/muze-tooltip/src/tooltip.js","webpack://muze/./packages/muze-firebolt/src/side-effects/tooltip/strategies.js","webpack://muze/./packages/muze-firebolt/src/side-effects/tooltip/index.js","webpack://muze/./packages/muze-firebolt/src/side-effects/helper/index.js","webpack://muze/./packages/muze-firebolt/src/side-effects/crossline/index.js","webpack://muze/./packages/muze-firebolt/src/side-effects/plot-highlighter/strategy.js","webpack://muze/./packages/muze-firebolt/src/side-effects/plot-highlighter/index.js","webpack://muze/./packages/muze-firebolt/src/side-effects/filter/index.js","webpack://muze/./packages/muze-firebolt/src/side-effects/anchors/index.js","webpack://muze/./packages/muze-firebolt/src/side-effects/persistent-anchors.js","webpack://muze/./packages/muze-firebolt/src/side-effects/brush-anchors.js","webpack://muze/./packages/muze-firebolt/src/behaviour-effect-map.js","webpack://muze/./packages/visual-layer/src/enums/constants.js","webpack://muze/./packages/visual-layer/src/layers/area/default-config.js","webpack://muze/./packages/visual-layer/src/simple-layer/simple-layer.js","webpack://muze/./packages/visual-layer/src/base-layer/props.js","webpack://muze/./packages/muze-axis/src/enums/axis-orientation.js","webpack://muze/./packages/muze-axis/src/enums/scale-type.js","webpack://muze/./packages/muze-axis/src/enums/constants.js","webpack://muze/./packages/muze-axis/src/scale-creator.js","webpack://muze/./packages/muze-axis/src/cartesian-axis/default-config.js","webpack://muze/./packages/muze-axis/src/axis-renderer.js","webpack://muze/./packages/muze-axis/src/cartesian-axis/skip-ticks.js","webpack://muze/./packages/muze-axis/src/cartesian-axis/space-setter.js","webpack://muze/./packages/muze-axis/src/cartesian-axis/helper.js","webpack://muze/./packages/muze-axis/src/cartesian-axis/props.js","webpack://muze/./packages/muze-axis/src/cartesian-axis/simple-axis.js","webpack://muze/./packages/muze-axis/src/cartesian-axis/interpolators/linear.js","webpack://muze/./packages/muze-axis/src/cartesian-axis/interpolators/log.js","webpack://muze/./packages/muze-axis/src/cartesian-axis/interpolators/pow.js","webpack://muze/./packages/muze-axis/src/cartesian-axis/continous-axis.js","webpack://muze/./packages/muze-axis/src/cartesian-axis/band-axis.js","webpack://muze/./packages/muze-axis/src/cartesian-axis/time-axis.js","webpack://muze/./packages/muze-axis/src/color-axis/color-maps.js","webpack://muze/./packages/muze-axis/src/color-axis/defaults.js","webpack://muze/./packages/muze-axis/src/color-axis/props.js","webpack://muze/./packages/muze-axis/src/helper.js","webpack://muze/./packages/muze-axis/src/color-axis/color-strategy.js","webpack://muze/./packages/muze-axis/src/color-axis/color-axis.js","webpack://muze/./packages/muze-axis/src/size-axis/defaults.js","webpack://muze/./packages/muze-axis/src/size-axis/size-strategy.js","webpack://muze/./packages/muze-axis/src/size-axis/props.js","webpack://muze/./packages/muze-axis/src/size-axis/size-axis.js","webpack://muze/./packages/muze-axis/src/shape-axis/defaults.js","webpack://muze/./packages/muze-axis/src/shape-axis/props.js","webpack://muze/./packages/muze-axis/src/shape-axis/shape-axis.js","webpack://muze/./packages/muze-axis/src/shape-axis/helper.js","webpack://muze/./packages/muze-axis/src/polar-axis/props.js","webpack://muze/./packages/muze-axis/src/polar-axis/angle-axis.js","webpack://muze/./packages/visual-group/src/enums/constants.js","webpack://muze/./packages/muze-axis/src/polar-axis/radius-axis.js","webpack://muze/./packages/muze-axis/src/data-type-scale-map.js","webpack://muze/./packages/transform/src/group-transform/index.js","webpack://muze/./packages/transform/src/identity-transform/index.js","webpack://muze/./packages/transform/src/transform-factory/index.js","webpack://muze/./packages/transform/src/enums/transform-type.js","webpack://muze/./packages/transform/src/stack-transform/index.js","webpack://muze/./packages/visual-layer/src/helpers/index.js","webpack://muze/./packages/visual-layer/src/base-layer/listener-map.js","webpack://muze/./packages/visual-layer/src/enums/props.js","webpack://muze/./packages/visual-layer/src/base-layer/default-options.js","webpack://muze/./packages/visual-layer/src/base-layer/base-layer.js","webpack://muze/./packages/visual-layer/src/layers/line/renderer.js","webpack://muze/./packages/visual-layer/src/layers/line/default-config.js","webpack://muze/./packages/visual-layer/src/layers/line/line.js","webpack://muze/./packages/visual-layer/src/layers/area/renderer.js","webpack://muze/./packages/visual-layer/src/layers/area/area.js","webpack://muze/./packages/visual-layer/src/layers/arc/default-config.js","webpack://muze/./packages/visual-layer/src/layers/arc/arc.js","webpack://muze/./packages/visual-layer/src/layers/arc/arc-helper.js","webpack://muze/./packages/visual-layer/src/layers/text/renderer.js","webpack://muze/./packages/visual-layer/src/layers/text/default-config.js","webpack://muze/./packages/visual-layer/src/layers/text/text.js","webpack://muze/./packages/visual-layer/src/layers/point/renderer.js","webpack://muze/./packages/visual-layer/src/layers/point/default-config.js","webpack://muze/./packages/visual-layer/src/layers/point/point.js","webpack://muze/./packages/visual-layer/src/layers/bar/renderer.js","webpack://muze/./packages/visual-layer/src/layers/bar/default-config.js","webpack://muze/./packages/visual-layer/src/layers/bar/bar-helper.js","webpack://muze/./packages/visual-layer/src/layers/bar/bar.js","webpack://muze/./packages/visual-layer/src/layers/tick/default-config.js","webpack://muze/./packages/visual-layer/src/layers/tick/renderer.js","webpack://muze/./packages/visual-layer/src/layers/tick/tick.js","webpack://muze/./packages/visual-layer/src/enums/layer-types.js","webpack://muze/./packages/visual-layer/src/layer-factory/layer-factory.js","webpack://muze/./packages/visual-layer/src/layer-factory/index.js","webpack://muze/./packages/visual-layer/src/defaults.js","webpack://muze/./packages/visual-group/src/visual-group/local-options.js","webpack://muze/./packages/visual-group/src/simple-group/simple-group.js","webpack://muze/./packages/visual-group/src/variable/variable.js","webpack://muze/./packages/visual-group/src/variable/composed-vars.js","webpack://muze/./packages/visual-group/src/variable/simple-var.js","webpack://muze/./packages/visual-group/src/encoder/field-sanitizer.js","webpack://muze/./packages/visual-group/src/encoder/visual-encoder.js","webpack://muze/./packages/visual-group/src/enums/scale-maps.js","webpack://muze/./packages/visual-group/src/data-type-scale-map.js","webpack://muze/./packages/visual-group/src/encoder/encoder-helper.js","webpack://muze/./packages/visual-group/src/encoder/cartesian-encoder.js","webpack://muze/./packages/visual-group/src/encoder/polar-encoder.js","webpack://muze/./packages/visual-group/src/encoder/retinal-encoder.js","webpack://muze/./packages/visual-group/src/group-helper/group-utils.js","webpack://muze/./packages/visual-unit/src/firebolt/action-behaviour-map.js","webpack://muze/./packages/visual-unit/src/helper/index.js","webpack://muze/./packages/visual-unit/src/enums/constants.js","webpack://muze/./packages/visual-unit/src/helper/grid-lines.js","webpack://muze/./packages/visual-unit/src/default-config.js","webpack://muze/./packages/visual-unit/src/local-options.js","webpack://muze/./packages/visual-unit/src/enums/reactive-props.js","webpack://muze/./packages/visual-unit/src/listener-map.js","webpack://muze/./packages/visual-unit/src/props.js","webpack://muze/./packages/visual-unit/src/firebolt/helper.js","webpack://muze/./packages/visual-unit/src/firebolt/payload-generator.js","webpack://muze/./packages/visual-unit/src/firebolt/data-propagator.js","webpack://muze/./packages/visual-unit/src/firebolt/index.js","webpack://muze/./packages/visual-unit/src/visual-unit.js","webpack://muze/./packages/visual-group/src/group-helper/matrix-model.js","webpack://muze/./packages/visual-group/src/group-helper/cell-creator.js","webpack://muze/./packages/visual-group/src/group-helper/resolver-props.js","webpack://muze/./packages/visual-group/src/group-helper/matrix-resolver.js","webpack://muze/./packages/visual-group/src/visual-group/value-matrix.js","webpack://muze/./packages/visual-group/src/visual-group/helper.js","webpack://muze/./packages/visual-group/src/visual-group/change-listener.js","webpack://muze/./packages/visual-group/src/visual-group/props.js","webpack://muze/./packages/visual-group/src/visual-group/visual-group.js","webpack://muze/./packages/muze-legend/src/firebolt/behavioural/select.js","webpack://muze/./packages/muze-legend/src/firebolt/action-behaviour-map.js","webpack://muze/./packages/muze-legend/src/firebolt/behaviour-effect-map.js","webpack://muze/./packages/muze-legend/src/enums/behaviours.js","webpack://muze/./packages/muze-legend/src/enums/side-effects.js","webpack://muze/./packages/muze-legend/src/enums/constants.js","webpack://muze/./packages/muze-legend/src/firebolt/helper.js","webpack://muze/./packages/muze-legend/src/firebolt/legend-firebolt.js","webpack://muze/./packages/muze-legend/src/firebolt/physical/drag.js","webpack://muze/./packages/muze-legend/src/firebolt/physical/hover.js","webpack://muze/./packages/muze-legend/src/firebolt/physical/click.js","webpack://muze/./packages/muze-legend/src/firebolt/physical/index.js","webpack://muze/./packages/muze-legend/src/enums/actions.js","webpack://muze/./packages/muze-legend/src/firebolt/physical/selection-box-drag.js","webpack://muze/./packages/muze-legend/src/firebolt/side-effects/selection-box/index.js","webpack://muze/./packages/muze-legend/src/firebolt/side-effects/legend-highlighter/strategies.js","webpack://muze/./packages/muze-legend/src/firebolt/side-effects/legend-highlighter/index.js","webpack://muze/./packages/muze-legend/src/legend/props.js","webpack://muze/./packages/muze-legend/src/legend/defaults.js","webpack://muze/./packages/muze-legend/src/legend/legend-helper.js","webpack://muze/./packages/muze-legend/src/legend/simple-legend.js","webpack://muze/./packages/muze-legend/src/legend/position-config.js","webpack://muze/./packages/muze-legend/src/legend/renderer.js","webpack://muze/./packages/muze-legend/src/legend/discrete-legend.js","webpack://muze/./packages/muze-legend/src/legend/gradient-helper.js","webpack://muze/./packages/muze-legend/src/legend/gradient-legend.js","webpack://muze/./packages/muze-legend/src/legend/step-legend.js","webpack://muze/./packages/muze/src/constants.js","webpack://muze/./packages/muze/src/operators.js","webpack://muze/./packages/muze/src/action-model.js","webpack://muze/./packages/muze/src/canvas/defaults.js","webpack://muze/./packages/muze/src/canvas/local-options.js","webpack://muze/./packages/layout/src/tree-layout/layout-component/layoutComponent.js","webpack://muze/./packages/layout/src/tree-layout/layout-component/dummy-component.js","webpack://muze/./packages/muze/src/defaults.js","webpack://muze/./packages/layout/src/tree-layout/constants/defaults.js","webpack://muze/./packages/layout/src/tree-layout/layout-definition/definition-manager/definitionModel.js","webpack://muze/./packages/layout/src/tree-layout/layout-definition/helper/index.js","webpack://muze/./packages/layout/src/tree-layout/layout-definition/tree/index.js","webpack://muze/./packages/layout/src/tree-layout/layout-definition/layout-model/index.js","webpack://muze/./packages/layout/src/tree-layout/utils/index.js","webpack://muze/./packages/layout/src/tree-layout/data-adapters/data-point.js","webpack://muze/./packages/layout/src/tree-layout/data-adapters/data-parser.js","webpack://muze/./packages/layout/src/tree-layout/data-adapters/helper.js","webpack://muze/./packages/layout/src/tree-layout/data-adapters/html-data.js","webpack://muze/./packages/layout/src/tree-layout/renderers/renderer.js","webpack://muze/./packages/layout/src/tree-layout/renderers/html-renderer.js","webpack://muze/./packages/layout/src/tree-layout/drawing-manager/helper.js","webpack://muze/./packages/layout/src/tree-layout/drawing-manager/index.js","webpack://muze/./packages/layout/src/tree-layout/layout-definition/definition-manager/index.js","webpack://muze/./packages/layout/src/tree-layout/layout-manager/layout-def.js","webpack://muze/./packages/layout/src/tree-layout/layout-manager/helper.js","webpack://muze/./packages/layout/src/tree-layout/layout-manager/index.js","webpack://muze/./packages/muze/src/canvas/helper.js","webpack://muze/./packages/muze/src/options.js","webpack://muze/./packages/layout/src/enums/constants.js","webpack://muze/./packages/layout/src/generic-layout/index.js","webpack://muze/./packages/layout/src/grid-layout/defaults.js","webpack://muze/./packages/layout/src/utils/index.js","webpack://muze/./packages/layout/src/visual-matrix/props.js","webpack://muze/./packages/layout/src/visual-matrix/default-config.js","webpack://muze/./packages/layout/src/visual-matrix/visual-matrix.js","webpack://muze/./packages/layout/src/visual-matrix/row-matrix.js","webpack://muze/./packages/layout/src/visual-matrix/column-matrix.js","webpack://muze/./packages/layout/src/grid-layout/computations.js","webpack://muze/./packages/layout/src/grid-layout/view-info-getter.js","webpack://muze/./packages/layout/src/grid-layout/layout.js","webpack://muze/./packages/layout/src/grid-layout/layout-helper.js","webpack://muze/./packages/layout/src/grid-layout/border-helper.js","webpack://muze/./packages/layout/src/grid-layout/span-maker.js","webpack://muze/./packages/muze/src/transaction-support.js","webpack://muze/./packages/muze/src/canvas/component-resolver.js","webpack://muze/./packages/visual-cell/src/enums/constants.js","webpack://muze/./packages/visual-cell/src/enums/cell-type.js","webpack://muze/./packages/visual-cell/src/simple-cell.js","webpack://muze/./packages/visual-cell/src/enums/defaults.js","webpack://muze/./packages/visual-cell/src/props.js","webpack://muze/./packages/visual-cell/src/axis-cell.js","webpack://muze/./packages/visual-cell/src/blank-cell.js","webpack://muze/./packages/visual-cell/src/text-cell.js","webpack://muze/./packages/visual-cell/src/geom-cell.js","webpack://muze/./packages/visual-cell/src/defaults.js","webpack://muze/./packages/visual-cell/src/constants.js","webpack://muze/./packages/visual-cell/src/cell-registry.js","webpack://muze/./packages/muze/src/canvas/title-maker.js","webpack://muze/./packages/muze/src/canvas/legend-maker.js","webpack://muze/./packages/muze/src/canvas/components/muze-chart-component.js","webpack://muze/./packages/muze/src/canvas/components/headerComponent.js","webpack://muze/./packages/muze/src/canvas/components/legendComponent.js","webpack://muze/./packages/muze/src/canvas/components/scroll-bar-maker/helper.js","webpack://muze/./packages/muze/src/canvas/components/scroll-bar-maker/props.js","webpack://muze/./packages/muze/src/canvas/components/scroll-bar-maker/scroll-maker.js","webpack://muze/./packages/muze/src/canvas/components/scroll-component.js","webpack://muze/./packages/muze/src/canvas/components/scroll-bar-maker/horizontal-scroll-maker.js","webpack://muze/./packages/muze/src/canvas/components/scroll-bar-maker/vertical-scroll-maker.js","webpack://muze/./packages/muze/src/canvas/components/matrix-component.js","webpack://muze/./packages/muze/src/canvas/components/grid-component.js","webpack://muze/./packages/muze/src/enums/constants.js","webpack://muze/./packages/muze/src/canvas/component-wrapper-maker.js","webpack://muze/./packages/muze/src/canvas/scroll-manager.js","webpack://muze/./packages/muze/src/canvas/layout-maker.js","webpack://muze/./packages/muze/src/canvas/firebolt/group-firebolt.js","webpack://muze/./packages/muze/src/canvas/firebolt/index.js","webpack://muze/./packages/muze/src/canvas/app-state.js","webpack://muze/./packages/muze/src/canvas/canvas.js","webpack://muze/./packages/muze/src/default-registry.js","webpack://muze/./packages/visual-layer/src/layer-registry.js","webpack://muze/./packages/muze/src/muze.js"],"names":["webpackUniversalModuleDefinition","root","factory","exports","module","define","amd","window","installedModules","__webpack_require__","moduleId","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","getDefault","getModuleExports","object","property","prototype","hasOwnProperty","p","s","_typeof2","__WEBPACK_AMD_DEFINE_ARRAY__","undefined","__WEBPACK_AMD_DEFINE_RESULT__","__WEBPACK_AMD_DEFINE_FACTORY__","apply","__webpack_exports__","csvParse","csvParseRows","csvFormat","csvFormatRows","_dsv__WEBPACK_IMPORTED_MODULE_0__","csv","parse","parseRows","format","formatRows","EOL","EOF","QUOTE","NEWLINE","RETURN","objectConverter","columns","Function","map","JSON","join","delimiter","reFormat","RegExp","DELIMITER","text","f","rows","N","length","I","eof","eol","token","j","row","formatRow","formatValue","convert","customConverter","inferColumns","columnSet","column","concat","_csv__WEBPACK_IMPORTED_MODULE_1__","_tsv__WEBPACK_IMPORTED_MODULE_2__","tsvParse","tsvParseRows","tsvFormat","tsvFormatRows","tsv","PROPAGATION","ROW_ID","DM_DERIVATIVES","JOINS","LOGICAL_OPERATORS","_enums__WEBPACK_IMPORTED_MODULE_0__","SELECT","PROJECT","GROUPBY","COMPOSE","CAL_VAR","BIN","SORT","CROSS","LEFTOUTER","RIGHTOUTER","NATURAL","FULLOUTER","AND","OR","_flat_json__WEBPACK_IMPORTED_MODULE_0__","_dsv_arr__WEBPACK_IMPORTED_MODULE_1__","_dsv_str__WEBPACK_IMPORTED_MODULE_2__","_utils__WEBPACK_IMPORTED_MODULE_3__","Auto","data","options","converters","FlatJSON","DSVStr","DSVArr","dataFormat","Error","arr","firstRowHeader","header","push","_utils__WEBPACK_IMPORTED_MODULE_0__","field","d3_dsv__WEBPACK_IMPORTED_MODULE_0__","str","fieldSeparator","dsv","insertionIndex","item","fields","_dsv_arr__WEBPACK_IMPORTED_MODULE_0__","_dsv_str__WEBPACK_IMPORTED_MODULE_1__","_flat_json__WEBPACK_IMPORTED_MODULE_2__","_auto_resolver__WEBPACK_IMPORTED_MODULE_3__","DataModel","_ref","_classCallCheck","this","_len","arguments","args","Array","_key","_this","_possibleConstructorReturn","__proto__","getPrototypeOf","_onPropagation","_relation__WEBPACK_IMPORTED_MODULE_5__","order","formatter","withUid","getAllFields","sort","getPartialFieldspace","dataGenerated","_operator__WEBPACK_IMPORTED_MODULE_3__","_rowDiffset","_colIdentifier","columnWise","addUid","schema","uids","fieldNames","e","fmtFieldIdx","reduce","acc","next","idx","elem","fIdx","fmtFn","datum","datumIdx","rowDiffset","ids","diffSets","set","_set$split$map","Number","_set$split$map2","_slicedToArray","start","end","fill","_","fieldsArr","reducers","config","saveChild","groupByString","params","newDataModel","persistDerivations","_constants__WEBPACK_IMPORTED_MODULE_2__","defaultReducer","_utils_reducer_store__WEBPACK_IMPORTED_MODULE_6__","sortingDetails","rawData","getData","dataInCSVArr","sortedDm","constructor","type","getFieldspace","colData","formattedData","rowsCount","serializedData","rowIdx","colIdx","FLAT_JSON","DSV_STR","DSV_ARR","fieldName","partialFieldspace","_partialFieldspace","cachedValueObjects","_cachedValueObjects","fieldIndex","findIndex","fieldinst","obj","_value__WEBPACK_IMPORTED_MODULE_9__","__calculateFieldspace","calculateFieldsConfig","dependency","_this2","_helper__WEBPACK_IMPORTED_MODULE_1__","replaceVar","fieldsConfig","getFieldsConfig","depVars","retrieveFn","depFieldIndices","fieldSpec","index","clone","fs","suppliedFields","cachedStore","cloneProvider","detachedRoot","computedValues","rowDiffsetIterator","fieldsData","_createFields","_field_creator__WEBPACK_IMPORTED_MODULE_7__","identifiers","addToNameSpace","propConfig","isMutableAction","propagationSourceId","sourceId","payload","rootModel","propagationNameSpace","_propagationNameSpace","rootModels","groupByModel","model","propagateToAllDataModels","assign","propagateImmutableActions","eventName","callback","propModel","_this3","propListeners","fn","measureFieldName","binFieldName","measureField","fieldsObj","_createBinnedFieldDat","_operator_bucket_creator__WEBPACK_IMPORTED_MODULE_4__","binnedData","bins","binField","DIMENSION","subtype","BINNED","serialize","getSchema","_invalid_aware_types__WEBPACK_IMPORTED_MODULE_8__","invalidAwareVals","AUTO","CATEGORICAL","TEMPORAL","GEO","MEASURE","NORMAL","INVERSE","ALL","SUM","AVG","MIN","MAX","FIRST","LAST","COUNT","STD","_data_format__WEBPACK_IMPORTED_MODULE_0__","_dimension_subtype__WEBPACK_IMPORTED_MODULE_1__","_measure_subtype__WEBPACK_IMPORTED_MODULE_2__","_field_type__WEBPACK_IMPORTED_MODULE_3__","_filtering_mode__WEBPACK_IMPORTED_MODULE_4__","_group_by_functions__WEBPACK_IMPORTED_MODULE_5__","CONTINUOUS","_datamodel__WEBPACK_IMPORTED_MODULE_0__","_operator__WEBPACK_IMPORTED_MODULE_1__","_stats__WEBPACK_IMPORTED_MODULE_2__","_enums__WEBPACK_IMPORTED_MODULE_3__","_utils__WEBPACK_IMPORTED_MODULE_4__","_constants__WEBPACK_IMPORTED_MODULE_5__","_invalid_aware_types__WEBPACK_IMPORTED_MODULE_6__","_package_json__WEBPACK_IMPORTED_MODULE_7__","Operators","compose","bin","select","project","groupBy","calculateVariable","crossProduct","difference","naturalJoin","leftOuterJoin","rightOuterJoin","fullOuterJoin","union","version","Stats","DateTimeFormatter","DataFormat","FilteringMode","InvalidAwareTypes","createUnitFieldFromPartial","createFields","_fields__WEBPACK_IMPORTED_MODULE_1__","partialField","dataColumn","headers","headersObj","createUnitField","_utils__WEBPACK_IMPORTED_MODULE_1__","fieldStore","createNamespace","fieldArr","dataId","_cachedFieldsObj","forEach","getMeasure","measureFields","_cachedMeasure","getDimension","dimensionFields","_cachedDimension","Binned","_dimension__WEBPACK_IMPORTED_MODULE_0__","binsArr","Categorical","_dimension__WEBPACK_IMPORTED_MODULE_2__","_enums__WEBPACK_IMPORTED_MODULE_1__","hash","Set","domain","Continuous","_measure__WEBPACK_IMPORTED_MODULE_2__","min","POSITIVE_INFINITY","max","NEGATIVE_INFINITY","_invalid_aware_types__WEBPACK_IMPORTED_MODULE_3__","Dimension","_field__WEBPACK_IMPORTED_MODULE_0__","_cachedDomain","calculateDataDomain","Field","description","displayName","_dimension__WEBPACK_IMPORTED_MODULE_1__","_categorical__WEBPACK_IMPORTED_MODULE_2__","_temporal__WEBPACK_IMPORTED_MODULE_3__","_binned__WEBPACK_IMPORTED_MODULE_4__","_measure__WEBPACK_IMPORTED_MODULE_5__","_continuous__WEBPACK_IMPORTED_MODULE_6__","_parsers_field_parser__WEBPACK_IMPORTED_MODULE_7__","_parsers_categorical_parser__WEBPACK_IMPORTED_MODULE_8__","_parsers_temporal_parser__WEBPACK_IMPORTED_MODULE_9__","_parsers_binned_parser__WEBPACK_IMPORTED_MODULE_10__","_parsers_continuous_parser__WEBPACK_IMPORTED_MODULE_11__","_partial_field__WEBPACK_IMPORTED_MODULE_12__","Measure","_field__WEBPACK_IMPORTED_MODULE_2__","unit","defAggFn","_operator_group_by_function__WEBPACK_IMPORTED_MODULE_1__","numberFormat","BinnedParser","_field_parser__WEBPACK_IMPORTED_MODULE_0__","val","String","result","_invalid_aware_types__WEBPACK_IMPORTED_MODULE_1__","isInvalid","getInvalidType","matched","CategoricalParser","ContinuousParser","parsedVal","parseFloat","FieldParser","TemporalParser","_dtf","_field_parser__WEBPACK_IMPORTED_MODULE_1__","_invalid_aware_types__WEBPACK_IMPORTED_MODULE_2__","nativeDate","getNativeDate","PartialField","parser","_sanitize","Temporal","_cachedMinDiff","sortedData","filter","a","b","arrLn","minDiff","prevDatum","nextDatum","processedCount","Math","_utils__WEBPACK_IMPORTED_MODULE_2__","formatAs","prepareJoinData","resp","_value__WEBPACK_IMPORTED_MODULE_2__","updateFields","fieldStoreName","_ref2","colIdentifier","collID","partialFieldMap","newFields","coll","_field_creator__WEBPACK_IMPORTED_MODULE_5__","_field_store__WEBPACK_IMPORTED_MODULE_1__","persistCurrentDerivation","operation","_model$_derivation","criteriaFn","_constants__WEBPACK_IMPORTED_MODULE_4__","_derivation","_toConsumableArray","op","meta","criteria","persistAncestorDerivation","sourceDm","newDm","_newDm$_ancestorDeriv","_ancestorDerivation","generateRowDiffset","lastInsertedValue","li","selectHelper","selectFn","newRowDiffSet","rejRowDiffSet","lastInsertedValueRej","selectorHelperFn","checker","passFn","cloneWithAllFields","clonedDm","getKey","len","filterPropagationModel","propModels","fns","filterByMeasure","modelFieldsConfig","dataModel","keyFn","dataObj","dimensions","keys","indices","measures","fieldsSpace","v","valuesMap","every","some","cloneWithSelect","selectConfig","cloneConfig","cloned","_selectHelper","_selectHelper2","oDm","rejCloned","cloneWithProject","projField","allFields","projectionSet","actualProjField","sanitizeUnitSchema","unitSchema","_utils__WEBPACK_IMPORTED_MODULE_8__","validateUnitSchema","supportedMeasureSubTypes","supportedDimSubTypes","sanitizeAndValidateSchema","resolveFieldName","dataHeader","fieldNameAs","as","updateData","relation","_default_config__WEBPACK_IMPORTED_MODULE_6__","converterFn","_converter__WEBPACK_IMPORTED_MODULE_7__","_converterFn","_converterFn2","nameSpace","valueObjects","prepareSelectionData","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_step","_iterator","iterator","done","err","return","fieldInSchema","getDerivationArguments","derivation","applyExistingOperationOnModel","selectionModel","getDerivations","derivations","_selectionModel","_getDerivationArgumen","propagateIdentifiers","propModelInf","nonTraversingModel","excludeModels","propagate","_children","children","child","getRootGroupByModel","find","getRootDataModel","_parent","getPathToRootModel","path","propagationInf","propagateToSource","propagateInterpolatedValues","criterias","_ref3","actionCriterias","mutableActions","filteredCriteria","filterFn","entry","action","sourceActionCriterias","actionInf","actionConf","models","sourceIdentifiers","rootGroupByModel","inf","propagationModel","filteredModel","getFilteredModel","reverse","immutableActions","filterImmutableAction","criteriaModel","addToPropNamespace","sourceNamespace","_value","_invalidAwareValsMap","invalid","NA","nil","NIL","null","NULL","generateBuckets","binSize","buckets","findBucketRange","bucketRanges","leftIdx","rightIdx","midIdx","range","createBinnedFieldData","binsCount","_measureField$domain","_measureField$domain2","dMin","dMax","dm","_len2","_key2","_len3","_key3","_len4","_key4","_len5","operations","_key5","currentDM","firstChild","_constants__WEBPACK_IMPORTED_MODULE_1__","_get_common_schema__WEBPACK_IMPORTED_MODULE_2__","_row_diffset_iterator__WEBPACK_IMPORTED_MODULE_3__","_helper__WEBPACK_IMPORTED_MODULE_5__","defaultFilterFn","dm1","dm2","replaceCommonSchema","jointype","applicableFilterFn","dm1FieldStore","dm2FieldStore","dm1FieldStoreName","dm2FieldStoreName","commonSchemaList","tmpSchema","rowAdded","rowPosition","ii","tuple","userArg","dm1Fields","dm2Fields","cloneProvider1","cloneProvider2","tupleObj","cellVal","iii","getSortFn","dataType","sortType","retFunc","a1","b1","groupData","hashMap","Map","groupedData","fieldVal","createSortingFnArg","groupedDatum","targetFields","targetFieldDetails","arg","label","dataBuilder","retObj","reqSorting","tmpDataArr","colIArr","colName","insertInd","sortData","sortMeta","fDetails","_helper__WEBPACK_IMPORTED_MODULE_3__","mergeSort","sortingFn","tmpData","_row_diffset_iterator__WEBPACK_IMPORTED_MODULE_2__","_utils_helper__WEBPACK_IMPORTED_MODULE_3__","hashTable","schemaNameArr","dm1FieldStoreFieldObj","dm2FieldStoreFieldObj","prepareDataHelper","addData","hashData","schemaName","getCommonSchema","fs1","fs2","retArr","fs1Arr","_enums__WEBPACK_IMPORTED_MODULE_2__","getFilteredValues","sum","filteredNumber","curr","avg","totalSum","fnList","filteredValues","first","last","count","std","variance","mean","num","pow","_fnList","defaultReducerName","getFieldArr","getReducerObj","defReducer","_utils_reducer_store__WEBPACK_IMPORTED_MODULE_3__","measureName","reducerFn","resolve","_group_by_function__WEBPACK_IMPORTED_MODULE_4__","existingDataModel","sFieldArr","reducerObj","fieldStoreObj","dbName","dimensionArr","measureArr","_ref4","_enums__WEBPACK_IMPORTED_MODULE_5__","rowCount","_export__WEBPACK_IMPORTED_MODULE_2__","_bucket_creator__WEBPACK_IMPORTED_MODULE_0__","_compose__WEBPACK_IMPORTED_MODULE_1__","_pure_operators__WEBPACK_IMPORTED_MODULE_2__","_cross_product__WEBPACK_IMPORTED_MODULE_3__","_data_builder__WEBPACK_IMPORTED_MODULE_4__","_difference__WEBPACK_IMPORTED_MODULE_5__","_get_common_schema__WEBPACK_IMPORTED_MODULE_6__","_group_by_function__WEBPACK_IMPORTED_MODULE_7__","_group_by__WEBPACK_IMPORTED_MODULE_8__","_merge_sort__WEBPACK_IMPORTED_MODULE_9__","_natural_join_filter_function__WEBPACK_IMPORTED_MODULE_10__","_natural_join__WEBPACK_IMPORTED_MODULE_11__","_outer_join__WEBPACK_IMPORTED_MODULE_12__","_row_diffset_iterator__WEBPACK_IMPORTED_MODULE_13__","_union__WEBPACK_IMPORTED_MODULE_14__","defSortFn","sortFn","lo","hi","mid","merge","mainArr","auxArr","naturalJoinFilter","_get_common_schema__WEBPACK_IMPORTED_MODULE_0__","commonSchemaArr","retainTuple","_cross_product__WEBPACK_IMPORTED_MODULE_0__","_natural_join_filter_function__WEBPACK_IMPORTED_MODULE_1__","dataModel1","dataModel2","_union__WEBPACK_IMPORTED_MODULE_2__","rowDiffArr","diffStr","diffStsArr","_export__WEBPACK_IMPORTED_MODULE_0__","Relation","source","_dataFormat","_dataObjects","_fieldStoreName","_fieldspace","_helper__WEBPACK_IMPORTED_MODULE_2__","joinWith","unionWith","differenceWith","defConfig","fieldConfig","normalizedProjField","from","trim","_fieldConfig","fieldObj","def","removeChild","sibling","splice","parent","sd","_operator_group_by_function__WEBPACK_IMPORTED_MODULE_0__","store","convertToNativeDate","date","Date","pad","dtParams","YEAR","MONTH","DAY","HOUR","MINUTE","SECOND","MILLISECOND","defVal","isFinite","parseInt","nVal","toLowerCase","daysDef","short","long","monthsDef","H","extract","defaultNumberParser","toString","hours","getHours","P","M","getMinutes","S","getSeconds","K","getMilliseconds","day","getDay","A","getDate","month","getMonth","B","y","presentDate","presentYear","getFullYear","year","Y","definitions","getTokenDefinitions","HOUR_12","AMPM_UPPERCASE","AMPM_LOWERCASE","SHORT_DAY","LONG_DAY","DAY_OF_MONTH","DAY_OF_MONTH_CONSTANT_WIDTH","SHORT_MONTH","LONG_MONTH","MONTH_OF_YEAR","SHORT_YEAR","LONG_YEAR","defaultResolver","targetParam","hourFormat24","hourFormat12","ampmLower","ampmUpper","amOrpm","isPM","tokenPrefix","TOKEN_PREFIX","tokenLiterals","occurrence","forwardChar","nDate","formattedStr","formattedVal","dateTimeStamp","tokenResolver","extractTokenValue","dtParamSeq","DATETIME_PARAM_SEQUENCE","noBreak","dtParamArr","resolverKey","resolverParams","resolverFn","param","resolvedVal","checkIfOnlyYear","tokenObj","lastOccurrenceIndex","occObj","occIndex","targetText","regexFormat","tokenArr","occurrenceLength","extractValues","match","OBJECTSTRING","objectToStrFn","objectToStr","arrayToStr","checkCyclicRef","parentArr","bIndex","extend2","obj1","obj2","skipUndef","_typeof","tgtArr","srcArr","srcVal","tgtVal","cRef","isArray","isObject","isString","isCallable","uniqueValues","getUniqueId","getTime","isArrEqual","arr1","arr2","formatNumber","detectDataFormat","_date_time_formatter__WEBPACK_IMPORTED_MODULE_0__","_column_major__WEBPACK_IMPORTED_MODULE_1__","_domain_generator__WEBPACK_IMPORTED_MODULE_2__","_extend2__WEBPACK_IMPORTED_MODULE_3__","_helper__WEBPACK_IMPORTED_MODULE_4__","ReducerStore","_operator__WEBPACK_IMPORTED_MODULE_0__","reducer","__unregister","has","delete","reducerStore","getStore","Value","configurable","writable","ElectricNode","edges","listeners","nextFrame","currentFrame","_edges","lstnrs","GraphNode","qualifiedName","outgoingEdges","_seed","requireResolve","retriever","history","resolver","electricEdges","dep","node","seed","retrieveDetails","edge","head","hist","Graph","qualifiedNodeMap","_graph_node__WEBPACK_IMPORTED_MODULE_1__","accumulate","_wholeSet","_propagate","propagationOverride","currentFrameListeners","nextFrameListeners","_schedule","qname","flushTarget","flush","mount","resolveReqList","qnames","rec","objn","perv","_node","addDependencies","getDependencies","append","getResolvedList","getUpstreamNodes","prop","props","fnSpec","nodes","eNode","_electric_node__WEBPACK_IMPORTED_MODULE_2__","addEdges","changedSet","upstreamNodes","upstreamNode","__execUniqueElectricEdges","cfLstnrs","nfLstnrs","toArray","entries","repeatHead","resetPropagationOverride","_this4","update","resolved","resolveDependencyOrder","_model__WEBPACK_IMPORTED_MODULE_0__","Model","_graph","_graph__WEBPACK_IMPORTED_MODULE_0__","_lockFlag","_reqQ","mountPoint","_addPropInModel","_customResolver","calculationConfig","customResolver","varName","fetchFn","dependencies","_defineProperty","createNodesFrom","instantCall","_graph$stopPropagatio","propsArr","unsub","createElectricNodeOf","stopPropagation","setPropagationOverride","resetNodeValue","_graph$stopPropagatio2","setProp","getNodeValue","getNodeFromQualifiedName","isSimpleObject","win","reqAnimFrame","setTimeout","getTimeBasedId","__lastTime","__id","pullableRecent","nFn","pullableEnd","unique","flat","res","identityMap","arrays","splitPathProp","pathArr","scheduler","onFinishCallback","queue","animationFrame","tempQ","fetch","namedNode","fetchAggregator","list","placedIndex","preArr","postArr","nodeDetails","identity","resolveMap","neighbour","CustomResolver","_dep","makeEntry","sCon","ForeignSet","_set","set1","set2","filteredKeys","s1","s2","webpackPolyfill","deprecate","paths","_interopRequireDefault","default","_lib2","require","_containerManager2","slLib","init","doc","document","round","htmlSplCharSpace"," ","documentSupport","getDocumentSupport","SVG_BBOX_CORRECTION","isWebKit","SmartLabelManager","id","container","useEllipses","wrapper","prevInstance","isBrowserLess","dispose","maxCacheLimit","maxDefaultCacheLimit","getElementById","createContainer","innerHTML","testStrAvg","isHeadLess","isIE","offsetHeight","offsetWidth","parentContainerStyle","style","parentContainer","_containerManager","_showNoEllipses","_init","setStyle","textToLines","smartlabel","lines","split","_calCharDimWithCache","calculateDifference","size","csArr","tw","twi","cachedStyle","asymmetricDifference","maxAdvancedCacheLimit","_container","cache","_advancedCache","advancedCacheKey","_advancedCacheKey","cacheName","fontSize","fontFamily","fontWeight","fontStyle","cacheInitName","repeat","shift","width","height","_getWidthFn","contObj","_containerObj","svgText","bbox","textContent","getBBox","_styleNotSet","setLineHeight","sCont","_context","context","_cache","charCache","_lineHeight","lineHeight","useEllipsesOnOverflow","getSmartText","maxWidth","maxHeight","noWrap","trimStr","tempArr","tmpText","maxWidthWithEll","toolText","oriWidth","oriHeight","newCharIndex","nearestChar","tempChar","getWidth","initialLeft","initialTop","getOriSizeImproveObj","spanArr","x","minWidth","chr","elemRightMostPoint","elemLowestPoint","lastBR","removeFromIndex","removeFromIndexForEllipses","hasHTMLTag","maxStrWidth","lastDash","lastSpace","lastIndexBroken","strWidth","strHeight","oriTextArr","ellipsesStr","ellipsesWidth","dotWidth","characterArr","dashIndex","spaceIndex","lastLineBreak","fastTrim","ws","replace","test","charAt","slice","smartLabel","oriTextWidth","oriTextHeight","oriText","isTruncated","xmlTagRegEx","ltgtRegex","getOriSize","substr","getNearestBreakIndex","detailObj","tooltext","lastIndexOf","spanAdditionRegx","spanAdditionReplacer","classNameWithTag","classNameWithTagBR","childRetriverFn","childRetriverString","noClassTesting","classNameReg","className","spaceIdx","dashIdx","offsetLeft","offsetTop","parentNode","insertBefore","createElement","classNameBrReg","spanRemovalRegx","error","detailedCalculationFlag","textArr","letter","lSize","cumulativeSize","indiSizeStore","lib","userAgent","navigator","ceil","floor","clsNameSpace","containerClass","brReplaceRegex","position","top","whiteSpace","padding","overflow","supportedStyle","font","font-family","font-weight","font-size","line-height","font-style","getElementsByClassName","opera","hasSVG","Boolean","SVGAngle","implementation","hasFeature","containerParent","body","appendChild","setAttribute","getElementsByTagName","sl","charLen","increment","avgWidth","styleObj","fSize","Muze","ContainerManager","maxContainers","svg","containers","rootNode","createElementNS","setAttributeNS","svgRoot","diff","containerObj","keyStr","prev","removeContainer","addContainer","avgCharWidth","display","cObj","ascending","NaN","bisector","compare","ascendingComparator","left","right","ascendingBisect","bisectRight","number","array","src_range","stop","step","e10","sqrt","e5","e2","src_ticks","ticks","tickIncrement","power","log","LN10","tickStep","step0","abs","step1","quantile","values","valueof","i0","value0","each","remove","clear","empty","src_nest","sortValues","rollup","nest","sortKeys","depth","createResult","setResult","keyValue","valuesByKey","createObject","setObject","createMap","setMap","sortKey","k","proto","add","implicit","ordinal","unknown","scale","copy","band","bandwidth","ordinalRange","paddingInner","paddingOuter","align","rescale","sequence","rangeRound","invertExtent","r0","r1","hiIndex","getClosestIndexOf","invert","side","highVal","d1","low","high","extend","definition","Color","reI","reN","reP","reHex3","reHex6","reRgbInteger","reRgbPercent","reRgbaInteger","reRgbaPercent","reHslPercent","reHslaPercent","named","aliceblue","antiquewhite","aqua","aquamarine","azure","beige","bisque","black","blanchedalmond","blue","blueviolet","brown","burlywood","cadetblue","chartreuse","chocolate","coral","cornflowerblue","cornsilk","crimson","cyan","darkblue","darkcyan","darkgoldenrod","darkgray","darkgreen","darkgrey","darkkhaki","darkmagenta","darkolivegreen","darkorange","darkorchid","darkred","darksalmon","darkseagreen","darkslateblue","darkslategray","darkslategrey","darkturquoise","darkviolet","deeppink","deepskyblue","dimgray","dimgrey","dodgerblue","firebrick","floralwhite","forestgreen","fuchsia","gainsboro","ghostwhite","gold","goldenrod","gray","green","greenyellow","grey","honeydew","hotpink","indianred","indigo","ivory","khaki","lavender","lavenderblush","lawngreen","lemonchiffon","lightblue","lightcoral","lightcyan","lightgoldenrodyellow","lightgray","lightgreen","lightgrey","lightpink","lightsalmon","lightseagreen","lightskyblue","lightslategray","lightslategrey","lightsteelblue","lightyellow","lime","limegreen","linen","magenta","maroon","mediumaquamarine","mediumblue","mediumorchid","mediumpurple","mediumseagreen","mediumslateblue","mediumspringgreen","mediumturquoise","mediumvioletred","midnightblue","mintcream","mistyrose","moccasin","navajowhite","navy","oldlace","olive","olivedrab","orange","orangered","orchid","palegoldenrod","palegreen","paleturquoise","palevioletred","papayawhip","peachpuff","peru","pink","plum","powderblue","purple","rebeccapurple","red","rosybrown","royalblue","saddlebrown","salmon","sandybrown","seagreen","seashell","sienna","silver","skyblue","slateblue","slategray","slategrey","snow","springgreen","steelblue","tan","teal","thistle","tomato","turquoise","violet","wheat","white","whitesmoke","yellow","yellowgreen","color","exec","Rgb","rgbn","rgba","hsla","g","rgbConvert","rgb","opacity","hex","h","Hsl","hsl","hslConvert","hsl2rgb","m1","m2","displayable","brighter","darker","isNaN","deg2rad","PI","rad2deg","Xn","Yn","Zn","t0","t1","t2","t3","labConvert","Lab","Hcl","cos","sin","z","rgb2lrgb","xyz2lab","lab","lab2xyz","lrgb2rgb","hclConvert","atan2","hcl","C","D","E","ED","EB","BC_DA","cubehelix","cubehelixConvert","Cubehelix","bl","basis","v0","v1","v2","v3","cosh","sinh","src_constant","linear","hue","constant","gamma","nogamma","exponential","src_rgb","rgbGamma","colorRgb","rgbSpline","spline","colors","rgbBasis","src_number","reA","reB","src_string","am","bm","bs","bi","lastIndex","q","one","zero","cssNode","cssRoot","cssView","svgNode","src_value","value_typeof","string","setTime","nb","na","valueOf","src_round","degrees","translateX","translateY","rotate","skewX","scaleX","scaleY","decompose","atan","interpolateTransform","pxComma","pxParen","degParen","pop","translate","xa","ya","xb","yb","interpolateTransformCss","parseCss","documentElement","defaultView","transform","getComputedStyle","getPropertyValue","interpolateTransformSvg","parseSvg","baseVal","consolidate","matrix","SQRT2","colorHsl","hslLong","colorHcl","cubehelixGamma","colorCubehelix","cubehelixLong","piecewise","interpolate","d3_scale_src_constant","d3_scale_src_number","deinterpolateLinear","bimap","deinterpolate","reinterpolate","d0","polymap","bisect","target","clamp","continuous","output","input","interpolateValue","deinterpolateClamp","reinterpolateClamp","interpolateRound","formatDecimal","toExponential","indexOf","coefficient","src_exponent","re","formatSpecifier","specifier","FormatSpecifier","sign","symbol","comma","precision","prefixExponent","locale","formatPrefix","formatTrim","out","i1","formatRounded","exponent","formatTypes","%","toFixed","toPrecision","X","toUpperCase","src_identity","prefixes","src_locale","group","grouping","thousands","substring","formatGroup","currency","decimal","numerals","formatNumerals","percent","newFormat","prefix","suffix","formatType","maybeSuffix","valuePrefix","valueSuffix","valueNegative","charCodeAt","Infinity","defaultLocale","formatLocale","src_tickFormat","precisionPrefix","precisionRound","precisionFixed","linearish","tickFormat","nice","interval","x0","x1","pow10","powp","base","exp","logp","log10","log2","reflect","logs","pows","u","raise","thresholds","threshold","quantiles","quantize","newInterval","floori","offseti","offset","previous","millisecond","durationMinute","durationWeek","second","getUTCSeconds","minute","hour","setHours","setDate","getTimezoneOffset","weekday","sunday","monday","tuesday","wednesday","thursday","friday","saturday","setMonth","setFullYear","utcMinute","setUTCSeconds","getUTCMinutes","utcHour","setUTCMinutes","getUTCHours","utcDay","setUTCHours","setUTCDate","getUTCDate","utcWeekday","getUTCDay","utcSunday","utcMonday","utcTuesday","utcWednesday","utcThursday","utcFriday","utcSaturday","utcMonth","setUTCMonth","getUTCMonth","getUTCFullYear","utcYear","setUTCFullYear","localDate","L","utcDate","UTC","newYear","timeFormat","utcFormat","utcParse","pads","-","0","numberRe","percentRe","requoteRe","requote","formatRe","names","formatLookup","parseWeekdayNumberSunday","w","parseWeekdayNumberMonday","parseWeekNumberSunday","U","parseWeekNumberISO","V","parseWeekNumberMonday","W","parseFullYear","parseYear","parseZone","Z","parseMonthNumber","parseDayOfMonth","parseDayOfYear","parseHour24","parseMinutes","parseSeconds","parseMilliseconds","parseMicroseconds","parseLiteralPercent","parseUnixTimestamp","Q","parseUnixTimestampSeconds","formatDayOfMonth","formatHour24","formatHour12","formatDayOfYear","timeDay","timeYear","formatMilliseconds","formatMicroseconds","formatMonthNumber","formatMinutes","formatSeconds","formatWeekdayNumberMonday","formatWeekNumberSunday","timeSunday","formatWeekNumberISO","timeThursday","formatWeekdayNumberSunday","formatWeekNumberMonday","timeMonday","formatYear","formatFullYear","formatZone","formatUTCDayOfMonth","formatUTCHour24","formatUTCHour12","formatUTCDayOfYear","formatUTCMilliseconds","getUTCMilliseconds","formatUTCMicroseconds","formatUTCMonthNumber","formatUTCMinutes","formatUTCSeconds","formatUTCWeekdayNumberMonday","dow","formatUTCWeekNumberSunday","formatUTCWeekNumberISO","formatUTCWeekdayNumberSunday","formatUTCWeekNumberMonday","formatUTCYear","formatUTCFullYear","formatUTCZone","formatLiteralPercent","formatUnixTimestamp","formatUnixTimestampSeconds","locale_dateTime","dateTime","locale_date","locale_time","time","locale_periods","periods","locale_weekdays","days","locale_shortWeekdays","shortDays","locale_months","months","locale_shortMonths","shortMonths","periodRe","periodLookup","weekdayRe","weekdayLookup","shortWeekdayRe","shortWeekdayLookup","monthRe","monthLookup","shortMonthRe","shortMonthLookup","formats","formatShortWeekday","formatWeekday","formatShortMonth","formatMonth","formatPeriod","utcFormats","formatUTCShortWeekday","formatUTCWeekday","formatUTCShortMonth","formatUTCMonth","formatUTCPeriod","parses","parseShortWeekday","parseWeekday","parseShortMonth","parseMonth","parseLocaleDateTime","parseSpecifier","parsePeriod","parseLocaleDate","parseLocaleTime","newParse","newDate","week","toISOString","durationSecond","durationHour","durationDay","durationMonth","durationYear","calendar","formatMillisecond","formatSecond","formatMinute","formatHour","formatDay","formatWeek","tickIntervals","tickInterval","src_time","timeMonth","timeWeek","timeHour","timeMinute","timeSecond","timeMillisecond","src_colors","interpolateCubehelixLong","ramp","sequential","interpolator","d3_scale_chromatic_src_colors","src_ramp","scheme","interpolateRgbBasis","warm","cool","sequential_multi_rainbow","ts","magma","inferno","plasma","UNIT_GLOBAL_NAMESPACE","UNIT_LOCAL_NAMESPACE","LAYER_LOCAL_NAMESPACE","LAYER_GLOBAL_NAMESPACE","GROUP_GLOBAL_NAMESPACE","GROUP_LOCAL_NAMESPACE","CANVAS_LOCAL_NAMESPACE","CANVAS_GLOBAL_NAMESPACE","ReservedFields","CommonProps","ACTION_INF","ON_LAYER_DRAW","MATRIX_CREATED","COORD_TYPES","d3_axis_src_identity","bottom","epsilon","entering","__axis","axis","orient","tickArguments","tickValues","tickTransform","tickSizeInner","tickSizeOuter","tickPadding","spacing","range0","range1","center","selection","selectAll","tick","tickExit","exit","tickEnter","enter","attr","line","insert","transition","getAttribute","tickSize","pi","tau","tauEpsilon","Path","_x0","_y0","_x1","_y1","moveTo","closePath","lineTo","quadraticCurveTo","y1","bezierCurveTo","x2","y2","arcTo","y0","x21","y21","x01","y01","l01_2","x20","y20","l21_2","l20_2","l21","l01","acos","t01","t21","arc","a0","ccw","dx","dy","cw","da","rect","d3_shape_src_constant","halfPi","asin","arcInnerRadius","innerRadius","arcOuterRadius","outerRadius","arcStartAngle","startAngle","arcEndAngle","endAngle","arcPadAngle","padAngle","cornerTangents","rc","ox","oy","x11","y11","x10","y10","x00","y00","d2","cx0","cy0","cx1","cy1","dx0","dy0","dx1","dy1","cx","cy","Linear","areaStart","_line","areaEnd","lineStart","_point","lineEnd","point","curve_linear","src_line","pointX","pointY","defined","curve","curveLinear","buffer","defined0","src_area","area","x0z","y0z","arealine","lineX0","lineY0","lineY1","lineX1","src_descending","d3_shape_src_identity","curveRadial","Radial","_curve","radial","symbol_circle","draw","symbol_cross","tan30","tan30_2","diamond","kr","kx","ky","star","square","sqrt3","triangle","wye","noop","that","Basis","BasisClosed","_x2","_x3","_x4","_y2","_y3","_y4","BasisOpen","Bundle","beta","_basis","_beta","_x","_y","custom","bundle","_k","Cardinal","tension","cardinal","CardinalClosed","_x5","_y5","CardinalOpen","_l01_a","_l01_2a","_l12_a","_l12_2a","_l23_a","_l23_2a","CatmullRom","alpha","_alpha","x23","y23","curve_catmullRom","catmullRom","CatmullRomClosed","CatmullRomOpen","LinearClosed","slope3","h0","h1","s0","slope2","MonotoneX","MonotoneY","ReflectContext","Natural","controlPoints","_t0","px","py","Step","_t","curve_step","stepBefore","stepAfter","none","series","order_none","stackValue","order_ascending","sums","cubicInOut","polyIn","polyOut","polyInOut","b2","b3","b4","b5","b6","b7","b8","b9","b0","bounceOut","backIn","overshoot","backOut","backInOut","elasticOut","elasticIn","amplitude","period","d3_voronoi_src_constant","elasticInOut","RedBlackTree","RedBlackNode","R","RedBlackRotateLeft","tree","RedBlackRotateRight","RedBlackFirst","after","grandpa","uncle","createEdge","setEdgeEnd","cells","halfedges","createBorderEdge","vertex","clipEdge","ax","ay","connectEdge","fm","fb","lx","ly","rx","ry","fx","fy","cellHalfedgeAngle","cell","site","va","vb","cellHalfedgeStart","cellHalfedgeEnd","firstCircle","circlePool","attachCircle","lArc","rArc","lSite","cSite","rSite","bx","by","epsilon2","ha","hc","circle","Circle","before","circles","detachCircle","beachPool","createBeach","beach","Beach","detachBeach","beaches","removeBeach","disappearing","unshift","iArc","nArcs","addBeach","dxl","dxr","directrix","leftBreakPoint","rightBreakPoint","createCell","newArc","hb","rfocx","rfocy","pby2","lfocx","lfocy","plby2","hl","aby2","triangleArea","lexicographic","Diagram","sites","extent","sortCellHalfedges","clipEdges","clipCells","iCell","iHalfedge","nHalfedges","startX","startY","endX","endY","nCells","cover","dc","v00","v01","v11","v10","polygons","polygon","triangles","e1","links","radius","_found","vx","vy","src_voronoi","voronoi","Selection","idGetter","_updatedata","_mode","_enterdata","_exitdata","_idGetter","newData","entryData","exitdata","tempMap","duplicateData","updatedData","newSelection","currentData","dataObjects","mergedObjects","mergedData","newdata","objects","HTMLElement","common_utils_typeof","random","sanitizeIP","typeObj","nonExistentKeys","checkExistence","getMax","getMin","getDomainFromData","fieldType","domArr","DimensionSubtype","_loop","_fields","field0","field1","arr0","firstMin","secondMin","firstMax","secondMax","sanitizeDomainWhenEqual","unionDomain","domains","dom","symbolFns","symbolCircle","cross","symbolCross","symbolDiamond","symbolSquare","symbolStar","symbolWye","symbolTriangle","easeFns","cubic","easeCubic","bounce","easeBounce","elastic","easeElastic","back","easeBack","poly","easePoly","circleInOut","getNearestValue","filterData","getWindow","getQualifiedClassName","requestAnimationFrame","cancelAnimationFrame","cls","defaultValue","objectIterator","Voronoi","common_utils_classCallCheck","_voronoi","_voronoiFn","addListenerToNamespace","namespaceInf","namespace","_listeners","getObjProp","Store","propName","propNames","callBack","on","calculatedProp","intSanitizer","transactor","holder","conf","stateProps","addAsMethod","nameSpaceProp","nsProp","compareTo","paramsLen","prevVal","spreadParams","sanitization","typeCheck","typeExpected","preset","oldValues","generateGetterSetters","propInfo","typeChecker","isEqual","oldVal","newVal","arraysEqual","is","ERROR_MSG","INTERFACE_IMPL","mergeRecursive","sink","createSelection","sel","appendObj","idFn","dataSelect","mergedSelection","exitSelection","getObjects","inst","numberInterpolator","interpolateNumber","piecewiseInterpolator","rgbToHsv","detectColor","col","getDataModelFromRange","selFields","selFn","getDataModelFromIdentifiers","filteredDataModel","dataArr","filteredSchema","include","propField","registerListeners","listenerMap","propListenerMap","local","mapObj","propType","listenerFn","listener","isValidValue","getSymbol","stackOrders","_stackOrders","stackOrderNone","stackOrderAscending","stackOffsets","_stackOffsets","yp","yn","stackOffsetNone","si","sij0","s3","sk","stack","orderNone","offsetNone","oz","kz","sz","sij","ki","d3Stack","pathInterpolators","curveStepAfter","curveStepBefore","curveStep","curveCatmullRom","Symbols","axisLeft","axisRight","axisTop","axisBottom","pie","descending","arcs","pa","cornerRadius","padRadius","a01","a11","a00","a10","da0","da1","ap","rp","rc0","rc1","p0","p1","oc","intersect","x3","y3","x32","y32","kc","lc","centroid","Scales","scaleBand","getSmallestDiff","points","timeFormats","timeDurations","formatTemporal","nearestInterval","getNearestInterval","getValueParser","webkitRequestAnimationFrame","mozRequestAnimationFrame","oRequestAnimationFrame","msRequestAnimationFrame","retrieveNearestGroupByReducers","measureFieldNames","filteredReducers","getAncestorDerivations","nearestReducers","derv","retrieveFieldDisplayName","xhtml","src_namespaces","xlink","xml","xmlns","src_namespace","namespaces","space","creator","fullname","creatorFixed","ownerDocument","creatorInherit","uri","namespaceURI","src_selector","selector","querySelector","selectorAll","querySelectorAll","matcher","matches","element","vendorMatches","webkitMatchesSelector","msMatchesSelector","mozMatchesSelector","oMatchesSelector","sparse","EnterNode","_next","__data__","keyPrefix","bindIndex","groupLength","dataLength","bindKey","nodeByKeyValue","keyValues","src_window","styleValue","classArray","classList","ClassList","_names","classedAdd","classedRemove","contains","textRemove","htmlRemove","nextSibling","lower","previousSibling","constantNull","selection_cloneShallow","cloneNode","selection_cloneDeep","filterEvents","event","mouseenter","mouseleave","filterContextListener","contextListener","related","relatedTarget","compareDocumentPosition","event1","event0","onRemove","typename","__on","removeEventListener","capture","onAdd","wrap","addEventListener","customEvent","sourceEvent","dispatchEvent","CustomEvent","createEvent","initEvent","bubbles","cancelable","detail","groups","parents","_groups","_parents","subgroups","subnode","subgroup","enterGroup","updateGroup","_enter","_exit","groups0","groups1","m0","merges","group0","group1","compareNode","sortgroups","sortgroup","getAttributeNS","attrRemoveNS","removeAttributeNS","attrRemove","removeAttribute","attrFunctionNS","attrFunction","attrConstantNS","attrConstant","priority","styleRemove","removeProperty","styleFunction","setProperty","styleConstant","propertyRemove","propertyFunction","propertyConstant","classed","classedFunction","classedTrue","classedFalse","textFunction","textConstant","html","htmlFunction","htmlConstant","deep","typenames","parseTypenames","dispatch","dispatchFunction","dispatchConstant","src_select","nextId","Local","current","src_point","ownerSVGElement","createSVGPoint","clientX","clientY","matrixTransform","getScreenCTM","inverse","getBoundingClientRect","clientLeft","clientTop","mouse","changedTouches","src_touch","touches","identifier","touch","Dispatch","T","types","nopropagation","stopImmediatePropagation","noevent","preventDefault","nodrag","view","__noselect","MozUserSelect","d3_drag_src_constant","DragEvent","subject","active","defaultFilter","button","defaultContainer","defaultSubject","defaultTouchable","src_drag","mousedownx","mousedowny","mousemoving","touchending","touchable","gestures","clickDistance2","drag","mousedowned","touchstarted","touchmoved","touchended","gesture","beforestart","mousemoved","mouseupped","yesdrag","noclick","clearTimeout","sublisteners","clickDistance","taskHead","taskTail","frame","timeout","pokeDelay","clockLast","clockNow","clockSkew","clock","performance","timer_typeof","now","setFrame","clearNow","Timer","_call","_time","timer","delay","restart","wake","timerFlush","nap","sleep","poke","clearInterval","setInterval","TypeError","src_timeout","elapsed","emptyOn","emptyTween","CREATED","SCHEDULED","STARTING","STARTED","RUNNING","ENDING","ENDED","transition_schedule","timing","schedules","__transition","self","tween","state","duration","ease","schedule","tweenValue","_id","transition_interpolate","interpolateRgb","interpolateString","Transition","_name","newId","selection_prototype","inherit","id0","id1","onFunction","on0","on1","sit","attrTween","value00","value10","interpolate0","value1","attrTweenNS","styleTween","styleRemoveEnd","removeFunction","tweenRemove","tween0","tween1","tweenFunction","delayFunction","delayConstant","durationFunction","durationConstant","easeConstant","defaultTiming","easeCubicInOut","interrupt","selectElement","makeElement","elemType","callbacks","SVGElement","selectorVal","selectorType","actualSelector","enterSel","mergeSel","exitSel","applyStyle","setElementAttrs","attrs","setAttrs","setStyles","styles","createElements","getClientPoint","pos","clientPoint","getEvent","d3event","getD3Drag","d3drag","getSmartComputedStyle","css","textEl","mandatoryStyle","fill-opacity","renderer_utils_typeof","computedStyle","styleForSmartLabel","hasTouch","events","EVENT_LIST","composition","resolveFn","notification","hasOwn","LifeCycleManager","lifecycle_manager_classCallCheck","_eventList","_promises","_notifiers","_lifeCycles","_unreleasedLifeCycles","_boot","_preparePromises","Promise","promise","_makeNotifierPromise","createPromise","then","prm","formalName","client","_releasePromisesFromCache","_notify","stage","_resolvePromise","retrieve","_callLifeCycleCallback","_cachePromise","_resetTargetPromise","lifeCycles","DRAG","HOVER","SELECTIONDRAG","CLICK","LONGTOUCH","TOUCHDRAG","ALL_ACTIONS","SELECTION_NEW_ENTRY","SELECTION_NEW_EXIT","SELECTION_NULL","SELECTION_OLD_ENTRY","SELECTION_OLD_EXIT","SelectionSet","completeSet","_volatile","selection_set_classCallCheck","_completeSetCount","_lockedSelection","_resetted","entrySet","exitSet","lockedSel","addSet","removeSet","updateSet","changeSideEffectAvailability","toEnable","sideEffects","change","enable","disable","getMergedSet","helper_toConsumableArray","conditionsMap","mergedEnter","SELECTION","mergedExit","complete","getSetInfo","selectionSet","propagationData","resetted","getModelFromSet","conditions","condition","Firebolt","actions","behaviourEffectMap","firebolt_classCallCheck","_sideEffectDefinitions","_sideEffects","_propagationInf","_actions","behavioural","physical","_selectionSet","_volatileSelectionSet","_propagationFields","_sourceSideEffects","selectionBox","_propagationBehaviourMap","_sourceBehaviours","_actionBehaviourMap","_config","_behaviourEffectMap","_entryExitSet","_actionHistory","_queuedSideEffects","mapSideEffects","registerBehaviouralActions","registerSideEffects","registerPhysicalBehaviouralMap","physicalBehaviouralMap","registerPhysicalActions","behEffectMap","preventDefaultActions","effectNames","effects","firebolt_toConsumableArray","behaviours","initializeBehaviouralActions","dispatchableBehaviours","Action","prepareSelectionSets","initializeSideEffects","sideEffectStore","actionHistory","queuedSideEffects","sideEffect","combinedSet","unionSets","behaviour","entryExitSet","existingModel","aggFns","effect","firebolt_typeof","sideEffectInstance","isEnabled","mutates","dispatchSideEffect","propagationInfo","getSideEffects","propagationSelectionSet","getPropagationSelectionSet","shouldApplySideEffects","sourceSelectionSet","applicableSideEffects","getApplicableSideEffects","applySideEffects","physicalAction","actionBehaviourMap","behaviourMap","mapActionsAndBehaviour","unsubscribe","onDataModelPropagation","propValue","dispatchBehaviour","uniqueIds","behaviouralActions","volatileSelectionSet","sideEffectDefinitions","sideEffectsMap","SideEffect","sideEffectConf","initedActions","initializePhysicalActions","physicalActions","phyAction","initedPhysicalActions","getDefaultTargetContainer","bindActionWithBehaviour","targets","behaviourList","entryRowIds","getUids","propagationSource","applicableSelectionSets","GenericBehaviour","firebolt","generic_classCallCheck","_enabled","selectionSets","getSelectionSets","_this$firebolt$getAdd","getAddSetFromCriteria","getPropagationInf","setSelectionSet","getEntryExitSet","_selectionSet$getSets","getSets","getFullData","setConfig","isSourceFieldPresent","getSourceFields","VolatileBehaviour","reset","existingAddSet","updateExit","getCompleteSet","BRUSH","HIGHLIGHT","TOOLTIP","FILTER","HighlightBehaviour","BrushBehaviour","BEHAVIOURNAMES","FilterBehaviour","PersistentBehaviour","updateEntry","mergedExitSet","completeSetCount","SelectBehaviour","getDragActionConfig","sourceInfo","axes","xAxis","yAxis","axisFields","xField","getMembers","yField","xFieldType","yFieldType","stPos","startPos","endPos","dragDim","MeasureSubtype","isXDimension","isYDimension","xRange","yRange","selectedDomains","rangeObj","xdom","ydom","snap","getNearestRange","attachDragEvent","targetEl","drawingInf","touchStart","d3Drag","getDrawingContext","getSourceInfo","beh","dragEnd","hover","interaction","tooltip","svgContainer","nearestPoint","getNearestPoint","getAllPoints","showInPosition","generatePayloadFromEvent","click","physical_defineProperty","_physicalActions","ACTIONNAMES","longtouch","touchEnd","touchdrag","PROPS","valueParser","GenericSideEffect","generic_sideeffect_classCallCheck","_strategy","_strategies","defaultConfig","SurrogateSideEffect","interactionType","layers","layer","interactive","applyInteractionStyle","SpawnableSideEffect","_drawingContext","changeVisibility","sideEffectGroup","visible","defClassName","classPrefix","SelectionBox","boxConf","box","drawingContext","unitWidth","unitHeight","selectionGroupClassName","hide","sourceInf","_getBoxDimensionsFrom","getBoxDimensionsFromPayload","direction","xDim","yDim","xLinear","yLinear","xCriteria","yCriteria","x1Val","x2Val","bandScale","x1DomainIndex","x2DomainIndex","_sort2","helper_slicedToArray","getScaleValue","getUnitWidth","y1Val","y2Val","y1DomainIndex","y2DomainIndex","_sort4","_xDim","_yDim","dimension","show","selectionBoxDrag","onDrag","boxClassName","INITIAL_STYLE","connectorClassName","margin","content","iconContainerSize","iconScale","iconShape","iconColor","rowMargin","separator","parentClassName","arrow","disabled","getArrowPos","dim","measurement","arrowPos","boxHeight","boxWidth","arrowWidth","plotBottom","boxBottom","plotRight","boxRight","placeArrow","tooltipArrow","_tooltipArrow","tooltipBackground","_tooltipBackground","arrowConf","_arrowOrientation","Content","content_classCallCheck","_model","_formatter","ctx","_mount","displayFormat","table","tbody","margin-right","el","shape","Tooltip","htmlContainer","tooltip_classCallCheck","connectorContainer","tooltipConf","contentClass","_tooltipContainer","_contentContainer","_contents","_tooltipConnectorContainer","qualifiedClassName","addClass","defConf","contentConfig","reorderContainers","contentConf","render","_target","repositionArrow","arrowDisabled","arrowOrient","outsidePlot","connector","_offset","orientation","_extent","arrowSize","topSpace","dimX","rightSpace","leftSpace","positionTop","positionRight","positionLeft","positionHorizontal","positionVertical","_position","_arrowPos","GROUP_BY_FUNCTIONS","formatters","strategies_defineProperty","getDefaultTooltipFormatterFn","defaultFormatter","getRowContent","fieldInf","dataInf","formattedValue","measureIndex","dimensionMeasureMap","timeDiffs","defFormatter","fieldspace","dataLen","formatterFn","uniqueVals","strategies_toConsumableArray","colorAxis","shapeAxis","sizeAxis","isRetinalField","associatedMeasures","icon","getColor","getShape","getSize","formattedKey","measure","measureFormatter","margin-left","buildTooltipData","fieldValues","detailFields","FieldType","containsDetailField","getTabularData","allMeasures","_construct","strategies","selectionSummary","aggregatedModel","fieldsConf","measureNames","highlightSummary","configResolvers","specificConf","_default","_getPrototypeOf2","side_effects_tooltip_classCallCheck","tooltip_possibleConstructorReturn","tooltip_getPrototypeOf","_tooltips","sanitizeConfig","strategyObj","sanitizedConf","setStrategy","totalHeight","totalWidth","isEmpty","tooltips","boundBox","dataModels","fragmented","showVertically","tooltipPos","boxes","tooltip_toConsumableArray","sourceFields","plotDimensions","getPlotPointsFromIdentifiers","strategy","strategyConf","dataTransform","projectFields","plotDim","dt","layoutContainer","parentContainerDimensions","layoutBoundBox","unitBoundBox","tooltipInst","TooltipRenderer","timeDiffsByField","strategyFn","positionRelativeTo","tooltipBoundBox","getContents","spaceOutBoxes","spaceOutIfOverlap","firstBox","secondBox","opposite","projectedFields","Crossline","bandWidth","_this$config","bandClass","lineClass","elemData","axisIndex","fieldInst","xOffset","plotWidth","crossline_toConsumableArray","getPlotSpan","getPlotPadding","startPx","endPx","dataPoint","parentGroup","fade","fadeFn","focus","highlight","PlotHighlighter","plot_highlighter_classCallCheck","plot_highlighter_possibleConstructorReturn","plot_highlighter_getPrototypeOf","FilterEffect","entryModel","clearCaching","resetData","enableCaching","addLayer","layerDefs","layerRegistry","layerDef","mark","layerCls","shouldDrawAnchors","depLayerEncoding","encoding","defaultSizeValue","layerObj","instances","getTransitionConfig","calculateDomain","linkedLayer","AnchorEffect","anchors_classCallCheck","anchors_possibleConstructorReturn","anchors_getPrototypeOf","_layersMap","addAnchorLayers","metaInf","registry","layerDefsVal","registerImmediateListener","STATE_NAMESPACES","anchors_slicedToArray","_layers","elems","_linkedLayer$getTrans2","getLayerByName","getTransformedDataFromIdentifiers","transformedData","transformedDataModel","PersistentAnchors","BrushAnchors","behaviour_effect_map_defineProperty","BEHAVIOURS","SIZE","COLOR","SHAPE","TEXT","ENCODING","X0","Y0","RADIUS","RADIUS0","ANGLE","ANGLE0","nearestPointThreshold","strokeOpacity","connectNullData","SimpleLayer","coord","BOTTOM","TOP","LEFT","RIGHT","axisOrientationMap","axis_orientation_defineProperty","_axisOrientationMap","AxisOrientation","LINEAR","BAND","TIME","ORDINAL","QUANTIZE","QUANTILE","LOG","POW","IDENTITY","SEQUENTIAL","THRESHOLD","CONTINOUS","DISCRETE","HIDDEN","DEFAULT_ANGLE_DOMAIN","scaleLinear","scales","scaleThreshold","scaleLog","scalePow","scaleIdentity","scaleOrdinal","scaleSequential","scaleQuantize","scaleQuantile","scaleTime","scaleMap","scale_creator_defineProperty","_scaleMap","ScaleType","createScale","scaleFactory","adjustRange","axisName","axisNamePadding","fixedBaseline","labels","rotation","smartTicks","numberOfTicks","showAxisName","showInnerTicks","showOuterTicks","yOffset","rotateAxis","instance","tickText","labelManager","renderConfig","getTickSize","yShift","xShift","tickLabelDim","quadrant","rotationNormalizer","angleToRadian","angle","changeTickOrientation","selectContainer","axisInstance","_smartTicks","isSmartTicks","registerAnimationDoneHook","setFixedBaseline","setAxisNamePos","textNode","axisNameHeight","labelOffset","availableSpace","longestWord","quarter","halfYearly","mintues","seconds","getTickIntervalFnBasedOnNumberOfTicks","possibleTickLevelIndex","maxPossibleTicks","tickIntervalLevelInfo","tickIntervalInfo","numOfPossibleTicks","getActualTickInterval","noOfTicks","minWidthBetweenTicks","_minTickDistance","getTickIntervalBasedOnCurrentLevel","_dependencies","longestWordType","applyTickSkipping","minTickDistance","minTickSpace","_minTickSpace","minTickWidth","maxTicks","getSkippedTicks","actualNumberOfTicks","_minDiff","millisecondInterval","numOfTicksAccordingToMinDiff","adjustHorizontalRange","adjustVerticalRange","rangeAdjustmentMap","space_setter_defineProperty","_rangeAdjustmentMap","setAxisRange","rangeBounds","getAdjustedRange","getAxisOffset","timeDiff","avWidth","bars","spaceSetter","spaceConfig","heightForTicks","_context$availableSpa2","availWidth","availHeight","isOffset","_context$renderConfig2","_context$getAxisDimen","getAxisDimensions","tickDimensions","allTickDimensions","axisNameDimensions","tickDimHeight","tickDimWidth","namePadding","labelConfig","minTickHeight","getTickValues","tickShifter","maxTickSpaces","widthForTicks","totalTickWidth","getRotatedSpaces","rotatedHeight","rotatedWidth","setOffset","logicalSpace","getAxisComponentDimensions","axisTicks","largestTick","largestTickDimensions","smartTick","_context$renderConfig","labelFunc","_tickLabelStyle","originalLabel","getFormattedText","_axisNameStyle","getHorizontalAxisSpace","axisDimensions","_context$config2","axisDimHeight","minTickDiff","getMinTickDifference","cartesian_axis_helper_toConsumableArray","getVerticalAxisSpace","_context$config3","calculateBandSpace","largestDimHeight","_getHorizontalAxisSpa","_getVerticalAxisSpace","getValidDomain","userDom","setContinousAxisDomain","_domain","axisComponentDimensions","oldConfig","mockedOldConfig","shouldAxesScaleUpdate","hasAxesConfigChanged","properties","tickFormatter","sanitizeTickFormatter","_scale","_axis","createAxis","_tickFormatter","resetRenderConfig","_renderConfig","_maxTickSpaces","SimpleAxis","simple_axis_classCallCheck","_range","_domainLock","_axisDimensions","defCon","simpleConfig","bodyElem","dist","_animationDonePromises","domainValue","setAxisComponentDimensions","smartAxisName","axisClass","_objectSpread","setTickConfig","setSmartAxisName","_this$config2","dimType","widthDim","getSmartAxisName","oriSize","domainVal","computeAxisDimensions","_getAxisComponentDime","labelHeight","labelWidth","calculateContinousSpace","_context$renderConfig6","axisNameWidth","_getHorizontalAxisSpa2","_getVerticalAxisSpace2","renderAxis","axisNameStyle","tickLabelStyle","axisTickFormatter","labelProps","axisNameSpace","all","LinearInterpolator","LogInterpolator","PowInterpolator","interpolatorMap","continous_axis_defineProperty","_interpolatorMap","ContinousAxis","continous_axis_classCallCheck","continous_axis_possibleConstructorReturn","continous_axis_getPrototypeOf","InterpolatorCls","_interpolator","_this$renderConfig","sanitizeDomain","_get2","_get","_this$renderConfig2","newTickValues","tickSpace","getNumberOfTicks","labelDim","numberOfValues","tickLength","_this$smartTicks$","BandAxis","_this$maxTickSpaces","_getRotatedSpaces","paddingNormalized","formatTickValue","TimeAxis","time_axis_classCallCheck","time_axis_possibleConstructorReturn","time_axis_getPrototypeOf","time_axis_get","rawTicks","resetTickInterval","_context$config8","_context$availableSpa","adjustedRange","x11Colors","Pink","LightPink","HotPink","DeepPink","PaleVioletRed","MediumVioletRed","LightSalmon","Salmon","DarkSalmon","LightCoral","IndianRed","Crimson","FireBrick","DarkRed","Red","OrangeRed","Tomato","Coral","DarkOrange","Orange","Gold","Yellow","LightYellow","LemonChiffon","LightGoldenrodYellow","PapayaWhip","Moccasin","PeachPuff","PaleGoldenrod","Khaki","DarkKhaki","Cornsilk","BlanchedAlmond","Bisque","NavajoWhite","Wheat","BurlyWood","Tan","RosyBrown","SandyBrown","Goldenrod","DarkGoldenrod","Peru","Chocolate","SaddleBrown","Sienna","Brown","Maroon","DarkOliveGreen","Olive","OliveDrab","YellowGreen","LimeGreen","Lime","LawnGreen","Chartreuse","GreenYellow","SpringGreen","MediumSpringGreen","LightGreen","PaleGreen","DarkSeaGreen","MediumSeaGreen","SeaGreen","ForestGreen","Green","DarkGreen","MediumAquamarine","Aqua","Cyan","LightCyan","PaleTurquoise","Aquamarine","Turquoise","MediumTurquoise","DarkTurquoise","LightSeaGreen","CadetBlue","DarkCyan","Teal","LightSteelBlue","PowderBlue","LightBlue","SkyBlue","LightSkyBlue","DeepSkyBlue","DodgerBlue","CornflowerBlue","SteelBlue","RoyalBlue","Blue","MediumBlue","DarkBlue","Navy","MidnightBlue","Lavender","Thistle","Plum","Violet","Orchid","Fuchsia","Magenta","MediumOrchid","MediumPurple","BlueViolet","DarkViolet","DarkOrchid","DarkMagenta","Purple","Indigo","DarkSlateBlue","SlateBlue","MediumSlateBlue","White","Snow","Honeydew","MintCream","Azure","AliceBlue","GhostWhite","WhiteSmoke","Seashell","Beige","OldLace","FloralWhite","Ivory","AntiqueWhite","Linen","LavenderBlush","MistyRose","Gainsboro","LightGray","Silver","DarkGrey","Grey","DimGrey","LightSlateGrey","SlateGrey","DarkSlateGrey","Black","palette","DEFAULT_GRADIENT_COLOR","DEFAULT_CONFIG","stops","getHslString","hslArr","convertToXllString","baseString","getActualHslColor","paletteColor","hexToHsv","props_toConsumableArray","newConfig","treatNullMeasures","scaledVal","minDomainScaledVal","resolveAxisConfig","propVal","defaultVal","getStops","newStops","color_strategy_toConsumableArray","rangeStops","newStopsLength","newRange","hslInterpolator","interpolateHslLong","indexedDomain","scaleDomain","indexedDomainMeasure","normalDomain","steppedDomain","_getStops","continousSteppedDomain","_getStops2","uniqueRange","indexedRange","numVal","normalRange","strategyGetter","domainType","rangeType","schemeType","color_strategy_defineProperty","domainRange","ColorAxis","color_axis_classCallCheck","_domainType","_rangeType","_schemeType","getSchemeType","_colorStrategy","setColorStrategy","updateDomain","colorStrategy","getScheme","colorSchemes","hslColorArray","getRawColor","color_axis_toConsumableArray","scaleInfo","domainRangeFn","transformationArr","newH","newS","newL","newA","size_strategy_defineProperty","pieceWiseRange","size_strategy_toConsumableArray","intervals","newIntervals","discreteRange","SizeAxis","size_axis_classCallCheck","_sizeStrategy","domainInfo","domainFn","generator","ShapeAxis","shape_axis_classCallCheck","_generatedShapes","shapeType","shapeGenerator","generatorFn","generatedShapes","createAngleValues","angleData","_angleFn","_angleValues","AngleAxis","angle_axis_classCallCheck","customDomain","customRange","_this$_range","angle_axis_slicedToArray","ROWS","COLUMNS","COL","ROW","CELL","X_AXES","Y_AXES","ENTRY_CELLS","EXIT_CELLS","PRIMARY","SECONDARY","adjustDomain","minOuterRadius","RadiusAxis","radius_axis_classCallCheck","_radiusFactor","sanitizedRange","rangeVal","DATA_TYPES","group_transform","data_type_scale_map_defineProperty","_dataTypeScaleMap","groupByIndices","nestCollection","nestFn","identityTransform","transformMap","transform_factory_defineProperty","_transformMap","uniqueField","valueField","normalizedData","normalizeData","uniqueFieldIndex","valueFieldIndex","seriesKeyIndex","seriesKeys","tuples","rowObj","_tuple","seriesKey","newArr","orderBy","orderIndex","groupByIndex","localeCompare","stackData","seriesData","transformFactory","POLAR","CARTESIAN","transfromColor","styleType","intensity","stateColor","originalColor","fillColorInfo","transformColor","interactionStyles","elements","getPlotElementsFromSet","_d$meta","colorTransform","helpers_slicedToArray","getAxesScales","_map2","_map4","xScale","yScale","encodingFieldInfRetriever","helpers_defineProperty","_encodingFieldInfRetr","encodingInf","getIndividualClassName","individualClassName","classNameStr","dataNormalizers","_dataNormalizers","encodingFieldInf","radiusFieldIndex","angleFieldIndex","radius0FieldIndex","angle0FieldIndex","fieldsLen","pointObj","radius0","angle0","enc","rowId","transformType","xFieldIndex","yFieldIndex","x0FieldIndex","y0FieldIndex","domainCalculator","_domainCalculator","layerInst","angleValues","radius0Field","encodingFieldsInf","xFieldSubType","yFieldSubType","x0Field","y0Field","yEnc","xEnc","attachDataToVoronoi","helpers_toConsumableArray","updateStyle","positionPoints","positioner","encodingTransform","getPlotMeasurement","dimensionalValues","fieldInfo","_bandScale","span","groupSpan","offsetValues","actualGroupWidth","dataProps","innerPadding","getGroupSpan","isAxisBandScale","axisPadding","groupPadding","resolveInvalidTransformType","_context$encodingFiel","groupByField","groupByFieldMeasure","getValidTransformForAggFn","resolvedInvalidTransformType","_context$encodingFiel2","isCustomTransformTypeProvided","_customConfig","resolveEncodingValues","transformedValues","getColorMetaInf","getHslArray","getCoordValue","trig","coordValueGetter","toCartesianCoordinates","rangePlot","_point$update","_coordValueGetter","axisArr","listener_map_slicedToArray","encodingValue","resolveTransformType","_transformedData","getTransformedData","_normalizedData","getNormalizedData","calculateDomainFromData","_updateLock","getRenderProps","registerChangeListener","renderLayer","throwback","commit","defaultOptions","default_options_defineProperty","_defaultOptions","newConf","defaultPolicy","_cacheEnabled","_cachedData","BaseLayer","base_layer_classCallCheck","base_layer_possibleConstructorReturn","base_layer_getPrototypeOf","base_layer_assertThisInitialized","alias","_points","_measurement","_graphicElems","_store","localNs","initializeGlobalState","globalState","getState","base_layer_defineProperty","global","unitRowIndex","unitColIndex","_encodingFieldsInf","_encodingTransform","_alias","transformData","encodingType","transformedDataArr","_transformType","getValidTransform","pointMap","_pointMap","_dataProps","_this$encodingFieldsI","base_layer_slicedToArray","xMeasure","yMeasure","_identifiers$","_identifiers$2","xMeasureIndex","yMeasureIndex","getAllAttrs","filteredPoints","base_layer_toConsumableArray","sizeVal","_identifiers$getData","identifierData","identifierSchema","_this$encodingFieldsI2","tupleArr","transformedVal","graphicElems","base_layer_construct","userConf","drawLine","curveInterpolatorFn","linepath","LineLayer","line_classCallCheck","line_possibleConstructorReturn","line_getPrototypeOf","isXDim","isYDim","xPx","yPx","resolvedEncodings","stroke","cachePoint","seriesClassName","containerSelection","colorField","colorFieldIndex","animateGroup","groupTransition","groupAnimateStyle","stroke-opacity","getPathStyle","translatePoints","colorValFn","colorVal","getDrawFn","searchRadius","_point$data$data","getIdentifiersFromData","layerId","drawArea","easeEffect","renderer_slicedToArray","enterAreaPath","updateAreaPath","selectionEnter","AreaLayer","area_get","area_getPrototypeOf","_getAxesScales","classNameFn","minYVal","basePos","y0Px","invalidY","invalidY0","resolvedValues","stroke-width","stroke-linejoin","states","fadeout","selected","ArcLayer","arc_classCallCheck","arc_possibleConstructorReturn","arc_getPrototypeOf","_prevPieData","_this$axes","radiusAxis","pieIndex","prevData","angleV","angles","_angles","uid","getOuterRadius","getInnerRadius","startAngle0","endAngle0","_previousInfo","getPreviousPoint","currIndex","prevArc","nextArc","_context$axes$angle$r2","arc_helper_slicedToArray","qualClassName","_arcFn","consecutiveExits","exitCounter","tweenPie","individualClass","tweenExit","exitArr","oldExitCounter","tweenExitPie","consecutiveExitArr","gElem","pieSlices","pieSliceInf","tData","drawText","selectionMerge","backgroundVal","textanchor","textStyle","background","backgroundPadding","_smartLabel$getOriSiz","backgroundEl","alignment-baseline","defaultEncoding","alignmentBaseLine","defRotation","pointTranslators","polar","textEncoding","angleAxis","textFormatter","backgroundEncoding","backgroundValue","cartesian","textField","textFieldIndex","textValue","text_slicedToArray","TextLayer","text-anchor","drawSymbols","createShape","groupElement","Element","newShape","nodeName","src","href","shapeElement","pathStr","checkPath","exitGroup","defColorStyle","fillOpacity","shapes","sizes","PointLayer","point_classCallCheck","point_possibleConstructorReturn","point_getPrototypeOf","_config$offset","offsetX","offsetY","point_slicedToArray","maxSize","generateDataPoints","point_toConsumableArray","drawFn","getMarkId","_maxSize","_getPlotMeasurement2","widthMetrics","heightMetrics","offsetXValues","offsetYValues","measurementConf","getMeasurementConfig","widthSpan","heightSpan","distanceLimit","drawRects","barEnterFn","transitionBars","selTransition","positionRetriever","isNegativeVal","barBasePos","resolveDimByField","axesInfo","spaceType","sizeEncoding","sizeConfig","sizeValue","enterSpace","minVal","maxVal","diffPx","minDomVal","_positionRetriever$ty2","bar_helper_slicedToArray","resolveDimensions","_resolveDimByField","enterWidth","enterX","xPos","_resolveDimByField2","enterHeight","BarLayer","bar_classCallCheck","bar_possibleConstructorReturn","bar_getPrototypeOf","_plotPadding","_plotSpan","bar_get","getTranslatedPoints","normalizedDataArr","clipElement","clipPathElement","bar_slicedToArray","barWidthMetrics","barHeightMetrics","barWidthOffsets","barHeightOffsets","barWidth","barWidthOffset","barHeight","barHeightOffset","uniqueFieldType","pointFound","bar_toConsumableArray","p2","tick_renderer","ticksEnter","angle0Axis","angle0V","angles0","_angles2","_layerInst$encodingFi","_config$span","xSpan","ySpan","x0Px","TickLayer","drawTicks","AREA_LAYER","ARC_LAYER","LINE_LAYER","TEXT_LAYER","POINT_LAYER","BAR_LAYER","TICK_LAYER","SIMPLE_LAYER","BASE_LAYER","sanitizeEncoding","layerFactory","compositeLayers","factoryObj","setLayerRegistry","reg","_layerRegistry","getSerializedConf","serializedDefs","defs","unitLayerDef","sDef","parseLayerDefinition","layerType","strs","layer_factory_toConsumableArray","getLayerInstance","layerConstructor","getLayerClass","composeLayers","sanitizeLayerConfig","DEFAULT_LAYERS","defaults_defineProperty","_DEFAULT_LAYERS","LAYER_TYPES","local_options","local_options_defineProperty","_CONFIG$ROWS$COLUMNS$","SimpleGroup","Variable","ComposedVars","composed_vars_classCallCheck","composed_vars_possibleConstructorReturn","composed_vars_getPrototypeOf","vars","_vars","_data","member","getMinDiff","SimpleVariable","simple_var_classCallCheck","simple_var_possibleConstructorReturn","simple_var_getPrototypeOf","oneVar","_oneVar","dtFormat","dateFormat","fieldDef","minimumConsecutiveDifference","varInst","convertToVar","datamodel","transformFields","field_sanitizer_slicedToArray","normalizedFields","normalizeFields","norFields","orderFields","fieldArray","temporalArr","categoricalArr","fieldList","numOfMeasures","allDimensions","field_sanitizer_toConsumableArray","temporal","categorical","rowsInfo","columnsInfo","rowDimensions","rowMeasures","rowTemporalFields","rowCategoricalFields","columnDimensions","columnMeasures","columnTemporalFields","columnCategoricalFields","VisualEncoder","_fieldInfo","_axisFrom","_headerFrom","__headerFrom","axisFrom","_getHeaderAxisFrom2","visual_encoder_slicedToArray","getHeaderAxisFrom","rowHeader","rowAxis","_getHeaderAxisFrom4","colHeader","colAxis","headerFrom","scaleMaps","dataTypeScaleMap","generateAxisFromMap","axisType","axesCreators","facetFields","axisKey","groupAxes","currentAxes","cacheMaps","commonAxisKey","getAxisKey","axisConfig","getAxisConfig","axisInfo","axisOrientation","rowIndex","columnIndex","rawUserAxisConfig","userAxisConfig","_rotationLock","createSimpleAxis","Cls","sanitizeIndividualLayerConfig","encodingConfigs","getIndex","arrIndex","CartesianEncoder","geomCellAxes","projections","rowFields","columnFields","geomCell","xAxes","yAxes","lock","unlock","units","1","rIdx","unitsArr","_loop2","cIdx","len2","encodingDomains","getDataDomain","axisTypeIndex","typeOfField","_resolver$axes","axesArr","adjustedDomain","typeOfAxis","alignZeroLine","getAdjustedDomain","y1ratio","y2ratio","allSameSign","currentFieldName","sortingOrder","facets","counter","primaryFacets","secondaryFacets","primaryFields","secondaryFields","primaryLen","secondaryLen","projArr","primaryField","secondaryField","facet","existIndex","axisFromIndex","cartesian_encoder_get","cartesian_encoder_getPrototypeOf","groupedModel","encodingObj","retriveDomainFromData","layerArray","serializedLayers","userLayerConfig","layerConfig","retinalConfig","colField","colFieldName","rowField","configs","rowFieldName","rowFieldType","getDefaultMark","colFieldType","defConfigs","layerConfigs","getLayerConfFromFields","colFields","encodingArr","encoder_helper_toConsumableArray","xFields","yFields","colFieldExist","rowFieldExist","layerConf","mergedLayerConf","serializedLayerConfig","cartesian_encoder_toConsumableArray","axesCls","polar_encoder_defineProperty","_axesCls","PolarEncoder","pieAxes","axesObj","matrixLayers","resolverAxes","varInstances","encType","userConfig","domainProps","matrixInstance","unitDomains","setRadiusFactor","sizeField","retinalFields","_context$axes","sizeFieldIndex","sizeMultiplier","getSizeMultiplier","sizeAxisDomain","encodingFields","sanitizedRows","sanitizedColumns","polar_encoder_get","polar_encoder_getPrototypeOf","sanitizedFields","typeIndex","fieldSet","polar_encoder_toConsumableArray","layerEncoding","sanitizedConfig","angleField","angle0Field","RetinalEncoder","newAxes","createRetinalAxis","fieldProps","getAxisType","isDistributionEqual","group_utils_toConsumableArray","rowType","initializeCacheMaps","cellMap","xAxesMap","yAxesMap","entryCellMap","exitCellMap","headerCreator","fieldHeaders","TextCell","getHeaderText","rowLength","getEncoder","encoder","hasPolarEncodings","userAxisFromConfig","group_utils_slicedToArray","firstField","secondField","firstFieldType","secondFieldType","setFacetsAndProjections","_encoder$simpleEncode","simpleEncoder","getFacetsAndProjections","group_utils_defineProperty","getBorders","matrices","showRowBorders","showColBorders","showValueBorders","valueMatrix","_rows","leftRows","rightRows","_columns","topColumns","bottomColumns","_encoder$fieldInfo","allDimensionLength","allMeasuresLength","allTemporalFieldsLength","getRowBorders","borders","getColumnsBorders","getValueBorders","borderTypeRow","borderTypeCol","sortFacetFields","facetName","action_behaviour_map_defineProperty","ACTIONS","sanitizeLayerDef","sanitizedDefs","sConf","unionDomainFromLayers","layerAxisIndex","domainValues","layerDomain","fieldDomain","encodingDomain","fieldStr","domain1","renderLayers","_lifeCycleManager","notify","orderedLayers","layerParentGroup","layerDepOrder","getDependencyOrder","graph","dependencyOrder","visited","visit","_layerDepOrder","_timeDiffs","getLayersBy","searchBy","removeLayersBy","createRenderPromise","_renderedPromise","_renderedResolve","radiusAxes","getRadiusRange","isXandYMeasures","_context$fields","xMeasures","yMeasures","GRID_BAND","GRID_LINE","getGridLayerDefinitions","getDefaultVisibilty","getLayerDefinition","_definition","_axes","_encoding","gridLines","gridBands","gridLineColor","zeroLineColor","gridBandColor","isLinearScale","grid_lines_defineProperty","isNegativeDomain","dimensionSubTypes","getValidSubtype","attachDataToGridLineLayers","_gridLines","_gridBands","gridLayerData","getGridLayerData","gridData","jsonData","_jsonData$push","grid_lines_toConsumableArray","trackerClassName","arcLayerClassName","sideEffectClassName","src_local_options","src_local_options_defineProperty","_CONFIG$LAYERDEFS$TRA","_cachedValuesMap","getValuesMap","_model$getData","fieldIndices","cachedData","local_options_toConsumableArray","oldData","src_listener_map_slicedToArray","fieldsVal","removeExitLayers","layersMap","markSet","colIndex","listenerInf","hasPlotSpan","_ref5","temporalFields","filteredFields","_ref6","_ref7","_ref8","_ref9","_ref10","_timeDiffsByField","createGridLineLayer","vuConf","_layerDeps","atomicDef","_ref11","_ref12","transformDataModels","transformVal","_ref15","_ref16","layerAxisIndexVal","_layerAxisIndex","axesVal","lyr","disableUpdate","attachDataToLayers","transformedDataModels","dataSource","enableUpdate","_dimensionMeasureMap","getDimensionMeasureMap","retinalEncodingsAndMeasures","_layer$encodingFields","shapeField","_retinalEncodingsAndM","src_helper_toConsumableArray","attachAxisToLayers","axisInf","props_defineProperty","_PROPS","createSelectionSet","originalData","attachPropagationListener","firebolt_helper_slicedToArray","dispatchQueuedSideEffects","firebolt_helper_toConsumableArray","clearActionHistory","payloadGenerator","brush","selectionDataModel","propPayload","getRangeFromData","propCriteria","fieldMap","isDimension","payload_generator_toConsumableArray","__default","propagateValues","propagationFieldInf","propagationFields","sideEfffects","mergedModel","sourceUnit","sourceCanvas","parentAlias","propagationBehaviour","propFields","facetByFields","getModelWithFacetData","schema1","data1","schema2","data2","data_propagator_toConsumableArray","groupId","behaviourInstance","propagationConf","sourceBehaviour","enabled","propConf","applyOnSource","propInf","UnitFireBolt","src_firebolt_classCallCheck","firebolt_possibleConstructorReturn","firebolt_getPrototypeOf","firebolt_assertThisInitialized","unitId","aliasName","propagationSourceCanvas","sourceUnitId","sourceSideEffects","sideEffectInstances","actionOnSource","mappedEffects","se","sideEffectChecker","_getSelectionRejectio","getSelectionRejectionModel","propValuesMap","rejectionModel","_propModel$getData","exitRowIds","rowIdsObj","enabledFn","payloadFn","sourceIdentifierFields","sourceBehaviours","persistent","firebolt_get","VisualUnit","visual_unit_classCallCheck","visual_unit_defineProperty","lifeCycleManager","_gridLinesSelection","_gridBandsSelection","_layerNamespaces","_transformedDataModels","localOptions","_firebolt","_rootSvg","class","renderGridLineLayers","gridLineParentGroup","_entry","grid_lines_slicedToArray","parentGroupClass","_sideEffectGroup","createSideEffectGroup","initSideEffects","rootSvg","_this$parentContainer","parentContainerInf","layerDefinition","layerDefinitions","components","layerIndex","startIndex","visual_unit_toConsumableArray","layersArr","_layersArr","markId","defArr","getLayerFromDef","existingLayer","instanceArr","instanceValues","layerdeps","depArr","resolveEncodingTransform","resolvable","getLayerAxisIndex","_layer$config","specificField","encodingField","stateStore","calculateDomainListener","parentModel","dimValue","getNearestDimensionalValue","entryVal","pointInf","getMarkInfFromLayers","markInf","parsedIdentifiers","transposeArray","getPointsFromIdentifiers","visual_unit_construct","getFieldNames","fields1","matrix_model_toConsumableArray","createSelectedDataModel","uniqueKeyGenerator","keyArray","nextDepthUniqueValues","projectRows","allColumnProjections","rowProjections","optionalProjections","_getFieldNames2","matrix_model_slicedToArray","projFieldNames","colProjFieldNames","pushToMatrix","valueCellCreator","_matrix$rowIndex","facetInfo","colProjections","rowProj","projIdx","_getFieldNames4","rowProjFieldNames","projectedDm","formatKeys","formatterList","rKeys","createValueCells","suppliedLayers","GeomCell","horizontalAxis","verticalAxis","datamodelTransform","layerConfigArr","getLayerConfig","normalizedColumns","normalizedRows","allFacets","cell_creator_toConsumableArray","rowFacets","colFacets","facetField","geomCellKey","getCellKey","columnId","updateCells","facetKey","createAxisCells","currObj","axisInst","_axisInst$config","AxisCell","BlankCell","headerPlaceholderGn","selectionObj","selectionKeys","keySet","textCells","createTextCells","textCell","generatePlaceholders","facetsAndProjections","encoders","valuesMatrix","rowKeys","columnKeys","takeAxisFrom","takeHeaderFrom","axisPlaceholderGn","selObj","axesMatrix","selObjProp","axesForDraw","rowsPrimary","rowPrime","rowsSecondary","rowSec","columnsPrimary","colPrime","columnsSecondary","colSec","_selectionObj","section","hContext","getAxisFields","fieldHolder","ac","computeMatrices","componentRegistry","globalConfig","autoGroupBy","otherEncodings","matrixGnContext","getCellDef","isRowSizeEqual","isColumnSizeEqual","colCells","rowCells","resetSimpleAxes","newCacheMap","valueCellContext","serializeLayerConfig","extractFields","layerFields","flattenArray","getFieldsFromSuppliedLayers","suppliedLayerConfig","aggregationFns","nearestAggFns","resolvedAggFns","valueMatrixInfo","getMatrixModel","rowDataModels","colProj","firstLevelRowKeys","_rowDataModels","rowFacetFieldNames","selectedDataModel","newProjectedDataModels","_rowDataModels2","colFacetNames","firstLevelColumnKeys","dme","rIndex","cIndex","rawFormat","transposedColKeys","sortDmTemporalFields","valueCellsCreator","placeholder","_mutateAxesFromMap","mutateAxesFromMap","xAxisSet","yAxisSet","axisId","createUnits","_generateMatrices","generateMatrices","leftHeaders","topHeaders","bottomHeaders","rightHeaders","cell_creator_slicedToArray","leftFacets","rightFacets","rowPriority","colPriority","leftMatrix","rightMatrix","topMatrix","bottomMatrix","currentBottomLength","setAvailableSpace","rowMatrix","columnMatrix","RESOLVER_PROPS","MatrixResolver","matrix_resolver_classCallCheck","_registry","_layerConfig","_matrixLayers","_rowMatrix","_columnMatrix","_valueMatrix","_facets","_projections","_datamodelTransform","_units","_cacheMaps","maps","matrix_resolver_toConsumableArray","_horizontalAxis","_verticalAxis","matrixType","_this5","sideEffectRegistry","_this$dependencies","unitConfig","extractUnitConfig","globalStates","_this$getAllFields","retContext","getRetinalFieldsDomain","retinalEncoder","setCommonDomain","_this6","retinalAxes","updateModel","placeholders","bottomLeft","bottomRight","_this$dependencies3","showHeaders","matrix_resolver_slicedToArray","topCols","bottomCols","rowHeaders","blankCellCreator","footers","topLeft","topRight","ValueMatrix","matrixArr","value_matrix_classCallCheck","instancesById","cellValue","_instancesById","_matrix","_filterFn","rowWidth","currentRowWidth","getLogicalSpace","rowHeight","currentRowHeight","setMatrixInstances","_composition","createMatrices","matrixConfig","unsubscribeChangeListeners","sanitizeRetinalConfig","retinalConf","confValue","groupType","fieldSanitizer","setAxisAndHeaders","placeholderInfo","getMatrices","_groupedDataModel","createRetinalAxes","setDomains","cornerMatrices","createHeaders","metaData","border","unionUnitDomains","registerDomainChangeListener","visual_group_props_defineProperty","visual_group_props_PROPS","cellRegistry","VisualGroup","visual_group_classCallCheck","visual_group_possibleConstructorReturn","visual_group_getPrototypeOf","componentSubRegistry","visual_group_assertThisInitialized","_selection","createUnitState","visual_group_helper_slicedToArray","createLayerState","setupChangeListeners","variable","findInGroup","channel","group_utils_this","facetType","projType","getRetinalAxes","getSimpleAxes","_this$resolver$getAll","visual_group_defineProperty","existingRemoveSet","select_toConsumableArray","firebolt_action_behaviour_map_defineProperty","action_behaviour_map_actionBehaviourMap","propagationBehaviourMap","_propagationBehaviour","firebolt_behaviour_effect_map_defineProperty","firebolt_behaviour_effect_map_behaviourEffectMap","propagationSideEffects","_propagationSideEffec","SCALE_FUNCTIONS","VALUE","canvasAlias","rawVal","check","assembleModelFromIdentifiers","temp","src_firebolt_helper_toConsumableArray","LegendFireBolt","_Firebolt","legend_firebolt_classCallCheck","legend_firebolt_possibleConstructorReturn","legend_firebolt_getPrototypeOf","legend_firebolt_inherits","legend_firebolt_createClass","behaviourName","getCriteriaFromData","firebolt_physical_defineProperty","physical_physicalActions","boundingBox","gradientDimensions","axisScale","rangeShifter","drag_defineProperty","getSelectionCriteria","selectionBoxMeasure","drawingInfMeasure","subjectStartPoint","gradientDimension","legendGradContainer","legendSelGroup","enterFn","getMousePos","boundingClientRect","selection_box_drag_defineProperty","fadeOut","brighten","LegendHighlighter","legend_highlighter_classCallCheck","legend_highlighter_possibleConstructorReturn","legend_highlighter_getPrototypeOf","legendContainer","resetLogicalSpace","title","_title","ALIGN","DEFAULT_MEASUREMENT","LEGEND_TITLE","borderStyle","borderColor","bounds","upper","ICON_MAP","getScaleInfo","scaleType","steps","scaleFn","getInterpolatedArrayData","domainForLegend","scaleParams","requiredWidth","requiredHeight","upperBound","maxTickDiff","alignment","smartLabelCalc","minimumTickSize","_smartLabelCalc$getOr","isInteger","getcomputedArray","computationhelper","requiredMeasure","availableMeasure","currentTickValue","nextTickValue","measureParam","pixelPerTick","getInterpolatedData","recomputeSteps","getTickMeasure","_scaleParams$measures","interpolatedFn","tickValue","getDomainBounds","domainBounds","domainLeg","ele","legend_helper_defineProperty","getScaleFactor","SimpleLegend","simple_legend_classCallCheck","_metaData","_fieldName","_labelManager","_cells","defaultMeasurement","_computedStyle","legendBehaviours","_canvasAlias","getItemMeasures","_labelManager$getOriS","_this$measurement","effPadding","effBorder","effMargin","dataFromScale","titleSpace","getTitleSpace","titleHeight","titleWidth","labelSpaces","getLabelSpaces","_computeItemSpaces","computeItemSpaces","maxItemSpaces","textOrientation","itemSpaces","iconSpaces","maxIconWidth","labelSpace","itemSpace","iconSpace","newLabelWidth","titleSpaces","_this$measurement2","_this$config3","titleCreator","titleContainer","marginPosition","_this$config4","_this$measurement3","renderTitle","simple_legend_defineProperty","legendOrientation","position_config_defineProperty","_legendOrientation","datasets","itemContainerMeasures","getStepSpacesInfo","iconHeight","iconWidth","stepPadding","horizontal","vertical","positionConfig","_positionConfig","alignmentMap","_alignmentMap","itemStack","_itemStack","createLegendSkeleton","gradWidth","gradHeight","maxGradHeight","maxGradWidth","legendBody","legendItem","getItemContainers","legendInstance","positionObj","createItemSkeleton","_context$config","itemSkeleton","alignClass","applyItemStyle","measureType","stepColorCheck","_context$measurement","renderIcon","defaultIcon","DiscreteLegend","_getScaleInfo","discrete_legend_toConsumableArray","_field$schema","discrete_legend_defineProperty","discrete_legend_get","discrete_legend_getPrototypeOf","renderDiscreteItem","_context$measurement2","_item$icon","text-align","getGradientDomain","accumulator","currentValue","MAX_VALUE","MIN_VALUE","legendGradSvg","legendGradCont","linearGradient","makeLinearGradient","legendRect","GradientLegend","gradient_legend_toConsumableArray","gradient_legend_defineProperty","newAxis","axisSpace","axisDomainLength","_legendGradientSvg","gradient_legend_get","gradient_legend_getPrototypeOf","renderGradient","_createLegendSkeleton","StepLegend","step_legend_toConsumableArray","step_legend_defineProperty","lowerBounds","upperBounds","step_legend_get","step_legend_getPrototypeOf","stepData","renderStepItem","_context$measurement3","_item$icon2","_positionConfig$posit","PADDING","BORDER","MARGIN","TITLE_TEMPLATE_NOT_ALLOWED_TAGS","LEGEND_TYPE_MAP","constants_defineProperty","_LEGEND_TYPE_MAP","HORIZONTAL_CENTER","VERTICAL_CENTER","share","operators_construct","operators_toConsumableArray","strings","htmlCode","expLn","frag","createDocumentFragment","treeShakeNode","nodeType","Node","ELEMENT_NODE","tagName","childNodes","canvasIterator","canvases","iteratorFn","cFn","canvas","visualGroup","_throwback","actionModel","ActionModel","action_model_classCallCheck","_registrableComponents","registerPropagationBehaviourMap","dissociateBehaviour","dissociateSideEffect","policy","registrableComponents","mergedPolicy","aliases","comp","*","propagationPayload","propagationCanvas","crossInteractionPolicy","TITLE_CONFIG","SUB_TITLE_CONFIG","maxLines","LAYOUT_ALIGN","canvas_local_options_defineProperty","_localOptions","prevDm","sanitizedDm","canvasOptions","_canvasOptions","titleConfig","subtitle","sub","subtitleConfig","LayoutComponent","layoutComponent_classCallCheck","_boundBox","_renderAt","_alignWith","_alignment","_componentName","_className","DummyComponent","newDimensions","renderAt","component","componentName","pagination","scrollBar","thickness","speed","legend","minHeight","minCharacters","verticalAlign","collapse","invalidValues","DEFAULT_WIDTH","DEFAULT_HEIGHT","DEFAULT_CLASS_NAME","NODE_PREFIX","DefinitionModel","definitionModel_classCallCheck","_host","host","_cut","cut","_ratioWeight","ratioWeight","_preferred","preferred","_lanes","lanes","_remainingHeight","_remainingWidth","remainingHeight","remainingWidth","getNodeId","_uid","yExtraSpace","smallestHeight","getCutType","smallestExtraHeightHorizontally","MAX_SAFE_INTEGER","containerHeight","hostHeight","xExtraSpace","smallestWidth","smallestExtraWidthVertically","containerWidth","hostWidth","createPlaceHolderComponent","placeComponent","definitionModel","leftOvercomponentRationWidth","isPreferred","isGridComponent","componentRatioWidth","leftHeight","leftWidth","_component$getLogical","componentHeight","componentWidth","firstLaneConfig","firstLane","secondLane","tree_classCallCheck","_parentCut","_this$_children","tree_toConsumableArray","parentCut","bound","nodeconfig","searchNode","childNode","nodeId","deleteSearchNode","LayoutModel","measurements","layout_model_classCallCheck","_measurements","_root","createTree","setBoundBox","addChildren","lane","allocateBoundingBox","totalWeight","carry","lastSibling","ratio","setHostSpatialConfig","setHostPosition","negotiateDimension","alteredDim","nonAlteredDim","cumultiveExtraSpaceAmt","childrenLength","extraSpaceAmt","computePosition","determineBoundBox","bb","_lastSibling$boundBox","_top","_left","_height","_width","_instance$parent$boun","setSpatialConfig","Utils","utils_classCallCheck","utils_createClass","isDOMElement","getID","getElement","findContainer","coordinate","removeDiv","divId","DataPoint","data_point_classCallCheck","DataParser","data_parser_classCallCheck","data_parser_createClass","defaultDataPointLogic","nodepoints","getnodePoints","datapoint","HTMLDataAdapter","_DataParser","html_data_classCallCheck","html_data_possibleConstructorReturn","html_data_getPrototypeOf","html_data_inherits","html_data_createClass","getCoordinates","html_data_get","Renderer","renderer_classCallCheck","renderer_createClass","initRenderer","__logicalTree","HTMLRenderer","_Renderer","html_renderer_classCallCheck","html_renderer_possibleConstructorReturn","html_renderer_getPrototypeOf","_coordinates","html_renderer_inherits","html_renderer_createClass","createhtml","mainDiv","html_renderer_get","parentDiv","createAndCustomiseParent","hasHost","createAndPositionDiv","html_renderer_objectSpread","div","coordinates","findNode","nodeID","renderer","renderHTML","DrawingManager","drawing_manager_classCallCheck","_componentMap","componentMap","_layoutClassName","layoutClassName","_renderer","drawing_manager_createClass","drawLayout","resolveAligment","componentData","alignWith","newNodeConfig","refNode","drawComponent","DefinitionManager","definition_manager_classCallCheck","_prioritySequence","_totalHeight","_totalWidth","_targetComponentMap","prepareTargetComponentMap","targetComponentMap","canvasComponent","tempDefModel","componentRef","getComponent","placeGridComponent","gridComponents","iscolumnPreffered","_placeComponent","rowpreffred","LayoutDef","layout_def_classCallCheck","_layoutDefinition","layout_def_createClass","addComponent","layoutDefinition","addMultipleComponent","componentArray","sanitizedDefinition","hostObj","hostID","childHost","resetComponentMap","LayoutManager","layout_manager_classCallCheck","_dimension","_skeletonType","skeletonType","_layoutDef","_drawingManager","_rootNodeID","con","resetNode","updateNode","compute","_layout","calLayOutDef","_context$dimension","layoutDef","prioritySequence","generateConfigModel","negotiate","broadcast","layoutComponents","componentArr","compo","removeElement","elemID","setupChangeListener","allOptions","_allOptions","canvas_helper_toConsumableArray","nameSpaceProps","equalityChecker","option","updateChecker","dispatchProps","_cachedProps","notifyAnimationEnd","centerMatrix","layout","viewInfo","viewMatricesInfo","promises","cellArr","lifeCycle","animDonePromises","animationDone","applyInteractionPolicy","interactionPolicy","_interactionPolicy","_crossInteractionPolicy","unitFireBolt","changeBehaviourStateOnPropagation","changeSideEffectStateOnPropagation","createLayoutManager","src_options","minUnitWidth","minUnitHeight","oldConf","fixScrollBarConfig","VIEW_INDEX","ROW_MATRIX_INDEX","2","COLUMN_MATRIX_INDEX","HEIGHT","ROW_ROOT","COLUMN_ROOT","VERTICAL","HORIZONTAL","GenericLayout","generic_layout_classCallCheck","_matrices","_centerMatrix","_mountPoint","DEFAULT_CONFIGURATION","grid_layout_defaults_defineProperty","_DEFAULT_CONFIGURATIO","_FieldNames$BORDER","DEFAULT_MEASUREMENTS","_DEFAULT_MEASUREMENTS","findInPage","page","combineMatrices","isTransposed","joinedMatrix","utils_toConsumableArray","rowData","computeLogicalSpace","maxMeasures","_config$isTransposed","unitMeasures","_getMeasureInfo","getMeasureInfo","firstMeasure","secondMeasure","minMeasures","getMinMeasures","_logicalSpace","utils_defineProperty","valueItem","maxMeasure","firstMeasureValue","secondMeasureValue","valueArray","_item$space","fMeasure","sMeasure","minSecondMeasure","createMatrixEachLevel","_arr$i","extraCellsRemover","beg","distribution","extraCellLengths","VisualMatrix","visual_matrix_classCallCheck","_lastLevelKey","_primaryMatrix","_secondaryMatrix","_maxMeasures","_availableSpace","_layoutMatrix","_tree","_createTree2","matrixTree","lastLevelKey","layoutMatrix","primaryMatrix","secondaryMatrix","breakPage","primaryMatrixLength","newMatrix","keyLength","heightMeasures","populateMaxMeasures","widthMeasures","calculateDepth","viewableMatrix","createViewPortMatrix","viewableMeasures","redistributeSpaces","childDepth","createMatrixInstances","matrixInfo","breakPointer","_breakPointer","brokenMatrix","breakMatrix","nextLevel","removeExtraCells","RowVisualMatrix","row_matrix_classCallCheck","row_matrix_possibleConstructorReturn","row_matrix_getPrototypeOf","maxHeights","maxWidths","matrixInst","cellDimOptions","matrixIndex","_this2$getCellDimensi","getCellDimensions","widths","rowHeights","columnWidths","primary","secondary","begCellLen","endCellLen","remainingAvailWidth","cWidths","maxPrioritySpace","availableWidth","currentWidth","prioritySpace","logicalWidths","getPriorityDistribution","mWidth","mHeight","redistributeViewSpaces","computeViewableSpaces","rHeights","gutter","spaceTakenByColumn","spaces","getDistributedHeight","heightWithoutGutter","distSum","gutterSum","availableHeight","colLen","distHeight","borderWidth","colHeight","colWidth","heights","ColumnVisualMatrix","column_matrix_classCallCheck","column_matrix_possibleConstructorReturn","column_matrix_getPrototypeOf","heightDist","divider","spaceTakenByRow","getDistributedWidth","layoutConfig","distWidth","rowLen","oldLogicalSpace","heightDistribution","getMatrixMeasurement","setViewSpaces","pointerType","viewSpaces","pointer","computations_defineProperty","paginationDetailsMap","scrollType","paginationMeasureGetter","relatedMaxMeasure","getMatrixMeasureForPagination","measureDetails","actualMeasure","scrollInfo","getMatrixHeightDetails","columnMatrixWidth","_getHeightRequiredByC","getHeightRequiredByColMatrix","maxColumnMatrixHeight","columnViewSpace","getViewableSpaces","columnPointer","columnMatrixHeight","maxHeightAvailableForRowMatrix","rowMatrixHeight","bufferCondition","isScroll","getActualBufferFromConfig","computations_slicedToArray","getBufferFromCondition","currentBufferType","horizontalBuffer","verticalBuffer","computeLayoutMeasurements","_getMatrixWidthDetail","getMatrixWidthDetails","_layout$config3","rowMatrixWidth","maxRowMatrixWidth","maxWidthAvailableForColumnMatrix","_getMatrixHeightDetai","_getActualBufferFromC","rowViewableSpaces","columnViewableSpaces","setValueMatrixMeasurements","computations_toConsumableArray","rowWidthsPrimary","rowWidthsSecondary","columnHeightsPrimary","columnHeightsSecondary","measureSum","total","GridLayout","layout_classCallCheck","layout_possibleConstructorReturn","layout_getPrototypeOf","_layoutId","_viewInfo","defaultViewInfo","_scrollInfo","generateVisualMatrices","begColCells","endColCells","gutterSpace","layout_helper_slicedToArray","_center","_bottom","layout_helper_toConsumableArray","RowMatrix","ColumnMatrix","layout_get","_computeLayoutMeasure","setViewInformation","pageNumber","pageType","totalPages","layout_defineProperty","renderGrid","currentPage","maxRowHeight","maxColWidth","rowPointer","getViewMatrices","rowMatrices","getViewableMatrices","columnMatrices","centralMatrixPointer","rowMatrixLen","columnMatrixLen","rowPages","columnPages","layoutDimensions","getViewMeasurements","_layout$config","rowSpaces","colSpaces","rightWidth","topHeight","bottomHeight","centerHeight","centerWidth","viewWidth","viewHeight","actualCenterMeasures","totalMeasures","unitHeights","unitWidths","borderMap","border_helper_defineProperty","_borderMap","specificBorderApplier","borderTypes","showBorders","borderInfo","borderType","applySpecificBorder","applyBorders","borderApplierFn","borderApplier","borderMapVal","orderMaker","nestByStack","updateArr","optionalParams","currStack","prevStack","arrVal","stackVal","currElemIndex","newElem","arrElem","returnArr","spanCalculator","isNull","maskCreator","_nestByStack","viewMatrix","hierarchy","_nestByStack2","spanGenerator","spans","ridx","currSpan","getOrder","isReverse","matrixSpanGeneratorMap","span_maker_defineProperty","_matrixSpanGeneratorM","orderGetter","viewMatrixMaker","spanMaker","matrixSpanGenerator","spanApplier","cellCounter","spaceAllocationDueToSpan","cumulativeWidth","spanApplierMap","_spanApplierMap","TransactionSupport","INTERFACE_IMPl","CLASSPREFIX","HEADER","DATA","AXES","FACET_BY_FIELDS","FIELDS","TRANSFORM","LAYER_DEF","CONFIG","DETAIL_FIELDS","AXIS","GEOM","BLANK","SimpleCell","simple_cell_classCallCheck","enums_defaults_defineProperty","_DEFAULT_CONFIG","_CONSTANTS$MARGIN","CONSTANTS","DEFAULT_PROPS","minSpacing","src_props_defineProperty","visual_cell_src_props_PROPS","caption","smartText","axis_cell_classCallCheck","axis_cell_possibleConstructorReturn","axis_cell_getPrototypeOf","_availHeight","_availWidth","axis_cell_assertThisInitialized","computeAxisSpace","logicalWidth","logicalHeight","spaceFixer","_axis$getLogicalSpace","actualWidth","actualHeight","_axis$config2","wrapperDiv","blank_cell_classCallCheck","blank_cell_possibleConstructorReturn","blank_cell_getPrototypeOf","blank_cell_assertThisInitialized","setSmartText","_context$minSpacing","minHeightSpace","minWidthSpace","paddedHeight","paddedWidth","text_cell_classCallCheck","text_cell_possibleConstructorReturn","text_cell_getPrototypeOf","text_cell_assertThisInitialized","computeTextSpace","_context$minSpacing2","minText","_minTextSpace","smartSpace","textAlign","vAlign","_this$smartText","translation","middle","geom_cell_classCallCheck","geom_cell_possibleConstructorReturn","geom_cell_getPrototypeOf","_unit","_datamodel","_facetByFields","_transform","_caption","geom_cell_assertThisInitialized","lockModel","unlockModel","captionSpace","computeGeomSpace","getCaptionSpace","captionDom","DEFAULT_PLACEHOLDERS","src_defaults_defineProperty","_DEFAULT_PLACEHOLDERS","resolveTitleSubTitleContent","rawContent","escapeHTML","htmlEscapes","&","<",">","\"","'","/","createHeading","prevCell","cellType","_minTickDiff","legendInitializer","legendConfig","prevLegends","legends","headerHeight","legendInfo","legendCreator","LegendCls","dataset","scaleProps","_scale$config","stepMapper","dataInfo","legendMeasures","titleText","getGroupByData","setLegendMeasures","MuzeComponent","_this$boundBox","HeaderComponent","headerComponent_classCallCheck","headerComponent_possibleConstructorReturn","headerComponent_getPrototypeOf","setParams","cont","renderHeader","LegendComponent","legendComponent_classCallCheck","legendComponent_possibleConstructorReturn","legendComponent_getPrototypeOf","legendSpace","sectionComponents","_this$params$config","legendMount","legWidth","legHeight","sections","currHeight","currWidth","leg","legendHeight","legendWidth","renderLegend","_defaultAlignmentHelp","defaultAlignmentHelper","arrowSizeMap","getUnitPositions","totalLength","viewLength","currentLen","unitPosition","createScrollBarArrow","createScrollBarRect","mover","applyScrollMouseDownAction","moverRect","scrollMaker","_mover$node$getBoundi","_rect$node$getBoundin","rectX","rectY","changeMoverPosition","registerListenerOnArrow","arrowType","_components","isTouchDevice","applyMoverDrag","moverStartPos","rectStartPos","distanceMoved","actualPosition","pageXOffset","pageYOffset","applyRectClick","emptyScrollAreaClick","manager","unitPositions","ScrollMaker","scroll_maker_classCallCheck","_attachedScrollAction","_unitPositions","scroll_maker_createClass","scrollTo","scrollDeltaTo","createScroll","scrollBarContainer","scrollContainerHelper","attachScrollAction","externalScrollAction","detachScrollAction","scrollMakerMap","_ScrollMaker","HorizontalScrollMaker","horizontal_scroll_maker_classCallCheck","horizontal_scroll_maker_possibleConstructorReturn","horizontal_scroll_maker_getPrototypeOf","horizontal_scroll_maker_inherits","horizontal_scroll_maker_createClass","horizontal_scroll_maker_get","prevArrow","nextArrow","_this$logicalSpace","scrollBarWithouArrowLength","_scrollBarWithouArrowLength","_this$_components$mov","positionAdjuster","newPosition","currentPos","_this$_components$mov2","moverPos","movedViewLength","performAttachedScrollFunction","delta","_this$_components$mov3","scrollPercentage","movement","VerticalScrollMaker","vertical_scroll_maker_classCallCheck","vertical_scroll_maker_possibleConstructorReturn","vertical_scroll_maker_getPrototypeOf","vertical_scroll_maker_inherits","vertical_scroll_maker_createClass","vertical_scroll_maker_get","ScrollComponent","scroll_component_classCallCheck","scrollBarComponentConfig","scroll_component_possibleConstructorReturn","scroll_component_getPrototypeOf","unitIndex","sanitizedUnitIndex","externalAction","MatrixComponent","matrix_component_classCallCheck","matrix_component_possibleConstructorReturn","matrix_component_getPrototypeOf","_this$params$config$s","containerForMatrix","applyScroll","_cellSpanMaker","cellSpanMaker","_matrixSpanGenerator","renderTable","applySpans","applier","renderPlaceholders","renderMatrix","applyScrollAction","scollDistance","GridComponent","grid_component_classCallCheck","grid_component_possibleConstructorReturn","grid_component_getPrototypeOf","_this$component$viewI","matrixDim","matrixName","updateWrapper","matrixWrapper","allComponents","_scrollBarManager","wheelDeltaX","wheelDeltaY","scrollBarManager","triggerScrollBarAction","movedView","scrollActionApplier","_this$component$0$0$b","sanitizeGrid","headerMap","headerCell","configType","createHeaderWrapper","headerType","layoutManager","renderDetails","_headerMap$headerType","headerConfig","component_wrapper_maker_objectSpread","wrapperParams","existingComponent","createScrollBarWrapper","scrollBarType","grid","_scrollBarMap$scrollB","scrollBarMap","layoutBasedMeasure","viewMeasure","rowAlign","colAlign","componentWrapperMaker","createLegendWrapper","legendWrapper","gridLayoutWrapper","verticalScrollBar","horizontalScrollBar","ScrollManager","scroll_manager_classCallCheck","_scrollBarComponents","_attachedComponents","scroll_manager_createClass","scrollBarComponents","attachedComponents","performScrollAction","getRenderDetails","_mount$getBoundingCli","heightAttr","widthAttr","visGroup","_visGroup$placeholder","legendPosition","layoutArrangement","arrangeComponents","_titleLayouts","titleLayouts","component_resolver_defineProperty","legendLayouts","titlePosition","subtitlePosition","availableHeightForCanvas","availableWidthForCanvas","_createHeaders","canvasHeight","canvasWidth","isSubtitle","headerOptions","_createHeading","createLegend","getLegendSpace","mountSpace","componentIndexes","componentNames","3","4","5","renderLayout","_layoutManager","gridLayout","compWrappers","componentWrappers","gridWrapper","createScrollManager","horizontalScrollWrapper","verticalScrollWrapper","hScrollBar","vScrollBar","componentWrapper","deleteElementName","deleteElementId","removeComponent","registerComponents","attachScrollListener","defaultInteractionPolicy","isMeasure","group_firebolt_toConsumableArray","getFieldsFromChannel","colDim","unitColFacets","equals","unitRowFacets","propagateWith","defaultCrossInteractionPolicy","propagationCanvasAlias","propagationUnit","GroupFireBolt","group_firebolt_classCallCheck","group_firebolt_possibleConstructorReturn","group_firebolt_getPrototypeOf","behaviouralAction","validFields","APP_INITIAL_STATE","app","Canvas","globalDependencies","canvas_classCallCheck","canvas_possibleConstructorReturn","canvas_getPrototypeOf","canvas_defineProperty","canvas_assertThisInitialized","initedComponents","initCanvas","createGroupState","_VisualGroup$getState2","canvas_helper_slicedToArray","localState","register","prepareLayout","triggerReflow","setLayoutInfForUnits","getBoundBox","getRootNodeId","setLabelRotationForAxes","rotationVal","getAxes","initialSettings","regEntry","COMPONENTS","SUBREGISTRIES","regObj","globalCache","defaultRegistry","overrideRegistryDefinitions","overrideRegistry","muze","_transactor2","muze_slicedToArray","env","globalStore","componentSubRegistryDef","settings","withSettings","enableChainedTransaction","transactionModel","transactionEndpoint","transactionItems","Smartlabel","SideEffects","standards","Behaviours","pkg","operators","utils","lookupWhat","lookupDetails","lookupTarget","deps"],"mappings":"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","file":"muze.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"muze\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"muze\"] = factory();\n\telse\n\t\troot[\"muze\"] = factory();\n})(window, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 7);\n","(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"DataModel\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"DataModel\"] = factory();\n\telse\n\t\troot[\"DataModel\"] = factory();\n})(window, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"./src/index.js\");\n","import dsv from \"./dsv\";\n\nvar csv = dsv(\",\");\n\nexport var csvParse = csv.parse;\nexport var csvParseRows = csv.parseRows;\nexport var csvFormat = csv.format;\nexport var csvFormatRows = csv.formatRows;\n","var EOL = {},\n    EOF = {},\n    QUOTE = 34,\n    NEWLINE = 10,\n    RETURN = 13;\n\nfunction objectConverter(columns) {\n  return new Function(\"d\", \"return {\" + columns.map(function(name, i) {\n    return JSON.stringify(name) + \": d[\" + i + \"]\";\n  }).join(\",\") + \"}\");\n}\n\nfunction customConverter(columns, f) {\n  var object = objectConverter(columns);\n  return function(row, i) {\n    return f(object(row), i, columns);\n  };\n}\n\n// Compute unique columns in order of discovery.\nfunction inferColumns(rows) {\n  var columnSet = Object.create(null),\n      columns = [];\n\n  rows.forEach(function(row) {\n    for (var column in row) {\n      if (!(column in columnSet)) {\n        columns.push(columnSet[column] = column);\n      }\n    }\n  });\n\n  return columns;\n}\n\nexport default function(delimiter) {\n  var reFormat = new RegExp(\"[\\\"\" + delimiter + \"\\n\\r]\"),\n      DELIMITER = delimiter.charCodeAt(0);\n\n  function parse(text, f) {\n    var convert, columns, rows = parseRows(text, function(row, i) {\n      if (convert) return convert(row, i - 1);\n      columns = row, convert = f ? customConverter(row, f) : objectConverter(row);\n    });\n    rows.columns = columns || [];\n    return rows;\n  }\n\n  function parseRows(text, f) {\n    var rows = [], // output rows\n        N = text.length,\n        I = 0, // current character index\n        n = 0, // current line number\n        t, // current token\n        eof = N <= 0, // current token followed by EOF?\n        eol = false; // current token followed by EOL?\n\n    // Strip the trailing newline.\n    if (text.charCodeAt(N - 1) === NEWLINE) --N;\n    if (text.charCodeAt(N - 1) === RETURN) --N;\n\n    function token() {\n      if (eof) return EOF;\n      if (eol) return eol = false, EOL;\n\n      // Unescape quotes.\n      var i, j = I, c;\n      if (text.charCodeAt(j) === QUOTE) {\n        while (I++ < N && text.charCodeAt(I) !== QUOTE || text.charCodeAt(++I) === QUOTE);\n        if ((i = I) >= N) eof = true;\n        else if ((c = text.charCodeAt(I++)) === NEWLINE) eol = true;\n        else if (c === RETURN) { eol = true; if (text.charCodeAt(I) === NEWLINE) ++I; }\n        return text.slice(j + 1, i - 1).replace(/\"\"/g, \"\\\"\");\n      }\n\n      // Find next delimiter or newline.\n      while (I < N) {\n        if ((c = text.charCodeAt(i = I++)) === NEWLINE) eol = true;\n        else if (c === RETURN) { eol = true; if (text.charCodeAt(I) === NEWLINE) ++I; }\n        else if (c !== DELIMITER) continue;\n        return text.slice(j, i);\n      }\n\n      // Return last token before EOF.\n      return eof = true, text.slice(j, N);\n    }\n\n    while ((t = token()) !== EOF) {\n      var row = [];\n      while (t !== EOL && t !== EOF) row.push(t), t = token();\n      if (f && (row = f(row, n++)) == null) continue;\n      rows.push(row);\n    }\n\n    return rows;\n  }\n\n  function format(rows, columns) {\n    if (columns == null) columns = inferColumns(rows);\n    return [columns.map(formatValue).join(delimiter)].concat(rows.map(function(row) {\n      return columns.map(function(column) {\n        return formatValue(row[column]);\n      }).join(delimiter);\n    })).join(\"\\n\");\n  }\n\n  function formatRows(rows) {\n    return rows.map(formatRow).join(\"\\n\");\n  }\n\n  function formatRow(row) {\n    return row.map(formatValue).join(delimiter);\n  }\n\n  function formatValue(text) {\n    return text == null ? \"\"\n        : reFormat.test(text += \"\") ? \"\\\"\" + text.replace(/\"/g, \"\\\"\\\"\") + \"\\\"\"\n        : text;\n  }\n\n  return {\n    parse: parse,\n    parseRows: parseRows,\n    format: format,\n    formatRows: formatRows\n  };\n}\n","export {default as dsvFormat} from \"./dsv\";\nexport {csvParse, csvParseRows, csvFormat, csvFormatRows} from \"./csv\";\nexport {tsvParse, tsvParseRows, tsvFormat, tsvFormatRows} from \"./tsv\";\n","import dsv from \"./dsv\";\n\nvar tsv = dsv(\"\\t\");\n\nexport var tsvParse = tsv.parse;\nexport var tsvParseRows = tsv.parseRows;\nexport var tsvFormat = tsv.format;\nexport var tsvFormatRows = tsv.formatRows;\n","export { DataFormat, FilteringMode } from '../enums';\n/**\n * The event name for data propagation.\n */\nexport const PROPAGATION = 'propagation';\n\n/**\n * The name of the unique row id column in DataModel.\n */\nexport const ROW_ID = '__id__';\n\n/**\n * The enums for operation names performed on DataModel.\n */\nexport const DM_DERIVATIVES = {\n    SELECT: 'select',\n    PROJECT: 'project',\n    GROUPBY: 'group',\n    COMPOSE: 'compose',\n    CAL_VAR: 'calculatedVariable',\n    BIN: 'bin',\n    SORT: 'sort'\n};\n\nexport const JOINS = {\n    CROSS: 'cross',\n    LEFTOUTER: 'leftOuter',\n    RIGHTOUTER: 'rightOuter',\n    NATURAL: 'natural',\n    FULLOUTER: 'fullOuter'\n};\n\nexport const LOGICAL_OPERATORS = {\n    AND: 'and',\n    OR: 'or'\n};\n","import FlatJSON from './flat-json';\nimport DSVArr from './dsv-arr';\nimport DSVStr from './dsv-str';\nimport { detectDataFormat } from '../utils';\n\n/**\n * Parses the input data and detect the format automatically.\n *\n * @param {string|Array} data - The input data.\n * @param {Object} options - An optional config specific to data format.\n * @return {Array.<Object>} Returns an array of headers and column major data.\n */\nfunction Auto (data, options) {\n    const converters = { FlatJSON, DSVStr, DSVArr };\n    const dataFormat = detectDataFormat(data);\n\n    if (!dataFormat) {\n        throw new Error('Couldn\\'t detect the data format');\n    }\n\n    return converters[dataFormat](data, options);\n}\n\nexport default Auto;\n","import { columnMajor } from '../utils';\n\n/**\n * Parses and converts data formatted in DSV array to a manageable internal format.\n *\n * @param {Array.<Array>} arr - A 2D array containing of the DSV data.\n * @param {Object} options - Option to control the behaviour of the parsing.\n * @param {boolean} [options.firstRowHeader=true] - Whether the first row of the dsv data is header or not.\n * @return {Array} Returns an array of headers and column major data.\n * @example\n *\n * // Sample input data:\n * const data = [\n *    [\"a\", \"b\", \"c\"],\n *    [1, 2, 3],\n *    [4, 5, 6],\n *    [7, 8, 9]\n * ];\n */\nfunction DSVArr (arr, options) {\n    const defaultOption = {\n        firstRowHeader: true,\n    };\n    options = Object.assign({}, defaultOption, options);\n\n    let header;\n    const columns = [];\n    const push = columnMajor(columns);\n\n    if (options.firstRowHeader) {\n        // If header present then mutate the array.\n        // Do in-place mutation to save space.\n        header = arr.splice(0, 1)[0];\n    } else {\n        header = [];\n    }\n\n    arr.forEach(field => push(...field));\n\n    return [header, columns];\n}\n\nexport default DSVArr;\n","import { dsvFormat as d3Dsv } from 'd3-dsv';\nimport DSVArr from './dsv-arr';\n\n/**\n * Parses and converts data formatted in DSV string to a manageable internal format.\n *\n * @todo Support to be given for https://tools.ietf.org/html/rfc4180.\n * @todo Sample implementation https://github.com/knrz/CSV.js/.\n *\n * @param {string} str - The input DSV string.\n * @param {Object} options - Option to control the behaviour of the parsing.\n * @param {boolean} [options.firstRowHeader=true] - Whether the first row of the dsv string data is header or not.\n * @param {string} [options.fieldSeparator=\",\"] - The separator of two consecutive field.\n * @return {Array} Returns an array of headers and column major data.\n * @example\n *\n * // Sample input data:\n * const data = `\n * a,b,c\n * 1,2,3\n * 4,5,6\n * 7,8,9\n * `\n */\nfunction DSVStr (str, options) {\n    const defaultOption = {\n        firstRowHeader: true,\n        fieldSeparator: ','\n    };\n    options = Object.assign({}, defaultOption, options);\n\n    const dsv = d3Dsv(options.fieldSeparator);\n    return DSVArr(dsv.parseRows(str), options);\n}\n\nexport default DSVStr;\n","import { columnMajor } from '../utils';\n\n/**\n * Parses and converts data formatted in JSON to a manageable internal format.\n *\n * @param {Array.<Object>} arr - The input data formatted in JSON.\n * @return {Array.<Object>} Returns an array of headers and column major data.\n * @example\n *\n * // Sample input data:\n * const data = [\n *    {\n *      \"a\": 1,\n *      \"b\": 2,\n *      \"c\": 3\n *    },\n *    {\n *      \"a\": 4,\n *      \"b\": 5,\n *      \"c\": 6\n *    },\n *    {\n *      \"a\": 7,\n *      \"b\": 8,\n *      \"c\": 9\n *    }\n * ];\n */\nfunction FlatJSON (arr) {\n    const header = {};\n    let i = 0;\n    let insertionIndex;\n    const columns = [];\n    const push = columnMajor(columns);\n\n    arr.forEach((item) => {\n        const fields = [];\n        for (let key in item) {\n            if (key in header) {\n                insertionIndex = header[key];\n            } else {\n                header[key] = i++;\n                insertionIndex = i - 1;\n            }\n            fields[insertionIndex] = item[key];\n        }\n        push(...fields);\n    });\n\n    return [Object.keys(header), columns];\n}\n\nexport default FlatJSON;\n","export { default as DSVArr } from './dsv-arr';\nexport { default as DSVStr } from './dsv-str';\nexport { default as FlatJSON } from './flat-json';\nexport { default as Auto } from './auto-resolver';\n","/* eslint-disable default-case */\n\nimport { FieldType, DimensionSubtype, DataFormat } from './enums';\nimport {\n    persistDerivations,\n    getRootGroupByModel,\n    propagateToAllDataModels,\n    getRootDataModel,\n    propagateImmutableActions,\n    addToPropNamespace,\n    sanitizeUnitSchema\n} from './helper';\nimport { DM_DERIVATIVES, PROPAGATION } from './constants';\nimport {\n    dataBuilder,\n    rowDiffsetIterator,\n    groupBy\n} from './operator';\nimport { createBinnedFieldData } from './operator/bucket-creator';\nimport Relation from './relation';\nimport reducerStore from './utils/reducer-store';\nimport { createFields } from './field-creator';\nimport InvalidAwareTypes from './invalid-aware-types';\nimport Value from './value';\n\n/**\n * DataModel is an in-browser representation of tabular data. It supports\n * {@link https://en.wikipedia.org/wiki/Relational_algebra | relational algebra} operators as well as generic data\n * processing opearators.\n * DataModel extends {@link Relation} class which defines all the relational algebra opreators. DataModel gives\n * definition of generic data processing operators which are not relational algebra complient.\n *\n * @public\n * @class\n * @extends Relation\n * @memberof Datamodel\n */\nclass DataModel extends Relation {\n    /**\n     * Creates a new DataModel instance by providing data and schema. Data could be in the form of\n     * - Flat JSON\n     * - DSV String\n     * - 2D Array\n     *\n     * By default DataModel finds suitable adapter to serialize the data. DataModel also expects a\n     * {@link Schema | schema} for identifying the variables present in data.\n     *\n     * @constructor\n     * @example\n     * const data = loadData('cars.csv');\n     * const schema = [\n     *      { name: 'Name', type: 'dimension' },\n     *      { name: 'Miles_per_Gallon', type: 'measure', unit : 'cm', scale: '1000', numberformat: val => `${val}G`},\n     *      { name: 'Cylinders', type: 'dimension' },\n     *      { name: 'Displacement', type: 'measure' },\n     *      { name: 'Horsepower', type: 'measure' },\n     *      { name: 'Weight_in_lbs', type: 'measure' },\n     *      { name: 'Acceleration', type: 'measure' },\n     *      { name: 'Year', type: 'dimension', subtype: 'datetime', format: '%Y' },\n     *      { name: 'Origin', type: 'dimension' }\n     * ];\n     * const dm = new DataModel(data, schema, { name: 'Cars' });\n     * table(dm);\n     *\n     * @public\n     *\n     * @param {Array.<Object> | string | Array.<Array>} data Input data in any of the mentioned formats\n     * @param {Array.<Schema>} schema Defination of the variables. Order of the variables in data and order of the\n     *      variables in schema has to be same.\n     * @param {object} [options] Optional arguments to specify more settings regarding the creation part\n     * @param {string} [options.name] Name of the datamodel instance. If no name is given an auto generated name is\n     *      assigned to the instance.\n     * @param {string} [options.fieldSeparator=','] specify field separator type if the data is of type dsv string.\n     */\n    constructor (...args) {\n        super(...args);\n\n        this._onPropagation = [];\n    }\n\n    /**\n     * Reducers are simple functions which reduces an array of numbers to a representative number of the set.\n     * Like an array of numbers `[10, 20, 5, 15]` can be reduced to `12.5` if average / mean reducer function is\n     * applied. All the measure fields in datamodel (variables in data) needs a reducer to handle aggregation.\n     *\n     * @public\n     *\n     * @return {ReducerStore} Singleton instance of {@link ReducerStore}.\n     */\n    static get Reducers () {\n        return reducerStore;\n    }\n\n    /**\n     * Configure null, undefined, invalid values in the source data\n     *\n     * @public\n     *\n     * @param {Object} [config] - Configuration to control how null, undefined and non-parsable values are\n     * represented in DataModel.\n     * @param {string} [config.undefined] - Define how an undefined value will be represented.\n     * @param {string} [config.null] - Define how a null value will be represented.\n     * @param {string} [config.invalid] - Define how a non-parsable value will be represented.\n     */\n    static configureInvalidAwareTypes (config) {\n        return InvalidAwareTypes.invalidAwareVals(config);\n    }\n\n    /**\n     * Retrieve the data attached to an instance in JSON format.\n     *\n     * @example\n     * // DataModel instance is already prepared and assigned to dm variable\n     *  const data = dm.getData({\n     *      order: 'column',\n     *      formatter: {\n     *          origin: (val) => val === 'European Union' ? 'EU' : val;\n     *      }\n     *  });\n     *  console.log(data);\n     *\n     * @public\n     *\n     * @param {Object} [options] Options to control how the raw data is to be returned.\n     * @param {string} [options.order='row'] Defines if data is retieved in row order or column order. Possible values\n     *      are `'rows'` and `'columns'`\n     * @param {Function} [options.formatter=null] Formats the output data. This expects an object, where the keys are\n     *      the name of the variable needs to be formatted. The formatter function is called for each row passing the\n     *      value of the cell for a particular row as arguments. The formatter is a function in the form of\n     *      `function (value, rowId, schema) => { ... }`\n     *      Know more about {@link Fomatter}.\n     *\n     * @return {Array} Returns a multidimensional array of the data with schema. The return format looks like\n     *      ```\n     *          {\n     *              data,\n     *              schema\n     *          }\n     *      ```\n     */\n    getData (options) {\n        const defOptions = {\n            order: 'row',\n            formatter: null,\n            withUid: false,\n            getAllFields: false,\n            sort: []\n        };\n        options = Object.assign({}, defOptions, options);\n        const fields = this.getPartialFieldspace().fields;\n\n        const dataGenerated = dataBuilder.call(\n            this,\n            this.getPartialFieldspace().fields,\n            this._rowDiffset,\n            options.getAllFields ? fields.map(d => d.name()).join() : this._colIdentifier,\n            options.sort,\n            {\n                columnWise: options.order === 'column',\n                addUid: !!options.withUid\n            }\n        );\n\n        if (!options.formatter) {\n            return dataGenerated;\n        }\n\n        const { formatter } = options;\n        const { data, schema, uids } = dataGenerated;\n        const fieldNames = schema.map((e => e.name));\n        const fmtFieldNames = Object.keys(formatter);\n        const fmtFieldIdx = fmtFieldNames.reduce((acc, next) => {\n            const idx = fieldNames.indexOf(next);\n            if (idx !== -1) {\n                acc.push([idx, formatter[next]]);\n            }\n            return acc;\n        }, []);\n\n        if (options.order === 'column') {\n            fmtFieldIdx.forEach((elem) => {\n                const fIdx = elem[0];\n                const fmtFn = elem[1];\n\n                data[fIdx].forEach((datum, datumIdx) => {\n                    data[fIdx][datumIdx] = fmtFn.call(\n                        undefined,\n                        datum,\n                        uids[datumIdx],\n                        schema[fIdx]\n                    );\n                });\n            });\n        } else {\n            data.forEach((datum, datumIdx) => {\n                fmtFieldIdx.forEach((elem) => {\n                    const fIdx = elem[0];\n                    const fmtFn = elem[1];\n\n                    datum[fIdx] = fmtFn.call(\n                        undefined,\n                        datum[fIdx],\n                        uids[datumIdx],\n                        schema[fIdx]\n                    );\n                });\n            });\n        }\n\n        return dataGenerated;\n    }\n\n    /**\n     * Returns the unique ids in an array.\n     *\n     * @return {Array} Returns an array of ids.\n     */\n    getUids () {\n        const rowDiffset = this._rowDiffset;\n        const ids = [];\n\n        if (rowDiffset.length) {\n            const diffSets = rowDiffset.split(',');\n            diffSets.forEach((set) => {\n                let [start, end] = set.split('-').map(Number);\n                end = end !== undefined ? end : start;\n                ids.push(...Array(end - start + 1).fill().map((_, idx) => start + idx));\n            });\n        }\n\n        return ids;\n    }\n    /**\n     * Groups the data using particular dimensions and by reducing measures. It expects a list of dimensions using which\n     * it projects the datamodel and perform aggregations to reduce the duplicate tuples. Refer this\n     * {@link link_to_one_example_with_group_by | document} to know the intuition behind groupBy.\n     *\n     * DataModel by default provides definition of few {@link reducer | Reducers}.\n     * {@link ReducerStore | User defined reducers} can also be registered.\n     *\n     * This is the chained implementation of `groupBy`.\n     * `groupBy` also supports {@link link_to_compose_groupBy | composability}\n     *\n     * @example\n     * const groupedDM = dm.groupBy(['Year'], { horsepower: 'max' } );\n     * console.log(groupedDm);\n     *\n     * @public\n     *\n     * @param {Array.<string>} fieldsArr - Array containing the name of dimensions\n     * @param {Object} [reducers={}] - A map whose key is the variable name and value is the name of the reducer. If its\n     *      not passed, or any variable is ommitted from the object, default aggregation function is used from the\n     *      schema of the variable.\n     *\n     * @return {DataModel} Returns a new DataModel instance after performing the groupby.\n     */\n    groupBy (fieldsArr, reducers = {}, config = { saveChild: true }) {\n        const groupByString = `${fieldsArr.join()}`;\n        let params = [this, fieldsArr, reducers];\n        const newDataModel = groupBy(...params);\n\n        persistDerivations(\n            this,\n            newDataModel,\n            DM_DERIVATIVES.GROUPBY,\n            { fieldsArr, groupByString, defaultReducer: reducerStore.defaultReducer() },\n            reducers\n        );\n\n        if (config.saveChild) {\n            newDataModel.setParent(this);\n        } else {\n            newDataModel.setParent(null);\n        }\n\n        return newDataModel;\n    }\n\n    /**\n     * Performs sorting operation on the current {@link DataModel} instance according to the specified sorting details.\n     * Like every other operator it doesn't mutate the current DataModel instance on which it was called, instead\n     * returns a new DataModel instance containing the sorted data.\n     *\n     * DataModel support multi level sorting by listing the variables using which sorting needs to be performed and\n     * the type of sorting `ASC` or `DESC`.\n     *\n     * In the following example, data is sorted by `Origin` field in `DESC` order in first level followed by another\n     * level of sorting by `Acceleration` in `ASC` order.\n     *\n     * @example\n     * // here dm is the pre-declared DataModel instance containing the data of 'cars.json' file\n     * let sortedDm = dm.sort([\n     *    [\"Origin\", \"DESC\"]\n     *    [\"Acceleration\"] // Default value is ASC\n     * ]);\n     *\n     * console.log(dm.getData());\n     * console.log(sortedDm.getData());\n     *\n     * // Sort with a custom sorting function\n     * sortedDm = dm.sort([\n     *    [\"Origin\", \"DESC\"]\n     *    [\"Acceleration\", (a, b) => a - b] // Custom sorting function\n     * ]);\n     *\n     * console.log(dm.getData());\n     * console.log(sortedDm.getData());\n     *\n     * @text\n     * DataModel also provides another sorting mechanism out of the box where sort is applied to a variable using\n     * another variable which determines the order.\n     * Like the above DataModel contains three fields `Origin`, `Name` and `Acceleration`. Now, the data in this\n     * model can be sorted by `Origin` field according to the average value of all `Acceleration` for a\n     * particular `Origin` value.\n     *\n     * @example\n     * // here dm is the pre-declared DataModel instance containing the data of 'cars.json' file\n     * const sortedDm = dm.sort([\n     *     ['Origin', ['Acceleration', (a, b) => avg(...a.Acceleration) - avg(...b.Acceleration)]]\n     * ]);\n     *\n     * console.log(dm.getData());\n     * console.log(sortedDm.getData());\n     *\n     * @public\n     *\n     * @param {Array.<Array>} sortingDetails - Sorting details based on which the sorting will be performed.\n     * @return {DataModel} Returns a new instance of DataModel with sorted data.\n     */\n    sort (sortingDetails, config = { saveChild: false }) {\n        const rawData = this.getData({\n            order: 'row',\n            sort: sortingDetails\n        });\n        const header = rawData.schema.map(field => field.name);\n        const dataInCSVArr = [header].concat(rawData.data);\n\n        const sortedDm = new this.constructor(dataInCSVArr, rawData.schema, { dataFormat: 'DSVArr' });\n\n        persistDerivations(\n            this,\n            sortedDm,\n            DM_DERIVATIVES.SORT,\n            config,\n            sortingDetails\n        );\n\n        if (config.saveChild) {\n            sortedDm.setParent(this);\n        } else {\n            sortedDm.setParent(null);\n        }\n\n        return sortedDm;\n    }\n\n    /**\n     * Performs the serialization operation on the current {@link DataModel} instance according to the specified data\n     * type. When an {@link DataModel} instance is created, it de-serializes the input data into its internal format,\n     * and during its serialization process, it converts its internal data format to the specified data type and returns\n     * that data regardless what type of data is used during the {@link DataModel} initialization.\n     *\n     * @example\n     * // here dm is the pre-declared DataModel instance.\n     * const csvData = dm.serialize(DataModel.DataFormat.DSV_STR, { fieldSeparator: \",\" });\n     * console.log(csvData); // The csv formatted data.\n     *\n     * const jsonData = dm.serialize(DataModel.DataFormat.FLAT_JSON);\n     * console.log(jsonData); // The json data.\n     *\n     * @public\n     *\n     * @param {string} type - The data type name for serialization.\n     * @param {Object} options - The optional option object.\n     * @param {string} options.fieldSeparator - The field separator character for DSV data type.\n     * @return {Array|string} Returns the serialized data.\n     */\n    serialize (type, options) {\n        type = type || this._dataFormat;\n        options = Object.assign({}, { fieldSeparator: ',' }, options);\n\n        const fields = this.getFieldspace().fields;\n        const colData = fields.map(f => f.formattedData());\n        const rowsCount = colData[0].length;\n        let serializedData;\n        let rowIdx;\n        let colIdx;\n\n        if (type === DataFormat.FLAT_JSON) {\n            serializedData = [];\n            for (rowIdx = 0; rowIdx < rowsCount; rowIdx++) {\n                const row = {};\n                for (colIdx = 0; colIdx < fields.length; colIdx++) {\n                    row[fields[colIdx].name()] = colData[colIdx][rowIdx];\n                }\n                serializedData.push(row);\n            }\n        } else if (type === DataFormat.DSV_STR) {\n            serializedData = [fields.map(f => f.name()).join(options.fieldSeparator)];\n            for (rowIdx = 0; rowIdx < rowsCount; rowIdx++) {\n                const row = [];\n                for (colIdx = 0; colIdx < fields.length; colIdx++) {\n                    row.push(colData[colIdx][rowIdx]);\n                }\n                serializedData.push(row.join(options.fieldSeparator));\n            }\n            serializedData = serializedData.join('\\n');\n        } else if (type === DataFormat.DSV_ARR) {\n            serializedData = [fields.map(f => f.name())];\n            for (rowIdx = 0; rowIdx < rowsCount; rowIdx++) {\n                const row = [];\n                for (colIdx = 0; colIdx < fields.length; colIdx++) {\n                    row.push(colData[colIdx][rowIdx]);\n                }\n                serializedData.push(row);\n            }\n        } else {\n            throw new Error(`Data type ${type} is not supported`);\n        }\n\n        return serializedData;\n    }\n\n    addField (field) {\n        const fieldName = field.name();\n        this._colIdentifier += `,${fieldName}`;\n        const partialFieldspace = this._partialFieldspace;\n        const cachedValueObjects = partialFieldspace._cachedValueObjects;\n\n        if (!partialFieldspace.fieldsObj()[field.name()]) {\n            partialFieldspace.fields.push(field);\n            cachedValueObjects.forEach((obj, i) => {\n                obj[field.name()] = new Value(field.partialField.data[i], field);\n            });\n        } else {\n            const fieldIndex = partialFieldspace.fields.findIndex(fieldinst => fieldinst.name() === fieldName);\n            fieldIndex >= 0 && (partialFieldspace.fields[fieldIndex] = field);\n        }\n\n        // flush out cached namespace values on addition of new fields\n        partialFieldspace._cachedFieldsObj = null;\n        partialFieldspace._cachedDimension = null;\n        partialFieldspace._cachedMeasure = null;\n\n        this.__calculateFieldspace().calculateFieldsConfig();\n        return this;\n    }\n\n    /**\n    * Creates a new variable calculated from existing variables. This method expects the definition of the newly created\n    * variable and a function which resolves the value of the new variable from existing variables.\n    *\n    * Can create a new measure based on existing variables:\n    * @example\n    *  // DataModel already prepared and assigned to dm variable;\n    *  const newDm = dataModel.calculateVariable({\n    *      name: 'powerToWeight',\n    *      type: 'measure'\n    *  }, ['horsepower', 'weight_in_lbs', (hp, weight) => hp / weight ]);\n    *\n    *\n    * Can create a new dimension based on existing variables:\n    * @example\n    *  // DataModel already prepared and assigned to dm variable;\n    *  const child = dataModel.calculateVariable(\n    *     {\n    *       name: 'Efficiency',\n    *       type: 'dimension'\n    *     }, ['horsepower', (hp) => {\n    *      if (hp < 80) { return 'low'; },\n    *      else if (hp < 120) { return 'moderate'; }\n    *      else { return 'high' }\n    *  }]);\n    *\n    * @public\n    *\n    * @param {Object} schema - The schema of newly defined variable.\n    * @param {Array.<string|function>} dependency - An array containing the dependency variable names and a resolver\n    * function as the last element.\n    * @param {Object} config - An optional config object.\n    * @param {boolean} [config.saveChild] - Whether the newly created DataModel will be a child.\n    * @param {boolean} [config.replaceVar] - Whether the newly created variable will replace the existing variable.\n    * @return {DataModel} Returns an instance of DataModel with the new field.\n    */\n    calculateVariable (schema, dependency, config) {\n        schema = sanitizeUnitSchema(schema);\n        config = Object.assign({}, { saveChild: true, replaceVar: false }, config);\n\n        const fieldsConfig = this.getFieldsConfig();\n        const depVars = dependency.slice(0, dependency.length - 1);\n        const retrieveFn = dependency[dependency.length - 1];\n\n        if (fieldsConfig[schema.name] && !config.replaceVar) {\n            throw new Error(`${schema.name} field already exists in datamodel`);\n        }\n\n        const depFieldIndices = depVars.map((field) => {\n            const fieldSpec = fieldsConfig[field];\n            if (!fieldSpec) {\n                // @todo dont throw error here, use warning in production mode\n                throw new Error(`${field} is not a valid column name.`);\n            }\n            return fieldSpec.index;\n        });\n\n        const clone = this.clone(config.saveChild);\n\n        const fs = clone.getFieldspace().fields;\n        const suppliedFields = depFieldIndices.map(idx => fs[idx]);\n\n        let cachedStore = {};\n        let cloneProvider = () => this.detachedRoot();\n\n        const computedValues = [];\n        rowDiffsetIterator(clone._rowDiffset, (i) => {\n            const fieldsData = suppliedFields.map(field => field.partialField.data[i]);\n            computedValues[i] = retrieveFn(...fieldsData, i, cloneProvider, cachedStore);\n        });\n        const [field] = createFields([computedValues], [schema], [schema.name]);\n        clone.addField(field);\n\n        persistDerivations(\n            this,\n            clone,\n            DM_DERIVATIVES.CAL_VAR,\n            { config: schema, fields: depVars },\n            retrieveFn\n        );\n\n        return clone;\n    }\n\n    /**\n     * Propagates changes across all the connected DataModel instances.\n     *\n     * @param {Array} identifiers - A list of identifiers that were interacted with.\n     * @param {Object} payload - The interaction specific details.\n     *\n     * @return {DataModel} DataModel instance.\n     */\n    propagate (identifiers, config = {}, addToNameSpace, propConfig = {}) {\n        const isMutableAction = config.isMutableAction;\n        const propagationSourceId = config.sourceId;\n        const payload = config.payload;\n        const rootModel = getRootDataModel(this);\n        const propagationNameSpace = rootModel._propagationNameSpace;\n        const rootGroupByModel = getRootGroupByModel(this);\n        const rootModels = {\n            groupByModel: rootGroupByModel,\n            model: rootModel\n        };\n\n        addToNameSpace && addToPropNamespace(propagationNameSpace, config, this);\n        propagateToAllDataModels(identifiers, rootModels, { propagationNameSpace, sourceId: propagationSourceId },\n            Object.assign({\n                payload\n            }, config));\n\n        if (isMutableAction) {\n            propagateImmutableActions(propagationNameSpace, rootModels, {\n                config,\n                propConfig\n            }, this);\n        }\n\n        return this;\n    }\n\n    /**\n     * Associates a callback with an event name.\n     *\n     * @param {string} eventName - The name of the event.\n     * @param {Function} callback - The callback to invoke.\n     * @return {DataModel} Returns this current DataModel instance itself.\n     */\n    on (eventName, callback) {\n        switch (eventName) {\n        case PROPAGATION:\n            this._onPropagation.push(callback);\n            break;\n        }\n        return this;\n    }\n\n    /**\n     * Unsubscribes the callbacks for the provided event name.\n     *\n     * @param {string} eventName - The name of the event to unsubscribe.\n     * @return {DataModel} Returns the current DataModel instance itself.\n     */\n    unsubscribe (eventName) {\n        switch (eventName) {\n        case PROPAGATION:\n            this._onPropagation = [];\n            break;\n\n        }\n        return this;\n    }\n\n    /**\n     * This method is used to invoke the method associated with propagation.\n     *\n     * @param {Object} payload The interaction payload.\n     * @param {DataModel} identifiers The propagated DataModel.\n     * @memberof DataModel\n     */\n    handlePropagation (propModel, payload) {\n        let propListeners = this._onPropagation;\n        propListeners.forEach(fn => fn.call(this, propModel, payload));\n    }\n\n    /**\n     * Performs the binning operation on a measure field based on the binning configuration. Binning means discretizing\n     * values of a measure. Binning configuration contains an array; subsequent values from the array marks the boundary\n     * of buckets in [inclusive, exclusive) range format. This operation does not mutate the subject measure field,\n     * instead, it creates a new field (variable) of type dimension and subtype binned.\n     *\n     * Binning can be configured by\n     * - providing custom bin configuration with non-uniform buckets,\n     * - providing bins count,\n     * - providing each bin size,\n     *\n     * When custom `buckets` are provided as part of binning configuration:\n     * @example\n     *  // DataModel already prepared and assigned to dm variable\n     *  const config = { name: 'binnedHP', buckets: [30, 80, 100, 110] }\n     *  const binnedDM = dataModel.bin('horsepower', config);\n     *\n     * @text\n     * When `binsCount` is defined as part of binning configuration:\n     * @example\n     *  // DataModel already prepared and assigned to dm variable\n     *  const config = { name: 'binnedHP', binsCount: 5, start: 0, end: 100 }\n     *  const binDM = dataModel.bin('horsepower', config);\n     *\n     * @text\n     * When `binSize` is defined as part of binning configuration:\n     * @example\n     *  // DataModel already prepared and assigned to dm variable\n     *  const config = { name: 'binnedHorsepower', binSize: 20, start: 5}\n     *  const binDM = dataModel.bin('horsepower', config);\n     *\n     * @public\n     *\n     * @param {string} measureFieldName - The name of the target measure field.\n     * @param {Object} config - The config object.\n     * @param {string} [config.name] - The name of the new field which will be created.\n     * @param {string} [config.buckets] - An array containing the bucket ranges.\n     * @param {string} [config.binSize] - The size of each bin. It is ignored when buckets are given.\n     * @param {string} [config.binsCount] - The total number of bins to generate. It is ignored when buckets are given.\n     * @param {string} [config.start] - The start value of the bucket ranges. It is ignored when buckets are given.\n     * @param {string} [config.end] - The end value of the bucket ranges. It is ignored when buckets are given.\n     * @return {DataModel} Returns a new {@link DataModel} instance with the new field.\n     */\n    bin (measureFieldName, config) {\n        const fieldsConfig = this.getFieldsConfig();\n\n        if (!fieldsConfig[measureFieldName]) {\n            throw new Error(`Field ${measureFieldName} doesn't exist`);\n        }\n\n        const binFieldName = config.name || `${measureFieldName}_binned`;\n\n        if (fieldsConfig[binFieldName]) {\n            throw new Error(`Field ${binFieldName} already exists`);\n        }\n\n        const measureField = this.getFieldspace().fieldsObj()[measureFieldName];\n        const { binnedData, bins } = createBinnedFieldData(measureField, this._rowDiffset, config);\n\n        const binField = createFields([binnedData], [\n            {\n                name: binFieldName,\n                type: FieldType.DIMENSION,\n                subtype: DimensionSubtype.BINNED,\n                bins\n            }], [binFieldName])[0];\n\n        const clone = this.clone(config.saveChild);\n        clone.addField(binField);\n\n        persistDerivations(\n            this,\n            clone,\n            DM_DERIVATIVES.BIN,\n             { measureFieldName, config, binFieldName },\n             null\n        );\n\n        return clone;\n    }\n\n    /**\n     * Creates a new {@link DataModel} instance with completely detached root from current {@link DataModel} instance,\n     * the new {@link DataModel} instance has no parent-children relationship with the current one, but has same data as\n     * the current one.\n     * This API is useful when a completely different {@link DataModel} but with same data as the current instance is\n     * needed.\n     *\n     * @example\n     *  const dm = new DataModel(data, schema);\n     *  const detachedDm = dm.detachedRoot();\n     *\n     * // has different namespace\n     * console.log(dm.getPartialFieldspace().name);\n     * console.log(detachedDm.getPartialFieldspace().name);\n     *\n     * // has same data\n     * console.log(dm.getData());\n     * console.log(detachedDm.getData());\n     *\n     * @public\n     *\n     * @return {DataModel} Returns a detached {@link DataModel} instance.\n     */\n    detachedRoot () {\n        const data = this.serialize(DataFormat.FLAT_JSON);\n        const schema = this.getSchema();\n\n        return new DataModel(data, schema);\n    }\n}\n\nexport default DataModel;\n","import { DataFormat } from './enums';\n\nexport default {\n    dataFormat: DataFormat.AUTO\n};\n","/**\n * DataFormat Enum defines the format of the input data.\n * Based on the format of the data the respective adapter is loaded.\n *\n * @readonly\n * @enum {string}\n */\nconst DataFormat = {\n    FLAT_JSON: 'FlatJSON',\n    DSV_STR: 'DSVStr',\n    DSV_ARR: 'DSVArr',\n    AUTO: 'Auto'\n};\n\nexport default DataFormat;\n","/**\n * DimensionSubtype enum defines the sub types of the Dimensional Field.\n *\n * @readonly\n * @enum {string}\n */\nconst DimensionSubtype = {\n    CATEGORICAL: 'categorical',\n    TEMPORAL: 'temporal',\n    GEO: 'geo',\n    BINNED: 'binned'\n};\n\nexport default DimensionSubtype;\n","/**\n * FieldType enum defines the high level field based on which visuals are controlled.\n * Measure in a high level is numeric field and Dimension in a high level is string field.\n *\n * @readonly\n * @enum {string}\n */\nconst FieldType = {\n    MEASURE: 'measure',\n    DIMENSION: 'dimension'\n};\n\nexport default FieldType;\n","/**\n * Filtering mode enum defines the filering modes of DataModel.\n *\n * @readonly\n * @enum {string}\n */\nconst FilteringMode = {\n    NORMAL: 'normal',\n    INVERSE: 'inverse',\n    ALL: 'all'\n};\n\nexport default FilteringMode;\n","/**\n * Group by function names\n *\n * @readonly\n * @enum {string}\n */\nconst GROUP_BY_FUNCTIONS = {\n    SUM: 'sum',\n    AVG: 'avg',\n    MIN: 'min',\n    MAX: 'max',\n    FIRST: 'first',\n    LAST: 'last',\n    COUNT: 'count',\n    STD: 'std'\n};\n\nexport default GROUP_BY_FUNCTIONS;\n","/**\n * FilteringMode determines if resultant DataModel should be created from selection set or rejection set.\n *\n * The following modes are available\n * - `NORMAL`: Only entries from selection set are included in the resulatant DataModel instance\n * - `INVERSE`: Only entries from rejection set are included in the resulatant DataModel instance\n * - ALL: Both the entries from selection and rejection set are returned in two different DataModel instance\n */\n\nexport { default as DataFormat } from './data-format';\nexport { default as DimensionSubtype } from './dimension-subtype';\nexport { default as MeasureSubtype } from './measure-subtype';\nexport { default as FieldType } from './field-type';\nexport { default as FilteringMode } from './filtering-mode';\nexport { default as GROUP_BY_FUNCTIONS } from './group-by-functions';\n","/**\n * MeasureSubtype enum defines the sub types of the Measure Field.\n *\n * @readonly\n * @enum {string}\n */\nconst MeasureSubtype = {\n    CONTINUOUS: 'continuous'\n};\n\nexport default MeasureSubtype;\n","import DataModel from './datamodel';\nimport {\n  compose,\n  bin,\n  select,\n  project,\n  groupby as groupBy,\n  calculateVariable,\n  sort,\n  crossProduct,\n  difference,\n  naturalJoin,\n  leftOuterJoin,\n  rightOuterJoin,\n  fullOuterJoin,\n  union\n} from './operator';\nimport * as Stats from './stats';\nimport * as enums from './enums';\nimport { DateTimeFormatter } from './utils';\nimport { DataFormat, FilteringMode, DM_DERIVATIVES } from './constants';\nimport InvalidAwareTypes from './invalid-aware-types';\nimport pkg from '../package.json';\n\nconst Operators = {\n    compose,\n    bin,\n    select,\n    project,\n    groupBy,\n    calculateVariable,\n    sort,\n    crossProduct,\n    difference,\n    naturalJoin,\n    leftOuterJoin,\n    rightOuterJoin,\n    fullOuterJoin,\n    union\n};\n\nconst version = pkg.version;\nObject.assign(DataModel, {\n    Operators,\n    Stats,\n    DM_DERIVATIVES,\n    DateTimeFormatter,\n    DataFormat,\n    FilteringMode,\n    InvalidAwareTypes,\n    version\n}, enums);\n\nexport default DataModel;\n","import { FieldType, DimensionSubtype, MeasureSubtype } from './enums';\nimport {\n    Categorical,\n    Temporal,\n    Binned,\n    Continuous,\n    CategoricalParser,\n    TemporalParser,\n    BinnedParser,\n    ContinuousParser,\n    PartialField\n} from './fields';\n\n/**\n * Creates a field instance according to the provided data and schema.\n *\n * @param {Array} data - The field data array.\n * @param {Object} schema - The field schema object.\n * @return {Field} Returns the newly created field instance.\n */\nfunction createUnitField(data, schema) {\n    data = data || [];\n    let partialField;\n\n    switch (schema.type) {\n    case FieldType.MEASURE:\n        switch (schema.subtype) {\n        case MeasureSubtype.CONTINUOUS:\n            partialField = new PartialField(schema.name, data, schema, new ContinuousParser());\n            return new Continuous(partialField, `0-${data.length - 1}`);\n        default:\n            partialField = new PartialField(schema.name, data, schema, new ContinuousParser());\n            return new Continuous(partialField, `0-${data.length - 1}`);\n        }\n    case FieldType.DIMENSION:\n        switch (schema.subtype) {\n        case DimensionSubtype.CATEGORICAL:\n            partialField = new PartialField(schema.name, data, schema, new CategoricalParser());\n            return new Categorical(partialField, `0-${data.length - 1}`);\n        case DimensionSubtype.TEMPORAL:\n            partialField = new PartialField(schema.name, data, schema, new TemporalParser(schema));\n            return new Temporal(partialField, `0-${data.length - 1}`);\n        case DimensionSubtype.BINNED:\n            partialField = new PartialField(schema.name, data, schema, new BinnedParser());\n            return new Binned(partialField, `0-${data.length - 1}`);\n        default:\n            partialField = new PartialField(schema.name, data, schema, new CategoricalParser());\n            return new Categorical(partialField, `0-${data.length - 1}`);\n        }\n    default:\n        partialField = new PartialField(schema.name, data, schema, new CategoricalParser());\n        return new Categorical(partialField, `0-${data.length - 1}`);\n    }\n}\n\n\n/**\n * Creates a field instance from partialField and rowDiffset.\n *\n * @param {PartialField} partialField - The corresponding partial field.\n * @param {string} rowDiffset - The data subset config.\n * @return {Field} Returns the newly created field instance.\n */\nexport function createUnitFieldFromPartial(partialField, rowDiffset) {\n    const { schema } = partialField;\n\n    switch (schema.type) {\n    case FieldType.MEASURE:\n        switch (schema.subtype) {\n        case MeasureSubtype.CONTINUOUS:\n            return new Continuous(partialField, rowDiffset);\n        default:\n            return new Continuous(partialField, rowDiffset);\n        }\n    case FieldType.DIMENSION:\n        switch (schema.subtype) {\n        case DimensionSubtype.CATEGORICAL:\n            return new Categorical(partialField, rowDiffset);\n        case DimensionSubtype.TEMPORAL:\n            return new Temporal(partialField, rowDiffset);\n        case DimensionSubtype.BINNED:\n            return new Binned(partialField, rowDiffset);\n        default:\n            return new Categorical(partialField, rowDiffset);\n        }\n    default:\n        return new Categorical(partialField, rowDiffset);\n    }\n}\n\n/**\n * Creates the field instances with input data and schema.\n *\n * @param {Array} dataColumn - The data array for fields.\n * @param {Array} schema - The schema array for fields.\n * @param {Array} headers - The array of header names.\n * @return {Array.<Field>} Returns an array of newly created field instances.\n */\nexport function createFields(dataColumn, schema, headers) {\n    const headersObj = {};\n\n    if (!(headers && headers.length)) {\n        headers = schema.map(item => item.name);\n    }\n\n    headers.forEach((header, i) => {\n        headersObj[header] = i;\n    });\n\n    return schema.map(item => createUnitField(dataColumn[headersObj[item.name]], item));\n}\n","import { FieldType } from './enums';\nimport { getUniqueId } from './utils';\n\nconst fieldStore = {\n    data: {},\n\n    createNamespace (fieldArr, name) {\n        const dataId = name || getUniqueId();\n\n        this.data[dataId] = {\n            name: dataId,\n            fields: fieldArr,\n\n            fieldsObj () {\n                let fieldsObj = this._cachedFieldsObj;\n\n                if (!fieldsObj) {\n                    fieldsObj = this._cachedFieldsObj = {};\n                    this.fields.forEach((field) => {\n                        fieldsObj[field.name()] = field;\n                    });\n                }\n                return fieldsObj;\n            },\n            getMeasure () {\n                let measureFields = this._cachedMeasure;\n\n                if (!measureFields) {\n                    measureFields = this._cachedMeasure = {};\n                    this.fields.forEach((field) => {\n                        if (field.schema().type === FieldType.MEASURE) {\n                            measureFields[field.name()] = field;\n                        }\n                    });\n                }\n                return measureFields;\n            },\n            getDimension () {\n                let dimensionFields = this._cachedDimension;\n\n                if (!this._cachedDimension) {\n                    dimensionFields = this._cachedDimension = {};\n                    this.fields.forEach((field) => {\n                        if (field.schema().type === FieldType.DIMENSION) {\n                            dimensionFields[field.name()] = field;\n                        }\n                    });\n                }\n                return dimensionFields;\n            },\n        };\n        return this.data[dataId];\n    },\n};\n\nexport default fieldStore;\n","import Dimension from '../dimension';\n\n/**\n * Represents binned field subtype.\n *\n * @public\n * @class\n * @extends Dimension\n */\nexport default class Binned extends Dimension {\n    /**\n     * Calculates the corresponding field domain.\n     *\n     * @public\n     * @override\n     * @return {Array} Returns the last and first values of bins config array.\n     */\n    calculateDataDomain () {\n        const binsArr = this.partialField.schema.bins;\n        return [binsArr[0], binsArr[binsArr.length - 1]];\n    }\n\n    /**\n     * Returns the bins config provided while creating the field instance.\n     *\n     * @public\n     * @return {Array} Returns the bins array config.\n     */\n    bins () {\n        return this.partialField.schema.bins;\n    }\n}\n","import { rowDiffsetIterator } from '../../operator/row-diffset-iterator';\nimport { DimensionSubtype } from '../../enums';\nimport Dimension from '../dimension';\n/**\n * Represents categorical field subtype.\n *\n * @public\n * @class\n * @extends Dimension\n */\nexport default class Categorical extends Dimension {\n    /**\n     * Returns the subtype of the field.\n     *\n     * @public\n     * @override\n     * @return {string} Returns the subtype of the field.\n     */\n    subtype () {\n        return DimensionSubtype.CATEGORICAL;\n    }\n\n    /**\n     * Calculates the corresponding field domain.\n     *\n     * @public\n     * @override\n     * @return {Array} Returns the unique values.\n     */\n    calculateDataDomain () {\n        const hash = new Set();\n        const domain = [];\n\n        // here don't use this.data() as the iteration will be occurred two times on same data.\n        rowDiffsetIterator(this.rowDiffset, (i) => {\n            const datum = this.partialField.data[i];\n            if (!hash.has(datum)) {\n                hash.add(datum);\n                domain.push(datum);\n            }\n        });\n        return domain;\n    }\n}\n","import { rowDiffsetIterator } from '../../operator/row-diffset-iterator';\nimport { MeasureSubtype } from '../../enums';\nimport Measure from '../measure';\nimport InvalidAwareTypes from '../../invalid-aware-types';\n\n/**\n * Represents continuous field subtype.\n *\n * @public\n * @class\n * @extends Measure\n */\nexport default class Continuous extends Measure {\n    /**\n     * Returns the subtype of the field.\n     *\n     * @public\n     * @override\n     * @return {string} Returns the subtype of the field.\n     */\n    subtype () {\n        return MeasureSubtype.CONTINUOUS;\n    }\n\n    /**\n     * Calculates the corresponding field domain.\n     *\n     * @public\n     * @override\n     * @return {Array} Returns the min and max values.\n     */\n    calculateDataDomain () {\n        let min = Number.POSITIVE_INFINITY;\n        let max = Number.NEGATIVE_INFINITY;\n\n        // here don't use this.data() as the iteration will be occurred two times on same data.\n        rowDiffsetIterator(this.rowDiffset, (i) => {\n            const datum = this.partialField.data[i];\n            if (datum instanceof InvalidAwareTypes) {\n                return;\n            }\n\n            if (datum < min) {\n                min = datum;\n            }\n            if (datum > max) {\n                max = datum;\n            }\n        });\n\n        return [min, max];\n    }\n}\n","import Field from '../field';\n\n/**\n * Represents dimension field type.\n *\n * @public\n * @class\n * @extends Field\n */\nexport default class Dimension extends Field {\n    /**\n     * Returns the domain for the dimension field.\n     *\n     * @override\n     * @public\n     * @return {any} Returns the calculated domain.\n     */\n    domain () {\n        if (!this._cachedDomain) {\n            this._cachedDomain = this.calculateDataDomain();\n        }\n        return this._cachedDomain;\n    }\n\n    /**\n     * Calculates the corresponding field domain.\n     *\n     * @public\n     * @abstract\n     */\n    calculateDataDomain () {\n        throw new Error('Not yet implemented');\n    }\n\n     /**\n     * Returns the formatted version of the underlying field data.\n     *\n     * @public\n     * @override\n     * @return {Array} Returns the formatted data.\n     */\n    formattedData () {\n        return this.data();\n    }\n}\n","import { rowDiffsetIterator } from '../../operator/row-diffset-iterator';\n\n/**\n * In {@link DataModel}, every tabular data consists of column, a column is stored as field.\n * Field contains all the data for a given column in an array.\n *\n * Each record consists of several fields; the fields of all records form the columns.\n * Examples of fields: name, gender, sex etc.\n *\n * In DataModel, each field can have multiple attributes which describes its data and behaviour.\n * A field can have two types of data: Measure and Dimension.\n *\n * A Dimension Field is the context on which a data is categorized and the measure is the numerical values that\n * quantify the data set.\n * In short a dimension is the lens through which you are looking at your measure data.\n *\n * Refer to {@link Schema} to get info about possible field attributes.\n *\n * @public\n * @class\n */\nexport default class Field {\n    /**\n     * Initialize a new instance.\n     *\n     * @public\n     * @param {PartialField} partialField - The partialField instance which holds the whole data.\n     * @param {string} rowDiffset - The data subset definition.\n     */\n    constructor (partialField, rowDiffset) {\n        this.partialField = partialField;\n        this.rowDiffset = rowDiffset;\n    }\n\n    /**\n     * Generates the field type specific domain.\n     *\n     * @public\n     * @abstract\n     */\n    domain () {\n        throw new Error('Not yet implemented');\n    }\n\n    /**\n     * Returns the the field schema.\n     *\n     * @public\n     * @return {string} Returns the field schema.\n     */\n    schema () {\n        return this.partialField.schema;\n    }\n\n    /**\n     * Returns the name of the field.\n     *\n     * @public\n     * @return {string} Returns the name of the field.\n     */\n    name () {\n        return this.partialField.name;\n    }\n\n    /**\n     * Returns the type of the field.\n     *\n     * @public\n     * @return {string} Returns the type of the field.\n     */\n    type () {\n        return this.partialField.schema.type;\n    }\n\n    /**\n     * Returns the subtype of the field.\n     *\n     * @public\n     * @return {string} Returns the subtype of the field.\n     */\n    subtype () {\n        return this.partialField.schema.subtype;\n    }\n\n    /**\n     * Returns the description of the field.\n     *\n     * @public\n     * @return {string} Returns the description of the field.\n     */\n    description () {\n        return this.partialField.schema.description;\n    }\n\n    /**\n     * Returns the display name of the field.\n     *\n     * @public\n     * @return {string} Returns the display name of the field.\n     */\n    displayName () {\n        return this.partialField.schema.displayName || this.partialField.schema.name;\n    }\n\n    /**\n     * Returns the data associated with the field.\n     *\n     * @public\n     * @return {Array} Returns the data.\n     */\n    data () {\n        const data = [];\n        rowDiffsetIterator(this.rowDiffset, (i) => {\n            data.push(this.partialField.data[i]);\n        });\n        return data;\n    }\n\n    /**\n     * Returns the formatted version of the underlying field data.\n     *\n     * @public\n     * @abstract\n     */\n    formattedData () {\n        throw new Error('Not yet implemented');\n    }\n}\n","export { default as Field } from './field';\nexport { default as Dimension } from './dimension';\nexport { default as Categorical } from './categorical';\nexport { default as Temporal } from './temporal';\nexport { default as Binned } from './binned';\nexport { default as Measure } from './measure';\nexport { default as Continuous } from './continuous';\nexport { default as FieldParser } from './parsers/field-parser';\nexport { default as CategoricalParser } from './parsers/categorical-parser';\nexport { default as TemporalParser } from './parsers/temporal-parser';\nexport { default as BinnedParser } from './parsers/binned-parser';\nexport { default as ContinuousParser } from './parsers/continuous-parser';\nexport { default as PartialField } from './partial-field';\n","import { formatNumber } from '../../utils';\nimport { defaultReducerName } from '../../operator/group-by-function';\nimport Field from '../field';\n\n/**\n * Represents measure field type.\n *\n * @public\n * @class\n * @extends Field\n */\nexport default class Measure extends Field {\n  /**\n   * Returns the domain for the measure field.\n   *\n   * @override\n   * @public\n   * @return {any} Returns the calculated domain.\n   */\n    domain () {\n        if (!this._cachedDomain) {\n            this._cachedDomain = this.calculateDataDomain();\n        }\n        return this._cachedDomain;\n    }\n\n  /**\n   * Returns the unit of the measure field.\n   *\n   * @public\n   * @return {string} Returns unit of the field.\n   */\n    unit () {\n        return this.partialField.schema.unit;\n    }\n\n  /**\n   * Returns the aggregation function name of the measure field.\n   *\n   * @public\n   * @return {string} Returns aggregation function name of the field.\n   */\n    defAggFn () {\n        return this.partialField.schema.defAggFn || defaultReducerName;\n    }\n\n  /**\n   * Returns the number format of the measure field.\n   *\n   * @public\n   * @return {Function} Returns number format of the field.\n   */\n    numberFormat () {\n        const { numberFormat } = this.partialField.schema;\n        return numberFormat instanceof Function ? numberFormat : formatNumber;\n    }\n\n  /**\n   * Calculates the corresponding field domain.\n   *\n   * @public\n   * @abstract\n   */\n    calculateDataDomain () {\n        throw new Error('Not yet implemented');\n    }\n\n    /**\n     * Returns the formatted version of the underlying field data.\n     *\n     * @public\n     * @override\n     * @return {Array} Returns the formatted data.\n     */\n    formattedData () {\n        return this.data();\n    }\n}\n","import FieldParser from '../field-parser';\nimport InvalidAwareTypes from '../../../invalid-aware-types';\n\n/**\n * A FieldParser which parses the binned values.\n *\n * @public\n * @class\n * @implements {FieldParser}\n */\nexport default class BinnedParser extends FieldParser {\n  /**\n   * Parses a single binned value of a field and returns the sanitized value.\n   *\n   * @public\n   * @param {string} val - The value of the field.\n   * @return {string} Returns the sanitized value.\n   */\n    parse (val) {\n        const regex = /^\\s*([+-]?\\d+(?:\\.\\d+)?)\\s*-\\s*([+-]?\\d+(?:\\.\\d+)?)\\s*$/;\n        val = String(val);\n        let result;\n        // check if invalid date value\n        if (!InvalidAwareTypes.isInvalid(val)) {\n            let matched = val.match(regex);\n            result = matched ? `${Number.parseFloat(matched[1])}-${Number.parseFloat(matched[2])}`\n                             : InvalidAwareTypes.NA;\n        } else {\n            result = InvalidAwareTypes.getInvalidType(val);\n        }\n        return result;\n    }\n}\n","import FieldParser from '../field-parser';\nimport InvalidAwareTypes from '../../../invalid-aware-types';\n\n/**\n * A FieldParser which parses the categorical values.\n *\n * @public\n * @class\n * @implements {FieldParser}\n */\nexport default class CategoricalParser extends FieldParser {\n  /**\n   * Parses a single value of a field and returns the stringified form.\n   *\n   * @public\n   * @param {string|number} val - The value of the field.\n   * @return {string} Returns the stringified value.\n   */\n    parse (val) {\n        let result;\n        // check if invalid date value\n        if (!InvalidAwareTypes.isInvalid(val)) {\n            result = String(val).trim();\n        } else {\n            result = InvalidAwareTypes.getInvalidType(val);\n        }\n        return result;\n    }\n}\n","import FieldParser from '../field-parser';\nimport InvalidAwareTypes from '../../../invalid-aware-types';\n\n/**\n * A FieldParser which parses the continuous values.\n *\n * @public\n * @class\n * @implements {FieldParser}\n */\nexport default class ContinuousParser extends FieldParser {\n  /**\n   * Parses a single value of a field and returns the number form.\n   *\n   * @public\n   * @param {string|number} val - The value of the field.\n   * @return {string} Returns the number value.\n   */\n    parse (val) {\n        let result;\n        // check if invalid date value\n        if (!InvalidAwareTypes.isInvalid(val)) {\n            let parsedVal = parseFloat(val, 10);\n            result = Number.isNaN(parsedVal) ? InvalidAwareTypes.NA : parsedVal;\n        } else {\n            result = InvalidAwareTypes.getInvalidType(val);\n        }\n        return result;\n    }\n}\n","/**\n * A interface to represent a parser which is responsible to parse the field.\n *\n * @public\n * @interface\n */\nexport default class FieldParser {\n    /**\n     * Parses a single value of a field and return the sanitized form.\n     *\n     * @public\n     * @abstract\n     */\n    parse () {\n        throw new Error('Not yet implemented');\n    }\n}\n","import { DateTimeFormatter } from '../../../utils';\nimport FieldParser from '../field-parser';\nimport InvalidAwareTypes from '../../../invalid-aware-types';\n\n/**\n * A FieldParser which parses the temporal values.\n *\n * @public\n * @class\n * @implements {FieldParser}\n */\nexport default class TemporalParser extends FieldParser {\n    /**\n     * Initialize a new instance.\n     *\n     * @public\n     * @param {Object} schema - The schema object for the corresponding field.\n     */\n    constructor (schema) {\n        super();\n        this.schema = schema;\n        this._dtf = new DateTimeFormatter(this.schema.format);\n    }\n\n    /**\n     * Parses a single value of a field and returns the millisecond value.\n     *\n     * @public\n     * @param {string|number} val - The value of the field.\n     * @return {number} Returns the millisecond value.\n     */\n    parse (val) {\n        let result;\n        // check if invalid date value\n        if (!InvalidAwareTypes.isInvalid(val)) {\n            let nativeDate = this._dtf.getNativeDate(val);\n            result = nativeDate ? nativeDate.getTime() : InvalidAwareTypes.NA;\n        } else {\n            result = InvalidAwareTypes.getInvalidType(val);\n        }\n        return result;\n    }\n}\n","/**\n * Stores the full data and the metadata of a field. It provides\n * a single source of data from which the future Field\n * instance can get a subset of it with a rowDiffset config.\n *\n * @class\n * @public\n */\nexport default class PartialField {\n    /**\n     * Initialize a new instance.\n     *\n     * @public\n     * @param {string} name - The name of the field.\n     * @param {Array} data - The data array.\n     * @param {Object} schema - The schema object of the corresponding field.\n     * @param {FieldParser} parser - The parser instance corresponding to that field.\n     */\n    constructor (name, data, schema, parser) {\n        this.name = name;\n        this.schema = schema;\n        this.parser = parser;\n        this.data = this._sanitize(data);\n    }\n\n    /**\n     * Sanitizes the field data.\n     *\n     * @private\n     * @param {Array} data - The actual input data.\n     * @return {Array} Returns the sanitized data.\n     */\n    _sanitize (data) {\n        return data.map(datum => this.parser.parse(datum));\n    }\n}\n","import { rowDiffsetIterator } from '../../operator/row-diffset-iterator';\nimport Dimension from '../dimension';\nimport { DateTimeFormatter } from '../../utils';\nimport InvalidAwareTypes from '../../invalid-aware-types';\n\n/**\n * Represents temporal field subtype.\n *\n * @public\n * @class\n * @extends Dimension\n */\nexport default class Temporal extends Dimension {\n     /**\n     * Initialize a new instance.\n     *\n     * @public\n     * @param {PartialField} partialField - The partialField instance which holds the whole data.\n     * @param {string} rowDiffset - The data subset definition.\n     */\n    constructor (partialField, rowDiffset) {\n        super(partialField, rowDiffset);\n\n        this._cachedMinDiff = null;\n    }\n\n     /**\n     * Calculates the corresponding field domain.\n     *\n     * @public\n     * @override\n     * @return {Array} Returns the unique values.\n     */\n    calculateDataDomain () {\n        const hash = new Set();\n        const domain = [];\n\n        // here don't use this.data() as the iteration will be\n        // occurred two times on same data.\n        rowDiffsetIterator(this.rowDiffset, (i) => {\n            const datum = this.partialField.data[i];\n            if (!hash.has(datum)) {\n                hash.add(datum);\n                domain.push(datum);\n            }\n        });\n\n        return domain;\n    }\n\n\n    /**\n     * Calculates the minimum consecutive difference from the associated field data.\n     *\n     * @public\n     * @return {number} Returns the minimum consecutive diff in milliseconds.\n     */\n    minimumConsecutiveDifference () {\n        if (this._cachedMinDiff) {\n            return this._cachedMinDiff;\n        }\n\n        const sortedData = this.data().filter(item => !(item instanceof InvalidAwareTypes)).sort((a, b) => a - b);\n        const arrLn = sortedData.length;\n        let minDiff = Number.POSITIVE_INFINITY;\n        let prevDatum;\n        let nextDatum;\n        let processedCount = 0;\n\n        for (let i = 1; i < arrLn; i++) {\n            prevDatum = sortedData[i - 1];\n            nextDatum = sortedData[i];\n\n            if (nextDatum === prevDatum) {\n                continue;\n            }\n\n            minDiff = Math.min(minDiff, nextDatum - sortedData[i - 1]);\n            processedCount++;\n        }\n\n        if (!processedCount) {\n            minDiff = null;\n        }\n        this._cachedMinDiff = minDiff;\n\n        return this._cachedMinDiff;\n    }\n\n    /**\n     * Returns the format specified in the input schema while creating field.\n     *\n     * @public\n     * @return {string} Returns the datetime format.\n     */\n    format () {\n        return this.partialField.schema.format;\n    }\n\n    /**\n     * Returns the formatted version of the underlying field data.\n     *\n     * @public\n     * @override\n     * @return {Array} Returns the formatted data.\n     */\n    formattedData () {\n        const data = [];\n        rowDiffsetIterator(this.rowDiffset, (i) => {\n            const datum = this.partialField.data[i];\n            if (datum instanceof InvalidAwareTypes) {\n                data.push(datum);\n            } else {\n                data.push(DateTimeFormatter.formatAs(datum, this.format()));\n            }\n        });\n        return data;\n    }\n}\n\n","import { FieldType, FilteringMode, DimensionSubtype, MeasureSubtype, DataFormat } from './enums';\nimport fieldStore from './field-store';\nimport Value from './value';\nimport {\n    rowDiffsetIterator\n} from './operator';\nimport { DM_DERIVATIVES, LOGICAL_OPERATORS } from './constants';\nimport { createFields, createUnitFieldFromPartial } from './field-creator';\nimport defaultConfig from './default-config';\nimport * as converter from './converter';\nimport { extend2, detectDataFormat } from './utils';\n\n/**\n * Prepares the selection data.\n */\nfunction prepareSelectionData (fields, i) {\n    const resp = {};\n    for (let field of fields) {\n        resp[field.name()] = new Value(field.partialField.data[i], field);\n    }\n    return resp;\n}\n\nexport function prepareJoinData (fields) {\n    const resp = {};\n    Object.keys(fields).forEach((key) => { resp[key] = new Value(fields[key], key); });\n    return resp;\n}\n\nexport const updateFields = ([rowDiffset, colIdentifier], partialFieldspace, fieldStoreName) => {\n    let collID = colIdentifier.length ? colIdentifier.split(',') : [];\n    let partialFieldMap = partialFieldspace.fieldsObj();\n    let newFields = collID.map(coll => createUnitFieldFromPartial(partialFieldMap[coll].partialField, rowDiffset));\n    return fieldStore.createNamespace(newFields, fieldStoreName);\n};\n\nexport const persistCurrentDerivation = (model, operation, config = {}, criteriaFn) => {\n    if (operation === DM_DERIVATIVES.COMPOSE) {\n        model._derivation.length = 0;\n        model._derivation.push(...criteriaFn);\n    } else {\n        model._derivation.push({\n            op: operation,\n            meta: config,\n            criteria: criteriaFn\n        });\n    }\n};\n\nexport const persistAncestorDerivation = (sourceDm, newDm) => {\n    newDm._ancestorDerivation.push(...sourceDm._ancestorDerivation, ...sourceDm._derivation);\n};\n\nexport const persistDerivations = (sourceDm, model, operation, config = {}, criteriaFn) => {\n    persistCurrentDerivation(model, operation, config, criteriaFn);\n    persistAncestorDerivation(sourceDm, model);\n};\n\nconst generateRowDiffset = (rowDiffset, i, lastInsertedValue) => {\n    if (lastInsertedValue !== -1 && i === (lastInsertedValue + 1)) {\n        const li = rowDiffset.length - 1;\n        rowDiffset[li] = `${rowDiffset[li].split('-')[0]}-${i}`;\n    } else {\n        rowDiffset.push(`${i}`);\n    }\n};\n\nexport const selectHelper = (rowDiffset, fields, selectFn, config, sourceDm) => {\n    let newRowDiffSet = [];\n    const rejRowDiffSet = [];\n    let lastInsertedValue = -1;\n    let lastInsertedValueRej = -1;\n    let { mode } = config;\n    let cachedStore = {};\n    let cloneProvider = () => sourceDm.detachedRoot();\n    const selectorHelperFn = index => selectFn(\n        fields[index],\n        index,\n        cloneProvider,\n        cachedStore\n    );\n\n    const checker = mode === FilteringMode.INVERSE ? index => !selectorHelperFn(index) :\n        index => selectorHelperFn(index);\n\n    const passFn = (i) => {\n        if (checker(i)) {\n            generateRowDiffset(newRowDiffSet, i, lastInsertedValue);\n            lastInsertedValue = i;\n            return true;\n        }\n        return false;\n    };\n\n    if (mode === FilteringMode.ALL) {\n        rowDiffsetIterator(rowDiffset, (i) => {\n            if (!passFn(i)) {\n                generateRowDiffset(rejRowDiffSet, i, lastInsertedValueRej);\n                lastInsertedValueRej = i;\n            }\n        });\n        return [newRowDiffSet.join(','), rejRowDiffSet.join(',')];\n    }\n\n    rowDiffsetIterator(rowDiffset, passFn);\n    return [newRowDiffSet.join(',')];\n};\n\nexport const cloneWithAllFields = (model) => {\n    const clonedDm = model.clone(false);\n    const partialFieldspace = model.getPartialFieldspace();\n    clonedDm._colIdentifier = partialFieldspace.fields.map(f => f.name()).join(',');\n\n    // flush out cached namespace values on addition of new fields\n    partialFieldspace._cachedFieldsObj = null;\n    partialFieldspace._cachedDimension = null;\n    partialFieldspace._cachedMeasure = null;\n    clonedDm.__calculateFieldspace().calculateFieldsConfig();\n\n    return clonedDm;\n};\n\nconst getKey = (arr, data, fn) => {\n    let key = fn(arr, data, 0);\n    for (let i = 1, len = arr.length; i < len; i++) {\n        key = `${key},${fn(arr, data, i)}`;\n    }\n    return key;\n};\n\nexport const filterPropagationModel = (model, propModels, config = {}) => {\n    let fns = [];\n    const operation = config.operation || LOGICAL_OPERATORS.AND;\n    const filterByMeasure = config.filterByMeasure || false;\n    const modelFieldsConfig = model.getFieldsConfig();\n\n    if (!propModels.length) {\n        fns = [() => false];\n    } else {\n        fns = propModels.map(propModel => ((dataModel) => {\n            let keyFn;\n            const dataObj = dataModel.getData();\n            const fieldsConfig = dataModel.getFieldsConfig();\n            const dimensions = Object.keys(dataModel.getFieldspace().getDimension())\n                .filter(d => d in modelFieldsConfig);\n            const indices = dimensions.map(d =>\n                fieldsConfig[d].index);\n            const measures = Object.keys(dataModel.getFieldspace().getMeasure())\n                .filter(d => d in modelFieldsConfig);\n            const fieldsSpace = dataModel.getFieldspace().fieldsObj();\n            const data = dataObj.data;\n            const domain = measures.reduce((acc, v) => {\n                acc[v] = fieldsSpace[v].domain();\n                return acc;\n            }, {});\n            const valuesMap = {};\n\n            keyFn = (arr, row, idx) => row[arr[idx]];\n            data.forEach((row) => {\n                const key = getKey(indices, row, keyFn);\n                valuesMap[key] = 1;\n            });\n            keyFn = (arr, fields, idx) => fields[arr[idx]].value;\n            return data.length ? (fields) => {\n                const key = getKey(dimensions, fields, keyFn);\n                if (filterByMeasure) {\n                    return measures.every(field => fields[field].value >= domain[field][0] &&\n                        fields[field].value <= domain[field][1]) && valuesMap[key];\n                }\n                return valuesMap[key];\n            } : () => false;\n        })(propModel));\n    }\n\n    let filteredModel;\n    if (operation === LOGICAL_OPERATORS.AND) {\n        filteredModel = cloneWithAllFields(model).select(fields => fns.every(fn => fn(fields)), {\n            saveChild: false\n        });\n    } else {\n        filteredModel = cloneWithAllFields(model).select(fields => fns.some(fn => fn(fields)), {\n            saveChild: false\n        });\n    }\n\n    return filteredModel;\n};\n\nexport const cloneWithSelect = (sourceDm, selectFn, selectConfig, cloneConfig) => {\n    const cloned = sourceDm.clone(cloneConfig.saveChild);\n    const [rowDiffset, rejRowDiffSet] = selectHelper(\n        cloned._rowDiffset,\n        cloned.getPartialFieldspace()._cachedValueObjects,\n        selectFn,\n        selectConfig,\n        sourceDm\n    );\n    cloned._rowDiffset = rowDiffset;\n    cloned.__calculateFieldspace().calculateFieldsConfig();\n    let oDm = cloned;\n    if (selectConfig.mode === FilteringMode.ALL) {\n        const rejCloned = sourceDm.clone(cloneConfig.saveChild);\n        rejCloned._rowDiffset = rejRowDiffSet;\n        rejCloned.__calculateFieldspace().calculateFieldsConfig();\n        persistDerivations(\n            sourceDm,\n            rejCloned,\n            DM_DERIVATIVES.SELECT,\n             { config: selectConfig },\n              selectFn\n        );\n        oDm = [cloned, rejCloned];\n    }\n    persistDerivations(\n        sourceDm,\n        cloned,\n        DM_DERIVATIVES.SELECT,\n         { config: selectConfig },\n          selectFn\n    );\n\n    return oDm;\n};\n\nexport const cloneWithProject = (sourceDm, projField, config, allFields) => {\n    const cloned = sourceDm.clone(config.saveChild);\n    let projectionSet = projField;\n    if (config.mode === FilteringMode.INVERSE) {\n        projectionSet = allFields.filter(fieldName => projField.indexOf(fieldName) === -1);\n    }\n    // cloned._colIdentifier = sourceDm._colIdentifier.split(',')\n    //                         .filter(coll => projectionSet.indexOf(coll) !== -1).join();\n    cloned._colIdentifier = projectionSet.join(',');\n    cloned.__calculateFieldspace().calculateFieldsConfig();\n\n    persistDerivations(\n        sourceDm,\n        cloned,\n        DM_DERIVATIVES.PROJECT,\n        { projField, config, actualProjField: projectionSet },\n        null\n    );\n\n    return cloned;\n};\n\nexport const sanitizeUnitSchema = (unitSchema) => {\n    // Do deep clone of the unit schema as the user might change it later.\n    unitSchema = extend2({}, unitSchema);\n    if (!unitSchema.type) {\n        unitSchema.type = FieldType.DIMENSION;\n    }\n\n    if (!unitSchema.subtype) {\n        switch (unitSchema.type) {\n        case FieldType.MEASURE:\n            unitSchema.subtype = MeasureSubtype.CONTINUOUS;\n            break;\n        default:\n        case FieldType.DIMENSION:\n            unitSchema.subtype = DimensionSubtype.CATEGORICAL;\n            break;\n        }\n    }\n\n    return unitSchema;\n};\n\nexport const validateUnitSchema = (unitSchema) => {\n    const supportedMeasureSubTypes = [MeasureSubtype.CONTINUOUS];\n    const supportedDimSubTypes = [\n        DimensionSubtype.CATEGORICAL,\n        DimensionSubtype.BINNED,\n        DimensionSubtype.TEMPORAL,\n        DimensionSubtype.GEO\n    ];\n    const { type, subtype, name } = unitSchema;\n\n    switch (type) {\n    case FieldType.DIMENSION:\n        if (supportedDimSubTypes.indexOf(subtype) === -1) {\n            throw new Error(`DataModel doesn't support dimension field subtype ${subtype} used for ${name} field`);\n        }\n        break;\n    case FieldType.MEASURE:\n        if (supportedMeasureSubTypes.indexOf(subtype) === -1) {\n            throw new Error(`DataModel doesn't support measure field subtype ${subtype} used for ${name} field`);\n        }\n        break;\n    default:\n        throw new Error(`DataModel doesn't support field type ${type} used for ${name} field`);\n    }\n};\n\nexport const sanitizeAndValidateSchema = schema => schema.map((unitSchema) => {\n    unitSchema = sanitizeUnitSchema(unitSchema);\n    validateUnitSchema(unitSchema);\n    return unitSchema;\n});\n\nexport const resolveFieldName = (schema, dataHeader) => {\n    schema.forEach((unitSchema) => {\n        const fieldNameAs = unitSchema.as;\n        if (!fieldNameAs) { return; }\n\n        const idx = dataHeader.indexOf(unitSchema.name);\n        dataHeader[idx] = fieldNameAs;\n        unitSchema.name = fieldNameAs;\n        delete unitSchema.as;\n    });\n};\n\nexport const updateData = (relation, data, schema, options) => {\n    schema = sanitizeAndValidateSchema(schema);\n    options = Object.assign(Object.assign({}, defaultConfig), options);\n    const converterFn = converter[options.dataFormat];\n\n    if (!(converterFn && typeof converterFn === 'function')) {\n        throw new Error(`No converter function found for ${options.dataFormat} format`);\n    }\n\n    const [header, formattedData] = converterFn(data, options);\n    resolveFieldName(schema, header);\n    const fieldArr = createFields(formattedData, schema, header);\n\n    // This will create a new fieldStore with the fields\n    const nameSpace = fieldStore.createNamespace(fieldArr, options.name);\n    relation._partialFieldspace = nameSpace;\n\n    // If data is provided create the default colIdentifier and rowDiffset\n    relation._rowDiffset = formattedData.length && formattedData[0].length ? `0-${formattedData[0].length - 1}` : '';\n\n    // This stores the value objects which is passed to the filter method when selection operation is done.\n    const valueObjects = [];\n    rowDiffsetIterator(relation._rowDiffset, (i) => {\n        valueObjects[i] = prepareSelectionData(nameSpace.fields, i);\n    });\n    nameSpace._cachedValueObjects = valueObjects;\n\n    relation._colIdentifier = (schema.map(_ => _.name)).join();\n    relation._dataFormat = options.dataFormat === DataFormat.AUTO ? detectDataFormat(data) : options.dataFormat;\n    return relation;\n};\n\nexport const fieldInSchema = (schema, field) => {\n    let i = 0;\n\n    for (; i < schema.length; ++i) {\n        if (field === schema[i].name) {\n            return {\n                type: schema[i].subtype || schema[i].type,\n                index: i\n            };\n        }\n    }\n    return null;\n};\n\n\nexport const getDerivationArguments = (derivation) => {\n    let params = [];\n    let operation;\n    operation = derivation.op;\n    switch (operation) {\n    case DM_DERIVATIVES.SELECT:\n        params = [derivation.criteria];\n        break;\n    case DM_DERIVATIVES.PROJECT:\n        params = [derivation.meta.actualProjField];\n        break;\n    case DM_DERIVATIVES.GROUPBY:\n        operation = 'groupBy';\n        params = [derivation.meta.groupByString.split(','), derivation.criteria];\n        break;\n    default:\n        operation = null;\n    }\n\n    return {\n        operation,\n        params\n    };\n};\n\nconst applyExistingOperationOnModel = (propModel, dataModel) => {\n    const derivations = dataModel.getDerivations();\n    let selectionModel = propModel;\n\n    derivations.forEach((derivation) => {\n        if (!derivation) {\n            return;\n        }\n\n        const { operation, params } = getDerivationArguments(derivation);\n        if (operation) {\n            selectionModel = selectionModel[operation](...params, {\n                saveChild: false\n            });\n        }\n    });\n\n    return selectionModel;\n};\n\nconst getFilteredModel = (propModel, path) => {\n    for (let i = 0, len = path.length; i < len; i++) {\n        const model = path[i];\n        propModel = applyExistingOperationOnModel(propModel, model);\n    }\n    return propModel;\n};\n\nconst propagateIdentifiers = (dataModel, propModel, config = {}, propModelInf = {}) => {\n    const nonTraversingModel = propModelInf.nonTraversingModel;\n    const excludeModels = propModelInf.excludeModels || [];\n\n    if (dataModel === nonTraversingModel) {\n        return;\n    }\n\n    const propagate = excludeModels.length ? excludeModels.indexOf(dataModel) === -1 : true;\n\n    propagate && dataModel.handlePropagation(propModel, config);\n\n    const children = dataModel._children;\n    children.forEach((child) => {\n        const selectionModel = applyExistingOperationOnModel(propModel, child);\n        propagateIdentifiers(child, selectionModel, config, propModelInf);\n    });\n};\n\nexport const getRootGroupByModel = (model) => {\n    while (model._parent && model._derivation.find(d => d.op !== DM_DERIVATIVES.GROUPBY)) {\n        model = model._parent;\n    }\n    return model;\n};\n\nexport const getRootDataModel = (model) => {\n    while (model._parent) {\n        model = model._parent;\n    }\n    return model;\n};\n\nexport const getPathToRootModel = (model, path = []) => {\n    while (model._parent) {\n        path.push(model);\n        model = model._parent;\n    }\n    return path;\n};\n\nexport const propagateToAllDataModels = (identifiers, rootModels, propagationInf, config) => {\n    let criteria;\n    let propModel;\n    const { propagationNameSpace, propagateToSource } = propagationInf;\n    const propagationSourceId = propagationInf.sourceId;\n    const propagateInterpolatedValues = config.propagateInterpolatedValues;\n    const filterFn = (entry) => {\n        const filter = config.filterFn || (() => true);\n        return filter(entry, config);\n    };\n\n    let criterias = [];\n\n    if (identifiers === null && config.persistent !== true) {\n        criterias = [{\n            criteria: []\n        }];\n    } else {\n        let actionCriterias = Object.values(propagationNameSpace.mutableActions);\n        if (propagateToSource !== false) {\n            actionCriterias = actionCriterias.filter(d => d.config.sourceId !== propagationSourceId);\n        }\n\n        const filteredCriteria = actionCriterias.filter(filterFn).map(action => action.config.criteria);\n\n        const excludeModels = [];\n\n        if (propagateToSource !== false) {\n            const sourceActionCriterias = Object.values(propagationNameSpace.mutableActions);\n\n            sourceActionCriterias.forEach((actionInf) => {\n                const actionConf = actionInf.config;\n                if (actionConf.applyOnSource === false && actionConf.action === config.action &&\n                        actionConf.sourceId !== propagationSourceId) {\n                    excludeModels.push(actionInf.model);\n                    criteria = sourceActionCriterias.filter(d => d !== actionInf).map(d => d.config.criteria);\n                    criteria.length && criterias.push({\n                        criteria,\n                        models: actionInf.model,\n                        path: getPathToRootModel(actionInf.model)\n                    });\n                }\n            });\n        }\n\n\n        criteria = [].concat(...[...filteredCriteria, identifiers]).filter(d => d !== null);\n        criterias.push({\n            criteria,\n            excludeModels: [...excludeModels, ...config.excludeModels || []]\n        });\n    }\n\n    const rootModel = rootModels.model;\n\n    const propConfig = Object.assign({\n        sourceIdentifiers: identifiers,\n        propagationSourceId\n    }, config);\n\n    const rootGroupByModel = rootModels.groupByModel;\n    if (propagateInterpolatedValues && rootGroupByModel) {\n        propModel = filterPropagationModel(rootGroupByModel, criteria, {\n            filterByMeasure: propagateInterpolatedValues\n        });\n        propagateIdentifiers(rootGroupByModel, propModel, propConfig);\n    }\n\n    criterias.forEach((inf) => {\n        const propagationModel = filterPropagationModel(rootModel, inf.criteria);\n        const path = inf.path;\n\n        if (path) {\n            const filteredModel = getFilteredModel(propagationModel, path.reverse());\n            inf.models.handlePropagation(filteredModel, propConfig);\n        } else {\n            propagateIdentifiers(rootModel, propagationModel, propConfig, {\n                excludeModels: inf.excludeModels,\n                nonTraversingModel: propagateInterpolatedValues && rootGroupByModel\n            });\n        }\n    });\n};\n\nexport const propagateImmutableActions = (propagationNameSpace, rootModels, propagationInf) => {\n    const immutableActions = propagationNameSpace.immutableActions;\n\n    for (const action in immutableActions) {\n        const actionInf = immutableActions[action];\n        const actionConf = actionInf.config;\n        const propagationSourceId = propagationInf.config.sourceId;\n        const filterImmutableAction = propagationInf.propConfig.filterImmutableAction ?\n            propagationInf.propConfig.filterImmutableAction(actionConf, propagationInf.config) : true;\n        if (actionConf.sourceId !== propagationSourceId && filterImmutableAction) {\n            const criteriaModel = actionConf.criteria;\n            propagateToAllDataModels(criteriaModel, rootModels, {\n                propagationNameSpace,\n                propagateToSource: false,\n                sourceId: propagationSourceId\n            }, actionConf);\n        }\n    }\n};\n\nexport const addToPropNamespace = (propagationNameSpace, config = {}, model) => {\n    let sourceNamespace;\n    const isMutableAction = config.isMutableAction;\n    const criteria = config.criteria;\n    const key = `${config.action}-${config.sourceId}`;\n\n    if (isMutableAction) {\n        sourceNamespace = propagationNameSpace.mutableActions;\n    } else {\n        sourceNamespace = propagationNameSpace.immutableActions;\n    }\n\n    if (criteria === null) {\n        delete sourceNamespace[key];\n    } else {\n        sourceNamespace[key] = {\n            model,\n            config\n        };\n    }\n\n    return this;\n};\n","const DataModel = require('./export');\n\nmodule.exports = DataModel.default ? DataModel.default : DataModel;\n","/**\n * A parser to parser null, undefined, invalid and NIL values.\n *\n * @public\n * @class\n */\nclass InvalidAwareTypes {\n    /**\n     * Static method which gets/sets the invalid value registry.\n     *\n     * @public\n     * @param {Object} config - The custom configuration supplied by user.\n     * @return {Object} Returns the invalid values registry.\n     */\n    static invalidAwareVals (config) {\n        if (!config) {\n            return InvalidAwareTypes._invalidAwareValsMap;\n        }\n        return Object.assign(InvalidAwareTypes._invalidAwareValsMap, config);\n    }\n\n    /**\n     * Initialize a new instance.\n     *\n     * @public\n     * @param {string} value - The value of the invalid data type.\n     */\n    constructor (value) {\n        this._value = value;\n    }\n\n    /**\n     * Returns the current value of the instance.\n     *\n     * @public\n     * @return {string} Returns the value of the invalid data type.\n     */\n    value () {\n        return this._value;\n    }\n\n    /**\n     * Returns the current value of the instance in string format.\n     *\n     * @public\n     * @return {string} Returns the value of the invalid data type.\n     */\n    toString () {\n        return String(this._value);\n    }\n\n    static isInvalid(val) {\n        return (val instanceof InvalidAwareTypes) || !!InvalidAwareTypes.invalidAwareVals()[val];\n    }\n\n    static getInvalidType(val) {\n        return val instanceof InvalidAwareTypes ? val : InvalidAwareTypes.invalidAwareVals()[val];\n    }\n}\n\n/**\n * Enums for Invalid types.\n */\nInvalidAwareTypes.NULL = new InvalidAwareTypes('null');\nInvalidAwareTypes.NA = new InvalidAwareTypes('na');\nInvalidAwareTypes.NIL = new InvalidAwareTypes('nil');\n\n/**\n * Default Registry for mapping the invalid values.\n *\n * @private\n */\nInvalidAwareTypes._invalidAwareValsMap = {\n    invalid: InvalidAwareTypes.NA,\n    nil: InvalidAwareTypes.NIL,\n    null: InvalidAwareTypes.NULL,\n    undefined: InvalidAwareTypes.NA\n};\n\nexport default InvalidAwareTypes;\n","import { rowDiffsetIterator } from './row-diffset-iterator';\nimport InvalidAwareTypes from '../invalid-aware-types';\n\nconst generateBuckets = (binSize, start, end) => {\n    const buckets = [];\n    let next = start;\n\n    while (next < end) {\n        buckets.push(next);\n        next += binSize;\n    }\n    buckets.push(next);\n\n    return buckets;\n};\n\nconst findBucketRange = (bucketRanges, value) => {\n    let leftIdx = 0;\n    let rightIdx = bucketRanges.length - 1;\n    let midIdx;\n    let range;\n\n    // Here use binary search as the bucketRanges is a sorted array\n    while (leftIdx <= rightIdx) {\n        midIdx = leftIdx + Math.floor((rightIdx - leftIdx) / 2);\n        range = bucketRanges[midIdx];\n\n        if (value >= range.start && value < range.end) {\n            return range;\n        } else if (value >= range.end) {\n            leftIdx = midIdx + 1;\n        } else if (value < range.start) {\n            rightIdx = midIdx - 1;\n        }\n    }\n\n    return null;\n};\n\n /**\n  * Creates the bin data from input measure field and supplied configs.\n  *\n  * @param {Measure} measureField - The Measure field instance.\n  * @param {string} rowDiffset - The datamodel rowDiffset values.\n  * @param {Object} config - The config object.\n  * @return {Object} Returns the binned data and the corresponding bins.\n  */\nexport function createBinnedFieldData (measureField, rowDiffset, config) {\n    let { buckets, binsCount, binSize, start, end } = config;\n    const [dMin, dMax] = measureField.domain();\n\n    if (!buckets) {\n        start = (start !== 0 && (!start || start > dMin)) ? dMin : start;\n        end = (end !== 0 && (!end || end < dMax)) ? (dMax + 1) : end;\n\n        if (binsCount) {\n            binSize = Math.ceil(Math.abs(end - start) / binsCount);\n        }\n\n        buckets = generateBuckets(binSize, start, end);\n    }\n\n    if (buckets[0] > dMin) {\n        buckets.unshift(dMin);\n    }\n    if (buckets[buckets.length - 1] <= dMax) {\n        buckets.push(dMax + 1);\n    }\n\n    const bucketRanges = [];\n    for (let i = 0; i < buckets.length - 1; i++) {\n        bucketRanges.push({\n            start: buckets[i],\n            end: buckets[i + 1]\n        });\n    }\n\n    const binnedData = [];\n    rowDiffsetIterator(rowDiffset, (i) => {\n        const datum = measureField.partialField.data[i];\n        if (datum instanceof InvalidAwareTypes) {\n            binnedData.push(datum);\n            return;\n        }\n\n        const range = findBucketRange(bucketRanges, datum);\n        binnedData.push(`${range.start}-${range.end}`);\n    });\n\n    return { binnedData, bins: buckets };\n}\n","import { persistDerivations } from '../helper';\nimport { DM_DERIVATIVES } from '../constants';\n\n/**\n * DataModel's opearators are exposed as composable functional operators as well as chainable operators. Chainable\n * operators are called on the instances of {@link Datamodel} and {@link Relation} class.\n *\n * Those same operators can be used as composable operators from `DataModel.Operators` namespace.\n *\n * All these operators have similar behaviour. All these operators when called with the argument returns a function\n * which expects a DataModel instance.\n *\n * @public\n * @module Operators\n * @namespace DataModel\n */\n\n/**\n * This is functional version of selection operator. {@link link_to_selection | Selection} is a row filtering operation.\n * It takes {@link SelectionPredicate | predicate} for filtering criteria and returns a function.\n * The returned function is called with the DataModel instance on which the action needs to be performed.\n *\n * {@link SelectionPredicate} is a function which returns a boolean value. For selection opearation the selection\n * function is called for each row of DataModel instance with the current row passed as argument.\n *\n * After executing {@link SelectionPredicate} the rows are labeled as either an entry of selection set or an entry\n * of rejection set.\n *\n * {@link FilteringMode} operates on the selection and rejection set to determine which one would reflect in the\n * resulatant datamodel.\n *\n * @warning\n * [Warn] Selection and rejection set is only a logical idea for concept explanation purpose.\n *\n * @error\n * [Error] `FilteringMode.ALL` is not a valid working mode for functional version of `select`. Its only avialable on the\n * chained version.\n *\n * @example\n * const select = DataModel.Operators.select;\n * usaCarsFn = select(fields => fields.Origin.value === 'USA');\n * usaCarsDm = usaCarsFn(dm);\n * console.log(usaCarsDm);\n *\n * @public\n * @namespace DataModel\n * @module Operators\n *\n * @param {SelectionPredicate} selectFn - Predicate funciton which is called for each row with the current row\n *      ```\n *          function (row, i)  { ... }\n *      ```\n * @param {Object} [config] - The configuration object to control the inclusion exclusion of a row in resultant\n *      DataModel instance\n * @param {FilteringMode} [config.mode=FilteringMode.NORMAL] - The mode of the selection\n *\n * @return {PreparatorFunction} Function which expects an instance of DataModel on which the operator needs to be\n *      applied.\n */\nexport const select = (...args) => dm => dm.select(...args);\n\n/**\n * This is functional version of projection operator. {@link link_to_projection | Projection} is a column filtering\n * operation.It expects list of fields name and either include those or exclude those based on {@link FilteringMode} on\n * the  resultant variable.It returns a function which is called with the DataModel instance on which the action needs\n * to be performed.\n *\n * Projection expects array of fields name based on which it creates the selection and rejection set. All the field\n * whose name is present in array goes in selection set and rest of the fields goes in rejection set.\n *\n * {@link FilteringMode} operates on the selection and rejection set to determine which one would reflect in the\n * resulatant datamodel.\n *\n * @warning\n * Selection and rejection set is only a logical idea for concept explanation purpose.\n *\n * @error\n * `FilteringMode.ALL` is not a valid working mode for functional version of `select`. Its only avialable on the\n * chained version.\n *\n * @public\n * @namespace DataModel\n * @module Operators\n *\n * @param {Array.<string | Regexp>} projField - An array of column names in string or regular expression.\n * @param {Object} [config] - An optional config to control the creation of new DataModel\n * @param {FilteringMode} [config.mode=FilteringMode.NORMAL] - Mode of the projection\n *\n * @return {PreparatorFunction} Function which expects an instance of DataModel on which the operator needs to be\n *      applied.\n */\nexport const project = (...args) => dm => dm.project(...args);\n\n/**\n * This is functional version of binnig operator. Binning happens on a measure field based on a binning configuration.\n * Binning in DataModel does not aggregate the number of rows present in DataModel instance after binning, it just adds\n * a new field with the binned value. Refer binning {@link example_of_binning | example} to have a intuition of what\n * binning is and the use case.\n *\n * Binning can be configured by\n * - providing custom bin configuration with non uniform buckets\n * - providing bin count\n * - providing each bin size\n *\n * When custom buckets are provided as part of binning configuration\n * @example\n *  // DataModel already prepared and assigned to dm vairable\n *  const buckets = {\n *      start: 30\n *      stops: [80, 100, 110]\n *  };\n *  const config = { buckets, name: 'binnedHP' }\n *  const binFn = bin('horsepower', config);\n *  const binnedDm = binFn(dm);\n *\n * @text\n * When `binCount` is defined as part of binning configuration\n * @example\n *  // DataModel already prepared and assigned to dm vairable\n *  const config = { binCount: 5, name: 'binnedHP' }\n *  const binFn = bin('horsepower', config);\n *  const binnedDm = binFn(Dm);\n *\n * @text\n * When `binSize` is defined as part of binning configuration\n * @example\n *  // DataModel already prepared and assigned to dm vairable\n *  const config = { binSize: 200, name: 'binnedHorsepower' }\n *  const binnedDm = dataModel.bin('horsepower', config);\n *  const binnedDm = binFn(Dm);\n *\n * @public\n * @namespace DataModel\n * @module Operators\n *\n * @param {String} name Name of measure which will be used to create bin\n * @param {Object} config Config required for bin creation\n * @param {Array.<Number>} config.bucketObj.stops Defination of bucket ranges. Two subsequent number from arrays\n *      are picked and a range is created. The first number from range is inclusive and the second number from range\n *      is exclusive.\n * @param {Number} [config.bucketObj.startAt] Force the start of the bin from a particular number.\n *      If not mentioned, the start of the bin or the lower domain of the data if stops is not mentioned, else its\n *      the first value of the stop.\n * @param {Number} config.binSize Bucket size for each bin\n * @param {Number} config.binCount Number of bins which will be created\n * @param {String} config.name Name of the new binned field to be created\n *\n * @return {PreparatorFunction} Function which expects an instance of DataModel on which the operator needs to be\n *      applied.\n */\nexport const bin = (...args) => dm => dm.bin(...args);\n\n/**\n * This is functional version of `groupBy` operator.Groups the data using particular dimensions and by reducing\n * measures. It expects a list of dimensions using which it projects the datamodel and perform aggregations to reduce\n * the duplicate tuples. Refer this {@link link_to_one_example_with_group_by | document} to know the intuition behind\n * groupBy.\n *\n * DataModel by default provides definition of few {@link reducer | Reducers}.\n * {@link ReducerStore | User defined reducers} can also be registered.\n *\n * This is the chained implementation of `groupBy`.\n * `groupBy` also supports {@link link_to_compose_groupBy | composability}\n *\n * @example\n * const groupBy = DataModel.Operators.groupBy;\n * const groupedFn = groupBy(['Year'], { horsepower: 'max' } );\n * groupedDM = groupByFn(dm);\n *\n * @public\n *\n * @param {Array.<string>} fieldsArr - Array containing the name of dimensions\n * @param {Object} [reducers={}] - A map whose key is the variable name and value is the name of the reducer. If its\n *      not passed, or any variable is ommitted from the object, default aggregation function is used from the\n *      schema of the variable.\n *\n * @return {PreparatorFunction} Function which expects an instance of DataModel on which the operator needs to be\n *      applied.\n */\nexport const groupBy = (...args) => dm => dm.groupBy(...args);\n\n/**\n * Enables composing operators to run multiple operations and save group of operataion as named opration on a DataModel.\n * The resulting DataModel will be the result of all the operation provided. The operations provided will be executed in\n * a serial manner ie. result of one operation will be the input for the next operations (like pipe operator in unix).\n *\n * Suported operations in compose are\n * - `select`\n * - `project`\n * - `groupBy`\n * - `bin`\n * - `compose`\n *\n * @example\n * const compose = DataModel.Operators.compose;\n * const select = DataModel.Operators.select;\n * const project = DataModel.Operators.project;\n *\n * let composedFn = compose(\n *    select(fields => fields.netprofit.value <= 15),\n *    project(['netprofit', 'netsales']));\n *\n * const dataModel = new DataModel(data1, schema1);\n *\n * let composedDm = composedFn(dataModel);\n *\n * @public\n * @namespace DataModel\n * @module Operators\n *\n * @param {Array.<Operators>} operators: An array of operation that will be applied on the\n * datatable.\n *\n * @returns {DataModel} Instance of resultant DataModel\n */\nexport const compose = (...operations) =>\n    (dm, config = { saveChild: true }) => {\n        let currentDM = dm;\n        let firstChild;\n        const derivations = [];\n\n        operations.forEach((operation) => {\n            currentDM = operation(currentDM);\n            derivations.push(...currentDM._derivation);\n            if (!firstChild) {\n                firstChild = currentDM;\n            }\n        });\n\n        if (firstChild && firstChild !== currentDM) {\n            firstChild.dispose();\n        }\n\n        // reset all ancestorDerivation saved in-between compose\n        currentDM._ancestorDerivation = [];\n        persistDerivations(\n            dm,\n            currentDM,\n            DM_DERIVATIVES.COMPOSE,\n            null,\n            derivations\n        );\n\n        if (config.saveChild) {\n            currentDM.setParent(dm);\n        } else {\n            currentDM.setParent(null);\n        }\n\n        return currentDM;\n    };\n","import DataModel from '../datamodel';\nimport { extend2 } from '../utils';\nimport { getCommonSchema } from './get-common-schema';\nimport { rowDiffsetIterator } from './row-diffset-iterator';\nimport { JOINS } from '../constants';\nimport { prepareJoinData } from '../helper';\n/**\n * Default filter function for crossProduct.\n *\n * @return {boolean} Always returns true.\n */\nfunction defaultFilterFn() { return true; }\n\n/**\n * Implementation of cross product operation between two DataModel instances.\n * It internally creates the data and schema for the new DataModel.\n *\n * @param {DataModel} dataModel1 - The left DataModel instance.\n * @param {DataModel} dataModel2 - The right DataModel instance.\n * @param {Function} filterFn - The filter function which is used to filter the tuples.\n * @param {boolean} [replaceCommonSchema=false] - The flag if the common name schema should be there.\n * @return {DataModel} Returns The newly created DataModel instance from the crossProduct operation.\n */\nexport function crossProduct (dm1, dm2, filterFn, replaceCommonSchema = false, jointype = JOINS.CROSS) {\n    const schema = [];\n    const data = [];\n    const applicableFilterFn = filterFn || defaultFilterFn;\n    const dm1FieldStore = dm1.getFieldspace();\n    const dm2FieldStore = dm2.getFieldspace();\n    const dm1FieldStoreName = dm1FieldStore.name;\n    const dm2FieldStoreName = dm2FieldStore.name;\n    const name = `${dm1FieldStore.name}.${dm2FieldStore.name}`;\n    const commonSchemaList = getCommonSchema(dm1FieldStore, dm2FieldStore);\n\n    if (dm1FieldStoreName === dm2FieldStoreName) {\n        throw new Error('DataModels must have different alias names');\n    }\n    // Here prepare the schema\n    dm1FieldStore.fields.forEach((field) => {\n        const tmpSchema = extend2({}, field.schema());\n        if (commonSchemaList.indexOf(tmpSchema.name) !== -1 && !replaceCommonSchema) {\n            tmpSchema.name = `${dm1FieldStore.name}.${tmpSchema.name}`;\n        }\n        schema.push(tmpSchema);\n    });\n    dm2FieldStore.fields.forEach((field) => {\n        const tmpSchema = extend2({}, field.schema());\n        if (commonSchemaList.indexOf(tmpSchema.name) !== -1) {\n            if (!replaceCommonSchema) {\n                tmpSchema.name = `${dm2FieldStore.name}.${tmpSchema.name}`;\n                schema.push(tmpSchema);\n            }\n        } else {\n            schema.push(tmpSchema);\n        }\n    });\n\n    // Here prepare Data\n    rowDiffsetIterator(dm1._rowDiffset, (i) => {\n        let rowAdded = false;\n        let rowPosition;\n        rowDiffsetIterator(dm2._rowDiffset, (ii) => {\n            const tuple = [];\n            const userArg = {};\n            userArg[dm1FieldStoreName] = {};\n            userArg[dm2FieldStoreName] = {};\n            dm1FieldStore.fields.forEach((field) => {\n                tuple.push(field.partialField.data[i]);\n                userArg[dm1FieldStoreName][field.name()] = field.partialField.data[i];\n            });\n            dm2FieldStore.fields.forEach((field) => {\n                if (!(commonSchemaList.indexOf(field.schema().name) !== -1 && replaceCommonSchema)) {\n                    tuple.push(field.partialField.data[ii]);\n                }\n                userArg[dm2FieldStoreName][field.name()] = field.partialField.data[ii];\n            });\n\n            let cachedStore = {};\n            let cloneProvider1 = () => dm1.detachedRoot();\n            let cloneProvider2 = () => dm2.detachedRoot();\n\n            const dm1Fields = prepareJoinData(userArg[dm1FieldStoreName]);\n            const dm2Fields = prepareJoinData(userArg[dm2FieldStoreName]);\n            if (applicableFilterFn(dm1Fields, dm2Fields, cloneProvider1, cloneProvider2, cachedStore)) {\n                const tupleObj = {};\n                tuple.forEach((cellVal, iii) => {\n                    tupleObj[schema[iii].name] = cellVal;\n                });\n                if (rowAdded && JOINS.CROSS !== jointype) {\n                    data[rowPosition] = tupleObj;\n                }\n                else {\n                    data.push(tupleObj);\n                    rowAdded = true;\n                    rowPosition = i;\n                }\n            } else if ((jointype === JOINS.LEFTOUTER || jointype === JOINS.RIGHTOUTER) && !rowAdded) {\n                const tupleObj = {};\n                let len = dm1FieldStore.fields.length - 1;\n                tuple.forEach((cellVal, iii) => {\n                    if (iii <= len) {\n                        tupleObj[schema[iii].name] = cellVal;\n                    }\n                    else {\n                        tupleObj[schema[iii].name] = null;\n                    }\n                });\n                rowAdded = true;\n                rowPosition = i;\n                data.push(tupleObj);\n            }\n        });\n    });\n\n    return new DataModel(data, schema, { name });\n}\n","import { DimensionSubtype, MeasureSubtype } from '../enums';\nimport { rowDiffsetIterator } from './row-diffset-iterator';\nimport { mergeSort } from './merge-sort';\nimport { fieldInSchema } from '../helper';\nimport { isCallable, isArray, } from '../utils';\n/**\n * Generates the sorting functions to sort the data of a DataModel instance\n * according to the input data type.\n *\n * @param {string} dataType - The data type e.g. 'measure', 'datetime' etc.\n * @param {string} sortType - The sorting order i.e. 'asc' or 'desc'.\n * @param {integer} index - The index of the data which will be sorted.\n * @return {Function} Returns the the sorting function.\n */\nfunction getSortFn (dataType, sortType, index) {\n    let retFunc;\n    switch (dataType) {\n    case MeasureSubtype.CONTINUOUS:\n    case DimensionSubtype.TEMPORAL:\n        if (sortType === 'desc') {\n            retFunc = (a, b) => b[index] - a[index];\n        } else {\n            retFunc = (a, b) => a[index] - b[index];\n        }\n        break;\n    default:\n        retFunc = (a, b) => {\n            const a1 = `${a[index]}`;\n            const b1 = `${b[index]}`;\n            if (a1 < b1) {\n                return sortType === 'desc' ? 1 : -1;\n            }\n            if (a1 > b1) {\n                return sortType === 'desc' ? -1 : 1;\n            }\n            return 0;\n        };\n    }\n    return retFunc;\n}\n\n/**\n * Groups the data according to the specified target field.\n *\n * @param {Array} data - The input data array.\n * @param {number} fieldIndex - The target field index within schema array.\n * @return {Array} Returns an array containing the grouped data.\n */\nfunction groupData(data, fieldIndex) {\n    const hashMap = new Map();\n    const groupedData = [];\n\n    data.forEach((datum) => {\n        const fieldVal = datum[fieldIndex];\n        if (hashMap.has(fieldVal)) {\n            groupedData[hashMap.get(fieldVal)][1].push(datum);\n        } else {\n            groupedData.push([fieldVal, [datum]]);\n            hashMap.set(fieldVal, groupedData.length - 1);\n        }\n    });\n\n    return groupedData;\n}\n\n/**\n * Creates the argument value used for sorting function when sort is done\n * with another fields.\n *\n * @param {Array} groupedDatum - The grouped datum for a single dimension field value.\n * @param {Array} targetFields - An array of the sorting fields.\n * @param {Array} targetFieldDetails - An array of the sorting field details in schema.\n * @return {Object} Returns an object containing the value of sorting fields and the target field name.\n */\nfunction createSortingFnArg(groupedDatum, targetFields, targetFieldDetails) {\n    const arg = {\n        label: groupedDatum[0]\n    };\n\n    targetFields.reduce((acc, next, idx) => {\n        acc[next] = groupedDatum[1].map(datum => datum[targetFieldDetails[idx].index]);\n        return acc;\n    }, arg);\n\n    return arg;\n}\n\n/**\n * Sorts the data before return in dataBuilder.\n *\n * @param {Object} dataObj - An object containing the data and schema.\n * @param {Array} sortingDetails - An array containing the sorting configs.\n */\nfunction sortData(dataObj, sortingDetails) {\n    const { data, schema } = dataObj;\n    let fieldName;\n    let sortMeta;\n    let fDetails;\n    let i = sortingDetails.length - 1;\n\n    for (; i >= 0; i--) {\n        fieldName = sortingDetails[i][0];\n        sortMeta = sortingDetails[i][1];\n        fDetails = fieldInSchema(schema, fieldName);\n\n        if (!fDetails) {\n            // eslint-disable-next-line no-continue\n            continue;\n        }\n\n        if (isCallable(sortMeta)) {\n            // eslint-disable-next-line no-loop-func\n            mergeSort(data, (a, b) => sortMeta(a[fDetails.index], b[fDetails.index]));\n        } else if (isArray(sortMeta)) {\n            const groupedData = groupData(data, fDetails.index);\n            const sortingFn = sortMeta[sortMeta.length - 1];\n            const targetFields = sortMeta.slice(0, sortMeta.length - 1);\n            const targetFieldDetails = targetFields.map(f => fieldInSchema(schema, f));\n\n            groupedData.forEach((groupedDatum) => {\n                groupedDatum.push(createSortingFnArg(groupedDatum, targetFields, targetFieldDetails));\n            });\n\n            mergeSort(groupedData, (a, b) => {\n                const m = a[2];\n                const n = b[2];\n                return sortingFn(m, n);\n            });\n\n            // Empty the array\n            data.length = 0;\n            groupedData.forEach((datum) => {\n                data.push(...datum[1]);\n            });\n        } else {\n            sortMeta = String(sortMeta).toLowerCase() === 'desc' ? 'desc' : 'asc';\n            mergeSort(data, getSortFn(fDetails.type, sortMeta, fDetails.index));\n        }\n    }\n\n    dataObj.uids = [];\n    data.forEach((value) => {\n        dataObj.uids.push(value.pop());\n    });\n}\n\n\n/**\n * Builds the actual data array.\n *\n * @param {Array} fieldStore - An array of field.\n * @param {string} rowDiffset - A string consisting of which rows to be included eg. '0-2,4,6';\n * @param {string} colIdentifier - A string consisting of the details of which column\n * to be included eg 'date,sales,profit';\n * @param {Object} sortingDetails - An object containing the sorting details of the DataModel instance.\n * @param {Object} options - The options required to create the type of the data.\n * @return {Object} Returns an object containing the multidimensional array and the relative schema.\n */\nexport function dataBuilder (fieldStore, rowDiffset, colIdentifier, sortingDetails, options) {\n    const defOptions = {\n        addUid: false,\n        columnWise: false\n    };\n    options = Object.assign({}, defOptions, options);\n\n    const retObj = {\n        schema: [],\n        data: [],\n        uids: []\n    };\n    const addUid = options.addUid;\n    const reqSorting = sortingDetails && sortingDetails.length > 0;\n    // It stores the fields according to the colIdentifier argument\n    const tmpDataArr = [];\n    // Stores the fields according to the colIdentifier argument\n    const colIArr = colIdentifier.split(',');\n\n    colIArr.forEach((colName) => {\n        for (let i = 0; i < fieldStore.length; i += 1) {\n            if (fieldStore[i].name() === colName) {\n                tmpDataArr.push(fieldStore[i]);\n                break;\n            }\n        }\n    });\n\n    // Inserts the schema to the schema object\n    tmpDataArr.forEach((field) => {\n        /** @todo Need to use extend2 here otherwise user can overwrite the schema. */\n        retObj.schema.push(field.schema());\n    });\n\n    if (addUid) {\n        retObj.schema.push({\n            name: 'uid',\n            type: 'identifier'\n        });\n    }\n\n    rowDiffsetIterator(rowDiffset, (i) => {\n        retObj.data.push([]);\n        const insertInd = retObj.data.length - 1;\n        let start = 0;\n        tmpDataArr.forEach((field, ii) => {\n            retObj.data[insertInd][ii + start] = field.partialField.data[i];\n        });\n        if (addUid) {\n            retObj.data[insertInd][tmpDataArr.length] = i;\n        }\n        // Creates an array of unique identifiers for each row\n        retObj.uids.push(i);\n\n        // If sorting needed then there is the need to expose the index\n        // mapping from the old index to its new index\n        if (reqSorting) { retObj.data[insertInd].push(i); }\n    });\n\n    // Handles the sort functionality\n    if (reqSorting) {\n        sortData(retObj, sortingDetails);\n    }\n\n    if (options.columnWise) {\n        const tmpData = Array(...Array(retObj.schema.length)).map(() => []);\n        retObj.data.forEach((tuple) => {\n            tuple.forEach((data, i) => {\n                tmpData[i].push(data);\n            });\n        });\n        retObj.data = tmpData;\n    }\n\n    return retObj;\n}\n","import DataModel from '../datamodel';\nimport { extend2 } from '../utils';\nimport { rowDiffsetIterator } from './row-diffset-iterator';\nimport { isArrEqual } from '../utils/helper';\n\n/**\n * Performs the union operation between two dm instances.\n *\n * @todo Fix the conflicts between union and difference terminology here.\n *\n * @param {dm} dm1 - The first dm instance.\n * @param {dm} dm2 - The second dm instance.\n * @return {dm} Returns the newly created dm after union operation.\n */\nexport function difference (dm1, dm2) {\n    const hashTable = {};\n    const schema = [];\n    const schemaNameArr = [];\n    const data = [];\n    const dm1FieldStore = dm1.getFieldspace();\n    const dm2FieldStore = dm2.getFieldspace();\n    const dm1FieldStoreFieldObj = dm1FieldStore.fieldsObj();\n    const dm2FieldStoreFieldObj = dm2FieldStore.fieldsObj();\n    const name = `${dm1FieldStore.name} union ${dm2FieldStore.name}`;\n\n   // For union the columns should match otherwise return a clone of the dm1\n    if (!isArrEqual(dm1._colIdentifier.split(',').sort(), dm2._colIdentifier.split(',').sort())) {\n        return null;\n    }\n\n    // Prepare the schema\n    (dm1._colIdentifier.split(',')).forEach((fieldName) => {\n        const field = dm1FieldStoreFieldObj[fieldName];\n        schema.push(extend2({}, field.schema()));\n        schemaNameArr.push(field.schema().name);\n    });\n\n    /**\n     * The helper function to create the data.\n     *\n     * @param {dm} dm - The dm instance for which the data is inserted.\n     * @param {Object} fieldsObj - The fieldStore object format.\n     * @param {boolean} addData - If true only tuple will be added to the data.\n     */\n    function prepareDataHelper(dm, fieldsObj, addData) {\n        rowDiffsetIterator(dm._rowDiffset, (i) => {\n            const tuple = {};\n            let hashData = '';\n            schemaNameArr.forEach((schemaName) => {\n                const value = fieldsObj[schemaName].partialField.data[i];\n                hashData += `-${value}`;\n                tuple[schemaName] = value;\n            });\n            if (!hashTable[hashData]) {\n                if (addData) { data.push(tuple); }\n                hashTable[hashData] = true;\n            }\n        });\n    }\n\n    // Prepare the data\n    prepareDataHelper(dm2, dm2FieldStoreFieldObj, false);\n    prepareDataHelper(dm1, dm1FieldStoreFieldObj, true);\n\n    return new DataModel(data, schema, { name });\n}\n\n","/**\n * The helper function that returns an array of common schema\n * from two fieldStore instances.\n *\n * @param {FieldStore} fs1 - The first FieldStore instance.\n * @param {FieldStore} fs2 - The second FieldStore instance.\n * @return {Array} An array containing the common schema.\n */\nexport function getCommonSchema (fs1, fs2) {\n    const retArr = [];\n    const fs1Arr = [];\n    fs1.fields.forEach((field) => {\n        fs1Arr.push(field.schema().name);\n    });\n    fs2.fields.forEach((field) => {\n        if (fs1Arr.indexOf(field.schema().name) !== -1) {\n            retArr.push(field.schema().name);\n        }\n    });\n    return retArr;\n}\n","import { isArray } from '../utils';\nimport InvalidAwareTypes from '../invalid-aware-types';\nimport { GROUP_BY_FUNCTIONS } from '../enums';\n\nconst { SUM, AVG, FIRST, LAST, COUNT, STD, MIN, MAX } = GROUP_BY_FUNCTIONS;\n\nfunction getFilteredValues(arr) {\n    return arr.filter(item => !(item instanceof InvalidAwareTypes));\n}\n/**\n * Reducer function that returns the sum of all the values.\n *\n * @public\n * @param  {Array.<number>} arr - The input array.\n * @return {number} Returns the sum of the array.\n */\nfunction sum (arr) {\n    if (isArray(arr) && !(arr[0] instanceof Array)) {\n        const filteredNumber = getFilteredValues(arr);\n        const totalSum = filteredNumber.length ?\n                            filteredNumber.reduce((acc, curr) => acc + curr, 0)\n                            : InvalidAwareTypes.NULL;\n        return totalSum;\n    }\n    return InvalidAwareTypes.NULL;\n}\n\n/**\n * Reducer function that returns the average of all the values.\n *\n * @public\n * @param  {Array.<number>} arr - The input array.\n * @return {number} Returns the mean value of the array.\n */\nfunction avg (arr) {\n    if (isArray(arr) && !(arr[0] instanceof Array)) {\n        const totalSum = sum(arr);\n        const len = arr.length || 1;\n        return (Number.isNaN(totalSum) || totalSum instanceof InvalidAwareTypes) ?\n                 InvalidAwareTypes.NULL : totalSum / len;\n    }\n    return InvalidAwareTypes.NULL;\n}\n\n/**\n * Reducer function that gives the min value amongst all the values.\n *\n * @public\n * @param  {Array.<number>} arr - The input array.\n * @return {number} Returns the minimum value of the array.\n */\nfunction min (arr) {\n    if (isArray(arr) && !(arr[0] instanceof Array)) {\n        // Filter out undefined, null and NaN values\n        const filteredValues = getFilteredValues(arr);\n\n        return (filteredValues.length) ? Math.min(...filteredValues) : InvalidAwareTypes.NULL;\n    }\n    return InvalidAwareTypes.NULL;\n}\n\n/**\n * Reducer function that gives the max value amongst all the values.\n *\n * @public\n * @param  {Array.<number>} arr - The input array.\n * @return {number} Returns the maximum value of the array.\n */\nfunction max (arr) {\n    if (isArray(arr) && !(arr[0] instanceof Array)) {\n        // Filter out undefined, null and NaN values\n        const filteredValues = getFilteredValues(arr);\n\n        return (filteredValues.length) ? Math.max(...filteredValues) : InvalidAwareTypes.NULL;\n    }\n    return InvalidAwareTypes.NULL;\n}\n\n/**\n * Reducer function that gives the first value of the array.\n *\n * @public\n * @param  {Array} arr - The input array.\n * @return {number} Returns the first value of the array.\n */\nfunction first (arr) {\n    return arr[0];\n}\n\n/**\n * Reducer function that gives the last value of the array.\n *\n * @public\n * @param  {Array} arr - The input array.\n * @return {number} Returns the last value of the array.\n */\nfunction last (arr) {\n    return arr[arr.length - 1];\n}\n\n/**\n * Reducer function that gives the count value of the array.\n *\n * @public\n * @param  {Array} arr - The input array.\n * @return {number} Returns the length of the array.\n */\nfunction count (arr) {\n    if (isArray(arr)) {\n        return arr.length;\n    }\n    return InvalidAwareTypes.NULL;\n}\n\n/**\n * Calculates the variance of the input array.\n *\n * @param  {Array.<number>} arr - The input array.\n * @return {number} Returns the variance of the input array.\n */\nfunction variance (arr) {\n    let mean = avg(arr);\n    return avg(arr.map(num => (num - mean) ** 2));\n}\n\n/**\n * Calculates the square root of the variance of the input array.\n *\n * @public\n * @param  {Array.<number>} arr - The input array.\n * @return {number} Returns the square root of the variance.\n */\nfunction std (arr) {\n    return Math.sqrt(variance(arr));\n}\n\n\nconst fnList = {\n    [SUM]: sum,\n    [AVG]: avg,\n    [MIN]: min,\n    [MAX]: max,\n    [FIRST]: first,\n    [LAST]: last,\n    [COUNT]: count,\n    [STD]: std\n};\n\nconst defaultReducerName = SUM;\n\nexport {\n    defaultReducerName,\n    sum as defReducer,\n    fnList,\n};\n","import { extend2 } from '../utils';\nimport { rowDiffsetIterator } from './row-diffset-iterator';\nimport DataModel from '../export';\nimport reducerStore from '../utils/reducer-store';\nimport { defaultReducerName } from './group-by-function';\nimport { FieldType } from '../enums';\n\n/**\n * This function sanitize the user given field and return a common Array structure field\n * list\n * @param  {DataModel} dataModel the dataModel operating on\n * @param  {Array} fieldArr  user input of field Array\n * @return {Array}           arrays of field name\n */\nfunction getFieldArr (dataModel, fieldArr) {\n    const retArr = [];\n    const fieldStore = dataModel.getFieldspace();\n    const dimensions = fieldStore.getDimension();\n\n    Object.entries(dimensions).forEach(([key]) => {\n        if (fieldArr && fieldArr.length) {\n            if (fieldArr.indexOf(key) !== -1) {\n                retArr.push(key);\n            }\n        } else {\n            retArr.push(key);\n        }\n    });\n\n    return retArr;\n}\n\n/**\n * This sanitize the reducer provide by the user and create a common type of object.\n * user can give function Also\n * @param  {DataModel} dataModel     dataModel to worked on\n * @param  {Object|function} [reducers={}] reducer provided by the users\n * @return {Object}               object containing reducer function for every measure\n */\nfunction getReducerObj (dataModel, reducers = {}) {\n    const retObj = {};\n    const fieldStore = dataModel.getFieldspace();\n    const measures = fieldStore.getMeasure();\n    const defReducer = reducerStore.defaultReducer();\n\n    Object.keys(measures).forEach((measureName) => {\n        if (typeof reducers[measureName] !== 'string') {\n            reducers[measureName] = measures[measureName].defAggFn();\n        }\n        const reducerFn = reducerStore.resolve(reducers[measureName]);\n        if (reducerFn) {\n            retObj[measureName] = reducerFn;\n        } else {\n            retObj[measureName] = defReducer;\n            reducers[measureName] = defaultReducerName;\n        }\n    });\n    return retObj;\n}\n\n/**\n * main function which perform the group-by operations which reduce the measures value is the\n * fields are common according to the reducer function provided\n * @param  {DataModel} dataModel the dataModel to worked\n * @param  {Array} fieldArr  fields according to which the groupby should be worked\n * @param  {Object|Function} reducers  reducers function\n * @param {DataModel} existingDataModel Existing datamodel instance\n * @return {DataModel} new dataModel with the group by\n */\nfunction groupBy (dataModel, fieldArr, reducers, existingDataModel) {\n    const sFieldArr = getFieldArr(dataModel, fieldArr);\n    const reducerObj = getReducerObj(dataModel, reducers);\n    const fieldStore = dataModel.getFieldspace();\n    const fieldStoreObj = fieldStore.fieldsObj();\n    const dbName = fieldStore.name;\n    const dimensionArr = [];\n    const measureArr = [];\n    const schema = [];\n    const hashMap = {};\n    const data = [];\n    let newDataModel;\n\n    // Prepare the schema\n    Object.entries(fieldStoreObj).forEach(([key, value]) => {\n        if (sFieldArr.indexOf(key) !== -1 || reducerObj[key]) {\n            schema.push(extend2({}, value.schema()));\n\n            switch (value.schema().type) {\n            case FieldType.MEASURE:\n                measureArr.push(key);\n                break;\n            default:\n            case FieldType.DIMENSION:\n                dimensionArr.push(key);\n            }\n        }\n    });\n    // Prepare the data\n    let rowCount = 0;\n    rowDiffsetIterator(dataModel._rowDiffset, (i) => {\n        let hash = '';\n        dimensionArr.forEach((_) => {\n            hash = `${hash}-${fieldStoreObj[_].partialField.data[i]}`;\n        });\n        if (hashMap[hash] === undefined) {\n            hashMap[hash] = rowCount;\n            data.push({});\n            dimensionArr.forEach((_) => {\n                data[rowCount][_] = fieldStoreObj[_].partialField.data[i];\n            });\n            measureArr.forEach((_) => {\n                data[rowCount][_] = [fieldStoreObj[_].partialField.data[i]];\n            });\n            rowCount += 1;\n        } else {\n            measureArr.forEach((_) => {\n                data[hashMap[hash]][_].push(fieldStoreObj[_].partialField.data[i]);\n            });\n        }\n    });\n\n    // reduction\n    let cachedStore = {};\n    let cloneProvider = () => dataModel.detachedRoot();\n    data.forEach((row) => {\n        const tuple = row;\n        measureArr.forEach((_) => {\n            tuple[_] = reducerObj[_](row[_], cloneProvider, cachedStore);\n        });\n    });\n    if (existingDataModel) {\n        existingDataModel.__calculateFieldspace();\n        newDataModel = existingDataModel;\n    }\n    else {\n        newDataModel = new DataModel(data, schema, { name: dbName });\n    }\n    return newDataModel;\n}\n\nexport { groupBy, getFieldArr, getReducerObj };\n","export { createBinnedFieldData } from './bucket-creator';\nexport { compose, bin, select, project, groupBy as groupby } from './compose';\nexport { calculateVariable, sort } from './pure-operators';\nexport { crossProduct } from './cross-product';\nexport { dataBuilder } from './data-builder';\nexport { difference } from './difference';\nexport { getCommonSchema } from './get-common-schema';\nexport { defReducer, fnList } from './group-by-function';\nexport { groupBy, getFieldArr, getReducerObj } from './group-by';\nexport { mergeSort } from './merge-sort';\nexport { naturalJoinFilter } from './natural-join-filter-function';\nexport { naturalJoin } from './natural-join';\nexport { leftOuterJoin, rightOuterJoin, fullOuterJoin } from './outer-join';\nexport { rowDiffsetIterator } from './row-diffset-iterator';\nexport { union } from './union';\n","/**\n * The default sort function.\n *\n * @param {*} a - The first value.\n * @param {*} b - The second value.\n * @return {number} Returns the comparison result e.g. 1 or 0 or -1.\n */\nfunction defSortFn (a, b) {\n    const a1 = `${a}`;\n    const b1 = `${b}`;\n    if (a1 < b1) {\n        return -1;\n    }\n    if (a1 > b1) {\n        return 1;\n    }\n    return 0;\n}\n\n/**\n * The helper function for merge sort which creates the sorted array\n * from the two halves of the input array.\n *\n * @param {Array} arr - The target array which needs to be merged.\n * @param {number} lo - The starting index of the first array half.\n * @param {number} mid - The ending index of the first array half.\n * @param {number} hi - The ending index of the second array half.\n * @param {Function} sortFn - The sort function.\n */\nfunction merge (arr, lo, mid, hi, sortFn) {\n    const mainArr = arr;\n    const auxArr = [];\n    for (let i = lo; i <= hi; i += 1) {\n        auxArr[i] = mainArr[i];\n    }\n    let a = lo;\n    let b = mid + 1;\n\n    for (let i = lo; i <= hi; i += 1) {\n        if (a > mid) {\n            mainArr[i] = auxArr[b];\n            b += 1;\n        } else if (b > hi) {\n            mainArr[i] = auxArr[a];\n            a += 1;\n        } else if (sortFn(auxArr[a], auxArr[b]) <= 0) {\n            mainArr[i] = auxArr[a];\n            a += 1;\n        } else {\n            mainArr[i] = auxArr[b];\n            b += 1;\n        }\n    }\n}\n\n/**\n * The helper function for merge sort which would be called\n * recursively for sorting the array halves.\n *\n * @param {Array} arr - The target array which needs to be sorted.\n * @param {number} lo - The starting index of the array half.\n * @param {number} hi - The ending index of the array half.\n * @param {Function} sortFn - The sort function.\n * @return {Array} Returns the target array itself.\n */\nfunction sort (arr, lo, hi, sortFn) {\n    if (hi === lo) { return arr; }\n\n    const mid = lo + Math.floor((hi - lo) / 2);\n    sort(arr, lo, mid, sortFn);\n    sort(arr, mid + 1, hi, sortFn);\n    merge(arr, lo, mid, hi, sortFn);\n\n    return arr;\n}\n\n/**\n * The implementation of merge sort.\n * It is used in DataModel for stable sorting as it is not sure\n * what the sorting algorithm used by browsers is stable or not.\n *\n * @param {Array} arr - The target array which needs to be sorted.\n * @param {Function} [sortFn=defSortFn] - The sort function.\n * @return {Array} Returns the input array itself in sorted order.\n */\nexport function mergeSort (arr, sortFn = defSortFn) {\n    if (arr.length > 1) {\n        sort(arr, 0, arr.length - 1, sortFn);\n    }\n    return arr;\n}\n","import { getCommonSchema } from './get-common-schema';\n\n/**\n * The filter function used in natural join.\n * It generates a function that will have the logic to join two\n * DataModel instances by the process of natural join.\n *\n * @param {DataModel} dm1 - The left DataModel instance.\n * @param {DataModel} dm2 - The right DataModel instance.\n * @return {Function} Returns a function that is used in cross-product operation.\n */\nexport function naturalJoinFilter (dm1, dm2) {\n    const dm1FieldStore = dm1.getFieldspace();\n    const dm2FieldStore = dm2.getFieldspace();\n    // const dm1FieldStoreName = dm1FieldStore.name;\n    // const dm2FieldStoreName = dm2FieldStore.name;\n    const commonSchemaArr = getCommonSchema(dm1FieldStore, dm2FieldStore);\n\n    return (dm1Fields, dm2Fields) => {\n        let retainTuple = true;\n        commonSchemaArr.forEach((fieldName) => {\n            if (dm1Fields[fieldName].value ===\n                dm2Fields[fieldName].value && retainTuple) {\n                retainTuple = true;\n            } else {\n                retainTuple = false;\n            }\n        });\n        return retainTuple;\n    };\n}\n","import { crossProduct } from './cross-product';\nimport { naturalJoinFilter } from './natural-join-filter-function';\n\nexport function naturalJoin (dataModel1, dataModel2) {\n    return crossProduct(dataModel1, dataModel2, naturalJoinFilter(dataModel1, dataModel2), true);\n}\n","import { crossProduct } from './cross-product';\nimport { JOINS } from '../constants';\nimport { union } from './union';\n\n\nexport function leftOuterJoin (dataModel1, dataModel2, filterFn) {\n    return crossProduct(dataModel1, dataModel2, filterFn, false, JOINS.LEFTOUTER);\n}\n\nexport function rightOuterJoin (dataModel1, dataModel2, filterFn) {\n    return crossProduct(dataModel2, dataModel1, filterFn, false, JOINS.RIGHTOUTER);\n}\n\nexport function fullOuterJoin (dataModel1, dataModel2, filterFn) {\n    return union(leftOuterJoin(dataModel1, dataModel2, filterFn), rightOuterJoin(dataModel1, dataModel2, filterFn));\n}\n","/**\n * Wrapper on calculateVariable() method of DataModel to behave\n * the pure-function functionality.\n *\n * @param {Array} args - The argument list.\n * @return {any} Returns the returned value of calling function.\n */\nexport const calculateVariable = (...args) => dm => dm.calculateVariable(...args);\n\n/**\n * Wrapper on sort() method of DataModel to behave\n * the pure-function functionality.\n *\n * @param {Array} args - The argument list.\n * @return {any} Returns the returned value of calling function.\n */\nexport const sort = (...args) => dm => dm.sort(...args);\n","/**\n * Iterates through the diffSet array and call the callback with the current\n * index.\n *\n * @param {string} rowDiffset - The row diffset string e.g. '0-4,6,10-13'.\n * @param {Function} callback - The callback function to be called with every index.\n */\nexport function rowDiffsetIterator (rowDiffset, callback) {\n    if (rowDiffset.length > 0) {\n        const rowDiffArr = rowDiffset.split(',');\n        rowDiffArr.forEach((diffStr) => {\n            const diffStsArr = diffStr.split('-');\n            const start = +(diffStsArr[0]);\n            const end = +(diffStsArr[1] || diffStsArr[0]);\n            if (end >= start) {\n                for (let i = start; i <= end; i += 1) {\n                    callback(i);\n                }\n            }\n        });\n    }\n}\n","import DataModel from '../export';\nimport { extend2 } from '../utils';\nimport { rowDiffsetIterator } from './row-diffset-iterator';\nimport { isArrEqual } from '../utils/helper';\n/**\n * Performs the union operation between two dm instances.\n *\n * @param {dm} dm1 - The first dm instance.\n * @param {dm} dm2 - The second dm instance.\n * @return {dm} Returns the newly created dm after union operation.\n */\nexport function union (dm1, dm2) {\n    const hashTable = {};\n    const schema = [];\n    const schemaNameArr = [];\n    const data = [];\n    const dm1FieldStore = dm1.getFieldspace();\n    const dm2FieldStore = dm2.getFieldspace();\n    const dm1FieldStoreFieldObj = dm1FieldStore.fieldsObj();\n    const dm2FieldStoreFieldObj = dm2FieldStore.fieldsObj();\n    const name = `${dm1FieldStore.name} union ${dm2FieldStore.name}`;\n\n    // For union the columns should match otherwise return a clone of the dm1\n    if (!isArrEqual(dm1._colIdentifier.split(',').sort(), dm2._colIdentifier.split(',').sort())) {\n        return null;\n    }\n\n    // Prepare the schema\n    (dm1._colIdentifier.split(',')).forEach((fieldName) => {\n        const field = dm1FieldStoreFieldObj[fieldName];\n        schema.push(extend2({}, field.schema()));\n        schemaNameArr.push(field.schema().name);\n    });\n\n    /**\n     * The helper function to create the data.\n     *\n     * @param {dm} dm - The dm instance for which the data is inserted.\n     * @param {Object} fieldsObj - The fieldStore object format.\n     */\n    function prepareDataHelper (dm, fieldsObj) {\n        rowDiffsetIterator(dm._rowDiffset, (i) => {\n            const tuple = {};\n            let hashData = '';\n            schemaNameArr.forEach((schemaName) => {\n                const value = fieldsObj[schemaName].partialField.data[i];\n                hashData += `-${value}`;\n                tuple[schemaName] = value;\n            });\n            if (!hashTable[hashData]) {\n                data.push(tuple);\n                hashTable[hashData] = true;\n            }\n        });\n    }\n\n    // Prepare the data\n    prepareDataHelper(dm1, dm1FieldStoreFieldObj);\n    prepareDataHelper(dm2, dm2FieldStoreFieldObj);\n\n    return new DataModel(data, schema, { name });\n}\n","import { FilteringMode } from './enums';\nimport { getUniqueId } from './utils';\nimport { updateFields, cloneWithSelect, cloneWithProject, updateData } from './helper';\nimport { crossProduct, difference, naturalJoinFilter, union } from './operator';\n\n/**\n * Relation provides the definitions of basic operators of relational algebra like *selection*, *projection*, *union*,\n * *difference* etc.\n *\n * It is extended by {@link DataModel} to inherit the functionalities of relational algebra concept.\n *\n * @class\n * @public\n * @module Relation\n * @namespace DataModel\n */\nclass Relation {\n\n    /**\n     * Creates a new Relation instance by providing underlying data and schema.\n     *\n     * @private\n     *\n     * @param {Object | string | Relation} data - The input tabular data in dsv or json format or\n     * an existing Relation instance object.\n     * @param {Array} schema - An array of data schema.\n     * @param {Object} [options] - The optional options.\n     */\n    constructor (...params) {\n        let source;\n\n        this._parent = null;\n        this._derivation = [];\n        this._ancestorDerivation = [];\n        this._children = [];\n\n        if (params.length === 1 && ((source = params[0]) instanceof Relation)) {\n            // parent datamodel was passed as part of source\n            this._colIdentifier = source._colIdentifier;\n            this._rowDiffset = source._rowDiffset;\n            this._dataFormat = source._dataFormat;\n            this._parent = source;\n            this._dataObjects = this._parent._dataObjects;\n            this._partialFieldspace = this._parent._partialFieldspace;\n            this._fieldStoreName = getUniqueId();\n            this.__calculateFieldspace().calculateFieldsConfig();\n        } else {\n            updateData(this, ...params);\n            this._fieldStoreName = this._partialFieldspace.name;\n            this.__calculateFieldspace().calculateFieldsConfig();\n            this._propagationNameSpace = {\n                mutableActions: {},\n                immutableActions: {}\n            };\n        }\n    }\n\n    /**\n     * Retrieves the {@link Schema | schema} details for every {@link Field | field} as an array.\n     *\n     * @public\n     *\n     * @return {Array.<Schema>} Array of fields schema.\n     *      ```\n     *      [\n     *          { name: 'Name', type: 'dimension' },\n     *          { name: 'Miles_per_Gallon', type: 'measure', numberFormat: (val) => `${val} miles / gallon` },\n     *          { name: 'Cylinder', type: 'dimension' },\n     *          { name: 'Displacement', type: 'measure', defAggFn: 'max' },\n     *          { name: 'HorsePower', type: 'measure', defAggFn: 'max' },\n     *          { name: 'Weight_in_lbs', type: 'measure', defAggFn: 'avg',  },\n     *          { name: 'Acceleration', type: 'measure', defAggFn: 'avg' },\n     *          { name: 'Year', type: 'dimension', subtype: 'datetime', format: '%Y' },\n     *          { name: 'Origin' }\n     *      ]\n     *      ```\n     */\n    getSchema () {\n        return this.getFieldspace().fields.map(d => d.schema());\n    }\n\n    /**\n     * Returns the name of the {@link DataModel} instance. If no name was specified during {@link DataModel}\n     * initialization, then it returns a auto-generated name.\n     *\n     * @public\n     *\n     * @return {string} Name of the DataModel instance.\n     */\n    getName() {\n        return this._fieldStoreName;\n    }\n\n    getFieldspace () {\n        return this._fieldspace;\n    }\n\n    __calculateFieldspace () {\n        this._fieldspace = updateFields([this._rowDiffset, this._colIdentifier],\n             this.getPartialFieldspace(), this._fieldStoreName);\n        return this;\n    }\n\n    getPartialFieldspace () {\n        return this._partialFieldspace;\n    }\n\n    /**\n     * Performs {@link link_of_cross_product | cross-product} between two {@link DataModel} instances and returns a\n     * new {@link DataModel} instance containing the results. This operation is also called theta join.\n     *\n     * Cross product takes two set and create one set where each value of one set is paired with each value of another\n     * set.\n     *\n     * This method takes an optional predicate which filters the generated result rows. If the predicate returns true\n     * the combined row is included in the resulatant table.\n     *\n     * @example\n     *  let originDM = dm.project(['Origin','Origin_Formal_Name']);\n     *  let carsDM = dm.project(['Name','Miles_per_Gallon','Origin'])\n     *\n     *  console.log(carsDM.join(originDM)));\n     *\n     *  console.log(carsDM.join(originDM,\n     *      obj => obj.[originDM.getName()].Origin === obj.[carsDM.getName()].Origin));\n     *\n     * @text\n     * This is chained version of `join` operator. `join` can also be used as\n     * {@link link_to_join_op | functional operator}.\n     *\n     * @public\n     *\n     * @param {DataModel} joinWith - The DataModel to be joined with the current instance DataModel.\n     * @param {SelectionPredicate} filterFn - The predicate function that will filter the result of the crossProduct.\n     *\n     * @return {DataModel} New DataModel instance created after joining.\n     */\n    join (joinWith, filterFn) {\n        return crossProduct(this, joinWith, filterFn);\n    }\n\n    /**\n     * {@link natural_join | Natural join} is a special kind of cross-product join where filtering of rows are performed\n     * internally by resolving common fields are from both table and the rows with common value are included.\n     *\n     * @example\n     *  let originDM = dm.project(['Origin','Origin_Formal_Name']);\n     *  let carsDM = dm.project(['Name','Miles_per_Gallon','Origin'])\n     *\n     *  console.log(carsDM.naturalJoin(originDM));\n     *\n     * @text\n     * This is chained version of `naturalJoin` operator. `naturalJoin` can also be used as\n     * {@link link_to_join_op | functional operator}.\n     *\n     * @public\n     *\n     * @param {DataModel} joinWith - The DataModel with which the current instance of DataModel on which the method is\n     *      called will be joined.\n     * @return {DataModel} New DataModel instance created after joining.\n     */\n    naturalJoin (joinWith) {\n        return crossProduct(this, joinWith, naturalJoinFilter(this, joinWith), true);\n    }\n\n    /**\n     * {@link link_to_union | Union} operation can be termed as vertical stacking of all rows from both the DataModel\n     * instances, provided that both of the {@link DataModel} instances should have same column names.\n     *\n     * @example\n     * console.log(EuropeanMakerDM.union(USAMakerDM));\n     *\n     * @text\n     * This is chained version of `naturalJoin` operator. `naturalJoin` can also be used as\n     * {@link link_to_join_op | functional operator}.\n     *\n     * @public\n     *\n     * @param {DataModel} unionWith - DataModel instance for which union has to be applied with the instance on which\n     *      the method is called\n     *\n     * @return {DataModel} New DataModel instance with the result of the operation\n     */\n    union (unionWith) {\n        return union(this, unionWith);\n    }\n\n    /**\n     * {@link link_to_difference | Difference } operation only include rows which are present in the datamodel on which\n     * it was called but not on the one passed as argument.\n     *\n     * @example\n     * console.log(highPowerDM.difference(highExpensiveDM));\n     *\n     * @text\n     * This is chained version of `naturalJoin` operator. `naturalJoin` can also be used as\n     * {@link link_to_join_op | functional operator}.\n     *\n     * @public\n     *\n     * @param {DataModel} differenceWith - DataModel instance for which difference has to be applied with the instance\n     *      on which the method is called\n     * @return {DataModel} New DataModel instance with the result of the operation\n     */\n    difference (differenceWith) {\n        return difference(this, differenceWith);\n    }\n\n    /**\n     * {@link link_to_selection | Selection} is a row filtering operation. It expects a predicate and an optional mode\n     * which control which all rows should be included in the resultant DataModel instance.\n     *\n     * {@link SelectionPredicate} is a function which returns a boolean value. For selection operation the selection\n     * function is called for each row of DataModel instance with the current row passed as argument.\n     *\n     * After executing {@link SelectionPredicate} the rows are labeled as either an entry of selection set or an entry\n     * of rejection set.\n     *\n     * {@link FilteringMode} operates on the selection and rejection set to determine which one would reflect in the\n     * resultant datamodel.\n     *\n     * @warning\n     * Selection and rejection set is only a logical idea for concept explanation purpose.\n     *\n     * @example\n     *  // with selection mode NORMAL:\n     *  const normDt = dt.select(fields => fields.Origin.value === \"USA\")\n     *  console.log(normDt));\n     *\n     * // with selection mode INVERSE:\n     * const inverDt = dt.select(fields => fields.Origin.value === \"USA\", { mode: DataModel.FilteringMode.INVERSE })\n     * console.log(inverDt);\n     *\n     * // with selection mode ALL:\n     * const dtArr = dt.select(fields => fields.Origin.value === \"USA\", { mode: DataModel.FilteringMode.ALL })\n     * // print the selected parts\n     * console.log(dtArr[0]);\n     * // print the inverted parts\n     * console.log(dtArr[1]);\n     *\n     * @text\n     * This is chained version of `select` operator. `select` can also be used as\n     * {@link link_to_join_op | functional operator}.\n     *\n     * @public\n     *\n     * @param {Function} selectFn - The predicate function which is called for each row with the current row.\n     * ```\n     *  function (row, i, cloneProvider, store)  { ... }\n     * ```\n     * @param {Object} config - The configuration object to control the inclusion exclusion of a row in resultant\n     * DataModel instance.\n     * @param {FilteringMode} [config.mode=FilteringMode.NORMAL] - The mode of the selection.\n     * @return {DataModel} Returns the new DataModel instance(s) after operation.\n     */\n    select (selectFn, config) {\n        const defConfig = {\n            mode: FilteringMode.NORMAL,\n            saveChild: true\n        };\n        config = Object.assign({}, defConfig, config);\n\n        const cloneConfig = { saveChild: config.saveChild };\n\n        return cloneWithSelect(\n            this,\n            selectFn,\n            config,\n            cloneConfig\n        );\n    }\n\n    /**\n     * Retrieves a boolean value if the current {@link DataModel} instance has data.\n     *\n     * @example\n     * const schema = [\n     *    { name: 'CarName', type: 'dimension' },\n     *    { name: 'HorsePower', type: 'measure' },\n     *    { name: \"Origin\", type: 'dimension' }\n     * ];\n     * const data = [];\n     *\n     * const dt = new DataModel(data, schema);\n     * console.log(dt.isEmpty());\n     *\n     * @public\n     *\n     * @return {Boolean} True if the datamodel has no data, otherwise false.\n     */\n    isEmpty () {\n        return !this._rowDiffset.length || !this._colIdentifier.length;\n    }\n\n    /**\n     * Creates a clone from the current DataModel instance with child parent relationship.\n     *\n     * @private\n     * @param {boolean} [saveChild=true] - Whether the cloned instance would be recorded in the parent instance.\n     * @return {DataModel} - Returns the newly cloned DataModel instance.\n     */\n    clone (saveChild = true) {\n        const clonedDm = new this.constructor(this);\n        if (saveChild) {\n            clonedDm.setParent(this);\n        } else {\n            clonedDm.setParent(null);\n        }\n        return clonedDm;\n    }\n\n    /**\n     * {@link Projection} is filter column (field) operation. It expects list of fields' name and either include those\n     * or exclude those based on {@link FilteringMode} on the resultant variable.\n     *\n     * Projection expects array of fields name based on which it creates the selection and rejection set. All the field\n     * whose name is present in array goes in selection set and rest of the fields goes in rejection set.\n     *\n     * {@link FilteringMode} operates on the selection and rejection set to determine which one would reflect in the\n     * resulatant datamodel.\n     *\n     * @warning\n     * Selection and rejection set is only a logical idea for concept explanation purpose.\n     *\n     * @example\n     *  const dm = new DataModel(data, schema);\n     *\n     *  // with projection mode NORMAL:\n     *  const normDt = dt.project([\"Name\", \"HorsePower\"]);\n     *  console.log(normDt.getData());\n     *\n     *  // with projection mode INVERSE:\n     *  const inverDt = dt.project([\"Name\", \"HorsePower\"], { mode: DataModel.FilteringMode.INVERSE })\n     *  console.log(inverDt.getData());\n     *\n     *  // with selection mode ALL:\n     *  const dtArr = dt.project([\"Name\", \"HorsePower\"], { mode: DataModel.FilteringMode.ALL })\n     *  // print the normal parts\n     *  console.log(dtArr[0].getData());\n     *  // print the inverted parts\n     *  console.log(dtArr[1].getData());\n     *\n     * @text\n     * This is chained version of `select` operator. `select` can also be used as\n     * {@link link_to_join_op | functional operator}.\n     *\n     * @public\n     *\n     * @param {Array.<string | Regexp>} projField - An array of column names in string or regular expression.\n     * @param {Object} [config] - An optional config to control the creation of new DataModel\n     * @param {FilteringMode} [config.mode=FilteringMode.NORMAL] - Mode of the projection\n     *\n     * @return {DataModel} Returns the new DataModel instance after operation.\n     */\n    project (projField, config) {\n        const defConfig = {\n            mode: FilteringMode.NORMAL,\n            saveChild: true\n        };\n        config = Object.assign({}, defConfig, config);\n        const fieldConfig = this.getFieldsConfig();\n        const allFields = Object.keys(fieldConfig);\n        const { mode } = config;\n\n        let normalizedProjField = projField.reduce((acc, field) => {\n            if (field.constructor.name === 'RegExp') {\n                acc.push(...allFields.filter(fieldName => fieldName.search(field) !== -1));\n            } else if (field in fieldConfig) {\n                acc.push(field);\n            }\n            return acc;\n        }, []);\n\n        normalizedProjField = Array.from(new Set(normalizedProjField)).map(field => field.trim());\n        let dataModel;\n\n        if (mode === FilteringMode.ALL) {\n            let projectionClone = cloneWithProject(this, normalizedProjField, {\n                mode: FilteringMode.NORMAL,\n                saveChild: config.saveChild\n            }, allFields);\n            let rejectionClone = cloneWithProject(this, normalizedProjField, {\n                mode: FilteringMode.INVERSE,\n                saveChild: config.saveChild\n            }, allFields);\n            dataModel = [projectionClone, rejectionClone];\n        } else {\n            let projectionClone = cloneWithProject(this, normalizedProjField, config, allFields);\n            dataModel = projectionClone;\n        }\n\n        return dataModel;\n    }\n\n    getFieldsConfig () {\n        return this._fieldConfig;\n    }\n\n    calculateFieldsConfig () {\n        this._fieldConfig = this._fieldspace.fields.reduce((acc, fieldObj, i) => {\n            acc[fieldObj.name()] = {\n                index: i,\n                def: fieldObj.schema(),\n            };\n            return acc;\n        }, {});\n        return this;\n    }\n\n\n    /**\n     * Frees up the resources associated with the current DataModel instance and breaks all the links instance has in\n     * the DAG.\n     *\n     * @public\n     */\n    dispose () {\n        this._parent && this._parent.removeChild(this);\n        this._parent = null;\n        this._children.forEach((child) => {\n            child._parent = null;\n        });\n        this._children = [];\n    }\n\n    /**\n     * Removes the specified child {@link DataModel} from the child list of the current {@link DataModel} instance.\n     *\n     * @example\n     * const schema = [\n     *    { name: 'Name', type: 'dimension' },\n     *    { name: 'HorsePower', type: 'measure' },\n     *    { name: \"Origin\", type: 'dimension' }\n     * ];\n     *\n     * const data = [\n     *    { Name: \"chevrolet chevelle malibu\", Horsepower: 130, Origin: \"USA\" },\n     *    { Name: \"citroen ds-21 pallas\", Horsepower: 115, Origin: \"Europe\" },\n     *    { Name: \"datsun pl510\", Horsepower: 88, Origin: \"Japan\" },\n     *    { Name: \"amc rebel sst\", Horsepower: 150, Origin: \"USA\"},\n     * ]\n     *\n     * const dt = new DataModel(data, schema);\n     *\n     * const dt2 = dt.select(fields => fields.Origin.value === \"USA\")\n     * dt.removeChild(dt2);\n     *\n     * @private\n     *\n     * @param {DataModel} child - Delegates the parent to remove this child.\n     */\n    removeChild (child) {\n        let idx = this._children.findIndex(sibling => sibling === child);\n        idx !== -1 ? this._children.splice(idx, 1) : true;\n    }\n\n    /**\n     * Sets the specified {@link DataModel} as a parent for the current {@link DataModel} instance.\n     *\n     * @param {DataModel} parent - The datamodel instance which will act as parent.\n     */\n    setParent (parent) {\n        this._parent && this._parent.removeChild(this);\n        this._parent = parent;\n        parent && parent._children.push(this);\n    }\n\n    /**\n     * Returns the parent {@link DataModel} instance.\n     *\n     * @example\n     * const schema = [\n     *    { name: 'Name', type: 'dimension' },\n     *    { name: 'HorsePower', type: 'measure' },\n     *    { name: \"Origin\", type: 'dimension' }\n     * ];\n     *\n     * const data = [\n     *    { Name: \"chevrolet chevelle malibu\", Horsepower: 130, Origin: \"USA\" },\n     *    { Name: \"citroen ds-21 pallas\", Horsepower: 115, Origin: \"Europe\" },\n     *    { Name: \"datsun pl510\", Horsepower: 88, Origin: \"Japan\" },\n     *    { Name: \"amc rebel sst\", Horsepower: 150, Origin: \"USA\"},\n     * ]\n     *\n     * const dt = new DataModel(data, schema);\n     *\n     * const dt2 = dt.select(fields => fields.Origin.value === \"USA\");\n     * const parentDm = dt2.getParent();\n     *\n     * @return {DataModel} Returns the parent DataModel instance.\n     */\n    getParent () {\n        return this._parent;\n    }\n\n    /**\n     * Returns the immediate child {@link DataModel} instances.\n     *\n     * @example\n     * const schema = [\n     *    { name: 'Name', type: 'dimension' },\n     *    { name: 'HorsePower', type: 'measure' },\n     *    { name: \"Origin\", type: 'dimension' }\n     * ];\n     *\n     * const data = [\n     *    { Name: \"chevrolet chevelle malibu\", Horsepower: 130, Origin: \"USA\" },\n     *    { Name: \"citroen ds-21 pallas\", Horsepower: 115, Origin: \"Europe\" },\n     *    { Name: \"datsun pl510\", Horsepower: 88, Origin: \"Japan\" },\n     *    { Name: \"amc rebel sst\", Horsepower: 150, Origin: \"USA\"},\n     * ]\n     *\n     * const dt = new DataModel(data, schema);\n     *\n     * const childDm1 = dt.select(fields => fields.Origin.value === \"USA\");\n     * const childDm2 = dt.select(fields => fields.Origin.value === \"Japan\");\n     * const childDm3 = dt.groupBy([\"Origin\"]);\n     *\n     * @return {DataModel[]} Returns the immediate child DataModel instances.\n     */\n    getChildren () {\n        return this._children;\n    }\n\n    /**\n     * Returns the in-between operation meta data while creating the current {@link DataModel} instance.\n     *\n     * @example\n     * const schema = [\n     *   { name: 'Name', type: 'dimension' },\n     *   { name: 'HorsePower', type: 'measure' },\n     *   { name: \"Origin\", type: 'dimension' }\n     * ];\n     *\n     * const data = [\n     *   { Name: \"chevrolet chevelle malibu\", Horsepower: 130, Origin: \"USA\" },\n     *   { Name: \"citroen ds-21 pallas\", Horsepower: 115, Origin: \"Europe\" },\n     *   { Name: \"datsun pl510\", Horsepower: 88, Origin: \"Japan\" },\n     *   { Name: \"amc rebel sst\", Horsepower: 150, Origin: \"USA\"},\n     * ]\n     *\n     * const dt = new DataModel(data, schema);\n     * const dt2 = dt.select(fields => fields.Origin.value === \"USA\");\n     * const dt3 = dt2.groupBy([\"Origin\"]);\n     * const derivations = dt3.getDerivations();\n     *\n     * @return {Any[]} Returns the derivation meta data.\n     */\n    getDerivations () {\n        return this._derivation;\n    }\n\n    /**\n     * Returns the in-between operation meta data happened from root {@link DataModel} to current instance.\n     *\n     * @example\n     * const schema = [\n     *   { name: 'Name', type: 'dimension' },\n     *   { name: 'HorsePower', type: 'measure' },\n     *   { name: \"Origin\", type: 'dimension' }\n     * ];\n     *\n     * const data = [\n     *   { Name: \"chevrolet chevelle malibu\", Horsepower: 130, Origin: \"USA\" },\n     *   { Name: \"citroen ds-21 pallas\", Horsepower: 115, Origin: \"Europe\" },\n     *   { Name: \"datsun pl510\", Horsepower: 88, Origin: \"Japan\" },\n     *   { Name: \"amc rebel sst\", Horsepower: 150, Origin: \"USA\"},\n     * ]\n     *\n     * const dt = new DataModel(data, schema);\n     * const dt2 = dt.select(fields => fields.Origin.value === \"USA\");\n     * const dt3 = dt2.groupBy([\"Origin\"]);\n     * const ancDerivations = dt3.getAncestorDerivations();\n     *\n     * @return {Any[]} Returns the previous derivation meta data.\n     */\n    getAncestorDerivations () {\n        return this._ancestorDerivation;\n    }\n}\n\nexport default Relation;\n","import { fnList } from '../operator/group-by-function';\n\nexport const { sum, avg, min, max, first, last, count, std: sd } = fnList;\n","/**\n * The utility function to calculate major column.\n *\n * @param {Object} store - The store object.\n * @return {Function} Returns the push function.\n */\nexport default (store) => {\n    let i = 0;\n    return (...fields) => {\n        fields.forEach((val, fieldIndex) => {\n            if (!(store[fieldIndex] instanceof Array)) {\n                store[fieldIndex] = Array.from({ length: i });\n            }\n            store[fieldIndex].push(val);\n        });\n        i++;\n    };\n};\n","/**\n * Creates a JS native date object from input\n *\n * @param {string | number | Date} date Input using which date object to be created\n * @return {Date} : JS native date object\n */\nfunction convertToNativeDate (date) {\n    if (date instanceof Date) {\n        return date;\n    }\n\n    return new Date(date);\n}\n/**\n * Apply padding before a number if its less than 1o. This is used when constant digit's number to be returned\n * between 0 - 99\n *\n * @param {number} n Input to be padded\n * @return {string} Padded number\n */\nfunction pad (n) {\n    return (n < 10) ? (`0${n}`) : n;\n}\n/*\n * DateFormatter utility to convert any date format to any other date format\n * DateFormatter parse a date time stamp specified by a user abiding by rules which are defined\n * by user in terms of token. It creates JS native date object from the user specified format.\n * That native date can also be displayed\n * in any specified format.\n * This utility class only takes care of format conversion only\n */\n\n/*\n * Escapes all the special character that are used in regular expression.\n * Like\n * RegExp.escape('sgfd-$') // Output: sgfd\\-\\$\n *\n * @param text {String} : text which is to be escaped\n */\nRegExp.escape = function (text) {\n    return text.replace(/[-[\\]{}()*+?.,\\\\^$|#\\s]/g, '\\\\$&');\n};\n\n/**\n * DateTimeFormatter class to convert any user format of date time stamp to any other format\n * of date time stamp.\n *\n * @param {string} format Format of the date given. For the above date,\n * 'year: %Y, month: %b, day: %d'.\n * @class\n */\n/* istanbul ignore next */ function DateTimeFormatter (format) {\n    this.format = format;\n    this.dtParams = undefined;\n    this.nativeDate = undefined;\n}\n\n// The identifier of the tokens\nDateTimeFormatter.TOKEN_PREFIX = '%';\n\n// JS native Date constructor takes the date params (year, month, etc) in a certail sequence.\n// This defines the sequence of the date parameters in the constructor.\nDateTimeFormatter.DATETIME_PARAM_SEQUENCE = {\n    YEAR: 0,\n    MONTH: 1,\n    DAY: 2,\n    HOUR: 3,\n    MINUTE: 4,\n    SECOND: 5,\n    MILLISECOND: 6\n};\n\n/*\n * This is a default number parsing utility. It tries to parse a number in integer, if parsing is unsuccessful, it\n * gives back a default value.\n *\n * @param: defVal {Number} : Default no if the parsing to integer is not successful\n * @return {Function} : An closure function which is to be called by passing an the value which needs to be parsed.\n */\nDateTimeFormatter.defaultNumberParser = function (defVal) {\n    return function (val) {\n        let parsedVal;\n        if (isFinite(parsedVal = parseInt(val, 10))) {\n            return parsedVal;\n        }\n\n        return defVal;\n    };\n};\n\n/*\n * This is a default number range utility. It tries to find an element in the range. If not found it returns a\n * default no as an index.\n *\n * @param: range {Array} : The list which is to be serached\n * @param: defVal {Number} : Default no if the serach and find does not return anything\n * @return {Function} : An closure function which is to be called by passing an the value which needs to be found\n */\nDateTimeFormatter.defaultRangeParser = function (range, defVal) {\n    return (val) => {\n        let i;\n        let l;\n\n        if (!val) { return defVal; }\n\n        const nVal = val.toLowerCase();\n\n        for (i = 0, l = range.length; i < l; i++) {\n            if (range[i].toLowerCase() === nVal) {\n                return i;\n            }\n        }\n\n        if (i === undefined) {\n            return defVal;\n        }\n        return null;\n    };\n};\n\n/*\n * Defines the tokens which are supporter by the dateformatter. Using this definitation a value gets extracted from\n * the user specifed date string. This also formats the value for display purpose from native JS date.\n * The definition of each token contains the following named properties\n * {\n *     %token_name% : {\n *         name: name of the token, this is used in reverse lookup,\n *         extract: a function that returns the regular expression to extract that piece of information. All the\n *                  regex should be gouped by using ()\n *         parser: a function which receives value extracted by the above regex and parse it to get the date params\n *         formatter: a formatter function that takes milliseconds or JS Date object and format the param\n *                  represented by the token only.\n *     }\n * }\n *\n * @return {Object} : Definition of the all the supported tokens.\n */\nDateTimeFormatter.getTokenDefinitions = function () {\n    const daysDef = {\n        short: [\n            'Sun',\n            'Mon',\n            'Tue',\n            'Wed',\n            'Thu',\n            'Fri',\n            'Sat'\n        ],\n        long: [\n            'Sunday',\n            'Monday',\n            'Tuesday',\n            'Wednesday',\n            'Thursday',\n            'Friday',\n            'Saturday'\n        ]\n    };\n    const monthsDef = {\n        short: [\n            'Jan',\n            'Feb',\n            'Mar',\n            'Apr',\n            'May',\n            'Jun',\n            'Jul',\n            'Aug',\n            'Sep',\n            'Oct',\n            'Nov',\n            'Dec'\n        ],\n        long: [\n            'January',\n            'February',\n            'March',\n            'April',\n            'May',\n            'June',\n            'July',\n            'August',\n            'September',\n            'October',\n            'November',\n            'December'\n        ]\n    };\n\n    const definitions = {\n        H: {\n            // 24 hours format\n            name: 'H',\n            index: 3,\n            extract () { return '(\\\\d+)'; },\n            parser: DateTimeFormatter.defaultNumberParser(),\n            formatter (val) {\n                const d = convertToNativeDate(val);\n\n                return d.getHours().toString();\n            }\n        },\n        l: {\n            // 12 hours format\n            name: 'l',\n            index: 3,\n            extract () { return '(\\\\d+)'; },\n            parser: DateTimeFormatter.defaultNumberParser(),\n            formatter (val) {\n                const d = convertToNativeDate(val);\n                const hours = d.getHours() % 12;\n\n                return (hours === 0 ? 12 : hours).toString();\n            }\n        },\n        p: {\n            // AM or PM\n            name: 'p',\n            index: 3,\n            extract () { return '(AM|PM)'; },\n            parser: (val) => {\n                if (val) {\n                    return val.toLowerCase();\n                }\n                return null;\n            },\n            formatter: (val) => {\n                const d = convertToNativeDate(val);\n                const hours = d.getHours();\n\n                return (hours < 12 ? 'AM' : 'PM');\n            }\n        },\n        P: {\n            // am or pm\n            name: 'P',\n            index: 3,\n            extract () { return '(am|pm)'; },\n            parser: (val) => {\n                if (val) {\n                    return val.toLowerCase();\n                }\n                return null;\n            },\n            formatter: (val) => {\n                const d = convertToNativeDate(val);\n                const hours = d.getHours();\n\n                return (hours < 12 ? 'am' : 'pm');\n            }\n        },\n        M: {\n            // Two digit minutes 00 - 59\n            name: 'M',\n            index: 4,\n            extract () { return '(\\\\d+)'; },\n            parser: DateTimeFormatter.defaultNumberParser(),\n            formatter (val) {\n                const d = convertToNativeDate(val);\n                const mins = d.getMinutes();\n\n                return pad(mins);\n            }\n        },\n        S: {\n            // Two digit seconds 00 - 59\n            name: 'S',\n            index: 5,\n            extract () { return '(\\\\d+)'; },\n            parser: DateTimeFormatter.defaultNumberParser(),\n            formatter (val) {\n                const d = convertToNativeDate(val);\n                const seconds = d.getSeconds();\n\n                return pad(seconds);\n            }\n        },\n        K: {\n            // Milliseconds\n            name: 'K',\n            index: 6,\n            extract () { return '(\\\\d+)'; },\n            parser: DateTimeFormatter.defaultNumberParser(),\n            formatter (val) {\n                const d = convertToNativeDate(val);\n                const ms = d.getMilliseconds();\n\n                return ms.toString();\n            }\n        },\n        a: {\n            // Short name of day, like Mon\n            name: 'a',\n            index: 2,\n            extract () { return `(${daysDef.short.join('|')})`; },\n            parser: DateTimeFormatter.defaultRangeParser(daysDef.short),\n            formatter (val) {\n                const d = convertToNativeDate(val);\n                const day = d.getDay();\n\n                return (daysDef.short[day]).toString();\n            }\n        },\n        A: {\n            // Long name of day, like Monday\n            name: 'A',\n            index: 2,\n            extract () { return `(${daysDef.long.join('|')})`; },\n            parser: DateTimeFormatter.defaultRangeParser(daysDef.long),\n            formatter (val) {\n                const d = convertToNativeDate(val);\n                const day = d.getDay();\n\n                return (daysDef.long[day]).toString();\n            }\n        },\n        e: {\n            // 8 of March, 11 of November\n            name: 'e',\n            index: 2,\n            extract () { return '(\\\\d+)'; },\n            parser: DateTimeFormatter.defaultNumberParser(),\n            formatter (val) {\n                const d = convertToNativeDate(val);\n                const day = d.getDate();\n\n                return day.toString();\n            }\n        },\n        d: {\n            // 08 of March, 11 of November\n            name: 'd',\n            index: 2,\n            extract () { return '(\\\\d+)'; },\n            parser: DateTimeFormatter.defaultNumberParser(),\n            formatter (val) {\n                const d = convertToNativeDate(val);\n                const day = d.getDate();\n\n                return pad(day);\n            }\n        },\n        b: {\n            // Short month, like Jan\n            name: 'b',\n            index: 1,\n            extract () { return `(${monthsDef.short.join('|')})`; },\n            parser: DateTimeFormatter.defaultRangeParser(monthsDef.short),\n            formatter (val) {\n                const d = convertToNativeDate(val);\n                const month = d.getMonth();\n\n                return (monthsDef.short[month]).toString();\n            }\n        },\n        B: {\n            // Long month, like January\n            name: 'B',\n            index: 1,\n            extract () { return `(${monthsDef.long.join('|')})`; },\n            parser: DateTimeFormatter.defaultRangeParser(monthsDef.long),\n            formatter (val) {\n                const d = convertToNativeDate(val);\n                const month = d.getMonth();\n\n                return (monthsDef.long[month]).toString();\n            }\n        },\n        m: {\n            // Two digit month of year like 01 for January\n            name: 'm',\n            index: 1,\n            extract () { return '(\\\\d+)'; },\n            parser (val) { return DateTimeFormatter.defaultNumberParser()(val) - 1; },\n            formatter (val) {\n                const d = convertToNativeDate(val);\n                const month = d.getMonth();\n\n                return pad(month + 1);\n            }\n        },\n        y: {\n            // Short year like 90 for 1990\n            name: 'y',\n            index: 0,\n            extract () { return '(\\\\d{2})'; },\n            parser (val) {\n                let result;\n                if (val) {\n                    const l = val.length;\n                    val = val.substring(l - 2, l);\n                }\n                let parsedVal = DateTimeFormatter.defaultNumberParser()(val);\n                let presentDate = new Date();\n                let presentYear = Math.trunc((presentDate.getFullYear()) / 100);\n\n                result = `${presentYear}${parsedVal}`;\n\n                if (convertToNativeDate(result).getFullYear() > presentDate.getFullYear()) {\n                    result = `${presentYear - 1}${parsedVal}`;\n                }\n                return convertToNativeDate(result).getFullYear();\n            },\n            formatter (val) {\n                const d = convertToNativeDate(val);\n                let year = d.getFullYear().toString();\n                let l;\n\n                if (year) {\n                    l = year.length;\n                    year = year.substring(l - 2, l);\n                }\n\n                return year;\n            }\n        },\n        Y: {\n            // Long year like 1990\n            name: 'Y',\n            index: 0,\n            extract () { return '(\\\\d{4})'; },\n            parser: DateTimeFormatter.defaultNumberParser(),\n            formatter (val) {\n                const d = convertToNativeDate(val);\n                const year = d.getFullYear().toString();\n\n                return year;\n            }\n        }\n    };\n\n    return definitions;\n};\n\n/*\n * The tokens which works internally is not user friendly in terms of memorizing the names. This gives a formal\n * definition to the informal notations.\n *\n * @return {Object} : Formal definition of the tokens\n */\nDateTimeFormatter.getTokenFormalNames = function () {\n    const definitions = DateTimeFormatter.getTokenDefinitions();\n\n    return {\n        HOUR: definitions.H,\n        HOUR_12: definitions.l,\n        AMPM_UPPERCASE: definitions.p,\n        AMPM_LOWERCASE: definitions.P,\n        MINUTE: definitions.M,\n        SECOND: definitions.S,\n        SHORT_DAY: definitions.a,\n        LONG_DAY: definitions.A,\n        DAY_OF_MONTH: definitions.e,\n        DAY_OF_MONTH_CONSTANT_WIDTH: definitions.d,\n        SHORT_MONTH: definitions.b,\n        LONG_MONTH: definitions.B,\n        MONTH_OF_YEAR: definitions.m,\n        SHORT_YEAR: definitions.y,\n        LONG_YEAR: definitions.Y\n    };\n};\n\n/*\n * This defines the rules and declares dependencies that resolves a date parameter (year, month etc) from\n * the date time parameter array.\n *\n * @return {Object} : An object that contains dependencies and a resolver function. The dependencies values are fed\n *                  to the resolver function in that particular sequence only.\n */\nDateTimeFormatter.tokenResolver = function () {\n    const definitions = DateTimeFormatter.getTokenDefinitions();\n    const defaultResolver = (...args) => { // eslint-disable-line require-jsdoc\n        let i = 0;\n        let arg;\n        let targetParam;\n        const l = args.length;\n\n        for (; i < l; i++) {\n            arg = args[i];\n            if (args[i]) {\n                targetParam = arg;\n            }\n        }\n\n        if (!targetParam) { return null; }\n\n        return targetParam[0].parser(targetParam[1]);\n    };\n\n    return {\n        YEAR: [definitions.y, definitions.Y,\n            defaultResolver\n        ],\n        MONTH: [definitions.b, definitions.B, definitions.m,\n            defaultResolver\n        ],\n        DAY: [definitions.a, definitions.A, definitions.e, definitions.d,\n            defaultResolver\n        ],\n        HOUR: [definitions.H, definitions.l, definitions.p, definitions.P,\n            function (hourFormat24, hourFormat12, ampmLower, ampmUpper) {\n                let targetParam;\n                let amOrpm;\n                let isPM;\n                let val;\n\n                if (hourFormat12 && (amOrpm = (ampmLower || ampmUpper))) {\n                    if (amOrpm[0].parser(amOrpm[1]) === 'pm') {\n                        isPM = true;\n                    }\n\n                    targetParam = hourFormat12;\n                } else if (hourFormat12) {\n                    targetParam = hourFormat12;\n                } else {\n                    targetParam = hourFormat24;\n                }\n\n                if (!targetParam) { return null; }\n\n                val = targetParam[0].parser(targetParam[1]);\n                if (isPM) {\n                    val += 12;\n                }\n                return val;\n            }\n        ],\n        MINUTE: [definitions.M,\n            defaultResolver\n        ],\n        SECOND: [definitions.S,\n            defaultResolver\n        ]\n    };\n};\n\n/*\n * Finds token from the format rule specified by a user.\n * @param format {String} : The format of the input date specified by the user\n * @return {Array} : An array of objects which contains the available token and their occurence index in the format\n */\nDateTimeFormatter.findTokens = function (format) {\n    const tokenPrefix = DateTimeFormatter.TOKEN_PREFIX;\n    const definitions = DateTimeFormatter.getTokenDefinitions();\n    const tokenLiterals = Object.keys(definitions);\n    const occurrence = [];\n    let i;\n    let forwardChar;\n\n    while ((i = format.indexOf(tokenPrefix, i + 1)) >= 0) {\n        forwardChar = format[i + 1];\n        if (tokenLiterals.indexOf(forwardChar) === -1) { continue; }\n\n        occurrence.push({\n            index: i,\n            token: forwardChar\n        });\n    }\n\n    return occurrence;\n};\n\n/*\n * Format any JS date to a specified date given by user.\n *\n * @param date {Number | Date} : The date object which is to be formatted\n * @param format {String} : The format using which the date will be formatted for display\n */\nDateTimeFormatter.formatAs = function (date, format) {\n    const nDate = convertToNativeDate(date);\n    const occurrence = DateTimeFormatter.findTokens(format);\n    const definitions = DateTimeFormatter.getTokenDefinitions();\n    let formattedStr = String(format);\n    const tokenPrefix = DateTimeFormatter.TOKEN_PREFIX;\n    let token;\n    let formattedVal;\n    let i;\n    let l;\n\n    for (i = 0, l = occurrence.length; i < l; i++) {\n        token = occurrence[i].token;\n        formattedVal = definitions[token].formatter(nDate);\n        formattedStr = formattedStr.replace(new RegExp(tokenPrefix + token, 'g'), formattedVal);\n    }\n\n    return formattedStr;\n};\n\n/*\n * Parses the user specified date string to extract the date time params.\n *\n * @return {Array} : Value of date time params in an array [year, month, day, hour, minutes, seconds, milli]\n */\nDateTimeFormatter.prototype.parse = function (dateTimeStamp, options) {\n    const tokenResolver = DateTimeFormatter.tokenResolver();\n    const dtParams = this.extractTokenValue(dateTimeStamp);\n    const dtParamSeq = DateTimeFormatter.DATETIME_PARAM_SEQUENCE;\n    const noBreak = options && options.noBreak;\n    const dtParamArr = [];\n    const args = [];\n    let resolverKey;\n    let resolverParams;\n    let resolverFn;\n    let val;\n    let i;\n    let param;\n    let resolvedVal;\n    let l;\n    let result = [];\n\n    for (resolverKey in tokenResolver) {\n        if (!{}.hasOwnProperty.call(tokenResolver, resolverKey)) { continue; }\n\n        args.length = 0;\n        resolverParams = tokenResolver[resolverKey];\n        resolverFn = resolverParams.splice(resolverParams.length - 1, 1)[0];\n\n        for (i = 0, l = resolverParams.length; i < l; i++) {\n            param = resolverParams[i];\n            val = dtParams[param.name];\n\n            if (val === undefined) {\n                args.push(null);\n            } else {\n                args.push([param, val]);\n            }\n        }\n\n        resolvedVal = resolverFn.apply(this, args);\n\n        if ((resolvedVal === undefined || resolvedVal === null) && !noBreak) {\n            break;\n        }\n\n        dtParamArr[dtParamSeq[resolverKey]] = resolvedVal;\n    }\n\n    if (dtParamArr.length && this.checkIfOnlyYear(dtParamArr.length))\n     {\n        result.unshift(dtParamArr[0], 0, 1); }\n    else {\n        result.unshift(...dtParamArr);\n    }\n\n    return result;\n};\n\n/*\n * Extract the value of the token from user specified date time string.\n *\n * @return {Object} : An key value pair which contains the tokens as key and value as pair\n */\nDateTimeFormatter.prototype.extractTokenValue = function (dateTimeStamp) {\n    const format = this.format;\n    const definitions = DateTimeFormatter.getTokenDefinitions();\n    const tokenPrefix = DateTimeFormatter.TOKEN_PREFIX;\n    const occurrence = DateTimeFormatter.findTokens(format);\n    const tokenObj = {};\n\n    let lastOccurrenceIndex;\n    let occObj;\n    let occIndex;\n    let targetText;\n    let regexFormat;\n\n    let l;\n    let i;\n\n    regexFormat = String(format);\n\n    const tokenArr = occurrence.map(obj => obj.token);\n    const occurrenceLength = occurrence.length;\n    for (i = occurrenceLength - 1; i >= 0; i--) {\n        occIndex = occurrence[i].index;\n\n        if (occIndex + 1 === regexFormat.length - 1) {\n            lastOccurrenceIndex = occIndex;\n            continue;\n        }\n\n        if (lastOccurrenceIndex === undefined) {\n            lastOccurrenceIndex = regexFormat.length;\n        }\n\n        targetText = regexFormat.substring(occIndex + 2, lastOccurrenceIndex);\n        regexFormat = regexFormat.substring(0, occIndex + 2) +\n            RegExp.escape(targetText) +\n            regexFormat.substring(lastOccurrenceIndex, regexFormat.length);\n\n        lastOccurrenceIndex = occIndex;\n    }\n\n    for (i = 0; i < occurrenceLength; i++) {\n        occObj = occurrence[i];\n        regexFormat = regexFormat.replace(tokenPrefix + occObj.token, definitions[occObj.token].extract());\n    }\n\n    const extractValues = dateTimeStamp.match(new RegExp(regexFormat)) || [];\n    extractValues.shift();\n\n    for (i = 0, l = tokenArr.length; i < l; i++) {\n        tokenObj[tokenArr[i]] = extractValues[i];\n    }\n    return tokenObj;\n};\n\n/*\n * Give back the JS native date formed from  user specified date string\n *\n * @return {Date} : Native JS Date\n */\nDateTimeFormatter.prototype.getNativeDate = function (dateTimeStamp) {\n    let date = null;\n    if (Number.isFinite(dateTimeStamp)) {\n        date = new Date(dateTimeStamp);\n    } else if (!this.format && Date.parse(dateTimeStamp)) {\n        date = new Date(dateTimeStamp);\n    }\n    else {\n        const dtParams = this.dtParams = this.parse(dateTimeStamp);\n        if (dtParams.length) {\n            this.nativeDate = new Date(...dtParams);\n            date = this.nativeDate;\n        }\n    }\n    return date;\n};\n\nDateTimeFormatter.prototype.checkIfOnlyYear = function(len) {\n    return len === 1 && this.format.match(/y|Y/g).length;\n};\n\n/*\n * Represents JS native date to a user specified format.\n *\n * @param format {String} : The format according to which the date is to be represented\n * @return {String} : The formatted date string\n */\nDateTimeFormatter.prototype.formatAs = function (format, dateTimeStamp) {\n    let nativeDate;\n\n    if (dateTimeStamp) {\n        nativeDate = this.nativeDate = this.getNativeDate(dateTimeStamp);\n    } else if (!(nativeDate = this.nativeDate)) {\n        nativeDate = this.getNativeDate(dateTimeStamp);\n    }\n\n    return DateTimeFormatter.formatAs(nativeDate, format);\n};\n\nexport { DateTimeFormatter as default };\n","/**\n * Generates domain for measure field.\n *\n * @param {Array} data - The array of data.\n * @return {Array} Returns the measure domain.\n */\nexport default (data) => {\n    let min = Number.POSITIVE_INFINITY;\n    let max = Number.NEGATIVE_INFINITY;\n\n    data.forEach((d) => {\n        if (d < min) {\n            min = d;\n        }\n        if (d > max) {\n            max = d;\n        }\n    });\n\n    return [min, max];\n};\n","/* eslint-disable */\nconst OBJECTSTRING = 'object';\nconst objectToStrFn = Object.prototype.toString;\nconst objectToStr = '[object Object]';\nconst arrayToStr = '[object Array]';\n\nfunction checkCyclicRef(obj, parentArr) {\n    let i = parentArr.length;\n    let bIndex = -1;\n\n    while (i) {\n        if (obj === parentArr[i]) {\n            bIndex = i;\n            return bIndex;\n        }\n        i -= 1;\n    }\n\n    return bIndex;\n}\n\nfunction merge(obj1, obj2, skipUndef, tgtArr, srcArr) {\n    var item,\n        srcVal,\n        tgtVal,\n        str,\n        cRef;\n    // check whether obj2 is an array\n    // if array then iterate through it's index\n    // **** MOOTOOLS precution\n\n    if (!srcArr) {\n        tgtArr = [obj1];\n        srcArr = [obj2];\n    }\n    else {\n        tgtArr.push(obj1);\n        srcArr.push(obj2);\n    }\n\n    if (obj2 instanceof Array) {\n        for (item = 0; item < obj2.length; item += 1) {\n            try {\n                srcVal = obj1[item];\n                tgtVal = obj2[item];\n            }\n            catch (e) {\n                continue;\n            }\n\n            if (typeof tgtVal !== OBJECTSTRING) {\n                if (!(skipUndef && tgtVal === undefined)) {\n                    obj1[item] = tgtVal;\n                }\n            }\n            else {\n                if (srcVal === null || typeof srcVal !== OBJECTSTRING) {\n                    srcVal = obj1[item] = tgtVal instanceof Array ? [] : {};\n                }\n                cRef = checkCyclicRef(tgtVal, srcArr);\n                if (cRef !== -1) {\n                    srcVal = obj1[item] = tgtArr[cRef];\n                }\n                else {\n                    merge(srcVal, tgtVal, skipUndef, tgtArr, srcArr);\n                }\n            }\n        }\n    }\n    else {\n        for (item in obj2) {\n            try {\n                srcVal = obj1[item];\n                tgtVal = obj2[item];\n            }\n            catch (e) {\n                continue;\n            }\n\n            if (tgtVal !== null && typeof tgtVal === OBJECTSTRING) {\n                // Fix for issue BUG: FWXT-602\n                // IE < 9 Object.prototype.toString.call(null) gives\n                // '[object Object]' instead of '[object Null]'\n                // that's why null value becomes Object in IE < 9\n                str = objectToStrFn.call(tgtVal);\n                if (str === objectToStr) {\n                    if (srcVal === null || typeof srcVal !== OBJECTSTRING) {\n                        srcVal = obj1[item] = {};\n                    }\n                    cRef = checkCyclicRef(tgtVal, srcArr);\n                    if (cRef !== -1) {\n                        srcVal = obj1[item] = tgtArr[cRef];\n                    }\n                    else {\n                        merge(srcVal, tgtVal, skipUndef, tgtArr, srcArr);\n                    }\n                }\n                else if (str === arrayToStr) {\n                    if (srcVal === null || !(srcVal instanceof Array)) {\n                        srcVal = obj1[item] = [];\n                    }\n                    cRef = checkCyclicRef(tgtVal, srcArr);\n                    if (cRef !== -1) {\n                        srcVal = obj1[item] = tgtArr[cRef];\n                    }\n                    else {\n                        merge(srcVal, tgtVal, skipUndef, tgtArr, srcArr);\n                    }\n                }\n                else {\n                    obj1[item] = tgtVal;\n                }\n            }\n            else {\n                if (skipUndef && tgtVal === undefined) {\n                    continue;\n                }\n                obj1[item] = tgtVal;\n            }\n        }\n    }\n    return obj1;\n}\n\n\nfunction extend2 (obj1, obj2, skipUndef) {\n    //if none of the arguments are object then return back\n    if (typeof obj1 !== OBJECTSTRING && typeof obj2 !== OBJECTSTRING) {\n        return null;\n    }\n\n    if (typeof obj2 !== OBJECTSTRING || obj2 === null) {\n        return obj1;\n    }\n\n    if (typeof obj1 !== OBJECTSTRING) {\n        obj1 = obj2 instanceof Array ? [] : {};\n    }\n    merge(obj1, obj2, skipUndef);\n    return obj1;\n}\n\nexport { extend2 as default };\n","import { DataFormat } from '../enums';\n\n/**\n * Checks whether the value is an array.\n *\n * @param  {*} val - The value to be checked.\n * @return {boolean} Returns true if the value is an array otherwise returns false.\n */\nexport function isArray (val) {\n    return Array.isArray(val);\n}\n\n/**\n * Checks whether the value is an object.\n *\n * @param  {*} val - The value to be checked.\n * @return {boolean} Returns true if the value is an object otherwise returns false.\n */\nexport function isObject (val) {\n    return val === Object(val);\n}\n\n/**\n * Checks whether the value is a string value.\n *\n * @param  {*} val - The value to be checked.\n * @return {boolean} Returns true if the value is a string value otherwise returns false.\n */\nexport function isString (val) {\n    return typeof val === 'string';\n}\n\n/**\n * Checks whether the value is callable.\n *\n * @param {*} val - The value to be checked.\n * @return {boolean} Returns true if the value is callable otherwise returns false.\n */\nexport function isCallable (val) {\n    return typeof val === 'function';\n}\n\n/**\n * Returns the unique values from the input array.\n *\n * @param {Array} data - The input array.\n * @return {Array} Returns a new array of unique values.\n */\nexport function uniqueValues (data) {\n    return [...new Set(data)];\n}\n\nexport const getUniqueId = () => `id-${new Date().getTime()}${Math.round(Math.random() * 10000)}`;\n\n/**\n * Checks Whether two arrays have same content.\n *\n * @param {Array} arr1 - The first array.\n * @param {Array} arr2 - The 2nd array.\n * @return {boolean} Returns whether two array have same content.\n */\nexport function isArrEqual(arr1, arr2) {\n    if (!isArray(arr1) || !isArray(arr2)) {\n        return arr1 === arr2;\n    }\n\n    if (arr1.length !== arr2.length) {\n        return false;\n    }\n\n    for (let i = 0; i < arr1.length; i++) {\n        if (arr1[i] !== arr2[i]) {\n            return false;\n        }\n    }\n\n    return true;\n}\n\n/**\n * It is the default number format function for the measure field type.\n *\n * @param {any} val - The input value.\n * @return {number} Returns a number value.\n */\nexport function formatNumber(val) {\n    return val;\n}\n\n/**\n * Returns the detected data format.\n *\n * @param {any} data - The input data to be tested.\n * @return {string} Returns the data format name.\n */\nexport const detectDataFormat = (data) => {\n    if (isString(data)) {\n        return DataFormat.DSV_STR;\n    } else if (isArray(data) && isArray(data[0])) {\n        return DataFormat.DSV_ARR;\n    } else if (isArray(data) && (data.length === 0 || isObject(data[0]))) {\n        return DataFormat.FLAT_JSON;\n    }\n    return null;\n};\n","export { default as DateTimeFormatter } from './date-time-formatter';\nexport { default as columnMajor } from './column-major';\nexport { default as generateMeasureDomain } from './domain-generator';\nexport { default as extend2 } from './extend2';\nexport * from './helper';\n","import { defReducer, fnList } from '../operator';\n\n/**\n * A page level storage which stores, registers, unregisters reducers for all the datamodel instances. There is only one\n * reducer store available in a page. All the datamodel instances receive same instance of reducer store. DataModel\n * out of the box provides handful of {@link reducer | reducers} which can be used as reducer funciton.\n *\n * @public\n * @namespace DataModel\n */\nclass ReducerStore {\n    constructor () {\n        this.store = new Map();\n        this.store.set('defReducer', defReducer);\n\n        Object.entries(fnList).forEach((key) => {\n            this.store.set(key[0], key[1]);\n        });\n    }\n\n    /**\n     * Changes the `defaultReducer` globally. For all the fields which does not have `defAggFn` mentioned in schema, the\n     * value of `defaultReducer` is used for aggregation.\n     *\n     * @public\n     * @param {string} [reducer='sum'] - The name of the default reducer. It picks up the definition from store by doing\n     * name lookup. If no name is found then it takes `sum` as the default reducer.\n     * @return {ReducerStore} Returns instance of the singleton store in page.\n     */\n    defaultReducer (...params) {\n        if (!params.length) {\n            return this.store.get('defReducer');\n        }\n\n        let reducer = params[0];\n\n        if (typeof reducer === 'function') {\n            this.store.set('defReducer', reducer);\n        } else {\n            reducer = String(reducer);\n            if (Object.keys(fnList).indexOf(reducer) !== -1) {\n                this.store.set('defReducer', fnList[reducer]);\n            } else {\n                throw new Error(`Reducer ${reducer} not found in registry`);\n            }\n        }\n        return this;\n    }\n\n    /**\n     *\n     * Registers a {@link reducer | reducer}.\n     * A {@link reducer | reducer} has to be registered before it is used.\n     *\n     * @example\n     *  // find the mean squared value of a given set\n     *  const reducerStore = DataModel.Reducers();\n     *\n     *  reducers.register('meanSquared', (arr) => {\n     *      const squaredVal = arr.map(item => item * item);\n     *      let sum = 0;\n     *      for (let i = 0, l = squaredVal.length; i < l; i++) {\n     *          sum += squaredVal[i++];\n     *      }\n     *\n     *      return sum;\n     *  })\n     *\n     *  // datamodel (dm) is already prepared with cars.json\n     *  const dm1 = dm.groupBy(['origin'], {\n     *      accleration: 'meanSquared'\n     *  });\n     *\n     * @public\n     *\n     * @param {string} name formal name for a reducer. If the given name already exists in store it is overridden by new\n     *      definition.\n     * @param {Function} reducer definition of {@link reducer} function.\n     *\n     * @return {Function} function for unregistering the reducer.\n     */\n    register (name, reducer) {\n        if (typeof reducer !== 'function') {\n            throw new Error('Reducer should be a function');\n        }\n\n        name = String(name);\n        this.store.set(name, reducer);\n\n        return () => { this.__unregister(name); };\n    }\n\n    __unregister (name) {\n        if (this.store.has(name)) {\n            this.store.delete(name);\n        }\n    }\n\n    resolve (name) {\n        if (name instanceof Function) {\n            return name;\n        }\n        return this.store.get(name);\n    }\n}\n\nconst reducerStore = (function () {\n    let store = null;\n\n    function getStore () {\n        if (store === null) {\n            store = new ReducerStore();\n        }\n        return store;\n    }\n    return getStore();\n}());\n\nexport default reducerStore;\n","/**\n * The wrapper class on top of the primitive value of a field.\n *\n * @todo Need to have support for StringValue, NumberValue, DateTimeValue\n * and GeoValue. These types should expose predicate API mostly.\n */\nclass Value {\n\n  /**\n   * Creates new Value instance.\n   *\n   * @param {*} val - the primitive value from the field cell.\n   * @param {string | Field} field - The field from which the value belongs.\n   */\n    constructor (val, field) {\n        Object.defineProperty(this, '_value', {\n            enumerable: false,\n            configurable: false,\n            writable: false,\n            value: val\n        });\n\n        this.field = field;\n    }\n\n  /**\n   * Returns the field value.\n   *\n   * @return {*} Returns the current value.\n   */\n    get value () {\n        return this._value;\n    }\n\n  /**\n   * Converts to human readable string.\n   *\n   * @override\n   * @return {string} Returns a human readable string of the field value.\n   *\n   */\n    toString () {\n        return String(this.value);\n    }\n\n  /**\n   * Returns the value of the field.\n   *\n   * @override\n   * @return {*} Returns the field value.\n   */\n    valueOf () {\n        return this.value;\n    }\n}\n\nexport default Value;\n","(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"hyperdis\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"hyperdis\"] = factory();\n\telse\n\t\troot[\"hyperdis\"] = factory();\n})(window, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"./src/index.js\");\n","import {\n    pullableRecent,\n    pullableEnd\n} from './utils';\n\nexport default class ElectricNode {\n    constructor () {\n        this.edges = [];\n        this.listeners = {\n            nextFrame: [],\n            currentFrame: []\n        };\n    }\n\n    addEdges (...nodes) {\n        this.edges.push(...nodes);\n        return this;\n    }\n\n    regListenerForCurrFrame (fn) {\n        const lstnrs = this.listeners.currentFrame;\n        let index = lstnrs.push(pullableRecent(this.edges, fn)) - 1;\n\n        return () => {\n            this.listeners.currentFrame = lstnrs.filter((fn, i) => i !== index);\n        };\n    }\n\n    regListenerForNextFrame (fn) {\n        const lstnrs = this.listeners.nextFrame;\n        let index = lstnrs.push(pullableEnd(this.edges, fn)) - 1;\n\n        return () => {\n            this.listeners.nextFrame = lstnrs.filter((fn, i) => i !== index);\n        };\n    }\n\n    hasNextFrameListener () {\n        return !!this.listeners.nextFrame.length;\n    }\n}\n","export default class GraphNode {\n    constructor (name, qualifiedName, options) {\n        /* istanbul ignore next */options = options || {};\n        this.name = name;\n        this.qualifiedName = qualifiedName;\n        this.edges = [];\n        this.outgoingEdges = [];\n        this._seed = null;\n        this.requireResolve = true;\n        this.retriever = options.retriever;\n        this.history = [];\n        this.resolver = null;\n        this.electricEdges = [];\n    }\n\n    addDependencies (...dep) {\n        this.edges.push(...dep);\n        dep.forEach(entry => entry.outgoingEdges.push(this));\n        return this;\n    }\n\n    addElectricNode (node) {\n        this.electricEdges.push(node);\n        return this;\n    }\n\n    get seed () {\n        return this._seed;\n    }\n\n    set seed (value) {\n        this._seed = value;\n        this.requireResolve = true;\n        return this;\n    }\n\n    resolve () {\n        this.seed = this.resolver(...this.retrieveDetails());\n        this.history.push(this.seed);\n        this.requireResolve = false;\n        return this;\n    }\n\n    retrieveDetails () {\n        if (this.edges.length === 0) {\n            return [{\n                name: this.name,\n                qualifiedName: this.qualifiedName,\n                value: this.seed\n            }];\n        }\n        return this.retriever(...this.edges.map(edge => edge.qualifiedName));\n    }\n\n    repeatHead () {\n        const\n            history = this.history,\n            head = history[history.length - 1];\n        // @todo- Akash, write test case if history.length === 0 to pass code coverage\n        if (history.length === 0) {\n            return this;\n        }\n        history.push(head);\n        return this;\n    }\n\n    flush () {\n        const hist = this.history,\n            head = hist[hist.length - 1];\n        hist.length = 0;\n        hist.push(head);\n        return this;\n    }\n\n    isRoot () {\n        return this.name === null;\n    }\n}\n","import {\n    isSimpleObject,\n    resolver,\n    // upstreamNodes,\n    flat,\n    resolveDependencyOrder,\n    getUpstreamNodes,\n    ForeignSet,\n    fetch,\n    CustomResolver,\n    scheduler\n} from './utils';\nimport Node from './graph-node';\nimport ElectricNode from './electric-node';\n\nexport default class Graph {\n    constructor () {\n        this.qualifiedNodeMap = {};\n        this.retriever = fetch(this.qualifiedNodeMap);\n        this.root = new Node(null, null, { retriever: this.retriever });\n        this.root.resolver = resolver.accumulate;\n\n        this._wholeSet = new ForeignSet([]);\n        this._propagate = true;\n        this.propagationOverride = {\n            currentFrameListeners: false,\n            nextFrameListeners: false\n        };\n\n        this._schedule = scheduler((payload) => {\n            let qname;\n            for (qname in payload.flushTarget) {\n                if (!({}).hasOwnProperty.call(this.qualifiedNodeMap, qname)) {\n                    return;\n                }\n                this.qualifiedNodeMap[qname].flush();\n            }\n        });\n    }\n\n    createNodesFrom (obj, mount) {\n        let val,\n            resolveReqList;\n        const qualifiedNodeMap = this.qualifiedNodeMap,\n            root = this.root,\n            retriever = this.retriever;\n        const qnames = [];\n        (function rec (objn, qualifiedName, history) {\n            let key,\n                qname,\n                perv,\n                node;\n\n            for (key in objn) {\n                if (!({}).hasOwnProperty.call(objn, key)) {\n                    continue;\n                }\n                qname = `${qualifiedName}${key}`;\n                qnames.push(qname);\n                node = new Node(key, qname, { retriever });\n                qualifiedNodeMap[qname] = node;\n\n                if ((perv = history.perv) !== undefined) {\n                    perv.addDependencies(node);\n                } else {\n                    // top most level entries\n                    root.addDependencies(node);\n                }\n\n                if (isSimpleObject(val = objn[key])) {\n                    rec(val, `${qualifiedName}${key}.`, { perv: node });\n                    node.resolver = resolver.accumulate;\n                } else if (val instanceof CustomResolver) {\n                    node.resolver = val.get();\n                    node.addDependencies(...val.getDependencies().map(qname => qualifiedNodeMap[qname]));\n                } else {\n                    node.resolver = resolver.identity;\n                    node.seed = val;\n                    // node.resolve();\n                }\n            }\n        }(obj, mount === null ? '' : `${mount}.`, {\n            perv: qualifiedNodeMap[mount]\n        }));\n\n        this._wholeSet.append(qnames);\n\n        // Recalculate the model without firing the listeners\n        // @todo selective branch resolve. Currently resolve gets called even for a branch which was updated\n        resolveReqList = this.constructor.getResolvedList(root).concat(root).filter(node => node.requireResolve);\n        resolveReqList.forEach(node => node.resolve());\n        getUpstreamNodes(resolveReqList).forEach(node => node.resolve());\n        return this;\n    }\n\n    getNodeValue (prop) {\n        if (prop in this.qualifiedNodeMap) {\n            return this.qualifiedNodeMap[prop].seed;\n        }\n        return undefined;\n    }\n\n    createElectricNodeOf (props, fnSpec) {\n        const nodes = props.map(prop => this.qualifiedNodeMap[prop]),\n            eNode = new ElectricNode().addEdges(...nodes);\n\n        nodes.forEach(node => node.addElectricNode(eNode));\n        return eNode[`regListenerFor${fnSpec.type}`](fnSpec.fn);\n    }\n\n    update (...params) {\n        let changedSet,\n            upstreamNodes;\n        const\n            electricEdges = [],\n            nodes = params.map((entry) => {\n                entry[0].seed = entry[1];\n                return entry[0];\n            });\n        nodes.forEach(node => node.resolve());\n        electricEdges.push(...flat(...nodes.map(node => node.electricEdges)));\n        changedSet = new ForeignSet(nodes.map(node => node.qualifiedName));\n\n        if (!this._propagate) {\n            this.__execUniqueElectricEdges(electricEdges);\n            this._propagate = true;\n            return this;\n        }\n\n        upstreamNodes = getUpstreamNodes(nodes);\n        upstreamNodes.forEach(upstreamNode => upstreamNode.resolve());\n        changedSet.append(upstreamNodes.map(node => node.qualifiedName));\n        electricEdges.push(...flat(...upstreamNodes.map(node => node.electricEdges)));\n\n        this.__execUniqueElectricEdges(Array.from(new Set(electricEdges)), changedSet);\n        return this;\n    }\n\n    __execUniqueElectricEdges (electricEdges, changedSet) {\n        const\n            cfLstnrs = [], // current frame listeners\n            nfLstnrs = []; // next frame listeners\n        if (changedSet) {\n            const\n                differenceSet = ForeignSet.difference(this._wholeSet, changedSet),\n                entries = differenceSet.toArray();\n\n            entries.forEach(entry => this.qualifiedNodeMap[entry].repeatHead());\n        }\n\n        electricEdges.forEach((e) => {\n            cfLstnrs.push(...e.listeners.currentFrame);\n        });\n        electricEdges.forEach((e) => {\n            nfLstnrs.push(...e.listeners.nextFrame);\n        });\n\n        !this.propagationOverride.currentFrameListeners && cfLstnrs.forEach(fn => fn());\n        !this.propagationOverride.nextFrameListeners && this._schedule(nfLstnrs, { flushTarget: changedSet });\n        this.resetPropagationOverride();\n        return this;\n    }\n\n    resetNodeValue (...qnames) {\n        const nodes = qnames.map(qname => this.qualifiedNodeMap[qname]),\n            args = nodes.map(node => [node, node.seed]);\n        this.update(...args);\n        return this;\n    }\n\n    static getResolvedList (node) {\n        const resolved = [];\n        resolveDependencyOrder(node, resolved, {});\n        return resolved;\n    }\n\n    stopPropagation () {\n        this._propagate = false;\n        return this;\n    }\n\n    resetPropagationOverride () {\n        this.propagationOverride.currentFrameListeners = false;\n        this.propagationOverride.nextFrameListeners = false;\n        return this;\n    }\n\n    setPropagationOverride (key) {\n        this.propagationOverride[`${key}Listeners`] = true;\n        return this;\n    }\n\n    getNodeFromQualifiedName (qname) {\n        return this.qualifiedNodeMap[qname];\n    }\n}\n","import Model from './model';\n\nexport default Model;\n","import Graph from './graph';\nimport { CustomResolver, fetchAggregator } from './utils';\n\n/**\n * The container class for Hyperdis. Hyperdis is an enabler for observable object with few interesting features like,\n * calculated property, next frame and same frame listeners, multiple listeners etc with a dependency resolving system.\n * It internally uses a graph to hold the hierarchial relationship of a object. Model is merely a container which\n * ties all the components together.\n *\n * @todo Circular dependency detection is not present\n *\n * @example check src/index.spec.js\n * @class\n */\nclass Model {\n    constructor () {\n        this._graph = new Graph();\n        this._lockFlag = false;\n        this._reqQ = [];\n    }\n\n    /**\n     * Static method to create and init the model with an observable seed\n     *\n     * @param {Object} obj The target object which is required to be made observable\n     * @return {Model} instance of the observable object model\n     */\n    static create (obj) {\n        return new Model()._addPropInModel(null, obj);\n    }\n\n    /**\n     * Appends more observable property on the already observable instance. This mutates the original model.\n     *\n     * This function works in two mode. One being\n     * @param {String} mountPoint the property on which the new set of properties will be mounted. If its a nested\n     *                          property then the mountPoint has to be written such a way so it feels like you are\n     *                          accessing the object. If the mount point is not found then he obeservables are added in\n     *                          the root.\n     * @param {Object} The target object which is required to be made observable\n     *\n     * Another being\n     * @param {Object} The target object which is required to be made observable\n     *\n     * @return {Model} instance of the observable object model\n     */\n    append (...params) {\n        let mountPoint,\n            obj;\n\n        if (params.length === 1) {\n            mountPoint = null;\n            obj = params[0];\n        } else {\n            mountPoint = params[0];\n            obj = params[1];\n        }\n\n        this._addPropInModel(mountPoint, obj);\n        return this;\n    }\n\n    /**\n     * Creates a calculated variable from existing variable. This variable can't be updated from outside.\n     * @param {string} mountpoint property path on which the new variable will be placed\n     * @param {string} name name of the variable. If the variable could have hierarchy like `limits.start`\n     * @param {Function} fn funtion where the dependent variables are injected based on the dependency requirement\n     */\n    calculatedProp (...params) {\n        let calculationConfig,\n            customResolver,\n            varName,\n            mount,\n            fetchFn;\n\n        if (params.length > 2) {\n            mount = params[0];\n            varName = params[1];\n            fetchFn = params[2];\n        } else {\n            mount = null;\n            varName = params[0];\n            fetchFn = params[1];\n        }\n\n        calculationConfig = fetchFn(fetchAggregator);\n        customResolver = new CustomResolver(calculationConfig.fn);\n        customResolver.addDependencies(...calculationConfig.dependencies);\n\n        this._addPropInModel(mount, { [varName]: customResolver });\n        return this;\n    }\n\n    // eslint-disable-next-line require-jsdoc\n    _addPropInModel (mountPoint, obj) {\n        this._graph.createNodesFrom(obj, mountPoint);\n        return this;\n    }\n\n    /**\n     * Register a listener in the current frame when a property or group of properties is changed.\n     *\n     * @example\n     * This function takes a single or group of property and handler which is called when any of the properties are\n     * changed.\n     * When a single property is changed the handler is called with two parameter, what was the old value of the state\n     * property and what is the new value.\n     * myState.on('range.start', (oldValue, newValue) => {\n     *      console.log('Value before prop change', oldValue);\n     *      console.log('Value after prop change', newValue);\n     * });\n     *\n     * myState.prop('range.start', 9);\n     * // Output\n     * Value before prop change 1\n     * Value after prop change 9\n     *\n     * If a handler is registered on change of a property which has another state property as value, then the handler\n     * gets called whenever any state property connected to it gets changed\n     *\n     * myState.on('range', (oldValue, newValue) => {\n     *      console.log('Value before prop change', oldValue);\n     *      console.log('Value after prop change', newValue);\n     * });\n     *\n     * myState.prop('range.start', 10);\n     * myState.prop('range.type.absolute', false);\n     *\n     * // Output\n     * Value before prop change\n     * range {\n     *      start: 9,\n     *      end: 5,\n     *      type: {\n     *          absolute: true\n     *      }\n     * }\n     * Value after prop change\n     * range: {\n     *      start: 10,\n     *      end: 5,\n     *      type: {\n     *          absolute: false\n     *      }\n     * }\n     * If a handler is registered with more than one property change then, the handler is called when any of the\n     * properties gets changed. In this cast the handler is called with more than one parameter: each for one state\n     * property which is registered for listening. Each parameter is of type array containing [oldValue, newValue]\n     *\n     * myState.on('range.start', 'range.end', (start, end) => {\n     *      console.log('Start', start);\n     *      console.log('End', end);\n     * });\n     *\n     * myState.prop('range.start', 12);\n     *\n     * // Output\n     * Start [10, 12]\n     * End [5, 5]\n     *\n     * myState.prop('range.end', 7);\n     *\n     * // Output\n     * Start [12, 12]\n     * End [5, 7]\n     *\n     * The on returns a function which is when called the listener registered gets unregistered\n     *\n     * let unsub = myState.on(['range.start', 'range.end'], (start, end) => {\n     *      console.log('Start', start);\n     *      console.log('End', end);\n     * });\n     *\n     * // Unsubscribe\n     * unsub()\n     *\n     * On takes an optional boolean value as the last parameter, which if passed as a true value the handler gets called\n     * during registration itself.\n     *\n     * @param {Array.<String>} props List of properties which is of interest\n     * @param {Function} fn Listener to be executed when any of them is changed. The listener is called with the old\n     *                      value and new value of the properties\n     * @param {*} instantCall When registered if the function is to be triggered with the value of the property\n     *\n     * @return {Function} function to unsubscribe from the listeners registry\n     */\n    on (props, fn, instantCall) {\n        const\n            propsArr = props instanceof Array ? props : [props],\n            // All there listeners will be executed in the current stack frame\n            unsub = this._graph.createElectricNodeOf(propsArr, {\n                type: 'CurrFrame',\n                fn\n            });\n\n        if (instantCall) {\n            // Bar current next frame listeners from getting fired\n            this._graph.stopPropagation().setPropagationOverride('nextFrame').resetNodeValue(...props);\n        }\n        return unsub;\n    }\n\n    /**\n     * Register a listener for the next frame when a property or group of properties is changed.\n     *\n     * @example\n     * See the examples for the on listener\n     *\n     * @param {Array.<String>} props List of properties which is of interest\n     * @param {Function} fn Listener to be executed when any of them is changed. The listener is called with the old\n     *                      value and new value of the properties. Here the oldvalue is last value of the last frame\n     * @param {*} instantCall When registered if the function is to be triggered with the value of the property\n     *\n     * @return {Function} function to unsubscribe from the listeners registry\n     */\n    next (props, fn, instantCall) {\n        const\n            propsArr = props instanceof Array ? props : [props],\n            // All there listeners will be executed at the tick of next animation frame\n            unsub = this._graph.createElectricNodeOf(propsArr, {\n                type: 'NextFrame',\n                fn\n            });\n\n        // @todo check support for this from the graph side\n        if (instantCall) {\n            // Bar current frame listeners from getting fired\n            this._graph.stopPropagation().setPropagationOverride('currentFrame').resetNodeValue(...props);\n        }\n\n        return unsub;\n    }\n\n    /**\n     * Lock queues the request of property change and releases the change when unlock is called. This is helpful when\n     * multiple property is getting called and the model listeners are to be fired once at the end of update.\n     *\n     * @return {Model} instance of the model\n     */\n    lock () {\n        this._lockFlag = true;\n        this._reqQ.length = 0;\n        return this;\n    }\n\n    /**\n     * Unlock unleashes the change done after the lock was called.\n\n     * @return {Model} instance of the model\n     */\n    unlock () {\n        this._lockFlag = false;\n        this.setProp(...this._reqQ);\n        this._reqQ.length = 0;\n        return this;\n    }\n\n    /**\n     * This acts as getter and setter. If the function is called by passing only one argument, it retrieve the value\n     * associated with the property. If the same function is called using two parameters, first one being the property\n     * and second one being the value, then the value is set for the property and the handlers are called (if any)\n     * which got registered using the on function\n     *\n     * Getter\n     * @param {string} prop property path whose value to be retrieved\n     * @return {Object} value of the property at the time of call\n     *\n     * Setter\n     * @param {string} property property path whose value to be ser\n     * @return {Model} instance of the model\n     */\n    prop (...params) {\n        let prop,\n            val,\n            len;\n\n        switch (len = params.length) {\n        case 1:\n            prop = params[0];\n            break;\n\n        case 2:\n            prop = params[0];\n            val = params[1];\n            break;\n\n        default:\n            return this;\n        }\n\n        if (len === 2) {\n            this._lockFlag ? this._reqQ.push([prop, val]) : this.setProp([prop, val]);\n            return this;\n        }\n\n        return this._graph.getNodeValue(prop);\n    }\n\n    // eslint-disable-next-line require-jsdoc\n    setProp (...props) {\n        // Filter out the calculated variables, so that it cant be changed from outside\n        // @todo if a node is not leafValue, and change is called, ignore it too\n        // props = props.filter(prop => !(VirtualObj.walkTill(prop[0].split('.'), this._vObj).leafValue()\n        //     instanceof CalculatedVar));\n\n        if (props.length === 0) {\n            return this;\n        }\n\n        this._graph.update(...props.map(prop => [this._graph.getNodeFromQualifiedName(prop[0]), prop[1]]));\n        return this;\n    }\n\n    /**\n     * Retrieves the graph representation of the object\n     * @return {Graph} instance of the graph associated to the model\n     */\n    graph () {\n        return this._graph;\n    }\n\n    /**\n     * Get serialized data from the model\n     *\n     * @return {Object} Serialized data\n     */\n    serialize () {\n        return this._graph.root.seed;\n    }\n}\n\nexport default Model;\n","/* global window */\n\nimport ForeignSet from './set';\n\nconst\n    isSimpleObject = (obj) => {\n        let token;\n        if (typeof obj === 'object') {\n            if (obj === null) { return false; }\n            token = Object.prototype.toString.call(obj);\n            if (token === '[object Object]') {\n                return (obj.constructor.toString().match(/^function (.*)\\(\\)/m) || [])[1] === 'Object';\n            }\n        }\n        return false;\n    },\n    minMsThreshold = 16,\n    /* istanbul ignore next */win = typeof window === 'undefined' ? (this || {}) : window,\n    /* istanbul ignore next */ reqAnimFrame = win.requestAnimationFrame || win.webkitRequestAnimationFrame ||\n        win.mozRequestAnimationFrame || win.oRequestAnimationFrame ||\n        win.msRequestAnimationFrame ||\n        function (callback) {\n            setTimeout(callback, minMsThreshold);\n        },\n\n    getTimeBasedId = () => {\n        if (getTimeBasedId.__lastTime === new Date().getTime()) {\n            return (getTimeBasedId.__lastTime).toString() + (getTimeBasedId.__id++).toString();\n        }\n\n        getTimeBasedId.__id = 0;\n        getTimeBasedId.__lastTime = new Date().getTime();\n        return (getTimeBasedId.__lastTime).toString() + (getTimeBasedId.__id++).toString();\n    },\n    pullableRecent = (nodes, fn) => {\n        let nFn = () => {\n            fn(...nodes.map((node) => {\n                const\n                    hist = node.history,\n                    l = hist.length - 1;\n                return [hist[l - 1 < 0 ? 0 : l - 1], hist[l]];\n            }));\n        };\n        nFn.__id = getTimeBasedId();\n        return nFn;\n    },\n    pullableEnd = (nodes, fn) => {\n        let nFn = () => {\n            fn(...nodes.map((node) => {\n                const hist = node.history;\n                return [hist[0], hist[hist.length - 1]];\n            }));\n        };\n        nFn.__id = getTimeBasedId();\n        return nFn;\n    },\n    unique = fns => fns\n                    .reduce((store, fn) => {\n                // @warn function with side effect, it mutates the store passed during initialization\n                        if (fn.__id in store.map) {\n                            return store;\n                        }\n\n                        store.map[fn.__id] = 1;\n                        store.unique.push(fn);\n\n                        return store;\n                    }, { map: {}, unique: [] })\n                    .unique,\n    compose = fns => () => {\n        fns.forEach(fn => fn());\n    },\n    flat = (...params) => {\n        const res = [];\n        params.forEach(param => res.push(...param));\n        return res;\n    },\n    identityMap = arrays => arrays,\n    splitPathProp = (path) => {\n        const pathArr = path.split('.'),\n            len = pathArr.length;\n        return [pathArr.slice(0, len - 1), pathArr[len - 1]];\n    },\n    scheduler = (onFinishCallback) => {\n        let queue = [],\n            animationFrame = null;\n\n        onFinishCallback = onFinishCallback &&\n            typeof onFinishCallback === 'function' && onFinishCallback || (() => { });\n\n        return (listeners, payload) => {\n            [].push.apply(queue, listeners);\n            if (animationFrame === null) {\n                animationFrame = reqAnimFrame(() => {\n                    const tempQ = queue.slice(0);\n                    queue.length = 0;\n                    animationFrame = null;\n\n                    unique(tempQ).forEach(fn => fn());\n                    onFinishCallback(payload);\n                });\n            }\n        };\n    },\n    fetch = namedNode => (...params) => params.map((param) => {\n        const node = namedNode[param];\n        return {\n            name: node.name,\n            qualifiedName: node.qualifiedName,\n            value: node.seed\n        };\n    }),\n    fetchAggregator = (...params) => ({\n        dependencies: params.slice(0, params.length - 1),\n        fn: params[params.length - 1]\n    }),\n    getUpstreamNodes = (list) => {\n        let res = [];\n        const map = {};\n        list.forEach(node => map[node.qualifiedName] = -1);\n        function rec (arr) {\n            arr.forEach((node) => {\n                let qname,\n                    placedIndex,\n                    preArr,\n                    postArr;\n                if (!((qname = node.qualifiedName) in map)) {\n                    map[qname] = res.push(node) - 1;\n                } else {\n                    placedIndex = map[qname];\n                    if (placedIndex !== -1 && placedIndex !== res.length - 1) {\n                        // If not the last element, readjust the array so that the later dependency position is saved\n                        preArr = res.slice(0, placedIndex);\n                        postArr = res.slice(placedIndex + 1);\n                        res = preArr.concat(postArr);\n\n                        // reset the index in map\n                        postArr.forEach((elem, i) => map[elem.qualifiedName] = i + preArr.length);\n                        map[qname] = res.push(node) - 1;\n                    }\n                }\n                rec(node.outgoingEdges);\n            });\n        }\n        rec(list);\n        return res;\n    },\n    resolver = {\n        accumulate: (...params) => {\n            const resp = {};\n            params.forEach((nodeDetails) => {\n                Object.assign(resp, { [nodeDetails.name]: nodeDetails.value });\n            });\n            return resp;\n        },\n        identity: nodeDetails => nodeDetails.value\n    };\n\nfunction resolveDependencyOrder (node, resolved, resolveMap) {\n    let qname;\n    node.edges.forEach((neighbour) => {\n        resolveDependencyOrder(neighbour, resolved, resolveMap);\n    });\n\n    if (node.isRoot() || (qname = node.qualifiedName) in resolveMap) {\n        return;\n    }\n    resolved.push(node);\n    resolveMap[qname] = 1;\n}\n\nclass CustomResolver {\n    constructor (resolver) {\n        this.fn = resolver;\n        this.dep = [];\n    }\n\n    addDependencies(...dep) {\n        this.dep.push(...dep);\n        return this;\n    }\n\n    getDependencies () {\n        return this.dep;\n    }\n\n    get () {\n        return this.fn;\n    }\n}\n\nexport {\n    isSimpleObject,\n    scheduler,\n    compose,\n    flat,\n    identityMap,\n    pullableEnd,\n    pullableRecent,\n    unique,\n    splitPathProp,\n    resolver,\n    ForeignSet,\n    resolveDependencyOrder,\n    fetch,\n    fetchAggregator,\n    CustomResolver,\n    getUpstreamNodes\n};\n","const makeEntry = (arr, sCon) => {\n    arr.forEach((elem) => {\n        if (elem === undefined || elem === null) {\n            return;\n        }\n        sCon[elem] = 1;\n    });\n};\n\nexport default class ForeignSet {\n    constructor (arr) {\n        this._set = {};\n        makeEntry(arr, this._set);\n    }\n\n    append (arr) {\n        makeEntry(arr, this._set);\n        return this;\n    }\n\n    toArray () {\n        return Object.keys(this._set);\n    }\n\n    static difference (set1, set2) {\n        let key;\n        const filteredKeys = [],\n            s1 = set1._set,\n            s2 = set2._set;\n        for (key in s1) {\n            if (!({}).hasOwnProperty.call(s1, key)) {\n                continue;\n            }\n            if (key in s2) {\n                continue;\n            }\n            filteredKeys.push(key);\n        }\n        return new ForeignSet(filteredKeys);\n    }\n}\n","module.exports = function(module) {\n\tif (!module.webpackPolyfill) {\n\t\tmodule.deprecate = function() {};\n\t\tmodule.paths = [];\n\t\t// module.parent = undefined by default\n\t\tif (!module.children) module.children = [];\n\t\tObject.defineProperty(module, \"loaded\", {\n\t\t\tenumerable: true,\n\t\t\tget: function() {\n\t\t\t\treturn module.l;\n\t\t\t}\n\t\t});\n\t\tObject.defineProperty(module, \"id\", {\n\t\t\tenumerable: true,\n\t\t\tget: function() {\n\t\t\t\treturn module.i;\n\t\t\t}\n\t\t});\n\t\tmodule.webpackPolyfill = 1;\n\t}\n\treturn module;\n};\n","'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n    value: true\n});\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\nvar _lib = require('./lib');\n\nvar _lib2 = _interopRequireDefault(_lib);\n\nvar _containerManager = require('./container-manager');\n\nvar _containerManager2 = _interopRequireDefault(_containerManager);\n\nvar slLib = _lib2['default'].init(typeof window !== \"undefined\" ? window : undefined),\n    doc = slLib.win.document,\n    M = slLib.win.Math,\n    max = M.max,\n    round = M.round,\n    BLANK = '',\n    htmlSplCharSpace = { ' ': '&nbsp;' },\n    documentSupport = slLib.getDocumentSupport(),\n    SVG_BBOX_CORRECTION = documentSupport.isWebKit ? 0 : 4.5;\n\n/*\n * Create new instance of SmartLabelManager.\n *\n * SmartLabelManager controls the lifetime of the execution space where the text's metrics will be calculated.\n * This takes a string for a given style and returns the height, width.\n * If a bound box is defined it wraps the text and returns the wrapped height and width.\n * It allows to append ellipsis at the end if the text is truncated.\n *\n * @param {String | Number} id - Id of the instance. If the same id is passed, it disposes the old instance and\n *                              save the new one;\n * @param {String | HTMLElement} container - The id or the instance of the container where the intermediate dom\n *                              elements are to be attached. If not passed, it appends in div\n *\n * @param {Boolean} useEllipses - This decides if a ellipses to be appended if the text is truncated.\n * @param {Object} options - Control options\n *                          {\n *                              maxCacheLimit: No of letter to be cached. Default: 500.\n *                          }\n * @constructor\n */\nfunction SmartLabelManager(id, container, useEllipses, options) {\n    var wrapper,\n        prop,\n        max,\n        prevInstance,\n        isBrowserLess = false,\n        store = SmartLabelManager.store;\n\n    if (typeof id === 'undefined' || typeof id === 'object') {\n        return;\n    }\n\n    if (prevInstance = store[id]) {\n        prevInstance.dispose();\n    }\n\n    store[id] = this;\n    options = options || {};\n    options.maxCacheLimit = isFinite(max = options.maxCacheLimit) ? max : slLib.maxDefaultCacheLimit;\n\n    if (typeof container === 'string') {\n        container = doc.getElementById(container);\n    }\n\n    wrapper = slLib.createContainer(container);\n    wrapper.innerHTML = slLib.testStrAvg;\n\n    if (documentSupport.isHeadLess || !documentSupport.isIE && !wrapper.offsetHeight && !wrapper.offsetWidth) {\n        isBrowserLess = true;\n    }\n\n    wrapper.innerHTML = '';\n    for (prop in slLib.parentContainerStyle) {\n        wrapper.style[prop] = slLib.parentContainerStyle[prop];\n    }\n\n    this.id = id;\n    this.parentContainer = wrapper;\n\n    this._containerManager = new _containerManager2['default'](wrapper, isBrowserLess, 10);\n    this._showNoEllipses = !useEllipses;\n    this._init = true;\n    this.style = {};\n    this.options = options;\n\n    this.setStyle();\n}\n\n/*\n * getSmartText returns the text separated by <br/> whenever a break is necessary. This is to recgonize one\n * generalized format independent of the implementation (canvas based solution, svg based solution). This method\n * converts the output of getSmartText().text to array of lines if the text is wrapped. It sets a named property\n * `lines` on the object passed as parameter.\n *\n * @param {Object} smartlabel - the object returned by getSmartText based on which line arr which to be formed.\n *\n * @return {Object} - The same object which was passed in the arguments. Also a named property `lines` is set.\n */\nSmartLabelManager.textToLines = function (smartlabel) {\n    smartlabel = smartlabel || {};\n\n    if (!smartlabel.text) {\n        smartlabel.text = '';\n    } else if (typeof smartlabel.text !== 'string') {\n        smartlabel.text = smartlabel.text.toString();\n    }\n\n    smartlabel.lines = smartlabel.text.split(/\\n|<br\\s*?\\/?>/ig);\n    return smartlabel;\n};\n\n// Saves all the instance created so far\nSmartLabelManager.store = {};\n\n// Calculates space taken by a character with an approximation value which is calculated by repeating the\n// character by string length times.\nSmartLabelManager.prototype._calCharDimWithCache = function (text, calculateDifference, length) {\n    if (!this._init) {\n        return false;\n    }\n\n    var size,\n        csArr,\n        tw,\n        twi,\n        cachedStyle,\n        asymmetricDifference,\n        maxAdvancedCacheLimit = this.options.maxCacheLimit,\n        container = this._container,\n        style = this.style || {},\n        cache = this._advancedCache || (this._advancedCache = {}),\n        advancedCacheKey = this._advancedCacheKey || (this._advancedCacheKey = []),\n        cacheName = text + (style.fontSize || BLANK) + (style.fontFamily || BLANK) + (style.fontWeight || BLANK) + (style.fontStyle || BLANK),\n        cacheInitName = text + 'init' + (style.fontSize || BLANK) + (style.fontFamily || BLANK) + (style.fontWeight || BLANK) + (style.fontStyle || BLANK);\n\n    htmlSplCharSpace[text] && (text = htmlSplCharSpace[text]);\n\n    if (!calculateDifference) {\n        asymmetricDifference = 0;\n    } else {\n        if ((asymmetricDifference = cache[cacheInitName]) === undefined) {\n            container.innerHTML = text.repeat ? text.repeat(length) : Array(length + 1).join(text); // jshint ignore:line\n            tw = container.offsetWidth;\n\n            container.innerHTML = text;\n            twi = container.offsetWidth;\n\n            asymmetricDifference = cache[cacheInitName] = (tw - length * twi) / (length + 1);\n            advancedCacheKey.push(cacheInitName);\n            if (advancedCacheKey.length > maxAdvancedCacheLimit) {\n                delete cache[advancedCacheKey.shift()];\n            }\n        }\n    }\n\n    if (cachedStyle = cache[cacheName]) {\n        csArr = cachedStyle.split(',');\n        return {\n            width: parseFloat(csArr[0], 10),\n            height: parseFloat(csArr[1], 10)\n        };\n    }\n\n    container.innerHTML = text;\n\n    size = {\n        height: container.offsetHeight,\n        width: container.offsetWidth + asymmetricDifference\n    };\n\n    cache[cacheName] = size.width + ',' + size.height;\n    advancedCacheKey.push(cacheName);\n    if (advancedCacheKey.length > maxAdvancedCacheLimit) {\n        delete cache[advancedCacheKey.shift()];\n    }\n\n    return size;\n};\n\n// Provide function to calculate the height and width based on the environment and available support from dom.\nSmartLabelManager.prototype._getWidthFn = function () {\n    var contObj = this._containerObj,\n        container = this._container,\n        svgText = contObj.svgText;\n\n    if (svgText) {\n        return function (str) {\n            var bbox, width;\n\n            svgText.textContent = str;\n            bbox = svgText.getBBox();\n            width = bbox.width - SVG_BBOX_CORRECTION;\n            if (width < 1) {\n                width = bbox.width;\n            }\n\n            return width;\n        };\n    } else {\n        return function (str) {\n            container.innerHTML = str;\n            return container.offsetWidth;\n        };\n    }\n};\n\n/*\n * Sets the style based on which the text's metrics to be calculated.\n *\n * @param {Object} style - The style object which affects the text size\n *                      {\n *                          fontSize / 'font-size' : MUST BE FOLLOWED BY PX (10px, 11px)\n *                          fontFamily / 'font-family'\n *                          fontWeight / 'font-weight'\n *                          fontStyle / 'font-style'\n *                      }\n *\n * @return {SmartLabelManager} - Current instance of SmartLabelManager\n */\nSmartLabelManager.prototype.setStyle = function (style) {\n    if (!this._init) {\n        return this;\n    }\n\n    var sCont;\n\n    if (style === this.style && !this._styleNotSet) {\n        return;\n    }\n\n    if (!style) {\n        style = this.style;\n    }\n\n    slLib.setLineHeight(style);\n    this.style = style;\n\n    this._containerObj = sCont = this._containerManager.get(style);\n\n    if (this._containerObj) {\n        this._container = sCont.node;\n        this._context = sCont.context;\n        this._cache = sCont.charCache;\n        this._lineHeight = sCont.lineHeight;\n        this._styleNotSet = false;\n    } else {\n        this._styleNotSet = true;\n    }\n\n    return this;\n};\n\n/*\n * Decides whether ellipses to be shown if the node is truncated\n *\n * @param {Boolean} useEllipses - decides if a ellipses to be appended if the text is truncated. Default: false\n *\n * @return {SmartLabelManager} - Current instance of SmartLabelManager\n */\nSmartLabelManager.prototype.useEllipsesOnOverflow = function (useEllipses) {\n    if (!this._init) {\n        return this;\n    }\n    this._showNoEllipses = !useEllipses;\n    return this;\n};\n\n/*\n * Get wrapped or truncated text if a bound box is defined around it. The result text would be separated by <br/>\n * if wrapped\n *\n * @param {String} text - the subject text\n * @param {Number} maxWidth - width in px of the the bound box\n * @param {Number} maxHeight - height in px of the the bound box\n * @param {Boolean} noWrap - whether the text to be wrapped. Default false.\n *\n * @return {Object} - The metrics of the text bounded by the box\n *                  {\n *                      height : height of the wrapped text\n *                      width : width of the wrapped text\n *                      isTruncated : whether the text is truncated\n *                      maxHeight : Maximum height given\n *                      maxWidth : Maximum width given\n *                      oriText : Original text sent\n *                      oriTextHeight : Original text height\n *                      oriTextWidth : Original text width\n *                      text : SMART TEXT\n *                  }\n */\nSmartLabelManager.prototype.getSmartText = function (text, maxWidth, maxHeight, noWrap) {\n    if (!this._init) {\n        return false;\n    }\n\n    if (text === undefined || text === null) {\n        text = '';\n    } else if (typeof text !== 'string') {\n        text = text.toString();\n    }\n\n    var len,\n        trimStr,\n        tempArr,\n        tmpText,\n        maxWidthWithEll,\n        toolText,\n        oriWidth,\n        oriHeight,\n        newCharIndex,\n        nearestChar,\n        tempChar,\n        getWidth,\n        initialLeft,\n        initialTop,\n        getOriSizeImproveObj,\n        spanArr,\n        x,\n        y,\n        minWidth,\n        elem,\n        chr,\n        elemRightMostPoint,\n        elemLowestPoint,\n        lastBR,\n        removeFromIndex,\n        removeFromIndexForEllipses,\n        hasHTMLTag = false,\n        maxStrWidth = 0,\n        lastDash = -1,\n        lastSpace = -1,\n        lastIndexBroken = -1,\n        strWidth = 0,\n        strHeight = 0,\n        oriTextArr = [],\n        i = 0,\n        ellipsesStr = this._showNoEllipses ? '' : '...',\n        lineHeight = this._lineHeight,\n        context = this._context,\n        container = this._container,\n        sCont = this._containerObj,\n        ellipsesWidth = sCont.ellipsesWidth,\n        dotWidth = sCont.dotWidth,\n        characterArr = [],\n        dashIndex = -1,\n        spaceIndex = -1,\n        lastLineBreak = -1,\n        fastTrim = function fastTrim(str) {\n        str = str.replace(/^\\s\\s*/, '');\n        var ws = /\\s/,\n            i = str.length;\n        while (ws.test(str.charAt(i -= 1))) {/* jshint noempty:false */}\n        return str.slice(0, i + 1);\n    },\n        smartLabel = {\n        text: text,\n        maxWidth: maxWidth,\n        maxHeight: maxHeight,\n        width: null,\n        height: null,\n        oriTextWidth: null,\n        oriTextHeight: null,\n        oriText: text,\n        isTruncated: false\n    };\n\n    getWidth = this._getWidthFn();\n\n    // In some browsers, offsetheight of a single-line text is getting little (1 px) heigher value of the\n    // lineheight. As a result, smartLabel is unable to return single-line text.\n    // To fix this, increase the maxHeight a little amount. Hence maxHeight =  lineHeight * 1.2\n    if (maxHeight === lineHeight) {\n        maxHeight *= 1.2;\n    }\n\n    if (container) {\n        if (!documentSupport.isBrowserLess) {\n            hasHTMLTag = slLib.xmlTagRegEx.test(text);\n            if (!hasHTMLTag) {\n                // Due to support of <,> for xml we convert &lt;, &gt; to <,> respectively so to get the correct\n                // width it is required to convert the same before calculation for the new improve version of the\n                // get text width.\n                tmpText = text.replace(slLib.ltgtRegex, function (match) {\n                    return match === '&lt;' ? '<' : '>';\n                });\n                getOriSizeImproveObj = this.getOriSize(tmpText, true);\n\n                smartLabel.oriTextWidth = oriWidth = getOriSizeImproveObj.width;\n                smartLabel.oriTextHeight = oriHeight = getOriSizeImproveObj.height;\n            } else {\n                container.innerHTML = text;\n                smartLabel.oriTextWidth = oriWidth = container.offsetWidth;\n                smartLabel.oriTextHeight = oriHeight = container.offsetHeight;\n            }\n\n            if (oriHeight <= maxHeight && oriWidth <= maxWidth) {\n                smartLabel.width = smartLabel.oriTextWidth = oriWidth;\n                smartLabel.height = smartLabel.oriTextHeight = oriHeight;\n                return smartLabel;\n            }\n\n            if (lineHeight > maxHeight) {\n                smartLabel.text = '';\n                smartLabel.width = smartLabel.oriTextWidth = 0;\n                smartLabel.height = smartLabel.oriTextHeight = 0;\n                return smartLabel;\n            }\n        }\n\n        // Calculate width with ellipses\n        text = fastTrim(text).replace(/(\\s+)/g, ' ');\n        maxWidthWithEll = this._showNoEllipses ? maxWidth : maxWidth - ellipsesWidth;\n\n        if (!hasHTMLTag) {\n            oriTextArr = text.split('');\n            len = oriTextArr.length;\n            trimStr = '', tempArr = [];\n            tempChar = oriTextArr[0];\n\n            if (this._cache[tempChar]) {\n                minWidth = this._cache[tempChar].width;\n            } else {\n                minWidth = getWidth(tempChar);\n                this._cache[tempChar] = { width: minWidth };\n            }\n\n            if (maxWidthWithEll > minWidth) {\n                tempArr = text.substr(0, slLib.getNearestBreakIndex(text, maxWidthWithEll, this)).split('');\n                i = tempArr.length;\n            } else if (minWidth > maxWidth) {\n                smartLabel.text = '';\n                smartLabel.width = smartLabel.oriTextWidth = smartLabel.height = smartLabel.oriTextHeight = 0;\n                return smartLabel;\n            } else if (ellipsesStr) {\n                maxWidthWithEll = maxWidth - 2 * dotWidth;\n                if (maxWidthWithEll > minWidth) {\n                    ellipsesStr = '..';\n                } else {\n                    maxWidthWithEll = maxWidth - dotWidth;\n                    if (maxWidthWithEll > minWidth) {\n                        ellipsesStr = '.';\n                    } else {\n                        maxWidthWithEll = 0;\n                        ellipsesStr = '';\n                    }\n                }\n            }\n\n            strWidth = getWidth(tempArr.join(''));\n            strHeight = this._lineHeight;\n\n            if (noWrap) {\n                for (; i < len; i += 1) {\n                    tempChar = tempArr[i] = oriTextArr[i];\n                    if (this._cache[tempChar]) {\n                        minWidth = this._cache[tempChar].width;\n                    } else {\n                        if (!getOriSizeImproveObj || !(minWidth = getOriSizeImproveObj.detailObj[tempChar])) {\n                            minWidth = getWidth(tempChar);\n                        }\n                        this._cache[tempChar] = {\n                            width: minWidth\n                        };\n                    }\n                    strWidth += minWidth;\n                    if (strWidth > maxWidthWithEll) {\n                        if (!trimStr) {\n                            trimStr = tempArr.slice(0, -1).join('');\n                        }\n                        if (strWidth > maxWidth) {\n                            smartLabel.text = fastTrim(trimStr) + ellipsesStr;\n                            smartLabel.tooltext = smartLabel.oriText;\n                            smartLabel.width = getWidth(smartLabel.text);\n                            smartLabel.height = this._lineHeight;\n                            return smartLabel;\n                        }\n                    }\n                }\n\n                smartLabel.text = tempArr.join('');\n                smartLabel.width = strWidth;\n                smartLabel.height = this._lineHeight;\n                return smartLabel;\n            } else {\n                for (; i < len; i += 1) {\n                    tempChar = tempArr[i] = oriTextArr[i];\n                    if (tempChar === ' ' && !context) {\n                        tempChar = '&nbsp;';\n                    }\n\n                    if (this._cache[tempChar]) {\n                        minWidth = this._cache[tempChar].width;\n                    } else {\n                        if (!getOriSizeImproveObj || !(minWidth = getOriSizeImproveObj.detailObj[tempChar])) {\n                            minWidth = getWidth(tempChar);\n                        }\n                        this._cache[tempChar] = {\n                            width: minWidth\n                        };\n                    }\n                    strWidth += minWidth;\n\n                    if (strWidth > maxWidthWithEll) {\n                        if (!trimStr) {\n                            trimStr = tempArr.slice(0, -1).join('');\n                        }\n                        if (strWidth > maxWidth) {\n                            /** @todo use regular expressions for better performance. */\n                            lastSpace = text.substr(0, tempArr.length).lastIndexOf(' ');\n                            lastDash = text.substr(0, tempArr.length).lastIndexOf('-');\n                            if (lastSpace > lastIndexBroken) {\n                                strWidth = getWidth(tempArr.slice(lastIndexBroken + 1, lastSpace).join(''));\n                                tempArr.splice(lastSpace, 1, '<br/>');\n                                lastIndexBroken = lastSpace;\n                                newCharIndex = lastSpace + 1;\n                            } else if (lastDash > lastIndexBroken) {\n                                if (lastDash === tempArr.length - 1) {\n                                    strWidth = getWidth(tempArr.slice(lastIndexBroken + 1, lastSpace).join(''));\n                                    tempArr.splice(lastDash, 1, '<br/>-');\n                                } else {\n                                    strWidth = getWidth(tempArr.slice(lastIndexBroken + 1, lastSpace).join(''));\n                                    tempArr.splice(lastDash, 1, '-<br/>');\n                                }\n                                lastIndexBroken = lastDash;\n                                newCharIndex = lastDash + 1;\n                            } else {\n                                tempArr.splice(tempArr.length - 1, 1, '<br/>' + oriTextArr[i]);\n                                lastLineBreak = tempArr.length - 2;\n                                strWidth = getWidth(tempArr.slice(lastIndexBroken + 1, lastLineBreak + 1).join(''));\n                                lastIndexBroken = lastLineBreak;\n                                newCharIndex = i;\n                            }\n                            strHeight += this._lineHeight;\n                            if (strHeight > maxHeight) {\n                                smartLabel.text = fastTrim(trimStr) + ellipsesStr;\n                                smartLabel.tooltext = smartLabel.oriText;\n                                // The max width among all the lines will be the width of the string.\n                                smartLabel.width = maxWidth;\n                                smartLabel.height = strHeight - this._lineHeight;\n                                return smartLabel;\n                            } else {\n                                maxStrWidth = max(maxStrWidth, strWidth);\n                                trimStr = null;\n                                nearestChar = slLib.getNearestBreakIndex(text.substr(newCharIndex), maxWidthWithEll, this);\n                                strWidth = getWidth(text.substr(newCharIndex, nearestChar || 1));\n                                if (tempArr.length < newCharIndex + nearestChar) {\n                                    tempArr = tempArr.concat(text.substr(tempArr.length, newCharIndex + nearestChar - tempArr.length).split(''));\n                                    i = tempArr.length - 1;\n                                }\n                            }\n                        }\n                    }\n                }\n\n                maxStrWidth = max(maxStrWidth, strWidth);\n\n                smartLabel.text = tempArr.join('');\n                smartLabel.width = maxStrWidth;\n                smartLabel.height = strHeight;\n                return smartLabel;\n            }\n        } else {\n            toolText = text.replace(slLib.spanAdditionRegx, '$2');\n            text = text.replace(slLib.spanAdditionRegx, slLib.spanAdditionReplacer);\n            text = text.replace(/(<br\\s*\\/*\\>)/g, '<span class=\"' + [slLib.classNameWithTag, ' ', slLib.classNameWithTagBR].join('') + '\">$1</span>');\n\n            container.innerHTML = text;\n\n            spanArr = container[documentSupport.childRetriverFn](documentSupport.childRetriverString);\n\n            for (x = 0, y = spanArr.length; x < y; x += 1) {\n                elem = spanArr[x];\n                //chech whether this span is temporary inserted span from it's class\n                if (documentSupport.noClassTesting || slLib.classNameReg.test(elem.className)) {\n                    chr = elem.innerHTML;\n                    if (chr !== '') {\n                        if (chr === ' ') {\n                            spaceIndex = characterArr.length;\n                        } else if (chr === '-') {\n                            dashIndex = characterArr.length;\n                        }\n\n                        characterArr.push({\n                            spaceIdx: spaceIndex,\n                            dashIdx: dashIndex,\n                            elem: elem\n                        });\n                        oriTextArr.push(chr);\n                    }\n                }\n            }\n\n            i = 0;\n            len = characterArr.length;\n            minWidth = characterArr[0].elem.offsetWidth;\n\n            if (minWidth > maxWidth) {\n                smartLabel.text = '';\n                smartLabel.width = smartLabel.oriTextWidth = smartLabel.height = smartLabel.oriTextHeight = 0;\n\n                return smartLabel;\n            } else if (minWidth > maxWidthWithEll && !this._showNoEllipses) {\n\n                maxWidthWithEll = maxWidth - 2 * dotWidth;\n                if (maxWidthWithEll > minWidth) {\n                    ellipsesStr = '..';\n                } else {\n                    maxWidthWithEll = maxWidth - dotWidth;\n                    if (maxWidthWithEll > minWidth) {\n                        ellipsesStr = '.';\n                    } else {\n                        maxWidthWithEll = 0;\n                        ellipsesStr = '';\n                    }\n                }\n            }\n\n            initialLeft = characterArr[0].elem.offsetLeft;\n            initialTop = characterArr[0].elem.offsetTop;\n\n            if (noWrap) {\n                for (; i < len; i += 1) {\n                    elem = characterArr[i].elem;\n                    elemRightMostPoint = elem.offsetLeft - initialLeft + elem.offsetWidth;\n\n                    if (elemRightMostPoint > maxWidthWithEll) {\n                        if (!removeFromIndexForEllipses) {\n                            removeFromIndexForEllipses = i;\n                        }\n                        if (container.offsetWidth > maxWidth) {\n                            removeFromIndex = i;\n                            i = len;\n                        }\n                    }\n                }\n            } else {\n                for (; i < len; i += 1) {\n                    elem = characterArr[i].elem;\n                    elemLowestPoint = elem.offsetHeight + (elem.offsetTop - initialTop);\n                    elemRightMostPoint = elem.offsetLeft - initialLeft + elem.offsetWidth;\n\n                    lastBR = null;\n\n                    if (elemRightMostPoint > maxWidthWithEll) {\n                        if (!removeFromIndexForEllipses) {\n                            removeFromIndexForEllipses = i;\n                        }\n\n                        if (elemRightMostPoint > maxWidth) {\n                            lastSpace = characterArr[i].spaceIdx;\n                            lastDash = characterArr[i].dashIdx;\n                            if (lastSpace > lastIndexBroken) {\n                                characterArr[lastSpace].elem.innerHTML = '<br/>';\n                                lastIndexBroken = lastSpace;\n                            } else if (lastDash > lastIndexBroken) {\n                                if (lastDash === i) {\n                                    // in case the overflowing character itself is the '-'\n                                    characterArr[lastDash].elem.innerHTML = '<br/>-';\n                                } else {\n                                    characterArr[lastDash].elem.innerHTML = '-<br/>';\n                                }\n                                lastIndexBroken = lastDash;\n                            } else {\n                                elem.parentNode.insertBefore(lastBR = doc.createElement('br'), elem);\n                            }\n\n                            //check whether this break made current element outside the area height\n                            if (elem.offsetHeight + elem.offsetTop > maxHeight) {\n                                //remove the lastly inserted line break\n                                if (lastBR) {\n                                    lastBR.parentNode.removeChild(lastBR);\n                                } else if (lastIndexBroken === lastDash) {\n                                    characterArr[lastDash].elem.innerHTML = '-';\n                                } else {\n                                    characterArr[lastSpace].elem.innerHTML = ' ';\n                                }\n                                removeFromIndex = i;\n                                //break the looping condition\n                                i = len;\n                            } else {\n                                removeFromIndexForEllipses = null;\n                            }\n                        }\n                    } else {\n                        //check whether this break made current element outside the area height\n                        if (elemLowestPoint > maxHeight) {\n                            removeFromIndex = i;\n                            i = len;\n                        }\n                    }\n                }\n            }\n\n            if (removeFromIndex < len) {\n                //set the trancated property of the smartlabel\n                smartLabel.isTruncated = true;\n\n                /** @todo is this really needed? */\n                removeFromIndexForEllipses = removeFromIndexForEllipses ? removeFromIndexForEllipses : removeFromIndex;\n\n                for (i = len - 1; i >= removeFromIndexForEllipses; i -= 1) {\n                    elem = characterArr[i].elem;\n                    //chech whether this span is temporary inserted span from it's class\n                    elem.parentNode.removeChild(elem);\n                }\n\n                for (; i >= 0; i -= 1) {\n                    elem = characterArr[i].elem;\n                    if (slLib.classNameBrReg.test(elem.className)) {\n                        //chech whether this span is temporary inserted span from it's class\n                        elem.parentNode.removeChild(elem);\n                    } else {\n                        i = 0;\n                    }\n                }\n            }\n\n            //get the smart text\n            smartLabel.text = container.innerHTML.replace(slLib.spanRemovalRegx, '$1').replace(/\\&amp\\;/g, '&');\n            if (smartLabel.isTruncated) {\n                smartLabel.text += ellipsesStr;\n                smartLabel.tooltext = toolText;\n            }\n        }\n\n        smartLabel.height = container.offsetHeight;\n        smartLabel.width = container.offsetWidth;\n\n        return smartLabel;\n    } else {\n        smartLabel.error = new Error('Body Tag Missing!');\n        return smartLabel;\n    }\n};\n\n/*\n * Get the height and width of a text.\n *\n * @param {String} text - Text whose metrics to be measured\n * @param {Boolean} Optional detailedCalculationFlag - this flag if set it calculates per letter position\n *                          information and returns it. Ideally you dont need it unless you want to post process the\n *                          string. And its an EXPENSIVE OPERATION.\n *\n * @return {Object} - If detailedCalculationFlag is set to true the returned object would be\n *                  {\n *                      height: height of the text\n *                      width: width of the text\n *                      detailObj: detail calculation of letters in the format {lettername: width}\n *                  }\n *                  If detailedCalculationFlag is set to false the returned object wont have the detailObj prop.\n */\nSmartLabelManager.prototype.getOriSize = function (text, detailedCalculationFlag) {\n    if (!this._init) {\n        return false;\n    }\n\n    var textArr,\n        letter,\n        lSize,\n        i,\n        l,\n        cumulativeSize = 0,\n        height = 0,\n        indiSizeStore = {};\n\n    if (!detailedCalculationFlag) {\n        return this._calCharDimWithCache(text);\n    }\n\n    // Calculate the width of every letter with an approximation\n    textArr = text.split('');\n    for (i = 0, l = textArr.length; i < l; i++) {\n        letter = textArr[i];\n        lSize = this._calCharDimWithCache(letter, true, textArr.length);\n        height = max(height, lSize.height);\n        cumulativeSize += lSize.width;\n        indiSizeStore[letter] = lSize.width;\n    }\n\n    return {\n        width: round(cumulativeSize),\n        height: height,\n        detailObj: indiSizeStore\n    };\n};\n\n/*\n * Dispose the container and object allocated by the smartlabel\n */\nSmartLabelManager.prototype.dispose = function () {\n    if (!this._init) {\n        return this;\n    }\n\n    this._containerManager && this._containerManager.dispose && this._containerManager.dispose();\n\n    delete this._container;\n    delete this._context;\n    delete this._cache;\n    delete this._containerManager;\n    delete this._containerObj;\n    delete this.id;\n    delete this.style;\n    delete this.parentContainer;\n    delete this._showNoEllipses;\n\n    return this;\n};\n\nexports['default'] = SmartLabelManager;\nmodule.exports = exports['default'];","'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n\tvalue: true\n});\nvar lib = {\n\tinit: function init(win) {\n\t\tvar doc = win.document,\n\t\t    nav = win.navigator,\n\t\t    userAgent = nav.userAgent,\n\t\t    DIV = 'DIV',\n\t\t    ceil = Math.ceil,\n\t\t    floor = Math.floor,\n\t\t    containerInstanceCount = 0,\n\t\t    clsNameSpace = 'fusioncharts-smartlabel-',\n\t\t    containerClass = clsNameSpace + 'container',\n\t\t    classNameWithTag = clsNameSpace + 'tag',\n\t\t    classNameWithTagBR = clsNameSpace + 'br';\n\n\t\tlib = {\n\t\t\twin: win,\n\n\t\t\tcontainerClass: containerClass,\n\n\t\t\tclassNameWithTag: classNameWithTag,\n\n\t\t\tclassNameWithTagBR: classNameWithTagBR,\n\n\t\t\tmaxDefaultCacheLimit: 500,\n\n\t\t\tclassNameReg: new RegExp('\\b' + classNameWithTag + '\\b'),\n\n\t\t\tclassNameBrReg: new RegExp('\\b' + classNameWithTagBR + '\\b'),\n\n\t\t\tspanAdditionRegx: /(<[^<\\>]+?\\>)|(&(?:[a-z]+|#[0-9]+);|.)/ig,\n\n\t\t\tspanAdditionReplacer: '$1<span class=\"' + classNameWithTag + '\">$2</span>',\n\n\t\t\tspanRemovalRegx: new RegExp('\\\\<span[^\\\\>]+?' + classNameWithTag + '[^\\\\>]{0,}\\\\>(.*?)\\\\<\\\\/span\\\\>', 'ig'),\n\n\t\t\txmlTagRegEx: new RegExp('<[^>][^<]*[^>]+>', 'i'),\n\n\t\t\tltgtRegex: /&lt;|&gt;/g,\n\n\t\t\tbrReplaceRegex: /<br\\/>/ig,\n\n\t\t\ttestStrAvg: 'WgI',\n\n\t\t\t// This style is applied over the parent smartlabel container. The container is kept hidden from the viewport\n\t\t\tparentContainerStyle: {\n\t\t\t\tposition: 'absolute',\n\t\t\t\ttop: '-9999em',\n\t\t\t\twhiteSpace: 'nowrap',\n\t\t\t\tpadding: '0px',\n\t\t\t\twidth: '1px',\n\t\t\t\theight: '1px',\n\t\t\t\toverflow: 'hidden'\n\t\t\t},\n\n\t\t\t// All the style which might affect the text metrics\n\t\t\tsupportedStyle: {\n\t\t\t\tfont: 'font',\n\t\t\t\tfontFamily: 'font-family',\n\t\t\t\t'font-family': 'font-family',\n\t\t\t\tfontWeight: 'font-weight',\n\t\t\t\t'font-weight': 'font-weight',\n\t\t\t\tfontSize: 'font-size',\n\t\t\t\t'font-size': 'font-size',\n\t\t\t\tlineHeight: 'line-height',\n\t\t\t\t'line-height': 'line-height',\n\t\t\t\tfontStyle: 'font-style',\n\t\t\t\t'font-style': 'font-style'\n\t\t\t},\n\n\t\t\t// Get the support list for html the document where the text calcution is to be done.\n\t\t\tgetDocumentSupport: function getDocumentSupport() {\n\t\t\t\tvar childRetriverFn, childRetriverString, noClassTesting;\n\n\t\t\t\tif (doc.getElementsByClassName) {\n\t\t\t\t\tchildRetriverFn = 'getElementsByClassName';\n\t\t\t\t\tchildRetriverString = classNameWithTag;\n\t\t\t\t\tnoClassTesting = true;\n\t\t\t\t} else {\n\t\t\t\t\tchildRetriverFn = 'getElementsByTagName';\n\t\t\t\t\tchildRetriverString = 'span';\n\t\t\t\t\tnoClassTesting = false;\n\t\t\t\t}\n\n\t\t\t\treturn {\n\t\t\t\t\tisIE: /msie/i.test(userAgent) && !win.opera,\n\t\t\t\t\thasSVG: Boolean(win.SVGAngle || doc.implementation.hasFeature('http://www.w3.org/TR/SVG11/feature#BasicStructure', '1.1')),\n\t\t\t\t\tisHeadLess: new RegExp(' HtmlUnit').test(userAgent),\n\t\t\t\t\tisWebKit: new RegExp(' AppleWebKit/').test(userAgent),\n\t\t\t\t\tchildRetriverFn: childRetriverFn,\n\t\t\t\t\tchildRetriverString: childRetriverString,\n\t\t\t\t\tnoClassTesting: noClassTesting\n\t\t\t\t};\n\t\t\t},\n\n\t\t\t/*\n    * Create a html div element and attach it with a parent. All the subsequent operations are performed\n    * by upding this dom tree only.\n    *\n    * @param {HTMLElement} - The html element where the newly created div is to be attached. If not passed,\n    *                      the new div is appended on the body.\n    */\n\t\t\tcreateContainer: function createContainer(containerParent) {\n\t\t\t\tvar body, container;\n\n\t\t\t\tif (containerParent && (containerParent.offsetWidth || containerParent.offsetHeight)) {\n\t\t\t\t\tif (containerParent.appendChild) {\n\t\t\t\t\t\tcontainerParent.appendChild(container = doc.createElement(DIV));\n\t\t\t\t\t\tcontainer.className = containerClass;\n\t\t\t\t\t\tcontainer.setAttribute('aria-hidden', 'true');\n\t\t\t\t\t\tcontainer.setAttribute('role', 'presentation');\n\t\t\t\t\t\treturn container;\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tbody = doc.getElementsByTagName('body')[0];\n\n\t\t\t\t\tif (body && body.appendChild) {\n\t\t\t\t\t\tcontainer = doc.createElement(DIV);\n\t\t\t\t\t\tcontainer.className = containerClass;\n\t\t\t\t\t\tcontainer.setAttribute('aria-hidden', 'true');\n\t\t\t\t\t\tcontainer.setAttribute('role', 'presentation');\n\t\t\t\t\t\tcontainerInstanceCount += 1;\n\t\t\t\t\t\tbody.appendChild(container);\n\t\t\t\t\t\treturn container;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t},\n\n\t\t\t// Finds a approximate position where the text is to be broken\n\t\t\tgetNearestBreakIndex: function getNearestBreakIndex(text, maxWidth, sl) {\n\t\t\t\tif (!text || !text.length) {\n\t\t\t\t\treturn 0;\n\t\t\t\t}\n\n\t\t\t\tvar difference,\n\t\t\t\t    getWidth = sl._getWidthFn(),\n\t\t\t\t    charLen = 0,\n\t\t\t\t    increment = 0,\n\t\t\t\t    oriWidth = getWidth(text),\n\t\t\t\t    avgWidth = oriWidth / text.length;\n\n\t\t\t\tdifference = maxWidth;\n\t\t\t\tcharLen = ceil(maxWidth / avgWidth);\n\n\t\t\t\tif (oriWidth < maxWidth) {\n\t\t\t\t\treturn text.length - 1;\n\t\t\t\t}\n\n\t\t\t\tif (charLen > text.length) {\n\t\t\t\t\tdifference = maxWidth - oriWidth;\n\t\t\t\t\tcharLen = text.length;\n\t\t\t\t}\n\n\t\t\t\twhile (difference > 0) {\n\t\t\t\t\tdifference = maxWidth - getWidth(text.substr(0, charLen));\n\t\t\t\t\tincrement = floor(difference / avgWidth);\n\t\t\t\t\tif (increment) {\n\t\t\t\t\t\tcharLen += increment;\n\t\t\t\t\t} else {\n\t\t\t\t\t\treturn charLen;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\twhile (difference < 0) {\n\t\t\t\t\tdifference = maxWidth - getWidth(text.substr(0, charLen));\n\t\t\t\t\tincrement = floor(difference / avgWidth);\n\t\t\t\t\tif (increment) {\n\t\t\t\t\t\tcharLen += increment;\n\t\t\t\t\t} else {\n\t\t\t\t\t\treturn charLen;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn charLen;\n\t\t\t},\n\n\t\t\t/*\n    * Determine lineheight of a text for a given style. It adds propery lineHeight to the style passed\n    *\n    * @param {Object} - The style based on which the text's metric needs to be calculated. The calculation happens\n    *                  based on fontSize property, if its not present a default font size is assumed.\n    *\n    * @return {Object} - The style that was passed with lineHeight as a named propery set on the object.\n    */\n\t\t\tsetLineHeight: function setLineHeight(styleObj) {\n\t\t\t\tvar fSize = styleObj.fontSize = styleObj.fontSize || '12px';\n\t\t\t\tstyleObj.lineHeight = styleObj.lineHeight || styleObj['line-height'] || parseInt(fSize, 10) * 1.2 + 'px';\n\t\t\t\treturn styleObj;\n\t\t\t}\n\t\t};\n\n\t\treturn lib;\n\t}\n};\n\nexports['default'] = lib;\nmodule.exports = exports['default'];","const Muze = require('./muze');\n\nmodule.exports = Muze.default ? Muze.default : Muze;\n","'use strict';\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\nvar _lib = require('./lib');\n\nvar _lib2 = _interopRequireDefault(_lib);\n\nvar slLib = _lib2['default'].init(typeof window !== \"undefined\" ? window : undefined),\n    doc = slLib.win.document,\n    documentSupport = slLib.getDocumentSupport(),\n    SVG_BBOX_CORRECTION = documentSupport.isWebKit ? 0 : 4.5;\n\nfunction ContainerManager(parentContainer, isBrowserLess, maxContainers) {\n    var svg;\n\n    maxContainers = maxContainers > 5 ? maxContainers : 5;\n    maxContainers = maxContainers < 20 ? maxContainers : 20;\n\n    this.maxContainers = maxContainers;\n    this.first = null;\n    this.last = null;\n    this.containers = {};\n    this.length = 0;\n    this.rootNode = parentContainer;\n\n    if (isBrowserLess) {\n        svg = doc.createElementNS('http://www.w3.org/2000/svg', 'svg');\n        svg.setAttributeNS('http://www.w3.org/2000/svg', 'xlink', 'http://www.w3.org/1999/xlink');\n        svg.setAttributeNS('http://www.w3.org/2000/svg', 'height', '0');\n        svg.setAttributeNS('http://www.w3.org/2000/svg', 'width', '0');\n        this.svgRoot = svg;\n        this.rootNode.appendChild(svg);\n    }\n}\n\nContainerManager.prototype.get = function (style) {\n    var diff,\n        key,\n        containerObj,\n        containers = this.containers,\n        len = this.length,\n        max = this.maxContainers,\n        keyStr = '';\n\n    for (key in slLib.supportedStyle) {\n        if (style[key] !== undefined) {\n            keyStr += slLib.supportedStyle[key] + ':' + style[key] + ';';\n        }\n    }\n\n    if (!keyStr) {\n        return false;\n    }\n\n    if (containerObj = containers[keyStr]) {\n        if (this.first !== containerObj) {\n            containerObj.prev && (containerObj.prev.next = containerObj.next);\n            containerObj.next && (containerObj.next.prev = containerObj.prev);\n            containerObj.next = this.first;\n            containerObj.next.prev = containerObj;\n            this.last === containerObj && (this.last = containerObj.prev);\n            containerObj.prev = null;\n            this.first = containerObj;\n        }\n    } else {\n        if (len >= max) {\n            diff = len - max + 1;\n            // +1 is to remove an extra entry to make space for the new container to be added.\n            while (diff--) {\n                this.removeContainer(this.last);\n            }\n        }\n        containerObj = this.addContainer(keyStr);\n    }\n\n    return containerObj;\n};\n\nContainerManager.prototype.addContainer = function (keyStr) {\n    var node, container;\n\n    this.containers[keyStr] = container = {\n        next: null,\n        prev: null,\n        node: null,\n        ellipsesWidth: 0,\n        lineHeight: 0,\n        dotWidth: 0,\n        avgCharWidth: 4,\n        keyStr: keyStr,\n        charCache: {}\n    };\n\n    // Since the container objects are arranged from most recent to least recent order, we need to add the new\n    // object at the beginning of the list.\n    container.next = this.first;\n    container.next && (container.next.prev = container);\n    this.first = container;\n    if (!this.last) {\n        this.last = container;\n    }\n    this.length += 1;\n\n    node = container.node = doc.createElement('div');\n    this.rootNode.appendChild(node);\n\n    if (documentSupport.isIE && !documentSupport.hasSVG) {\n        node.style.setAttribute('cssText', keyStr);\n    } else {\n        node.setAttribute('style', keyStr);\n    }\n\n    node.setAttribute('aria-hidden', 'true');\n    node.setAttribute('role', 'presentation');\n    node.style.display = 'inline-block';\n\n    node.innerHTML = slLib.testStrAvg; // A test string.\n    container.lineHeight = node.offsetHeight;\n    container.avgCharWidth = node.offsetWidth / 3;\n\n    if (documentSupport.isBrowserLess) {\n        node = container.svgText = doc.createElementNS('http://www.w3.org/2000/svg', 'text');\n        node.setAttribute('style', keyStr);\n        this.svgRoot.appendChild(node);\n\n        node.textContent = slLib.testStrAvg; // A test string.\n        container.lineHeight = node.getBBox().height;\n        container.avgCharWidth = (node.getBBox().width - SVG_BBOX_CORRECTION) / 3;\n\n        node.textContent = '...';\n        container.ellipsesWidth = node.getBBox().width - SVG_BBOX_CORRECTION;\n        node.textContent = '.';\n        container.dotWidth = node.getBBox().width - SVG_BBOX_CORRECTION;\n    } else {\n        node.innerHTML = '...';\n        container.ellipsesWidth = node.offsetWidth;\n        node.innerHTML = '.';\n        container.dotWidth = node.offsetWidth;\n        node.innerHTML = '';\n    }\n\n    return container;\n};\n\nContainerManager.prototype.removeContainer = function (cObj) {\n    var keyStr = cObj.keyStr;\n\n    if (!keyStr || !this.length || !cObj) {\n        return;\n    }\n    this.length -= 1;\n\n    cObj.prev && (cObj.prev.next = cObj.next);\n    cObj.next && (cObj.next.prev = cObj.prev);\n    this.first === cObj && (this.first = cObj.next);\n    this.last === cObj && (this.last = cObj.prev);\n\n    cObj.node.parentNode.removeChild(cObj.node);\n\n    delete this.containers[keyStr];\n};\n\nContainerManager.prototype.dispose = function () {\n    var key,\n        containers = this.containers;\n\n    this.maxContainers = null;\n    for (key in containers) {\n        this.removeContainer(containers[key]);\n    }\n\n    this.rootNode.parentNode.removeChild(this.rootNode);\n\n    this.rootNode = null;\n    this.first = null;\n    this.last = null;\n};\n\nmodule.exports = ContainerManager;","export default function(a, b) {\n  return a < b ? -1 : a > b ? 1 : a >= b ? 0 : NaN;\n}\n","import ascending from \"./ascending\";\n\nexport default function(compare) {\n  if (compare.length === 1) compare = ascendingComparator(compare);\n  return {\n    left: function(a, x, lo, hi) {\n      if (lo == null) lo = 0;\n      if (hi == null) hi = a.length;\n      while (lo < hi) {\n        var mid = lo + hi >>> 1;\n        if (compare(a[mid], x) < 0) lo = mid + 1;\n        else hi = mid;\n      }\n      return lo;\n    },\n    right: function(a, x, lo, hi) {\n      if (lo == null) lo = 0;\n      if (hi == null) hi = a.length;\n      while (lo < hi) {\n        var mid = lo + hi >>> 1;\n        if (compare(a[mid], x) > 0) hi = mid;\n        else lo = mid + 1;\n      }\n      return lo;\n    }\n  };\n}\n\nfunction ascendingComparator(f) {\n  return function(d, x) {\n    return ascending(f(d), x);\n  };\n}\n","import ascending from \"./ascending\";\nimport bisector from \"./bisector\";\n\nvar ascendingBisect = bisector(ascending);\nexport var bisectRight = ascendingBisect.right;\nexport var bisectLeft = ascendingBisect.left;\nexport default bisectRight;\n","import {pair} from \"./pairs\";\n\nexport default function(values0, values1, reduce) {\n  var n0 = values0.length,\n      n1 = values1.length,\n      values = new Array(n0 * n1),\n      i0,\n      i1,\n      i,\n      value0;\n\n  if (reduce == null) reduce = pair;\n\n  for (i0 = i = 0; i0 < n0; ++i0) {\n    for (value0 = values0[i0], i1 = 0; i1 < n1; ++i1, ++i) {\n      values[i] = reduce(value0, values1[i1]);\n    }\n  }\n\n  return values;\n}\n","export default function(x) {\n  return x === null ? NaN : +x;\n}\n","var array = Array.prototype;\n\nexport var slice = array.slice;\nexport var map = array.map;\n","export default function(start, stop, step) {\n  start = +start, stop = +stop, step = (n = arguments.length) < 2 ? (stop = start, start = 0, 1) : n < 3 ? 1 : +step;\n\n  var i = -1,\n      n = Math.max(0, Math.ceil((stop - start) / step)) | 0,\n      range = new Array(n);\n\n  while (++i < n) {\n    range[i] = start + i * step;\n  }\n\n  return range;\n}\n","var e10 = Math.sqrt(50),\n    e5 = Math.sqrt(10),\n    e2 = Math.sqrt(2);\n\nexport default function(start, stop, count) {\n  var reverse,\n      i = -1,\n      n,\n      ticks,\n      step;\n\n  stop = +stop, start = +start, count = +count;\n  if (start === stop && count > 0) return [start];\n  if (reverse = stop < start) n = start, start = stop, stop = n;\n  if ((step = tickIncrement(start, stop, count)) === 0 || !isFinite(step)) return [];\n\n  if (step > 0) {\n    start = Math.ceil(start / step);\n    stop = Math.floor(stop / step);\n    ticks = new Array(n = Math.ceil(stop - start + 1));\n    while (++i < n) ticks[i] = (start + i) * step;\n  } else {\n    start = Math.floor(start * step);\n    stop = Math.ceil(stop * step);\n    ticks = new Array(n = Math.ceil(start - stop + 1));\n    while (++i < n) ticks[i] = (start - i) / step;\n  }\n\n  if (reverse) ticks.reverse();\n\n  return ticks;\n}\n\nexport function tickIncrement(start, stop, count) {\n  var step = (stop - start) / Math.max(0, count),\n      power = Math.floor(Math.log(step) / Math.LN10),\n      error = step / Math.pow(10, power);\n  return power >= 0\n      ? (error >= e10 ? 10 : error >= e5 ? 5 : error >= e2 ? 2 : 1) * Math.pow(10, power)\n      : -Math.pow(10, -power) / (error >= e10 ? 10 : error >= e5 ? 5 : error >= e2 ? 2 : 1);\n}\n\nexport function tickStep(start, stop, count) {\n  var step0 = Math.abs(stop - start) / Math.max(0, count),\n      step1 = Math.pow(10, Math.floor(Math.log(step0) / Math.LN10)),\n      error = step0 / step1;\n  if (error >= e10) step1 *= 10;\n  else if (error >= e5) step1 *= 5;\n  else if (error >= e2) step1 *= 2;\n  return stop < start ? -step1 : step1;\n}\n","export default function(values) {\n  return Math.ceil(Math.log(values.length) / Math.LN2) + 1;\n}\n","import number from \"./number\";\n\nexport default function(values, p, valueof) {\n  if (valueof == null) valueof = number;\n  if (!(n = values.length)) return;\n  if ((p = +p) <= 0 || n < 2) return +valueof(values[0], 0, values);\n  if (p >= 1) return +valueof(values[n - 1], n - 1, values);\n  var n,\n      i = (n - 1) * p,\n      i0 = Math.floor(i),\n      value0 = +valueof(values[i0], i0, values),\n      value1 = +valueof(values[i0 + 1], i0 + 1, values);\n  return value0 + (value1 - value0) * (i - i0);\n}\n","export var prefix = \"$\";\n\nfunction Map() {}\n\nMap.prototype = map.prototype = {\n  constructor: Map,\n  has: function(key) {\n    return (prefix + key) in this;\n  },\n  get: function(key) {\n    return this[prefix + key];\n  },\n  set: function(key, value) {\n    this[prefix + key] = value;\n    return this;\n  },\n  remove: function(key) {\n    var property = prefix + key;\n    return property in this && delete this[property];\n  },\n  clear: function() {\n    for (var property in this) if (property[0] === prefix) delete this[property];\n  },\n  keys: function() {\n    var keys = [];\n    for (var property in this) if (property[0] === prefix) keys.push(property.slice(1));\n    return keys;\n  },\n  values: function() {\n    var values = [];\n    for (var property in this) if (property[0] === prefix) values.push(this[property]);\n    return values;\n  },\n  entries: function() {\n    var entries = [];\n    for (var property in this) if (property[0] === prefix) entries.push({key: property.slice(1), value: this[property]});\n    return entries;\n  },\n  size: function() {\n    var size = 0;\n    for (var property in this) if (property[0] === prefix) ++size;\n    return size;\n  },\n  empty: function() {\n    for (var property in this) if (property[0] === prefix) return false;\n    return true;\n  },\n  each: function(f) {\n    for (var property in this) if (property[0] === prefix) f(this[property], property.slice(1), this);\n  }\n};\n\nfunction map(object, f) {\n  var map = new Map;\n\n  // Copy constructor.\n  if (object instanceof Map) object.each(function(value, key) { map.set(key, value); });\n\n  // Index array by numeric index or specified key function.\n  else if (Array.isArray(object)) {\n    var i = -1,\n        n = object.length,\n        o;\n\n    if (f == null) while (++i < n) map.set(i, object[i]);\n    else while (++i < n) map.set(f(o = object[i], i, object), o);\n  }\n\n  // Convert object to map.\n  else if (object) for (var key in object) map.set(key, object[key]);\n\n  return map;\n}\n\nexport default map;\n","import map from \"./map\";\n\nexport default function() {\n  var keys = [],\n      sortKeys = [],\n      sortValues,\n      rollup,\n      nest;\n\n  function apply(array, depth, createResult, setResult) {\n    if (depth >= keys.length) {\n      if (sortValues != null) array.sort(sortValues);\n      return rollup != null ? rollup(array) : array;\n    }\n\n    var i = -1,\n        n = array.length,\n        key = keys[depth++],\n        keyValue,\n        value,\n        valuesByKey = map(),\n        values,\n        result = createResult();\n\n    while (++i < n) {\n      if (values = valuesByKey.get(keyValue = key(value = array[i]) + \"\")) {\n        values.push(value);\n      } else {\n        valuesByKey.set(keyValue, [value]);\n      }\n    }\n\n    valuesByKey.each(function(values, key) {\n      setResult(result, key, apply(values, depth, createResult, setResult));\n    });\n\n    return result;\n  }\n\n  function entries(map, depth) {\n    if (++depth > keys.length) return map;\n    var array, sortKey = sortKeys[depth - 1];\n    if (rollup != null && depth >= keys.length) array = map.entries();\n    else array = [], map.each(function(v, k) { array.push({key: k, values: entries(v, depth)}); });\n    return sortKey != null ? array.sort(function(a, b) { return sortKey(a.key, b.key); }) : array;\n  }\n\n  return nest = {\n    object: function(array) { return apply(array, 0, createObject, setObject); },\n    map: function(array) { return apply(array, 0, createMap, setMap); },\n    entries: function(array) { return entries(apply(array, 0, createMap, setMap), 0); },\n    key: function(d) { keys.push(d); return nest; },\n    sortKeys: function(order) { sortKeys[keys.length - 1] = order; return nest; },\n    sortValues: function(order) { sortValues = order; return nest; },\n    rollup: function(f) { rollup = f; return nest; }\n  };\n}\n\nfunction createObject() {\n  return {};\n}\n\nfunction setObject(object, key, value) {\n  object[key] = value;\n}\n\nfunction createMap() {\n  return map();\n}\n\nfunction setMap(map, key, value) {\n  map.set(key, value);\n}\n","import {default as map, prefix} from \"./map\";\n\nfunction Set() {}\n\nvar proto = map.prototype;\n\nSet.prototype = set.prototype = {\n  constructor: Set,\n  has: proto.has,\n  add: function(value) {\n    value += \"\";\n    this[prefix + value] = value;\n    return this;\n  },\n  remove: proto.remove,\n  clear: proto.clear,\n  values: proto.keys,\n  size: proto.size,\n  empty: proto.empty,\n  each: proto.each\n};\n\nfunction set(object, f) {\n  var set = new Set;\n\n  // Copy constructor.\n  if (object instanceof Set) object.each(function(value) { set.add(value); });\n\n  // Otherwise, assume it’s an array.\n  else if (object) {\n    var i = -1, n = object.length;\n    if (f == null) while (++i < n) set.add(object[i]);\n    else while (++i < n) set.add(f(object[i], i, object));\n  }\n\n  return set;\n}\n\nexport default set;\n","var array = Array.prototype;\n\nexport var map = array.map;\nexport var slice = array.slice;\n","import {map} from \"d3-collection\";\nimport {slice} from \"./array\";\n\nexport var implicit = {name: \"implicit\"};\n\nexport default function ordinal(range) {\n  var index = map(),\n      domain = [],\n      unknown = implicit;\n\n  range = range == null ? [] : slice.call(range);\n\n  function scale(d) {\n    var key = d + \"\", i = index.get(key);\n    if (!i) {\n      if (unknown !== implicit) return unknown;\n      index.set(key, i = domain.push(d));\n    }\n    return range[(i - 1) % range.length];\n  }\n\n  scale.domain = function(_) {\n    if (!arguments.length) return domain.slice();\n    domain = [], index = map();\n    var i = -1, n = _.length, d, key;\n    while (++i < n) if (!index.has(key = (d = _[i]) + \"\")) index.set(key, domain.push(d));\n    return scale;\n  };\n\n  scale.range = function(_) {\n    return arguments.length ? (range = slice.call(_), scale) : range.slice();\n  };\n\n  scale.unknown = function(_) {\n    return arguments.length ? (unknown = _, scale) : unknown;\n  };\n\n  scale.copy = function() {\n    return ordinal()\n        .domain(domain)\n        .range(range)\n        .unknown(unknown);\n  };\n\n  return scale;\n}\n","import {range as sequence} from \"d3-array\";\nimport ordinal from \"./ordinal\";\n\nexport default function band() {\n  var scale = ordinal().unknown(undefined),\n      domain = scale.domain,\n      ordinalRange = scale.range,\n      range = [0, 1],\n      step,\n      bandwidth,\n      round = false,\n      paddingInner = 0,\n      paddingOuter = 0,\n      align = 0.5;\n\n  delete scale.unknown;\n  function rescale() {\n    var n = domain().length,\n        reverse = range[1] < range[0],\n        start = range[reverse - 0],\n        stop = range[1 - reverse];\n    step = (stop - start) / Math.max(1, n - paddingInner + paddingOuter * 2);\n    if (round) step = Math.floor(step);\n    start += (stop - start - step * (n - paddingInner)) * align;\n    bandwidth = step * (1 - paddingInner);\n    if (round) start = Math.round(start), bandwidth = Math.round(bandwidth);\n    var values = sequence(n).map(function(i) { return start + step * i; });\n    return ordinalRange(reverse ? values.reverse() : values);\n  }\n\n  scale.domain = function(_) {\n    return arguments.length ? (domain(_), rescale()) : domain();\n  };\n\n  scale.range = function(_) {\n    return arguments.length ? (range = [+_[0], +_[1]], rescale()) : range.slice();\n  };\n\n  scale.rangeRound = function(_) {\n    return range = [+_[0], +_[1]], round = true, rescale();\n  };\n\n  scale.bandwidth = function() {\n    return bandwidth;\n  };\n\n  scale.step = function() {\n    return step;\n  };\n\n  scale.round = function(_) {\n    return arguments.length ? (round = !!_, rescale()) : round;\n  };\n\n  scale.padding = function(_) {\n    return arguments.length ? (paddingInner = paddingOuter = Math.max(0, Math.min(1, _)), rescale()) : paddingInner;\n  };\n\n  scale.paddingInner = function(_) {\n    return arguments.length ? (paddingInner = Math.max(0, Math.min(1, _)), rescale()) : paddingInner;\n  };\n\n  scale.paddingOuter = function(_) {\n    return arguments.length ? (paddingOuter = Math.max(0, Math.min(1, _)), rescale()) : paddingOuter;\n  };\n\n  scale.align = function(_) {\n    return arguments.length ? (align = Math.max(0, Math.min(1, _)), rescale()) : align;\n  };\n\n  scale.copy = function() {\n    return band()\n        .domain(domain())\n        .range(range)\n        .round(round)\n        .paddingInner(paddingInner)\n        .paddingOuter(paddingOuter)\n        .align(align);\n  };\n\n  scale.invertExtent = function(r0, r1) {\n    var lo = +r0,\n        hi = arguments.length > 1 ? +r1 : lo,\n        reverse = range[1] < range[0],\n        values = reverse ? ordinalRange().reverse() : ordinalRange(),\n        n = values.length - 1, a, b, t,\n        hiIndex;\n    values.push(values[n] + this.step());\n    // order range inputs, bail if outside of scale range\n    if (hi < lo) t = lo, lo = hi, hi = t;\n    if (hi < values[0] || lo > range[1-reverse]) return undefined;\n\n    // binary search to index into scale range\n    a = Math.max(0, getClosestIndexOf(values, lo));\n    hiIndex = getClosestIndexOf(values, hi);\n    b = lo===hi ? a : Math.max(a, hiIndex - 1);\n\n    // increment index a if lo is within padding gap\n    // if (lo - values[a] > bandwidth + 1e-10) ++a;\n\n    if (reverse) t = a, a = n - b, b = n - t; // map + swap\n    return (a > b) ? undefined : domain().slice(a, b+1);\n  };\n\n  scale.invert = function (r0, r1) {\n    var lo = +r0,\n        hi = arguments.length > 1 ? +r1 : lo,\n        reverse = range[1] < range[0],\n        values = reverse ? ordinalRange().reverse() : ordinalRange(),\n        n = values.length - 1,\n        a,\n        t;\n\n    // order range inputs, bail if outside of scale range\n    if (hi < lo) t = lo, lo = hi, hi = t;\n    if (hi < values[0] || lo > range[1-reverse]) return undefined;\n\n    // binary search to index into scale range\n    a = Math.max(0, getClosestIndexOf(values, lo, 'left'));\n\n    // increment index a if lo is within padding gap\n    // if (lo - values[a] > bandwidth + 1e-10) ++a;\n\n    return domain()[reverse ? n - a : a];\n  }\n  return rescale();\n}\n\nfunction pointish(scale) {\n  var copy = scale.copy;\n\n  scale.padding = scale.paddingOuter;\n  delete scale.paddingInner;\n  delete scale.paddingOuter;\n\n  scale.copy = function() {\n    return pointish(copy());\n  };\n\n  return scale;\n}\n\nexport function point() {\n  return pointish(band().paddingInner(1));\n}\n\nfunction getClosestIndexOf (arr, value, side) {\n  var low = 0,\n      arrLen = arr.length,\n      high = arrLen - 1,\n      highVal,\n      mid,\n      d1,\n      d2;\n\n  while (low < high) {\n      mid = Math.floor((low + high) / 2);\n      d1 = Math.abs(arr[mid] - value);\n      d2 = Math.abs(arr[mid + 1] - value);\n\n      if (d2 <= d1) {\n          low = mid + 1;\n      }\n      else {\n          high = mid;\n      }\n  }\n\n  if (!side) {\n      return high;\n  }\n\n  highVal = arr[high];\n  if (highVal === value) {\n      return high;\n  } else if (highVal > value) {\n      if (high === 0) { return high; }\n      return side === 'left'? high - 1 : high;\n  } else {\n      if (high === arr.length - 1) { return high; }\n      return side === 'left'? high : high + 1;\n  }\n}","export default function(constructor, factory, prototype) {\n  constructor.prototype = factory.prototype = prototype;\n  prototype.constructor = constructor;\n}\n\nexport function extend(parent, definition) {\n  var prototype = Object.create(parent.prototype);\n  for (var key in definition) prototype[key] = definition[key];\n  return prototype;\n}\n","import define, {extend} from \"./define\";\n\nexport function Color() {}\n\nexport var darker = 0.7;\nexport var brighter = 1 / darker;\n\nvar reI = \"\\\\s*([+-]?\\\\d+)\\\\s*\",\n    reN = \"\\\\s*([+-]?\\\\d*\\\\.?\\\\d+(?:[eE][+-]?\\\\d+)?)\\\\s*\",\n    reP = \"\\\\s*([+-]?\\\\d*\\\\.?\\\\d+(?:[eE][+-]?\\\\d+)?)%\\\\s*\",\n    reHex3 = /^#([0-9a-f]{3})$/,\n    reHex6 = /^#([0-9a-f]{6})$/,\n    reRgbInteger = new RegExp(\"^rgb\\\\(\" + [reI, reI, reI] + \"\\\\)$\"),\n    reRgbPercent = new RegExp(\"^rgb\\\\(\" + [reP, reP, reP] + \"\\\\)$\"),\n    reRgbaInteger = new RegExp(\"^rgba\\\\(\" + [reI, reI, reI, reN] + \"\\\\)$\"),\n    reRgbaPercent = new RegExp(\"^rgba\\\\(\" + [reP, reP, reP, reN] + \"\\\\)$\"),\n    reHslPercent = new RegExp(\"^hsl\\\\(\" + [reN, reP, reP] + \"\\\\)$\"),\n    reHslaPercent = new RegExp(\"^hsla\\\\(\" + [reN, reP, reP, reN] + \"\\\\)$\");\n\nvar named = {\n  aliceblue: 0xf0f8ff,\n  antiquewhite: 0xfaebd7,\n  aqua: 0x00ffff,\n  aquamarine: 0x7fffd4,\n  azure: 0xf0ffff,\n  beige: 0xf5f5dc,\n  bisque: 0xffe4c4,\n  black: 0x000000,\n  blanchedalmond: 0xffebcd,\n  blue: 0x0000ff,\n  blueviolet: 0x8a2be2,\n  brown: 0xa52a2a,\n  burlywood: 0xdeb887,\n  cadetblue: 0x5f9ea0,\n  chartreuse: 0x7fff00,\n  chocolate: 0xd2691e,\n  coral: 0xff7f50,\n  cornflowerblue: 0x6495ed,\n  cornsilk: 0xfff8dc,\n  crimson: 0xdc143c,\n  cyan: 0x00ffff,\n  darkblue: 0x00008b,\n  darkcyan: 0x008b8b,\n  darkgoldenrod: 0xb8860b,\n  darkgray: 0xa9a9a9,\n  darkgreen: 0x006400,\n  darkgrey: 0xa9a9a9,\n  darkkhaki: 0xbdb76b,\n  darkmagenta: 0x8b008b,\n  darkolivegreen: 0x556b2f,\n  darkorange: 0xff8c00,\n  darkorchid: 0x9932cc,\n  darkred: 0x8b0000,\n  darksalmon: 0xe9967a,\n  darkseagreen: 0x8fbc8f,\n  darkslateblue: 0x483d8b,\n  darkslategray: 0x2f4f4f,\n  darkslategrey: 0x2f4f4f,\n  darkturquoise: 0x00ced1,\n  darkviolet: 0x9400d3,\n  deeppink: 0xff1493,\n  deepskyblue: 0x00bfff,\n  dimgray: 0x696969,\n  dimgrey: 0x696969,\n  dodgerblue: 0x1e90ff,\n  firebrick: 0xb22222,\n  floralwhite: 0xfffaf0,\n  forestgreen: 0x228b22,\n  fuchsia: 0xff00ff,\n  gainsboro: 0xdcdcdc,\n  ghostwhite: 0xf8f8ff,\n  gold: 0xffd700,\n  goldenrod: 0xdaa520,\n  gray: 0x808080,\n  green: 0x008000,\n  greenyellow: 0xadff2f,\n  grey: 0x808080,\n  honeydew: 0xf0fff0,\n  hotpink: 0xff69b4,\n  indianred: 0xcd5c5c,\n  indigo: 0x4b0082,\n  ivory: 0xfffff0,\n  khaki: 0xf0e68c,\n  lavender: 0xe6e6fa,\n  lavenderblush: 0xfff0f5,\n  lawngreen: 0x7cfc00,\n  lemonchiffon: 0xfffacd,\n  lightblue: 0xadd8e6,\n  lightcoral: 0xf08080,\n  lightcyan: 0xe0ffff,\n  lightgoldenrodyellow: 0xfafad2,\n  lightgray: 0xd3d3d3,\n  lightgreen: 0x90ee90,\n  lightgrey: 0xd3d3d3,\n  lightpink: 0xffb6c1,\n  lightsalmon: 0xffa07a,\n  lightseagreen: 0x20b2aa,\n  lightskyblue: 0x87cefa,\n  lightslategray: 0x778899,\n  lightslategrey: 0x778899,\n  lightsteelblue: 0xb0c4de,\n  lightyellow: 0xffffe0,\n  lime: 0x00ff00,\n  limegreen: 0x32cd32,\n  linen: 0xfaf0e6,\n  magenta: 0xff00ff,\n  maroon: 0x800000,\n  mediumaquamarine: 0x66cdaa,\n  mediumblue: 0x0000cd,\n  mediumorchid: 0xba55d3,\n  mediumpurple: 0x9370db,\n  mediumseagreen: 0x3cb371,\n  mediumslateblue: 0x7b68ee,\n  mediumspringgreen: 0x00fa9a,\n  mediumturquoise: 0x48d1cc,\n  mediumvioletred: 0xc71585,\n  midnightblue: 0x191970,\n  mintcream: 0xf5fffa,\n  mistyrose: 0xffe4e1,\n  moccasin: 0xffe4b5,\n  navajowhite: 0xffdead,\n  navy: 0x000080,\n  oldlace: 0xfdf5e6,\n  olive: 0x808000,\n  olivedrab: 0x6b8e23,\n  orange: 0xffa500,\n  orangered: 0xff4500,\n  orchid: 0xda70d6,\n  palegoldenrod: 0xeee8aa,\n  palegreen: 0x98fb98,\n  paleturquoise: 0xafeeee,\n  palevioletred: 0xdb7093,\n  papayawhip: 0xffefd5,\n  peachpuff: 0xffdab9,\n  peru: 0xcd853f,\n  pink: 0xffc0cb,\n  plum: 0xdda0dd,\n  powderblue: 0xb0e0e6,\n  purple: 0x800080,\n  rebeccapurple: 0x663399,\n  red: 0xff0000,\n  rosybrown: 0xbc8f8f,\n  royalblue: 0x4169e1,\n  saddlebrown: 0x8b4513,\n  salmon: 0xfa8072,\n  sandybrown: 0xf4a460,\n  seagreen: 0x2e8b57,\n  seashell: 0xfff5ee,\n  sienna: 0xa0522d,\n  silver: 0xc0c0c0,\n  skyblue: 0x87ceeb,\n  slateblue: 0x6a5acd,\n  slategray: 0x708090,\n  slategrey: 0x708090,\n  snow: 0xfffafa,\n  springgreen: 0x00ff7f,\n  steelblue: 0x4682b4,\n  tan: 0xd2b48c,\n  teal: 0x008080,\n  thistle: 0xd8bfd8,\n  tomato: 0xff6347,\n  turquoise: 0x40e0d0,\n  violet: 0xee82ee,\n  wheat: 0xf5deb3,\n  white: 0xffffff,\n  whitesmoke: 0xf5f5f5,\n  yellow: 0xffff00,\n  yellowgreen: 0x9acd32\n};\n\ndefine(Color, color, {\n  displayable: function() {\n    return this.rgb().displayable();\n  },\n  hex: function() {\n    return this.rgb().hex();\n  },\n  toString: function() {\n    return this.rgb() + \"\";\n  }\n});\n\nexport default function color(format) {\n  var m;\n  format = (format + \"\").trim().toLowerCase();\n  return (m = reHex3.exec(format)) ? (m = parseInt(m[1], 16), new Rgb((m >> 8 & 0xf) | (m >> 4 & 0x0f0), (m >> 4 & 0xf) | (m & 0xf0), ((m & 0xf) << 4) | (m & 0xf), 1)) // #f00\n      : (m = reHex6.exec(format)) ? rgbn(parseInt(m[1], 16)) // #ff0000\n      : (m = reRgbInteger.exec(format)) ? new Rgb(m[1], m[2], m[3], 1) // rgb(255, 0, 0)\n      : (m = reRgbPercent.exec(format)) ? new Rgb(m[1] * 255 / 100, m[2] * 255 / 100, m[3] * 255 / 100, 1) // rgb(100%, 0%, 0%)\n      : (m = reRgbaInteger.exec(format)) ? rgba(m[1], m[2], m[3], m[4]) // rgba(255, 0, 0, 1)\n      : (m = reRgbaPercent.exec(format)) ? rgba(m[1] * 255 / 100, m[2] * 255 / 100, m[3] * 255 / 100, m[4]) // rgb(100%, 0%, 0%, 1)\n      : (m = reHslPercent.exec(format)) ? hsla(m[1], m[2] / 100, m[3] / 100, 1) // hsl(120, 50%, 50%)\n      : (m = reHslaPercent.exec(format)) ? hsla(m[1], m[2] / 100, m[3] / 100, m[4]) // hsla(120, 50%, 50%, 1)\n      : named.hasOwnProperty(format) ? rgbn(named[format])\n      : format === \"transparent\" ? new Rgb(NaN, NaN, NaN, 0)\n      : null;\n}\n\nfunction rgbn(n) {\n  return new Rgb(n >> 16 & 0xff, n >> 8 & 0xff, n & 0xff, 1);\n}\n\nfunction rgba(r, g, b, a) {\n  if (a <= 0) r = g = b = NaN;\n  return new Rgb(r, g, b, a);\n}\n\nexport function rgbConvert(o) {\n  if (!(o instanceof Color)) o = color(o);\n  if (!o) return new Rgb;\n  o = o.rgb();\n  return new Rgb(o.r, o.g, o.b, o.opacity);\n}\n\nexport function rgb(r, g, b, opacity) {\n  return arguments.length === 1 ? rgbConvert(r) : new Rgb(r, g, b, opacity == null ? 1 : opacity);\n}\n\nexport function Rgb(r, g, b, opacity) {\n  this.r = +r;\n  this.g = +g;\n  this.b = +b;\n  this.opacity = +opacity;\n}\n\ndefine(Rgb, rgb, extend(Color, {\n  brighter: function(k) {\n    k = k == null ? brighter : Math.pow(brighter, k);\n    return new Rgb(this.r * k, this.g * k, this.b * k, this.opacity);\n  },\n  darker: function(k) {\n    k = k == null ? darker : Math.pow(darker, k);\n    return new Rgb(this.r * k, this.g * k, this.b * k, this.opacity);\n  },\n  rgb: function() {\n    return this;\n  },\n  displayable: function() {\n    return (0 <= this.r && this.r <= 255)\n        && (0 <= this.g && this.g <= 255)\n        && (0 <= this.b && this.b <= 255)\n        && (0 <= this.opacity && this.opacity <= 1);\n  },\n  hex: function() {\n    return \"#\" + hex(this.r) + hex(this.g) + hex(this.b);\n  },\n  toString: function() {\n    var a = this.opacity; a = isNaN(a) ? 1 : Math.max(0, Math.min(1, a));\n    return (a === 1 ? \"rgb(\" : \"rgba(\")\n        + Math.max(0, Math.min(255, Math.round(this.r) || 0)) + \", \"\n        + Math.max(0, Math.min(255, Math.round(this.g) || 0)) + \", \"\n        + Math.max(0, Math.min(255, Math.round(this.b) || 0))\n        + (a === 1 ? \")\" : \", \" + a + \")\");\n  }\n}));\n\nfunction hex(value) {\n  value = Math.max(0, Math.min(255, Math.round(value) || 0));\n  return (value < 16 ? \"0\" : \"\") + value.toString(16);\n}\n\nfunction hsla(h, s, l, a) {\n  if (a <= 0) h = s = l = NaN;\n  else if (l <= 0 || l >= 1) h = s = NaN;\n  else if (s <= 0) h = NaN;\n  return new Hsl(h, s, l, a);\n}\n\nexport function hslConvert(o) {\n  if (o instanceof Hsl) return new Hsl(o.h, o.s, o.l, o.opacity);\n  if (!(o instanceof Color)) o = color(o);\n  if (!o) return new Hsl;\n  if (o instanceof Hsl) return o;\n  o = o.rgb();\n  var r = o.r / 255,\n      g = o.g / 255,\n      b = o.b / 255,\n      min = Math.min(r, g, b),\n      max = Math.max(r, g, b),\n      h = NaN,\n      s = max - min,\n      l = (max + min) / 2;\n  if (s) {\n    if (r === max) h = (g - b) / s + (g < b) * 6;\n    else if (g === max) h = (b - r) / s + 2;\n    else h = (r - g) / s + 4;\n    s /= l < 0.5 ? max + min : 2 - max - min;\n    h *= 60;\n  } else {\n    s = l > 0 && l < 1 ? 0 : h;\n  }\n  return new Hsl(h, s, l, o.opacity);\n}\n\nexport function hsl(h, s, l, opacity) {\n  return arguments.length === 1 ? hslConvert(h) : new Hsl(h, s, l, opacity == null ? 1 : opacity);\n}\n\nfunction Hsl(h, s, l, opacity) {\n  this.h = +h;\n  this.s = +s;\n  this.l = +l;\n  this.opacity = +opacity;\n}\n\ndefine(Hsl, hsl, extend(Color, {\n  brighter: function(k) {\n    k = k == null ? brighter : Math.pow(brighter, k);\n    return new Hsl(this.h, this.s, this.l * k, this.opacity);\n  },\n  darker: function(k) {\n    k = k == null ? darker : Math.pow(darker, k);\n    return new Hsl(this.h, this.s, this.l * k, this.opacity);\n  },\n  rgb: function() {\n    var h = this.h % 360 + (this.h < 0) * 360,\n        s = isNaN(h) || isNaN(this.s) ? 0 : this.s,\n        l = this.l,\n        m2 = l + (l < 0.5 ? l : 1 - l) * s,\n        m1 = 2 * l - m2;\n    return new Rgb(\n      hsl2rgb(h >= 240 ? h - 240 : h + 120, m1, m2),\n      hsl2rgb(h, m1, m2),\n      hsl2rgb(h < 120 ? h + 240 : h - 120, m1, m2),\n      this.opacity\n    );\n  },\n  displayable: function() {\n    return (0 <= this.s && this.s <= 1 || isNaN(this.s))\n        && (0 <= this.l && this.l <= 1)\n        && (0 <= this.opacity && this.opacity <= 1);\n  }\n}));\n\n/* From FvD 13.37, CSS Color Module Level 3 */\nfunction hsl2rgb(h, m1, m2) {\n  return (h < 60 ? m1 + (m2 - m1) * h / 60\n      : h < 180 ? m2\n      : h < 240 ? m1 + (m2 - m1) * (240 - h) / 60\n      : m1) * 255;\n}\n","export var deg2rad = Math.PI / 180;\nexport var rad2deg = 180 / Math.PI;\n","import define, {extend} from \"./define\";\nimport {Color, rgbConvert, Rgb} from \"./color\";\nimport {deg2rad, rad2deg} from \"./math\";\n\n// https://beta.observablehq.com/@mbostock/lab-and-rgb\nvar K = 18,\n    Xn = 0.96422,\n    Yn = 1,\n    Zn = 0.82521,\n    t0 = 4 / 29,\n    t1 = 6 / 29,\n    t2 = 3 * t1 * t1,\n    t3 = t1 * t1 * t1;\n\nfunction labConvert(o) {\n  if (o instanceof Lab) return new Lab(o.l, o.a, o.b, o.opacity);\n  if (o instanceof Hcl) {\n    if (isNaN(o.h)) return new Lab(o.l, 0, 0, o.opacity);\n    var h = o.h * deg2rad;\n    return new Lab(o.l, Math.cos(h) * o.c, Math.sin(h) * o.c, o.opacity);\n  }\n  if (!(o instanceof Rgb)) o = rgbConvert(o);\n  var r = rgb2lrgb(o.r),\n      g = rgb2lrgb(o.g),\n      b = rgb2lrgb(o.b),\n      y = xyz2lab((0.2225045 * r + 0.7168786 * g + 0.0606169 * b) / Yn), x, z;\n  if (r === g && g === b) x = z = y; else {\n    x = xyz2lab((0.4360747 * r + 0.3850649 * g + 0.1430804 * b) / Xn);\n    z = xyz2lab((0.0139322 * r + 0.0971045 * g + 0.7141733 * b) / Zn);\n  }\n  return new Lab(116 * y - 16, 500 * (x - y), 200 * (y - z), o.opacity);\n}\n\nexport function gray(l, opacity) {\n  return new Lab(l, 0, 0, opacity == null ? 1 : opacity);\n}\n\nexport default function lab(l, a, b, opacity) {\n  return arguments.length === 1 ? labConvert(l) : new Lab(l, a, b, opacity == null ? 1 : opacity);\n}\n\nexport function Lab(l, a, b, opacity) {\n  this.l = +l;\n  this.a = +a;\n  this.b = +b;\n  this.opacity = +opacity;\n}\n\ndefine(Lab, lab, extend(Color, {\n  brighter: function(k) {\n    return new Lab(this.l + K * (k == null ? 1 : k), this.a, this.b, this.opacity);\n  },\n  darker: function(k) {\n    return new Lab(this.l - K * (k == null ? 1 : k), this.a, this.b, this.opacity);\n  },\n  rgb: function() {\n    var y = (this.l + 16) / 116,\n        x = isNaN(this.a) ? y : y + this.a / 500,\n        z = isNaN(this.b) ? y : y - this.b / 200;\n    x = Xn * lab2xyz(x);\n    y = Yn * lab2xyz(y);\n    z = Zn * lab2xyz(z);\n    return new Rgb(\n      lrgb2rgb( 3.1338561 * x - 1.6168667 * y - 0.4906146 * z),\n      lrgb2rgb(-0.9787684 * x + 1.9161415 * y + 0.0334540 * z),\n      lrgb2rgb( 0.0719453 * x - 0.2289914 * y + 1.4052427 * z),\n      this.opacity\n    );\n  }\n}));\n\nfunction xyz2lab(t) {\n  return t > t3 ? Math.pow(t, 1 / 3) : t / t2 + t0;\n}\n\nfunction lab2xyz(t) {\n  return t > t1 ? t * t * t : t2 * (t - t0);\n}\n\nfunction lrgb2rgb(x) {\n  return 255 * (x <= 0.0031308 ? 12.92 * x : 1.055 * Math.pow(x, 1 / 2.4) - 0.055);\n}\n\nfunction rgb2lrgb(x) {\n  return (x /= 255) <= 0.04045 ? x / 12.92 : Math.pow((x + 0.055) / 1.055, 2.4);\n}\n\nfunction hclConvert(o) {\n  if (o instanceof Hcl) return new Hcl(o.h, o.c, o.l, o.opacity);\n  if (!(o instanceof Lab)) o = labConvert(o);\n  if (o.a === 0 && o.b === 0) return new Hcl(NaN, 0, o.l, o.opacity);\n  var h = Math.atan2(o.b, o.a) * rad2deg;\n  return new Hcl(h < 0 ? h + 360 : h, Math.sqrt(o.a * o.a + o.b * o.b), o.l, o.opacity);\n}\n\nexport function lch(l, c, h, opacity) {\n  return arguments.length === 1 ? hclConvert(l) : new Hcl(h, c, l, opacity == null ? 1 : opacity);\n}\n\nexport function hcl(h, c, l, opacity) {\n  return arguments.length === 1 ? hclConvert(h) : new Hcl(h, c, l, opacity == null ? 1 : opacity);\n}\n\nexport function Hcl(h, c, l, opacity) {\n  this.h = +h;\n  this.c = +c;\n  this.l = +l;\n  this.opacity = +opacity;\n}\n\ndefine(Hcl, hcl, extend(Color, {\n  brighter: function(k) {\n    return new Hcl(this.h, this.c, this.l + K * (k == null ? 1 : k), this.opacity);\n  },\n  darker: function(k) {\n    return new Hcl(this.h, this.c, this.l - K * (k == null ? 1 : k), this.opacity);\n  },\n  rgb: function() {\n    return labConvert(this).rgb();\n  }\n}));\n","import define, {extend} from \"./define\";\nimport {Color, rgbConvert, Rgb, darker, brighter} from \"./color\";\nimport {deg2rad, rad2deg} from \"./math\";\n\nvar A = -0.14861,\n    B = +1.78277,\n    C = -0.29227,\n    D = -0.90649,\n    E = +1.97294,\n    ED = E * D,\n    EB = E * B,\n    BC_DA = B * C - D * A;\n\nfunction cubehelixConvert(o) {\n  if (o instanceof Cubehelix) return new Cubehelix(o.h, o.s, o.l, o.opacity);\n  if (!(o instanceof Rgb)) o = rgbConvert(o);\n  var r = o.r / 255,\n      g = o.g / 255,\n      b = o.b / 255,\n      l = (BC_DA * b + ED * r - EB * g) / (BC_DA + ED - EB),\n      bl = b - l,\n      k = (E * (g - l) - C * bl) / D,\n      s = Math.sqrt(k * k + bl * bl) / (E * l * (1 - l)), // NaN if l=0 or l=1\n      h = s ? Math.atan2(k, bl) * rad2deg - 120 : NaN;\n  return new Cubehelix(h < 0 ? h + 360 : h, s, l, o.opacity);\n}\n\nexport default function cubehelix(h, s, l, opacity) {\n  return arguments.length === 1 ? cubehelixConvert(h) : new Cubehelix(h, s, l, opacity == null ? 1 : opacity);\n}\n\nexport function Cubehelix(h, s, l, opacity) {\n  this.h = +h;\n  this.s = +s;\n  this.l = +l;\n  this.opacity = +opacity;\n}\n\ndefine(Cubehelix, cubehelix, extend(Color, {\n  brighter: function(k) {\n    k = k == null ? brighter : Math.pow(brighter, k);\n    return new Cubehelix(this.h, this.s, this.l * k, this.opacity);\n  },\n  darker: function(k) {\n    k = k == null ? darker : Math.pow(darker, k);\n    return new Cubehelix(this.h, this.s, this.l * k, this.opacity);\n  },\n  rgb: function() {\n    var h = isNaN(this.h) ? 0 : (this.h + 120) * deg2rad,\n        l = +this.l,\n        a = isNaN(this.s) ? 0 : this.s * l * (1 - l),\n        cosh = Math.cos(h),\n        sinh = Math.sin(h);\n    return new Rgb(\n      255 * (l + a * (A * cosh + B * sinh)),\n      255 * (l + a * (C * cosh + D * sinh)),\n      255 * (l + a * (E * cosh)),\n      this.opacity\n    );\n  }\n}));\n","export function basis(t1, v0, v1, v2, v3) {\n  var t2 = t1 * t1, t3 = t2 * t1;\n  return ((1 - 3 * t1 + 3 * t2 - t3) * v0\n      + (4 - 6 * t2 + 3 * t3) * v1\n      + (1 + 3 * t1 + 3 * t2 - 3 * t3) * v2\n      + t3 * v3) / 6;\n}\n\nexport default function(values) {\n  var n = values.length - 1;\n  return function(t) {\n    var i = t <= 0 ? (t = 0) : t >= 1 ? (t = 1, n - 1) : Math.floor(t * n),\n        v1 = values[i],\n        v2 = values[i + 1],\n        v0 = i > 0 ? values[i - 1] : 2 * v1 - v2,\n        v3 = i < n - 1 ? values[i + 2] : 2 * v2 - v1;\n    return basis((t - i / n) * n, v0, v1, v2, v3);\n  };\n}\n","export default function(x) {\n  return function() {\n    return x;\n  };\n}\n","import constant from \"./constant\";\n\nfunction linear(a, d) {\n  return function(t) {\n    return a + t * d;\n  };\n}\n\nfunction exponential(a, b, y) {\n  return a = Math.pow(a, y), b = Math.pow(b, y) - a, y = 1 / y, function(t) {\n    return Math.pow(a + t * b, y);\n  };\n}\n\nexport function hue(a, b) {\n  var d = b - a;\n  return d ? linear(a, d > 180 || d < -180 ? d - 360 * Math.round(d / 360) : d) : constant(isNaN(a) ? b : a);\n}\n\nexport function gamma(y) {\n  return (y = +y) === 1 ? nogamma : function(a, b) {\n    return b - a ? exponential(a, b, y) : constant(isNaN(a) ? b : a);\n  };\n}\n\nexport default function nogamma(a, b) {\n  var d = b - a;\n  return d ? linear(a, d) : constant(isNaN(a) ? b : a);\n}\n","import {rgb as colorRgb} from \"d3-color\";\nimport basis from \"./basis\";\nimport basisClosed from \"./basisClosed\";\nimport nogamma, {gamma} from \"./color\";\n\nexport default (function rgbGamma(y) {\n  var color = gamma(y);\n\n  function rgb(start, end) {\n    var r = color((start = colorRgb(start)).r, (end = colorRgb(end)).r),\n        g = color(start.g, end.g),\n        b = color(start.b, end.b),\n        opacity = nogamma(start.opacity, end.opacity);\n    return function(t) {\n      start.r = r(t);\n      start.g = g(t);\n      start.b = b(t);\n      start.opacity = opacity(t);\n      return start + \"\";\n    };\n  }\n\n  rgb.gamma = rgbGamma;\n\n  return rgb;\n})(1);\n\nfunction rgbSpline(spline) {\n  return function(colors) {\n    var n = colors.length,\n        r = new Array(n),\n        g = new Array(n),\n        b = new Array(n),\n        i, color;\n    for (i = 0; i < n; ++i) {\n      color = colorRgb(colors[i]);\n      r[i] = color.r || 0;\n      g[i] = color.g || 0;\n      b[i] = color.b || 0;\n    }\n    r = spline(r);\n    g = spline(g);\n    b = spline(b);\n    color.opacity = 1;\n    return function(t) {\n      color.r = r(t);\n      color.g = g(t);\n      color.b = b(t);\n      return color + \"\";\n    };\n  };\n}\n\nexport var rgbBasis = rgbSpline(basis);\nexport var rgbBasisClosed = rgbSpline(basisClosed);\n","export default function(a, b) {\n  return a = +a, b -= a, function(t) {\n    return a + b * t;\n  };\n}\n","import {basis} from \"./basis\";\n\nexport default function(values) {\n  var n = values.length;\n  return function(t) {\n    var i = Math.floor(((t %= 1) < 0 ? ++t : t) * n),\n        v0 = values[(i + n - 1) % n],\n        v1 = values[i % n],\n        v2 = values[(i + 1) % n],\n        v3 = values[(i + 2) % n];\n    return basis((t - i / n) * n, v0, v1, v2, v3);\n  };\n}\n","import value from \"./value\";\n\nexport default function(a, b) {\n  var i = {},\n      c = {},\n      k;\n\n  if (a === null || typeof a !== \"object\") a = {};\n  if (b === null || typeof b !== \"object\") b = {};\n\n  for (k in b) {\n    if (k in a) {\n      i[k] = value(a[k], b[k]);\n    } else {\n      c[k] = b[k];\n    }\n  }\n\n  return function(t) {\n    for (k in i) c[k] = i[k](t);\n    return c;\n  };\n}\n","import number from \"./number\";\n\nvar reA = /[-+]?(?:\\d+\\.?\\d*|\\.?\\d+)(?:[eE][-+]?\\d+)?/g,\n    reB = new RegExp(reA.source, \"g\");\n\nfunction zero(b) {\n  return function() {\n    return b;\n  };\n}\n\nfunction one(b) {\n  return function(t) {\n    return b(t) + \"\";\n  };\n}\n\nexport default function(a, b) {\n  var bi = reA.lastIndex = reB.lastIndex = 0, // scan index for next number in b\n      am, // current match in a\n      bm, // current match in b\n      bs, // string preceding current number in b, if any\n      i = -1, // index in s\n      s = [], // string constants and placeholders\n      q = []; // number interpolators\n\n  // Coerce inputs to strings.\n  a = a + \"\", b = b + \"\";\n\n  // Interpolate pairs of numbers in a & b.\n  while ((am = reA.exec(a))\n      && (bm = reB.exec(b))) {\n    if ((bs = bm.index) > bi) { // a string precedes the next number in b\n      bs = b.slice(bi, bs);\n      if (s[i]) s[i] += bs; // coalesce with previous string\n      else s[++i] = bs;\n    }\n    if ((am = am[0]) === (bm = bm[0])) { // numbers in a & b match\n      if (s[i]) s[i] += bm; // coalesce with previous string\n      else s[++i] = bm;\n    } else { // interpolate non-matching numbers\n      s[++i] = null;\n      q.push({i: i, x: number(am, bm)});\n    }\n    bi = reB.lastIndex;\n  }\n\n  // Add remains of b.\n  if (bi < b.length) {\n    bs = b.slice(bi);\n    if (s[i]) s[i] += bs; // coalesce with previous string\n    else s[++i] = bs;\n  }\n\n  // Special optimization for only a single match.\n  // Otherwise, interpolate each of the numbers and rejoin the string.\n  return s.length < 2 ? (q[0]\n      ? one(q[0].x)\n      : zero(b))\n      : (b = q.length, function(t) {\n          for (var i = 0, o; i < b; ++i) s[(o = q[i]).i] = o.x(t);\n          return s.join(\"\");\n        });\n}\n","import {color} from \"d3-color\";\nimport rgb from \"./rgb\";\nimport array from \"./array\";\nimport date from \"./date\";\nimport number from \"./number\";\nimport object from \"./object\";\nimport string from \"./string\";\nimport constant from \"./constant\";\n\nexport default function(a, b) {\n  var t = typeof b, c;\n  return b == null || t === \"boolean\" ? constant(b)\n      : (t === \"number\" ? number\n      : t === \"string\" ? ((c = color(b)) ? (b = c, rgb) : string)\n      : b instanceof color ? rgb\n      : b instanceof Date ? date\n      : Array.isArray(b) ? array\n      : typeof b.valueOf !== \"function\" && typeof b.toString !== \"function\" || isNaN(b) ? object\n      : number)(a, b);\n}\n","import decompose, {identity} from \"./decompose\";\n\nvar cssNode,\n    cssRoot,\n    cssView,\n    svgNode;\n\nexport function parseCss(value) {\n  if (value === \"none\") return identity;\n  if (!cssNode) cssNode = document.createElement(\"DIV\"), cssRoot = document.documentElement, cssView = document.defaultView;\n  cssNode.style.transform = value;\n  value = cssView.getComputedStyle(cssRoot.appendChild(cssNode), null).getPropertyValue(\"transform\");\n  cssRoot.removeChild(cssNode);\n  value = value.slice(7, -1).split(\",\");\n  return decompose(+value[0], +value[1], +value[2], +value[3], +value[4], +value[5]);\n}\n\nexport function parseSvg(value) {\n  if (value == null) return identity;\n  if (!svgNode) svgNode = document.createElementNS(\"http://www.w3.org/2000/svg\", \"g\");\n  svgNode.setAttribute(\"transform\", value);\n  if (!(value = svgNode.transform.baseVal.consolidate())) return identity;\n  value = value.matrix;\n  return decompose(value.a, value.b, value.c, value.d, value.e, value.f);\n}\n","export default function(a, b) {\n  var d = new Date;\n  return a = +a, b -= a, function(t) {\n    return d.setTime(a + b * t), d;\n  };\n}\n","import value from \"./value\";\n\nexport default function(a, b) {\n  var nb = b ? b.length : 0,\n      na = a ? Math.min(nb, a.length) : 0,\n      x = new Array(na),\n      c = new Array(nb),\n      i;\n\n  for (i = 0; i < na; ++i) x[i] = value(a[i], b[i]);\n  for (; i < nb; ++i) c[i] = b[i];\n\n  return function(t) {\n    for (i = 0; i < na; ++i) c[i] = x[i](t);\n    return c;\n  };\n}\n","export default function(a, b) {\n  return a = +a, b -= a, function(t) {\n    return Math.round(a + b * t);\n  };\n}\n","var degrees = 180 / Math.PI;\n\nexport var identity = {\n  translateX: 0,\n  translateY: 0,\n  rotate: 0,\n  skewX: 0,\n  scaleX: 1,\n  scaleY: 1\n};\n\nexport default function(a, b, c, d, e, f) {\n  var scaleX, scaleY, skewX;\n  if (scaleX = Math.sqrt(a * a + b * b)) a /= scaleX, b /= scaleX;\n  if (skewX = a * c + b * d) c -= a * skewX, d -= b * skewX;\n  if (scaleY = Math.sqrt(c * c + d * d)) c /= scaleY, d /= scaleY, skewX /= scaleY;\n  if (a * d < b * c) a = -a, b = -b, skewX = -skewX, scaleX = -scaleX;\n  return {\n    translateX: e,\n    translateY: f,\n    rotate: Math.atan2(b, a) * degrees,\n    skewX: Math.atan(skewX) * degrees,\n    scaleX: scaleX,\n    scaleY: scaleY\n  };\n}\n","import number from \"../number\";\nimport {parseCss, parseSvg} from \"./parse\";\n\nfunction interpolateTransform(parse, pxComma, pxParen, degParen) {\n\n  function pop(s) {\n    return s.length ? s.pop() + \" \" : \"\";\n  }\n\n  function translate(xa, ya, xb, yb, s, q) {\n    if (xa !== xb || ya !== yb) {\n      var i = s.push(\"translate(\", null, pxComma, null, pxParen);\n      q.push({i: i - 4, x: number(xa, xb)}, {i: i - 2, x: number(ya, yb)});\n    } else if (xb || yb) {\n      s.push(\"translate(\" + xb + pxComma + yb + pxParen);\n    }\n  }\n\n  function rotate(a, b, s, q) {\n    if (a !== b) {\n      if (a - b > 180) b += 360; else if (b - a > 180) a += 360; // shortest path\n      q.push({i: s.push(pop(s) + \"rotate(\", null, degParen) - 2, x: number(a, b)});\n    } else if (b) {\n      s.push(pop(s) + \"rotate(\" + b + degParen);\n    }\n  }\n\n  function skewX(a, b, s, q) {\n    if (a !== b) {\n      q.push({i: s.push(pop(s) + \"skewX(\", null, degParen) - 2, x: number(a, b)});\n    } else if (b) {\n      s.push(pop(s) + \"skewX(\" + b + degParen);\n    }\n  }\n\n  function scale(xa, ya, xb, yb, s, q) {\n    if (xa !== xb || ya !== yb) {\n      var i = s.push(pop(s) + \"scale(\", null, \",\", null, \")\");\n      q.push({i: i - 4, x: number(xa, xb)}, {i: i - 2, x: number(ya, yb)});\n    } else if (xb !== 1 || yb !== 1) {\n      s.push(pop(s) + \"scale(\" + xb + \",\" + yb + \")\");\n    }\n  }\n\n  return function(a, b) {\n    var s = [], // string constants and placeholders\n        q = []; // number interpolators\n    a = parse(a), b = parse(b);\n    translate(a.translateX, a.translateY, b.translateX, b.translateY, s, q);\n    rotate(a.rotate, b.rotate, s, q);\n    skewX(a.skewX, b.skewX, s, q);\n    scale(a.scaleX, a.scaleY, b.scaleX, b.scaleY, s, q);\n    a = b = null; // gc\n    return function(t) {\n      var i = -1, n = q.length, o;\n      while (++i < n) s[(o = q[i]).i] = o.x(t);\n      return s.join(\"\");\n    };\n  };\n}\n\nexport var interpolateTransformCss = interpolateTransform(parseCss, \"px, \", \"px)\", \"deg)\");\nexport var interpolateTransformSvg = interpolateTransform(parseSvg, \", \", \")\", \")\");\n","var rho = Math.SQRT2,\n    rho2 = 2,\n    rho4 = 4,\n    epsilon2 = 1e-12;\n\nfunction cosh(x) {\n  return ((x = Math.exp(x)) + 1 / x) / 2;\n}\n\nfunction sinh(x) {\n  return ((x = Math.exp(x)) - 1 / x) / 2;\n}\n\nfunction tanh(x) {\n  return ((x = Math.exp(2 * x)) - 1) / (x + 1);\n}\n\n// p0 = [ux0, uy0, w0]\n// p1 = [ux1, uy1, w1]\nexport default function(p0, p1) {\n  var ux0 = p0[0], uy0 = p0[1], w0 = p0[2],\n      ux1 = p1[0], uy1 = p1[1], w1 = p1[2],\n      dx = ux1 - ux0,\n      dy = uy1 - uy0,\n      d2 = dx * dx + dy * dy,\n      i,\n      S;\n\n  // Special case for u0 ≅ u1.\n  if (d2 < epsilon2) {\n    S = Math.log(w1 / w0) / rho;\n    i = function(t) {\n      return [\n        ux0 + t * dx,\n        uy0 + t * dy,\n        w0 * Math.exp(rho * t * S)\n      ];\n    }\n  }\n\n  // General case.\n  else {\n    var d1 = Math.sqrt(d2),\n        b0 = (w1 * w1 - w0 * w0 + rho4 * d2) / (2 * w0 * rho2 * d1),\n        b1 = (w1 * w1 - w0 * w0 - rho4 * d2) / (2 * w1 * rho2 * d1),\n        r0 = Math.log(Math.sqrt(b0 * b0 + 1) - b0),\n        r1 = Math.log(Math.sqrt(b1 * b1 + 1) - b1);\n    S = (r1 - r0) / rho;\n    i = function(t) {\n      var s = t * S,\n          coshr0 = cosh(r0),\n          u = w0 / (rho2 * d1) * (coshr0 * tanh(rho * s + r0) - sinh(r0));\n      return [\n        ux0 + u * dx,\n        uy0 + u * dy,\n        w0 * coshr0 / cosh(rho * s + r0)\n      ];\n    }\n  }\n\n  i.duration = S * 1000;\n\n  return i;\n}\n","import {hsl as colorHsl} from \"d3-color\";\nimport color, {hue} from \"./color\";\n\nfunction hsl(hue) {\n  return function(start, end) {\n    var h = hue((start = colorHsl(start)).h, (end = colorHsl(end)).h),\n        s = color(start.s, end.s),\n        l = color(start.l, end.l),\n        opacity = color(start.opacity, end.opacity);\n    return function(t) {\n      start.h = h(t);\n      start.s = s(t);\n      start.l = l(t);\n      start.opacity = opacity(t);\n      return start + \"\";\n    };\n  }\n}\n\nexport default hsl(hue);\nexport var hslLong = hsl(color);\n","import {hcl as colorHcl} from \"d3-color\";\nimport color, {hue} from \"./color\";\n\nfunction hcl(hue) {\n  return function(start, end) {\n    var h = hue((start = colorHcl(start)).h, (end = colorHcl(end)).h),\n        c = color(start.c, end.c),\n        l = color(start.l, end.l),\n        opacity = color(start.opacity, end.opacity);\n    return function(t) {\n      start.h = h(t);\n      start.c = c(t);\n      start.l = l(t);\n      start.opacity = opacity(t);\n      return start + \"\";\n    };\n  }\n}\n\nexport default hcl(hue);\nexport var hclLong = hcl(color);\n","import {cubehelix as colorCubehelix} from \"d3-color\";\nimport color, {hue} from \"./color\";\n\nfunction cubehelix(hue) {\n  return (function cubehelixGamma(y) {\n    y = +y;\n\n    function cubehelix(start, end) {\n      var h = hue((start = colorCubehelix(start)).h, (end = colorCubehelix(end)).h),\n          s = color(start.s, end.s),\n          l = color(start.l, end.l),\n          opacity = color(start.opacity, end.opacity);\n      return function(t) {\n        start.h = h(t);\n        start.s = s(t);\n        start.l = l(Math.pow(t, y));\n        start.opacity = opacity(t);\n        return start + \"\";\n      };\n    }\n\n    cubehelix.gamma = cubehelixGamma;\n\n    return cubehelix;\n  })(1);\n}\n\nexport default cubehelix(hue);\nexport var cubehelixLong = cubehelix(color);\n","export default function piecewise(interpolate, values) {\n  var i = 0, n = values.length - 1, v = values[0], I = new Array(n < 0 ? 0 : n);\n  while (i < n) I[i] = interpolate(v, v = values[++i]);\n  return function(t) {\n    var i = Math.max(0, Math.min(n - 1, Math.floor(t *= n)));\n    return I[i](t - i);\n  };\n}\n","export default function(interpolator, n) {\n  var samples = new Array(n);\n  for (var i = 0; i < n; ++i) samples[i] = interpolator(i / (n - 1));\n  return samples;\n}\n","export default function(x) {\n  return function() {\n    return x;\n  };\n}\n","export default function(x) {\n  return +x;\n}\n","import {bisect} from \"d3-array\";\nimport {interpolate as interpolateValue, interpolateRound} from \"d3-interpolate\";\nimport {map, slice} from \"./array\";\nimport constant from \"./constant\";\nimport number from \"./number\";\n\nvar unit = [0, 1];\n\nexport function deinterpolateLinear(a, b) {\n  return (b -= (a = +a))\n      ? function(x) { return (x - a) / b; }\n      : constant(b);\n}\n\nfunction deinterpolateClamp(deinterpolate) {\n  return function(a, b) {\n    var d = deinterpolate(a = +a, b = +b);\n    return function(x) { return x <= a ? 0 : x >= b ? 1 : d(x); };\n  };\n}\n\nfunction reinterpolateClamp(reinterpolate) {\n  return function(a, b) {\n    var r = reinterpolate(a = +a, b = +b);\n    return function(t) { return t <= 0 ? a : t >= 1 ? b : r(t); };\n  };\n}\n\nfunction bimap(domain, range, deinterpolate, reinterpolate) {\n  var d0 = domain[0], d1 = domain[1], r0 = range[0], r1 = range[1];\n  if (d1 < d0) d0 = deinterpolate(d1, d0), r0 = reinterpolate(r1, r0);\n  else d0 = deinterpolate(d0, d1), r0 = reinterpolate(r0, r1);\n  return function(x) { return r0(d0(x)); };\n}\n\nfunction polymap(domain, range, deinterpolate, reinterpolate) {\n  var j = Math.min(domain.length, range.length) - 1,\n      d = new Array(j),\n      r = new Array(j),\n      i = -1;\n\n  // Reverse descending domains.\n  if (domain[j] < domain[0]) {\n    domain = domain.slice().reverse();\n    range = range.slice().reverse();\n  }\n\n  while (++i < j) {\n    d[i] = deinterpolate(domain[i], domain[i + 1]);\n    r[i] = reinterpolate(range[i], range[i + 1]);\n  }\n\n  return function(x) {\n    var i = bisect(domain, x, 1, j) - 1;\n    return r[i](d[i](x));\n  };\n}\n\nexport function copy(source, target) {\n  return target\n      .domain(source.domain())\n      .range(source.range())\n      .interpolate(source.interpolate())\n      .clamp(source.clamp());\n}\n\n// deinterpolate(a, b)(x) takes a domain value x in [a,b] and returns the corresponding parameter t in [0,1].\n// reinterpolate(a, b)(t) takes a parameter t in [0,1] and returns the corresponding domain value x in [a,b].\nexport default function continuous(deinterpolate, reinterpolate) {\n  var domain = unit,\n      range = unit,\n      interpolate = interpolateValue,\n      clamp = false,\n      piecewise,\n      output,\n      input;\n\n  function rescale() {\n    piecewise = Math.min(domain.length, range.length) > 2 ? polymap : bimap;\n    output = input = null;\n    return scale;\n  }\n\n  function scale(x) {\n    return (output || (output = piecewise(domain, range, clamp ? deinterpolateClamp(deinterpolate) : deinterpolate, interpolate)))(+x);\n  }\n\n  scale.invert = function(y) {\n    return (input || (input = piecewise(range, domain, deinterpolateLinear, clamp ? reinterpolateClamp(reinterpolate) : reinterpolate)))(+y);\n  };\n\n  scale.domain = function(_) {\n    return arguments.length ? (domain = map.call(_, number), rescale()) : domain.slice();\n  };\n\n  scale.range = function(_) {\n    return arguments.length ? (range = slice.call(_), rescale()) : range.slice();\n  };\n\n  scale.rangeRound = function(_) {\n    return range = slice.call(_), interpolate = interpolateRound, rescale();\n  };\n\n  scale.clamp = function(_) {\n    return arguments.length ? (clamp = !!_, rescale()) : clamp;\n  };\n\n  scale.interpolate = function(_) {\n    return arguments.length ? (interpolate = _, rescale()) : interpolate;\n  };\n\n  return rescale();\n}\n","// Computes the decimal coefficient and exponent of the specified number x with\n// significant digits p, where x is positive and p is in [1, 21] or undefined.\n// For example, formatDecimal(1.23) returns [\"123\", 0].\nexport default function(x, p) {\n  if ((i = (x = p ? x.toExponential(p - 1) : x.toExponential()).indexOf(\"e\")) < 0) return null; // NaN, ±Infinity\n  var i, coefficient = x.slice(0, i);\n\n  // The string returned by toExponential either has the form \\d\\.\\d+e[-+]\\d+\n  // (e.g., 1.2e+3) or the form \\de[-+]\\d+ (e.g., 1e+3).\n  return [\n    coefficient.length > 1 ? coefficient[0] + coefficient.slice(2) : coefficient,\n    +x.slice(i + 1)\n  ];\n}\n","import formatDecimal from \"./formatDecimal\";\n\nexport default function(x) {\n  return x = formatDecimal(Math.abs(x)), x ? x[1] : NaN;\n}\n","// [[fill]align][sign][symbol][0][width][,][.precision][~][type]\nvar re = /^(?:(.)?([<>=^]))?([+\\-( ])?([$#])?(0)?(\\d+)?(,)?(\\.\\d+)?(~)?([a-z%])?$/i;\n\nexport default function formatSpecifier(specifier) {\n  return new FormatSpecifier(specifier);\n}\n\nformatSpecifier.prototype = FormatSpecifier.prototype; // instanceof\n\nfunction FormatSpecifier(specifier) {\n  if (!(match = re.exec(specifier))) throw new Error(\"invalid format: \" + specifier);\n  var match;\n  this.fill = match[1] || \" \";\n  this.align = match[2] || \">\";\n  this.sign = match[3] || \"-\";\n  this.symbol = match[4] || \"\";\n  this.zero = !!match[5];\n  this.width = match[6] && +match[6];\n  this.comma = !!match[7];\n  this.precision = match[8] && +match[8].slice(1);\n  this.trim = !!match[9];\n  this.type = match[10] || \"\";\n}\n\nFormatSpecifier.prototype.toString = function() {\n  return this.fill\n      + this.align\n      + this.sign\n      + this.symbol\n      + (this.zero ? \"0\" : \"\")\n      + (this.width == null ? \"\" : Math.max(1, this.width | 0))\n      + (this.comma ? \",\" : \"\")\n      + (this.precision == null ? \"\" : \".\" + Math.max(0, this.precision | 0))\n      + (this.trim ? \"~\" : \"\")\n      + this.type;\n};\n","// Trims insignificant zeros, e.g., replaces 1.2000k with 1.2k.\nexport default function(s) {\n  out: for (var n = s.length, i = 1, i0 = -1, i1; i < n; ++i) {\n    switch (s[i]) {\n      case \".\": i0 = i1 = i; break;\n      case \"0\": if (i0 === 0) i0 = i; i1 = i; break;\n      default: if (i0 > 0) { if (!+s[i]) break out; i0 = 0; } break;\n    }\n  }\n  return i0 > 0 ? s.slice(0, i0) + s.slice(i1 + 1) : s;\n}\n","import formatDecimal from \"./formatDecimal\";\n\nexport var prefixExponent;\n\nexport default function(x, p) {\n  var d = formatDecimal(x, p);\n  if (!d) return x + \"\";\n  var coefficient = d[0],\n      exponent = d[1],\n      i = exponent - (prefixExponent = Math.max(-8, Math.min(8, Math.floor(exponent / 3))) * 3) + 1,\n      n = coefficient.length;\n  return i === n ? coefficient\n      : i > n ? coefficient + new Array(i - n + 1).join(\"0\")\n      : i > 0 ? coefficient.slice(0, i) + \".\" + coefficient.slice(i)\n      : \"0.\" + new Array(1 - i).join(\"0\") + formatDecimal(x, Math.max(0, p + i - 1))[0]; // less than 1y!\n}\n","import formatLocale from \"./locale\";\n\nvar locale;\nexport var format;\nexport var formatPrefix;\n\ndefaultLocale({\n  decimal: \".\",\n  thousands: \",\",\n  grouping: [3],\n  currency: [\"$\", \"\"]\n});\n\nexport default function defaultLocale(definition) {\n  locale = formatLocale(definition);\n  format = locale.format;\n  formatPrefix = locale.formatPrefix;\n  return locale;\n}\n","import formatDecimal from \"./formatDecimal\";\n\nexport default function(x, p) {\n  var d = formatDecimal(x, p);\n  if (!d) return x + \"\";\n  var coefficient = d[0],\n      exponent = d[1];\n  return exponent < 0 ? \"0.\" + new Array(-exponent).join(\"0\") + coefficient\n      : coefficient.length > exponent + 1 ? coefficient.slice(0, exponent + 1) + \".\" + coefficient.slice(exponent + 1)\n      : coefficient + new Array(exponent - coefficient.length + 2).join(\"0\");\n}\n","import formatPrefixAuto from \"./formatPrefixAuto\";\nimport formatRounded from \"./formatRounded\";\n\nexport default {\n  \"%\": function(x, p) { return (x * 100).toFixed(p); },\n  \"b\": function(x) { return Math.round(x).toString(2); },\n  \"c\": function(x) { return x + \"\"; },\n  \"d\": function(x) { return Math.round(x).toString(10); },\n  \"e\": function(x, p) { return x.toExponential(p); },\n  \"f\": function(x, p) { return x.toFixed(p); },\n  \"g\": function(x, p) { return x.toPrecision(p); },\n  \"o\": function(x) { return Math.round(x).toString(8); },\n  \"p\": function(x, p) { return formatRounded(x * 100, p); },\n  \"r\": formatRounded,\n  \"s\": formatPrefixAuto,\n  \"X\": function(x) { return Math.round(x).toString(16).toUpperCase(); },\n  \"x\": function(x) { return Math.round(x).toString(16); }\n};\n","export default function(x) {\n  return x;\n}\n","import exponent from \"./exponent\";\nimport formatGroup from \"./formatGroup\";\nimport formatNumerals from \"./formatNumerals\";\nimport formatSpecifier from \"./formatSpecifier\";\nimport formatTrim from \"./formatTrim\";\nimport formatTypes from \"./formatTypes\";\nimport {prefixExponent} from \"./formatPrefixAuto\";\nimport identity from \"./identity\";\n\nvar prefixes = [\"y\",\"z\",\"a\",\"f\",\"p\",\"n\",\"µ\",\"m\",\"\",\"k\",\"M\",\"G\",\"T\",\"P\",\"E\",\"Z\",\"Y\"];\n\nexport default function(locale) {\n  var group = locale.grouping && locale.thousands ? formatGroup(locale.grouping, locale.thousands) : identity,\n      currency = locale.currency,\n      decimal = locale.decimal,\n      numerals = locale.numerals ? formatNumerals(locale.numerals) : identity,\n      percent = locale.percent || \"%\";\n\n  function newFormat(specifier) {\n    specifier = formatSpecifier(specifier);\n\n    var fill = specifier.fill,\n        align = specifier.align,\n        sign = specifier.sign,\n        symbol = specifier.symbol,\n        zero = specifier.zero,\n        width = specifier.width,\n        comma = specifier.comma,\n        precision = specifier.precision,\n        trim = specifier.trim,\n        type = specifier.type;\n\n    // The \"n\" type is an alias for \",g\".\n    if (type === \"n\") comma = true, type = \"g\";\n\n    // The \"\" type, and any invalid type, is an alias for \".12~g\".\n    else if (!formatTypes[type]) precision == null && (precision = 12), trim = true, type = \"g\";\n\n    // If zero fill is specified, padding goes after sign and before digits.\n    if (zero || (fill === \"0\" && align === \"=\")) zero = true, fill = \"0\", align = \"=\";\n\n    // Compute the prefix and suffix.\n    // For SI-prefix, the suffix is lazily computed.\n    var prefix = symbol === \"$\" ? currency[0] : symbol === \"#\" && /[boxX]/.test(type) ? \"0\" + type.toLowerCase() : \"\",\n        suffix = symbol === \"$\" ? currency[1] : /[%p]/.test(type) ? percent : \"\";\n\n    // What format function should we use?\n    // Is this an integer type?\n    // Can this type generate exponential notation?\n    var formatType = formatTypes[type],\n        maybeSuffix = /[defgprs%]/.test(type);\n\n    // Set the default precision if not specified,\n    // or clamp the specified precision to the supported range.\n    // For significant precision, it must be in [1, 21].\n    // For fixed precision, it must be in [0, 20].\n    precision = precision == null ? 6\n        : /[gprs]/.test(type) ? Math.max(1, Math.min(21, precision))\n        : Math.max(0, Math.min(20, precision));\n\n    function format(value) {\n      var valuePrefix = prefix,\n          valueSuffix = suffix,\n          i, n, c;\n\n      if (type === \"c\") {\n        valueSuffix = formatType(value) + valueSuffix;\n        value = \"\";\n      } else {\n        value = +value;\n\n        // Perform the initial formatting.\n        var valueNegative = value < 0;\n        value = formatType(Math.abs(value), precision);\n\n        // Trim insignificant zeros.\n        if (trim) value = formatTrim(value);\n\n        // If a negative value rounds to zero during formatting, treat as positive.\n        if (valueNegative && +value === 0) valueNegative = false;\n\n        // Compute the prefix and suffix.\n        valuePrefix = (valueNegative ? (sign === \"(\" ? sign : \"-\") : sign === \"-\" || sign === \"(\" ? \"\" : sign) + valuePrefix;\n        valueSuffix = (type === \"s\" ? prefixes[8 + prefixExponent / 3] : \"\") + valueSuffix + (valueNegative && sign === \"(\" ? \")\" : \"\");\n\n        // Break the formatted value into the integer “value” part that can be\n        // grouped, and fractional or exponential “suffix” part that is not.\n        if (maybeSuffix) {\n          i = -1, n = value.length;\n          while (++i < n) {\n            if (c = value.charCodeAt(i), 48 > c || c > 57) {\n              valueSuffix = (c === 46 ? decimal + value.slice(i + 1) : value.slice(i)) + valueSuffix;\n              value = value.slice(0, i);\n              break;\n            }\n          }\n        }\n      }\n\n      // If the fill character is not \"0\", grouping is applied before padding.\n      if (comma && !zero) value = group(value, Infinity);\n\n      // Compute the padding.\n      var length = valuePrefix.length + value.length + valueSuffix.length,\n          padding = length < width ? new Array(width - length + 1).join(fill) : \"\";\n\n      // If the fill character is \"0\", grouping is applied after padding.\n      if (comma && zero) value = group(padding + value, padding.length ? width - valueSuffix.length : Infinity), padding = \"\";\n\n      // Reconstruct the final output based on the desired alignment.\n      switch (align) {\n        case \"<\": value = valuePrefix + value + valueSuffix + padding; break;\n        case \"=\": value = valuePrefix + padding + value + valueSuffix; break;\n        case \"^\": value = padding.slice(0, length = padding.length >> 1) + valuePrefix + value + valueSuffix + padding.slice(length); break;\n        default: value = padding + valuePrefix + value + valueSuffix; break;\n      }\n\n      return numerals(value);\n    }\n\n    format.toString = function() {\n      return specifier + \"\";\n    };\n\n    return format;\n  }\n\n  function formatPrefix(specifier, value) {\n    var f = newFormat((specifier = formatSpecifier(specifier), specifier.type = \"f\", specifier)),\n        e = Math.max(-8, Math.min(8, Math.floor(exponent(value) / 3))) * 3,\n        k = Math.pow(10, -e),\n        prefix = prefixes[8 + e / 3];\n    return function(value) {\n      return f(k * value) + prefix;\n    };\n  }\n\n  return {\n    format: newFormat,\n    formatPrefix: formatPrefix\n  };\n}\n","export default function(grouping, thousands) {\n  return function(value, width) {\n    var i = value.length,\n        t = [],\n        j = 0,\n        g = grouping[0],\n        length = 0;\n\n    while (i > 0 && g > 0) {\n      if (length + g + 1 > width) g = Math.max(1, width - length);\n      t.push(value.substring(i -= g, i + g));\n      if ((length += g + 1) > width) break;\n      g = grouping[j = (j + 1) % grouping.length];\n    }\n\n    return t.reverse().join(thousands);\n  };\n}\n","export default function(numerals) {\n  return function(value) {\n    return value.replace(/[0-9]/g, function(i) {\n      return numerals[+i];\n    });\n  };\n}\n","import exponent from \"./exponent\";\n\nexport default function(step) {\n  return Math.max(0, -exponent(Math.abs(step)));\n}\n","import {tickStep} from \"d3-array\";\nimport {format, formatPrefix, formatSpecifier, precisionFixed, precisionPrefix, precisionRound} from \"d3-format\";\n\nexport default function(domain, count, specifier) {\n  var start = domain[0],\n      stop = domain[domain.length - 1],\n      step = tickStep(start, stop, count == null ? 10 : count),\n      precision;\n  specifier = formatSpecifier(specifier == null ? \",f\" : specifier);\n  switch (specifier.type) {\n    case \"s\": {\n      var value = Math.max(Math.abs(start), Math.abs(stop));\n      if (specifier.precision == null && !isNaN(precision = precisionPrefix(step, value))) specifier.precision = precision;\n      return formatPrefix(specifier, value);\n    }\n    case \"\":\n    case \"e\":\n    case \"g\":\n    case \"p\":\n    case \"r\": {\n      if (specifier.precision == null && !isNaN(precision = precisionRound(step, Math.max(Math.abs(start), Math.abs(stop))))) specifier.precision = precision - (specifier.type === \"e\");\n      break;\n    }\n    case \"f\":\n    case \"%\": {\n      if (specifier.precision == null && !isNaN(precision = precisionFixed(step))) specifier.precision = precision - (specifier.type === \"%\") * 2;\n      break;\n    }\n  }\n  return format(specifier);\n}\n","import exponent from \"./exponent\";\n\nexport default function(step, value) {\n  return Math.max(0, Math.max(-8, Math.min(8, Math.floor(exponent(value) / 3))) * 3 - exponent(Math.abs(step)));\n}\n","import exponent from \"./exponent\";\n\nexport default function(step, max) {\n  step = Math.abs(step), max = Math.abs(max) - step;\n  return Math.max(0, exponent(max) - exponent(step)) + 1;\n}\n","import {ticks, tickIncrement} from \"d3-array\";\nimport {interpolateNumber as reinterpolate} from \"d3-interpolate\";\nimport {default as continuous, copy, deinterpolateLinear as deinterpolate} from \"./continuous\";\nimport tickFormat from \"./tickFormat\";\n\nexport function linearish(scale) {\n  var domain = scale.domain;\n\n  scale.ticks = function(count) {\n    var d = domain();\n    return ticks(d[0], d[d.length - 1], count == null ? 10 : count);\n  };\n\n  scale.tickFormat = function(count, specifier) {\n    return tickFormat(domain(), count, specifier);\n  };\n\n  scale.nice = function(count) {\n    if (count == null) count = 10;\n\n    var d = domain(),\n        i0 = 0,\n        i1 = d.length - 1,\n        start = d[i0],\n        stop = d[i1],\n        step;\n\n    if (stop < start) {\n      step = start, start = stop, stop = step;\n      step = i0, i0 = i1, i1 = step;\n    }\n\n    step = tickIncrement(start, stop, count);\n\n    if (step > 0) {\n      start = Math.floor(start / step) * step;\n      stop = Math.ceil(stop / step) * step;\n      step = tickIncrement(start, stop, count);\n    } else if (step < 0) {\n      start = Math.ceil(start * step) / step;\n      stop = Math.floor(stop * step) / step;\n      step = tickIncrement(start, stop, count);\n    }\n\n    if (step > 0) {\n      d[i0] = Math.floor(start / step) * step;\n      d[i1] = Math.ceil(stop / step) * step;\n      domain(d);\n    } else if (step < 0) {\n      d[i0] = Math.ceil(start * step) / step;\n      d[i1] = Math.floor(stop * step) / step;\n      domain(d);\n    }\n\n    return scale;\n  };\n\n  return scale;\n}\n\nexport default function linear() {\n  var scale = continuous(deinterpolate, reinterpolate);\n\n  scale.copy = function() {\n    return copy(scale, linear());\n  };\n\n  return linearish(scale);\n}\n","import {map} from \"./array\";\nimport {linearish} from \"./linear\";\nimport number from \"./number\";\n\nexport default function identity() {\n  var domain = [0, 1];\n\n  function scale(x) {\n    return +x;\n  }\n\n  scale.invert = scale;\n\n  scale.domain = scale.range = function(_) {\n    return arguments.length ? (domain = map.call(_, number), scale) : domain.slice();\n  };\n\n  scale.copy = function() {\n    return identity().domain(domain);\n  };\n\n  return linearish(scale);\n}\n","export default function(domain, interval) {\n  domain = domain.slice();\n\n  var i0 = 0,\n      i1 = domain.length - 1,\n      x0 = domain[i0],\n      x1 = domain[i1],\n      t;\n\n  if (x1 < x0) {\n    t = i0, i0 = i1, i1 = t;\n    t = x0, x0 = x1, x1 = t;\n  }\n\n  domain[i0] = interval.floor(x0);\n  domain[i1] = interval.ceil(x1);\n  return domain;\n}\n","import {ticks} from \"d3-array\";\nimport {format} from \"d3-format\";\nimport constant from \"./constant\";\nimport nice from \"./nice\";\nimport {default as continuous, copy} from \"./continuous\";\n\nfunction deinterpolate(a, b) {\n  return (b = Math.log(b / a))\n      ? function(x) { return Math.log(x / a) / b; }\n      : constant(b);\n}\n\nfunction reinterpolate(a, b) {\n  return a < 0\n      ? function(t) { return -Math.pow(-b, t) * Math.pow(-a, 1 - t); }\n      : function(t) { return Math.pow(b, t) * Math.pow(a, 1 - t); };\n}\n\nfunction pow10(x) {\n  return isFinite(x) ? +(\"1e\" + x) : x < 0 ? 0 : x;\n}\n\nfunction powp(base) {\n  return base === 10 ? pow10\n      : base === Math.E ? Math.exp\n      : function(x) { return Math.pow(base, x); };\n}\n\nfunction logp(base) {\n  return base === Math.E ? Math.log\n      : base === 10 && Math.log10\n      || base === 2 && Math.log2\n      || (base = Math.log(base), function(x) { return Math.log(x) / base; });\n}\n\nfunction reflect(f) {\n  return function(x) {\n    return -f(-x);\n  };\n}\n\nexport default function log() {\n  var scale = continuous(deinterpolate, reinterpolate).domain([1, 10]),\n      domain = scale.domain,\n      base = 10,\n      logs = logp(10),\n      pows = powp(10);\n\n  function rescale() {\n    logs = logp(base), pows = powp(base);\n    if (domain()[0] < 0) logs = reflect(logs), pows = reflect(pows);\n    return scale;\n  }\n\n  scale.base = function(_) {\n    return arguments.length ? (base = +_, rescale()) : base;\n  };\n\n  scale.domain = function(_) {\n    return arguments.length ? (domain(_), rescale()) : domain();\n  };\n\n  scale.ticks = function(count) {\n    var d = domain(),\n        u = d[0],\n        v = d[d.length - 1],\n        r;\n\n    if (r = v < u) i = u, u = v, v = i;\n\n    var i = logs(u),\n        j = logs(v),\n        p,\n        k,\n        t,\n        n = count == null ? 10 : +count,\n        z = [];\n\n    if (!(base % 1) && j - i < n) {\n      i = Math.round(i) - 1, j = Math.round(j) + 1;\n      if (u > 0) for (; i < j; ++i) {\n        for (k = 1, p = pows(i); k < base; ++k) {\n          t = p * k;\n          if (t < u) continue;\n          if (t > v) break;\n          z.push(t);\n        }\n      } else for (; i < j; ++i) {\n        for (k = base - 1, p = pows(i); k >= 1; --k) {\n          t = p * k;\n          if (t < u) continue;\n          if (t > v) break;\n          z.push(t);\n        }\n      }\n    } else {\n      z = ticks(i, j, Math.min(j - i, n)).map(pows);\n    }\n\n    return r ? z.reverse() : z;\n  };\n\n  scale.tickFormat = function(count, specifier) {\n    if (specifier == null) specifier = base === 10 ? \".0e\" : \",\";\n    if (typeof specifier !== \"function\") specifier = format(specifier);\n    if (count === Infinity) return specifier;\n    if (count == null) count = 10;\n    var k = Math.max(1, base * count / scale.ticks().length); // TODO fast estimate?\n    return function(d) {\n      var i = d / pows(Math.round(logs(d)));\n      if (i * base < base - 0.5) i *= base;\n      return i <= k ? specifier(d) : \"\";\n    };\n  };\n\n  scale.nice = function() {\n    return domain(nice(domain(), {\n      floor: function(x) { return pows(Math.floor(logs(x))); },\n      ceil: function(x) { return pows(Math.ceil(logs(x))); }\n    }));\n  };\n\n  scale.copy = function() {\n    return copy(scale, log().base(base));\n  };\n\n  return scale;\n}\n","import constant from \"./constant\";\nimport {linearish} from \"./linear\";\nimport {default as continuous, copy} from \"./continuous\";\n\nfunction raise(x, exponent) {\n  return x < 0 ? -Math.pow(-x, exponent) : Math.pow(x, exponent);\n}\n\nexport default function pow() {\n  var exponent = 1,\n      scale = continuous(deinterpolate, reinterpolate),\n      domain = scale.domain;\n\n  function deinterpolate(a, b) {\n    return (b = raise(b, exponent) - (a = raise(a, exponent)))\n        ? function(x) { return (raise(x, exponent) - a) / b; }\n        : constant(b);\n  }\n\n  function reinterpolate(a, b) {\n    b = raise(b, exponent) - (a = raise(a, exponent));\n    return function(t) { return raise(a + b * t, 1 / exponent); };\n  }\n\n  scale.exponent = function(_) {\n    return arguments.length ? (exponent = +_, domain(domain())) : exponent;\n  };\n\n  scale.copy = function() {\n    return copy(scale, pow().exponent(exponent));\n  };\n\n  return linearish(scale);\n}\n\nexport function sqrt() {\n  return pow().exponent(0.5);\n}\n","import {ascending, bisect, quantile as threshold} from \"d3-array\";\nimport {slice} from \"./array\";\n\nexport default function quantile() {\n  var domain = [],\n      range = [],\n      thresholds = [];\n\n  function rescale() {\n    var i = 0, n = Math.max(1, range.length);\n    thresholds = new Array(n - 1);\n    while (++i < n) thresholds[i - 1] = threshold(domain, i / n);\n    return scale;\n  }\n\n  function scale(x) {\n    if (!isNaN(x = +x)) return range[bisect(thresholds, x)];\n  }\n\n  scale.invertExtent = function(y) {\n    var i = range.indexOf(y);\n    return i < 0 ? [NaN, NaN] : [\n      i > 0 ? thresholds[i - 1] : domain[0],\n      i < thresholds.length ? thresholds[i] : domain[domain.length - 1]\n    ];\n  };\n\n  scale.domain = function(_) {\n    if (!arguments.length) return domain.slice();\n    domain = [];\n    for (var i = 0, n = _.length, d; i < n; ++i) if (d = _[i], d != null && !isNaN(d = +d)) domain.push(d);\n    domain.sort(ascending);\n    return rescale();\n  };\n\n  scale.range = function(_) {\n    return arguments.length ? (range = slice.call(_), rescale()) : range.slice();\n  };\n\n  scale.quantiles = function() {\n    return thresholds.slice();\n  };\n\n  scale.copy = function() {\n    return quantile()\n        .domain(domain)\n        .range(range);\n  };\n\n  return scale;\n}\n","import {bisect} from \"d3-array\";\nimport {slice} from \"./array\";\nimport {linearish} from \"./linear\";\n\nexport default function quantize() {\n  var x0 = 0,\n      x1 = 1,\n      n = 1,\n      domain = [0.5],\n      range = [0, 1];\n\n  function scale(x) {\n    if (x <= x) return range[bisect(domain, x, 0, n)];\n  }\n\n  function rescale() {\n    var i = -1;\n    domain = new Array(n);\n    while (++i < n) domain[i] = ((i + 1) * x1 - (i - n) * x0) / (n + 1);\n    return scale;\n  }\n\n  scale.domain = function(_) {\n    return arguments.length ? (x0 = +_[0], x1 = +_[1], rescale()) : [x0, x1];\n  };\n\n  scale.range = function(_) {\n    return arguments.length ? (n = (range = slice.call(_)).length - 1, rescale()) : range.slice();\n  };\n\n  scale.invertExtent = function(y) {\n    var i = range.indexOf(y);\n    return i < 0 ? [NaN, NaN]\n        : i < 1 ? [x0, domain[0]]\n        : i >= n ? [domain[n - 1], x1]\n        : [domain[i - 1], domain[i]];\n  };\n\n  scale.copy = function() {\n    return quantize()\n        .domain([x0, x1])\n        .range(range);\n  };\n\n  return linearish(scale);\n}\n","import {bisect} from \"d3-array\";\nimport {slice} from \"./array\";\n\nexport default function threshold() {\n  var domain = [0.5],\n      range = [0, 1],\n      n = 1;\n\n  function scale(x) {\n    if (x <= x) return range[bisect(domain, x, 0, n)];\n  }\n\n  scale.domain = function(_) {\n    return arguments.length ? (domain = slice.call(_), n = Math.min(domain.length, range.length - 1), scale) : domain.slice();\n  };\n\n  scale.range = function(_) {\n    return arguments.length ? (range = slice.call(_), n = Math.min(domain.length, range.length - 1), scale) : range.slice();\n  };\n\n  scale.invertExtent = function(y) {\n    var i = range.indexOf(y);\n    return [domain[i - 1], domain[i]];\n  };\n\n  scale.copy = function() {\n    return threshold()\n        .domain(domain)\n        .range(range);\n  };\n\n  return scale;\n}\n","var t0 = new Date,\n    t1 = new Date;\n\nexport default function newInterval(floori, offseti, count, field) {\n\n  function interval(date) {\n    return floori(date = new Date(+date)), date;\n  }\n\n  interval.floor = interval;\n\n  interval.ceil = function(date) {\n    return floori(date = new Date(date - 1)), offseti(date, 1), floori(date), date;\n  };\n\n  interval.round = function(date) {\n    var d0 = interval(date),\n        d1 = interval.ceil(date);\n    return date - d0 < d1 - date ? d0 : d1;\n  };\n\n  interval.offset = function(date, step) {\n    return offseti(date = new Date(+date), step == null ? 1 : Math.floor(step)), date;\n  };\n\n  interval.range = function(start, stop, step) {\n    var range = [], previous;\n    start = interval.ceil(start);\n    step = step == null ? 1 : Math.floor(step);\n    if (!(start < stop) || !(step > 0)) return range; // also handles Invalid Date\n    do range.push(previous = new Date(+start)), offseti(start, step), floori(start);\n    while (previous < start && start < stop);\n    return range;\n  };\n\n  interval.filter = function(test) {\n    return newInterval(function(date) {\n      if (date >= date) while (floori(date), !test(date)) date.setTime(date - 1);\n    }, function(date, step) {\n      if (date >= date) {\n        if (step < 0) while (++step <= 0) {\n          while (offseti(date, -1), !test(date)) {} // eslint-disable-line no-empty\n        } else while (--step >= 0) {\n          while (offseti(date, +1), !test(date)) {} // eslint-disable-line no-empty\n        }\n      }\n    });\n  };\n\n  if (count) {\n    interval.count = function(start, end) {\n      t0.setTime(+start), t1.setTime(+end);\n      floori(t0), floori(t1);\n      return Math.floor(count(t0, t1));\n    };\n\n    interval.every = function(step) {\n      step = Math.floor(step);\n      return !isFinite(step) || !(step > 0) ? null\n          : !(step > 1) ? interval\n          : interval.filter(field\n              ? function(d) { return field(d) % step === 0; }\n              : function(d) { return interval.count(0, d) % step === 0; });\n    };\n  }\n\n  return interval;\n}\n","import interval from \"./interval\";\n\nvar millisecond = interval(function() {\n  // noop\n}, function(date, step) {\n  date.setTime(+date + step);\n}, function(start, end) {\n  return end - start;\n});\n\n// An optimized implementation for this simple case.\nmillisecond.every = function(k) {\n  k = Math.floor(k);\n  if (!isFinite(k) || !(k > 0)) return null;\n  if (!(k > 1)) return millisecond;\n  return interval(function(date) {\n    date.setTime(Math.floor(date / k) * k);\n  }, function(date, step) {\n    date.setTime(+date + step * k);\n  }, function(start, end) {\n    return (end - start) / k;\n  });\n};\n\nexport default millisecond;\nexport var milliseconds = millisecond.range;\n","export var durationSecond = 1e3;\nexport var durationMinute = 6e4;\nexport var durationHour = 36e5;\nexport var durationDay = 864e5;\nexport var durationWeek = 6048e5;\n","import interval from \"./interval\";\nimport {durationSecond} from \"./duration\";\n\nvar second = interval(function(date) {\n  date.setTime(date - date.getMilliseconds());\n}, function(date, step) {\n  date.setTime(+date + step * durationSecond);\n}, function(start, end) {\n  return (end - start) / durationSecond;\n}, function(date) {\n  return date.getUTCSeconds();\n});\n\nexport default second;\nexport var seconds = second.range;\n","import interval from \"./interval\";\nimport {durationMinute, durationSecond} from \"./duration\";\n\nvar minute = interval(function(date) {\n  date.setTime(date - date.getMilliseconds() - date.getSeconds() * durationSecond);\n}, function(date, step) {\n  date.setTime(+date + step * durationMinute);\n}, function(start, end) {\n  return (end - start) / durationMinute;\n}, function(date) {\n  return date.getMinutes();\n});\n\nexport default minute;\nexport var minutes = minute.range;\n","import interval from \"./interval\";\nimport {durationHour, durationMinute, durationSecond} from \"./duration\";\n\nvar hour = interval(function(date) {\n  date.setTime(date - date.getMilliseconds() - date.getSeconds() * durationSecond - date.getMinutes() * durationMinute);\n}, function(date, step) {\n  date.setTime(+date + step * durationHour);\n}, function(start, end) {\n  return (end - start) / durationHour;\n}, function(date) {\n  return date.getHours();\n});\n\nexport default hour;\nexport var hours = hour.range;\n","import interval from \"./interval\";\nimport {durationDay, durationMinute} from \"./duration\";\n\nvar day = interval(function(date) {\n  date.setHours(0, 0, 0, 0);\n}, function(date, step) {\n  date.setDate(date.getDate() + step);\n}, function(start, end) {\n  return (end - start - (end.getTimezoneOffset() - start.getTimezoneOffset()) * durationMinute) / durationDay;\n}, function(date) {\n  return date.getDate() - 1;\n});\n\nexport default day;\nexport var days = day.range;\n","import interval from \"./interval\";\nimport {durationMinute, durationWeek} from \"./duration\";\n\nfunction weekday(i) {\n  return interval(function(date) {\n    date.setDate(date.getDate() - (date.getDay() + 7 - i) % 7);\n    date.setHours(0, 0, 0, 0);\n  }, function(date, step) {\n    date.setDate(date.getDate() + step * 7);\n  }, function(start, end) {\n    return (end - start - (end.getTimezoneOffset() - start.getTimezoneOffset()) * durationMinute) / durationWeek;\n  });\n}\n\nexport var sunday = weekday(0);\nexport var monday = weekday(1);\nexport var tuesday = weekday(2);\nexport var wednesday = weekday(3);\nexport var thursday = weekday(4);\nexport var friday = weekday(5);\nexport var saturday = weekday(6);\n\nexport var sundays = sunday.range;\nexport var mondays = monday.range;\nexport var tuesdays = tuesday.range;\nexport var wednesdays = wednesday.range;\nexport var thursdays = thursday.range;\nexport var fridays = friday.range;\nexport var saturdays = saturday.range;\n","import interval from \"./interval\";\n\nvar month = interval(function(date) {\n  date.setDate(1);\n  date.setHours(0, 0, 0, 0);\n}, function(date, step) {\n  date.setMonth(date.getMonth() + step);\n}, function(start, end) {\n  return end.getMonth() - start.getMonth() + (end.getFullYear() - start.getFullYear()) * 12;\n}, function(date) {\n  return date.getMonth();\n});\n\nexport default month;\nexport var months = month.range;\n","import interval from \"./interval\";\n\nvar year = interval(function(date) {\n  date.setMonth(0, 1);\n  date.setHours(0, 0, 0, 0);\n}, function(date, step) {\n  date.setFullYear(date.getFullYear() + step);\n}, function(start, end) {\n  return end.getFullYear() - start.getFullYear();\n}, function(date) {\n  return date.getFullYear();\n});\n\n// An optimized implementation for this simple case.\nyear.every = function(k) {\n  return !isFinite(k = Math.floor(k)) || !(k > 0) ? null : interval(function(date) {\n    date.setFullYear(Math.floor(date.getFullYear() / k) * k);\n    date.setMonth(0, 1);\n    date.setHours(0, 0, 0, 0);\n  }, function(date, step) {\n    date.setFullYear(date.getFullYear() + step * k);\n  });\n};\n\nexport default year;\nexport var years = year.range;\n","import interval from \"./interval\";\nimport {durationMinute} from \"./duration\";\n\nvar utcMinute = interval(function(date) {\n  date.setUTCSeconds(0, 0);\n}, function(date, step) {\n  date.setTime(+date + step * durationMinute);\n}, function(start, end) {\n  return (end - start) / durationMinute;\n}, function(date) {\n  return date.getUTCMinutes();\n});\n\nexport default utcMinute;\nexport var utcMinutes = utcMinute.range;\n","import interval from \"./interval\";\nimport {durationHour} from \"./duration\";\n\nvar utcHour = interval(function(date) {\n  date.setUTCMinutes(0, 0, 0);\n}, function(date, step) {\n  date.setTime(+date + step * durationHour);\n}, function(start, end) {\n  return (end - start) / durationHour;\n}, function(date) {\n  return date.getUTCHours();\n});\n\nexport default utcHour;\nexport var utcHours = utcHour.range;\n","import interval from \"./interval\";\nimport {durationDay} from \"./duration\";\n\nvar utcDay = interval(function(date) {\n  date.setUTCHours(0, 0, 0, 0);\n}, function(date, step) {\n  date.setUTCDate(date.getUTCDate() + step);\n}, function(start, end) {\n  return (end - start) / durationDay;\n}, function(date) {\n  return date.getUTCDate() - 1;\n});\n\nexport default utcDay;\nexport var utcDays = utcDay.range;\n","import interval from \"./interval\";\nimport {durationWeek} from \"./duration\";\n\nfunction utcWeekday(i) {\n  return interval(function(date) {\n    date.setUTCDate(date.getUTCDate() - (date.getUTCDay() + 7 - i) % 7);\n    date.setUTCHours(0, 0, 0, 0);\n  }, function(date, step) {\n    date.setUTCDate(date.getUTCDate() + step * 7);\n  }, function(start, end) {\n    return (end - start) / durationWeek;\n  });\n}\n\nexport var utcSunday = utcWeekday(0);\nexport var utcMonday = utcWeekday(1);\nexport var utcTuesday = utcWeekday(2);\nexport var utcWednesday = utcWeekday(3);\nexport var utcThursday = utcWeekday(4);\nexport var utcFriday = utcWeekday(5);\nexport var utcSaturday = utcWeekday(6);\n\nexport var utcSundays = utcSunday.range;\nexport var utcMondays = utcMonday.range;\nexport var utcTuesdays = utcTuesday.range;\nexport var utcWednesdays = utcWednesday.range;\nexport var utcThursdays = utcThursday.range;\nexport var utcFridays = utcFriday.range;\nexport var utcSaturdays = utcSaturday.range;\n","import interval from \"./interval\";\n\nvar utcMonth = interval(function(date) {\n  date.setUTCDate(1);\n  date.setUTCHours(0, 0, 0, 0);\n}, function(date, step) {\n  date.setUTCMonth(date.getUTCMonth() + step);\n}, function(start, end) {\n  return end.getUTCMonth() - start.getUTCMonth() + (end.getUTCFullYear() - start.getUTCFullYear()) * 12;\n}, function(date) {\n  return date.getUTCMonth();\n});\n\nexport default utcMonth;\nexport var utcMonths = utcMonth.range;\n","import interval from \"./interval\";\n\nvar utcYear = interval(function(date) {\n  date.setUTCMonth(0, 1);\n  date.setUTCHours(0, 0, 0, 0);\n}, function(date, step) {\n  date.setUTCFullYear(date.getUTCFullYear() + step);\n}, function(start, end) {\n  return end.getUTCFullYear() - start.getUTCFullYear();\n}, function(date) {\n  return date.getUTCFullYear();\n});\n\n// An optimized implementation for this simple case.\nutcYear.every = function(k) {\n  return !isFinite(k = Math.floor(k)) || !(k > 0) ? null : interval(function(date) {\n    date.setUTCFullYear(Math.floor(date.getUTCFullYear() / k) * k);\n    date.setUTCMonth(0, 1);\n    date.setUTCHours(0, 0, 0, 0);\n  }, function(date, step) {\n    date.setUTCFullYear(date.getUTCFullYear() + step * k);\n  });\n};\n\nexport default utcYear;\nexport var utcYears = utcYear.range;\n","import {\n  timeDay,\n  timeSunday,\n  timeMonday,\n  timeThursday,\n  timeYear,\n  utcDay,\n  utcSunday,\n  utcMonday,\n  utcThursday,\n  utcYear\n} from \"d3-time\";\n\nfunction localDate(d) {\n  if (0 <= d.y && d.y < 100) {\n    var date = new Date(-1, d.m, d.d, d.H, d.M, d.S, d.L);\n    date.setFullYear(d.y);\n    return date;\n  }\n  return new Date(d.y, d.m, d.d, d.H, d.M, d.S, d.L);\n}\n\nfunction utcDate(d) {\n  if (0 <= d.y && d.y < 100) {\n    var date = new Date(Date.UTC(-1, d.m, d.d, d.H, d.M, d.S, d.L));\n    date.setUTCFullYear(d.y);\n    return date;\n  }\n  return new Date(Date.UTC(d.y, d.m, d.d, d.H, d.M, d.S, d.L));\n}\n\nfunction newYear(y) {\n  return {y: y, m: 0, d: 1, H: 0, M: 0, S: 0, L: 0};\n}\n\nexport default function formatLocale(locale) {\n  var locale_dateTime = locale.dateTime,\n      locale_date = locale.date,\n      locale_time = locale.time,\n      locale_periods = locale.periods,\n      locale_weekdays = locale.days,\n      locale_shortWeekdays = locale.shortDays,\n      locale_months = locale.months,\n      locale_shortMonths = locale.shortMonths;\n\n  var periodRe = formatRe(locale_periods),\n      periodLookup = formatLookup(locale_periods),\n      weekdayRe = formatRe(locale_weekdays),\n      weekdayLookup = formatLookup(locale_weekdays),\n      shortWeekdayRe = formatRe(locale_shortWeekdays),\n      shortWeekdayLookup = formatLookup(locale_shortWeekdays),\n      monthRe = formatRe(locale_months),\n      monthLookup = formatLookup(locale_months),\n      shortMonthRe = formatRe(locale_shortMonths),\n      shortMonthLookup = formatLookup(locale_shortMonths);\n\n  var formats = {\n    \"a\": formatShortWeekday,\n    \"A\": formatWeekday,\n    \"b\": formatShortMonth,\n    \"B\": formatMonth,\n    \"c\": null,\n    \"d\": formatDayOfMonth,\n    \"e\": formatDayOfMonth,\n    \"f\": formatMicroseconds,\n    \"H\": formatHour24,\n    \"I\": formatHour12,\n    \"j\": formatDayOfYear,\n    \"L\": formatMilliseconds,\n    \"m\": formatMonthNumber,\n    \"M\": formatMinutes,\n    \"p\": formatPeriod,\n    \"Q\": formatUnixTimestamp,\n    \"s\": formatUnixTimestampSeconds,\n    \"S\": formatSeconds,\n    \"u\": formatWeekdayNumberMonday,\n    \"U\": formatWeekNumberSunday,\n    \"V\": formatWeekNumberISO,\n    \"w\": formatWeekdayNumberSunday,\n    \"W\": formatWeekNumberMonday,\n    \"x\": null,\n    \"X\": null,\n    \"y\": formatYear,\n    \"Y\": formatFullYear,\n    \"Z\": formatZone,\n    \"%\": formatLiteralPercent\n  };\n\n  var utcFormats = {\n    \"a\": formatUTCShortWeekday,\n    \"A\": formatUTCWeekday,\n    \"b\": formatUTCShortMonth,\n    \"B\": formatUTCMonth,\n    \"c\": null,\n    \"d\": formatUTCDayOfMonth,\n    \"e\": formatUTCDayOfMonth,\n    \"f\": formatUTCMicroseconds,\n    \"H\": formatUTCHour24,\n    \"I\": formatUTCHour12,\n    \"j\": formatUTCDayOfYear,\n    \"L\": formatUTCMilliseconds,\n    \"m\": formatUTCMonthNumber,\n    \"M\": formatUTCMinutes,\n    \"p\": formatUTCPeriod,\n    \"Q\": formatUnixTimestamp,\n    \"s\": formatUnixTimestampSeconds,\n    \"S\": formatUTCSeconds,\n    \"u\": formatUTCWeekdayNumberMonday,\n    \"U\": formatUTCWeekNumberSunday,\n    \"V\": formatUTCWeekNumberISO,\n    \"w\": formatUTCWeekdayNumberSunday,\n    \"W\": formatUTCWeekNumberMonday,\n    \"x\": null,\n    \"X\": null,\n    \"y\": formatUTCYear,\n    \"Y\": formatUTCFullYear,\n    \"Z\": formatUTCZone,\n    \"%\": formatLiteralPercent\n  };\n\n  var parses = {\n    \"a\": parseShortWeekday,\n    \"A\": parseWeekday,\n    \"b\": parseShortMonth,\n    \"B\": parseMonth,\n    \"c\": parseLocaleDateTime,\n    \"d\": parseDayOfMonth,\n    \"e\": parseDayOfMonth,\n    \"f\": parseMicroseconds,\n    \"H\": parseHour24,\n    \"I\": parseHour24,\n    \"j\": parseDayOfYear,\n    \"L\": parseMilliseconds,\n    \"m\": parseMonthNumber,\n    \"M\": parseMinutes,\n    \"p\": parsePeriod,\n    \"Q\": parseUnixTimestamp,\n    \"s\": parseUnixTimestampSeconds,\n    \"S\": parseSeconds,\n    \"u\": parseWeekdayNumberMonday,\n    \"U\": parseWeekNumberSunday,\n    \"V\": parseWeekNumberISO,\n    \"w\": parseWeekdayNumberSunday,\n    \"W\": parseWeekNumberMonday,\n    \"x\": parseLocaleDate,\n    \"X\": parseLocaleTime,\n    \"y\": parseYear,\n    \"Y\": parseFullYear,\n    \"Z\": parseZone,\n    \"%\": parseLiteralPercent\n  };\n\n  // These recursive directive definitions must be deferred.\n  formats.x = newFormat(locale_date, formats);\n  formats.X = newFormat(locale_time, formats);\n  formats.c = newFormat(locale_dateTime, formats);\n  utcFormats.x = newFormat(locale_date, utcFormats);\n  utcFormats.X = newFormat(locale_time, utcFormats);\n  utcFormats.c = newFormat(locale_dateTime, utcFormats);\n\n  function newFormat(specifier, formats) {\n    return function(date) {\n      var string = [],\n          i = -1,\n          j = 0,\n          n = specifier.length,\n          c,\n          pad,\n          format;\n\n      if (!(date instanceof Date)) date = new Date(+date);\n\n      while (++i < n) {\n        if (specifier.charCodeAt(i) === 37) {\n          string.push(specifier.slice(j, i));\n          if ((pad = pads[c = specifier.charAt(++i)]) != null) c = specifier.charAt(++i);\n          else pad = c === \"e\" ? \" \" : \"0\";\n          if (format = formats[c]) c = format(date, pad);\n          string.push(c);\n          j = i + 1;\n        }\n      }\n\n      string.push(specifier.slice(j, i));\n      return string.join(\"\");\n    };\n  }\n\n  function newParse(specifier, newDate) {\n    return function(string) {\n      var d = newYear(1900),\n          i = parseSpecifier(d, specifier, string += \"\", 0),\n          week, day;\n      if (i != string.length) return null;\n\n      // If a UNIX timestamp is specified, return it.\n      if (\"Q\" in d) return new Date(d.Q);\n\n      // The am-pm flag is 0 for AM, and 1 for PM.\n      if (\"p\" in d) d.H = d.H % 12 + d.p * 12;\n\n      // Convert day-of-week and week-of-year to day-of-year.\n      if (\"V\" in d) {\n        if (d.V < 1 || d.V > 53) return null;\n        if (!(\"w\" in d)) d.w = 1;\n        if (\"Z\" in d) {\n          week = utcDate(newYear(d.y)), day = week.getUTCDay();\n          week = day > 4 || day === 0 ? utcMonday.ceil(week) : utcMonday(week);\n          week = utcDay.offset(week, (d.V - 1) * 7);\n          d.y = week.getUTCFullYear();\n          d.m = week.getUTCMonth();\n          d.d = week.getUTCDate() + (d.w + 6) % 7;\n        } else {\n          week = newDate(newYear(d.y)), day = week.getDay();\n          week = day > 4 || day === 0 ? timeMonday.ceil(week) : timeMonday(week);\n          week = timeDay.offset(week, (d.V - 1) * 7);\n          d.y = week.getFullYear();\n          d.m = week.getMonth();\n          d.d = week.getDate() + (d.w + 6) % 7;\n        }\n      } else if (\"W\" in d || \"U\" in d) {\n        if (!(\"w\" in d)) d.w = \"u\" in d ? d.u % 7 : \"W\" in d ? 1 : 0;\n        day = \"Z\" in d ? utcDate(newYear(d.y)).getUTCDay() : newDate(newYear(d.y)).getDay();\n        d.m = 0;\n        d.d = \"W\" in d ? (d.w + 6) % 7 + d.W * 7 - (day + 5) % 7 : d.w + d.U * 7 - (day + 6) % 7;\n      }\n\n      // If a time zone is specified, all fields are interpreted as UTC and then\n      // offset according to the specified time zone.\n      if (\"Z\" in d) {\n        d.H += d.Z / 100 | 0;\n        d.M += d.Z % 100;\n        return utcDate(d);\n      }\n\n      // Otherwise, all fields are in local time.\n      return newDate(d);\n    };\n  }\n\n  function parseSpecifier(d, specifier, string, j) {\n    var i = 0,\n        n = specifier.length,\n        m = string.length,\n        c,\n        parse;\n\n    while (i < n) {\n      if (j >= m) return -1;\n      c = specifier.charCodeAt(i++);\n      if (c === 37) {\n        c = specifier.charAt(i++);\n        parse = parses[c in pads ? specifier.charAt(i++) : c];\n        if (!parse || ((j = parse(d, string, j)) < 0)) return -1;\n      } else if (c != string.charCodeAt(j++)) {\n        return -1;\n      }\n    }\n\n    return j;\n  }\n\n  function parsePeriod(d, string, i) {\n    var n = periodRe.exec(string.slice(i));\n    return n ? (d.p = periodLookup[n[0].toLowerCase()], i + n[0].length) : -1;\n  }\n\n  function parseShortWeekday(d, string, i) {\n    var n = shortWeekdayRe.exec(string.slice(i));\n    return n ? (d.w = shortWeekdayLookup[n[0].toLowerCase()], i + n[0].length) : -1;\n  }\n\n  function parseWeekday(d, string, i) {\n    var n = weekdayRe.exec(string.slice(i));\n    return n ? (d.w = weekdayLookup[n[0].toLowerCase()], i + n[0].length) : -1;\n  }\n\n  function parseShortMonth(d, string, i) {\n    var n = shortMonthRe.exec(string.slice(i));\n    return n ? (d.m = shortMonthLookup[n[0].toLowerCase()], i + n[0].length) : -1;\n  }\n\n  function parseMonth(d, string, i) {\n    var n = monthRe.exec(string.slice(i));\n    return n ? (d.m = monthLookup[n[0].toLowerCase()], i + n[0].length) : -1;\n  }\n\n  function parseLocaleDateTime(d, string, i) {\n    return parseSpecifier(d, locale_dateTime, string, i);\n  }\n\n  function parseLocaleDate(d, string, i) {\n    return parseSpecifier(d, locale_date, string, i);\n  }\n\n  function parseLocaleTime(d, string, i) {\n    return parseSpecifier(d, locale_time, string, i);\n  }\n\n  function formatShortWeekday(d) {\n    return locale_shortWeekdays[d.getDay()];\n  }\n\n  function formatWeekday(d) {\n    return locale_weekdays[d.getDay()];\n  }\n\n  function formatShortMonth(d) {\n    return locale_shortMonths[d.getMonth()];\n  }\n\n  function formatMonth(d) {\n    return locale_months[d.getMonth()];\n  }\n\n  function formatPeriod(d) {\n    return locale_periods[+(d.getHours() >= 12)];\n  }\n\n  function formatUTCShortWeekday(d) {\n    return locale_shortWeekdays[d.getUTCDay()];\n  }\n\n  function formatUTCWeekday(d) {\n    return locale_weekdays[d.getUTCDay()];\n  }\n\n  function formatUTCShortMonth(d) {\n    return locale_shortMonths[d.getUTCMonth()];\n  }\n\n  function formatUTCMonth(d) {\n    return locale_months[d.getUTCMonth()];\n  }\n\n  function formatUTCPeriod(d) {\n    return locale_periods[+(d.getUTCHours() >= 12)];\n  }\n\n  return {\n    format: function(specifier) {\n      var f = newFormat(specifier += \"\", formats);\n      f.toString = function() { return specifier; };\n      return f;\n    },\n    parse: function(specifier) {\n      var p = newParse(specifier += \"\", localDate);\n      p.toString = function() { return specifier; };\n      return p;\n    },\n    utcFormat: function(specifier) {\n      var f = newFormat(specifier += \"\", utcFormats);\n      f.toString = function() { return specifier; };\n      return f;\n    },\n    utcParse: function(specifier) {\n      var p = newParse(specifier, utcDate);\n      p.toString = function() { return specifier; };\n      return p;\n    }\n  };\n}\n\nvar pads = {\"-\": \"\", \"_\": \" \", \"0\": \"0\"},\n    numberRe = /^\\s*\\d+/, // note: ignores next directive\n    percentRe = /^%/,\n    requoteRe = /[\\\\^$*+?|[\\]().{}]/g;\n\nfunction pad(value, fill, width) {\n  var sign = value < 0 ? \"-\" : \"\",\n      string = (sign ? -value : value) + \"\",\n      length = string.length;\n  return sign + (length < width ? new Array(width - length + 1).join(fill) + string : string);\n}\n\nfunction requote(s) {\n  return s.replace(requoteRe, \"\\\\$&\");\n}\n\nfunction formatRe(names) {\n  return new RegExp(\"^(?:\" + names.map(requote).join(\"|\") + \")\", \"i\");\n}\n\nfunction formatLookup(names) {\n  var map = {}, i = -1, n = names.length;\n  while (++i < n) map[names[i].toLowerCase()] = i;\n  return map;\n}\n\nfunction parseWeekdayNumberSunday(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 1));\n  return n ? (d.w = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseWeekdayNumberMonday(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 1));\n  return n ? (d.u = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseWeekNumberSunday(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.U = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseWeekNumberISO(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.V = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseWeekNumberMonday(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.W = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseFullYear(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 4));\n  return n ? (d.y = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseYear(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.y = +n[0] + (+n[0] > 68 ? 1900 : 2000), i + n[0].length) : -1;\n}\n\nfunction parseZone(d, string, i) {\n  var n = /^(Z)|([+-]\\d\\d)(?::?(\\d\\d))?/.exec(string.slice(i, i + 6));\n  return n ? (d.Z = n[1] ? 0 : -(n[2] + (n[3] || \"00\")), i + n[0].length) : -1;\n}\n\nfunction parseMonthNumber(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.m = n[0] - 1, i + n[0].length) : -1;\n}\n\nfunction parseDayOfMonth(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.d = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseDayOfYear(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 3));\n  return n ? (d.m = 0, d.d = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseHour24(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.H = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseMinutes(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.M = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseSeconds(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.S = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseMilliseconds(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 3));\n  return n ? (d.L = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseMicroseconds(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 6));\n  return n ? (d.L = Math.floor(n[0] / 1000), i + n[0].length) : -1;\n}\n\nfunction parseLiteralPercent(d, string, i) {\n  var n = percentRe.exec(string.slice(i, i + 1));\n  return n ? i + n[0].length : -1;\n}\n\nfunction parseUnixTimestamp(d, string, i) {\n  var n = numberRe.exec(string.slice(i));\n  return n ? (d.Q = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseUnixTimestampSeconds(d, string, i) {\n  var n = numberRe.exec(string.slice(i));\n  return n ? (d.Q = (+n[0]) * 1000, i + n[0].length) : -1;\n}\n\nfunction formatDayOfMonth(d, p) {\n  return pad(d.getDate(), p, 2);\n}\n\nfunction formatHour24(d, p) {\n  return pad(d.getHours(), p, 2);\n}\n\nfunction formatHour12(d, p) {\n  return pad(d.getHours() % 12 || 12, p, 2);\n}\n\nfunction formatDayOfYear(d, p) {\n  return pad(1 + timeDay.count(timeYear(d), d), p, 3);\n}\n\nfunction formatMilliseconds(d, p) {\n  return pad(d.getMilliseconds(), p, 3);\n}\n\nfunction formatMicroseconds(d, p) {\n  return formatMilliseconds(d, p) + \"000\";\n}\n\nfunction formatMonthNumber(d, p) {\n  return pad(d.getMonth() + 1, p, 2);\n}\n\nfunction formatMinutes(d, p) {\n  return pad(d.getMinutes(), p, 2);\n}\n\nfunction formatSeconds(d, p) {\n  return pad(d.getSeconds(), p, 2);\n}\n\nfunction formatWeekdayNumberMonday(d) {\n  var day = d.getDay();\n  return day === 0 ? 7 : day;\n}\n\nfunction formatWeekNumberSunday(d, p) {\n  return pad(timeSunday.count(timeYear(d), d), p, 2);\n}\n\nfunction formatWeekNumberISO(d, p) {\n  var day = d.getDay();\n  d = (day >= 4 || day === 0) ? timeThursday(d) : timeThursday.ceil(d);\n  return pad(timeThursday.count(timeYear(d), d) + (timeYear(d).getDay() === 4), p, 2);\n}\n\nfunction formatWeekdayNumberSunday(d) {\n  return d.getDay();\n}\n\nfunction formatWeekNumberMonday(d, p) {\n  return pad(timeMonday.count(timeYear(d), d), p, 2);\n}\n\nfunction formatYear(d, p) {\n  return pad(d.getFullYear() % 100, p, 2);\n}\n\nfunction formatFullYear(d, p) {\n  return pad(d.getFullYear() % 10000, p, 4);\n}\n\nfunction formatZone(d) {\n  var z = d.getTimezoneOffset();\n  return (z > 0 ? \"-\" : (z *= -1, \"+\"))\n      + pad(z / 60 | 0, \"0\", 2)\n      + pad(z % 60, \"0\", 2);\n}\n\nfunction formatUTCDayOfMonth(d, p) {\n  return pad(d.getUTCDate(), p, 2);\n}\n\nfunction formatUTCHour24(d, p) {\n  return pad(d.getUTCHours(), p, 2);\n}\n\nfunction formatUTCHour12(d, p) {\n  return pad(d.getUTCHours() % 12 || 12, p, 2);\n}\n\nfunction formatUTCDayOfYear(d, p) {\n  return pad(1 + utcDay.count(utcYear(d), d), p, 3);\n}\n\nfunction formatUTCMilliseconds(d, p) {\n  return pad(d.getUTCMilliseconds(), p, 3);\n}\n\nfunction formatUTCMicroseconds(d, p) {\n  return formatUTCMilliseconds(d, p) + \"000\";\n}\n\nfunction formatUTCMonthNumber(d, p) {\n  return pad(d.getUTCMonth() + 1, p, 2);\n}\n\nfunction formatUTCMinutes(d, p) {\n  return pad(d.getUTCMinutes(), p, 2);\n}\n\nfunction formatUTCSeconds(d, p) {\n  return pad(d.getUTCSeconds(), p, 2);\n}\n\nfunction formatUTCWeekdayNumberMonday(d) {\n  var dow = d.getUTCDay();\n  return dow === 0 ? 7 : dow;\n}\n\nfunction formatUTCWeekNumberSunday(d, p) {\n  return pad(utcSunday.count(utcYear(d), d), p, 2);\n}\n\nfunction formatUTCWeekNumberISO(d, p) {\n  var day = d.getUTCDay();\n  d = (day >= 4 || day === 0) ? utcThursday(d) : utcThursday.ceil(d);\n  return pad(utcThursday.count(utcYear(d), d) + (utcYear(d).getUTCDay() === 4), p, 2);\n}\n\nfunction formatUTCWeekdayNumberSunday(d) {\n  return d.getUTCDay();\n}\n\nfunction formatUTCWeekNumberMonday(d, p) {\n  return pad(utcMonday.count(utcYear(d), d), p, 2);\n}\n\nfunction formatUTCYear(d, p) {\n  return pad(d.getUTCFullYear() % 100, p, 2);\n}\n\nfunction formatUTCFullYear(d, p) {\n  return pad(d.getUTCFullYear() % 10000, p, 4);\n}\n\nfunction formatUTCZone() {\n  return \"+0000\";\n}\n\nfunction formatLiteralPercent() {\n  return \"%\";\n}\n\nfunction formatUnixTimestamp(d) {\n  return +d;\n}\n\nfunction formatUnixTimestampSeconds(d) {\n  return Math.floor(+d / 1000);\n}\n","import formatLocale from \"./locale\";\n\nvar locale;\nexport var timeFormat;\nexport var timeParse;\nexport var utcFormat;\nexport var utcParse;\n\ndefaultLocale({\n  dateTime: \"%x, %X\",\n  date: \"%-m/%-d/%Y\",\n  time: \"%-I:%M:%S %p\",\n  periods: [\"AM\", \"PM\"],\n  days: [\"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\"],\n  shortDays: [\"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\"],\n  months: [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"],\n  shortMonths: [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"]\n});\n\nexport default function defaultLocale(definition) {\n  locale = formatLocale(definition);\n  timeFormat = locale.format;\n  timeParse = locale.parse;\n  utcFormat = locale.utcFormat;\n  utcParse = locale.utcParse;\n  return locale;\n}\n","import {utcFormat} from \"./defaultLocale\";\n\nexport var isoSpecifier = \"%Y-%m-%dT%H:%M:%S.%LZ\";\n\nfunction formatIsoNative(date) {\n  return date.toISOString();\n}\n\nvar formatIso = Date.prototype.toISOString\n    ? formatIsoNative\n    : utcFormat(isoSpecifier);\n\nexport default formatIso;\n","import {isoSpecifier} from \"./isoFormat\";\nimport {utcParse} from \"./defaultLocale\";\n\nfunction parseIsoNative(string) {\n  var date = new Date(string);\n  return isNaN(date) ? null : date;\n}\n\nvar parseIso = +new Date(\"2000-01-01T00:00:00.000Z\")\n    ? parseIsoNative\n    : utcParse(isoSpecifier);\n\nexport default parseIso;\n","import {bisector, tickStep} from \"d3-array\";\nimport {interpolateNumber as reinterpolate} from \"d3-interpolate\";\nimport {timeYear, timeMonth, timeWeek, timeDay, timeHour, timeMinute, timeSecond, timeMillisecond} from \"d3-time\";\nimport {timeFormat} from \"d3-time-format\";\nimport {map} from \"./array\";\nimport {default as continuous, copy, deinterpolateLinear as deinterpolate} from \"./continuous\";\nimport nice from \"./nice\";\n\nvar durationSecond = 1000,\n    durationMinute = durationSecond * 60,\n    durationHour = durationMinute * 60,\n    durationDay = durationHour * 24,\n    durationWeek = durationDay * 7,\n    durationMonth = durationDay * 30,\n    durationYear = durationDay * 365;\n\nfunction date(t) {\n  return new Date(t);\n}\n\nfunction number(t) {\n  return t instanceof Date ? +t : +new Date(+t);\n}\n\nexport function calendar(year, month, week, day, hour, minute, second, millisecond, format) {\n  var scale = continuous(deinterpolate, reinterpolate),\n      invert = scale.invert,\n      domain = scale.domain;\n\n  var formatMillisecond = format(\".%L\"),\n      formatSecond = format(\":%S\"),\n      formatMinute = format(\"%I:%M\"),\n      formatHour = format(\"%I %p\"),\n      formatDay = format(\"%a %d\"),\n      formatWeek = format(\"%b %d\"),\n      formatMonth = format(\"%B\"),\n      formatYear = format(\"%Y\");\n\n  var tickIntervals = [\n    [second,  1,      durationSecond],\n    [second,  5,  5 * durationSecond],\n    [second, 15, 15 * durationSecond],\n    [second, 30, 30 * durationSecond],\n    [minute,  1,      durationMinute],\n    [minute,  5,  5 * durationMinute],\n    [minute, 15, 15 * durationMinute],\n    [minute, 30, 30 * durationMinute],\n    [  hour,  1,      durationHour  ],\n    [  hour,  3,  3 * durationHour  ],\n    [  hour,  6,  6 * durationHour  ],\n    [  hour, 12, 12 * durationHour  ],\n    [   day,  1,      durationDay   ],\n    [   day,  2,  2 * durationDay   ],\n    [  week,  1,      durationWeek  ],\n    [ month,  1,      durationMonth ],\n    [ month,  3,  3 * durationMonth ],\n    [  year,  1,      durationYear  ]\n  ];\n\n  function tickFormat(date) {\n    return (second(date) < date ? formatMillisecond\n        : minute(date) < date ? formatSecond\n        : hour(date) < date ? formatMinute\n        : day(date) < date ? formatHour\n        : month(date) < date ? (week(date) < date ? formatDay : formatWeek)\n        : year(date) < date ? formatMonth\n        : formatYear)(date);\n  }\n\n  function tickInterval(interval, start, stop, step) {\n    if (interval == null) interval = 10;\n\n    // If a desired tick count is specified, pick a reasonable tick interval\n    // based on the extent of the domain and a rough estimate of tick size.\n    // Otherwise, assume interval is already a time interval and use it.\n    if (typeof interval === \"number\") {\n      var target = Math.abs(stop - start) / interval,\n          i = bisector(function(i) { return i[2]; }).right(tickIntervals, target);\n      if (i === tickIntervals.length) {\n        step = tickStep(start / durationYear, stop / durationYear, interval);\n        interval = year;\n      } else if (i) {\n        i = tickIntervals[target / tickIntervals[i - 1][2] < tickIntervals[i][2] / target ? i - 1 : i];\n        step = i[1];\n        interval = i[0];\n      } else {\n        step = Math.max(tickStep(start, stop, interval), 1);\n        interval = millisecond;\n      }\n    }\n\n    return step == null ? interval : interval.every(step);\n  }\n\n  scale.invert = function(y) {\n    return new Date(invert(y));\n  };\n\n  scale.domain = function(_) {\n    return arguments.length ? domain(map.call(_, number)) : domain().map(date);\n  };\n\n  scale.ticks = function(interval, step) {\n    var d = domain(),\n        t0 = d[0],\n        t1 = d[d.length - 1],\n        r = t1 < t0,\n        t;\n    if (r) t = t0, t0 = t1, t1 = t;\n    t = tickInterval(interval, t0, t1, step);\n    t = t ? t.range(t0, t1 + 1) : []; // inclusive stop\n    return r ? t.reverse() : t;\n  };\n\n  scale.tickFormat = function(count, specifier) {\n    return specifier == null ? tickFormat : format(specifier);\n  };\n\n  scale.nice = function(interval, step) {\n    var d = domain();\n    return (interval = tickInterval(interval, d[0], d[d.length - 1], step))\n        ? domain(nice(d, interval))\n        : scale;\n  };\n\n  scale.copy = function() {\n    return copy(scale, calendar(year, month, week, day, hour, minute, second, millisecond, format));\n  };\n\n  return scale;\n}\n\nexport default function() {\n  return calendar(timeYear, timeMonth, timeWeek, timeDay, timeHour, timeMinute, timeSecond, timeMillisecond, timeFormat).domain([new Date(2000, 0, 1), new Date(2000, 0, 2)]);\n}\n","export default function(s) {\n  return s.match(/.{6}/g).map(function(x) {\n    return \"#\" + x;\n  });\n}\n","import colors from \"./colors\";\n\nexport default colors(\"1f77b4ff7f0e2ca02cd627289467bd8c564be377c27f7f7fbcbd2217becf\");\n","import colors from \"./colors\";\n\nexport default colors(\"393b795254a36b6ecf9c9ede6379398ca252b5cf6bcedb9c8c6d31bd9e39e7ba52e7cb94843c39ad494ad6616be7969c7b4173a55194ce6dbdde9ed6\");\n","import colors from \"./colors\";\n\nexport default colors(\"1f77b4aec7e8ff7f0effbb782ca02c98df8ad62728ff98969467bdc5b0d58c564bc49c94e377c2f7b6d27f7f7fc7c7c7bcbd22dbdb8d17becf9edae5\");\n","import colors from \"./colors\";\n\nexport default colors(\"3182bd6baed69ecae1c6dbefe6550dfd8d3cfdae6bfdd0a231a35474c476a1d99bc7e9c0756bb19e9ac8bcbddcdadaeb636363969696bdbdbdd9d9d9\");\n","import {cubehelix} from \"d3-color\";\nimport {interpolateCubehelixLong} from \"d3-interpolate\";\n\nexport default interpolateCubehelixLong(cubehelix(300, 0.5, 0.0), cubehelix(-240, 0.5, 1.0));\n","import {cubehelix} from \"d3-color\";\nimport {interpolateCubehelixLong} from \"d3-interpolate\";\n\nexport var warm = interpolateCubehelixLong(cubehelix(-100, 0.75, 0.35), cubehelix(80, 1.50, 0.8));\n\nexport var cool = interpolateCubehelixLong(cubehelix(260, 0.75, 0.35), cubehelix(80, 1.50, 0.8));\n\nvar rainbow = cubehelix();\n\nexport default function(t) {\n  if (t < 0 || t > 1) t -= Math.floor(t);\n  var ts = Math.abs(t - 0.5);\n  rainbow.h = 360 * t - 100;\n  rainbow.s = 1.5 - 1.5 * ts;\n  rainbow.l = 0.8 - 0.9 * ts;\n  return rainbow + \"\";\n}\n","import colors from \"./colors\";\n\nfunction ramp(range) {\n  var n = range.length;\n  return function(t) {\n    return range[Math.max(0, Math.min(n - 1, Math.floor(t * n)))];\n  };\n}\n\nexport default ramp(colors(\"44015444025645045745055946075a46085c460a5d460b5e470d60470e6147106347116447136548146748166848176948186a481a6c481b6d481c6e481d6f481f70482071482173482374482475482576482677482878482979472a7a472c7a472d7b472e7c472f7d46307e46327e46337f463480453581453781453882443983443a83443b84433d84433e85423f854240864241864142874144874045884046883f47883f48893e49893e4a893e4c8a3d4d8a3d4e8a3c4f8a3c508b3b518b3b528b3a538b3a548c39558c39568c38588c38598c375a8c375b8d365c8d365d8d355e8d355f8d34608d34618d33628d33638d32648e32658e31668e31678e31688e30698e306a8e2f6b8e2f6c8e2e6d8e2e6e8e2e6f8e2d708e2d718e2c718e2c728e2c738e2b748e2b758e2a768e2a778e2a788e29798e297a8e297b8e287c8e287d8e277e8e277f8e27808e26818e26828e26828e25838e25848e25858e24868e24878e23888e23898e238a8d228b8d228c8d228d8d218e8d218f8d21908d21918c20928c20928c20938c1f948c1f958b1f968b1f978b1f988b1f998a1f9a8a1e9b8a1e9c891e9d891f9e891f9f881fa0881fa1881fa1871fa28720a38620a48621a58521a68522a78522a88423a98324aa8325ab8225ac8226ad8127ad8128ae8029af7f2ab07f2cb17e2db27d2eb37c2fb47c31b57b32b67a34b67935b77937b87838b9773aba763bbb753dbc743fbc7340bd7242be7144bf7046c06f48c16e4ac16d4cc26c4ec36b50c46a52c56954c56856c66758c7655ac8645cc8635ec96260ca6063cb5f65cb5e67cc5c69cd5b6ccd5a6ece5870cf5773d05675d05477d1537ad1517cd2507fd34e81d34d84d44b86d54989d5488bd6468ed64590d74393d74195d84098d83e9bd93c9dd93ba0da39a2da37a5db36a8db34aadc32addc30b0dd2fb2dd2db5de2bb8de29bade28bddf26c0df25c2df23c5e021c8e020cae11fcde11dd0e11cd2e21bd5e21ad8e219dae319dde318dfe318e2e418e5e419e7e419eae51aece51befe51cf1e51df4e61ef6e620f8e621fbe723fde725\"));\n\nexport var magma = ramp(colors(\"00000401000501010601010802010902020b02020d03030f03031204041405041606051806051a07061c08071e0907200a08220b09240c09260d0a290e0b2b100b2d110c2f120d31130d34140e36150e38160f3b180f3d19103f1a10421c10441d11471e114920114b21114e22115024125325125527125829115a2a115c2c115f2d11612f116331116533106734106936106b38106c390f6e3b0f703d0f713f0f72400f74420f75440f764510774710784910784a10794c117a4e117b4f127b51127c52137c54137d56147d57157e59157e5a167e5c167f5d177f5f187f601880621980641a80651a80671b80681c816a1c816b1d816d1d816e1e81701f81721f817320817521817621817822817922827b23827c23827e24828025828125818326818426818627818827818928818b29818c29818e2a81902a81912b81932b80942c80962c80982d80992d809b2e7f9c2e7f9e2f7fa02f7fa1307ea3307ea5317ea6317da8327daa337dab337cad347cae347bb0357bb2357bb3367ab5367ab73779b83779ba3878bc3978bd3977bf3a77c03a76c23b75c43c75c53c74c73d73c83e73ca3e72cc3f71cd4071cf4070d0416fd2426fd3436ed5446dd6456cd8456cd9466bdb476adc4869de4968df4a68e04c67e24d66e34e65e44f64e55064e75263e85362e95462ea5661eb5760ec5860ed5a5fee5b5eef5d5ef05f5ef1605df2625df2645cf3655cf4675cf4695cf56b5cf66c5cf66e5cf7705cf7725cf8745cf8765cf9785df9795df97b5dfa7d5efa7f5efa815ffb835ffb8560fb8761fc8961fc8a62fc8c63fc8e64fc9065fd9266fd9467fd9668fd9869fd9a6afd9b6bfe9d6cfe9f6dfea16efea36ffea571fea772fea973feaa74feac76feae77feb078feb27afeb47bfeb67cfeb77efeb97ffebb81febd82febf84fec185fec287fec488fec68afec88cfeca8dfecc8ffecd90fecf92fed194fed395fed597fed799fed89afdda9cfddc9efddea0fde0a1fde2a3fde3a5fde5a7fde7a9fde9aafdebacfcecaefceeb0fcf0b2fcf2b4fcf4b6fcf6b8fcf7b9fcf9bbfcfbbdfcfdbf\"));\n\nexport var inferno = ramp(colors(\"00000401000501010601010802010a02020c02020e03021004031204031405041706041907051b08051d09061f0a07220b07240c08260d08290e092b10092d110a30120a32140b34150b37160b39180c3c190c3e1b0c411c0c431e0c451f0c48210c4a230c4c240c4f260c51280b53290b552b0b572d0b592f0a5b310a5c320a5e340a5f3609613809623909633b09643d09653e0966400a67420a68440a68450a69470b6a490b6a4a0c6b4c0c6b4d0d6c4f0d6c510e6c520e6d540f6d550f6d57106e59106e5a116e5c126e5d126e5f136e61136e62146e64156e65156e67166e69166e6a176e6c186e6d186e6f196e71196e721a6e741a6e751b6e771c6d781c6d7a1d6d7c1d6d7d1e6d7f1e6c801f6c82206c84206b85216b87216b88226a8a226a8c23698d23698f24699025689225689326679526679727669827669a28659b29649d29649f2a63a02a63a22b62a32c61a52c60a62d60a82e5fa92e5eab2f5ead305dae305cb0315bb1325ab3325ab43359b63458b73557b93556ba3655bc3754bd3853bf3952c03a51c13a50c33b4fc43c4ec63d4dc73e4cc83f4bca404acb4149cc4248ce4347cf4446d04545d24644d34743d44842d54a41d74b3fd84c3ed94d3dda4e3cdb503bdd513ade5238df5337e05536e15635e25734e35933e45a31e55c30e65d2fe75e2ee8602de9612bea632aeb6429eb6628ec6726ed6925ee6a24ef6c23ef6e21f06f20f1711ff1731df2741cf3761bf37819f47918f57b17f57d15f67e14f68013f78212f78410f8850ff8870ef8890cf98b0bf98c0af98e09fa9008fa9207fa9407fb9606fb9706fb9906fb9b06fb9d07fc9f07fca108fca309fca50afca60cfca80dfcaa0ffcac11fcae12fcb014fcb216fcb418fbb61afbb81dfbba1ffbbc21fbbe23fac026fac228fac42afac62df9c72ff9c932f9cb35f8cd37f8cf3af7d13df7d340f6d543f6d746f5d949f5db4cf4dd4ff4df53f4e156f3e35af3e55df2e661f2e865f2ea69f1ec6df1ed71f1ef75f1f179f2f27df2f482f3f586f3f68af4f88ef5f992f6fa96f8fb9af9fc9dfafda1fcffa4\"));\n\nexport var plasma = ramp(colors(\"0d088710078813078916078a19068c1b068d1d068e20068f2206902406912605912805922a05932c05942e05952f059631059733059735049837049938049a3a049a3c049b3e049c3f049c41049d43039e44039e46039f48039f4903a04b03a14c02a14e02a25002a25102a35302a35502a45601a45801a45901a55b01a55c01a65e01a66001a66100a76300a76400a76600a76700a86900a86a00a86c00a86e00a86f00a87100a87201a87401a87501a87701a87801a87a02a87b02a87d03a87e03a88004a88104a78305a78405a78606a68707a68808a68a09a58b0aa58d0ba58e0ca48f0da4910ea3920fa39410a29511a19613a19814a099159f9a169f9c179e9d189d9e199da01a9ca11b9ba21d9aa31e9aa51f99a62098a72197a82296aa2395ab2494ac2694ad2793ae2892b02991b12a90b22b8fb32c8eb42e8db52f8cb6308bb7318ab83289ba3388bb3488bc3587bd3786be3885bf3984c03a83c13b82c23c81c33d80c43e7fc5407ec6417dc7427cc8437bc9447aca457acb4679cc4778cc4977cd4a76ce4b75cf4c74d04d73d14e72d24f71d35171d45270d5536fd5546ed6556dd7566cd8576bd9586ada5a6ada5b69db5c68dc5d67dd5e66de5f65de6164df6263e06363e16462e26561e26660e3685fe4695ee56a5de56b5de66c5ce76e5be76f5ae87059e97158e97257ea7457eb7556eb7655ec7754ed7953ed7a52ee7b51ef7c51ef7e50f07f4ff0804ef1814df1834cf2844bf3854bf3874af48849f48948f58b47f58c46f68d45f68f44f79044f79143f79342f89441f89540f9973ff9983ef99a3efa9b3dfa9c3cfa9e3bfb9f3afba139fba238fca338fca537fca636fca835fca934fdab33fdac33fdae32fdaf31fdb130fdb22ffdb42ffdb52efeb72dfeb82cfeba2cfebb2bfebd2afebe2afec029fdc229fdc328fdc527fdc627fdc827fdca26fdcb26fccd25fcce25fcd025fcd225fbd324fbd524fbd724fad824fada24f9dc24f9dd25f8df25f8e125f7e225f7e425f6e626f6e826f5e926f5eb27f4ed27f3ee27f3f027f2f227f1f426f1f525f0f724f0f921\"));\n","import {linearish} from \"./linear\";\n\nexport default function sequential(interpolator) {\n  var x0 = 0,\n      x1 = 1,\n      clamp = false;\n\n  function scale(x) {\n    var t = (x - x0) / (x1 - x0);\n    return interpolator(clamp ? Math.max(0, Math.min(1, t)) : t);\n  }\n\n  scale.domain = function(_) {\n    return arguments.length ? (x0 = +_[0], x1 = +_[1], scale) : [x0, x1];\n  };\n\n  scale.clamp = function(_) {\n    return arguments.length ? (clamp = !!_, scale) : clamp;\n  };\n\n  scale.interpolator = function(_) {\n    return arguments.length ? (interpolator = _, scale) : interpolator;\n  };\n\n  scale.copy = function() {\n    return sequential(interpolator).domain([x0, x1]).clamp(clamp);\n  };\n\n  return linearish(scale);\n}\n","export default function(specifier) {\n  var n = specifier.length / 6 | 0, colors = new Array(n), i = 0;\n  while (i < n) colors[i] = \"#\" + specifier.slice(i * 6, ++i * 6);\n  return colors;\n}\n","import colors from \"../colors\";\n\nexport default colors(\"7fc97fbeaed4fdc086ffff99386cb0f0027fbf5b17666666\");\n","import colors from \"../colors\";\n\nexport default colors(\"1f77b4ff7f0e2ca02cd627289467bd8c564be377c27f7f7fbcbd2217becf\");\n","import colors from \"../colors\";\n\nexport default colors(\"1b9e77d95f027570b3e7298a66a61ee6ab02a6761d666666\");\n","import colors from \"../colors\";\n\nexport default colors(\"a6cee31f78b4b2df8a33a02cfb9a99e31a1cfdbf6fff7f00cab2d66a3d9affff99b15928\");\n","import colors from \"../colors\";\n\nexport default colors(\"fbb4aeb3cde3ccebc5decbe4fed9a6ffffcce5d8bdfddaecf2f2f2\");\n","import colors from \"../colors\";\n\nexport default colors(\"b3e2cdfdcdaccbd5e8f4cae4e6f5c9fff2aef1e2cccccccc\");\n","import colors from \"../colors\";\n\nexport default colors(\"e41a1c377eb84daf4a984ea3ff7f00ffff33a65628f781bf999999\");\n","import colors from \"../colors\";\n\nexport default colors(\"66c2a5fc8d628da0cbe78ac3a6d854ffd92fe5c494b3b3b3\");\n","import colors from \"../colors\";\n\nexport default colors(\"8dd3c7ffffb3bebadafb807280b1d3fdb462b3de69fccde5d9d9d9bc80bdccebc5ffed6f\");\n","import {interpolateRgbBasis} from \"d3-interpolate\";\n\nexport default function(scheme) {\n  return interpolateRgbBasis(scheme[scheme.length - 1]);\n}\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"d8b365f5f5f55ab4ac\",\n  \"a6611adfc27d80cdc1018571\",\n  \"a6611adfc27df5f5f580cdc1018571\",\n  \"8c510ad8b365f6e8c3c7eae55ab4ac01665e\",\n  \"8c510ad8b365f6e8c3f5f5f5c7eae55ab4ac01665e\",\n  \"8c510abf812ddfc27df6e8c3c7eae580cdc135978f01665e\",\n  \"8c510abf812ddfc27df6e8c3f5f5f5c7eae580cdc135978f01665e\",\n  \"5430058c510abf812ddfc27df6e8c3c7eae580cdc135978f01665e003c30\",\n  \"5430058c510abf812ddfc27df6e8c3f5f5f5c7eae580cdc135978f01665e003c30\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"af8dc3f7f7f77fbf7b\",\n  \"7b3294c2a5cfa6dba0008837\",\n  \"7b3294c2a5cff7f7f7a6dba0008837\",\n  \"762a83af8dc3e7d4e8d9f0d37fbf7b1b7837\",\n  \"762a83af8dc3e7d4e8f7f7f7d9f0d37fbf7b1b7837\",\n  \"762a839970abc2a5cfe7d4e8d9f0d3a6dba05aae611b7837\",\n  \"762a839970abc2a5cfe7d4e8f7f7f7d9f0d3a6dba05aae611b7837\",\n  \"40004b762a839970abc2a5cfe7d4e8d9f0d3a6dba05aae611b783700441b\",\n  \"40004b762a839970abc2a5cfe7d4e8f7f7f7d9f0d3a6dba05aae611b783700441b\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"e9a3c9f7f7f7a1d76a\",\n  \"d01c8bf1b6dab8e1864dac26\",\n  \"d01c8bf1b6daf7f7f7b8e1864dac26\",\n  \"c51b7de9a3c9fde0efe6f5d0a1d76a4d9221\",\n  \"c51b7de9a3c9fde0eff7f7f7e6f5d0a1d76a4d9221\",\n  \"c51b7dde77aef1b6dafde0efe6f5d0b8e1867fbc414d9221\",\n  \"c51b7dde77aef1b6dafde0eff7f7f7e6f5d0b8e1867fbc414d9221\",\n  \"8e0152c51b7dde77aef1b6dafde0efe6f5d0b8e1867fbc414d9221276419\",\n  \"8e0152c51b7dde77aef1b6dafde0eff7f7f7e6f5d0b8e1867fbc414d9221276419\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"998ec3f7f7f7f1a340\",\n  \"5e3c99b2abd2fdb863e66101\",\n  \"5e3c99b2abd2f7f7f7fdb863e66101\",\n  \"542788998ec3d8daebfee0b6f1a340b35806\",\n  \"542788998ec3d8daebf7f7f7fee0b6f1a340b35806\",\n  \"5427888073acb2abd2d8daebfee0b6fdb863e08214b35806\",\n  \"5427888073acb2abd2d8daebf7f7f7fee0b6fdb863e08214b35806\",\n  \"2d004b5427888073acb2abd2d8daebfee0b6fdb863e08214b358067f3b08\",\n  \"2d004b5427888073acb2abd2d8daebf7f7f7fee0b6fdb863e08214b358067f3b08\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"ef8a62f7f7f767a9cf\",\n  \"ca0020f4a58292c5de0571b0\",\n  \"ca0020f4a582f7f7f792c5de0571b0\",\n  \"b2182bef8a62fddbc7d1e5f067a9cf2166ac\",\n  \"b2182bef8a62fddbc7f7f7f7d1e5f067a9cf2166ac\",\n  \"b2182bd6604df4a582fddbc7d1e5f092c5de4393c32166ac\",\n  \"b2182bd6604df4a582fddbc7f7f7f7d1e5f092c5de4393c32166ac\",\n  \"67001fb2182bd6604df4a582fddbc7d1e5f092c5de4393c32166ac053061\",\n  \"67001fb2182bd6604df4a582fddbc7f7f7f7d1e5f092c5de4393c32166ac053061\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"ef8a62ffffff999999\",\n  \"ca0020f4a582bababa404040\",\n  \"ca0020f4a582ffffffbababa404040\",\n  \"b2182bef8a62fddbc7e0e0e09999994d4d4d\",\n  \"b2182bef8a62fddbc7ffffffe0e0e09999994d4d4d\",\n  \"b2182bd6604df4a582fddbc7e0e0e0bababa8787874d4d4d\",\n  \"b2182bd6604df4a582fddbc7ffffffe0e0e0bababa8787874d4d4d\",\n  \"67001fb2182bd6604df4a582fddbc7e0e0e0bababa8787874d4d4d1a1a1a\",\n  \"67001fb2182bd6604df4a582fddbc7ffffffe0e0e0bababa8787874d4d4d1a1a1a\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"fc8d59ffffbf91bfdb\",\n  \"d7191cfdae61abd9e92c7bb6\",\n  \"d7191cfdae61ffffbfabd9e92c7bb6\",\n  \"d73027fc8d59fee090e0f3f891bfdb4575b4\",\n  \"d73027fc8d59fee090ffffbfe0f3f891bfdb4575b4\",\n  \"d73027f46d43fdae61fee090e0f3f8abd9e974add14575b4\",\n  \"d73027f46d43fdae61fee090ffffbfe0f3f8abd9e974add14575b4\",\n  \"a50026d73027f46d43fdae61fee090e0f3f8abd9e974add14575b4313695\",\n  \"a50026d73027f46d43fdae61fee090ffffbfe0f3f8abd9e974add14575b4313695\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"fc8d59ffffbf91cf60\",\n  \"d7191cfdae61a6d96a1a9641\",\n  \"d7191cfdae61ffffbfa6d96a1a9641\",\n  \"d73027fc8d59fee08bd9ef8b91cf601a9850\",\n  \"d73027fc8d59fee08bffffbfd9ef8b91cf601a9850\",\n  \"d73027f46d43fdae61fee08bd9ef8ba6d96a66bd631a9850\",\n  \"d73027f46d43fdae61fee08bffffbfd9ef8ba6d96a66bd631a9850\",\n  \"a50026d73027f46d43fdae61fee08bd9ef8ba6d96a66bd631a9850006837\",\n  \"a50026d73027f46d43fdae61fee08bffffbfd9ef8ba6d96a66bd631a9850006837\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"fc8d59ffffbf99d594\",\n  \"d7191cfdae61abdda42b83ba\",\n  \"d7191cfdae61ffffbfabdda42b83ba\",\n  \"d53e4ffc8d59fee08be6f59899d5943288bd\",\n  \"d53e4ffc8d59fee08bffffbfe6f59899d5943288bd\",\n  \"d53e4ff46d43fdae61fee08be6f598abdda466c2a53288bd\",\n  \"d53e4ff46d43fdae61fee08bffffbfe6f598abdda466c2a53288bd\",\n  \"9e0142d53e4ff46d43fdae61fee08be6f598abdda466c2a53288bd5e4fa2\",\n  \"9e0142d53e4ff46d43fdae61fee08bffffbfe6f598abdda466c2a53288bd5e4fa2\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"e5f5f999d8c92ca25f\",\n  \"edf8fbb2e2e266c2a4238b45\",\n  \"edf8fbb2e2e266c2a42ca25f006d2c\",\n  \"edf8fbccece699d8c966c2a42ca25f006d2c\",\n  \"edf8fbccece699d8c966c2a441ae76238b45005824\",\n  \"f7fcfde5f5f9ccece699d8c966c2a441ae76238b45005824\",\n  \"f7fcfde5f5f9ccece699d8c966c2a441ae76238b45006d2c00441b\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"e0ecf49ebcda8856a7\",\n  \"edf8fbb3cde38c96c688419d\",\n  \"edf8fbb3cde38c96c68856a7810f7c\",\n  \"edf8fbbfd3e69ebcda8c96c68856a7810f7c\",\n  \"edf8fbbfd3e69ebcda8c96c68c6bb188419d6e016b\",\n  \"f7fcfde0ecf4bfd3e69ebcda8c96c68c6bb188419d6e016b\",\n  \"f7fcfde0ecf4bfd3e69ebcda8c96c68c6bb188419d810f7c4d004b\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"e0f3dba8ddb543a2ca\",\n  \"f0f9e8bae4bc7bccc42b8cbe\",\n  \"f0f9e8bae4bc7bccc443a2ca0868ac\",\n  \"f0f9e8ccebc5a8ddb57bccc443a2ca0868ac\",\n  \"f0f9e8ccebc5a8ddb57bccc44eb3d32b8cbe08589e\",\n  \"f7fcf0e0f3dbccebc5a8ddb57bccc44eb3d32b8cbe08589e\",\n  \"f7fcf0e0f3dbccebc5a8ddb57bccc44eb3d32b8cbe0868ac084081\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"fee8c8fdbb84e34a33\",\n  \"fef0d9fdcc8afc8d59d7301f\",\n  \"fef0d9fdcc8afc8d59e34a33b30000\",\n  \"fef0d9fdd49efdbb84fc8d59e34a33b30000\",\n  \"fef0d9fdd49efdbb84fc8d59ef6548d7301f990000\",\n  \"fff7ecfee8c8fdd49efdbb84fc8d59ef6548d7301f990000\",\n  \"fff7ecfee8c8fdd49efdbb84fc8d59ef6548d7301fb300007f0000\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"ece2f0a6bddb1c9099\",\n  \"f6eff7bdc9e167a9cf02818a\",\n  \"f6eff7bdc9e167a9cf1c9099016c59\",\n  \"f6eff7d0d1e6a6bddb67a9cf1c9099016c59\",\n  \"f6eff7d0d1e6a6bddb67a9cf3690c002818a016450\",\n  \"fff7fbece2f0d0d1e6a6bddb67a9cf3690c002818a016450\",\n  \"fff7fbece2f0d0d1e6a6bddb67a9cf3690c002818a016c59014636\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"ece7f2a6bddb2b8cbe\",\n  \"f1eef6bdc9e174a9cf0570b0\",\n  \"f1eef6bdc9e174a9cf2b8cbe045a8d\",\n  \"f1eef6d0d1e6a6bddb74a9cf2b8cbe045a8d\",\n  \"f1eef6d0d1e6a6bddb74a9cf3690c00570b0034e7b\",\n  \"fff7fbece7f2d0d1e6a6bddb74a9cf3690c00570b0034e7b\",\n  \"fff7fbece7f2d0d1e6a6bddb74a9cf3690c00570b0045a8d023858\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"e7e1efc994c7dd1c77\",\n  \"f1eef6d7b5d8df65b0ce1256\",\n  \"f1eef6d7b5d8df65b0dd1c77980043\",\n  \"f1eef6d4b9dac994c7df65b0dd1c77980043\",\n  \"f1eef6d4b9dac994c7df65b0e7298ace125691003f\",\n  \"f7f4f9e7e1efd4b9dac994c7df65b0e7298ace125691003f\",\n  \"f7f4f9e7e1efd4b9dac994c7df65b0e7298ace125698004367001f\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"fde0ddfa9fb5c51b8a\",\n  \"feebe2fbb4b9f768a1ae017e\",\n  \"feebe2fbb4b9f768a1c51b8a7a0177\",\n  \"feebe2fcc5c0fa9fb5f768a1c51b8a7a0177\",\n  \"feebe2fcc5c0fa9fb5f768a1dd3497ae017e7a0177\",\n  \"fff7f3fde0ddfcc5c0fa9fb5f768a1dd3497ae017e7a0177\",\n  \"fff7f3fde0ddfcc5c0fa9fb5f768a1dd3497ae017e7a017749006a\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"edf8b17fcdbb2c7fb8\",\n  \"ffffcca1dab441b6c4225ea8\",\n  \"ffffcca1dab441b6c42c7fb8253494\",\n  \"ffffccc7e9b47fcdbb41b6c42c7fb8253494\",\n  \"ffffccc7e9b47fcdbb41b6c41d91c0225ea80c2c84\",\n  \"ffffd9edf8b1c7e9b47fcdbb41b6c41d91c0225ea80c2c84\",\n  \"ffffd9edf8b1c7e9b47fcdbb41b6c41d91c0225ea8253494081d58\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"f7fcb9addd8e31a354\",\n  \"ffffccc2e69978c679238443\",\n  \"ffffccc2e69978c67931a354006837\",\n  \"ffffccd9f0a3addd8e78c67931a354006837\",\n  \"ffffccd9f0a3addd8e78c67941ab5d238443005a32\",\n  \"ffffe5f7fcb9d9f0a3addd8e78c67941ab5d238443005a32\",\n  \"ffffe5f7fcb9d9f0a3addd8e78c67941ab5d238443006837004529\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"fff7bcfec44fd95f0e\",\n  \"ffffd4fed98efe9929cc4c02\",\n  \"ffffd4fed98efe9929d95f0e993404\",\n  \"ffffd4fee391fec44ffe9929d95f0e993404\",\n  \"ffffd4fee391fec44ffe9929ec7014cc4c028c2d04\",\n  \"ffffe5fff7bcfee391fec44ffe9929ec7014cc4c028c2d04\",\n  \"ffffe5fff7bcfee391fec44ffe9929ec7014cc4c02993404662506\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"ffeda0feb24cf03b20\",\n  \"ffffb2fecc5cfd8d3ce31a1c\",\n  \"ffffb2fecc5cfd8d3cf03b20bd0026\",\n  \"ffffb2fed976feb24cfd8d3cf03b20bd0026\",\n  \"ffffb2fed976feb24cfd8d3cfc4e2ae31a1cb10026\",\n  \"ffffccffeda0fed976feb24cfd8d3cfc4e2ae31a1cb10026\",\n  \"ffffccffeda0fed976feb24cfd8d3cfc4e2ae31a1cbd0026800026\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"deebf79ecae13182bd\",\n  \"eff3ffbdd7e76baed62171b5\",\n  \"eff3ffbdd7e76baed63182bd08519c\",\n  \"eff3ffc6dbef9ecae16baed63182bd08519c\",\n  \"eff3ffc6dbef9ecae16baed64292c62171b5084594\",\n  \"f7fbffdeebf7c6dbef9ecae16baed64292c62171b5084594\",\n  \"f7fbffdeebf7c6dbef9ecae16baed64292c62171b508519c08306b\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"e5f5e0a1d99b31a354\",\n  \"edf8e9bae4b374c476238b45\",\n  \"edf8e9bae4b374c47631a354006d2c\",\n  \"edf8e9c7e9c0a1d99b74c47631a354006d2c\",\n  \"edf8e9c7e9c0a1d99b74c47641ab5d238b45005a32\",\n  \"f7fcf5e5f5e0c7e9c0a1d99b74c47641ab5d238b45005a32\",\n  \"f7fcf5e5f5e0c7e9c0a1d99b74c47641ab5d238b45006d2c00441b\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"f0f0f0bdbdbd636363\",\n  \"f7f7f7cccccc969696525252\",\n  \"f7f7f7cccccc969696636363252525\",\n  \"f7f7f7d9d9d9bdbdbd969696636363252525\",\n  \"f7f7f7d9d9d9bdbdbd969696737373525252252525\",\n  \"fffffff0f0f0d9d9d9bdbdbd969696737373525252252525\",\n  \"fffffff0f0f0d9d9d9bdbdbd969696737373525252252525000000\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"efedf5bcbddc756bb1\",\n  \"f2f0f7cbc9e29e9ac86a51a3\",\n  \"f2f0f7cbc9e29e9ac8756bb154278f\",\n  \"f2f0f7dadaebbcbddc9e9ac8756bb154278f\",\n  \"f2f0f7dadaebbcbddc9e9ac8807dba6a51a34a1486\",\n  \"fcfbfdefedf5dadaebbcbddc9e9ac8807dba6a51a34a1486\",\n  \"fcfbfdefedf5dadaebbcbddc9e9ac8807dba6a51a354278f3f007d\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"fee0d2fc9272de2d26\",\n  \"fee5d9fcae91fb6a4acb181d\",\n  \"fee5d9fcae91fb6a4ade2d26a50f15\",\n  \"fee5d9fcbba1fc9272fb6a4ade2d26a50f15\",\n  \"fee5d9fcbba1fc9272fb6a4aef3b2ccb181d99000d\",\n  \"fff5f0fee0d2fcbba1fc9272fb6a4aef3b2ccb181d99000d\",\n  \"fff5f0fee0d2fcbba1fc9272fb6a4aef3b2ccb181da50f1567000d\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"fee6cefdae6be6550d\",\n  \"feeddefdbe85fd8d3cd94701\",\n  \"feeddefdbe85fd8d3ce6550da63603\",\n  \"feeddefdd0a2fdae6bfd8d3ce6550da63603\",\n  \"feeddefdd0a2fdae6bfd8d3cf16913d948018c2d04\",\n  \"fff5ebfee6cefdd0a2fdae6bfd8d3cf16913d948018c2d04\",\n  \"fff5ebfee6cefdd0a2fdae6bfd8d3cf16913d94801a636037f2704\"\n).map(colors);\n\nexport default ramp(scheme);\n","import {cubehelix} from \"d3-color\";\nimport {interpolateCubehelixLong} from \"d3-interpolate\";\n\nexport default interpolateCubehelixLong(cubehelix(300, 0.5, 0.0), cubehelix(-240, 0.5, 1.0));\n","import {cubehelix} from \"d3-color\";\nimport {interpolateCubehelixLong} from \"d3-interpolate\";\n\nexport var warm = interpolateCubehelixLong(cubehelix(-100, 0.75, 0.35), cubehelix(80, 1.50, 0.8));\n\nexport var cool = interpolateCubehelixLong(cubehelix(260, 0.75, 0.35), cubehelix(80, 1.50, 0.8));\n\nvar c = cubehelix();\n\nexport default function(t) {\n  if (t < 0 || t > 1) t -= Math.floor(t);\n  var ts = Math.abs(t - 0.5);\n  c.h = 360 * t - 100;\n  c.s = 1.5 - 1.5 * ts;\n  c.l = 0.8 - 0.9 * ts;\n  return c + \"\";\n}\n","import {rgb} from \"d3-color\";\n\nvar c = rgb(),\n    pi_1_3 = Math.PI / 3,\n    pi_2_3 = Math.PI * 2 / 3;\n\nexport default function(t) {\n  var x;\n  t = (0.5 - t) * Math.PI;\n  c.r = 255 * (x = Math.sin(t)) * x;\n  c.g = 255 * (x = Math.sin(t + pi_1_3)) * x;\n  c.b = 255 * (x = Math.sin(t + pi_2_3)) * x;\n  return c + \"\";\n}\n","import colors from \"../colors\";\n\nfunction ramp(range) {\n  var n = range.length;\n  return function(t) {\n    return range[Math.max(0, Math.min(n - 1, Math.floor(t * n)))];\n  };\n}\n\nexport default ramp(colors(\"44015444025645045745055946075a46085c460a5d460b5e470d60470e6147106347116447136548146748166848176948186a481a6c481b6d481c6e481d6f481f70482071482173482374482475482576482677482878482979472a7a472c7a472d7b472e7c472f7d46307e46327e46337f463480453581453781453882443983443a83443b84433d84433e85423f854240864241864142874144874045884046883f47883f48893e49893e4a893e4c8a3d4d8a3d4e8a3c4f8a3c508b3b518b3b528b3a538b3a548c39558c39568c38588c38598c375a8c375b8d365c8d365d8d355e8d355f8d34608d34618d33628d33638d32648e32658e31668e31678e31688e30698e306a8e2f6b8e2f6c8e2e6d8e2e6e8e2e6f8e2d708e2d718e2c718e2c728e2c738e2b748e2b758e2a768e2a778e2a788e29798e297a8e297b8e287c8e287d8e277e8e277f8e27808e26818e26828e26828e25838e25848e25858e24868e24878e23888e23898e238a8d228b8d228c8d228d8d218e8d218f8d21908d21918c20928c20928c20938c1f948c1f958b1f968b1f978b1f988b1f998a1f9a8a1e9b8a1e9c891e9d891f9e891f9f881fa0881fa1881fa1871fa28720a38620a48621a58521a68522a78522a88423a98324aa8325ab8225ac8226ad8127ad8128ae8029af7f2ab07f2cb17e2db27d2eb37c2fb47c31b57b32b67a34b67935b77937b87838b9773aba763bbb753dbc743fbc7340bd7242be7144bf7046c06f48c16e4ac16d4cc26c4ec36b50c46a52c56954c56856c66758c7655ac8645cc8635ec96260ca6063cb5f65cb5e67cc5c69cd5b6ccd5a6ece5870cf5773d05675d05477d1537ad1517cd2507fd34e81d34d84d44b86d54989d5488bd6468ed64590d74393d74195d84098d83e9bd93c9dd93ba0da39a2da37a5db36a8db34aadc32addc30b0dd2fb2dd2db5de2bb8de29bade28bddf26c0df25c2df23c5e021c8e020cae11fcde11dd0e11cd2e21bd5e21ad8e219dae319dde318dfe318e2e418e5e419e7e419eae51aece51befe51cf1e51df4e61ef6e620f8e621fbe723fde725\"));\n\nexport var magma = ramp(colors(\"00000401000501010601010802010902020b02020d03030f03031204041405041606051806051a07061c08071e0907200a08220b09240c09260d0a290e0b2b100b2d110c2f120d31130d34140e36150e38160f3b180f3d19103f1a10421c10441d11471e114920114b21114e22115024125325125527125829115a2a115c2c115f2d11612f116331116533106734106936106b38106c390f6e3b0f703d0f713f0f72400f74420f75440f764510774710784910784a10794c117a4e117b4f127b51127c52137c54137d56147d57157e59157e5a167e5c167f5d177f5f187f601880621980641a80651a80671b80681c816a1c816b1d816d1d816e1e81701f81721f817320817521817621817822817922827b23827c23827e24828025828125818326818426818627818827818928818b29818c29818e2a81902a81912b81932b80942c80962c80982d80992d809b2e7f9c2e7f9e2f7fa02f7fa1307ea3307ea5317ea6317da8327daa337dab337cad347cae347bb0357bb2357bb3367ab5367ab73779b83779ba3878bc3978bd3977bf3a77c03a76c23b75c43c75c53c74c73d73c83e73ca3e72cc3f71cd4071cf4070d0416fd2426fd3436ed5446dd6456cd8456cd9466bdb476adc4869de4968df4a68e04c67e24d66e34e65e44f64e55064e75263e85362e95462ea5661eb5760ec5860ed5a5fee5b5eef5d5ef05f5ef1605df2625df2645cf3655cf4675cf4695cf56b5cf66c5cf66e5cf7705cf7725cf8745cf8765cf9785df9795df97b5dfa7d5efa7f5efa815ffb835ffb8560fb8761fc8961fc8a62fc8c63fc8e64fc9065fd9266fd9467fd9668fd9869fd9a6afd9b6bfe9d6cfe9f6dfea16efea36ffea571fea772fea973feaa74feac76feae77feb078feb27afeb47bfeb67cfeb77efeb97ffebb81febd82febf84fec185fec287fec488fec68afec88cfeca8dfecc8ffecd90fecf92fed194fed395fed597fed799fed89afdda9cfddc9efddea0fde0a1fde2a3fde3a5fde5a7fde7a9fde9aafdebacfcecaefceeb0fcf0b2fcf2b4fcf4b6fcf6b8fcf7b9fcf9bbfcfbbdfcfdbf\"));\n\nexport var inferno = ramp(colors(\"00000401000501010601010802010a02020c02020e03021004031204031405041706041907051b08051d09061f0a07220b07240c08260d08290e092b10092d110a30120a32140b34150b37160b39180c3c190c3e1b0c411c0c431e0c451f0c48210c4a230c4c240c4f260c51280b53290b552b0b572d0b592f0a5b310a5c320a5e340a5f3609613809623909633b09643d09653e0966400a67420a68440a68450a69470b6a490b6a4a0c6b4c0c6b4d0d6c4f0d6c510e6c520e6d540f6d550f6d57106e59106e5a116e5c126e5d126e5f136e61136e62146e64156e65156e67166e69166e6a176e6c186e6d186e6f196e71196e721a6e741a6e751b6e771c6d781c6d7a1d6d7c1d6d7d1e6d7f1e6c801f6c82206c84206b85216b87216b88226a8a226a8c23698d23698f24699025689225689326679526679727669827669a28659b29649d29649f2a63a02a63a22b62a32c61a52c60a62d60a82e5fa92e5eab2f5ead305dae305cb0315bb1325ab3325ab43359b63458b73557b93556ba3655bc3754bd3853bf3952c03a51c13a50c33b4fc43c4ec63d4dc73e4cc83f4bca404acb4149cc4248ce4347cf4446d04545d24644d34743d44842d54a41d74b3fd84c3ed94d3dda4e3cdb503bdd513ade5238df5337e05536e15635e25734e35933e45a31e55c30e65d2fe75e2ee8602de9612bea632aeb6429eb6628ec6726ed6925ee6a24ef6c23ef6e21f06f20f1711ff1731df2741cf3761bf37819f47918f57b17f57d15f67e14f68013f78212f78410f8850ff8870ef8890cf98b0bf98c0af98e09fa9008fa9207fa9407fb9606fb9706fb9906fb9b06fb9d07fc9f07fca108fca309fca50afca60cfca80dfcaa0ffcac11fcae12fcb014fcb216fcb418fbb61afbb81dfbba1ffbbc21fbbe23fac026fac228fac42afac62df9c72ff9c932f9cb35f8cd37f8cf3af7d13df7d340f6d543f6d746f5d949f5db4cf4dd4ff4df53f4e156f3e35af3e55df2e661f2e865f2ea69f1ec6df1ed71f1ef75f1f179f2f27df2f482f3f586f3f68af4f88ef5f992f6fa96f8fb9af9fc9dfafda1fcffa4\"));\n\nexport var plasma = ramp(colors(\"0d088710078813078916078a19068c1b068d1d068e20068f2206902406912605912805922a05932c05942e05952f059631059733059735049837049938049a3a049a3c049b3e049c3f049c41049d43039e44039e46039f48039f4903a04b03a14c02a14e02a25002a25102a35302a35502a45601a45801a45901a55b01a55c01a65e01a66001a66100a76300a76400a76600a76700a86900a86a00a86c00a86e00a86f00a87100a87201a87401a87501a87701a87801a87a02a87b02a87d03a87e03a88004a88104a78305a78405a78606a68707a68808a68a09a58b0aa58d0ba58e0ca48f0da4910ea3920fa39410a29511a19613a19814a099159f9a169f9c179e9d189d9e199da01a9ca11b9ba21d9aa31e9aa51f99a62098a72197a82296aa2395ab2494ac2694ad2793ae2892b02991b12a90b22b8fb32c8eb42e8db52f8cb6308bb7318ab83289ba3388bb3488bc3587bd3786be3885bf3984c03a83c13b82c23c81c33d80c43e7fc5407ec6417dc7427cc8437bc9447aca457acb4679cc4778cc4977cd4a76ce4b75cf4c74d04d73d14e72d24f71d35171d45270d5536fd5546ed6556dd7566cd8576bd9586ada5a6ada5b69db5c68dc5d67dd5e66de5f65de6164df6263e06363e16462e26561e26660e3685fe4695ee56a5de56b5de66c5ce76e5be76f5ae87059e97158e97257ea7457eb7556eb7655ec7754ed7953ed7a52ee7b51ef7c51ef7e50f07f4ff0804ef1814df1834cf2844bf3854bf3874af48849f48948f58b47f58c46f68d45f68f44f79044f79143f79342f89441f89540f9973ff9983ef99a3efa9b3dfa9c3cfa9e3bfb9f3afba139fba238fca338fca537fca636fca835fca934fdab33fdac33fdae32fdaf31fdb130fdb22ffdb42ffdb52efeb72dfeb82cfeba2cfebb2bfebd2afebe2afec029fdc229fdc328fdc527fdc627fdc827fdca26fdcb26fccd25fcce25fcd025fcd225fbd324fbd524fbd724fad824fada24f9dc24f9dd25f8df25f8e125f7e225f7e425f6e626f6e826f5e926f5eb27f4ed27f3ee27f3f027f2f227f1f426f1f525f0f724f0f921\"));\n","export const UNIT_GLOBAL_NAMESPACE = 'app.units';\nexport const UNIT_LOCAL_NAMESPACE = 'local.units';\nexport const LAYER_LOCAL_NAMESPACE = 'local.layers';\nexport const LAYER_GLOBAL_NAMESPACE = 'app.layers';\nexport const GROUP_GLOBAL_NAMESPACE = 'app.group';\nexport const GROUP_LOCAL_NAMESPACE = 'local.group';\nexport const CANVAS_LOCAL_NAMESPACE = 'local.canvas';\nexport const CANVAS_GLOBAL_NAMESPACE = 'app.canvas';\n\n","const ReservedFields = {\n    ROW_ID: '__id__'\n};\n\nexport default ReservedFields;\n","const CommonProps = {\n    ACTION_INF: 'actionInf',\n    ON_LAYER_DRAW: 'onLayerDraw',\n    MATRIX_CREATED: 'matrixCreated'\n};\n\nexport default CommonProps;\n","export const COORD_TYPES = {\n    POLAR: 'polar',\n    CARTESIAN: 'cartesian'\n};\n","export var slice = Array.prototype.slice;\n","export default function(x) {\n  return x;\n}\n","import {slice} from \"./array\";\nimport identity from \"./identity\";\n\nvar top = 1,\n    right = 2,\n    bottom = 3,\n    left = 4,\n    epsilon = 1e-6;\n\nfunction translateX(x) {\n  return \"translate(\" + (x + 0.5) + \",0)\";\n}\n\nfunction translateY(y) {\n  return \"translate(0,\" + (y + 0.5) + \")\";\n}\n\nfunction number(scale) {\n  return function(d) {\n    return +scale(d);\n  };\n}\n\nfunction center(scale) {\n  var offset = Math.max(0, scale.bandwidth() - 1) / 2; // Adjust for 0.5px offset.\n  if (scale.round()) offset = Math.round(offset);\n  return function(d) {\n    return +scale(d) + offset;\n  };\n}\n\nfunction entering() {\n  return !this.__axis;\n}\n\nfunction axis(orient, scale) {\n  var tickArguments = [],\n      tickValues = null,\n      tickFormat = null,\n      tickTransform = null,\n      tickSizeInner = 6,\n      tickSizeOuter = 6,\n      tickPadding = 3,\n      k = orient === top || orient === left ? -1 : 1,\n      x = orient === left || orient === right ? \"x\" : \"y\",\n      transform = orient === top || orient === bottom ? translateX : translateY;\n\n  function axis(context) {\n    var values = tickValues == null ? (scale.ticks ? scale.ticks.apply(scale, tickArguments) : scale.domain()) : tickValues,\n        format = tickFormat == null ? (scale.tickFormat ? scale.tickFormat.apply(scale, tickArguments) : identity) : tickFormat,\n        spacing = Math.max(tickSizeInner, 0) + tickPadding,\n        range = scale.range(),\n        range0 = +range[0] + 0.5,\n        range1 = +range[range.length - 1] + 0.5,\n        position = (scale.bandwidth ? center : number)(scale.copy()),\n        selection = context.selection ? context.selection() : context,\n        path = selection.selectAll(\".domain\").data([null]),\n        tick = selection.selectAll(\".tick\").data(values, scale).order(),\n        tickExit = tick.exit(),\n        tickEnter = tick.enter().append(\"g\").attr(\"class\", \"tick\"),\n        line = tick.select(\"line\"),\n        text = tick.select(\"text\");\n\n    path = path.merge(path.enter().insert(\"path\", \".tick\")\n        .attr(\"class\", \"domain\")\n        .attr(\"stroke\", \"#000\"));\n\n    tick = tick.merge(tickEnter);\n\n    line = line.merge(tickEnter.append(\"line\")\n        .attr(\"stroke\", \"#000\")\n        .attr(x + \"2\", k * tickSizeInner));\n\n    text = text.merge(tickEnter.append(\"text\")\n        .attr(\"fill\", \"#000\")\n        .attr(x, k * spacing)\n        .attr(\"dy\", orient === top ? \"0em\" : orient === bottom ? \"0.71em\" : \"0.32em\"))\n        .style('transform', tickTransform);\n\n    if (context !== selection) {\n      path = path.transition(context);\n      tick = tick.transition(context);\n      line = line.transition(context);\n      text = text.transition(context);\n\n      tickExit = tickExit.transition(context)\n          .attr(\"opacity\", epsilon)\n          .attr(\"transform\", function(d) { return isFinite(d = position(d)) ? transform(d) : this.getAttribute(\"transform\"); });\n\n      tickEnter\n          .attr(\"opacity\", epsilon)\n          .attr(\"transform\", function(d) { var p = this.parentNode.__axis; return transform(p && isFinite(p = p(d)) ? p : position(d)); });\n    }\n\n    tickExit.remove();\n\n    path\n        .attr(\"d\", orient === left || orient == right\n            ? \"M\" + k * tickSizeOuter + \",\" + range0 + \"H0.5V\" + range1 + \"H\" + k * tickSizeOuter\n            : \"M\" + range0 + \",\" + k * tickSizeOuter + \"V0.5H\" + range1 + \"V\" + k * tickSizeOuter);\n\n    tick\n        .attr(\"opacity\", 1)\n        .attr(\"transform\", function(d) { return transform(position(d)); });\n\n    line\n        .attr(x + \"2\", k * tickSizeInner);\n\n    text\n        .attr(x, k * spacing)\n        .text(format);\n\n    selection.filter(entering)\n        .attr(\"fill\", \"none\")\n        .attr(\"font-size\", 10)\n        .attr(\"font-family\", \"sans-serif\")\n        .attr(\"text-anchor\", orient === right ? \"start\" : orient === left ? \"end\" : \"middle\");\n\n    selection\n        .each(function() { this.__axis = position; });\n  }\n\n  axis.scale = function(_) {\n    return arguments.length ? (scale = _, axis) : scale;\n  };\n\n  axis.tickTransform = function(_) {\n    return arguments.length ? (tickTransform = _, axis) : tickTransform;\n  };\n\n  axis.ticks = function() {\n    return tickArguments = slice.call(arguments), axis;\n  };\n\n  axis.tickArguments = function(_) {\n    return arguments.length ? (tickArguments = _ == null ? [] : slice.call(_), axis) : tickArguments.slice();\n  };\n\n  axis.tickValues = function(_) {\n    return arguments.length ? (tickValues = _ == null ? null : slice.call(_), axis) : tickValues && tickValues.slice();\n  };\n\n  axis.tickFormat = function(_) {\n    return arguments.length ? (tickFormat = _, axis) : tickFormat;\n  };\n\n  axis.tickSize = function(_) {\n    return arguments.length ? (tickSizeInner = tickSizeOuter = +_, axis) : tickSizeInner;\n  };\n\n  axis.tickSizeInner = function(_) {\n    return arguments.length ? (tickSizeInner = +_, axis) : tickSizeInner;\n  };\n\n  axis.tickSizeOuter = function(_) {\n    return arguments.length ? (tickSizeOuter = +_, axis) : tickSizeOuter;\n  };\n\n  axis.tickPadding = function(_) {\n    return arguments.length ? (tickPadding = +_, axis) : tickPadding;\n  };\n\n  return axis;\n}\n\nexport function axisTop(scale) {\n  return axis(top, scale);\n}\n\nexport function axisRight(scale) {\n  return axis(right, scale);\n}\n\nexport function axisBottom(scale) {\n  return axis(bottom, scale);\n}\n\nexport function axisLeft(scale) {\n  return axis(left, scale);\n}\n","var pi = Math.PI,\n    tau = 2 * pi,\n    epsilon = 1e-6,\n    tauEpsilon = tau - epsilon;\n\nfunction Path() {\n  this._x0 = this._y0 = // start of current subpath\n  this._x1 = this._y1 = null; // end of current subpath\n  this._ = \"\";\n}\n\nfunction path() {\n  return new Path;\n}\n\nPath.prototype = path.prototype = {\n  constructor: Path,\n  moveTo: function(x, y) {\n    this._ += \"M\" + (this._x0 = this._x1 = +x) + \",\" + (this._y0 = this._y1 = +y);\n  },\n  closePath: function() {\n    if (this._x1 !== null) {\n      this._x1 = this._x0, this._y1 = this._y0;\n      this._ += \"Z\";\n    }\n  },\n  lineTo: function(x, y) {\n    this._ += \"L\" + (this._x1 = +x) + \",\" + (this._y1 = +y);\n  },\n  quadraticCurveTo: function(x1, y1, x, y) {\n    this._ += \"Q\" + (+x1) + \",\" + (+y1) + \",\" + (this._x1 = +x) + \",\" + (this._y1 = +y);\n  },\n  bezierCurveTo: function(x1, y1, x2, y2, x, y) {\n    this._ += \"C\" + (+x1) + \",\" + (+y1) + \",\" + (+x2) + \",\" + (+y2) + \",\" + (this._x1 = +x) + \",\" + (this._y1 = +y);\n  },\n  arcTo: function(x1, y1, x2, y2, r) {\n    x1 = +x1, y1 = +y1, x2 = +x2, y2 = +y2, r = +r;\n    var x0 = this._x1,\n        y0 = this._y1,\n        x21 = x2 - x1,\n        y21 = y2 - y1,\n        x01 = x0 - x1,\n        y01 = y0 - y1,\n        l01_2 = x01 * x01 + y01 * y01;\n\n    // Is the radius negative? Error.\n    if (r < 0) throw new Error(\"negative radius: \" + r);\n\n    // Is this path empty? Move to (x1,y1).\n    if (this._x1 === null) {\n      this._ += \"M\" + (this._x1 = x1) + \",\" + (this._y1 = y1);\n    }\n\n    // Or, is (x1,y1) coincident with (x0,y0)? Do nothing.\n    else if (!(l01_2 > epsilon));\n\n    // Or, are (x0,y0), (x1,y1) and (x2,y2) collinear?\n    // Equivalently, is (x1,y1) coincident with (x2,y2)?\n    // Or, is the radius zero? Line to (x1,y1).\n    else if (!(Math.abs(y01 * x21 - y21 * x01) > epsilon) || !r) {\n      this._ += \"L\" + (this._x1 = x1) + \",\" + (this._y1 = y1);\n    }\n\n    // Otherwise, draw an arc!\n    else {\n      var x20 = x2 - x0,\n          y20 = y2 - y0,\n          l21_2 = x21 * x21 + y21 * y21,\n          l20_2 = x20 * x20 + y20 * y20,\n          l21 = Math.sqrt(l21_2),\n          l01 = Math.sqrt(l01_2),\n          l = r * Math.tan((pi - Math.acos((l21_2 + l01_2 - l20_2) / (2 * l21 * l01))) / 2),\n          t01 = l / l01,\n          t21 = l / l21;\n\n      // If the start tangent is not coincident with (x0,y0), line to.\n      if (Math.abs(t01 - 1) > epsilon) {\n        this._ += \"L\" + (x1 + t01 * x01) + \",\" + (y1 + t01 * y01);\n      }\n\n      this._ += \"A\" + r + \",\" + r + \",0,0,\" + (+(y01 * x20 > x01 * y20)) + \",\" + (this._x1 = x1 + t21 * x21) + \",\" + (this._y1 = y1 + t21 * y21);\n    }\n  },\n  arc: function(x, y, r, a0, a1, ccw) {\n    x = +x, y = +y, r = +r;\n    var dx = r * Math.cos(a0),\n        dy = r * Math.sin(a0),\n        x0 = x + dx,\n        y0 = y + dy,\n        cw = 1 ^ ccw,\n        da = ccw ? a0 - a1 : a1 - a0;\n\n    // Is the radius negative? Error.\n    if (r < 0) throw new Error(\"negative radius: \" + r);\n\n    // Is this path empty? Move to (x0,y0).\n    if (this._x1 === null) {\n      this._ += \"M\" + x0 + \",\" + y0;\n    }\n\n    // Or, is (x0,y0) not coincident with the previous point? Line to (x0,y0).\n    else if (Math.abs(this._x1 - x0) > epsilon || Math.abs(this._y1 - y0) > epsilon) {\n      this._ += \"L\" + x0 + \",\" + y0;\n    }\n\n    // Is this arc empty? We’re done.\n    if (!r) return;\n\n    // Does the angle go the wrong way? Flip the direction.\n    if (da < 0) da = da % tau + tau;\n\n    // Is this a complete circle? Draw two arcs to complete the circle.\n    if (da > tauEpsilon) {\n      this._ += \"A\" + r + \",\" + r + \",0,1,\" + cw + \",\" + (x - dx) + \",\" + (y - dy) + \"A\" + r + \",\" + r + \",0,1,\" + cw + \",\" + (this._x1 = x0) + \",\" + (this._y1 = y0);\n    }\n\n    // Is this arc non-empty? Draw an arc!\n    else if (da > epsilon) {\n      this._ += \"A\" + r + \",\" + r + \",0,\" + (+(da >= pi)) + \",\" + cw + \",\" + (this._x1 = x + r * Math.cos(a1)) + \",\" + (this._y1 = y + r * Math.sin(a1));\n    }\n  },\n  rect: function(x, y, w, h) {\n    this._ += \"M\" + (this._x0 = this._x1 = +x) + \",\" + (this._y0 = this._y1 = +y) + \"h\" + (+w) + \"v\" + (+h) + \"h\" + (-w) + \"Z\";\n  },\n  toString: function() {\n    return this._;\n  }\n};\n\nexport default path;\n","export default function(x) {\n  return function constant() {\n    return x;\n  };\n}\n","export var abs = Math.abs;\nexport var atan2 = Math.atan2;\nexport var cos = Math.cos;\nexport var max = Math.max;\nexport var min = Math.min;\nexport var sin = Math.sin;\nexport var sqrt = Math.sqrt;\n\nexport var epsilon = 1e-12;\nexport var pi = Math.PI;\nexport var halfPi = pi / 2;\nexport var tau = 2 * pi;\n\nexport function acos(x) {\n  return x > 1 ? 0 : x < -1 ? pi : Math.acos(x);\n}\n\nexport function asin(x) {\n  return x >= 1 ? halfPi : x <= -1 ? -halfPi : Math.asin(x);\n}\n","import {path} from \"d3-path\";\nimport constant from \"./constant\";\nimport {abs, acos, asin, atan2, cos, epsilon, halfPi, max, min, pi, sin, sqrt, tau} from \"./math\";\n\nfunction arcInnerRadius(d) {\n  return d.innerRadius;\n}\n\nfunction arcOuterRadius(d) {\n  return d.outerRadius;\n}\n\nfunction arcStartAngle(d) {\n  return d.startAngle;\n}\n\nfunction arcEndAngle(d) {\n  return d.endAngle;\n}\n\nfunction arcPadAngle(d) {\n  return d && d.padAngle; // Note: optional!\n}\n\nfunction intersect(x0, y0, x1, y1, x2, y2, x3, y3) {\n  var x10 = x1 - x0, y10 = y1 - y0,\n      x32 = x3 - x2, y32 = y3 - y2,\n      t = (x32 * (y0 - y2) - y32 * (x0 - x2)) / (y32 * x10 - x32 * y10);\n  return [x0 + t * x10, y0 + t * y10];\n}\n\n// Compute perpendicular offset line of length rc.\n// http://mathworld.wolfram.com/Circle-LineIntersection.html\nfunction cornerTangents(x0, y0, x1, y1, r1, rc, cw) {\n  var x01 = x0 - x1,\n      y01 = y0 - y1,\n      lo = (cw ? rc : -rc) / sqrt(x01 * x01 + y01 * y01),\n      ox = lo * y01,\n      oy = -lo * x01,\n      x11 = x0 + ox,\n      y11 = y0 + oy,\n      x10 = x1 + ox,\n      y10 = y1 + oy,\n      x00 = (x11 + x10) / 2,\n      y00 = (y11 + y10) / 2,\n      dx = x10 - x11,\n      dy = y10 - y11,\n      d2 = dx * dx + dy * dy,\n      r = r1 - rc,\n      D = x11 * y10 - x10 * y11,\n      d = (dy < 0 ? -1 : 1) * sqrt(max(0, r * r * d2 - D * D)),\n      cx0 = (D * dy - dx * d) / d2,\n      cy0 = (-D * dx - dy * d) / d2,\n      cx1 = (D * dy + dx * d) / d2,\n      cy1 = (-D * dx + dy * d) / d2,\n      dx0 = cx0 - x00,\n      dy0 = cy0 - y00,\n      dx1 = cx1 - x00,\n      dy1 = cy1 - y00;\n\n  // Pick the closer of the two intersection points.\n  // TODO Is there a faster way to determine which intersection to use?\n  if (dx0 * dx0 + dy0 * dy0 > dx1 * dx1 + dy1 * dy1) cx0 = cx1, cy0 = cy1;\n\n  return {\n    cx: cx0,\n    cy: cy0,\n    x01: -ox,\n    y01: -oy,\n    x11: cx0 * (r1 / r - 1),\n    y11: cy0 * (r1 / r - 1)\n  };\n}\n\nexport default function() {\n  var innerRadius = arcInnerRadius,\n      outerRadius = arcOuterRadius,\n      cornerRadius = constant(0),\n      padRadius = null,\n      startAngle = arcStartAngle,\n      endAngle = arcEndAngle,\n      padAngle = arcPadAngle,\n      context = null;\n\n  function arc() {\n    var buffer,\n        r,\n        r0 = +innerRadius.apply(this, arguments),\n        r1 = +outerRadius.apply(this, arguments),\n        a0 = startAngle.apply(this, arguments) - halfPi,\n        a1 = endAngle.apply(this, arguments) - halfPi,\n        da = abs(a1 - a0),\n        cw = a1 > a0;\n\n    if (!context) context = buffer = path();\n\n    // Ensure that the outer radius is always larger than the inner radius.\n    if (r1 < r0) r = r1, r1 = r0, r0 = r;\n\n    // Is it a point?\n    if (!(r1 > epsilon)) context.moveTo(0, 0);\n\n    // Or is it a circle or annulus?\n    else if (da > tau - epsilon) {\n      context.moveTo(r1 * cos(a0), r1 * sin(a0));\n      context.arc(0, 0, r1, a0, a1, !cw);\n      if (r0 > epsilon) {\n        context.moveTo(r0 * cos(a1), r0 * sin(a1));\n        context.arc(0, 0, r0, a1, a0, cw);\n      }\n    }\n\n    // Or is it a circular or annular sector?\n    else {\n      var a01 = a0,\n          a11 = a1,\n          a00 = a0,\n          a10 = a1,\n          da0 = da,\n          da1 = da,\n          ap = padAngle.apply(this, arguments) / 2,\n          rp = (ap > epsilon) && (padRadius ? +padRadius.apply(this, arguments) : sqrt(r0 * r0 + r1 * r1)),\n          rc = min(abs(r1 - r0) / 2, +cornerRadius.apply(this, arguments)),\n          rc0 = rc,\n          rc1 = rc,\n          t0,\n          t1;\n\n      // Apply padding? Note that since r1 ≥ r0, da1 ≥ da0.\n      if (rp > epsilon) {\n        var p0 = asin(rp / r0 * sin(ap)),\n            p1 = asin(rp / r1 * sin(ap));\n        if ((da0 -= p0 * 2) > epsilon) p0 *= (cw ? 1 : -1), a00 += p0, a10 -= p0;\n        else da0 = 0, a00 = a10 = (a0 + a1) / 2;\n        if ((da1 -= p1 * 2) > epsilon) p1 *= (cw ? 1 : -1), a01 += p1, a11 -= p1;\n        else da1 = 0, a01 = a11 = (a0 + a1) / 2;\n      }\n\n      var x01 = r1 * cos(a01),\n          y01 = r1 * sin(a01),\n          x10 = r0 * cos(a10),\n          y10 = r0 * sin(a10);\n\n      // Apply rounded corners?\n      if (rc > epsilon) {\n        var x11 = r1 * cos(a11),\n            y11 = r1 * sin(a11),\n            x00 = r0 * cos(a00),\n            y00 = r0 * sin(a00);\n\n        // Restrict the corner radius according to the sector angle.\n        if (da < pi) {\n          var oc = da0 > epsilon ? intersect(x01, y01, x00, y00, x11, y11, x10, y10) : [x10, y10],\n              ax = x01 - oc[0],\n              ay = y01 - oc[1],\n              bx = x11 - oc[0],\n              by = y11 - oc[1],\n              kc = 1 / sin(acos((ax * bx + ay * by) / (sqrt(ax * ax + ay * ay) * sqrt(bx * bx + by * by))) / 2),\n              lc = sqrt(oc[0] * oc[0] + oc[1] * oc[1]);\n          rc0 = min(rc, (r0 - lc) / (kc - 1));\n          rc1 = min(rc, (r1 - lc) / (kc + 1));\n        }\n      }\n\n      // Is the sector collapsed to a line?\n      if (!(da1 > epsilon)) context.moveTo(x01, y01);\n\n      // Does the sector’s outer ring have rounded corners?\n      else if (rc1 > epsilon) {\n        t0 = cornerTangents(x00, y00, x01, y01, r1, rc1, cw);\n        t1 = cornerTangents(x11, y11, x10, y10, r1, rc1, cw);\n\n        context.moveTo(t0.cx + t0.x01, t0.cy + t0.y01);\n\n        // Have the corners merged?\n        if (rc1 < rc) context.arc(t0.cx, t0.cy, rc1, atan2(t0.y01, t0.x01), atan2(t1.y01, t1.x01), !cw);\n\n        // Otherwise, draw the two corners and the ring.\n        else {\n          context.arc(t0.cx, t0.cy, rc1, atan2(t0.y01, t0.x01), atan2(t0.y11, t0.x11), !cw);\n          context.arc(0, 0, r1, atan2(t0.cy + t0.y11, t0.cx + t0.x11), atan2(t1.cy + t1.y11, t1.cx + t1.x11), !cw);\n          context.arc(t1.cx, t1.cy, rc1, atan2(t1.y11, t1.x11), atan2(t1.y01, t1.x01), !cw);\n        }\n      }\n\n      // Or is the outer ring just a circular arc?\n      else context.moveTo(x01, y01), context.arc(0, 0, r1, a01, a11, !cw);\n\n      // Is there no inner ring, and it’s a circular sector?\n      // Or perhaps it’s an annular sector collapsed due to padding?\n      if (!(r0 > epsilon) || !(da0 > epsilon)) context.lineTo(x10, y10);\n\n      // Does the sector’s inner ring (or point) have rounded corners?\n      else if (rc0 > epsilon) {\n        t0 = cornerTangents(x10, y10, x11, y11, r0, -rc0, cw);\n        t1 = cornerTangents(x01, y01, x00, y00, r0, -rc0, cw);\n\n        context.lineTo(t0.cx + t0.x01, t0.cy + t0.y01);\n\n        // Have the corners merged?\n        if (rc0 < rc) context.arc(t0.cx, t0.cy, rc0, atan2(t0.y01, t0.x01), atan2(t1.y01, t1.x01), !cw);\n\n        // Otherwise, draw the two corners and the ring.\n        else {\n          context.arc(t0.cx, t0.cy, rc0, atan2(t0.y01, t0.x01), atan2(t0.y11, t0.x11), !cw);\n          context.arc(0, 0, r0, atan2(t0.cy + t0.y11, t0.cx + t0.x11), atan2(t1.cy + t1.y11, t1.cx + t1.x11), cw);\n          context.arc(t1.cx, t1.cy, rc0, atan2(t1.y11, t1.x11), atan2(t1.y01, t1.x01), !cw);\n        }\n      }\n\n      // Or is the inner ring just a circular arc?\n      else context.arc(0, 0, r0, a10, a00, cw);\n    }\n\n    context.closePath();\n\n    if (buffer) return context = null, buffer + \"\" || null;\n  }\n\n  arc.centroid = function() {\n    var r = (+innerRadius.apply(this, arguments) + +outerRadius.apply(this, arguments)) / 2,\n        a = (+startAngle.apply(this, arguments) + +endAngle.apply(this, arguments)) / 2 - pi / 2;\n    return [cos(a) * r, sin(a) * r];\n  };\n\n  arc.innerRadius = function(_) {\n    return arguments.length ? (innerRadius = typeof _ === \"function\" ? _ : constant(+_), arc) : innerRadius;\n  };\n\n  arc.outerRadius = function(_) {\n    return arguments.length ? (outerRadius = typeof _ === \"function\" ? _ : constant(+_), arc) : outerRadius;\n  };\n\n  arc.cornerRadius = function(_) {\n    return arguments.length ? (cornerRadius = typeof _ === \"function\" ? _ : constant(+_), arc) : cornerRadius;\n  };\n\n  arc.padRadius = function(_) {\n    return arguments.length ? (padRadius = _ == null ? null : typeof _ === \"function\" ? _ : constant(+_), arc) : padRadius;\n  };\n\n  arc.startAngle = function(_) {\n    return arguments.length ? (startAngle = typeof _ === \"function\" ? _ : constant(+_), arc) : startAngle;\n  };\n\n  arc.endAngle = function(_) {\n    return arguments.length ? (endAngle = typeof _ === \"function\" ? _ : constant(+_), arc) : endAngle;\n  };\n\n  arc.padAngle = function(_) {\n    return arguments.length ? (padAngle = typeof _ === \"function\" ? _ : constant(+_), arc) : padAngle;\n  };\n\n  arc.context = function(_) {\n    return arguments.length ? ((context = _ == null ? null : _), arc) : context;\n  };\n\n  return arc;\n}\n","function Linear(context) {\n  this._context = context;\n}\n\nLinear.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n      case 1: this._point = 2; // proceed\n      default: this._context.lineTo(x, y); break;\n    }\n  }\n};\n\nexport default function(context) {\n  return new Linear(context);\n}\n","export function x(p) {\n  return p[0];\n}\n\nexport function y(p) {\n  return p[1];\n}\n","import {path} from \"d3-path\";\nimport constant from \"./constant\";\nimport curveLinear from \"./curve/linear\";\nimport {x as pointX, y as pointY} from \"./point\";\n\nexport default function() {\n  var x = pointX,\n      y = pointY,\n      defined = constant(true),\n      context = null,\n      curve = curveLinear,\n      output = null;\n\n  function line(data) {\n    var i,\n        n = data.length,\n        d,\n        defined0 = false,\n        buffer;\n\n    if (context == null) output = curve(buffer = path());\n\n    for (i = 0; i <= n; ++i) {\n      if (!(i < n && defined(d = data[i], i, data)) === defined0) {\n        if (defined0 = !defined0) output.lineStart();\n        else output.lineEnd();\n      }\n      if (defined0) output.point(+x(d, i, data), +y(d, i, data));\n    }\n\n    if (buffer) return output = null, buffer + \"\" || null;\n  }\n\n  line.x = function(_) {\n    return arguments.length ? (x = typeof _ === \"function\" ? _ : constant(+_), line) : x;\n  };\n\n  line.y = function(_) {\n    return arguments.length ? (y = typeof _ === \"function\" ? _ : constant(+_), line) : y;\n  };\n\n  line.defined = function(_) {\n    return arguments.length ? (defined = typeof _ === \"function\" ? _ : constant(!!_), line) : defined;\n  };\n\n  line.curve = function(_) {\n    return arguments.length ? (curve = _, context != null && (output = curve(context)), line) : curve;\n  };\n\n  line.context = function(_) {\n    return arguments.length ? (_ == null ? context = output = null : output = curve(context = _), line) : context;\n  };\n\n  return line;\n}\n","import {path} from \"d3-path\";\nimport constant from \"./constant\";\nimport curveLinear from \"./curve/linear\";\nimport line from \"./line\";\nimport {x as pointX, y as pointY} from \"./point\";\n\nexport default function() {\n  var x0 = pointX,\n      x1 = null,\n      y0 = constant(0),\n      y1 = pointY,\n      defined = constant(true),\n      context = null,\n      curve = curveLinear,\n      output = null;\n\n  function area(data) {\n    var i,\n        j,\n        k,\n        n = data.length,\n        d,\n        defined0 = false,\n        buffer,\n        x0z = new Array(n),\n        y0z = new Array(n);\n\n    if (context == null) output = curve(buffer = path());\n\n    for (i = 0; i <= n; ++i) {\n      if (!(i < n && defined(d = data[i], i, data)) === defined0) {\n        if (defined0 = !defined0) {\n          j = i;\n          output.areaStart();\n          output.lineStart();\n        } else {\n          output.lineEnd();\n          output.lineStart();\n          for (k = i - 1; k >= j; --k) {\n            output.point(x0z[k], y0z[k]);\n          }\n          output.lineEnd();\n          output.areaEnd();\n        }\n      }\n      if (defined0) {\n        x0z[i] = +x0(d, i, data), y0z[i] = +y0(d, i, data);\n        output.point(x1 ? +x1(d, i, data) : x0z[i], y1 ? +y1(d, i, data) : y0z[i]);\n      }\n    }\n\n    if (buffer) return output = null, buffer + \"\" || null;\n  }\n\n  function arealine() {\n    return line().defined(defined).curve(curve).context(context);\n  }\n\n  area.x = function(_) {\n    return arguments.length ? (x0 = typeof _ === \"function\" ? _ : constant(+_), x1 = null, area) : x0;\n  };\n\n  area.x0 = function(_) {\n    return arguments.length ? (x0 = typeof _ === \"function\" ? _ : constant(+_), area) : x0;\n  };\n\n  area.x1 = function(_) {\n    return arguments.length ? (x1 = _ == null ? null : typeof _ === \"function\" ? _ : constant(+_), area) : x1;\n  };\n\n  area.y = function(_) {\n    return arguments.length ? (y0 = typeof _ === \"function\" ? _ : constant(+_), y1 = null, area) : y0;\n  };\n\n  area.y0 = function(_) {\n    return arguments.length ? (y0 = typeof _ === \"function\" ? _ : constant(+_), area) : y0;\n  };\n\n  area.y1 = function(_) {\n    return arguments.length ? (y1 = _ == null ? null : typeof _ === \"function\" ? _ : constant(+_), area) : y1;\n  };\n\n  area.lineX0 =\n  area.lineY0 = function() {\n    return arealine().x(x0).y(y0);\n  };\n\n  area.lineY1 = function() {\n    return arealine().x(x0).y(y1);\n  };\n\n  area.lineX1 = function() {\n    return arealine().x(x1).y(y0);\n  };\n\n  area.defined = function(_) {\n    return arguments.length ? (defined = typeof _ === \"function\" ? _ : constant(!!_), area) : defined;\n  };\n\n  area.curve = function(_) {\n    return arguments.length ? (curve = _, context != null && (output = curve(context)), area) : curve;\n  };\n\n  area.context = function(_) {\n    return arguments.length ? (_ == null ? context = output = null : output = curve(context = _), area) : context;\n  };\n\n  return area;\n}\n","export default function(a, b) {\n  return b < a ? -1 : b > a ? 1 : b >= a ? 0 : NaN;\n}\n","export default function(d) {\n  return d;\n}\n","import curveLinear from \"./linear\";\n\nexport var curveRadialLinear = curveRadial(curveLinear);\n\nfunction Radial(curve) {\n  this._curve = curve;\n}\n\nRadial.prototype = {\n  areaStart: function() {\n    this._curve.areaStart();\n  },\n  areaEnd: function() {\n    this._curve.areaEnd();\n  },\n  lineStart: function() {\n    this._curve.lineStart();\n  },\n  lineEnd: function() {\n    this._curve.lineEnd();\n  },\n  point: function(a, r) {\n    this._curve.point(r * Math.sin(a), r * -Math.cos(a));\n  }\n};\n\nexport default function curveRadial(curve) {\n\n  function radial(context) {\n    return new Radial(curve(context));\n  }\n\n  radial._curve = curve;\n\n  return radial;\n}\n","import curveRadial, {curveRadialLinear} from \"./curve/radial\";\nimport line from \"./line\";\n\nexport function lineRadial(l) {\n  var c = l.curve;\n\n  l.angle = l.x, delete l.x;\n  l.radius = l.y, delete l.y;\n\n  l.curve = function(_) {\n    return arguments.length ? c(curveRadial(_)) : c()._curve;\n  };\n\n  return l;\n}\n\nexport default function() {\n  return lineRadial(line().curve(curveRadialLinear));\n}\n","export var slice = Array.prototype.slice;\n","import {pi, tau} from \"../math\";\n\nexport default {\n  draw: function(context, size) {\n    var r = Math.sqrt(size / pi);\n    context.moveTo(r, 0);\n    context.arc(0, 0, r, 0, tau);\n  }\n};\n","export default {\n  draw: function(context, size) {\n    var r = Math.sqrt(size / 5) / 2;\n    context.moveTo(-3 * r, -r);\n    context.lineTo(-r, -r);\n    context.lineTo(-r, -3 * r);\n    context.lineTo(r, -3 * r);\n    context.lineTo(r, -r);\n    context.lineTo(3 * r, -r);\n    context.lineTo(3 * r, r);\n    context.lineTo(r, r);\n    context.lineTo(r, 3 * r);\n    context.lineTo(-r, 3 * r);\n    context.lineTo(-r, r);\n    context.lineTo(-3 * r, r);\n    context.closePath();\n  }\n};\n","var tan30 = Math.sqrt(1 / 3),\n    tan30_2 = tan30 * 2;\n\nexport default {\n  draw: function(context, size) {\n    var y = Math.sqrt(size / tan30_2),\n        x = y * tan30;\n    context.moveTo(0, -y);\n    context.lineTo(x, 0);\n    context.lineTo(0, y);\n    context.lineTo(-x, 0);\n    context.closePath();\n  }\n};\n","import {pi, tau} from \"../math\";\n\nvar ka = 0.89081309152928522810,\n    kr = Math.sin(pi / 10) / Math.sin(7 * pi / 10),\n    kx = Math.sin(tau / 10) * kr,\n    ky = -Math.cos(tau / 10) * kr;\n\nexport default {\n  draw: function(context, size) {\n    var r = Math.sqrt(size * ka),\n        x = kx * r,\n        y = ky * r;\n    context.moveTo(0, -r);\n    context.lineTo(x, y);\n    for (var i = 1; i < 5; ++i) {\n      var a = tau * i / 5,\n          c = Math.cos(a),\n          s = Math.sin(a);\n      context.lineTo(s * r, -c * r);\n      context.lineTo(c * x - s * y, s * x + c * y);\n    }\n    context.closePath();\n  }\n};\n","export default {\n  draw: function(context, size) {\n    var w = Math.sqrt(size),\n        x = -w / 2;\n    context.rect(x, x, w, w);\n  }\n};\n","var sqrt3 = Math.sqrt(3);\n\nexport default {\n  draw: function(context, size) {\n    var y = -Math.sqrt(size / (sqrt3 * 3));\n    context.moveTo(0, y * 2);\n    context.lineTo(-sqrt3 * y, -y);\n    context.lineTo(sqrt3 * y, -y);\n    context.closePath();\n  }\n};\n","var c = -0.5,\n    s = Math.sqrt(3) / 2,\n    k = 1 / Math.sqrt(12),\n    a = (k / 2 + 1) * 3;\n\nexport default {\n  draw: function(context, size) {\n    var r = Math.sqrt(size / a),\n        x0 = r / 2,\n        y0 = r * k,\n        x1 = x0,\n        y1 = r * k + r,\n        x2 = -x1,\n        y2 = y1;\n    context.moveTo(x0, y0);\n    context.lineTo(x1, y1);\n    context.lineTo(x2, y2);\n    context.lineTo(c * x0 - s * y0, s * x0 + c * y0);\n    context.lineTo(c * x1 - s * y1, s * x1 + c * y1);\n    context.lineTo(c * x2 - s * y2, s * x2 + c * y2);\n    context.lineTo(c * x0 + s * y0, c * y0 - s * x0);\n    context.lineTo(c * x1 + s * y1, c * y1 - s * x1);\n    context.lineTo(c * x2 + s * y2, c * y2 - s * x2);\n    context.closePath();\n  }\n};\n","export default function() {}\n","export function point(that, x, y) {\n  that._context.bezierCurveTo(\n    (2 * that._x0 + that._x1) / 3,\n    (2 * that._y0 + that._y1) / 3,\n    (that._x0 + 2 * that._x1) / 3,\n    (that._y0 + 2 * that._y1) / 3,\n    (that._x0 + 4 * that._x1 + x) / 6,\n    (that._y0 + 4 * that._y1 + y) / 6\n  );\n}\n\nexport function Basis(context) {\n  this._context = context;\n}\n\nBasis.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 =\n    this._y0 = this._y1 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 3: point(this, this._x1, this._y1); // proceed\n      case 2: this._context.lineTo(this._x1, this._y1); break;\n    }\n    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n      case 1: this._point = 2; break;\n      case 2: this._point = 3; this._context.lineTo((5 * this._x0 + this._x1) / 6, (5 * this._y0 + this._y1) / 6); // proceed\n      default: point(this, x, y); break;\n    }\n    this._x0 = this._x1, this._x1 = x;\n    this._y0 = this._y1, this._y1 = y;\n  }\n};\n\nexport default function(context) {\n  return new Basis(context);\n}\n","import noop from \"../noop\";\nimport {point} from \"./basis\";\n\nfunction BasisClosed(context) {\n  this._context = context;\n}\n\nBasisClosed.prototype = {\n  areaStart: noop,\n  areaEnd: noop,\n  lineStart: function() {\n    this._x0 = this._x1 = this._x2 = this._x3 = this._x4 =\n    this._y0 = this._y1 = this._y2 = this._y3 = this._y4 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 1: {\n        this._context.moveTo(this._x2, this._y2);\n        this._context.closePath();\n        break;\n      }\n      case 2: {\n        this._context.moveTo((this._x2 + 2 * this._x3) / 3, (this._y2 + 2 * this._y3) / 3);\n        this._context.lineTo((this._x3 + 2 * this._x2) / 3, (this._y3 + 2 * this._y2) / 3);\n        this._context.closePath();\n        break;\n      }\n      case 3: {\n        this.point(this._x2, this._y2);\n        this.point(this._x3, this._y3);\n        this.point(this._x4, this._y4);\n        break;\n      }\n    }\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; this._x2 = x, this._y2 = y; break;\n      case 1: this._point = 2; this._x3 = x, this._y3 = y; break;\n      case 2: this._point = 3; this._x4 = x, this._y4 = y; this._context.moveTo((this._x0 + 4 * this._x1 + x) / 6, (this._y0 + 4 * this._y1 + y) / 6); break;\n      default: point(this, x, y); break;\n    }\n    this._x0 = this._x1, this._x1 = x;\n    this._y0 = this._y1, this._y1 = y;\n  }\n};\n\nexport default function(context) {\n  return new BasisClosed(context);\n}\n","import {point} from \"./basis\";\n\nfunction BasisOpen(context) {\n  this._context = context;\n}\n\nBasisOpen.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 =\n    this._y0 = this._y1 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (this._line || (this._line !== 0 && this._point === 3)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; break;\n      case 1: this._point = 2; break;\n      case 2: this._point = 3; var x0 = (this._x0 + 4 * this._x1 + x) / 6, y0 = (this._y0 + 4 * this._y1 + y) / 6; this._line ? this._context.lineTo(x0, y0) : this._context.moveTo(x0, y0); break;\n      case 3: this._point = 4; // proceed\n      default: point(this, x, y); break;\n    }\n    this._x0 = this._x1, this._x1 = x;\n    this._y0 = this._y1, this._y1 = y;\n  }\n};\n\nexport default function(context) {\n  return new BasisOpen(context);\n}\n","import {Basis} from \"./basis\";\n\nfunction Bundle(context, beta) {\n  this._basis = new Basis(context);\n  this._beta = beta;\n}\n\nBundle.prototype = {\n  lineStart: function() {\n    this._x = [];\n    this._y = [];\n    this._basis.lineStart();\n  },\n  lineEnd: function() {\n    var x = this._x,\n        y = this._y,\n        j = x.length - 1;\n\n    if (j > 0) {\n      var x0 = x[0],\n          y0 = y[0],\n          dx = x[j] - x0,\n          dy = y[j] - y0,\n          i = -1,\n          t;\n\n      while (++i <= j) {\n        t = i / j;\n        this._basis.point(\n          this._beta * x[i] + (1 - this._beta) * (x0 + t * dx),\n          this._beta * y[i] + (1 - this._beta) * (y0 + t * dy)\n        );\n      }\n    }\n\n    this._x = this._y = null;\n    this._basis.lineEnd();\n  },\n  point: function(x, y) {\n    this._x.push(+x);\n    this._y.push(+y);\n  }\n};\n\nexport default (function custom(beta) {\n\n  function bundle(context) {\n    return beta === 1 ? new Basis(context) : new Bundle(context, beta);\n  }\n\n  bundle.beta = function(beta) {\n    return custom(+beta);\n  };\n\n  return bundle;\n})(0.85);\n","export function point(that, x, y) {\n  that._context.bezierCurveTo(\n    that._x1 + that._k * (that._x2 - that._x0),\n    that._y1 + that._k * (that._y2 - that._y0),\n    that._x2 + that._k * (that._x1 - x),\n    that._y2 + that._k * (that._y1 - y),\n    that._x2,\n    that._y2\n  );\n}\n\nexport function Cardinal(context, tension) {\n  this._context = context;\n  this._k = (1 - tension) / 6;\n}\n\nCardinal.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 = this._x2 =\n    this._y0 = this._y1 = this._y2 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 2: this._context.lineTo(this._x2, this._y2); break;\n      case 3: point(this, this._x1, this._y1); break;\n    }\n    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n      case 1: this._point = 2; this._x1 = x, this._y1 = y; break;\n      case 2: this._point = 3; // proceed\n      default: point(this, x, y); break;\n    }\n    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n  }\n};\n\nexport default (function custom(tension) {\n\n  function cardinal(context) {\n    return new Cardinal(context, tension);\n  }\n\n  cardinal.tension = function(tension) {\n    return custom(+tension);\n  };\n\n  return cardinal;\n})(0);\n","import noop from \"../noop\";\nimport {point} from \"./cardinal\";\n\nexport function CardinalClosed(context, tension) {\n  this._context = context;\n  this._k = (1 - tension) / 6;\n}\n\nCardinalClosed.prototype = {\n  areaStart: noop,\n  areaEnd: noop,\n  lineStart: function() {\n    this._x0 = this._x1 = this._x2 = this._x3 = this._x4 = this._x5 =\n    this._y0 = this._y1 = this._y2 = this._y3 = this._y4 = this._y5 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 1: {\n        this._context.moveTo(this._x3, this._y3);\n        this._context.closePath();\n        break;\n      }\n      case 2: {\n        this._context.lineTo(this._x3, this._y3);\n        this._context.closePath();\n        break;\n      }\n      case 3: {\n        this.point(this._x3, this._y3);\n        this.point(this._x4, this._y4);\n        this.point(this._x5, this._y5);\n        break;\n      }\n    }\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; this._x3 = x, this._y3 = y; break;\n      case 1: this._point = 2; this._context.moveTo(this._x4 = x, this._y4 = y); break;\n      case 2: this._point = 3; this._x5 = x, this._y5 = y; break;\n      default: point(this, x, y); break;\n    }\n    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n  }\n};\n\nexport default (function custom(tension) {\n\n  function cardinal(context) {\n    return new CardinalClosed(context, tension);\n  }\n\n  cardinal.tension = function(tension) {\n    return custom(+tension);\n  };\n\n  return cardinal;\n})(0);\n","import {point} from \"./cardinal\";\n\nexport function CardinalOpen(context, tension) {\n  this._context = context;\n  this._k = (1 - tension) / 6;\n}\n\nCardinalOpen.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 = this._x2 =\n    this._y0 = this._y1 = this._y2 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (this._line || (this._line !== 0 && this._point === 3)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; break;\n      case 1: this._point = 2; break;\n      case 2: this._point = 3; this._line ? this._context.lineTo(this._x2, this._y2) : this._context.moveTo(this._x2, this._y2); break;\n      case 3: this._point = 4; // proceed\n      default: point(this, x, y); break;\n    }\n    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n  }\n};\n\nexport default (function custom(tension) {\n\n  function cardinal(context) {\n    return new CardinalOpen(context, tension);\n  }\n\n  cardinal.tension = function(tension) {\n    return custom(+tension);\n  };\n\n  return cardinal;\n})(0);\n","import {epsilon} from \"../math\";\nimport {Cardinal} from \"./cardinal\";\n\nexport function point(that, x, y) {\n  var x1 = that._x1,\n      y1 = that._y1,\n      x2 = that._x2,\n      y2 = that._y2;\n\n  if (that._l01_a > epsilon) {\n    var a = 2 * that._l01_2a + 3 * that._l01_a * that._l12_a + that._l12_2a,\n        n = 3 * that._l01_a * (that._l01_a + that._l12_a);\n    x1 = (x1 * a - that._x0 * that._l12_2a + that._x2 * that._l01_2a) / n;\n    y1 = (y1 * a - that._y0 * that._l12_2a + that._y2 * that._l01_2a) / n;\n  }\n\n  if (that._l23_a > epsilon) {\n    var b = 2 * that._l23_2a + 3 * that._l23_a * that._l12_a + that._l12_2a,\n        m = 3 * that._l23_a * (that._l23_a + that._l12_a);\n    x2 = (x2 * b + that._x1 * that._l23_2a - x * that._l12_2a) / m;\n    y2 = (y2 * b + that._y1 * that._l23_2a - y * that._l12_2a) / m;\n  }\n\n  that._context.bezierCurveTo(x1, y1, x2, y2, that._x2, that._y2);\n}\n\nfunction CatmullRom(context, alpha) {\n  this._context = context;\n  this._alpha = alpha;\n}\n\nCatmullRom.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 = this._x2 =\n    this._y0 = this._y1 = this._y2 = NaN;\n    this._l01_a = this._l12_a = this._l23_a =\n    this._l01_2a = this._l12_2a = this._l23_2a =\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 2: this._context.lineTo(this._x2, this._y2); break;\n      case 3: this.point(this._x2, this._y2); break;\n    }\n    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n\n    if (this._point) {\n      var x23 = this._x2 - x,\n          y23 = this._y2 - y;\n      this._l23_a = Math.sqrt(this._l23_2a = Math.pow(x23 * x23 + y23 * y23, this._alpha));\n    }\n\n    switch (this._point) {\n      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n      case 1: this._point = 2; break;\n      case 2: this._point = 3; // proceed\n      default: point(this, x, y); break;\n    }\n\n    this._l01_a = this._l12_a, this._l12_a = this._l23_a;\n    this._l01_2a = this._l12_2a, this._l12_2a = this._l23_2a;\n    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n  }\n};\n\nexport default (function custom(alpha) {\n\n  function catmullRom(context) {\n    return alpha ? new CatmullRom(context, alpha) : new Cardinal(context, 0);\n  }\n\n  catmullRom.alpha = function(alpha) {\n    return custom(+alpha);\n  };\n\n  return catmullRom;\n})(0.5);\n","import {CardinalClosed} from \"./cardinalClosed\";\nimport noop from \"../noop\";\nimport {point} from \"./catmullRom\";\n\nfunction CatmullRomClosed(context, alpha) {\n  this._context = context;\n  this._alpha = alpha;\n}\n\nCatmullRomClosed.prototype = {\n  areaStart: noop,\n  areaEnd: noop,\n  lineStart: function() {\n    this._x0 = this._x1 = this._x2 = this._x3 = this._x4 = this._x5 =\n    this._y0 = this._y1 = this._y2 = this._y3 = this._y4 = this._y5 = NaN;\n    this._l01_a = this._l12_a = this._l23_a =\n    this._l01_2a = this._l12_2a = this._l23_2a =\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 1: {\n        this._context.moveTo(this._x3, this._y3);\n        this._context.closePath();\n        break;\n      }\n      case 2: {\n        this._context.lineTo(this._x3, this._y3);\n        this._context.closePath();\n        break;\n      }\n      case 3: {\n        this.point(this._x3, this._y3);\n        this.point(this._x4, this._y4);\n        this.point(this._x5, this._y5);\n        break;\n      }\n    }\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n\n    if (this._point) {\n      var x23 = this._x2 - x,\n          y23 = this._y2 - y;\n      this._l23_a = Math.sqrt(this._l23_2a = Math.pow(x23 * x23 + y23 * y23, this._alpha));\n    }\n\n    switch (this._point) {\n      case 0: this._point = 1; this._x3 = x, this._y3 = y; break;\n      case 1: this._point = 2; this._context.moveTo(this._x4 = x, this._y4 = y); break;\n      case 2: this._point = 3; this._x5 = x, this._y5 = y; break;\n      default: point(this, x, y); break;\n    }\n\n    this._l01_a = this._l12_a, this._l12_a = this._l23_a;\n    this._l01_2a = this._l12_2a, this._l12_2a = this._l23_2a;\n    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n  }\n};\n\nexport default (function custom(alpha) {\n\n  function catmullRom(context) {\n    return alpha ? new CatmullRomClosed(context, alpha) : new CardinalClosed(context, 0);\n  }\n\n  catmullRom.alpha = function(alpha) {\n    return custom(+alpha);\n  };\n\n  return catmullRom;\n})(0.5);\n","import {CardinalOpen} from \"./cardinalOpen\";\nimport {point} from \"./catmullRom\";\n\nfunction CatmullRomOpen(context, alpha) {\n  this._context = context;\n  this._alpha = alpha;\n}\n\nCatmullRomOpen.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 = this._x2 =\n    this._y0 = this._y1 = this._y2 = NaN;\n    this._l01_a = this._l12_a = this._l23_a =\n    this._l01_2a = this._l12_2a = this._l23_2a =\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (this._line || (this._line !== 0 && this._point === 3)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n\n    if (this._point) {\n      var x23 = this._x2 - x,\n          y23 = this._y2 - y;\n      this._l23_a = Math.sqrt(this._l23_2a = Math.pow(x23 * x23 + y23 * y23, this._alpha));\n    }\n\n    switch (this._point) {\n      case 0: this._point = 1; break;\n      case 1: this._point = 2; break;\n      case 2: this._point = 3; this._line ? this._context.lineTo(this._x2, this._y2) : this._context.moveTo(this._x2, this._y2); break;\n      case 3: this._point = 4; // proceed\n      default: point(this, x, y); break;\n    }\n\n    this._l01_a = this._l12_a, this._l12_a = this._l23_a;\n    this._l01_2a = this._l12_2a, this._l12_2a = this._l23_2a;\n    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n  }\n};\n\nexport default (function custom(alpha) {\n\n  function catmullRom(context) {\n    return alpha ? new CatmullRomOpen(context, alpha) : new CardinalOpen(context, 0);\n  }\n\n  catmullRom.alpha = function(alpha) {\n    return custom(+alpha);\n  };\n\n  return catmullRom;\n})(0.5);\n","import noop from \"../noop\";\n\nfunction LinearClosed(context) {\n  this._context = context;\n}\n\nLinearClosed.prototype = {\n  areaStart: noop,\n  areaEnd: noop,\n  lineStart: function() {\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (this._point) this._context.closePath();\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    if (this._point) this._context.lineTo(x, y);\n    else this._point = 1, this._context.moveTo(x, y);\n  }\n};\n\nexport default function(context) {\n  return new LinearClosed(context);\n}\n","function sign(x) {\n  return x < 0 ? -1 : 1;\n}\n\n// Calculate the slopes of the tangents (Hermite-type interpolation) based on\n// the following paper: Steffen, M. 1990. A Simple Method for Monotonic\n// Interpolation in One Dimension. Astronomy and Astrophysics, Vol. 239, NO.\n// NOV(II), P. 443, 1990.\nfunction slope3(that, x2, y2) {\n  var h0 = that._x1 - that._x0,\n      h1 = x2 - that._x1,\n      s0 = (that._y1 - that._y0) / (h0 || h1 < 0 && -0),\n      s1 = (y2 - that._y1) / (h1 || h0 < 0 && -0),\n      p = (s0 * h1 + s1 * h0) / (h0 + h1);\n  return (sign(s0) + sign(s1)) * Math.min(Math.abs(s0), Math.abs(s1), 0.5 * Math.abs(p)) || 0;\n}\n\n// Calculate a one-sided slope.\nfunction slope2(that, t) {\n  var h = that._x1 - that._x0;\n  return h ? (3 * (that._y1 - that._y0) / h - t) / 2 : t;\n}\n\n// According to https://en.wikipedia.org/wiki/Cubic_Hermite_spline#Representations\n// \"you can express cubic Hermite interpolation in terms of cubic Bézier curves\n// with respect to the four values p0, p0 + m0 / 3, p1 - m1 / 3, p1\".\nfunction point(that, t0, t1) {\n  var x0 = that._x0,\n      y0 = that._y0,\n      x1 = that._x1,\n      y1 = that._y1,\n      dx = (x1 - x0) / 3;\n  that._context.bezierCurveTo(x0 + dx, y0 + dx * t0, x1 - dx, y1 - dx * t1, x1, y1);\n}\n\nfunction MonotoneX(context) {\n  this._context = context;\n}\n\nMonotoneX.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 =\n    this._y0 = this._y1 =\n    this._t0 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 2: this._context.lineTo(this._x1, this._y1); break;\n      case 3: point(this, this._t0, slope2(this, this._t0)); break;\n    }\n    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    var t1 = NaN;\n\n    x = +x, y = +y;\n    if (x === this._x1 && y === this._y1) return; // Ignore coincident points.\n    switch (this._point) {\n      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n      case 1: this._point = 2; break;\n      case 2: this._point = 3; point(this, slope2(this, t1 = slope3(this, x, y)), t1); break;\n      default: point(this, this._t0, t1 = slope3(this, x, y)); break;\n    }\n\n    this._x0 = this._x1, this._x1 = x;\n    this._y0 = this._y1, this._y1 = y;\n    this._t0 = t1;\n  }\n}\n\nfunction MonotoneY(context) {\n  this._context = new ReflectContext(context);\n}\n\n(MonotoneY.prototype = Object.create(MonotoneX.prototype)).point = function(x, y) {\n  MonotoneX.prototype.point.call(this, y, x);\n};\n\nfunction ReflectContext(context) {\n  this._context = context;\n}\n\nReflectContext.prototype = {\n  moveTo: function(x, y) { this._context.moveTo(y, x); },\n  closePath: function() { this._context.closePath(); },\n  lineTo: function(x, y) { this._context.lineTo(y, x); },\n  bezierCurveTo: function(x1, y1, x2, y2, x, y) { this._context.bezierCurveTo(y1, x1, y2, x2, y, x); }\n};\n\nexport function monotoneX(context) {\n  return new MonotoneX(context);\n}\n\nexport function monotoneY(context) {\n  return new MonotoneY(context);\n}\n","function Natural(context) {\n  this._context = context;\n}\n\nNatural.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x = [];\n    this._y = [];\n  },\n  lineEnd: function() {\n    var x = this._x,\n        y = this._y,\n        n = x.length;\n\n    if (n) {\n      this._line ? this._context.lineTo(x[0], y[0]) : this._context.moveTo(x[0], y[0]);\n      if (n === 2) {\n        this._context.lineTo(x[1], y[1]);\n      } else {\n        var px = controlPoints(x),\n            py = controlPoints(y);\n        for (var i0 = 0, i1 = 1; i1 < n; ++i0, ++i1) {\n          this._context.bezierCurveTo(px[0][i0], py[0][i0], px[1][i0], py[1][i0], x[i1], y[i1]);\n        }\n      }\n    }\n\n    if (this._line || (this._line !== 0 && n === 1)) this._context.closePath();\n    this._line = 1 - this._line;\n    this._x = this._y = null;\n  },\n  point: function(x, y) {\n    this._x.push(+x);\n    this._y.push(+y);\n  }\n};\n\n// See https://www.particleincell.com/2012/bezier-splines/ for derivation.\nfunction controlPoints(x) {\n  var i,\n      n = x.length - 1,\n      m,\n      a = new Array(n),\n      b = new Array(n),\n      r = new Array(n);\n  a[0] = 0, b[0] = 2, r[0] = x[0] + 2 * x[1];\n  for (i = 1; i < n - 1; ++i) a[i] = 1, b[i] = 4, r[i] = 4 * x[i] + 2 * x[i + 1];\n  a[n - 1] = 2, b[n - 1] = 7, r[n - 1] = 8 * x[n - 1] + x[n];\n  for (i = 1; i < n; ++i) m = a[i] / b[i - 1], b[i] -= m, r[i] -= m * r[i - 1];\n  a[n - 1] = r[n - 1] / b[n - 1];\n  for (i = n - 2; i >= 0; --i) a[i] = (r[i] - a[i + 1]) / b[i];\n  b[n - 1] = (x[n] + a[n - 1]) / 2;\n  for (i = 0; i < n - 1; ++i) b[i] = 2 * x[i + 1] - a[i + 1];\n  return [a, b];\n}\n\nexport default function(context) {\n  return new Natural(context);\n}\n","function Step(context, t) {\n  this._context = context;\n  this._t = t;\n}\n\nStep.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x = this._y = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (0 < this._t && this._t < 1 && this._point === 2) this._context.lineTo(this._x, this._y);\n    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n    if (this._line >= 0) this._t = 1 - this._t, this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n      case 1: this._point = 2; // proceed\n      default: {\n        if (this._t <= 0) {\n          this._context.lineTo(this._x, y);\n          this._context.lineTo(x, y);\n        } else {\n          var x1 = this._x * (1 - this._t) + x * this._t;\n          this._context.lineTo(x1, this._y);\n          this._context.lineTo(x1, y);\n        }\n        break;\n      }\n    }\n    this._x = x, this._y = y;\n  }\n};\n\nexport default function(context) {\n  return new Step(context, 0.5);\n}\n\nexport function stepBefore(context) {\n  return new Step(context, 0);\n}\n\nexport function stepAfter(context) {\n  return new Step(context, 1);\n}\n","export default function(series, order) {\n  if (!((n = series.length) > 1)) return;\n  for (var i = 1, j, s0, s1 = series[order[0]], n, m = s1.length; i < n; ++i) {\n    s0 = s1, s1 = series[order[i]];\n    for (j = 0; j < m; ++j) {\n      s1[j][1] += s1[j][0] = isNaN(s0[j][1]) ? s0[j][0] : s0[j][1];\n    }\n  }\n}\n","export default function(series) {\n  var n = series.length, o = new Array(n);\n  while (--n >= 0) o[n] = n;\n  return o;\n}\n","import {slice} from \"./array\";\nimport constant from \"./constant\";\nimport offsetNone from \"./offset/none\";\nimport orderNone from \"./order/none\";\n\nfunction stackValue(d, key) {\n  return d[key];\n}\n\nexport default function() {\n  var keys = constant([]),\n      order = orderNone,\n      offset = offsetNone,\n      value = stackValue;\n\n  function stack(data) {\n    var kz = keys.apply(this, arguments),\n        i,\n        m = data.length,\n        n = kz.length,\n        sz = new Array(n),\n        oz;\n\n    for (i = 0; i < n; ++i) {\n      for (var ki = kz[i], si = sz[i] = new Array(m), j = 0, sij; j < m; ++j) {\n        si[j] = sij = [0, +value(data[j], ki, j, data)];\n        sij.data = data[j];\n      }\n      si.key = ki;\n    }\n\n    for (i = 0, oz = order(sz); i < n; ++i) {\n      sz[oz[i]].index = i;\n    }\n\n    offset(sz, oz);\n    return sz;\n  }\n\n  stack.keys = function(_) {\n    return arguments.length ? (keys = typeof _ === \"function\" ? _ : constant(slice.call(_)), stack) : keys;\n  };\n\n  stack.value = function(_) {\n    return arguments.length ? (value = typeof _ === \"function\" ? _ : constant(+_), stack) : value;\n  };\n\n  stack.order = function(_) {\n    return arguments.length ? (order = _ == null ? orderNone : typeof _ === \"function\" ? _ : constant(slice.call(_)), stack) : order;\n  };\n\n  stack.offset = function(_) {\n    return arguments.length ? (offset = _ == null ? offsetNone : _, stack) : offset;\n  };\n\n  return stack;\n}\n","import none from \"./none\";\n\nexport default function(series) {\n  var sums = series.map(sum);\n  return none(series).sort(function(a, b) { return sums[a] - sums[b]; });\n}\n\nexport function sum(series) {\n  var s = 0, i = -1, n = series.length, v;\n  while (++i < n) if (v = +series[i][1]) s += v;\n  return s;\n}\n","export function cubicIn(t) {\n  return t * t * t;\n}\n\nexport function cubicOut(t) {\n  return --t * t * t + 1;\n}\n\nexport function cubicInOut(t) {\n  return ((t *= 2) <= 1 ? t * t * t : (t -= 2) * t * t + 2) / 2;\n}\n","var exponent = 3;\n\nexport var polyIn = (function custom(e) {\n  e = +e;\n\n  function polyIn(t) {\n    return Math.pow(t, e);\n  }\n\n  polyIn.exponent = custom;\n\n  return polyIn;\n})(exponent);\n\nexport var polyOut = (function custom(e) {\n  e = +e;\n\n  function polyOut(t) {\n    return 1 - Math.pow(1 - t, e);\n  }\n\n  polyOut.exponent = custom;\n\n  return polyOut;\n})(exponent);\n\nexport var polyInOut = (function custom(e) {\n  e = +e;\n\n  function polyInOut(t) {\n    return ((t *= 2) <= 1 ? Math.pow(t, e) : 2 - Math.pow(2 - t, e)) / 2;\n  }\n\n  polyInOut.exponent = custom;\n\n  return polyInOut;\n})(exponent);\n","var pi = Math.PI,\n    halfPi = pi / 2;\n\nexport function sinIn(t) {\n  return 1 - Math.cos(t * halfPi);\n}\n\nexport function sinOut(t) {\n  return Math.sin(t * halfPi);\n}\n\nexport function sinInOut(t) {\n  return (1 - Math.cos(pi * t)) / 2;\n}\n","var b1 = 4 / 11,\n    b2 = 6 / 11,\n    b3 = 8 / 11,\n    b4 = 3 / 4,\n    b5 = 9 / 11,\n    b6 = 10 / 11,\n    b7 = 15 / 16,\n    b8 = 21 / 22,\n    b9 = 63 / 64,\n    b0 = 1 / b1 / b1;\n\nexport function bounceIn(t) {\n  return 1 - bounceOut(1 - t);\n}\n\nexport function bounceOut(t) {\n  return (t = +t) < b1 ? b0 * t * t : t < b3 ? b0 * (t -= b2) * t + b4 : t < b6 ? b0 * (t -= b5) * t + b7 : b0 * (t -= b8) * t + b9;\n}\n\nexport function bounceInOut(t) {\n  return ((t *= 2) <= 1 ? 1 - bounceOut(1 - t) : bounceOut(t - 1) + 1) / 2;\n}\n","var overshoot = 1.70158;\n\nexport var backIn = (function custom(s) {\n  s = +s;\n\n  function backIn(t) {\n    return t * t * ((s + 1) * t - s);\n  }\n\n  backIn.overshoot = custom;\n\n  return backIn;\n})(overshoot);\n\nexport var backOut = (function custom(s) {\n  s = +s;\n\n  function backOut(t) {\n    return --t * t * ((s + 1) * t + s) + 1;\n  }\n\n  backOut.overshoot = custom;\n\n  return backOut;\n})(overshoot);\n\nexport var backInOut = (function custom(s) {\n  s = +s;\n\n  function backInOut(t) {\n    return ((t *= 2) < 1 ? t * t * ((s + 1) * t - s) : (t -= 2) * t * ((s + 1) * t + s) + 2) / 2;\n  }\n\n  backInOut.overshoot = custom;\n\n  return backInOut;\n})(overshoot);\n","var tau = 2 * Math.PI,\n    amplitude = 1,\n    period = 0.3;\n\nexport var elasticIn = (function custom(a, p) {\n  var s = Math.asin(1 / (a = Math.max(1, a))) * (p /= tau);\n\n  function elasticIn(t) {\n    return a * Math.pow(2, 10 * --t) * Math.sin((s - t) / p);\n  }\n\n  elasticIn.amplitude = function(a) { return custom(a, p * tau); };\n  elasticIn.period = function(p) { return custom(a, p); };\n\n  return elasticIn;\n})(amplitude, period);\n\nexport var elasticOut = (function custom(a, p) {\n  var s = Math.asin(1 / (a = Math.max(1, a))) * (p /= tau);\n\n  function elasticOut(t) {\n    return 1 - a * Math.pow(2, -10 * (t = +t)) * Math.sin((t + s) / p);\n  }\n\n  elasticOut.amplitude = function(a) { return custom(a, p * tau); };\n  elasticOut.period = function(p) { return custom(a, p); };\n\n  return elasticOut;\n})(amplitude, period);\n\nexport var elasticInOut = (function custom(a, p) {\n  var s = Math.asin(1 / (a = Math.max(1, a))) * (p /= tau);\n\n  function elasticInOut(t) {\n    return ((t = t * 2 - 1) < 0\n        ? a * Math.pow(2, 10 * t) * Math.sin((s - t) / p)\n        : 2 - a * Math.pow(2, -10 * t) * Math.sin((s + t) / p)) / 2;\n  }\n\n  elasticInOut.amplitude = function(a) { return custom(a, p * tau); };\n  elasticInOut.period = function(p) { return custom(a, p); };\n\n  return elasticInOut;\n})(amplitude, period);\n","export default function(x) {\n  return function() {\n    return x;\n  };\n}\n","export function x(d) {\n  return d[0];\n}\n\nexport function y(d) {\n  return d[1];\n}\n","function RedBlackTree() {\n  this._ = null; // root node\n}\n\nexport function RedBlackNode(node) {\n  node.U = // parent node\n  node.C = // color - true for red, false for black\n  node.L = // left node\n  node.R = // right node\n  node.P = // previous node\n  node.N = null; // next node\n}\n\nRedBlackTree.prototype = {\n  constructor: RedBlackTree,\n\n  insert: function(after, node) {\n    var parent, grandpa, uncle;\n\n    if (after) {\n      node.P = after;\n      node.N = after.N;\n      if (after.N) after.N.P = node;\n      after.N = node;\n      if (after.R) {\n        after = after.R;\n        while (after.L) after = after.L;\n        after.L = node;\n      } else {\n        after.R = node;\n      }\n      parent = after;\n    } else if (this._) {\n      after = RedBlackFirst(this._);\n      node.P = null;\n      node.N = after;\n      after.P = after.L = node;\n      parent = after;\n    } else {\n      node.P = node.N = null;\n      this._ = node;\n      parent = null;\n    }\n    node.L = node.R = null;\n    node.U = parent;\n    node.C = true;\n\n    after = node;\n    while (parent && parent.C) {\n      grandpa = parent.U;\n      if (parent === grandpa.L) {\n        uncle = grandpa.R;\n        if (uncle && uncle.C) {\n          parent.C = uncle.C = false;\n          grandpa.C = true;\n          after = grandpa;\n        } else {\n          if (after === parent.R) {\n            RedBlackRotateLeft(this, parent);\n            after = parent;\n            parent = after.U;\n          }\n          parent.C = false;\n          grandpa.C = true;\n          RedBlackRotateRight(this, grandpa);\n        }\n      } else {\n        uncle = grandpa.L;\n        if (uncle && uncle.C) {\n          parent.C = uncle.C = false;\n          grandpa.C = true;\n          after = grandpa;\n        } else {\n          if (after === parent.L) {\n            RedBlackRotateRight(this, parent);\n            after = parent;\n            parent = after.U;\n          }\n          parent.C = false;\n          grandpa.C = true;\n          RedBlackRotateLeft(this, grandpa);\n        }\n      }\n      parent = after.U;\n    }\n    this._.C = false;\n  },\n\n  remove: function(node) {\n    if (node.N) node.N.P = node.P;\n    if (node.P) node.P.N = node.N;\n    node.N = node.P = null;\n\n    var parent = node.U,\n        sibling,\n        left = node.L,\n        right = node.R,\n        next,\n        red;\n\n    if (!left) next = right;\n    else if (!right) next = left;\n    else next = RedBlackFirst(right);\n\n    if (parent) {\n      if (parent.L === node) parent.L = next;\n      else parent.R = next;\n    } else {\n      this._ = next;\n    }\n\n    if (left && right) {\n      red = next.C;\n      next.C = node.C;\n      next.L = left;\n      left.U = next;\n      if (next !== right) {\n        parent = next.U;\n        next.U = node.U;\n        node = next.R;\n        parent.L = node;\n        next.R = right;\n        right.U = next;\n      } else {\n        next.U = parent;\n        parent = next;\n        node = next.R;\n      }\n    } else {\n      red = node.C;\n      node = next;\n    }\n\n    if (node) node.U = parent;\n    if (red) return;\n    if (node && node.C) { node.C = false; return; }\n\n    do {\n      if (node === this._) break;\n      if (node === parent.L) {\n        sibling = parent.R;\n        if (sibling.C) {\n          sibling.C = false;\n          parent.C = true;\n          RedBlackRotateLeft(this, parent);\n          sibling = parent.R;\n        }\n        if ((sibling.L && sibling.L.C)\n            || (sibling.R && sibling.R.C)) {\n          if (!sibling.R || !sibling.R.C) {\n            sibling.L.C = false;\n            sibling.C = true;\n            RedBlackRotateRight(this, sibling);\n            sibling = parent.R;\n          }\n          sibling.C = parent.C;\n          parent.C = sibling.R.C = false;\n          RedBlackRotateLeft(this, parent);\n          node = this._;\n          break;\n        }\n      } else {\n        sibling = parent.L;\n        if (sibling.C) {\n          sibling.C = false;\n          parent.C = true;\n          RedBlackRotateRight(this, parent);\n          sibling = parent.L;\n        }\n        if ((sibling.L && sibling.L.C)\n          || (sibling.R && sibling.R.C)) {\n          if (!sibling.L || !sibling.L.C) {\n            sibling.R.C = false;\n            sibling.C = true;\n            RedBlackRotateLeft(this, sibling);\n            sibling = parent.L;\n          }\n          sibling.C = parent.C;\n          parent.C = sibling.L.C = false;\n          RedBlackRotateRight(this, parent);\n          node = this._;\n          break;\n        }\n      }\n      sibling.C = true;\n      node = parent;\n      parent = parent.U;\n    } while (!node.C);\n\n    if (node) node.C = false;\n  }\n};\n\nfunction RedBlackRotateLeft(tree, node) {\n  var p = node,\n      q = node.R,\n      parent = p.U;\n\n  if (parent) {\n    if (parent.L === p) parent.L = q;\n    else parent.R = q;\n  } else {\n    tree._ = q;\n  }\n\n  q.U = parent;\n  p.U = q;\n  p.R = q.L;\n  if (p.R) p.R.U = p;\n  q.L = p;\n}\n\nfunction RedBlackRotateRight(tree, node) {\n  var p = node,\n      q = node.L,\n      parent = p.U;\n\n  if (parent) {\n    if (parent.L === p) parent.L = q;\n    else parent.R = q;\n  } else {\n    tree._ = q;\n  }\n\n  q.U = parent;\n  p.U = q;\n  p.L = q.R;\n  if (p.L) p.L.U = p;\n  q.R = p;\n}\n\nfunction RedBlackFirst(node) {\n  while (node.L) node = node.L;\n  return node;\n}\n\nexport default RedBlackTree;\n","import {cells, edges, epsilon} from \"./Diagram\";\n\nexport function createEdge(left, right, v0, v1) {\n  var edge = [null, null],\n      index = edges.push(edge) - 1;\n  edge.left = left;\n  edge.right = right;\n  if (v0) setEdgeEnd(edge, left, right, v0);\n  if (v1) setEdgeEnd(edge, right, left, v1);\n  cells[left.index].halfedges.push(index);\n  cells[right.index].halfedges.push(index);\n  return edge;\n}\n\nexport function createBorderEdge(left, v0, v1) {\n  var edge = [v0, v1];\n  edge.left = left;\n  return edge;\n}\n\nexport function setEdgeEnd(edge, left, right, vertex) {\n  if (!edge[0] && !edge[1]) {\n    edge[0] = vertex;\n    edge.left = left;\n    edge.right = right;\n  } else if (edge.left === right) {\n    edge[1] = vertex;\n  } else {\n    edge[0] = vertex;\n  }\n}\n\n// Liang–Barsky line clipping.\nfunction clipEdge(edge, x0, y0, x1, y1) {\n  var a = edge[0],\n      b = edge[1],\n      ax = a[0],\n      ay = a[1],\n      bx = b[0],\n      by = b[1],\n      t0 = 0,\n      t1 = 1,\n      dx = bx - ax,\n      dy = by - ay,\n      r;\n\n  r = x0 - ax;\n  if (!dx && r > 0) return;\n  r /= dx;\n  if (dx < 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  } else if (dx > 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  }\n\n  r = x1 - ax;\n  if (!dx && r < 0) return;\n  r /= dx;\n  if (dx < 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  } else if (dx > 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  }\n\n  r = y0 - ay;\n  if (!dy && r > 0) return;\n  r /= dy;\n  if (dy < 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  } else if (dy > 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  }\n\n  r = y1 - ay;\n  if (!dy && r < 0) return;\n  r /= dy;\n  if (dy < 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  } else if (dy > 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  }\n\n  if (!(t0 > 0) && !(t1 < 1)) return true; // TODO Better check?\n\n  if (t0 > 0) edge[0] = [ax + t0 * dx, ay + t0 * dy];\n  if (t1 < 1) edge[1] = [ax + t1 * dx, ay + t1 * dy];\n  return true;\n}\n\nfunction connectEdge(edge, x0, y0, x1, y1) {\n  var v1 = edge[1];\n  if (v1) return true;\n\n  var v0 = edge[0],\n      left = edge.left,\n      right = edge.right,\n      lx = left[0],\n      ly = left[1],\n      rx = right[0],\n      ry = right[1],\n      fx = (lx + rx) / 2,\n      fy = (ly + ry) / 2,\n      fm,\n      fb;\n\n  if (ry === ly) {\n    if (fx < x0 || fx >= x1) return;\n    if (lx > rx) {\n      if (!v0) v0 = [fx, y0];\n      else if (v0[1] >= y1) return;\n      v1 = [fx, y1];\n    } else {\n      if (!v0) v0 = [fx, y1];\n      else if (v0[1] < y0) return;\n      v1 = [fx, y0];\n    }\n  } else {\n    fm = (lx - rx) / (ry - ly);\n    fb = fy - fm * fx;\n    if (fm < -1 || fm > 1) {\n      if (lx > rx) {\n        if (!v0) v0 = [(y0 - fb) / fm, y0];\n        else if (v0[1] >= y1) return;\n        v1 = [(y1 - fb) / fm, y1];\n      } else {\n        if (!v0) v0 = [(y1 - fb) / fm, y1];\n        else if (v0[1] < y0) return;\n        v1 = [(y0 - fb) / fm, y0];\n      }\n    } else {\n      if (ly < ry) {\n        if (!v0) v0 = [x0, fm * x0 + fb];\n        else if (v0[0] >= x1) return;\n        v1 = [x1, fm * x1 + fb];\n      } else {\n        if (!v0) v0 = [x1, fm * x1 + fb];\n        else if (v0[0] < x0) return;\n        v1 = [x0, fm * x0 + fb];\n      }\n    }\n  }\n\n  edge[0] = v0;\n  edge[1] = v1;\n  return true;\n}\n\nexport function clipEdges(x0, y0, x1, y1) {\n  var i = edges.length,\n      edge;\n\n  while (i--) {\n    if (!connectEdge(edge = edges[i], x0, y0, x1, y1)\n        || !clipEdge(edge, x0, y0, x1, y1)\n        || !(Math.abs(edge[0][0] - edge[1][0]) > epsilon\n            || Math.abs(edge[0][1] - edge[1][1]) > epsilon)) {\n      delete edges[i];\n    }\n  }\n}\n","import {createBorderEdge} from \"./Edge\";\nimport {cells, edges, epsilon} from \"./Diagram\";\n\nexport function createCell(site) {\n  return cells[site.index] = {\n    site: site,\n    halfedges: []\n  };\n}\n\nfunction cellHalfedgeAngle(cell, edge) {\n  var site = cell.site,\n      va = edge.left,\n      vb = edge.right;\n  if (site === vb) vb = va, va = site;\n  if (vb) return Math.atan2(vb[1] - va[1], vb[0] - va[0]);\n  if (site === va) va = edge[1], vb = edge[0];\n  else va = edge[0], vb = edge[1];\n  return Math.atan2(va[0] - vb[0], vb[1] - va[1]);\n}\n\nexport function cellHalfedgeStart(cell, edge) {\n  return edge[+(edge.left !== cell.site)];\n}\n\nexport function cellHalfedgeEnd(cell, edge) {\n  return edge[+(edge.left === cell.site)];\n}\n\nexport function sortCellHalfedges() {\n  for (var i = 0, n = cells.length, cell, halfedges, j, m; i < n; ++i) {\n    if ((cell = cells[i]) && (m = (halfedges = cell.halfedges).length)) {\n      var index = new Array(m),\n          array = new Array(m);\n      for (j = 0; j < m; ++j) index[j] = j, array[j] = cellHalfedgeAngle(cell, edges[halfedges[j]]);\n      index.sort(function(i, j) { return array[j] - array[i]; });\n      for (j = 0; j < m; ++j) array[j] = halfedges[index[j]];\n      for (j = 0; j < m; ++j) halfedges[j] = array[j];\n    }\n  }\n}\n\nexport function clipCells(x0, y0, x1, y1) {\n  var nCells = cells.length,\n      iCell,\n      cell,\n      site,\n      iHalfedge,\n      halfedges,\n      nHalfedges,\n      start,\n      startX,\n      startY,\n      end,\n      endX,\n      endY,\n      cover = true;\n\n  for (iCell = 0; iCell < nCells; ++iCell) {\n    if (cell = cells[iCell]) {\n      site = cell.site;\n      halfedges = cell.halfedges;\n      iHalfedge = halfedges.length;\n\n      // Remove any dangling clipped edges.\n      while (iHalfedge--) {\n        if (!edges[halfedges[iHalfedge]]) {\n          halfedges.splice(iHalfedge, 1);\n        }\n      }\n\n      // Insert any border edges as necessary.\n      iHalfedge = 0, nHalfedges = halfedges.length;\n      while (iHalfedge < nHalfedges) {\n        end = cellHalfedgeEnd(cell, edges[halfedges[iHalfedge]]), endX = end[0], endY = end[1];\n        start = cellHalfedgeStart(cell, edges[halfedges[++iHalfedge % nHalfedges]]), startX = start[0], startY = start[1];\n        if (Math.abs(endX - startX) > epsilon || Math.abs(endY - startY) > epsilon) {\n          halfedges.splice(iHalfedge, 0, edges.push(createBorderEdge(site, end,\n              Math.abs(endX - x0) < epsilon && y1 - endY > epsilon ? [x0, Math.abs(startX - x0) < epsilon ? startY : y1]\n              : Math.abs(endY - y1) < epsilon && x1 - endX > epsilon ? [Math.abs(startY - y1) < epsilon ? startX : x1, y1]\n              : Math.abs(endX - x1) < epsilon && endY - y0 > epsilon ? [x1, Math.abs(startX - x1) < epsilon ? startY : y0]\n              : Math.abs(endY - y0) < epsilon && endX - x0 > epsilon ? [Math.abs(startY - y0) < epsilon ? startX : x0, y0]\n              : null)) - 1);\n          ++nHalfedges;\n        }\n      }\n\n      if (nHalfedges) cover = false;\n    }\n  }\n\n  // If there weren’t any edges, have the closest site cover the extent.\n  // It doesn’t matter which corner of the extent we measure!\n  if (cover) {\n    var dx, dy, d2, dc = Infinity;\n\n    for (iCell = 0, cover = null; iCell < nCells; ++iCell) {\n      if (cell = cells[iCell]) {\n        site = cell.site;\n        dx = site[0] - x0;\n        dy = site[1] - y0;\n        d2 = dx * dx + dy * dy;\n        if (d2 < dc) dc = d2, cover = cell;\n      }\n    }\n\n    if (cover) {\n      var v00 = [x0, y0], v01 = [x0, y1], v11 = [x1, y1], v10 = [x1, y0];\n      cover.halfedges.push(\n        edges.push(createBorderEdge(site = cover.site, v00, v01)) - 1,\n        edges.push(createBorderEdge(site, v01, v11)) - 1,\n        edges.push(createBorderEdge(site, v11, v10)) - 1,\n        edges.push(createBorderEdge(site, v10, v00)) - 1\n      );\n    }\n  }\n\n  // Lastly delete any cells with no edges; these were entirely clipped.\n  for (iCell = 0; iCell < nCells; ++iCell) {\n    if (cell = cells[iCell]) {\n      if (!cell.halfedges.length) {\n        delete cells[iCell];\n      }\n    }\n  }\n}\n","import {RedBlackNode} from \"./RedBlackTree\";\nimport {circles, epsilon2} from \"./Diagram\";\n\nvar circlePool = [];\n\nexport var firstCircle;\n\nfunction Circle() {\n  RedBlackNode(this);\n  this.x =\n  this.y =\n  this.arc =\n  this.site =\n  this.cy = null;\n}\n\nexport function attachCircle(arc) {\n  var lArc = arc.P,\n      rArc = arc.N;\n\n  if (!lArc || !rArc) return;\n\n  var lSite = lArc.site,\n      cSite = arc.site,\n      rSite = rArc.site;\n\n  if (lSite === rSite) return;\n\n  var bx = cSite[0],\n      by = cSite[1],\n      ax = lSite[0] - bx,\n      ay = lSite[1] - by,\n      cx = rSite[0] - bx,\n      cy = rSite[1] - by;\n\n  var d = 2 * (ax * cy - ay * cx);\n  if (d >= -epsilon2) return;\n\n  var ha = ax * ax + ay * ay,\n      hc = cx * cx + cy * cy,\n      x = (cy * ha - ay * hc) / d,\n      y = (ax * hc - cx * ha) / d;\n\n  var circle = circlePool.pop() || new Circle;\n  circle.arc = arc;\n  circle.site = cSite;\n  circle.x = x + bx;\n  circle.y = (circle.cy = y + by) + Math.sqrt(x * x + y * y); // y bottom\n\n  arc.circle = circle;\n\n  var before = null,\n      node = circles._;\n\n  while (node) {\n    if (circle.y < node.y || (circle.y === node.y && circle.x <= node.x)) {\n      if (node.L) node = node.L;\n      else { before = node.P; break; }\n    } else {\n      if (node.R) node = node.R;\n      else { before = node; break; }\n    }\n  }\n\n  circles.insert(before, circle);\n  if (!before) firstCircle = circle;\n}\n\nexport function detachCircle(arc) {\n  var circle = arc.circle;\n  if (circle) {\n    if (!circle.P) firstCircle = circle.N;\n    circles.remove(circle);\n    circlePool.push(circle);\n    RedBlackNode(circle);\n    arc.circle = null;\n  }\n}\n","import {RedBlackNode} from \"./RedBlackTree\";\nimport {createCell} from \"./Cell\";\nimport {attachCircle, detachCircle} from \"./Circle\";\nimport {createEdge, setEdgeEnd} from \"./Edge\";\nimport {beaches, epsilon} from \"./Diagram\";\n\nvar beachPool = [];\n\nfunction Beach() {\n  RedBlackNode(this);\n  this.edge =\n  this.site =\n  this.circle = null;\n}\n\nfunction createBeach(site) {\n  var beach = beachPool.pop() || new Beach;\n  beach.site = site;\n  return beach;\n}\n\nfunction detachBeach(beach) {\n  detachCircle(beach);\n  beaches.remove(beach);\n  beachPool.push(beach);\n  RedBlackNode(beach);\n}\n\nexport function removeBeach(beach) {\n  var circle = beach.circle,\n      x = circle.x,\n      y = circle.cy,\n      vertex = [x, y],\n      previous = beach.P,\n      next = beach.N,\n      disappearing = [beach];\n\n  detachBeach(beach);\n\n  var lArc = previous;\n  while (lArc.circle\n      && Math.abs(x - lArc.circle.x) < epsilon\n      && Math.abs(y - lArc.circle.cy) < epsilon) {\n    previous = lArc.P;\n    disappearing.unshift(lArc);\n    detachBeach(lArc);\n    lArc = previous;\n  }\n\n  disappearing.unshift(lArc);\n  detachCircle(lArc);\n\n  var rArc = next;\n  while (rArc.circle\n      && Math.abs(x - rArc.circle.x) < epsilon\n      && Math.abs(y - rArc.circle.cy) < epsilon) {\n    next = rArc.N;\n    disappearing.push(rArc);\n    detachBeach(rArc);\n    rArc = next;\n  }\n\n  disappearing.push(rArc);\n  detachCircle(rArc);\n\n  var nArcs = disappearing.length,\n      iArc;\n  for (iArc = 1; iArc < nArcs; ++iArc) {\n    rArc = disappearing[iArc];\n    lArc = disappearing[iArc - 1];\n    setEdgeEnd(rArc.edge, lArc.site, rArc.site, vertex);\n  }\n\n  lArc = disappearing[0];\n  rArc = disappearing[nArcs - 1];\n  rArc.edge = createEdge(lArc.site, rArc.site, null, vertex);\n\n  attachCircle(lArc);\n  attachCircle(rArc);\n}\n\nexport function addBeach(site) {\n  var x = site[0],\n      directrix = site[1],\n      lArc,\n      rArc,\n      dxl,\n      dxr,\n      node = beaches._;\n\n  while (node) {\n    dxl = leftBreakPoint(node, directrix) - x;\n    if (dxl > epsilon) node = node.L; else {\n      dxr = x - rightBreakPoint(node, directrix);\n      if (dxr > epsilon) {\n        if (!node.R) {\n          lArc = node;\n          break;\n        }\n        node = node.R;\n      } else {\n        if (dxl > -epsilon) {\n          lArc = node.P;\n          rArc = node;\n        } else if (dxr > -epsilon) {\n          lArc = node;\n          rArc = node.N;\n        } else {\n          lArc = rArc = node;\n        }\n        break;\n      }\n    }\n  }\n\n  createCell(site);\n  var newArc = createBeach(site);\n  beaches.insert(lArc, newArc);\n\n  if (!lArc && !rArc) return;\n\n  if (lArc === rArc) {\n    detachCircle(lArc);\n    rArc = createBeach(lArc.site);\n    beaches.insert(newArc, rArc);\n    newArc.edge = rArc.edge = createEdge(lArc.site, newArc.site);\n    attachCircle(lArc);\n    attachCircle(rArc);\n    return;\n  }\n\n  if (!rArc) { // && lArc\n    newArc.edge = createEdge(lArc.site, newArc.site);\n    return;\n  }\n\n  // else lArc !== rArc\n  detachCircle(lArc);\n  detachCircle(rArc);\n\n  var lSite = lArc.site,\n      ax = lSite[0],\n      ay = lSite[1],\n      bx = site[0] - ax,\n      by = site[1] - ay,\n      rSite = rArc.site,\n      cx = rSite[0] - ax,\n      cy = rSite[1] - ay,\n      d = 2 * (bx * cy - by * cx),\n      hb = bx * bx + by * by,\n      hc = cx * cx + cy * cy,\n      vertex = [(cy * hb - by * hc) / d + ax, (bx * hc - cx * hb) / d + ay];\n\n  setEdgeEnd(rArc.edge, lSite, rSite, vertex);\n  newArc.edge = createEdge(lSite, site, null, vertex);\n  rArc.edge = createEdge(site, rSite, null, vertex);\n  attachCircle(lArc);\n  attachCircle(rArc);\n}\n\nfunction leftBreakPoint(arc, directrix) {\n  var site = arc.site,\n      rfocx = site[0],\n      rfocy = site[1],\n      pby2 = rfocy - directrix;\n\n  if (!pby2) return rfocx;\n\n  var lArc = arc.P;\n  if (!lArc) return -Infinity;\n\n  site = lArc.site;\n  var lfocx = site[0],\n      lfocy = site[1],\n      plby2 = lfocy - directrix;\n\n  if (!plby2) return lfocx;\n\n  var hl = lfocx - rfocx,\n      aby2 = 1 / pby2 - 1 / plby2,\n      b = hl / plby2;\n\n  if (aby2) return (-b + Math.sqrt(b * b - 2 * aby2 * (hl * hl / (-2 * plby2) - lfocy + plby2 / 2 + rfocy - pby2 / 2))) / aby2 + rfocx;\n\n  return (rfocx + lfocx) / 2;\n}\n\nfunction rightBreakPoint(arc, directrix) {\n  var rArc = arc.N;\n  if (rArc) return leftBreakPoint(rArc, directrix);\n  var site = arc.site;\n  return site[1] === directrix ? site[0] : Infinity;\n}\n","import {addBeach, removeBeach} from \"./Beach\";\nimport {sortCellHalfedges, cellHalfedgeStart, clipCells} from \"./Cell\";\nimport {firstCircle} from \"./Circle\";\nimport {clipEdges} from \"./Edge\";\nimport RedBlackTree from \"./RedBlackTree\";\n\nexport var epsilon = 1e-6;\nexport var epsilon2 = 1e-12;\nexport var beaches;\nexport var cells;\nexport var circles;\nexport var edges;\n\nfunction triangleArea(a, b, c) {\n  return (a[0] - c[0]) * (b[1] - a[1]) - (a[0] - b[0]) * (c[1] - a[1]);\n}\n\nfunction lexicographic(a, b) {\n  return b[1] - a[1]\n      || b[0] - a[0];\n}\n\nexport default function Diagram(sites, extent) {\n  var site = sites.sort(lexicographic).pop(),\n      x,\n      y,\n      circle;\n\n  edges = [];\n  cells = new Array(sites.length);\n  beaches = new RedBlackTree;\n  circles = new RedBlackTree;\n\n  while (true) {\n    circle = firstCircle;\n    if (site && (!circle || site[1] < circle.y || (site[1] === circle.y && site[0] < circle.x))) {\n      if (site[0] !== x || site[1] !== y) {\n        addBeach(site);\n        x = site[0], y = site[1];\n      }\n      site = sites.pop();\n    } else if (circle) {\n      removeBeach(circle.arc);\n    } else {\n      break;\n    }\n  }\n\n  sortCellHalfedges();\n\n  if (extent) {\n    var x0 = +extent[0][0],\n        y0 = +extent[0][1],\n        x1 = +extent[1][0],\n        y1 = +extent[1][1];\n    clipEdges(x0, y0, x1, y1);\n    clipCells(x0, y0, x1, y1);\n  }\n\n  this.edges = edges;\n  this.cells = cells;\n\n  beaches =\n  circles =\n  edges =\n  cells = null;\n}\n\nDiagram.prototype = {\n  constructor: Diagram,\n\n  polygons: function() {\n    var edges = this.edges;\n\n    return this.cells.map(function(cell) {\n      var polygon = cell.halfedges.map(function(i) { return cellHalfedgeStart(cell, edges[i]); });\n      polygon.data = cell.site.data;\n      return polygon;\n    });\n  },\n\n  triangles: function() {\n    var triangles = [],\n        edges = this.edges;\n\n    this.cells.forEach(function(cell, i) {\n      if (!(m = (halfedges = cell.halfedges).length)) return;\n      var site = cell.site,\n          halfedges,\n          j = -1,\n          m,\n          s0,\n          e1 = edges[halfedges[m - 1]],\n          s1 = e1.left === site ? e1.right : e1.left;\n\n      while (++j < m) {\n        s0 = s1;\n        e1 = edges[halfedges[j]];\n        s1 = e1.left === site ? e1.right : e1.left;\n        if (s0 && s1 && i < s0.index && i < s1.index && triangleArea(site, s0, s1) < 0) {\n          triangles.push([site.data, s0.data, s1.data]);\n        }\n      }\n    });\n\n    return triangles;\n  },\n\n  links: function() {\n    return this.edges.filter(function(edge) {\n      return edge.right;\n    }).map(function(edge) {\n      return {\n        source: edge.left.data,\n        target: edge.right.data\n      };\n    });\n  },\n\n  find: function(x, y, radius) {\n    var that = this, i0, i1 = that._found || 0, n = that.cells.length, cell;\n\n    // Use the previously-found cell, or start with an arbitrary one.\n    while (!(cell = that.cells[i1])) if (++i1 >= n) return null;\n    var dx = x - cell.site[0], dy = y - cell.site[1], d2 = dx * dx + dy * dy;\n\n    // Traverse the half-edges to find a closer cell, if any.\n    do {\n      cell = that.cells[i0 = i1], i1 = null;\n      cell.halfedges.forEach(function(e) {\n        var edge = that.edges[e], v = edge.left;\n        if ((v === cell.site || !v) && !(v = edge.right)) return;\n        var vx = x - v[0], vy = y - v[1], v2 = vx * vx + vy * vy;\n        if (v2 < d2) d2 = v2, i1 = v.index;\n      });\n    } while (i1 !== null);\n\n    that._found = i0;\n\n    return radius == null || d2 <= radius * radius ? cell.site : null;\n  }\n}\n","import constant from \"./constant\";\nimport {x as pointX, y as pointY} from \"./point\";\nimport Diagram, {epsilon} from \"./Diagram\";\n\nexport default function() {\n  var x = pointX,\n      y = pointY,\n      extent = null;\n\n  function voronoi(data) {\n    return new Diagram(data.map(function(d, i) {\n      var s = [Math.round(x(d, i, data) / epsilon) * epsilon, Math.round(y(d, i, data) / epsilon) * epsilon];\n      s.index = i;\n      s.data = d;\n      return s;\n    }), extent);\n  }\n\n  voronoi.polygons = function(data) {\n    return voronoi(data).polygons();\n  };\n\n  voronoi.links = function(data) {\n    return voronoi(data).links();\n  };\n\n  voronoi.triangles = function(data) {\n    return voronoi(data).triangles();\n  };\n\n  voronoi.x = function(_) {\n    return arguments.length ? (x = typeof _ === \"function\" ? _ : constant(+_), voronoi) : x;\n  };\n\n  voronoi.y = function(_) {\n    return arguments.length ? (y = typeof _ === \"function\" ? _ : constant(+_), voronoi) : y;\n  };\n\n  voronoi.extent = function(_) {\n    return arguments.length ? (extent = _ == null ? null : [[+_[0][0], +_[0][1]], [+_[1][0], +_[1][1]]], voronoi) : extent && [[extent[0][0], extent[0][1]], [extent[1][0], extent[1][1]]];\n  };\n\n  voronoi.size = function(_) {\n    return arguments.length ? (extent = _ == null ? null : [[0, 0], [+_[0], +_[1]]], voronoi) : extent && [extent[1][0] - extent[0][0], extent[1][1] - extent[0][1]];\n  };\n\n  return voronoi;\n}\n","/**\n * This class represents a selection applied on a data array.\n *\n * @class Selection\n */\nclass Selection {\n    /**\n     * Creates an instance of Selection.\n     * @param {Array<DataObject>} data Array of DataObjects.\n     * @memberof Selection\n     */\n    constructor (idGetter) {\n        this._dataObjects = new Map();\n        this._updatedata = new Map();\n        this._mode = '';\n        this._enterdata = new Map();\n        this._exitdata = new Map();\n        this._idGetter = idGetter;\n    }\n\n    /**\n     * This method is used to supply seed data to a selection.\n     *\n     * @param {Array} newData Seed data to create the enter selection.\n     * @param {Functon | undefined } idGetter This function is used to uniqely identify a data entry.\n     * @return {Selection} Modified selection.\n     * @memberof Selection\n     */\n    data (newData) {\n        const entryData = new Map();\n        const exitdata = new Map();\n        const tempMap = new Map();\n        const duplicateData = new Map();\n        const updatedData = this._updatedata;\n\n        newData.forEach((...params) => {\n            const key = this.idGetter ? this._idGetter(...params) : params[1];\n            if (!tempMap.has(key)) {\n                tempMap.set(key, params[0]);\n            } else {\n                duplicateData.push(key, params[0]);\n            }\n        });\n\n        let val;\n        // prepare enter data\n        let entries = tempMap.entries();\n        while (val = entries.next().value) {\n            if (!updatedData.has(val[0])) {\n                entryData.set(val[0], val[1]);\n            } else {\n                updatedData.set(val[0], val[1]);\n            }\n        }\n        // prepare exit data\n        entries = updatedData.entries();\n        while (val = entries.next().value) {\n            if (!tempMap.has(val[0])) {\n                exitdata.set(val[0], val[1]);\n            }\n        }\n\n        // put duplicate data to exit list\n        entries = duplicateData.entries();\n        while (val = entries.next().value) {\n            exitdata.set(val[0], val[1]);\n        }\n\n        const newSelection = new Selection(this._idGetter);\n        newSelection._updatedata = updatedData;\n        newSelection._dataObjects = this._dataObjects;\n        newSelection._enterdata = entryData;\n        newSelection._exitdata = exitdata;\n\n        return newSelection;\n    }\n\n    /**\n     * Applies the supplied callback to each data element\n     * and returns a new selection.\n     *\n     * @param {Function} callback Callback to execute on each item.\n     * @return {Selection} New selection with data created using callback.\n     * @memberof Selection\n     */\n    append (callback) {\n        let currentData;\n        let val;\n        const dataObjects = new Map();\n        const data = new Map();\n\n        // select the data to create object\n        switch (this._mode) {\n        case 'enter':\n            currentData = this._enterdata;\n            break;\n        case 'exit':\n            currentData = this._exitdata;\n            break;\n        default:\n            currentData = this._updatedata;\n        }\n\n        const entries = currentData.entries();\n\n        while (val = entries.next().value) {\n            dataObjects.set(val[0], callback(val[1]));\n            data.set(val[0], val[1]);\n        }\n\n        const newSelection = new Selection(this._idGetter);\n        newSelection._updatedata = data;\n        newSelection._dataObjects = dataObjects;\n        this._mode = '';\n\n        return newSelection;\n    }\n\n     /**\n     * This method returns an enter selection that\n     * allows or update operations.\n     *\n     * @return {Selection} Instance of enter selection.\n     * @memberof Selection\n     */\n    enter () {\n        this._mode = 'enter';\n        return this;\n    }\n\n    /**\n     * Returns a selection with exit data.\n     *\n     * @return {Selection} Instance of selection.\n     * @memberof Selection\n     */\n    exit () {\n        this._mode = 'exit';\n        return this;\n    }\n\n     /**\n     * This method merges the data of one selection with another.\n     *\n     * @param {Selection} selection Instance of selection.\n     * @return {Selection} Modified selection.\n     * @memberof Selection\n     */\n    merge (target) {\n        const mergedObjects = new Map();\n        const mergedData = new Map();\n        let val;\n        let entries;\n\n        // merge Object and data present in this selection\n        entries = this._updatedata.entries();\n        while (val = entries.next().value) {\n            if (!this._exitdata.has(val[0])) {\n                mergedData.set(val[0], val[1]);\n                mergedObjects.set(val[0], this._dataObjects.get(val[0]));\n            }\n        }\n\n        // merge object from target selection\n        entries = target._updatedata.entries();\n        while (val = entries.next().value) {\n            if (!(mergedData.has(val[0]) || target._exitdata.has(val[0]))) {\n                mergedData.set(val[0], val[1]);\n                mergedObjects.set(val[0], target._dataObjects.get(val[0]));\n            }\n        }\n\n        const newSelection = new Selection(this._idGetter);\n        newSelection._updatedata = mergedData;\n        newSelection._dataObjects = mergedObjects;\n\n        return newSelection;\n    }\n\n    each (fn) {\n        let val;\n        const entries = this._dataObjects.entries();\n\n        while (val = entries.next().value) {\n            fn(val[1], this._updatedata.get(val[0]), val[0]);\n        }\n    }\n\n    map (fn) {\n        const newdata = new Map();\n        let val;\n        const entries = this._dataObjects.entries();\n\n        while (val = entries.next().value) {\n            newdata.set(val[0], fn(val[1], this._updatedata.get(val[0]), val[0]));\n        }\n        const newSelection = new Selection(this._idGetter);\n        newSelection._updatedata = this._updatedata;\n        newSelection._dataObjects = newdata;\n\n        return newSelection;\n    }\n\n    remove () {\n        let currentData;\n\n        switch (this._mode) {\n        case 'enter':\n            currentData = this._enterdata;\n            break;\n        case 'exit':\n            currentData = this._exitdata;\n            break;\n        default:\n            currentData = this._updatedata;\n        }\n\n        currentData.clear();\n\n        return this;\n    }\n\n    /**\n     *  Gets the object bound to a class\n     *\n     * @return {Object} current data set bound to the class\n     * @memberof Selection\n     */\n    getObjects () {\n        const objects = [];\n        let val;\n        const values = this._dataObjects.values();\n\n        while (val = values.next().value) {\n            objects.push(val);\n        }\n        return objects;\n    }\n\n}\n\nexport default Selection;\n","export const ORDER_ASCENDING = 'ascending';\nexport const ORDER_DESCENDING = 'descending';\nexport const ORDER_NONE = 'none';\nexport const OFFSET_DIVERGING = 'diverging';\nexport const OFFSET_NONE = 'none';\nexport const OFFSET_EXPAND = 'expand';\nexport const OFFSET_WIGGLE = 'wiggle';\n","/* global window, requestAnimationFrame, cancelAnimationFrame */\nimport { FieldType, DimensionSubtype, DateTimeFormatter, DM_DERIVATIVES, default as DataModel } from 'datamodel';\nimport {\n    axisLeft,\n    axisRight,\n    axisTop,\n    axisBottom\n} from 'd3-axis';\nimport {\n    symbolCircle,\n    symbolCross,\n    symbolDiamond,\n    symbolSquare,\n    symbolStar,\n    symbolWye,\n    symbolTriangle,\n    symbol,\n    stack as d3Stack,\n    stackOffsetDiverging,\n    stackOrderNone,\n    stackOrderAscending,\n    stackOrderDescending,\n    stackOffsetNone,\n    stackOffsetExpand,\n    stackOffsetWiggle,\n    pie,\n    arc,\n    line,\n    curveLinear,\n    curveStepAfter,\n    curveStepBefore,\n    curveStep,\n    curveCatmullRom,\n    area\n} from 'd3-shape';\nimport { scaleBand } from 'd3-scale';\nimport { nest } from 'd3-collection';\nimport {\n    interpolate,\n    interpolateRgb,\n    piecewise,\n    interpolateNumber,\n    interpolateHslLong\n} from 'd3-interpolate';\nimport {\n    easeCubic,\n    easeBounce,\n    easePoly,\n    easeBack,\n    easeCircle,\n    easeLinear,\n    easeElastic\n} from 'd3-ease';\nimport {\n   color,\n   rgb,\n   hsl\n} from 'd3-color';\nimport { voronoi } from 'd3-voronoi';\nimport Model from 'hyperdis';\nimport { dataSelect } from './DataSystem';\nimport * as STACK_CONFIG from './enums/stack-config';\n\nconst { InvalidAwareTypes } = DataModel;\nconst HTMLElement = window.HTMLElement;\n\nconst isSimpleObject = (obj) => {\n    let token;\n    if (typeof obj === 'object') {\n        if (obj === null) { return false; }\n        token = Object.prototype.toString.call(obj);\n        if (token === '[object Object]') {\n            return (obj.constructor.toString().match(/^function (.*)\\(\\)/m) || [])[1] === 'Object';\n        }\n    }\n    return false;\n};\n\n/**\n * Returns unique id\n * @return {string} Unique id string\n */\nconst\n    getUniqueId = () => `id-${new Date().getTime()}${Math.round(Math.random() * 10000)}`;\n\n/**\n * Deep copies an object and returns a new object.\n * @param {Object} o Object to clone\n * @return {Object} New Object.\n */\nconst clone = (o) => {\n    const output = {};\n    let v;\n    for (const key in o) {\n        if ({}.hasOwnProperty.call(o, key)) {\n            v = o[key];\n            output[key] = isSimpleObject(v) ? clone(v) : v;\n        }\n    }\n    return output;\n};\n\n/**\n* Checks the existence of keys in an object\n* @param {Array} keys Set of keys which are to be checked\n* @param {Object} obj whose keys are checked from the set of keys provided\n* @return {Object} Error if the keys are absent, or the object itself\n*/\nconst checkExistence = (keys, obj) => {\n    const nonExistentKeys = [];\n    keys.forEach((key) => {\n        if (key in obj) {\n            return;\n        }\n        nonExistentKeys.push(key);\n    });\n    return nonExistentKeys;\n};\n\nconst sanitizeIP = {\n    typeObj: (keys, obj) => {\n        if (typeof obj !== 'object') {\n            return Error('Argument type object expected');\n        }\n\n        const nonExistentKeys = checkExistence(keys, obj);\n        if (nonExistentKeys.length) {\n            return Error(`Missing keys from parameter ${nonExistentKeys.join(', ')}`);\n        }\n        return obj;\n    },\n\n    /* istanbul ignore next */ htmlElem: (elem) => {\n        if (!(elem instanceof HTMLElement)) {\n            return Error('HTMLElement required');\n        }\n        return elem;\n    }\n};\n\n/**\n * Gets the maximum value from an array of objects for a given property name\n * @param  {Array.<Object>} data   Array of objects\n * @param  {string} field Field name\n * @return {number} Maximum value\n */\nconst getMax = (data, field) => Math.max(...data.map(d => d[field]));\n\n/**\n * Gets the minimum value from an array of objects for a given property name\n * @param  {Array.<Object>} data   Array of objects\n * @param  {string} field Field name\n * @return {number} Minimum value\n */\nconst getMin = (data, field) => Math.min(...data.map(d => d[field]));\n\n/**\n * Gets the domain from the data based on the field name and type of field\n * @param  {Array.<Object> | Array.<Array>} data       Data Array\n * @param  {Array.<string>} fields    Array of fields from where the domain will be calculated\n * @param {string} fieldType Type of field - nominal, quantitiative, temporal.\n * @return {Array} Usually contains a min and max value if field is quantitative or\n * an array of values if field type is nominal or ordinal\n */\nconst getDomainFromData = (data, fields, fieldType) => {\n    let domain;\n    const domArr = [];\n    data = data[0] instanceof Array ? data : [data];\n    switch (fieldType) {\n    case DimensionSubtype.CATEGORICAL:\n        domain = [].concat(...data.map(arr => arr.map(d => d[fields[0]]).filter(d => d !== undefined)));\n        break;\n    default:\n        for (let i = 0, len = data.length; i < len; i++) {\n            const arr = data[i];\n            const [field0, field1] = fields;\n            const arr0 = arr.filter(d => !isNaN(d[field0]));\n            const arr1 = arr.filter(d => !isNaN(d[field1]));\n            if (arr0.length || arr1.length) {\n                const firstMin = getMin(arr0, field0);\n                const secondMin = getMin(arr1, field1);\n                const firstMax = getMax(arr0, field0);\n                const secondMax = getMax(arr1, field1);\n                domArr.push([Math.min(firstMin, secondMin), Math.max(firstMax, secondMax)]);\n            }\n        }\n        domain = domArr.length ? [Math.min(...domArr.map(d => d[0])), Math.max(...domArr.map(d => d[1]))] : [];\n        break;\n    }\n    return domain;\n};\n\nconst sanitizeDomainWhenEqual = (domain) => {\n    if (domain[0] === domain[1]) {\n        domain[0] = domain[0] > 0 ? 0 : domain[0];\n        domain[1] = domain[1] > 0 ? domain[1] : 0;\n    }\n    return domain;\n};\n\n/**\n * Union Domain values\n * @param {Array.<Array>} domains Array of domain values\n * @param {string} fieldType type of field - dimension,measure or datetime.\n * @return {Array} Unioned domain of all domain values.\n */\nconst unionDomain = (domains, fieldType) => {\n    let domain = [];\n    domains = domains.filter(dom => dom && dom.length);\n    if (domains.length) {\n        if (fieldType === DimensionSubtype.CATEGORICAL) {\n            domain = [].concat(...domains);\n        } else {\n            domain = [Math.min(...domains.map(d => d[0])), Math.max(...domains.map(d => d[1]))];\n        }\n    }\n\n    return domain;\n};\n\nconst symbolFns = {\n    circle: symbolCircle,\n    cross: symbolCross,\n    diamond: symbolDiamond,\n    square: symbolSquare,\n    star: symbolStar,\n    wye: symbolWye,\n    triangle: symbolTriangle\n};\n\nconst easeFns = {\n    cubic: easeCubic,\n    bounce: easeBounce,\n    linear: easeLinear,\n    elastic: easeElastic,\n    back: easeBack,\n    poly: easePoly,\n    circle: easeCircle\n};\n\n/**\n * Returns the maximum or minimum points of a compare value from an array of objects.\n * @param {Array} points Array of objects\n * @param {string} compareValue Key in the object on which the comparing will be done.\n * @param {string} minOrMax minimum or maximum.\n * @return {Object} Minimum or maximum point.\n */\nconst getExtremePoint = (points, compareValue, minOrMax) => {\n    let extremePoint;\n    let point;\n    const len = points.length;\n    let minOrMaxVal = minOrMax === 'max' ? -Infinity : Infinity;\n    let val;\n\n    for (let i = 0; i < len; i++) {\n        point = points[i];\n        val = point[compareValue];\n        if (minOrMax === 'min' ? val < minOrMaxVal : val > minOrMaxVal) {\n            minOrMaxVal = val;\n            extremePoint = point;\n        }\n    }\n\n    return extremePoint;\n};\n\n/**\n * Returns the minimum point of a compare value from an array of objects.\n * @param {Array} points Array of objects\n * @param {string} compareValue Key in the object on which the comparing will be done.\n * @return {Object} Minimum point.\n */\nconst getMinPoint = (points, compareValue) => getExtremePoint(points, compareValue, 'min');\n\n/**\n * Returns the maximum point of a compare value from an array of objects.\n * @param {Array} points Array of objects\n * @param {string} compareValue Key in the object on which the comparing will be done.\n * @return {Object} Maximum point.\n */\nconst getMaxPoint = (points, compareValue) => getExtremePoint(points, compareValue, 'max');\n\n/**\n * Gets the index of the closest value of the given value from the array.\n * @param {Array} arr Array of values\n * @param {number} value Value from which the nearest value will be calculated.\n * @param {string} side side property.\n * @return {number} index of the closest value\n */\n/* istanbul ignore next */const getClosestIndexOf = (arr, value, side) => {\n    let low = 0;\n    const arrLen = arr.length;\n    let high = arrLen - 1;\n\n    let mid;\n    let d1;\n    let d2;\n\n    while (low < high) {\n        mid = Math.floor((low + high) / 2);\n        d1 = Math.abs(arr[mid] - value);\n        d2 = Math.abs(arr[mid + 1] - value);\n\n        if (d2 <= d1) {\n            low = mid + 1;\n        } else {\n            high = mid;\n        }\n    }\n\n    if (!side) {\n        return high;\n    }\n\n    const highVal = arr[high];\n    if (highVal === value) {\n        return high;\n    } else if (highVal > value) {\n        if (high === 0) { return high; }\n        return side === 'left' ? high - 1 : high;\n    }\n    if (high === arr.length - 1) { return high; }\n    return side === 'left' ? high : high + 1;\n};\n\nconst getNearestValue = (data, key) => {\n    const filterData = data.filter(d => typeof d === 'number');\n    return filterData[getClosestIndexOf(filterData, key)];\n};\n\n/**\n * Returns the browser window object\n * @return {Window} Window object\n*/\nconst getWindow = () => window;\n\n/**\n * Returns the browser window object\n * @return {Window} Window object\n*/\nconst reqAnimFrame = (() => requestAnimationFrame)();\n\nconst cancelAnimFrame = (() => cancelAnimationFrame)();\n\n/**\n * Capitalizes the first letter of the word\n * @param {string} text word\n * @return {string} Capitalized word\n */\nconst capitalizeFirst = (text) => {\n    text = text.toLowerCase();\n\n    return text.replace(/\\w\\S*/g, txt => txt.charAt(0).toUpperCase() + txt.substr(1));\n};\n\n/**\n *\n *\n * @param {*} arr\n */\nconst unique = arr => ([...new Set(arr)]);\n\n/**\n * Gets the minimum difference between two consecutive numbers  in an array.\n * @param {Array} arr Array of numbers\n * @param {number} index index of the value\n * @return {number} minimum difference between values\n */\n/* istanbul ignore next */ const getMinDiff = (arr, index) => {\n    let diff;\n    let uniqueVals;\n    if (index !== undefined) {\n        uniqueVals = unique(arr.map(d => d[index]));\n    } else {\n        uniqueVals = unique(arr);\n    }\n    if (uniqueVals.length > 1) {\n        diff = Math.abs(uniqueVals[1] - uniqueVals[0]);\n        for (let i = 2, len = uniqueVals.length; i < len; i++) {\n            diff = Math.min(diff, Math.abs(uniqueVals[i] - uniqueVals[i - 1]));\n        }\n    } else {\n        diff = uniqueVals[0];\n    }\n\n    return diff;\n};\n\n/**\n * Returns the class name appended with a given id.\n * @param {string} cls class name\n * @param {string} id unique identifier\n * @param {string} prefix string needed to add before the classname\n * @return {string} qualified class name\n */\n/* istanbul ignore next */const getQualifiedClassName = (cls, id, prefix) => {\n    cls = cls.replace(/^\\.*/, '');\n    return [`${prefix}-${cls}`, `${prefix}-${cls}-${id}`];\n};\n\n/**\n * This method is used to set the default value for variables\n * without sullying the code with conditional statements.\n *\n * @export\n * @param {any} param The parameter to test.\n * @param {any} value The default value to assign.\n * @return {any} The value.\n */\n/* istanbul ignore next */ const defaultValue = (param, value) => {\n    if (typeof param === 'undefined' || (typeof param === 'object' && !param)) {\n        return value;\n    }\n    return param;\n};\n\n/**\n * DESCRIPTION TODO\n *\n * @export\n * @param {Object} graph graph whose dependency order has to be generated\n * @return {Object}\n */\nconst getDependencyOrder = (graph) => {\n    const dependencyOrder = [];\n    const visited = {};\n    const keys = Object.keys(graph);\n    /**\n     * DESCRIPTION TODO\n     *\n     * @export\n     * @param {Object} name\n     * @return {Object}\n     */\n    const visit = (name) => {\n        if (dependencyOrder.length === keys.length) {\n            return true;\n        }\n        visited[name] = true;\n        const edges = graph[name];\n        for (let e = 0; e < edges.length; e++) {\n            const dep = edges[e];\n            if (!visited[dep]) {\n                visit(dep);\n            }\n        }\n\n        dependencyOrder.push(name);\n        return false;\n    };\n\n    for (let i = 0; i < keys.length; i++) {\n        if (visit(keys[i], i)) break;\n    }\n\n    return dependencyOrder;\n};\n\n/**\n * Iterates over the properties of an object and applies the function\n *\n * @param {any} obj object to be iterated upon\n * @param {any} fn  function to be applied on it\n */\nconst objectIterator = (obj, fn) => {\n    for (const key in obj) {\n        if (Object.hasOwnProperty.call(obj, key)) {\n            fn(key, obj);\n        }\n    }\n};\n\n/**\n * This class creates a d3 voronoi for retrieving the nearest neighbour of any point from a set of two\n * dimensional points\n * @class Voronoi\n */\n/* istanbul ignore next */ class Voronoi {\n    /**\n     * Initialize the voronoi with the data given.\n     * @param {Array.<Object>} data Array of points.\n     */\n    constructor (data = []) {\n        this._voronoi = voronoi().x(d => d.x).y(d => d.y);\n        this.data(data);\n    }\n\n    /**\n     * Sets the data to voronoi\n     * @param {Array.<Object>} data Array of objects.\n     * @return {Voronoi} Instance of voronoi.\n     */\n    data (data) {\n        if (data) {\n            this._voronoiFn = this._voronoi(data);\n        }\n        return this;\n    }\n\n    /**\n     * Finds the closest point to the x and y position given.\n     * @param {number} x x value\n     * @param {number} y y value\n     * @param {number} radius search radius.\n     * @return {Object} Details of the nearest point.\n     */\n    find (x, y, radius) {\n        return this._voronoiFn.find(x, y, radius);\n    }\n}\n\nconst addListenerToNamespace = (namespaceInf, fn, context) => {\n    let key = namespaceInf.key;\n    const namespace = namespaceInf.namespace;\n    if (namespace) {\n        !context._listeners[namespace] && (context._listeners[namespace] = []);\n        if (!key) {\n            key = Object.keys(context._listeners[namespace]).length;\n        }\n        context._listeners[namespace][key] = fn;\n    } else {\n        key = Object.keys(context._listeners).length;\n        context._listeners[key] = fn;\n    }\n};\n\n/**\n *\n *\n * @param {*} obj\n * @param {*} fields\n *\n */\nconst getObjProp = (obj, ...fields) => {\n    if (obj === undefined || obj === null) {\n        return obj;\n    }\n    let retObj = obj;\n    for (let i = 0, len = fields.length; i < len; i++) {\n        retObj = retObj[fields[i]];\n        if (retObj === undefined || retObj === null) {\n            break;\n        }\n    }\n    return retObj;\n};\n\n/**\n * Methods to handle changes to table configuration and reactivity are handled by this\n * class.\n */\n/**\n *  Common store class\n *\n * @class Store\n */\nclass Store {\n    /**\n     * Creates an instance of Store.\n     * @param {Object} config The object to create the state store with.\n     * @memberof Store\n     */\n    constructor (config) {\n        // create reactive model\n        this.model = Model.create(config);\n        this._listeners = {};\n    }\n\n    /**\n     * This method returns a plain JSON object\n     * with all the fields in the state store.\n     *\n     * @return {Object} Serialized representation of state store.\n     * @memberof Store\n     */\n    serialize () {\n        return this.model.serialize();\n    }\n\n    /**\n     * This method is used to update the value of a property in the state store.\n     *\n     * @param {string} propName The name of the property.\n     * @param {number} value The new value of the property.\n     * @memberof Store\n     */\n    commit (propName, value) {\n        // check if appropriate enum has been used\n        this.model.prop(propName, value);\n    }\n\n    /**\n     * This method is used to register a callbacl that will execute\n     * when one or more properties change.\n     *\n     * @param {string | Array} propNames name of property or array of props.\n     * @param {Function} callBack The callback to execute.\n     * @memberof Store\n     */\n    /* istanbul ignore next */registerChangeListener (propNames, callBack, instantCall, namespaceInf = {}) {\n        let props = propNames;\n        if (!Array.isArray(propNames)) {\n            props = [propNames];\n        }\n        const fn = this.model.next(props, callBack, instantCall);\n        addListenerToNamespace(namespaceInf, fn, this);\n        return this;\n    }\n    /**\n     * This method is used to register a callbacl that will execute\n     * when one or more properties change.\n     *\n     * @param {string | Array} propNames name of property or array of props.\n     * @param {Function} callBack The callback to execute.\n     * @memberof Store\n     */\n    /* istanbul ignore next */ registerImmediateListener (propNames, callBack, instantCall, namespaceInf = {}) {\n        let props = propNames;\n        if (!Array.isArray(propNames)) {\n            props = [propNames];\n        }\n        const fn = this.model.on(props, callBack, instantCall);\n        addListenerToNamespace(namespaceInf, fn, this);\n        return this;\n    }\n    /**\n     * This method is used to get the name of the property\n     * from the state store.\n     *\n     * @param {string} propName The name of the field in state store.\n     * @return {any} The value of the field.\n     * @memberof Store\n     */\n    get (propName) {\n        return this.model.prop(propName);\n    }\n\n    /**\n     * This method is used to register a computed property that is computed every time\n     * the store value changes.\n     *\n     * @param {string} propName The name of the property to create.\n     * @param {Function} callBack The function to execute when depemdent props change.\n     * @memberof Store\n     */\n    computed (propName, callBack) {\n        return this.model.calculatedProp(propName, callBack);\n    }\n\n    append (propName, value) {\n        this.model.append(propName, value);\n        return this;\n    }\n\n    unsubscribeAll () {\n        Object.values(this._listeners).forEach(fn => fn());\n        return this;\n    }\n\n    unsubscribe (namespaceInf = {}) {\n        const { namespace, key } = namespaceInf;\n        const listeners = this._listeners[namespace];\n        if (key) {\n            const fn = getObjProp(listeners, key);\n            fn && fn();\n        } else {\n            Object.values(listeners).forEach(fn => fn());\n            this._listeners[namespace] = [];\n        }\n        return this;\n    }\n}\n\n/**\n * Sanitize an input number / string mixed number. Currently dot in the no is not supported.\n *\n * @param {number | string} val pure number or string mixed number\n * @return {number | null}  Number if it can be extracted. Otherwise null\n */\nconst intSanitizer = (val) => {\n    const arr = val.toString().match(/(\\d+)(px)*/g);\n    if (!arr) {\n        // If only characters are passed\n        return null;\n    }\n\n    return parseInt(arr[0], 10);\n};\n\n/**\n * Setter getter creator from config\n * Format\n *  PROPERTRY_NAME: {\n *      value: // default value of the property,\n *      meta: {\n *          typeCheck: // The setter value will be checked using this. If the value is function then the setter value\n *                     // is passed as args. (Optional)\n *          typeExpected: // The output of typecheck action will be tested against this. Truthy value will set the\n *                       // value to the setter\n *          sanitizaiton: // Need for sanitization before type is checked\n *      }\n *  }\n *\n * @param {Object} holder an empty object on which the getters and setters will be mounted\n * @param {Object} options options config based on which the getters and setters are determined.\n * @param {Hyperdis} model optional model to attach the property. If not sent new moel is created.\n * @return {Array}\n */\nconst transactor = (holder, options, model, namespaceInf = {}) => {\n    let conf;\n    const store = model && model instanceof Model ? model : Model.create({});\n    const stateProps = {};\n    for (const prop in options) {\n        if ({}.hasOwnProperty.call(options, prop)) {\n            conf = options[prop];\n            const addAsMethod = conf.meta ? conf.meta.addAsMethod : true;\n            let nameSpaceProp;\n            const namespace = namespaceInf.namespace;\n            if (namespace) {\n                nameSpaceProp = `${namespace}.${prop}`;\n            } else {\n                nameSpaceProp = prop;\n            }\n\n            stateProps[prop] = conf.value;\n            if (addAsMethod !== false) {\n                holder[prop] = ((context, meta, nsProp) => (...params) => {\n                    let val;\n                    let compareTo;\n                    const paramsLen = params.length;\n                    const prevVal = store.prop(nsProp);\n                    if (paramsLen) {\n                        // If parameters are passed then it's a setter\n                        const spreadParams = meta && meta.spreadParams;\n                        val = params;\n                        const values = [];\n                        if (meta) {\n                            for (let i = 0; i < paramsLen; i++) {\n                                val = params[i];\n                                const sanitization = meta.sanitization && (spreadParams ? meta.sanitization[i] :\n                                    meta.sanitization);\n                                const typeCheck = meta.typeCheck && (spreadParams ? meta.typeCheck[i] : meta.typeCheck);\n                                if (sanitization && typeof sanitization === 'function') {\n                                    // Sanitize if required\n                                    val = sanitization(val, prevVal, holder);\n                                }\n\n                                if (typeCheck) {\n                                    // Checking if a setter is valid\n                                    if (typeof typeCheck === 'function') {\n                                        let typeExpected = meta.typeExpected;\n                                        if (typeExpected && spreadParams) {\n                                            typeExpected = typeExpected[i];\n                                        }\n                                        if (typeExpected) {\n                                            compareTo = typeExpected;\n                                        } else {\n                                            compareTo = true;\n                                        }\n\n                                        if (typeCheck(val) === compareTo) {\n                                            values.push(val);\n                                        }\n                                    } else if (typeof typeCheck === 'string') {\n                                        if (typeCheck === 'constructor') {\n                                            const typeExpected = spreadParams ? meta.typeExpected[i] :\n                                                meta.typeExpected;\n                                            if (val && (val.constructor.name === typeExpected)) {\n                                                values.push(val);\n                                            }\n                                        }\n                                    } else {\n                                        // context.prop(key, val);\n                                        values.push(val);\n                                    }\n                                } else {\n                                    values.push(val);\n                                }\n                            }\n                            const preset = meta.preset;\n                            const oldValues = context.prop(nsProp);\n                            preset && preset(values[0], holder);\n                            if (spreadParams) {\n                                oldValues.forEach((value, i) => {\n                                    if (values[i] === undefined) {\n                                        values[i] = value;\n                                    }\n                                });\n                            }\n                            values.length && context.prop(nsProp, spreadParams ? values : values[0]);\n                        } else {\n                            context.prop(nsProp, spreadParams ? val : val[0]);\n                        }\n                        return holder;\n                    }\n                // No parameters are passed hence its a getter\n                    return context.prop(nsProp);\n                })(store, conf.meta, nameSpaceProp);\n            }\n        }\n    }\n\n    if (namespaceInf.namespace === undefined) {\n        store.append(stateProps);\n    } else {\n        const namespace = namespaceInf.namespace;\n        store.append(namespace, stateProps);\n    }\n\n    return [holder, store];\n};\n\n/**\n *\n *\n * @param {*} context\n * @param {*} props\n */\nconst generateGetterSetters = (context, props) => {\n    Object.entries(props).forEach((propInfo) => {\n        const prop = propInfo[0];\n        const typeChecker = propInfo[1].typeChecker;\n        const defVal = propInfo[1].defaultValue;\n        const sanitization = propInfo[1].sanitization;\n        const preset = propInfo[1].preset;\n        const prototype = context.constructor.prototype;\n        if (!(Object.hasOwnProperty.call(prototype, prop))) {\n            if (defVal) {\n                context[`_${prop}`] = defVal;\n            }\n            context[prop] = (...params) => {\n                if (params.length) {\n                    let value = params[0];\n                    if (sanitization) {\n                        value = sanitization(context, params[0]);\n                    }\n                    if (preset) {\n                        preset(context, value);\n                    }\n                    if (typeChecker && !typeChecker(value)) {\n                        return context[`_${prop}`];\n                    }\n                    context[`_${prop}`] = value;\n                    return context;\n                } return context[`_${prop}`];\n            };\n        }\n    });\n};\n\n/**\n *\n *\n * @param {*} arr\n * @param {*} prop\n */\nconst getArraySum = (arr, prop) => arr.reduce((total, elem) => {\n    total += prop ? elem[prop] : elem;\n    return total;\n}, 0);\n\n/**\n *\n *\n * @param {*} arr1\n * @param {*} arr2\n *\n */\nconst arraysEqual = (arr1, arr2) => {\n    if (arr1.length !== arr2.length) { return false; }\n    for (let i = arr1.length; i >= 0; i--) {\n        if (arr1[i] !== arr2[i]) { return false; }\n    }\n\n    return true;\n};\n\n/* eslint valid-typeof:0 */\n/**\n * Returns a validation function which can be used to validate variables against a type and value\n *\n * @param {any} type type of value that the object should have\n * @return {Object} validation function\n */\nconst isEqual = type => (oldVal, newVal) => {\n    if (type === 'Array') {\n        if (!oldVal) {\n            return false;\n        }\n        return arraysEqual(oldVal, newVal);\n    } else if (type === 'Object') {\n        return Object.is(oldVal, newVal);\n    } return oldVal === newVal;\n};\n\n/**\n * Description @todo\n *\n * @param {any} transactionModel @todo\n * @param {any} transactionEndpoint @todo\n * @param {any} transactionItems @todo\n * @return {any} @todo\n */\nconst enableChainedTransaction = (transactionModel, transactionEndpoint, transactionItems) =>\n    transactionItems.forEach(item => transactionModel.on(item, ([, newVal]) => transactionEndpoint[item](newVal)));\n\n/**\n * Chceks if the element is istanceof HTMLElement\n *\n * @param {Object} elem any JS Object\n */\nconst isHTMLElem = elem => elem instanceof HTMLElement;\n\nconst ERROR_MSG = {\n    INTERFACE_IMPL: 'Method not implemented'\n};\n\n/**\n * Merges the sink object in the source by recursively iterating through the object properties\n * @param {Object} source Source Object\n * @param {Object} sink Sink Object\n * @return {Object} Merged object\n */\nconst mergeRecursive = (source, sink) => {\n    for (const prop in sink) {\n        if (isSimpleObject(source[prop]) && isSimpleObject(sink[prop])) {\n            mergeRecursive(source[prop], sink[prop]);\n        } else if (sink[prop] instanceof Object && sink[prop].constructor === Object) {\n            source[prop] = {};\n            mergeRecursive(source[prop], sink[prop]);\n        } else {\n            source[prop] = sink[prop];\n        }\n    }\n    return source;\n};\n\n/**\n * Creates a selection set from a data set with corresponding attributes\n *\n * @export\n * @param {Selection} sel contains previous selection\n * @param {Object} appendObj Object to be appended\n * @param {Array} data Data based on which the selection is entered/updated/removed\n * @param {Object} [attrs={}] Attributes to be set on the data\n * @return {Selection} Merged selection\n */\nconst createSelection = (sel, appendObj, data, idFn) => {\n    let selection = sel || dataSelect(idFn);\n\n    selection = selection.data(data);\n\n    const enter = selection.enter().append(appendObj);\n    const mergedSelection = enter.merge(selection);\n\n    const exitSelection = selection.exit();\n    exitSelection.getObjects().forEach(inst => inst.remove());\n    exitSelection.remove();\n    return mergedSelection;\n};\n\nconst interpolateArray = (data, fitCount) => {\n    const linearInterpolate = function (before, after, atPoint) {\n        return before + (after - before) * atPoint;\n    };\n    const newData = [];\n    const springFactor = ((data.length - 1) / (fitCount - 1));\n    newData[0] = data[0]; // for new allocation\n    for (let i = 1; i < fitCount - 1; i++) {\n        const tmp = i * springFactor;\n        const before = (Math.floor(tmp)).toFixed();\n        const after = (Math.ceil(tmp)).toFixed();\n        const atPoint = tmp - before;\n        newData[i] = linearInterpolate(data[before], data[after], atPoint);\n    }\n    newData[fitCount - 1] = data[data.length - 1]; // for new allocation\n    return newData;\n};\n\n/**\n *\n *\n * @param {*} fn\n */\nconst nextFrame = (fn) => {\n    setTimeout(() => {\n        fn();\n    }, 0);\n};\n\n/**\n *\n *\n * @param {*} angle\n */\nconst angleToRadian = angle => angle * Math.PI / 180;\n\n/**\n *\n *\n * @param {*} newName\n * @param {*} oldName\n */\nconst replaceCSSPrefix = () => {\n    // @todo\n};\n\n/**\n * Gets the  interpolator function from d3 color\n *\n */\nconst interpolator = () => interpolate;\n\n/**\n * Gets the number interpolator from d3 color\n *\n */\nconst numberInterpolator = () => interpolateNumber;\n\n/**\n * Gets the rgb interpolator from d3 color\n *\n */\nconst colorInterpolator = () => interpolateRgb;\n\n/**\n * Gets the hsl interpolator from d3 color\n *\n */\nconst hslInterpolator = () => interpolateHslLong;\n\nconst transformColors = () => ({\n    color,\n    rgb,\n    hsl\n});\n\n/**\n * Gets the piecewise interpolator from d3 color\n *\n */\nconst piecewiseInterpolator = () => piecewise;\n\nfunction hue2rgb (p, q, t) {\n    if (t < 0) t += 1;\n    if (t > 1) t -= 1;\n    if (t < 1 / 6) return p + (q - p) * 6 * t;\n    if (t < 1 / 2) return q;\n    if (t < 2 / 3) return p + (q - p) * (2 / 3 - t) * 6;\n    return p;\n}\n\n  /**\n   * Converts an HSL color value to RGB. Conversion formula\n   * adapted from http://en.wikipedia.org/wiki/HSL_color_space.\n   * Assumes h, s, and l are contained in the set [0, 1] and\n   * returns r, g, and b in the set [0, 255].\n   *\n   * @param   Number  h       The hue\n   * @param   Number  s       The saturation\n   * @param   Number  l       The lightness\n   * @return  Array           The RGB representation\n   */\nconst hslToRgb = (h, s, l, a = 1) => {\n    let r;\n    let g;\n    let b;\n\n    if (s === 0) {\n        r = g = b = l; // achromatic\n    } else {\n        const q = l < 0.5 ? l * (1 + s) : l + s - l * s;\n        const p = 2 * l - q;\n\n        r = hue2rgb(p, q, h + 1 / 3);\n        g = hue2rgb(p, q, h);\n        b = hue2rgb(p, q, h - 1 / 3);\n    }\n\n    return [r * 255, g * 255, b * 255, a];\n};\n\n  /**\n   * Converts an RGB color value to HSV. Conversion formula\n   * adapted from http://en.wikipedia.org/wiki/HSV_color_space.\n   * Assumes r, g, and b are contained in the set [0, 255] and\n   * returns h, s, and v in the set [0, 1].\n   *\n   * @param   Number  r       The red color value\n   * @param   Number  g       The green color value\n   * @param   Number  b       The blue color value\n   * @return  Array           The HSV representation\n   */\nconst rgbToHsv = (r, g, b, a = 1) => {\n    r = +r; g = +g; b = +b; a = +a;\n    r /= 255; g /= 255; b /= 255;\n    const max = Math.max(r, g, b);\n    const min = Math.min(r, g, b);\n    let h;\n    let s;\n    const l = (max + min) / 2;\n\n    if (max === min) {\n        h = s = 0; // achromatic\n    } else {\n        const d = max - min;\n        s = l > 0.5 ? d / (2 - max - min) : d / (max + min);\n        switch (max) {\n        case r: h = (g - b) / d + (g < b ? 6 : 0); break;\n        case g: h = (b - r) / d + 2; break;\n        case b: h = (r - g) / d + 4; break;\n        default: break;\n        }\n        h /= 6;\n    }\n    return [h, s, l, a];\n};\n\n  /**\n   * Converts an HSV color value to RGB. Conversion formula\n   * adapted from http://en.wikipedia.org/wiki/HSV_color_space.\n   * Assumes h, s, and v are contained in the set [0, 1] and\n   * returns r, g, and b in the set [0, 255].\n   *\n   * @param   Number  h       The hue\n   * @param   Number  s       The saturation\n   * @param   Number  v       The value\n   * @return  Array           The RGB representation\n   */\nconst hsvToRgb = (h, s, v, a = 1) => {\n    let r;\n    let g;\n    let b;\n\n    const i = Math.floor(h * 6);\n    const f = h * 6 - i;\n    const p = v * (1 - s);\n    const q = v * (1 - f * s);\n    const t = v * (1 - (1 - f) * s);\n\n    switch (i % 6) {\n    case 0: r = v; g = t; b = p; break;\n    case 1: r = q; g = v; b = p; break;\n    case 2: r = p; g = v; b = t; break;\n    case 3: r = p; g = q; b = v; break;\n    case 4: r = t; g = p; b = v; break;\n    case 5: r = v; g = p; b = q; break;\n    default: break;\n    }\n\n    return [r * 255, g * 255, b * 255, a];\n};\n\nconst hexToHsv = (hex) => {\n    const shorthandRegex = /^#?([a-f\\d])([a-f\\d])([a-f\\d])$/i;\n    hex = hex.replace(shorthandRegex, (m, r, g, b) => r + r + g + g + b + b);\n\n    const result = /^#?([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})$/i.exec(hex);\n    return result ? rgbToHsv(parseInt(result[1], 16), parseInt(result[2], 16), parseInt(result[3], 16)) : '';\n};\n\nconst detectColor = (col) => {\n    const matchRgb = /rgb\\((\\d{1,3}), (\\d{1,3}), (\\d{1,3})\\)/;\n    const matchHsl = /hsl\\((\\d+),\\s*([\\d.]+)%,\\s*([\\d.]+)%\\)/g;\n\n    // Source :  https://gist.github.com/sethlopezme/d072b945969a3cc2cc11\n     // eslint-disable-next-line\n    const matchRgba = /rgba?\\(((25[0-5]|2[0-4]\\d|1\\d{1,2}|\\d\\d?)\\s*,\\s*?){2}(25[0-5]|2[0-4]\\d|1\\d{1,2}|\\d\\d?)\\s*,?\\s*([01]\\.?\\d*?)?\\)/;\n     // eslint-disable-next-line\n    const matchHsla = /^hsla\\((\\d.+),\\s*([\\d.]+)%,\\s*([\\d.]+)%,\\s*(\\d*(?:\\.\\d+)?)\\)$/;\n    const matchHex = /^#([0-9a-f]{3}){1,2}$/i;\n\n    if (matchRgb.test(col) || matchRgba.test(col)) {\n        return 'rgb';\n    } else if (matchHsl.test(col) || matchHsla.test(col)) {\n        return 'hsl';\n    } else if (matchHex.test(col)) {\n        return 'hex';\n    } return col;\n};\n\nconst assembleModelFromIdentifiers = (model, identifiers) => {\n    let schema = [];\n    let data;\n    const fieldMap = model.getFieldsConfig();\n    if (identifiers.length) {\n        const fields = identifiers[0];\n        const len = fields.length;\n        for (let i = 0; i < len; i++) {\n            const field = fields[i];\n            const fieldObj = fieldMap[field] && Object.assign({}, fieldMap[field].def);\n            if (fieldObj) {\n                schema.push(Object.assign(fieldObj));\n            }\n        }\n\n        data = [];\n        const header = identifiers[0];\n        for (let i = 1; i < identifiers.length; i += 1) {\n            const vals = identifiers[i];\n            const temp = {};\n            vals.forEach((fieldVal, cIdx) => {\n                temp[header[cIdx]] = fieldVal;\n            });\n            data.push(temp);\n        }\n    } else {\n        data = [];\n        schema = [];\n    }\n\n    return new model.constructor(data, schema);\n};\n\n/**\n *\n *\n * @param {*} dataModel\n * @param {*} criteria\n *\n */\nconst getDataModelFromRange = (dataModel, criteria, mode) => {\n    if (criteria === null) {\n        return null;\n    }\n    const selFields = Object.keys(criteria);\n    const selFn = fields => selFields.every((field) => {\n        const val = fields[field].value;\n        const range = criteria[field][0] instanceof Array ? criteria[field][0] : criteria[field];\n        if (typeof range[0] === 'string') {\n            return range.find(d => d === val) !== undefined;\n        }\n        return range ? val >= range[0] && val <= range[1] : true;\n    });\n\n    return dataModel.select(selFn, {\n        saveChild: false,\n        mode\n    });\n};\n\n/**\n *\n *\n * @param {*} dataModel\n * @param {*} identifiers\n *\n */\nconst getDataModelFromIdentifiers = (dataModel, identifiers, mode) => {\n    let filteredDataModel;\n    if (identifiers instanceof Array) {\n        const fieldsConfig = dataModel.getFieldsConfig();\n\n        const dataArr = identifiers.slice(1, identifiers.length);\n        if (identifiers instanceof Function) {\n            filteredDataModel = identifiers(dataModel, {}, false);\n        } else if (identifiers instanceof Array && identifiers[0].length) {\n            const filteredSchema = identifiers[0].filter(d => d in fieldsConfig);\n            filteredDataModel = dataModel.select((fields) => {\n                let include = true;\n                filteredSchema.forEach((propField, idx) => {\n                    const value = fields[propField].valueOf();\n                    const index = dataArr.findIndex(d => d[idx] === value);\n                    include = include && index !== -1;\n                });\n                return include;\n            }, {\n                saveChild: false,\n                mode\n            });\n        } else {\n            filteredDataModel = dataModel.select(() => false, {\n                saveChild: false,\n                mode\n            });\n        }\n    } else {\n        filteredDataModel = getDataModelFromRange(dataModel, identifiers, mode);\n    }\n    return filteredDataModel;\n};\n\n/**\n *\n *\n * @param {*} context\n * @param {*} listenerMap\n */\nconst registerListeners = (context, listenerMap, ...params) => {\n    const propListenerMap = listenerMap(context, ...params);\n    for (const key in propListenerMap) {\n        if ({}.hasOwnProperty.call(propListenerMap, key)) {\n            const namespace = params[0];\n            let ns = null;\n            if (namespace) {\n                ns = namespace.local;\n            }\n            const mapObj = propListenerMap[key];\n            const propType = mapObj.type;\n            const props = mapObj.props;\n            const listenerFn = mapObj.listener;\n            context.store()[propType](props, listenerFn, false, {\n                namespace: ns\n            });\n        }\n    }\n};\n\nconst isValidValue = value => !isNaN(value) && value !== -Infinity && value !== Infinity;\n/**\n *\n *\n * @param {*} str\n *\n */\nconst escapeHTML = (str) => {\n    const htmlEscapes = {\n        '&': '&amp;',\n        '<': '&lt;',\n        '>': '&gt;',\n        '\"': '&quot;',\n        \"'\": '&#x27;',\n        '/': '&#x2F;'\n    };\n    const htmlEscaper = /[&<>\"'/]/g;\n    return (`${str}`).replace(htmlEscaper, match => htmlEscapes[match]);\n};\n\n/**\n *\n *\n * @param {*} arr\n */\nconst transposeArray = arr => arr[0].map((col, i) => arr.map(row => row[i]));\nconst toArray = arr => (arr instanceof Array ? arr : [arr]);\nconst extendsClass = (cls, extendsFrom, found) => {\n    if (!cls) {\n        return false;\n    }\n    const prototype = cls.prototype;\n    if (prototype instanceof extendsFrom) {\n        found = true;\n    } else {\n        found = extendsClass(prototype, extendsFrom, found);\n    }\n    return found;\n};\n\n/**\n *\n * @param {*} dm1\n * @param {*} dm2\n */\nconst concatModels = (dm1, dm2) => {\n    const dataObj1 = dm1.getData();\n    const dataObj2 = dm2.getData();\n    const data1 = dataObj1.data;\n    const data2 = dataObj2.data;\n    const schema1 = dataObj1.schema;\n    const schema2 = dataObj2.schema;\n    const tuples1 = {};\n    const tuples2 = {};\n    const commonTuples = {};\n    for (let i = 0; i < data1.length; i++) {\n        for (let ii = 0; ii < data2.length; ii++) {\n            const row1 = data1[i];\n            const row2 = data2[ii];\n            const dim1Values = row1.filter((d, idx) => schema1[idx].type === FieldType.DIMENSION);\n            const dim2Values = row2.filter((d, idx) => schema2[idx].type === FieldType.DIMENSION);\n            const allDimSame = dim1Values.every(value => dim2Values.indexOf(value) !== -1);\n            if (allDimSame) {\n                const key = dim1Values.join();\n                !commonTuples[key] && (commonTuples[key] = {});\n                row1.forEach((value, idx) => {\n                    commonTuples[key][schema1[idx].name] = value;\n                });\n                row2.forEach((value, idx) => {\n                    commonTuples[key][schema2[idx].name] = value;\n                });\n            } else {\n                const dm1Key = dim1Values.join();\n                const dm2Key = dim2Values.join();\n                if (!commonTuples[dm1Key] && !commonTuples[dm2Key]) {\n                    !tuples1[dm1Key] && (tuples1[dm1Key] = {});\n                    !tuples2[dm2Key] && (tuples2[dm2Key] = {});\n                    row1.forEach((value, idx) => {\n                        tuples1[dm1Key][schema1[idx].name] = value;\n                    });\n                    row2.forEach((value, idx) => {\n                        tuples2[dm2Key][schema2[idx].name] = value;\n                    });\n                }\n            }\n        }\n    }\n\n    const commonSchema = [...schema1, ...schema2.filter(s2 => schema1.findIndex(s1 => s1.name === s2.name) === -1)];\n    const data = [...Object.values(tuples1), ...Object.values(tuples2), ...Object.values(commonTuples)];\n    return [data, commonSchema];\n};\n\nconst getSymbol = type => symbol().type(symbolFns[type]);\n\nconst stackOrders = {\n    [STACK_CONFIG.ORDER_NONE]: stackOrderNone,\n    [STACK_CONFIG.ORDER_ASCENDING]: stackOrderAscending,\n    [STACK_CONFIG.ORDER_DESCENDING]: stackOrderDescending\n};\nconst stackOffsets = {\n    [STACK_CONFIG.OFFSET_DIVERGING]: stackOffsetDiverging,\n    [STACK_CONFIG.OFFSET_NONE]: stackOffsetNone,\n    [STACK_CONFIG.OFFSET_EXPAND]: stackOffsetExpand,\n    [STACK_CONFIG.OFFSET_WIGGLE]: stackOffsetWiggle\n};\n\n// eslint-disable-next-line require-jsdoc\nconst stack = params => d3Stack().keys(params.keys).offset(stackOffsets[params.offset])\n                .order(stackOrders[params.order])(params.data);\n\n/**\n * Groups the data into a hierarchical tree structure based on one or more fields.\n * @param { Object } params Configuration properties for nesting data\n * @param { Array.<Array> } params.data Data which needs to be grouped\n * @param { Array.<number> } params.keys Field indices by which the data will be grouped\n * @return { Array.<Object> } Grouped data array\n */\nconst nestCollection = (params) => {\n    const nestFn = nest();\n    params.keys.forEach(key => nestFn.key(d => d[key]));\n    return nestFn.entries(params.data);\n};\n\nconst pathInterpolators = {\n    curveLinear,\n    curveStepAfter,\n    curveStepBefore,\n    curveStep,\n    curveCatmullRom,\n    stepAfter: curveStepAfter,\n    catmullRom: curveCatmullRom,\n    step: curveStep,\n    stepBefore: curveStepBefore,\n    linear: curveLinear\n};\n\nconst Symbols = {\n    axisLeft,\n    axisRight,\n    axisTop,\n    axisBottom,\n    line,\n    area,\n    pie,\n    arc,\n    nest\n};\n\nconst Scales = {\n    band: scaleBand\n};\n\nconst getSmallestDiff = (points) => {\n    points = points.sort((a, b) => a - b);\n    let minDiff = points[1] - points[0];\n    for (let i = 2; i < points.length; i++) {\n        minDiff = Math.min(minDiff, points[i] - points[i - 1]);\n    }\n\n    return minDiff;\n};\n\nconst timeFormats = {\n    millisecond: '%A, %b %e, %H:%M:%S.%L',\n    second: '%A, %b %e, %H:%M:%S',\n    minute: '%A, %b %e, %H:%M',\n    hour: '%A, %b %e, %H:%M',\n    day: '%A, %b %e, %Y',\n    month: '%B %Y',\n    year: '%Y'\n};\n\nconst timeDurations = [\n    ['millisecond', 'second', 'minute', 'hour', 'day', 'month', 'year'],\n    [1, 1000, 60000, 3600000, 86400000, 2592000000, 31536000000]\n];\n\nconst getNearestInterval = (interval) => {\n    const index = getClosestIndexOf(timeDurations[1], interval);\n    return timeDurations[0][index];\n};\n\nconst formatTemporal = (value, interval) => {\n    const nearestInterval = getNearestInterval(interval);\n    return DateTimeFormatter.formatAs(value, timeFormats[nearestInterval]);\n};\n\nconst temporalFields = (dataModel) => {\n    const filteredFields = {};\n    Object.entries(dataModel.getFieldspace().getDimension()).forEach(([fieldName, fieldObj]) => {\n        if (fieldObj.subtype() === DimensionSubtype.TEMPORAL) {\n            filteredFields[fieldName] = fieldObj;\n        }\n    });\n    return filteredFields;\n};\n\nconst require = (lookupWhat, lookupDetails) => ({\n    resolvable: (store) => {\n        const lookupTarget = store[lookupWhat];\n        const depArr = lookupDetails.slice(0, lookupDetails.length - 1);\n        const fn = lookupDetails[lookupDetails.length - 1]; // fn\n\n        const deps = depArr.map(str => lookupTarget[str]);\n        return {\n            fn: fn(...deps),\n            depArr\n        };\n    }\n});\n\nconst nextAnimFrame = window.requestAnimationFrame || window.webkitRequestAnimationFrame ||\n    window.mozRequestAnimationFrame || window.oRequestAnimationFrame || window.msRequestAnimationFrame ||\n    function (callback) {\n        setTimeout(callback, 16);\n    };\n\nconst getValueParser = config => (val) => {\n    if (val instanceof InvalidAwareTypes) {\n        return val in config ? config[val] : `${val}`;\n    }\n    return val;\n};\n\nconst retrieveNearestGroupByReducers = (dataModel, ...measureFieldNames) => {\n    const filteredReducers = {};\n    if (dataModel instanceof DataModel) {\n        const derivations = [...dataModel.getDerivations().reverse(), ...dataModel.getAncestorDerivations().reverse()];\n        const nearestReducers = defaultValue(\n            getObjProp(derivations.find(derv => derv.op === DM_DERIVATIVES.GROUPBY), 'criteria'), {});\n\n        const measures = dataModel.getFieldspace().getMeasure();\n        measureFieldNames = measureFieldNames.length ? measureFieldNames : Object.keys(measures);\n        measureFieldNames.forEach((measureName) => {\n            if (nearestReducers[measureName]) {\n                filteredReducers[measureName] = nearestReducers[measureName];\n            } else {\n                const measureField = measures[measureName];\n                if (measureField) {\n                    filteredReducers[measureName] = measureField.defAggFn();\n                }\n            }\n        });\n    }\n    return filteredReducers;\n};\n\nconst retrieveFieldDisplayName = (dm, fieldName) => dm.getFieldspace().fieldsObj()[fieldName].displayName();\n/**\n * Fetches the nearest sort operation details by traversing the chain of parent DataModels\n * @param {Object} dataModel Instance of DataModel\n *\n * @return {Array|null} sort criteria, null if no sort operation found\n */\nconst nearestSortingDetails = (dataModel) => {\n    const allDerivations = [...dataModel.getAncestorDerivations(), ...dataModel.getDerivations()];\n    const nearestSortDerivation = allDerivations.reverse().find(derivation => derivation.op === DM_DERIVATIVES.SORT);\n\n    return nearestSortDerivation ? nearestSortDerivation.criteria : null;\n};\n\nexport {\n    getValueParser,\n    require,\n    Scales,\n    Symbols,\n    pathInterpolators,\n    stack,\n    nestCollection,\n    getSymbol,\n    transformColors,\n    detectColor,\n    hexToHsv,\n    hslToRgb,\n    rgbToHsv,\n    hsvToRgb,\n    concatModels,\n    toArray,\n    angleToRadian,\n    escapeHTML,\n    generateGetterSetters,\n    getArraySum,\n    interpolator,\n    piecewiseInterpolator,\n    getDataModelFromIdentifiers,\n    getDataModelFromRange,\n    colorInterpolator,\n    numberInterpolator,\n    ERROR_MSG,\n    reqAnimFrame,\n    nextAnimFrame,\n    transposeArray,\n    cancelAnimFrame,\n    getMax,\n    getMin,\n    getDomainFromData,\n    getUniqueId,\n    mergeRecursive,\n    unionDomain,\n    symbolFns,\n    easeFns,\n    clone,\n    isEqual,\n    interpolateArray,\n    getMinPoint,\n    defaultValue,\n    getMaxPoint,\n    getClosestIndexOf,\n    Voronoi,\n    checkExistence,\n    sanitizeIP,\n    getMinDiff,\n    capitalizeFirst,\n    getWindow,\n    getQualifiedClassName,\n    Store,\n    getDependencyOrder,\n    objectIterator,\n    intSanitizer,\n    transactor,\n    enableChainedTransaction,\n    isHTMLElem,\n    isSimpleObject,\n    nextFrame,\n    registerListeners,\n    replaceCSSPrefix,\n    getObjProp,\n    extendsClass,\n    assembleModelFromIdentifiers,\n    isValidValue,\n    hslInterpolator,\n    getSmallestDiff,\n    getNearestValue,\n    retrieveNearestGroupByReducers,\n    nearestSortingDetails,\n    createSelection,\n    formatTemporal,\n    temporalFields,\n    retrieveFieldDisplayName,\n    sanitizeDomainWhenEqual\n};\n","export function linear(t) {\n  return +t;\n}\n","export function circleIn(t) {\n  return 1 - Math.sqrt(1 - t * t);\n}\n\nexport function circleOut(t) {\n  return Math.sqrt(1 - --t * t);\n}\n\nexport function circleInOut(t) {\n  return ((t *= 2) <= 1 ? 1 - Math.sqrt(1 - t * t) : Math.sqrt(1 - (t -= 2) * t) + 1) / 2;\n}\n","import Selection from './selection';\n/**\n * This function applies a selection operation on a data array.\n *\n * @export\n * @param {Array} [data=[]] The data array to be observed.\n * @return {Selection} Instance of a selection.\n */\nexport default function dataSelect (idFn) {\n    return new Selection(idFn);\n}\n\n","import {path} from \"d3-path\";\nimport circle from \"./symbol/circle\";\nimport cross from \"./symbol/cross\";\nimport diamond from \"./symbol/diamond\";\nimport star from \"./symbol/star\";\nimport square from \"./symbol/square\";\nimport triangle from \"./symbol/triangle\";\nimport wye from \"./symbol/wye\";\nimport constant from \"./constant\";\n\nexport var symbols = [\n  circle,\n  cross,\n  diamond,\n  square,\n  star,\n  triangle,\n  wye\n];\n\nexport default function() {\n  var type = constant(circle),\n      size = constant(64),\n      context = null;\n\n  function symbol() {\n    var buffer;\n    if (!context) context = buffer = path();\n    type.apply(this, arguments).draw(context, +size.apply(this, arguments));\n    if (buffer) return context = null, buffer + \"\" || null;\n  }\n\n  symbol.type = function(_) {\n    return arguments.length ? (type = typeof _ === \"function\" ? _ : constant(_), symbol) : type;\n  };\n\n  symbol.size = function(_) {\n    return arguments.length ? (size = typeof _ === \"function\" ? _ : constant(+_), symbol) : size;\n  };\n\n  symbol.context = function(_) {\n    return arguments.length ? (context = _ == null ? null : _, symbol) : context;\n  };\n\n  return symbol;\n}\n","import ascending from \"./ascending\";\n\nexport default function(series) {\n  return ascending(series).reverse();\n}\n","export default function(series, order) {\n  if (!((n = series.length) > 1)) return;\n  for (var i, j = 0, d, dy, yp, yn, n, m = series[order[0]].length; j < m; ++j) {\n    for (yp = yn = 0, i = 0; i < n; ++i) {\n      if ((dy = (d = series[order[i]][j])[1] - d[0]) >= 0) {\n        d[0] = yp, d[1] = yp += dy;\n      } else if (dy < 0) {\n        d[1] = yn, d[0] = yn += dy;\n      } else {\n        d[0] = yp;\n      }\n    }\n  }\n}\n","import none from \"./none\";\n\nexport default function(series, order) {\n  if (!((n = series.length) > 0)) return;\n  for (var i, n, j = 0, m = series[0].length, y; j < m; ++j) {\n    for (y = i = 0; i < n; ++i) y += series[i][j][1] || 0;\n    if (y) for (i = 0; i < n; ++i) series[i][j][1] /= y;\n  }\n  none(series, order);\n}\n","import none from \"./none\";\n\nexport default function(series, order) {\n  if (!((n = series.length) > 0) || !((m = (s0 = series[order[0]]).length) > 0)) return;\n  for (var y = 0, j = 1, s0, m, n; j < m; ++j) {\n    for (var i = 0, s1 = 0, s2 = 0; i < n; ++i) {\n      var si = series[order[i]],\n          sij0 = si[j][1] || 0,\n          sij1 = si[j - 1][1] || 0,\n          s3 = (sij0 - sij1) / 2;\n      for (var k = 0; k < i; ++k) {\n        var sk = series[order[k]],\n            skj0 = sk[j][1] || 0,\n            skj1 = sk[j - 1][1] || 0;\n        s3 += skj0 - skj1;\n      }\n      s1 += sij0, s2 += s3 * sij0;\n    }\n    s0[j - 1][1] += s0[j - 1][0] = y;\n    if (s1) y -= s2 / s1;\n  }\n  s0[j - 1][1] += s0[j - 1][0] = y;\n  none(series, order);\n}\n","import constant from \"./constant\";\nimport descending from \"./descending\";\nimport identity from \"./identity\";\nimport {tau} from \"./math\";\n\nexport default function() {\n  var value = identity,\n      sortValues = descending,\n      sort = null,\n      startAngle = constant(0),\n      endAngle = constant(tau),\n      padAngle = constant(0);\n\n  function pie(data) {\n    var i,\n        n = data.length,\n        j,\n        k,\n        sum = 0,\n        index = new Array(n),\n        arcs = new Array(n),\n        a0 = +startAngle.apply(this, arguments),\n        da = Math.min(tau, Math.max(-tau, endAngle.apply(this, arguments) - a0)),\n        a1,\n        p = Math.min(Math.abs(da) / n, padAngle.apply(this, arguments)),\n        pa = p * (da < 0 ? -1 : 1),\n        v;\n\n    for (i = 0; i < n; ++i) {\n      if ((v = arcs[index[i] = i] = +value(data[i], i, data)) > 0) {\n        sum += v;\n      }\n    }\n\n    // Optionally sort the arcs by previously-computed values or by data.\n    if (sortValues != null) index.sort(function(i, j) { return sortValues(arcs[i], arcs[j]); });\n    else if (sort != null) index.sort(function(i, j) { return sort(data[i], data[j]); });\n\n    // Compute the arcs! They are stored in the original data's order.\n    for (i = 0, k = sum ? (da - n * pa) / sum : 0; i < n; ++i, a0 = a1) {\n      j = index[i], v = arcs[j], a1 = a0 + (v > 0 ? v * k : 0) + pa, arcs[j] = {\n        data: data[j],\n        index: i,\n        value: v,\n        startAngle: a0,\n        endAngle: a1,\n        padAngle: p\n      };\n    }\n\n    return arcs;\n  }\n\n  pie.value = function(_) {\n    return arguments.length ? (value = typeof _ === \"function\" ? _ : constant(+_), pie) : value;\n  };\n\n  pie.sortValues = function(_) {\n    return arguments.length ? (sortValues = _, sort = null, pie) : sortValues;\n  };\n\n  pie.sort = function(_) {\n    return arguments.length ? (sort = _, sortValues = null, pie) : sort;\n  };\n\n  pie.startAngle = function(_) {\n    return arguments.length ? (startAngle = typeof _ === \"function\" ? _ : constant(+_), pie) : startAngle;\n  };\n\n  pie.endAngle = function(_) {\n    return arguments.length ? (endAngle = typeof _ === \"function\" ? _ : constant(+_), pie) : endAngle;\n  };\n\n  pie.padAngle = function(_) {\n    return arguments.length ? (padAngle = typeof _ === \"function\" ? _ : constant(+_), pie) : padAngle;\n  };\n\n  return pie;\n}\n","export var xhtml = \"http://www.w3.org/1999/xhtml\";\n\nexport default {\n  svg: \"http://www.w3.org/2000/svg\",\n  xhtml: xhtml,\n  xlink: \"http://www.w3.org/1999/xlink\",\n  xml: \"http://www.w3.org/XML/1998/namespace\",\n  xmlns: \"http://www.w3.org/2000/xmlns/\"\n};\n","import namespaces from \"./namespaces\";\n\nexport default function(name) {\n  var prefix = name += \"\", i = prefix.indexOf(\":\");\n  if (i >= 0 && (prefix = name.slice(0, i)) !== \"xmlns\") name = name.slice(i + 1);\n  return namespaces.hasOwnProperty(prefix) ? {space: namespaces[prefix], local: name} : name;\n}\n","import namespace from \"./namespace\";\nimport {xhtml} from \"./namespaces\";\n\nfunction creatorInherit(name) {\n  return function() {\n    var document = this.ownerDocument,\n        uri = this.namespaceURI;\n    return uri === xhtml && document.documentElement.namespaceURI === xhtml\n        ? document.createElement(name)\n        : document.createElementNS(uri, name);\n  };\n}\n\nfunction creatorFixed(fullname) {\n  return function() {\n    return this.ownerDocument.createElementNS(fullname.space, fullname.local);\n  };\n}\n\nexport default function(name) {\n  var fullname = namespace(name);\n  return (fullname.local\n      ? creatorFixed\n      : creatorInherit)(fullname);\n}\n","function none() {}\n\nexport default function(selector) {\n  return selector == null ? none : function() {\n    return this.querySelector(selector);\n  };\n}\n","function empty() {\n  return [];\n}\n\nexport default function(selector) {\n  return selector == null ? empty : function() {\n    return this.querySelectorAll(selector);\n  };\n}\n","var matcher = function(selector) {\n  return function() {\n    return this.matches(selector);\n  };\n};\n\nif (typeof document !== \"undefined\") {\n  var element = document.documentElement;\n  if (!element.matches) {\n    var vendorMatches = element.webkitMatchesSelector\n        || element.msMatchesSelector\n        || element.mozMatchesSelector\n        || element.oMatchesSelector;\n    matcher = function(selector) {\n      return function() {\n        return vendorMatches.call(this, selector);\n      };\n    };\n  }\n}\n\nexport default matcher;\n","export default function(update) {\n  return new Array(update.length);\n}\n","import sparse from \"./sparse\";\nimport {Selection} from \"./index\";\n\nexport default function() {\n  return new Selection(this._enter || this._groups.map(sparse), this._parents);\n}\n\nexport function EnterNode(parent, datum) {\n  this.ownerDocument = parent.ownerDocument;\n  this.namespaceURI = parent.namespaceURI;\n  this._next = null;\n  this._parent = parent;\n  this.__data__ = datum;\n}\n\nEnterNode.prototype = {\n  constructor: EnterNode,\n  appendChild: function(child) { return this._parent.insertBefore(child, this._next); },\n  insertBefore: function(child, next) { return this._parent.insertBefore(child, next); },\n  querySelector: function(selector) { return this._parent.querySelector(selector); },\n  querySelectorAll: function(selector) { return this._parent.querySelectorAll(selector); }\n};\n","export default function(x) {\n  return function() {\n    return x;\n  };\n}\n","import {Selection} from \"./index\";\nimport {EnterNode} from \"./enter\";\nimport constant from \"../constant\";\n\nvar keyPrefix = \"$\"; // Protect against keys like “__proto__”.\n\nfunction bindIndex(parent, group, enter, update, exit, data) {\n  var i = 0,\n      node,\n      groupLength = group.length,\n      dataLength = data.length;\n\n  // Put any non-null nodes that fit into update.\n  // Put any null nodes into enter.\n  // Put any remaining data into enter.\n  for (; i < dataLength; ++i) {\n    if (node = group[i]) {\n      node.__data__ = data[i];\n      update[i] = node;\n    } else {\n      enter[i] = new EnterNode(parent, data[i]);\n    }\n  }\n\n  // Put any non-null nodes that don’t fit into exit.\n  for (; i < groupLength; ++i) {\n    if (node = group[i]) {\n      exit[i] = node;\n    }\n  }\n}\n\nfunction bindKey(parent, group, enter, update, exit, data, key) {\n  var i,\n      node,\n      nodeByKeyValue = {},\n      groupLength = group.length,\n      dataLength = data.length,\n      keyValues = new Array(groupLength),\n      keyValue;\n\n  // Compute the key for each node.\n  // If multiple nodes have the same key, the duplicates are added to exit.\n  for (i = 0; i < groupLength; ++i) {\n    if (node = group[i]) {\n      keyValues[i] = keyValue = keyPrefix + key.call(node, node.__data__, i, group);\n      if (keyValue in nodeByKeyValue) {\n        exit[i] = node;\n      } else {\n        nodeByKeyValue[keyValue] = node;\n      }\n    }\n  }\n\n  // Compute the key for each datum.\n  // If there a node associated with this key, join and add it to update.\n  // If there is not (or the key is a duplicate), add it to enter.\n  for (i = 0; i < dataLength; ++i) {\n    keyValue = keyPrefix + key.call(parent, data[i], i, data);\n    if (node = nodeByKeyValue[keyValue]) {\n      update[i] = node;\n      node.__data__ = data[i];\n      nodeByKeyValue[keyValue] = null;\n    } else {\n      enter[i] = new EnterNode(parent, data[i]);\n    }\n  }\n\n  // Add any remaining nodes that were not bound to data to exit.\n  for (i = 0; i < groupLength; ++i) {\n    if ((node = group[i]) && (nodeByKeyValue[keyValues[i]] === node)) {\n      exit[i] = node;\n    }\n  }\n}\n\nexport default function(value, key) {\n  if (!value) {\n    data = new Array(this.size()), j = -1;\n    this.each(function(d) { data[++j] = d; });\n    return data;\n  }\n\n  var bind = key ? bindKey : bindIndex,\n      parents = this._parents,\n      groups = this._groups;\n\n  if (typeof value !== \"function\") value = constant(value);\n\n  for (var m = groups.length, update = new Array(m), enter = new Array(m), exit = new Array(m), j = 0; j < m; ++j) {\n    var parent = parents[j],\n        group = groups[j],\n        groupLength = group.length,\n        data = value.call(parent, parent && parent.__data__, j, parents),\n        dataLength = data.length,\n        enterGroup = enter[j] = new Array(dataLength),\n        updateGroup = update[j] = new Array(dataLength),\n        exitGroup = exit[j] = new Array(groupLength);\n\n    bind(parent, group, enterGroup, updateGroup, exitGroup, data, key);\n\n    // Now connect the enter nodes to their following update node, such that\n    // appendChild can insert the materialized enter node before this node,\n    // rather than at the end of the parent node.\n    for (var i0 = 0, i1 = 0, previous, next; i0 < dataLength; ++i0) {\n      if (previous = enterGroup[i0]) {\n        if (i0 >= i1) i1 = i0 + 1;\n        while (!(next = updateGroup[i1]) && ++i1 < dataLength);\n        previous._next = next || null;\n      }\n    }\n  }\n\n  update = new Selection(update, parents);\n  update._enter = enter;\n  update._exit = exit;\n  return update;\n}\n","import {Selection} from \"./index\";\n\nexport default function(compare) {\n  if (!compare) compare = ascending;\n\n  function compareNode(a, b) {\n    return a && b ? compare(a.__data__, b.__data__) : !a - !b;\n  }\n\n  for (var groups = this._groups, m = groups.length, sortgroups = new Array(m), j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, sortgroup = sortgroups[j] = new Array(n), node, i = 0; i < n; ++i) {\n      if (node = group[i]) {\n        sortgroup[i] = node;\n      }\n    }\n    sortgroup.sort(compareNode);\n  }\n\n  return new Selection(sortgroups, this._parents).order();\n}\n\nfunction ascending(a, b) {\n  return a < b ? -1 : a > b ? 1 : a >= b ? 0 : NaN;\n}\n","import namespace from \"../namespace\";\n\nfunction attrRemove(name) {\n  return function() {\n    this.removeAttribute(name);\n  };\n}\n\nfunction attrRemoveNS(fullname) {\n  return function() {\n    this.removeAttributeNS(fullname.space, fullname.local);\n  };\n}\n\nfunction attrConstant(name, value) {\n  return function() {\n    this.setAttribute(name, value);\n  };\n}\n\nfunction attrConstantNS(fullname, value) {\n  return function() {\n    this.setAttributeNS(fullname.space, fullname.local, value);\n  };\n}\n\nfunction attrFunction(name, value) {\n  return function() {\n    var v = value.apply(this, arguments);\n    if (v == null) this.removeAttribute(name);\n    else this.setAttribute(name, v);\n  };\n}\n\nfunction attrFunctionNS(fullname, value) {\n  return function() {\n    var v = value.apply(this, arguments);\n    if (v == null) this.removeAttributeNS(fullname.space, fullname.local);\n    else this.setAttributeNS(fullname.space, fullname.local, v);\n  };\n}\n\nexport default function(name, value) {\n  var fullname = namespace(name);\n\n  if (arguments.length < 2) {\n    var node = this.node();\n    return fullname.local\n        ? node.getAttributeNS(fullname.space, fullname.local)\n        : node.getAttribute(fullname);\n  }\n\n  return this.each((value == null\n      ? (fullname.local ? attrRemoveNS : attrRemove) : (typeof value === \"function\"\n      ? (fullname.local ? attrFunctionNS : attrFunction)\n      : (fullname.local ? attrConstantNS : attrConstant)))(fullname, value));\n}\n","export default function(node) {\n  return (node.ownerDocument && node.ownerDocument.defaultView) // node is a Node\n      || (node.document && node) // node is a Window\n      || node.defaultView; // node is a Document\n}\n","import defaultView from \"../window\";\n\nfunction styleRemove(name) {\n  return function() {\n    this.style.removeProperty(name);\n  };\n}\n\nfunction styleConstant(name, value, priority) {\n  return function() {\n    this.style.setProperty(name, value, priority);\n  };\n}\n\nfunction styleFunction(name, value, priority) {\n  return function() {\n    var v = value.apply(this, arguments);\n    if (v == null) this.style.removeProperty(name);\n    else this.style.setProperty(name, v, priority);\n  };\n}\n\nexport default function(name, value, priority) {\n  return arguments.length > 1\n      ? this.each((value == null\n            ? styleRemove : typeof value === \"function\"\n            ? styleFunction\n            : styleConstant)(name, value, priority == null ? \"\" : priority))\n      : styleValue(this.node(), name);\n}\n\nexport function styleValue(node, name) {\n  return node.style.getPropertyValue(name)\n      || defaultView(node).getComputedStyle(node, null).getPropertyValue(name);\n}\n","function classArray(string) {\n  return string.trim().split(/^|\\s+/);\n}\n\nfunction classList(node) {\n  return node.classList || new ClassList(node);\n}\n\nfunction ClassList(node) {\n  this._node = node;\n  this._names = classArray(node.getAttribute(\"class\") || \"\");\n}\n\nClassList.prototype = {\n  add: function(name) {\n    var i = this._names.indexOf(name);\n    if (i < 0) {\n      this._names.push(name);\n      this._node.setAttribute(\"class\", this._names.join(\" \"));\n    }\n  },\n  remove: function(name) {\n    var i = this._names.indexOf(name);\n    if (i >= 0) {\n      this._names.splice(i, 1);\n      this._node.setAttribute(\"class\", this._names.join(\" \"));\n    }\n  },\n  contains: function(name) {\n    return this._names.indexOf(name) >= 0;\n  }\n};\n\nfunction classedAdd(node, names) {\n  var list = classList(node), i = -1, n = names.length;\n  while (++i < n) list.add(names[i]);\n}\n\nfunction classedRemove(node, names) {\n  var list = classList(node), i = -1, n = names.length;\n  while (++i < n) list.remove(names[i]);\n}\n\nfunction classedTrue(names) {\n  return function() {\n    classedAdd(this, names);\n  };\n}\n\nfunction classedFalse(names) {\n  return function() {\n    classedRemove(this, names);\n  };\n}\n\nfunction classedFunction(names, value) {\n  return function() {\n    (value.apply(this, arguments) ? classedAdd : classedRemove)(this, names);\n  };\n}\n\nexport default function(name, value) {\n  var names = classArray(name + \"\");\n\n  if (arguments.length < 2) {\n    var list = classList(this.node()), i = -1, n = names.length;\n    while (++i < n) if (!list.contains(names[i])) return false;\n    return true;\n  }\n\n  return this.each((typeof value === \"function\"\n      ? classedFunction : value\n      ? classedTrue\n      : classedFalse)(names, value));\n}\n","function textRemove() {\n  this.textContent = \"\";\n}\n\nfunction textConstant(value) {\n  return function() {\n    this.textContent = value;\n  };\n}\n\nfunction textFunction(value) {\n  return function() {\n    var v = value.apply(this, arguments);\n    this.textContent = v == null ? \"\" : v;\n  };\n}\n\nexport default function(value) {\n  return arguments.length\n      ? this.each(value == null\n          ? textRemove : (typeof value === \"function\"\n          ? textFunction\n          : textConstant)(value))\n      : this.node().textContent;\n}\n","function htmlRemove() {\n  this.innerHTML = \"\";\n}\n\nfunction htmlConstant(value) {\n  return function() {\n    this.innerHTML = value;\n  };\n}\n\nfunction htmlFunction(value) {\n  return function() {\n    var v = value.apply(this, arguments);\n    this.innerHTML = v == null ? \"\" : v;\n  };\n}\n\nexport default function(value) {\n  return arguments.length\n      ? this.each(value == null\n          ? htmlRemove : (typeof value === \"function\"\n          ? htmlFunction\n          : htmlConstant)(value))\n      : this.node().innerHTML;\n}\n","function raise() {\n  if (this.nextSibling) this.parentNode.appendChild(this);\n}\n\nexport default function() {\n  return this.each(raise);\n}\n","function lower() {\n  if (this.previousSibling) this.parentNode.insertBefore(this, this.parentNode.firstChild);\n}\n\nexport default function() {\n  return this.each(lower);\n}\n","import creator from \"../creator\";\nimport selector from \"../selector\";\n\nfunction constantNull() {\n  return null;\n}\n\nexport default function(name, before) {\n  var create = typeof name === \"function\" ? name : creator(name),\n      select = before == null ? constantNull : typeof before === \"function\" ? before : selector(before);\n  return this.select(function() {\n    return this.insertBefore(create.apply(this, arguments), select.apply(this, arguments) || null);\n  });\n}\n","function remove() {\n  var parent = this.parentNode;\n  if (parent) parent.removeChild(this);\n}\n\nexport default function() {\n  return this.each(remove);\n}\n","function selection_cloneShallow() {\n  return this.parentNode.insertBefore(this.cloneNode(false), this.nextSibling);\n}\n\nfunction selection_cloneDeep() {\n  return this.parentNode.insertBefore(this.cloneNode(true), this.nextSibling);\n}\n\nexport default function(deep) {\n  return this.select(deep ? selection_cloneDeep : selection_cloneShallow);\n}\n","var filterEvents = {};\n\nexport var event = null;\n\nif (typeof document !== \"undefined\") {\n  var element = document.documentElement;\n  if (!(\"onmouseenter\" in element)) {\n    filterEvents = {mouseenter: \"mouseover\", mouseleave: \"mouseout\"};\n  }\n}\n\nfunction filterContextListener(listener, index, group) {\n  listener = contextListener(listener, index, group);\n  return function(event) {\n    var related = event.relatedTarget;\n    if (!related || (related !== this && !(related.compareDocumentPosition(this) & 8))) {\n      listener.call(this, event);\n    }\n  };\n}\n\nfunction contextListener(listener, index, group) {\n  return function(event1) {\n    var event0 = event; // Events can be reentrant (e.g., focus).\n    event = event1;\n    try {\n      listener.call(this, this.__data__, index, group);\n    } finally {\n      event = event0;\n    }\n  };\n}\n\nfunction parseTypenames(typenames) {\n  return typenames.trim().split(/^|\\s+/).map(function(t) {\n    var name = \"\", i = t.indexOf(\".\");\n    if (i >= 0) name = t.slice(i + 1), t = t.slice(0, i);\n    return {type: t, name: name};\n  });\n}\n\nfunction onRemove(typename) {\n  return function() {\n    var on = this.__on;\n    if (!on) return;\n    for (var j = 0, i = -1, m = on.length, o; j < m; ++j) {\n      if (o = on[j], (!typename.type || o.type === typename.type) && o.name === typename.name) {\n        this.removeEventListener(o.type, o.listener, o.capture);\n      } else {\n        on[++i] = o;\n      }\n    }\n    if (++i) on.length = i;\n    else delete this.__on;\n  };\n}\n\nfunction onAdd(typename, value, capture) {\n  var wrap = filterEvents.hasOwnProperty(typename.type) ? filterContextListener : contextListener;\n  return function(d, i, group) {\n    var on = this.__on, o, listener = wrap(value, i, group);\n    if (on) for (var j = 0, m = on.length; j < m; ++j) {\n      if ((o = on[j]).type === typename.type && o.name === typename.name) {\n        this.removeEventListener(o.type, o.listener, o.capture);\n        this.addEventListener(o.type, o.listener = listener, o.capture = capture);\n        o.value = value;\n        return;\n      }\n    }\n    this.addEventListener(typename.type, listener, capture);\n    o = {type: typename.type, name: typename.name, value: value, listener: listener, capture: capture};\n    if (!on) this.__on = [o];\n    else on.push(o);\n  };\n}\n\nexport default function(typename, value, capture) {\n  var typenames = parseTypenames(typename + \"\"), i, n = typenames.length, t;\n\n  if (arguments.length < 2) {\n    var on = this.node().__on;\n    if (on) for (var j = 0, m = on.length, o; j < m; ++j) {\n      for (i = 0, o = on[j]; i < n; ++i) {\n        if ((t = typenames[i]).type === o.type && t.name === o.name) {\n          return o.value;\n        }\n      }\n    }\n    return;\n  }\n\n  on = value ? onAdd : onRemove;\n  if (capture == null) capture = false;\n  for (i = 0; i < n; ++i) this.each(on(typenames[i], value, capture));\n  return this;\n}\n\nexport function customEvent(event1, listener, that, args) {\n  var event0 = event;\n  event1.sourceEvent = event;\n  event = event1;\n  try {\n    return listener.apply(that, args);\n  } finally {\n    event = event0;\n  }\n}\n","import defaultView from \"../window\";\n\nfunction dispatchEvent(node, type, params) {\n  var window = defaultView(node),\n      event = window.CustomEvent;\n\n  if (typeof event === \"function\") {\n    event = new event(type, params);\n  } else {\n    event = window.document.createEvent(\"Event\");\n    if (params) event.initEvent(type, params.bubbles, params.cancelable), event.detail = params.detail;\n    else event.initEvent(type, false, false);\n  }\n\n  node.dispatchEvent(event);\n}\n\nfunction dispatchConstant(type, params) {\n  return function() {\n    return dispatchEvent(this, type, params);\n  };\n}\n\nfunction dispatchFunction(type, params) {\n  return function() {\n    return dispatchEvent(this, type, params.apply(this, arguments));\n  };\n}\n\nexport default function(type, params) {\n  return this.each((typeof params === \"function\"\n      ? dispatchFunction\n      : dispatchConstant)(type, params));\n}\n","import selection_select from \"./select\";\nimport selection_selectAll from \"./selectAll\";\nimport selection_filter from \"./filter\";\nimport selection_data from \"./data\";\nimport selection_enter from \"./enter\";\nimport selection_exit from \"./exit\";\nimport selection_merge from \"./merge\";\nimport selection_order from \"./order\";\nimport selection_sort from \"./sort\";\nimport selection_call from \"./call\";\nimport selection_nodes from \"./nodes\";\nimport selection_node from \"./node\";\nimport selection_size from \"./size\";\nimport selection_empty from \"./empty\";\nimport selection_each from \"./each\";\nimport selection_attr from \"./attr\";\nimport selection_style from \"./style\";\nimport selection_property from \"./property\";\nimport selection_classed from \"./classed\";\nimport selection_text from \"./text\";\nimport selection_html from \"./html\";\nimport selection_raise from \"./raise\";\nimport selection_lower from \"./lower\";\nimport selection_append from \"./append\";\nimport selection_insert from \"./insert\";\nimport selection_remove from \"./remove\";\nimport selection_clone from \"./clone\";\nimport selection_datum from \"./datum\";\nimport selection_on from \"./on\";\nimport selection_dispatch from \"./dispatch\";\n\nexport var root = [null];\n\nexport function Selection(groups, parents) {\n  this._groups = groups;\n  this._parents = parents;\n}\n\nfunction selection() {\n  return new Selection([[document.documentElement]], root);\n}\n\nSelection.prototype = selection.prototype = {\n  constructor: Selection,\n  select: selection_select,\n  selectAll: selection_selectAll,\n  filter: selection_filter,\n  data: selection_data,\n  enter: selection_enter,\n  exit: selection_exit,\n  merge: selection_merge,\n  order: selection_order,\n  sort: selection_sort,\n  call: selection_call,\n  nodes: selection_nodes,\n  node: selection_node,\n  size: selection_size,\n  empty: selection_empty,\n  each: selection_each,\n  attr: selection_attr,\n  style: selection_style,\n  property: selection_property,\n  classed: selection_classed,\n  text: selection_text,\n  html: selection_html,\n  raise: selection_raise,\n  lower: selection_lower,\n  append: selection_append,\n  insert: selection_insert,\n  remove: selection_remove,\n  clone: selection_clone,\n  datum: selection_datum,\n  on: selection_on,\n  dispatch: selection_dispatch\n};\n\nexport default selection;\n","import {Selection} from \"./index\";\nimport selector from \"../selector\";\n\nexport default function(select) {\n  if (typeof select !== \"function\") select = selector(select);\n\n  for (var groups = this._groups, m = groups.length, subgroups = new Array(m), j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, subgroup = subgroups[j] = new Array(n), node, subnode, i = 0; i < n; ++i) {\n      if ((node = group[i]) && (subnode = select.call(node, node.__data__, i, group))) {\n        if (\"__data__\" in node) subnode.__data__ = node.__data__;\n        subgroup[i] = subnode;\n      }\n    }\n  }\n\n  return new Selection(subgroups, this._parents);\n}\n","import {Selection} from \"./index\";\nimport selectorAll from \"../selectorAll\";\n\nexport default function(select) {\n  if (typeof select !== \"function\") select = selectorAll(select);\n\n  for (var groups = this._groups, m = groups.length, subgroups = [], parents = [], j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, node, i = 0; i < n; ++i) {\n      if (node = group[i]) {\n        subgroups.push(select.call(node, node.__data__, i, group));\n        parents.push(node);\n      }\n    }\n  }\n\n  return new Selection(subgroups, parents);\n}\n","import {Selection} from \"./index\";\nimport matcher from \"../matcher\";\n\nexport default function(match) {\n  if (typeof match !== \"function\") match = matcher(match);\n\n  for (var groups = this._groups, m = groups.length, subgroups = new Array(m), j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, subgroup = subgroups[j] = [], node, i = 0; i < n; ++i) {\n      if ((node = group[i]) && match.call(node, node.__data__, i, group)) {\n        subgroup.push(node);\n      }\n    }\n  }\n\n  return new Selection(subgroups, this._parents);\n}\n","import sparse from \"./sparse\";\nimport {Selection} from \"./index\";\n\nexport default function() {\n  return new Selection(this._exit || this._groups.map(sparse), this._parents);\n}\n","import {Selection} from \"./index\";\n\nexport default function(selection) {\n\n  for (var groups0 = this._groups, groups1 = selection._groups, m0 = groups0.length, m1 = groups1.length, m = Math.min(m0, m1), merges = new Array(m0), j = 0; j < m; ++j) {\n    for (var group0 = groups0[j], group1 = groups1[j], n = group0.length, merge = merges[j] = new Array(n), node, i = 0; i < n; ++i) {\n      if (node = group0[i] || group1[i]) {\n        merge[i] = node;\n      }\n    }\n  }\n\n  for (; j < m0; ++j) {\n    merges[j] = groups0[j];\n  }\n\n  return new Selection(merges, this._parents);\n}\n","export default function() {\n\n  for (var groups = this._groups, j = -1, m = groups.length; ++j < m;) {\n    for (var group = groups[j], i = group.length - 1, next = group[i], node; --i >= 0;) {\n      if (node = group[i]) {\n        if (next && next !== node.nextSibling) next.parentNode.insertBefore(node, next);\n        next = node;\n      }\n    }\n  }\n\n  return this;\n}\n","export default function() {\n  var callback = arguments[0];\n  arguments[0] = this;\n  callback.apply(null, arguments);\n  return this;\n}\n","export default function() {\n  var nodes = new Array(this.size()), i = -1;\n  this.each(function() { nodes[++i] = this; });\n  return nodes;\n}\n","export default function() {\n\n  for (var groups = this._groups, j = 0, m = groups.length; j < m; ++j) {\n    for (var group = groups[j], i = 0, n = group.length; i < n; ++i) {\n      var node = group[i];\n      if (node) return node;\n    }\n  }\n\n  return null;\n}\n","export default function() {\n  var size = 0;\n  this.each(function() { ++size; });\n  return size;\n}\n","export default function() {\n  return !this.node();\n}\n","export default function(callback) {\n\n  for (var groups = this._groups, j = 0, m = groups.length; j < m; ++j) {\n    for (var group = groups[j], i = 0, n = group.length, node; i < n; ++i) {\n      if (node = group[i]) callback.call(node, node.__data__, i, group);\n    }\n  }\n\n  return this;\n}\n","function propertyRemove(name) {\n  return function() {\n    delete this[name];\n  };\n}\n\nfunction propertyConstant(name, value) {\n  return function() {\n    this[name] = value;\n  };\n}\n\nfunction propertyFunction(name, value) {\n  return function() {\n    var v = value.apply(this, arguments);\n    if (v == null) delete this[name];\n    else this[name] = v;\n  };\n}\n\nexport default function(name, value) {\n  return arguments.length > 1\n      ? this.each((value == null\n          ? propertyRemove : typeof value === \"function\"\n          ? propertyFunction\n          : propertyConstant)(name, value))\n      : this.node()[name];\n}\n","import creator from \"../creator\";\n\nexport default function(name) {\n  var create = typeof name === \"function\" ? name : creator(name);\n  return this.select(function() {\n    return this.appendChild(create.apply(this, arguments));\n  });\n}\n","export default function(value) {\n  return arguments.length\n      ? this.property(\"__data__\", value)\n      : this.node().__data__;\n}\n","import {Selection, root} from \"./selection/index\";\n\nexport default function(selector) {\n  return typeof selector === \"string\"\n      ? new Selection([[document.querySelector(selector)]], [document.documentElement])\n      : new Selection([[selector]], root);\n}\n","var nextId = 0;\n\nexport default function local() {\n  return new Local;\n}\n\nfunction Local() {\n  this._ = \"@\" + (++nextId).toString(36);\n}\n\nLocal.prototype = local.prototype = {\n  constructor: Local,\n  get: function(node) {\n    var id = this._;\n    while (!(id in node)) if (!(node = node.parentNode)) return;\n    return node[id];\n  },\n  set: function(node, value) {\n    return node[this._] = value;\n  },\n  remove: function(node) {\n    return this._ in node && delete node[this._];\n  },\n  toString: function() {\n    return this._;\n  }\n};\n","import {event} from \"./selection/on\";\n\nexport default function() {\n  var current = event, source;\n  while (source = current.sourceEvent) current = source;\n  return current;\n}\n","export default function(node, event) {\n  var svg = node.ownerSVGElement || node;\n\n  if (svg.createSVGPoint) {\n    var point = svg.createSVGPoint();\n    point.x = event.clientX, point.y = event.clientY;\n    point = point.matrixTransform(node.getScreenCTM().inverse());\n    return [point.x, point.y];\n  }\n\n  var rect = node.getBoundingClientRect();\n  return [event.clientX - rect.left - node.clientLeft, event.clientY - rect.top - node.clientTop];\n}\n","import sourceEvent from \"./sourceEvent\";\nimport point from \"./point\";\n\nexport default function(node) {\n  var event = sourceEvent();\n  if (event.changedTouches) event = event.changedTouches[0];\n  return point(node, event);\n}\n","import sourceEvent from \"./sourceEvent\";\nimport point from \"./point\";\n\nexport default function(node, touches, identifier) {\n  if (arguments.length < 3) identifier = touches, touches = sourceEvent().changedTouches;\n\n  for (var i = 0, n = touches ? touches.length : 0, touch; i < n; ++i) {\n    if ((touch = touches[i]).identifier === identifier) {\n      return point(node, touch);\n    }\n  }\n\n  return null;\n}\n","var noop = {value: function() {}};\n\nfunction dispatch() {\n  for (var i = 0, n = arguments.length, _ = {}, t; i < n; ++i) {\n    if (!(t = arguments[i] + \"\") || (t in _)) throw new Error(\"illegal type: \" + t);\n    _[t] = [];\n  }\n  return new Dispatch(_);\n}\n\nfunction Dispatch(_) {\n  this._ = _;\n}\n\nfunction parseTypenames(typenames, types) {\n  return typenames.trim().split(/^|\\s+/).map(function(t) {\n    var name = \"\", i = t.indexOf(\".\");\n    if (i >= 0) name = t.slice(i + 1), t = t.slice(0, i);\n    if (t && !types.hasOwnProperty(t)) throw new Error(\"unknown type: \" + t);\n    return {type: t, name: name};\n  });\n}\n\nDispatch.prototype = dispatch.prototype = {\n  constructor: Dispatch,\n  on: function(typename, callback) {\n    var _ = this._,\n        T = parseTypenames(typename + \"\", _),\n        t,\n        i = -1,\n        n = T.length;\n\n    // If no callback was specified, return the callback of the given type and name.\n    if (arguments.length < 2) {\n      while (++i < n) if ((t = (typename = T[i]).type) && (t = get(_[t], typename.name))) return t;\n      return;\n    }\n\n    // If a type was specified, set the callback for the given type and name.\n    // Otherwise, if a null callback was specified, remove callbacks of the given name.\n    if (callback != null && typeof callback !== \"function\") throw new Error(\"invalid callback: \" + callback);\n    while (++i < n) {\n      if (t = (typename = T[i]).type) _[t] = set(_[t], typename.name, callback);\n      else if (callback == null) for (t in _) _[t] = set(_[t], typename.name, null);\n    }\n\n    return this;\n  },\n  copy: function() {\n    var copy = {}, _ = this._;\n    for (var t in _) copy[t] = _[t].slice();\n    return new Dispatch(copy);\n  },\n  call: function(type, that) {\n    if ((n = arguments.length - 2) > 0) for (var args = new Array(n), i = 0, n, t; i < n; ++i) args[i] = arguments[i + 2];\n    if (!this._.hasOwnProperty(type)) throw new Error(\"unknown type: \" + type);\n    for (t = this._[type], i = 0, n = t.length; i < n; ++i) t[i].value.apply(that, args);\n  },\n  apply: function(type, that, args) {\n    if (!this._.hasOwnProperty(type)) throw new Error(\"unknown type: \" + type);\n    for (var t = this._[type], i = 0, n = t.length; i < n; ++i) t[i].value.apply(that, args);\n  }\n};\n\nfunction get(type, name) {\n  for (var i = 0, n = type.length, c; i < n; ++i) {\n    if ((c = type[i]).name === name) {\n      return c.value;\n    }\n  }\n}\n\nfunction set(type, name, callback) {\n  for (var i = 0, n = type.length; i < n; ++i) {\n    if (type[i].name === name) {\n      type[i] = noop, type = type.slice(0, i).concat(type.slice(i + 1));\n      break;\n    }\n  }\n  if (callback != null) type.push({name: name, value: callback});\n  return type;\n}\n\nexport default dispatch;\n","import {event} from \"d3-selection\";\n\nexport function nopropagation() {\n  event.stopImmediatePropagation();\n}\n\nexport default function() {\n  event.preventDefault();\n  event.stopImmediatePropagation();\n}\n","import {select} from \"d3-selection\";\nimport noevent from \"./noevent\";\n\nexport default function(view) {\n  var root = view.document.documentElement,\n      selection = select(view).on(\"dragstart.drag\", noevent, true);\n  if (\"onselectstart\" in root) {\n    selection.on(\"selectstart.drag\", noevent, true);\n  } else {\n    root.__noselect = root.style.MozUserSelect;\n    root.style.MozUserSelect = \"none\";\n  }\n}\n\nexport function yesdrag(view, noclick) {\n  var root = view.document.documentElement,\n      selection = select(view).on(\"dragstart.drag\", null);\n  if (noclick) {\n    selection.on(\"click.drag\", noevent, true);\n    setTimeout(function() { selection.on(\"click.drag\", null); }, 0);\n  }\n  if (\"onselectstart\" in root) {\n    selection.on(\"selectstart.drag\", null);\n  } else {\n    root.style.MozUserSelect = root.__noselect;\n    delete root.__noselect;\n  }\n}\n","export default function(x) {\n  return function() {\n    return x;\n  };\n}\n","export default function DragEvent(target, type, subject, id, active, x, y, dx, dy, dispatch) {\n  this.target = target;\n  this.type = type;\n  this.subject = subject;\n  this.identifier = id;\n  this.active = active;\n  this.x = x;\n  this.y = y;\n  this.dx = dx;\n  this.dy = dy;\n  this._ = dispatch;\n}\n\nDragEvent.prototype.on = function() {\n  var value = this._.on.apply(this._, arguments);\n  return value === this._ ? this : value;\n};\n","import {dispatch} from \"d3-dispatch\";\nimport {event, customEvent, select, mouse, touch} from \"d3-selection\";\nimport nodrag, {yesdrag} from \"./nodrag\";\nimport noevent, {nopropagation} from \"./noevent\";\nimport constant from \"./constant\";\nimport DragEvent from \"./event\";\n\n// Ignore right-click, since that should open the context menu.\nfunction defaultFilter() {\n  return !event.button;\n}\n\nfunction defaultContainer() {\n  return this.parentNode;\n}\n\nfunction defaultSubject(d) {\n  return d == null ? {x: event.x, y: event.y} : d;\n}\n\nfunction defaultTouchable() {\n  return \"ontouchstart\" in this;\n}\n\nexport default function() {\n  var filter = defaultFilter,\n      container = defaultContainer,\n      subject = defaultSubject,\n      touchable = defaultTouchable,\n      gestures = {},\n      listeners = dispatch(\"start\", \"drag\", \"end\"),\n      active = 0,\n      mousedownx,\n      mousedowny,\n      mousemoving,\n      touchending,\n      clickDistance2 = 0;\n\n  function drag(selection) {\n    selection\n        .on(\"mousedown.drag\", mousedowned)\n      .filter(touchable)\n        .on(\"touchstart.drag\", touchstarted)\n        .on(\"touchmove.drag\", touchmoved)\n        .on(\"touchend.drag touchcancel.drag\", touchended)\n        .style(\"touch-action\", \"none\")\n        .style(\"-webkit-tap-highlight-color\", \"rgba(0,0,0,0)\");\n  }\n\n  function mousedowned() {\n    if (touchending || !filter.apply(this, arguments)) return;\n    var gesture = beforestart(\"mouse\", container.apply(this, arguments), mouse, this, arguments);\n    if (!gesture) return;\n    select(event.view).on(\"mousemove.drag\", mousemoved, true).on(\"mouseup.drag\", mouseupped, true);\n    nodrag(event.view);\n    nopropagation();\n    mousemoving = false;\n    mousedownx = event.clientX;\n    mousedowny = event.clientY;\n    gesture(\"start\");\n  }\n\n  function mousemoved() {\n    noevent();\n    if (!mousemoving) {\n      var dx = event.clientX - mousedownx, dy = event.clientY - mousedowny;\n      mousemoving = dx * dx + dy * dy > clickDistance2;\n    }\n    gestures.mouse(\"drag\");\n  }\n\n  function mouseupped() {\n    select(event.view).on(\"mousemove.drag mouseup.drag\", null);\n    yesdrag(event.view, mousemoving);\n    noevent();\n    gestures.mouse(\"end\");\n  }\n\n  function touchstarted() {\n    if (!filter.apply(this, arguments)) return;\n    var touches = event.changedTouches,\n        c = container.apply(this, arguments),\n        n = touches.length, i, gesture;\n\n    for (i = 0; i < n; ++i) {\n      if (gesture = beforestart(touches[i].identifier, c, touch, this, arguments)) {\n        nopropagation();\n        gesture(\"start\");\n      }\n    }\n  }\n\n  function touchmoved() {\n    var touches = event.changedTouches,\n        n = touches.length, i, gesture;\n\n    for (i = 0; i < n; ++i) {\n      if (gesture = gestures[touches[i].identifier]) {\n        noevent();\n        gesture(\"drag\");\n      }\n    }\n  }\n\n  function touchended() {\n    var touches = event.changedTouches,\n        n = touches.length, i, gesture;\n\n    if (touchending) clearTimeout(touchending);\n    touchending = setTimeout(function() { touchending = null; }, 500); // Ghost clicks are delayed!\n    for (i = 0; i < n; ++i) {\n      if (gesture = gestures[touches[i].identifier]) {\n        nopropagation();\n        gesture(\"end\");\n      }\n    }\n  }\n\n  function beforestart(id, container, point, that, args) {\n    var p = point(container, id), s, dx, dy,\n        sublisteners = listeners.copy();\n\n    if (!customEvent(new DragEvent(drag, \"beforestart\", s, id, active, p[0], p[1], 0, 0, sublisteners), function() {\n      if ((event.subject = s = subject.apply(that, args)) == null) return false;\n      dx = s.x - p[0] || 0;\n      dy = s.y - p[1] || 0;\n      return true;\n    })) return;\n\n    return function gesture(type) {\n      var p0 = p, n;\n      switch (type) {\n        case \"start\": gestures[id] = gesture, n = active++; break;\n        case \"end\": delete gestures[id], --active; // nobreak\n        case \"drag\": p = point(container, id), n = active; break;\n      }\n      customEvent(new DragEvent(drag, type, s, id, n, p[0] + dx, p[1] + dy, p[0] - p0[0], p[1] - p0[1], sublisteners), sublisteners.apply, sublisteners, [type, that, args]);\n    };\n  }\n\n  drag.filter = function(_) {\n    return arguments.length ? (filter = typeof _ === \"function\" ? _ : constant(!!_), drag) : filter;\n  };\n\n  drag.container = function(_) {\n    return arguments.length ? (container = typeof _ === \"function\" ? _ : constant(_), drag) : container;\n  };\n\n  drag.subject = function(_) {\n    return arguments.length ? (subject = typeof _ === \"function\" ? _ : constant(_), drag) : subject;\n  };\n\n  drag.touchable = function(_) {\n    return arguments.length ? (touchable = typeof _ === \"function\" ? _ : constant(!!_), drag) : touchable;\n  };\n\n  drag.on = function() {\n    var value = listeners.on.apply(listeners, arguments);\n    return value === listeners ? drag : value;\n  };\n\n  drag.clickDistance = function(_) {\n    return arguments.length ? (clickDistance2 = (_ = +_) * _, drag) : Math.sqrt(clickDistance2);\n  };\n\n  return drag;\n}\n","var frame = 0, // is an animation frame pending?\n    timeout = 0, // is a timeout pending?\n    interval = 0, // are any timers active?\n    pokeDelay = 1000, // how frequently we check for clock skew\n    taskHead,\n    taskTail,\n    clockLast = 0,\n    clockNow = 0,\n    clockSkew = 0,\n    clock = typeof performance === \"object\" && performance.now ? performance : Date,\n    setFrame = typeof window === \"object\" && window.requestAnimationFrame ? window.requestAnimationFrame.bind(window) : function(f) { setTimeout(f, 17); };\n\nexport function now() {\n  return clockNow || (setFrame(clearNow), clockNow = clock.now() + clockSkew);\n}\n\nfunction clearNow() {\n  clockNow = 0;\n}\n\nexport function Timer() {\n  this._call =\n  this._time =\n  this._next = null;\n}\n\nTimer.prototype = timer.prototype = {\n  constructor: Timer,\n  restart: function(callback, delay, time) {\n    if (typeof callback !== \"function\") throw new TypeError(\"callback is not a function\");\n    time = (time == null ? now() : +time) + (delay == null ? 0 : +delay);\n    if (!this._next && taskTail !== this) {\n      if (taskTail) taskTail._next = this;\n      else taskHead = this;\n      taskTail = this;\n    }\n    this._call = callback;\n    this._time = time;\n    sleep();\n  },\n  stop: function() {\n    if (this._call) {\n      this._call = null;\n      this._time = Infinity;\n      sleep();\n    }\n  }\n};\n\nexport function timer(callback, delay, time) {\n  var t = new Timer;\n  t.restart(callback, delay, time);\n  return t;\n}\n\nexport function timerFlush() {\n  now(); // Get the current time, if not already set.\n  ++frame; // Pretend we’ve set an alarm, if we haven’t already.\n  var t = taskHead, e;\n  while (t) {\n    if ((e = clockNow - t._time) >= 0) t._call.call(null, e);\n    t = t._next;\n  }\n  --frame;\n}\n\nfunction wake() {\n  clockNow = (clockLast = clock.now()) + clockSkew;\n  frame = timeout = 0;\n  try {\n    timerFlush();\n  } finally {\n    frame = 0;\n    nap();\n    clockNow = 0;\n  }\n}\n\nfunction poke() {\n  var now = clock.now(), delay = now - clockLast;\n  if (delay > pokeDelay) clockSkew -= delay, clockLast = now;\n}\n\nfunction nap() {\n  var t0, t1 = taskHead, t2, time = Infinity;\n  while (t1) {\n    if (t1._call) {\n      if (time > t1._time) time = t1._time;\n      t0 = t1, t1 = t1._next;\n    } else {\n      t2 = t1._next, t1._next = null;\n      t1 = t0 ? t0._next = t2 : taskHead = t2;\n    }\n  }\n  taskTail = t0;\n  sleep(time);\n}\n\nfunction sleep(time) {\n  if (frame) return; // Soonest alarm already set, or will be.\n  if (timeout) timeout = clearTimeout(timeout);\n  var delay = time - clockNow; // Strictly less than if we recomputed clockNow.\n  if (delay > 24) {\n    if (time < Infinity) timeout = setTimeout(wake, time - clock.now() - clockSkew);\n    if (interval) interval = clearInterval(interval);\n  } else {\n    if (!interval) clockLast = clock.now(), interval = setInterval(poke, pokeDelay);\n    frame = 1, setFrame(wake);\n  }\n}\n","import {Timer} from \"./timer\";\n\nexport default function(callback, delay, time) {\n  var t = new Timer;\n  delay = delay == null ? 0 : +delay;\n  t.restart(function(elapsed) {\n    t.stop();\n    callback(elapsed + delay);\n  }, delay, time);\n  return t;\n}\n","import {dispatch} from \"d3-dispatch\";\nimport {timer, timeout} from \"d3-timer\";\n\nvar emptyOn = dispatch(\"start\", \"end\", \"interrupt\");\nvar emptyTween = [];\n\nexport var CREATED = 0;\nexport var SCHEDULED = 1;\nexport var STARTING = 2;\nexport var STARTED = 3;\nexport var RUNNING = 4;\nexport var ENDING = 5;\nexport var ENDED = 6;\n\nexport default function(node, name, id, index, group, timing) {\n  var schedules = node.__transition;\n  if (!schedules) node.__transition = {};\n  else if (id in schedules) return;\n  create(node, id, {\n    name: name,\n    index: index, // For context during callback.\n    group: group, // For context during callback.\n    on: emptyOn,\n    tween: emptyTween,\n    time: timing.time,\n    delay: timing.delay,\n    duration: timing.duration,\n    ease: timing.ease,\n    timer: null,\n    state: CREATED\n  });\n}\n\nexport function init(node, id) {\n  var schedule = get(node, id);\n  if (schedule.state > CREATED) throw new Error(\"too late; already scheduled\");\n  return schedule;\n}\n\nexport function set(node, id) {\n  var schedule = get(node, id);\n  if (schedule.state > STARTING) throw new Error(\"too late; already started\");\n  return schedule;\n}\n\nexport function get(node, id) {\n  var schedule = node.__transition;\n  if (!schedule || !(schedule = schedule[id])) throw new Error(\"transition not found\");\n  return schedule;\n}\n\nfunction create(node, id, self) {\n  var schedules = node.__transition,\n      tween;\n\n  // Initialize the self timer when the transition is created.\n  // Note the actual delay is not known until the first callback!\n  schedules[id] = self;\n  self.timer = timer(schedule, 0, self.time);\n\n  function schedule(elapsed) {\n    self.state = SCHEDULED;\n    self.timer.restart(start, self.delay, self.time);\n\n    // If the elapsed delay is less than our first sleep, start immediately.\n    if (self.delay <= elapsed) start(elapsed - self.delay);\n  }\n\n  function start(elapsed) {\n    var i, j, n, o;\n\n    // If the state is not SCHEDULED, then we previously errored on start.\n    if (self.state !== SCHEDULED) return stop();\n\n    for (i in schedules) {\n      o = schedules[i];\n      if (o.name !== self.name) continue;\n\n      // While this element already has a starting transition during this frame,\n      // defer starting an interrupting transition until that transition has a\n      // chance to tick (and possibly end); see d3/d3-transition#54!\n      if (o.state === STARTED) return timeout(start);\n\n      // Interrupt the active transition, if any.\n      // Dispatch the interrupt event.\n      if (o.state === RUNNING) {\n        o.state = ENDED;\n        o.timer.stop();\n        o.on.call(\"interrupt\", node, node.__data__, o.index, o.group);\n        delete schedules[i];\n      }\n\n      // Cancel any pre-empted transitions. No interrupt event is dispatched\n      // because the cancelled transitions never started. Note that this also\n      // removes this transition from the pending list!\n      else if (+i < id) {\n        o.state = ENDED;\n        o.timer.stop();\n        delete schedules[i];\n      }\n    }\n\n    // Defer the first tick to end of the current frame; see d3/d3#1576.\n    // Note the transition may be canceled after start and before the first tick!\n    // Note this must be scheduled before the start event; see d3/d3-transition#16!\n    // Assuming this is successful, subsequent callbacks go straight to tick.\n    timeout(function() {\n      if (self.state === STARTED) {\n        self.state = RUNNING;\n        self.timer.restart(tick, self.delay, self.time);\n        tick(elapsed);\n      }\n    });\n\n    // Dispatch the start event.\n    // Note this must be done before the tween are initialized.\n    self.state = STARTING;\n    self.on.call(\"start\", node, node.__data__, self.index, self.group);\n    if (self.state !== STARTING) return; // interrupted\n    self.state = STARTED;\n\n    // Initialize the tween, deleting null tween.\n    tween = new Array(n = self.tween.length);\n    for (i = 0, j = -1; i < n; ++i) {\n      if (o = self.tween[i].value.call(node, node.__data__, self.index, self.group)) {\n        tween[++j] = o;\n      }\n    }\n    tween.length = j + 1;\n  }\n\n  function tick(elapsed) {\n    var t = elapsed < self.duration ? self.ease.call(null, elapsed / self.duration) : (self.timer.restart(stop), self.state = ENDING, 1),\n        i = -1,\n        n = tween.length;\n\n    while (++i < n) {\n      tween[i].call(null, t);\n    }\n\n    // Dispatch the end event.\n    if (self.state === ENDING) {\n      self.on.call(\"end\", node, node.__data__, self.index, self.group);\n      stop();\n    }\n  }\n\n  function stop() {\n    self.state = ENDED;\n    self.timer.stop();\n    delete schedules[id];\n    for (var i in schedules) return; // eslint-disable-line no-unused-vars\n    delete node.__transition;\n  }\n}\n","import {get, set} from \"./schedule\";\n\nfunction tweenRemove(id, name) {\n  var tween0, tween1;\n  return function() {\n    var schedule = set(this, id),\n        tween = schedule.tween;\n\n    // If this node shared tween with the previous node,\n    // just assign the updated shared tween and we’re done!\n    // Otherwise, copy-on-write.\n    if (tween !== tween0) {\n      tween1 = tween0 = tween;\n      for (var i = 0, n = tween1.length; i < n; ++i) {\n        if (tween1[i].name === name) {\n          tween1 = tween1.slice();\n          tween1.splice(i, 1);\n          break;\n        }\n      }\n    }\n\n    schedule.tween = tween1;\n  };\n}\n\nfunction tweenFunction(id, name, value) {\n  var tween0, tween1;\n  if (typeof value !== \"function\") throw new Error;\n  return function() {\n    var schedule = set(this, id),\n        tween = schedule.tween;\n\n    // If this node shared tween with the previous node,\n    // just assign the updated shared tween and we’re done!\n    // Otherwise, copy-on-write.\n    if (tween !== tween0) {\n      tween1 = (tween0 = tween).slice();\n      for (var t = {name: name, value: value}, i = 0, n = tween1.length; i < n; ++i) {\n        if (tween1[i].name === name) {\n          tween1[i] = t;\n          break;\n        }\n      }\n      if (i === n) tween1.push(t);\n    }\n\n    schedule.tween = tween1;\n  };\n}\n\nexport default function(name, value) {\n  var id = this._id;\n\n  name += \"\";\n\n  if (arguments.length < 2) {\n    var tween = get(this.node(), id).tween;\n    for (var i = 0, n = tween.length, t; i < n; ++i) {\n      if ((t = tween[i]).name === name) {\n        return t.value;\n      }\n    }\n    return null;\n  }\n\n  return this.each((value == null ? tweenRemove : tweenFunction)(id, name, value));\n}\n\nexport function tweenValue(transition, name, value) {\n  var id = transition._id;\n\n  transition.each(function() {\n    var schedule = set(this, id);\n    (schedule.value || (schedule.value = {}))[name] = value.apply(this, arguments);\n  });\n\n  return function(node) {\n    return get(node, id).value[name];\n  };\n}\n","import {color} from \"d3-color\";\nimport {interpolateNumber, interpolateRgb, interpolateString} from \"d3-interpolate\";\n\nexport default function(a, b) {\n  var c;\n  return (typeof b === \"number\" ? interpolateNumber\n      : b instanceof color ? interpolateRgb\n      : (c = color(b)) ? (b = c, interpolateRgb)\n      : interpolateString)(a, b);\n}\n","function removeFunction(id) {\n  return function() {\n    var parent = this.parentNode;\n    for (var i in this.__transition) if (+i !== id) return;\n    if (parent) parent.removeChild(this);\n  };\n}\n\nexport default function() {\n  return this.on(\"end.remove\", removeFunction(this._id));\n}\n","import {selection} from \"d3-selection\";\n\nvar Selection = selection.prototype.constructor;\n\nexport default function() {\n  return new Selection(this._groups, this._parents);\n}\n","import {tweenValue} from \"./tween\";\n\nfunction textConstant(value) {\n  return function() {\n    this.textContent = value;\n  };\n}\n\nfunction textFunction(value) {\n  return function() {\n    var value1 = value(this);\n    this.textContent = value1 == null ? \"\" : value1;\n  };\n}\n\nexport default function(value) {\n  return this.tween(\"text\", typeof value === \"function\"\n      ? textFunction(tweenValue(this, \"text\", value))\n      : textConstant(value == null ? \"\" : value + \"\"));\n}\n","import {selection} from \"d3-selection\";\nimport transition_attr from \"./attr\";\nimport transition_attrTween from \"./attrTween\";\nimport transition_delay from \"./delay\";\nimport transition_duration from \"./duration\";\nimport transition_ease from \"./ease\";\nimport transition_filter from \"./filter\";\nimport transition_merge from \"./merge\";\nimport transition_on from \"./on\";\nimport transition_remove from \"./remove\";\nimport transition_select from \"./select\";\nimport transition_selectAll from \"./selectAll\";\nimport transition_selection from \"./selection\";\nimport transition_style from \"./style\";\nimport transition_styleTween from \"./styleTween\";\nimport transition_text from \"./text\";\nimport transition_transition from \"./transition\";\nimport transition_tween from \"./tween\";\n\nvar id = 0;\n\nexport function Transition(groups, parents, name, id) {\n  this._groups = groups;\n  this._parents = parents;\n  this._name = name;\n  this._id = id;\n}\n\nexport default function transition(name) {\n  return selection().transition(name);\n}\n\nexport function newId() {\n  return ++id;\n}\n\nvar selection_prototype = selection.prototype;\n\nTransition.prototype = transition.prototype = {\n  constructor: Transition,\n  select: transition_select,\n  selectAll: transition_selectAll,\n  filter: transition_filter,\n  merge: transition_merge,\n  selection: transition_selection,\n  transition: transition_transition,\n  call: selection_prototype.call,\n  nodes: selection_prototype.nodes,\n  node: selection_prototype.node,\n  size: selection_prototype.size,\n  empty: selection_prototype.empty,\n  each: selection_prototype.each,\n  on: transition_on,\n  attr: transition_attr,\n  attrTween: transition_attrTween,\n  style: transition_style,\n  styleTween: transition_styleTween,\n  text: transition_text,\n  remove: transition_remove,\n  tween: transition_tween,\n  delay: transition_delay,\n  duration: transition_duration,\n  ease: transition_ease\n};\n","import {selector} from \"d3-selection\";\nimport {Transition} from \"./index\";\nimport schedule, {get} from \"./schedule\";\n\nexport default function(select) {\n  var name = this._name,\n      id = this._id;\n\n  if (typeof select !== \"function\") select = selector(select);\n\n  for (var groups = this._groups, m = groups.length, subgroups = new Array(m), j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, subgroup = subgroups[j] = new Array(n), node, subnode, i = 0; i < n; ++i) {\n      if ((node = group[i]) && (subnode = select.call(node, node.__data__, i, group))) {\n        if (\"__data__\" in node) subnode.__data__ = node.__data__;\n        subgroup[i] = subnode;\n        schedule(subgroup[i], name, id, i, subgroup, get(node, id));\n      }\n    }\n  }\n\n  return new Transition(subgroups, this._parents, name, id);\n}\n","import {selectorAll} from \"d3-selection\";\nimport {Transition} from \"./index\";\nimport schedule, {get} from \"./schedule\";\n\nexport default function(select) {\n  var name = this._name,\n      id = this._id;\n\n  if (typeof select !== \"function\") select = selectorAll(select);\n\n  for (var groups = this._groups, m = groups.length, subgroups = [], parents = [], j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, node, i = 0; i < n; ++i) {\n      if (node = group[i]) {\n        for (var children = select.call(node, node.__data__, i, group), child, inherit = get(node, id), k = 0, l = children.length; k < l; ++k) {\n          if (child = children[k]) {\n            schedule(child, name, id, k, children, inherit);\n          }\n        }\n        subgroups.push(children);\n        parents.push(node);\n      }\n    }\n  }\n\n  return new Transition(subgroups, parents, name, id);\n}\n","import {matcher} from \"d3-selection\";\nimport {Transition} from \"./index\";\n\nexport default function(match) {\n  if (typeof match !== \"function\") match = matcher(match);\n\n  for (var groups = this._groups, m = groups.length, subgroups = new Array(m), j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, subgroup = subgroups[j] = [], node, i = 0; i < n; ++i) {\n      if ((node = group[i]) && match.call(node, node.__data__, i, group)) {\n        subgroup.push(node);\n      }\n    }\n  }\n\n  return new Transition(subgroups, this._parents, this._name, this._id);\n}\n","import {Transition} from \"./index\";\n\nexport default function(transition) {\n  if (transition._id !== this._id) throw new Error;\n\n  for (var groups0 = this._groups, groups1 = transition._groups, m0 = groups0.length, m1 = groups1.length, m = Math.min(m0, m1), merges = new Array(m0), j = 0; j < m; ++j) {\n    for (var group0 = groups0[j], group1 = groups1[j], n = group0.length, merge = merges[j] = new Array(n), node, i = 0; i < n; ++i) {\n      if (node = group0[i] || group1[i]) {\n        merge[i] = node;\n      }\n    }\n  }\n\n  for (; j < m0; ++j) {\n    merges[j] = groups0[j];\n  }\n\n  return new Transition(merges, this._parents, this._name, this._id);\n}\n","import {Transition, newId} from \"./index\";\nimport schedule, {get} from \"./schedule\";\n\nexport default function() {\n  var name = this._name,\n      id0 = this._id,\n      id1 = newId();\n\n  for (var groups = this._groups, m = groups.length, j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, node, i = 0; i < n; ++i) {\n      if (node = group[i]) {\n        var inherit = get(node, id0);\n        schedule(node, name, id1, i, group, {\n          time: inherit.time + inherit.delay + inherit.duration,\n          delay: 0,\n          duration: inherit.duration,\n          ease: inherit.ease\n        });\n      }\n    }\n  }\n\n  return new Transition(groups, this._parents, name, id1);\n}\n","import {get, set, init} from \"./schedule\";\n\nfunction start(name) {\n  return (name + \"\").trim().split(/^|\\s+/).every(function(t) {\n    var i = t.indexOf(\".\");\n    if (i >= 0) t = t.slice(0, i);\n    return !t || t === \"start\";\n  });\n}\n\nfunction onFunction(id, name, listener) {\n  var on0, on1, sit = start(name) ? init : set;\n  return function() {\n    var schedule = sit(this, id),\n        on = schedule.on;\n\n    // If this node shared a dispatch with the previous node,\n    // just assign the updated shared dispatch and we’re done!\n    // Otherwise, copy-on-write.\n    if (on !== on0) (on1 = (on0 = on).copy()).on(name, listener);\n\n    schedule.on = on1;\n  };\n}\n\nexport default function(name, listener) {\n  var id = this._id;\n\n  return arguments.length < 2\n      ? get(this.node(), id).on.on(name)\n      : this.each(onFunction(id, name, listener));\n}\n","import {interpolateTransformSvg as interpolateTransform} from \"d3-interpolate\";\nimport {namespace} from \"d3-selection\";\nimport {tweenValue} from \"./tween\";\nimport interpolate from \"./interpolate\";\n\nfunction attrRemove(name) {\n  return function() {\n    this.removeAttribute(name);\n  };\n}\n\nfunction attrRemoveNS(fullname) {\n  return function() {\n    this.removeAttributeNS(fullname.space, fullname.local);\n  };\n}\n\nfunction attrConstant(name, interpolate, value1) {\n  var value00,\n      interpolate0;\n  return function() {\n    var value0 = this.getAttribute(name);\n    return value0 === value1 ? null\n        : value0 === value00 ? interpolate0\n        : interpolate0 = interpolate(value00 = value0, value1);\n  };\n}\n\nfunction attrConstantNS(fullname, interpolate, value1) {\n  var value00,\n      interpolate0;\n  return function() {\n    var value0 = this.getAttributeNS(fullname.space, fullname.local);\n    return value0 === value1 ? null\n        : value0 === value00 ? interpolate0\n        : interpolate0 = interpolate(value00 = value0, value1);\n  };\n}\n\nfunction attrFunction(name, interpolate, value) {\n  var value00,\n      value10,\n      interpolate0;\n  return function() {\n    var value0, value1 = value(this);\n    if (value1 == null) return void this.removeAttribute(name);\n    value0 = this.getAttribute(name);\n    return value0 === value1 ? null\n        : value0 === value00 && value1 === value10 ? interpolate0\n        : interpolate0 = interpolate(value00 = value0, value10 = value1);\n  };\n}\n\nfunction attrFunctionNS(fullname, interpolate, value) {\n  var value00,\n      value10,\n      interpolate0;\n  return function() {\n    var value0, value1 = value(this);\n    if (value1 == null) return void this.removeAttributeNS(fullname.space, fullname.local);\n    value0 = this.getAttributeNS(fullname.space, fullname.local);\n    return value0 === value1 ? null\n        : value0 === value00 && value1 === value10 ? interpolate0\n        : interpolate0 = interpolate(value00 = value0, value10 = value1);\n  };\n}\n\nexport default function(name, value) {\n  var fullname = namespace(name), i = fullname === \"transform\" ? interpolateTransform : interpolate;\n  return this.attrTween(name, typeof value === \"function\"\n      ? (fullname.local ? attrFunctionNS : attrFunction)(fullname, i, tweenValue(this, \"attr.\" + name, value))\n      : value == null ? (fullname.local ? attrRemoveNS : attrRemove)(fullname)\n      : (fullname.local ? attrConstantNS : attrConstant)(fullname, i, value + \"\"));\n}\n","import {namespace} from \"d3-selection\";\n\nfunction attrTweenNS(fullname, value) {\n  function tween() {\n    var node = this, i = value.apply(node, arguments);\n    return i && function(t) {\n      node.setAttributeNS(fullname.space, fullname.local, i(t));\n    };\n  }\n  tween._value = value;\n  return tween;\n}\n\nfunction attrTween(name, value) {\n  function tween() {\n    var node = this, i = value.apply(node, arguments);\n    return i && function(t) {\n      node.setAttribute(name, i(t));\n    };\n  }\n  tween._value = value;\n  return tween;\n}\n\nexport default function(name, value) {\n  var key = \"attr.\" + name;\n  if (arguments.length < 2) return (key = this.tween(key)) && key._value;\n  if (value == null) return this.tween(key, null);\n  if (typeof value !== \"function\") throw new Error;\n  var fullname = namespace(name);\n  return this.tween(key, (fullname.local ? attrTweenNS : attrTween)(fullname, value));\n}\n","import {interpolateTransformCss as interpolateTransform} from \"d3-interpolate\";\nimport {style} from \"d3-selection\";\nimport {tweenValue} from \"./tween\";\nimport interpolate from \"./interpolate\";\n\nfunction styleRemove(name, interpolate) {\n  var value00,\n      value10,\n      interpolate0;\n  return function() {\n    var value0 = style(this, name),\n        value1 = (this.style.removeProperty(name), style(this, name));\n    return value0 === value1 ? null\n        : value0 === value00 && value1 === value10 ? interpolate0\n        : interpolate0 = interpolate(value00 = value0, value10 = value1);\n  };\n}\n\nfunction styleRemoveEnd(name) {\n  return function() {\n    this.style.removeProperty(name);\n  };\n}\n\nfunction styleConstant(name, interpolate, value1) {\n  var value00,\n      interpolate0;\n  return function() {\n    var value0 = style(this, name);\n    return value0 === value1 ? null\n        : value0 === value00 ? interpolate0\n        : interpolate0 = interpolate(value00 = value0, value1);\n  };\n}\n\nfunction styleFunction(name, interpolate, value) {\n  var value00,\n      value10,\n      interpolate0;\n  return function() {\n    var value0 = style(this, name),\n        value1 = value(this);\n    if (value1 == null) value1 = (this.style.removeProperty(name), style(this, name));\n    return value0 === value1 ? null\n        : value0 === value00 && value1 === value10 ? interpolate0\n        : interpolate0 = interpolate(value00 = value0, value10 = value1);\n  };\n}\n\nexport default function(name, value, priority) {\n  var i = (name += \"\") === \"transform\" ? interpolateTransform : interpolate;\n  return value == null ? this\n          .styleTween(name, styleRemove(name, i))\n          .on(\"end.style.\" + name, styleRemoveEnd(name))\n      : this.styleTween(name, typeof value === \"function\"\n          ? styleFunction(name, i, tweenValue(this, \"style.\" + name, value))\n          : styleConstant(name, i, value + \"\"), priority);\n}\n","function styleTween(name, value, priority) {\n  function tween() {\n    var node = this, i = value.apply(node, arguments);\n    return i && function(t) {\n      node.style.setProperty(name, i(t), priority);\n    };\n  }\n  tween._value = value;\n  return tween;\n}\n\nexport default function(name, value, priority) {\n  var key = \"style.\" + (name += \"\");\n  if (arguments.length < 2) return (key = this.tween(key)) && key._value;\n  if (value == null) return this.tween(key, null);\n  if (typeof value !== \"function\") throw new Error;\n  return this.tween(key, styleTween(name, value, priority == null ? \"\" : priority));\n}\n","import {get, init} from \"./schedule\";\n\nfunction delayFunction(id, value) {\n  return function() {\n    init(this, id).delay = +value.apply(this, arguments);\n  };\n}\n\nfunction delayConstant(id, value) {\n  return value = +value, function() {\n    init(this, id).delay = value;\n  };\n}\n\nexport default function(value) {\n  var id = this._id;\n\n  return arguments.length\n      ? this.each((typeof value === \"function\"\n          ? delayFunction\n          : delayConstant)(id, value))\n      : get(this.node(), id).delay;\n}\n","import {get, set} from \"./schedule\";\n\nfunction durationFunction(id, value) {\n  return function() {\n    set(this, id).duration = +value.apply(this, arguments);\n  };\n}\n\nfunction durationConstant(id, value) {\n  return value = +value, function() {\n    set(this, id).duration = value;\n  };\n}\n\nexport default function(value) {\n  var id = this._id;\n\n  return arguments.length\n      ? this.each((typeof value === \"function\"\n          ? durationFunction\n          : durationConstant)(id, value))\n      : get(this.node(), id).duration;\n}\n","import {get, set} from \"./schedule\";\n\nfunction easeConstant(id, value) {\n  if (typeof value !== \"function\") throw new Error;\n  return function() {\n    set(this, id).ease = value;\n  };\n}\n\nexport default function(value) {\n  var id = this._id;\n\n  return arguments.length\n      ? this.each(easeConstant(id, value))\n      : get(this.node(), id).ease;\n}\n","import {Transition, newId} from \"../transition/index\";\nimport schedule from \"../transition/schedule\";\nimport {easeCubicInOut} from \"d3-ease\";\nimport {now} from \"d3-timer\";\n\nvar defaultTiming = {\n  time: null, // Set on use.\n  delay: 0,\n  duration: 250,\n  ease: easeCubicInOut\n};\n\nfunction inherit(node, id) {\n  var timing;\n  while (!(timing = node.__transition) || !(timing = timing[id])) {\n    if (!(node = node.parentNode)) {\n      return defaultTiming.time = now(), defaultTiming;\n    }\n  }\n  return timing;\n}\n\nexport default function(name) {\n  var id,\n      timing;\n\n  if (name instanceof Transition) {\n    id = name._id, name = name._name;\n  } else {\n    id = newId(), (timing = defaultTiming).time = now(), name = name == null ? null : name + \"\";\n  }\n\n  for (var groups = this._groups, m = groups.length, j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, node, i = 0; i < n; ++i) {\n      if (node = group[i]) {\n        schedule(node, name, id, i, group, timing || inherit(node, id));\n      }\n    }\n  }\n\n  return new Transition(groups, this._parents, name, id);\n}\n","import {selection} from \"d3-selection\";\nimport selection_interrupt from \"./interrupt\";\nimport selection_transition from \"./transition\";\n\nselection.prototype.interrupt = selection_interrupt;\nselection.prototype.transition = selection_transition;\n","import interrupt from \"../interrupt\";\n\nexport default function(name) {\n  return this.each(function() {\n    interrupt(this, name);\n  });\n}\n","import {STARTING, ENDING, ENDED} from \"./transition/schedule\";\n\nexport default function(node, name) {\n  var schedules = node.__transition,\n      schedule,\n      active,\n      empty = true,\n      i;\n\n  if (!schedules) return;\n\n  name = name == null ? null : name + \"\";\n\n  for (i in schedules) {\n    if ((schedule = schedules[i]).name !== name) { empty = false; continue; }\n    active = schedule.state > STARTING && schedule.state < ENDING;\n    schedule.state = ENDED;\n    schedule.timer.stop();\n    if (active) schedule.on.call(\"interrupt\", node, node.__data__, schedule.index, schedule.group);\n    delete schedules[i];\n  }\n\n  if (empty) delete node.__transition;\n}\n","import { select, event as d3event, selection, clientPoint } from 'd3-selection';\nimport { drag as d3drag } from 'd3-drag';\nimport 'd3-transition';\nimport { mergeRecursive } from './common-utils';\n/**\n * This function takes a raw DOM element or\n * a string and returns a d3 selection of that element.\n *\n * @param {HTMLElement | string} element The element to wrap in d3 selection.\n * @return {Selection} Instance of d3 selection.\n */\nconst selectElement = element => select(element);\n\n/**\n * It creates a new d3 element on the parent element\n * @param  {Selection} parent Element to which the element is to be appended\n * @param  {Object} elemType Type of the new element\n * @param  {Array} data Data for the new element\n * @param  {Object} selector classname/id/tagname for the element\n * @return {HTMLElement} Newly Created Element\n */\nconst makeElement = (parent, elemType, data, selector, callbacks = {}, keyFn) => {\n    if ((parent instanceof HTMLElement || parent instanceof SVGElement)) {\n        parent = selectElement(parent);\n    }\n\n    const selectorVal = selector ? selector[0] : null;\n    let selectorType = null;\n    let actualSelector = null;\n    let element = null;\n    let enterSel = null;\n    let mergeSel = null;\n    let filter;\n    if (selectorVal) {\n        if (selectorVal === '#') {\n            selectorType = 'id';\n            actualSelector = selector;\n        } else {\n            selectorType = 'class';\n            actualSelector = selector[0] === '.' ? selector : `.${selector}`;\n        }\n    } else {\n        actualSelector = elemType;\n        filter = true;\n    }\n    element = parent.selectAll(actualSelector);\n\n    filter && (element = element.filter(function () {\n        return this.parentNode === parent.node();\n    }));\n    element = element.data(data, keyFn);\n\n    enterSel = element.enter()\n                            .append(elemType || 'div');\n    callbacks.enter && enterSel.each(function (...params) {\n        callbacks.enter(selectElement(this), ...params);\n    });\n\n    mergeSel = enterSel.merge(element);\n    callbacks.update && mergeSel.each(function (...params) {\n        callbacks.update(selectElement(this), ...params);\n    });\n    if (selectorType === 'class') {\n        mergeSel.classed(selectorVal === '.' ? selector.substring(1, selector.length) : selector, true);\n    } else if (selectorType === 'id') {\n        mergeSel.attr('id', selector.substring(1, selector.length));\n    }\n    const exitSel = element.exit();\n\n    if (callbacks.exit) {\n        exitSel.each(function (...params) {\n            callbacks.exit(selectElement(this), ...params);\n        });\n    } else {\n        exitSel.remove();\n    }\n    return mergeSel;\n};\n\n/**\n * This function applies styles to an element\n *  @param  {Object} elem Element Selection\n * @param  {Object} styleObj Style Object to be applied\n * @return {Element} Newly Created Element\n*/\nconst applyStyle = (elem, styleObj) => {\n    Object.entries(styleObj).forEach((d) => {\n        elem.style(d[0], d[1]);\n    }, this);\n    return elem;\n};\n\n/**\n * This function appends a dom element in another element.\n * @param {HTMLElement | SVGElement} element1 The element in which to append the second element\n * @param {HTMLElement | SVGElement} element2 The element which will be appended.\n */\nconst appendElement = (element1, element2) => {\n    element1.appendChild(element2);\n};\n\n/**\n * Sets the attributes to the element.\n * @param {HTMLElement | SVGElement} element Element on which attributes will be applied\n * @param {Object} attrs Attributes which need to be applied\n */\nconst setElementAttrs = (element, attrs) => {\n    for (const key in attrs) {\n        if ({}.hasOwnProperty.call(attrs, key)) {\n            element.attr(key, attrs[key]);\n        }\n    }\n};\n\n/**\n * Sets attributes in the svg or html element\n * @param {SVGElement | HTMLElement} element The element on which attrs will be applied\n * @param {Array.<Object>} attrs Array of attributes\n * @param {string} className className of elements to select.\n * @return {SVGElement | HTMLElement} SVGElement or html element.\n */\nconst setAttrs = (element, attrs, className) => {\n    if (!(element instanceof selection)) {\n        element = selectElement(element);\n    }\n    className !== undefined ? element.selectAll(`.${className}`).each(function () {\n        setElementAttrs(select(this), attrs);\n    }) : setElementAttrs(element, attrs);\n    return element;\n};\n\n/**\n * Adds a css class to elements which passes the filter function.If filter function is not given,\n * then all elements will be applied the class.\n * @param {HTMLElement | SVGElement} element element\n * @param {string} className css class\n * @param {string} selector css selector\n * @param {Function} filterFn filter method.\n */\nconst addClass = (element, className, selector, filterFn) => {\n    select(element).selectAll(selector).each(function (data) {\n        const elem = select(this);\n        filterFn ? filterFn(data) && elem.classed(className, true) :\n                elem.classed(className, true);\n    });\n};\n\n/**\n * Removes the css class from elements which passes the filter function.If filter function is not given,\n * then all elements will be applied the class.\n * @param {HTMLElement | SVGElement} element element\n * @param {string} className css class\n * @param {string} selector css selector\n * @param {Function} filterFn filter method.\n */\nconst removeClass = (element, className, selector, filterFn) => {\n    select(element).selectAll(selector).each(function (data) {\n        const elem = select(this);\n        filterFn ? filterFn(data) && elem.classed(className, false) :\n                elem.classed(className, false);\n    });\n};\n\n/**\n * Sets styles in the svg or html element\n * @param {SVGElement | HTMLElement} element The element on which styles will be applied\n * @param {Array.<Object>} styles Array of style attributes\n * @return {SVGElement | HTMLElement} SVGElement or html element.\n */\nconst setStyles = (element, styles) => {\n    if (!(element instanceof selection)) {\n        element = selectElement(element);\n    }\n    for (const key in styles) {\n        if ({}.hasOwnProperty.call(styles, key)) {\n            element.style(key, styles[key]);\n        }\n    }\n    return element;\n};\n\n/**\n * Creates svg or html elements by binding data to the selection.Removes extra elements\n * on exit.\n * @param {Object} params Parameter object\n * @param {SVGElement | HTMLElement} params.container Container element where all elements will be appended\n * @param {string} params.selector Selector by which elements will be selected from dom\n * @param {string} params.append Append tag\n * @param {Function} params.each Function which will be executed for each data point and element.\n */\nconst createElements = (params) => {\n    const container = select(params.container);\n    let data;\n    let sel;\n\n    data = params.data;\n    if (typeof data === 'number') {\n        data = Array(data).fill().map((d, i) => i);\n    }\n    sel = container.selectAll(params.selector).data(data);\n\n    sel = container.selectAll(params.selector).filter(function () {\n        return this.parentNode === container.node();\n    }).data(params.data);\n\n    const selectionMerge = sel.enter().append(params.append).merge(sel).each(function (d, i) {\n        params.each(d, select(this), i);\n    });\n\n    selectionMerge.attr('class', params.className || '');\n    sel.exit().remove();\n};\n\n/**\n * Clips an element with given measurement. Basically it is used to hide overflowing portions\n * of any element.\n * @param {SVGElement} container svg element which needs to be clipped.\n * @param {Object} measurement Dimensions of the clipped rectangle.\n * @param {string} id Unique id of the clip element\n */\nconst clipElement = (container, measurement, id) => {\n    const clipPathElement = makeElement(select(container), 'clipPath', [1], `#${id}`);\n    const clipPathRect = makeElement(clipPathElement, 'rect', [1]);\n    clipPathRect.attr('x', measurement.x)\n                    .attr('y', measurement.x)\n                    .attr('width', measurement.width)\n                    .attr('height', measurement.height);\n    clipPathElement.attr('clip-path', `url(#${id})`);\n};\n\n/**\n * Returns the element of the corresponding classname.\n * @param {HTMLElement | SVGElement} node html or svg node element.\n * @param {string} className css class to be applied.\n * @return {HTMLElement | SVGElement} html or svg element.\n */\nconst getElementsByClassName = (node, className) => select(node).selectAll(className).nodes();\n\n/**\n * Gets the mouse position relative to an svg type of element\n * @param {SVGElement} element Any svg element like rect, circle, etc.\n * @param {Event} event Event object.\n * @return {Object} x and y position relative to the container element passed.\n */\nconst getMousePos = (element, event) => {\n    const boundingClientRect = element.getBoundingClientRect();\n    return {\n        x: event.x - boundingClientRect.x,\n        y: event.y - boundingClientRect.y\n    };\n};\n\nconst getClientPoint = (...params) => {\n    const pos = clientPoint(...params);\n    return {\n        x: pos[0],\n        y: pos[1]\n    };\n};\n\n/** This function appends a dom element in another element.\n * @param {Object} tag The tag name of the element to append\n * @param {Object} mount Mount point fo the element\n * @return {Object} selection of the appended element\n */\nconst createElement = (tag, mount) => select(mount).append(tag).node();\n\n/**\n * Gets the d3 event function\n * @return {Object} d3 event\n */\nconst getEvent = () => d3event;\n\n/**\n * Gets the d3 drag function\n * @return {Object} d3 drag\n */\nconst getD3Drag = () => d3drag;\n\nconst getSmartComputedStyle = (group, css) => {\n    let textEl;\n    const testText = 'W';\n    const mandatoryStyle = {\n        'fill-opacity': 0\n    };\n    const className = typeof css === 'string' ? css : (css instanceof Array ? css.join(' ') : undefined);\n\n    if (group.node() instanceof HTMLElement) {\n        textEl = group.append('div').html(testText);\n    } else {\n        textEl = group.append('text').text(testText);\n    }\n\n    if (className) {\n        textEl.attr('class', className);\n    } else if (typeof css === 'object') {\n        delete css['fill-opacity'];\n        mergeRecursive(mandatoryStyle, css);\n    }\n\n    textEl.style(mandatoryStyle);\n    const computedStyle = window.getComputedStyle(textEl.node());\n    const styleForSmartLabel = {\n        fontSize: computedStyle.fontSize,\n        fontFamily: computedStyle.fontFamily,\n        fontWeight: computedStyle.fontWeight,\n        fontStyle: computedStyle.fontStyle\n    };\n\n    textEl.remove();\n\n    return styleForSmartLabel;\n};\n\nconst hasTouch = () => 'ontouchstart' in document.documentElement;\n\nexport {\n    hasTouch,\n    selectElement,\n    makeElement,\n    applyStyle,\n    addClass,\n    removeClass,\n    appendElement,\n    setAttrs,\n    setStyles,\n    createElement,\n    createElements,\n    clipElement,\n    getElementsByClassName,\n    getMousePos,\n    getEvent,\n    getD3Drag,\n    getSmartComputedStyle,\n    getClientPoint\n};\n","const events = [\n    'initialized',\n    'beforeupdate',\n    'updated',\n    'beforedraw',\n    'drawn',\n    'beforeremove',\n    'removed',\n    'animationend'\n];\n\nconst compositions = [\n    'canvas',\n    'unit',\n    'layer',\n    'axis',\n    'facet-headers',\n    'legend',\n    'caption'\n];\n\nconst EVENT_LIST = [];\n\ncompositions.forEach((composition) => {\n    events.forEach((event) => {\n        EVENT_LIST.push(`${composition}.${event}`);\n    });\n});\n\nexport default EVENT_LIST;\n","import EVENT_LIST from './event-list';\nimport { createPromise } from './helper';\n\n/**\n * At first call it accepts one function\n * calling it second time accepts notification object.\n * notification object then called with first accepted function\n *\n * @param {Function} resolveFn a promise's resolve function\n * @return {Function} a function to accept notification object\n */\nconst resolver = resolveFn => notification => resolveFn(notification);\n\n/**\n * Checks if the property string is present in the source object\n *\n * @param {Object} source source object whom you want to check the property\n * @param {string} property key name that need to be checked\n * @return {boolean} returns true if the property found in the source object\n */\nconst hasOwn = (source, property) => Object.prototype.hasOwnProperty.call(source, property);\n\n/**\n * LifeCycleManager which goes as a dependendecy to a muze\n * it accepts notification from the entire library throughout\n * the exeecution life\n *\n * @export\n * @class LifeCycleManager\n */\nexport default class LifeCycleManager {\n\n    /**\n     * Creates an instance of LifeCycleManager.\n     * @memberof LifeCycleManager\n     */\n    constructor () {\n        this._eventList = EVENT_LIST;\n        this._promises = new Map();\n        this._notifiers = {};\n        this._lifeCycles = {};\n        this._unreleasedLifeCycles = {};\n        this._boot();\n    }\n\n    /**\n     * Fills all the notifiers with resolver callback\n     *\n     * @memberof LifeCycleManager\n     */\n    _boot () {\n        this._notifiers = this._eventList.reduce((acc, name) => {\n            acc[name] = resolver;\n            return acc;\n        }, {});\n        this._preparePromises();\n    }\n\n    /**\n     * Public method which gives the promise corresponding\n     * to the event name\n     *\n     * @param {string} eventName name of the event like `canvas.drawn`\n     * @return {promise} promise that is passed to the user\n     * @memberof LifeCycleManager\n     */\n    retrieve (eventName) {\n        return this._promises.get(eventName);\n    }\n\n    /**\n     * Creates a promise that will be passed to user's callback\n     *\n     * @param {string} eventName name of the event like `canvas.drawn`\n     * @return {promise} a pending promise waiting for resolve to be called\n     * @memberof LifeCycleManager\n     */\n    _makeNotifierPromise (eventName) {\n        return new Promise((resolve) => {\n            this._notifiers[eventName] = resolver(resolve);\n        });\n    }\n\n    /**\n     * Prepares the promise map with pending promises\n     * all the promises are in a pending state where their's\n     * resolve function waiting to be called with notification object\n     * @memberof LifeCycleManager\n     */\n    _preparePromises () {\n        this._eventList.forEach((eventName) => {\n            const promise = this._makeNotifierPromise(eventName);\n            this._promises.set(eventName, promise);\n            createPromise(promise, eventName, this);\n        });\n    }\n\n    /**\n     * Resolves the promise with notification object\n     *\n     * @param {string} eventName name of the event in the system\n     * @param {Object} notification notification object\n     * @param {string} notification.formalName name of the sender creating the notification\n     * @param {Object} notification.client instance or array of instances sending the notification\n     * @param {string} notification.action the stage name when the event happened like `beforedraw`\n     *\n     * @memberof LifeCycleManager\n     */\n    _resolvePromise (eventName, notification) {\n        this._notifiers[eventName](notification);\n    }\n\n    /**\n     * Public method which is being called by different\n     * subcompoents of the system at different execution atages\n     * @param {Object} notification notification object\n     * @param {string} notification.formalName name of the sender creating the notification\n     * @param {Object} notification.client instance or array of instances sending the notification\n     * @param {string} notification.action the stage name when the event happened like `beforedraw`\n     * @memberof LifeCycleManager\n     */\n    notify (notification) {\n        // get the composition name from notification\n        // or from static formalName() method\n        const composition = notification.formalName || notification.client.constructor.formalName();\n        notification.formalName = composition;\n        this._releasePromisesFromCache();\n        this._notify(composition, notification);\n    }\n\n    /**\n     * Notify user the with promsie in a callback\n     * if callback not found then cache it\n     *\n     * @param {string} composition\n     * @param {Object} notification notification object\n     * @param {string} notification.formalName name of the sender creating the notification\n     * @param {Object} notification.client instance or array of instances sending the notification\n     * @param {string} notification.action the stage name when the event happened like `beforedraw`\n     * @memberof LifeCycleManager\n     */\n    _notify (composition, notification) {\n        const stage = notification.action;\n        const eventName = `${composition}.${stage}`;\n\n        // resolves promise with the notification object\n        this._resolvePromise(eventName, notification);\n\n        // get the promise from the promise map\n        const promise = this.retrieve(eventName);\n\n        if (this._lifeCycles[composition]) {\n            if (this._lifeCycles[composition][stage]) {\n                // if user given call back exists, then call with promise\n                this._callLifeCycleCallback(composition, stage, promise);\n            } else {\n                // otherwise cache the promise\n                this._cachePromise(composition, stage, promise);\n            }\n        } else {\n            this._cachePromise(composition, stage, promise);\n        }\n    }\n\n    /**\n     * Calls the user's callback with callback\n     *\n     * @param {string} composition name of the compositon like `canvas`\n     * @param {string} stage the stage name when the event happened like `beforedraw`\n     * @param {promise} promise promise that is passed to the user\n     * @memberof LifeCycleManager\n     */\n    _callLifeCycleCallback (composition, stage, promise) {\n        const eventName = `${composition}.${stage}`;\n        this._lifeCycles[composition][stage](promise);\n        this._resetTargetPromise(eventName);\n    }\n\n    /**\n     * Try to clear the cached promsies once we have\n     * macthed callbacks from the user\n     *\n     * @memberof LifeCycleManager\n     */\n    _releasePromisesFromCache () {\n        const compositions = Object.keys(this._unreleasedLifeCycles);\n        compositions.forEach((composition) => {\n            const stages = Object.keys(this._unreleasedLifeCycles[composition]);\n            stages.forEach((stage) => {\n                if (this._lifeCycles[composition]) {\n                    if (this._lifeCycles[composition][stage]) {\n                        // take the promise from unreleased lifeCycles\n                        const promise = this._unreleasedLifeCycles[composition][stage];\n                        // call the user given callback with that promise\n                        this._callLifeCycleCallback(composition, stage, promise);\n                        // delete promise from unreleased lifeCycles\n                        delete this._unreleasedLifeCycles[composition][stage];\n                    }\n                }\n            });\n        });\n    }\n\n    /**\n     * Cache the promise in the map. This cache\n     * then get consumed if we get user callbacks\n     * @param {string} composition name of the compositon like `canvas`\n     * @param {string} stage the stage name when the event happened like `beforedraw`\n     * @param {promise} promise promise that is passed to the user\n     * @memberof LifeCycleManager\n     */\n    _cachePromise (composition, stage, promise) {\n        if (!hasOwn(this._unreleasedLifeCycles, composition)) {\n            this._unreleasedLifeCycles[composition] = {};\n        }\n\n        if (!hasOwn(this._unreleasedLifeCycles[composition], stage)) {\n            this._unreleasedLifeCycles[composition][stage] = {};\n        }\n        this._unreleasedLifeCycles[composition][stage] = promise;\n    }\n\n    /**\n     * It register's the callbacks gievn the user\n     *\n     * @param {Object} [lifeCycles={}] a object with list of callbacks\n     * @memberof LifeCycleManager\n     */\n    register (lifeCycles = {}) {\n        this._lifeCycles = lifeCycles;\n        // as we get all the callbacks, try to call them\n        // from unreleased promise map\n        this._releasePromisesFromCache();\n    }\n\n    /**\n     * Reset the promise into pending state\n     *\n     * @param {string} eventName name of the event happening\n     * @memberof LifeCycleManager\n     */\n    _resetTargetPromise (eventName) {\n        setTimeout(() => {\n            this._notifiers[eventName] = resolver;\n            this._promises.set(eventName, this._makeNotifierPromise(eventName));\n        }, 0);\n    }\n}\n","import LifeCycleManager from './lifecycle-manager';\n\nexport default LifeCycleManager;\n","/**\n * Creates a new promise when the given promise is resolved. This needs to be done so that after the lifecycle event\n * is completed, then again when the event gets completed, then a new promise gets resolved.\n *\n * @param {Promise} promise Instance of promise\n * @param {string} eventName name of event\n * @param {LifeCycleManager} context Instance of lifecyclemanager\n */\nexport const createPromise = (promise, eventName, context) => {\n    promise.then(() => {\n        const prm = context._makeNotifierPromise(eventName);\n        context._promises.set(eventName, prm);\n        createPromise(prm, eventName, context);\n    });\n};\n","import { default as DataModel } from 'datamodel';\nimport * as scales from './scales';\nimport * as colorSchemes from './color-schemes';\nimport * as STATE_NAMESPACES from './enums/namespace';\n\nconst InvalidAwareTypes = DataModel.InvalidAwareTypes;\n\nexport {\n    InvalidAwareTypes,\n    DataModel\n};\n\nexport {\n    ReservedFields,\n    CommonProps,\n    COORD_TYPES\n} from './enums';\n\nexport { STATE_NAMESPACES };\n\nexport {\n    scales,\n    colorSchemes\n};\n\nexport {\n    getNearestValue,\n    getValueParser,\n    transformColors,\n    detectColor,\n    hslToRgb,\n    rgbToHsv,\n    hexToHsv,\n    hsvToRgb,\n    escapeHTML,\n    angleToRadian,\n    generateGetterSetters,\n    getArraySum,\n    ERROR_MSG,\n    interpolator,\n    colorInterpolator,\n    numberInterpolator,\n    piecewiseInterpolator,\n    reqAnimFrame,\n    cancelAnimFrame,\n    nextAnimFrame,\n    getMax,\n    getMin,\n    getDomainFromData,\n    getUniqueId,\n    mergeRecursive,\n    unionDomain,\n    replaceCSSPrefix,\n    symbolFns,\n    defaultValue,\n    easeFns,\n    clone,\n    interpolateArray,\n    getMinPoint,\n    getMaxPoint,\n    getClosestIndexOf,\n    registerListeners,\n    Voronoi,\n    checkExistence,\n    sanitizeIP,\n    getMinDiff,\n    capitalizeFirst,\n    getWindow,\n    getQualifiedClassName,\n    Store,\n    getDependencyOrder,\n    objectIterator,\n    intSanitizer,\n    transactor,\n    enableChainedTransaction,\n    isHTMLElem,\n    isEqual,\n    isSimpleObject,\n    nextFrame,\n    getObjProp,\n    getDataModelFromIdentifiers,\n    getDataModelFromRange,\n    transposeArray,\n    toArray,\n    extendsClass,\n    concatModels,\n    assembleModelFromIdentifiers,\n    isValidValue,\n    nestCollection,\n    stack,\n    getSymbol,\n    Scales,\n    Symbols,\n    pathInterpolators,\n    hslInterpolator,\n    getSmallestDiff,\n    require,\n    formatTemporal,\n    nearestSortingDetails,\n    createSelection,\n    temporalFields,\n    retrieveNearestGroupByReducers,\n    retrieveFieldDisplayName,\n    sanitizeDomainWhenEqual\n} from './common-utils';\n\nexport {\n    selectElement,\n    makeElement,\n    applyStyle,\n    addClass,\n    removeClass,\n    appendElement,\n    setAttrs,\n    setStyles,\n    createElement,\n    createElements,\n    clipElement,\n    getElementsByClassName,\n    getMousePos,\n    getEvent,\n    getD3Drag,\n    getSmartComputedStyle,\n    getClientPoint,\n    hasTouch\n} from './renderer-utils';\n\nexport {\n    timeMillisecond,\n    timeSecond,\n    timeMinute,\n    timeHour,\n    timeDay,\n    timeWeek,\n    timeMonth,\n    timeYear\n} from 'd3-time';\n\nexport { default as Smartlabel } from 'fusioncharts-smartlabel';\n\nexport { dataSelect } from './DataSystem';\n\nexport { default as LifeCycleManager } from './lifecycle-manager';\n\nexport {\n    DimensionSubtype,\n    FieldType,\n    MeasureSubtype,\n    DateTimeFormatter,\n    DM_DERIVATIVES,\n    GROUP_BY_FUNCTIONS\n} from 'datamodel';\n\n","export const DRAG = 'drag';\nexport const HOVER = 'hover';\nexport const SELECTIONDRAG = 'selectiondrag';\nexport const CLICK = 'click';\nexport const LONGTOUCH = 'longtouch';\nexport const TOUCHDRAG = 'touchdrag';\nexport const ALL_ACTIONS = '*';\n","const SELECTION_NEW_ENTRY = 1;\nconst SELECTION_NEW_EXIT = -1;\nconst SELECTION_NULL = 0;\nconst SELECTION_OLD_ENTRY = 2;\nconst SELECTION_OLD_EXIT = -2;\n\nexport {\n    SELECTION_NEW_ENTRY,\n    SELECTION_NEW_EXIT,\n    SELECTION_NULL,\n    SELECTION_OLD_ENTRY,\n    SELECTION_OLD_EXIT\n};\n","import SelectionSet from './selection-set';\n\nexport default SelectionSet;\n","import {\n    SELECTION_NEW_ENTRY, SELECTION_NEW_EXIT, SELECTION_NULL, SELECTION_OLD_ENTRY, SELECTION_OLD_EXIT\n} from '../enums/selection';\n/* eslint-disable guard-for-in */\n\n/**\n * This component is used to keep track of the row tuples of the data which gets added and removed. This keeps\n * information of which rows are in previous and new entry set and previous and new exit set. This is initialized by\n * {@link Firebolt}.\n *\n * @public\n *\n * @class SelectionSet\n */\nclass SelectionSet {\n    /**\n     * Creates an instance of selection set\n     *\n     * @param {Array.<string>} completeSet Set of unique ids.\n     */\n    constructor (completeSet, _volatile) {\n        this.completeSet = completeSet;\n        this._set = completeSet.reduce((obj, key) => {\n            obj[key] = SELECTION_NULL;\n            return obj;\n        }, {});\n        this._volatile = _volatile;\n        this._completeSetCount = completeSet.length;\n        this._lockedSelection = {};\n        this._resetted = true;\n    }\n\n    /**\n     * Adds a set of ids to the selection set. This also moves the other rows to exit set.\n     *\n     * @public\n     * @param {Array.<number|string>} ids Array of unique ids.\n     *\n     * @return {SelectionSet} Instance of selection set.\n     */\n    add (ids) {\n        this._resetted = false;\n\n        const set = this._set;\n        // from exitset to entryset\n        ids.forEach((i) => {\n            set[i] = SELECTION_NEW_ENTRY;\n        });\n\n        for (const key in set) {\n            if (set[key] !== SELECTION_NEW_ENTRY && set[key] !== SELECTION_OLD_ENTRY) {\n                set[key] = set[key] < 0 ? SELECTION_OLD_EXIT : SELECTION_NEW_EXIT;\n            }\n        }\n        return this;\n    }\n\n    /**\n     * Adds an array of ids to the old entry set.\n     *\n     * @param {Array.<number|string>} ids Array of unique ids\n     *\n     * @return {SelectionSet} Instance of selection set.\n     */\n    update (ids) {\n        const set = this._set;\n        // from exitset to entryset\n        ids.forEach((i) => {\n            set[i] = SELECTION_OLD_ENTRY;\n        });\n\n        return this;\n    }\n\n    /**\n     * Moves all ids which in new entry set  to old entry set.\n     *\n     * @public\n     * @param {Array.<number|string>} ids Array of unique ids\n     *\n     * @return {SelectionSet} Instance of selection set.\n     */\n    updateEntry () {\n        const set = this._set;\n\n        // from exitset to entryset\n        for (const key in set) {\n            set[key] = set[key] === SELECTION_NEW_ENTRY ? SELECTION_OLD_ENTRY : set[key];\n        }\n        return this;\n    }\n\n    /**\n     * Moves an array of ids which are in new exit set to old exit set.\n     *\n     * @public\n     *\n     * @param {Array.<number|string>} ids Array of unique ids.\n     *\n     * @return {SelectionSet} Instance of selection set.\n     */\n    updateExit () {\n        const set = this._set;\n        // from exitset to entryset\n        for (const key in set) {\n            set[key] = set[key] === SELECTION_NEW_EXIT ? SELECTION_OLD_EXIT : set[key];\n        }\n        return this;\n    }\n\n    /**\n     * Removes an array of ids from the selection set. It also moves the remaining row ids to entry set.\n     *\n     * @public\n     * @param {Array.<string>} ids Array of unique ids\n     *\n     * @return {SelectionSet}  Instance of selection set\n     */\n    remove (ids) {\n        this._resetted = false;\n\n        const set = this._set;\n        ids.forEach((i) => {\n            set[i] = SELECTION_NEW_EXIT;\n        });\n\n        for (const key in set) {\n            if (set[key] !== SELECTION_NEW_EXIT && set[key] !== SELECTION_OLD_EXIT) {\n                set[key] = set[key] === 0 ? SELECTION_NEW_ENTRY : SELECTION_OLD_ENTRY;\n            }\n        }\n\n        return this;\n    }\n\n    getSets () {\n        const set = this._set;\n        const retObj = {\n            entrySet: [[], []],\n            exitSet: [[], []],\n            completeSet: []\n        };\n\n        for (const key in set) {\n            if (set[key] > 0) {\n                set[key] === SELECTION_OLD_ENTRY && retObj.entrySet[0].push(key);\n                set[key] === SELECTION_NEW_ENTRY && retObj.entrySet[1].push(key);\n            } else if (set[key] < 0) {\n                set[key] === SELECTION_OLD_EXIT && retObj.exitSet[0].push(key);\n                set[key] === SELECTION_NEW_EXIT && retObj.exitSet[1].push(key);\n            }\n            retObj.completeSet.push(key);\n        }\n\n        ['entrySet', 'exitSet'].forEach((type) => {\n            retObj[type] = retObj[type].map(e => e.map(Number));\n        });\n        retObj.completeSet = retObj.completeSet.map(Number);\n\n        return retObj;\n    }\n\n    /**\n     * Resets an array of ids in the selection set to initial state. It sets the value of every unique id value to\n     * null in the selection set which means they are neither in entry set nor in exit set. If no ids are passed,\n     * then it resets all the ids to null.\n     *\n     * @public\n     *\n     * @param {Array} ids Array of unique ids.\n     * @return {SelectionSet} Instance of selection set.\n     */\n    reset (ids) {\n        const set = this._set;\n        if (ids) {\n            ids.forEach((i) => {\n                set[i] = SELECTION_NULL;\n            });\n        } else {\n            const lockedSel = this._lockedSelection;\n            for (const key in set) {\n                if (!(key in lockedSel)) {\n                    set[key] = SELECTION_NULL;\n                }\n            }\n        }\n        this._resetted = true;\n        return this;\n    }\n\n    /**\n     * Gets the set of ids which are added in the selection set.\n     *\n     * @public\n     *\n     * @return {Array.<string>} Array of unique ids\n     */\n    getEntrySet () {\n        const set = this._set;\n        const addSet = [];\n\n        for (const key in set) {\n            set[key] === SELECTION_NEW_ENTRY && addSet.push(key);\n        }\n\n        return addSet;\n    }\n\n    /**\n     * Returns a set of unique ids which are already present in entry set.\n     *\n     * @public\n     * @param {Array} addSet Array of unique ids which are added\n     *\n     * @return {Array} Array of unique ids which are already in old entry set or new entry set\n     */\n    getExistingEntrySet (addSet) {\n        const set = this._set;\n        return addSet.filter(d => set[d] === SELECTION_NEW_ENTRY || set[d] === SELECTION_OLD_ENTRY);\n    }\n\n    /**\n     * Returns a set of unique ids which are already present in exit set.\n     *\n     * @public\n     * @param {Array} addSet Array of unique ids which are added\n     *\n     * @return {Array} Array of unique ids which are already in old exit set or new exit set\n     */\n    getExistingExitSet (removeSet) {\n        const set = this._set;\n        return removeSet.filter(d => set[d] === SELECTION_NEW_EXIT || set[d] === SELECTION_OLD_EXIT);\n    }\n\n    /**\n     * Gets the set of ids which are added in the selection set.\n     * @return {Array.<string>} Array of unique ids\n     */\n    getOldEntry () {\n        const set = this._set;\n        const updateSet = [];\n\n        for (const key in set) {\n            set[key] === SELECTION_OLD_ENTRY && updateSet.push(key);\n        }\n        return updateSet;\n    }\n\n    /**\n     * Gets the set of ids which are added in the selection set.\n     * @return {Array.<string>} Array of unique ids\n     */\n    getOldExit () {\n        const set = this._set;\n        const updateSet = [];\n\n        for (const key in set) {\n            set[key] === SELECTION_OLD_EXIT && updateSet.push(key);\n        }\n\n        return updateSet;\n    }\n\n    /**\n     * Gets the array of ids which are in the exit set.\n     *\n     * @public\n     * @return {Array.<string>} Array of unique ids\n     */\n    getExitSet () {\n        const set = this._set;\n        const removeSet = [];\n\n        for (const key in set) {\n            set[key] === SELECTION_NEW_EXIT && removeSet.push(key);\n        }\n        return removeSet;\n    }\n\n    /**\n     * Gets all the ids which are either in exit or entry set.\n     *\n     * @public\n     * @return {Array} Array of unique ids\n     */\n    getCompleteSet () {\n        const set = this._set;\n        const completeSet = [];\n\n        for (const key in set) {\n            completeSet.push(key);\n        }\n\n        return completeSet;\n    }\n\n    getCompleteSetCount () {\n        return this._completeSetCount;\n    }\n\n    resetted () {\n        return this._resetted;\n    }\n\n    /**\n     * Swaps the add set and remove set in the selection set.\n     * @return {SelectionSet} Instance of selection set.\n     */\n    toggle () {\n        const set = this._set;\n\n        for (const key in set) {\n            if (set[key] === SELECTION_NEW_ENTRY) {\n                set[key] = SELECTION_NEW_EXIT;\n            } else if (set[key] === SELECTION_NEW_EXIT) {\n                set[key] = SELECTION_NEW_ENTRY;\n            } else if (set[key] === SELECTION_OLD_ENTRY) {\n                set[key] = SELECTION_OLD_EXIT;\n            } else {\n                set[key] = SELECTION_OLD_ENTRY;\n            }\n        }\n\n        return this;\n    }\n}\n\nexport default SelectionSet;\n","import { clone, retrieveNearestGroupByReducers } from 'muze-utils';\nimport * as SELECTION from '../enums/selection';\n\nexport const initializeSideEffects = (context, sideEffects) => {\n    const sideEffectsMap = context._sideEffects;\n    const config = context.config();\n    sideEffects = sideEffects instanceof Array ? sideEffects : Object.values(sideEffects);\n    sideEffects.forEach((SideEffect) => {\n        const formalName = SideEffect.formalName();\n        const sideEffectInstance = sideEffectsMap[formalName];\n        sideEffectsMap[formalName] = sideEffectInstance || new SideEffect(context);\n        const sideEffectConf = config[formalName];\n        sideEffectConf && sideEffectsMap[formalName].config(sideEffectConf);\n    });\n    return sideEffectsMap;\n};\n\nexport const initializeBehaviouralActions = (context, actions) => {\n    const dispatchableBehaviours = {};\n\n    actions = actions instanceof Array ? actions : Object.values(actions);\n    actions.forEach((Action) => {\n        dispatchableBehaviours[Action.formalName()] = new Action(context);\n    });\n    return dispatchableBehaviours;\n};\n\nexport const initializePhysicalActions = (context, actions) => {\n    const physicalActions = {};\n\n    for (const name in actions) {\n        if (!({}).hasOwnProperty.call(name, actions)) {\n            physicalActions[name] = actions[name](context);\n        }\n    }\n    return physicalActions;\n};\n\nexport const changeSideEffectAvailability = (context, fn, toEnable) => {\n    const sideEffects = context.sideEffects();\n    for (const key in sideEffects) {\n        if ({}.hasOwnProperty.call(sideEffects, key)) {\n            let change = true;\n            if (fn && fn(key) === false) {\n                change = false;\n            }\n            if (change) {\n                toEnable ? sideEffects[key].enable() : sideEffects[key].disable();\n            }\n        }\n    }\n};\n\nexport const getMergedSet = set => [...new Set([...set[0], ...set[1]])];\n\nexport const getSourceFields = (propagationInf, criteria = {}) => {\n    const sourceIdentifiers = propagationInf.sourceIdentifiers;\n    let sourceFields;\n    if (sourceIdentifiers) {\n        sourceFields = sourceIdentifiers.getSchema().map(d => d.name);\n    } else if (criteria instanceof Array) {\n        sourceFields = criteria[0];\n    } else {\n        sourceFields = Object.keys(criteria || {});\n    }\n    return sourceFields;\n};\n\nconst conditionsMap = {\n    mergedEnter: [SELECTION.SELECTION_NEW_ENTRY, SELECTION.SELECTION_OLD_ENTRY],\n    mergedExit: [SELECTION.SELECTION_NEW_EXIT, SELECTION.SELECTION_OLD_EXIT],\n    complete: []\n};\n\nexport const getModelFromSet = (type, model, set) => {\n    const conditions = conditionsMap[type];\n    if (model && conditions) {\n        return model.select((fields, i) =>\n           (conditions.some(condition => set[i] === condition)), {\n               saveChild: false\n           });\n    }\n    return null;\n};\n\nexport const getSetInfo = (type, set, config) => {\n    let model = null;\n    const filteredDataModel = config.filteredDataModel;\n    const selectionSet = config.selectionSet;\n    if (!config.propagationData) {\n        if (selectionSet.resetted()) {\n            model = null;\n        } else if (type === 'mergedEnter') {\n            model = getModelFromSet(type, config.dataModel, config.selectionSet._set);\n        }\n    } else if (filteredDataModel) {\n        model = type === 'mergedEnter' ? filteredDataModel[0] : filteredDataModel[1];\n    }\n    return {\n        uids: set,\n        length: set.length,\n        model\n    };\n};\n\nexport const getSideEffects = (behaviour, behaviourEffectMap) => {\n    const sideEffects = [];\n    for (const key in behaviourEffectMap) {\n        const behaviours = key.split(',');\n        const found = behaviours.some(d => d === behaviour);\n        if (found) {\n            sideEffects.push({\n                effects: behaviourEffectMap[key],\n                behaviours\n            });\n        }\n    }\n    return sideEffects;\n};\n\nexport const unionSets = (context, behaviours) => {\n    let combinedSet = {};\n    const models = {\n        mergedEnter: null,\n        mergedExit: null\n    };\n    behaviours.forEach((behaviour) => {\n        const entryExitSet = context._entryExitSet[behaviour];\n        if (entryExitSet) {\n            combinedSet = Object.assign(combinedSet, clone(entryExitSet));\n            ['mergedEnter', 'mergedExit'].forEach((type) => {\n                const model = entryExitSet[type].model;\n                let existingModel = models[type];\n                let aggFns = retrieveNearestGroupByReducers(model);\n                if (!existingModel) {\n                    existingModel = models[type] = model;\n                } else if (`${model.getSchema().map(d => d.name).sort()}` ===\n                    `${existingModel.getSchema().map(d => d.name).sort()}`) {\n                    aggFns = Object.assign({}, retrieveNearestGroupByReducers(existingModel));\n                    existingModel = models[type] = model.union(existingModel);\n                } else {\n                    existingModel = model;\n                }\n                combinedSet[type].model = existingModel;\n                combinedSet[type].aggFns = aggFns;\n            });\n        }\n    });\n    return combinedSet;\n};\n","import {\n    mergeRecursive,\n    hasTouch,\n    selectElement,\n    isSimpleObject\n} from 'muze-utils';\nimport { ALL_ACTIONS } from './enums/actions';\nimport SelectionSet from './selection-set';\nimport {\n    initializeBehaviouralActions,\n    initializeSideEffects,\n    changeSideEffectAvailability,\n    initializePhysicalActions,\n    unionSets,\n    getSideEffects\n} from './helper';\n\n/**\n * This class is responsible for dispatching behavioural actions and side effects. It also keeps the information of\n * registered physical actions, behavioural actions and side effects. Also, it keeps the map of physical and behavioural\n * actions and behavioural actions and side effects. Whenever any behavioural action is dispatched, it also propagates\n * the rows which got affected to the other datamodels. This class is initialized by {@link VisualUnit} and legend to\n * manage it's interaction.\n *\n * @public\n * @class Firebolt\n * @module Firebolt\n */\nexport default class Firebolt {\n    constructor (context, actions, sideEffects, behaviourEffectMap) {\n        this.context = context;\n        this._sideEffectDefinitions = {};\n        this._sideEffects = {};\n        this._propagationInf = {};\n        this._actions = {\n            behavioural: {},\n            physical: {}\n        };\n        this._selectionSet = {};\n        this._volatileSelectionSet = {};\n        this._propagationFields = {};\n        this._sourceSideEffects = {\n            selectionBox: () => false\n        };\n        this._propagationBehaviourMap = {};\n        this._sourceBehaviours = {};\n        this._actionBehaviourMap = {};\n        this._config = {};\n        this._behaviourEffectMap = {};\n        this._entryExitSet = {};\n        this._actionHistory = {};\n        this._queuedSideEffects = {};\n\n        this.mapSideEffects(behaviourEffectMap);\n        this.registerBehaviouralActions(actions.behavioural);\n        this.registerSideEffects(sideEffects);\n        this.registerPhysicalBehaviouralMap(actions.physicalBehaviouralMap);\n        this.registerPhysicalActions(actions.physical);\n    }\n\n    config (...config) {\n        if (config.length) {\n            this._config = mergeRecursive(this._config, config[0]);\n            return this;\n        }\n        return this._config;\n    }\n\n    mapSideEffects (behEffectMap) {\n        const behaviourEffectMap = this._behaviourEffectMap;\n        for (const key in behEffectMap) {\n            if ({}.hasOwnProperty.call(behEffectMap, key)) {\n                const sideEffects = behEffectMap[key] || [];\n                let preventDefaultActions = false;\n                let effectNames;\n                if (isSimpleObject(sideEffects)) {\n                    effectNames = sideEffects.effects;\n                    preventDefaultActions = sideEffects.preventDefaultActions;\n                } else {\n                    effectNames = sideEffects;\n                }\n                !behaviourEffectMap[key] && (behaviourEffectMap[key] = []);\n                this._behaviourEffectMap[key] = [...new Set(preventDefaultActions ? effectNames :\n                    [...behaviourEffectMap[key], ...effectNames])];\n            }\n        }\n        return this;\n    }\n\n    registerBehaviouralActions (actions) {\n        const behaviours = initializeBehaviouralActions(this, actions);\n        this.prepareSelectionSets(behaviours);\n        Object.assign(this._actions.behavioural, behaviours);\n        return this;\n    }\n\n    prepareSelectionSets () {\n        return this;\n    }\n\n    registerSideEffects (sideEffects) {\n        for (const key in sideEffects) {\n            this._sideEffectDefinitions[sideEffects[key].formalName()] = sideEffects[key];\n        }\n        this.initializeSideEffects();\n        return this;\n    }\n\n    applySideEffects (sideEffects, selectionSet, payload) {\n        const sideEffectStore = this.sideEffects();\n        const actionHistory = this._actionHistory;\n        const queuedSideEffects = this._queuedSideEffects;\n        sideEffects.forEach((sideEffect) => {\n            let options;\n            let name;\n            const effects = sideEffect.effects;\n            const behaviours = sideEffect.behaviours;\n            const combinedSet = unionSets(this, behaviours, selectionSet);\n            effects.forEach((effect) => {\n                if (typeof effect === 'object') {\n                    name = effect.name;\n                    options = effect.options;\n                } else {\n                    name = effect;\n                }\n\n                const sideEffectInstance = sideEffectStore[name];\n                if (sideEffectInstance.isEnabled()) {\n                    if (!sideEffectInstance.constructor.mutates() &&\n                        Object.values(actionHistory).some(d => d.isMutableAction)) {\n                        queuedSideEffects[`${name}-${behaviours.join()}`] = {\n                            name,\n                            params: [combinedSet, payload, options]\n                        };\n                    } else {\n                        this.dispatchSideEffect(name, combinedSet, payload, options);\n                    }\n                }\n            });\n        });\n        return this;\n    }\n\n    dispatchSideEffect (name, selectionSet, payload, options = {}) {\n        const sideEffectStore = this.sideEffects();\n        const sideEffect = sideEffectStore[name];\n        let disable = false;\n        if (options.filter && options.filter(sideEffect)) {\n            disable = true;\n        }\n        !disable && sideEffectStore[name].apply(selectionSet, payload, options);\n    }\n\n    registerPropagationBehaviourMap (map) {\n        this._propagationBehaviourMap = Object.assign(this._propagationBehaviourMap, map || {});\n        return this;\n    }\n\n    dispatchBehaviour (behaviour, payload, propagationInfo = {}) {\n        const propagate = propagationInfo.propagate !== undefined ? propagationInfo.propagate : true;\n        const behaviouralActions = this._actions.behavioural;\n        const action = behaviouralActions[behaviour];\n        const behaviourEffectMap = this._behaviourEffectMap;\n        const sideEffects = getSideEffects(behaviour, behaviourEffectMap);\n        this._propagationInf = propagationInfo;\n\n        if (action) {\n            const selectionSet = action.dispatch(payload);\n            const propagationSelectionSet = this.getPropagationSelectionSet(selectionSet);\n            this._entryExitSet[behaviour] = propagationSelectionSet;\n            const shouldApplySideEffects = this.shouldApplySideEffects(propagate);\n\n            if (propagate) {\n                this.propagate(behaviour, payload, selectionSet.find(d => d.sourceSelectionSet), sideEffects);\n            }\n            if (shouldApplySideEffects) {\n                const applicableSideEffects = this.getApplicableSideEffects(sideEffects, payload, propagationInfo);\n                this.applySideEffects(applicableSideEffects, propagationSelectionSet, payload);\n            }\n        }\n\n        return this;\n    }\n\n    getPropagationSelectionSet (selectionSet) {\n        return selectionSet.find(d => !d.sourceSelectionSet);\n    }\n\n    shouldApplySideEffects () {\n        return true;\n    }\n\n    changeBehaviourStateOnPropagation (behaviour, value) {\n        if (value instanceof Function) {\n            this._sourceBehaviours[behaviour] = value;\n        } else {\n            this._sourceBehaviours[behaviour] = () => value;\n        }\n        return this;\n    }\n\n    changeSideEffectStateOnPropagation (sideEffect, value) {\n        if (value instanceof Function) {\n            this._sourceSideEffects[sideEffect] = value;\n        } else {\n            this._sourceSideEffects[sideEffect] = () => value;\n        }\n    }\n\n    propagate () {\n        return this;\n    }\n\n    sideEffects (...sideEffects) {\n        if (sideEffects.length) {\n            this._sideEffects = sideEffects[0];\n            return this;\n        }\n        return this._sideEffects;\n    }\n\n    enableSideEffects (fn) {\n        changeSideEffectAvailability(this, fn, true);\n        return this;\n    }\n\n    disableSideEffects (fn) {\n        changeSideEffectAvailability(this, fn, false);\n        return this;\n    }\n\n    dissociateBehaviour (behaviour, physicalAction) {\n        const actionBehaviourMap = this._actionBehaviourMap;\n        for (const key in actionBehaviourMap) {\n            if (key === physicalAction) {\n                const behaviourMap = actionBehaviourMap[key];\n                behaviourMap.behaviours = behaviourMap.behaviours.filter(d => d !== behaviour);\n                this.mapActionsAndBehaviour(key);\n            }\n        }\n\n        return this;\n    }\n\n    dissociateSideEffect (sideEffect, behaviour) {\n        const behaviourEffectMap = this._behaviourEffectMap;\n        behaviourEffectMap[behaviour] = behaviourEffectMap[behaviour].filter(d => (d.name || d) !== sideEffect);\n        return this;\n    }\n\n    getApplicableSideEffects (sideEffects) {\n        return sideEffects;\n    }\n\n    attachPropagationListener (dataModel) {\n        dataModel.unsubscribe('propagation');\n        dataModel.on('propagation', this.onDataModelPropagation());\n        return this;\n    }\n\n    onDataModelPropagation () {\n        return (propValue) => {\n            const payload = propValue.payload;\n            const action = payload.action;\n\n            this.dispatchBehaviour(action, payload, {\n                propagate: false\n            });\n        };\n    }\n\n    createSelectionSet (uniqueIds, behaviouralActions) {\n        const behaviours = behaviouralActions || this._actions.behavioural;\n        const selectionSet = this._selectionSet;\n        const volatileSelectionSet = this._volatileSelectionSet;\n\n        for (const key in behaviours) {\n            if ({}.hasOwnProperty.call(behaviours, key)) {\n                selectionSet[key] = new SelectionSet(uniqueIds);\n                volatileSelectionSet[key] = new SelectionSet(uniqueIds, true);\n            }\n        }\n        this._volatileSelectionSet = volatileSelectionSet;\n        this.selectionSet(selectionSet);\n        return this;\n    }\n\n    selectionSet (...selectionSet) {\n        if (selectionSet.length) {\n            this._selectionSet = selectionSet[0];\n            return this;\n        }\n        return this._selectionSet;\n    }\n\n    initializeSideEffects () {\n        const sideEffectDefinitions = this._sideEffectDefinitions;\n        this.sideEffects(initializeSideEffects(this, sideEffectDefinitions));\n        return this;\n    }\n\n    registerPhysicalActions (actions) {\n        const initedActions = initializePhysicalActions(this, actions);\n        Object.assign(this._actions.physical, initedActions);\n        return this;\n    }\n\n    /**\n     * Allows to propagate the datamodel with only the supplied fields. When propagation is done, then the fields\n     * which are supplied for the specified behavioural action is propagated.\n     *\n     * @public\n     *\n     * @param {string} action Name of behavioural action. If '*' is specified, then for all behavioural actions it is\n     * applied.\n     * @param {Array} fields Array of field names which will be propagated.\n     * @param {boolean} append If true, then it is appended to the existing propagation data model fields else only\n     * those fields are projected from propagation data model and propagated.\n     *\n     * @return {Firebolt} Instance of firebolt\n     */\n    propagateWith (action, fields, append = false) {\n        const behaviouralActions = this._actions.behavioural;\n        if (fields.length) {\n            if (action === ALL_ACTIONS) {\n                for (const key in behaviouralActions) {\n                    this._propagationFields[key] = {\n                        fields,\n                        append\n                    };\n                }\n            } else {\n                this._propagationFields[action] = {\n                    fields,\n                    append\n                };\n            }\n            return this;\n        }\n        return this._propagationFields;\n    }\n\n    /**\n     * Map actions and behaviours\n     * @return {Firebolt} Firebolt instance\n     */\n    mapActionsAndBehaviour (phyAction) {\n        const initedPhysicalActions = this._actions.physical;\n        const map = this._actionBehaviourMap;\n\n        for (const action in map) {\n            if (!({}).hasOwnProperty.call(action, map) && action === (phyAction || action)) {\n                let target;\n                const mapObj = map[action];\n                target = mapObj.target;\n                const touch = mapObj.touch;\n                if (!target) {\n                    target = this.context.getDefaultTargetContainer();\n                }\n                const bind = hasTouch() ? touch === true || touch === undefined : !touch;\n                bind && this.bindActionWithBehaviour(initedPhysicalActions[action],\n                    target, mapObj.behaviours);\n            }\n        }\n        return this;\n    }\n\n    registerPhysicalBehaviouralMap (map) {\n        this._actionBehaviourMap = mergeRecursive(this._actionBehaviourMap, map);\n        return this;\n    }\n\n    /**\n     * Binds a target element with an action.\n     *\n     * @param {Function} action Action method\n     * @param {string} target Class name of element\n     * @param {Array} behaviourList Array of behaviours\n     * @return {FireBolt} Instance of firebolt\n     */\n    bindActionWithBehaviour (action, targets, behaviourList) {\n        if (typeof (targets) === 'string') {\n            targets = [targets];\n        }\n        targets.forEach((target) => {\n            const mount = this.context.mount();\n            const nodes = target.node instanceof Function ? target : selectElement(mount).selectAll(target);\n            if (!nodes.empty()) {\n                if (nodes instanceof Array) {\n                    nodes.forEach((node) => {\n                        action(selectElement(node), behaviourList);\n                    });\n                } else {\n                    action(nodes, behaviourList);\n                }\n            }\n        });\n        return this;\n    }\n\n    getPropagationInf () {\n        return this._propagationInf;\n    }\n\n    getAddSetFromCriteria (criteria, propagationInf = {}) {\n        const context = this.context;\n        const filteredDataModel = propagationInf.data ? propagationInf.data :\n            context.getDataModelFromIdentifiers(criteria, 'all');\n        return {\n            model: filteredDataModel,\n            uids: criteria === null ? null : (propagationInf.data ? propagationInf.entryRowIds :\n                filteredDataModel[0].getUids())\n        };\n    }\n\n    getSelectionSets (action) {\n        const sourceId = this.context.id();\n        const propagationInf = this._propagationInf || {};\n        const propagationSource = propagationInf.sourceId;\n        let applicableSelectionSets = [];\n        if (propagationSource !== sourceId) {\n            applicableSelectionSets = [this._volatileSelectionSet[action]];\n        }\n\n        if (propagationSource) {\n            applicableSelectionSets.push(this.selectionSet()[action]);\n        }\n        return applicableSelectionSets;\n    }\n\n    getFullData () {\n        return this.context.data();\n    }\n\n    resetted () {\n        return this._resetted;\n    }\n\n    /**\n     * Returns the entry and exit set information of the specified behavioural action.\n     *\n     * @public\n     *\n     * @param {string} behaviour Name of behavioural action.\n     *\n     * @return {Object} Entry exit set information.\n     */\n    getEntryExitSet (behaviour) {\n        return this._entryExitSet[behaviour];\n    }\n}\n","import { getSetInfo, getMergedSet, getSourceFields } from '../../helper';\n\n/**\n * This is the base class has all the common functionalities needed for all behavioural actions. Any other behavioural\n * action needs to extend this class.\n *\n * @public\n * @class GenericBehaviour\n * @module GenericBehaviour\n */\nexport default class GenericBehaviour {\n    constructor (firebolt) {\n        this.firebolt = firebolt;\n        this._enabled = true;\n    }\n\n    /**\n     * Returns entry and exit set information. This method is called by firebolt when ```dispatchBehaviour``` is called\n     * dynamically or when any physical action is triggered on the chart.\n     *\n     * @param {Object} payload Payload information.\n     * @param {Object|Array} payload.criteria Identifiers of data interacted with.\n     *\n     * @return {Array} Entry and exit set information.\n     */\n    dispatch (payload) {\n        const criteria = payload.criteria;\n        const firebolt = this.firebolt;\n        const formalName = this.constructor.formalName();\n        const selectionSets = firebolt.getSelectionSets(formalName);\n        const {\n            model: filteredDataModel,\n            uids\n        } = this.firebolt.getAddSetFromCriteria(criteria, this.firebolt.getPropagationInf());\n        const entryExitSets = selectionSets.map((selectionSet) => {\n            this.setSelectionSet(uids, selectionSet);\n            return this.getEntryExitSet(selectionSet, filteredDataModel, payload);\n        });\n\n        return entryExitSets;\n    }\n\n    /**\n     * Updates the selection set by adding uids to the instance of {@link SelectionSet} or removing them.\n     * {@link SelectionSet} keeps the information of which rows are in the entry set and exit set.\n     *\n     * @public\n     * @param {Array} addSet Array of row ids which got affected during interaction.\n     * @param {SelectionSet} selectionSet Instance of selection set.\n     *\n     * @return {GenericBehaviour} Instance of behaviour.\n     */\n    setSelectionSet () {\n        return this;\n    }\n\n    getEntryExitSet (selectionSet, filteredDataModel, payload) {\n        const {\n            entrySet,\n            exitSet,\n            completeSet\n        } = selectionSet.getSets();\n        const propagationInf = this.firebolt.getPropagationInf();\n        const dataModel = this.firebolt.getFullData();\n        const setConfig = {\n            isSourceFieldPresent: propagationInf.isSourceFieldPresent,\n            dataModel,\n            filteredDataModel,\n            propagationData: propagationInf.data,\n            selectionSet\n        };\n\n        return {\n            entrySet: [getSetInfo('oldEntry', entrySet[0], setConfig),\n                getSetInfo('newEntry', entrySet[1], setConfig)],\n            exitSet: [getSetInfo('oldEntry', exitSet[0], setConfig),\n                getSetInfo('newExit', exitSet[1], setConfig)],\n            mergedEnter: getSetInfo('mergedEnter', getMergedSet(entrySet), setConfig),\n            mergedExit: getSetInfo('mergedExit', getMergedSet(exitSet), setConfig),\n            completeSet: getSetInfo('complete', completeSet, setConfig),\n            isSourceFieldPresent: propagationInf.isSourceFieldPresent,\n            fields: getSourceFields(propagationInf, payload.criteria),\n            sourceSelectionSet: selectionSet._volatile === true\n        };\n    }\n\n    static mutates () {\n        return false;\n    }\n\n    enable () {\n        this._enabled = true;\n    }\n\n    disable () {\n        this._enabled = false;\n    }\n\n    isEnabled () {\n        return this._enabled;\n    }\n}\n\n","import GenericBehaviour from './generic';\nimport { getMergedSet } from '../../helper';\nimport * as SELECTION from '../../enums/selection';\n\nexport default class VolatileBehaviour extends GenericBehaviour {\n    setSelectionSet (addSet, selectionSet) {\n        if (addSet === null) {\n            selectionSet.reset();\n        } else if (addSet.length) {\n                // new add set\n            const existingAddSet = addSet.filter(d => selectionSet._set[d] === SELECTION.SELECTION_NEW_ENTRY\n                    || selectionSet._set[d] === SELECTION.SELECTION_OLD_ENTRY);\n            selectionSet.updateExit();\n            const { entrySet } = selectionSet.getSets();\n            selectionSet.reset(getMergedSet(entrySet));\n            selectionSet.add(addSet);\n            selectionSet.update(existingAddSet);\n        } else {\n            selectionSet.remove(selectionSet.getCompleteSet());\n        }\n    }\n}\n","export const BRUSH = 'brush';\nexport const HIGHLIGHT = 'highlight';\nexport const TOOLTIP = 'tooltip';\nexport const FILTER = 'filter';\nexport const SELECT = 'select';\n","import VolatileBehaviour from './volatile';\nimport { HIGHLIGHT } from '../../enums/behaviours';\n\nexport default class HighlightBehaviour extends VolatileBehaviour {\n    static formalName () {\n        return HIGHLIGHT;\n    }\n}\n","import VolatileBehaviour from './volatile';\nimport * as BEHAVIOURNAMES from '../../enums/behaviours';\n\n/**\n * This is the behaviour for brushing a region on the chart. It accepts a payload\n * which contains the x and y range of the data and other configuration. It will then\n * create a selection box from the range and select the points which fall within the range.\n */\nexport default class BrushBehaviour extends VolatileBehaviour {\n    static formalName () {\n        return BEHAVIOURNAMES.BRUSH;\n    }\n}\n","import VolatileBehaviour from './volatile';\nimport { FILTER } from '../../enums/behaviours';\n\nexport default class FilterBehaviour extends VolatileBehaviour {\n    static formalName () {\n        return FILTER;\n    }\n\n    static mutates () {\n        return true;\n    }\n}\n","import GenericBehaviour from './generic';\nimport { getMergedSet } from '../../helper';\nimport * as SELECTION from '../../enums/selection';\n\nexport default class PersistentBehaviour extends GenericBehaviour {\n    setSelectionSet (addSet, selectionSet) {\n        if (addSet === null) {\n            selectionSet.reset();\n        } else if (addSet.length) {\n            const propagationInf = this.firebolt.getPropagationInf();\n            // new add set\n            const existingAddSet = addSet.filter(d => selectionSet._set[d] === SELECTION.SELECTION_NEW_ENTRY\n                || selectionSet._set[d] === SELECTION.SELECTION_OLD_ENTRY);\n            if (propagationInf.propagate === false) {\n                selectionSet.updateExit();\n                const { entrySet } = selectionSet.getSets();\n                selectionSet.reset(getMergedSet(entrySet));\n                selectionSet.add(addSet);\n                selectionSet.update(existingAddSet);\n            } else {\n                // existing add set\n                if (existingAddSet.length) {\n                    selectionSet.updateExit();\n                    selectionSet.remove(existingAddSet);\n                } else {\n                    selectionSet.updateEntry();\n                    selectionSet.add(addSet);\n                }\n                const { exitSet } = selectionSet.getSets();\n                const mergedExitSet = getMergedSet(exitSet);\n                const completeSetCount = selectionSet.getCompleteSet().length;\n                if (mergedExitSet.length === completeSetCount) {\n                    selectionSet.reset();\n                }\n            }\n        } else {\n            selectionSet.remove(selectionSet.getCompleteSet());\n        }\n\n        return this;\n    }\n}\n","import PersistentBehaviour from './persistent';\nimport { SELECT } from '../../enums/behaviours';\n\nexport default class SelectBehaviour extends PersistentBehaviour {\n    static formalName () {\n        return SELECT;\n    }\n}\n\n","import { DimensionSubtype, MeasureSubtype } from 'muze-utils';\n/**\n * Gets the drag action configuration\n * @param {VisualUnit} instance instance of visual unit\n * @param {Object} config x y positions\n * @return {Object} Payload of behaviour\n*/\n/* istanbul ignore next */ const getDragActionConfig = (sourceInfo, config, fieldsConfig) => {\n    if (!(sourceInfo.axes.x || sourceInfo.axes.y)) {\n        return {\n            criteria: null\n        };\n    }\n\n    const axes = sourceInfo.axes;\n    const xAxis = axes.x[0];\n    const yAxis = axes.y[0];\n    const axisFields = sourceInfo.fields;\n    const xField = axisFields.x[0].getMembers()[0];\n    const yField = axisFields.y[0].getMembers()[0];\n    const xFieldType = fieldsConfig[xField].def.subtype;\n    const yFieldType = fieldsConfig[yField].def.subtype;\n    const dimensions = {};\n    const stPos = config.startPos;\n    const endPos = config.endPos;\n\n    if (stPos.x === endPos.x && stPos.y === endPos.y) {\n        return {\n            criteria: null\n        };\n    }\n\n    const dragDim = xFieldType === MeasureSubtype.CONTINUOUS ? (yFieldType === MeasureSubtype.CONTINUOUS ?\n        ['x', 'y'] : ['y']) : ['x'];\n    const criteria = {};\n    const isXDimension = xFieldType === DimensionSubtype.CATEGORICAL;\n    const isYDimension = yFieldType === DimensionSubtype.CATEGORICAL;\n    const xRange = xAxis.invertExtent(stPos.x, endPos.x);\n    const yRange = yAxis.invertExtent(stPos.y, endPos.y);\n    const selectedDomains = {\n        x: stPos.x === endPos.x ? [] : (isXDimension ? xRange : xRange.sort((a, b) => a - b)),\n        y: stPos.y === endPos.y ? [] : (isYDimension ? yRange : yRange.sort((a, b) => a - b))\n    };\n    const rangeObj = {};\n\n    if (dragDim.length === 2) {\n        rangeObj[xField] = selectedDomains.x;\n        rangeObj[yField] = selectedDomains.y;\n        if (xField === yField) {\n            const xdom = selectedDomains.x;\n            const ydom = selectedDomains.y;\n            const min = xdom[0] > ydom[0] ? ydom : xdom;\n            const max = min === ydom ? xdom : ydom;\n            if (min[1] < max[0]) {\n                rangeObj[xField] = [];\n            } else {\n                rangeObj[xField] = [max[0], min[1] < max[1] ? min[1] : max[1]];\n            }\n            dimensions.x = [stPos.x, endPos.x];\n            dimensions.y = [stPos.y, endPos.y];\n        }\n    } else {\n        criteria[dragDim[0]] = selectedDomains[dragDim[0]] || [];\n\n        if (dragDim[0] === 'x') {\n            rangeObj[xField] = criteria.x;\n            if (xFieldType === DimensionSubtype.CATEGORICAL) {\n                dimensions.x = (config.snap && stPos.x !== endPos.x) ? xAxis.getNearestRange(stPos.x, endPos.x) :\n                    [stPos.x, endPos.x];\n            }\n        } else {\n            rangeObj[yField] = criteria.y;\n            if (yFieldType === DimensionSubtype.CATEGORICAL) {\n                dimensions.y = (config.snap && stPos.y !== endPos.y) ? yAxis.getNearestRange(stPos.y, endPos.y) :\n                    [stPos.y, endPos.y];\n            }\n        }\n    }\n\n    return {\n        criteria: rangeObj,\n        dimensions\n    };\n};\n\nexport default getDragActionConfig;\n","import {\n    getEvent,\n    getD3Drag\n } from 'muze-utils';\n\nimport getDragActionConfig from './drag-action-config';\n\n/**\n * Adds dragging action to the target element.\n * @param {VisualUnit} instance Instance of visual unit.\n * @param {SVGElement} targetEl Element on which brushing action is needed.\n * @param {Array} behaviours Array of behaviours\n */\nexport const attachDragEvent = (targetEl, behaviours, firebolt, touch) => {\n    let startPos = {};\n    let endPos = {};\n    let drawingInf;\n\n    const d3Drag = getD3Drag();\n    let touchStart;\n    targetEl.call(d3Drag().on('start', () => {\n        const event = getEvent();\n        startPos = {\n            x: event.x,\n            y: event.y\n        };\n        drawingInf = firebolt.context.getDrawingContext();\n        touchStart = new Date().getTime();\n    }).on('drag', () => {\n        const event = getEvent();\n        endPos = {\n            x: event.x,\n            y: event.y\n        };\n        if (touch && Math.abs(startPos.x - endPos.x) <= 5) {\n            return;\n        }\n        endPos.x = Math.max(0, Math.min(endPos.x, drawingInf.width));\n        endPos.y = Math.max(0, Math.min(endPos.y, drawingInf.height));\n\n        const payload = getDragActionConfig(firebolt.context.getSourceInfo(), {\n            startPos,\n            endPos\n        }, firebolt.context.data().getFieldsConfig());\n        behaviours.forEach(beh => firebolt.dispatchBehaviour(beh, payload));\n    }).on('end', () => {\n        const event = getEvent();\n        endPos = {\n            x: event.x,\n            y: event.y\n        };\n        const duration = new Date().getTime() - touchStart;\n\n        if (touch && duration > 100 && Math.abs(startPos.x - endPos.x) <= 5) {\n            return;\n        }\n        endPos.x = Math.max(0, Math.min(endPos.x, drawingInf.width));\n        endPos.y = Math.max(0, Math.min(endPos.y, drawingInf.height));\n\n        const payload = getDragActionConfig(firebolt.context.getSourceInfo(), {\n            startPos,\n            endPos,\n            snap: true\n        }, firebolt.context.data().getFieldsConfig());\n        payload.dragEnd = true;\n        behaviours.forEach(beh => firebolt.dispatchBehaviour(beh, payload));\n    }));\n};\n\n","import { getClientPoint, getEvent } from 'muze-utils';\nimport { CONSOLIDATED, FRAGMENTED } from '../../enums/constants';\n\n/**\n * Adds mouse interactions to target element.\n * @param {Firebolt} instance instance of firebolt.\n * @param {SVGElement} targetEl Element on which the event listeners will be attached.\n * @param {Array} behaviours Array of behaviours\n */\n/* istanbul ignore next */ const hover = firebolt => (targetEl, behaviours) => {\n    const dispatchBehaviour = function (args) {\n        const event = getEvent();\n        const context = firebolt.context;\n        const tooltipConf = context.config().interaction.tooltip;\n        const mode = tooltipConf.mode;\n        const pos = getClientPoint(context.getDrawingContext().svgContainer, event);\n        const nearestPoint = context.getNearestPoint(pos.x, pos.y, {\n            getAllPoints: mode === CONSOLIDATED || mode === FRAGMENTED,\n            data: args,\n            event\n        });\n        const payload = {\n            criteria: nearestPoint ? nearestPoint.id : null,\n            showInPosition: nearestPoint.showInPosition,\n            target: nearestPoint.target,\n            position: pos,\n            mode\n        };\n\n        behaviours.forEach(beh => firebolt.dispatchBehaviour(beh, payload));\n        event.stopPropagation();\n    };\n\n    targetEl.on('mouseover', dispatchBehaviour)\n                    .on('mousemove', dispatchBehaviour)\n                    .on('mouseout', () => {\n                        behaviours.forEach(beh => firebolt.dispatchBehaviour(beh, {\n                            criteria: null\n                        }));\n                    });\n};\n\nexport default hover;\n","export const CLASSPREFIX = 'muze';\nexport const CONSOLIDATED = 'consolidated';\nexport const FRAGMENTED = 'fragmented';\n\n","import { getClientPoint } from 'muze-utils';\n\nexport const generatePayloadFromEvent = function (args, event, firebolt) {\n    const context = firebolt.context;\n    const pos = getClientPoint(context.getDrawingContext().svgContainer, event.touches ? event.touches[0] : event);\n    const nearestPoint = context.getNearestPoint(pos.x, pos.y, {\n        data: args,\n        event\n    });\n    return {\n        criteria: nearestPoint ? nearestPoint.id : null,\n        showInPosition: nearestPoint.showInPosition,\n        target: nearestPoint.target,\n        position: pos\n    };\n};\n","import { getEvent } from 'muze-utils';\nimport { generatePayloadFromEvent } from './helpers';\n\n/**\n * Adds mouse interactions to target element.\n * @param {VisualUnit} instance instance of visual unit.\n * @param {SVGElement} targetEl Element on which the event listeners will be attached.\n * @param {Array} behaviours Array of behaviours\n */\n/* istanbul ignore next */ const click = firebolt => (targetEl, behaviours) => {\n    const dispatchBehaviour = function (args) {\n        const event = getEvent();\n        const payload = generatePayloadFromEvent(args, event, firebolt);\n        behaviours.forEach(beh => firebolt.dispatchBehaviour(beh, payload));\n        event.stopPropagation();\n    };\n\n    targetEl.on('click', dispatchBehaviour);\n};\nexport default click;\n","import drag from './drag';\nimport hover from './hover';\nimport { longtouch } from './longtouch';\nimport { touchdrag } from './touch-drag';\nimport * as ACTIONNAMES from '../../enums/actions';\nimport click from './click';\n\nexport const physicalActions = {\n    [ACTIONNAMES.DRAG]: drag,\n    [ACTIONNAMES.HOVER]: hover,\n    [ACTIONNAMES.CLICK]: click,\n    [ACTIONNAMES.LONGTOUCH]: longtouch,\n    [ACTIONNAMES.TOUCHDRAG]: touchdrag\n};\n\n","import { attachDragEvent } from './helpers/drag-event';\n\n/**\n * Adds dragging action to the target element.\n * @param {VisualUnit} instance Instance of visual unit.\n * @param {SVGElement} targetEl Element on which brushing action is needed.\n * @param {Array} behaviours Array of behaviours\n */\n/* istanbul ignore next */ const drag = firebolt => (targetEl, behaviours) => {\n    attachDragEvent(targetEl, behaviours, firebolt);\n};\n\nexport default drag;\n","/* global setTimeout */\nimport { getEvent } from 'muze-utils';\nimport { generatePayloadFromEvent } from './helpers';\n\n/**\n * Adds mouse interactions to target element.\n * @param {VisualUnit} instance instance of visual unit.\n * @param {SVGElement} targetEl Element on which the event listeners will be attached.\n * @param {Array} behaviours Array of behaviours\n */\nexport const longtouch = firebolt => (targetEl, behaviours) => {\n    let event;\n    let touchEnd;\n    const dispatchBehaviour = function (args) {\n        const payload = generatePayloadFromEvent(args, event, firebolt);\n        behaviours.forEach(beh => firebolt.dispatchBehaviour(beh, payload));\n        event.stopPropagation();\n    };\n\n    touchEnd = false;\n    event = getEvent();\n    targetEl.on('touchstart', (args) => {\n        event = getEvent();\n        touchEnd = false;\n        setTimeout(() => {\n            if (!touchEnd) {\n                dispatchBehaviour(args);\n            } else {\n                behaviours.forEach(beh => firebolt.dispatchBehaviour(beh, {\n                    criteria: null\n                }));\n            }\n        }, 100);\n    }).on('touchend', () => {\n        touchEnd = true;\n    });\n};\n","import { attachDragEvent } from './helpers/drag-event';\n\n/**\n * Adds dragging action to the target element.\n * @param {VisualUnit} instance Instance of visual unit.\n * @param {SVGElement} targetEl Element on which brushing action is needed.\n * @param {Array} behaviours Array of behaviours\n */\nexport const touchdrag = firebolt => (targetEl, behaviours) => {\n    attachDragEvent(targetEl, behaviours, firebolt, true);\n};\n\n","export const PROPS = {\n    valueParser: {\n        defaultValue: val => val\n    }\n};\n","import GenericSideEffect from './generic-sideeffect';\n\nexport default GenericSideEffect;\n","import { mergeRecursive, getUniqueId, generateGetterSetters } from 'muze-utils';\nimport { PROPS } from './props';\n\n/**\n * This is the base class of all side effects. It contains all common methods like setting configuration, disabling,\n * enabling side effect, etc. Every new side effect has to inherit this class or {@link SpawnableSideEffect} or\n * {@link SurrogateSideEffect} class. All side effects are initialized by firebolt. The instance of firebolt is\n * passed on initialization. The firebolt instance contains ```context``` which is the instance of visual unit with\n * which the firebolt is attached.\n *\n * @public\n * @class\n * @module GenericSideEffect\n */\nexport default class GenericSideEffect {\n    constructor (firebolt) {\n        this.firebolt = firebolt;\n        this._enabled = true;\n        this._strategy = 'default';\n        this._config = {};\n        this._id = getUniqueId();\n        this._strategies = {};\n        generateGetterSetters(this, PROPS);\n        this.config(this.constructor.defaultConfig());\n    }\n\n    /**\n     * Returns the default configuration of the side effect.\n     *\n     * @public\n     * @return {Object} Default configuration of side effect.\n     */\n    static defaultConfig () {\n        return {};\n    }\n\n    /**\n     * Returns the formal name of a side effect. This method must be implemented by all side effects which changes\n     * or adds any element in the visualization.\n     *\n     * @return {string} Formal name of side effect.\n     */\n    static formalName () {\n        return 'generic';\n    }\n\n    static target () {\n        return 'all';\n    }\n\n    /**\n     * Returns true if the side effects mutates the data of chart.\n     *\n     * @public\n     *\n     * @return {boolean} If the side effect mutates the data of chart.\n     */\n    static mutates () {\n        return false;\n    }\n\n    /**\n     * Sets or gets the configuration of side effect.\n     *\n     * When setter,\n     * @param {Object} config Configuration of side effect.\n     * @return {GenericSideEffect} Side effect instance.\n     *\n     * When getter,\n     * @return {Object} Side effect configuration.\n     */\n    config (...params) {\n        if (params.length) {\n            this._config = mergeRecursive(this._config, params[0]);\n            return this;\n        }\n        return this._config;\n    }\n\n    disable () {\n        this._enabled = false;\n        return this;\n    }\n\n    enable () {\n        this._enabled = true;\n        return this;\n    }\n\n    isEnabled () {\n        return this._enabled;\n    }\n\n    /**\n     * Applies the interaction effect on the chart. This is where the implemntation of the side effect is defined.\n     *\n     * @param {Object} selectionSet Contains the entry and exit set of data which got affected during interaction.\n     * @param {Object} selectionSet.mergedEnter Combined previous entry and new entry set.\n     * @param {DataModel} selectionSet.mergedEnter.model Instance of data model containing all rows which got\n     * affected during interaction.\n     * @param {Array} selectionSet.mergedEnter.uids Ids of all rows which were affected during interaction.\n     * @param {Object} selectionSet.mergedExit Combined previous exit and new exit set.\n     * @param {DataModel} selectionSet.mergedExit.model Instance of data model containing rows which were not affected\n     * during interaction.\n     * @param {Array} selectionSet.mergedExit.uids Ids of all rows which were not affected during interaction.\n     * @param {Object} selectionSet.entrySet Entry set information.\n     * @param {Array} selectionSet.entrySet[0].uids All row ids which got affected during previous interaction.\n     * @param {Array} selectionSet.entrySet[1].uids All row ids which got affected during current interaction.\n     * @param {Array} selectionSet.exitSet[0].uids All row ids which were not affected during previous interaction.\n     * @param {Array} selectionSet.exitSet[1].uids All row ids which were not affected during current interaction.\n     * @param {Object} payload Payload information of the behavioural action on trigger of which this side effect\n     * is applied.\n     * @param {Object} options Optional information for side effect like strategy, etc.\n     */\n    apply () {\n        return this;\n    }\n\n    /**\n     * Adds a new strategy method for this side effect. The strategy method is implemented by side effect class.\n     *\n     * @param {string} name Name of the strategy.\n     * @param {Function} fn Strategy method.\n     *\n     * @return {GenericSideEffect} Instance of side effect.\n     */\n    setStrategy (name, fn) {\n        if (fn) {\n            this._strategies[name] = fn;\n        }\n        return this;\n    }\n}\n","import GenericSideEffect from './generic';\n\n/**\n * This class is inherited by all side effects which changes the look of any existing elements in the visualization.\n * For example, if a side effect wants to change the color of bar plots, then it is a surrogate side effect.\n *\n * To use this,\n * ```\n *      const SurrogateSideEffect = muze.SideEffects.standards.SurrogateSideEffect;\n *\n *      class BarColorChanger extends SurrogateSideEffect {\n *          static formalName () {\n *              return 'colorChanger';\n *          }\n *\n *          // Implement the logic of applying the style here.\n *          apply () {\n *          }\n *      }\n * ```\n * @public\n *\n * @module SurrogateSideEffect\n * @class\n * @extends GenericSideEffect\n */\nexport default class SurrogateSideEffect extends GenericSideEffect {\n    /**\n     * Applies or removes interaction styles from plot elements. An array of row ids needs to be passed\n     * which identifies the plot elements and applies styles to them.\n     *\n     * To apply the interaction style,\n     * ```\n     *      const entryRowIds = entrySet[0].uids;\n     *      const interactionStyle = [{\n     *          type: 'fill',\n     *          intensity: [0, 0, 15, 0] // hsla configuration\n     *      }];\n     *\n     *      this.applyInteractionStyle(entryRowIds, interactionStyle, 'brighten', true);\n     * ```\n     * @public\n     * @param {Array} set Array of row ids.\n     * @param {Array} config Style configuration.\n     * @param {Object} config[0] fill or stroke configuration.\n     * @param {string} config[0].type Type of style - fill or stroke.\n     * @param {Array} config[0].intensity hsla configuration.\n     * @param {string} interactionType Type of interaction. This is needed for storing the styles for\n     * each type of interaction in the plot elements.\n     * @param {boolean} apply Whether to apply or remove the interaction style.\n     *\n     * @return {SurrogateSideEffect} Instance of surrogate side effect.\n     */\n    applyInteractionStyle (set, config = {}, interactionType, apply) {\n        const layers = this.firebolt.context.layers();\n        layers.forEach(layer => layer.config().interactive !== false &&\n            layer.applyInteractionStyle(interactionType, set.uids, apply));\n        return this;\n    }\n}\n","import { makeElement } from 'muze-utils';\n\nimport GenericSideEffect from './generic';\n\n/**\n * Any side effect which will add any new element to the chart like drawing a rectangular box or any annotation over\n * the chart needs to inherit this class. This class has methods which returns the container where the dom elements\n * needs to be created.\n *\n * To use this,\n * ```\n *      const SpawnableSideEffect = muze.SideEffects.standards.SpawnableSideEffect;\n *\n *      class SelectionBox extends SpawnableSideEffect {\n *          static formalName () {\n *              return 'selectionBox';\n *          }\n *\n *          // Implement the logic of applying the style here.\n *          apply () {\n *          }\n *      }\n * ```\n * @public\n * @class\n * @extends GenericSideEffect\n * @module SpawnableSideEffect\n */\nexport default class SpawnableSideEffect extends GenericSideEffect {\n    /**\n     * Creates a html or svg element in the container.\n     *\n     * @public\n     * @param {SVGElement|HTMLElement} container Container where the dom element will be rendered.\n     * @param {string} elemType Type of dom element.\n     * @param {Array} data Array of objects with which the dom elements will be binded.\n     * @param {string} className class name of the element.\n     *\n     * @return {Selection} D3 Selection of the element.\n     */\n    createElement (container, elemType, data, className, callbacks) {\n        return makeElement(container, elemType, data, className, callbacks);\n    }\n\n    /**\n     * Returns the drawing information for side effect like svg container, dimensions of the visual unit.\n     *\n     * @public\n     * @return {Object} Drawing information for side effect.\n     * ```\n     *      sideEffectGroup: // svg container where the side effect needs to be appended.\n     *      svgContainer: // svg container of the {@link VisualUnit}.\n     *      htmlContainer: // html div container of the {@link VisualUnit}.\n     *      width: // Width of the {@link VisualUnit}\n     *      height: // Height of the {@link VisualUnit}\n     * ```\n     */\n    drawingContext (...drawingContext) {\n        if (drawingContext.length) {\n            this._drawingContext = drawingContext[0];\n            return this;\n        }\n        return this._drawingContext();\n    }\n\n    show () {\n        return this;\n    }\n\n    hide () {\n        return this;\n    }\n}\n","import { selectElement } from 'muze-utils';\n\nexport const getBoxDimensionsFromPayload = (payload, axes, axisFields) => {\n    let x1;\n    let x2;\n    let y1;\n    let y2;\n    let xRange;\n    let yRange;\n    let direction;\n    const criteria = payload.criteria;\n    const dimensions = payload.dimensions || {};\n    const xDim = dimensions.x;\n    const yDim = dimensions.y;\n\n    if (criteria === null) {\n        return null;\n    }\n\n    const xAxis = axes.x[0];\n    const yAxis = axes.y[0];\n    const xLinear = xAxis.constructor.type() === 'linear';\n    const yLinear = yAxis.constructor.type() === 'linear';\n    const xField = `${axisFields.x[0]}`;\n    const yField = `${axisFields.y[0]}`;\n    const xCriteria = criteria[xField];\n    const yCriteria = criteria[yField];\n\n    if (xCriteria && xCriteria[0] instanceof Array) {\n        xRange = xCriteria[0];\n        yRange = xCriteria[1];\n    } else {\n        xRange = xCriteria || [];\n        yRange = yCriteria || [];\n    }\n    direction = xCriteria && yCriteria ? 'both' : (xCriteria ? 'vertical' : 'horizontal');\n    if (xRange && xRange.length) {\n        if ((yAxis.constructor.type() === 'band' && xLinear)) {\n            x1 = x2 = undefined;\n            direction = 'horizontal';\n        } else {\n            const domain = xAxis.domain();\n            const bandScale = xAxis.constructor.type() === 'band';\n            let x1Val;\n            let x2Val;\n            if (bandScale) {\n                let x1DomainIndex = domain.indexOf(xRange[0]);\n                let x2DomainIndex = domain.indexOf(xRange[xRange.length - 1]);\n                [x1DomainIndex, x2DomainIndex] = [x1DomainIndex, x2DomainIndex].sort((a, b) => a - b);\n                x1Val = domain[x1DomainIndex];\n                x2Val = domain[x2DomainIndex];\n            } else {\n                x1Val = xRange[0];\n                x2Val = xRange[xRange.length - 1];\n            }\n            x1 = xAxis.getScaleValue(x1Val);\n            x2 = xAxis.getScaleValue(x2Val);\n            x2 += bandScale ? xAxis.getUnitWidth() : 0;\n        }\n    } else {\n        x1 = x2 = undefined;\n    }\n    if (yRange && yRange.length) {\n        if ((xAxis.constructor.type() === 'band' && yLinear)) {\n            y1 = y2 = undefined;\n            direction = 'vertical';\n        } else {\n            const domain = yAxis.domain();\n            const bandScale = yAxis.constructor.type() === 'band';\n            let y1Val;\n            let y2Val;\n            if (bandScale) {\n                let y1DomainIndex = domain.indexOf(yRange[0]);\n                let y2DomainIndex = domain.indexOf(yRange[yRange.length - 1]);\n                [y1DomainIndex, y2DomainIndex] = [y1DomainIndex, y2DomainIndex].sort(((a, b) => b - a));\n                y1Val = domain[y1DomainIndex];\n                y2Val = domain[y2DomainIndex];\n            } else {\n                y1Val = yRange[0];\n                y2Val = yRange[yRange.length - 1];\n            }\n            y1 = yAxis.getScaleValue(y1Val);\n            y2 = yAxis.getScaleValue(y2Val);\n            y2 += yAxis.constructor.type() === 'band' ? yAxis.getUnitWidth() : 0;\n        }\n    } else {\n        y1 = y2 = undefined;\n    }\n\n    if ((yLinear && xLinear) || !payload.dragEnd) {\n        if (xDim) {\n            [x1, x2] = xDim;\n        }\n        if (yDim) {\n            [y1, y2] = yDim;\n        }\n    }\n\n    return {\n        dimension: {\n            x1,\n            x2,\n            y1,\n            y2\n        },\n        direction\n    };\n};\n\nexport const changeVisibility = (context, sideEffectGroup, visible) => {\n    const config = context.config();\n    const className = config.defClassName;\n    const classPrefix = config.classPrefix;\n    selectElement(sideEffectGroup).selectAll(`.${classPrefix}-${className}`)\n                    .style('display', visible ? 'block' : 'none');\n};\n","import {\n    getQualifiedClassName,\n    selectElement,\n    makeElement,\n    isValidValue\n} from 'muze-utils';\nimport { CLASSPREFIX } from '../../enums/constants';\nimport './styles.scss';\nimport SpawnableSideEffect from '../spawnable';\nimport { selectionBoxDrag } from '../../actions/physical/selection-box-drag';\nimport { getBoxDimensionsFromPayload, changeVisibility } from './helper';\n\n/**\n * This class is used to create a selection box which is used by visual unit for brushing and\n * selection in the canvas.\n * @class SelectionBox\n */\nclass SelectionBox extends SpawnableSideEffect {\n    /**\n     * It returns the default configuration needed by selectionbox.\n     * @return {Object} Default configuration of the selection box.\n     */\n    static defaultConfig () {\n        return {\n            defClassName: 'selection-box-group',\n            className: '',\n            classPrefix: CLASSPREFIX,\n            box: {\n                defClassName: 'selection-box',\n                className: ''\n            },\n            transition: {\n                duration: 200\n            }\n        };\n    }\n\n    static formalName () {\n        return 'selectionBox';\n    }\n\n    /**\n     * Draws the selectionbox with the specified dimensions.\n     * @param {Object} dimension Dimensions of the selection box.\n     * @param {number} dimension.x1 Starting x position\n     * @param {number} dimension.x2 Ending x position\n     * @param {number} dimension.y1 Starting y position\n     * @param {number} dimension.y2 Ending y position\n     * @param {Object} conf Configuration needed to draw the selection box\n     * @param {number} unitWidth Width of the visual unit.\n     * @param {number} unitHeight Height of the visual unit.\n     */\n    apply (selectionSet, payload) {\n        let x;\n        let y;\n        let width;\n        let height;\n        const config = this._config;\n        const boxConf = config.box;\n        const firebolt = this.firebolt;\n        const drawingInf = this.drawingContext();\n        const mountPoint = drawingInf.sideEffectGroup;\n        const unitWidth = drawingInf.width;\n        const unitHeight = drawingInf.height;\n        const classPrefix = config.classPrefix;\n        const selectionGroupClassName = config.defClassName;\n\n        if (payload.criteria === null) {\n            this.hide(drawingInf);\n            return this;\n        }\n\n        const sourceInf = firebolt.context.getSourceInfo();\n        const { dimension, direction } = getBoxDimensionsFromPayload(payload, sourceInf.axes,\n            sourceInf.fields);\n        const transition = payload.dragEnd && config.transition;\n\n        if (direction === 'both' || direction === 'vertical') {\n            x = Math.min(dimension.x1, dimension.x2);\n            width = Math.abs(dimension.x2 - dimension.x1);\n        } else {\n            x = 0;\n            width = unitWidth;\n        }\n        if (direction === 'both' || direction === 'horizontal') {\n            y = Math.min(dimension.y1, dimension.y2);\n            height = Math.abs(dimension.y2 - dimension.y1);\n        } else {\n            height = unitHeight;\n            y = 0;\n        }\n        this.show(drawingInf);\n        // Create the data array for drawing the rectangle\n        const points = [\n            {\n                x,\n                y,\n                width,\n                height\n            }\n        ];\n        // Create the container group for selection box.\n        const selectionGroup = makeElement(selectElement(mountPoint), 'g', [1],\n            `.${classPrefix}-${selectionGroupClassName}`);\n        const sideEffect = this;\n        const selection = selectionGroup.selectAll('rect').data(points);\n        const selectionBox = selection.enter().append('rect')\n                        .each(function () {\n                            selectionBoxDrag(firebolt)(selectElement(this), ['brush'], sideEffect);\n                        })\n                        .merge(selection)\n                        .each(function (attrs) {\n                            let element = selectElement(this);\n                            transition && (element = element.transition().duration(transition.duration));\n                            for (const key in attrs) {\n                                if ({}.hasOwnProperty.call(attrs, key)) {\n                                    isValidValue(attrs[key]) && element.attr(key, attrs[key]);\n                                }\n                            }\n                        });\n        // Get the qualified class name for selection box rectangle\n        const boxClassName = getQualifiedClassName(boxConf.defClassName, this._id, classPrefix);\n        selectionBox.classed(boxClassName.join(' '), true);\n        selectionBox.classed(boxConf.className, true);\n\n        return this;\n    }\n\n    hide (drawingInf) {\n        changeVisibility(this, drawingInf.sideEffectGroup, false);\n    }\n\n    show (drawingInf) {\n        changeVisibility(this, drawingInf.sideEffectGroup, true);\n    }\n}\n\nexport default SelectionBox;\n\n","import {\n    getEvent,\n    getD3Drag\n } from 'muze-utils';\n\nimport getDragActionConfig from './helpers/drag-action-config';\n\nexport const selectionBoxDrag = firebolt => (targetEl, behaviours) => {\n    let subject;\n    let drawingInf;\n    const context = firebolt.context;\n    const onDrag = (payload) => {\n        behaviours.forEach(action => firebolt.dispatchBehaviour(action, payload));\n    };\n    const d3Drag = getD3Drag();\n\n    targetEl.call(d3Drag().on('start', () => {\n        const event = getEvent();\n        drawingInf = context.getDrawingContext();\n        subject = event.subject;\n    }).on('drag', () => {\n        const event = getEvent();\n        subject.x += event.dx;\n        subject.y += event.dy;\n        const width = drawingInf.width;\n        const height = drawingInf.height;\n        const x = Math.min(width - subject.width, Math.max(subject.x, 0));\n        const y = Math.min(height - subject.height, Math.max(subject.y, 0));\n        const y2 = y + subject.height;\n        const x2 = x + subject.width;\n\n        if (x >= 0 && x2 <= width && y >= 0 && y2 <= height) {\n            const payload = getDragActionConfig(context.getSourceInfo(), {\n                startPos: {\n                    x,\n                    y\n                },\n                endPos: {\n                    x: x2,\n                    y: y2\n                }\n            }, context.data().getFieldsConfig());\n            onDrag(payload);\n        }\n    }).on('end', () => {\n        const width = drawingInf.width;\n        const height = drawingInf.height;\n        const x = Math.min(width - subject.width, Math.max(subject.x, 0));\n        const y = Math.min(height - subject.height, Math.max(subject.y, 0));\n        const y2 = y + subject.height;\n        const x2 = x + subject.width;\n\n        if (x >= 0 && x2 <= width && y >= 0 && y2 <= height) {\n            const payload = getDragActionConfig(context.getSourceInfo(), {\n                startPos: {\n                    x,\n                    y\n                },\n                endPos: {\n                    x: x2,\n                    y: y2\n                },\n                snap: true\n            }, context.data().getFieldsConfig());\n            payload.dragEnd = true;\n            onDrag(payload);\n        }\n    }));\n};\n","export const CLASSPREFIX = 'muze';\nexport const ARROW_RIGHT = 'right';\nexport const ARROW_TOP = 'top';\nexport const ARROW_BOTTOM = 'bottom';\nexport const ARROW_LEFT = 'left';\nexport const TOOLTIP_LEFT = 'left';\nexport const TOOLTIP_RIGHT = 'right';\nexport const TOOLTIP_BOTTOM = 'bottom';\nexport const TOOLTIP_TOP = 'top';\nexport const INITIAL_STYLE = {\n    position: 'absolute',\n    width: 0,\n    height: 0\n};\n","import { CLASSPREFIX } from './constants';\n\nexport const defaultConfig = {\n    classPrefix: CLASSPREFIX,\n    defClassName: 'tooltip-box',\n    connectorClassName: 'tooltip-connectors',\n    className: '',\n    row: {\n        margin: 0\n    },\n    content: {\n        spacing: 5,\n        iconContainerSize: 10,\n        iconScale: 1,\n        iconShape: 'circle',\n        iconColor: '#ff0000',\n        rowMargin: '0px',\n        margin: 10,\n        separator: ':',\n        className: 'tooltip-content-container',\n        parentClassName: 'tooltip-content-parent-container'\n    },\n    arrow: {\n        size: 10,\n        disabled: false,\n        defClassName: 'tooltip-arrow',\n        className: '',\n        color: 'rgba(195,195,195,0.85)'\n    }\n};\n","import { getQualifiedClassName } from 'muze-utils';\nimport { TOOLTIP_LEFT, TOOLTIP_RIGHT, ARROW_RIGHT, ARROW_LEFT, TOOLTIP_BOTTOM } from './constants';\n\nexport const getArrowPos = (orient, dim, measurement, config) => {\n    let arrowPos;\n    const { x, y, boxHeight, boxWidth } = measurement;\n    const arrowDisabled = config.arrow.disabled;\n    const arrowWidth = arrowDisabled ? 0 : config.arrow.size;\n\n    if (orient === ARROW_LEFT || orient === ARROW_RIGHT) {\n        let start = 0;\n        let diff = boxHeight / 2;\n        const plotBottom = dim.y + dim.height;\n        const boxBottom = y + boxHeight;\n\n        if (dim.y > y) {\n            start = dim.y - y;\n            diff = (plotBottom >= boxBottom ? (boxBottom - dim.y) : dim.height) / 2;\n        } else if (boxBottom > plotBottom) {\n            diff = Math.abs(y - (dim.y + dim.height)) / 2;\n        }\n        arrowPos = start + diff - arrowWidth / 2;\n    } else {\n        let start = 0;\n        let diff = boxWidth / 2;\n        const plotRight = dim.x + dim.width;\n        const boxRight = x + boxWidth;\n\n        if (dim.x > x) {\n            start = dim.x - x;\n            diff = (plotRight >= boxRight ? (boxRight - dim.x) : dim.width) / 2;\n        } else if (boxRight > plotRight) {\n            diff = Math.abs(x - (dim.x + dim.width)) / 2;\n        }\n        arrowPos = start + diff - arrowWidth / 2;\n    }\n    return arrowPos;\n};\n\n/**\n * Places the arrow in the specified arrow position. It also applies appropriate arrow\n * class name to the arrow element.\n * @param {string} position Left, bottom or right position of the arrow;\n * @param {number} arrowPos position of arrow in pixels\n * @return {Tooltip} Instance of tooltip.\n */\nexport const placeArrow = (context, position, arrowPos) => {\n    const tooltipArrow = context._tooltipArrow;\n    const tooltipBackground = context._tooltipBackground;\n    const config = context._config;\n    const classPrefix = config.classPrefix;\n    const arrowConf = config.arrow;\n    const className = getQualifiedClassName(arrowConf.defClassName, context._id, config.classPrefix);\n\n    tooltipArrow.style('display', 'block');\n    tooltipArrow.attr('class', `${className.join(' ')}`);\n    if (position === TOOLTIP_LEFT || position === TOOLTIP_RIGHT) {\n        tooltipArrow.style('top', `${arrowPos}px`);\n        tooltipArrow.style('left', '');\n        tooltipBackground.style('top', `${arrowPos}px`);\n        tooltipBackground.style('left', '');\n    } else {\n        position === TOOLTIP_BOTTOM ? tooltipArrow.style('top', '100%') : tooltipArrow.style('top',\n            `-${arrowConf.size}px`);\n        tooltipArrow.style('left', `${arrowPos}px`);\n        position === TOOLTIP_BOTTOM ? tooltipBackground.style('top', '100%') : tooltipBackground.style('top',\n            `-${arrowConf.size + 3}px`);\n        tooltipBackground.style('left', `${arrowPos}px`);\n    }\n    tooltipArrow.classed(`${classPrefix}-tooltip-arrow`, true);\n    tooltipArrow.classed(`${classPrefix}-tooltip-arrow-${context._arrowOrientation}`, false);\n    tooltipArrow.classed(`${classPrefix}-tooltip-arrow-${position}`, true);\n    tooltipBackground.classed(`${classPrefix}-tooltip-background-arrow`, true);\n    tooltipBackground.classed(`${classPrefix}-tooltip-background-arrow-${context._arrowOrientation}`, false);\n    tooltipBackground.classed(`${classPrefix}-tooltip-background-arrow-${position}`, true);\n    return this;\n};\n\nexport const reorderContainers = (parentContainer, className) => {\n    parentContainer.selectAll(className).sort((a, b) => a - b);\n};\n","import {\n    selectElement,\n    mergeRecursive,\n    makeElement,\n    setAttrs,\n    setStyles,\n    getSymbol,\n    isSimpleObject\n} from 'muze-utils';\nimport { defaultConfig } from './default-config';\n\n/**\n * This class is used to manage the content of tooltip.\n */\nexport default class Content {\n    /**\n     * Creates an instance of content.\n     */\n    constructor () {\n        this._model = null;\n        this._formatter = null;\n        this._config = this.constructor.defaultConfig();\n    }\n   /**\n     * Returns the default configuration of tooltip\n     * @return {Object} Configuration of tooltip.\n     */\n    static defaultConfig () {\n        const config = defaultConfig.content;\n        config.classPrefix = defaultConfig.classPrefix;\n        return config;\n    }\n\n    config (...c) {\n        if (c.length > 0) {\n            this._config = mergeRecursive(this._config, c[0]);\n            return this;\n        }\n        return this._config;\n    }\n\n    /**\n     * Update model. The format contains presentation strategy which determines how to show the content.\n     * If no strategy is mentioned then default is to show key value pair\n    */\n    update (item) {\n        this._model = item.model;\n        this._formatter = item.formatter;\n        return this;\n    }\n\n    context (ctx) {\n        this._context = ctx;\n        return this;\n    }\n\n    render (mount) {\n        let data;\n        const config = this._config;\n        const iconContainerSize = config.iconContainerSize;\n        const formatter = this._formatter;\n        const rowMargin = config.rowMargin;\n        const model = this._model;\n\n        this._mount = mount;\n        if (model instanceof Array) {\n            data = model;\n        } else {\n            data = formatter(this._model, this.config(), this._context);\n        }\n\n        if (data instanceof Function) {\n            mount.html(data());\n        } else {\n            let content = data;\n            let displayFormat = 'default';\n\n            if (isSimpleObject(data)) {\n                content = data.content;\n                displayFormat = data.displayFormat;\n            }\n\n            const body = makeElement(mount, 'div', [displayFormat], `${config.classPrefix}-tooltip-content`, {},\n                d => d);\n\n            if (displayFormat === 'table') {\n                const table = makeElement(body, 'table', [1], `${config.classPrefix}-tooltip-table`);\n                const tbody = makeElement(table, 'tbody', [1], `${config.classPrefix}-tooltip-table-tbody`);\n                const rows = makeElement(tbody, 'tr', content, `${config.classPrefix}-tooltip-table-row`);\n                rows.each(function (d, i) {\n                    selectElement(this).classed(`${config.classPrefix}-tooltip-table-row-${i}`, true);\n                });\n                const cells = makeElement(rows, 'td', d => d, `${config.classPrefix}-tooltip-table-cell`);\n                cells.each(function (d) {\n                    selectElement(this).html(d);\n                });\n            } else {\n                const rows = makeElement(body, 'div', content, `${config.classPrefix}-tooltip-row`);\n                const cells = makeElement(rows, 'span', d => d, `${config.classPrefix}-tooltip-content`);\n                cells.attr('class', `${config.classPrefix}-tooltip-content`);\n                setStyles(rows, {\n                    margin: rowMargin\n                });\n                setStyles(cells, {\n                    display: 'inline-block',\n                    'margin-right': `${config.spacing}px`\n                });\n\n                cells.each(function (d) {\n                    const el = selectElement(this);\n                    el.html('');\n                    if (d instanceof Object) {\n                        if (d.type === 'icon') {\n                            const svg = makeElement(el, 'svg', [1]);\n                            const path = makeElement(svg, 'path', [1]);\n                            const shape = d.shape instanceof Function ? d.shape : getSymbol(d.shape);\n\n                            setAttrs(svg, {\n                                x: 0,\n                                y: 0,\n                                width: iconContainerSize,\n                                height: iconContainerSize\n                            });\n                            setAttrs(path, {\n                                d: shape.size(d.size)(),\n                                transform: `translate(${iconContainerSize / 2}, ${iconContainerSize / 2})`\n                            });\n                            setStyles(path, {\n                                fill: d.color\n                            });\n                            setStyles(svg, {\n                                width: `${iconContainerSize}px`,\n                                height: `${iconContainerSize}px`\n                            });\n                        } else {\n                            el.html(d.value);\n                            d.className && el.classed(d.className, true);\n                            setStyles(el, d.style);\n                        }\n                    } else {\n                        el.html(d);\n                    }\n                });\n            }\n        }\n        return this;\n    }\n\n    clear () {\n        this._model = null;\n        return this;\n    }\n}\n","import {\n    mergeRecursive,\n    getQualifiedClassName,\n    getUniqueId,\n    selectElement,\n    setStyles,\n    makeElement\n} from 'muze-utils';\nimport { ARROW_BOTTOM, ARROW_LEFT, ARROW_RIGHT, TOOLTIP_LEFT, TOOLTIP_RIGHT, TOOLTIP_BOTTOM, TOOLTIP_TOP,\n    INITIAL_STYLE } from './constants';\nimport { defaultConfig } from './default-config';\nimport { getArrowPos, placeArrow, reorderContainers } from './helper';\nimport './styles.scss';\nimport Content from './content';\n\n/**\n * This component is responsible for creating a tooltip element. It appends the tooltip\n * in the body element.\n * @class Tooltip\n */\nexport default class Tooltip {\n    /**\n     * Initializes the tooltip with the container element and configuration\n     * @param {HTMLElement} container container where the tooltip will be mounted.\n     * @param {string} className Class name of the tooltip.\n     */\n    constructor (htmlContainer, svgContainer) {\n        let connectorContainer = svgContainer;\n        this._id = getUniqueId();\n        this._config = {};\n        this.config({});\n        const tooltipConf = this._config;\n        const classPrefix = tooltipConf.classPrefix;\n        const contentClass = tooltipConf.content.parentClassName;\n        const container = makeElement(htmlContainer, 'div', [1], `${classPrefix}-tooltip-container`);\n        this._container = container;\n        this._tooltipContainer = container.append('div').style('position', 'absolute');\n        this._contentContainer = this._tooltipContainer.append('div').attr('class', `${classPrefix}-${contentClass}`);\n        this._tooltipBackground = this._tooltipContainer.append('div').style('position', 'relative');\n        this._tooltipArrow = this._tooltipContainer.append('div');\n\n        if (!svgContainer) {\n            connectorContainer = htmlContainer.append('svg').style('pointer-events', 'none');\n        }\n        this._contents = {};\n        this._tooltipConnectorContainer = selectElement(connectorContainer)\n            .append('g')\n            .attr('class', `${tooltipConf.classPrefix}-${tooltipConf.connectorClassName}`);\n        const id = this._id;\n        const defClassName = tooltipConf.defClassName;\n        const qualifiedClassName = getQualifiedClassName(defClassName, id, tooltipConf.classPrefix);\n\n        setStyles(this._tooltipArrow, INITIAL_STYLE);\n        setStyles(this._tooltipBackground, INITIAL_STYLE);\n        this.addClass(qualifiedClassName.join(' '));\n        this.addClass(tooltipConf.className);\n        this.hide();\n    }\n\n    /**\n     * Sets the configuration of tooltip.\n     * @param {Object} config Configuration of tooltip\n     * @return {Tooltip} Instance of tooltip\n     */\n    config (...config) {\n        if (config.length > 0) {\n            const defConf = mergeRecursive({}, this.constructor.defaultConfig());\n            this._config = mergeRecursive(defConf, config[0]);\n            return this;\n        }\n        return this._config;\n    }\n\n    /**\n     * Returns the default configuration of tooltip\n     * @return {Object} Configuration of tooltip.\n     */\n    static defaultConfig () {\n        return defaultConfig;\n    }\n    /**\n     * Sets the class name of tooltip\n     * @param {string} className tooltip class name\n     * @return {Tooltip} Instance of tooltip.\n     */\n    addClass (className) {\n        this._tooltipContainer.classed(className, true);\n        return this;\n    }\n\n    context (...ctx) {\n        if (ctx.length) {\n            this._context = ctx[0];\n            return this;\n        }\n        return this._context;\n    }\n\n    content (name, data, contentConfig = {}) {\n        const config = this.config();\n        const { classPrefix } = config;\n        const contentClass = config.content.className;\n        const formatter = config.formatter;\n        const className = contentConfig.className || `${classPrefix}-${contentClass}-${name}`;\n        const content = this._contents[name] = this._contents[name] || new Content();\n        const container = makeElement(this._contentContainer, 'div', [contentConfig.order], className);\n        container.attr('class', `${classPrefix}-${contentClass} ${className}`);\n        reorderContainers(this._contentContainer, `.${classPrefix}-${contentClass}`);\n        const contentConf = config.content;\n        contentConfig.classPrefix = this._config.classPrefix;\n        content.config(contentConf);\n\n        if (data === null) {\n            content.clear();\n            container.remove();\n            delete this._contents[name];\n        } else {\n            content.update({\n                model: data,\n                formatter: contentConfig.formatter || formatter\n            });\n            content.context(this._context);\n            content.render(container);\n        }\n\n        if (!Object.keys(this._contents).length) {\n            this.hide();\n        }\n        return this;\n    }\n\n    getContents () {\n        return Object.values(this._contents);\n    }\n\n    /**\n     * Positions the tooltip at the given x and y position.\n     * @param {number} x x position\n     * @param {number} y y position\n     * @return {Tooltip} Instance of tooltip.\n     */\n    position (x, y, conf = {}) {\n        if (!Object.keys(this._contents).length) {\n            this.hide();\n            return this;\n        }\n        this.show();\n        const target = this._target;\n        const repositionArrow = conf.repositionArrow;\n\n        if (target && repositionArrow) {\n            const node = this._tooltipContainer.node();\n            const config = this._config;\n            const arrowDisabled = config.arrow.disabled;\n            const arrowWidth = arrowDisabled ? 0 : config.arrow.size;\n            const arrowOrient = this._arrowOrientation;\n            const outsidePlot = arrowOrient === ARROW_LEFT || arrowOrient === ARROW_RIGHT ?\n                (y + node.offsetHeight - arrowWidth) < target.y || y > (target.y + target.height) :\n                (x + node.offsetWidth - arrowWidth) < target.x || x > (target.x + target.width);\n\n            if (!arrowDisabled) {\n                if (outsidePlot) {\n                    let path;\n                    this._tooltipArrow.style('display', 'none');\n                    this._tooltipBackground.style('display', 'none');\n                    this._tooltipConnectorContainer.style('display', 'block');\n                    const connector = this._tooltipConnectorContainer.selectAll('path').data([1]);\n                    const enter = connector.enter().append('path');\n                    if (arrowOrient === ARROW_LEFT) {\n                        path = `M ${x} ${y + node.offsetHeight / 2} L ${target.x + target.width}`\n                            + ` ${target.y + target.height / 2}`;\n                    } else if (arrowOrient === ARROW_RIGHT) {\n                        path = `M ${x + node.offsetWidth} ${y + node.offsetHeight / 2}`\n                                + ` L ${target.x} ${target.y + target.height / 2}`;\n                    } else if (arrowOrient === ARROW_BOTTOM) {\n                        path = `M ${x + node.offsetWidth / 2} ${y + node.offsetHeight}`\n                            + ` L ${target.x + target.width / 2} ${target.y}`;\n                    }\n                    enter.merge(connector).attr('d', path).style('display', 'block');\n                } else {\n                    const arrowPos = getArrowPos(arrowOrient, target, {\n                        x,\n                        y,\n                        boxHeight: node.offsetHeight,\n                        boxWidth: node.offsetWidth\n                    }, this._config);\n\n                    placeArrow(this, this._arrowOrientation, arrowPos);\n                    this._tooltipConnectorContainer.style('display', 'none');\n                }\n            }\n        }\n\n        const offset = this._offset || {\n            x: 0,\n            y: 0\n        };\n        this._tooltipContainer.style('left', `${offset.x + x}px`).style('top',\n            `${offset.y + y}px`);\n\n        return this;\n    }\n\n    /**\n     * Positions the tooltip relative to a rectangular box. It takes care of tooltip overflowing the\n     * boundaries.\n     * @param {Object} dim Dimensions of the plot.\n     */\n    positionRelativeTo (dim, tooltipConf = {}) {\n        let obj;\n        let orientation = tooltipConf.orientation;\n        this.show();\n        if (!dim) {\n            this.hide();\n            return this;\n        }\n\n        const extent = this._extent;\n        const node = this._tooltipContainer.node();\n\n        this._tooltipContainer.style('top', '0px')\n                        .style('left', '0px');\n        const offsetWidth = node.offsetWidth + 2;\n        const offsetHeight = node.offsetHeight + 2;\n        const config = this._config;\n        const offset = this._offset;\n        const arrowDisabled = config.arrow.disabled;\n        const arrowSize = arrowDisabled ? 0 : config.arrow.size;\n        const draw = tooltipConf.draw !== undefined ? tooltipConf.draw : true;\n        const topSpace = dim.y;\n        // When there is no space in right\n        const dimX = dim.x + dim.width + offset.x;\n        const rightSpace = extent.width - dimX;\n        const leftSpace = dim.x + offset.x - extent.x;\n        const positionTop = topSpace > (offsetHeight + arrowSize);\n        const positionRight = rightSpace >= offsetWidth + arrowSize;\n        const positionLeft = leftSpace >= offsetWidth + arrowSize;\n\n        const positionHorizontal = () => {\n            let position;\n            let x = dim.x + dim.width;\n            let y = dim.y;\n\n            if (positionRight) {\n                position = TOOLTIP_LEFT;\n                x += arrowSize;\n            } else if (positionLeft) {\n                x = dim.x - offsetWidth;\n                position = TOOLTIP_RIGHT;\n                x -= arrowSize;\n            } else {\n                position = 'left';\n                x += arrowSize;\n            }\n            if (dim.height < offsetHeight) {\n                y = Math.max(0, dim.y + dim.height / 2 - offsetHeight / 2);\n            }\n\n            const arrowPos = getArrowPos(position, dim, {\n                x,\n                y,\n                boxHeight: offsetHeight,\n                boxWidth: offsetWidth\n            }, this._config);\n\n            return {\n                position,\n                arrowPos,\n                x,\n                y\n            };\n        };\n\n        const positionVertical = () => {\n            let position;\n            let y;\n            // Position tooltip at the center of plot\n            let x = dim.x - offsetWidth / 2 + dim.width / 2;\n\n            // Overflows to the right\n            if ((extent.width - (dim.x + offset.x)) < offsetWidth) {\n                x = extent.width - offsetWidth - offset.x;\n            } else if ((x + offset.x) < extent.x) { // Overflows to the left\n                x = extent.x;\n            }\n\n            if (positionTop) {\n                y = dim.y - offsetHeight - arrowSize;\n                position = TOOLTIP_BOTTOM;\n            } else {\n                y = dim.y + dim.height + arrowSize;\n                position = TOOLTIP_TOP;\n            }\n\n            const arrowPos = getArrowPos(position, dim, {\n                x,\n                y,\n                boxHeight: offsetHeight,\n                boxWidth: offsetWidth\n            }, this._config);\n\n            return {\n                position,\n                arrowPos,\n                x,\n                y\n            };\n        };\n\n        this._target = dim;\n        if (!orientation) {\n            if (positionTop) {\n                orientation = 'vertical';\n            } else if (positionRight || positionLeft) {\n                orientation = 'horizontal';\n            } else {\n                orientation = 'vertical';\n            }\n        }\n\n        if (orientation === 'horizontal') {\n            obj = positionHorizontal();\n        } else if (orientation === 'vertical') {\n            obj = positionVertical();\n        }\n\n        this._position = {\n            x: obj.x,\n            y: obj.y\n        };\n\n        this._arrowPos = obj.arrowPos;\n        if (!arrowDisabled) {\n            placeArrow(this, obj.position, obj.arrowPos);\n        } else {\n            this._tooltipArrow.style('display', 'none');\n            this._tooltipBackground.style('display', 'none');\n        }\n        this._arrowOrientation = obj.position;\n        draw && this.position(obj.x, obj.y);\n        return this;\n    }\n\n    /**\n     * Hides the tooltip element.\n     * @return {Tooltip} Instance of tooltip.\n     */\n    hide () {\n        this._tooltipContainer.style('display', 'none');\n        this._tooltipConnectorContainer.style('display', 'none');\n        return this;\n    }\n\n    /**\n     * Shows the tooltip element.\n     * @return {Tooltip} Instance of tooltip.\n     */\n    show () {\n        this._tooltipContainer.style('display', 'block');\n        return this;\n    }\n\n    extent (extent) {\n        this._extent = extent;\n        return this;\n    }\n\n    offset (offset) {\n        this._offset = offset;\n        return this;\n    }\n\n    remove () {\n        this._tooltipContainer.remove();\n        this._tooltipBackground.remove();\n        this._tooltipConnectorContainer.remove();\n        return this;\n    }\n}\n","import {\n    FieldType,\n    GROUP_BY_FUNCTIONS,\n    formatTemporal,\n    DimensionSubtype,\n    MeasureSubtype,\n    DataModel,\n    defaultValue,\n    retrieveFieldDisplayName\n} from 'muze-utils';\n\nconst { SUM, COUNT } = GROUP_BY_FUNCTIONS;\nconst { InvalidAwareTypes } = DataModel;\n\nconst formatters = (formatter, interval, valueParser) => ({\n    [DimensionSubtype.TEMPORAL]: (value) => {\n        if (value instanceof InvalidAwareTypes) {\n            return valueParser(value);\n        }\n        return formatTemporal(value, interval);\n    },\n    [MeasureSubtype.CONTINUOUS]: value => (value instanceof InvalidAwareTypes ? valueParser(value) :\n        formatter(value.toFixed(2))),\n    [DimensionSubtype.CATEGORICAL]: value => valueParser(value)\n});\n\nconst getDefaultTooltipFormatterFn = (formatter, defaultFormatter) => defaultValue(formatter, defaultFormatter);\n\nconst getTabularData = (dataObj, context, defaultFormatter) => {\n    const rows = [];\n    const { data, schema, fieldspace } = dataObj;\n    rows.push(schema.map(d => d.name));\n    const { valueParser, timeDiffs } = context;\n    data.forEach((d) => {\n        const row = [];\n        schema.forEach((fieldObj, i) => {\n            const interval = fieldObj.subtype === DimensionSubtype.TEMPORAL ? timeDiffs[fieldObj.name] : 0;\n            const numberFormat = fieldObj.type === FieldType.MEASURE && fieldspace.fields[i].numberFormat();\n            const formatterFn = getDefaultTooltipFormatterFn(formatters(numberFormat,\n                interval, valueParser)[fieldObj.subtype], defaultFormatter);\n            const value = formatterFn(d[i]);\n            row.push(value);\n        });\n        rows.push(row);\n    });\n    return rows;\n};\n\nconst getRowContent = (fieldInf, context, dataInf, config) => {\n    let value;\n    let formattedValue;\n    let measureIndex;\n\n    const {\n        valueParser,\n        axes,\n        dimensionMeasureMap,\n        timeDiffs\n    } = context;\n    const { subtype: type, name: field } = fieldInf;\n\n    const { fieldsConfig, defFormatter, data, fieldspace } = dataInf;\n    const { separator, classPrefix } = config;\n    const dataLen = data.length;\n    const values = [];\n    const index = fieldsConfig[field].index;\n    const interval = fieldsConfig[field].def.subtype === DimensionSubtype.TEMPORAL ? timeDiffs[field] : 0;\n    const formatterFn = getDefaultTooltipFormatterFn(formatters(val => val, interval, valueParser)[type],\n        defFormatter);\n\n    let uniqueVals = type === MeasureSubtype.CONTINUOUS ? data.map(d => d[index]) :\n        [...new Set(data.map(d => d[index]))];\n    uniqueVals = uniqueVals.filter(d => d !== '');\n    const colorAxis = axes.color[0];\n    const shapeAxis = axes.shape[0];\n    const sizeAxis = axes.size[0];\n    const isRetinalField = (colorAxis || shapeAxis || sizeAxis) && dataLen > 1 &&\n            type !== MeasureSubtype.CONTINUOUS;\n\n    uniqueVals.forEach((val, i) => {\n        let key;\n        let associatedMeasures = dimensionMeasureMap[field];\n\n        if (associatedMeasures instanceof Array && dataLen > 1) {\n            associatedMeasures = associatedMeasures.filter(d => d in fieldsConfig);\n            key = val;\n            let icon = {\n                value: ''\n            };\n\n            if (isRetinalField) {\n                icon = {\n                    type: 'icon',\n                    color: colorAxis.getColor(val),\n                    shape: shapeAxis.getShape(val),\n                    size: sizeAxis.getSize(val) * config.iconScale\n                };\n            }\n            if (associatedMeasures.length > 1) {\n                const formattedKey = type === DimensionSubtype.TEMPORAL ? formatterFn(key, interval) : key;\n                values.push([icon, `${formattedKey}`]);\n                associatedMeasures.forEach((measure) => {\n                    measureIndex = fieldsConfig[measure].index;\n                    value = data[i][measureIndex];\n                    const numberFormat = fieldspace.fields[measureIndex].numberFormat();\n                    const measureFormatter = getDefaultTooltipFormatterFn(\n                        formatters(numberFormat, interval, valueParser)[MeasureSubtype.CONTINUOUS]);\n                    formattedValue = measureFormatter(value);\n                    values.push([{\n                        value: `${retrieveFieldDisplayName(context.data, measure)}${separator}`,\n                        style: {\n                            'margin-left': `${config.margin}px}`\n                        },\n                        className: `${classPrefix}-tooltip-key`\n                    }, {\n                        value: `${formattedValue}`,\n                        className: `${classPrefix}-tooltip-value`\n                    }]);\n                });\n            } else {\n                measureIndex = fieldsConfig[associatedMeasures[0]].index;\n                value = data[i][measureIndex];\n                const numberFormat = fieldspace.fields[measureIndex].numberFormat();\n                const measureFormatter = getDefaultTooltipFormatterFn(\n                    formatters(numberFormat, interval, valueParser)[MeasureSubtype.CONTINUOUS]);\n                formattedValue = measureFormatter(value);\n                const formattedKey = type === DimensionSubtype.TEMPORAL ? formatterFn(key, interval) : key;\n                values.push([\n                    icon,\n                    {\n                        value: `${formattedKey}`,\n                        className: `${classPrefix}-tooltip-key`\n                    },\n                    {\n                        value: `${formattedValue}`,\n                        className: `${classPrefix}-tooltip-value`\n                    }\n                ]);\n            }\n        } else {\n            key = field;\n            value = val;\n            formattedValue = formatterFn(value);\n            values.push([{\n                value: `${retrieveFieldDisplayName(context.data, key)}${separator}`,\n                className: `${config.classPrefix}-tooltip-key`\n            }, {\n                value: `${formattedValue}`,\n                className: `${config.classPrefix}-tooltip-value`\n            }]);\n        }\n    });\n    return values;\n};\n\nexport const buildTooltipData = (dataModel, config = {}, context) => {\n    let fieldValues = [];\n    const dataObj = dataModel.getData();\n    const data = dataObj.data;\n    const schema = dataObj.schema;\n    const fieldspace = dataModel.getFieldspace();\n    const fieldsConfig = dataModel.getFieldsConfig();\n    const detailFields = context.detailFields || [];\n    const dimensions = schema.filter(d => d.type === FieldType.DIMENSION);\n    const measures = schema.filter(d => d.type === FieldType.MEASURE);\n    const containsDetailField = schema.find(d => detailFields.indexOf(d.name) !== -1);\n    const dataLen = data.length;\n    const {\n        valueParser,\n        dimensionMeasureMap\n    } = context;\n    const defFormatter = formatters(null, null, valueParser)[DimensionSubtype.CATEGORICAL];\n\n    if (dataLen > 1 && containsDetailField) {\n        fieldValues = getTabularData({\n            data,\n            schema,\n            fieldspace\n        }, context, defFormatter);\n    } else {\n        dimensions.forEach((item) => {\n            fieldValues = [...fieldValues, ...getRowContent(item, context, {\n                fieldsConfig,\n                data,\n                defFormatter,\n                fieldspace\n            }, config)];\n        });\n\n        const allMeasures = [...new Set(...Object.values(dimensionMeasureMap))];\n        const filteredMeasures = dataLen > 1 ? measures.filter(d => allMeasures.indexOf(d.name) === -1)\n            : measures;\n\n        filteredMeasures.forEach((item) => {\n            fieldValues = [...fieldValues, ...getRowContent(item, context, {\n                fieldsConfig,\n                data,\n                defFormatter,\n                fieldspace\n            }, config)];\n        });\n    }\n\n    return fieldValues;\n};\n\nexport const strategies = {\n    selectionSummary: (dm, config, context) => {\n        const { selectionSet } = context;\n        const aggFns = selectionSet.mergedEnter.aggFns;\n        const dataObj = dm.getData();\n        const measures = dataObj.schema.filter(d => d.type === FieldType.MEASURE);\n        const aggregatedModel = dm.groupBy([''], measures.reduce((acc, v) => {\n            acc[v.name] = aggFns[v.name] === COUNT ? SUM : aggFns[v.name];\n            return acc;\n        }, {\n            saveChild: false\n        }));\n        const fieldsConf = aggregatedModel.getFieldsConfig();\n        let values = [[{\n            value: `${dataObj.data.length}`,\n            style: {\n                'font-weight': 'bold'\n            }\n        }, 'Items Selected']];\n        const measureNames = measures.map(d => d.name);\n        measureNames.forEach((measure) => {\n            values.push([`(${aggFns[measure].toUpperCase()})`, `${retrieveFieldDisplayName(dm, measure)}`,\n                {\n                    value: `${aggregatedModel.getData().data[0][fieldsConf[measure].index].toFixed(2)}`,\n                    style: {\n                        'font-weight': 'bold'\n                    }\n                }]);\n        });\n        if (measureNames.length === 1) {\n            values = [[...values[0], ...values[1]]];\n        }\n        return values;\n    },\n    highlightSummary: (data, config, context) => {\n        const values = buildTooltipData(data, config, context);\n        return values;\n    }\n};\n","import { Tooltip as TooltipRenderer } from '@chartshq/muze-tooltip';\nimport { FieldType, mergeRecursive, defaultValue } from 'muze-utils';\nimport { spaceOutBoxes } from '../helper';\nimport { strategies } from './strategies';\nimport { FRAGMENTED } from '../../enums/constants';\nimport SpawnableSideEffect from '../spawnable';\n\nimport './styles.scss';\n\nconst configResolvers = {\n    highlightSummary: (specificConf, config) => defaultValue(specificConf, config),\n    default: specificConf => defaultValue(specificConf, {})\n};\n\nconst sanitizeConfig = (config, context) => {\n    const strategyObj = context._strategies;\n    const sanitizedConf = Object.assign({}, config);\n    for (const key in strategyObj) {\n        sanitizedConf[key] = defaultValue(configResolvers[key], configResolvers.default)(config[key], config);\n    }\n    return sanitizedConf;\n};\n\nexport default class Tooltip extends SpawnableSideEffect {\n    constructor (...params) {\n        super(...params);\n        this._tooltips = {};\n        this._strategies = strategies;\n        this._strategy = 'highlightSummary';\n    }\n\n    static defaultConfig () {\n        return {\n            padding: 5,\n            offset: {\n                x: 0,\n                y: 0\n            },\n            highlightSummary: {\n                dataTransform: (dt, fields) => (fields ? dt.project(fields, { saveChild: false }) : dt\n                )\n            },\n            selectionSummary: {\n                dataTransform: (dt, fields) => {\n                    const fieldspace = dt.getFieldspace();\n                    const dimensions = Object.keys(fieldspace.getDimension());\n                    const measures = Object.keys(fieldspace.getMeasure());\n                    const projectedFields = defaultValue(fields, measures.length ? [measures[0]] : []);\n                    return dt.project([...dimensions, ...projectedFields], {\n                        saveChild: false\n                    });\n                }\n            }\n        };\n    }\n\n    static formalName () {\n        return 'tooltip';\n    }\n\n    config (...params) {\n        if (params.length) {\n            const config = this._config = mergeRecursive(this._config, sanitizeConfig(params[0], this));\n            const strategyObj = this._strategies;\n            for (const key in strategyObj) {\n                const formatter = config[key].formatter;\n                this.setStrategy(key, formatter);\n            }\n            return this;\n        }\n        return this._config;\n    }\n\n    apply (selectionSet, payload, options = {}) {\n        let totalHeight = 0;\n        let totalWidth = 0;\n        const dataModel = selectionSet.mergedEnter.model;\n        const context = this.firebolt.context;\n        const drawingInf = this.drawingContext();\n        if ((dataModel.isEmpty() || payload.criteria === null) || selectionSet.isSourceFieldPresent === false) {\n            this.hide(options, null);\n            return this;\n        }\n\n        const tooltips = this._tooltips;\n        const config = this.config();\n        const boundBox = {\n            width: drawingInf.width,\n            height: drawingInf.height\n        };\n        const showInPosition = payload.showInPosition;\n        const pad = config.padding;\n        const dataModels = [];\n        const fragmented = config.mode === FRAGMENTED;\n        const sourceInf = context.getSourceInfo();\n        const fields = sourceInf.fields;\n        const xFieldDim = fields.x[0] ? fields.x[0].type() === FieldType.DIMENSION : false;\n        const showVertically = !!xFieldDim;\n        const tooltipPos = payload.position;\n        const boxes = [];\n        const enter = {};\n        const uids = dataModel.getData().uids;\n        if (fragmented) {\n            dataModels.push(...uids.map(d => dataModel.select((fieldsArr, i) => i === d, {\n                saveChild: false\n            })));\n        } else {\n            dataModels.push(dataModel);\n        }\n\n        let target = payload.target;\n        let targetFields = [];\n        if (target) {\n            targetFields = target[0] || [];\n            const sourceFields = payload.sourceFields;\n            const indices = [];\n            for (let i = 0, len = targetFields.length; i < len; i++) {\n                if (sourceFields.indexOf(targetFields[i]) !== -1) {\n                    indices.push(i);\n                }\n            }\n            target = target.map(d => d.filter((v, i) => indices.indexOf(i) !== -1));\n        }\n\n        const plotDimensions = context.getPlotPointsFromIdentifiers(target || payload.criteria, {\n            getBBox: true\n        });\n\n        const strategy = defaultValue(options.strategy, this._strategy);\n        const strategyConf = config[strategy];\n        const { dataTransform, fields: projectFields } = strategyConf;\n        // Show tooltip for each datamodel\n        for (let i = 0; i < dataModels.length; i++) {\n            let plotDim = plotDimensions[i];\n            if (fragmented) {\n                const dimensions = dataModels[i].getData().schema.filter(d => d.type === FieldType.DIMENSION)\n                    .map(d => d.name);\n                plotDim = context.getPlotPointsFromIdentifiers(dataModels[i].project(dimensions), { getBBox: true });\n                plotDim = plotDim && plotDim[0];\n            }\n\n            const dt = dataTransform(dataModels[i], projectFields, this);\n\n            enter[i] = true;\n            const { parentContainer: layoutContainer, parentContainerDimensions } = drawingInf;\n            const layoutBoundBox = layoutContainer.getBoundingClientRect();\n            const unitBoundBox = drawingInf.htmlContainer.getBoundingClientRect();\n\n            const offsetLeft = unitBoundBox.left - layoutBoundBox.left;\n            const offsetTop = unitBoundBox.top - layoutBoundBox.top;\n            const tooltipInst = tooltips[i] = tooltips[i] || new TooltipRenderer(layoutContainer,\n                    drawingInf.svgContainer);\n\n            sourceInf.payload = payload;\n            sourceInf.firebolt = this.firebolt;\n            sourceInf.detailFields = context.detailFields();\n            sourceInf.timeDiffs = context.timeDiffsByField();\n            sourceInf.valueParser = context.valueParser();\n            sourceInf.selectionSet = selectionSet;\n            tooltipInst.context(sourceInf);\n            const strategyFn = strategies[strategy];\n            tooltipInst.content(strategy, dt, {\n                formatter: strategyFn,\n                order: options.order\n            })\n                            .config(this.config())\n                            .extent({\n                                x: 0,\n                                y: 0,\n                                width: parentContainerDimensions.width,\n                                height: parentContainerDimensions.height\n                            })\n                            .offset({\n                                x: offsetLeft + (config.offset.x || 0),\n                                y: offsetTop + (config.offset.y || 0)\n                            });\n\n            if (showInPosition) {\n                tooltipInst.position(tooltipPos.x + pad, tooltipPos.y + pad);\n            } else if (plotDim) {\n                tooltipInst.positionRelativeTo({\n                    x: plotDim.x,\n                    y: plotDim.y,\n                    width: plotDim.width || 0,\n                    height: plotDim.height || 0\n                }, {\n                    orientation: fragmented ?\n                        (showVertically ? 'horizontal' : 'vertical') : undefined\n                });\n            } else {\n                tooltipInst.hide();\n                break;\n            }\n\n            if (fragmented) {\n                const position = tooltipInst._position;\n                const tooltipBoundBox = tooltipInst._tooltipContainer.node().getBoundingClientRect();\n\n                totalHeight += tooltipBoundBox.height + pad;\n                totalWidth += tooltipBoundBox.width + pad;\n                if (showVertically ? totalHeight > drawingInf.height : totalWidth > drawingInf.width) {\n                    break;\n                }\n                boxes.push({\n                    x: position.x,\n                    y: position.y,\n                    width: tooltipBoundBox.width,\n                    height: tooltipBoundBox.height,\n                    tooltip: tooltipInst\n                });\n            }\n        }\n\n        for (const key in tooltips) {\n            if (!enter[key]) {\n                const tooltip = tooltips[key];\n                tooltip.content(payload.action, null);\n                if (!tooltip.getContents().length) {\n                    tooltip.remove();\n                    delete tooltips[key];\n                }\n            }\n        }\n        if (fragmented) {\n            spaceOutBoxes(boxes, boundBox, showVertically);\n            boxes.forEach(box => box.tooltip.position(box.x, box.y, {\n                repositionArrow: true\n            }));\n        }\n        return this;\n    }\n\n    hide (options) {\n        const tooltips = this._tooltips;\n        for (const key in tooltips) {\n            if ({}.hasOwnProperty.call(tooltips, key)) {\n                const strategy = options.strategy || this._strategy;\n                tooltips[key].content(strategy, null);\n                tooltips[key].hide();\n            }\n        }\n    }\n}\n","export const spaceOutBoxes = (boxes, extent, showVertically) => {\n    let y;\n    let height;\n    let x;\n    let width;\n    let i;\n    const pad = 5;\n    const len = boxes.length;\n    const spaceOutIfOverlap = (firstBox, secondBox, opposite) => {\n        x = firstBox.x;\n        width = firstBox.width;\n        y = firstBox.y;\n        height = firstBox.height;\n        const bottom = y + height;\n        const right = x + width;\n\n        if (showVertically) {\n            if (opposite ? y < (secondBox.y + secondBox.height) : bottom > secondBox.y) {\n                secondBox.y = opposite ? firstBox.y - secondBox.height - pad :\n                        bottom + pad;\n            }\n        } else if (opposite ? x < (secondBox.x + secondBox.width) : right > secondBox.x) {\n            secondBox.x = opposite ? firstBox.x - secondBox.width - pad :\n                    right + pad;\n        }\n    };\n\n    boxes.sort((a, b) => (showVertically ? a.y - b.y : a.x - b.x));\n    i = 0;\n\n    for (i = 0; i < len - 1; i++) {\n        spaceOutIfOverlap(boxes[i], boxes[i + 1]);\n    }\n\n    if ((boxes[i].y + boxes[i].height) > extent.height ||\n            (boxes[i].x + boxes[i].width) > extent.width) {\n        if (showVertically) {\n            boxes[i].y -= (boxes[i].height + boxes[i].y) - extent.height;\n        } else {\n            boxes[i].x -= (boxes[i].width + boxes[i].x) - extent.width;\n        }\n        for (i = len - 1; i > 0; i--) {\n            spaceOutIfOverlap(boxes[i], boxes[i - 1], true);\n        }\n    }\n    return boxes;\n}\n;\n","import { selectElement, FieldType } from 'muze-utils';\n\nimport './styles.scss';\nimport { CLASSPREFIX } from '../../enums/constants';\nimport SpawnableSideEffect from '../spawnable';\n\nexport default class Crossline extends SpawnableSideEffect {\n    static defaultConfig () {\n        return {\n            className: `${CLASSPREFIX}-crossline-group`,\n            bandClass: `${CLASSPREFIX}-crossband`,\n            lineClass: `${CLASSPREFIX}-crossline`\n        };\n    }\n\n    static formalName () {\n        return 'crossline';\n    }\n\n    apply (selectionSet, payload) {\n        let height;\n        let bandWidth;\n        let px;\n        let width;\n        const {\n            className,\n            bandClass,\n            lineClass\n        } = this.config();\n        const dataModel = selectionSet.mergedEnter.model;\n        const drawingInf = this.drawingContext();\n        if (payload.criteria && dataModel && dataModel.isEmpty()) {\n            return this;\n        }\n        if (payload.criteria === null || !dataModel) {\n            this.hide();\n            return this;\n        }\n\n        const dataObj = dataModel.getData();\n        const sourceInf = this.firebolt.context.getSourceInfo();\n        const axes = sourceInf.axes;\n        const axisFields = sourceInf.fields;\n        const fields = selectionSet.fields;\n        const data = dataObj.data;\n        const fieldsConfig = dataModel.getFieldsConfig();\n        const svgContainer = drawingInf.sideEffectGroup;\n\n        const elemData = [];\n        fields.forEach((field) => {\n            const fieldIndex = fieldsConfig[field] && fieldsConfig[field].index;\n            const dataArr = data.map(d => d[fieldIndex]);\n            const axisIndex = [['x', 0], ['x', 1], ['y', 0], ['y', 1]].find((arr) => {\n                const fieldInst = axisFields[arr[0]][arr[1]];\n                return fieldInst && fieldInst.type() === FieldType.DIMENSION &&\n                    fieldInst.getMembers().indexOf(field) !== -1;\n            });\n            if (axisIndex !== undefined && data.length) {\n                const type = axisIndex[0];\n                const axis = axes[type][axisIndex[1]];\n                const value = dataArr[0];\n                bandWidth = axis.getUnitWidth() || 0;\n                px = axis.getScaleValue(value) + bandWidth / 2 + drawingInf.xOffset;\n                const layers = this.firebolt.context.layers();\n                const plotWidth = Math.max(...layers.map(layer => layer.getPlotSpan()[type]));\n                const pad = Math.max(...layers.map(layer => layer.getPlotPadding()[type]));\n                height = drawingInf.height;\n                width = drawingInf.width;\n                const startPx = px - plotWidth / 2 - pad / 2;\n                const endPx = px + plotWidth / 2 + pad / 2;\n                const dataPoint = {};\n                if (type === 'y') {\n                    dataPoint.d = `M 0 ${startPx} L 0 ${endPx} L ${width} ${endPx} L ${width} ${startPx} Z`;\n                } else {\n                    dataPoint.d = `M ${startPx} 0 L ${endPx} 0 L ${endPx} ${height} L ${startPx} ${height} Z`;\n                }\n                dataPoint.className = plotWidth ? bandClass : lineClass;\n                !isNaN(px) && elemData.push(dataPoint);\n            }\n        });\n        if (elemData.length) {\n            const parentGroup = this.createElement(svgContainer, 'g', [1], className);\n            const elem = this.createElement(parentGroup, 'path', elemData);\n            elem.attr('d', d => d.d).style('pointer-events', 'none')\n                            .attr('class', d => d.className);\n        }\n        return this;\n    }\n\n    hide () {\n        const className = this.config().className;\n        const drawingInf = this.drawingContext();\n        selectElement(drawingInf.sideEffectGroup).selectAll(`.${className}`).remove();\n    }\n}\n","const fadeFn = (set, context, strategy) => {\n    const {\n        mergedEnter,\n        mergedExit,\n        exitSet,\n        completeSet\n    } = set;\n\n    if (!mergedEnter.length && !mergedExit.length) {\n        context.applyInteractionStyle(completeSet, {}, strategy, false);\n    } else {\n        context.applyInteractionStyle(exitSet[1], {}, strategy, true);\n        context.applyInteractionStyle(mergedEnter, {}, strategy, false);\n    }\n};\n\nexport const strategies = {\n    fade: fadeFn,\n    focus: (set, context) => {\n        const {\n            mergedEnter,\n            mergedExit,\n            completeSet\n        } = set;\n        if (!mergedEnter.length && !mergedExit.length) {\n            context.applyInteractionStyle(completeSet, {}, 'focus', false);\n        } else {\n            context.applyInteractionStyle(mergedExit, {}, 'focus', true);\n            context.applyInteractionStyle(mergedEnter, {}, 'focus', false);\n        }\n    },\n    highlight: (set, context) => {\n        const {\n            mergedEnter,\n            mergedExit,\n            entrySet,\n            exitSet,\n            completeSet\n        } = set;\n        if (!mergedEnter.length && !mergedExit.length) {\n            context.applyInteractionStyle(completeSet, {}, 'highlight', false);\n        } else {\n            context.applyInteractionStyle(entrySet[1], {}, 'highlight', true);\n            context.applyInteractionStyle(exitSet[1], {}, 'highlight', false);\n        }\n    }\n};\n","import SurrogateSideEffect from '../surrogate';\nimport { strategies } from './strategy';\n\nexport default class PlotHighlighter extends SurrogateSideEffect {\n    constructor (...params) {\n        super(...params);\n        this._strategy = 'highlight';\n        this._strategies = strategies;\n    }\n\n    static formalName () {\n        return 'highlighter';\n    }\n\n    static target () {\n        return 'visual-unit';\n    }\n\n    apply (selectionSet, payload, options = {}) {\n        const strategy = this._strategies[options.strategy || this._strategy];\n\n        if (selectionSet.isSourceFieldPresent !== false) {\n            strategy(selectionSet, this, options.strategy || this._strategy);\n        }\n\n        return this;\n    }\n}\n","import SurrogateSideEffect from '../surrogate';\n\nexport default class FilterEffect extends SurrogateSideEffect {\n    static formalName () {\n        return 'filter';\n    }\n\n    static target () {\n        return 'visual-unit';\n    }\n\n    static mutates () {\n        return true;\n    }\n\n    apply (selectionSet, payload) {\n        const context = this.firebolt.context;\n        const entryModel = selectionSet.mergedEnter.model;\n        if (payload.criteria === null) {\n            context.clearCaching().resetData();\n        } else {\n            context.enableCaching().data(entryModel);\n        }\n        return this;\n    }\n}\n","import { DataModel, STATE_NAMESPACES, getObjProp } from 'muze-utils';\nimport { CLASSPREFIX } from '../../enums/constants';\nimport SpawnableSideEffect from '../spawnable';\n\nimport './styles.scss';\n\nconst addLayer = (layerDefs, layerRegistry, context, sideEffect) => {\n    const layers = [];\n    if (layerDefs) {\n        layerDefs.forEach((layerDef) => {\n            const mark = layerDef.mark;\n            const layerCls = layerRegistry[mark];\n            if (layerCls && layerCls.shouldDrawAnchors()) {\n                const depLayerEncoding = layerDef.def.encoding;\n                const encoding = {\n                    x: getObjProp(depLayerEncoding, 'x', 'field'),\n                    y: getObjProp(depLayerEncoding, 'y', 'field'),\n                    color: getObjProp(depLayerEncoding, 'color', 'field'),\n                    size: {\n                        field: getObjProp(depLayerEncoding, 'size', 'field'),\n                        value: sideEffect.defaultSizeValue()\n                    }\n                };\n                const name = `${layerDef.def.name}-${sideEffect.constructor.formalName()}`;\n                const layerObj = {\n                    instances: context.addLayer({\n                        name,\n                        mark: 'point',\n                        className: sideEffect.constructor.defaultConfig().className,\n                        encoding,\n                        transform: {\n                            type: 'identity'\n                        },\n                        transition: sideEffect.getTransitionConfig(),\n                        calculateDomain: false,\n                        source: dm => dm.select(() => false, {\n                            saveChild: false\n                        }),\n                        interactive: false,\n                        render: false\n                    }),\n                    linkedLayer: layerDef.def.name\n                };\n                layers.push(layerObj);\n            }\n        });\n    }\n    return layers;\n};\n\nexport default class AnchorEffect extends SpawnableSideEffect {\n    constructor (...params) {\n        super(...params);\n        this._layersMap = {};\n        this.addAnchorLayers();\n    }\n\n    static target () {\n        return 'visual-unit';\n    }\n\n    static defaultConfig () {\n        return {\n            className: `${CLASSPREFIX}-anchors-group`\n        };\n    }\n\n    static formalName () {\n        return 'anchors';\n    }\n\n    addAnchorLayers () {\n        const context = this.firebolt.context;\n        const metaInf = context.metaInf();\n        const layerRegistry = context.registry().layerRegistry;\n        const layerDefsVal = context.layerDef();\n        context.store().registerImmediateListener(\n            `${STATE_NAMESPACES.UNIT_LOCAL_NAMESPACE}.${metaInf.namespace}.layerDef`, ([, layerDefs]) => {\n                this._layers = addLayer(layerDefs, layerRegistry, context, this);\n            });\n        this._layers = addLayer(layerDefsVal, layerRegistry, context, this);\n        return this;\n    }\n\n    getTransitionConfig () {\n        return {\n            disabled: true\n        };\n    }\n\n    /**\n     * Returns the default area value of the anchor point.\n     * @return { number } Default area value of anchor.\n     */\n    defaultSizeValue () {\n        return 100;\n    }\n\n    apply (selectionSet) {\n        const self = this;\n        const dataModel = selectionSet.mergedEnter.model;\n        if (selectionSet.isSourceFieldPresent !== false) {\n            const drawingInf = this.drawingContext();\n            const sideEffectGroup = drawingInf.sideEffectGroup;\n            const className = `${this.config().className}`;\n            const layers = this._layers;\n            const parentGroup = this.createElement(sideEffectGroup, 'g', [1], `${className}-container`);\n            const anchorGroups = this.createElement(parentGroup, 'g', Object.values(layers));\n            anchorGroups.each(function (layer) {\n                const instances = layer.instances;\n                const elems = self.createElement(this, 'g', instances, className);\n                const linkedLayer = self.firebolt.context.getLayerByName(layer.linkedLayer);\n                const [transformedData, schema] = linkedLayer.getTransformedDataFromIdentifiers(dataModel);\n                const transformedDataModel = new DataModel(transformedData, schema);\n                elems.each(function (d, i) {\n                    instances[i].data(transformedDataModel).mount(this);\n                });\n            });\n        }\n        return this;\n    }\n}\n","import AnchorEffect from './anchors';\nimport { CLASSPREFIX } from '../enums/constants';\n\nexport default class PersistentAnchors extends AnchorEffect {\n    static formalName () {\n        return 'persistent-anchors';\n    }\n\n    static defaultConfig () {\n        return {\n            className: `${CLASSPREFIX}-persistent-anchors`\n        };\n    }\n\n    getTransitionConfig () {\n        return {\n            disabled: true\n        };\n    }\n}\n","import AnchorEffect from './anchors';\nimport { CLASSPREFIX } from '../enums/constants';\n\nexport default class BrushAnchors extends AnchorEffect {\n    static formalName () {\n        return 'brush-anchors';\n    }\n\n    static defaultConfig () {\n        return {\n            className: `${CLASSPREFIX}-brush-anchors`\n        };\n    }\n\n    getTransitionConfig () {\n        return {\n            disabled: true\n        };\n    }\n}\n","import * as BEHAVIOURS from './enums/behaviours';\n\nexport const behaviourEffectMap = {\n    [BEHAVIOURS.BRUSH]: ['selectionBox', {\n        name: 'highlighter',\n        options: {\n            strategy: 'fade'\n        }\n    }, 'brush-anchors'],\n    [`${BEHAVIOURS.BRUSH},${BEHAVIOURS.SELECT}`]: [{\n        name: 'tooltip',\n        options: {\n            strategy: 'selectionSummary',\n            order: 0,\n            filter: context => context.config().mode === 'fragmented'\n        }\n    }],\n    [BEHAVIOURS.HIGHLIGHT]: [{\n        name: 'highlighter',\n        options: {\n            strategy: 'highlight'\n        }\n    }, 'crossline', {\n        name: 'tooltip',\n        options: {\n            order: 9999\n        }\n    }, 'anchors'],\n    [BEHAVIOURS.FILTER]: ['filter'],\n    [BEHAVIOURS.SELECT]: [{\n        name: 'highlighter',\n        options: {\n            strategy: 'focus'\n        }\n    }, 'persistent-anchors']\n};\n","export const CLASSPREFIX = 'muze';\nexport const STACK = 'stack';\nexport const GROUP = 'group';\nexport const IDENTITY = 'identity';\nexport const ANGLE = 'angle';\nexport const RADIUS = 'radius';\nexport const SIZE = 'size';\nexport const COLOR = 'color';\nexport const SHAPE = 'shape';\nexport const TEXT = 'text';\nexport const OUTER_RADIUS_VALUE = 'outerRadiusValue';\nexport const TEXT_ANCHOR_MIDDLE = 'middle';\nexport const ENCODING = {\n    X: 'x',\n    Y: 'y',\n    X0: 'x0',\n    Y0: 'y0',\n    RADIUS: 'radius',\n    RADIUS0: 'radius0',\n    ANGLE: 'angle',\n    ANGLE0: 'angle0'\n};\n\nexport const ASCENDING = 'asc';\n\nexport const AGG_FN_SUM = 'sum';\n\nexport const AREA_LAYER = 'area';\nexport const ARC_LAYER = 'arc';\nexport const LINE_LAYER = 'line';\nexport const TEXT_LAYER = 'text';\nexport const POINT_LAYER = 'point';\nexport const BAR_LAYER = 'bar';\nexport const TICK_LAYER = 'tick';\nexport const SIMPLE_LAYER = 'simple';\nexport const BASE_LAYER = 'base';\n","import { CLASSPREFIX, STACK } from '../../enums/constants';\n\nexport const defaultConfig = {\n    classPrefix: CLASSPREFIX,\n    defClassName: 'layer-area',\n    className: '',\n    interpolate: 'linear',\n    transform: {\n        type: STACK\n    },\n    interaction: {\n\n    },\n    nearestPointThreshold: 10,\n    encoding: {\n        color: {},\n        x: {},\n        y: {},\n        y0: {},\n        strokeOpacity: {\n            value: 1\n        }\n    },\n    transition: {\n        effect: 'cubic',\n        duration: 1000\n    },\n    connectNullData: false\n};\n","import { ERROR_MSG } from 'muze-utils';\n\n/**\n * This is an interface class which any new layer class has to extend.\n *\n * @example\n * class BarLayer extends BaseLayer {\n *   update (params) {\n *       // super.update(params);\n *       // Update the bar layer\n *   }\n * }\n * @class\n */\nexport default class SimpleLayer {\n\n    formalName () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    /**\n     * Sets or gets the dependencies.\n     * @param {Object} dependencies Dependencies needed by layer\n     * @return {BaseLayer} Instance of base layer.\n     */\n    dependencies () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    /**\n     * Returns the config of the layer\n     *\n     * @param {Object} config Configuration of layer\n     * @return {Object} configuration of layer\n     */\n    config () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    /**\n     * Acts as a getter or setter function\n     * When setter\n     * Returns the datamodel of the layer\n     * @param { DataModel } dataModel instance of DataModel\n     * @return { DataModel } DataModel instance of the layer\n     */\n    data () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    /**\n     * Returns a serialized schema of the layer\n     * @return {Object} Serialized schema\n     */\n    serialize () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    /**\n     * Returns the unique identifier of this layer\n     * @return {string} id of the layer\n     */\n    id () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n    /*\n     * This method resolves the x, y, x0 and y0 values from the transformed data.\n     * It also checks the type of transformed data for example, if it is a stacked data\n     * then it fetches the y and y0 values from the stacked data.\n     * @param {Array.<Array>} transformedData transformed data\n     * @param {Object} fieldMap field definitions\n     * @param {string} transformType type of transformed data - stack, group or identity.\n     * @return {Array.<Object>} Normalized data\n     * @private\n     */\n    normalizeTransformedData () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    /**\n     * Gets the transform method from transform factory based on type of transform. It then calls the\n     * transform method with the data and passes the configuration parameters of transform such as\n     * groupBy, value field, etc.\n     *\n     * @param {DataModel} dataModel Instance of dataModel\n     * @param {Object} config configuration for transforming data\n     * @return {Array.<Array>} Transformed data.\n     * @private\n     */\n    getTransformedData () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    /**\n     * Calculates the domain from the data.\n     * It checks the type of field and calculates the domain based on that. For example, if it\n     * is a quantitative or temporal field, then it calculates the min and max from the data or\n     * if it is a nominal field then it gets all the values from the data of that field.\n     * @param {Array} data DataArray\n     * @return {Array} Domain values array.\n     */\n    _calculateDomainFromData () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    /**\n     * Returns the domain for the axis.\n     *\n     * @param {string} encodingType type of encoding x, y, color, etc.\n     * @return {Object} Axis domains\n     */\n    getDomain () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    /**\n     * Abstract method for getting nearest point\n     * @return {BaseLayer} Instance of base layer\n     */\n    getNearestPoint () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    /**\n     * Abstract method for highlighting points\n     * @return {BaseLayer} Instance of base layer\n     */\n    highlightPoint () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    /**\n     * Abstract method for deselecting points\n     * @return {BaseLayer} Instance of base layer\n     */\n    dehighlightPoint () {\n        return this;\n    }\n\n    linkLayerStore () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    /**\n     * Sets the container element for the layer to be renderered.\n     * @param {SVGElement} mountPoint SVG element or group element.\n     */\n    mount () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    render () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n}\n","import { COORD_TYPES } from 'muze-utils';\n\nconst { CARTESIAN } = COORD_TYPES;\nexport const props = {\n    axes: {},\n    mount: {},\n    measurement: {},\n    metaInf: {},\n    data: {},\n    config: {},\n    valueParser: {\n        defaultValue: val => val\n    },\n    coord: {\n        defaultValue: CARTESIAN\n    }\n};\n","/**\n * @module Axis\n * This file declares a class that is used to render an axis to add  meaning to\n * plots.\n */\nimport { Symbols } from 'muze-utils';\nimport * as AxisOrientation from '../enums/axis-orientation';\n\n/**\n * @module Axis\n * This file exports constants that are used to reference axis orientations\n * in a consistent manner.\n */\nexport const BOTTOM = 'bottom';\nexport const TOP = 'top';\nexport const LEFT = 'left';\nexport const RIGHT = 'right';\n\n/**\n  * This object is used to associate the axis orientation with the d3 class\n  * used to represent that axis.\n  */\nexport const axisOrientationMap = {\n    [AxisOrientation.LEFT]: Symbols.axisLeft,\n    [AxisOrientation.BOTTOM]: Symbols.axisBottom,\n    [AxisOrientation.RIGHT]: Symbols.axisRight,\n    [AxisOrientation.TOP]: Symbols.axisTop\n};\n","/**\n * @module axis\n * This file exports constants used to reference scale type\n * consistently throughout the project.\n */\nexport const LINEAR = 'linear';\nexport const BAND = 'band';\nexport const TIME = 'temporal';\nexport const COLOR = 'color';\nexport const ORDINAL = 'ordinal';\nexport const QUANTIZE = 'quantize';\nexport const QUANTILE = 'quantile';\nexport const LOG = 'log';\nexport const POW = 'pow';\nexport const IDENTITY = 'identity';\nexport const SEQUENTIAL = 'sequential';\nexport const THRESHOLD = 'threshold';\n","export const CLASSPREFIX = 'muze';\n\nexport const CONTINOUS = 'continous';\nexport const DISCRETE = 'discrete';\nexport const SEQUENTIAL = 'sequential';\nexport const ORDINAL = 'ordinal';\nexport const LINEAR = 'linear';\nexport const BAND = 'band';\nexport const THRESHOLD = 'threshold';\nexport const QUANTIZE = 'quantize';\nexport const QUANTILE = 'quantile';\n\nexport const COLOR = 'color';\nexport const SHAPE = 'shape';\nexport const SIZE = 'size';\n\nexport const DOMAIN = 'domain';\nexport const HIDDEN = 'hidden';\nexport const NUMBER = 'number';\nexport const BOTTOM = 'bottom';\nexport const TOP = 'top';\n\nexport const RGB = 'rgb';\nexport const HEX = 'hex';\nexport const HSLA = 'hsla';\nexport const HSL = 'hsl';\n\nexport const DEFAULT_ANGLE_DOMAIN = [1];\nexport const MIN_NO_OF_TICKS = 2;\nexport const DEFAULT_NO_OF_TICKS = 10;\n\n","import { scales, colorSchemes } from 'muze-utils';\n\nimport {\n    SEQUENTIAL,\n    ORDINAL,\n    LINEAR,\n    CONTINOUS,\n    THRESHOLD,\n    QUANTIZE\n} from './enums/constants';\n\nimport * as ScaleType from './enums/scale-type';\n\nconst {\n    scaleLinear,\n    scaleThreshold,\n    scaleLog,\n    scalePow,\n    scaleIdentity,\n    scaleOrdinal,\n    scaleSequential,\n    scaleQuantize,\n    scaleQuantile,\n    schemeCategory10,\n    schemeCategory20,\n    schemeCategory20b,\n    scaleBand,\n    scaleTime\n} = scales;\nexport const scaleMap = {\n    [ScaleType.LINEAR]: scaleLinear,\n    [ScaleType.BAND]: scaleBand,\n    [ScaleType.QUANTIZE]: scaleQuantize,\n    [ScaleType.QUANTILE]: scaleQuantile,\n    [ScaleType.THRESHOLD]: scaleThreshold,\n    [ScaleType.SEQUENTIAL]: scaleSequential,\n    [ScaleType.LOG]: scaleLog,\n    [ScaleType.POW]: scalePow,\n    [ScaleType.IDENTITY]: scaleIdentity,\n    [ScaleType.TIME]: scaleTime,\n    [ScaleType.COLOR]: scaleLinear,\n    [ScaleType.ORDINAL]: scaleOrdinal\n};\nexport const SCHEMES = {\n    SCHEME1: schemeCategory10,\n    SCHEME2: schemeCategory20,\n    SCHEME3: schemeCategory20b\n};\n\n/**\n * Accepts a scheme in a string format and returns the scale from d3-scale-chromatic\n *\n * @export\n * @param {string} scheme a string representing the kind of scheme for the color axis\n * @return {Object} The corresponding scale from a scheme type from d3 chromatic scale\n */\nexport function getScheme (scheme) {\n    if (scheme[0] === 'i') {\n        return scaleSequential(colorSchemes[scheme]);\n    }\n    return scaleOrdinal(colorSchemes[scheme]);\n}\n\n/**\n *\n *\n * @export\n * @param {*} scheme\n *\n */\nexport function getSchemeType (scheme) {\n    let schemeType = '';\n    if (scheme && typeof (scheme) === 'string') {\n        schemeType = scheme[0] === 'i' ? SEQUENTIAL : ORDINAL;\n    } else {\n        schemeType = ORDINAL;\n    }\n    return schemeType;\n}\n\n/**\n * This function is used to create a scale that is assigned to\n * an instance of axis.\n *\n * @export\n * @param {Object} params the input parameters to create a Scale object\n * @param {string} params.type the type of scale\n * @param {Array} params.range the range of scale\n * @return {Object} instance of scale\n */\nexport function createScale (params) {\n    if (!params.type || !scaleMap[params.type]) {\n        throw new Error(`${params.type} is not a valid scale type`);\n    }\n    if (!Array.isArray(params.range)) {\n        throw new Error('range parameter must be an array');\n    }\n    let scaleFactory = null;\n    const range = params.range;\n    // @todo: do it using scale decorator\n    if (params.type === LINEAR && params.interpolator) {\n        scaleFactory = scaleMap[params.interpolator];\n        if (params.interpolator === ScaleType.POW) {\n            return scaleFactory().range(range).exponent(params.exponent);\n        } else if (params.interpolator === ScaleType.LOG) {\n            return scaleFactory().range(range).base([params.base]);\n        }\n    } else {\n        scaleFactory = scaleMap[params.type];\n    }\n\n    if (params.type === QUANTIZE) {\n        scaleFactory().nice();\n    }\n    return scaleFactory().range(range);\n}\n\n/**\n * This method is used to update the range of a scale\n * so that the core module can remain agnostic of the d3\n * scale api.\n *\n * @export\n * @param {Scale} scale Instance of d3 Scale.\n * @param {Array} range new range of the scale.\n * @return {Scale} Updated scale.\n */\nexport function updateScaleRange (scale, range) {\n    return scale.range(range);\n}\n\n/**\n *\n *\n * @export\n * @param {*} domainType\n * @param {*} rangeType\n * @param {*} steps\n *\n */\nexport function getScaleType (domainType, rangeType, steps) {\n    if (rangeType === CONTINOUS) {\n        return LINEAR;\n    }\n    if (domainType === CONTINOUS) {\n        if (steps instanceof Array) {\n            return THRESHOLD;\n        }\n        return QUANTIZE;\n    }\n    return ORDINAL;\n}\n","import { getUniqueId } from 'muze-utils';\nimport { CLASSPREFIX } from '../enums/constants';\n\n/**\n *\n *\n */\nexport const defaultConfig = {\n    id: getUniqueId(),\n    adjustRange: false,\n    axisName: {\n        defClassName: 'axis-name'\n    },\n    axisNamePadding: 12,\n    base: 10,\n    classPrefix: CLASSPREFIX,\n    className: `${CLASSPREFIX}-axis`,\n    exponent: 1,\n    interpolator: 'linear',\n    fixedBaseline: true,\n    labels: {\n        rotation: null,\n        smartTicks: null\n    },\n    orientation: 'left',\n    numberFormat: val => val,\n    padding: 0.3,\n    nice: true,\n    numberOfTicks: null,\n    rotate: false,\n    show: true,\n    showAxisName: true,\n    showInnerTicks: true,\n    showOuterTicks: true,\n    style: {},\n    type: 'linear',\n    tickFormat: null,\n    tickValues: null,\n    xOffset: 0,\n    yOffset: 0\n};\n\n","/**\n * This file exports functionality that is used to render axis.\n */\nimport { selectElement, makeElement, angleToRadian } from 'muze-utils';\nimport * as AxisOrientation from './enums/axis-orientation';\nimport { LINEAR, HIDDEN, BOTTOM, TOP } from './enums/constants';\n\n/**\n *\n *\n * @param {*} instance\n * @param {*} container\n * @param {*} labelManager\n * @param {*} config\n */\nconst rotateAxis = (instance, tickText, labelManager) => {\n    let rotation;\n    const axis = instance.axis();\n    const config = instance.config();\n    const renderConfig = instance.renderConfig();\n    const smartTicks = instance.smartTicks();\n    const scale = axis.scale();\n    const labelFunc = scale.ticks || scale.quantile || scale.domain;\n    const ticks = labelFunc();\n    const {\n        orientation,\n        fixedBaseline,\n        type\n    } = config;\n    const {\n        labels\n    } = renderConfig;\n\n    rotation = labels.rotation;\n\n    const tickSize = instance.getTickSize();\n    tickText.each(function (d, index) {\n        let yShift;\n        let xShift;\n        let datum = smartTicks[index] ? smartTicks[index].text : d;\n\n        datum = datum.toString();\n\n        const tickLabelDim = labelManager.getOriSize(datum);\n\n        const width = tickLabelDim.width * 0.5;\n        const height = tickLabelDim.height * 0.5;\n\n        if (rotation < 0) {\n            rotation = 360 + rotation;\n        }\n\n        const quadrant = 4 - Math.floor(rotation / 90);\n        const rotationNormalizer = ((quadrant % 2 === 0) ? rotation : 180 * Math.ceil(rotation / 180) - rotation) % 180;\n\n        yShift = Math.sqrt(height ** 2 + width ** 2) * Math.sin(angleToRadian(rotationNormalizer));\n\n        if ((quadrant === 3 || quadrant === 2) && !(rotationNormalizer > 67.5 && rotationNormalizer <= 90)) {\n            yShift += height * 2;\n        }\n        xShift = width;\n\n        if (rotation === 90) {\n            xShift = height;\n        } else if (rotation === 270) {\n            xShift = -height;\n        } else {\n            xShift = 0;\n        }\n\n        if (orientation === AxisOrientation.TOP) {\n            xShift = (fixedBaseline && ticks[0] === d && type === LINEAR) ? xShift + xShift / 2 : xShift;\n            selectElement(this)\n                            .attr('transform', `translate(${-xShift + tickSize}\n                                ${-yShift - tickSize}) rotate(${rotation})`);\n        } else {\n            xShift = (fixedBaseline && ticks[0] === d && type === LINEAR) ? xShift - xShift / 2 : xShift;\n\n            selectElement(this)\n                            .attr('transform', `translate(${xShift - tickSize}\n                                ${yShift + tickSize}) rotate(${rotation})`);\n        }\n        selectElement(this).transition()\n                        .duration(1000).text(datum);\n    });\n    return tickText;\n};\n\n/**\n *\n *\n * @param {*} tickText\n * @param {*} axisInstance\n */\nconst changeTickOrientation = (selectContainer, axisInstance, tickSize) => {\n    const {\n        _smartTicks\n    } = axisInstance;\n    const config = axisInstance.config();\n    const renderConfig = axisInstance.renderConfig();\n    const labelManager = axisInstance.dependencies().labelManager;\n    const {\n        orientation,\n        classPrefix\n    } = config;\n    const {\n        labels\n    } = renderConfig;\n    const {\n        rotation,\n        smartTicks: isSmartTicks\n    } = labels;\n\n    const tickText = selectContainer.selectAll('.tick text');\n    tickText.selectAll('tspan').remove();\n\n    // rotate labels if not enough space is available\n    if (rotation && (orientation === TOP || orientation === BOTTOM)) {\n        rotateAxis(axisInstance, tickText, labelManager);\n    } else if (!rotation && !isSmartTicks) {\n        tickText.attr('transform', '');\n    } else {\n        tickText.text('');\n        if (orientation === TOP || orientation === BOTTOM) {\n            tickText.attr('y', 0)\n                            .attr('x', 0)\n                            .attr('transform', '')\n                            .text('');\n            const tspan = makeElement(tickText, 'tspan', (d, i) => {\n                if (_smartTicks[i]) {\n                    return _smartTicks[i].lines;\n                } return [];\n            }, `${classPrefix}-smart-text`);\n\n            tspan.attr('dy', '0')\n                            .style('opacity', '0')\n\n                            .transition()\n                            .duration(1000)\n                            .on('end', axisInstance.registerAnimationDoneHook())\n                            .attr('dy', (d, i) => {\n                                if (orientation === BOTTOM || i !== 0) {\n                                    return _smartTicks[0].oriTextHeight;\n                                }\n                                return -_smartTicks[0].oriTextHeight * (_smartTicks[0].lines.length - 1) - tickSize;\n                            })\n                            .style('opacity', 1)\n                            .text(e => e)\n                            .attr('x', 0);\n        } else {\n            const tspan = makeElement(tickText, 'tspan', (d, i) => _smartTicks[i].lines, `${classPrefix}-smart-text`);\n            tspan.text(e => e);\n        }\n    }\n\n    return tickText;\n};\n\nconst setFixedBaseline = (axisInstance) => {\n    const {\n        fixedBaseline\n    } = axisInstance.config();\n    const {\n        showInnerTicks\n    } = axisInstance.renderConfig();\n    const domain = axisInstance.domain();\n    if (fixedBaseline && domain.length && showInnerTicks) {\n        axisInstance.setFixedBaseline();\n    }\n};\n\n/**\n *\n *\n * @param {*} textNode\n * @param {*} orientation\n * @param {*} measures\n */\nconst setAxisNamePos = (textNode, orientation, measures) => {\n    const {\n        axisNameHeight,\n        yOffset,\n        labelOffset,\n        availableSpace\n    } = measures;\n\n    switch (orientation) {\n    case AxisOrientation.LEFT:\n        textNode.attr('transform',\n            `translate(${-(availableSpace.width - axisNameHeight)},${yOffset + labelOffset})rotate(-90)`);\n        break;\n    case AxisOrientation.RIGHT:\n        textNode.attr('transform',\n             `translate(${(availableSpace.width - axisNameHeight)},${yOffset + labelOffset})rotate(90)`);\n        break;\n    case AxisOrientation.TOP:\n        textNode.attr('transform',\n             `translate(${availableSpace.width / 2},${-availableSpace.height + axisNameHeight})`);\n        break;\n    case AxisOrientation.BOTTOM:\n        textNode.attr('transform',\n             `translate(${availableSpace.width / 2},${availableSpace.height - axisNameHeight / 2})`);\n        break;\n    default:\n    }\n    return textNode;\n};\n\n/**\n * This method is used to render the axis inside an\n * svg container.\n *\n * @export\n * @param {Object} axisInstance the nput object required to render axis\n * @param {string} axisInstance.orientation the orientation of axis\n * @param {Object} axisInstance.scale instance of d3 scale\n * @param {SVGElement} axisInstance.container the container in which to render\n */\nexport function renderAxis (axisInstance) {\n    const config = axisInstance.config();\n    const renderConfig = axisInstance.renderConfig();\n    const labelManager = axisInstance.dependencies().labelManager;\n    const mount = axisInstance.mount();\n    const range = axisInstance.range();\n    const axis = axisInstance.axis();\n    const scale = axisInstance.scale();\n    const {\n        _axisNameStyle: axisNameStyle,\n        _tickLabelStyle: tickLabelStyle,\n        _tickFormatter: axisTickFormatter\n     } = axisInstance;\n    const {\n        orientation,\n        name,\n\n        axisNamePadding,\n        className,\n        id,\n        classPrefix\n     } = config;\n    const {\n        show,\n        xOffset,\n        yOffset,\n        showAxisName,\n        labels,\n        smartAxisName\n    } = renderConfig;\n\n    if (!show) {\n        return;\n    }\n\n    const tickSize = axisInstance.getTickSize();\n\n    const selectContainer = makeElement(selectElement(mount), 'g', [axisInstance], `${className}`, {},\n        key => key.config().id);\n\n    // Set style for tick labels\n    labelManager.setStyle(tickLabelStyle);\n\n    const labelFunc = scale.ticks || scale.quantile || scale.domain;\n\n    const ticks = axis.tickValues() || labelFunc();\n\n    axis.tickFormat(axisTickFormatter(ticks));\n\n    // Get range(length of range)\n    const availableSpace = Math.abs(range[0] - range[1]);\n\n    // Get width and height taken by axis labels\n    const labelProps = axisInstance.axisComponentDimensions().largestTickDimensions;\n\n    // Draw axis ticks\n    selectContainer.attr('transform', `translate(${xOffset},${yOffset})`);\n    setFixedBaseline(axisInstance);\n    if (labels.smartTicks === false || tickSize === 0) {\n        selectContainer.transition()\n                        .duration(1000)\n                        .on('end', axisInstance.registerAnimationDoneHook())\n                        .call(axis);\n    } else {\n        selectContainer.call(axis);\n    }\n    selectContainer.selectAll('.tick').classed(`${classPrefix}-ticks`, true);\n    selectContainer.selectAll('.tick line').classed(`${classPrefix}-tick-lines`, true);\n\n    // Set classes for ticks\n    const tickText = selectContainer.selectAll('.tick text');\n    tickText.classed(`${classPrefix}-ticks`, true)\n                    .classed(`${classPrefix}-ticks-${id}`, true);\n\n    changeTickOrientation(selectContainer, axisInstance, tickSize);\n\n    // Create axis name\n    const textNode = makeElement(selectContainer, 'text', [smartAxisName], `${classPrefix}-axis-name`)\n                    .attr('text-anchor', 'middle')\n                    .classed(`${classPrefix}-axis-name-${id}`, true)\n                    .text(d => d.text);\n\n    // Hide axis name if show is off\n    textNode.classed(HIDDEN, !showAxisName);\n\n    // render labels based on orientation of axis\n    const labelOffset = availableSpace / 2;\n\n    // Set style for axis name\n    labelManager.setStyle(axisNameStyle);\n    const axisNameSpace = labelManager.getOriSize(name);\n    const measures = {\n        labelProps,\n        tickSize,\n        axisNamePadding,\n        axisNameHeight: axisNameSpace.height,\n        axisNameWidth: axisNameSpace.width,\n        yOffset,\n        xOffset,\n        labelOffset,\n        availableSpace: axisInstance.availableSpace()\n    };\n    // Set position for axis name\n    setAxisNamePos(textNode, orientation, measures);\n}\n","import {\n    timeMillisecond,\n    timeSecond,\n    timeMinute,\n    timeHour,\n    timeDay,\n    timeWeek,\n    timeMonth,\n    timeYear\n} from 'muze-utils';\n\nconst durationSecond = 1000;\nconst durationMinute = durationSecond * 60;\nconst durationHour = durationMinute * 60;\nconst durationDay = durationHour * 24;\nconst durationWeek = durationDay * 7;\nconst durationMonth = durationDay * 30;\nconst durationYear = durationDay * 365;\n\n// Longest Word for each level based on which tick skipping is decided\nconst longestWord = {\n    month: 'September',\n    quarter: 'October',\n    halfYearly: 'July',\n    year: 9999,\n    day: 'September',\n    hour: '24 AM',\n    mintues: '60:60',\n    seconds: ':60',\n    week: 'Wed 31'\n};\n\n// These are the various levels of ticks that can be shown by Muze.\n// Each level is described as how frequently the ticks appear\n// The format is as follows:\n// [Frequency, Milliseconds, Name of Seconds, Tick Generator, Level Type]\nconst tickIntervals = [\n    [1, 1, 'milliseconds', timeMillisecond.every(1), 'seconds'],\n    [1, durationSecond, 'seconds', timeSecond.every(1), 'seconds'],\n    [5, 5 * durationSecond, 'five seconds', timeSecond.every(5), 'seconds'],\n    [10, 10 * durationSecond, 'ten seconds', timeSecond.every(10), 'seconds'],\n    [15, 15 * durationSecond, 'fifteen seconds', timeSecond.every(15), 'seconds'],\n    [30, 30 * durationSecond, 'thirty seconds', timeSecond.every(30), 'seconds'],\n    [1, durationMinute, 'minute', timeMinute.every(1), 'minutes'],\n    [5, 5 * durationMinute, 'five minutes', timeMinute.every(5), 'minutes'],\n    [10, 10 * durationMinute, 'ten minutes', timeMinute.every(10), 'minutes'],\n    [15, 15 * durationMinute, 'fifteen minutes', timeMinute.every(15), 'minutes'],\n    [30, 30 * durationMinute, 'thirty minutes', timeMinute.every(30), 'minutes'],\n    [1, durationHour, 'hour', timeHour.every(1), 'hour'],\n    [3, 3 * durationHour, 'three hours', timeHour.every(3), 'hour'],\n    [6, 6 * durationHour, 'six hours', timeHour.every(6), 'hour'],\n    [12, 12 * durationHour, 'twelve hours', timeHour.every(12), 'hour'],\n    [1, durationDay, 'daily', timeDay.every(1), 'day'],\n    [1, durationWeek, 'weekly', timeWeek.every(1), 'week'],\n    [1, durationMonth, 'monthly', timeMonth.every(1), 'week'],\n    [3, 3 * durationMonth, 'quaterly', timeMonth.every(3), 'quarter'],\n    [6, 6 * durationMonth, 'half yearly', timeMonth.every(6), 'halfYearly'],\n    [1, durationYear, 'yearly', timeYear.every(1), 'year'],\n    [2, 2 * durationYear, '2 year', timeYear.every(2), 'year'],\n    [3, 3 * durationYear, '3 year', timeYear.every(3), 'year'],\n    [5, 5 * durationYear, '5 year', timeYear.every(5), 'year'],\n    [10, 10 * durationYear, 'decade', timeYear.every(10), 'year'],\n    [100, 100 * durationYear, 'century', timeYear.every(100), 'year'],\n    [1000, 1000 * durationYear, 'millenium', timeYear.every(1000), 'year']\n];\n/**\n * Get the actual tick interval based on the available width, number of ticks\n * and the distance between two ticks\n *\n * @param {Object} context Axis Context\n * @param {number} noOfTicks Number of Ticks based on which interval is calculated\n * @return {number} The width for the tick interval\n */\nconst getActualTickInterval = (context, noOfTicks) => {\n    const minTickDistance = context._minTickDistance;\n    const minWidthBetweenTicks = minTickDistance.width;\n\n    const { width } = context.availableSpace();\n    const actualTickInterval = Math.floor(((width - (noOfTicks - 1) * (minWidthBetweenTicks)) / noOfTicks));\n\n    return actualTickInterval;\n};\n\n/**\n * Get the tick interval based on the current level of ticks. Levels are decided on\n * the number of ticks that are possible to show\n *\n * @param {Object} context Axis Context\n * @param {string} type Type of level (yearly, monthly, etc)\n * @return {number} The width for the tick interval\n */\nconst getTickIntervalBasedOnCurrentLevel = (context, type) => {\n    const labelManager = context._dependencies.labelManager;\n    const longestWordType = longestWord[type];\n    const measure = labelManager.getOriSize(longestWordType);\n\n    return measure.width;\n};\n\nconst getTickIntervalFnBasedOnNumberOfTicks = (interval, count, context) => {\n    let possibleTickLevelIndex = tickIntervals.length - 1;\n    let maxPossibleTicks = 1;\n    let tickIntervalLevelInfo = null;\n\n    // Decide possible tick level based on min tick width (with ellipses)\n    for (let i = tickIntervals.length - 1; i >= 0; i--) {\n        const tickIntervalInfo = tickIntervals[i];\n        const numOfPossibleTicks = Math.floor(interval / tickIntervalInfo[1]);\n        if (numOfPossibleTicks <= count) {\n            possibleTickLevelIndex = i;\n            maxPossibleTicks = numOfPossibleTicks;\n        }\n    }\n\n    tickIntervalLevelInfo = tickIntervals[possibleTickLevelIndex];\n\n    // Get actual tick interval based on the level of ticks generated\n    const actualTickInterval = getActualTickInterval(context, maxPossibleTicks);\n\n    // Maximum Possible tick Interval for a particular level based on a pre decided set of values\n    const maxTickInterval = getTickIntervalBasedOnCurrentLevel(context, tickIntervalLevelInfo[4]);\n\n    // Display the next level involving tick skipping if current level does not meet the requirement\n    // for displaying max tick\n    if (actualTickInterval < maxTickInterval && possibleTickLevelIndex < tickIntervals.length - 1) {\n        tickIntervalLevelInfo = tickIntervals[possibleTickLevelIndex + 1];\n    }\n    return tickIntervalLevelInfo[3];\n};\n\nexport const getSkippedTicks = (context, maxPossibleTicks) => {\n    let actualNumberOfTicks = maxPossibleTicks;\n    const domain = context.domain();\n    const minDiff = context._minDiff;\n    // Get the interval in ms from the domain\n    const millisecondInterval = domain[1] - domain[0];\n    // Get number of ticks based on the minimum difference in the data\n    const numOfTicksAccordingToMinDiff = Math.floor(millisecondInterval / minDiff);\n\n    // Show ticks according to min diff if possible\n    if (maxPossibleTicks >= numOfTicksAccordingToMinDiff) {\n        actualNumberOfTicks = numOfTicksAccordingToMinDiff;\n    }\n\n    return getTickIntervalFnBasedOnNumberOfTicks(millisecondInterval, actualNumberOfTicks, context);\n};\n","import { BOTTOM, TOP, LEFT, RIGHT } from '../enums/axis-orientation';\nimport { getSkippedTicks } from './skip-ticks';\nimport { TIME, LINEAR, BAND } from '../enums/scale-type';\n\nexport const applyTickSkipping = (context) => {\n    const minTickDistance = context._minTickDistance;\n    const minTickSpace = context._minTickSpace;\n    const minWidthBetweenTicks = minTickDistance.width;\n    const minTickWidth = minTickSpace.width;\n\n    const { width } = context.availableSpace();\n\n    const maxTicks = Math.floor((width + minWidthBetweenTicks) / (minTickWidth + minWidthBetweenTicks));\n\n    const ticks = context.scale().ticks(getSkippedTicks(context, maxTicks));\n\n    context.renderConfig({\n        tickValues: ticks\n    });\n};\n\nconst adjustHorizontalRange = (range, diff) => {\n    range[0] += diff;\n    range[1] -= diff;\n    return range;\n};\n\nconst adjustVerticalRange = (range, diff) => {\n    range[0] -= diff;\n    range[1] += diff;\n    return range;\n};\n\nconst rangeAdjustmentMap = {\n    [TOP]: adjustHorizontalRange,\n    [BOTTOM]: adjustHorizontalRange,\n    [LEFT]: adjustVerticalRange,\n    [RIGHT]: adjustVerticalRange\n};\n\nexport const setAxisRange = (context, type, rangeBounds, offset) => {\n    context.range(rangeBounds);\n    offset && context.renderConfig({ [`${type}Offset`]: offset });\n};\n\nconst getAxisOffset = (timeDiff, range, domain) => {\n    const avWidth = Math.abs(range[1] - range[0]);\n    const pvr = avWidth / (domain[1] - domain[0]);\n    const width = (pvr * timeDiff);\n    const bars = avWidth / width;\n    const barWidth = avWidth / (bars + 1);\n    const diff = avWidth - barWidth * bars;\n\n    return diff / 2;\n};\n\nexport const getAdjustedRange = (minDiff, range, domain, config) => {\n    const {\n        orientation,\n        adjustRange\n    } = config;\n    const diff = getAxisOffset(minDiff, range, domain);\n\n    if (adjustRange) {\n        return rangeAdjustmentMap[orientation](range, diff);\n    }\n    return range;\n};\n\nexport const spaceSetter = (context, spaceConfig) => {\n    let tickInterval;\n    let heightForTicks;\n    const config = context.config();\n    const {\n        width: availWidth,\n        height: availHeight,\n        padding\n    } = context.availableSpace();\n    const {\n        top,\n        left,\n        bottom,\n        right\n    } = padding;\n    const {\n        isOffset\n    } = spaceConfig;\n    const {\n        showAxisName,\n        labels\n    } = context.renderConfig();\n    const {\n        rotation\n    } = labels;\n    const {\n        fixedBaseline,\n        axisNamePadding,\n        tickValues\n    } = config;\n    const {\n        tickDimensions,\n        allTickDimensions,\n        axisNameDimensions,\n        tickSize\n    } = context.getAxisDimensions();\n    const {\n        height: tickDimHeight,\n        width: tickDimWidth\n    } = tickDimensions;\n\n    const namePadding = showAxisName ? axisNamePadding : 0;\n    const labelConfig = { smartTicks: true, rotation: labels.rotation };\n    const minTickDistance = context._minTickDistance;\n    const minTickSpace = context._minTickSpace;\n    const minDiff = context._minDiff;\n    const domain = context.domain();\n    const axisNameHeight = axisNameDimensions.height;\n    const minWidthBetweenTicks = minTickDistance.width;\n    const minTickWidth = minTickSpace.width;\n    const minTickHeight = minTickSpace.height;\n\n    return {\n        [TIME]: {\n            x: () => {\n                !tickValues && context.applyTickSkipping();\n                const noOfTicks = context.getTickValues().length;\n\n                // Get the Tick Interval\n                tickInterval = ((availWidth - (noOfTicks - 1) * (minWidthBetweenTicks)) / noOfTicks);\n\n                // Get height for ticks\n                heightForTicks = availHeight - axisNameHeight - tickSize - namePadding;\n\n                if (tickInterval < minTickWidth && rotation !== 0) {\n                    // set smart ticks and rotation config\n                    labelConfig.rotation = labels.rotation === null ? -90 : rotation;\n                    // Remove ticks if not enough height\n                    if (tickInterval < minTickHeight) {\n                        heightForTicks = availHeight;\n                        tickInterval = minTickHeight;\n                        context.renderConfig({ showInnerTicks: false, showOuterTicks: false });\n                    }\n                }\n                if (availHeight < axisNameHeight) {\n                    context.renderConfig({ show: false });\n                }\n\n                const tickShifter = Math.min(tickInterval, tickDimWidth);\n                // set range for axis\n                setAxisRange(context, 'y', getAdjustedRange(minDiff, [tickShifter / 2,\n                    availWidth - left - right - tickShifter / 2], domain, config),\n                        isOffset ? availHeight : null);\n\n                context.maxTickSpaces({\n                    width: tickInterval,\n                    height: heightForTicks,\n                    noWrap: rotation !== null\n                });\n\n                return labelConfig;\n            },\n            y: () => {\n                let widthForTicks = availWidth;\n                const tickShifter = tickDimHeight / 2;\n\n                setAxisRange(context, 'x', getAdjustedRange(minDiff,\n                    [availHeight - top - bottom - tickShifter, tickShifter], domain, config),\n                        isOffset ? availWidth : null);\n\n                if ((availWidth - axisNameHeight - namePadding) <= minWidthBetweenTicks) {\n                    widthForTicks = 0;\n                    context.renderConfig({ showInnerTicks: false, showOuterTicks: false });\n                }\n\n                context.maxTickSpaces({\n                    width: widthForTicks,\n                    height: availHeight,\n                    noWrap: true\n                });\n                if (availWidth < axisNameHeight) {\n                    context.renderConfig({ show: false });\n                }\n                return labelConfig;\n            }\n        },\n        [BAND]: {\n            x: () => {\n                setAxisRange(context, 'y', [0, availWidth - left - right], isOffset ? availHeight : null);\n                const range = context.range();\n\n                // Get Tick Interval\n                tickInterval = ((range[1] - range[0]) / (tickValues || domain).length) - minWidthBetweenTicks * 2;\n\n                // Get height available for ticks\n                heightForTicks = availHeight - axisNameHeight - tickSize - namePadding;\n\n                if (tickInterval < minTickWidth && rotation !== 0) {\n                    // set smart ticks and rotation config\n                    labelConfig.rotation = rotation === null ? -90 : rotation;\n                    labelConfig.smartTicks = false;\n\n                    // Ticks with overlapping height\n                    if (tickInterval < minTickHeight) {\n                        heightForTicks = 0;\n                        tickInterval = 0;\n                        context.renderConfig({ showInnerTicks: false, showOuterTicks: false });\n                        context.range([minTickHeight / 2, availWidth - minTickHeight / 2]);\n                    }\n                } else if (tickValues) {\n                    const interval = (availWidth / domain.length) - minWidthBetweenTicks;\n                    if (interval < minTickWidth) {\n                        context.range([minTickHeight / 2, availWidth - minTickHeight / 2]);\n                    }\n                }\n                if (availHeight < axisNameHeight) {\n                    context.renderConfig({ show: false, showInnerTicks: false, showOuterTicks: false });\n                }\n\n                context.maxTickSpaces({\n                    width: tickInterval,\n                    height: heightForTicks,\n                    noWrap: rotation !== null\n                });\n                return labelConfig;\n            },\n            y: () => {\n                setAxisRange(context, 'x', [availHeight - bottom, top], isOffset ? availWidth : null);\n\n                let widthForTicks = availWidth - axisNameHeight - tickSize - namePadding;\n                if (widthForTicks <= minWidthBetweenTicks) {\n                    widthForTicks = 0;\n                    context.renderConfig({ showInnerTicks: false, showOuterTicks: false });\n                }\n\n                context.maxTickSpaces({\n                    width: widthForTicks,\n                    height: availHeight,\n                    noWrap: true\n                });\n                if (availWidth < axisNameHeight) {\n                    context.renderConfig({ show: false });\n                }\n                return labelConfig;\n            }\n        },\n        [LINEAR]: {\n            x: () => {\n                labelConfig.smartTicks = false;\n                const tickShifter = tickDimWidth / 2;\n\n                const baseline = fixedBaseline ? 0 : tickShifter;\n\n                setAxisRange(context, 'y', [baseline + left, availWidth - right - tickShifter],\n                    isOffset ? availHeight : null);\n\n                const range = context.range();\n\n                // Get Tick widths and available space\n                const totalTickWidth = allTickDimensions.length * (tickDimWidth + minWidthBetweenTicks);\n                const availableWidth = range[1] - range[0];\n\n                 // Rotate labels if not enough width\n                if (availableWidth < totalTickWidth && labels.rotation !== null) {\n                    if (availHeight - tickDimWidth - namePadding - tickSize > axisNameHeight) {\n                        labelConfig.rotation = null;\n                        context.renderConfig({\n                            showInnerTicks: true,\n                            showAxisName: true\n                        });\n                    } else {\n                        labelConfig.rotation = -90;\n                        context.renderConfig({\n                            showInnerTicks: true,\n                            showAxisName: false\n\n                        });\n                    }\n                }\n\n                if (availHeight < axisNameHeight) {\n                    context.renderConfig({ show: false });\n                }\n                return labelConfig;\n            },\n            y: () => {\n                labelConfig.smartTicks = false;\n                const tickShifter = tickDimensions.height / 2;\n                const baseline = fixedBaseline ? 1 : tickShifter;\n\n                setAxisRange(context, 'x', [availHeight - bottom - baseline, tickShifter + top],\n                    isOffset ? availWidth : null);\n\n                // Remove display of ticks if no space is left\n                if (availWidth < tickDimWidth + axisNameHeight + namePadding) {\n                    context.renderConfig({ showInnerTicks: false });\n                    if (availWidth < axisNameHeight) {\n                        context.renderConfig({ show: false });\n                    }\n                }\n                return labelConfig;\n            }\n        }\n    };\n};\n","import { defaultValue } from 'muze-utils';\nimport { TOP, LEFT, BOTTOM } from '../enums/axis-orientation';\nimport { MIN_NO_OF_TICKS, DEFAULT_NO_OF_TICKS } from '../enums/constants';\nimport { setAxisRange, getAdjustedRange } from './space-setter';\n\nexport const getRotatedSpaces = (rotation = 0, width, height) => {\n    let rotatedHeight = height;\n    let rotatedWidth = width;\n    if (rotation) {\n        const angle = ((rotation || 0) * Math.PI) / 180;\n        rotatedWidth = Math.abs(height * Math.sin(angle)) + Math.abs(width * Math.cos(angle));\n        rotatedHeight = Math.abs(width * Math.sin(angle)) + Math.abs(height * Math.cos(angle));\n    }\n    return { width: rotatedWidth, height: rotatedHeight };\n};\n\nexport const setOffset = (context) => {\n    let x = 0;\n    let y = 0;\n    const logicalSpace = context.logicalSpace();\n    const config = context.config();\n    const {\n        orientation,\n        xOffset,\n        yOffset\n    } = config;\n    if (orientation === LEFT) {\n        x = xOffset === undefined ? logicalSpace.width : xOffset;\n    }\n    if (orientation === TOP) {\n        y = yOffset === undefined ? logicalSpace.height : yOffset;\n    }\n    context.renderConfig({ xOffset: x, yOffset: y });\n};\n\nexport const getNumberOfTicks = (availableSpace, labelDim, axis, axisInstance) => {\n    let numberOfValues = 0;\n    let tickValues = [];\n    let { numberOfTicks } = axisInstance.config();\n    const ticks = axis.scale().ticks();\n    const tickLength = ticks.length;\n    const minTickDistance = axisInstance._minTickDistance.width;\n\n    numberOfValues = tickLength;\n\n    if (tickLength * (labelDim + minTickDistance) > availableSpace) {\n        numberOfValues = Math.floor(availableSpace / (labelDim + minTickDistance));\n    }\n\n    numberOfTicks = numberOfTicks || numberOfValues;\n    numberOfValues = Math.min(numberOfTicks, Math.max(MIN_NO_OF_TICKS, numberOfValues));\n\n    tickValues = axis.scale().ticks(numberOfValues);\n\n    if (tickValues.length > numberOfValues) {\n        tickValues = tickValues.filter((e, i) => i % 2 === 0);\n    }\n\n    if (numberOfValues === MIN_NO_OF_TICKS) {\n        tickValues = axis.scale().ticks(DEFAULT_NO_OF_TICKS);\n        tickValues = [tickValues[0], tickValues[tickValues.length - 1]];\n    }\n    return tickValues;\n};\n\nexport const getAxisComponentDimensions = (context) => {\n    let largestTick = '';\n    let largestTickDimensions = { width: 0, height: 0 };\n    let smartTick = {};\n    let axisTicks;\n    const allTickDimensions = [];\n    const scale = context.scale();\n    const { tickValues, showAxisName } = context.renderConfig();\n    const { name } = context.config();\n    const { labelManager } = context.dependencies();\n    const labelFunc = scale.ticks || scale.quantile || scale.domain;\n\n    // set the style on the shared label manager instance\n    labelManager.setStyle(context._tickLabelStyle);\n\n    // get the values along the domain\n    axisTicks = tickValues || labelFunc();\n\n    // Get the tick labels\n    axisTicks = axisTicks.map((originalLabel, i) => {\n        const label = context.getFormattedText(originalLabel, i, axisTicks);\n\n    // convert to string for quant values\n        const tickDimensions = labelManager.getOriSize(label);\n\n    // Get spaces for all labels\n        allTickDimensions.push(tickDimensions);\n\n    // Getting largest label\n        if (tickDimensions.width > largestTickDimensions.width) {\n            largestTick = label;\n            smartTick = context.smartTicks() ? context.smartTicks()[i] : {};\n\n            largestTickDimensions = tickDimensions;\n            smartTick = smartTick || tickDimensions;\n        }\n        return label;\n    });\n\n    labelManager.setStyle(context._axisNameStyle);\n    const axisNameDimensions = showAxisName ? labelManager.getOriSize(name) : { width: 0, height: 0 };\n\n    return {\n        axisNameDimensions,\n        largestTick,\n        largestTickDimensions,\n        allTickDimensions,\n        axisTicks,\n        smartTick,\n        tickSize: context.getTickSize()\n    };\n};\n\nexport const computeAxisDimensions = (context) => {\n    let tickDimensions = {};\n    const { labels } = context.renderConfig();\n    const { smartTicks, rotation } = labels;\n    const {\n        largestTickDimensions,\n        axisTicks,\n        smartTick,\n        axisNameDimensions,\n        allTickDimensions,\n        tickSize\n    } = getAxisComponentDimensions(context);\n    const { height: labelHeight, width: labelWidth } = largestTickDimensions;\n\n    // get the domain of axis\n    const domain = context.domain();\n    // const angle = ((rotation || 0) * Math.PI) / 180;\n\n    if (domain.length === 0) {\n        return null;\n    }\n\n    if (smartTicks) {\n        tickDimensions = smartTick;\n    } else {\n        tickDimensions = { width: labelWidth, height: labelHeight };\n    }\n    tickDimensions = getRotatedSpaces(rotation, tickDimensions.width, tickDimensions.height);\n\n    if (tickSize === 0) {\n        tickDimensions = { width: 0, height: 0 };\n    }\n    return {\n        allTickDimensions,\n        tickSize,\n        tickDimensions,\n        axisNameDimensions,\n        largestTickDimensions,\n        axisTicks\n    };\n};\n\n/**\n *\n *\n * @param {*} axisDimensions\n * @param {*} config\n * @param {*} range\n *\n */\nexport const getHorizontalAxisSpace = (context, axisDimensions, range) => {\n    let width;\n    let height;\n    const domain = context.domain();\n    const minTickDistance = context._minTickDistance.width;\n    const { tickSize, tickDimensions, axisNameDimensions } = axisDimensions;\n    const { axisNamePadding, tickValues } = context.config();\n    const { showAxisName } = context.renderConfig();\n    const { height: axisDimHeight } = axisNameDimensions;\n    const { height: tickDimHeight, width: tickDimWidth } = tickDimensions;\n\n    width = range && range.length ? range[1] - range[0] : ((tickDimWidth + minTickDistance) * 3);\n\n    height = 0;\n    if (tickValues) {\n        const minTickDiff = context.getMinTickDifference();\n        const [min, max] = [\n            Math.min(...tickValues, ...domain),\n            Math.max(...tickValues, ...domain)\n        ];\n\n        width = ((max - min) / Math.abs(minTickDiff)) * (tickDimWidth + context._minTickDistance.width);\n    }\n    if (!width || width === 0) {\n        height = Math.max(tickDimWidth, tickDimHeight);\n    } else {\n        height = tickDimHeight;\n    }\n\n    height += (showAxisName ? axisDimHeight + axisNamePadding : 0) + tickSize;\n\n    return {\n        width,\n        height\n    };\n};\n\n/**\n *\n *\n * @param {*} axisDimensions\n * @param {*} config\n * @param {*} range\n *\n */\nexport const getVerticalAxisSpace = (context, axisDimensions) => {\n    let height;\n    let width;\n    const domain = context.domain();\n    const { tickSize, tickDimensions, axisNameDimensions } = axisDimensions;\n    const { axisNamePadding, tickValues } = context.config();\n    const { showAxisName } = context.renderConfig();\n    const { height: axisDimHeight } = axisNameDimensions;\n    const { height: tickDimHeight, width: tickDimWidth } = tickDimensions;\n\n    height = 0;\n    width = tickDimWidth;\n    if (tickValues) {\n        const minTickDiff = context.getMinTickDifference();\n        const [min, max] = [\n            Math.min(...tickValues, ...domain),\n            Math.max(...tickValues, ...domain)\n        ];\n\n        height = ((max - min) / Math.abs(minTickDiff)) * tickDimHeight;\n    }\n    width += (showAxisName ? axisDimHeight : 0) + tickSize + axisNamePadding;\n\n    return {\n        height,\n        width\n    };\n};\n\n/**\n * Calculates the logical space of the axis\n * @return {Object} Width and height occupied by the axis.\n */\nexport const calculateBandSpace = (context) => {\n    const range = context.range();\n    const axisDimensions = context.getAxisDimensions();\n\n    const { orientation } = context.config();\n    const { show } = context.renderConfig();\n    const { largestTickDimensions, axisTicks, allTickDimensions } = axisDimensions;\n    const { height: largestDimHeight } = largestTickDimensions;\n    const minTickWidth = context._minTickDistance.width;\n    if (orientation === TOP || orientation === BOTTOM) {\n        let {\n            width,\n            height\n        } = getHorizontalAxisSpace(context, axisDimensions, range);\n\n        if (!width || width === 0) {\n            width = allTickDimensions.reduce((t, n) =>\n                t + Math.min(n.width, n.height) + minTickWidth, 0);\n        }\n        if (show === false) {\n            height = 0;\n            width = 0;\n        }\n\n        return {\n            width,\n            height\n        };\n    }\n\n    let {\n        width,\n        height\n    } = getVerticalAxisSpace(context, axisDimensions, range);\n\n    if (!height || height === 0) {\n        height = axisTicks.length * (largestDimHeight + context._minTickDistance.height);\n    }\n    if (show === false) {\n        width = 0;\n    }\n    return {\n        width,\n        height\n    };\n};\n\n/**\n * Calculates the logical space of the axis\n * @return {Object} Width and height occupied by the axis.\n */\nexport const calculateContinousSpace = (context) => {\n    const range = context.range();\n    const axisDimensions = context.getAxisDimensions();\n    const { orientation } = context.config();\n    const { show, showAxisName } = context.renderConfig();\n    const { axisNameDimensions } = axisDimensions;\n\n    if (show === false) {\n        return {\n            width: 0,\n            height: 0\n        };\n    }\n\n    const { width: axisNameWidth } = axisNameDimensions;\n\n    if (orientation === TOP || orientation === BOTTOM) {\n        const {\n            width,\n            height\n        } = getHorizontalAxisSpace(context, axisDimensions, range);\n        const axisWidth = Math.max(width, axisNameWidth);\n\n        return {\n            width: axisWidth,\n            height\n        };\n    }\n    const {\n        width,\n        height\n    } = getVerticalAxisSpace(context, axisDimensions, range);\n\n    const effHeight = Math.max(height, showAxisName ? axisNameWidth : 0);\n\n    return {\n        width,\n        height: effHeight\n    };\n};\n\n/**\n * Overwrites domain with user defined domain (if present)\n * @param {Object} context reference to current axes\n * @param {Array} domain default domain\n *\n * @return {Array} domain\n */\nexport const getValidDomain = (context, domain) => {\n    const { domain: userDom } = context.config();\n\n    if (userDom) {\n        domain = userDom;\n    }\n\n    return defaultValue(domain, []);\n};\n\nexport const setContinousAxisDomain = (context, domain) => {\n    const { nice } = context.config();\n    const scale = context.scale.bind(context);\n\n    scale().domain(domain);\n    nice && scale().nice();\n    context._domain = scale().domain();\n};\n\n/**\n * Checks if any of the properties have changed between two objects\n * @param {Object} obj first object\n * @param {Object} obj1 second object\n * @param {Array} properties properties to be compared between two objects\n *\n * @return {Boolean} boolean value\n */\nexport const hasAxesConfigChanged = (obj = {}, obj1 = {}, properties) => {\n    if (!Object.keys(obj).length || !Object.keys(obj1).length) {\n        return false;\n    }\n    return properties.some(key => obj[key] !== obj1[key]);\n};\n\nexport const resetTickInterval = (context, domain) => {\n    const {\n        orientation,\n        isOffset\n    } = context.config();\n\n    const minDiff = context._minDiff;\n     // Set available space on interaction\n    if (context.range().length && (orientation === TOP || orientation === BOTTOM)) {\n        context.applyTickSkipping();\n        const {\n            largestTickDimensions\n        } = context.getAxisDimensions();\n\n        const noOfTicks = context.getTickValues().length;\n\n        const { width, height, padding } = context.availableSpace();\n        const {\n            left,\n            right\n        } = padding;\n        // Get the Tick Interval\n        const tickInterval = Math.min(largestTickDimensions.width,\n            ((width - (noOfTicks - 1) * (context._minTickDistance.width)) / noOfTicks));\n\n        context.maxTickSpaces({\n            width: tickInterval\n        });\n\n        const adjustedRange = getAdjustedRange(minDiff, [tickInterval / 2,\n            width - left - right - tickInterval / 2], domain, context.config());\n\n         // set range for axis\n        setAxisRange(context, 'y', adjustedRange, isOffset ? height : null);\n\n        context.setTickConfig();\n    }\n};\n\nexport const getSmartAxisName = (name, width, labelManager) => {\n    const oriSize = labelManager.getOriSize(name);\n\n    labelManager.useEllipsesOnOverflow(true);\n\n    return labelManager.getSmartText(name, width, oriSize.height, true);\n};\n","import { mergeRecursive } from 'muze-utils';\nimport { hasAxesConfigChanged } from './helper';\n\nexport const PROPS = {\n    availableSpace: {},\n    axisDimensions: {},\n    axisComponentDimensions: {},\n    config: {\n        sanitization: (context, value) => {\n            const oldConfig = Object.assign({}, context._config || {});\n            const mockedOldConfig = mergeRecursive({}, oldConfig);\n            value = mergeRecursive(mockedOldConfig, value);\n\n            value.axisNamePadding = Math.max(value.axisNamePadding, 0);\n            const shouldAxesScaleUpdate = hasAxesConfigChanged(\n                value, oldConfig, ['interpolator', 'exponent', 'base', 'orientation']\n            );\n            const tickFormatter = context.sanitizeTickFormatter(value);\n\n            if (shouldAxesScaleUpdate) {\n                context._scale = context.createScale(value);\n                context._axis = context.createAxis(value);\n            }\n\n            context._tickFormatter = ticks => tickFormatter(ticks);\n\n            context.resetRenderConfig(value);\n            return value;\n        }\n    },\n    renderConfig: {\n        sanitization: (context, value) => {\n            const oldConfig = Object.assign({}, context._renderConfig || {});\n            value = mergeRecursive(oldConfig, value);\n            return value;\n        }\n    },\n    logicalSpace: {},\n    mount: {\n    },\n    range: {\n        sanitization: (context, value) => {\n            context.scale().range(value);\n            context.logicalSpace(null);\n            return value;\n        }\n    },\n\n    smartTicks: {},\n    tickSize: {},\n    maxTickSpaces: {\n        sanitization: (context, value) => {\n            const oldConfig = Object.assign({}, context._maxTickSpaces || {});\n            value = mergeRecursive(oldConfig, value);\n            return value;\n        }\n    },\n    valueParser: {\n        defaultValue: val => val\n    }\n};\n","import {\n    mergeRecursive,\n    getSmartComputedStyle,\n    selectElement,\n    generateGetterSetters,\n    getUniqueId\n} from 'muze-utils';\nimport { createScale } from '../scale-creator';\nimport { axisOrientationMap, BOTTOM, TOP } from '../enums/axis-orientation';\nimport { defaultConfig } from './default-config';\nimport { renderAxis } from '../axis-renderer';\nimport { spaceSetter } from './space-setter';\nimport {\n    getAxisComponentDimensions,\n    computeAxisDimensions,\n    calculateContinousSpace,\n    setOffset,\n    getValidDomain,\n    getSmartAxisName\n} from './helper';\nimport { PROPS } from './props';\n\nexport default class SimpleAxis {\n\n    /**\n     * Creates an instance of SimpleAxis.\n     * @memberof SimpleAxis\n     */\n    constructor (config, dependencies) {\n        this._id = getUniqueId();\n\n        this._dependencies = dependencies;\n        this._mount = null;\n        this._range = [];\n        this._domain = [];\n        this._domainLock = false;\n        this._axisDimensions = {};\n        this._smartTicks = [];\n\n        const defCon = mergeRecursive({}, this.constructor.defaultConfig());\n        const simpleConfig = mergeRecursive(defCon, config);\n\n        const bodyElem = selectElement('body');\n        const classPrefix = simpleConfig.classPrefix;\n        this._tickLabelStyle = getSmartComputedStyle(bodyElem, `${classPrefix}-ticks`);\n        this._axisNameStyle = getSmartComputedStyle(bodyElem, `${classPrefix}-axis-name`);\n\n        dependencies.labelManager.setStyle(this._tickLabelStyle);\n        const dist = dependencies.labelManager.getOriSize('w');\n\n        this._minTickDistance = { width: dist.width * 3 / 4, height: dist.height / 2 };\n        this._minTickSpace = dependencies.labelManager.getOriSize('www');\n\n        generateGetterSetters(this, PROPS);\n        this.config(simpleConfig);\n\n        this._scale = this.createScale(this._config);\n        this._axis = this.createAxis(this._config);\n        this._animationDonePromises = [];\n    }\n\n    /**\n     * Returns the default configuration of simple axis\n     *  @return {Object} default configurations\n     */\n    static defaultConfig () {\n        return defaultConfig;\n    }\n\n    /**\n     * Sets a fixed baseline for the first ticks so that they can render effectively within\n     * the given area\n     *\n     * @param {*} tickText\n     * @param {*} config\n     * @param {*} labelManager\n     */\n    setFixedBaseline () {\n        return this;\n    }\n\n    /**\n     *\n     *\n     * @readonly\n     * @memberof SimpleAxis\n     */\n    scale (...params) {\n        if (params.length) {\n            this._scale = params[0];\n            return this;\n        }\n        return this._scale;\n    }\n\n    resetDomain () {\n        this._domain = [];\n        return this;\n    }\n\n    /**\n     *\n     *\n     * @readonly\n     * @memberof SimpleAxis\n     */\n    axis (...params) {\n        if (params.length) {\n            this._axis = params[0];\n            return this;\n        }\n        return this._axis;\n    }\n\n    /**\n     *\n     *\n     * @param {*} d\n     *\n     * @memberof SimpleAxis\n     */\n    domain (...domain) {\n        if (domain.length) {\n            const domainValue = getValidDomain(this, domain[0]);\n            this.scale().domain(domainValue);\n            this._domain = this.scale().domain();\n            this.setAxisComponentDimensions();\n            this.logicalSpace(null);\n            return this;\n        }\n        return this._domain;\n    }\n\n    setAxisComponentDimensions () {\n        this.axisComponentDimensions(getAxisComponentDimensions(this));\n    }\n\n    /**\n     *\n     *\n     *\n     * @memberof SimpleAxis\n     */\n    dependencies () {\n        return this._dependencies;\n    }\n\n    /**\n     *\n     *\n     *\n     * @memberof SimpleAxis\n     */\n    createScale (config) {\n        const {\n            base,\n            padding,\n            interpolator,\n            exponent\n        } = config;\n        const range = this.range();\n        const scale = createScale({\n            padding,\n            interpolator,\n            exponent,\n            base,\n            range,\n            type: this.constructor.type()\n        });\n\n        return scale;\n    }\n\n    sanitizeTickFormatter (value) {\n        const { tickFormat, numberFormat } = value;\n\n        if (tickFormat) {\n            return ticks => (val, i) => tickFormat(numberFormat(val), val, i, ticks);\n        }\n\n        return () => val => numberFormat(val);\n    }\n\n    resetRenderConfig (config) {\n        const {\n            labels,\n            show,\n            showInnerTicks,\n            showOuterTicks,\n            showAxisName,\n            xOffset,\n            yOffset,\n            tickValues,\n            smartAxisName\n        } = config;\n        this.renderConfig({\n            labels,\n            show,\n            showInnerTicks,\n            showOuterTicks,\n            showAxisName,\n            xOffset,\n            yOffset,\n            tickValues,\n            smartAxisName\n        });\n        return this;\n    }\n\n    resetLogicalSpace () {\n        this.logicalSpace(null);\n        this.range([]);\n\n        this.resetRenderConfig(this.config());\n    }\n\n    getFormattedText (text, index, axisTicks) {\n        const formatter = this._tickFormatter;\n\n        return formatter(axisTicks)(text, index);\n    }\n\n    /**\n     *\n     *\n     *\n     * @memberof SimpleAxis\n     */\n    createAxis (config) {\n        const { orientation } = config;\n        const axisClass = axisOrientationMap[orientation];\n\n        if (axisClass) {\n            const axis = axisClass(this.scale());\n            return axis;\n        }\n        return null;\n    }\n\n    setTickValues (tickValues) {\n        const renderConfig = this.renderConfig();\n        this.config({ ...renderConfig, tickValues });\n        this.tickValues = tickValues;\n        this.axis().tickValues(tickValues);\n    }\n\n    /**\n     * This method is used to set the space availiable to render\n     * the SimpleCell.\n     *\n     * @param {number} width The width of SimpleCell.\n     * @param {number} height The height of SimpleCell.\n     * @memberof AxisCell\n     */\n    setAvailableSpace (width = 0, height, padding, isOffset) {\n        let labelConfig = {};\n        const {\n           orientation\n       } = this.config();\n\n        this.availableSpace({ width, height, padding });\n        const type = this.constructor.type();\n\n        if (orientation === TOP || orientation === BOTTOM) {\n            labelConfig = spaceSetter(this, { isOffset })[type].x();\n        } else {\n            labelConfig = spaceSetter(this, { isOffset })[type].y();\n        }\n\n        // Set config\n        this.renderConfig({\n            labels: labelConfig\n        });\n        this.setTickConfig();\n        this.setSmartAxisName();\n        return this;\n    }\n\n    setSmartAxisName () {\n        const { orientation, name } = this.config();\n        const dimType = (orientation === TOP || orientation === BOTTOM) ? 'width' : 'height';\n        const widthDim = this.availableSpace()[dimType];\n        const labelManager = this.dependencies().labelManager;\n        labelManager.setStyle(this._axisNameStyle);\n        this.renderConfig({\n            smartAxisName: getSmartAxisName(name, widthDim, labelManager)\n        });\n        return this;\n    }\n\n    /**\n     *\n     *\n     * @memberof SimpleAxis\n     */\n    setTickConfig () {\n        return this;\n    }\n\n    getScaleValue (domainVal) {\n        if (domainVal === null || domainVal === undefined) {\n            return undefined;\n        }\n        return this.scale()(domainVal);\n    }\n\n    /**\n     *\n     *\n     *\n     * @memberof SimpleAxis\n     */\n    getTickSize () {\n        return this.axis().tickSize();\n    }\n\n    /**\n     * Gets the space occupied by the parts of an axis\n     *\n     * @return {Object} object with details about sizes of the axis.\n     * @memberof SimpleAxis\n     */\n    getAxisDimensions (...params) {\n        this.axisDimensions(computeAxisDimensions(this, ...params));\n        return this.axisDimensions();\n    }\n\n    /**\n     * Gets the space occupied by the axis\n     *\n     * @return {Object} object with details about size of the axis.\n     * @memberof SimpleAxis\n     */\n    getLogicalSpace () {\n        if (!this.logicalSpace()) {\n            this.logicalSpace(calculateContinousSpace(this));\n        }\n        setOffset(this);\n\n        return this.logicalSpace();\n    }\n\n    /**\n     * Returns the value from the domain when given a value from the range.\n     * @param {number} value Value from the range.\n     * @return {number} Value\n     */\n    invert (value) {\n        return this.scale().invert(value);\n    }\n\n    /**\n     * Gets the nearest range value from the given range values.\n     * @param {number} v1 Start range value\n     * @param {number} v2 End range value\n     *\n     * @return {Array} range values\n     */\n    getNearestRange (v1, v2) {\n        return [v1, v2];\n    }\n\n    invertExtent (v1, v2) {\n        return [this.invert(v1), this.invert(v2)];\n    }\n\n    getMinTickDifference () {\n        return this.domain();\n    }\n\n    getFormattedTickValues (tickValues) {\n        return tickValues;\n    }\n\n    /**\n     * This method returns the width in pixels for one\n     * unit along the axis. It is only applicable to band scale\n     * and returns undefined for other scale type.\n     *\n     * @return {number} the width of one band along band scale axis\n     * @memberof SimpleAxis\n     */\n    getUnitWidth () {\n        return 0;\n    }\n\n    /**\n     * This method returns an object that can be used to\n     * reconstruct this instance.\n     *\n     * @return {Object} the serializable props of axis\n     * @memberof SimpleAxis\n     */\n    serialize () {\n        return {\n            name: this.name,\n            type: this.type,\n            range: this.range(),\n            config: this.config()\n        };\n    }\n\n    /**\n     * Returns the id of the axis.\n     * @return {string} Unique identifier of the axis.\n     */\n    get id () {\n        return this._id;\n    }\n\n    /**\n     * This method is used to render the axis inside\n     * the supplied svg container.\n     *\n     * @param {SVGElement} svg the svg element in which to render the path\n     * @memberof SimpleAxis\n     */\n    /* istanbul ignore next */render () {\n        if (this.mount()) {\n            this.setTickConfig();\n            renderAxis(this);\n        }\n        return this;\n    }\n\n    /**\n     *\n     *\n     *\n     * @memberof SimpleAxis\n     */\n    remove () {\n        selectElement(this.mount()).remove();\n        return this;\n    }\n\n    /**\n     *\n     *\n     * @memberof SimpleAxis\n     */\n    unsubscribe () {\n        return this;\n    }\n\n    /**\n     *\n     *\n     *\n     * @memberof SimpleAxis\n     */\n    isReverse () {\n        const range = this.range();\n        return range[0] > range[1];\n    }\n\n    /**\n     *\n     *\n     *\n     * @memberof SimpleAxis\n     */\n    getPixelToValueRatio () {\n        const scale = this.scale();\n        const range = scale.range();\n        const domain = scale.domain();\n\n        return Math.abs(range[1] - range[0]) / (domain[1] - domain[0]);\n    }\n\n     /**\n     * Notifies when all animations/transitions of the axis are completed.\n     *\n     * @public\n     * @return {Promise} Returns a promise to notify the animation completion.\n     */\n    animationDone () {\n        return Promise.all(this._animationDonePromises);\n    }\n\n    registerAnimationDoneHook () {\n        let resolveFn;\n        const promise = new Promise((resolve) => {\n            resolveFn = resolve;\n        });\n        this._animationDonePromises.push(promise);\n\n        return () => {\n            resolveFn();\n        };\n    }\n}\n\n","import { sanitizeDomainWhenEqual } from 'muze-utils';\nimport { scaleMap } from '../../scale-creator';\n\nexport default class LinearInterpolator {\n\n    createScale (config) {\n        const {\n            range\n        } = config;\n        const scaleFactory = scaleMap.linear;\n        this._scale = scaleFactory().range(range);\n        return this._scale;\n    }\n\n    getScaleValue (domainVal) {\n        return this._scale(domainVal) + 0.5;\n    }\n\n    sanitizeDomain (domain) {\n        if (domain.length) {\n            domain = sanitizeDomainWhenEqual(domain);\n        }\n        return domain;\n    }\n}\n","import { scaleMap } from '../../scale-creator';\n\nexport default class LogInterpolator {\n\n    createScale (config) {\n        const {\n            range,\n            base\n        } = config;\n        const scaleFactory = scaleMap.log;\n        this._scale = scaleFactory().range(range).base(base);\n        return this._scale;\n    }\n\n    getScaleValue (domainVal) {\n        const scale = this._scale;\n        if (domainVal <= 0) {\n            return scale(scale.domain()[0]);\n        }\n\n        return scale(domainVal) + 0.5;\n    }\n\n    sanitizeDomain (domain) {\n        if (domain[0] <= 0) {\n            domain[0] = Math.max(1, domain[0]);\n        }\n        if (domain[1] <= 0) {\n            domain[1] = Math.max(1, domain[1]);\n        }\n        return domain;\n    }\n}\n","import { scaleMap } from '../../scale-creator';\n\nexport default class PowInterpolator {\n\n    createScale (config) {\n        const {\n            range,\n            exponent\n        } = config;\n        const scaleFactory = scaleMap.pow;\n        this._scale = scaleFactory().range(range).exponent(exponent);\n        return this._scale;\n    }\n\n    getScaleValue (domainVal) {\n        return this._scale(domainVal) + 0.5;\n    }\n\n    sanitizeDomain (domain) {\n        return domain;\n    }\n}\n","import { getSmallestDiff } from 'muze-utils';\nimport SimpleAxis from './simple-axis';\nimport { BOTTOM, TOP, LEFT, RIGHT } from '../enums/axis-orientation';\nimport { LINEAR, LOG, POW } from '../enums/scale-type';\nimport { LogInterpolator, PowInterpolator, LinearInterpolator } from './interpolators';\nimport {\n    getNumberOfTicks,\n    getValidDomain,\n    setContinousAxisDomain\n} from './helper';\n\nexport const interpolatorMap = {\n    [LOG]: LogInterpolator,\n    [POW]: PowInterpolator,\n    [LINEAR]: LinearInterpolator\n};\n\nexport default class ContinousAxis extends SimpleAxis {\n    constructor (config, dependencies) {\n        config.tickFormat = config.tickFormat || (val => val);\n        super(config, dependencies);\n    }\n    /**\n     *\n     *\n     *\n     * @memberof SimpleAxis\n     */\n    createScale (config) {\n        const {\n            base,\n            padding,\n            interpolator,\n            exponent\n        } = config;\n        const range = this.range();\n        const InterpolatorCls = interpolatorMap[interpolator];\n\n        this._interpolator = new InterpolatorCls();\n        let scale = this._interpolator.createScale({\n            padding,\n            exponent,\n            base,\n            range\n        });\n\n        scale = scale.nice();\n        return scale;\n    }\n\n    /**\n     *\n     *\n     * @static\n     *\n     * @memberof ContinousAxis\n     */\n    static type () {\n        return LINEAR;\n    }\n\n    getScaleValue (domainVal) {\n        if (domainVal === null || domainVal === undefined) {\n            return undefined;\n        }\n        return this._interpolator.getScaleValue(domainVal);\n    }\n /**\n     *\n     *\n     *\n     * @memberof SimpleAxis\n     */\n    getTickSize () {\n        const {\n            showInnerTicks,\n            showOuterTicks\n        } = this.renderConfig();\n        const axis = this.axis();\n        axis.tickSizeInner(showInnerTicks === false ? 0 : 6);\n        axis.tickSizeOuter(showOuterTicks === false ? 0 : 6);\n\n        return axis.tickSize();\n    }\n\n    /**\n     *\n     *\n     * @param {*} d\n     *\n     * @memberof SimpleAxis\n     */\n    domain (...domain) {\n        if (domain.length) {\n            const domainVal = this._interpolator.sanitizeDomain(getValidDomain(this, domain[0]));\n            setContinousAxisDomain(this, domainVal);\n            this.setAxisComponentDimensions();\n            this.logicalSpace(null);\n            return this;\n        }\n        return this._domain;\n    }\n\n    /**\n     * This method is used to set the space availiable to render\n     * the SimpleCell.\n     *\n     * @param {number} width The width of SimpleCell.\n     * @param {number} height The height of SimpleCell.\n     * @memberof AxisCell\n     */\n    setAvailableSpace (...params) {\n        super.setAvailableSpace(...params);\n        this.getTickSize();\n        return this;\n    }\n\n    /**\n     *\n     *\n     * @param {*} tickValues\n     *\n     * @memberof SimpleAxis\n     */\n    setTickConfig () {\n        const {\n            tickValues,\n            showInnerTicks\n        } = this.renderConfig();\n        const axis = this.axis();\n\n        if (!showInnerTicks) {\n            axis.tickValues([]);\n            return this;\n        }\n\n        if (tickValues) {\n            tickValues instanceof Array && this.axis().tickValues(tickValues);\n        }\n        const newTickValues = this.getTickValues();\n\n        axis.tickValues(newTickValues);\n        const smartLabel = this.dependencies().labelManager;\n        smartLabel.setStyle(this._tickLabelStyle);\n        const formatter = this._tickFormatter(newTickValues);\n        const smartTicks = newTickValues.map((val, i) => {\n            const text = formatter(val, i);\n            const tickSpace = smartLabel.getOriSize(text);\n\n            tickSpace.text = text;\n            return tickSpace;\n        });\n\n        this.smartTicks(smartTicks);\n        return this;\n    }\n\n    /**\n     *\n     *\n     *\n     * @memberof SimpleAxis\n     */\n    getTickValues () {\n        let labelDim = 0;\n        const {\n            orientation\n\n        } = this.config();\n        const {\n            tickValues\n        } = this.renderConfig();\n        const range = this.range();\n        const axis = this.axis();\n\n        const availableSpace = Math.abs(range[0] - range[1]);\n\n        const labelProps = this.axisComponentDimensions().largestTickDimensions;\n\n        if (tickValues) {\n            return tickValues;\n        }\n        labelDim = labelProps[orientation === BOTTOM || orientation === TOP ? 'width' : 'height'];\n\n        return getNumberOfTicks(availableSpace, labelDim, axis, this);\n    }\n\n    getMinTickDifference () {\n        return getSmallestDiff(this.renderConfig().tickValues);\n    }\n\n    /**\n     * Sets a fixed baseline for the first ticks so that they can render effectively within\n     * the given area\n     *\n     * @param {*} tickText\n     * @param {*} config\n     * @param {*} labelManager\n     */\n    setFixedBaseline (tickText) {\n        const {\n            orientation\n        } = this.config();\n        const {\n            labels\n        } = this.renderConfig();\n\n        const {\n            rotation\n        } = labels;\n        const axis = this.axis();\n        const ticks = axis.tickValues();\n        const smartTicks = this.smartTicks();\n\n        if (smartTicks && smartTicks.length) {\n            const { width, height } = this.smartTicks()[0];\n\n            axis.tickTransform((d) => {\n                if (d === ticks[0]) {\n                    if ((orientation === LEFT || orientation === RIGHT)) {\n                        return `translate(0, -${(height) / 3}px)`;\n                    }\n\n                    if ((orientation === TOP || orientation === BOTTOM) && !rotation) {\n                        return `translate(${width / 2}px,  ${0}px)`;\n                    }\n                } return '';\n            });\n        }\n        return tickText;\n    }\n\n}\n","import SimpleAxis from './simple-axis';\nimport { BAND } from '../enums/scale-type';\nimport { calculateBandSpace, setOffset, getRotatedSpaces } from './helper';\n\nexport default class BandAxis extends SimpleAxis {\n    /**\n     *\n     *\n     * @static\n     *\n     * @memberof BandAxis\n     */\n    static type () {\n        return BAND;\n    }\n\n    /**\n     *\n     *\n     *\n     * @memberof BandAxis\n     */\n    setTickConfig () {\n        let smartTicks = '';\n        let smartlabel;\n        const domain = this.domain();\n        const { labelManager } = this._dependencies;\n        const { padding } = this.config();\n        const { labels, tickValues } = this.renderConfig();\n        const { height: availHeight, width: availWidth, noWrap } = this.maxTickSpaces();\n        const { width, height } = getRotatedSpaces(labels.rotation, availWidth, availHeight);\n\n        tickValues && this.axis().tickValues(tickValues);\n        smartTicks = tickValues || domain;\n\n        // set the style on the shared label manager instance\n        labelManager.setStyle(this._tickLabelStyle);\n\n        // Update padding between plots\n        if (typeof padding === 'number') {\n            const paddingNormalized = Math.min(1, Math.max(0, padding));\n            this.scale().padding(paddingNormalized);\n        }\n\n        if (domain && domain.length) {\n            const values = tickValues || domain;\n            const tickFormatter = this._tickFormatter(values);\n            smartTicks = values.map((d, i) => {\n                labelManager.useEllipsesOnOverflow(true);\n\n                smartlabel = labelManager.getSmartText(tickFormatter(d, i), width, height, noWrap);\n                return labelManager.constructor.textToLines(smartlabel);\n            });\n        }\n        this.smartTicks(smartTicks);\n        return this;\n    }\n\n    /**\n     * Gets the space occupied by the axis\n     *\n     * @return {Object} object with details about size of the axis.\n     * @memberof SimpleAxis\n     */\n    getLogicalSpace () {\n        if (!this.logicalSpace()) {\n            this.logicalSpace(calculateBandSpace(this));\n        }\n        setOffset(this);\n\n        return this.logicalSpace();\n    }\n\n    /**\n     *\n     *\n     * @memberof BandAxis\n     */\n    getTickValues () {\n        return this.axis().scale().domain();\n    }\n\n    formatTickValue (val) {\n        return this.valueParser()(val);\n    }\n\n    sanitizeTickFormatter (value) {\n        const { tickFormat } = value;\n\n        if (tickFormat) {\n            return ticks => (val, i) => tickFormat(this.formatTickValue(val), val, i, ticks);\n        }\n        return () => val => this.formatTickValue(val);\n    }\n\n    /**\n     *\n     *\n     *\n     * @memberof BandAxis\n     */\n    getUnitWidth () {\n        return this.scale().bandwidth();\n    }\n\n    /**\n     *\n     *\n     *\n     * @memberof SimpleAxis\n     */\n    getTickSize () {\n        const {\n            showInnerTicks,\n            showOuterTicks\n        } = this.renderConfig();\n        const axis = this.axis();\n\n        axis.tickSizeInner(showInnerTicks ? 6 : 0);\n        axis.tickSizeOuter(showOuterTicks ? 6 : 0);\n        return axis.tickSize();\n    }\n\n    invertExtent (v1, v2) {\n        return this.scale().invertExtent(v1, v2);\n    }\n\n    /**\n     * Gets the nearest range value from the given range values.\n     * @param {number} v1 Start range value\n     * @param {number} v2 End range value\n     * @return {Array} range values\n     */\n    getNearestRange (v1, v2) {\n        const scale = this.scale();\n        const range = scale.range();\n        const reverse = range[0] > range[1];\n\n        const extent = this.invertExtent(v1, v2);\n        const p1 = scale(reverse ? extent[extent.length - 1] : extent[0]);\n        const p2 = scale(reverse ? extent[0] : extent[extent.length - 1]) + scale.bandwidth();\n        return [p1, p2];\n    }\n}\n","import { getSmallestDiff } from 'muze-utils';\nimport SimpleAxis from './simple-axis';\nimport { TIME } from '../enums/scale-type';\nimport { calculateBandSpace, getRotatedSpaces, getValidDomain, setContinousAxisDomain, setOffset,\n    resetTickInterval } from './helper';\nimport { applyTickSkipping } from './space-setter';\n\n/**\n *\n *\n * @export\n * @class TimeAxis\n * @extends {SimpleAxis}\n */\nexport default class TimeAxis extends SimpleAxis {\n\n    constructor (...params) {\n        super(...params);\n        this._minDiff = Infinity;\n    }\n\n    /**\n     *\n     *\n     * @param {*} range\n     *\n     * @memberof TimeAxis\n     */\n    createScale (range) {\n        let scale = super.createScale(range);\n\n        scale = scale.nice();\n        return scale;\n    }\n\n    /**\n     *\n     *\n     * @static\n     *\n     * @memberof TimeAxis\n     */\n    static type () {\n        return TIME;\n    }\n\n    formatTickValue (val) {\n        return this.scale().tickFormat()(val);\n    }\n\n    sanitizeTickFormatter (value) {\n        const { tickFormat } = value;\n\n        if (tickFormat) {\n            return (ticks) => {\n                const rawTicks = ticks.map(t => t.getTime());\n                return (val, i) => tickFormat(this.formatTickValue(val), val.getTime(), i, rawTicks);\n            };\n        }\n        return () => val => this.formatTickValue(val);\n    }\n\n     /**\n     *\n     *\n     *\n     * @memberof SimpleAxis\n     */\n    getTickSize () {\n        const {\n            showInnerTicks,\n            showOuterTicks\n        } = this.renderConfig();\n        const axis = this.axis();\n        axis.tickSizeInner(showInnerTicks === false ? 0 : 6);\n        axis.tickSizeOuter(showOuterTicks === false ? 0 : 6);\n        return super.getTickSize();\n    }\n\n    /**\n     *\n     *\n     *\n     * @memberof TimeAxis\n     */\n    getTickValues () {\n        return this.renderConfig().tickValues || this.scale().ticks();\n    }\n\n    /**\n     *\n     *\n     * @param {*} diff\n     *\n     * @memberof TimeAxis\n     */\n    minDiff (diff) {\n        this._minDiff = Math.min(this._minDiff, diff);\n        return this;\n    }\n\n    applyTickSkipping () {\n        applyTickSkipping(this);\n    }\n\n    /**\n     *\n     *\n     * @param {*} d\n     *\n     * @memberof SimpleAxis\n     */\n    domain (...domain) {\n        if (domain.length) {\n            const domainValue = getValidDomain(this, domain[0]);\n            setContinousAxisDomain(this, domainValue);\n            this.setAxisComponentDimensions();\n            this.logicalSpace(null);\n\n            resetTickInterval(this, domainValue);\n            return this;\n        }\n        return this._domain;\n    }\n\n    /**\n     * Gets the space occupied by the axis\n     *\n     * @return {Object} object with details about size of the axis.\n     * @memberof SimpleAxis\n     */\n    getLogicalSpace () {\n        if (!this.logicalSpace()) {\n            this.logicalSpace(calculateBandSpace(this));\n        }\n        setOffset(this);\n\n        return this.logicalSpace();\n    }\n\n    getMinTickDifference () {\n        return getSmallestDiff(this.config().tickValues);\n    }\n\n    /**\n     * This method is used to set the space availiable to render\n     * the SimpleCell.\n     *\n     * @param {number} width The width of SimpleCell.\n     * @param {number} height The height of SimpleCell.\n     * @memberof AxisCell\n     */\n    setAvailableSpace (...params) {\n        super.setAvailableSpace(...params);\n        this.getTickSize();\n        return this;\n    }\n\n    /**\n     *\n     *\n     * @returns\n     * @memberof BandAxis\n     */\n    setTickConfig () {\n        let smartTicks;\n        let smartlabel;\n\n        const { labels, tickValues } = this.renderConfig();\n        const { height: availHeight, width: availWidth, noWrap } = this.maxTickSpaces();\n        const { labelManager } = this._dependencies;\n        const domain = this.getTickValues();\n\n        tickValues && this.axis().tickValues(tickValues);\n\n        const { width, height } = getRotatedSpaces(labels.rotation, availWidth, availHeight);\n\n        smartTicks = tickValues || domain;\n\n        // set the style on the shared label manager instance\n        labelManager.setStyle(this._tickLabelStyle);\n\n        if (domain && domain.length) {\n            const values = tickValues || domain;\n            const tickFormatter = this._tickFormatter(values);\n            smartTicks = values.map((d, i) => {\n                labelManager.useEllipsesOnOverflow(true);\n\n                smartlabel = labelManager.getSmartText(tickFormatter(d, i), width, height, noWrap);\n                return labelManager.constructor.textToLines(smartlabel);\n            });\n        }\n\n        this.smartTicks(smartTicks);\n        return this;\n    }\n}\n","export const x11Colors = {\n    Pink: { hex: 'ffc0cb', rgb: '255,192,203' },\n    LightPink: { hex: 'ffb6c1', rgb: '255,182,193' },\n    HotPink: { hex: 'ff69b4', rgb: '255,105,180' },\n    DeepPink: { hex: 'ff1493', rgb: '255,20,147' },\n    PaleVioletRed: { hex: 'db7093', rgb: '219,112,147' },\n    MediumVioletRed: { hex: 'c71585', rgb: '199,21,133' },\n    LightSalmon: { hex: 'ffa07a', rgb: '255,160,122' },\n    Salmon: { hex: 'fa8072', rgb: '250,128,114' },\n    DarkSalmon: { hex: 'e9967a', rgb: '233,150,122' },\n    LightCoral: { hex: 'f08080', rgb: '240,128,128' },\n    IndianRed: { hex: 'cd5c5c', rgb: '205,92,92' },\n    Crimson: { hex: 'dc143c', rgb: '220,20,60' },\n    FireBrick: { hex: 'b22222', rgb: '178,34,34' },\n    DarkRed: { hex: '8b0000', rgb: '139,0,0' },\n    Red: { hex: 'ff0000', rgb: '255,0,0' },\n    OrangeRed: { hex: 'ff4500', rgb: '255,69,0' },\n    Tomato: { hex: 'ff6347', rgb: '255,99,71' },\n    Coral: { hex: 'ff7f50', rgb: '255,127,80' },\n    DarkOrange: { hex: 'ff8c00', rgb: '255,140,0' },\n    Orange: { hex: 'ffa500', rgb: '255,165,0' },\n    Gold: { hex: 'ffd700', rgb: '255,215,0' },\n    Yellow: { hex: 'ffff00', rgb: '255,255,0' },\n    LightYellow: { hex: 'ffffe0', rgb: '255,255,224' },\n    LemonChiffon: { hex: 'fffacd', rgb: '255,250,205' },\n    LightGoldenrodYellow: { hex: 'fafad2', rgb: '250,250,210' },\n    PapayaWhip: { hex: 'ffefd5', rgb: '255,239,213' },\n    Moccasin: { hex: 'ffe4b5', rgb: '255,228,181' },\n    PeachPuff: { hex: 'ffdab9', rgb: '255,218,185' },\n    PaleGoldenrod: { hex: 'eee8aa', rgb: '238,232,170' },\n    Khaki: { hex: 'f0e68c', rgb: '240,230,140' },\n    DarkKhaki: { hex: 'bdb76b', rgb: '189,183,107' },\n    Cornsilk: { hex: 'fff8dc', rgb: '255,248,220' },\n    BlanchedAlmond: { hex: 'ffebcd', rgb: '255,235,205' },\n    Bisque: { hex: 'ffe4c4', rgb: '255,228,196' },\n    NavajoWhite: { hex: 'ffdead', rgb: '255,222,173' },\n    Wheat: { hex: 'f5deb3', rgb: '245,222,179' },\n    BurlyWood: { hex: 'deb887', rgb: '222,184,135' },\n    Tan: { hex: 'd2b48c', rgb: '210,180,140' },\n    RosyBrown: { hex: 'bc8f8f', rgb: '188,143,143' },\n    SandyBrown: { hex: 'f4a460', rgb: '244,164,96' },\n    Goldenrod: { hex: 'daa520', rgb: '218,165,32' },\n    DarkGoldenrod: { hex: 'b8860b', rgb: '184,134,11' },\n    Peru: { hex: 'cd853f', rgb: '205,133,63' },\n    Chocolate: { hex: 'd2691e', rgb: '210,105,30' },\n    SaddleBrown: { hex: '8b4513', rgb: '139,69,19' },\n    Sienna: { hex: 'a0522d', rgb: '160,82,45' },\n    Brown: { hex: 'a52a2a', rgb: '165,42,42' },\n    Maroon: { hex: '800000', rgb: '128,0,0' },\n    DarkOliveGreen: { hex: '556b2f', rgb: '85,107,47' },\n    Olive: { hex: '808000', rgb: '128,128,0' },\n    OliveDrab: { hex: '6b8e23', rgb: '107,142,35' },\n    YellowGreen: { hex: '9acd32', rgb: '154,205,50' },\n    LimeGreen: { hex: '32cd32', rgb: '50,205,50' },\n    Lime: { hex: '00ff00', rgb: '0,255,0' },\n    LawnGreen: { hex: '7cfc00', rgb: '124,252,0' },\n    Chartreuse: { hex: '7fff00', rgb: '127,255,0' },\n    GreenYellow: { hex: 'adff2f', rgb: '173,255,47' },\n    SpringGreen: { hex: '00ff7f', rgb: '0,255,127' },\n    MediumSpringGreen: { hex: '00fa9a', rgb: '0,250,154' },\n    LightGreen: { hex: '90ee90', rgb: '144,238,144' },\n    PaleGreen: { hex: '98fb98', rgb: '152,251,152' },\n    DarkSeaGreen: { hex: '8fbc8f', rgb: '143,188,143' },\n    MediumSeaGreen: { hex: '3cb371', rgb: '60,179,113' },\n    SeaGreen: { hex: '2e8b57', rgb: '46,139,87' },\n    ForestGreen: { hex: '228b22', rgb: '34,139,34' },\n    Green: { hex: '008000', rgb: '0,128,0' },\n    DarkGreen: { hex: '006400', rgb: '0,100,0' },\n    MediumAquamarine: { hex: '66cdaa', rgb: '102,205,170' },\n    Aqua: { hex: '00ffff', rgb: '0,255,255' },\n    Cyan: { hex: '00ffff', rgb: '0,255,255' },\n    LightCyan: { hex: 'e0ffff', rgb: '224,255,255' },\n    PaleTurquoise: { hex: 'afeeee', rgb: '175,238,238' },\n    Aquamarine: { hex: '7fffd4', rgb: '127,255,212' },\n    Turquoise: { hex: '40e0d0', rgb: '64,224,208' },\n    MediumTurquoise: { hex: '48d1cc', rgb: '72,209,204' },\n    DarkTurquoise: { hex: '00ced1', rgb: '0,206,209' },\n    LightSeaGreen: { hex: '20b2aa', rgb: '32,178,170' },\n    CadetBlue: { hex: '5f9ea0', rgb: '95,158,160' },\n    DarkCyan: { hex: '008b8b', rgb: '0,139,139' },\n    Teal: { hex: '008080', rgb: '0,128,128' },\n    LightSteelBlue: { hex: 'b0c4de', rgb: '176,196,222' },\n    PowderBlue: { hex: 'b0e0e6', rgb: '176,224,230' },\n    LightBlue: { hex: 'add8e6', rgb: '173,216,230' },\n    SkyBlue: { hex: '87ceeb', rgb: '135,206,235' },\n    LightSkyBlue: { hex: '87cefa', rgb: '135,206,250' },\n    DeepSkyBlue: { hex: '00bfff', rgb: '0,191,255' },\n    DodgerBlue: { hex: '1e90ff', rgb: '30,144,255' },\n    CornflowerBlue: { hex: '6495ed', rgb: '100,149,237' },\n    SteelBlue: { hex: '4682b4', rgb: '70,130,180' },\n    RoyalBlue: { hex: '4169e1', rgb: '65,105,225' },\n    Blue: { hex: '0000ff', rgb: '0,0,255' },\n    MediumBlue: { hex: '0000cd', rgb: '0,0,205' },\n    DarkBlue: { hex: '00008b', rgb: '0,0,139' },\n    Navy: { hex: '000080', rgb: '0,0,128' },\n    MidnightBlue: { hex: '191970', rgb: '25,25,112' },\n    Lavender: { hex: 'e6e6fa', rgb: '230,230,250' },\n    Thistle: { hex: 'd8bfd8', rgb: '216,191,216' },\n    Plum: { hex: 'dda0dd', rgb: '221,160,221' },\n    Violet: { hex: 'ee82ee', rgb: '238,130,238' },\n    Orchid: { hex: 'da70d6', rgb: '218,112,214' },\n    Fuchsia: { hex: 'ff00ff', rgb: '255,0,255' },\n    Magenta: { hex: 'ff00ff', rgb: '255,0,255' },\n    MediumOrchid: { hex: 'ba55d3', rgb: '186,85,211' },\n    MediumPurple: { hex: '9370db', rgb: '147,112,219' },\n    BlueViolet: { hex: '8a2be2', rgb: '138,43,226' },\n    DarkViolet: { hex: '9400d3', rgb: '148,0,211' },\n    DarkOrchid: { hex: '9932cc', rgb: '153,50,204' },\n    DarkMagenta: { hex: '8b008b', rgb: '139,0,139' },\n    Purple: { hex: '800080', rgb: '128,0,128' },\n    Indigo: { hex: '4b0082', rgb: '75,0,130' },\n    DarkSlateBlue: { hex: '483d8b', rgb: '72,61,139' },\n    SlateBlue: { hex: '6a5acd', rgb: '106,90,205' },\n    MediumSlateBlue: { hex: '7b68ee', rgb: '123,104,238' },\n    White: { hex: 'ffffff', rgb: '255,255,255' },\n    Snow: { hex: 'fffafa', rgb: '255,250,250' },\n    Honeydew: { hex: 'f0fff0', rgb: '240,255,240' },\n    MintCream: { hex: 'f5fffa', rgb: '245,255,250' },\n    Azure: { hex: 'f0ffff', rgb: '240,255,255' },\n    AliceBlue: { hex: 'f0f8ff', rgb: '240,248,255' },\n    GhostWhite: { hex: 'f8f8ff', rgb: '248,248,255' },\n    WhiteSmoke: { hex: 'f5f5f5', rgb: '245,245,245' },\n    Seashell: { hex: 'fff5ee', rgb: '255,245,238' },\n    Beige: { hex: 'f5f5dc', rgb: '245,245,220' },\n    OldLace: { hex: 'fdf5e6', rgb: '253,245,230' },\n    FloralWhite: { hex: 'fffaf0', rgb: '255,250,240' },\n    Ivory: { hex: 'fffff0', rgb: '255,255,240' },\n    AntiqueWhite: { hex: 'faebd7', rgb: '250,235,215' },\n    Linen: { hex: 'faf0e6', rgb: '250,240,230' },\n    LavenderBlush: { hex: 'fff0f5', rgb: '255,240,245' },\n    MistyRose: { hex: 'ffe4e1', rgb: '255,228,225' },\n    Gainsboro: { hex: 'dcdcdc', rgb: '220,220,220' },\n    LightGray: { hex: 'd3d3d3', rgb: '211,211,211' },\n    Silver: { hex: 'c0c0c0', rgb: '192,192,192' },\n    DarkGrey: { hex: 'a9a9a9', rgb: '169,169,169' },\n    Grey: { hex: '808080', rgb: '128,128,128' },\n    DimGrey: { hex: '696969', rgb: '105,105,105' },\n    LightSlateGrey: { hex: '778899', rgb: '119,136,153' },\n    SlateGrey: { hex: '708090', rgb: '112,128,144' },\n    DarkSlateGrey: { hex: '2f4f4f', rgb: '47,79,79' },\n    Black: { hex: '000000', rgb: '0,0,0' }\n};\n","import {\n    LINEAR\n} from '../enums/constants';\n/**\n * Set of default colors\n */\nexport const palette = [\n    '#086bb6',\n    '#f37d45',\n    '#f5ce02',\n    '#67bda0',\n    '#c54e4e',\n    '#ae70af'\n];\n\nexport const DEFAULT_GRADIENT_COLOR = '#eaeaea';\n\nexport const DEFAULT_CONFIG = {\n    range: palette,\n    value: palette[0],\n    step: false,\n    stops: 5,\n    type: LINEAR\n};\n","import { mergeRecursive, detectColor, hexToHsv, rgbToHsv } from 'muze-utils';\nimport { x11Colors } from './color-maps';\nimport { palette, DEFAULT_GRADIENT_COLOR } from './defaults';\nimport { LINEAR, RGB, HEX, HSL, HSLA } from '../enums/constants';\n\nexport const getHslString = hslArr => `hsla(${hslArr[0] * 360},${hslArr[1] * 100}%,${hslArr[2] * 100}%,\\\n${hslArr[3] || 1})`;\n\nexport const convertToXllString = baseString => (baseString.split(' ') || [])\n                .reduce((x, e) => `${x}${e.charAt(0).toUpperCase()}${e.slice(1)}`, '');\n\nexport const getActualHslColor = (e, paletteColor) => {\n    let color = '';\n    if (typeof e === 'string') {\n        e = e.replace(/ /g, '');\n        e = e.toLowerCase();\n        if (detectColor(e) === HSL || detectColor(e) === HSLA) {\n            color = e.match(/(\\d+(\\.\\d+)?)/g);\n            color = [color[0] / 360, color[1] / 100, color[2] / 100, color[3] || 1];\n        } else if (detectColor(e) === HEX) {\n            color = hexToHsv(e);\n        } else if (detectColor(e) === RGB) {\n            const col = e.substring(e.indexOf('(') + 1, e.lastIndexOf(')')).split(/,\\s*/);\n            color = rgbToHsv(...col);\n        } else if (x11Colors[convertToXllString(e)]) {\n            color = rgbToHsv(...x11Colors[convertToXllString(e)].rgb.split(','));\n        }\n    } else if (!(e instanceof Array)) {\n        color = rgbToHsv(paletteColor);\n    } else {\n        color = e;\n    }\n    return color;\n};\n\nexport const PROPS = {\n    config: {\n        sanitization: (context, config) => {\n            const defCon = mergeRecursive({}, context.constructor.defaultConfig());\n            if (config.type === LINEAR) {\n                config.range = config.range || [defCon.range[0]];\n                config.range = config.range.length > 1 ? config.range : [DEFAULT_GRADIENT_COLOR, ...config.range];\n            }\n            const oldConfig = mergeRecursive(defCon, context.config());\n            const newConfig = mergeRecursive(oldConfig, config);\n\n            if (newConfig.range instanceof Array) {\n                newConfig.range = newConfig.range.map((e, i) => getActualHslColor(e, palette[i]));\n                newConfig.stops = config.stops || newConfig.range.length;\n            }\n            newConfig.value = getActualHslColor(newConfig.value, newConfig.value);\n            return newConfig;\n        }\n    },\n    domain: {},\n    scale: {},\n    uniqueValues: {}\n};\n","import { InvalidAwareTypes, getObjProp } from 'muze-utils';\n\nexport const treatNullMeasures = (domainVal, scaledVal, minDomainScaledVal) => {\n    if (domainVal instanceof InvalidAwareTypes) {\n        return minDomainScaledVal;\n    }\n    return scaledVal;\n};\n\nexport const resolveAxisConfig = (propVal, defaultVal, context) => {\n    const constructor = getObjProp(propVal, 'constructor');\n    switch (constructor) {\n    case Function:\n        return propVal(defaultVal, context);\n    case Array:\n        return propVal;\n    default:\n        return defaultVal;\n    }\n};\n","import { numberInterpolator, piecewiseInterpolator, hslInterpolator, sanitizeDomainWhenEqual } from 'muze-utils';\nimport { CONTINOUS, DISCRETE } from '../enums/constants';\nimport { LINEAR, SEQUENTIAL, ORDINAL, QUANTILE } from '../enums/scale-type';\nimport { getHslString } from './props';\nimport { treatNullMeasures } from '../helper';\n\nconst getStops = (domain, stops) => {\n    let newStops = [];\n\n    if (stops instanceof Array) {\n        newStops = stops.slice().sort();\n        newStops = [...new Set([domain[0], ...stops, domain[1]])].sort();\n    } else {\n        const interpolator = numberInterpolator()(...domain);\n        for (let i = 0; i <= stops; i++) {\n            newStops[i] = interpolator(i / stops);\n        }\n    }\n\n    if (newStops[0] < domain[0]) {\n        newStops.shift();\n    }\n    return { domain, newStops };\n};\n\nconst rangeStops = (newStopsLength, range) => {\n    let newRange = [];\n    const maxRangeLength = Math.min(range.length, 18);\n\n    if (newStopsLength > maxRangeLength) {\n        const interpolator = piecewiseInterpolator()(hslInterpolator(), range.map(e => getHslString(e)));\n        for (let i = 0; i < newStopsLength; i++) {\n            newRange[i] = interpolator(i / (newStopsLength - 1));\n        }\n    } else {\n        newRange = range.slice(0, newStopsLength);\n    }\n    return { newRange };\n};\n\n/**\n*\n*\n* @param {*} domain\n*\n*/\nconst indexedDomain = (domain) => {\n    const uniqueVals = domain;\n    const retDomain = domain.map((d, i) => (i) / (domain.length - 1));\n    return { domain: retDomain, uniqueVals, scaleDomain: [0, 1] };\n};\n\n/**\n *\n *\n * @param {*} domain\n *\n */\nconst indexedDomainMeasure = (domain, stops, range) => {\n    const uniqueVals = domain;\n    return { domain, uniqueVals, scaleDomain: [0, 1], range };\n};\n\n/**\n *\n *\n * @param {*} domain\n *\n */\nconst normalDomain = (domain, stops, range) => {\n    const uniqueVals = domain;\n    return { uniqueVals, domain, nice: true, range };\n};\n\n/**\n *\n *\n * @param {*} domain\n * @param {*} stops\n *\n */\nconst steppedDomain = (domain, stops, range) => {\n    const { domain: uniqueVals, newStops } = getStops(domain, stops);\n    const { newRange } = rangeStops(newStops.length - 1, range);\n\n    return { uniqueVals, domain: newStops, nice: true, range: newRange };\n};\n\nconst continousSteppedDomain = (domain, stops, range) => {\n    const { domain: uniqueVals, newStops } = getStops(sanitizeDomainWhenEqual(domain), range.length - 1);\n    const hslRange = range.map(e => getHslString(e));\n    return { uniqueVals, domain: newStops, nice: true, range: hslRange };\n};\n\n/**\n *\n *\n * @param {*} domainValue\n * @param {*} scale\n * @param {*} domain\n * @param {*} uniqueVals\n *\n */\nconst uniqueRange = (domainValue, scale, domain, uniqueVals) => {\n    const index = uniqueVals.indexOf(domainValue);\n    const numVal = domain[index];\n    return scale(numVal);\n};\n\n/**\n *\n *\n * @param {*} domainValue\n * @param {*} scale\n * @param {*} domain\n *\n */\nconst indexedRange = (domainValue, scale, domain) => {\n    const numVal = (domainValue - domain[0]) / (domain[domain.length - 1] - domain[0]);\n\n    return treatNullMeasures(domainValue, scale(numVal), scale(0));\n};\n\n/**\n *\n *\n * @param {*} domainValue\n * @param {*} scale\n */\nconst normalRange = (domainValue, scale, domain) => treatNullMeasures(domainValue, scale(domainValue),\n    scale(domain[0]));\n\n/**\n *\n *\n * @param {*} stops\n */\nconst strategies = () => ({\n    [`${CONTINOUS}-${CONTINOUS}-${SEQUENTIAL}`]: {\n        scale: SEQUENTIAL,\n        domainRange: () => indexedDomainMeasure,\n        value: () => indexedRange\n    },\n    [`${CONTINOUS}-${DISCRETE}-${SEQUENTIAL}`]: {\n        scale: SEQUENTIAL,\n        domainRange: () => indexedDomainMeasure,\n        value: () => indexedRange\n    },\n    [`${DISCRETE}-${DISCRETE}-${SEQUENTIAL}`]: {\n        scale: SEQUENTIAL,\n        domainRange: () => indexedDomain,\n        value: () => uniqueRange\n    },\n    [`${DISCRETE}-${DISCRETE}-${ORDINAL}`]: {\n        scale: ORDINAL,\n        domainRange: () => normalDomain,\n        value: () => normalRange\n    },\n    [`${CONTINOUS}-${CONTINOUS}-${ORDINAL}`]: {\n        scale: LINEAR,\n        domainRange: () => continousSteppedDomain,\n        value: () => normalRange\n    },\n    [`${CONTINOUS}-${DISCRETE}-${ORDINAL}`]: {\n        scale: QUANTILE,\n        domainRange: () => steppedDomain,\n        value: () => normalRange\n\n    }\n});\n\n/**\n *\n *\n * @param {*} domainType\n * @param {*} rangeType\n * @param {*} schemeType\n * @param {*} stops\n */\nexport const strategyGetter = (domainType, rangeType, schemeType) =>\n    strategies()[`${domainType}-${rangeType}-${schemeType || ''}`];\n","/**\n * @module Axis\n * This file declares a class that is used to render an axis to add  meaning to\n * plots.\n */\nimport { getUniqueId, generateGetterSetters, rgbToHsv } from 'muze-utils';\nimport { createScale, getScheme, getSchemeType } from '../scale-creator';\nimport { CONTINOUS, DISCRETE, COLOR } from '../enums/constants';\nimport { strategyGetter } from './color-strategy';\nimport { DEFAULT_CONFIG } from './defaults';\nimport { PROPS, getHslString, getActualHslColor } from './props';\n\n/**\n* This class is used to instantiate a SimpleAxis.\n* @class SimpleAxis\n*/\nexport default class ColorAxis {\n\n    /**\n    * Creates an instance of SimpleAxis.\n    * @param {Object} config input parameters.\n    * @param {Object | undefined} params.range Type of color range.\n    * @param {string} params.name the label to show on axis.\n    * @param {string} params.type The type of scale to handle.\n    * @memberof ColorAxis\n    */\n    constructor (config) {\n        generateGetterSetters(this, PROPS);\n        this.config(config);\n\n        this._domainType = this._config.type === 'linear' ? CONTINOUS : DISCRETE;\n        this._rangeType = (this._config.type === 'linear' && !this._config.step) ? CONTINOUS : DISCRETE;\n\n        this._schemeType = getSchemeType(this._config.range);\n\n        this._colorStrategy = this.setColorStrategy(this._domainType, this._rangeType, this._schemeType);\n        this._scale = this.createScale(this._colorStrategy);\n\n        this._id = getUniqueId();\n\n        this.updateDomain(config.domain);\n    }\n\n    /**\n     *\n     *\n     * @static\n     *\n     * @memberof ColorAxis\n     */\n    static defaultConfig () {\n        return DEFAULT_CONFIG;\n    }\n\n    /**\n     *\n     *\n     * @static\n     *\n     * @memberof ColorAxis\n     */\n    static type () {\n        return COLOR;\n    }\n\n    /**\n     *\n     *\n     * @param {*} colorStrategy\n     *\n     * @memberof ColorAxis\n     */\n    createScale (colorStrategy) {\n        const { range } = this.config();\n        if (range && typeof (range) === 'string') {\n            return getScheme(range);\n        }\n        return createScale({\n            type: colorStrategy.scale,\n            range\n        });\n    }\n\n    /**\n     *\n     *\n     * @param {*} domainType\n     * @param {*} rangeType\n     * @param {*} schemeType\n     *\n     * @memberof ColorAxis\n     */\n    setColorStrategy (domainType, rangeType, schemeType) {\n        return strategyGetter(domainType, rangeType, schemeType);\n    }\n\n    /**\n     *\n     *\n     * @param {*} domainVal\n     *\n     * @memberof ColorAxis\n     */\n    getHslString (hslColorArray) {\n        return getHslString(hslColorArray);\n    }\n    /**\n     *\n     *\n     * @param {*} domainVal\n     *\n     * @memberof ColorAxis\n     */\n    getColor (domainVal) {\n        return this.getHslString(this.getRawColor(domainVal));\n    }\n    /**\n     *\n     *\n     * @param {*} domainVal\n     *\n     * @memberof ColorAxis\n     */\n    getRawColor (domainVal) {\n        if (this.domain() && domainVal !== undefined) {\n            const scale = this.scale();\n            const range = scale.range ? scale.range() : null;\n            const color = this._colorStrategy.value(range)(domainVal, scale, this.domain(), this.uniqueValues());\n            if (color) {\n                if (typeof color === 'string') {\n                    const col = color.substring(color.indexOf('(') + 1, color.lastIndexOf(')')).split(/,\\s*/);\n                    return rgbToHsv(...col);\n                }\n                return [...color];\n            }\n        }\n        return [...this.config().value];\n    }\n\n    /**\n     *\n     *\n     * @param {*} [domain=[]]\n     *\n     * @memberof ColorAxis\n     */\n    updateDomain (domain = []) {\n        if (domain.length) {\n            const scale = this.scale();\n            const range = scale.range ? scale.range() : null;\n            const domainRangeFn = this._colorStrategy.domainRange();\n            const scaleInfo = domainRangeFn(domain, this.config().stops, range);\n\n            this.domain(scaleInfo.domain);\n            scaleInfo.range && this.scale().range(scaleInfo.range);\n            this.uniqueValues(scaleInfo.uniqueVals);\n            this.scale().domain(scaleInfo.scaleDomain || this.domain());\n        }\n        return this;\n    }\n\n    /**\n     * This method returns an object that can be used to\n     * reconstruct this instance.\n     *\n     * @return {Object} the serializable props of axis\n     * @memberof ShapeAxis\n     */\n    serialize () {\n        return {\n            type: this.constructor.type(),\n            scale: this.scale(),\n            domain: this.domain(),\n            config: this.config()\n        };\n    }\n\n    transformColor (color, transformationArr) {\n        const h = color[0] * 360;\n        const s = color[1] * 100;\n        const l = color[2] * 100;\n        const a = color[3] || 1;\n        const newH = h + transformationArr[0];\n        const newS = s + transformationArr[1];\n        const newL = l + transformationArr[2];\n        const newA = a + transformationArr[3] || 0;\n\n        return { color: `hsla(${newH},${newS}%,${newL}%,${newA})`, hsla: [newH / 360, newS / 100, newL / 100, newA] };\n    }\n\n    /**\n     * Returns the id of the axis.\n     * @return {string} Unique identifier of the axis.\n     */\n    id () {\n        return this._id;\n    }\n\n    getHslArray (color) {\n        return getActualHslColor(color);\n    }\n\n}\n","export const DEFAULT_CONFIG = {\n    value: 36,\n    range: [36, 1000]\n};\n","import { numberInterpolator, piecewiseInterpolator } from 'muze-utils';\nimport { CONTINOUS, DISCRETE } from '../enums/constants';\nimport { LINEAR, THRESHOLD } from '../enums/scale-type';\nimport { treatNullMeasures } from '../helper';\n\n/**\n *\n *\n * @param {*} domain\n *\n */\nconst indexedDomain = (domain) => {\n    const uniqueVals = domain;\n    const retDomain = domain.map((d, i) => (i) / (domain.length - 1));\n    return { domain: retDomain, uniqueVals, scaleDomain: [0, 1] };\n};\n\n/**\n *\n *\n * @param {*} domain\n *\n */\nconst normalDomain = (domain) => {\n    const uniqueVals = domain;\n    return { uniqueVals, domain };\n};\n\n/**\n *\n *\n * @param {*} domain\n * @param {*} intervals\n *\n */\nconst steppedDomain = (domain, intervals) => {\n    let newIntervals = [];\n    if (intervals instanceof Array) {\n        newIntervals = intervals.slice().sort();\n    } else {\n        const interpolator = numberInterpolator()(...domain);\n        for (let i = 0; i < intervals; i++) {\n            newIntervals[i] = interpolator(i / (intervals - 1));\n        }\n    }\n    if (newIntervals[0] < domain[0]) {\n        newIntervals.shift();\n    }\n    const retDomain = newIntervals;\n    return { uniqueVals: newIntervals, domain: retDomain, nice: true };\n};\n\n/**\n *\n *\n * @param {*} domainValue\n * @param {*} scale\n * @param {*} domain\n * @param {*} uniqueVals\n *\n */\nconst discreteRange = (domainValue, scale, domain) => {\n    const numVal = (domainValue - domain[0]) / (domain[domain.length - 1] - domain[0]);\n    const interpolator = numberInterpolator()(...scale.range());\n    return treatNullMeasures(domainValue, interpolator(numVal), interpolator(domain[0]));\n};\n\n/**\n *\n *\n * @param {*} domainValue\n * @param {*} scale\n * @param {*} domain\n *\n */\nconst pieceWiseRange = (domainValue, scale, domain, uniqueVals) => {\n    const index = uniqueVals.indexOf(domainValue);\n    const numVal = domain[index];\n    const fn = piecewiseInterpolator()(numberInterpolator(), [...scale.range()]);\n    return fn(numVal);\n};\n\n/**\n *\n *\n * @param {*} domainValue\n * @param {*} scale\n */\nconst normalRange = (domainValue, scale, domain) =>\n    treatNullMeasures(domainValue, scale(domainValue), scale(domain[0]));\n\n/**\n *\n *\n * @param {*} intervals\n */\nconst strategies = {\n    [`${DISCRETE}-${CONTINOUS}`]: {\n        scale: LINEAR,\n        domain: indexedDomain,\n        range: pieceWiseRange\n    },\n    [`${CONTINOUS}-${CONTINOUS}`]: {\n        scale: LINEAR,\n        domain: normalDomain,\n        range: normalRange\n    },\n    [`${CONTINOUS}-${DISCRETE}`]: {\n        scale: THRESHOLD,\n        domain: steppedDomain,\n        range: discreteRange\n    }\n};\n\n/**\n *\n *\n * @param {*} domainType\n * @param {*} rangeType\n * @param {*} schemeType\n * @param {*} intervals\n */\nexport const strategyGetter = (domainType, rangeType) =>\n     strategies[`${domainType}-${rangeType}`];\n","export const PROPS = {\n    config: {},\n    domain: {\n        sanitization: (context, value) => {\n            context.scale().domain(value);\n            return value;\n        }\n    },\n    range: {},\n    scale: {},\n    uniqueValues: {}\n};\n","/**\n * @module Axis\n * This file declares a class that is used to render an axis to add  meaning to\n * plots.\n */\nimport { getUniqueId, generateGetterSetters } from 'muze-utils';\nimport { createScale } from '../scale-creator';\nimport { DEFAULT_CONFIG } from './defaults';\nimport { SIZE, CONTINOUS, DISCRETE } from '../enums/constants';\nimport { strategyGetter } from './size-strategy';\nimport { PROPS } from './props';\n\n/**\n* This class is used to instantiate a SimpleAxis.\n* @class SimpleAxis\n*/\nexport default class SizeAxis {\n\n    /**\n     * Creates an instance of SimpleAxis.\n     * @param {Object} config input parameters.\n     * @memberof SizeAxis\n     */\n    constructor (config) {\n        generateGetterSetters(this, PROPS);\n\n        this._id = getUniqueId();\n        this._config = Object.assign({}, this.constructor.defaultConfig(), config);\n        // @todo: Will use configuration override using scale decorator\n        this._domainType = this._config.type === 'linear' ? CONTINOUS : DISCRETE;\n        this._rangeType = CONTINOUS;\n\n        this._sizeStrategy = this.setStrategy(this._domainType, this._rangeType);\n        this._scale = this.createScale(this._sizeStrategy);\n        this._range = this._config.range;\n\n        this.updateDomain(config.domain);\n    }\n\n     /**\n     *\n     *\n     * @param {*} domainType\n     * @param {*} rangeType\n     * @param {*} schemeType\n     *\n     * @memberof ColorAxis\n     */\n    setStrategy (domainType, rangeType) {\n        return strategyGetter(domainType, rangeType);\n    }\n\n    /**\n     *\n     *\n     *\n     * @memberof SizeAxis\n     */\n    createScale (strategy) {\n        const {\n            range\n        } = this.config();\n        return createScale({\n            type: strategy.scale,\n            range\n        });\n    }\n\n    /**\n     *\n     *\n     * @static\n     *\n     * @memberof ColorAxis\n     */\n    static defaultConfig () {\n        return DEFAULT_CONFIG;\n    }\n\n     /**\n     *\n     *\n     * @static\n     *\n     * @memberof ColorAxis\n     */\n    static type () {\n        return SIZE;\n    }\n\n    /**\n     *\n     *\n     * @param {*} domainVal\n     *\n     * @memberof SizeAxis\n     */\n    getSize (domainVal = 0) {\n        let sizeVal = 1;\n        const {\n            value\n        } = this.config();\n        const scale = this.scale();\n        const domain = this.domain() || [1, 1];\n\n        if (!scale || domain[0] === domain[1]) {\n            sizeVal = value;\n        } else {\n            return this._sizeStrategy.range(domainVal, scale, this.domain(), this.uniqueValues());\n        }\n        return sizeVal;\n    }\n\n    /**\n     * This method is used to assign a domain to the axis.\n     *\n     * @param {Array} domain the domain of the scale\n     * @memberof SizeAxis\n     */\n    updateDomain (domain) {\n        if (domain) {\n            const domainFn = this._sizeStrategy.domain;\n\n            const domainInfo = domainFn(domain, this.config().intervals);\n\n            this.domain(domainInfo.domain);\n            this.uniqueValues(domainInfo.uniqueVals);\n\n            this.scale().domain(domainInfo.scaleDomain || this.domain());\n        }\n        return this;\n    }\n\n    /**\n     * This method returns an object that can be used to\n     * reconstruct this instance.\n     *\n     * @return {Object} the serializable props of axis\n     * @memberof ShapeAxis\n     */\n    serialize () {\n        return {\n            type: this.constructor.type(),\n            scale: this.scale(),\n            domain: this.domain(),\n            range: this.range(),\n            config: this.config()\n        };\n    }\n\n    /**\n     * Returns the id of the axis.\n     * @return {string} Unique identifier of the axis.\n     */\n    id () {\n        return this._id;\n    }\n}\n","export const DEFAULT_CONFIG = {\n    generator: null,\n    value: 'circle',\n    range: ['circle', 'diamond', 'star', 'cross', 'square', 'wye', 'triangle']\n};\n","export const PROPS = {\n    config: {},\n    domain: {},\n    scale: {},\n    uniqueValues: {},\n    generator: {}\n};\n\n","/**\n * @module Axis\n * This file declares a class that is used to render an axis to add  meaning to\n * plots.\n */\nimport { getUniqueId, getSymbol, generateGetterSetters, mergeRecursive, InvalidAwareTypes } from 'muze-utils';\nimport { createScale } from '../scale-creator';\nimport { DEFAULT_CONFIG } from './defaults';\nimport { SHAPE } from '../enums/constants';\nimport { shapeGenerator } from './helper';\nimport { PROPS } from './props';\n\n/**\n* This class is used to instantiate a SimpleAxis.\n* @class SimpleAxis\n*/\nexport default class ShapeAxis {\n    /**\n    * Creates an instance of SimpleAxis.\n    * @param {Object} params input parameters.\n    * @param {Object | undefined} params.range Type of color scheme.\n    * @memberof ShapeAxis\n    */\n    constructor (config) {\n        generateGetterSetters(this, PROPS);\n\n        this._id = getUniqueId();\n        this._config = Object.assign({}, this.constructor.defaultConfig());\n        this._config = mergeRecursive(this._config, config);\n\n        this._scale = createScale({\n            type: 'ordinal',\n            range: this._config.range\n        });\n        this.updateDomain(config.domain);\n    }\n\n     /**\n     *\n     *\n     * @static\n     *\n     * @memberof ColorAxis\n     */\n    static defaultConfig () {\n        return DEFAULT_CONFIG;\n    }\n\n     /**\n     *\n     *\n     * @static\n     *\n     * @memberof ColorAxis\n     */\n    static type () {\n        return SHAPE;\n    }\n\n    /**\n     *\n     *\n     * @param {*} value\n     *\n     * @memberof ShapeAxis\n     */\n    getShape (value) {\n        if (!this.scale() || !this.domain() || !value || value instanceof InvalidAwareTypes) {\n            return this.config().value;\n        }\n\n        if (this._generatedShapes) {\n            return this._generatedShapes[value];\n        }\n\n        const shapeType = this.scale()(value);\n        if (shapeType === 'string') {\n            return getSymbol(shapeType);\n        }\n\n        return shapeType;\n    }\n\n    /**\n     * This method is used to assign a domain to the axis.\n     *\n     * @param {Array} domain the domain of the scale\n     * @memberof ShapeAxis\n     */\n    updateDomain (domain = []) {\n        if (domain.length) {\n            this.uniqueValues(domain);\n            this.domain(domain);\n            this.scale().domain(domain);\n\n            if (this.config().generator) {\n                this._generatedShapes = shapeGenerator(domain, this.config().generator);\n            }\n        }\n        return this;\n    }\n\n    /**\n     * This method returns an object that can be used to\n     * reconstruct this instance.\n     *\n     * @return {Object} the serializable props of axis\n     * @memberof ShapeAxis\n     */\n    serialize () {\n        return {\n            type: this.constructor.type(),\n            scale: this.scale(),\n            domain: this.domain(),\n            range: this.config().range,\n            config: this.config()\n        };\n    }\n\n    /**\n     * Returns the id of the axis.\n     * @return {string} Unique identifier of the axis.\n     */\n    id () {\n        return this._id;\n    }\n}\n","/**\n *\n *\n * @param {*} domain\n * @param {*} generatorFn\n *\n */\nexport const shapeGenerator = (domain, generatorFn) => {\n    const generatedShapes = {};\n    domain.forEach((value) => {\n        generatedShapes[value] = generatorFn(value);\n    });\n    return generatedShapes;\n};\n","import { mergeRecursive } from 'muze-utils';\n\nexport const PROPS = {\n    config: {\n        sanitization: (context, config) => mergeRecursive(context.config(), config),\n        preset: (context, config) => {\n            const { range, domain } = config;\n            range && context.range(range);\n            domain && context.domain(domain);\n        }\n    },\n    domain: {},\n    range: {}\n};\n","/**\n * @module Axis\n * This file declares a class that is used to render an axis to add  meaning to\n * plots.\n */\nimport { getUniqueId, Symbols, mergeRecursive, generateGetterSetters } from 'muze-utils';\nimport { createScale } from '../scale-creator';\nimport { DEFAULT_ANGLE_DOMAIN } from '../enums/constants';\nimport { PROPS } from './props';\nimport { resolveAxisConfig } from '../helper';\n\nconst { pie } = Symbols;\n\nconst createAngleValues = (context) => {\n    const angleData = context._angleFn(context._domain);\n    angleData.forEach((v) => {\n        v.startAngle -= Math.PI / 2;\n        v.endAngle -= Math.PI / 2;\n    });\n    context._angleValues = angleData.reduce((values, d) => {\n        const key = d.data;\n        !values[key] && (values[key] = []);\n        values[key].push(d);\n        return values;\n    }, {});\n};\n\n/**\n* This class is used to instantiate a AngleAxis.\n* @class AngleAxis\n*/\nexport default class AngleAxis {\n\n    /**\n     * Creates an instance of AngleAxis.\n     * @param {Object} config input parameters.\n     * @memberof AngleAxis\n     */\n    constructor (config = {}) {\n        this._id = getUniqueId();\n        generateGetterSetters(this, PROPS);\n        this._config = mergeRecursive({}, this.constructor.defaultConfig());\n        this.config(config);\n        this._range = [0, 360];\n        this._angleFn = pie()\n                .value(d => (typeof d === 'string' ? 1 : d))\n                .sortValues(null);\n        this._angleValues = {};\n    }\n\n    static defaultConfig () {\n        return {};\n    }\n\n    createScale (strategy) {\n        const {\n            range\n        } = this.config();\n        return createScale({\n            type: strategy.scale,\n            range\n        });\n    }\n\n    getScaleValue (domainVal) {\n        return this._angleValues[domainVal];\n    }\n\n    padAngle (angle) {\n        this._angleFn = this._angleFn.padAngle(angle);\n    }\n\n    domain (...domainVal) {\n        if (domainVal.length) {\n            const { domain: customDomain } = this.config();\n            const domain = domainVal[0].length ? domainVal[0] : DEFAULT_ANGLE_DOMAIN;\n            this._domain = resolveAxisConfig(customDomain, domain, this);\n            createAngleValues(this);\n            return this;\n        }\n        return this._domain;\n    }\n\n    range (...range) {\n        if (range.length) {\n            const { range: customRange } = this.config();\n            this._range = resolveAxisConfig(customRange, range[0], this);\n            const domain = this.domain();\n            const [startAngle, endAngle] = this._range;\n            this._angleFn\n                    .startAngle((startAngle / 180) * Math.PI)\n                    .endAngle(Math.PI * endAngle / 180);\n            if (domain && domain.length) {\n                createAngleValues(this);\n            }\n            return this;\n        }\n        return this._range;\n    }\n}\n","/**\n * This file exports constants that are used as enums in the\n *  crosstab group implementation.\n */\n/**\n * Width of the crosstab.\n */\nexport const X = 'x';\n/**\n * Width of the crosstab.\n */\nexport const Y = 'y';\n/**\n * Width of the crosstab.\n */\nexport const WIDTH = 'width';\n\n/**\n * Height of the crosstab.\n */\nexport const HEIGHT = 'height';\n\n/**\n * Field referring to object storing measurement configuration.\n */\nexport const MEASUREMENT = 'measurement';\n\n/**\n * Field referring to object storing configuration properties.\n */\nexport const CONFIG = 'config';\n\n/**\n * Width of visual unit in crosstab.\n */\nexport const MIN_UNIT_WIDTH = 'minUnitWidth';\n\n/**\n * Height of visual unit.\n */\nexport const MIN_UNIT_HEIGHT = 'minUnitHeight';\n\n/**\n * Field to store the array of dimensions to facet by.\n */\nexport const DIMENSIONS = 'dimensions';\n\n/**\n * Field to store array of measures to use as x axis.\n */\nexport const MEASURES = 'measures';\n\n/**\n * Field to store the array of dimensions to facet by.\n */\nexport const DIMENSION = 'dimension';\n\n/**\n * Field to store array of measures to use as x axis.\n */\nexport const MEASURE = 'measure';\n\n/**\n * Flag to specify if model should be pivoted.\n */\nexport const PIVOT = 'pivot';\n\n/**\n * Flag to specify format\n */\nexport const FORMAT = 'format';\n\n/**\n * Mount point where the variable will be hosted\n */\nexport const MOUNT = 'mount';\n\n/**\n * Data update flag\n */\nexport const HAS_DATA_UPDATED = 'hasDataUpdated';\n\n/**\n * Field referring to object storing set of rows\n */\nexport const ROWS = 'rows';\n\n/**\n * Field referring to object storing set of columns\n */\nexport const COLUMNS = 'columns';\n\n/**\n * Field referring to object storing set of columns\n */\nexport const COL = 'col';\n\n/**\n * Field referring to object storing set of rows\n */\nexport const ROW = 'row';\n\n/**\n * Field referring to object storing set of columns\n */\nexport const COLUMN = 'column';\n\n/**\n * Field referring to object storing color field\n */\nexport const COLOR = 'color';\n\n/**\n * Field referring to object storing shape field\n */\nexport const SHAPE = 'shape';\n\n/**\n * Field referring to object storing size field\n */\nexport const SIZE = 'size';\n\n/**\n * Field referring to object storing detail field\n */\nexport const DETAIL = 'detail';\n\n/**\n * Field referring to object storing set of layers\n */\nexport const LAYERS = 'layers';\n\n/**\n * Field referring to object storing the transforms\n */\nexport const TRANSFORM = 'transform';\n\n/**\n * Field referring to object storing the transforms\n */\nexport const ORDINAL = 'ordinal';\n\n/**\n * Field referring to object storing the transforms\n */\nexport const LINEAR = 'linear';\n/**\n * Field referring to object storing the transforms\n */\nexport const LEFT = 'left';\n/**\n * Field referring to object storing the transforms\n */\nexport const RIGHT = 'right';\n/**\n * Field referring to object storing the transforms\n */\nexport const TOP = 'top';\n/**\n * Field referring to object storing the transforms\n */\nexport const BOTTOM = 'bottom';\n\n/**\n * Field referring to object storing the transforms\n */\nexport const RETINAL = 'retinal';\n/**\n * Field referring to object storing the transforms\n */\nexport const CELL = 'cell';\n/**\n * Field referring to object storing the transforms\n */\nexport const X_AXES = 'xAxes';\n/**\n * Field referring to object storing the transforms\n */\nexport const Y_AXES = 'yAxes';\n/**\n * Field referring to object storing the transforms\n */\nexport const ENTRY_CELLS = 'entryCell';\n/**\n * Field referring to object storing the transforms\n */\nexport const INITIALIZED = 'initialized';\n/**\n * Field referring to object storing the transforms\n */\nexport const EXIT_CELLS = 'exitCell';\n/**\n * Field referring to object storing the transforms\n */\nexport const AXIS = 'axis';\n/**\n * Field referring to object storing the transforms\n */\nexport const UNIT = 'unit';\n/**\n * Field referring to object storing the transforms\n */\nexport const UPDATED = 'updated';\n/**\n * Field referring to object storing the transforms\n */\nexport const BEFORE_UPDATE = 'beforeupdate';\n/**\n * Field referring to object storing the transforms\n */\nexport const VALUE_MATRIX = 'valueMatrix';\n/**\n * Field referring to object storing the transforms\n */\nexport const FACET_HEADERS = 'facet-headers';\n/**\n * Field referring to object storing the transforms\n */\nexport const RADIUS = 'radius';\n/**\n * Field referring to object storing the transforms\n */\nexport const ANGLE = 'angle';\n\nexport const ANGLE0 = 'angle0';\n/**\n * Field referring to object storing the transforms\n */\nexport const ARC = 'arc';\n/**\n * Field referring to object storing the transforms\n */\nexport const CATEGORICAL = 'categorical';\n/**\n * Field referring to object storing the transforms\n */\nexport const TEMPORAL = 'temporal';\n/**\n * Field referring to object storing the transforms\n */\nexport const BAR = 'bar';\n/**\n * Field referring to object storing the transforms\n */\nexport const LINE = 'line';\n/**\n * Field referring to object storing the transforms\n */\nexport const POINT = 'point';\n/**\n * Field referring to object storing the transforms\n */\nexport const PRIMARY = 'Primary';\n/**\n * Field referring to object storing the transforms\n */\nexport const SECONDARY = 'Secondary';\n/**\n * Field referring to object storing the transforms\n */\nexport const BOTH = 'both';\n/**\n * Field referring to object storing the transforms\n */\nexport const INTERACTION = 'interaction';\n/**\n * Field referring to object storing the transforms\n */\nexport const GRID_LINES = 'gridLines';\n/**\n * Field referring to object storing the transforms\n */\nexport const GRID_BANDS = 'gridBands';\n/**\n * Field referring to object storing the transforms\n */\nexport const HEADER = 'header';\n/**\n * Field referring to object storing the transforms\n */\nexport const FACET = 'facet';\n/**\n * Ordering type\n */\nexport const ASCENDING = 'asc';\n/**\n * Ordering type\n */\nexport const DESCENDING = 'desc';\n","/**\n * @module Axis\n * This file declares a class that is used to render an axis to add  meaning to\n * plots.\n */\nimport { getUniqueId, mergeRecursive, generateGetterSetters, sanitizeDomainWhenEqual } from 'muze-utils';\nimport { createScale } from '../scale-creator';\nimport { LINEAR } from '../../../visual-group/src/enums/constants';\nimport { PROPS } from './props';\nimport { resolveAxisConfig } from '../helper';\n\nconst adjustDomain = (context) => {\n    const minOuterRadius = context.config().minOuterRadius;\n    const domain = context._domain;\n    if (context._range.length) {\n        const scale = context._scale;\n        const value = scale.invert(minOuterRadius) - scale.invert(0);\n        context._domain = [domain[0] - value, domain[1]];\n        scale.domain(context._domain);\n    }\n};\n\n/**\n* This class is used to instantiate a RadiusAxis.\n* @class RadiusAxis\n*/\nexport default class RadiusAxis {\n\n    /**\n     * Creates an instance of RadiusAxis.\n     * @param {Object} config input parameters.\n     * @memberof RadiusAxis\n     */\n    constructor (config = {}) {\n        this._id = getUniqueId();\n        generateGetterSetters(this, PROPS);\n        this._range = [];\n        this._radiusFactor = 1;\n        this._config = mergeRecursive({}, this.constructor.defaultConfig());\n        this.config(config);\n        this._scale = this.createScale({\n            scale: LINEAR\n        });\n    }\n\n    static defaultConfig () {\n        return {\n            padding: [0, 1],\n            minOuterRadius: 10\n        };\n    }\n\n    config (...params) {\n        if (params.length) {\n            const config = mergeRecursive(this.config(), params[0]);\n            this._config = config;\n            return this;\n        }\n        return this._config;\n    }\n\n    createScale (strategy) {\n        return createScale({\n            type: strategy.scale,\n            range: this.range()\n        });\n    }\n\n    domain (...domainVal) {\n        if (domainVal.length) {\n            const { domain: customDomain } = this.config();\n            let domain = resolveAxisConfig(customDomain, domainVal[0], this);\n            domain = sanitizeDomainWhenEqual(domain);\n            this._scale.domain(domain);\n            this._domain = domain;\n            adjustDomain(this);\n        }\n        return this._domain;\n    }\n\n    getInnerRadius (domainVal) {\n        if (domainVal === undefined) {\n            return this.range()[0];\n        }\n        return this._scale(domainVal);\n    }\n\n    getOuterRadius (domainVal) {\n        if (domainVal === undefined) {\n            return this.range()[1];\n        }\n        const radius = this._scale(domainVal) * this._radiusFactor;\n        return radius;\n    }\n\n    range (...range) {\n        if (range.length) {\n            const { padding, range: customRange } = this.config();\n            const sanitizedRange = range[0].map((v, i) => v + (i ? -padding[i] : padding[i]));\n            const rangeVal = resolveAxisConfig(customRange, sanitizedRange, this);\n            this._range = rangeVal;\n            this._scale.range(rangeVal);\n            adjustDomain(this);\n        }\n        return this._range;\n    }\n\n    setRadiusFactor (val) {\n        this._radiusFactor = val;\n        return this;\n    }\n}\n","import * as ScaleType from './enums/scale-type';\n\nconst DATA_TYPES = {\n    DIMENSION: 'dimension',\n    CATEGORICAL: 'categorical',\n    MEASURE: 'measure',\n    TEMPORAL: 'temporal'\n};\n\n/**\n * Map of DataModel types to associated field types.\n */\nexport const dataTypeScaleMap = {\n    [DATA_TYPES.DIMENSION]: ScaleType.BAND,\n    [DATA_TYPES.MEASURE]: ScaleType.LINEAR,\n    [DATA_TYPES.TEMPORAL]: ScaleType.TIME\n};\n\n","import { nestCollection, InvalidAwareTypes } from 'muze-utils';\n\n/**\n * Create multiple datasets from a single dataset by grouping the data using\n * a dimensional field.\n * @param {Array} schema Name and type of fields are stored in schema\n * @param {Array} data Data array\n * @param {Object} config Configuration object\n * @return {Array} Grouped data array\n */\nexport default (schema, data, config) => {\n    const groupBy = config.groupBy instanceof Array ? config.groupBy : [config.groupBy];\n    const groupByIndices = groupBy.map(fieldName => schema.findIndex(d => d.name === fieldName));\n\n    if (groupByIndices.find(d => d === -1) !== undefined) {\n        throw new Error(`Groupby field ${groupBy} not found in schema`);\n    }\n\n    const groupedData = nestCollection({\n        keys: groupByIndices,\n        data\n    });\n\n    groupedData.forEach((d) => {\n        const key = d.key;\n        if (InvalidAwareTypes.isInvalid(key)) {\n            d.key = InvalidAwareTypes.getInvalidType(key);\n        }\n    });\n    return groupedData;\n};\n","/**\n * @module Transform\n * This file exports a function that is used to implement\n * the identity transform\n */\n /* eslint no-unused-vars: 0 */\n /**\n  * This function accepts data and returns the data unchanged.\n  * @param {Object} schema The schema.\n  * @param {Array} data The data array.\n  * @param {Object} config The config object.\n  * @return {Array} The unchanged data.\n  */\n function identityTransform (schema, data, config) {\n     return data;\n }\n\n export default identityTransform;\n","/**\n * @module Transform\n * This file exports the transform factory.\n */\nimport * as TransformType from '../enums/transform-type';\nimport identity from '../identity-transform';\nimport group from '../group-transform';\nimport stack from '../stack-transform';\n\n/* istanbul ignore next */\nconst transformMap = {\n    [TransformType.IDENTITY]: identity,\n    [TransformType.GROUP]: group,\n    [TransformType.STACK]: stack\n};\n\n/**\n * This function is used to retirn a transform associated\n * with the given type.\n *\n * @param {string} type The type of the transform.\n * @return {Function} The transform function.\n */\nfunction transformFactory (type) {\n    const transform = transformMap[type];\n    if (typeof transform !== 'function') {\n        throw new Error('Invalid transform type supplied.');\n    }\n    return transform;\n}\n\nexport default transformFactory;\n","/**\n * @module Transform\n * This module exports constants that are used to reference transforms in\n * a consistent manner throughout the project.\n */\n/* eslint one-var: 0 */\n export const IDENTITY = 'identity';\n export const GROUP = 'group';\n export const STACK = 'stack';\n export const FRACTURE = 'fracture';\n","import { stack } from 'muze-utils';\n\nimport group from '../group-transform';\n/*\n    Normalize the data to a form which can be given to d3 stack for stacking the data\n    ['Product', 'Sales', 'Region'],\n    0 ['A', 2000, 'North'],\n    1 ['A', 3000, 'South'],\n    2 ['B', 3000, 'South'],\n    3 ['B', 2000, 'North'],\n    4 ['C', 3000, 'South'],\n    5 ['C', 2000, 'North']\n            |\n            |\n    ['Product', 'North', 'South'],\n    ['A', 2000, 3000],\n    ['B', 2000, 3000],\n    ['C', 2000, 3000]\n*/\n// eslint-disable-next-line require-jsdoc\nconst normalizeData = (data, schema, valueField, uniqueField, groupBy) => {\n    const groupedData = group(schema, data, {\n        groupBy: uniqueField\n    });\n    const uniqueFieldIndex = schema.findIndex(d => d.name === uniqueField);\n    const valueFieldIndex = schema.findIndex(d => d.name === valueField);\n    const seriesKeyIndex = schema.findIndex(d => d.name === groupBy);\n    const seriesKeys = data.map(d => d[seriesKeyIndex]).filter((item, pos, arr) => arr.indexOf(item) === pos).sort();\n    const fieldNames = schema.reduce((acc, obj, i) => {\n        acc[i] = obj.name;\n        return acc;\n    }, {});\n    const dataArr = groupedData.map((arr) => {\n        const tuples = {};\n        const rowObj = arr.values.reduce((acc, row) => {\n            acc = row.reduce((obj, value, i) => {\n                if (i === seriesKeyIndex) {\n                    obj[value] = row[valueFieldIndex];\n                    tuples[value] = row;\n                } else if (i !== valueFieldIndex) {\n                    obj[fieldNames[i]] = value;\n                }\n                return obj;\n            }, acc);\n            return acc;\n        }, {});\n        rowObj._tuple = tuples;\n            // Set missing values field to zero value\n        seriesKeys.forEach((seriesKey) => {\n            if (rowObj[seriesKey] === undefined) {\n                rowObj[seriesKey] = 0;\n                const newArr = new Array(arr.values[0].length);\n                newArr[uniqueFieldIndex] = arr.key;\n                newArr[seriesKeyIndex] = seriesKey;\n                rowObj._tuple[seriesKey] = newArr;\n            }\n        });\n        return rowObj;\n    });\n\n    return {\n        data: dataArr,\n        keys: seriesKeys\n    };\n};\n/**\n * Generate a stacked representation of data\n * @param {Array} schema schema Array\n * @param {Array} data data array\n * @param {Object} config Configuration object\n * @return {Array} stacked data\n */\nexport default (schema, data, config) => {\n    const uniqueField = config.uniqueField;\n    const valueField = config.value;\n    const groupBy = config.groupBy;\n    const sort = config.sort || 'descending';\n    const normalizedData = normalizeData(data, schema, valueField, uniqueField, groupBy);\n    const keys = normalizedData.keys;\n    const map = {};\n    const orderBy = config.orderBy;\n    const orderIndex = schema.findIndex(d => d.name === orderBy);\n    const groupByIndex = schema.findIndex(d => d.name === groupBy);\n    if (orderIndex !== -1) {\n        keys.forEach((key) => {\n            const name = data.find(d => d[groupByIndex] === key);\n            map[key] = name[orderIndex];\n        });\n        normalizedData.keys.sort((a, b) => map[a].localeCompare(map[b]));\n    }\n\n    const stackData = stack({\n        keys: normalizedData.keys,\n        offset: config.offset || 'diverging',\n        order: sort,\n        data: normalizedData.data\n    });\n    stackData.forEach((seriesData) => {\n        seriesData.forEach((dataObj) => {\n            dataObj.data = dataObj.data._tuple[seriesData.key];\n        });\n    });\n    return stackData;\n};\n\n","import {\n    FieldType,\n    getDomainFromData,\n    setStyles,\n    easeFns,\n    selectElement,\n    DimensionSubtype,\n    STATE_NAMESPACES,\n    retrieveNearestGroupByReducers,\n    getObjProp,\n    COORD_TYPES\n} from 'muze-utils';\nimport { ScaleType } from '@chartshq/muze-axis';\nimport { transformFactory } from '@chartshq/transform';\nimport { IDENTITY, STACK, GROUP, COLOR, SHAPE, SIZE, ENCODING, AGG_FN_SUM, ASCENDING, TEXT } from '../enums/constants';\n\nconst BAND = ScaleType.BAND;\nconst { POLAR, CARTESIAN } = COORD_TYPES;\n\nconst transfromColor = (colorAxis, datum, styleType, intensity) => {\n    datum.meta.stateColor[styleType] = datum.meta.stateColor[styleType] || datum.meta.originalColor;\n    const fillColorInfo = colorAxis.transformColor(datum.meta.stateColor[styleType], intensity);\n    datum.meta.stateColor[styleType] = fillColorInfo.hsla;\n\n    return fillColorInfo;\n};\n\nexport const applyInteractionStyle = (context, selectionSet, interactionStyles, config) => {\n    const elements = context.getPlotElementsFromSet(selectionSet);\n    const axes = context.axes();\n    const colorAxis = axes.color;\n    const apply = config.apply;\n    const interactionType = config.interactionType;\n    interactionStyles.forEach((style) => {\n        const styleType = style.type;\n        elements.forEach((elem) => {\n            elem.style(styleType, ((d) => {\n                const { colorTransform, stateColor, originalColor } = d.meta;\n                colorTransform[interactionType] = colorTransform[interactionType] || {};\n                if (apply && !colorTransform[interactionType][styleType]) {\n                    // fade selections\n                    colorTransform[interactionType][styleType] = style.intensity;\n                    const color = transfromColor(colorAxis, d, styleType, style.intensity).color;\n                    return color;\n                }\n                if (!apply && colorTransform[interactionType][styleType]) {\n                     // unfade selections\n                    colorTransform[interactionType][styleType] = null;\n                    return transfromColor(colorAxis, d, styleType, style.intensity.map(e => -e)).color;\n                }\n                const [h, s, l, a] = stateColor[styleType] ? stateColor[styleType] : originalColor;\n                return `hsla(${h * 360},${s * 100}%,${l * 100}%, ${a || 1})`;\n            }));\n        });\n    });\n};\n\n/**\n *\n *\n * @param {*} selectionSet\n * @param {*} className\n * @param {*} hasFaded\n */\nexport const fadeUnfadeSelection = (context, selectionSet, hasFaded, interaction) => {\n    const interactionConfig = { interaction, apply: hasFaded };\n    applyInteractionStyle(context, selectionSet, 'fade', interactionConfig);\n};\n\n/**\n *\n *\n * @param {*} selectionSet\n * @param {*} className\n * @param {*} hasFaded\n */\nexport const focusUnfocusSelection = (context, selectionSet, isFocussed, interaction) => {\n    const interactionConfig = { interaction, apply: isFocussed };\n    applyInteractionStyle(context, selectionSet, 'focus', interactionConfig);\n};\n\n/**\n *\n *\n * @param {*} axes\n *\n */\nexport const getAxesScales = (axes) => {\n    const [xAxis, yAxis] = [ENCODING.X, ENCODING.Y].map(e => axes[e]);\n    const [xScale, yScale] = [xAxis, yAxis].map(e => e && e.scale());\n    return {\n        xAxis,\n        yAxis,\n        xScale,\n        yScale\n    };\n};\n\nexport const encodingFieldInfRetriever = {\n    [POLAR]: (encoding, fieldsConfig) => {\n        const encodingInf = {};\n        [ENCODING.RADIUS, ENCODING.RADIUS0, ENCODING.ANGLE, ENCODING.ANGLE0, COLOR, SHAPE, SIZE, TEXT]\n            .forEach((e) => {\n                const field = getObjProp(encoding, e, 'field');\n                encodingInf[`${e}Field`] = field;\n                encodingInf[`${e}FieldIndex`] = getObjProp(fieldsConfig, field, 'index');\n            });\n        return encodingInf;\n    },\n    [CARTESIAN]: (encoding, fieldsConfig) => {\n        const encodingInf = {};\n        [ENCODING.X, ENCODING.Y, ENCODING.X0, ENCODING.Y0, COLOR, SHAPE, SIZE, TEXT].forEach((e) => {\n            const field = getObjProp(encoding, e, 'field');\n            encodingInf[`${e}Field`] = field;\n            encodingInf[`${e}FieldIndex`] = getObjProp(fieldsConfig, field, 'index');\n            encodingInf[`${e}FieldType`] = getObjProp(fieldsConfig, field, 'def', 'type');\n            encodingInf[`${e}FieldSubType`] = getObjProp(fieldsConfig, field, 'def', 'subtype');\n        });\n\n        return encodingInf;\n    }\n};\n\n/**\n *\n *\n * @param {*} dataModel\n * @param {*} config\n * @param {*} transformType\n *\n */\nexport const transformData = (dataModel, config, transformType, encodingFieldInf) => {\n    const data = dataModel.getData({ withUid: true });\n    const schema = data.schema;\n    const transform = config.transform;\n    const {\n        xField,\n        yField,\n        xFieldType,\n        yFieldType\n    } = encodingFieldInf;\n    const uniqueField = xFieldType === FieldType.MEASURE ? yField : xField;\n\n    return transformFactory(transformType)(schema, data.data, {\n        groupBy: transform.groupBy,\n        uniqueField,\n        sort: transform.sort || 'none',\n        offset: transform.offset,\n        orderBy: transform.orderBy,\n        value: yFieldType === FieldType.MEASURE ? yField : xField\n    }, data.uids);\n};\n\nexport const getIndividualClassName = (d, i, data, context) => {\n    const className = context.config().individualClassName;\n    let classNameStr = '';\n    if (className instanceof Function) {\n        classNameStr = className(d, i, data, context);\n    }\n    return classNameStr;\n};\n\nconst dataNormalizers = {\n    [POLAR]: (transformedData, encodingFieldInf, fieldsConfig) => {\n        const {\n            radiusFieldIndex,\n            angleFieldIndex,\n            radius0FieldIndex,\n            angle0FieldIndex\n        } = encodingFieldInf;\n        const fieldsLen = Object.keys(fieldsConfig).length;\n\n        /**\n         * Returns normalized data from transformed data. It recursively traverses through\n         * the transformed data if there it is nested.\n         */\n        return transformedData.map(data => data.map((d) => {\n            const pointObj = {\n                radius: d[radiusFieldIndex],\n                angle: angleFieldIndex !== undefined ? d[angleFieldIndex] : 1,\n                radius0: d[radius0FieldIndex],\n                angle0: d[angle0FieldIndex]\n            };\n            [COLOR, SHAPE, SIZE, TEXT].forEach((enc) => {\n                pointObj[enc] = d[encodingFieldInf[`${enc}FieldIndex`]];\n            });\n            pointObj.source = d;\n            pointObj.rowId = d[fieldsLen];\n            return pointObj;\n        })).filter(d => d.length);\n    },\n    [CARTESIAN]: (transformedData, encodingFieldInf, fieldsConfig, transformType) => {\n        const {\n            xFieldType,\n            xFieldIndex,\n            yFieldIndex,\n            x0FieldIndex,\n            y0FieldIndex\n        } = encodingFieldInf;\n        const fieldsLen = Object.keys(fieldsConfig).length;\n        /**\n         * Returns normalized data from transformed data. It recursively traverses through\n         * the transformed data if there it is nested.\n         */\n        return transformedData.map((data) => {\n            const values = transformType === GROUP ? data.values : data;\n            return values.map((d) => {\n                let pointObj = {};\n                let tuple;\n                if (transformType === STACK) {\n                    tuple = d.data || [];\n                    let y;\n                    let y0;\n                    let x;\n                    let x0;\n                    if (d[1] >= d[0]) {\n                        y = x0 = d[1];\n                        x = y0 = d[0];\n                    } else {\n                        y = x0 = d[0];\n                        x = y0 = d[1];\n                    }\n\n                    pointObj = xFieldType === FieldType.MEASURE ? {\n                        x,\n                        x0,\n                        y: tuple[yFieldIndex],\n                        y0: tuple[yFieldIndex]\n                    } : {\n                        x: tuple[xFieldIndex],\n                        x0: tuple[xFieldIndex],\n                        y,\n                        y0\n                    };\n                    pointObj.source = tuple;\n                    pointObj.rowId = tuple[fieldsLen];\n                    [COLOR, SHAPE, SIZE, TEXT].forEach((enc) => {\n                        pointObj[enc] = tuple[encodingFieldInf[`${enc}FieldIndex`]];\n                    });\n                } else {\n                    pointObj = {\n                        x: d[xFieldIndex],\n                        y: d[yFieldIndex],\n                        x0: d[x0FieldIndex],\n                        y0: d[y0FieldIndex]\n                    };\n                    pointObj.source = d;\n                    pointObj.rowId = d[fieldsLen];\n                    [COLOR, SHAPE, SIZE, TEXT].forEach((enc) => {\n                        pointObj[enc] = d[encodingFieldInf[`${enc}FieldIndex`]];\n                    });\n                }\n                return pointObj;\n            });\n        }).filter(d => d.length);\n    }\n};\n/*\n * This method resolves the x, y, x0 and y0 values from the transformed data.\n * It also checks the type of transformed data for example, if it is a stacked data\n * then it fetches the y and y0 values from the stacked data.\n * @param {Array.<Array>} transformedData transformed data\n * @param {Object} fieldsConfig field definitions\n * @param {string} transformType type of transformed data - stack, group or identity.\n * @return {Array.<Object>} Normalized data\n*/\nexport const getNormalizedData = (transformedData, context) => {\n    const transformType = context.transformType();\n    const transformedDataArr = transformType === IDENTITY ? [transformedData] : transformedData;\n    const encodingFieldInf = context.encodingFieldsInf();\n    const fieldsConfig = context.data().getFieldsConfig();\n    return dataNormalizers[context.coord()](transformedDataArr, encodingFieldInf, fieldsConfig, transformType);\n};\n\nexport const domainCalculator = {\n    [POLAR]: (data, layerInst) => {\n        const config = layerInst.config();\n        const { sort } = config;\n        let angleValues = data[0];\n        const radius0Field = getObjProp(config.encoding.radius0, 'field');\n        if (sort) {\n            angleValues = angleValues.sort((a, b) => (sort === ASCENDING ? a.radius - b.radius : b.radius - a.radius));\n        }\n        const radiusDomain = getDomainFromData(data, [ENCODING.RADIUS, radius0Field ?\n            ENCODING.RADIUS0 : ENCODING.RADIUS]);\n        return {\n            radius: radiusDomain,\n            angle: angleValues.map(d => d.angle),\n            angle0: angleValues.map(d => d.angle0)\n        };\n    },\n    [CARTESIAN]: (data, layerInst) => {\n        const transformType = layerInst.transformType();\n        const encodingFieldInf = layerInst.encodingFieldsInf();\n        const {\n            xFieldSubType,\n            yFieldSubType,\n            xField,\n            yField,\n            x0Field,\n            y0Field\n        } = encodingFieldInf;\n        const domains = {};\n        const yEnc = ENCODING.Y;\n        const xEnc = ENCODING.X;\n        if (xField) {\n            domains.x = getDomainFromData(data, x0Field || transformType === STACK ? [xEnc, ENCODING.X0] : [xEnc, xEnc],\n                xFieldSubType);\n        }\n        if (yField) {\n            domains.y = getDomainFromData(data, y0Field || transformType === STACK ? [ENCODING.Y0, ENCODING.Y] :\n                [yEnc, yEnc], yFieldSubType);\n        }\n\n        return domains;\n    }\n};\n\nexport const attachDataToVoronoi = (voronoi, points) => {\n    voronoi.data([].concat(...points).filter(d => d.rowId !== undefined).map((d) => {\n        const point = d.update;\n        return {\n            x: point.x,\n            y: point.y,\n            data: d\n        };\n    }));\n};\n\n/**\n *\n *\n * @param {*} target\n * @param {*} styles\n * @param {*} remove\n */\nexport const updateStyle = (target, styles, remove) => {\n    for (const key in styles) {\n        if ({}.hasOwnProperty.call(styles, key)) {\n            target.style(key, remove ? null : styles[key]);\n        }\n    }\n};\n\n/**\n *\n *\n * @param {*} mount\n * @param {*} context\n */\nexport const animateGroup = (mount, context) => {\n    let groupTransition;\n    let update;\n    const { transition, groupAnimateStyle } = context;\n    const { duration, effect, disabled } = transition;\n    if (groupAnimateStyle) {\n        setStyles(mount.node(), groupAnimateStyle.enter);\n        update = groupAnimateStyle.update;\n        if (!disabled) {\n            groupTransition = mount.transition()\n                .ease(easeFns[effect])\n                .duration(duration)\n                .on('end', function () {\n                    updateStyle(selectElement(this), update, true);\n                });\n        } else {\n            groupTransition = mount;\n        }\n        updateStyle(groupTransition, update);\n    }\n};\n\nexport const positionPoints = (context, points) => {\n    const positioner = context.encodingTransform();\n    if (positioner) {\n        return positioner(points, context, { smartLabel: context._dependencies.smartLabel });\n    }\n    return points;\n};\n\n/**\n  * Gets the width of each group. It gets the width from axis if it is available for\n  * example when the scale is nominal else it calculates the width from the\n  * range of the axis and number of data points.\n  *\n  * @param {SimpleAxis} axis instance of axis\n  * @param {number} minDiff Minimum difference between data points\n  * @return {number} width of each bar\n  * @private\n*/\nexport const getGroupSpan = (axis, minDiff) => {\n    let groupSpan;\n    const width = axis.getUnitWidth();\n    const scale = axis.scale();\n    const range = scale.range();\n    const domain = scale.domain();\n    !width ? groupSpan = (Math.abs(range[1] - range[0]) / Math.abs(domain[1] - domain[0])) * minDiff :\n        (groupSpan = width);\n\n    return groupSpan;\n};\n\nexport const getPlotMeasurement = (context, dimensionalValues) => {\n    const fieldInfo = context.encodingFieldsInf();\n    const axes = context.axes();\n    const transformType = context.transformType();\n    const config = context.config();\n    const bandScale = context._bandScale;\n\n    return ['x', 'y'].map((type) => {\n        let span = 0;\n        let groupSpan = 0;\n        let padding = 0;\n        let offsetValues = [];\n        if (fieldInfo[`${type}FieldType`] === FieldType.DIMENSION) {\n            let actualGroupWidth;\n            const isTemporal = fieldInfo[`${type}FieldSubType`] === DimensionSubtype.TEMPORAL;\n            const timeDiff = isTemporal ? context.dataProps().timeDiffs[type] : 0;\n            const axis = axes[type];\n            const pad = config[`pad${type.toUpperCase()}`];\n            const innerPadding = config.innerPadding;\n            const keys = dimensionalValues;\n            const scale = axis.scale();\n            groupSpan = getGroupSpan(axis, timeDiff);\n            const isAxisBandScale = axis.constructor.type() === BAND;\n            const axisPadding = axis.config().padding;\n            // If it is a grouped bar then the width of each bar in a grouping is retrieved from\n            // a band scale. The band scale will have range equal to width of one group of bars and\n            // the domain is set to series keys.\n            if (transformType === 'group') {\n                const groupPadding = isAxisBandScale ? 0 : axisPadding * groupSpan / 2;\n                bandScale.range([groupPadding, groupSpan - groupPadding]).domain(keys).paddingInner(innerPadding);\n                span = bandScale.bandwidth();\n                actualGroupWidth = groupSpan - (isAxisBandScale ? 0 : axisPadding * groupSpan);\n                offsetValues = keys.map(key => bandScale(key) - (isAxisBandScale ? 0 : (groupSpan / 2)));\n            } else if (pad !== undefined) {\n                let offset;\n                if (isAxisBandScale) {\n                    const step = scale.step();\n                    offset = scale.padding() * step;\n                    span = scale.bandwidth() + offset;\n                } else {\n                    span = groupSpan;\n                }\n                offsetValues = keys.map(() => (isAxisBandScale ? -(offset / 2) : -(span / 2)));\n            } else {\n                padding = isAxisBandScale ? 0 : axisPadding * groupSpan;\n                span = groupSpan - padding;\n                actualGroupWidth = span;\n                offsetValues = keys.map(() => (isAxisBandScale ? 0 : -(span / 2)));\n            }\n\n            groupSpan = actualGroupWidth;\n            padding = isAxisBandScale ? axisPadding * axis.scale().step() : axisPadding * groupSpan;\n        }\n\n        return {\n            span,\n            offsetValues,\n            groupSpan,\n            padding\n        };\n    });\n};\n\nexport const initializeGlobalState = (context) => {\n    const store = context.store();\n    const globalState = context.constructor.getState()[0];\n    const namespace = context.metaInf().namespace;\n    for (const prop in globalState) {\n        store.append(`${STATE_NAMESPACES.LAYER_GLOBAL_NAMESPACE}.${prop}`, {\n            [namespace]: null\n        });\n    }\n};\n\nexport const resolveInvalidTransformType = (context) => {\n    const {\n        xField,\n        yField,\n        xFieldType,\n        yFieldType\n    } = context.encodingFieldsInf();\n    const groupByField = context.config().transform.groupBy;\n    const fieldsConfig = context.data().getFieldsConfig();\n    const groupByFieldMeasure = fieldsConfig[groupByField] && fieldsConfig[groupByField].def.type === FieldType.MEASURE;\n    if (!xField || !yField || groupByFieldMeasure || !groupByField || xFieldType === FieldType.DIMENSION &&\n        yFieldType === FieldType.DIMENSION) {\n        return IDENTITY;\n    }\n    return null;\n};\n\nexport const getValidTransform = context => resolveInvalidTransformType(context) || context.config().transform.type;\n\nexport const getValidTransformForAggFn = (context) => {\n    const resolvedInvalidTransformType = resolveInvalidTransformType(context);\n    if (resolvedInvalidTransformType) {\n        return resolvedInvalidTransformType;\n    }\n\n    const {\n        xField,\n        yField,\n        xFieldType,\n        yFieldType\n    } = context.encodingFieldsInf();\n    const groupByField = context.config().transform.groupBy;\n    const isCustomTransformTypeProvided = !!getObjProp(context._customConfig, 'transform', 'type');\n    let transformType = context.config().transform.type;\n\n    if (!isCustomTransformTypeProvided && groupByField && xFieldType !== yFieldType) {\n        const measureField = xFieldType === FieldType.MEASURE ? xField : yField;\n        const { [measureField]: aggFn } = retrieveNearestGroupByReducers(context.data(), measureField);\n        transformType = aggFn === AGG_FN_SUM ? STACK : GROUP;\n    }\n\n    return transformType;\n};\n\nexport const getMarkId = (source, schema) => source.filter((val, i) => schema[i] &&\n    schema[i].type === FieldType.DIMENSION).join();\n\nexport const resolveEncodingValues = (data, i, dataArr, layerInst) => {\n    const transformedValues = {};\n    const values = data.values;\n    const encoding = layerInst.config().encoding;\n    for (const key in values) {\n        const value = getObjProp(encoding[key], 'value');\n        if (value instanceof Function) {\n            transformedValues[key] = value(values, i, dataArr, layerInst);\n        } else {\n            transformedValues[key] = values[key];\n        }\n    }\n    return transformedValues;\n};\n\nexport const getColorMetaInf = (color, colorAxis) => ({\n    originalColor: colorAxis.getHslArray(color),\n    stateColor: {},\n    colorTransform: {}\n});\n\nconst getCoordValue = (radius, trig, angle, offset) => radius * Math[trig](angle) + offset;\nconst coordValueGetter = (radius, angle, xOffset, yOffset) => ({\n    x: getCoordValue(radius, 'cos', angle, xOffset),\n    y: getCoordValue(radius, 'sin', angle, yOffset)\n});\nexport const toCartesianCoordinates = (points, measurement, rangePlot = false) => {\n    const xOffset = measurement.width / 2;\n    const yOffset = measurement.height / 2;\n    for (let i = 0, len = points.length; i < len; i++) {\n        const point = points[i];\n        const { angle, radius, radius0, angle0 } = point.update;\n        point.update = coordValueGetter(radius, angle, xOffset, yOffset);\n        if (rangePlot) {\n            const update = point.update = coordValueGetter(radius0, angle0, xOffset, yOffset);\n            const { x: x0, y: y0 } = coordValueGetter(radius, angle, xOffset, yOffset);\n            update.x0 = x0;\n            update.y0 = y0;\n        }\n    }\n    return points;\n};\n\nexport const sortData = (data, axes) => {\n    const { x: xAxis, y: yAxis } = axes;\n    const axisArr = [xAxis, yAxis];\n    for (let i = 0, len = axisArr.length; i < len; i++) {\n        const axis = axisArr[i];\n        if (axis.constructor.type() === BAND) {\n            const key = i ? 'y' : 'x';\n            const dom = axis.domain();\n            const indices = dom.reduce((acc, v, idx) => {\n                acc[v] = idx;\n                return acc;\n            }, {});\n            data.sort((a, b) => indices[a[key]] - indices[b[key]]);\n            break;\n        }\n    }\n    return data;\n};\n","import { CommonProps, STATE_NAMESPACES } from 'muze-utils';\nimport { encodingFieldInfRetriever } from '../helpers';\nimport * as PROPS from '../enums/props';\n\nconst renderLayer = (context) => {\n    const mount = context.mount();\n    if (mount) {\n        context.render(mount);\n        context.dependencies().throwback.commit(CommonProps.ON_LAYER_DRAW, true);\n    }\n};\n\nexport const listenerMap = (context, ns) => [\n    {\n        props: [`${ns.local}.${PROPS.DATA}`],\n        listener: ([, data]) => {\n            const config = context.config();\n            const encodingValue = config.encoding;\n            if (data && encodingValue) {\n                const fieldsConfig = data.getFieldsConfig();\n                const encodingFieldsInf = encodingFieldInfRetriever[context.coord()](encodingValue, fieldsConfig);\n                context.encodingFieldsInf(encodingFieldsInf);\n                context.resolveTransformType();\n                context._transformedData = context.getTransformedData(data, config,\n                    context.transformType(), encodingFieldsInf);\n                context._normalizedData = context.getNormalizedData(context._transformedData, fieldsConfig);\n                const domain = context.calculateDomainFromData(context._normalizedData, context.encodingFieldsInf(),\n                    context.data().getFieldsConfig());\n                context._domain = domain;\n                !context._updateLock && context.domain(domain);\n            }\n        },\n        type: 'registerImmediateListener'\n    },\n    {\n        props: [`${ns.local}.${PROPS.CONFIG}`],\n        listener: ([, config]) => {\n            const calculateDomain = config.calculateDomain;\n            const props = context.getRenderProps();\n            const store = context.store();\n            const namespaceInf = {\n                namespace: `${STATE_NAMESPACES.LAYER_LOCAL_NAMESPACE}.${context.metaInf().namespace}`,\n                key: 'renderListener'\n            };\n            store.unsubscribe(namespaceInf);\n            if (calculateDomain === false) {\n                props.push(`${ns.local}.${PROPS.DATA}`);\n            }\n            store.registerChangeListener(props,\n                () => {\n                    renderLayer(context);\n                }, false, namespaceInf);\n        },\n        type: 'registerImmediateListener'\n    }\n];\n\n","export const DATA = 'data';\nexport const CONFIG = 'config';\nexport const MEASUREMENT = 'measurement';\nexport const DOMAIN = 'domain';\nexport const MOUNT = 'mount';\n","import { mergeRecursive } from 'muze-utils';\nimport * as PROPS from '../enums/props';\n\nexport const defaultOptions = {\n    [PROPS.CONFIG]: {\n        value: null,\n        meta: {\n            sanitization: (config, oldConfig, context) => {\n                context._customConfig = config;\n                const constructor = context.constructor;\n                const newConf = mergeRecursive({}, constructor.defaultConfig());\n\n                return constructor.defaultPolicy(newConf, config);\n            }\n        }\n    },\n    [PROPS.DATA]: {\n        value: null,\n        meta: {\n            preset: (data, context) => {\n                if (context._cacheEnabled) {\n                    context._cachedData.push(data);\n                } else {\n                    context._cachedData = [data];\n                }\n            }\n        }\n    }\n};\n","import {\n    getUniqueId,\n    mergeRecursive,\n    FieldType,\n    selectElement,\n    ReservedFields,\n    registerListeners,\n    transactor,\n    DataModel,\n    clone,\n    generateGetterSetters,\n    STATE_NAMESPACES,\n    COORD_TYPES\n} from 'muze-utils';\nimport { SimpleLayer } from '../simple-layer';\nimport * as PROPS from '../enums/props';\nimport { props } from './props';\nimport {\n    transformData,\n    getNormalizedData,\n    applyInteractionStyle,\n    initializeGlobalState,\n    getValidTransform,\n    domainCalculator\n} from '../helpers';\nimport { listenerMap } from './listener-map';\nimport { defaultOptions } from './default-options';\n\n/**\n * An abstract class which gives definition of common layer functionality like\n * - transforming data for various modes. Supported modes: identity, group and stack.\n * - calculating data domain\n * - linking dependent layers\n * - merging policy of configuration\n * - interaction sideffect helpers\n * - retrieving dom elements from data using id\n * - retrieving the physical dimensions of marks\n * - disposing layer\n *\n * Every layer has to extend base layer and give concrete definition.\n * This layer does not have any default visual. A new layer has to define the logic of `render` for rendering the\n * visuals\n *\n * @public\n * @class\n * @module BaseLayer\n */\nexport default class BaseLayer extends SimpleLayer {\n\n    /**\n     * Creates a layer using a configuration and data.\n     *\n     * @public\n     * @constructor\n     * @param {DataModel} data Instance of DataModel to be used. This DataModel instance serves as the data for a layer.\n     * @param {Object} axes Axes instances to be used for rendering the layer. Axes are used for mapping data from\n     *      value to px.\n     * @param {SimpleAxis} axes.x X axis of the layer. Based on the type of variable it gets instance of BandAxis,\n     *      TimeAxis, ContinuousAxis\n     * @param {SimpleAxis} axes.y X axis of the layer. Based on the type of variable it gets instance of BandAxis,\n     *      TimeAxis, ContinuousAxis\n     * @param {ColorAxis} axes.color Axis for coloring a layer using color interpolators\n     * @param {ShapeAxis} axes.shape Axis for providing a shape\n     * @param {SizeAxis} axes.size Axis for determining size of a mark using size interpolator\n     * @param {LayerConfig} config Configuration of the layer\n     * @param {Object} dependencies Dependencies of the layer\n     * @param {SmartLabel} dependencies.smartLabel Smartlabel singleton instance\n     */\n    constructor (data, axes, config, dependencies = {}) {\n        super();\n\n        generateGetterSetters(this, props);\n        this.data(data);\n        this.axes(axes);\n        this.config(config);\n        this.alias(this.constructor.formalName() + getUniqueId());\n        this.dependencies(dependencies);\n        this._points = [];\n        this._cachedData = [];\n        this._id = getUniqueId();\n        this._measurement = {};\n        this._animationDonePromises = [];\n        this._graphicElems = {};\n        this._customConfig = null;\n    }\n\n    static getState () {\n        return [\n            {\n                domain: {}\n            },\n            {\n                config: {},\n                data: {}\n            }\n        ];\n    }\n\n    store (...params) {\n        if (params.length) {\n            this._store = params[0];\n            const metaInf = this.metaInf();\n            const localNs = `${STATE_NAMESPACES.LAYER_LOCAL_NAMESPACE}.${metaInf.namespace}`;\n            initializeGlobalState(this);\n            const store = this.store();\n            store.append(`${STATE_NAMESPACES.LAYER_LOCAL_NAMESPACE}`, {\n                [metaInf.namespace]: null\n            });\n\n            transactor(this, defaultOptions, store.model, {\n                namespace: localNs\n            });\n            registerListeners(this, listenerMap, {\n                local: localNs,\n                global: STATE_NAMESPACES.LAYER_GLOBAL_NAMESPACE\n            }, {\n                unitRowIndex: metaInf.unitRowIndex,\n                unitColIndex: metaInf.unitColIndex\n            });\n            return this;\n        }\n        return this._store;\n    }\n\n    domain (...dom) {\n        const prop = `${STATE_NAMESPACES.LAYER_GLOBAL_NAMESPACE}.${PROPS.DOMAIN}.${this.metaInf().namespace}`;\n        if (dom.length) {\n            this.store().commit(prop, dom[0]);\n            return this;\n        }\n        return this.store().get(prop);\n    }\n\n    /**\n     * Creates a layer instance\n     * @return {BaseLayer} Instance of a layer\n     */\n    static create (...params) {\n        return new this(...params);\n    }\n\n    /**\n     * Default configuration of the layer. This configuration gets merged to the user passed configuration using a\n     * plolicy. Base layer only returns part of configuraion, any layer overridding base layer should return its own\n     * configuration.\n     *\n     * @public\n     * @static\n     *\n     * @return {Object} Default configuration\n     */\n    static defaultConfig () {\n        return {\n            transform: {\n                type: 'identity'\n            }\n        };\n    }\n\n    /**\n     * Policy defines how user config gets merged to default config. The default policy here does a deep copy\n     * operation.\n     * Any policy which does more than deep copying should define the policy as a static member.\n     *\n     * @static\n     * @public\n     *\n     * @param {LayerConfig} conf Configuration with which the user config will be merged\n     * @param {LayerConfig} userConf Configuration given by the user\n     *\n     * @return {LayerConfig} Merged layer configuration\n     */\n    static defaultPolicy (conf, userConf) {\n        return mergeRecursive(conf, userConf);\n    }\n\n    /**\n     * Determines a name for a layer. This name of the layer is used in the input data to refer to this layer.\n     * ```\n     *  .layers([\n     *      mark: 'bar',\n     *      encoding: { ... }\n     *  ])\n     * ```\n     *\n     * @static\n     * @public\n     *\n     * @return {string} name of layer\n     */\n    static formalName () {\n        return 'base';\n    }\n\n    encodingFieldsInf (...fieldsInf) {\n        if (fieldsInf.length) {\n            this._encodingFieldsInf = fieldsInf[0];\n            return this;\n        }\n        return this._encodingFieldsInf;\n    }\n\n    encodingTransform (...encodingTransform) {\n        if (encodingTransform.length) {\n            this._encodingTransform = encodingTransform[0];\n            return this;\n        }\n        return this._encodingTransform;\n    }\n\n    /**\n     * Provides a alias for a layer. Like it's possible to have same layer (like bar) multiple times, but among multiple\n     * layers of same type if one layer has to be referred, alias is used. If no alias is given then `formalName` is set\n     * as the alias name.\n     *\n     *\n     * If used as setter\n     * @param  {string} alias Name of the alias\n     * @return {BaseLayer} Instance of current base layer\n     *\n     * If used as getter\n     * @return {string} Alias of the current layer\n     *\n     * @public\n     */\n    alias (...params) {\n        if (params.length) {\n            this._alias = params[0];\n            return this;\n        }\n        return this._alias || this.constructor.formalName();\n    }\n\n    dependencies (...params) {\n        if (params.length) {\n            this._dependencies = params[0];\n            return this;\n        }\n        return this._dependencies;\n    }\n\n    enableCaching () {\n        this._cacheEnabled = true;\n        return this;\n    }\n\n    clearCaching () {\n        this._cacheEnabled = false;\n        return this.data(this._cachedData[0]);\n    }\n\n    /**\n     * Serialize the schema. Merge config is used for serialization.\n     *\n     * @public\n     *\n     * @return {LayerConfig} Serialized schema\n     */\n    serialize () {\n        return this.config();\n    }\n\n    /**\n     * Returns the unique identifier of this layer. Id is auto generated during the creation proceess of a schema.\n     *\n     * @public\n     *\n     * @return {string} id of the layer\n     */\n    id () {\n        return this._id;\n    }\n\n    /**\n     * Returns the transformed data based on given transform type.\n     * It first gets the transform method from transform factory based on type of transform. It then calls the\n     * transform method with the data and passes the configuration parameters of transform such as\n     * groupBy, value field, etc.\n     *\n     * @param {DataModel} dataModel Instance of DataModel\n     * @param {Object} config Configuration for transforming data\n     * @return {Array.<Array>} Transformed data.\n     */\n    getTransformedData (dataModel, config, transformType, encodingFieldsInf) {\n        return transformData(dataModel, config, transformType, encodingFieldsInf);\n    }\n\n    /**\n     * Calculates the domain from the data.\n     * It checks the type of field and calculates the domain based on that. For example, if it\n     * is a quantitative or temporal field, then it calculates the min and max from the data or\n     * if it is a categorical field then it gets all the values from the data of that field.\n     * @param {Array} data DataArray\n     * @param {Object} fieldsConfig Configuration of fields\n     * @return {Array} Domain values array.\n     */\n    calculateDomainFromData (data) {\n        let domains = {};\n        const isEmpty = this.data().isEmpty();\n\n        if (!isEmpty) {\n            domains = domainCalculator[this.coord()](data, this);\n        }\n        return domains;\n    }\n\n    static shouldDrawAnchors () {\n        return false;\n    }\n\n    /**\n     * Returns the domain for the axis.\n     *\n     * @param {string} encodingType type of encoding x, y, etc.\n     * @return {Object} Axis domains\n     */\n    getDataDomain (encodingType) {\n        const domains = this.store()\n            .get(`${STATE_NAMESPACES.LAYER_GLOBAL_NAMESPACE}.${PROPS.DOMAIN}.${this.metaInf().namespace}`);\n        return encodingType !== undefined ? domains[encodingType] || [] : domains;\n    }\n\n    /**\n     * Normalizes the transformed data and returns it.\n     *\n     * @param {string} encodingType type of encoding x, y, etc.\n     * @return {Object} Axis domains\n     */\n    getNormalizedData (transformedData) {\n        return getNormalizedData(transformedData, this);\n    }\n\n    /**\n     * Gets the nearest point closest to the given x and y coordinate. If no nearest point is found, then it returns\n     * null.\n     *\n     * @public\n     *\n     * @param {number} x X Coordinate.\n     * @param {number} y Y Coordinate.\n     *\n     * @return {Object} Information of the nearest point.\n     * ```\n     *      {\n     *          // id property contains the field names and their corresponding values in a 2d array. This is the data\n     *          // associated with the nearest point.\n     *          id: // Example data: [['Origin'], ['USA']],\n     *          dimensions: // Physical dimensions of the point.\n     *          layerId: // Id of the layer instance.\n     *      }\n     * ```\n     */\n    getNearestPoint () {\n        return null;\n    }\n\n    applyInteractionStyle (interactionType, selectionSet, apply, styles) {\n        const interactionConfig = this.config().interaction || {};\n\n        let interactionStyles = interactionConfig[interactionType];\n        interactionStyles = styles || interactionStyles;\n        if (interactionStyles) {\n            applyInteractionStyle(this, selectionSet, interactionStyles, {\n                apply,\n                interactionType\n            });\n        }\n    }\n\n    disableUpdate () {\n        this._updateLock = true;\n        return this;\n    }\n\n    enableUpdate () {\n        this._updateLock = false;\n        return this;\n    }\n\n    resolveTransformType () {\n        this._transformType = getValidTransform(this);\n    }\n\n    transformType () {\n        return this._transformType;\n    }\n\n    /**\n     * Renders the layer\n     * @return {BaseLayer} Instance of the layer.\n     */\n    render () {\n        return this;\n    }\n\n    /**\n     *\n     *\n     *\n     * @memberof BaseLayer\n     */\n    elemType () {\n        return 'g';\n    }\n\n    /**\n     * Disposes the entire layer.\n     *\n     * @return {BaseLayer} Instance of layer.\n     */\n    remove () {\n        this.store().unsubscribe({\n            namespace: `${STATE_NAMESPACES.LAYER_LOCAL_NAMESPACE}.${this.metaInf().namespace}`\n        });\n        selectElement(this.mount()).remove();\n        return this;\n    }\n\n    /**\n     * Stores point in an object with key as the categorical value or temporal value\n     *\n     * @param {string} key categorical value or temporal value\n     * @param {Object} data Information of the data point\n     * @return {BarLayer} Instance of bar layer\n     */\n    cachePoint (key, data) {\n        if (key === null) {\n            return this;\n        }\n        const pointMap = this._pointMap;\n        !pointMap[key] && (pointMap[key] = []);\n        pointMap[key].push(data);\n        return this;\n    }\n\n    /**\n     *\n     *\n     * @param {*} dataProps\n     *\n     * @memberof BaseLayer\n     */\n    dataProps (...dataProps) {\n        if (dataProps.length) {\n            this._dataProps = dataProps[0];\n            return this;\n        }\n        return this._dataProps;\n    }\n\n    /**\n     *\n     *\n     * @param {*} data\n     * @param {*} id\n     *\n     * @memberof BaseLayer\n     */\n    getIdentifiersFromData (data) {\n        const schema = this.data().getSchema();\n        const fieldsConfig = this.data().getFieldsConfig();\n        const identifiers = [[], []];\n        const {\n                xFieldType,\n                yFieldType,\n                xField,\n                yField\n            } = this.encodingFieldsInf();\n\n        const [xMeasure, yMeasure] = [xFieldType, yFieldType].map(type => type === FieldType.MEASURE);\n        schema.forEach((d, i) => {\n            const name = d.name;\n            if (fieldsConfig[name].def.type === FieldType.DIMENSION) {\n                identifiers[0].push(name);\n                identifiers[1].push(data[i]);\n            }\n        });\n\n        if (xMeasure && yMeasure) {\n            const xMeasureIndex = fieldsConfig[xField].index;\n            const yMeasureIndex = fieldsConfig[yField].index;\n            identifiers[0].push(...[xField, yField]);\n            identifiers[1].push(...[data[xMeasureIndex], data[yMeasureIndex]]);\n        }\n        return identifiers;\n    }\n\n    hasPlotSpan () {\n        return false;\n    }\n\n    getPlotSpan () {\n        return {\n            x: 0,\n            y: 0\n        };\n    }\n\n    getPlotPadding () {\n        return {\n            x: 0,\n            y: 0\n        };\n    }\n\n    /**\n     * Returns the information of the marks corresponding to the supplied identifiers. Identifiers are a set of field\n     * names and their corresponding values in an array. It can also be an instance of datamodel.\n     *\n     * For example,\n     * ```\n     *  const identifiers = [\n     *      ['Origin', 'Cylinders'],\n     *      ['USA', '8']\n     *  ];\n     *  const points = barLayer.getPointsFromIdentifiers(identifiers);\n     * ```\n     * @public\n     * @param {Array|DataModel} identifiers Identifiers of the marks.\n     * @param {Object} config Optional configuration which describes how to get the information.\n     * @param {boolean} config.getAllAttrs If true, then returns all the information of the points, else returns only\n     * the positions of the points.\n     * @param {boolean} config.getBBox If true, then returns the bounding box of all the marks.\n     *\n     * @return {Array} Array of points contains\n     */\n    getPointsFromIdentifiers (identifiers, config = {}) {\n        const getAllAttrs = config.getAllAttrs;\n        const getBBox = config.getBBox;\n        if (!this.data()) {\n            return [];\n        }\n        let fieldNames;\n        let values;\n        if (identifiers instanceof DataModel) {\n            const dataObj = identifiers.getData();\n            fieldNames = dataObj.schema.map(d => d.name);\n            values = dataObj.data;\n        } else {\n            fieldNames = identifiers[0];\n            values = identifiers.slice(1, identifiers.length);\n        }\n\n        const points = this._points;\n        const fieldsConfig = this.data().getFieldsConfig();\n\n        const filteredPoints = [].concat(...points).filter((point) => {\n            const { source, rowId } = point;\n\n            return fieldNames.every((field, idx) => {\n                if (field in fieldsConfig && fieldsConfig[field].def.type === FieldType.DIMENSION) {\n                    return values.findIndex(d => d[idx] === source[fieldsConfig[field].index]) !== -1;\n                } else if (field === ReservedFields.ROW_ID) {\n                    return values.findIndex(d => d[idx] === rowId) !== -1;\n                } return true;\n            });\n        });\n        return getAllAttrs ? filteredPoints : filteredPoints.map((d) => {\n            const obj = clone(d);\n            if (getBBox) {\n                const update = obj.update || obj;\n                if (obj.size !== undefined) {\n                    const sizeVal = Math.sqrt(obj.size / Math.PI) * 2;\n                    update.width = sizeVal;\n                    update.height = sizeVal;\n                    update.x -= sizeVal / 2;\n                    update.y -= sizeVal / 2;\n                } else {\n                    if (update.width === undefined) {\n                        update.width = 2;\n                    }\n                    if (update.height === undefined) {\n                        update.height = 2;\n                    }\n                }\n            }\n\n            return obj.update || obj;\n        }).sort((a, b) => a.y - b.y);\n    }\n\n    getTransformedDataFromIdentifiers (identifiers) {\n        const { data: identifierData, schema: identifierSchema } = identifiers.getData();\n        const normalizedData = this._normalizedData;\n        const fieldsConfig = this.data().getFieldsConfig();\n        const {\n            yField,\n            xField,\n            yFieldType,\n            xFieldType\n        } = this.encodingFieldsInf();\n        let measureIndex;\n        let enc;\n        if (xFieldType === FieldType.MEASURE) {\n            measureIndex = fieldsConfig[xField].index;\n            enc = 'x';\n        } else if (yFieldType === FieldType.MEASURE) {\n            measureIndex = fieldsConfig[yField].index;\n            enc = 'y';\n        }\n\n        const transformedData = [];\n        normalizedData.forEach((dataArr) => {\n            dataArr.forEach((dataObj) => {\n                const tupleArr = dataObj.source;\n                const exist = identifierSchema.every((obj, i) =>\n                    identifierData.findIndex(d => tupleArr[fieldsConfig[obj.name].index] === d[i]) !== -1);\n                if (exist) {\n                    const transformedVal = dataObj[enc];\n                    const row = dataObj.source;\n                    const tuple = {};\n                    for (const key in fieldsConfig) {\n                        const index = fieldsConfig[key].index;\n                        tuple[key] = row[index];\n                        if (index === measureIndex) {\n                            tuple[key] = transformedVal;\n                        }\n                    }\n                    transformedData.push(tuple);\n                }\n            });\n        });\n\n        return [transformedData, this.data().getSchema()];\n    }\n\n    /**\n     * Returns the dom elements associated with the supplied set of row ids.\n     * Each element in the layer is mapped with a row of the datamodel. When given an array of row ids, it returns all\n     * the elements which is mapped with those row ids.\n     *\n     * @public\n     * @param {Array} set Array of row ids\n     *\n     * @return {Selection} D3 Selection of dom elements.\n     */\n    getPlotElementsFromSet (set) {\n        const graphicElems = this._graphicElems;\n        const elems = [];\n        for (let i = 0, len = set.length; i < len; i++) {\n            const elem = graphicElems[set[i]];\n            if (elem) {\n                elems.push(elem);\n            }\n        }\n        return elems;\n    }\n\n    /**\n     * Notifies when all animations/transitions of the layer are completed.\n     *\n     * @public\n     * @return {Promise} Returns a promise to notify the animation completion.\n     */\n    animationDone () {\n        return Promise.all(this._animationDonePromises);\n    }\n\n    registerAnimationDoneHook () {\n        let resolveFn;\n        const promise = new Promise((resolve) => {\n            resolveFn = resolve;\n        });\n        this._animationDonePromises.push(promise);\n\n        return () => {\n            resolveFn();\n        };\n    }\n\n    getRenderProps () {\n        const metaInf = this.metaInf();\n        if (this.coord() === COORD_TYPES.POLAR) {\n            return [`${STATE_NAMESPACES.GROUP_GLOBAL_NAMESPACE}.domain.radius`];\n        }\n        return [`${STATE_NAMESPACES.GROUP_GLOBAL_NAMESPACE}.domain.y.${metaInf.unitRowIndex}0`,\n            `${STATE_NAMESPACES.GROUP_GLOBAL_NAMESPACE}.domain.x.${metaInf.unitColIndex}0`];\n    }\n}\n","import {\n    selectElement,\n    makeElement,\n    pathInterpolators,\n    Symbols\n} from 'muze-utils';\nimport { updateStyle } from '../../helpers';\n\nconst line = Symbols.line;\n\nconst filterFn = (d) => {\n    const { update } = d;\n    return update.y !== null && update.x !== null;\n};\n\n/**\n * Draws a line from the points\n * Generates a svg path string\n * @param {Object} params Contains container, points and interpolate attribute.\n */\nexport const drawLine = (context) => {\n    let filteredPoints;\n    const { layer, container, points, interpolate, connectNullData, className, style, transition } = context;\n    const mount = selectElement(container).attr('class', className);\n    const curveInterpolatorFn = pathInterpolators[interpolate];\n    const linepath = line()\n                .curve(curveInterpolatorFn)\n                .x(d => d.update.x)\n                .y(d => d.update.y)\n                .defined(filterFn);\n\n    filteredPoints = points;\n    if (connectNullData) {\n        filteredPoints = points.filter(filterFn);\n    }\n\n    updateStyle(mount, style);\n    let element = makeElement(mount, 'path', points.length ? [points[0].className] : []);\n    element.attr('class', d => d);\n    if (!transition.disabled) {\n        element = element.transition()\n        .duration(transition.duration)\n        .on('end', layer.registerAnimationDoneHook());\n    }\n    element.attr('d', linepath(filteredPoints))\n                    .style('fill-opacity', 0);\n    return element;\n};\n","import { CLASSPREFIX } from '../../enums/constants';\n\nexport const defaultConfig = {\n    classPrefix: CLASSPREFIX,\n    defClassName: 'layer-line',\n    className: '',\n    interpolate: 'linear',\n    transform: {\n        type: 'group'\n    },\n    interaction: {\n        highlight: [{\n            type: 'stroke',\n            intensity: [0, 0, -15, 0]\n        }],\n        fade: [{\n            type: 'stroke',\n            intensity: [0, 0, +15, 0]\n        }],\n        focus: [{\n            type: 'stroke',\n            intensity: [0, 0, +15, 0]\n        }]\n    },\n    nearestPointThreshold: 20,\n    encoding: {\n        color: {},\n        x: {},\n        y: {},\n        strokeOpacity: {\n            value: 1\n        }\n    },\n    transition: {\n        effect: 'cubic',\n        duration: 1000\n    },\n    connectNullData: false\n};\n\n","import {\n    Voronoi,\n    getQualifiedClassName,\n    selectElement,\n    makeElement,\n    FieldType,\n    InvalidAwareTypes,\n    getObjProp\n} from 'muze-utils';\nimport { BaseLayer } from '../../base-layer';\nimport { drawLine } from './renderer';\nimport { defaultConfig } from './default-config';\nimport { ENCODING } from '../../enums/constants';\nimport {\n    attachDataToVoronoi,\n    animateGroup,\n    positionPoints,\n    getIndividualClassName,\n    getColorMetaInf,\n    resolveEncodingValues,\n    sortData\n} from '../../helpers';\n\nimport './styles.scss';\n\n/**\n * This layer is used to render straight or smoothed line paths. The mark type of this layer is ```line```.\n *\n * @public\n *\n * @class\n * @module LineLayer\n * @extends BaseLayer\n */\nexport default class LineLayer extends BaseLayer {\n\n    /**\n     * Creates an instance of LineLayer.\n     * @param {*} args\n     * @memberof LineLayer\n     */\n    constructor (...args) {\n        super(...args);\n        this._voronoi = new Voronoi();\n    }\n\n    static formalName () {\n        return 'line';\n    }\n\n    elemType () {\n        return 'path';\n    }\n\n    /**\n     * Default configuration of line layer\n     * @return {Object} Default configuration of layer\n     */\n    static defaultConfig () {\n        return defaultConfig;\n    }\n\n    static defaultPolicy (conf, userConf) {\n        const config = BaseLayer.defaultPolicy(conf, userConf);\n        const encoding = config.encoding;\n        const transform = config.transform;\n        const colorField = encoding.color && encoding.color.field;\n\n        if (colorField && !transform.groupBy) {\n            transform.groupBy = colorField;\n        }\n        return config;\n    }\n\n    /**\n     * Returns the draw method for line\n     * @return {Function} Draw method of line layer\n     */\n    getDrawFn () {\n        return drawLine;\n    }\n\n    static shouldDrawAnchors () {\n        return true;\n    }\n\n    /**\n     * Generates the x and y positions for each point\n     * @param {Array} data Data Array\n     * @param {Object} encoding Visual Encodings of the layer\n     * @param {Object} axes Contains the axis\n     * @param {number} seriesIndex index of series\n     * @return {Array} Array of points\n     */\n    translatePoints (data) {\n        let points = [];\n        const axes = this.axes();\n        const xAxis = axes.x;\n        const yAxis = axes.y;\n        const colorAxis = axes.color;\n        const { xFieldType, yFieldType } = this.encodingFieldsInf();\n        const isXDim = xFieldType === FieldType.DIMENSION;\n        const isYDim = yFieldType === FieldType.DIMENSION;\n        const key = isXDim ? ENCODING.X : (isYDim ? ENCODING.Y : null);\n        sortData(data, axes);\n        points = data.map((d, i) => {\n            const xPx = xAxis.getScaleValue(d.x) + xAxis.getUnitWidth() / 2;\n            const yPx = yAxis.getScaleValue(d.y) + yAxis.getUnitWidth() / 2;\n            const color = colorAxis.getColor(d.color);\n\n            const resolvedEncodings = resolveEncodingValues({\n                values: {\n                    x: xPx,\n                    y: yPx,\n                    color\n                },\n                data: d\n            }, i, data, this);\n\n            const point = {\n                enter: {},\n                update: {\n                    x: d.x instanceof InvalidAwareTypes ? null : resolvedEncodings.x,\n                    y: d.y instanceof InvalidAwareTypes ? null : resolvedEncodings.y\n                },\n                style: {\n                    stroke: resolvedEncodings.color,\n                    'fill-opacity': 0\n                },\n                rowId: d.rowId,\n                source: d.source,\n                meta: getColorMetaInf(resolvedEncodings.color, colorAxis)\n            };\n            point.className = getIndividualClassName(d, i, data, this);\n            this.cachePoint(d[key], point);\n            return point;\n        });\n        points = positionPoints(this, points);\n\n        points = points.filter((point) => {\n            const { update } = point;\n            return !isNaN(update.x) && !isNaN(update.y);\n        });\n        return points;\n    }\n\n    /**\n     * Renders the line plot\n     * @param {SVGElement} container svg element\n     * @return {LineLayer} instance of line layer\n     */\n    render (container) {\n        let points;\n        let seriesClassName;\n        let style;\n\n        const config = this.config();\n        const {\n            encoding,\n            interpolate,\n            className,\n            defClassName,\n            transition\n        } = config;\n        const normalizedData = this._normalizedData;\n        const transformedData = this._transformedData;\n        const fieldsConfig = this.data().getFieldsConfig();\n        const axes = this.axes();\n        const keys = transformedData.map(d => d.key);\n        const qualifiedClassName = getQualifiedClassName(defClassName, this.id(), config.classPrefix);\n        const containerSelection = selectElement(container);\n        const colorField = encoding.color.field;\n        const colorFieldIndex = fieldsConfig[colorField] && fieldsConfig[colorField].index;\n\n        this._points = [];\n        this._pointMap = {};\n        containerSelection.classed(qualifiedClassName.join(' '), true);\n        containerSelection.classed(className, true);\n        makeElement(container, 'g', normalizedData, null, {\n            enter: (group) => {\n                animateGroup(group, {\n                    transition,\n                    groupAnimateStyle: {\n                        enter: {\n                            'stroke-opacity': 0,\n                            'fill-opacity': this.getPathStyle()['fill-opacity']\n                        },\n                        update: {\n                            'stroke-opacity': encoding.strokeOpacity.value\n                        }\n                    }\n                });\n            },\n            update: (group, dataArr, i) => {\n                points = this.translatePoints(dataArr);\n                this._points.push(points);\n                seriesClassName = `${qualifiedClassName[0]}-${keys[i] || i}`.toLowerCase();\n\n                let color;\n                const colorValFn = encoding.color.value;\n                const colorVal = points.find(d => d.source[colorFieldIndex] !== null &&\n                        d.source[colorFieldIndex] !== undefined);\n\n                if (colorValFn) {\n                    color = colorValFn(dataArr, i, normalizedData);\n                } else {\n                    color = axes.color.getColor(colorVal && colorVal.source[colorFieldIndex]);\n                }\n\n                style = this.getPathStyle(color);\n                this.getDrawFn()({\n                    layer: this,\n                    container: group.node(),\n                    interpolate,\n                    points,\n                    className: seriesClassName,\n                    transition,\n                    style: style || {},\n                    connectNullData: config.connectNullData\n                });\n            }\n        }, d => d[0].source[colorFieldIndex] || d[0].rowId);\n\n        attachDataToVoronoi(this._voronoi, this._points);\n        return this;\n    }\n\n    /**\n     * Get the css styles need to be applied on the line path\n     * @param {string} color Color value\n     * @return {Object} Path styles\n     */\n    getPathStyle (color) {\n        return {\n            stroke: color,\n            'fill-opacity': '0'\n        };\n    }\n\n    /**\n     * Gets the nearest point closest to the given position\n     * @param {number} x x position\n     * @param {number} y y position\n     * @return {Object} Nearest point information\n     */\n    getNearestPoint (x, y, config) {\n        let searchRadius = config.searchRadius;\n        const data = this.data();\n\n        if (!data || (data && data.isEmpty())) {\n            return null;\n        }\n\n        searchRadius = searchRadius !== undefined ? searchRadius : this.config().nearestPointThreshold;\n        const point = this._voronoi.find(x, y, searchRadius);\n        const dimensions = getObjProp(point, 'data', 'data', 'update');\n\n        if (point) {\n            const { source, rowId } = point.data.data;\n            const identifiers = this.getIdentifiersFromData(source, rowId);\n            return {\n                id: identifiers,\n                dimensions: [{\n                    x: dimensions.x,\n                    y: dimensions.y,\n                    width: 2,\n                    height: 2\n                }],\n                layerId: this.id()\n            };\n        }\n        return null;\n    }\n}\n","import {\n    easeFns,\n    selectElement,\n    pathInterpolators,\n    Symbols\n} from 'muze-utils';\n\nconst area = Symbols.area;\n/**\n * Draws a line from the points\n * Generates a svg path string\n * @param {Object} params Contains container, points and interpolate attribute.\n */\nconst /* istanbul ignore next */ drawArea = (params) => {\n    let filteredPoints;\n    const { layer, container, points, style, transition, className, connectNullData, interpolate } = params;\n\n    const { effect: easeEffect, duration } = transition;\n    const mount = selectElement(container);\n    const curveInterpolatorFn = pathInterpolators[interpolate];\n    const selection = mount.selectAll('path').data(points.length ? [points[0].className] : []);\n    const [enterAreaPath, updateAreaPath] = ['enter', 'update'].map(e => area().curve(curveInterpolatorFn)\n                    .x(d => d[e].x)\n                    .y1(d => d[e].y)\n                    .y0(d => d[e].y0)\n                    .defined(d => d[e].y !== null\n            ));\n\n    filteredPoints = points;\n    mount.attr('class', className);\n    if (connectNullData) {\n        filteredPoints = points.filter(d => d.update.y !== null);\n    }\n    const selectionEnter = selection.enter().append('path').attr('d', enterAreaPath(filteredPoints));\n    selection.merge(selectionEnter).transition().ease(easeFns[easeEffect])\n                    .duration(duration)\n                    .on('end', layer.registerAnimationDoneHook())\n                    .attr('d', updateAreaPath(filteredPoints))\n                    .each(function (d) {\n                        const element = selectElement(this);\n                        element.attr('class', d);\n                        Object.keys(style).forEach(key => element.style(key, style[key]));\n                    });\n};\n\nexport default drawArea;\n","import { FieldType, InvalidAwareTypes } from 'muze-utils';\nimport { defaultConfig } from './default-config';\nimport { LineLayer } from '../line';\nimport drawArea from './renderer';\nimport './styles.scss';\nimport { STACK, ENCODING } from '../../enums/constants';\nimport {\n    getAxesScales,\n    positionPoints,\n    getIndividualClassName,\n    getValidTransformForAggFn,\n    getColorMetaInf,\n    resolveEncodingValues,\n    sortData\n} from '../../helpers';\n\n/**\n * Area layer renders a closed path. The mark type of this layer is ```area```. This layer can be used\n * to create stacked or multi-series areas and vertical range area plots by using the encoding properties.\n *\n * To create this layer using layer configuration from canvas,\n * ```\n *      canvas.layers([{\n *          mark: 'area',\n *          transform: {\n *              type: 'stack' // Produces a stacked area.\n *          }\n *      }]);\n * ```\n *\n * @public\n *\n * @class\n * @module AreaLayer\n * @extends LineLayer\n */\nexport default class AreaLayer extends LineLayer {\n    /** oation of line layer\n     * @return {Object} Default configuration of layer\n     */\n    static defaultConfig () {\n        return defaultConfig;\n    }\n\n    /**\n     *\n     *\n     * @static\n     *\n     * @memberof AreaLayer\n     */\n    static formalName () {\n        return 'area';\n    }\n\n    /**\n     * Calculates the domain from data. It calls its parent class's method which is line layer\n     * to get the domain and overwrites the domain according to its need.\n     * @return {Array} Domain values\n     */\n    calculateDomainFromData (data, encodingFieldsInf, fieldsConfig) {\n        const domains = super.calculateDomainFromData(data, fieldsConfig);\n        [ENCODING.X, ENCODING.Y].forEach((type) => {\n            const { [`${type}FieldType`]: fieldType } = encodingFieldsInf;\n            if (fieldType === FieldType.MEASURE && domains[type] !== undefined) {\n                domains[type][0] = Math.min(domains[type][0], 0);\n                domains[type][1] = Math.max(0, domains[type][1]);\n            }\n        });\n        return domains;\n    }\n\n    /**\n     * Returns the drawing method of this layer\n     * @return {Function} Draw method\n     */\n    getDrawFn () {\n        return drawArea;\n    }\n\n    /**\n     * Generates the x and y positions for each point\n     * @param {Array} data Data Array\n     * @param {Object} encoding Visual Encodings of the layer\n     * @param {Object} axes Contains the axis\n     * @return {Array} Array of points\n     */\n    translatePoints (data) {\n        let points = [];\n        const transformType = this.transformType();\n        const axes = this.axes();\n        const colorAxis = axes.color;\n        const config = this.config();\n        const fieldsConfig = this.data().getFieldsConfig();\n        const { xField, yField, y0Field } = this.encodingFieldsInf();\n        const {\n            xAxis,\n            yAxis\n       } = getAxesScales(axes);\n        const classNameFn = config.individualClassName;\n        const isXDim = fieldsConfig[xField] && fieldsConfig[xField].def.type === FieldType.DIMENSION;\n        const isYDim = fieldsConfig[yField] && fieldsConfig[yField].def.type === FieldType.DIMENSION;\n        const key = isXDim ? 'x' : (isYDim ? 'y' : null);\n        const minYVal = yAxis.domain()[0];\n        const basePos = minYVal < 0 ? yAxis.getScaleValue(0) : yAxis.getScaleValue(minYVal);\n        sortData(data, axes);\n        points = data.map((d, i) => {\n            let color;\n            const xPx = xAxis.getScaleValue(d.x) + xAxis.getUnitWidth() / 2;\n            const yPx = yAxis.getScaleValue(d.y);\n            const y0Px = (y0Field || transformType === STACK) ? yAxis.getScaleValue(d.y0) : basePos;\n            color = colorAxis.getColor(d.color);\n            const invalidY = d.y instanceof InvalidAwareTypes;\n            const invalidY0 = d.y0 instanceof InvalidAwareTypes;\n            const resolvedValues = resolveEncodingValues({\n                values: {\n                    x: xPx,\n                    y: yPx,\n                    y0: y0Px,\n                    color\n                },\n                data: d\n            }, i, data, this);\n            color = resolvedValues.color;\n            const point = {\n                enter: {\n                    x: xPx,\n                    y: invalidY ? null : basePos,\n                    y0: invalidY0 ? null : basePos\n                },\n                update: {\n                    x: xPx,\n                    y: invalidY ? null : resolvedValues.y,\n                    y0: invalidY0 ? null : resolvedValues.y0\n                },\n                source: d.source,\n                rowId: d.rowId,\n                className: classNameFn ? classNameFn(d, i, data, this) : '',\n                style: {\n                    fill: color\n                },\n                meta: getColorMetaInf(color, colorAxis)\n            };\n            point.className = getIndividualClassName(d, i, data, this);\n            this.cachePoint(d[key], point);\n            return point;\n        });\n        points = positionPoints(this, points);\n        points = points.filter((point) => {\n            const update = point.update;\n            return !isNaN(update.x) && !isNaN(update.y);\n        });\n        return points;\n    }\n\n    resolveTransformType () {\n        this._transformType = getValidTransformForAggFn(this);\n    }\n\n    /**\n     * Get the css styles need to be applied on the line path\n     * @param {string} color Color value\n     * @return {Object} Path styles\n     */\n    getPathStyle (color) {\n        return {\n            fill: color\n        };\n    }\n}\n\n","import { CLASSPREFIX } from '../../enums/constants';\n\nexport const defaultConfig = {\n    classPrefix: CLASSPREFIX,\n    defClassName: 'layer-arc',\n    padding: { top: 1, bottom: 1, left: 1, right: 1 },\n    className: '',\n    interaction: {\n        highlight: [{\n            type: 'fill',\n            intensity: [0, 0, -15, 0]\n        }],\n        fade: [{\n            type: 'fill',\n            intensity: [0, 0, +15, 0]\n        }],\n        focus: [{\n            type: 'fill',\n            intensity: [0, 0, +15, 0]\n        }]\n    },\n    height: 100,\n    width: 100,\n    sort: '',\n    colors: ['#F44336', 'blue', 'green', 'yellow', 'orange', 'purple'],\n    transform: {\n        type: 'identity'\n    },\n    encoding: {\n        'stroke-width': {\n            value: '2px'\n        },\n        'stroke-linejoin': {\n            value: 'round'\n        },\n        angle: {\n            value: '1'\n        },\n        radius: {\n            value: '1'\n        },\n        opacity: {\n            value: '1'\n        },\n        color: {\n            value: '1'\n        },\n        shape: {\n            value: '1'\n        },\n        size: {\n            value: '1'\n        }\n    },\n    transition: {\n        effect: 'cubic',\n        duration: 500\n    },\n    states: {\n        highlight: {\n            className: `${CLASSPREFIX}-layer-arc-highlight`\n        },\n        fadeout: {\n            className: `${CLASSPREFIX}-layer-arc-fadeout`\n        },\n        selected: {\n            className: `${CLASSPREFIX}-layer-arc-selected`\n        }\n    }\n};\n\n","import {\n    makeElement,\n    selectElement,\n    getQualifiedClassName,\n    isSimpleObject,\n    Symbols,\n    FieldType,\n    ReservedFields\n} from 'muze-utils';\nimport { defaultConfig } from './default-config';\nimport { BaseLayer } from '../../base-layer';\nimport { getIndividualClassName, resolveEncodingValues, getColorMetaInf } from '../../helpers';\nimport { tweenPie, tweenExitPie, getPreviousPoint } from './arc-helper';\nimport './styles.scss';\n\nconst arc = Symbols.arc;\n\n/**\n * Arc Layer creates a plot with polar coordinates.\n *\n * @public\n *\n * @class\n * @module ArcLayer\n * @extends BaseLayer\n */\nexport default class ArcLayer extends BaseLayer {\n\n    constructor (data, axes, config, dependencies) {\n        super(data, axes, config, dependencies);\n        this._prevPieData = {};\n    }\n\n    /**\n     * returns the default configuration of the layer\n     *\n     * @static\n     * @return {Object} Default configuration for arc layer\n     * @memberof ArcLayer\n     */\n    static defaultConfig () {\n        return defaultConfig;\n    }\n\n    static formalName () {\n        return 'arc';\n    }\n\n    elemType () {\n        return 'path';\n    }\n\n    /**\n     *\n     *\n     * @param {Object} x\n     * @param {Object} y\n     * @return {}\n     * @memberof ArcLayer\n     */\n    getNearestPoint (x, y, config = {}) {\n        const dataPoint = selectElement(config.event.target).data()[0];\n        if (isSimpleObject(dataPoint)) {\n            const { source, rowId } = dataPoint;\n            return {\n                id: this.getIdentifiersFromData(source, rowId),\n                layerId: this.id()\n            };\n        }\n        return null;\n    }\n\n    translatePoints (data) {\n        const { angle, color: colorAxis, radius: radiusAxis } = this.axes();\n        const pieIndex = {};\n        const prevData = this._points[0] || [];\n        const points = [];\n        const angleV = {};\n\n        this._prevPieData = {};\n        prevData.forEach((e, index) => {\n            this._prevPieData[e.rowId] = [e, index];\n            pieIndex[e.index] = e;\n        });\n        data.forEach((d, i) => {\n            const angles = angle.getScaleValue(d.angle);\n            !angleV[d.angle] && (angleV[d.angle] = 0);\n            const { startAngle, endAngle } = angles[angleV[d.angle]++];\n            const uid = d.rowId;\n            const resolvedEncodings = resolveEncodingValues({\n                values: {\n                    radius: radiusAxis.getOuterRadius(d.radius),\n                    radius0: radiusAxis.getInnerRadius(d.radius0),\n                    color: colorAxis.getColor(d.color),\n                    angle0: startAngle,\n                    angle: endAngle,\n                    startAngle,\n                    endAngle,\n                    startAngle0: startAngle,\n                    endAngle0: endAngle\n                },\n                data: d\n            }, i, data, this);\n            const color = resolvedEncodings.color;\n            points.push({\n                source: d.source,\n                index: i,\n                enter: {},\n                update: {\n                    angle0: resolvedEncodings.angle0,\n                    angle: resolvedEncodings.angle,\n                    radius0: resolvedEncodings.radius0,\n                    radius: resolvedEncodings.radius\n                },\n                color,\n                meta: getColorMetaInf(resolvedEncodings.color, colorAxis),\n                rowId: uid,\n                _previousInfo: this._prevPieData[uid] ? this._prevPieData[uid][0] :\n                    getPreviousPoint(pieIndex, i, this)\n            });\n        });\n        return points;\n    }\n\n    /**\n     *\n     *\n     * @param {Object} container\n     * @return {}\n     * @memberof ArcLayer\n     */\n    render (container) {\n        const measurement = this.measurement();\n        const {\n            classPrefix,\n            defClassName,\n            cornerRadius,\n            padAngle,\n            padRadius,\n            transition\n       } = this.config();\n        const qualClassName = getQualifiedClassName(defClassName, this.id(), classPrefix);\n        // This returns a function that generates the arc path based on the datum provided\n        const path = this._arcFn = arc()\n                .cornerRadius(cornerRadius)\n                .startAngle(d => d.update.angle0 + Math.PI / 2)\n                .endAngle(d => d.update.angle + Math.PI / 2)\n                .padAngle(padAngle)\n                .padRadius(padRadius)\n                .outerRadius(d => d.update.radius)\n                .innerRadius(d => d.update.radius0);\n\n        this._points = this._normalizedData.map(arr => this.translatePoints(arr));\n        const graphicElems = this._graphicElems = {};\n        // Creating the group that holds all the arcs\n        const g = makeElement(selectElement(container), 'g', this._points, `${qualClassName[0]}-group`)\n                .classed(`${qualClassName[1]}-group`, true)\n                .attr('transform', `translate(${measurement.width / 2},\n                    ${measurement.height / 2})`);\n        const tween = (elem) => {\n            makeElement(elem, 'path', d => [d], `${qualClassName[0]}-path`)\n                .style('fill', d => d.color)\n                .each(function (d) {\n                    graphicElems[d.rowId] = selectElement(this);\n                })\n                .transition()\n                .duration(transition.duration)\n                .on('end', this.registerAnimationDoneHook())\n                .attrTween('d', (...params) => tweenPie(path, params))\n                .attr('class', (d, i) => {\n                    const individualClass = getIndividualClassName(d, i, this._points, this);\n                    return `${qualClassName[0]}-path ${qualClassName[1]}-path-${d.index}\n                        ${individualClass}`;\n                });\n        };\n        const consecutiveExits = [];\n        let exitCounter = 0;\n        const tweenExit = (elem, d) => {\n            let exitArr = consecutiveExits[exitCounter];\n            const oldExitCounter = exitCounter;\n            if (!exitArr) {\n                exitArr = [{ elem, datum: d }];\n            } else if (exitArr[exitArr.length - 1].datum.index === d.index - 1) {\n                exitArr.push({ elem, datum: d });\n            } else {\n                exitCounter++;\n            }\n            consecutiveExits[oldExitCounter] = exitArr;\n        };\n        // Creating groups for all the arcs present individually\n        makeElement(g, 'g', d => d, `${qualClassName[0]}`,\n            {\n                update: tween,\n                exit: tweenExit\n            })\n                        .attr('class', (d, i) => `${qualClassName[0]} ${qualClassName[1]}-${i}`);\n        tweenExitPie(consecutiveExits, transition, path);\n        return this;\n    }\n\n    getPointsFromIdentifiers (identifiers) {\n        if (!this.data()) {\n            return [];\n        }\n        const fieldNames = identifiers[0];\n        const values = identifiers.slice(1, identifiers.length);\n        const pieSlices = selectElement(this.mount()).selectAll('path').data();\n        const fieldsConfig = this.data().getFieldsConfig();\n\n        const filteredPies = pieSlices.filter((tData) => {\n            const { source, rowId } = tData;\n            return fieldNames.every((field, idx) => {\n                if (field in fieldsConfig && fieldsConfig[field].def.type === FieldType.DIMENSION) {\n                    return values.findIndex(d => d[idx] === source[fieldsConfig[field].index]) !== -1;\n                } else if (field === ReservedFields.ROW_ID) {\n                    return values.findIndex(d => d[idx] === rowId) !== -1;\n                } return true;\n            });\n        });\n\n        const pieSliceInf = filteredPies[0];\n        if (pieSliceInf) {\n            const measurement = this.measurement();\n            const centroid = this._arcFn.centroid(pieSliceInf);\n            return [{\n                x: centroid[0] + measurement.width / 2,\n                y: centroid[1] + measurement.height / 2,\n                width: 2,\n                height: 2\n            }];\n        }\n        return [];\n    }\n}\n","import { getObjProp, interpolator, FieldType, selectElement } from 'muze-utils';\nimport { ANGLE, RADIUS, SIZE, COLOR } from '../../enums/constants';\n\nexport const getPreviousPoint = (prevData, currIndex, context) => {\n    const prevArc = prevData[currIndex - 1];\n    const nextArc = prevData[currIndex];\n    const [startAngle, endAngle] = context.axes().angle.range();\n    if (prevArc && nextArc) {\n        return {\n            update: {\n                angle0: getObjProp(prevArc, 'update', 'angle'),\n                angle: getObjProp(nextArc, 'update', 'angle0')\n            }\n        };\n    } else if (!nextArc) {\n        return {\n            update: {\n                angle0: (endAngle - 90) * Math.PI * 2 / 360,\n                angle: (endAngle - 90) * Math.PI * 2 / 360\n            }\n        };\n    }\n    return {\n        update: {\n            angle0: (startAngle - 90) * Math.PI * 2 / 360,\n            angle: (startAngle - 90) * Math.PI * 2 / 360\n        }\n    };\n};\n\nexport const tweenPie = (path, b) => {\n    const datum = b[0];\n    return function (t) {\n        return path(interpolator()(datum._previousInfo, datum)(t));\n    };\n};\n\nexport const tweenExitPie = (consecutiveExits, transition, path) => {\n    if (consecutiveExits.length > 0) {\n        consecutiveExits.forEach((consecutiveExitArr) => {\n            const startAngle = consecutiveExitArr[0].datum.update.angle0;\n            const endAngle = consecutiveExitArr[consecutiveExitArr.length - 1].datum.update.angle;\n            const mid = (Math.PI * 2 * startAngle) / ((Math.PI * 2) + startAngle - endAngle);\n\n            consecutiveExitArr.forEach((e) => {\n                const { elem, datum } = e;\n\n                elem.each(function () {\n                    const gElem = selectElement(this);\n                    gElem.selectAll('path')\n                                    .transition()\n                                    .duration(transition.duration)\n                                    .attrTween('d', () => function (t) {\n                                        return path(interpolator()(datum, {\n                                            update: {\n                                                angle0: mid,\n                                                angle: mid,\n                                                radius: datum.radius,\n                                                radius0: datum.radius0\n                                            }\n                                        })(t));\n                                    })\n                                    .remove();\n                    gElem.remove();\n                });\n            });\n        });\n    }\n};\n\nexport const getFieldIndices = (encoding, fieldsConfig) => {\n    const [angleField, radiusField, colorField, sizeField] = [ANGLE, RADIUS, COLOR, SIZE]\n            .map(e => encoding[e].field);\n    const [angleIndex, sizeIndex, radiusIndex] = [angleField, sizeField, radiusField]\n        .map((e) => {\n            const conf = fieldsConfig[e];\n            if (conf && conf.def.type === FieldType.MEASURE) {\n                return conf.index;\n            }\n            return null;\n        });\n    const colorIndex = getObjProp(fieldsConfig, colorField, 'index');\n    return {\n        angleIndex,\n        sizeIndex,\n        radiusIndex,\n        colorIndex\n    };\n};\n","import {\n    setAttrs,\n    setStyles,\n    selectElement,\n    makeElement,\n    getSmartComputedStyle\n} from 'muze-utils';\n\n/**\n * Draws svg text in the specified container.\n * @param {SVGElement} container Container where labels will be appended.\n * @param {Array.<Object>} data Data of the elements.\n * @return {Selection} d3 selection of the elements.\n */\nconst drawText = (container, data, config, layerInst) => {\n    const selection = selectElement(container).selectAll('g').data(data);\n    const { smartLabel } = layerInst._dependencies;\n    const graphicElems = layerInst._graphicElems;\n\n    const selectionMerge = selection.enter().append('g')\n        .each(function (dataObj) {\n            setAttrs(this, dataObj.enter);\n        })\n        .merge(selection);\n    const style = getSmartComputedStyle(selectElement(container), config.className);\n    const fontSize = parseInt(style.fontSize, 10);\n\n    smartLabel.setStyle(style);\n    selectionMerge.each(function (dataObj) {\n        const element = selectElement(this);\n        graphicElems[dataObj.rowId] = element;\n        const { update, text, color, textanchor, style: textStyle } = dataObj;\n        const background = dataObj.background;\n        let backgroundVal;\n        if (backgroundVal = background.value) {\n            const backgroundPadding = background.padding;\n            let diff;\n            const { width, height } = smartLabel.getOriSize(dataObj.text);\n            const backgroundEl = makeElement(element, 'rect', [1]);\n\n            if (textanchor === 'end') {\n                diff = width;\n            } else if (textanchor === 'start') {\n                diff = 0;\n            } else {\n                diff = width / 2;\n            }\n\n            setAttrs(backgroundEl.node(), {\n                x: update.x - diff - backgroundPadding / 2,\n                y: update.y - fontSize - backgroundPadding / 2,\n                width: width + backgroundPadding,\n                height: height + backgroundPadding\n            });\n            background && setStyles(backgroundEl, {\n                background: backgroundVal\n            });\n        }\n        const textEl = makeElement(element, 'text', d => [d]).text(text);\n        const textNode = textEl.node();\n        textStyle && setStyles(textNode, textStyle);\n        color && setStyles(textNode, {\n            fill: color\n        });\n        dataObj.className && textEl.classed(dataObj.className, true);\n        setAttrs(textNode, update);\n        textEl.attr('text-anchor', textanchor);\n        textEl.attr('alignment-baseline', dataObj['alignment-baseline']);\n        textEl.attr('transform', `rotate(${dataObj.rotation} ${update.x} ${update.y})`);\n    });\n    selection.exit().remove();\n    return selection;\n};\n\nexport default drawText;\n","import { CLASSPREFIX } from '../../enums/constants';\n\nexport const defaultConfig = {\n    defClassName: 'layer-text',\n    classPrefix: CLASSPREFIX,\n    className: '',\n    transform: {\n        type: 'identity'\n    },\n    interaction: {\n        highlight: [{\n            type: 'fill',\n            intensity: [0, 0, -15, 0]\n        }],\n        fade: [{\n            type: 'fill',\n            intensity: [0, 0, +15, 0]\n        }],\n        focus: [{\n            type: 'fill',\n            intensity: [0, 0, +15, 0]\n        }]\n    },\n    transition: {\n        effect: 'cubic',\n        duration: 1000\n    },\n    encoding: {\n        color: {},\n        size: {},\n        radius: {},\n        angle: {},\n        text: {\n            value: '',\n            formatter: (val, i, data, context) => {\n                const valueParser = context.valueParser();\n                return valueParser(val);\n            },\n            background: {\n                padding: 10\n            }\n        },\n        rotation: {\n            value: 0\n        },\n        'alignment-baseline': {\n            value: 'middle'\n        }\n    },\n    states: {\n        highlight: {\n            className: `${CLASSPREFIX}-layer-text-highlight`\n        },\n        fadeout: {\n            className: `${CLASSPREFIX}-layer-text-fadeout`\n        },\n        selected: {\n            className: `${CLASSPREFIX}-layer-text-selected`\n        }\n    }\n};\n","import {\n    getQualifiedClassName,\n    selectElement,\n    setStyles,\n    createElements\n} from 'muze-utils';\nimport { BaseLayer } from '../../base-layer';\nimport drawText from './renderer';\nimport { defaultConfig } from './default-config';\nimport { positionPoints, getIndividualClassName, resolveEncodingValues, getColorMetaInf, toCartesianCoordinates }\n    from '../../helpers';\nimport { TEXT_ANCHOR_MIDDLE, ENCODING } from '../../enums/constants';\n\nimport './styles.scss';\n\nconst defaultEncoding = defaultConfig.encoding;\nconst alignmentBaseLine = defaultEncoding['alignment-baseline'].value;\nconst defRotation = defaultEncoding.rotation.value;\n\nconst pointTranslators = {\n    polar: (data, config, layerInst) => {\n        let points = [];\n        const axes = layerInst.axes();\n        const encoding = layerInst.config().encoding;\n        const textEncoding = encoding.text;\n        const { radius: radiusAxis, color: colorAxis, angle: angleAxis } = axes;\n        const { formatter: textFormatter } = textEncoding;\n        const backgroundEncoding = encoding.text.background;\n        const backgroundPadding = backgroundEncoding.padding;\n        const backgroundValue = backgroundEncoding.value;\n        const angleV = {};\n        for (let i = 0, len = data.length; i < len; i++) {\n            const d = data[i];\n            const source = d.source;\n            const text = d.text;\n\n            const color = colorAxis.getColor(d.color);\n            const radius = radiusAxis.getOuterRadius(d.radius);\n            const angles = angleAxis.getScaleValue(d.angle);\n            !angleV[d.angle] && (angleV[d.angle] = 0);\n            const { startAngle, endAngle } = angles[angleV[d.angle]++];\n\n            const angle = (startAngle + endAngle) / 2;\n            const resolvedVal = resolveEncodingValues({\n                values: {\n                    angle,\n                    radius,\n                    color,\n                    text,\n                    startAngle,\n                    endAngle,\n                    rotation: defRotation,\n                    'alignment-baseline': alignmentBaseLine\n                },\n                data: d\n            }, i, data, layerInst);\n            const point = {\n                enter: {},\n                update: {\n                    angle: resolvedVal.angle,\n                    radius: resolvedVal.radius\n                },\n                text: textFormatter ? textFormatter(text, i, data, layerInst) : resolvedVal.text,\n                color: resolvedVal.color,\n                rotation: resolvedVal.rotation,\n                background: {\n                    value: backgroundValue instanceof Function ? backgroundValue(d, i, data, layerInst) : null,\n                    padding: backgroundPadding\n                },\n                'alignment-baseline': resolvedVal['alignment-baseline'],\n                meta: getColorMetaInf(resolvedVal.color, colorAxis),\n                style: {},\n                source,\n                rowId: d.rowId\n            };\n\n            point.className = getIndividualClassName(d, i, data, layerInst);\n            points.push(point);\n        }\n\n        points = toCartesianCoordinates(positionPoints(layerInst, points), layerInst.measurement());\n\n        points = points.filter((d) => {\n            const update = d.update;\n            return !isNaN(update.x) && !isNaN(update.y);\n        });\n        return points;\n    },\n    cartesian: (data, config, layerInst) => {\n        let points = [];\n        const axes = layerInst.axes();\n        const colorAxis = axes.color;\n        const encoding = layerInst.config().encoding;\n        const textEncoding = encoding.text;\n        const { field: textField, value, formatter: textFormatter } = textEncoding;\n        const fieldsConfig = layerInst.data().getFieldsConfig();\n\n        const backgroundEncoding = encoding.text.background;\n        const backgroundPadding = backgroundEncoding.padding;\n        const backgroundValue = backgroundEncoding.value;\n        const textFieldIndex = textField ? fieldsConfig[textField] && fieldsConfig[textField].index : -1;\n        const xEnc = ENCODING.X;\n        const yEnc = ENCODING.Y;\n        for (let i = 0, len = data.length; i < len; i++) {\n            const d = data[i];\n            const row = d.source;\n            const textValue = textField ? row[textFieldIndex] : value;\n\n            const [xPx, yPx] = [xEnc, yEnc].map(type => (axes[type] ? axes[type].getScaleValue(d[type]) +\n                    axes[type].getUnitWidth() / 2 : 0));\n\n            const color = colorAxis.getColor(d.color, colorAxis);\n            const resolvedEncodings = resolveEncodingValues({\n                values: {\n                    x: xPx,\n                    y: yPx,\n                    text: textValue,\n                    color,\n                    rotation: defRotation,\n                    'alignment-baseline': alignmentBaseLine\n                },\n                data: d\n            }, i, data, layerInst);\n            const point = {\n                enter: {},\n                update: {\n                    x: resolvedEncodings.x,\n                    y: resolvedEncodings.y\n                },\n                text: textFormatter(resolvedEncodings.text, i, data, layerInst),\n                color: resolvedEncodings.color,\n                background: {\n                    value: backgroundValue instanceof Function ? backgroundValue(d, i, data, layerInst) : null,\n                    padding: backgroundPadding\n                },\n                'alignment-baseline': resolvedEncodings['alignment-baseline'],\n                rotation: resolvedEncodings.rotation,\n                meta: getColorMetaInf(resolvedEncodings.color, colorAxis),\n                style: {},\n                source: d.source,\n                rowId: d.rowId\n            };\n\n            point.className = getIndividualClassName(d, i, data, layerInst);\n            points.push(point);\n        }\n\n        points = positionPoints(layerInst, points);\n        points = points.filter((d) => {\n            const update = d.update;\n            return !isNaN(update.x) && !isNaN(update.y);\n        });\n        return points;\n    }\n};\n\n/**\n * This layer is used to create labels for each data point. It has an encoding property ```text```\n * which determines from which field's data the value of the label will be taken. The text encoding\n * property is necessary for the layer to render the text.The mark type of this layer is ```text```.\n *\n * @public\n *\n * @class\n * @module TextLayer\n * @extends BaseLayer\n */\nexport default class TextLayer extends BaseLayer {\n    /**\n     * Returns the default configuration of the text layer\n     * @return {Object} Default configuration of the text layer\n     */\n    static defaultConfig () {\n        return defaultConfig;\n    }\n\n    static formalName () {\n        return 'text';\n    }\n\n    elemType () {\n        return 'text';\n    }\n\n    getPointTranslator (val) {\n        return pointTranslators[val];\n    }\n\n    /**\n     * Generates an array of objects containing x, y, width and height of the points from the data\n     * @param  {Array.<Array>} data Data Array\n     * @param  {Object} encoding  Config\n     * @param  {Object} axes     Axes object\n     * @return {Array.<Object>}  Array of points\n     */\n    translatePoints (data, config = {}) {\n        return pointTranslators[this.coord()](data, config, this);\n    }\n\n    /**\n     * Renders the plot in the given container\n     * @param  {SVGElement} container SVGElement which will hold the plot\n     * @return {textLayer} Instance of text layer\n     */\n    render (container) {\n        const config = this.config();\n        const normalizedData = this._normalizedData;\n        const className = config.className;\n        const qualifiedClassName = getQualifiedClassName(config.defClassName, this.id(), config.classPrefix);\n        const containerSelection = selectElement(container);\n\n        containerSelection.classed(`${qualifiedClassName.join(' ')} ${className}`, true);\n        this._graphicElems = {};\n\n        createElements({\n            data: normalizedData,\n            append: 'g',\n            selector: 'g',\n            container,\n            each: (dataArr, group) => {\n                const node = group.node();\n                const points = this.translatePoints(dataArr, {}, this);\n                setStyles(node, {\n                    'text-anchor': TEXT_ANCHOR_MIDDLE\n                });\n                drawText(node, points, {\n                    className: qualifiedClassName[0]\n                }, this);\n            }\n        });\n        return this;\n    }\n}\n","/* global Element, document  */\nimport {\n    makeElement,\n    selectElement,\n    easeFns,\n    objectIterator,\n    getSymbol\n} from 'muze-utils';\n\n/**\n *\n *\n * @param {*} str\n *\n */\nconst checkPath = (str) => {\n    if (/^[mzlhvcsqta]\\s*[-+.0-9][^mlhvzcsqta]+/i.test(str) && /[\\dz]$/i.test(str) && str.length > 4) {\n        return true;\n    }\n    return false;\n};\n\n/**\n *\n *\n * @param {*} d\n * @param {*} elem\n */\nconst createShape = function (d, groupElement) {\n    const { shape, size, update } = d;\n\n    if (shape instanceof Promise) {\n        shape.then((res) => {\n            d.shape = res;\n            createShape(d, groupElement);\n        });\n    } else if (shape instanceof Element) {\n        let newShape = shape.cloneNode(true);\n\n        if (newShape.nodeName.toLowerCase() === 'img') {\n            const src = newShape.src || newShape.href;\n            newShape = document.createElementNS('http://www.w3.org/2000/svg', 'image');\n            newShape.setAttribute('href', src);\n        }\n        const shapeElement = selectElement(newShape);\n        if (newShape.nodeName === 'path' || newShape.nodeName === 'image') {\n            shapeElement.attr('transform', `scale(${size / 100})`);\n        } else {\n            shapeElement.attr('height', size);\n            shapeElement.attr('width', size);\n        }\n        shapeElement.attr('x', -size / 2);\n        shapeElement.attr('y', -size / 2);\n        makeElement(groupElement, () => newShape, [1]);\n    } else if (typeof shape === 'string') {\n        let pathStr;\n        if (checkPath(shape)) {\n            pathStr = shape;\n        } else {\n            pathStr = getSymbol(shape).size(size)(update);\n        }\n        makeElement(groupElement, 'path', data => [data]).attr('d', pathStr);\n    } else {\n        d.shape = 'circle';\n        createShape(d, groupElement);\n    }\n};\n\n/**\n * Draws symbols using d3 symbol api\n * @param {Object} params Contains the svg container, points and other symbol related attributes.\n */\n/* istanbul ignore next */ const drawSymbols = (params) => {\n    const { layer, container, points, transition, className } = params;\n    const { duration, effect, disabled } = transition;\n    const mount = selectElement(container);\n    const graphicElems = layer._graphicElems;\n    mount.attr('class', className);\n    return makeElement(mount, 'g', points, null, {\n        enter: (group, d) => {\n            const { enter } = d;\n            group.attr('transform', `translate(${enter.x},${enter.y})`);\n        },\n        update: (group, d) => {\n            createShape(d, group);\n            graphicElems[d.rowId] = group;\n            const { update, style } = d;\n            objectIterator(style, key => group.style(key, style[key]));\n            group.attr('class', className);\n            group.classed(d.className, true);\n            if (!disabled) {\n                group = group.transition()\n                    .duration(transition.duration)\n                    .on('end', layer.registerAnimationDoneHook());\n            }\n            group.attr('transform', `translate(${update.x},${update.y})`);\n        },\n        exit: (exitGroup) => {\n            if (!disabled) {\n                exitGroup.transition().ease(easeFns[effect])\n                .duration(duration)\n                .on('end', () => exitGroup.remove())\n                .style('fill-opacity', 0)\n                .style('stroke-opacity', 0);\n            } else {\n                exitGroup.remove();\n            }\n        }\n    }, params.keyFn);\n};\n\nexport default drawSymbols;\n","import { CLASSPREFIX } from '../../enums/constants';\n\nexport const defaultConfig = {\n    defClassName: 'layer-point',\n    className: '',\n    classPrefix: CLASSPREFIX,\n    defColorStyle: 'stroke',\n    interaction: {\n        highlight: [{\n            type: 'fill',\n            intensity: [0, 0, -20, 0]\n        }],\n        fade: [{\n            type: 'fill',\n            intensity: [0, 0, +20, 0]\n        }],\n        focus: [{\n            type: 'fill',\n            intensity: [0, 0, +20, 0]\n        }\n        ]\n    },\n    innerPadding: 0.1,\n    nearestPointThreshold: 10,\n    transform: {\n        type: 'identity'\n    },\n    transition: {\n        effect: 'cubic',\n        duration: 1000\n    },\n    encoding: {\n        size: {\n            value: 30\n        },\n        color: { },\n        shape: {\n            value: 'circle'\n        },\n        x: {},\n        y: {},\n        strokeOpacity: {\n            value: 0.5\n        },\n        fillOpacity: {\n            value: 0.5\n        }\n    },\n    shapes: ['circle', 'cross', 'diamond', 'square', 'star', 'wye', 'triangle'],\n    sizes: [20, 30, 40, 50, 60, 70]\n};\n","import {\n    Voronoi,\n    selectElement,\n    getQualifiedClassName,\n    makeElement,\n    FieldType,\n    Scales\n} from 'muze-utils';\nimport { BaseLayer } from '../../base-layer';\nimport drawSymbols from './renderer';\nimport { defaultConfig } from './default-config';\nimport { ENCODING } from '../../enums/constants';\nimport {\n    attachDataToVoronoi,\n    positionPoints,\n    getPlotMeasurement,\n    getIndividualClassName,\n    getMarkId,\n    getColorMetaInf,\n    resolveEncodingValues\n} from '../../helpers';\n\nimport './styles.scss';\n\n/**\n * This layer is used to create various symbols for each data point. This is commonly used in\n * scatterplot visualizations. The mark type of this layer is ```point```.\n *\n * @public\n *\n * @class\n * @module PointLayer\n * @extends BaseLayer\n */\nexport default class PointLayer extends BaseLayer {\n\n    /**\n     * Creates an instance of PointLayer.\n     * @param {*} args\n     * @memberof PointLayer\n     */\n    constructor (...args) {\n        super(...args);\n        this._voronoi = new Voronoi();\n        this._bandScale = Scales.band();\n    }\n\n    elemType () {\n        return 'g';\n    }\n\n    /**\n     * Returns the default configuration of the point layer\n     * @return {Object} Default configuration of the point layer\n     */\n    static defaultConfig () {\n        return defaultConfig;\n    }\n\n    static defaultPolicy (conf, userConf) {\n        const config = BaseLayer.defaultPolicy(conf, userConf);\n        const encoding = config.encoding;\n        const transform = config.transform;\n        const colorField = encoding.color && encoding.color.field;\n\n        if (colorField) {\n            transform.groupBy = colorField;\n        }\n        return config;\n    }\n\n    static formalName () {\n        return 'point';\n    }\n\n    static drawFn () {\n        return drawSymbols;\n    }\n\n    /**\n     * Generates an array of objects containing x, y, width and height of the points from the data\n     * @param  {Array.<Array>} data Data Array\n     * @param  {Object} encoding  Config\n     * @param  {Object} axes     Axes object\n     * @return {Array.<Object>}  Array of points\n     */\n    translatePoints (data, config = {}) {\n        let points = [];\n        const encoding = this.config().encoding;\n        const axes = this.axes();\n        const {\n            x,\n            y\n        } = encoding;\n        const xField = x.field;\n        const yField = y.field;\n        const { size: sizeAxis, shape: shapeAxis } = axes;\n        const fieldsConfig = this.data().getFieldsConfig();\n        const isXDim = fieldsConfig[xField] && fieldsConfig[xField].def.type === FieldType.DIMENSION;\n        const isYDim = fieldsConfig[yField] && fieldsConfig[yField].def.type === FieldType.DIMENSION;\n        const key = isXDim ? ENCODING.X : (isYDim ? ENCODING.Y : null);\n        const measurement = this.measurement();\n        const colorAxis = axes.color;\n        const { x: offsetX, y: offsetY } = config.offset;\n\n        for (let i = 0, len = data.length; i < len; i++) {\n            const d = data[i];\n            const size = sizeAxis.getSize(d.size);\n            const shape = shapeAxis.getShape(d.shape);\n\n            let [xPx, yPx] = [ENCODING.X, ENCODING.Y].map((type) => {\n                const value = d[type] === null ? undefined : d[type];\n                const measure = type === ENCODING.X ? measurement.width : measurement.height;\n                return !encoding[type].field ? measure / 2 : axes[type].getScaleValue(value);\n            });\n\n            xPx += offsetX;\n            yPx += offsetY;\n\n            let color = colorAxis.getColor(d.color);\n\n            const resolvedEncodings = resolveEncodingValues({\n                values: {\n                    x: xPx,\n                    y: yPx,\n                    color,\n                    shape,\n                    size,\n                    data: d\n                },\n                data: d\n            }, i, data, this);\n            color = resolvedEncodings.color;\n            const style = {\n                fill: color,\n                stroke: color\n            };\n            const pos = {\n                x: resolvedEncodings.x,\n                y: resolvedEncodings.y\n            };\n\n            if (!isNaN(xPx) && !isNaN(yPx)) {\n                const point = {\n                    enter: pos,\n                    update: pos,\n                    shape: resolvedEncodings.shape,\n                    size: Math.abs(resolvedEncodings.size),\n                    meta: getColorMetaInf(color, colorAxis),\n                    style,\n                    source: d.source,\n                    rowId: d.rowId\n                };\n                point.className = getIndividualClassName(d, i, data, this);\n                points.push(point);\n                this.cachePoint(d[key], point);\n            }\n        }\n        points = positionPoints(this, points);\n        return points;\n    }\n\n    /**\n     * Renders the plot in the given container.\n     *\n     * @param  {SVGElement} container SVGElement which will hold the plot\n     * @return {BarLayer} Instance of bar layer\n     */\n    render (container) {\n        let maxSize = 0;\n        let seriesClassName;\n        const config = this.config();\n        const keys = this._transformedData.map(d => d.key);\n        const { transition, className, defClassName, classPrefix } = config;\n        const normalizedData = this._normalizedData;\n        const containerSelection = selectElement(container);\n        const qualifiedClassName = getQualifiedClassName(defClassName, this.id(), classPrefix);\n        this._points = [];\n        this._pointMap = {};\n\n        containerSelection.classed(qualifiedClassName.join(' '), true).classed(className, true);\n\n        this._points = this.generateDataPoints(normalizedData, keys);\n        this._graphicElems = {};\n\n        const schema = this.data().getSchema();\n        makeElement(container, 'g', this._points, null, {\n            update: (group, points) => {\n                maxSize = Math.max(maxSize, ...points.map(d => d.size));\n                seriesClassName = `${qualifiedClassName[0]}`;\n                this.constructor.drawFn()({\n                    layer: this,\n                    container: group.node(),\n                    points,\n                    interpolate: config.interpolate,\n                    className: seriesClassName,\n                    transition,\n                    keyFn: v => getMarkId(v.source, schema)\n                });\n            }\n        }, data => data[0].rowId);\n        this._maxSize = Math.sqrt(maxSize / Math.PI) * 2;\n        attachDataToVoronoi(this._voronoi, this._points);\n        return this;\n    }\n\n    generateDataPoints (normalizedData, keys) {\n        const [widthMetrics, heightMetrics] = getPlotMeasurement(this, keys);\n        const offsetXValues = widthMetrics.offsetValues || [];\n        const offsetYValues = heightMetrics.offsetValues || [];\n        return normalizedData.map((dataArr, i) => {\n            const measurementConf = this.getMeasurementConfig(offsetXValues[i], offsetYValues[i], widthMetrics.span,\n                heightMetrics.span);\n            return this.translatePoints(dataArr, measurementConf);\n        }).filter(d => d.length);\n    }\n\n    getMeasurementConfig (offsetX, offsetY, widthSpan, heightSpan) {\n        return {\n            offset: {\n                x: (offsetX || 0) + widthSpan / 2,\n                y: (offsetY || 0) + heightSpan / 2\n            },\n            span: {\n                x: widthSpan,\n                y: heightSpan\n            }\n        };\n    }\n\n    /**\n     * Gets the nearest point from a position.\n     * @param {number} x x position\n     * @param {number} y y position\n     * @return {Object} Point details\n     */\n    getNearestPoint (x, y) {\n        const distanceLimit = Math.max(this._maxSize, this.config().nearestPointThreshold);\n\n        if (!this.data()) {\n            return null;\n        }\n\n        const point = this._voronoi.find(x, y, distanceLimit);\n        const dimensions = point && point.data.data.update;\n        const radius = point ? Math.sqrt(point.data.data.size / Math.PI) : 0;\n\n        if (point) {\n            const { source, rowId } = point.data.data;\n            const identifiers = this.getIdentifiersFromData(source, rowId);\n            return {\n                id: identifiers,\n                dimensions: [{\n                    x: dimensions.x,\n                    y: dimensions.y,\n                    width: radius,\n                    height: radius\n                }],\n                layerId: this.id()\n            };\n        }\n        return null;\n    }\n}\n","import { makeElement, easeFns } from 'muze-utils';\n\n/**\n *\n *\n * @param {*} elem\n * @param {*} datum\n * @param {*} index\n * @param {*} context\n */\nconst transitionBars = (layer, elem, datum, index, context) => {\n    const { transition } = context;\n    const { duration, disabled, effect } = transition;\n    const selection = elem;\n\n    const selTransition = disabled ? selection :\n        selection.transition()\n        .duration(duration)\n        .ease(easeFns[effect])\n        .on('end', layer.registerAnimationDoneHook());\n    const update = datum.update || datum;\n    const updateStyle = datum.style || {};\n    datum.className && selection.classed(datum.className, true);\n    Object.entries(update).forEach(attr => (!isNaN(attr[1]) && selTransition.attr(attr[0], attr[1])));\n    Object.entries(updateStyle).forEach(styleObj => selection.style(styleObj[0], styleObj[1]));\n};\n\n/**\n *\n *\n * @param {*} elem\n * @param {*} d\n */\nconst barEnterFn = (elem, d) => {\n    const selection = elem;\n    const enter = d.enter || {};\n    Object.entries(enter).forEach(attr => (!isNaN(attr[1]) && selection.attr(attr[0], attr[1])));\n};\n\n/**\n * Draws rectangles by using d3 selection\n * @param  {Object} params Contains container element and points\n * @return {Selection} Bar Selection\n */\n/* istanbul ignore next */ export const drawRects = (params) => {\n    const { layer, points, container, keyFn } = params;\n    const graphicElems = layer._graphicElems;\n    const updateFns = {\n        enter (elem, d) { barEnterFn(elem, d); },\n        update (elem, d, i) {\n            graphicElems[d.rowId] = elem;\n            transitionBars(layer, elem, d, i, params);\n        }\n    };\n    return makeElement(container, 'rect', points, null, updateFns, keyFn);\n};\n","import { CLASSPREFIX } from '../../enums/constants';\n\nexport const defaultConfig = {\n    classPrefix: CLASSPREFIX,\n    defClassName: 'layer-bar',\n    className: '',\n    interaction: {\n        highlight: [{\n            type: 'fill',\n            intensity: [0, 0, -15, 0]\n        }],\n        fade: [{\n            type: 'fill',\n            intensity: [0, 0, +15, 0]\n        }],\n        focus: [{\n            type: 'fill',\n            intensity: [0, 0, +15, 0]\n        }]\n    },\n    transform: {\n        type: 'stack'\n    },\n    transition: {\n        effect: 'cubic',\n        duration: 1000\n    },\n    innerPadding: 0.1,\n    encoding: {\n        color: {},\n        x: {},\n        y: {},\n        x0: {},\n        y0: {}\n    },\n    states: {\n        highlight: {\n            className: `${CLASSPREFIX}-layer-bar-highlight`\n        },\n        fadeout: {\n            className: `${CLASSPREFIX}-layer-bar-fadeout`\n        },\n        selected: {\n            className: `${CLASSPREFIX}-layer-bar-selected`\n        }\n    }\n};\n\n","import { MeasureSubtype, DimensionSubtype } from 'muze-utils';\nimport { STACK } from '../../enums/constants';\nimport { positionPoints, getIndividualClassName, getColorMetaInf, resolveEncodingValues } from '../../helpers';\n\nconst positionRetriever = {\n    x: (xPx, isNegativeVal, barBasePos) => (isNegativeVal ? [xPx, barBasePos] : [barBasePos, xPx]),\n    y: (yPx, isNegativeVal, barBasePos) => (isNegativeVal ? [barBasePos, yPx] : [yPx, barBasePos])\n};\n\n/**\n *\n *\n * @param {*} type\n * @param {*} fieldInfo\n * @param {*} config\n * @param {*} data\n *\n */\nconst resolveDimByField = (type, axesInfo, config, data) => {\n    const spaceType = type === 'x' ? 'width' : 'height';\n    const [fieldType, axis] = [config[`${type}FieldType`], axesInfo[`${type}Axis`]];\n    const {\n        transformType,\n        sizeEncoding,\n        sizeConfig,\n        measurement\n    } = config;\n\n    const sizeValue = sizeEncoding.value;\n    let enter = 0;\n    let pos;\n    let space = 0;\n    let enterSpace = 0;\n    if (fieldType !== undefined) {\n        if (config[`${type}0Field`]) {\n            const minVal = data[type];\n            const maxVal = data[`${type}0`];\n            let min;\n            let max;\n            if (minVal === null || maxVal === null) {\n                return {\n                    enterSpace: undefined,\n                    enter: undefined,\n                    pos: undefined,\n                    space: undefined\n                };\n            } else if (fieldType === MeasureSubtype.CONTINUOUS || fieldType === DimensionSubtype.TEMPORAL) {\n                min = Math.min(minVal, maxVal);\n                max = Math.max(minVal, maxVal);\n            } else {\n                min = minVal;\n                max = maxVal;\n            }\n            const scales = type === 'x' ? [min, max] : [max, min];\n            pos = axis.getScaleValue(scales[0]) + axis.getUnitWidth() / 2;\n            space = Math.abs(axis.getScaleValue(scales[1]) - pos) + axis.getUnitWidth() / 2;\n\n            enter = pos;\n            enterSpace = 0;\n        } else if (fieldType === DimensionSubtype.CATEGORICAL || fieldType === DimensionSubtype.TEMPORAL) {\n            pos = axis.getScaleValue(data[type]) +\n                (sizeConfig[type === 'x' ? 'barWidthOffset' : 'barHeightOffset'] || 0);\n\n            space = sizeConfig[type === 'x' ? 'barWidth' : 'barHeight'];\n            if (sizeValue !== undefined) {\n                const diffPx = sizeValue * space;\n                space -= diffPx;\n                pos += diffPx / 2;\n            }\n            enter = pos;\n            enterSpace = space;\n        } else {\n            const minDomVal = axis.domain()[0];\n            const barBasePos = minDomVal < 0 ? axis.getScaleValue(0) : axis.getScaleValue(minDomVal);\n            pos = axis.getScaleValue(data[type]);\n            let endPos = axis.getScaleValue(data[`${type}0`]);\n\n            enterSpace = 0;\n            const isNegativeVal = data[type] < 0;\n            if (transformType !== STACK) {\n                [pos, endPos] = positionRetriever[type](pos, isNegativeVal, barBasePos);\n            }\n            space = Math.abs(pos - endPos);\n            enter = barBasePos;\n        }\n    } else {\n        pos = 0;\n        space = measurement[spaceType];\n    }\n\n    return {\n        enterSpace,\n        enter,\n        pos,\n        space\n    };\n};\n\n/**\n *\n *\n * @param {*} data\n * @param {*} config\n * @param {*} axes\n *\n */\nconst resolveDimensions = (data, config, axes) => {\n    const axesInfo = {\n        xAxis: axes.x,\n        yAxis: axes.y\n    };\n    const {\n        enterSpace: enterWidth,\n        enter: enterX,\n        pos: xPos,\n        space: width\n    } = resolveDimByField('x', axesInfo, config, data);\n\n    const {\n        enterSpace: enterHeight,\n        enter: enterY,\n        pos: yPos,\n        space: height\n    } = resolveDimByField('y', axesInfo, config, data);\n    return {\n        enter: {\n            x: enterX,\n            y: enterY,\n            width: enterWidth,\n            height: enterHeight\n        },\n        update: {\n            x: xPos,\n            y: yPos,\n            width,\n            height\n        }\n    };\n};\n\n/**\n * Generates an array of objects containing x, y, width and height of the bars from the data\n * @param  {Array.<Array>} data Data Array\n * @param  {Object} encoding  Config\n * @param  {Object} axes     Axes object\n * @param {Object} conf config object for point generation\n * @return {Array.<Object>}  Array of points\n */\nexport const getTranslatedPoints = (context, data, sizeConfig) => {\n    let points = [];\n    const encoding = context.config().encoding;\n    const axes = context.axes();\n    const colorAxis = axes.color;\n    const sizeEncoding = encoding.size || {};\n    const {\n            x0Field,\n            y0Field,\n            xFieldSubType,\n            yFieldSubType\n        } = context.encodingFieldsInf();\n    const measurement = context.measurement();\n    const isXDim = xFieldSubType === DimensionSubtype.CATEGORICAL || xFieldSubType === DimensionSubtype.TEMPORAL;\n    const isYDim = yFieldSubType === DimensionSubtype.CATEGORICAL || yFieldSubType === DimensionSubtype.TEMPORAL;\n    const key = isXDim ? 'x' : (isYDim ? 'y' : null);\n    const transformType = context.transformType();\n\n    for (let i = 0, len = data.length; i < len; i++) {\n        const d = data[i];\n        const dimensions = resolveDimensions(d, {\n            xFieldType: xFieldSubType,\n            yFieldType: yFieldSubType,\n            x0Field,\n            y0Field,\n            transformType,\n            measurement,\n            sizeConfig,\n            sizeEncoding\n        }, axes);\n\n        let color = colorAxis.getColor(d.color);\n\n        const update = dimensions.update;\n        const resolvedEncodings = resolveEncodingValues({\n            values: {\n                x: update.x,\n                y: update.y,\n                width: update.width,\n                height: update.height,\n                color\n            },\n            data: d\n        }, i, data, context);\n        color = resolvedEncodings.color;\n        const { x, y, width, height } = resolvedEncodings;\n        if (!isNaN(x) && !isNaN(y) && d.rowId !== undefined) {\n            let point = null;\n            point = {\n                enter: dimensions.enter,\n                update: {\n                    x,\n                    y,\n                    width,\n                    height\n                },\n                source: d.source,\n                rowId: d.rowId,\n                style: {\n                    fill: color\n                },\n                meta: getColorMetaInf(color, colorAxis)\n            };\n            point.className = getIndividualClassName(d, i, data, context);\n            points.push(point);\n            // Store each point in a hashmap with key as the dimensional or temporal field value\n            context.cachePoint(d[key], point);\n        }\n    }\n\n    points = positionPoints(context, points);\n    return points;\n};\n","import {\n    getQualifiedClassName,\n    selectElement,\n    createElements,\n    clipElement,\n    DimensionSubtype,\n    FieldType,\n    MeasureSubtype,\n    Scales,\n    getNearestValue\n} from 'muze-utils';\nimport { BaseLayer } from '../../base-layer';\nimport { drawRects } from './renderer';\nimport { defaultConfig } from './default-config';\nimport { getPlotMeasurement, getValidTransformForAggFn } from '../../helpers';\nimport './styles.scss';\nimport { getTranslatedPoints } from './bar-helper';\n\nconst MEASURE = FieldType.MEASURE;\nconst scaleBand = Scales.band;\n\n/**\n * Bar layer creates rectangle marks. The mark type of this layer is ```bar```. This layer can be used\n * to create stacked or grouped bars, range bars, heatmap plots and also reference bands by using\n * the encoding properties.\n *\n * @public\n *\n * @class\n * @module BarLayer\n * @extends BaseLayer\n */\nexport default class BarLayer extends BaseLayer {\n    /**\n     * Creates an instance of bar layer\n     */\n    constructor (...params) {\n        super(...params);\n        this._bandScale = scaleBand();\n        this._plotPadding = {\n            x: 0,\n            y: 0\n        };\n        this._plotSpan = {\n            x: 0,\n            y: 0\n        };\n        this._pointMap = {};\n    }\n\n    /**\n     *\n     *\n     *\n     * @memberof BarLayer\n     */\n    elemType () {\n        return 'rect';\n    }\n\n    /**\n     *\n     *\n     * @static\n     *\n     * @memberof BarLayer\n     */\n    static formalName () {\n        return 'bar';\n    }\n\n    /**\n     * Returns the default configuration of the bar layer\n     * @return {Object} Default configuration of the bar layer\n     */\n    static defaultConfig () {\n        return defaultConfig;\n    }\n\n    /**\n     *\n     *\n     * @static\n     * @param {*} conf\n     * @param {*} userConf\n     *\n     * @memberof BarLayer\n     */\n    static defaultPolicy (conf, userConf) {\n        const config = BaseLayer.defaultPolicy(conf, userConf);\n        const encoding = config.encoding;\n        const colorField = encoding.color.field;\n        const transform = config.transform;\n\n        if (colorField) {\n            transform.groupBy = colorField;\n        }\n        return config;\n    }\n\n    /**\n     *\n     *\n     * @param {*} data\n     * @param {*} fieldsConfig\n     *\n     * @memberof BarLayer\n     */\n    calculateDomainFromData (data, encodingFieldInf, fieldsConfig) {\n        const domain = super.calculateDomainFromData(data, encodingFieldInf, fieldsConfig);\n        ['x', 'y'].forEach((d) => {\n            if (encodingFieldInf[`${d}FieldType`] === MEASURE && domain[d]) {\n                if (encodingFieldInf[`${d}0Field`]) {\n                    domain[d] = domain[d].sort((a, b) => a - b);\n                } else {\n                    domain[d][0] = Math.min(domain[d][0], 0);\n                    domain[d][1] = Math.max(0, domain[d][1]);\n                }\n            }\n        });\n        return domain;\n    }\n\n    /**\n     * Generates an array of objects containing x, y, width and height of the bars from the data\n     * @param  {Array.<Array>} data Data Array\n     * @param  {Object} encoding  Config\n     * @param  {Object} axes     Axes object\n     * @param {Object} conf config object for point generation\n     * @return {Array.<Object>}  Array of points\n     */\n    translatePoints (data, sizeConfig) {\n        return getTranslatedPoints(this, data, sizeConfig);\n    }\n\n    /**\n     * Renders the plot in the given container\n     * @param  {SVGGroup} container SVGGroup where plot will be rendered.\n     * @return {BarLayer} Instance of bar layer.\n     */\n    render (container) {\n        const config = this.config();\n        const transition = config.transition;\n        const normalizedDataArr = this._normalizedData;\n        const transformedData = this._transformedData;\n        const keys = transformedData.map(d => d.key);\n        const fieldsConfig = this.data().getFieldsConfig();\n        const axes = this.axes();\n        const height = axes.y && axes.y.scale().range()[0];\n        const width = axes.x && axes.x.scale().range()[1];\n        const defClassName = config.defClassName;\n        const qualifiedClassName = getQualifiedClassName(defClassName, this.id(), config.classPrefix);\n        const className = config.className;\n        const containerSelection = selectElement(container);\n        const dimensions = Object.values(fieldsConfig).filter(e => e.def.type === FieldType.DIMENSION)\n            .map(e => e.index);\n        containerSelection.classed(qualifiedClassName.join(' '), true);\n        containerSelection.classed(className, true);\n        clipElement(container, {\n            x: 0,\n            y: 0,\n            width,\n            height\n        }, `id-${this.id()}`);\n\n        this._points = this.generateDataPoints(normalizedDataArr, keys);\n        this._graphicElems = {};\n\n        createElements({\n            data: this._points,\n            container,\n            selector: 'g',\n            append: 'g',\n            each: (points, group, i) => {\n                const seriesClassName = `${qualifiedClassName[0]}-${keys[i] || i}`.toLowerCase();\n                group.style('display', 'block');\n                drawRects({\n                    layer: this,\n                    container: group.node(),\n                    points,\n                    className: seriesClassName,\n                    transition,\n                    style: {},\n                    keyFn: d => dimensions.map(key => d.source[key]).join('-')\n                });\n            }\n        });\n        return this;\n    }\n\n    /**\n     *\n     *\n     * @param {*} normalizedData\n     * @param {*} keys\n     *\n     * @memberof BarLayer\n     */\n    generateDataPoints (normalizedData, keys) {\n        const [barWidthMetrics, barHeightMetrics] = getPlotMeasurement(this, keys);\n        const barWidthOffsets = barWidthMetrics.offsetValues || [];\n        const barHeightOffsets = barHeightMetrics.offsetValues || [];\n        this._plotSpan = {\n            x: barWidthMetrics.groupSpan || 0,\n            y: barHeightMetrics.groupSpan || 0\n        };\n        this._plotPadding = {\n            x: barWidthMetrics.padding || 0,\n            y: barHeightMetrics.padding || 0\n        };\n\n        this._pointMap = {};\n        return normalizedData.map((data, i) => this.translatePoints(data,\n            {\n                barWidth: barWidthMetrics.span,\n                barWidthOffset: barWidthOffsets[i] || 0,\n                barHeight: barHeightMetrics.span,\n                barHeightOffset: barHeightOffsets[i] || 0\n            }));\n    }\n\n    getPlotPadding () {\n        return this._plotPadding;\n    }\n\n    resolveTransformType () {\n        this._transformType = getValidTransformForAggFn(this);\n    }\n\n    /**\n     * Gets the nearest point of the position passed.\n     * @param {number} x x position\n     * @param {number} y y position\n     * @return {Object} Nearest point.\n     */\n    getNearestPoint (x, y) {\n        if (!this.data()) {\n            return null;\n        }\n        let axis;\n        let value;\n        let points;\n        let uniqueFieldType;\n        let uniqueFieldIndex;\n        let filterData;\n        let identifiers;\n        let pointFound = null;\n        const dataModel = this.data();\n        const dataObj = dataModel.getData();\n        const fieldsConfig = dataModel.getFieldsConfig();\n        const axes = this.axes();\n        const data = dataObj.data;\n        const pointMap = this._pointMap;\n        const {\n                xField,\n                yField,\n                xFieldSubType,\n                yFieldSubType\n            } = this.encodingFieldsInf();\n\n        if (xFieldSubType === MeasureSubtype.CONTINUOUS) {\n            axis = axes.y;\n            value = axis.invert(y);\n            uniqueFieldIndex = fieldsConfig[yField].index;\n            uniqueFieldType = yFieldSubType;\n        } else {\n            axis = axes.x;\n            value = axis.invert(x);\n            uniqueFieldIndex = fieldsConfig[xField].index;\n            uniqueFieldType = xFieldSubType;\n        }\n\n        if (uniqueFieldType === DimensionSubtype.CATEGORICAL) {\n            points = pointMap[value];\n        }\n\n        if (uniqueFieldType === DimensionSubtype.TEMPORAL) {\n            filterData = [...new Set(data.map(d => d[uniqueFieldIndex]))];\n            value = getNearestValue(filterData, value);\n            points = pointMap[value];\n        }\n        const len = points && points.length;\n        points && points.sort((p1, p2) => p1.update.y - p2.update.y);\n        for (let i = 0; i < len; i++) {\n            const point = points[i];\n            const update = point.update;\n            if (x >= update.x && x <= (update.width + update.x) && y >= update.y && y <= (update.height + update.y)) {\n                pointFound = point;\n                break;\n            }\n            pointFound = null;\n        }\n\n        const values = pointFound && pointFound.source;\n        if (values) {\n            identifiers = this.getIdentifiersFromData(values, pointFound.rowId);\n        }\n        return pointFound ? {\n            dimensions: [pointFound.update],\n            id: identifiers,\n            layerId: this.id()\n        } : pointFound;\n    }\n\n    getPlotSpan () {\n        return this._plotSpan;\n    }\n\n    hasPlotSpan () {\n        return true;\n    }\n}\n","import { CLASSPREFIX } from '../../enums/constants';\n\nexport const defaultConfig = {\n    defClassName: 'layer-tick',\n    className: '',\n    classPrefix: CLASSPREFIX,\n    interaction: {\n        highlight: [{\n            type: 'stroke',\n            intensity: [0, 0, -15, 0]\n        }],\n        fade: [{\n            type: 'stroke',\n            intensity: [0, 0, 15, 0]\n        }],\n        focus: [{\n            type: 'stroke',\n            intensity: [0, 0, 15, 0]\n        }]\n    },\n    innerPadding: 0.1,\n    transform: {\n        type: 'identity'\n    },\n    transition: {\n        effect: 'cubic',\n        duration: 1000\n    },\n    interpolate: 'linear',\n    encoding: {\n        color: { },\n        x: {},\n        y: {},\n        x0: {},\n        y0: {},\n        radius: {},\n        radius0: {},\n        angle: {},\n        angle0: {},\n        strokeOpacity: {\n            value: 0.5\n        },\n        fillOpacity: {\n            value: 0.5\n        }\n    },\n    states: {\n        highlight: {\n            className: `${CLASSPREFIX}-layer-tick-highlight`\n        },\n        fadeout: {\n            className: `${CLASSPREFIX}-layer-tick-fadeout`\n        },\n        selected: {\n            className: `${CLASSPREFIX}-layer-tick-selected`\n        }\n    }\n};\n","import { selectElement, Symbols, pathInterpolators } from 'muze-utils';\n\nconst line = Symbols.line;\n\n/**\n * Draws ticks by using d3 selection\n * @param  {Object} params Contains container element and points\n * @return {Selection} Ticks Selection\n */\nexport default /* istanbul ignore next */ (params) => {\n    const { points, container, keyFn, className, interpolate, layer } = params;\n    const mount = selectElement(container);\n    const ticks = mount.selectAll('path').data(points, keyFn);\n    const ticksEnter = ticks.enter().append('path');\n    const graphicElems = layer._graphicElems;\n    mount.attr('class', className || '');\n    ticksEnter.each(function (d) {\n        const selection = selectElement(this);\n        const enter = d.enter || {};\n        Object.entries(enter).forEach(attr => (!isNaN(attr[1]) && selection.attr(attr[0], attr[1])));\n    });\n\n    ticks.exit().remove();\n    return ticks.merge(ticksEnter)\n                    .each(function (d) {\n                        const selection = selectElement(this);\n                        graphicElems[d.rowId] = selection;\n                        const update = d.update;\n                        const updateStyle = d.style || {};\n                        const x0 = update.x0 !== undefined ? update.x0 : update.x;\n                        const y0 = update.y0 !== undefined ? update.y0 : update.y;\n                        const curveInterpolatorFn = pathInterpolators[interpolate];\n                        const linepath = line()\n                            .curve(curveInterpolatorFn)\n                            .x(e => e[0])\n                            .y(e => e[1]);\n                        d.className && selection.classed(d.className, true);\n                        selection.attr('d', linepath([[update.x, update.y], [x0, y0]]));\n                        Object.entries(updateStyle).forEach(styleObj => selection.style(styleObj[0], styleObj[1]));\n                    });\n};\n\n","import { FieldType } from 'muze-utils';\nimport { PointLayer } from '../point';\nimport { defaultConfig } from './default-config';\nimport { ENCODING } from '../../enums/constants';\nimport drawTicks from './renderer';\nimport './styles.scss';\nimport { getAxesScales, positionPoints, getIndividualClassName,\n    getColorMetaInf, resolveEncodingValues, toCartesianCoordinates } from '../../helpers';\n\nconst pointTranslators = {\n    polar: (data, config = {}, layerInst) => {\n        const axes = layerInst.axes();\n        let points = [];\n        const { radius: radiusAxis, angle: angleAxis, angle0: angle0Axis } = axes;\n        const measurement = layerInst.measurement();\n\n        const colorAxis = axes.color;\n        const angleV = {};\n        const angle0V = {};\n        for (let i = 0, len = data.length; i < len; i++) {\n            const d = data[i];\n            const color = colorAxis.getColor(d.color);\n            const angles = angleAxis.getScaleValue(d.angle);\n            !angleV[d.angle] && (angleV[d.angle] = 0);\n            const { startAngle, endAngle } = angles[angleV[d.angle]++];\n            const angles0 = angle0Axis.getScaleValue(d.angle0);\n            !angle0V[d.angle0] && (angle0V[d.angle0] = 0);\n            const { startAngle: startAngle0, endAngle: endAngle0 } = angles0[angle0V[d.angle0]++];\n            const radius = radiusAxis.getOuterRadius(d.radius);\n            const angle = (startAngle + endAngle) / 2;\n            const angle0 = (startAngle0 + endAngle0) / 2;\n            const resolvedVal = resolveEncodingValues({\n                values: {\n                    radius,\n                    radius0: radiusAxis.getInnerRadius(d.radius0),\n                    color,\n                    angle,\n                    angle0,\n                    startAngle,\n                    endAngle,\n                    startAngle0,\n                    endAngle0\n                },\n                data: d\n            }, i, data, layerInst);\n            const point = {\n                enter: {},\n                update: {\n                    radius: resolvedVal.radius,\n                    radius0: resolvedVal.radius0,\n                    angle: resolvedVal.angle,\n                    angle0: resolvedVal.angle0\n                },\n                style: {\n                    stroke: resolvedVal.color\n                },\n                source: d.source,\n                rowId: d.rowId,\n                meta: getColorMetaInf(resolvedVal.color, colorAxis)\n            };\n            point.className = getIndividualClassName(d, i, data, layerInst);\n            points.push(point);\n        }\n        points = toCartesianCoordinates(positionPoints(layerInst, points), measurement, true);\n        return points;\n    },\n    cartesian: (data, config = {}, layerInst) => {\n        const axes = layerInst.axes();\n        let points = [];\n        const {\n                xAxis,\n                yAxis\n            } = getAxesScales(axes);\n        const {\n                xField,\n                yField,\n                x0Field,\n                y0Field,\n                xFieldType,\n                yFieldType\n            } = layerInst.encodingFieldsInf();\n        const isXDim = xFieldType === FieldType.DIMENSION;\n        const isYDim = yFieldType === FieldType.DIMENSION;\n        const key = isXDim ? ENCODING.X : (isYDim ? ENCODING.Y : null);\n        const measurement = layerInst.measurement();\n        const colorAxis = axes.color;\n        const { x: offsetX, y: offsetY } = config.offset;\n        const { x: xSpan, y: ySpan } = config.span;\n        for (let i = 0, len = data.length; i < len; i++) {\n            let xPx;\n            let x0Px;\n            let y0Px;\n            let yPx;\n            const d = data[i];\n            const row = d.source;\n            if (xField) {\n                xPx = xAxis.getScaleValue(d.x) + offsetX;\n                x0Px = xPx + xSpan;\n            }\n\n            if (yField) {\n                yPx = yAxis.getScaleValue(d.y) + offsetY;\n                y0Px = yPx !== null ? yPx + ySpan : null;\n            }\n\n            if (!xField) {\n                xPx = 0;\n                x0Px = measurement.width;\n                if (!isNaN(yPx)) {\n                    yPx += ySpan / 2;\n                    y0Px = yPx;\n                }\n            }\n\n            if (!yField) {\n                yPx = 0;\n                y0Px = measurement.height;\n                x0Px = xPx += xSpan / 2;\n            }\n\n            if (x0Field) {\n                x0Px = xAxis.getScaleValue(d.x0) + xSpan;\n                yPx += ySpan / 2;\n                y0Px -= ySpan / 2;\n            }\n\n            if (y0Field) {\n                y0Px = yAxis.getScaleValue(d.y0) + ySpan;\n                xPx += xSpan / 2;\n                x0Px -= xSpan / 2;\n            }\n            const color = colorAxis.getColor(d.color);\n            const resolvedEncodings = resolveEncodingValues({\n                values: {\n                    x: xPx,\n                    y: yPx,\n                    x0: x0Px,\n                    y0: y0Px,\n                    color\n                },\n                data: d\n            }, i, data, layerInst);\n\n            if (!isNaN(xPx) && !isNaN(yPx)) {\n                const point = {\n                    enter: {},\n                    update: {\n                        x: resolvedEncodings.x,\n                        y: resolvedEncodings.y,\n                        x0: resolvedEncodings.x0,\n                        y0: resolvedEncodings.y0\n                    },\n                    style: {\n                        stroke: resolvedEncodings.color\n                    },\n                    source: row,\n                    rowId: d.rowId,\n                    meta: getColorMetaInf(resolvedEncodings.color, colorAxis)\n                };\n                point.className = getIndividualClassName(d, i, data, layerInst);\n                points.push(point);\n                layerInst.cachePoint(d[key], point);\n            }\n        }\n        points = positionPoints(layerInst, points);\n        return points;\n    }\n};\n\n/**\n * This layer is used to create small lines. The orientation of the line is determined by the positional\n * encoding properties x0 and y0. The mark type of the layer is ```tick```.\n *\n * @public\n *\n * @class\n * @module TickLayer\n * @extends BaseLayer\n */\nexport default class TickLayer extends PointLayer {\n\n    /**\n     *\n     *\n     * @staticg\n     *\n     * @memberof TickLayer\n     */\n    static defaultConfig () {\n        return defaultConfig;\n    }\n\n    /**\n     *\n     *\n     * @static\n     *\n     * @memberof TickLayer\n     */\n    static formalName () {\n        return 'tick';\n    }\n\n    /**\n     *\n     *\n     * @static\n     *\n     * @memberof TickLayer\n     */\n    static drawFn () {\n        return drawTicks;\n    }\n\n    /**\n     *\n     *\n     *\n     * @memberof TickLayer\n     */\n    elemType () {\n        return 'path';\n    }\n\n    /**\n     * Generates an array of objects containing x, y, width and height of the points from the data\n     * @param  {Array.<Array>} data Data Array\n     * @param  {Object} encoding  Config\n     * @param  {Object} axes     Axes object\n     * @return {Array.<Object>}  Array of points\n     */\n    translatePoints (data, config) {\n        return pointTranslators[this.coord()](data, config, this);\n    }\n\n    getMeasurementConfig (offsetX, offsetY, widthSpan, heightSpan) {\n        return {\n            offset: {\n                x: (offsetX || 0),\n                y: (offsetY || 0)\n            },\n            span: {\n                x: widthSpan,\n                y: heightSpan\n            }\n        };\n    }\n}\n","export const AREA_LAYER = 'area';\nexport const ARC_LAYER = 'arc';\nexport const LINE_LAYER = 'line';\nexport const TEXT_LAYER = 'text';\nexport const POINT_LAYER = 'point';\nexport const BAR_LAYER = 'bar';\nexport const TICK_LAYER = 'tick';\nexport const SIMPLE_LAYER = 'simple';\nexport const BASE_LAYER = 'base';\n","import { isSimpleObject, mergeRecursive, getObjProp } from 'muze-utils';\n\nconst parseLayerDefinition = (sink, definition, layerDef, layerType) => {\n    for (const key in definition) {\n        if (Object.hasOwnProperty.call(definition, key)) {\n            let strs;\n            let propValue;\n            const def = definition[key];\n            if (isSimpleObject(def)) {\n                sink[key] = {};\n                parseLayerDefinition(sink[key], def, layerDef, layerType);\n            } else if (typeof def === 'string' && (strs = def.split('.')) && strs[0] === layerType) {\n                propValue = getObjProp(layerDef, ...strs.slice(1, strs.length));\n                if (propValue !== undefined) {\n                    sink[key] = propValue;\n                }\n            } else {\n                sink[key] = def;\n            }\n        }\n    }\n};\n\nconst sanitizeEncoding = (encoding) => {\n    // Create object for each encoding value if encoding value is a string\n    for (const key in encoding) {\n        if (typeof encoding[key] === 'string') {\n            encoding[key] = {\n                field: encoding[key]\n            };\n        }\n    }\n};\n\n/**\n * Layer Factory creates layers based on the layer type. All types of layers needs to register in\n * the layer factory. For getting a layer instance, getLayer method needs to invoked with the\n * layerType and other arguments. It also registers the definition of composite layers.\n *\n * @public\n *\n * @module LayerFactory\n */\nconst layerFactory = (() => {\n    const compositeLayers = {};\n    const factoryObj = {\n        setLayerRegistry: (reg) => {\n            factoryObj._layerRegistry = reg;\n        },\n        getSerializedConf: (mark, layerDef) => {\n            let serializedDefs;\n            const defs = compositeLayers[mark];\n            const newConf = mergeRecursive({}, layerDef);\n\n                // If it is a composite layer then resolve all the definitions of each unit layer\n            if (defs) {\n                serializedDefs = defs.map((unitLayerDef) => {\n                    const sDef = {};\n                    parseLayerDefinition(sDef, unitLayerDef, newConf, mark);\n                    sanitizeEncoding(sDef.encoding);\n                    return sDef;\n                });\n            } else {\n                const encoding = newConf.encoding;\n                // Create object for each encoding value if encoding value is a string\n                sanitizeEncoding(encoding);\n                serializedDefs = newConf;\n            }\n\n            return serializedDefs;\n        },\n        getLayerInstance: (layerDef, ...params) => {\n            const layerRegistry = factoryObj._layerRegistry;\n            layerDef = !(layerDef instanceof Array) ? [layerDef] : layerDef;\n            const instances = layerDef.map((layerObj) => {\n                const layerConstructor = layerRegistry[layerObj.mark];\n                return layerConstructor.create(...params);\n            });\n            return instances.length === 1 ? instances[0] : instances;\n        },\n        getLayerClass: mark => factoryObj._layerRegistry[mark],\n        /**\n         * Registers a new composite layer definition in the layer factory.\n         *\n         * @public\n         *\n         * @param {string} layerType Mark type of the new composite layer.\n         * @param {Array} layerDefs Layer definitions of the composite layer.\n         */\n        composeLayers: (layerType, layerDefs) => {\n            compositeLayers[layerType] = layerDefs;\n        },\n        sanitizeLayerConfig: (layerDef) => {\n            const newConf = mergeRecursive({}, layerDef);\n            sanitizeEncoding(newConf.encoding);\n            return newConf;\n        }\n    };\n    return factoryObj;\n})();\n\nexport default layerFactory;\n","import layerFactory from './layer-factory';\n\nexport default layerFactory;\n","import { AreaLayer } from './layers/area';\nimport { ArcLayer } from './layers/arc';\nimport { LineLayer } from './layers/line';\nimport { TextLayer } from './layers/text';\nimport { PointLayer } from './layers/point';\nimport { BarLayer } from './layers/bar';\nimport { BaseLayer } from './base-layer';\nimport * as LAYER_TYPES from './enums/layer-types';\nimport { TickLayer } from './layers/tick';\n\nexport const DEFAULT_LAYERS = {\n    [LAYER_TYPES.AREA_LAYER]: AreaLayer,\n    [LAYER_TYPES.ARC_LAYER]: ArcLayer,\n    [LAYER_TYPES.LINE_LAYER]: LineLayer,\n    [LAYER_TYPES.TEXT_LAYER]: TextLayer,\n    [LAYER_TYPES.POINT_LAYER]: PointLayer,\n    [LAYER_TYPES.TICK_LAYER]: TickLayer,\n    [LAYER_TYPES.BAR_LAYER]: BarLayer,\n    [LAYER_TYPES.BASE_LAYER]: BaseLayer\n};\n","import { ROWS, COLUMNS, COLOR, SHAPE, SIZE, DETAIL, LAYERS, TRANSFORM, CONFIG } from '../enums/constants';\n\n/**\n * This is the local options semantics based on which setters getters are created and reactivity is initiated.\n * This local object is only valid for Artboard.\n * Artboard merges global and local object both to the model\n *\n * Format\n *  PROPERTRY_NAME: {\n *      value: // default value of the property,\n *      meta: {\n *          typeCheck: // The setter value will be checked using this. If the value is function then the setter value\n *                     // is passed as args.\n *          typeExpected: // The output of typecheck action will be tested against this. Truthy value will set the\n *                       // value to the setter\n *          sanitizaiton: // Need for sanitization before type is checked\n *      }\n *  }\n *\n * @module\n */\n\nexport default {\n    [CONFIG]: {},\n    [ROWS]: {},\n    [COLUMNS]: {},\n    [COLOR]: {},\n    [SHAPE]: {},\n    [SIZE]: {},\n    [DETAIL]: {},\n    [LAYERS]: {},\n    [TRANSFORM]: {}\n};\n","import { ERROR_MSG } from 'muze-utils';\n\n/**\n * Interfaces for VisualGroup. Any new VisualGroup has to implement this class.\n * @class  SimpleGroup\n */\nclass SimpleGroup {\n\n    /**\n     * This method is used to set or get the DataModel instance.\n     *\n     * @param {DataModel | undefined} dataModel Instance of datamodel.\n\n     * @memberof  SimpleGroup\n     */\n    data () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    /**\n     * This method is used to set or get the group specific configuration\n     * properties\n     *\n     * @param {Object | undefined} configObj The input configuration.\n     *                                or instance of visual group.\n     * @memberof  SimpleGroup\n     */\n    config () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    /**\n     * This method is used to return a serialized representation of the\n     * instance's properties.\n     *\n     * @memberof  SimpleGroup\n     */\n    serialize () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    /**\n     * This method is used to get or set the measurement object which houses\n     * layout properties like width and height.\n     *\n     * @param {Object  | undefined} mObj The measurement properties.\n     * @memberof  SimpleGroup\n     */\n    measurement () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n}\n\nexport default SimpleGroup;\n","import { ERROR_MSG } from 'muze-utils';\n\n/**\n *\n *\n * @export\n * @class Variable\n */\nexport default class Variable {\n\n    /**\n     *\n     *\n     * @memberof Variable\n     */\n    type () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    /**\n     *\n     *\n     * @memberof Variable\n     */\n    toString () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n}\n","import Variable from './variable';\n\n/**\n * This is a wrapper on top of multiple variables which are of same type but they are shown in the same axis.This is\n * required in case of range plots or ohlc plots where one plot is mapped to multiple measure fields. At that time,\n * we need to create a composed variable from multiple variables. This class just wraps them into one variable instance\n * and provides methods to get the type and other common functionalities which can be performed on a simple variable\n * instance.\n *\n * @public\n * @class ComposeVars\n */\nclass ComposedVars extends Variable {\n\n    /**\n     * Creates an instance of ComposeVars.\n     *\n     * @param {Array} vars Array of SimpleVars.\n     */\n    constructor (...vars) {\n        super();\n        this.vars(vars);\n    }\n\n    vars (...params) {\n        if (params.length) {\n            this._vars = params[0];\n            return this;\n        }\n        return this._vars;\n    }\n\n    data (...dm) {\n        if (dm.length) {\n            this.vars().forEach(d => d.data(dm[0]));\n            this._data = dm[0];\n            return this;\n        }\n        return this._data;\n    }\n\n    /**\n     * Get all the field names from composed variable instance.\n     *\n     * @public\n     * @return {Array} Array of field names.\n     */\n    getMembers () {\n        const vars = this.vars();\n        return vars.map(member => member.getMembers()[0]);\n    }\n\n    /**\n     * Type of field associated with this composed variable.\n     *\n     * @return {string} Type of variable (Measure/Dimension).\n     */\n    type () {\n        return this.vars()[0].type();\n    }\n\n    toString () {\n        return this.vars().map(d => d.toString()).join(',');\n    }\n\n    /**\n     * Returns the number formatter function of the variable.\n     *\n     * @return {Function} Number formatter function of the variable.\n     */\n    numberFormat () {\n        return this.vars()[0].numberFormat();\n    }\n\n    format (values) {\n        return this.vars()[0].format(values);\n    }\n\n    /**\n     * Returns the subtype of the fields associated with this variable instance.\n     *\n     * @public\n     * @return {string} Subtype of the variable.\n     */\n    subtype () {\n        return this.vars()[0].subtype();\n    }\n\n    /**\n     * Returns the consecutive minimum difference of the field values.\n     *\n     * @public\n     * @return {number} Minimum consecutive difference.\n     */\n    getMinDiff () {\n        return this.vars()[0].getMinDiff();\n    }\n\n    /**\n     * Returns the display name of the fields.\n     *\n     * @return {string} returns the display name.\n     */\n    displayName () {\n        return this.vars().map(d => d.displayName()).join(',');\n    }\n}\n\nexport default ComposedVars;\n","import { DateTimeFormatter, retrieveFieldDisplayName, DimensionSubtype } from 'muze-utils';\nimport Variable from './variable';\n\n/**\n * This is a wrapper on top of fields passed in rows or columns in canvas. This is used to get the type of field or\n * get min difference from the field values.\n *\n * @public\n * @class SimpleVariable\n */\nexport default class SimpleVariable extends Variable {\n\n    /**\n     * Creates an instance of simple variable instance.\n     *\n     * @param {string} name Field name.\n     */\n    constructor (name) {\n        super();\n        this.oneVar(name);\n    }\n\n    /**\n     * Gets the field name associated with this variable instance.\n     *\n     * @public\n     * @return {string} Name of the field.\n     */\n    oneVar (...oneV) {\n        if (oneV.length) {\n            this._oneVar = oneV[0];\n            return this;\n        }\n        return this._oneVar;\n    }\n\n    data (...dm) {\n        if (dm.length) {\n            this._data = dm[0];\n            return this;\n        }\n        return this._data;\n    }\n\n    toString () {\n        return this.oneVar();\n    }\n\n    /**\n     * Gets the number formatter function of this variable.\n     *\n     * @public\n     * @return {Function} Number formatter function.\n     */\n    numberFormat () {\n        if (this.type() === 'measure') {\n            const formatter = this.data().getFieldspace().getMeasure()[this.oneVar()];\n            return formatter.numberFormat();\n        } return val => val;\n    }\n\n    format (values) {\n        if (values && this.subtype() === 'temporal') {\n            const formatter = this.data().getFieldspace().getDimension()[this.oneVar()].schema().format;\n            const dtFormat = new DateTimeFormatter(formatter);\n            values = values.map(e => dtFormat.getNativeDate(e));\n        }\n        return values;\n    }\n\n    /**\n     * Returns a formatter function which transforms the input value to its original form.\n     *\n     * @public\n     * @return {Function} Returns raw formatter function.\n     */\n    rawFormat () {\n        if (this.subtype() === DimensionSubtype.TEMPORAL) {\n            const dateFormat = this.data().getFieldspace().getDimension()[this.oneVar()].schema().format;\n            return val => DateTimeFormatter.formatAs(val, dateFormat);\n        }\n        return val => val;\n    }\n\n    /**\n     * Return the field names associated with this variable instance.\n     *\n     * @public\n     * @return {Array} Array of fields.\n     */\n    getMembers () {\n        return [this.oneVar()];\n    }\n\n    /**\n     * Returns the type of the variable. Whether it is measure or dimension.\n     *\n     * @public\n     * @return {string} Type of variable.\n     */\n    type () {\n        const fieldDef = this.data().getFieldsConfig()[this.oneVar()].def;\n        return fieldDef.type;\n    }\n\n    /**\n     * Returns the subtype of the variable. Subtype can be categorical or temporal. If no subtype is found, then it\n     * returns the type of the variable.\n     *\n     * @public\n     * @return {string} Subtype of variable.\n     */\n    subtype () {\n        const fieldDef = this.data().getFieldsConfig()[this.oneVar()].def;\n        return fieldDef.subtype || fieldDef.type;\n    }\n\n    /**\n     * Returns the minimum consecutive difference between the data values of this variable.\n     *\n     * @return {number} Minimum consecutive difference.\n     */\n    getMinDiff () {\n        const fieldSpace = this.data().getFieldspace();\n        return fieldSpace.fieldsObj()[this.oneVar()].minimumConsecutiveDifference();\n    }\n\n    /**\n     * Returns true if two variable instances are same.If both variable has the same field names, they are equal.\n     *\n     * @return {Boolean} Whether two variable instances are same.\n     */\n    equals (varInst) {\n        return this.oneVar() === varInst.oneVar();\n    }\n\n    /**\n     * Returns the display name of the field.\n     *\n     * @return {string} returns the display name.\n     */\n    displayName () {\n        return retrieveFieldDisplayName(this.data(), this.oneVar());\n    }\n}\n","import { ComposedVars, SimpleVariable } from '../variable';\nimport { DIMENSION, COLUMNS, ROWS, TEMPORAL } from '../enums/constants';\n\n/**\n * Gets the list of fields in a sorted order by measurement and dimension\n *\n * @param {Array} fieldList List of fields in the view\n * @param {Object} fieldMap Mapping of fields in the datamodel\n * @return {Array} fields sorted by measurement and dimensions\n */\nconst orderFields = (fieldArray, type) => {\n    const dimensionArr = [[], []];\n    const measureArr = [[], []];\n    const temporalArr = [[], []];\n    const categoricalArr = [[], []];\n\n    fieldArray.forEach((fieldList, index) => {\n        fieldList.forEach((field) => {\n            if (field.type() === DIMENSION) {\n                dimensionArr[index].push(field);\n                field.subtype() === TEMPORAL ? temporalArr[index].push(field) : categoricalArr[index].push(field);\n            } else {\n                measureArr[index].push(field);\n            }\n        });\n    });\n\n    const numOfMeasures = measureArr[0].length + (measureArr[1] ? measureArr[1].length : 0);\n\n    // Single array of fields\n    if (!fieldArray[1]) {\n        // Push measures to bottom\n        measureArr[1] = type === COLUMNS ? measureArr[0] : [];\n        // Push measures to left\n        measureArr[0] = type !== COLUMNS ? measureArr[0] : [];\n        // Bottom and right dimensions empty\n        dimensionArr[1] = [];\n        // Left and top filled with dimensions\n        dimensionArr[0] = dimensionArr[0];\n        if (numOfMeasures === 0) {\n            const allDimensions = [...dimensionArr[0], ...dimensionArr[1]];\n            if (type === COLUMNS) {\n                dimensionArr[1] = allDimensions[allDimensions.length - 1] ? [allDimensions[allDimensions.length - 1]]\n                        : [];\n                allDimensions.splice(-1, 1);\n            } else {\n                dimensionArr[1] = [];\n            }\n            dimensionArr[0] = [...allDimensions];\n        }\n    }\n\n    if (dimensionArr[0].length && dimensionArr[1].length && numOfMeasures > 0) {\n        dimensionArr[0] = [...dimensionArr[0], ...dimensionArr[1]];\n        dimensionArr[1] = [];\n    }\n    return {\n        fields: dimensionArr.map((list, i) => (i === 1 ?\n            measureArr[i].concat(dimensionArr[i]) : dimensionArr[i].concat(measureArr[i]))),\n        dimensions: [...dimensionArr[0], ...dimensionArr[1]],\n        measures: [...measureArr[0], ...measureArr[1]],\n        temporal: [...temporalArr[0], ...temporalArr[1]],\n        categorical: [...categoricalArr[0], ...categoricalArr[1]]\n    };\n};\n\n/**\n * Gets the list of normalized fields\n *\n * @param {Array} fields List of fields in the view\n * @param {Object} fieldMap Mapping of fields in the datamodel\n * @return {Array} fields normalized by measurement and dimensions\n */\nconst normalizeFields = (config, type) => {\n    const fieldsArr = [];\n    const fields = config[type];\n\n    if (!(fields[0] instanceof Array)) {\n        fieldsArr[0] = fields;\n    } else {\n        fieldsArr[0] = fields[0] || [];\n        fieldsArr[1] = fields[1] || [];\n    }\n    return fieldsArr;\n};\n\n/**\n *\n *\n * @param {*} fields\n * @param {*} datamodel\n *\n */\nconst convertToVar = (datamodel, fields) => {\n    const vars = [];\n\n    fields && fields.forEach((field) => {\n        if (field instanceof ComposedVars) {\n            vars.push(field);\n            field.data(datamodel);\n        } else {\n            vars.push(new SimpleVariable(field).data(datamodel));\n        }\n    });\n    return vars;\n};\n\n/**\n *\n *\n * @param {*} rows\n * @param {*} columns\n * @param {*} datamodel\n *\n */\nexport const transformFields = (datamodel, config) => {\n    const [rowsInfo, columnsInfo] = [ROWS, COLUMNS].map((fields) => {\n        const normalizedFields = normalizeFields(config, fields);\n        const norFields = [convertToVar(datamodel, normalizedFields[0])];\n\n        if (normalizedFields[1]) {\n            norFields[1] = convertToVar(datamodel, normalizedFields[1]);\n        }\n        return orderFields(norFields, fields);\n    });\n    const {\n        fields: rows,\n        dimensions: rowDimensions,\n        measures: rowMeasures,\n        temporal: rowTemporalFields,\n        categorical: rowCategoricalFields\n    } = rowsInfo;\n    const {\n        fields: columns,\n        dimensions: columnDimensions,\n        measures: columnMeasures,\n        temporal: columnTemporalFields,\n        categorical: columnCategoricalFields\n    } = columnsInfo;\n    return {\n        rows,\n        rowDimensions,\n        rowMeasures,\n        rowTemporalFields,\n        rowCategoricalFields,\n        columns,\n        columnTemporalFields,\n        columnCategoricalFields,\n        columnDimensions,\n        columnMeasures\n    };\n};\n","import { ERROR_MSG, mergeRecursive } from 'muze-utils';\nimport { transformFields } from './field-sanitizer';\nimport { getHeaderAxisFrom } from '../group-helper/group-utils';\nimport { ROW, COLUMN } from '../enums/constants';\n\n/**\n *\n *\n * @export\n * @class VisualEncoder\n */\nexport default class VisualEncoder {\n\n    /**\n     *\n     *\n     * @memberof VisualEncoder\n     */\n    createAxis () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    /**\n     *\n     *\n     * @memberof VisualEncoder\n     */\n    setCommonDomain () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    /**\n     *\n     *\n     * @memberof VisualEncoder\n     */\n    getLayerConfig () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    fieldInfo (...info) {\n        if (info.length) {\n            this._fieldInfo = mergeRecursive(this._fieldInfo || {}, info[0]);\n            return this;\n        }\n        return this._fieldInfo;\n    }\n\n    /**\n     *\n     *\n     * @param {*} datamodel\n     * @param {*} config\n     *\n     * @memberof VisualEncoder\n     */\n    fieldSanitizer (datamodel, config) {\n        this.fieldInfo(transformFields(datamodel, config));\n        return this.fieldInfo();\n    }\n\n    /**\n     *\n     *\n     * @param {*} params\n     *\n     * @memberof VisualEncoder\n     */\n    axisFrom (...params) {\n        if (params.length) {\n            this._axisFrom = params[0];\n            return this;\n        }\n        return this._axisFrom;\n    }\n\n    /**\n     *\n     *\n     * @param {*} params\n     *\n     * @memberof VisualEncoder\n     */\n    headerFrom (...params) {\n        if (params.length) {\n            this._headerFrom = params[0];\n            return this;\n        }\n        return this.__headerFrom;\n    }\n\n    /**\n     *\n     *\n     * @param {*} axisFrom\n     *\n     * @memberof CartesianEncoder\n     */\n    setAxisAndHeaders (axisFrom = {}, fields) {\n        const [rowHeader, rowAxis] = getHeaderAxisFrom(ROW, fields.rows, axisFrom);\n        const [colHeader, colAxis] = getHeaderAxisFrom(COLUMN, fields.columns, axisFrom);\n\n        this.axisFrom({\n            row: rowAxis,\n            column: colAxis\n        });\n        this.headerFrom({\n            row: rowHeader,\n            column: colHeader\n        });\n        return this;\n    }\n}\n","import { ContinousAxis, BandAxis, TimeAxis, ColorAxis, SizeAxis, ShapeAxis } from '@chartshq/muze-axis';\n\nexport const scaleMaps = {\n    linear: ContinousAxis,\n    band: BandAxis,\n    temporal: TimeAxis,\n    size: SizeAxis,\n    color: ColorAxis,\n    shape: ShapeAxis\n};\n","import { ScaleType } from '@chartshq/muze-axis';\n\n/**\n * Map of DataModel types to associated field types.\n */\nexport const dataTypeScaleMap = {\n    dimension: ScaleType.BAND,\n    categorical: ScaleType.BAND,\n    temporal: ScaleType.TIME,\n    measure: ScaleType.LINEAR,\n    continuous: ScaleType.LINEAR\n};\n","import { mergeRecursive, getObjProp } from 'muze-utils';\nimport { AxisOrientation } from '@chartshq/muze-axis';\nimport { ENCODING } from '@chartshq/visual-layer';\nimport { scaleMaps } from '../enums/scale-maps';\nimport { getAxisType, getAxisKey } from '../group-helper';\nimport { dataTypeScaleMap } from '../data-type-scale-map';\nimport { CATEGORICAL, TEMPORAL, BAR, LINE, POINT, BOTH, Y, COLOR, SHAPE, SIZE, ANGLE0 } from '../enums/constants';\n\n/**\n *\n *\n * @param {*} axisInfo\n * @param {*} field\n * @param {*} axesCreators\n *\n */\nconst getAxisConfig = (axisInfo, field, axesCreators, indices, facetFields) => {\n    let axisOrientation;\n    const { index, axisIndex, axisType } = axisInfo;\n    const { config, position } = axesCreators;\n    const { rowIndex, columnIndex } = indices;\n    const rawUserAxisConfig = config.axes ? (config.axes[axisType] || {}) : {};\n\n    // Change config object to a function if not already one\n    const userAxisConfigFn = typeof rawUserAxisConfig !== 'function' ?\n    () => rawUserAxisConfig : rawUserAxisConfig;\n    const userAxisConfig = userAxisConfigFn(rowIndex, columnIndex, {\n        axisFields: field.getMembers(),\n        facetFields\n    });\n\n    // If current config does not specifes config for an axis, retain old config\n    if (!userAxisConfig) {\n        return {};\n    }\n\n    const {\n        LEFT,\n        RIGHT,\n        TOP,\n        BOTTOM\n    } = AxisOrientation;\n    const allOrientations = axisType === Y ? [LEFT, RIGHT] : [TOP, BOTTOM];\n\n    if (position === BOTH) {\n        axisOrientation = allOrientations[axisIndex];\n    } else {\n        axisOrientation = position;\n    }\n    const axisConfig = {\n        id: `${axisType}-${index}-${axisIndex}`,\n        name: field.displayName(),\n        field: field.toString(),\n        numberFormat: field.numberFormat(),\n        orientation: axisOrientation,\n        showAxisName: true,\n        show: true,\n        type: dataTypeScaleMap[field.subtype()]\n    };\n    userAxisConfig.tickValues = field.format(userAxisConfig.tickValues);\n    userAxisConfig.domain = field.format(userAxisConfig.domain);\n\n    return mergeRecursive(axisConfig, userAxisConfig);\n};\n\n/**\n *\n *\n * @param {*} axisInfo\n * @param {*} field\n * @param {*} axesCreators\n *\n */\nconst createSimpleAxis = (axisConfig, field, axesCreators) => {\n    const { labelManager } = axesCreators;\n    const Cls = scaleMaps[dataTypeScaleMap[field.subtype()]];\n    const simpleAxis = new Cls(axisConfig, { labelManager });\n    return simpleAxis;\n};\n\nexport const getAdjustedDomain = (max, min) => {\n    const y1ratio = max[0] / (max[0] - min[0]);\n    const y2ratio = max[1] / (max[1] - min[1]);\n\n    // adjust min/max values for positive negative values zero line etc\n    let allSameSign = false;\n\n    // if all numbers are positive set floor to zero\n    if (min[0] > 0 && min[1] > 0 && min[1] > 0 && max[1] > 0) {\n        allSameSign = true;\n        min[0] = 0;\n        min[1] = 0;\n    }\n\n    // if all numbers are negative set ceiling to zero\n    if (min[0] < 0 && min[1] < 0 && min[1] < 0 && max[1] < 0) {\n        allSameSign = true;\n        max[0] = 0;\n        max[1] = 0;\n    }\n\n    // align zero line if necessary\n    if (!allSameSign && y1ratio !== y2ratio) {\n        if (y1ratio < y2ratio) {\n                    // adjust min[1]\n            min[1] = min[0] / max[0] * max[1];\n        } else {\n                    // adjust min[0]\n            min[0] = min[1] / max[1] * max[0];\n        }\n    }\n    return [\n        [min[0], max[0]],\n        [min[1], max[1]]\n    ];\n};\n\n/**\n *\n *\n * @param {*} axisType\n * @param {*} fieldInfo\n * @param {*} axesCreators\n * @param {*} groupAxes\n *\n */\nexport const generateAxisFromMap = (axisType, fieldInfo, axesCreators, axesInfo, indices, facetFields) => {\n    let axisKey;\n    const { groupAxes, valueParser } = axesInfo;\n    const currentAxes = [];\n    const { fields, index } = fieldInfo;\n    const { cacheMaps } = axesCreators;\n    const map = cacheMaps[`${axisType}AxesMap`];\n\n    const commonAxisKey = getAxisKey(axisType, index);\n    fields.forEach((field, axisIndex) => {\n        axisKey = getAxisKey(axisType, index, axisIndex, dataTypeScaleMap[field.subtype()]);\n        const axisConfig = getAxisConfig({ index, axisIndex, axisType }, field, axesCreators, indices, facetFields);\n\n        let axis;\n        if (!map.has(axisKey)) {\n            axis = createSimpleAxis(axisConfig, field, axesCreators);\n        } else {\n            axis = map.get(axisKey);\n            axis._rotationLock = false;\n            axis.config(axisConfig);\n        }\n        axis.valueParser(valueParser);\n        currentAxes.push(axis);\n        map.set(axisKey, axis);\n    });\n\n    if (currentAxes.length) {\n        map.set(commonAxisKey, currentAxes);\n        groupAxes.add(commonAxisKey);\n    }\n\n    return currentAxes;\n};\n\nexport const sanitizeIndividualLayerConfig = (encodingConfigs, def) => {\n    [COLOR, SHAPE, SIZE].forEach((axis) => {\n        if (encodingConfigs[axis] && encodingConfigs[axis].field) {\n            def.forEach((conf) => {\n                conf.encoding = conf.encoding || {};\n                !conf.encoding[axis] && (conf.encoding[axis] = {});\n                conf.encoding[axis].field = encodingConfigs[axis].field;\n            });\n        }\n    });\n};\n\n/**\n *\n *\n * @memberof MatrixResolver\n */\nexport const mutateAxesFromMap = (cacheMaps, axes) => {\n    const {\n        xAxesMap,\n        yAxesMap\n    } = cacheMaps;\n    const {\n        x: xAxisSet,\n        y: yAxisSet\n    } = axes;\n    const xAxes = [];\n    const yAxes = [];\n\n    xAxisSet.forEach((axisId) => {\n        const xAxis = xAxesMap.get(axisId);\n        xAxes.push(xAxis);\n    });\n    yAxisSet.forEach((axisId) => {\n        const yAxis = yAxesMap.get(axisId);\n        yAxes.push(yAxis);\n    });\n    return {\n        xAxes, yAxes\n    };\n};\n\n/**\n * return a default mark based on predefined set of rules of type and subtype of the fields\n *\n * @param {string} colFieldType dimension/measure - temporal/ordinal/nominal\n * @param {string} rowFieldType dimension/measure - temporal/ordinal/nominal\n * @return {Object} return mark type\n */\nexport const getDefaultMark = (colFieldType, rowFieldType) => {\n    let mark;\n\n    if (colFieldType === CATEGORICAL || rowFieldType === CATEGORICAL) {\n        mark = BAR;\n    } else if (colFieldType === TEMPORAL || rowFieldType === TEMPORAL) {\n        mark = LINE;\n    } else {\n        mark = POINT;\n    }\n\n    return mark;\n};\n\n/**\n *\n *\n * @param {*} axesCreators\n * @param {*} [fieldInfo=[]]\n *\n */\nexport const createRetinalAxis = (axesCreators, fieldProps = {}) => {\n    const { axisType, fieldsConfig } = axesCreators;\n    const field = fieldProps.field;\n    const axis = [];\n    const Cls = scaleMaps[axisType];\n\n    fieldProps.type = fieldProps.type ? fieldProps.type : getAxisType(fieldsConfig, field || null);\n    axis.push(new Cls(fieldProps));\n    return axis;\n};\n\n/**\n *\n *\n * @param {*} arr\n * @param {*} val\n *\n */\nexport const getIndex = (arr, val) => {\n    let i = 0;\n    let arrIndex = -1;\n\n    while (arrIndex === -1 && i < arr.length) {\n        if (arr[i].toString() === val.toString()) {\n            arrIndex = i;\n        }\n        i++;\n    }\n    return arrIndex;\n};\n\n/**\n *\n *\n * @param {*} colFields\n * @param {*} rowFields\n * @param {*} userLayerConfig\n *\n * @memberof CartesianEncoder\n */\nexport const getLayerConfFromFields = (colFields, rowFields, userLayerConfig) => userLayerConfig.filter((conf) => {\n    const userConf = conf instanceof Array ? conf : [conf];\n    const encodingArr = [].concat(...userConf.map(d => d.encoding).filter(d => d !== undefined));\n\n    if (!encodingArr.length) {\n        return true;\n    }\n\n    const xFields = [].concat(...encodingArr.map(d => [d.x && d.x.field, d.x0 && d.x0.field]))\n                .filter(d => d !== undefined && d !== null);\n    const yFields = [].concat(...encodingArr.map(d => [d.y && d.y.field, d.y0 && d.y0.field]))\n                .filter(d => d !== undefined && d !== null);\n\n    if (!xFields.length && !yFields.length) {\n        return true;\n    }\n\n    const colFieldExist = xFields.length ? xFields.every(d => colFields.indexOf(d) !== -1) : false;\n    const rowFieldExist = yFields.length ? yFields.every(d => rowFields.indexOf(d) !== -1) : false;\n    if (xFields.length && yFields.length) {\n        return colFieldExist && rowFieldExist;\n    }\n    return colFieldExist || rowFieldExist;\n});\n\nexport const resolveAxisConfig = (context, fieldInf, axisInfo) => {\n    const { rowIndex, columnIndex, axesObj } = axisInfo;\n    const { config, facetFields, resolver } = context;\n    const resolverAxes = resolver.axes();\n    const { RADIUS, ANGLE } = ENCODING;\n    [RADIUS, ANGLE, ANGLE0].forEach((enc) => {\n        const axesArr = resolverAxes[enc];\n        if (!axesArr[rowIndex]) {\n            axesArr[rowIndex] = [];\n        }\n        axesArr[rowIndex][columnIndex] = axesObj[enc];\n        const axisConfig = getObjProp(config.axes, enc) || {};\n\n        axesObj[enc].forEach((axis, i) => {\n            let userConfig = axisConfig;\n            if (axisConfig instanceof Function) {\n                userConfig = axisConfig(rowIndex, columnIndex, {\n                    axisFields: [fieldInf[enc][i]],\n                    facetFields\n                });\n            }\n            axis.config(userConfig);\n        });\n    });\n};\n","import { layerFactory } from '@chartshq/visual-layer';\nimport {\n    mergeRecursive,\n    STATE_NAMESPACES,\n    unionDomain,\n    COORD_TYPES,\n    toArray\n} from 'muze-utils';\nimport { ScaleType } from '@chartshq/muze-axis';\nimport {\n    generateAxisFromMap,\n    getDefaultMark,\n    getIndex,\n    getLayerConfFromFields,\n    getAdjustedDomain,\n    sanitizeIndividualLayerConfig\n} from './encoder-helper';\nimport { retriveDomainFromData } from '../group-helper';\n\nimport { ROW, COLUMN, COL, LEFT, TOP, MEASURE, BOTH, X, Y, ASCENDING, DESCENDING } from '../enums/constants';\nimport VisualEncoder from './visual-encoder';\n\nconst CARTESIAN = COORD_TYPES.CARTESIAN;\n\n/**\n *\n *\n * @export\n * @class CartesianEncoder\n * @extends {VisualEncoder}\n */\nexport default class CartesianEncoder extends VisualEncoder {\n\n    /**\n     *\n     *\n     *\n     * @memberof CartesianEncoder\n     */\n    static type () {\n        return CARTESIAN;\n    }\n\n    /**\n     *\n     *\n     * @param {*} axesCreators\n     * @param {*} fieldInfo\n     *\n     * @memberof CartesianEncoder\n     */\n    createAxis (axesCreators, fieldInfo, context) {\n        const geomCellAxes = {};\n        const {\n            axes\n        } = axesCreators;\n        const {\n            projections,\n            indices\n        } = fieldInfo;\n        const {\n            rowFields,\n            columnFields\n        } = projections;\n        const {\n             rowIndex,\n             columnIndex\n        } = indices;\n        const axisFields = [{\n            fields: rowFields,\n            index: rowIndex\n        }, {\n            fields: columnFields,\n            index: columnIndex\n        }];\n        const { resolver, facetFields, geomCell } = context;\n        const xAxes = axes.x || [];\n        const yAxes = axes.y || [];\n\n        [rowFields, columnFields].forEach((fields, i) => {\n            const type = i === 0 ? ROW : COLUMN;\n            const axis = i === 0 ? Y : X;\n\n            if (fields.length > 1) {\n                axesCreators.position = BOTH;\n            } else {\n                axesCreators.position = this.axisFrom()[type];\n            }\n            geomCellAxes[axis] = generateAxisFromMap(axis, axisFields[i], axesCreators, {\n                groupAxes: axis === X ? xAxes : yAxes,\n                valueParser: resolver.valueParser()\n            }, indices, facetFields);\n        });\n        geomCell.axes(geomCellAxes);\n        return geomCellAxes;\n    }\n\n    updateDomains (store, axes) {\n        const xAxes = axes.x;\n        const yAxes = axes.y;\n        store.model.lock();\n        for (let i = 0; i < xAxes.length; i++) {\n            for (let j = 0; j < xAxes[i].length; j++) {\n                store.commit(`${STATE_NAMESPACES.GROUP_GLOBAL_NAMESPACE}.domain.x.${0}${i}0`, xAxes[i][j].domain());\n            }\n        }\n        for (let i = 0; i < yAxes.length; i++) {\n            for (let j = 0; j < yAxes[i].length; j++) {\n                store.commit(`${STATE_NAMESPACES.GROUP_GLOBAL_NAMESPACE}.domain.y.${i}${0}0`, yAxes[i][j].domain());\n                yAxes[i][j]._domainLock = false;\n            }\n        }\n\n        store.model.unlock();\n    }\n\n    unionUnitDomains (context) {\n        const store = context.store();\n        const resolver = context.resolver();\n        const units = resolver.units();\n        const domains = {\n            0: {},\n            1: {}\n        };\n        // const sortingDetails = nearestSortingDetails(context.getGroupByData());\n        const config = context.config();\n        const fieldsObj = {\n            0: {},\n            1: {}\n        };\n\n        for (let rIdx = 0, len = units.length; rIdx < len; rIdx++) {\n            const unitsArr = units[rIdx];\n            for (let cIdx = 0, len2 = unitsArr.length; cIdx < len2; cIdx++) {\n                const unit = unitsArr[cIdx];\n                const axisFields = unit.fields();\n                const encodingDomains = unit.getDataDomain();\n                ['x', 'y'].forEach((axisType, axisTypeIndex) => {\n                    const fieldArr = axisFields[axisType];\n                    fieldArr.forEach((field, axisIndex) => {\n                        const key = !axisTypeIndex ? `0${cIdx}${axisIndex}` : `${rIdx}0${axisIndex}`;\n                        const dom = encodingDomains[axisType];\n                        const typeOfField = field.subtype();\n                        fieldsObj[axisTypeIndex][key] = field;\n\n                        if (dom && Object.keys(dom).length !== 0) {\n                            domains[axisTypeIndex][key] = unionDomain([(domains[axisTypeIndex] &&\n                                domains[axisTypeIndex][key]) || [], dom[`${field}`]], typeOfField);\n                        }\n                    });\n                });\n            }\n        }\n\n        const { x: xAxes, y: yAxes } = resolver.axes();\n        store.model.lock();\n        [xAxes, yAxes].forEach((axesArr, axisType) => {\n            axesArr.forEach((axes, idx) => {\n                let key;\n                let domain = [];\n                let adjustedDomain = [];\n                const min = [];\n                const max = [];\n                const typeOfAxis = axes[0].constructor.type();\n\n                if (axes.length > 1 && typeOfAxis === ScaleType.LINEAR && axes[0].config().alignZeroLine) {\n                    axes.forEach((axis, i) => {\n                        key = !axisType ? `0${idx}${i}` : `${idx}0${i}`;\n                        domain = domains[axisType][key];\n                        min[i] = domain[0];\n                        max[i] = domain[1];\n                    });\n                    adjustedDomain = getAdjustedDomain(max, min);\n                } else if (typeOfAxis === ScaleType.BAND) {\n                    /* Sort categorical fields to ensure consistency across all rows\n                    only if field is categorical and is not explicitily sorted by user */\n                    key = !axisType ? `0${idx}0` : `${idx}00`;\n                    const currentFieldName = fieldsObj[axisType][key].oneVar();\n                    const sortingOrder = config.sort[currentFieldName];\n                    const isSortingDisabled = config.sort.disabled;\n\n                    if (!isSortingDisabled && sortingOrder) {\n                        if (sortingOrder === ASCENDING) {\n                            domains[axisType][key].sort();\n                        } else if (sortingOrder === DESCENDING) {\n                            domains[axisType][key].sort().reverse();\n                        }\n                    }\n                }\n\n                axes.forEach((axis, index) => {\n                    key = !axisType ? `0${idx}${index}` : `${idx}0${index}`;\n                    domain = adjustedDomain[index] || domains[axisType][key];\n\n                    domain && axis.domain(domain);\n                    const type = !axisType ? 'x' : 'y';\n                    store.commit(`${STATE_NAMESPACES.GROUP_GLOBAL_NAMESPACE}.domain.${type}.${idx}${index}`, domain);\n                });\n            });\n        });\n        store.model.unlock();\n    }\n\n    /**\n     *\n     *\n     * @param {*} fields\n     *\n     * @memberof CartesianEncoder\n     */\n    getFacetsAndProjections (fields, type) {\n        let facets = [];\n        let projections = [];\n        let counter = 0;\n        const primaryFacets = [];\n        const secondaryFacets = [];\n        const primaryFields = fields[0];\n        const secondaryFields = fields[1];\n        const primaryLen = primaryFields.length;\n        const secondaryLen = secondaryFields.length;\n        const axisFrom = this.axisFrom();\n\n        for (let i = 0; i < primaryLen; i++) {\n            let projArr = [primaryFields[i]];\n            const primaryField = primaryFields[i];\n\n            if (primaryField.type() === MEASURE) {\n                const secondaryField = secondaryFields[counter];\n                if (secondaryField && secondaryField.type() === MEASURE) {\n                    counter++;\n                    projArr = [primaryField, secondaryField];\n                }\n                projections.push(projArr);\n            } else {\n                facets.push(primaryField);\n                primaryFacets.push(primaryField);\n            }\n        }\n        if (secondaryLen > counter) {\n            for (let i = counter; i < secondaryLen; i++) {\n                const secondaryField = secondaryFields[i];\n                const projArr = [secondaryField];\n                if (secondaryField.type() === MEASURE) {\n                    projections.push(projArr);\n                } else {\n                    facets.push(secondaryField);\n                    secondaryFacets.push(secondaryField);\n                }\n            }\n        }\n        if ((primaryFacets.length || secondaryFacets.length) && !projections.length) {\n            type = type === COL ? COLUMN : type;\n            if ((axisFrom[type] === LEFT || axisFrom[type] === TOP) && primaryFacets.length) {\n                const axisFromIndex = primaryFacets.length - 1;\n                const facet = primaryFacets[axisFromIndex];\n                projections = [[facet]];\n                const existIndex = getIndex(secondaryFacets, facet);\n                if (existIndex > -1) {\n                    projections = [[facet, facet]];\n                    secondaryFacets.splice(existIndex, 1);\n                }\n                primaryFacets.splice(axisFromIndex, 1);\n            } else {\n                const axisFromIndex = 0;\n                const facet = secondaryFacets[axisFromIndex];\n                projections = [[facet]];\n                const existIndex = getIndex(primaryFacets, facet);\n                if (existIndex > -1) {\n                    projections = [[facet, facet]];\n                    primaryFacets.splice(existIndex, 1);\n                }\n                secondaryFacets.splice(axisFromIndex, 1);\n            }\n        }\n\n        facets = [...primaryFacets, ...secondaryFacets];\n        facets = facets.filter((el, index, self) => index === self.findIndex(t => (t.toString() === el.toString())));\n        return {\n            facets,\n            projections\n        };\n    }\n\n    /**\n     *\n     *\n     * @param {*} datamodel\n     * @param {*} config\n     *\n     * @memberof CartesianEncoder\n     */\n    fieldSanitizer (datamodel, config) {\n        return super.fieldSanitizer(datamodel, config);\n    }\n\n    /**\n     *\n     *\n     * @param {*} datamodel\n     *\n     * @memberof CartesianEncoder\n     */\n    getRetinalFieldsDomain (dataModels, encoding) {\n        const groupedModel = dataModels.groupedModel;\n        const domains = {};\n        for (const key in encoding) {\n            if ({}.hasOwnProperty.call(encoding, key)) {\n                const encodingObj = encoding[key];\n                const field = encodingObj.field;\n                if (!encodingObj.domain && field) {\n                    const domain = retriveDomainFromData(groupedModel, field);\n                    domains[field] = domain;\n                }\n            }\n        }\n        return domains;\n    }\n\n    /**\n     *\n     *\n     * @param {*} layerArray\n     * @memberof CartesianEncoder\n     */\n    serializeLayerConfig (layerArray) {\n        const serializedLayers = [];\n        // let currentLayerIndex = 0;\n        layerArray.length && layerArray.forEach((layer, i) => {\n            const def = layerFactory.sanitizeLayerConfig(layer);\n            def.order = i;\n            serializedLayers.push(def);\n        });\n        return serializedLayers;\n    }\n\n    sanitizeLayerConfig (encodingConfigs, userLayerConfig) {\n        const layerConfig = [];\n        userLayerConfig.forEach((config) => {\n            const def = toArray(config.def);\n            sanitizeIndividualLayerConfig(encodingConfigs, def);\n            layerConfig.push(config);\n        });\n        return layerConfig;\n    }\n\n    /**\n     *\n     *\n     * @param {*} fields\n     * @param {*} userLayerConfig\n     *\n     * @memberof CartesianEncoder\n     */\n    getLayerConfig (fields, userLayerConfig, retinalConfig) {\n        const layerConfig = [];\n        const {\n            columnFields,\n            rowFields\n        } = fields;\n\n        // let currentLayerIndex = 0;\n        columnFields.forEach((colField) => {\n            const colFieldName = colField.toString();\n            rowFields.forEach((rowField) => {\n                let configs = [];\n                const rowFieldName = rowField.toString();\n                const encoding = {\n                    x: {\n                        field: colFieldName\n                    },\n                    y: {\n                        field: rowFieldName\n                    }\n                };\n                const rowFieldType = rowField.subtype();\n                const colFieldType = colField.subtype();\n                const mark = getDefaultMark(colFieldType, rowFieldType);\n\n                const defConfigs = [{\n                    mark,\n                    def: {\n                        mark,\n                        encoding\n                    }\n                }];\n\n                const layerConfigs = getLayerConfFromFields(colField.getMembers(),\n                    rowField.getMembers(), userLayerConfig || []);\n                if (layerConfigs.length) {\n                    configs = layerConfigs.map((layerConf) => {\n                        const mergedLayerConf = mergeRecursive(mergeRecursive({}, defConfigs[0].def), layerConf);\n                        const serializedLayerConfig = layerFactory.getSerializedConf(mergedLayerConf.mark,\n                            mergedLayerConf);\n                        return {\n                            mark: mergedLayerConf.mark,\n                            order: mergedLayerConf.order,\n                            def: serializedLayerConfig\n                        };\n                    });\n                } else {\n                    configs = defConfigs;\n                }\n\n                layerConfig.push(...configs);\n            });\n        });\n        return this.sanitizeLayerConfig(retinalConfig, layerConfig);\n    }\n}\n","import { AngleAxis, RadiusAxis } from '@chartshq/muze-axis';\nimport { layerFactory, ENCODING } from '@chartshq/visual-layer';\nimport {\n    mergeRecursive,\n    STATE_NAMESPACES,\n    GROUP_BY_FUNCTIONS,\n    COORD_TYPES,\n    toArray,\n    getObjProp,\n    defaultValue\n} from 'muze-utils';\nimport VisualEncoder from './visual-encoder';\nimport { SIZE, MEASURE, ARC, COLOR } from '../enums/constants';\nimport { sanitizeIndividualLayerConfig, resolveAxisConfig } from './encoder-helper';\nimport { SimpleVariable } from '../variable';\n\nconst POLAR = COORD_TYPES.POLAR;\nconst { RADIUS, ANGLE, ANGLE0 } = ENCODING;\n\nconst axesCls = {\n    [RADIUS]: RadiusAxis,\n    [ANGLE]: AngleAxis,\n    [ANGLE0]: AngleAxis\n};\n\nconst getSizeMultiplier = (sizeVal, sizeAxis) => {\n    const sizeAxisDomain = sizeAxis.domain();\n    const sizeMultiplier = sizeAxis.getSize(sizeVal) / (sizeAxisDomain ? sizeAxis.range()[1] : sizeAxis.config().value);\n    return sizeMultiplier;\n};\n\nconst setRadiusFactor = (context) => {\n    const data = context.data();\n    const sizeField = context.retinalFields().size.field;\n    const { radius, size } = context.axes();\n\n    if (sizeField && radius && radius.length) {\n        const sizeFieldIndex = data.getFieldsConfig()[sizeField].index;\n        const sizeVal = data.getData().data.reduce((acc, val) => acc + val[sizeFieldIndex], 1);\n        const sizeMultiplier = getSizeMultiplier(sizeVal, size[0]);\n        radius.forEach(axis => axis.setRadiusFactor(sizeMultiplier));\n    }\n};\n\n/**\n *\n *\n * @export\n * @class PolarEncoder\n * @extends {VisualEncoder}\n */\nexport default class PolarEncoder extends VisualEncoder {\n\n    /**\n     *\n     *\n     * @param {*} axesCreators\n     * @param {*} fieldInfo\n     *\n     * @memberof PolarEncoder\n     */\n    createAxis (axesCreators, fieldInfo, context) {\n        const {\n            axes\n        } = axesCreators;\n        const geomCellAxes = axes;\n        const {\n            indices\n        } = fieldInfo;\n        const {\n            rowIndex,\n            columnIndex\n        } = indices;\n        // Dummy axes for polar, to create blank cells\n        const pieAxes = geomCellAxes.pie || [];\n\n        pieAxes[rowIndex] = pieAxes[rowIndex] || [];\n        pieAxes[rowIndex][columnIndex] = [];\n\n        const axesObj = {};\n        const { geomCell, resolver } = context;\n        const layers = resolver.matrixLayers();\n        const resolverAxes = resolver.axes();\n        const cellLayers = layers[rowIndex][columnIndex];\n        const fields = {\n            radius: {},\n            angle: {},\n            angle0: {}\n        };\n\n        cellLayers.forEach((layerConf) => {\n            const def = layerConf.def;\n            [ANGLE, ANGLE0, RADIUS].forEach((enc) => {\n                const field = getObjProp(def.encoding, enc, 'field');\n                field && (fields[enc][field] = 0);\n            });\n        });\n        const fieldInf = {};\n        const varInstances = {};\n\n        for (const encType in fields) {\n            fieldInf[encType] = Object.keys(fields[encType]);\n            axesObj[encType] = [];\n            varInstances[encType] = [];\n            fieldInf[encType].forEach((field, i) => {\n                varInstances[encType][i] = new SimpleVariable(field);\n                axesObj[encType][i] = new axesCls[encType]();\n            });\n            axesObj[encType][axesObj[encType].length] = new axesCls[encType]();\n        }\n        resolveAxisConfig(context, fieldInf, {\n            axesObj,\n            rowIndex,\n            columnIndex\n        });\n        geomCell.axes(axesObj)\n            .fields(Object.assign({}, varInstances, geomCell.fields()));\n        resolverAxes.pie = pieAxes;\n        return geomCellAxes;\n    }\n\n    /**\n     *\n     *\n     * @param {*} fields\n     *\n     * @memberof CartesianEncoder\n     */\n    getFacetsAndProjections (fields) {\n        let counter = 0;\n        const facets = [];\n        const projections = [];\n        const primaryFields = fields[0];\n        const secondaryFields = fields[1];\n        const primaryLen = primaryFields.length;\n        const secondaryLen = secondaryFields.length;\n\n        for (let i = 0; i < primaryLen; i++) {\n            const primaryField = primaryFields[i];\n            if (primaryField.type() === MEASURE) {\n                const secondaryField = secondaryFields[counter++];\n                const projArr = secondaryField ? [primaryField, secondaryField] : [primaryField];\n                projections.push(projArr);\n            } else {\n                facets.push(primaryField);\n            }\n        }\n        if (secondaryLen > counter) {\n            for (let i = counter; i < secondaryLen; i++) {\n                const secondaryField = secondaryFields[i];\n                const projArr = [secondaryField];\n                if (secondaryField.type() === MEASURE) {\n                    projections.push(projArr);\n                } else {\n                    facets.push(secondaryField);\n                }\n            }\n        }\n        return {\n            facets,\n            projections\n        };\n    }\n\n    unionUnitDomains (context) {\n        const store = context.store();\n        const domainProps = {\n            radius: [],\n            angle: [],\n            angle0: []\n        };\n        const axes = context.resolver().axes();\n        context.matrixInstance().value.each((cell, rIdx, cIdx) => {\n            const unit = cell.valueOf();\n            const unitDomains = unit.getDataDomain();\n            const fields = unit.fields();\n            setRadiusFactor(unit);\n            [RADIUS, ANGLE, ANGLE0].forEach((encType) => {\n                const encodingFields = fields[encType];\n                const domains = unitDomains[encType] || {};\n                encodingFields.forEach((field, i) => {\n                    !domainProps[encType][rIdx] && (domainProps[encType][rIdx] = []);\n                    !domainProps[encType][rIdx][cIdx] && (domainProps[encType][rIdx][cIdx] = []);\n                    domainProps[encType][rIdx][cIdx][i] = domains[`${field}`] || [];\n                });\n            });\n        });\n\n        for (const key in domainProps) {\n            const specificAxes = axes[key];\n            specificAxes.forEach((axesArr, rIdx) => {\n                axesArr.forEach((axisArr, cIdx) => {\n                    axisArr.forEach((axis, i) => {\n                        axis.domain(defaultValue(getObjProp(domainProps[key], rIdx, cIdx, i), []));\n                    });\n                });\n            });\n            store.commit(`${STATE_NAMESPACES.GROUP_GLOBAL_NAMESPACE}.domain.${key}`, domainProps[key]);\n        }\n    }\n\n    /**\n     *\n     *\n     *\n     * @memberof PolarEncoder\n     */\n    setCommonDomain () {\n        // No domain to be set\n        return this;\n    }\n\n    /**\n     *\n     *\n     *\n     * @memberof PolarEncoder\n     */\n    static type () {\n        return POLAR;\n    }\n\n    layers (...layers) {\n        if (layers.length) {\n            this._layers = layers[0];\n            return this;\n        }\n        return this._layers;\n    }\n\n    /**\n     *\n     *\n     * @param {*} datamodel\n     * @param {*} config\n     * @memberof PolarEncoder\n     */\n    fieldSanitizer (datamodel, config) {\n        let sanitizedRows = [[], []];\n        let sanitizedColumns = [[], []];\n        const fields = super.fieldSanitizer(datamodel, config);\n        const {\n            layers\n        } = config;\n        const {\n            rows,\n            columns\n        } = fields;\n        const layer = layers[0];\n        const encoding = layer.encoding;\n        const radius = encoding && encoding.radius ? encoding.radius.field : null;\n        const angle = encoding && encoding.angle ? encoding.angle.field : null;\n        const sanitizedFields = [sanitizedRows, sanitizedColumns];\n\n        [rows, columns].forEach((fieldType, typeIndex) => {\n            fieldType.forEach((fieldSet, i) => fieldSet.forEach((field) => {\n                if (field.toString() !== radius && field.toString() !== angle && field.type() !== MEASURE) {\n                    sanitizedFields[typeIndex][i].push(field);\n                }\n            }));\n        });\n        sanitizedColumns = [...new Set(sanitizedColumns)];\n        sanitizedRows = [...new Set(sanitizedRows)];\n        this.fieldInfo({ rows: sanitizedRows, columns: sanitizedColumns });\n        return this.fieldInfo();\n    }\n\n    getRetinalFieldsDomain (dataModels, encoding, facetFields, groupBy) {\n        let sizeField;\n        let colorField;\n        const fields = [];\n        const layers = this.layers();\n        const dataModel = dataModels.groupedModel;\n        const fieldsConfig = dataModel.getFieldsConfig();\n        const domains = {};\n        if (layers && layers[0]) {\n            const layer = layers[0];\n            const layerEncoding = layer.def.encoding || {};\n\n            [RADIUS, ANGLE, SIZE, COLOR].forEach((encType) => {\n                const field = layerEncoding[encType] ? layerEncoding[encType].field : '';\n                const measureField = fieldsConfig[field] && fieldsConfig[field].def.type === MEASURE;\n                if (encType === SIZE && measureField) {\n                    sizeField = field;\n                }\n                if (encType === COLOR) {\n                    colorField = field;\n                }\n                fieldsConfig[field] && !measureField && fields.push(field);\n            });\n        }\n\n        if (sizeField) {\n            domains[sizeField] = dataModel.groupBy(facetFields, {\n                [sizeField]: GROUP_BY_FUNCTIONS.SUM\n            }).getFieldspace().fieldsObj()[sizeField].domain();\n        }\n\n        if (colorField) {\n            const dm = dataModel.groupBy([...facetFields, ...fields], groupBy.measures);\n            domains[colorField] = dm.getFieldspace().fieldsObj()[colorField].domain();\n        }\n        return domains;\n    }\n\n    /**\n     *\n     *\n     * @param {*} fields\n     * @param {*} userLayerConfig\n     *\n     * @memberof PolarEncoder\n     */\n    getLayerConfig (fields, userLayerConfig, retinalConfig) {\n        let layerConfig = [];\n        const {\n                columnFields,\n                rowFields\n            } = fields;\n        const allFields = [...columnFields, ...rowFields];\n\n        allFields.forEach(() => {\n            const encoding = {};\n            let config = {\n                mark: ARC,\n                def: {\n                    encoding\n                }\n            };\n            if (userLayerConfig && userLayerConfig.length > 0) {\n                config = mergeRecursive(config, userLayerConfig[0]);\n            }\n            layerConfig.push(config);\n        });\n        if (layerConfig.length === 0) {\n            layerConfig = userLayerConfig;\n        }\n        const sanitizedConfig = this.sanitizeLayerConfig(retinalConfig, layerConfig);\n        this.layers(sanitizedConfig);\n        return sanitizedConfig;\n    }\n\n    /**\n     *\n     *\n     * @param {*} layerArray\n     *\n     * @memberof PolarEncoder\n     */\n    serializeLayerConfig (layerArray) {\n        const serializedLayers = [];\n\n        layerArray.length && layerArray.forEach((layer) => {\n            const def = layerFactory.getSerializedConf(layer.mark, layer);\n            serializedLayers.push({\n                mark: layer.mark,\n                def\n            });\n        });\n        return serializedLayers;\n    }\n\n    sanitizeLayerConfig (encodingConfigs, userLayerConfig) {\n        const layerConfig = [];\n\n        userLayerConfig.forEach((config) => {\n            const def = toArray(config.def);\n            sanitizeIndividualLayerConfig(encodingConfigs, def);\n            def.forEach((conf) => {\n                const encoding = conf.encoding || (conf.encoding = {});\n                !encoding.angle && (encoding.angle = {});\n                const angleField = getObjProp(encoding.angle, 'field');\n                const angle0Field = getObjProp(encoding.angle0, 'field');\n                if (!angleField) {\n                    Object.assign(encoding.angle, {\n                        field: encodingConfigs.color && encodingConfigs.color.field\n                    });\n                }\n                if (!angle0Field) {\n                    !encoding.angle0 && (encoding.angle0 = {});\n                    Object.assign(encoding.angle0, {\n                        field: encoding.angle.field\n                    });\n                }\n            });\n\n            layerConfig.push(config);\n        });\n        return layerConfig;\n    }\n}\n","import { createRetinalAxis } from './encoder-helper';\nimport { COLOR, SHAPE, SIZE } from '../enums/constants';\nimport VisualEncoder from './visual-encoder';\n\n/**\n *\n *\n * @export\n * @class RetinalEncoder\n * @extends {VisualEncoder}\n */\nexport default class RetinalEncoder extends VisualEncoder {\n\n    /**\n     *\n     *\n     * @param {*} axesCreators\n     *\n     * @memberof RetinalEncoder\n     */\n    createAxis (axesCreators) {\n        const { fieldsConfig, config } = axesCreators;\n        const newAxes = {};\n\n        [COLOR, SHAPE, SIZE].forEach((axisType) => {\n            newAxes[`${axisType}`] = createRetinalAxis({ axisType, fieldsConfig }, config[axisType]);\n        });\n        return newAxes;\n    }\n\n    /**\n     *\n     *\n     * @static\n     *\n     * @memberof RetinalEncoder\n     */\n    static type () {\n        return 'retinal';\n    }\n\n    /**\n     *\n     *\n     * @param {*} context\n     *\n     * @memberof RetinalEncoder\n     */\n    setCommonDomain (context) {\n        const { domains, axes, encoding } = context;\n\n        Object.entries(encoding).forEach((enc) => {\n            if (enc[1] && enc[1].field) {\n                const encType = enc[0];\n                const field = enc[1].field;\n\n                if (field) {\n                    axes[encType].forEach((axis) => {\n                        const domain = domains[field];\n                        !enc[1].domain && axis.updateDomain(domain);\n                    });\n                }\n            }\n        });\n        return axes;\n    }\n}\n","import { Store, FieldType, COORD_TYPES, getObjProp } from 'muze-utils';\nimport { DATA_UPDATE_COUNTER } from '../enums/defaults';\nimport { Variable } from '../variable';\nimport { PolarEncoder, CartesianEncoder } from '../encoder';\nimport {\n    DIMENSION,\n    MEASURE,\n    ORDINAL,\n    LINEAR,\n    ROW,\n    COLUMN,\n    COL,\n    LEFT,\n    RIGHT,\n    TOP,\n    BOTTOM,\n    COLOR,\n    SIZE,\n    TEMPORAL,\n    SHAPE,\n    INTERACTION,\n    GRID_LINES,\n    GRID_BANDS,\n    HEADER,\n    FACET,\n    X,\n    Y,\n    ARC,\n    RADIUS,\n    ANGLE\n} from '../enums/constants';\n\nconst POLAR = COORD_TYPES.POLAR;\n\n/**\n * Creates an instance of a store which contains the arguments to make the class reactive\n *\n * @return {Object} instance of store\n * @memberof VisualGroup\n */\nexport const initStore = () => new Store({\n    [DATA_UPDATE_COUNTER]: DATA_UPDATE_COUNTER\n});\n\n/**\n *\n *\n * @param {*} arr\n */\nexport const isDistributionEqual = arr => [...arr[0], ...arr[1]].reduce((isEqual, row) => {\n    const rowType = row.type();\n\n    if (rowType === MEASURE || rowType === TEMPORAL) {\n        isEqual = true;\n    }\n    return isEqual;\n}, false);\n\n/**\n *\n *\n */\nexport const initializeCacheMaps = () => ({\n    cellMap: new Map(),\n    xAxesMap: new Map(),\n    yAxesMap: new Map(),\n    entryCellMap: new Map(),\n    exitCellMap: new Map()\n});\n\n/**\n *\n *\n * @param {*} axisName\n * @param {*} id\n */\nexport const getAxisKey = (axisName, ...params) => `${axisName}-axis-${params.join('-')}`;\n\n/**\n *\n *\n * @param {*} rowId\n * @param {*} columnId\n */\nexport const getCellKey = (rowId, columnId) => `cell-${rowId}-${columnId}`;\n\n/**\n *\n *\n * @param {*} config\n *\n */\nexport const extractUnitConfig = (config) => {\n    const unitConfig = {};\n    const attrNames = [INTERACTION, GRID_LINES, GRID_BANDS];\n\n    attrNames.forEach((attr) => {\n        if (config[attr] !== undefined) {\n            unitConfig[attr] = config[attr];\n        }\n    });\n    return unitConfig;\n};\n\n/**\n *\n *\n * @param {*} headers\n * @param {*} index\n * @param {*} rowLength\n *\n * @memberof MatrixResolver\n */\nexport const getHeaderText = (headers, index, rowLength) => {\n    let header = '';\n\n    if (index === rowLength - 1 && headers.length > rowLength) {\n        for (let i = index; i < headers.length - 1; i++) {\n            header += `${headers[i].toString()} / `;\n        }\n        header += headers[headers.length - 1].toString();\n        return header;\n    } else if (headers[index]) {\n        return headers[index].toString();\n    }\n    return '';\n};\n\n/**\n *\n *\n * @param {*} fields\n * @param {*} fieldHeaders\n * @param {*} TextCell\n * @param {*} labelManager\n *\n */\nexport const headerCreator = (fields, fieldHeaders, TextCell, { classPrefix, labelManager }) => {\n    const headers = fields.length > 0 ? fields[0].map((cell, i) => new TextCell({\n        type: HEADER,\n        className: `${classPrefix}-grid-headers`\n    }, {\n        labelManager\n    }).source(getHeaderText(fieldHeaders, i, fields[0].length))\n                    .config({ show: cell.config().show })) : [];\n    return headers;\n};\n\n/**\n *\n *\n * @param {*} variable\n * @param {*} allFields\n *\n */\nexport const findInGroup = (variable, allFields) => {\n    let channel = null;\n\n    [COLOR, SIZE, SHAPE].forEach((e) => {\n        if (this.store.get(e) && variable === this.store.get(e)[0]) {\n            channel = e;\n        }\n    });\n\n    if (channel) {\n        return { channel };\n    }\n    [ROW, COL].forEach((facetType) => {\n        allFields[`${facetType}Facets`].forEach((e) => {\n            if (e.toString() === variable) {\n                channel = { channel: FACET, type: facetType === COL ? COLUMN : ROW };\n            }\n        });\n    });\n\n    if (channel) {\n        return channel;\n    }\n\n    [ROW, COL].forEach((projType) => {\n        allFields[`${projType}Projections`].forEach((e) => {\n            e.forEach((m) => {\n                if (m.toString() === variable) {\n                    channel = projType === COL ? X : Y;\n                }\n            });\n        });\n    });\n\n    if (channel) {\n        return { channel };\n    }\n    return null;\n};\n\n/**\n *\n *\n * @param {*} datamodel\n * @param {*} field\n */\nexport const getAxisType = (fieldsConfig, field) => {\n    let fieldType = ORDINAL;\n\n    if (field && fieldsConfig[field].def.type !== DIMENSION) {\n        fieldType = LINEAR;\n    }\n    return fieldType;\n};\n\n/**\n *\n *\n * @param {*} datamodel\n * @param {*} fieldName\n *\n */\nexport const retriveDomainFromData = (datamodel, fieldName) => {\n    const field = datamodel.getFieldspace().fields.find(d => d.name() === fieldName.toString());\n    return field.domain();\n};\n\n/**\n *\n *\n * @memberof MatrixResolver\n */\nexport const mutateAxesFromMap = (cacheMaps, axes) => {\n    let xAxes = null;\n    let yAxes = null;\n    const {\n        xAxesMap,\n        yAxesMap\n    } = cacheMaps;\n    const {\n        x: xAxisSet,\n        y: yAxisSet\n    } = axes;\n\n    xAxisSet && xAxisSet.forEach((axisId) => {\n        const xAxis = xAxesMap.get(axisId);\n        xAxes = xAxes || [];\n        xAxes.push(xAxis);\n    });\n\n    yAxisSet && yAxisSet.forEach((axisId) => {\n        const yAxis = yAxesMap.get(axisId);\n        yAxes = yAxes || [];\n        yAxes.push(yAxis);\n    });\n\n    return {\n        xAxes, yAxes\n    };\n};\n\nconst hasPolarEncodings = layerConf => layerConf.mark === ARC || [RADIUS, ANGLE].some(field =>\n        getObjProp(layerConf.encoding, field));\n\n/**\n *\n *\n * @param {*} layers\n *\n */\nexport const getEncoder = (layers) => {\n    let encoder = new CartesianEncoder();\n\n    if (layers.length) {\n        // Figuring out the kind of layers the group will have\n        encoder = layers.some(layerConf => hasPolarEncodings(layerConf)) ? new PolarEncoder() : encoder;\n    }\n    return encoder;\n};\n\n/**\n *\n *\n * @param {*} type\n * @param {*} fields\n * @param {*} userAxisFromConfig\n *\n */\nexport const getHeaderAxisFrom = (type, fields, userAxisFromConfig) => {\n    let axisFrom = userAxisFromConfig[type];\n    let headerFrom = '';\n    const options = type === ROW ? [LEFT, RIGHT] : [BOTTOM, TOP];\n    const [firstField, secondField] = fields;\n    const firstFieldType = i => (firstField.length ? firstField[i].type() : null);\n    const secondFieldType = i => (secondField.length ? secondField[i].type() : null);\n\n    if (firstFieldType(firstField.length - 1) === DIMENSION && secondFieldType(0) === DIMENSION) {\n        headerFrom = axisFrom ? options[1 - options.indexOf(axisFrom)] : options[1];\n\n        if (type === COLUMN && (firstField[firstField.length - 1].toString() === secondField[0].toString())) {\n            axisFrom = TOP;\n        } else {\n            axisFrom = axisFrom || options[0];\n        }\n    } else if (secondFieldType(secondField.length - 1) === DIMENSION) {\n        headerFrom = type === ROW ? RIGHT : BOTTOM;\n        axisFrom = type === ROW ? RIGHT : BOTTOM;\n    } else {\n        headerFrom = type === ROW ? LEFT : TOP;\n        axisFrom = type === ROW ? LEFT : TOP;\n    }\n    if (firstFieldType(firstField.length - 1) === MEASURE && secondFieldType(0) === MEASURE) {\n        axisFrom = type === ROW ? LEFT : TOP;\n    } else if (secondFieldType(0) === MEASURE) {\n        axisFrom = type === ROW ? RIGHT : BOTTOM;\n    } else if (firstFieldType(firstField.length - 1) === MEASURE) {\n        axisFrom = type === ROW ? LEFT : TOP;\n    }\n    return [headerFrom, axisFrom];\n};\n\n/**\n *\n *\n * @param {*} type\n * @param {*} fields\n * @param {*} layers\n *\n * @memberof MatrixResolver\n */\nexport const setFacetsAndProjections = (context, fieldInfo, encoder) => {\n    const {\n        fields,\n        type\n    } = fieldInfo;\n    const { facets, projections } = encoder.simpleEncoder.getFacetsAndProjections(fields, type);\n\n    context.facets({ [`${type}Facets`]: facets });\n    context.projections({ [`${type}Projections`]: projections });\n\n    return { facets, projections, fields };\n};\n\nconst getRowBorders = (left, right) => {\n    const borders = {};\n    borders.top = false;\n    borders.bottom = false;\n    if (left.length > 1 || right.length > 1) {\n        borders.top = true;\n        borders.bottom = true;\n    }\n    return borders;\n};\n\nconst getColumnsBorders = (top, bottom) => {\n    const borders = {};\n    borders.left = false;\n    borders.right = false;\n    if (top.length || bottom.length) {\n        if ((top[0] && top[0].length > 1) || (bottom[0] && bottom[0].length > 1)) {\n            borders.left = true;\n            borders.right = true;\n        }\n    }\n    return borders;\n};\n\nconst getValueBorders = (rows, columns) => {\n    const borders = { top: true, left: true, bottom: true, right: true };\n    const borderTypeRow = [LEFT, RIGHT];\n    const borderTypeCol = [TOP, BOTTOM];\n    rows.forEach((e, i) => {\n        if (e[0] && e[0].length) {\n            borders[borderTypeRow[i]] = true;\n        } else {\n            borders[borderTypeRow[i]] = false;\n        }\n    });\n    columns.forEach((e, i) => {\n        if (e.length) {\n            borders[borderTypeCol[i]] = true;\n        } else {\n            borders[borderTypeCol[i]] = false;\n        }\n    });\n\n    return borders;\n};\n\nexport const getBorders = (matrices, encoder) => {\n    let showRowBorders = { top: false, bottom: false };\n    let showColBorders = { left: false, right: false };\n    let showValueBorders = { top: false, bottom: false, left: false, right: false };\n    const {\n        rows,\n        columns,\n        values: valueMatrix\n    } = matrices;\n    const [leftRows, rightRows] = rows;\n    const [topColumns, bottomColumns] = columns;\n    const {\n        rowDimensions,\n        columnDimensions,\n        rowTemporalFields,\n        columnTemporalFields,\n        columnMeasures,\n        rowMeasures\n    } = encoder.fieldInfo();\n    const allDimensionLength = rowDimensions.length + columnDimensions.length;\n    const allMeasuresLength = rowMeasures.length + columnMeasures.length;\n    const allTemporalFieldsLength = rowTemporalFields.length + columnTemporalFields.length;\n\n    if (encoder.constructor.type() === POLAR) {\n        if (!allDimensionLength) {\n            return { showRowBorders, showColBorders, showValueBorders };\n        }\n    } else if (!allMeasuresLength && !allTemporalFieldsLength && allDimensionLength <= 2) {\n        return { showRowBorders, showColBorders, showValueBorders };\n    }\n\n    showRowBorders = getRowBorders(leftRows, rightRows);\n    showColBorders = getColumnsBorders(topColumns, bottomColumns);\n    showValueBorders = getValueBorders([leftRows, rightRows], [topColumns, bottomColumns]);\n\n    if (valueMatrix.length > 1) {\n        showValueBorders.top = true;\n        showValueBorders.bottom = true;\n    }\n    if (valueMatrix.length && valueMatrix[0].length > 1) {\n        showValueBorders.left = true;\n        showValueBorders.right = true;\n    }\n    return { showRowBorders, showColBorders, showValueBorders };\n};\n\nexport const getFieldsFromSuppliedLayers = (suppliedLayerConfig, fieldsConfig) => {\n    let fields = [];\n    const encodingArr = suppliedLayerConfig.map(conf => (conf.encoding || {}));\n    fields = [...fields, [].concat(...encodingArr.map(enc => Object.values(enc).map(d => d.field)))];\n    fields = fields.filter(field => fieldsConfig[field] && fieldsConfig[field].def.type === FieldType.DIMENSION);\n    return fields;\n};\n\nexport const extractFields = (facetsAndProjections, layerFields) => {\n    const fields = Object.values(facetsAndProjections).map((arr) => {\n        const flattenArray = [].concat(...arr);\n        return [].concat(...flattenArray.map((field) => {\n            if (field instanceof Variable) {\n                return field.getMembers();\n            }\n            return field;\n        }));\n    });\n    return [].concat(...fields, ...layerFields);\n};\n\n/**\n * This method sorts the facets fields inplace if field is of categorical type\n * @param {Object} facet\n * @param {Array} keys Array of the facet field values\n */\nexport const sortFacetFields = (facet, keys, config) => {\n    const facetName = `${facet}`;\n    const type = facet.type();\n\n    if (type === DIMENSION && config.sort[facetName]) {\n        if (config.sort[facetName] === 'asc') {\n            keys.sort((a, b) => a - b);\n        } else {\n            keys.sort((a, b) => b - a);\n        }\n    }\n};\n","import { BEHAVIOURS, ACTIONS } from '@chartshq/muze-firebolt';\n\nexport const actionBehaviourMap = {\n    [ACTIONS.DRAG]: {\n        behaviours: [BEHAVIOURS.BRUSH],\n        touch: false\n    },\n    [ACTIONS.HOVER]: {\n        behaviours: [BEHAVIOURS.HIGHLIGHT]\n    },\n    [ACTIONS.LONGTOUCH]: {\n        behaviours: [BEHAVIOURS.SELECT],\n        touch: true\n    },\n    [ACTIONS.TOUCHDRAG]: {\n        behaviours: [BEHAVIOURS.BRUSH],\n        touch: true\n    },\n    [ACTIONS.CLICK]: {\n        behaviours: [BEHAVIOURS.SELECT],\n        touch: false\n    }\n};\n","import {\n    FieldType,\n    getDependencyOrder,\n    getObjProp,\n    defaultValue,\n    objectIterator,\n    unionDomain,\n    makeElement,\n    DimensionSubtype,\n    toArray,\n    MeasureSubtype,\n    getNearestValue\n} from 'muze-utils';\nimport { layerFactory, ENCODING } from '@chartshq/visual-layer';\n\nexport const getDimensionMeasureMap = (layers, fieldsConfig) => {\n    const retinalEncodingsAndMeasures = {};\n\n    layers.forEach((layer) => {\n        const {\n            colorField,\n            sizeField,\n            shapeField,\n            xField,\n            yField\n        } = layer.encodingFieldsInf();\n        const measures = [xField, yField].filter(field => fieldsConfig[field] && fieldsConfig[field].def.type ===\n            FieldType.MEASURE);\n        [colorField, sizeField, shapeField].forEach((field) => {\n            if (fieldsConfig[field] && fieldsConfig[field].def.type === FieldType.DIMENSION) {\n                !retinalEncodingsAndMeasures[field] && (retinalEncodingsAndMeasures[field] = []);\n                retinalEncodingsAndMeasures[field].push(...measures);\n            }\n        });\n    });\n\n    for (const key in retinalEncodingsAndMeasures) {\n        if ({}.hasOwnProperty.call(retinalEncodingsAndMeasures, key)) {\n            retinalEncodingsAndMeasures[key] = [...new Set(retinalEncodingsAndMeasures[key])];\n        }\n    }\n    return retinalEncodingsAndMeasures;\n};\n\nexport const transformDataModels = (transform, dataModel) => {\n    const dataModels = {};\n    for (const key in transform) {\n        if ({}.hasOwnProperty.call(transform, key)) {\n            const transformVal = transform[key];\n            dataModels[key] = transformVal(dataModel);\n        }\n    }\n\n    return dataModels;\n};\n\nexport const getLayerFromDef = (context, definition, existingLayer, namespaces) => {\n    let instances = existingLayer;\n    const dependencies = context._layerDeps;\n    const metaInf = context.metaInf();\n    if (!existingLayer) {\n        instances = layerFactory.getLayerInstance(definition);\n        toArray(instances).forEach((inst, i) => {\n            inst.metaInf({\n                unitRowIndex: metaInf.rowIndex,\n                unitColIndex: metaInf.colIndex,\n                namespace: namespaces[i]\n            });\n            inst.store(context.store());\n        });\n    }\n    const layers = {};\n    const instanceArr = toArray(instances);\n    definition = toArray(definition);\n    definition.reduce((acc, def, idx) => {\n        const instance = instanceArr[idx];\n        instance.coord(context.coord());\n        instance.config(def);\n        instance.valueParser(context.valueParser());\n        instance.dependencies(dependencies);\n        instance.dataProps({\n            timeDiffs: context._timeDiffs\n        });\n        if (def.name) {\n            instance.alias(def.name);\n        }\n        layers[instance.alias()] = instance;\n        return acc;\n    }, {});\n    return layers;\n};\n\nexport const resolveEncodingTransform = (layerInst, store) => {\n    const encodingTransform = layerInst.config().encodingTransform || {};\n    const resolvable = encodingTransform.resolvable;\n    let depArr = [];\n    if (resolvable) {\n        const resolved = resolvable(store);\n        depArr = resolved.depArr;\n        layerInst.encodingTransform(resolved.fn);\n    } else if (encodingTransform instanceof Function) {\n        layerInst.encodingTransform(encodingTransform);\n    }\n    return depArr;\n};\n\nexport const sanitizeLayerDef = (layerDefs) => {\n    const sanitizedDefs = [];\n    layerDefs.forEach((layerDef, i) => {\n        const def = layerDef.def;\n        const mark = layerDef.mark;\n        if (!def) {\n            const sConf = layerFactory.getSerializedConf(layerDef.mark, layerDef);\n            if (!sConf.name) {\n                sConf.name = `${mark}-${i}`;\n            }\n            sanitizedDefs.push({\n                mark: layerDef.mark,\n                def: sConf\n            });\n        } else {\n            if (!def.name) {\n                def.name = `${mark}-${i}`;\n            }\n            sanitizedDefs.push(layerDef);\n        }\n    });\n    return sanitizedDefs;\n};\n\nexport const attachDataToLayers = (layers, dm, transformedDataModels) => {\n    layers.forEach((layer) => {\n        const dataSource = layer.config().source;\n        const dataModel = dataSource instanceof Function ? dataSource(dm) :\n            (transformedDataModels[dataSource] || dm);\n        if (layer.data() !== dataModel) {\n            layer.data(dataModel);\n        }\n    });\n};\n\nexport const attachAxisToLayers = (axes, layers, layerAxisIndex) => {\n    layers.forEach((layer) => {\n        const layerId = layer.id();\n        const axesObj = {};\n\n        objectIterator(axes, (key) => {\n            const axisInf = layerAxisIndex[layerId];\n            if (axisInf) {\n                const axisArr = axes[key] || [];\n                const axisIndex = axisInf[key] >= 0 ? axisInf[key] : axisArr.length - 1;\n                axes[key] && (axesObj[key] = defaultValue(axes[key][axisIndex]));\n            }\n        });\n        Object.keys(axesObj).length && layer.axes(axesObj);\n    });\n};\n\nconst { X, Y, RADIUS, ANGLE, ANGLE0, RADIUS0 } = ENCODING;\n\nexport const getLayerAxisIndex = (layers, fields) => {\n    const layerAxisIndex = {};\n    layers.forEach((layer) => {\n        const { axis, encoding } = layer.config();\n        const id = layer.id();\n        [X, Y, ANGLE, ANGLE0, RADIUS].forEach((type) => {\n            let index;\n            const specificField = getObjProp(encoding, type, 'field');\n            const encodingField = type === RADIUS ? defaultValue(specificField, getObjProp(encoding, RADIUS0, 'field'))\n                : getObjProp(encoding, type, 'field');\n            const field = defaultValue(getObjProp(axis, type), encodingField);\n            if (fields[type] && fields[type].length) {\n                index = fields[type].findIndex(fieldInst => fieldInst.getMembers().indexOf(field) !== -1);\n            } else {\n                index = 0;\n            }\n            !layerAxisIndex[id] && (layerAxisIndex[id] = {});\n            layerAxisIndex[id][type] = index;\n        });\n    });\n    return layerAxisIndex;\n};\n\nconst getValidDomain = (domain, domain1, encodingType, fieldType) => {\n    if (encodingType === ANGLE || encodingType === ANGLE0) {\n        return domain.concat(domain1.filter(d => domain.indexOf(d) === -1));\n    }\n    return unionDomain([domain, domain1], fieldType);\n};\n\nexport const unionDomainFromLayers = (layers, axisFields, layerAxisIndex, fieldsConfig) => {\n    let domains = {};\n    layers = layers.filter(layer => layer.getDataDomain() !== null);\n    layers.forEach((layer) => {\n        let domainValues = {};\n        const config = layer.config();\n        // const encoding = config.encoding;\n        const layerDomain = layer.getDataDomain();\n        const layerId = layer.id();\n\n        if (layerDomain !== null && config.calculateDomain !== false) {\n            domainValues = Object.entries(layerDomain);\n            domains = domainValues.reduce((fieldDomain, domain) => {\n                const encodingType = domain[0];\n                const axisIndex = layerAxisIndex[layerId][encodingType];\n                const field = getObjProp(axisFields, encodingType, axisIndex);\n                !fieldDomain[encodingType] && (fieldDomain[encodingType] = {});\n                const encodingDomain = fieldDomain[encodingType];\n                if (field) {\n                    const fieldStr = `${field}`;\n                    encodingDomain[fieldStr] = encodingDomain[fieldStr] || [];\n                    encodingDomain[fieldStr] = getValidDomain(encodingDomain[fieldStr],\n                        domain[1], encodingType, fieldsConfig[field.getMembers()[0]].def.subtype);\n                }\n                return fieldDomain;\n            }, domains);\n        }\n    });\n    return domains;\n};\n\nexport const renderLayers = (context, container, layers, measurement) => {\n    context._lifeCycleManager.notify({ client: layers, action: 'beforedraw', formalName: 'layer' });\n    const config = context.config();\n    const classPrefix = config.classPrefix;\n    const orderedLayers = context.layers().sort((a, b) => a.config().order - b.config().order);\n    const layerParentGroup = makeElement(container, 'g', [1], `${classPrefix}-layer-group`);\n    const layerDepOrder = getDependencyOrder(context._layerDepOrder);\n    const groups = {};\n    makeElement(layerParentGroup, 'g', orderedLayers, null, {\n        update: (group, layer) => {\n            groups[layer.alias()] = {\n                group,\n                layer\n            };\n        }\n    });\n    const layerSeq = layerDepOrder.map(name => groups[name]);\n    layerSeq.forEach((o) => {\n        const layer = o.layer;\n        const group = o.group;\n        layer.measurement(measurement);\n        layer.dataProps({\n            timeDiffs: context._timeDiffs\n        });\n        layer.config().render !== false && layer.mount(group.node());\n    });\n    return this;\n};\n\nexport const getNearestDimensionalValue = (context, position) => {\n    const fields = context.fields();\n    if (!fields.x.length || !fields.y.length) {\n        return null;\n    }\n    const data = context.data();\n    const axes = context.axes();\n    const fieldsConfig = data.getFieldsConfig();\n    const xField = getObjProp(fields, 'x', 0).getMembers()[0];\n    const yField = getObjProp(fields, 'y', 0).getMembers()[0];\n    const xFieldType = fieldsConfig[xField].def.subtype;\n    const yFieldType = fieldsConfig[yField].def.subtype;\n\n    const entryVal = [['x', xFieldType, xField], ['y', yFieldType, yField]].find(entry =>\n        entry[1] === DimensionSubtype.CATEGORICAL || entry[1] === DimensionSubtype.TEMPORAL);\n\n    if (!entryVal || (xFieldType !== MeasureSubtype.CONTINUOUS && yFieldType !== MeasureSubtype.CONTINUOUS)) {\n        return null;\n    }\n    const field = entryVal[2];\n    const index = fieldsConfig[field].index;\n    let key = axes[entryVal[0]][0].invert(position[entryVal[0]]);\n    if (entryVal[1] === DimensionSubtype.TEMPORAL) {\n        const filterData = [...new Set(data.getData().data.map(d => d[index]))];\n        key = getNearestValue(filterData, key);\n    }\n\n    return key !== undefined ? [[field], [key]] : null;\n};\n\nexport const getLayersBy = (layers, searchBy, value) => layers.filter((layer) => {\n    const name = searchBy === 'type' ? layer.constructor.formalName() : layer.alias();\n    return name === value;\n});\n\nexport const removeLayersBy = (layers, searchBy, value) => {\n    layers.filter((inst) => {\n        const name = searchBy === 'type' ? inst.config().mark : inst.alias();\n        if (name === value) {\n            inst.remove();\n            return false;\n        }\n        return true;\n    });\n};\n\nexport const createSideEffectGroup = (container, className) => makeElement(container, 'g', [1], className).node();\n\nexport const createRenderPromise = (unit) => {\n    const renderedPromise = unit._renderedPromise;\n    renderedPromise.then(() => {\n        unit._renderedPromise = new Promise((resolve) => {\n            unit._renderedResolve = resolve;\n        });\n        createRenderPromise(unit);\n    });\n};\n\nexport const getRadiusRange = (width, height, config = {}) => {\n    const {\n        innerRadius,\n        outerRadius\n    } = config;\n\n    return [innerRadius || 0, outerRadius || Math.min(height,\n        width) / 2];\n};\n\nexport const setAxisRange = (context) => {\n    const axes = context.axes();\n    const { radius: radiusAxes } = axes;\n    if (radiusAxes) {\n        radiusAxes.forEach((axis) => {\n            axis.range(getRadiusRange(context.width(), context.height()));\n        });\n    }\n};\n\nexport const isXandYMeasures = (context) => {\n    const { x: xFields, y: yFields } = context.fields();\n    const xMeasures = xFields.every(field => field.type() === FieldType.MEASURE);\n    const yMeasures = yFields.every(field => field.type() === FieldType.MEASURE);\n    return xMeasures && yMeasures;\n};\n\nconst getKey = (arr, row) => {\n    let key = row[arr[0]];\n    for (let i = 1, len = arr.length; i < len; i++) {\n        key = `${key},${row[arr[i]]}`;\n    }\n    return key;\n};\n\nexport const getValuesMap = (model, context) => {\n    const valuesMap = {};\n    const { data: dataArr, schema, uids } = model.getData();\n    const fieldsConfig = model.getFieldsConfig();\n    const fieldIndices = isXandYMeasures(context) ? schema.map((d, i) => i) :\n                            Object.keys(model.getFieldspace().getDimension()).map(d => fieldsConfig[d].index);\n    dataArr.forEach((row, i) => {\n        const key = getKey(fieldIndices, row);\n        valuesMap[key] = uids[i];\n    });\n    return valuesMap;\n};\n\nexport const getSelectionRejectionModel = (model, propModel, measures, propValuesMap) => {\n    const { data, schema } = propModel.getData();\n    let rejectionModel;\n    const entryRowIds = [];\n    const exitRowIds = [];\n    if (schema.length) {\n        const fieldMap = model.getFieldsConfig();\n        const rowIdsObj = {};\n        const filteredSchema = measures ? schema.map((d, idx) => idx) :\n            Object.keys(model.getFieldspace().getDimension()).map(d => fieldMap[d].index);\n        data.forEach((row) => {\n            const key = getKey(filteredSchema, row);\n            const id = propValuesMap[key];\n            if (key in propValuesMap) {\n                entryRowIds.push(id);\n                rowIdsObj[id] = 1;\n            }\n        });\n        rejectionModel = model.select((fields, i) => {\n            if (!rowIdsObj[i]) {\n                exitRowIds.push(i);\n                return true;\n            }\n            return false;\n        }, {\n            saveChild: false\n        });\n    } else {\n        rejectionModel = propModel;\n    }\n\n    return {\n        model: [propModel, rejectionModel],\n        entryRowIds,\n        exitRowIds\n    };\n};\n","export const CLASSPREFIX = 'muze';\nexport const IDFIELD = '__id__';\nexport const GRID_LINE_PARENT_GROUP_CLASS = 'grid-lines';\nexport const GRID_BAND_PARENT_GROUP_CLASS = 'grid-bands';\nexport const GRID_PARENT_GROUP = 'grid-parent-group';\nexport const BAND = 'band';\nexport const TICK = 'tick';\nexport const GRID_BAND = 'gridBands';\nexport const GRID_LINE = 'gridLines';\nexport const CONSOLIDATED = 'consolidated';\nexport const FRAGMENTED = 'fragmented';\nexport const FACET_BY_FIELDS = 'facetByFields';\nexport const RETINAL_FIELDS = 'retinalFields';\nexport const PARENT_ALIAS = 'parentAlias';\nexport const LAYERS = 'layers';\nexport const CACHED_DATA = 'cachedData';\nexport const STORE = 'store';\n","import { getObjProp, defaultValue, makeElement, DimensionSubtype, DataModel, createSelection } from 'muze-utils';\nimport { ScaleType } from '@chartshq/muze-axis';\nimport { layerFactory, LAYER_TYPES } from '@chartshq/visual-layer';\nimport {\n    GRID_BAND,\n    GRID_LINE,\n    GRID_BAND_PARENT_GROUP_CLASS,\n    GRID_LINE_PARENT_GROUP_CLASS,\n    GRID_PARENT_GROUP\n} from '../enums/constants';\n\nconst { BAR_LAYER, TICK_LAYER } = LAYER_TYPES;\n\nconst LINEAR = ScaleType.LINEAR;\n\nconst getLayerDefinition = (context, axes, type, orientation) => {\n    let encoding;\n    const config = context.config();\n    const { classPrefix, gridLines, gridBands } = config;\n    const gridLineColor = gridLines.color;\n    const zeroLineColor = gridLines.zeroLineColor;\n    const defClassName = type === GRID_BAND ? gridBands.defClassName : gridLines.defClassName;\n    const gridBandColor = gridBands[orientation].color;\n    const axis = axes[orientation][0];\n    const isLinearScale = axis.constructor.type() === LINEAR;\n\n    if (type === GRID_BAND && isLinearScale) {\n        encoding = {\n            [orientation]: `${orientation}value`,\n            [`${orientation}0`]: `${orientation}value0`\n        };\n    } else {\n        encoding = {\n            [orientation]: isLinearScale ? `${orientation}value` : `${orientation}dim`\n        };\n    }\n    encoding.color = {\n        value: (data, i) => {\n            const isNegativeDomain = isLinearScale && axis.domain()[0] < 0;\n            if (type === GRID_BAND) {\n                return gridBandColor[i % 2];\n            }\n            return isNegativeDomain && data[orientation] === 0 ? zeroLineColor : gridLineColor;\n        }\n    };\n    const { color, shape, size } = context.axes();\n    return {\n        definition: {\n            defClassName: `${defClassName}-${orientation}`,\n            className: config.className,\n            name: orientation,\n            individualClassName: (data, i) => {\n                let className;\n                const isNegativeDomain = isLinearScale && axis.domain()[0] < 0;\n                if (isNegativeDomain && data.y === 0 && type !== GRID_BAND) {\n                    className = `${classPrefix}-axis-zero-line`;\n                } else {\n                    className = `${classPrefix}-grid-${type}-${orientation}-${i % 2}`;\n                }\n                return className;\n            },\n            [`pad${orientation.toUpperCase()}`]: type === GRID_BAND ? 0 : undefined,\n            encoding\n        },\n        axes: {\n            [orientation]: axis,\n            color: color[0],\n            shape: shape[0],\n            size: size[0]\n        },\n        interactive: false\n    };\n};\n\nconst getDefaultVisibilty = (show, axis) => {\n    if (axis.constructor.type() === LINEAR) {\n        return show;\n    }\n    return false;\n};\n\nexport const getGridLayerDefinitions = (context, config, type) => ['x', 'y'].map((axisType) => {\n    const axes = context.axes();\n    if (!axes[axisType]) {\n        return null;\n    }\n    const show = defaultValue(config[axisType] && config[axisType].show,\n        getDefaultVisibilty(config.show, axes[axisType][0]));\n\n    return show ? getLayerDefinition(context, axes, type, axisType) : null;\n}).filter(d => d !== null);\n\nconst dimensionSubTypes = Object.values(DimensionSubtype).reduce((acc, v) => {\n    acc[v] = 1;\n    return acc;\n}, {});\nconst getValidSubtype = subtype => (!dimensionSubTypes[subtype] ? DimensionSubtype.CATEGORICAL : subtype);\n\nexport const getGridLayerData = (axes, fields, fieldsConfig) => {\n    const gridData = {};\n\n    ['x', 'y'].forEach((type) => {\n        let ticks = axes[type][0].getTickValues();\n        const subtype = getObjProp(fieldsConfig, getObjProp(fields, type, 0).getMembers()[0], 'def', 'subtype');\n        const jsonData = [];\n        const schema = [\n            {\n                name: 'yvalue',\n                type: 'measure'\n            }, {\n                name: 'xvalue',\n                type: 'measure'\n            },\n            {\n                name: 'yvalue0',\n                type: 'measure'\n            }, {\n                name: 'xvalue0',\n                type: 'measure'\n            }, {\n                name: 'xdim',\n                type: 'dimension',\n                subtype: getValidSubtype(subtype)\n            }, {\n                name: 'ydim',\n                type: 'dimension',\n                subtype: getValidSubtype(subtype)\n            }\n        ];\n        const len = Math.max(ticks.length);\n        ticks = subtype === DimensionSubtype.TEMPORAL ? ticks.map(d => d.getTime()) : ticks;\n        for (let i = 0; i < len; i += 1) {\n            jsonData.push({\n                [`${type}value`]: ticks[i],\n                [`${type}value0`]: ticks[i + 1],\n                [`${type}dim`]: ticks[i],\n                [`${type}dim`]: ticks[i]\n            });\n        }\n        gridData[type] = new DataModel(jsonData, schema);\n    });\n    return gridData;\n};\n\nexport const createGridLineLayer = (context) => {\n    const vuConf = context.config();\n    const metaInf = context.metaInf();\n    const store = context.store();\n    const timeDiffs = context._timeDiffs;\n    [GRID_BAND, GRID_LINE].forEach((type) => {\n        let mark;\n        let config;\n        if (type === GRID_BAND) {\n            mark = BAR_LAYER;\n            config = vuConf.gridBands;\n        } else {\n            mark = TICK_LAYER;\n            config = vuConf.gridLines;\n        }\n        const definitions = getGridLayerDefinitions(context, config, type);\n\n        const sel = `_${type}Selection`;\n        context[sel] = createSelection(context[sel], () => {\n            const inst = layerFactory.getLayerInstance({ mark });\n            inst.dependencies(context._layerDeps);\n            return inst;\n        }, definitions, atomicDef => atomicDef.definition.name);\n        context[sel].each((layer, atomicDef) => {\n            const definition = atomicDef.definition;\n            const name = definition.name;\n            const sConf = layerFactory.getSerializedConf(mark, definition);\n            const axesObj = atomicDef.axes;\n            layer.metaInf({\n                unitRowIndex: metaInf.rowIndex,\n                unitColIndex: metaInf.colIndex,\n                namespace: `${metaInf.namespace}${type}${name}`\n            })\n                .store(store)\n                .config(sConf)\n                .dataProps({\n                    timeDiffs\n                })\n                .axes(axesObj);\n        });\n        context[`_${type}`] = context[sel].getObjects();\n    });\n};\n\nexport const attachDataToGridLineLayers = (context) => {\n    const axes = context.axes();\n    const measurement = {\n        width: context.width(),\n        height: context.height()\n    };\n    const gridLines = context._gridLines;\n    const gridBands = context._gridBands;\n    const gridLayerData = getGridLayerData(axes, context.fields(), context.data().getFieldsConfig());\n    [].concat(...gridBands, ...gridLines).forEach((inst) => {\n        inst.data(inst.axes().x ? gridLayerData.x : gridLayerData.y).measurement(measurement);\n    });\n};\n\nexport const renderGridLineLayers = (context, container) => {\n    const config = context.config();\n    const classPrefix = config.classPrefix;\n    const gridLines = context._gridLines;\n    const gridBands = context._gridBands;\n\n    const gridLineParentGroup = makeElement(container, 'g', [1], `${classPrefix}-${GRID_PARENT_GROUP}`);\n    [[gridLines, `${classPrefix}-${GRID_LINE_PARENT_GROUP_CLASS}`],\n            [gridBands, `${classPrefix}-${GRID_BAND_PARENT_GROUP_CLASS}`]].forEach((entry) => {\n                const [instances, parentGroupClass] = entry;\n                const mountPoint = makeElement(gridLineParentGroup, 'g', [1], `.${parentGroupClass}`);\n                const className = `${parentGroupClass}-group`;\n                makeElement(mountPoint, 'g', instances, `.${className}`, {\n                    update: (group, instance) => {\n                        instance.dataProps({ timeDiffs: context._timeDiffs }).mount(group.node());\n                    }\n                });\n            });\n};\n","import { CLASSPREFIX, CONSOLIDATED } from './enums/constants';\n\n/**\n * Returns the default configuration of the visual unit\n * @return {Object} Default configuration of visual unit\n */\nexport const defaultConfig = {\n    classPrefix: CLASSPREFIX,\n    defClassName: 'visual-unit',\n    className: '',\n    trackerClassName: 'visual-unit-tracker',\n    minOuterRadius: 10,\n    gridLines: {\n        defClassName: 'axis-grid-lines',\n        className: '',\n        show: true,\n        color: '#efefef',\n        zeroLineColor: '#b6b6b6'\n    },\n    gridBands: {\n        defClassName: 'axis-grid-bands',\n        className: '',\n        show: false,\n        y: {\n            color: ['#fff', '#fbfbfb']\n        },\n        x: {\n            color: ['#fff', '#f9f9f9']\n        }\n    },\n    arcLayerClassName: 'layer-arc',\n    interaction: {\n        tooltip: {\n            mode: CONSOLIDATED\n        }\n    },\n    sideEffectClassName: 'side-effect-container'\n};\n","import { mergeRecursive, DataModel } from 'muze-utils';\nimport { defaultConfig } from './default-config';\nimport { CONFIG, LAYERDEFS, TRANSFORM, DATA, LAYERS, TRANSFORMEDDATA } from './enums/reactive-props';\nimport { sanitizeLayerDef, getValuesMap } from './helper';\n\nexport default {\n    [CONFIG]: {\n        value: null,\n        meta: {\n            sanitization: (config, oldConfig) => (\n                mergeRecursive(oldConfig || mergeRecursive({}, defaultConfig), config)\n            )\n        }\n    },\n    [LAYERDEFS]: {\n        value: null,\n        meta: {\n            preset: layerDef => sanitizeLayerDef(layerDef)\n        }\n    },\n    [TRANSFORM]: {\n        value: null\n    },\n    [LAYERS]: {\n        value: null\n    },\n    [DATA]: {\n        value: null,\n        meta: {\n            typeCheck: d => d instanceof DataModel,\n            preset: (data, context) => {\n                context._cachedValuesMap = ((model) => {\n                    let valuesMap = null;\n                    return () => {\n                        if (valuesMap) {\n                            return valuesMap;\n                        }\n                        valuesMap = getValuesMap(model, context);\n                        return valuesMap;\n                    };\n                })(data);\n                if (context._cache) {\n                    const cachedData = context.cachedData();\n                    context.cachedData([...cachedData, data]);\n                } else {\n                    const oldData = context.cachedData()[0];\n                    oldData && oldData.unsubscribe('propagation');\n                    context.cachedData([data]);\n                }\n            }\n        }\n    },\n    [TRANSFORMEDDATA]: {\n        value: null,\n        meta: {\n            addAsMethod: false\n        }\n    }\n};\n","export const CONFIG = 'config';\nexport const DATA = 'data';\nexport const AXES = 'axes';\nexport const LAYERDEFS = 'layerDef';\nexport const WIDTH = 'width';\nexport const HEIGHT = 'height';\nexport const MOUNT = 'mount';\nexport const TRANSFORM = 'transform';\nexport const TRANSFORMEDDATA = 'transformedData';\nexport const DATADOMAIN = 'dataDomain';\nexport const FIELDS = 'fields';\nexport const LAYERAXISINDEX = 'layerAxisIndex';\nexport const LAYERS = 'layers';\nexport const DOMAIN = 'domain';\n\n","import { STATE_NAMESPACES, temporalFields, getObjProp, defaultValue } from 'muze-utils';\nimport * as PROPS from './enums/reactive-props';\nimport {\n    transformDataModels,\n    getDimensionMeasureMap,\n    attachDataToLayers,\n    attachAxisToLayers,\n    unionDomainFromLayers\n} from './helper';\n\nimport { createGridLineLayer, attachDataToGridLineLayers } from './helper/grid-lines';\n\nconst removeExitLayers = (layerDefs, context) => {\n    const layersMap = context._layersMap;\n    const markSet = {};\n    layerDefs.forEach((layerDef, i) => {\n        const id = defaultValue(layerDef.name, `${layerDef.mark}-${i}`);\n        markSet[id] = true;\n    });\n\n    for (const key in layersMap) {\n        if (!(key in markSet)) {\n            layersMap[key].forEach(layer => layer.remove());\n            delete layersMap[key];\n        }\n    }\n};\n\nexport const calculateDomainListener = (context, namespace) => () => {\n    const domain = unionDomainFromLayers(context.layers(), context.fields(), context._layerAxisIndex,\n        context.data().getFieldsConfig());\n    context.store().commit(`${STATE_NAMESPACES.UNIT_GLOBAL_NAMESPACE}.${PROPS.DOMAIN}.${namespace}`, domain);\n};\n\nexport const listenerMap = (context, namespace, metaInf) => ([\n    {\n        type: 'registerImmediateListener',\n        props: [`${namespace.local}.${PROPS.CONFIG}`],\n        listener: ([, config]) => {\n            config && context.firebolt().config(config.interaction);\n        }\n    },\n    {\n        type: 'registerImmediateListener',\n        props: [`${namespace.local}.${PROPS.LAYERDEFS}`],\n        listener: ([, layerDefs]) => {\n            const fieldsVal = context.fields();\n            if (layerDefs && fieldsVal) {\n                removeExitLayers(layerDefs, context);\n                const axes = context.axes();\n                if (axes.x || axes.y) {\n                    const props = [`${STATE_NAMESPACES.GROUP_GLOBAL_NAMESPACE}.domain.y.${metaInf.rowIndex}0`,\n                        `${STATE_NAMESPACES.GROUP_GLOBAL_NAMESPACE}.domain.x.${metaInf.colIndex}0`];\n                    const store = context.store();\n                    const listenerInf = {\n                        namespace: namespace.local,\n                        key: 'gridLineListener'\n                    };\n                    store.unsubscribe(listenerInf);\n                    store.registerChangeListener(props, () => {\n                        attachDataToGridLineLayers(context);\n                    }, false, listenerInf);\n                }\n\n                context.addLayer(layerDefs);\n                const adjustRange = context.layers().some(inst => inst.hasPlotSpan());\n                ['x', 'y'].forEach((type) => {\n                    const axisArr = defaultValue(getObjProp(context.axes(), type), []);\n                    axisArr.forEach((axis) => {\n                        axis.config({\n                            adjustRange\n                        });\n                    });\n                });\n                context._lifeCycleManager.notify({\n                    client: context.layers(),\n                    action: 'initialized',\n                    formalName: 'layer'\n                });\n            }\n        }\n    },\n    {\n        type: 'registerImmediateListener',\n        props: [`${namespace.local}.${PROPS.DATA}`],\n        listener: ([, dataModel]) => {\n            const axesObj = context.axes();\n            const timeDiffs = {};\n            const timeDiffsByField = {};\n\n            Object.entries(temporalFields(dataModel)).forEach(([fieldName, fieldObj]) => {\n                timeDiffsByField[fieldName] = fieldObj.minimumConsecutiveDifference();\n            });\n\n            Object.entries(context.fields()).forEach(([type, [field]]) => {\n                if (field) {\n                    const timeDiff = timeDiffsByField[`${field}`];\n                    if (timeDiff) {\n                        timeDiffs[type] = timeDiff;\n                        axesObj[type].forEach(axis => axis.minDiff(timeDiff));\n                    }\n                }\n            });\n\n            context._timeDiffsByField = timeDiffsByField;\n            context._timeDiffs = timeDiffs;\n        }\n    },\n    {\n        type: 'registerImmediateListener',\n        props: [`${namespace.local}.${PROPS.CONFIG}`],\n        listener: () => {\n            createGridLineLayer(context);\n        }\n    },\n    {\n        type: 'registerImmediateListener',\n        props: [`${namespace.local}.${PROPS.DATA}`,\n            `${namespace.local}.${PROPS.TRANSFORM}`],\n        listener: ([, dataModel], [, transform]) => {\n            if (dataModel) {\n                const dataModels = transformDataModels(transform, dataModel);\n                context.store().commit(`${namespace.local}.${PROPS.TRANSFORMEDDATA}`, dataModels);\n            }\n        }\n    },\n    {\n        type: 'registerImmediateListener',\n        props: [`${namespace.local}.${PROPS.TRANSFORMEDDATA}`,\n            `${namespace.local}.${PROPS.LAYERS}`],\n        listener: ([, transformedData], [, layers]) => {\n            const layerAxisIndexVal = context._layerAxisIndex;\n            const axesVal = context.axes();\n            const dataModel = context.data();\n            if (transformedData && layers && axesVal && layerAxisIndexVal) {\n                context._lifeCycleManager.notify({ client: layers, action: 'beforeupdate', formalName: 'layer' });\n                const model = context.store().model;\n                layers.forEach(lyr => lyr.disableUpdate());\n                attachDataToLayers(layers, dataModel, transformedData);\n                model.lock();\n                layers.forEach((lyr) => {\n                    lyr.enableUpdate().domain(lyr._domain);\n                });\n                model.unlock();\n                context._dimensionMeasureMap = getDimensionMeasureMap(layers,\n                    dataModel.getFieldsConfig(), context.retinalFields());\n                attachAxisToLayers(axesVal, layers, layerAxisIndexVal);\n                context._lifeCycleManager.notify({ client: layers, action: 'updated', formalName: 'layer' });\n            }\n        }\n    }\n]);\n","import { mergeRecursive } from 'muze-utils';\nimport { FACET_BY_FIELDS, RETINAL_FIELDS, PARENT_ALIAS, LAYERS, CACHED_DATA } from './enums/constants';\n\nexport const PROPS = {\n    [FACET_BY_FIELDS]: {},\n    [RETINAL_FIELDS]: {},\n    [PARENT_ALIAS]: {},\n    [LAYERS]: {},\n    [CACHED_DATA]: {},\n    detailFields: {},\n    axes: {\n        defaultValue: {\n            x: [],\n            y: []\n        }\n    },\n    fields: {\n        defaultValue: {\n            x: [],\n            y: []\n        },\n        sanitization: (context, value) => mergeRecursive({\n            x: [],\n            y: []\n        }, value)\n    },\n    metaInf: {},\n    registry: {},\n    width: {},\n    height: {},\n    parentContainerInf: {},\n    valueParser: {\n        defaultValue: val => val\n    },\n    coord: {}\n};\n","import { CommonProps } from 'muze-utils';\nimport { SpawnableSideEffect } from '@chartshq/muze-firebolt';\nimport { DATA } from '../enums/reactive-props';\n\nexport const initSideEffects = (sideEffects, firebolt) => {\n    for (const key in sideEffects) {\n        if ({}.hasOwnProperty.call(sideEffects, key)) {\n            sideEffects[key] instanceof SpawnableSideEffect && sideEffects[key].drawingContext(() => {\n                const context = firebolt.context;\n                return context.getDrawingContext();\n            });\n            sideEffects[key].valueParser(firebolt.context.valueParser());\n        }\n    }\n};\n\nexport const clearActionHistory = (context) => {\n    const actionHistory = context._actionHistory;\n    for (const key in actionHistory) {\n        if (actionHistory[key].isMutableAction) {\n            delete context._actionHistory[key];\n        }\n    }\n};\n\nexport const dispatchQueuedSideEffects = (context) => {\n    const queuedSideEffects = context._queuedSideEffects;\n    Object.entries(queuedSideEffects).forEach((entry) => {\n        const sideEffect = entry[1];\n        context.dispatchSideEffect(sideEffect.name, ...sideEffect.params);\n    });\n    context._queuedSideEffects = {};\n};\n\nexport const registerListeners = (firebolt) => {\n    const context = firebolt.context;\n    const store = context.store();\n\n    store.registerImmediateListener([`local.units.${context.metaInf().namespace}.${DATA}`], (dataModel) => {\n        const dm = dataModel[1];\n\n        if (dm) {\n            firebolt.createSelectionSet(firebolt.context.data().getData().uids);\n            firebolt.initializeSideEffects();\n            const originalData = firebolt.context.cachedData()[0];\n            firebolt.attachPropagationListener(originalData);\n        }\n    });\n\n    store.registerChangeListener([`local.units.${context.metaInf().namespace}.${DATA}`], () => {\n        if (!firebolt.context.mount()) {\n            const originalData = firebolt.context.cachedData()[0];\n            originalData.unsubscribe('propagation');\n        }\n    });\n\n    context._layerDeps.throwback.registerChangeListener([CommonProps.ON_LAYER_DRAW],\n        ([, onlayerdraw]) => {\n            if (onlayerdraw) {\n                dispatchQueuedSideEffects(firebolt);\n                clearActionHistory(firebolt);\n            }\n        });\n};\n\n","import { DimensionSubtype } from 'muze-utils';\n\nconst getRangeFromData = (instance, selectionDataModel, propConfig) => {\n    let criteria;\n    const dataObj = selectionDataModel[0].getData();\n    const propCriteria = propConfig.payload.criteria;\n    const sourceIdentifiers = propConfig.sourceIdentifiers;\n    const schema = dataObj.schema;\n    const fieldMap = instance.data().getFieldsConfig();\n    const data = dataObj.data;\n    const isActionSourceSame = instance.id() === propConfig.sourceId;\n\n    if (isActionSourceSame) {\n        criteria = propCriteria;\n    } else {\n        criteria = (sourceIdentifiers !== null) ? schema.reduce((acc, obj, index) => {\n            let range;\n            const field = obj.name;\n            const fieldObj = fieldMap[field];\n            const type = fieldObj && (fieldObj.def.subtype ? fieldObj.def.subtype : fieldObj.def.type);\n            const isDimension = type === DimensionSubtype.CATEGORICAL;\n\n            if (!fieldObj) {\n                return acc;\n            }\n\n            if (!isDimension) {\n                range = [Math.min(...data.map(d => d[index])), Math.max(...data.map(d => d[index]))];\n            } else {\n                range = data.map(d => d[index]);\n            }\n            acc[field] = range;\n            return acc;\n        }, {}) : null;\n    }\n    return criteria;\n};\n\nexport const payloadGenerator = {\n    brush: (instance, selectionDataModel, propConfig) => {\n        const propPayload = propConfig.payload;\n        const criteria = getRangeFromData(instance, selectionDataModel, propConfig);\n        const payload = Object.assign({}, propPayload);\n        payload.criteria = criteria;\n        return payload;\n    },\n\n    __default: (instance, selectionDataModel, propConfig) => {\n        const propPayload = propConfig.payload;\n        const sourceIdentifiers = propConfig.sourceIdentifiers;\n        const dataObj = selectionDataModel[0].getData();\n        let schema = dataObj.schema;\n        const payload = Object.assign({}, propPayload);\n        schema = dataObj.schema;\n        const data = dataObj.data;\n        const sourceFields = schema.map(d => d.name);\n        payload.criteria = !sourceIdentifiers && selectionDataModel[0].isEmpty() ? null :\n            [sourceFields, ...data];\n        payload.sourceFields = sourceIdentifiers ? sourceIdentifiers.getSchema().map(d => d.name) : [];\n        return payload;\n    }\n};\n\n","import { isSimpleObject, FieldType, DataModel } from 'muze-utils';\n\nconst getModelWithFacetData = (dm, data) => {\n    const dataObj = dm.getData();\n    const schema1 = dataObj.schema;\n    const data1 = dataObj.data;\n    const jsonData = [];\n    const schema2 = data[0].map(d => ({\n        name: `${d}`,\n        type: FieldType.DIMENSION\n    }));\n    const data2 = data[1];\n\n    data1.forEach((d) => {\n        const tuple = {};\n        schema1.forEach((obj, i) => {\n            tuple[obj.name] = d[i];\n        });\n        schema2.forEach((obj, i) => {\n            tuple[obj.name] = data2[i];\n        });\n        jsonData.push(tuple);\n    });\n\n    return new DataModel(jsonData, [...schema1, ...schema2]);\n};\n\nexport const propagateValues = (instance, action, config = {}) => {\n    let propagationData;\n    const payload = config.payload;\n    const selectionSet = config.selectionSet;\n    const propagationFieldInf = config.propagationFields[action] || {};\n    const propagationFields = propagationFieldInf.fields || [];\n    const append = propagationFieldInf.append;\n    const criteria = payload.criteria;\n    const context = instance.context;\n    const dataModel = context.cachedData()[0];\n    const sourceId = context.id();\n    const sideEfffects = instance.sideEffects();\n    const behaviourEffectMap = instance._behaviourEffectMap;\n    const mergedModel = selectionSet.mergedEnter.model;\n    const fieldsConfig = dataModel.getFieldsConfig();\n    payload.sourceUnit = sourceId;\n    payload.action = action;\n    payload.sourceCanvas = context.parentAlias();\n    const propagationBehaviourMap = instance._propagationBehaviourMap;\n    const propagationBehaviour = propagationBehaviourMap[action] || action;\n\n    let propFields = [];\n    if (criteria === null) {\n        propagationData = null;\n    } else if (isSimpleObject(criteria)) {\n        propFields = Object.keys(criteria || {});\n        propagationData = mergedModel ? mergedModel.project(propFields) : null;\n    } else {\n        propFields = criteria[0];\n        propagationData = mergedModel ? mergedModel.project(propFields) : null;\n    }\n\n    const facetByFields = context.facetByFields();\n    if (propagationData !== null && propagationFields.length) {\n        const fields = propagationData.getData().schema.map(d => d.name);\n        propagationData = getModelWithFacetData(propagationData, facetByFields);\n        propFields = append ? [...fields, ...propagationFields] : propagationFields;\n        propagationData = propagationData.project(propFields);\n    }\n\n    let propagateInterpolatedValues = false;\n    if (propFields.length && propFields.every(field => fieldsConfig[field] &&\n        fieldsConfig[field].def.type === FieldType.MEASURE)) {\n        propagateInterpolatedValues = true;\n    }\n\n    const groupId = context.parentAlias();\n    payload.action = action;\n    const behaviourInstance = instance._actions.behavioural[propagationBehaviour];\n    const isMutableAction = behaviourInstance ? behaviourInstance.constructor.mutates() : false;\n\n    const filterFn = (entry, propagationConf) => {\n        const effects = behaviourEffectMap[entry.config.action];\n        const mutates = entry.config.groupId ?\n            effects.some(d => sideEfffects[d.name || d].constructor.mutates()) : true;\n        return entry.config.groupId !== propagationConf.groupId && mutates;\n    };\n\n    const sourceBehaviour = instance._actions.behavioural[action];\n    const mutates = sourceBehaviour ? sourceBehaviour.constructor.mutates() : false;\n    let propConfig = {\n        payload,\n        action,\n        criteria: propagationData,\n        isMutableAction: mutates,\n        propagateInterpolatedValues,\n        groupId,\n        sourceId: mutates ? groupId : sourceId,\n        filterFn,\n        enabled: (propConf, firebolt) => (action !== propagationBehaviour ?\n            propConf.payload.sourceCanvas === firebolt.context.parentAlias() : true)\n    };\n\n    dataModel.propagate(propagationData, propConfig, true);\n\n    if (action !== propagationBehaviour) {\n        propConfig = {\n            payload,\n            sourceId: isMutableAction ? groupId : sourceId,\n            criteria: propagationData,\n            isMutableAction,\n            propagateInterpolatedValues,\n            action: propagationBehaviour,\n            groupId,\n            applyOnSource: action === propagationBehaviour,\n            enabled: (propConf, firebolt) => propConf.payload.sourceCanvas !== firebolt.context.parentAlias(),\n            filterFn\n        };\n\n        dataModel.propagate(propagationData, propConfig, true, {\n            filterImmutableAction: (actionInf, propInf) => actionInf.groupId !== propInf.groupId\n        });\n    }\n};\n","import { FieldType } from 'muze-utils';\nimport { Firebolt } from '@chartshq/muze-firebolt';\nimport { registerListeners } from './helper';\nimport { isXandYMeasures, getSelectionRejectionModel } from '../helper';\nimport { payloadGenerator } from './payload-generator';\nimport { propagateValues } from './data-propagator';\n\n/**\n * This class manages the interactions of visual unit. It associates physical actions with\n * behavioural actions. It also propagates the behavioural actions to other datamodels.\n */\nexport default class UnitFireBolt extends Firebolt {\n    constructor (...params) {\n        super(...params);\n        registerListeners(this);\n    }\n\n    propagate (behaviour, payload, selectionSet, sideEffects) {\n        propagateValues(this, behaviour, {\n            payload,\n            selectionSet,\n            sideEffects,\n            propagationFields: this._propagationFields\n        });\n    }\n\n    getApplicableSideEffects (sideEffects, payload, propagationInf) {\n        const context = this.context;\n        const unitId = context.id();\n        const aliasName = context.parentAlias();\n        const propagationSourceCanvas = propagationInf.propPayload && propagationInf.propPayload.sourceCanvas;\n        const sourceUnitId = propagationInf.propPayload && propagationInf.propPayload.sourceUnit;\n        const sourceSideEffects = this._sourceSideEffects;\n        const sideEffectInstances = this.sideEffects();\n        const actionOnSource = sourceUnitId ? sourceUnitId === unitId : true;\n\n        const applicableSideEffects = payload.sideEffects ? [{\n            effects: payload.sideEffects,\n            behaviours: [payload.action]\n        }] : sideEffects;\n        applicableSideEffects.forEach((d) => {\n            let mappedEffects = d.effects;\n            mappedEffects = mappedEffects.filter((se) => {\n                const mutates = sideEffectInstances[se.name || se].constructor.mutates();\n                if (mutates && propagationInf.isMutableAction === false) {\n                    return false;\n                }\n                if (!actionOnSource && payload.criteria !== null) {\n                    const sideEffectChecker = sourceSideEffects[se.name || se];\n                    return sideEffectChecker ? sideEffectChecker(propagationInf.propPayload, context) : true;\n                }\n                if (propagationSourceCanvas === aliasName || actionOnSource) {\n                    return se.applyOnSource !== false;\n                }\n\n                return true;\n            });\n            d.effects = mappedEffects;\n        });\n        return applicableSideEffects;\n    }\n\n    shouldApplySideEffects (propagate) {\n        return propagate === false;\n    }\n\n    onDataModelPropagation () {\n        return (data, config) => {\n            let isSourceFieldPresent = true;\n            let isMutableAction = false;\n            const context = this.context;\n            const {\n                model: propagationData,\n                entryRowIds,\n                exitRowIds\n            } = getSelectionRejectionModel(context.data(), data, isXandYMeasures(context), context._cachedValuesMap());\n            const propPayload = config.payload;\n            const sourceIdentifiers = config.sourceIdentifiers;\n            const enabledFn = config.enabled;\n            const action = config.action;\n            const payloadFn = payloadGenerator[action] || payloadGenerator.__default;\n\n            if (sourceIdentifiers) {\n                const fieldsConfig = sourceIdentifiers.getFieldsConfig();\n                const sourceIdentifierFields = Object.keys(fieldsConfig);\n                const propFields = Object.keys(propagationData[0].getFieldsConfig());\n                if (!Object.values(fieldsConfig).some(d => d.def.type === FieldType.MEASURE)) {\n                    isSourceFieldPresent = sourceIdentifierFields.some(d => propFields.indexOf(d) !== -1);\n                }\n            }\n\n            const payload = payloadFn(context, propagationData, config);\n            const sourceBehaviours = this._sourceBehaviours;\n            const filterFn = sourceBehaviours[action] || sourceBehaviours['*'];\n            let enabled = true;\n\n            if (filterFn) {\n                enabled = filterFn(propPayload || {}, context);\n            }\n\n            if (enabledFn) {\n                enabled = enabledFn(config, this) && enabled !== false;\n            }\n\n            if (enabled) {\n                const effects = this._behaviourEffectMap[action];\n                const sideEffectInstances = this.sideEffects();\n                isMutableAction = config.groupId ?\n                    effects.some(d => sideEffectInstances[d.name || d].constructor.mutates()) : config.isMutableAction;\n\n                const propagationInf = {\n                    propagate: false,\n                    data: propagationData,\n                    entryRowIds,\n                    exitRowIds,\n                    propPayload,\n                    sourceIdentifiers,\n                    persistent: false,\n                    isSourceFieldPresent,\n                    sourceId: config.propagationSourceId,\n                    isMutableAction: config.isMutableAction\n                };\n\n                this._actionHistory[action] = {\n                    payload,\n                    propagationInf,\n                    isMutableAction\n                };\n                this.dispatchBehaviour(action, payload, propagationInf);\n            }\n        };\n    }\n\n    prepareSelectionSets (behaviours) {\n        const data = this.context.data();\n        if (data) {\n            this.createSelectionSet(data.getData().uids, behaviours);\n        }\n        return this;\n    }\n\n    initializeSideEffects () {\n        if (this.context.data()) {\n            super.initializeSideEffects();\n        }\n        return this;\n    }\n\n    remove () {\n        this.context.cachedData()[0].unsubscribe('propagation');\n        return this;\n    }\n}\n","import { layerFactory } from '@chartshq/visual-layer';\nimport {\n    Store,\n    setAttrs,\n    getUniqueId,\n    getQualifiedClassName,\n    selectElement,\n    transactor,\n    makeElement,\n    registerListeners,\n    generateGetterSetters,\n    getDataModelFromIdentifiers,\n    isSimpleObject,\n    transposeArray,\n    CommonProps,\n    toArray,\n    STATE_NAMESPACES\n} from 'muze-utils';\nimport { physicalActions, sideEffects, behaviouralActions, behaviourEffectMap } from '@chartshq/muze-firebolt';\nimport { actionBehaviourMap } from './firebolt/action-behaviour-map';\nimport {\n    renderLayers,\n    getNearestDimensionalValue,\n    removeLayersBy,\n    getLayersBy,\n    getLayerFromDef,\n    getLayerAxisIndex,\n    sanitizeLayerDef,\n    createSideEffectGroup,\n    resolveEncodingTransform,\n    createRenderPromise,\n    setAxisRange\n} from './helper';\nimport { renderGridLineLayers } from './helper/grid-lines';\nimport localOptions from './local-options';\nimport { listenerMap, calculateDomainListener } from './listener-map';\nimport {\n    DOMAIN\n} from './enums/reactive-props';\nimport { PROPS } from './props';\nimport UnitFireBolt from './firebolt';\nimport { initSideEffects } from './firebolt/helper';\nimport './styles.scss';\n\nconst FORMAL_NAME = 'unit';\n\n/**\n * Visual Unit is hierarchical component created by {@link VisualGroup}. This component accepts layer definitions\n * and creates concrete layer instances from them, binds data and attaches axis to them. It also retreives the domain\n * from the layers and unions them and sets them on corresponding axis instances. This also creates the parent svg\n * groups for all the layers and delegates the rendering to all the layers.\n *\n * @public\n * @module VisualUnit\n * @class\n */\nexport default class VisualUnit {\n\n    /**\n     * Creates instance of visualization unit.\n     *\n     * @param {Object} registry  Component registry\n     * @param {Object} dependencies  Dependencies required by visual unit.\n     */\n    constructor (registry, dependencies) {\n        this._id = getUniqueId();\n        this._dependencies = dependencies;\n        this._layerDeps = {\n            throwback: new Store({\n                [CommonProps.ON_LAYER_DRAW]: false\n            }),\n            smartLabel: dependencies.smartLabel,\n            lifeCycleManager: dependencies.lifeCycleManager\n        };\n        this._renderedResolve = null;\n        this._renderedPromise = new Promise((resolve) => {\n            this._renderedResolve = resolve;\n        });\n        createRenderPromise(this);\n        this._layerDeps.throwback.registerChangeListener([CommonProps.ON_LAYER_DRAW], () => {\n            this._renderedResolve();\n            this._lifeCycleManager.notify({ client: this.layers(), action: 'drawn', formalName: 'layer' });\n        });\n\n        this._lifeCycleManager = dependencies.lifeCycleManager;\n        this._layersMap = {};\n        this._gridLinesSelection = null;\n        this._gridBandsSelection = null;\n        this._gridLines = [];\n        this._gridBands = [];\n        this._layerNamespaces = {};\n        this._layerAxisIndex = {};\n        this._transformedDataModels = {};\n        layerFactory.setLayerRegistry(registry.layerRegistry);\n        generateGetterSetters(this, PROPS);\n        this.registry(registry);\n        this.cachedData([]);\n    }\n\n    static formalName () {\n        return FORMAL_NAME;\n    }\n\n    static getState () {\n        return [\n            {\n                domain: {}\n            },\n            localOptions\n        ];\n    }\n\n    store (...params) {\n        if (params.length) {\n            this._store = params[0];\n            const metaInf = this.metaInf();\n            this.store().append(`${STATE_NAMESPACES.UNIT_LOCAL_NAMESPACE}`, {\n                [`${metaInf.namespace}`]: null\n            });\n            const localNs = `${STATE_NAMESPACES.UNIT_LOCAL_NAMESPACE}.${metaInf.namespace}`;\n            transactor(this, localOptions, this.store().model, {\n                namespace: localNs\n            });\n            registerListeners(this, listenerMap, {\n                local: localNs,\n                global: STATE_NAMESPACES.UNIT_GLOBAL_NAMESPACE\n            }, {\n                rowIndex: metaInf.rowIndex,\n                colIndex: metaInf.colIndex\n            });\n            this.firebolt(new UnitFireBolt(this, {\n                physical: physicalActions,\n                behavioural: behaviouralActions,\n                physicalBehaviouralMap: actionBehaviourMap\n            }, sideEffects, behaviourEffectMap));\n            return this;\n        }\n        return this._store;\n    }\n\n    /**\n     * Static helper for creates a unit instance\n     *\n     * @param {Object} [id] optional unique identifier for a unit; , id is calculated internally\n     * @param {DataModel} data instance of datamodel\n     * @param {Array.<Layer>} layers layer configuration\n     * @param {Object} config configurtion for the visual unit\n     * @return {VisualUnit} Instance of a unit\n     */\n    static create (...params) {\n        return new this(...params);\n    }\n\n    /**\n     * Returns the instance of firebolt associated with this visual unit. Firebolt dispatches the behavioural actions\n     * when any physical action happens on the elements of visual unit.\n     *\n     * @public\n     *\n     * @return {Firebolt} Instance of firebolt.\n     */\n    firebolt (...firebolt) {\n        if (firebolt.length) {\n            this._firebolt = firebolt[0];\n            return this;\n        }\n        return this._firebolt;\n    }\n\n    /**\n     * Returns the unique id of this visual unit.\n     *\n     * @public\n     * @return {string} Unique identifier.\n     */\n    id () {\n        return this._id;\n    }\n\n    lockModel () {\n        this._store.model.lock();\n        return this;\n    }\n\n    unlockModel () {\n        this._store.model.unlock();\n        return this;\n    }\n\n    timeDiffsByField (...params) {\n        if (params.length) {\n            return this;\n        }\n        return this._timeDiffsByField;\n    }\n\n    /**\n     * Renders the visual unit. It creates the layout and renders the axes and layers.\n     *\n     * @return {VisualUnit} Instance of visual unit.\n     */\n    render (container) {\n        const config = this.config();\n        const { className, defClassName, sideEffectClassName, classPrefix } = config;\n        const qualifiedClassName = getQualifiedClassName(defClassName, this.id(), config.classPrefix);\n        const width = this.width();\n        const height = this.height();\n        const containerSelection = selectElement(container).style('position', 'relative');\n\n        this._rootSvg = makeElement(containerSelection, 'svg', [null], className)\n                        .style('width', `${width}px`).style('height', `${height}px`);\n\n        const node = this._rootSvg.node();\n        setAttrs(node, {\n            width,\n            height,\n            class: qualifiedClassName.join(' ')\n        });\n\n        setAxisRange(this);\n        renderGridLineLayers(this, node);\n        renderLayers(this, node, this.layers(), {\n            width,\n            height\n        });\n        this._sideEffectGroup = createSideEffectGroup(node, `${classPrefix}-${sideEffectClassName}`);\n        const firebolt = this.firebolt();\n        initSideEffects(firebolt.sideEffects(), firebolt);\n        return this;\n    }\n\n    done () {\n        return this._renderedPromise;\n    }\n\n    /**\n     * Caches all the datamodels in an array from the next `data()` call on visual unit until `clearCaching()` or\n     * `resetData()` is called on it.\n     *\n     * @public\n     * @return {VisualUnit} Instance of visual unit.\n     */\n\n    enableCaching () {\n        this._cache = true;\n        return this;\n    }\n\n    /**\n     * Clears all the previous cached data.\n     *\n     * @public\n     * @segment VisualUnit\n     * @return {VisualUnit} Instance of visual unit.\n     */\n    clearCaching () {\n        this._cache = false;\n        this.cachedData([this.cachedData()[0]]);\n        return this;\n    }\n\n    /**\n     * Returns the drawing information from visual unit.Drawing context contains the dimensions of unit and the svg\n     * container of the visual unit.\n     *\n     * @public\n     *\n     * @return {Object} Drawing information.\n     *      ```\n     *          {\n     *              htmlContainer: // Html container of svg container of the visual unit\n     *              svgContainer: // Root svg container\n     *              width: // Width of the visual unit\n     *              height: // Height of the visual unit\n     *              sideEffectGroup: // Svg group for drawing side effect elements.\n     *              parentContainer: // Parent html container of the visual unit.\n     *              xOffset: // x offset space from the starting x position of the container,\n     *              yOffset: // y offset space from the starting y position of the container\n     *          }\n     *      ```\n     */\n    getDrawingContext () {\n        const rootSvg = this._rootSvg && this._rootSvg.node();\n        const width = this.width();\n        const height = this.height();\n        const { el, dimensions } = this.parentContainerInf();\n        return {\n            htmlContainer: this.mount(),\n            svgContainer: rootSvg,\n            width,\n            height,\n            sideEffectGroup: this._sideEffectGroup,\n            parentContainer: el,\n            parentContainerDimensions: dimensions,\n            xOffset: 0,\n            yOffset: 0\n        };\n    }\n\n    /**\n     * Returns the serialized configuration of visual unit.\n     *\n     * @return {Object} serialized configuration\n     */\n    serialize () {\n        return {\n            layers: this.layers().map(layer => layer.serialize()),\n            config: this.config(),\n            axes: this.axes().map(axis => axis.serialize())\n        };\n    }\n\n    mount (...mount) {\n        if (mount.length) {\n            this._mount = mount[0];\n            this.render(mount[0]);\n            this.firebolt().mapActionsAndBehaviour();\n            return this;\n        }\n        return this._mount;\n    }\n\n    /**\n     * Adds a new layer to the visual unit. It takes a layer definition and creates layer instances from them. It does\n     * not render the layers. It returns the layer instances in an array. If the layer definition is a composite layer,\n     * then multiple layer instances will be returned in the array.\n     *\n     * To add a layer in the unit,\n     * ```\n     *      unit.addLayer({\n     *          name: 'bullet',\n     *          mark: 'bar',\n     *          encoding: {\n     *              x: 'Year',\n     *              y: 'Acceleration',\n     *              color: 'Origin'\n     *          }\n     *      });\n     * ```\n     * @public\n     * @param {Object} layerDef Definition of new layer.\n     *\n     * @return {Array} Array of layer instances.\n     */\n    addLayer (layerDefinition) {\n        const layerDefinitions = sanitizeLayerDef(toArray(layerDefinition));\n\n        const layersMap = this._layersMap;\n        const markSet = {};\n        const store = {\n            layers: {},\n            components: {\n                unit: this\n            }\n        };\n        let layerIndex = 0;\n        let startIndex = [].concat(...Object.values(this._layersMap)).length;\n        const metaInf = this.metaInf();\n        const props = this._layerNamespaces;\n        const layers = layerDefinitions.sort((a, b) => a.order - b.order).reduce((layersArr, layerDef) => {\n            const definition = layerDef.def;\n            const markId = definition.name;\n            const defArr = toArray(definition);\n            const namespaces = [];\n            defArr.forEach((def) => {\n                def.order = layerDef.order + layerIndex;\n                const namespace = `${metaInf.namespace}${startIndex}`;\n                if (!layersMap[markId]) {\n                    startIndex++;\n                    if (definition.calculateDomain !== false) {\n                        props[`${STATE_NAMESPACES.LAYER_GLOBAL_NAMESPACE}.${DOMAIN}.${namespace}`] = true;\n                    }\n                }\n                namespaces.push(namespace);\n            });\n            layerIndex += defArr.length;\n            const instances = getLayerFromDef(this, definition, layersMap[markId], namespaces);\n            store.layers = Object.assign(store.layers, instances);\n            const instanceValues = Object.values(instances);\n            layersArr = layersArr.concat(...instanceValues);\n            layersMap[markId] = instanceValues;\n            markSet[markId] = markId;\n            return layersArr;\n        }, []);\n\n        store.unit = this;\n        const layerdeps = {};\n        const layersArr = [].concat(...Object.values(this._layersMap));\n        layersArr.forEach((layer) => {\n            const alias = layer.alias();\n            store.layers[alias] = layer;\n            layerdeps[alias] = [];\n        });\n        layers.forEach((layer) => {\n            const depArr = resolveEncodingTransform(layer, store);\n            layerdeps[layer.alias()] = depArr;\n        });\n\n        this._layerDepOrder = layerdeps;\n        this._layerAxisIndex = Object.assign(this._layerAxisIndex, getLayerAxisIndex(layers, this.fields()));\n        const stateStore = this.store();\n\n        stateStore.unsubscribe({\n            key: 'calculateDomainListener',\n            namespace: `${STATE_NAMESPACES.UNIT_LOCAL_NAMESPACE}.${metaInf.namespace}`\n        });\n        stateStore.registerImmediateListener(Object.keys(props), calculateDomainListener(this, metaInf.namespace),\n            false, {\n                key: 'calculateDomainListener',\n                namespace: `${STATE_NAMESPACES.UNIT_LOCAL_NAMESPACE}.${metaInf.namespace}`\n            });\n        this.layers(layersArr);\n        return layers;\n    }\n\n    /**\n     *\n     *\n     *\n     * @memberof VisualUnit\n     */\n    remove () {\n        const lifeCycleManager = this._dependencies.lifeCycleManager;\n        lifeCycleManager.notify({ client: this, action: 'beforeremove', formalName: 'unit' });\n        this.store().unsubscribe({\n            namespace: `${STATE_NAMESPACES.UNIT_LOCAL_NAMESPACE}.${this.metaInf().namespace}`\n        });\n        selectElement(this.mount()).remove();\n        this.firebolt().remove();\n        // Remove layers\n        lifeCycleManager.notify({ client: this.layers(), action: 'beforeremove', formalName: 'layer' });\n        this.layers().forEach(layer => layer.remove());\n        lifeCycleManager.notify({ client: this.layers(), action: 'removed', formalName: 'layer' });\n        lifeCycleManager.notify({ client: this, action: 'removed', formalName: 'unit' });\n        return this;\n    }\n\n    /**\n     *\n     *\n     * @param {*} identifiers\n     *\n     * @memberof VisualUnit\n     */\n    getDataModelFromIdentifiers (identifiers, mode, parentModel) {\n        if (identifiers === null) {\n            return null;\n        }\n        const dataModel = parentModel || this.data();\n        return getDataModelFromIdentifiers(dataModel, identifiers, mode);\n    }\n\n    /**\n     * Resets the data of visual unit to original data model. It also clears the cached data.\n     *\n     * @public\n     * @segment VisualUnit\n     * @return {VisualUnit} Instance of visual unit.\n     */\n    resetData () {\n        this.data(this.cachedData()[0]);\n        return this;\n    }\n\n    /**\n     *\n     *\n     *\n     * @memberof VisualUnit\n     */\n    getSourceInfo () {\n        return {\n            dimensionMeasureMap: this._dimensionMeasureMap,\n            fields: this.fields(),\n            data: this.data(),\n            axes: this.axes()\n        };\n    }\n\n    getDataDomain () {\n        return this.store().get(`${STATE_NAMESPACES.UNIT_GLOBAL_NAMESPACE}.domain.${this.metaInf().namespace}`);\n    }\n\n    /**\n     *\n     *\n     *\n     * @memberof VisualUnit\n     */\n    getDefaultTargetContainer () {\n        const { classPrefix, defClassName } = this.config();\n        return [`.${classPrefix}-${defClassName}`];\n    }\n\n    /**\n     * Returns an array of layer instances which matches the supplied mark type.\n     *\n     * @public\n     *\n     * @param {string} type Mark type of layer.\n     *\n     * @return {Array} Array of layer instances.\n     */\n    getLayersByType (type) {\n        const layers = getLayersBy(this.layers(), 'type', type);\n        return layers;\n    }\n\n    /**\n     * Returns the layer instance which matches the supplied layer name. If no layer is found, then it returns\n     * undefined.\n     *\n     * @public\n     * @param {string} name Name of layer.\n     *\n     * @return {VisualUnit} Layer instance.\n     */\n    getLayerByName (name) {\n        const layers = getLayersBy(this.layers(), 'name', name);\n        return layers[0];\n    }\n\n    /**\n     * Returns the point located nearest to the supplied x and y position. It returns the unique identifiers of the\n     * point. This function also accepts an additional configuration `getAllPoints` inside `config` object in the third\n     * argument which if set to true, then it returns the identifiers of all the points which falls on the nearest\n     * x value or y value if any one of the field is a dimension. Additionally, a target property is also returned\n     * which contains the identifier of the nearest point. If no nearest point is found, then it returns identifier\n     * as null.\n     *\n     * @public\n     *\n     * @param {number} x X Position of the point from where nearest point is to be found.\n     * @param {number} y Y Position of the point from where nearest point is to be found.\n     * @param {Object} config Additional configuration options.\n     * @param {boolean} config.getAllPoints If true, then returns all the points nearest to the x value or y value if\n     * it is dimension.\n     * @param {Object} config.data Data associated with the nearest point.\n     * @return {Object} Nearest point information\n     * ```\n     *      {\n     *          id: [['Origin'], ['USA'], ['Japan']], // Identifiers of all the points closest to the x value.\n     *          target: [['Origin'], ['Japan']] // Identifier of the nearest point.\n     *      }\n     * ```\n     */\n    getNearestPoint (x, y, config) {\n        let pointObj = {\n            id: null\n        };\n        const dimValue = getNearestDimensionalValue(this, {\n            x,\n            y\n        });\n\n        if (dimValue !== null && config.getAllPoints) {\n            pointObj.id = dimValue;\n            const pointInf = this.getMarkInfFromLayers(x, y, config);\n            pointObj.target = pointInf && pointInf.id ? pointInf.id : pointObj.id;\n            return pointObj;\n        }\n\n        const markInf = this.getMarkInfFromLayers(x, y, config) || { id: null };\n        pointObj = Object.assign({}, markInf);\n\n        pointObj.target = markInf.id;\n        return pointObj;\n    }\n\n    getMarkInfFromLayers (x, y, args) {\n        const layers = this.layers();\n        const len = layers.length;\n        let point = null;\n        // Iterate through the layers array and fetch the nearest point from each layer. If a valid\n        // nearest point is found from any layer, then return that point.\n        for (let i = 0; i < len; i++) {\n            const layer = layers[i];\n            const config = layer.config();\n            if (config.interactive !== false) {\n                point = layer.getNearestPoint(x, y, args);\n            }\n            if (point) {\n                return point;\n            }\n        }\n        return point;\n    }\n\n    /**\n     * Get the information of all the marks such as x, y position and size from supplied identifiers. It\n     * returns an array of points whose data matches the given identifiers.\n     *\n     * @public\n     *\n     * @param {Array|Object} identifiers Field names and their corresponding values.\n     * ```\n     * identifiers can be given in an array of array,\n     *      ['Origin', 'Name'], // Names of the fields supplied in first array\n     *      ['USA', 'ford'], // Data values of each field supplied in rest of the arrays.\n     *      ['Japan', 'ford']\n     * or in an object,\n     *      {\n     *          Origin: ['USA']\n     *      }\n     * ```\n     * @param {Object} config Optional configurations which decides which information of the mark will\n     * be retrieved.\n     * @param {boolean} [config.getAllAttrs = false] If true, then returns all the information of each mark.\n     * @param {boolean} [config.getBBox = false] If true, then returns the bounding box of each mark.\n     *\n     * @return {Array} Array of objects containing the information of each point.\n     * ```\n     * By default, the method returns the array of points in this structure,\n     *      [\n     *          {\n     *              x: 20,\n     *              y: 100,\n     *              width: 200,\n     *              height: 100\n     *          }\n     *      ]\n     * If 'config.getAllAttrs' is true, then it returns all the information of each mark,\n     *      [\n     *      // Positions of mark on initial state of transition.\n     *          enter: {\n     *              x: 0,\n     *              y: 0\n     *          },\n     *          // Final positions of the mark\n     *          update: {\n     *              x: 20,\n     *              y: 10\n     *          },\n     *          style: // css styles of each mark\n     *          source: [200, 'USA'] // Row information of each mark\n     *          id: 20 // Row id of each mark\n     *      ]\n     * ```\n     */\n    getPlotPointsFromIdentifiers (identifiers, config = {}) {\n        let points = [];\n        let parsedIdentifiers = identifiers;\n        if (identifiers === null) {\n            return [];\n        }\n        const layers = this.layers();\n        const len = layers.length;\n        if (isSimpleObject(identifiers)) {\n            parsedIdentifiers = [Object.keys(identifiers)];\n            parsedIdentifiers = [...parsedIdentifiers, ...transposeArray(Object.values(identifiers))];\n        }\n        for (let i = 0; i < len; i++) {\n            const layer = layers[i];\n            if (layer.config().interactive !== false) {\n                points = [...points, ...layer.getPointsFromIdentifiers(parsedIdentifiers, config)];\n            }\n        }\n        return points;\n    }\n\n    /**\n     * Removes the layer instance which matches the supplied layer name.\n     *\n     * @public\n     * @param {string} name Name of layer\n     *\n     * @return {VisualUnit} Instance of visual unit.\n     */\n    removeLayerByName (name) {\n        removeLayersBy('name', name);\n        return this;\n    }\n\n    /**\n     * Removes all the layer instances which matches the supplied mark type.\n     *\n     * @public\n     * @param {string} type Mark type of layer.\n     *\n     * @return {VisualUnit} Instance of visual unit.\n     */\n    removeLayersByType (type) {\n        removeLayersBy('type', type);\n        return this;\n    }\n}\n","import { DataModel } from 'muze-utils';\nimport { retriveDomainFromData, sortFacetFields } from './group-utils';\n\n/**\n * Gets name of fields form the variables\n *\n * @param {*} fields1\n * @param {*} [fields2=[]]\n *\n */\nconst getFieldNames = (fields1, fields2 = []) => [fields1, fields2].map(fields => fields.reduce((acc, d) => {\n    acc = [...acc, ...d.getMembers()];\n    return acc;\n}, []));\n\n/**\n * Creates a selected datamodel from a parent datamodel and a set of field names\n *\n * @param {Object} datamodel provided as input\n * @param {Array} fieldNames schema  names\n * @param {Array} fieldValues values of those schema names to be selected\n * @return {Object} creates a new selected datamodel\n */\nconst createSelectedDataModel = (datamodel, fieldNames, fieldValues) =>\n    datamodel.select(fields => fieldNames.every((field, k) => fields[field].value === fieldValues[k]));\n\n/**\n *\n *\n * @param {*} facets\n * @param {*} keyArray\n *\n */\nconst uniqueKeyGenerator = (keyArray, context, depth = 0, val = []) => {\n    const {\n        facets,\n        dataModel,\n        uniqueValues\n    } = context;\n\n    // Get unique keys for the next depth recursively if required\n    if (facets[depth + 1]) {\n        const field = facets[depth];\n        uniqueValues.forEach((value) => {\n            const newDm = dataModel.select(fields => fields[field].value === value);\n            const nextDepthUniqueValues = retriveDomainFromData(newDm, facets[depth + 1]);\n            const newContext = {\n                facets,\n                dataModel: newDm,\n                uniqueValues: nextDepthUniqueValues\n            };\n\n            uniqueKeyGenerator(keyArray, newContext, depth + 1, [...val, value]);\n        });\n    } else {\n        uniqueValues.forEach((value) => {\n            keyArray.push([...val, value]);\n        });\n    }\n};\n\n/**\n * projects row model based on the set of row and/or column and other projection fields\n *\n * @param {Object} datamodel provided as input\n * @return {Object} Projected datamodel\n */\nconst projectRows = (datamodel, projections) => {\n    const {\n        allColumnProjections,\n        rowProjections,\n        optionalProjections\n    } = projections;\n\n    if (rowProjections.length > 0) {\n        return rowProjections.map((projectFields) => {\n            const [projFieldNames, colProjFieldNames] = getFieldNames(projectFields, allColumnProjections);\n            return datamodel.project([...projFieldNames, ...colProjFieldNames, ...optionalProjections]);\n        });\n    }\n    return [datamodel];\n};\n\n/**\n * Adds the datamodels to current row index based on column fields\n *\n * @param {Array} context current context\n * @param {Array} valueCellCreator List of facets applied to the current datamodel\n */\nconst pushToMatrix = (context, valueCellCreator) => {\n    let cells = [];\n    const {\n        matrix,\n        datamodel,\n        facetInfo,\n        fieldInfo\n    } = context;\n    // Get projected fields for current row\n    const {\n        rowProjections,\n        colProjections,\n        optionalProjections\n    } = fieldInfo;\n    const {\n        rowIndex,\n        columnIndex\n    } = facetInfo;\n    const rowProj = rowProjections[(rowIndex) % rowProjections.length] || [];\n\n    // Get the cells for the matrix from the return function of the callback on the datamodel.\n    // callback function -> (datamodel, {projections, indices}, facets)\n    if (colProjections.length > 0) {\n        cells = colProjections.map((projectFields, projIdx) => {\n            const [colProjFieldNames, rowProjFieldNames] = getFieldNames(projectFields, rowProj);\n            const projectedDm = datamodel.project([...colProjFieldNames, ...rowProjFieldNames, ...optionalProjections]);\n            const projections = { rowFields: rowProj, columnFields: projectFields };\n            const indices = { rowIndex, columnIndex: columnIndex * colProjections.length + projIdx };\n\n            return valueCellCreator(projectedDm, { projections, indices }, facetInfo);\n        });\n    } else {\n        const projections = { rowFields: rowProj, columnFields: [] };\n        const indices = { rowIndex, columnIndex };\n\n        cells = [valueCellCreator(datamodel, { projections, indices }, facetInfo)];\n    }\n\n    matrix[rowIndex] = matrix[rowIndex] || [];\n    matrix[rowIndex].push(...cells);\n};\n\n/**\n * Formats row or columns keys with the provided formatter.\n *\n * @param {Array} keys - The collection of row or column keys.\n * @param {Array} formatterList - The list of corresponding formatter.\n */\nconst formatKeys = (keys, formatterList) => {\n    keys.forEach((rKeys) => {\n        rKeys.forEach((key, idx) => {\n            rKeys[idx] = formatterList[idx](key);\n        });\n    });\n};\n\n/**\n * Gets Matrixes for corresponding datamodel, facets and projections\n *\n * @param {Object} dataModel input datamodel\n * @param {Array} facetsAndProjections contains the set of facets and projections for the matrices\n * @param {Function} valueCellCreator Callback executed after datamodels are prepared after sel/proj\n * @param {Object} globalConfig global config\n *\n * @return {Object} set of matrices with the corresponding row and column keys\n */\nexport const getMatrixModel = (dataModel, facetsAndProjections, valueCellCreator, globalConfig) => {\n    let rowDataModels = [];\n    const rowKeys = [];\n    const columnKeys = [];\n    const allColumnProjections = [];\n    const matrix = [];\n    const facetInfo = [];\n\n    const fieldInfo = Object.assign({}, facetsAndProjections);\n    const {\n        rowFacets,\n        colFacets,\n        colProjections\n    } = fieldInfo;\n\n    colProjections.forEach((colProj) => {\n        allColumnProjections.push(...colProj);\n    });\n    fieldInfo.allColumnProjections = allColumnProjections;\n\n    // Performing row selection and projection\n    if (rowFacets.length > 0) {\n        // Get unique values for the root level of facet\n        const field = rowFacets[0].toString();\n        const firstLevelRowKeys = retriveDomainFromData(dataModel, field);\n\n        sortFacetFields(rowFacets[0], firstLevelRowKeys, globalConfig);\n\n        // Get unique keys in the form of an array of arrays for each row\n        uniqueKeyGenerator(rowKeys, { facets: rowFacets, dataModel, uniqueValues: firstLevelRowKeys });\n\n        // Apply selection -> projection -> row datamodels\n        rowKeys.forEach((val) => {\n            // Create faceted datamodel\n            const [rowFacetFieldNames] = getFieldNames(rowFacets);\n            const selectedDataModel = createSelectedDataModel(dataModel, rowFacetFieldNames, val);\n\n            // Project the datamodel based on the number of projections (based on last levels)\n            const newProjectedDataModels = projectRows(selectedDataModel, fieldInfo);\n            rowDataModels.push(...newProjectedDataModels);\n\n            newProjectedDataModels.forEach(() => {\n                facetInfo.push([rowFacets, val]);\n            });\n        });\n    } else {\n        // No row facets, hence only row projection\n        rowDataModels.push(...projectRows(dataModel, fieldInfo));\n    }\n\n    // Maintaining set of row datamodels for column resolution\n    rowDataModels = rowDataModels.length > 0 ? rowDataModels : [[]];\n\n    // Performing column selection and projection\n    if (colFacets.length > 0) {\n        const colFacetNames = colFacets.map(d => `${d}`);\n        // Get unique values for the root level of facet\n        const field = colFacetNames[0];\n        const firstLevelColumnKeys = retriveDomainFromData(dataModel, field);\n\n        sortFacetFields(colFacets[0], firstLevelColumnKeys, globalConfig);\n\n        // Get unique keys to create faceted datamodels: this time for columns\n        uniqueKeyGenerator(columnKeys, {\n            facets: colFacetNames,\n            dataModel,\n            uniqueValues: firstLevelColumnKeys\n        });\n        // For each row in the datamodel, apply selection -> projection -> push the projection to matri\n        rowDataModels.forEach((dme, rIndex) => {\n            facetInfo[rIndex] = facetInfo[rIndex] || [[], []];\n            columnKeys.forEach((val, cIndex) => {\n                matrix[rIndex] = matrix[rIndex] || [];\n\n                // If datamodel is not present in current row, choose parent datamodel\n                const datamodel = dme instanceof DataModel ? dme : dataModel;\n\n                // Selection is made on the datamodel for the current row\n                const selectedDataModel = createSelectedDataModel(datamodel, colFacetNames, val);\n                const context = {\n                    matrix,\n                    datamodel: selectedDataModel,\n                    facetInfo: {\n                        rowFacets: facetInfo[rIndex],\n                        colFacets: [colFacets, val],\n                        rowIndex: rIndex,\n                        columnIndex: cIndex\n                    },\n                    fieldInfo\n                };\n                pushToMatrix(context, valueCellCreator);\n            });\n        });\n    } else {\n        // No column facets, hence only row projection\n        rowDataModels.forEach((dme, rIndex) => {\n            facetInfo[rIndex] = facetInfo[rIndex] || [[], []];\n            const context = {\n                matrix,\n                datamodel: dme || dataModel,\n                facetInfo: {\n                    rowFacets: facetInfo[rIndex],\n                    colFacets: [[], []],\n                    rowIndex: rIndex,\n                    columnIndex: 0\n                },\n                fieldInfo\n            };\n\n            pushToMatrix(context, valueCellCreator);\n        });\n    }\n\n    formatKeys(columnKeys, colFacets.map(facetField => facetField.rawFormat()));\n    formatKeys(rowKeys, rowFacets.map(facetField => facetField.rawFormat()));\n\n    // Getting column keys\n    const transposedColKeys = columnKeys.length > 0 ? columnKeys[0].map((col, i) =>\n                    columnKeys.map(row => row[i])) : columnKeys;\n\n    return { matrix, rowKeys, columnKeys: transposedColKeys };\n};\n","import { AxisOrientation } from '@chartshq/muze-axis';\nimport {\n    getObjProp,\n    FieldType,\n    STATE_NAMESPACES,\n    retrieveNearestGroupByReducers,\n    mergeRecursive,\n    createSelection\n} from 'muze-utils';\nimport { getMatrixModel } from './matrix-model';\nimport {\n    getCellKey,\n    isDistributionEqual,\n    mutateAxesFromMap,\n    getFieldsFromSuppliedLayers,\n    extractFields\n} from './group-utils';\nimport { ROW, ROWS, COLUMNS, COL, LEFT, RIGHT, TOP,\n    BOTTOM, PRIMARY, SECONDARY, X, Y, TEMPORAL } from '../enums/constants';\nimport { SimpleVariable } from '../variable';\n\n/**\n * Updates row and column cells with the geom cell corresponding to the facet keys\n *\n * @param {*} resolver\n * @param {*} facets\n */\nconst updateCells = (resolver, facets, geomCell) => {\n    [ROW, COL].forEach((field) => {\n        const cells = resolver[`${field}Cells`]();\n        const facetKey = facets[`${field}Facets`][1].join();\n\n        !cells[facetKey] && (cells[facetKey] = []);\n        cells[facetKey].push(geomCell);\n        resolver[`${field}Cells`](cells);\n    });\n};\n\n/**\n *\n *\n * @param {*} context\n * @param {*} datamodel\n * @param {*} fieldInfo\n * @param {*} facets\n *\n */\nexport const createValueCells = (context, datamodel, fieldInfo, facets) => {\n    const {\n        projections,\n        indices\n    } = fieldInfo;\n    const {\n        rowFields,\n        columnFields\n    } = projections;\n    const {\n         rowIndex,\n         columnIndex\n    } = indices;\n    const {\n        suppliedLayers,\n        cell: GeomCell,\n        resolver,\n        config,\n        encoder,\n        detailFields\n    } = context;\n    const axes = resolver.axes();\n    const cacheMaps = resolver.cacheMaps();\n    const matrixLayers = resolver.matrixLayers();\n    const labelManager = resolver.dependencies().smartlabel;\n    const horizontalAxis = resolver.horizontalAxis();\n    const verticalAxis = resolver.verticalAxis();\n    const datamodelTransform = resolver.datamodelTransform();\n    const {\n        entryCellMap,\n        exitCellMap\n    } = cacheMaps;\n    const layerConfigArr = encoder.getLayerConfig({ columnFields, rowFields }, suppliedLayers || [],\n        context.retinalConfig);\n    const axesCreators = { config, labelManager, axes, cacheMaps };\n\n    fieldInfo.normalizedColumns = verticalAxis.fields;\n    fieldInfo.normalizedRows = horizontalAxis.fields;\n\n    const allFacets = [\n        [...facets.rowFacets[0], ...facets.colFacets[0]],\n        [...facets.rowFacets[1], ...facets.colFacets[1]]\n    ];\n    const facetFields = allFacets.slice();\n    facetFields[0] = facetFields[0].map(facetField => facetField.oneVar());\n\n    matrixLayers[rowIndex] = matrixLayers[rowIndex] ? matrixLayers[rowIndex] : [];\n    matrixLayers[rowIndex][columnIndex] = layerConfigArr;\n\n    // return from map if already there otherwise create and put in map\n    const geomCellKey = getCellKey(rowIndex, columnIndex);\n    const fields = {\n        y: rowFields,\n        x: columnFields\n    };\n\n    const geomCell = !exitCellMap.has(geomCellKey) ? new GeomCell() : exitCellMap.get(geomCellKey);\n\n    geomCell.data(datamodel)\n                    .fields(fields)\n                    .transform(datamodelTransform)\n                    .detailFields(detailFields)\n                    .facetByFields(allFacets);\n\n    encoder.createAxis(axesCreators, fieldInfo, Object.assign({}, context, { geomCell, facetFields }));\n    entryCellMap.set(geomCellKey, geomCell);\n    exitCellMap.delete(geomCellKey);\n\n    updateCells(resolver, facets, geomCell);\n\n    return entryCellMap.get(geomCellKey);\n};\n\n/**\n * Creates axis cells based on the set of axes\n *\n * @param {Selection} selection Contains a selection of the axis units\n * @param {Array} axes Actual axis units\n * @param {number} axisIndex 0-> primary axis, 1-> secondary axis(when dual axis is made)\n * @param {Object} cells Contains a collection of the cells\n * @return {Object} return either set of axis/blank cells depending on the config\n */\n\nconst createAxisCells = (selection, axes, axisIndex, cells) =>\n    createSelection(selection, axis => axis, axes, (item, i) => i + item.reduce((e, n) => {\n        const id = n.id + axisIndex;\n        return e + id;\n    }, '')).map((currObj, axis) => {\n        if (axis && axis[axisIndex]) {\n            const axisInst = axis[axisIndex];\n            const { orientation, show } = axisInst.config();\n\n            return new cells.AxisCell().source(axisInst).config({\n                isOffset: orientation === AxisOrientation.LEFT || orientation === AxisOrientation.TOP,\n                show\n            });\n        }\n        return new cells.BlankCell().config({ show: false });\n    });\n\n/**\n *\n *\n * @param {*} context\n * @param {*} selectionObj\n * @param {*} cells\n * @retur\n */\nconst axisPlaceholderGn = (context, selObj, cells) => {\n    const {\n        matrices\n    } = context;\n    const {\n        axesMatrix\n    } = matrices;\n\n    return (type, axisFrom) => {\n        const axes = axesMatrix[`${type}`];\n\n        if (axes && axes.length) {\n            if (type === X || type === Y) {\n                const fieldNames = type === Y ? ROWS : COLUMNS;\n\n                [PRIMARY, SECONDARY].forEach((fieldType, index) => {\n                    const selObjProp = `${fieldNames}${fieldType}`;\n                    let axisIndex = index;\n                    let axesForDraw = axes;\n                    if (axisFrom === RIGHT || axisFrom === BOTTOM) {\n                        axisIndex = 1 - axisIndex;\n                    }\n                    if (!getObjProp(axes, 0, axisIndex)) {\n                        axesForDraw = [];\n                    }\n                    selObj[selObjProp] = createAxisCells(selObj[selObjProp], axesForDraw, axisIndex, cells);\n                });\n            } else {\n                selObj.rowsPrimary = createAxisCells(selObj.rowPrime, axes.map(() => []), 0, cells);\n                selObj.rowsSecondary = createAxisCells(selObj.rowSec, axes.map(() => []), 0, cells);\n                selObj.columnsPrimary = createAxisCells(selObj.colPrime, axes[0], 0, cells);\n                selObj.columnsSecondary = createAxisCells(selObj.colSec, axes[0], 0, cells);\n            }\n        }\n        return selObj;\n    };\n};\n\n/**\n * Creates header cells based on the set of headers\n *\n * @param {Object} selection Contains a selection of the header units\n * @param {string} headers Contains a list of the headers\n * @param {Object} cells Contains a collection of the cells\n * @param {Object} labelManager smart label instance\n * @return {Object} return either set of header cells depending on the config\n */\nconst createTextCells = (selection, headers, cells, labelManager) => createSelection(selection,\n    (label) => {\n        const textCell = new cells.TextCell({}, { labelManager });\n        textCell.source(label);\n        return textCell;\n    }, headers, (key, i) => key + i);\n\n/**\n *\n *\n * @param {*} context\n * @param {*} selectionObj\n * @param {*} cells\n * @param {*} labelManager\n *\n */\nconst headerPlaceholderGn = (context, selectionObj, cells, labelManager) => {\n    const {\n        axis,\n        keys,\n        type,\n        facet\n    } = context;\n    const counter = axis.length / keys.length;\n    const selectionKeys = keys.length ? axis.map((d, i) => keys[Math.floor(i / counter)]) : [];\n\n    const selObjUpdater = createSelection(selectionObj[`${type}Headers`], keySet => keySet, selectionKeys,\n    (keySet, i) => `${keySet.join(',')}-${i}`);\n\n    return selObjUpdater.map((keySet, data) => {\n        let textCells = createTextCells(null, data, cells, labelManager);\n        textCells = textCells.map((cell, k) => cell.source(k).config(facet));\n        return textCells;\n    });\n};\n\n/**\n * Creates a set of placeholders as a part of selection object\n *\n * @param {Array} normalizedOptions contains normalized rows and columns\n * @param {Array} matrices contains axis and value matrices\n * @param {aArrayny} projections contains set of row and column projections\n * @param {Object} cells Contains a collection of the cells\n * @param {Object} labelManager smart label instance\n * @return {Object} Creates a set of placeholders as a part of selections\n */\nconst generatePlaceholders = (context, cells, labelManager) => {\n    let selectionObj;\n    const {\n        matrices,\n        fields,\n        facetsAndProjections,\n        selection,\n        facet,\n        encoders,\n        resolver\n    } = context;\n    const {\n        rows,\n        columns\n    } = fields;\n    const {\n        valuesMatrix\n    } = matrices;\n    const {\n        rowProjections,\n        colProjections\n    } = facetsAndProjections;\n    const {\n        rowKeys,\n        columnKeys\n    } = valuesMatrix;\n    const takeAxisFrom = encoders.simpleEncoder._axisFrom;\n    const takeHeaderFrom = encoders.simpleEncoder._headerFrom;\n\n    selectionObj = selection || {};\n\n    ['pie', X, Y].forEach((axis) => {\n        const axisFrom = axis === X ? takeAxisFrom.column : takeAxisFrom.row;\n        selectionObj = axisPlaceholderGn(context, selectionObj, cells)(axis, axisFrom);\n    });\n\n    const {\n        rowsPrimary,\n        rowsSecondary,\n        columnsPrimary,\n        columnsSecondary\n    } = selectionObj;\n\n    const rowAxis = rowsPrimary && rowsPrimary.getObjects().length ? rowsPrimary.getObjects() :\n        (rowsSecondary && rowsSecondary.getObjects().length ? rowsSecondary.getObjects() : []);\n    const colAxis = columnsPrimary && columnsPrimary.getObjects().length ? columnsPrimary.getObjects() :\n        (columnsSecondary && columnsSecondary.getObjects().length ? columnsSecondary.getObjects() : []);\n\n    const headerConfig = [\n        { type: LEFT, section: rows[0], axis: rowAxis, headerFrom: takeHeaderFrom.row },\n        { type: RIGHT, section: rows[1], axis: rowAxis, headerFrom: takeHeaderFrom.row },\n        { type: TOP, section: columns[0], axis: colAxis, headerFrom: takeHeaderFrom.column },\n        { type: BOTTOM, section: columns[1], axis: colAxis, headerFrom: takeHeaderFrom.column }\n    ];\n\n    headerConfig.forEach((config, index) => {\n        let keys;\n        let length;\n        const {\n            type,\n            section,\n            axis,\n            headerFrom\n        } = config;\n\n        if (index < 2) {\n            keys = rowKeys;\n            length = rowProjections.length > 0 ? rowProjections.length : 1;\n        } else {\n            keys = columnKeys;\n            length = colProjections.length > 0 ? colProjections.length : 1;\n        }\n        keys = keys.map(arr => arr.map(val => resolver.valueParser()(val)));\n        if (section.length && headerFrom === type && axis && keys.length) {\n            const hContext = { axis, length, type };\n            let headers = [];\n            if (index < 2) {\n                hContext.keys = keys;\n                hContext.facet = facet.rows;\n                headers = headerPlaceholderGn(hContext, selectionObj, cells, labelManager);\n            } else {\n                hContext.facet = facet.columns;\n                hContext.keys = keys[0].map((key, i) => keys.map(e => e[i]));\n\n                headers = headerPlaceholderGn(hContext, selectionObj, cells, labelManager);\n            }\n            selectionObj[`${type}Headers`] = headers;\n        } else {\n            selectionObj[`${type}Headers`] = null;\n        }\n    });\n    return selectionObj;\n};\n\n/**\n * Generates matrices\n *\n * @param {Object} config Configuration to generate matrices\n * @param {Array} matrices Matrices containing the set of visual units and axes units\n * @param {Object} cells Contains a collection of the cells\n * @param {Object} labelManager smart label instance\n * @return {Object} contains a collection of matrices\n */\nexport const generateMatrices = (context, matrices, cells, labelManager) => {\n    const {\n        unitHeight,\n        unitWidth,\n        facetsAndProjections,\n        normalizedRows,\n        normalizedColumns,\n        selection,\n        axisFrom,\n        facet,\n        encoders,\n        resolver\n     } = context;\n    const placeholderContext = {\n        fields: {\n            rows: normalizedRows,\n            columns: normalizedColumns\n        },\n        matrices,\n        facetsAndProjections,\n        selection,\n        axisFrom,\n        facet,\n        encoders,\n        resolver\n    };\n    // Generate placeholders for all matrices\n    const selectionObj = generatePlaceholders(placeholderContext, cells, labelManager);\n    const {\n        columnsPrimary,\n        columnsSecondary,\n        rowsPrimary,\n        rowsSecondary,\n        leftHeaders,\n        topHeaders,\n        bottomHeaders,\n        rightHeaders\n    } = selectionObj;\n    const [rowPrime, rowSec, colPrime, colSec] = [rowsPrimary, rowsSecondary, columnsPrimary, columnsSecondary]\n        .map(d => (d ? d.getObjects() : []));\n    const [leftFacets, rightFacets] = [leftHeaders, rightHeaders]\n        .map(e => (e ? e.getObjects()\n                        .map(f => f.getObjects()) : []));\n    let rowPriority = rowSec.length ? 1 : -1;\n    rowPrime.length && rowPriority++;\n    let colPriority = colSec.length ? 1 : -1;\n    colPrime.length && colPriority++;\n\n    // Compute left matrix using left headers and the axes on the rows\n    let leftMatrix = leftFacets.length ? leftFacets.map((d, i) => {\n        rowPrime[i] = rowPrime[i] ? [rowPrime[i]] : [];\n        return [...d, ...rowPrime[i]];\n    }) : (rowPrime ? rowPrime.map(d => [d]) : []);\n\n    // Compute right matrix using right headers and the axes on the rows\n    const rightMatrix = rowSec.length ? rowSec.map((d, i) => [d, ...(rightFacets[i] || [])]) : (rightFacets.length ?\n        rightFacets.map(d => [...d]) : []);\n\n    const topMatrix = [];\n    if (topHeaders) {\n        const headers = topHeaders.getObjects();\n        headers.forEach((e) => {\n            const innerHeaders = e.getObjects();\n            innerHeaders.forEach((x, i) => {\n                topMatrix[i] = topMatrix[i] || [];\n                topMatrix[i].push(x);\n            });\n        });\n    }\n    // Compute top matrix using the top headers and axes on the columns\n    if (colPrime.length) {\n        topMatrix.push(colPrime);\n    }\n\n    // Bottom and right matrices are prepared using the user config.\n    let bottomMatrix = [];\n    if (colSec.length) {\n        bottomMatrix.push(colSec);\n    }\n    const currentBottomLength = bottomMatrix.length;\n    if (bottomHeaders) {\n        const headers = bottomHeaders.getObjects();\n        headers.forEach((e) => {\n            const innerHeaders = e.getObjects();\n            innerHeaders.forEach((x, i) => {\n                bottomMatrix[i + currentBottomLength] = bottomMatrix[i + currentBottomLength] || [];\n                bottomMatrix[i + currentBottomLength].push(x);\n            });\n        });\n    }\n\n    if (!leftMatrix.length && !rightMatrix.length) {\n        const cell = new cells.BlankCell();\n        cell.setAvailableSpace(unitWidth, unitHeight);\n        leftMatrix = [[cell]];\n    }\n\n    if (!topMatrix.length && (!bottomMatrix.length || !bottomMatrix[0].length)) {\n        const cell = new cells.BlankCell();\n        cell.setAvailableSpace(unitWidth, unitHeight);\n        bottomMatrix = [[cell]];\n    }\n\n    return {\n        rows: [leftMatrix, rightMatrix],\n        columns: [topMatrix, bottomMatrix],\n        selectionObj,\n        colPriority,\n        rowPriority\n    };\n};\nconst getAxisFields = (projections, fieldHolder = []) =>\n                            projections.reduce((acc, item) =>\n                                [...acc, ...item.reduce((ac, field) =>\n                                   (field instanceof SimpleVariable ? [...ac, field.oneVar()] : ac), [])], fieldHolder);\n\nconst sortDmTemporalFields = (resolver, datamodel) => {\n    let axisFields = [];\n    const projections = resolver.projections();\n    axisFields = getAxisFields(projections.rowProjections, getAxisFields(projections.colProjections));\n\n    const fieldConfig = datamodel.getFieldsConfig();\n    const temporalFields = axisFields.reduce((acc, field) =>\n                                    ((fieldConfig[field].def.subtype === TEMPORAL) ? [...acc, [field]] : acc), []);\n    return temporalFields.length ? datamodel.sort(temporalFields, { saveChild: true }) : datamodel;\n};\n\n/**\n * Computes matrices for a group\n *\n * @param {Object} datamodel on which the matrices are to be computed\n * @param {Object} config configuration of the matrices\n * @param {Object} layerRegistry contains the registered layers\n * @return {Object} conputed matrices\n * @memberof MatrixResolver\n */\nexport const computeMatrices = (context, config) => {\n    const {\n        resolver,\n        datamodel,\n        componentRegistry,\n        encoders\n    } = context;\n    const {\n            globalConfig,\n            selection,\n            transform\n        } = config;\n    const groupBy = globalConfig.autoGroupBy;\n    const { smartlabel: labelManager } = resolver.dependencies();\n    const fieldMap = datamodel.getFieldsConfig();\n    const layerConfig = resolver.layerConfig();\n    const registry = resolver.registry();\n    const { fields: normalizedRows } = resolver.horizontalAxis();\n    const { fields: normalizedColumns } = resolver.verticalAxis();\n    const otherEncodings = resolver.optionalProjections(config, layerConfig);\n    const facetsAndProjections = resolver.getAllFields();\n    const matrixGnContext = {\n        // Configuration to be passed to generate the  different matrices.\n        // A common config is used for both value matrices and other matrices\n        normalizedColumns,\n        normalizedRows,\n        facetsAndProjections,\n        layers: layerConfig,\n        fieldMap,\n        otherEncodings,\n        encoders,\n        facet: globalConfig.facet || {},\n        axisFrom: globalConfig.axisFrom || {},\n        selection,\n        resolver\n    };\n    const cells = {\n        GeomCell: resolver.getCellDef(registry.GeomCell),\n        AxisCell: resolver.getCellDef(registry.AxisCell),\n        BlankCell: resolver.getCellDef(registry.BlankCell),\n        TextCell: resolver.getCellDef(registry.TextCell)\n    };\n    const isRowSizeEqual = isDistributionEqual(normalizedRows);\n    const isColumnSizeEqual = isDistributionEqual(normalizedColumns);\n\n    resolver.colCells({});\n    resolver.rowCells({});\n    resolver.datamodelTransform(transform || {});\n\n    // Cell creation begins here\n    resolver.resetSimpleAxes();\n\n    const {\n        entryCellMap\n    } = resolver.cacheMaps();\n    const newCacheMap = {\n        exitCellMap: entryCellMap,\n        entryCellMap: new Map()\n    };\n\n    resolver.cacheMaps(newCacheMap);\n\n    const valueCellContext = {\n        config: globalConfig,\n        suppliedLayers: encoders.simpleEncoder.serializeLayerConfig(resolver.layerConfig()),\n        resolver,\n        cell: cells.GeomCell,\n        encoder: encoders.simpleEncoder,\n        newCacheMap,\n        detailFields: config.detail,\n        retinalConfig: {\n            color: config.color,\n            size: config.size,\n            shape: config.shape\n        }\n    };\n    const fieldsConfig = datamodel.getFieldsConfig();\n    let groupedModel = datamodel;\n    if (!groupBy.disabled) {\n        const fields = getFieldsFromSuppliedLayers(valueCellContext.suppliedLayers, datamodel.getFieldsConfig());\n        const allFields = extractFields(facetsAndProjections, fields);\n\n        const dimensions = allFields.filter(field =>\n            fieldsConfig[field] && fieldsConfig[field].def.type === FieldType.DIMENSION);\n        const aggregationFns = groupBy.measures;\n        const measureNames = Object.keys(datamodel.getFieldspace().getMeasure());\n        const nearestAggFns = retrieveNearestGroupByReducers(datamodel, ...measureNames);\n        const resolvedAggFns = mergeRecursive(nearestAggFns, aggregationFns);\n        groupedModel = datamodel.groupBy(dimensions.length ? dimensions : [''], resolvedAggFns).project(allFields);\n    }\n\n    // sort temporal fields if any in the given rows and columns\n    groupedModel = sortDmTemporalFields(resolver, groupedModel);\n    // return a callback function to create the cells from the matrix\n    const cellCreator = resolver.valueCellsCreator(valueCellContext);\n    // Creates value matrices from the datamodel and configs\n    const valueMatrixInfo = getMatrixModel(groupedModel, facetsAndProjections, cellCreator, globalConfig);\n\n    resolver.cacheMaps().exitCellMap.forEach((placeholder) => {\n        placeholder.remove();\n    });\n    resolver.cacheMaps().exitCellMap.clear();\n    resolver.valueMatrix(valueMatrixInfo.matrix);\n\n    const { xAxes, yAxes } = mutateAxesFromMap(resolver.cacheMaps(), resolver.axes());\n\n    resolver.axes({\n        x: xAxes,\n        y: yAxes\n    });\n    const store = resolver.store();\n\n    [xAxes, yAxes].forEach((axesArr, type) => {\n        const stateProps = {};\n        axesArr = axesArr || [];\n        axesArr.forEach((axes, idx) => {\n            axes.forEach((axis, axisIndex) => {\n                stateProps[`${idx}${axisIndex}`] = null;\n            });\n        });\n        store.append(`${STATE_NAMESPACES.GROUP_GLOBAL_NAMESPACE}.domain.${type ? 'y' : 'x'}`, stateProps);\n    });\n    resolver.createUnits(componentRegistry, config);\n\n    const matrices = {\n        valuesMatrix: valueMatrixInfo,\n        axesMatrix: resolver.axes()\n    };\n    // Create all matrices\n    const {\n        rows,\n        columns,\n        selectionObj,\n        rowPriority,\n        colPriority\n    } = generateMatrices(matrixGnContext, matrices, cells, labelManager);\n\n    resolver.rowMatrix(rows);\n    resolver.columnMatrix(columns);\n\n    return {\n        rows: resolver.rowMatrix(),\n        columns: resolver.columnMatrix(),\n        values: resolver.valueMatrix(),\n        isColumnSizeEqual,\n        isRowSizeEqual,\n        priority: {\n            row: rowPriority,\n            col: colPriority\n        },\n        selection: selectionObj,\n        dataModels: {\n            groupedModel,\n            parentModel: datamodel\n        }\n    };\n};\n","export const RESOLVER_PROPS = {\n    dependencies: {},\n    units: {},\n    datamodelTransform: {},\n    layerConfig: {},\n    matrixLayers: {},\n    colCells: {},\n    rowCells: {},\n    rowMatrix: {},\n    columnMatrix: {},\n    valueMatrix: {},\n    encoder: {},\n    valueParser: {}\n};\n","import { VisualUnit } from '@chartshq/visual-unit';\nimport { generateGetterSetters, STATE_NAMESPACES } from 'muze-utils';\nimport {\n     initializeCacheMaps,\n     headerCreator,\n     extractUnitConfig,\n     setFacetsAndProjections\n} from './group-utils';\nimport {\n     ROW, COL, LEFT, RIGHT, COLOR, SIZE, SHAPE, DETAIL, CELL, X_AXES, Y_AXES, ENTRY_CELLS, EXIT_CELLS, INITIALIZED,\n     AXIS, UNIT, BEFORE_UPDATE, UPDATED, VALUE_MATRIX, FACET_HEADERS\n} from '../enums/constants';\nimport { createValueCells, computeMatrices } from './cell-creator';\nimport { RESOLVER_PROPS } from './resolver-props';\n\n/**\n * Resolves the matrices from configuration provided\n *\n * @export\n * @class MatrixResolver\n */\nexport default class MatrixResolver {\n\n    /**\n     * Creates an instance of MatrixResolver.\n     * @param {Object} dependencies needed to run the resolver\n     * @memberof MatrixResolver\n     */\n    constructor (dependencies) {\n        this._registry = {};\n        this._layerConfig = [];\n        this._matrixLayers = [];\n        this._dependencies = dependencies;\n        this._rowMatrix = [];\n        this._columnMatrix = [];\n        this._valueMatrix = [];\n        this._facets = { rowFacets: [], colFacets: [] };\n        this._projections = { rowProjections: [], colProjections: [] };\n        this._datamodelTransform = {};\n        this._units = [];\n        this._cacheMaps = {};\n        this._axes = {\n            x: {},\n            y: {},\n            color: [],\n            size: [],\n            shape: [],\n            radius: [],\n            angle: [],\n            angle0: []\n        };\n        generateGetterSetters(this, RESOLVER_PROPS);\n        this.cacheMaps(initializeCacheMaps());\n    }\n\n    /**\n     * Set:  Registers placeholders, Get: return {Object} those placeholders\n     *\n     * @param {Object} placeholders cells that will construct the group\n     * @return {Object} Either current instance or the set of placeholders\n     * @memberof MatrixResolver\n     */\n    registry (...placeholders) {\n        if (placeholders.length) {\n            Object.entries(placeholders[0]).forEach((val) => {\n                this._registry[val[0]] = val[1];\n            });\n            return this;\n        }\n        return this._registry;\n    }\n\n    /**\n     * Used to set the layer config from outside or get current layer info\n     *\n     * @param {Object} type configuration of layer provided externally\n     * @return {Object} either the layer or current instance\n     * @memberof MatrixResolver\n     */\n    cacheMaps (...maps) {\n        if (maps.length) {\n            [CELL, X_AXES, Y_AXES, ENTRY_CELLS, EXIT_CELLS].forEach((e) => {\n                this._cacheMaps[`${e}Map`] = maps[0][`${e}Map`] || this._cacheMaps[`${e}Map`];\n            });\n            return this;\n        }\n        return this._cacheMaps;\n    }\n\n    /**\n     * Used to set the layer config from outside or get current layer info\n     *\n     * @param {Object} type configuration of layer provided externally\n     * @return {Object} either the layer or current instance\n     * @memberof MatrixResolver\n     */\n    axes (...axes) {\n        if (axes.length) {\n            this._axes = Object.assign({}, this._axes, axes[0]);\n            return this;\n        }\n        return this._axes;\n    }\n\n    /**\n     *\n     *\n     * @param {*} facets\n     *\n     * @memberof MatrixResolver\n     */\n    facets (...facets) {\n        if (facets.length) {\n            Object.entries(facets[0]).forEach((e) => {\n                this._facets[e[0]] = e[1];\n            });\n            return this;\n        }\n        return this._facets;\n    }\n\n    /**\n     *\n     *\n     * @param {*} projections\n     *\n     * @memberof MatrixResolver\n     */\n    projections (...projections) {\n        if (projections.length) {\n            Object.entries(projections[0]).forEach((e) => {\n                this._projections[e[0]] = e[1];\n            });\n            return this;\n        }\n        return this._projections;\n    }\n\n    /**\n     *\n     *\n     * @param {*} config\n     * @param {*} layerConfig\n     *\n     * @memberof MatrixResolver\n     */\n    optionalProjections (config, layerConfig) {\n        const otherEncodings = {};\n        const optionalProjections = [];\n        const otherEncodingTypes = [SIZE, COLOR, SHAPE];\n\n        otherEncodingTypes.forEach((type) => {\n            if (config[type] && config[type].field) {\n                const enc = config[type];\n                otherEncodings[type] = enc.field;\n                optionalProjections.push(enc.field);\n            }\n        });\n\n        if (config[DETAIL]) {\n            optionalProjections.push(...config.detail);\n        }\n\n        if (layerConfig.length) {\n            layerConfig.forEach((layer) => {\n                if (layer.encoding) {\n                    Object.values(layer.encoding).forEach((enc) => {\n                        if (enc && optionalProjections.indexOf(enc.field) === -1) {\n                            optionalProjections.push(enc.field ? enc.field : enc);\n                        }\n                    });\n                }\n            });\n        }\n        this.projections({ optionalProjections });\n        return otherEncodings;\n    }\n\n    /**\n     * return the normalized set of rows and facets and projections\n     *\n     * @param {Object} rows parameters needed to set horizontal axis consisiting of rows\n     * @return {Object} facets, projections and normalized rows\n     * @memberof MatrixResolver\n     */\n    horizontalAxis (rows, encoder) {\n        if (rows) {\n            this._horizontalAxis = setFacetsAndProjections(this, { type: ROW, fields: rows }, encoder);\n            return this;\n        }\n        return this._horizontalAxis;\n    }\n\n    /**\n     * return the normalized set of columns and facets and projections\n     *\n     * @param {Object} columns parameters needed to set vertical axis consisiting of columns\n     * @return {Object} facets, projections and normalized columns\n     * @memberof MatrixResolver\n     */\n    verticalAxis (columns, encoder) {\n        if (columns) {\n            this._verticalAxis = setFacetsAndProjections(this, { type: COL, fields: columns }, encoder);\n            return this;\n        }\n        return this._verticalAxis;\n    }\n\n    /**\n     * Gets the class definition of a particular cell type(if the particular type has been extended, that particular\n     * definition is returned)\n     *\n     * @param {Object} cell cell whose class definition is to be retrieved\n     * @return {Object} cell definition\n     * @memberof MatrixResolver\n     */\n    getCellDef (cell) {\n        const registry = this.registry();\n\n        Object.values(registry).forEach((e) => {\n            if (e.prototype instanceof cell) {\n                cell = e;\n            }\n        });\n        return cell;\n    }\n\n    /**\n     * return a visual cell creator along with its axis information to be injected to the datamodel creation\n     * function\n     *\n     * @param {Object} GeomCell Type of cell to be created\n     * @return {Object} Created cell\n     * @memberof MatrixResolver\n     */\n    valueCellsCreator (context) {\n        // reset matrix layers\n        this.matrixLayers([]);\n\n        return (datamodel, fieldInfo, facets) => createValueCells(context, datamodel, fieldInfo, facets);\n    }\n\n    /**\n     * Callback to be applied on each cell of a matrix of a particular type\n     *\n     * @param {string} matrixType type of matrix on which callback is to be applied\n     * @param {Function} callback function to be applied to each cell\n     * @memberof MatrixResolver\n     */\n    forEach (matrixType, callback) {\n        this[matrixType]().forEach((row, rIndex) => {\n            row.forEach((col, cIndex) => {\n                callback(rIndex, cIndex, col);\n            });\n        });\n    }\n\n    /**\n     *\n     *\n     *\n     * @memberof MatrixResolver\n     */\n    getAllFields () {\n        const retObj = this.projections();\n\n        Object.entries(this.facets()).forEach((e) => {\n            retObj[e[0]] = e[1];\n        });\n        return retObj;\n    }\n\n    /**\n     *\n     *\n     * @memberof MatrixResolver\n     */\n    resetSimpleAxes () {\n        return this.axes({\n            x: new Set(),\n            y: new Set()\n        });\n    }\n\n    /**\n     *\n     *\n     * @param {*} componentRegistry\n     * @param {*} config\n     * @memberof MatrixResolver\n     */\n    createUnits (componentRegistry, config) {\n        const {\n            globalConfig,\n            alias,\n            coord\n        } = config;\n        const {\n            layerRegistry,\n            sideEffectRegistry\n        } = componentRegistry;\n        const {\n            smartlabel: smartLabel,\n            lifeCycleManager\n        } = this.dependencies();\n        // Provide the source for the matrix\n        const units = [[]];\n        // Setting unit configuration\n        const unitConfig = extractUnitConfig(globalConfig || {});\n        const globalState = VisualUnit.getState()[0];\n        const globalStates = {};\n        const store = this.store();\n        this.forEach(VALUE_MATRIX, (i, j, el) => {\n            let unit = el.source();\n            if (!unit) {\n                const namespace = `${i}${j}`;\n\n                unit = VisualUnit.create({\n                    layerRegistry,\n                    sideEffectRegistry\n                }, {\n                    smartLabel,\n                    lifeCycleManager\n                });\n                globalStates[namespace] = null;\n                unit.metaInf({\n                    rowIndex: i,\n                    colIndex: j,\n                    namespace\n                });\n                unit.store(store);\n                unit.coord(coord);\n                el.source(unit);\n            }\n            !units[i] && (units[i] = []);\n            units[i][j] = unit;\n            unit.parentAlias(alias)\n                .valueParser(this.valueParser())\n                .coord(coord);\n            el.config(unitConfig);\n        });\n\n        for (const key in globalState) {\n            store.append(`${STATE_NAMESPACES.UNIT_GLOBAL_NAMESPACE}.${key}`, globalStates);\n        }\n\n        lifeCycleManager.notify({ client: units, action: INITIALIZED, formalName: UNIT });\n        return this.units(units);\n    }\n\n    /**\n     *\n     *\n     * @param {*} config\n     * @memberof MatrixResolver\n     */\n    setDomains (config, datamodel, encoders) {\n        const {\n            color,\n            shape,\n            size,\n            globalConfig\n        } = config;\n        const groupBy = globalConfig.autoGroupBy;\n        const {\n            rowFacets,\n            colFacets\n        } = this.getAllFields();\n        const encoding = {\n            color,\n            shape,\n            size\n        };\n        const facetFields = [...rowFacets.map(e => e.toString()), ...colFacets.map(e => e.toString())];\n        const retContext = {\n            domains: encoders.simpleEncoder.getRetinalFieldsDomain(datamodel, encoding, facetFields, groupBy),\n            axes: this.axes(),\n            encoding\n        };\n        encoders.retinalEncoder.setCommonDomain(retContext);\n        return this;\n    }\n\n    resetFacetsAndProjections () {\n        this._facets = {};\n        this._projections = {};\n        return this;\n    }\n\n    /**\n     *\n     *\n     *\n     * @memberof MatrixResolver\n     */\n    getRetinalAxes () {\n        const {\n            color,\n            shape,\n            size\n        } = this.axes();\n\n        return {\n            color: [...color],\n            shape: [...shape],\n            size: [...size]\n        };\n    }\n\n    /**\n     *\n     *\n     * @param {*} type\n     *\n     * @memberof MatrixResolver\n     */\n    getSimpleAxes (type) {\n        return this.axes()[`${type}`];\n    }\n\n    /**\n     *\n     *\n     * @param {*} datamodel\n     * @param {*} config\n     * @memberof MatrixResolver\n     */\n    createRetinalAxes (fieldsConfig, config, encoders) {\n        const layerConfig = this.layerConfig();\n        this.optionalProjections(config, layerConfig);\n        const retinalAxes = encoders.retinalEncoder.createAxis({\n            fieldsConfig,\n            config,\n            axes: this.axes()\n        });\n        const {\n            lifeCycleManager\n        } = this.dependencies();\n\n        [COLOR, SHAPE, SIZE].forEach((e) => {\n            this.axes()[e] = retinalAxes[e];\n        });\n\n        lifeCycleManager.notify({ client: this.axes(), action: INITIALIZED, formalName: AXIS });\n        lifeCycleManager.notify({ client: this.units(), action: BEFORE_UPDATE, formalName: UNIT });\n\n        const units = [];\n        const matrixLayers = this.matrixLayers();\n\n        this.forEach(VALUE_MATRIX, (i, j, el) => {\n            el.axes(Object.assign(el.axes(), retinalAxes));\n            el.source() && el.source().retinalFields(config);\n            el.layerDef(matrixLayers[i][j]);\n            el.updateModel();\n\n            units.push(el.source());\n        });\n\n        lifeCycleManager.notify({ client: units, action: UPDATED, formalName: UNIT });\n        return this;\n    }\n\n    /**\n     *\n     *\n     * @param {*} placeholders\n     * @param {*} fieldNames\n     *\n     * @memberof MatrixResolver\n     */\n    createHeaders (placeholders, fieldNames, config) {\n        let bottomLeft = [];\n        let bottomRight = [];\n        const {\n            rows,\n            columns\n        } = placeholders;\n        const {\n            smartlabel: labelManager,\n            lifeCycleManager\n        } = this.dependencies();\n        const {\n            showHeaders,\n            classPrefix\n        } = config;\n        const TextCell = this.getCellDef(this.registry().TextCell);\n        const BlankCell = this.getCellDef(this.registry().BlankCell);\n        const [leftRows, rightRows] = rows;\n        const [topCols, bottomCols] = columns;\n        const rowHeaders = fieldNames.rows;\n        const blankCellCreator = cell => new BlankCell().config({ show: cell.config().show });\n\n        // Headers and footers are created based on the rows. Thereafter, using the column information\n        // they are tabularized into the current structure\n        const headers = {\n            left: headerCreator(leftRows, rowHeaders[0], showHeaders ? TextCell : BlankCell,\n                { classPrefix, labelManager }),\n            right: headerCreator(rightRows, rowHeaders[1], showHeaders ? TextCell : BlankCell,\n                { classPrefix, labelManager })\n        };\n        const footers = {\n            left: leftRows.length > 0 ? leftRows[0].map(blankCellCreator) : [],\n            right: rightRows.length > 0 ? rightRows[0].map(blankCellCreator) : []\n        };\n        const [topLeft, topRight] = [LEFT, RIGHT].map(type => topCols.map((col, i) => {\n            if (i === topCols.length - 1) {\n                return headers[type];\n            }\n            return footers[type];\n        }));\n\n        // Creating only bottom matrices if there is no information on the top\n        if (topCols.length === 0) {\n            [bottomLeft, bottomRight] = [LEFT, RIGHT].map(type => bottomCols.map((col, i) => {\n                if (i === 0) {\n                    return headers[type];\n                }\n                return footers[type];\n            }));\n        } else {\n            bottomLeft = bottomCols.map(() => (leftRows.length > 0 ? leftRows[0].map(blankCellCreator) : []));\n            bottomRight = bottomCols.map(() => (rightRows.length > 0 ? rightRows[0].map(blankCellCreator) : []));\n        }\n\n        lifeCycleManager.notify({\n            client: [topLeft, topRight, bottomLeft, bottomRight],\n            action: INITIALIZED,\n            formalName: FACET_HEADERS\n        });\n\n        return { topLeft, topRight, bottomLeft, bottomRight };\n    }\n\n    /**\n     *\n     *\n     * @param {*} datamodel\n     * @param {*} config\n     * @param {*} componentRegistry\n     * @param {*} encoders\n     *\n     * @memberof MatrixResolver\n     */\n    getMatrices (datamodel, config, componentRegistry, encoders) {\n        const context = {\n            datamodel,\n            componentRegistry,\n            encoders,\n            resolver: this\n        };\n\n        return computeMatrices(context, config);\n    }\n\n    store (...params) {\n        if (params.length) {\n            this._store = params[0];\n            return this;\n        }\n        return this._store;\n    }\n}\n","/**\n * This is a wrapper class over the matrix of cells which gets created in visual group. Visual Group creates left,\n * right, bottom and top and center matrices and wraps them using this class.\n *\n * @public\n * @class ValueMatrix\n */\nclass ValueMatrix {\n\n    /**\n     * Creates an instance of ValueMatrix.\n     *\n     * @param {Array} matrixArr Matrix array.\n     */\n    constructor (matrixArr) {\n        const instancesById = {};\n\n        this.matrix(matrixArr || []);\n        this.filter(() => true);\n\n        this.each((el, rIdx, cIdx) => {\n            const cellValue = el.valueOf();\n            if (cellValue && cellValue.id) {\n                const id = cellValue.id();\n                instancesById[id] = {\n                    instance: cellValue,\n                    rowIndex: rIdx,\n                    colIndex: cIdx\n                };\n            }\n        });\n\n        this.instancesById(instancesById);\n    }\n\n    instancesById (...id) {\n        if (id.length) {\n            this._instancesById = id[0];\n            return this;\n        }\n        return this._instancesById;\n    }\n\n    /**\n     * Returns the array of matrices contained in this instance.\n     *\n     * @public\n     * @return {Array} Array of matrices.\n     */\n    matrix (...matrix) {\n        if (matrix.length) {\n            this._matrix = matrix[0];\n            return this;\n        }\n        return this._matrix;\n    }\n\n    /**\n     * Sets a filter criteria. This filter criteria gets applied when each function is called.\n     *\n     * @public\n     * @param {Function} fn Filter function.\n     *\n     * @return {ValueMatrix} Instance of value matrix.\n     */\n    filter (...fn) {\n        if (fn.length) {\n            this._filterFn = fn[0];\n            return this;\n        }\n        return this._filterFn;\n    }\n\n    /**\n     * Returns the total width occupied by all the cells of the matrix.\n     *\n     * @return {Number} Width of the matrix.\n     */\n    width () {\n        let rowWidth = 0;\n\n        this.matrix().forEach((row) => {\n            let currentRowWidth = 0;\n            row.forEach((cell) => {\n                currentRowWidth += cell.getLogicalSpace().width;\n            });\n            rowWidth = Math.max(rowWidth, currentRowWidth);\n        });\n        return rowWidth;\n    }\n\n    /**\n     * Returns the total width occupied by all the cells of the matrix.\n     *\n     * @return {Number} Width of the matrix.\n     */\n    height () {\n        let rowHeight = 0;\n\n        this.matrix().forEach((row) => {\n            let currentRowHeight = 0;\n            row.forEach((cell) => {\n                currentRowHeight = Math.max(currentRowHeight, cell.getLogicalSpace().height);\n            });\n            rowHeight += currentRowHeight;\n        });\n        return rowHeight;\n    }\n\n    /**\n     * Iterates through the two dimensional matrix array and calls the given callback function with the cell instance,\n     * row index, column index and the matrix array.\n     *\n     * @param {Function} fn Callback function which will get called for every cell.\n     * @return {ValueMatrix} Instance of the value matrix.\n     */\n    each (fn) {\n        const matrix = this.matrix();\n        const filterFn = this.filter();\n\n        matrix.forEach((row, rIndex) => {\n            row.forEach((col, cIndex) => {\n                if (filterFn(col)) {\n                    fn(col, rIndex, cIndex, matrix);\n                }\n            });\n        });\n        return this;\n    }\n\n    findPlaceHolderById (id) {\n        return this.instancesById()[id];\n    }\n}\n\nexport default ValueMatrix;\n","import { VisualUnit } from '@chartshq/visual-unit';\nimport { STATE_NAMESPACES, CommonProps } from 'muze-utils';\nimport { BaseLayer } from '@chartshq/visual-layer';\nimport { getEncoder, getBorders } from '../group-helper';\nimport { RetinalEncoder } from '../encoder';\nimport { registerDomainChangeListener, unsubscribeChangeListeners } from './change-listener';\nimport ValueMatrix from './value-matrix';\n\nexport const createUnitState = (context) => {\n    const [globalState] = VisualUnit.getState();\n    const store = context.store();\n    store.append(STATE_NAMESPACES.UNIT_GLOBAL_NAMESPACE, globalState);\n};\n\nexport const initializeGlobalState = (context) => {\n    const globalState = context.constructor.getState()[0];\n    const store = context.store();\n    store.append(STATE_NAMESPACES.GROUP_GLOBAL_NAMESPACE, globalState);\n};\n\nexport const createLayerState = (context) => {\n    const [globalState] = BaseLayer.getState();\n    context.store().append(STATE_NAMESPACES.LAYER_GLOBAL_NAMESPACE, globalState);\n};\n\nconst sanitizeRetinalConfig = (retinalConf) => {\n    const conf = {};\n    for (const key in retinalConf) {\n        const confValue = retinalConf[key];\n        if (typeof confValue === 'string' || !confValue) {\n            conf[key] = {\n                field: retinalConf[key]\n            };\n        } else {\n            conf[key] = confValue;\n        }\n    }\n    return conf;\n};\n\nexport const setMatrixInstances = (context, placeholder) => {\n    let {\n        values,\n        rows,\n        columns\n    } = placeholder;\n    values = values || [];\n    rows = rows || [];\n    columns = columns || [];\n    context._composition.matrices = {\n        value: new ValueMatrix(values),\n        left: new ValueMatrix(rows[0]),\n        right: new ValueMatrix(rows[1]),\n        top: new ValueMatrix(columns[0]),\n        bottom: new ValueMatrix(columns[1])\n    };\n\n    context._dependencies.throwback.commit(CommonProps.MATRIX_CREATED, true);\n    return context;\n};\n\nexport const createMatrices = (context) => {\n    const rows = context.rows();\n    const columns = context.columns();\n    const color = context.color();\n    const datamodel = context.data();\n    const size = context.size();\n    const detail = context.detail();\n    const layers = context.layers();\n    const transform = context.transform();\n    const config = context.config();\n    const shape = context.shape();\n\n    // Get the resolver for the matrices\n    const resolver = context.resolver();\n    resolver.store(context.store());\n    resolver.valueParser(context.valueParser());\n    // Prepare configuration for matrix preparation\n    let matrixConfig = {\n        selection: context.selection(),\n        alias: context.alias(),\n        globalConfig: config || {},\n        rows,\n        columns,\n        detail,\n        layers,\n        transform\n    };\n\n    unsubscribeChangeListeners(context);\n\n    const retinalConfig = sanitizeRetinalConfig({\n        color,\n        shape,\n        size\n    });\n\n    matrixConfig = Object.assign(matrixConfig, retinalConfig);\n    // Create the encoders for the group\n    const encoders = {};\n    encoders.retinalEncoder = new RetinalEncoder();\n    encoders.simpleEncoder = getEncoder(layers);\n    matrixConfig.coord = encoders.simpleEncoder.constructor.type();\n    resolver.encoder(encoders.simpleEncoder);\n\n    // Set the group type\n    context.groupType(encoders.simpleEncoder.constructor.type());\n\n    // Get sanitized fields as instances of the Vars Class\n    const fields = encoders.simpleEncoder.fieldSanitizer(datamodel, matrixConfig);\n    encoders.simpleEncoder.setAxisAndHeaders(config ? config.axisFrom : {}, fields);\n    // Setting layers for the code\n    layers && resolver.layerConfig(layers);\n    // Set the row and column axes\n    resolver.horizontalAxis(fields.rows, encoders).verticalAxis(fields.columns, encoders);\n    // Getting the placeholders\n    const placeholderInfo = resolver.getMatrices(datamodel, matrixConfig, context.registry(), encoders);\n    context._groupedDataModel = placeholderInfo.dataModels.groupedModel;\n    // Set the selection object\n    context.selection(placeholderInfo.selection);\n\n    // Create retinal axes\n    resolver.createRetinalAxes(placeholderInfo.dataModels.parentModel.getFieldsConfig(), retinalConfig,\n            encoders);\n\n    // Domains are evaluated for each of the axes for commonality\n    resolver.setDomains(matrixConfig, placeholderInfo.dataModels, encoders);\n\n    // Create matrix instances\n    setMatrixInstances(context, placeholderInfo);\n\n    // Prepare corner matrices\n    context.cornerMatrices(resolver.createHeaders(placeholderInfo, fields, config));\n\n    // Set placeholder information\n    context.placeholderInfo(placeholderInfo);\n\n    context._composition.axes = resolver.axes();\n    context.metaData({\n        border: getBorders(placeholderInfo, encoders.simpleEncoder)\n    });\n\n    resolver.encoder().unionUnitDomains(context);\n\n    registerDomainChangeListener(context);\n    return context;\n};\n","import { STATE_NAMESPACES } from 'muze-utils';\n\nexport const setupChangeListeners = (context) => {\n    const store = context.store();\n\n    store.registerChangeListener([`${STATE_NAMESPACES.GROUP_GLOBAL_NAMESPACE}.domain.x`], () => {\n        const groupAxes = context.resolver().axes();\n        groupAxes.x.forEach(axes => axes.forEach((axis) => {\n            axis.render();\n        }));\n    });\n\n    store.registerChangeListener([`${STATE_NAMESPACES.GROUP_GLOBAL_NAMESPACE}.domain.y`], () => {\n        const groupAxes = context.resolver().axes();\n        groupAxes.y.forEach(axes => axes.forEach((axis) => {\n            axis.render();\n        }));\n    });\n};\n\nexport const registerDomainChangeListener = (context) => {\n    const store = context.store();\n    store.registerChangeListener([`${STATE_NAMESPACES.UNIT_GLOBAL_NAMESPACE}.domain`], () => {\n        context.resolver().encoder().unionUnitDomains(context);\n    }, false, {\n        namespace: 'group',\n        key: 'unionDomain'\n    });\n};\n\nexport const unsubscribeChangeListeners = (context) => {\n    context.store().unsubscribe({\n        namespace: 'group',\n        key: 'unionDomain'\n    });\n};\n","import { ROWS, COLUMNS, COLOR, SHAPE, SIZE, DETAIL, LAYERS, TRANSFORM, CONFIG } from '../enums/constants';\n\nexport const PROPS = {\n    alias: {},\n    data: {},\n    cornerMatrices: {\n        defaultValue: {\n            topLeft: [],\n            topRight: [],\n            bottomLeft: [],\n            bottomRight: []\n        }\n    },\n    groupType: {},\n\n    metaData: {\n        defaultValue: {\n            border: {}\n        }\n    },\n    placeholderInfo: {\n        defaultValue: {}\n    },\n    resolver: {},\n    valueParser: {\n        defaultValue: val => val\n    },\n    registry: {\n        sanitization: (context, value) => {\n            if (context.resolver) {\n                context.resolver().registry(value.cellRegistry);\n            }\n            return value;\n        }\n    },\n    selection: {},\n    [CONFIG]: {},\n    [ROWS]: {},\n    [COLUMNS]: {},\n    [COLOR]: {},\n    [SHAPE]: {},\n    [SIZE]: {},\n    [DETAIL]: {},\n    [LAYERS]: {},\n    [TRANSFORM]: {}\n};\n","import { generateGetterSetters } from 'muze-utils';\nimport localOptions from './local-options';\nimport { SimpleGroup } from '../simple-group';\nimport {\n    MatrixResolver,\n    findInGroup\n} from '../group-helper';\nimport { createUnitState, initializeGlobalState, setMatrixInstances, createMatrices, createLayerState } from './helper';\nimport { setupChangeListeners } from './change-listener';\nimport { PROPS } from './props';\nimport {\n    CONFIG,\n    MOUNT,\n    RETINAL,\n    Y\n} from '../enums/constants';\n\n/**\n * VisualGroup is instantiated by canvas for creating {@link VisualUnit} and axes instances.It creates the\n * the matrix of visual units and axes. It also creates the layout instance which manages the allocation\n * of space of matrices.\n *\n * To get instance of visual group,\n * ```\n *      const visualGroup = canvas.composition().visualGroup;\n * ```\n * @public\n *\n * @class VisualGroup\n */\nclass VisualGroup extends SimpleGroup {\n\n    /**\n     * Creates an instance of VisualGroup. Requires dependencies and other registry options for placeholders\n     * and layers that create individual units.\n     *\n     * @param {Object} registry Key value pair of compostions for the group\n     * @param {Object} dependencies Dependencies needed to run the group\n     * @memberof VisualGroup\n     */\n    constructor (registry, dependencies) {\n        super();\n\n        const {\n            componentSubRegistry\n        } = registry;\n\n        this._dependencies = dependencies;\n        // Generate getter/setter methods for all properties of the class\n        // One can get each property by calling the method and can set it\n        // by passing paramaters for the same. Thus, one can chain setter\n        // getter methods.\n        generateGetterSetters(this, PROPS);\n        generateGetterSetters(this, localOptions);\n        // Populate the store with default values\n        // initialize group compositions\n        this._composition = {};\n        // store reference to data\n        this._data = [];\n        // store reference to mountpoint\n        this._mount = null;\n        // selection object that takes care of updating of components\n        this._selection = {};\n        // Create instance of matrix resolver\n        this.resolver(new MatrixResolver(this._dependencies));\n        // matrix instance store each of the matrices\n        setMatrixInstances(this, {});\n         // Getting indiviual registered items\n        this.registry({\n            layerRegistry: componentSubRegistry.layerRegistry.get(),\n            cellRegistry: componentSubRegistry.cellRegistry.get()\n        });\n    }\n\n    static getState () {\n        return [{\n            domain: {\n                x: {},\n                y: {},\n                radius: {},\n                angle: {},\n                angle0: {}\n            }\n        }, {}];\n    }\n\n    store (...params) {\n        if (params.length) {\n            this._store = params[0];\n            initializeGlobalState(this);\n            createUnitState(this);\n            createLayerState(this);\n            // Register listeners\n            setupChangeListeners(this);\n            return this;\n        }\n        return this._store;\n    }\n\n    /**\n     * Return the instances of matrices created by the visual group.\n     *\n     * @return {Object} Instance of matrices.\n     */\n    matrixInstance (...matrices) {\n        if (matrices.length) {\n            return this;\n        }\n        return this.composition().matrices;\n    }\n\n    /**\n     * Returns the composition of visual group.\n     *\n     * @public\n     *\n     * @return {Object} Composition of visual group. It contains instance of matrices {@link ValueMatrix}\n     * and instances of axis.\n     * ```\n     *          {\n     *              matrices: {\n     *                  value: // Instance of center value matrix.\n     *                  left: // Instance of left value matrix\n     *                  right: // Instance of right value matrix\n     *                  bottom: // Instance of bottom value matrix\n     *                  top: // Instance of top value matrix.\n     *              },\n     *              axes: {\n     *                  x: // Array of x axis.\n     *                  y: // Array of y axis\n     *                  color: // Array of color axis\n     *                  shape: // Array of shape axis\n     *                  size: // Array of size axis.\n     *              }\n     *          }\n     * ```\n     */\n    composition (...params) {\n        if (params.length) {\n            return this;\n        }\n        return this._composition;\n    }\n\n    /**\n     * Locks the model to prevent change listeners to be triggered until unlocked\n     *\n     * @return {Object} Instance of class VisualGroup\n     * @memberof VisualGroup\n     */\n    lockModel () {\n        this.store().model.lock();\n        return this;\n    }\n\n    /**\n     * Unlocks the model so that all change listeners can be triggered\n     *\n     * @return {Object} Instance of class VisualGroup\n     */\n    unlockModel () {\n        this.store().model.unlock();\n        return this;\n    }\n\n    /**\n     * Returns the channel name of the variable. Channels are rows, columns, color, shape and size.\n     *\n     * @public\n     * @param {string} variable Name of the variable.\n     *\n     * @return {string} Name of the channel.\n     */\n    where (variable) {\n        return findInGroup(variable, this.resolver().getAllFields());\n    }\n\n    /**\n     * Gets the axis instances of the visual group based on the given axis type.\n     *\n     * @public\n     * @param {string} type Type of axis. X,Y or retinal axes.\n     *\n     * @return {Array} Array of axis instances.\n     */\n    getAxes (type) {\n        if (type === RETINAL) {\n            return this.resolver().getRetinalAxes();\n        }\n        return this.resolver().getSimpleAxes(type);\n    }\n\n    /**\n     * Returns the instances of cells based on the given type. Type can be given as `row' or `col`.\n     *\n     * @public\n     * @return {Array} Two dimensional array of cells.\n     */\n    getCells (type) {\n        return this.resolver()[`${type}Cells`]();\n    }\n\n    getFieldsFromChannel (channel) {\n        const {\n            rowProjections,\n            colProjections\n        } = this.resolver().getAllFields();\n        return channel === Y ? rowProjections : colProjections;\n    }\n\n    getCellsByFacetKey (facetKey) {\n        const resolver = this.resolver();\n        const cells = resolver.rowCells()[facetKey] || resolver.colCells()[facetKey] || [];\n        return cells;\n    }\n\n    getAxesByFacetKey (axisType, facetKey) {\n        const resolver = this.resolver();\n        const cells = resolver.rowCells()[facetKey] || resolver.colCells()[facetKey];\n        const axes = cells[0].valueOf().axes()[axisType] || [];\n\n        return axes;\n    }\n\n    /**\n     * This method is used to return a serialized representation of the instance's properties.\n     *\n     * @return {Object} Object with config proprties.\n     * @memberof VisualGroup\n     */\n    serialize () {\n        const store = this.store();\n\n        return {\n            [CONFIG]: store.get(CONFIG),\n            [MOUNT]: store.get(MOUNT)\n        };\n    }\n\n    /**\n     * Returns the grouped datamodel prepared by visual group. If there is no group by performed, then it returns the\n     * original data model passed to visual group.\n     *\n     * @return {DataModel} Grouped data model.\n     */\n    getGroupByData () {\n        return this._groupedDataModel;\n    }\n\n    createMatrices () {\n        createMatrices(this);\n    }\n}\n\nexport default VisualGroup;\n","import { PersistentBehaviour, SELECTION } from '@chartshq/muze-firebolt';\n\nexport default class SelectBehaviour extends PersistentBehaviour {\n    static formalName () {\n        return 'select';\n    }\n\n    setSelectionSet (addSet, selectionSet) {\n        if (addSet === null) {\n            selectionSet.reset();\n        } else if (addSet.length) {\n            // new add set\n            const existingRemoveSet = addSet.filter(d => selectionSet._set[d] === SELECTION.SELECTION_OLD_EXIT\n                || selectionSet._set[d] === SELECTION.SELECTION_NEW_EXIT);\n                // existing add set\n            if (existingRemoveSet.length) {\n                selectionSet.updateEntry();\n                selectionSet.add(existingRemoveSet);\n            } else {\n                selectionSet.updateExit();\n                selectionSet.remove(addSet);\n            }\n            const { exitSet } = selectionSet.getSets();\n            const mergedExitSet = [...new Set(exitSet[1]), ...new Set(exitSet[0])];\n            const completeSetCount = selectionSet.getCompleteSet().length;\n            if (exitSet[1].length !== completeSetCount && mergedExitSet.length === completeSetCount) {\n                selectionSet.reset();\n            }\n        } else {\n            selectionSet.remove(selectionSet.getCompleteSet());\n        }\n        return this;\n    }\n}\n","import { BEHAVIOURS, ACTIONS } from '@chartshq/muze-firebolt';\n\nconst CLASSPREFIX = 'muze';\n\nexport const actionBehaviourMap = {\n    [ACTIONS.DRAG]: {\n        target: `.${CLASSPREFIX}-gradient-rect`,\n        behaviours: [BEHAVIOURS.BRUSH]\n    },\n    [ACTIONS.HOVER]: {\n        target: [`.${CLASSPREFIX}-legend-columns`],\n        behaviours: [BEHAVIOURS.HIGHLIGHT]\n    },\n    [ACTIONS.CLICK]: {\n        target: [`.${CLASSPREFIX}-legend-columns`],\n        behaviours: [BEHAVIOURS.SELECT]\n    }\n};\n\nexport const propagationBehaviourMap = {\n    [BEHAVIOURS.SELECT]: BEHAVIOURS.FILTER,\n    [BEHAVIOURS.BRUSH]: BEHAVIOURS.HIGHLIGHT\n};\n","import * as BEHAVIOURS from '../enums/behaviours';\nimport * as sideEffects from '../enums/side-effects';\n\nexport const behaviourEffectMap = {\n    [BEHAVIOURS.BRUSH]: [sideEffects.SELECTIONBOX, {\n        name: sideEffects.Highlighter,\n        options: {\n            strategy: 'fade'\n        }\n    }],\n    [BEHAVIOURS.HIGHLIGHT]: [sideEffects.Highlighter],\n    select: [{\n        name: sideEffects.Highlighter,\n        options: {\n            strategy: 'fade'\n        }\n    }]\n};\n\nexport const propagationSideEffects = {\n    [BEHAVIOURS.BRUSH]: [{\n        name: sideEffects.Highlighter,\n        options: {\n            strategy: 'fade'\n        }\n    }],\n    [BEHAVIOURS.HIGHLIGHT]: [{\n        name: sideEffects.Highlighter,\n        options: {\n            strategy: 'fade'\n        }\n    }],\n    [BEHAVIOURS.SELECT]: ['filter']\n};\n\n","export const BRUSH = 'brush';\nexport const HIGHLIGHT = 'highlight';\nexport const TOOLTIP = 'tooltip';\nexport const FILTER = 'filter';\nexport const SELECT = 'select';\n\n","export const SELECTIONBOX = 'selectionBox';\nexport const Highlighter = 'highlighter';\n\n","export const CLASSPREFIX = 'muze';\nexport const IDFIELD = '__id__';\nexport const CONFIG = 'config';\nexport const DATAMODEL = 'dataModel';\nexport const AXES = 'axes';\nexport const LAYERDEFS = 'layerDef';\nexport const WIDTH = 'width';\nexport const MAXWIDTH = 'max-width';\nexport const HEIGHT = 'height';\nexport const MOUNTPOINT = 'mountPoint';\nexport const GRIDLINEPARENTGROUPCLASS = 'grid-lines';\nexport const TRANSFORM = 'transform';\nexport const CONSOLIDATED = 'consolidated';\nexport const FRAGMENTED = 'fragmented';\nexport const DEFAULTCOLOR = '#F44336';\nexport const DEFAULTSIZE = 50;\nexport const DEFAULTSHAPE = 'circle';\nexport const STEP = 'step';\nexport const GRADIENT = 'gradient';\nexport const ORDINAL = 'ordinal';\nexport const SCALE_FUNCTIONS = {\n    size: 'getSize',\n    shape: 'getShape',\n    color: 'getColor'\n};\nexport const TOP = 'top';\nexport const LEFT = 'left';\nexport const RIGHT = 'right';\nexport const BOTTOM = 'bottom';\nexport const HORIZONTAL = 'horizontal';\nexport const VERTICAL = 'vertical';\nexport const CENTER = 'center';\nexport const VALUE = 'value';\nexport const PATH = 'path';\nexport const SHAPE = 'shape';\nexport const ICON = 'icon';\nexport const RECT = 'rect';\nexport const START = 'start';\nexport const UPPER = 'upper';\nexport const LOWER = 'lower';\nexport const END = 'end';\nexport const SIZE = 'size';\nexport const DISCRETE = 'discrete';\nexport const MEASURE = 'measure';\n\n","import { assembleModelFromIdentifiers, getDataModelFromRange } from 'muze-utils';\nimport { propagationBehaviourMap } from './action-behaviour-map';\nimport { propagationSideEffects } from './behaviour-effect-map';\nimport { STEP, GRADIENT, DISCRETE, MEASURE } from '../enums/constants';\n\nexport const propagate = (firebolt, action, selectionSet, config = {}) => {\n    let propagationData;\n    const type = firebolt.context.constructor.type();\n    const payload = config.payload;\n    const data = firebolt.context.data();\n    const metaData = firebolt.context.metaData();\n    const fieldType = metaData.getData().schema[0].type;\n\n    const propPayload = {};\n    const sourceId = firebolt.context._id;\n    propPayload.action = propagationBehaviourMap[action] || action;\n    propPayload.sideEffects = propagationSideEffects[action];\n    propPayload.sourceCanvas = firebolt.context.canvasAlias();\n    const isMutableAction = firebolt._actions.behavioural[propPayload.action].constructor.mutates();\n    if (payload.criteria === null) {\n        propagationData = null;\n    } else {\n        const entrySet = selectionSet.mergedEnter;\n        let values = data.filter(d => entrySet.uids.indexOf(d.id) !== -1).map(d => d.rawVal);\n        if (type === STEP || (type === DISCRETE && fieldType === MEASURE)) {\n            const field = Object.keys(payload.criteria || {})[0];\n            values = data.filter(d => entrySet.uids.indexOf(d.id) !== -1).map(d => d.range);\n            propagationData = values.length ? metaData.select((fields) => {\n                let check = false;\n                for (let i = 0; i < values.length; i++) {\n                    check = fields[field].value >= values[i][0] && fields[field].value <= values[i][1];\n                    if (check === true) {\n                        break;\n                    }\n                }\n                return check;\n            }, {\n                saveChild: false\n            }) : null;\n        } else if (type === GRADIENT) {\n            propagationData = getDataModelFromRange(metaData, payload.criteria);\n        } else if (values.length) {\n            propagationData = assembleModelFromIdentifiers(metaData, [payload.criteria[0], ...values.map(d => [d])]);\n        } else {\n            propPayload.criteria = null;\n            propagationData = metaData.select(() => true, {\n                saveChild: false\n            });\n        }\n    }\n\n    let propagateInterpolatedValues = false;\n\n    if (propagationData) {\n        const schema = propagationData.getSchema();\n        propagateInterpolatedValues = schema.every(d => d.type === MEASURE);\n    }\n\n    const propConfig = {\n        sourceId: `legend-${sourceId}`,\n        payload: propPayload,\n        criteria: propPayload.criteria === null ? null : propagationData,\n        isMutableAction,\n        propagateInterpolatedValues,\n        action: propPayload.action\n    };\n\n    metaData.propagate(propagationData, propConfig, true);\n};\n","import { Firebolt } from '@chartshq/muze-firebolt';\nimport { propagate } from './helper';\nimport { STEP, GRADIENT } from '../enums/constants';\n\n/**\n * This class manages the interactions of legend.\n * @export\n * @class LegendFireBolt\n * @extends {Firebolt}\n */\nexport class LegendFireBolt extends Firebolt {\n    constructor (...params) {\n        super(...params);\n        this.initializeSideEffects();\n    }\n\n    getPropagationSelectionSet (selectionSet) {\n        return selectionSet[0];\n    }\n\n    propagate (behaviourName, payload, selectionSet) {\n        propagate(this, behaviourName, selectionSet, {\n            payload\n        });\n    }\n\n    getAddSetFromCriteria (criteria) {\n        let values;\n        let uniqueIds;\n        const type = this.context.constructor.type();\n\n        if (criteria === null) {\n            uniqueIds = null;\n        } else if (type === STEP) {\n            values = Object.values(criteria);\n            uniqueIds = this.context.data().filter(d => values.indexOf(d.range) !== -1).map(d => d.id);\n        } else if (type === GRADIENT) {\n            uniqueIds = [];\n        } else {\n            values = criteria[1];\n            if (values) {\n                uniqueIds = this.context.data().filter(d => values.indexOf(d.rawVal) !== -1).map(d => d.id);\n            } else {\n                values = Object.values(criteria);\n                uniqueIds = this.context.data().filter(d => values.indexOf(d.range) !== -1).map(d => d.id);\n            }\n        }\n        return {\n            uids: uniqueIds,\n            model: null\n        };\n    }\n\n    getFullData () {\n        return null;\n    }\n}\n","import {\n    getEvent,\n    getD3Drag\n } from 'muze-utils';\n\n/**\n * Adds dragging action to the target element.\n * @param {firebolt} firebolt firebolt\n * @param {SVGElement} targetEl Element on which brushing action is needed.\n * @param {Array} behaviours Array of behaviours\n */\n/* istanbul ignore next */ const drag = firebolt => (targetEl, behaviours) => {\n    let startPos = {};\n    let endPos = {};\n    let payload;\n    const d3Drag = getD3Drag();\n    const context = firebolt.context;\n    const boundingBox = context.measurement().gradientDimensions;\n    const axisType = context.config().align === 'horizontal' ? 'x' : 'y';\n    const axisScale = context.axis().source().scale();\n    const rangeShifter = axisScale.range()[axisType === 'x' ? 0 : 1];\n\n    targetEl.call(d3Drag().on('start', () => {\n        const event = getEvent();\n        startPos = {\n            x: event.x,\n            y: event.y\n        };\n    }).on('drag', () => {\n        const event = getEvent();\n\n        endPos = {\n            x: event.x,\n            y: event.y\n        };\n        endPos.x = Math.max(0, Math.min(endPos.x, boundingBox.width));\n        endPos.y = Math.max(0, Math.min(endPos.y, boundingBox.height));\n\n        payload = {\n            criteria: {\n                [context.fieldName()]: [axisScale.invert(startPos[axisType] + rangeShifter * 2),\n                    axisScale.invert(endPos[axisType] + rangeShifter * 2)].sort((a, b) => a - b)\n            }\n        };\n        behaviours.forEach(behaviour => firebolt.dispatchBehaviour(behaviour, payload));\n    }).on('end', () => {\n        const event = getEvent();\n\n        endPos = {\n            x: event.x,\n            y: event.y\n        };\n        endPos.x = Math.max(0, Math.min(endPos.x, boundingBox.width));\n        endPos.y = Math.max(0, Math.min(endPos.y, boundingBox.height));\n        if (startPos[axisType] === endPos[axisType]) {\n            payload = {\n                criteria: {}\n            };\n        } else {\n            payload = {\n                criteria: {\n                    [context.fieldName()]: [axisScale.invert(startPos[axisType] + rangeShifter * 2),\n                        axisScale.invert(endPos[axisType] + rangeShifter * 2)].sort((a, b) => a - b)\n                }\n            };\n        }\n        behaviours.forEach(behaviour => firebolt.dispatchBehaviour(behaviour, payload));\n    }));\n};\n\nexport default drag;\n","import { getEvent } from 'muze-utils';\n\n/**\n * Adds mouse interactions to target element.\n * @param {Firebolt} Firebolt instance of firebolt.\n * @param {SVGElement} targetEl Element on which the event listeners will be attached.\n * @param {Array} behaviours Array of behaviours\n */\n/* istanbul ignore next */ const hover = firebolt => (targetEl, behaviours) => {\n    const dispatchBehaviour = function (args) {\n        const event = getEvent();\n        const payload = {\n            criteria: firebolt.context.getCriteriaFromData(args)\n        };\n        behaviours.forEach(behaviour => firebolt.dispatchBehaviour(behaviour, payload));\n        event.stopPropagation();\n    };\n\n    targetEl.on('mouseover', dispatchBehaviour)\n                    .on('mousemove', dispatchBehaviour)\n                    .on('mouseout', () => {\n                        const event = getEvent();\n                        behaviours.forEach(behaviour => firebolt.dispatchBehaviour(behaviour, {\n                            criteria: null\n                        }));\n                        event.stopPropagation();\n                    });\n};\n\nexport default hover;\n","/**\n * Adds mouse interactions to target element.\n * @param {VisualUnit} instance instance of visual unit.\n * @param {SVGElement} targetEl Element on which the event listeners will be attached.\n * @param {Array} behaviours Array of behaviours\n */\nconst click = firebolt => (targetEl, behaviours) => {\n    const dispatchBehaviour = function (args) {\n        const payload = {\n            criteria: firebolt.context.getCriteriaFromData(args)\n        };\n        behaviours.forEach(behaviour => firebolt.dispatchBehaviour(behaviour, payload));\n    };\n\n    targetEl.on('click', dispatchBehaviour);\n};\n\nexport default click;\n","import drag from './drag';\nimport hover from './hover';\nimport click from './click';\nimport * as ACTIONNAMES from '../../enums/actions';\n\nexport const physicalActions = {\n    [ACTIONNAMES.DRAG]: drag,\n    [ACTIONNAMES.HOVER]: hover,\n    [ACTIONNAMES.CLICK]: click\n};\n\n","export const DRAG = 'drag';\nexport const HOVER = 'hover';\nexport const SELECTIONDRAG = 'selectiondrag';\nexport const CLICK = 'click';\n","import {\n    getMousePos,\n    getEvent,\n    getD3Drag\n } from 'muze-utils';\nimport { HEIGHT, WIDTH, HORIZONTAL } from '../../enums/constants';\n\nconst getSelectionCriteria = (subject, axis, measures) => {\n    let criteria = [];\n    const {\n        axisScale,\n        axisType\n    } = axis;\n    const {\n        startPos,\n        endPos,\n        selectionBoxMeasure,\n        drawingInfMeasure,\n        offset\n    } = measures;\n    const subjectStartPoint = subject[axisType];\n\n    if (startPos[axisType] === endPos[axisType]) {\n        criteria = [];\n    } else if (subjectStartPoint + selectionBoxMeasure >= drawingInfMeasure + offset) {\n        criteria = [axisScale.invert(drawingInfMeasure + offset - selectionBoxMeasure),\n            axisScale.invert(drawingInfMeasure + offset)];\n    } else if (subjectStartPoint - offset < offset) {\n        criteria = [axisScale.invert(offset * 2), axisScale.invert(selectionBoxMeasure + offset * 2)];\n    } else {\n        criteria = [axisScale.invert(subjectStartPoint), axisScale.invert(subjectStartPoint + selectionBoxMeasure)];\n    }\n    axisType === 'x' ? criteria : criteria.reverse();\n    return criteria;\n};\n\nexport const selectionBoxDrag = firebolt => (targetEl, behaviours) => {\n    let startPos = {};\n    let payload;\n    const endPos = {};\n    const d3Drag = getD3Drag();\n    const context = firebolt.context;\n    const axisScale = context.axis().source().scale();\n    const axisType = context.config().align === HORIZONTAL ? 'x' : 'y';\n    const drawingInfMeasure = context.measurement().gradientDimensions[axisType === 'x' ?\n        WIDTH : HEIGHT];\n    const offset = axisScale.range()[axisType === 'x' ? 0 : 1];\n    const measures = {\n        drawingInfMeasure,\n        offset\n    };\n    let subject = {};\n\n    targetEl.call(d3Drag().on('start', function () {\n        const event = getEvent();\n        startPos = getMousePos(this, event.sourceEvent);\n        subject = event.subject;\n    }).on('drag', () => {\n        const event = getEvent();\n        const selectionBoxMeasure = subject[axisType === 'x' ? WIDTH : HEIGHT];\n\n        subject.x += event.dx;\n        subject.y += event.dy;\n\n        measures.selectionBoxMeasure = selectionBoxMeasure;\n        measures.startPos = startPos;\n        measures.endPos = endPos;\n        const criteria = getSelectionCriteria(subject, { axisScale, axisType }, measures);\n\n        payload = {\n            criteria: {\n                [context.fieldName()]: criteria\n            },\n            fadeOut: true\n        };\n        firebolt.dispatchBehaviour(behaviours[0], payload);\n    }).on('end', () => {\n        const event = getEvent();\n        const selectionBoxMeasure = subject[axisType === 'x' ? WIDTH : HEIGHT];\n        measures.selectionBoxMeasure = selectionBoxMeasure;\n        measures.startPos = startPos;\n        measures.endPos = endPos;\n        const criteria = getSelectionCriteria(event, { axisScale, axisType }, measures);\n        payload = {\n            criteria: {\n                [context.fieldName()]: criteria\n            },\n            fadeOut: true,\n            config: {\n                transition: {\n                    duration: 200\n                }\n            }\n        };\n        firebolt.dispatchBehaviour(behaviours[0], payload);\n    }));\n};\n\n","import { makeElement } from 'muze-utils';\nimport { SpawnableSideEffect } from '@chartshq/muze-firebolt';\nimport { CLASSPREFIX, HEIGHT, WIDTH, HORIZONTAL, RECT } from '../../../enums/constants';\nimport { SELECTIONBOX } from '../../../enums/side-effects';\nimport { selectionBoxDrag } from '../../physical/selection-box-drag';\nimport './styles.scss';\n\n/**\n * This class is used to create a selection box which is used by visual unit for brushing and\n * selection in the canvas.\n * @class SelectionBox\n */\n/* istanbul ignore next */ class SelectionBox extends SpawnableSideEffect {\n    static formalName () {\n        return SELECTIONBOX;\n    }\n\n    /**\n     * It returns the default configuration needed by selectionbox.\n     * @return {Object} Default configuration of the selection box.\n     */\n    static defaultConfig () {\n        return {\n            className: 'legend-selection-box',\n            classPrefix: CLASSPREFIX\n        };\n    }\n\n    /**\n     * Draws the selectionbox with the specified dimensions.\n     */\n    /* istanbul ignore next */ apply (selectionSet, payload) {\n        let x;\n        let y;\n        let width;\n        let height;\n        const firebolt = this.firebolt;\n        const context = firebolt.context;\n        const config = this.config();\n        const axis = context.axis().source();\n        const className = `${config.classPrefix}-${config.className}`;\n\n        const domain = payload.criteria[firebolt.context.fieldName()];\n        const axisScale = axis.scale();\n        const range = domain ? [axis.getScaleValue(domain[0]), axis.getScaleValue(domain[1])] : [];\n\n        const axisType = context.config().align === HORIZONTAL ? 'x' : 'y';\n\n        const gradientDimension = firebolt.context.measurement().gradientDimensions[axisType === 'x' ?\n            HEIGHT : WIDTH];\n\n        const rangeShifter = axisScale.range()[axisType === 'x' ? 0 : 1];\n        const legendGradContainer = context.getDrawingContext().svgContainer;\n        const legendSelGroup = makeElement(legendGradContainer, 'g', [1], `${config.classPrefix}-selection-box-group`);\n\n        if (firebolt.context.config().align === HORIZONTAL) {\n            x = range[0] - rangeShifter || 0;\n            y = 0;\n            width = range[1] - range[0] || 0;\n            height = gradientDimension;\n        } else {\n            x = 0;\n            y = range[1] - rangeShifter || 0;\n            height = range[0] - range[1] || 0;\n            width = gradientDimension;\n        }\n        const enterFn = function (el) {\n            selectionBoxDrag(firebolt)(el, ['brush']);\n        };\n        const selBox = makeElement(legendSelGroup, RECT, [{ domain, x, y, width, height }], className,\n            { enter: enterFn });\n        selBox.attr('y', y)\n                        .attr('x', x)\n                        .attr(WIDTH, width)\n                        .attr(HEIGHT, height);\n    }\n}\n\nexport default SelectionBox;\n\n","import { selectElement } from 'muze-utils';\n\nexport const strategies = (firebolt) => {\n    const context = firebolt.context;\n    const classed = (set, className, change) => {\n        const classPrefix = context.config().classPrefix;\n        selectElement(context.mount())\n                        .selectAll(`.${classPrefix}-legend-columns`)\n                        .filter(d => set.uids.indexOf(d.id) !== -1)\n                        .selectAll('div')\n                        .classed(className, change);\n    };\n\n    return {\n        fade: (set, config = {}) => {\n            const classPrefix = context.config().classPrefix;\n            if (!set.mergedEnter.length && !set.mergedExit.length) {\n                classed(set.completeSet, config.className || `${classPrefix}-legend-fadeout`, false);\n            } else {\n                classed(set.mergedExit, config.className || `${classPrefix}-legend-brighten`, false);\n                classed(set.mergedExit, config.className || `${classPrefix}-legend-fadeout`, true);\n                classed(set.mergedEnter, config.className || `${classPrefix}-legend-fadeout`, false);\n            }\n        },\n        brighten: (set, config = {}) => {\n            const classPrefix = context.config().classPrefix;\n            if (!set.mergedEnter.length && !set.mergedExit.length) {\n                classed(set.completeSet, config.className || `${classPrefix}-legend-brighten`, false);\n            } else {\n                classed(set.mergedEnter, config.className || `${classPrefix}-legend-brighten`, true);\n                classed(set.mergedExit, config.className || `${classPrefix}-legend-brighten`, false);\n            }\n        }\n    };\n};\n","import { GenericSideEffect } from '@chartshq/muze-firebolt';\nimport { strategies } from './strategies';\nimport { Highlighter } from '../../../enums/side-effects';\n\nexport default class LegendHighlighter extends GenericSideEffect {\n    constructor (...params) {\n        super(...params);\n        this._strategies = strategies(this.firebolt);\n        this._strategy = 'brighten';\n    }\n\n    static formalName () {\n        return Highlighter;\n    }\n\n    apply (selectionSet, payload, options = {}) {\n        const strategy = this._strategies[options.strategy || this._strategy];\n\n        strategy(selectionSet, this);\n    }\n}\n","import { mergeRecursive } from 'muze-utils';\n\nexport const PROPS = {\n    config: {\n        sanitization: (context, value) => mergeRecursive(context._config || {}, value)\n    },\n    data: {},\n    fieldName: {},\n    legendContainer: {},\n    measurement: {\n        sanitization: (context, value) => {\n            const measurement = mergeRecursive(context._measurement, value);\n            ['padding', 'border', 'margin'].forEach((space) => {\n                measurement[space] = Math.min(measurement[space] > 0 ? measurement[space] : 0,\n                     measurement.maxWidth * 0.1, measurement.maxHeight * 0.1);\n            });\n            return measurement;\n        }\n    },\n    logicalSpace: {},\n    metaData: {},\n    range: {\n        sanitization: (context, value) => {\n            context.scale().range(value);\n            context.resetLogicalSpace();\n            context.store().commit('range', value);\n            return value;\n        }\n    },\n    scale: {},\n    smartTicks: {},\n    store: {},\n    title: {\n        sanitization: (context, value) => mergeRecursive(context._title || {}, value)\n    },\n    labelManager: {},\n    minTickDistance: {},\n    valueParser: {\n        defaultValue: val => val\n    }\n};\n","import { getSymbol } from 'muze-utils';\nimport {\n    CENTER,\n    LEFT,\n    RIGHT\n} from '../enums/constants';\n\nexport const ALIGN = {\n    HORIZONTAL: 'horizontal',\n    VERTICAL: 'vertical'\n};\n\nexport const DEFAULT_MEASUREMENT = {\n    height: 30,\n    width: 30,\n    maxWidth: Infinity,\n    maxHeight: Infinity,\n    padding: 2,\n    margin: 2,\n    border: 1\n};\n\nexport const LEGEND_TITLE = {\n    text: '',\n    orientation: (pos) => {\n        if (pos === LEFT || pos === RIGHT) {\n            return LEFT;\n        } return CENTER;\n    }\n};\n\nexport const DEFAULT_CONFIG = {\n    classPrefix: 'muze',\n    borderStyle: 'solid',\n    borderColor: 'rgba(0,0,0,0)',\n    formatter: {\n        bounds: {\n            lower: 'less than',\n            upper: 'more than'\n        }\n    },\n    item: {\n        text: {\n            orientation: 'right',\n            width: 10,\n            formatter: (val, i, data, context) => context.valueParser()(val)\n        },\n        icon: {\n            className: 'legend-icon',\n            height: 20,\n            width: 20,\n            color: 'rgba(0,0,0,.5)',\n            type: 'square'\n        }\n    }\n};\n\n/**\n * Creates a map of pre defined icons\n *\n * @param {string} icon Accepts a icon name like 'square', 'cross', 'diamond' etc\n * @return {Object} icon object which can be used to draw the icons\n */\nexport const ICON_MAP = (icon) => {\n    if (icon && typeof (icon) === 'string') {\n        return getSymbol(icon);\n    } return icon;\n};\n","import { makeElement, numberInterpolator } from 'muze-utils';\n\nimport {\n    SCALE_FUNCTIONS,\n    WIDTH,\n    HEIGHT,\n    LEFT,\n    RIGHT,\n    TOP,\n    BOTTOM,\n    MAXWIDTH\n} from '../enums/constants';\n\n/**\n *\n *\n * @param {*} scale\n *\n */\nexport const getScaleInfo = (scale) => {\n    const scaleType = scale.constructor.type();\n    const domain = scale.uniqueValues();\n    const steps = scale.config().stops || 1;\n    const scaleFn = SCALE_FUNCTIONS[scaleType];\n\n    return { scaleType, domain, steps, scaleFn };\n};\n\n/**\n * Function to recompute the stops in array in case to left and right alignment of legend.\n *\n * @param  {string} param - parameter to measure\n * @param  {Object} requiredMeasure - required measure parameters\n * @param  {Object} availableMeasure - available meassure parameters\n * @param  {Array} domainForLegend - array\n * @param  {Object} smartLabelCalc - smartLabel Manager\n * @return {Array} - Array\n */\nconst getcomputedArray = (computationhelper, requiredMeasure, availableMeasure, domainForLegend) => {\n    // declaring Current and Next Tick Value variable\n    let currentTickValue;\n    let nextTickValue;\n    const upperBound = domainForLegend[domainForLegend.length - 1];\n    const param = computationhelper.measureParam;\n    const smartLabelCalc = computationhelper.smartLabelCalc;\n\n    // calculating pixel required per Tick Values\n    const pixelPerTick = (availableMeasure[param] / upperBound);\n\n    // checking if available max width is smaller than required width for legend.\n    if (availableMeasure[param] >= requiredMeasure[param]) {\n        return domainForLegend;\n    }\n\n    currentTickValue = (smartLabelCalc.getOriSize((domainForLegend[0]))[param]);\n    for (let i = 1; i < domainForLegend.length - 1; i++) {\n        nextTickValue = Math.floor((currentTickValue / pixelPerTick) + domainForLegend[i - 1]);\n        if (domainForLegend[i] < nextTickValue) {\n            domainForLegend.splice(i, 1);\n            i -= 1;\n        }\n        currentTickValue = (smartLabelCalc.getOriSize((domainForLegend[i]))[param]);\n    }\n    return domainForLegend;\n};\n\n/**\n * function to recompute the Stops Array provided to prevent the Overlapping of values\n * @param  {Array} domainForLegend - Stops Array\n * @param  {Object} scaleParams - Scale Parameters\n * @return {Array} - modified Stops Array\n */\nexport const getInterpolatedArrayData = (domainForLegend, scaleParams) => {\n    // defining param for height/width selector\n    let measureParam;\n\n    // declaring variable for required Width\n    let requiredWidth;\n\n    // declaring variable for required height\n    let requiredHeight;\n\n    // declaring the variable for upperbound\n    let upperBound = domainForLegend[domainForLegend.length - 1];\n\n    // Initializing Minimum Tick Difference Variable and checking if it's less than 1 or not\n    let minTickDiff = Math.ceil(domainForLegend[1] - domainForLegend[0]);\n\n    // calculating max tick difference\n    const maxTickDiff = Math.ceil(upperBound - domainForLegend[0]);\n\n    // gradient Alignment\n    const { alignment } = scaleParams;\n\n    // getting SmartLabel Manager to calculate tick Params\n    const smartLabelCalc = scaleParams.smartLabel;\n\n    // scale Measurements (i.e MaxWidth and MaxHeight available)\n    const availableSpace = scaleParams.measures;\n\n    // getting minimum Tick size (i.e height and width)\n    const minimumTickSize = scaleParams.minTickDistance;\n\n    // getting domain upperbound dimensions\n    const { height: tickDimHeight, width: tickDimWidth } = smartLabelCalc.getOriSize((upperBound));\n\n    /* Checking if UpperBound of Domain is Floating or Not.\n    In case of floating constricting it to 2 decimals after point. */\n    if (!Number.isInteger(upperBound)) {\n        upperBound = ((upperBound).toFixed(2));\n    }\n\n    // Calculating minimum tick difference\n    minTickDiff = minTickDiff < 1 ? 1 : minTickDiff;\n\n    // required width to render legend\n    requiredWidth = (Math.abs(maxTickDiff) / Math.abs(minTickDiff)) * (tickDimWidth + (minimumTickSize.width));\n\n    requiredWidth -= Math.abs(maxTickDiff);\n\n    // require height to render legend\n    requiredHeight = (Math.abs(maxTickDiff) / Math.abs(minTickDiff)) * tickDimHeight;\n\n    requiredHeight -= Math.abs(maxTickDiff);\n\n    // checking the alignment of legend\n    if (alignment === TOP || alignment === BOTTOM) {\n        measureParam = WIDTH;\n    } else {\n        measureParam = HEIGHT;\n    }\n\n    // calculating computed array\n    domainForLegend = getcomputedArray({\n        smartLabelCalc,\n        measureParam\n    }, {\n        height: requiredHeight,\n        width: requiredWidth\n    }, {\n        height: availableSpace.maxHeight,\n        width: availableSpace.maxWidth\n    }, domainForLegend);\n\n    return domainForLegend;\n};\n\n/**\n * function to recalculate steps on providing more number of stops than canvas can accomodate.\n * @param  {Array} domain - Array\n * @param  {Array} steps - Array\n * @param  {Object} scaleParams - Scale Parameters\n * @return {Array} - recalculated Step Array\n */\nexport const getInterpolatedData = (domain, steps, scaleParams) => {\n    // declaring recomputeSteps Variable\n    let recomputeSteps = 0;\n\n    const getTickMeasure = scaleParams.smartLabel;\n    const { maxWidth, maxHeight } = scaleParams.measures;\n    const { alignment } = scaleParams;\n    const domainForLegend = [];\n    const interpolatedFn = numberInterpolator()(domain[0], domain[1]);\n\n    // getting tick measure(i.e height and width)\n    const tickValue = getTickMeasure.getOriSize(domain[1].toFixed(2));\n\n    // To round the floating values to Integer and checking if value is 1.\n    steps = Math.round(steps);\n    steps = steps < 1 ? (steps + 1) : steps;\n\n    // checking alignment of the Axis\n    if (alignment === TOP || alignment === BOTTOM) {\n        recomputeSteps = Math.floor(maxWidth / (tickValue.width));\n    } else {\n        recomputeSteps = Math.floor(maxHeight / (tickValue.height));\n    }\n    steps = Math.min(steps, recomputeSteps);\n\n    // scaling the axis based on steps provided\n    for (let i = 0; i <= steps; i++) {\n        domainForLegend[i] = interpolatedFn(i / steps);\n    }\n    return domainForLegend;\n};\n\n/**\n *\n *\n * @param {*} container\n * @param {*} text\n * @param {*} measurement\n * @param {*} classPrefix\n */\nexport const titleCreator = (container, title, measurement, config) => {\n    const titleWidth = Math.min(measurement.maxWidth, measurement.width);\n\n    const titleContainer = makeElement(container, 'table', [1], `${config.classPrefix}-legend-title`)\n            .style(WIDTH, `${titleWidth}px`)\n            .style(HEIGHT, `${measurement.height}px`)\n            .style('border-bottom', `${measurement.border}px ${config.borderStyle} ${config.borderColor}`)\n            .style('text-align', title.orientation instanceof Function ?\n            title.orientation(config.position) : title.orientation);\n    return makeElement(titleContainer, 'td', [1], `${config.classPrefix}-legend-title-text`)\n                    .style(WIDTH, `${titleWidth}px`)\n                    .style(MAXWIDTH, `${titleWidth}px`)\n                    .style(HEIGHT, '100%')\n                    .style('line-height', 1)\n                    .style('padding', `${measurement.padding}px`)\n                    .text(title.text)\n                    .style('overflow-x', 'scroll')\n                    .node();\n};\n\n/**\n *\n *\n * @param {*} data\n * @param {*} prop\n * @param {*} labelManager\n *\n */\nexport const getMaxMeasures = (data, prop, labelManager) => {\n    let maxHeight = -Infinity;\n    let maxWidth = -Infinity;\n\n    data.forEach((item) => {\n        const value = prop ? item[prop] : item;\n        const space = labelManager.getOriSize(value);\n        maxHeight = Math.max(space.height + 2, maxHeight);\n        maxWidth = Math.max(space.width + 2, maxWidth);\n    });\n\n    return { height: maxHeight, width: maxWidth };\n};\n\n/**\n *\n *\n * @param {*} data\n * @param {*} prop\n * @param {*} labelManager\n *\n */\nexport const getItemMeasures = (context, prop, formatter) => {\n    const space = [];\n    const data = context.data();\n    const labelManager = context._labelManager;\n\n    data.forEach((item, index) => {\n        const value = prop ? item[prop] : item;\n        const { height, width } = labelManager.getOriSize(formatter(value, index, data, context));\n        space[index] = { height: height + 1, width: width + 1 };\n    });\n    return space;\n};\n\n/**\n *\n *\n * @param {*} textOrientation\n * @param {*} effPadding\n * @param {*} titleSpace\n *\n * @memberof Legend\n */\nexport const computeItemSpaces = (config, measures, data) => {\n    let totalHeight = 0;\n    let totalWidth = 0;\n    let maxItemSpaces = {\n        width: 0, height: 0\n    };\n    const {\n        effPadding,\n        titleWidth,\n        labelSpaces,\n        titleHeight,\n        maxWidth\n    } = measures;\n    const {\n        item,\n        align\n    } = config;\n    const {\n        icon,\n        text\n    } = item;\n    const textOrientation = text.orientation;\n    const itemSpaces = [];\n    const iconSpaces = [];\n    let maxIconWidth = 0;\n    labelSpaces.forEach((labelSpace, i) => {\n        const itemSpace = { width: 0, height: 0 };\n        const iconSpace = { width: 0, height: 0 };\n        const datum = data[i] || {};\n            // Compute each legend item height/width\n        if (textOrientation === LEFT || textOrientation === RIGHT) {\n            // Get label, icon and item widths\n            labelSpace.width += effPadding;\n            iconSpace.width = (datum.size ? 2 * Math.sqrt(datum.size / Math.PI) : icon.width) + effPadding;\n            maxIconWidth = Math.max(iconSpace.width, maxIconWidth);\n            itemSpace.width = labelSpace.width + maxIconWidth;\n\n            // Get label, icon and item heights\n            labelSpace.height = Math.max(labelSpace.height, icon.height) + effPadding;\n            iconSpace.height = labelSpace.height;\n            itemSpace.height = labelSpace.height;\n        } else {\n            // Get label, icon and item widths\n            labelSpace.width = Math.max(labelSpace.width, datum.size ? 2 * Math.sqrt(datum.size / Math.PI)\n            : icon.width) + effPadding;\n            iconSpace.width = labelSpace.width;\n            itemSpace.width = labelSpace.width;\n            maxIconWidth = Math.max(iconSpace.width, maxIconWidth);\n\n            // Get label, icon and item heights\n            labelSpace.height += effPadding;\n            iconSpace.height = icon.height + effPadding;\n            itemSpace.height = labelSpace.height + iconSpace.height;\n        }\n        // Compute height and width of legend for each alignment\n        if (align === 'horizontal') {\n            totalHeight = Math.max(totalHeight, itemSpace.height);\n        } else {\n            totalHeight += itemSpace.height;\n            totalWidth = Math.max(totalWidth, itemSpace.width, titleWidth);\n        }\n        maxItemSpaces = {\n            width: Math.max(itemSpace.width, maxItemSpaces.width),\n            height: Math.max(itemSpace.height, maxItemSpaces.height)\n        };\n        itemSpaces.push(itemSpace);\n        iconSpaces.push(iconSpace);\n    });\n    itemSpaces.forEach((itemSpace, i) => {\n        if (align === 'horizontal') {\n            itemSpace.height = totalHeight;\n            iconSpaces[i].width = maxIconWidth;\n            if (textOrientation === LEFT || textOrientation === RIGHT) {\n                labelSpaces[i].height = totalHeight;\n                iconSpaces[i].height = totalHeight;\n                itemSpaces[i].width = labelSpaces[i].width + maxIconWidth;\n            } else {\n                labelSpaces[i].width = maxIconWidth;\n                itemSpaces[i].width = maxIconWidth;\n                labelSpaces[i].width = maxIconWidth;\n            }\n            totalWidth = Math.max(totalWidth + itemSpaces[i].width);\n        } else {\n            itemSpace.width = Math.max(totalWidth, maxWidth);\n            if (textOrientation === TOP || textOrientation === BOTTOM) {\n                labelSpaces[i].width = totalWidth;\n                iconSpaces[i].width = totalWidth;\n                maxIconWidth = totalWidth;\n            } else {\n                const labelWidth = labelSpaces[i].width;\n                const newLabelWidth = (maxItemSpaces.width - maxIconWidth);\n                iconSpaces[i].width = maxIconWidth;\n                itemSpaces[i].width = labelSpaces[i].width + maxIconWidth;\n                labelSpaces[i].width = Math.max(labelWidth, newLabelWidth);\n                totalWidth = Math.max(totalWidth, itemSpace.width);\n            }\n        }\n    });\n    totalWidth = Math.ceil(Math.max(totalWidth, titleWidth)) + effPadding;\n    totalHeight += titleHeight + effPadding;\n    totalHeight = Math.ceil(totalHeight);\n    return { totalHeight, totalWidth, itemSpaces, iconSpaces, maxItemSpaces, maxIconWidth };\n};\n\n/**\n *\n *\n * @param {*} type\n * @param {*} scaleInfo\n * @param {*} domainInfo\n *\n */\nexport const getDomainBounds = (type, scaleInfo, domainInfo) => {\n    const {\n        scaleFn,\n        scaleType,\n        scale\n    } = scaleInfo;\n    const {\n        domain,\n        domainBounds,\n        domainLeg,\n        steps\n    } = domainInfo;\n    const ele = domain[type === 'lower' ? 0 : domain.length - 1];\n    const step = steps[type === 'lower' ? 0 : steps.length - 1];\n\n    return {\n        [scaleType]: scaleType === 'size' ? scale[scaleFn](ele) * scale.getScaleFactor() : scale[scaleFn](ele),\n        value: domainBounds[type],\n        id: type === 'lower' ? 0 : domainLeg.length + 2,\n        range: [ele, step]\n    };\n};\n","import {\n    makeElement,\n    selectElement,\n    getUniqueId,\n    getSmartComputedStyle,\n    generateGetterSetters,\n    mergeRecursive\n} from 'muze-utils';\nimport { behaviouralActions } from '@chartshq/muze-firebolt';\nimport * as legendBehaviours from '../firebolt/behavioural';\n\nimport { LegendFireBolt } from '../firebolt/legend-firebolt';\nimport { actionBehaviourMap } from '../firebolt/action-behaviour-map';\nimport { physicalActions } from '../firebolt/physical';\nimport * as sideEffects from '../firebolt/side-effects';\nimport { behaviourEffectMap } from '../firebolt/behaviour-effect-map';\nimport { VALUE, PATH, RIGHT, LEFT, TOP, BOTTOM } from '../enums/constants';\nimport { PROPS } from './props';\nimport { DEFAULT_MEASUREMENT, DEFAULT_CONFIG, LEGEND_TITLE } from './defaults';\nimport { getItemMeasures, titleCreator, computeItemSpaces } from './legend-helper';\n\n/**\n * Creates a Legend from the axes of a canvas\n *\n * @param {Object} dependencies : legend data\n * @class SimpleLegend\n */\nexport default class SimpleLegend {\n\n    /**\n     * Creates an instance of Legend.\n     * @param {Object} dependencies Set of dependencies required by the legend\n     * @memberof Legend\n     */\n    constructor (dependencies) {\n        this._data = [];\n        this._metaData = [];\n        this._mount = null;\n        this._fieldName = null;\n        this._title = Object.assign({}, LEGEND_TITLE);\n        this._metaData = null;\n        this._labelManager = dependencies.labelManager;\n        this._cells = dependencies.cells;\n        this._id = getUniqueId();\n        this._measurement = Object.assign({}, this.constructor.defaultMeasurement());\n        this._config = mergeRecursive({}, this.constructor.defaultConfig());\n\n        const dist = dependencies.labelManager.getOriSize('w');\n        this._minTickDistance = { width: dist.width * 3 / 4, height: dist.height / 2 };\n\n        generateGetterSetters(this, PROPS);\n        this._computedStyle = getSmartComputedStyle(selectElement('body'),\n            `${this.config().classPrefix}-legend-item-info`);\n\n        this._firebolt = new LegendFireBolt(this, {\n            behavioural: Object.assign({}, behaviouralActions, legendBehaviours),\n            physical: physicalActions,\n            physicalBehaviouralMap: actionBehaviourMap\n        }, sideEffects, behaviourEffectMap);\n    }\n\n    id () {\n        return this._id;\n    }\n    /**\n     * Initializes an instance of the class\n     *\n     * @static\n     * @param {Object} dependencies Set of dependencies required by the legend\n     * @return {Instance} returns a new instance of Legend\n     * @memberof Legend\n     */\n    static create (dependencies) {\n        return new SimpleLegend(dependencies);\n    }\n\n    /**\n     *\n     *\n     * @static\n     *\n     * @memberof SimpleLegend\n     */\n    static defaultConfig () {\n        return DEFAULT_CONFIG;\n    }\n\n    /**\n     *\n     *\n     * @static\n     *\n     * @memberof SimpleLegend\n     */\n    static defaultMeasurement () {\n        return DEFAULT_MEASUREMENT;\n    }\n\n    /**\n     *\n     *\n     * @readonly\n     * @memberof SimpleLegend\n     */\n    firebolt (...params) {\n        if (params.length) {\n            return this;\n        }\n        return this._firebolt;\n    }\n\n    /**\n     *\n     *\n     *\n     * @memberof Legend\n     */\n    elemType () {\n        return PATH;\n    }\n\n    canvasAlias (...alias) {\n        if (alias.length) {\n            this._canvasAlias = alias[0];\n            return this;\n        }\n        return this._canvasAlias;\n    }\n\n    /**\n     *\n     *\n     *\n     * @memberof Legend\n     */\n    mount (...params) {\n        if (params.length) {\n            this._mount = params[0];\n            this.render();\n            return this;\n        }\n        return this._mount;\n    }\n\n    /**\n     *\n     *\n     * @param {*} effPadding\n     * @param {*} align\n     *\n     * @memberof Legend\n     */\n    getLabelSpaces () {\n        const {\n            item,\n            classPrefix\n        } = this.config();\n        this._labelManager.setStyle(getSmartComputedStyle(selectElement('body'),\n            `${classPrefix}-legend-item-info`));\n        return getItemMeasures(this, VALUE, item.text.formatter);\n    }\n\n    /**\n     * Sets the height and width of a legend based on provided max\n     * height and width and based on its contents\n     *\n     * @return {Instance} Current instance\n     * @memberof Legend\n     */\n    setLegendMeasures () {\n        const {\n            width,\n            height,\n            maxWidth,\n            maxHeight,\n            padding,\n            margin,\n            border\n        } = this.measurement();\n        const {\n            align\n        } = this.config();\n\n        // Effective padding, margin and padding\n        const effPadding = padding * 2;\n        const effBorder = border * 2;\n        const effMargin = margin * 2;\n\n        this.data(this.dataFromScale());\n        // Get space occupied by title\n        const titleSpace = this.getTitleSpace();\n        const titleHeight = titleSpace.height > 0 ? titleSpace.height + effPadding : 0;\n        const titleWidth = titleSpace.width + effPadding;\n\n        // Get space occupied by labels\n        const labelSpaces = this.getLabelSpaces(effPadding, align);\n        const {\n            totalHeight, totalWidth, itemSpaces, iconSpaces, maxItemSpaces, maxIconWidth\n        } = computeItemSpaces(this.config(),\n        { effPadding, titleWidth, labelSpaces, titleHeight, maxWidth, maxHeight }, this.data());\n\n        this.measurement({\n            width: Math.max(totalWidth, width) + effMargin + effBorder,\n            height: Math.max(totalHeight, height) + effMargin + effBorder,\n            labelSpaces,\n            iconSpaces,\n            itemSpaces,\n            maxItemSpaces,\n            maxIconWidth,\n            titleSpaces: {\n                width: Math.min(maxWidth, this.measurement().width) - effMargin - effBorder,\n                height: titleHeight\n            }\n        });\n        return this;\n    }\n\n    /**\n     * Returns the space occupied by the legend title\n     *\n     * @return {Object} Space occupied by title\n     * @memberof Legend\n     */\n    getTitleSpace () {\n        this._labelManager.setStyle(getSmartComputedStyle(selectElement('body'),\n                                                `${this.config().classPrefix}-legend-title`));\n        return this._labelManager.getOriSize(this.title().text ? this.title().text : '');\n    }\n\n    /**\n     * Creates the title for the legend\n     *\n     * @param {DOM} container Container made for the title\n     * @return {Selection} Title and it's node\n     * @memberof Legend\n     */\n    renderTitle (container) {\n        const { titleSpaces, border, padding, width, maxWidth } = this.measurement();\n        const { borderStyle, borderColor } = this.config();\n        return titleCreator(container, this.title(), {\n            height: titleSpaces.height,\n            width,\n            maxWidth,\n            border,\n            padding,\n            borderStyle,\n            borderColor\n        }, this.config());\n    }\n\n    /**\n     * Render the legend with its title\n     *\n     * @param {DOM} mountPoint Point where the legend and title are to be appended\n     * @return {Instance} Current instance of legend\n     * @memberof Legend\n     */\n    render () {\n        const firebolt = this.firebolt();\n        const {\n            classPrefix,\n            borderStyle,\n            borderColor,\n            position\n        } = this.config();\n        const {\n            maxWidth,\n            maxHeight,\n            width,\n            height,\n            margin,\n            border\n        } = this.measurement();\n        const legendContainer = makeElement(selectElement(this.mount()), 'div', [1], `${classPrefix}-legend-box`);\n        let marginPosition;\n        switch (position) {\n        case TOP:\n            marginPosition = `margin-${BOTTOM}`;\n            break;\n        case LEFT:\n            marginPosition = `margin-${RIGHT}`;\n            break;\n        case BOTTOM:\n            marginPosition = `margin-${TOP}`;\n            break;\n        default:\n            marginPosition = `margin-${LEFT}`;\n        }\n        legendContainer.classed(`${classPrefix}-legend-box-${this._id}`, true);\n        legendContainer.style('float', 'left');\n        // set height and width\n        legendContainer.style('width', `${Math.min(maxWidth, width) - margin * 2}px`)\n                        .style('height', `${Math.min(maxHeight, height) - margin * 2}px`)\n                        .style(`${marginPosition}`, `${margin}px`)\n                        .style('border', `${border}px ${borderStyle} ${borderColor}`);\n        this.legendContainer(legendContainer.node());\n\n        // create title\n        this.renderTitle(legendContainer);\n        firebolt.createSelectionSet(this.data().map(d => d.id));\n        return legendContainer;\n    }\n  /**\n     *\n     *\n     * @param {*} data\n     *\n     * @memberof StepLegend\n     */\n    getCriteriaFromData (data) {\n        const fieldName = this.fieldName();\n        const type = this.metaData().getData().schema[0].type;\n        if (type === 'measure') {\n            return {\n                [fieldName]: data.range\n            };\n        }\n        return [[fieldName], [data.rawVal]];\n    }\n}\n","import {\n    LEFT,\n    RIGHT,\n    START,\n    END,\n    TOP,\n    BOTTOM,\n    HORIZONTAL,\n    VERTICAL,\n    CENTER,\n    SHAPE,\n    VALUE\n} from '../enums/constants';\n\nconst legendOrientation = {\n    [HORIZONTAL]: {\n        datasets: data => ({\n            row: [1],\n            column: data\n        }),\n        itemContainerMeasures: (measurement) => {\n            const {\n                itemSpaces,\n                width\n            } = measurement;\n            return {\n                row: {\n                    width: `${width}px`,\n                    padding: `${0}px`\n                },\n                column: {\n                    width: (d, i) => `${itemSpaces[i].width}px`,\n                    padding: `${0}px`\n                }\n            };\n        },\n        getStepSpacesInfo: (measurement) => {\n            const { maxItemSpaces, height } = measurement;\n            return {\n                iconHeight: height,\n                iconWidth: maxItemSpaces.width,\n                stepPadding: {\n                    horizontal: true,\n                    vertical: false\n                }\n            };\n        }\n    },\n    [VERTICAL]: {\n        datasets: data => ({\n            row: data,\n            column: d => [d]\n        }),\n        itemContainerMeasures: (measurement, config) => {\n            const {\n                width\n            } = measurement;\n            const { padding } = config;\n\n            return {\n                row: {\n                    width: `${width}px`,\n                    padding: `${padding}px`\n                },\n                column: {\n                    width: `${width}px`,\n                    padding: `${0}px`\n                }\n            };\n        },\n        getStepSpacesInfo: (measurement) => {\n            const { maxItemSpaces, width } = measurement;\n            return {\n                iconHeight: maxItemSpaces.height,\n                iconWidth: width,\n                stepPadding: {\n                    horizontal: false,\n                    vertical: true\n                }\n            };\n        }\n    }\n};\n\nexport const positionConfig = {\n    [LEFT]: legendOrientation[VERTICAL],\n    [RIGHT]: legendOrientation[VERTICAL],\n    [TOP]: legendOrientation[HORIZONTAL],\n    [BOTTOM]: legendOrientation[HORIZONTAL]\n};\n\nexport const alignmentMap = {\n    [LEFT]: END,\n    [RIGHT]: START,\n    [TOP]: CENTER,\n    [BOTTOM]: CENTER\n};\n\n// Reverses data for step legend\nexport const stepData = data => ({\n    [LEFT]: data.reverse(),\n    [RIGHT]: data.reverse(),\n    [TOP]: data,\n    [BOTTOM]: data\n});\n\n// Changes the item layout based on the position of the text\nexport const itemStack = {\n    [LEFT]: [VALUE, SHAPE],\n    [RIGHT]: [SHAPE, VALUE],\n    [TOP]: [VALUE, SHAPE],\n    [BOTTOM]: [SHAPE, VALUE]\n};\n","import { makeElement, selectElement, applyStyle } from 'muze-utils';\nimport { ICON_MAP } from './defaults';\nimport { positionConfig, alignmentMap, itemStack } from './position-config';\nimport {\n    WIDTH,\n    HEIGHT,\n    CENTER,\n    VALUE,\n    RECT,\n    LEFT,\n    RIGHT\n} from '../enums/constants';\n\n/**\n *\n *\n * @param {*} container\n * @param {*} data\n * @param {*} legendInstance\n * @param {*} align\n *\n */\nexport const getItemContainers = (container, data, legendInstance) => {\n    const measurement = legendInstance.measurement();\n    const config = legendInstance.config();\n    const {\n        itemSpaces\n    } = measurement;\n    const {\n        classPrefix,\n        position\n    } = config;\n    const positionObj = positionConfig[position];\n    const datasets = positionObj.datasets(data);\n    const measures = positionObj.itemContainerMeasures(measurement, config);\n\n    const rows = makeElement(container, 'div', datasets.row, `${classPrefix}-legend-row`);\n    rows.style(HEIGHT, (d, i) => `${itemSpaces[i].height}px`);\n    rows.style(WIDTH, measures.row.width);\n    rows.style('padding', measures.row.padding);\n\n    const columns = makeElement(rows, 'div', datasets.column, `${classPrefix}-legend-columns`);\n    columns.style(WIDTH, measures.column.width);\n    columns.style('padding', measures.column.padding);\n\n    return columns;\n};\n\n/**\n *\n *\n * @param {*} container\n * @param {*} classPrefix\n * @param {*} data\n *\n * @memberof DiscreteLegend\n */\nexport const createLegendSkeleton = (context, container, classPrefix, data) => {\n    let gradWidth = 0;\n    let gradHeight = 0;\n    let maxGradHeight = 0;\n    let maxGradWidth = 0;\n    const measurement = context.measurement();\n    const {\n            margin,\n            border,\n            titleSpaces,\n            width,\n            height,\n            maxWidth,\n            maxHeight\n        } = measurement;\n\n    gradHeight = height - (titleSpaces.height + 2 * margin + 2 * border);\n    gradWidth = width - (margin * 2 + border * 2);\n\n    maxGradHeight = maxHeight - (titleSpaces.height + margin * 2 + border * 2);\n    maxGradWidth = maxWidth - (margin * 2 + border * 2);\n\n    let legendBody = makeElement(container, 'div', [1], `${classPrefix}-legend-body`);\n    legendBody.select(`.${classPrefix}-legend-overflow`).remove();\n        // Create a div with scroll when overflow\n    if (maxGradWidth && maxGradWidth < gradWidth) {\n        legendBody = legendBody.style(WIDTH, `${maxGradWidth}px`).style('overflow-x', 'scroll');\n    }\n        // Create a div with scroll when overflow\n    if (maxGradHeight && maxGradHeight < gradHeight) {\n        legendBody.style(HEIGHT, `${maxGradHeight}px`).style('overflow-y', 'scroll');\n    }\n\n    legendBody = makeElement(legendBody, 'div', [1], `${classPrefix}-legend-overflow`);\n\n    legendBody.style(WIDTH, `${gradWidth}px`);\n    legendBody.style(HEIGHT, `${gradHeight}px`);\n\n    const legendItem = getItemContainers(legendBody, data, context);\n    return { legendItem };\n};\n\n/**\n * Creates legend item based on alignment and text orientation\n *\n * @param {Selection} container Point where items are to be mounted\n * @return {Instance} Current instance\n * @memberof Legend\n */\nexport const createItemSkeleton = (context, container) => {\n    const {\n        classPrefix,\n        item\n    } = context.config();\n    const textOrientation = item.text.orientation;\n\n    const stack = itemStack[textOrientation];\n    const itemSkeleton = makeElement(container, 'div', (d, i) => stack.map(e => [e, d[e], d.color, d.size,\n        d.value, context.fieldName(), i]), `${classPrefix}-legend-item-info`);\n\n    const alignClass = alignmentMap[textOrientation];\n\n    itemSkeleton.classed(alignClass, true);\n    return { itemSkeleton };\n};\n\n/**\n *\n *\n * @param {*} measureType\n * @param {*} stepColorCheck\n */\nexport const applyItemStyle = (item, measureType, stepColorCheck, context) => {\n    const {\n        padding,\n        labelSpaces,\n        iconSpaces,\n        maxIconWidth\n    } = context.measurement();\n    const diff = stepColorCheck ? -padding * 2 : 0;\n\n    if (item[0] === VALUE) {\n        return `${labelSpaces[item[6]][measureType]}px`;\n    }\n    return `${measureType === 'width' && !stepColorCheck ? maxIconWidth : iconSpaces[item[6]][measureType] - diff}px`;\n};\n\n/**\n *\n *\n * @param {*} str\n *\n */\nconst checkPath = (str) => {\n    if (/^[mzlhvcsqta]\\s*[-+.0-9][^mlhvzcsqta]+/i.test(str) && /[\\dz]$/i.test(str) && str.length > 4) {\n        return true;\n    }\n    return false;\n};\n\n/**\n *\n *\n * @param {*} d\n * @param {*} elem\n */\nconst createShape = function (d, elem, defaultIcon, width, height) {\n    const groupElement = elem;\n    // const { shape, size, update } = d;\n    const size = d[3] || Math.min(width, height) * Math.PI;\n    const shape = d[1] || defaultIcon;\n\n    if (shape instanceof Promise) {\n        shape.then((res) => {\n            d.shape = res;\n            return createShape(d, elem);\n        });\n    } else if (shape instanceof Element) {\n        let newShape = shape.cloneNode(true);\n\n        if (newShape.nodeName.toLowerCase() === 'img') {\n            const src = newShape.src || newShape.href;\n            newShape = document.createElementNS('http://www.w3.org/2000/svg', 'image');\n            newShape.setAttribute('href', src);\n        }\n        const shapeElement = selectElement(newShape);\n        shapeElement.attr('transform', `scale(${size / 100})`);\n        return selectElement(groupElement.node().appendChild(newShape));\n    } else if (typeof shape === 'string') {\n        let pathStr;\n        if (checkPath(shape)) {\n            pathStr = shape;\n        } else {\n            pathStr = ICON_MAP(shape).size(size)();\n        }\n        return makeElement(groupElement, 'path', data => [data]).attr('d', pathStr);\n    }\n    d[1] = 'circle';\n    return createShape(d, elem, 'circle');\n};\n\n/**\n * Returns the icon of the legend item\n *\n * @param {Object} datum Data property attached to the item\n * @param {number} width width of the item\n * @param {number} height height of the item\n * @return {Object|string} returns the path string or the string name of the icon\n * @memberof Legend\n */\nexport const getLegendIcon = (datum, width, height, defaultIcon) => {\n    const icon = ICON_MAP(datum[1]);\n\n    if (icon) {\n        return icon.size(datum[3] || Math.min(width, height) * Math.PI);\n    }\n    return ICON_MAP(datum[3] ? 'circle' : defaultIcon).size(datum[3] || Math.min(width, height) * Math.PI);\n};\n\n/**\n *\n *\n */\nexport const renderIcon = (icon, container, datum, context) => {\n    const {\n        classPrefix,\n        iconHeight,\n        iconWidth,\n        maxIconWidth,\n        padding,\n        color\n    } = context;\n    const svg = makeElement(container, 'svg', f => [f], `${classPrefix}-legend-icon-svg`)\n    .attr(WIDTH, maxIconWidth)\n    .attr(HEIGHT, iconHeight)\n    .style(WIDTH, `${maxIconWidth}px`)\n    .style(HEIGHT, `${iconHeight}px`);\n\n    if (icon !== RECT) {\n        const group = makeElement(svg, 'g', [datum[1]], `${classPrefix}-legend-icon`);\n        createShape(datum, group, datum[3] ? 'circle' : 'square', iconWidth, iconHeight)\n                        .attr('transform', `translate(${maxIconWidth / 2 - padding} ${iconHeight / 2})`)\n                        .attr('fill', datum[2] || color);\n    } else {\n        makeElement(svg, RECT, [datum[1]], `${classPrefix}-legend-icon`)\n                        .attr('x', 0)\n                        .attr('y', 0)\n                        .attr(WIDTH, maxIconWidth)\n                        .attr(HEIGHT, iconHeight)\n                        .attr('fill', datum[2] || color);\n    }\n};\n\n/**\n * Renders the items in the legend i.e, icon and text\n *\n * @param {DOM} container Point where item is to be mounted\n * @memberof Legend\n */\nexport const renderDiscreteItem = (context, container) => {\n    const labelManager = context._labelManager;\n    const {\n           item,\n           classPrefix\n    } = context.config();\n    const {\n        maxIconWidth,\n        padding\n    } = context.measurement();\n    const {\n            width: iconWidth,\n            height: iconHeight,\n            color,\n            className\n        } = item.icon;\n\n    const textOrientation = item.text.orientation;\n    const formatter = item.text.formatter;\n\n    labelManager.useEllipsesOnOverflow(true);\n    applyStyle(container, {\n        width: d => applyItemStyle(d, WIDTH, false, context),\n        height: d => applyItemStyle(d, HEIGHT, false, context),\n        'text-align': CENTER,\n        padding: `${padding}px`\n    });\n\n    labelManager.setStyle(context._computedStyle);\n    const dataArr = container.data();\n    container.each(function (d, i) {\n        if (d[0] === VALUE) {\n            selectElement(this).text(formatter(d[1], i, dataArr, context))\n                            .style(`padding-${textOrientation === RIGHT ? LEFT : RIGHT}`, '0px');\n        } else {\n            // const icon = getLegendIcon(d, iconWidth, iconHeight, type);\n            selectElement(this).classed(`${classPrefix}-${className}`, true);\n            selectElement(this).classed(`${classPrefix}-${className}-${i}`, true);\n            renderIcon('circle', selectElement(this), d, {\n                classPrefix,\n                iconWidth,\n                // iconWidth: 2 * Math.sqrt(d[3] / Math.PI) || iconWidth,\n                iconHeight,\n                maxIconWidth,\n                padding,\n                color\n            });\n        }\n    });\n};\n\n/**\n* Renders the items in the legend i.e, icon and text\n*\n* @param {DOM} container Point where item is to be mounted\n* @memberof Legend\n*/\nexport const renderStepItem = (context, container) => {\n    const labelManager = context._labelManager;\n    const {\n      item,\n      position,\n      classPrefix\n   } = context.config();\n    const {\n      maxItemSpaces,\n      maxIconWidth,\n      padding\n   } = context.measurement();\n    const {\n       width,\n       height,\n       color\n   } = item.icon;\n    const {\n        formatter\n   } = item.text;\n\n    labelManager.useEllipsesOnOverflow(true);\n    const { iconHeight, iconWidth, stepPadding } = positionConfig[position].getStepSpacesInfo({\n        maxItemSpaces, height, width\n    });\n\n    applyStyle(container, {\n        width: d => applyItemStyle(d, WIDTH, stepPadding.horizontal, context),\n        height: d => applyItemStyle(d, HEIGHT, stepPadding.vertical, context),\n        'text-align': 'center',\n        padding: `${padding}px`\n    });\n\n    labelManager.setStyle(context._computedStyle);\n    const dataArr = container.data();\n    container.each(function (d, i) {\n        if (d[0] === VALUE) {\n            selectElement(this).text(formatter(d[1], i, dataArr, context));\n        } else {\n            renderIcon(RECT, selectElement(this), d, {\n                classPrefix,\n                iconWidth,\n                iconHeight,\n                maxIconWidth,\n                color\n            });\n        }\n    });\n};\n","import {\n    FieldType,\n    DimensionSubtype,\n    formatTemporal\n} from 'muze-utils';\nimport SimpleLegend from './simple-legend';\nimport { DISCRETE, LEFT, SIZE } from '../enums/constants';\nimport { getScaleInfo } from './legend-helper';\nimport { createLegendSkeleton, createItemSkeleton, renderDiscreteItem } from './renderer';\nimport '../styles.scss';\n\n/**\n * Creates a Legend from the axes of a canvas\n *\n * @param {Object} dependencies : legend data\n * @class Legend\n */\nexport default class DiscreteLegend extends SimpleLegend {\n\n    /**\n     * Initializes an instance of the class\n     *\n     * @static\n     * @param {Object} dependencies Set of dependencies required by the legend\n     * @return {Instance} returns a new instance of Legend\n     * @memberof Legend\n     */\n    static create (dependencies) {\n        return new DiscreteLegend(dependencies);\n    }\n\n    /**\n     *\n     *\n     * @static\n     *\n     * @memberof DiscreteLegend\n     */\n    static type () {\n        return DISCRETE;\n    }\n\n    /**\n     *\n     *\n     * @param {*} scale\n     *\n     * @memberof DiscreteLegend\n     */\n    dataFromScale () {\n        const scale = this.scale();\n        const { scaleType, domain, scaleFn } = getScaleInfo(scale);\n        let domainForLegend = [...new Set(domain)];\n        const field = this.metaData().getFieldspace().fields[0];\n        const { type, subtype } = field.schema();\n\n        domainForLegend = domainForLegend.map((ele, i) => {\n            let value = 0;\n            let range = 0;\n            const rawVal = domainForLegend[i];\n            if (type === FieldType.MEASURE) {\n                value = (+domainForLegend[i]).toFixed(0);\n                const nextVal = domainForLegend[i + 1] ? +domainForLegend[i + 1] : +value;\n                range = [value, nextVal.toFixed(0)];\n            } else {\n                let domainVal = rawVal;\n                if (subtype === DimensionSubtype.TEMPORAL) {\n                    domainVal = formatTemporal(domainForLegend[i], field.minimumConsecutiveDifference());\n                }\n                value = domainVal;\n                range = [domainVal];\n            }\n            return {\n                [scaleType]: scale[scaleFn](ele),\n                value,\n                id: i,\n                range,\n                rawVal\n            };\n        }).filter(d => d.value !== null);\n\n        domainForLegend = scaleType === SIZE ? domainForLegend.sort((a, b) => a[scaleType] - b[scaleType])\n            : domainForLegend;\n        return domainForLegend;\n    }\n\n    /**\n     * Render the legend with its title\n     *\n     * @param {DOM} mountPoint Point where the legend and title are to be appended\n     * @return {Instance} Current instance of legend\n     * @memberof Legend\n     */\n    render () {\n        const firebolt = this.firebolt();\n        const data = this.data();\n        const { classPrefix } = this.config();\n        const legendContainer = super.render(this.mount());\n        // create Legend\n        const { legendItem } = createLegendSkeleton(this, legendContainer, classPrefix, data);\n        const { itemSkeleton } = createItemSkeleton(this, legendItem);\n        renderDiscreteItem(this, itemSkeleton);\n        legendContainer.selectAll('div').style('float', LEFT);\n        firebolt.mapActionsAndBehaviour();\n        firebolt.createSelectionSet(this.data().map(d => d.id));\n        return legendContainer;\n    }\n}\n","import { makeElement, applyStyle } from 'muze-utils';\nimport { ContinousAxis } from '@chartshq/muze-axis';\nimport { BOTTOM, RIGHT } from '../enums/constants';\nimport { ALIGN } from './defaults';\nimport '../styles.scss';\n\n/**\n *\n *\n * @param {*} data\n *\n */\nexport const getGradientDomain = (data) => {\n    if (typeof data[0].value === 'number') {\n        return data.reduce((accumulator, currentValue) =>\n            [Math.min(currentValue.value, accumulator[0]), Math.max(currentValue.value, accumulator[1])],\n                [Number.MAX_VALUE, Number.MIN_VALUE]);\n    }\n    return data.map(e => e.value);\n};\n\n/**\n *\n *\n * @param {*} container\n * @param {*} data\n * @param {*} domain\n *\n */\nexport const makeLinearGradient = (container, data, domain) => {\n    const defs = makeElement(container, 'defs', [1]);\n    const linearGradient = makeElement(defs, 'linearGradient', [1])\n                .attr('id', 'linear-gradient')\n                .attr('x1', '0%')\n                .attr('y2', '0%');\n\n    makeElement(linearGradient, 'stop', data, 'stop-gradient')\n                    .attr('offset', d => `${(d.value - domain[0]) * 100 / (domain[1] - domain[0]) || 1}%`)\n                    .attr('stop-color', d => d.color);\n    return linearGradient;\n};\n\n/**\n * Creates an axis cell with a linear axis for computing space and\n * creating gradient legend\n *\n * @return {AxisCell} Instance of Axis Cell for the gradient axis\n * @memberof Legend\n */\nexport const createAxis = (context) => {\n    const data = context.data();\n    const { align } = context.config();\n    const AxisCell = context._cells.AxisCell;\n    const newAxis = new ContinousAxis({\n        id: `legend-${context._id}`,\n        orientation: align === ALIGN.VERTICAL ? RIGHT : BOTTOM,\n        style: context._computedStyle,\n        nice: false,\n        showAxisName: false,\n        tickValues: data.map(d => d.value),\n        fixedBaseline: false,\n        labels: {\n            rotation: null\n        }\n    }, { labelManager: context._labelManager });\n\n    newAxis.domain(getGradientDomain(data));\n    newAxis.range([1, 1]);\n    return new AxisCell().source(newAxis).config({\n        margin: { left: 0, bottom: 0, top: 0, right: 0 }\n    });\n};\n\n/**\n *\n *\n * @param {*} container\n * @param {*} data\n * @param {*} classPrefix\n *\n * @memberof GradientLegend\n */\nconst createLegendSkeleton = (container, classPrefix, data) => {\n    const domain = getGradientDomain(data);\n    const legendContainer = makeElement(container, 'div', [1], `${classPrefix}-legend-body`);\n    const legendGradSvg = makeElement(legendContainer, 'svg', [1], `${classPrefix}-gradient`);\n    const legendGradCont = makeElement(legendGradSvg, 'g', [1], `${classPrefix}-gradient-group`);\n    const linearGradient = makeLinearGradient(legendGradSvg, data, domain);\n    const legendRect = makeElement(legendGradCont, 'rect', [1], `${classPrefix}-gradient-rect`);\n\n    return {\n        legendContainer,\n        legendGradCont,\n        legendGradSvg,\n        linearGradient,\n        legendRect\n    };\n};\n\n/**\n * Renders the axis for the gradient\n *\n * @param {Selection} container Point where axis is to be mounted\n * @param {number} height Height for axis\n * @param {number} width Width for axis\n * @memberof Legend\n */\nexport const renderAxis = (context, container, height, width) => {\n    const axis = context.axis();\n\n    axis.setAvailableSpace(width, height);\n    axis.render(container.node());\n    axis.source().render();\n};\n\n/**\n * Renders gradient legends\n *\n * @param {Selection} container Point where the legend is to be appended\n * @memberof GradientLegend\n */\nexport const renderGradient = (context, container) => {\n    let gradHeight = 0;\n    let gradWidth = 0;\n    const {\n        align,\n        classPrefix,\n        item\n    } = context.config();\n    const data = context.data();\n    // Create the skeleton for the legend\n    const {\n        legendContainer,\n        legendGradSvg,\n        legendGradCont,\n        linearGradient,\n        legendRect\n    } = createLegendSkeleton(container, classPrefix, data);\n    const labelDim = context.axis().source().getAxisDimensions().tickDimensions;\n    const {\n        padding,\n        margin,\n        border,\n        titleSpaces,\n        maxItemSpaces,\n        maxHeight,\n        maxWidth,\n        height,\n        width\n    } = context.measurement();\n    const gradientDimensions = {};\n\n    gradHeight = Math.floor(Math.min(height, maxHeight) - (titleSpaces.height + 2 * margin + 2 * border));\n    gradWidth = Math.floor(Math.min(width, maxWidth) - (margin * 2 + border * 2));\n\n    if (align === ALIGN.HORIZONTAL) {\n        gradientDimensions.height = item.icon.height;\n        gradientDimensions.width = gradWidth - 2 * padding - labelDim.width / 2;\n        linearGradient.attr('x2', '100%').attr('y1', '0%');\n        legendGradCont.attr('transform', `translate( ${labelDim.width / 2} 0)`);\n        renderAxis(context, legendContainer, gradHeight - item.icon.height - padding, gradWidth - 2 * padding - 1);\n\n        applyStyle(legendContainer, {\n            height: `${maxItemSpaces.height + border + padding}px`,\n            width: `${Math.min(width, maxWidth)}px`,\n            padding: `${padding}px`\n        });\n\n        legendRect.attr('height', gradientDimensions.height);\n        legendRect.attr('width', gradientDimensions.width - labelDim.width / 2);\n    } else {\n        gradientDimensions.height = gradHeight - 2 * padding - labelDim.height / 2;\n        gradientDimensions.width = item.icon.width;\n        linearGradient.attr('x2', '0%').attr('y1', '100%');\n        legendGradCont.attr('transform', `translate(0 ${labelDim.height / 2})`);\n        renderAxis(context, legendContainer, gradHeight - 2 * padding - 1, gradWidth - item.icon.width - padding * 2);\n\n        applyStyle(legendContainer, {\n            height: `${Math.min(height, maxHeight)}px`,\n            width: `${maxWidth}px`,\n            padding: `${padding}px`\n        });\n        legendRect.attr('height', gradientDimensions.height - labelDim.height / 2);\n        legendRect.attr('width', gradientDimensions.width);\n    }\n\n    // Apply Styles to the legend plot area\n    applyStyle(legendGradSvg, {\n        height: `${gradientDimensions.height}px`,\n        width: `${gradientDimensions.width}px`\n    });\n\n        // Apply styles to the legend rect\n    applyStyle(legendRect, {\n        fill: 'url(#linear-gradient)'\n    });\n    legendGradSvg.attr('height', gradientDimensions.height);\n    legendGradSvg.attr('width', gradientDimensions.width);\n\n    context.measurement({\n        gradientDimensions\n    });\n    context._legendGradientSvg = legendGradSvg;\n    return context;\n};\n","import SimpleLegend from './simple-legend';\nimport { getScaleInfo, getInterpolatedData, getInterpolatedArrayData } from './legend-helper';\nimport { GRADIENT, LEFT, SIZE } from '../enums/constants';\nimport { renderGradient, createAxis } from './gradient-helper';\nimport '../styles.scss';\n\n/**\n * Creates a Legend from the axes of a canvas\n *\n * @param {Object} dependencies : legend data\n * @class Legend\n */\nexport default class GradientLegend extends SimpleLegend {\n\n    /**\n     * Initializes an instance of the class\n     *\n     * @static\n     * @param {Object} dependencies Set of dependencies required by the legend\n     * @return {Instance} returns a new instance of Legend\n     * @memberof Legend\n     */\n    static create (dependencies) {\n        return new GradientLegend(dependencies);\n    }\n\n    /**\n     *\n     *\n     * @static\n     *\n     * @memberof GradientLegend\n     */\n    static type () {\n        return GRADIENT;\n    }\n\n    /**\n     *\n     *\n     * @param {*} axis\n     *\n     * @memberof GradientLegend\n     */\n    axis (...axis) {\n        if (axis.length) {\n            this._axis = axis[0];\n            return this;\n        }\n        return this._axis;\n    }\n\n    /**\n     *\n     *\n     * @param {*} scale\n     *\n     * @memberof GradientLegend\n     */\n    dataFromScale () {\n        let domainForLegend = [];\n        const scale = this.scale();\n        const { scaleType, domain, steps, scaleFn } = getScaleInfo(scale);\n\n        // defining scaleParams\n        const scaleParams = {\n            smartLabel: this.labelManager(),\n            measures: this.measurement(),\n            alignment: this.config().position,\n            minTickDistance: this.minTickDistance()\n        };\n\n        if (steps instanceof Array) {\n            if (domain[0] < steps[0]) {\n                domainForLegend[0] = domain[0];\n            }\n            domainForLegend = [...domainForLegend, ...steps];\n            if (domain[domain.length - 1] > steps[steps.length - 1]) {\n                domainForLegend.push(domain[1]);\n            }\n            // Sorting the domain Array\n            domainForLegend = [...new Set(domainForLegend)].sort((a, b) => a - b);\n\n            domainForLegend = getInterpolatedArrayData(domainForLegend, scaleParams);\n        } else {\n            domainForLegend = getInterpolatedData(domain, steps - 1, scaleParams);\n        }\n        domainForLegend = [...new Set(domainForLegend)].sort((a, b) => a - b);\n\n        return domainForLegend.map((ele, i) => {\n            const value = domainForLegend[i];\n            return {\n                [scaleType]: scaleType === SIZE ? scale[scaleFn](ele) * scale.getScaleFactor()\n                    : scale[scaleFn](Math.floor(ele)),\n                value: +value.toFixed(2),\n                id: i\n            };\n        }).filter(d => d.value !== null);\n    }\n\n    /**\n     *\n     *\n     * @param {*} effPadding\n     * @param {*} align\n     *\n     * @memberof Legend\n     */\n    getLabelSpaces (effPadding) {\n        this.config({\n            item: {\n                text: {\n                    orientation: this.config().position\n                }\n            }\n        });\n        const axis = createAxis(this);\n        const axisSpace = axis.getLogicalSpace();\n        const space = { width: axisSpace.width - effPadding, height: axisSpace.height - effPadding };\n        const axisDomainLength = axis.source().domain().length;\n        const labelSpaces = new Array(axisDomainLength).fill(space);\n\n        this.axis(axis);\n        return labelSpaces;\n    }\n\n    /**\n     *\n     *\n     *\n     * @memberof GradientLegend\n     */\n    getDrawingContext () {\n        return {\n            svgContainer: this._legendGradientSvg\n        };\n    }\n\n    /**\n     * Render the legend with its title\n     *\n     * @param {DOM} mountPoint Point where the legend and title are to be appended\n     * @return {Instance} Current instance of legend\n     * @memberof Legend\n     */\n    render () {\n        const firebolt = this.firebolt();\n        const legendContainer = super.render(this.mount());\n        // create Legend\n        renderGradient(this, legendContainer);\n        legendContainer.selectAll('div').style('float', LEFT);\n        firebolt.mapActionsAndBehaviour();\n        firebolt.createSelectionSet(this.data().map(d => d.id));\n        return legendContainer;\n    }\n /**\n     *\n     *\n     * @param {*} data\n     *\n     * @memberof SimpleLegend\n     */\n    getCriteriaFromData (data) {\n        return [[this.fieldName()], [data.value]];\n    }\n}\n","import SimpleLegend from './simple-legend';\nimport {\n    getScaleInfo,\n    getInterpolatedData,\n    getDomainBounds\n} from './legend-helper';\nimport {\n    createLegendSkeleton,\n    createItemSkeleton,\n    renderStepItem\n} from './renderer';\nimport { STEP, RECT, LEFT, SIZE, UPPER, LOWER } from '../enums/constants';\nimport { stepData } from './position-config';\nimport '../styles.scss';\n\n/**\n * Creates a Legend from the axes of a canvas\n *\n * @param {Object} dependencies : legend data\n * @class Legend\n */\nexport default class StepLegend extends SimpleLegend {\n\n    /**\n     * Initializes an instance of the class\n     *\n     * @static\n     * @param {Object} dependencies Set of dependencies required by the legend\n     * @return {Instance} returns a new instance of Legend\n     * @memberof Legend\n     */\n    static create (dependencies) {\n        return new StepLegend(dependencies);\n    }\n\n    /**\n     *\n     *\n     * @static\n     *\n     * @memberof StepLegend\n     */\n    static type () {\n        return STEP;\n    }\n\n    /**\n     *\n     *\n     * @param {*} scale\n     *\n     * @memberof StepLegend\n     */\n    dataFromScale () {\n        let domainLeg = [];\n        const scale = this.scale();\n        const { scaleType, domain, steps, scaleFn } = getScaleInfo(scale);\n\n        const { formatter } = this.config();\n        const domainBounds = {\n            lower: null, upper: null\n        };\n\n        // defining scaleParams\n        const scaleParams = {\n            smartLabel: this.labelManager(),\n            measures: this.measurement(),\n            alignment: this.config().position,\n            minTickDistance: this.minTickDistance()\n        };\n\n        if (steps instanceof Array) {\n            if (domain[0] < steps[0]) {\n                domainBounds.lower = [`${formatter.bounds.lower} ${steps[0]}`];\n            }\n            domainLeg = [...domainLeg, ...steps];\n            if (domain[domain.length - 1] > steps[steps.length - 1]) {\n                domainBounds.upper = [`${formatter.bounds.upper} ${steps[steps.length - 1]}`];\n            }\n        } else {\n            domainLeg = getInterpolatedData(domain, steps, scaleParams);\n        }\n\n        domainLeg = [...new Set(domainLeg)].sort((a, b) => a - b);\n        domainLeg = domainLeg.map((ele, i) => {\n            let value = null;\n            if (i < domainLeg.length - 1) {\n                value = `${(ele.toFixed(1))} - ${(+domainLeg[i + 1].toFixed(1))}`;\n            } else if (domainLeg.length === 1) {\n                value = ele.toFixed(1);\n            }\n            return {\n                [scaleType]: scaleType === SIZE ? scale[scaleFn](ele) * scale.getScaleFactor() : scale[scaleFn](ele),\n                value,\n                id: i + 1,\n                range: [ele, domainLeg[i + 1]]\n            };\n        }).filter(d => d.value !== null);\n\n        if (domainBounds.lower) {\n            const lowerBounds = getDomainBounds(LOWER, { scale, scaleFn, scaleType },\n                { domain, steps, domainBounds });\n            domainLeg = [lowerBounds, ...domainLeg];\n        }\n        if (domainBounds.upper) {\n            const upperBounds = getDomainBounds(UPPER, { scale, scaleFn, scaleType },\n            { domain, steps, domainBounds, domainLeg });\n            domainLeg = [...domainLeg, upperBounds];\n        }\n\n        return domainLeg;\n    }\n\n     /**\n     *\n     *\n     * @param {*} effPadding\n     * @param {*} align\n     *\n     * @memberof Legend\n     */\n    getLabelSpaces (effPadding, align) {\n        this.config({\n            item: {\n                text: {\n                    orientation: this.config().position\n                }\n            }\n        });\n        return super.getLabelSpaces(effPadding, align);\n    }\n\n    /**\n     *\n     *\n     *\n     * @memberof Legend\n     */\n    elemType () {\n        return RECT;\n    }\n\n     /**\n     * Render the legend with its title\n     *\n     * @param {DOM} mountPoint Point where the legend and title are to be appended\n     * @return {Instance} Current instance of legend\n     * @memberof Legend\n     */\n    render () {\n        const firebolt = this.firebolt();\n        const { classPrefix, position } = this.config();\n        const data = stepData(this.data())[position];\n\n        const legendContainer = super.render(this.mount());\n\n        // create Legend\n        const { legendItem } = createLegendSkeleton(this, legendContainer, classPrefix, data);\n        const { itemSkeleton } = createItemSkeleton(this, legendItem);\n\n        renderStepItem(this, itemSkeleton);\n        legendContainer.selectAll('div').style('float', LEFT);\n        firebolt.mapActionsAndBehaviour();\n        firebolt.createSelectionSet(this.data().map(d => d.id));\n        return legendContainer;\n    }\n\n    /**\n     *\n     *\n     * @param {*} data\n     *\n     * @memberof StepLegend\n     */\n    getCriteriaFromData (data) {\n        const fieldName = this.fieldName();\n        return {\n            [fieldName]: data.range\n        };\n    }\n}\n","import { GradientLegend, DiscreteLegend, StepLegend } from '@chartshq/muze-legend';\n\n/**\n * Contants to be used as attr\n */\nexport const ROWS = 'rows';\nexport const COLUMNS = 'columns';\nexport const DATA = 'data';\nexport const COLOR = 'color';\nexport const SHAPE = 'shape';\nexport const SIZE = 'size';\nexport const DETAIL = 'detail';\nexport const LAYERS = 'layers';\nexport const TRANSFORM = 'transform';\nexport const INITIALIZED = 'isInitialized';\nexport const SOURCE = 'source';\nexport const WIDTH = 'width';\nexport const HEIGHT = 'height';\nexport const PADDING = 'padding';\nexport const BORDER = 'border';\nexport const MARGIN = 'margin';\nexport const CONFIG = 'config';\nexport const MOUNT = 'mount';\nexport const CANVAS_UPDATED = 'canvasUpdated';\nexport const CLASSPREFIX = 'classPrefix';\nexport const POLICIES = '_policies';\nexport const LEGEND = 'legend';\nexport const TITLE = 'title';\nexport const SUB_TITLE = 'subtitle';\nexport const RESOLVE = 'resolve';\nexport const DISCRETE = 'discrete';\nexport const STEP_COLOR = 'step-color';\nexport const GRADIENT = 'gradient';\nexport const LINEAR = 'linear';\nexport const ORDINAL = 'ordinal';\nexport const MUZE_PREFIX = 'muze';\n\nexport const TITLE_TEMPLATE_NOT_ALLOWED_TAGS = [\n    'script',\n    'style'\n];\n\nexport const LEGEND_TYPE_MAP = {\n    [`${ORDINAL}-${true}-${COLOR}`]: DiscreteLegend,\n    [`${ORDINAL}-${true}-${SIZE}`]: DiscreteLegend,\n    [`${ORDINAL}-${true}-${SHAPE}`]: DiscreteLegend,\n    [`${ORDINAL}-${false}-${COLOR}`]: DiscreteLegend,\n    [`${ORDINAL}-${false}-${SHAPE}`]: DiscreteLegend,\n    [`${ORDINAL}-${false}-${SIZE}`]: DiscreteLegend,\n    [`${LINEAR}-${false}-${SIZE}`]: DiscreteLegend,\n    [`${LINEAR}-${true}-${SIZE}`]: DiscreteLegend,\n    [`${LINEAR}-${false}-${SHAPE}`]: DiscreteLegend,\n    [`${LINEAR}-${true}-${COLOR}`]: StepLegend,\n    [`${LINEAR}-${false}-${COLOR}`]: GradientLegend\n};\n\nexport const LEFT = 'left';\nexport const RIGHT = 'right';\nexport const BOTTOM = 'bottom';\nexport const TOP = 'top';\nexport const GROUP = 'group';\nexport const LAYOUT = 'layout';\nexport const RETINAL = 'retinal';\nexport const DIMENSION = 'dimension';\nexport const MEASURE = 'measure';\nexport const VERTICAL = 'vertical';\nexport const HORIZONTAL = 'horizontal';\nexport const HORIZONTAL_CENTER = 'h-center';\nexport const VERTICAL_CENTER = 'v-center';\nexport const HIDDEN = 'hidden';\nexport const OVERFLOW = 'overflow';\nexport const OVERFLOW_X = 'overflow-x';\nexport const OVERFLOW_Y = 'overflow-y';\nexport const AUTO = 'auto';\nexport const VISIBLE = 'visible';\nexport const VERTICAL_SCROLL_BAR = 'verticalScrollBar';\nexport const HORIZONTAL_SCROLL_BAR = 'horizontalScrollBar';\nexport const GRID = 'grid';\n","import { ComposedVars, SimpleVariable } from '@chartshq/visual-group';\nimport { TITLE_TEMPLATE_NOT_ALLOWED_TAGS } from './constants';\n\n/**\n * This method creates a new composed variable instance from multiple variables. This is required when we have multiple\n * variables on a single axis and the union of domain of all the variables needs to be set on the axis.\n *\n * To create a new composed variable from multiple fields,\n * ```\n *  const sharedVar = share('open', 'high', 'low', 'close');\n *  canvas.rows([sharedVar])\n *      .columns(['date']);\n * ```\n *\n * @module Operators\n * @public\n * @function share\n * @param {Array} vars Variable names.\n *\n * @return {ComposedVars} Instance of composed variable\n */\nexport const share = (...vars) => new ComposedVars(...vars.map(variable => new SimpleVariable(variable)));\n\n/**\n *\n *\n * @param {*} node\n *\n */\nfunction treeShakeNode (node) {\n    if (node.nodeType !== Node.ELEMENT_NODE) { return; }\n\n    if (TITLE_TEMPLATE_NOT_ALLOWED_TAGS.indexOf(node.tagName.toLowerCase()) !== -1) {\n        node.parentNode.removeChild(node);\n    } else {\n        for (const childNode of node.childNodes) {\n            treeShakeNode(childNode);\n        }\n    }\n}\n\n/**\n * A string template tagged function which sanitizes input html formatted string according to the allowed html tags.\n * This is used to render html in canvas components like title and tooltip.\n *\n * To render html in canvas components,\n * ```\n *     canvas.title(html`<span style=font-size:20px;>TITLE</span>`);\n * ```\n *\n * @public\n * @module Operators\n * @function html\n * @param {Array.<string>} strings - The string parts of the template.\n * @param {Array} exps - The list of evaluated expression values.\n *\n * @return {Function} Returns a function which returns the sanitized html string.\n */\nexport function html (strings, ...exps) {\n    let htmlCode = '';\n    const expLn = exps.length;\n    let i = 0;\n\n    for (; i < expLn; ++i) {\n        htmlCode += strings[i] + exps[i];\n    }\n    htmlCode += strings[i];\n\n    const frag = document.createDocumentFragment();\n    const wrapper = document.createElement('div');\n\n    frag.appendChild(wrapper);\n    wrapper.innerHTML = htmlCode;\n\n    treeShakeNode(wrapper);\n    const { innerHTML } = wrapper;\n\n    return () => innerHTML;\n}\n","import { mergeRecursive, CommonProps } from 'muze-utils';\n\nconst defaultPolicy = (registrableComponents) => {\n    const aliases = registrableComponents.map(comp => comp.alias());\n    return {\n        behaviours: {\n            '*': (propagationPayload) => {\n                const propagationCanvas = propagationPayload.sourceCanvas;\n                return propagationCanvas ? aliases.indexOf(propagationCanvas) !== -1 : true;\n            }\n        }\n    };\n};\n\nconst listenerFn = (canvas, fn) => () => {\n    const valueMatrix = canvas.composition().visualGroup.matrixInstance().value;\n    valueMatrix.each(cell => fn(cell.valueOf().firebolt()));\n};\n\nconst canvasIterator = (canvases, iteratorFn, cFn) => {\n    canvases.forEach((canvas) => {\n        const matrix = canvas.composition().visualGroup.matrixInstance().value;\n        matrix.each(cell => iteratorFn(cell.valueOf().firebolt()));\n        cFn && cFn(canvas);\n        // Also register actions on canvas update\n        const throwback = canvas._throwback;\n\n        throwback.registerImmediateListener([CommonProps.MATRIX_CREATED],\n            listenerFn(canvas, iteratorFn));\n    });\n};\n\n/**\n * This class is initiated only once in lifecycle and is reponsible for regisration of physical and behavioural\n * actions and side effects and the mapping between them.\n *\n * To get the instance of action model\n * ```\n *  const ActionModel = muze.ActionModel;\n * ```\n *\n * @public\n * @module ActionModel\n */\nclass ActionModel {\n    constructor () {\n        this._registrableComponents = [];\n    }\n\n    /**\n     * Takes an array of canvases on which the physical and behavioural actions will get registered.\n     *\n     * @public\n     * @param  {Canvas} components Array of canvases\n     *\n     * @return {ActionModel} Instance of action model.\n     */\n    for (...components) {\n        this._registrableComponents = components;\n        return this;\n    }\n\n    /**\n     * Registers physical actions on the canvases. It takes an object with key as the name of action and value having\n     * the definition of the action.\n     *\n     * To register a {@link PhysicalAction},\n     * ```\n     *  const ActionModel = muze.ActionModel;\n     *  ActionModel\n     *       // Physical actions will be registered on these canvases.\n     *      .for(canvas)\n     *      .registerPhysicalActions({\n     *          // Key is the name of physical action.\n     *          ctrlClick: (firebolt) => (targetEl, behaviours) => {\n     *              targetEl.on('click', function (data) {\n     *                  const event = utils.getEvent();\n     *                  const pos = utils.getClientPoint(event, this);\n     *                  // Get the data point nearest to the mouse position.\n     *                  const nearestPoint = firebolt.context.getNearestPoint(pos, {\n     *                      data\n     *                  });\n     *                  // Prepare the payload\n     *                  const payload = {\n     *                      criteria: nearestPoint.id\n     *                  };\n     *                  behaviours.forEach((behaviour) => firebolt.dispatchBehaviour(behaviour, payload));\n     *              });\n     *          }\n     *      });\n     * ```\n     * @public\n     *\n     * @param {Object} action Names of physical actions and their definitions.\n     *\n     * @return {ActionModel} Instance of the action model.\n     */\n    registerPhysicalActions (action) {\n        canvasIterator(this._registrableComponents, (firebolt) => {\n            firebolt.registerPhysicalActions(action);\n        }, (canvas) => {\n            canvas.firebolt().registerPhysicalActions(action);\n        });\n\n        return this;\n    }\n\n    /**\n     * Registers behavioural actions on the canvases. It takes definitions of the behavioural actions and registers\n     * them on the canvases. Every behavioural action must inherit the {@link GenericBehaviour} class.\n     *\n     * To register a behavioural action\n     * ```\n     *  // Define a new behavioural action\n     *  class SingleSelectBehaviour extends GenericBehaviour {\n     *      static formalName () {\n     *          return 'singleSelect';\n     *      }\n     *\n     *      setSelectionSet (addSet, selectionSet) {\n     *          if (addSet === null) {\n     *              selectionSet.reset();\n     *          } else if (addSet.length) {\n     *              const existingAddSet = selectionSet.getExistingEntrySet(addSet);\n     *              if (existingAddSet.length){\n     *                  selectionSet.reset();\n     *              } else {\n     *               selectionSet.add(addSet);\n     *              }\n     *          } else {\n     *              selectionSet.reset();\n     *          }\n     *      }\n     * }\n     * muze.ActionModel.registerBehaviouralActions(SingleSelectBehaviour);\n     * ```\n     *\n     * @public\n     *\n     * @param {GenericBehaviour} actions Definition of behavioural actions.\n     *\n     * @return {ActionModel} Instance of action model.\n     */\n    registerBehaviouralActions (...actions) {\n        canvasIterator(this._registrableComponents, (firebolt) => {\n            firebolt.registerBehaviouralActions(actions);\n        }, (canvas) => {\n            canvas.firebolt().registerBehaviouralActions(actions);\n        });\n\n        return this;\n    }\n\n    /**\n     * Registers the mapping of physical and behavioural actions. This mapping is used to establish which behavioural\n     * actions should be dispatched on any triggering of physical actions.\n     *\n     * To map physical actions with behavioural actions,\n     * ```\n     *  muze.ActionModel.registerPhysicalBehaviouralMap({\n     *      ctrlClick: {\n     *          behaviours: ['select'] // This array must be the formal names of the behavioural actions.\n     *      }\n     *  });\n     * ```\n     *\n     * @public\n     * @param {Object} map Contains the physical and behavioural action map.\n     * ```\n     *   {\n     *      // Name of the physical action\n     *      click: {\n     *          // Target element selector. This is an optional field. If not passed, then by default takes the\n     *          // container element of visual unit.\n     *          target: '.muze-layers-area path',\n     *          // Behaviours which should be dispatched on triggering of the mapped physical action.\n     *          behaviours: ['select']\n     *      }\n     *   }\n     * ```\n     *\n     * @return {ActionModel} Instance of action model.\n     */\n    registerPhysicalBehaviouralMap (map) {\n        canvasIterator(this._registrableComponents, (firebolt) => {\n            firebolt.registerPhysicalBehaviouralMap(map);\n        }, (canvas) => {\n            canvas.firebolt().registerPhysicalBehaviouralMap(map);\n        });\n        return this;\n    }\n\n    /**\n     * Registers what behaviour to propagate on dispatch of a certain behavioural action. By default, when any\n     * behavioural action is dispatched, then the same behavioural action gets propagated to all the other canvases.\n     * This can be changed using this api.\n     *\n     * To register what behaviour should be propagated on dispatch of any behavioural action,\n     * ```\n     *  ActionModel.for(canvas1, canvas2).registerPropagationBehaviourMap({\n     *      select: 'filter',\n     *      brush: 'filter'\n     *  });\n     * ```\n     *\n     * @public\n     * @param {Object} map Propagation behaviour map.\n     *\n     * @return {ActionModel} Instance of action model.\n     */\n    registerPropagationBehaviourMap (map) {\n        canvasIterator(this._registrableComponents, (firebolt) => {\n            firebolt.registerPropagationBehaviourMap(map);\n        }, (canvas) => {\n            canvas.firebolt().registerPropagationBehaviourMap(map);\n        });\n\n        return this;\n    }\n\n    /**\n     * Registers the mapping of side effects and behavioural actions. It takes an object which contains key as the\n     * name of behavioural action and the side effects which will be linked to it.\n     *\n     * To map side effects to select behaviour,\n     * ```\n     *  muze.ActionModel.mapSideEffects({\n     *      select: ['infoBox'] // This array must be the formal names of the side effects\n     *  });\n     * ```\n     *\n     * To map side effects to select behaviour, but disable all the default side effects attached with this behaviour,\n     * ```\n     *  muze.ActionModel.mapSideEffects({\n     *      select: {\n     *          effects: ['infoBox'],\n     *          preventDefaultActions: true\n     *      }\n     *  });\n     * @public\n     * @param {Object} map Mapping of behavioural actions and side effects.\n     * ```\n     *     {\n     *          select: ['infoBox']\n     *     }\n     * ```\n     * @return {ActionModel} Instance of action model.\n     */\n    mapSideEffects (map) {\n        canvasIterator(this._registrableComponents, (firebolt) => {\n            firebolt.mapSideEffects(map);\n        }, (canvas) => {\n            canvas.firebolt().mapSideEffects(map);\n        });\n        return this;\n    }\n\n    /**\n     * Registers the side effects on the registered canvases. It takes definitions of side effects and registers them\n     * on the canvases. Every side effect must inherit the base class {@link GenericSideEffect} or\n     * {@link SpawnableSideEffect} or {@link SurrogateSideEffect} class.\n     *\n     * ```\n     * // Define a custom side effect\n     *  class InfoBox extends SpawnableSideEffect {\n     *      static formalName () {\n     *          return 'infoBox';\n     *      }\n     *\n     *      apply (selectionSet) {\n     *      }\n     *  }\n     *  muze.ActionModel.registerSideEffects(InfoBox);\n     * ```\n     * @public\n     * @param  {GenericSideEffect} sideEffects Definition of side effects.\n     *\n     * @return {ActionModel} Instance of action model.\n     */\n    registerSideEffects (...sideEffects) {\n        canvasIterator(this._registrableComponents, (firebolt) => {\n            firebolt.registerSideEffects(sideEffects);\n        }, (canvas) => {\n            canvas.firebolt().registerSideEffects(sideEffects);\n        });\n        return this;\n    }\n\n    /**\n     * Breaks the link between behavioural actions and physical actions. It takes an array of behavioural action\n     * and it's physical action.\n     *\n     * To dissociate behavioural actions from physical actions\n     * ```\n     *  muze.ActionModel.dissociateBehaviour(['select', 'click'], ['highlight', 'hover']);\n     * ```\n     * @public\n     * @param  {Array} maps Array of behavioural action and physical action.\n     *\n     * @return {ActionModel} Instance of action model.\n     */\n    dissociateBehaviour (...maps) {\n        canvasIterator(this._registrableComponents, (firebolt) => {\n            maps.forEach(val => firebolt.dissociateBehaviour(val[0], val[1]));\n        }, (canvas) => {\n            maps.forEach(val => canvas.firebolt().dissociateBehaviour(val[0], val[1]));\n        });\n        return this;\n    }\n\n    /**\n     * Breaks the link between side effects and behavioural actions. It takes an array of formal names of the side\n     * effects and it's linked behavioural action.\n     *\n     * To dissociate side effects from behavioural actions\n     * ```\n     *  muze.ActionModel.dissociateSideEffect(['crossline', 'highlight'], ['selectionBox', 'brush']);\n     * ```\n     * @public\n     * @param  {Array} maps Array of side effects and behavioural actions.\n     *\n     * @return {ActionModel} Instance of action model.\n     */\n    dissociateSideEffect (...maps) {\n        canvasIterator(this._registrableComponents, (firebolt) => {\n            maps.forEach(val => firebolt.dissociateSideEffect(val[0], val[1]));\n        }, (canvas) => {\n            maps.forEach(val => canvas.firebolt().dissociateSideEffect(val[0], val[1]));\n        });\n        return this;\n    }\n\n    /**\n     * By default cross interactivity is disabled between canvases. This enables cross interaction between the canvases\n     * so that any action happening in one canvas gets dispatched on other canvases as well. An optional policy can also\n     * be passed in this method. The policy can be used to control on which canvases the behavioural actions and\n     * side effects gets dispatched.\n     *\n     * To just enable cross interactivity between two canvases,\n     * ```\n     *  ActionModel.for(canvas1, canvas2)\n     *      .enableCrossInteractivity();\n     * ```\n     *\n     * To enable cross interactivity but enable any behavioural action only when it is triggered from canvas1.\n     * ```\n     *  ActionModel.for(canvas1, canvas2)\n     *      .enableCrossInteractivity({\n     *          behaviours: {\n     *              // Here * stands for any behavioural action name. We can also give any name of behavioural action\n     *              // in place of this.\n     *              '*': (propPayload, context) => {\n     *                  return propPayload.sourceCanvas === canvas1.alias();\n     *              }\n     *          }\n     *      });\n     * ```\n     *\n     * To enable cross interactivity but enable tooltip effect if the action is propagated from canvas1,\n     * ```\n     *  ActionModel.for(canvas1, canvas2)\n     *      .enableCrossInteractivity({\n     *          sideEffects: {\n     *              tooltip: (propPayload, context) => {\n     *                  return propPayload.sourceCanvas === canvas1.alias();\n     *              }\n     *          }\n     *      });\n     * ```\n     * @public\n     * @param {Object} policy Policy definition.\n     *\n     * @return {ActionModel} Instance of action model.\n     */\n    enableCrossInteractivity (policy = {}) {\n        const registrableComponents = this._registrableComponents;\n        const mergedPolicy = mergeRecursive(mergeRecursive({}, defaultPolicy(registrableComponents)), policy);\n\n        registrableComponents.forEach((canvas) => {\n            canvas.firebolt().crossInteractionPolicy(mergedPolicy);\n        });\n\n        return this;\n    }\n}\n\nexport const actionModel = (() => new ActionModel())();\n","import { MUZE_PREFIX } from '../constants';\n\nexport const TITLE_CONFIG = {\n    position: 'top',\n    align: 'left',\n    padding: 4,\n    className: `${MUZE_PREFIX}-title-container`\n};\n\nexport const SUB_TITLE_CONFIG = {\n    position: 'top',\n    align: 'left',\n    padding: 16,\n    maxLines: 2,\n    className: `${MUZE_PREFIX}-subtitle-container`\n};\n\nexport const GRID = 'grid';\n\nexport const CANVAS = 'canvas';\n\nexport const LAYOUT_ALIGN = {\n    TOP: 'top',\n    LEFT: 'left',\n    RIGHT: 'right',\n    BOTTOM: 'bottom'\n};\n","import { mergeRecursive, DataModel } from 'muze-utils';\nimport {\n    ROWS,\n    COLUMNS,\n    COLOR,\n    SHAPE,\n    SIZE,\n    DETAIL,\n    LAYERS,\n    TRANSFORM,\n    TITLE,\n    SUB_TITLE\n} from '../constants';\nimport { TITLE_CONFIG, SUB_TITLE_CONFIG } from './defaults';\n/**\n * This is the local options semantics based on which setters getters are created and reactivity is initiated.\n * This local object is only valid for Canvas.\n * Canvas merges global and local object both to the model\n *\n * Format\n *  PROPERTRY_NAME: {\n *      value: // default value of the property,\n *      meta: {\n *          typeCheck: // The setter value will be checked using this. If the value is function then the setter value\n *                     // is passed as args.\n *          typeExpected: // The output of typecheck action will be tested against this. Truthy value will set the\n *                       // value to the setter\n *          sanitizaiton: // Need for sanitization before type is checked\n *      }\n *  }\n *\n * @module LocalOptions\n */\n\nexport const localOptions = {\n    [ROWS]: {\n        value: null,\n        meta: {\n            typeCheck: 'constructor',\n            typeExpected: 'Array'\n        }\n    },\n    [COLUMNS]: {\n        value: null,\n        meta: {\n            typeCheck: 'constructor',\n            typeExpected: 'Array'\n        }\n    },\n    data: {\n        value: null,\n        meta: {\n            typeCheck: d => d instanceof DataModel,\n            sanitization: (dm, prevDm) => {\n                prevDm && prevDm.dispose();\n                let sanitizedDm = dm;\n                if (dm instanceof DataModel) {\n                    sanitizedDm = dm.project(dm.getSchema().map(d => d.name));\n                }\n                return sanitizedDm;\n            }\n        }\n    },\n    [COLOR]: {\n        value: null,\n        meta: {\n            typeCheck: 'constructor',\n            typeExpected: 'Object',\n            sanitization: (config) => {\n                if (typeof config === 'string' || !config) {\n                    return {\n                        field: config\n                    };\n                }\n                return config;\n            }\n        }\n    },\n    [SHAPE]: {\n        value: null,\n        meta: {\n            typeCheck: 'constructor',\n            typeExpected: 'Object',\n            sanitization: (config) => {\n                if (typeof config === 'string' || !config) {\n                    return {\n                        field: config\n                    };\n                }\n                return config;\n            }\n        }\n    },\n    [SIZE]: {\n        value: null,\n        meta: {\n            typeCheck: 'constructor',\n            typeExpected: 'Object',\n            sanitization: (config) => {\n                if (typeof config === 'string' || !config) {\n                    return {\n                        field: config\n                    };\n                }\n                return config;\n            }\n        }\n    },\n    [DETAIL]: {\n        value: [],\n        meta: {\n            typeCheck: 'constructor',\n            typeExpected: 'Array'\n        }\n    },\n\n    [LAYERS]: {\n        value: [],\n        meta: {\n            typeCheck: 'constructor',\n            typeExpected: 'Array'\n        }\n    },\n    [TRANSFORM]: {\n        value: null,\n        meta: {\n            typeCheck: 'constructor',\n            typeExpected: 'Object'\n        }\n    }\n};\n\nexport const canvasOptions = {\n    [TITLE]: {\n        value: [null, null],\n        meta: {\n            typeCheck: ['constructor', 'constructor'],\n            typeExpected: ['Function', 'Object'],\n            spreadParams: true,\n            sanitization: [(title) => {\n                if (typeof title === 'string' || !title) {\n                    const t = () => title;\n                    return t;\n                }\n                return title;\n            }, (titleConfig) => {\n                const defConfig = mergeRecursive({}, TITLE_CONFIG);\n                return mergeRecursive(defConfig, titleConfig);\n            }]\n        }\n    },\n    [SUB_TITLE]: {\n        value: [null, null],\n        meta: {\n            typeCheck: ['constructor', 'constructor'],\n            typeExpected: ['Function', 'Object'],\n            spreadParams: true,\n            sanitization: [(subtitle) => {\n                if (typeof subtitle === 'string' || !subtitle) {\n                    const sub = () => subtitle;\n                    return sub;\n                }\n                return subtitle;\n            }, (subtitleConfig) => {\n                const defConfig = mergeRecursive({}, SUB_TITLE_CONFIG);\n                return mergeRecursive(defConfig, subtitleConfig);\n            }]\n        }\n    }\n};\n","export default class LayoutComponent {\n    constructor (name, dimensions, seed) {\n        this._seed = seed;\n        this._boundBox = {\n            height: dimensions.height,\n            width: dimensions.width,\n            top: null,\n            left: null\n        };\n        this._renderAt = null;\n        this._alignWith = null;\n        this._alignment = null;\n        this._target = null;\n        this._position = null;\n        this._componentName = name;\n        this._className = null;\n    }\n\n    getLogicalSpace () {\n        throw new Error('getLogicalSpace is not defined');\n    }\n\n    setSpatialConfig () {\n        throw new Error('setSpatialSpace is not defined');\n    }\n\n    name (param) {\n        if (param) {\n            this._componentName = param;\n        }\n        return this._componentName;\n    }\n\n    target (param) {\n        if (param) {\n            this._target = param;\n        }\n        return this._target;\n    }\n\n    position (param) {\n        if (param) {\n            this._position = param;\n        }\n        return this._position;\n    }\n\n    alignment (param) {\n        if (param) {\n            this._alignment = param;\n        }\n        return this._alignment;\n    }\n\n    alignWith (param) {\n        if (param) {\n            this._alignWith = param;\n        }\n        return this._alignWith;\n    }\n\n    renderAt (param) {\n        if (param) {\n            this._renderAt = param;\n        }\n        return this._renderAt;\n    }\n\n    boundBox (param) {\n        if (param) {\n            Object.assign(this._boundBox, param);\n        }\n        return this._boundBox;\n    }\n\n    className (param) {\n        if (param) {\n            this._className = param;\n        }\n        return this._className;\n    }\n\n    draw () {\n        throw new Error('draw is not defined');\n    }\n  }\n\n","import LayoutComponent from './layoutComponent';\n\nclass DummyComponent extends LayoutComponent {\n    getLogicalSpace () {\n        return {\n            width: this.boundBox().width,\n            height: this.boundBox().height\n        };\n    }\n\n    setSpatialConfig (conf) {\n        this.boundBox({ top: conf.y, left: conf.x });\n        this.newDimensions = {\n            width: conf.width,\n            height: conf.height\n        };\n        this.renderAt(conf.renderAt);\n        return this;\n    }\n\n    draw () {\n        if (!this.component) {\n            throw new Error(`Component not set for ${this.componentName}`);\n        }\n        this.component.mount(document.getElementById(this.renderAt)); // Change the draw method to component draw\n        return this;\n    }\n}\n\nexport default DummyComponent;\n","export const DEFAULT_CONFIG = {\n    classPrefix: 'muze',\n    interaction: {\n        sideEffect: 'individual'\n    },\n    pagination: 'scroll',\n    scrollBar: {\n        thickness: 10,\n        speed: 2,\n        vertical: {\n            align: 'right'\n        },\n        horizontal: {\n            align: 'bottom'\n        }\n    },\n    legend: {\n        position: 'right',\n        color: {\n            show: true,\n            padding: 1,\n            margin: 3,\n            border: 1,\n            height: 20,\n            width: 20\n        },\n        shape: {\n            show: true,\n            padding: 1,\n            margin: 3,\n            border: 1,\n            height: 20,\n            width: 20\n        },\n        size: {\n            show: true,\n            padding: 1,\n            margin: 3,\n            border: 1,\n            height: 20,\n            width: 20\n        }\n    },\n    sort: {\n        disabled: false\n    },\n    showHeaders: false,\n    minWidth: 100,\n    minHeight: 100,\n    facet: {\n        rows: {\n            minCharacters: 3\n        },\n        columns: {\n            maxLines: 2,\n            verticalAlign: 'middle',\n            minCharacters: 1\n        }\n    },\n    border: {\n        style: 'solid',\n        color: '#d6d6d6',\n        width: 2,\n        collapse: true,\n        spacing: 0\n    },\n    autoGroupBy: {\n        disabled: false\n    },\n    invalidValues: {}\n};\n","import { DEFAULT_CONFIG } from '../../../../muze/src/defaults';\n\nconst DEFAULT_WIDTH = 600;\nconst DEFAULT_HEIGHT = 400;\nconst DEFAULT_CLASS_NAME = `${DEFAULT_CONFIG.classPrefix}-layout-container-component`;\nconst NODE_PREFIX = `${DEFAULT_CONFIG.classPrefix}-layout-container`;\n\nexport {\n  DEFAULT_WIDTH,\n  DEFAULT_HEIGHT,\n  DEFAULT_CLASS_NAME,\n  NODE_PREFIX\n};\n","export default class DefinitionModel {\n    constructor (config) {\n        this._host = config.host || null;\n        this._cut = config.cut || null;\n        this._ratioWeight = config.ratioWeight === 0 ? 0 : config.ratioWeight || 1;\n        this._preferred = config.preferred || false;\n        this._lanes = config.lanes || [];\n        this._remainingHeight = 0;\n        this._remainingWidth = 0;\n    }\n\n    host (host) {\n        if (host) {\n            this._host = host;\n        }\n        return this._host;\n    }\n\n    preferred (preferred) {\n        if (preferred) {\n            this._preferred = preferred;\n        }\n        return this._preferred;\n    }\n\n    cut (cut) {\n        if (cut) {\n            this._cut = cut;\n        }\n        return this._cut;\n    }\n\n    ratioWeight (ratioWeight) {\n        if (ratioWeight) {\n            this._ratioWeight = ratioWeight;\n        }\n        return this._ratioWeight;\n    }\n\n    lanes (lanes) {\n        if (lanes) {\n            this._lanes = lanes;\n        }\n        return this._lanes;\n    }\n\n    remainingHeight (remainingHeight) {\n        if (remainingHeight) {\n            this._remainingHeight = remainingHeight;\n        }\n        return this._remainingHeight;\n    }\n\n    remainingWidth (remainingWidth) {\n        if (remainingWidth) {\n            this._remainingWidth = remainingWidth;\n        }\n        return this._remainingWidth;\n    }\n}\n","import { NODE_PREFIX } from '../../constants/defaults';\nimport DefinitionModel from '../definition-manager/definitionModel';\nimport DummyComponent from '../../layout-component/dummy-component';\n/**\n * Compares two strings in lowercase\n *\n * @export\n * @param {string} value the value to be compared\n * @param {string} compareTo whom the value would be compared\n * @return {boolean} true if values are equal\n */\nexport function isEqual (value, compareTo) {\n    if (typeof value !== 'string' || typeof compareTo !== 'string') {\n        throw new TypeError('value and compareTo must be string');\n    }\n    return value.toLowerCase() === compareTo.toLowerCase();\n}\n\nexport const getNodeId = (() => {\n    let _uid = 0;\n    return () => `${NODE_PREFIX}-${++_uid}`;\n})();\n\nexport function yExtraSpace (node) {\n    let smallestHeight = 0;\n    if (node.getCutType() === 'v') {\n        smallestHeight = smallestExtraHeightHorizontally(node); // eslint-disable-line no-use-before-define\n    } else if (node.getCutType() === 'h') {\n        node.children().forEach((child) => {\n            smallestHeight += yExtraSpace(child);\n        });\n    } else if (node.model().host() && node.model().host().getLogicalSpace) {\n        const containerHeight = node.boundBox().height;\n        const hostHeight = node.model().host().getLogicalSpace().height;\n\n        smallestHeight = containerHeight - hostHeight;\n        if (smallestHeight < 0) {\n            smallestHeight = 0;\n        }\n    } else {\n        smallestHeight = 0;\n    }\n    return smallestHeight;\n}\n\nexport function smallestExtraHeightHorizontally (node) {\n    let smallestHeight = Number.MAX_SAFE_INTEGER;\n    node.children().forEach((child) => {\n        const h = yExtraSpace(child);\n        if (h < smallestHeight) {\n            smallestHeight = h;\n        }\n    });\n    return smallestHeight;\n}\n\nexport function xExtraSpace (node) {\n    let smallestWidth = 0;\n    if (node.getCutType() === 'h') {\n        smallestWidth = smallestExtraWidthVertically(node); // eslint-disable-line no-use-before-define\n    } else if (node.getCutType() === 'v') {\n        node.children().forEach((child) => {\n            smallestWidth += xExtraSpace(child);\n        });\n    } else if (node.model().host() && node.model().host().getLogicalSpace) {\n        const containerWidth = node.boundBox().width;\n        const hostWidth = node.model().host().getLogicalSpace().width;\n        smallestWidth = containerWidth - hostWidth;\n        if (smallestWidth < 0) {\n            smallestWidth = 0;\n        }\n    } else {\n        smallestWidth = 0;\n    }\n    return smallestWidth;\n}\n\nexport function smallestExtraWidthVertically (node) {\n    let smallestWidth = Number.MAX_SAFE_INTEGER;\n    node.children().forEach((child) => {\n        const w = xExtraSpace(child);\n        if (w < smallestWidth) {\n            smallestWidth = w;\n        }\n    });\n    return smallestWidth;\n}\n\nexport function determineBoundBox (bb, i, arr, instance) {\n    if (i) {\n    // if not first sibling, take boundbox from previous sibling\n        const lastSibling = arr[i - 1];\n        const { top: _top, left: _left, height: _height, width: _width } = lastSibling.boundBox();\n        return {\n            width: bb.width,\n            height: bb.height,\n\n            top: instance.parentCut() === 'h'\n        ? _top + _height : _top,\n\n            left: instance.parentCut() === 'h'\n        ? _left : _left + _width\n        };\n    }\n  // if first sibling, take boundbox from parent\n    const { top: _top, left: _left } = instance.parent().boundBox();\n    return {\n        width: bb.width,\n        height: bb.height,\n        top: _top,\n        left: _left\n    };\n}\n\n// prepares the targetComponent Map for target Mapping ie. where a component should lie\nexport function prepareTargetComponentMap (context) {\n    context.targetComponentMap(new Map());\n    context.componentMap().forEach((value) => {\n        if (context.targetComponentMap().has(value.target())) {\n            context.targetComponentMap().get(value.target()).push(value);\n        } else {\n            const temp = [];\n            temp.push(value);\n            context.targetComponentMap().set(value.target(), temp);\n        }\n    });\n}\n\nexport function getComponent (canvasComponent, componentName) {\n    const comp = canvasComponent.find(component => component.name() === componentName);\n    return (comp && comp !== -1) ? comp : null;\n}\nexport function createPlaceHolderComponent (height, width, position) {\n    const comp = new DummyComponent(0, { height, width });\n    comp.name('placeHolder');\n    comp.position(position);\n    return comp;\n}\n\nexport function placeComponent (definitionModel, component, isPreferred = false, isGridComponent = false) {\n    let cut = '';\n    let componentRatioWidth = 1;\n    let leftOvercomponentRationWidth = 1;\n    let leftHeight = 0;\n    let leftWidth = 0;\n\n    if (!component) {\n        return { first: definitionModel, second: definitionModel };\n    }\n\n    const { height: componentHeight, width: componentWidth } = component.getLogicalSpace();\n    const position = component.position();\n    if (position === 'top' || position === 'bottom') {\n        cut = 'h';\n        componentRatioWidth = componentHeight / definitionModel.remainingHeight();\n        leftHeight = definitionModel.remainingHeight() - componentHeight;\n        leftWidth = definitionModel.remainingWidth();\n    } else {\n        cut = 'v';\n        componentRatioWidth = componentWidth / definitionModel.remainingWidth();\n        leftWidth = definitionModel.remainingWidth() - componentWidth;\n        leftHeight = definitionModel.remainingHeight();\n    }\n    leftOvercomponentRationWidth = 1 - componentRatioWidth;\n\n// update parentModel\n    definitionModel.cut(cut);\n    const firstLaneConfig = {\n        host: component.name(),\n        cut: null,\n        ratioWeight: componentRatioWidth,\n        preferred: isGridComponent ? false : isPreferred,\n        lanes: []\n    };\n    const firstLane = new DefinitionModel(firstLaneConfig);\n    firstLane.remainingHeight(componentHeight);\n    firstLane.remainingWidth(componentWidth);\n\n    const secondLaneConfig = {\n        host: null,\n        cut: null,\n        ratioWeight: leftOvercomponentRationWidth,\n        preferred: isGridComponent ? false : !isPreferred,\n        lanes: []\n    };\n    const secondLane = new DefinitionModel(secondLaneConfig);\n    secondLane.remainingHeight(leftHeight);\n    secondLane.remainingWidth(leftWidth);\n    if (isPreferred) {\n        definitionModel.lanes([firstLane]);\n    } else if (position === 'top' || position === 'left') {\n        definitionModel.lanes([firstLane, secondLane]);\n    } else {\n        definitionModel.lanes([secondLane, firstLane]);\n    }\n    return { first: firstLane, second: secondLane };\n}\n\nexport function placeGridComponent (definitionModel, gridComponents) {\n    let tempDefModel = definitionModel;\n    const rows = gridComponents.length;\n    const column = rows ? gridComponents[0].length : 0;\n    const height = gridComponents.reduce((acc, val) => (acc + val[0].getLogicalSpace().height), 0);\n\n    for (let i = 0; i < column; i++) {\n        const iscolumnPreffered = i === column - 1;\n        const columnPlaceHolderComponent = createPlaceHolderComponent(height,\n                                                    gridComponents[0][i].getLogicalSpace().width, 'left');\n        const { first, second } = placeComponent(tempDefModel, columnPlaceHolderComponent, iscolumnPreffered);\n        tempDefModel = first;\n        for (let j = 0; j < rows; j++) {\n            const rowpreffred = j === (rows - 1);\n            tempDefModel = placeComponent(tempDefModel, gridComponents[j][i], rowpreffred, true).second;\n        }\n        tempDefModel = second;\n    }\n    return tempDefModel;\n}\n\nexport function negotiateDimension (node) {\n    let preferred;\n    let cumultiveExtraSpaceAmt = 0;\n    let alteredDim;\n    let nonAlteredDim;\n\n    const childrenLength = node.children().length;\n\n    for (let index = 0; index < childrenLength; index++) {\n        let fn;\n        let extraSpaceAmt;\n        const child = node.children()[index];\n\n        if (child.parentCut() === 'h') {\n            fn = yExtraSpace;\n            alteredDim = 'height';\n            nonAlteredDim = 'width';\n        } else {\n            fn = xExtraSpace;\n            alteredDim = 'width';\n            nonAlteredDim = 'height';\n        }\n  // if vertical then get extra height from other node and push it to the preferred node.\n  // for horizontal cut the same thing is to be done with width\n        if (child.isPreferred()) {\n    // push extra space in sink. Execute it when all non preferred space are computed.\n            preferred = child;\n\n            continue; // eslint-disable-line no-continue\n        }\n  // reduce own height and save it in a var\n        cumultiveExtraSpaceAmt += (extraSpaceAmt = fn(child));\n        child.boundBox()[alteredDim] -= extraSpaceAmt;\n  // update nonaltered dim from parent for any change which happened during negotiation\n        child.boundBox()[nonAlteredDim] = child.parent().boundBox()[nonAlteredDim];\n\n        negotiateDimension(child);\n    }\n\n    if (preferred) {\n        preferred.boundBox()[alteredDim] += cumultiveExtraSpaceAmt;\n        preferred.boundBox()[nonAlteredDim] = preferred.parent().boundBox()[nonAlteredDim];\n        negotiateDimension(preferred);\n    }\n}\n\nexport function computePosition (node) {\n    node.children().forEach((child, i, children) => {\n        const boundBox = determineBoundBox(child.boundBox(), i, children, child);\n        child.boundBox(boundBox);\n        computePosition(child);\n    });\n}\n\nexport function allocateBoundingBox (node) {\n    const totalWeight = node.children()\n                            .map(child => child.model().ratioWeight())\n                            .reduce((carry, val) => carry + val, 0);\n\n    node.children().forEach((child, i, children) => {\n        const lastSibling = children[i - 1];\n        const ratio = child.model().ratioWeight() / totalWeight;\n\n        if (child.parentCut() === 'h') {\n            child.boundBox({\n                top: i ? lastSibling.boundBox().top + lastSibling.boundBox().height : 0,\n                left: child.parent().boundBox().left,\n                height: child.parent().boundBox().height * ratio,\n                width: child.parent().boundBox().width\n            });\n        } else {\n            child.boundBox({\n                top: child.parent().boundBox().top,\n                left: i ? lastSibling.boundBox().left + lastSibling.boundBox().width : 0,\n                height: child.parent().boundBox().height,\n                width: child.parent().boundBox().width * ratio\n            });\n        }\n        allocateBoundingBox(child);\n    });\n}\n\n","import { getNodeId } from '../helper';\nimport { LayoutComponent } from '../../layout-component';\n\nclass Node {\n    constructor (data) {\n        this._model = data;\n        this._parent = null;\n        this._children = [];\n        this._parentCut = null;\n        this._boundBox = {\n            top: null,\n            left: null,\n            height: null,\n            width: null\n        };\n\n        this._id = this._model.host() instanceof LayoutComponent && this._model.host().renderAt() ?\n                    this._model.host().renderAt() :\n                    getNodeId();\n    }\n\n    addChildren (entries) {\n        this._children.push(...entries);\n        entries.forEach((e) => { e.parent(this); });\n    }\n\n    isRoot () {\n        return this._parent === null;\n    }\n\n    isLeaf () {\n        return !this._children.length;\n    }\n\n    getCutType () {\n        return this._model.cut();\n    }\n\n    isPreferred () {\n        return !!this._model.preferred();\n    }\n\n    children (children) {\n        if (children) {\n            this._children = children;\n        }\n        return this._children;\n    }\n\n    parent (parent) {\n        if (parent) {\n            this._parent = parent;\n        }\n        return this._parent;\n    }\n\n    parentCut (parentCut) {\n        if (parentCut) {\n            this._parentCut = parentCut;\n        }\n        return this._parentCut;\n    }\n\n    id (id) {\n        if (id) {\n            this._id = id;\n        }\n        return this._id;\n    }\n\n    model (model) {\n        if (model) {\n            this._model = model;\n        }\n        return this._model;\n    }\n\n    boundBox (bound) {\n        if (bound) {\n            this._boundBox = {\n                top: bound.top,\n                left: bound.left,\n                height: bound.height,\n                width: bound.width\n            };\n        }\n        return this._boundBox;\n    }\n  /**\n     * function to search a node and update it with the config provided.\n     * @param  {Object} nodeconfig\n     */\n    updateNode (nodeconfig) {\n        if (this._id === nodeconfig._id) {\n            this._model.cut(nodeconfig.cut);\n            this._model.ratioWeight(nodeconfig.ratioWeight);\n        } else {\n            this._children.forEach((node) => {\n                if (node._id === nodeconfig._id) {\n                    node.model.cut(nodeconfig.cut);\n                    node.model.ratioWeight(nodeconfig.ratioWeight);\n                    return;\n                }\n                this.searchNode(node, nodeconfig);\n            });\n        }\n    }\n\n  // Recursive function to search a node\n    searchNode (node, nodeconfig) {\n        node.children().forEach((childNode) => {\n            if (childNode.id() === nodeconfig._id) {\n                childNode.model().cut(nodeconfig.cut);\n                childNode.model().ratioWeight(nodeconfig.ratioWeight);\n            } else {\n                this.searchNode(childNode, nodeconfig);\n            }\n        });\n    }\n\n  /**\n     * function to delete a node from tree Structure.\n     * @param  {String} nodeId - node Id of the Node\n     */\n    delete (nodeId) {\n        this._children.forEach((node) => {\n            if (node.id() === nodeId) {\n                const index = this._children.indexOf(node);\n                this._model.lanes().splice(index, 1);\n            }\n            this.deleteSearchNode(node, nodeId);\n        });\n    }\n\n  // Recursive function to search a node\n    deleteSearchNode (node, nodeId) {\n        node.children().forEach((childNode) => {\n            if (childNode.id() === nodeId) {\n                const index = node.children().indexOf(childNode);\n                node.model().lanes().splice(index, 1);\n            } else {\n                this.deleteSearchNode(childNode, nodeId);\n            }\n        });\n    }\n}\n\nexport default Node;\n","import Node from '../tree';\nimport {\n    allocateBoundingBox,\n    negotiateDimension,\n    computePosition\n} from '../helper';\n\nexport default class LayoutModel {\n    constructor (measurements, config) {\n        this._measurements = measurements;\n        this._config = config;\n        this._root = this.createTree(this._config, null);\n        this.setBoundBox();\n    }\n\n    createTree (config, parent) {\n        const node = new Node(config);\n        if (parent) {\n            node.parentCut(parent.getCutType());\n            parent.addChildren([node]);\n        } else {\n            this._root = node;\n        }\n        for (const lane of config.lanes()) {\n            this.createTree(lane, node);\n        }\n\n        return this._root;\n    }\n\n    setBoundBox () {\n        this._root.boundBox({\n            top: 0,\n            left: 0,\n            width: this._measurements.width,\n            height: this._measurements.height\n        });\n        allocateBoundingBox(this._root);\n    }\n\n    setHostPosition (node) {\n        node.children().forEach((child) => {\n            LayoutModel.setHostSpatialConfig(child);\n            this.setHostPosition(child);\n        });\n    }\n\n    static setHostSpatialConfig (node) {\n        const bb = node.boundBox();\n        const host = node.model().host();\n        if (host && host.setSpatialConfig) {\n            const conf = {\n                x: bb.left,\n                y: bb.top,\n                width: bb.width,\n                height: bb.height,\n                renderAt: node.id()\n            };\n            host.setSpatialConfig(conf);\n        }\n    }\n\n    negotiate () {\n        negotiateDimension(this._root);\n        computePosition(this._root);\n        return this;\n    }\n\n    broadcast () {\n        this.setHostPosition(this._root);\n        return this;\n    }\n\n    tree () {\n        return this._root;\n    }\n}\n","/* eslint no-undef: \"off\" */\n/* eslint default-case: \"off\" */\nexport class Utils {\n    static isDOMElement (element) {\n        return element instanceof Element;\n    }\n\n    static getID (element) {\n        return element.id;\n    }\n\n    static getElement (id) {\n        return document.getElementById(id);\n    }\n\n    static findContainer (data) {\n        return data.filter(coordinate => coordinate.parent == null)[0];\n    }\n  /**\n   * static method to remove the div\n   * @param  {} divId - div ID to be removed.\n   */\n    static removeDiv (divId) {\n        if (document.getElementById(divId) !== null) { document.getElementById(divId).remove(); }\n    }\n}\n","import { DEFAULT_CLASS_NAME } from '../constants/defaults';\nimport { LayoutComponent } from '../layout-component';\n\nexport default class DataPoint {\n    constructor (node) {\n        this._node = node;\n        this._className = node.model().host() instanceof LayoutComponent ?\n                            node.model().host().className() : DEFAULT_CLASS_NAME;\n    }\n\n    node () {\n        return this._node;\n    }\n\n    hasHost () {\n        return this._node.model().host() instanceof LayoutComponent;\n    }\n\n    className () {\n        return this._className || DEFAULT_CLASS_NAME;\n    }\n}\n","import { getnodePoints } from './helper';\n\nexport class DataParser {\n    constructor (data) {\n        this._data = data;\n    }\n\n    defaultDataPointLogic () {\n        const nodepoints = [];\n        getnodePoints(this._data, nodepoints);\n        return nodepoints;\n    }\n\n}\n","import DataPoint from './data-point';\n\nexport const getnodePoints = (node, nodepoints) => {\n    const datapoint = new DataPoint(node);\n    nodepoints.push(datapoint);\n    node.children().forEach((child) => {\n        getnodePoints(child, nodepoints);\n    });\n};\n","import { DataParser } from './data-parser';\n\nexport class HTMLDataAdapter extends DataParser {\n    getCoordinates () {\n        return super.defaultDataPointLogic();\n    }\n}\n","export class Renderer {\n\n    initRenderer (node, tree) {\n        node.__logicalTree = tree;\n    }\n}\n","import { HTMLDataAdapter } from '../data-adapters/html-data';\nimport { Utils } from '../utils';\nimport { Renderer } from './renderer';\n\nexport class HTMLRenderer extends Renderer {\n    constructor (data) {\n        super();\n        this._data = data;\n        this._coordinates = new HTMLDataAdapter(this._data).getCoordinates();\n    }\n\n    createhtml (mount, className) {\n        const mainDiv = mount;\n        super.initRenderer(mainDiv, this._data); // Initialise node with layout id\n        this.parentDiv = this.createAndCustomiseParent(className);\n        this._coordinates.forEach((node) => {\n            if (node.hasHost()) {\n                const host = node.node();\n                this.parentDiv.appendChild(this.createAndPositionDiv({ ...host.boundBox(),\n                    id: host.id(),\n                    className: node.className() }));\n            }\n        });\n        mainDiv.appendChild(this.parentDiv);\n    }\n\n    createAndPositionDiv (config) {\n        const { top, left, height, width, className, id } = config;\n        const existingDiv = document.getElementById(id);\n        const div = existingDiv || document.createElement('div');\n        div.style.position = 'absolute';\n        div.style.left = `${left}px`;\n        div.style.top = `${top}px`;\n        div.style.height = `${height}px`;\n        div.style.width = `${width}px`;\n        div.id = id;\n        div.className = className;\n        return div;\n    }\n\n    createAndCustomiseParent (className) {\n        const container = Utils.findContainer(this._coordinates);\n        const host = container.node();\n        const parentDiv = this.createAndPositionDiv({ ...host.boundBox(),\n            id: host.id(),\n            className: container.className() });\n        parentDiv.className = className;\n        parentDiv.style.position = 'relative';\n        return parentDiv;\n    }\n\n    coordinates () {\n        return this._coordinates;\n    }\n}\n","import { selectElement } from 'muze-utils';\nimport { HTMLRenderer } from '../renderers/html-renderer';\nimport { LayoutComponent } from '../layout-component';\n\nexport const getChildNode = (context, config) =>\n                        context.renderer().createAndPositionDiv(config);\n\nexport const findNode = (context, nodeID) =>\n                        context.renderer().coordinates().find(point => point.node().id() === nodeID);\n\nexport const renderHTML = (context) => {\n    context.renderer(new HTMLRenderer(context.data()));\n    context.renderer().createhtml(context.mount(), context.className());\n};\n\nexport const drawLayout = (context) => {\n    switch (context.renderer()) {\n    case 'html' :\n        renderHTML(context);\n        break;\n    default:\n        renderHTML(context);\n    }\n};\n\nexport const drawComponent = (componentData) => {\n    componentData.children().forEach((node) => {\n        const host = node.model().host();\n        if (host instanceof LayoutComponent) {\n            host.draw();\n        }\n        drawComponent(node);\n    });\n};\n\nexport const removeElement = (elemID) => {\n    if (elemID) {\n        selectElement(`#${elemID}`).remove();\n    }\n};\n\nexport const resolveAligment = (context, componentData) => {\n    componentData.children().forEach((component) => {\n        const host = component.model().host();\n        if (host instanceof LayoutComponent && host.alignWith()) {\n            let newNodeConfig = {};\n            const point = findNode(context, component.id()).node();\n            const node = point.boundBox();\n            const refNode = findNode(context, context.componentMap().get(host.alignWith()).renderAt())\n                                .node()\n                                .boundBox();\n            switch (host.alignment()) {\n            case 'left':\n                newNodeConfig = {\n                    top: node.top,\n                    left: refNode.left,\n                    height: node.height,\n                    width: Math.abs(node.width - Math.abs(refNode.left - node.left))\n                };\n                break;\n\n            case 'right':\n                newNodeConfig = {\n                    top: node.top,\n                    left: node.left,\n                    height: node.height,\n                    width: Math.abs(node.width - Math.abs(node.left + node.width - (refNode.left + refNode.width)))\n                };\n                break;\n\n            case 'top':\n                newNodeConfig = {\n                    top: refNode.top,\n                    left: node.left,\n                    height: Math.abs(node.height - Math.abs(refNode.top - node.top)),\n                    width: node.width\n                };\n                break;\n\n            case 'bottom':\n                newNodeConfig = {\n                    top: node.top,\n                    left: node.left,\n                    height: Math.abs(node.top - refNode.top + refNode.height),\n                    width: node.width\n                };\n                break;\n\n            case 'h-center':\n                newNodeConfig = {\n                    top: node.top,\n                    left: refNode.left,\n                    height: node.height,\n                    width: refNode.width\n                };\n                break;\n\n            case 'v-center':\n                newNodeConfig = {\n                    top: refNode.top,\n                    left: node.left,\n                    height: refNode.top,\n                    width: node.width\n                };\n                break;\n            default:\n                break;\n            }\n    // check if model in parent component\n            Object.assign(newNodeConfig, { id: point.id(), className: host.className() });\n            context.renderer().createAndPositionDiv(newNodeConfig);\n            context.componentMap().get(host.name()).setSpatialConfig({\n                x: newNodeConfig.left,\n                y: newNodeConfig.top,\n                height: newNodeConfig.height,\n                width: newNodeConfig.width\n\n            });\n        }\n        resolveAligment(context, component);\n    });\n};\n","import { Utils } from '../utils';\nimport { drawLayout, resolveAligment, drawComponent } from './helper';\n\nexport class DrawingManager {\n    constructor (data, renderer, container) {\n        this._data = data.tree;\n        this._componentMap = data.componentMap;\n        this._layoutClassName = data.layoutClassName;\n        this._renderer = renderer;\n        this._mount = Utils.isDOMElement(container) ? container : Utils.getElement(container);\n    }\n\n    draw () {\n        drawLayout(this);\n        resolveAligment(this, this._data);\n        drawComponent(this._data);\n        return this;\n    }\n\n    data (data) {\n        if (data) {\n            this._data = data;\n        }\n        return this._data;\n    }\n\n    componentMap (param) {\n        if (param) {\n            this._componentMap = param;\n        }\n        return this._componentMap;\n    }\n\n    className (param) {\n        if (param) {\n            this._layoutClassName = param;\n        }\n        return this._layoutClassName;\n    }\n\n    renderer (param) {\n        if (param) {\n            this._renderer = param;\n        }\n        return this._renderer;\n    }\n\n    mount (param) {\n        if (param) {\n            this._mount = param;\n        }\n        return this._mount;\n    }\n}\n","import DefinitionModel from './definitionModel';\nimport { prepareTargetComponentMap, getComponent, placeComponent, placeGridComponent } from '../helper';\n\nexport default class DefinitionManager {\n    constructor (componentMap, sequence, totalHeight, totalWidth) {\n        this._componentMap = componentMap;\n        this._prioritySequence = sequence;\n        this._totalHeight = totalHeight;\n        this._totalWidth = totalWidth;\n        this._targetComponentMap = null;\n    }\n\n    // create the config model\n    generateConfigModel () {\n        prepareTargetComponentMap(this);\n        const canvasComponent = this._targetComponentMap.get('canvas');\n        const definitionModel = new DefinitionModel({});\n        let tempDefModel = definitionModel;\n        definitionModel.remainingHeight(this._totalHeight);\n        definitionModel.remainingWidth(this._totalWidth);\n\n        let componentRef = null;\n\n        this._prioritySequence.forEach((name) => {\n            componentRef = getComponent(canvasComponent, name);\n            if (name !== 'grid') {\n                tempDefModel = placeComponent(tempDefModel, componentRef).second;\n            } else {\n                tempDefModel = placeGridComponent(tempDefModel, componentRef.component);\n            }\n        });\n        return definitionModel;\n    }\n\n    componentMap (param) {\n        if (param) {\n            this._componentMap = param;\n        }\n        return this._componentMap;\n    }\n\n    targetComponentMap (param) {\n        if (param) {\n            this._targetComponentMap = param;\n        }\n        return this._targetComponentMap;\n    }\n}\n","import { sanitizeConfig } from './helper';\n\nexport class LayoutDef {\n    constructor () {\n        this._componentMap = new Map();\n        this._layoutDefinition = null;\n    }\n\n    addComponent (component) {\n        this._componentMap.set(component.name(), component);\n    }\n\n    layoutDefinition (def) {\n        if (def) {\n            this._layoutDefinition = def;\n        }\n        return this._layoutDefinition;\n    }\n\n    addMultipleComponent (componentArray) {\n        componentArray.forEach((comp) => {\n            this.addComponent(comp);\n        });\n    }\n\n    sanitizedDefinition () {\n        sanitizeConfig(this, this._layoutDefinition);\n        return this.layoutDefinition();\n    }\n\n    componentMap () {\n        return this._componentMap;\n    }\n    resetComponentMap () {\n        this._componentMap.clear();\n    }\n}\n","import DefinitionManager from '../layout-definition/definition-manager';\n\nexport function sanitizeConfig (context, hostObj) {\n    const hostID = hostObj.host();\n    if (hostObj.lanes() && hostObj.lanes().length) {\n        hostObj.lanes().forEach(childHost => sanitizeConfig(context, childHost));\n    }\n    if (hostID != null && typeof (hostID) === 'string') {\n        if (context.componentMap().get(hostID) !== undefined) {\n            hostObj.host(context.componentMap().get(hostID));\n        }\n    }\n}\n\nexport function calLayOutDef (context) {\n    const { height, width } = context.dimension();\n    const defManager = new DefinitionManager(context.layoutDef().componentMap(),\n                                              context.prioritySequence(),\n                                              height,\n                                              width);\n    const genLayoutdef = defManager.generateConfigModel();\n    return genLayoutdef;\n}\n","import {\n  LayoutModel\n} from '../layout-definition';\n\nimport {\n  DEFAULT_WIDTH,\n  DEFAULT_HEIGHT\n} from '../constants/defaults';\n\nimport { DrawingManager } from '../drawing-manager';\nimport { removeElement } from '../drawing-manager/helper';\nimport { Utils } from '../utils';\nimport { LayoutDef } from './layout-def';\nimport { calLayOutDef } from './helper';\n\nexport default class LayoutManager {\n    constructor (conf) {\n        this._renderAt = conf.renderAt;\n        this._layoutClassName = conf.className;\n        this._dimension = {\n            width: conf.width || DEFAULT_WIDTH,\n            height: conf.height || DEFAULT_HEIGHT\n        };\n\n        this._skeletonType = conf.skeletonType || 'html';\n        this._layoutDefinition = null;\n        this._layoutDef = new LayoutDef();\n        this._drawingManager = null;\n        this._prioritySequence = [];\n        this.tree = null;\n        this._rootNodeID = null;\n    }\n\n    layoutDef (param) {\n        if (param) {\n            this._layoutDef = param;\n        }\n        return this._layoutDef;\n    }\n\n    prioritySequence (param) {\n        if (param) {\n            this._prioritySequence = param;\n        }\n        return this._prioritySequence;\n    }\n\n    dimension (param) {\n        if (param) {\n            Object.assign(this._dimension, param);\n        }\n        return this._dimension;\n    }\n\n    addComponent (component) {\n        this._layoutDef.addComponent(component);\n    }\n\n    addMultipleComponent (componentArray) {\n        this._layoutDef.addMultipleComponent(componentArray);\n    }\n\n    resetNode (node) {\n        if (this.con) {\n            this.con.resetNode(node);\n        }\n    }\n\n  /**\n   * function to update the node and rerender the layout.\n   * @param  {} config - node configuration to change.\n   */\n    updateNode (config) {\n        this.tree.updateNode(config);\n        this._layoutDefinition = this.tree.model;\n        this.compute();\n    }\n\n    compute () {\n        //----\n        if (Utils.isDOMElement(this._renderAt)) {\n            this._renderAt._layout = this;\n        } else {\n            document.getElementById(this._renderAt)._layout = this;\n        }\n        //-----\n        this._layoutDefinition = calLayOutDef(this);\n        this._layoutDef.layoutDefinition(this._layoutDefinition);\n        this._layoutDefinition = this._layoutDef.sanitizedDefinition();\n        this._layout = new LayoutModel({\n            width: this._dimension.width,\n            height: this._dimension.height\n        },\n            this._layoutDefinition);\n        this.tree = this._layout.negotiate().tree();\n        this._layout.broadcast();\n        this._drawingManager = new DrawingManager({\n            tree: this.tree,\n            componentMap: this._layoutDef.componentMap(),\n            layoutClassName: this._layoutClassName\n        }, this._skeletonType, this._renderAt);\n\n        if (this._rootNodeID) {\n            this.tree.id(this._rootNodeID);\n        } else {\n            this._rootNodeID = this.tree.id();\n        }\n    // this will draw all the components by calling their draw method\n        this._drawingManager.draw();\n    }\n\n    getRootNodeId () {\n        return this._rootNodeID;\n    }\n\n  /**\n  * This function takes the LayoutComponents and Register them in component store\n  * @param {Array<LayoutComponent>} layoutComponents\n  */\n    registerComponents (layoutComponents) {\n        this._prioritySequence.length = 0;\n        this._layoutDef.resetComponentMap();\n        layoutComponents.forEach((container) => {\n            if (container) {\n                this._prioritySequence.push(container.name());\n                this.addComponent(container);\n                if (container.name() === 'grid') {\n                    container.component.forEach((componentArr) => {\n                        componentArr.forEach((compo) => {\n                            this.addComponent(compo);\n                        });\n                    });\n                }\n            }\n        });\n        return this;\n    }\n\n    getComponent (componentName) {\n        return this._layoutDef.componentMap().get(componentName);\n    }\n\n    removeComponent (id) {\n        return removeElement(id);\n    }\n\n    renderAt (mount) {\n        if (mount) {\n            this._renderAt = mount;\n        }\n        return this._renderAt;\n    }\n}\n","import { isEqual, STATE_NAMESPACES, selectElement, getValueParser } from 'muze-utils';\nimport { VisualGroup } from '@chartshq/visual-group';\nimport { ROWS, COLUMNS, COLOR, SHAPE, SIZE, DETAIL, DATA, CONFIG }\n    from '../constants';\nimport { canvasOptions } from './local-options';\nimport { LayoutManager } from '../../../layout/src/tree-layout';\n\n/**\n * Instantiate high level components. Canvas knows what all high level component it has.\n * @nice-to-have dynamic high level components.\n *  - Is it even required ?\n *  - Reactive to source (canvas) streaming ?\n * @param {*} context Canvas instance\n * @return {Object.<Array>} Arrays of Title, visualGroup, Legend\n */\nexport const initCanvas = (context) => {\n    const reg = context._registry.components;\n\n    return [new reg.VisualGroup(context._registry, Object.assign({\n        throwback: context._throwback\n    }, context.dependencies()))];\n};\n\nexport const fixScrollBarConfig = (config) => {\n    config.scrollBar.thickness = Math.min(50, Math.max(10, config.scrollBar.thickness));\n    return config;\n};\n\nexport const setLayoutInfForUnits = (context) => {\n    const layoutManager = context._layoutManager;\n    const boundBox = layoutManager.getComponent('grid').getBoundBox();\n    const valueMatrix = context.composition().visualGroup.matrixInstance().value;\n    const parentContainer = selectElement(`#${layoutManager.getRootNodeId()}`).node();\n    valueMatrix.each((cell) => {\n        cell.valueOf().parentContainerInf({\n            el: parentContainer,\n            dimensions: boundBox\n        });\n    });\n};\n\n/**\n *\n *\n * @memberof Canvas\n */\nexport const dispatchProps = (context) => {\n    const lifeCycleManager = context.dependencies().lifeCycleManager;\n    lifeCycleManager.notify({ client: context, action: 'beforeupdate' });\n    const visualGroup = context.composition().visualGroup;\n\n    const allOptions = context._allOptions;\n    for (const key in allOptions) {\n        const value = context[key]();\n        if (value !== null) {\n            visualGroup[key] && visualGroup[key](value);\n        }\n    }\n    const { invalidValues } = context.config();\n\n    visualGroup.valueParser(getValueParser(invalidValues));\n    visualGroup.createMatrices();\n    context._cachedProps = {};\n    lifeCycleManager.notify({ client: context, action: 'initialized' });\n    lifeCycleManager.notify({ client: context, action: 'updated' });\n};\n\nconst equalityChecker = (props, params) => {\n    let checker = () => false;\n    return !props.every((option, i) => {\n        switch (option) {\n        case ROWS:\n        case COLUMNS:\n        case DETAIL:\n            checker = isEqual('Array');\n            break;\n\n        case SHAPE:\n        case SIZE:\n        case COLOR:\n        case DATA:\n        case CONFIG:\n            checker = isEqual('Object');\n            break;\n        default:\n            checker = () => true;\n            break;\n        }\n        const oldVal = params[i][0];\n        const newVal = params[i][1];\n\n        return checker(oldVal, newVal);\n    });\n};\n\nconst updateChecker = (props, params) => props.every((option, i) => {\n    const val = params[i][1];\n    switch (option) {\n    case ROWS:\n    case COLUMNS:\n        return val !== null;\n\n    case DATA:\n        return val && !val.isEmpty();\n\n    default:\n        return true;\n\n    }\n});\n\nexport const notifyAnimationEnd = (context) => {\n    const centerMatrix = context.layout().viewInfo().viewMatricesInfo.matrices.center[1] || [];\n    const promises = [];\n    centerMatrix.forEach((cellArr) => {\n        cellArr.forEach((cell) => {\n            promises.push(cell.valueOf().done());\n        });\n    });\n    const lifeCycleManager = context.lifeCycle();\n    if (promises.length) {\n        Promise.all(promises).then(() => {\n            // Update life cycle\n            lifeCycleManager.notify({ client: context, action: 'drawn' });\n            const animDonePromises = [];\n\n            centerMatrix.forEach((cellArr) => {\n                cellArr.forEach((cell) => {\n                    cell.valueOf().layers().forEach((layer) => {\n                        animDonePromises.push(layer.animationDone());\n                    });\n                });\n            });\n\n            [context.xAxes(), context.yAxes()].forEach((axisArr) => {\n                axisArr = axisArr || [];\n                axisArr.forEach((axes) => {\n                    axes.forEach((axisInst) => {\n                        animDonePromises.push(axisInst.animationDone());\n                    });\n                });\n            });\n\n            Promise.all(animDonePromises).then(() => {\n                lifeCycleManager.notify({ client: context, action: 'animationend' });\n            });\n        });\n    } else {\n        lifeCycleManager.notify({ client: context, action: 'animationend' });\n    }\n};\n\nexport const setupChangeListener = (context) => {\n    const store = context._store;\n\n    const allOptions = Object.keys(context._allOptions);\n    const props = [...allOptions, ...Object.keys(canvasOptions)];\n    const nameSpaceProps = [...allOptions, ...Object.keys(canvasOptions)].map(prop =>\n        `${STATE_NAMESPACES.CANVAS_LOCAL_NAMESPACE}.${prop}`);\n    store.registerChangeListener(nameSpaceProps, (...params) => {\n        let updateProps = equalityChecker(props, params);\n        updateProps = updateChecker(props, params);\n\n        // inform attached board to rerender\n        if (updateProps && context.mount()) {\n            dispatchProps(context);\n            context.render();\n        }\n        notifyAnimationEnd(context);\n    }, true);\n};\n\nexport const applyInteractionPolicy = (firebolt) => {\n    const canvas = firebolt.context;\n    const visualGroup = canvas.composition().visualGroup;\n    if (visualGroup) {\n        const valueMatrix = visualGroup.matrixInstance().value;\n        const interactionPolicy = firebolt._interactionPolicy;\n        interactionPolicy(valueMatrix, firebolt);\n        const crossInteractionPolicy = firebolt._crossInteractionPolicy;\n        const behaviours = crossInteractionPolicy.behaviours;\n        const sideEffects = crossInteractionPolicy.sideEffects;\n        valueMatrix.each((cell) => {\n            const unitFireBolt = cell.valueOf().firebolt();\n            for (const key in behaviours) {\n                unitFireBolt.changeBehaviourStateOnPropagation(key, behaviours[key]);\n            }\n            for (const key in sideEffects) {\n                unitFireBolt.changeSideEffectStateOnPropagation(key, sideEffects[key]);\n            }\n        });\n    }\n};\n\n/**\n * Sets the rotation for all x axes if any axis has the rotation config set in the\n * entire view\n *\n * @param {Array} columns Column cells that contain the axes cells\n */\nexport const setLabelRotationForAxes = (context) => {\n    let rotation = 0;\n\n    const xAxes = context.xAxes() || [];\n\n    (() => {\n        for (let i = 0; i < xAxes.length; i++) {\n            for (let j = 0; j < xAxes[i].length; j++) {\n                const rotationVal = xAxes[i][j].renderConfig().labels.rotation;\n                if (rotationVal && rotationVal !== 0) {\n                    rotation = rotationVal;\n                    return;\n                }\n            }\n        }\n    })();\n\n    if (rotation) {\n        xAxes.forEach((axes) => {\n            axes.forEach((axis) => {\n                axis.renderConfig({ labels: { rotation } });\n                axis.smartTicks(axis.setTickConfig());\n            });\n        });\n    }\n};\n\nexport const createGroupState = (context) => {\n    const [globalState, localState] = VisualGroup.getState();\n    const store = context._store;\n    store.append('app.group', globalState);\n    store.append('local.group', localState);\n};\n\nexport const removeChild = (mount) => {\n    while (mount.firstChild) {\n        mount.removeChild(mount.firstChild);\n    }\n};\n\nexport const createLayoutManager = () => {\n    const layoutManager = new LayoutManager({\n        className: 'muze-group-container'\n    });\n    return layoutManager;\n};\n","/**\n * This is the global options semantics based on which setters getters are created and reactivity is initiated.\n * Format\n *  PROPERTRY_NAME: {\n *      value: // default value of the property,\n *      meta: {\n *          typeCheck: // The setter value will be checked using this. If the value is function then the setter value\n *                     // is passed as args.\n *          typeExpected: // The output of typecheck action will be tested against this. Truthy value will set the\n *                       // value to the setter\n *          sanitizaiton: // Need for sanitization before type is checked\n *      }\n *  }\n * @module GlobalOptions\n */\n\nimport { intSanitizer, mergeRecursive, DataModel } from 'muze-utils';\nimport { fixScrollBarConfig } from './canvas/helper';\nimport { DEFAULT_CONFIG } from './defaults';\n\nexport default {\n    data: {\n        value: null,\n        meta: {\n            typeCheck: d => d instanceof DataModel\n        }\n    },\n    width: {\n        value: 0,\n        meta: {\n            sanitization: intSanitizer,\n            typeCheck: Number.isInteger\n        }\n    },\n    height: {\n        value: 0,\n        meta: {\n            sanitization: intSanitizer,\n            typeCheck: Number.isInteger\n        }\n    },\n    minUnitWidth: {\n        value: 50,\n        meta: {\n            sanitization: intSanitizer,\n            typeCheck: Number.isInteger\n        }\n    },\n    minUnitHeight: {\n        value: 50,\n        meta: {\n            sanitization: intSanitizer,\n            typeCheck: Number.isInteger\n        }\n    },\n    config: {\n        value: null,\n        meta: {\n            typeCheck: 'constructor',\n            typeExpected: 'Object',\n            sanitization: (config, oldConfig) => {\n                // Reset the configuration when null is passed\n                const oldConf = mergeRecursive({}, config === null ? {} : oldConfig);\n                const defConfig = mergeRecursive(oldConf, DEFAULT_CONFIG);\n                let newConf = mergeRecursive(defConfig, config);\n                newConf = fixScrollBarConfig(newConf);\n\n                return newConf;\n            }\n\n        }\n    }\n};\n","/**\n * This file exports constants that will be used to\n * create the state store of the table layout.\n */\n/**\n * The index of top, bottom and center in the matrix\n */\nexport const VIEW_INDEX = {\n    top: 0,\n    center: 1,\n    bottom: 2\n};\n\nexport const ROW_MATRIX_INDEX = {\n    0: 'top',\n    1: 'center',\n    2: 'bottom'\n};\n\nexport const COLUMN_MATRIX_INDEX = {\n    0: 'left',\n    1: 'middle',\n    2: 'right'\n};\n\n/**\n * The width of the grid suppied by the user.\n */\nexport const GRID_WIDTH = 'width';\n\n/**\n * The height of the grid supplied by the user.\n */\nexport const GRID_HEIGHT = 'height';\n\n/**\n  * The border for the grid\n  */\nexport const BORDER = 'border';\n\n /**\n  *  The index of the first visible row in view matrix.\n  */\nexport const ROW_POINTER = 'rowPointer';\n\n/**\n * The index of the first visible column in the view matrix.\n */\nexport const COLUMN_POINTER = 'columnPointer';\n\n/**\n * Flag to specify whether row sizes should be equal.\n */\nexport const ROW_SIZE_IS_EQUAL = 'isRowSizeEqual';\n\n/**\n * Flag to specify whether column sizes are equal.\n */\nexport const COLUMN_SIZE_IS_EQUAL = 'isColumnSizeEqual';\n\n/**\n * Field to store an array an of the widths of visible columns.\n * @computed\n */\nexport const COLUMN_WIDTHS = 'visibleColumnWidths';\n\n/**\n * Field to store an array of heights of visible rows.\n * @computed\n */\nexport const ROW_HEIGHTS = 'visibleRowHeights';\n\n/**\n * Field to store the width of the left matrix.\n * @computed\n */\nexport const LEFT_MATRIX_WIDTH = 'leftMatrixWidth';\n\n/**\n * Field to store the width of the right matrix.\n * @computed\n */\nexport const RIGHT_MATRIX_WIDTH = 'rightMatrixWidth';\n\n/**\n * Field to store the height of the top matrix.\n * @computed\n */\nexport const TOP_MATRIX_HEIGHT = 'topMatrixHeight';\n\n/**\n * Field to store the height of the bottom matrix.\n * @computed\n */\nexport const BOTTOM_MATRIX_HEIGHT = 'bottomMatrixHeight';\n\n/**\n * The dom element to render the layout inside.\n */\nexport const MOUNT_POINT = 'mount';\n\n/**\n * The id attribute of the left table element.\n */\nexport const LEFT_TABLE_ID = 'grid-left';\n\n/**\n * The id attribute of the right table element.\n */\nexport const RIGHT_TABLE_ID = 'grid-right';\n\n/**\n * The id attribute of the top table.\n */\nexport const TOP_TABLE_ID = 'grid-top';\n\n/**\n * The id attribute of the bottom table.\n */\nexport const BOTTOM_TABLE_ID = 'grid-bottom';\n\n/**\n * The id attribute of the center table.\n */\nexport const CENTER_TABLE_ID = 'grid-center';\n\n/**\n * The id attribute of the top div.\n */\nexport const TOP_DIV_ID = 'muze-div-top';\n\n/**\n * The id attribute of the bottom div.\n */\nexport const BOTTOM_DIV_ID = 'muze-div-bottom';\n\n/**\n * The id attribute of the center div.\n */\nexport const CENTER_DIV_ID = 'muze-div-center';\n\n/**\n * Field that indicates if the row configuration has changed\n */\nexport const HAVE_ROWS_CHANGED = 'haveRowsChanged';\n\n/**\n * Field that indicates if the column configuration has changed\n */\nexport const HAVE_COLUMNS_CHANGED = 'haveColumnsChanged';\n\n/**\n * Field that indicates if the values configuration for the center matrix has changed\n */\nexport const HAVE_VALUES_CHANGED = 'haveValuesChanged';\n\n/**\n * Field that indicates the width of row matrix\n */\nexport const ROW_MATRIX_WIDTH = 'rowMatrixWidth';\n\n/**\n * Field that indicates the height of row matrix\n */\nexport const COLUMN_MATRIX_HEIGHT = 'columnMatrixHeight';\n\n/**\n * Field that indicates the unit width of layout\n */\nexport const UNIT_WIDTH = 'unitWidth';\n\n/**\n * Field that indicates the unit height of layout\n */\nexport const UNIT_HEIGHT = 'unitHeight';\n\n/**\n * Field that indicates the style object\n */\nexport const STYLE = 'style';\n\n/**\n * Field that indicates the color configuration\n */\nexport const COLOR = 'color';\n\n/**\n * Field that indicates width\n */\nexport const WIDTH = 'width';\n\n/**\n * Field that indicates collpase property for border\n */\nexport const COLLAPSE = 'collapse';\n\n/**\n * Field that indicates spacing property for border\n */\nexport const SPACING = 'spacing';\n\n/**\n * Field that indicates spacing property for border\n */\nexport const DISTRIBUTION = 'distribution';\n\n/**\n * Field that indicates spacing property for border\n */\nexport const GUTTERSPACE = 'gutterSpace';\n\n/**\n * Field that indicates spacing property for border\n */\nexport const BREAK_PAGE = 'breakPage';\n\n/**\n * Field that indicates spacing property for border\n */\nexport const SHOW_ROW_BORDERS = 'showRowBorders';\n\n/**\n * Field that indicates spacing property for border\n */\nexport const SHOW_COL_BORDERS = 'showColBorders';\n\n/**\n * Field that indicates spacing property for border\n */\nexport const SHOW_VALUE_BORDERS = 'showValueBorders';\n\nexport const HEIGHT = 'height';\nexport const COLUMN = 'column';\nexport const ROW = 'row';\nexport const TOP = 'top';\nexport const LEFT = 'left';\nexport const RIGHT = 'right';\nexport const BOTTOM = 'bottom';\nexport const CENTER = 'center';\nexport const CLICK = 'click';\nexport const ROW_LEFT = 'rowLeft';\nexport const ROW_RIGHT = 'rowRight';\nexport const COLUMN_BOTTOM = 'colBottom';\nexport const COLUMN_TOP = 'colTop';\nexport const AUTO = 'auto';\nexport const ROW_SPAN = 'rowSpan';\nexport const COL_SPAN = 'colSpan';\nexport const ROW_ROOT = 'rowRoot';\nexport const COLUMN_ROOT = 'columnRoot';\nexport const PRIMARY = 'primary';\nexport const SECONDARY = 'secondary';\nexport const VERTICAL = 'vertical';\nexport const HORIZONTAL = 'horizontal';\n\nexport const BLANK_BORDERS = 'rgba(0,0,0,0)';\n\nexport const PAGINATION = 'pagination';\nexport const BUFFER = 'buffer';\nexport const HOLISTIC = 'holistic';\nexport const SCROLL = 'scroll';\nexport const MIDDLE = 'middle';\nexport const NO_BORDERS = null;\n\nexport const MAX_WIDTH_AVAIL_FOR_COL_MATRIX = 'maxWidthAvailableForColumnMatrix';\nexport const COLUMN_MATRIX = 'columnMatrix';\nexport const MAX_HEIGHT_AVAIL_FOR_ROW_MATRIX = 'maxHeightAvailableForRowMatrix';\nexport const ROW_MATRIX = 'rowMatrix';\n","import { sanitizeIP, mergeRecursive } from 'muze-utils';\nimport { TOP, CENTER, BOTTOM } from '../enums/constants';\n\n/*\n * This is the abstract implementation of the root layout. This takes care of common work which all the layouts\n * has to handle. The common work includes sanitizaion of inputs, update, rerender, dispose etc. This class can't be\n * used directly (as ofcourse this is an abstract implementaiton), the class which is implementing it has to implement\n * the necessary methods and gives its on visual.\n */\n\n/**\n * This class is used to create a generic layout. It can be extended to create layouts\n * of different types\n * @class GenericLayout\n */\nexport default class GenericLayout {\n\n    /**\n     * Creates an instance of TableLayout.\n     * @param {HTMLElement} mountPoint DOM element/d3 selection where the layout is to be mounted\n     * @param {Object} measurement The dimensions of the layout\n     * @param {Object} config configuration to be given for the layout\n     * @param {Object} dependencies external dependencies.\n     *\n     * @memberof GenericLayout\n     *\n     */\n    constructor (mountPoint, measurement, config, dependencies) {\n        this._config = {};\n        this._measurement = {};\n        this._matrices = [];\n        // External dependencies to be included for the layout. This includes the ext global dependencies like\n        // smartlabel which has one single implementation of throughout the page or per isntance\n        this._dependencies = dependencies;\n\n        this.measurement(measurement);\n        this.mountPoint(mountPoint);\n        this.config(config);\n    }\n\n    /**\n     * Returns an object which is used to recreate the layout.\n     * @return {Object} the serialized components\n     */\n    serialize () {\n        return {\n            measurement: this.measurement(),\n            config: this.config(),\n            matrices: this.matrices()\n        };\n    }\n\n     /**\n     * Sets/Gets the config for the layout\n     * @param {Object} config configuration for the layout\n     * @return {Layout|Object} Gets the Config/ Returns this instance when set\n     */\n    config (config) {\n        if (config) {\n            this._config = mergeRecursive(this._config || {}, config);\n            this._config.border.width = Math.max(0, this._config.border.width);\n            return this;\n        }\n        return this._config;\n    }\n\n    /**\n     * Sets/Gets the measurement for the layout\n     * @param {Object} measurement measurement for the layout\n     * @return {Layout|Object} Gets the measurement/ Returns this instance when set\n     */\n    measurement (measurement) {\n        if (measurement) {\n            this._measurement = mergeRecursive(this._measurement || {}, measurement);\n\n            return this;\n        }\n        return this._measurement;\n    }\n\n    /**\n     * Sets/Gets the matrices for the layout\n     * @param {Object} matrices matrices for the layout\n     * @return {Layout|Object} Gets the matrices/ Returns this instance when set\n     */\n    matrices (matrices) {\n        if (matrices) {\n            this._matrices = sanitizeIP.typeObj([TOP, CENTER, BOTTOM], matrices);\n\n            return this;\n        }\n        return this._matrices;\n    }\n\n    /**\n     * Sets/Gets the matrix for row\n     * @param {Object} matrix matrices for the layout\n     * @return {Layout|Object} Gets the matrix/ Returns this instance when set\n     */\n    rowMatrix (matrix) {\n        if (matrix) {\n            this._rowMatrix = matrix;\n            return this;\n        }\n        return this._rowMatrix;\n    }\n\n    /**\n     * Sets/Gets the matrix for columns\n     * @param {Object} matrix matrices for the layout\n     * @return {Layout|Object} Gets the matrix/ Returns this instance when set\n     */\n    columnMatrix (matrix) {\n        if (matrix) {\n            this._columnMatrix = matrix;\n            return this;\n        }\n        return this._columnMatrix;\n    }\n\n   /**\n     * Sets/Gets the matrix for value\n     * @param {Object} matrix matrices for the layout\n     * @return {Layout|Object} Gets the matrix/ Returns this instance when set\n     */\n    centerMatrix (matrix) {\n        if (matrix) {\n            this._centerMatrix = matrix;\n            return this;\n        }\n        return this._centerMatrix;\n    }\n\n    /**\n     * Sets/Gets the mountPoint for the layout\n     * @param {Object} mountPoint mountPoint for the layout\n     * @return {Layout|Object} Gets the mountPoint/ Returns this instance when set\n     */\n    mountPoint (mountPoint) {\n        if (mountPoint) {\n            this._mountPoint = mountPoint;\n\n            return this;\n        }\n        return this._mountPoint;\n    }\n}\n","import * as FieldNames from '../enums/constants';\n\n/**\n * Default configuration of the layout\n * @return {Object} returns the default configuration\n */\nexport const DEFAULT_CONFIGURATION = {\n    [FieldNames.BORDER]: {\n        [FieldNames.STYLE]: 'solid',\n        [FieldNames.COLOR]: '#d6d6d6',\n        [FieldNames.WIDTH]: 2,\n        [FieldNames.COLLAPSE]: true,\n        [FieldNames.SPACING]: 0\n    },\n    [FieldNames.PAGINATION]: 'scroll',\n    [FieldNames.BUFFER]: 20,\n    [FieldNames.GUTTERSPACE]: { rows: [], columns: [] },\n    [FieldNames.DISTRIBUTION]: { rows: [], columns: [] },\n    [FieldNames.BREAK_PAGE]: { rows: [], columns: [] },\n    [FieldNames.ROW_SIZE_IS_EQUAL]: false,\n    [FieldNames.COLUMN_SIZE_IS_EQUAL]: false,\n    [FieldNames.COLUMN_POINTER]: 0,\n    [FieldNames.ROW_POINTER]: 0\n};\n\n/**\n * Default measurements for the layout\n * @return {Object} returns the default measurements\n */\nexport const DEFAULT_MEASUREMENTS = {\n    [FieldNames.GRID_WIDTH]: 100,\n    [FieldNames.GRID_HEIGHT]: 100,\n    [FieldNames.UNIT_WIDTH]: 100,\n    [FieldNames.UNIT_HEIGHT]: 100\n};\n\nexport const BLANK_BORDERS = 'rgba(0,0,0,0)';\n","/**\n * This file exports utility functions that are used across the layout module\n */\nimport { Symbols } from 'muze-utils';\nimport { PRIMARY, SECONDARY, HEIGHT, WIDTH } from '../enums/constants';\n\nconst nest = Symbols.nest;\n/**\n *\n *\n * @param {*} isTransposed\n *\n */\nconst getMeasureInfo = (isTransposed) => {\n    if (isTransposed) {\n        return {\n            firstMeasure: HEIGHT,\n            secondMeasure: WIDTH\n        };\n    }\n    return {\n        firstMeasure: WIDTH,\n        secondMeasure: HEIGHT\n    };\n};\n\n/**\n *\n *\n * @param {*} i\n * @param {*} page\n *\n */\nconst findInPage = (i, page) => {\n    let count = 0;\n    for (const x in page) {\n        if (i < page[x]) {\n            count = x;\n            break;\n        }\n    }\n    return count;\n};\n\n/**\n * Creates a single matrix from two matrices\n *\n * @param {Array<Array>} matrix Input matrix\n * @return {Array<Array>} Joined matrix\n * @memberof VisualMatrix\n */\nexport const combineMatrices = (matrix, config) => {\n    const { isTransposed } = config;\n    let joinedMatrix = matrix[0].length > 0 ? matrix[0] : matrix[1];\n    if (isTransposed) {\n        joinedMatrix = matrix[0].length > 0 ? [...matrix[0]] : [];\n        joinedMatrix = matrix[1].length > 0 ? [...joinedMatrix, ...matrix[1]] : joinedMatrix;\n    } else {\n        joinedMatrix = joinedMatrix.map((row, rowIndex) => {\n            let rowData = [];\n            if (matrix[0].length > 0) {\n                rowData = [...matrix[0][rowIndex]];\n            }\n            if (matrix[1].length > 0) {\n                rowData = [...rowData, ...matrix[1][rowIndex]];\n            }\n            return rowData;\n        });\n    }\n    return joinedMatrix;\n};\n\n/**\n * Creates a hirachical tree from the context\n *\n * @param {Object} context context for creating tree\n * @return {Object} nested tree\n */\nexport const createTree = (context) => {\n    let matrixTree = {};\n    let lastLevelKey = 0;\n    let facet = PRIMARY;\n    const nestFn = nest();\n    const keys = [];\n    const layoutMatrix = context._layoutMatrix;\n    const primaryMatrix = context.primaryMatrix();\n    const secondaryMatrix = context.secondaryMatrix();\n    const { isTransposed, breakPage } = context.config();\n\n    if (!isTransposed) {\n        if (primaryMatrix.length === 0) {\n            facet = PRIMARY;\n        } else if (secondaryMatrix.length === 0) {\n            facet = SECONDARY;\n        } else {\n            facet = primaryMatrix.length >= secondaryMatrix.length ? PRIMARY : SECONDARY;\n        }\n        if (primaryMatrix.length > 0) {\n            for (let i = 0; i < primaryMatrix[0].length - 1; i++) {\n                keys.push(i);\n            }\n            keys.push(primaryMatrix[0].length - 1);\n            if (facet === SECONDARY || secondaryMatrix.length === 0) {\n                lastLevelKey = primaryMatrix[0].length - 1;\n            }\n        }\n        if (secondaryMatrix.length > 0) {\n            const keyLength = primaryMatrix.length > 0 ? primaryMatrix[0].length : 0;\n            for (let i = secondaryMatrix[0].length - 1; i > 0; i--) {\n                keys.push(i + keyLength);\n            }\n            keys.push(keyLength);\n\n            if (facet === PRIMARY) {\n                lastLevelKey = keyLength;\n            }\n        } else {\n            lastLevelKey = primaryMatrix.length > 0 ? primaryMatrix[0].length - 1 : 0;\n        }\n        keys.forEach((key) => {\n            let counter = -1;\n            return nestFn.key((d) => {\n                counter++;\n                return `${d[key].valueOf()}-${findInPage(counter, breakPage)}`;\n            });\n        });\n        matrixTree = nestFn.entries(layoutMatrix);\n    } else {\n        if (primaryMatrix.length === 0) {\n            facet = PRIMARY;\n        } else if (secondaryMatrix.length === 0) {\n            facet = SECONDARY;\n        } else {\n            facet = primaryMatrix.length >= secondaryMatrix.length ? PRIMARY : SECONDARY;\n        }\n        if (primaryMatrix.length > 0) {\n            for (let i = 0; i < primaryMatrix.length - 1; i++) {\n                keys.push(i);\n            }\n            // if (facet === PRIMARY) {\n            keys.push(primaryMatrix.length - 1);\n            // } else {\n            if (facet === SECONDARY) {\n                lastLevelKey = primaryMatrix.length - 1;\n            }\n        }\n        if (secondaryMatrix.length > 0) {\n            const primaryMatrixLength = primaryMatrix.length;\n            for (let i = secondaryMatrix.length - 1; i > 0; i--) {\n                keys.push(i + primaryMatrixLength);\n            }\n            // if (facet === SECONDARY) {\n            keys.push(primaryMatrixLength);\n            // }\n            if (facet === PRIMARY) {\n                lastLevelKey = primaryMatrixLength;\n            }\n        }\n        keys.forEach((key) => {\n            let counter = -1;\n            return nestFn.key((d) => {\n                counter++;\n                return `${d[key].valueOf()}-${findInPage(counter, breakPage)}`;\n            });\n        });\n        let newMatrix = [];\n        newMatrix = layoutMatrix[0].map((col, colIndex) => layoutMatrix.map(row => row[colIndex]));\n        matrixTree = nestFn.entries(newMatrix);\n    }\n    return { tree: matrixTree, lastLevelKey };\n};\n\n/**\n * Gives the min measues\n *\n * @param {boolean} isTransposed is column matrix\n * @param {Object} unitMeasures min measures to be given to cells\n * @return {Object} dimension min cell\n */\nexport const getMinMeasures = (isTransposed, unitMeasures) => {\n    if (!isTransposed) {\n        return {\n            height: unitMeasures.height,\n            width: 0\n        };\n    }\n    return {\n        height: 0,\n        width: unitMeasures.width\n    };\n};\n\n/**\n * Get the logical space from the tree\n *\n * @param {Node} item tree to be calculated\n * @param {number} measures width and height\n * @param {Array} minMeasures min measures for a cell\n * @param {Array} maxMeasure max measures for a col/row\n * @return {Object} dimension\n */\nexport const getLogicalSpace = (item, measures, minMeasures, maxMeasure = []) => {\n    const { firstMeasure, secondMeasure } = measures;\n    let firstMeasureValue = 0;\n    let secondMeasureValue = 0;\n    item.values.forEach((valueArray) => {\n        let fMeasure = 0;\n        let sMeasure = 0;\n        valueArray.forEach((placeholder, colIndex) => {\n            placeholder.setAvailableSpace();\n            const space = placeholder.getLogicalSpace();\n            const minSecondMeasure = placeholder.getMinMeasures(minMeasures[secondMeasure]);\n\n            sMeasure = Math.max(sMeasure, +space[secondMeasure], minSecondMeasure);\n            maxMeasure[colIndex] = Math.max(maxMeasure[colIndex] || 0, space[firstMeasure]);\n            fMeasure += +maxMeasure[colIndex];\n        });\n        secondMeasureValue += sMeasure;\n        firstMeasureValue = Math.max(firstMeasureValue, fMeasure);\n        item.space = {\n            [secondMeasure]: Math.ceil(secondMeasureValue),\n            [firstMeasure]: Math.ceil(firstMeasureValue)\n        };\n    });\n    return {\n        [secondMeasure]: secondMeasureValue,\n        [firstMeasure]: firstMeasureValue\n    };\n};\n\n/**\n * Computes the logical spcae taken by the matrix tree\n *\n * @param {*} [item={}] tree to be viewed\n * @param {boolean} [isTransposed=false] is column matrix\n * @param {*} unitMeasures min measues for a cell\n * @param {Array} maxMeasure max measures for a col/row\n * @return {Object} logical space taken\n */\nexport const computeLogicalSpace = (item = {}, config, maxMeasures) => {\n    const { isTransposed = false, unitMeasures } = config;\n    const { firstMeasure, secondMeasure } = getMeasureInfo(isTransposed);\n    const { values } = item;\n    const minMeasures = getMinMeasures(isTransposed, unitMeasures);\n\n    if (values[0].key) {\n        const logicalSpace = { [firstMeasure]: 0, [secondMeasure]: 0 };\n\n        values.forEach((valueItem) => {\n            // Compute logical space for lowest level\n            const space = computeLogicalSpace(valueItem, config, maxMeasures);\n            // Set logical space for first measure\n            logicalSpace[firstMeasure] = Math.max(logicalSpace[firstMeasure], space[firstMeasure],\n                minMeasures[firstMeasure]);\n\n            // Set logical space for second measure\n            logicalSpace[secondMeasure] += +space[secondMeasure];\n        });\n        item.space = logicalSpace;\n        return logicalSpace;\n    }\n\n    return getLogicalSpace(item, { firstMeasure, secondMeasure }, minMeasures, maxMeasures);\n};\n\n/**\n * Gives the space taken by a row\n *\n * @param {Array} row matrix array of rows\n * @return {Object} dimension of the row\n */\nexport const spaceTakenByRow = (row) => {\n    let height = 0;\n    let width = 0;\n    row.forEach((col) => {\n        const spaces = col.getLogicalSpace();\n        height = Math.max(height, spaces.height);\n        width += spaces.width;\n    });\n    return {\n        width,\n        height\n    };\n};\n\n/**\n * Gives the space taken by a column\n *\n * @param {Array<Array>} matrix column matrix\n * @param {number} colIndex column index\n * @return {Object} dimension of the column\n */\nexport const spaceTakenByColumn = (matrix, colIndex) => {\n    let height = 0;\n    let width = 0;\n    matrix.forEach((row) => {\n        const col = row[colIndex];\n        const spaces = col.getLogicalSpace();\n        width = Math.max(width, spaces.width);\n        height += spaces.height;\n    });\n    return {\n        width,\n        height\n    };\n};\n\n/**\n * Creates different level matrices\n *\n * @param {Object} item matrix tree\n * @param {boolean} isTransposed is column matrix\n * @return {Object} matrix of each level\n */\nexport const createMatrixEachLevel = (item, isTransposed) => {\n    if (item.values[0].key) {\n        const arr = [];\n        item.values.forEach((child) => {\n            if (!isTransposed) {\n                arr.push(...createMatrixEachLevel(child, isTransposed));\n            } else {\n                const eachLevel = createMatrixEachLevel(child, isTransposed);\n                eachLevel.forEach((e, i) => {\n                    arr[i] = arr[i] || [];\n                    arr[i].push(...e);\n                });\n            }\n        });\n        item.matrix = arr;\n        return arr;\n    }\n    if (!isTransposed) {\n        item.matrix = item.values;\n    } else {\n        item.matrix = item.values[0].map((col, colIndex) => item.values.map(row => row[colIndex]));\n    }\n    return item.matrix;\n};\n\n/**\n * Breaks the matrix into two part\n *\n * @param {Array<Array>} matrix input matrix\n * @param {boolean} isTransposed is column matrix\n * @param {number} breakPointer point in matrix where it is to be broken\n * @return {Array} two broken matrix\n */\nexport const breakMatrix = (matrix, isTransposed, breakPointer) => {\n    const primaryMatrix = [];\n    const secondaryMatrix = [];\n    if (isTransposed) {\n        matrix.forEach((row, rowIndex) => {\n            if (rowIndex >= breakPointer) {\n                secondaryMatrix.push(row);\n            } else {\n                primaryMatrix.push(row);\n            }\n        });\n    } else {\n        matrix.forEach((row, rowIndex) => {\n            row.forEach((column, columnIndex) => {\n                if (columnIndex >= breakPointer) {\n                    secondaryMatrix[rowIndex] = secondaryMatrix[rowIndex] || [];\n                    secondaryMatrix[rowIndex].push(column);\n                } else {\n                    primaryMatrix[rowIndex] = primaryMatrix[rowIndex] || [];\n                    primaryMatrix[rowIndex].push(column);\n                }\n            });\n        });\n    }\n    return [primaryMatrix, secondaryMatrix];\n};\n\n/**\n * Distributed width returned\n *\n * @param {Object} context context for the width distibution\n * @return {number} distributed widths\n */\nexport const getDistributedWidth = (context, layoutConfig) => {\n    const {\n        availableWidth,\n        width,\n        row\n    } = context;\n    const {\n        isDistributionEqual,\n        isTransposed,\n        distribution\n    } = layoutConfig;\n    let distSum = 0;\n    if (distribution && distribution[0]) {\n        distSum = distribution.reduce((t, n) => {\n            t += n;\n            return t;\n        });\n    }\n    return row.map((col, colIndex) => {\n        const space = col.getLogicalSpace().width;\n        let distWidth = (space + (availableWidth - width) * (space / width));\n        if (isTransposed) {\n            if (distribution.length > 0) {\n                distWidth = (availableWidth * distribution[colIndex] / distSum);\n            } else if (isDistributionEqual || width === 0) {\n                const rowLen = row.length;\n                distWidth = (availableWidth / rowLen);\n            }\n        }\n        return Math.floor(distWidth);\n    });\n};\n\n/**\n * Distributeed heights returned\n *\n * @param {Object} context input for the height distribution\n * @return {Object} distribured heights\n */\nexport const getDistributedHeight = (context) => {\n    let distSum = 0;\n    let gutterSum = 0;\n    let heightWithoutGutter = 0;\n    const {\n        isTransposed,\n        distribution,\n        availableHeight,\n        height,\n        isDistributionEqual,\n        gutter,\n        matrix,\n        cIdx\n    } = context;\n\n    if (distribution && distribution[0] !== undefined) {\n        distSum = distribution.reduce((t, n) => {\n            t += n;\n            return t;\n        });\n    }\n    if (gutter && gutter[0] !== undefined) {\n        gutterSum = gutter.reduce((t, n) => {\n            t += n;\n            return t;\n        });\n    }\n    heightWithoutGutter = availableHeight - Math.floor(availableHeight * gutterSum);\n\n    const colLen = matrix.length;\n    return matrix.map((row, rIdx) => {\n        const col = row[cIdx];\n        const space = col.getLogicalSpace().height;\n        let distHeight = (space + (heightWithoutGutter - height) * (space / height));\n\n        if (!isTransposed) {\n            if (distribution.length > 0 && colLen === distribution.length) {\n                distHeight = (heightWithoutGutter * distribution[rIdx] / distSum);\n            } else if (isDistributionEqual || context.height === 0) {\n                distHeight = (heightWithoutGutter / colLen);\n            }\n        }\n        return Math.floor(distHeight);\n    });\n};\n\n/**\n *\n *\n * @param {*} arr\n * @param {*} beg\n * @param {*} end\n */\nexport const extraCellsRemover = (arr, beg, end) => arr.slice(beg, -end);\n\n/**\n * Creates matrix instancess\n *\n * @param {Array} [arr=[]] mutated arry\n * @param {number} depth depth of the tree\n * @param {Array} matrixInfo Details about the matrix(tree, etc) to be inserted\n * @param {boolean} layout Instance of layout\n */\nexport const createMatrixInstances = (arr = [], depth, matrixInfo, layout) => {\n    const breakPointer = layout._breakPointer;\n    const config = layout.config();\n    const {\n        isTransposed\n    } = config;\n    const {\n        tree,\n        layoutMatrix\n    } = matrixInfo;\n\n    if (depth === 0) {\n        const brokenMatrix = breakMatrix(tree.matrix, isTransposed, breakPointer);\n        arr.push({\n            matrix: tree.matrix,\n            primaryMatrix: brokenMatrix[0],\n            secondaryMatrix: brokenMatrix[1],\n            space: tree.space\n        });\n        return arr;\n    }\n    const nextLevel = depth - 1;\n    tree.values.forEach((e) => {\n        createMatrixInstances(arr, nextLevel, {\n            tree: e,\n            layoutMatrix\n        }, layout);\n    });\n    return arr;\n};\n","import { mergeRecursive } from 'muze-utils';\n\nexport const PROPS = {\n    config: {\n        sanitization: (context, value) => mergeRecursive(context._config || {}, value)\n    },\n    maxMeasures: {},\n    availableSpace: {},\n    logicalSpace: {}\n};\n","import { PRIMARY } from '../enums/constants';\n/**\n *\n *\n */\nexport const defaultConfig = {\n    distribution: [],\n    classPrefix: 'muze',\n    isDistributionEqual: true,\n    unitMeasures: {\n        height: 100,\n        width: 100,\n        border: 1\n    },\n    isTransposed: false,\n    facet: PRIMARY,\n    extraCellLengths: []\n};\n","import { mergeRecursive, generateGetterSetters, ERROR_MSG } from 'muze-utils';\nimport {\n    createTree,\n    combineMatrices,\n    createMatrixInstances\n  } from '../utils';\nimport { PROPS } from './props';\nimport { HEIGHT, WIDTH } from '../enums/constants';\nimport { defaultConfig } from './default-config';\n\n/**\n * This class used to create column / row matrix for GridLayout\n *\n * @class VisualMatrix\n */\nexport default class VisualMatrix {\n\n    /**\n     *Creates an instance of VisualMatrix.\n     * @param {any} matrix Two set of matrices\n     * @param {any} [config={}] Configuration for VisualMatrix\n     * @memberof VisualMatrix\n     */\n    constructor (matrix, config = {}) {\n        // Prepare matrices\n        this._lastLevelKey = 0;\n        this._primaryMatrix = matrix[0] || [];\n        this._secondaryMatrix = matrix[1] || [];\n        this._maxMeasures = [];\n        this._availableSpace = {};\n\n        // Store the config\n        generateGetterSetters(this, PROPS);\n        const defCon = Object.assign({}, this.constructor.defaultConfig());\n        this.config(mergeRecursive(defCon, config));\n\n        this._layoutMatrix = combineMatrices([matrix[0] || [], matrix[1] || []], this.config());\n    }\n\n     /**\n     * Computes the logical space taken by the entire matrixTree\n     *\n     * @return {Object} Logical space taken\n     * @memberof VisualMatrix\n     */\n    computeLogicalSpace () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    computeViewableSpaces () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    /**\n     *\n     *\n     * @return\n     * @memberof VisualMatrix\n     */\n    removeExtraCells () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    getPriorityDistribution () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    /**\n     * Calculates the depth of the tree that can be viewed\n     *\n     * @param {Array} widthMeasures array of widths\n     * @param {Array} heightMeasures array of heights\n     * @return {number} depth of the tree\n     * @memberof VisualMatrix\n     */\n    calculateDepth () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    /**\n     * Redistributes the provied space to all cells\n     *\n     * @param {*} viewableMatrix current viewport matrix\n     * @param {*} width provied width\n     * @param {*} height provied height\n     * @return {Object} current viewports matrixes with measures\n     * @memberof VisualMatrix\n     */\n    redistributeSpaces () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    /**\n     * Distibutes the given space row wisely\n     *\n     * @param {Object} measures Redistribution information\n     * @memberof VisualMatrix\n     */\n    redistributeViewSpaces () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    /**\n     * Dispatch the calculated cell dimensions to all the cells\n     *\n     * @param {Object} measures cell dimension information\n     * @return {Object} row and column heights / widths\n     * @memberof VisualMatrix\n     */\n    getCellDimensions () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    /**\n     *\n     *\n     * @param {*} params\n     * @returns\n     * @memberof VisualMatrix\n     */\n    primaryMatrix (...params) {\n        if (params.length) {\n            return this;\n        }\n        return this._primaryMatrix;\n    }\n\n    secondaryMatrix (...params) {\n        if (params.length) {\n            return this;\n        }\n        return this._secondaryMatrix;\n    }\n\n    tree (...params) {\n        if (params.length) {\n            return this;\n        }\n        return this._tree;\n    }\n\n    static defaultConfig () {\n        return defaultConfig;\n    }\n\n    createTree () {\n        const { tree, lastLevelKey } = createTree(this);\n        this._lastLevelKey = lastLevelKey;\n        return tree;\n    }\n\n    /**\n     * Returns the space taken by visual matrix\n     *\n     * @return {Object} space taken by the matrix\n     * @memberof VisualMatrix\n     */\n    getLogicalSpace () {\n        return this.logicalSpace();\n    }\n\n    /**\n     * Sets the provied space to the visual matrix\n     *\n     * @param {number} width width provided\n     * @param {number} height height provided\n     * @memberof VisualMatrix\n     */\n    setAvailableSpace (width, height) {\n        this.availableSpace({ width, height });\n        const tree = this.tree();\n        const heightMeasures = this.populateMaxMeasures(HEIGHT, tree);\n        const widthMeasures = this.populateMaxMeasures(WIDTH, tree);\n        const depth = this.calculateDepth(widthMeasures, heightMeasures);\n\n        this.viewableMatrix = this.createViewPortMatrix(depth);\n        this.viewableMeasures = this.redistributeSpaces(width, height);\n        return this;\n    }\n\n    /**\n     * Populate the max measures in the array\n     *\n     * @param {Array} measures array to be filled with max measures\n     * @param {Object} matrixTree matrix tree of visual matrix\n     * @param {number} measure width or height\n     * @param {number} [depth=0] depth of the tree that to be calculated\n     * @memberof VisualMatrix\n     */\n    populateMaxMeasures (type, matrixTree, depth = 0, measures = []) {\n        measures[depth] = Math.max(measures[depth] || 0, matrixTree.space[type]);\n        if (matrixTree.values) {\n            const childDepth = depth + 1;\n            matrixTree.values.forEach((child) => {\n                if (child.space) {\n                    measures = this.populateMaxMeasures(type, child, childDepth, measures);\n                }\n            });\n        }\n        return measures;\n    }\n\n    /**\n     * Gets the viewable measures for the current viewable matrix\n     *\n     * @return {Object} Set of viewable measures\n     * @memberof VisualMatrix\n     */\n    getViewableSpaces () {\n        return this.viewableMeasures;\n    }\n\n    /**\n     * Returns the matrix that can be viewed in the current viewport\n     *\n     * @return {Array} Set of matrices that can be viewed\n     * @memberof VisualMatrix\n     */\n    getViewableMatrices () {\n        return this.viewableMatrix;\n    }\n\n    /**\n     * Creates the viewport that can be viewed together\n     *\n     * @param {number} depth maxDepth that can be viewed in the viewport\n     * @return {Array<Object>} Set of matrices that can be viewed\n     * @memberof VisualMatrix\n     */\n    createViewPortMatrix (depth) {\n        const arr = [];\n        createMatrixInstances(arr, depth, this.removeExtraCells(), this);\n        return arr;\n    }\n}\n\n","import { mergeRecursive } from 'muze-utils';\nimport {\n    extraCellsRemover,\n    combineMatrices,\n    spaceTakenByColumn,\n    getDistributedHeight,\n    computeLogicalSpace,\n    createMatrixEachLevel\n  } from '../utils';\nimport { ROW_ROOT } from '../enums/constants';\nimport VisualMatrix from './visual-matrix';\n\n/**\n * This class used to create column / row matrix for GridLayout\n *\n * @class VisualMatrix\n */\nexport default class RowVisualMatrix extends VisualMatrix {\n\n    /**\n     *Creates an instance of VisualMatrix.\n     * @param {any} matrix Two set of matrices\n     * @param {any} [config={}] Configuration for VisualMatrix\n     * @memberof VisualMatrix\n     */\n    constructor (matrix, config = {}) {\n        super(matrix, config);\n\n        this._breakPointer = (matrix[0].length > 0 ? matrix[0][0].length : 0);\n        this._layoutMatrix = combineMatrices([matrix[0] || [], matrix[1] || []], this.config());\n\n        // Create Tree\n        this._tree = {\n            key: ROW_ROOT,\n            values: this.createTree()\n        };\n        this._logicalSpace = this.computeLogicalSpace();\n    }\n\n    /**\n     * Computes the logical space taken by the entire matrixTree\n     *\n     * @return {Object} Logical space taken\n     * @memberof VisualMatrix\n     */\n    computeLogicalSpace () {\n        const matrixTree = this.tree();\n        createMatrixEachLevel(matrixTree, false);\n        return computeLogicalSpace(matrixTree, this.config(), this.maxMeasures());\n    }\n\n    computeViewableSpaces (measures) {\n        const {\n            maxHeights,\n            maxWidths,\n            height\n        } = measures;\n        return this.viewableMatrix.map((matrixInst, i) => {\n            const cellDimOptions = { matrixInst, maxWidths, maxHeights, matrixIndex: i };\n            const { widths, rowHeights, columnWidths } = this.getCellDimensions(cellDimOptions);\n            const heightMeasures = [height, height];\n            const columnMeasures = widths;\n\n            return {\n                rowHeights: {\n                    primary: rowHeights[0],\n                    secondary: rowHeights[1]\n                },\n                columnWidths: {\n                    primary: columnWidths[0],\n                    secondary: columnWidths[1]\n                },\n                height: {\n                    primary: heightMeasures[0],\n                    secondary: heightMeasures[1]\n                },\n                width: {\n                    primary: columnMeasures[0],\n                    secondary: columnMeasures[1]\n                }\n            };\n        });\n    }\n\n    /**\n     *\n     *\n     * @return\n     * @memberof VisualMatrix\n     */\n    removeExtraCells () {\n        const {\n            isTransposed,\n            extraCellLengths\n        } = this.config();\n        const matrix = this._layoutMatrix;\n        const tree = mergeRecursive({}, this.tree());\n        const begCellLen = extraCellLengths[0];\n        const endCellLen = extraCellLengths[1] || Number.NEGATIVE_INFINITY;\n        const layoutMatrix = !isTransposed ? extraCellsRemover(matrix, begCellLen, endCellLen) :\n        matrix.slice(0).map(e => extraCellsRemover(e, begCellLen, endCellLen));\n\n        tree.values = extraCellsRemover(tree.values, begCellLen, endCellLen);\n        tree.matrix = extraCellsRemover(tree.matrix, begCellLen, endCellLen);\n\n        return {\n            tree,\n            layoutMatrix\n        };\n    }\n\n    getPriorityDistribution (measures) {\n        let remainingAvailWidth;\n        let remainingWidth;\n        let cWidths = [];\n        let conditions = [];\n        let maxPrioritySpace = 0;\n        const {\n            matrix,\n            width: availableWidth,\n            maxMeasures: maxWidths,\n            maxWidth: currentWidth,\n            height\n        } = measures;\n        const priority = this.config().priority;\n        const primaryMatrixLength = this.primaryMatrix().length ? this.primaryMatrix()[0].length : 0;\n\n        const dist = [];\n\n        remainingAvailWidth = availableWidth;\n        remainingWidth = currentWidth;\n\n        if (priority === 2) {\n            conditions = [primaryMatrixLength - 1, primaryMatrixLength];\n            // divider = Math.min(2, matrixLen);\n        } else {\n            conditions = priority === 0 ? [primaryMatrixLength - 1] : [primaryMatrixLength];\n            // divider = Math.min(1, matrixLen);\n        }\n        conditions.forEach((i) => {\n            dist[i] = maxWidths[i];\n            maxPrioritySpace += maxWidths[i];\n            remainingAvailWidth -= dist[i];\n            remainingWidth -= dist[i];\n        });\n        matrix[0].forEach((e, i) => {\n            if (conditions.indexOf(i) === -1) {\n                dist[i] = remainingAvailWidth * (maxWidths[i] / remainingWidth);\n            }\n        });\n        matrix.forEach(row => row.forEach((col, cIdx) => {\n            if (conditions.indexOf(cIdx) === -1) {\n                col.setAvailableSpace(dist[cIdx], height);\n\n                cWidths[cIdx] = Math.max(cWidths[cIdx] || 0, Math.floor(col.getLogicalSpace().width));\n            } else {\n                cWidths[cIdx] = 0;\n            }\n        }));\n\n        const prioritySpace = availableWidth - cWidths.reduce((t, n) => t + n);\n        if (prioritySpace < 0) {\n            cWidths = cWidths.map(() => 0);\n        } else {\n            conditions.forEach((i) => {\n                cWidths[i] = Math.floor(prioritySpace * (dist[i] / maxPrioritySpace || 1));\n            });\n        }\n        return cWidths;\n    }\n\n    /**\n     * Calculates the depth of the tree that can be viewed\n     *\n     * @param {Array} widthMeasures array of widths\n     * @param {Array} heightMeasures array of heights\n     * @return {number} depth of the tree\n     * @memberof VisualMatrix\n     */\n    calculateDepth (widthMeasures, heightMeasures) {\n        let i;\n        const { height } = this.availableSpace();\n\n        for (i = 0; i < heightMeasures.length; i++) {\n            if (heightMeasures[i] <= height) break;\n        }\n\n        return Math.min(widthMeasures.length - 1, i);\n    }\n\n    /**\n     * Redistributes the provied space to all cells\n     *\n     * @param {*} viewableMatrix current viewport matrix\n     * @param {*} width provied width\n     * @param {*} height provied height\n     * @return {Object} current viewports matrixes with measures\n     * @memberof VisualMatrix\n     */\n    redistributeSpaces (width, height) {\n        let maxHeights = [];\n        let maxWidths = [];\n        const maxMeasures = this.maxMeasures();\n\n        const maxWidth = maxMeasures.reduce((t, n) => {\n            t += n;\n            return t;\n        });\n        const logicalWidths = this.getPriorityDistribution({\n            matrix: this._layoutMatrix,\n            maxWidth,\n            maxMeasures,\n            width,\n            height\n        });\n\n        this.viewableMatrix.forEach((matrixInst) => {\n            const matrix = matrixInst.matrix;\n            const mWidth = 0;\n            const mHeight = 0;\n            const options = { mWidth, mHeight, matrix, width, height, maxHeights, maxWidths, logicalWidths };\n            const measures = this.redistributeViewSpaces(options);\n            maxWidths = measures.maxWidths;\n            maxHeights = measures.maxHeights;\n        });\n        return this.computeViewableSpaces({ height, width, maxHeights, maxWidths });\n    }\n\n    /**\n     * Distibutes the given space row wisely\n     *\n     * @param {Object} measures Redistribution information\n     * @memberof VisualMatrix\n     */\n    redistributeViewSpaces (measures) {\n        let cWidths = [];\n        let rHeights = [];\n        let mHeight = 0;\n        const maxMeasures = this.maxMeasures();\n\n        const {\n            isDistributionEqual,\n            distribution,\n            isTransposed,\n            gutter\n        } = this.config();\n        const { matrix, height, maxHeights, maxWidths, logicalWidths } = measures;\n        mHeight = spaceTakenByColumn(matrix, this._lastLevelKey).height;\n\n        const maxWidth = maxMeasures.reduce((t, n) => {\n            t += n;\n            return t;\n        });\n        measures.maxMeasures = maxMeasures;\n        measures.maxWidth = maxWidth;\n        if (maxWidth > 0) {\n            cWidths = logicalWidths;\n        } else {\n            cWidths = maxMeasures.map(() => 0);\n        }\n        rHeights = getDistributedHeight({\n            matrix,\n            cIdx: this._lastLevelKey,\n            height: mHeight,\n            availableHeight: height,\n            isDistributionEqual,\n            distribution,\n            isTransposed,\n            gutter\n        });\n        if (maxWidths.length > 0) {\n            cWidths = cWidths.map((e, i) => Math.max(e, maxWidths[0][i] || 0));\n        }\n        maxWidths.push(cWidths);\n        for (let x = 0; x < maxWidths.length; x++) {\n            maxWidths[x] = cWidths;\n        }\n        maxHeights.push(rHeights);\n        return { maxWidths, maxHeights };\n    }\n\n    /**\n     * Dispatch the calculated cell dimensions to all the cells\n     *\n     * @param {Object} measures cell dimension information\n     * @return {Object} row and column heights / widths\n     * @memberof VisualMatrix\n     */\n    getCellDimensions (measures) {\n        const {\n            unitMeasures\n        } = this.config();\n        const borderWidth = unitMeasures.border;\n        const { matrixInst, maxWidths, maxHeights, matrixIndex } = measures;\n        const matrix = matrixInst.matrix;\n        const rowHeights = [[0], [0]];\n        const columnWidths = [[0], [0]];\n        const heights = [0, 0];\n        const widths = [0, 0];\n        const breakPointer = this._breakPointer;\n\n        matrix.forEach((row, rIdx) => {\n            row.forEach((cell, cIdx) => {\n                const colHeight = maxHeights[matrixIndex][rIdx] || 0;\n                const colWidth = maxWidths[matrixIndex][cIdx];\n\n                cell.setAvailableSpace(colWidth, colHeight - borderWidth);\n\n                if (rIdx === 0 && cIdx < breakPointer) {\n                    columnWidths[0][cIdx] = colWidth;\n                    widths[0] = (widths[0] || 0) + colWidth;\n                } else if (rIdx === 0 && cIdx >= breakPointer) {\n                    columnWidths[1][cIdx - breakPointer] = colWidth;\n                    widths[1] = (widths[1] || 0) + colWidth;\n                }\n                if (cIdx === this._lastLevelKey) {\n                    rowHeights[0][rIdx] = colHeight;\n                    rowHeights[1][rIdx] = colHeight;\n                }\n            });\n        });\n        return {\n            heights,\n            widths,\n            rowHeights,\n            columnWidths\n        };\n    }\n}\n\n","import { mergeRecursive } from 'muze-utils';\nimport {\n    extraCellsRemover,\n    getDistributedWidth,\n    spaceTakenByRow,\n    createMatrixEachLevel,\n    computeLogicalSpace\n  } from '../utils';\nimport { COLUMN_ROOT } from '../enums/constants';\nimport VisualMatrix from './visual-matrix';\n\n/**\n * This class used to create column / row matrix for GridLayout\n *\n * @class VisualMatrix\n */\nexport default class ColumnVisualMatrix extends VisualMatrix {\n\n    /**\n     *Creates an instance of VisualMatrix.\n     * @param {any} matrix Two set of matrices\n     * @param {any} [config={}] Configuration for VisualMatrix\n     * @memberof VisualMatrix\n     */\n    constructor (matrix, config = {}) {\n        super(matrix, config);\n\n        this._breakPointer = matrix[0].length;\n\n        // Create Tree\n        this._tree = {\n            key: COLUMN_ROOT,\n            values: this.createTree()\n        };\n        this._logicalSpace = this.computeLogicalSpace();\n    }\n\n    /**\n     * Computes the logical space taken by the entire matrixTree\n     *\n     * @return {Object} Logical space taken\n     * @memberof VisualMatrix\n     */\n    computeLogicalSpace () {\n        const matrixTree = this.tree();\n        createMatrixEachLevel(matrixTree, true);\n        return computeLogicalSpace(matrixTree, this.config(), this.maxMeasures());\n    }\n\n    computeViewableSpaces (measures) {\n        const {\n            maxHeights,\n            maxWidths,\n            height,\n            width\n        } = measures;\n\n        return this.viewableMatrix.map((matrixInst, i) => {\n            const cellDimOptions = { matrixInst, maxWidths, maxHeights, matrixIndex: i, height };\n            const {\n                heights,\n                rowHeights,\n                columnWidths\n            } = this.getCellDimensions(cellDimOptions);\n            const heightMeasures = heights;\n            const columnMeasures = [width, width];\n\n            return {\n                rowHeights: {\n                    primary: rowHeights[0],\n                    secondary: rowHeights[1]\n                },\n                columnWidths: {\n                    primary: columnWidths[0],\n                    secondary: columnWidths[1]\n                },\n                height: {\n                    primary: heightMeasures[0],\n                    secondary: heightMeasures[1]\n                },\n                width: {\n                    primary: columnMeasures[0],\n                    secondary: columnMeasures[1]\n                }\n            };\n        });\n    }\n\n    /**\n     *\n     *\n     * @return\n     * @memberof VisualMatrix\n     */\n    removeExtraCells () {\n        const {\n            isTransposed,\n            extraCellLengths\n        } = this.config();\n        const matrix = this._layoutMatrix;\n        const tree = mergeRecursive({}, this.tree());\n        const begCellLen = extraCellLengths[0];\n        const endCellLen = extraCellLengths[1] || Number.NEGATIVE_INFINITY;\n        const layoutMatrix = !isTransposed ? extraCellsRemover(matrix, begCellLen, endCellLen) :\n        matrix.slice(0).map(e => extraCellsRemover(e, begCellLen, endCellLen));\n\n        tree.values = extraCellsRemover(tree.values, begCellLen, endCellLen);\n\n        tree.matrix = tree.matrix.map(e => extraCellsRemover(e, begCellLen, endCellLen));\n\n        return {\n            tree,\n            layoutMatrix\n        };\n    }\n\n    getPriorityDistribution (measures) {\n        const {\n            height,\n            maxHeights\n        } = measures;\n        let remainingHeight = height;\n        let heightDist = [];\n        let conditions = [];\n        let divider = 2;\n        const priority = this.config().priority;\n        const primaryMatrixLength = this.primaryMatrix().length;\n\n        if (priority === 2) {\n            conditions = [primaryMatrixLength - 1, primaryMatrixLength];\n            divider = 2;\n        } else {\n            conditions = priority === 0 ? [primaryMatrixLength - 1] : [primaryMatrixLength];\n            divider = 1;\n        }\n        maxHeights.forEach((heights, index) => {\n            if (conditions.indexOf(index) === -1) {\n                heightDist[index] = heights;\n                remainingHeight -= heights;\n            }\n        });\n        if (remainingHeight < 0) {\n            heightDist = heightDist.map(() => 0);\n        } else {\n            conditions.forEach((condition) => {\n                heightDist[condition] = Math.min(maxHeights[condition], (remainingHeight) / divider);\n            });\n        }\n        return heightDist;\n    }\n\n    /**\n     * Calculates the depth of the tree that can be viewed\n     *\n     * @param {Array} widthMeasures array of widths\n     * @param {Array} heightMeasures array of heights\n     * @return {number} depth of the tree\n     * @memberof VisualMatrix\n     */\n    calculateDepth (widthMeasures) {\n        let j;\n        const { width } = this.availableSpace();\n\n        for (j = 0; j < widthMeasures.length; j++) {\n            if (widthMeasures[j] <= width) break;\n        }\n        return Math.min(widthMeasures.length - 1, j);\n    }\n\n     /**\n     * Redistributes the provied space to all cells\n     *\n     * @param {*} viewableMatrix current viewport matrix\n     * @param {*} width provied width\n     * @param {*} height provied height\n     * @return {Object} current viewports matrixes with measures\n     * @memberof VisualMatrix\n     */\n    redistributeSpaces (width, height) {\n        let maxHeights = [];\n        let maxWidths = [];\n\n        this.viewableMatrix.forEach((matrixInst) => {\n            const matrix = matrixInst.matrix;\n            const mWidth = 0;\n            const mHeight = 0;\n            const options = { mWidth, mHeight, matrix, width, height, maxHeights, maxWidths };\n            const maxMeasures = this.redistributeViewSpaces(options);\n            maxWidths = maxMeasures.maxWidths;\n            maxHeights = maxMeasures.maxHeights;\n        });\n\n        return this.computeViewableSpaces({ height, width, maxHeights, maxWidths });\n    }\n\n    /**\n     * Distibutes the given space column wisely\n     *\n     * @param {Object} measures Redistribution information\n     * @memberof VisualMatrix\n     */\n    redistributeViewSpaces (measures) {\n        let rHeights = [];\n        const {\n            matrix,\n            width,\n            maxHeights,\n            maxWidths\n        } = measures;\n        const borderWidth = this.config().unitMeasures.border;\n\n        const mWidth = spaceTakenByRow(matrix[this._lastLevelKey]).width;\n        const cWidths = getDistributedWidth({\n            row: matrix[this._lastLevelKey],\n            width: mWidth,\n            availableWidth: width\n        }, this.config());\n\n        matrix.forEach((row, rIdx) => row.forEach((col, cIdx) => {\n            const oldLogicalSpace = col.getLogicalSpace();\n\n            col.setAvailableSpace(cWidths[cIdx] - borderWidth, oldLogicalSpace.height);\n            rHeights[rIdx] = Math.max(rHeights[rIdx] || 0, Math.floor(col.getLogicalSpace().height));\n        }));\n        if (maxHeights.length > 0) {\n            rHeights = rHeights.map((e, i) => Math.max(e, maxHeights[0][i]));\n        }\n        maxHeights.push(rHeights);\n        for (let x = 0; x < maxHeights.length; x++) {\n            maxHeights[x] = rHeights;\n        }\n        maxWidths.push(cWidths);\n        return { maxHeights, maxWidths };\n    }\n\n    /**\n     * Dispatch the calculated cell dimensions to all the cells\n     *\n     * @param {Object} measures cell dimension information\n     * @return {Object} row and column heights / widths\n     * @memberof VisualMatrix\n     */\n    getCellDimensions (measures) {\n        const {\n            unitMeasures\n        } = this.config();\n        const borderWidth = unitMeasures.border;\n        const { matrixInst, height, maxWidths, maxHeights, matrixIndex } = measures;\n        const matrix = matrixInst.matrix;\n        const rowHeights = [[0], [0]];\n        const columnWidths = [[0], [0]];\n        const heights = [0, 0];\n        const widths = [0, 0];\n        const breakPointer = this._breakPointer;\n\n        const heightDistribution = this.getPriorityDistribution({ height, maxHeights: maxHeights[0] || [] });\n\n        matrix.forEach((row, rIdx) => {\n            row.forEach((cell, cIdx) => {\n                const colHeight = heightDistribution[rIdx] || 0;\n                const colWidth = maxWidths[matrixIndex][cIdx];\n\n                cell.setAvailableSpace(colWidth - borderWidth, colHeight);\n\n                if (cIdx === 0 && rIdx < breakPointer) {\n                    rowHeights[0][rIdx] = colHeight;\n                    heights[0] = (heights[0] || 0) + colHeight;\n                } else if (cIdx === 0 && rIdx >= breakPointer) {\n                    rowHeights[1][rIdx - breakPointer] = colHeight;\n                    heights[1] = (heights[1] || 0) + colHeight;\n                }\n                if (rIdx === this._lastLevelKey) {\n                    columnWidths[0][cIdx] = colWidth;\n                    columnWidths[1][cIdx] = colWidth;\n                }\n            });\n        });\n        return {\n            heights,\n            widths,\n            rowHeights,\n            columnWidths\n        };\n    }\n}\n\n","import {\n    HEIGHT, WIDTH, COLUMN, ROW, HORIZONTAL, VERTICAL, HOLISTIC,\n    MAX_WIDTH_AVAIL_FOR_COL_MATRIX, COLUMN_MATRIX, MAX_HEIGHT_AVAIL_FOR_ROW_MATRIX, ROW_MATRIX, SCROLL\n} from '../enums/constants';\n\n/**\n * Gets measurement for an instance of visual matrix\n *\n * @param {Array} matrix instance of visual matrix\n * @param {string} type height/width\n * @return {Object} Logical height/width of the matrix\n */\nexport function getMatrixMeasurement (matrix, type) {\n    if (matrix) {\n        return matrix.getLogicalSpace()[type];\n    }\n    return 0;\n}\n\n/**\n * Sets available space for an instance of visual matrix\n *\n * @param {Array} matrix instance of visual matrix\n * @param {string} type height/width\n * @param {number} value Value of measurement\n */\nexport function setMatrixMeasurement (matrix, type, value) {\n    if (matrix) {\n        const spaces = matrix.getLogicalSpace();\n        if (value && spaces[type] !== value) {\n            type === HEIGHT ? matrix.setAvailableSpace(spaces.width, value) :\n                matrix.setAvailableSpace(value, spaces.height);\n        }\n    }\n}\n\nconst setAvailableSpace = (matrix, widths, heights) => {\n    matrix.forEach((row, rIdx) => {\n        row.forEach((placeholder, cIdx) => {\n            placeholder.setAvailableSpace(widths[cIdx], heights[rIdx]);\n        });\n    });\n};\n\nconst setViewSpaces = (layout, pointerType, viewSpaces) => {\n    let pointer = layout.config()[`${pointerType}Pointer`];\n    if (viewSpaces.length - 1 < pointer) {\n        pointer = 0;\n        layout.config({ [`${pointerType}Pointer`]: pointer });\n    }\n    return pointer;\n};\n\nconst paginationDetailsMap = {\n    column: {\n        maxMeasure: MAX_WIDTH_AVAIL_FOR_COL_MATRIX,\n        matrix: COLUMN_MATRIX,\n        measureType: WIDTH,\n        scrollType: HORIZONTAL\n    },\n    row: {\n        maxMeasure: MAX_HEIGHT_AVAIL_FOR_ROW_MATRIX,\n        matrix: ROW_MATRIX,\n        measureType: HEIGHT,\n        scrollType: VERTICAL\n    }\n};\n\n/**\n * This method provides the required width/height in the different pagination stages.\n * If the pagination is holistic, then only the max width/height will be provided for layouting\n * If scroll is enabled, then the entire width/height shall be provided for layouting\n * Note: width is required for scrolling the columns while height is required for scrolling rows\n *\n *\n * @param {Layout} layout Layout instance required for configuration details\n * @param {Object} measureDetails different measure details for row/column\n * @param {number} maxMeasure maximum width/height present for column/row respectively\n * @return {number} Provides the width/height based on which further calculation can occur\n */\nconst getMatrixMeasureForPagination = (layout, measureDetails, maxMeasure, buffer) => {\n    const {\n        pagination\n    } = layout.config();\n    const {\n        matrix,\n        measureType,\n        scrollType\n    } = measureDetails;\n\n    switch (pagination) {\n    case HOLISTIC:\n        return maxMeasure;\n    default: {\n        const actualMeasure = getMatrixMeasurement(layout[matrix](), measureType) + buffer;\n\n        if (actualMeasure > maxMeasure) {\n            layout.scrollInfo({ [scrollType]: true });\n        }\n        return Math.max(maxMeasure, actualMeasure);\n    }\n    }\n};\n\n/**\n * This method uses the getMatrixMeasureForPagination function to calculate maximum measure\n * depending on the layouting algorithm used\n *\n *\n * @param {Layout} layout Layout instance required for configuration details\n * @param {string} matrixType row/column\n * @param {number} relatedMaxMeasure maximum width/height present for column/row respectively\n * @return {number} Provides the width/height based on which further calculation can occur\n */\nconst paginationMeasureGetter = (layout, matrixType, relatedMaxMeasure, buffer) =>\n    getMatrixMeasureForPagination(layout, paginationDetailsMap[matrixType], relatedMaxMeasure, buffer);\n\nconst getMatrixWidthDetails = (layout) => {\n    const rowMatrix = layout.rowMatrix();\n    const {\n        width\n    } = layout.measurement();\n    const {\n        border,\n        buffer\n    } = layout.config();\n\n    // Border adjustment for each cell in the central matrix\n    const borderWidth = border.width;\n\n    // Get width of row matrix\n    const rowMatrixWidth = getMatrixMeasurement(rowMatrix, WIDTH);\n\n    // Get maximum width allowed for the row matrix\n    const maxRowMatrixWidth = Math.min(rowMatrixWidth + buffer, width / 2);\n\n    // Get maximum width available for the column matrix\n    const maxWidthAvailableForColumnMatrix = width - maxRowMatrixWidth - borderWidth;\n\n    // Set width for column matrix\n    const columnMatrixWidth = paginationMeasureGetter(layout, COLUMN, maxWidthAvailableForColumnMatrix, 0);\n\n    return {\n        rowMatrixWidth,\n        maxRowMatrixWidth,\n        columnMatrixWidth,\n        maxWidthAvailableForColumnMatrix\n    };\n};\n\nconst getHeightRequiredByColMatrix = (layout, columnMatrixWidth) => {\n    const {\n        height\n    } = layout.measurement();\n    const columnMatrix = layout.columnMatrix();\n\n    // Get maximum allowed height for colum matrix\n    const maxColumnMatrixHeight = Math.min(columnMatrix.getLogicalSpace().height, height / 2);\n\n    // Set the computed width and max height to column matrix to determine the actual height\n    // that will be taken by the column matrix\n    columnMatrix.setAvailableSpace(columnMatrixWidth, maxColumnMatrixHeight);\n\n    // Get the set of pages column view\n    const columnViewPages = columnMatrix.getViewableSpaces();\n\n    // Figuring out total space needed by current view space\n    const columnViewSpace = columnViewPages[layout.config().columnPointer];\n\n    // Getting height of column matrix\n    const columnMatrixHeight = columnViewSpace.height.primary + columnViewSpace.height.secondary;\n\n    return {\n        columnMatrixHeight,\n        maxColumnMatrixHeight\n    };\n};\n\nconst getMatrixHeightDetails = (layout, columnMatrixWidth) => {\n    const {\n        height\n    } = layout.measurement();\n    const {\n        buffer\n    } = layout.config();\n\n    // Get actual height required by column matrix\n    const { columnMatrixHeight, maxColumnMatrixHeight } = getHeightRequiredByColMatrix(layout, columnMatrixWidth);\n\n    // Based on column height, compute max height available for row matrix\n    const maxHeightAvailableForRowMatrix = height - Math.min(maxColumnMatrixHeight, columnMatrixHeight);\n\n    // Get height for row matrix\n    const rowMatrixHeight = paginationMeasureGetter(layout, ROW, maxHeightAvailableForRowMatrix, buffer);\n\n    return {\n        columnMatrixHeight,\n        maxColumnMatrixHeight,\n        rowMatrixHeight,\n        maxHeightAvailableForRowMatrix\n    };\n};\n\nconst setValueMatrixMeasurements = (layout, rowViewableSpaces, columnViewableSpaces) => {\n    const centerMatrix = layout.centerMatrix();\n\n    const {\n        border\n    } = layout.config();\n    const matrices = layout.matrices();\n    const {\n        top,\n        bottom\n    } = matrices;\n\n    // Border adjustment for each cell in the central matrix\n    const borderWidth = border.width;\n\n    // Get the heights for each cell in the row matrix\n    const rowHeights = [].concat(...rowViewableSpaces.map(e => e.rowHeights.primary));\n\n    // Get the widths for each of the row matrix cells(primary and secondary)\n    const rowWidthsPrimary = [].concat(...rowViewableSpaces.map(e => e.columnWidths.primary));\n    const rowWidthsSecondary = [].concat(...rowViewableSpaces.map(e => e.columnWidths.secondary));\n\n    // Get the widths for each cell in the column matrix\n    const columnWidths = [].concat(...columnViewableSpaces.map(e => e.columnWidths.primary));\n\n    // Get the widths for each of the column matrix cells(primary and secondary)\n    const columnHeightsPrimary = columnViewableSpaces[0].rowHeights.primary;\n    const columnHeightsSecondary = [].concat(...columnViewableSpaces.map(e => e.rowHeights.secondary));\n\n    // Setting the available space for each cell in the centre matrix computed throught the row and\n    // column matrices\n    centerMatrix.forEach((matrix, rIdx) => {\n        matrix.forEach((placeholder, cIdx) => {\n            placeholder.setAvailableSpace(columnWidths[cIdx] - borderWidth, rowHeights[rIdx] - borderWidth);\n        });\n    });\n\n    // Set the heights and widths for the corner matrices namely:\n    // TOP_LEFT\n    setAvailableSpace(top[0], rowWidthsPrimary, columnHeightsPrimary);\n    // TOP_RIGHT\n    setAvailableSpace(top[2], rowWidthsSecondary, columnHeightsPrimary);\n    // BOTTOM_LEFT\n    setAvailableSpace(bottom[0], rowWidthsPrimary, columnHeightsSecondary);\n     // BOTTOM_RIGHT\n    setAvailableSpace(bottom[2], rowWidthsSecondary, columnHeightsSecondary);\n};\n\nconst bufferCondition = {\n    isScroll: true,\n    pagination: SCROLL\n};\n\nconst getBufferFromCondition = (layout, type) => {\n    const scrollInfo = layout.scrollInfo();\n    const {\n        pagination\n    } = layout.config();\n\n    const currentBufferType = {\n        pagination,\n        isScroll: scrollInfo[type]\n    };\n\n    return Object.keys(bufferCondition).every(e => bufferCondition[e] === currentBufferType[e]);\n};\n\nconst getActualBufferFromConfig = (layout) => {\n    const {\n        buffer\n    } = layout.config();\n    const [horizontalBuffer, verticalBuffer] = [HORIZONTAL, VERTICAL].map((type) => {\n        if (getBufferFromCondition(layout, type)) {\n            return buffer;\n        }\n        return 0;\n    });\n\n    return {\n        horizontalBuffer,\n        verticalBuffer\n    };\n};\n/**\n * Computes the measurements of space for all matrices in the\n * layout\n *\n * @param {Object} layout Instance of grid layout\n * @return {Object} set of measurements for the layout\n */\nexport const computeLayoutMeasurements = (layout) => {\n    const rowMatrix = layout.rowMatrix();\n    const columnMatrix = layout.columnMatrix();\n\n    // Compute the widths of the row and column matrices\n    const {\n        rowMatrixWidth,\n        maxRowMatrixWidth,\n        maxWidthAvailableForColumnMatrix,\n        columnMatrixWidth\n    } = getMatrixWidthDetails(layout);\n\n    // Compute the heights of the row and column matrices\n    const {\n        columnMatrixHeight,\n        rowMatrixHeight,\n        maxHeightAvailableForRowMatrix\n    } = getMatrixHeightDetails(layout, columnMatrixWidth);\n\n    const {\n        horizontalBuffer,\n        verticalBuffer\n    } = getActualBufferFromConfig(layout);\n    rowMatrix.setAvailableSpace(maxRowMatrixWidth - verticalBuffer, rowMatrixHeight - horizontalBuffer);\n\n    // Get row and columns viewable spaces\n    const rowViewableSpaces = rowMatrix.getViewableSpaces();\n    const columnViewableSpaces = columnMatrix.getViewableSpaces();\n\n    // Set view spaces for row and columns\n    setViewSpaces(layout, ROW, rowViewableSpaces);\n    setViewSpaces(layout, COLUMN, columnViewableSpaces);\n\n    // Set measures for each cell of the value matrix\n    setValueMatrixMeasurements(layout, rowViewableSpaces, columnViewableSpaces);\n\n    return {\n        rowMatrixHeight: rowMatrixHeight - horizontalBuffer,\n        rowMatrixWidth: rowMatrixWidth - verticalBuffer,\n        maxHeightAvailableForRowMatrix: maxHeightAvailableForRowMatrix - horizontalBuffer,\n\n        columnMatrixHeight,\n        columnMatrixWidth,\n        maxWidthAvailableForColumnMatrix\n    };\n};\n","/**\n * Gets view matrices based on current pointers for row and column\n *\n * @param {Object} layout instance of layout\n * @param {number} rowPointer current row pointer\n * @param {number} columnPointer current column pointer\n * @return {Object} returns the view matrix and its relevant information\n */\nexport const getViewMatrices = (layout, rowPointer, columnPointer) => {\n    const rowMatrix = layout.rowMatrix();\n    const columnMatrix = layout.columnMatrix();\n    const centerMatrix = layout.centerMatrix();\n    const matrices = layout.matrices();\n    const rowMatrices = rowMatrix.getViewableMatrices();\n    const columnMatrices = columnMatrix.getViewableMatrices();\n    const centralMatrixPointer = {\n        row: 0,\n        column: 0\n    };\n\n    for (let i = rowPointer - 1; i >= 0; i--) {\n        const length = Math.max(rowMatrices[i].primaryMatrix.length,\n            rowMatrices[i].secondaryMatrix.length);\n        centralMatrixPointer.row += length;\n    }\n     /* istanbul ignore next */\n    for (let i = columnPointer - 1; i >= 0; i--) {\n        const matrix = columnMatrices[i];\n        const { primaryMatrix, secondaryMatrix } = matrix;\n        const length = Math.max(primaryMatrix[0] ? primaryMatrix[0].length : 0,\n            secondaryMatrix[0] ? secondaryMatrix[0].length : 0);\n        centralMatrixPointer.column += length;\n    }\n\n    matrices.top[1] = columnMatrices[columnPointer].primaryMatrix;\n    matrices.bottom[1] = columnMatrices[columnPointer].secondaryMatrix;\n\n    matrices.center[0] = rowMatrices[rowPointer].primaryMatrix;\n    matrices.center[2] = rowMatrices[rowPointer].secondaryMatrix;\n\n    const rowMatrixLen = Math.max(matrices.center[0].length, matrices.center[2].length);\n     /* istanbul ignore next */\n    const columnMatrixLen = Math.max(matrices.top[1][0] ? matrices.top[1][0].length : 0, matrices.bottom[1][0] ?\n            matrices.bottom[1][0].length : 0);\n    matrices.center[1] = centerMatrix.slice(centralMatrixPointer.row, centralMatrixPointer.row + rowMatrixLen)\n        .map(matrix => matrix.slice(centralMatrixPointer.column, centralMatrixPointer.column + columnMatrixLen));\n\n    return {\n        matrices,\n        rowPages: rowMatrices.length,\n        columnPages: columnMatrices.length\n    };\n};\n\nconst measureSum = measureArr => measureArr.reduce((total, measure) => total + measure, 0);\n/**\n * Returns measurements of the cells of the current matrix\n *\n * @param {Object} layout instance of layout\n * @return {Object} returns the measurements for current view matrix\n */\nexport const getViewMeasurements = (layout, maxRowHeight, maxColWidth) => {\n    const rowMatrix = layout.rowMatrix();\n    const columnMatrix = layout.columnMatrix();\n    const {\n        columnPointer,\n        rowPointer\n    } = layout.config();\n\n    const rowSpaces = rowMatrix.getViewableSpaces()[rowPointer];\n    const colSpaces = columnMatrix.getViewableSpaces()[columnPointer];\n\n    const {\n        rowHeights,\n        width: rowMatrixWidth\n    } = rowSpaces;\n    const {\n        columnWidths,\n        height: columnMatrixHeight\n    } = colSpaces;\n\n    const { primary: leftWidth, secondary: rightWidth } = rowMatrixWidth;\n    const { primary: topHeight, secondary: bottomHeight } = columnMatrixHeight;\n\n    const centerHeight = measureSum(rowHeights.primary);\n    const centerWidth = measureSum(columnWidths.primary);\n    const viewWidth = [leftWidth, Math.min(centerWidth, maxColWidth), rightWidth];\n    const viewHeight = [topHeight, Math.min(centerHeight, maxRowHeight), bottomHeight];\n\n    return {\n        viewWidth,\n        viewHeight,\n        actualCenterMeasures: {\n            height: centerHeight,\n            width: centerWidth\n        },\n        totalMeasures: {\n            width: measureSum(viewWidth),\n            height: measureSum(viewHeight)\n        },\n        unitHeights: rowHeights,\n        unitWidths: columnWidths\n    };\n};\n","/**\n * This file declares a table that can be extended to create a Datagrid, crosstab\n * and man other visualzations that require a tabular structure.\n */\n\nimport { getUniqueId, mergeRecursive } from 'muze-utils';\nimport GenericLayout from '../generic-layout';\nimport { DEFAULT_CONFIGURATION, DEFAULT_MEASUREMENTS } from './defaults';\nimport { generateVisualMatrices } from './layout-helper';\nimport { computeLayoutMeasurements } from './computations';\nimport { getViewMeasurements, getViewMatrices } from './view-info-getter';\n/**\n * This class is used to create a tabular structure that\n * can house charts and values.\n *\n * @class GridLayout\n */\nexport default class GridLayout extends GenericLayout {\n\n    /**\n     * Creates an instance of TableLayout.\n     * @param {HTMLElement} matrices Set of upto 9 matrices containing the cells to be rendered\n     * @param {HTMLElement} mountPoint DOM element/d3 selection where the layout is to be mounted\n     * @param {Object} measurement The dimensions of the layout\n     * @param {Object} config external configurations.\n     * @memberof GenericLayout\n     */\n    constructor (matrices, mountPoint, measurement, config) {\n        super(mountPoint, measurement, config);\n        this.matrices(matrices);\n        this.config(this.constructor.defaultConfig());\n        this._layoutId = getUniqueId();\n        this._viewInfo = this.constructor.defaultViewInfo();\n        this._scrollInfo = { horizontal: false, vertical: false };\n    }\n\n    static defaultViewInfo () {\n        return Object.assign({}, {\n            layoutDimensions: {\n                border: this.defaultConfig().border,\n                viewHeight: [0, 0, 0],\n                viewWidth: [0, 0, 0]\n            },\n            viewMatricesInfo: {\n                columnPages: 0,\n                rowPages: 0,\n                matrices: { top: [], center: [], bottom: [] }\n            }\n        });\n    }\n\n    /**\n     * Returns initial set of measurements for the grid layout\n     *\n     * @static\n     * @return {Object} Returns initial set of measurements\n     * @memberof GridLayout\n     */\n    static defaultMeasurement () {\n        return DEFAULT_MEASUREMENTS;\n    }\n\n    /**\n     * Returns initialconfiguration for grid layout\n     *\n     * @static\n     * @return {Object} Returns initial configuration for grid layout\n     * @memberof GridLayout\n     */\n    static defaultConfig () {\n        return DEFAULT_CONFIGURATION;\n    }\n\n    /**\n     * This function is used to return an instance of GridLayout\n     *\n     * @return {GridLayout} Instance of grid layout.\n     * @static\n     * @memberof GridLayout\n     */\n    static create () {\n        return new GridLayout(null, null, this.defaultMeasurement(), this.defaultConfig());\n    }\n\n    /**\n     * Sets/Gets the matrices for the layout\n     *\n     * @param {Array} matrices Set of matrices\n     * @return {Object} Getter/Setter\n     * @memberof GridLayout\n     */\n    matrices (matrices) {\n        if (matrices) {\n            this._matrices = generateVisualMatrices(this, matrices);\n            return this;\n        }\n        return super.matrices(matrices);\n    }\n\n    /**\n     * Triggers the computations for the layout based on the matrices available\n     * This causes a reflow in the entire layout system.\n     *\n     * @return {Object} Layout instance\n     * @memberof GridLayout\n     */\n    triggerReflow () {\n        this.scrollInfo({ horizontal: false, vertical: false });\n        const {\n            maxHeightAvailableForRowMatrix,\n            maxWidthAvailableForColumnMatrix\n        } = computeLayoutMeasurements(this);\n\n        this.setViewInformation(maxHeightAvailableForRowMatrix, maxWidthAvailableForColumnMatrix);\n        return this;\n    }\n\n    gotoPage (type, pageNumber) {\n        const pageType = type.toLowerCase();\n        const { viewMatricesInfo } = this.viewInfo();\n        const totalPages = viewMatricesInfo[`${pageType}Pages`];\n        const pointer = Math.min(Math.max(1, pageNumber), totalPages);\n        this.config({\n            [`${pageType}Pointer`]: pointer - 1\n        });\n        this.setViewInformation();\n        this.renderGrid();\n        return this;\n    }\n\n    pages (type) {\n        const { viewMatricesInfo } = this.viewInfo();\n        const pageType = type.toLowerCase();\n        return {\n            totalPages: viewMatricesInfo[`${pageType}Pages`],\n            currentPage: this.config()[`${pageType}Pointer`] + 1\n        };\n    }\n\n    viewInfo (...viewInfo) {\n        if (viewInfo.length) {\n            this._viewInfo = viewInfo[0];\n            return this;\n        }\n        return this._viewInfo;\n    }\n\n    scrollInfo (...scrollInfo) {\n        if (scrollInfo.length) {\n            this._scrollInfo = mergeRecursive(this._scrollInfo, scrollInfo[0]);\n            return this;\n        }\n        return this._scrollInfo;\n    }\n\n    /**\n     *\n     *\n     * @returns\n     * @memberof GridLayout\n     */\n    setViewInformation (maxRowHeight, maxColWidth) {\n        const {\n            rowPointer,\n            columnPointer,\n            border\n        } = this.config();\n        const viewMatricesInfo = getViewMatrices(this, rowPointer, columnPointer);\n        const layoutDimensions = getViewMeasurements(this, maxRowHeight, maxColWidth);\n        layoutDimensions.border = border;\n        this.viewInfo({\n            viewMatricesInfo,\n            layoutDimensions\n        });\n        return this;\n    }\n}\n","import RowMatrix from '../visual-matrix/row-matrix';\nimport ColumnMatrix from '../visual-matrix/column-matrix';\n\nexport const generateVisualMatrices = (context, matrices) => {\n    // Set of matrices for layout is generated starting with the left matrix\n    let leftMatrix = [];\n    let rightMatrix = [];\n    let topMatrix = [];\n    let bottomMatrix = [];\n    let begColCells;\n    let endColCells;\n    const {\n        isRowSizeEqual,\n        isColumnSizeEqual,\n        gutterSpace,\n        distribution,\n        border,\n        breakPage,\n        priority\n    } = context.config();\n    const {\n        minUnitHeight,\n        minUnitWidth\n    } = context.measurement();\n    const { top, center, bottom } = matrices;\n    const [topLeft, topColumns, topRight] = top;\n    const [leftRows, valueMatrix, rightRows] = center;\n    const [bottomLeft, bottomColumns, bottomRight] = bottom;\n\n    if (leftRows.length > 0) {\n        // If no left matrix is present, context will be empty\n        leftMatrix = [...topLeft, ...leftRows, ...bottomLeft];\n    }\n    if (rightRows.length > 0) {\n        // If no right matrix is present, context will be empty\n        rightMatrix = [...topRight, ...rightRows, ...bottomRight];\n    }\n    if (topColumns.length > 0 && topColumns[0].length > 0) {\n        // If no top matrix is present, context will be empty\n        topMatrix = topColumns.map((d, i) => [...topLeft[i], ...d, ...topRight[i]]);\n    }\n    if (bottomColumns.length > 0 && bottomColumns[0].length > 0) {\n        // If no bottom matrix is present, context will be empty\n        bottomMatrix = bottomColumns.map((d, i) => [...bottomLeft[i], ...d, ...bottomRight[i]]);\n    }\n\n    context.rowMatrix(new RowMatrix([leftMatrix, rightMatrix], {\n        isDistributionEqual: isRowSizeEqual,\n        distribution: distribution.rows,\n        gutter: gutterSpace.rows,\n        unitMeasures: {\n            width: minUnitWidth,\n            height: minUnitHeight,\n            border: border.width\n        },\n        priority: priority.row,\n        breakPage: breakPage.rows.map(e => e + Math.max(topLeft.length, topRight.length)),\n        extraCellLengths: [topLeft.length, bottomLeft.length]\n    }));\n\n    if (topLeft.length > 0) {\n        begColCells = topLeft[0].length;\n    } else {\n        begColCells = bottomLeft.length > 0 ? bottomLeft[0].length : 0;\n    }\n\n    if (topRight.length > 0) {\n        endColCells = topRight[0].length;\n    } else {\n        endColCells = bottomRight.length > 0 ? bottomRight[0].length : 0;\n    }\n\n    context.columnMatrix(new ColumnMatrix([topMatrix, bottomMatrix], {\n        isDistributionEqual: isColumnSizeEqual,\n        distribution: distribution.columns,\n        gutter: gutterSpace.columns,\n        isTransposed: true,\n        unitMeasures: {\n            width: minUnitWidth,\n            height: minUnitHeight,\n            border: border.width\n        },\n        priority: priority.col,\n        breakPage: breakPage.columns,\n        extraCellLengths: [begColCells, endColCells]\n    }));\n    context.centerMatrix(valueMatrix);\n\n    return matrices;\n};\n","import {\n    TOP, BOTTOM, LEFT, RIGHT, CENTER, BLANK_BORDERS, COLUMN, ROW,\n    VIEW_INDEX, ROW_MATRIX_INDEX, COLUMN_MATRIX_INDEX, MIDDLE, NO_BORDERS\n} from '../enums/constants';\n\nconst borderMap = {\n    [`${TOP}-${LEFT}`]: NO_BORDERS,\n    [`${TOP}-${MIDDLE}`]: COLUMN,\n    [`${TOP}-${RIGHT}`]: NO_BORDERS,\n    [`${CENTER}-${LEFT}`]: ROW,\n    [`${CENTER}-${MIDDLE}`]: CENTER,\n    [`${CENTER}-${RIGHT}`]: ROW,\n    [`${BOTTOM}-${LEFT}`]: NO_BORDERS,\n    [`${BOTTOM}-${MIDDLE}`]: COLUMN,\n    [`${BOTTOM}-${RIGHT}`]: NO_BORDERS\n};\n\nconst applySpecificBorder = (cells, color, type, style) => {\n    cells.style(`border-${type}`, `${style} ${color}`);\n};\n\nconst specificBorderApplier = (borderTypes, showBorders, cells, borderInfo) => {\n    const {\n        color,\n        width,\n        style\n    } = borderInfo;\n    const borderStyle = `${width}px ${style}`;\n\n    borderTypes.forEach((borderType) => {\n        applySpecificBorder(cells, showBorders[borderType] ? color : BLANK_BORDERS, borderType, borderStyle);\n    });\n};\n\nconst borderApplier = (cells, borderInfo) => {\n    const {\n       showRowBorders,\n      showColBorders,\n      showValueBorders\n  } = borderInfo;\n    return {\n        row: () => specificBorderApplier([TOP, BOTTOM], showRowBorders, cells, borderInfo),\n        column: () => specificBorderApplier([LEFT, RIGHT], showColBorders, cells, borderInfo),\n        center: () => specificBorderApplier([LEFT, RIGHT, TOP, BOTTOM], showValueBorders, cells, borderInfo)\n    };\n};\n\nexport const applyBorders = (cells, border, row, column) => {\n    const borderApplierFn = borderApplier(cells, border);\n    const borderMapVal = borderMap[`${ROW_MATRIX_INDEX[VIEW_INDEX[row]]}-${COLUMN_MATRIX_INDEX[column]}`];\n    if (borderMapVal) {\n        borderApplierFn[borderMapVal]();\n    }\n};\n","import { selectElement } from 'muze-utils';\nimport {\n     TOP, BOTTOM, ROW_SPAN, COL_SPAN, CENTER, ROW, COLUMN\n} from '../enums/constants';\n\nconst orderMaker = arr => Array.from(Array(arr.length).keys());\n\nconst nestByStack = (stack, updateArr, optionalParams = {}) => {\n    let {\n        order,\n        keyFn\n    } = optionalParams;\n    const arr = updateArr.slice();\n    const currStack = stack.slice();\n    const prevStack = currStack.slice();\n    // Order in which element are to be checked for nesting, default normal looping\n    // Order is always in the order of nest, i.e., left to right\n    order = order || Array.from(Array(arr.length).keys());\n\n    // Key function, if array of objects\n    keyFn = keyFn || (v => v);\n\n    // Return same array if stack is empty\n    if (currStack.length === 0) {\n        const newArr = [];\n        order.forEach((e) => {\n            newArr.push(arr[e]);\n        });\n        return { prevStack, currStack: arr, arr: newArr };\n    }\n\n    let arrVal = '';\n    let stackVal = '';\n    const newArr = [];\n\n    // Loop in order\n    for (let i = order.length - 1; i >= 0; i--) {\n        // Get current element index from the order given\n        const currElemIndex = order[i];\n\n        // Crete a hashmap for the hierarchy by joining strings of the array for both stack and input array\n        arrVal += keyFn(arr[currElemIndex]);\n        stackVal += keyFn(currStack[currElemIndex]);\n\n        // If the current value and value in stack is same, convert it to null\n        if (arrVal === stackVal) {\n            newArr[currElemIndex] = null;\n        } else {\n            stackVal = '';\n            // Loop from the current index in order to the last element in order to change the\n            // whole hierarchy\n            for (let j = i; j < order.length; j++) {\n                const newElem = order[j];\n                const arrElem = arr[newElem];\n\n                newArr[newElem] = arrElem;\n\n                // Reset stack to new stack\n                currStack[newElem] = arrElem;\n                stackVal = arrVal;\n            }\n        }\n    }\n    const returnArr = [];\n    order.forEach((e) => {\n        returnArr.push(newArr[e]);\n    });\n    return { prevStack, currStack, arr: returnArr };\n};\n\nconst spanCalculator = (colData, colIdx, matrix, rIdx) => {\n    // if data is not header cell then rowspan\n    // has to be 1\n    if (!colData) {\n        return () => 1;\n    }\n\n    const conditions = {\n        row: count => matrix[rIdx + count] && matrix[rIdx + count][colIdx],\n        column: count => matrix[rIdx][colIdx + count]\n    };\n\n    return (type) => {\n        let count = 1;\n        let isNull = false;\n\n        while (!isNull) {\n            if (conditions[type](count) === null) {\n                count += 1;\n            } else {\n                isNull = true;\n            }\n        }\n        return count;\n    };\n};\n\nconst maskCreator = (matrix, order) => ({\n    row: () => {\n        let stack = [];\n        return matrix.map((e) => {\n            const {\n                    currStack,\n                    arr\n                } = nestByStack(stack, e, { keyFn: val => val.valueOf(), order });\n\n            stack = currStack;\n            return arr;\n        });\n    },\n    column: () => {\n        let stack = [];\n        const viewMatrix = [];\n        matrix.length && matrix[0].forEach((cell, colIndex) => {\n            const hierarchy = [];\n            matrix.forEach((row) => {\n                hierarchy.push(row[colIndex]);\n            });\n            const {\n                    currStack,\n                    arr\n                } = nestByStack(stack, hierarchy, { keyFn: val => val.valueOf(), order });\n            stack = currStack;\n\n            matrix.forEach((row, rowIndex) => {\n                viewMatrix[rowIndex] = viewMatrix[rowIndex] || [];\n                viewMatrix[rowIndex][colIndex] = arr[rowIndex];\n            });\n        });\n        return viewMatrix;\n    }\n});\n\nconst spanGenerator = viewMatrix => ({\n    row: () => {\n        const spans = [];\n        viewMatrix.forEach((row, ridx) => {\n            spans[ridx] = spans[ridx] || [];\n            row.forEach((col, i) => {\n                if (viewMatrix[ridx][i]) {\n                    const currSpan = spanCalculator(col, i, viewMatrix, ridx)('row');\n                    currSpan && spans[ridx].push(currSpan);\n                }\n            });\n        });\n        return spans;\n    },\n    column: () => viewMatrix.map((row, ridx) => row.map((col, i) => spanCalculator(col, i, viewMatrix, ridx)('column'))\n                    .filter(col => col !== 1))\n});\n\nconst getOrder = isReverse => ({\n    row: (matrix) => {\n        if (isReverse) {\n            return orderMaker(matrix[0]).reverse();\n        }\n        return orderMaker(matrix[0]);\n    },\n    column: (matrix) => {\n        if (isReverse) {\n            return orderMaker(matrix).reverse();\n        }\n        return orderMaker(matrix);\n    }\n});\n\nconst matrixSpanGeneratorMap = {\n    [`${TOP}-1`]: {\n        orderGetter: getOrder(false)[COLUMN],\n        viewMatrixMaker: (...params) => maskCreator(...params)[COLUMN],\n        spanMaker: (...params) => spanGenerator(...params)[COLUMN]\n    },\n    [`${BOTTOM}-1`]: {\n        orderGetter: getOrder(true)[COLUMN],\n        viewMatrixMaker: (...params) => maskCreator(...params)[COLUMN],\n        spanMaker: (...params) => spanGenerator(...params)[COLUMN]\n    },\n    [`${CENTER}-0`]: {\n        orderGetter: getOrder(false)[ROW],\n        viewMatrixMaker: (...params) => maskCreator(...params)[ROW],\n        spanMaker: (...params) => spanGenerator(...params)[ROW]\n    },\n    [`${CENTER}-2`]: {\n        orderGetter: getOrder(true)[ROW],\n        viewMatrixMaker: (...params) => maskCreator(...params)[ROW],\n        spanMaker: (...params) => spanGenerator(...params)[ROW]\n    }\n};\n\nconst matrixSpanGenerator = (type) => {\n    const generator = matrixSpanGeneratorMap[type];\n    if (generator) {\n        return generator;\n    }\n    return {\n        orderGetter: () => null,\n        viewMatrixMaker: matrix => () => matrix,\n        spanMaker: () => () => null\n    };\n};\n\n/**\n * This function is used to set the col and row spans\n * for the matrices based on repeated/hierarchichal data\n *\n * @export\n * @param {Array} matrix The 2d array for which filtering is to be done\n * @param {string} type Type of array (center, top, bottom)\n * @param {number} index Index of array in the row\n * @return {Object} containing the view matrix and their spans\n */\nexport function cellSpanMaker (matrix, type, index) {\n    let spans = null;\n    let viewMatrix = matrix;\n    const {\n        orderGetter,\n        viewMatrixMaker,\n        spanMaker\n    } = matrixSpanGenerator(`${type}-${index}`);\n\n    if (matrix.length) {\n        const order = orderGetter(matrix);\n        viewMatrix = viewMatrixMaker(matrix, order)();\n        spans = spanMaker(viewMatrix)();\n    }\n    return { viewMatrix, spans };\n}\n\nconst spaceAllocationDueToSpan = (span = 1, placeholder, config, index) => {\n    const height = placeholder.availHeight();\n    const width = placeholder.availWidth();\n    const borderWidth = config.border.width;\n    const { unitWidths } = config.dimensions;\n    const { col } = index;\n\n    return {\n        [ROW_SPAN] () {\n            placeholder.setAvailableSpace(width, height * span);\n        },\n        [COL_SPAN] () {\n            if (span > 1) {\n                let cumulativeWidth = 0;\n                for (let i = col; i < col + span; i++) {\n                    cumulativeWidth += unitWidths.primary[i] - borderWidth;\n                }\n                placeholder.setAvailableSpace(cumulativeWidth + borderWidth, height);\n            }\n            selectElement(this).style('height', `${height}px`);\n        }\n    };\n};\n\nconst spanApplier = (cells, spans, config, type) => {\n    let cellCounter = 0;\n    cells.attr(type, function (cell, colIndex) {\n        const span = spans[cell.rowIndex][colIndex];\n        const placeholder = cell.placeholder;\n        const index = {\n            row: cell.rowIndex,\n            col: cellCounter\n        };\n\n        spaceAllocationDueToSpan(span, placeholder, config, index)[type].bind(this)();\n        cellCounter += span;\n        return span;\n    });\n};\n\nconst spanApplierMap = {\n    [`${TOP}-0`]: null,\n    [`${TOP}-1`]: (...params) => spanApplier(...params, COL_SPAN),\n    [`${TOP}-2`]: null,\n    [`${CENTER}-0`]: (...params) => spanApplier(...params, ROW_SPAN),\n    [`${CENTER}-1`]: null,\n    [`${CENTER}-2`]: (...params) => spanApplier(...params, ROW_SPAN),\n    [`${BOTTOM}-0`]: null,\n    [`${BOTTOM}-1`]: (...params) => spanApplier(...params, COL_SPAN),\n    [`${BOTTOM}-2`]: null\n};\n\nexport const applySpans = (cells, spans, config, type) => {\n    const applier = spanApplierMap[type];\n    if (applier) {\n        applier(cells, spans, config);\n    }\n};\n","import { ERROR_MSG } from 'muze-utils';\n/**\n * An Interface to be implemented if the transaction support is necessary. This class ensures reactivity to\n * global properties.\n */\nexport default class TransactionSupport {\n    /**\n     * Property accessor for data member of the class. Data is passed to the system by calling this method.\n     */\n    data () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPl);\n    }\n\n    /**\n     * Property accessor for width of the class. Width is passed as an integer.\n     */\n    width () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPl);\n    }\n\n    /**\n     * Property accessor for height of the class. Height is passed as an integer.\n     */\n    height () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPl);\n    }\n\n    /**\n     * Property accessor for config of the class. Config is passed as an object.\n     */\n    config () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPl);\n    }\n}\n","import { TOP, BOTTOM, LEFT, TITLE, SUB_TITLE, GROUP, LAYOUT, LEGEND } from '../constants';\n\n/**\n *\n *\n * @param {*} context\n *\n */\nexport const arrangeComponents = (context) => {\n    const legendConfig = context.config().legend;\n    const titleConfig = context.title()[1];\n    const subtitleConfig = context.subtitle()[1];\n    const titleLayouts = {\n        [`${TOP}-${TOP}`]: [TITLE, SUB_TITLE, GROUP],\n        [`${BOTTOM}-${BOTTOM}`]: [GROUP, SUB_TITLE, TITLE],\n        [`${TOP}-${BOTTOM}`]: [TITLE, GROUP, SUB_TITLE],\n        [`${BOTTOM}-${TOP}`]: [SUB_TITLE, GROUP, TITLE]\n    };\n    const legendLayouts = [\n        [LEGEND, LAYOUT],\n        [LAYOUT, LEGEND]\n    ];\n    const titlePosition = titleConfig.position || TOP;\n    const subtitlePosition = subtitleConfig.position || TOP;\n\n    return {\n        headers: titleLayouts[`${titlePosition}-${subtitlePosition}`],\n        legends: legendConfig.position === LEFT || legendConfig.position === TOP ?\n        legendLayouts[0] : legendLayouts[1]\n    };\n};\n","/**\n * Flag to specify whether direction is vertical.\n */\nexport const MARGIN = 'margin';\nexport const LEFT = 'left';\nexport const RIGHT = 'right';\nexport const BOTTOM = 'bottom';\nexport const TOP = 'top';\nexport const SPACE_FIXER = 'spaceFixer';\nexport const CLASSPREFIX = 'muze';\nexport const VERTICAL_ALIGN = 'verticalAlign';\nexport const TEXT_ALIGN = 'textAlign';\nexport const IS_OFFSET = 'isOffset';\nexport const MIDDLE = 'middle';\nexport const BASELINE = 'baseline';\nexport const SHOW = 'show';\nexport const CENTER = 'center';\nexport const TEXT = 'text';\nexport const HEADER = 'header';\nexport const HEIGHT = 'height';\nexport const WIDTH = 'width';\nexport const DATA = 'data';\nexport const AXES = 'axes';\nexport const FACET_BY_FIELDS = 'facetByFields';\nexport const FIELDS = 'fields';\nexport const TRANSFORM = 'transform';\nexport const LAYER_DEF = 'layerDef';\nexport const CONFIG = 'config';\nexport const DETAIL_FIELDS = 'detailFields';\nexport const MAX_LINES = 'maxLines';\nexport const MIN_CHARS = 'minCharacters';\nexport const ROTATION = 'rotation';\n\nexport const TEXT_CELL = 'text-cell';\nexport const AXIS_CELL = 'axis-cell';\nexport const GEOM_CELL = 'geom-cell';\nexport const BLANK_CELL = 'blank-cell';\n","// eneum to refer to simple cell\nexport const SIMPLE = 'simple';\n// eneum to refer to header cell\nexport const TEXT = 'text';\n// enum to refer to axis cell\nexport const AXIS = 'axis';\n// enum to refer to visual cell\nexport const GEOM = 'geom';\n// enum to refer blank cell\nexport const BLANK = 'blank';\n","import {\n    ERROR_MSG,\n    getUniqueId,\n    mergeRecursive\n} from 'muze-utils';\nimport { SIMPLE } from './enums/cell-type';\n\n/**\n * This file declares a class that is used as an interface to create new\n * SimpleCell elements.\n * @module SimpleCell\n */\n/**\n * Base class for all table cells.\n *\n * @interface\n * @class SimpleCell\n */\nclass SimpleCell {\n\n    /**\n     * Creates an instance of SimpleCell.\n     *\n     * @param {*} config The input configuration.\n     * @memberof SimpleCell\n     */\n    constructor (config) {\n        this._id = getUniqueId();\n\n        const defConfig = mergeRecursive({}, this.constructor.defaultConfig());\n        this._config = mergeRecursive(defConfig, config || {});\n\n        this._mount = null;\n    }\n\n    /**\n     * Returns the type of the placehlder.\n     *\n     * @readonly\n     * @memberof SimpleCell\n     */\n    get type () {\n        return SIMPLE;\n    }\n\n    /**\n     * Returns the type of the placehlder.\n     *\n     * @readonly\n     * @memberof SimpleCell\n     * @return {Object} Default config for the placeholder\n     */\n    static defaultConfig () {\n        return {};\n    }\n\n    /**\n     * Returns the value contained by the SimpleCell.\n     *\n     * @memberof SimpleCell\n     */\n    valueOf () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    /**\n     * Returns a unique identifier for the instance used\n     * to control selective rendering.\n     *\n     * @memberof SimpleCell\n     */\n    id () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    /**\n     * Returns a serialized representation of the instance.\n     *\n     * @memberof SimpleCell\n     */\n    serialize () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    /**\n     * Returns an object with width and height fields\n     * specifying the space taken up by this metod.\n     *\n     * @memberof SimpleCell\n     */\n    getLogicalSpace () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    /**\n     * Method used to set the space available to render the SimpleCell\n     *\n     * @param {number} width The available width.\n     * @param {number} height The available height.\n     * @memberof SimpleCell\n     */\n    setAvailableSpace () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    /**\n     * Render the SimpleCell inthe supplied mount point.\n     *\n     * @param {HTMLElement} mount The mount point to render in.\n     * @memberof SimpleCell\n     */\n    render () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    /**\n     * Render the SimpleCell inthe supplied mount point.\n     *\n     * @param {HTMLElement} mount The mount point to render in.\n     * @memberof SimpleCell\n     */\n    remove () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    getMinMeasures (providedMinMeasure = 0) {\n        return providedMinMeasure;\n    }\n\n}\n\nexport default SimpleCell;\n","/**\n * This file exports variables that are used as defaults for\n * the placeholders\n */\nimport * as CONSTANTS from './constants';\n\n /**\n * Default Configuration for the cells\n * @return {Object} Default configuration\n */\nexport const DEFAULT_CONFIG = {\n    [CONSTANTS.MARGIN]: {\n        [CONSTANTS.LEFT]: 0,\n        [CONSTANTS.RIGHT]: 0,\n        [CONSTANTS.TOP]: 0,\n        [CONSTANTS.BOTTOM]: 0\n    },\n    [CONSTANTS.SPACE_FIXER]: 2,\n    [CONSTANTS.IS_OFFSET]: false,\n    [CONSTANTS.VERTICAL_ALIGN]: null,\n    [CONSTANTS.TEXT_ALIGN]: CONSTANTS.CENTER,\n    [CONSTANTS.SHOW]: true,\n    [CONSTANTS.MAX_LINES]: 0,\n    [CONSTANTS.MIN_CHARS]: 0,\n    [CONSTANTS.ROTATION]: null\n};\n","import { mergeRecursive } from 'muze-utils';\nimport { GEOM, TEXT, AXIS, BLANK } from './enums/cell-type';\n\nconst DEFAULT_PROPS = {\n    mount: {},\n    availHeight: {},\n    availWidth: {},\n    config: {\n        sanitization: (context, value) => mergeRecursive(context._config, value)\n    },\n    logicalSpace: {},\n    minSpacing: {},\n    source: {}\n};\n\nconst geomProps = {\n    data: {},\n    caption: {},\n    config: {},\n    axes: {},\n    facetByFields: {},\n    fields: {},\n    transform: {},\n    layerDef: {},\n    detailFields: {}\n};\n\nconst textProps = {\n    smartText: {}\n};\nexport const PROPS = {\n    [GEOM]: mergeRecursive(geomProps, DEFAULT_PROPS),\n    [TEXT]: mergeRecursive(textProps, DEFAULT_PROPS),\n    [AXIS]: DEFAULT_PROPS,\n    [BLANK]: DEFAULT_PROPS\n};\n","/**\n * This file declares a class that represents a table cell\n * used to house an axis.\n * @module VisualCell\n */\nimport { selectElement, makeElement, generateGetterSetters } from 'muze-utils';\nimport { CLASSPREFIX, HEIGHT, WIDTH, AXIS_CELL, BOTTOM, TOP } from './enums/constants';\nimport SimpleCell from './simple-cell';\nimport { DEFAULT_CONFIG } from './enums/defaults';\nimport { AXIS } from './enums/cell-type';\nimport { PROPS } from './props';\n\n/**\n * Computes the logical space of the an axis instance within an axis cell\n *\n * @param {Object} context Required to get the needed parameters to compute axis space\n * @return {Object} Returns the logical space for axis\n */\nconst computeAxisSpace = (context) => {\n    let logicalWidth;\n    let logicalHeight;\n    const axis = context.source();\n    const {\n        spaceFixer,\n        margin\n    } = context.config();\n    const {\n        width,\n        height\n    } = axis.getLogicalSpace();\n    const {\n            show\n        } = axis.config();\n    if (show === true) {\n        logicalHeight = Math.floor(height + margin.top + margin.bottom + spaceFixer);\n        logicalWidth = Math.floor(width + margin.left + margin.right + spaceFixer);\n    } else {\n        [logicalWidth, logicalHeight] = [width, height];\n    }\n    return {\n        width: logicalWidth,\n        height: logicalHeight\n    };\n};\n\n/**\n * Represents an axis cell.\n *\n * @class Axis\n */\nclass AxisCell extends SimpleCell {\n\n    /**\n     * Creates an instance of AxisCell.\n     *\n     * @param {Object} config The input config.\n     * @memberof AxisCell\n     */\n    constructor (config) {\n        super(config);\n\n        this._axis = null;\n        this._availHeight = null;\n        this._availWidth = null;\n        this._logicalSpace = null;\n\n        generateGetterSetters(this, PROPS[AXIS]);\n    }\n\n    /**\n     * return the type pf SimpleCell cell.\n     *\n     * @readonly\n     * @memberof AxisCell\n     */\n    get type () {\n        return AXIS;\n    }\n\n    /**\n     * This method return the value conatined by this SimpleCell.\n     *\n     * @return {SimpleAxis | ColorAxis} Instance of SimpleAxis or ColorAxis.\n     * @memberof AxisCell\n     */\n    valueOf () {\n        return this.source().id;\n    }\n\n    /**\n     * This method return the unique identififer of the axis\n     *\n     * @return {string} Id of the axis.\n     * @memberof AxisCell\n     */\n    get id () {\n        return this._id;\n    }\n\n    /**\n     * Retrns the serialized representation of this cell.\n     *\n     * @return {Object}Object with serializable props.\n     * @memberof AxisCell\n     */\n    serialize () {\n        return {\n            type: AXIS,\n            axis: this.source().serialize()\n        };\n    }\n\n    /**\n     * return the default configuration for the text cell\n     *\n     * @static\n     * @return {Object} Default configuration of the cell\n     * @memberof AxisCell\n     */\n    static defaultConfig () {\n        return DEFAULT_CONFIG;\n    }\n\n    /**\n     * return the space taken up by an axis element in the dom.\n     *\n     * @return {Object} Object with width and height fields.\n     * @memberof AxisCell\n     */\n    getLogicalSpace () {\n        if (!this.logicalSpace()) {\n            this.logicalSpace(computeAxisSpace(this));\n        }\n        return this.logicalSpace();\n    }\n\n    /**\n     * This method is used to set the space availiable to render\n     * the SimpleCell.\n     *\n     * @param {number} width The width of SimpleCell.\n     * @param {number} height The height of SimpleCell.\n     * @return {Instance} Returns current Instance\n     * @memberof AxisCell\n     */\n    setAvailableSpace (width, height) {\n        this.availWidth(width);\n        this.availHeight(height);\n        const {\n            margin,\n            isOffset\n        } = this.config();\n\n        if (width || height) {\n            this.source().setAvailableSpace(width, height, margin, isOffset);\n            this.source().logicalSpace(null);\n        } else {\n            this.source().resetLogicalSpace();\n        }\n        this.logicalSpace(null);\n        return this;\n    }\n\n    /**\n     * This method is used to render the axis inside the axis cell.\n     *\n     * @param {HTMLElement} mount The mount point.\n     * @return {Selection} node where axis mounted\n     * @memberof AxisCell\n     */\n    /* istanbul ignore next */render (mount) {\n        if (!mount) {\n            return this;\n        }\n        let actualWidth = 0;\n        let actualHeight = 0;\n        const axis = this.source();\n        const availHeight = this.availHeight();\n        const availWidth = this.availWidth();\n        const {\n            margin\n        } = this.config();\n        const {\n            top,\n            bottom,\n            left,\n            right\n        } = margin;\n        const {\n            show,\n            orientation\n        } = axis.config();\n        const wrapperDiv = makeElement(selectElement(mount), 'div', [this], `${CLASSPREFIX}-${AXIS_CELL}`);\n        const selection = makeElement(wrapperDiv, 'svg', [1], `${CLASSPREFIX}-axis-container`);\n        selection.classed(`${CLASSPREFIX}-axis-container-${orientation}`, true);\n\n        this.mount(mount);\n        if (!availWidth) {\n            selection.attr(WIDTH, `${0}px`);\n        }\n        if (!availHeight) {\n            selection.attr(HEIGHT, `${0}px`);\n        }\n        actualWidth = availWidth;\n        actualHeight = availHeight;\n        if (!show) {\n            actualWidth = (orientation === TOP || orientation === BOTTOM) ? availWidth : 0;\n            actualHeight = (orientation === TOP || orientation === BOTTOM) ? 0 : availHeight;\n        }\n        wrapperDiv.style(WIDTH, `${actualWidth}px`)\n                        .style(HEIGHT, `${actualHeight}px`)\n                        .style('margin-top', top)\n                        .style('margin-bottom', bottom)\n                        .style('margin-left', left)\n                        .style('margin-right', right);\n\n        axis.mount(selection.node());\n        return selection;\n    }\n\n    /**\n     * Disposes the cell\n     *\n     * @return {Instance} Current instance of AxisCell\n     * @memberof AxisCell\n     */\n    remove () {\n        this.source() && this.source().remove();\n        this.mount() && this.mount().remove();\n        return this;\n    }\n}\n\nexport default AxisCell;\n\n","/**\n * This file declares a class that represents a BLANK element in a  table.\n * @module VisualCell\n */\nimport {\n    selectElement,\n    makeElement,\n    applyStyle,\n    generateGetterSetters\n    } from 'muze-utils';\nimport SimpleCell from './simple-cell';\nimport { CLASSPREFIX, BLANK_CELL } from './enums/constants';\nimport { BLANK } from './enums/cell-type';\nimport { DEFAULT_CONFIG } from './enums/defaults';\nimport { PROPS } from './props';\n\n/**\n * Represents a table haeder.\n *\n * @class BLANK\n */\nclass BlankCell extends SimpleCell {\n\n    /**\n     * Creates an instance of BLANK.\n     * @param {Object} config The input configuration.\n     * @memberof BLANK\n     */\n    constructor (config) {\n        super(config);\n\n        generateGetterSetters(this, PROPS[BLANK]);\n    }\n\n    /**\n     * return the type pf SimpleCell cell.\n     *\n     * @readonly\n     * @memberof BlankCell\n     */\n    get type () {\n        return BLANK;\n    }\n\n    /**\n     * This method return the value contained by this SimpleCell.\n     *\n     * @return {string} The text value contained by this cell.\n     * @memberof BlankCell\n     */\n    valueOf () {\n        return this.id;\n    }\n\n    /**\n     * return the default configuration for the text cell\n     *\n     * @static\n     * @return {Object} Default configuration of the cell\n     * @memberof BlankCell\n     */\n    static defaultConfig () {\n        return DEFAULT_CONFIG;\n    }\n\n    /**\n     * This method is used to return a unique identifier for\n     * the BLANK cell.\n     *\n     * @return {string} The unique identifier for the BLANK.\n     * @memberof BlankCell\n     */\n    get id () {\n        return this._id;\n    }\n\n    /**\n     * This method is used to obtain a serialized representation of this instance.\n     *\n     * @return {Object} Object with serilizable props.\n     * @memberof BLANK\n     */\n    serialize () {\n        return {\n            type: BLANK\n        };\n    }\n\n    /**\n     * This method return the space taken up\n     * by the text with the style applied.\n     *\n     * @return {Object} width and height taken up by the text.\n     * @memberof BLANK\n     */\n    getLogicalSpace () {\n        if (!this.logicalSpace()) {\n            return {\n                width: this.width || 0,\n                height: this.height || 0\n            };\n        }\n        return this.logicalSpace();\n    }\n\n    /**\n     * This method is used to set the available space.\n     *\n     * @param {number} width The available width.\n     * @param {number} height The available height.\n     * @return {Instance} Returns current Instance\n     * @memberof BlankCell\n     */\n    setAvailableSpace (width, height) {\n        this.availWidth(width);\n        this.availHeight(height);\n        this.logicalSpace(null);\n        return this;\n    }\n\n    /**\n     * This method is used to render the BLANK cell inside\n     * the provided mount point.\n     *\n     * @param {HTMLElement} mount The mount point for this cell.\n     * @return {Instance} Returns current Instance\n     * @memberof BLANK\n     */\n    /* istanbul ignore next */render (mount) {\n        if (mount) {\n            const { style } = this.config();\n            // append span element to mount point\n            this.mount(mount);\n            const container = selectElement(mount);\n            const elem = makeElement(container, 'div', [this.id]);\n            elem.classed(`${CLASSPREFIX}-${BLANK_CELL}`, true);\n            elem.style('width', `${this.availWidth()}px`);\n            elem.style('height', `${this.availHeight()}px`);\n            elem.html('');\n            // apply style on the returned element\n            if (style) {\n                applyStyle(elem, style);\n            }\n        } return this;\n    }\n\n    /**\n     * Removes the cell(Disposal)\n     *\n     * @return {Instance} Returns current Instance\n     * @memberof BlankCell\n     */\n    remove () {\n        this.mount() && this.mount().remove();\n        return this;\n    }\n\n    getMinMeasures () {\n        return 0;\n    }\n }\nexport default BlankCell;\n","/**\n * This file declares a class that represents a Text element in a  table.\n * @module VisualCell\n */\n\nimport {\n    selectElement,\n    makeElement,\n    getSmartComputedStyle,\n    generateGetterSetters\n} from 'muze-utils';\nimport SimpleCell from './simple-cell';\nimport { TEXT } from './enums/cell-type';\nimport { PROPS } from './props';\nimport { DEFAULT_CONFIG } from './enums/defaults';\nimport { CLASSPREFIX, TOP, BOTTOM, LEFT, RIGHT, HEADER, WIDTH, TEXT_CELL } from './enums/constants';\nimport './text-cell.scss';\n\nconst setSmartText = (context) => {\n    const source = context.source();\n    const {\n        height: minHeightSpace,\n        width: minWidthSpace\n    } = context.minSpacing();\n    const {\n       margin,\n       rotation\n   } = context.config();\n    const {\n        left,\n        right,\n        top,\n        bottom\n     } = margin;\n    const paddedHeight = top + bottom + minHeightSpace;\n    const paddedWidth = left + right + minWidthSpace;\n    const availHeight = context.availHeight() - paddedHeight;\n    const availWidth = context.availWidth() - paddedWidth;\n    const labelManager = context.dependencies().labelManager;\n\n    labelManager.setStyle(context._computedStyle);\n\n    !rotation && context.smartText(labelManager.getSmartText(source, availWidth, availHeight, false));\n    rotation && context.smartText(labelManager.getSmartText(source, availHeight, availWidth, true));\n\n    return context;\n};\n\n/**\n* Computes the Logical Space for the text\n*\n* @param {Object} context Required to get the needed parameters to compute text space\n* @return {Object} Logical space taken up by text\n* @memberof TextCell\n*/\nconst computeTextSpace = (context) => {\n    const { labelManager } = context.dependencies();\n    const {\n        height: minHeightSpace,\n        width: minWidthSpace\n    } = context.minSpacing();\n    const {\n       margin,\n       show,\n       maxLines,\n       minCharacters\n   } = context.config();\n    const {\n       left,\n       right,\n       top,\n       bottom\n    } = margin;\n    const paddedHeight = top + bottom + minHeightSpace;\n    const paddedWidth = left + right + minWidthSpace;\n    const availHeight = context.availHeight() - paddedHeight;\n    const availWidth = context.availWidth() - paddedWidth;\n    const source = context.source();\n    const space = context.smartText();\n    const minText = new Array(minCharacters).fill('W').join('');\n    const _minTextSpace = labelManager.getOriSize(minText);\n\n    context.config({ rotation: false });\n    if (space.width > (availWidth || 0) && maxLines) {\n        space.height = space.oriTextHeight * maxLines;\n    }\n    if (availWidth && availWidth < space.width) {\n        space.width = _minTextSpace.width;\n    }\n    if (availWidth && availWidth < Math.min(_minTextSpace.width, space.oriTextWidth)) {\n        const smartSpace = labelManager.getSmartText(source, availHeight, _minTextSpace.height, true);\n        space.width = smartSpace.height;\n        space.height = smartSpace.width;\n        context.config({ rotation: true });\n        context.smartText(smartSpace);\n    }\n\n    if (show) {\n        return {\n            width: Math.ceil(space.width) + paddedWidth,\n            height: Math.ceil(space.height) + paddedHeight\n        };\n    } return {\n        width: 0,\n        height: 0\n    };\n};\n\n/**\n * Represents a table haeder.\n *\n * @class Text\n */\nclass TextCell extends SimpleCell {\n\n    /**\n     * Creates an instance of Text.\n     * @param {Object} config The input configuration.\n     * @param {string} dependencies Dependencies for the class(labelManager)\n     * @memberof Text\n     */\n    constructor (config, dependencies) {\n        super(config);\n\n        this._dependencies = dependencies;\n        this._className = this._config.className ||\n                    (this._config.type === HEADER ? `${CLASSPREFIX}-${HEADER}-cell` : `${CLASSPREFIX}-${TEXT}-cell`);\n        this._computedStyle = getSmartComputedStyle(selectElement('body'), this._className);\n        this._dependencies.labelManager.setStyle(this._computedStyle);\n        generateGetterSetters(this, PROPS[TEXT]);\n        const space = this._dependencies.labelManager.getOriSize('w');\n        this.minSpacing({ width: Math.floor(space.width * 3 / 4), height: Math.floor(space.height / 2) });\n        setSmartText(this);\n    }\n\n    /**\n     * return the type pf SimpleCell cell.\n     *\n     * @readonly\n     * @memberof TextCell\n     */\n    get type () {\n        return TEXT;\n    }\n\n    /**\n     * This method return the value contained by this SimpleCell.\n     *\n     * @return {string} The text value contained by this cell.\n     * @memberof TextCell\n     */\n    valueOf () {\n        return this.source();\n    }\n\n    /**\n     * This method is used to return a unique identifier for\n     * the Text cell.\n     *\n     * @return {string} The unique identifier for the Text.\n     * @memberof TextCell\n     */\n    get id () {\n        return this._id;\n    }\n\n    /**\n     * Returns the dependencies of the instance\n     *\n     * @return {Object} Dependencies needed by the class\n     * @memberof TextCell\n     */\n    dependencies () {\n        return this._dependencies;\n    }\n\n    /**\n     * This method is used to obtain a serialized representation of this instance.\n     *\n     * @return {Object} Object with serilizable props.\n     * @memberof TextCell\n     */\n    serialize () {\n        return {\n            text: this.source(),\n            type: TEXT\n        };\n    }\n\n    /**\n     * return the default configuration for the text cell\n     *\n     * @static\n     * @return {Object} Default configuration of the cell\n     * @memberof TextCell\n     */\n    static defaultConfig () {\n        return DEFAULT_CONFIG;\n    }\n\n    /**\n     * This method return the space taken up\n     * by the text with the style applied.\n     *\n     * @return {Object} width and height taken up by the text.\n     * @memberof Text\n     */\n    getLogicalSpace () {\n        if (!this.logicalSpace()) {\n            this.logicalSpace(computeTextSpace(this));\n        }\n        return this.logicalSpace();\n    }\n\n    /**\n     * This method is used to set the available space.\n     *\n     * @param {number} width The available width.\n     * @param {number} height The available height.\n     * @return {Instance} Returns current Instance\n     * @memberof TextCell\n     */\n    setAvailableSpace (width, height) {\n        this.availWidth(width);\n        this.availHeight(height);\n        setSmartText(this);\n        this.logicalSpace(null);\n        return this;\n    }\n\n    /**\n     * This method is used to render the Text cell inside\n     * the provided mount point.\n     *\n     * @param {HTMLElement} mount The mount point for this cell.\n     * @return {Instance} Returns current Instance\n     * @memberof Text\n     */\n    render (mount) {\n        const availWidth = this.availWidth();\n        const availHeight = this.availHeight();\n        const {\n            margin,\n            show,\n            verticalAlign,\n            textAlign,\n            rotation\n        } = this.config();\n\n        this.mount(mount);\n        if (show) {\n            const container = selectElement(mount);\n            const elem = makeElement(container, 'div', [this.id], `${CLASSPREFIX}-${TEXT_CELL}`);\n            const vAlign = verticalAlign || rotation ? 'middle' : 'top';\n            const {\n                width,\n                height\n            } = this.smartText();\n            const {\n                height: minHeightSpace\n            } = this.minSpacing();\n            const translation = {\n                top: width + minHeightSpace / 2,\n                middle: width / 2 + minHeightSpace,\n                bottom: minHeightSpace\n            };\n\n            container.style('vertical-align', vAlign);\n\n            // Set class name\n            elem.classed(this._className, true);\n\n            // Apply styles\n            elem.style('text-align', textAlign);\n            elem.style('display', 'inline');\n            elem.style('transform', rotation ? `translate(${height / 2}px,\n                ${translation[vAlign]}px) rotate(-90deg)` : '');\n            elem.style(WIDTH, availWidth ? `${availWidth}px` : '100%');\n            [TOP, BOTTOM, LEFT, RIGHT].forEach((type) => {\n                container.style(`margin-${type}`, `${margin[type]}px`);\n            });\n            elem.style('text-align', textAlign);\n            elem.style('display', 'inline');\n            // set the text as the innerHTML\n            this._dependencies.labelManager.setStyle(this._computedStyle);\n            elem.html(this._dependencies.labelManager.getSmartText(this.source(), availWidth, availHeight, true).text);\n        }\n        return this;\n    }\n\n    /**\n     * Disposes the cell\n     *\n     * @return {Instance} Returns current Instance\n     * @memberof TextCell\n     */\n    remove () {\n        this.mount() && this.mount().remove();\n        return this;\n    }\n }\n\nexport default TextCell;\n","/**\n * This file declares a class that is used to represent a table cell\n * that houses a visual unit.\n * @module VisualCell\n */\n\nimport { selectElement, makeElement, generateGetterSetters } from 'muze-utils';\nimport SimpleCell from './simple-cell';\nimport { GEOM } from './enums/cell-type';\nimport { PROPS } from './props';\nimport {\n    CLASSPREFIX, HEIGHT, WIDTH, DATA, AXES, FACET_BY_FIELDS, FIELDS, TRANSFORM, LAYER_DEF, CONFIG, GEOM_CELL,\n    DETAIL_FIELDS\n} from './enums/constants';\nimport { DEFAULT_CONFIG } from './enums/defaults';\n\n/**\n * Calculates the logical space of the cell\n *\n * @param {Object} context Required to get the needed parameters to compute unit space\n * @return {Object} Logical space taken up by the unit\n * @memberof GeomCell\n */\nconst computeGeomSpace = (context) => {\n    const config = context.source().config();\n    const { width, height } = config;\n    return {\n        width: Math.ceil(width),\n        height: Math.ceil(height + context.getCaptionSpace().height)\n    };\n};\n\n /**\n * This class represents a SimpleCell for visual unit.\n *\n * @class GeomCell\n */\nclass GeomCell extends SimpleCell {\n\n    /**\n     * Creates an instance of GeomCell.\n     * @param {Object} config The input configuration.\n     * @memberof GeomCell\n     */\n    constructor (config) {\n        super(config);\n\n        this._unit = null;\n        this._layers = null;\n        this._axes = {};\n        this._datamodel = {};\n        this._facetByFields = {};\n        this._fields = null;\n        this._transform = null;\n        this._caption = null;\n\n        generateGetterSetters(this, PROPS[GEOM]);\n    }\n\n    /**\n     * return the type pf SimpleCell cell.\n     *\n     * @readonly\n     * @memberof GeomCell\n     */\n    get type () {\n        return GEOM;\n    }\n\n    /**\n     * This method return the value contained by this cell.\n     *\n     * @return {VisualUnit} Instance of visual unit contained by visual unit.\n     * @memberof GeomCell\n     */\n    valueOf () {\n        return this.source();\n    }\n\n    /**\n     * This method is used to return the id of the\n     * visual unit housed by this cell.\n     *\n     * @return {string} The unique id of the visual unit.\n     * @memberof GeomCell\n     */\n    get id () {\n        return this.source().id();\n    }\n\n    /**\n     * This method return a serialized representation of\n     * this instance.\n     *\n     * @return {Object} Object with serializable props.\n     * @memberof GeomCell\n     */\n    serialize () {\n        return {\n            type: GEOM,\n            unit: this.source().serialize(),\n            caption: this.caption()\n        };\n    }\n\n    /**\n     * return the default configuration for the geom cell\n     *\n     * @static\n     * @return {Object} Default configuration of the cell\n     * @memberof GeomCell\n     */\n    static defaultConfig () {\n        return DEFAULT_CONFIG;\n    }\n\n    /**\n     * Updates the model based on the changed parameters\n     *\n     * @return {Instance} return instance\n     * @memberof GeomCell\n     */\n    updateModel () {\n        const unit = this.source();\n        unit.lockModel();\n        unit.clearCaching();\n        [LAYER_DEF, TRANSFORM, AXES, FIELDS, CONFIG, DATA, AXES, FACET_BY_FIELDS, DETAIL_FIELDS].forEach((prop) => {\n            this[prop]() && unit[prop](this[prop]());\n        });\n        unit.unlockModel();\n        return this;\n    }\n\n    /**\n     * It gives the space taken by the caption of the unit\n     *\n     * @return {Object} return the space taken by caption\n     * @memberof GeomCell\n     */\n    getCaptionSpace () {\n        const caption = this.caption();\n\n        let captionSpace = { width: 0, height: 0 };\n        if (caption) {\n            captionSpace = caption.getLogicalSpace();\n        }\n        return captionSpace;\n    }\n\n    /**\n     * return the space taken up by the element in the dom.\n     *\n     * @return {Object} Object with width and height fields.\n     * @memberof GeomCell\n     */\n    getLogicalSpace () {\n        if (!this.logicalSpace()) {\n            this.logicalSpace(computeGeomSpace(this));\n        }\n        return this.logicalSpace();\n    }\n\n    /**\n     * This method is used to set the space available to\n     * render the SimpleCell.\n     *\n     * @param {number} width The available width.\n     * @param {number} height The available height.\n     * @return {Instance} Returns current Instance\n     * @memberof GeomCell\n     */\n    setAvailableSpace (width, height) {\n        const unit = this.source();\n\n        this.availWidth(width);\n        this.availHeight(height);\n        unit.lockModel();\n        unit.width(width).height(height - this.getCaptionSpace().height);\n        unit.unlockModel();\n        this.logicalSpace(null);\n        return this;\n    }\n\n    /**\n     * his method is used to render the visual unit inside the provided cell.\n     *\n     * @param {HTMLElement} mount The mountpoint in the table.\n     * @return {Instance} Returns current Instance\n     * @memberof GeomCell\n     */\n    render (mount) {\n        if (mount) {\n            this.mount(mount);\n            const availHeight = this.availHeight();\n            const availWidth = this.availWidth();\n            const caption = this.caption();\n            const wrapperDiv = makeElement(selectElement(mount), 'div', [1], `${CLASSPREFIX}-${GEOM_CELL}`);\n\n            if (caption) {\n                const captionDom = makeElement(wrapperDiv, 'div', [caption], `${CLASSPREFIX}-unit-caption`).node();\n                caption.render(captionDom);\n            }\n            const selection = makeElement(wrapperDiv, 'div', [1], `${CLASSPREFIX}-unit`);\n            wrapperDiv.style(WIDTH, `${availWidth}px`).style(HEIGHT, `${availHeight}px`);\n            selection.style(WIDTH, `${availWidth}px`)\n                            .style(HEIGHT, `${availHeight - this.getCaptionSpace().height}px`);\n            this.source().mount(selection.node());\n        }\n        return this;\n    }\n\n    /**\n     * Disposes the cell\n     *\n     * @return {Object} Current instance\n     * @memberof GeomCell\n     */\n    remove () {\n        this.mount() && this.mount().remove();\n        this.source().remove();\n        return this;\n    }\n}\n\nexport default GeomCell;\n","import AxisCell from './axis-cell';\nimport BlankCell from './blank-cell';\nimport TextCell from './text-cell';\nimport GeomCell from './geom-cell';\nimport SimpleCell from './simple-cell';\n\nimport * as CONSTANTS from './constants';\n\nexport const DEFAULT_PLACEHOLDERS = {\n    [CONSTANTS.SIMPLE_CELL]: SimpleCell,\n    [CONSTANTS.TEXT_CELL]: TextCell,\n    [CONSTANTS.AXIS_CELL]: AxisCell,\n    [CONSTANTS.GEOM_CELL]: GeomCell,\n    [CONSTANTS.BLANK_CELL]: BlankCell\n};\n\n","export const SIMPLE_CELL = 'SimpleCell';\nexport const TEXT_CELL = 'TextCell';\nexport const AXIS_CELL = 'AxisCell';\nexport const BLANK_CELL = 'BlankCell';\nexport const GEOM_CELL = 'GeomCell';\n\n","import { DEFAULT_PLACEHOLDERS } from './defaults';\n\n/**\n * Creates a registry for the cells, which can be used for\n * setting a new cell or getting the registered cells\n *\n * @return {Object} Setters and getters for registered cells\n */\nconst cellRegistry = () => {\n    const reg = DEFAULT_PLACEHOLDERS;\n    return {\n        set: (key, def) => {\n            if (key in reg) {\n                reg[key] = def;\n            }\n            return cellRegistry;\n        },\n        get: () => reg\n    };\n};\nexport default cellRegistry;\n","import { TextCell } from '@chartshq/visual-cell';\nimport { escapeHTML } from 'muze-utils';\nimport { TOP } from '../constants';\n\n/**\n *\n *\n * @param {*} rawContent\n *\n */\nconst resolveTitleSubTitleContent = (rawContent) => {\n    if (typeof rawContent === 'function' && !rawContent._sanitize) {\n        return rawContent();\n    }\n    return escapeHTML(rawContent());\n};\n\n/**\n *\n *\n * @param {*} config\n * @param {*} cellType\n * @param {*} labelManager\n * @param {*} prevCell\n *\n */\nconst headerCreator = (config, cellType, labelManager, prevCell) => {\n    let margin = {};\n    const {\n        content,\n        classPrefix,\n        maxLines\n    } = config;\n    const cell = prevCell || new TextCell(\n        {\n            type: cellType === 'title' ? 'header' : 'text',\n            className: `${classPrefix}-${cellType}-cell`\n        }, {\n            labelManager\n        })\n     .config({ maxLines }).minSpacing({ width: 0, height: 0 });\n\n    cell.source(content);\n    cell._minTickDiff = { height: 0, width: 0 };\n\n    if (config.position === TOP) {\n        margin = { top: 0, bottom: config.padding };\n    } else {\n        margin = { top: config.padding, bottom: 0 };\n    }\n    cell.config({ margin });\n\n    return {\n        height: cell.getLogicalSpace().height,\n        cell\n    };\n};\n\n/**\n *\n *\n * @param {*} config\n * @param {*} type\n * @param {*} labelManager\n * @param {*} cell\n *\n */\nconst createHeading = (config, type, labelManager, prevCell) => {\n    if (!config) { return ''; }\n\n    return headerCreator(\n        config,\n        type,\n        labelManager,\n        prevCell\n    );\n};\n\n/**\n *\n *\n * @param {*} context\n */\nexport const createHeaders = (context, canvasHeight, canvasWidth) => {\n    let headerHeight = 0;\n    const headers = {};\n    const subtitle = context.subtitle();\n    const isSubtitle = resolveTitleSubTitleContent(subtitle[0]);\n\n    canvasHeight >= 200 && canvasWidth >= 200 && ['title', 'subtitle'].forEach((type) => {\n        const headerOptions = context[type]();\n        const content = resolveTitleSubTitleContent(headerOptions[0]);\n        if (content) {\n            const config = headerOptions[1];\n\n            config.width = context.width();\n            config.height = context.height();\n            config.classPrefix = context.config().classPrefix;\n            config.content = content;\n            config.padding = (type === 'title' && !isSubtitle.length) ? subtitle[1].padding : config.padding;\n\n            const { height, cell } = createHeading(config, type, context.dependencies().smartlabel,\n                context[`${type}Cell`]);\n\n            headers[`${type}Cell`] = cell;\n            context._composition[type] = cell;\n            headerHeight += height;\n        }\n    });\n    return { headerHeight, headers };\n};\n\n","import { TextCell, AxisCell } from '@chartshq/visual-cell';\nimport { getValueParser, retrieveFieldDisplayName } from 'muze-utils';\nimport {\n    VERTICAL, HORIZONTAL, LEFT, RIGHT, LEGEND_TYPE_MAP, PADDING, BORDER, MARGIN\n} from '../constants';\n\n/**\n *\n *\n * @param {*} legendConfig\n * @param {*} canvases\n *\n */\nexport const legendCreator = (canvas) => {\n    let LegendCls;\n    const dataset = [];\n    const axes = canvas.getRetinalAxes();\n\n    Object.entries(axes).forEach((axisInfo) => {\n        const scale = axisInfo[1][0];\n        const scaleType = axisInfo[0];\n        const scaleProps = canvas[scaleType]();\n\n        if (scaleProps.field && scale) {\n            const {\n                type,\n                step\n            } = scale.config();\n\n            const stepMapper = typeof step === 'boolean' ? step : false;\n            LegendCls = LEGEND_TYPE_MAP[`${type}-${stepMapper}-${scaleType}`];\n            dataset.push({\n                scale,\n                canvas,\n                fieldName: scaleProps.field,\n                title: retrieveFieldDisplayName(canvas.data(), scaleProps.field),\n                LegendCls,\n                scaleType\n            });\n        }\n    });\n\n    return dataset;\n};\n\n/**\n *\n *\n * @param {*} legendConfig\n * @param {*} canvases\n * @param {*} measurement\n * @param {*} prevLegends\n *\n */\nexport const legendInitializer = (legendConfig, canvas, measurement, prevLegends) => {\n    const legends = [];\n    const {\n        height,\n        width,\n        headerHeight\n    } = measurement;\n    const {\n        position,\n        align\n    } = legendConfig;\n\n    const legendInfo = legendCreator(canvas);\n    const { invalidValues } = canvas.config();\n\n    const parser = getValueParser(invalidValues);\n    legendInfo.forEach((dataInfo, index) => {\n        let legend = {};\n\n        const legendMeasures = {};\n        const {\n                LegendCls,\n                scale,\n                fieldName,\n                title: titleText,\n                scaleType\n            } = dataInfo;\n        const config = legendConfig[scaleType] || {};\n        const title = config.title || {};\n        title.text = title.text || titleText;\n        if (config.show) {\n            config.position = position;\n            config.align = align;\n\n            if (prevLegends[index]) {\n                legend = prevLegends[index].legend;\n            } else {\n                legend = LegendCls.create({\n                    labelManager: canvas._dependencies.smartlabel,\n                    cells: {\n                        AxisCell, TextCell\n                    }\n                });\n            }\n            legendMeasures.maxHeight = align === VERTICAL ? (height - headerHeight) : height * 0.2;\n            legendMeasures.maxWidth = align === HORIZONTAL ? width : width * 0.2;\n            legendMeasures.width = Math.min(legendMeasures.maxWidth, config.width);\n            legendMeasures.height = Math.min(legendMeasures.maxHeight, config.height);\n\n            [PADDING, BORDER, MARGIN].forEach((e) => {\n                legendMeasures[e] = config[e];\n            });\n            legend.scale(scale)\n                            .valueParser(parser)\n                            .title(title)\n                            .fieldName(fieldName)\n                            .config(config)\n                            .metaData(canvas.composition().visualGroup.getGroupByData().project([fieldName]))\n                            .measurement(legendMeasures)\n                            .canvasAlias(canvas.alias())\n                            .setLegendMeasures();\n\n            legends.push({ canvas, legend, scaleType });\n        }\n    });\n    return legends;\n};\n\n/**\n *\n *\n * @param {*} legends\n * @param {*} legendConfig\n * @param {*} availableHeight\n * @param {*} availableWidth\n *\n */\nexport const getLegendSpace = (legends, legendConfig, availableHeight, availableWidth) => {\n    const legendMeasures = legends.map(legendInfo => legendInfo.legend.measurement());\n    const legendSpace = { width: 0, height: 0 };\n\n    legendMeasures.forEach((space) => {\n        let height = 0;\n        let width = 0;\n        width = Math.min(space.width, space.maxWidth);\n        height = Math.min(space.height, space.maxHeight);\n\n        if (legendConfig.align === HORIZONTAL) {\n            if (legendSpace.width + width > availableWidth) {\n                legendSpace.width = availableWidth;\n                legendSpace.height += height;\n            } else {\n                legendSpace.width += width;\n                legendSpace.height = Math.max(legendSpace.height, height);\n            }\n        } else if (legendSpace.height + height > availableHeight) {\n            legendSpace.height = height;\n            legendSpace.width += width;\n        } else {\n            legendSpace.height += height;\n            legendSpace.width = Math.max(legendSpace.width, width);\n        }\n    });\n    if (legendConfig.align === HORIZONTAL) {\n        legendSpace.width = availableWidth;\n    }\n    return legendSpace;\n};\n\n/**\n *\n *\n * @param {*} context\n * @param {*} headerHeight\n *\n */\nexport const createLegend = (context, headerHeight, height, width) => {\n    const measurement = {\n        height,\n        width,\n        headerHeight\n    };\n    const { legend } = context.config();\n    const { show, position } = legend;\n\n    legend.classPrefix = context.config().classPrefix;\n    const align = (position === LEFT || position === RIGHT) ? VERTICAL : HORIZONTAL;\n\n    legend.show = show ? ((align === VERTICAL && width > 200) || (align === HORIZONTAL && height > 200)) : show;\n    legend.align = align;\n    return legendInitializer(legend, context, measurement, context.legends || []);\n};\n","import { LayoutComponent } from '../../../../layout/src/tree-layout';\n\nexport default class MuzeComponent extends LayoutComponent {\n    getLogicalSpace () {\n        const { width, height } = this.boundBox();\n        return { width, height };\n    }\n\n    setSpatialConfig (conf) {\n        this.boundBox({ top: conf.y, left: conf.x });\n        this.newDimensions = {\n            width: conf.width,\n            height: conf.height\n        };\n        this.renderAt(conf.renderAt);\n    }\n\n    getBoundBox () {\n        return this.boundBox();\n    }\n\n    updateWrapper () {\n        throw Error('Update is not implemented');\n    }\n\n    setParams () {\n        throw Error('set params is not implemented');\n    }\n}\n","import { selectElement } from 'muze-utils';\nimport MuzeComponent from './muze-chart-component';\nimport { LEFT } from '../../constants';\n\nexport default class HeaderComponent extends MuzeComponent {\n    constructor (params) {\n        super(params.name, params.component.getLogicalSpace(), 0);\n        this.setParams(params);\n    }\n\n    renderHeader (container) {\n        const layoutConfig = this.params.config;\n        container = selectElement(container);\n        const { align } = layoutConfig;\n        const sel = container\n          .selectAll(`.${layoutConfig.classPrefix}-inner-container`)\n          .data([this.name]);\n        sel.exit().remove();\n        const selEnter = sel.enter().append('div');\n\n        const cont = selEnter.merge(sel);\n        cont.classed(`${layoutConfig.classPrefix}-inner-container`, true);\n        const { height, width } = this.boundBox();\n        this.component.setAvailableSpace(width, height);\n\n        this.component && this.component.render(cont.node());\n\n        cont.selectAll('div').classed(`${layoutConfig.classPrefix}-inner-content`, true);\n        cont.style('width', `${100}%`);\n\n        if (layoutConfig && this.component) {\n            cont.style('float', LEFT)\n                            .style('text-align', align);\n                            // .style(`padding-${position === TOP ? BOTTOM : TOP}`, `${padding}px`);\n        }\n    }\n\n    draw (container) {\n        this.renderHeader(container || document.getElementById(this.renderAt()));\n    }\n\n    updateWrapper (params) {\n        this.setParams(params);\n        this.name(params.name);\n        this.boundBox(params.component.getLogicalSpace());\n        return this;\n    }\n\n    setParams (params) {\n        this.component = params.component;\n        this.params = params;\n        this.target(params.config.target);\n        this.position(params.config.position);\n        this.className(params.config.className);\n        this.alignWith(params.config.alignWith);\n        this.alignment(params.config.alignment);\n    }\n\n    setSpatialConfig (conf) {\n        this.boundBox({ top: conf.y,\n            left: conf.x,\n            width: conf.width,\n            height: conf.height });\n        this.renderAt(conf.renderAt);\n    }\n}\n","import { makeElement, selectElement } from 'muze-utils';\nimport MuzeComponent from './muze-chart-component';\nimport {\n     LEFT, RIGHT, VERTICAL, HORIZONTAL, TOP, BOTTOM, HORIZONTAL_CENTER, VERTICAL_CENTER\n} from '../../constants';\nimport { ROW_MATRIX_INDEX, COLUMN_MATRIX_INDEX } from '../../../../layout/src/enums/constants';\n\nfunction defaultAlignmentHelper (position) {\n    let alignment = null;\n    const alignWith = `${ROW_MATRIX_INDEX[1]}-${COLUMN_MATRIX_INDEX[1]}`;\n    switch (position) {\n    case TOP:\n    case BOTTOM:\n        alignment = HORIZONTAL_CENTER;\n        break;\n    case LEFT:\n    case RIGHT:\n        alignment = VERTICAL_CENTER;\n        break;\n    default:\n        alignment = VERTICAL_CENTER;\n    }\n    return { alignment, alignWith };\n}\nexport default class LegendComponent extends MuzeComponent {\n    constructor (params) {\n        super(params.name, params.config.measurement.legendSpace, 0);\n        this.setParams(params);\n    }\n\n    renderLegend (container) {\n        container = selectElement(container);\n        const sectionComponents = [];\n        const { position, classPrefix } = this.params.config;\n        const legendMount = makeElement(container, 'div', [this.components],\n                                        `${classPrefix}-inner-content`, {}, d => d);\n        legendMount.classed(`${classPrefix}-legend`, true);\n        const align = (position === LEFT || position === RIGHT) ? VERTICAL : HORIZONTAL;\n        const legWidth = this.newDimensions.width;\n        const legHeight = this.newDimensions.height;\n\n        [container, legendMount].forEach((elem) => {\n            elem.style('width', `${Math.floor(legWidth)}px`)\n                            .style('height', `${legHeight}px`)\n                            .style('float', LEFT);\n        });\n\n        if (align === VERTICAL) {\n            let sections = -1;\n            let currHeight = legHeight;\n            let currWidth = 0;\n\n            this.components.forEach((legendInfo) => {\n                const leg = legendInfo.legend;\n                if (leg.measurement().height > currHeight) {\n                    sections++;\n                    currWidth = 0;\n                    currHeight = legHeight;\n                } else {\n                    sections < 0 && sections++;\n                }\n                sectionComponents[sections] = sectionComponents[sections] || [];\n                currHeight -= Math.min(leg.measurement().height, currHeight);\n                currWidth = Math.max(Math.min(leg.measurement().width, leg.measurement().maxWidth), currWidth);\n                sectionComponents[sections].push({\n                    legend: leg,\n                    legendHeight: legHeight,\n                    legendWidth: currWidth\n                });\n            });\n\n            const mount = makeElement(legendMount, ['div'], sectionComponents, `${classPrefix}-legend-section`);\n            // mount.each((d, i) => selectElement(this).classed(`${classPrefix}-legend-section-${i}`, true));\n            mount.classed(`${classPrefix}-legend-vertical-section`, true)\n                            .style('width', d => `${d[0].legendWidth}px`);\n            makeElement(mount, ['div'], d => d, `${classPrefix}-legend-components`, {}, d => d.legend.id())\n                            .each(function (d) {\n                                d.legend.mount(this);\n                            })\n                            .style('width', d => `${d.legendWidth}px`);\n        } else {\n            const mount = makeElement(legendMount, 'div', [1], `${classPrefix}-legend-section`);\n            mount.classed(`${classPrefix}-legend-horizontal-section`, true);\n            mount.classed(`${classPrefix}-legend-section-${0}`, true)\n                            .style('width', `${legWidth}px`);\n\n            makeElement(mount, 'div', this.components, `${classPrefix}-legend-components`, {}, d => d.legend.id())\n                            .each(function (d) { d.legend.mount(this); })\n                            .style('width', d => `${d.legend.measurement().width}px`);\n        }\n    }\n\n    draw (container) {\n        this.renderLegend(container || document.getElementById(this.renderAt()));\n    }\n\n    updateWrapper (params) {\n        this.name(params.name);\n        this.boundBox(params.config.measurement.legendSpace);\n        this.setParams(params);\n        return this;\n    }\n\n    setParams (params) {\n        this.components = params.component;\n        this.params = params;\n        this.target(params.config.target);\n        this.position(params.config.position);\n        const { alignWith, alignment } = defaultAlignmentHelper(params.config.position);\n        this.className(params.config.className);\n        this.alignWith(params.config.alignWith || alignWith);\n        this.alignment(params.config.alignment || alignment);\n    }\n\n}\n","import {\n    selectElement,\n    makeElement,\n    getD3Drag,\n    getEvent,\n    getWindow,\n    hasTouch\n} from 'muze-utils';\nimport './scroll-bar.scss';\nimport { WIDTH, HEIGHT } from '../../../constants';\n\nconst d3Drag = getD3Drag();\n\nconst arrowSizeMap = {\n    left: WIDTH,\n    right: WIDTH,\n    top: HEIGHT,\n    bottom: HEIGHT\n};\n\nexport const getUnitPositions = (unitMeasures, totalLength, viewLength) => {\n    let currentLen = 0;\n    const measures = unitMeasures.primary && unitMeasures.primary.length ?\n        unitMeasures.primary : unitMeasures.secondary;\n\n    return measures.map((e) => {\n        const unitPosition = currentLen * 100 / (totalLength - viewLength);\n        currentLen += e;\n        return unitPosition;\n    });\n};\n\nexport const createScrollBarArrow = (mount, type, config) => {\n    const {\n        classPrefix,\n        thickness\n    } = config;\n    const arrow = makeElement(mount, 'div', [type], `${classPrefix}-scroll-arrow-${type}`);\n\n    arrow.classed(`${classPrefix}-scroll-arrow`, true);\n    arrow.style(arrowSizeMap[type], `${thickness}px`);\n\n    const chevron = makeElement(arrow, 'div', [1], `${classPrefix}-scroll-arrow-chevron`);\n\n    chevron.attr('id', `${classPrefix}-scroll-arrow-chevron-${type}`);\n\n    return arrow;\n};\n\nexport const createScrollBarRect = (mount, config) => {\n    const {\n        classPrefix\n    } = config;\n    const rect = makeElement(mount, 'div', [1], `${classPrefix}-scroll-rect`);\n    const mover = makeElement(rect, 'div', [1], `${classPrefix}-scroll-mover`);\n\n    return { rect, mover };\n};\n\nexport const applyRectClick = (scrollMaker, moverRect) => {\n    const {\n        rect\n    } = moverRect;\n\n    rect.on('click', () => {\n        const event = getEvent();\n        scrollMaker.emptyScrollAreaClick(event);\n    });\n};\n\nconst applyMoverDrag = (scrollMaker, moverRect) => {\n    let startPos = {};\n    let moverStartPos = 0;\n    let rectStartPos = 0;\n    let endPos = {};\n    const {\n        mover,\n        rect\n    } = moverRect;\n\n    mover.call(d3Drag()\n                    .on('start', () => {\n                        const event = getEvent();\n\n                        moverStartPos = mover.node().getBoundingClientRect();\n                        rectStartPos = rect.node().getBoundingClientRect();\n                        startPos = {\n                            x: event.x,\n                            y: event.y\n                        };\n                    })\n                    .on('drag', () => {\n                        const event = getEvent();\n                        const window = getWindow();\n\n                        endPos = {\n                            x: event.x,\n                            y: event.y\n                        };\n                        const distanceMoved = {\n                            x: endPos.x - startPos.x,\n                            y: endPos.y - startPos.y\n                        };\n                        const actualPosition = {\n                            x: moverStartPos.x + distanceMoved.x - rectStartPos.x + window.pageXOffset,\n                            y: moverStartPos.y + distanceMoved.y - rectStartPos.y + window.pageYOffset\n                        };\n\n                        scrollMaker.changeMoverPosition(actualPosition);\n                    }));\n};\n\nconst applyScrollMouseDownAction = (moverRect, scrollMaker, speed) => {\n    const {\n        mover,\n        rect\n    } = moverRect;\n    const { x, y } = mover.node().getBoundingClientRect();\n    const { x: rectX, y: rectY } = rect.node().getBoundingClientRect();\n\n    scrollMaker.changeMoverPosition({ x: x - rectX + speed, y: y - rectY + speed });\n};\n\nconst registerListenerOnArrow = (scrollMaker, moverRect, arrowType, speed) => {\n    let timer = '';\n    const arrow = scrollMaker._components[arrowType];\n    const isTouchDevice = hasTouch();\n\n    arrow.on(isTouchDevice ? 'touchstart' : 'mousedown', () => {\n        const event = getEvent();\n\n        event.preventDefault();\n\n        timer = setInterval(() => {\n            applyScrollMouseDownAction(moverRect, scrollMaker, speed);\n        }, 100);\n    }).on(isTouchDevice ? 'touchend' : 'mouseup', () => {\n        const event = getEvent();\n\n        event.preventDefault();\n\n        clearInterval(timer);\n    }).on('click', () => {\n        applyScrollMouseDownAction(moverRect, scrollMaker, speed);\n    });\n};\n\nexport const registerListeners = (scrollMaker) => {\n    const {\n        moverRect\n    } = scrollMaker._components;\n\n    const speed = scrollMaker.config().speed;\n\n    registerListenerOnArrow(scrollMaker, moverRect, 'prevArrow', -speed);\n    applyMoverDrag(scrollMaker, moverRect);\n    applyRectClick(scrollMaker, moverRect);\n    registerListenerOnArrow(scrollMaker, moverRect, 'nextArrow', speed);\n};\n\nexport const scrollContainerHelper = (mountPoint, config, dimensions, type) => {\n    const {\n        classPrefix\n    } = config;\n    const scrollBarContainer = makeElement(selectElement(mountPoint), 'div', [1], `#${classPrefix}-scroll-bar-${type}`);\n\n    scrollBarContainer.classed(`${classPrefix}-scroll-bar`, true);\n    scrollBarContainer.style(WIDTH, `${dimensions.width}px`);\n    scrollBarContainer.style(HEIGHT, `${dimensions.height}px`);\n    return scrollBarContainer;\n};\n\n","import { mergeRecursive } from 'muze-utils';\n\nexport const PROPS = {\n\n    config: {\n        sanitization: (context, value) => {\n            value = mergeRecursive(context._config, value);\n            return value;\n        }\n    },\n    manager: {},\n    unitPositions: {},\n    logicalSpace: {}\n};\n\n","import { ERROR_MSG, generateGetterSetters } from 'muze-utils';\nimport {\n    scrollContainerHelper,\n    registerListeners\n} from './helper';\nimport { PROPS } from './props';\n\nexport class ScrollMaker {\n\n    constructor () {\n        this._components = {};\n        this._logicalSpace = {};\n        this._attachedScrollAction = () => {};\n        this._config = {\n            thickness: 10,\n            speed: 2\n        };\n        this._unitPositions = null;\n\n        generateGetterSetters(this, PROPS);\n    }\n\n    static type () {\n        throw new ERROR_MSG('Method not implemented');\n    }\n\n    emptyScrollAreaClick () {\n        throw new ERROR_MSG('Method not implemented');\n    }\n\n    changeMoverPosition () {\n        throw new ERROR_MSG('Method not implemented');\n    }\n\n    scrollTo () {\n        throw new ERROR_MSG('Method not implemented');\n    }\n\n    scrollDeltaTo () {\n        throw new ERROR_MSG('Method not implemented');\n    }\n\n    createScroll (mountPoint) {\n        const config = this.config();\n\n        return {\n            scrollBarContainer: scrollContainerHelper(mountPoint, config, this.logicalSpace(), this.constructor.type())\n        };\n    }\n\n    attachScrollAction (externalScrollAction) {\n        this._attachedScrollAction = externalScrollAction;\n        return this;\n    }\n\n    detachScrollAction () {\n        this._attachedScrollAction = () => {};\n        return this;\n    }\n\n    getLogicalSpace () {\n        return this.logicalSpace();\n    }\n\n    registerListeners () {\n        registerListeners(this);\n        return this;\n    }\n\n    remove () {\n        this._components.scrollBarContainer.remove();\n        return this;\n    }\n}\n\n","import MuzeComponent from './muze-chart-component';\nimport { HorizontalScrollMaker } from './scroll-bar-maker/horizontal-scroll-maker';\nimport { VerticalScrollMaker } from './scroll-bar-maker/vertical-scroll-maker';\n\nconst scrollMakerMap = {\n    horizontal: HorizontalScrollMaker,\n    vertical: VerticalScrollMaker\n};\n\n/**\n * Scroll Component acts as a wrapper over the scoll bars created using the respective Scroll Makers\n * This provides a consistent API for layouting using the tree layout system.\n *\n *\n * @class\n * @public\n * @module ScrollComponent\n */\nexport default class ScrollComponent extends MuzeComponent {\n\n    constructor (params) {\n        const ScrollMaker = scrollMakerMap[params.config.type];\n\n        params.component = new ScrollMaker();\n        params.component.config(params.config.scrollBarComponentConfig);\n        params.component.logicalSpace(params.dimensions);\n        super(params.name, params.component.getLogicalSpace(), 0);\n        this.setParams(params);\n    }\n\n    manager (...manager) {\n        if (manager.length) {\n            this.component.manager(manager[0]);\n            return this;\n        }\n        return this.component.manager();\n    }\n\n    /**\n     * Scrolls based on the actual pixel value provided. Since it's a delta change, the input will be\n     * a delta between (-Infinity, Infinity), based on which the scroll will occur. Only a delta movement in\n     * scroll occurs\n     *\n     * @public\n     *\n     * @param {number} delta Based on which the scroll will have a delta change in position\n     * @return {ScrollComponent} Instance of the ScrollComponent\n     */\n    scrollDeltaTo (delta) {\n        this.component.scrollDeltaTo(delta);\n        return this;\n    }\n\n    /**\n     * Scrolls to the specific point in the page. The input is provided as a percentage (0 - 100)\n     *\n     * @public\n     *\n     * @param {number} scrollPercentage Its the percentage based on which the scroll action will occur\n     * @return {ScrollComponent} Instance of the ScrollComponent\n     */\n    scrollTo (scrollPercentage) {\n        this.component.scrollTo(scrollPercentage);\n        return this;\n    }\n\n    /**\n     * Scrolls to the specific point in the page based on the unit index.\n     * The input is provided as a number represting the index for the unit.\n     * For vertical scroll, it's the row index that will be required.\n     * For horizontal scroll, it's the column index that will be required\n     *\n     * @public\n     *\n     * @param {number} unitIndex Index of the unit appearing in the grid\n     * @return {ScrollComponent} Instance of the ScrollComponent\n     */\n    scrollToUnitIndex (unitIndex) {\n        const unitPositions = this.component.unitPositions();\n        const sanitizedUnitIndex = Math.min(Math.max(0, unitIndex), unitPositions.length - 1);\n        this.component.scrollTo(unitPositions[sanitizedUnitIndex]);\n        return this;\n    }\n\n    /**\n     * Provides the positions of the units(either horizontal or vertical based on the type\n     * of scroll bar it wraps) relative to it's container. The position of the first unit starts at 0\n     *\n     *\n     * @public\n     *\n     * @return {Array} Positions of units either horizontal or vertical\n     */\n    getScrollPositionsForUnits () {\n        return this.component.unitPositions();\n    }\n\n    draw (container) {\n        this.component.createScroll(container || document.getElementById(this.renderAt()));\n        return this;\n    }\n\n    /**\n     * Can be used to attach a scroll action whenever scrolling occurs in the canvas\n     *\n     * @public\n     * @param {number} externalAction Action to be attached during scroll\n     * @return {ScrollComponent} Instance of the ScrollComponent\n     */\n    attachScrollAction (externalAction) {\n        this.component.attachScrollAction(externalAction);\n        return this;\n    }\n\n    /**\n     * Can be used to detach the scroll action already bound to the scroll bar\n     *\n     * @public\n     * @return {ScrollComponent} Instance of the ScrollComponent\n     */\n    detachScrollAction () {\n        this.component.detachScrollAction();\n        return this;\n    }\n\n    updateWrapper (params) {\n        this.name(params.name);\n        this.component.config(params.config.scrollBarComponentConfig);\n        this.component.logicalSpace(params.dimensions);\n        this.boundBox(this.component.getLogicalSpace());\n        this.setParams(params);\n        return this;\n    }\n\n    setParams (params) {\n        this.component = params.component || this.component;\n        this.params = params;\n        this.target(params.config.target);\n        this.position(params.config.position);\n        this.className(params.config.className);\n        this.alignWith(params.config.alignWith);\n        this.alignment(params.config.alignment);\n    }\n\n    remove () {\n        this.component.remove();\n    }\n}\n","import { ScrollMaker } from './scroll-maker';\nimport { createScrollBarRect, createScrollBarArrow, getUnitPositions } from './helper';\nimport { HORIZONTAL, HEIGHT, WIDTH, LEFT } from '../../../constants';\n\nexport class HorizontalScrollMaker extends ScrollMaker {\n\n    /**\n     * Describes the type of the ScrollMaker\n     *\n     * @public\n     *\n     * @return {String} Returns the type of scroll maker: horizontal\n     */\n    static type () {\n        return HORIZONTAL;\n    }\n\n    createScroll (mountPoint, dimensions = this.logicalSpace()) {\n        const config = this.config();\n        const { scrollBarContainer } = super.createScroll(mountPoint, config, dimensions);\n        const prevArrow = createScrollBarArrow(scrollBarContainer, 'left', config);\n        const moverRect = createScrollBarRect(scrollBarContainer, config);\n        const nextArrow = createScrollBarArrow(scrollBarContainer, 'right', config);\n        const {\n            mover,\n            rect\n        } = moverRect;\n\n        const { height, width, totalLength, viewLength, unitWidths } = this.logicalSpace();\n        const scrollBarWithouArrowLength = width - height * 2;\n\n        rect.style(WIDTH, `${dimensions.width - height * 2}px`);\n        rect.style(HEIGHT, `${100}%`);\n        mover.style(WIDTH, `${(viewLength * scrollBarWithouArrowLength) / totalLength}px`);\n        mover.style(HEIGHT, `${100}%`);\n        mover.style(LEFT, `${0}px`);\n\n        this._components = {\n            prevArrow,\n            nextArrow,\n            moverRect,\n            scrollBarContainer\n        };\n        this._scrollBarWithouArrowLength = scrollBarWithouArrowLength;\n        this.unitPositions(getUnitPositions(unitWidths, totalLength, viewLength));\n        this.registerListeners();\n    }\n\n    emptyScrollAreaClick (event) {\n        const {\n            mover,\n            rect\n        } = this._components.moverRect;\n        const speed = this.config().speed;\n        const { x, y } = mover.node().getBoundingClientRect();\n        const { x: rectX, y: rectY } = rect.node().getBoundingClientRect();\n        let positionAdjuster = speed * 10;\n        if (event.x < x) {\n            positionAdjuster = -speed * 10;\n        }\n        this.changeMoverPosition({ x: x - rectX + positionAdjuster, y: y - rectY + positionAdjuster });\n    }\n\n    changeMoverPosition (newPosition) {\n        let currentPos;\n        const {\n            mover,\n            rect\n        } = this._components.moverRect;\n        const rectStartPos = rect.node().getBoundingClientRect();\n        const moverPos = mover.node().getBoundingClientRect();\n        const {\n            totalLength\n         } = this.logicalSpace();\n\n        if (newPosition.x < 0) {\n            currentPos = 0;\n        } else if (newPosition.x + moverPos.width > rectStartPos.width) {\n            currentPos = rectStartPos.width - moverPos.width;\n        } else {\n            currentPos = newPosition.x;\n        }\n\n        mover.style(LEFT, `${currentPos}px`);\n        const totalDistance = this._scrollBarWithouArrowLength;\n        const movedViewLength = (currentPos * totalLength) / totalDistance;\n\n        this.manager().performAttachedScrollFunction(this.constructor.type(), movedViewLength);\n    }\n\n    scrollDeltaTo (delta) {\n        const {\n            mover,\n            rect\n        } = this._components.moverRect;\n        const moverPos = mover.node().getBoundingClientRect();\n        const rectStartPos = rect.node().getBoundingClientRect();\n\n        this.changeMoverPosition({ y: 0, x: moverPos.x - rectStartPos.x - delta });\n        return this;\n    }\n\n    /**\n     * Scrolls to the specific point in the page. The input is provided as a percentage (0 - 100)\n     *\n     * @public\n     *\n     * @param {number} scrollPercentage Its the percentage based on which the scroll action will occur\n     * @return {HorizontalScrollMaker} Instance of the HorizontalScrollMaker\n     */\n    scrollTo (scrollPercentage) {\n        const {\n            mover\n        } = this._components.moverRect;\n        const moverPos = mover.node().getBoundingClientRect();\n        const movement = (scrollPercentage * (this._scrollBarWithouArrowLength - moverPos.width)) / 100;\n\n        this.changeMoverPosition({ y: 0, x: movement });\n        return this;\n    }\n\n}\n\n","import { ScrollMaker } from './scroll-maker';\nimport { createScrollBarRect, createScrollBarArrow, getUnitPositions } from './helper';\nimport { VERTICAL, TOP, HEIGHT, WIDTH } from '../../../constants';\n\nexport class VerticalScrollMaker extends ScrollMaker {\n\n    /**\n     * Describes the type of the ScrollMaker\n     *\n     * @public\n     *\n     * @return {String} Returns the type of scroll maker: vertical\n     */\n    static type () {\n        return VERTICAL;\n    }\n\n    createScroll (mountPoint, dimensions = this.logicalSpace()) {\n        const config = this.config();\n        const { scrollBarContainer } = super.createScroll(mountPoint, dimensions);\n        const prevArrow = createScrollBarArrow(scrollBarContainer, 'top', config);\n        const moverRect = createScrollBarRect(scrollBarContainer, config);\n        const nextArrow = createScrollBarArrow(scrollBarContainer, 'bottom', config);\n        const {\n            mover,\n            rect\n        } = moverRect;\n        const { height, width, totalLength, viewLength, unitHeights } = this.logicalSpace();\n        const scrollBarWithouArrowLength = height - width * 2;\n\n        rect.style(HEIGHT, `${scrollBarWithouArrowLength}px`);\n        rect.style(WIDTH, `${100}%`);\n        mover.style(WIDTH, `${100}%`);\n        mover.style(HEIGHT, `${(viewLength * scrollBarWithouArrowLength) / totalLength}px`);\n        mover.style(TOP, `${0}px`);\n\n        this._components = {\n            prevArrow,\n            nextArrow,\n            moverRect,\n            scrollBarContainer\n        };\n        this._scrollBarWithouArrowLength = scrollBarWithouArrowLength;\n\n        this.unitPositions(getUnitPositions(unitHeights, totalLength, viewLength));\n        this.registerListeners();\n    }\n\n    emptyScrollAreaClick (event) {\n        const {\n            mover,\n            rect\n        } = this._components.moverRect;\n        const speed = this.config().speed;\n        const { x, y } = mover.node().getBoundingClientRect();\n        const { x: rectX, y: rectY } = rect.node().getBoundingClientRect();\n\n        let positionAdjuster = speed * 10;\n        if (event.y < y) {\n            positionAdjuster = -speed * 10;\n        }\n        this.changeMoverPosition({ x: x - rectX + positionAdjuster, y: y - rectY + positionAdjuster });\n    }\n\n    changeMoverPosition (newPosition) {\n        let currentPos;\n        const {\n            mover,\n            rect\n        } = this._components.moverRect;\n        const {\n            totalLength\n         } = this.logicalSpace();\n        const rectStartPos = rect.node().getBoundingClientRect();\n        const moverPos = mover.node().getBoundingClientRect();\n\n        if (newPosition.y < 0) {\n            currentPos = 0;\n        } else if (newPosition.y + moverPos.height > rectStartPos.height) {\n            currentPos = rectStartPos.height - moverPos.height;\n        } else {\n            currentPos = newPosition.y;\n        }\n        mover.style(TOP, `${currentPos}px`);\n        const totalDistance = this._scrollBarWithouArrowLength;\n        const movedViewLength = (currentPos * totalLength) / totalDistance;\n\n        this.manager().performAttachedScrollFunction(this.constructor.type(), movedViewLength);\n    }\n\n    /**\n     * Scrolls based on the actual pixel value provided. Since it's a delta change, the input will be\n     * a delta between (-Infinity, Infinity), based on which the scroll will occur. Only a delta movement in\n     * scroll occurs\n     *\n     * @public\n     *\n     * @param {number} delta Based on which the scroll will have a delta change in position\n     * @return {VerticalScrollMaker} Instance of the VerticalScrollMaker\n     */\n    scrollDeltaTo (delta) {\n        const {\n            mover,\n            rect\n        } = this._components.moverRect;\n        const moverPos = mover.node().getBoundingClientRect();\n        const rectStartPos = rect.node().getBoundingClientRect();\n\n        this.changeMoverPosition({ y: moverPos.y - rectStartPos.y - delta, x: 0 });\n        return this;\n    }\n\n    /**\n     * Scrolls to the specific point in the page. The input is provided as a percentage (0 - 100)\n     *\n     * @public\n     *\n     * @param {number} scrollPercentage Its the percentage based on which the scroll action will occur\n     * @return {VerticalScrollMaker} Instance of the VerticalScrollMaker\n     */\n    scrollTo (scrollPercentage) {\n        const {\n            mover\n        } = this._components.moverRect;\n        const moverPos = mover.node().getBoundingClientRect();\n        const movement = (scrollPercentage * (this._scrollBarWithouArrowLength - moverPos.height)) / 100;\n\n        this.changeMoverPosition({ x: 0, y: movement });\n        return this;\n    }\n\n}\n","import { makeElement } from 'muze-utils';\nimport { cellSpanMaker, applySpans } from '../../../../layout/src/grid-layout/span-maker';\nimport { applyBorders } from '../../../../layout/src/grid-layout/border-helper';\n\nimport {\n     TOP, CENTER\n} from '../../../../layout/src/enums/constants';\nimport MuzeComponent from './muze-chart-component';\nimport { WIDTH, HEIGHT, HIDDEN, OVERFLOW, AUTO, VISIBLE } from '../../constants';\n\nconst renderPlaceholders = (cells) => {\n    // Rendering content within placeholders\n    cells.each(function (cell) {\n        cell.placeholder.render(this);\n    });\n};\n\nexport default class MatrixComponent extends MuzeComponent {\n\n    constructor (params) {\n        super(params.name, params.config.dimensions, 0);\n        this.setParams(params);\n        this.className(params.config.className);\n    }\n\n    applyScroll (container) {\n        const row = this.params.config.row;\n        const column = this.params.config.column;\n        const { horizontal, vertical } = this.params.config.scrollInfo;\n        container.style(OVERFLOW, VISIBLE);\n        container.style(WIDTH, AUTO);\n        container.style(HEIGHT, AUTO);\n\n        if (horizontal && column === 1) {\n            container.style(OVERFLOW, HIDDEN);\n            container.style(WIDTH, '100%');\n        }\n\n        if (vertical && row === CENTER) {\n            container.style(OVERFLOW, HIDDEN);\n            container.style(HEIGHT, '100%');\n        }\n    }\n\n    renderMatrix (mountPoint) {\n        // Creating containers for each matrix individually\n        const classPrefix = this.params.config.classPrefix;\n        const row = this.params.config.row;\n        const column = this.params.config.column;\n        const dimensions = this.params.config.dimensions;\n        const border = this.params.config.border;\n\n        // Creating containers for each matrix individually\n        const containerForMatrix = makeElement(mountPoint, 'div', [1], `${classPrefix}-grid-${row}-${column + 1}`)\n            .classed(`${classPrefix}-grid-${row}`, true)\n            .classed(`${classPrefix}-grid`, true);\n\n        this.applyScroll(containerForMatrix);\n\n        const {\n            viewMatrix,\n            spans\n        } = cellSpanMaker(this.component, row, column);\n\n            // Rendering the table components\n        const { cells } = this.renderTable(containerForMatrix, `${classPrefix}-grid`, viewMatrix);\n\n        applySpans(cells, spans, { dimensions, border }, `${row}-${column}`);\n        renderPlaceholders(cells);\n\n        cells.exit().each((cell) => {\n            cell.placeholder.remove();\n        });\n\n        applyBorders(cells, border, row, column);\n    }\n\n    renderTable (mount, className, rowData) {\n        const table = makeElement(mount, 'table', ['layout'], `${className}-table`);\n        const body = makeElement(table, 'tbody', ['layout'], `${className}-body`);\n        const rows = makeElement(body, 'tr', rowData, `${className}-tr`);\n        const cells = makeElement(rows, 'td', (d, i) => d.filter(e => e !== null).map(e =>\n                                  ({ placeholder: e, rowIndex: i })), `${className}-td`, {}, key => key.placeholder.id);\n\n        return { table, body, rows, cells };\n    }\n\n    draw (container) {\n        this.renderMatrix(container || document.getElementById(this.renderAt()));\n    }\n\n    updateWrapper (params) {\n        this.name(params.name);\n        this.boundBox(params.config.dimensions);\n        this.setParams(params);\n        return this;\n    }\n\n    setParams (params) {\n        this.component = params.component;\n        this.params = params;\n        this.target(params.config.target);\n        this.position(TOP);\n        this.className(params.config.className);\n    }\n}\n","import { selectElement, getEvent } from 'muze-utils';\nimport MuzeComponent from './muze-chart-component';\nimport MatrixComponent from './matrix-component';\nimport { ROW_MATRIX_INDEX, COLUMN_MATRIX_INDEX } from '../../../../layout/src/enums/constants';\nimport { WHEEL_DELTA_MODIFIER } from '../../enums/constants';\n\n/**\n * Based on the type of scroll, it changes the scrollLeft/scrollTop property of the specific\n * elements based on the scroll distance provided\n *\n *\n */\nconst applyScrollAction = (elem, classPrefix, scollDistance, type) => {\n    selectElement(elem)\n                    .selectAll(`.${classPrefix}-grid`)\n                    .property(type, scollDistance);\n};\n\n/**\n * Applies the action of the scroll by actually scrolling the respective matrices based on the\n * type of scroll. It returns a function which has both the scroll methods available\n *\n * @return {Object} contains the horizontal and vertical scroll actions on the grid component\n */\nconst scrollActionApplier = (movement, context) => {\n    const classPrefix = context.params.config.classPrefix;\n\n    return {\n        horizontal: () => {\n            [0, 1, 2].forEach(e =>\n                applyScrollAction(`#${context.component[e][1].renderAt()}`, classPrefix, movement, 'scrollLeft'));\n        },\n        vertical: () => {\n            [0, 1, 2].forEach(e =>\n                applyScrollAction(`#${context.component[1][e].renderAt()}`, classPrefix, movement, 'scrollTop'));\n        }\n    };\n};\n\nexport default class GridComponent extends MuzeComponent {\n\n    constructor (params) {\n        super(params.name, params.config.dimensions, 0);\n        this.gridComponents = [];\n        this.setParams(params);\n    }\n\n    sanitizeGrid () {\n        let height = 0;\n        let width = 0;\n        const { viewMatricesInfo, layoutDimensions } = this.component.viewInfo();\n        const scrollInfo = this.component.scrollInfo();\n        const {\n            viewHeight,\n            viewWidth,\n            unitHeights,\n            unitWidths\n        } = layoutDimensions;\n\n        for (let i = 0; i < 3; i++) {\n            if (!(this.gridComponents.length && this.gridComponents[i] instanceof Array)) {\n                this.gridComponents[i] = [];\n            }\n            for (let j = 0; j < 3; j++) {\n                const matrixDim = {\n                    height: viewHeight[i],\n                    width: viewWidth[j],\n                    unitHeights,\n                    unitWidths\n                };\n                const matrix = viewMatricesInfo.matrices[`${ROW_MATRIX_INDEX[i]}`][j];\n                const matrixName = `${ROW_MATRIX_INDEX[i]}-${COLUMN_MATRIX_INDEX[j]}`;\n                const matrixConfig = {\n                    dimensions: matrixDim,\n                    border: layoutDimensions.border,\n                    classPrefix: this.params.config.classPrefix,\n                    scrollInfo,\n                    row: ROW_MATRIX_INDEX[i],\n                    column: j\n                };\n                if (this.gridComponents[i][j] instanceof MuzeComponent) {\n                    this.gridComponents[i][j].updateWrapper({\n                        name: matrixName,\n                        component: matrix,\n                        config: matrixConfig\n                    });\n                } else {\n                    const matrixWrapper = new MatrixComponent({\n                        name: matrixName,\n                        component: matrix,\n                        config: matrixConfig\n                    });\n                    this.gridComponents[i].push(matrixWrapper);\n                }\n                if (i === 0) {\n                    width += matrixDim.width;\n                }\n                if (j === 0) {\n                    height += matrixDim.height;\n                }\n            }\n        }\n        this.boundBox({ height, width });\n\n        this.component = this.gridComponents;\n        this.allComponents = this.gridComponents;\n    }\n\n    scrollBarManager (...manager) {\n        if (manager.length) {\n            this._scrollBarManager = manager[0];\n            return this;\n        }\n        return this._scrollBarManager;\n    }\n\n    /**\n     * Attaches a mousewheel listener to the center matrix, based on which the scrolling can occur.\n     * It uses the scroll component to change the position of the scroller, which ultimately scrolls the center matrix\n     *\n     *\n     * @return {GridComponent} Instance of the GridComponent\n     */\n    attachScrollListener () {\n        selectElement(`#${this.component[1][1].renderAt()}`)\n                        .on('wheel', () => {\n                            const event = getEvent();\n                            const {\n                                wheelDeltaX,\n                                wheelDeltaY\n                            } = event;\n\n                            // Prevent default behaviour and stop propagating\n                            event.preventDefault();\n                            event.stopPropagation();\n\n                            // Scrolling horizontally\n                            if (wheelDeltaX !== 0 && Math.abs(wheelDeltaX) > Math.abs(wheelDeltaY)) {\n                                this.scrollBarManager()\n                                    .triggerScrollBarAction('horizontal', wheelDeltaX / WHEEL_DELTA_MODIFIER);\n                            }\n\n                            // Scrolling Vertically\n                            if (wheelDeltaY !== 0 && Math.abs(wheelDeltaX) < Math.abs(wheelDeltaY)) {\n                                this.scrollBarManager()\n                                    .triggerScrollBarAction('vertical', wheelDeltaY / WHEEL_DELTA_MODIFIER);\n                            }\n                        });\n        return this;\n    }\n\n    performScrollAction (direction, movedView) {\n        scrollActionApplier(movedView, this)[direction]();\n        return this;\n    }\n\n    getBoundBox () {\n        const { top, left } = this.component[0][0].boundBox();\n        const { height, width } = this.boundBox();\n\n        return {\n            top,\n            left,\n            height,\n            width\n        };\n    }\n\n    updateWrapper (params) {\n        this.name(params.name);\n        this.boundBox(params.config.dimensions);\n        this.setParams(params);\n        return this;\n    }\n\n    setParams (params) {\n        this.component = params.component;\n        this.params = params;\n        this.target(params.config.target);\n        this.className(params.config.className);\n        this.sanitizeGrid();\n        return this;\n    }\n}\n","export const SIDE_EFFECT_COMMON = 'common';\nexport const SIDE_EFFECT_INDIVIDUAL = 'individual';\nexport const TOOLTIP_CONSOLIDATED = 'consolidated';\nexport const TOOLTIP_FRAGMENTED = 'fragmented';\nexport const WHEEL_DELTA_MODIFIER = 30;\n","import { TITLE, SUB_TITLE, LEGEND, VERTICAL, HORIZONTAL, WIDTH, HEIGHT, TOP, LEFT, RIGHT } from '../constants';\nimport HeaderComponent from './components/headerComponent';\nimport LegendComponent from './components/legendComponent';\nimport ScrollComponent from './components/scroll-component';\nimport GridComponent from './components/grid-component';\nimport { TITLE_CONFIG, SUB_TITLE_CONFIG, GRID, CANVAS, LAYOUT_ALIGN } from './defaults';\nimport { ROW_MATRIX_INDEX, COLUMN_MATRIX_INDEX, CENTER } from '../../../layout/src/enums/constants';\n\n// Mapping between types of headers and their required configs for wrapper creation\nconst headerMap = {\n    title: {\n        headerCell: 'titleCell',\n        configType: TITLE_CONFIG\n    },\n    subtitle: {\n        headerCell: 'subtitleCell',\n        configType: SUB_TITLE_CONFIG\n    }\n};\n\n/**\n * Creates the wrapper for the header, i.e., title and subtitle to be used in the tree layout\n *\n *\n * @param {string} headerType type of header: title/subtite\n * @param {LayoutManager} layoutManager instance of Layout Manager which manages the layouting of the components\n * @param {Object} renderDetails Extra details required for rendering the headers\n * @return {Instance} Returns the respective wrappers\n */\nconst createHeaderWrapper = (headerType, layoutManager, renderDetails) => {\n    let wrapper = null;\n\n    const { components, layoutConfig } = renderDetails;\n    const { headerCell, configType } = headerMap[headerType];\n    const target = { target: CANVAS };\n\n    if (components.headers && components.headers[headerCell]) {\n        let headerConfig = layoutConfig[headerType];\n        const header = components.headers[headerCell];\n\n        headerConfig = Object.assign({}, headerConfig, {\n            classPrefix: layoutConfig.classPrefix,\n            ...target,\n            alignWith: `${ROW_MATRIX_INDEX[0]}-${COLUMN_MATRIX_INDEX[1]}`,\n            alignment: LAYOUT_ALIGN.LEFT,\n            className: configType.className\n        });\n\n        if (headerConfig.align === CENTER) {\n            headerConfig.alignment = null;\n            headerConfig.alignWith = null;\n        }\n        if (headerConfig.align === RIGHT) {\n            headerConfig.alignment = RIGHT;\n        }\n\n        const wrapperParams = {\n            name: headerType,\n            component: header,\n            config: headerConfig\n        };\n\n        const existingComponent = layoutManager.getComponent(headerType);\n        if (existingComponent) {\n            wrapper = existingComponent\n                        .updateWrapper(wrapperParams);\n        } else {\n            wrapper = new HeaderComponent(wrapperParams);\n        }\n    }\n    return wrapper;\n};\n\n// Mapping between types of scrollBars and their required configs for wrapper creation\nconst scrollBarMap = config => ({\n    vertical: {\n        componentName: 'verticalScrollBar',\n        width: 'thickness',\n        height: 'layoutBasedMeasure',\n        layoutBasedMeasure: HEIGHT,\n        viewMeasure: 'viewHeight',\n        rowAlign: 1,\n        colAlign: config.align === 'right' ? 2 : 0,\n        position: config.align,\n        alignment: TOP\n    },\n    horizontal: {\n        componentName: 'horizontalScrollBar',\n        width: 'layoutBasedMeasure',\n        layoutBasedMeasure: WIDTH,\n        viewMeasure: 'viewWidth',\n        height: 'thickness',\n        rowAlign: config.align === 'top' ? 0 : 2,\n        colAlign: 1,\n        position: config.align,\n        alignment: LEFT\n    }\n});\n\n/**\n * Creates the wrapper for the scroller, i.e., horizontal and vertical to be used in the tree layout\n *\n *\n * @param {string} scrollBarType type of scrollbar: horizontal/vertical\n * @param {LayoutManager} layoutManager instance of Layout Manager which manages the layouting of the components\n * @param {Object} renderDetails Extra details required for rendering the headers\n * @param {GridLayout} grid Instance of the grid layout\n * @return {Instance} Returns the respective wrappers\n */\nconst createScrollBarWrapper = (scrollBarType, layoutManager, renderDetails, grid) => {\n    let scrollBarWrapper = null;\n    const { layoutConfig } = renderDetails;\n    const target = { target: CANVAS };\n    const { scrollBar } = layoutConfig;\n    const { layoutDimensions } = grid.viewInfo();\n    const {\n        actualCenterMeasures,\n        unitHeights,\n        unitWidths\n    } = layoutDimensions;\n    const {\n        componentName, layoutBasedMeasure, width, height, rowAlign, colAlign,\n        viewMeasure, position, alignment\n    } = scrollBarMap(scrollBar[scrollBarType])[scrollBarType];\n    const dimensions = {\n        thickness: scrollBar.thickness,\n        layoutBasedMeasure: layoutDimensions[viewMeasure][1]\n    };\n    const isScroll = grid.scrollInfo()[scrollBarType];\n    const totalLength = actualCenterMeasures[layoutBasedMeasure];\n    const viewLength = layoutDimensions[viewMeasure][1];\n\n    const scrollConfig = Object.assign({}, {\n        classPrefix: layoutConfig.classPrefix,\n        ...target,\n        scrollBarComponentConfig: {\n            ...scrollBar,\n            classPrefix: layoutConfig.classPrefix\n        },\n\n        type: scrollBarType,\n        alignWith: `${ROW_MATRIX_INDEX[rowAlign]}-${COLUMN_MATRIX_INDEX[colAlign]}`,\n        alignment,\n        position\n    });\n\n    const wrapperParams = {\n        name: componentName,\n        config: scrollConfig,\n        dimensions: {\n            width: dimensions[width],\n            height: dimensions[height],\n            totalLength,\n            viewLength,\n            unitHeights,\n            unitWidths\n        }\n    };\n\n    const existingComponent = layoutManager.getComponent(componentName);\n\n    if (!isScroll) {\n        existingComponent && existingComponent.remove();\n        return null;\n    }\n\n    if (existingComponent) {\n        scrollBarWrapper = existingComponent\n                                .updateWrapper(wrapperParams);\n    } else {\n        scrollBarWrapper = new ScrollComponent(wrapperParams);\n    }\n\n    return scrollBarWrapper;\n};\n\n/**\n * Creates the wrapper for the legend to be used in the tree layout\n *\n *\n * @param {LayoutManager} layoutManager instance of Layout Manager which manages the layouting of the components\n * @param {Object} renderDetails Extra details required for rendering the headers\n * @return {Instance} Returns the respective wrappers\n */\nconst createLegendWrapper = (layoutManager, renderDetails) => {\n    let legendWrapper = null;\n    const { components, layoutConfig, measurement } = renderDetails;\n    const target = { target: CANVAS };\n\n    if (components.legends && components.legends.length) {\n        const legendConfig = { ...layoutConfig.legend, ...target, measurement };\n        const wrapperParams = {\n            name: LEGEND,\n            component: components.legends,\n            config: legendConfig\n        };\n\n        const existingComponent = layoutManager.getComponent(LEGEND);\n\n        if (existingComponent) {\n            legendWrapper = existingComponent\n                       .updateWrapper(wrapperParams);\n        } else {\n            legendWrapper = new LegendComponent(wrapperParams);\n        }\n    }\n    return legendWrapper;\n};\n\n/**\n * Creates the wrapper for the grid layout to be used in the tree layout\n *\n *\n * @param {LayoutManager} layoutManager instance of Layout Manager which manages the layouting of the components\n * @param {Object} renderDetails Extra details required for rendering the headers\n * @param {GridLayout} grid Instance of the grid layout\n * @return {Instance} Returns the respective wrappers\n */\nconst gridLayoutWrapper = (layoutManager, renderDetails, grid) => {\n    let gridWrapper = null;\n    const target = { target: CANVAS };\n    const { layoutConfig } = renderDetails;\n\n    const config = {\n        ...target,\n        pagination: layoutConfig.pagination,\n        classPrefix: layoutConfig.classPrefix,\n        dimensions: { height: 0, width: 0 }\n    };\n    const wrapperParams = {\n        name: GRID,\n        component: grid,\n        config\n    };\n    const existingComponent = layoutManager.getComponent(GRID);\n    if (existingComponent) {\n        gridWrapper = existingComponent\n                    .updateWrapper(wrapperParams);\n    } else {\n        gridWrapper = new GridComponent(wrapperParams);\n    }\n    return gridWrapper;\n};\n\n/**\n * Responsible for providing the wrapper creators for every component in Muze.\n * This function, when called, returns the set of components and their respective wrappers.\n *\n *\n *\n * @param {LayoutManager} layoutManager instance of Layout Manager which manages the layouting of the components\n * @param {GridLayout} grid Instance of the grid layout\n * @param {Object} renderDetails Extra details required for rendering the headers\n * @return {Instance} Returns the respective wrappers for each component\n */\nexport const componentWrapperMaker = (layoutManager, grid, renderDetails) => ({\n    title: createHeaderWrapper(TITLE, layoutManager, renderDetails),\n    subtitle: createHeaderWrapper(SUB_TITLE, layoutManager, renderDetails),\n    legend: createLegendWrapper(layoutManager, renderDetails),\n    grid: gridLayoutWrapper(layoutManager, renderDetails, grid),\n    verticalScrollBar: createScrollBarWrapper(VERTICAL, layoutManager, renderDetails, grid),\n    horizontalScrollBar: createScrollBarWrapper(HORIZONTAL, layoutManager, renderDetails, grid)\n});\n","export class ScrollManager {\n\n    constructor () {\n        this._scrollBarComponents = {};\n        this._attachedComponents = {};\n    }\n\n    scrollBarComponents (...sbc) {\n        if (sbc.length) {\n            this._scrollBarComponents = sbc[0];\n            return this;\n        }\n        return this._scrollBarComponents;\n    }\n\n    attachedComponents (...abc) {\n        if (abc.length) {\n            this._attachedComponents = abc[0];\n            return this;\n        }\n        return this._attachedComponents;\n    }\n\n    performAttachedScrollFunction (type, movedViewLength) {\n        Object.values(this.attachedComponents()).forEach((e) => {\n            e.performScrollAction(type, movedViewLength);\n        });\n    }\n\n    triggerScrollBarAction (type, delta) {\n        this.scrollBarComponents()[type] && this.scrollBarComponents()[type].scrollDeltaTo(delta);\n    }\n}\n","import { mergeRecursive } from 'muze-utils';\nimport { arrangeComponents } from './component-resolver';\nimport { createHeaders } from './title-maker';\nimport { createLegend, getLegendSpace } from './legend-maker';\nimport { componentWrapperMaker } from './component-wrapper-maker';\nimport {\n    TOP,\n    BOTTOM,\n    LEFT,\n    RIGHT,\n    TITLE,\n    SUB_TITLE,\n    LEGEND,\n    VERTICAL_SCROLL_BAR,\n    HORIZONTAL_SCROLL_BAR,\n    GRID\n} from '../constants';\nimport { ScrollManager } from './scroll-manager';\n\n/**\n *\n *\n * @param {*} context\n *\n */\nexport const prepareLayout = (layout, renderDetails) => {\n    const { components, layoutConfig, measurement } = renderDetails;\n    const {\n        rows,\n        columns,\n        values,\n        cornerMatrices\n    } = components;\n    const {\n        topLeft,\n        topRight,\n        bottomLeft,\n        bottomRight\n    } = cornerMatrices;\n    if (rows && columns) {\n        layout.measurement(measurement)\n                        .config(layoutConfig)\n                        .matrices({\n                            top: [topLeft, columns[0], topRight],\n                            center: [rows[0], values, rows[1]],\n                            bottom: [bottomLeft, columns[1], bottomRight]\n                        })\n                        .triggerReflow();\n    }\n};\n\n/**\n *\n *\n * @param {*} context\n * @param {*} mount\n *\n */\nexport const getRenderDetails = (context, mount) => {\n    let layoutConfig = mergeRecursive({}, context.config());\n    // Get height width of the mount point\n    let { height, width } = mount.getBoundingClientRect();\n    const heightAttr = context.height();\n    const widthAttr = context.width();\n    const visGroup = context.composition().visualGroup;\n    const {\n        isColumnSizeEqual,\n        isRowSizeEqual,\n        priority,\n        rows,\n        columns,\n        values\n    } = visGroup.placeholderInfo();\n    const {\n        minWidth,\n        minHeight,\n        classPrefix,\n        showHeaders,\n        legend,\n        pagination,\n        scrollBar\n    } = context.config();\n\n    // Get title configuration\n    const titleConfig = context.title()[1];\n     // Get subtitle configuration\n    const subtitleConfig = context.subtitle()[1];\n    // Get legend position\n    const legendPosition = legend.position;\n    // Arrange components according to config\n    const layoutArrangement = arrangeComponents(context);\n\n    height = Math.floor(height);\n    width = Math.floor(width);\n\n    const availableHeightForCanvas = Math.max(heightAttr > 0 ? heightAttr : height, minHeight);\n    const availableWidthForCanvas = Math.max(widthAttr > 0 ? widthAttr : width, minWidth);\n\n    // Create headers and determine header height\n    const { headers, headerHeight } = createHeaders(context, availableHeightForCanvas, availableWidthForCanvas);\n\n    // Create legends and determine legend space\n    const legends = createLegend(context, headerHeight, availableHeightForCanvas, availableWidthForCanvas);\n    context._composition.legend = {};\n    legends.forEach((e) => {\n        context._composition.legend[e.scaleType] = e.legend;\n    });\n\n    const legendSpace = getLegendSpace(legends, legend, availableHeightForCanvas, availableWidthForCanvas);\n    const legendWidth = (legendPosition === LEFT || legendPosition === RIGHT) ? legendSpace.width : 0;\n    const legendHeight = (legendPosition === TOP || legendPosition === BOTTOM) ? legendSpace.height : 0;\n\n    // Set components for layouting\n    const components = {\n        headers,\n        legends,\n        canvases: [context],\n        rows,\n        columns,\n        values,\n        cornerMatrices: visGroup.cornerMatrices()\n    };\n\n    const measurement = {\n        mountSpace: {\n            height,\n            width\n        },\n        headerHeight,\n        legendSpace,\n        canvasWidth: availableWidthForCanvas,\n        canvasHeight: availableHeightForCanvas,\n        width: availableWidthForCanvas - legendWidth,\n        height: availableHeightForCanvas - headerHeight - legendHeight,\n        minUnitHeight: context.minUnitHeight(),\n        minUnitWidth: context.minUnitWidth()\n    };\n    layoutConfig = mergeRecursive(layoutConfig, {\n        classPrefix,\n        showHeaders,\n        border: mergeRecursive(visGroup.metaData().border, context.config().border),\n        layoutArrangement,\n        legend,\n        buffer: scrollBar.thickness,\n        pagination,\n        title: titleConfig,\n        subtitle: subtitleConfig,\n        isColumnSizeEqual,\n        isRowSizeEqual,\n        mount,\n        priority\n    });\n    return {\n        layoutConfig,\n        components,\n        measurement\n    };\n};\n\nconst componentIndexes = {\n    title: 0,\n    subtitle: 1,\n    legend: 2,\n    verticalScrollBar: 3,\n    horizontalScrollBar: 4,\n    grid: 5\n};\n\nconst componentNames = {\n    0: TITLE,\n    1: SUB_TITLE,\n    2: LEGEND,\n    3: VERTICAL_SCROLL_BAR,\n    4: HORIZONTAL_SCROLL_BAR,\n    5: GRID\n};\n\n/**\n * Responsible for creating a scroll manager that manages interactions between the grid\n * component and the scroll bar components\n *\n * @param {Array} componentWrappers Contains the wrappers for all the components\n * @param {Canvas} canvas Instance of the current canvas\n * @return {Array} Positions of units either horizontal or vertical\n */\nconst createScrollManager = (componentWrappers, canvas) => {\n    const {\n        horizontalScrollBar,\n        verticalScrollBar,\n        grid\n    } = componentIndexes;\n\n    const horizontalScrollWrapper = componentWrappers[horizontalScrollBar];\n    const verticalScrollWrapper = componentWrappers[verticalScrollBar];\n    const gridWrapper = componentWrappers[grid];\n    const scrollBarManager = new ScrollManager();\n    const scrollBarComponents = {};\n\n    verticalScrollWrapper && (scrollBarComponents.vertical = verticalScrollWrapper);\n    horizontalScrollWrapper && (scrollBarComponents.horizontal = horizontalScrollWrapper);\n\n    scrollBarManager\n                    .scrollBarComponents(scrollBarComponents)\n                    .attachedComponents({\n                        grid: gridWrapper\n                    });\n    canvas.composition().hScrollBar = horizontalScrollWrapper;\n    canvas.composition().vScrollBar = verticalScrollWrapper;\n\n    [horizontalScrollWrapper, verticalScrollWrapper].forEach((wrapper) => {\n        wrapper && wrapper.manager(scrollBarManager);\n    });\n\n    gridWrapper.scrollBarManager(scrollBarManager);\n};\n\nexport const renderLayout = (canvas, renderDetails) => {\n    const layoutManager = canvas._layoutManager;\n    const gridLayout = canvas.layout();\n    const {\n\n        grid\n    } = componentIndexes;\n\n    // Get the component wrappers\n    const compWrappers = componentWrapperMaker(layoutManager, gridLayout, renderDetails);\n    const componentWrappers = Object.keys(componentIndexes).map(e => compWrappers[e]);\n    const gridWrapper = componentWrappers[grid];\n    createScrollManager(componentWrappers, canvas);\n\n    componentWrappers.forEach((componentWrapper, index) => {\n        if (componentWrapper === null) {\n            const deleteElementName = componentNames[index];\n            const component = layoutManager.getComponent(deleteElementName);\n            const deleteElementId = component ? component.renderAt() : null;\n            layoutManager.removeComponent(deleteElementId);\n        }\n    });\n    layoutManager.registerComponents(componentWrappers).compute();\n    gridWrapper.attachScrollListener();\n};\n\n","import {\n    getDataModelFromIdentifiers,\n    FieldType,\n    mergeRecursive,\n    isSimpleObject,\n    CommonProps\n} from 'muze-utils';\nimport { Firebolt } from '@chartshq/muze-firebolt';\n\nimport { applyInteractionPolicy } from '../helper';\n\nconst defaultInteractionPolicy = (valueMatrix, firebolt) => {\n    const isMeasure = field => field.type() === FieldType.MEASURE;\n    const canvas = firebolt.context;\n    const visualGroup = canvas.composition().visualGroup;\n    const xFields = [].concat(...visualGroup.getFieldsFromChannel('x'));\n    const yFields = [].concat(...visualGroup.getFieldsFromChannel('y'));\n    const colDim = xFields.every(field => field.type() === FieldType.DIMENSION);\n    const fieldInf = visualGroup.resolver().getAllFields();\n    const rowFacets = fieldInf.rowFacets;\n    const colFacets = fieldInf.colFacets;\n    valueMatrix.each((cell) => {\n        const unitFireBolt = cell.valueOf().firebolt();\n        if (!(xFields.every(isMeasure) && yFields.every(isMeasure))) {\n            const facetFields = cell.valueOf().facetByFields()[0];\n            const unitColFacets = facetFields.filter(d => colFacets.findIndex(v => v.equals(d)) !== -1);\n            const unitRowFacets = facetFields.filter(d => rowFacets.findIndex(v => v.equals(d)) !== -1);\n            let propFields;\n            if (colDim) {\n                propFields = unitColFacets.map(d => `${d}`);\n            } else {\n                propFields = unitRowFacets.map(d => `${d}`);\n            }\n\n            unitFireBolt.propagateWith('*', propFields, true);\n        }\n    });\n};\n\nconst defaultCrossInteractionPolicy = {\n    behaviours: {\n        '*': (propagationPayload, context) => {\n            const propagationCanvasAlias = propagationPayload.sourceCanvas;\n            const canvasAlias = context.parentAlias();\n            return propagationCanvasAlias ? canvasAlias === propagationCanvasAlias : true;\n        }\n    },\n    sideEffects: {\n        tooltip: (propagationPayload, context) => {\n            const propagationUnit = propagationPayload.sourceUnit;\n            const propagationCanvas = propagationPayload.sourceCanvas;\n            const unitId = context.id();\n            const canvasAlias = context.parentAlias();\n            if (propagationCanvas) {\n                return propagationCanvas !== canvasAlias ? true : unitId === propagationUnit;\n            }\n            return true;\n        }\n    }\n};\n\n/**\n * This class is responsible for dispatching any behavioural action to all the visual units housed by the canvas.\n * It is created by {@link Canvas}. This class does not handle any physical actions. Physical actions get triggered\n * in {@link VisualUnit} which is managed by it's own firebolt instance. The firebolt instance of canvas only\n * propagates the action to all the visual units in it's composition.\n *\n * To get the firebolt instance of {@link Canvas}\n * ```\n *  const firebolt = canvas.firebolt();\n * ```\n *\n * @class GroupFireBolt\n * @public\n */\nexport default class GroupFireBolt extends Firebolt {\n    constructor (...params) {\n        super(...params);\n        this._interactionPolicy = this.constructor.defaultInteractionPolicy();\n        this.crossInteractionPolicy(this.constructor.defaultCrossInteractionPolicy());\n    }\n\n    static defaultInteractionPolicy () {\n        return defaultInteractionPolicy;\n    }\n\n    static defaultCrossInteractionPolicy () {\n        return defaultCrossInteractionPolicy;\n    }\n\n    interactionPolicy (...policy) {\n        if (policy.length) {\n            this._interactionPolicy = policy[0] || this.constructor.defaultInteractionPolicy();\n            return this;\n        }\n        return this._interactionPolicy;\n    }\n\n    crossInteractionPolicy (...policy) {\n        if (policy.length) {\n            this._crossInteractionPolicy = mergeRecursive(mergeRecursive({},\n                this.constructor.defaultCrossInteractionPolicy()), policy[0] || {});\n            const context = this.context;\n            applyInteractionPolicy(this);\n            context._throwback.registerImmediateListener([CommonProps.MATRIX_CREATED], () => {\n                applyInteractionPolicy(this);\n            });\n            return this;\n        }\n        return this._crossInteractionPolicy;\n    }\n\n    /**\n     * Dispatches a behavioural action with a payload. It takes the name of the behavioural action and a payload\n     * object which contains the criteria aend an array of side effects which determines what side effects are\n     * going to be shown in each visual unit of the canvas. It prepares the datamodel from the given criteria\n     * and initiates a propagation from the datamodel of canvas. Then all the visual units of canvas which listens\n     * to the propagation gets informed on which rows got selected and dispatches the behavioural action sent during\n     * propagation.\n     *\n     * To dispatch a behavioural action on the canvas\n     * ```\n     *  // Get the firebolt instance of the canvas\n     *  const firebolt = canvas.firebolt();\n     *  // Dispatch a brush behaviour\n     *  firebolt.dispatchBehaviour('brush', {\n     *      // Selects all the rows with Horsepower having range between 100 and 200.\n     *      criteria: {\n     *          Horsepower: [100, 200]\n     *      }\n     *  });\n     * // On dispatch of this behavioural action, a selection box gets created and plots gets faded out which are the\n     * // default side effects mapped to this behavioural action.\n     * ```\n     *\n     * ```\n     * Additionally, it can also be passed an array of side effects in the payload.\n     *  // Dispatch a select behaviour with only crossline as side effect.\n     *  firebolt.dispatchBehaviour('select', {\n     *      criteria: {\n     *          Cylinders: ['8']\n     *      },\n     *      sideEffects: ['crossline']\n     *  });\n     * ```\n     *\n     * @public\n     *\n     * @param {string} behaviour Name of the behavioural action\n     * @param {Object} payload Object which contains the interaction information.\n     * @param {Object | Array.<Array>} payload.criteria Identifiers by which the selection happens.\n     * @param {Array.<string|Object>} payload.sideEffects Side effects which needs to be shown.\n     *\n     * @return {GroupFireBolt} Instance of firebolt.\n     */\n    dispatchBehaviour (behaviour, payload) {\n        const propPayload = Object.assign(payload);\n        const criteria = propPayload.criteria;\n        const data = this.context.composition().visualGroup.getGroupByData();\n        const fieldsConfig = data.getFieldsConfig();\n        const model = getDataModelFromIdentifiers(data, criteria);\n        const behaviouralAction = this._actions.behavioural[behaviour];\n\n        if (behaviouralAction) {\n            const fields = isSimpleObject(criteria) ? Object.keys(criteria) : (criteria ? criteria[0] : []);\n            const validFields = fields.filter(field => field in fieldsConfig);\n            const mutates = behaviouralAction.constructor.mutates();\n            const propConfig = {\n                payload: propPayload,\n                action: behaviour,\n                criteria: model,\n                sourceId: this.context.alias(),\n                isMutableAction: mutates,\n                propagateInterpolatedValues: validFields.every(field => fieldsConfig[field].def.type ===\n                    FieldType.MEASURE)\n            };\n            data.propagate(model, propConfig, true);\n        }\n        return this;\n    }\n\n    registerSideEffects (sideEffects) {\n        for (const key in sideEffects) {\n            this._sideEffectDefinitions[sideEffects[key].formalName()] = sideEffects[key];\n        }\n        return this;\n    }\n}\n","import GroupFireBolt from './group-firebolt';\n\nexport default GroupFireBolt;\n","export const APP_INITIAL_STATE = {\n    app: {\n        group: {},\n        units: {},\n        layers: {},\n        canvas: {}\n    },\n    local: {\n        canvas: {},\n        group: {},\n        units: {},\n        layers: {}\n    }\n};\n\n","import { GridLayout } from '@chartshq/layout';\nimport { transactor, Store, getUniqueId, selectElement, STATE_NAMESPACES, CommonProps } from 'muze-utils';\nimport { physicalActions, sideEffects, behaviouralActions, behaviourEffectMap } from '@chartshq/muze-firebolt';\nimport { RETINAL } from '../constants';\nimport TransactionSupport from '../transaction-support';\nimport { getRenderDetails, prepareLayout, renderLayout } from './layout-maker';\nimport { localOptions, canvasOptions } from './local-options';\nimport GroupFireBolt from './firebolt';\nimport options from '../options';\nimport { APP_INITIAL_STATE } from './app-state';\nimport { initCanvas,\n        setupChangeListener,\n        setLabelRotationForAxes,\n        createGroupState,\n        createLayoutManager,\n        setLayoutInfForUnits\n} from './helper';\n/**\n * Canvas is a logical component which houses a visualization by taking multiple variable in different encoding channel.\n * Canvas manages lifecycle of many other logical component and exposes one consistent interface for creation of chart.\n * Canvas is intialized from environment with settings from environment and singleton dependencies.\n *\n * To create an instance of canvas\n * ```\n *  const env = Muze();\n *  const canvas = env.canvas()\n * ```\n *\n *\n * @class\n * @public\n * @module Canvas\n */\nexport default class Canvas extends TransactionSupport {\n\n    /**\n     * Creates reactive property accessors.\n     * - data\n     * - height\n     * - width\n     * - config\n     * This configs are retrieved from options.\n     */\n    constructor (globalDependencies) {\n        super();\n\n        this._allOptions = Object.assign({}, options, localOptions);\n        this._registry = {};\n        this._composition = {};\n        this._cachedProps = {};\n        this._alias = null;\n        this._renderedResolve = null;\n        this._renderedPromise = new Promise((resolve) => {\n            this._renderedResolve = resolve;\n        });\n        this._composition.layout = new GridLayout();\n        this._store = new Store(APP_INITIAL_STATE);\n\n        this._throwback = new Store({\n            [CommonProps.MATRIX_CREATED]: false\n        });\n\n        // Setters and getters will be mounted on this. The object will be mutated.\n        const namespace = STATE_NAMESPACES.CANVAS_LOCAL_NAMESPACE;\n        const allOptions = Object.assign({}, options, localOptions, canvasOptions);\n\n        transactor(this, allOptions, this._store.model, {\n            namespace\n        });\n\n        this.dependencies(Object.assign({}, globalDependencies, this._dependencies));\n        this.firebolt(new GroupFireBolt(this, {\n            behavioural: behaviouralActions,\n            physical: physicalActions,\n            physicalBehaviouralMap: {}\n        }, sideEffects, behaviourEffectMap));\n        this.alias(`canvas-${getUniqueId()}`);\n        this.title('', {});\n        this.subtitle('', {});\n        this.legend({});\n        this.color({});\n        this.shape({});\n        this.size({});\n        setupChangeListener(this);\n         // init layoutManager\n        this._layoutManager = createLayoutManager();\n    }\n\n    /**\n     * Retrieves an instance of layout which is responsible for layouting. Layout is responsible for creating faceted\n     * presentation using table layout.\n     *\n     * @public\n     *\n     * @return {GridLayout} Instance of layout attached to canvas.\n     */\n    layout (...params) {\n        if (params.length) {\n            return this;\n        }\n        return this.composition().layout;\n    }\n\n    /**\n     * Retrieves the composition for a canvas\n     *\n     * @public\n     *\n     * @return {object} Instances of the components which canvas requires to draw the full visualization.\n     *      ```\n     *          {\n     *              layout: // Instance of {@link GridLayout}\n     *              legend: // Instance of {@link Legend}\n     *              subtitle: // Instance of {@link TextCell} using which the title is rendered\n     *              title: // Instance of {@link TextCell} using which the title is rendered\n     *              visualGroup: // Instance of {@link visualGroup}\n     *          }\n     *      ```\n     */\n    composition (...params) {\n        if (params.length) {\n            return this;\n        }\n        return this._composition;\n    }\n\n    done () {\n        return this._renderedPromise;\n    }\n\n    /**\n     * Sets or gets the alias of the canvas. Alias is a name by which the canvas can be referred.\n     *\n     * When setter\n     * @param {string} alias Name of the alias.\n     *\n     * @return {Canvas} Instance of the canvas.\n     *\n     * When getter\n     *\n     * @return {string} Alias of canvas.\n     *\n     * @public\n     */\n    alias (...params) {\n        if (params.length) {\n            const visualGroup = this.composition().visualGroup;\n            this._alias = params[0];\n            visualGroup && visualGroup.alias(this.alias());\n            return this;\n        }\n        return this._alias;\n    }\n\n    /**\n     * Creates an instance initiated with given settings.\n     *\n     * @param {Object} initialSettings Initial settings to be populated in the model\n     * @param {Object} regEntry newly created instance with the initial settings\n     * @param {Object} globalDependencies dependencies which will be created only once in the page\n     *\n     * @return {Object} newly created instance with the initial settings\n     */\n    static withSettings (initialSettings, regEntry, globalDependencies) {\n        const instance = new Canvas(globalDependencies);\n\n        for (const key in initialSettings) {\n            instance[key](initialSettings[key]);\n        }\n        // set registry for instance\n        instance.registry(regEntry);\n        return instance;\n    }\n\n    /**\n     *\n     *\n     * @static\n     *\n     * @memberof Canvas\n     */\n    static formalName () {\n        return 'canvas';\n    }\n\n    /**\n     * Returns the instance of firebolt associated with this canvas. The firebolt instance can be used to dispatch a\n     * behaviour dynamically on the canvas. This firebolt does not handle any physical actions. It is just used to\n     * propagate the action to all the visual units in it's composition.\n     *\n     * @public\n     *\n     * @return {GroupFireBolt} Instance of firebolt associated with canvas.\n     */\n    firebolt (...firebolt) {\n        if (firebolt.length) {\n            this._firebolt = firebolt[0];\n            return this;\n        }\n        return this._firebolt;\n    }\n\n    /**\n     * Registry peoperty accessor\n     *\n     * @param {Object} reg plain old javascript object keyvalue pairs. Key containing module name and value contains\n     * module definition class. The reg object has to be flat object of level 1.\n     */\n    registry (...params) {\n        if (params.length) {\n            const components = Object.assign({}, params[0].components);\n            const componentSubRegistry = Object.assign({}, params[0].componentSubRegistry);\n\n            this._registry = { components, componentSubRegistry };\n            const initedComponents = initCanvas(this);\n            // @todo is it okay to continue this tight behaviour? If not use a resolver to resolve diff component type.\n            this._composition.visualGroup = initedComponents[0];\n            createGroupState(this);\n            this.composition().visualGroup.alias(this.alias()).store(this._store);\n            return this;\n        }\n        return this._registry;\n    }\n\n    /*\n     * Prepare dependencies for top level elements\n     */\n    dependencies (...param) {\n        if (param.length) {\n            this._dependencies = param[0];\n            return this;\n        }\n        // @todo prepare dependencies here.\n        return this._dependencies;\n    }\n\n    /**\n     *\n     *\n     * @param {*} lifeCycles\n     *\n     * @memberof Canvas\n     */\n    lifeCycle (lifeCycles) {\n        const lifeCycleManager = this.dependencies().lifeCycleManager;\n        if (lifeCycles) {\n            lifeCycleManager.register(lifeCycles);\n            return this;\n        }\n        return lifeCycleManager;\n    }\n\n    /**\n     *\n     *\n     * @readonly\n     * @memberof Canvas\n     */\n    legend (...params) {\n        if (params.length) {\n            return this;\n        }\n        return this.composition().legend;\n    }\n\n    /**\n     * Returns a promise for various {@link LifecycleEvents} of the various components of canvas. The promise gets\n     * resolved once the particular event gets completed.\n     *\n     * To use this,\n     * ```\n     *      canvas.once('layer.drawn').then(() => {\n     *          // Do any post drawing work here.\n     *      });\n     * ```\n     * @public\n     *\n     * @param {string} eventName Name of the lifecycle event.\n     *\n     * @return {Promise} A pending promise waiting for resolve to be called.\n     */\n    once (eventName) {\n        const lifeCycleManager = this.dependencies().lifeCycleManager;\n        return lifeCycleManager.retrieve(eventName);\n    }\n\n    /**\n     * Internal function to trigger render, this method is cognizant of all the properties of the core modules and\n     * establish a passive reactivity. Passive reactivity is not always a bad thing :)\n     * @internal\n     */\n    render () {\n        const mount = this.mount();\n        // removeChild(mount);\n        const lifeCycleManager = this.dependencies().lifeCycleManager;\n        // Get render details including arrangement and measurement\n        const renderDetails = getRenderDetails(this, mount);\n        lifeCycleManager.notify({ client: this, action: 'beforedraw' });\n        // Prepare the layout by triggering the matrix calculation\n        prepareLayout(this.layout(), renderDetails);\n\n        this._layoutManager.dimension({\n            height: renderDetails.measurement.canvasHeight,\n            width: renderDetails.measurement.canvasWidth\n        });\n\n        this._layoutManager.renderAt(mount);\n\n        // Render each component\n        renderLayout(this, renderDetails);\n\n        setLayoutInfForUnits(this);\n\n        // setLabelRotation\n        setLabelRotationForAxes(this);\n    }\n\n    /**\n     * Returns the instances of x axis of the canvas. It returns the instances in a two dimensional array form.\n     *\n     * ```\n     *   // The first element in the sub array represents the top axis and the second element represents the bottom\n     *   // axis.\n     *   [\n     *      [X1, X2],\n     *      [X3, X4]\n     *   ]\n     * ```\n     * @public\n     *\n     * @return {Array.<Array>} Instances of x axis.\n     */\n    xAxes () {\n        return this.composition().visualGroup.getAxes('x');\n    }\n\n    /**\n     * Returns the instances of y axis of the canvas. It returns the instances in a two dimensional array form.\n     *\n     * ```\n     *   // The first element in the sub array represents the left axis and the second element represents the right\n     *   // axis.\n     *   [\n     *      [Y1, Y2],\n     *      [Y3, Y4]\n     *   ]\n     * ```\n     * @public\n     * @return {Array.<Array>} Instances of y axis.\n     */\n    yAxes () {\n        return this.composition().visualGroup.getAxes('y');\n    }\n\n    /**\n     * Returns all the retinal axis of the canvas. Color, shape and size axis are combinedly called retinal axis.\n     *\n     * @public\n     * @return {Object} Instances of retinal axis.\n     *          ```\n     *              {\n     *                  color: [ColorAxis], // Array of color axis.\n     *                  shape: [ShapeAxis], // Array of shape axis.\n     *                  size: [SizeAxis] // Array of size axis.\n     *              }\n     *          ```\n     */\n    getRetinalAxes () {\n        const visualGroup = this.composition().visualGroup;\n        return visualGroup.getAxes(RETINAL);\n    }\n\n    mount (...params) {\n        if (params.length) {\n            let value = params[0];\n            if (typeof params[0] === 'string') {\n                value = selectElement(params[0]).node();\n            }\n            this._mount = value;\n            return this;\n        }\n        return this._mount;\n    }\n}\n","import { cellRegistry, SimpleCell } from '@chartshq/visual-cell';\nimport { VisualUnit } from '@chartshq/visual-unit';\nimport { layerRegistry } from '@chartshq/visual-layer';\nimport { SimpleGroup, VisualGroup } from '@chartshq/visual-group';\n\nexport const COMPONENTS = {\n    VisualGroup,\n    VisualUnit\n};\nexport const SUBREGISTRIES = {\n    cellRegistry,\n    layerRegistry\n};\nexport const INTERFACES = {\n    SimpleGroup,\n    SimpleCell\n};\n\n","import { DEFAULT_LAYERS } from './defaults';\n\nexport default () => {\n    const reg = DEFAULT_LAYERS;\n    const regObj = {\n        set: (key, def) => {\n            reg[key] = def;\n            return regObj;\n        },\n        get: () => reg\n    };\n    return regObj;\n};\n","import {\n    transactor,\n    Smartlabel,\n    enableChainedTransaction,\n    LifeCycleManager,\n    DataModel,\n    makeElement,\n    getClientPoint,\n    selectElement,\n    getEvent,\n    require,\n    DateTimeFormatter,\n    Store\n} from 'muze-utils';\n\nimport {\n    SurrogateSideEffect,\n    SpawnableSideEffect,\n    sideEffects,\n    PersistentBehaviour,\n    GenericBehaviour,\n    VolatileBehaviour,\n    behaviouralActions,\n    GenericSideEffect\n} from '@chartshq/muze-firebolt';\nimport { layerFactory } from '@chartshq/visual-layer';\nimport pkg from '../package.json';\nimport * as operators from './operators';\nimport { actionModel as ActionModel } from './action-model';\nimport options from './options';\nimport { Canvas } from './canvas';\nimport { COMPONENTS, SUBREGISTRIES } from './default-registry';\nimport './muze.scss';\n\n// Cache singleton instances which should be included only once in a page\nconst globalCache = {};\nconst defaultRegistry = COMPONENTS;\n\nconst overrideRegistryDefinitions = (overrideRegistry, registry) => {\n    for (const prop in overrideRegistry) {\n        registry.set(prop, overrideRegistry[prop]);\n    }\n};\n\n/**\n * Entry point to renderer. Initializes an environment with settings and registries for canvas. This is a simple wrapper\n * over {@link Canvas} which enables common configuration passing to multiple such canvases.\n *\n * Everytime `muze()` is called it creates an environment. These environment supports subset of APIs of Canvas. If\n * common configuration is used to render multiple canvases then it can be set directly in the env. Like if data is\n * common across all the visulization then its better to set the data in env. When a canvas is created it receives all\n * those configuration from env.\n *\n * ```\n *  // Creates an environment\n *  const env = muze()\n *  // Set data property in environment, so that all the canvas created from the same environment gets this data\n *  // automatically\n *  env.data(dm);\n *  // Creates canvas, by default env pushes data to canvas instance\n *  const canvas = env.canvas();\n * ```\n *\n * If a property is set on both environment and canvas instance, property set on canvas instance gets more priority.\n *\n * @public\n * @module muze\n * @namespace Muze\n *\n * @return {Env} Instance of an environment\n */\nconst muze = () => {\n    // Setters and getters will be mounted on this. Object will be mutated.\n    const [env, globalStore] = transactor({}, options);\n    const components = Object.assign({}, COMPONENTS);\n    const componentSubRegistryDef = Object.assign(SUBREGISTRIES);\n    const componentSubRegistry = {};\n\n    for (const prop in componentSubRegistryDef) {\n        componentSubRegistry[prop] = componentSubRegistryDef[prop]();\n    }\n\n    // Apart form the setter getter, an instance method is injected to create real renderer instances\n    env.canvas = () => {\n        // Create a canvas instance with this settings\n        const settings = globalStore.serialize();\n        const canvas = Canvas.withSettings(settings, { /* registry */\n            components,\n            componentSubRegistry\n        }, env.globalDependencies());\n\n        // Whenever settings is changed canvas is updated\n        enableChainedTransaction(globalStore, canvas, Object.keys(settings));\n\n        return canvas;\n    };\n\n    // Global dependencies for for compositions. Only one copy of the same should be in the page\n    env.globalDependencies = () => {\n        if (!globalCache.smartlabel) {\n            globalCache.smartlabel = new Smartlabel(1, 'body');\n        }\n        return {\n            smartlabel: globalCache.smartlabel,\n            lifeCycleManager: new LifeCycleManager()\n        };\n    };\n\n    // Retrieves global settings. This getter is readonly so that user can't change this as change should happen\n    // only from setter to avoid unwanted sync issues.\n    env.settings = () => globalStore.serialize();\n\n    env.registry = (...overrideRegistry) => {\n        // Selectively copy the properties from COMPONENTS\n        if (overrideRegistry.length) {\n            for (const prop in overrideRegistry) {\n                if (prop in defaultRegistry) {\n                    components[prop] = overrideRegistry[prop];\n                }\n            }\n            return env;\n        }\n        return components;\n    };\n\n    env.cellRegistry = (...overrideRegistry) => {\n        const cellRegistry = componentSubRegistry.cellRegistry;\n        if (overrideRegistry.length) {\n            overrideRegistryDefinitions(overrideRegistry[0], cellRegistry);\n            return env;\n        }\n        return cellRegistry.get();\n    };\n\n    env.layerRegistry = (...overrideRegistry) => {\n        const layerRegistry = componentSubRegistry.layerRegistry;\n        if (overrideRegistry.length) {\n            overrideRegistryDefinitions(overrideRegistry[0], layerRegistry);\n            return env;\n        }\n        return layerRegistry.get();\n    };\n\n    return env;\n};\n\nconst SideEffects = {\n    sideEffects,\n    standards: {\n        SurrogateSideEffect,\n        SpawnableSideEffect,\n        GenericSideEffect\n    }\n};\n\nconst Behaviours = {\n    behaviouralActions,\n    standards: {\n        GenericBehaviour,\n        PersistentBehaviour,\n        VolatileBehaviour\n    }\n};\n\nmuze.DataModel = DataModel;\nmuze.version = pkg.version;\nmuze.SideEffects = SideEffects;\nmuze.ActionModel = ActionModel;\nmuze.layerFactory = layerFactory;\nmuze.Operators = operators;\nmuze.Behaviours = Behaviours;\nmuze.utils = {\n    getClientPoint,\n    getEvent,\n    makeElement,\n    selectElement,\n    DateTimeFormatter,\n    require\n};\nmuze.Model = new Store({}).model.constructor;\n\nexport default muze;\n"],"sourceRoot":""}