{"version":3,"sources":["webpack://muze/webpack/universalModuleDefinition","webpack://muze/webpack/bootstrap","webpack://muze/webpack://DataModel/webpack/universalModuleDefinition","webpack://muze/webpack://DataModel/webpack/bootstrap","webpack://muze/webpack://DataModel/node_modules/d3-dsv/src/csv.js","webpack://muze/webpack://DataModel/node_modules/d3-dsv/src/dsv.js","webpack://muze/webpack://DataModel/node_modules/d3-dsv/src/index.js","webpack://muze/webpack://DataModel/node_modules/d3-dsv/src/tsv.js","webpack://muze/webpack://DataModel/src/constants/index.js","webpack://muze/webpack://DataModel/src/converter/auto-resolver.js","webpack://muze/webpack://DataModel/src/converter/dsv-arr.js","webpack://muze/webpack://DataModel/src/converter/dsv-str.js","webpack://muze/webpack://DataModel/src/converter/flat-json.js","webpack://muze/webpack://DataModel/src/converter/index.js","webpack://muze/webpack://DataModel/src/datamodel.js","webpack://muze/webpack://DataModel/src/default-config.js","webpack://muze/webpack://DataModel/src/enums/data-format.js","webpack://muze/webpack://DataModel/src/enums/dimension-subtype.js","webpack://muze/webpack://DataModel/src/enums/field-type.js","webpack://muze/webpack://DataModel/src/enums/filtering-mode.js","webpack://muze/webpack://DataModel/src/enums/index.js","webpack://muze/webpack://DataModel/src/enums/measure-subtype.js","webpack://muze/webpack://DataModel/src/export.js","webpack://muze/webpack://DataModel/src/field-creator.js","webpack://muze/webpack://DataModel/src/field-store.js","webpack://muze/webpack://DataModel/src/fields/binned/index.js","webpack://muze/webpack://DataModel/src/fields/categorical/index.js","webpack://muze/webpack://DataModel/src/fields/continuous/index.js","webpack://muze/webpack://DataModel/src/fields/dimension/index.js","webpack://muze/webpack://DataModel/src/fields/field/index.js","webpack://muze/webpack://DataModel/src/fields/index.js","webpack://muze/webpack://DataModel/src/fields/measure/index.js","webpack://muze/webpack://DataModel/src/fields/parsers/binned-parser/index.js","webpack://muze/webpack://DataModel/src/fields/parsers/categorical-parser/index.js","webpack://muze/webpack://DataModel/src/fields/parsers/continuous-parser/index.js","webpack://muze/webpack://DataModel/src/fields/parsers/field-parser/index.js","webpack://muze/webpack://DataModel/src/fields/parsers/temporal-parser/index.js","webpack://muze/webpack://DataModel/src/fields/partial-field/index.js","webpack://muze/webpack://DataModel/src/fields/temporal/index.js","webpack://muze/webpack://DataModel/src/helper.js","webpack://muze/webpack://DataModel/src/index.js","webpack://muze/webpack://DataModel/src/invalid-aware-types.js","webpack://muze/webpack://DataModel/src/operator/bucket-creator.js","webpack://muze/webpack://DataModel/src/operator/compose.js","webpack://muze/webpack://DataModel/src/operator/cross-product.js","webpack://muze/webpack://DataModel/src/operator/data-builder.js","webpack://muze/webpack://DataModel/src/operator/difference.js","webpack://muze/webpack://DataModel/src/operator/get-common-schema.js","webpack://muze/webpack://DataModel/src/operator/group-by-function.js","webpack://muze/webpack://DataModel/src/operator/group-by.js","webpack://muze/webpack://DataModel/src/operator/index.js","webpack://muze/webpack://DataModel/src/operator/merge-sort.js","webpack://muze/webpack://DataModel/src/operator/natural-join-filter-function.js","webpack://muze/webpack://DataModel/src/operator/natural-join.js","webpack://muze/webpack://DataModel/src/operator/outer-join.js","webpack://muze/webpack://DataModel/src/operator/pure-operators.js","webpack://muze/webpack://DataModel/src/operator/row-diffset-iterator.js","webpack://muze/webpack://DataModel/src/operator/union.js","webpack://muze/webpack://DataModel/src/relation.js","webpack://muze/webpack://DataModel/src/stats/index.js","webpack://muze/webpack://DataModel/src/utils/column-major.js","webpack://muze/webpack://DataModel/src/utils/date-time-formatter.js","webpack://muze/webpack://DataModel/src/utils/domain-generator.js","webpack://muze/webpack://DataModel/src/utils/extend2.js","webpack://muze/webpack://DataModel/src/utils/helper.js","webpack://muze/webpack://DataModel/src/utils/index.js","webpack://muze/webpack://DataModel/src/utils/reducer-store.js","webpack://muze/webpack://DataModel/src/value.js","webpack://muze/webpack://hyperdis/webpack/universalModuleDefinition","webpack://muze/webpack://hyperdis/webpack/bootstrap","webpack://muze/webpack://hyperdis/src/utils/set.js","webpack://muze/webpack://hyperdis/src/utils/index.js","webpack://muze/webpack://hyperdis/src/graph-node.js","webpack://muze/webpack://hyperdis/src/electric-node.js","webpack://muze/webpack://hyperdis/src/graph.js","webpack://muze/webpack://hyperdis/src/model.js","webpack://muze/webpack://hyperdis/src/index.js","webpack://muze/(webpack)/buildin/module.js","webpack://muze/./packages/muze-utils/node_modules/fusioncharts-smartlabel/lib/SmartlabelManager.js","webpack://muze/./packages/muze-utils/node_modules/fusioncharts-smartlabel/lib/lib.js","webpack://muze/./packages/muze/src/index.js","webpack://muze/./packages/muze-utils/node_modules/fusioncharts-smartlabel/lib/container-manager.js","webpack://muze/./packages/muze-utils/node_modules/d3-array/src/ascending.js","webpack://muze/./packages/muze-utils/node_modules/d3-array/src/bisector.js","webpack://muze/./packages/muze-utils/node_modules/d3-array/src/bisect.js","webpack://muze/./packages/muze-utils/node_modules/d3-array/src/cross.js","webpack://muze/./packages/muze-utils/node_modules/d3-array/src/number.js","webpack://muze/./packages/muze-utils/node_modules/d3-array/src/array.js","webpack://muze/./packages/muze-utils/node_modules/d3-array/src/range.js","webpack://muze/./packages/muze-utils/node_modules/d3-array/src/ticks.js","webpack://muze/./packages/muze-utils/node_modules/d3-array/src/threshold/sturges.js","webpack://muze/./packages/muze-utils/node_modules/d3-array/src/quantile.js","webpack://muze/./packages/muze-utils/node_modules/d3-collection/src/map.js","webpack://muze/./packages/muze-utils/node_modules/d3-collection/src/nest.js","webpack://muze/./packages/muze-utils/node_modules/d3-collection/src/set.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale/src/array.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale/src/ordinal.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale/src/band.js","webpack://muze/./packages/muze-utils/node_modules/d3-color/src/define.js","webpack://muze/./packages/muze-utils/node_modules/d3-color/src/color.js","webpack://muze/./packages/muze-utils/node_modules/d3-color/src/math.js","webpack://muze/./packages/muze-utils/node_modules/d3-color/src/lab.js","webpack://muze/./packages/muze-utils/node_modules/d3-color/src/cubehelix.js","webpack://muze/./packages/muze-utils/node_modules/d3-interpolate/src/basis.js","webpack://muze/./packages/muze-utils/node_modules/d3-interpolate/src/constant.js","webpack://muze/./packages/muze-utils/node_modules/d3-interpolate/src/color.js","webpack://muze/./packages/muze-utils/node_modules/d3-interpolate/src/rgb.js","webpack://muze/./packages/muze-utils/node_modules/d3-interpolate/src/number.js","webpack://muze/./packages/muze-utils/node_modules/d3-interpolate/src/basisClosed.js","webpack://muze/./packages/muze-utils/node_modules/d3-interpolate/src/object.js","webpack://muze/./packages/muze-utils/node_modules/d3-interpolate/src/string.js","webpack://muze/./packages/muze-utils/node_modules/d3-interpolate/src/value.js","webpack://muze/./packages/muze-utils/node_modules/d3-interpolate/src/transform/parse.js","webpack://muze/./packages/muze-utils/node_modules/d3-interpolate/src/date.js","webpack://muze/./packages/muze-utils/node_modules/d3-interpolate/src/array.js","webpack://muze/./packages/muze-utils/node_modules/d3-interpolate/src/round.js","webpack://muze/./packages/muze-utils/node_modules/d3-interpolate/src/transform/decompose.js","webpack://muze/./packages/muze-utils/node_modules/d3-interpolate/src/transform/index.js","webpack://muze/./packages/muze-utils/node_modules/d3-interpolate/src/zoom.js","webpack://muze/./packages/muze-utils/node_modules/d3-interpolate/src/hsl.js","webpack://muze/./packages/muze-utils/node_modules/d3-interpolate/src/hcl.js","webpack://muze/./packages/muze-utils/node_modules/d3-interpolate/src/cubehelix.js","webpack://muze/./packages/muze-utils/node_modules/d3-interpolate/src/piecewise.js","webpack://muze/./packages/muze-utils/node_modules/d3-interpolate/src/quantize.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale/src/constant.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale/src/number.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale/src/continuous.js","webpack://muze/./packages/muze-utils/node_modules/d3-format/src/formatDecimal.js","webpack://muze/./packages/muze-utils/node_modules/d3-format/src/exponent.js","webpack://muze/./packages/muze-utils/node_modules/d3-format/src/formatSpecifier.js","webpack://muze/./packages/muze-utils/node_modules/d3-format/src/formatTrim.js","webpack://muze/./packages/muze-utils/node_modules/d3-format/src/formatPrefixAuto.js","webpack://muze/./packages/muze-utils/node_modules/d3-format/src/defaultLocale.js","webpack://muze/./packages/muze-utils/node_modules/d3-format/src/formatRounded.js","webpack://muze/./packages/muze-utils/node_modules/d3-format/src/formatTypes.js","webpack://muze/./packages/muze-utils/node_modules/d3-format/src/identity.js","webpack://muze/./packages/muze-utils/node_modules/d3-format/src/locale.js","webpack://muze/./packages/muze-utils/node_modules/d3-format/src/formatGroup.js","webpack://muze/./packages/muze-utils/node_modules/d3-format/src/formatNumerals.js","webpack://muze/./packages/muze-utils/node_modules/d3-format/src/precisionFixed.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale/src/tickFormat.js","webpack://muze/./packages/muze-utils/node_modules/d3-format/src/precisionPrefix.js","webpack://muze/./packages/muze-utils/node_modules/d3-format/src/precisionRound.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale/src/linear.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale/src/identity.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale/src/nice.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale/src/log.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale/src/pow.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale/src/quantile.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale/src/quantize.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale/src/threshold.js","webpack://muze/./packages/muze-utils/node_modules/d3-time/src/interval.js","webpack://muze/./packages/muze-utils/node_modules/d3-time/src/millisecond.js","webpack://muze/./packages/muze-utils/node_modules/d3-time/src/duration.js","webpack://muze/./packages/muze-utils/node_modules/d3-time/src/second.js","webpack://muze/./packages/muze-utils/node_modules/d3-time/src/minute.js","webpack://muze/./packages/muze-utils/node_modules/d3-time/src/hour.js","webpack://muze/./packages/muze-utils/node_modules/d3-time/src/day.js","webpack://muze/./packages/muze-utils/node_modules/d3-time/src/week.js","webpack://muze/./packages/muze-utils/node_modules/d3-time/src/month.js","webpack://muze/./packages/muze-utils/node_modules/d3-time/src/year.js","webpack://muze/./packages/muze-utils/node_modules/d3-time/src/utcMinute.js","webpack://muze/./packages/muze-utils/node_modules/d3-time/src/utcHour.js","webpack://muze/./packages/muze-utils/node_modules/d3-time/src/utcDay.js","webpack://muze/./packages/muze-utils/node_modules/d3-time/src/utcWeek.js","webpack://muze/./packages/muze-utils/node_modules/d3-time/src/utcMonth.js","webpack://muze/./packages/muze-utils/node_modules/d3-time/src/utcYear.js","webpack://muze/./packages/muze-utils/node_modules/d3-time-format/src/locale.js","webpack://muze/./packages/muze-utils/node_modules/d3-time-format/src/defaultLocale.js","webpack://muze/./packages/muze-utils/node_modules/d3-time-format/src/isoFormat.js","webpack://muze/./packages/muze-utils/node_modules/d3-time-format/src/isoParse.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale/src/time.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale/src/colors.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale/src/category10.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale/src/category20b.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale/src/category20.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale/src/category20c.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale/src/cubehelix.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale/src/rainbow.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale/src/viridis.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale/src/sequential.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/colors.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/categorical/Accent.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/categorical/category10.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/categorical/Dark2.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/categorical/Paired.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/categorical/Pastel1.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/categorical/Pastel2.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/categorical/Set1.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/categorical/Set2.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/categorical/Set3.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/ramp.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/diverging/BrBG.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/diverging/PRGn.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/diverging/PiYG.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/diverging/PuOr.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/diverging/RdBu.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/diverging/RdGy.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/diverging/RdYlBu.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/diverging/RdYlGn.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/diverging/Spectral.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/sequential-multi/BuGn.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/sequential-multi/BuPu.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/sequential-multi/GnBu.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/sequential-multi/OrRd.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/sequential-multi/PuBuGn.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/sequential-multi/PuBu.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/sequential-multi/PuRd.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/sequential-multi/RdPu.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/sequential-multi/YlGnBu.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/sequential-multi/YlGn.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/sequential-multi/YlOrBr.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/sequential-multi/YlOrRd.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/sequential-single/Blues.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/sequential-single/Greens.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/sequential-single/Greys.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/sequential-single/Purples.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/sequential-single/Reds.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/sequential-single/Oranges.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/sequential-multi/cubehelix.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/sequential-multi/rainbow.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/sequential-multi/sinebow.js","webpack://muze/./packages/muze-utils/node_modules/d3-scale-chromatic/src/sequential-multi/viridis.js","webpack://muze/./packages/muze-utils/src/enums/namespace.js","webpack://muze/./packages/muze-utils/src/enums/reserved-fields.js","webpack://muze/./packages/muze-utils/src/enums/common-props.js","webpack://muze/./packages/muze-utils/node_modules/d3-axis/src/array.js","webpack://muze/./packages/muze-utils/node_modules/d3-axis/src/identity.js","webpack://muze/./packages/muze-utils/node_modules/d3-axis/src/axis.js","webpack://muze/./packages/muze-utils/node_modules/d3-path/src/path.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/constant.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/math.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/arc.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/curve/linear.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/point.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/line.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/area.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/descending.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/identity.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/curve/radial.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/lineRadial.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/array.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/symbol/circle.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/symbol/cross.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/symbol/diamond.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/symbol/star.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/symbol/square.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/symbol/triangle.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/symbol/wye.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/noop.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/curve/basis.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/curve/basisClosed.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/curve/basisOpen.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/curve/bundle.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/curve/cardinal.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/curve/cardinalClosed.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/curve/cardinalOpen.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/curve/catmullRom.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/curve/catmullRomClosed.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/curve/catmullRomOpen.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/curve/linearClosed.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/curve/monotone.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/curve/natural.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/curve/step.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/offset/none.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/order/none.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/stack.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/order/ascending.js","webpack://muze/./packages/muze-utils/node_modules/d3-ease/src/cubic.js","webpack://muze/./packages/muze-utils/node_modules/d3-ease/src/poly.js","webpack://muze/./packages/muze-utils/node_modules/d3-ease/src/sin.js","webpack://muze/./packages/muze-utils/node_modules/d3-ease/src/bounce.js","webpack://muze/./packages/muze-utils/node_modules/d3-ease/src/back.js","webpack://muze/./packages/muze-utils/node_modules/d3-ease/src/elastic.js","webpack://muze/./packages/muze-utils/node_modules/d3-voronoi/src/constant.js","webpack://muze/./packages/muze-utils/node_modules/d3-voronoi/src/point.js","webpack://muze/./packages/muze-utils/node_modules/d3-voronoi/src/RedBlackTree.js","webpack://muze/./packages/muze-utils/node_modules/d3-voronoi/src/Edge.js","webpack://muze/./packages/muze-utils/node_modules/d3-voronoi/src/Cell.js","webpack://muze/./packages/muze-utils/node_modules/d3-voronoi/src/Circle.js","webpack://muze/./packages/muze-utils/node_modules/d3-voronoi/src/Beach.js","webpack://muze/./packages/muze-utils/node_modules/d3-voronoi/src/Diagram.js","webpack://muze/./packages/muze-utils/node_modules/d3-voronoi/src/voronoi.js","webpack://muze/./packages/muze-utils/src/DataSystem/selection.js","webpack://muze/./packages/muze-utils/src/common-utils.js","webpack://muze/./packages/muze-utils/node_modules/d3-ease/src/linear.js","webpack://muze/./packages/muze-utils/node_modules/d3-ease/src/circle.js","webpack://muze/./packages/muze-utils/src/DataSystem/dataSelect.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/symbol.js","webpack://muze/./packages/muze-utils/src/enums/stack-config.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/order/descending.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/offset/diverging.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/offset/expand.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/offset/wiggle.js","webpack://muze/./packages/muze-utils/node_modules/d3-shape/src/pie.js","webpack://muze/./packages/muze-utils/src/enums/constants.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/namespaces.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/namespace.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/creator.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selector.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selectorAll.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/matcher.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/sparse.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/enter.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/constant.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/data.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/sort.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/attr.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/window.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/style.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/classed.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/text.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/html.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/raise.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/lower.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/insert.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/remove.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/clone.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/on.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/dispatch.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/index.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/select.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/selectAll.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/filter.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/exit.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/merge.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/order.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/call.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/nodes.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/node.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/size.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/empty.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/each.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/property.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/append.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/selection/datum.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/select.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/local.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/sourceEvent.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/point.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/mouse.js","webpack://muze/./packages/muze-utils/node_modules/d3-selection/src/touch.js","webpack://muze/./packages/muze-utils/node_modules/d3-dispatch/src/dispatch.js","webpack://muze/./packages/muze-utils/node_modules/d3-drag/src/noevent.js","webpack://muze/./packages/muze-utils/node_modules/d3-drag/src/nodrag.js","webpack://muze/./packages/muze-utils/node_modules/d3-drag/src/constant.js","webpack://muze/./packages/muze-utils/node_modules/d3-drag/src/event.js","webpack://muze/./packages/muze-utils/node_modules/d3-drag/src/drag.js","webpack://muze/./packages/muze-utils/node_modules/d3-timer/src/timer.js","webpack://muze/./packages/muze-utils/node_modules/d3-timer/src/timeout.js","webpack://muze/./packages/muze-utils/node_modules/d3-transition/src/transition/schedule.js","webpack://muze/./packages/muze-utils/node_modules/d3-transition/src/transition/tween.js","webpack://muze/./packages/muze-utils/node_modules/d3-transition/src/transition/interpolate.js","webpack://muze/./packages/muze-utils/node_modules/d3-transition/src/transition/remove.js","webpack://muze/./packages/muze-utils/node_modules/d3-transition/src/transition/selection.js","webpack://muze/./packages/muze-utils/node_modules/d3-transition/src/transition/text.js","webpack://muze/./packages/muze-utils/node_modules/d3-transition/src/transition/index.js","webpack://muze/./packages/muze-utils/node_modules/d3-transition/src/transition/select.js","webpack://muze/./packages/muze-utils/node_modules/d3-transition/src/transition/selectAll.js","webpack://muze/./packages/muze-utils/node_modules/d3-transition/src/transition/filter.js","webpack://muze/./packages/muze-utils/node_modules/d3-transition/src/transition/merge.js","webpack://muze/./packages/muze-utils/node_modules/d3-transition/src/transition/transition.js","webpack://muze/./packages/muze-utils/node_modules/d3-transition/src/transition/on.js","webpack://muze/./packages/muze-utils/node_modules/d3-transition/src/transition/attr.js","webpack://muze/./packages/muze-utils/node_modules/d3-transition/src/transition/attrTween.js","webpack://muze/./packages/muze-utils/node_modules/d3-transition/src/transition/style.js","webpack://muze/./packages/muze-utils/node_modules/d3-transition/src/transition/styleTween.js","webpack://muze/./packages/muze-utils/node_modules/d3-transition/src/transition/delay.js","webpack://muze/./packages/muze-utils/node_modules/d3-transition/src/transition/duration.js","webpack://muze/./packages/muze-utils/node_modules/d3-transition/src/transition/ease.js","webpack://muze/./packages/muze-utils/node_modules/d3-transition/src/selection/transition.js","webpack://muze/./packages/muze-utils/node_modules/d3-transition/src/selection/index.js","webpack://muze/./packages/muze-utils/node_modules/d3-transition/src/selection/interrupt.js","webpack://muze/./packages/muze-utils/node_modules/d3-transition/src/interrupt.js","webpack://muze/./packages/muze-utils/src/renderer-utils.js","webpack://muze/./packages/muze-utils/src/lifecycle-manager/event-list.js","webpack://muze/./packages/muze-utils/src/lifecycle-manager/lifecycle-manager.js","webpack://muze/./packages/muze-utils/src/lifecycle-manager/index.js","webpack://muze/./packages/muze-utils/src/lifecycle-manager/helper.js","webpack://muze/./packages/muze-utils/src/index.js","webpack://muze/./packages/muze-firebolt/src/enums/actions.js","webpack://muze/./packages/muze-firebolt/src/enums/selection.js","webpack://muze/./packages/muze-firebolt/src/selection-set/index.js","webpack://muze/./packages/muze-firebolt/src/selection-set/selection-set.js","webpack://muze/./packages/muze-firebolt/src/helper/index.js","webpack://muze/./packages/muze-firebolt/src/firebolt.js","webpack://muze/./packages/muze-firebolt/src/actions/behavioural/generic.js","webpack://muze/./packages/muze-firebolt/src/actions/behavioural/volatile.js","webpack://muze/./packages/muze-firebolt/src/enums/behaviours.js","webpack://muze/./packages/muze-firebolt/src/actions/behavioural/highlight.js","webpack://muze/./packages/muze-firebolt/src/actions/behavioural/brush.js","webpack://muze/./packages/muze-firebolt/src/actions/behavioural/filter.js","webpack://muze/./packages/muze-firebolt/src/actions/behavioural/persistent.js","webpack://muze/./packages/muze-firebolt/src/actions/behavioural/select.js","webpack://muze/./packages/muze-firebolt/src/actions/physical/helpers/drag-action-config.js","webpack://muze/./packages/muze-firebolt/src/actions/physical/helpers/drag-event.js","webpack://muze/./packages/muze-firebolt/src/actions/physical/hover.js","webpack://muze/./packages/muze-firebolt/src/enums/constants.js","webpack://muze/./packages/muze-firebolt/src/actions/physical/helpers/index.js","webpack://muze/./packages/muze-firebolt/src/actions/physical/click.js","webpack://muze/./packages/muze-firebolt/src/actions/physical/index.js","webpack://muze/./packages/muze-firebolt/src/actions/physical/drag.js","webpack://muze/./packages/muze-firebolt/src/actions/physical/longtouch.js","webpack://muze/./packages/muze-firebolt/src/actions/physical/touch-drag.js","webpack://muze/./packages/muze-firebolt/src/side-effects/generic/props.js","webpack://muze/./packages/muze-firebolt/src/side-effects/generic/index.js","webpack://muze/./packages/muze-firebolt/src/side-effects/generic/generic-sideeffect.js","webpack://muze/./packages/muze-firebolt/src/side-effects/surrogate.js","webpack://muze/./packages/muze-firebolt/src/side-effects/spawnable.js","webpack://muze/./packages/muze-firebolt/src/side-effects/selection-box/helper.js","webpack://muze/./packages/muze-firebolt/src/side-effects/selection-box/index.js","webpack://muze/./packages/muze-firebolt/src/actions/physical/selection-box-drag.js","webpack://muze/./packages/muze-tooltip/src/constants.js","webpack://muze/./packages/muze-tooltip/src/default-config.js","webpack://muze/./packages/muze-tooltip/src/helper.js","webpack://muze/./packages/muze-tooltip/src/strategy.js","webpack://muze/./packages/muze-tooltip/src/content.js","webpack://muze/./packages/muze-tooltip/src/tooltip.js","webpack://muze/./packages/muze-firebolt/src/side-effects/tooltip/strategies.js","webpack://muze/./packages/muze-firebolt/src/side-effects/tooltip/index.js","webpack://muze/./packages/muze-firebolt/src/side-effects/helper/index.js","webpack://muze/./packages/muze-firebolt/src/side-effects/crossline/index.js","webpack://muze/./packages/muze-firebolt/src/side-effects/plot-highlighter/strategy.js","webpack://muze/./packages/muze-firebolt/src/side-effects/plot-highlighter/index.js","webpack://muze/./packages/muze-firebolt/src/side-effects/filter/index.js","webpack://muze/./packages/muze-firebolt/src/side-effects/anchors/index.js","webpack://muze/./packages/muze-firebolt/src/side-effects/persistent-anchors.js","webpack://muze/./packages/muze-firebolt/src/side-effects/brush-anchors.js","webpack://muze/./packages/muze-firebolt/src/behaviour-effect-map.js","webpack://muze/./packages/visual-layer/src/enums/constants.js","webpack://muze/./packages/visual-layer/src/layers/area/default-config.js","webpack://muze/./packages/visual-layer/src/simple-layer/simple-layer.js","webpack://muze/./packages/visual-layer/src/base-layer/props.js","webpack://muze/./packages/muze-axis/src/enums/axis-orientation.js","webpack://muze/./packages/muze-axis/src/enums/scale-type.js","webpack://muze/./packages/muze-axis/src/enums/constants.js","webpack://muze/./packages/muze-axis/src/scale-creator.js","webpack://muze/./packages/muze-axis/src/cartesian-axis/default-config.js","webpack://muze/./packages/muze-axis/src/axis-renderer.js","webpack://muze/./packages/muze-axis/src/cartesian-axis/space-setter.js","webpack://muze/./packages/muze-axis/src/cartesian-axis/helper.js","webpack://muze/./packages/muze-axis/src/cartesian-axis/props.js","webpack://muze/./packages/muze-axis/src/cartesian-axis/simple-axis.js","webpack://muze/./packages/muze-axis/src/cartesian-axis/interpolators/linear.js","webpack://muze/./packages/muze-axis/src/cartesian-axis/interpolators/log.js","webpack://muze/./packages/muze-axis/src/cartesian-axis/interpolators/pow.js","webpack://muze/./packages/muze-axis/src/cartesian-axis/continous-axis.js","webpack://muze/./packages/muze-axis/src/cartesian-axis/band-axis.js","webpack://muze/./packages/muze-axis/src/cartesian-axis/time-axis.js","webpack://muze/./packages/muze-axis/src/color-axis/color-maps.js","webpack://muze/./packages/muze-axis/src/color-axis/defaults.js","webpack://muze/./packages/muze-axis/src/color-axis/props.js","webpack://muze/./packages/muze-axis/src/helper.js","webpack://muze/./packages/muze-axis/src/color-axis/color-strategy.js","webpack://muze/./packages/muze-axis/src/color-axis/color-axis.js","webpack://muze/./packages/muze-axis/src/size-axis/defaults.js","webpack://muze/./packages/muze-axis/src/size-axis/size-strategy.js","webpack://muze/./packages/muze-axis/src/size-axis/props.js","webpack://muze/./packages/muze-axis/src/size-axis/size-axis.js","webpack://muze/./packages/muze-axis/src/shape-axis/defaults.js","webpack://muze/./packages/muze-axis/src/shape-axis/props.js","webpack://muze/./packages/muze-axis/src/shape-axis/shape-axis.js","webpack://muze/./packages/muze-axis/src/shape-axis/helper.js","webpack://muze/./packages/muze-axis/src/data-type-scale-map.js","webpack://muze/./packages/transform/src/group-transform/index.js","webpack://muze/./packages/transform/src/identity-transform/index.js","webpack://muze/./packages/transform/src/transform-factory/index.js","webpack://muze/./packages/transform/src/enums/transform-type.js","webpack://muze/./packages/transform/src/stack-transform/index.js","webpack://muze/./packages/visual-layer/src/helpers/index.js","webpack://muze/./packages/visual-layer/src/base-layer/listener-map.js","webpack://muze/./packages/visual-layer/src/enums/props.js","webpack://muze/./packages/visual-layer/src/base-layer/default-options.js","webpack://muze/./packages/visual-layer/src/base-layer/base-layer.js","webpack://muze/./packages/visual-layer/src/layers/line/renderer.js","webpack://muze/./packages/visual-layer/src/layers/line/default-config.js","webpack://muze/./packages/visual-layer/src/layers/line/line.js","webpack://muze/./packages/visual-layer/src/layers/area/renderer.js","webpack://muze/./packages/visual-layer/src/layers/area/area.js","webpack://muze/./packages/visual-layer/src/layers/arc/default-config.js","webpack://muze/./packages/visual-layer/src/layers/arc/arc.js","webpack://muze/./packages/visual-layer/src/layers/arc/arc-helper.js","webpack://muze/./packages/visual-layer/src/layers/text/renderer.js","webpack://muze/./packages/visual-layer/src/layers/text/default-config.js","webpack://muze/./packages/visual-layer/src/layers/text/text.js","webpack://muze/./packages/visual-layer/src/layers/point/renderer.js","webpack://muze/./packages/visual-layer/src/layers/point/default-config.js","webpack://muze/./packages/visual-layer/src/layers/point/point.js","webpack://muze/./packages/visual-layer/src/layers/bar/renderer.js","webpack://muze/./packages/visual-layer/src/layers/bar/default-config.js","webpack://muze/./packages/visual-layer/src/layers/bar/bar-helper.js","webpack://muze/./packages/visual-layer/src/layers/bar/bar.js","webpack://muze/./packages/visual-layer/src/layers/tick/default-config.js","webpack://muze/./packages/visual-layer/src/layers/tick/renderer.js","webpack://muze/./packages/visual-layer/src/layers/tick/tick.js","webpack://muze/./packages/visual-layer/src/enums/layer-types.js","webpack://muze/./packages/visual-layer/src/layer-factory/layer-factory.js","webpack://muze/./packages/visual-layer/src/layer-factory/index.js","webpack://muze/./packages/visual-layer/src/defaults.js","webpack://muze/./packages/visual-group/src/enums/constants.js","webpack://muze/./packages/visual-group/src/visual-group/local-options.js","webpack://muze/./packages/visual-group/src/simple-group/simple-group.js","webpack://muze/./packages/visual-group/src/variable/variable.js","webpack://muze/./packages/visual-group/src/variable/composed-vars.js","webpack://muze/./packages/visual-group/src/variable/simple-var.js","webpack://muze/./packages/visual-group/src/encoder/field-sanitizer.js","webpack://muze/./packages/visual-group/src/encoder/visual-encoder.js","webpack://muze/./packages/visual-group/src/enums/scale-maps.js","webpack://muze/./packages/visual-group/src/data-type-scale-map.js","webpack://muze/./packages/visual-group/src/encoder/encoder-helper.js","webpack://muze/./packages/visual-group/src/encoder/cartesian-encoder.js","webpack://muze/./packages/visual-group/src/encoder/polar-encoder.js","webpack://muze/./packages/visual-group/src/encoder/retinal-encoder.js","webpack://muze/./packages/visual-group/src/group-helper/group-utils.js","webpack://muze/./packages/visual-unit/src/firebolt/action-behaviour-map.js","webpack://muze/./packages/visual-unit/src/helper/index.js","webpack://muze/./packages/visual-unit/src/enums/constants.js","webpack://muze/./packages/visual-unit/src/helper/grid-lines.js","webpack://muze/./packages/visual-unit/src/default-config.js","webpack://muze/./packages/visual-unit/src/local-options.js","webpack://muze/./packages/visual-unit/src/enums/reactive-props.js","webpack://muze/./packages/visual-unit/src/listener-map.js","webpack://muze/./packages/visual-unit/src/props.js","webpack://muze/./packages/visual-unit/src/firebolt/helper.js","webpack://muze/./packages/visual-unit/src/firebolt/payload-generator.js","webpack://muze/./packages/visual-unit/src/firebolt/data-propagator.js","webpack://muze/./packages/visual-unit/src/firebolt/index.js","webpack://muze/./packages/visual-unit/src/visual-unit.js","webpack://muze/./packages/visual-group/src/group-helper/matrix-model.js","webpack://muze/./packages/visual-group/src/group-helper/cell-creator.js","webpack://muze/./packages/visual-group/src/group-helper/resolver-props.js","webpack://muze/./packages/visual-group/src/group-helper/matrix-resolver.js","webpack://muze/./packages/visual-group/src/visual-group/value-matrix.js","webpack://muze/./packages/visual-group/src/visual-group/helper.js","webpack://muze/./packages/visual-group/src/visual-group/change-listener.js","webpack://muze/./packages/visual-group/src/visual-group/props.js","webpack://muze/./packages/visual-group/src/visual-group/visual-group.js","webpack://muze/./packages/muze-legend/src/firebolt/behavioural/select.js","webpack://muze/./packages/muze-legend/src/firebolt/action-behaviour-map.js","webpack://muze/./packages/muze-legend/src/firebolt/behaviour-effect-map.js","webpack://muze/./packages/muze-legend/src/enums/behaviours.js","webpack://muze/./packages/muze-legend/src/enums/side-effects.js","webpack://muze/./packages/muze-legend/src/enums/constants.js","webpack://muze/./packages/muze-legend/src/firebolt/helper.js","webpack://muze/./packages/muze-legend/src/firebolt/legend-firebolt.js","webpack://muze/./packages/muze-legend/src/firebolt/physical/drag.js","webpack://muze/./packages/muze-legend/src/firebolt/physical/hover.js","webpack://muze/./packages/muze-legend/src/firebolt/physical/click.js","webpack://muze/./packages/muze-legend/src/firebolt/physical/index.js","webpack://muze/./packages/muze-legend/src/enums/actions.js","webpack://muze/./packages/muze-legend/src/firebolt/physical/selection-box-drag.js","webpack://muze/./packages/muze-legend/src/firebolt/side-effects/selection-box/index.js","webpack://muze/./packages/muze-legend/src/firebolt/side-effects/legend-highlighter/strategies.js","webpack://muze/./packages/muze-legend/src/firebolt/side-effects/legend-highlighter/index.js","webpack://muze/./packages/muze-legend/src/legend/props.js","webpack://muze/./packages/muze-legend/src/legend/defaults.js","webpack://muze/./packages/muze-legend/src/legend/legend-helper.js","webpack://muze/./packages/muze-legend/src/legend/simple-legend.js","webpack://muze/./packages/muze-legend/src/legend/position-config.js","webpack://muze/./packages/muze-legend/src/legend/renderer.js","webpack://muze/./packages/muze-legend/src/legend/discrete-legend.js","webpack://muze/./packages/muze-legend/src/legend/gradient-helper.js","webpack://muze/./packages/muze-legend/src/legend/gradient-legend.js","webpack://muze/./packages/muze-legend/src/legend/step-legend.js","webpack://muze/./packages/muze/src/constants.js","webpack://muze/./packages/muze/src/operators.js","webpack://muze/./packages/muze/src/action-model.js","webpack://muze/./packages/muze/src/canvas/defaults.js","webpack://muze/./packages/muze/src/canvas/local-options.js","webpack://muze/./packages/layout/src/tree-layout/layout-component/layoutComponent.js","webpack://muze/./packages/layout/src/tree-layout/layout-component/dummy-component.js","webpack://muze/./packages/muze/src/defaults.js","webpack://muze/./packages/layout/src/tree-layout/constants/defaults.js","webpack://muze/./packages/layout/src/tree-layout/layout-definition/definition-manager/definitionModel.js","webpack://muze/./packages/layout/src/tree-layout/layout-definition/helper/index.js","webpack://muze/./packages/layout/src/tree-layout/layout-definition/tree/index.js","webpack://muze/./packages/layout/src/tree-layout/layout-definition/layout-model/index.js","webpack://muze/./packages/layout/src/tree-layout/utils/index.js","webpack://muze/./packages/layout/src/tree-layout/data-adapters/data-point.js","webpack://muze/./packages/layout/src/tree-layout/data-adapters/data-parser.js","webpack://muze/./packages/layout/src/tree-layout/data-adapters/helper.js","webpack://muze/./packages/layout/src/tree-layout/data-adapters/html-data.js","webpack://muze/./packages/layout/src/tree-layout/renderers/renderer.js","webpack://muze/./packages/layout/src/tree-layout/renderers/html-renderer.js","webpack://muze/./packages/layout/src/tree-layout/drawing-manager/helper.js","webpack://muze/./packages/layout/src/tree-layout/drawing-manager/index.js","webpack://muze/./packages/layout/src/tree-layout/layout-definition/definition-manager/index.js","webpack://muze/./packages/layout/src/tree-layout/layout-manager/layout-def.js","webpack://muze/./packages/layout/src/tree-layout/layout-manager/helper.js","webpack://muze/./packages/layout/src/tree-layout/layout-manager/index.js","webpack://muze/./packages/muze/src/canvas/helper.js","webpack://muze/./packages/muze/src/options.js","webpack://muze/./packages/layout/src/enums/constants.js","webpack://muze/./packages/layout/src/generic-layout/index.js","webpack://muze/./packages/layout/src/grid-layout/defaults.js","webpack://muze/./packages/layout/src/utils/index.js","webpack://muze/./packages/layout/src/visual-matrix/props.js","webpack://muze/./packages/layout/src/visual-matrix/default-config.js","webpack://muze/./packages/layout/src/visual-matrix/visual-matrix.js","webpack://muze/./packages/layout/src/visual-matrix/row-matrix.js","webpack://muze/./packages/layout/src/visual-matrix/column-matrix.js","webpack://muze/./packages/layout/src/grid-layout/computations.js","webpack://muze/./packages/layout/src/grid-layout/view-info-getter.js","webpack://muze/./packages/layout/src/grid-layout/layout.js","webpack://muze/./packages/layout/src/grid-layout/layout-helper.js","webpack://muze/./packages/layout/src/grid-layout/border-helper.js","webpack://muze/./packages/layout/src/grid-layout/span-maker.js","webpack://muze/./packages/muze/src/transaction-support.js","webpack://muze/./packages/muze/src/canvas/component-resolver.js","webpack://muze/./packages/visual-cell/src/enums/constants.js","webpack://muze/./packages/visual-cell/src/enums/cell-type.js","webpack://muze/./packages/visual-cell/src/simple-cell.js","webpack://muze/./packages/visual-cell/src/enums/defaults.js","webpack://muze/./packages/visual-cell/src/props.js","webpack://muze/./packages/visual-cell/src/axis-cell.js","webpack://muze/./packages/visual-cell/src/blank-cell.js","webpack://muze/./packages/visual-cell/src/text-cell.js","webpack://muze/./packages/visual-cell/src/geom-cell.js","webpack://muze/./packages/visual-cell/src/defaults.js","webpack://muze/./packages/visual-cell/src/constants.js","webpack://muze/./packages/visual-cell/src/cell-registry.js","webpack://muze/./packages/muze/src/canvas/title-maker.js","webpack://muze/./packages/muze/src/canvas/legend-maker.js","webpack://muze/./packages/muze/src/canvas/components/muze-chart-component.js","webpack://muze/./packages/muze/src/canvas/components/headerComponent.js","webpack://muze/./packages/muze/src/canvas/components/legendComponent.js","webpack://muze/./packages/muze/src/canvas/components/scroll-bar-maker/helper.js","webpack://muze/./packages/muze/src/canvas/components/scroll-bar-maker/props.js","webpack://muze/./packages/muze/src/canvas/components/scroll-bar-maker/scroll-maker.js","webpack://muze/./packages/muze/src/canvas/components/scroll-component.js","webpack://muze/./packages/muze/src/canvas/components/scroll-bar-maker/horizontal-scroll-maker.js","webpack://muze/./packages/muze/src/canvas/components/scroll-bar-maker/vertical-scroll-maker.js","webpack://muze/./packages/muze/src/canvas/components/matrix-component.js","webpack://muze/./packages/muze/src/canvas/components/grid-component.js","webpack://muze/./packages/muze/src/canvas/component-wrapper-maker.js","webpack://muze/./packages/muze/src/canvas/scroll-manager.js","webpack://muze/./packages/muze/src/canvas/layout-maker.js","webpack://muze/./packages/muze/src/canvas/firebolt/group-firebolt.js","webpack://muze/./packages/muze/src/canvas/firebolt/index.js","webpack://muze/./packages/muze/src/canvas/app-state.js","webpack://muze/./packages/muze/src/canvas/canvas.js","webpack://muze/./packages/muze/src/default-registry.js","webpack://muze/./packages/visual-layer/src/layer-registry.js","webpack://muze/./packages/muze/src/muze.js"],"names":["webpackUniversalModuleDefinition","root","factory","exports","module","define","amd","window","installedModules","__webpack_require__","moduleId","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","getDefault","getModuleExports","object","property","prototype","hasOwnProperty","p","s","_typeof2","__WEBPACK_AMD_DEFINE_ARRAY__","undefined","__WEBPACK_AMD_DEFINE_RESULT__","__WEBPACK_AMD_DEFINE_FACTORY__","apply","__webpack_exports__","csvParse","csvParseRows","csvFormat","csvFormatRows","_dsv__WEBPACK_IMPORTED_MODULE_0__","csv","parse","parseRows","format","formatRows","EOL","EOF","QUOTE","NEWLINE","RETURN","objectConverter","columns","Function","map","JSON","join","delimiter","reFormat","RegExp","DELIMITER","text","f","rows","N","length","I","eof","eol","token","j","row","formatRow","formatValue","convert","customConverter","inferColumns","columnSet","column","concat","_csv__WEBPACK_IMPORTED_MODULE_1__","_tsv__WEBPACK_IMPORTED_MODULE_2__","tsvParse","tsvParseRows","tsvFormat","tsvFormatRows","tsv","PROPAGATION","ROW_ID","DM_DERIVATIVES","JOINS","LOGICAL_OPERATORS","_enums__WEBPACK_IMPORTED_MODULE_0__","SELECT","PROJECT","GROUPBY","COMPOSE","CAL_VAR","BIN","CROSS","LEFTOUTER","RIGHTOUTER","NATURAL","FULLOUTER","AND","OR","_flat_json__WEBPACK_IMPORTED_MODULE_0__","_dsv_arr__WEBPACK_IMPORTED_MODULE_1__","_dsv_str__WEBPACK_IMPORTED_MODULE_2__","_utils__WEBPACK_IMPORTED_MODULE_3__","Auto","data","options","converters","FlatJSON","DSVStr","DSVArr","dataFormat","Error","arr","firstRowHeader","header","push","_utils__WEBPACK_IMPORTED_MODULE_0__","field","d3_dsv__WEBPACK_IMPORTED_MODULE_0__","str","fieldSeparator","dsv","insertionIndex","item","fields","_dsv_arr__WEBPACK_IMPORTED_MODULE_0__","_dsv_str__WEBPACK_IMPORTED_MODULE_1__","_flat_json__WEBPACK_IMPORTED_MODULE_2__","_auto_resolver__WEBPACK_IMPORTED_MODULE_3__","DataModel","_ref","_classCallCheck","this","_len","arguments","args","Array","_key","_this","_possibleConstructorReturn","__proto__","getPrototypeOf","_onPropagation","_sortingDetails","_relation__WEBPACK_IMPORTED_MODULE_5__","order","formatter","withUid","getAllFields","sort","getPartialFieldspace","dataGenerated","_operator__WEBPACK_IMPORTED_MODULE_3__","_rowDiffset","_colIdentifier","columnWise","addUid","schema","uids","fieldNames","e","fmtFieldIdx","reduce","acc","next","idx","elem","fIdx","fmtFn","datum","datumIdx","fieldsArr","reducers","config","saveChild","groupByString","params","newDataModel","persistDerivation","_constants__WEBPACK_IMPORTED_MODULE_2__","defaultReducer","_utils_reducer_store__WEBPACK_IMPORTED_MODULE_6__","_children","sortingDetails","rawData","getData","dataInCSVArr","sortedDm","constructor","type","getFieldspace","colData","formattedData","rowsCount","serializedData","rowIdx","colIdx","FLAT_JSON","DSV_STR","DSV_ARR","fieldName","partialFieldspace","_partialFieldspace","fieldIndex","findIndex","fieldinst","__calculateFieldspace","calculateFieldsConfig","dependency","_this2","_helper__WEBPACK_IMPORTED_MODULE_1__","replaceVar","fieldsConfig","getFieldsConfig","depVars","retrieveFn","depFieldIndices","fieldSpec","index","clone","fs","suppliedFields","cachedStore","cloneProvider","detachedRoot","computedValues","rowDiffsetIterator","fieldsData","_createFields","_field_creator__WEBPACK_IMPORTED_MODULE_7__","_slicedToArray","identifiers","addToNameSpace","propConfig","isMutableAction","propagationSourceId","sourceId","payload","rootModel","propagationNameSpace","_propagationNameSpace","rootModels","groupByModel","model","propagateToAllDataModels","assign","propagateImmutableActions","eventName","callback","propModel","_this3","propListeners","fn","measureFieldName","binFieldName","measureField","fieldsObj","_createBinnedFieldDat","_operator_bucket_creator__WEBPACK_IMPORTED_MODULE_4__","binnedData","bins","binField","DIMENSION","subtype","BINNED","serialize","getSchema","_invalid_aware_types__WEBPACK_IMPORTED_MODULE_8__","invalidAwareVals","AUTO","CATEGORICAL","TEMPORAL","GEO","MEASURE","NORMAL","INVERSE","ALL","_data_format__WEBPACK_IMPORTED_MODULE_0__","_dimension_subtype__WEBPACK_IMPORTED_MODULE_1__","_measure_subtype__WEBPACK_IMPORTED_MODULE_2__","_field_type__WEBPACK_IMPORTED_MODULE_3__","_filtering_mode__WEBPACK_IMPORTED_MODULE_4__","CONTINUOUS","_datamodel__WEBPACK_IMPORTED_MODULE_0__","_operator__WEBPACK_IMPORTED_MODULE_1__","_stats__WEBPACK_IMPORTED_MODULE_2__","_enums__WEBPACK_IMPORTED_MODULE_3__","_utils__WEBPACK_IMPORTED_MODULE_4__","_constants__WEBPACK_IMPORTED_MODULE_5__","_invalid_aware_types__WEBPACK_IMPORTED_MODULE_6__","_package_json__WEBPACK_IMPORTED_MODULE_7__","Operators","compose","bin","select","project","groupBy","calculateVariable","crossProduct","difference","naturalJoin","leftOuterJoin","rightOuterJoin","fullOuterJoin","union","Stats","DateTimeFormatter","DataFormat","FilteringMode","InvalidAwareTypes","version","createUnitFieldFromPartial","createFields","_fields__WEBPACK_IMPORTED_MODULE_1__","partialField","rowDiffset","dataColumn","headers","headersObj","createUnitField","_utils__WEBPACK_IMPORTED_MODULE_1__","fieldStore","createNamespace","fieldArr","dataId","_cachedFieldsObj","forEach","getMeasure","measureFields","_cachedMeasure","getDimension","dimensionFields","_cachedDimension","Binned","_dimension__WEBPACK_IMPORTED_MODULE_0__","binsArr","Categorical","_dimension__WEBPACK_IMPORTED_MODULE_2__","_enums__WEBPACK_IMPORTED_MODULE_1__","hash","Set","domain","Continuous","_measure__WEBPACK_IMPORTED_MODULE_2__","min","Number","POSITIVE_INFINITY","max","NEGATIVE_INFINITY","_invalid_aware_types__WEBPACK_IMPORTED_MODULE_3__","Dimension","_field__WEBPACK_IMPORTED_MODULE_0__","_cachedDomain","calculateDataDomain","Field","description","displayName","_dimension__WEBPACK_IMPORTED_MODULE_1__","_categorical__WEBPACK_IMPORTED_MODULE_2__","_temporal__WEBPACK_IMPORTED_MODULE_3__","_binned__WEBPACK_IMPORTED_MODULE_4__","_measure__WEBPACK_IMPORTED_MODULE_5__","_continuous__WEBPACK_IMPORTED_MODULE_6__","_parsers_field_parser__WEBPACK_IMPORTED_MODULE_7__","_parsers_categorical_parser__WEBPACK_IMPORTED_MODULE_8__","_parsers_temporal_parser__WEBPACK_IMPORTED_MODULE_9__","_parsers_binned_parser__WEBPACK_IMPORTED_MODULE_10__","_parsers_continuous_parser__WEBPACK_IMPORTED_MODULE_11__","_partial_field__WEBPACK_IMPORTED_MODULE_12__","Measure","_field__WEBPACK_IMPORTED_MODULE_2__","unit","defAggFn","_operator_group_by_function__WEBPACK_IMPORTED_MODULE_1__","numberFormat","BinnedParser","_field_parser__WEBPACK_IMPORTED_MODULE_0__","val","String","result","_invalid_aware_types__WEBPACK_IMPORTED_MODULE_1__","isInvalid","getInvalidType","matched","CategoricalParser","ContinuousParser","parsedVal","parseFloat","FieldParser","TemporalParser","_dtf","_field_parser__WEBPACK_IMPORTED_MODULE_1__","_invalid_aware_types__WEBPACK_IMPORTED_MODULE_2__","nativeDate","getNativeDate","PartialField","parser","_sanitize","Temporal","_cachedMinDiff","sortedData","filter","a","b","arrLn","minDiff","prevDatum","nextDatum","processedCount","Math","_utils__WEBPACK_IMPORTED_MODULE_2__","formatAs","prepareJoinData","resp","_value__WEBPACK_IMPORTED_MODULE_2__","updateFields","fieldStoreName","_ref2","colIdentifier","collID","partialFieldMap","newFields","coll","_field_creator__WEBPACK_IMPORTED_MODULE_5__","_field_store__WEBPACK_IMPORTED_MODULE_1__","operation","_model$_derivation","criteriaFn","derivative","_constants__WEBPACK_IMPORTED_MODULE_4__","op","meta","criteria","_derivation","_toConsumableArray","selectHelper","selectFn","sourceDm","newRowDiffSet","lastInsertedValue","li","selectorHelperFn","prepareSelectionData","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_step","_iterator","iterator","done","err","return","checker","filterPropagationModel","propModels","filterByMeasure","fns","dataModel","dataObj","fieldsSpace","values","v","some","every","propField","valueOf","filteredModel","cloneWithSelect","selectConfig","cloneConfig","cloned","cloneWithProject","projField","allFields","projectionSet","actualProjField","sanitizeUnitSchema","unitSchema","_utils__WEBPACK_IMPORTED_MODULE_8__","sanitizeSchema","updateData","relation","_default_config__WEBPACK_IMPORTED_MODULE_6__","converterFn","_converter__WEBPACK_IMPORTED_MODULE_7__","_converterFn","_converterFn2","nameSpace","_","fieldInSchema","getOperationArguments","child","derivation","applyExistingOperationOnModel","_propModel$","_propModel$2","_getOperationArgument","selectionModel","rejectionModel","propagateIdentifiers","propModelInf","nonTraversingModel","excludeModels","propagate","children","_applyExistingOperati","_applyExistingOperati2","getRootGroupByModel","find","_parent","getRootDataModel","getPathToRootModel","path","propagationInf","propagateToSource","propagateInterpolatedValues","criterias","_ref3","actionCriterias","mutableActions","filteredCriteria","filterFn","entry","action","sourceActionCriterias","actionInf","actionConf","models","sourceIdentifiers","rootGroupByModel","inf","propagationModel","getFilteredModel","len","reverse","immutableActions","filterImmutableAction","criteriaModel","addToPropNamespace","sourceNamespace","_value","_invalidAwareValsMap","invalid","NA","nil","NIL","null","NULL","generateBuckets","binSize","start","end","buckets","findBucketRange","bucketRanges","leftIdx","rightIdx","midIdx","range","createBinnedFieldData","binsCount","_measureField$domain","_measureField$domain2","dMin","dMax","dm","_len2","_key2","_len3","_key3","_len4","_key4","_len5","operations","_key5","currentDM","frstChild","derivations","_get_common_schema__WEBPACK_IMPORTED_MODULE_2__","_row_diffset_iterator__WEBPACK_IMPORTED_MODULE_3__","_helper__WEBPACK_IMPORTED_MODULE_5__","defaultFilterFn","dm1","dm2","replaceCommonSchema","jointype","applicableFilterFn","dm1FieldStore","dm2FieldStore","dm1FieldStoreName","dm2FieldStoreName","commonSchemaList","tmpSchema","rowAdded","rowPosition","ii","tuple","userArg","dm1Fields","dm2Fields","cloneProvider1","cloneProvider2","tupleObj","cellVal","iii","getSortFn","dataType","sortType","retFunc","a1","b1","groupData","hashMap","Map","groupedData","fieldVal","createSortingFnArg","groupedDatum","targetFields","targetFieldDetails","arg","label","dataBuilder","retObj","reqSorting","tmpDataArr","colIArr","colName","insertInd","sortData","sortMeta","fDetails","_helper__WEBPACK_IMPORTED_MODULE_3__","mergeSort","sortingFn","tmpData","_row_diffset_iterator__WEBPACK_IMPORTED_MODULE_2__","_utils_helper__WEBPACK_IMPORTED_MODULE_3__","hashTable","schemaNameArr","dm1FieldStoreFieldObj","dm2FieldStoreFieldObj","prepareDataHelper","addData","hashData","schemaName","getCommonSchema","fs1","fs2","retArr","fs1Arr","getFilteredValues","sum","filteredNumber","curr","avg","totalSum","fnList","filteredValues","first","last","count","std","variance","mean","num","pow","defaultReducerName","getFieldArr","dimensions","getReducerObj","measures","defReducer","_utils_reducer_store__WEBPACK_IMPORTED_MODULE_3__","measureName","reducerFn","resolve","_group_by_function__WEBPACK_IMPORTED_MODULE_4__","existingDataModel","sFieldArr","reducerObj","fieldStoreObj","dbName","dimensionArr","measureArr","_ref4","_enums__WEBPACK_IMPORTED_MODULE_5__","rowCount","_export__WEBPACK_IMPORTED_MODULE_2__","_bucket_creator__WEBPACK_IMPORTED_MODULE_0__","_compose__WEBPACK_IMPORTED_MODULE_1__","_pure_operators__WEBPACK_IMPORTED_MODULE_2__","_cross_product__WEBPACK_IMPORTED_MODULE_3__","_data_builder__WEBPACK_IMPORTED_MODULE_4__","_difference__WEBPACK_IMPORTED_MODULE_5__","_get_common_schema__WEBPACK_IMPORTED_MODULE_6__","_group_by_function__WEBPACK_IMPORTED_MODULE_7__","_group_by__WEBPACK_IMPORTED_MODULE_8__","_merge_sort__WEBPACK_IMPORTED_MODULE_9__","_natural_join_filter_function__WEBPACK_IMPORTED_MODULE_10__","_natural_join__WEBPACK_IMPORTED_MODULE_11__","_outer_join__WEBPACK_IMPORTED_MODULE_12__","_row_diffset_iterator__WEBPACK_IMPORTED_MODULE_13__","_union__WEBPACK_IMPORTED_MODULE_14__","defSortFn","sortFn","lo","hi","mid","merge","mainArr","auxArr","naturalJoinFilter","_get_common_schema__WEBPACK_IMPORTED_MODULE_0__","commonSchemaArr","retainTuple","_cross_product__WEBPACK_IMPORTED_MODULE_0__","_natural_join_filter_function__WEBPACK_IMPORTED_MODULE_1__","dataModel1","dataModel2","_constants__WEBPACK_IMPORTED_MODULE_1__","_union__WEBPACK_IMPORTED_MODULE_2__","rowDiffArr","diffStr","diffStsArr","_export__WEBPACK_IMPORTED_MODULE_0__","Relation","source","_dataFormat","_fieldStoreName","_fieldspace","_helper__WEBPACK_IMPORTED_MODULE_2__","joinWith","unionWith","differenceWith","defConfig","oDm","retDataModel","jsonData","rowObj","fieldConfig","normalizedProjField","from","trim","_fieldConfig","fieldDef","def","removeChild","sibling","splice","parent","criteriaQueue","sd","_operator_group_by_function__WEBPACK_IMPORTED_MODULE_0__","store","convertToNativeDate","date","Date","pad","dtParams","YEAR","MONTH","DAY","HOUR","MINUTE","SECOND","MILLISECOND","defVal","isFinite","parseInt","nVal","toLowerCase","daysDef","short","long","monthsDef","H","extract","defaultNumberParser","toString","hours","getHours","P","M","getMinutes","S","getSeconds","K","getMilliseconds","day","getDay","A","getDate","month","getMonth","B","y","presentDate","presentYear","getFullYear","year","Y","definitions","getTokenDefinitions","HOUR_12","AMPM_UPPERCASE","AMPM_LOWERCASE","SHORT_DAY","LONG_DAY","DAY_OF_MONTH","DAY_OF_MONTH_CONSTANT_WIDTH","SHORT_MONTH","LONG_MONTH","MONTH_OF_YEAR","SHORT_YEAR","LONG_YEAR","defaultResolver","targetParam","hourFormat24","hourFormat12","ampmLower","ampmUpper","amOrpm","isPM","tokenPrefix","TOKEN_PREFIX","tokenLiterals","occurrence","forwardChar","nDate","formattedStr","formattedVal","dateTimeStamp","tokenResolver","extractTokenValue","dtParamSeq","DATETIME_PARAM_SEQUENCE","noBreak","dtParamArr","resolverKey","resolverParams","resolverFn","param","resolvedVal","checkIfOnlyYear","tokenObj","lastOccurrenceIndex","occObj","occIndex","targetText","regexFormat","tokenArr","obj","occurrenceLength","extractValues","match","OBJECTSTRING","objectToStrFn","objectToStr","arrayToStr","checkCyclicRef","parentArr","bIndex","extend2","obj1","obj2","skipUndef","_typeof","tgtArr","srcArr","srcVal","tgtVal","cRef","isArray","isObject","isString","isCallable","uniqueValues","getUniqueId","getTime","isArrEqual","arr1","arr2","formatNumber","detectDataFormat","_date_time_formatter__WEBPACK_IMPORTED_MODULE_0__","_column_major__WEBPACK_IMPORTED_MODULE_1__","_domain_generator__WEBPACK_IMPORTED_MODULE_2__","_extend2__WEBPACK_IMPORTED_MODULE_3__","_helper__WEBPACK_IMPORTED_MODULE_4__","ReducerStore","set","_operator__WEBPACK_IMPORTED_MODULE_0__","reducer","__unregister","has","delete","reducerStore","getStore","Value","configurable","writable","default","makeEntry","sCon","_set","keys","set1","set2","filteredKeys","s1","s2","ForeignSet","isSimpleObject","win","reqAnimFrame","requestAnimationFrame","webkitRequestAnimationFrame","mozRequestAnimationFrame","oRequestAnimationFrame","msRequestAnimationFrame","setTimeout","getTimeBasedId","__lastTime","__id","flat","res","scheduler","onFinishCallback","queue","animationFrame","listeners","tempQ","slice","unique","fetch","node","namedNode","qualifiedName","seed","fetchAggregator","dependencies","getUpstreamNodes","list","rec","qname","placedIndex","preArr","postArr","outgoingEdges","resolver","accumulate","nodeDetails","identity","CustomResolver","utils_classCallCheck","dep","_dep","graph_node_classCallCheck","edges","_seed","requireResolve","retriever","history","electricEdges","_edges","retrieveDetails","edge","head","hist","TypeError","electric_node_classCallCheck","nextFrame","currentFrame","lstnrs","nodes","nFn","qualifiedNodeMap","graph_node","_wholeSet","_propagate","propagationOverride","currentFrameListeners","nextFrameListeners","_schedule","flushTarget","flush","mount","resolveReqList","objn","perv","addDependencies","_node","getDependencies","getResolvedList","prop","props","fnSpec","eNode","electric_node","addEdges","addElectricNode","changedSet","upstreamNodes","upstreamNode","append","__execUniqueElectricEdges","cfLstnrs","nfLstnrs","toArray","repeatHead","resetPropagationOverride","qnames","_this4","update","resolved","resolveDependencyOrder","resolveMap","neighbour","isRoot","model_classCallCheck","_graph","graph","_lockFlag","_reqQ","mountPoint","_addPropInModel","calculationConfig","customResolver","varName","fetchFn","_customResolver","createNodesFrom","instantCall","_graph$stopPropagatio","propsArr","unsub","createElectricNodeOf","stopPropagation","setPropagationOverride","resetNodeValue","_graph$stopPropagatio2","setProp","getNodeValue","getNodeFromQualifiedName","Model","webpackPolyfill","deprecate","paths","_interopRequireDefault","_lib2","require","_containerManager2","slLib","init","doc","document","round","htmlSplCharSpace"," ","documentSupport","getDocumentSupport","SVG_BBOX_CORRECTION","isWebKit","SmartLabelManager","id","container","useEllipses","wrapper","prevInstance","isBrowserLess","dispose","maxCacheLimit","maxDefaultCacheLimit","getElementById","createContainer","innerHTML","testStrAvg","isHeadLess","isIE","offsetHeight","offsetWidth","parentContainerStyle","style","parentContainer","_containerManager","_showNoEllipses","_init","setStyle","textToLines","smartlabel","lines","split","_calCharDimWithCache","calculateDifference","size","csArr","tw","twi","cachedStyle","asymmetricDifference","maxAdvancedCacheLimit","_container","cache","_advancedCache","advancedCacheKey","_advancedCacheKey","cacheName","fontSize","fontFamily","fontWeight","fontStyle","cacheInitName","repeat","shift","width","height","_getWidthFn","contObj","_containerObj","svgText","bbox","textContent","getBBox","_styleNotSet","setLineHeight","sCont","_context","context","_cache","charCache","_lineHeight","lineHeight","useEllipsesOnOverflow","getSmartText","maxWidth","maxHeight","noWrap","trimStr","tempArr","tmpText","maxWidthWithEll","toolText","oriWidth","oriHeight","newCharIndex","nearestChar","tempChar","getWidth","initialLeft","initialTop","getOriSizeImproveObj","spanArr","x","minWidth","chr","elemRightMostPoint","elemLowestPoint","lastBR","removeFromIndex","removeFromIndexForEllipses","hasHTMLTag","maxStrWidth","lastDash","lastSpace","lastIndexBroken","strWidth","strHeight","oriTextArr","ellipsesStr","ellipsesWidth","dotWidth","characterArr","dashIndex","spaceIndex","lastLineBreak","fastTrim","ws","replace","test","charAt","smartLabel","oriTextWidth","oriTextHeight","oriText","isTruncated","xmlTagRegEx","ltgtRegex","getOriSize","substr","getNearestBreakIndex","detailObj","tooltext","lastIndexOf","spanAdditionRegx","spanAdditionReplacer","classNameWithTag","classNameWithTagBR","childRetriverFn","childRetriverString","noClassTesting","classNameReg","className","spaceIdx","dashIdx","offsetLeft","offsetTop","parentNode","insertBefore","createElement","classNameBrReg","spanRemovalRegx","error","detailedCalculationFlag","textArr","letter","lSize","cumulativeSize","indiSizeStore","lib","userAgent","navigator","ceil","floor","clsNameSpace","containerClass","brReplaceRegex","position","top","whiteSpace","padding","overflow","supportedStyle","font","font-family","font-weight","font-size","line-height","font-style","getElementsByClassName","opera","hasSVG","Boolean","SVGAngle","implementation","hasFeature","containerParent","body","appendChild","setAttribute","getElementsByTagName","sl","charLen","increment","avgWidth","styleObj","fSize","Muze","ContainerManager","maxContainers","svg","containers","rootNode","createElementNS","setAttributeNS","svgRoot","diff","containerObj","keyStr","prev","removeContainer","addContainer","avgCharWidth","display","cObj","ascending","NaN","bisector","compare","ascendingComparator","left","right","ascendingBisect","bisectRight","number","array","src_range","stop","step","e10","sqrt","e5","e2","src_ticks","ticks","tickIncrement","power","log","LN10","tickStep","step0","abs","step1","quantile","valueof","i0","value0","each","remove","clear","entries","empty","src_nest","sortValues","rollup","nest","sortKeys","depth","createResult","setResult","keyValue","valuesByKey","createObject","setObject","createMap","setMap","sortKey","k","proto","add","implicit","ordinal","unknown","scale","copy","band","bandwidth","ordinalRange","paddingInner","paddingOuter","align","rescale","sequence","rangeRound","invertExtent","r0","r1","hiIndex","getClosestIndexOf","invert","side","highVal","d1","low","high","extend","definition","Color","reI","reN","reP","reHex3","reHex6","reRgbInteger","reRgbPercent","reRgbaInteger","reRgbaPercent","reHslPercent","reHslaPercent","named","aliceblue","antiquewhite","aqua","aquamarine","azure","beige","bisque","black","blanchedalmond","blue","blueviolet","brown","burlywood","cadetblue","chartreuse","chocolate","coral","cornflowerblue","cornsilk","crimson","cyan","darkblue","darkcyan","darkgoldenrod","darkgray","darkgreen","darkgrey","darkkhaki","darkmagenta","darkolivegreen","darkorange","darkorchid","darkred","darksalmon","darkseagreen","darkslateblue","darkslategray","darkslategrey","darkturquoise","darkviolet","deeppink","deepskyblue","dimgray","dimgrey","dodgerblue","firebrick","floralwhite","forestgreen","fuchsia","gainsboro","ghostwhite","gold","goldenrod","gray","green","greenyellow","grey","honeydew","hotpink","indianred","indigo","ivory","khaki","lavender","lavenderblush","lawngreen","lemonchiffon","lightblue","lightcoral","lightcyan","lightgoldenrodyellow","lightgray","lightgreen","lightgrey","lightpink","lightsalmon","lightseagreen","lightskyblue","lightslategray","lightslategrey","lightsteelblue","lightyellow","lime","limegreen","linen","magenta","maroon","mediumaquamarine","mediumblue","mediumorchid","mediumpurple","mediumseagreen","mediumslateblue","mediumspringgreen","mediumturquoise","mediumvioletred","midnightblue","mintcream","mistyrose","moccasin","navajowhite","navy","oldlace","olive","olivedrab","orange","orangered","orchid","palegoldenrod","palegreen","paleturquoise","palevioletred","papayawhip","peachpuff","peru","pink","plum","powderblue","purple","rebeccapurple","red","rosybrown","royalblue","saddlebrown","salmon","sandybrown","seagreen","seashell","sienna","silver","skyblue","slateblue","slategray","slategrey","snow","springgreen","steelblue","tan","teal","thistle","tomato","turquoise","violet","wheat","white","whitesmoke","yellow","yellowgreen","color","exec","Rgb","rgbn","rgba","hsla","g","rgbConvert","rgb","opacity","hex","h","Hsl","hsl","hslConvert","hsl2rgb","m1","m2","displayable","brighter","darker","isNaN","deg2rad","PI","rad2deg","Xn","Yn","Zn","t0","t1","t2","t3","labConvert","Lab","Hcl","cos","sin","z","rgb2lrgb","xyz2lab","lab","lab2xyz","lrgb2rgb","hclConvert","atan2","hcl","C","D","E","ED","EB","BC_DA","cubehelix","cubehelixConvert","Cubehelix","bl","basis","v0","v1","v2","v3","cosh","sinh","src_constant","linear","hue","constant","gamma","nogamma","exponential","src_rgb","rgbGamma","colorRgb","rgbSpline","spline","colors","rgbBasis","src_number","reA","reB","src_string","am","bm","bs","bi","lastIndex","q","one","zero","cssNode","cssRoot","cssView","svgNode","src_value","value_typeof","string","setTime","nb","na","src_round","degrees","translateX","translateY","rotate","skewX","scaleX","scaleY","decompose","atan","interpolateTransform","pxComma","pxParen","degParen","pop","translate","xa","ya","xb","yb","interpolateTransformCss","parseCss","documentElement","defaultView","transform","getComputedStyle","getPropertyValue","interpolateTransformSvg","parseSvg","baseVal","consolidate","matrix","SQRT2","colorHsl","hslLong","colorHcl","cubehelixGamma","colorCubehelix","cubehelixLong","piecewise","interpolate","d3_scale_src_constant","d3_scale_src_number","deinterpolateLinear","bimap","deinterpolate","reinterpolate","d0","polymap","bisect","target","clamp","continuous","output","input","interpolateValue","deinterpolateClamp","reinterpolateClamp","interpolateRound","formatDecimal","toExponential","indexOf","coefficient","src_exponent","re","formatSpecifier","specifier","FormatSpecifier","fill","sign","symbol","comma","precision","prefixExponent","locale","formatPrefix","formatTrim","out","i1","formatRounded","exponent","formatTypes","%","toFixed","toPrecision","X","toUpperCase","src_identity","prefixes","src_locale","group","grouping","thousands","substring","formatGroup","currency","decimal","numerals","formatNumerals","percent","newFormat","prefix","suffix","formatType","maybeSuffix","valuePrefix","valueSuffix","valueNegative","charCodeAt","Infinity","defaultLocale","formatLocale","src_tickFormat","precisionPrefix","precisionRound","precisionFixed","linearish","tickFormat","nice","interval","x0","x1","pow10","powp","base","exp","logp","log10","log2","reflect","logs","pows","u","raise","thresholds","threshold","quantiles","quantize","newInterval","floori","offseti","offset","previous","millisecond","durationMinute","durationWeek","second","getUTCSeconds","minute","hour","getTimezoneOffset","setHours","setDate","weekday","sunday","monday","tuesday","wednesday","thursday","friday","saturday","setMonth","setFullYear","utcMinute","setUTCSeconds","getUTCMinutes","utcHour","setUTCMinutes","getUTCHours","utcDay","setUTCHours","setUTCDate","getUTCDate","utcWeekday","getUTCDay","utcSunday","utcMonday","utcTuesday","utcWednesday","utcThursday","utcFriday","utcSaturday","utcMonth","setUTCMonth","getUTCMonth","getUTCFullYear","utcYear","setUTCFullYear","localDate","L","utcDate","UTC","newYear","timeFormat","utcFormat","utcParse","pads","-","0","numberRe","percentRe","requoteRe","requote","formatRe","names","formatLookup","parseWeekdayNumberSunday","w","parseWeekdayNumberMonday","parseWeekNumberSunday","U","parseWeekNumberISO","V","parseWeekNumberMonday","W","parseFullYear","parseYear","parseZone","Z","parseMonthNumber","parseDayOfMonth","parseDayOfYear","parseHour24","parseMinutes","parseSeconds","parseMilliseconds","parseMicroseconds","parseLiteralPercent","parseUnixTimestamp","Q","parseUnixTimestampSeconds","formatDayOfMonth","formatHour24","formatHour12","formatDayOfYear","timeDay","timeYear","formatMilliseconds","formatMicroseconds","formatMonthNumber","formatMinutes","formatSeconds","formatWeekdayNumberMonday","formatWeekNumberSunday","timeSunday","formatWeekNumberISO","timeThursday","formatWeekdayNumberSunday","formatWeekNumberMonday","timeMonday","formatYear","formatFullYear","formatZone","formatUTCDayOfMonth","formatUTCHour24","formatUTCHour12","formatUTCDayOfYear","formatUTCMilliseconds","getUTCMilliseconds","formatUTCMicroseconds","formatUTCMonthNumber","formatUTCMinutes","formatUTCSeconds","formatUTCWeekdayNumberMonday","dow","formatUTCWeekNumberSunday","formatUTCWeekNumberISO","formatUTCWeekdayNumberSunday","formatUTCWeekNumberMonday","formatUTCYear","formatUTCFullYear","formatUTCZone","formatLiteralPercent","formatUnixTimestamp","formatUnixTimestampSeconds","locale_dateTime","dateTime","locale_date","locale_time","time","locale_periods","periods","locale_weekdays","days","locale_shortWeekdays","shortDays","locale_months","months","locale_shortMonths","shortMonths","periodRe","periodLookup","weekdayRe","weekdayLookup","shortWeekdayRe","shortWeekdayLookup","monthRe","monthLookup","shortMonthRe","shortMonthLookup","formats","formatShortWeekday","formatWeekday","formatShortMonth","formatMonth","formatPeriod","utcFormats","formatUTCShortWeekday","formatUTCWeekday","formatUTCShortMonth","formatUTCMonth","formatUTCPeriod","parses","parseShortWeekday","parseWeekday","parseShortMonth","parseMonth","parseLocaleDateTime","parseSpecifier","parsePeriod","parseLocaleDate","parseLocaleTime","newParse","newDate","week","toISOString","durationSecond","durationHour","durationDay","durationMonth","durationYear","calendar","formatMillisecond","formatSecond","formatMinute","formatHour","formatDay","formatWeek","tickIntervals","tickInterval","src_time","timeMonth","timeWeek","timeHour","timeMinute","timeSecond","timeMillisecond","src_colors","interpolateCubehelixLong","ramp","sequential","interpolator","d3_scale_chromatic_src_colors","src_ramp","scheme","interpolateRgbBasis","warm","cool","sequential_multi_rainbow","ts","magma","inferno","plasma","UNIT_GLOBAL_NAMESPACE","UNIT_LOCAL_NAMESPACE","LAYER_LOCAL_NAMESPACE","LAYER_GLOBAL_NAMESPACE","GROUP_GLOBAL_NAMESPACE","GROUP_LOCAL_NAMESPACE","CANVAS_LOCAL_NAMESPACE","CANVAS_GLOBAL_NAMESPACE","ReservedFields","CommonProps","ACTION_INF","ON_LAYER_DRAW","MATRIX_CREATED","d3_axis_src_identity","bottom","epsilon","entering","__axis","axis","orient","tickArguments","tickValues","tickTransform","tickSizeInner","tickSizeOuter","tickPadding","spacing","range0","range1","center","selection","selectAll","tick","tickExit","exit","tickEnter","enter","attr","line","insert","transition","getAttribute","tickSize","pi","tau","tauEpsilon","Path","_x0","_y0","_x1","_y1","moveTo","closePath","lineTo","quadraticCurveTo","y1","bezierCurveTo","x2","y2","arcTo","y0","x21","y21","x01","y01","l01_2","x20","y20","l21_2","l20_2","l21","l01","acos","t01","t21","arc","a0","ccw","dx","dy","cw","da","rect","d3_shape_src_constant","halfPi","asin","arcInnerRadius","innerRadius","arcOuterRadius","outerRadius","arcStartAngle","startAngle","arcEndAngle","endAngle","arcPadAngle","padAngle","cornerTangents","rc","ox","oy","x11","y11","x10","y10","x00","y00","d2","cx0","cy0","cx1","cy1","dx0","dy0","dx1","dy1","cx","cy","Linear","areaStart","_line","areaEnd","lineStart","_point","lineEnd","point","curve_linear","src_line","pointX","pointY","defined","curve","curveLinear","buffer","defined0","src_area","area","x0z","y0z","arealine","lineX0","lineY0","lineY1","lineX1","src_descending","d3_shape_src_identity","curveRadial","Radial","_curve","radial","symbol_circle","draw","symbol_cross","tan30","tan30_2","diamond","kr","kx","ky","star","square","sqrt3","triangle","wye","noop","that","Basis","BasisClosed","_x2","_x3","_x4","_y2","_y3","_y4","BasisOpen","Bundle","beta","_basis","_beta","_x","_y","custom","bundle","_k","Cardinal","tension","cardinal","CardinalClosed","_x5","_y5","CardinalOpen","_l01_a","_l01_2a","_l12_a","_l12_2a","_l23_a","_l23_2a","CatmullRom","alpha","_alpha","x23","y23","curve_catmullRom","catmullRom","CatmullRomClosed","CatmullRomOpen","LinearClosed","slope3","h0","h1","s0","slope2","MonotoneX","MonotoneY","ReflectContext","Natural","controlPoints","_t0","px","py","Step","_t","curve_step","stepBefore","stepAfter","none","series","order_none","stackValue","order_ascending","sums","cubicInOut","polyIn","polyOut","polyInOut","b2","b3","b4","b5","b6","b7","b8","b9","b0","bounceOut","backIn","overshoot","backOut","backInOut","elasticOut","elasticIn","amplitude","period","d3_voronoi_src_constant","elasticInOut","RedBlackTree","RedBlackNode","R","RedBlackRotateLeft","tree","RedBlackRotateRight","RedBlackFirst","after","grandpa","uncle","createEdge","setEdgeEnd","cells","halfedges","createBorderEdge","vertex","clipEdge","ax","ay","connectEdge","fm","fb","lx","ly","rx","ry","fx","fy","cellHalfedgeAngle","cell","site","va","vb","cellHalfedgeStart","cellHalfedgeEnd","firstCircle","circlePool","attachCircle","lArc","rArc","lSite","cSite","rSite","bx","by","epsilon2","ha","hc","circle","Circle","before","circles","detachCircle","beachPool","createBeach","beach","Beach","detachBeach","beaches","removeBeach","disappearing","unshift","iArc","nArcs","addBeach","dxl","dxr","directrix","leftBreakPoint","rightBreakPoint","createCell","newArc","hb","rfocx","rfocy","pby2","lfocx","lfocy","plby2","hl","aby2","triangleArea","lexicographic","Diagram","sites","extent","sortCellHalfedges","clipEdges","clipCells","iCell","iHalfedge","nHalfedges","startX","startY","endX","endY","nCells","cover","dc","v00","v01","v11","v10","polygons","polygon","triangles","e1","links","radius","_found","vx","vy","src_voronoi","voronoi","Selection","_data","_idMap","_dataMap","_mode","_enterdata","_exitdata","newData","idGetter","_idGetter","tempMap","purgedIds","purged","temp","_this5","HTMLElement","common_utils_typeof","random","sanitizeIP","typeObj","nonExistentKeys","checkExistence","getMax","getMin","getDomainFromData","fieldType","domArr","DimensionSubtype","_loop","_fields","field0","field1","arr0","firstMin","secondMin","firstMax","secondMax","unionDomain","domains","dom","symbolFns","symbolCircle","cross","symbolCross","symbolDiamond","symbolSquare","symbolStar","symbolWye","symbolTriangle","easeFns","cubic","easeCubic","bounce","easeBounce","elastic","easeElastic","back","easeBack","poly","easePoly","circleInOut","getNearestValue","filterData","getWindow","getQualifiedClassName","cancelAnimationFrame","cls","defaultValue","getDependencyOrder","dependencyOrder","visited","visit","objectIterator","Voronoi","common_utils_classCallCheck","_voronoi","_voronoiFn","addListenerToNamespace","namespaceInf","namespace","_listeners","getObjProp","Store","propName","propNames","callBack","on","calculatedProp","intSanitizer","transactor","holder","conf","stateProps","addAsMethod","nameSpaceProp","nsProp","compareTo","paramsLen","prevVal","spreadParams","sanitization","typeCheck","typeExpected","preset","oldValues","generateGetterSetters","propInfo","typeChecker","isEqual","oldVal","newVal","arraysEqual","is","ERROR_MSG","INTERFACE_IMPL","mergeRecursive","sink","createSelection","sel","appendObj","idFn","dataSelect","mergedSelection","numberInterpolator","interpolateNumber","piecewiseInterpolator","rgbToHsv","detectColor","col","getDataModelFromRange","selFields","selFn","getDataModelFromIdentifiers","filteredDataModel","dataArr","filteredSchema","include","registerListeners","listenerMap","propListenerMap","local","mapObj","propType","listenerFn","listener","isValidValue","getSymbol","stackOrders","_defineProperty","_stackOrders","stackOrderNone","stackOrderAscending","stackOffsets","_stackOffsets","yp","yn","stackOffsetNone","si","sij0","s3","sk","stack","orderNone","offsetNone","oz","kz","sz","sij","ki","d3Stack","pathInterpolators","curveStepAfter","curveStepBefore","curveStep","curveCatmullRom","Symbols","axisLeft","axisRight","axisTop","axisBottom","pie","descending","arcs","pa","cornerRadius","padRadius","a01","a11","a00","a10","da0","da1","ap","rp","rc0","rc1","p0","p1","oc","intersect","x3","y3","x32","y32","kc","lc","centroid","Scales","scaleBand","getSmallestDiff","points","timeFormats","timeDurations","formatTemporal","nearestInterval","getNearestInterval","getValueParser","retrieveNearestGroupByReducers","nearestReducers","getDerivations","groupDerivation","getParent","filteredReducers","measureFieldNames","xhtml","src_namespaces","xlink","xml","xmlns","src_namespace","namespaces","space","creator","fullname","creatorFixed","ownerDocument","creatorInherit","uri","namespaceURI","src_selector","selector","querySelector","selectorAll","querySelectorAll","matcher","matches","element","vendorMatches","webkitMatchesSelector","msMatchesSelector","mozMatchesSelector","oMatchesSelector","sparse","EnterNode","_next","__data__","keyPrefix","bindIndex","groupLength","dataLength","bindKey","nodeByKeyValue","keyValues","src_window","styleValue","classArray","classList","ClassList","_names","classedAdd","classedRemove","contains","textRemove","htmlRemove","nextSibling","lower","previousSibling","firstChild","constantNull","selection_cloneShallow","cloneNode","selection_cloneDeep","filterEvents","event","mouseenter","mouseleave","filterContextListener","contextListener","related","relatedTarget","compareDocumentPosition","event1","event0","onRemove","typename","__on","removeEventListener","capture","onAdd","wrap","addEventListener","customEvent","sourceEvent","dispatchEvent","CustomEvent","createEvent","initEvent","bubbles","cancelable","detail","groups","parents","_groups","_parents","subgroups","subnode","subgroup","enterGroup","updateGroup","_enter","_exit","groups0","groups1","m0","merges","group0","group1","compareNode","sortgroups","sortgroup","getAttributeNS","attrRemoveNS","removeAttributeNS","attrRemove","removeAttribute","attrFunctionNS","attrFunction","attrConstantNS","attrConstant","priority","styleRemove","removeProperty","styleFunction","setProperty","styleConstant","propertyRemove","propertyFunction","propertyConstant","classed","classedFunction","classedTrue","classedFalse","textFunction","textConstant","html","htmlFunction","htmlConstant","deep","typenames","parseTypenames","dispatch","dispatchFunction","dispatchConstant","src_select","nextId","Local","current","src_point","ownerSVGElement","createSVGPoint","clientX","clientY","matrixTransform","getScreenCTM","inverse","getBoundingClientRect","clientLeft","clientTop","mouse","changedTouches","src_touch","touches","identifier","touch","Dispatch","T","types","nopropagation","stopImmediatePropagation","noevent","preventDefault","nodrag","view","__noselect","MozUserSelect","d3_drag_src_constant","DragEvent","subject","active","defaultFilter","button","defaultContainer","defaultSubject","defaultTouchable","src_drag","mousedownx","mousedowny","mousemoving","touchending","touchable","gestures","clickDistance2","drag","mousedowned","touchstarted","touchmoved","touchended","gesture","beforestart","mousemoved","mouseupped","yesdrag","noclick","clearTimeout","sublisteners","clickDistance","taskHead","taskTail","frame","timeout","pokeDelay","clockLast","clockNow","clockSkew","clock","performance","timer_typeof","now","setFrame","clearNow","Timer","_call","_time","timer","delay","restart","wake","timerFlush","nap","sleep","poke","clearInterval","setInterval","src_timeout","elapsed","emptyOn","emptyTween","CREATED","SCHEDULED","STARTING","STARTED","RUNNING","ENDING","ENDED","transition_schedule","timing","schedules","__transition","self","tween","state","duration","ease","schedule","tweenValue","_id","transition_interpolate","interpolateRgb","interpolateString","Transition","_name","newId","selection_prototype","inherit","id0","id1","onFunction","on0","on1","sit","attrTween","value00","value10","interpolate0","value1","attrTweenNS","styleTween","styleRemoveEnd","removeFunction","tweenRemove","tween0","tween1","tweenFunction","delayFunction","delayConstant","durationFunction","durationConstant","easeConstant","defaultTiming","easeCubicInOut","interrupt","selectElement","makeElement","elemType","callbacks","keyFn","SVGElement","selectorVal","selectorType","actualSelector","enterSel","mergeSel","exitSel","applyStyle","setElementAttrs","attrs","setAttrs","setStyles","styles","createElements","getClientPoint","pos","clientPoint","getEvent","d3event","getD3Drag","d3drag","getSmartComputedStyle","css","textEl","mandatoryStyle","fill-opacity","renderer_utils_typeof","computedStyle","styleForSmartLabel","hasTouch","events","EVENT_LIST","composition","resolveFn","notification","hasOwn","LifeCycleManager","lifecycle_manager_classCallCheck","_eventList","_promises","_notifiers","_lifeCycles","_unreleasedLifeCycles","_boot","_preparePromises","Promise","promise","_makeNotifierPromise","createPromise","then","prm","formalName","client","_releasePromisesFromCache","_notify","stage","_resolvePromise","retrieve","_callLifeCycleCallback","_cachePromise","_resetTargetPromise","lifeCycles","DRAG","HOVER","SELECTIONDRAG","CLICK","LONGTOUCH","TOUCHDRAG","ALL_ACTIONS","SELECTION_NEW_ENTRY","SELECTION_NEW_EXIT","SELECTION_NULL","SELECTION_OLD_ENTRY","SELECTION_OLD_EXIT","SelectionSet","completeSet","_volatile","selection_set_classCallCheck","_completeSetCount","_lockedSelection","_resetted","ids","entrySet","exitSet","lockedSel","addSet","removeSet","updateSet","changeSideEffectAvailability","toEnable","sideEffects","change","enable","disable","getMergedSet","helper_toConsumableArray","conditionsMap","newEntry","SELECTION","oldEntry","mergedEnter","newExit","oldExit","mergedExit","complete","getSetInfo","selectionSet","propagationData","resetted","getModelFromSet","condition","Firebolt","actions","behaviourEffectMap","firebolt_classCallCheck","_sideEffectDefinitions","_sideEffects","_propagationInf","_actions","behavioural","physical","_selectionSet","_volatileSelectionSet","_propagationFields","_sourceSideEffects","selectionBox","_propagationBehaviourMap","_sourceBehaviours","_actionBehaviourMap","_config","_behaviourEffectMap","_entryExitSet","_actionHistory","_queuedSideEffects","mapSideEffects","registerBehaviouralActions","registerSideEffects","registerPhysicalBehaviouralMap","physicalBehaviouralMap","registerPhysicalActions","behEffectMap","preventDefaultActions","effectNames","effects","firebolt_toConsumableArray","behaviours","initializeBehaviouralActions","dispatchableBehaviours","Action","prepareSelectionSets","initializeSideEffects","sideEffectStore","actionHistory","queuedSideEffects","sideEffect","combinedSet","unionSets","behaviour","entryExitSet","existingModel","effect","firebolt_typeof","sideEffectInstance","isEnabled","mutates","dispatchSideEffect","propagationInfo","getSideEffects","propagationSelectionSet","getPropagationSelectionSet","shouldApplySideEffects","sourceSelectionSet","applicableSideEffects","getApplicableSideEffects","applySideEffects","physicalAction","actionBehaviourMap","behaviourMap","mapActionsAndBehaviour","unsubscribe","onDataModelPropagation","propValue","dispatchBehaviour","uniqueIds","behaviouralActions","volatileSelectionSet","sideEffectDefinitions","sideEffectsMap","SideEffect","sideEffectConf","initedActions","initializePhysicalActions","physicalActions","phyAction","initedPhysicalActions","getDefaultTargetContainer","bindActionWithBehaviour","targets","behaviourList","xFields","yFields","xMeasures","FieldType","yMeasures","_propModel$getData","fieldMap","getFullData","propagationSource","applicableSelectionSets","GenericBehaviour","firebolt","generic_classCallCheck","_enabled","selectionSets","getSelectionSets","_this$firebolt$getAdd","getAddSetFromCriteria","getPropagationInf","setSelectionSet","getEntryExitSet","_selectionSet$getSets","getSets","setConfig","isSourceFieldPresent","getSourceFields","VolatileBehaviour","reset","existingAddSet","updateExit","getCompleteSet","BRUSH","HIGHLIGHT","TOOLTIP","FILTER","HighlightBehaviour","BrushBehaviour","BEHAVIOURNAMES","FilterBehaviour","PersistentBehaviour","updateEntry","mergedExitSet","completeSetCount","SelectBehaviour","getDragActionConfig","sourceInfo","axes","xAxis","yAxis","axisFields","xField","getMembers","yField","xFieldType","yFieldType","stPos","startPos","endPos","dragDim","MeasureSubtype","isXDimension","isYDimension","xRange","yRange","selectedDomains","rangeObj","xdom","ydom","snap","getNearestRange","attachDragEvent","targetEl","drawingInf","touchStart","d3Drag","getDrawingContext","getSourceInfo","beh","dragEnd","hover","interaction","tooltip","svgContainer","nearestPoint","getNearestPoint","getAllPoints","showInPosition","generatePayloadFromEvent","click","physical_defineProperty","_physicalActions","ACTIONNAMES","longtouch","touchEnd","touchdrag","PROPS","valueParser","GenericSideEffect","generic_sideeffect_classCallCheck","_strategy","_strategies","defaultConfig","SurrogateSideEffect","interactionType","layers","layer","interactive","applyInteractionStyle","SpawnableSideEffect","_drawingContext","changeVisibility","sideEffectGroup","visible","defClassName","classPrefix","SelectionBox","boxConf","box","drawingContext","unitWidth","unitHeight","selectionGroupClassName","hide","sourceInf","_getBoxDimensionsFrom","getBoxDimensionsFromPayload","direction","xDim","yDim","xLinear","yLinear","xCriteria","yCriteria","x1Val","x2Val","bandScale","x1DomainIndex","x2DomainIndex","_sort2","helper_slicedToArray","getScaleValue","getUnitWidth","y1Val","y2Val","y1DomainIndex","y2DomainIndex","_sort4","_xDim","_yDim","dimension","show","selectionBoxDrag","onDrag","boxClassName","INITIAL_STYLE","connectorClassName","margin","content","iconContainerSize","iconScale","iconShape","iconColor","rowMargin","separator","parentClassName","arrow","disabled","getArrowPos","dim","measurement","arrowPos","boxHeight","boxWidth","arrowWidth","plotBottom","boxBottom","plotRight","boxRight","placeArrow","tooltipArrow","_tooltipArrow","tooltipBackground","_tooltipBackground","arrowConf","_arrowOrientation","formatters","strategy_defineProperty","getDefaultTooltipFormatterFn","defaultFormatter","buildTooltipData","fieldValues","fieldspace","detailFields","containsDetailField","dataLen","dimensionMeasureMap","timeDiffs","defFormatter","getRowContent","formattedValue","measureIndex","formatterFn","uniqueVals","strategy_toConsumableArray","colorAxis","shapeAxis","shape","sizeAxis","isRetinalField","associatedMeasures","icon","getColor","getShape","getSize","formattedKey","measure","measureFormatter","margin-left","displayFormat","getTabularData","fieldObj","allMeasures","_construct","strategy","DEFAULT_STRATEGY","Content","content_classCallCheck","_model","_formatter","ctx","_mount","table","tbody","margin-right","el","Tooltip","htmlContainer","tooltip_classCallCheck","connectorContainer","tooltipConf","contentClass","_tooltipContainer","_contentContainer","_contents","_tooltipConnectorContainer","qualifiedClassName","addClass","defConf","contentConfig","reorderContainers","contentConf","render","_target","repositionArrow","arrowDisabled","arrowOrient","outsidePlot","connector","_offset","orientation","_extent","arrowSize","topSpace","dimX","rightSpace","leftSpace","positionTop","positionRight","positionLeft","positionHorizontal","positionVertical","_position","_arrowPos","strategies","showSelectedItems","aggregatedModel","fieldsConf","measureNames","strategies_toConsumableArray","_getPrototypeOf2","side_effects_tooltip_classCallCheck","tooltip_possibleConstructorReturn","tooltip_getPrototypeOf","_tooltips","totalHeight","totalWidth","isEmpty","tooltips","boundBox","dataModels","fragmented","showVertically","tooltipPos","boxes","tooltip_toConsumableArray","sourceFields","indices","plotDimensions","getPlotPointsFromIdentifiers","plotDim","dt","dataTransform","layoutContainer","parentContainerDimensions","layoutBoundBox","unitBoundBox","tooltipInst","TooltipRenderer","timeDiffsByField","positionRelativeTo","tooltipBoundBox","getContents","spaceOutBoxes","spaceOutIfOverlap","firstBox","secondBox","opposite","Crossline","bandWidth","_this$config","bandClass","lineClass","elemData","axisIndex","fieldInst","xOffset","plotWidth","crossline_toConsumableArray","getPlotSpan","getPlotPadding","startPx","endPx","dataPoint","parentGroup","fade","fadeFn","focus","highlight","PlotHighlighter","plot_highlighter_classCallCheck","plot_highlighter_possibleConstructorReturn","plot_highlighter_getPrototypeOf","FilterEffect","entryModel","clearCaching","resetData","enableCaching","addLayer","layerDefs","layerRegistry","layerDef","mark","layerCls","shouldDrawAnchors","depLayerEncoding","encoding","defaultSizeValue","layerObj","instances","getTransitionConfig","calculateDomain","linkedLayer","AnchorEffect","anchors_classCallCheck","anchors_possibleConstructorReturn","anchors_getPrototypeOf","_layersMap","addAnchorLayers","metaInf","registry","layerDefsVal","registerImmediateListener","STATE_NAMESPACES","anchors_slicedToArray","_layers","elems","_linkedLayer$getTrans2","getLayerByName","getTransformedDataFromIdentifiers","transformedData","transformedDataModel","PersistentAnchors","BrushAnchors","behaviour_effect_map_defineProperty","BEHAVIOURS","ANGLE","RADIUS","SIZE","COLOR","SHAPE","ENCODING","X0","Y0","nearestPointThreshold","strokeOpacity","connectNullData","SimpleLayer","BOTTOM","TOP","LEFT","RIGHT","axisOrientationMap","axis_orientation_defineProperty","_axisOrientationMap","AxisOrientation","LINEAR","BAND","TIME","ORDINAL","QUANTIZE","QUANTILE","LOG","POW","IDENTITY","SEQUENTIAL","THRESHOLD","CONTINOUS","DISCRETE","HIDDEN","scaleLinear","scales","scaleThreshold","scaleLog","scalePow","scaleIdentity","scaleOrdinal","scaleSequential","scaleQuantize","scaleQuantile","scaleTime","scaleMap","scale_creator_defineProperty","_scaleMap","ScaleType","createScale","scaleFactory","axisName","axisNamePadding","fixedBaseline","labels","rotation","smartTicks","numberOfTicks","showAxisName","showInnerTicks","showOuterTicks","yOffset","rotateAxis","instance","tickText","labelManager","renderConfig","getTickSize","yShift","xShift","tickFormatter","tickLabelDim","quadrant","rotationNormalizer","angleToRadian","angle","changeTickOrientation","selectContainer","axisInstance","_smartTicks","isSmartTicks","registerAnimationDoneHook","setFixedBaseline","setAxisNamePos","textNode","axisNameHeight","labelOffset","availableSpace","setAxisRange","rangeBounds","space_setter_defineProperty","adjustRange","getAxisOffset","timeDiff","avWidth","bars","spaceSetter","spaceConfig","heightForTicks","_context$availableSpa","availWidth","availHeight","isOffset","_context$renderConfig","_context$config2","_context$getAxisDimen","getAxisDimensions","tickDimensions","allTickDimensions","axisNameDimensions","tickDimHeight","tickDimWidth","namePadding","labelConfig","minTickDistance","_minTickDistance","minTickSpace","_minTickSpace","_minDiff","tickShifter","getTickValues","maxTickSpaces","widthForTicks","continous","totalTickWidth","getRotatedSpaces","rotatedHeight","rotatedWidth","setOffset","logicalSpace","getAxisComponentDimensions","axisTicks","largestTick","largestTickDimensions","smartTick","_context$config","labelFunc","_tickLabelStyle","originalLabel","getFormattedText","_axisNameStyle","getHorizontalAxisSpace","axisDimensions","axisDimHeight","minTickDiff","getMinTickDifference","cartesian_axis_helper_toConsumableArray","getVerticalAxisSpace","_context$config3","calculateBandSpace","largestDimHeight","minTickWidth","_getHorizontalAxisSpa","_getVerticalAxisSpace","getValidDomain","userDom","setContinousAxisDomain","_domain","axisComponentDimensions","oldConfig","mockedOldConfig","shouldAxesScaleUpdate","hasAxesConfigChanged","properties","sanitizeTickFormatter","_scale","_axis","createAxis","_tickFormatter","_renderConfig","SimpleAxis","simple_axis_classCallCheck","_dependencies","_range","_domainLock","_axisDimensions","defCon","simpleConfig","bodyElem","dist","_animationDonePromises","domainValue","setAxisComponentDimensions","axisClass","setTickConfig","domainVal","computeAxisDimensions","_getAxisComponentDime","labelHeight","labelWidth","calculateContinousSpace","_context$renderConfig6","axisNameWidth","_getHorizontalAxisSpa2","_getVerticalAxisSpace2","renderAxis","axisNameStyle","tickLabelStyle","axisTickFormatter","labelProps","axisNameSpace","all","LinearInterpolator","LogInterpolator","PowInterpolator","interpolatorMap","continous_axis_defineProperty","_interpolatorMap","ContinousAxis","continous_axis_classCallCheck","continous_axis_possibleConstructorReturn","continous_axis_getPrototypeOf","InterpolatorCls","_interpolator","_this$renderConfig","sanitizeDomain","_this$config3","getNumberOfTicks","labelDim","tickLength","numberOfValues","_this$axisComponentDi","BandAxis","_get","band_axis_getPrototypeOf","_this$config2","_this$maxTickSpaces","_getRotatedSpaces","_this$renderConfig2","TimeAxis","time_axis_classCallCheck","time_axis_possibleConstructorReturn","time_axis_getPrototypeOf","time_axis_get","rawTicks","x11Colors","Pink","LightPink","HotPink","DeepPink","PaleVioletRed","MediumVioletRed","LightSalmon","Salmon","DarkSalmon","LightCoral","IndianRed","Crimson","FireBrick","DarkRed","Red","OrangeRed","Tomato","Coral","DarkOrange","Orange","Gold","Yellow","LightYellow","LemonChiffon","LightGoldenrodYellow","PapayaWhip","Moccasin","PeachPuff","PaleGoldenrod","Khaki","DarkKhaki","Cornsilk","BlanchedAlmond","Bisque","NavajoWhite","Wheat","BurlyWood","Tan","RosyBrown","SandyBrown","Goldenrod","DarkGoldenrod","Peru","Chocolate","SaddleBrown","Sienna","Brown","Maroon","DarkOliveGreen","Olive","OliveDrab","YellowGreen","LimeGreen","Lime","LawnGreen","Chartreuse","GreenYellow","SpringGreen","MediumSpringGreen","LightGreen","PaleGreen","DarkSeaGreen","MediumSeaGreen","SeaGreen","ForestGreen","Green","DarkGreen","MediumAquamarine","Aqua","Cyan","LightCyan","PaleTurquoise","Aquamarine","Turquoise","MediumTurquoise","DarkTurquoise","LightSeaGreen","CadetBlue","DarkCyan","Teal","LightSteelBlue","PowderBlue","LightBlue","SkyBlue","LightSkyBlue","DeepSkyBlue","DodgerBlue","CornflowerBlue","SteelBlue","RoyalBlue","Blue","MediumBlue","DarkBlue","Navy","MidnightBlue","Lavender","Thistle","Plum","Violet","Orchid","Fuchsia","Magenta","MediumOrchid","MediumPurple","BlueViolet","DarkViolet","DarkOrchid","DarkMagenta","Purple","Indigo","DarkSlateBlue","SlateBlue","MediumSlateBlue","White","Snow","Honeydew","MintCream","Azure","AliceBlue","GhostWhite","WhiteSmoke","Seashell","Beige","OldLace","FloralWhite","Ivory","AntiqueWhite","Linen","LavenderBlush","MistyRose","Gainsboro","LightGray","Silver","DarkGrey","Grey","DimGrey","LightSlateGrey","SlateGrey","DarkSlateGrey","Black","palette","DEFAULT_GRADIENT_COLOR","DEFAULT_CONFIG","stops","getHslString","hslArr","convertToXllString","baseString","getActualHslColor","paletteColor","hexToHsv","props_toConsumableArray","newConfig","treatNullMeasures","scaledVal","minDomainScaledVal","getStops","newStops","color_strategy_toConsumableArray","rangeStops","newStopsLength","newRange","hslInterpolator","interpolateHslLong","indexedDomain","scaleDomain","indexedDomainMeasure","normalDomain","steppedDomain","_getStops","continousSteppedDomain","_getStops2","uniqueRange","indexedRange","numVal","normalRange","strategyGetter","domainType","rangeType","schemeType","color_strategy_defineProperty","domainRange","ColorAxis","color_axis_classCallCheck","_domainType","_rangeType","_schemeType","getSchemeType","_colorStrategy","setColorStrategy","updateDomain","colorStrategy","getScheme","colorSchemes","hslColorArray","getRawColor","color_axis_toConsumableArray","scaleInfo","domainRangeFn","transformationArr","newH","newS","newL","newA","size_strategy_defineProperty","pieceWiseRange","size_strategy_toConsumableArray","intervals","newIntervals","discreteRange","SizeAxis","size_axis_classCallCheck","_sizeStrategy","setStrategy","domainInfo","domainFn","generator","ShapeAxis","shape_axis_classCallCheck","_generatedShapes","shapeType","shapeGenerator","generatorFn","generatedShapes","DATA_TYPES","group_transform","data_type_scale_map_defineProperty","_dataTypeScaleMap","groupByIndices","nestCollection","nestFn","identityTransform","transformMap","transform_factory_defineProperty","_transformMap","uniqueField","valueField","normalizedData","normalizeData","uniqueFieldIndex","valueFieldIndex","seriesKeyIndex","seriesKeys","tuples","_tuple","seriesKey","newArr","orderBy","orderIndex","groupByIndex","localeCompare","stackData","seriesData","transformFactory","getLayerColor","colorEncoding","colorFieldIndex","rawColor","transfromColor","styleType","intensity","stateColor","originalColor","fillColorInfo","transformColor","interactionStyles","elements","getPlotElementsFromSet","_d$meta","colorTransform","helpers_slicedToArray","getAxesScales","_map2","_map4","xScale","yScale","getIndividualClassName","individualClassName","classNameStr","attachDataToVoronoi","_ref5","helpers_toConsumableArray","updateStyle","positionPoints","positioner","encodingTransform","getPlotMeasurement","dimensionalValues","fieldInfo","encodingFieldsInf","transformType","_bandScale","span","groupSpan","offsetValues","actualGroupWidth","dataProps","innerPadding","getGroupSpan","isAxisBandScale","axisPadding","groupPadding","resolveInvalidTransformType","_context$encodingFiel","groupByField","groupByFieldMeasure","getValidTransformForAggFn","resolvedInvalidTransformType","_context$encodingFiel2","isCustomTransformTypeProvided","_customConfig","listener_map_slicedToArray","encodingValue","getEncodingFieldInf","_map6","x0Field","y0Field","colorField","shapeField","sizeField","_map8","_map10","xFieldSubType","yFieldSubType","_map12","xFieldIndex","yFieldIndex","x0FieldIndex","y0FieldIndex","resolveTransformType","_transformedData","getTransformedData","_normalizedData","getNormalizedData","calculateDomainFromData","_updateLock","getRenderProps","registerChangeListener","renderLayer","throwback","commit","defaultOptions","default_options_defineProperty","_defaultOptions","newConf","defaultPolicy","_cacheEnabled","_cachedData","BaseLayer","base_layer_classCallCheck","base_layer_possibleConstructorReturn","base_layer_getPrototypeOf","base_layer_assertThisInitialized","alias","_points","_measurement","_store","localNs","initializeGlobalState","globalState","getState","helpers_defineProperty","base_layer_defineProperty","global","unitRowIndex","unitColIndex","_encodingFieldsInf","_encodingTransform","_alias","transformData","encodingFieldInf","yEnc","xEnc","encodingType","transformedDataArr","fieldsLen","pointObj","_transformType","getValidTransform","pointMap","_pointMap","_dataProps","_this$encodingFieldsI","base_layer_slicedToArray","xMeasure","yMeasure","_identifiers$","_identifiers$2","xMeasureIndex","yMeasureIndex","getAllAttrs","filteredPoints","base_layer_toConsumableArray","sizeVal","enc","_identifiers$getData","identifierData","identifierSchema","_this$encodingFieldsI2","tupleArr","transformedVal","base_layer_construct","userConf","drawLine","curveInterpolatorFn","linepath","LineLayer","line_classCallCheck","line_possibleConstructorReturn","line_getPrototypeOf","isXDim","isYDim","xPx","yPx","_getLayerColor","stroke","rowId","cachePoint","seriesClassName","containerSelection","animateGroup","groupTransition","groupAnimateStyle","stroke-opacity","getPathStyle","translatePoints","colorValFn","colorVal","getDrawFn","searchRadius","_point$data$data","getIdentifiersFromData","layerId","drawArea","easeEffect","renderer_slicedToArray","enterAreaPath","updateAreaPath","selectionEnter","AreaLayer","area_get","area_getPrototypeOf","_getAxesScales","classNameFn","minYVal","basePos","y0Px","invalidY","invalidY0","minOuterRadius","stroke-width","stroke-linejoin","innerRadiusFixer","states","fadeout","selected","ArcLayer","arc_classCallCheck","arc_possibleConstructorReturn","arc_getPrototypeOf","_prevPieData","pieData","pieIndex","prevData","_getFieldIndices","getFieldIndices","arc_helper_slicedToArray","angleField","radiusField","angleIndex","sizeIndex","radiusIndex","colorIndex","dataVal","uid","outerRadiusValue","angleVal","_previousInfo","getPreviousPoint","currIndex","prevArc","nextArc","_dataPoint$datum","_this$measurement","chartHeight","chartWidth","qualClassName","getRadiusRange","defaultRadius","radiusDomain","rangeValueGetter","getRangeValue","domainMultiplier","sizeAxisDomain","sizeMultiplier","_chartWidth","_chartHeight","consecutiveExits","exitCounter","arcFn","tweenPie","individualClass","tweenExit","exitArr","oldExitCounter","tweenExitPie","consecutiveExitArr","gElem","pieSlices","pieSliceInf","tData","drawText","selectionMerge","backgroundVal","textanchor","textStyle","background","backgroundPadding","_smartLabel$getOriSiz","backgroundEl","TextLayer","textEncoding","textField","textFormatter","backgroundEncoding","backgroundValue","textFieldIndex","textValue","text_slicedToArray","text-anchor","drawSymbols","createShape","groupElement","Element","newShape","nodeName","src","href","shapeElement","pathStr","checkPath","exitGroup","defColorStyle","fillOpacity","shapes","sizes","PointLayer","point_classCallCheck","point_possibleConstructorReturn","point_getPrototypeOf","sizeEncoding","shapeEncoding","sizeValue","shapeFieldIndex","sizeFieldIndex","_config$offset","offsetX","offsetY","point_slicedToArray","maxSize","generateDataPoints","point_toConsumableArray","drawFn","getMarkId","_maxSize","_getPlotMeasurement2","widthMetrics","heightMetrics","offsetXValues","offsetYValues","measurementConf","getMeasurementConfig","widthSpan","heightSpan","distanceLimit","drawRects","barEnterFn","transitionBars","selTransition","positionRetriever","isNegativeVal","barBasePos","resolveDimByField","axesInfo","spaceType","minDomVal","sizeConfig","enterSpace","minVal","maxVal","diffPx","_positionRetriever$ty2","bar_helper_slicedToArray","resolveDimensions","_resolveDimByField","enterWidth","enterX","xPos","_resolveDimByField2","enterHeight","BarLayer","bar_classCallCheck","bar_possibleConstructorReturn","bar_getPrototypeOf","_plotPadding","_plotSpan","bar_get","getTranslatedPoints","normalizedDataArr","clipElement","clipPathElement","bar_slicedToArray","barWidthMetrics","barHeightMetrics","barWidthOffsets","barHeightOffsets","barWidth","barWidthOffset","barHeight","barHeightOffset","uniqueFieldType","pointFound","bar_toConsumableArray","p2","tick_renderer","ticksEnter","TickLayer","_config$span","xSpan","ySpan","x0Px","drawTicks","AREA_LAYER","ARC_LAYER","LINE_LAYER","TEXT_LAYER","POINT_LAYER","BAR_LAYER","TICK_LAYER","SIMPLE_LAYER","BASE_LAYER","sanitizeEncoding","layerFactory","compositeLayers","factoryObj","setLayerRegistry","reg","_layerRegistry","getSerializedConf","serializedDefs","defs","unitLayerDef","sDef","parseLayerDefinition","layerType","strs","layer_factory_toConsumableArray","getLayerInstance","layerConstructor","getLayerClass","composeLayers","sanitizeLayerConfig","DEFAULT_LAYERS","defaults_defineProperty","_DEFAULT_LAYERS","LAYER_TYPES","ROWS","COLUMNS","COL","ROW","CELL","X_AXES","Y_AXES","ENTRY_CELLS","EXIT_CELLS","PRIMARY","SECONDARY","local_options","local_options_defineProperty","_CONFIG$ROWS$COLUMNS$","SimpleGroup","Variable","ComposedVars","composed_vars_classCallCheck","texts","composed_vars_possibleConstructorReturn","composed_vars_getPrototypeOf","vars","_vars","member","getMinDiff","SimpleVariable","simple_var_classCallCheck","simple_var_possibleConstructorReturn","simple_var_getPrototypeOf","oneVar","_oneVar","dtFormat","minimumConsecutiveDifference","varInst","convertToVar","datamodel","transformFields","field_sanitizer_slicedToArray","normalizedFields","normalizeFields","norFields","orderFields","fieldArray","temporalArr","categoricalArr","fieldList","numOfMeasures","allDimensions","field_sanitizer_toConsumableArray","temporal","categorical","rowsInfo","columnsInfo","rowDimensions","rowMeasures","rowTemporalFields","rowCategoricalFields","columnDimensions","columnMeasures","columnTemporalFields","columnCategoricalFields","VisualEncoder","_fieldInfo","_axisFrom","_headerFrom","__headerFrom","axisFrom","_getHeaderAxisFrom2","visual_encoder_slicedToArray","getHeaderAxisFrom","rowHeader","rowAxis","_getHeaderAxisFrom4","colHeader","colAxis","headerFrom","scaleMaps","dataTypeScaleMap","generateAxisFromMap","axisType","axesCreators","axisKey","groupAxes","currentAxes","cacheMaps","commonAxisKey","getAxisKey","axisConfig","getAxisConfig","axisInfo","axisOrientation","userAxisConfig","_rotationLock","resetDomain","createSimpleAxis","Cls","getIndex","arrIndex","CartesianEncoder","geomCellAxes","projections","rowFields","columnFields","rowIndex","columnIndex","xAxes","yAxes","lock","unlock","unitDomains","units","1","rIdx","unitsArr","_loop2","cIdx","len2","_resolver$axes","axesArr","adjustedDomain","alignZeroLine","getAdjustedDomain","y1ratio","y2ratio","allSameSign","facets","counter","primaryFacets","secondaryFacets","primaryFields","secondaryFields","primaryLen","secondaryLen","projArr","primaryField","secondaryField","facet","existIndex","axisFromIndex","cartesian_encoder_get","cartesian_encoder_getPrototypeOf","groupedModel","encodingObj","retriveDomainFromData","layerArray","serializedLayers","userLayerConfig","layerConfig","colField","colFieldName","rowField","configs","rowFieldName","rowFieldType","getDefaultMark","colFieldType","defConfigs","layerConfigs","getLayerConfFromFields","colFields","encodingArr","encoder_helper_toConsumableArray","colFieldExist","rowFieldExist","layerConf","mergedLayerConf","serializedLayerConfig","cartesian_encoder_toConsumableArray","PolarEncoder","pieAxes","domainProps","sanitizedRows","sanitizedColumns","polar_encoder_get","polar_encoder_getPrototypeOf","sanitizedFields","typeIndex","fieldSet","polar_encoder_toConsumableArray","facetFields","layerEncoding","encType","polar_encoder_defineProperty","RetinalEncoder","newAxes","createRetinalAxis","fieldProps","getAxisType","encodingConfigs","isDistributionEqual","group_utils_toConsumableArray","rowType","initializeCacheMaps","cellMap","xAxesMap","yAxesMap","entryCellMap","exitCellMap","headerCreator","fieldHeaders","TextCell","getHeaderText","rowLength","userAxisFromConfig","group_utils_slicedToArray","firstField","secondField","firstFieldType","secondFieldType","setFacetsAndProjections","encoder","_encoder$simpleEncode","simpleEncoder","getFacetsAndProjections","group_utils_defineProperty","getBorders","matrices","showRowBorders","showColBorders","showValueBorders","valueMatrix","_rows","leftRows","rightRows","_columns","topColumns","bottomColumns","_encoder$fieldInfo","allDimensionLength","allMeasuresLength","allTemporalFieldsLength","getRowBorders","borders","getColumnsBorders","getValueBorders","borderTypeRow","borderTypeCol","action_behaviour_map_defineProperty","ACTIONS","getLayerFromDef","existingLayer","_layerDeps","inst","colIndex","instanceArr","_timeDiffs","resolveEncodingTransform","layerInst","resolvable","depArr","sanitizeLayerDef","sanitizedDefs","sConf","getLayersBy","searchBy","removeLayersBy","createRenderPromise","_renderedPromise","_renderedResolve","GRID_BAND","GRID_LINE","getGridLayerDefinitions","getDefaultVisibilty","getLayerDefinition","_definition","_encoding","gridLines","gridBands","gridLineColor","zeroLineColor","gridBandColor","isLinearScale","grid_lines_defineProperty","isNegativeDomain","attachDataToGridLineLayers","_gridLines","_gridBands","gridLayerData","getGridLayerData","gridData","_jsonData$push","grid_lines_toConsumableArray","trackerClassName","arcLayerClassName","sideEffectClassName","src_local_options","src_local_options_defineProperty","_CONFIG$LAYERDEFS$TRA","cachedData","local_options_toConsumableArray","oldData","calculateDomainListener","unionDomainFromLayers","layerAxisIndex","getDataDomain","domainValues","layerDomain","fieldDomain","fieldStr","_layerAxisIndex","src_listener_map_slicedToArray","fieldsVal","removeExitLayers","layersMap","markSet","listenerInf","_lifeCycleManager","notify","axesObj","temporalFields","filteredFields","_ref6","_ref7","_ref8","_ref9","_ref10","_timeDiffsByField","createGridLineLayer","vuConf","createGridLines","createFn","iteratorFn","atomicDef","_ref11","_ref12","transformDataModels","transformVal","_ref15","_ref16","layerAxisIndexVal","axesVal","lyr","disableUpdate","attachDataToLayers","transformedDataModels","dataSource","enableUpdate","_dimensionMeasureMap","getDimensionMeasureMap","retinalEncodingsAndMeasures","_layer$encodingFields","_retinalEncodingsAndM","src_helper_toConsumableArray","retinalFields","attachAxisToLayers","axisInf","props_defineProperty","_PROPS","createSelectionSet","originalData","attachPropagationListener","firebolt_helper_slicedToArray","dispatchQueuedSideEffects","firebolt_helper_toConsumableArray","clearActionHistory","payloadGenerator","brush","selectionDataModel","propPayload","getRangeFromData","propCriteria","isDimension","payload_generator_toConsumableArray","__default","propagateValues","propagationFieldInf","propagationFields","sideEfffects","mergedModel","sourceUnit","sourceCanvas","parentAlias","propagationBehaviour","propFields","facetByFields","getModelWithFacetData","schema1","data1","schema2","data2","data_propagator_toConsumableArray","groupId","behaviourInstance","propagationConf","sourceBehaviour","enabled","propConf","applyOnSource","propInf","UnitFireBolt","src_firebolt_classCallCheck","firebolt_possibleConstructorReturn","firebolt_getPrototypeOf","firebolt_assertThisInitialized","unitId","aliasName","propagationSourceCanvas","sourceUnitId","sourceSideEffects","sideEffectInstances","actionOnSource","mappedEffects","se","sideEffectChecker","enabledFn","payloadFn","sourceIdentifierFields","sourceBehaviours","persistent","firebolt_get","VisualUnit","visual_unit_classCallCheck","visual_unit_defineProperty","lifeCycleManager","_gridLinesSelection","_gridBandsSelection","_layerNamespaces","_transformedDataModels","localOptions","_firebolt","_rootSvg","class","renderGridLineLayers","gridLineParentGroup","_entry","grid_lines_slicedToArray","parentGroupClass","renderLayers","orderedLayers","layerParentGroup","layerDepOrder","_layerDepOrder","_sideEffectGroup","createSideEffectGroup","initSideEffects","rootSvg","_this$parentContainer","parentContainerInf","layerDefinition","layerDefinitions","components","layerIndex","startIndex","visual_unit_toConsumableArray","layersArr","_layersArr","markId","defArr","instanceValues","layerdeps","getLayerAxisIndex","_layer$config","stateStore","parentModel","dimValue","getNearestDimensionalValue","entryVal","pointInf","getMarkInfFromLayers","markInf","parsedIdentifiers","transposeArray","getPointsFromIdentifiers","visual_unit_construct","getFieldNames","fields1","matrix_model_toConsumableArray","createSelectedDataModel","uniqueKeyGenerator","keyArray","newDm","nextDepthUniqueValues","projectRows","allColumnProjections","rowProjections","optionalProjections","projectFields","_getFieldNames2","matrix_model_slicedToArray","projFieldNames","colProjFieldNames","pushToMatrix","valueCellCreator","_matrix$rowIndex","facetInfo","colProjections","rowProj","projIdx","_getFieldNames4","rowProjFieldNames","projectedDm","createValueCells","suppliedLayers","GeomCell","matrixLayers","horizontalAxis","verticalAxis","datamodelTransform","layerConfigArr","getLayerConfig","normalizedColumns","normalizedRows","geomCellKey","getCellKey","columnId","allFacets","cell_creator_toConsumableArray","rowFacets","colFacets","geomCell","updateCells","facetKey","createAxisCells","axisInst","_axisInst$config","AxisCell","BlankCell","headerPlaceholderGn","selectionObj","selectionKeys","keySet","createTextCells","generatePlaceholders","facetsAndProjections","encoders","valuesMatrix","rowKeys","columnKeys","takeAxisFrom","takeHeaderFrom","axisPlaceholderGn","selObj","axesMatrix","selObjProp","axesForDraw","rowsPrimary","rowPrime","columnsPrimary","colPrime","_selectionObj","rowsSecondary","columnsSecondary","getObjects","section","hContext","computeMatrices","componentRegistry","globalConfig","autoGroupBy","otherEncodings","matrixGnContext","getCellDef","isRowSizeEqual","isColumnSizeEqual","colCells","rowCells","resetSimpleAxes","newCacheMap","valueCellContext","serializeLayerConfig","extractFields","layerFields","flattenArray","getFieldsFromSuppliedLayers","suppliedLayerConfig","aggregationFns","nearestAggFns","resolvedAggFns","valueMatrixInfo","getMatrixModel","rowDataModels","colProj","firstLevelRowKeys","_rowDataModels","rowFacetFieldNames","selectedDataModel","newProjectedDataModels","_rowDataModels2","colFacetNames","firstLevelColumnKeys","dme","rIndex","cIndex","transposedColKeys","valueCellsCreator","placeholder","_mutateAxesFromMap","mutateAxesFromMap","xAxisSet","yAxisSet","axisId","createUnits","_generateMatrices","generateMatrices","leftHeaders","topHeaders","bottomHeaders","rightHeaders","cell_creator_slicedToArray","rowSec","colSec","leftFacets","rightFacets","rowPriority","colPriority","leftMatrix","rightMatrix","topMatrix","bottomMatrix","currentBottomLength","setAvailableSpace","rowMatrix","columnMatrix","RESOLVER_PROPS","MatrixResolver","matrix_resolver_classCallCheck","_registry","_layerConfig","_matrixLayers","_rowMatrix","_columnMatrix","_valueMatrix","_facets","_projections","_datamodelTransform","_units","_cacheMaps","_axes","maps","matrix_resolver_toConsumableArray","_horizontalAxis","_verticalAxis","matrixType","sideEffectRegistry","_this$dependencies","unitConfig","extractUnitConfig","globalStates","_this$getAllFields","retContext","getRetinalFieldsDomain","retinalEncoder","setCommonDomain","_this$axes","_this6","retinalAxes","updateModel","placeholders","bottomLeft","bottomRight","_this$dependencies3","showHeaders","matrix_resolver_slicedToArray","topCols","bottomCols","rowHeaders","blankCellCreator","footers","topLeft","topRight","ValueMatrix","matrixArr","value_matrix_classCallCheck","instancesById","cellValue","_instancesById","_matrix","_filterFn","rowWidth","currentRowWidth","getLogicalSpace","rowHeight","currentRowHeight","setMatrixInstances","_composition","createMatrices","matrixConfig","unsubscribeChangeListeners","retinalConfig","sanitizeRetinalConfig","retinalConf","confValue","getEncoder","groupType","fieldSanitizer","setAxisAndHeaders","placeholderInfo","getMatrices","_groupedDataModel","createRetinalAxes","setDomains","cornerMatrices","createHeaders","metaData","border","unionUnitDomains","registerDomainChangeListener","visual_group_props_defineProperty","visual_group_props_PROPS","cellRegistry","VisualGroup","visual_group_classCallCheck","visual_group_possibleConstructorReturn","visual_group_getPrototypeOf","componentSubRegistry","visual_group_assertThisInitialized","_selection","createUnitState","visual_group_helper_slicedToArray","createLayerState","setupChangeListeners","variable","findInGroup","channel","group_utils_this","facetType","projType","getRetinalAxes","getSimpleAxes","_this$resolver$getAll","visual_group_defineProperty","existingRemoveSet","select_toConsumableArray","firebolt_action_behaviour_map_defineProperty","action_behaviour_map_actionBehaviourMap","propagationBehaviourMap","_propagationBehaviour","firebolt_behaviour_effect_map_defineProperty","firebolt_behaviour_effect_map_behaviourEffectMap","propagationSideEffects","_propagationSideEffec","SCALE_FUNCTIONS","VALUE","canvasAlias","rawVal","check","assembleModelFromIdentifiers","src_firebolt_helper_toConsumableArray","LegendFireBolt","_Firebolt","legend_firebolt_classCallCheck","legend_firebolt_possibleConstructorReturn","legend_firebolt_getPrototypeOf","legend_firebolt_inherits","legend_firebolt_createClass","behaviourName","getCriteriaFromData","firebolt_physical_defineProperty","physical_physicalActions","boundingBox","gradientDimensions","axisScale","rangeShifter","drag_defineProperty","getSelectionCriteria","selectionBoxMeasure","drawingInfMeasure","subjectStartPoint","gradientDimension","legendGradContainer","legendSelGroup","enterFn","getMousePos","boundingClientRect","selection_box_drag_defineProperty","fadeOut","brighten","LegendHighlighter","legend_highlighter_classCallCheck","legend_highlighter_possibleConstructorReturn","legend_highlighter_getPrototypeOf","legendContainer","resetLogicalSpace","title","_title","ALIGN","DEFAULT_MEASUREMENT","LEGEND_TITLE","borderStyle","borderColor","bounds","upper","ICON_MAP","getScaleInfo","scaleType","steps","scaleFn","getInterpolatedData","domainForLegend","interpolatedFn","getDomainBounds","domainBounds","domainLeg","ele","legend_helper_defineProperty","getScaleFactor","SimpleLegend","simple_legend_classCallCheck","_metaData","_fieldName","_labelManager","_cells","defaultMeasurement","_computedStyle","legendBehaviours","_canvasAlias","getItemMeasures","_labelManager$getOriS","effPadding","effBorder","effMargin","dataFromScale","titleSpace","getTitleSpace","titleHeight","titleWidth","labelSpaces","getLabelSpaces","_computeItemSpaces","computeItemSpaces","maxItemSpaces","textOrientation","itemSpaces","iconSpaces","maxIconWidth","labelSpace","itemSpace","iconSpace","newLabelWidth","titleSpaces","_this$measurement2","titleCreator","titleContainer","marginPosition","_this$config4","_this$measurement3","renderTitle","simple_legend_defineProperty","legendOrientation","position_config_defineProperty","_legendOrientation","datasets","itemContainerMeasures","getStepSpacesInfo","iconHeight","iconWidth","stepPadding","horizontal","vertical","positionConfig","_positionConfig","alignmentMap","_alignmentMap","itemStack","_itemStack","createLegendSkeleton","gradWidth","gradHeight","maxGradHeight","maxGradWidth","legendBody","legendItem","getItemContainers","legendInstance","positionObj","createItemSkeleton","itemSkeleton","alignClass","applyItemStyle","measureType","stepColorCheck","_context$measurement","renderIcon","defaultIcon","DiscreteLegend","_getScaleInfo","discrete_legend_toConsumableArray","_field$schema","discrete_legend_defineProperty","discrete_legend_get","discrete_legend_getPrototypeOf","renderDiscreteItem","_context$measurement2","_item$icon","text-align","getGradientDomain","accumulator","currentValue","MAX_VALUE","MIN_VALUE","legendGradSvg","legendGradCont","linearGradient","makeLinearGradient","legendRect","GradientLegend","gradient_legend_toConsumableArray","gradient_legend_defineProperty","newAxis","axisSpace","axisDomainLength","_legendGradientSvg","gradient_legend_get","gradient_legend_getPrototypeOf","renderGradient","_createLegendSkeleton","StepLegend","step_legend_toConsumableArray","step_legend_defineProperty","lowerBounds","upperBounds","step_legend_get","step_legend_getPrototypeOf","stepData","renderStepItem","_context$measurement3","_item$icon2","_positionConfig$posit","PADDING","BORDER","MARGIN","TITLE_TEMPLATE_NOT_ALLOWED_TAGS","LEGEND_TYPE_MAP","constants_defineProperty","_LEGEND_TYPE_MAP","HORIZONTAL_CENTER","VERTICAL_CENTER","share","operators_construct","operators_toConsumableArray","strings","htmlCode","expLn","frag","createDocumentFragment","treeShakeNode","nodeType","Node","ELEMENT_NODE","tagName","childNodes","canvasIterator","canvases","cFn","canvas","visualGroup","matrixInstance","_throwback","actionModel","ActionModel","action_model_classCallCheck","_registrableComponents","registerPropagationBehaviourMap","dissociateBehaviour","dissociateSideEffect","policy","registrableComponents","mergedPolicy","aliases","comp","*","propagationPayload","propagationCanvas","crossInteractionPolicy","TITLE_CONFIG","SUB_TITLE_CONFIG","maxLines","LAYOUT_ALIGN","canvas_local_options_defineProperty","_localOptions","canvasOptions","_canvasOptions","_sanitized","titleConfig","subtitle","sub","subtitleConfig","LayoutComponent","layoutComponent_classCallCheck","_boundBox","_renderAt","_alignWith","_alignment","_componentName","_className","DummyComponent","newDimensions","renderAt","component","componentName","pagination","scrollBar","thickness","speed","legend","minHeight","minCharacters","verticalAlign","collapse","invalidValues","DEFAULT_WIDTH","DEFAULT_HEIGHT","DEFAULT_CLASS_NAME","NODE_PREFIX","DefinitionModel","definitionModel_classCallCheck","_host","host","_cut","cut","_ratioWeight","ratioWeight","_preferred","preferred","_lanes","lanes","_remainingHeight","_remainingWidth","remainingHeight","remainingWidth","getNodeId","_uid","yExtraSpace","smallestHeight","getCutType","smallestExtraHeightHorizontally","MAX_SAFE_INTEGER","containerHeight","hostHeight","xExtraSpace","smallestWidth","smallestExtraWidthVertically","containerWidth","hostWidth","createPlaceHolderComponent","placeComponent","definitionModel","leftOvercomponentRationWidth","isPreferred","isGridComponent","componentRatioWidth","leftHeight","leftWidth","_component$getLogical","componentHeight","componentWidth","firstLaneConfig","firstLane","secondLane","tree_classCallCheck","_parentCut","_this$_children","tree_toConsumableArray","parentCut","bound","nodeconfig","searchNode","childNode","nodeId","deleteSearchNode","LayoutModel","measurements","layout_model_classCallCheck","_measurements","_root","createTree","setBoundBox","addChildren","lane","allocateBoundingBox","totalWeight","carry","lastSibling","ratio","setHostSpatialConfig","setHostPosition","negotiateDimension","alteredDim","nonAlteredDim","cumultiveExtraSpaceAmt","childrenLength","extraSpaceAmt","computePosition","determineBoundBox","bb","_lastSibling$boundBox","_top","_left","_height","_width","_instance$parent$boun","setSpatialConfig","Utils","utils_createClass","isDOMElement","getID","getElement","findContainer","coordinate","removeDiv","divId","DataPoint","data_point_classCallCheck","DataParser","data_parser_classCallCheck","data_parser_createClass","defaultDataPointLogic","nodepoints","getnodePoints","datapoint","HTMLDataAdapter","_DataParser","html_data_classCallCheck","html_data_possibleConstructorReturn","html_data_getPrototypeOf","html_data_inherits","html_data_createClass","getCoordinates","html_data_get","Renderer","renderer_classCallCheck","renderer_createClass","initRenderer","__logicalTree","HTMLRenderer","_Renderer","html_renderer_classCallCheck","html_renderer_possibleConstructorReturn","html_renderer_getPrototypeOf","_coordinates","html_renderer_inherits","html_renderer_createClass","createhtml","mainDiv","html_renderer_get","parentDiv","createAndCustomiseParent","hasHost","createAndPositionDiv","_objectSpread","div","coordinates","findNode","nodeID","renderer","renderHTML","DrawingManager","drawing_manager_classCallCheck","_componentMap","componentMap","_layoutClassName","layoutClassName","_renderer","drawing_manager_createClass","drawLayout","resolveAligment","componentData","alignWith","newNodeConfig","refNode","alignment","drawComponent","DefinitionManager","definition_manager_classCallCheck","_prioritySequence","_totalHeight","_totalWidth","_targetComponentMap","prepareTargetComponentMap","targetComponentMap","canvasComponent","tempDefModel","componentRef","getComponent","placeGridComponent","gridComponents","iscolumnPreffered","_placeComponent","rowpreffred","LayoutDef","layout_def_classCallCheck","_layoutDefinition","layout_def_createClass","addComponent","layoutDefinition","addMultipleComponent","componentArray","sanitizedDefinition","sanitizeConfig","hostObj","hostID","childHost","resetComponentMap","LayoutManager","layout_manager_classCallCheck","_dimension","_skeletonType","skeletonType","_layoutDef","_drawingManager","_rootNodeID","con","resetNode","updateNode","compute","_layout","calLayOutDef","_context$dimension","layoutDef","prioritySequence","generateConfigModel","negotiate","broadcast","layoutComponents","componentArr","compo","setupChangeListener","allOptions","_allOptions","canvas_helper_toConsumableArray","nameSpaceProps","equalityChecker","option","updateChecker","dispatchProps","_cachedProps","notifyAnimationEnd","centerMatrix","layout","viewInfo","viewMatricesInfo","promises","cellArr","lifeCycle","animDonePromises","animationDone","axisArr","applyInteractionPolicy","interactionPolicy","_interactionPolicy","_crossInteractionPolicy","unitFireBolt","changeBehaviourStateOnPropagation","changeSideEffectStateOnPropagation","createLayoutManager","src_options","isInteger","minUnitWidth","minUnitHeight","oldConf","fixScrollBarConfig","VIEW_INDEX","ROW_MATRIX_INDEX","2","COLUMN_MATRIX_INDEX","HEIGHT","ROW_ROOT","COLUMN_ROOT","VERTICAL","HORIZONTAL","GenericLayout","generic_layout_classCallCheck","_matrices","_centerMatrix","_mountPoint","DEFAULT_CONFIGURATION","grid_layout_defaults_defineProperty","_DEFAULT_CONFIGURATIO","_FieldNames$BORDER","DEFAULT_MEASUREMENTS","_DEFAULT_MEASUREMENTS","findInPage","page","combineMatrices","isTransposed","joinedMatrix","utils_toConsumableArray","rowData","computeLogicalSpace","maxMeasures","_config$isTransposed","unitMeasures","_getMeasureInfo","getMeasureInfo","firstMeasure","secondMeasure","minMeasures","getMinMeasures","_logicalSpace","utils_defineProperty","valueItem","maxMeasure","firstMeasureValue","secondMeasureValue","valueArray","_item$space","fMeasure","sMeasure","createMatrixEachLevel","_arr$i","extraCellsRemover","beg","distribution","extraCellLengths","VisualMatrix","visual_matrix_classCallCheck","_lastLevelKey","_primaryMatrix","_secondaryMatrix","_maxMeasures","_availableSpace","_layoutMatrix","_tree","_createTree2","matrixTree","lastLevelKey","layoutMatrix","primaryMatrix","secondaryMatrix","breakPage","primaryMatrixLength","newMatrix","keyLength","heightMeasures","populateMaxMeasures","widthMeasures","calculateDepth","viewableMatrix","createViewPortMatrix","viewableMeasures","redistributeSpaces","childDepth","createMatrixInstances","matrixInfo","breakPointer","_breakPointer","brokenMatrix","breakMatrix","nextLevel","removeExtraCells","RowVisualMatrix","row_matrix_classCallCheck","row_matrix_possibleConstructorReturn","row_matrix_getPrototypeOf","maxHeights","maxWidths","matrixInst","cellDimOptions","matrixIndex","_this2$getCellDimensi","getCellDimensions","widths","rowHeights","columnWidths","primary","secondary","begCellLen","endCellLen","remainaingAvailWidth","remainaingWidth","cWidths","conditions","maxPrioritySpace","availableWidth","currentWidth","prioritySpace","logicalWidths","getPriorityDistribution","mWidth","mHeight","redistributeViewSpaces","computeViewableSpaces","rHeights","gutter","spaceTakenByColumn","spaces","getDistributedHeight","heightWithoutGutter","distSum","gutterSum","availableHeight","colLen","distHeight","borderWidth","colHeight","colWidth","heights","ColumnVisualMatrix","column_matrix_classCallCheck","column_matrix_possibleConstructorReturn","column_matrix_getPrototypeOf","remainaingHeight","heightDist","divider","spaceTakenByRow","getDistributedWidth","layoutConfig","distWidth","rowLen","oldLogicalSpace","heightDistribution","getMatrixMeasurement","setViewSpaces","pointerType","viewSpaces","pointer","computations_defineProperty","paginationDetailsMap","scrollType","paginationMeasureGetter","relatedMaxMeasure","getMatrixMeasureForPagination","measureDetails","actualMeasure","scrollInfo","getMatrixHeightDetails","columnMatrixWidth","_getHeightRequiredByC","getHeightRequiredByColMatrix","maxColumnMatrixHeight","columnViewSpace","getViewableSpaces","columnPointer","columnMatrixHeight","maxHeightAvailableForRowMatrix","rowMatrixHeight","bufferCondition","isScroll","getActualBufferFromConfig","computations_slicedToArray","getBufferFromCondition","currentBufferType","horizontalBuffer","verticalBuffer","computeLayoutMeasurements","_getMatrixWidthDetail","getMatrixWidthDetails","_layout$config3","rowMatrixWidth","maxRowMatrixWidth","maxWidthAvailableForColumnMatrix","_getMatrixHeightDetai","_getActualBufferFromC","rowViewableSpaces","columnViewableSpaces","setValueMatrixMeasurements","computations_toConsumableArray","rowWidthsPrimary","rowWidthsSecondary","columnHeightsPrimary","columnHeightsSecondary","measureSum","total","GridLayout","layout_classCallCheck","layout_possibleConstructorReturn","layout_getPrototypeOf","_layoutId","_viewInfo","defaultViewInfo","_scrollInfo","generateVisualMatrices","begColCells","endColCells","gutterSpace","layout_helper_slicedToArray","_center","_bottom","layout_helper_toConsumableArray","RowMatrix","ColumnMatrix","layout_get","_computeLayoutMeasure","setViewInformation","pageNumber","pageType","totalPages","layout_defineProperty","renderGrid","currentPage","maxRowHeight","maxColWidth","rowPointer","getViewMatrices","rowMatrices","getViewableMatrices","columnMatrices","centralMatrixPointer","rowMatrixLen","columnMatrixLen","rowPages","columnPages","layoutDimensions","getViewMeasurements","_layout$config","rowSpaces","colSpaces","rightWidth","topHeight","bottomHeight","centerHeight","centerWidth","viewWidth","viewHeight","actualCenterMeasures","totalMeasures","unitHeights","unitWidths","borderMap","border_helper_defineProperty","_borderMap","specificBorderApplier","borderTypes","showBorders","borderInfo","borderType","applySpecificBorder","applyBorders","borderApplierFn","borderApplier","borderMapVal","orderMaker","nestByStack","updateArr","optionalParams","currStack","prevStack","arrVal","stackVal","currElemIndex","newElem","arrElem","returnArr","spanCalculator","isNull","maskCreator","_nestByStack","viewMatrix","hierarchy","_nestByStack2","spanGenerator","spans","ridx","currSpan","getOrder","isReverse","matrixSpanGeneratorMap","span_maker_defineProperty","_matrixSpanGeneratorM","orderGetter","viewMatrixMaker","spanMaker","matrixSpanGenerator","spanApplier","spaceAllocationDueToSpan","spanApplierMap","_spanApplierMap","TransactionSupport","INTERFACE_IMPl","CLASSPREFIX","HEADER","DATA","AXES","FACET_BY_FIELDS","FIELDS","TRANSFORM","LAYER_DEF","CONFIG","DETAIL_FIELDS","TEXT","AXIS","GEOM","BLANK","SimpleCell","simple_cell_classCallCheck","enums_defaults_defineProperty","_DEFAULT_CONFIG","_CONSTANTS$MARGIN","CONSTANTS","DEFAULT_PROPS","minSpacing","src_props_defineProperty","visual_cell_src_props_PROPS","caption","smartText","axis_cell_classCallCheck","axis_cell_possibleConstructorReturn","axis_cell_getPrototypeOf","_availHeight","_availWidth","axis_cell_assertThisInitialized","computeAxisSpace","logicalWidth","logicalHeight","spaceFixer","_axis$getLogicalSpace","_axis$config2","wrapperDiv","blank_cell_classCallCheck","blank_cell_possibleConstructorReturn","blank_cell_getPrototypeOf","blank_cell_assertThisInitialized","setSmartText","_context$minSpacing","minHeightSpace","minWidthSpace","paddedHeight","paddedWidth","text_cell_classCallCheck","text_cell_possibleConstructorReturn","text_cell_getPrototypeOf","text_cell_assertThisInitialized","computeTextSpace","_context$minSpacing2","minText","_minTextSpace","smartSpace","textAlign","vAlign","_this$smartText","translation","middle","geom_cell_classCallCheck","geom_cell_possibleConstructorReturn","geom_cell_getPrototypeOf","_unit","_datamodel","_facetByFields","_transform","_caption","geom_cell_assertThisInitialized","lockModel","unlockModel","captionSpace","computeGeomSpace","getCaptionSpace","captionDom","DEFAULT_PLACEHOLDERS","src_defaults_defineProperty","_DEFAULT_PLACEHOLDERS","resolveTitleSubTitleContent","rawContent","escapeHTML","htmlEscapes","&","<",">","\"","'","/","createHeading","prevCell","cellType","_minTickDiff","legendInitializer","legendConfig","prevLegends","legends","headerHeight","legendInfo","legendCreator","LegendCls","dataset","scaleProps","_scale$config","stepMapper","dataInfo","legendMeasures","getGroupByData","setLegendMeasures","MuzeComponent","_this$boundBox","HeaderComponent","headerComponent_classCallCheck","headerComponent_possibleConstructorReturn","headerComponent_getPrototypeOf","setParams","cont","renderHeader","LegendComponent","legendComponent_classCallCheck","legendComponent_possibleConstructorReturn","legendComponent_getPrototypeOf","legendSpace","sectionComponents","_this$params$config","legendMount","legWidth","legHeight","sections","currHeight","currWidth","leg","legendHeight","legendWidth","renderLegend","_defaultAlignmentHelp","defaultAlignmentHelper","arrowSizeMap","getUnitPositions","totalLength","viewLength","currentLen","unitPosition","createScrollBarArrow","createScrollBarRect","mover","applyScrollMouseDownAction","moverRect","scrollMaker","_mover$node$getBoundi","_rect$node$getBoundin","rectX","rectY","changeMoverPosition","registerListenerOnArrow","arrowType","_components","isTouchDevice","applyMoverDrag","moverStartPos","rectStartPos","distanceMoved","actualPosition","pageXOffset","pageYOffset","applyRectClick","emptyScrollAreaClick","manager","unitPositions","ScrollMaker","scroll_maker_classCallCheck","_attachedScrollAction","_unitPositions","scroll_maker_createClass","scrollTo","scrollDeltaTo","createScroll","scrollBarContainer","scrollContainerHelper","attachScrollAction","externalScrollAction","detachScrollAction","scrollMakerMap","_ScrollMaker","HorizontalScrollMaker","horizontal_scroll_maker_classCallCheck","horizontal_scroll_maker_possibleConstructorReturn","horizontal_scroll_maker_getPrototypeOf","horizontal_scroll_maker_inherits","horizontal_scroll_maker_createClass","horizontal_scroll_maker_get","prevArrow","nextArrow","_this$logicalSpace","scrollBarWithouArrowLength","_scrollBarWithouArrowLength","_this$_components$mov","positionAdjuster","newPosition","currentPos","_this$_components$mov2","moverPos","movedViewLength","performAttachedScrollFunction","delta","_this$_components$mov3","scrollPercentage","movement","VerticalScrollMaker","vertical_scroll_maker_classCallCheck","vertical_scroll_maker_possibleConstructorReturn","vertical_scroll_maker_getPrototypeOf","vertical_scroll_maker_inherits","vertical_scroll_maker_createClass","vertical_scroll_maker_get","ScrollComponent","scroll_component_classCallCheck","scrollBarComponentConfig","scroll_component_possibleConstructorReturn","scroll_component_getPrototypeOf","unitIndex","sanitizedUnitIndex","externalAction","MatrixComponent","matrix_component_classCallCheck","matrix_component_possibleConstructorReturn","matrix_component_getPrototypeOf","_this$params$config$s","containerForMatrix","applyScroll","_cellSpanMaker","cellSpanMaker","_matrixSpanGenerator","renderTable","applySpans","applier","renderPlaceholders","renderMatrix","applyScrollAction","scollDistance","GridComponent","grid_component_classCallCheck","grid_component_possibleConstructorReturn","grid_component_getPrototypeOf","_this$component$viewI","matrixDim","matrixName","updateWrapper","matrixWrapper","allComponents","_scrollBarManager","wheelDeltaX","wheelDeltaY","scrollBarManager","triggerScrollBarAction","movedView","scrollActionApplier","_this$component$0$0$b","sanitizeGrid","headerMap","headerCell","configType","createHeaderWrapper","headerType","layoutManager","renderDetails","_headerMap$headerType","headerConfig","component_wrapper_maker_objectSpread","wrapperParams","existingComponent","createScrollBarWrapper","scrollBarType","grid","_scrollBarMap$scrollB","scrollBarMap","layoutBasedMeasure","viewMeasure","rowAlign","colAlign","componentWrapperMaker","createLegendWrapper","legendWrapper","gridLayoutWrapper","verticalScrollBar","horizontalScrollBar","ScrollManager","scroll_manager_classCallCheck","_scrollBarComponents","_attachedComponents","scroll_manager_createClass","scrollBarComponents","attachedComponents","performScrollAction","getRenderDetails","_mount$getBoundingCli","heightAttr","widthAttr","visGroup","_visGroup$placeholder","legendPosition","layoutArrangement","arrangeComponents","_titleLayouts","titleLayouts","component_resolver_defineProperty","legendLayouts","titlePosition","subtitlePosition","availableHeightForCanvas","availableWidthForCanvas","_createHeaders","canvasHeight","canvasWidth","isSubtitle","headerOptions","_createHeading","createLegend","getLegendSpace","mountSpace","componentIndexes","renderLayout","_layoutManager","gridLayout","compWrappers","componentWrappers","gridWrapper","createScrollManager","horizontalScrollWrapper","verticalScrollWrapper","hScrollBar","vScrollBar","registerComponents","attachScrollListener","defaultInteractionPolicy","isMeasure","group_firebolt_toConsumableArray","getFieldsFromChannel","colDim","fieldInf","unitColFacets","equals","unitRowFacets","propagateWith","defaultCrossInteractionPolicy","propagationCanvasAlias","propagationUnit","GroupFireBolt","group_firebolt_classCallCheck","group_firebolt_possibleConstructorReturn","group_firebolt_getPrototypeOf","behaviouralAction","validFields","APP_INITIAL_STATE","app","Canvas","globalDependencies","canvas_classCallCheck","canvas_possibleConstructorReturn","canvas_getPrototypeOf","canvas_defineProperty","canvas_slicedToArray","canvas_assertThisInitialized","initedComponents","initCanvas","createGroupState","_VisualGroup$getState2","canvas_helper_slicedToArray","localState","register","prepareLayout","triggerReflow","setLayoutInfForUnits","getBoundBox","getRootNodeId","setLabelRotationForAxes","rotationVal","getAxes","initialSettings","regEntry","COMPONENTS","SUBREGISTRIES","regObj","globalCache","defaultRegistry","overrideRegistryDefinitions","overrideRegistry","muze","_transactor2","muze_slicedToArray","env","globalStore","componentSubRegistryDef","settings","withSettings","enableChainedTransaction","transactionModel","transactionEndpoint","transactionItems","Smartlabel","SideEffects","standards","Behaviours","pkg","operators","utils","lookupWhat","lookupDetails","lookupTarget","deps"],"mappings":"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ACAzB,IAAI0gD,gCCESqX,cAZK,IAAItyD,MAAM,GAAGhE,OAC/B,qBACA,2BACA,iCACA,uCACA,6CACA,mDACA,yDACA,+DACA,sEACAzB,IAAI0gD,gCCESqX,cAZK,IAAItyD,MAAM,GAAGhE,OAC/B,qBACA,2BACA,iCACA,uCACA,6CACA,mDACA,yDACA,+DACA,sEACAzB,IAAI0gD,gCCESqX,gBAZK,IAAItyD,MAAM,GAAGhE,OAC/B,qBACA,2BACA,iCACA,uCACA,6CACA,mDACA,yDACA,+DACA,sEACAzB,IAAI0gD,gCCESqX,gBAZK,IAAItyD,MAAM,GAAGhE,OAC/B,qBACA,2BACA,iCACA,uCACA,6CACA,mDACA,yDACA,+DACA,sEACAzB,IAAI0gD,gCCESqX,kBAZK,IAAItyD,MAAM,GAAGhE,OAC/B,qBACA,2BACA,iCACA,uCACA,6CACA,mDACA,yDACA,+DACA,sEACAzB,IAAI0gD,gCCASqX,cAVK,IAAItyD,MAAM,GAAGhE,OAC/B,qBACA,2BACA,iCACA,uCACA,6CACA,mDACA,0DACAzB,IAAI0gD,gCCESqX,cAVK,IAAItyD,MAAM,GAAGhE,OAC/B,qBACA,2BACA,iCACA,uCACA,6CACA,mDACA,0DACAzB,IAAI0gD,gCCESqX,cAVK,IAAItyD,MAAM,GAAGhE,OAC/B,qBACA,2BACA,iCACA,uCACA,6CACA,mDACA,0DACAzB,IAAI0gD,gCCESqX,cAVK,IAAItyD,MAAM,GAAGhE,OAC/B,qBACA,2BACA,iCACA,uCACA,6CACA,mDACA,0DACAzB,IAAI0gD,gCCESqX,gBAVK,IAAItyD,MAAM,GAAGhE,OAC/B,qBACA,2BACA,iCACA,uCACA,6CACA,mDACA,0DACAzB,IAAI0gD,gCCESqX,cAVK,IAAItyD,MAAM,GAAGhE,OAC/B,qBACA,2BACA,iCACA,uCACA,6CACA,mDACA,0DACAzB,IAAI0gD,gCCESqX,cAVK,IAAItyD,MAAM,GAAGhE,OAC/B,qBACA,2BACA,iCACA,uCACA,6CACA,mDACA,0DACAzB,IAAI0gD,gCCESqX,cAVK,IAAItyD,MAAM,GAAG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","file":"muze.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"muze\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"muze\"] = factory();\n\telse\n\t\troot[\"muze\"] = factory();\n})(window, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 7);\n","(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"DataModel\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"DataModel\"] = factory();\n\telse\n\t\troot[\"DataModel\"] = factory();\n})(window, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"./src/index.js\");\n","import dsv from \"./dsv\";\n\nvar csv = dsv(\",\");\n\nexport var csvParse = csv.parse;\nexport var csvParseRows = csv.parseRows;\nexport var csvFormat = csv.format;\nexport var csvFormatRows = csv.formatRows;\n","var EOL = {},\n    EOF = {},\n    QUOTE = 34,\n    NEWLINE = 10,\n    RETURN = 13;\n\nfunction objectConverter(columns) {\n  return new Function(\"d\", \"return {\" + columns.map(function(name, i) {\n    return JSON.stringify(name) + \": d[\" + i + \"]\";\n  }).join(\",\") + \"}\");\n}\n\nfunction customConverter(columns, f) {\n  var object = objectConverter(columns);\n  return function(row, i) {\n    return f(object(row), i, columns);\n  };\n}\n\n// Compute unique columns in order of discovery.\nfunction inferColumns(rows) {\n  var columnSet = Object.create(null),\n      columns = [];\n\n  rows.forEach(function(row) {\n    for (var column in row) {\n      if (!(column in columnSet)) {\n        columns.push(columnSet[column] = column);\n      }\n    }\n  });\n\n  return columns;\n}\n\nexport default function(delimiter) {\n  var reFormat = new RegExp(\"[\\\"\" + delimiter + \"\\n\\r]\"),\n      DELIMITER = delimiter.charCodeAt(0);\n\n  function parse(text, f) {\n    var convert, columns, rows = parseRows(text, function(row, i) {\n      if (convert) return convert(row, i - 1);\n      columns = row, convert = f ? customConverter(row, f) : objectConverter(row);\n    });\n    rows.columns = columns || [];\n    return rows;\n  }\n\n  function parseRows(text, f) {\n    var rows = [], // output rows\n        N = text.length,\n        I = 0, // current character index\n        n = 0, // current line number\n        t, // current token\n        eof = N <= 0, // current token followed by EOF?\n        eol = false; // current token followed by EOL?\n\n    // Strip the trailing newline.\n    if (text.charCodeAt(N - 1) === NEWLINE) --N;\n    if (text.charCodeAt(N - 1) === RETURN) --N;\n\n    function token() {\n      if (eof) return EOF;\n      if (eol) return eol = false, EOL;\n\n      // Unescape quotes.\n      var i, j = I, c;\n      if (text.charCodeAt(j) === QUOTE) {\n        while (I++ < N && text.charCodeAt(I) !== QUOTE || text.charCodeAt(++I) === QUOTE);\n        if ((i = I) >= N) eof = true;\n        else if ((c = text.charCodeAt(I++)) === NEWLINE) eol = true;\n        else if (c === RETURN) { eol = true; if (text.charCodeAt(I) === NEWLINE) ++I; }\n        return text.slice(j + 1, i - 1).replace(/\"\"/g, \"\\\"\");\n      }\n\n      // Find next delimiter or newline.\n      while (I < N) {\n        if ((c = text.charCodeAt(i = I++)) === NEWLINE) eol = true;\n        else if (c === RETURN) { eol = true; if (text.charCodeAt(I) === NEWLINE) ++I; }\n        else if (c !== DELIMITER) continue;\n        return text.slice(j, i);\n      }\n\n      // Return last token before EOF.\n      return eof = true, text.slice(j, N);\n    }\n\n    while ((t = token()) !== EOF) {\n      var row = [];\n      while (t !== EOL && t !== EOF) row.push(t), t = token();\n      if (f && (row = f(row, n++)) == null) continue;\n      rows.push(row);\n    }\n\n    return rows;\n  }\n\n  function format(rows, columns) {\n    if (columns == null) columns = inferColumns(rows);\n    return [columns.map(formatValue).join(delimiter)].concat(rows.map(function(row) {\n      return columns.map(function(column) {\n        return formatValue(row[column]);\n      }).join(delimiter);\n    })).join(\"\\n\");\n  }\n\n  function formatRows(rows) {\n    return rows.map(formatRow).join(\"\\n\");\n  }\n\n  function formatRow(row) {\n    return row.map(formatValue).join(delimiter);\n  }\n\n  function formatValue(text) {\n    return text == null ? \"\"\n        : reFormat.test(text += \"\") ? \"\\\"\" + text.replace(/\"/g, \"\\\"\\\"\") + \"\\\"\"\n        : text;\n  }\n\n  return {\n    parse: parse,\n    parseRows: parseRows,\n    format: format,\n    formatRows: formatRows\n  };\n}\n","export {default as dsvFormat} from \"./dsv\";\nexport {csvParse, csvParseRows, csvFormat, csvFormatRows} from \"./csv\";\nexport {tsvParse, tsvParseRows, tsvFormat, tsvFormatRows} from \"./tsv\";\n","import dsv from \"./dsv\";\n\nvar tsv = dsv(\"\\t\");\n\nexport var tsvParse = tsv.parse;\nexport var tsvParseRows = tsv.parseRows;\nexport var tsvFormat = tsv.format;\nexport var tsvFormatRows = tsv.formatRows;\n","export { DataFormat, FilteringMode } from '../enums';\n/**\n * The event name for data propagation.\n */\nexport const PROPAGATION = 'propagation';\n\n/**\n * The name of the unique row id column in DataModel.\n */\nexport const ROW_ID = '__id__';\n\n/**\n * The enums for operation names performed on DataModel.\n */\nexport const DM_DERIVATIVES = {\n    SELECT: 'select',\n    PROJECT: 'project',\n    GROUPBY: 'group',\n    COMPOSE: 'compose',\n    CAL_VAR: 'calculatedVariable',\n    BIN: 'bin'\n};\n\nexport const JOINS = {\n    CROSS: 'cross',\n    LEFTOUTER: 'leftOuter',\n    RIGHTOUTER: 'rightOuter',\n    NATURAL: 'natural',\n    FULLOUTER: 'fullOuter'\n};\n\nexport const LOGICAL_OPERATORS = {\n    AND: 'and',\n    OR: 'or'\n};\n","import FlatJSON from './flat-json';\nimport DSVArr from './dsv-arr';\nimport DSVStr from './dsv-str';\nimport { detectDataFormat } from '../utils';\n\n/**\n * Parses the input data and detect the format automatically.\n *\n * @param {string|Array} data - The input data.\n * @param {Object} options - An optional config specific to data format.\n * @return {Array.<Object>} Returns an array of headers and column major data.\n */\nfunction Auto (data, options) {\n    const converters = { FlatJSON, DSVStr, DSVArr };\n    const dataFormat = detectDataFormat(data);\n\n    if (!dataFormat) {\n        throw new Error('Couldn\\'t detect the data format');\n    }\n\n    return converters[dataFormat](data, options);\n}\n\nexport default Auto;\n","import { columnMajor } from '../utils';\n\n/**\n * Parses and converts data formatted in DSV array to a manageable internal format.\n *\n * @param {Array.<Array>} arr - A 2D array containing of the DSV data.\n * @param {Object} options - Option to control the behaviour of the parsing.\n * @param {boolean} [options.firstRowHeader=true] - Whether the first row of the dsv data is header or not.\n * @return {Array} Returns an array of headers and column major data.\n * @example\n *\n * // Sample input data:\n * const data = [\n *    [\"a\", \"b\", \"c\"],\n *    [1, 2, 3],\n *    [4, 5, 6],\n *    [7, 8, 9]\n * ];\n */\nfunction DSVArr (arr, options) {\n    const defaultOption = {\n        firstRowHeader: true,\n    };\n    options = Object.assign({}, defaultOption, options);\n\n    let header;\n    const columns = [];\n    const push = columnMajor(columns);\n\n    if (options.firstRowHeader) {\n        // If header present then mutate the array.\n        // Do in-place mutation to save space.\n        header = arr.splice(0, 1)[0];\n    } else {\n        header = [];\n    }\n\n    arr.forEach(field => push(...field));\n\n    return [header, columns];\n}\n\nexport default DSVArr;\n","import { dsvFormat as d3Dsv } from 'd3-dsv';\nimport DSVArr from './dsv-arr';\n\n/**\n * Parses and converts data formatted in DSV string to a manageable internal format.\n *\n * @todo Support to be given for https://tools.ietf.org/html/rfc4180.\n * @todo Sample implementation https://github.com/knrz/CSV.js/.\n *\n * @param {string} str - The input DSV string.\n * @param {Object} options - Option to control the behaviour of the parsing.\n * @param {boolean} [options.firstRowHeader=true] - Whether the first row of the dsv string data is header or not.\n * @param {string} [options.fieldSeparator=\",\"] - The separator of two consecutive field.\n * @return {Array} Returns an array of headers and column major data.\n * @example\n *\n * // Sample input data:\n * const data = `\n * a,b,c\n * 1,2,3\n * 4,5,6\n * 7,8,9\n * `\n */\nfunction DSVStr (str, options) {\n    const defaultOption = {\n        firstRowHeader: true,\n        fieldSeparator: ','\n    };\n    options = Object.assign({}, defaultOption, options);\n\n    const dsv = d3Dsv(options.fieldSeparator);\n    return DSVArr(dsv.parseRows(str), options);\n}\n\nexport default DSVStr;\n","import { columnMajor } from '../utils';\n\n/**\n * Parses and converts data formatted in JSON to a manageable internal format.\n *\n * @param {Array.<Object>} arr - The input data formatted in JSON.\n * @return {Array.<Object>} Returns an array of headers and column major data.\n * @example\n *\n * // Sample input data:\n * const data = [\n *    {\n *      \"a\": 1,\n *      \"b\": 2,\n *      \"c\": 3\n *    },\n *    {\n *      \"a\": 4,\n *      \"b\": 5,\n *      \"c\": 6\n *    },\n *    {\n *      \"a\": 7,\n *      \"b\": 8,\n *      \"c\": 9\n *    }\n * ];\n */\nfunction FlatJSON (arr) {\n    const header = {};\n    let i = 0;\n    let insertionIndex;\n    const columns = [];\n    const push = columnMajor(columns);\n\n    arr.forEach((item) => {\n        const fields = [];\n        for (let key in item) {\n            if (key in header) {\n                insertionIndex = header[key];\n            } else {\n                header[key] = i++;\n                insertionIndex = i - 1;\n            }\n            fields[insertionIndex] = item[key];\n        }\n        push(...fields);\n    });\n\n    return [Object.keys(header), columns];\n}\n\nexport default FlatJSON;\n","export { default as DSVArr } from './dsv-arr';\nexport { default as DSVStr } from './dsv-str';\nexport { default as FlatJSON } from './flat-json';\nexport { default as Auto } from './auto-resolver';\n","/* eslint-disable default-case */\n\nimport { FieldType, DimensionSubtype, DataFormat } from './enums';\nimport {\n    persistDerivation,\n    getRootGroupByModel,\n    propagateToAllDataModels,\n    getRootDataModel,\n    propagateImmutableActions,\n    addToPropNamespace,\n    sanitizeUnitSchema\n} from './helper';\nimport { DM_DERIVATIVES, PROPAGATION } from './constants';\nimport {\n    dataBuilder,\n    rowDiffsetIterator,\n    groupBy\n} from './operator';\nimport { createBinnedFieldData } from './operator/bucket-creator';\nimport Relation from './relation';\nimport reducerStore from './utils/reducer-store';\nimport { createFields } from './field-creator';\nimport InvalidAwareTypes from './invalid-aware-types';\n\n/**\n * DataModel is an in-browser representation of tabular data. It supports\n * {@link https://en.wikipedia.org/wiki/Relational_algebra | relational algebra} operators as well as generic data\n * processing opearators.\n * DataModel extends {@link Relation} class which defines all the relational algebra opreators. DataModel gives\n * definition of generic data processing operators which are not relational algebra complient.\n *\n * @public\n * @class\n * @extends Relation\n * @memberof Datamodel\n */\nclass DataModel extends Relation {\n    /**\n     * Creates a new DataModel instance by providing data and schema. Data could be in the form of\n     * - Flat JSON\n     * - DSV String\n     * - 2D Array\n     *\n     * By default DataModel finds suitable adapter to serialize the data. DataModel also expects a\n     * {@link Schema | schema} for identifying the variables present in data.\n     *\n     * @constructor\n     * @example\n     * const data = loadData('cars.csv');\n     * const schema = [\n     *      { name: 'Name', type: 'dimension' },\n     *      { name: 'Miles_per_Gallon', type: 'measure', unit : 'cm', scale: '1000', numberformat: val => `${val}G`},\n     *      { name: 'Cylinders', type: 'dimension' },\n     *      { name: 'Displacement', type: 'measure' },\n     *      { name: 'Horsepower', type: 'measure' },\n     *      { name: 'Weight_in_lbs', type: 'measure' },\n     *      { name: 'Acceleration', type: 'measure' },\n     *      { name: 'Year', type: 'dimension', subtype: 'datetime', format: '%Y' },\n     *      { name: 'Origin', type: 'dimension' }\n     * ];\n     * const dm = new DataModel(data, schema, { name: 'Cars' });\n     * table(dm);\n     *\n     * @public\n     *\n     * @param {Array.<Object> | string | Array.<Array>} data Input data in any of the mentioned formats\n     * @param {Array.<Schema>} schema Defination of the variables. Order of the variables in data and order of the\n     *      variables in schema has to be same.\n     * @param {object} [options] Optional arguments to specify more settings regarding the creation part\n     * @param {string} [options.name] Name of the datamodel instance. If no name is given an auto generated name is\n     *      assigned to the instance.\n     * @param {string} [options.fieldSeparator=','] specify field separator type if the data is of type dsv string.\n     */\n    constructor (...args) {\n        super(...args);\n\n        this._onPropagation = [];\n        this._sortingDetails = [];\n    }\n\n    /**\n     * Reducers are simple functions which reduces an array of numbers to a representative number of the set.\n     * Like an array of numbers `[10, 20, 5, 15]` can be reduced to `12.5` if average / mean reducer function is\n     * applied. All the measure fields in datamodel (variables in data) needs a reducer to handle aggregation.\n     *\n     * @public\n     *\n     * @return {ReducerStore} Singleton instance of {@link ReducerStore}.\n     */\n    static get Reducers () {\n        return reducerStore;\n    }\n\n    /**\n     * Configure null, undefined, invalid values in the source data\n     *\n     * @public\n     *\n     * @param {Object} [config] - Configuration to control how null, undefined and non-parsable values are\n     * represented in DataModel.\n     * @param {string} [config.undefined] - Define how an undefined value will be represented.\n     * @param {string} [config.null] - Define how a null value will be represented.\n     * @param {string} [config.invalid] - Define how a non-parsable value will be represented.\n     */\n    static configureInvalidAwareTypes (config) {\n        return InvalidAwareTypes.invalidAwareVals(config);\n    }\n\n    /**\n     * Retrieve the data attached to an instance in JSON format.\n     *\n     * @example\n     * // DataModel instance is already prepared and assigned to dm variable\n     *  const data = dm.getData({\n     *      order: 'column',\n     *      formatter: {\n     *          origin: (val) => val === 'European Union' ? 'EU' : val;\n     *      }\n     *  });\n     *  console.log(data);\n     *\n     * @public\n     *\n     * @param {Object} [options] Options to control how the raw data is to be returned.\n     * @param {string} [options.order='row'] Defines if data is retieved in row order or column order. Possible values\n     *      are `'rows'` and `'columns'`\n     * @param {Function} [options.formatter=null] Formats the output data. This expects an object, where the keys are\n     *      the name of the variable needs to be formatted. The formatter function is called for each row passing the\n     *      value of the cell for a particular row as arguments. The formatter is a function in the form of\n     *      `function (value, rowId, schema) => { ... }`\n     *      Know more about {@link Fomatter}.\n     *\n     * @return {Array} Returns a multidimensional array of the data with schema. The return format looks like\n     *      ```\n     *          {\n     *              data,\n     *              schema\n     *          }\n     *      ```\n     */\n    getData (options) {\n        const defOptions = {\n            order: 'row',\n            formatter: null,\n            withUid: false,\n            getAllFields: false,\n            sort: []\n        };\n        options = Object.assign({}, defOptions, options);\n        const fields = this.getPartialFieldspace().fields;\n\n        const dataGenerated = dataBuilder.call(\n            this,\n            this.getPartialFieldspace().fields,\n            this._rowDiffset,\n            options.getAllFields ? fields.map(d => d.name()).join() : this._colIdentifier,\n            options.sort,\n            {\n                columnWise: options.order === 'column',\n                addUid: !!options.withUid\n            }\n        );\n\n        if (!options.formatter) {\n            return dataGenerated;\n        }\n\n        const { formatter } = options;\n        const { data, schema, uids } = dataGenerated;\n        const fieldNames = schema.map((e => e.name));\n        const fmtFieldNames = Object.keys(formatter);\n        const fmtFieldIdx = fmtFieldNames.reduce((acc, next) => {\n            const idx = fieldNames.indexOf(next);\n            if (idx !== -1) {\n                acc.push([idx, formatter[next]]);\n            }\n            return acc;\n        }, []);\n\n        if (options.order === 'column') {\n            fmtFieldIdx.forEach((elem) => {\n                const fIdx = elem[0];\n                const fmtFn = elem[1];\n\n                data[fIdx].forEach((datum, datumIdx) => {\n                    data[fIdx][datumIdx] = fmtFn.call(\n                        undefined,\n                        datum,\n                        uids[datumIdx],\n                        schema[fIdx]\n                    );\n                });\n            });\n        } else {\n            data.forEach((datum, datumIdx) => {\n                fmtFieldIdx.forEach((elem) => {\n                    const fIdx = elem[0];\n                    const fmtFn = elem[1];\n\n                    datum[fIdx] = fmtFn.call(\n                        undefined,\n                        datum[fIdx],\n                        uids[datumIdx],\n                        schema[fIdx]\n                    );\n                });\n            });\n        }\n\n        return dataGenerated;\n    }\n\n    /**\n     * Groups the data using particular dimensions and by reducing measures. It expects a list of dimensions using which\n     * it projects the datamodel and perform aggregations to reduce the duplicate tuples. Refer this\n     * {@link link_to_one_example_with_group_by | document} to know the intuition behind groupBy.\n     *\n     * DataModel by default provides definition of few {@link reducer | Reducers}.\n     * {@link ReducerStore | User defined reducers} can also be registered.\n     *\n     * This is the chained implementation of `groupBy`.\n     * `groupBy` also supports {@link link_to_compose_groupBy | composability}\n     *\n     * @example\n     * const groupedDM = dm.groupBy(['Year'], { horsepower: 'max' } );\n     * console.log(groupedDm);\n     *\n     * @public\n     *\n     * @param {Array.<string>} fieldsArr - Array containing the name of dimensions\n     * @param {Object} [reducers={}] - A map whose key is the variable name and value is the name of the reducer. If its\n     *      not passed, or any variable is ommitted from the object, default aggregation function is used from the\n     *      schema of the variable.\n     *\n     * @return {DataModel} Returns a new DataModel instance after performing the groupby.\n     */\n    groupBy (fieldsArr, reducers = {}, config = { saveChild: true }) {\n        const groupByString = `${fieldsArr.join()}`;\n        let params = [this, fieldsArr, reducers];\n        const newDataModel = groupBy(...params);\n\n        persistDerivation(\n            newDataModel,\n            DM_DERIVATIVES.GROUPBY,\n            { fieldsArr, groupByString, defaultReducer: reducerStore.defaultReducer() },\n            reducers\n        );\n\n        if (config.saveChild) {\n            this._children.push(newDataModel);\n        }\n        newDataModel._parent = this;\n\n        return newDataModel;\n    }\n\n    /**\n     * Performs sorting operation on the current {@link DataModel} instance according to the specified sorting details.\n     * Like every other operator it doesn't mutate the current DataModel instance on which it was called, instead\n     * returns a new DataModel instance containing the sorted data.\n     *\n     * DataModel support multi level sorting by listing the variables using which sorting needs to be performed and\n     * the type of sorting `ASC` or `DESC`.\n     *\n     * In the following example, data is sorted by `Origin` field in `DESC` order in first level followed by another\n     * level of sorting by `Acceleration` in `ASC` order.\n     *\n     * @example\n     * // here dm is the pre-declared DataModel instance containing the data of 'cars.json' file\n     * let sortedDm = dm.sort([\n     *    [\"Origin\", \"DESC\"]\n     *    [\"Acceleration\"] // Default value is ASC\n     * ]);\n     *\n     * console.log(dm.getData());\n     * console.log(sortedDm.getData());\n     *\n     * // Sort with a custom sorting function\n     * sortedDm = dm.sort([\n     *    [\"Origin\", \"DESC\"]\n     *    [\"Acceleration\", (a, b) => a - b] // Custom sorting function\n     * ]);\n     *\n     * console.log(dm.getData());\n     * console.log(sortedDm.getData());\n     *\n     * @text\n     * DataModel also provides another sorting mechanism out of the box where sort is applied to a variable using\n     * another variable which determines the order.\n     * Like the above DataModel contains three fields `Origin`, `Name` and `Acceleration`. Now, the data in this\n     * model can be sorted by `Origin` field according to the average value of all `Acceleration` for a\n     * particular `Origin` value.\n     *\n     * @example\n     * // here dm is the pre-declared DataModel instance containing the data of 'cars.json' file\n     * const sortedDm = dm.sort([\n     *     ['Origin', ['Acceleration', (a, b) => avg(...a.Acceleration) - avg(...b.Acceleration)]]\n     * ]);\n     *\n     * console.log(dm.getData());\n     * console.log(sortedDm.getData());\n     *\n     * @public\n     *\n     * @param {Array.<Array>} sortingDetails - Sorting details based on which the sorting will be performed.\n     * @return {DataModel} Returns a new instance of DataModel with sorted data.\n     */\n    sort (sortingDetails) {\n        const rawData = this.getData({\n            order: 'row',\n            sort: sortingDetails\n        });\n        const header = rawData.schema.map(field => field.name);\n        const dataInCSVArr = [header].concat(rawData.data);\n\n        const sortedDm = new this.constructor(dataInCSVArr, rawData.schema, { dataFormat: 'DSVArr' });\n        sortedDm._sortingDetails = sortingDetails;\n        return sortedDm;\n    }\n\n    /**\n     * Performs the serialization operation on the current {@link DataModel} instance according to the specified data\n     * type. When an {@link DataModel} instance is created, it de-serializes the input data into its internal format,\n     * and during its serialization process, it converts its internal data format to the specified data type and returns\n     * that data regardless what type of data is used during the {@link DataModel} initialization.\n     *\n     * @example\n     * // here dm is the pre-declared DataModel instance.\n     * const csvData = dm.serialize(DataModel.DataFormat.DSV_STR, { fieldSeparator: \",\" });\n     * console.log(csvData); // The csv formatted data.\n     *\n     * const jsonData = dm.serialize(DataModel.DataFormat.FLAT_JSON);\n     * console.log(jsonData); // The json data.\n     *\n     * @public\n     *\n     * @param {string} type - The data type name for serialization.\n     * @param {Object} options - The optional option object.\n     * @param {string} options.fieldSeparator - The field separator character for DSV data type.\n     * @return {Array|string} Returns the serialized data.\n     */\n    serialize (type, options) {\n        type = type || this._dataFormat;\n        options = Object.assign({}, { fieldSeparator: ',' }, options);\n\n        const fields = this.getFieldspace().fields;\n        const colData = fields.map(f => f.formattedData());\n        const rowsCount = colData[0].length;\n        let serializedData;\n        let rowIdx;\n        let colIdx;\n\n        if (type === DataFormat.FLAT_JSON) {\n            serializedData = [];\n            for (rowIdx = 0; rowIdx < rowsCount; rowIdx++) {\n                const row = {};\n                for (colIdx = 0; colIdx < fields.length; colIdx++) {\n                    row[fields[colIdx].name()] = colData[colIdx][rowIdx];\n                }\n                serializedData.push(row);\n            }\n        } else if (type === DataFormat.DSV_STR) {\n            serializedData = [fields.map(f => f.name()).join(options.fieldSeparator)];\n            for (rowIdx = 0; rowIdx < rowsCount; rowIdx++) {\n                const row = [];\n                for (colIdx = 0; colIdx < fields.length; colIdx++) {\n                    row.push(colData[colIdx][rowIdx]);\n                }\n                serializedData.push(row.join(options.fieldSeparator));\n            }\n            serializedData = serializedData.join('\\n');\n        } else if (type === DataFormat.DSV_ARR) {\n            serializedData = [fields.map(f => f.name())];\n            for (rowIdx = 0; rowIdx < rowsCount; rowIdx++) {\n                const row = [];\n                for (colIdx = 0; colIdx < fields.length; colIdx++) {\n                    row.push(colData[colIdx][rowIdx]);\n                }\n                serializedData.push(row);\n            }\n        } else {\n            throw new Error(`Data type ${type} is not supported`);\n        }\n\n        return serializedData;\n    }\n\n    addField (field) {\n        const fieldName = field.name();\n        this._colIdentifier += `,${fieldName}`;\n        const partialFieldspace = this._partialFieldspace;\n\n        if (!partialFieldspace.fieldsObj()[field.name()]) {\n            partialFieldspace.fields.push(field);\n        } else {\n            const fieldIndex = partialFieldspace.fields.findIndex(fieldinst => fieldinst.name() === fieldName);\n            fieldIndex >= 0 && (partialFieldspace.fields[fieldIndex] = field);\n        }\n\n        // flush out cached namespace values on addition of new fields\n        partialFieldspace._cachedFieldsObj = null;\n        partialFieldspace._cachedDimension = null;\n        partialFieldspace._cachedMeasure = null;\n\n        this.__calculateFieldspace().calculateFieldsConfig();\n        return this;\n    }\n\n    /**\n    * Creates a new variable calculated from existing variables. This method expects the definition of the newly created\n    * variable and a function which resolves the value of the new variable from existing variables.\n    *\n    * Can create a new measure based on existing variables:\n    * @example\n    *  // DataModel already prepared and assigned to dm variable;\n    *  const newDm = dataModel.calculateVariable({\n    *      name: 'powerToWeight',\n    *      type: 'measure'\n    *  }, ['horsepower', 'weight_in_lbs', (hp, weight) => hp / weight ]);\n    *\n    *\n    * Can create a new dimension based on existing variables:\n    * @example\n    *  // DataModel already prepared and assigned to dm variable;\n    *  const child = dataModel.calculateVariable(\n    *     {\n    *       name: 'Efficiency',\n    *       type: 'dimension'\n    *     }, ['horsepower', (hp) => {\n    *      if (hp < 80) { return 'low'; },\n    *      else if (hp < 120) { return 'moderate'; }\n    *      else { return 'high' }\n    *  }]);\n    *\n    * @public\n    *\n    * @param {Object} schema - The schema of newly defined variable.\n    * @param {Array.<string|function>} dependency - An array containing the dependency variable names and a resolver\n    * function as the last element.\n    * @param {Object} config - An optional config object.\n    * @param {boolean} [config.saveChild] - Whether the newly created DataModel will be a child.\n    * @param {boolean} [config.replaceVar] - Whether the newly created variable will replace the existing variable.\n    * @return {DataModel} Returns an instance of DataModel with the new field.\n    */\n    calculateVariable (schema, dependency, config) {\n        schema = sanitizeUnitSchema(schema);\n        config = Object.assign({}, { saveChild: true, replaceVar: false }, config);\n\n        const fieldsConfig = this.getFieldsConfig();\n        const depVars = dependency.slice(0, dependency.length - 1);\n        const retrieveFn = dependency[dependency.length - 1];\n\n        if (fieldsConfig[schema.name] && !config.replaceVar) {\n            throw new Error(`${schema.name} field already exists in datamodel`);\n        }\n\n        const depFieldIndices = depVars.map((field) => {\n            const fieldSpec = fieldsConfig[field];\n            if (!fieldSpec) {\n                // @todo dont throw error here, use warning in production mode\n                throw new Error(`${field} is not a valid column name.`);\n            }\n            return fieldSpec.index;\n        });\n\n        const clone = this.clone();\n\n        const fs = clone.getFieldspace().fields;\n        const suppliedFields = depFieldIndices.map(idx => fs[idx]);\n\n        let cachedStore = {};\n        let cloneProvider = () => this.detachedRoot();\n\n        const computedValues = [];\n        rowDiffsetIterator(clone._rowDiffset, (i) => {\n            const fieldsData = suppliedFields.map(field => field.partialField.data[i]);\n            computedValues[i] = retrieveFn(...fieldsData, i, cloneProvider, cachedStore);\n        });\n        const [field] = createFields([computedValues], [schema], [schema.name]);\n        clone.addField(field);\n\n        persistDerivation(clone, DM_DERIVATIVES.CAL_VAR, { config: schema, fields: depVars }, retrieveFn);\n\n        return clone;\n    }\n\n    /**\n     * Propagates changes across all the connected DataModel instances.\n     *\n     * @param {Array} identifiers - A list of identifiers that were interacted with.\n     * @param {Object} payload - The interaction specific details.\n     *\n     * @return {DataModel} DataModel instance.\n     */\n    propagate (identifiers, config = {}, addToNameSpace, propConfig = {}) {\n        const isMutableAction = config.isMutableAction;\n        const propagationSourceId = config.sourceId;\n        const payload = config.payload;\n        const rootModel = getRootDataModel(this);\n        const propagationNameSpace = rootModel._propagationNameSpace;\n        const rootGroupByModel = getRootGroupByModel(this);\n        const rootModels = {\n            groupByModel: rootGroupByModel,\n            model: rootModel\n        };\n\n        addToNameSpace && addToPropNamespace(propagationNameSpace, config, this);\n        propagateToAllDataModels(identifiers, rootModels, { propagationNameSpace, sourceId: propagationSourceId },\n            Object.assign({\n                payload\n            }, config));\n\n        if (isMutableAction) {\n            propagateImmutableActions(propagationNameSpace, rootModels, {\n                config,\n                propConfig\n            }, this);\n        }\n\n        return this;\n    }\n\n    /**\n     * Associates a callback with an event name.\n     *\n     * @param {string} eventName - The name of the event.\n     * @param {Function} callback - The callback to invoke.\n     * @return {DataModel} Returns this current DataModel instance itself.\n     */\n    on (eventName, callback) {\n        switch (eventName) {\n        case PROPAGATION:\n            this._onPropagation.push(callback);\n            break;\n        }\n        return this;\n    }\n\n    /**\n     * Unsubscribes the callbacks for the provided event name.\n     *\n     * @param {string} eventName - The name of the event to unsubscribe.\n     * @return {DataModel} Returns the current DataModel instance itself.\n     */\n    unsubscribe (eventName) {\n        switch (eventName) {\n        case PROPAGATION:\n            this._onPropagation = [];\n            break;\n\n        }\n        return this;\n    }\n\n    /**\n     * This method is used to invoke the method associated with propagation.\n     *\n     * @param {Object} payload The interaction payload.\n     * @param {DataModel} identifiers The propagated DataModel.\n     * @memberof DataModel\n     */\n    handlePropagation (propModel, payload) {\n        let propListeners = this._onPropagation;\n        propListeners.forEach(fn => fn.call(this, propModel, payload));\n    }\n\n    /**\n     * Performs the binning operation on a measure field based on the binning configuration. Binning means discretizing\n     * values of a measure. Binning configuration contains an array; subsequent values from the array marks the boundary\n     * of buckets in [inclusive, exclusive) range format. This operation does not mutate the subject measure field,\n     * instead, it creates a new field (variable) of type dimension and subtype binned.\n     *\n     * Binning can be configured by\n     * - providing custom bin configuration with non-uniform buckets,\n     * - providing bins count,\n     * - providing each bin size,\n     *\n     * When custom `buckets` are provided as part of binning configuration:\n     * @example\n     *  // DataModel already prepared and assigned to dm variable\n     *  const config = { name: 'binnedHP', buckets: [30, 80, 100, 110] }\n     *  const binnedDM = dataModel.bin('horsepower', config);\n     *\n     * @text\n     * When `binsCount` is defined as part of binning configuration:\n     * @example\n     *  // DataModel already prepared and assigned to dm variable\n     *  const config = { name: 'binnedHP', binsCount: 5, start: 0, end: 100 }\n     *  const binDM = dataModel.bin('horsepower', config);\n     *\n     * @text\n     * When `binSize` is defined as part of binning configuration:\n     * @example\n     *  // DataModel already prepared and assigned to dm variable\n     *  const config = { name: 'binnedHorsepower', binSize: 20, start: 5}\n     *  const binDM = dataModel.bin('horsepower', config);\n     *\n     * @public\n     *\n     * @param {string} measureFieldName - The name of the target measure field.\n     * @param {Object} config - The config object.\n     * @param {string} [config.name] - The name of the new field which will be created.\n     * @param {string} [config.buckets] - An array containing the bucket ranges.\n     * @param {string} [config.binSize] - The size of each bin. It is ignored when buckets are given.\n     * @param {string} [config.binsCount] - The total number of bins to generate. It is ignored when buckets are given.\n     * @param {string} [config.start] - The start value of the bucket ranges. It is ignored when buckets are given.\n     * @param {string} [config.end] - The end value of the bucket ranges. It is ignored when buckets are given.\n     * @return {DataModel} Returns a new {@link DataModel} instance with the new field.\n     */\n    bin (measureFieldName, config) {\n        const fieldsConfig = this.getFieldsConfig();\n\n        if (!fieldsConfig[measureFieldName]) {\n            throw new Error(`Field ${measureFieldName} doesn't exist`);\n        }\n\n        const binFieldName = config.name || `${measureFieldName}_binned`;\n\n        if (fieldsConfig[binFieldName]) {\n            throw new Error(`Field ${binFieldName} already exists`);\n        }\n\n        const measureField = this.getFieldspace().fieldsObj()[measureFieldName];\n        const { binnedData, bins } = createBinnedFieldData(measureField, this._rowDiffset, config);\n\n        const binField = createFields([binnedData], [\n            {\n                name: binFieldName,\n                type: FieldType.DIMENSION,\n                subtype: DimensionSubtype.BINNED,\n                bins\n            }], [binFieldName])[0];\n\n        const clone = this.clone();\n        clone.addField(binField);\n\n        persistDerivation(clone, DM_DERIVATIVES.BIN, { measureFieldName, config, binFieldName }, null);\n\n        return clone;\n    }\n\n    /**\n     * Creates a new {@link DataModel} instance with completely detached root from current {@link DataModel} instance,\n     * the new {@link DataModel} instance has no parent-children relationship with the current one, but has same data as\n     * the current one.\n     * This API is useful when a completely different {@link DataModel} but with same data as the current instance is\n     * needed.\n     *\n     * @example\n     *  const dm = new DataModel(data, schema);\n     *  const detachedDm = dm.detachedRoot();\n     *\n     * // has different namespace\n     * console.log(dm.getPartialFieldspace().name);\n     * console.log(detachedDm.getPartialFieldspace().name);\n     *\n     * // has same data\n     * console.log(dm.getData());\n     * console.log(detachedDm.getData());\n     *\n     * @public\n     *\n     * @return {DataModel} Returns a detached {@link DataModel} instance.\n     */\n    detachedRoot () {\n        const data = this.serialize(DataFormat.FLAT_JSON);\n        const schema = this.getSchema();\n\n        return new DataModel(data, schema);\n    }\n}\n\nexport default DataModel;\n","import { DataFormat } from './enums';\n\nexport default {\n    dataFormat: DataFormat.AUTO\n};\n","/**\n * DataFormat Enum defines the format of the input data.\n * Based on the format of the data the respective adapter is loaded.\n *\n * @readonly\n * @enum {string}\n */\nconst DataFormat = {\n    FLAT_JSON: 'FlatJSON',\n    DSV_STR: 'DSVStr',\n    DSV_ARR: 'DSVArr',\n    AUTO: 'Auto'\n};\n\nexport default DataFormat;\n","/**\n * DimensionSubtype enum defines the sub types of the Dimensional Field.\n *\n * @readonly\n * @enum {string}\n */\nconst DimensionSubtype = {\n    CATEGORICAL: 'categorical',\n    TEMPORAL: 'temporal',\n    GEO: 'geo',\n    BINNED: 'binned'\n};\n\nexport default DimensionSubtype;\n","/**\n * FieldType enum defines the high level field based on which visuals are controlled.\n * Measure in a high level is numeric field and Dimension in a high level is string field.\n *\n * @readonly\n * @enum {string}\n */\nconst FieldType = {\n    MEASURE: 'measure',\n    DIMENSION: 'dimension'\n};\n\nexport default FieldType;\n","/**\n * Filtering mode enum defines the filering modes of DataModel.\n *\n * @readonly\n * @enum {string}\n */\nconst FilteringMode = {\n    NORMAL: 'normal',\n    INVERSE: 'inverse',\n    ALL: 'all'\n};\n\nexport default FilteringMode;\n","/**\n * FilteringMode determines if resultant DataModel should be created from selection set or rejection set.\n *\n * The following modes are available\n * - `NORMAL`: Only entries from selection set are included in the resulatant DataModel instance\n * - `INVERSE`: Only entries from rejection set are included in the resulatant DataModel instance\n * - ALL: Both the entries from selection and rejection set are returned in two different DataModel instance\n */\n\nexport { default as DataFormat } from './data-format';\nexport { default as DimensionSubtype } from './dimension-subtype';\nexport { default as MeasureSubtype } from './measure-subtype';\nexport { default as FieldType } from './field-type';\nexport { default as FilteringMode } from './filtering-mode';\n","/**\n * MeasureSubtype enum defines the sub types of the Measure Field.\n *\n * @readonly\n * @enum {string}\n */\nconst MeasureSubtype = {\n    CONTINUOUS: 'continuous'\n};\n\nexport default MeasureSubtype;\n","import DataModel from './datamodel';\nimport {\n  compose,\n  bin,\n  select,\n  project,\n  groupby as groupBy,\n  calculateVariable,\n  sort,\n  crossProduct,\n  difference,\n  naturalJoin,\n  leftOuterJoin,\n  rightOuterJoin,\n  fullOuterJoin,\n  union\n} from './operator';\nimport * as Stats from './stats';\nimport * as enums from './enums';\nimport { DateTimeFormatter } from './utils';\nimport { DataFormat, FilteringMode } from './constants';\nimport InvalidAwareTypes from './invalid-aware-types';\nimport pkg from '../package.json';\n\nDataModel.Operators = {\n    compose,\n    bin,\n    select,\n    project,\n    groupBy,\n    calculateVariable,\n    sort,\n    crossProduct,\n    difference,\n    naturalJoin,\n    leftOuterJoin,\n    rightOuterJoin,\n    fullOuterJoin,\n    union\n};\nDataModel.Stats = Stats;\nObject.assign(DataModel, enums);\nDataModel.DateTimeFormatter = DateTimeFormatter;\nDataModel.DataFormat = DataFormat;\nDataModel.FilteringMode = FilteringMode;\nDataModel.InvalidAwareTypes = InvalidAwareTypes;\nDataModel.version = pkg.version;\n\nexport default DataModel;\n","import { FieldType, DimensionSubtype, MeasureSubtype } from './enums';\nimport {\n    Categorical,\n    Temporal,\n    Binned,\n    Continuous,\n    CategoricalParser,\n    TemporalParser,\n    BinnedParser,\n    ContinuousParser,\n    PartialField\n} from './fields';\n\n/**\n * Creates a field instance according to the provided data and schema.\n *\n * @param {Array} data - The field data array.\n * @param {Object} schema - The field schema object.\n * @return {Field} Returns the newly created field instance.\n */\nfunction createUnitField(data, schema) {\n    data = data || [];\n    let partialField;\n\n    switch (schema.type) {\n    case FieldType.MEASURE:\n        switch (schema.subtype) {\n        case MeasureSubtype.CONTINUOUS:\n            partialField = new PartialField(schema.name, data, schema, new ContinuousParser());\n            return new Continuous(partialField, `0-${data.length - 1}`);\n        default:\n            partialField = new PartialField(schema.name, data, schema, new ContinuousParser());\n            return new Continuous(partialField, `0-${data.length - 1}`);\n        }\n    case FieldType.DIMENSION:\n        switch (schema.subtype) {\n        case DimensionSubtype.CATEGORICAL:\n            partialField = new PartialField(schema.name, data, schema, new CategoricalParser());\n            return new Categorical(partialField, `0-${data.length - 1}`);\n        case DimensionSubtype.TEMPORAL:\n            partialField = new PartialField(schema.name, data, schema, new TemporalParser(schema));\n            return new Temporal(partialField, `0-${data.length - 1}`);\n        case DimensionSubtype.BINNED:\n            partialField = new PartialField(schema.name, data, schema, new BinnedParser());\n            return new Binned(partialField, `0-${data.length - 1}`);\n        default:\n            partialField = new PartialField(schema.name, data, schema, new CategoricalParser());\n            return new Categorical(partialField, `0-${data.length - 1}`);\n        }\n    default:\n        partialField = new PartialField(schema.name, data, schema, new CategoricalParser());\n        return new Categorical(partialField, `0-${data.length - 1}`);\n    }\n}\n\n\n/**\n * Creates a field instance from partialField and rowDiffset.\n *\n * @param {PartialField} partialField - The corresponding partial field.\n * @param {string} rowDiffset - The data subset config.\n * @return {Field} Returns the newly created field instance.\n */\nexport function createUnitFieldFromPartial(partialField, rowDiffset) {\n    const { schema } = partialField;\n\n    switch (schema.type) {\n    case FieldType.MEASURE:\n        switch (schema.subtype) {\n        case MeasureSubtype.CONTINUOUS:\n            return new Continuous(partialField, rowDiffset);\n        default:\n            return new Continuous(partialField, rowDiffset);\n        }\n    case FieldType.DIMENSION:\n        switch (schema.subtype) {\n        case DimensionSubtype.CATEGORICAL:\n            return new Categorical(partialField, rowDiffset);\n        case DimensionSubtype.TEMPORAL:\n            return new Temporal(partialField, rowDiffset);\n        case DimensionSubtype.BINNED:\n            return new Binned(partialField, rowDiffset);\n        default:\n            return new Categorical(partialField, rowDiffset);\n        }\n    default:\n        return new Categorical(partialField, rowDiffset);\n    }\n}\n\n/**\n * Creates the field instances with input data and schema.\n *\n * @param {Array} dataColumn - The data array for fields.\n * @param {Array} schema - The schema array for fields.\n * @param {Array} headers - The array of header names.\n * @return {Array.<Field>} Returns an array of newly created field instances.\n */\nexport function createFields(dataColumn, schema, headers) {\n    const headersObj = {};\n\n    if (!(headers && headers.length)) {\n        headers = schema.map(item => item.name);\n    }\n\n    headers.forEach((header, i) => {\n        headersObj[header] = i;\n    });\n\n    return schema.map(item => createUnitField(dataColumn[headersObj[item.name]], item));\n}\n","import { FieldType } from './enums';\nimport { getUniqueId } from './utils';\n\nconst fieldStore = {\n    data: {},\n\n    createNamespace (fieldArr, name) {\n        const dataId = name || getUniqueId();\n\n        this.data[dataId] = {\n            name: dataId,\n            fields: fieldArr,\n\n            fieldsObj () {\n                let fieldsObj = this._cachedFieldsObj;\n\n                if (!fieldsObj) {\n                    fieldsObj = this._cachedFieldsObj = {};\n                    this.fields.forEach((field) => {\n                        fieldsObj[field.name()] = field;\n                    });\n                }\n                return fieldsObj;\n            },\n            getMeasure () {\n                let measureFields = this._cachedMeasure;\n\n                if (!measureFields) {\n                    measureFields = this._cachedMeasure = {};\n                    this.fields.forEach((field) => {\n                        if (field.schema().type === FieldType.MEASURE) {\n                            measureFields[field.name()] = field;\n                        }\n                    });\n                }\n                return measureFields;\n            },\n            getDimension () {\n                let dimensionFields = this._cachedDimension;\n\n                if (!this._cachedDimension) {\n                    dimensionFields = this._cachedDimension = {};\n                    this.fields.forEach((field) => {\n                        if (field.schema().type === FieldType.DIMENSION) {\n                            dimensionFields[field.name()] = field;\n                        }\n                    });\n                }\n                return dimensionFields;\n            },\n        };\n        return this.data[dataId];\n    },\n};\n\nexport default fieldStore;\n","import Dimension from '../dimension';\n\n/**\n * Represents binned field subtype.\n *\n * @public\n * @class\n * @extends Dimension\n */\nexport default class Binned extends Dimension {\n    /**\n     * Calculates the corresponding field domain.\n     *\n     * @public\n     * @override\n     * @return {Array} Returns the last and first values of bins config array.\n     */\n    calculateDataDomain () {\n        const binsArr = this.partialField.schema.bins;\n        return [binsArr[0], binsArr[binsArr.length - 1]];\n    }\n\n    /**\n     * Returns the bins config provided while creating the field instance.\n     *\n     * @public\n     * @return {Array} Returns the bins array config.\n     */\n    bins () {\n        return this.partialField.schema.bins;\n    }\n}\n","import { rowDiffsetIterator } from '../../operator/row-diffset-iterator';\nimport { DimensionSubtype } from '../../enums';\nimport Dimension from '../dimension';\n/**\n * Represents categorical field subtype.\n *\n * @public\n * @class\n * @extends Dimension\n */\nexport default class Categorical extends Dimension {\n    /**\n     * Returns the subtype of the field.\n     *\n     * @public\n     * @override\n     * @return {string} Returns the subtype of the field.\n     */\n    subtype () {\n        return DimensionSubtype.CATEGORICAL;\n    }\n\n    /**\n     * Calculates the corresponding field domain.\n     *\n     * @public\n     * @override\n     * @return {Array} Returns the unique values.\n     */\n    calculateDataDomain () {\n        const hash = new Set();\n        const domain = [];\n\n        // here don't use this.data() as the iteration will be occurred two times on same data.\n        rowDiffsetIterator(this.rowDiffset, (i) => {\n            const datum = this.partialField.data[i];\n            if (!hash.has(datum)) {\n                hash.add(datum);\n                domain.push(datum);\n            }\n        });\n        return domain;\n    }\n}\n","import { rowDiffsetIterator } from '../../operator/row-diffset-iterator';\nimport { MeasureSubtype } from '../../enums';\nimport Measure from '../measure';\nimport InvalidAwareTypes from '../../invalid-aware-types';\n\n/**\n * Represents continuous field subtype.\n *\n * @public\n * @class\n * @extends Measure\n */\nexport default class Continuous extends Measure {\n    /**\n     * Returns the subtype of the field.\n     *\n     * @public\n     * @override\n     * @return {string} Returns the subtype of the field.\n     */\n    subtype () {\n        return MeasureSubtype.CONTINUOUS;\n    }\n\n    /**\n     * Calculates the corresponding field domain.\n     *\n     * @public\n     * @override\n     * @return {Array} Returns the min and max values.\n     */\n    calculateDataDomain () {\n        let min = Number.POSITIVE_INFINITY;\n        let max = Number.NEGATIVE_INFINITY;\n\n        // here don't use this.data() as the iteration will be occurred two times on same data.\n        rowDiffsetIterator(this.rowDiffset, (i) => {\n            const datum = this.partialField.data[i];\n            if (datum instanceof InvalidAwareTypes) {\n                return;\n            }\n\n            if (datum < min) {\n                min = datum;\n            }\n            if (datum > max) {\n                max = datum;\n            }\n        });\n\n        return [min, max];\n    }\n}\n","import Field from '../field';\n\n/**\n * Represents dimension field type.\n *\n * @public\n * @class\n * @extends Field\n */\nexport default class Dimension extends Field {\n    /**\n     * Returns the domain for the dimension field.\n     *\n     * @override\n     * @public\n     * @return {any} Returns the calculated domain.\n     */\n    domain () {\n        if (!this._cachedDomain) {\n            this._cachedDomain = this.calculateDataDomain();\n        }\n        return this._cachedDomain;\n    }\n\n    /**\n     * Calculates the corresponding field domain.\n     *\n     * @public\n     * @abstract\n     */\n    calculateDataDomain () {\n        throw new Error('Not yet implemented');\n    }\n\n     /**\n     * Returns the formatted version of the underlying field data.\n     *\n     * @public\n     * @override\n     * @return {Array} Returns the formatted data.\n     */\n    formattedData () {\n        return this.data();\n    }\n}\n","import { rowDiffsetIterator } from '../../operator/row-diffset-iterator';\n\n/**\n * In {@link DataModel}, every tabular data consists of column, a column is stored as field.\n * Field contains all the data for a given column in an array.\n *\n * Each record consists of several fields; the fields of all records form the columns.\n * Examples of fields: name, gender, sex etc.\n *\n * In DataModel, each field can have multiple attributes which describes its data and behaviour.\n * A field can have two types of data: Measure and Dimension.\n *\n * A Dimension Field is the context on which a data is categorized and the measure is the numerical values that\n * quantify the data set.\n * In short a dimension is the lens through which you are looking at your measure data.\n *\n * Refer to {@link Schema} to get info about possible field attributes.\n *\n * @public\n * @class\n */\nexport default class Field {\n    /**\n     * Initialize a new instance.\n     *\n     * @public\n     * @param {PartialField} partialField - The partialField instance which holds the whole data.\n     * @param {string} rowDiffset - The data subset definition.\n     */\n    constructor (partialField, rowDiffset) {\n        this.partialField = partialField;\n        this.rowDiffset = rowDiffset;\n    }\n\n    /**\n     * Generates the field type specific domain.\n     *\n     * @public\n     * @abstract\n     */\n    domain () {\n        throw new Error('Not yet implemented');\n    }\n\n    /**\n     * Returns the the field schema.\n     *\n     * @public\n     * @return {string} Returns the field schema.\n     */\n    schema () {\n        return this.partialField.schema;\n    }\n\n    /**\n     * Returns the name of the field.\n     *\n     * @public\n     * @return {string} Returns the name of the field.\n     */\n    name () {\n        return this.partialField.name;\n    }\n\n    /**\n     * Returns the type of the field.\n     *\n     * @public\n     * @return {string} Returns the type of the field.\n     */\n    type () {\n        return this.partialField.schema.type;\n    }\n\n    /**\n     * Returns the subtype of the field.\n     *\n     * @public\n     * @return {string} Returns the subtype of the field.\n     */\n    subtype () {\n        return this.partialField.schema.subtype;\n    }\n\n    /**\n     * Returns the description of the field.\n     *\n     * @public\n     * @return {string} Returns the description of the field.\n     */\n    description () {\n        return this.partialField.schema.description;\n    }\n\n    /**\n     * Returns the display name of the field.\n     *\n     * @public\n     * @return {string} Returns the display name of the field.\n     */\n    displayName () {\n        return this.partialField.schema.displayName || this.partialField.schema.name;\n    }\n\n    /**\n     * Returns the data associated with the field.\n     *\n     * @public\n     * @return {Array} Returns the data.\n     */\n    data () {\n        const data = [];\n        rowDiffsetIterator(this.rowDiffset, (i) => {\n            data.push(this.partialField.data[i]);\n        });\n        return data;\n    }\n\n    /**\n     * Returns the formatted version of the underlying field data.\n     *\n     * @public\n     * @abstract\n     */\n    formattedData () {\n        throw new Error('Not yet implemented');\n    }\n}\n","export { default as Field } from './field';\nexport { default as Dimension } from './dimension';\nexport { default as Categorical } from './categorical';\nexport { default as Temporal } from './temporal';\nexport { default as Binned } from './binned';\nexport { default as Measure } from './measure';\nexport { default as Continuous } from './continuous';\nexport { default as FieldParser } from './parsers/field-parser';\nexport { default as CategoricalParser } from './parsers/categorical-parser';\nexport { default as TemporalParser } from './parsers/temporal-parser';\nexport { default as BinnedParser } from './parsers/binned-parser';\nexport { default as ContinuousParser } from './parsers/continuous-parser';\nexport { default as PartialField } from './partial-field';\n","import { formatNumber } from '../../utils';\nimport { defaultReducerName } from '../../operator/group-by-function';\nimport Field from '../field';\n\n/**\n * Represents measure field type.\n *\n * @public\n * @class\n * @extends Field\n */\nexport default class Measure extends Field {\n  /**\n   * Returns the domain for the measure field.\n   *\n   * @override\n   * @public\n   * @return {any} Returns the calculated domain.\n   */\n    domain () {\n        if (!this._cachedDomain) {\n            this._cachedDomain = this.calculateDataDomain();\n        }\n        return this._cachedDomain;\n    }\n\n  /**\n   * Returns the unit of the measure field.\n   *\n   * @public\n   * @return {string} Returns unit of the field.\n   */\n    unit () {\n        return this.partialField.schema.unit;\n    }\n\n  /**\n   * Returns the aggregation function name of the measure field.\n   *\n   * @public\n   * @return {string} Returns aggregation function name of the field.\n   */\n    defAggFn () {\n        return this.partialField.schema.defAggFn || defaultReducerName;\n    }\n\n  /**\n   * Returns the number format of the measure field.\n   *\n   * @public\n   * @return {Function} Returns number format of the field.\n   */\n    numberFormat () {\n        const { numberFormat } = this.partialField.schema;\n        return numberFormat instanceof Function ? numberFormat : formatNumber;\n    }\n\n  /**\n   * Calculates the corresponding field domain.\n   *\n   * @public\n   * @abstract\n   */\n    calculateDataDomain () {\n        throw new Error('Not yet implemented');\n    }\n\n    /**\n     * Returns the formatted version of the underlying field data.\n     *\n     * @public\n     * @override\n     * @return {Array} Returns the formatted data.\n     */\n    formattedData () {\n        return this.data();\n    }\n}\n","import FieldParser from '../field-parser';\nimport InvalidAwareTypes from '../../../invalid-aware-types';\n\n/**\n * A FieldParser which parses the binned values.\n *\n * @public\n * @class\n * @implements {FieldParser}\n */\nexport default class BinnedParser extends FieldParser {\n  /**\n   * Parses a single binned value of a field and returns the sanitized value.\n   *\n   * @public\n   * @param {string} val - The value of the field.\n   * @return {string} Returns the sanitized value.\n   */\n    parse (val) {\n        const regex = /^\\s*([+-]?\\d+(?:\\.\\d+)?)\\s*-\\s*([+-]?\\d+(?:\\.\\d+)?)\\s*$/;\n        val = String(val);\n        let result;\n        // check if invalid date value\n        if (!InvalidAwareTypes.isInvalid(val)) {\n            let matched = val.match(regex);\n            result = matched ? `${Number.parseFloat(matched[1])}-${Number.parseFloat(matched[2])}`\n                             : InvalidAwareTypes.NA;\n        } else {\n            result = InvalidAwareTypes.getInvalidType(val);\n        }\n        return result;\n    }\n}\n","import FieldParser from '../field-parser';\nimport InvalidAwareTypes from '../../../invalid-aware-types';\n\n/**\n * A FieldParser which parses the categorical values.\n *\n * @public\n * @class\n * @implements {FieldParser}\n */\nexport default class CategoricalParser extends FieldParser {\n  /**\n   * Parses a single value of a field and returns the stringified form.\n   *\n   * @public\n   * @param {string|number} val - The value of the field.\n   * @return {string} Returns the stringified value.\n   */\n    parse (val) {\n        let result;\n        // check if invalid date value\n        if (!InvalidAwareTypes.isInvalid(val)) {\n            result = String(val).trim();\n        } else {\n            result = InvalidAwareTypes.getInvalidType(val);\n        }\n        return result;\n    }\n}\n","import FieldParser from '../field-parser';\nimport InvalidAwareTypes from '../../../invalid-aware-types';\n\n/**\n * A FieldParser which parses the continuous values.\n *\n * @public\n * @class\n * @implements {FieldParser}\n */\nexport default class ContinuousParser extends FieldParser {\n  /**\n   * Parses a single value of a field and returns the number form.\n   *\n   * @public\n   * @param {string|number} val - The value of the field.\n   * @return {string} Returns the number value.\n   */\n    parse (val) {\n        let result;\n        // check if invalid date value\n        if (!InvalidAwareTypes.isInvalid(val)) {\n            let parsedVal = parseFloat(val, 10);\n            result = Number.isNaN(parsedVal) ? InvalidAwareTypes.NA : parsedVal;\n        } else {\n            result = InvalidAwareTypes.getInvalidType(val);\n        }\n        return result;\n    }\n}\n","/**\n * A interface to represent a parser which is responsible to parse the field.\n *\n * @public\n * @interface\n */\nexport default class FieldParser {\n    /**\n     * Parses a single value of a field and return the sanitized form.\n     *\n     * @public\n     * @abstract\n     */\n    parse () {\n        throw new Error('Not yet implemented');\n    }\n}\n","import { DateTimeFormatter } from '../../../utils';\nimport FieldParser from '../field-parser';\nimport InvalidAwareTypes from '../../../invalid-aware-types';\n\n/**\n * A FieldParser which parses the temporal values.\n *\n * @public\n * @class\n * @implements {FieldParser}\n */\nexport default class TemporalParser extends FieldParser {\n    /**\n     * Initialize a new instance.\n     *\n     * @public\n     * @param {Object} schema - The schema object for the corresponding field.\n     */\n    constructor (schema) {\n        super();\n        this.schema = schema;\n        this._dtf = new DateTimeFormatter(this.schema.format);\n    }\n\n    /**\n     * Parses a single value of a field and returns the millisecond value.\n     *\n     * @public\n     * @param {string|number} val - The value of the field.\n     * @return {number} Returns the millisecond value.\n     */\n    parse (val) {\n        let result;\n        // check if invalid date value\n        if (!InvalidAwareTypes.isInvalid(val)) {\n            let nativeDate = this._dtf.getNativeDate(val);\n            result = nativeDate ? nativeDate.getTime() : InvalidAwareTypes.NA;\n        } else {\n            result = InvalidAwareTypes.getInvalidType(val);\n        }\n        return result;\n    }\n}\n","/**\n * Stores the full data and the metadata of a field. It provides\n * a single source of data from which the future Field\n * instance can get a subset of it with a rowDiffset config.\n *\n * @class\n * @public\n */\nexport default class PartialField {\n    /**\n     * Initialize a new instance.\n     *\n     * @public\n     * @param {string} name - The name of the field.\n     * @param {Array} data - The data array.\n     * @param {Object} schema - The schema object of the corresponding field.\n     * @param {FieldParser} parser - The parser instance corresponding to that field.\n     */\n    constructor (name, data, schema, parser) {\n        this.name = name;\n        this.schema = schema;\n        this.parser = parser;\n        this.data = this._sanitize(data);\n    }\n\n    /**\n     * Sanitizes the field data.\n     *\n     * @private\n     * @param {Array} data - The actual input data.\n     * @return {Array} Returns the sanitized data.\n     */\n    _sanitize (data) {\n        return data.map(datum => this.parser.parse(datum));\n    }\n}\n","import { rowDiffsetIterator } from '../../operator/row-diffset-iterator';\nimport Dimension from '../dimension';\nimport { DateTimeFormatter } from '../../utils';\nimport InvalidAwareTypes from '../../invalid-aware-types';\n\n/**\n * Represents temporal field subtype.\n *\n * @public\n * @class\n * @extends Dimension\n */\nexport default class Temporal extends Dimension {\n     /**\n     * Initialize a new instance.\n     *\n     * @public\n     * @param {PartialField} partialField - The partialField instance which holds the whole data.\n     * @param {string} rowDiffset - The data subset definition.\n     */\n    constructor (partialField, rowDiffset) {\n        super(partialField, rowDiffset);\n\n        this._cachedMinDiff = null;\n    }\n\n     /**\n     * Calculates the corresponding field domain.\n     *\n     * @public\n     * @override\n     * @return {Array} Returns the unique values.\n     */\n    calculateDataDomain () {\n        const hash = new Set();\n        const domain = [];\n\n        // here don't use this.data() as the iteration will be\n        // occurred two times on same data.\n        rowDiffsetIterator(this.rowDiffset, (i) => {\n            const datum = this.partialField.data[i];\n            if (!hash.has(datum)) {\n                hash.add(datum);\n                domain.push(datum);\n            }\n        });\n\n        return domain;\n    }\n\n\n    /**\n     * Calculates the minimum consecutive difference from the associated field data.\n     *\n     * @public\n     * @return {number} Returns the minimum consecutive diff in milliseconds.\n     */\n    minimumConsecutiveDifference () {\n        if (this._cachedMinDiff) {\n            return this._cachedMinDiff;\n        }\n\n        const sortedData = this.data().filter(item => !(item instanceof InvalidAwareTypes)).sort((a, b) => a - b);\n        const arrLn = sortedData.length;\n        let minDiff = Number.POSITIVE_INFINITY;\n        let prevDatum;\n        let nextDatum;\n        let processedCount = 0;\n\n        for (let i = 1; i < arrLn; i++) {\n            prevDatum = sortedData[i - 1];\n            nextDatum = sortedData[i];\n\n            if (nextDatum === prevDatum) {\n                continue;\n            }\n\n            minDiff = Math.min(minDiff, nextDatum - sortedData[i - 1]);\n            processedCount++;\n        }\n\n        if (!processedCount) {\n            minDiff = null;\n        }\n        this._cachedMinDiff = minDiff;\n\n        return this._cachedMinDiff;\n    }\n\n    /**\n     * Returns the format specified in the input schema while creating field.\n     *\n     * @public\n     * @return {string} Returns the datetime format.\n     */\n    format () {\n        return this.partialField.schema.format;\n    }\n\n    /**\n     * Returns the formatted version of the underlying field data.\n     *\n     * @public\n     * @override\n     * @return {Array} Returns the formatted data.\n     */\n    formattedData () {\n        const data = [];\n        rowDiffsetIterator(this.rowDiffset, (i) => {\n            const datum = this.partialField.data[i];\n            if (datum instanceof InvalidAwareTypes) {\n                data.push(datum);\n            } else {\n                data.push(DateTimeFormatter.formatAs(datum, this.format()));\n            }\n        });\n        return data;\n    }\n}\n\n","import { FieldType, FilteringMode, DimensionSubtype, MeasureSubtype, DataFormat } from './enums';\nimport fieldStore from './field-store';\nimport Value from './value';\nimport {\n    rowDiffsetIterator\n} from './operator';\nimport { DM_DERIVATIVES, LOGICAL_OPERATORS } from './constants';\nimport { createFields, createUnitFieldFromPartial } from './field-creator';\nimport defaultConfig from './default-config';\nimport * as converter from './converter';\nimport { extend2, detectDataFormat } from './utils';\n\n/**\n * Prepares the selection data.\n */\nfunction prepareSelectionData (fields, i) {\n    const resp = {};\n    for (let field of fields) {\n        resp[field.name()] = new Value(field.partialField.data[i], field);\n    }\n    return resp;\n}\n\nexport function prepareJoinData (fields) {\n    const resp = {};\n    Object.keys(fields).forEach((key) => { resp[key] = new Value(fields[key], key); });\n    return resp;\n}\n\nexport const updateFields = ([rowDiffset, colIdentifier], partialFieldspace, fieldStoreName) => {\n    let collID = colIdentifier.length ? colIdentifier.split(',') : [];\n    let partialFieldMap = partialFieldspace.fieldsObj();\n    let newFields = collID.map(coll => createUnitFieldFromPartial(partialFieldMap[coll].partialField, rowDiffset));\n    return fieldStore.createNamespace(newFields, fieldStoreName);\n};\n\nexport const persistDerivation = (model, operation, config = {}, criteriaFn) => {\n    let derivative;\n    if (operation !== DM_DERIVATIVES.COMPOSE) {\n        derivative = {\n            op: operation,\n            meta: config,\n            criteria: criteriaFn\n        };\n        model._derivation.push(derivative);\n    }\n    else {\n        derivative = [...criteriaFn];\n        model._derivation.length = 0;\n        model._derivation.push(...derivative);\n    }\n};\n\nexport const selectHelper = (rowDiffset, fields, selectFn, config, sourceDm) => {\n    const newRowDiffSet = [];\n    let lastInsertedValue = -1;\n    let { mode } = config;\n    let li;\n    let cachedStore = {};\n    let cloneProvider = () => sourceDm.detachedRoot();\n    const selectorHelperFn = index => selectFn(\n        prepareSelectionData(fields, index),\n        index,\n        cloneProvider,\n        cachedStore\n    );\n\n    let checker;\n    if (mode === FilteringMode.INVERSE) {\n        checker = index => !selectorHelperFn(index);\n    } else {\n        checker = index => selectorHelperFn(index);\n    }\n\n    rowDiffsetIterator(rowDiffset, (i) => {\n        if (checker(i)) {\n            if (lastInsertedValue !== -1 && i === (lastInsertedValue + 1)) {\n                li = newRowDiffSet.length - 1;\n                newRowDiffSet[li] = `${newRowDiffSet[li].split('-')[0]}-${i}`;\n            } else {\n                newRowDiffSet.push(`${i}`);\n            }\n            lastInsertedValue = i;\n        }\n    });\n    return newRowDiffSet.join(',');\n};\n\nexport const filterPropagationModel = (model, propModels, config = {}) => {\n    const operation = config.operation || LOGICAL_OPERATORS.AND;\n    const filterByMeasure = config.filterByMeasure || false;\n    let fns = [];\n    if (!propModels.length) {\n        fns = [() => false];\n    } else {\n        fns = propModels.map(propModel => ((dataModel) => {\n            const dataObj = dataModel.getData();\n            const schema = dataObj.schema;\n            const fieldsConfig = dataModel.getFieldsConfig();\n            const fieldsSpace = dataModel.getFieldspace().fieldsObj();\n            const data = dataObj.data;\n            const domain = Object.values(fieldsConfig).reduce((acc, v) => {\n                acc[v.def.name] = fieldsSpace[v.def.name].domain();\n                return acc;\n            }, {});\n\n            return (fields) => {\n                const include = !data.length ? false : data.some(row => schema.every((propField) => {\n                    if (!(propField.name in fields)) {\n                        return true;\n                    }\n                    const value = fields[propField.name].valueOf();\n                    if (filterByMeasure && propField.type === FieldType.MEASURE) {\n                        return value >= domain[propField.name][0] && value <= domain[propField.name][1];\n                    }\n\n                    if (propField.type !== FieldType.DIMENSION) {\n                        return true;\n                    }\n                    const idx = fieldsConfig[propField.name].index;\n                    return row[idx] === fields[propField.name].valueOf();\n                }));\n                return include;\n            };\n        })(propModel));\n    }\n\n    let filteredModel;\n    if (operation === LOGICAL_OPERATORS.AND) {\n        const clonedModel = model.clone(false, false);\n        filteredModel = clonedModel.select(fields => fns.every(fn => fn(fields)), {\n            saveChild: false,\n            mode: FilteringMode.ALL\n        });\n    } else {\n        filteredModel = model.clone(false, false).select(fields => fns.some(fn => fn(fields)), {\n            mode: FilteringMode.ALL,\n            saveChild: false\n        });\n    }\n\n    return filteredModel;\n};\n\nexport const cloneWithSelect = (sourceDm, selectFn, selectConfig, cloneConfig) => {\n    const cloned = sourceDm.clone(cloneConfig.saveChild);\n    const rowDiffset = selectHelper(\n        cloned._rowDiffset,\n        cloned.getPartialFieldspace().fields,\n        selectFn,\n        selectConfig,\n        sourceDm\n    );\n    cloned._rowDiffset = rowDiffset;\n    cloned.__calculateFieldspace().calculateFieldsConfig();\n\n    persistDerivation(cloned, DM_DERIVATIVES.SELECT, { config: selectConfig }, selectFn);\n\n    return cloned;\n};\n\nexport const cloneWithProject = (sourceDm, projField, config, allFields) => {\n    const cloned = sourceDm.clone(config.saveChild);\n    let projectionSet = projField;\n    if (config.mode === FilteringMode.INVERSE) {\n        projectionSet = allFields.filter(fieldName => projField.indexOf(fieldName) === -1);\n    }\n    // cloned._colIdentifier = sourceDm._colIdentifier.split(',')\n    //                         .filter(coll => projectionSet.indexOf(coll) !== -1).join();\n    cloned._colIdentifier = projectionSet.join(',');\n    cloned.__calculateFieldspace().calculateFieldsConfig();\n\n    persistDerivation(\n        cloned,\n        DM_DERIVATIVES.PROJECT,\n        { projField, config, actualProjField: projectionSet },\n        null\n    );\n\n    return cloned;\n};\n\nexport const sanitizeUnitSchema = (unitSchema) => {\n    // Do deep clone of the unit schema as the user might change it later.\n    unitSchema = extend2({}, unitSchema);\n    if (!unitSchema.type) {\n        unitSchema.type = FieldType.DIMENSION;\n    }\n\n    if (!unitSchema.subtype) {\n        switch (unitSchema.type) {\n        case FieldType.MEASURE:\n            unitSchema.subtype = MeasureSubtype.CONTINUOUS;\n            break;\n        default:\n        case FieldType.DIMENSION:\n            unitSchema.subtype = DimensionSubtype.CATEGORICAL;\n            break;\n        }\n    }\n\n    return unitSchema;\n};\n\nexport const sanitizeSchema = schema => schema.map(unitSchema => sanitizeUnitSchema(unitSchema));\n\nexport const updateData = (relation, data, schema, options) => {\n    schema = sanitizeSchema(schema);\n    options = Object.assign(Object.assign({}, defaultConfig), options);\n    const converterFn = converter[options.dataFormat];\n\n    if (!(converterFn && typeof converterFn === 'function')) {\n        throw new Error(`No converter function found for ${options.dataFormat} format`);\n    }\n\n    const [header, formattedData] = converterFn(data, options);\n    const fieldArr = createFields(formattedData, schema, header);\n\n    // This will create a new fieldStore with the fields\n    const nameSpace = fieldStore.createNamespace(fieldArr, options.name);\n    relation._partialFieldspace = nameSpace;\n    // If data is provided create the default colIdentifier and rowDiffset\n    relation._rowDiffset = formattedData.length && formattedData[0].length ? `0-${formattedData[0].length - 1}` : '';\n    relation._colIdentifier = (schema.map(_ => _.name)).join();\n    relation._dataFormat = options.dataFormat === DataFormat.AUTO ? detectDataFormat(data) : options.dataFormat;\n    return relation;\n};\n\nexport const fieldInSchema = (schema, field) => {\n    let i = 0;\n\n    for (; i < schema.length; ++i) {\n        if (field === schema[i].name) {\n            return {\n                type: schema[i].subtype || schema[i].type,\n                index: i\n            };\n        }\n    }\n    return null;\n};\n\n\nexport const getOperationArguments = (child) => {\n    const derivation = child._derivation;\n    let params = [];\n    let operation;\n    if (derivation && derivation.length === 1) {\n        operation = derivation[0].op;\n        switch (operation) {\n        case DM_DERIVATIVES.SELECT:\n            params = [derivation[0].criteria];\n            break;\n        case DM_DERIVATIVES.PROJECT:\n            params = [derivation[0].meta.actualProjField];\n            break;\n        case DM_DERIVATIVES.GROUPBY:\n            operation = 'groupBy';\n            params = [derivation[0].meta.groupByString.split(','), derivation[0].criteria];\n            break;\n        default:\n            break;\n        }\n    }\n\n    return {\n        operation,\n        params\n    };\n};\n\nconst applyExistingOperationOnModel = (propModel, dataModel) => {\n    const { operation, params } = getOperationArguments(dataModel);\n    let selectionModel = propModel[0];\n    let rejectionModel = propModel[1];\n    if (operation && params.length) {\n        selectionModel = propModel[0][operation](...params, {\n            saveChild: false\n        });\n        rejectionModel = propModel[1][operation](...params, {\n            saveChild: false\n        });\n    }\n    return [selectionModel, rejectionModel];\n};\n\nconst getFilteredModel = (propModel, path) => {\n    for (let i = 0, len = path.length; i < len; i++) {\n        const model = path[i];\n        propModel = applyExistingOperationOnModel(propModel, model);\n    }\n    return propModel;\n};\n\nconst propagateIdentifiers = (dataModel, propModel, config = {}, propModelInf = {}) => {\n    const nonTraversingModel = propModelInf.nonTraversingModel;\n    const excludeModels = propModelInf.excludeModels || [];\n\n    if (dataModel === nonTraversingModel) {\n        return;\n    }\n\n    const propagate = excludeModels.length ? excludeModels.indexOf(dataModel) === -1 : true;\n\n    propagate && dataModel.handlePropagation(propModel, config);\n\n    const children = dataModel._children;\n    children.forEach((child) => {\n        let [selectionModel, rejectionModel] = applyExistingOperationOnModel(propModel, child);\n        propagateIdentifiers(child, [selectionModel, rejectionModel], config, propModelInf);\n    });\n};\n\nexport const getRootGroupByModel = (model) => {\n    if (model._parent && model._derivation.find(d => d.op !== 'group')) {\n        return getRootGroupByModel(model._parent);\n    }\n    return model;\n};\n\nexport const getRootDataModel = (model) => {\n    while (model._parent) {\n        model = model._parent;\n    }\n    return model;\n};\n\nexport const getPathToRootModel = (model, path = []) => {\n    while (model._parent) {\n        path.push(model);\n        model = model._parent;\n    }\n    return path;\n};\n\nexport const propagateToAllDataModels = (identifiers, rootModels, propagationInf, config) => {\n    let criteria;\n    let propModel;\n    const { propagationNameSpace, propagateToSource } = propagationInf;\n    const propagationSourceId = propagationInf.sourceId;\n    const propagateInterpolatedValues = config.propagateInterpolatedValues;\n    const filterFn = (entry) => {\n        const filter = config.filterFn || (() => true);\n        return filter(entry, config);\n    };\n\n    let criterias = [];\n\n    if (identifiers === null && config.persistent !== true) {\n        criterias = [{\n            criteria: []\n        }];\n    } else {\n        let actionCriterias = Object.values(propagationNameSpace.mutableActions);\n        if (propagateToSource !== false) {\n            actionCriterias = actionCriterias.filter(d => d.config.sourceId !== propagationSourceId);\n        }\n\n        const filteredCriteria = actionCriterias.filter(filterFn).map(action => action.config.criteria);\n\n        const excludeModels = [];\n\n        if (propagateToSource !== false) {\n            const sourceActionCriterias = Object.values(propagationNameSpace.mutableActions);\n\n            sourceActionCriterias.forEach((actionInf) => {\n                const actionConf = actionInf.config;\n                if (actionConf.applyOnSource === false && actionConf.action === config.action &&\n                        actionConf.sourceId !== propagationSourceId) {\n                    excludeModels.push(actionInf.model);\n                    criteria = sourceActionCriterias.filter(d => d !== actionInf).map(d => d.config.criteria);\n                    criteria.length && criterias.push({\n                        criteria,\n                        models: actionInf.model,\n                        path: getPathToRootModel(actionInf.model)\n                    });\n                }\n            });\n        }\n\n\n        criteria = [].concat(...[...filteredCriteria, identifiers]).filter(d => d !== null);\n        criterias.push({\n            criteria,\n            excludeModels: [...excludeModels, ...config.excludeModels || []]\n        });\n    }\n\n    const rootModel = rootModels.model;\n\n    const propConfig = Object.assign({\n        sourceIdentifiers: identifiers,\n        propagationSourceId\n    }, config);\n\n    const rootGroupByModel = rootModels.groupByModel;\n    if (propagateInterpolatedValues && rootGroupByModel) {\n        propModel = filterPropagationModel(rootGroupByModel, criteria, {\n            filterByMeasure: propagateInterpolatedValues\n        });\n        propagateIdentifiers(rootGroupByModel, propModel, propConfig);\n    }\n\n    criterias.forEach((inf) => {\n        const propagationModel = filterPropagationModel(rootModel, inf.criteria);\n        const path = inf.path;\n\n        if (path) {\n            const filteredModel = getFilteredModel(propagationModel, path.reverse());\n            inf.models.handlePropagation(filteredModel, propConfig);\n        } else {\n            propagateIdentifiers(rootModel, propagationModel, propConfig, {\n                excludeModels: inf.excludeModels,\n                nonTraversingModel: propagateInterpolatedValues && rootGroupByModel\n            });\n        }\n    });\n};\n\nexport const propagateImmutableActions = (propagationNameSpace, rootModels, propagationInf) => {\n    const immutableActions = propagationNameSpace.immutableActions;\n\n    for (const action in immutableActions) {\n        const actionInf = immutableActions[action];\n        const actionConf = actionInf.config;\n        const propagationSourceId = propagationInf.config.sourceId;\n        const filterImmutableAction = propagationInf.propConfig.filterImmutableAction ?\n            propagationInf.propConfig.filterImmutableAction(actionConf, propagationInf.config) : true;\n        if (actionConf.sourceId !== propagationSourceId && filterImmutableAction) {\n            const criteriaModel = actionConf.criteria;\n            propagateToAllDataModels(criteriaModel, rootModels, {\n                propagationNameSpace,\n                propagateToSource: false,\n                sourceId: propagationSourceId\n            }, actionConf);\n        }\n    }\n};\n\nexport const addToPropNamespace = (propagationNameSpace, config = {}, model) => {\n    let sourceNamespace;\n    const isMutableAction = config.isMutableAction;\n    const criteria = config.criteria;\n    const key = `${config.action}-${config.sourceId}`;\n\n    if (isMutableAction) {\n        sourceNamespace = propagationNameSpace.mutableActions;\n    } else {\n        sourceNamespace = propagationNameSpace.immutableActions;\n    }\n\n    if (criteria === null) {\n        delete sourceNamespace[key];\n    } else {\n        sourceNamespace[key] = {\n            model,\n            config\n        };\n    }\n\n    return this;\n};\n","const DataModel = require('./export');\n\nmodule.exports = DataModel.default ? DataModel.default : DataModel;\n","/**\n * A parser to parser null, undefined, invalid and NIL values.\n *\n * @public\n * @class\n */\nclass InvalidAwareTypes {\n    /**\n     * Static method which gets/sets the invalid value registry.\n     *\n     * @public\n     * @param {Object} config - The custom configuration supplied by user.\n     * @return {Object} Returns the invalid values registry.\n     */\n    static invalidAwareVals (config) {\n        if (!config) {\n            return InvalidAwareTypes._invalidAwareValsMap;\n        }\n        return Object.assign(InvalidAwareTypes._invalidAwareValsMap, config);\n    }\n\n    /**\n     * Initialize a new instance.\n     *\n     * @public\n     * @param {string} value - The value of the invalid data type.\n     */\n    constructor (value) {\n        this._value = value;\n    }\n\n    /**\n     * Returns the current value of the instance.\n     *\n     * @public\n     * @return {string} Returns the value of the invalid data type.\n     */\n    value () {\n        return this._value;\n    }\n\n    /**\n     * Returns the current value of the instance in string format.\n     *\n     * @public\n     * @return {string} Returns the value of the invalid data type.\n     */\n    toString () {\n        return String(this._value);\n    }\n\n    static isInvalid(val) {\n        return (val instanceof InvalidAwareTypes) || !!InvalidAwareTypes.invalidAwareVals()[val];\n    }\n\n    static getInvalidType(val) {\n        return val instanceof InvalidAwareTypes ? val : InvalidAwareTypes.invalidAwareVals()[val];\n    }\n}\n\n/**\n * Enums for Invalid types.\n */\nInvalidAwareTypes.NULL = new InvalidAwareTypes('null');\nInvalidAwareTypes.NA = new InvalidAwareTypes('na');\nInvalidAwareTypes.NIL = new InvalidAwareTypes('nil');\n\n/**\n * Default Registry for mapping the invalid values.\n *\n * @private\n */\nInvalidAwareTypes._invalidAwareValsMap = {\n    invalid: InvalidAwareTypes.NA,\n    nil: InvalidAwareTypes.NIL,\n    null: InvalidAwareTypes.NULL,\n    undefined: InvalidAwareTypes.NA\n};\n\nexport default InvalidAwareTypes;\n","import { rowDiffsetIterator } from './row-diffset-iterator';\nimport InvalidAwareTypes from '../invalid-aware-types';\n\nconst generateBuckets = (binSize, start, end) => {\n    const buckets = [];\n    let next = start;\n\n    while (next < end) {\n        buckets.push(next);\n        next += binSize;\n    }\n    buckets.push(next);\n\n    return buckets;\n};\n\nconst findBucketRange = (bucketRanges, value) => {\n    let leftIdx = 0;\n    let rightIdx = bucketRanges.length - 1;\n    let midIdx;\n    let range;\n\n    // Here use binary search as the bucketRanges is a sorted array\n    while (leftIdx <= rightIdx) {\n        midIdx = leftIdx + Math.floor((rightIdx - leftIdx) / 2);\n        range = bucketRanges[midIdx];\n\n        if (value >= range.start && value < range.end) {\n            return range;\n        } else if (value >= range.end) {\n            leftIdx = midIdx + 1;\n        } else if (value < range.start) {\n            rightIdx = midIdx - 1;\n        }\n    }\n\n    return null;\n};\n\n /**\n  * Creates the bin data from input measure field and supplied configs.\n  *\n  * @param {Measure} measureField - The Measure field instance.\n  * @param {string} rowDiffset - The datamodel rowDiffset values.\n  * @param {Object} config - The config object.\n  * @return {Object} Returns the binned data and the corresponding bins.\n  */\nexport function createBinnedFieldData (measureField, rowDiffset, config) {\n    let { buckets, binsCount, binSize, start, end } = config;\n    const [dMin, dMax] = measureField.domain();\n\n    if (!buckets) {\n        start = (start !== 0 && (!start || start > dMin)) ? dMin : start;\n        end = (end !== 0 && (!end || end < dMax)) ? (dMax + 1) : end;\n\n        if (binsCount) {\n            binSize = Math.ceil(Math.abs(end - start) / binsCount);\n        }\n\n        buckets = generateBuckets(binSize, start, end);\n    }\n\n    if (buckets[0] > dMin) {\n        buckets.unshift(dMin);\n    }\n    if (buckets[buckets.length - 1] <= dMax) {\n        buckets.push(dMax + 1);\n    }\n\n    const bucketRanges = [];\n    for (let i = 0; i < buckets.length - 1; i++) {\n        bucketRanges.push({\n            start: buckets[i],\n            end: buckets[i + 1]\n        });\n    }\n\n    const binnedData = [];\n    rowDiffsetIterator(rowDiffset, (i) => {\n        const datum = measureField.partialField.data[i];\n        if (datum instanceof InvalidAwareTypes) {\n            binnedData.push(datum);\n            return;\n        }\n\n        const range = findBucketRange(bucketRanges, datum);\n        binnedData.push(`${range.start}-${range.end}`);\n    });\n\n    return { binnedData, bins: buckets };\n}\n","\n/**\n * DataModel's opearators are exposed as composable functional operators as well as chainable operators. Chainable\n * operators are called on the instances of {@link Datamodel} and {@link Relation} class.\n *\n * Those same operators can be used as composable operators from `DataModel.Operators` namespace.\n *\n * All these operators have similar behaviour. All these operators when called with the argument returns a function\n * which expects a DataModel instance.\n *\n * @public\n * @module Operators\n * @namespace DataModel\n */\n\n/**\n * This is functional version of selection operator. {@link link_to_selection | Selection} is a row filtering operation.\n * It takes {@link SelectionPredicate | predicate} for filtering criteria and returns a function.\n * The returned function is called with the DataModel instance on which the action needs to be performed.\n *\n * {@link SelectionPredicate} is a function which returns a boolean value. For selection opearation the selection\n * function is called for each row of DataModel instance with the current row passed as argument.\n *\n * After executing {@link SelectionPredicate} the rows are labeled as either an entry of selection set or an entry\n * of rejection set.\n *\n * {@link FilteringMode} operates on the selection and rejection set to determine which one would reflect in the\n * resulatant datamodel.\n *\n * @warning\n * [Warn] Selection and rejection set is only a logical idea for concept explanation purpose.\n *\n * @error\n * [Error] `FilteringMode.ALL` is not a valid working mode for functional version of `select`. Its only avialable on the\n * chained version.\n *\n * @example\n * const select = DataModel.Operators.select;\n * usaCarsFn = select(fields => fields.Origin.value === 'USA');\n * usaCarsDm = usaCarsFn(dm);\n * console.log(usaCarsDm);\n *\n * @public\n * @namespace DataModel\n * @module Operators\n *\n * @param {SelectionPredicate} selectFn - Predicate funciton which is called for each row with the current row\n *      ```\n *          function (row, i)  { ... }\n *      ```\n * @param {Object} [config] - The configuration object to control the inclusion exclusion of a row in resultant\n *      DataModel instance\n * @param {FilteringMode} [config.mode=FilteringMode.NORMAL] - The mode of the selection\n *\n * @return {PreparatorFunction} Function which expects an instance of DataModel on which the operator needs to be\n *      applied.\n */\nexport const select = (...args) => dm => dm.select(...args);\n\n/**\n * This is functional version of projection operator. {@link link_to_projection | Projection} is a column filtering\n * operation.It expects list of fields name and either include those or exclude those based on {@link FilteringMode} on\n * the  resultant variable.It returns a function which is called with the DataModel instance on which the action needs\n * to be performed.\n *\n * Projection expects array of fields name based on which it creates the selection and rejection set. All the field\n * whose name is present in array goes in selection set and rest of the fields goes in rejection set.\n *\n * {@link FilteringMode} operates on the selection and rejection set to determine which one would reflect in the\n * resulatant datamodel.\n *\n * @warning\n * Selection and rejection set is only a logical idea for concept explanation purpose.\n *\n * @error\n * `FilteringMode.ALL` is not a valid working mode for functional version of `select`. Its only avialable on the\n * chained version.\n *\n * @public\n * @namespace DataModel\n * @module Operators\n *\n * @param {Array.<string | Regexp>} projField - An array of column names in string or regular expression.\n * @param {Object} [config] - An optional config to control the creation of new DataModel\n * @param {FilteringMode} [config.mode=FilteringMode.NORMAL] - Mode of the projection\n *\n * @return {PreparatorFunction} Function which expects an instance of DataModel on which the operator needs to be\n *      applied.\n */\nexport const project = (...args) => dm => dm.project(...args);\n\n/**\n * This is functional version of binnig operator. Binning happens on a measure field based on a binning configuration.\n * Binning in DataModel does not aggregate the number of rows present in DataModel instance after binning, it just adds\n * a new field with the binned value. Refer binning {@link example_of_binning | example} to have a intuition of what\n * binning is and the use case.\n *\n * Binning can be configured by\n * - providing custom bin configuration with non uniform buckets\n * - providing bin count\n * - providing each bin size\n *\n * When custom buckets are provided as part of binning configuration\n * @example\n *  // DataModel already prepared and assigned to dm vairable\n *  const buckets = {\n *      start: 30\n *      stops: [80, 100, 110]\n *  };\n *  const config = { buckets, name: 'binnedHP' }\n *  const binFn = bin('horsepower', config);\n *  const binnedDm = binFn(dm);\n *\n * @text\n * When `binCount` is defined as part of binning configuration\n * @example\n *  // DataModel already prepared and assigned to dm vairable\n *  const config = { binCount: 5, name: 'binnedHP' }\n *  const binFn = bin('horsepower', config);\n *  const binnedDm = binFn(Dm);\n *\n * @text\n * When `binSize` is defined as part of binning configuration\n * @example\n *  // DataModel already prepared and assigned to dm vairable\n *  const config = { binSize: 200, name: 'binnedHorsepower' }\n *  const binnedDm = dataModel.bin('horsepower', config);\n *  const binnedDm = binFn(Dm);\n *\n * @public\n * @namespace DataModel\n * @module Operators\n *\n * @param {String} name Name of measure which will be used to create bin\n * @param {Object} config Config required for bin creation\n * @param {Array.<Number>} config.bucketObj.stops Defination of bucket ranges. Two subsequent number from arrays\n *      are picked and a range is created. The first number from range is inclusive and the second number from range\n *      is exclusive.\n * @param {Number} [config.bucketObj.startAt] Force the start of the bin from a particular number.\n *      If not mentioned, the start of the bin or the lower domain of the data if stops is not mentioned, else its\n *      the first value of the stop.\n * @param {Number} config.binSize Bucket size for each bin\n * @param {Number} config.binCount Number of bins which will be created\n * @param {String} config.name Name of the new binned field to be created\n *\n * @return {PreparatorFunction} Function which expects an instance of DataModel on which the operator needs to be\n *      applied.\n */\nexport const bin = (...args) => dm => dm.bin(...args);\n\n/**\n * This is functional version of `groupBy` operator.Groups the data using particular dimensions and by reducing\n * measures. It expects a list of dimensions using which it projects the datamodel and perform aggregations to reduce\n * the duplicate tuples. Refer this {@link link_to_one_example_with_group_by | document} to know the intuition behind\n * groupBy.\n *\n * DataModel by default provides definition of few {@link reducer | Reducers}.\n * {@link ReducerStore | User defined reducers} can also be registered.\n *\n * This is the chained implementation of `groupBy`.\n * `groupBy` also supports {@link link_to_compose_groupBy | composability}\n *\n * @example\n * const groupBy = DataModel.Operators.groupBy;\n * const groupedFn = groupBy(['Year'], { horsepower: 'max' } );\n * groupedDM = groupByFn(dm);\n *\n * @public\n *\n * @param {Array.<string>} fieldsArr - Array containing the name of dimensions\n * @param {Object} [reducers={}] - A map whose key is the variable name and value is the name of the reducer. If its\n *      not passed, or any variable is ommitted from the object, default aggregation function is used from the\n *      schema of the variable.\n *\n * @return {PreparatorFunction} Function which expects an instance of DataModel on which the operator needs to be\n *      applied.\n */\nexport const groupBy = (...args) => dm => dm.groupBy(...args);\n\n/**\n * Enables composing operators to run multiple operations and save group of operataion as named opration on a DataModel.\n * The resulting DataModel will be the result of all the operation provided. The operations provided will be executed in\n * a serial manner ie. result of one operation will be the input for the next operations (like pipe operator in unix).\n *\n * Suported operations in compose are\n * - `select`\n * - `project`\n * - `groupBy`\n * - `bin`\n * - `compose`\n *\n * @example\n * const compose = DataModel.Operators.compose;\n * const select = DataModel.Operators.select;\n * const project = DataModel.Operators.project;\n *\n * let composedFn = compose(\n *    select(fields => fields.netprofit.value <= 15),\n *    project(['netprofit', 'netsales']));\n *\n * const dataModel = new DataModel(data1, schema1);\n *\n * let composedDm = composedFn(dataModel);\n *\n * @public\n * @namespace DataModel\n * @module Operators\n *\n * @param {Array.<Operators>} operators: An array of operation that will be applied on the\n * datatable.\n *\n * @returns {DataModel} Instance of resultant DataModel\n */\nexport const compose = (...operations) =>\n    (dm, config = { saveChild: true }) => {\n        let currentDM = dm;\n        let frstChild;\n        const derivations = [];\n        const saveChild = config.saveChild;\n\n        operations.forEach((operation) => {\n            currentDM = operation(currentDM);\n            derivations.push(...currentDM._derivation);\n            if (!frstChild) {\n                frstChild = currentDM;\n            }\n        });\n\n        saveChild && currentDM.addParent(dm, derivations);\n        if (derivations.length > 1) {\n            frstChild.dispose();\n        }\n\n        return currentDM;\n    };\n","import DataModel from '../datamodel';\nimport { extend2 } from '../utils';\nimport { getCommonSchema } from './get-common-schema';\nimport { rowDiffsetIterator } from './row-diffset-iterator';\nimport { JOINS } from '../constants';\nimport { prepareJoinData } from '../helper';\n/**\n * Default filter function for crossProduct.\n *\n * @return {boolean} Always returns true.\n */\nfunction defaultFilterFn() { return true; }\n\n/**\n * Implementation of cross product operation between two DataModel instances.\n * It internally creates the data and schema for the new DataModel.\n *\n * @param {DataModel} dataModel1 - The left DataModel instance.\n * @param {DataModel} dataModel2 - The right DataModel instance.\n * @param {Function} filterFn - The filter function which is used to filter the tuples.\n * @param {boolean} [replaceCommonSchema=false] - The flag if the common name schema should be there.\n * @return {DataModel} Returns The newly created DataModel instance from the crossProduct operation.\n */\nexport function crossProduct (dm1, dm2, filterFn, replaceCommonSchema = false, jointype = JOINS.CROSS) {\n    const schema = [];\n    const data = [];\n    const applicableFilterFn = filterFn || defaultFilterFn;\n    const dm1FieldStore = dm1.getFieldspace();\n    const dm2FieldStore = dm2.getFieldspace();\n    const dm1FieldStoreName = dm1FieldStore.name;\n    const dm2FieldStoreName = dm2FieldStore.name;\n    const name = `${dm1FieldStore.name}.${dm2FieldStore.name}`;\n    const commonSchemaList = getCommonSchema(dm1FieldStore, dm2FieldStore);\n\n    if (dm1FieldStoreName === dm2FieldStoreName) {\n        throw new Error('DataModels must have different alias names');\n    }\n    // Here prepare the schema\n    dm1FieldStore.fields.forEach((field) => {\n        const tmpSchema = extend2({}, field.schema());\n        if (commonSchemaList.indexOf(tmpSchema.name) !== -1 && !replaceCommonSchema) {\n            tmpSchema.name = `${dm1FieldStore.name}.${tmpSchema.name}`;\n        }\n        schema.push(tmpSchema);\n    });\n    dm2FieldStore.fields.forEach((field) => {\n        const tmpSchema = extend2({}, field.schema());\n        if (commonSchemaList.indexOf(tmpSchema.name) !== -1) {\n            if (!replaceCommonSchema) {\n                tmpSchema.name = `${dm2FieldStore.name}.${tmpSchema.name}`;\n                schema.push(tmpSchema);\n            }\n        } else {\n            schema.push(tmpSchema);\n        }\n    });\n\n    // Here prepare Data\n    rowDiffsetIterator(dm1._rowDiffset, (i) => {\n        let rowAdded = false;\n        let rowPosition;\n        rowDiffsetIterator(dm2._rowDiffset, (ii) => {\n            const tuple = [];\n            const userArg = {};\n            userArg[dm1FieldStoreName] = {};\n            userArg[dm2FieldStoreName] = {};\n            dm1FieldStore.fields.forEach((field) => {\n                tuple.push(field.partialField.data[i]);\n                userArg[dm1FieldStoreName][field.name()] = field.partialField.data[i];\n            });\n            dm2FieldStore.fields.forEach((field) => {\n                if (!(commonSchemaList.indexOf(field.schema().name) !== -1 && replaceCommonSchema)) {\n                    tuple.push(field.partialField.data[ii]);\n                }\n                userArg[dm2FieldStoreName][field.name()] = field.partialField.data[ii];\n            });\n\n            let cachedStore = {};\n            let cloneProvider1 = () => dm1.detachedRoot();\n            let cloneProvider2 = () => dm2.detachedRoot();\n\n            const dm1Fields = prepareJoinData(userArg[dm1FieldStoreName]);\n            const dm2Fields = prepareJoinData(userArg[dm2FieldStoreName]);\n            if (applicableFilterFn(dm1Fields, dm2Fields, cloneProvider1, cloneProvider2, cachedStore)) {\n                const tupleObj = {};\n                tuple.forEach((cellVal, iii) => {\n                    tupleObj[schema[iii].name] = cellVal;\n                });\n                if (rowAdded && JOINS.CROSS !== jointype) {\n                    data[rowPosition] = tupleObj;\n                }\n                else {\n                    data.push(tupleObj);\n                    rowAdded = true;\n                    rowPosition = i;\n                }\n            } else if ((jointype === JOINS.LEFTOUTER || jointype === JOINS.RIGHTOUTER) && !rowAdded) {\n                const tupleObj = {};\n                let len = dm1FieldStore.fields.length - 1;\n                tuple.forEach((cellVal, iii) => {\n                    if (iii <= len) {\n                        tupleObj[schema[iii].name] = cellVal;\n                    }\n                    else {\n                        tupleObj[schema[iii].name] = null;\n                    }\n                });\n                rowAdded = true;\n                rowPosition = i;\n                data.push(tupleObj);\n            }\n        });\n    });\n\n    return new DataModel(data, schema, { name });\n}\n","import { DimensionSubtype, MeasureSubtype } from '../enums';\nimport { rowDiffsetIterator } from './row-diffset-iterator';\nimport { mergeSort } from './merge-sort';\nimport { fieldInSchema } from '../helper';\nimport { isCallable, isArray, } from '../utils';\n/**\n * Generates the sorting functions to sort the data of a DataModel instance\n * according to the input data type.\n *\n * @param {string} dataType - The data type e.g. 'measure', 'datetime' etc.\n * @param {string} sortType - The sorting order i.e. 'asc' or 'desc'.\n * @param {integer} index - The index of the data which will be sorted.\n * @return {Function} Returns the the sorting function.\n */\nfunction getSortFn (dataType, sortType, index) {\n    let retFunc;\n    switch (dataType) {\n    case MeasureSubtype.CONTINUOUS:\n    case DimensionSubtype.TEMPORAL:\n        if (sortType === 'desc') {\n            retFunc = (a, b) => b[index] - a[index];\n        } else {\n            retFunc = (a, b) => a[index] - b[index];\n        }\n        break;\n    default:\n        retFunc = (a, b) => {\n            const a1 = `${a[index]}`;\n            const b1 = `${b[index]}`;\n            if (a1 < b1) {\n                return sortType === 'desc' ? 1 : -1;\n            }\n            if (a1 > b1) {\n                return sortType === 'desc' ? -1 : 1;\n            }\n            return 0;\n        };\n    }\n    return retFunc;\n}\n\n/**\n * Groups the data according to the specified target field.\n *\n * @param {Array} data - The input data array.\n * @param {number} fieldIndex - The target field index within schema array.\n * @return {Array} Returns an array containing the grouped data.\n */\nfunction groupData(data, fieldIndex) {\n    const hashMap = new Map();\n    const groupedData = [];\n\n    data.forEach((datum) => {\n        const fieldVal = datum[fieldIndex];\n        if (hashMap.has(fieldVal)) {\n            groupedData[hashMap.get(fieldVal)][1].push(datum);\n        } else {\n            groupedData.push([fieldVal, [datum]]);\n            hashMap.set(fieldVal, groupedData.length - 1);\n        }\n    });\n\n    return groupedData;\n}\n\n/**\n * Creates the argument value used for sorting function when sort is done\n * with another fields.\n *\n * @param {Array} groupedDatum - The grouped datum for a single dimension field value.\n * @param {Array} targetFields - An array of the sorting fields.\n * @param {Array} targetFieldDetails - An array of the sorting field details in schema.\n * @return {Object} Returns an object containing the value of sorting fields and the target field name.\n */\nfunction createSortingFnArg(groupedDatum, targetFields, targetFieldDetails) {\n    const arg = {\n        label: groupedDatum[0]\n    };\n\n    targetFields.reduce((acc, next, idx) => {\n        acc[next] = groupedDatum[1].map(datum => datum[targetFieldDetails[idx].index]);\n        return acc;\n    }, arg);\n\n    return arg;\n}\n\n/**\n * Sorts the data before return in dataBuilder.\n *\n * @param {Object} dataObj - An object containing the data and schema.\n * @param {Array} sortingDetails - An array containing the sorting configs.\n */\nfunction sortData(dataObj, sortingDetails) {\n    const { data, schema } = dataObj;\n    let fieldName;\n    let sortMeta;\n    let fDetails;\n    let i = sortingDetails.length - 1;\n\n    for (; i >= 0; i--) {\n        fieldName = sortingDetails[i][0];\n        sortMeta = sortingDetails[i][1];\n        fDetails = fieldInSchema(schema, fieldName);\n\n        if (!fDetails) {\n            // eslint-disable-next-line no-continue\n            continue;\n        }\n\n        if (isCallable(sortMeta)) {\n            // eslint-disable-next-line no-loop-func\n            mergeSort(data, (a, b) => sortMeta(a[fDetails.index], b[fDetails.index]));\n        } else if (isArray(sortMeta)) {\n            const groupedData = groupData(data, fDetails.index);\n            const sortingFn = sortMeta[sortMeta.length - 1];\n            const targetFields = sortMeta.slice(0, sortMeta.length - 1);\n            const targetFieldDetails = targetFields.map(f => fieldInSchema(schema, f));\n\n            groupedData.forEach((groupedDatum) => {\n                groupedDatum.push(createSortingFnArg(groupedDatum, targetFields, targetFieldDetails));\n            });\n\n            mergeSort(groupedData, (a, b) => {\n                const m = a[2];\n                const n = b[2];\n                return sortingFn(m, n);\n            });\n\n            // Empty the array\n            data.length = 0;\n            groupedData.forEach((datum) => {\n                data.push(...datum[1]);\n            });\n        } else {\n            sortMeta = String(sortMeta).toLowerCase() === 'desc' ? 'desc' : 'asc';\n            mergeSort(data, getSortFn(fDetails.type, sortMeta, fDetails.index));\n        }\n    }\n\n    dataObj.uids = [];\n    data.forEach((value) => {\n        dataObj.uids.push(value.pop());\n    });\n}\n\n\n/**\n * Builds the actual data array.\n *\n * @param {Array} fieldStore - An array of field.\n * @param {string} rowDiffset - A string consisting of which rows to be included eg. '0-2,4,6';\n * @param {string} colIdentifier - A string consisting of the details of which column\n * to be included eg 'date,sales,profit';\n * @param {Object} sortingDetails - An object containing the sorting details of the DataModel instance.\n * @param {Object} options - The options required to create the type of the data.\n * @return {Object} Returns an object containing the multidimensional array and the relative schema.\n */\nexport function dataBuilder (fieldStore, rowDiffset, colIdentifier, sortingDetails, options) {\n    const defOptions = {\n        addUid: false,\n        columnWise: false\n    };\n    options = Object.assign({}, defOptions, options);\n\n    const retObj = {\n        schema: [],\n        data: [],\n        uids: []\n    };\n    const addUid = options.addUid;\n    const reqSorting = sortingDetails && sortingDetails.length > 0;\n    // It stores the fields according to the colIdentifier argument\n    const tmpDataArr = [];\n    // Stores the fields according to the colIdentifier argument\n    const colIArr = colIdentifier.split(',');\n\n    colIArr.forEach((colName) => {\n        for (let i = 0; i < fieldStore.length; i += 1) {\n            if (fieldStore[i].name() === colName) {\n                tmpDataArr.push(fieldStore[i]);\n                break;\n            }\n        }\n    });\n\n    // Inserts the schema to the schema object\n    tmpDataArr.forEach((field) => {\n        /** @todo Need to use extend2 here otherwise user can overwrite the schema. */\n        retObj.schema.push(field.schema());\n    });\n\n    if (addUid) {\n        retObj.schema.push({\n            name: 'uid',\n            type: 'identifier'\n        });\n    }\n\n    rowDiffsetIterator(rowDiffset, (i) => {\n        retObj.data.push([]);\n        const insertInd = retObj.data.length - 1;\n        let start = 0;\n        tmpDataArr.forEach((field, ii) => {\n            retObj.data[insertInd][ii + start] = field.partialField.data[i];\n        });\n        if (addUid) {\n            retObj.data[insertInd][tmpDataArr.length] = i;\n        }\n        // Creates an array of unique identifiers for each row\n        retObj.uids.push(i);\n\n        // If sorting needed then there is the need to expose the index\n        // mapping from the old index to its new index\n        if (reqSorting) { retObj.data[insertInd].push(i); }\n    });\n\n    // Handles the sort functionality\n    if (reqSorting) {\n        sortData(retObj, sortingDetails);\n    }\n\n    if (options.columnWise) {\n        const tmpData = Array(...Array(retObj.schema.length)).map(() => []);\n        retObj.data.forEach((tuple) => {\n            tuple.forEach((data, i) => {\n                tmpData[i].push(data);\n            });\n        });\n        retObj.data = tmpData;\n    }\n\n    return retObj;\n}\n","import DataModel from '../datamodel';\nimport { extend2 } from '../utils';\nimport { rowDiffsetIterator } from './row-diffset-iterator';\nimport { isArrEqual } from '../utils/helper';\n\n/**\n * Performs the union operation between two dm instances.\n *\n * @todo Fix the conflicts between union and difference terminology here.\n *\n * @param {dm} dm1 - The first dm instance.\n * @param {dm} dm2 - The second dm instance.\n * @return {dm} Returns the newly created dm after union operation.\n */\nexport function difference (dm1, dm2) {\n    const hashTable = {};\n    const schema = [];\n    const schemaNameArr = [];\n    const data = [];\n    const dm1FieldStore = dm1.getFieldspace();\n    const dm2FieldStore = dm2.getFieldspace();\n    const dm1FieldStoreFieldObj = dm1FieldStore.fieldsObj();\n    const dm2FieldStoreFieldObj = dm2FieldStore.fieldsObj();\n    const name = `${dm1FieldStore.name} union ${dm2FieldStore.name}`;\n\n   // For union the columns should match otherwise return a clone of the dm1\n    if (!isArrEqual(dm1._colIdentifier.split(',').sort(), dm2._colIdentifier.split(',').sort())) {\n        return null;\n    }\n\n    // Prepare the schema\n    (dm1._colIdentifier.split(',')).forEach((fieldName) => {\n        const field = dm1FieldStoreFieldObj[fieldName];\n        schema.push(extend2({}, field.schema()));\n        schemaNameArr.push(field.schema().name);\n    });\n\n    /**\n     * The helper function to create the data.\n     *\n     * @param {dm} dm - The dm instance for which the data is inserted.\n     * @param {Object} fieldsObj - The fieldStore object format.\n     * @param {boolean} addData - If true only tuple will be added to the data.\n     */\n    function prepareDataHelper(dm, fieldsObj, addData) {\n        rowDiffsetIterator(dm._rowDiffset, (i) => {\n            const tuple = {};\n            let hashData = '';\n            schemaNameArr.forEach((schemaName) => {\n                const value = fieldsObj[schemaName].partialField.data[i];\n                hashData += `-${value}`;\n                tuple[schemaName] = value;\n            });\n            if (!hashTable[hashData]) {\n                if (addData) { data.push(tuple); }\n                hashTable[hashData] = true;\n            }\n        });\n    }\n\n    // Prepare the data\n    prepareDataHelper(dm2, dm2FieldStoreFieldObj, false);\n    prepareDataHelper(dm1, dm1FieldStoreFieldObj, true);\n\n    return new DataModel(data, schema, { name });\n}\n\n","/**\n * The helper function that returns an array of common schema\n * from two fieldStore instances.\n *\n * @param {FieldStore} fs1 - The first FieldStore instance.\n * @param {FieldStore} fs2 - The second FieldStore instance.\n * @return {Array} An array containing the common schema.\n */\nexport function getCommonSchema (fs1, fs2) {\n    const retArr = [];\n    const fs1Arr = [];\n    fs1.fields.forEach((field) => {\n        fs1Arr.push(field.schema().name);\n    });\n    fs2.fields.forEach((field) => {\n        if (fs1Arr.indexOf(field.schema().name) !== -1) {\n            retArr.push(field.schema().name);\n        }\n    });\n    return retArr;\n}\n","import { isArray } from '../utils';\nimport InvalidAwareTypes from '../invalid-aware-types';\n\n\nfunction getFilteredValues(arr) {\n    return arr.filter(item => !(item instanceof InvalidAwareTypes));\n}\n/**\n * Reducer function that returns the sum of all the values.\n *\n * @public\n * @param  {Array.<number>} arr - The input array.\n * @return {number} Returns the sum of the array.\n */\nfunction sum (arr) {\n    if (isArray(arr) && !(arr[0] instanceof Array)) {\n        const filteredNumber = getFilteredValues(arr);\n        const totalSum = filteredNumber.length ?\n                            filteredNumber.reduce((acc, curr) => acc + curr, 0)\n                            : InvalidAwareTypes.NULL;\n        return totalSum;\n    }\n    return InvalidAwareTypes.NULL;\n}\n\n/**\n * Reducer function that returns the average of all the values.\n *\n * @public\n * @param  {Array.<number>} arr - The input array.\n * @return {number} Returns the mean value of the array.\n */\nfunction avg (arr) {\n    if (isArray(arr) && !(arr[0] instanceof Array)) {\n        const totalSum = sum(arr);\n        const len = arr.length || 1;\n        return (Number.isNaN(totalSum) || totalSum instanceof InvalidAwareTypes) ?\n                 InvalidAwareTypes.NULL : totalSum / len;\n    }\n    return InvalidAwareTypes.NULL;\n}\n\n/**\n * Reducer function that gives the min value amongst all the values.\n *\n * @public\n * @param  {Array.<number>} arr - The input array.\n * @return {number} Returns the minimum value of the array.\n */\nfunction min (arr) {\n    if (isArray(arr) && !(arr[0] instanceof Array)) {\n        // Filter out undefined, null and NaN values\n        const filteredValues = getFilteredValues(arr);\n\n        return (filteredValues.length) ? Math.min(...filteredValues) : InvalidAwareTypes.NULL;\n    }\n    return InvalidAwareTypes.NULL;\n}\n\n/**\n * Reducer function that gives the max value amongst all the values.\n *\n * @public\n * @param  {Array.<number>} arr - The input array.\n * @return {number} Returns the maximum value of the array.\n */\nfunction max (arr) {\n    if (isArray(arr) && !(arr[0] instanceof Array)) {\n        // Filter out undefined, null and NaN values\n        const filteredValues = getFilteredValues(arr);\n\n        return (filteredValues.length) ? Math.max(...filteredValues) : InvalidAwareTypes.NULL;\n    }\n    return InvalidAwareTypes.NULL;\n}\n\n/**\n * Reducer function that gives the first value of the array.\n *\n * @public\n * @param  {Array} arr - The input array.\n * @return {number} Returns the first value of the array.\n */\nfunction first (arr) {\n    return arr[0];\n}\n\n/**\n * Reducer function that gives the last value of the array.\n *\n * @public\n * @param  {Array} arr - The input array.\n * @return {number} Returns the last value of the array.\n */\nfunction last (arr) {\n    return arr[arr.length - 1];\n}\n\n/**\n * Reducer function that gives the count value of the array.\n *\n * @public\n * @param  {Array} arr - The input array.\n * @return {number} Returns the length of the array.\n */\nfunction count (arr) {\n    if (isArray(arr)) {\n        return arr.length;\n    }\n    return InvalidAwareTypes.NULL;\n}\n\n/**\n * Calculates the variance of the input array.\n *\n * @param  {Array.<number>} arr - The input array.\n * @return {number} Returns the variance of the input array.\n */\nfunction variance (arr) {\n    let mean = avg(arr);\n    return avg(arr.map(num => (num - mean) ** 2));\n}\n\n/**\n * Calculates the square root of the variance of the input array.\n *\n * @public\n * @param  {Array.<number>} arr - The input array.\n * @return {number} Returns the square root of the variance.\n */\nfunction std (arr) {\n    return Math.sqrt(variance(arr));\n}\n\n\nconst fnList = {\n    sum,\n    avg,\n    min,\n    max,\n    first,\n    last,\n    count,\n    std\n};\n\nconst defaultReducerName = 'sum';\n\nexport {\n    defaultReducerName,\n    sum as defReducer,\n    fnList,\n};\n","import { extend2 } from '../utils';\nimport { rowDiffsetIterator } from './row-diffset-iterator';\nimport DataModel from '../export';\nimport reducerStore from '../utils/reducer-store';\nimport { defaultReducerName } from './group-by-function';\nimport { FieldType } from '../enums';\n\n/**\n * This function sanitize the user given field and return a common Array structure field\n * list\n * @param  {DataModel} dataModel the dataModel operating on\n * @param  {Array} fieldArr  user input of field Array\n * @return {Array}           arrays of field name\n */\nfunction getFieldArr (dataModel, fieldArr) {\n    const retArr = [];\n    const fieldStore = dataModel.getFieldspace();\n    const dimensions = fieldStore.getDimension();\n\n    Object.entries(dimensions).forEach(([key]) => {\n        if (fieldArr && fieldArr.length) {\n            if (fieldArr.indexOf(key) !== -1) {\n                retArr.push(key);\n            }\n        } else {\n            retArr.push(key);\n        }\n    });\n\n    return retArr;\n}\n\n/**\n * This sanitize the reducer provide by the user and create a common type of object.\n * user can give function Also\n * @param  {DataModel} dataModel     dataModel to worked on\n * @param  {Object|function} [reducers={}] reducer provided by the users\n * @return {Object}               object containing reducer function for every measure\n */\nfunction getReducerObj (dataModel, reducers = {}) {\n    const retObj = {};\n    const fieldStore = dataModel.getFieldspace();\n    const measures = fieldStore.getMeasure();\n    const defReducer = reducerStore.defaultReducer();\n\n    Object.keys(measures).forEach((measureName) => {\n        if (typeof reducers[measureName] !== 'string') {\n            reducers[measureName] = measures[measureName].defAggFn();\n        }\n        const reducerFn = reducerStore.resolve(reducers[measureName]);\n        if (reducerFn) {\n            retObj[measureName] = reducerFn;\n        } else {\n            retObj[measureName] = defReducer;\n            reducers[measureName] = defaultReducerName;\n        }\n    });\n    return retObj;\n}\n\n/**\n * main function which perform the group-by operations which reduce the measures value is the\n * fields are common according to the reducer function provided\n * @param  {DataModel} dataModel the dataModel to worked\n * @param  {Array} fieldArr  fields according to which the groupby should be worked\n * @param  {Object|Function} reducers  reducers function\n * @param {DataModel} existingDataModel Existing datamodel instance\n * @return {DataModel} new dataModel with the group by\n */\nfunction groupBy (dataModel, fieldArr, reducers, existingDataModel) {\n    const sFieldArr = getFieldArr(dataModel, fieldArr);\n    const reducerObj = getReducerObj(dataModel, reducers);\n    const fieldStore = dataModel.getFieldspace();\n    const fieldStoreObj = fieldStore.fieldsObj();\n    const dbName = fieldStore.name;\n    const dimensionArr = [];\n    const measureArr = [];\n    const schema = [];\n    const hashMap = {};\n    const data = [];\n    let newDataModel;\n\n    // Prepare the schema\n    Object.entries(fieldStoreObj).forEach(([key, value]) => {\n        if (sFieldArr.indexOf(key) !== -1 || reducerObj[key]) {\n            schema.push(extend2({}, value.schema()));\n\n            switch (value.schema().type) {\n            case FieldType.MEASURE:\n                measureArr.push(key);\n                break;\n            default:\n            case FieldType.DIMENSION:\n                dimensionArr.push(key);\n            }\n        }\n    });\n    // Prepare the data\n    let rowCount = 0;\n    rowDiffsetIterator(dataModel._rowDiffset, (i) => {\n        let hash = '';\n        dimensionArr.forEach((_) => {\n            hash = `${hash}-${fieldStoreObj[_].partialField.data[i]}`;\n        });\n        if (hashMap[hash] === undefined) {\n            hashMap[hash] = rowCount;\n            data.push({});\n            dimensionArr.forEach((_) => {\n                data[rowCount][_] = fieldStoreObj[_].partialField.data[i];\n            });\n            measureArr.forEach((_) => {\n                data[rowCount][_] = [fieldStoreObj[_].partialField.data[i]];\n            });\n            rowCount += 1;\n        } else {\n            measureArr.forEach((_) => {\n                data[hashMap[hash]][_].push(fieldStoreObj[_].partialField.data[i]);\n            });\n        }\n    });\n\n    // reduction\n    let cachedStore = {};\n    let cloneProvider = () => dataModel.detachedRoot();\n    data.forEach((row) => {\n        const tuple = row;\n        measureArr.forEach((_) => {\n            tuple[_] = reducerObj[_](row[_], cloneProvider, cachedStore);\n        });\n    });\n    if (existingDataModel) {\n        existingDataModel.__calculateFieldspace();\n        newDataModel = existingDataModel;\n    }\n    else {\n        newDataModel = new DataModel(data, schema, { name: dbName });\n    }\n    return newDataModel;\n}\n\nexport { groupBy, getFieldArr, getReducerObj };\n","export { createBinnedFieldData } from './bucket-creator';\nexport { compose, bin, select, project, groupBy as groupby } from './compose';\nexport { calculateVariable, sort } from './pure-operators';\nexport { crossProduct } from './cross-product';\nexport { dataBuilder } from './data-builder';\nexport { difference } from './difference';\nexport { getCommonSchema } from './get-common-schema';\nexport { defReducer, fnList } from './group-by-function';\nexport { groupBy, getFieldArr, getReducerObj } from './group-by';\nexport { mergeSort } from './merge-sort';\nexport { naturalJoinFilter } from './natural-join-filter-function';\nexport { naturalJoin } from './natural-join';\nexport { leftOuterJoin, rightOuterJoin, fullOuterJoin } from './outer-join';\nexport { rowDiffsetIterator } from './row-diffset-iterator';\nexport { union } from './union';\n","/**\n * The default sort function.\n *\n * @param {*} a - The first value.\n * @param {*} b - The second value.\n * @return {number} Returns the comparison result e.g. 1 or 0 or -1.\n */\nfunction defSortFn (a, b) {\n    const a1 = `${a}`;\n    const b1 = `${b}`;\n    if (a1 < b1) {\n        return -1;\n    }\n    if (a1 > b1) {\n        return 1;\n    }\n    return 0;\n}\n\n/**\n * The helper function for merge sort which creates the sorted array\n * from the two halves of the input array.\n *\n * @param {Array} arr - The target array which needs to be merged.\n * @param {number} lo - The starting index of the first array half.\n * @param {number} mid - The ending index of the first array half.\n * @param {number} hi - The ending index of the second array half.\n * @param {Function} sortFn - The sort function.\n */\nfunction merge (arr, lo, mid, hi, sortFn) {\n    const mainArr = arr;\n    const auxArr = [];\n    for (let i = lo; i <= hi; i += 1) {\n        auxArr[i] = mainArr[i];\n    }\n    let a = lo;\n    let b = mid + 1;\n\n    for (let i = lo; i <= hi; i += 1) {\n        if (a > mid) {\n            mainArr[i] = auxArr[b];\n            b += 1;\n        } else if (b > hi) {\n            mainArr[i] = auxArr[a];\n            a += 1;\n        } else if (sortFn(auxArr[a], auxArr[b]) <= 0) {\n            mainArr[i] = auxArr[a];\n            a += 1;\n        } else {\n            mainArr[i] = auxArr[b];\n            b += 1;\n        }\n    }\n}\n\n/**\n * The helper function for merge sort which would be called\n * recursively for sorting the array halves.\n *\n * @param {Array} arr - The target array which needs to be sorted.\n * @param {number} lo - The starting index of the array half.\n * @param {number} hi - The ending index of the array half.\n * @param {Function} sortFn - The sort function.\n * @return {Array} Returns the target array itself.\n */\nfunction sort (arr, lo, hi, sortFn) {\n    if (hi === lo) { return arr; }\n\n    const mid = lo + Math.floor((hi - lo) / 2);\n    sort(arr, lo, mid, sortFn);\n    sort(arr, mid + 1, hi, sortFn);\n    merge(arr, lo, mid, hi, sortFn);\n\n    return arr;\n}\n\n/**\n * The implementation of merge sort.\n * It is used in DataModel for stable sorting as it is not sure\n * what the sorting algorithm used by browsers is stable or not.\n *\n * @param {Array} arr - The target array which needs to be sorted.\n * @param {Function} [sortFn=defSortFn] - The sort function.\n * @return {Array} Returns the input array itself in sorted order.\n */\nexport function mergeSort (arr, sortFn = defSortFn) {\n    if (arr.length > 1) {\n        sort(arr, 0, arr.length - 1, sortFn);\n    }\n    return arr;\n}\n","import { getCommonSchema } from './get-common-schema';\n\n/**\n * The filter function used in natural join.\n * It generates a function that will have the logic to join two\n * DataModel instances by the process of natural join.\n *\n * @param {DataModel} dm1 - The left DataModel instance.\n * @param {DataModel} dm2 - The right DataModel instance.\n * @return {Function} Returns a function that is used in cross-product operation.\n */\nexport function naturalJoinFilter (dm1, dm2) {\n    const dm1FieldStore = dm1.getFieldspace();\n    const dm2FieldStore = dm2.getFieldspace();\n    // const dm1FieldStoreName = dm1FieldStore.name;\n    // const dm2FieldStoreName = dm2FieldStore.name;\n    const commonSchemaArr = getCommonSchema(dm1FieldStore, dm2FieldStore);\n\n    return (dm1Fields, dm2Fields) => {\n        let retainTuple = true;\n        commonSchemaArr.forEach((fieldName) => {\n            if (dm1Fields[fieldName].value ===\n                dm2Fields[fieldName].value && retainTuple) {\n                retainTuple = true;\n            } else {\n                retainTuple = false;\n            }\n        });\n        return retainTuple;\n    };\n}\n","import { crossProduct } from './cross-product';\nimport { naturalJoinFilter } from './natural-join-filter-function';\n\nexport function naturalJoin (dataModel1, dataModel2) {\n    return crossProduct(dataModel1, dataModel2, naturalJoinFilter(dataModel1, dataModel2), true);\n}\n","import { crossProduct } from './cross-product';\nimport { JOINS } from '../constants';\nimport { union } from './union';\n\n\nexport function leftOuterJoin (dataModel1, dataModel2, filterFn) {\n    return crossProduct(dataModel1, dataModel2, filterFn, false, JOINS.LEFTOUTER);\n}\n\nexport function rightOuterJoin (dataModel1, dataModel2, filterFn) {\n    return crossProduct(dataModel2, dataModel1, filterFn, false, JOINS.RIGHTOUTER);\n}\n\nexport function fullOuterJoin (dataModel1, dataModel2, filterFn) {\n    return union(leftOuterJoin(dataModel1, dataModel2, filterFn), rightOuterJoin(dataModel1, dataModel2, filterFn));\n}\n","/**\n * Wrapper on calculateVariable() method of DataModel to behave\n * the pure-function functionality.\n *\n * @param {Array} args - The argument list.\n * @return {any} Returns the returned value of calling function.\n */\nexport const calculateVariable = (...args) => dm => dm.calculateVariable(...args);\n\n/**\n * Wrapper on sort() method of DataModel to behave\n * the pure-function functionality.\n *\n * @param {Array} args - The argument list.\n * @return {any} Returns the returned value of calling function.\n */\nexport const sort = (...args) => dm => dm.sort(...args);\n","/**\n * Iterates through the diffSet array and call the callback with the current\n * index.\n *\n * @param {string} rowDiffset - The row diffset string e.g. '0-4,6,10-13'.\n * @param {Function} callback - The callback function to be called with every index.\n */\nexport function rowDiffsetIterator (rowDiffset, callback) {\n    if (rowDiffset.length > 0) {\n        const rowDiffArr = rowDiffset.split(',');\n        rowDiffArr.forEach((diffStr) => {\n            const diffStsArr = diffStr.split('-');\n            const start = +(diffStsArr[0]);\n            const end = +(diffStsArr[1] || diffStsArr[0]);\n            if (end >= start) {\n                for (let i = start; i <= end; i += 1) {\n                    callback(i);\n                }\n            }\n        });\n    }\n}\n","import DataModel from '../export';\nimport { extend2 } from '../utils';\nimport { rowDiffsetIterator } from './row-diffset-iterator';\nimport { isArrEqual } from '../utils/helper';\n/**\n * Performs the union operation between two dm instances.\n *\n * @param {dm} dm1 - The first dm instance.\n * @param {dm} dm2 - The second dm instance.\n * @return {dm} Returns the newly created dm after union operation.\n */\nexport function union (dm1, dm2) {\n    const hashTable = {};\n    const schema = [];\n    const schemaNameArr = [];\n    const data = [];\n    const dm1FieldStore = dm1.getFieldspace();\n    const dm2FieldStore = dm2.getFieldspace();\n    const dm1FieldStoreFieldObj = dm1FieldStore.fieldsObj();\n    const dm2FieldStoreFieldObj = dm2FieldStore.fieldsObj();\n    const name = `${dm1FieldStore.name} union ${dm2FieldStore.name}`;\n\n    // For union the columns should match otherwise return a clone of the dm1\n    if (!isArrEqual(dm1._colIdentifier.split(',').sort(), dm2._colIdentifier.split(',').sort())) {\n        return null;\n    }\n\n    // Prepare the schema\n    (dm1._colIdentifier.split(',')).forEach((fieldName) => {\n        const field = dm1FieldStoreFieldObj[fieldName];\n        schema.push(extend2({}, field.schema()));\n        schemaNameArr.push(field.schema().name);\n    });\n\n    /**\n     * The helper function to create the data.\n     *\n     * @param {dm} dm - The dm instance for which the data is inserted.\n     * @param {Object} fieldsObj - The fieldStore object format.\n     */\n    function prepareDataHelper (dm, fieldsObj) {\n        rowDiffsetIterator(dm._rowDiffset, (i) => {\n            const tuple = {};\n            let hashData = '';\n            schemaNameArr.forEach((schemaName) => {\n                const value = fieldsObj[schemaName].partialField.data[i];\n                hashData += `-${value}`;\n                tuple[schemaName] = value;\n            });\n            if (!hashTable[hashData]) {\n                data.push(tuple);\n                hashTable[hashData] = true;\n            }\n        });\n    }\n\n    // Prepare the data\n    prepareDataHelper(dm1, dm1FieldStoreFieldObj);\n    prepareDataHelper(dm2, dm2FieldStoreFieldObj);\n\n    return new DataModel(data, schema, { name });\n}\n","import { FilteringMode } from './enums';\nimport { getUniqueId } from './utils';\nimport { persistDerivation, updateFields, cloneWithSelect, cloneWithProject, updateData } from './helper';\nimport { crossProduct, difference, naturalJoinFilter, union } from './operator';\nimport { DM_DERIVATIVES } from './constants';\n\n/**\n * Relation provides the definitions of basic operators of relational algebra like *selection*, *projection*, *union*,\n * *difference* etc.\n *\n * It is extended by {@link DataModel} to inherit the functionalities of relational algebra concept.\n *\n * @class\n * @public\n * @module Relation\n * @namespace DataModel\n */\nclass Relation {\n\n    /**\n     * Creates a new Relation instance by providing underlying data and schema.\n     *\n     * @private\n     *\n     * @param {Object | string | Relation} data - The input tabular data in dsv or json format or\n     * an existing Relation instance object.\n     * @param {Array} schema - An array of data schema.\n     * @param {Object} [options] - The optional options.\n     */\n    constructor (...params) {\n        let source;\n\n        this._parent = null;\n        this._derivation = [];\n        this._children = [];\n\n        if (params.length === 1 && ((source = params[0]) instanceof Relation)) {\n            // parent datamodel was passed as part of source\n            this._colIdentifier = source._colIdentifier;\n            this._rowDiffset = source._rowDiffset;\n            this._dataFormat = source._dataFormat;\n            this._parent = source;\n            this._partialFieldspace = this._parent._partialFieldspace;\n            this._fieldStoreName = getUniqueId();\n            this.__calculateFieldspace().calculateFieldsConfig();\n        } else {\n            updateData(this, ...params);\n            this._fieldStoreName = this._partialFieldspace.name;\n            this.__calculateFieldspace().calculateFieldsConfig();\n            this._propagationNameSpace = {\n                mutableActions: {},\n                immutableActions: {}\n            };\n        }\n    }\n\n    /**\n     * Retrieves the {@link Schema | schema} details for every {@link Field | field} as an array.\n     *\n     * @public\n     *\n     * @return {Array.<Schema>} Array of fields schema.\n     *      ```\n     *      [\n     *          { name: 'Name', type: 'dimension' },\n     *          { name: 'Miles_per_Gallon', type: 'measure', numberFormat: (val) => `${val} miles / gallon` },\n     *          { name: 'Cylinder', type: 'dimension' },\n     *          { name: 'Displacement', type: 'measure', defAggFn: 'max' },\n     *          { name: 'HorsePower', type: 'measure', defAggFn: 'max' },\n     *          { name: 'Weight_in_lbs', type: 'measure', defAggFn: 'avg',  },\n     *          { name: 'Acceleration', type: 'measure', defAggFn: 'avg' },\n     *          { name: 'Year', type: 'dimension', subtype: 'datetime', format: '%Y' },\n     *          { name: 'Origin' }\n     *      ]\n     *      ```\n     */\n    getSchema () {\n        return this.getFieldspace().fields.map(d => d.schema());\n    }\n\n    /**\n     * Returns the name of the {@link DataModel} instance. If no name was specified during {@link DataModel}\n     * initialization, then it returns a auto-generated name.\n     *\n     * @public\n     *\n     * @return {string} Name of the DataModel instance.\n     */\n    getName() {\n        return this._fieldStoreName;\n    }\n\n    getFieldspace () {\n        return this._fieldspace;\n    }\n\n    __calculateFieldspace () {\n        this._fieldspace = updateFields([this._rowDiffset, this._colIdentifier],\n             this.getPartialFieldspace(), this._fieldStoreName);\n        return this;\n    }\n\n    getPartialFieldspace () {\n        return this._partialFieldspace;\n    }\n\n    /**\n     * Performs {@link link_of_cross_product | cross-product} between two {@link DataModel} instances and returns a\n     * new {@link DataModel} instance containing the results. This operation is also called theta join.\n     *\n     * Cross product takes two set and create one set where each value of one set is paired with each value of another\n     * set.\n     *\n     * This method takes an optional predicate which filters the generated result rows. If the predicate returns true\n     * the combined row is included in the resulatant table.\n     *\n     * @example\n     *  let originDM = dm.project(['Origin','Origin_Formal_Name']);\n     *  let carsDM = dm.project(['Name','Miles_per_Gallon','Origin'])\n     *\n     *  console.log(carsDM.join(originDM)));\n     *\n     *  console.log(carsDM.join(originDM,\n     *      obj => obj.[originDM.getName()].Origin === obj.[carsDM.getName()].Origin));\n     *\n     * @text\n     * This is chained version of `join` operator. `join` can also be used as\n     * {@link link_to_join_op | functional operator}.\n     *\n     * @public\n     *\n     * @param {DataModel} joinWith - The DataModel to be joined with the current instance DataModel.\n     * @param {SelectionPredicate} filterFn - The predicate function that will filter the result of the crossProduct.\n     *\n     * @return {DataModel} New DataModel instance created after joining.\n     */\n    join (joinWith, filterFn) {\n        return crossProduct(this, joinWith, filterFn);\n    }\n\n    /**\n     * {@link natural_join | Natural join} is a special kind of cross-product join where filtering of rows are performed\n     * internally by resolving common fields are from both table and the rows with common value are included.\n     *\n     * @example\n     *  let originDM = dm.project(['Origin','Origin_Formal_Name']);\n     *  let carsDM = dm.project(['Name','Miles_per_Gallon','Origin'])\n     *\n     *  console.log(carsDM.naturalJoin(originDM));\n     *\n     * @text\n     * This is chained version of `naturalJoin` operator. `naturalJoin` can also be used as\n     * {@link link_to_join_op | functional operator}.\n     *\n     * @public\n     *\n     * @param {DataModel} joinWith - The DataModel with which the current instance of DataModel on which the method is\n     *      called will be joined.\n     * @return {DataModel} New DataModel instance created after joining.\n     */\n    naturalJoin (joinWith) {\n        return crossProduct(this, joinWith, naturalJoinFilter(this, joinWith), true);\n    }\n\n    /**\n     * {@link link_to_union | Union} operation can be termed as vertical stacking of all rows from both the DataModel\n     * instances, provided that both of the {@link DataModel} instances should have same column names.\n     *\n     * @example\n     * console.log(EuropeanMakerDM.union(USAMakerDM));\n     *\n     * @text\n     * This is chained version of `naturalJoin` operator. `naturalJoin` can also be used as\n     * {@link link_to_join_op | functional operator}.\n     *\n     * @public\n     *\n     * @param {DataModel} unionWith - DataModel instance for which union has to be applied with the instance on which\n     *      the method is called\n     *\n     * @return {DataModel} New DataModel instance with the result of the operation\n     */\n    union (unionWith) {\n        return union(this, unionWith);\n    }\n\n    /**\n     * {@link link_to_difference | Difference } operation only include rows which are present in the datamodel on which\n     * it was called but not on the one passed as argument.\n     *\n     * @example\n     * console.log(highPowerDM.difference(highExpensiveDM));\n     *\n     * @text\n     * This is chained version of `naturalJoin` operator. `naturalJoin` can also be used as\n     * {@link link_to_join_op | functional operator}.\n     *\n     * @public\n     *\n     * @param {DataModel} differenceWith - DataModel instance for which difference has to be applied with the instance\n     *      on which the method is called\n     * @return {DataModel} New DataModel instance with the result of the operation\n     */\n    difference (differenceWith) {\n        return difference(this, differenceWith);\n    }\n\n    /**\n     * {@link link_to_selection | Selection} is a row filtering operation. It expects a predicate and an optional mode\n     * which control which all rows should be included in the resultant DataModel instance.\n     *\n     * {@link SelectionPredicate} is a function which returns a boolean value. For selection operation the selection\n     * function is called for each row of DataModel instance with the current row passed as argument.\n     *\n     * After executing {@link SelectionPredicate} the rows are labeled as either an entry of selection set or an entry\n     * of rejection set.\n     *\n     * {@link FilteringMode} operates on the selection and rejection set to determine which one would reflect in the\n     * resultant datamodel.\n     *\n     * @warning\n     * Selection and rejection set is only a logical idea for concept explanation purpose.\n     *\n     * @example\n     *  // with selection mode NORMAL:\n     *  const normDt = dt.select(fields => fields.Origin.value === \"USA\")\n     *  console.log(normDt));\n     *\n     * // with selection mode INVERSE:\n     * const inverDt = dt.select(fields => fields.Origin.value === \"USA\", { mode: DataModel.FilteringMode.INVERSE })\n     * console.log(inverDt);\n     *\n     * // with selection mode ALL:\n     * const dtArr = dt.select(fields => fields.Origin.value === \"USA\", { mode: DataModel.FilteringMode.ALL })\n     * // print the selected parts\n     * console.log(dtArr[0]);\n     * // print the inverted parts\n     * console.log(dtArr[1]);\n     *\n     * @text\n     * This is chained version of `select` operator. `select` can also be used as\n     * {@link link_to_join_op | functional operator}.\n     *\n     * @public\n     *\n     * @param {Function} selectFn - The predicate function which is called for each row with the current row.\n     * ```\n     *  function (row, i, cloneProvider, store)  { ... }\n     * ```\n     * @param {Object} config - The configuration object to control the inclusion exclusion of a row in resultant\n     * DataModel instance.\n     * @param {FilteringMode} [config.mode=FilteringMode.NORMAL] - The mode of the selection.\n     * @return {DataModel} Returns the new DataModel instance(s) after operation.\n     */\n    select (selectFn, config) {\n        const defConfig = {\n            mode: FilteringMode.NORMAL,\n            saveChild: true\n        };\n        config = Object.assign({}, defConfig, config);\n\n        const cloneConfig = { saveChild: config.saveChild };\n        let oDm;\n\n        if (config.mode === FilteringMode.ALL) {\n            const selectDm = cloneWithSelect(\n                this,\n                selectFn,\n                { mode: FilteringMode.NORMAL },\n                cloneConfig\n            );\n            const rejectDm = cloneWithSelect(\n                this,\n                selectFn,\n                { mode: FilteringMode.INVERSE },\n                cloneConfig\n            );\n            oDm = [selectDm, rejectDm];\n        } else {\n            oDm = cloneWithSelect(\n                this,\n                selectFn,\n                config,\n                cloneConfig\n            );\n        }\n\n        return oDm;\n    }\n\n    /**\n     * Retrieves a boolean value if the current {@link DataModel} instance has data.\n     *\n     * @example\n     * const schema = [\n     *    { name: 'CarName', type: 'dimension' },\n     *    { name: 'HorsePower', type: 'measure' },\n     *    { name: \"Origin\", type: 'dimension' }\n     * ];\n     * const data = [];\n     *\n     * const dt = new DataModel(data, schema);\n     * console.log(dt.isEmpty());\n     *\n     * @public\n     *\n     * @return {Boolean} True if the datamodel has no data, otherwise false.\n     */\n    isEmpty () {\n        return !this._rowDiffset.length || !this._colIdentifier.length;\n    }\n\n    /**\n     * Creates a clone from the current DataModel instance with child parent relationship.\n     *\n     * @private\n     * @param {boolean} [saveChild=true] - Whether the cloned instance would be recorded in the parent instance.\n     * @return {DataModel} - Returns the newly cloned DataModel instance.\n     */\n    clone (saveChild = true, linkParent = true) {\n        let retDataModel;\n        if (linkParent === false) {\n            const dataObj = this.getData({\n                getAllFields: true\n            });\n            const data = dataObj.data;\n            const schema = dataObj.schema;\n            const jsonData = data.map((row) => {\n                const rowObj = {};\n                schema.forEach((field, i) => {\n                    rowObj[field.name] = row[i];\n                });\n                return rowObj;\n            });\n            retDataModel = new this.constructor(jsonData, schema);\n        }\n        else {\n            retDataModel = new this.constructor(this);\n        }\n\n        if (saveChild) {\n            this._children.push(retDataModel);\n        }\n        return retDataModel;\n    }\n\n    /**\n     * {@link Projection} is filter column (field) operation. It expects list of fields' name and either include those\n     * or exclude those based on {@link FilteringMode} on the resultant variable.\n     *\n     * Projection expects array of fields name based on which it creates the selection and rejection set. All the field\n     * whose name is present in array goes in selection set and rest of the fields goes in rejection set.\n     *\n     * {@link FilteringMode} operates on the selection and rejection set to determine which one would reflect in the\n     * resulatant datamodel.\n     *\n     * @warning\n     * Selection and rejection set is only a logical idea for concept explanation purpose.\n     *\n     * @example\n     *  const dm = new DataModel(data, schema);\n     *\n     *  // with projection mode NORMAL:\n     *  const normDt = dt.project([\"Name\", \"HorsePower\"]);\n     *  console.log(normDt.getData());\n     *\n     *  // with projection mode INVERSE:\n     *  const inverDt = dt.project([\"Name\", \"HorsePower\"], { mode: DataModel.FilteringMode.INVERSE })\n     *  console.log(inverDt.getData());\n     *\n     *  // with selection mode ALL:\n     *  const dtArr = dt.project([\"Name\", \"HorsePower\"], { mode: DataModel.FilteringMode.ALL })\n     *  // print the normal parts\n     *  console.log(dtArr[0].getData());\n     *  // print the inverted parts\n     *  console.log(dtArr[1].getData());\n     *\n     * @text\n     * This is chained version of `select` operator. `select` can also be used as\n     * {@link link_to_join_op | functional operator}.\n     *\n     * @public\n     *\n     * @param {Array.<string | Regexp>} projField - An array of column names in string or regular expression.\n     * @param {Object} [config] - An optional config to control the creation of new DataModel\n     * @param {FilteringMode} [config.mode=FilteringMode.NORMAL] - Mode of the projection\n     *\n     * @return {DataModel} Returns the new DataModel instance after operation.\n     */\n    project (projField, config) {\n        const defConfig = {\n            mode: FilteringMode.NORMAL,\n            saveChild: true\n        };\n        config = Object.assign({}, defConfig, config);\n        const fieldConfig = this.getFieldsConfig();\n        const allFields = Object.keys(fieldConfig);\n        const { mode } = config;\n\n        let normalizedProjField = projField.reduce((acc, field) => {\n            if (field.constructor.name === 'RegExp') {\n                acc.push(...allFields.filter(fieldName => fieldName.search(field) !== -1));\n            } else if (field in fieldConfig) {\n                acc.push(field);\n            }\n            return acc;\n        }, []);\n\n        normalizedProjField = Array.from(new Set(normalizedProjField)).map(field => field.trim());\n        let dataModel;\n\n        if (mode === FilteringMode.ALL) {\n            let projectionClone = cloneWithProject(this, normalizedProjField, {\n                mode: FilteringMode.NORMAL,\n                saveChild: config.saveChild\n            }, allFields);\n            let rejectionClone = cloneWithProject(this, normalizedProjField, {\n                mode: FilteringMode.INVERSE,\n                saveChild: config.saveChild\n            }, allFields);\n            dataModel = [projectionClone, rejectionClone];\n        } else {\n            let projectionClone = cloneWithProject(this, normalizedProjField, config, allFields);\n            dataModel = projectionClone;\n        }\n\n        return dataModel;\n    }\n\n    getFieldsConfig () {\n        return this._fieldConfig;\n    }\n\n    calculateFieldsConfig () {\n        this._fieldConfig = this._fieldspace.fields.reduce((acc, fieldDef, i) => {\n            acc[fieldDef.name()] = {\n                index: i,\n                def: { name: fieldDef.name(), type: fieldDef.type(), subtype: fieldDef.subtype() }\n            };\n            return acc;\n        }, {});\n        return this;\n    }\n\n\n    /**\n     * Frees up the resources associated with the current DataModel instance and breaks all the links instance has in\n     * the DAG.\n     *\n     * @public\n     */\n    dispose () {\n        this._parent.removeChild(this);\n        this._parent = null;\n    }\n\n    /**\n     * Removes the specified child {@link DataModel} from the child list of the current {@link DataModel} instance.\n     *\n     * @example\n     * const schema = [\n     *    { name: 'Name', type: 'dimension' },\n     *    { name: 'HorsePower', type: 'measure' },\n     *    { name: \"Origin\", type: 'dimension' }\n     * ];\n     *\n     * const data = [\n     *    { Name: \"chevrolet chevelle malibu\", Horsepower: 130, Origin: \"USA\" },\n     *    { Name: \"citroen ds-21 pallas\", Horsepower: 115, Origin: \"Europe\" },\n     *    { Name: \"datsun pl510\", Horsepower: 88, Origin: \"Japan\" },\n     *    { Name: \"amc rebel sst\", Horsepower: 150, Origin: \"USA\"},\n     * ]\n     *\n     * const dt = new DataModel(data, schema);\n     *\n     * const dt2 = dt.select(fields => fields.Origin.value === \"USA\")\n     * dt.removeChild(dt2);\n     *\n     * @private\n     *\n     * @param {DataModel} child - Delegates the parent to remove this child.\n     */\n    removeChild (child) {\n        let idx = this._children.findIndex(sibling => sibling === child);\n        idx !== -1 ? this._children.splice(idx, 1) : true;\n    }\n\n    /**\n     * Adds the specified {@link DataModel} as a parent for the current {@link DataModel} instance.\n     *\n     * The optional criteriaQueue is an array containing the history of transaction performed on parent\n     *  {@link DataModel} to get the current one.\n     *\n     * @param {DataModel} parent - The datamodel instance which will act as parent.\n     * @param {Array} criteriaQueue - Queue contains in-between operation meta-data.\n     */\n    addParent (parent, criteriaQueue = []) {\n        persistDerivation(this, DM_DERIVATIVES.COMPOSE, null, criteriaQueue);\n        this._parent = parent;\n        parent._children.push(this);\n    }\n\n    /**\n     * Returns the parent {@link DataModel} instance.\n     *\n     * @example\n     * const schema = [\n     *    { name: 'Name', type: 'dimension' },\n     *    { name: 'HorsePower', type: 'measure' },\n     *    { name: \"Origin\", type: 'dimension' }\n     * ];\n     *\n     * const data = [\n     *    { Name: \"chevrolet chevelle malibu\", Horsepower: 130, Origin: \"USA\" },\n     *    { Name: \"citroen ds-21 pallas\", Horsepower: 115, Origin: \"Europe\" },\n     *    { Name: \"datsun pl510\", Horsepower: 88, Origin: \"Japan\" },\n     *    { Name: \"amc rebel sst\", Horsepower: 150, Origin: \"USA\"},\n     * ]\n     *\n     * const dt = new DataModel(data, schema);\n     *\n     * const dt2 = dt.select(fields => fields.Origin.value === \"USA\");\n     * const parentDm = dt2.getParent();\n     *\n     * @return {DataModel} Returns the parent DataModel instance.\n     */\n    getParent () {\n        return this._parent;\n    }\n\n    /**\n     * Returns the immediate child {@link DataModel} instances.\n     *\n     * @example\n     * const schema = [\n     *    { name: 'Name', type: 'dimension' },\n     *    { name: 'HorsePower', type: 'measure' },\n     *    { name: \"Origin\", type: 'dimension' }\n     * ];\n     *\n     * const data = [\n     *    { Name: \"chevrolet chevelle malibu\", Horsepower: 130, Origin: \"USA\" },\n     *    { Name: \"citroen ds-21 pallas\", Horsepower: 115, Origin: \"Europe\" },\n     *    { Name: \"datsun pl510\", Horsepower: 88, Origin: \"Japan\" },\n     *    { Name: \"amc rebel sst\", Horsepower: 150, Origin: \"USA\"},\n     * ]\n     *\n     * const dt = new DataModel(data, schema);\n     *\n     * const childDm1 = dt.select(fields => fields.Origin.value === \"USA\");\n     * const childDm2 = dt.select(fields => fields.Origin.value === \"Japan\");\n     * const childDm3 = dt.groupBy([\"Origin\"]);\n     *\n     * @return {DataModel[]} Returns the immediate child DataModel instances.\n     */\n    getChildren() {\n        return this._children;\n    }\n\n    /**\n     * Returns the in-between operation meta data while creating the current {@link DataModel} instance.\n     *\n     * @example\n     * const schema = [\n     *   { name: 'Name', type: 'dimension' },\n     *   { name: 'HorsePower', type: 'measure' },\n     *   { name: \"Origin\", type: 'dimension' }\n     * ];\n     *\n     * const data = [\n     *   { Name: \"chevrolet chevelle malibu\", Horsepower: 130, Origin: \"USA\" },\n     *   { Name: \"citroen ds-21 pallas\", Horsepower: 115, Origin: \"Europe\" },\n     *   { Name: \"datsun pl510\", Horsepower: 88, Origin: \"Japan\" },\n     *   { Name: \"amc rebel sst\", Horsepower: 150, Origin: \"USA\"},\n     * ]\n     *\n     * const dt = new DataModel(data, schema);\n     * const dt2 = dt.select(fields => fields.Origin.value === \"USA\");\n     * const dt3 = dt2.groupBy([\"Origin\"]);\n     * const derivations = dt3.getDerivations();\n     *\n     * @return {Any[]} Returns the derivation meta data.\n     */\n    getDerivations() {\n        return this._derivation;\n    }\n}\n\nexport default Relation;\n","import { fnList } from '../operator/group-by-function';\n\nexport const { sum, avg, min, max, first, last, count, std: sd } = fnList;\n","/**\n * The utility function to calculate major column.\n *\n * @param {Object} store - The store object.\n * @return {Function} Returns the push function.\n */\nexport default (store) => {\n    let i = 0;\n    return (...fields) => {\n        fields.forEach((val, fieldIndex) => {\n            if (!(store[fieldIndex] instanceof Array)) {\n                store[fieldIndex] = Array.from({ length: i });\n            }\n            store[fieldIndex].push(val);\n        });\n        i++;\n    };\n};\n","/**\n * Creates a JS native date object from input\n *\n * @param {string | number | Date} date Input using which date object to be created\n * @return {Date} : JS native date object\n */\nfunction convertToNativeDate (date) {\n    if (date instanceof Date) {\n        return date;\n    }\n\n    return new Date(date);\n}\n/**\n * Apply padding before a number if its less than 1o. This is used when constant digit's number to be returned\n * between 0 - 99\n *\n * @param {number} n Input to be padded\n * @return {string} Padded number\n */\nfunction pad (n) {\n    return (n < 10) ? (`0${n}`) : n;\n}\n/*\n * DateFormatter utility to convert any date format to any other date format\n * DateFormatter parse a date time stamp specified by a user abiding by rules which are defined\n * by user in terms of token. It creates JS native date object from the user specified format.\n * That native date can also be displayed\n * in any specified format.\n * This utility class only takes care of format conversion only\n */\n\n/*\n * Escapes all the special character that are used in regular expression.\n * Like\n * RegExp.escape('sgfd-$') // Output: sgfd\\-\\$\n *\n * @param text {String} : text which is to be escaped\n */\nRegExp.escape = function (text) {\n    return text.replace(/[-[\\]{}()*+?.,\\\\^$|#\\s]/g, '\\\\$&');\n};\n\n/**\n * DateTimeFormatter class to convert any user format of date time stamp to any other format\n * of date time stamp.\n *\n * @param {string} format Format of the date given. For the above date,\n * 'year: %Y, month: %b, day: %d'.\n * @class\n */\n/* istanbul ignore next */ function DateTimeFormatter (format) {\n    this.format = format;\n    this.dtParams = undefined;\n    this.nativeDate = undefined;\n}\n\n// The identifier of the tokens\nDateTimeFormatter.TOKEN_PREFIX = '%';\n\n// JS native Date constructor takes the date params (year, month, etc) in a certail sequence.\n// This defines the sequence of the date parameters in the constructor.\nDateTimeFormatter.DATETIME_PARAM_SEQUENCE = {\n    YEAR: 0,\n    MONTH: 1,\n    DAY: 2,\n    HOUR: 3,\n    MINUTE: 4,\n    SECOND: 5,\n    MILLISECOND: 6\n};\n\n/*\n * This is a default number parsing utility. It tries to parse a number in integer, if parsing is unsuccessful, it\n * gives back a default value.\n *\n * @param: defVal {Number} : Default no if the parsing to integer is not successful\n * @return {Function} : An closure function which is to be called by passing an the value which needs to be parsed.\n */\nDateTimeFormatter.defaultNumberParser = function (defVal) {\n    return function (val) {\n        let parsedVal;\n        if (isFinite(parsedVal = parseInt(val, 10))) {\n            return parsedVal;\n        }\n\n        return defVal;\n    };\n};\n\n/*\n * This is a default number range utility. It tries to find an element in the range. If not found it returns a\n * default no as an index.\n *\n * @param: range {Array} : The list which is to be serached\n * @param: defVal {Number} : Default no if the serach and find does not return anything\n * @return {Function} : An closure function which is to be called by passing an the value which needs to be found\n */\nDateTimeFormatter.defaultRangeParser = function (range, defVal) {\n    return (val) => {\n        let i;\n        let l;\n\n        if (!val) { return defVal; }\n\n        const nVal = val.toLowerCase();\n\n        for (i = 0, l = range.length; i < l; i++) {\n            if (range[i].toLowerCase() === nVal) {\n                return i;\n            }\n        }\n\n        if (i === undefined) {\n            return defVal;\n        }\n        return null;\n    };\n};\n\n/*\n * Defines the tokens which are supporter by the dateformatter. Using this definitation a value gets extracted from\n * the user specifed date string. This also formats the value for display purpose from native JS date.\n * The definition of each token contains the following named properties\n * {\n *     %token_name% : {\n *         name: name of the token, this is used in reverse lookup,\n *         extract: a function that returns the regular expression to extract that piece of information. All the\n *                  regex should be gouped by using ()\n *         parser: a function which receives value extracted by the above regex and parse it to get the date params\n *         formatter: a formatter function that takes milliseconds or JS Date object and format the param\n *                  represented by the token only.\n *     }\n * }\n *\n * @return {Object} : Definition of the all the supported tokens.\n */\nDateTimeFormatter.getTokenDefinitions = function () {\n    const daysDef = {\n        short: [\n            'Sun',\n            'Mon',\n            'Tue',\n            'Wed',\n            'Thu',\n            'Fri',\n            'Sat'\n        ],\n        long: [\n            'Sunday',\n            'Monday',\n            'Tuesday',\n            'Wednesday',\n            'Thursday',\n            'Friday',\n            'Saturday'\n        ]\n    };\n    const monthsDef = {\n        short: [\n            'Jan',\n            'Feb',\n            'Mar',\n            'Apr',\n            'May',\n            'Jun',\n            'Jul',\n            'Aug',\n            'Sep',\n            'Oct',\n            'Nov',\n            'Dec'\n        ],\n        long: [\n            'January',\n            'February',\n            'March',\n            'April',\n            'May',\n            'June',\n            'July',\n            'August',\n            'September',\n            'October',\n            'November',\n            'December'\n        ]\n    };\n\n    const definitions = {\n        H: {\n            // 24 hours format\n            name: 'H',\n            index: 3,\n            extract () { return '(\\\\d+)'; },\n            parser: DateTimeFormatter.defaultNumberParser(),\n            formatter (val) {\n                const d = convertToNativeDate(val);\n\n                return d.getHours().toString();\n            }\n        },\n        l: {\n            // 12 hours format\n            name: 'l',\n            index: 3,\n            extract () { return '(\\\\d+)'; },\n            parser: DateTimeFormatter.defaultNumberParser(),\n            formatter (val) {\n                const d = convertToNativeDate(val);\n                const hours = d.getHours() % 12;\n\n                return (hours === 0 ? 12 : hours).toString();\n            }\n        },\n        p: {\n            // AM or PM\n            name: 'p',\n            index: 3,\n            extract () { return '(AM|PM)'; },\n            parser: (val) => {\n                if (val) {\n                    return val.toLowerCase();\n                }\n                return null;\n            },\n            formatter: (val) => {\n                const d = convertToNativeDate(val);\n                const hours = d.getHours();\n\n                return (hours < 12 ? 'AM' : 'PM');\n            }\n        },\n        P: {\n            // am or pm\n            name: 'P',\n            index: 3,\n            extract () { return '(am|pm)'; },\n            parser: (val) => {\n                if (val) {\n                    return val.toLowerCase();\n                }\n                return null;\n            },\n            formatter: (val) => {\n                const d = convertToNativeDate(val);\n                const hours = d.getHours();\n\n                return (hours < 12 ? 'am' : 'pm');\n            }\n        },\n        M: {\n            // Two digit minutes 00 - 59\n            name: 'M',\n            index: 4,\n            extract () { return '(\\\\d+)'; },\n            parser: DateTimeFormatter.defaultNumberParser(),\n            formatter (val) {\n                const d = convertToNativeDate(val);\n                const mins = d.getMinutes();\n\n                return pad(mins);\n            }\n        },\n        S: {\n            // Two digit seconds 00 - 59\n            name: 'S',\n            index: 5,\n            extract () { return '(\\\\d+)'; },\n            parser: DateTimeFormatter.defaultNumberParser(),\n            formatter (val) {\n                const d = convertToNativeDate(val);\n                const seconds = d.getSeconds();\n\n                return pad(seconds);\n            }\n        },\n        K: {\n            // Milliseconds\n            name: 'K',\n            index: 6,\n            extract () { return '(\\\\d+)'; },\n            parser: DateTimeFormatter.defaultNumberParser(),\n            formatter (val) {\n                const d = convertToNativeDate(val);\n                const ms = d.getMilliseconds();\n\n                return ms.toString();\n            }\n        },\n        a: {\n            // Short name of day, like Mon\n            name: 'a',\n            index: 2,\n            extract () { return `(${daysDef.short.join('|')})`; },\n            parser: DateTimeFormatter.defaultRangeParser(daysDef.short),\n            formatter (val) {\n                const d = convertToNativeDate(val);\n                const day = d.getDay();\n\n                return (daysDef.short[day]).toString();\n            }\n        },\n        A: {\n            // Long name of day, like Monday\n            name: 'A',\n            index: 2,\n            extract () { return `(${daysDef.long.join('|')})`; },\n            parser: DateTimeFormatter.defaultRangeParser(daysDef.long),\n            formatter (val) {\n                const d = convertToNativeDate(val);\n                const day = d.getDay();\n\n                return (daysDef.long[day]).toString();\n            }\n        },\n        e: {\n            // 8 of March, 11 of November\n            name: 'e',\n            index: 2,\n            extract () { return '(\\\\d+)'; },\n            parser: DateTimeFormatter.defaultNumberParser(),\n            formatter (val) {\n                const d = convertToNativeDate(val);\n                const day = d.getDate();\n\n                return day.toString();\n            }\n        },\n        d: {\n            // 08 of March, 11 of November\n            name: 'd',\n            index: 2,\n            extract () { return '(\\\\d+)'; },\n            parser: DateTimeFormatter.defaultNumberParser(),\n            formatter (val) {\n                const d = convertToNativeDate(val);\n                const day = d.getDate();\n\n                return pad(day);\n            }\n        },\n        b: {\n            // Short month, like Jan\n            name: 'b',\n            index: 1,\n            extract () { return `(${monthsDef.short.join('|')})`; },\n            parser: DateTimeFormatter.defaultRangeParser(monthsDef.short),\n            formatter (val) {\n                const d = convertToNativeDate(val);\n                const month = d.getMonth();\n\n                return (monthsDef.short[month]).toString();\n            }\n        },\n        B: {\n            // Long month, like January\n            name: 'B',\n            index: 1,\n            extract () { return `(${monthsDef.long.join('|')})`; },\n            parser: DateTimeFormatter.defaultRangeParser(monthsDef.long),\n            formatter (val) {\n                const d = convertToNativeDate(val);\n                const month = d.getMonth();\n\n                return (monthsDef.long[month]).toString();\n            }\n        },\n        m: {\n            // Two digit month of year like 01 for January\n            name: 'm',\n            index: 1,\n            extract () { return '(\\\\d+)'; },\n            parser (val) { return DateTimeFormatter.defaultNumberParser()(val) - 1; },\n            formatter (val) {\n                const d = convertToNativeDate(val);\n                const month = d.getMonth();\n\n                return pad(month + 1);\n            }\n        },\n        y: {\n            // Short year like 90 for 1990\n            name: 'y',\n            index: 0,\n            extract () { return '(\\\\d{2})'; },\n            parser (val) {\n                let result;\n                if (val) {\n                    const l = val.length;\n                    val = val.substring(l - 2, l);\n                }\n                let parsedVal = DateTimeFormatter.defaultNumberParser()(val);\n                let presentDate = new Date();\n                let presentYear = Math.trunc((presentDate.getFullYear()) / 100);\n\n                result = `${presentYear}${parsedVal}`;\n\n                if (convertToNativeDate(result).getFullYear() > presentDate.getFullYear()) {\n                    result = `${presentYear - 1}${parsedVal}`;\n                }\n                return convertToNativeDate(result).getFullYear();\n            },\n            formatter (val) {\n                const d = convertToNativeDate(val);\n                let year = d.getFullYear().toString();\n                let l;\n\n                if (year) {\n                    l = year.length;\n                    year = year.substring(l - 2, l);\n                }\n\n                return year;\n            }\n        },\n        Y: {\n            // Long year like 1990\n            name: 'Y',\n            index: 0,\n            extract () { return '(\\\\d{4})'; },\n            parser: DateTimeFormatter.defaultNumberParser(),\n            formatter (val) {\n                const d = convertToNativeDate(val);\n                const year = d.getFullYear().toString();\n\n                return year;\n            }\n        }\n    };\n\n    return definitions;\n};\n\n/*\n * The tokens which works internally is not user friendly in terms of memorizing the names. This gives a formal\n * definition to the informal notations.\n *\n * @return {Object} : Formal definition of the tokens\n */\nDateTimeFormatter.getTokenFormalNames = function () {\n    const definitions = DateTimeFormatter.getTokenDefinitions();\n\n    return {\n        HOUR: definitions.H,\n        HOUR_12: definitions.l,\n        AMPM_UPPERCASE: definitions.p,\n        AMPM_LOWERCASE: definitions.P,\n        MINUTE: definitions.M,\n        SECOND: definitions.S,\n        SHORT_DAY: definitions.a,\n        LONG_DAY: definitions.A,\n        DAY_OF_MONTH: definitions.e,\n        DAY_OF_MONTH_CONSTANT_WIDTH: definitions.d,\n        SHORT_MONTH: definitions.b,\n        LONG_MONTH: definitions.B,\n        MONTH_OF_YEAR: definitions.m,\n        SHORT_YEAR: definitions.y,\n        LONG_YEAR: definitions.Y\n    };\n};\n\n/*\n * This defines the rules and declares dependencies that resolves a date parameter (year, month etc) from\n * the date time parameter array.\n *\n * @return {Object} : An object that contains dependencies and a resolver function. The dependencies values are fed\n *                  to the resolver function in that particular sequence only.\n */\nDateTimeFormatter.tokenResolver = function () {\n    const definitions = DateTimeFormatter.getTokenDefinitions();\n    const defaultResolver = (...args) => { // eslint-disable-line require-jsdoc\n        let i = 0;\n        let arg;\n        let targetParam;\n        const l = args.length;\n\n        for (; i < l; i++) {\n            arg = args[i];\n            if (args[i]) {\n                targetParam = arg;\n            }\n        }\n\n        if (!targetParam) { return null; }\n\n        return targetParam[0].parser(targetParam[1]);\n    };\n\n    return {\n        YEAR: [definitions.y, definitions.Y,\n            defaultResolver\n        ],\n        MONTH: [definitions.b, definitions.B, definitions.m,\n            defaultResolver\n        ],\n        DAY: [definitions.a, definitions.A, definitions.e, definitions.d,\n            defaultResolver\n        ],\n        HOUR: [definitions.H, definitions.l, definitions.p, definitions.P,\n            function (hourFormat24, hourFormat12, ampmLower, ampmUpper) {\n                let targetParam;\n                let amOrpm;\n                let isPM;\n                let val;\n\n                if (hourFormat12 && (amOrpm = (ampmLower || ampmUpper))) {\n                    if (amOrpm[0].parser(amOrpm[1]) === 'pm') {\n                        isPM = true;\n                    }\n\n                    targetParam = hourFormat12;\n                } else if (hourFormat12) {\n                    targetParam = hourFormat12;\n                } else {\n                    targetParam = hourFormat24;\n                }\n\n                if (!targetParam) { return null; }\n\n                val = targetParam[0].parser(targetParam[1]);\n                if (isPM) {\n                    val += 12;\n                }\n                return val;\n            }\n        ],\n        MINUTE: [definitions.M,\n            defaultResolver\n        ],\n        SECOND: [definitions.S,\n            defaultResolver\n        ]\n    };\n};\n\n/*\n * Finds token from the format rule specified by a user.\n * @param format {String} : The format of the input date specified by the user\n * @return {Array} : An array of objects which contains the available token and their occurence index in the format\n */\nDateTimeFormatter.findTokens = function (format) {\n    const tokenPrefix = DateTimeFormatter.TOKEN_PREFIX;\n    const definitions = DateTimeFormatter.getTokenDefinitions();\n    const tokenLiterals = Object.keys(definitions);\n    const occurrence = [];\n    let i;\n    let forwardChar;\n\n    while ((i = format.indexOf(tokenPrefix, i + 1)) >= 0) {\n        forwardChar = format[i + 1];\n        if (tokenLiterals.indexOf(forwardChar) === -1) { continue; }\n\n        occurrence.push({\n            index: i,\n            token: forwardChar\n        });\n    }\n\n    return occurrence;\n};\n\n/*\n * Format any JS date to a specified date given by user.\n *\n * @param date {Number | Date} : The date object which is to be formatted\n * @param format {String} : The format using which the date will be formatted for display\n */\nDateTimeFormatter.formatAs = function (date, format) {\n    const nDate = convertToNativeDate(date);\n    const occurrence = DateTimeFormatter.findTokens(format);\n    const definitions = DateTimeFormatter.getTokenDefinitions();\n    let formattedStr = String(format);\n    const tokenPrefix = DateTimeFormatter.TOKEN_PREFIX;\n    let token;\n    let formattedVal;\n    let i;\n    let l;\n\n    for (i = 0, l = occurrence.length; i < l; i++) {\n        token = occurrence[i].token;\n        formattedVal = definitions[token].formatter(nDate);\n        formattedStr = formattedStr.replace(new RegExp(tokenPrefix + token, 'g'), formattedVal);\n    }\n\n    return formattedStr;\n};\n\n/*\n * Parses the user specified date string to extract the date time params.\n *\n * @return {Array} : Value of date time params in an array [year, month, day, hour, minutes, seconds, milli]\n */\nDateTimeFormatter.prototype.parse = function (dateTimeStamp, options) {\n    const tokenResolver = DateTimeFormatter.tokenResolver();\n    const dtParams = this.extractTokenValue(dateTimeStamp);\n    const dtParamSeq = DateTimeFormatter.DATETIME_PARAM_SEQUENCE;\n    const noBreak = options && options.noBreak;\n    const dtParamArr = [];\n    const args = [];\n    let resolverKey;\n    let resolverParams;\n    let resolverFn;\n    let val;\n    let i;\n    let param;\n    let resolvedVal;\n    let l;\n    let result = [];\n\n    for (resolverKey in tokenResolver) {\n        if (!{}.hasOwnProperty.call(tokenResolver, resolverKey)) { continue; }\n\n        args.length = 0;\n        resolverParams = tokenResolver[resolverKey];\n        resolverFn = resolverParams.splice(resolverParams.length - 1, 1)[0];\n\n        for (i = 0, l = resolverParams.length; i < l; i++) {\n            param = resolverParams[i];\n            val = dtParams[param.name];\n\n            if (val === undefined) {\n                args.push(null);\n            } else {\n                args.push([param, val]);\n            }\n        }\n\n        resolvedVal = resolverFn.apply(this, args);\n\n        if ((resolvedVal === undefined || resolvedVal === null) && !noBreak) {\n            break;\n        }\n\n        dtParamArr[dtParamSeq[resolverKey]] = resolvedVal;\n    }\n\n    if (dtParamArr.length && this.checkIfOnlyYear(dtParamArr.length))\n     {\n        result.unshift(dtParamArr[0], 0, 1); }\n    else {\n        result.unshift(...dtParamArr);\n    }\n\n    return result;\n};\n\n/*\n * Extract the value of the token from user specified date time string.\n *\n * @return {Object} : An key value pair which contains the tokens as key and value as pair\n */\nDateTimeFormatter.prototype.extractTokenValue = function (dateTimeStamp) {\n    const format = this.format;\n    const definitions = DateTimeFormatter.getTokenDefinitions();\n    const tokenPrefix = DateTimeFormatter.TOKEN_PREFIX;\n    const occurrence = DateTimeFormatter.findTokens(format);\n    const tokenObj = {};\n\n    let lastOccurrenceIndex;\n    let occObj;\n    let occIndex;\n    let targetText;\n    let regexFormat;\n\n    let l;\n    let i;\n\n    regexFormat = String(format);\n\n    const tokenArr = occurrence.map(obj => obj.token);\n    const occurrenceLength = occurrence.length;\n    for (i = occurrenceLength - 1; i >= 0; i--) {\n        occIndex = occurrence[i].index;\n\n        if (occIndex + 1 === regexFormat.length - 1) {\n            lastOccurrenceIndex = occIndex;\n            continue;\n        }\n\n        if (lastOccurrenceIndex === undefined) {\n            lastOccurrenceIndex = regexFormat.length;\n        }\n\n        targetText = regexFormat.substring(occIndex + 2, lastOccurrenceIndex);\n        regexFormat = regexFormat.substring(0, occIndex + 2) +\n            RegExp.escape(targetText) +\n            regexFormat.substring(lastOccurrenceIndex, regexFormat.length);\n\n        lastOccurrenceIndex = occIndex;\n    }\n\n    for (i = 0; i < occurrenceLength; i++) {\n        occObj = occurrence[i];\n        regexFormat = regexFormat.replace(tokenPrefix + occObj.token, definitions[occObj.token].extract());\n    }\n\n    const extractValues = dateTimeStamp.match(new RegExp(regexFormat)) || [];\n    extractValues.shift();\n\n    for (i = 0, l = tokenArr.length; i < l; i++) {\n        tokenObj[tokenArr[i]] = extractValues[i];\n    }\n    return tokenObj;\n};\n\n/*\n * Give back the JS native date formed from  user specified date string\n *\n * @return {Date} : Native JS Date\n */\nDateTimeFormatter.prototype.getNativeDate = function (dateTimeStamp) {\n    let date = null;\n    if (Number.isFinite(dateTimeStamp)) {\n        date = new Date(dateTimeStamp);\n    } else if (!this.format && Date.parse(dateTimeStamp)) {\n        date = new Date(dateTimeStamp);\n    }\n    else {\n        const dtParams = this.dtParams = this.parse(dateTimeStamp);\n        if (dtParams.length) {\n            this.nativeDate = new Date(...dtParams);\n            date = this.nativeDate;\n        }\n    }\n    return date;\n};\n\nDateTimeFormatter.prototype.checkIfOnlyYear = function(len) {\n    return len === 1 && this.format.match(/y|Y/g).length;\n};\n\n/*\n * Represents JS native date to a user specified format.\n *\n * @param format {String} : The format according to which the date is to be represented\n * @return {String} : The formatted date string\n */\nDateTimeFormatter.prototype.formatAs = function (format, dateTimeStamp) {\n    let nativeDate;\n\n    if (dateTimeStamp) {\n        nativeDate = this.nativeDate = this.getNativeDate(dateTimeStamp);\n    } else if (!(nativeDate = this.nativeDate)) {\n        nativeDate = this.getNativeDate(dateTimeStamp);\n    }\n\n    return DateTimeFormatter.formatAs(nativeDate, format);\n};\n\nexport { DateTimeFormatter as default };\n","/**\n * Generates domain for measure field.\n *\n * @param {Array} data - The array of data.\n * @return {Array} Returns the measure domain.\n */\nexport default (data) => {\n    let min = Number.POSITIVE_INFINITY;\n    let max = Number.NEGATIVE_INFINITY;\n\n    data.forEach((d) => {\n        if (d < min) {\n            min = d;\n        }\n        if (d > max) {\n            max = d;\n        }\n    });\n\n    return [min, max];\n};\n","/* eslint-disable */\nconst OBJECTSTRING = 'object';\nconst objectToStrFn = Object.prototype.toString;\nconst objectToStr = '[object Object]';\nconst arrayToStr = '[object Array]';\n\nfunction checkCyclicRef(obj, parentArr) {\n    let i = parentArr.length;\n    let bIndex = -1;\n\n    while (i) {\n        if (obj === parentArr[i]) {\n            bIndex = i;\n            return bIndex;\n        }\n        i -= 1;\n    }\n\n    return bIndex;\n}\n\nfunction merge(obj1, obj2, skipUndef, tgtArr, srcArr) {\n    var item,\n        srcVal,\n        tgtVal,\n        str,\n        cRef;\n    // check whether obj2 is an array\n    // if array then iterate through it's index\n    // **** MOOTOOLS precution\n\n    if (!srcArr) {\n        tgtArr = [obj1];\n        srcArr = [obj2];\n    }\n    else {\n        tgtArr.push(obj1);\n        srcArr.push(obj2);\n    }\n\n    if (obj2 instanceof Array) {\n        for (item = 0; item < obj2.length; item += 1) {\n            try {\n                srcVal = obj1[item];\n                tgtVal = obj2[item];\n            }\n            catch (e) {\n                continue;\n            }\n\n            if (typeof tgtVal !== OBJECTSTRING) {\n                if (!(skipUndef && tgtVal === undefined)) {\n                    obj1[item] = tgtVal;\n                }\n            }\n            else {\n                if (srcVal === null || typeof srcVal !== OBJECTSTRING) {\n                    srcVal = obj1[item] = tgtVal instanceof Array ? [] : {};\n                }\n                cRef = checkCyclicRef(tgtVal, srcArr);\n                if (cRef !== -1) {\n                    srcVal = obj1[item] = tgtArr[cRef];\n                }\n                else {\n                    merge(srcVal, tgtVal, skipUndef, tgtArr, srcArr);\n                }\n            }\n        }\n    }\n    else {\n        for (item in obj2) {\n            try {\n                srcVal = obj1[item];\n                tgtVal = obj2[item];\n            }\n            catch (e) {\n                continue;\n            }\n\n            if (tgtVal !== null && typeof tgtVal === OBJECTSTRING) {\n                // Fix for issue BUG: FWXT-602\n                // IE < 9 Object.prototype.toString.call(null) gives\n                // '[object Object]' instead of '[object Null]'\n                // that's why null value becomes Object in IE < 9\n                str = objectToStrFn.call(tgtVal);\n                if (str === objectToStr) {\n                    if (srcVal === null || typeof srcVal !== OBJECTSTRING) {\n                        srcVal = obj1[item] = {};\n                    }\n                    cRef = checkCyclicRef(tgtVal, srcArr);\n                    if (cRef !== -1) {\n                        srcVal = obj1[item] = tgtArr[cRef];\n                    }\n                    else {\n                        merge(srcVal, tgtVal, skipUndef, tgtArr, srcArr);\n                    }\n                }\n                else if (str === arrayToStr) {\n                    if (srcVal === null || !(srcVal instanceof Array)) {\n                        srcVal = obj1[item] = [];\n                    }\n                    cRef = checkCyclicRef(tgtVal, srcArr);\n                    if (cRef !== -1) {\n                        srcVal = obj1[item] = tgtArr[cRef];\n                    }\n                    else {\n                        merge(srcVal, tgtVal, skipUndef, tgtArr, srcArr);\n                    }\n                }\n                else {\n                    obj1[item] = tgtVal;\n                }\n            }\n            else {\n                if (skipUndef && tgtVal === undefined) {\n                    continue;\n                }\n                obj1[item] = tgtVal;\n            }\n        }\n    }\n    return obj1;\n}\n\n\nfunction extend2 (obj1, obj2, skipUndef) {\n    //if none of the arguments are object then return back\n    if (typeof obj1 !== OBJECTSTRING && typeof obj2 !== OBJECTSTRING) {\n        return null;\n    }\n\n    if (typeof obj2 !== OBJECTSTRING || obj2 === null) {\n        return obj1;\n    }\n\n    if (typeof obj1 !== OBJECTSTRING) {\n        obj1 = obj2 instanceof Array ? [] : {};\n    }\n    merge(obj1, obj2, skipUndef);\n    return obj1;\n}\n\nexport { extend2 as default };\n","import { DataFormat } from '../enums';\n\n/**\n * Checks whether the value is an array.\n *\n * @param  {*} val - The value to be checked.\n * @return {boolean} Returns true if the value is an array otherwise returns false.\n */\nexport function isArray (val) {\n    return Array.isArray(val);\n}\n\n/**\n * Checks whether the value is an object.\n *\n * @param  {*} val - The value to be checked.\n * @return {boolean} Returns true if the value is an object otherwise returns false.\n */\nexport function isObject (val) {\n    return val === Object(val);\n}\n\n/**\n * Checks whether the value is a string value.\n *\n * @param  {*} val - The value to be checked.\n * @return {boolean} Returns true if the value is a string value otherwise returns false.\n */\nexport function isString (val) {\n    return typeof val === 'string';\n}\n\n/**\n * Checks whether the value is callable.\n *\n * @param {*} val - The value to be checked.\n * @return {boolean} Returns true if the value is callable otherwise returns false.\n */\nexport function isCallable (val) {\n    return typeof val === 'function';\n}\n\n/**\n * Returns the unique values from the input array.\n *\n * @param {Array} data - The input array.\n * @return {Array} Returns a new array of unique values.\n */\nexport function uniqueValues (data) {\n    return [...new Set(data)];\n}\n\nexport const getUniqueId = () => `id-${new Date().getTime()}${Math.round(Math.random() * 10000)}`;\n\n/**\n * Checks Whether two arrays have same content.\n *\n * @param {Array} arr1 - The first array.\n * @param {Array} arr2 - The 2nd array.\n * @return {boolean} Returns whether two array have same content.\n */\nexport function isArrEqual(arr1, arr2) {\n    if (!isArray(arr1) || !isArray(arr2)) {\n        return arr1 === arr2;\n    }\n\n    if (arr1.length !== arr2.length) {\n        return false;\n    }\n\n    for (let i = 0; i < arr1.length; i++) {\n        if (arr1[i] !== arr2[i]) {\n            return false;\n        }\n    }\n\n    return true;\n}\n\n/**\n * It is the default number format function for the measure field type.\n *\n * @param {any} val - The input value.\n * @return {number} Returns a number value.\n */\nexport function formatNumber(val) {\n    return val;\n}\n\n/**\n * Returns the detected data format.\n *\n * @param {any} data - The input data to be tested.\n * @return {string} Returns the data format name.\n */\nexport const detectDataFormat = (data) => {\n    if (isString(data)) {\n        return DataFormat.DSV_STR;\n    } else if (isArray(data) && isArray(data[0])) {\n        return DataFormat.DSV_ARR;\n    } else if (isArray(data) && (data.length === 0 || isObject(data[0]))) {\n        return DataFormat.FLAT_JSON;\n    }\n    return null;\n};\n","export { default as DateTimeFormatter } from './date-time-formatter';\nexport { default as columnMajor } from './column-major';\nexport { default as generateMeasureDomain } from './domain-generator';\nexport { default as extend2 } from './extend2';\nexport * from './helper';\n","import { defReducer, fnList } from '../operator';\n\n/**\n * A page level storage which stores, registers, unregisters reducers for all the datamodel instances. There is only one\n * reducer store available in a page. All the datamodel instances receive same instance of reducer store. DataModel\n * out of the box provides handful of {@link reducer | reducers} which can be used as reducer funciton.\n *\n * @public\n * @namespace DataModel\n */\nclass ReducerStore {\n    constructor () {\n        this.store = new Map();\n        this.store.set('defReducer', defReducer);\n\n        Object.entries(fnList).forEach((key) => {\n            this.store.set(key[0], key[1]);\n        });\n    }\n\n    /**\n     * Changes the `defaultReducer` globally. For all the fields which does not have `defAggFn` mentioned in schema, the\n     * value of `defaultReducer` is used for aggregation.\n     *\n     * @public\n     * @param {string} [reducer='sum'] - The name of the default reducer. It picks up the definition from store by doing\n     * name lookup. If no name is found then it takes `sum` as the default reducer.\n     * @return {ReducerStore} Returns instance of the singleton store in page.\n     */\n    defaultReducer (...params) {\n        if (!params.length) {\n            return this.store.get('defReducer');\n        }\n\n        let reducer = params[0];\n\n        if (typeof reducer === 'function') {\n            this.store.set('defReducer', reducer);\n        } else {\n            reducer = String(reducer);\n            if (Object.keys(fnList).indexOf(reducer) !== -1) {\n                this.store.set('defReducer', fnList[reducer]);\n            } else {\n                throw new Error(`Reducer ${reducer} not found in registry`);\n            }\n        }\n        return this;\n    }\n\n    /**\n     *\n     * Registers a {@link reducer | reducer}.\n     * A {@link reducer | reducer} has to be registered before it is used.\n     *\n     * @example\n     *  // find the mean squared value of a given set\n     *  const reducerStore = DataModel.Reducers();\n     *\n     *  reducers.register('meanSquared', (arr) => {\n     *      const squaredVal = arr.map(item => item * item);\n     *      let sum = 0;\n     *      for (let i = 0, l = squaredVal.length; i < l; i++) {\n     *          sum += squaredVal[i++];\n     *      }\n     *\n     *      return sum;\n     *  })\n     *\n     *  // datamodel (dm) is already prepared with cars.json\n     *  const dm1 = dm.groupBy(['origin'], {\n     *      accleration: 'meanSquared'\n     *  });\n     *\n     * @public\n     *\n     * @param {string} name formal name for a reducer. If the given name already exists in store it is overridden by new\n     *      definition.\n     * @param {Function} reducer definition of {@link reducer} function.\n     *\n     * @return {Function} function for unregistering the reducer.\n     */\n    register (name, reducer) {\n        if (typeof reducer !== 'function') {\n            throw new Error('Reducer should be a function');\n        }\n\n        name = String(name);\n        this.store.set(name, reducer);\n\n        return () => { this.__unregister(name); };\n    }\n\n    __unregister (name) {\n        if (this.store.has(name)) {\n            this.store.delete(name);\n        }\n    }\n\n    resolve (name) {\n        if (name instanceof Function) {\n            return name;\n        }\n        return this.store.get(name);\n    }\n}\n\nconst reducerStore = (function () {\n    let store = null;\n\n    function getStore () {\n        if (store === null) {\n            store = new ReducerStore();\n        }\n        return store;\n    }\n    return getStore();\n}());\n\nexport default reducerStore;\n","/**\n * The wrapper class on top of the primitive value of a field.\n *\n * @todo Need to have support for StringValue, NumberValue, DateTimeValue\n * and GeoValue. These types should expose predicate API mostly.\n */\nclass Value {\n\n  /**\n   * Creates new Value instance.\n   *\n   * @param {*} val - the primitive value from the field cell.\n   * @param {string | Field} field - The field from which the value belongs.\n   */\n    constructor (val, field) {\n        Object.defineProperty(this, '_value', {\n            enumerable: false,\n            configurable: false,\n            writable: false,\n            value: val\n        });\n\n        this.field = field;\n    }\n\n  /**\n   * Returns the field value.\n   *\n   * @return {*} Returns the current value.\n   */\n    get value () {\n        return this._value;\n    }\n\n  /**\n   * Converts to human readable string.\n   *\n   * @override\n   * @return {string} Returns a human readable string of the field value.\n   *\n   */\n    toString () {\n        return String(this.value);\n    }\n\n  /**\n   * Returns the value of the field.\n   *\n   * @override\n   * @return {*} Returns the field value.\n   */\n    valueOf () {\n        return this.value;\n    }\n}\n\nexport default Value;\n","(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"hyperdis\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"hyperdis\"] = factory();\n\telse\n\t\troot[\"hyperdis\"] = factory();\n})(window, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n","const makeEntry = (arr, sCon) => {\n    arr.forEach((elem) => {\n        if (elem === undefined || elem === null) {\n            return;\n        }\n        sCon[elem] = 1;\n    });\n};\n\nexport default class ForeignSet {\n    constructor (arr) {\n        this._set = {};\n        makeEntry(arr, this._set);\n    }\n\n    append (arr) {\n        makeEntry(arr, this._set);\n        return this;\n    }\n\n    toArray () {\n        return Object.keys(this._set);\n    }\n\n    static difference (set1, set2) {\n        let key;\n        const filteredKeys = [],\n            s1 = set1._set,\n            s2 = set2._set;\n        for (key in s1) {\n            if (!({}).hasOwnProperty.call(s1, key)) {\n                continue;\n            }\n            if (key in s2) {\n                continue;\n            }\n            filteredKeys.push(key);\n        }\n        return new ForeignSet(filteredKeys);\n    }\n}\n","/* global window */\n\nimport ForeignSet from './set';\n\nconst\n    isSimpleObject = (obj) => {\n        let token;\n        if (typeof obj === 'object') {\n            if (obj === null) { return false; }\n            token = Object.prototype.toString.call(obj);\n            if (token === '[object Object]') {\n                return (obj.constructor.toString().match(/^function (.*)\\(\\)/m) || [])[1] === 'Object';\n            }\n        }\n        return false;\n    },\n    minMsThreshold = 16,\n    /* istanbul ignore next */win = typeof window === 'undefined' ? (this || {}) : window,\n    /* istanbul ignore next */ reqAnimFrame = win.requestAnimationFrame || win.webkitRequestAnimationFrame ||\n        win.mozRequestAnimationFrame || win.oRequestAnimationFrame ||\n        win.msRequestAnimationFrame ||\n        function (callback) {\n            setTimeout(callback, minMsThreshold);\n        },\n\n    getTimeBasedId = () => {\n        if (getTimeBasedId.__lastTime === new Date().getTime()) {\n            return (getTimeBasedId.__lastTime).toString() + (getTimeBasedId.__id++).toString();\n        }\n\n        getTimeBasedId.__id = 0;\n        getTimeBasedId.__lastTime = new Date().getTime();\n        return (getTimeBasedId.__lastTime).toString() + (getTimeBasedId.__id++).toString();\n    },\n    pullableRecent = (nodes, fn) => {\n        let nFn = () => {\n            fn(...nodes.map((node) => {\n                const\n                    hist = node.history,\n                    l = hist.length - 1;\n                return [hist[l - 1 < 0 ? 0 : l - 1], hist[l]];\n            }));\n        };\n        nFn.__id = getTimeBasedId();\n        return nFn;\n    },\n    pullableEnd = (nodes, fn) => {\n        let nFn = () => {\n            fn(...nodes.map((node) => {\n                const hist = node.history;\n                return [hist[0], hist[hist.length - 1]];\n            }));\n        };\n        nFn.__id = getTimeBasedId();\n        return nFn;\n    },\n    unique = fns => fns\n                    .reduce((store, fn) => {\n                // @warn function with side effect, it mutates the store passed during initialization\n                        if (fn.__id in store.map) {\n                            return store;\n                        }\n\n                        store.map[fn.__id] = 1;\n                        store.unique.push(fn);\n\n                        return store;\n                    }, { map: {}, unique: [] })\n                    .unique,\n    compose = fns => () => {\n        fns.forEach(fn => fn());\n    },\n    flat = (...params) => {\n        const res = [];\n        params.forEach(param => res.push(...param));\n        return res;\n    },\n    identityMap = arrays => arrays,\n    splitPathProp = (path) => {\n        const pathArr = path.split('.'),\n            len = pathArr.length;\n        return [pathArr.slice(0, len - 1), pathArr[len - 1]];\n    },\n    scheduler = (onFinishCallback) => {\n        let queue = [],\n            animationFrame = null;\n\n        onFinishCallback = onFinishCallback &&\n            typeof onFinishCallback === 'function' && onFinishCallback || (() => { });\n\n        return (listeners, payload) => {\n            [].push.apply(queue, listeners);\n            if (animationFrame === null) {\n                animationFrame = reqAnimFrame(() => {\n                    const tempQ = queue.slice(0);\n                    queue.length = 0;\n                    animationFrame = null;\n\n                    unique(tempQ).forEach(fn => fn());\n                    onFinishCallback(payload);\n                });\n            }\n        };\n    },\n    fetch = namedNode => (...params) => params.map((param) => {\n        const node = namedNode[param];\n        return {\n            name: node.name,\n            qualifiedName: node.qualifiedName,\n            value: node.seed\n        };\n    }),\n    fetchAggregator = (...params) => ({\n        dependencies: params.slice(0, params.length - 1),\n        fn: params[params.length - 1]\n    }),\n    getUpstreamNodes = (list) => {\n        let res = [];\n        const map = {};\n        list.forEach(node => map[node.qualifiedName] = -1);\n        function rec (arr) {\n            arr.forEach((node) => {\n                let qname,\n                    placedIndex,\n                    preArr,\n                    postArr;\n                if (!((qname = node.qualifiedName) in map)) {\n                    map[qname] = res.push(node) - 1;\n                } else {\n                    placedIndex = map[qname];\n                    if (placedIndex !== -1 && placedIndex !== res.length - 1) {\n                        // If not the last element, readjust the array so that the later dependency position is saved\n                        preArr = res.slice(0, placedIndex);\n                        postArr = res.slice(placedIndex + 1);\n                        res = preArr.concat(postArr);\n\n                        // reset the index in map\n                        postArr.forEach((elem, i) => map[elem.qualifiedName] = i + preArr.length);\n                        map[qname] = res.push(node) - 1;\n                    }\n                }\n                rec(node.outgoingEdges);\n            });\n        }\n        rec(list);\n        return res;\n    },\n    resolver = {\n        accumulate: (...params) => {\n            const resp = {};\n            params.forEach((nodeDetails) => {\n                Object.assign(resp, { [nodeDetails.name]: nodeDetails.value });\n            });\n            return resp;\n        },\n        identity: nodeDetails => nodeDetails.value\n    };\n\nfunction resolveDependencyOrder (node, resolved, resolveMap) {\n    let qname;\n    node.edges.forEach((neighbour) => {\n        resolveDependencyOrder(neighbour, resolved, resolveMap);\n    });\n\n    if (node.isRoot() || (qname = node.qualifiedName) in resolveMap) {\n        return;\n    }\n    resolved.push(node);\n    resolveMap[qname] = 1;\n}\n\nclass CustomResolver {\n    constructor (resolver) {\n        this.fn = resolver;\n        this.dep = [];\n    }\n\n    addDependencies(...dep) {\n        this.dep.push(...dep);\n        return this;\n    }\n\n    getDependencies () {\n        return this.dep;\n    }\n\n    get () {\n        return this.fn;\n    }\n}\n\nexport {\n    isSimpleObject,\n    scheduler,\n    compose,\n    flat,\n    identityMap,\n    pullableEnd,\n    pullableRecent,\n    unique,\n    splitPathProp,\n    resolver,\n    ForeignSet,\n    resolveDependencyOrder,\n    fetch,\n    fetchAggregator,\n    CustomResolver,\n    getUpstreamNodes\n};\n","export default class GraphNode {\n    constructor (name, qualifiedName, options) {\n        /* istanbul ignore next */options = options || {};\n        this.name = name;\n        this.qualifiedName = qualifiedName;\n        this.edges = [];\n        this.outgoingEdges = [];\n        this._seed = null;\n        this.requireResolve = true;\n        this.retriever = options.retriever;\n        this.history = [];\n        this.resolver = null;\n        this.electricEdges = [];\n    }\n\n    addDependencies (...dep) {\n        this.edges.push(...dep);\n        dep.forEach(entry => entry.outgoingEdges.push(this));\n        return this;\n    }\n\n    addElectricNode (node) {\n        this.electricEdges.push(node);\n        return this;\n    }\n\n    get seed () {\n        return this._seed;\n    }\n\n    set seed (value) {\n        this._seed = value;\n        this.requireResolve = true;\n        return this;\n    }\n\n    resolve () {\n        this.seed = this.resolver(...this.retrieveDetails());\n        this.history.push(this.seed);\n        this.requireResolve = false;\n        return this;\n    }\n\n    retrieveDetails () {\n        if (this.edges.length === 0) {\n            return [{\n                name: this.name,\n                qualifiedName: this.qualifiedName,\n                value: this.seed\n            }];\n        }\n        return this.retriever(...this.edges.map(edge => edge.qualifiedName));\n    }\n\n    repeatHead () {\n        const\n            history = this.history,\n            head = history[history.length - 1];\n        // @todo- Akash, write test case if history.length === 0 to pass code coverage\n        if (history.length === 0) {\n            return this;\n        }\n        history.push(head);\n        return this;\n    }\n\n    flush () {\n        const hist = this.history,\n            head = hist[hist.length - 1];\n        hist.length = 0;\n        hist.push(head);\n        return this;\n    }\n\n    isRoot () {\n        return this.name === null;\n    }\n}\n","import {\n    pullableRecent,\n    pullableEnd\n} from './utils';\n\nexport default class ElectricNode {\n    constructor () {\n        this.edges = [];\n        this.listeners = {\n            nextFrame: [],\n            currentFrame: []\n        };\n    }\n\n    addEdges (...nodes) {\n        this.edges.push(...nodes);\n        return this;\n    }\n\n    regListenerForCurrFrame (fn) {\n        const lstnrs = this.listeners.currentFrame;\n        let index = lstnrs.push(pullableRecent(this.edges, fn)) - 1;\n\n        return () => {\n            this.listeners.currentFrame = lstnrs.filter((fn, i) => i !== index);\n        };\n    }\n\n    regListenerForNextFrame (fn) {\n        const lstnrs = this.listeners.nextFrame;\n        let index = lstnrs.push(pullableEnd(this.edges, fn)) - 1;\n\n        return () => {\n            this.listeners.nextFrame = lstnrs.filter((fn, i) => i !== index);\n        };\n    }\n\n    hasNextFrameListener () {\n        return !!this.listeners.nextFrame.length;\n    }\n}\n","import {\n    isSimpleObject,\n    resolver,\n    // upstreamNodes,\n    flat,\n    resolveDependencyOrder,\n    getUpstreamNodes,\n    ForeignSet,\n    fetch,\n    CustomResolver,\n    scheduler\n} from './utils';\nimport Node from './graph-node';\nimport ElectricNode from './electric-node';\n\nexport default class Graph {\n    constructor () {\n        this.qualifiedNodeMap = {};\n        this.retriever = fetch(this.qualifiedNodeMap);\n        this.root = new Node(null, null, { retriever: this.retriever });\n        this.root.resolver = resolver.accumulate;\n\n        this._wholeSet = null;\n        this._propagate = true;\n        this.propagationOverride = {\n            currentFrameListeners: false,\n            nextFrameListeners: false\n        };\n\n        this._schedule = scheduler((payload) => {\n            let qname;\n            for (qname in payload.flushTarget) {\n                if (!({}).hasOwnProperty.call(this.qualifiedNodeMap, qname)) {\n                    return;\n                }\n                this.qualifiedNodeMap[qname].flush();\n            }\n        });\n    }\n\n    createNodesFrom (obj, mount) {\n        let val,\n            resolveReqList;\n        const qualifiedNodeMap = this.qualifiedNodeMap,\n            root = this.root,\n            retriever = this.retriever;\n\n        (function rec (objn, qualifiedName, history) {\n            let key,\n                qname,\n                perv,\n                node;\n\n            for (key in objn) {\n                if (!({}).hasOwnProperty.call(objn, key)) {\n                    continue;\n                }\n                qname = `${qualifiedName}${key}`;\n                node = new Node(key, qname, { retriever });\n                qualifiedNodeMap[qname] = node;\n\n                if ((perv = history.perv) !== undefined) {\n                    perv.addDependencies(node);\n                } else {\n                    // top most level entries\n                    root.addDependencies(node);\n                }\n\n                if (isSimpleObject(val = objn[key])) {\n                    rec(val, `${qualifiedName}${key}.`, { perv: node });\n                    node.resolver = resolver.accumulate;\n                } else if (val instanceof CustomResolver) {\n                    node.resolver = val.get();\n                    node.addDependencies(...val.getDependencies().map(qname => qualifiedNodeMap[qname]));\n                } else {\n                    node.resolver = resolver.identity;\n                    node.seed = val;\n                    // node.resolve();\n                }\n            }\n        }(obj, mount === null ? '' : `${mount}.`, {\n            perv: qualifiedNodeMap[mount]\n        }));\n\n        this._wholeSet = new ForeignSet(Object.keys(this.qualifiedNodeMap));\n\n        // Recalculate the model without firing the listeners\n        // @todo selective branch resolve. Currently resolve gets called even for a branch which was updated\n        resolveReqList = this.constructor.getResolvedList(root).concat(root).filter(node => node.requireResolve);\n        resolveReqList.forEach(node => node.resolve());\n        getUpstreamNodes(resolveReqList).forEach(node => node.resolve());\n        return this;\n    }\n\n    getNodeValue (prop) {\n        if (prop in this.qualifiedNodeMap) {\n            return this.qualifiedNodeMap[prop].seed;\n        }\n        return undefined;\n    }\n\n    createElectricNodeOf (props, fnSpec) {\n        const nodes = props.map(prop => this.qualifiedNodeMap[prop]),\n            eNode = new ElectricNode().addEdges(...nodes);\n\n        nodes.forEach(node => node.addElectricNode(eNode));\n        return eNode[`regListenerFor${fnSpec.type}`](fnSpec.fn);\n    }\n\n    update (...params) {\n        let changedSet,\n            upstreamNodes;\n        const\n            electricEdges = [],\n            nodes = params.map((entry) => {\n                entry[0].seed = entry[1];\n                return entry[0];\n            });\n        nodes.forEach(node => node.resolve());\n        electricEdges.push(...flat(...nodes.map(node => node.electricEdges)));\n        changedSet = new ForeignSet(nodes.map(node => node.qualifiedName));\n\n        if (!this._propagate) {\n            this.__execUniqueElectricEdges(electricEdges);\n            this._propagate = true;\n            return this;\n        }\n\n        upstreamNodes = getUpstreamNodes(nodes);\n        upstreamNodes.forEach(upstreamNode => upstreamNode.resolve());\n        changedSet.append(upstreamNodes.map(node => node.qualifiedName));\n        electricEdges.push(...flat(...upstreamNodes.map(node => node.electricEdges)));\n\n        this.__execUniqueElectricEdges(Array.from(new Set(electricEdges)), changedSet);\n        return this;\n    }\n\n    __execUniqueElectricEdges (electricEdges, changedSet) {\n        const\n            cfLstnrs = [], // current frame listeners\n            nfLstnrs = []; // next frame listeners\n        if (changedSet) {\n            const\n                differenceSet = ForeignSet.difference(this._wholeSet, changedSet),\n                entries = differenceSet.toArray();\n\n            entries.forEach(entry => this.qualifiedNodeMap[entry].repeatHead());\n        }\n\n        electricEdges.forEach((e) => {\n            cfLstnrs.push(...e.listeners.currentFrame);\n        });\n        electricEdges.forEach((e) => {\n            nfLstnrs.push(...e.listeners.nextFrame);\n        });\n\n        !this.propagationOverride.currentFrameListeners && cfLstnrs.forEach(fn => fn());\n        !this.propagationOverride.nextFrameListeners && this._schedule(nfLstnrs, { flushTarget: changedSet });\n        this.resetPropagationOverride();\n        return this;\n    }\n\n    resetNodeValue (...qnames) {\n        const nodes = qnames.map(qname => this.qualifiedNodeMap[qname]),\n            args = nodes.map(node => [node, node.seed]);\n        this.update(...args);\n        return this;\n    }\n\n    static getResolvedList (node) {\n        const resolved = [];\n        resolveDependencyOrder(node, resolved, {});\n        return resolved;\n    }\n\n    stopPropagation () {\n        this._propagate = false;\n        return this;\n    }\n\n    resetPropagationOverride () {\n        this.propagationOverride.currentFrameListeners = false;\n        this.propagationOverride.nextFrameListeners = false;\n        return this;\n    }\n\n    setPropagationOverride (key) {\n        this.propagationOverride[`${key}Listeners`] = true;\n        return this;\n    }\n\n    getNodeFromQualifiedName (qname) {\n        return this.qualifiedNodeMap[qname];\n    }\n}\n","import Graph from './graph';\nimport { CustomResolver, fetchAggregator } from './utils';\n\n/**\n * The container class for Hyperdis. Hyperdis is an enabler for observable object with few interesting features like,\n * calculated property, next frame and same frame listeners, multiple listeners etc with a dependency resolving system.\n * It internally uses a graph to hold the hierarchial relationship of a object. Model is merely a container which\n * ties all the components together.\n *\n * @todo Circular dependency detection is not present\n *\n * @example check src/index.spec.js\n * @class\n */\nclass Model {\n    constructor () {\n        this._graph = new Graph();\n        this._lockFlag = false;\n        this._reqQ = [];\n    }\n\n    /**\n     * Static method to create and init the model with an observable seed\n     *\n     * @param {Object} obj The target object which is required to be made observable\n     * @return {Model} instance of the observable object model\n     */\n    static create (obj) {\n        return new Model()._addPropInModel(null, obj);\n    }\n\n    /**\n     * Appends more observable property on the already observable instance. This mutates the original model.\n     *\n     * This function works in two mode. One being\n     * @param {String} mountPoint the property on which the new set of properties will be mounted. If its a nested\n     *                          property then the mountPoint has to be written such a way so it feels like you are\n     *                          accessing the object. If the mount point is not found then he obeservables are added in\n     *                          the root.\n     * @param {Object} The target object which is required to be made observable\n     *\n     * Another being\n     * @param {Object} The target object which is required to be made observable\n     *\n     * @return {Model} instance of the observable object model\n     */\n    append (...params) {\n        let mountPoint,\n            obj;\n\n        if (params.length === 1) {\n            mountPoint = null;\n            obj = params[0];\n        } else {\n            mountPoint = params[0];\n            obj = params[1];\n        }\n\n        this._addPropInModel(mountPoint, obj);\n        return this;\n    }\n\n    /**\n     * Creates a calculated variable from existing variable. This variable can't be updated from outside.\n     * @param {string} mountpoint property path on which the new variable will be placed\n     * @param {string} name name of the variable. If the variable could have hierarchy like `limits.start`\n     * @param {Function} fn funtion where the dependent variables are injected based on the dependency requirement\n     */\n    calculatedProp (...params) {\n        let calculationConfig,\n            customResolver,\n            varName,\n            mount,\n            fetchFn;\n\n        if (params.length > 2) {\n            mount = params[0];\n            varName = params[1];\n            fetchFn = params[2];\n        } else {\n            mount = null;\n            varName = params[0];\n            fetchFn = params[1];\n        }\n\n        calculationConfig = fetchFn(fetchAggregator);\n        customResolver = new CustomResolver(calculationConfig.fn);\n        customResolver.addDependencies(...calculationConfig.dependencies);\n\n        this._addPropInModel(mount, { [varName]: customResolver });\n        return this;\n    }\n\n    // eslint-disable-next-line require-jsdoc\n    _addPropInModel (mountPoint, obj) {\n        this._graph.createNodesFrom(obj, mountPoint);\n        return this;\n    }\n\n    /**\n     * Register a listener in the current frame when a property or group of properties is changed.\n     *\n     * @example\n     * This function takes a single or group of property and handler which is called when any of the properties are\n     * changed.\n     * When a single property is changed the handler is called with two parameter, what was the old value of the state\n     * property and what is the new value.\n     * myState.on('range.start', (oldValue, newValue) => {\n     *      console.log('Value before prop change', oldValue);\n     *      console.log('Value after prop change', newValue);\n     * });\n     *\n     * myState.prop('range.start', 9);\n     * // Output\n     * Value before prop change 1\n     * Value after prop change 9\n     *\n     * If a handler is registered on change of a property which has another state property as value, then the handler\n     * gets called whenever any state property connected to it gets changed\n     *\n     * myState.on('range', (oldValue, newValue) => {\n     *      console.log('Value before prop change', oldValue);\n     *      console.log('Value after prop change', newValue);\n     * });\n     *\n     * myState.prop('range.start', 10);\n     * myState.prop('range.type.absolute', false);\n     *\n     * // Output\n     * Value before prop change\n     * range {\n     *      start: 9,\n     *      end: 5,\n     *      type: {\n     *          absolute: true\n     *      }\n     * }\n     * Value after prop change\n     * range: {\n     *      start: 10,\n     *      end: 5,\n     *      type: {\n     *          absolute: false\n     *      }\n     * }\n     * If a handler is registered with more than one property change then, the handler is called when any of the\n     * properties gets changed. In this cast the handler is called with more than one parameter: each for one state\n     * property which is registered for listening. Each parameter is of type array containing [oldValue, newValue]\n     *\n     * myState.on('range.start', 'range.end', (start, end) => {\n     *      console.log('Start', start);\n     *      console.log('End', end);\n     * });\n     *\n     * myState.prop('range.start', 12);\n     *\n     * // Output\n     * Start [10, 12]\n     * End [5, 5]\n     *\n     * myState.prop('range.end', 7);\n     *\n     * // Output\n     * Start [12, 12]\n     * End [5, 7]\n     *\n     * The on returns a function which is when called the listener registered gets unregistered\n     *\n     * let unsub = myState.on(['range.start', 'range.end'], (start, end) => {\n     *      console.log('Start', start);\n     *      console.log('End', end);\n     * });\n     *\n     * // Unsubscribe\n     * unsub()\n     *\n     * On takes an optional boolean value as the last parameter, which if passed as a true value the handler gets called\n     * during registration itself.\n     *\n     * @param {Array.<String>} props List of properties which is of interest\n     * @param {Function} fn Listener to be executed when any of them is changed. The listener is called with the old\n     *                      value and new value of the properties\n     * @param {*} instantCall When registered if the function is to be triggered with the value of the property\n     *\n     * @return {Function} function to unsubscribe from the listeners registry\n     */\n    on (props, fn, instantCall) {\n        const\n            propsArr = props instanceof Array ? props : [props],\n            // All there listeners will be executed in the current stack frame\n            unsub = this._graph.createElectricNodeOf(propsArr, {\n                type: 'CurrFrame',\n                fn\n            });\n\n        if (instantCall) {\n            // Bar current next frame listeners from getting fired\n            this._graph.stopPropagation().setPropagationOverride('nextFrame').resetNodeValue(...props);\n        }\n        return unsub;\n    }\n\n    /**\n     * Register a listener for the next frame when a property or group of properties is changed.\n     *\n     * @example\n     * See the examples for the on listener\n     *\n     * @param {Array.<String>} props List of properties which is of interest\n     * @param {Function} fn Listener to be executed when any of them is changed. The listener is called with the old\n     *                      value and new value of the properties. Here the oldvalue is last value of the last frame\n     * @param {*} instantCall When registered if the function is to be triggered with the value of the property\n     *\n     * @return {Function} function to unsubscribe from the listeners registry\n     */\n    next (props, fn, instantCall) {\n        const\n            propsArr = props instanceof Array ? props : [props],\n            // All there listeners will be executed at the tick of next animation frame\n            unsub = this._graph.createElectricNodeOf(propsArr, {\n                type: 'NextFrame',\n                fn\n            });\n\n        // @todo check support for this from the graph side\n        if (instantCall) {\n            // Bar current frame listeners from getting fired\n            this._graph.stopPropagation().setPropagationOverride('currentFrame').resetNodeValue(...props);\n        }\n\n        return unsub;\n    }\n\n    /**\n     * Lock queues the request of property change and releases the change when unlock is called. This is helpful when\n     * multiple property is getting called and the model listeners are to be fired once at the end of update.\n     *\n     * @return {Model} instance of the model\n     */\n    lock () {\n        this._lockFlag = true;\n        this._reqQ.length = 0;\n        return this;\n    }\n\n    /**\n     * Unlock unleashes the change done after the lock was called.\n\n     * @return {Model} instance of the model\n     */\n    unlock () {\n        this._lockFlag = false;\n        this.setProp(...this._reqQ);\n        this._reqQ.length = 0;\n        return this;\n    }\n\n    /**\n     * This acts as getter and setter. If the function is called by passing only one argument, it retrieve the value\n     * associated with the property. If the same function is called using two parameters, first one being the property\n     * and second one being the value, then the value is set for the property and the handlers are called (if any)\n     * which got registered using the on function\n     *\n     * Getter\n     * @param {string} prop property path whose value to be retrieved\n     * @return {Object} value of the property at the time of call\n     *\n     * Setter\n     * @param {string} property property path whose value to be ser\n     * @return {Model} instance of the model\n     */\n    prop (...params) {\n        let prop,\n            val,\n            len;\n\n        switch (len = params.length) {\n        case 1:\n            prop = params[0];\n            break;\n\n        case 2:\n            prop = params[0];\n            val = params[1];\n            break;\n\n        default:\n            return this;\n        }\n\n        if (len === 2) {\n            this._lockFlag ? this._reqQ.push([prop, val]) : this.setProp([prop, val]);\n            return this;\n        }\n\n        return this._graph.getNodeValue(prop);\n    }\n\n    // eslint-disable-next-line require-jsdoc\n    setProp (...props) {\n        // Filter out the calculated variables, so that it cant be changed from outside\n        // @todo if a node is not leafValue, and change is called, ignore it too\n        // props = props.filter(prop => !(VirtualObj.walkTill(prop[0].split('.'), this._vObj).leafValue()\n        //     instanceof CalculatedVar));\n\n        if (props.length === 0) {\n            return this;\n        }\n\n        this._graph.update(...props.map(prop => [this._graph.getNodeFromQualifiedName(prop[0]), prop[1]]));\n        return this;\n    }\n\n    /**\n     * Retrieves the graph representation of the object\n     * @return {Graph} instance of the graph associated to the model\n     */\n    graph () {\n        return this._graph;\n    }\n\n    /**\n     * Get serialized data from the model\n     *\n     * @return {Object} Serialized data\n     */\n    serialize () {\n        return this._graph.root.seed;\n    }\n}\n\nexport default Model;\n","import Model from './model';\n\nexport default Model;\n","module.exports = function(module) {\n\tif (!module.webpackPolyfill) {\n\t\tmodule.deprecate = function() {};\n\t\tmodule.paths = [];\n\t\t// module.parent = undefined by default\n\t\tif (!module.children) module.children = [];\n\t\tObject.defineProperty(module, \"loaded\", {\n\t\t\tenumerable: true,\n\t\t\tget: function() {\n\t\t\t\treturn module.l;\n\t\t\t}\n\t\t});\n\t\tObject.defineProperty(module, \"id\", {\n\t\t\tenumerable: true,\n\t\t\tget: function() {\n\t\t\t\treturn module.i;\n\t\t\t}\n\t\t});\n\t\tmodule.webpackPolyfill = 1;\n\t}\n\treturn module;\n};\n","'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n    value: true\n});\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\nvar _lib = require('./lib');\n\nvar _lib2 = _interopRequireDefault(_lib);\n\nvar _containerManager = require('./container-manager');\n\nvar _containerManager2 = _interopRequireDefault(_containerManager);\n\nvar slLib = _lib2['default'].init(typeof window !== \"undefined\" ? window : undefined),\n    doc = slLib.win.document,\n    M = slLib.win.Math,\n    max = M.max,\n    round = M.round,\n    BLANK = '',\n    htmlSplCharSpace = { ' ': '&nbsp;' },\n    documentSupport = slLib.getDocumentSupport(),\n    SVG_BBOX_CORRECTION = documentSupport.isWebKit ? 0 : 4.5;\n\n/*\n * Create new instance of SmartLabelManager.\n *\n * SmartLabelManager controls the lifetime of the execution space where the text's metrics will be calculated.\n * This takes a string for a given style and returns the height, width.\n * If a bound box is defined it wraps the text and returns the wrapped height and width.\n * It allows to append ellipsis at the end if the text is truncated.\n *\n * @param {String | Number} id - Id of the instance. If the same id is passed, it disposes the old instance and\n *                              save the new one;\n * @param {String | HTMLElement} container - The id or the instance of the container where the intermediate dom\n *                              elements are to be attached. If not passed, it appends in div\n *\n * @param {Boolean} useEllipses - This decides if a ellipses to be appended if the text is truncated.\n * @param {Object} options - Control options\n *                          {\n *                              maxCacheLimit: No of letter to be cached. Default: 500.\n *                          }\n * @constructor\n */\nfunction SmartLabelManager(id, container, useEllipses, options) {\n    var wrapper,\n        prop,\n        max,\n        prevInstance,\n        isBrowserLess = false,\n        store = SmartLabelManager.store;\n\n    if (typeof id === 'undefined' || typeof id === 'object') {\n        return;\n    }\n\n    if (prevInstance = store[id]) {\n        prevInstance.dispose();\n    }\n\n    store[id] = this;\n    options = options || {};\n    options.maxCacheLimit = isFinite(max = options.maxCacheLimit) ? max : slLib.maxDefaultCacheLimit;\n\n    if (typeof container === 'string') {\n        container = doc.getElementById(container);\n    }\n\n    wrapper = slLib.createContainer(container);\n    wrapper.innerHTML = slLib.testStrAvg;\n\n    if (documentSupport.isHeadLess || !documentSupport.isIE && !wrapper.offsetHeight && !wrapper.offsetWidth) {\n        isBrowserLess = true;\n    }\n\n    wrapper.innerHTML = '';\n    for (prop in slLib.parentContainerStyle) {\n        wrapper.style[prop] = slLib.parentContainerStyle[prop];\n    }\n\n    this.id = id;\n    this.parentContainer = wrapper;\n\n    this._containerManager = new _containerManager2['default'](wrapper, isBrowserLess, 10);\n    this._showNoEllipses = !useEllipses;\n    this._init = true;\n    this.style = {};\n    this.options = options;\n\n    this.setStyle();\n}\n\n/*\n * getSmartText returns the text separated by <br/> whenever a break is necessary. This is to recgonize one\n * generalized format independent of the implementation (canvas based solution, svg based solution). This method\n * converts the output of getSmartText().text to array of lines if the text is wrapped. It sets a named property\n * `lines` on the object passed as parameter.\n *\n * @param {Object} smartlabel - the object returned by getSmartText based on which line arr which to be formed.\n *\n * @return {Object} - The same object which was passed in the arguments. Also a named property `lines` is set.\n */\nSmartLabelManager.textToLines = function (smartlabel) {\n    smartlabel = smartlabel || {};\n\n    if (!smartlabel.text) {\n        smartlabel.text = '';\n    } else if (typeof smartlabel.text !== 'string') {\n        smartlabel.text = smartlabel.text.toString();\n    }\n\n    smartlabel.lines = smartlabel.text.split(/\\n|<br\\s*?\\/?>/ig);\n    return smartlabel;\n};\n\n// Saves all the instance created so far\nSmartLabelManager.store = {};\n\n// Calculates space taken by a character with an approximation value which is calculated by repeating the\n// character by string length times.\nSmartLabelManager.prototype._calCharDimWithCache = function (text, calculateDifference, length) {\n    if (!this._init) {\n        return false;\n    }\n\n    var size,\n        csArr,\n        tw,\n        twi,\n        cachedStyle,\n        asymmetricDifference,\n        maxAdvancedCacheLimit = this.options.maxCacheLimit,\n        container = this._container,\n        style = this.style || {},\n        cache = this._advancedCache || (this._advancedCache = {}),\n        advancedCacheKey = this._advancedCacheKey || (this._advancedCacheKey = []),\n        cacheName = text + (style.fontSize || BLANK) + (style.fontFamily || BLANK) + (style.fontWeight || BLANK) + (style.fontStyle || BLANK),\n        cacheInitName = text + 'init' + (style.fontSize || BLANK) + (style.fontFamily || BLANK) + (style.fontWeight || BLANK) + (style.fontStyle || BLANK);\n\n    htmlSplCharSpace[text] && (text = htmlSplCharSpace[text]);\n\n    if (!calculateDifference) {\n        asymmetricDifference = 0;\n    } else {\n        if ((asymmetricDifference = cache[cacheInitName]) === undefined) {\n            container.innerHTML = text.repeat ? text.repeat(length) : Array(length + 1).join(text); // jshint ignore:line\n            tw = container.offsetWidth;\n\n            container.innerHTML = text;\n            twi = container.offsetWidth;\n\n            asymmetricDifference = cache[cacheInitName] = (tw - length * twi) / (length + 1);\n            advancedCacheKey.push(cacheInitName);\n            if (advancedCacheKey.length > maxAdvancedCacheLimit) {\n                delete cache[advancedCacheKey.shift()];\n            }\n        }\n    }\n\n    if (cachedStyle = cache[cacheName]) {\n        csArr = cachedStyle.split(',');\n        return {\n            width: parseFloat(csArr[0], 10),\n            height: parseFloat(csArr[1], 10)\n        };\n    }\n\n    container.innerHTML = text;\n\n    size = {\n        height: container.offsetHeight,\n        width: container.offsetWidth + asymmetricDifference\n    };\n\n    cache[cacheName] = size.width + ',' + size.height;\n    advancedCacheKey.push(cacheName);\n    if (advancedCacheKey.length > maxAdvancedCacheLimit) {\n        delete cache[advancedCacheKey.shift()];\n    }\n\n    return size;\n};\n\n// Provide function to calculate the height and width based on the environment and available support from dom.\nSmartLabelManager.prototype._getWidthFn = function () {\n    var contObj = this._containerObj,\n        container = this._container,\n        svgText = contObj.svgText;\n\n    if (svgText) {\n        return function (str) {\n            var bbox, width;\n\n            svgText.textContent = str;\n            bbox = svgText.getBBox();\n            width = bbox.width - SVG_BBOX_CORRECTION;\n            if (width < 1) {\n                width = bbox.width;\n            }\n\n            return width;\n        };\n    } else {\n        return function (str) {\n            container.innerHTML = str;\n            return container.offsetWidth;\n        };\n    }\n};\n\n/*\n * Sets the style based on which the text's metrics to be calculated.\n *\n * @param {Object} style - The style object which affects the text size\n *                      {\n *                          fontSize / 'font-size' : MUST BE FOLLOWED BY PX (10px, 11px)\n *                          fontFamily / 'font-family'\n *                          fontWeight / 'font-weight'\n *                          fontStyle / 'font-style'\n *                      }\n *\n * @return {SmartLabelManager} - Current instance of SmartLabelManager\n */\nSmartLabelManager.prototype.setStyle = function (style) {\n    if (!this._init) {\n        return this;\n    }\n\n    var sCont;\n\n    if (style === this.style && !this._styleNotSet) {\n        return;\n    }\n\n    if (!style) {\n        style = this.style;\n    }\n\n    slLib.setLineHeight(style);\n    this.style = style;\n\n    this._containerObj = sCont = this._containerManager.get(style);\n\n    if (this._containerObj) {\n        this._container = sCont.node;\n        this._context = sCont.context;\n        this._cache = sCont.charCache;\n        this._lineHeight = sCont.lineHeight;\n        this._styleNotSet = false;\n    } else {\n        this._styleNotSet = true;\n    }\n\n    return this;\n};\n\n/*\n * Decides whether ellipses to be shown if the node is truncated\n *\n * @param {Boolean} useEllipses - decides if a ellipses to be appended if the text is truncated. Default: false\n *\n * @return {SmartLabelManager} - Current instance of SmartLabelManager\n */\nSmartLabelManager.prototype.useEllipsesOnOverflow = function (useEllipses) {\n    if (!this._init) {\n        return this;\n    }\n    this._showNoEllipses = !useEllipses;\n    return this;\n};\n\n/*\n * Get wrapped or truncated text if a bound box is defined around it. The result text would be separated by <br/>\n * if wrapped\n *\n * @param {String} text - the subject text\n * @param {Number} maxWidth - width in px of the the bound box\n * @param {Number} maxHeight - height in px of the the bound box\n * @param {Boolean} noWrap - whether the text to be wrapped. Default false.\n *\n * @return {Object} - The metrics of the text bounded by the box\n *                  {\n *                      height : height of the wrapped text\n *                      width : width of the wrapped text\n *                      isTruncated : whether the text is truncated\n *                      maxHeight : Maximum height given\n *                      maxWidth : Maximum width given\n *                      oriText : Original text sent\n *                      oriTextHeight : Original text height\n *                      oriTextWidth : Original text width\n *                      text : SMART TEXT\n *                  }\n */\nSmartLabelManager.prototype.getSmartText = function (text, maxWidth, maxHeight, noWrap) {\n    if (!this._init) {\n        return false;\n    }\n\n    if (text === undefined || text === null) {\n        text = '';\n    } else if (typeof text !== 'string') {\n        text = text.toString();\n    }\n\n    var len,\n        trimStr,\n        tempArr,\n        tmpText,\n        maxWidthWithEll,\n        toolText,\n        oriWidth,\n        oriHeight,\n        newCharIndex,\n        nearestChar,\n        tempChar,\n        getWidth,\n        initialLeft,\n        initialTop,\n        getOriSizeImproveObj,\n        spanArr,\n        x,\n        y,\n        minWidth,\n        elem,\n        chr,\n        elemRightMostPoint,\n        elemLowestPoint,\n        lastBR,\n        removeFromIndex,\n        removeFromIndexForEllipses,\n        hasHTMLTag = false,\n        maxStrWidth = 0,\n        lastDash = -1,\n        lastSpace = -1,\n        lastIndexBroken = -1,\n        strWidth = 0,\n        strHeight = 0,\n        oriTextArr = [],\n        i = 0,\n        ellipsesStr = this._showNoEllipses ? '' : '...',\n        lineHeight = this._lineHeight,\n        context = this._context,\n        container = this._container,\n        sCont = this._containerObj,\n        ellipsesWidth = sCont.ellipsesWidth,\n        dotWidth = sCont.dotWidth,\n        characterArr = [],\n        dashIndex = -1,\n        spaceIndex = -1,\n        lastLineBreak = -1,\n        fastTrim = function fastTrim(str) {\n        str = str.replace(/^\\s\\s*/, '');\n        var ws = /\\s/,\n            i = str.length;\n        while (ws.test(str.charAt(i -= 1))) {/* jshint noempty:false */}\n        return str.slice(0, i + 1);\n    },\n        smartLabel = {\n        text: text,\n        maxWidth: maxWidth,\n        maxHeight: maxHeight,\n        width: null,\n        height: null,\n        oriTextWidth: null,\n        oriTextHeight: null,\n        oriText: text,\n        isTruncated: false\n    };\n\n    getWidth = this._getWidthFn();\n\n    // In some browsers, offsetheight of a single-line text is getting little (1 px) heigher value of the\n    // lineheight. As a result, smartLabel is unable to return single-line text.\n    // To fix this, increase the maxHeight a little amount. Hence maxHeight =  lineHeight * 1.2\n    if (maxHeight === lineHeight) {\n        maxHeight *= 1.2;\n    }\n\n    if (container) {\n        if (!documentSupport.isBrowserLess) {\n            hasHTMLTag = slLib.xmlTagRegEx.test(text);\n            if (!hasHTMLTag) {\n                // Due to support of <,> for xml we convert &lt;, &gt; to <,> respectively so to get the correct\n                // width it is required to convert the same before calculation for the new improve version of the\n                // get text width.\n                tmpText = text.replace(slLib.ltgtRegex, function (match) {\n                    return match === '&lt;' ? '<' : '>';\n                });\n                getOriSizeImproveObj = this.getOriSize(tmpText, true);\n\n                smartLabel.oriTextWidth = oriWidth = getOriSizeImproveObj.width;\n                smartLabel.oriTextHeight = oriHeight = getOriSizeImproveObj.height;\n            } else {\n                container.innerHTML = text;\n                smartLabel.oriTextWidth = oriWidth = container.offsetWidth;\n                smartLabel.oriTextHeight = oriHeight = container.offsetHeight;\n            }\n\n            if (oriHeight <= maxHeight && oriWidth <= maxWidth) {\n                smartLabel.width = smartLabel.oriTextWidth = oriWidth;\n                smartLabel.height = smartLabel.oriTextHeight = oriHeight;\n                return smartLabel;\n            }\n\n            if (lineHeight > maxHeight) {\n                smartLabel.text = '';\n                smartLabel.width = smartLabel.oriTextWidth = 0;\n                smartLabel.height = smartLabel.oriTextHeight = 0;\n                return smartLabel;\n            }\n        }\n\n        // Calculate width with ellipses\n        text = fastTrim(text).replace(/(\\s+)/g, ' ');\n        maxWidthWithEll = this._showNoEllipses ? maxWidth : maxWidth - ellipsesWidth;\n\n        if (!hasHTMLTag) {\n            oriTextArr = text.split('');\n            len = oriTextArr.length;\n            trimStr = '', tempArr = [];\n            tempChar = oriTextArr[0];\n\n            if (this._cache[tempChar]) {\n                minWidth = this._cache[tempChar].width;\n            } else {\n                minWidth = getWidth(tempChar);\n                this._cache[tempChar] = { width: minWidth };\n            }\n\n            if (maxWidthWithEll > minWidth) {\n                tempArr = text.substr(0, slLib.getNearestBreakIndex(text, maxWidthWithEll, this)).split('');\n                i = tempArr.length;\n            } else if (minWidth > maxWidth) {\n                smartLabel.text = '';\n                smartLabel.width = smartLabel.oriTextWidth = smartLabel.height = smartLabel.oriTextHeight = 0;\n                return smartLabel;\n            } else if (ellipsesStr) {\n                maxWidthWithEll = maxWidth - 2 * dotWidth;\n                if (maxWidthWithEll > minWidth) {\n                    ellipsesStr = '..';\n                } else {\n                    maxWidthWithEll = maxWidth - dotWidth;\n                    if (maxWidthWithEll > minWidth) {\n                        ellipsesStr = '.';\n                    } else {\n                        maxWidthWithEll = 0;\n                        ellipsesStr = '';\n                    }\n                }\n            }\n\n            strWidth = getWidth(tempArr.join(''));\n            strHeight = this._lineHeight;\n\n            if (noWrap) {\n                for (; i < len; i += 1) {\n                    tempChar = tempArr[i] = oriTextArr[i];\n                    if (this._cache[tempChar]) {\n                        minWidth = this._cache[tempChar].width;\n                    } else {\n                        if (!getOriSizeImproveObj || !(minWidth = getOriSizeImproveObj.detailObj[tempChar])) {\n                            minWidth = getWidth(tempChar);\n                        }\n                        this._cache[tempChar] = {\n                            width: minWidth\n                        };\n                    }\n                    strWidth += minWidth;\n                    if (strWidth > maxWidthWithEll) {\n                        if (!trimStr) {\n                            trimStr = tempArr.slice(0, -1).join('');\n                        }\n                        if (strWidth > maxWidth) {\n                            smartLabel.text = fastTrim(trimStr) + ellipsesStr;\n                            smartLabel.tooltext = smartLabel.oriText;\n                            smartLabel.width = getWidth(smartLabel.text);\n                            smartLabel.height = this._lineHeight;\n                            return smartLabel;\n                        }\n                    }\n                }\n\n                smartLabel.text = tempArr.join('');\n                smartLabel.width = strWidth;\n                smartLabel.height = this._lineHeight;\n                return smartLabel;\n            } else {\n                for (; i < len; i += 1) {\n                    tempChar = tempArr[i] = oriTextArr[i];\n                    if (tempChar === ' ' && !context) {\n                        tempChar = '&nbsp;';\n                    }\n\n                    if (this._cache[tempChar]) {\n                        minWidth = this._cache[tempChar].width;\n                    } else {\n                        if (!getOriSizeImproveObj || !(minWidth = getOriSizeImproveObj.detailObj[tempChar])) {\n                            minWidth = getWidth(tempChar);\n                        }\n                        this._cache[tempChar] = {\n                            width: minWidth\n                        };\n                    }\n                    strWidth += minWidth;\n\n                    if (strWidth > maxWidthWithEll) {\n                        if (!trimStr) {\n                            trimStr = tempArr.slice(0, -1).join('');\n                        }\n                        if (strWidth > maxWidth) {\n                            /** @todo use regular expressions for better performance. */\n                            lastSpace = text.substr(0, tempArr.length).lastIndexOf(' ');\n                            lastDash = text.substr(0, tempArr.length).lastIndexOf('-');\n                            if (lastSpace > lastIndexBroken) {\n                                strWidth = getWidth(tempArr.slice(lastIndexBroken + 1, lastSpace).join(''));\n                                tempArr.splice(lastSpace, 1, '<br/>');\n                                lastIndexBroken = lastSpace;\n                                newCharIndex = lastSpace + 1;\n                            } else if (lastDash > lastIndexBroken) {\n                                if (lastDash === tempArr.length - 1) {\n                                    strWidth = getWidth(tempArr.slice(lastIndexBroken + 1, lastSpace).join(''));\n                                    tempArr.splice(lastDash, 1, '<br/>-');\n                                } else {\n                                    strWidth = getWidth(tempArr.slice(lastIndexBroken + 1, lastSpace).join(''));\n                                    tempArr.splice(lastDash, 1, '-<br/>');\n                                }\n                                lastIndexBroken = lastDash;\n                                newCharIndex = lastDash + 1;\n                            } else {\n                                tempArr.splice(tempArr.length - 1, 1, '<br/>' + oriTextArr[i]);\n                                lastLineBreak = tempArr.length - 2;\n                                strWidth = getWidth(tempArr.slice(lastIndexBroken + 1, lastLineBreak + 1).join(''));\n                                lastIndexBroken = lastLineBreak;\n                                newCharIndex = i;\n                            }\n                            strHeight += this._lineHeight;\n                            if (strHeight > maxHeight) {\n                                smartLabel.text = fastTrim(trimStr) + ellipsesStr;\n                                smartLabel.tooltext = smartLabel.oriText;\n                                // The max width among all the lines will be the width of the string.\n                                smartLabel.width = maxWidth;\n                                smartLabel.height = strHeight - this._lineHeight;\n                                return smartLabel;\n                            } else {\n                                maxStrWidth = max(maxStrWidth, strWidth);\n                                trimStr = null;\n                                nearestChar = slLib.getNearestBreakIndex(text.substr(newCharIndex), maxWidthWithEll, this);\n                                strWidth = getWidth(text.substr(newCharIndex, nearestChar || 1));\n                                if (tempArr.length < newCharIndex + nearestChar) {\n                                    tempArr = tempArr.concat(text.substr(tempArr.length, newCharIndex + nearestChar - tempArr.length).split(''));\n                                    i = tempArr.length - 1;\n                                }\n                            }\n                        }\n                    }\n                }\n\n                maxStrWidth = max(maxStrWidth, strWidth);\n\n                smartLabel.text = tempArr.join('');\n                smartLabel.width = maxStrWidth;\n                smartLabel.height = strHeight;\n                return smartLabel;\n            }\n        } else {\n            toolText = text.replace(slLib.spanAdditionRegx, '$2');\n            text = text.replace(slLib.spanAdditionRegx, slLib.spanAdditionReplacer);\n            text = text.replace(/(<br\\s*\\/*\\>)/g, '<span class=\"' + [slLib.classNameWithTag, ' ', slLib.classNameWithTagBR].join('') + '\">$1</span>');\n\n            container.innerHTML = text;\n\n            spanArr = container[documentSupport.childRetriverFn](documentSupport.childRetriverString);\n\n            for (x = 0, y = spanArr.length; x < y; x += 1) {\n                elem = spanArr[x];\n                //chech whether this span is temporary inserted span from it's class\n                if (documentSupport.noClassTesting || slLib.classNameReg.test(elem.className)) {\n                    chr = elem.innerHTML;\n                    if (chr !== '') {\n                        if (chr === ' ') {\n                            spaceIndex = characterArr.length;\n                        } else if (chr === '-') {\n                            dashIndex = characterArr.length;\n                        }\n\n                        characterArr.push({\n                            spaceIdx: spaceIndex,\n                            dashIdx: dashIndex,\n                            elem: elem\n                        });\n                        oriTextArr.push(chr);\n                    }\n                }\n            }\n\n            i = 0;\n            len = characterArr.length;\n            minWidth = characterArr[0].elem.offsetWidth;\n\n            if (minWidth > maxWidth) {\n                smartLabel.text = '';\n                smartLabel.width = smartLabel.oriTextWidth = smartLabel.height = smartLabel.oriTextHeight = 0;\n\n                return smartLabel;\n            } else if (minWidth > maxWidthWithEll && !this._showNoEllipses) {\n\n                maxWidthWithEll = maxWidth - 2 * dotWidth;\n                if (maxWidthWithEll > minWidth) {\n                    ellipsesStr = '..';\n                } else {\n                    maxWidthWithEll = maxWidth - dotWidth;\n                    if (maxWidthWithEll > minWidth) {\n                        ellipsesStr = '.';\n                    } else {\n                        maxWidthWithEll = 0;\n                        ellipsesStr = '';\n                    }\n                }\n            }\n\n            initialLeft = characterArr[0].elem.offsetLeft;\n            initialTop = characterArr[0].elem.offsetTop;\n\n            if (noWrap) {\n                for (; i < len; i += 1) {\n                    elem = characterArr[i].elem;\n                    elemRightMostPoint = elem.offsetLeft - initialLeft + elem.offsetWidth;\n\n                    if (elemRightMostPoint > maxWidthWithEll) {\n                        if (!removeFromIndexForEllipses) {\n                            removeFromIndexForEllipses = i;\n                        }\n                        if (container.offsetWidth > maxWidth) {\n                            removeFromIndex = i;\n                            i = len;\n                        }\n                    }\n                }\n            } else {\n                for (; i < len; i += 1) {\n                    elem = characterArr[i].elem;\n                    elemLowestPoint = elem.offsetHeight + (elem.offsetTop - initialTop);\n                    elemRightMostPoint = elem.offsetLeft - initialLeft + elem.offsetWidth;\n\n                    lastBR = null;\n\n                    if (elemRightMostPoint > maxWidthWithEll) {\n                        if (!removeFromIndexForEllipses) {\n                            removeFromIndexForEllipses = i;\n                        }\n\n                        if (elemRightMostPoint > maxWidth) {\n                            lastSpace = characterArr[i].spaceIdx;\n                            lastDash = characterArr[i].dashIdx;\n                            if (lastSpace > lastIndexBroken) {\n                                characterArr[lastSpace].elem.innerHTML = '<br/>';\n                                lastIndexBroken = lastSpace;\n                            } else if (lastDash > lastIndexBroken) {\n                                if (lastDash === i) {\n                                    // in case the overflowing character itself is the '-'\n                                    characterArr[lastDash].elem.innerHTML = '<br/>-';\n                                } else {\n                                    characterArr[lastDash].elem.innerHTML = '-<br/>';\n                                }\n                                lastIndexBroken = lastDash;\n                            } else {\n                                elem.parentNode.insertBefore(lastBR = doc.createElement('br'), elem);\n                            }\n\n                            //check whether this break made current element outside the area height\n                            if (elem.offsetHeight + elem.offsetTop > maxHeight) {\n                                //remove the lastly inserted line break\n                                if (lastBR) {\n                                    lastBR.parentNode.removeChild(lastBR);\n                                } else if (lastIndexBroken === lastDash) {\n                                    characterArr[lastDash].elem.innerHTML = '-';\n                                } else {\n                                    characterArr[lastSpace].elem.innerHTML = ' ';\n                                }\n                                removeFromIndex = i;\n                                //break the looping condition\n                                i = len;\n                            } else {\n                                removeFromIndexForEllipses = null;\n                            }\n                        }\n                    } else {\n                        //check whether this break made current element outside the area height\n                        if (elemLowestPoint > maxHeight) {\n                            removeFromIndex = i;\n                            i = len;\n                        }\n                    }\n                }\n            }\n\n            if (removeFromIndex < len) {\n                //set the trancated property of the smartlabel\n                smartLabel.isTruncated = true;\n\n                /** @todo is this really needed? */\n                removeFromIndexForEllipses = removeFromIndexForEllipses ? removeFromIndexForEllipses : removeFromIndex;\n\n                for (i = len - 1; i >= removeFromIndexForEllipses; i -= 1) {\n                    elem = characterArr[i].elem;\n                    //chech whether this span is temporary inserted span from it's class\n                    elem.parentNode.removeChild(elem);\n                }\n\n                for (; i >= 0; i -= 1) {\n                    elem = characterArr[i].elem;\n                    if (slLib.classNameBrReg.test(elem.className)) {\n                        //chech whether this span is temporary inserted span from it's class\n                        elem.parentNode.removeChild(elem);\n                    } else {\n                        i = 0;\n                    }\n                }\n            }\n\n            //get the smart text\n            smartLabel.text = container.innerHTML.replace(slLib.spanRemovalRegx, '$1').replace(/\\&amp\\;/g, '&');\n            if (smartLabel.isTruncated) {\n                smartLabel.text += ellipsesStr;\n                smartLabel.tooltext = toolText;\n            }\n        }\n\n        smartLabel.height = container.offsetHeight;\n        smartLabel.width = container.offsetWidth;\n\n        return smartLabel;\n    } else {\n        smartLabel.error = new Error('Body Tag Missing!');\n        return smartLabel;\n    }\n};\n\n/*\n * Get the height and width of a text.\n *\n * @param {String} text - Text whose metrics to be measured\n * @param {Boolean} Optional detailedCalculationFlag - this flag if set it calculates per letter position\n *                          information and returns it. Ideally you dont need it unless you want to post process the\n *                          string. And its an EXPENSIVE OPERATION.\n *\n * @return {Object} - If detailedCalculationFlag is set to true the returned object would be\n *                  {\n *                      height: height of the text\n *                      width: width of the text\n *                      detailObj: detail calculation of letters in the format {lettername: width}\n *                  }\n *                  If detailedCalculationFlag is set to false the returned object wont have the detailObj prop.\n */\nSmartLabelManager.prototype.getOriSize = function (text, detailedCalculationFlag) {\n    if (!this._init) {\n        return false;\n    }\n\n    var textArr,\n        letter,\n        lSize,\n        i,\n        l,\n        cumulativeSize = 0,\n        height = 0,\n        indiSizeStore = {};\n\n    if (!detailedCalculationFlag) {\n        return this._calCharDimWithCache(text);\n    }\n\n    // Calculate the width of every letter with an approximation\n    textArr = text.split('');\n    for (i = 0, l = textArr.length; i < l; i++) {\n        letter = textArr[i];\n        lSize = this._calCharDimWithCache(letter, true, textArr.length);\n        height = max(height, lSize.height);\n        cumulativeSize += lSize.width;\n        indiSizeStore[letter] = lSize.width;\n    }\n\n    return {\n        width: round(cumulativeSize),\n        height: height,\n        detailObj: indiSizeStore\n    };\n};\n\n/*\n * Dispose the container and object allocated by the smartlabel\n */\nSmartLabelManager.prototype.dispose = function () {\n    if (!this._init) {\n        return this;\n    }\n\n    this._containerManager && this._containerManager.dispose && this._containerManager.dispose();\n\n    delete this._container;\n    delete this._context;\n    delete this._cache;\n    delete this._containerManager;\n    delete this._containerObj;\n    delete this.id;\n    delete this.style;\n    delete this.parentContainer;\n    delete this._showNoEllipses;\n\n    return this;\n};\n\nexports['default'] = SmartLabelManager;\nmodule.exports = exports['default'];","'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n\tvalue: true\n});\nvar lib = {\n\tinit: function init(win) {\n\t\tvar doc = win.document,\n\t\t    nav = win.navigator,\n\t\t    userAgent = nav.userAgent,\n\t\t    DIV = 'DIV',\n\t\t    ceil = Math.ceil,\n\t\t    floor = Math.floor,\n\t\t    containerInstanceCount = 0,\n\t\t    clsNameSpace = 'fusioncharts-smartlabel-',\n\t\t    containerClass = clsNameSpace + 'container',\n\t\t    classNameWithTag = clsNameSpace + 'tag',\n\t\t    classNameWithTagBR = clsNameSpace + 'br';\n\n\t\tlib = {\n\t\t\twin: win,\n\n\t\t\tcontainerClass: containerClass,\n\n\t\t\tclassNameWithTag: classNameWithTag,\n\n\t\t\tclassNameWithTagBR: classNameWithTagBR,\n\n\t\t\tmaxDefaultCacheLimit: 500,\n\n\t\t\tclassNameReg: new RegExp('\\b' + classNameWithTag + '\\b'),\n\n\t\t\tclassNameBrReg: new RegExp('\\b' + classNameWithTagBR + '\\b'),\n\n\t\t\tspanAdditionRegx: /(<[^<\\>]+?\\>)|(&(?:[a-z]+|#[0-9]+);|.)/ig,\n\n\t\t\tspanAdditionReplacer: '$1<span class=\"' + classNameWithTag + '\">$2</span>',\n\n\t\t\tspanRemovalRegx: new RegExp('\\\\<span[^\\\\>]+?' + classNameWithTag + '[^\\\\>]{0,}\\\\>(.*?)\\\\<\\\\/span\\\\>', 'ig'),\n\n\t\t\txmlTagRegEx: new RegExp('<[^>][^<]*[^>]+>', 'i'),\n\n\t\t\tltgtRegex: /&lt;|&gt;/g,\n\n\t\t\tbrReplaceRegex: /<br\\/>/ig,\n\n\t\t\ttestStrAvg: 'WgI',\n\n\t\t\t// This style is applied over the parent smartlabel container. The container is kept hidden from the viewport\n\t\t\tparentContainerStyle: {\n\t\t\t\tposition: 'absolute',\n\t\t\t\ttop: '-9999em',\n\t\t\t\twhiteSpace: 'nowrap',\n\t\t\t\tpadding: '0px',\n\t\t\t\twidth: '1px',\n\t\t\t\theight: '1px',\n\t\t\t\toverflow: 'hidden'\n\t\t\t},\n\n\t\t\t// All the style which might affect the text metrics\n\t\t\tsupportedStyle: {\n\t\t\t\tfont: 'font',\n\t\t\t\tfontFamily: 'font-family',\n\t\t\t\t'font-family': 'font-family',\n\t\t\t\tfontWeight: 'font-weight',\n\t\t\t\t'font-weight': 'font-weight',\n\t\t\t\tfontSize: 'font-size',\n\t\t\t\t'font-size': 'font-size',\n\t\t\t\tlineHeight: 'line-height',\n\t\t\t\t'line-height': 'line-height',\n\t\t\t\tfontStyle: 'font-style',\n\t\t\t\t'font-style': 'font-style'\n\t\t\t},\n\n\t\t\t// Get the support list for html the document where the text calcution is to be done.\n\t\t\tgetDocumentSupport: function getDocumentSupport() {\n\t\t\t\tvar childRetriverFn, childRetriverString, noClassTesting;\n\n\t\t\t\tif (doc.getElementsByClassName) {\n\t\t\t\t\tchildRetriverFn = 'getElementsByClassName';\n\t\t\t\t\tchildRetriverString = classNameWithTag;\n\t\t\t\t\tnoClassTesting = true;\n\t\t\t\t} else {\n\t\t\t\t\tchildRetriverFn = 'getElementsByTagName';\n\t\t\t\t\tchildRetriverString = 'span';\n\t\t\t\t\tnoClassTesting = false;\n\t\t\t\t}\n\n\t\t\t\treturn {\n\t\t\t\t\tisIE: /msie/i.test(userAgent) && !win.opera,\n\t\t\t\t\thasSVG: Boolean(win.SVGAngle || doc.implementation.hasFeature('http://www.w3.org/TR/SVG11/feature#BasicStructure', '1.1')),\n\t\t\t\t\tisHeadLess: new RegExp(' HtmlUnit').test(userAgent),\n\t\t\t\t\tisWebKit: new RegExp(' AppleWebKit/').test(userAgent),\n\t\t\t\t\tchildRetriverFn: childRetriverFn,\n\t\t\t\t\tchildRetriverString: childRetriverString,\n\t\t\t\t\tnoClassTesting: noClassTesting\n\t\t\t\t};\n\t\t\t},\n\n\t\t\t/*\n    * Create a html div element and attach it with a parent. All the subsequent operations are performed\n    * by upding this dom tree only.\n    *\n    * @param {HTMLElement} - The html element where the newly created div is to be attached. If not passed,\n    *                      the new div is appended on the body.\n    */\n\t\t\tcreateContainer: function createContainer(containerParent) {\n\t\t\t\tvar body, container;\n\n\t\t\t\tif (containerParent && (containerParent.offsetWidth || containerParent.offsetHeight)) {\n\t\t\t\t\tif (containerParent.appendChild) {\n\t\t\t\t\t\tcontainerParent.appendChild(container = doc.createElement(DIV));\n\t\t\t\t\t\tcontainer.className = containerClass;\n\t\t\t\t\t\tcontainer.setAttribute('aria-hidden', 'true');\n\t\t\t\t\t\tcontainer.setAttribute('role', 'presentation');\n\t\t\t\t\t\treturn container;\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tbody = doc.getElementsByTagName('body')[0];\n\n\t\t\t\t\tif (body && body.appendChild) {\n\t\t\t\t\t\tcontainer = doc.createElement(DIV);\n\t\t\t\t\t\tcontainer.className = containerClass;\n\t\t\t\t\t\tcontainer.setAttribute('aria-hidden', 'true');\n\t\t\t\t\t\tcontainer.setAttribute('role', 'presentation');\n\t\t\t\t\t\tcontainerInstanceCount += 1;\n\t\t\t\t\t\tbody.appendChild(container);\n\t\t\t\t\t\treturn container;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t},\n\n\t\t\t// Finds a approximate position where the text is to be broken\n\t\t\tgetNearestBreakIndex: function getNearestBreakIndex(text, maxWidth, sl) {\n\t\t\t\tif (!text || !text.length) {\n\t\t\t\t\treturn 0;\n\t\t\t\t}\n\n\t\t\t\tvar difference,\n\t\t\t\t    getWidth = sl._getWidthFn(),\n\t\t\t\t    charLen = 0,\n\t\t\t\t    increment = 0,\n\t\t\t\t    oriWidth = getWidth(text),\n\t\t\t\t    avgWidth = oriWidth / text.length;\n\n\t\t\t\tdifference = maxWidth;\n\t\t\t\tcharLen = ceil(maxWidth / avgWidth);\n\n\t\t\t\tif (oriWidth < maxWidth) {\n\t\t\t\t\treturn text.length - 1;\n\t\t\t\t}\n\n\t\t\t\tif (charLen > text.length) {\n\t\t\t\t\tdifference = maxWidth - oriWidth;\n\t\t\t\t\tcharLen = text.length;\n\t\t\t\t}\n\n\t\t\t\twhile (difference > 0) {\n\t\t\t\t\tdifference = maxWidth - getWidth(text.substr(0, charLen));\n\t\t\t\t\tincrement = floor(difference / avgWidth);\n\t\t\t\t\tif (increment) {\n\t\t\t\t\t\tcharLen += increment;\n\t\t\t\t\t} else {\n\t\t\t\t\t\treturn charLen;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\twhile (difference < 0) {\n\t\t\t\t\tdifference = maxWidth - getWidth(text.substr(0, charLen));\n\t\t\t\t\tincrement = floor(difference / avgWidth);\n\t\t\t\t\tif (increment) {\n\t\t\t\t\t\tcharLen += increment;\n\t\t\t\t\t} else {\n\t\t\t\t\t\treturn charLen;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn charLen;\n\t\t\t},\n\n\t\t\t/*\n    * Determine lineheight of a text for a given style. It adds propery lineHeight to the style passed\n    *\n    * @param {Object} - The style based on which the text's metric needs to be calculated. The calculation happens\n    *                  based on fontSize property, if its not present a default font size is assumed.\n    *\n    * @return {Object} - The style that was passed with lineHeight as a named propery set on the object.\n    */\n\t\t\tsetLineHeight: function setLineHeight(styleObj) {\n\t\t\t\tvar fSize = styleObj.fontSize = styleObj.fontSize || '12px';\n\t\t\t\tstyleObj.lineHeight = styleObj.lineHeight || styleObj['line-height'] || parseInt(fSize, 10) * 1.2 + 'px';\n\t\t\t\treturn styleObj;\n\t\t\t}\n\t\t};\n\n\t\treturn lib;\n\t}\n};\n\nexports['default'] = lib;\nmodule.exports = exports['default'];","const Muze = require('./muze');\n\nmodule.exports = Muze.default ? Muze.default : Muze;\n","'use strict';\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\nvar _lib = require('./lib');\n\nvar _lib2 = _interopRequireDefault(_lib);\n\nvar slLib = _lib2['default'].init(typeof window !== \"undefined\" ? window : undefined),\n    doc = slLib.win.document,\n    documentSupport = slLib.getDocumentSupport(),\n    SVG_BBOX_CORRECTION = documentSupport.isWebKit ? 0 : 4.5;\n\nfunction ContainerManager(parentContainer, isBrowserLess, maxContainers) {\n    var svg;\n\n    maxContainers = maxContainers > 5 ? maxContainers : 5;\n    maxContainers = maxContainers < 20 ? maxContainers : 20;\n\n    this.maxContainers = maxContainers;\n    this.first = null;\n    this.last = null;\n    this.containers = {};\n    this.length = 0;\n    this.rootNode = parentContainer;\n\n    if (isBrowserLess) {\n        svg = doc.createElementNS('http://www.w3.org/2000/svg', 'svg');\n        svg.setAttributeNS('http://www.w3.org/2000/svg', 'xlink', 'http://www.w3.org/1999/xlink');\n        svg.setAttributeNS('http://www.w3.org/2000/svg', 'height', '0');\n        svg.setAttributeNS('http://www.w3.org/2000/svg', 'width', '0');\n        this.svgRoot = svg;\n        this.rootNode.appendChild(svg);\n    }\n}\n\nContainerManager.prototype.get = function (style) {\n    var diff,\n        key,\n        containerObj,\n        containers = this.containers,\n        len = this.length,\n        max = this.maxContainers,\n        keyStr = '';\n\n    for (key in slLib.supportedStyle) {\n        if (style[key] !== undefined) {\n            keyStr += slLib.supportedStyle[key] + ':' + style[key] + ';';\n        }\n    }\n\n    if (!keyStr) {\n        return false;\n    }\n\n    if (containerObj = containers[keyStr]) {\n        if (this.first !== containerObj) {\n            containerObj.prev && (containerObj.prev.next = containerObj.next);\n            containerObj.next && (containerObj.next.prev = containerObj.prev);\n            containerObj.next = this.first;\n            containerObj.next.prev = containerObj;\n            this.last === containerObj && (this.last = containerObj.prev);\n            containerObj.prev = null;\n            this.first = containerObj;\n        }\n    } else {\n        if (len >= max) {\n            diff = len - max + 1;\n            // +1 is to remove an extra entry to make space for the new container to be added.\n            while (diff--) {\n                this.removeContainer(this.last);\n            }\n        }\n        containerObj = this.addContainer(keyStr);\n    }\n\n    return containerObj;\n};\n\nContainerManager.prototype.addContainer = function (keyStr) {\n    var node, container;\n\n    this.containers[keyStr] = container = {\n        next: null,\n        prev: null,\n        node: null,\n        ellipsesWidth: 0,\n        lineHeight: 0,\n        dotWidth: 0,\n        avgCharWidth: 4,\n        keyStr: keyStr,\n        charCache: {}\n    };\n\n    // Since the container objects are arranged from most recent to least recent order, we need to add the new\n    // object at the beginning of the list.\n    container.next = this.first;\n    container.next && (container.next.prev = container);\n    this.first = container;\n    if (!this.last) {\n        this.last = container;\n    }\n    this.length += 1;\n\n    node = container.node = doc.createElement('div');\n    this.rootNode.appendChild(node);\n\n    if (documentSupport.isIE && !documentSupport.hasSVG) {\n        node.style.setAttribute('cssText', keyStr);\n    } else {\n        node.setAttribute('style', keyStr);\n    }\n\n    node.setAttribute('aria-hidden', 'true');\n    node.setAttribute('role', 'presentation');\n    node.style.display = 'inline-block';\n\n    node.innerHTML = slLib.testStrAvg; // A test string.\n    container.lineHeight = node.offsetHeight;\n    container.avgCharWidth = node.offsetWidth / 3;\n\n    if (documentSupport.isBrowserLess) {\n        node = container.svgText = doc.createElementNS('http://www.w3.org/2000/svg', 'text');\n        node.setAttribute('style', keyStr);\n        this.svgRoot.appendChild(node);\n\n        node.textContent = slLib.testStrAvg; // A test string.\n        container.lineHeight = node.getBBox().height;\n        container.avgCharWidth = (node.getBBox().width - SVG_BBOX_CORRECTION) / 3;\n\n        node.textContent = '...';\n        container.ellipsesWidth = node.getBBox().width - SVG_BBOX_CORRECTION;\n        node.textContent = '.';\n        container.dotWidth = node.getBBox().width - SVG_BBOX_CORRECTION;\n    } else {\n        node.innerHTML = '...';\n        container.ellipsesWidth = node.offsetWidth;\n        node.innerHTML = '.';\n        container.dotWidth = node.offsetWidth;\n        node.innerHTML = '';\n    }\n\n    return container;\n};\n\nContainerManager.prototype.removeContainer = function (cObj) {\n    var keyStr = cObj.keyStr;\n\n    if (!keyStr || !this.length || !cObj) {\n        return;\n    }\n    this.length -= 1;\n\n    cObj.prev && (cObj.prev.next = cObj.next);\n    cObj.next && (cObj.next.prev = cObj.prev);\n    this.first === cObj && (this.first = cObj.next);\n    this.last === cObj && (this.last = cObj.prev);\n\n    cObj.node.parentNode.removeChild(cObj.node);\n\n    delete this.containers[keyStr];\n};\n\nContainerManager.prototype.dispose = function () {\n    var key,\n        containers = this.containers;\n\n    this.maxContainers = null;\n    for (key in containers) {\n        this.removeContainer(containers[key]);\n    }\n\n    this.rootNode.parentNode.removeChild(this.rootNode);\n\n    this.rootNode = null;\n    this.first = null;\n    this.last = null;\n};\n\nmodule.exports = ContainerManager;","export default function(a, b) {\n  return a < b ? -1 : a > b ? 1 : a >= b ? 0 : NaN;\n}\n","import ascending from \"./ascending\";\n\nexport default function(compare) {\n  if (compare.length === 1) compare = ascendingComparator(compare);\n  return {\n    left: function(a, x, lo, hi) {\n      if (lo == null) lo = 0;\n      if (hi == null) hi = a.length;\n      while (lo < hi) {\n        var mid = lo + hi >>> 1;\n        if (compare(a[mid], x) < 0) lo = mid + 1;\n        else hi = mid;\n      }\n      return lo;\n    },\n    right: function(a, x, lo, hi) {\n      if (lo == null) lo = 0;\n      if (hi == null) hi = a.length;\n      while (lo < hi) {\n        var mid = lo + hi >>> 1;\n        if (compare(a[mid], x) > 0) hi = mid;\n        else lo = mid + 1;\n      }\n      return lo;\n    }\n  };\n}\n\nfunction ascendingComparator(f) {\n  return function(d, x) {\n    return ascending(f(d), x);\n  };\n}\n","import ascending from \"./ascending\";\nimport bisector from \"./bisector\";\n\nvar ascendingBisect = bisector(ascending);\nexport var bisectRight = ascendingBisect.right;\nexport var bisectLeft = ascendingBisect.left;\nexport default bisectRight;\n","import {pair} from \"./pairs\";\n\nexport default function(values0, values1, reduce) {\n  var n0 = values0.length,\n      n1 = values1.length,\n      values = new Array(n0 * n1),\n      i0,\n      i1,\n      i,\n      value0;\n\n  if (reduce == null) reduce = pair;\n\n  for (i0 = i = 0; i0 < n0; ++i0) {\n    for (value0 = values0[i0], i1 = 0; i1 < n1; ++i1, ++i) {\n      values[i] = reduce(value0, values1[i1]);\n    }\n  }\n\n  return values;\n}\n","export default function(x) {\n  return x === null ? NaN : +x;\n}\n","var array = Array.prototype;\n\nexport var slice = array.slice;\nexport var map = array.map;\n","export default function(start, stop, step) {\n  start = +start, stop = +stop, step = (n = arguments.length) < 2 ? (stop = start, start = 0, 1) : n < 3 ? 1 : +step;\n\n  var i = -1,\n      n = Math.max(0, Math.ceil((stop - start) / step)) | 0,\n      range = new Array(n);\n\n  while (++i < n) {\n    range[i] = start + i * step;\n  }\n\n  return range;\n}\n","var e10 = Math.sqrt(50),\n    e5 = Math.sqrt(10),\n    e2 = Math.sqrt(2);\n\nexport default function(start, stop, count) {\n  var reverse,\n      i = -1,\n      n,\n      ticks,\n      step;\n\n  stop = +stop, start = +start, count = +count;\n  if (start === stop && count > 0) return [start];\n  if (reverse = stop < start) n = start, start = stop, stop = n;\n  if ((step = tickIncrement(start, stop, count)) === 0 || !isFinite(step)) return [];\n\n  if (step > 0) {\n    start = Math.ceil(start / step);\n    stop = Math.floor(stop / step);\n    ticks = new Array(n = Math.ceil(stop - start + 1));\n    while (++i < n) ticks[i] = (start + i) * step;\n  } else {\n    start = Math.floor(start * step);\n    stop = Math.ceil(stop * step);\n    ticks = new Array(n = Math.ceil(start - stop + 1));\n    while (++i < n) ticks[i] = (start - i) / step;\n  }\n\n  if (reverse) ticks.reverse();\n\n  return ticks;\n}\n\nexport function tickIncrement(start, stop, count) {\n  var step = (stop - start) / Math.max(0, count),\n      power = Math.floor(Math.log(step) / Math.LN10),\n      error = step / Math.pow(10, power);\n  return power >= 0\n      ? (error >= e10 ? 10 : error >= e5 ? 5 : error >= e2 ? 2 : 1) * Math.pow(10, power)\n      : -Math.pow(10, -power) / (error >= e10 ? 10 : error >= e5 ? 5 : error >= e2 ? 2 : 1);\n}\n\nexport function tickStep(start, stop, count) {\n  var step0 = Math.abs(stop - start) / Math.max(0, count),\n      step1 = Math.pow(10, Math.floor(Math.log(step0) / Math.LN10)),\n      error = step0 / step1;\n  if (error >= e10) step1 *= 10;\n  else if (error >= e5) step1 *= 5;\n  else if (error >= e2) step1 *= 2;\n  return stop < start ? -step1 : step1;\n}\n","export default function(values) {\n  return Math.ceil(Math.log(values.length) / Math.LN2) + 1;\n}\n","import number from \"./number\";\n\nexport default function(values, p, valueof) {\n  if (valueof == null) valueof = number;\n  if (!(n = values.length)) return;\n  if ((p = +p) <= 0 || n < 2) return +valueof(values[0], 0, values);\n  if (p >= 1) return +valueof(values[n - 1], n - 1, values);\n  var n,\n      i = (n - 1) * p,\n      i0 = Math.floor(i),\n      value0 = +valueof(values[i0], i0, values),\n      value1 = +valueof(values[i0 + 1], i0 + 1, values);\n  return value0 + (value1 - value0) * (i - i0);\n}\n","export var prefix = \"$\";\n\nfunction Map() {}\n\nMap.prototype = map.prototype = {\n  constructor: Map,\n  has: function(key) {\n    return (prefix + key) in this;\n  },\n  get: function(key) {\n    return this[prefix + key];\n  },\n  set: function(key, value) {\n    this[prefix + key] = value;\n    return this;\n  },\n  remove: function(key) {\n    var property = prefix + key;\n    return property in this && delete this[property];\n  },\n  clear: function() {\n    for (var property in this) if (property[0] === prefix) delete this[property];\n  },\n  keys: function() {\n    var keys = [];\n    for (var property in this) if (property[0] === prefix) keys.push(property.slice(1));\n    return keys;\n  },\n  values: function() {\n    var values = [];\n    for (var property in this) if (property[0] === prefix) values.push(this[property]);\n    return values;\n  },\n  entries: function() {\n    var entries = [];\n    for (var property in this) if (property[0] === prefix) entries.push({key: property.slice(1), value: this[property]});\n    return entries;\n  },\n  size: function() {\n    var size = 0;\n    for (var property in this) if (property[0] === prefix) ++size;\n    return size;\n  },\n  empty: function() {\n    for (var property in this) if (property[0] === prefix) return false;\n    return true;\n  },\n  each: function(f) {\n    for (var property in this) if (property[0] === prefix) f(this[property], property.slice(1), this);\n  }\n};\n\nfunction map(object, f) {\n  var map = new Map;\n\n  // Copy constructor.\n  if (object instanceof Map) object.each(function(value, key) { map.set(key, value); });\n\n  // Index array by numeric index or specified key function.\n  else if (Array.isArray(object)) {\n    var i = -1,\n        n = object.length,\n        o;\n\n    if (f == null) while (++i < n) map.set(i, object[i]);\n    else while (++i < n) map.set(f(o = object[i], i, object), o);\n  }\n\n  // Convert object to map.\n  else if (object) for (var key in object) map.set(key, object[key]);\n\n  return map;\n}\n\nexport default map;\n","import map from \"./map\";\n\nexport default function() {\n  var keys = [],\n      sortKeys = [],\n      sortValues,\n      rollup,\n      nest;\n\n  function apply(array, depth, createResult, setResult) {\n    if (depth >= keys.length) {\n      if (sortValues != null) array.sort(sortValues);\n      return rollup != null ? rollup(array) : array;\n    }\n\n    var i = -1,\n        n = array.length,\n        key = keys[depth++],\n        keyValue,\n        value,\n        valuesByKey = map(),\n        values,\n        result = createResult();\n\n    while (++i < n) {\n      if (values = valuesByKey.get(keyValue = key(value = array[i]) + \"\")) {\n        values.push(value);\n      } else {\n        valuesByKey.set(keyValue, [value]);\n      }\n    }\n\n    valuesByKey.each(function(values, key) {\n      setResult(result, key, apply(values, depth, createResult, setResult));\n    });\n\n    return result;\n  }\n\n  function entries(map, depth) {\n    if (++depth > keys.length) return map;\n    var array, sortKey = sortKeys[depth - 1];\n    if (rollup != null && depth >= keys.length) array = map.entries();\n    else array = [], map.each(function(v, k) { array.push({key: k, values: entries(v, depth)}); });\n    return sortKey != null ? array.sort(function(a, b) { return sortKey(a.key, b.key); }) : array;\n  }\n\n  return nest = {\n    object: function(array) { return apply(array, 0, createObject, setObject); },\n    map: function(array) { return apply(array, 0, createMap, setMap); },\n    entries: function(array) { return entries(apply(array, 0, createMap, setMap), 0); },\n    key: function(d) { keys.push(d); return nest; },\n    sortKeys: function(order) { sortKeys[keys.length - 1] = order; return nest; },\n    sortValues: function(order) { sortValues = order; return nest; },\n    rollup: function(f) { rollup = f; return nest; }\n  };\n}\n\nfunction createObject() {\n  return {};\n}\n\nfunction setObject(object, key, value) {\n  object[key] = value;\n}\n\nfunction createMap() {\n  return map();\n}\n\nfunction setMap(map, key, value) {\n  map.set(key, value);\n}\n","import {default as map, prefix} from \"./map\";\n\nfunction Set() {}\n\nvar proto = map.prototype;\n\nSet.prototype = set.prototype = {\n  constructor: Set,\n  has: proto.has,\n  add: function(value) {\n    value += \"\";\n    this[prefix + value] = value;\n    return this;\n  },\n  remove: proto.remove,\n  clear: proto.clear,\n  values: proto.keys,\n  size: proto.size,\n  empty: proto.empty,\n  each: proto.each\n};\n\nfunction set(object, f) {\n  var set = new Set;\n\n  // Copy constructor.\n  if (object instanceof Set) object.each(function(value) { set.add(value); });\n\n  // Otherwise, assume it’s an array.\n  else if (object) {\n    var i = -1, n = object.length;\n    if (f == null) while (++i < n) set.add(object[i]);\n    else while (++i < n) set.add(f(object[i], i, object));\n  }\n\n  return set;\n}\n\nexport default set;\n","var array = Array.prototype;\n\nexport var map = array.map;\nexport var slice = array.slice;\n","import {map} from \"d3-collection\";\nimport {slice} from \"./array\";\n\nexport var implicit = {name: \"implicit\"};\n\nexport default function ordinal(range) {\n  var index = map(),\n      domain = [],\n      unknown = implicit;\n\n  range = range == null ? [] : slice.call(range);\n\n  function scale(d) {\n    var key = d + \"\", i = index.get(key);\n    if (!i) {\n      if (unknown !== implicit) return unknown;\n      index.set(key, i = domain.push(d));\n    }\n    return range[(i - 1) % range.length];\n  }\n\n  scale.domain = function(_) {\n    if (!arguments.length) return domain.slice();\n    domain = [], index = map();\n    var i = -1, n = _.length, d, key;\n    while (++i < n) if (!index.has(key = (d = _[i]) + \"\")) index.set(key, domain.push(d));\n    return scale;\n  };\n\n  scale.range = function(_) {\n    return arguments.length ? (range = slice.call(_), scale) : range.slice();\n  };\n\n  scale.unknown = function(_) {\n    return arguments.length ? (unknown = _, scale) : unknown;\n  };\n\n  scale.copy = function() {\n    return ordinal()\n        .domain(domain)\n        .range(range)\n        .unknown(unknown);\n  };\n\n  return scale;\n}\n","import {range as sequence} from \"d3-array\";\nimport ordinal from \"./ordinal\";\n\nexport default function band() {\n  var scale = ordinal().unknown(undefined),\n      domain = scale.domain,\n      ordinalRange = scale.range,\n      range = [0, 1],\n      step,\n      bandwidth,\n      round = false,\n      paddingInner = 0,\n      paddingOuter = 0,\n      align = 0.5;\n\n  delete scale.unknown;\n  function rescale() {\n    var n = domain().length,\n        reverse = range[1] < range[0],\n        start = range[reverse - 0],\n        stop = range[1 - reverse];\n    step = (stop - start) / Math.max(1, n - paddingInner + paddingOuter * 2);\n    if (round) step = Math.floor(step);\n    start += (stop - start - step * (n - paddingInner)) * align;\n    bandwidth = step * (1 - paddingInner);\n    if (round) start = Math.round(start), bandwidth = Math.round(bandwidth);\n    var values = sequence(n).map(function(i) { return start + step * i; });\n    return ordinalRange(reverse ? values.reverse() : values);\n  }\n\n  scale.domain = function(_) {\n    return arguments.length ? (domain(_), rescale()) : domain();\n  };\n\n  scale.range = function(_) {\n    return arguments.length ? (range = [+_[0], +_[1]], rescale()) : range.slice();\n  };\n\n  scale.rangeRound = function(_) {\n    return range = [+_[0], +_[1]], round = true, rescale();\n  };\n\n  scale.bandwidth = function() {\n    return bandwidth;\n  };\n\n  scale.step = function() {\n    return step;\n  };\n\n  scale.round = function(_) {\n    return arguments.length ? (round = !!_, rescale()) : round;\n  };\n\n  scale.padding = function(_) {\n    return arguments.length ? (paddingInner = paddingOuter = Math.max(0, Math.min(1, _)), rescale()) : paddingInner;\n  };\n\n  scale.paddingInner = function(_) {\n    return arguments.length ? (paddingInner = Math.max(0, Math.min(1, _)), rescale()) : paddingInner;\n  };\n\n  scale.paddingOuter = function(_) {\n    return arguments.length ? (paddingOuter = Math.max(0, Math.min(1, _)), rescale()) : paddingOuter;\n  };\n\n  scale.align = function(_) {\n    return arguments.length ? (align = Math.max(0, Math.min(1, _)), rescale()) : align;\n  };\n\n  scale.copy = function() {\n    return band()\n        .domain(domain())\n        .range(range)\n        .round(round)\n        .paddingInner(paddingInner)\n        .paddingOuter(paddingOuter)\n        .align(align);\n  };\n\n  scale.invertExtent = function(r0, r1) {\n    var lo = +r0,\n        hi = arguments.length > 1 ? +r1 : lo,\n        reverse = range[1] < range[0],\n        values = reverse ? ordinalRange().reverse() : ordinalRange(),\n        n = values.length - 1, a, b, t,\n        hiIndex;\n    values.push(values[n] + this.step());\n    // order range inputs, bail if outside of scale range\n    if (hi < lo) t = lo, lo = hi, hi = t;\n    if (hi < values[0] || lo > range[1-reverse]) return undefined;\n\n    // binary search to index into scale range\n    a = Math.max(0, getClosestIndexOf(values, lo));\n    hiIndex = getClosestIndexOf(values, hi);\n    b = lo===hi ? a : Math.max(a, hiIndex - 1);\n\n    // increment index a if lo is within padding gap\n    // if (lo - values[a] > bandwidth + 1e-10) ++a;\n\n    if (reverse) t = a, a = n - b, b = n - t; // map + swap\n    return (a > b) ? undefined : domain().slice(a, b+1);\n  };\n\n  scale.invert = function (r0, r1) {\n    var lo = +r0,\n        hi = arguments.length > 1 ? +r1 : lo,\n        reverse = range[1] < range[0],\n        values = reverse ? ordinalRange().reverse() : ordinalRange(),\n        n = values.length - 1,\n        a,\n        t;\n\n    // order range inputs, bail if outside of scale range\n    if (hi < lo) t = lo, lo = hi, hi = t;\n    if (hi < values[0] || lo > range[1-reverse]) return undefined;\n\n    // binary search to index into scale range\n    a = Math.max(0, getClosestIndexOf(values, lo, 'left'));\n\n    // increment index a if lo is within padding gap\n    // if (lo - values[a] > bandwidth + 1e-10) ++a;\n\n    return domain()[reverse ? n - a : a];\n  }\n  return rescale();\n}\n\nfunction pointish(scale) {\n  var copy = scale.copy;\n\n  scale.padding = scale.paddingOuter;\n  delete scale.paddingInner;\n  delete scale.paddingOuter;\n\n  scale.copy = function() {\n    return pointish(copy());\n  };\n\n  return scale;\n}\n\nexport function point() {\n  return pointish(band().paddingInner(1));\n}\n\nfunction getClosestIndexOf (arr, value, side) {\n  var low = 0,\n      arrLen = arr.length,\n      high = arrLen - 1,\n      highVal,\n      mid,\n      d1,\n      d2;\n\n  while (low < high) {\n      mid = Math.floor((low + high) / 2);\n      d1 = Math.abs(arr[mid] - value);\n      d2 = Math.abs(arr[mid + 1] - value);\n\n      if (d2 <= d1) {\n          low = mid + 1;\n      }\n      else {\n          high = mid;\n      }\n  }\n\n  if (!side) {\n      return high;\n  }\n\n  highVal = arr[high];\n  if (highVal === value) {\n      return high;\n  } else if (highVal > value) {\n      if (high === 0) { return high; }\n      return side === 'left'? high - 1 : high;\n  } else {\n      if (high === arr.length - 1) { return high; }\n      return side === 'left'? high : high + 1;\n  }\n}","export default function(constructor, factory, prototype) {\n  constructor.prototype = factory.prototype = prototype;\n  prototype.constructor = constructor;\n}\n\nexport function extend(parent, definition) {\n  var prototype = Object.create(parent.prototype);\n  for (var key in definition) prototype[key] = definition[key];\n  return prototype;\n}\n","import define, {extend} from \"./define\";\n\nexport function Color() {}\n\nexport var darker = 0.7;\nexport var brighter = 1 / darker;\n\nvar reI = \"\\\\s*([+-]?\\\\d+)\\\\s*\",\n    reN = \"\\\\s*([+-]?\\\\d*\\\\.?\\\\d+(?:[eE][+-]?\\\\d+)?)\\\\s*\",\n    reP = \"\\\\s*([+-]?\\\\d*\\\\.?\\\\d+(?:[eE][+-]?\\\\d+)?)%\\\\s*\",\n    reHex3 = /^#([0-9a-f]{3})$/,\n    reHex6 = /^#([0-9a-f]{6})$/,\n    reRgbInteger = new RegExp(\"^rgb\\\\(\" + [reI, reI, reI] + \"\\\\)$\"),\n    reRgbPercent = new RegExp(\"^rgb\\\\(\" + [reP, reP, reP] + \"\\\\)$\"),\n    reRgbaInteger = new RegExp(\"^rgba\\\\(\" + [reI, reI, reI, reN] + \"\\\\)$\"),\n    reRgbaPercent = new RegExp(\"^rgba\\\\(\" + [reP, reP, reP, reN] + \"\\\\)$\"),\n    reHslPercent = new RegExp(\"^hsl\\\\(\" + [reN, reP, reP] + \"\\\\)$\"),\n    reHslaPercent = new RegExp(\"^hsla\\\\(\" + [reN, reP, reP, reN] + \"\\\\)$\");\n\nvar named = {\n  aliceblue: 0xf0f8ff,\n  antiquewhite: 0xfaebd7,\n  aqua: 0x00ffff,\n  aquamarine: 0x7fffd4,\n  azure: 0xf0ffff,\n  beige: 0xf5f5dc,\n  bisque: 0xffe4c4,\n  black: 0x000000,\n  blanchedalmond: 0xffebcd,\n  blue: 0x0000ff,\n  blueviolet: 0x8a2be2,\n  brown: 0xa52a2a,\n  burlywood: 0xdeb887,\n  cadetblue: 0x5f9ea0,\n  chartreuse: 0x7fff00,\n  chocolate: 0xd2691e,\n  coral: 0xff7f50,\n  cornflowerblue: 0x6495ed,\n  cornsilk: 0xfff8dc,\n  crimson: 0xdc143c,\n  cyan: 0x00ffff,\n  darkblue: 0x00008b,\n  darkcyan: 0x008b8b,\n  darkgoldenrod: 0xb8860b,\n  darkgray: 0xa9a9a9,\n  darkgreen: 0x006400,\n  darkgrey: 0xa9a9a9,\n  darkkhaki: 0xbdb76b,\n  darkmagenta: 0x8b008b,\n  darkolivegreen: 0x556b2f,\n  darkorange: 0xff8c00,\n  darkorchid: 0x9932cc,\n  darkred: 0x8b0000,\n  darksalmon: 0xe9967a,\n  darkseagreen: 0x8fbc8f,\n  darkslateblue: 0x483d8b,\n  darkslategray: 0x2f4f4f,\n  darkslategrey: 0x2f4f4f,\n  darkturquoise: 0x00ced1,\n  darkviolet: 0x9400d3,\n  deeppink: 0xff1493,\n  deepskyblue: 0x00bfff,\n  dimgray: 0x696969,\n  dimgrey: 0x696969,\n  dodgerblue: 0x1e90ff,\n  firebrick: 0xb22222,\n  floralwhite: 0xfffaf0,\n  forestgreen: 0x228b22,\n  fuchsia: 0xff00ff,\n  gainsboro: 0xdcdcdc,\n  ghostwhite: 0xf8f8ff,\n  gold: 0xffd700,\n  goldenrod: 0xdaa520,\n  gray: 0x808080,\n  green: 0x008000,\n  greenyellow: 0xadff2f,\n  grey: 0x808080,\n  honeydew: 0xf0fff0,\n  hotpink: 0xff69b4,\n  indianred: 0xcd5c5c,\n  indigo: 0x4b0082,\n  ivory: 0xfffff0,\n  khaki: 0xf0e68c,\n  lavender: 0xe6e6fa,\n  lavenderblush: 0xfff0f5,\n  lawngreen: 0x7cfc00,\n  lemonchiffon: 0xfffacd,\n  lightblue: 0xadd8e6,\n  lightcoral: 0xf08080,\n  lightcyan: 0xe0ffff,\n  lightgoldenrodyellow: 0xfafad2,\n  lightgray: 0xd3d3d3,\n  lightgreen: 0x90ee90,\n  lightgrey: 0xd3d3d3,\n  lightpink: 0xffb6c1,\n  lightsalmon: 0xffa07a,\n  lightseagreen: 0x20b2aa,\n  lightskyblue: 0x87cefa,\n  lightslategray: 0x778899,\n  lightslategrey: 0x778899,\n  lightsteelblue: 0xb0c4de,\n  lightyellow: 0xffffe0,\n  lime: 0x00ff00,\n  limegreen: 0x32cd32,\n  linen: 0xfaf0e6,\n  magenta: 0xff00ff,\n  maroon: 0x800000,\n  mediumaquamarine: 0x66cdaa,\n  mediumblue: 0x0000cd,\n  mediumorchid: 0xba55d3,\n  mediumpurple: 0x9370db,\n  mediumseagreen: 0x3cb371,\n  mediumslateblue: 0x7b68ee,\n  mediumspringgreen: 0x00fa9a,\n  mediumturquoise: 0x48d1cc,\n  mediumvioletred: 0xc71585,\n  midnightblue: 0x191970,\n  mintcream: 0xf5fffa,\n  mistyrose: 0xffe4e1,\n  moccasin: 0xffe4b5,\n  navajowhite: 0xffdead,\n  navy: 0x000080,\n  oldlace: 0xfdf5e6,\n  olive: 0x808000,\n  olivedrab: 0x6b8e23,\n  orange: 0xffa500,\n  orangered: 0xff4500,\n  orchid: 0xda70d6,\n  palegoldenrod: 0xeee8aa,\n  palegreen: 0x98fb98,\n  paleturquoise: 0xafeeee,\n  palevioletred: 0xdb7093,\n  papayawhip: 0xffefd5,\n  peachpuff: 0xffdab9,\n  peru: 0xcd853f,\n  pink: 0xffc0cb,\n  plum: 0xdda0dd,\n  powderblue: 0xb0e0e6,\n  purple: 0x800080,\n  rebeccapurple: 0x663399,\n  red: 0xff0000,\n  rosybrown: 0xbc8f8f,\n  royalblue: 0x4169e1,\n  saddlebrown: 0x8b4513,\n  salmon: 0xfa8072,\n  sandybrown: 0xf4a460,\n  seagreen: 0x2e8b57,\n  seashell: 0xfff5ee,\n  sienna: 0xa0522d,\n  silver: 0xc0c0c0,\n  skyblue: 0x87ceeb,\n  slateblue: 0x6a5acd,\n  slategray: 0x708090,\n  slategrey: 0x708090,\n  snow: 0xfffafa,\n  springgreen: 0x00ff7f,\n  steelblue: 0x4682b4,\n  tan: 0xd2b48c,\n  teal: 0x008080,\n  thistle: 0xd8bfd8,\n  tomato: 0xff6347,\n  turquoise: 0x40e0d0,\n  violet: 0xee82ee,\n  wheat: 0xf5deb3,\n  white: 0xffffff,\n  whitesmoke: 0xf5f5f5,\n  yellow: 0xffff00,\n  yellowgreen: 0x9acd32\n};\n\ndefine(Color, color, {\n  displayable: function() {\n    return this.rgb().displayable();\n  },\n  hex: function() {\n    return this.rgb().hex();\n  },\n  toString: function() {\n    return this.rgb() + \"\";\n  }\n});\n\nexport default function color(format) {\n  var m;\n  format = (format + \"\").trim().toLowerCase();\n  return (m = reHex3.exec(format)) ? (m = parseInt(m[1], 16), new Rgb((m >> 8 & 0xf) | (m >> 4 & 0x0f0), (m >> 4 & 0xf) | (m & 0xf0), ((m & 0xf) << 4) | (m & 0xf), 1)) // #f00\n      : (m = reHex6.exec(format)) ? rgbn(parseInt(m[1], 16)) // #ff0000\n      : (m = reRgbInteger.exec(format)) ? new Rgb(m[1], m[2], m[3], 1) // rgb(255, 0, 0)\n      : (m = reRgbPercent.exec(format)) ? new Rgb(m[1] * 255 / 100, m[2] * 255 / 100, m[3] * 255 / 100, 1) // rgb(100%, 0%, 0%)\n      : (m = reRgbaInteger.exec(format)) ? rgba(m[1], m[2], m[3], m[4]) // rgba(255, 0, 0, 1)\n      : (m = reRgbaPercent.exec(format)) ? rgba(m[1] * 255 / 100, m[2] * 255 / 100, m[3] * 255 / 100, m[4]) // rgb(100%, 0%, 0%, 1)\n      : (m = reHslPercent.exec(format)) ? hsla(m[1], m[2] / 100, m[3] / 100, 1) // hsl(120, 50%, 50%)\n      : (m = reHslaPercent.exec(format)) ? hsla(m[1], m[2] / 100, m[3] / 100, m[4]) // hsla(120, 50%, 50%, 1)\n      : named.hasOwnProperty(format) ? rgbn(named[format])\n      : format === \"transparent\" ? new Rgb(NaN, NaN, NaN, 0)\n      : null;\n}\n\nfunction rgbn(n) {\n  return new Rgb(n >> 16 & 0xff, n >> 8 & 0xff, n & 0xff, 1);\n}\n\nfunction rgba(r, g, b, a) {\n  if (a <= 0) r = g = b = NaN;\n  return new Rgb(r, g, b, a);\n}\n\nexport function rgbConvert(o) {\n  if (!(o instanceof Color)) o = color(o);\n  if (!o) return new Rgb;\n  o = o.rgb();\n  return new Rgb(o.r, o.g, o.b, o.opacity);\n}\n\nexport function rgb(r, g, b, opacity) {\n  return arguments.length === 1 ? rgbConvert(r) : new Rgb(r, g, b, opacity == null ? 1 : opacity);\n}\n\nexport function Rgb(r, g, b, opacity) {\n  this.r = +r;\n  this.g = +g;\n  this.b = +b;\n  this.opacity = +opacity;\n}\n\ndefine(Rgb, rgb, extend(Color, {\n  brighter: function(k) {\n    k = k == null ? brighter : Math.pow(brighter, k);\n    return new Rgb(this.r * k, this.g * k, this.b * k, this.opacity);\n  },\n  darker: function(k) {\n    k = k == null ? darker : Math.pow(darker, k);\n    return new Rgb(this.r * k, this.g * k, this.b * k, this.opacity);\n  },\n  rgb: function() {\n    return this;\n  },\n  displayable: function() {\n    return (0 <= this.r && this.r <= 255)\n        && (0 <= this.g && this.g <= 255)\n        && (0 <= this.b && this.b <= 255)\n        && (0 <= this.opacity && this.opacity <= 1);\n  },\n  hex: function() {\n    return \"#\" + hex(this.r) + hex(this.g) + hex(this.b);\n  },\n  toString: function() {\n    var a = this.opacity; a = isNaN(a) ? 1 : Math.max(0, Math.min(1, a));\n    return (a === 1 ? \"rgb(\" : \"rgba(\")\n        + Math.max(0, Math.min(255, Math.round(this.r) || 0)) + \", \"\n        + Math.max(0, Math.min(255, Math.round(this.g) || 0)) + \", \"\n        + Math.max(0, Math.min(255, Math.round(this.b) || 0))\n        + (a === 1 ? \")\" : \", \" + a + \")\");\n  }\n}));\n\nfunction hex(value) {\n  value = Math.max(0, Math.min(255, Math.round(value) || 0));\n  return (value < 16 ? \"0\" : \"\") + value.toString(16);\n}\n\nfunction hsla(h, s, l, a) {\n  if (a <= 0) h = s = l = NaN;\n  else if (l <= 0 || l >= 1) h = s = NaN;\n  else if (s <= 0) h = NaN;\n  return new Hsl(h, s, l, a);\n}\n\nexport function hslConvert(o) {\n  if (o instanceof Hsl) return new Hsl(o.h, o.s, o.l, o.opacity);\n  if (!(o instanceof Color)) o = color(o);\n  if (!o) return new Hsl;\n  if (o instanceof Hsl) return o;\n  o = o.rgb();\n  var r = o.r / 255,\n      g = o.g / 255,\n      b = o.b / 255,\n      min = Math.min(r, g, b),\n      max = Math.max(r, g, b),\n      h = NaN,\n      s = max - min,\n      l = (max + min) / 2;\n  if (s) {\n    if (r === max) h = (g - b) / s + (g < b) * 6;\n    else if (g === max) h = (b - r) / s + 2;\n    else h = (r - g) / s + 4;\n    s /= l < 0.5 ? max + min : 2 - max - min;\n    h *= 60;\n  } else {\n    s = l > 0 && l < 1 ? 0 : h;\n  }\n  return new Hsl(h, s, l, o.opacity);\n}\n\nexport function hsl(h, s, l, opacity) {\n  return arguments.length === 1 ? hslConvert(h) : new Hsl(h, s, l, opacity == null ? 1 : opacity);\n}\n\nfunction Hsl(h, s, l, opacity) {\n  this.h = +h;\n  this.s = +s;\n  this.l = +l;\n  this.opacity = +opacity;\n}\n\ndefine(Hsl, hsl, extend(Color, {\n  brighter: function(k) {\n    k = k == null ? brighter : Math.pow(brighter, k);\n    return new Hsl(this.h, this.s, this.l * k, this.opacity);\n  },\n  darker: function(k) {\n    k = k == null ? darker : Math.pow(darker, k);\n    return new Hsl(this.h, this.s, this.l * k, this.opacity);\n  },\n  rgb: function() {\n    var h = this.h % 360 + (this.h < 0) * 360,\n        s = isNaN(h) || isNaN(this.s) ? 0 : this.s,\n        l = this.l,\n        m2 = l + (l < 0.5 ? l : 1 - l) * s,\n        m1 = 2 * l - m2;\n    return new Rgb(\n      hsl2rgb(h >= 240 ? h - 240 : h + 120, m1, m2),\n      hsl2rgb(h, m1, m2),\n      hsl2rgb(h < 120 ? h + 240 : h - 120, m1, m2),\n      this.opacity\n    );\n  },\n  displayable: function() {\n    return (0 <= this.s && this.s <= 1 || isNaN(this.s))\n        && (0 <= this.l && this.l <= 1)\n        && (0 <= this.opacity && this.opacity <= 1);\n  }\n}));\n\n/* From FvD 13.37, CSS Color Module Level 3 */\nfunction hsl2rgb(h, m1, m2) {\n  return (h < 60 ? m1 + (m2 - m1) * h / 60\n      : h < 180 ? m2\n      : h < 240 ? m1 + (m2 - m1) * (240 - h) / 60\n      : m1) * 255;\n}\n","export var deg2rad = Math.PI / 180;\nexport var rad2deg = 180 / Math.PI;\n","import define, {extend} from \"./define\";\nimport {Color, rgbConvert, Rgb} from \"./color\";\nimport {deg2rad, rad2deg} from \"./math\";\n\n// https://beta.observablehq.com/@mbostock/lab-and-rgb\nvar K = 18,\n    Xn = 0.96422,\n    Yn = 1,\n    Zn = 0.82521,\n    t0 = 4 / 29,\n    t1 = 6 / 29,\n    t2 = 3 * t1 * t1,\n    t3 = t1 * t1 * t1;\n\nfunction labConvert(o) {\n  if (o instanceof Lab) return new Lab(o.l, o.a, o.b, o.opacity);\n  if (o instanceof Hcl) {\n    if (isNaN(o.h)) return new Lab(o.l, 0, 0, o.opacity);\n    var h = o.h * deg2rad;\n    return new Lab(o.l, Math.cos(h) * o.c, Math.sin(h) * o.c, o.opacity);\n  }\n  if (!(o instanceof Rgb)) o = rgbConvert(o);\n  var r = rgb2lrgb(o.r),\n      g = rgb2lrgb(o.g),\n      b = rgb2lrgb(o.b),\n      y = xyz2lab((0.2225045 * r + 0.7168786 * g + 0.0606169 * b) / Yn), x, z;\n  if (r === g && g === b) x = z = y; else {\n    x = xyz2lab((0.4360747 * r + 0.3850649 * g + 0.1430804 * b) / Xn);\n    z = xyz2lab((0.0139322 * r + 0.0971045 * g + 0.7141733 * b) / Zn);\n  }\n  return new Lab(116 * y - 16, 500 * (x - y), 200 * (y - z), o.opacity);\n}\n\nexport function gray(l, opacity) {\n  return new Lab(l, 0, 0, opacity == null ? 1 : opacity);\n}\n\nexport default function lab(l, a, b, opacity) {\n  return arguments.length === 1 ? labConvert(l) : new Lab(l, a, b, opacity == null ? 1 : opacity);\n}\n\nexport function Lab(l, a, b, opacity) {\n  this.l = +l;\n  this.a = +a;\n  this.b = +b;\n  this.opacity = +opacity;\n}\n\ndefine(Lab, lab, extend(Color, {\n  brighter: function(k) {\n    return new Lab(this.l + K * (k == null ? 1 : k), this.a, this.b, this.opacity);\n  },\n  darker: function(k) {\n    return new Lab(this.l - K * (k == null ? 1 : k), this.a, this.b, this.opacity);\n  },\n  rgb: function() {\n    var y = (this.l + 16) / 116,\n        x = isNaN(this.a) ? y : y + this.a / 500,\n        z = isNaN(this.b) ? y : y - this.b / 200;\n    x = Xn * lab2xyz(x);\n    y = Yn * lab2xyz(y);\n    z = Zn * lab2xyz(z);\n    return new Rgb(\n      lrgb2rgb( 3.1338561 * x - 1.6168667 * y - 0.4906146 * z),\n      lrgb2rgb(-0.9787684 * x + 1.9161415 * y + 0.0334540 * z),\n      lrgb2rgb( 0.0719453 * x - 0.2289914 * y + 1.4052427 * z),\n      this.opacity\n    );\n  }\n}));\n\nfunction xyz2lab(t) {\n  return t > t3 ? Math.pow(t, 1 / 3) : t / t2 + t0;\n}\n\nfunction lab2xyz(t) {\n  return t > t1 ? t * t * t : t2 * (t - t0);\n}\n\nfunction lrgb2rgb(x) {\n  return 255 * (x <= 0.0031308 ? 12.92 * x : 1.055 * Math.pow(x, 1 / 2.4) - 0.055);\n}\n\nfunction rgb2lrgb(x) {\n  return (x /= 255) <= 0.04045 ? x / 12.92 : Math.pow((x + 0.055) / 1.055, 2.4);\n}\n\nfunction hclConvert(o) {\n  if (o instanceof Hcl) return new Hcl(o.h, o.c, o.l, o.opacity);\n  if (!(o instanceof Lab)) o = labConvert(o);\n  if (o.a === 0 && o.b === 0) return new Hcl(NaN, 0, o.l, o.opacity);\n  var h = Math.atan2(o.b, o.a) * rad2deg;\n  return new Hcl(h < 0 ? h + 360 : h, Math.sqrt(o.a * o.a + o.b * o.b), o.l, o.opacity);\n}\n\nexport function lch(l, c, h, opacity) {\n  return arguments.length === 1 ? hclConvert(l) : new Hcl(h, c, l, opacity == null ? 1 : opacity);\n}\n\nexport function hcl(h, c, l, opacity) {\n  return arguments.length === 1 ? hclConvert(h) : new Hcl(h, c, l, opacity == null ? 1 : opacity);\n}\n\nexport function Hcl(h, c, l, opacity) {\n  this.h = +h;\n  this.c = +c;\n  this.l = +l;\n  this.opacity = +opacity;\n}\n\ndefine(Hcl, hcl, extend(Color, {\n  brighter: function(k) {\n    return new Hcl(this.h, this.c, this.l + K * (k == null ? 1 : k), this.opacity);\n  },\n  darker: function(k) {\n    return new Hcl(this.h, this.c, this.l - K * (k == null ? 1 : k), this.opacity);\n  },\n  rgb: function() {\n    return labConvert(this).rgb();\n  }\n}));\n","import define, {extend} from \"./define\";\nimport {Color, rgbConvert, Rgb, darker, brighter} from \"./color\";\nimport {deg2rad, rad2deg} from \"./math\";\n\nvar A = -0.14861,\n    B = +1.78277,\n    C = -0.29227,\n    D = -0.90649,\n    E = +1.97294,\n    ED = E * D,\n    EB = E * B,\n    BC_DA = B * C - D * A;\n\nfunction cubehelixConvert(o) {\n  if (o instanceof Cubehelix) return new Cubehelix(o.h, o.s, o.l, o.opacity);\n  if (!(o instanceof Rgb)) o = rgbConvert(o);\n  var r = o.r / 255,\n      g = o.g / 255,\n      b = o.b / 255,\n      l = (BC_DA * b + ED * r - EB * g) / (BC_DA + ED - EB),\n      bl = b - l,\n      k = (E * (g - l) - C * bl) / D,\n      s = Math.sqrt(k * k + bl * bl) / (E * l * (1 - l)), // NaN if l=0 or l=1\n      h = s ? Math.atan2(k, bl) * rad2deg - 120 : NaN;\n  return new Cubehelix(h < 0 ? h + 360 : h, s, l, o.opacity);\n}\n\nexport default function cubehelix(h, s, l, opacity) {\n  return arguments.length === 1 ? cubehelixConvert(h) : new Cubehelix(h, s, l, opacity == null ? 1 : opacity);\n}\n\nexport function Cubehelix(h, s, l, opacity) {\n  this.h = +h;\n  this.s = +s;\n  this.l = +l;\n  this.opacity = +opacity;\n}\n\ndefine(Cubehelix, cubehelix, extend(Color, {\n  brighter: function(k) {\n    k = k == null ? brighter : Math.pow(brighter, k);\n    return new Cubehelix(this.h, this.s, this.l * k, this.opacity);\n  },\n  darker: function(k) {\n    k = k == null ? darker : Math.pow(darker, k);\n    return new Cubehelix(this.h, this.s, this.l * k, this.opacity);\n  },\n  rgb: function() {\n    var h = isNaN(this.h) ? 0 : (this.h + 120) * deg2rad,\n        l = +this.l,\n        a = isNaN(this.s) ? 0 : this.s * l * (1 - l),\n        cosh = Math.cos(h),\n        sinh = Math.sin(h);\n    return new Rgb(\n      255 * (l + a * (A * cosh + B * sinh)),\n      255 * (l + a * (C * cosh + D * sinh)),\n      255 * (l + a * (E * cosh)),\n      this.opacity\n    );\n  }\n}));\n","export function basis(t1, v0, v1, v2, v3) {\n  var t2 = t1 * t1, t3 = t2 * t1;\n  return ((1 - 3 * t1 + 3 * t2 - t3) * v0\n      + (4 - 6 * t2 + 3 * t3) * v1\n      + (1 + 3 * t1 + 3 * t2 - 3 * t3) * v2\n      + t3 * v3) / 6;\n}\n\nexport default function(values) {\n  var n = values.length - 1;\n  return function(t) {\n    var i = t <= 0 ? (t = 0) : t >= 1 ? (t = 1, n - 1) : Math.floor(t * n),\n        v1 = values[i],\n        v2 = values[i + 1],\n        v0 = i > 0 ? values[i - 1] : 2 * v1 - v2,\n        v3 = i < n - 1 ? values[i + 2] : 2 * v2 - v1;\n    return basis((t - i / n) * n, v0, v1, v2, v3);\n  };\n}\n","export default function(x) {\n  return function() {\n    return x;\n  };\n}\n","import constant from \"./constant\";\n\nfunction linear(a, d) {\n  return function(t) {\n    return a + t * d;\n  };\n}\n\nfunction exponential(a, b, y) {\n  return a = Math.pow(a, y), b = Math.pow(b, y) - a, y = 1 / y, function(t) {\n    return Math.pow(a + t * b, y);\n  };\n}\n\nexport function hue(a, b) {\n  var d = b - a;\n  return d ? linear(a, d > 180 || d < -180 ? d - 360 * Math.round(d / 360) : d) : constant(isNaN(a) ? b : a);\n}\n\nexport function gamma(y) {\n  return (y = +y) === 1 ? nogamma : function(a, b) {\n    return b - a ? exponential(a, b, y) : constant(isNaN(a) ? b : a);\n  };\n}\n\nexport default function nogamma(a, b) {\n  var d = b - a;\n  return d ? linear(a, d) : constant(isNaN(a) ? b : a);\n}\n","import {rgb as colorRgb} from \"d3-color\";\nimport basis from \"./basis\";\nimport basisClosed from \"./basisClosed\";\nimport nogamma, {gamma} from \"./color\";\n\nexport default (function rgbGamma(y) {\n  var color = gamma(y);\n\n  function rgb(start, end) {\n    var r = color((start = colorRgb(start)).r, (end = colorRgb(end)).r),\n        g = color(start.g, end.g),\n        b = color(start.b, end.b),\n        opacity = nogamma(start.opacity, end.opacity);\n    return function(t) {\n      start.r = r(t);\n      start.g = g(t);\n      start.b = b(t);\n      start.opacity = opacity(t);\n      return start + \"\";\n    };\n  }\n\n  rgb.gamma = rgbGamma;\n\n  return rgb;\n})(1);\n\nfunction rgbSpline(spline) {\n  return function(colors) {\n    var n = colors.length,\n        r = new Array(n),\n        g = new Array(n),\n        b = new Array(n),\n        i, color;\n    for (i = 0; i < n; ++i) {\n      color = colorRgb(colors[i]);\n      r[i] = color.r || 0;\n      g[i] = color.g || 0;\n      b[i] = color.b || 0;\n    }\n    r = spline(r);\n    g = spline(g);\n    b = spline(b);\n    color.opacity = 1;\n    return function(t) {\n      color.r = r(t);\n      color.g = g(t);\n      color.b = b(t);\n      return color + \"\";\n    };\n  };\n}\n\nexport var rgbBasis = rgbSpline(basis);\nexport var rgbBasisClosed = rgbSpline(basisClosed);\n","export default function(a, b) {\n  return a = +a, b -= a, function(t) {\n    return a + b * t;\n  };\n}\n","import {basis} from \"./basis\";\n\nexport default function(values) {\n  var n = values.length;\n  return function(t) {\n    var i = Math.floor(((t %= 1) < 0 ? ++t : t) * n),\n        v0 = values[(i + n - 1) % n],\n        v1 = values[i % n],\n        v2 = values[(i + 1) % n],\n        v3 = values[(i + 2) % n];\n    return basis((t - i / n) * n, v0, v1, v2, v3);\n  };\n}\n","import value from \"./value\";\n\nexport default function(a, b) {\n  var i = {},\n      c = {},\n      k;\n\n  if (a === null || typeof a !== \"object\") a = {};\n  if (b === null || typeof b !== \"object\") b = {};\n\n  for (k in b) {\n    if (k in a) {\n      i[k] = value(a[k], b[k]);\n    } else {\n      c[k] = b[k];\n    }\n  }\n\n  return function(t) {\n    for (k in i) c[k] = i[k](t);\n    return c;\n  };\n}\n","import number from \"./number\";\n\nvar reA = /[-+]?(?:\\d+\\.?\\d*|\\.?\\d+)(?:[eE][-+]?\\d+)?/g,\n    reB = new RegExp(reA.source, \"g\");\n\nfunction zero(b) {\n  return function() {\n    return b;\n  };\n}\n\nfunction one(b) {\n  return function(t) {\n    return b(t) + \"\";\n  };\n}\n\nexport default function(a, b) {\n  var bi = reA.lastIndex = reB.lastIndex = 0, // scan index for next number in b\n      am, // current match in a\n      bm, // current match in b\n      bs, // string preceding current number in b, if any\n      i = -1, // index in s\n      s = [], // string constants and placeholders\n      q = []; // number interpolators\n\n  // Coerce inputs to strings.\n  a = a + \"\", b = b + \"\";\n\n  // Interpolate pairs of numbers in a & b.\n  while ((am = reA.exec(a))\n      && (bm = reB.exec(b))) {\n    if ((bs = bm.index) > bi) { // a string precedes the next number in b\n      bs = b.slice(bi, bs);\n      if (s[i]) s[i] += bs; // coalesce with previous string\n      else s[++i] = bs;\n    }\n    if ((am = am[0]) === (bm = bm[0])) { // numbers in a & b match\n      if (s[i]) s[i] += bm; // coalesce with previous string\n      else s[++i] = bm;\n    } else { // interpolate non-matching numbers\n      s[++i] = null;\n      q.push({i: i, x: number(am, bm)});\n    }\n    bi = reB.lastIndex;\n  }\n\n  // Add remains of b.\n  if (bi < b.length) {\n    bs = b.slice(bi);\n    if (s[i]) s[i] += bs; // coalesce with previous string\n    else s[++i] = bs;\n  }\n\n  // Special optimization for only a single match.\n  // Otherwise, interpolate each of the numbers and rejoin the string.\n  return s.length < 2 ? (q[0]\n      ? one(q[0].x)\n      : zero(b))\n      : (b = q.length, function(t) {\n          for (var i = 0, o; i < b; ++i) s[(o = q[i]).i] = o.x(t);\n          return s.join(\"\");\n        });\n}\n","import {color} from \"d3-color\";\nimport rgb from \"./rgb\";\nimport array from \"./array\";\nimport date from \"./date\";\nimport number from \"./number\";\nimport object from \"./object\";\nimport string from \"./string\";\nimport constant from \"./constant\";\n\nexport default function(a, b) {\n  var t = typeof b, c;\n  return b == null || t === \"boolean\" ? constant(b)\n      : (t === \"number\" ? number\n      : t === \"string\" ? ((c = color(b)) ? (b = c, rgb) : string)\n      : b instanceof color ? rgb\n      : b instanceof Date ? date\n      : Array.isArray(b) ? array\n      : typeof b.valueOf !== \"function\" && typeof b.toString !== \"function\" || isNaN(b) ? object\n      : number)(a, b);\n}\n","import decompose, {identity} from \"./decompose\";\n\nvar cssNode,\n    cssRoot,\n    cssView,\n    svgNode;\n\nexport function parseCss(value) {\n  if (value === \"none\") return identity;\n  if (!cssNode) cssNode = document.createElement(\"DIV\"), cssRoot = document.documentElement, cssView = document.defaultView;\n  cssNode.style.transform = value;\n  value = cssView.getComputedStyle(cssRoot.appendChild(cssNode), null).getPropertyValue(\"transform\");\n  cssRoot.removeChild(cssNode);\n  value = value.slice(7, -1).split(\",\");\n  return decompose(+value[0], +value[1], +value[2], +value[3], +value[4], +value[5]);\n}\n\nexport function parseSvg(value) {\n  if (value == null) return identity;\n  if (!svgNode) svgNode = document.createElementNS(\"http://www.w3.org/2000/svg\", \"g\");\n  svgNode.setAttribute(\"transform\", value);\n  if (!(value = svgNode.transform.baseVal.consolidate())) return identity;\n  value = value.matrix;\n  return decompose(value.a, value.b, value.c, value.d, value.e, value.f);\n}\n","export default function(a, b) {\n  var d = new Date;\n  return a = +a, b -= a, function(t) {\n    return d.setTime(a + b * t), d;\n  };\n}\n","import value from \"./value\";\n\nexport default function(a, b) {\n  var nb = b ? b.length : 0,\n      na = a ? Math.min(nb, a.length) : 0,\n      x = new Array(na),\n      c = new Array(nb),\n      i;\n\n  for (i = 0; i < na; ++i) x[i] = value(a[i], b[i]);\n  for (; i < nb; ++i) c[i] = b[i];\n\n  return function(t) {\n    for (i = 0; i < na; ++i) c[i] = x[i](t);\n    return c;\n  };\n}\n","export default function(a, b) {\n  return a = +a, b -= a, function(t) {\n    return Math.round(a + b * t);\n  };\n}\n","var degrees = 180 / Math.PI;\n\nexport var identity = {\n  translateX: 0,\n  translateY: 0,\n  rotate: 0,\n  skewX: 0,\n  scaleX: 1,\n  scaleY: 1\n};\n\nexport default function(a, b, c, d, e, f) {\n  var scaleX, scaleY, skewX;\n  if (scaleX = Math.sqrt(a * a + b * b)) a /= scaleX, b /= scaleX;\n  if (skewX = a * c + b * d) c -= a * skewX, d -= b * skewX;\n  if (scaleY = Math.sqrt(c * c + d * d)) c /= scaleY, d /= scaleY, skewX /= scaleY;\n  if (a * d < b * c) a = -a, b = -b, skewX = -skewX, scaleX = -scaleX;\n  return {\n    translateX: e,\n    translateY: f,\n    rotate: Math.atan2(b, a) * degrees,\n    skewX: Math.atan(skewX) * degrees,\n    scaleX: scaleX,\n    scaleY: scaleY\n  };\n}\n","import number from \"../number\";\nimport {parseCss, parseSvg} from \"./parse\";\n\nfunction interpolateTransform(parse, pxComma, pxParen, degParen) {\n\n  function pop(s) {\n    return s.length ? s.pop() + \" \" : \"\";\n  }\n\n  function translate(xa, ya, xb, yb, s, q) {\n    if (xa !== xb || ya !== yb) {\n      var i = s.push(\"translate(\", null, pxComma, null, pxParen);\n      q.push({i: i - 4, x: number(xa, xb)}, {i: i - 2, x: number(ya, yb)});\n    } else if (xb || yb) {\n      s.push(\"translate(\" + xb + pxComma + yb + pxParen);\n    }\n  }\n\n  function rotate(a, b, s, q) {\n    if (a !== b) {\n      if (a - b > 180) b += 360; else if (b - a > 180) a += 360; // shortest path\n      q.push({i: s.push(pop(s) + \"rotate(\", null, degParen) - 2, x: number(a, b)});\n    } else if (b) {\n      s.push(pop(s) + \"rotate(\" + b + degParen);\n    }\n  }\n\n  function skewX(a, b, s, q) {\n    if (a !== b) {\n      q.push({i: s.push(pop(s) + \"skewX(\", null, degParen) - 2, x: number(a, b)});\n    } else if (b) {\n      s.push(pop(s) + \"skewX(\" + b + degParen);\n    }\n  }\n\n  function scale(xa, ya, xb, yb, s, q) {\n    if (xa !== xb || ya !== yb) {\n      var i = s.push(pop(s) + \"scale(\", null, \",\", null, \")\");\n      q.push({i: i - 4, x: number(xa, xb)}, {i: i - 2, x: number(ya, yb)});\n    } else if (xb !== 1 || yb !== 1) {\n      s.push(pop(s) + \"scale(\" + xb + \",\" + yb + \")\");\n    }\n  }\n\n  return function(a, b) {\n    var s = [], // string constants and placeholders\n        q = []; // number interpolators\n    a = parse(a), b = parse(b);\n    translate(a.translateX, a.translateY, b.translateX, b.translateY, s, q);\n    rotate(a.rotate, b.rotate, s, q);\n    skewX(a.skewX, b.skewX, s, q);\n    scale(a.scaleX, a.scaleY, b.scaleX, b.scaleY, s, q);\n    a = b = null; // gc\n    return function(t) {\n      var i = -1, n = q.length, o;\n      while (++i < n) s[(o = q[i]).i] = o.x(t);\n      return s.join(\"\");\n    };\n  };\n}\n\nexport var interpolateTransformCss = interpolateTransform(parseCss, \"px, \", \"px)\", \"deg)\");\nexport var interpolateTransformSvg = interpolateTransform(parseSvg, \", \", \")\", \")\");\n","var rho = Math.SQRT2,\n    rho2 = 2,\n    rho4 = 4,\n    epsilon2 = 1e-12;\n\nfunction cosh(x) {\n  return ((x = Math.exp(x)) + 1 / x) / 2;\n}\n\nfunction sinh(x) {\n  return ((x = Math.exp(x)) - 1 / x) / 2;\n}\n\nfunction tanh(x) {\n  return ((x = Math.exp(2 * x)) - 1) / (x + 1);\n}\n\n// p0 = [ux0, uy0, w0]\n// p1 = [ux1, uy1, w1]\nexport default function(p0, p1) {\n  var ux0 = p0[0], uy0 = p0[1], w0 = p0[2],\n      ux1 = p1[0], uy1 = p1[1], w1 = p1[2],\n      dx = ux1 - ux0,\n      dy = uy1 - uy0,\n      d2 = dx * dx + dy * dy,\n      i,\n      S;\n\n  // Special case for u0 ≅ u1.\n  if (d2 < epsilon2) {\n    S = Math.log(w1 / w0) / rho;\n    i = function(t) {\n      return [\n        ux0 + t * dx,\n        uy0 + t * dy,\n        w0 * Math.exp(rho * t * S)\n      ];\n    }\n  }\n\n  // General case.\n  else {\n    var d1 = Math.sqrt(d2),\n        b0 = (w1 * w1 - w0 * w0 + rho4 * d2) / (2 * w0 * rho2 * d1),\n        b1 = (w1 * w1 - w0 * w0 - rho4 * d2) / (2 * w1 * rho2 * d1),\n        r0 = Math.log(Math.sqrt(b0 * b0 + 1) - b0),\n        r1 = Math.log(Math.sqrt(b1 * b1 + 1) - b1);\n    S = (r1 - r0) / rho;\n    i = function(t) {\n      var s = t * S,\n          coshr0 = cosh(r0),\n          u = w0 / (rho2 * d1) * (coshr0 * tanh(rho * s + r0) - sinh(r0));\n      return [\n        ux0 + u * dx,\n        uy0 + u * dy,\n        w0 * coshr0 / cosh(rho * s + r0)\n      ];\n    }\n  }\n\n  i.duration = S * 1000;\n\n  return i;\n}\n","import {hsl as colorHsl} from \"d3-color\";\nimport color, {hue} from \"./color\";\n\nfunction hsl(hue) {\n  return function(start, end) {\n    var h = hue((start = colorHsl(start)).h, (end = colorHsl(end)).h),\n        s = color(start.s, end.s),\n        l = color(start.l, end.l),\n        opacity = color(start.opacity, end.opacity);\n    return function(t) {\n      start.h = h(t);\n      start.s = s(t);\n      start.l = l(t);\n      start.opacity = opacity(t);\n      return start + \"\";\n    };\n  }\n}\n\nexport default hsl(hue);\nexport var hslLong = hsl(color);\n","import {hcl as colorHcl} from \"d3-color\";\nimport color, {hue} from \"./color\";\n\nfunction hcl(hue) {\n  return function(start, end) {\n    var h = hue((start = colorHcl(start)).h, (end = colorHcl(end)).h),\n        c = color(start.c, end.c),\n        l = color(start.l, end.l),\n        opacity = color(start.opacity, end.opacity);\n    return function(t) {\n      start.h = h(t);\n      start.c = c(t);\n      start.l = l(t);\n      start.opacity = opacity(t);\n      return start + \"\";\n    };\n  }\n}\n\nexport default hcl(hue);\nexport var hclLong = hcl(color);\n","import {cubehelix as colorCubehelix} from \"d3-color\";\nimport color, {hue} from \"./color\";\n\nfunction cubehelix(hue) {\n  return (function cubehelixGamma(y) {\n    y = +y;\n\n    function cubehelix(start, end) {\n      var h = hue((start = colorCubehelix(start)).h, (end = colorCubehelix(end)).h),\n          s = color(start.s, end.s),\n          l = color(start.l, end.l),\n          opacity = color(start.opacity, end.opacity);\n      return function(t) {\n        start.h = h(t);\n        start.s = s(t);\n        start.l = l(Math.pow(t, y));\n        start.opacity = opacity(t);\n        return start + \"\";\n      };\n    }\n\n    cubehelix.gamma = cubehelixGamma;\n\n    return cubehelix;\n  })(1);\n}\n\nexport default cubehelix(hue);\nexport var cubehelixLong = cubehelix(color);\n","export default function piecewise(interpolate, values) {\n  var i = 0, n = values.length - 1, v = values[0], I = new Array(n < 0 ? 0 : n);\n  while (i < n) I[i] = interpolate(v, v = values[++i]);\n  return function(t) {\n    var i = Math.max(0, Math.min(n - 1, Math.floor(t *= n)));\n    return I[i](t - i);\n  };\n}\n","export default function(interpolator, n) {\n  var samples = new Array(n);\n  for (var i = 0; i < n; ++i) samples[i] = interpolator(i / (n - 1));\n  return samples;\n}\n","export default function(x) {\n  return function() {\n    return x;\n  };\n}\n","export default function(x) {\n  return +x;\n}\n","import {bisect} from \"d3-array\";\nimport {interpolate as interpolateValue, interpolateRound} from \"d3-interpolate\";\nimport {map, slice} from \"./array\";\nimport constant from \"./constant\";\nimport number from \"./number\";\n\nvar unit = [0, 1];\n\nexport function deinterpolateLinear(a, b) {\n  return (b -= (a = +a))\n      ? function(x) { return (x - a) / b; }\n      : constant(b);\n}\n\nfunction deinterpolateClamp(deinterpolate) {\n  return function(a, b) {\n    var d = deinterpolate(a = +a, b = +b);\n    return function(x) { return x <= a ? 0 : x >= b ? 1 : d(x); };\n  };\n}\n\nfunction reinterpolateClamp(reinterpolate) {\n  return function(a, b) {\n    var r = reinterpolate(a = +a, b = +b);\n    return function(t) { return t <= 0 ? a : t >= 1 ? b : r(t); };\n  };\n}\n\nfunction bimap(domain, range, deinterpolate, reinterpolate) {\n  var d0 = domain[0], d1 = domain[1], r0 = range[0], r1 = range[1];\n  if (d1 < d0) d0 = deinterpolate(d1, d0), r0 = reinterpolate(r1, r0);\n  else d0 = deinterpolate(d0, d1), r0 = reinterpolate(r0, r1);\n  return function(x) { return r0(d0(x)); };\n}\n\nfunction polymap(domain, range, deinterpolate, reinterpolate) {\n  var j = Math.min(domain.length, range.length) - 1,\n      d = new Array(j),\n      r = new Array(j),\n      i = -1;\n\n  // Reverse descending domains.\n  if (domain[j] < domain[0]) {\n    domain = domain.slice().reverse();\n    range = range.slice().reverse();\n  }\n\n  while (++i < j) {\n    d[i] = deinterpolate(domain[i], domain[i + 1]);\n    r[i] = reinterpolate(range[i], range[i + 1]);\n  }\n\n  return function(x) {\n    var i = bisect(domain, x, 1, j) - 1;\n    return r[i](d[i](x));\n  };\n}\n\nexport function copy(source, target) {\n  return target\n      .domain(source.domain())\n      .range(source.range())\n      .interpolate(source.interpolate())\n      .clamp(source.clamp());\n}\n\n// deinterpolate(a, b)(x) takes a domain value x in [a,b] and returns the corresponding parameter t in [0,1].\n// reinterpolate(a, b)(t) takes a parameter t in [0,1] and returns the corresponding domain value x in [a,b].\nexport default function continuous(deinterpolate, reinterpolate) {\n  var domain = unit,\n      range = unit,\n      interpolate = interpolateValue,\n      clamp = false,\n      piecewise,\n      output,\n      input;\n\n  function rescale() {\n    piecewise = Math.min(domain.length, range.length) > 2 ? polymap : bimap;\n    output = input = null;\n    return scale;\n  }\n\n  function scale(x) {\n    return (output || (output = piecewise(domain, range, clamp ? deinterpolateClamp(deinterpolate) : deinterpolate, interpolate)))(+x);\n  }\n\n  scale.invert = function(y) {\n    return (input || (input = piecewise(range, domain, deinterpolateLinear, clamp ? reinterpolateClamp(reinterpolate) : reinterpolate)))(+y);\n  };\n\n  scale.domain = function(_) {\n    return arguments.length ? (domain = map.call(_, number), rescale()) : domain.slice();\n  };\n\n  scale.range = function(_) {\n    return arguments.length ? (range = slice.call(_), rescale()) : range.slice();\n  };\n\n  scale.rangeRound = function(_) {\n    return range = slice.call(_), interpolate = interpolateRound, rescale();\n  };\n\n  scale.clamp = function(_) {\n    return arguments.length ? (clamp = !!_, rescale()) : clamp;\n  };\n\n  scale.interpolate = function(_) {\n    return arguments.length ? (interpolate = _, rescale()) : interpolate;\n  };\n\n  return rescale();\n}\n","// Computes the decimal coefficient and exponent of the specified number x with\n// significant digits p, where x is positive and p is in [1, 21] or undefined.\n// For example, formatDecimal(1.23) returns [\"123\", 0].\nexport default function(x, p) {\n  if ((i = (x = p ? x.toExponential(p - 1) : x.toExponential()).indexOf(\"e\")) < 0) return null; // NaN, ±Infinity\n  var i, coefficient = x.slice(0, i);\n\n  // The string returned by toExponential either has the form \\d\\.\\d+e[-+]\\d+\n  // (e.g., 1.2e+3) or the form \\de[-+]\\d+ (e.g., 1e+3).\n  return [\n    coefficient.length > 1 ? coefficient[0] + coefficient.slice(2) : coefficient,\n    +x.slice(i + 1)\n  ];\n}\n","import formatDecimal from \"./formatDecimal\";\n\nexport default function(x) {\n  return x = formatDecimal(Math.abs(x)), x ? x[1] : NaN;\n}\n","// [[fill]align][sign][symbol][0][width][,][.precision][~][type]\nvar re = /^(?:(.)?([<>=^]))?([+\\-( ])?([$#])?(0)?(\\d+)?(,)?(\\.\\d+)?(~)?([a-z%])?$/i;\n\nexport default function formatSpecifier(specifier) {\n  return new FormatSpecifier(specifier);\n}\n\nformatSpecifier.prototype = FormatSpecifier.prototype; // instanceof\n\nfunction FormatSpecifier(specifier) {\n  if (!(match = re.exec(specifier))) throw new Error(\"invalid format: \" + specifier);\n  var match;\n  this.fill = match[1] || \" \";\n  this.align = match[2] || \">\";\n  this.sign = match[3] || \"-\";\n  this.symbol = match[4] || \"\";\n  this.zero = !!match[5];\n  this.width = match[6] && +match[6];\n  this.comma = !!match[7];\n  this.precision = match[8] && +match[8].slice(1);\n  this.trim = !!match[9];\n  this.type = match[10] || \"\";\n}\n\nFormatSpecifier.prototype.toString = function() {\n  return this.fill\n      + this.align\n      + this.sign\n      + this.symbol\n      + (this.zero ? \"0\" : \"\")\n      + (this.width == null ? \"\" : Math.max(1, this.width | 0))\n      + (this.comma ? \",\" : \"\")\n      + (this.precision == null ? \"\" : \".\" + Math.max(0, this.precision | 0))\n      + (this.trim ? \"~\" : \"\")\n      + this.type;\n};\n","// Trims insignificant zeros, e.g., replaces 1.2000k with 1.2k.\nexport default function(s) {\n  out: for (var n = s.length, i = 1, i0 = -1, i1; i < n; ++i) {\n    switch (s[i]) {\n      case \".\": i0 = i1 = i; break;\n      case \"0\": if (i0 === 0) i0 = i; i1 = i; break;\n      default: if (i0 > 0) { if (!+s[i]) break out; i0 = 0; } break;\n    }\n  }\n  return i0 > 0 ? s.slice(0, i0) + s.slice(i1 + 1) : s;\n}\n","import formatDecimal from \"./formatDecimal\";\n\nexport var prefixExponent;\n\nexport default function(x, p) {\n  var d = formatDecimal(x, p);\n  if (!d) return x + \"\";\n  var coefficient = d[0],\n      exponent = d[1],\n      i = exponent - (prefixExponent = Math.max(-8, Math.min(8, Math.floor(exponent / 3))) * 3) + 1,\n      n = coefficient.length;\n  return i === n ? coefficient\n      : i > n ? coefficient + new Array(i - n + 1).join(\"0\")\n      : i > 0 ? coefficient.slice(0, i) + \".\" + coefficient.slice(i)\n      : \"0.\" + new Array(1 - i).join(\"0\") + formatDecimal(x, Math.max(0, p + i - 1))[0]; // less than 1y!\n}\n","import formatLocale from \"./locale\";\n\nvar locale;\nexport var format;\nexport var formatPrefix;\n\ndefaultLocale({\n  decimal: \".\",\n  thousands: \",\",\n  grouping: [3],\n  currency: [\"$\", \"\"]\n});\n\nexport default function defaultLocale(definition) {\n  locale = formatLocale(definition);\n  format = locale.format;\n  formatPrefix = locale.formatPrefix;\n  return locale;\n}\n","import formatDecimal from \"./formatDecimal\";\n\nexport default function(x, p) {\n  var d = formatDecimal(x, p);\n  if (!d) return x + \"\";\n  var coefficient = d[0],\n      exponent = d[1];\n  return exponent < 0 ? \"0.\" + new Array(-exponent).join(\"0\") + coefficient\n      : coefficient.length > exponent + 1 ? coefficient.slice(0, exponent + 1) + \".\" + coefficient.slice(exponent + 1)\n      : coefficient + new Array(exponent - coefficient.length + 2).join(\"0\");\n}\n","import formatPrefixAuto from \"./formatPrefixAuto\";\nimport formatRounded from \"./formatRounded\";\n\nexport default {\n  \"%\": function(x, p) { return (x * 100).toFixed(p); },\n  \"b\": function(x) { return Math.round(x).toString(2); },\n  \"c\": function(x) { return x + \"\"; },\n  \"d\": function(x) { return Math.round(x).toString(10); },\n  \"e\": function(x, p) { return x.toExponential(p); },\n  \"f\": function(x, p) { return x.toFixed(p); },\n  \"g\": function(x, p) { return x.toPrecision(p); },\n  \"o\": function(x) { return Math.round(x).toString(8); },\n  \"p\": function(x, p) { return formatRounded(x * 100, p); },\n  \"r\": formatRounded,\n  \"s\": formatPrefixAuto,\n  \"X\": function(x) { return Math.round(x).toString(16).toUpperCase(); },\n  \"x\": function(x) { return Math.round(x).toString(16); }\n};\n","export default function(x) {\n  return x;\n}\n","import exponent from \"./exponent\";\nimport formatGroup from \"./formatGroup\";\nimport formatNumerals from \"./formatNumerals\";\nimport formatSpecifier from \"./formatSpecifier\";\nimport formatTrim from \"./formatTrim\";\nimport formatTypes from \"./formatTypes\";\nimport {prefixExponent} from \"./formatPrefixAuto\";\nimport identity from \"./identity\";\n\nvar prefixes = [\"y\",\"z\",\"a\",\"f\",\"p\",\"n\",\"µ\",\"m\",\"\",\"k\",\"M\",\"G\",\"T\",\"P\",\"E\",\"Z\",\"Y\"];\n\nexport default function(locale) {\n  var group = locale.grouping && locale.thousands ? formatGroup(locale.grouping, locale.thousands) : identity,\n      currency = locale.currency,\n      decimal = locale.decimal,\n      numerals = locale.numerals ? formatNumerals(locale.numerals) : identity,\n      percent = locale.percent || \"%\";\n\n  function newFormat(specifier) {\n    specifier = formatSpecifier(specifier);\n\n    var fill = specifier.fill,\n        align = specifier.align,\n        sign = specifier.sign,\n        symbol = specifier.symbol,\n        zero = specifier.zero,\n        width = specifier.width,\n        comma = specifier.comma,\n        precision = specifier.precision,\n        trim = specifier.trim,\n        type = specifier.type;\n\n    // The \"n\" type is an alias for \",g\".\n    if (type === \"n\") comma = true, type = \"g\";\n\n    // The \"\" type, and any invalid type, is an alias for \".12~g\".\n    else if (!formatTypes[type]) precision == null && (precision = 12), trim = true, type = \"g\";\n\n    // If zero fill is specified, padding goes after sign and before digits.\n    if (zero || (fill === \"0\" && align === \"=\")) zero = true, fill = \"0\", align = \"=\";\n\n    // Compute the prefix and suffix.\n    // For SI-prefix, the suffix is lazily computed.\n    var prefix = symbol === \"$\" ? currency[0] : symbol === \"#\" && /[boxX]/.test(type) ? \"0\" + type.toLowerCase() : \"\",\n        suffix = symbol === \"$\" ? currency[1] : /[%p]/.test(type) ? percent : \"\";\n\n    // What format function should we use?\n    // Is this an integer type?\n    // Can this type generate exponential notation?\n    var formatType = formatTypes[type],\n        maybeSuffix = /[defgprs%]/.test(type);\n\n    // Set the default precision if not specified,\n    // or clamp the specified precision to the supported range.\n    // For significant precision, it must be in [1, 21].\n    // For fixed precision, it must be in [0, 20].\n    precision = precision == null ? 6\n        : /[gprs]/.test(type) ? Math.max(1, Math.min(21, precision))\n        : Math.max(0, Math.min(20, precision));\n\n    function format(value) {\n      var valuePrefix = prefix,\n          valueSuffix = suffix,\n          i, n, c;\n\n      if (type === \"c\") {\n        valueSuffix = formatType(value) + valueSuffix;\n        value = \"\";\n      } else {\n        value = +value;\n\n        // Perform the initial formatting.\n        var valueNegative = value < 0;\n        value = formatType(Math.abs(value), precision);\n\n        // Trim insignificant zeros.\n        if (trim) value = formatTrim(value);\n\n        // If a negative value rounds to zero during formatting, treat as positive.\n        if (valueNegative && +value === 0) valueNegative = false;\n\n        // Compute the prefix and suffix.\n        valuePrefix = (valueNegative ? (sign === \"(\" ? sign : \"-\") : sign === \"-\" || sign === \"(\" ? \"\" : sign) + valuePrefix;\n        valueSuffix = (type === \"s\" ? prefixes[8 + prefixExponent / 3] : \"\") + valueSuffix + (valueNegative && sign === \"(\" ? \")\" : \"\");\n\n        // Break the formatted value into the integer “value” part that can be\n        // grouped, and fractional or exponential “suffix” part that is not.\n        if (maybeSuffix) {\n          i = -1, n = value.length;\n          while (++i < n) {\n            if (c = value.charCodeAt(i), 48 > c || c > 57) {\n              valueSuffix = (c === 46 ? decimal + value.slice(i + 1) : value.slice(i)) + valueSuffix;\n              value = value.slice(0, i);\n              break;\n            }\n          }\n        }\n      }\n\n      // If the fill character is not \"0\", grouping is applied before padding.\n      if (comma && !zero) value = group(value, Infinity);\n\n      // Compute the padding.\n      var length = valuePrefix.length + value.length + valueSuffix.length,\n          padding = length < width ? new Array(width - length + 1).join(fill) : \"\";\n\n      // If the fill character is \"0\", grouping is applied after padding.\n      if (comma && zero) value = group(padding + value, padding.length ? width - valueSuffix.length : Infinity), padding = \"\";\n\n      // Reconstruct the final output based on the desired alignment.\n      switch (align) {\n        case \"<\": value = valuePrefix + value + valueSuffix + padding; break;\n        case \"=\": value = valuePrefix + padding + value + valueSuffix; break;\n        case \"^\": value = padding.slice(0, length = padding.length >> 1) + valuePrefix + value + valueSuffix + padding.slice(length); break;\n        default: value = padding + valuePrefix + value + valueSuffix; break;\n      }\n\n      return numerals(value);\n    }\n\n    format.toString = function() {\n      return specifier + \"\";\n    };\n\n    return format;\n  }\n\n  function formatPrefix(specifier, value) {\n    var f = newFormat((specifier = formatSpecifier(specifier), specifier.type = \"f\", specifier)),\n        e = Math.max(-8, Math.min(8, Math.floor(exponent(value) / 3))) * 3,\n        k = Math.pow(10, -e),\n        prefix = prefixes[8 + e / 3];\n    return function(value) {\n      return f(k * value) + prefix;\n    };\n  }\n\n  return {\n    format: newFormat,\n    formatPrefix: formatPrefix\n  };\n}\n","export default function(grouping, thousands) {\n  return function(value, width) {\n    var i = value.length,\n        t = [],\n        j = 0,\n        g = grouping[0],\n        length = 0;\n\n    while (i > 0 && g > 0) {\n      if (length + g + 1 > width) g = Math.max(1, width - length);\n      t.push(value.substring(i -= g, i + g));\n      if ((length += g + 1) > width) break;\n      g = grouping[j = (j + 1) % grouping.length];\n    }\n\n    return t.reverse().join(thousands);\n  };\n}\n","export default function(numerals) {\n  return function(value) {\n    return value.replace(/[0-9]/g, function(i) {\n      return numerals[+i];\n    });\n  };\n}\n","import exponent from \"./exponent\";\n\nexport default function(step) {\n  return Math.max(0, -exponent(Math.abs(step)));\n}\n","import {tickStep} from \"d3-array\";\nimport {format, formatPrefix, formatSpecifier, precisionFixed, precisionPrefix, precisionRound} from \"d3-format\";\n\nexport default function(domain, count, specifier) {\n  var start = domain[0],\n      stop = domain[domain.length - 1],\n      step = tickStep(start, stop, count == null ? 10 : count),\n      precision;\n  specifier = formatSpecifier(specifier == null ? \",f\" : specifier);\n  switch (specifier.type) {\n    case \"s\": {\n      var value = Math.max(Math.abs(start), Math.abs(stop));\n      if (specifier.precision == null && !isNaN(precision = precisionPrefix(step, value))) specifier.precision = precision;\n      return formatPrefix(specifier, value);\n    }\n    case \"\":\n    case \"e\":\n    case \"g\":\n    case \"p\":\n    case \"r\": {\n      if (specifier.precision == null && !isNaN(precision = precisionRound(step, Math.max(Math.abs(start), Math.abs(stop))))) specifier.precision = precision - (specifier.type === \"e\");\n      break;\n    }\n    case \"f\":\n    case \"%\": {\n      if (specifier.precision == null && !isNaN(precision = precisionFixed(step))) specifier.precision = precision - (specifier.type === \"%\") * 2;\n      break;\n    }\n  }\n  return format(specifier);\n}\n","import exponent from \"./exponent\";\n\nexport default function(step, value) {\n  return Math.max(0, Math.max(-8, Math.min(8, Math.floor(exponent(value) / 3))) * 3 - exponent(Math.abs(step)));\n}\n","import exponent from \"./exponent\";\n\nexport default function(step, max) {\n  step = Math.abs(step), max = Math.abs(max) - step;\n  return Math.max(0, exponent(max) - exponent(step)) + 1;\n}\n","import {ticks, tickIncrement} from \"d3-array\";\nimport {interpolateNumber as reinterpolate} from \"d3-interpolate\";\nimport {default as continuous, copy, deinterpolateLinear as deinterpolate} from \"./continuous\";\nimport tickFormat from \"./tickFormat\";\n\nexport function linearish(scale) {\n  var domain = scale.domain;\n\n  scale.ticks = function(count) {\n    var d = domain();\n    return ticks(d[0], d[d.length - 1], count == null ? 10 : count);\n  };\n\n  scale.tickFormat = function(count, specifier) {\n    return tickFormat(domain(), count, specifier);\n  };\n\n  scale.nice = function(count) {\n    if (count == null) count = 10;\n\n    var d = domain(),\n        i0 = 0,\n        i1 = d.length - 1,\n        start = d[i0],\n        stop = d[i1],\n        step;\n\n    if (stop < start) {\n      step = start, start = stop, stop = step;\n      step = i0, i0 = i1, i1 = step;\n    }\n\n    step = tickIncrement(start, stop, count);\n\n    if (step > 0) {\n      start = Math.floor(start / step) * step;\n      stop = Math.ceil(stop / step) * step;\n      step = tickIncrement(start, stop, count);\n    } else if (step < 0) {\n      start = Math.ceil(start * step) / step;\n      stop = Math.floor(stop * step) / step;\n      step = tickIncrement(start, stop, count);\n    }\n\n    if (step > 0) {\n      d[i0] = Math.floor(start / step) * step;\n      d[i1] = Math.ceil(stop / step) * step;\n      domain(d);\n    } else if (step < 0) {\n      d[i0] = Math.ceil(start * step) / step;\n      d[i1] = Math.floor(stop * step) / step;\n      domain(d);\n    }\n\n    return scale;\n  };\n\n  return scale;\n}\n\nexport default function linear() {\n  var scale = continuous(deinterpolate, reinterpolate);\n\n  scale.copy = function() {\n    return copy(scale, linear());\n  };\n\n  return linearish(scale);\n}\n","import {map} from \"./array\";\nimport {linearish} from \"./linear\";\nimport number from \"./number\";\n\nexport default function identity() {\n  var domain = [0, 1];\n\n  function scale(x) {\n    return +x;\n  }\n\n  scale.invert = scale;\n\n  scale.domain = scale.range = function(_) {\n    return arguments.length ? (domain = map.call(_, number), scale) : domain.slice();\n  };\n\n  scale.copy = function() {\n    return identity().domain(domain);\n  };\n\n  return linearish(scale);\n}\n","export default function(domain, interval) {\n  domain = domain.slice();\n\n  var i0 = 0,\n      i1 = domain.length - 1,\n      x0 = domain[i0],\n      x1 = domain[i1],\n      t;\n\n  if (x1 < x0) {\n    t = i0, i0 = i1, i1 = t;\n    t = x0, x0 = x1, x1 = t;\n  }\n\n  domain[i0] = interval.floor(x0);\n  domain[i1] = interval.ceil(x1);\n  return domain;\n}\n","import {ticks} from \"d3-array\";\nimport {format} from \"d3-format\";\nimport constant from \"./constant\";\nimport nice from \"./nice\";\nimport {default as continuous, copy} from \"./continuous\";\n\nfunction deinterpolate(a, b) {\n  return (b = Math.log(b / a))\n      ? function(x) { return Math.log(x / a) / b; }\n      : constant(b);\n}\n\nfunction reinterpolate(a, b) {\n  return a < 0\n      ? function(t) { return -Math.pow(-b, t) * Math.pow(-a, 1 - t); }\n      : function(t) { return Math.pow(b, t) * Math.pow(a, 1 - t); };\n}\n\nfunction pow10(x) {\n  return isFinite(x) ? +(\"1e\" + x) : x < 0 ? 0 : x;\n}\n\nfunction powp(base) {\n  return base === 10 ? pow10\n      : base === Math.E ? Math.exp\n      : function(x) { return Math.pow(base, x); };\n}\n\nfunction logp(base) {\n  return base === Math.E ? Math.log\n      : base === 10 && Math.log10\n      || base === 2 && Math.log2\n      || (base = Math.log(base), function(x) { return Math.log(x) / base; });\n}\n\nfunction reflect(f) {\n  return function(x) {\n    return -f(-x);\n  };\n}\n\nexport default function log() {\n  var scale = continuous(deinterpolate, reinterpolate).domain([1, 10]),\n      domain = scale.domain,\n      base = 10,\n      logs = logp(10),\n      pows = powp(10);\n\n  function rescale() {\n    logs = logp(base), pows = powp(base);\n    if (domain()[0] < 0) logs = reflect(logs), pows = reflect(pows);\n    return scale;\n  }\n\n  scale.base = function(_) {\n    return arguments.length ? (base = +_, rescale()) : base;\n  };\n\n  scale.domain = function(_) {\n    return arguments.length ? (domain(_), rescale()) : domain();\n  };\n\n  scale.ticks = function(count) {\n    var d = domain(),\n        u = d[0],\n        v = d[d.length - 1],\n        r;\n\n    if (r = v < u) i = u, u = v, v = i;\n\n    var i = logs(u),\n        j = logs(v),\n        p,\n        k,\n        t,\n        n = count == null ? 10 : +count,\n        z = [];\n\n    if (!(base % 1) && j - i < n) {\n      i = Math.round(i) - 1, j = Math.round(j) + 1;\n      if (u > 0) for (; i < j; ++i) {\n        for (k = 1, p = pows(i); k < base; ++k) {\n          t = p * k;\n          if (t < u) continue;\n          if (t > v) break;\n          z.push(t);\n        }\n      } else for (; i < j; ++i) {\n        for (k = base - 1, p = pows(i); k >= 1; --k) {\n          t = p * k;\n          if (t < u) continue;\n          if (t > v) break;\n          z.push(t);\n        }\n      }\n    } else {\n      z = ticks(i, j, Math.min(j - i, n)).map(pows);\n    }\n\n    return r ? z.reverse() : z;\n  };\n\n  scale.tickFormat = function(count, specifier) {\n    if (specifier == null) specifier = base === 10 ? \".0e\" : \",\";\n    if (typeof specifier !== \"function\") specifier = format(specifier);\n    if (count === Infinity) return specifier;\n    if (count == null) count = 10;\n    var k = Math.max(1, base * count / scale.ticks().length); // TODO fast estimate?\n    return function(d) {\n      var i = d / pows(Math.round(logs(d)));\n      if (i * base < base - 0.5) i *= base;\n      return i <= k ? specifier(d) : \"\";\n    };\n  };\n\n  scale.nice = function() {\n    return domain(nice(domain(), {\n      floor: function(x) { return pows(Math.floor(logs(x))); },\n      ceil: function(x) { return pows(Math.ceil(logs(x))); }\n    }));\n  };\n\n  scale.copy = function() {\n    return copy(scale, log().base(base));\n  };\n\n  return scale;\n}\n","import constant from \"./constant\";\nimport {linearish} from \"./linear\";\nimport {default as continuous, copy} from \"./continuous\";\n\nfunction raise(x, exponent) {\n  return x < 0 ? -Math.pow(-x, exponent) : Math.pow(x, exponent);\n}\n\nexport default function pow() {\n  var exponent = 1,\n      scale = continuous(deinterpolate, reinterpolate),\n      domain = scale.domain;\n\n  function deinterpolate(a, b) {\n    return (b = raise(b, exponent) - (a = raise(a, exponent)))\n        ? function(x) { return (raise(x, exponent) - a) / b; }\n        : constant(b);\n  }\n\n  function reinterpolate(a, b) {\n    b = raise(b, exponent) - (a = raise(a, exponent));\n    return function(t) { return raise(a + b * t, 1 / exponent); };\n  }\n\n  scale.exponent = function(_) {\n    return arguments.length ? (exponent = +_, domain(domain())) : exponent;\n  };\n\n  scale.copy = function() {\n    return copy(scale, pow().exponent(exponent));\n  };\n\n  return linearish(scale);\n}\n\nexport function sqrt() {\n  return pow().exponent(0.5);\n}\n","import {ascending, bisect, quantile as threshold} from \"d3-array\";\nimport {slice} from \"./array\";\n\nexport default function quantile() {\n  var domain = [],\n      range = [],\n      thresholds = [];\n\n  function rescale() {\n    var i = 0, n = Math.max(1, range.length);\n    thresholds = new Array(n - 1);\n    while (++i < n) thresholds[i - 1] = threshold(domain, i / n);\n    return scale;\n  }\n\n  function scale(x) {\n    if (!isNaN(x = +x)) return range[bisect(thresholds, x)];\n  }\n\n  scale.invertExtent = function(y) {\n    var i = range.indexOf(y);\n    return i < 0 ? [NaN, NaN] : [\n      i > 0 ? thresholds[i - 1] : domain[0],\n      i < thresholds.length ? thresholds[i] : domain[domain.length - 1]\n    ];\n  };\n\n  scale.domain = function(_) {\n    if (!arguments.length) return domain.slice();\n    domain = [];\n    for (var i = 0, n = _.length, d; i < n; ++i) if (d = _[i], d != null && !isNaN(d = +d)) domain.push(d);\n    domain.sort(ascending);\n    return rescale();\n  };\n\n  scale.range = function(_) {\n    return arguments.length ? (range = slice.call(_), rescale()) : range.slice();\n  };\n\n  scale.quantiles = function() {\n    return thresholds.slice();\n  };\n\n  scale.copy = function() {\n    return quantile()\n        .domain(domain)\n        .range(range);\n  };\n\n  return scale;\n}\n","import {bisect} from \"d3-array\";\nimport {slice} from \"./array\";\nimport {linearish} from \"./linear\";\n\nexport default function quantize() {\n  var x0 = 0,\n      x1 = 1,\n      n = 1,\n      domain = [0.5],\n      range = [0, 1];\n\n  function scale(x) {\n    if (x <= x) return range[bisect(domain, x, 0, n)];\n  }\n\n  function rescale() {\n    var i = -1;\n    domain = new Array(n);\n    while (++i < n) domain[i] = ((i + 1) * x1 - (i - n) * x0) / (n + 1);\n    return scale;\n  }\n\n  scale.domain = function(_) {\n    return arguments.length ? (x0 = +_[0], x1 = +_[1], rescale()) : [x0, x1];\n  };\n\n  scale.range = function(_) {\n    return arguments.length ? (n = (range = slice.call(_)).length - 1, rescale()) : range.slice();\n  };\n\n  scale.invertExtent = function(y) {\n    var i = range.indexOf(y);\n    return i < 0 ? [NaN, NaN]\n        : i < 1 ? [x0, domain[0]]\n        : i >= n ? [domain[n - 1], x1]\n        : [domain[i - 1], domain[i]];\n  };\n\n  scale.copy = function() {\n    return quantize()\n        .domain([x0, x1])\n        .range(range);\n  };\n\n  return linearish(scale);\n}\n","import {bisect} from \"d3-array\";\nimport {slice} from \"./array\";\n\nexport default function threshold() {\n  var domain = [0.5],\n      range = [0, 1],\n      n = 1;\n\n  function scale(x) {\n    if (x <= x) return range[bisect(domain, x, 0, n)];\n  }\n\n  scale.domain = function(_) {\n    return arguments.length ? (domain = slice.call(_), n = Math.min(domain.length, range.length - 1), scale) : domain.slice();\n  };\n\n  scale.range = function(_) {\n    return arguments.length ? (range = slice.call(_), n = Math.min(domain.length, range.length - 1), scale) : range.slice();\n  };\n\n  scale.invertExtent = function(y) {\n    var i = range.indexOf(y);\n    return [domain[i - 1], domain[i]];\n  };\n\n  scale.copy = function() {\n    return threshold()\n        .domain(domain)\n        .range(range);\n  };\n\n  return scale;\n}\n","var t0 = new Date,\n    t1 = new Date;\n\nexport default function newInterval(floori, offseti, count, field) {\n\n  function interval(date) {\n    return floori(date = new Date(+date)), date;\n  }\n\n  interval.floor = interval;\n\n  interval.ceil = function(date) {\n    return floori(date = new Date(date - 1)), offseti(date, 1), floori(date), date;\n  };\n\n  interval.round = function(date) {\n    var d0 = interval(date),\n        d1 = interval.ceil(date);\n    return date - d0 < d1 - date ? d0 : d1;\n  };\n\n  interval.offset = function(date, step) {\n    return offseti(date = new Date(+date), step == null ? 1 : Math.floor(step)), date;\n  };\n\n  interval.range = function(start, stop, step) {\n    var range = [], previous;\n    start = interval.ceil(start);\n    step = step == null ? 1 : Math.floor(step);\n    if (!(start < stop) || !(step > 0)) return range; // also handles Invalid Date\n    do range.push(previous = new Date(+start)), offseti(start, step), floori(start);\n    while (previous < start && start < stop);\n    return range;\n  };\n\n  interval.filter = function(test) {\n    return newInterval(function(date) {\n      if (date >= date) while (floori(date), !test(date)) date.setTime(date - 1);\n    }, function(date, step) {\n      if (date >= date) {\n        if (step < 0) while (++step <= 0) {\n          while (offseti(date, -1), !test(date)) {} // eslint-disable-line no-empty\n        } else while (--step >= 0) {\n          while (offseti(date, +1), !test(date)) {} // eslint-disable-line no-empty\n        }\n      }\n    });\n  };\n\n  if (count) {\n    interval.count = function(start, end) {\n      t0.setTime(+start), t1.setTime(+end);\n      floori(t0), floori(t1);\n      return Math.floor(count(t0, t1));\n    };\n\n    interval.every = function(step) {\n      step = Math.floor(step);\n      return !isFinite(step) || !(step > 0) ? null\n          : !(step > 1) ? interval\n          : interval.filter(field\n              ? function(d) { return field(d) % step === 0; }\n              : function(d) { return interval.count(0, d) % step === 0; });\n    };\n  }\n\n  return interval;\n}\n","import interval from \"./interval\";\n\nvar millisecond = interval(function() {\n  // noop\n}, function(date, step) {\n  date.setTime(+date + step);\n}, function(start, end) {\n  return end - start;\n});\n\n// An optimized implementation for this simple case.\nmillisecond.every = function(k) {\n  k = Math.floor(k);\n  if (!isFinite(k) || !(k > 0)) return null;\n  if (!(k > 1)) return millisecond;\n  return interval(function(date) {\n    date.setTime(Math.floor(date / k) * k);\n  }, function(date, step) {\n    date.setTime(+date + step * k);\n  }, function(start, end) {\n    return (end - start) / k;\n  });\n};\n\nexport default millisecond;\nexport var milliseconds = millisecond.range;\n","export var durationSecond = 1e3;\nexport var durationMinute = 6e4;\nexport var durationHour = 36e5;\nexport var durationDay = 864e5;\nexport var durationWeek = 6048e5;\n","import interval from \"./interval\";\nimport {durationSecond} from \"./duration\";\n\nvar second = interval(function(date) {\n  date.setTime(Math.floor(date / durationSecond) * durationSecond);\n}, function(date, step) {\n  date.setTime(+date + step * durationSecond);\n}, function(start, end) {\n  return (end - start) / durationSecond;\n}, function(date) {\n  return date.getUTCSeconds();\n});\n\nexport default second;\nexport var seconds = second.range;\n","import interval from \"./interval\";\nimport {durationMinute} from \"./duration\";\n\nvar minute = interval(function(date) {\n  date.setTime(Math.floor(date / durationMinute) * durationMinute);\n}, function(date, step) {\n  date.setTime(+date + step * durationMinute);\n}, function(start, end) {\n  return (end - start) / durationMinute;\n}, function(date) {\n  return date.getMinutes();\n});\n\nexport default minute;\nexport var minutes = minute.range;\n","import interval from \"./interval\";\nimport {durationHour, durationMinute} from \"./duration\";\n\nvar hour = interval(function(date) {\n  var offset = date.getTimezoneOffset() * durationMinute % durationHour;\n  if (offset < 0) offset += durationHour;\n  date.setTime(Math.floor((+date - offset) / durationHour) * durationHour + offset);\n}, function(date, step) {\n  date.setTime(+date + step * durationHour);\n}, function(start, end) {\n  return (end - start) / durationHour;\n}, function(date) {\n  return date.getHours();\n});\n\nexport default hour;\nexport var hours = hour.range;\n","import interval from \"./interval\";\nimport {durationDay, durationMinute} from \"./duration\";\n\nvar day = interval(function(date) {\n  date.setHours(0, 0, 0, 0);\n}, function(date, step) {\n  date.setDate(date.getDate() + step);\n}, function(start, end) {\n  return (end - start - (end.getTimezoneOffset() - start.getTimezoneOffset()) * durationMinute) / durationDay;\n}, function(date) {\n  return date.getDate() - 1;\n});\n\nexport default day;\nexport var days = day.range;\n","import interval from \"./interval\";\nimport {durationMinute, durationWeek} from \"./duration\";\n\nfunction weekday(i) {\n  return interval(function(date) {\n    date.setDate(date.getDate() - (date.getDay() + 7 - i) % 7);\n    date.setHours(0, 0, 0, 0);\n  }, function(date, step) {\n    date.setDate(date.getDate() + step * 7);\n  }, function(start, end) {\n    return (end - start - (end.getTimezoneOffset() - start.getTimezoneOffset()) * durationMinute) / durationWeek;\n  });\n}\n\nexport var sunday = weekday(0);\nexport var monday = weekday(1);\nexport var tuesday = weekday(2);\nexport var wednesday = weekday(3);\nexport var thursday = weekday(4);\nexport var friday = weekday(5);\nexport var saturday = weekday(6);\n\nexport var sundays = sunday.range;\nexport var mondays = monday.range;\nexport var tuesdays = tuesday.range;\nexport var wednesdays = wednesday.range;\nexport var thursdays = thursday.range;\nexport var fridays = friday.range;\nexport var saturdays = saturday.range;\n","import interval from \"./interval\";\n\nvar month = interval(function(date) {\n  date.setDate(1);\n  date.setHours(0, 0, 0, 0);\n}, function(date, step) {\n  date.setMonth(date.getMonth() + step);\n}, function(start, end) {\n  return end.getMonth() - start.getMonth() + (end.getFullYear() - start.getFullYear()) * 12;\n}, function(date) {\n  return date.getMonth();\n});\n\nexport default month;\nexport var months = month.range;\n","import interval from \"./interval\";\n\nvar year = interval(function(date) {\n  date.setMonth(0, 1);\n  date.setHours(0, 0, 0, 0);\n}, function(date, step) {\n  date.setFullYear(date.getFullYear() + step);\n}, function(start, end) {\n  return end.getFullYear() - start.getFullYear();\n}, function(date) {\n  return date.getFullYear();\n});\n\n// An optimized implementation for this simple case.\nyear.every = function(k) {\n  return !isFinite(k = Math.floor(k)) || !(k > 0) ? null : interval(function(date) {\n    date.setFullYear(Math.floor(date.getFullYear() / k) * k);\n    date.setMonth(0, 1);\n    date.setHours(0, 0, 0, 0);\n  }, function(date, step) {\n    date.setFullYear(date.getFullYear() + step * k);\n  });\n};\n\nexport default year;\nexport var years = year.range;\n","import interval from \"./interval\";\nimport {durationMinute} from \"./duration\";\n\nvar utcMinute = interval(function(date) {\n  date.setUTCSeconds(0, 0);\n}, function(date, step) {\n  date.setTime(+date + step * durationMinute);\n}, function(start, end) {\n  return (end - start) / durationMinute;\n}, function(date) {\n  return date.getUTCMinutes();\n});\n\nexport default utcMinute;\nexport var utcMinutes = utcMinute.range;\n","import interval from \"./interval\";\nimport {durationHour} from \"./duration\";\n\nvar utcHour = interval(function(date) {\n  date.setUTCMinutes(0, 0, 0);\n}, function(date, step) {\n  date.setTime(+date + step * durationHour);\n}, function(start, end) {\n  return (end - start) / durationHour;\n}, function(date) {\n  return date.getUTCHours();\n});\n\nexport default utcHour;\nexport var utcHours = utcHour.range;\n","import interval from \"./interval\";\nimport {durationDay} from \"./duration\";\n\nvar utcDay = interval(function(date) {\n  date.setUTCHours(0, 0, 0, 0);\n}, function(date, step) {\n  date.setUTCDate(date.getUTCDate() + step);\n}, function(start, end) {\n  return (end - start) / durationDay;\n}, function(date) {\n  return date.getUTCDate() - 1;\n});\n\nexport default utcDay;\nexport var utcDays = utcDay.range;\n","import interval from \"./interval\";\nimport {durationWeek} from \"./duration\";\n\nfunction utcWeekday(i) {\n  return interval(function(date) {\n    date.setUTCDate(date.getUTCDate() - (date.getUTCDay() + 7 - i) % 7);\n    date.setUTCHours(0, 0, 0, 0);\n  }, function(date, step) {\n    date.setUTCDate(date.getUTCDate() + step * 7);\n  }, function(start, end) {\n    return (end - start) / durationWeek;\n  });\n}\n\nexport var utcSunday = utcWeekday(0);\nexport var utcMonday = utcWeekday(1);\nexport var utcTuesday = utcWeekday(2);\nexport var utcWednesday = utcWeekday(3);\nexport var utcThursday = utcWeekday(4);\nexport var utcFriday = utcWeekday(5);\nexport var utcSaturday = utcWeekday(6);\n\nexport var utcSundays = utcSunday.range;\nexport var utcMondays = utcMonday.range;\nexport var utcTuesdays = utcTuesday.range;\nexport var utcWednesdays = utcWednesday.range;\nexport var utcThursdays = utcThursday.range;\nexport var utcFridays = utcFriday.range;\nexport var utcSaturdays = utcSaturday.range;\n","import interval from \"./interval\";\n\nvar utcMonth = interval(function(date) {\n  date.setUTCDate(1);\n  date.setUTCHours(0, 0, 0, 0);\n}, function(date, step) {\n  date.setUTCMonth(date.getUTCMonth() + step);\n}, function(start, end) {\n  return end.getUTCMonth() - start.getUTCMonth() + (end.getUTCFullYear() - start.getUTCFullYear()) * 12;\n}, function(date) {\n  return date.getUTCMonth();\n});\n\nexport default utcMonth;\nexport var utcMonths = utcMonth.range;\n","import interval from \"./interval\";\n\nvar utcYear = interval(function(date) {\n  date.setUTCMonth(0, 1);\n  date.setUTCHours(0, 0, 0, 0);\n}, function(date, step) {\n  date.setUTCFullYear(date.getUTCFullYear() + step);\n}, function(start, end) {\n  return end.getUTCFullYear() - start.getUTCFullYear();\n}, function(date) {\n  return date.getUTCFullYear();\n});\n\n// An optimized implementation for this simple case.\nutcYear.every = function(k) {\n  return !isFinite(k = Math.floor(k)) || !(k > 0) ? null : interval(function(date) {\n    date.setUTCFullYear(Math.floor(date.getUTCFullYear() / k) * k);\n    date.setUTCMonth(0, 1);\n    date.setUTCHours(0, 0, 0, 0);\n  }, function(date, step) {\n    date.setUTCFullYear(date.getUTCFullYear() + step * k);\n  });\n};\n\nexport default utcYear;\nexport var utcYears = utcYear.range;\n","import {\n  timeDay,\n  timeSunday,\n  timeMonday,\n  timeThursday,\n  timeYear,\n  utcDay,\n  utcSunday,\n  utcMonday,\n  utcThursday,\n  utcYear\n} from \"d3-time\";\n\nfunction localDate(d) {\n  if (0 <= d.y && d.y < 100) {\n    var date = new Date(-1, d.m, d.d, d.H, d.M, d.S, d.L);\n    date.setFullYear(d.y);\n    return date;\n  }\n  return new Date(d.y, d.m, d.d, d.H, d.M, d.S, d.L);\n}\n\nfunction utcDate(d) {\n  if (0 <= d.y && d.y < 100) {\n    var date = new Date(Date.UTC(-1, d.m, d.d, d.H, d.M, d.S, d.L));\n    date.setUTCFullYear(d.y);\n    return date;\n  }\n  return new Date(Date.UTC(d.y, d.m, d.d, d.H, d.M, d.S, d.L));\n}\n\nfunction newYear(y) {\n  return {y: y, m: 0, d: 1, H: 0, M: 0, S: 0, L: 0};\n}\n\nexport default function formatLocale(locale) {\n  var locale_dateTime = locale.dateTime,\n      locale_date = locale.date,\n      locale_time = locale.time,\n      locale_periods = locale.periods,\n      locale_weekdays = locale.days,\n      locale_shortWeekdays = locale.shortDays,\n      locale_months = locale.months,\n      locale_shortMonths = locale.shortMonths;\n\n  var periodRe = formatRe(locale_periods),\n      periodLookup = formatLookup(locale_periods),\n      weekdayRe = formatRe(locale_weekdays),\n      weekdayLookup = formatLookup(locale_weekdays),\n      shortWeekdayRe = formatRe(locale_shortWeekdays),\n      shortWeekdayLookup = formatLookup(locale_shortWeekdays),\n      monthRe = formatRe(locale_months),\n      monthLookup = formatLookup(locale_months),\n      shortMonthRe = formatRe(locale_shortMonths),\n      shortMonthLookup = formatLookup(locale_shortMonths);\n\n  var formats = {\n    \"a\": formatShortWeekday,\n    \"A\": formatWeekday,\n    \"b\": formatShortMonth,\n    \"B\": formatMonth,\n    \"c\": null,\n    \"d\": formatDayOfMonth,\n    \"e\": formatDayOfMonth,\n    \"f\": formatMicroseconds,\n    \"H\": formatHour24,\n    \"I\": formatHour12,\n    \"j\": formatDayOfYear,\n    \"L\": formatMilliseconds,\n    \"m\": formatMonthNumber,\n    \"M\": formatMinutes,\n    \"p\": formatPeriod,\n    \"Q\": formatUnixTimestamp,\n    \"s\": formatUnixTimestampSeconds,\n    \"S\": formatSeconds,\n    \"u\": formatWeekdayNumberMonday,\n    \"U\": formatWeekNumberSunday,\n    \"V\": formatWeekNumberISO,\n    \"w\": formatWeekdayNumberSunday,\n    \"W\": formatWeekNumberMonday,\n    \"x\": null,\n    \"X\": null,\n    \"y\": formatYear,\n    \"Y\": formatFullYear,\n    \"Z\": formatZone,\n    \"%\": formatLiteralPercent\n  };\n\n  var utcFormats = {\n    \"a\": formatUTCShortWeekday,\n    \"A\": formatUTCWeekday,\n    \"b\": formatUTCShortMonth,\n    \"B\": formatUTCMonth,\n    \"c\": null,\n    \"d\": formatUTCDayOfMonth,\n    \"e\": formatUTCDayOfMonth,\n    \"f\": formatUTCMicroseconds,\n    \"H\": formatUTCHour24,\n    \"I\": formatUTCHour12,\n    \"j\": formatUTCDayOfYear,\n    \"L\": formatUTCMilliseconds,\n    \"m\": formatUTCMonthNumber,\n    \"M\": formatUTCMinutes,\n    \"p\": formatUTCPeriod,\n    \"Q\": formatUnixTimestamp,\n    \"s\": formatUnixTimestampSeconds,\n    \"S\": formatUTCSeconds,\n    \"u\": formatUTCWeekdayNumberMonday,\n    \"U\": formatUTCWeekNumberSunday,\n    \"V\": formatUTCWeekNumberISO,\n    \"w\": formatUTCWeekdayNumberSunday,\n    \"W\": formatUTCWeekNumberMonday,\n    \"x\": null,\n    \"X\": null,\n    \"y\": formatUTCYear,\n    \"Y\": formatUTCFullYear,\n    \"Z\": formatUTCZone,\n    \"%\": formatLiteralPercent\n  };\n\n  var parses = {\n    \"a\": parseShortWeekday,\n    \"A\": parseWeekday,\n    \"b\": parseShortMonth,\n    \"B\": parseMonth,\n    \"c\": parseLocaleDateTime,\n    \"d\": parseDayOfMonth,\n    \"e\": parseDayOfMonth,\n    \"f\": parseMicroseconds,\n    \"H\": parseHour24,\n    \"I\": parseHour24,\n    \"j\": parseDayOfYear,\n    \"L\": parseMilliseconds,\n    \"m\": parseMonthNumber,\n    \"M\": parseMinutes,\n    \"p\": parsePeriod,\n    \"Q\": parseUnixTimestamp,\n    \"s\": parseUnixTimestampSeconds,\n    \"S\": parseSeconds,\n    \"u\": parseWeekdayNumberMonday,\n    \"U\": parseWeekNumberSunday,\n    \"V\": parseWeekNumberISO,\n    \"w\": parseWeekdayNumberSunday,\n    \"W\": parseWeekNumberMonday,\n    \"x\": parseLocaleDate,\n    \"X\": parseLocaleTime,\n    \"y\": parseYear,\n    \"Y\": parseFullYear,\n    \"Z\": parseZone,\n    \"%\": parseLiteralPercent\n  };\n\n  // These recursive directive definitions must be deferred.\n  formats.x = newFormat(locale_date, formats);\n  formats.X = newFormat(locale_time, formats);\n  formats.c = newFormat(locale_dateTime, formats);\n  utcFormats.x = newFormat(locale_date, utcFormats);\n  utcFormats.X = newFormat(locale_time, utcFormats);\n  utcFormats.c = newFormat(locale_dateTime, utcFormats);\n\n  function newFormat(specifier, formats) {\n    return function(date) {\n      var string = [],\n          i = -1,\n          j = 0,\n          n = specifier.length,\n          c,\n          pad,\n          format;\n\n      if (!(date instanceof Date)) date = new Date(+date);\n\n      while (++i < n) {\n        if (specifier.charCodeAt(i) === 37) {\n          string.push(specifier.slice(j, i));\n          if ((pad = pads[c = specifier.charAt(++i)]) != null) c = specifier.charAt(++i);\n          else pad = c === \"e\" ? \" \" : \"0\";\n          if (format = formats[c]) c = format(date, pad);\n          string.push(c);\n          j = i + 1;\n        }\n      }\n\n      string.push(specifier.slice(j, i));\n      return string.join(\"\");\n    };\n  }\n\n  function newParse(specifier, newDate) {\n    return function(string) {\n      var d = newYear(1900),\n          i = parseSpecifier(d, specifier, string += \"\", 0),\n          week, day;\n      if (i != string.length) return null;\n\n      // If a UNIX timestamp is specified, return it.\n      if (\"Q\" in d) return new Date(d.Q);\n\n      // The am-pm flag is 0 for AM, and 1 for PM.\n      if (\"p\" in d) d.H = d.H % 12 + d.p * 12;\n\n      // Convert day-of-week and week-of-year to day-of-year.\n      if (\"V\" in d) {\n        if (d.V < 1 || d.V > 53) return null;\n        if (!(\"w\" in d)) d.w = 1;\n        if (\"Z\" in d) {\n          week = utcDate(newYear(d.y)), day = week.getUTCDay();\n          week = day > 4 || day === 0 ? utcMonday.ceil(week) : utcMonday(week);\n          week = utcDay.offset(week, (d.V - 1) * 7);\n          d.y = week.getUTCFullYear();\n          d.m = week.getUTCMonth();\n          d.d = week.getUTCDate() + (d.w + 6) % 7;\n        } else {\n          week = newDate(newYear(d.y)), day = week.getDay();\n          week = day > 4 || day === 0 ? timeMonday.ceil(week) : timeMonday(week);\n          week = timeDay.offset(week, (d.V - 1) * 7);\n          d.y = week.getFullYear();\n          d.m = week.getMonth();\n          d.d = week.getDate() + (d.w + 6) % 7;\n        }\n      } else if (\"W\" in d || \"U\" in d) {\n        if (!(\"w\" in d)) d.w = \"u\" in d ? d.u % 7 : \"W\" in d ? 1 : 0;\n        day = \"Z\" in d ? utcDate(newYear(d.y)).getUTCDay() : newDate(newYear(d.y)).getDay();\n        d.m = 0;\n        d.d = \"W\" in d ? (d.w + 6) % 7 + d.W * 7 - (day + 5) % 7 : d.w + d.U * 7 - (day + 6) % 7;\n      }\n\n      // If a time zone is specified, all fields are interpreted as UTC and then\n      // offset according to the specified time zone.\n      if (\"Z\" in d) {\n        d.H += d.Z / 100 | 0;\n        d.M += d.Z % 100;\n        return utcDate(d);\n      }\n\n      // Otherwise, all fields are in local time.\n      return newDate(d);\n    };\n  }\n\n  function parseSpecifier(d, specifier, string, j) {\n    var i = 0,\n        n = specifier.length,\n        m = string.length,\n        c,\n        parse;\n\n    while (i < n) {\n      if (j >= m) return -1;\n      c = specifier.charCodeAt(i++);\n      if (c === 37) {\n        c = specifier.charAt(i++);\n        parse = parses[c in pads ? specifier.charAt(i++) : c];\n        if (!parse || ((j = parse(d, string, j)) < 0)) return -1;\n      } else if (c != string.charCodeAt(j++)) {\n        return -1;\n      }\n    }\n\n    return j;\n  }\n\n  function parsePeriod(d, string, i) {\n    var n = periodRe.exec(string.slice(i));\n    return n ? (d.p = periodLookup[n[0].toLowerCase()], i + n[0].length) : -1;\n  }\n\n  function parseShortWeekday(d, string, i) {\n    var n = shortWeekdayRe.exec(string.slice(i));\n    return n ? (d.w = shortWeekdayLookup[n[0].toLowerCase()], i + n[0].length) : -1;\n  }\n\n  function parseWeekday(d, string, i) {\n    var n = weekdayRe.exec(string.slice(i));\n    return n ? (d.w = weekdayLookup[n[0].toLowerCase()], i + n[0].length) : -1;\n  }\n\n  function parseShortMonth(d, string, i) {\n    var n = shortMonthRe.exec(string.slice(i));\n    return n ? (d.m = shortMonthLookup[n[0].toLowerCase()], i + n[0].length) : -1;\n  }\n\n  function parseMonth(d, string, i) {\n    var n = monthRe.exec(string.slice(i));\n    return n ? (d.m = monthLookup[n[0].toLowerCase()], i + n[0].length) : -1;\n  }\n\n  function parseLocaleDateTime(d, string, i) {\n    return parseSpecifier(d, locale_dateTime, string, i);\n  }\n\n  function parseLocaleDate(d, string, i) {\n    return parseSpecifier(d, locale_date, string, i);\n  }\n\n  function parseLocaleTime(d, string, i) {\n    return parseSpecifier(d, locale_time, string, i);\n  }\n\n  function formatShortWeekday(d) {\n    return locale_shortWeekdays[d.getDay()];\n  }\n\n  function formatWeekday(d) {\n    return locale_weekdays[d.getDay()];\n  }\n\n  function formatShortMonth(d) {\n    return locale_shortMonths[d.getMonth()];\n  }\n\n  function formatMonth(d) {\n    return locale_months[d.getMonth()];\n  }\n\n  function formatPeriod(d) {\n    return locale_periods[+(d.getHours() >= 12)];\n  }\n\n  function formatUTCShortWeekday(d) {\n    return locale_shortWeekdays[d.getUTCDay()];\n  }\n\n  function formatUTCWeekday(d) {\n    return locale_weekdays[d.getUTCDay()];\n  }\n\n  function formatUTCShortMonth(d) {\n    return locale_shortMonths[d.getUTCMonth()];\n  }\n\n  function formatUTCMonth(d) {\n    return locale_months[d.getUTCMonth()];\n  }\n\n  function formatUTCPeriod(d) {\n    return locale_periods[+(d.getUTCHours() >= 12)];\n  }\n\n  return {\n    format: function(specifier) {\n      var f = newFormat(specifier += \"\", formats);\n      f.toString = function() { return specifier; };\n      return f;\n    },\n    parse: function(specifier) {\n      var p = newParse(specifier += \"\", localDate);\n      p.toString = function() { return specifier; };\n      return p;\n    },\n    utcFormat: function(specifier) {\n      var f = newFormat(specifier += \"\", utcFormats);\n      f.toString = function() { return specifier; };\n      return f;\n    },\n    utcParse: function(specifier) {\n      var p = newParse(specifier, utcDate);\n      p.toString = function() { return specifier; };\n      return p;\n    }\n  };\n}\n\nvar pads = {\"-\": \"\", \"_\": \" \", \"0\": \"0\"},\n    numberRe = /^\\s*\\d+/, // note: ignores next directive\n    percentRe = /^%/,\n    requoteRe = /[\\\\^$*+?|[\\]().{}]/g;\n\nfunction pad(value, fill, width) {\n  var sign = value < 0 ? \"-\" : \"\",\n      string = (sign ? -value : value) + \"\",\n      length = string.length;\n  return sign + (length < width ? new Array(width - length + 1).join(fill) + string : string);\n}\n\nfunction requote(s) {\n  return s.replace(requoteRe, \"\\\\$&\");\n}\n\nfunction formatRe(names) {\n  return new RegExp(\"^(?:\" + names.map(requote).join(\"|\") + \")\", \"i\");\n}\n\nfunction formatLookup(names) {\n  var map = {}, i = -1, n = names.length;\n  while (++i < n) map[names[i].toLowerCase()] = i;\n  return map;\n}\n\nfunction parseWeekdayNumberSunday(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 1));\n  return n ? (d.w = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseWeekdayNumberMonday(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 1));\n  return n ? (d.u = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseWeekNumberSunday(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.U = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseWeekNumberISO(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.V = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseWeekNumberMonday(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.W = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseFullYear(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 4));\n  return n ? (d.y = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseYear(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.y = +n[0] + (+n[0] > 68 ? 1900 : 2000), i + n[0].length) : -1;\n}\n\nfunction parseZone(d, string, i) {\n  var n = /^(Z)|([+-]\\d\\d)(?::?(\\d\\d))?/.exec(string.slice(i, i + 6));\n  return n ? (d.Z = n[1] ? 0 : -(n[2] + (n[3] || \"00\")), i + n[0].length) : -1;\n}\n\nfunction parseMonthNumber(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.m = n[0] - 1, i + n[0].length) : -1;\n}\n\nfunction parseDayOfMonth(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.d = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseDayOfYear(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 3));\n  return n ? (d.m = 0, d.d = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseHour24(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.H = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseMinutes(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.M = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseSeconds(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.S = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseMilliseconds(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 3));\n  return n ? (d.L = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseMicroseconds(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 6));\n  return n ? (d.L = Math.floor(n[0] / 1000), i + n[0].length) : -1;\n}\n\nfunction parseLiteralPercent(d, string, i) {\n  var n = percentRe.exec(string.slice(i, i + 1));\n  return n ? i + n[0].length : -1;\n}\n\nfunction parseUnixTimestamp(d, string, i) {\n  var n = numberRe.exec(string.slice(i));\n  return n ? (d.Q = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseUnixTimestampSeconds(d, string, i) {\n  var n = numberRe.exec(string.slice(i));\n  return n ? (d.Q = (+n[0]) * 1000, i + n[0].length) : -1;\n}\n\nfunction formatDayOfMonth(d, p) {\n  return pad(d.getDate(), p, 2);\n}\n\nfunction formatHour24(d, p) {\n  return pad(d.getHours(), p, 2);\n}\n\nfunction formatHour12(d, p) {\n  return pad(d.getHours() % 12 || 12, p, 2);\n}\n\nfunction formatDayOfYear(d, p) {\n  return pad(1 + timeDay.count(timeYear(d), d), p, 3);\n}\n\nfunction formatMilliseconds(d, p) {\n  return pad(d.getMilliseconds(), p, 3);\n}\n\nfunction formatMicroseconds(d, p) {\n  return formatMilliseconds(d, p) + \"000\";\n}\n\nfunction formatMonthNumber(d, p) {\n  return pad(d.getMonth() + 1, p, 2);\n}\n\nfunction formatMinutes(d, p) {\n  return pad(d.getMinutes(), p, 2);\n}\n\nfunction formatSeconds(d, p) {\n  return pad(d.getSeconds(), p, 2);\n}\n\nfunction formatWeekdayNumberMonday(d) {\n  var day = d.getDay();\n  return day === 0 ? 7 : day;\n}\n\nfunction formatWeekNumberSunday(d, p) {\n  return pad(timeSunday.count(timeYear(d), d), p, 2);\n}\n\nfunction formatWeekNumberISO(d, p) {\n  var day = d.getDay();\n  d = (day >= 4 || day === 0) ? timeThursday(d) : timeThursday.ceil(d);\n  return pad(timeThursday.count(timeYear(d), d) + (timeYear(d).getDay() === 4), p, 2);\n}\n\nfunction formatWeekdayNumberSunday(d) {\n  return d.getDay();\n}\n\nfunction formatWeekNumberMonday(d, p) {\n  return pad(timeMonday.count(timeYear(d), d), p, 2);\n}\n\nfunction formatYear(d, p) {\n  return pad(d.getFullYear() % 100, p, 2);\n}\n\nfunction formatFullYear(d, p) {\n  return pad(d.getFullYear() % 10000, p, 4);\n}\n\nfunction formatZone(d) {\n  var z = d.getTimezoneOffset();\n  return (z > 0 ? \"-\" : (z *= -1, \"+\"))\n      + pad(z / 60 | 0, \"0\", 2)\n      + pad(z % 60, \"0\", 2);\n}\n\nfunction formatUTCDayOfMonth(d, p) {\n  return pad(d.getUTCDate(), p, 2);\n}\n\nfunction formatUTCHour24(d, p) {\n  return pad(d.getUTCHours(), p, 2);\n}\n\nfunction formatUTCHour12(d, p) {\n  return pad(d.getUTCHours() % 12 || 12, p, 2);\n}\n\nfunction formatUTCDayOfYear(d, p) {\n  return pad(1 + utcDay.count(utcYear(d), d), p, 3);\n}\n\nfunction formatUTCMilliseconds(d, p) {\n  return pad(d.getUTCMilliseconds(), p, 3);\n}\n\nfunction formatUTCMicroseconds(d, p) {\n  return formatUTCMilliseconds(d, p) + \"000\";\n}\n\nfunction formatUTCMonthNumber(d, p) {\n  return pad(d.getUTCMonth() + 1, p, 2);\n}\n\nfunction formatUTCMinutes(d, p) {\n  return pad(d.getUTCMinutes(), p, 2);\n}\n\nfunction formatUTCSeconds(d, p) {\n  return pad(d.getUTCSeconds(), p, 2);\n}\n\nfunction formatUTCWeekdayNumberMonday(d) {\n  var dow = d.getUTCDay();\n  return dow === 0 ? 7 : dow;\n}\n\nfunction formatUTCWeekNumberSunday(d, p) {\n  return pad(utcSunday.count(utcYear(d), d), p, 2);\n}\n\nfunction formatUTCWeekNumberISO(d, p) {\n  var day = d.getUTCDay();\n  d = (day >= 4 || day === 0) ? utcThursday(d) : utcThursday.ceil(d);\n  return pad(utcThursday.count(utcYear(d), d) + (utcYear(d).getUTCDay() === 4), p, 2);\n}\n\nfunction formatUTCWeekdayNumberSunday(d) {\n  return d.getUTCDay();\n}\n\nfunction formatUTCWeekNumberMonday(d, p) {\n  return pad(utcMonday.count(utcYear(d), d), p, 2);\n}\n\nfunction formatUTCYear(d, p) {\n  return pad(d.getUTCFullYear() % 100, p, 2);\n}\n\nfunction formatUTCFullYear(d, p) {\n  return pad(d.getUTCFullYear() % 10000, p, 4);\n}\n\nfunction formatUTCZone() {\n  return \"+0000\";\n}\n\nfunction formatLiteralPercent() {\n  return \"%\";\n}\n\nfunction formatUnixTimestamp(d) {\n  return +d;\n}\n\nfunction formatUnixTimestampSeconds(d) {\n  return Math.floor(+d / 1000);\n}\n","import formatLocale from \"./locale\";\n\nvar locale;\nexport var timeFormat;\nexport var timeParse;\nexport var utcFormat;\nexport var utcParse;\n\ndefaultLocale({\n  dateTime: \"%x, %X\",\n  date: \"%-m/%-d/%Y\",\n  time: \"%-I:%M:%S %p\",\n  periods: [\"AM\", \"PM\"],\n  days: [\"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\"],\n  shortDays: [\"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\"],\n  months: [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"],\n  shortMonths: [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"]\n});\n\nexport default function defaultLocale(definition) {\n  locale = formatLocale(definition);\n  timeFormat = locale.format;\n  timeParse = locale.parse;\n  utcFormat = locale.utcFormat;\n  utcParse = locale.utcParse;\n  return locale;\n}\n","import {utcFormat} from \"./defaultLocale\";\n\nexport var isoSpecifier = \"%Y-%m-%dT%H:%M:%S.%LZ\";\n\nfunction formatIsoNative(date) {\n  return date.toISOString();\n}\n\nvar formatIso = Date.prototype.toISOString\n    ? formatIsoNative\n    : utcFormat(isoSpecifier);\n\nexport default formatIso;\n","import {isoSpecifier} from \"./isoFormat\";\nimport {utcParse} from \"./defaultLocale\";\n\nfunction parseIsoNative(string) {\n  var date = new Date(string);\n  return isNaN(date) ? null : date;\n}\n\nvar parseIso = +new Date(\"2000-01-01T00:00:00.000Z\")\n    ? parseIsoNative\n    : utcParse(isoSpecifier);\n\nexport default parseIso;\n","import {bisector, tickStep} from \"d3-array\";\nimport {interpolateNumber as reinterpolate} from \"d3-interpolate\";\nimport {timeYear, timeMonth, timeWeek, timeDay, timeHour, timeMinute, timeSecond, timeMillisecond} from \"d3-time\";\nimport {timeFormat} from \"d3-time-format\";\nimport {map} from \"./array\";\nimport {default as continuous, copy, deinterpolateLinear as deinterpolate} from \"./continuous\";\nimport nice from \"./nice\";\n\nvar durationSecond = 1000,\n    durationMinute = durationSecond * 60,\n    durationHour = durationMinute * 60,\n    durationDay = durationHour * 24,\n    durationWeek = durationDay * 7,\n    durationMonth = durationDay * 30,\n    durationYear = durationDay * 365;\n\nfunction date(t) {\n  return new Date(t);\n}\n\nfunction number(t) {\n  return t instanceof Date ? +t : +new Date(+t);\n}\n\nexport function calendar(year, month, week, day, hour, minute, second, millisecond, format) {\n  var scale = continuous(deinterpolate, reinterpolate),\n      invert = scale.invert,\n      domain = scale.domain;\n\n  var formatMillisecond = format(\".%L\"),\n      formatSecond = format(\":%S\"),\n      formatMinute = format(\"%I:%M\"),\n      formatHour = format(\"%I %p\"),\n      formatDay = format(\"%a %d\"),\n      formatWeek = format(\"%b %d\"),\n      formatMonth = format(\"%B\"),\n      formatYear = format(\"%Y\");\n\n  var tickIntervals = [\n    [second,  1,      durationSecond],\n    [second,  5,  5 * durationSecond],\n    [second, 15, 15 * durationSecond],\n    [second, 30, 30 * durationSecond],\n    [minute,  1,      durationMinute],\n    [minute,  5,  5 * durationMinute],\n    [minute, 15, 15 * durationMinute],\n    [minute, 30, 30 * durationMinute],\n    [  hour,  1,      durationHour  ],\n    [  hour,  3,  3 * durationHour  ],\n    [  hour,  6,  6 * durationHour  ],\n    [  hour, 12, 12 * durationHour  ],\n    [   day,  1,      durationDay   ],\n    [   day,  2,  2 * durationDay   ],\n    [  week,  1,      durationWeek  ],\n    [ month,  1,      durationMonth ],\n    [ month,  3,  3 * durationMonth ],\n    [  year,  1,      durationYear  ]\n  ];\n\n  function tickFormat(date) {\n    return (second(date) < date ? formatMillisecond\n        : minute(date) < date ? formatSecond\n        : hour(date) < date ? formatMinute\n        : day(date) < date ? formatHour\n        : month(date) < date ? (week(date) < date ? formatDay : formatWeek)\n        : year(date) < date ? formatMonth\n        : formatYear)(date);\n  }\n\n  function tickInterval(interval, start, stop, step) {\n    if (interval == null) interval = 10;\n\n    // If a desired tick count is specified, pick a reasonable tick interval\n    // based on the extent of the domain and a rough estimate of tick size.\n    // Otherwise, assume interval is already a time interval and use it.\n    if (typeof interval === \"number\") {\n      var target = Math.abs(stop - start) / interval,\n          i = bisector(function(i) { return i[2]; }).right(tickIntervals, target);\n      if (i === tickIntervals.length) {\n        step = tickStep(start / durationYear, stop / durationYear, interval);\n        interval = year;\n      } else if (i) {\n        i = tickIntervals[target / tickIntervals[i - 1][2] < tickIntervals[i][2] / target ? i - 1 : i];\n        step = i[1];\n        interval = i[0];\n      } else {\n        step = Math.max(tickStep(start, stop, interval), 1);\n        interval = millisecond;\n      }\n    }\n\n    return step == null ? interval : interval.every(step);\n  }\n\n  scale.invert = function(y) {\n    return new Date(invert(y));\n  };\n\n  scale.domain = function(_) {\n    return arguments.length ? domain(map.call(_, number)) : domain().map(date);\n  };\n\n  scale.ticks = function(interval, step) {\n    var d = domain(),\n        t0 = d[0],\n        t1 = d[d.length - 1],\n        r = t1 < t0,\n        t;\n    if (r) t = t0, t0 = t1, t1 = t;\n    t = tickInterval(interval, t0, t1, step);\n    t = t ? t.range(t0, t1 + 1) : []; // inclusive stop\n    return r ? t.reverse() : t;\n  };\n\n  scale.tickFormat = function(count, specifier) {\n    return specifier == null ? tickFormat : format(specifier);\n  };\n\n  scale.nice = function(interval, step) {\n    var d = domain();\n    return (interval = tickInterval(interval, d[0], d[d.length - 1], step))\n        ? domain(nice(d, interval))\n        : scale;\n  };\n\n  scale.copy = function() {\n    return copy(scale, calendar(year, month, week, day, hour, minute, second, millisecond, format));\n  };\n\n  return scale;\n}\n\nexport default function() {\n  return calendar(timeYear, timeMonth, timeWeek, timeDay, timeHour, timeMinute, timeSecond, timeMillisecond, timeFormat).domain([new Date(2000, 0, 1), new Date(2000, 0, 2)]);\n}\n","export default function(s) {\n  return s.match(/.{6}/g).map(function(x) {\n    return \"#\" + x;\n  });\n}\n","import colors from \"./colors\";\n\nexport default colors(\"1f77b4ff7f0e2ca02cd627289467bd8c564be377c27f7f7fbcbd2217becf\");\n","import colors from \"./colors\";\n\nexport default colors(\"393b795254a36b6ecf9c9ede6379398ca252b5cf6bcedb9c8c6d31bd9e39e7ba52e7cb94843c39ad494ad6616be7969c7b4173a55194ce6dbdde9ed6\");\n","import colors from \"./colors\";\n\nexport default colors(\"1f77b4aec7e8ff7f0effbb782ca02c98df8ad62728ff98969467bdc5b0d58c564bc49c94e377c2f7b6d27f7f7fc7c7c7bcbd22dbdb8d17becf9edae5\");\n","import colors from \"./colors\";\n\nexport default colors(\"3182bd6baed69ecae1c6dbefe6550dfd8d3cfdae6bfdd0a231a35474c476a1d99bc7e9c0756bb19e9ac8bcbddcdadaeb636363969696bdbdbdd9d9d9\");\n","import {cubehelix} from \"d3-color\";\nimport {interpolateCubehelixLong} from \"d3-interpolate\";\n\nexport default interpolateCubehelixLong(cubehelix(300, 0.5, 0.0), cubehelix(-240, 0.5, 1.0));\n","import {cubehelix} from \"d3-color\";\nimport {interpolateCubehelixLong} from \"d3-interpolate\";\n\nexport var warm = interpolateCubehelixLong(cubehelix(-100, 0.75, 0.35), cubehelix(80, 1.50, 0.8));\n\nexport var cool = interpolateCubehelixLong(cubehelix(260, 0.75, 0.35), cubehelix(80, 1.50, 0.8));\n\nvar rainbow = cubehelix();\n\nexport default function(t) {\n  if (t < 0 || t > 1) t -= Math.floor(t);\n  var ts = Math.abs(t - 0.5);\n  rainbow.h = 360 * t - 100;\n  rainbow.s = 1.5 - 1.5 * ts;\n  rainbow.l = 0.8 - 0.9 * ts;\n  return rainbow + \"\";\n}\n","import colors from \"./colors\";\n\nfunction ramp(range) {\n  var n = range.length;\n  return function(t) {\n    return range[Math.max(0, Math.min(n - 1, Math.floor(t * n)))];\n  };\n}\n\nexport default ramp(colors(\"44015444025645045745055946075a46085c460a5d460b5e470d60470e6147106347116447136548146748166848176948186a481a6c481b6d481c6e481d6f481f70482071482173482374482475482576482677482878482979472a7a472c7a472d7b472e7c472f7d46307e46327e46337f463480453581453781453882443983443a83443b84433d84433e85423f854240864241864142874144874045884046883f47883f48893e49893e4a893e4c8a3d4d8a3d4e8a3c4f8a3c508b3b518b3b528b3a538b3a548c39558c39568c38588c38598c375a8c375b8d365c8d365d8d355e8d355f8d34608d34618d33628d33638d32648e32658e31668e31678e31688e30698e306a8e2f6b8e2f6c8e2e6d8e2e6e8e2e6f8e2d708e2d718e2c718e2c728e2c738e2b748e2b758e2a768e2a778e2a788e29798e297a8e297b8e287c8e287d8e277e8e277f8e27808e26818e26828e26828e25838e25848e25858e24868e24878e23888e23898e238a8d228b8d228c8d228d8d218e8d218f8d21908d21918c20928c20928c20938c1f948c1f958b1f968b1f978b1f988b1f998a1f9a8a1e9b8a1e9c891e9d891f9e891f9f881fa0881fa1881fa1871fa28720a38620a48621a58521a68522a78522a88423a98324aa8325ab8225ac8226ad8127ad8128ae8029af7f2ab07f2cb17e2db27d2eb37c2fb47c31b57b32b67a34b67935b77937b87838b9773aba763bbb753dbc743fbc7340bd7242be7144bf7046c06f48c16e4ac16d4cc26c4ec36b50c46a52c56954c56856c66758c7655ac8645cc8635ec96260ca6063cb5f65cb5e67cc5c69cd5b6ccd5a6ece5870cf5773d05675d05477d1537ad1517cd2507fd34e81d34d84d44b86d54989d5488bd6468ed64590d74393d74195d84098d83e9bd93c9dd93ba0da39a2da37a5db36a8db34aadc32addc30b0dd2fb2dd2db5de2bb8de29bade28bddf26c0df25c2df23c5e021c8e020cae11fcde11dd0e11cd2e21bd5e21ad8e219dae319dde318dfe318e2e418e5e419e7e419eae51aece51befe51cf1e51df4e61ef6e620f8e621fbe723fde725\"));\n\nexport var magma = ramp(colors(\"00000401000501010601010802010902020b02020d03030f03031204041405041606051806051a07061c08071e0907200a08220b09240c09260d0a290e0b2b100b2d110c2f120d31130d34140e36150e38160f3b180f3d19103f1a10421c10441d11471e114920114b21114e22115024125325125527125829115a2a115c2c115f2d11612f116331116533106734106936106b38106c390f6e3b0f703d0f713f0f72400f74420f75440f764510774710784910784a10794c117a4e117b4f127b51127c52137c54137d56147d57157e59157e5a167e5c167f5d177f5f187f601880621980641a80651a80671b80681c816a1c816b1d816d1d816e1e81701f81721f817320817521817621817822817922827b23827c23827e24828025828125818326818426818627818827818928818b29818c29818e2a81902a81912b81932b80942c80962c80982d80992d809b2e7f9c2e7f9e2f7fa02f7fa1307ea3307ea5317ea6317da8327daa337dab337cad347cae347bb0357bb2357bb3367ab5367ab73779b83779ba3878bc3978bd3977bf3a77c03a76c23b75c43c75c53c74c73d73c83e73ca3e72cc3f71cd4071cf4070d0416fd2426fd3436ed5446dd6456cd8456cd9466bdb476adc4869de4968df4a68e04c67e24d66e34e65e44f64e55064e75263e85362e95462ea5661eb5760ec5860ed5a5fee5b5eef5d5ef05f5ef1605df2625df2645cf3655cf4675cf4695cf56b5cf66c5cf66e5cf7705cf7725cf8745cf8765cf9785df9795df97b5dfa7d5efa7f5efa815ffb835ffb8560fb8761fc8961fc8a62fc8c63fc8e64fc9065fd9266fd9467fd9668fd9869fd9a6afd9b6bfe9d6cfe9f6dfea16efea36ffea571fea772fea973feaa74feac76feae77feb078feb27afeb47bfeb67cfeb77efeb97ffebb81febd82febf84fec185fec287fec488fec68afec88cfeca8dfecc8ffecd90fecf92fed194fed395fed597fed799fed89afdda9cfddc9efddea0fde0a1fde2a3fde3a5fde5a7fde7a9fde9aafdebacfcecaefceeb0fcf0b2fcf2b4fcf4b6fcf6b8fcf7b9fcf9bbfcfbbdfcfdbf\"));\n\nexport var inferno = ramp(colors(\"00000401000501010601010802010a02020c02020e03021004031204031405041706041907051b08051d09061f0a07220b07240c08260d08290e092b10092d110a30120a32140b34150b37160b39180c3c190c3e1b0c411c0c431e0c451f0c48210c4a230c4c240c4f260c51280b53290b552b0b572d0b592f0a5b310a5c320a5e340a5f3609613809623909633b09643d09653e0966400a67420a68440a68450a69470b6a490b6a4a0c6b4c0c6b4d0d6c4f0d6c510e6c520e6d540f6d550f6d57106e59106e5a116e5c126e5d126e5f136e61136e62146e64156e65156e67166e69166e6a176e6c186e6d186e6f196e71196e721a6e741a6e751b6e771c6d781c6d7a1d6d7c1d6d7d1e6d7f1e6c801f6c82206c84206b85216b87216b88226a8a226a8c23698d23698f24699025689225689326679526679727669827669a28659b29649d29649f2a63a02a63a22b62a32c61a52c60a62d60a82e5fa92e5eab2f5ead305dae305cb0315bb1325ab3325ab43359b63458b73557b93556ba3655bc3754bd3853bf3952c03a51c13a50c33b4fc43c4ec63d4dc73e4cc83f4bca404acb4149cc4248ce4347cf4446d04545d24644d34743d44842d54a41d74b3fd84c3ed94d3dda4e3cdb503bdd513ade5238df5337e05536e15635e25734e35933e45a31e55c30e65d2fe75e2ee8602de9612bea632aeb6429eb6628ec6726ed6925ee6a24ef6c23ef6e21f06f20f1711ff1731df2741cf3761bf37819f47918f57b17f57d15f67e14f68013f78212f78410f8850ff8870ef8890cf98b0bf98c0af98e09fa9008fa9207fa9407fb9606fb9706fb9906fb9b06fb9d07fc9f07fca108fca309fca50afca60cfca80dfcaa0ffcac11fcae12fcb014fcb216fcb418fbb61afbb81dfbba1ffbbc21fbbe23fac026fac228fac42afac62df9c72ff9c932f9cb35f8cd37f8cf3af7d13df7d340f6d543f6d746f5d949f5db4cf4dd4ff4df53f4e156f3e35af3e55df2e661f2e865f2ea69f1ec6df1ed71f1ef75f1f179f2f27df2f482f3f586f3f68af4f88ef5f992f6fa96f8fb9af9fc9dfafda1fcffa4\"));\n\nexport var plasma = ramp(colors(\"0d088710078813078916078a19068c1b068d1d068e20068f2206902406912605912805922a05932c05942e05952f059631059733059735049837049938049a3a049a3c049b3e049c3f049c41049d43039e44039e46039f48039f4903a04b03a14c02a14e02a25002a25102a35302a35502a45601a45801a45901a55b01a55c01a65e01a66001a66100a76300a76400a76600a76700a86900a86a00a86c00a86e00a86f00a87100a87201a87401a87501a87701a87801a87a02a87b02a87d03a87e03a88004a88104a78305a78405a78606a68707a68808a68a09a58b0aa58d0ba58e0ca48f0da4910ea3920fa39410a29511a19613a19814a099159f9a169f9c179e9d189d9e199da01a9ca11b9ba21d9aa31e9aa51f99a62098a72197a82296aa2395ab2494ac2694ad2793ae2892b02991b12a90b22b8fb32c8eb42e8db52f8cb6308bb7318ab83289ba3388bb3488bc3587bd3786be3885bf3984c03a83c13b82c23c81c33d80c43e7fc5407ec6417dc7427cc8437bc9447aca457acb4679cc4778cc4977cd4a76ce4b75cf4c74d04d73d14e72d24f71d35171d45270d5536fd5546ed6556dd7566cd8576bd9586ada5a6ada5b69db5c68dc5d67dd5e66de5f65de6164df6263e06363e16462e26561e26660e3685fe4695ee56a5de56b5de66c5ce76e5be76f5ae87059e97158e97257ea7457eb7556eb7655ec7754ed7953ed7a52ee7b51ef7c51ef7e50f07f4ff0804ef1814df1834cf2844bf3854bf3874af48849f48948f58b47f58c46f68d45f68f44f79044f79143f79342f89441f89540f9973ff9983ef99a3efa9b3dfa9c3cfa9e3bfb9f3afba139fba238fca338fca537fca636fca835fca934fdab33fdac33fdae32fdaf31fdb130fdb22ffdb42ffdb52efeb72dfeb82cfeba2cfebb2bfebd2afebe2afec029fdc229fdc328fdc527fdc627fdc827fdca26fdcb26fccd25fcce25fcd025fcd225fbd324fbd524fbd724fad824fada24f9dc24f9dd25f8df25f8e125f7e225f7e425f6e626f6e826f5e926f5eb27f4ed27f3ee27f3f027f2f227f1f426f1f525f0f724f0f921\"));\n","import {linearish} from \"./linear\";\n\nexport default function sequential(interpolator) {\n  var x0 = 0,\n      x1 = 1,\n      clamp = false;\n\n  function scale(x) {\n    var t = (x - x0) / (x1 - x0);\n    return interpolator(clamp ? Math.max(0, Math.min(1, t)) : t);\n  }\n\n  scale.domain = function(_) {\n    return arguments.length ? (x0 = +_[0], x1 = +_[1], scale) : [x0, x1];\n  };\n\n  scale.clamp = function(_) {\n    return arguments.length ? (clamp = !!_, scale) : clamp;\n  };\n\n  scale.interpolator = function(_) {\n    return arguments.length ? (interpolator = _, scale) : interpolator;\n  };\n\n  scale.copy = function() {\n    return sequential(interpolator).domain([x0, x1]).clamp(clamp);\n  };\n\n  return linearish(scale);\n}\n","export default function(specifier) {\n  var n = specifier.length / 6 | 0, colors = new Array(n), i = 0;\n  while (i < n) colors[i] = \"#\" + specifier.slice(i * 6, ++i * 6);\n  return colors;\n}\n","import colors from \"../colors\";\n\nexport default colors(\"7fc97fbeaed4fdc086ffff99386cb0f0027fbf5b17666666\");\n","import colors from \"../colors\";\n\nexport default colors(\"1f77b4ff7f0e2ca02cd627289467bd8c564be377c27f7f7fbcbd2217becf\");\n","import colors from \"../colors\";\n\nexport default colors(\"1b9e77d95f027570b3e7298a66a61ee6ab02a6761d666666\");\n","import colors from \"../colors\";\n\nexport default colors(\"a6cee31f78b4b2df8a33a02cfb9a99e31a1cfdbf6fff7f00cab2d66a3d9affff99b15928\");\n","import colors from \"../colors\";\n\nexport default colors(\"fbb4aeb3cde3ccebc5decbe4fed9a6ffffcce5d8bdfddaecf2f2f2\");\n","import colors from \"../colors\";\n\nexport default colors(\"b3e2cdfdcdaccbd5e8f4cae4e6f5c9fff2aef1e2cccccccc\");\n","import colors from \"../colors\";\n\nexport default colors(\"e41a1c377eb84daf4a984ea3ff7f00ffff33a65628f781bf999999\");\n","import colors from \"../colors\";\n\nexport default colors(\"66c2a5fc8d628da0cbe78ac3a6d854ffd92fe5c494b3b3b3\");\n","import colors from \"../colors\";\n\nexport default colors(\"8dd3c7ffffb3bebadafb807280b1d3fdb462b3de69fccde5d9d9d9bc80bdccebc5ffed6f\");\n","import {interpolateRgbBasis} from \"d3-interpolate\";\n\nexport default function(scheme) {\n  return interpolateRgbBasis(scheme[scheme.length - 1]);\n}\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"d8b365f5f5f55ab4ac\",\n  \"a6611adfc27d80cdc1018571\",\n  \"a6611adfc27df5f5f580cdc1018571\",\n  \"8c510ad8b365f6e8c3c7eae55ab4ac01665e\",\n  \"8c510ad8b365f6e8c3f5f5f5c7eae55ab4ac01665e\",\n  \"8c510abf812ddfc27df6e8c3c7eae580cdc135978f01665e\",\n  \"8c510abf812ddfc27df6e8c3f5f5f5c7eae580cdc135978f01665e\",\n  \"5430058c510abf812ddfc27df6e8c3c7eae580cdc135978f01665e003c30\",\n  \"5430058c510abf812ddfc27df6e8c3f5f5f5c7eae580cdc135978f01665e003c30\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"af8dc3f7f7f77fbf7b\",\n  \"7b3294c2a5cfa6dba0008837\",\n  \"7b3294c2a5cff7f7f7a6dba0008837\",\n  \"762a83af8dc3e7d4e8d9f0d37fbf7b1b7837\",\n  \"762a83af8dc3e7d4e8f7f7f7d9f0d37fbf7b1b7837\",\n  \"762a839970abc2a5cfe7d4e8d9f0d3a6dba05aae611b7837\",\n  \"762a839970abc2a5cfe7d4e8f7f7f7d9f0d3a6dba05aae611b7837\",\n  \"40004b762a839970abc2a5cfe7d4e8d9f0d3a6dba05aae611b783700441b\",\n  \"40004b762a839970abc2a5cfe7d4e8f7f7f7d9f0d3a6dba05aae611b783700441b\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"e9a3c9f7f7f7a1d76a\",\n  \"d01c8bf1b6dab8e1864dac26\",\n  \"d01c8bf1b6daf7f7f7b8e1864dac26\",\n  \"c51b7de9a3c9fde0efe6f5d0a1d76a4d9221\",\n  \"c51b7de9a3c9fde0eff7f7f7e6f5d0a1d76a4d9221\",\n  \"c51b7dde77aef1b6dafde0efe6f5d0b8e1867fbc414d9221\",\n  \"c51b7dde77aef1b6dafde0eff7f7f7e6f5d0b8e1867fbc414d9221\",\n  \"8e0152c51b7dde77aef1b6dafde0efe6f5d0b8e1867fbc414d9221276419\",\n  \"8e0152c51b7dde77aef1b6dafde0eff7f7f7e6f5d0b8e1867fbc414d9221276419\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"998ec3f7f7f7f1a340\",\n  \"5e3c99b2abd2fdb863e66101\",\n  \"5e3c99b2abd2f7f7f7fdb863e66101\",\n  \"542788998ec3d8daebfee0b6f1a340b35806\",\n  \"542788998ec3d8daebf7f7f7fee0b6f1a340b35806\",\n  \"5427888073acb2abd2d8daebfee0b6fdb863e08214b35806\",\n  \"5427888073acb2abd2d8daebf7f7f7fee0b6fdb863e08214b35806\",\n  \"2d004b5427888073acb2abd2d8daebfee0b6fdb863e08214b358067f3b08\",\n  \"2d004b5427888073acb2abd2d8daebf7f7f7fee0b6fdb863e08214b358067f3b08\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"ef8a62f7f7f767a9cf\",\n  \"ca0020f4a58292c5de0571b0\",\n  \"ca0020f4a582f7f7f792c5de0571b0\",\n  \"b2182bef8a62fddbc7d1e5f067a9cf2166ac\",\n  \"b2182bef8a62fddbc7f7f7f7d1e5f067a9cf2166ac\",\n  \"b2182bd6604df4a582fddbc7d1e5f092c5de4393c32166ac\",\n  \"b2182bd6604df4a582fddbc7f7f7f7d1e5f092c5de4393c32166ac\",\n  \"67001fb2182bd6604df4a582fddbc7d1e5f092c5de4393c32166ac053061\",\n  \"67001fb2182bd6604df4a582fddbc7f7f7f7d1e5f092c5de4393c32166ac053061\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"ef8a62ffffff999999\",\n  \"ca0020f4a582bababa404040\",\n  \"ca0020f4a582ffffffbababa404040\",\n  \"b2182bef8a62fddbc7e0e0e09999994d4d4d\",\n  \"b2182bef8a62fddbc7ffffffe0e0e09999994d4d4d\",\n  \"b2182bd6604df4a582fddbc7e0e0e0bababa8787874d4d4d\",\n  \"b2182bd6604df4a582fddbc7ffffffe0e0e0bababa8787874d4d4d\",\n  \"67001fb2182bd6604df4a582fddbc7e0e0e0bababa8787874d4d4d1a1a1a\",\n  \"67001fb2182bd6604df4a582fddbc7ffffffe0e0e0bababa8787874d4d4d1a1a1a\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"fc8d59ffffbf91bfdb\",\n  \"d7191cfdae61abd9e92c7bb6\",\n  \"d7191cfdae61ffffbfabd9e92c7bb6\",\n  \"d73027fc8d59fee090e0f3f891bfdb4575b4\",\n  \"d73027fc8d59fee090ffffbfe0f3f891bfdb4575b4\",\n  \"d73027f46d43fdae61fee090e0f3f8abd9e974add14575b4\",\n  \"d73027f46d43fdae61fee090ffffbfe0f3f8abd9e974add14575b4\",\n  \"a50026d73027f46d43fdae61fee090e0f3f8abd9e974add14575b4313695\",\n  \"a50026d73027f46d43fdae61fee090ffffbfe0f3f8abd9e974add14575b4313695\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"fc8d59ffffbf91cf60\",\n  \"d7191cfdae61a6d96a1a9641\",\n  \"d7191cfdae61ffffbfa6d96a1a9641\",\n  \"d73027fc8d59fee08bd9ef8b91cf601a9850\",\n  \"d73027fc8d59fee08bffffbfd9ef8b91cf601a9850\",\n  \"d73027f46d43fdae61fee08bd9ef8ba6d96a66bd631a9850\",\n  \"d73027f46d43fdae61fee08bffffbfd9ef8ba6d96a66bd631a9850\",\n  \"a50026d73027f46d43fdae61fee08bd9ef8ba6d96a66bd631a9850006837\",\n  \"a50026d73027f46d43fdae61fee08bffffbfd9ef8ba6d96a66bd631a9850006837\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"fc8d59ffffbf99d594\",\n  \"d7191cfdae61abdda42b83ba\",\n  \"d7191cfdae61ffffbfabdda42b83ba\",\n  \"d53e4ffc8d59fee08be6f59899d5943288bd\",\n  \"d53e4ffc8d59fee08bffffbfe6f59899d5943288bd\",\n  \"d53e4ff46d43fdae61fee08be6f598abdda466c2a53288bd\",\n  \"d53e4ff46d43fdae61fee08bffffbfe6f598abdda466c2a53288bd\",\n  \"9e0142d53e4ff46d43fdae61fee08be6f598abdda466c2a53288bd5e4fa2\",\n  \"9e0142d53e4ff46d43fdae61fee08bffffbfe6f598abdda466c2a53288bd5e4fa2\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"e5f5f999d8c92ca25f\",\n  \"edf8fbb2e2e266c2a4238b45\",\n  \"edf8fbb2e2e266c2a42ca25f006d2c\",\n  \"edf8fbccece699d8c966c2a42ca25f006d2c\",\n  \"edf8fbccece699d8c966c2a441ae76238b45005824\",\n  \"f7fcfde5f5f9ccece699d8c966c2a441ae76238b45005824\",\n  \"f7fcfde5f5f9ccece699d8c966c2a441ae76238b45006d2c00441b\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"e0ecf49ebcda8856a7\",\n  \"edf8fbb3cde38c96c688419d\",\n  \"edf8fbb3cde38c96c68856a7810f7c\",\n  \"edf8fbbfd3e69ebcda8c96c68856a7810f7c\",\n  \"edf8fbbfd3e69ebcda8c96c68c6bb188419d6e016b\",\n  \"f7fcfde0ecf4bfd3e69ebcda8c96c68c6bb188419d6e016b\",\n  \"f7fcfde0ecf4bfd3e69ebcda8c96c68c6bb188419d810f7c4d004b\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"e0f3dba8ddb543a2ca\",\n  \"f0f9e8bae4bc7bccc42b8cbe\",\n  \"f0f9e8bae4bc7bccc443a2ca0868ac\",\n  \"f0f9e8ccebc5a8ddb57bccc443a2ca0868ac\",\n  \"f0f9e8ccebc5a8ddb57bccc44eb3d32b8cbe08589e\",\n  \"f7fcf0e0f3dbccebc5a8ddb57bccc44eb3d32b8cbe08589e\",\n  \"f7fcf0e0f3dbccebc5a8ddb57bccc44eb3d32b8cbe0868ac084081\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"fee8c8fdbb84e34a33\",\n  \"fef0d9fdcc8afc8d59d7301f\",\n  \"fef0d9fdcc8afc8d59e34a33b30000\",\n  \"fef0d9fdd49efdbb84fc8d59e34a33b30000\",\n  \"fef0d9fdd49efdbb84fc8d59ef6548d7301f990000\",\n  \"fff7ecfee8c8fdd49efdbb84fc8d59ef6548d7301f990000\",\n  \"fff7ecfee8c8fdd49efdbb84fc8d59ef6548d7301fb300007f0000\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"ece2f0a6bddb1c9099\",\n  \"f6eff7bdc9e167a9cf02818a\",\n  \"f6eff7bdc9e167a9cf1c9099016c59\",\n  \"f6eff7d0d1e6a6bddb67a9cf1c9099016c59\",\n  \"f6eff7d0d1e6a6bddb67a9cf3690c002818a016450\",\n  \"fff7fbece2f0d0d1e6a6bddb67a9cf3690c002818a016450\",\n  \"fff7fbece2f0d0d1e6a6bddb67a9cf3690c002818a016c59014636\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"ece7f2a6bddb2b8cbe\",\n  \"f1eef6bdc9e174a9cf0570b0\",\n  \"f1eef6bdc9e174a9cf2b8cbe045a8d\",\n  \"f1eef6d0d1e6a6bddb74a9cf2b8cbe045a8d\",\n  \"f1eef6d0d1e6a6bddb74a9cf3690c00570b0034e7b\",\n  \"fff7fbece7f2d0d1e6a6bddb74a9cf3690c00570b0034e7b\",\n  \"fff7fbece7f2d0d1e6a6bddb74a9cf3690c00570b0045a8d023858\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"e7e1efc994c7dd1c77\",\n  \"f1eef6d7b5d8df65b0ce1256\",\n  \"f1eef6d7b5d8df65b0dd1c77980043\",\n  \"f1eef6d4b9dac994c7df65b0dd1c77980043\",\n  \"f1eef6d4b9dac994c7df65b0e7298ace125691003f\",\n  \"f7f4f9e7e1efd4b9dac994c7df65b0e7298ace125691003f\",\n  \"f7f4f9e7e1efd4b9dac994c7df65b0e7298ace125698004367001f\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"fde0ddfa9fb5c51b8a\",\n  \"feebe2fbb4b9f768a1ae017e\",\n  \"feebe2fbb4b9f768a1c51b8a7a0177\",\n  \"feebe2fcc5c0fa9fb5f768a1c51b8a7a0177\",\n  \"feebe2fcc5c0fa9fb5f768a1dd3497ae017e7a0177\",\n  \"fff7f3fde0ddfcc5c0fa9fb5f768a1dd3497ae017e7a0177\",\n  \"fff7f3fde0ddfcc5c0fa9fb5f768a1dd3497ae017e7a017749006a\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"edf8b17fcdbb2c7fb8\",\n  \"ffffcca1dab441b6c4225ea8\",\n  \"ffffcca1dab441b6c42c7fb8253494\",\n  \"ffffccc7e9b47fcdbb41b6c42c7fb8253494\",\n  \"ffffccc7e9b47fcdbb41b6c41d91c0225ea80c2c84\",\n  \"ffffd9edf8b1c7e9b47fcdbb41b6c41d91c0225ea80c2c84\",\n  \"ffffd9edf8b1c7e9b47fcdbb41b6c41d91c0225ea8253494081d58\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"f7fcb9addd8e31a354\",\n  \"ffffccc2e69978c679238443\",\n  \"ffffccc2e69978c67931a354006837\",\n  \"ffffccd9f0a3addd8e78c67931a354006837\",\n  \"ffffccd9f0a3addd8e78c67941ab5d238443005a32\",\n  \"ffffe5f7fcb9d9f0a3addd8e78c67941ab5d238443005a32\",\n  \"ffffe5f7fcb9d9f0a3addd8e78c67941ab5d238443006837004529\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"fff7bcfec44fd95f0e\",\n  \"ffffd4fed98efe9929cc4c02\",\n  \"ffffd4fed98efe9929d95f0e993404\",\n  \"ffffd4fee391fec44ffe9929d95f0e993404\",\n  \"ffffd4fee391fec44ffe9929ec7014cc4c028c2d04\",\n  \"ffffe5fff7bcfee391fec44ffe9929ec7014cc4c028c2d04\",\n  \"ffffe5fff7bcfee391fec44ffe9929ec7014cc4c02993404662506\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"ffeda0feb24cf03b20\",\n  \"ffffb2fecc5cfd8d3ce31a1c\",\n  \"ffffb2fecc5cfd8d3cf03b20bd0026\",\n  \"ffffb2fed976feb24cfd8d3cf03b20bd0026\",\n  \"ffffb2fed976feb24cfd8d3cfc4e2ae31a1cb10026\",\n  \"ffffccffeda0fed976feb24cfd8d3cfc4e2ae31a1cb10026\",\n  \"ffffccffeda0fed976feb24cfd8d3cfc4e2ae31a1cbd0026800026\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"deebf79ecae13182bd\",\n  \"eff3ffbdd7e76baed62171b5\",\n  \"eff3ffbdd7e76baed63182bd08519c\",\n  \"eff3ffc6dbef9ecae16baed63182bd08519c\",\n  \"eff3ffc6dbef9ecae16baed64292c62171b5084594\",\n  \"f7fbffdeebf7c6dbef9ecae16baed64292c62171b5084594\",\n  \"f7fbffdeebf7c6dbef9ecae16baed64292c62171b508519c08306b\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"e5f5e0a1d99b31a354\",\n  \"edf8e9bae4b374c476238b45\",\n  \"edf8e9bae4b374c47631a354006d2c\",\n  \"edf8e9c7e9c0a1d99b74c47631a354006d2c\",\n  \"edf8e9c7e9c0a1d99b74c47641ab5d238b45005a32\",\n  \"f7fcf5e5f5e0c7e9c0a1d99b74c47641ab5d238b45005a32\",\n  \"f7fcf5e5f5e0c7e9c0a1d99b74c47641ab5d238b45006d2c00441b\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"f0f0f0bdbdbd636363\",\n  \"f7f7f7cccccc969696525252\",\n  \"f7f7f7cccccc969696636363252525\",\n  \"f7f7f7d9d9d9bdbdbd969696636363252525\",\n  \"f7f7f7d9d9d9bdbdbd969696737373525252252525\",\n  \"fffffff0f0f0d9d9d9bdbdbd969696737373525252252525\",\n  \"fffffff0f0f0d9d9d9bdbdbd969696737373525252252525000000\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"efedf5bcbddc756bb1\",\n  \"f2f0f7cbc9e29e9ac86a51a3\",\n  \"f2f0f7cbc9e29e9ac8756bb154278f\",\n  \"f2f0f7dadaebbcbddc9e9ac8756bb154278f\",\n  \"f2f0f7dadaebbcbddc9e9ac8807dba6a51a34a1486\",\n  \"fcfbfdefedf5dadaebbcbddc9e9ac8807dba6a51a34a1486\",\n  \"fcfbfdefedf5dadaebbcbddc9e9ac8807dba6a51a354278f3f007d\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"fee0d2fc9272de2d26\",\n  \"fee5d9fcae91fb6a4acb181d\",\n  \"fee5d9fcae91fb6a4ade2d26a50f15\",\n  \"fee5d9fcbba1fc9272fb6a4ade2d26a50f15\",\n  \"fee5d9fcbba1fc9272fb6a4aef3b2ccb181d99000d\",\n  \"fff5f0fee0d2fcbba1fc9272fb6a4aef3b2ccb181d99000d\",\n  \"fff5f0fee0d2fcbba1fc9272fb6a4aef3b2ccb181da50f1567000d\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"fee6cefdae6be6550d\",\n  \"feeddefdbe85fd8d3cd94701\",\n  \"feeddefdbe85fd8d3ce6550da63603\",\n  \"feeddefdd0a2fdae6bfd8d3ce6550da63603\",\n  \"feeddefdd0a2fdae6bfd8d3cf16913d948018c2d04\",\n  \"fff5ebfee6cefdd0a2fdae6bfd8d3cf16913d948018c2d04\",\n  \"fff5ebfee6cefdd0a2fdae6bfd8d3cf16913d94801a636037f2704\"\n).map(colors);\n\nexport default ramp(scheme);\n","import {cubehelix} from \"d3-color\";\nimport {interpolateCubehelixLong} from \"d3-interpolate\";\n\nexport default interpolateCubehelixLong(cubehelix(300, 0.5, 0.0), cubehelix(-240, 0.5, 1.0));\n","import {cubehelix} from \"d3-color\";\nimport {interpolateCubehelixLong} from \"d3-interpolate\";\n\nexport var warm = interpolateCubehelixLong(cubehelix(-100, 0.75, 0.35), cubehelix(80, 1.50, 0.8));\n\nexport var cool = interpolateCubehelixLong(cubehelix(260, 0.75, 0.35), cubehelix(80, 1.50, 0.8));\n\nvar c = cubehelix();\n\nexport default function(t) {\n  if (t < 0 || t > 1) t -= Math.floor(t);\n  var ts = Math.abs(t - 0.5);\n  c.h = 360 * t - 100;\n  c.s = 1.5 - 1.5 * ts;\n  c.l = 0.8 - 0.9 * ts;\n  return c + \"\";\n}\n","import {rgb} from \"d3-color\";\n\nvar c = rgb(),\n    pi_1_3 = Math.PI / 3,\n    pi_2_3 = Math.PI * 2 / 3;\n\nexport default function(t) {\n  var x;\n  t = (0.5 - t) * Math.PI;\n  c.r = 255 * (x = Math.sin(t)) * x;\n  c.g = 255 * (x = Math.sin(t + pi_1_3)) * x;\n  c.b = 255 * (x = Math.sin(t + pi_2_3)) * x;\n  return c + \"\";\n}\n","import colors from \"../colors\";\n\nfunction ramp(range) {\n  var n = range.length;\n  return function(t) {\n    return range[Math.max(0, Math.min(n - 1, Math.floor(t * n)))];\n  };\n}\n\nexport default ramp(colors(\"44015444025645045745055946075a46085c460a5d460b5e470d60470e6147106347116447136548146748166848176948186a481a6c481b6d481c6e481d6f481f70482071482173482374482475482576482677482878482979472a7a472c7a472d7b472e7c472f7d46307e46327e46337f463480453581453781453882443983443a83443b84433d84433e85423f854240864241864142874144874045884046883f47883f48893e49893e4a893e4c8a3d4d8a3d4e8a3c4f8a3c508b3b518b3b528b3a538b3a548c39558c39568c38588c38598c375a8c375b8d365c8d365d8d355e8d355f8d34608d34618d33628d33638d32648e32658e31668e31678e31688e30698e306a8e2f6b8e2f6c8e2e6d8e2e6e8e2e6f8e2d708e2d718e2c718e2c728e2c738e2b748e2b758e2a768e2a778e2a788e29798e297a8e297b8e287c8e287d8e277e8e277f8e27808e26818e26828e26828e25838e25848e25858e24868e24878e23888e23898e238a8d228b8d228c8d228d8d218e8d218f8d21908d21918c20928c20928c20938c1f948c1f958b1f968b1f978b1f988b1f998a1f9a8a1e9b8a1e9c891e9d891f9e891f9f881fa0881fa1881fa1871fa28720a38620a48621a58521a68522a78522a88423a98324aa8325ab8225ac8226ad8127ad8128ae8029af7f2ab07f2cb17e2db27d2eb37c2fb47c31b57b32b67a34b67935b77937b87838b9773aba763bbb753dbc743fbc7340bd7242be7144bf7046c06f48c16e4ac16d4cc26c4ec36b50c46a52c56954c56856c66758c7655ac8645cc8635ec96260ca6063cb5f65cb5e67cc5c69cd5b6ccd5a6ece5870cf5773d05675d05477d1537ad1517cd2507fd34e81d34d84d44b86d54989d5488bd6468ed64590d74393d74195d84098d83e9bd93c9dd93ba0da39a2da37a5db36a8db34aadc32addc30b0dd2fb2dd2db5de2bb8de29bade28bddf26c0df25c2df23c5e021c8e020cae11fcde11dd0e11cd2e21bd5e21ad8e219dae319dde318dfe318e2e418e5e419e7e419eae51aece51befe51cf1e51df4e61ef6e620f8e621fbe723fde725\"));\n\nexport var magma = ramp(colors(\"00000401000501010601010802010902020b02020d03030f03031204041405041606051806051a07061c08071e0907200a08220b09240c09260d0a290e0b2b100b2d110c2f120d31130d34140e36150e38160f3b180f3d19103f1a10421c10441d11471e114920114b21114e22115024125325125527125829115a2a115c2c115f2d11612f116331116533106734106936106b38106c390f6e3b0f703d0f713f0f72400f74420f75440f764510774710784910784a10794c117a4e117b4f127b51127c52137c54137d56147d57157e59157e5a167e5c167f5d177f5f187f601880621980641a80651a80671b80681c816a1c816b1d816d1d816e1e81701f81721f817320817521817621817822817922827b23827c23827e24828025828125818326818426818627818827818928818b29818c29818e2a81902a81912b81932b80942c80962c80982d80992d809b2e7f9c2e7f9e2f7fa02f7fa1307ea3307ea5317ea6317da8327daa337dab337cad347cae347bb0357bb2357bb3367ab5367ab73779b83779ba3878bc3978bd3977bf3a77c03a76c23b75c43c75c53c74c73d73c83e73ca3e72cc3f71cd4071cf4070d0416fd2426fd3436ed5446dd6456cd8456cd9466bdb476adc4869de4968df4a68e04c67e24d66e34e65e44f64e55064e75263e85362e95462ea5661eb5760ec5860ed5a5fee5b5eef5d5ef05f5ef1605df2625df2645cf3655cf4675cf4695cf56b5cf66c5cf66e5cf7705cf7725cf8745cf8765cf9785df9795df97b5dfa7d5efa7f5efa815ffb835ffb8560fb8761fc8961fc8a62fc8c63fc8e64fc9065fd9266fd9467fd9668fd9869fd9a6afd9b6bfe9d6cfe9f6dfea16efea36ffea571fea772fea973feaa74feac76feae77feb078feb27afeb47bfeb67cfeb77efeb97ffebb81febd82febf84fec185fec287fec488fec68afec88cfeca8dfecc8ffecd90fecf92fed194fed395fed597fed799fed89afdda9cfddc9efddea0fde0a1fde2a3fde3a5fde5a7fde7a9fde9aafdebacfcecaefceeb0fcf0b2fcf2b4fcf4b6fcf6b8fcf7b9fcf9bbfcfbbdfcfdbf\"));\n\nexport var inferno = ramp(colors(\"00000401000501010601010802010a02020c02020e03021004031204031405041706041907051b08051d09061f0a07220b07240c08260d08290e092b10092d110a30120a32140b34150b37160b39180c3c190c3e1b0c411c0c431e0c451f0c48210c4a230c4c240c4f260c51280b53290b552b0b572d0b592f0a5b310a5c320a5e340a5f3609613809623909633b09643d09653e0966400a67420a68440a68450a69470b6a490b6a4a0c6b4c0c6b4d0d6c4f0d6c510e6c520e6d540f6d550f6d57106e59106e5a116e5c126e5d126e5f136e61136e62146e64156e65156e67166e69166e6a176e6c186e6d186e6f196e71196e721a6e741a6e751b6e771c6d781c6d7a1d6d7c1d6d7d1e6d7f1e6c801f6c82206c84206b85216b87216b88226a8a226a8c23698d23698f24699025689225689326679526679727669827669a28659b29649d29649f2a63a02a63a22b62a32c61a52c60a62d60a82e5fa92e5eab2f5ead305dae305cb0315bb1325ab3325ab43359b63458b73557b93556ba3655bc3754bd3853bf3952c03a51c13a50c33b4fc43c4ec63d4dc73e4cc83f4bca404acb4149cc4248ce4347cf4446d04545d24644d34743d44842d54a41d74b3fd84c3ed94d3dda4e3cdb503bdd513ade5238df5337e05536e15635e25734e35933e45a31e55c30e65d2fe75e2ee8602de9612bea632aeb6429eb6628ec6726ed6925ee6a24ef6c23ef6e21f06f20f1711ff1731df2741cf3761bf37819f47918f57b17f57d15f67e14f68013f78212f78410f8850ff8870ef8890cf98b0bf98c0af98e09fa9008fa9207fa9407fb9606fb9706fb9906fb9b06fb9d07fc9f07fca108fca309fca50afca60cfca80dfcaa0ffcac11fcae12fcb014fcb216fcb418fbb61afbb81dfbba1ffbbc21fbbe23fac026fac228fac42afac62df9c72ff9c932f9cb35f8cd37f8cf3af7d13df7d340f6d543f6d746f5d949f5db4cf4dd4ff4df53f4e156f3e35af3e55df2e661f2e865f2ea69f1ec6df1ed71f1ef75f1f179f2f27df2f482f3f586f3f68af4f88ef5f992f6fa96f8fb9af9fc9dfafda1fcffa4\"));\n\nexport var plasma = ramp(colors(\"0d088710078813078916078a19068c1b068d1d068e20068f2206902406912605912805922a05932c05942e05952f059631059733059735049837049938049a3a049a3c049b3e049c3f049c41049d43039e44039e46039f48039f4903a04b03a14c02a14e02a25002a25102a35302a35502a45601a45801a45901a55b01a55c01a65e01a66001a66100a76300a76400a76600a76700a86900a86a00a86c00a86e00a86f00a87100a87201a87401a87501a87701a87801a87a02a87b02a87d03a87e03a88004a88104a78305a78405a78606a68707a68808a68a09a58b0aa58d0ba58e0ca48f0da4910ea3920fa39410a29511a19613a19814a099159f9a169f9c179e9d189d9e199da01a9ca11b9ba21d9aa31e9aa51f99a62098a72197a82296aa2395ab2494ac2694ad2793ae2892b02991b12a90b22b8fb32c8eb42e8db52f8cb6308bb7318ab83289ba3388bb3488bc3587bd3786be3885bf3984c03a83c13b82c23c81c33d80c43e7fc5407ec6417dc7427cc8437bc9447aca457acb4679cc4778cc4977cd4a76ce4b75cf4c74d04d73d14e72d24f71d35171d45270d5536fd5546ed6556dd7566cd8576bd9586ada5a6ada5b69db5c68dc5d67dd5e66de5f65de6164df6263e06363e16462e26561e26660e3685fe4695ee56a5de56b5de66c5ce76e5be76f5ae87059e97158e97257ea7457eb7556eb7655ec7754ed7953ed7a52ee7b51ef7c51ef7e50f07f4ff0804ef1814df1834cf2844bf3854bf3874af48849f48948f58b47f58c46f68d45f68f44f79044f79143f79342f89441f89540f9973ff9983ef99a3efa9b3dfa9c3cfa9e3bfb9f3afba139fba238fca338fca537fca636fca835fca934fdab33fdac33fdae32fdaf31fdb130fdb22ffdb42ffdb52efeb72dfeb82cfeba2cfebb2bfebd2afebe2afec029fdc229fdc328fdc527fdc627fdc827fdca26fdcb26fccd25fcce25fcd025fcd225fbd324fbd524fbd724fad824fada24f9dc24f9dd25f8df25f8e125f7e225f7e425f6e626f6e826f5e926f5eb27f4ed27f3ee27f3f027f2f227f1f426f1f525f0f724f0f921\"));\n","export const UNIT_GLOBAL_NAMESPACE = 'app.units';\nexport const UNIT_LOCAL_NAMESPACE = 'local.units';\nexport const LAYER_LOCAL_NAMESPACE = 'local.layers';\nexport const LAYER_GLOBAL_NAMESPACE = 'app.layers';\nexport const GROUP_GLOBAL_NAMESPACE = 'app.group';\nexport const GROUP_LOCAL_NAMESPACE = 'local.group';\nexport const CANVAS_LOCAL_NAMESPACE = 'local.canvas';\nexport const CANVAS_GLOBAL_NAMESPACE = 'app.canvas';\n\n","const ReservedFields = {\n    ROW_ID: '__id__'\n};\n\nexport default ReservedFields;\n","const CommonProps = {\n    ACTION_INF: 'actionInf',\n    ON_LAYER_DRAW: 'onLayerDraw',\n    MATRIX_CREATED: 'matrixCreated'\n};\n\nexport default CommonProps;\n","export var slice = Array.prototype.slice;\n","export default function(x) {\n  return x;\n}\n","import {slice} from \"./array\";\nimport identity from \"./identity\";\n\nvar top = 1,\n    right = 2,\n    bottom = 3,\n    left = 4,\n    epsilon = 1e-6;\n\nfunction translateX(x) {\n  return \"translate(\" + (x + 0.5) + \",0)\";\n}\n\nfunction translateY(y) {\n  return \"translate(0,\" + (y + 0.5) + \")\";\n}\n\nfunction number(scale) {\n  return function(d) {\n    return +scale(d);\n  };\n}\n\nfunction center(scale) {\n  var offset = Math.max(0, scale.bandwidth() - 1) / 2; // Adjust for 0.5px offset.\n  if (scale.round()) offset = Math.round(offset);\n  return function(d) {\n    return +scale(d) + offset;\n  };\n}\n\nfunction entering() {\n  return !this.__axis;\n}\n\nfunction axis(orient, scale) {\n  var tickArguments = [],\n      tickValues = null,\n      tickFormat = null,\n      tickTransform = null,\n      tickSizeInner = 6,\n      tickSizeOuter = 6,\n      tickPadding = 3,\n      k = orient === top || orient === left ? -1 : 1,\n      x = orient === left || orient === right ? \"x\" : \"y\",\n      transform = orient === top || orient === bottom ? translateX : translateY;\n\n  function axis(context) {\n    var values = tickValues == null ? (scale.ticks ? scale.ticks.apply(scale, tickArguments) : scale.domain()) : tickValues,\n        format = tickFormat == null ? (scale.tickFormat ? scale.tickFormat.apply(scale, tickArguments) : identity) : tickFormat,\n        spacing = Math.max(tickSizeInner, 0) + tickPadding,\n        range = scale.range(),\n        range0 = +range[0] + 0.5,\n        range1 = +range[range.length - 1] + 0.5,\n        position = (scale.bandwidth ? center : number)(scale.copy()),\n        selection = context.selection ? context.selection() : context,\n        path = selection.selectAll(\".domain\").data([null]),\n        tick = selection.selectAll(\".tick\").data(values, scale).order(),\n        tickExit = tick.exit(),\n        tickEnter = tick.enter().append(\"g\").attr(\"class\", \"tick\"),\n        line = tick.select(\"line\"),\n        text = tick.select(\"text\");\n\n    path = path.merge(path.enter().insert(\"path\", \".tick\")\n        .attr(\"class\", \"domain\")\n        .attr(\"stroke\", \"#000\"));\n\n    tick = tick.merge(tickEnter);\n\n    line = line.merge(tickEnter.append(\"line\")\n        .attr(\"stroke\", \"#000\")\n        .attr(x + \"2\", k * tickSizeInner));\n\n    text = text.merge(tickEnter.append(\"text\")\n        .attr(\"fill\", \"#000\")\n        .attr(x, k * spacing)\n        .attr(\"dy\", orient === top ? \"0em\" : orient === bottom ? \"0.71em\" : \"0.32em\"))\n        .style('transform', tickTransform);\n\n    if (context !== selection) {\n      path = path.transition(context);\n      tick = tick.transition(context);\n      line = line.transition(context);\n      text = text.transition(context);\n\n      tickExit = tickExit.transition(context)\n          .attr(\"opacity\", epsilon)\n          .attr(\"transform\", function(d) { return isFinite(d = position(d)) ? transform(d) : this.getAttribute(\"transform\"); });\n\n      tickEnter\n          .attr(\"opacity\", epsilon)\n          .attr(\"transform\", function(d) { var p = this.parentNode.__axis; return transform(p && isFinite(p = p(d)) ? p : position(d)); });\n    }\n\n    tickExit.remove();\n\n    path\n        .attr(\"d\", orient === left || orient == right\n            ? \"M\" + k * tickSizeOuter + \",\" + range0 + \"H0.5V\" + range1 + \"H\" + k * tickSizeOuter\n            : \"M\" + range0 + \",\" + k * tickSizeOuter + \"V0.5H\" + range1 + \"V\" + k * tickSizeOuter);\n\n    tick\n        .attr(\"opacity\", 1)\n        .attr(\"transform\", function(d) { return transform(position(d)); });\n\n    line\n        .attr(x + \"2\", k * tickSizeInner);\n\n    text\n        .attr(x, k * spacing)\n        .text(format);\n\n    selection.filter(entering)\n        .attr(\"fill\", \"none\")\n        .attr(\"font-size\", 10)\n        .attr(\"font-family\", \"sans-serif\")\n        .attr(\"text-anchor\", orient === right ? \"start\" : orient === left ? \"end\" : \"middle\");\n\n    selection\n        .each(function() { this.__axis = position; });\n  }\n\n  axis.scale = function(_) {\n    return arguments.length ? (scale = _, axis) : scale;\n  };\n\n  axis.tickTransform = function(_) {\n    return arguments.length ? (tickTransform = _, axis) : tickTransform;\n  };\n\n  axis.ticks = function() {\n    return tickArguments = slice.call(arguments), axis;\n  };\n\n  axis.tickArguments = function(_) {\n    return arguments.length ? (tickArguments = _ == null ? [] : slice.call(_), axis) : tickArguments.slice();\n  };\n\n  axis.tickValues = function(_) {\n    return arguments.length ? (tickValues = _ == null ? null : slice.call(_), axis) : tickValues && tickValues.slice();\n  };\n\n  axis.tickFormat = function(_) {\n    return arguments.length ? (tickFormat = _, axis) : tickFormat;\n  };\n\n  axis.tickSize = function(_) {\n    return arguments.length ? (tickSizeInner = tickSizeOuter = +_, axis) : tickSizeInner;\n  };\n\n  axis.tickSizeInner = function(_) {\n    return arguments.length ? (tickSizeInner = +_, axis) : tickSizeInner;\n  };\n\n  axis.tickSizeOuter = function(_) {\n    return arguments.length ? (tickSizeOuter = +_, axis) : tickSizeOuter;\n  };\n\n  axis.tickPadding = function(_) {\n    return arguments.length ? (tickPadding = +_, axis) : tickPadding;\n  };\n\n  return axis;\n}\n\nexport function axisTop(scale) {\n  return axis(top, scale);\n}\n\nexport function axisRight(scale) {\n  return axis(right, scale);\n}\n\nexport function axisBottom(scale) {\n  return axis(bottom, scale);\n}\n\nexport function axisLeft(scale) {\n  return axis(left, scale);\n}\n","var pi = Math.PI,\n    tau = 2 * pi,\n    epsilon = 1e-6,\n    tauEpsilon = tau - epsilon;\n\nfunction Path() {\n  this._x0 = this._y0 = // start of current subpath\n  this._x1 = this._y1 = null; // end of current subpath\n  this._ = \"\";\n}\n\nfunction path() {\n  return new Path;\n}\n\nPath.prototype = path.prototype = {\n  constructor: Path,\n  moveTo: function(x, y) {\n    this._ += \"M\" + (this._x0 = this._x1 = +x) + \",\" + (this._y0 = this._y1 = +y);\n  },\n  closePath: function() {\n    if (this._x1 !== null) {\n      this._x1 = this._x0, this._y1 = this._y0;\n      this._ += \"Z\";\n    }\n  },\n  lineTo: function(x, y) {\n    this._ += \"L\" + (this._x1 = +x) + \",\" + (this._y1 = +y);\n  },\n  quadraticCurveTo: function(x1, y1, x, y) {\n    this._ += \"Q\" + (+x1) + \",\" + (+y1) + \",\" + (this._x1 = +x) + \",\" + (this._y1 = +y);\n  },\n  bezierCurveTo: function(x1, y1, x2, y2, x, y) {\n    this._ += \"C\" + (+x1) + \",\" + (+y1) + \",\" + (+x2) + \",\" + (+y2) + \",\" + (this._x1 = +x) + \",\" + (this._y1 = +y);\n  },\n  arcTo: function(x1, y1, x2, y2, r) {\n    x1 = +x1, y1 = +y1, x2 = +x2, y2 = +y2, r = +r;\n    var x0 = this._x1,\n        y0 = this._y1,\n        x21 = x2 - x1,\n        y21 = y2 - y1,\n        x01 = x0 - x1,\n        y01 = y0 - y1,\n        l01_2 = x01 * x01 + y01 * y01;\n\n    // Is the radius negative? Error.\n    if (r < 0) throw new Error(\"negative radius: \" + r);\n\n    // Is this path empty? Move to (x1,y1).\n    if (this._x1 === null) {\n      this._ += \"M\" + (this._x1 = x1) + \",\" + (this._y1 = y1);\n    }\n\n    // Or, is (x1,y1) coincident with (x0,y0)? Do nothing.\n    else if (!(l01_2 > epsilon));\n\n    // Or, are (x0,y0), (x1,y1) and (x2,y2) collinear?\n    // Equivalently, is (x1,y1) coincident with (x2,y2)?\n    // Or, is the radius zero? Line to (x1,y1).\n    else if (!(Math.abs(y01 * x21 - y21 * x01) > epsilon) || !r) {\n      this._ += \"L\" + (this._x1 = x1) + \",\" + (this._y1 = y1);\n    }\n\n    // Otherwise, draw an arc!\n    else {\n      var x20 = x2 - x0,\n          y20 = y2 - y0,\n          l21_2 = x21 * x21 + y21 * y21,\n          l20_2 = x20 * x20 + y20 * y20,\n          l21 = Math.sqrt(l21_2),\n          l01 = Math.sqrt(l01_2),\n          l = r * Math.tan((pi - Math.acos((l21_2 + l01_2 - l20_2) / (2 * l21 * l01))) / 2),\n          t01 = l / l01,\n          t21 = l / l21;\n\n      // If the start tangent is not coincident with (x0,y0), line to.\n      if (Math.abs(t01 - 1) > epsilon) {\n        this._ += \"L\" + (x1 + t01 * x01) + \",\" + (y1 + t01 * y01);\n      }\n\n      this._ += \"A\" + r + \",\" + r + \",0,0,\" + (+(y01 * x20 > x01 * y20)) + \",\" + (this._x1 = x1 + t21 * x21) + \",\" + (this._y1 = y1 + t21 * y21);\n    }\n  },\n  arc: function(x, y, r, a0, a1, ccw) {\n    x = +x, y = +y, r = +r;\n    var dx = r * Math.cos(a0),\n        dy = r * Math.sin(a0),\n        x0 = x + dx,\n        y0 = y + dy,\n        cw = 1 ^ ccw,\n        da = ccw ? a0 - a1 : a1 - a0;\n\n    // Is the radius negative? Error.\n    if (r < 0) throw new Error(\"negative radius: \" + r);\n\n    // Is this path empty? Move to (x0,y0).\n    if (this._x1 === null) {\n      this._ += \"M\" + x0 + \",\" + y0;\n    }\n\n    // Or, is (x0,y0) not coincident with the previous point? Line to (x0,y0).\n    else if (Math.abs(this._x1 - x0) > epsilon || Math.abs(this._y1 - y0) > epsilon) {\n      this._ += \"L\" + x0 + \",\" + y0;\n    }\n\n    // Is this arc empty? We’re done.\n    if (!r) return;\n\n    // Does the angle go the wrong way? Flip the direction.\n    if (da < 0) da = da % tau + tau;\n\n    // Is this a complete circle? Draw two arcs to complete the circle.\n    if (da > tauEpsilon) {\n      this._ += \"A\" + r + \",\" + r + \",0,1,\" + cw + \",\" + (x - dx) + \",\" + (y - dy) + \"A\" + r + \",\" + r + \",0,1,\" + cw + \",\" + (this._x1 = x0) + \",\" + (this._y1 = y0);\n    }\n\n    // Is this arc non-empty? Draw an arc!\n    else if (da > epsilon) {\n      this._ += \"A\" + r + \",\" + r + \",0,\" + (+(da >= pi)) + \",\" + cw + \",\" + (this._x1 = x + r * Math.cos(a1)) + \",\" + (this._y1 = y + r * Math.sin(a1));\n    }\n  },\n  rect: function(x, y, w, h) {\n    this._ += \"M\" + (this._x0 = this._x1 = +x) + \",\" + (this._y0 = this._y1 = +y) + \"h\" + (+w) + \"v\" + (+h) + \"h\" + (-w) + \"Z\";\n  },\n  toString: function() {\n    return this._;\n  }\n};\n\nexport default path;\n","export default function(x) {\n  return function constant() {\n    return x;\n  };\n}\n","export var abs = Math.abs;\nexport var atan2 = Math.atan2;\nexport var cos = Math.cos;\nexport var max = Math.max;\nexport var min = Math.min;\nexport var sin = Math.sin;\nexport var sqrt = Math.sqrt;\n\nexport var epsilon = 1e-12;\nexport var pi = Math.PI;\nexport var halfPi = pi / 2;\nexport var tau = 2 * pi;\n\nexport function acos(x) {\n  return x > 1 ? 0 : x < -1 ? pi : Math.acos(x);\n}\n\nexport function asin(x) {\n  return x >= 1 ? halfPi : x <= -1 ? -halfPi : Math.asin(x);\n}\n","import {path} from \"d3-path\";\nimport constant from \"./constant\";\nimport {abs, acos, asin, atan2, cos, epsilon, halfPi, max, min, pi, sin, sqrt, tau} from \"./math\";\n\nfunction arcInnerRadius(d) {\n  return d.innerRadius;\n}\n\nfunction arcOuterRadius(d) {\n  return d.outerRadius;\n}\n\nfunction arcStartAngle(d) {\n  return d.startAngle;\n}\n\nfunction arcEndAngle(d) {\n  return d.endAngle;\n}\n\nfunction arcPadAngle(d) {\n  return d && d.padAngle; // Note: optional!\n}\n\nfunction intersect(x0, y0, x1, y1, x2, y2, x3, y3) {\n  var x10 = x1 - x0, y10 = y1 - y0,\n      x32 = x3 - x2, y32 = y3 - y2,\n      t = (x32 * (y0 - y2) - y32 * (x0 - x2)) / (y32 * x10 - x32 * y10);\n  return [x0 + t * x10, y0 + t * y10];\n}\n\n// Compute perpendicular offset line of length rc.\n// http://mathworld.wolfram.com/Circle-LineIntersection.html\nfunction cornerTangents(x0, y0, x1, y1, r1, rc, cw) {\n  var x01 = x0 - x1,\n      y01 = y0 - y1,\n      lo = (cw ? rc : -rc) / sqrt(x01 * x01 + y01 * y01),\n      ox = lo * y01,\n      oy = -lo * x01,\n      x11 = x0 + ox,\n      y11 = y0 + oy,\n      x10 = x1 + ox,\n      y10 = y1 + oy,\n      x00 = (x11 + x10) / 2,\n      y00 = (y11 + y10) / 2,\n      dx = x10 - x11,\n      dy = y10 - y11,\n      d2 = dx * dx + dy * dy,\n      r = r1 - rc,\n      D = x11 * y10 - x10 * y11,\n      d = (dy < 0 ? -1 : 1) * sqrt(max(0, r * r * d2 - D * D)),\n      cx0 = (D * dy - dx * d) / d2,\n      cy0 = (-D * dx - dy * d) / d2,\n      cx1 = (D * dy + dx * d) / d2,\n      cy1 = (-D * dx + dy * d) / d2,\n      dx0 = cx0 - x00,\n      dy0 = cy0 - y00,\n      dx1 = cx1 - x00,\n      dy1 = cy1 - y00;\n\n  // Pick the closer of the two intersection points.\n  // TODO Is there a faster way to determine which intersection to use?\n  if (dx0 * dx0 + dy0 * dy0 > dx1 * dx1 + dy1 * dy1) cx0 = cx1, cy0 = cy1;\n\n  return {\n    cx: cx0,\n    cy: cy0,\n    x01: -ox,\n    y01: -oy,\n    x11: cx0 * (r1 / r - 1),\n    y11: cy0 * (r1 / r - 1)\n  };\n}\n\nexport default function() {\n  var innerRadius = arcInnerRadius,\n      outerRadius = arcOuterRadius,\n      cornerRadius = constant(0),\n      padRadius = null,\n      startAngle = arcStartAngle,\n      endAngle = arcEndAngle,\n      padAngle = arcPadAngle,\n      context = null;\n\n  function arc() {\n    var buffer,\n        r,\n        r0 = +innerRadius.apply(this, arguments),\n        r1 = +outerRadius.apply(this, arguments),\n        a0 = startAngle.apply(this, arguments) - halfPi,\n        a1 = endAngle.apply(this, arguments) - halfPi,\n        da = abs(a1 - a0),\n        cw = a1 > a0;\n\n    if (!context) context = buffer = path();\n\n    // Ensure that the outer radius is always larger than the inner radius.\n    if (r1 < r0) r = r1, r1 = r0, r0 = r;\n\n    // Is it a point?\n    if (!(r1 > epsilon)) context.moveTo(0, 0);\n\n    // Or is it a circle or annulus?\n    else if (da > tau - epsilon) {\n      context.moveTo(r1 * cos(a0), r1 * sin(a0));\n      context.arc(0, 0, r1, a0, a1, !cw);\n      if (r0 > epsilon) {\n        context.moveTo(r0 * cos(a1), r0 * sin(a1));\n        context.arc(0, 0, r0, a1, a0, cw);\n      }\n    }\n\n    // Or is it a circular or annular sector?\n    else {\n      var a01 = a0,\n          a11 = a1,\n          a00 = a0,\n          a10 = a1,\n          da0 = da,\n          da1 = da,\n          ap = padAngle.apply(this, arguments) / 2,\n          rp = (ap > epsilon) && (padRadius ? +padRadius.apply(this, arguments) : sqrt(r0 * r0 + r1 * r1)),\n          rc = min(abs(r1 - r0) / 2, +cornerRadius.apply(this, arguments)),\n          rc0 = rc,\n          rc1 = rc,\n          t0,\n          t1;\n\n      // Apply padding? Note that since r1 ≥ r0, da1 ≥ da0.\n      if (rp > epsilon) {\n        var p0 = asin(rp / r0 * sin(ap)),\n            p1 = asin(rp / r1 * sin(ap));\n        if ((da0 -= p0 * 2) > epsilon) p0 *= (cw ? 1 : -1), a00 += p0, a10 -= p0;\n        else da0 = 0, a00 = a10 = (a0 + a1) / 2;\n        if ((da1 -= p1 * 2) > epsilon) p1 *= (cw ? 1 : -1), a01 += p1, a11 -= p1;\n        else da1 = 0, a01 = a11 = (a0 + a1) / 2;\n      }\n\n      var x01 = r1 * cos(a01),\n          y01 = r1 * sin(a01),\n          x10 = r0 * cos(a10),\n          y10 = r0 * sin(a10);\n\n      // Apply rounded corners?\n      if (rc > epsilon) {\n        var x11 = r1 * cos(a11),\n            y11 = r1 * sin(a11),\n            x00 = r0 * cos(a00),\n            y00 = r0 * sin(a00);\n\n        // Restrict the corner radius according to the sector angle.\n        if (da < pi) {\n          var oc = da0 > epsilon ? intersect(x01, y01, x00, y00, x11, y11, x10, y10) : [x10, y10],\n              ax = x01 - oc[0],\n              ay = y01 - oc[1],\n              bx = x11 - oc[0],\n              by = y11 - oc[1],\n              kc = 1 / sin(acos((ax * bx + ay * by) / (sqrt(ax * ax + ay * ay) * sqrt(bx * bx + by * by))) / 2),\n              lc = sqrt(oc[0] * oc[0] + oc[1] * oc[1]);\n          rc0 = min(rc, (r0 - lc) / (kc - 1));\n          rc1 = min(rc, (r1 - lc) / (kc + 1));\n        }\n      }\n\n      // Is the sector collapsed to a line?\n      if (!(da1 > epsilon)) context.moveTo(x01, y01);\n\n      // Does the sector’s outer ring have rounded corners?\n      else if (rc1 > epsilon) {\n        t0 = cornerTangents(x00, y00, x01, y01, r1, rc1, cw);\n        t1 = cornerTangents(x11, y11, x10, y10, r1, rc1, cw);\n\n        context.moveTo(t0.cx + t0.x01, t0.cy + t0.y01);\n\n        // Have the corners merged?\n        if (rc1 < rc) context.arc(t0.cx, t0.cy, rc1, atan2(t0.y01, t0.x01), atan2(t1.y01, t1.x01), !cw);\n\n        // Otherwise, draw the two corners and the ring.\n        else {\n          context.arc(t0.cx, t0.cy, rc1, atan2(t0.y01, t0.x01), atan2(t0.y11, t0.x11), !cw);\n          context.arc(0, 0, r1, atan2(t0.cy + t0.y11, t0.cx + t0.x11), atan2(t1.cy + t1.y11, t1.cx + t1.x11), !cw);\n          context.arc(t1.cx, t1.cy, rc1, atan2(t1.y11, t1.x11), atan2(t1.y01, t1.x01), !cw);\n        }\n      }\n\n      // Or is the outer ring just a circular arc?\n      else context.moveTo(x01, y01), context.arc(0, 0, r1, a01, a11, !cw);\n\n      // Is there no inner ring, and it’s a circular sector?\n      // Or perhaps it’s an annular sector collapsed due to padding?\n      if (!(r0 > epsilon) || !(da0 > epsilon)) context.lineTo(x10, y10);\n\n      // Does the sector’s inner ring (or point) have rounded corners?\n      else if (rc0 > epsilon) {\n        t0 = cornerTangents(x10, y10, x11, y11, r0, -rc0, cw);\n        t1 = cornerTangents(x01, y01, x00, y00, r0, -rc0, cw);\n\n        context.lineTo(t0.cx + t0.x01, t0.cy + t0.y01);\n\n        // Have the corners merged?\n        if (rc0 < rc) context.arc(t0.cx, t0.cy, rc0, atan2(t0.y01, t0.x01), atan2(t1.y01, t1.x01), !cw);\n\n        // Otherwise, draw the two corners and the ring.\n        else {\n          context.arc(t0.cx, t0.cy, rc0, atan2(t0.y01, t0.x01), atan2(t0.y11, t0.x11), !cw);\n          context.arc(0, 0, r0, atan2(t0.cy + t0.y11, t0.cx + t0.x11), atan2(t1.cy + t1.y11, t1.cx + t1.x11), cw);\n          context.arc(t1.cx, t1.cy, rc0, atan2(t1.y11, t1.x11), atan2(t1.y01, t1.x01), !cw);\n        }\n      }\n\n      // Or is the inner ring just a circular arc?\n      else context.arc(0, 0, r0, a10, a00, cw);\n    }\n\n    context.closePath();\n\n    if (buffer) return context = null, buffer + \"\" || null;\n  }\n\n  arc.centroid = function() {\n    var r = (+innerRadius.apply(this, arguments) + +outerRadius.apply(this, arguments)) / 2,\n        a = (+startAngle.apply(this, arguments) + +endAngle.apply(this, arguments)) / 2 - pi / 2;\n    return [cos(a) * r, sin(a) * r];\n  };\n\n  arc.innerRadius = function(_) {\n    return arguments.length ? (innerRadius = typeof _ === \"function\" ? _ : constant(+_), arc) : innerRadius;\n  };\n\n  arc.outerRadius = function(_) {\n    return arguments.length ? (outerRadius = typeof _ === \"function\" ? _ : constant(+_), arc) : outerRadius;\n  };\n\n  arc.cornerRadius = function(_) {\n    return arguments.length ? (cornerRadius = typeof _ === \"function\" ? _ : constant(+_), arc) : cornerRadius;\n  };\n\n  arc.padRadius = function(_) {\n    return arguments.length ? (padRadius = _ == null ? null : typeof _ === \"function\" ? _ : constant(+_), arc) : padRadius;\n  };\n\n  arc.startAngle = function(_) {\n    return arguments.length ? (startAngle = typeof _ === \"function\" ? _ : constant(+_), arc) : startAngle;\n  };\n\n  arc.endAngle = function(_) {\n    return arguments.length ? (endAngle = typeof _ === \"function\" ? _ : constant(+_), arc) : endAngle;\n  };\n\n  arc.padAngle = function(_) {\n    return arguments.length ? (padAngle = typeof _ === \"function\" ? _ : constant(+_), arc) : padAngle;\n  };\n\n  arc.context = function(_) {\n    return arguments.length ? ((context = _ == null ? null : _), arc) : context;\n  };\n\n  return arc;\n}\n","function Linear(context) {\n  this._context = context;\n}\n\nLinear.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n      case 1: this._point = 2; // proceed\n      default: this._context.lineTo(x, y); break;\n    }\n  }\n};\n\nexport default function(context) {\n  return new Linear(context);\n}\n","export function x(p) {\n  return p[0];\n}\n\nexport function y(p) {\n  return p[1];\n}\n","import {path} from \"d3-path\";\nimport constant from \"./constant\";\nimport curveLinear from \"./curve/linear\";\nimport {x as pointX, y as pointY} from \"./point\";\n\nexport default function() {\n  var x = pointX,\n      y = pointY,\n      defined = constant(true),\n      context = null,\n      curve = curveLinear,\n      output = null;\n\n  function line(data) {\n    var i,\n        n = data.length,\n        d,\n        defined0 = false,\n        buffer;\n\n    if (context == null) output = curve(buffer = path());\n\n    for (i = 0; i <= n; ++i) {\n      if (!(i < n && defined(d = data[i], i, data)) === defined0) {\n        if (defined0 = !defined0) output.lineStart();\n        else output.lineEnd();\n      }\n      if (defined0) output.point(+x(d, i, data), +y(d, i, data));\n    }\n\n    if (buffer) return output = null, buffer + \"\" || null;\n  }\n\n  line.x = function(_) {\n    return arguments.length ? (x = typeof _ === \"function\" ? _ : constant(+_), line) : x;\n  };\n\n  line.y = function(_) {\n    return arguments.length ? (y = typeof _ === \"function\" ? _ : constant(+_), line) : y;\n  };\n\n  line.defined = function(_) {\n    return arguments.length ? (defined = typeof _ === \"function\" ? _ : constant(!!_), line) : defined;\n  };\n\n  line.curve = function(_) {\n    return arguments.length ? (curve = _, context != null && (output = curve(context)), line) : curve;\n  };\n\n  line.context = function(_) {\n    return arguments.length ? (_ == null ? context = output = null : output = curve(context = _), line) : context;\n  };\n\n  return line;\n}\n","import {path} from \"d3-path\";\nimport constant from \"./constant\";\nimport curveLinear from \"./curve/linear\";\nimport line from \"./line\";\nimport {x as pointX, y as pointY} from \"./point\";\n\nexport default function() {\n  var x0 = pointX,\n      x1 = null,\n      y0 = constant(0),\n      y1 = pointY,\n      defined = constant(true),\n      context = null,\n      curve = curveLinear,\n      output = null;\n\n  function area(data) {\n    var i,\n        j,\n        k,\n        n = data.length,\n        d,\n        defined0 = false,\n        buffer,\n        x0z = new Array(n),\n        y0z = new Array(n);\n\n    if (context == null) output = curve(buffer = path());\n\n    for (i = 0; i <= n; ++i) {\n      if (!(i < n && defined(d = data[i], i, data)) === defined0) {\n        if (defined0 = !defined0) {\n          j = i;\n          output.areaStart();\n          output.lineStart();\n        } else {\n          output.lineEnd();\n          output.lineStart();\n          for (k = i - 1; k >= j; --k) {\n            output.point(x0z[k], y0z[k]);\n          }\n          output.lineEnd();\n          output.areaEnd();\n        }\n      }\n      if (defined0) {\n        x0z[i] = +x0(d, i, data), y0z[i] = +y0(d, i, data);\n        output.point(x1 ? +x1(d, i, data) : x0z[i], y1 ? +y1(d, i, data) : y0z[i]);\n      }\n    }\n\n    if (buffer) return output = null, buffer + \"\" || null;\n  }\n\n  function arealine() {\n    return line().defined(defined).curve(curve).context(context);\n  }\n\n  area.x = function(_) {\n    return arguments.length ? (x0 = typeof _ === \"function\" ? _ : constant(+_), x1 = null, area) : x0;\n  };\n\n  area.x0 = function(_) {\n    return arguments.length ? (x0 = typeof _ === \"function\" ? _ : constant(+_), area) : x0;\n  };\n\n  area.x1 = function(_) {\n    return arguments.length ? (x1 = _ == null ? null : typeof _ === \"function\" ? _ : constant(+_), area) : x1;\n  };\n\n  area.y = function(_) {\n    return arguments.length ? (y0 = typeof _ === \"function\" ? _ : constant(+_), y1 = null, area) : y0;\n  };\n\n  area.y0 = function(_) {\n    return arguments.length ? (y0 = typeof _ === \"function\" ? _ : constant(+_), area) : y0;\n  };\n\n  area.y1 = function(_) {\n    return arguments.length ? (y1 = _ == null ? null : typeof _ === \"function\" ? _ : constant(+_), area) : y1;\n  };\n\n  area.lineX0 =\n  area.lineY0 = function() {\n    return arealine().x(x0).y(y0);\n  };\n\n  area.lineY1 = function() {\n    return arealine().x(x0).y(y1);\n  };\n\n  area.lineX1 = function() {\n    return arealine().x(x1).y(y0);\n  };\n\n  area.defined = function(_) {\n    return arguments.length ? (defined = typeof _ === \"function\" ? _ : constant(!!_), area) : defined;\n  };\n\n  area.curve = function(_) {\n    return arguments.length ? (curve = _, context != null && (output = curve(context)), area) : curve;\n  };\n\n  area.context = function(_) {\n    return arguments.length ? (_ == null ? context = output = null : output = curve(context = _), area) : context;\n  };\n\n  return area;\n}\n","export default function(a, b) {\n  return b < a ? -1 : b > a ? 1 : b >= a ? 0 : NaN;\n}\n","export default function(d) {\n  return d;\n}\n","import curveLinear from \"./linear\";\n\nexport var curveRadialLinear = curveRadial(curveLinear);\n\nfunction Radial(curve) {\n  this._curve = curve;\n}\n\nRadial.prototype = {\n  areaStart: function() {\n    this._curve.areaStart();\n  },\n  areaEnd: function() {\n    this._curve.areaEnd();\n  },\n  lineStart: function() {\n    this._curve.lineStart();\n  },\n  lineEnd: function() {\n    this._curve.lineEnd();\n  },\n  point: function(a, r) {\n    this._curve.point(r * Math.sin(a), r * -Math.cos(a));\n  }\n};\n\nexport default function curveRadial(curve) {\n\n  function radial(context) {\n    return new Radial(curve(context));\n  }\n\n  radial._curve = curve;\n\n  return radial;\n}\n","import curveRadial, {curveRadialLinear} from \"./curve/radial\";\nimport line from \"./line\";\n\nexport function lineRadial(l) {\n  var c = l.curve;\n\n  l.angle = l.x, delete l.x;\n  l.radius = l.y, delete l.y;\n\n  l.curve = function(_) {\n    return arguments.length ? c(curveRadial(_)) : c()._curve;\n  };\n\n  return l;\n}\n\nexport default function() {\n  return lineRadial(line().curve(curveRadialLinear));\n}\n","export var slice = Array.prototype.slice;\n","import {pi, tau} from \"../math\";\n\nexport default {\n  draw: function(context, size) {\n    var r = Math.sqrt(size / pi);\n    context.moveTo(r, 0);\n    context.arc(0, 0, r, 0, tau);\n  }\n};\n","export default {\n  draw: function(context, size) {\n    var r = Math.sqrt(size / 5) / 2;\n    context.moveTo(-3 * r, -r);\n    context.lineTo(-r, -r);\n    context.lineTo(-r, -3 * r);\n    context.lineTo(r, -3 * r);\n    context.lineTo(r, -r);\n    context.lineTo(3 * r, -r);\n    context.lineTo(3 * r, r);\n    context.lineTo(r, r);\n    context.lineTo(r, 3 * r);\n    context.lineTo(-r, 3 * r);\n    context.lineTo(-r, r);\n    context.lineTo(-3 * r, r);\n    context.closePath();\n  }\n};\n","var tan30 = Math.sqrt(1 / 3),\n    tan30_2 = tan30 * 2;\n\nexport default {\n  draw: function(context, size) {\n    var y = Math.sqrt(size / tan30_2),\n        x = y * tan30;\n    context.moveTo(0, -y);\n    context.lineTo(x, 0);\n    context.lineTo(0, y);\n    context.lineTo(-x, 0);\n    context.closePath();\n  }\n};\n","import {pi, tau} from \"../math\";\n\nvar ka = 0.89081309152928522810,\n    kr = Math.sin(pi / 10) / Math.sin(7 * pi / 10),\n    kx = Math.sin(tau / 10) * kr,\n    ky = -Math.cos(tau / 10) * kr;\n\nexport default {\n  draw: function(context, size) {\n    var r = Math.sqrt(size * ka),\n        x = kx * r,\n        y = ky * r;\n    context.moveTo(0, -r);\n    context.lineTo(x, y);\n    for (var i = 1; i < 5; ++i) {\n      var a = tau * i / 5,\n          c = Math.cos(a),\n          s = Math.sin(a);\n      context.lineTo(s * r, -c * r);\n      context.lineTo(c * x - s * y, s * x + c * y);\n    }\n    context.closePath();\n  }\n};\n","export default {\n  draw: function(context, size) {\n    var w = Math.sqrt(size),\n        x = -w / 2;\n    context.rect(x, x, w, w);\n  }\n};\n","var sqrt3 = Math.sqrt(3);\n\nexport default {\n  draw: function(context, size) {\n    var y = -Math.sqrt(size / (sqrt3 * 3));\n    context.moveTo(0, y * 2);\n    context.lineTo(-sqrt3 * y, -y);\n    context.lineTo(sqrt3 * y, -y);\n    context.closePath();\n  }\n};\n","var c = -0.5,\n    s = Math.sqrt(3) / 2,\n    k = 1 / Math.sqrt(12),\n    a = (k / 2 + 1) * 3;\n\nexport default {\n  draw: function(context, size) {\n    var r = Math.sqrt(size / a),\n        x0 = r / 2,\n        y0 = r * k,\n        x1 = x0,\n        y1 = r * k + r,\n        x2 = -x1,\n        y2 = y1;\n    context.moveTo(x0, y0);\n    context.lineTo(x1, y1);\n    context.lineTo(x2, y2);\n    context.lineTo(c * x0 - s * y0, s * x0 + c * y0);\n    context.lineTo(c * x1 - s * y1, s * x1 + c * y1);\n    context.lineTo(c * x2 - s * y2, s * x2 + c * y2);\n    context.lineTo(c * x0 + s * y0, c * y0 - s * x0);\n    context.lineTo(c * x1 + s * y1, c * y1 - s * x1);\n    context.lineTo(c * x2 + s * y2, c * y2 - s * x2);\n    context.closePath();\n  }\n};\n","export default function() {}\n","export function point(that, x, y) {\n  that._context.bezierCurveTo(\n    (2 * that._x0 + that._x1) / 3,\n    (2 * that._y0 + that._y1) / 3,\n    (that._x0 + 2 * that._x1) / 3,\n    (that._y0 + 2 * that._y1) / 3,\n    (that._x0 + 4 * that._x1 + x) / 6,\n    (that._y0 + 4 * that._y1 + y) / 6\n  );\n}\n\nexport function Basis(context) {\n  this._context = context;\n}\n\nBasis.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 =\n    this._y0 = this._y1 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 3: point(this, this._x1, this._y1); // proceed\n      case 2: this._context.lineTo(this._x1, this._y1); break;\n    }\n    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n      case 1: this._point = 2; break;\n      case 2: this._point = 3; this._context.lineTo((5 * this._x0 + this._x1) / 6, (5 * this._y0 + this._y1) / 6); // proceed\n      default: point(this, x, y); break;\n    }\n    this._x0 = this._x1, this._x1 = x;\n    this._y0 = this._y1, this._y1 = y;\n  }\n};\n\nexport default function(context) {\n  return new Basis(context);\n}\n","import noop from \"../noop\";\nimport {point} from \"./basis\";\n\nfunction BasisClosed(context) {\n  this._context = context;\n}\n\nBasisClosed.prototype = {\n  areaStart: noop,\n  areaEnd: noop,\n  lineStart: function() {\n    this._x0 = this._x1 = this._x2 = this._x3 = this._x4 =\n    this._y0 = this._y1 = this._y2 = this._y3 = this._y4 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 1: {\n        this._context.moveTo(this._x2, this._y2);\n        this._context.closePath();\n        break;\n      }\n      case 2: {\n        this._context.moveTo((this._x2 + 2 * this._x3) / 3, (this._y2 + 2 * this._y3) / 3);\n        this._context.lineTo((this._x3 + 2 * this._x2) / 3, (this._y3 + 2 * this._y2) / 3);\n        this._context.closePath();\n        break;\n      }\n      case 3: {\n        this.point(this._x2, this._y2);\n        this.point(this._x3, this._y3);\n        this.point(this._x4, this._y4);\n        break;\n      }\n    }\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; this._x2 = x, this._y2 = y; break;\n      case 1: this._point = 2; this._x3 = x, this._y3 = y; break;\n      case 2: this._point = 3; this._x4 = x, this._y4 = y; this._context.moveTo((this._x0 + 4 * this._x1 + x) / 6, (this._y0 + 4 * this._y1 + y) / 6); break;\n      default: point(this, x, y); break;\n    }\n    this._x0 = this._x1, this._x1 = x;\n    this._y0 = this._y1, this._y1 = y;\n  }\n};\n\nexport default function(context) {\n  return new BasisClosed(context);\n}\n","import {point} from \"./basis\";\n\nfunction BasisOpen(context) {\n  this._context = context;\n}\n\nBasisOpen.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 =\n    this._y0 = this._y1 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (this._line || (this._line !== 0 && this._point === 3)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; break;\n      case 1: this._point = 2; break;\n      case 2: this._point = 3; var x0 = (this._x0 + 4 * this._x1 + x) / 6, y0 = (this._y0 + 4 * this._y1 + y) / 6; this._line ? this._context.lineTo(x0, y0) : this._context.moveTo(x0, y0); break;\n      case 3: this._point = 4; // proceed\n      default: point(this, x, y); break;\n    }\n    this._x0 = this._x1, this._x1 = x;\n    this._y0 = this._y1, this._y1 = y;\n  }\n};\n\nexport default function(context) {\n  return new BasisOpen(context);\n}\n","import {Basis} from \"./basis\";\n\nfunction Bundle(context, beta) {\n  this._basis = new Basis(context);\n  this._beta = beta;\n}\n\nBundle.prototype = {\n  lineStart: function() {\n    this._x = [];\n    this._y = [];\n    this._basis.lineStart();\n  },\n  lineEnd: function() {\n    var x = this._x,\n        y = this._y,\n        j = x.length - 1;\n\n    if (j > 0) {\n      var x0 = x[0],\n          y0 = y[0],\n          dx = x[j] - x0,\n          dy = y[j] - y0,\n          i = -1,\n          t;\n\n      while (++i <= j) {\n        t = i / j;\n        this._basis.point(\n          this._beta * x[i] + (1 - this._beta) * (x0 + t * dx),\n          this._beta * y[i] + (1 - this._beta) * (y0 + t * dy)\n        );\n      }\n    }\n\n    this._x = this._y = null;\n    this._basis.lineEnd();\n  },\n  point: function(x, y) {\n    this._x.push(+x);\n    this._y.push(+y);\n  }\n};\n\nexport default (function custom(beta) {\n\n  function bundle(context) {\n    return beta === 1 ? new Basis(context) : new Bundle(context, beta);\n  }\n\n  bundle.beta = function(beta) {\n    return custom(+beta);\n  };\n\n  return bundle;\n})(0.85);\n","export function point(that, x, y) {\n  that._context.bezierCurveTo(\n    that._x1 + that._k * (that._x2 - that._x0),\n    that._y1 + that._k * (that._y2 - that._y0),\n    that._x2 + that._k * (that._x1 - x),\n    that._y2 + that._k * (that._y1 - y),\n    that._x2,\n    that._y2\n  );\n}\n\nexport function Cardinal(context, tension) {\n  this._context = context;\n  this._k = (1 - tension) / 6;\n}\n\nCardinal.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 = this._x2 =\n    this._y0 = this._y1 = this._y2 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 2: this._context.lineTo(this._x2, this._y2); break;\n      case 3: point(this, this._x1, this._y1); break;\n    }\n    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n      case 1: this._point = 2; this._x1 = x, this._y1 = y; break;\n      case 2: this._point = 3; // proceed\n      default: point(this, x, y); break;\n    }\n    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n  }\n};\n\nexport default (function custom(tension) {\n\n  function cardinal(context) {\n    return new Cardinal(context, tension);\n  }\n\n  cardinal.tension = function(tension) {\n    return custom(+tension);\n  };\n\n  return cardinal;\n})(0);\n","import noop from \"../noop\";\nimport {point} from \"./cardinal\";\n\nexport function CardinalClosed(context, tension) {\n  this._context = context;\n  this._k = (1 - tension) / 6;\n}\n\nCardinalClosed.prototype = {\n  areaStart: noop,\n  areaEnd: noop,\n  lineStart: function() {\n    this._x0 = this._x1 = this._x2 = this._x3 = this._x4 = this._x5 =\n    this._y0 = this._y1 = this._y2 = this._y3 = this._y4 = this._y5 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 1: {\n        this._context.moveTo(this._x3, this._y3);\n        this._context.closePath();\n        break;\n      }\n      case 2: {\n        this._context.lineTo(this._x3, this._y3);\n        this._context.closePath();\n        break;\n      }\n      case 3: {\n        this.point(this._x3, this._y3);\n        this.point(this._x4, this._y4);\n        this.point(this._x5, this._y5);\n        break;\n      }\n    }\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; this._x3 = x, this._y3 = y; break;\n      case 1: this._point = 2; this._context.moveTo(this._x4 = x, this._y4 = y); break;\n      case 2: this._point = 3; this._x5 = x, this._y5 = y; break;\n      default: point(this, x, y); break;\n    }\n    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n  }\n};\n\nexport default (function custom(tension) {\n\n  function cardinal(context) {\n    return new CardinalClosed(context, tension);\n  }\n\n  cardinal.tension = function(tension) {\n    return custom(+tension);\n  };\n\n  return cardinal;\n})(0);\n","import {point} from \"./cardinal\";\n\nexport function CardinalOpen(context, tension) {\n  this._context = context;\n  this._k = (1 - tension) / 6;\n}\n\nCardinalOpen.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 = this._x2 =\n    this._y0 = this._y1 = this._y2 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (this._line || (this._line !== 0 && this._point === 3)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; break;\n      case 1: this._point = 2; break;\n      case 2: this._point = 3; this._line ? this._context.lineTo(this._x2, this._y2) : this._context.moveTo(this._x2, this._y2); break;\n      case 3: this._point = 4; // proceed\n      default: point(this, x, y); break;\n    }\n    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n  }\n};\n\nexport default (function custom(tension) {\n\n  function cardinal(context) {\n    return new CardinalOpen(context, tension);\n  }\n\n  cardinal.tension = function(tension) {\n    return custom(+tension);\n  };\n\n  return cardinal;\n})(0);\n","import {epsilon} from \"../math\";\nimport {Cardinal} from \"./cardinal\";\n\nexport function point(that, x, y) {\n  var x1 = that._x1,\n      y1 = that._y1,\n      x2 = that._x2,\n      y2 = that._y2;\n\n  if (that._l01_a > epsilon) {\n    var a = 2 * that._l01_2a + 3 * that._l01_a * that._l12_a + that._l12_2a,\n        n = 3 * that._l01_a * (that._l01_a + that._l12_a);\n    x1 = (x1 * a - that._x0 * that._l12_2a + that._x2 * that._l01_2a) / n;\n    y1 = (y1 * a - that._y0 * that._l12_2a + that._y2 * that._l01_2a) / n;\n  }\n\n  if (that._l23_a > epsilon) {\n    var b = 2 * that._l23_2a + 3 * that._l23_a * that._l12_a + that._l12_2a,\n        m = 3 * that._l23_a * (that._l23_a + that._l12_a);\n    x2 = (x2 * b + that._x1 * that._l23_2a - x * that._l12_2a) / m;\n    y2 = (y2 * b + that._y1 * that._l23_2a - y * that._l12_2a) / m;\n  }\n\n  that._context.bezierCurveTo(x1, y1, x2, y2, that._x2, that._y2);\n}\n\nfunction CatmullRom(context, alpha) {\n  this._context = context;\n  this._alpha = alpha;\n}\n\nCatmullRom.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 = this._x2 =\n    this._y0 = this._y1 = this._y2 = NaN;\n    this._l01_a = this._l12_a = this._l23_a =\n    this._l01_2a = this._l12_2a = this._l23_2a =\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 2: this._context.lineTo(this._x2, this._y2); break;\n      case 3: this.point(this._x2, this._y2); break;\n    }\n    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n\n    if (this._point) {\n      var x23 = this._x2 - x,\n          y23 = this._y2 - y;\n      this._l23_a = Math.sqrt(this._l23_2a = Math.pow(x23 * x23 + y23 * y23, this._alpha));\n    }\n\n    switch (this._point) {\n      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n      case 1: this._point = 2; break;\n      case 2: this._point = 3; // proceed\n      default: point(this, x, y); break;\n    }\n\n    this._l01_a = this._l12_a, this._l12_a = this._l23_a;\n    this._l01_2a = this._l12_2a, this._l12_2a = this._l23_2a;\n    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n  }\n};\n\nexport default (function custom(alpha) {\n\n  function catmullRom(context) {\n    return alpha ? new CatmullRom(context, alpha) : new Cardinal(context, 0);\n  }\n\n  catmullRom.alpha = function(alpha) {\n    return custom(+alpha);\n  };\n\n  return catmullRom;\n})(0.5);\n","import {CardinalClosed} from \"./cardinalClosed\";\nimport noop from \"../noop\";\nimport {point} from \"./catmullRom\";\n\nfunction CatmullRomClosed(context, alpha) {\n  this._context = context;\n  this._alpha = alpha;\n}\n\nCatmullRomClosed.prototype = {\n  areaStart: noop,\n  areaEnd: noop,\n  lineStart: function() {\n    this._x0 = this._x1 = this._x2 = this._x3 = this._x4 = this._x5 =\n    this._y0 = this._y1 = this._y2 = this._y3 = this._y4 = this._y5 = NaN;\n    this._l01_a = this._l12_a = this._l23_a =\n    this._l01_2a = this._l12_2a = this._l23_2a =\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 1: {\n        this._context.moveTo(this._x3, this._y3);\n        this._context.closePath();\n        break;\n      }\n      case 2: {\n        this._context.lineTo(this._x3, this._y3);\n        this._context.closePath();\n        break;\n      }\n      case 3: {\n        this.point(this._x3, this._y3);\n        this.point(this._x4, this._y4);\n        this.point(this._x5, this._y5);\n        break;\n      }\n    }\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n\n    if (this._point) {\n      var x23 = this._x2 - x,\n          y23 = this._y2 - y;\n      this._l23_a = Math.sqrt(this._l23_2a = Math.pow(x23 * x23 + y23 * y23, this._alpha));\n    }\n\n    switch (this._point) {\n      case 0: this._point = 1; this._x3 = x, this._y3 = y; break;\n      case 1: this._point = 2; this._context.moveTo(this._x4 = x, this._y4 = y); break;\n      case 2: this._point = 3; this._x5 = x, this._y5 = y; break;\n      default: point(this, x, y); break;\n    }\n\n    this._l01_a = this._l12_a, this._l12_a = this._l23_a;\n    this._l01_2a = this._l12_2a, this._l12_2a = this._l23_2a;\n    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n  }\n};\n\nexport default (function custom(alpha) {\n\n  function catmullRom(context) {\n    return alpha ? new CatmullRomClosed(context, alpha) : new CardinalClosed(context, 0);\n  }\n\n  catmullRom.alpha = function(alpha) {\n    return custom(+alpha);\n  };\n\n  return catmullRom;\n})(0.5);\n","import {CardinalOpen} from \"./cardinalOpen\";\nimport {point} from \"./catmullRom\";\n\nfunction CatmullRomOpen(context, alpha) {\n  this._context = context;\n  this._alpha = alpha;\n}\n\nCatmullRomOpen.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 = this._x2 =\n    this._y0 = this._y1 = this._y2 = NaN;\n    this._l01_a = this._l12_a = this._l23_a =\n    this._l01_2a = this._l12_2a = this._l23_2a =\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (this._line || (this._line !== 0 && this._point === 3)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n\n    if (this._point) {\n      var x23 = this._x2 - x,\n          y23 = this._y2 - y;\n      this._l23_a = Math.sqrt(this._l23_2a = Math.pow(x23 * x23 + y23 * y23, this._alpha));\n    }\n\n    switch (this._point) {\n      case 0: this._point = 1; break;\n      case 1: this._point = 2; break;\n      case 2: this._point = 3; this._line ? this._context.lineTo(this._x2, this._y2) : this._context.moveTo(this._x2, this._y2); break;\n      case 3: this._point = 4; // proceed\n      default: point(this, x, y); break;\n    }\n\n    this._l01_a = this._l12_a, this._l12_a = this._l23_a;\n    this._l01_2a = this._l12_2a, this._l12_2a = this._l23_2a;\n    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n  }\n};\n\nexport default (function custom(alpha) {\n\n  function catmullRom(context) {\n    return alpha ? new CatmullRomOpen(context, alpha) : new CardinalOpen(context, 0);\n  }\n\n  catmullRom.alpha = function(alpha) {\n    return custom(+alpha);\n  };\n\n  return catmullRom;\n})(0.5);\n","import noop from \"../noop\";\n\nfunction LinearClosed(context) {\n  this._context = context;\n}\n\nLinearClosed.prototype = {\n  areaStart: noop,\n  areaEnd: noop,\n  lineStart: function() {\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (this._point) this._context.closePath();\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    if (this._point) this._context.lineTo(x, y);\n    else this._point = 1, this._context.moveTo(x, y);\n  }\n};\n\nexport default function(context) {\n  return new LinearClosed(context);\n}\n","function sign(x) {\n  return x < 0 ? -1 : 1;\n}\n\n// Calculate the slopes of the tangents (Hermite-type interpolation) based on\n// the following paper: Steffen, M. 1990. A Simple Method for Monotonic\n// Interpolation in One Dimension. Astronomy and Astrophysics, Vol. 239, NO.\n// NOV(II), P. 443, 1990.\nfunction slope3(that, x2, y2) {\n  var h0 = that._x1 - that._x0,\n      h1 = x2 - that._x1,\n      s0 = (that._y1 - that._y0) / (h0 || h1 < 0 && -0),\n      s1 = (y2 - that._y1) / (h1 || h0 < 0 && -0),\n      p = (s0 * h1 + s1 * h0) / (h0 + h1);\n  return (sign(s0) + sign(s1)) * Math.min(Math.abs(s0), Math.abs(s1), 0.5 * Math.abs(p)) || 0;\n}\n\n// Calculate a one-sided slope.\nfunction slope2(that, t) {\n  var h = that._x1 - that._x0;\n  return h ? (3 * (that._y1 - that._y0) / h - t) / 2 : t;\n}\n\n// According to https://en.wikipedia.org/wiki/Cubic_Hermite_spline#Representations\n// \"you can express cubic Hermite interpolation in terms of cubic Bézier curves\n// with respect to the four values p0, p0 + m0 / 3, p1 - m1 / 3, p1\".\nfunction point(that, t0, t1) {\n  var x0 = that._x0,\n      y0 = that._y0,\n      x1 = that._x1,\n      y1 = that._y1,\n      dx = (x1 - x0) / 3;\n  that._context.bezierCurveTo(x0 + dx, y0 + dx * t0, x1 - dx, y1 - dx * t1, x1, y1);\n}\n\nfunction MonotoneX(context) {\n  this._context = context;\n}\n\nMonotoneX.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 =\n    this._y0 = this._y1 =\n    this._t0 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 2: this._context.lineTo(this._x1, this._y1); break;\n      case 3: point(this, this._t0, slope2(this, this._t0)); break;\n    }\n    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    var t1 = NaN;\n\n    x = +x, y = +y;\n    if (x === this._x1 && y === this._y1) return; // Ignore coincident points.\n    switch (this._point) {\n      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n      case 1: this._point = 2; break;\n      case 2: this._point = 3; point(this, slope2(this, t1 = slope3(this, x, y)), t1); break;\n      default: point(this, this._t0, t1 = slope3(this, x, y)); break;\n    }\n\n    this._x0 = this._x1, this._x1 = x;\n    this._y0 = this._y1, this._y1 = y;\n    this._t0 = t1;\n  }\n}\n\nfunction MonotoneY(context) {\n  this._context = new ReflectContext(context);\n}\n\n(MonotoneY.prototype = Object.create(MonotoneX.prototype)).point = function(x, y) {\n  MonotoneX.prototype.point.call(this, y, x);\n};\n\nfunction ReflectContext(context) {\n  this._context = context;\n}\n\nReflectContext.prototype = {\n  moveTo: function(x, y) { this._context.moveTo(y, x); },\n  closePath: function() { this._context.closePath(); },\n  lineTo: function(x, y) { this._context.lineTo(y, x); },\n  bezierCurveTo: function(x1, y1, x2, y2, x, y) { this._context.bezierCurveTo(y1, x1, y2, x2, y, x); }\n};\n\nexport function monotoneX(context) {\n  return new MonotoneX(context);\n}\n\nexport function monotoneY(context) {\n  return new MonotoneY(context);\n}\n","function Natural(context) {\n  this._context = context;\n}\n\nNatural.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x = [];\n    this._y = [];\n  },\n  lineEnd: function() {\n    var x = this._x,\n        y = this._y,\n        n = x.length;\n\n    if (n) {\n      this._line ? this._context.lineTo(x[0], y[0]) : this._context.moveTo(x[0], y[0]);\n      if (n === 2) {\n        this._context.lineTo(x[1], y[1]);\n      } else {\n        var px = controlPoints(x),\n            py = controlPoints(y);\n        for (var i0 = 0, i1 = 1; i1 < n; ++i0, ++i1) {\n          this._context.bezierCurveTo(px[0][i0], py[0][i0], px[1][i0], py[1][i0], x[i1], y[i1]);\n        }\n      }\n    }\n\n    if (this._line || (this._line !== 0 && n === 1)) this._context.closePath();\n    this._line = 1 - this._line;\n    this._x = this._y = null;\n  },\n  point: function(x, y) {\n    this._x.push(+x);\n    this._y.push(+y);\n  }\n};\n\n// See https://www.particleincell.com/2012/bezier-splines/ for derivation.\nfunction controlPoints(x) {\n  var i,\n      n = x.length - 1,\n      m,\n      a = new Array(n),\n      b = new Array(n),\n      r = new Array(n);\n  a[0] = 0, b[0] = 2, r[0] = x[0] + 2 * x[1];\n  for (i = 1; i < n - 1; ++i) a[i] = 1, b[i] = 4, r[i] = 4 * x[i] + 2 * x[i + 1];\n  a[n - 1] = 2, b[n - 1] = 7, r[n - 1] = 8 * x[n - 1] + x[n];\n  for (i = 1; i < n; ++i) m = a[i] / b[i - 1], b[i] -= m, r[i] -= m * r[i - 1];\n  a[n - 1] = r[n - 1] / b[n - 1];\n  for (i = n - 2; i >= 0; --i) a[i] = (r[i] - a[i + 1]) / b[i];\n  b[n - 1] = (x[n] + a[n - 1]) / 2;\n  for (i = 0; i < n - 1; ++i) b[i] = 2 * x[i + 1] - a[i + 1];\n  return [a, b];\n}\n\nexport default function(context) {\n  return new Natural(context);\n}\n","function Step(context, t) {\n  this._context = context;\n  this._t = t;\n}\n\nStep.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x = this._y = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (0 < this._t && this._t < 1 && this._point === 2) this._context.lineTo(this._x, this._y);\n    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n    if (this._line >= 0) this._t = 1 - this._t, this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n      case 1: this._point = 2; // proceed\n      default: {\n        if (this._t <= 0) {\n          this._context.lineTo(this._x, y);\n          this._context.lineTo(x, y);\n        } else {\n          var x1 = this._x * (1 - this._t) + x * this._t;\n          this._context.lineTo(x1, this._y);\n          this._context.lineTo(x1, y);\n        }\n        break;\n      }\n    }\n    this._x = x, this._y = y;\n  }\n};\n\nexport default function(context) {\n  return new Step(context, 0.5);\n}\n\nexport function stepBefore(context) {\n  return new Step(context, 0);\n}\n\nexport function stepAfter(context) {\n  return new Step(context, 1);\n}\n","export default function(series, order) {\n  if (!((n = series.length) > 1)) return;\n  for (var i = 1, j, s0, s1 = series[order[0]], n, m = s1.length; i < n; ++i) {\n    s0 = s1, s1 = series[order[i]];\n    for (j = 0; j < m; ++j) {\n      s1[j][1] += s1[j][0] = isNaN(s0[j][1]) ? s0[j][0] : s0[j][1];\n    }\n  }\n}\n","export default function(series) {\n  var n = series.length, o = new Array(n);\n  while (--n >= 0) o[n] = n;\n  return o;\n}\n","import {slice} from \"./array\";\nimport constant from \"./constant\";\nimport offsetNone from \"./offset/none\";\nimport orderNone from \"./order/none\";\n\nfunction stackValue(d, key) {\n  return d[key];\n}\n\nexport default function() {\n  var keys = constant([]),\n      order = orderNone,\n      offset = offsetNone,\n      value = stackValue;\n\n  function stack(data) {\n    var kz = keys.apply(this, arguments),\n        i,\n        m = data.length,\n        n = kz.length,\n        sz = new Array(n),\n        oz;\n\n    for (i = 0; i < n; ++i) {\n      for (var ki = kz[i], si = sz[i] = new Array(m), j = 0, sij; j < m; ++j) {\n        si[j] = sij = [0, +value(data[j], ki, j, data)];\n        sij.data = data[j];\n      }\n      si.key = ki;\n    }\n\n    for (i = 0, oz = order(sz); i < n; ++i) {\n      sz[oz[i]].index = i;\n    }\n\n    offset(sz, oz);\n    return sz;\n  }\n\n  stack.keys = function(_) {\n    return arguments.length ? (keys = typeof _ === \"function\" ? _ : constant(slice.call(_)), stack) : keys;\n  };\n\n  stack.value = function(_) {\n    return arguments.length ? (value = typeof _ === \"function\" ? _ : constant(+_), stack) : value;\n  };\n\n  stack.order = function(_) {\n    return arguments.length ? (order = _ == null ? orderNone : typeof _ === \"function\" ? _ : constant(slice.call(_)), stack) : order;\n  };\n\n  stack.offset = function(_) {\n    return arguments.length ? (offset = _ == null ? offsetNone : _, stack) : offset;\n  };\n\n  return stack;\n}\n","import none from \"./none\";\n\nexport default function(series) {\n  var sums = series.map(sum);\n  return none(series).sort(function(a, b) { return sums[a] - sums[b]; });\n}\n\nexport function sum(series) {\n  var s = 0, i = -1, n = series.length, v;\n  while (++i < n) if (v = +series[i][1]) s += v;\n  return s;\n}\n","export function cubicIn(t) {\n  return t * t * t;\n}\n\nexport function cubicOut(t) {\n  return --t * t * t + 1;\n}\n\nexport function cubicInOut(t) {\n  return ((t *= 2) <= 1 ? t * t * t : (t -= 2) * t * t + 2) / 2;\n}\n","var exponent = 3;\n\nexport var polyIn = (function custom(e) {\n  e = +e;\n\n  function polyIn(t) {\n    return Math.pow(t, e);\n  }\n\n  polyIn.exponent = custom;\n\n  return polyIn;\n})(exponent);\n\nexport var polyOut = (function custom(e) {\n  e = +e;\n\n  function polyOut(t) {\n    return 1 - Math.pow(1 - t, e);\n  }\n\n  polyOut.exponent = custom;\n\n  return polyOut;\n})(exponent);\n\nexport var polyInOut = (function custom(e) {\n  e = +e;\n\n  function polyInOut(t) {\n    return ((t *= 2) <= 1 ? Math.pow(t, e) : 2 - Math.pow(2 - t, e)) / 2;\n  }\n\n  polyInOut.exponent = custom;\n\n  return polyInOut;\n})(exponent);\n","var pi = Math.PI,\n    halfPi = pi / 2;\n\nexport function sinIn(t) {\n  return 1 - Math.cos(t * halfPi);\n}\n\nexport function sinOut(t) {\n  return Math.sin(t * halfPi);\n}\n\nexport function sinInOut(t) {\n  return (1 - Math.cos(pi * t)) / 2;\n}\n","var b1 = 4 / 11,\n    b2 = 6 / 11,\n    b3 = 8 / 11,\n    b4 = 3 / 4,\n    b5 = 9 / 11,\n    b6 = 10 / 11,\n    b7 = 15 / 16,\n    b8 = 21 / 22,\n    b9 = 63 / 64,\n    b0 = 1 / b1 / b1;\n\nexport function bounceIn(t) {\n  return 1 - bounceOut(1 - t);\n}\n\nexport function bounceOut(t) {\n  return (t = +t) < b1 ? b0 * t * t : t < b3 ? b0 * (t -= b2) * t + b4 : t < b6 ? b0 * (t -= b5) * t + b7 : b0 * (t -= b8) * t + b9;\n}\n\nexport function bounceInOut(t) {\n  return ((t *= 2) <= 1 ? 1 - bounceOut(1 - t) : bounceOut(t - 1) + 1) / 2;\n}\n","var overshoot = 1.70158;\n\nexport var backIn = (function custom(s) {\n  s = +s;\n\n  function backIn(t) {\n    return t * t * ((s + 1) * t - s);\n  }\n\n  backIn.overshoot = custom;\n\n  return backIn;\n})(overshoot);\n\nexport var backOut = (function custom(s) {\n  s = +s;\n\n  function backOut(t) {\n    return --t * t * ((s + 1) * t + s) + 1;\n  }\n\n  backOut.overshoot = custom;\n\n  return backOut;\n})(overshoot);\n\nexport var backInOut = (function custom(s) {\n  s = +s;\n\n  function backInOut(t) {\n    return ((t *= 2) < 1 ? t * t * ((s + 1) * t - s) : (t -= 2) * t * ((s + 1) * t + s) + 2) / 2;\n  }\n\n  backInOut.overshoot = custom;\n\n  return backInOut;\n})(overshoot);\n","var tau = 2 * Math.PI,\n    amplitude = 1,\n    period = 0.3;\n\nexport var elasticIn = (function custom(a, p) {\n  var s = Math.asin(1 / (a = Math.max(1, a))) * (p /= tau);\n\n  function elasticIn(t) {\n    return a * Math.pow(2, 10 * --t) * Math.sin((s - t) / p);\n  }\n\n  elasticIn.amplitude = function(a) { return custom(a, p * tau); };\n  elasticIn.period = function(p) { return custom(a, p); };\n\n  return elasticIn;\n})(amplitude, period);\n\nexport var elasticOut = (function custom(a, p) {\n  var s = Math.asin(1 / (a = Math.max(1, a))) * (p /= tau);\n\n  function elasticOut(t) {\n    return 1 - a * Math.pow(2, -10 * (t = +t)) * Math.sin((t + s) / p);\n  }\n\n  elasticOut.amplitude = function(a) { return custom(a, p * tau); };\n  elasticOut.period = function(p) { return custom(a, p); };\n\n  return elasticOut;\n})(amplitude, period);\n\nexport var elasticInOut = (function custom(a, p) {\n  var s = Math.asin(1 / (a = Math.max(1, a))) * (p /= tau);\n\n  function elasticInOut(t) {\n    return ((t = t * 2 - 1) < 0\n        ? a * Math.pow(2, 10 * t) * Math.sin((s - t) / p)\n        : 2 - a * Math.pow(2, -10 * t) * Math.sin((s + t) / p)) / 2;\n  }\n\n  elasticInOut.amplitude = function(a) { return custom(a, p * tau); };\n  elasticInOut.period = function(p) { return custom(a, p); };\n\n  return elasticInOut;\n})(amplitude, period);\n","export default function(x) {\n  return function() {\n    return x;\n  };\n}\n","export function x(d) {\n  return d[0];\n}\n\nexport function y(d) {\n  return d[1];\n}\n","function RedBlackTree() {\n  this._ = null; // root node\n}\n\nexport function RedBlackNode(node) {\n  node.U = // parent node\n  node.C = // color - true for red, false for black\n  node.L = // left node\n  node.R = // right node\n  node.P = // previous node\n  node.N = null; // next node\n}\n\nRedBlackTree.prototype = {\n  constructor: RedBlackTree,\n\n  insert: function(after, node) {\n    var parent, grandpa, uncle;\n\n    if (after) {\n      node.P = after;\n      node.N = after.N;\n      if (after.N) after.N.P = node;\n      after.N = node;\n      if (after.R) {\n        after = after.R;\n        while (after.L) after = after.L;\n        after.L = node;\n      } else {\n        after.R = node;\n      }\n      parent = after;\n    } else if (this._) {\n      after = RedBlackFirst(this._);\n      node.P = null;\n      node.N = after;\n      after.P = after.L = node;\n      parent = after;\n    } else {\n      node.P = node.N = null;\n      this._ = node;\n      parent = null;\n    }\n    node.L = node.R = null;\n    node.U = parent;\n    node.C = true;\n\n    after = node;\n    while (parent && parent.C) {\n      grandpa = parent.U;\n      if (parent === grandpa.L) {\n        uncle = grandpa.R;\n        if (uncle && uncle.C) {\n          parent.C = uncle.C = false;\n          grandpa.C = true;\n          after = grandpa;\n        } else {\n          if (after === parent.R) {\n            RedBlackRotateLeft(this, parent);\n            after = parent;\n            parent = after.U;\n          }\n          parent.C = false;\n          grandpa.C = true;\n          RedBlackRotateRight(this, grandpa);\n        }\n      } else {\n        uncle = grandpa.L;\n        if (uncle && uncle.C) {\n          parent.C = uncle.C = false;\n          grandpa.C = true;\n          after = grandpa;\n        } else {\n          if (after === parent.L) {\n            RedBlackRotateRight(this, parent);\n            after = parent;\n            parent = after.U;\n          }\n          parent.C = false;\n          grandpa.C = true;\n          RedBlackRotateLeft(this, grandpa);\n        }\n      }\n      parent = after.U;\n    }\n    this._.C = false;\n  },\n\n  remove: function(node) {\n    if (node.N) node.N.P = node.P;\n    if (node.P) node.P.N = node.N;\n    node.N = node.P = null;\n\n    var parent = node.U,\n        sibling,\n        left = node.L,\n        right = node.R,\n        next,\n        red;\n\n    if (!left) next = right;\n    else if (!right) next = left;\n    else next = RedBlackFirst(right);\n\n    if (parent) {\n      if (parent.L === node) parent.L = next;\n      else parent.R = next;\n    } else {\n      this._ = next;\n    }\n\n    if (left && right) {\n      red = next.C;\n      next.C = node.C;\n      next.L = left;\n      left.U = next;\n      if (next !== right) {\n        parent = next.U;\n        next.U = node.U;\n        node = next.R;\n        parent.L = node;\n        next.R = right;\n        right.U = next;\n      } else {\n        next.U = parent;\n        parent = next;\n        node = next.R;\n      }\n    } else {\n      red = node.C;\n      node = next;\n    }\n\n    if (node) node.U = parent;\n    if (red) return;\n    if (node && node.C) { node.C = false; return; }\n\n    do {\n      if (node === this._) break;\n      if (node === parent.L) {\n        sibling = parent.R;\n        if (sibling.C) {\n          sibling.C = false;\n          parent.C = true;\n          RedBlackRotateLeft(this, parent);\n          sibling = parent.R;\n        }\n        if ((sibling.L && sibling.L.C)\n            || (sibling.R && sibling.R.C)) {\n          if (!sibling.R || !sibling.R.C) {\n            sibling.L.C = false;\n            sibling.C = true;\n            RedBlackRotateRight(this, sibling);\n            sibling = parent.R;\n          }\n          sibling.C = parent.C;\n          parent.C = sibling.R.C = false;\n          RedBlackRotateLeft(this, parent);\n          node = this._;\n          break;\n        }\n      } else {\n        sibling = parent.L;\n        if (sibling.C) {\n          sibling.C = false;\n          parent.C = true;\n          RedBlackRotateRight(this, parent);\n          sibling = parent.L;\n        }\n        if ((sibling.L && sibling.L.C)\n          || (sibling.R && sibling.R.C)) {\n          if (!sibling.L || !sibling.L.C) {\n            sibling.R.C = false;\n            sibling.C = true;\n            RedBlackRotateLeft(this, sibling);\n            sibling = parent.L;\n          }\n          sibling.C = parent.C;\n          parent.C = sibling.L.C = false;\n          RedBlackRotateRight(this, parent);\n          node = this._;\n          break;\n        }\n      }\n      sibling.C = true;\n      node = parent;\n      parent = parent.U;\n    } while (!node.C);\n\n    if (node) node.C = false;\n  }\n};\n\nfunction RedBlackRotateLeft(tree, node) {\n  var p = node,\n      q = node.R,\n      parent = p.U;\n\n  if (parent) {\n    if (parent.L === p) parent.L = q;\n    else parent.R = q;\n  } else {\n    tree._ = q;\n  }\n\n  q.U = parent;\n  p.U = q;\n  p.R = q.L;\n  if (p.R) p.R.U = p;\n  q.L = p;\n}\n\nfunction RedBlackRotateRight(tree, node) {\n  var p = node,\n      q = node.L,\n      parent = p.U;\n\n  if (parent) {\n    if (parent.L === p) parent.L = q;\n    else parent.R = q;\n  } else {\n    tree._ = q;\n  }\n\n  q.U = parent;\n  p.U = q;\n  p.L = q.R;\n  if (p.L) p.L.U = p;\n  q.R = p;\n}\n\nfunction RedBlackFirst(node) {\n  while (node.L) node = node.L;\n  return node;\n}\n\nexport default RedBlackTree;\n","import {cells, edges, epsilon} from \"./Diagram\";\n\nexport function createEdge(left, right, v0, v1) {\n  var edge = [null, null],\n      index = edges.push(edge) - 1;\n  edge.left = left;\n  edge.right = right;\n  if (v0) setEdgeEnd(edge, left, right, v0);\n  if (v1) setEdgeEnd(edge, right, left, v1);\n  cells[left.index].halfedges.push(index);\n  cells[right.index].halfedges.push(index);\n  return edge;\n}\n\nexport function createBorderEdge(left, v0, v1) {\n  var edge = [v0, v1];\n  edge.left = left;\n  return edge;\n}\n\nexport function setEdgeEnd(edge, left, right, vertex) {\n  if (!edge[0] && !edge[1]) {\n    edge[0] = vertex;\n    edge.left = left;\n    edge.right = right;\n  } else if (edge.left === right) {\n    edge[1] = vertex;\n  } else {\n    edge[0] = vertex;\n  }\n}\n\n// Liang–Barsky line clipping.\nfunction clipEdge(edge, x0, y0, x1, y1) {\n  var a = edge[0],\n      b = edge[1],\n      ax = a[0],\n      ay = a[1],\n      bx = b[0],\n      by = b[1],\n      t0 = 0,\n      t1 = 1,\n      dx = bx - ax,\n      dy = by - ay,\n      r;\n\n  r = x0 - ax;\n  if (!dx && r > 0) return;\n  r /= dx;\n  if (dx < 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  } else if (dx > 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  }\n\n  r = x1 - ax;\n  if (!dx && r < 0) return;\n  r /= dx;\n  if (dx < 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  } else if (dx > 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  }\n\n  r = y0 - ay;\n  if (!dy && r > 0) return;\n  r /= dy;\n  if (dy < 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  } else if (dy > 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  }\n\n  r = y1 - ay;\n  if (!dy && r < 0) return;\n  r /= dy;\n  if (dy < 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  } else if (dy > 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  }\n\n  if (!(t0 > 0) && !(t1 < 1)) return true; // TODO Better check?\n\n  if (t0 > 0) edge[0] = [ax + t0 * dx, ay + t0 * dy];\n  if (t1 < 1) edge[1] = [ax + t1 * dx, ay + t1 * dy];\n  return true;\n}\n\nfunction connectEdge(edge, x0, y0, x1, y1) {\n  var v1 = edge[1];\n  if (v1) return true;\n\n  var v0 = edge[0],\n      left = edge.left,\n      right = edge.right,\n      lx = left[0],\n      ly = left[1],\n      rx = right[0],\n      ry = right[1],\n      fx = (lx + rx) / 2,\n      fy = (ly + ry) / 2,\n      fm,\n      fb;\n\n  if (ry === ly) {\n    if (fx < x0 || fx >= x1) return;\n    if (lx > rx) {\n      if (!v0) v0 = [fx, y0];\n      else if (v0[1] >= y1) return;\n      v1 = [fx, y1];\n    } else {\n      if (!v0) v0 = [fx, y1];\n      else if (v0[1] < y0) return;\n      v1 = [fx, y0];\n    }\n  } else {\n    fm = (lx - rx) / (ry - ly);\n    fb = fy - fm * fx;\n    if (fm < -1 || fm > 1) {\n      if (lx > rx) {\n        if (!v0) v0 = [(y0 - fb) / fm, y0];\n        else if (v0[1] >= y1) return;\n        v1 = [(y1 - fb) / fm, y1];\n      } else {\n        if (!v0) v0 = [(y1 - fb) / fm, y1];\n        else if (v0[1] < y0) return;\n        v1 = [(y0 - fb) / fm, y0];\n      }\n    } else {\n      if (ly < ry) {\n        if (!v0) v0 = [x0, fm * x0 + fb];\n        else if (v0[0] >= x1) return;\n        v1 = [x1, fm * x1 + fb];\n      } else {\n        if (!v0) v0 = [x1, fm * x1 + fb];\n        else if (v0[0] < x0) return;\n        v1 = [x0, fm * x0 + fb];\n      }\n    }\n  }\n\n  edge[0] = v0;\n  edge[1] = v1;\n  return true;\n}\n\nexport function clipEdges(x0, y0, x1, y1) {\n  var i = edges.length,\n      edge;\n\n  while (i--) {\n    if (!connectEdge(edge = edges[i], x0, y0, x1, y1)\n        || !clipEdge(edge, x0, y0, x1, y1)\n        || !(Math.abs(edge[0][0] - edge[1][0]) > epsilon\n            || Math.abs(edge[0][1] - edge[1][1]) > epsilon)) {\n      delete edges[i];\n    }\n  }\n}\n","import {createBorderEdge} from \"./Edge\";\nimport {cells, edges, epsilon} from \"./Diagram\";\n\nexport function createCell(site) {\n  return cells[site.index] = {\n    site: site,\n    halfedges: []\n  };\n}\n\nfunction cellHalfedgeAngle(cell, edge) {\n  var site = cell.site,\n      va = edge.left,\n      vb = edge.right;\n  if (site === vb) vb = va, va = site;\n  if (vb) return Math.atan2(vb[1] - va[1], vb[0] - va[0]);\n  if (site === va) va = edge[1], vb = edge[0];\n  else va = edge[0], vb = edge[1];\n  return Math.atan2(va[0] - vb[0], vb[1] - va[1]);\n}\n\nexport function cellHalfedgeStart(cell, edge) {\n  return edge[+(edge.left !== cell.site)];\n}\n\nexport function cellHalfedgeEnd(cell, edge) {\n  return edge[+(edge.left === cell.site)];\n}\n\nexport function sortCellHalfedges() {\n  for (var i = 0, n = cells.length, cell, halfedges, j, m; i < n; ++i) {\n    if ((cell = cells[i]) && (m = (halfedges = cell.halfedges).length)) {\n      var index = new Array(m),\n          array = new Array(m);\n      for (j = 0; j < m; ++j) index[j] = j, array[j] = cellHalfedgeAngle(cell, edges[halfedges[j]]);\n      index.sort(function(i, j) { return array[j] - array[i]; });\n      for (j = 0; j < m; ++j) array[j] = halfedges[index[j]];\n      for (j = 0; j < m; ++j) halfedges[j] = array[j];\n    }\n  }\n}\n\nexport function clipCells(x0, y0, x1, y1) {\n  var nCells = cells.length,\n      iCell,\n      cell,\n      site,\n      iHalfedge,\n      halfedges,\n      nHalfedges,\n      start,\n      startX,\n      startY,\n      end,\n      endX,\n      endY,\n      cover = true;\n\n  for (iCell = 0; iCell < nCells; ++iCell) {\n    if (cell = cells[iCell]) {\n      site = cell.site;\n      halfedges = cell.halfedges;\n      iHalfedge = halfedges.length;\n\n      // Remove any dangling clipped edges.\n      while (iHalfedge--) {\n        if (!edges[halfedges[iHalfedge]]) {\n          halfedges.splice(iHalfedge, 1);\n        }\n      }\n\n      // Insert any border edges as necessary.\n      iHalfedge = 0, nHalfedges = halfedges.length;\n      while (iHalfedge < nHalfedges) {\n        end = cellHalfedgeEnd(cell, edges[halfedges[iHalfedge]]), endX = end[0], endY = end[1];\n        start = cellHalfedgeStart(cell, edges[halfedges[++iHalfedge % nHalfedges]]), startX = start[0], startY = start[1];\n        if (Math.abs(endX - startX) > epsilon || Math.abs(endY - startY) > epsilon) {\n          halfedges.splice(iHalfedge, 0, edges.push(createBorderEdge(site, end,\n              Math.abs(endX - x0) < epsilon && y1 - endY > epsilon ? [x0, Math.abs(startX - x0) < epsilon ? startY : y1]\n              : Math.abs(endY - y1) < epsilon && x1 - endX > epsilon ? [Math.abs(startY - y1) < epsilon ? startX : x1, y1]\n              : Math.abs(endX - x1) < epsilon && endY - y0 > epsilon ? [x1, Math.abs(startX - x1) < epsilon ? startY : y0]\n              : Math.abs(endY - y0) < epsilon && endX - x0 > epsilon ? [Math.abs(startY - y0) < epsilon ? startX : x0, y0]\n              : null)) - 1);\n          ++nHalfedges;\n        }\n      }\n\n      if (nHalfedges) cover = false;\n    }\n  }\n\n  // If there weren’t any edges, have the closest site cover the extent.\n  // It doesn’t matter which corner of the extent we measure!\n  if (cover) {\n    var dx, dy, d2, dc = Infinity;\n\n    for (iCell = 0, cover = null; iCell < nCells; ++iCell) {\n      if (cell = cells[iCell]) {\n        site = cell.site;\n        dx = site[0] - x0;\n        dy = site[1] - y0;\n        d2 = dx * dx + dy * dy;\n        if (d2 < dc) dc = d2, cover = cell;\n      }\n    }\n\n    if (cover) {\n      var v00 = [x0, y0], v01 = [x0, y1], v11 = [x1, y1], v10 = [x1, y0];\n      cover.halfedges.push(\n        edges.push(createBorderEdge(site = cover.site, v00, v01)) - 1,\n        edges.push(createBorderEdge(site, v01, v11)) - 1,\n        edges.push(createBorderEdge(site, v11, v10)) - 1,\n        edges.push(createBorderEdge(site, v10, v00)) - 1\n      );\n    }\n  }\n\n  // Lastly delete any cells with no edges; these were entirely clipped.\n  for (iCell = 0; iCell < nCells; ++iCell) {\n    if (cell = cells[iCell]) {\n      if (!cell.halfedges.length) {\n        delete cells[iCell];\n      }\n    }\n  }\n}\n","import {RedBlackNode} from \"./RedBlackTree\";\nimport {circles, epsilon2} from \"./Diagram\";\n\nvar circlePool = [];\n\nexport var firstCircle;\n\nfunction Circle() {\n  RedBlackNode(this);\n  this.x =\n  this.y =\n  this.arc =\n  this.site =\n  this.cy = null;\n}\n\nexport function attachCircle(arc) {\n  var lArc = arc.P,\n      rArc = arc.N;\n\n  if (!lArc || !rArc) return;\n\n  var lSite = lArc.site,\n      cSite = arc.site,\n      rSite = rArc.site;\n\n  if (lSite === rSite) return;\n\n  var bx = cSite[0],\n      by = cSite[1],\n      ax = lSite[0] - bx,\n      ay = lSite[1] - by,\n      cx = rSite[0] - bx,\n      cy = rSite[1] - by;\n\n  var d = 2 * (ax * cy - ay * cx);\n  if (d >= -epsilon2) return;\n\n  var ha = ax * ax + ay * ay,\n      hc = cx * cx + cy * cy,\n      x = (cy * ha - ay * hc) / d,\n      y = (ax * hc - cx * ha) / d;\n\n  var circle = circlePool.pop() || new Circle;\n  circle.arc = arc;\n  circle.site = cSite;\n  circle.x = x + bx;\n  circle.y = (circle.cy = y + by) + Math.sqrt(x * x + y * y); // y bottom\n\n  arc.circle = circle;\n\n  var before = null,\n      node = circles._;\n\n  while (node) {\n    if (circle.y < node.y || (circle.y === node.y && circle.x <= node.x)) {\n      if (node.L) node = node.L;\n      else { before = node.P; break; }\n    } else {\n      if (node.R) node = node.R;\n      else { before = node; break; }\n    }\n  }\n\n  circles.insert(before, circle);\n  if (!before) firstCircle = circle;\n}\n\nexport function detachCircle(arc) {\n  var circle = arc.circle;\n  if (circle) {\n    if (!circle.P) firstCircle = circle.N;\n    circles.remove(circle);\n    circlePool.push(circle);\n    RedBlackNode(circle);\n    arc.circle = null;\n  }\n}\n","import {RedBlackNode} from \"./RedBlackTree\";\nimport {createCell} from \"./Cell\";\nimport {attachCircle, detachCircle} from \"./Circle\";\nimport {createEdge, setEdgeEnd} from \"./Edge\";\nimport {beaches, epsilon} from \"./Diagram\";\n\nvar beachPool = [];\n\nfunction Beach() {\n  RedBlackNode(this);\n  this.edge =\n  this.site =\n  this.circle = null;\n}\n\nfunction createBeach(site) {\n  var beach = beachPool.pop() || new Beach;\n  beach.site = site;\n  return beach;\n}\n\nfunction detachBeach(beach) {\n  detachCircle(beach);\n  beaches.remove(beach);\n  beachPool.push(beach);\n  RedBlackNode(beach);\n}\n\nexport function removeBeach(beach) {\n  var circle = beach.circle,\n      x = circle.x,\n      y = circle.cy,\n      vertex = [x, y],\n      previous = beach.P,\n      next = beach.N,\n      disappearing = [beach];\n\n  detachBeach(beach);\n\n  var lArc = previous;\n  while (lArc.circle\n      && Math.abs(x - lArc.circle.x) < epsilon\n      && Math.abs(y - lArc.circle.cy) < epsilon) {\n    previous = lArc.P;\n    disappearing.unshift(lArc);\n    detachBeach(lArc);\n    lArc = previous;\n  }\n\n  disappearing.unshift(lArc);\n  detachCircle(lArc);\n\n  var rArc = next;\n  while (rArc.circle\n      && Math.abs(x - rArc.circle.x) < epsilon\n      && Math.abs(y - rArc.circle.cy) < epsilon) {\n    next = rArc.N;\n    disappearing.push(rArc);\n    detachBeach(rArc);\n    rArc = next;\n  }\n\n  disappearing.push(rArc);\n  detachCircle(rArc);\n\n  var nArcs = disappearing.length,\n      iArc;\n  for (iArc = 1; iArc < nArcs; ++iArc) {\n    rArc = disappearing[iArc];\n    lArc = disappearing[iArc - 1];\n    setEdgeEnd(rArc.edge, lArc.site, rArc.site, vertex);\n  }\n\n  lArc = disappearing[0];\n  rArc = disappearing[nArcs - 1];\n  rArc.edge = createEdge(lArc.site, rArc.site, null, vertex);\n\n  attachCircle(lArc);\n  attachCircle(rArc);\n}\n\nexport function addBeach(site) {\n  var x = site[0],\n      directrix = site[1],\n      lArc,\n      rArc,\n      dxl,\n      dxr,\n      node = beaches._;\n\n  while (node) {\n    dxl = leftBreakPoint(node, directrix) - x;\n    if (dxl > epsilon) node = node.L; else {\n      dxr = x - rightBreakPoint(node, directrix);\n      if (dxr > epsilon) {\n        if (!node.R) {\n          lArc = node;\n          break;\n        }\n        node = node.R;\n      } else {\n        if (dxl > -epsilon) {\n          lArc = node.P;\n          rArc = node;\n        } else if (dxr > -epsilon) {\n          lArc = node;\n          rArc = node.N;\n        } else {\n          lArc = rArc = node;\n        }\n        break;\n      }\n    }\n  }\n\n  createCell(site);\n  var newArc = createBeach(site);\n  beaches.insert(lArc, newArc);\n\n  if (!lArc && !rArc) return;\n\n  if (lArc === rArc) {\n    detachCircle(lArc);\n    rArc = createBeach(lArc.site);\n    beaches.insert(newArc, rArc);\n    newArc.edge = rArc.edge = createEdge(lArc.site, newArc.site);\n    attachCircle(lArc);\n    attachCircle(rArc);\n    return;\n  }\n\n  if (!rArc) { // && lArc\n    newArc.edge = createEdge(lArc.site, newArc.site);\n    return;\n  }\n\n  // else lArc !== rArc\n  detachCircle(lArc);\n  detachCircle(rArc);\n\n  var lSite = lArc.site,\n      ax = lSite[0],\n      ay = lSite[1],\n      bx = site[0] - ax,\n      by = site[1] - ay,\n      rSite = rArc.site,\n      cx = rSite[0] - ax,\n      cy = rSite[1] - ay,\n      d = 2 * (bx * cy - by * cx),\n      hb = bx * bx + by * by,\n      hc = cx * cx + cy * cy,\n      vertex = [(cy * hb - by * hc) / d + ax, (bx * hc - cx * hb) / d + ay];\n\n  setEdgeEnd(rArc.edge, lSite, rSite, vertex);\n  newArc.edge = createEdge(lSite, site, null, vertex);\n  rArc.edge = createEdge(site, rSite, null, vertex);\n  attachCircle(lArc);\n  attachCircle(rArc);\n}\n\nfunction leftBreakPoint(arc, directrix) {\n  var site = arc.site,\n      rfocx = site[0],\n      rfocy = site[1],\n      pby2 = rfocy - directrix;\n\n  if (!pby2) return rfocx;\n\n  var lArc = arc.P;\n  if (!lArc) return -Infinity;\n\n  site = lArc.site;\n  var lfocx = site[0],\n      lfocy = site[1],\n      plby2 = lfocy - directrix;\n\n  if (!plby2) return lfocx;\n\n  var hl = lfocx - rfocx,\n      aby2 = 1 / pby2 - 1 / plby2,\n      b = hl / plby2;\n\n  if (aby2) return (-b + Math.sqrt(b * b - 2 * aby2 * (hl * hl / (-2 * plby2) - lfocy + plby2 / 2 + rfocy - pby2 / 2))) / aby2 + rfocx;\n\n  return (rfocx + lfocx) / 2;\n}\n\nfunction rightBreakPoint(arc, directrix) {\n  var rArc = arc.N;\n  if (rArc) return leftBreakPoint(rArc, directrix);\n  var site = arc.site;\n  return site[1] === directrix ? site[0] : Infinity;\n}\n","import {addBeach, removeBeach} from \"./Beach\";\nimport {sortCellHalfedges, cellHalfedgeStart, clipCells} from \"./Cell\";\nimport {firstCircle} from \"./Circle\";\nimport {clipEdges} from \"./Edge\";\nimport RedBlackTree from \"./RedBlackTree\";\n\nexport var epsilon = 1e-6;\nexport var epsilon2 = 1e-12;\nexport var beaches;\nexport var cells;\nexport var circles;\nexport var edges;\n\nfunction triangleArea(a, b, c) {\n  return (a[0] - c[0]) * (b[1] - a[1]) - (a[0] - b[0]) * (c[1] - a[1]);\n}\n\nfunction lexicographic(a, b) {\n  return b[1] - a[1]\n      || b[0] - a[0];\n}\n\nexport default function Diagram(sites, extent) {\n  var site = sites.sort(lexicographic).pop(),\n      x,\n      y,\n      circle;\n\n  edges = [];\n  cells = new Array(sites.length);\n  beaches = new RedBlackTree;\n  circles = new RedBlackTree;\n\n  while (true) {\n    circle = firstCircle;\n    if (site && (!circle || site[1] < circle.y || (site[1] === circle.y && site[0] < circle.x))) {\n      if (site[0] !== x || site[1] !== y) {\n        addBeach(site);\n        x = site[0], y = site[1];\n      }\n      site = sites.pop();\n    } else if (circle) {\n      removeBeach(circle.arc);\n    } else {\n      break;\n    }\n  }\n\n  sortCellHalfedges();\n\n  if (extent) {\n    var x0 = +extent[0][0],\n        y0 = +extent[0][1],\n        x1 = +extent[1][0],\n        y1 = +extent[1][1];\n    clipEdges(x0, y0, x1, y1);\n    clipCells(x0, y0, x1, y1);\n  }\n\n  this.edges = edges;\n  this.cells = cells;\n\n  beaches =\n  circles =\n  edges =\n  cells = null;\n}\n\nDiagram.prototype = {\n  constructor: Diagram,\n\n  polygons: function() {\n    var edges = this.edges;\n\n    return this.cells.map(function(cell) {\n      var polygon = cell.halfedges.map(function(i) { return cellHalfedgeStart(cell, edges[i]); });\n      polygon.data = cell.site.data;\n      return polygon;\n    });\n  },\n\n  triangles: function() {\n    var triangles = [],\n        edges = this.edges;\n\n    this.cells.forEach(function(cell, i) {\n      if (!(m = (halfedges = cell.halfedges).length)) return;\n      var site = cell.site,\n          halfedges,\n          j = -1,\n          m,\n          s0,\n          e1 = edges[halfedges[m - 1]],\n          s1 = e1.left === site ? e1.right : e1.left;\n\n      while (++j < m) {\n        s0 = s1;\n        e1 = edges[halfedges[j]];\n        s1 = e1.left === site ? e1.right : e1.left;\n        if (s0 && s1 && i < s0.index && i < s1.index && triangleArea(site, s0, s1) < 0) {\n          triangles.push([site.data, s0.data, s1.data]);\n        }\n      }\n    });\n\n    return triangles;\n  },\n\n  links: function() {\n    return this.edges.filter(function(edge) {\n      return edge.right;\n    }).map(function(edge) {\n      return {\n        source: edge.left.data,\n        target: edge.right.data\n      };\n    });\n  },\n\n  find: function(x, y, radius) {\n    var that = this, i0, i1 = that._found || 0, n = that.cells.length, cell;\n\n    // Use the previously-found cell, or start with an arbitrary one.\n    while (!(cell = that.cells[i1])) if (++i1 >= n) return null;\n    var dx = x - cell.site[0], dy = y - cell.site[1], d2 = dx * dx + dy * dy;\n\n    // Traverse the half-edges to find a closer cell, if any.\n    do {\n      cell = that.cells[i0 = i1], i1 = null;\n      cell.halfedges.forEach(function(e) {\n        var edge = that.edges[e], v = edge.left;\n        if ((v === cell.site || !v) && !(v = edge.right)) return;\n        var vx = x - v[0], vy = y - v[1], v2 = vx * vx + vy * vy;\n        if (v2 < d2) d2 = v2, i1 = v.index;\n      });\n    } while (i1 !== null);\n\n    that._found = i0;\n\n    return radius == null || d2 <= radius * radius ? cell.site : null;\n  }\n}\n","import constant from \"./constant\";\nimport {x as pointX, y as pointY} from \"./point\";\nimport Diagram, {epsilon} from \"./Diagram\";\n\nexport default function() {\n  var x = pointX,\n      y = pointY,\n      extent = null;\n\n  function voronoi(data) {\n    return new Diagram(data.map(function(d, i) {\n      var s = [Math.round(x(d, i, data) / epsilon) * epsilon, Math.round(y(d, i, data) / epsilon) * epsilon];\n      s.index = i;\n      s.data = d;\n      return s;\n    }), extent);\n  }\n\n  voronoi.polygons = function(data) {\n    return voronoi(data).polygons();\n  };\n\n  voronoi.links = function(data) {\n    return voronoi(data).links();\n  };\n\n  voronoi.triangles = function(data) {\n    return voronoi(data).triangles();\n  };\n\n  voronoi.x = function(_) {\n    return arguments.length ? (x = typeof _ === \"function\" ? _ : constant(+_), voronoi) : x;\n  };\n\n  voronoi.y = function(_) {\n    return arguments.length ? (y = typeof _ === \"function\" ? _ : constant(+_), voronoi) : y;\n  };\n\n  voronoi.extent = function(_) {\n    return arguments.length ? (extent = _ == null ? null : [[+_[0][0], +_[0][1]], [+_[1][0], +_[1][1]]], voronoi) : extent && [[extent[0][0], extent[0][1]], [extent[1][0], extent[1][1]]];\n  };\n\n  voronoi.size = function(_) {\n    return arguments.length ? (extent = _ == null ? null : [[0, 0], [+_[0], +_[1]]], voronoi) : extent && [extent[1][0] - extent[0][0], extent[1][1] - extent[0][1]];\n  };\n\n  return voronoi;\n}\n","/**\n * This class represents a selection applied on a data array.\n *\n * @class Selection\n */\nclass Selection {\n    /**\n     * Creates an instance of Selection.\n     * @param {Array<DataObject>} data Array of DataObjects.\n     * @memberof Selection\n     */\n    constructor () {\n        this._data = [];\n        // // map of id to data\n        this._idMap = {};\n        this._dataMap = {};\n        this._mode = '';\n        // data.forEach((item, idx) => {\n        //     const index = item.id || idx;\n        //     this._idMap[index] = item;\n        // });\n        // // array to store data in enter phase\n        this._enterdata = [];\n        // // array to store data in exit phase\n        this._exitdata = [];\n    }\n    /**\n     *  Gets the object bound to a class\n     *\n     * @return {Object} current data set bound to the class\n     * @memberof Selection\n     */\n    getObjects () {\n        return Object.values(this._idMap);\n    }\n\n    /**\n     * This method is used to supply seed data to a selection.\n     *\n     * @param {Array} newData Seed data to create the enter selection.\n     * @param {Functon | undefined } idGetter This function is used to uniqely identify a data entry.\n     * @return {Selection} Modified selection.\n     * @memberof Selection\n     */\n    data (newData, idGetter) {\n        if (idGetter) {\n            this._data = [];\n            this._idGetter = idGetter;\n            const tempMap = {};\n\n            newData.forEach((...params) => {\n                const index = idGetter(...params);\n                tempMap[index] = params[0];\n            });\n            // check if any data items have been removed\n            const purgedIds = [];\n\n            Object.keys(this._idMap).forEach((id) => {\n                if (!tempMap[id]) {\n                    purgedIds.push(id);\n                }\n            });\n\n            Object.keys(tempMap).forEach((id) => {\n                if (!this._idMap[id]) {\n                    this._enterdata.push(tempMap[id]);\n                } else {\n                    this._idMap[id] = tempMap[id];\n                    this._data.push(tempMap[id]);\n                }\n            });\n            // move the purged items to exit selection\n            purgedIds.forEach((id) => {\n                const purged = this._idMap[id];\n                this._exitdata.push(purged);\n                // this._data = this._data.slice(id, 1);\n                delete this._idMap[id];\n            });\n            // this._data = this._data.slice(temp, this._data.length);\n\n            return this;\n        }\n        // no id getter supplied so use indices\n        if (newData.length > this._data.length) {\n            const startIdx = this._data.length;\n            for (let i = startIdx; i < newData.length; i += 1) {\n                this._enterdata.push(newData[i]);\n            }\n        } else {\n            // push to exit selection\n            const temp = newData.length;\n            for (let i = temp; i < this._data.length; i += 1) {\n                const purged = this._data[i];\n                delete this._idMap[purged.id];\n                this._exitdata.push(purged);\n            }\n            this._data = this._data.slice(temp, this._data.length);\n        }\n        return this;\n    }\n\n    /**\n     * Applies the supplied callback to each data element\n     * and returns a new selection.\n     *\n     * @param {Function} callback Callback to execute on each item.\n     * @return {Selection} New selection with data created using callback.\n     * @memberof EnterSelection\n     */\n    append (callback) {\n        this[`_${this._mode}data`].forEach((...params) => {\n            const data = params[0];\n            const id = this._idGetter ? this._idGetter(...params) : (data.id || params[1]);\n            this._idMap[id] = callback(...params);\n            this._dataMap[id] = data;\n        });\n        this._mode = '';\n        return this;\n    }\n\n    /**\n     * This method returns an enter selection that\n     * allows or update operations.\n     *\n     * @return {EnterSelection} Instance of enter selection.\n     * @memberof Selection\n     */\n    enter () {\n        this._mode = 'enter';\n        return this;\n        // return new EnterSelection(this._enterdata, this._idMap, this._idGetter);\n    }\n\n    /**\n     * This method is used to set key value pairs\n     * on data objects.\n     *\n     * @param {string} key Name of property.\n     * @param {any} value Value of property.\n     * @return {Selection} Modified selection.\n     * @memberof Selection\n     */\n    attr (key, value) {\n        this._data.forEach(item => item.attr(key, value));\n        return this;\n    }\n\n    /**\n     * This method merges the data of one selection with another.\n     *\n     * @param {Selection} selection Instance of selection.\n     * @return {Selection} Modified selection.\n     * @memberof Selection\n     */\n    merge (selection) {\n        selection._data.forEach((...params) => {\n            const id = this._idGetter ? this._idGetter(...params) : (params[0].id || params[1]);\n            this._idMap[id] = params[0];\n            this._data.push(params[0]);\n        });\n        // reset enter selection\n        this._enterdata = [];\n        return this;\n    }\n\n    /**\n     * Returns a selection with exit data.\n     *\n     * @return {Selection} Instance of selection.\n     * @memberof Selection\n     */\n    exit () {\n        this._mode = 'exit';\n        // const exitdata = this._exitdata;\n        // const exitSelection = new Selection(exitdata);\n        // this._exitdata = [];\n        return this;\n    }\n\n    each (fn) {\n        Object.keys(this._idMap).forEach((e, i) => {\n            fn(this._idMap[e], this._dataMap[e], i);\n        });\n        return this;\n    }\n\n    map (fn) {\n        Object.keys(this._idMap).forEach((...params) => {\n            const key = params[0];\n            this._idMap[key] = fn(this._idMap[key], ...params, this._dataMap[key]);\n        });\n        return this;\n    }\n\n    /**\n     * Executes the cleanup operation associated with data objets.\n     *\n     * @memberof Selection\n     */\n    remove () {\n        // do cleanup on DDO's\n        const data = this[`_${this._mode}data`];\n\n        data.forEach(item => item.remove());\n        if (this._mode === '') {\n            this.each(e => e.remove());\n        }\n        this[`_${this._mode}data`] = [];\n        this._mode = '';\n    }\n}\n\nexport default Selection;\n","/* global window, requestAnimationFrame, cancelAnimationFrame */\nimport { FieldType, DimensionSubtype, DateTimeFormatter, default as DataModel } from 'datamodel';\nimport {\n    axisLeft,\n    axisRight,\n    axisTop,\n    axisBottom\n} from 'd3-axis';\nimport {\n    symbolCircle,\n    symbolCross,\n    symbolDiamond,\n    symbolSquare,\n    symbolStar,\n    symbolWye,\n    symbolTriangle,\n    symbol,\n    stack as d3Stack,\n    stackOffsetDiverging,\n    stackOrderNone,\n    stackOrderAscending,\n    stackOrderDescending,\n    stackOffsetNone,\n    stackOffsetExpand,\n    stackOffsetWiggle,\n    pie,\n    arc,\n    line,\n    curveLinear,\n    curveStepAfter,\n    curveStepBefore,\n    curveStep,\n    curveCatmullRom,\n    area\n} from 'd3-shape';\nimport { scaleBand } from 'd3-scale';\nimport { nest } from 'd3-collection';\nimport {\n    interpolate,\n    interpolateRgb,\n    piecewise,\n    interpolateNumber,\n    interpolateHslLong\n} from 'd3-interpolate';\nimport {\n    easeCubic,\n    easeBounce,\n    easePoly,\n    easeBack,\n    easeCircle,\n    easeLinear,\n    easeElastic\n} from 'd3-ease';\nimport {\n   color,\n   rgb,\n   hsl\n} from 'd3-color';\nimport { voronoi } from 'd3-voronoi';\nimport Model from 'hyperdis';\nimport { dataSelect } from './DataSystem';\nimport * as STACK_CONFIG from './enums/stack-config';\nimport { DM_OPERATION_GROUP } from './enums';\n\nconst { InvalidAwareTypes } = DataModel;\nconst HTMLElement = window.HTMLElement;\n\nconst isSimpleObject = (obj) => {\n    let token;\n    if (typeof obj === 'object') {\n        if (obj === null) { return false; }\n        token = Object.prototype.toString.call(obj);\n        if (token === '[object Object]') {\n            return (obj.constructor.toString().match(/^function (.*)\\(\\)/m) || [])[1] === 'Object';\n        }\n    }\n    return false;\n};\n\n/**\n * Returns unique id\n * @return {string} Unique id string\n */\nconst\n    getUniqueId = () => `id-${new Date().getTime()}${Math.round(Math.random() * 10000)}`;\n\n/**\n * Deep copies an object and returns a new object.\n * @param {Object} o Object to clone\n * @return {Object} New Object.\n */\nconst clone = (o) => {\n    const output = {};\n    let v;\n    for (const key in o) {\n        if ({}.hasOwnProperty.call(o, key)) {\n            v = o[key];\n            output[key] = isSimpleObject(v) ? clone(v) : v;\n        }\n    }\n    return output;\n};\n\n/**\n* Checks the existence of keys in an object\n* @param {Array} keys Set of keys which are to be checked\n* @param {Object} obj whose keys are checked from the set of keys provided\n* @return {Object} Error if the keys are absent, or the object itself\n*/\nconst checkExistence = (keys, obj) => {\n    const nonExistentKeys = [];\n    keys.forEach((key) => {\n        if (key in obj) {\n            return;\n        }\n        nonExistentKeys.push(key);\n    });\n    return nonExistentKeys;\n};\n\nconst sanitizeIP = {\n    typeObj: (keys, obj) => {\n        if (typeof obj !== 'object') {\n            return Error('Argument type object expected');\n        }\n\n        const nonExistentKeys = checkExistence(keys, obj);\n        if (nonExistentKeys.length) {\n            return Error(`Missing keys from parameter ${nonExistentKeys.join(', ')}`);\n        }\n        return obj;\n    },\n\n    /* istanbul ignore next */ htmlElem: (elem) => {\n        if (!(elem instanceof HTMLElement)) {\n            return Error('HTMLElement required');\n        }\n        return elem;\n    }\n};\n\n/**\n * Gets the maximum value from an array of objects for a given property name\n * @param  {Array.<Object>} data   Array of objects\n * @param  {string} field Field name\n * @return {number} Maximum value\n */\nconst getMax = (data, field) => Math.max(...data.map(d => d[field]));\n\n/**\n * Gets the minimum value from an array of objects for a given property name\n * @param  {Array.<Object>} data   Array of objects\n * @param  {string} field Field name\n * @return {number} Minimum value\n */\nconst getMin = (data, field) => Math.min(...data.map(d => d[field]));\n\n/**\n * Gets the domain from the data based on the field name and type of field\n * @param  {Array.<Object> | Array.<Array>} data       Data Array\n * @param  {Array.<string>} fields    Array of fields from where the domain will be calculated\n * @param {string} fieldType Type of field - nominal, quantitiative, temporal.\n * @return {Array} Usually contains a min and max value if field is quantitative or\n * an array of values if field type is nominal or ordinal\n */\nconst getDomainFromData = (data, fields, fieldType) => {\n    let domain;\n    const domArr = [];\n    data = data[0] instanceof Array ? data : [data];\n    switch (fieldType) {\n    case DimensionSubtype.CATEGORICAL:\n        domain = [].concat(...data.map(arr => arr.map(d => d[fields[0]]).filter(d => d !== undefined)));\n        break;\n    default:\n        for (let i = 0, len = data.length; i < len; i++) {\n            const arr = data[i];\n            const [field0, field1] = fields;\n            const arr0 = arr.filter(d => !isNaN(d[field0]));\n            const arr1 = arr.filter(d => !isNaN(d[field1]));\n            if (arr0.length || arr1.length) {\n                const firstMin = getMin(arr0, field0);\n                const secondMin = getMin(arr1, field1);\n                const firstMax = getMax(arr0, field0);\n                const secondMax = getMax(arr1, field1);\n                domArr.push([Math.min(firstMin, secondMin), Math.max(firstMax, secondMax)]);\n            }\n        }\n        domain = domArr.length ? [Math.min(...domArr.map(d => d[0])), Math.max(...domArr.map(d => d[1]))] : [];\n        break;\n    }\n    return domain;\n};\n\n/**\n * Union Domain values\n * @param {Array.<Array>} domains Array of domain values\n * @param {string} fieldType type of field - dimension,measure or datetime.\n * @return {Array} Unioned domain of all domain values.\n */\nconst unionDomain = (domains, fieldType) => {\n    let domain = [];\n    domains = domains.filter(dom => dom && dom.length);\n    if (domains.length) {\n        if (fieldType === DimensionSubtype.CATEGORICAL) {\n            domain = [].concat(...domains);\n        } else {\n            domain = [Math.min(...domains.map(d => d[0])), Math.max(...domains.map(d => d[1]))];\n        }\n    }\n\n    return domain;\n};\n\nconst symbolFns = {\n    circle: symbolCircle,\n    cross: symbolCross,\n    diamond: symbolDiamond,\n    square: symbolSquare,\n    star: symbolStar,\n    wye: symbolWye,\n    triangle: symbolTriangle\n};\n\nconst easeFns = {\n    cubic: easeCubic,\n    bounce: easeBounce,\n    linear: easeLinear,\n    elastic: easeElastic,\n    back: easeBack,\n    poly: easePoly,\n    circle: easeCircle\n};\n\n/**\n * Returns the maximum or minimum points of a compare value from an array of objects.\n * @param {Array} points Array of objects\n * @param {string} compareValue Key in the object on which the comparing will be done.\n * @param {string} minOrMax minimum or maximum.\n * @return {Object} Minimum or maximum point.\n */\nconst getExtremePoint = (points, compareValue, minOrMax) => {\n    let extremePoint;\n    let point;\n    const len = points.length;\n    let minOrMaxVal = minOrMax === 'max' ? -Infinity : Infinity;\n    let val;\n\n    for (let i = 0; i < len; i++) {\n        point = points[i];\n        val = point[compareValue];\n        if (minOrMax === 'min' ? val < minOrMaxVal : val > minOrMaxVal) {\n            minOrMaxVal = val;\n            extremePoint = point;\n        }\n    }\n\n    return extremePoint;\n};\n\n/**\n * Returns the minimum point of a compare value from an array of objects.\n * @param {Array} points Array of objects\n * @param {string} compareValue Key in the object on which the comparing will be done.\n * @return {Object} Minimum point.\n */\nconst getMinPoint = (points, compareValue) => getExtremePoint(points, compareValue, 'min');\n\n/**\n * Returns the maximum point of a compare value from an array of objects.\n * @param {Array} points Array of objects\n * @param {string} compareValue Key in the object on which the comparing will be done.\n * @return {Object} Maximum point.\n */\nconst getMaxPoint = (points, compareValue) => getExtremePoint(points, compareValue, 'max');\n\n/**\n * Gets the index of the closest value of the given value from the array.\n * @param {Array} arr Array of values\n * @param {number} value Value from which the nearest value will be calculated.\n * @param {string} side side property.\n * @return {number} index of the closest value\n */\n/* istanbul ignore next */const getClosestIndexOf = (arr, value, side) => {\n    let low = 0;\n    const arrLen = arr.length;\n    let high = arrLen - 1;\n\n    let mid;\n    let d1;\n    let d2;\n\n    while (low < high) {\n        mid = Math.floor((low + high) / 2);\n        d1 = Math.abs(arr[mid] - value);\n        d2 = Math.abs(arr[mid + 1] - value);\n\n        if (d2 <= d1) {\n            low = mid + 1;\n        } else {\n            high = mid;\n        }\n    }\n\n    if (!side) {\n        return high;\n    }\n\n    const highVal = arr[high];\n    if (highVal === value) {\n        return high;\n    } else if (highVal > value) {\n        if (high === 0) { return high; }\n        return side === 'left' ? high - 1 : high;\n    }\n    if (high === arr.length - 1) { return high; }\n    return side === 'left' ? high : high + 1;\n};\n\nconst getNearestValue = (data, key) => {\n    const filterData = data.filter(d => typeof d === 'number');\n    return filterData[getClosestIndexOf(filterData, key)];\n};\n\n/**\n * Returns the browser window object\n * @return {Window} Window object\n*/\nconst getWindow = () => window;\n\n/**\n * Returns the browser window object\n * @return {Window} Window object\n*/\nconst reqAnimFrame = (() => requestAnimationFrame)();\n\nconst cancelAnimFrame = (() => cancelAnimationFrame)();\n\n/**\n * Capitalizes the first letter of the word\n * @param {string} text word\n * @return {string} Capitalized word\n */\nconst capitalizeFirst = (text) => {\n    text = text.toLowerCase();\n\n    return text.replace(/\\w\\S*/g, txt => txt.charAt(0).toUpperCase() + txt.substr(1));\n};\n\n/**\n *\n *\n * @param {*} arr\n */\nconst unique = arr => ([...new Set(arr)]);\n\n/**\n * Gets the minimum difference between two consecutive numbers  in an array.\n * @param {Array} arr Array of numbers\n * @param {number} index index of the value\n * @return {number} minimum difference between values\n */\n/* istanbul ignore next */ const getMinDiff = (arr, index) => {\n    let diff;\n    let uniqueVals;\n    if (index !== undefined) {\n        uniqueVals = unique(arr.map(d => d[index]));\n    } else {\n        uniqueVals = unique(arr);\n    }\n    if (uniqueVals.length > 1) {\n        diff = Math.abs(uniqueVals[1] - uniqueVals[0]);\n        for (let i = 2, len = uniqueVals.length; i < len; i++) {\n            diff = Math.min(diff, Math.abs(uniqueVals[i] - uniqueVals[i - 1]));\n        }\n    } else {\n        diff = uniqueVals[0];\n    }\n\n    return diff;\n};\n\n/**\n * Returns the class name appended with a given id.\n * @param {string} cls class name\n * @param {string} id unique identifier\n * @param {string} prefix string needed to add before the classname\n * @return {string} qualified class name\n */\n/* istanbul ignore next */const getQualifiedClassName = (cls, id, prefix) => {\n    cls = cls.replace(/^\\.*/, '');\n    return [`${prefix}-${cls}`, `${prefix}-${cls}-${id}`];\n};\n\n/**\n * This method is used to set the default value for variables\n * without sullying the code with conditional statements.\n *\n * @export\n * @param {any} param The parameter to test.\n * @param {any} value The default value to assign.\n * @return {any} The value.\n */\n/* istanbul ignore next */ const defaultValue = (param, value) => {\n    if (typeof param === 'undefined' || (typeof param === 'object' && !param)) {\n        return value;\n    }\n    return param;\n};\n\n/**\n * DESCRIPTION TODO\n *\n * @export\n * @param {Object} graph graph whose dependency order has to be generated\n * @return {Object}\n */\nconst getDependencyOrder = (graph) => {\n    const dependencyOrder = [];\n    const visited = {};\n    const keys = Object.keys(graph);\n    /**\n     * DESCRIPTION TODO\n     *\n     * @export\n     * @param {Object} name\n     * @return {Object}\n     */\n    const visit = (name) => {\n        if (dependencyOrder.length === keys.length) {\n            return true;\n        }\n        visited[name] = true;\n        const edges = graph[name];\n        for (let e = 0; e < edges.length; e++) {\n            const dep = edges[e];\n            if (!visited[dep]) {\n                visit(dep);\n            }\n        }\n\n        dependencyOrder.push(name);\n        return false;\n    };\n\n    for (let i = 0; i < keys.length; i++) {\n        if (visit(keys[i], i)) break;\n    }\n\n    return dependencyOrder;\n};\n\n/**\n * Iterates over the properties of an object and applies the function\n *\n * @param {any} obj object to be iterated upon\n * @param {any} fn  function to be applied on it\n */\nconst objectIterator = (obj, fn) => {\n    for (const key in obj) {\n        if (Object.hasOwnProperty.call(obj, key)) {\n            fn(key, obj);\n        }\n    }\n};\n\n/**\n * This class creates a d3 voronoi for retrieving the nearest neighbour of any point from a set of two\n * dimensional points\n * @class Voronoi\n */\n/* istanbul ignore next */ class Voronoi {\n    /**\n     * Initialize the voronoi with the data given.\n     * @param {Array.<Object>} data Array of points.\n     */\n    constructor (data = []) {\n        this._voronoi = voronoi().x(d => d.x).y(d => d.y);\n        this.data(data);\n    }\n\n    /**\n     * Sets the data to voronoi\n     * @param {Array.<Object>} data Array of objects.\n     * @return {Voronoi} Instance of voronoi.\n     */\n    data (data) {\n        if (data) {\n            this._voronoiFn = this._voronoi(data);\n        }\n        return this;\n    }\n\n    /**\n     * Finds the closest point to the x and y position given.\n     * @param {number} x x value\n     * @param {number} y y value\n     * @param {number} radius search radius.\n     * @return {Object} Details of the nearest point.\n     */\n    find (x, y, radius) {\n        return this._voronoiFn.find(x, y, radius);\n    }\n}\n\nconst addListenerToNamespace = (namespaceInf, fn, context) => {\n    let key = namespaceInf.key;\n    const namespace = namespaceInf.namespace;\n    if (namespace) {\n        !context._listeners[namespace] && (context._listeners[namespace] = []);\n        if (!key) {\n            key = Object.keys(context._listeners[namespace]).length;\n        }\n        context._listeners[namespace][key] = fn;\n    } else {\n        key = Object.keys(context._listeners).length;\n        context._listeners[key] = fn;\n    }\n};\n\n/**\n *\n *\n * @param {*} obj\n * @param {*} fields\n *\n */\nconst getObjProp = (obj, ...fields) => {\n    if (obj === undefined || obj === null) {\n        return obj;\n    }\n    let retObj = obj;\n    for (let i = 0, len = fields.length; i < len; i++) {\n        retObj = retObj[fields[i]];\n        if (retObj === undefined || retObj === null) {\n            break;\n        }\n    }\n    return retObj;\n};\n\n/**\n * Methods to handle changes to table configuration and reactivity are handled by this\n * class.\n */\n/**\n *  Common store class\n *\n * @class Store\n */\nclass Store {\n    /**\n     * Creates an instance of Store.\n     * @param {Object} config The object to create the state store with.\n     * @memberof Store\n     */\n    constructor (config) {\n        // create reactive model\n        this.model = Model.create(config);\n        this._listeners = {};\n    }\n\n    /**\n     * This method returns a plain JSON object\n     * with all the fields in the state store.\n     *\n     * @return {Object} Serialized representation of state store.\n     * @memberof Store\n     */\n    serialize () {\n        return this.model.serialize();\n    }\n\n    /**\n     * This method is used to update the value of a property in the state store.\n     *\n     * @param {string} propName The name of the property.\n     * @param {number} value The new value of the property.\n     * @memberof Store\n     */\n    commit (propName, value) {\n        // check if appropriate enum has been used\n        this.model.prop(propName, value);\n    }\n\n    /**\n     * This method is used to register a callbacl that will execute\n     * when one or more properties change.\n     *\n     * @param {string | Array} propNames name of property or array of props.\n     * @param {Function} callBack The callback to execute.\n     * @memberof Store\n     */\n    /* istanbul ignore next */registerChangeListener (propNames, callBack, instantCall, namespaceInf = {}) {\n        let props = propNames;\n        if (!Array.isArray(propNames)) {\n            props = [propNames];\n        }\n        const fn = this.model.next(props, callBack, instantCall);\n        addListenerToNamespace(namespaceInf, fn, this);\n        return this;\n    }\n    /**\n     * This method is used to register a callbacl that will execute\n     * when one or more properties change.\n     *\n     * @param {string | Array} propNames name of property or array of props.\n     * @param {Function} callBack The callback to execute.\n     * @memberof Store\n     */\n    /* istanbul ignore next */ registerImmediateListener (propNames, callBack, instantCall, namespaceInf = {}) {\n        let props = propNames;\n        if (!Array.isArray(propNames)) {\n            props = [propNames];\n        }\n        const fn = this.model.on(props, callBack, instantCall);\n        addListenerToNamespace(namespaceInf, fn, this);\n        return this;\n    }\n    /**\n     * This method is used to get the name of the property\n     * from the state store.\n     *\n     * @param {string} propName The name of the field in state store.\n     * @return {any} The value of the field.\n     * @memberof Store\n     */\n    get (propName) {\n        return this.model.prop(propName);\n    }\n\n    /**\n     * This method is used to register a computed property that is computed every time\n     * the store value changes.\n     *\n     * @param {string} propName The name of the property to create.\n     * @param {Function} callBack The function to execute when depemdent props change.\n     * @memberof Store\n     */\n    computed (propName, callBack) {\n        return this.model.calculatedProp(propName, callBack);\n    }\n\n    append (propName, value) {\n        this.model.append(propName, value);\n        return this;\n    }\n\n    unsubscribeAll () {\n        Object.values(this._listeners).forEach(fn => fn());\n        return this;\n    }\n\n    unsubscribe (namespaceInf = {}) {\n        const { namespace, key } = namespaceInf;\n        const listeners = this._listeners[namespace];\n        if (key) {\n            const fn = getObjProp(listeners, key);\n            fn && fn();\n        } else {\n            Object.values(listeners).forEach(fn => fn());\n            this._listeners[namespace] = [];\n        }\n        return this;\n    }\n}\n\n/**\n * Sanitize an input number / string mixed number. Currently dot in the no is not supported.\n *\n * @param {number | string} val pure number or string mixed number\n * @return {number | null}  Number if it can be extracted. Otherwise null\n */\nconst intSanitizer = (val) => {\n    const arr = val.toString().match(/(\\d+)(px)*/g);\n    if (!arr) {\n        // If only characters are passed\n        return null;\n    }\n\n    return parseInt(arr[0], 10);\n};\n\n/**\n * Setter getter creator from config\n * Format\n *  PROPERTRY_NAME: {\n *      value: // default value of the property,\n *      meta: {\n *          typeCheck: // The setter value will be checked using this. If the value is function then the setter value\n *                     // is passed as args. (Optional)\n *          typeExpected: // The output of typecheck action will be tested against this. Truthy value will set the\n *                       // value to the setter\n *          sanitizaiton: // Need for sanitization before type is checked\n *      }\n *  }\n *\n * @param {Object} holder an empty object on which the getters and setters will be mounted\n * @param {Object} options options config based on which the getters and setters are determined.\n * @param {Hyperdis} model optional model to attach the property. If not sent new moel is created.\n * @return {Array}\n */\nconst transactor = (holder, options, model, namespaceInf = {}) => {\n    let conf;\n    const store = model && model instanceof Model ? model : Model.create({});\n    const stateProps = {};\n    for (const prop in options) {\n        if ({}.hasOwnProperty.call(options, prop)) {\n            conf = options[prop];\n            const addAsMethod = conf.meta ? conf.meta.addAsMethod : true;\n            let nameSpaceProp;\n            const namespace = namespaceInf.namespace;\n            if (namespace) {\n                nameSpaceProp = `${namespace}.${prop}`;\n            } else {\n                nameSpaceProp = prop;\n            }\n            if (!store.prop(`${nameSpaceProp}`)) {\n                stateProps[prop] = conf.value;\n            }\n            if (addAsMethod !== false) {\n                holder[prop] = ((context, meta, nsProp) => (...params) => {\n                    let val;\n                    let compareTo;\n                    const paramsLen = params.length;\n                    const prevVal = store.prop(nsProp);\n                    if (paramsLen) {\n                        // If parameters are passed then it's a setter\n                        const spreadParams = meta && meta.spreadParams;\n                        val = params;\n                        const values = [];\n                        if (meta) {\n                            for (let i = 0; i < paramsLen; i++) {\n                                val = params[i];\n                                const sanitization = meta.sanitization && (spreadParams ? meta.sanitization[i] :\n                                    meta.sanitization);\n                                const typeCheck = meta.typeCheck && (spreadParams ? meta.typeCheck[i] : meta.typeCheck);\n                                if (sanitization && typeof sanitization === 'function') {\n                                    // Sanitize if required\n                                    val = sanitization(val, prevVal, holder);\n                                }\n\n                                if (typeCheck) {\n                                    // Checking if a setter is valid\n                                    if (typeof typeCheck === 'function') {\n                                        let typeExpected = meta.typeExpected;\n                                        if (typeExpected && spreadParams) {\n                                            typeExpected = typeExpected[i];\n                                        }\n                                        if (typeExpected) {\n                                            compareTo = typeExpected;\n                                        } else {\n                                            compareTo = true;\n                                        }\n\n                                        if (typeCheck(val) === compareTo) {\n                                            values.push(val);\n                                        }\n                                    } else if (typeof typeCheck === 'string') {\n                                        if (typeCheck === 'constructor') {\n                                            const typeExpected = spreadParams ? meta.typeExpected[i] :\n                                                meta.typeExpected;\n                                            if (val && (val.constructor.name === typeExpected)) {\n                                                values.push(val);\n                                            }\n                                        }\n                                    } else {\n                                        // context.prop(key, val);\n                                        values.push(val);\n                                    }\n                                } else {\n                                    values.push(val);\n                                }\n                            }\n                            const preset = meta.preset;\n                            const oldValues = context.prop(nsProp);\n                            preset && preset(values[0], holder);\n                            if (spreadParams) {\n                                oldValues.forEach((value, i) => {\n                                    if (values[i] === undefined) {\n                                        values[i] = value;\n                                    }\n                                });\n                            }\n                            values.length && context.prop(nsProp, spreadParams ? values : values[0]);\n                        } else {\n                            context.prop(nsProp, spreadParams ? val : val[0]);\n                        }\n                        return holder;\n                    }\n                // No parameters are passed hence its a getter\n                    return context.prop(nsProp);\n                })(store, conf.meta, nameSpaceProp);\n            }\n        }\n    }\n\n    if (namespaceInf.namespace === undefined) {\n        store.append(stateProps);\n    } else {\n        const namespace = namespaceInf.namespace;\n        store.append(namespace, stateProps);\n    }\n\n    return [holder, store];\n};\n\n/**\n *\n *\n * @param {*} context\n * @param {*} props\n */\nconst generateGetterSetters = (context, props) => {\n    Object.entries(props).forEach((propInfo) => {\n        const prop = propInfo[0];\n        const typeChecker = propInfo[1].typeChecker;\n        const defVal = propInfo[1].defaultValue;\n        const sanitization = propInfo[1].sanitization;\n        const prototype = context.constructor.prototype;\n        if (!(Object.hasOwnProperty.call(prototype, prop))) {\n            if (defVal) {\n                context[`_${prop}`] = defVal;\n            }\n            context[prop] = (...params) => {\n                if (params.length) {\n                    let value = params[0];\n                    if (sanitization) {\n                        value = sanitization(context, params[0]);\n                    }\n                    if (typeChecker && !typeChecker(value)) {\n                        return context[`_${prop}`];\n                    }\n                    context[`_${prop}`] = value;\n                    return context;\n                } return context[`_${prop}`];\n            };\n        }\n    });\n};\n\n/**\n *\n *\n * @param {*} arr\n * @param {*} prop\n */\nconst getArraySum = (arr, prop) => arr.reduce((total, elem) => {\n    total += prop ? elem[prop] : elem;\n    return total;\n}, 0);\n\n/**\n *\n *\n * @param {*} arr1\n * @param {*} arr2\n *\n */\nconst arraysEqual = (arr1, arr2) => {\n    if (arr1.length !== arr2.length) { return false; }\n    for (let i = arr1.length; i >= 0; i--) {\n        if (arr1[i] !== arr2[i]) { return false; }\n    }\n\n    return true;\n};\n\n/* eslint valid-typeof:0 */\n/**\n * Returns a validation function which can be used to validate variables against a type and value\n *\n * @param {any} type type of value that the object should have\n * @return {Object} validation function\n */\nconst isEqual = type => (oldVal, newVal) => {\n    if (type === 'Array') {\n        if (!oldVal) {\n            return false;\n        }\n        return arraysEqual(oldVal, newVal);\n    } else if (type === 'Object') {\n        return Object.is(oldVal, newVal);\n    } return oldVal === newVal;\n};\n\n/**\n * Description @todo\n *\n * @param {any} transactionModel @todo\n * @param {any} transactionEndpoint @todo\n * @param {any} transactionItems @todo\n * @return {any} @todo\n */\nconst enableChainedTransaction = (transactionModel, transactionEndpoint, transactionItems) =>\n    transactionItems.forEach(item => transactionModel.on(item, ([, newVal]) => transactionEndpoint[item](newVal)));\n\n/**\n * Chceks if the element is istanceof HTMLElement\n *\n * @param {Object} elem any JS Object\n */\nconst isHTMLElem = elem => elem instanceof HTMLElement;\n\nconst ERROR_MSG = {\n    INTERFACE_IMPL: 'Method not implemented'\n};\n\n/**\n * Merges the sink object in the source by recursively iterating through the object properties\n * @param {Object} source Source Object\n * @param {Object} sink Sink Object\n * @return {Object} Merged object\n */\nconst mergeRecursive = (source, sink) => {\n    for (const prop in sink) {\n        if (isSimpleObject(source[prop]) && isSimpleObject(sink[prop])) {\n            mergeRecursive(source[prop], sink[prop]);\n        } else if (sink[prop] instanceof Object && sink[prop].constructor === Object) {\n            source[prop] = {};\n            mergeRecursive(source[prop], sink[prop]);\n        } else {\n            source[prop] = sink[prop];\n        }\n    }\n    return source;\n};\n\n/**\n * Creates a selection set from a data set with corresponding attributes\n *\n * @export\n * @param {Selection} sel contains previous selection\n * @param {Object} appendObj Object to be appended\n * @param {Array} data Data based on which the selection is entered/updated/removed\n * @param {Object} [attrs={}] Attributes to be set on the data\n * @return {Selection} Merged selection\n */\nconst createSelection = (sel, appendObj, data, idFn) => {\n    let selection = sel || dataSelect([]);\n\n    selection = selection.data(data, idFn);\n\n    const enter = selection.enter().append(appendObj);\n    const mergedSelection = enter.merge(selection);\n\n    selection.exit() && selection.exit().remove();\n    return mergedSelection;\n};\n\nconst interpolateArray = (data, fitCount) => {\n    const linearInterpolate = function (before, after, atPoint) {\n        return before + (after - before) * atPoint;\n    };\n    const newData = [];\n    const springFactor = ((data.length - 1) / (fitCount - 1));\n    newData[0] = data[0]; // for new allocation\n    for (let i = 1; i < fitCount - 1; i++) {\n        const tmp = i * springFactor;\n        const before = (Math.floor(tmp)).toFixed();\n        const after = (Math.ceil(tmp)).toFixed();\n        const atPoint = tmp - before;\n        newData[i] = linearInterpolate(data[before], data[after], atPoint);\n    }\n    newData[fitCount - 1] = data[data.length - 1]; // for new allocation\n    return newData;\n};\n\n/**\n *\n *\n * @param {*} fn\n */\nconst nextFrame = (fn) => {\n    setTimeout(() => {\n        fn();\n    }, 0);\n};\n\n/**\n *\n *\n * @param {*} angle\n */\nconst angleToRadian = angle => angle * Math.PI / 180;\n\n/**\n *\n *\n * @param {*} newName\n * @param {*} oldName\n */\nconst replaceCSSPrefix = () => {\n    // @todo\n};\n\n/**\n * Gets the  interpolator function from d3 color\n *\n */\nconst interpolator = () => interpolate;\n\n/**\n * Gets the number interpolator from d3 color\n *\n */\nconst numberInterpolator = () => interpolateNumber;\n\n/**\n * Gets the rgb interpolator from d3 color\n *\n */\nconst colorInterpolator = () => interpolateRgb;\n\n/**\n * Gets the hsl interpolator from d3 color\n *\n */\nconst hslInterpolator = () => interpolateHslLong;\n\nconst transformColors = () => ({\n    color,\n    rgb,\n    hsl\n});\n\n/**\n * Gets the piecewise interpolator from d3 color\n *\n */\nconst piecewiseInterpolator = () => piecewise;\n\nfunction hue2rgb (p, q, t) {\n    if (t < 0) t += 1;\n    if (t > 1) t -= 1;\n    if (t < 1 / 6) return p + (q - p) * 6 * t;\n    if (t < 1 / 2) return q;\n    if (t < 2 / 3) return p + (q - p) * (2 / 3 - t) * 6;\n    return p;\n}\n\n  /**\n   * Converts an HSL color value to RGB. Conversion formula\n   * adapted from http://en.wikipedia.org/wiki/HSL_color_space.\n   * Assumes h, s, and l are contained in the set [0, 1] and\n   * returns r, g, and b in the set [0, 255].\n   *\n   * @param   Number  h       The hue\n   * @param   Number  s       The saturation\n   * @param   Number  l       The lightness\n   * @return  Array           The RGB representation\n   */\nconst hslToRgb = (h, s, l, a = 1) => {\n    let r;\n    let g;\n    let b;\n\n    if (s === 0) {\n        r = g = b = l; // achromatic\n    } else {\n        const q = l < 0.5 ? l * (1 + s) : l + s - l * s;\n        const p = 2 * l - q;\n\n        r = hue2rgb(p, q, h + 1 / 3);\n        g = hue2rgb(p, q, h);\n        b = hue2rgb(p, q, h - 1 / 3);\n    }\n\n    return [r * 255, g * 255, b * 255, a];\n};\n\n  /**\n   * Converts an RGB color value to HSV. Conversion formula\n   * adapted from http://en.wikipedia.org/wiki/HSV_color_space.\n   * Assumes r, g, and b are contained in the set [0, 255] and\n   * returns h, s, and v in the set [0, 1].\n   *\n   * @param   Number  r       The red color value\n   * @param   Number  g       The green color value\n   * @param   Number  b       The blue color value\n   * @return  Array           The HSV representation\n   */\nconst rgbToHsv = (r, g, b, a = 1) => {\n    r = +r; g = +g; b = +b; a = +a;\n    r /= 255; g /= 255; b /= 255;\n    const max = Math.max(r, g, b);\n    const min = Math.min(r, g, b);\n    let h;\n    let s;\n    const l = (max + min) / 2;\n\n    if (max === min) {\n        h = s = 0; // achromatic\n    } else {\n        const d = max - min;\n        s = l > 0.5 ? d / (2 - max - min) : d / (max + min);\n        switch (max) {\n        case r: h = (g - b) / d + (g < b ? 6 : 0); break;\n        case g: h = (b - r) / d + 2; break;\n        case b: h = (r - g) / d + 4; break;\n        default: break;\n        }\n        h /= 6;\n    }\n    return [h, s, l, a];\n};\n\n  /**\n   * Converts an HSV color value to RGB. Conversion formula\n   * adapted from http://en.wikipedia.org/wiki/HSV_color_space.\n   * Assumes h, s, and v are contained in the set [0, 1] and\n   * returns r, g, and b in the set [0, 255].\n   *\n   * @param   Number  h       The hue\n   * @param   Number  s       The saturation\n   * @param   Number  v       The value\n   * @return  Array           The RGB representation\n   */\nconst hsvToRgb = (h, s, v, a = 1) => {\n    let r;\n    let g;\n    let b;\n\n    const i = Math.floor(h * 6);\n    const f = h * 6 - i;\n    const p = v * (1 - s);\n    const q = v * (1 - f * s);\n    const t = v * (1 - (1 - f) * s);\n\n    switch (i % 6) {\n    case 0: r = v; g = t; b = p; break;\n    case 1: r = q; g = v; b = p; break;\n    case 2: r = p; g = v; b = t; break;\n    case 3: r = p; g = q; b = v; break;\n    case 4: r = t; g = p; b = v; break;\n    case 5: r = v; g = p; b = q; break;\n    default: break;\n    }\n\n    return [r * 255, g * 255, b * 255, a];\n};\n\nconst hexToHsv = (hex) => {\n    const result = /^#?([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})$/i.exec(hex);\n\n    const r = parseInt(result[1], 16);\n    const g = parseInt(result[2], 16);\n    const b = parseInt(result[3], 16);\n    const a = result[4] ? parseInt(result[4], 16) : 1;\n    return rgbToHsv(r, g, b, a);\n};\n\nconst detectColor = (col) => {\n    const matchRgb = /rgb\\((\\d{1,3}), (\\d{1,3}), (\\d{1,3})\\)/;\n    const matchHsl = /hsl\\((\\d+),\\s*([\\d.]+)%,\\s*([\\d.]+)%\\)/g;\n\n    // Source :  https://gist.github.com/sethlopezme/d072b945969a3cc2cc11\n     // eslint-disable-next-line\n    const matchRgba = /rgba?\\(((25[0-5]|2[0-4]\\d|1\\d{1,2}|\\d\\d?)\\s*,\\s*?){2}(25[0-5]|2[0-4]\\d|1\\d{1,2}|\\d\\d?)\\s*,?\\s*([01]\\.?\\d*?)?\\)/;\n     // eslint-disable-next-line\n    const matchHsla = /^hsla\\((0|360|35\\d|3[0-4]\\d|[12]\\d\\d|0?\\d?\\d),(0|100|\\d{1,2})%,(0|100|\\d{1,2})%,(0?\\.\\d|1(\\.0)?)\\)$/;\n    const matchHex = /^#([0-9a-f]{3}){1,2}$/i;\n\n    if (matchRgb.test(col) || matchRgba.test(col)) {\n        return 'rgb';\n    } else if (matchHsl.test(col) || matchHsla.test(col)) {\n        return 'hsl';\n    } else if (matchHex.test(col)) {\n        return 'hex';\n    } return col;\n};\n\n/**\n *\n *\n * @param {*} model\n * @param {*} propModel\n *\n */\nconst filterPropagationModel = (model, propModel, measures) => {\n    const { data, schema } = propModel.getData();\n    let filteredModel;\n    if (schema.length) {\n        const fieldMap = model.getFieldsConfig();\n        filteredModel = model.select((fields) => {\n            const include = data.some(row => schema.every((propField, idx) => {\n                if (!measures && (!(propField.name in fieldMap) ||\n                        fieldMap[propField.name].def.type === FieldType.MEASURE)) {\n                    return true;\n                }\n                return row[idx] === fields[propField.name].valueOf();\n            }));\n            return include;\n        }, {\n            saveChild: false\n        });\n    } else {\n        filteredModel = propModel;\n    }\n\n    return filteredModel;\n};\n\nconst assembleModelFromIdentifiers = (model, identifiers) => {\n    let schema = [];\n    let data;\n    const fieldMap = model.getFieldsConfig();\n    if (identifiers.length) {\n        const fields = identifiers[0];\n        const len = fields.length;\n        for (let i = 0; i < len; i++) {\n            const field = fields[i];\n            const fieldObj = fieldMap[field] && Object.assign({}, fieldMap[field].def);\n            if (fieldObj) {\n                schema.push(Object.assign(fieldObj));\n            }\n        }\n\n        data = [];\n        const header = identifiers[0];\n        for (let i = 1; i < identifiers.length; i += 1) {\n            const vals = identifiers[i];\n            const temp = {};\n            vals.forEach((fieldVal, cIdx) => {\n                temp[header[cIdx]] = fieldVal;\n            });\n            data.push(temp);\n        }\n    } else {\n        data = [];\n        schema = [];\n    }\n\n    return new model.constructor(data, schema);\n};\n\n/**\n *\n *\n * @param {*} dataModel\n * @param {*} criteria\n *\n */\nconst getDataModelFromRange = (dataModel, criteria, mode) => {\n    if (criteria === null) {\n        return null;\n    }\n    const selFields = Object.keys(criteria);\n    const selFn = fields => selFields.every((field) => {\n        const val = fields[field].value;\n        const range = criteria[field][0] instanceof Array ? criteria[field][0] : criteria[field];\n        if (typeof range[0] === 'string') {\n            return range.find(d => d === val) !== undefined;\n        }\n        return range ? val >= range[0] && val <= range[1] : true;\n    });\n\n    return dataModel.select(selFn, {\n        saveChild: false,\n        mode\n    });\n};\n\n/**\n *\n *\n * @param {*} dataModel\n * @param {*} identifiers\n *\n */\nconst getDataModelFromIdentifiers = (dataModel, identifiers, mode) => {\n    let filteredDataModel;\n    if (identifiers instanceof Array) {\n        const fieldsConfig = dataModel.getFieldsConfig();\n\n        const dataArr = identifiers.slice(1, identifiers.length);\n        if (identifiers instanceof Function) {\n            filteredDataModel = identifiers(dataModel, {}, false);\n        } else if (identifiers instanceof Array && identifiers[0].length) {\n            const filteredSchema = identifiers[0].filter(d => d in fieldsConfig);\n            filteredDataModel = dataModel.select((fields) => {\n                let include = true;\n                filteredSchema.forEach((propField, idx) => {\n                    const value = fields[propField].valueOf();\n                    const index = dataArr.findIndex(d => d[idx] === value);\n                    include = include && index !== -1;\n                });\n                return include;\n            }, {\n                saveChild: false,\n                mode\n            });\n        }\n    } else {\n        filteredDataModel = getDataModelFromRange(dataModel, identifiers, mode);\n    }\n    return filteredDataModel;\n};\n\n/**\n *\n *\n * @param {*} context\n * @param {*} listenerMap\n */\nconst registerListeners = (context, listenerMap, ...params) => {\n    const propListenerMap = listenerMap(context, ...params);\n    for (const key in propListenerMap) {\n        if ({}.hasOwnProperty.call(propListenerMap, key)) {\n            const namespace = params[0];\n            let ns = null;\n            if (namespace) {\n                ns = namespace.local;\n            }\n            const mapObj = propListenerMap[key];\n            const propType = mapObj.type;\n            const props = mapObj.props;\n            const listenerFn = mapObj.listener;\n            context.store()[propType](props, listenerFn, false, {\n                namespace: ns\n            });\n        }\n    }\n};\n\nconst isValidValue = value => !isNaN(value) && value !== -Infinity && value !== Infinity;\n/**\n *\n *\n * @param {*} str\n *\n */\nconst escapeHTML = (str) => {\n    const htmlEscapes = {\n        '&': '&amp;',\n        '<': '&lt;',\n        '>': '&gt;',\n        '\"': '&quot;',\n        \"'\": '&#x27;',\n        '/': '&#x2F;'\n    };\n    const htmlEscaper = /[&<>\"'/]/g;\n    return (`${str}`).replace(htmlEscaper, match => htmlEscapes[match]);\n};\n\n/**\n *\n *\n * @param {*} arr\n */\nconst transposeArray = arr => arr[0].map((col, i) => arr.map(row => row[i]));\nconst toArray = arr => (arr instanceof Array ? arr : [arr]);\nconst extendsClass = (cls, extendsFrom, found) => {\n    if (!cls) {\n        return false;\n    }\n    const prototype = cls.prototype;\n    if (prototype instanceof extendsFrom) {\n        found = true;\n    } else {\n        found = extendsClass(prototype, extendsFrom, found);\n    }\n    return found;\n};\n\n/**\n *\n * @param {*} dm1\n * @param {*} dm2\n */\nconst concatModels = (dm1, dm2) => {\n    const dataObj1 = dm1.getData();\n    const dataObj2 = dm2.getData();\n    const data1 = dataObj1.data;\n    const data2 = dataObj2.data;\n    const schema1 = dataObj1.schema;\n    const schema2 = dataObj2.schema;\n    const tuples1 = {};\n    const tuples2 = {};\n    const commonTuples = {};\n    for (let i = 0; i < data1.length; i++) {\n        for (let ii = 0; ii < data2.length; ii++) {\n            const row1 = data1[i];\n            const row2 = data2[ii];\n            const dim1Values = row1.filter((d, idx) => schema1[idx].type === FieldType.DIMENSION);\n            const dim2Values = row2.filter((d, idx) => schema2[idx].type === FieldType.DIMENSION);\n            const allDimSame = dim1Values.every(value => dim2Values.indexOf(value) !== -1);\n            if (allDimSame) {\n                const key = dim1Values.join();\n                !commonTuples[key] && (commonTuples[key] = {});\n                row1.forEach((value, idx) => {\n                    commonTuples[key][schema1[idx].name] = value;\n                });\n                row2.forEach((value, idx) => {\n                    commonTuples[key][schema2[idx].name] = value;\n                });\n            } else {\n                const dm1Key = dim1Values.join();\n                const dm2Key = dim2Values.join();\n                if (!commonTuples[dm1Key] && !commonTuples[dm2Key]) {\n                    !tuples1[dm1Key] && (tuples1[dm1Key] = {});\n                    !tuples2[dm2Key] && (tuples2[dm2Key] = {});\n                    row1.forEach((value, idx) => {\n                        tuples1[dm1Key][schema1[idx].name] = value;\n                    });\n                    row2.forEach((value, idx) => {\n                        tuples2[dm2Key][schema2[idx].name] = value;\n                    });\n                }\n            }\n        }\n    }\n\n    const commonSchema = [...schema1, ...schema2.filter(s2 => schema1.findIndex(s1 => s1.name === s2.name) === -1)];\n    const data = [...Object.values(tuples1), ...Object.values(tuples2), ...Object.values(commonTuples)];\n    return [data, commonSchema];\n};\n\nconst getSymbol = type => symbol().type(symbolFns[type]);\n\nconst stackOrders = {\n    [STACK_CONFIG.ORDER_NONE]: stackOrderNone,\n    [STACK_CONFIG.ORDER_ASCENDING]: stackOrderAscending,\n    [STACK_CONFIG.ORDER_DESCENDING]: stackOrderDescending\n};\nconst stackOffsets = {\n    [STACK_CONFIG.OFFSET_DIVERGING]: stackOffsetDiverging,\n    [STACK_CONFIG.OFFSET_NONE]: stackOffsetNone,\n    [STACK_CONFIG.OFFSET_EXPAND]: stackOffsetExpand,\n    [STACK_CONFIG.OFFSET_WIGGLE]: stackOffsetWiggle\n};\n\n// eslint-disable-next-line require-jsdoc\nconst stack = params => d3Stack().keys(params.keys).offset(stackOffsets[params.offset])\n                .order(stackOrders[params.order])(params.data);\n\n/**\n * Groups the data into a hierarchical tree structure based on one or more fields.\n * @param { Object } params Configuration properties for nesting data\n * @param { Array.<Array> } params.data Data which needs to be grouped\n * @param { Array.<number> } params.keys Field indices by which the data will be grouped\n * @return { Array.<Object> } Grouped data array\n */\nconst nestCollection = (params) => {\n    const nestFn = nest();\n    params.keys.forEach(key => nestFn.key(d => d[key]));\n    return nestFn.entries(params.data);\n};\n\nconst pathInterpolators = {\n    curveLinear,\n    curveStepAfter,\n    curveStepBefore,\n    curveStep,\n    curveCatmullRom,\n    stepAfter: curveStepAfter,\n    catmullRom: curveCatmullRom,\n    step: curveStep,\n    stepBefore: curveStepBefore,\n    linear: curveLinear\n};\n\nconst Symbols = {\n    axisLeft,\n    axisRight,\n    axisTop,\n    axisBottom,\n    line,\n    area,\n    pie,\n    arc,\n    nest\n};\n\nconst Scales = {\n    band: scaleBand\n};\n\nconst getSmallestDiff = (points) => {\n    points = points.sort((a, b) => a - b);\n    let minDiff = points[1] - points[0];\n    for (let i = 2; i < points.length; i++) {\n        minDiff = Math.min(minDiff, points[i] - points[i - 1]);\n    }\n\n    return minDiff;\n};\n\nconst timeFormats = {\n    millisecond: '%A, %b %e, %H:%M:%S.%L',\n    second: '%A, %b %e, %H:%M:%S',\n    minute: '%A, %b %e, %H:%M',\n    hour: '%A, %b %e, %H:%M',\n    day: '%A, %b %e, %Y',\n    month: '%B %Y',\n    year: '%Y'\n};\n\nconst timeDurations = [\n    ['millisecond', 'second', 'minute', 'hour', 'day', 'month', 'year'],\n    [1, 1000, 60000, 3600000, 86400000, 2592000000, 31536000000]\n];\n\nconst getNearestInterval = (interval) => {\n    const index = getClosestIndexOf(timeDurations[1], interval);\n    return timeDurations[0][index];\n};\n\nconst formatTemporal = (value, interval) => {\n    const nearestInterval = getNearestInterval(interval);\n    return DateTimeFormatter.formatAs(value, timeFormats[nearestInterval]);\n};\n\nconst temporalFields = (dataModel) => {\n    const filteredFields = {};\n    Object.entries(dataModel.getFieldspace().getDimension()).forEach(([fieldName, fieldObj]) => {\n        if (fieldObj.subtype() === DimensionSubtype.TEMPORAL) {\n            filteredFields[fieldName] = fieldObj;\n        }\n    });\n    return filteredFields;\n};\n\nconst require = (lookupWhat, lookupDetails) => ({\n    resolvable: (store) => {\n        const lookupTarget = store[lookupWhat];\n        const depArr = lookupDetails.slice(0, lookupDetails.length - 1);\n        const fn = lookupDetails[lookupDetails.length - 1]; // fn\n\n        const deps = depArr.map(str => lookupTarget[str]);\n        return {\n            fn: fn(...deps),\n            depArr\n        };\n    }\n});\n\nconst nextAnimFrame = window.requestAnimationFrame || window.webkitRequestAnimationFrame ||\n    window.mozRequestAnimationFrame || window.oRequestAnimationFrame || window.msRequestAnimationFrame ||\n    function (callback) {\n        setTimeout(callback, 16);\n    };\n\nconst getValueParser = config => (val) => {\n    if (val instanceof InvalidAwareTypes) {\n        return val in config ? config[val] : `${val}`;\n    }\n    return val;\n};\n\nconst retrieveNearestGroupByReducers = (dataModel, ...measureFieldNames) => {\n    let nearestReducers = {};\n    let next = dataModel;\n    do {\n        const derivations = next.getDerivations();\n        if (derivations) {\n            const groupDerivation = derivations.reverse().find(derivation => derivation.op === DM_OPERATION_GROUP);\n            if (groupDerivation) {\n                nearestReducers = groupDerivation.criteria || {};\n                break;\n            }\n        }\n    } while (next = next.getParent());\n\n    const filteredReducers = {};\n    const measures = dataModel.getFieldspace().getMeasure();\n    measureFieldNames.forEach((measureName) => {\n        if (nearestReducers[measureName]) {\n            filteredReducers[measureName] = nearestReducers[measureName];\n        } else {\n            const measureField = measures[measureName];\n            if (measureField) {\n                filteredReducers[measureName] = measureField.defAggFn();\n            }\n        }\n    });\n\n    return filteredReducers;\n};\n\nexport {\n    getValueParser,\n    require,\n    Scales,\n    Symbols,\n    pathInterpolators,\n    stack,\n    nestCollection,\n    getSymbol,\n    transformColors,\n    detectColor,\n    hexToHsv,\n    hslToRgb,\n    rgbToHsv,\n    hsvToRgb,\n    concatModels,\n    toArray,\n    angleToRadian,\n    escapeHTML,\n    generateGetterSetters,\n    getArraySum,\n    interpolator,\n    piecewiseInterpolator,\n    getDataModelFromIdentifiers,\n    getDataModelFromRange,\n    colorInterpolator,\n    numberInterpolator,\n    ERROR_MSG,\n    reqAnimFrame,\n    nextAnimFrame,\n    filterPropagationModel,\n    transposeArray,\n    cancelAnimFrame,\n    getMax,\n    getMin,\n    getDomainFromData,\n    getUniqueId,\n    mergeRecursive,\n    unionDomain,\n    symbolFns,\n    easeFns,\n    clone,\n    isEqual,\n    interpolateArray,\n    getMinPoint,\n    defaultValue,\n    getMaxPoint,\n    getClosestIndexOf,\n    Voronoi,\n    checkExistence,\n    sanitizeIP,\n    getMinDiff,\n    capitalizeFirst,\n    getWindow,\n    getQualifiedClassName,\n    Store,\n    getDependencyOrder,\n    objectIterator,\n    intSanitizer,\n    transactor,\n    enableChainedTransaction,\n    isHTMLElem,\n    isSimpleObject,\n    nextFrame,\n    registerListeners,\n    replaceCSSPrefix,\n    getObjProp,\n    extendsClass,\n    assembleModelFromIdentifiers,\n    isValidValue,\n    hslInterpolator,\n    getSmallestDiff,\n    getNearestValue,\n    retrieveNearestGroupByReducers,\n    createSelection,\n    formatTemporal,\n    temporalFields\n};\n","export function linear(t) {\n  return +t;\n}\n","export function circleIn(t) {\n  return 1 - Math.sqrt(1 - t * t);\n}\n\nexport function circleOut(t) {\n  return Math.sqrt(1 - --t * t);\n}\n\nexport function circleInOut(t) {\n  return ((t *= 2) <= 1 ? 1 - Math.sqrt(1 - t * t) : Math.sqrt(1 - (t -= 2) * t) + 1) / 2;\n}\n","import Selection from './selection';\n/**\n * This function applies a selection operation on a data array.\n *\n * @export\n * @param {Array} [data=[]] The data array to be observed.\n * @return {Selection} Instance of a selection.\n */\nexport default function dataSelect (data = []) {\n    return new Selection(data);\n}\n\n","import {path} from \"d3-path\";\nimport circle from \"./symbol/circle\";\nimport cross from \"./symbol/cross\";\nimport diamond from \"./symbol/diamond\";\nimport star from \"./symbol/star\";\nimport square from \"./symbol/square\";\nimport triangle from \"./symbol/triangle\";\nimport wye from \"./symbol/wye\";\nimport constant from \"./constant\";\n\nexport var symbols = [\n  circle,\n  cross,\n  diamond,\n  square,\n  star,\n  triangle,\n  wye\n];\n\nexport default function() {\n  var type = constant(circle),\n      size = constant(64),\n      context = null;\n\n  function symbol() {\n    var buffer;\n    if (!context) context = buffer = path();\n    type.apply(this, arguments).draw(context, +size.apply(this, arguments));\n    if (buffer) return context = null, buffer + \"\" || null;\n  }\n\n  symbol.type = function(_) {\n    return arguments.length ? (type = typeof _ === \"function\" ? _ : constant(_), symbol) : type;\n  };\n\n  symbol.size = function(_) {\n    return arguments.length ? (size = typeof _ === \"function\" ? _ : constant(+_), symbol) : size;\n  };\n\n  symbol.context = function(_) {\n    return arguments.length ? (context = _ == null ? null : _, symbol) : context;\n  };\n\n  return symbol;\n}\n","export const ORDER_ASCENDING = 'ascending';\nexport const ORDER_DESCENDING = 'descending';\nexport const ORDER_NONE = 'none';\nexport const OFFSET_DIVERGING = 'diverging';\nexport const OFFSET_NONE = 'none';\nexport const OFFSET_EXPAND = 'expand';\nexport const OFFSET_WIGGLE = 'wiggle';\n","import ascending from \"./ascending\";\n\nexport default function(series) {\n  return ascending(series).reverse();\n}\n","export default function(series, order) {\n  if (!((n = series.length) > 1)) return;\n  for (var i, j = 0, d, dy, yp, yn, n, m = series[order[0]].length; j < m; ++j) {\n    for (yp = yn = 0, i = 0; i < n; ++i) {\n      if ((dy = (d = series[order[i]][j])[1] - d[0]) >= 0) {\n        d[0] = yp, d[1] = yp += dy;\n      } else if (dy < 0) {\n        d[1] = yn, d[0] = yn += dy;\n      } else {\n        d[0] = yp;\n      }\n    }\n  }\n}\n","import none from \"./none\";\n\nexport default function(series, order) {\n  if (!((n = series.length) > 0)) return;\n  for (var i, n, j = 0, m = series[0].length, y; j < m; ++j) {\n    for (y = i = 0; i < n; ++i) y += series[i][j][1] || 0;\n    if (y) for (i = 0; i < n; ++i) series[i][j][1] /= y;\n  }\n  none(series, order);\n}\n","import none from \"./none\";\n\nexport default function(series, order) {\n  if (!((n = series.length) > 0) || !((m = (s0 = series[order[0]]).length) > 0)) return;\n  for (var y = 0, j = 1, s0, m, n; j < m; ++j) {\n    for (var i = 0, s1 = 0, s2 = 0; i < n; ++i) {\n      var si = series[order[i]],\n          sij0 = si[j][1] || 0,\n          sij1 = si[j - 1][1] || 0,\n          s3 = (sij0 - sij1) / 2;\n      for (var k = 0; k < i; ++k) {\n        var sk = series[order[k]],\n            skj0 = sk[j][1] || 0,\n            skj1 = sk[j - 1][1] || 0;\n        s3 += skj0 - skj1;\n      }\n      s1 += sij0, s2 += s3 * sij0;\n    }\n    s0[j - 1][1] += s0[j - 1][0] = y;\n    if (s1) y -= s2 / s1;\n  }\n  s0[j - 1][1] += s0[j - 1][0] = y;\n  none(series, order);\n}\n","import constant from \"./constant\";\nimport descending from \"./descending\";\nimport identity from \"./identity\";\nimport {tau} from \"./math\";\n\nexport default function() {\n  var value = identity,\n      sortValues = descending,\n      sort = null,\n      startAngle = constant(0),\n      endAngle = constant(tau),\n      padAngle = constant(0);\n\n  function pie(data) {\n    var i,\n        n = data.length,\n        j,\n        k,\n        sum = 0,\n        index = new Array(n),\n        arcs = new Array(n),\n        a0 = +startAngle.apply(this, arguments),\n        da = Math.min(tau, Math.max(-tau, endAngle.apply(this, arguments) - a0)),\n        a1,\n        p = Math.min(Math.abs(da) / n, padAngle.apply(this, arguments)),\n        pa = p * (da < 0 ? -1 : 1),\n        v;\n\n    for (i = 0; i < n; ++i) {\n      if ((v = arcs[index[i] = i] = +value(data[i], i, data)) > 0) {\n        sum += v;\n      }\n    }\n\n    // Optionally sort the arcs by previously-computed values or by data.\n    if (sortValues != null) index.sort(function(i, j) { return sortValues(arcs[i], arcs[j]); });\n    else if (sort != null) index.sort(function(i, j) { return sort(data[i], data[j]); });\n\n    // Compute the arcs! They are stored in the original data's order.\n    for (i = 0, k = sum ? (da - n * pa) / sum : 0; i < n; ++i, a0 = a1) {\n      j = index[i], v = arcs[j], a1 = a0 + (v > 0 ? v * k : 0) + pa, arcs[j] = {\n        data: data[j],\n        index: i,\n        value: v,\n        startAngle: a0,\n        endAngle: a1,\n        padAngle: p\n      };\n    }\n\n    return arcs;\n  }\n\n  pie.value = function(_) {\n    return arguments.length ? (value = typeof _ === \"function\" ? _ : constant(+_), pie) : value;\n  };\n\n  pie.sortValues = function(_) {\n    return arguments.length ? (sortValues = _, sort = null, pie) : sortValues;\n  };\n\n  pie.sort = function(_) {\n    return arguments.length ? (sort = _, sortValues = null, pie) : sort;\n  };\n\n  pie.startAngle = function(_) {\n    return arguments.length ? (startAngle = typeof _ === \"function\" ? _ : constant(+_), pie) : startAngle;\n  };\n\n  pie.endAngle = function(_) {\n    return arguments.length ? (endAngle = typeof _ === \"function\" ? _ : constant(+_), pie) : endAngle;\n  };\n\n  pie.padAngle = function(_) {\n    return arguments.length ? (padAngle = typeof _ === \"function\" ? _ : constant(+_), pie) : padAngle;\n  };\n\n  return pie;\n}\n","export const DM_OPERATION_GROUP = 'group';\n","export var xhtml = \"http://www.w3.org/1999/xhtml\";\n\nexport default {\n  svg: \"http://www.w3.org/2000/svg\",\n  xhtml: xhtml,\n  xlink: \"http://www.w3.org/1999/xlink\",\n  xml: \"http://www.w3.org/XML/1998/namespace\",\n  xmlns: \"http://www.w3.org/2000/xmlns/\"\n};\n","import namespaces from \"./namespaces\";\n\nexport default function(name) {\n  var prefix = name += \"\", i = prefix.indexOf(\":\");\n  if (i >= 0 && (prefix = name.slice(0, i)) !== \"xmlns\") name = name.slice(i + 1);\n  return namespaces.hasOwnProperty(prefix) ? {space: namespaces[prefix], local: name} : name;\n}\n","import namespace from \"./namespace\";\nimport {xhtml} from \"./namespaces\";\n\nfunction creatorInherit(name) {\n  return function() {\n    var document = this.ownerDocument,\n        uri = this.namespaceURI;\n    return uri === xhtml && document.documentElement.namespaceURI === xhtml\n        ? document.createElement(name)\n        : document.createElementNS(uri, name);\n  };\n}\n\nfunction creatorFixed(fullname) {\n  return function() {\n    return this.ownerDocument.createElementNS(fullname.space, fullname.local);\n  };\n}\n\nexport default function(name) {\n  var fullname = namespace(name);\n  return (fullname.local\n      ? creatorFixed\n      : creatorInherit)(fullname);\n}\n","function none() {}\n\nexport default function(selector) {\n  return selector == null ? none : function() {\n    return this.querySelector(selector);\n  };\n}\n","function empty() {\n  return [];\n}\n\nexport default function(selector) {\n  return selector == null ? empty : function() {\n    return this.querySelectorAll(selector);\n  };\n}\n","var matcher = function(selector) {\n  return function() {\n    return this.matches(selector);\n  };\n};\n\nif (typeof document !== \"undefined\") {\n  var element = document.documentElement;\n  if (!element.matches) {\n    var vendorMatches = element.webkitMatchesSelector\n        || element.msMatchesSelector\n        || element.mozMatchesSelector\n        || element.oMatchesSelector;\n    matcher = function(selector) {\n      return function() {\n        return vendorMatches.call(this, selector);\n      };\n    };\n  }\n}\n\nexport default matcher;\n","export default function(update) {\n  return new Array(update.length);\n}\n","import sparse from \"./sparse\";\nimport {Selection} from \"./index\";\n\nexport default function() {\n  return new Selection(this._enter || this._groups.map(sparse), this._parents);\n}\n\nexport function EnterNode(parent, datum) {\n  this.ownerDocument = parent.ownerDocument;\n  this.namespaceURI = parent.namespaceURI;\n  this._next = null;\n  this._parent = parent;\n  this.__data__ = datum;\n}\n\nEnterNode.prototype = {\n  constructor: EnterNode,\n  appendChild: function(child) { return this._parent.insertBefore(child, this._next); },\n  insertBefore: function(child, next) { return this._parent.insertBefore(child, next); },\n  querySelector: function(selector) { return this._parent.querySelector(selector); },\n  querySelectorAll: function(selector) { return this._parent.querySelectorAll(selector); }\n};\n","export default function(x) {\n  return function() {\n    return x;\n  };\n}\n","import {Selection} from \"./index\";\nimport {EnterNode} from \"./enter\";\nimport constant from \"../constant\";\n\nvar keyPrefix = \"$\"; // Protect against keys like “__proto__”.\n\nfunction bindIndex(parent, group, enter, update, exit, data) {\n  var i = 0,\n      node,\n      groupLength = group.length,\n      dataLength = data.length;\n\n  // Put any non-null nodes that fit into update.\n  // Put any null nodes into enter.\n  // Put any remaining data into enter.\n  for (; i < dataLength; ++i) {\n    if (node = group[i]) {\n      node.__data__ = data[i];\n      update[i] = node;\n    } else {\n      enter[i] = new EnterNode(parent, data[i]);\n    }\n  }\n\n  // Put any non-null nodes that don’t fit into exit.\n  for (; i < groupLength; ++i) {\n    if (node = group[i]) {\n      exit[i] = node;\n    }\n  }\n}\n\nfunction bindKey(parent, group, enter, update, exit, data, key) {\n  var i,\n      node,\n      nodeByKeyValue = {},\n      groupLength = group.length,\n      dataLength = data.length,\n      keyValues = new Array(groupLength),\n      keyValue;\n\n  // Compute the key for each node.\n  // If multiple nodes have the same key, the duplicates are added to exit.\n  for (i = 0; i < groupLength; ++i) {\n    if (node = group[i]) {\n      keyValues[i] = keyValue = keyPrefix + key.call(node, node.__data__, i, group);\n      if (keyValue in nodeByKeyValue) {\n        exit[i] = node;\n      } else {\n        nodeByKeyValue[keyValue] = node;\n      }\n    }\n  }\n\n  // Compute the key for each datum.\n  // If there a node associated with this key, join and add it to update.\n  // If there is not (or the key is a duplicate), add it to enter.\n  for (i = 0; i < dataLength; ++i) {\n    keyValue = keyPrefix + key.call(parent, data[i], i, data);\n    if (node = nodeByKeyValue[keyValue]) {\n      update[i] = node;\n      node.__data__ = data[i];\n      nodeByKeyValue[keyValue] = null;\n    } else {\n      enter[i] = new EnterNode(parent, data[i]);\n    }\n  }\n\n  // Add any remaining nodes that were not bound to data to exit.\n  for (i = 0; i < groupLength; ++i) {\n    if ((node = group[i]) && (nodeByKeyValue[keyValues[i]] === node)) {\n      exit[i] = node;\n    }\n  }\n}\n\nexport default function(value, key) {\n  if (!value) {\n    data = new Array(this.size()), j = -1;\n    this.each(function(d) { data[++j] = d; });\n    return data;\n  }\n\n  var bind = key ? bindKey : bindIndex,\n      parents = this._parents,\n      groups = this._groups;\n\n  if (typeof value !== \"function\") value = constant(value);\n\n  for (var m = groups.length, update = new Array(m), enter = new Array(m), exit = new Array(m), j = 0; j < m; ++j) {\n    var parent = parents[j],\n        group = groups[j],\n        groupLength = group.length,\n        data = value.call(parent, parent && parent.__data__, j, parents),\n        dataLength = data.length,\n        enterGroup = enter[j] = new Array(dataLength),\n        updateGroup = update[j] = new Array(dataLength),\n        exitGroup = exit[j] = new Array(groupLength);\n\n    bind(parent, group, enterGroup, updateGroup, exitGroup, data, key);\n\n    // Now connect the enter nodes to their following update node, such that\n    // appendChild can insert the materialized enter node before this node,\n    // rather than at the end of the parent node.\n    for (var i0 = 0, i1 = 0, previous, next; i0 < dataLength; ++i0) {\n      if (previous = enterGroup[i0]) {\n        if (i0 >= i1) i1 = i0 + 1;\n        while (!(next = updateGroup[i1]) && ++i1 < dataLength);\n        previous._next = next || null;\n      }\n    }\n  }\n\n  update = new Selection(update, parents);\n  update._enter = enter;\n  update._exit = exit;\n  return update;\n}\n","import {Selection} from \"./index\";\n\nexport default function(compare) {\n  if (!compare) compare = ascending;\n\n  function compareNode(a, b) {\n    return a && b ? compare(a.__data__, b.__data__) : !a - !b;\n  }\n\n  for (var groups = this._groups, m = groups.length, sortgroups = new Array(m), j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, sortgroup = sortgroups[j] = new Array(n), node, i = 0; i < n; ++i) {\n      if (node = group[i]) {\n        sortgroup[i] = node;\n      }\n    }\n    sortgroup.sort(compareNode);\n  }\n\n  return new Selection(sortgroups, this._parents).order();\n}\n\nfunction ascending(a, b) {\n  return a < b ? -1 : a > b ? 1 : a >= b ? 0 : NaN;\n}\n","import namespace from \"../namespace\";\n\nfunction attrRemove(name) {\n  return function() {\n    this.removeAttribute(name);\n  };\n}\n\nfunction attrRemoveNS(fullname) {\n  return function() {\n    this.removeAttributeNS(fullname.space, fullname.local);\n  };\n}\n\nfunction attrConstant(name, value) {\n  return function() {\n    this.setAttribute(name, value);\n  };\n}\n\nfunction attrConstantNS(fullname, value) {\n  return function() {\n    this.setAttributeNS(fullname.space, fullname.local, value);\n  };\n}\n\nfunction attrFunction(name, value) {\n  return function() {\n    var v = value.apply(this, arguments);\n    if (v == null) this.removeAttribute(name);\n    else this.setAttribute(name, v);\n  };\n}\n\nfunction attrFunctionNS(fullname, value) {\n  return function() {\n    var v = value.apply(this, arguments);\n    if (v == null) this.removeAttributeNS(fullname.space, fullname.local);\n    else this.setAttributeNS(fullname.space, fullname.local, v);\n  };\n}\n\nexport default function(name, value) {\n  var fullname = namespace(name);\n\n  if (arguments.length < 2) {\n    var node = this.node();\n    return fullname.local\n        ? node.getAttributeNS(fullname.space, fullname.local)\n        : node.getAttribute(fullname);\n  }\n\n  return this.each((value == null\n      ? (fullname.local ? attrRemoveNS : attrRemove) : (typeof value === \"function\"\n      ? (fullname.local ? attrFunctionNS : attrFunction)\n      : (fullname.local ? attrConstantNS : attrConstant)))(fullname, value));\n}\n","export default function(node) {\n  return (node.ownerDocument && node.ownerDocument.defaultView) // node is a Node\n      || (node.document && node) // node is a Window\n      || node.defaultView; // node is a Document\n}\n","import defaultView from \"../window\";\n\nfunction styleRemove(name) {\n  return function() {\n    this.style.removeProperty(name);\n  };\n}\n\nfunction styleConstant(name, value, priority) {\n  return function() {\n    this.style.setProperty(name, value, priority);\n  };\n}\n\nfunction styleFunction(name, value, priority) {\n  return function() {\n    var v = value.apply(this, arguments);\n    if (v == null) this.style.removeProperty(name);\n    else this.style.setProperty(name, v, priority);\n  };\n}\n\nexport default function(name, value, priority) {\n  return arguments.length > 1\n      ? this.each((value == null\n            ? styleRemove : typeof value === \"function\"\n            ? styleFunction\n            : styleConstant)(name, value, priority == null ? \"\" : priority))\n      : styleValue(this.node(), name);\n}\n\nexport function styleValue(node, name) {\n  return node.style.getPropertyValue(name)\n      || defaultView(node).getComputedStyle(node, null).getPropertyValue(name);\n}\n","function classArray(string) {\n  return string.trim().split(/^|\\s+/);\n}\n\nfunction classList(node) {\n  return node.classList || new ClassList(node);\n}\n\nfunction ClassList(node) {\n  this._node = node;\n  this._names = classArray(node.getAttribute(\"class\") || \"\");\n}\n\nClassList.prototype = {\n  add: function(name) {\n    var i = this._names.indexOf(name);\n    if (i < 0) {\n      this._names.push(name);\n      this._node.setAttribute(\"class\", this._names.join(\" \"));\n    }\n  },\n  remove: function(name) {\n    var i = this._names.indexOf(name);\n    if (i >= 0) {\n      this._names.splice(i, 1);\n      this._node.setAttribute(\"class\", this._names.join(\" \"));\n    }\n  },\n  contains: function(name) {\n    return this._names.indexOf(name) >= 0;\n  }\n};\n\nfunction classedAdd(node, names) {\n  var list = classList(node), i = -1, n = names.length;\n  while (++i < n) list.add(names[i]);\n}\n\nfunction classedRemove(node, names) {\n  var list = classList(node), i = -1, n = names.length;\n  while (++i < n) list.remove(names[i]);\n}\n\nfunction classedTrue(names) {\n  return function() {\n    classedAdd(this, names);\n  };\n}\n\nfunction classedFalse(names) {\n  return function() {\n    classedRemove(this, names);\n  };\n}\n\nfunction classedFunction(names, value) {\n  return function() {\n    (value.apply(this, arguments) ? classedAdd : classedRemove)(this, names);\n  };\n}\n\nexport default function(name, value) {\n  var names = classArray(name + \"\");\n\n  if (arguments.length < 2) {\n    var list = classList(this.node()), i = -1, n = names.length;\n    while (++i < n) if (!list.contains(names[i])) return false;\n    return true;\n  }\n\n  return this.each((typeof value === \"function\"\n      ? classedFunction : value\n      ? classedTrue\n      : classedFalse)(names, value));\n}\n","function textRemove() {\n  this.textContent = \"\";\n}\n\nfunction textConstant(value) {\n  return function() {\n    this.textContent = value;\n  };\n}\n\nfunction textFunction(value) {\n  return function() {\n    var v = value.apply(this, arguments);\n    this.textContent = v == null ? \"\" : v;\n  };\n}\n\nexport default function(value) {\n  return arguments.length\n      ? this.each(value == null\n          ? textRemove : (typeof value === \"function\"\n          ? textFunction\n          : textConstant)(value))\n      : this.node().textContent;\n}\n","function htmlRemove() {\n  this.innerHTML = \"\";\n}\n\nfunction htmlConstant(value) {\n  return function() {\n    this.innerHTML = value;\n  };\n}\n\nfunction htmlFunction(value) {\n  return function() {\n    var v = value.apply(this, arguments);\n    this.innerHTML = v == null ? \"\" : v;\n  };\n}\n\nexport default function(value) {\n  return arguments.length\n      ? this.each(value == null\n          ? htmlRemove : (typeof value === \"function\"\n          ? htmlFunction\n          : htmlConstant)(value))\n      : this.node().innerHTML;\n}\n","function raise() {\n  if (this.nextSibling) this.parentNode.appendChild(this);\n}\n\nexport default function() {\n  return this.each(raise);\n}\n","function lower() {\n  if (this.previousSibling) this.parentNode.insertBefore(this, this.parentNode.firstChild);\n}\n\nexport default function() {\n  return this.each(lower);\n}\n","import creator from \"../creator\";\nimport selector from \"../selector\";\n\nfunction constantNull() {\n  return null;\n}\n\nexport default function(name, before) {\n  var create = typeof name === \"function\" ? name : creator(name),\n      select = before == null ? constantNull : typeof before === \"function\" ? before : selector(before);\n  return this.select(function() {\n    return this.insertBefore(create.apply(this, arguments), select.apply(this, arguments) || null);\n  });\n}\n","function remove() {\n  var parent = this.parentNode;\n  if (parent) parent.removeChild(this);\n}\n\nexport default function() {\n  return this.each(remove);\n}\n","function selection_cloneShallow() {\n  return this.parentNode.insertBefore(this.cloneNode(false), this.nextSibling);\n}\n\nfunction selection_cloneDeep() {\n  return this.parentNode.insertBefore(this.cloneNode(true), this.nextSibling);\n}\n\nexport default function(deep) {\n  return this.select(deep ? selection_cloneDeep : selection_cloneShallow);\n}\n","var filterEvents = {};\n\nexport var event = null;\n\nif (typeof document !== \"undefined\") {\n  var element = document.documentElement;\n  if (!(\"onmouseenter\" in element)) {\n    filterEvents = {mouseenter: \"mouseover\", mouseleave: \"mouseout\"};\n  }\n}\n\nfunction filterContextListener(listener, index, group) {\n  listener = contextListener(listener, index, group);\n  return function(event) {\n    var related = event.relatedTarget;\n    if (!related || (related !== this && !(related.compareDocumentPosition(this) & 8))) {\n      listener.call(this, event);\n    }\n  };\n}\n\nfunction contextListener(listener, index, group) {\n  return function(event1) {\n    var event0 = event; // Events can be reentrant (e.g., focus).\n    event = event1;\n    try {\n      listener.call(this, this.__data__, index, group);\n    } finally {\n      event = event0;\n    }\n  };\n}\n\nfunction parseTypenames(typenames) {\n  return typenames.trim().split(/^|\\s+/).map(function(t) {\n    var name = \"\", i = t.indexOf(\".\");\n    if (i >= 0) name = t.slice(i + 1), t = t.slice(0, i);\n    return {type: t, name: name};\n  });\n}\n\nfunction onRemove(typename) {\n  return function() {\n    var on = this.__on;\n    if (!on) return;\n    for (var j = 0, i = -1, m = on.length, o; j < m; ++j) {\n      if (o = on[j], (!typename.type || o.type === typename.type) && o.name === typename.name) {\n        this.removeEventListener(o.type, o.listener, o.capture);\n      } else {\n        on[++i] = o;\n      }\n    }\n    if (++i) on.length = i;\n    else delete this.__on;\n  };\n}\n\nfunction onAdd(typename, value, capture) {\n  var wrap = filterEvents.hasOwnProperty(typename.type) ? filterContextListener : contextListener;\n  return function(d, i, group) {\n    var on = this.__on, o, listener = wrap(value, i, group);\n    if (on) for (var j = 0, m = on.length; j < m; ++j) {\n      if ((o = on[j]).type === typename.type && o.name === typename.name) {\n        this.removeEventListener(o.type, o.listener, o.capture);\n        this.addEventListener(o.type, o.listener = listener, o.capture = capture);\n        o.value = value;\n        return;\n      }\n    }\n    this.addEventListener(typename.type, listener, capture);\n    o = {type: typename.type, name: typename.name, value: value, listener: listener, capture: capture};\n    if (!on) this.__on = [o];\n    else on.push(o);\n  };\n}\n\nexport default function(typename, value, capture) {\n  var typenames = parseTypenames(typename + \"\"), i, n = typenames.length, t;\n\n  if (arguments.length < 2) {\n    var on = this.node().__on;\n    if (on) for (var j = 0, m = on.length, o; j < m; ++j) {\n      for (i = 0, o = on[j]; i < n; ++i) {\n        if ((t = typenames[i]).type === o.type && t.name === o.name) {\n          return o.value;\n        }\n      }\n    }\n    return;\n  }\n\n  on = value ? onAdd : onRemove;\n  if (capture == null) capture = false;\n  for (i = 0; i < n; ++i) this.each(on(typenames[i], value, capture));\n  return this;\n}\n\nexport function customEvent(event1, listener, that, args) {\n  var event0 = event;\n  event1.sourceEvent = event;\n  event = event1;\n  try {\n    return listener.apply(that, args);\n  } finally {\n    event = event0;\n  }\n}\n","import defaultView from \"../window\";\n\nfunction dispatchEvent(node, type, params) {\n  var window = defaultView(node),\n      event = window.CustomEvent;\n\n  if (typeof event === \"function\") {\n    event = new event(type, params);\n  } else {\n    event = window.document.createEvent(\"Event\");\n    if (params) event.initEvent(type, params.bubbles, params.cancelable), event.detail = params.detail;\n    else event.initEvent(type, false, false);\n  }\n\n  node.dispatchEvent(event);\n}\n\nfunction dispatchConstant(type, params) {\n  return function() {\n    return dispatchEvent(this, type, params);\n  };\n}\n\nfunction dispatchFunction(type, params) {\n  return function() {\n    return dispatchEvent(this, type, params.apply(this, arguments));\n  };\n}\n\nexport default function(type, params) {\n  return this.each((typeof params === \"function\"\n      ? dispatchFunction\n      : dispatchConstant)(type, params));\n}\n","import selection_select from \"./select\";\nimport selection_selectAll from \"./selectAll\";\nimport selection_filter from \"./filter\";\nimport selection_data from \"./data\";\nimport selection_enter from \"./enter\";\nimport selection_exit from \"./exit\";\nimport selection_merge from \"./merge\";\nimport selection_order from \"./order\";\nimport selection_sort from \"./sort\";\nimport selection_call from \"./call\";\nimport selection_nodes from \"./nodes\";\nimport selection_node from \"./node\";\nimport selection_size from \"./size\";\nimport selection_empty from \"./empty\";\nimport selection_each from \"./each\";\nimport selection_attr from \"./attr\";\nimport selection_style from \"./style\";\nimport selection_property from \"./property\";\nimport selection_classed from \"./classed\";\nimport selection_text from \"./text\";\nimport selection_html from \"./html\";\nimport selection_raise from \"./raise\";\nimport selection_lower from \"./lower\";\nimport selection_append from \"./append\";\nimport selection_insert from \"./insert\";\nimport selection_remove from \"./remove\";\nimport selection_clone from \"./clone\";\nimport selection_datum from \"./datum\";\nimport selection_on from \"./on\";\nimport selection_dispatch from \"./dispatch\";\n\nexport var root = [null];\n\nexport function Selection(groups, parents) {\n  this._groups = groups;\n  this._parents = parents;\n}\n\nfunction selection() {\n  return new Selection([[document.documentElement]], root);\n}\n\nSelection.prototype = selection.prototype = {\n  constructor: Selection,\n  select: selection_select,\n  selectAll: selection_selectAll,\n  filter: selection_filter,\n  data: selection_data,\n  enter: selection_enter,\n  exit: selection_exit,\n  merge: selection_merge,\n  order: selection_order,\n  sort: selection_sort,\n  call: selection_call,\n  nodes: selection_nodes,\n  node: selection_node,\n  size: selection_size,\n  empty: selection_empty,\n  each: selection_each,\n  attr: selection_attr,\n  style: selection_style,\n  property: selection_property,\n  classed: selection_classed,\n  text: selection_text,\n  html: selection_html,\n  raise: selection_raise,\n  lower: selection_lower,\n  append: selection_append,\n  insert: selection_insert,\n  remove: selection_remove,\n  clone: selection_clone,\n  datum: selection_datum,\n  on: selection_on,\n  dispatch: selection_dispatch\n};\n\nexport default selection;\n","import {Selection} from \"./index\";\nimport selector from \"../selector\";\n\nexport default function(select) {\n  if (typeof select !== \"function\") select = selector(select);\n\n  for (var groups = this._groups, m = groups.length, subgroups = new Array(m), j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, subgroup = subgroups[j] = new Array(n), node, subnode, i = 0; i < n; ++i) {\n      if ((node = group[i]) && (subnode = select.call(node, node.__data__, i, group))) {\n        if (\"__data__\" in node) subnode.__data__ = node.__data__;\n        subgroup[i] = subnode;\n      }\n    }\n  }\n\n  return new Selection(subgroups, this._parents);\n}\n","import {Selection} from \"./index\";\nimport selectorAll from \"../selectorAll\";\n\nexport default function(select) {\n  if (typeof select !== \"function\") select = selectorAll(select);\n\n  for (var groups = this._groups, m = groups.length, subgroups = [], parents = [], j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, node, i = 0; i < n; ++i) {\n      if (node = group[i]) {\n        subgroups.push(select.call(node, node.__data__, i, group));\n        parents.push(node);\n      }\n    }\n  }\n\n  return new Selection(subgroups, parents);\n}\n","import {Selection} from \"./index\";\nimport matcher from \"../matcher\";\n\nexport default function(match) {\n  if (typeof match !== \"function\") match = matcher(match);\n\n  for (var groups = this._groups, m = groups.length, subgroups = new Array(m), j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, subgroup = subgroups[j] = [], node, i = 0; i < n; ++i) {\n      if ((node = group[i]) && match.call(node, node.__data__, i, group)) {\n        subgroup.push(node);\n      }\n    }\n  }\n\n  return new Selection(subgroups, this._parents);\n}\n","import sparse from \"./sparse\";\nimport {Selection} from \"./index\";\n\nexport default function() {\n  return new Selection(this._exit || this._groups.map(sparse), this._parents);\n}\n","import {Selection} from \"./index\";\n\nexport default function(selection) {\n\n  for (var groups0 = this._groups, groups1 = selection._groups, m0 = groups0.length, m1 = groups1.length, m = Math.min(m0, m1), merges = new Array(m0), j = 0; j < m; ++j) {\n    for (var group0 = groups0[j], group1 = groups1[j], n = group0.length, merge = merges[j] = new Array(n), node, i = 0; i < n; ++i) {\n      if (node = group0[i] || group1[i]) {\n        merge[i] = node;\n      }\n    }\n  }\n\n  for (; j < m0; ++j) {\n    merges[j] = groups0[j];\n  }\n\n  return new Selection(merges, this._parents);\n}\n","export default function() {\n\n  for (var groups = this._groups, j = -1, m = groups.length; ++j < m;) {\n    for (var group = groups[j], i = group.length - 1, next = group[i], node; --i >= 0;) {\n      if (node = group[i]) {\n        if (next && next !== node.nextSibling) next.parentNode.insertBefore(node, next);\n        next = node;\n      }\n    }\n  }\n\n  return this;\n}\n","export default function() {\n  var callback = arguments[0];\n  arguments[0] = this;\n  callback.apply(null, arguments);\n  return this;\n}\n","export default function() {\n  var nodes = new Array(this.size()), i = -1;\n  this.each(function() { nodes[++i] = this; });\n  return nodes;\n}\n","export default function() {\n\n  for (var groups = this._groups, j = 0, m = groups.length; j < m; ++j) {\n    for (var group = groups[j], i = 0, n = group.length; i < n; ++i) {\n      var node = group[i];\n      if (node) return node;\n    }\n  }\n\n  return null;\n}\n","export default function() {\n  var size = 0;\n  this.each(function() { ++size; });\n  return size;\n}\n","export default function() {\n  return !this.node();\n}\n","export default function(callback) {\n\n  for (var groups = this._groups, j = 0, m = groups.length; j < m; ++j) {\n    for (var group = groups[j], i = 0, n = group.length, node; i < n; ++i) {\n      if (node = group[i]) callback.call(node, node.__data__, i, group);\n    }\n  }\n\n  return this;\n}\n","function propertyRemove(name) {\n  return function() {\n    delete this[name];\n  };\n}\n\nfunction propertyConstant(name, value) {\n  return function() {\n    this[name] = value;\n  };\n}\n\nfunction propertyFunction(name, value) {\n  return function() {\n    var v = value.apply(this, arguments);\n    if (v == null) delete this[name];\n    else this[name] = v;\n  };\n}\n\nexport default function(name, value) {\n  return arguments.length > 1\n      ? this.each((value == null\n          ? propertyRemove : typeof value === \"function\"\n          ? propertyFunction\n          : propertyConstant)(name, value))\n      : this.node()[name];\n}\n","import creator from \"../creator\";\n\nexport default function(name) {\n  var create = typeof name === \"function\" ? name : creator(name);\n  return this.select(function() {\n    return this.appendChild(create.apply(this, arguments));\n  });\n}\n","export default function(value) {\n  return arguments.length\n      ? this.property(\"__data__\", value)\n      : this.node().__data__;\n}\n","import {Selection, root} from \"./selection/index\";\n\nexport default function(selector) {\n  return typeof selector === \"string\"\n      ? new Selection([[document.querySelector(selector)]], [document.documentElement])\n      : new Selection([[selector]], root);\n}\n","var nextId = 0;\n\nexport default function local() {\n  return new Local;\n}\n\nfunction Local() {\n  this._ = \"@\" + (++nextId).toString(36);\n}\n\nLocal.prototype = local.prototype = {\n  constructor: Local,\n  get: function(node) {\n    var id = this._;\n    while (!(id in node)) if (!(node = node.parentNode)) return;\n    return node[id];\n  },\n  set: function(node, value) {\n    return node[this._] = value;\n  },\n  remove: function(node) {\n    return this._ in node && delete node[this._];\n  },\n  toString: function() {\n    return this._;\n  }\n};\n","import {event} from \"./selection/on\";\n\nexport default function() {\n  var current = event, source;\n  while (source = current.sourceEvent) current = source;\n  return current;\n}\n","export default function(node, event) {\n  var svg = node.ownerSVGElement || node;\n\n  if (svg.createSVGPoint) {\n    var point = svg.createSVGPoint();\n    point.x = event.clientX, point.y = event.clientY;\n    point = point.matrixTransform(node.getScreenCTM().inverse());\n    return [point.x, point.y];\n  }\n\n  var rect = node.getBoundingClientRect();\n  return [event.clientX - rect.left - node.clientLeft, event.clientY - rect.top - node.clientTop];\n}\n","import sourceEvent from \"./sourceEvent\";\nimport point from \"./point\";\n\nexport default function(node) {\n  var event = sourceEvent();\n  if (event.changedTouches) event = event.changedTouches[0];\n  return point(node, event);\n}\n","import sourceEvent from \"./sourceEvent\";\nimport point from \"./point\";\n\nexport default function(node, touches, identifier) {\n  if (arguments.length < 3) identifier = touches, touches = sourceEvent().changedTouches;\n\n  for (var i = 0, n = touches ? touches.length : 0, touch; i < n; ++i) {\n    if ((touch = touches[i]).identifier === identifier) {\n      return point(node, touch);\n    }\n  }\n\n  return null;\n}\n","var noop = {value: function() {}};\n\nfunction dispatch() {\n  for (var i = 0, n = arguments.length, _ = {}, t; i < n; ++i) {\n    if (!(t = arguments[i] + \"\") || (t in _)) throw new Error(\"illegal type: \" + t);\n    _[t] = [];\n  }\n  return new Dispatch(_);\n}\n\nfunction Dispatch(_) {\n  this._ = _;\n}\n\nfunction parseTypenames(typenames, types) {\n  return typenames.trim().split(/^|\\s+/).map(function(t) {\n    var name = \"\", i = t.indexOf(\".\");\n    if (i >= 0) name = t.slice(i + 1), t = t.slice(0, i);\n    if (t && !types.hasOwnProperty(t)) throw new Error(\"unknown type: \" + t);\n    return {type: t, name: name};\n  });\n}\n\nDispatch.prototype = dispatch.prototype = {\n  constructor: Dispatch,\n  on: function(typename, callback) {\n    var _ = this._,\n        T = parseTypenames(typename + \"\", _),\n        t,\n        i = -1,\n        n = T.length;\n\n    // If no callback was specified, return the callback of the given type and name.\n    if (arguments.length < 2) {\n      while (++i < n) if ((t = (typename = T[i]).type) && (t = get(_[t], typename.name))) return t;\n      return;\n    }\n\n    // If a type was specified, set the callback for the given type and name.\n    // Otherwise, if a null callback was specified, remove callbacks of the given name.\n    if (callback != null && typeof callback !== \"function\") throw new Error(\"invalid callback: \" + callback);\n    while (++i < n) {\n      if (t = (typename = T[i]).type) _[t] = set(_[t], typename.name, callback);\n      else if (callback == null) for (t in _) _[t] = set(_[t], typename.name, null);\n    }\n\n    return this;\n  },\n  copy: function() {\n    var copy = {}, _ = this._;\n    for (var t in _) copy[t] = _[t].slice();\n    return new Dispatch(copy);\n  },\n  call: function(type, that) {\n    if ((n = arguments.length - 2) > 0) for (var args = new Array(n), i = 0, n, t; i < n; ++i) args[i] = arguments[i + 2];\n    if (!this._.hasOwnProperty(type)) throw new Error(\"unknown type: \" + type);\n    for (t = this._[type], i = 0, n = t.length; i < n; ++i) t[i].value.apply(that, args);\n  },\n  apply: function(type, that, args) {\n    if (!this._.hasOwnProperty(type)) throw new Error(\"unknown type: \" + type);\n    for (var t = this._[type], i = 0, n = t.length; i < n; ++i) t[i].value.apply(that, args);\n  }\n};\n\nfunction get(type, name) {\n  for (var i = 0, n = type.length, c; i < n; ++i) {\n    if ((c = type[i]).name === name) {\n      return c.value;\n    }\n  }\n}\n\nfunction set(type, name, callback) {\n  for (var i = 0, n = type.length; i < n; ++i) {\n    if (type[i].name === name) {\n      type[i] = noop, type = type.slice(0, i).concat(type.slice(i + 1));\n      break;\n    }\n  }\n  if (callback != null) type.push({name: name, value: callback});\n  return type;\n}\n\nexport default dispatch;\n","import {event} from \"d3-selection\";\n\nexport function nopropagation() {\n  event.stopImmediatePropagation();\n}\n\nexport default function() {\n  event.preventDefault();\n  event.stopImmediatePropagation();\n}\n","import {select} from \"d3-selection\";\nimport noevent from \"./noevent\";\n\nexport default function(view) {\n  var root = view.document.documentElement,\n      selection = select(view).on(\"dragstart.drag\", noevent, true);\n  if (\"onselectstart\" in root) {\n    selection.on(\"selectstart.drag\", noevent, true);\n  } else {\n    root.__noselect = root.style.MozUserSelect;\n    root.style.MozUserSelect = \"none\";\n  }\n}\n\nexport function yesdrag(view, noclick) {\n  var root = view.document.documentElement,\n      selection = select(view).on(\"dragstart.drag\", null);\n  if (noclick) {\n    selection.on(\"click.drag\", noevent, true);\n    setTimeout(function() { selection.on(\"click.drag\", null); }, 0);\n  }\n  if (\"onselectstart\" in root) {\n    selection.on(\"selectstart.drag\", null);\n  } else {\n    root.style.MozUserSelect = root.__noselect;\n    delete root.__noselect;\n  }\n}\n","export default function(x) {\n  return function() {\n    return x;\n  };\n}\n","export default function DragEvent(target, type, subject, id, active, x, y, dx, dy, dispatch) {\n  this.target = target;\n  this.type = type;\n  this.subject = subject;\n  this.identifier = id;\n  this.active = active;\n  this.x = x;\n  this.y = y;\n  this.dx = dx;\n  this.dy = dy;\n  this._ = dispatch;\n}\n\nDragEvent.prototype.on = function() {\n  var value = this._.on.apply(this._, arguments);\n  return value === this._ ? this : value;\n};\n","import {dispatch} from \"d3-dispatch\";\nimport {event, customEvent, select, mouse, touch} from \"d3-selection\";\nimport nodrag, {yesdrag} from \"./nodrag\";\nimport noevent, {nopropagation} from \"./noevent\";\nimport constant from \"./constant\";\nimport DragEvent from \"./event\";\n\n// Ignore right-click, since that should open the context menu.\nfunction defaultFilter() {\n  return !event.button;\n}\n\nfunction defaultContainer() {\n  return this.parentNode;\n}\n\nfunction defaultSubject(d) {\n  return d == null ? {x: event.x, y: event.y} : d;\n}\n\nfunction defaultTouchable() {\n  return \"ontouchstart\" in this;\n}\n\nexport default function() {\n  var filter = defaultFilter,\n      container = defaultContainer,\n      subject = defaultSubject,\n      touchable = defaultTouchable,\n      gestures = {},\n      listeners = dispatch(\"start\", \"drag\", \"end\"),\n      active = 0,\n      mousedownx,\n      mousedowny,\n      mousemoving,\n      touchending,\n      clickDistance2 = 0;\n\n  function drag(selection) {\n    selection\n        .on(\"mousedown.drag\", mousedowned)\n      .filter(touchable)\n        .on(\"touchstart.drag\", touchstarted)\n        .on(\"touchmove.drag\", touchmoved)\n        .on(\"touchend.drag touchcancel.drag\", touchended)\n        .style(\"touch-action\", \"none\")\n        .style(\"-webkit-tap-highlight-color\", \"rgba(0,0,0,0)\");\n  }\n\n  function mousedowned() {\n    if (touchending || !filter.apply(this, arguments)) return;\n    var gesture = beforestart(\"mouse\", container.apply(this, arguments), mouse, this, arguments);\n    if (!gesture) return;\n    select(event.view).on(\"mousemove.drag\", mousemoved, true).on(\"mouseup.drag\", mouseupped, true);\n    nodrag(event.view);\n    nopropagation();\n    mousemoving = false;\n    mousedownx = event.clientX;\n    mousedowny = event.clientY;\n    gesture(\"start\");\n  }\n\n  function mousemoved() {\n    noevent();\n    if (!mousemoving) {\n      var dx = event.clientX - mousedownx, dy = event.clientY - mousedowny;\n      mousemoving = dx * dx + dy * dy > clickDistance2;\n    }\n    gestures.mouse(\"drag\");\n  }\n\n  function mouseupped() {\n    select(event.view).on(\"mousemove.drag mouseup.drag\", null);\n    yesdrag(event.view, mousemoving);\n    noevent();\n    gestures.mouse(\"end\");\n  }\n\n  function touchstarted() {\n    if (!filter.apply(this, arguments)) return;\n    var touches = event.changedTouches,\n        c = container.apply(this, arguments),\n        n = touches.length, i, gesture;\n\n    for (i = 0; i < n; ++i) {\n      if (gesture = beforestart(touches[i].identifier, c, touch, this, arguments)) {\n        nopropagation();\n        gesture(\"start\");\n      }\n    }\n  }\n\n  function touchmoved() {\n    var touches = event.changedTouches,\n        n = touches.length, i, gesture;\n\n    for (i = 0; i < n; ++i) {\n      if (gesture = gestures[touches[i].identifier]) {\n        noevent();\n        gesture(\"drag\");\n      }\n    }\n  }\n\n  function touchended() {\n    var touches = event.changedTouches,\n        n = touches.length, i, gesture;\n\n    if (touchending) clearTimeout(touchending);\n    touchending = setTimeout(function() { touchending = null; }, 500); // Ghost clicks are delayed!\n    for (i = 0; i < n; ++i) {\n      if (gesture = gestures[touches[i].identifier]) {\n        nopropagation();\n        gesture(\"end\");\n      }\n    }\n  }\n\n  function beforestart(id, container, point, that, args) {\n    var p = point(container, id), s, dx, dy,\n        sublisteners = listeners.copy();\n\n    if (!customEvent(new DragEvent(drag, \"beforestart\", s, id, active, p[0], p[1], 0, 0, sublisteners), function() {\n      if ((event.subject = s = subject.apply(that, args)) == null) return false;\n      dx = s.x - p[0] || 0;\n      dy = s.y - p[1] || 0;\n      return true;\n    })) return;\n\n    return function gesture(type) {\n      var p0 = p, n;\n      switch (type) {\n        case \"start\": gestures[id] = gesture, n = active++; break;\n        case \"end\": delete gestures[id], --active; // nobreak\n        case \"drag\": p = point(container, id), n = active; break;\n      }\n      customEvent(new DragEvent(drag, type, s, id, n, p[0] + dx, p[1] + dy, p[0] - p0[0], p[1] - p0[1], sublisteners), sublisteners.apply, sublisteners, [type, that, args]);\n    };\n  }\n\n  drag.filter = function(_) {\n    return arguments.length ? (filter = typeof _ === \"function\" ? _ : constant(!!_), drag) : filter;\n  };\n\n  drag.container = function(_) {\n    return arguments.length ? (container = typeof _ === \"function\" ? _ : constant(_), drag) : container;\n  };\n\n  drag.subject = function(_) {\n    return arguments.length ? (subject = typeof _ === \"function\" ? _ : constant(_), drag) : subject;\n  };\n\n  drag.touchable = function(_) {\n    return arguments.length ? (touchable = typeof _ === \"function\" ? _ : constant(!!_), drag) : touchable;\n  };\n\n  drag.on = function() {\n    var value = listeners.on.apply(listeners, arguments);\n    return value === listeners ? drag : value;\n  };\n\n  drag.clickDistance = function(_) {\n    return arguments.length ? (clickDistance2 = (_ = +_) * _, drag) : Math.sqrt(clickDistance2);\n  };\n\n  return drag;\n}\n","var frame = 0, // is an animation frame pending?\n    timeout = 0, // is a timeout pending?\n    interval = 0, // are any timers active?\n    pokeDelay = 1000, // how frequently we check for clock skew\n    taskHead,\n    taskTail,\n    clockLast = 0,\n    clockNow = 0,\n    clockSkew = 0,\n    clock = typeof performance === \"object\" && performance.now ? performance : Date,\n    setFrame = typeof window === \"object\" && window.requestAnimationFrame ? window.requestAnimationFrame.bind(window) : function(f) { setTimeout(f, 17); };\n\nexport function now() {\n  return clockNow || (setFrame(clearNow), clockNow = clock.now() + clockSkew);\n}\n\nfunction clearNow() {\n  clockNow = 0;\n}\n\nexport function Timer() {\n  this._call =\n  this._time =\n  this._next = null;\n}\n\nTimer.prototype = timer.prototype = {\n  constructor: Timer,\n  restart: function(callback, delay, time) {\n    if (typeof callback !== \"function\") throw new TypeError(\"callback is not a function\");\n    time = (time == null ? now() : +time) + (delay == null ? 0 : +delay);\n    if (!this._next && taskTail !== this) {\n      if (taskTail) taskTail._next = this;\n      else taskHead = this;\n      taskTail = this;\n    }\n    this._call = callback;\n    this._time = time;\n    sleep();\n  },\n  stop: function() {\n    if (this._call) {\n      this._call = null;\n      this._time = Infinity;\n      sleep();\n    }\n  }\n};\n\nexport function timer(callback, delay, time) {\n  var t = new Timer;\n  t.restart(callback, delay, time);\n  return t;\n}\n\nexport function timerFlush() {\n  now(); // Get the current time, if not already set.\n  ++frame; // Pretend we’ve set an alarm, if we haven’t already.\n  var t = taskHead, e;\n  while (t) {\n    if ((e = clockNow - t._time) >= 0) t._call.call(null, e);\n    t = t._next;\n  }\n  --frame;\n}\n\nfunction wake() {\n  clockNow = (clockLast = clock.now()) + clockSkew;\n  frame = timeout = 0;\n  try {\n    timerFlush();\n  } finally {\n    frame = 0;\n    nap();\n    clockNow = 0;\n  }\n}\n\nfunction poke() {\n  var now = clock.now(), delay = now - clockLast;\n  if (delay > pokeDelay) clockSkew -= delay, clockLast = now;\n}\n\nfunction nap() {\n  var t0, t1 = taskHead, t2, time = Infinity;\n  while (t1) {\n    if (t1._call) {\n      if (time > t1._time) time = t1._time;\n      t0 = t1, t1 = t1._next;\n    } else {\n      t2 = t1._next, t1._next = null;\n      t1 = t0 ? t0._next = t2 : taskHead = t2;\n    }\n  }\n  taskTail = t0;\n  sleep(time);\n}\n\nfunction sleep(time) {\n  if (frame) return; // Soonest alarm already set, or will be.\n  if (timeout) timeout = clearTimeout(timeout);\n  var delay = time - clockNow; // Strictly less than if we recomputed clockNow.\n  if (delay > 24) {\n    if (time < Infinity) timeout = setTimeout(wake, time - clock.now() - clockSkew);\n    if (interval) interval = clearInterval(interval);\n  } else {\n    if (!interval) clockLast = clock.now(), interval = setInterval(poke, pokeDelay);\n    frame = 1, setFrame(wake);\n  }\n}\n","import {Timer} from \"./timer\";\n\nexport default function(callback, delay, time) {\n  var t = new Timer;\n  delay = delay == null ? 0 : +delay;\n  t.restart(function(elapsed) {\n    t.stop();\n    callback(elapsed + delay);\n  }, delay, time);\n  return t;\n}\n","import {dispatch} from \"d3-dispatch\";\nimport {timer, timeout} from \"d3-timer\";\n\nvar emptyOn = dispatch(\"start\", \"end\", \"interrupt\");\nvar emptyTween = [];\n\nexport var CREATED = 0;\nexport var SCHEDULED = 1;\nexport var STARTING = 2;\nexport var STARTED = 3;\nexport var RUNNING = 4;\nexport var ENDING = 5;\nexport var ENDED = 6;\n\nexport default function(node, name, id, index, group, timing) {\n  var schedules = node.__transition;\n  if (!schedules) node.__transition = {};\n  else if (id in schedules) return;\n  create(node, id, {\n    name: name,\n    index: index, // For context during callback.\n    group: group, // For context during callback.\n    on: emptyOn,\n    tween: emptyTween,\n    time: timing.time,\n    delay: timing.delay,\n    duration: timing.duration,\n    ease: timing.ease,\n    timer: null,\n    state: CREATED\n  });\n}\n\nexport function init(node, id) {\n  var schedule = get(node, id);\n  if (schedule.state > CREATED) throw new Error(\"too late; already scheduled\");\n  return schedule;\n}\n\nexport function set(node, id) {\n  var schedule = get(node, id);\n  if (schedule.state > STARTING) throw new Error(\"too late; already started\");\n  return schedule;\n}\n\nexport function get(node, id) {\n  var schedule = node.__transition;\n  if (!schedule || !(schedule = schedule[id])) throw new Error(\"transition not found\");\n  return schedule;\n}\n\nfunction create(node, id, self) {\n  var schedules = node.__transition,\n      tween;\n\n  // Initialize the self timer when the transition is created.\n  // Note the actual delay is not known until the first callback!\n  schedules[id] = self;\n  self.timer = timer(schedule, 0, self.time);\n\n  function schedule(elapsed) {\n    self.state = SCHEDULED;\n    self.timer.restart(start, self.delay, self.time);\n\n    // If the elapsed delay is less than our first sleep, start immediately.\n    if (self.delay <= elapsed) start(elapsed - self.delay);\n  }\n\n  function start(elapsed) {\n    var i, j, n, o;\n\n    // If the state is not SCHEDULED, then we previously errored on start.\n    if (self.state !== SCHEDULED) return stop();\n\n    for (i in schedules) {\n      o = schedules[i];\n      if (o.name !== self.name) continue;\n\n      // While this element already has a starting transition during this frame,\n      // defer starting an interrupting transition until that transition has a\n      // chance to tick (and possibly end); see d3/d3-transition#54!\n      if (o.state === STARTED) return timeout(start);\n\n      // Interrupt the active transition, if any.\n      // Dispatch the interrupt event.\n      if (o.state === RUNNING) {\n        o.state = ENDED;\n        o.timer.stop();\n        o.on.call(\"interrupt\", node, node.__data__, o.index, o.group);\n        delete schedules[i];\n      }\n\n      // Cancel any pre-empted transitions. No interrupt event is dispatched\n      // because the cancelled transitions never started. Note that this also\n      // removes this transition from the pending list!\n      else if (+i < id) {\n        o.state = ENDED;\n        o.timer.stop();\n        delete schedules[i];\n      }\n    }\n\n    // Defer the first tick to end of the current frame; see d3/d3#1576.\n    // Note the transition may be canceled after start and before the first tick!\n    // Note this must be scheduled before the start event; see d3/d3-transition#16!\n    // Assuming this is successful, subsequent callbacks go straight to tick.\n    timeout(function() {\n      if (self.state === STARTED) {\n        self.state = RUNNING;\n        self.timer.restart(tick, self.delay, self.time);\n        tick(elapsed);\n      }\n    });\n\n    // Dispatch the start event.\n    // Note this must be done before the tween are initialized.\n    self.state = STARTING;\n    self.on.call(\"start\", node, node.__data__, self.index, self.group);\n    if (self.state !== STARTING) return; // interrupted\n    self.state = STARTED;\n\n    // Initialize the tween, deleting null tween.\n    tween = new Array(n = self.tween.length);\n    for (i = 0, j = -1; i < n; ++i) {\n      if (o = self.tween[i].value.call(node, node.__data__, self.index, self.group)) {\n        tween[++j] = o;\n      }\n    }\n    tween.length = j + 1;\n  }\n\n  function tick(elapsed) {\n    var t = elapsed < self.duration ? self.ease.call(null, elapsed / self.duration) : (self.timer.restart(stop), self.state = ENDING, 1),\n        i = -1,\n        n = tween.length;\n\n    while (++i < n) {\n      tween[i].call(null, t);\n    }\n\n    // Dispatch the end event.\n    if (self.state === ENDING) {\n      self.on.call(\"end\", node, node.__data__, self.index, self.group);\n      stop();\n    }\n  }\n\n  function stop() {\n    self.state = ENDED;\n    self.timer.stop();\n    delete schedules[id];\n    for (var i in schedules) return; // eslint-disable-line no-unused-vars\n    delete node.__transition;\n  }\n}\n","import {get, set} from \"./schedule\";\n\nfunction tweenRemove(id, name) {\n  var tween0, tween1;\n  return function() {\n    var schedule = set(this, id),\n        tween = schedule.tween;\n\n    // If this node shared tween with the previous node,\n    // just assign the updated shared tween and we’re done!\n    // Otherwise, copy-on-write.\n    if (tween !== tween0) {\n      tween1 = tween0 = tween;\n      for (var i = 0, n = tween1.length; i < n; ++i) {\n        if (tween1[i].name === name) {\n          tween1 = tween1.slice();\n          tween1.splice(i, 1);\n          break;\n        }\n      }\n    }\n\n    schedule.tween = tween1;\n  };\n}\n\nfunction tweenFunction(id, name, value) {\n  var tween0, tween1;\n  if (typeof value !== \"function\") throw new Error;\n  return function() {\n    var schedule = set(this, id),\n        tween = schedule.tween;\n\n    // If this node shared tween with the previous node,\n    // just assign the updated shared tween and we’re done!\n    // Otherwise, copy-on-write.\n    if (tween !== tween0) {\n      tween1 = (tween0 = tween).slice();\n      for (var t = {name: name, value: value}, i = 0, n = tween1.length; i < n; ++i) {\n        if (tween1[i].name === name) {\n          tween1[i] = t;\n          break;\n        }\n      }\n      if (i === n) tween1.push(t);\n    }\n\n    schedule.tween = tween1;\n  };\n}\n\nexport default function(name, value) {\n  var id = this._id;\n\n  name += \"\";\n\n  if (arguments.length < 2) {\n    var tween = get(this.node(), id).tween;\n    for (var i = 0, n = tween.length, t; i < n; ++i) {\n      if ((t = tween[i]).name === name) {\n        return t.value;\n      }\n    }\n    return null;\n  }\n\n  return this.each((value == null ? tweenRemove : tweenFunction)(id, name, value));\n}\n\nexport function tweenValue(transition, name, value) {\n  var id = transition._id;\n\n  transition.each(function() {\n    var schedule = set(this, id);\n    (schedule.value || (schedule.value = {}))[name] = value.apply(this, arguments);\n  });\n\n  return function(node) {\n    return get(node, id).value[name];\n  };\n}\n","import {color} from \"d3-color\";\nimport {interpolateNumber, interpolateRgb, interpolateString} from \"d3-interpolate\";\n\nexport default function(a, b) {\n  var c;\n  return (typeof b === \"number\" ? interpolateNumber\n      : b instanceof color ? interpolateRgb\n      : (c = color(b)) ? (b = c, interpolateRgb)\n      : interpolateString)(a, b);\n}\n","function removeFunction(id) {\n  return function() {\n    var parent = this.parentNode;\n    for (var i in this.__transition) if (+i !== id) return;\n    if (parent) parent.removeChild(this);\n  };\n}\n\nexport default function() {\n  return this.on(\"end.remove\", removeFunction(this._id));\n}\n","import {selection} from \"d3-selection\";\n\nvar Selection = selection.prototype.constructor;\n\nexport default function() {\n  return new Selection(this._groups, this._parents);\n}\n","import {tweenValue} from \"./tween\";\n\nfunction textConstant(value) {\n  return function() {\n    this.textContent = value;\n  };\n}\n\nfunction textFunction(value) {\n  return function() {\n    var value1 = value(this);\n    this.textContent = value1 == null ? \"\" : value1;\n  };\n}\n\nexport default function(value) {\n  return this.tween(\"text\", typeof value === \"function\"\n      ? textFunction(tweenValue(this, \"text\", value))\n      : textConstant(value == null ? \"\" : value + \"\"));\n}\n","import {selection} from \"d3-selection\";\nimport transition_attr from \"./attr\";\nimport transition_attrTween from \"./attrTween\";\nimport transition_delay from \"./delay\";\nimport transition_duration from \"./duration\";\nimport transition_ease from \"./ease\";\nimport transition_filter from \"./filter\";\nimport transition_merge from \"./merge\";\nimport transition_on from \"./on\";\nimport transition_remove from \"./remove\";\nimport transition_select from \"./select\";\nimport transition_selectAll from \"./selectAll\";\nimport transition_selection from \"./selection\";\nimport transition_style from \"./style\";\nimport transition_styleTween from \"./styleTween\";\nimport transition_text from \"./text\";\nimport transition_transition from \"./transition\";\nimport transition_tween from \"./tween\";\n\nvar id = 0;\n\nexport function Transition(groups, parents, name, id) {\n  this._groups = groups;\n  this._parents = parents;\n  this._name = name;\n  this._id = id;\n}\n\nexport default function transition(name) {\n  return selection().transition(name);\n}\n\nexport function newId() {\n  return ++id;\n}\n\nvar selection_prototype = selection.prototype;\n\nTransition.prototype = transition.prototype = {\n  constructor: Transition,\n  select: transition_select,\n  selectAll: transition_selectAll,\n  filter: transition_filter,\n  merge: transition_merge,\n  selection: transition_selection,\n  transition: transition_transition,\n  call: selection_prototype.call,\n  nodes: selection_prototype.nodes,\n  node: selection_prototype.node,\n  size: selection_prototype.size,\n  empty: selection_prototype.empty,\n  each: selection_prototype.each,\n  on: transition_on,\n  attr: transition_attr,\n  attrTween: transition_attrTween,\n  style: transition_style,\n  styleTween: transition_styleTween,\n  text: transition_text,\n  remove: transition_remove,\n  tween: transition_tween,\n  delay: transition_delay,\n  duration: transition_duration,\n  ease: transition_ease\n};\n","import {selector} from \"d3-selection\";\nimport {Transition} from \"./index\";\nimport schedule, {get} from \"./schedule\";\n\nexport default function(select) {\n  var name = this._name,\n      id = this._id;\n\n  if (typeof select !== \"function\") select = selector(select);\n\n  for (var groups = this._groups, m = groups.length, subgroups = new Array(m), j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, subgroup = subgroups[j] = new Array(n), node, subnode, i = 0; i < n; ++i) {\n      if ((node = group[i]) && (subnode = select.call(node, node.__data__, i, group))) {\n        if (\"__data__\" in node) subnode.__data__ = node.__data__;\n        subgroup[i] = subnode;\n        schedule(subgroup[i], name, id, i, subgroup, get(node, id));\n      }\n    }\n  }\n\n  return new Transition(subgroups, this._parents, name, id);\n}\n","import {selectorAll} from \"d3-selection\";\nimport {Transition} from \"./index\";\nimport schedule, {get} from \"./schedule\";\n\nexport default function(select) {\n  var name = this._name,\n      id = this._id;\n\n  if (typeof select !== \"function\") select = selectorAll(select);\n\n  for (var groups = this._groups, m = groups.length, subgroups = [], parents = [], j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, node, i = 0; i < n; ++i) {\n      if (node = group[i]) {\n        for (var children = select.call(node, node.__data__, i, group), child, inherit = get(node, id), k = 0, l = children.length; k < l; ++k) {\n          if (child = children[k]) {\n            schedule(child, name, id, k, children, inherit);\n          }\n        }\n        subgroups.push(children);\n        parents.push(node);\n      }\n    }\n  }\n\n  return new Transition(subgroups, parents, name, id);\n}\n","import {matcher} from \"d3-selection\";\nimport {Transition} from \"./index\";\n\nexport default function(match) {\n  if (typeof match !== \"function\") match = matcher(match);\n\n  for (var groups = this._groups, m = groups.length, subgroups = new Array(m), j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, subgroup = subgroups[j] = [], node, i = 0; i < n; ++i) {\n      if ((node = group[i]) && match.call(node, node.__data__, i, group)) {\n        subgroup.push(node);\n      }\n    }\n  }\n\n  return new Transition(subgroups, this._parents, this._name, this._id);\n}\n","import {Transition} from \"./index\";\n\nexport default function(transition) {\n  if (transition._id !== this._id) throw new Error;\n\n  for (var groups0 = this._groups, groups1 = transition._groups, m0 = groups0.length, m1 = groups1.length, m = Math.min(m0, m1), merges = new Array(m0), j = 0; j < m; ++j) {\n    for (var group0 = groups0[j], group1 = groups1[j], n = group0.length, merge = merges[j] = new Array(n), node, i = 0; i < n; ++i) {\n      if (node = group0[i] || group1[i]) {\n        merge[i] = node;\n      }\n    }\n  }\n\n  for (; j < m0; ++j) {\n    merges[j] = groups0[j];\n  }\n\n  return new Transition(merges, this._parents, this._name, this._id);\n}\n","import {Transition, newId} from \"./index\";\nimport schedule, {get} from \"./schedule\";\n\nexport default function() {\n  var name = this._name,\n      id0 = this._id,\n      id1 = newId();\n\n  for (var groups = this._groups, m = groups.length, j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, node, i = 0; i < n; ++i) {\n      if (node = group[i]) {\n        var inherit = get(node, id0);\n        schedule(node, name, id1, i, group, {\n          time: inherit.time + inherit.delay + inherit.duration,\n          delay: 0,\n          duration: inherit.duration,\n          ease: inherit.ease\n        });\n      }\n    }\n  }\n\n  return new Transition(groups, this._parents, name, id1);\n}\n","import {get, set, init} from \"./schedule\";\n\nfunction start(name) {\n  return (name + \"\").trim().split(/^|\\s+/).every(function(t) {\n    var i = t.indexOf(\".\");\n    if (i >= 0) t = t.slice(0, i);\n    return !t || t === \"start\";\n  });\n}\n\nfunction onFunction(id, name, listener) {\n  var on0, on1, sit = start(name) ? init : set;\n  return function() {\n    var schedule = sit(this, id),\n        on = schedule.on;\n\n    // If this node shared a dispatch with the previous node,\n    // just assign the updated shared dispatch and we’re done!\n    // Otherwise, copy-on-write.\n    if (on !== on0) (on1 = (on0 = on).copy()).on(name, listener);\n\n    schedule.on = on1;\n  };\n}\n\nexport default function(name, listener) {\n  var id = this._id;\n\n  return arguments.length < 2\n      ? get(this.node(), id).on.on(name)\n      : this.each(onFunction(id, name, listener));\n}\n","import {interpolateTransformSvg as interpolateTransform} from \"d3-interpolate\";\nimport {namespace} from \"d3-selection\";\nimport {tweenValue} from \"./tween\";\nimport interpolate from \"./interpolate\";\n\nfunction attrRemove(name) {\n  return function() {\n    this.removeAttribute(name);\n  };\n}\n\nfunction attrRemoveNS(fullname) {\n  return function() {\n    this.removeAttributeNS(fullname.space, fullname.local);\n  };\n}\n\nfunction attrConstant(name, interpolate, value1) {\n  var value00,\n      interpolate0;\n  return function() {\n    var value0 = this.getAttribute(name);\n    return value0 === value1 ? null\n        : value0 === value00 ? interpolate0\n        : interpolate0 = interpolate(value00 = value0, value1);\n  };\n}\n\nfunction attrConstantNS(fullname, interpolate, value1) {\n  var value00,\n      interpolate0;\n  return function() {\n    var value0 = this.getAttributeNS(fullname.space, fullname.local);\n    return value0 === value1 ? null\n        : value0 === value00 ? interpolate0\n        : interpolate0 = interpolate(value00 = value0, value1);\n  };\n}\n\nfunction attrFunction(name, interpolate, value) {\n  var value00,\n      value10,\n      interpolate0;\n  return function() {\n    var value0, value1 = value(this);\n    if (value1 == null) return void this.removeAttribute(name);\n    value0 = this.getAttribute(name);\n    return value0 === value1 ? null\n        : value0 === value00 && value1 === value10 ? interpolate0\n        : interpolate0 = interpolate(value00 = value0, value10 = value1);\n  };\n}\n\nfunction attrFunctionNS(fullname, interpolate, value) {\n  var value00,\n      value10,\n      interpolate0;\n  return function() {\n    var value0, value1 = value(this);\n    if (value1 == null) return void this.removeAttributeNS(fullname.space, fullname.local);\n    value0 = this.getAttributeNS(fullname.space, fullname.local);\n    return value0 === value1 ? null\n        : value0 === value00 && value1 === value10 ? interpolate0\n        : interpolate0 = interpolate(value00 = value0, value10 = value1);\n  };\n}\n\nexport default function(name, value) {\n  var fullname = namespace(name), i = fullname === \"transform\" ? interpolateTransform : interpolate;\n  return this.attrTween(name, typeof value === \"function\"\n      ? (fullname.local ? attrFunctionNS : attrFunction)(fullname, i, tweenValue(this, \"attr.\" + name, value))\n      : value == null ? (fullname.local ? attrRemoveNS : attrRemove)(fullname)\n      : (fullname.local ? attrConstantNS : attrConstant)(fullname, i, value + \"\"));\n}\n","import {namespace} from \"d3-selection\";\n\nfunction attrTweenNS(fullname, value) {\n  function tween() {\n    var node = this, i = value.apply(node, arguments);\n    return i && function(t) {\n      node.setAttributeNS(fullname.space, fullname.local, i(t));\n    };\n  }\n  tween._value = value;\n  return tween;\n}\n\nfunction attrTween(name, value) {\n  function tween() {\n    var node = this, i = value.apply(node, arguments);\n    return i && function(t) {\n      node.setAttribute(name, i(t));\n    };\n  }\n  tween._value = value;\n  return tween;\n}\n\nexport default function(name, value) {\n  var key = \"attr.\" + name;\n  if (arguments.length < 2) return (key = this.tween(key)) && key._value;\n  if (value == null) return this.tween(key, null);\n  if (typeof value !== \"function\") throw new Error;\n  var fullname = namespace(name);\n  return this.tween(key, (fullname.local ? attrTweenNS : attrTween)(fullname, value));\n}\n","import {interpolateTransformCss as interpolateTransform} from \"d3-interpolate\";\nimport {style} from \"d3-selection\";\nimport {tweenValue} from \"./tween\";\nimport interpolate from \"./interpolate\";\n\nfunction styleRemove(name, interpolate) {\n  var value00,\n      value10,\n      interpolate0;\n  return function() {\n    var value0 = style(this, name),\n        value1 = (this.style.removeProperty(name), style(this, name));\n    return value0 === value1 ? null\n        : value0 === value00 && value1 === value10 ? interpolate0\n        : interpolate0 = interpolate(value00 = value0, value10 = value1);\n  };\n}\n\nfunction styleRemoveEnd(name) {\n  return function() {\n    this.style.removeProperty(name);\n  };\n}\n\nfunction styleConstant(name, interpolate, value1) {\n  var value00,\n      interpolate0;\n  return function() {\n    var value0 = style(this, name);\n    return value0 === value1 ? null\n        : value0 === value00 ? interpolate0\n        : interpolate0 = interpolate(value00 = value0, value1);\n  };\n}\n\nfunction styleFunction(name, interpolate, value) {\n  var value00,\n      value10,\n      interpolate0;\n  return function() {\n    var value0 = style(this, name),\n        value1 = value(this);\n    if (value1 == null) value1 = (this.style.removeProperty(name), style(this, name));\n    return value0 === value1 ? null\n        : value0 === value00 && value1 === value10 ? interpolate0\n        : interpolate0 = interpolate(value00 = value0, value10 = value1);\n  };\n}\n\nexport default function(name, value, priority) {\n  var i = (name += \"\") === \"transform\" ? interpolateTransform : interpolate;\n  return value == null ? this\n          .styleTween(name, styleRemove(name, i))\n          .on(\"end.style.\" + name, styleRemoveEnd(name))\n      : this.styleTween(name, typeof value === \"function\"\n          ? styleFunction(name, i, tweenValue(this, \"style.\" + name, value))\n          : styleConstant(name, i, value + \"\"), priority);\n}\n","function styleTween(name, value, priority) {\n  function tween() {\n    var node = this, i = value.apply(node, arguments);\n    return i && function(t) {\n      node.style.setProperty(name, i(t), priority);\n    };\n  }\n  tween._value = value;\n  return tween;\n}\n\nexport default function(name, value, priority) {\n  var key = \"style.\" + (name += \"\");\n  if (arguments.length < 2) return (key = this.tween(key)) && key._value;\n  if (value == null) return this.tween(key, null);\n  if (typeof value !== \"function\") throw new Error;\n  return this.tween(key, styleTween(name, value, priority == null ? \"\" : priority));\n}\n","import {get, init} from \"./schedule\";\n\nfunction delayFunction(id, value) {\n  return function() {\n    init(this, id).delay = +value.apply(this, arguments);\n  };\n}\n\nfunction delayConstant(id, value) {\n  return value = +value, function() {\n    init(this, id).delay = value;\n  };\n}\n\nexport default function(value) {\n  var id = this._id;\n\n  return arguments.length\n      ? this.each((typeof value === \"function\"\n          ? delayFunction\n          : delayConstant)(id, value))\n      : get(this.node(), id).delay;\n}\n","import {get, set} from \"./schedule\";\n\nfunction durationFunction(id, value) {\n  return function() {\n    set(this, id).duration = +value.apply(this, arguments);\n  };\n}\n\nfunction durationConstant(id, value) {\n  return value = +value, function() {\n    set(this, id).duration = value;\n  };\n}\n\nexport default function(value) {\n  var id = this._id;\n\n  return arguments.length\n      ? this.each((typeof value === \"function\"\n          ? durationFunction\n          : durationConstant)(id, value))\n      : get(this.node(), id).duration;\n}\n","import {get, set} from \"./schedule\";\n\nfunction easeConstant(id, value) {\n  if (typeof value !== \"function\") throw new Error;\n  return function() {\n    set(this, id).ease = value;\n  };\n}\n\nexport default function(value) {\n  var id = this._id;\n\n  return arguments.length\n      ? this.each(easeConstant(id, value))\n      : get(this.node(), id).ease;\n}\n","import {Transition, newId} from \"../transition/index\";\nimport schedule from \"../transition/schedule\";\nimport {easeCubicInOut} from \"d3-ease\";\nimport {now} from \"d3-timer\";\n\nvar defaultTiming = {\n  time: null, // Set on use.\n  delay: 0,\n  duration: 250,\n  ease: easeCubicInOut\n};\n\nfunction inherit(node, id) {\n  var timing;\n  while (!(timing = node.__transition) || !(timing = timing[id])) {\n    if (!(node = node.parentNode)) {\n      return defaultTiming.time = now(), defaultTiming;\n    }\n  }\n  return timing;\n}\n\nexport default function(name) {\n  var id,\n      timing;\n\n  if (name instanceof Transition) {\n    id = name._id, name = name._name;\n  } else {\n    id = newId(), (timing = defaultTiming).time = now(), name = name == null ? null : name + \"\";\n  }\n\n  for (var groups = this._groups, m = groups.length, j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, node, i = 0; i < n; ++i) {\n      if (node = group[i]) {\n        schedule(node, name, id, i, group, timing || inherit(node, id));\n      }\n    }\n  }\n\n  return new Transition(groups, this._parents, name, id);\n}\n","import {selection} from \"d3-selection\";\nimport selection_interrupt from \"./interrupt\";\nimport selection_transition from \"./transition\";\n\nselection.prototype.interrupt = selection_interrupt;\nselection.prototype.transition = selection_transition;\n","import interrupt from \"../interrupt\";\n\nexport default function(name) {\n  return this.each(function() {\n    interrupt(this, name);\n  });\n}\n","import {STARTING, ENDING, ENDED} from \"./transition/schedule\";\n\nexport default function(node, name) {\n  var schedules = node.__transition,\n      schedule,\n      active,\n      empty = true,\n      i;\n\n  if (!schedules) return;\n\n  name = name == null ? null : name + \"\";\n\n  for (i in schedules) {\n    if ((schedule = schedules[i]).name !== name) { empty = false; continue; }\n    active = schedule.state > STARTING && schedule.state < ENDING;\n    schedule.state = ENDED;\n    schedule.timer.stop();\n    if (active) schedule.on.call(\"interrupt\", node, node.__data__, schedule.index, schedule.group);\n    delete schedules[i];\n  }\n\n  if (empty) delete node.__transition;\n}\n","import { select, event as d3event, selection, clientPoint } from 'd3-selection';\nimport { drag as d3drag } from 'd3-drag';\nimport 'd3-transition';\nimport { mergeRecursive } from './common-utils';\n/**\n * This function takes a raw DOM element or\n * a string and returns a d3 selection of that element.\n *\n * @param {HTMLElement | string} element The element to wrap in d3 selection.\n * @return {Selection} Instance of d3 selection.\n */\nconst selectElement = element => select(element);\n\n/**\n * It creates a new d3 element on the parent element\n * @param  {Selection} parent Element to which the element is to be appended\n * @param  {Object} elemType Type of the new element\n * @param  {Array} data Data for the new element\n * @param  {Object} selector classname/id/tagname for the element\n * @return {HTMLElement} Newly Created Element\n */\nconst makeElement = (parent, elemType, data, selector, callbacks = {}, keyFn) => {\n    if ((parent instanceof HTMLElement || parent instanceof SVGElement)) {\n        parent = selectElement(parent);\n    }\n\n    const selectorVal = selector ? selector[0] : null;\n    let selectorType = null;\n    let actualSelector = null;\n    let element = null;\n    let enterSel = null;\n    let mergeSel = null;\n    let filter;\n    if (selectorVal) {\n        if (selectorVal === '#') {\n            selectorType = 'id';\n            actualSelector = selector;\n        } else {\n            selectorType = 'class';\n            actualSelector = selector[0] === '.' ? selector : `.${selector}`;\n        }\n    } else {\n        actualSelector = elemType;\n        filter = true;\n    }\n    element = parent.selectAll(actualSelector);\n\n    filter && (element = element.filter(function () {\n        return this.parentNode === parent.node();\n    }));\n    element = element.data(data, keyFn);\n\n    enterSel = element.enter()\n                            .append(elemType || 'div');\n    callbacks.enter && enterSel.each(function (...params) {\n        callbacks.enter(selectElement(this), ...params);\n    });\n\n    mergeSel = enterSel.merge(element);\n    callbacks.update && mergeSel.each(function (...params) {\n        callbacks.update(selectElement(this), ...params);\n    });\n    if (selectorType === 'class') {\n        mergeSel.classed(selectorVal === '.' ? selector.substring(1, selector.length) : selector, true);\n    } else if (selectorType === 'id') {\n        mergeSel.attr('id', selector.substring(1, selector.length));\n    }\n    const exitSel = element.exit();\n\n    if (callbacks.exit) {\n        exitSel.each(function (...params) {\n            callbacks.exit(selectElement(this), ...params);\n        });\n    } else {\n        exitSel.remove();\n    }\n    return mergeSel;\n};\n\n/**\n * This function applies styles to an element\n *  @param  {Object} elem Element Selection\n * @param  {Object} styleObj Style Object to be applied\n * @return {Element} Newly Created Element\n*/\nconst applyStyle = (elem, styleObj) => {\n    Object.entries(styleObj).forEach((d) => {\n        elem.style(d[0], d[1]);\n    }, this);\n    return elem;\n};\n\n/**\n * This function appends a dom element in another element.\n * @param {HTMLElement | SVGElement} element1 The element in which to append the second element\n * @param {HTMLElement | SVGElement} element2 The element which will be appended.\n */\nconst appendElement = (element1, element2) => {\n    element1.appendChild(element2);\n};\n\n/**\n * Sets the attributes to the element.\n * @param {HTMLElement | SVGElement} element Element on which attributes will be applied\n * @param {Object} attrs Attributes which need to be applied\n */\nconst setElementAttrs = (element, attrs) => {\n    for (const key in attrs) {\n        if ({}.hasOwnProperty.call(attrs, key)) {\n            element.attr(key, attrs[key]);\n        }\n    }\n};\n\n/**\n * Sets attributes in the svg or html element\n * @param {SVGElement | HTMLElement} element The element on which attrs will be applied\n * @param {Array.<Object>} attrs Array of attributes\n * @param {string} className className of elements to select.\n * @return {SVGElement | HTMLElement} SVGElement or html element.\n */\nconst setAttrs = (element, attrs, className) => {\n    if (!(element instanceof selection)) {\n        element = selectElement(element);\n    }\n    className !== undefined ? element.selectAll(`.${className}`).each(function () {\n        setElementAttrs(select(this), attrs);\n    }) : setElementAttrs(element, attrs);\n    return element;\n};\n\n/**\n * Adds a css class to elements which passes the filter function.If filter function is not given,\n * then all elements will be applied the class.\n * @param {HTMLElement | SVGElement} element element\n * @param {string} className css class\n * @param {string} selector css selector\n * @param {Function} filterFn filter method.\n */\nconst addClass = (element, className, selector, filterFn) => {\n    select(element).selectAll(selector).each(function (data) {\n        const elem = select(this);\n        filterFn ? filterFn(data) && elem.classed(className, true) :\n                elem.classed(className, true);\n    });\n};\n\n/**\n * Removes the css class from elements which passes the filter function.If filter function is not given,\n * then all elements will be applied the class.\n * @param {HTMLElement | SVGElement} element element\n * @param {string} className css class\n * @param {string} selector css selector\n * @param {Function} filterFn filter method.\n */\nconst removeClass = (element, className, selector, filterFn) => {\n    select(element).selectAll(selector).each(function (data) {\n        const elem = select(this);\n        filterFn ? filterFn(data) && elem.classed(className, false) :\n                elem.classed(className, false);\n    });\n};\n\n/**\n * Sets styles in the svg or html element\n * @param {SVGElement | HTMLElement} element The element on which styles will be applied\n * @param {Array.<Object>} styles Array of style attributes\n * @return {SVGElement | HTMLElement} SVGElement or html element.\n */\nconst setStyles = (element, styles) => {\n    if (!(element instanceof selection)) {\n        element = selectElement(element);\n    }\n    for (const key in styles) {\n        if ({}.hasOwnProperty.call(styles, key)) {\n            element.style(key, styles[key]);\n        }\n    }\n    return element;\n};\n\n/**\n * Creates svg or html elements by binding data to the selection.Removes extra elements\n * on exit.\n * @param {Object} params Parameter object\n * @param {SVGElement | HTMLElement} params.container Container element where all elements will be appended\n * @param {string} params.selector Selector by which elements will be selected from dom\n * @param {string} params.append Append tag\n * @param {Function} params.each Function which will be executed for each data point and element.\n */\nconst createElements = (params) => {\n    const container = select(params.container);\n    let data;\n    let sel;\n\n    data = params.data;\n    if (typeof data === 'number') {\n        data = Array(data).fill().map((d, i) => i);\n    }\n    sel = container.selectAll(params.selector).data(data);\n\n    sel = container.selectAll(params.selector).filter(function () {\n        return this.parentNode === container.node();\n    }).data(params.data);\n\n    const selectionMerge = sel.enter().append(params.append).merge(sel).each(function (d, i) {\n        params.each(d, select(this), i);\n    });\n\n    selectionMerge.attr('class', params.className || '');\n    sel.exit().remove();\n};\n\n/**\n * Clips an element with given measurement. Basically it is used to hide overflowing portions\n * of any element.\n * @param {SVGElement} container svg element which needs to be clipped.\n * @param {Object} measurement Dimensions of the clipped rectangle.\n * @param {string} id Unique id of the clip element\n */\nconst clipElement = (container, measurement, id) => {\n    const clipPathElement = makeElement(select(container), 'clipPath', [1], `#${id}`);\n    const clipPathRect = makeElement(clipPathElement, 'rect', [1]);\n    clipPathRect.attr('x', measurement.x)\n                    .attr('y', measurement.x)\n                    .attr('width', measurement.width)\n                    .attr('height', measurement.height);\n    clipPathElement.attr('clip-path', `url(#${id})`);\n};\n\n/**\n * Returns the element of the corresponding classname.\n * @param {HTMLElement | SVGElement} node html or svg node element.\n * @param {string} className css class to be applied.\n * @return {HTMLElement | SVGElement} html or svg element.\n */\nconst getElementsByClassName = (node, className) => select(node).selectAll(className).nodes();\n\n/**\n * Gets the mouse position relative to an svg type of element\n * @param {SVGElement} element Any svg element like rect, circle, etc.\n * @param {Event} event Event object.\n * @return {Object} x and y position relative to the container element passed.\n */\nconst getMousePos = (element, event) => {\n    const boundingClientRect = element.getBoundingClientRect();\n    return {\n        x: event.x - boundingClientRect.x,\n        y: event.y - boundingClientRect.y\n    };\n};\n\nconst getClientPoint = (...params) => {\n    const pos = clientPoint(...params);\n    return {\n        x: pos[0],\n        y: pos[1]\n    };\n};\n\n/** This function appends a dom element in another element.\n * @param {Object} tag The tag name of the element to append\n * @param {Object} mount Mount point fo the element\n * @return {Object} selection of the appended element\n */\nconst createElement = (tag, mount) => select(mount).append(tag).node();\n\n/**\n * Gets the d3 event function\n * @return {Object} d3 event\n */\nconst getEvent = () => d3event;\n\n/**\n * Gets the d3 drag function\n * @return {Object} d3 drag\n */\nconst getD3Drag = () => d3drag;\n\nconst getSmartComputedStyle = (group, css) => {\n    let textEl;\n    const testText = 'W';\n    const mandatoryStyle = {\n        'fill-opacity': 0\n    };\n    const className = typeof css === 'string' ? css : (css instanceof Array ? css.join(' ') : undefined);\n\n    if (group.node() instanceof HTMLElement) {\n        textEl = group.append('div').html(testText);\n    } else {\n        textEl = group.append('text').text(testText);\n    }\n\n    if (className) {\n        textEl.attr('class', className);\n    } else if (typeof css === 'object') {\n        delete css['fill-opacity'];\n        mergeRecursive(mandatoryStyle, css);\n    }\n\n    textEl.style(mandatoryStyle);\n    const computedStyle = window.getComputedStyle(textEl.node());\n    const styleForSmartLabel = {\n        fontSize: computedStyle.fontSize,\n        fontFamily: computedStyle.fontFamily,\n        fontWeight: computedStyle.fontWeight,\n        fontStyle: computedStyle.fontStyle\n    };\n\n    textEl.remove();\n\n    return styleForSmartLabel;\n};\n\nconst hasTouch = () => 'ontouchstart' in document.documentElement;\n\nexport {\n    hasTouch,\n    selectElement,\n    makeElement,\n    applyStyle,\n    addClass,\n    removeClass,\n    appendElement,\n    setAttrs,\n    setStyles,\n    createElement,\n    createElements,\n    clipElement,\n    getElementsByClassName,\n    getMousePos,\n    getEvent,\n    getD3Drag,\n    getSmartComputedStyle,\n    getClientPoint\n};\n","const events = [\n    'initialized',\n    'beforeupdate',\n    'updated',\n    'beforedraw',\n    'drawn',\n    'beforeremove',\n    'removed',\n    'animationend'\n];\n\nconst compositions = [\n    'canvas',\n    'unit',\n    'layer',\n    'axis',\n    'facet-headers',\n    'legend',\n    'caption'\n];\n\nconst EVENT_LIST = [];\n\ncompositions.forEach((composition) => {\n    events.forEach((event) => {\n        EVENT_LIST.push(`${composition}.${event}`);\n    });\n});\n\nexport default EVENT_LIST;\n","import EVENT_LIST from './event-list';\nimport { createPromise } from './helper';\n\n/**\n * At first call it accepts one function\n * calling it second time accepts notification object.\n * notification object then called with first accepted function\n *\n * @param {Function} resolveFn a promise's resolve function\n * @return {Function} a function to accept notification object\n */\nconst resolver = resolveFn => notification => resolveFn(notification);\n\n/**\n * Checks if the property string is present in the source object\n *\n * @param {Object} source source object whom you want to check the property\n * @param {string} property key name that need to be checked\n * @return {boolean} returns true if the property found in the source object\n */\nconst hasOwn = (source, property) => Object.prototype.hasOwnProperty.call(source, property);\n\n/**\n * LifeCycleManager which goes as a dependendecy to a muze\n * it accepts notification from the entire library throughout\n * the exeecution life\n *\n * @export\n * @class LifeCycleManager\n */\nexport default class LifeCycleManager {\n\n    /**\n     * Creates an instance of LifeCycleManager.\n     * @memberof LifeCycleManager\n     */\n    constructor () {\n        this._eventList = EVENT_LIST;\n        this._promises = new Map();\n        this._notifiers = {};\n        this._lifeCycles = {};\n        this._unreleasedLifeCycles = {};\n        this._boot();\n    }\n\n    /**\n     * Fills all the notifiers with resolver callback\n     *\n     * @memberof LifeCycleManager\n     */\n    _boot () {\n        this._notifiers = this._eventList.reduce((acc, name) => {\n            acc[name] = resolver;\n            return acc;\n        }, {});\n        this._preparePromises();\n    }\n\n    /**\n     * Public method which gives the promise corresponding\n     * to the event name\n     *\n     * @param {string} eventName name of the event like `canvas.drawn`\n     * @return {promise} promise that is passed to the user\n     * @memberof LifeCycleManager\n     */\n    retrieve (eventName) {\n        return this._promises.get(eventName);\n    }\n\n    /**\n     * Creates a promise that will be passed to user's callback\n     *\n     * @param {string} eventName name of the event like `canvas.drawn`\n     * @return {promise} a pending promise waiting for resolve to be called\n     * @memberof LifeCycleManager\n     */\n    _makeNotifierPromise (eventName) {\n        return new Promise((resolve) => {\n            this._notifiers[eventName] = resolver(resolve);\n        });\n    }\n\n    /**\n     * Prepares the promise map with pending promises\n     * all the promises are in a pending state where their's\n     * resolve function waiting to be called with notification object\n     * @memberof LifeCycleManager\n     */\n    _preparePromises () {\n        this._eventList.forEach((eventName) => {\n            const promise = this._makeNotifierPromise(eventName);\n            this._promises.set(eventName, promise);\n            createPromise(promise, eventName, this);\n        });\n    }\n\n    /**\n     * Resolves the promise with notification object\n     *\n     * @param {string} eventName name of the event in the system\n     * @param {Object} notification notification object\n     * @param {string} notification.formalName name of the sender creating the notification\n     * @param {Object} notification.client instance or array of instances sending the notification\n     * @param {string} notification.action the stage name when the event happened like `beforedraw`\n     *\n     * @memberof LifeCycleManager\n     */\n    _resolvePromise (eventName, notification) {\n        this._notifiers[eventName](notification);\n    }\n\n    /**\n     * Public method which is being called by different\n     * subcompoents of the system at different execution atages\n     * @param {Object} notification notification object\n     * @param {string} notification.formalName name of the sender creating the notification\n     * @param {Object} notification.client instance or array of instances sending the notification\n     * @param {string} notification.action the stage name when the event happened like `beforedraw`\n     * @memberof LifeCycleManager\n     */\n    notify (notification) {\n        // get the composition name from notification\n        // or from static formalName() method\n        const composition = notification.formalName || notification.client.constructor.formalName();\n        notification.formalName = composition;\n        this._releasePromisesFromCache();\n        this._notify(composition, notification);\n    }\n\n    /**\n     * Notify user the with promsie in a callback\n     * if callback not found then cache it\n     *\n     * @param {string} composition\n     * @param {Object} notification notification object\n     * @param {string} notification.formalName name of the sender creating the notification\n     * @param {Object} notification.client instance or array of instances sending the notification\n     * @param {string} notification.action the stage name when the event happened like `beforedraw`\n     * @memberof LifeCycleManager\n     */\n    _notify (composition, notification) {\n        const stage = notification.action;\n        const eventName = `${composition}.${stage}`;\n\n        // resolves promise with the notification object\n        this._resolvePromise(eventName, notification);\n\n        // get the promise from the promise map\n        const promise = this.retrieve(eventName);\n\n        if (this._lifeCycles[composition]) {\n            if (this._lifeCycles[composition][stage]) {\n                // if user given call back exists, then call with promise\n                this._callLifeCycleCallback(composition, stage, promise);\n            } else {\n                // otherwise cache the promise\n                this._cachePromise(composition, stage, promise);\n            }\n        } else {\n            this._cachePromise(composition, stage, promise);\n        }\n    }\n\n    /**\n     * Calls the user's callback with callback\n     *\n     * @param {string} composition name of the compositon like `canvas`\n     * @param {string} stage the stage name when the event happened like `beforedraw`\n     * @param {promise} promise promise that is passed to the user\n     * @memberof LifeCycleManager\n     */\n    _callLifeCycleCallback (composition, stage, promise) {\n        const eventName = `${composition}.${stage}`;\n        this._lifeCycles[composition][stage](promise);\n        this._resetTargetPromise(eventName);\n    }\n\n    /**\n     * Try to clear the cached promsies once we have\n     * macthed callbacks from the user\n     *\n     * @memberof LifeCycleManager\n     */\n    _releasePromisesFromCache () {\n        const compositions = Object.keys(this._unreleasedLifeCycles);\n        compositions.forEach((composition) => {\n            const stages = Object.keys(this._unreleasedLifeCycles[composition]);\n            stages.forEach((stage) => {\n                if (this._lifeCycles[composition]) {\n                    if (this._lifeCycles[composition][stage]) {\n                        // take the promise from unreleased lifeCycles\n                        const promise = this._unreleasedLifeCycles[composition][stage];\n                        // call the user given callback with that promise\n                        this._callLifeCycleCallback(composition, stage, promise);\n                        // delete promise from unreleased lifeCycles\n                        delete this._unreleasedLifeCycles[composition][stage];\n                    }\n                }\n            });\n        });\n    }\n\n    /**\n     * Cache the promise in the map. This cache\n     * then get consumed if we get user callbacks\n     * @param {string} composition name of the compositon like `canvas`\n     * @param {string} stage the stage name when the event happened like `beforedraw`\n     * @param {promise} promise promise that is passed to the user\n     * @memberof LifeCycleManager\n     */\n    _cachePromise (composition, stage, promise) {\n        if (!hasOwn(this._unreleasedLifeCycles, composition)) {\n            this._unreleasedLifeCycles[composition] = {};\n        }\n\n        if (!hasOwn(this._unreleasedLifeCycles[composition], stage)) {\n            this._unreleasedLifeCycles[composition][stage] = {};\n        }\n        this._unreleasedLifeCycles[composition][stage] = promise;\n    }\n\n    /**\n     * It register's the callbacks gievn the user\n     *\n     * @param {Object} [lifeCycles={}] a object with list of callbacks\n     * @memberof LifeCycleManager\n     */\n    register (lifeCycles = {}) {\n        this._lifeCycles = lifeCycles;\n        // as we get all the callbacks, try to call them\n        // from unreleased promise map\n        this._releasePromisesFromCache();\n    }\n\n    /**\n     * Reset the promise into pending state\n     *\n     * @param {string} eventName name of the event happening\n     * @memberof LifeCycleManager\n     */\n    _resetTargetPromise (eventName) {\n        setTimeout(() => {\n            this._notifiers[eventName] = resolver;\n            this._promises.set(eventName, this._makeNotifierPromise(eventName));\n        }, 0);\n    }\n}\n","import LifeCycleManager from './lifecycle-manager';\n\nexport default LifeCycleManager;\n","/**\n * Creates a new promise when the given promise is resolved. This needs to be done so that after the lifecycle event\n * is completed, then again when the event gets completed, then a new promise gets resolved.\n *\n * @param {Promise} promise Instance of promise\n * @param {string} eventName name of event\n * @param {LifeCycleManager} context Instance of lifecyclemanager\n */\nexport const createPromise = (promise, eventName, context) => {\n    promise.then(() => {\n        const prm = context._makeNotifierPromise(eventName);\n        context._promises.set(eventName, prm);\n        createPromise(prm, eventName, context);\n    });\n};\n","import { default as DataModel } from 'datamodel';\nimport * as scales from './scales';\nimport * as colorSchemes from './color-schemes';\nimport * as STATE_NAMESPACES from './enums/namespace';\n\nconst InvalidAwareTypes = DataModel.InvalidAwareTypes;\n\nexport {\n    InvalidAwareTypes,\n    DataModel\n};\n\nexport {\n    ReservedFields,\n    CommonProps\n} from './enums';\n\nexport { STATE_NAMESPACES };\n\nexport {\n    scales,\n    colorSchemes\n};\n\nexport {\n    getNearestValue,\n    getValueParser,\n    transformColors,\n    detectColor,\n    hslToRgb,\n    rgbToHsv,\n    hexToHsv,\n    hsvToRgb,\n    escapeHTML,\n    angleToRadian,\n    generateGetterSetters,\n    getArraySum,\n    ERROR_MSG,\n    interpolator,\n    colorInterpolator,\n    numberInterpolator,\n    piecewiseInterpolator,\n    reqAnimFrame,\n    cancelAnimFrame,\n    nextAnimFrame,\n    getMax,\n    getMin,\n    getDomainFromData,\n    getUniqueId,\n    mergeRecursive,\n    unionDomain,\n    replaceCSSPrefix,\n    symbolFns,\n    defaultValue,\n    easeFns,\n    clone,\n    interpolateArray,\n    getMinPoint,\n    getMaxPoint,\n    getClosestIndexOf,\n    registerListeners,\n    Voronoi,\n    checkExistence,\n    sanitizeIP,\n    getMinDiff,\n    capitalizeFirst,\n    getWindow,\n    getQualifiedClassName,\n    Store,\n    getDependencyOrder,\n    objectIterator,\n    intSanitizer,\n    transactor,\n    enableChainedTransaction,\n    isHTMLElem,\n    isEqual,\n    isSimpleObject,\n    nextFrame,\n    filterPropagationModel,\n    getObjProp,\n    getDataModelFromIdentifiers,\n    getDataModelFromRange,\n    transposeArray,\n    toArray,\n    extendsClass,\n    concatModels,\n    assembleModelFromIdentifiers,\n    isValidValue,\n    nestCollection,\n    stack,\n    getSymbol,\n    Scales,\n    Symbols,\n    pathInterpolators,\n    hslInterpolator,\n    getSmallestDiff,\n    require,\n    formatTemporal,\n    createSelection,\n    temporalFields,\n    retrieveNearestGroupByReducers\n} from './common-utils';\n\nexport {\n    selectElement,\n    makeElement,\n    applyStyle,\n    addClass,\n    removeClass,\n    appendElement,\n    setAttrs,\n    setStyles,\n    createElement,\n    createElements,\n    clipElement,\n    getElementsByClassName,\n    getMousePos,\n    getEvent,\n    getD3Drag,\n    getSmartComputedStyle,\n    getClientPoint,\n    hasTouch\n} from './renderer-utils';\n\nexport { default as Smartlabel } from 'fusioncharts-smartlabel';\n\nexport { dataSelect, DataObject } from './DataSystem';\n\nexport { default as LifeCycleManager } from './lifecycle-manager';\n\nexport { DimensionSubtype, FieldType, MeasureSubtype, DateTimeFormatter } from 'datamodel';\n\n","export const DRAG = 'drag';\nexport const HOVER = 'hover';\nexport const SELECTIONDRAG = 'selectiondrag';\nexport const CLICK = 'click';\nexport const LONGTOUCH = 'longtouch';\nexport const TOUCHDRAG = 'touchdrag';\nexport const ALL_ACTIONS = '*';\n","const SELECTION_NEW_ENTRY = 1;\nconst SELECTION_NEW_EXIT = -1;\nconst SELECTION_NULL = 0;\nconst SELECTION_OLD_ENTRY = 2;\nconst SELECTION_OLD_EXIT = -2;\n\nexport {\n    SELECTION_NEW_ENTRY,\n    SELECTION_NEW_EXIT,\n    SELECTION_NULL,\n    SELECTION_OLD_ENTRY,\n    SELECTION_OLD_EXIT\n};\n","import SelectionSet from './selection-set';\n\nexport default SelectionSet;\n","import {\n    SELECTION_NEW_ENTRY, SELECTION_NEW_EXIT, SELECTION_NULL, SELECTION_OLD_ENTRY, SELECTION_OLD_EXIT\n} from '../enums/selection';\n/* eslint-disable guard-for-in */\n\n/**\n * This component is used to keep track of the row tuples of the data which gets added and removed. This keeps\n * information of which rows are in previous and new entry set and previous and new exit set. This is initialized by\n * {@link Firebolt}.\n *\n * @public\n *\n * @class SelectionSet\n */\nclass SelectionSet {\n    /**\n     * Creates an instance of selection set\n     *\n     * @param {Array.<string>} completeSet Set of unique ids.\n     */\n    constructor (completeSet, _volatile) {\n        this.completeSet = completeSet;\n        this._set = completeSet.reduce((obj, key) => {\n            obj[key] = SELECTION_NULL;\n            return obj;\n        }, {});\n        this._volatile = _volatile;\n        this._completeSetCount = completeSet.length;\n        this._lockedSelection = {};\n        this._resetted = true;\n    }\n\n    /**\n     * Adds a set of ids to the selection set. This also moves the other rows to exit set.\n     *\n     * @public\n     * @param {Array.<number|string>} ids Array of unique ids.\n     *\n     * @return {SelectionSet} Instance of selection set.\n     */\n    add (ids) {\n        this._resetted = false;\n\n        const set = this._set;\n        // from exitset to entryset\n        ids.forEach((i) => {\n            set[i] = SELECTION_NEW_ENTRY;\n        });\n\n        for (const key in set) {\n            if (set[key] !== SELECTION_NEW_ENTRY && set[key] !== SELECTION_OLD_ENTRY) {\n                set[key] = set[key] < 0 ? SELECTION_OLD_EXIT : SELECTION_NEW_EXIT;\n            }\n        }\n        return this;\n    }\n\n    /**\n     * Adds an array of ids to the old entry set.\n     *\n     * @param {Array.<number|string>} ids Array of unique ids\n     *\n     * @return {SelectionSet} Instance of selection set.\n     */\n    update (ids) {\n        const set = this._set;\n        // from exitset to entryset\n        ids.forEach((i) => {\n            set[i] = SELECTION_OLD_ENTRY;\n        });\n\n        return this;\n    }\n\n    /**\n     * Moves all ids which in new entry set  to old entry set.\n     *\n     * @public\n     * @param {Array.<number|string>} ids Array of unique ids\n     *\n     * @return {SelectionSet} Instance of selection set.\n     */\n    updateEntry () {\n        const set = this._set;\n\n        // from exitset to entryset\n        for (const key in set) {\n            set[key] = set[key] === SELECTION_NEW_ENTRY ? SELECTION_OLD_ENTRY : set[key];\n        }\n        return this;\n    }\n\n    /**\n     * Moves an array of ids which are in new exit set to old exit set.\n     *\n     * @public\n     *\n     * @param {Array.<number|string>} ids Array of unique ids.\n     *\n     * @return {SelectionSet} Instance of selection set.\n     */\n    updateExit () {\n        const set = this._set;\n        // from exitset to entryset\n        for (const key in set) {\n            set[key] = set[key] === SELECTION_NEW_EXIT ? SELECTION_OLD_EXIT : set[key];\n        }\n        return this;\n    }\n\n    /**\n     * Removes an array of ids from the selection set. It also moves the remaining row ids to entry set.\n     *\n     * @public\n     * @param {Array.<string>} ids Array of unique ids\n     *\n     * @return {SelectionSet}  Instance of selection set\n     */\n    remove (ids) {\n        this._resetted = false;\n\n        const set = this._set;\n        ids.forEach((i) => {\n            set[i] = SELECTION_NEW_EXIT;\n        });\n\n        for (const key in set) {\n            if (set[key] !== SELECTION_NEW_EXIT && set[key] !== SELECTION_OLD_EXIT) {\n                set[key] = set[key] === 0 ? SELECTION_NEW_ENTRY : SELECTION_OLD_ENTRY;\n            }\n        }\n\n        return this;\n    }\n\n    getSets () {\n        const set = this._set;\n        const retObj = {\n            entrySet: [[], []],\n            exitSet: [[], []],\n            completeSet: []\n        };\n\n        for (const key in set) {\n            if (set[key] > 0) {\n                set[key] === SELECTION_OLD_ENTRY && retObj.entrySet[0].push(key);\n                set[key] === SELECTION_NEW_ENTRY && retObj.entrySet[1].push(key);\n            } else if (set[key] < 0) {\n                set[key] === SELECTION_OLD_EXIT && retObj.exitSet[0].push(key);\n                set[key] === SELECTION_NEW_EXIT && retObj.exitSet[1].push(key);\n            }\n            retObj.completeSet.push(key);\n        }\n\n        ['entrySet', 'exitSet'].forEach((type) => {\n            retObj[type] = retObj[type].map(e => e.map(Number));\n        });\n        retObj.completeSet = retObj.completeSet.map(Number);\n\n        return retObj;\n    }\n\n    /**\n     * Resets an array of ids in the selection set to initial state. It sets the value of every unique id value to\n     * null in the selection set which means they are neither in entry set nor in exit set. If no ids are passed,\n     * then it resets all the ids to null.\n     *\n     * @public\n     *\n     * @param {Array} ids Array of unique ids.\n     * @return {SelectionSet} Instance of selection set.\n     */\n    reset (ids) {\n        const set = this._set;\n        if (ids) {\n            ids.forEach((i) => {\n                set[i] = SELECTION_NULL;\n            });\n        } else {\n            const lockedSel = this._lockedSelection;\n            for (const key in set) {\n                if (!(key in lockedSel)) {\n                    set[key] = SELECTION_NULL;\n                }\n            }\n        }\n        this._resetted = true;\n        return this;\n    }\n\n    /**\n     * Gets the set of ids which are added in the selection set.\n     *\n     * @public\n     *\n     * @return {Array.<string>} Array of unique ids\n     */\n    getEntrySet () {\n        const set = this._set;\n        const addSet = [];\n\n        for (const key in set) {\n            set[key] === SELECTION_NEW_ENTRY && addSet.push(key);\n        }\n\n        return addSet;\n    }\n\n    /**\n     * Returns a set of unique ids which are already present in entry set.\n     *\n     * @public\n     * @param {Array} addSet Array of unique ids which are added\n     *\n     * @return {Array} Array of unique ids which are already in old entry set or new entry set\n     */\n    getExistingEntrySet (addSet) {\n        const set = this._set;\n        return addSet.filter(d => set[d] === SELECTION_NEW_ENTRY || set[d] === SELECTION_OLD_ENTRY);\n    }\n\n    /**\n     * Returns a set of unique ids which are already present in exit set.\n     *\n     * @public\n     * @param {Array} addSet Array of unique ids which are added\n     *\n     * @return {Array} Array of unique ids which are already in old exit set or new exit set\n     */\n    getExistingExitSet (removeSet) {\n        const set = this._set;\n        return removeSet.filter(d => set[d] === SELECTION_NEW_EXIT || set[d] === SELECTION_OLD_EXIT);\n    }\n\n    /**\n     * Gets the set of ids which are added in the selection set.\n     * @return {Array.<string>} Array of unique ids\n     */\n    getOldEntry () {\n        const set = this._set;\n        const updateSet = [];\n\n        for (const key in set) {\n            set[key] === SELECTION_OLD_ENTRY && updateSet.push(key);\n        }\n        return updateSet;\n    }\n\n    /**\n     * Gets the set of ids which are added in the selection set.\n     * @return {Array.<string>} Array of unique ids\n     */\n    getOldExit () {\n        const set = this._set;\n        const updateSet = [];\n\n        for (const key in set) {\n            set[key] === SELECTION_OLD_EXIT && updateSet.push(key);\n        }\n\n        return updateSet;\n    }\n\n    /**\n     * Gets the array of ids which are in the exit set.\n     *\n     * @public\n     * @return {Array.<string>} Array of unique ids\n     */\n    getExitSet () {\n        const set = this._set;\n        const removeSet = [];\n\n        for (const key in set) {\n            set[key] === SELECTION_NEW_EXIT && removeSet.push(key);\n        }\n        return removeSet;\n    }\n\n    /**\n     * Gets all the ids which are either in exit or entry set.\n     *\n     * @public\n     * @return {Array} Array of unique ids\n     */\n    getCompleteSet () {\n        const set = this._set;\n        const completeSet = [];\n\n        for (const key in set) {\n            completeSet.push(key);\n        }\n\n        return completeSet;\n    }\n\n    getCompleteSetCount () {\n        return this._completeSetCount;\n    }\n\n    resetted () {\n        return this._resetted;\n    }\n\n    /**\n     * Swaps the add set and remove set in the selection set.\n     * @return {SelectionSet} Instance of selection set.\n     */\n    toggle () {\n        const set = this._set;\n\n        for (const key in set) {\n            if (set[key] === SELECTION_NEW_ENTRY) {\n                set[key] = SELECTION_NEW_EXIT;\n            } else if (set[key] === SELECTION_NEW_EXIT) {\n                set[key] = SELECTION_NEW_ENTRY;\n            } else if (set[key] === SELECTION_OLD_ENTRY) {\n                set[key] = SELECTION_OLD_EXIT;\n            } else {\n                set[key] = SELECTION_OLD_ENTRY;\n            }\n        }\n\n        return this;\n    }\n}\n\nexport default SelectionSet;\n","import { clone } from 'muze-utils';\nimport * as SELECTION from '../enums/selection';\n\nexport const initializeSideEffects = (context, sideEffects) => {\n    const sideEffectsMap = context._sideEffects;\n    const config = context.config();\n    sideEffects = sideEffects instanceof Array ? sideEffects : Object.values(sideEffects);\n    sideEffects.forEach((SideEffect) => {\n        const formalName = SideEffect.formalName();\n        const sideEffectInstance = sideEffectsMap[formalName];\n        sideEffectsMap[formalName] = sideEffectInstance || new SideEffect(context);\n        const sideEffectConf = config[formalName];\n        sideEffectConf && sideEffectsMap[formalName].config(sideEffectConf);\n    });\n    return sideEffectsMap;\n};\n\nexport const initializeBehaviouralActions = (context, actions) => {\n    const dispatchableBehaviours = {};\n\n    actions = actions instanceof Array ? actions : Object.values(actions);\n    actions.forEach((Action) => {\n        dispatchableBehaviours[Action.formalName()] = new Action(context);\n    });\n    return dispatchableBehaviours;\n};\n\nexport const initializePhysicalActions = (context, actions) => {\n    const physicalActions = {};\n\n    for (const name in actions) {\n        if (!({}).hasOwnProperty.call(name, actions)) {\n            physicalActions[name] = actions[name](context);\n        }\n    }\n    return physicalActions;\n};\n\nexport const changeSideEffectAvailability = (context, fn, toEnable) => {\n    const sideEffects = context.sideEffects();\n    for (const key in sideEffects) {\n        if ({}.hasOwnProperty.call(sideEffects, key)) {\n            let change = true;\n            if (fn && fn(key) === false) {\n                change = false;\n            }\n            if (change) {\n                toEnable ? sideEffects[key].enable() : sideEffects[key].disable();\n            }\n        }\n    }\n};\n\nexport const getMergedSet = set => [...new Set([...set[0], ...set[1]])];\n\nexport const getSourceFields = (propagationInf, criteria = {}) => {\n    const sourceIdentifiers = propagationInf.sourceIdentifiers;\n    let sourceFields;\n    if (sourceIdentifiers) {\n        sourceFields = sourceIdentifiers.getSchema().map(d => d.name);\n    } else if (criteria instanceof Array) {\n        sourceFields = criteria[0];\n    } else {\n        sourceFields = Object.keys(criteria || {});\n    }\n    return sourceFields;\n};\n\nconst conditionsMap = {\n    newEntry: [SELECTION.SELECTION_NEW_ENTRY],\n    oldEntry: [SELECTION.SELECTION_OLD_ENTRY],\n    mergedEnter: [SELECTION.SELECTION_NEW_ENTRY, SELECTION.SELECTION_OLD_ENTRY],\n    newExit: [SELECTION.SELECTION_NEW_EXIT],\n    oldExit: [SELECTION.SELECTION_OLD_EXIT],\n    mergedExit: [SELECTION.SELECTION_NEW_EXIT, SELECTION.SELECTION_OLD_EXIT],\n    complete: []\n};\n\nexport const getModelFromSet = (type, model, set) => {\n    if (model) {\n        return model.select((fields, i) =>\n           (conditionsMap[type].some(condition => set[i] === condition)), {\n               saveChild: false\n           });\n    }\n    return null;\n};\n\nexport const getSetInfo = (type, set, config) => {\n    let model = null;\n    const filteredDataModel = config.filteredDataModel;\n    const selectionSet = config.selectionSet;\n    if (!config.propagationData) {\n        if (selectionSet.resetted()) {\n            model = null;\n        } else {\n            model = getModelFromSet(type, config.dataModel, config.selectionSet._set);\n        }\n    } else if (filteredDataModel) {\n        model = type === 'mergedEnter' ? filteredDataModel[0] : filteredDataModel[1];\n    }\n    return {\n        uids: set,\n        length: set.length,\n        model\n    };\n};\n\nexport const getSideEffects = (behaviour, behaviourEffectMap) => {\n    const sideEffects = [];\n    for (const key in behaviourEffectMap) {\n        const behaviours = key.split(',');\n        const found = behaviours.some(d => d === behaviour);\n        if (found) {\n            sideEffects.push({\n                effects: behaviourEffectMap[key],\n                behaviours\n            });\n        }\n    }\n    return sideEffects;\n};\n\nexport const unionSets = (context, behaviours) => {\n    let combinedSet = {};\n    const models = {\n        mergedEnter: null,\n        mergedExit: null\n    };\n    behaviours.forEach((behaviour) => {\n        const entryExitSet = context._entryExitSet[behaviour];\n        if (entryExitSet) {\n            combinedSet = Object.assign(combinedSet, clone(entryExitSet));\n            ['mergedEnter', 'mergedExit'].forEach((type) => {\n                const model = entryExitSet[type].model;\n                let existingModel = models[type];\n                if (!existingModel) {\n                    existingModel = models[type] = model;\n                } else if (`${model.getSchema().map(d => d.name).sort()}` ===\n                    `${existingModel.getSchema().map(d => d.name).sort()}`) {\n                    existingModel = models[type] = model.union(existingModel);\n                } else {\n                    existingModel = model;\n                }\n                combinedSet[type].model = existingModel;\n            });\n        }\n    });\n    return combinedSet;\n};\n","import {\n    mergeRecursive,\n    hasTouch,\n    filterPropagationModel,\n    FieldType,\n    selectElement,\n    isSimpleObject\n} from 'muze-utils';\nimport { ALL_ACTIONS } from './enums/actions';\nimport SelectionSet from './selection-set';\nimport {\n    initializeBehaviouralActions,\n    initializeSideEffects,\n    changeSideEffectAvailability,\n    initializePhysicalActions,\n    unionSets,\n    getSideEffects\n} from './helper';\n\n/**\n * This class is responsible for dispatching behavioural actions and side effects. It also keeps the information of\n * registered physical actions, behavioural actions and side effects. Also, it keeps the map of physical and behavioural\n * actions and behavioural actions and side effects. Whenever any behavioural action is dispatched, it also propagates\n * the rows which got affected to the other datamodels. This class is initialized by {@link VisualUnit} and legend to\n * manage it's interaction.\n *\n * @public\n * @class Firebolt\n * @module Firebolt\n */\nexport default class Firebolt {\n    constructor (context, actions, sideEffects, behaviourEffectMap) {\n        this.context = context;\n        this._sideEffectDefinitions = {};\n        this._sideEffects = {};\n        this._propagationInf = {};\n        this._actions = {\n            behavioural: {},\n            physical: {}\n        };\n        this._selectionSet = {};\n        this._volatileSelectionSet = {};\n        this._propagationFields = {};\n        this._sourceSideEffects = {\n            selectionBox: () => false\n        };\n        this._propagationBehaviourMap = {};\n        this._sourceBehaviours = {};\n        this._actionBehaviourMap = {};\n        this._config = {};\n        this._behaviourEffectMap = {};\n        this._entryExitSet = {};\n        this._actionHistory = {};\n        this._queuedSideEffects = {};\n\n        this.mapSideEffects(behaviourEffectMap);\n        this.registerBehaviouralActions(actions.behavioural);\n        this.registerSideEffects(sideEffects);\n        this.registerPhysicalBehaviouralMap(actions.physicalBehaviouralMap);\n        this.registerPhysicalActions(actions.physical);\n    }\n\n    config (...config) {\n        if (config.length) {\n            this._config = mergeRecursive(this._config, config[0]);\n            return this;\n        }\n        return this._config;\n    }\n\n    mapSideEffects (behEffectMap) {\n        const behaviourEffectMap = this._behaviourEffectMap;\n        for (const key in behEffectMap) {\n            if ({}.hasOwnProperty.call(behEffectMap, key)) {\n                const sideEffects = behEffectMap[key] || [];\n                let preventDefaultActions = false;\n                let effectNames;\n                if (isSimpleObject(sideEffects)) {\n                    effectNames = sideEffects.effects;\n                    preventDefaultActions = sideEffects.preventDefaultActions;\n                } else {\n                    effectNames = sideEffects;\n                }\n                !behaviourEffectMap[key] && (behaviourEffectMap[key] = []);\n                this._behaviourEffectMap[key] = [...new Set(preventDefaultActions ? effectNames :\n                    [...behaviourEffectMap[key], ...effectNames])];\n            }\n        }\n        return this;\n    }\n\n    registerBehaviouralActions (actions) {\n        const behaviours = initializeBehaviouralActions(this, actions);\n        this.prepareSelectionSets(behaviours);\n        Object.assign(this._actions.behavioural, behaviours);\n        return this;\n    }\n\n    prepareSelectionSets () {\n        return this;\n    }\n\n    registerSideEffects (sideEffects) {\n        for (const key in sideEffects) {\n            this._sideEffectDefinitions[sideEffects[key].formalName()] = sideEffects[key];\n        }\n        this.initializeSideEffects();\n        return this;\n    }\n\n    applySideEffects (sideEffects, selectionSet, payload) {\n        const sideEffectStore = this.sideEffects();\n        const actionHistory = this._actionHistory;\n        const queuedSideEffects = this._queuedSideEffects;\n        sideEffects.forEach((sideEffect) => {\n            let options;\n            let name;\n            const effects = sideEffect.effects;\n            const behaviours = sideEffect.behaviours;\n            const combinedSet = unionSets(this, behaviours, selectionSet);\n            effects.forEach((effect) => {\n                if (typeof effect === 'object') {\n                    name = effect.name;\n                    options = effect.options;\n                } else {\n                    name = effect;\n                }\n\n                const sideEffectInstance = sideEffectStore[name];\n                if (sideEffectInstance.isEnabled()) {\n                    if (!sideEffectInstance.constructor.mutates() &&\n                        Object.values(actionHistory).some(d => d.isMutableAction)) {\n                        queuedSideEffects[`${name}-${behaviours.join()}`] = {\n                            name,\n                            params: [combinedSet, payload, options]\n                        };\n                    } else {\n                        this.dispatchSideEffect(name, combinedSet, payload, options);\n                    }\n                }\n            });\n        });\n        return this;\n    }\n\n    dispatchSideEffect (name, selectionSet, payload, options = {}) {\n        const sideEffectStore = this.sideEffects();\n        const sideEffect = sideEffectStore[name];\n        let disable = false;\n        if (options.filter && options.filter(sideEffect)) {\n            disable = true;\n        }\n        !disable && sideEffectStore[name].apply(selectionSet, payload, options);\n    }\n\n    registerPropagationBehaviourMap (map) {\n        this._propagationBehaviourMap = Object.assign(this._propagationBehaviourMap, map || {});\n        return this;\n    }\n\n    dispatchBehaviour (behaviour, payload, propagationInfo = {}) {\n        const propagate = propagationInfo.propagate !== undefined ? propagationInfo.propagate : true;\n        const behaviouralActions = this._actions.behavioural;\n        const action = behaviouralActions[behaviour];\n        const behaviourEffectMap = this._behaviourEffectMap;\n        const sideEffects = getSideEffects(behaviour, behaviourEffectMap);\n        this._propagationInf = propagationInfo;\n\n        if (action) {\n            const selectionSet = action.dispatch(payload);\n            const propagationSelectionSet = this.getPropagationSelectionSet(selectionSet);\n            this._entryExitSet[behaviour] = propagationSelectionSet;\n            const shouldApplySideEffects = this.shouldApplySideEffects(propagate);\n\n            if (propagate) {\n                this.propagate(behaviour, payload, selectionSet.find(d => d.sourceSelectionSet), sideEffects);\n            }\n            if (shouldApplySideEffects) {\n                const applicableSideEffects = this.getApplicableSideEffects(sideEffects, payload, propagationInfo);\n                this.applySideEffects(applicableSideEffects, propagationSelectionSet, payload);\n            }\n        }\n\n        return this;\n    }\n\n    getPropagationSelectionSet (selectionSet) {\n        return selectionSet.find(d => !d.sourceSelectionSet);\n    }\n\n    shouldApplySideEffects () {\n        return true;\n    }\n\n    changeBehaviourStateOnPropagation (behaviour, value) {\n        if (value instanceof Function) {\n            this._sourceBehaviours[behaviour] = value;\n        } else {\n            this._sourceBehaviours[behaviour] = () => value;\n        }\n        return this;\n    }\n\n    changeSideEffectStateOnPropagation (sideEffect, value) {\n        if (value instanceof Function) {\n            this._sourceSideEffects[sideEffect] = value;\n        } else {\n            this._sourceSideEffects[sideEffect] = () => value;\n        }\n    }\n\n    propagate () {\n        return this;\n    }\n\n    sideEffects (...sideEffects) {\n        if (sideEffects.length) {\n            this._sideEffects = sideEffects[0];\n            return this;\n        }\n        return this._sideEffects;\n    }\n\n    enableSideEffects (fn) {\n        changeSideEffectAvailability(this, fn, true);\n        return this;\n    }\n\n    disableSideEffects (fn) {\n        changeSideEffectAvailability(this, fn, false);\n        return this;\n    }\n\n    dissociateBehaviour (behaviour, physicalAction) {\n        const actionBehaviourMap = this._actionBehaviourMap;\n        for (const key in actionBehaviourMap) {\n            if (key === physicalAction) {\n                const behaviourMap = actionBehaviourMap[key];\n                behaviourMap.behaviours = behaviourMap.behaviours.filter(d => d !== behaviour);\n                this.mapActionsAndBehaviour(key);\n            }\n        }\n\n        return this;\n    }\n\n    dissociateSideEffect (sideEffect, behaviour) {\n        const behaviourEffectMap = this._behaviourEffectMap;\n        behaviourEffectMap[behaviour] = behaviourEffectMap[behaviour].filter(d => (d.name || d) !== sideEffect);\n        return this;\n    }\n\n    getApplicableSideEffects (sideEffects) {\n        return sideEffects;\n    }\n\n    attachPropagationListener (dataModel) {\n        dataModel.unsubscribe('propagation');\n        dataModel.on('propagation', this.onDataModelPropagation());\n        return this;\n    }\n\n    onDataModelPropagation () {\n        return (propValue) => {\n            const payload = propValue.payload;\n            const action = payload.action;\n\n            this.dispatchBehaviour(action, payload, {\n                propagate: false\n            });\n        };\n    }\n\n    createSelectionSet (uniqueIds, behaviouralActions) {\n        const behaviours = behaviouralActions || this._actions.behavioural;\n        const selectionSet = this._selectionSet;\n        const volatileSelectionSet = this._volatileSelectionSet;\n\n        for (const key in behaviours) {\n            if ({}.hasOwnProperty.call(behaviours, key)) {\n                selectionSet[key] = new SelectionSet(uniqueIds);\n                volatileSelectionSet[key] = new SelectionSet(uniqueIds, true);\n            }\n        }\n        this._volatileSelectionSet = volatileSelectionSet;\n        this.selectionSet(selectionSet);\n        return this;\n    }\n\n    selectionSet (...selectionSet) {\n        if (selectionSet.length) {\n            this._selectionSet = selectionSet[0];\n            return this;\n        }\n        return this._selectionSet;\n    }\n\n    initializeSideEffects () {\n        const sideEffectDefinitions = this._sideEffectDefinitions;\n        this.sideEffects(initializeSideEffects(this, sideEffectDefinitions));\n        return this;\n    }\n\n    registerPhysicalActions (actions) {\n        const initedActions = initializePhysicalActions(this, actions);\n        Object.assign(this._actions.physical, initedActions);\n        return this;\n    }\n\n    /**\n     * Allows to propagate the datamodel with only the supplied fields. When propagation is done, then the fields\n     * which are supplied for the specified behavioural action is propagated.\n     *\n     * @public\n     *\n     * @param {string} action Name of behavioural action. If '*' is specified, then for all behavioural actions it is\n     * applied.\n     * @param {Array} fields Array of field names which will be propagated.\n     * @param {boolean} append If true, then it is appended to the existing propagation data model fields else only\n     * those fields are projected from propagation data model and propagated.\n     *\n     * @return {Firebolt} Instance of firebolt\n     */\n    propagateWith (action, fields, append = false) {\n        const behaviouralActions = this._actions.behavioural;\n        if (fields.length) {\n            if (action === ALL_ACTIONS) {\n                for (const key in behaviouralActions) {\n                    this._propagationFields[key] = {\n                        fields,\n                        append\n                    };\n                }\n            } else {\n                this._propagationFields[action] = {\n                    fields,\n                    append\n                };\n            }\n            return this;\n        }\n        return this._propagationFields;\n    }\n\n    /**\n     * Map actions and behaviours\n     * @return {Firebolt} Firebolt instance\n     */\n    mapActionsAndBehaviour (phyAction) {\n        const initedPhysicalActions = this._actions.physical;\n        const map = this._actionBehaviourMap;\n\n        for (const action in map) {\n            if (!({}).hasOwnProperty.call(action, map) && action === (phyAction || action)) {\n                let target;\n                const mapObj = map[action];\n                target = mapObj.target;\n                const touch = mapObj.touch;\n                if (!target) {\n                    target = this.context.getDefaultTargetContainer();\n                }\n                const bind = hasTouch() ? touch === true || touch === undefined : !touch;\n                bind && this.bindActionWithBehaviour(initedPhysicalActions[action],\n                    target, mapObj.behaviours);\n            }\n        }\n        return this;\n    }\n\n    registerPhysicalBehaviouralMap (map) {\n        this._actionBehaviourMap = mergeRecursive(this._actionBehaviourMap, map);\n        return this;\n    }\n\n    /**\n     * Binds a target element with an action.\n     *\n     * @param {Function} action Action method\n     * @param {string} target Class name of element\n     * @param {Array} behaviourList Array of behaviours\n     * @return {FireBolt} Instance of firebolt\n     */\n    bindActionWithBehaviour (action, targets, behaviourList) {\n        if (typeof (targets) === 'string') {\n            targets = [targets];\n        }\n        targets.forEach((target) => {\n            const mount = this.context.mount();\n            const nodes = target.node instanceof Function ? target : selectElement(mount).selectAll(target);\n            if (!nodes.empty()) {\n                if (nodes instanceof Array) {\n                    nodes.forEach((node) => {\n                        action(selectElement(node), behaviourList);\n                    });\n                } else {\n                    action(nodes, behaviourList);\n                }\n            }\n        });\n        return this;\n    }\n\n    getPropagationInf () {\n        return this._propagationInf;\n    }\n\n    getAddSetFromCriteria (criteria, propagationInf = {}) {\n        const context = this.context;\n        const filteredDataModel = propagationInf.data ? propagationInf.data :\n            context.getDataModelFromIdentifiers(criteria, 'all');\n        const xFields = context.fields().x || [];\n        const yFields = context.fields().y || [];\n        const xMeasures = xFields.every(field => field.type() === FieldType.MEASURE);\n        const yMeasures = yFields.every(field => field.type() === FieldType.MEASURE);\n        return {\n            model: filteredDataModel,\n            uids: criteria === null ? null : (propagationInf.data ? filterPropagationModel(this.getFullData(),\n                propagationInf.data[0], xMeasures && yMeasures).getData().uids : filteredDataModel[0].getData().uids)\n        };\n    }\n\n    getSelectionSets (action) {\n        const sourceId = this.context.id();\n        const propagationInf = this._propagationInf || {};\n        const propagationSource = propagationInf.sourceId;\n        let applicableSelectionSets = [];\n        if (propagationSource !== sourceId) {\n            applicableSelectionSets = [this._volatileSelectionSet[action]];\n        }\n\n        if (propagationSource) {\n            applicableSelectionSets.push(this.selectionSet()[action]);\n        }\n        return applicableSelectionSets;\n    }\n\n    getFullData () {\n        return this.context.data();\n    }\n\n    resetted () {\n        return this._resetted;\n    }\n\n    /**\n     * Returns the entry and exit set information of the specified behavioural action.\n     *\n     * @public\n     *\n     * @param {string} behaviour Name of behavioural action.\n     *\n     * @return {Object} Entry exit set information.\n     */\n    getEntryExitSet (behaviour) {\n        return this._entryExitSet[behaviour];\n    }\n}\n","import { getSetInfo, getMergedSet, getSourceFields } from '../../helper';\n\n/**\n * This is the base class has all the common functionalities needed for all behavioural actions. Any other behavioural\n * action needs to extend this class.\n *\n * @public\n * @class GenericBehaviour\n * @module GenericBehaviour\n */\nexport default class GenericBehaviour {\n    constructor (firebolt) {\n        this.firebolt = firebolt;\n        this._enabled = true;\n    }\n\n    /**\n     * Returns entry and exit set information. This method is called by firebolt when ```dispatchBehaviour``` is called\n     * dynamically or when any physical action is triggered on the chart.\n     *\n     * @param {Object} payload Payload information.\n     * @param {Object|Array} payload.criteria Identifiers of data interacted with.\n     *\n     * @return {Array} Entry and exit set information.\n     */\n    dispatch (payload) {\n        const criteria = payload.criteria;\n        const firebolt = this.firebolt;\n        const formalName = this.constructor.formalName();\n        const selectionSets = firebolt.getSelectionSets(formalName);\n        const {\n            model: filteredDataModel,\n            uids\n        } = this.firebolt.getAddSetFromCriteria(criteria, this.firebolt.getPropagationInf());\n        const entryExitSets = selectionSets.map((selectionSet) => {\n            this.setSelectionSet(uids, selectionSet);\n            return this.getEntryExitSet(selectionSet, filteredDataModel, payload);\n        });\n\n        return entryExitSets;\n    }\n\n    /**\n     * Updates the selection set by adding uids to the instance of {@link SelectionSet} or removing them.\n     * {@link SelectionSet} keeps the information of which rows are in the entry set and exit set.\n     *\n     * @public\n     * @param {Array} addSet Array of row ids which got affected during interaction.\n     * @param {SelectionSet} selectionSet Instance of selection set.\n     *\n     * @return {GenericBehaviour} Instance of behaviour.\n     */\n    setSelectionSet () {\n        return this;\n    }\n\n    getEntryExitSet (selectionSet, filteredDataModel, payload) {\n        const {\n            entrySet,\n            exitSet,\n            completeSet\n        } = selectionSet.getSets();\n        const propagationInf = this.firebolt.getPropagationInf();\n        const dataModel = this.firebolt.getFullData();\n        const setConfig = {\n            isSourceFieldPresent: propagationInf.isSourceFieldPresent,\n            dataModel,\n            filteredDataModel,\n            propagationData: propagationInf.data,\n            selectionSet\n        };\n\n        return {\n            entrySet: [getSetInfo('oldEntry', entrySet[0], setConfig),\n                getSetInfo('newEntry', entrySet[1], setConfig)],\n            exitSet: [getSetInfo('oldEntry', exitSet[0], setConfig),\n                getSetInfo('newExit', exitSet[1], setConfig)],\n            mergedEnter: getSetInfo('mergedEnter', getMergedSet(entrySet), setConfig),\n            mergedExit: getSetInfo('mergedExit', getMergedSet(exitSet), setConfig),\n            completeSet: getSetInfo('complete', completeSet, setConfig),\n            isSourceFieldPresent: propagationInf.isSourceFieldPresent,\n            fields: getSourceFields(propagationInf, payload.criteria),\n            sourceSelectionSet: selectionSet._volatile === true\n        };\n    }\n\n    static mutates () {\n        return false;\n    }\n\n    enable () {\n        this._enabled = true;\n    }\n\n    disable () {\n        this._enabled = false;\n    }\n\n    isEnabled () {\n        return this._enabled;\n    }\n}\n\n","import GenericBehaviour from './generic';\nimport { getMergedSet } from '../../helper';\nimport * as SELECTION from '../../enums/selection';\n\nexport default class VolatileBehaviour extends GenericBehaviour {\n    setSelectionSet (addSet, selectionSet) {\n        if (addSet === null) {\n            selectionSet.reset();\n        } else if (addSet.length) {\n                // new add set\n            const existingAddSet = addSet.filter(d => selectionSet._set[d] === SELECTION.SELECTION_NEW_ENTRY\n                    || selectionSet._set[d] === SELECTION.SELECTION_OLD_ENTRY);\n            selectionSet.updateExit();\n            const { entrySet } = selectionSet.getSets();\n            selectionSet.reset(getMergedSet(entrySet));\n            selectionSet.add(addSet);\n            selectionSet.update(existingAddSet);\n        } else {\n            selectionSet.remove(selectionSet.getCompleteSet());\n        }\n    }\n}\n","export const BRUSH = 'brush';\nexport const HIGHLIGHT = 'highlight';\nexport const TOOLTIP = 'tooltip';\nexport const FILTER = 'filter';\nexport const SELECT = 'select';\n","import VolatileBehaviour from './volatile';\nimport { HIGHLIGHT } from '../../enums/behaviours';\n\nexport default class HighlightBehaviour extends VolatileBehaviour {\n    static formalName () {\n        return HIGHLIGHT;\n    }\n}\n","import VolatileBehaviour from './volatile';\nimport * as BEHAVIOURNAMES from '../../enums/behaviours';\n\n/**\n * This is the behaviour for brushing a region on the chart. It accepts a payload\n * which contains the x and y range of the data and other configuration. It will then\n * create a selection box from the range and select the points which fall within the range.\n */\nexport default class BrushBehaviour extends VolatileBehaviour {\n    static formalName () {\n        return BEHAVIOURNAMES.BRUSH;\n    }\n}\n","import VolatileBehaviour from './volatile';\nimport { FILTER } from '../../enums/behaviours';\n\nexport default class FilterBehaviour extends VolatileBehaviour {\n    static formalName () {\n        return FILTER;\n    }\n\n    static mutates () {\n        return true;\n    }\n}\n","import GenericBehaviour from './generic';\nimport { getMergedSet } from '../../helper';\nimport * as SELECTION from '../../enums/selection';\n\nexport default class PersistentBehaviour extends GenericBehaviour {\n    setSelectionSet (addSet, selectionSet) {\n        if (addSet === null) {\n            selectionSet.reset();\n        } else if (addSet.length) {\n            const propagationInf = this.firebolt.getPropagationInf();\n            // new add set\n            const existingAddSet = addSet.filter(d => selectionSet._set[d] === SELECTION.SELECTION_NEW_ENTRY\n                || selectionSet._set[d] === SELECTION.SELECTION_OLD_ENTRY);\n            if (propagationInf.propagate === false) {\n                selectionSet.updateExit();\n                const { entrySet } = selectionSet.getSets();\n                selectionSet.reset(getMergedSet(entrySet));\n                selectionSet.add(addSet);\n                selectionSet.update(existingAddSet);\n            } else {\n                // existing add set\n                if (existingAddSet.length) {\n                    selectionSet.updateExit();\n                    selectionSet.remove(existingAddSet);\n                } else {\n                    selectionSet.updateEntry();\n                    selectionSet.add(addSet);\n                }\n                const { exitSet } = selectionSet.getSets();\n                const mergedExitSet = getMergedSet(exitSet);\n                const completeSetCount = selectionSet.getCompleteSet().length;\n                if (mergedExitSet.length === completeSetCount) {\n                    selectionSet.reset();\n                }\n            }\n        } else {\n            selectionSet.remove(selectionSet.getCompleteSet());\n        }\n\n        return this;\n    }\n}\n","import PersistentBehaviour from './persistent';\nimport { SELECT } from '../../enums/behaviours';\n\nexport default class SelectBehaviour extends PersistentBehaviour {\n    static formalName () {\n        return SELECT;\n    }\n}\n\n","import { DimensionSubtype, MeasureSubtype } from 'muze-utils';\n/**\n * Gets the drag action configuration\n * @param {VisualUnit} instance instance of visual unit\n * @param {Object} config x y positions\n * @return {Object} Payload of behaviour\n*/\n/* istanbul ignore next */ const getDragActionConfig = (sourceInfo, config, fieldsConfig) => {\n    if (!(sourceInfo.axes.x || sourceInfo.axes.y)) {\n        return {\n            criteria: null\n        };\n    }\n\n    const axes = sourceInfo.axes;\n    const xAxis = axes.x[0];\n    const yAxis = axes.y[0];\n    const axisFields = sourceInfo.fields;\n    const xField = axisFields.x[0].getMembers()[0];\n    const yField = axisFields.y[0].getMembers()[0];\n    const xFieldType = fieldsConfig[xField].def.subtype;\n    const yFieldType = fieldsConfig[yField].def.subtype;\n    const dimensions = {};\n    const stPos = config.startPos;\n    const endPos = config.endPos;\n\n    if (stPos.x === endPos.x && stPos.y === endPos.y) {\n        return {\n            criteria: null\n        };\n    }\n\n    const dragDim = xFieldType === MeasureSubtype.CONTINUOUS ? (yFieldType === MeasureSubtype.CONTINUOUS ?\n        ['x', 'y'] : ['y']) : ['x'];\n    const criteria = {};\n    const isXDimension = xFieldType === DimensionSubtype.CATEGORICAL;\n    const isYDimension = yFieldType === DimensionSubtype.CATEGORICAL;\n    const xRange = xAxis.invertExtent(stPos.x, endPos.x);\n    const yRange = yAxis.invertExtent(stPos.y, endPos.y);\n    const selectedDomains = {\n        x: stPos.x === endPos.x ? [] : (isXDimension ? xRange : xRange.sort((a, b) => a - b)),\n        y: stPos.y === endPos.y ? [] : (isYDimension ? yRange : yRange.sort((a, b) => a - b))\n    };\n    const rangeObj = {};\n\n    if (dragDim.length === 2) {\n        rangeObj[xField] = selectedDomains.x;\n        rangeObj[yField] = selectedDomains.y;\n        if (xField === yField) {\n            const xdom = selectedDomains.x;\n            const ydom = selectedDomains.y;\n            const min = xdom[0] > ydom[0] ? ydom : xdom;\n            const max = min === ydom ? xdom : ydom;\n            if (min[1] < max[0]) {\n                rangeObj[xField] = [];\n            } else {\n                rangeObj[xField] = [max[0], min[1] < max[1] ? min[1] : max[1]];\n            }\n            dimensions.x = [stPos.x, endPos.x];\n            dimensions.y = [stPos.y, endPos.y];\n        }\n    } else {\n        criteria[dragDim[0]] = selectedDomains[dragDim[0]] || [];\n\n        if (dragDim[0] === 'x') {\n            rangeObj[xField] = criteria.x;\n            if (xFieldType === DimensionSubtype.CATEGORICAL) {\n                dimensions.x = (config.snap && stPos.x !== endPos.x) ? xAxis.getNearestRange(stPos.x, endPos.x) :\n                    [stPos.x, endPos.x];\n            }\n        } else {\n            rangeObj[yField] = criteria.y;\n            if (yFieldType === DimensionSubtype.CATEGORICAL) {\n                dimensions.y = (config.snap && stPos.y !== endPos.y) ? yAxis.getNearestRange(stPos.y, endPos.y) :\n                    [stPos.y, endPos.y];\n            }\n        }\n    }\n\n    return {\n        criteria: rangeObj,\n        dimensions\n    };\n};\n\nexport default getDragActionConfig;\n","import {\n    getEvent,\n    getD3Drag\n } from 'muze-utils';\n\nimport getDragActionConfig from './drag-action-config';\n\n/**\n * Adds dragging action to the target element.\n * @param {VisualUnit} instance Instance of visual unit.\n * @param {SVGElement} targetEl Element on which brushing action is needed.\n * @param {Array} behaviours Array of behaviours\n */\nexport const attachDragEvent = (targetEl, behaviours, firebolt, touch) => {\n    let startPos = {};\n    let endPos = {};\n    let drawingInf;\n\n    const d3Drag = getD3Drag();\n    let touchStart;\n    targetEl.call(d3Drag().on('start', () => {\n        const event = getEvent();\n        startPos = {\n            x: event.x,\n            y: event.y\n        };\n        drawingInf = firebolt.context.getDrawingContext();\n        touchStart = new Date().getTime();\n    }).on('drag', () => {\n        const event = getEvent();\n        endPos = {\n            x: event.x,\n            y: event.y\n        };\n        if (touch && Math.abs(startPos.x - endPos.x) <= 5) {\n            return;\n        }\n        endPos.x = Math.max(0, Math.min(endPos.x, drawingInf.width));\n        endPos.y = Math.max(0, Math.min(endPos.y, drawingInf.height));\n\n        const payload = getDragActionConfig(firebolt.context.getSourceInfo(), {\n            startPos,\n            endPos\n        }, firebolt.context.data().getFieldsConfig());\n        behaviours.forEach(beh => firebolt.dispatchBehaviour(beh, payload));\n    }).on('end', () => {\n        const event = getEvent();\n        endPos = {\n            x: event.x,\n            y: event.y\n        };\n        const duration = new Date().getTime() - touchStart;\n\n        if (touch && duration > 100 && Math.abs(startPos.x - endPos.x) <= 5) {\n            return;\n        }\n        endPos.x = Math.max(0, Math.min(endPos.x, drawingInf.width));\n        endPos.y = Math.max(0, Math.min(endPos.y, drawingInf.height));\n\n        const payload = getDragActionConfig(firebolt.context.getSourceInfo(), {\n            startPos,\n            endPos,\n            snap: true\n        }, firebolt.context.data().getFieldsConfig());\n        payload.dragEnd = true;\n        behaviours.forEach(beh => firebolt.dispatchBehaviour(beh, payload));\n    }));\n};\n\n","import { getClientPoint, getEvent } from 'muze-utils';\nimport { CONSOLIDATED, FRAGMENTED } from '../../enums/constants';\n\n/**\n * Adds mouse interactions to target element.\n * @param {Firebolt} instance instance of firebolt.\n * @param {SVGElement} targetEl Element on which the event listeners will be attached.\n * @param {Array} behaviours Array of behaviours\n */\n/* istanbul ignore next */ const hover = firebolt => (targetEl, behaviours) => {\n    const dispatchBehaviour = function (args) {\n        const event = getEvent();\n        const context = firebolt.context;\n        const tooltipConf = context.config().interaction.tooltip;\n        const mode = tooltipConf.mode;\n        const pos = getClientPoint(context.getDrawingContext().svgContainer, event);\n        const nearestPoint = context.getNearestPoint(pos.x, pos.y, {\n            getAllPoints: mode === CONSOLIDATED || mode === FRAGMENTED,\n            data: args,\n            event\n        });\n        const payload = {\n            criteria: nearestPoint ? nearestPoint.id : null,\n            showInPosition: nearestPoint.showInPosition,\n            target: nearestPoint.target,\n            position: pos,\n            mode\n        };\n\n        behaviours.forEach(beh => firebolt.dispatchBehaviour(beh, payload));\n        event.stopPropagation();\n    };\n\n    targetEl.on('mouseover', dispatchBehaviour)\n                    .on('mousemove', dispatchBehaviour)\n                    .on('mouseout', () => {\n                        behaviours.forEach(beh => firebolt.dispatchBehaviour(beh, {\n                            criteria: null\n                        }));\n                    });\n};\n\nexport default hover;\n","export const CLASSPREFIX = 'muze';\nexport const CONSOLIDATED = 'consolidated';\nexport const FRAGMENTED = 'fragmented';\n\n","import { getClientPoint } from 'muze-utils';\n\nexport const generatePayloadFromEvent = function (args, event, firebolt) {\n    const context = firebolt.context;\n    const pos = getClientPoint(context.getDrawingContext().svgContainer, event.touches ? event.touches[0] : event);\n    const nearestPoint = context.getNearestPoint(pos.x, pos.y, {\n        data: args,\n        event\n    });\n    return {\n        criteria: nearestPoint ? nearestPoint.id : null,\n        showInPosition: nearestPoint.showInPosition,\n        target: nearestPoint.target,\n        position: pos\n    };\n};\n","import { getEvent } from 'muze-utils';\nimport { generatePayloadFromEvent } from './helpers';\n\n/**\n * Adds mouse interactions to target element.\n * @param {VisualUnit} instance instance of visual unit.\n * @param {SVGElement} targetEl Element on which the event listeners will be attached.\n * @param {Array} behaviours Array of behaviours\n */\n/* istanbul ignore next */ const click = firebolt => (targetEl, behaviours) => {\n    const dispatchBehaviour = function (args) {\n        const event = getEvent();\n        const payload = generatePayloadFromEvent(args, event, firebolt);\n        behaviours.forEach(beh => firebolt.dispatchBehaviour(beh, payload));\n        event.stopPropagation();\n    };\n\n    targetEl.on('click', dispatchBehaviour);\n};\nexport default click;\n","import drag from './drag';\nimport hover from './hover';\nimport { longtouch } from './longtouch';\nimport { touchdrag } from './touch-drag';\nimport * as ACTIONNAMES from '../../enums/actions';\nimport click from './click';\n\nexport const physicalActions = {\n    [ACTIONNAMES.DRAG]: drag,\n    [ACTIONNAMES.HOVER]: hover,\n    [ACTIONNAMES.CLICK]: click,\n    [ACTIONNAMES.LONGTOUCH]: longtouch,\n    [ACTIONNAMES.TOUCHDRAG]: touchdrag\n};\n\n","import { attachDragEvent } from './helpers/drag-event';\n\n/**\n * Adds dragging action to the target element.\n * @param {VisualUnit} instance Instance of visual unit.\n * @param {SVGElement} targetEl Element on which brushing action is needed.\n * @param {Array} behaviours Array of behaviours\n */\n/* istanbul ignore next */ const drag = firebolt => (targetEl, behaviours) => {\n    attachDragEvent(targetEl, behaviours, firebolt);\n};\n\nexport default drag;\n","/* global setTimeout */\nimport { getEvent } from 'muze-utils';\nimport { generatePayloadFromEvent } from './helpers';\n\n/**\n * Adds mouse interactions to target element.\n * @param {VisualUnit} instance instance of visual unit.\n * @param {SVGElement} targetEl Element on which the event listeners will be attached.\n * @param {Array} behaviours Array of behaviours\n */\nexport const longtouch = firebolt => (targetEl, behaviours) => {\n    let event;\n    let touchEnd;\n    const dispatchBehaviour = function (args) {\n        const payload = generatePayloadFromEvent(args, event, firebolt);\n        behaviours.forEach(beh => firebolt.dispatchBehaviour(beh, payload));\n        event.stopPropagation();\n    };\n\n    touchEnd = false;\n    event = getEvent();\n    targetEl.on('touchstart', (args) => {\n        event = getEvent();\n        touchEnd = false;\n        setTimeout(() => {\n            if (!touchEnd) {\n                dispatchBehaviour(args);\n            } else {\n                behaviours.forEach(beh => firebolt.dispatchBehaviour(beh, {\n                    criteria: null\n                }));\n            }\n        }, 100);\n    }).on('touchend', () => {\n        touchEnd = true;\n    });\n};\n","import { attachDragEvent } from './helpers/drag-event';\n\n/**\n * Adds dragging action to the target element.\n * @param {VisualUnit} instance Instance of visual unit.\n * @param {SVGElement} targetEl Element on which brushing action is needed.\n * @param {Array} behaviours Array of behaviours\n */\nexport const touchdrag = firebolt => (targetEl, behaviours) => {\n    attachDragEvent(targetEl, behaviours, firebolt, true);\n};\n\n","export const PROPS = {\n    valueParser: {\n        defaultValue: val => val\n    }\n};\n","import GenericSideEffect from './generic-sideeffect';\n\nexport default GenericSideEffect;\n","import { mergeRecursive, getUniqueId, generateGetterSetters } from 'muze-utils';\nimport { PROPS } from './props';\n\n/**\n * This is the base class of all side effects. It contains all common methods like setting configuration, disabling,\n * enabling side effect, etc. Every new side effect has to inherit this class or {@link SpawnableSideEffect} or\n * {@link SurrogateSideEffect} class. All side effects are initialized by firebolt. The instance of firebolt is\n * passed on initialization. The firebolt instance contains ```context``` which is the instance of visual unit with\n * which the firebolt is attached.\n *\n * @public\n * @class\n * @module GenericSideEffect\n */\nexport default class GenericSideEffect {\n    constructor (firebolt) {\n        this.firebolt = firebolt;\n        this._enabled = true;\n        this._strategy = 'default';\n        this._config = {};\n        this._id = getUniqueId();\n        this._strategies = {};\n        generateGetterSetters(this, PROPS);\n        this.config(this.constructor.defaultConfig());\n    }\n\n    /**\n     * Returns the default configuration of the side effect.\n     *\n     * @public\n     * @return {Object} Default configuration of side effect.\n     */\n    static defaultConfig () {\n        return {};\n    }\n\n    /**\n     * Returns the formal name of a side effect. This method must be implemented by all side effects which changes\n     * or adds any element in the visualization.\n     *\n     * @return {string} Formal name of side effect.\n     */\n    static formalName () {\n        return 'generic';\n    }\n\n    static target () {\n        return 'all';\n    }\n\n    /**\n     * Returns true if the side effects mutates the data of chart.\n     *\n     * @public\n     *\n     * @return {boolean} If the side effect mutates the data of chart.\n     */\n    static mutates () {\n        return false;\n    }\n\n    /**\n     * Sets or gets the configuration of side effect.\n     *\n     * When setter,\n     * @param {Object} config Configuration of side effect.\n     * @return {GenericSideEffect} Side effect instance.\n     *\n     * When getter,\n     * @return {Object} Side effect configuration.\n     */\n    config (...params) {\n        if (params.length) {\n            this._config = mergeRecursive(this._config, params[0]);\n            return this;\n        }\n        return this._config;\n    }\n\n    disable () {\n        this._enabled = false;\n        return this;\n    }\n\n    enable () {\n        this._enabled = true;\n        return this;\n    }\n\n    isEnabled () {\n        return this._enabled;\n    }\n\n    /**\n     * Applies the interaction effect on the chart. This is where the implemntation of the side effect is defined.\n     *\n     * @param {Object} selectionSet Contains the entry and exit set of data which got affected during interaction.\n     * @param {Object} selectionSet.mergedEnter Combined previous entry and new entry set.\n     * @param {DataModel} selectionSet.mergedEnter.model Instance of data model containing all rows which got\n     * affected during interaction.\n     * @param {Array} selectionSet.mergedEnter.uids Ids of all rows which were affected during interaction.\n     * @param {Object} selectionSet.mergedExit Combined previous exit and new exit set.\n     * @param {DataModel} selectionSet.mergedExit.model Instance of data model containing rows which were not affected\n     * during interaction.\n     * @param {Array} selectionSet.mergedExit.uids Ids of all rows which were not affected during interaction.\n     * @param {Object} selectionSet.entrySet Entry set information.\n     * @param {Array} selectionSet.entrySet[0].uids All row ids which got affected during previous interaction.\n     * @param {Array} selectionSet.entrySet[1].uids All row ids which got affected during current interaction.\n     * @param {Array} selectionSet.exitSet[0].uids All row ids which were not affected during previous interaction.\n     * @param {Array} selectionSet.exitSet[1].uids All row ids which were not affected during current interaction.\n     * @param {Object} payload Payload information of the behavioural action on trigger of which this side effect\n     * is applied.\n     * @param {Object} options Optional information for side effect like strategy, etc.\n     */\n    apply () {\n        return this;\n    }\n\n    /**\n     * Adds a new strategy method for this side effect. The strategy method is implemented by side effect class.\n     *\n     * @param {string} name Name of the strategy.\n     * @param {Function} fn Strategy method.\n     *\n     * @return {GenericSideEffect} Instance of side effect.\n     */\n    addStrategy (name, fn) {\n        this._strategies[name] = fn;\n        return this;\n    }\n}\n","import GenericSideEffect from './generic';\n\n/**\n * This class is inherited by all side effects which changes the look of any existing elements in the visualization.\n * For example, if a side effect wants to change the color of bar plots, then it is a surrogate side effect.\n *\n * To use this,\n * ```\n *      const SurrogateSideEffect = muze.SideEffects.standards.SurrogateSideEffect;\n *\n *      class BarColorChanger extends SurrogateSideEffect {\n *          static formalName () {\n *              return 'colorChanger';\n *          }\n *\n *          // Implement the logic of applying the style here.\n *          apply () {\n *          }\n *      }\n * ```\n * @public\n *\n * @module SurrogateSideEffect\n * @class\n * @extends GenericSideEffect\n */\nexport default class SurrogateSideEffect extends GenericSideEffect {\n    /**\n     * Applies or removes interaction styles from plot elements. An array of row ids needs to be passed\n     * which identifies the plot elements and applies styles to them.\n     *\n     * To apply the interaction style,\n     * ```\n     *      const entryRowIds = entrySet[0].uids;\n     *      const interactionStyle = [{\n     *          type: 'fill',\n     *          intensity: [0, 0, 15, 0] // hsla configuration\n     *      }];\n     *\n     *      this.applyInteractionStyle(entryRowIds, interactionStyle, 'brighten', true);\n     * ```\n     * @public\n     * @param {Array} set Array of row ids.\n     * @param {Array} config Style configuration.\n     * @param {Object} config[0] fill or stroke configuration.\n     * @param {string} config[0].type Type of style - fill or stroke.\n     * @param {Array} config[0].intensity hsla configuration.\n     * @param {string} interactionType Type of interaction. This is needed for storing the styles for\n     * each type of interaction in the plot elements.\n     * @param {boolean} apply Whether to apply or remove the interaction style.\n     *\n     * @return {SurrogateSideEffect} Instance of surrogate side effect.\n     */\n    applyInteractionStyle (set, config = {}, interactionType, apply) {\n        const layers = this.firebolt.context.layers();\n        layers.forEach(layer => layer.config().interactive !== false &&\n            layer.applyInteractionStyle(interactionType, set.uids, apply));\n        return this;\n    }\n}\n","import { makeElement } from 'muze-utils';\n\nimport GenericSideEffect from './generic';\n\n/**\n * Any side effect which will add any new element to the chart like drawing a rectangular box or any annotation over\n * the chart needs to inherit this class. This class has methods which returns the container where the dom elements\n * needs to be created.\n *\n * To use this,\n * ```\n *      const SpawnableSideEffect = muze.SideEffects.standards.SpawnableSideEffect;\n *\n *      class SelectionBox extends SpawnableSideEffect {\n *          static formalName () {\n *              return 'selectionBox';\n *          }\n *\n *          // Implement the logic of applying the style here.\n *          apply () {\n *          }\n *      }\n * ```\n * @public\n * @class\n * @extends GenericSideEffect\n * @module SpawnableSideEffect\n */\nexport default class SpawnableSideEffect extends GenericSideEffect {\n    /**\n     * Creates a html or svg element in the container.\n     *\n     * @public\n     * @param {SVGElement|HTMLElement} container Container where the dom element will be rendered.\n     * @param {string} elemType Type of dom element.\n     * @param {Array} data Array of objects with which the dom elements will be binded.\n     * @param {string} className class name of the element.\n     *\n     * @return {Selection} D3 Selection of the element.\n     */\n    createElement (container, elemType, data, className, callbacks) {\n        return makeElement(container, elemType, data, className, callbacks);\n    }\n\n    /**\n     * Returns the drawing information for side effect like svg container, dimensions of the visual unit.\n     *\n     * @public\n     * @return {Object} Drawing information for side effect.\n     * ```\n     *      sideEffectGroup: // svg container where the side effect needs to be appended.\n     *      svgContainer: // svg container of the {@link VisualUnit}.\n     *      htmlContainer: // html div container of the {@link VisualUnit}.\n     *      width: // Width of the {@link VisualUnit}\n     *      height: // Height of the {@link VisualUnit}\n     * ```\n     */\n    drawingContext (...drawingContext) {\n        if (drawingContext.length) {\n            this._drawingContext = drawingContext[0];\n            return this;\n        }\n        return this._drawingContext();\n    }\n\n    show () {\n        return this;\n    }\n\n    hide () {\n        return this;\n    }\n}\n","import { selectElement } from 'muze-utils';\n\nexport const getBoxDimensionsFromPayload = (payload, axes, axisFields) => {\n    let x1;\n    let x2;\n    let y1;\n    let y2;\n    let xRange;\n    let yRange;\n    let direction;\n    const criteria = payload.criteria;\n    const dimensions = payload.dimensions || {};\n    const xDim = dimensions.x;\n    const yDim = dimensions.y;\n\n    if (criteria === null) {\n        return null;\n    }\n\n    const xAxis = axes.x[0];\n    const yAxis = axes.y[0];\n    const xLinear = xAxis.constructor.type() === 'linear';\n    const yLinear = yAxis.constructor.type() === 'linear';\n    const xField = `${axisFields.x[0]}`;\n    const yField = `${axisFields.y[0]}`;\n    const xCriteria = criteria[xField];\n    const yCriteria = criteria[yField];\n\n    if (xCriteria && xCriteria[0] instanceof Array) {\n        xRange = xCriteria[0];\n        yRange = xCriteria[1];\n    } else {\n        xRange = xCriteria || [];\n        yRange = yCriteria || [];\n    }\n    direction = xCriteria && yCriteria ? 'both' : (xCriteria ? 'vertical' : 'horizontal');\n    if (xRange && xRange.length) {\n        if ((yAxis.constructor.type() === 'band' && xLinear)) {\n            x1 = x2 = undefined;\n            direction = 'horizontal';\n        } else {\n            const domain = xAxis.domain();\n            const bandScale = xAxis.constructor.type() === 'band';\n            let x1Val;\n            let x2Val;\n            if (bandScale) {\n                let x1DomainIndex = domain.indexOf(xRange[0]);\n                let x2DomainIndex = domain.indexOf(xRange[xRange.length - 1]);\n                [x1DomainIndex, x2DomainIndex] = [x1DomainIndex, x2DomainIndex].sort((a, b) => a - b);\n                x1Val = domain[x1DomainIndex];\n                x2Val = domain[x2DomainIndex];\n            } else {\n                x1Val = xRange[0];\n                x2Val = xRange[xRange.length - 1];\n            }\n            x1 = xAxis.getScaleValue(x1Val);\n            x2 = xAxis.getScaleValue(x2Val);\n            x2 += bandScale ? xAxis.getUnitWidth() : 0;\n        }\n    } else {\n        x1 = x2 = undefined;\n    }\n    if (yRange && yRange.length) {\n        if ((xAxis.constructor.type() === 'band' && yLinear)) {\n            y1 = y2 = undefined;\n            direction = 'vertical';\n        } else {\n            const domain = yAxis.domain();\n            const bandScale = yAxis.constructor.type() === 'band';\n            let y1Val;\n            let y2Val;\n            if (bandScale) {\n                let y1DomainIndex = domain.indexOf(yRange[0]);\n                let y2DomainIndex = domain.indexOf(yRange[yRange.length - 1]);\n                [y1DomainIndex, y2DomainIndex] = [y1DomainIndex, y2DomainIndex].sort(((a, b) => b - a));\n                y1Val = domain[y1DomainIndex];\n                y2Val = domain[y2DomainIndex];\n            } else {\n                y1Val = yRange[0];\n                y2Val = yRange[yRange.length - 1];\n            }\n            y1 = yAxis.getScaleValue(y1Val);\n            y2 = yAxis.getScaleValue(y2Val);\n            y2 += yAxis.constructor.type() === 'band' ? yAxis.getUnitWidth() : 0;\n        }\n    } else {\n        y1 = y2 = undefined;\n    }\n\n    if ((yLinear && xLinear) || !payload.dragEnd) {\n        if (xDim) {\n            [x1, x2] = xDim;\n        }\n        if (yDim) {\n            [y1, y2] = yDim;\n        }\n    }\n\n    return {\n        dimension: {\n            x1,\n            x2,\n            y1,\n            y2\n        },\n        direction\n    };\n};\n\nexport const changeVisibility = (context, sideEffectGroup, visible) => {\n    const config = context.config();\n    const className = config.defClassName;\n    const classPrefix = config.classPrefix;\n    selectElement(sideEffectGroup).selectAll(`.${classPrefix}-${className}`)\n                    .style('display', visible ? 'block' : 'none');\n};\n","import {\n    getQualifiedClassName,\n    selectElement,\n    makeElement,\n    isValidValue\n} from 'muze-utils';\nimport { CLASSPREFIX } from '../../enums/constants';\nimport './styles.scss';\nimport SpawnableSideEffect from '../spawnable';\nimport { selectionBoxDrag } from '../../actions/physical/selection-box-drag';\nimport { getBoxDimensionsFromPayload, changeVisibility } from './helper';\n\n/**\n * This class is used to create a selection box which is used by visual unit for brushing and\n * selection in the canvas.\n * @class SelectionBox\n */\nclass SelectionBox extends SpawnableSideEffect {\n    /**\n     * It returns the default configuration needed by selectionbox.\n     * @return {Object} Default configuration of the selection box.\n     */\n    static defaultConfig () {\n        return {\n            defClassName: 'selection-box-group',\n            className: '',\n            classPrefix: CLASSPREFIX,\n            box: {\n                defClassName: 'selection-box',\n                className: ''\n            },\n            transition: {\n                duration: 200\n            }\n        };\n    }\n\n    static formalName () {\n        return 'selectionBox';\n    }\n\n    /**\n     * Draws the selectionbox with the specified dimensions.\n     * @param {Object} dimension Dimensions of the selection box.\n     * @param {number} dimension.x1 Starting x position\n     * @param {number} dimension.x2 Ending x position\n     * @param {number} dimension.y1 Starting y position\n     * @param {number} dimension.y2 Ending y position\n     * @param {Object} conf Configuration needed to draw the selection box\n     * @param {number} unitWidth Width of the visual unit.\n     * @param {number} unitHeight Height of the visual unit.\n     */\n    apply (selectionSet, payload) {\n        let x;\n        let y;\n        let width;\n        let height;\n        const config = this._config;\n        const boxConf = config.box;\n        const firebolt = this.firebolt;\n        const drawingInf = this.drawingContext();\n        const mountPoint = drawingInf.sideEffectGroup;\n        const unitWidth = drawingInf.width;\n        const unitHeight = drawingInf.height;\n        const classPrefix = config.classPrefix;\n        const selectionGroupClassName = config.defClassName;\n\n        if (payload.criteria === null) {\n            this.hide(drawingInf);\n            return this;\n        }\n\n        const sourceInf = firebolt.context.getSourceInfo();\n        const { dimension, direction } = getBoxDimensionsFromPayload(payload, sourceInf.axes,\n            sourceInf.fields);\n        const transition = payload.dragEnd && config.transition;\n\n        if (direction === 'both' || direction === 'vertical') {\n            x = Math.min(dimension.x1, dimension.x2);\n            width = Math.abs(dimension.x2 - dimension.x1);\n        } else {\n            x = 0;\n            width = unitWidth;\n        }\n        if (direction === 'both' || direction === 'horizontal') {\n            y = Math.min(dimension.y1, dimension.y2);\n            height = Math.abs(dimension.y2 - dimension.y1);\n        } else {\n            height = unitHeight;\n            y = 0;\n        }\n        this.show(drawingInf);\n        // Create the data array for drawing the rectangle\n        const points = [\n            {\n                x,\n                y,\n                width,\n                height\n            }\n        ];\n        // Create the container group for selection box.\n        const selectionGroup = makeElement(selectElement(mountPoint), 'g', [1],\n            `.${classPrefix}-${selectionGroupClassName}`);\n        const sideEffect = this;\n        const selection = selectionGroup.selectAll('rect').data(points);\n        const selectionBox = selection.enter().append('rect')\n                        .each(function () {\n                            selectionBoxDrag(firebolt)(selectElement(this), ['brush'], sideEffect);\n                        })\n                        .merge(selection)\n                        .each(function (attrs) {\n                            let element = selectElement(this);\n                            transition && (element = element.transition().duration(transition.duration));\n                            for (const key in attrs) {\n                                if ({}.hasOwnProperty.call(attrs, key)) {\n                                    isValidValue(attrs[key]) && element.attr(key, attrs[key]);\n                                }\n                            }\n                        });\n        // Get the qualified class name for selection box rectangle\n        const boxClassName = getQualifiedClassName(boxConf.defClassName, this._id, classPrefix);\n        selectionBox.classed(boxClassName.join(' '), true);\n        selectionBox.classed(boxConf.className, true);\n\n        return this;\n    }\n\n    hide (drawingInf) {\n        changeVisibility(this, drawingInf.sideEffectGroup, false);\n    }\n\n    show (drawingInf) {\n        changeVisibility(this, drawingInf.sideEffectGroup, true);\n    }\n}\n\nexport default SelectionBox;\n\n","import {\n    getEvent,\n    getD3Drag\n } from 'muze-utils';\n\nimport getDragActionConfig from './helpers/drag-action-config';\n\nexport const selectionBoxDrag = firebolt => (targetEl, behaviours) => {\n    let subject;\n    let drawingInf;\n    const context = firebolt.context;\n    const onDrag = (payload) => {\n        behaviours.forEach(action => firebolt.dispatchBehaviour(action, payload));\n    };\n    const d3Drag = getD3Drag();\n\n    targetEl.call(d3Drag().on('start', () => {\n        const event = getEvent();\n        drawingInf = context.getDrawingContext();\n        subject = event.subject;\n    }).on('drag', () => {\n        const event = getEvent();\n        subject.x += event.dx;\n        subject.y += event.dy;\n        const width = drawingInf.width;\n        const height = drawingInf.height;\n        const x = Math.min(width - subject.width, Math.max(subject.x, 0));\n        const y = Math.min(height - subject.height, Math.max(subject.y, 0));\n        const y2 = y + subject.height;\n        const x2 = x + subject.width;\n\n        if (x >= 0 && x2 <= width && y >= 0 && y2 <= height) {\n            const payload = getDragActionConfig(context.getSourceInfo(), {\n                startPos: {\n                    x,\n                    y\n                },\n                endPos: {\n                    x: x2,\n                    y: y2\n                }\n            }, context.data().getFieldsConfig());\n            onDrag(payload);\n        }\n    }).on('end', () => {\n        const width = drawingInf.width;\n        const height = drawingInf.height;\n        const x = Math.min(width - subject.width, Math.max(subject.x, 0));\n        const y = Math.min(height - subject.height, Math.max(subject.y, 0));\n        const y2 = y + subject.height;\n        const x2 = x + subject.width;\n\n        if (x >= 0 && x2 <= width && y >= 0 && y2 <= height) {\n            const payload = getDragActionConfig(context.getSourceInfo(), {\n                startPos: {\n                    x,\n                    y\n                },\n                endPos: {\n                    x: x2,\n                    y: y2\n                },\n                snap: true\n            }, context.data().getFieldsConfig());\n            payload.dragEnd = true;\n            onDrag(payload);\n        }\n    }));\n};\n","export const CLASSPREFIX = 'muze';\nexport const ARROW_RIGHT = 'right';\nexport const ARROW_TOP = 'top';\nexport const ARROW_BOTTOM = 'bottom';\nexport const ARROW_LEFT = 'left';\nexport const TOOLTIP_LEFT = 'left';\nexport const TOOLTIP_RIGHT = 'right';\nexport const TOOLTIP_BOTTOM = 'bottom';\nexport const TOOLTIP_TOP = 'top';\nexport const INITIAL_STYLE = {\n    position: 'absolute',\n    width: 0,\n    height: 0\n};\n","import { CLASSPREFIX } from './constants';\n\nexport const defaultConfig = {\n    classPrefix: CLASSPREFIX,\n    defClassName: 'tooltip-box',\n    connectorClassName: 'tooltip-connectors',\n    className: '',\n    row: {\n        margin: 0\n    },\n    content: {\n        spacing: 5,\n        iconContainerSize: 10,\n        iconScale: 1,\n        iconShape: 'circle',\n        iconColor: '#ff0000',\n        rowMargin: '0px',\n        margin: 10,\n        separator: ':',\n        className: 'tooltip-content-container',\n        parentClassName: 'tooltip-content-parent-container'\n    },\n    arrow: {\n        size: 10,\n        disabled: false,\n        defClassName: 'tooltip-arrow',\n        className: '',\n        color: 'rgba(195,195,195,0.85)'\n    }\n};\n","import { getQualifiedClassName } from 'muze-utils';\nimport { TOOLTIP_LEFT, TOOLTIP_RIGHT, ARROW_RIGHT, ARROW_LEFT, TOOLTIP_BOTTOM } from './constants';\n\nexport const getArrowPos = (orient, dim, measurement, config) => {\n    let arrowPos;\n    const { x, y, boxHeight, boxWidth } = measurement;\n    const arrowDisabled = config.arrow.disabled;\n    const arrowWidth = arrowDisabled ? 0 : config.arrow.size;\n\n    if (orient === ARROW_LEFT || orient === ARROW_RIGHT) {\n        let start = 0;\n        let diff = boxHeight / 2;\n        const plotBottom = dim.y + dim.height;\n        const boxBottom = y + boxHeight;\n\n        if (dim.y > y) {\n            start = dim.y - y;\n            diff = (plotBottom >= boxBottom ? (boxBottom - dim.y) : dim.height) / 2;\n        } else if (boxBottom > plotBottom) {\n            diff = Math.abs(y - (dim.y + dim.height)) / 2;\n        }\n        arrowPos = start + diff - arrowWidth / 2;\n    } else {\n        let start = 0;\n        let diff = boxWidth / 2;\n        const plotRight = dim.x + dim.width;\n        const boxRight = x + boxWidth;\n\n        if (dim.x > x) {\n            start = dim.x - x;\n            diff = (plotRight >= boxRight ? (boxRight - dim.x) : dim.width) / 2;\n        } else if (boxRight > plotRight) {\n            diff = Math.abs(x - (dim.x + dim.width)) / 2;\n        }\n        arrowPos = start + diff - arrowWidth / 2;\n    }\n    return arrowPos;\n};\n\n/**\n * Places the arrow in the specified arrow position. It also applies appropriate arrow\n * class name to the arrow element.\n * @param {string} position Left, bottom or right position of the arrow;\n * @param {number} arrowPos position of arrow in pixels\n * @return {Tooltip} Instance of tooltip.\n */\nexport const placeArrow = (context, position, arrowPos) => {\n    const tooltipArrow = context._tooltipArrow;\n    const tooltipBackground = context._tooltipBackground;\n    const config = context._config;\n    const classPrefix = config.classPrefix;\n    const arrowConf = config.arrow;\n    const className = getQualifiedClassName(arrowConf.defClassName, context._id, config.classPrefix);\n\n    tooltipArrow.style('display', 'block');\n    tooltipArrow.attr('class', `${className.join(' ')}`);\n    if (position === TOOLTIP_LEFT || position === TOOLTIP_RIGHT) {\n        tooltipArrow.style('top', `${arrowPos}px`);\n        tooltipArrow.style('left', '');\n        tooltipBackground.style('top', `${arrowPos}px`);\n        tooltipBackground.style('left', '');\n    } else {\n        position === TOOLTIP_BOTTOM ? tooltipArrow.style('top', '100%') : tooltipArrow.style('top',\n            `-${arrowConf.size}px`);\n        tooltipArrow.style('left', `${arrowPos}px`);\n        position === TOOLTIP_BOTTOM ? tooltipBackground.style('top', '100%') : tooltipBackground.style('top',\n            `-${arrowConf.size + 3}px`);\n        tooltipBackground.style('left', `${arrowPos}px`);\n    }\n    tooltipArrow.classed(`${classPrefix}-tooltip-arrow`, true);\n    tooltipArrow.classed(`${classPrefix}-tooltip-arrow-${context._arrowOrientation}`, false);\n    tooltipArrow.classed(`${classPrefix}-tooltip-arrow-${position}`, true);\n    tooltipBackground.classed(`${classPrefix}-tooltip-background-arrow`, true);\n    tooltipBackground.classed(`${classPrefix}-tooltip-background-arrow-${context._arrowOrientation}`, false);\n    tooltipBackground.classed(`${classPrefix}-tooltip-background-arrow-${position}`, true);\n    return this;\n};\n\nexport const reorderContainers = (parentContainer, className) => {\n    parentContainer.selectAll(className).sort((a, b) => a - b);\n};\n","import {\n    formatTemporal,\n    DimensionSubtype,\n    MeasureSubtype,\n    FieldType,\n    DataModel,\n    defaultValue\n} from 'muze-utils';\n\nconst { InvalidAwareTypes } = DataModel;\n\nconst formatters = (formatter, interval, valueParser) => ({\n    [DimensionSubtype.TEMPORAL]: (value) => {\n        if (value instanceof InvalidAwareTypes) {\n            return valueParser(value);\n        }\n        return formatTemporal(value, interval);\n    },\n    [MeasureSubtype.CONTINUOUS]: value => (value instanceof InvalidAwareTypes ? valueParser(value) :\n        formatter(value.toFixed(2))),\n    [DimensionSubtype.CATEGORICAL]: value => valueParser(value)\n});\n\nconst getDefaultTooltipFormatterFn = (formatter, defaultFormatter) => defaultValue(formatter, defaultFormatter);\n\nconst getTabularData = (dataObj, context, defaultFormatter) => {\n    const rows = [];\n    const { data, schema, fieldspace } = dataObj;\n    rows.push(schema.map(d => d.name));\n    const { valueParser, timeDiffs } = context;\n    data.forEach((d) => {\n        const row = [];\n        schema.forEach((fieldObj, i) => {\n            const interval = fieldObj.subtype === DimensionSubtype.TEMPORAL ? timeDiffs[fieldObj.name] : 0;\n            const numberFormat = fieldObj.type === FieldType.MEASURE && fieldspace.fields[i].numberFormat();\n            const formatterFn = getDefaultTooltipFormatterFn(formatters(numberFormat,\n                interval, valueParser)[fieldObj.subtype], defaultFormatter);\n            const value = formatterFn(d[i]);\n            row.push(value);\n        });\n        rows.push(row);\n    });\n    return rows;\n};\n\nexport const buildTooltipData = (dataModel, config = {}, context) => {\n    let fieldValues = [];\n    const dataObj = dataModel.getData();\n    const data = dataObj.data;\n    const schema = dataObj.schema;\n    const separator = config.separator;\n    const fieldsConfig = dataModel.getFieldsConfig();\n    const fieldspace = dataModel.getFieldspace();\n    const detailFields = context.detailFields || [];\n    const dimensions = schema.filter(d => d.type === FieldType.DIMENSION);\n    const measures = schema.filter(d => d.type === FieldType.MEASURE);\n    const containsDetailField = schema.find(d => detailFields.indexOf(d.name) !== -1);\n    const dataLen = data.length;\n    const {\n        valueParser,\n        axes,\n        dimensionMeasureMap,\n        timeDiffs\n    } = context;\n    const defFormatter = formatters(null, null, valueParser)[DimensionSubtype.CATEGORICAL];\n    const getRowContent = (field, type) => {\n        let value;\n        let formattedValue;\n        let measureIndex;\n        const values = [];\n        const index = fieldsConfig[field].index;\n        const interval = fieldsConfig[field].def.subtype === DimensionSubtype.TEMPORAL ? timeDiffs[field] : 0;\n        const formatterFn = getDefaultTooltipFormatterFn(formatters(val => val, interval, valueParser)[type],\n            defFormatter);\n\n        if (value !== null) {\n            let uniqueVals = type === MeasureSubtype.CONTINUOUS ? data.map(d => d[index]) :\n                [...new Set(data.map(d => d[index]))];\n            uniqueVals = uniqueVals.filter(d => d !== '');\n            const colorAxis = axes.color[0];\n            const shapeAxis = axes.shape[0];\n            const sizeAxis = axes.size[0];\n            const isRetinalField = (colorAxis || shapeAxis || sizeAxis) && dataLen > 1 &&\n                    type !== MeasureSubtype.CONTINUOUS;\n\n            uniqueVals.forEach((val, i) => {\n                let key;\n                const associatedMeasures = dimensionMeasureMap[field];\n\n                if (associatedMeasures && associatedMeasures.length && dataLen > 1) {\n                    key = val;\n                    let icon = {\n                        value: ''\n                    };\n\n                    if (isRetinalField) {\n                        icon = {\n                            type: 'icon',\n                            color: colorAxis.getColor(val),\n                            shape: shapeAxis.getShape(val),\n                            size: sizeAxis.getSize(val) * config.iconScale\n                        };\n                    }\n                    if (associatedMeasures.length > 1) {\n                        const formattedKey = type === DimensionSubtype.TEMPORAL ? formatterFn(key, interval) : key;\n                        values.push([icon, `${formattedKey}`]);\n                        associatedMeasures.forEach((measure) => {\n                            measureIndex = fieldsConfig[measure].index;\n                            value = data[i][measureIndex];\n                            const numberFormat = fieldspace.fields[measureIndex].numberFormat();\n                            const measureFormatter = getDefaultTooltipFormatterFn(\n                                formatters(numberFormat, interval, valueParser)[MeasureSubtype.CONTINUOUS]);\n                            formattedValue = measureFormatter(value);\n                            values.push([{\n                                value: `${measure}${separator}`,\n                                style: {\n                                    'margin-left': `${config.margin}px}`\n                                },\n                                className: `${config.classPrefix}-tooltip-key`\n                            }, {\n                                value: `${formattedValue}`,\n                                className: `${config.classPrefix}-tooltip-value`\n                            }]);\n                        });\n                    } else {\n                        measureIndex = fieldsConfig[associatedMeasures[0]].index;\n                        value = data[i][measureIndex];\n                        const numberFormat = fieldspace.fields[measureIndex].numberFormat();\n                        const measureFormatter = getDefaultTooltipFormatterFn(\n                            formatters(numberFormat, interval, valueParser)[MeasureSubtype.CONTINUOUS]);\n                        formattedValue = measureFormatter(value);\n                        const formattedKey = type === DimensionSubtype.TEMPORAL ? formatterFn(key, interval) : key;\n                        values.push([\n                            icon,\n                            {\n                                value: `${formattedKey}`,\n                                className: `${config.classPrefix}-tooltip-key`\n                            },\n                            {\n                                value: `${formattedValue}`,\n                                className: `${config.classPrefix}-tooltip-value`\n                            }\n                        ]);\n                    }\n                } else {\n                    key = field;\n                    value = val;\n                    formattedValue = formatterFn(value);\n                    values.push([{\n                        value: `${key}${separator}`,\n                        className: `${config.classPrefix}-tooltip-key`\n                    }, {\n                        value: `${formattedValue}`,\n                        className: `${config.classPrefix}-tooltip-value`\n                    }]);\n                }\n            });\n        }\n        return values;\n    };\n    let displayFormat = 'keyValue';\n\n    if (dataLen > 1 && containsDetailField) {\n        fieldValues = getTabularData({\n            data,\n            schema,\n            fieldspace\n        }, context, defFormatter);\n        displayFormat = 'table';\n    } else {\n        dimensions.forEach((item) => {\n            const type = item.subtype ? item.subtype : item.type;\n            fieldValues = [...fieldValues, ...getRowContent(item.name, type)];\n        });\n\n        const allMeasures = [...new Set(...Object.values(dimensionMeasureMap))];\n        const filteredMeasures = dataLen > 1 ? measures.filter(d => allMeasures.indexOf(d.name) === -1)\n            : measures;\n\n        filteredMeasures.forEach((item) => {\n            const type = item.subtype ? item.subtype : item.type;\n            fieldValues = [...fieldValues, ...getRowContent(item.name, type)];\n        });\n    }\n\n    return {\n        content: fieldValues,\n        displayFormat\n    };\n};\n\n/**\n * This contains the strategy methods for showing tooltip in the chart.\n * @param {VisualUnit} context Attached instance.\n */\nexport const strategy = {\n    keyValue: (data, config, context) => {\n        const values = buildTooltipData(data, config, context);\n        return values;\n    }\n};\n\nexport const DEFAULT_STRATEGY = 'keyValue';\n","import {\n    selectElement,\n    mergeRecursive,\n    makeElement,\n    setAttrs,\n    setStyles,\n    getSymbol,\n    isSimpleObject\n} from 'muze-utils';\nimport { DEFAULT_STRATEGY, strategy } from './strategy';\nimport { defaultConfig } from './default-config';\n\n/**\n * This class is used to manage the content of tooltip.\n */\nexport default class Content {\n    /**\n     * Creates an instance of content.\n     */\n    constructor () {\n        this._model = null;\n        this._strategy = DEFAULT_STRATEGY;\n        this._formatter = null;\n        this._config = this.constructor.defaultConfig();\n    }\n   /**\n     * Returns the default configuration of tooltip\n     * @return {Object} Configuration of tooltip.\n     */\n    static defaultConfig () {\n        const config = defaultConfig.content;\n        config.classPrefix = defaultConfig.classPrefix;\n        return config;\n    }\n\n    config (...c) {\n        if (c.length > 0) {\n            this._config = mergeRecursive(this._config, c[0]);\n            return this;\n        }\n        return this._config;\n    }\n\n    /**\n     * Update model. The format contains presentation strategy which determines how to show the content.\n     * If no strategy is mentioned then default is to show key value pair\n    */\n    update (item) {\n        this._model = item.model;\n        this._strategy = item.strategy !== undefined ? item.strategy : DEFAULT_STRATEGY;\n        this._formatter = item.formatter;\n        return this;\n    }\n\n    context (ctx) {\n        this._context = ctx;\n        return this;\n    }\n\n    render (mount) {\n        let data;\n        const config = this._config;\n        const iconContainerSize = config.iconContainerSize;\n        const formatter = this._formatter;\n        const rowMargin = config.rowMargin;\n        const model = this._model;\n\n        this._mount = mount;\n        if (model instanceof Array) {\n            data = model;\n        } else {\n            data = formatter instanceof Function ? formatter(this._model, this._context) :\n                strategy[this._strategy](this._model, this.config(), this._context);\n        }\n\n        if (data instanceof Function) {\n            mount.html(data());\n        } else {\n            let content = data;\n            let displayFormat = 'default';\n\n            if (isSimpleObject(data)) {\n                content = data.content;\n                displayFormat = data.displayFormat;\n            }\n\n            const body = makeElement(mount, 'div', [displayFormat], `${config.classPrefix}-tooltip-content`, {},\n                d => d);\n\n            if (displayFormat === 'table') {\n                const table = makeElement(body, 'table', [1], `${config.classPrefix}-tooltip-table`);\n                const tbody = makeElement(table, 'tbody', [1], `${config.classPrefix}-tooltip-table-tbody`);\n                const rows = makeElement(tbody, 'tr', content, `${config.classPrefix}-tooltip-table-row`);\n                rows.each(function (d, i) {\n                    selectElement(this).classed(`${config.classPrefix}-tooltip-table-row-${i}`, true);\n                });\n                const cells = makeElement(rows, 'td', d => d, `${config.classPrefix}-tooltip-table-cell`);\n                cells.each(function (d) {\n                    selectElement(this).html(d);\n                });\n            } else {\n                const rows = makeElement(body, 'div', content, `${config.classPrefix}-tooltip-row`);\n                const cells = makeElement(rows, 'span', d => d, `${config.classPrefix}-tooltip-content`);\n                cells.attr('class', `${config.classPrefix}-tooltip-content`);\n                setStyles(rows, {\n                    margin: rowMargin\n                });\n                setStyles(cells, {\n                    display: 'inline-block',\n                    'margin-right': `${config.spacing}px`\n                });\n\n                cells.each(function (d) {\n                    const el = selectElement(this);\n                    el.html('');\n                    if (d instanceof Object) {\n                        if (d.type === 'icon') {\n                            const svg = makeElement(el, 'svg', [1]);\n                            const path = makeElement(svg, 'path', [1]);\n                            const shape = d.shape instanceof Function ? d.shape : getSymbol(d.shape);\n\n                            setAttrs(svg, {\n                                x: 0,\n                                y: 0,\n                                width: iconContainerSize,\n                                height: iconContainerSize\n                            });\n                            setAttrs(path, {\n                                d: shape.size(d.size)(),\n                                transform: `translate(${iconContainerSize / 2}, ${iconContainerSize / 2})`\n                            });\n                            setStyles(path, {\n                                fill: d.color\n                            });\n                            setStyles(svg, {\n                                width: `${iconContainerSize}px`,\n                                height: `${iconContainerSize}px`\n                            });\n                        } else {\n                            el.html(d.value);\n                            d.className && el.classed(d.className, true);\n                            setStyles(el, d.style);\n                        }\n                    } else {\n                        el.html(d);\n                    }\n                });\n            }\n        }\n        return this;\n    }\n\n    clear () {\n        this._model = null;\n        return this;\n    }\n}\n","import {\n    mergeRecursive,\n    getQualifiedClassName,\n    getUniqueId,\n    selectElement,\n    setStyles,\n    makeElement\n} from 'muze-utils';\nimport { ARROW_BOTTOM, ARROW_LEFT, ARROW_RIGHT, TOOLTIP_LEFT, TOOLTIP_RIGHT, TOOLTIP_BOTTOM, TOOLTIP_TOP,\n    INITIAL_STYLE } from './constants';\nimport { defaultConfig } from './default-config';\nimport { getArrowPos, placeArrow, reorderContainers } from './helper';\nimport './styles.scss';\nimport Content from './content';\n\n/**\n * This component is responsible for creating a tooltip element. It appends the tooltip\n * in the body element.\n * @class Tooltip\n */\nexport default class Tooltip {\n    /**\n     * Initializes the tooltip with the container element and configuration\n     * @param {HTMLElement} container container where the tooltip will be mounted.\n     * @param {string} className Class name of the tooltip.\n     */\n    constructor (htmlContainer, svgContainer) {\n        let connectorContainer = svgContainer;\n        this._id = getUniqueId();\n        this._config = {};\n        this.config({});\n        const tooltipConf = this._config;\n        const classPrefix = tooltipConf.classPrefix;\n        const contentClass = tooltipConf.content.parentClassName;\n        const container = makeElement(htmlContainer, 'div', [1], `${classPrefix}-tooltip-container`);\n        this._container = container;\n        this._tooltipContainer = container.append('div').style('position', 'absolute');\n        this._contentContainer = this._tooltipContainer.append('div').attr('class', `${classPrefix}-${contentClass}`);\n        this._tooltipBackground = this._tooltipContainer.append('div').style('position', 'relative');\n        this._tooltipArrow = this._tooltipContainer.append('div');\n\n        if (!svgContainer) {\n            connectorContainer = htmlContainer.append('svg').style('pointer-events', 'none');\n        }\n        this._contents = {};\n        this._tooltipConnectorContainer = selectElement(connectorContainer)\n            .append('g')\n            .attr('class', `${tooltipConf.classPrefix}-${tooltipConf.connectorClassName}`);\n        const id = this._id;\n        const defClassName = tooltipConf.defClassName;\n        const qualifiedClassName = getQualifiedClassName(defClassName, id, tooltipConf.classPrefix);\n\n        setStyles(this._tooltipArrow, INITIAL_STYLE);\n        setStyles(this._tooltipBackground, INITIAL_STYLE);\n        this.addClass(qualifiedClassName.join(' '));\n        this.addClass(tooltipConf.className);\n        this.hide();\n    }\n\n    /**\n     * Sets the configuration of tooltip.\n     * @param {Object} config Configuration of tooltip\n     * @return {Tooltip} Instance of tooltip\n     */\n    config (...config) {\n        if (config.length > 0) {\n            const defConf = mergeRecursive({}, this.constructor.defaultConfig());\n            this._config = mergeRecursive(defConf, config[0]);\n            return this;\n        }\n        return this._config;\n    }\n\n    /**\n     * Returns the default configuration of tooltip\n     * @return {Object} Configuration of tooltip.\n     */\n    static defaultConfig () {\n        return defaultConfig;\n    }\n    /**\n     * Sets the class name of tooltip\n     * @param {string} className tooltip class name\n     * @return {Tooltip} Instance of tooltip.\n     */\n    addClass (className) {\n        this._tooltipContainer.classed(className, true);\n        return this;\n    }\n\n    context (...ctx) {\n        if (ctx.length) {\n            this._context = ctx[0];\n            return this;\n        }\n        return this._context;\n    }\n\n    content (name, data, contentConfig = {}) {\n        const config = this.config();\n        const { classPrefix } = config;\n        const contentClass = config.content.className;\n        const formatter = config.formatter;\n        const className = contentConfig.className || `${classPrefix}-${contentClass}-${name}`;\n        const content = this._contents[name] = this._contents[name] || new Content();\n        const container = makeElement(this._contentContainer, 'div', [contentConfig.order], className);\n        container.attr('class', `${classPrefix}-${contentClass} ${className}`);\n        reorderContainers(this._contentContainer, `.${classPrefix}-${contentClass}`);\n        const contentConf = config.content;\n        contentConfig.classPrefix = this._config.classPrefix;\n        content.config(contentConf);\n\n        if (data === null) {\n            content.clear();\n            container.remove();\n            delete this._contents[name];\n        } else {\n            content.update({\n                model: data,\n                formatter: contentConfig.formatter || formatter\n            });\n            content.context(this._context);\n            content.render(container);\n        }\n\n        if (!Object.keys(this._contents).length) {\n            this.hide();\n        }\n        return this;\n    }\n\n    getContents () {\n        return Object.values(this._contents);\n    }\n\n    /**\n     * Positions the tooltip at the given x and y position.\n     * @param {number} x x position\n     * @param {number} y y position\n     * @return {Tooltip} Instance of tooltip.\n     */\n    position (x, y, conf = {}) {\n        if (!Object.keys(this._contents).length) {\n            this.hide();\n            return this;\n        }\n        this.show();\n        const target = this._target;\n        const repositionArrow = conf.repositionArrow;\n\n        if (target && repositionArrow) {\n            const node = this._tooltipContainer.node();\n            const config = this._config;\n            const arrowDisabled = config.arrow.disabled;\n            const arrowWidth = arrowDisabled ? 0 : config.arrow.size;\n            const arrowOrient = this._arrowOrientation;\n            const outsidePlot = arrowOrient === ARROW_LEFT || arrowOrient === ARROW_RIGHT ?\n                (y + node.offsetHeight - arrowWidth) < target.y || y > (target.y + target.height) :\n                (x + node.offsetWidth - arrowWidth) < target.x || x > (target.x + target.width);\n\n            if (!arrowDisabled) {\n                if (outsidePlot) {\n                    let path;\n                    this._tooltipArrow.style('display', 'none');\n                    this._tooltipBackground.style('display', 'none');\n                    this._tooltipConnectorContainer.style('display', 'block');\n                    const connector = this._tooltipConnectorContainer.selectAll('path').data([1]);\n                    const enter = connector.enter().append('path');\n                    if (arrowOrient === ARROW_LEFT) {\n                        path = `M ${x} ${y + node.offsetHeight / 2} L ${target.x + target.width}`\n                            + ` ${target.y + target.height / 2}`;\n                    } else if (arrowOrient === ARROW_RIGHT) {\n                        path = `M ${x + node.offsetWidth} ${y + node.offsetHeight / 2}`\n                                + ` L ${target.x} ${target.y + target.height / 2}`;\n                    } else if (arrowOrient === ARROW_BOTTOM) {\n                        path = `M ${x + node.offsetWidth / 2} ${y + node.offsetHeight}`\n                            + ` L ${target.x + target.width / 2} ${target.y}`;\n                    }\n                    enter.merge(connector).attr('d', path).style('display', 'block');\n                } else {\n                    const arrowPos = getArrowPos(arrowOrient, target, {\n                        x,\n                        y,\n                        boxHeight: node.offsetHeight,\n                        boxWidth: node.offsetWidth\n                    }, this._config);\n\n                    placeArrow(this, this._arrowOrientation, arrowPos);\n                    this._tooltipConnectorContainer.style('display', 'none');\n                }\n            }\n        }\n\n        const offset = this._offset || {\n            x: 0,\n            y: 0\n        };\n        this._tooltipContainer.style('left', `${offset.x + x}px`).style('top',\n            `${offset.y + y}px`);\n\n        return this;\n    }\n\n    /**\n     * Positions the tooltip relative to a rectangular box. It takes care of tooltip overflowing the\n     * boundaries.\n     * @param {Object} dim Dimensions of the plot.\n     */\n    positionRelativeTo (dim, tooltipConf = {}) {\n        let obj;\n        let orientation = tooltipConf.orientation;\n        this.show();\n        if (!dim) {\n            this.hide();\n            return this;\n        }\n\n        const extent = this._extent;\n        const node = this._tooltipContainer.node();\n\n        this._tooltipContainer.style('top', '0px')\n                        .style('left', '0px');\n        const offsetWidth = node.offsetWidth + 2;\n        const offsetHeight = node.offsetHeight + 2;\n        const config = this._config;\n        const offset = this._offset;\n        const arrowDisabled = config.arrow.disabled;\n        const arrowSize = arrowDisabled ? 0 : config.arrow.size;\n        const draw = tooltipConf.draw !== undefined ? tooltipConf.draw : true;\n        const topSpace = dim.y;\n        // When there is no space in right\n        const dimX = dim.x + dim.width + offset.x;\n        const rightSpace = extent.width - dimX;\n        const leftSpace = dim.x + offset.x - extent.x;\n        const positionTop = topSpace > (offsetHeight + arrowSize);\n        const positionRight = rightSpace >= offsetWidth + arrowSize;\n        const positionLeft = leftSpace >= offsetWidth + arrowSize;\n\n        const positionHorizontal = () => {\n            let position;\n            let x = dim.x + dim.width;\n            let y = dim.y;\n\n            if (positionRight) {\n                position = TOOLTIP_LEFT;\n                x += arrowSize;\n            } else if (positionLeft) {\n                x = dim.x - offsetWidth;\n                position = TOOLTIP_RIGHT;\n                x -= arrowSize;\n            } else {\n                position = 'left';\n                x += arrowSize;\n            }\n            if (dim.height < offsetHeight) {\n                y = Math.max(0, dim.y + dim.height / 2 - offsetHeight / 2);\n            }\n\n            const arrowPos = getArrowPos(position, dim, {\n                x,\n                y,\n                boxHeight: offsetHeight,\n                boxWidth: offsetWidth\n            }, this._config);\n\n            return {\n                position,\n                arrowPos,\n                x,\n                y\n            };\n        };\n\n        const positionVertical = () => {\n            let position;\n            let y;\n            // Position tooltip at the center of plot\n            let x = dim.x - offsetWidth / 2 + dim.width / 2;\n\n            // Overflows to the right\n            if ((extent.width - (dim.x + offset.x)) < offsetWidth) {\n                x = extent.width - offsetWidth - offset.x;\n            } else if ((x + offset.x) < extent.x) { // Overflows to the left\n                x = extent.x;\n            }\n\n            if (positionTop) {\n                y = dim.y - offsetHeight - arrowSize;\n                position = TOOLTIP_BOTTOM;\n            } else {\n                y = dim.y + dim.height + arrowSize;\n                position = TOOLTIP_TOP;\n            }\n\n            const arrowPos = getArrowPos(position, dim, {\n                x,\n                y,\n                boxHeight: offsetHeight,\n                boxWidth: offsetWidth\n            }, this._config);\n\n            return {\n                position,\n                arrowPos,\n                x,\n                y\n            };\n        };\n\n        this._target = dim;\n        if (!orientation) {\n            if (positionTop) {\n                orientation = 'vertical';\n            } else if (positionRight || positionLeft) {\n                orientation = 'horizontal';\n            } else {\n                orientation = 'vertical';\n            }\n        }\n\n        if (orientation === 'horizontal') {\n            obj = positionHorizontal();\n        } else if (orientation === 'vertical') {\n            obj = positionVertical();\n        }\n\n        this._position = {\n            x: obj.x,\n            y: obj.y\n        };\n\n        this._arrowPos = obj.arrowPos;\n        if (!arrowDisabled) {\n            placeArrow(this, obj.position, obj.arrowPos);\n        } else {\n            this._tooltipArrow.style('display', 'none');\n            this._tooltipBackground.style('display', 'none');\n        }\n        this._arrowOrientation = obj.position;\n        draw && this.position(obj.x, obj.y);\n        return this;\n    }\n\n    /**\n     * Hides the tooltip element.\n     * @return {Tooltip} Instance of tooltip.\n     */\n    hide () {\n        this._tooltipContainer.style('display', 'none');\n        this._tooltipConnectorContainer.style('display', 'none');\n        return this;\n    }\n\n    /**\n     * Shows the tooltip element.\n     * @return {Tooltip} Instance of tooltip.\n     */\n    show () {\n        this._tooltipContainer.style('display', 'block');\n        return this;\n    }\n\n    extent (extent) {\n        this._extent = extent;\n        return this;\n    }\n\n    offset (offset) {\n        this._offset = offset;\n        return this;\n    }\n\n    remove () {\n        this._tooltipContainer.remove();\n        this._tooltipBackground.remove();\n        this._tooltipConnectorContainer.remove();\n        return this;\n    }\n}\n","import { FieldType } from 'muze-utils';\n\nexport const strategies = {\n    showSelectedItems: (dm) => {\n        const dataObj = dm.getData();\n        const measures = dataObj.schema.filter(d => d.type === FieldType.MEASURE);\n        const aggregatedModel = dm.groupBy([''], measures.reduce((acc, v) => {\n            acc[v.name] = v.defAggFn === 'count' ? 'sum' : v.defAggFn;\n            return acc;\n        }, {}));\n        const fieldsObj = dm.getFieldspace().fieldsObj();\n        const fieldsConf = aggregatedModel.getFieldsConfig();\n        let values = [{\n            value: `${dataObj.data.length}`,\n            style: {\n                'font-weight': 'bold'\n            }\n        }, 'Items Selected'];\n        const measureNames = measures.map(d => d.name);\n        if (measureNames.length) {\n            values = [...values, ...[`(${fieldsObj[measureNames[0]].defAggFn().toUpperCase()}) ${measureNames[0]}`,\n                {\n                    value: `${aggregatedModel.getData().data[0][fieldsConf[measureNames[0]].index].toFixed(2)}`,\n                    style: {\n                        'font-weight': 'bold'\n                    }\n                }]];\n        }\n        return [values];\n    }\n};\n","import { Tooltip as TooltipRenderer } from '@chartshq/muze-tooltip';\nimport { FieldType } from 'muze-utils';\nimport { spaceOutBoxes } from '../helper';\nimport { strategies } from './strategies';\nimport { FRAGMENTED } from '../../enums/constants';\nimport SpawnableSideEffect from '../spawnable';\n\nimport './styles.scss';\n\nexport default class Tooltip extends SpawnableSideEffect {\n    constructor (...params) {\n        super(...params);\n        this._tooltips = {};\n        this._strategies = strategies;\n        this._strategy = 'default';\n    }\n\n    static defaultConfig () {\n        return {\n            padding: 5,\n            offset: {\n                x: 0,\n                y: 0\n            }\n        };\n    }\n\n    static formalName () {\n        return 'tooltip';\n    }\n\n    apply (selectionSet, payload, options = {}) {\n        let totalHeight = 0;\n        let totalWidth = 0;\n        const dataModel = selectionSet.mergedEnter.model;\n        const context = this.firebolt.context;\n        const drawingInf = this.drawingContext();\n        if ((dataModel.isEmpty() || payload.criteria === null) || selectionSet.isSourceFieldPresent === false) {\n            this.hide(options, null);\n            return this;\n        }\n\n        const tooltips = this._tooltips;\n        const config = this.config();\n        const boundBox = {\n            width: drawingInf.width,\n            height: drawingInf.height\n        };\n        const showInPosition = payload.showInPosition;\n        const pad = config.padding;\n        const dataModels = [];\n        const fragmented = config.mode === FRAGMENTED;\n        const sourceInf = context.getSourceInfo();\n        const fields = sourceInf.fields;\n        const xFieldDim = fields.x[0] ? fields.x[0].type() === FieldType.DIMENSION : false;\n        const showVertically = !!xFieldDim;\n        const tooltipPos = payload.position;\n        const boxes = [];\n        const enter = {};\n        const uids = dataModel.getData().uids;\n        if (fragmented) {\n            dataModels.push(...uids.map(d => dataModel.select((fieldsArr, i) => i === d, {\n                saveChild: false\n            })));\n        } else {\n            dataModels.push(dataModel);\n        }\n\n        let target = payload.target;\n        let targetFields = [];\n        if (target) {\n            targetFields = target[0] || [];\n            const sourceFields = payload.sourceFields;\n            const indices = [];\n            for (let i = 0, len = targetFields.length; i < len; i++) {\n                if (sourceFields.indexOf(targetFields[i]) !== -1) {\n                    indices.push(i);\n                }\n            }\n            target = target.map(d => d.filter((v, i) => indices.indexOf(i) !== -1));\n        }\n\n        const plotDimensions = context.getPlotPointsFromIdentifiers(target || payload.criteria, {\n            getBBox: true\n        });\n\n        // Show tooltip for each datamodel\n        for (let i = 0; i < dataModels.length; i++) {\n            let plotDim = plotDimensions[i];\n            if (fragmented) {\n                const dimensions = dataModels[i].getData().schema.filter(d => d.type === FieldType.DIMENSION)\n                    .map(d => d.name);\n                plotDim = context.getPlotPointsFromIdentifiers(dataModels[i].project(dimensions), { getBBox: true });\n                plotDim = plotDim && plotDim[0];\n            }\n\n            let dt = dataModels[i];\n            if (config.fields) {\n                dt = dt.project(config.fields, {\n                    saveChild: false\n                });\n            }\n            if (config.dataTransform) {\n                dt = config.dataTransform(dt, i);\n            }\n\n            enter[i] = true;\n            const { parentContainer: layoutContainer, parentContainerDimensions } = drawingInf;\n            const layoutBoundBox = layoutContainer.getBoundingClientRect();\n            const unitBoundBox = drawingInf.htmlContainer.getBoundingClientRect();\n\n            const offsetLeft = unitBoundBox.left - layoutBoundBox.left;\n            const offsetTop = unitBoundBox.top - layoutBoundBox.top;\n            const tooltipInst = tooltips[i] = tooltips[i] || new TooltipRenderer(layoutContainer,\n                    drawingInf.svgContainer);\n\n            sourceInf.payload = payload;\n            sourceInf.firebolt = this.firebolt;\n            sourceInf.detailFields = context.detailFields();\n            sourceInf.timeDiffs = context.timeDiffsByField();\n            sourceInf.valueParser = context.valueParser();\n            tooltipInst.context(sourceInf);\n            const strategy = strategies[options.strategy];\n            tooltipInst.content(options.strategy || this._strategy, dt, {\n                formatter: strategy,\n                order: options.order\n            })\n                            .config(this.config())\n                            .extent({\n                                x: 0,\n                                y: 0,\n                                width: parentContainerDimensions.width,\n                                height: parentContainerDimensions.height\n                            })\n                            .offset({\n                                x: offsetLeft + (config.offset.x || 0),\n                                y: offsetTop + (config.offset.y || 0)\n                            });\n\n            if (showInPosition) {\n                tooltipInst.position(tooltipPos.x + pad, tooltipPos.y + pad);\n            } else if (plotDim) {\n                tooltipInst.positionRelativeTo({\n                    x: plotDim.x,\n                    y: plotDim.y,\n                    width: plotDim.width || 0,\n                    height: plotDim.height || 0\n                }, {\n                    orientation: fragmented ?\n                        (showVertically ? 'horizontal' : 'vertical') : undefined\n                });\n            } else {\n                tooltipInst.hide();\n                break;\n            }\n\n            if (fragmented) {\n                const position = tooltipInst._position;\n                const tooltipBoundBox = tooltipInst._tooltipContainer.node().getBoundingClientRect();\n\n                totalHeight += tooltipBoundBox.height + pad;\n                totalWidth += tooltipBoundBox.width + pad;\n                if (showVertically ? totalHeight > drawingInf.height : totalWidth > drawingInf.width) {\n                    break;\n                }\n                boxes.push({\n                    x: position.x,\n                    y: position.y,\n                    width: tooltipBoundBox.width,\n                    height: tooltipBoundBox.height,\n                    tooltip: tooltipInst\n                });\n            }\n        }\n\n        for (const key in tooltips) {\n            if (!enter[key]) {\n                const tooltip = tooltips[key];\n                tooltip.content(payload.action, null);\n                if (!tooltip.getContents().length) {\n                    tooltip.remove();\n                    delete tooltips[key];\n                }\n            }\n        }\n        if (fragmented) {\n            spaceOutBoxes(boxes, boundBox, showVertically);\n            boxes.forEach(box => box.tooltip.position(box.x, box.y, {\n                repositionArrow: true\n            }));\n        }\n        return this;\n    }\n\n    hide (options) {\n        const tooltips = this._tooltips;\n        for (const key in tooltips) {\n            if ({}.hasOwnProperty.call(tooltips, key)) {\n                const strategy = options.strategy || this._strategy;\n                tooltips[key].content(strategy, null);\n                tooltips[key].hide();\n            }\n        }\n    }\n}\n","export const spaceOutBoxes = (boxes, extent, showVertically) => {\n    let y;\n    let height;\n    let x;\n    let width;\n    let i;\n    const pad = 5;\n    const len = boxes.length;\n    const spaceOutIfOverlap = (firstBox, secondBox, opposite) => {\n        x = firstBox.x;\n        width = firstBox.width;\n        y = firstBox.y;\n        height = firstBox.height;\n        const bottom = y + height;\n        const right = x + width;\n\n        if (showVertically) {\n            if (opposite ? y < (secondBox.y + secondBox.height) : bottom > secondBox.y) {\n                secondBox.y = opposite ? firstBox.y - secondBox.height - pad :\n                        bottom + pad;\n            }\n        } else if (opposite ? x < (secondBox.x + secondBox.width) : right > secondBox.x) {\n            secondBox.x = opposite ? firstBox.x - secondBox.width - pad :\n                    right + pad;\n        }\n    };\n\n    boxes.sort((a, b) => (showVertically ? a.y - b.y : a.x - b.x));\n    i = 0;\n\n    for (i = 0; i < len - 1; i++) {\n        spaceOutIfOverlap(boxes[i], boxes[i + 1]);\n    }\n\n    if ((boxes[i].y + boxes[i].height) > extent.height ||\n            (boxes[i].x + boxes[i].width) > extent.width) {\n        if (showVertically) {\n            boxes[i].y -= (boxes[i].height + boxes[i].y) - extent.height;\n        } else {\n            boxes[i].x -= (boxes[i].width + boxes[i].x) - extent.width;\n        }\n        for (i = len - 1; i > 0; i--) {\n            spaceOutIfOverlap(boxes[i], boxes[i - 1], true);\n        }\n    }\n    return boxes;\n}\n;\n","import { selectElement, FieldType } from 'muze-utils';\n\nimport './styles.scss';\nimport { CLASSPREFIX } from '../../enums/constants';\nimport SpawnableSideEffect from '../spawnable';\n\nexport default class Crossline extends SpawnableSideEffect {\n    static defaultConfig () {\n        return {\n            className: `${CLASSPREFIX}-crossline-group`,\n            bandClass: `${CLASSPREFIX}-crossband`,\n            lineClass: `${CLASSPREFIX}-crossline`\n        };\n    }\n\n    static formalName () {\n        return 'crossline';\n    }\n\n    apply (selectionSet, payload) {\n        let height;\n        let bandWidth;\n        let px;\n        let width;\n        const {\n            className,\n            bandClass,\n            lineClass\n        } = this.config();\n        const dataModel = selectionSet.mergedEnter.model;\n        const drawingInf = this.drawingContext();\n        if (payload.criteria && dataModel && dataModel.isEmpty()) {\n            return this;\n        }\n        if (payload.criteria === null || !dataModel) {\n            this.hide();\n            return this;\n        }\n\n        const dataObj = dataModel.getData();\n        const sourceInf = this.firebolt.context.getSourceInfo();\n        const axes = sourceInf.axes;\n        const axisFields = sourceInf.fields;\n        const fields = selectionSet.fields;\n        const data = dataObj.data;\n        const fieldsConfig = dataModel.getFieldsConfig();\n        const svgContainer = drawingInf.sideEffectGroup;\n\n        const elemData = [];\n        fields.forEach((field) => {\n            const fieldIndex = fieldsConfig[field] && fieldsConfig[field].index;\n            const dataArr = data.map(d => d[fieldIndex]);\n            const axisIndex = [['x', 0], ['x', 1], ['y', 0], ['y', 1]].find((arr) => {\n                const fieldInst = axisFields[arr[0]][arr[1]];\n                return fieldInst && fieldInst.type() === FieldType.DIMENSION &&\n                    fieldInst.getMembers().indexOf(field) !== -1;\n            });\n            if (axisIndex !== undefined && data.length) {\n                const type = axisIndex[0];\n                const axis = axes[type][axisIndex[1]];\n                const value = dataArr[0];\n                bandWidth = axis.getUnitWidth() || 0;\n                px = axis.getScaleValue(value) + bandWidth / 2 + drawingInf.xOffset;\n                const plotWidth = Math.max(...this.firebolt.context.layers().map(layer => layer.getPlotSpan()[type]));\n                const pad = Math.max(...this.firebolt.context.layers().map(layer => layer.getPlotPadding()[type]));\n                height = drawingInf.height;\n                width = drawingInf.width;\n                const startPx = px - plotWidth / 2 - pad / 2;\n                const endPx = px + plotWidth / 2 + pad / 2;\n                const dataPoint = {};\n                if (type === 'y') {\n                    dataPoint.d = `M 0 ${startPx} L 0 ${endPx} L ${width} ${endPx} L ${width} ${startPx} Z`;\n                } else {\n                    dataPoint.d = `M ${startPx} 0 L ${endPx} 0 L ${endPx} ${height} L ${startPx} ${height} Z`;\n                }\n                dataPoint.className = plotWidth ? bandClass : lineClass;\n                elemData.push(dataPoint);\n            }\n        });\n        if (elemData.length) {\n            const parentGroup = this.createElement(svgContainer, 'g', [1], className);\n            const elem = this.createElement(parentGroup, 'path', elemData);\n            elem.attr('d', d => d.d).style('pointer-events', 'none')\n                            .attr('class', d => d.className);\n        }\n        return this;\n    }\n\n    hide () {\n        const className = this.config().className;\n        const drawingInf = this.drawingContext();\n        selectElement(drawingInf.sideEffectGroup).selectAll(`.${className}`).remove();\n    }\n}\n","const fadeFn = (set, context, strategy) => {\n    const {\n        mergedEnter,\n        mergedExit,\n        exitSet,\n        completeSet\n    } = set;\n\n    if (!mergedEnter.length && !mergedExit.length) {\n        context.applyInteractionStyle(completeSet, {}, strategy, false);\n    } else {\n        context.applyInteractionStyle(exitSet[1], {}, strategy, true);\n        context.applyInteractionStyle(mergedEnter, {}, strategy, false);\n    }\n};\n\nexport const strategies = {\n    fade: fadeFn,\n    focus: (set, context) => {\n        const {\n            mergedEnter,\n            mergedExit,\n            completeSet\n        } = set;\n        if (!mergedEnter.length && !mergedExit.length) {\n            context.applyInteractionStyle(completeSet, {}, 'focus', false);\n        } else {\n            context.applyInteractionStyle(mergedExit, {}, 'focus', true);\n            context.applyInteractionStyle(mergedEnter, {}, 'focus', false);\n        }\n    },\n    highlight: (set, context) => {\n        const {\n            mergedEnter,\n            mergedExit,\n            entrySet,\n            exitSet,\n            completeSet\n        } = set;\n        if (!mergedEnter.length && !mergedExit.length) {\n            context.applyInteractionStyle(completeSet, {}, 'highlight', false);\n        } else {\n            context.applyInteractionStyle(entrySet[1], {}, 'highlight', true);\n            context.applyInteractionStyle(exitSet[1], {}, 'highlight', false);\n        }\n    }\n};\n","import SurrogateSideEffect from '../surrogate';\nimport { strategies } from './strategy';\n\nexport default class PlotHighlighter extends SurrogateSideEffect {\n    constructor (...params) {\n        super(...params);\n        this._strategy = 'highlight';\n        this._strategies = strategies;\n    }\n\n    static formalName () {\n        return 'highlighter';\n    }\n\n    static target () {\n        return 'visual-unit';\n    }\n\n    apply (selectionSet, payload, options = {}) {\n        const strategy = this._strategies[options.strategy || this._strategy];\n\n        if (selectionSet.isSourceFieldPresent !== false) {\n            strategy(selectionSet, this, options.strategy || this._strategy);\n        }\n\n        return this;\n    }\n}\n","import SurrogateSideEffect from '../surrogate';\n\nexport default class FilterEffect extends SurrogateSideEffect {\n    static formalName () {\n        return 'filter';\n    }\n\n    static target () {\n        return 'visual-unit';\n    }\n\n    static mutates () {\n        return true;\n    }\n\n    apply (selectionSet, payload) {\n        const context = this.firebolt.context;\n        const entryModel = selectionSet.mergedEnter.model;\n        if (payload.criteria === null) {\n            context.clearCaching().resetData();\n        } else {\n            context.enableCaching().data(entryModel);\n        }\n        return this;\n    }\n}\n","import { DataModel, STATE_NAMESPACES, getObjProp } from 'muze-utils';\nimport { CLASSPREFIX } from '../../enums/constants';\nimport SpawnableSideEffect from '../spawnable';\n\nimport './styles.scss';\n\nconst addLayer = (layerDefs, layerRegistry, context, sideEffect) => {\n    const layers = [];\n    if (layerDefs) {\n        layerDefs.forEach((layerDef) => {\n            const mark = layerDef.mark;\n            const layerCls = layerRegistry[mark];\n            if (layerCls && layerCls.shouldDrawAnchors()) {\n                const depLayerEncoding = layerDef.def.encoding;\n                const encoding = {\n                    x: getObjProp(depLayerEncoding, 'x', 'field'),\n                    y: getObjProp(depLayerEncoding, 'y', 'field'),\n                    color: getObjProp(depLayerEncoding, 'color', 'field'),\n                    size: {\n                        field: getObjProp(depLayerEncoding, 'size', 'field'),\n                        value: sideEffect.defaultSizeValue()\n                    }\n                };\n                const name = `${layerDef.def.name}-${sideEffect.constructor.formalName()}`;\n                const layerObj = {\n                    instances: context.addLayer({\n                        name,\n                        mark: 'point',\n                        className: sideEffect.constructor.defaultConfig().className,\n                        encoding,\n                        transform: {\n                            type: 'identity'\n                        },\n                        transition: sideEffect.getTransitionConfig(),\n                        calculateDomain: false,\n                        source: dm => dm.select(() => false, {\n                            saveChild: false\n                        }),\n                        interactive: false,\n                        render: false\n                    }),\n                    linkedLayer: layerDef.def.name\n                };\n                layers.push(layerObj);\n            }\n        });\n    }\n    return layers;\n};\n\nexport default class AnchorEffect extends SpawnableSideEffect {\n    constructor (...params) {\n        super(...params);\n        this._layersMap = {};\n        this.addAnchorLayers();\n    }\n\n    static target () {\n        return 'visual-unit';\n    }\n\n    static defaultConfig () {\n        return {\n            className: `${CLASSPREFIX}-anchors-group`\n        };\n    }\n\n    static formalName () {\n        return 'anchors';\n    }\n\n    addAnchorLayers () {\n        const context = this.firebolt.context;\n        const metaInf = context.metaInf();\n        const layerRegistry = context.registry().layerRegistry;\n        const layerDefsVal = context.layerDef();\n        context.store().registerImmediateListener(\n            `${STATE_NAMESPACES.UNIT_LOCAL_NAMESPACE}.${metaInf.namespace}.layerDef`, ([, layerDefs]) => {\n                this._layers = addLayer(layerDefs, layerRegistry, context, this);\n            });\n        this._layers = addLayer(layerDefsVal, layerRegistry, context, this);\n        return this;\n    }\n\n    getTransitionConfig () {\n        return {\n            disabled: true\n        };\n    }\n\n    /**\n     * Returns the default area value of the anchor point.\n     * @return { number } Default area value of anchor.\n     */\n    defaultSizeValue () {\n        return 100;\n    }\n\n    apply (selectionSet) {\n        const self = this;\n        const dataModel = selectionSet.mergedEnter.model;\n        if (selectionSet.isSourceFieldPresent !== false) {\n            const drawingInf = this.drawingContext();\n            const sideEffectGroup = drawingInf.sideEffectGroup;\n            const className = `${this.config().className}`;\n            const layers = this._layers;\n            const parentGroup = this.createElement(sideEffectGroup, 'g', [1], `${className}-container`);\n            const anchorGroups = this.createElement(parentGroup, 'g', Object.values(layers));\n            anchorGroups.each(function (layer) {\n                const instances = layer.instances;\n                const elems = self.createElement(this, 'g', instances, className);\n                const linkedLayer = self.firebolt.context.getLayerByName(layer.linkedLayer);\n                const [transformedData, schema] = linkedLayer.getTransformedDataFromIdentifiers(dataModel);\n                const transformedDataModel = new DataModel(transformedData, schema);\n                elems.each(function (d, i) {\n                    instances[i].data(transformedDataModel).mount(this);\n                });\n            });\n        }\n        return this;\n    }\n}\n","import AnchorEffect from './anchors';\nimport { CLASSPREFIX } from '../enums/constants';\n\nexport default class PersistentAnchors extends AnchorEffect {\n    static formalName () {\n        return 'persistent-anchors';\n    }\n\n    static defaultConfig () {\n        return {\n            className: `${CLASSPREFIX}-persistent-anchors`\n        };\n    }\n\n    getTransitionConfig () {\n        return {\n            disabled: true\n        };\n    }\n}\n","import AnchorEffect from './anchors';\nimport { CLASSPREFIX } from '../enums/constants';\n\nexport default class BrushAnchors extends AnchorEffect {\n    static formalName () {\n        return 'brush-anchors';\n    }\n\n    static defaultConfig () {\n        return {\n            className: `${CLASSPREFIX}-brush-anchors`\n        };\n    }\n\n    getTransitionConfig () {\n        return {\n            disabled: true\n        };\n    }\n}\n","import * as BEHAVIOURS from './enums/behaviours';\n\nexport const behaviourEffectMap = {\n    [BEHAVIOURS.BRUSH]: ['selectionBox', {\n        name: 'highlighter',\n        options: {\n            strategy: 'fade'\n        }\n    }, 'brush-anchors'],\n    [`${BEHAVIOURS.BRUSH},${BEHAVIOURS.SELECT}`]: [{\n        name: 'tooltip',\n        options: {\n            strategy: 'showSelectedItems',\n            order: 0,\n            filter: context => context.config().mode === 'fragmented'\n        }\n    }],\n    [BEHAVIOURS.HIGHLIGHT]: [{\n        name: 'highlighter',\n        options: {\n            strategy: 'highlight'\n        }\n    }, 'crossline', {\n        name: 'tooltip',\n        options: {\n            order: 9999\n        }\n    }, 'anchors'],\n    [BEHAVIOURS.FILTER]: ['filter'],\n    [BEHAVIOURS.SELECT]: [{\n        name: 'highlighter',\n        options: {\n            strategy: 'focus'\n        }\n    }, 'persistent-anchors']\n};\n","export const CLASSPREFIX = 'muze';\nexport const STACK = 'stack';\nexport const GROUP = 'group';\nexport const IDENTITY = 'identity';\nexport const ANGLE = 'angle';\nexport const RADIUS = 'radius';\nexport const SIZE = 'size';\nexport const COLOR = 'color';\nexport const SHAPE = 'shape';\nexport const OUTER_RADIUS_VALUE = 'outerRadiusValue';\nexport const TEXT_ANCHOR_MIDDLE = 'middle';\nexport const ENCODING = {\n    X: 'x',\n    Y: 'y',\n    X0: 'x0',\n    Y0: 'y0'\n};\n\nexport const ASCENDING = 'asc';\n\nexport const AGG_FN_SUM = 'sum';\n\nexport const AREA_LAYER = 'area';\nexport const ARC_LAYER = 'arc';\nexport const LINE_LAYER = 'line';\nexport const TEXT_LAYER = 'text';\nexport const POINT_LAYER = 'point';\nexport const BAR_LAYER = 'bar';\nexport const TICK_LAYER = 'tick';\nexport const SIMPLE_LAYER = 'simple';\nexport const BASE_LAYER = 'base';\n","import { CLASSPREFIX, STACK } from '../../enums/constants';\n\nexport const defaultConfig = {\n    classPrefix: CLASSPREFIX,\n    defClassName: 'layer-area',\n    className: '',\n    interpolate: 'linear',\n    transform: {\n        type: STACK\n    },\n    interaction: {\n\n    },\n    nearestPointThreshold: 10,\n    encoding: {\n        color: {},\n        x: {},\n        y: {},\n        y0: {},\n        strokeOpacity: {\n            value: 1\n        }\n    },\n    transition: {\n        effect: 'cubic',\n        duration: 1000\n    },\n    connectNullData: false\n};\n","import { ERROR_MSG } from 'muze-utils';\n\n/**\n * This is an interface class which any new layer class has to extend.\n *\n * @example\n * class BarLayer extends BaseLayer {\n *   update (params) {\n *       // super.update(params);\n *       // Update the bar layer\n *   }\n * }\n * @class\n */\nexport default class SimpleLayer {\n\n    formalName () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    /**\n     * Sets or gets the dependencies.\n     * @param {Object} dependencies Dependencies needed by layer\n     * @return {BaseLayer} Instance of base layer.\n     */\n    dependencies () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    /**\n     * Returns the config of the layer\n     *\n     * @param {Object} config Configuration of layer\n     * @return {Object} configuration of layer\n     */\n    config () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    /**\n     * Acts as a getter or setter function\n     * When setter\n     * Returns the datamodel of the layer\n     * @param { DataModel } dataModel instance of DataModel\n     * @return { DataModel } DataModel instance of the layer\n     */\n    data () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    /**\n     * Returns a serialized schema of the layer\n     * @return {Object} Serialized schema\n     */\n    serialize () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    /**\n     * Returns the unique identifier of this layer\n     * @return {string} id of the layer\n     */\n    id () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n    /*\n     * This method resolves the x, y, x0 and y0 values from the transformed data.\n     * It also checks the type of transformed data for example, if it is a stacked data\n     * then it fetches the y and y0 values from the stacked data.\n     * @param {Array.<Array>} transformedData transformed data\n     * @param {Object} fieldMap field definitions\n     * @param {string} transformType type of transformed data - stack, group or identity.\n     * @return {Array.<Object>} Normalized data\n     * @private\n     */\n    normalizeTransformedData () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    /**\n     * Gets the transform method from transform factory based on type of transform. It then calls the\n     * transform method with the data and passes the configuration parameters of transform such as\n     * groupBy, value field, etc.\n     *\n     * @param {DataModel} dataModel Instance of dataModel\n     * @param {Object} config configuration for transforming data\n     * @return {Array.<Array>} Transformed data.\n     * @private\n     */\n    getTransformedData () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    /**\n     * Calculates the domain from the data.\n     * It checks the type of field and calculates the domain based on that. For example, if it\n     * is a quantitative or temporal field, then it calculates the min and max from the data or\n     * if it is a nominal field then it gets all the values from the data of that field.\n     * @param {Array} data DataArray\n     * @return {Array} Domain values array.\n     */\n    _calculateDomainFromData () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    /**\n     * Returns the domain for the axis.\n     *\n     * @param {string} encodingType type of encoding x, y, color, etc.\n     * @return {Object} Axis domains\n     */\n    getDomain () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    /**\n     * Abstract method for getting nearest point\n     * @return {BaseLayer} Instance of base layer\n     */\n    getNearestPoint () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    /**\n     * Abstract method for highlighting points\n     * @return {BaseLayer} Instance of base layer\n     */\n    highlightPoint () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    /**\n     * Abstract method for deselecting points\n     * @return {BaseLayer} Instance of base layer\n     */\n    dehighlightPoint () {\n        return this;\n    }\n\n    linkLayerStore () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    /**\n     * Sets the container element for the layer to be renderered.\n     * @param {SVGElement} mountPoint SVG element or group element.\n     */\n    mount () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    render () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n}\n","export const props = {\n    axes: {},\n    mount: {},\n    measurement: {},\n    metaInf: {},\n    data: {},\n    config: {},\n    valueParser: {\n        defaultValue: val => val\n    }\n};\n","/**\n * @module Axis\n * This file declares a class that is used to render an axis to add  meaning to\n * plots.\n */\nimport { Symbols } from 'muze-utils';\nimport * as AxisOrientation from '../enums/axis-orientation';\n\n/**\n * @module Axis\n * This file exports constants that are used to reference axis orientations\n * in a consistent manner.\n */\nexport const BOTTOM = 'bottom';\nexport const TOP = 'top';\nexport const LEFT = 'left';\nexport const RIGHT = 'right';\n\n/**\n  * This object is used to associate the axis orientation with the d3 class\n  * used to represent that axis.\n  */\nexport const axisOrientationMap = {\n    [AxisOrientation.LEFT]: Symbols.axisLeft,\n    [AxisOrientation.BOTTOM]: Symbols.axisBottom,\n    [AxisOrientation.RIGHT]: Symbols.axisRight,\n    [AxisOrientation.TOP]: Symbols.axisTop\n};\n","/**\n * @module axis\n * This file exports constants used to reference scale type\n * consistently throughout the project.\n */\nexport const LINEAR = 'linear';\nexport const BAND = 'band';\nexport const TIME = 'temporal';\nexport const COLOR = 'color';\nexport const ORDINAL = 'ordinal';\nexport const QUANTIZE = 'quantize';\nexport const QUANTILE = 'quantile';\nexport const LOG = 'log';\nexport const POW = 'pow';\nexport const IDENTITY = 'identity';\nexport const SEQUENTIAL = 'sequential';\nexport const THRESHOLD = 'threshold';\n","export const CLASSPREFIX = 'muze';\n\nexport const CONTINOUS = 'continous';\nexport const DISCRETE = 'discrete';\nexport const SEQUENTIAL = 'sequential';\nexport const ORDINAL = 'ordinal';\nexport const LINEAR = 'linear';\nexport const THRESHOLD = 'threshold';\nexport const QUANTIZE = 'quantize';\nexport const QUANTILE = 'quantile';\n\nexport const COLOR = 'color';\nexport const SHAPE = 'shape';\nexport const SIZE = 'size';\n\nexport const DOMAIN = 'domain';\nexport const BAND = 'band';\nexport const HIDDEN = 'hidden';\nexport const NUMBER = 'number';\nexport const BOTTOM = 'bottom';\nexport const TOP = 'top';\n\nexport const RGB = 'rgb';\nexport const HEX = 'hex';\nexport const HSLA = 'hsla';\nexport const HSL = 'hsl';\n\n","import { scales, colorSchemes } from 'muze-utils';\n\nimport {\n    SEQUENTIAL,\n    ORDINAL,\n    LINEAR,\n    CONTINOUS,\n    THRESHOLD,\n    QUANTIZE\n} from './enums/constants';\n\nimport * as ScaleType from './enums/scale-type';\n\nconst {\n    scaleLinear,\n    scaleThreshold,\n    scaleLog,\n    scalePow,\n    scaleIdentity,\n    scaleOrdinal,\n    scaleSequential,\n    scaleQuantize,\n    scaleQuantile,\n    schemeCategory10,\n    schemeCategory20,\n    schemeCategory20b,\n    scaleBand,\n    scaleTime\n} = scales;\nexport const scaleMap = {\n    [ScaleType.LINEAR]: scaleLinear,\n    [ScaleType.BAND]: scaleBand,\n    [ScaleType.QUANTIZE]: scaleQuantize,\n    [ScaleType.QUANTILE]: scaleQuantile,\n    [ScaleType.THRESHOLD]: scaleThreshold,\n    [ScaleType.SEQUENTIAL]: scaleSequential,\n    [ScaleType.LOG]: scaleLog,\n    [ScaleType.POW]: scalePow,\n    [ScaleType.IDENTITY]: scaleIdentity,\n    [ScaleType.TIME]: scaleTime,\n    [ScaleType.COLOR]: scaleLinear,\n    [ScaleType.ORDINAL]: scaleOrdinal\n};\nexport const SCHEMES = {\n    SCHEME1: schemeCategory10,\n    SCHEME2: schemeCategory20,\n    SCHEME3: schemeCategory20b\n};\n\n/**\n * Accepts a scheme in a string format and returns the scale from d3-scale-chromatic\n *\n * @export\n * @param {string} scheme a string representing the kind of scheme for the color axis\n * @return {Object} The corresponding scale from a scheme type from d3 chromatic scale\n */\nexport function getScheme (scheme) {\n    if (scheme[0] === 'i') {\n        return scaleSequential(colorSchemes[scheme]);\n    }\n    return scaleOrdinal(colorSchemes[scheme]);\n}\n\n/**\n *\n *\n * @export\n * @param {*} scheme\n *\n */\nexport function getSchemeType (scheme) {\n    let schemeType = '';\n    if (scheme && typeof (scheme) === 'string') {\n        schemeType = scheme[0] === 'i' ? SEQUENTIAL : ORDINAL;\n    } else {\n        schemeType = ORDINAL;\n    }\n    return schemeType;\n}\n\n/**\n * This function is used to create a scale that is assigned to\n * an instance of axis.\n *\n * @export\n * @param {Object} params the input parameters to create a Scale object\n * @param {string} params.type the type of scale\n * @param {Array} params.range the range of scale\n * @return {Object} instance of scale\n */\nexport function createScale (params) {\n    if (!params.type || !scaleMap[params.type]) {\n        throw new Error(`${params.type} is not a valid scale type`);\n    }\n    if (!Array.isArray(params.range)) {\n        throw new Error('range parameter must be an array');\n    }\n    let scaleFactory = null;\n    const range = params.range;\n    // @todo: do it using scale decorator\n    if (params.type === LINEAR && params.interpolator) {\n        scaleFactory = scaleMap[params.interpolator];\n        if (params.interpolator === ScaleType.POW) {\n            return scaleFactory().range(range).exponent(params.exponent);\n        } else if (params.interpolator === ScaleType.LOG) {\n            return scaleFactory().range(range).base([params.base]);\n        }\n    } else {\n        scaleFactory = scaleMap[params.type];\n    }\n\n    if (params.type === QUANTIZE) {\n        scaleFactory().nice();\n    }\n    return scaleFactory().range(range);\n}\n\n/**\n * This method is used to update the range of a scale\n * so that the core module can remain agnostic of the d3\n * scale api.\n *\n * @export\n * @param {Scale} scale Instance of d3 Scale.\n * @param {Array} range new range of the scale.\n * @return {Scale} Updated scale.\n */\nexport function updateScaleRange (scale, range) {\n    return scale.range(range);\n}\n\n/**\n *\n *\n * @export\n * @param {*} domainType\n * @param {*} rangeType\n * @param {*} steps\n *\n */\nexport function getScaleType (domainType, rangeType, steps) {\n    if (rangeType === CONTINOUS) {\n        return LINEAR;\n    }\n    if (domainType === CONTINOUS) {\n        if (steps instanceof Array) {\n            return THRESHOLD;\n        }\n        return QUANTIZE;\n    }\n    return ORDINAL;\n}\n","import { getUniqueId } from 'muze-utils';\nimport { CLASSPREFIX } from '../enums/constants';\n\n/**\n *\n *\n */\nexport const defaultConfig = {\n    id: getUniqueId(),\n    axisName: {\n        defClassName: 'axis-name'\n    },\n    axisNamePadding: 12,\n    base: 10,\n    classPrefix: CLASSPREFIX,\n    className: `${CLASSPREFIX}-axis`,\n    exponent: 1,\n    interpolator: 'linear',\n    fixedBaseline: true,\n    labels: {\n        rotation: null,\n        smartTicks: null\n    },\n    orientation: 'left',\n    numberFormat: val => val,\n    padding: 0.3,\n    nice: true,\n    numberOfTicks: 10,\n    rotate: false,\n    show: true,\n    showAxisName: true,\n    showInnerTicks: true,\n    showOuterTicks: true,\n    style: {},\n    type: 'linear',\n    tickFormat: null,\n    tickValues: null,\n    xOffset: 0,\n    yOffset: 0\n};\n\n","/**\n * This file exports functionality that is used to render axis.\n */\nimport { selectElement, makeElement, angleToRadian } from 'muze-utils';\nimport * as AxisOrientation from './enums/axis-orientation';\nimport { LINEAR, HIDDEN, BOTTOM, TOP } from './enums/constants';\n\n/**\n *\n *\n * @param {*} instance\n * @param {*} container\n * @param {*} labelManager\n * @param {*} config\n */\nconst rotateAxis = (instance, tickText, labelManager) => {\n    let rotation;\n    const axis = instance.axis();\n    const config = instance.config();\n    const renderConfig = instance.renderConfig();\n    const smartTicks = instance.smartTicks();\n    const scale = axis.scale();\n    const labelFunc = scale.ticks || scale.quantile || scale.domain;\n    const ticks = labelFunc();\n    const {\n        orientation,\n        fixedBaseline,\n        type\n    } = config;\n    const {\n        labels\n    } = renderConfig;\n\n    rotation = labels.rotation;\n\n    const tickSize = instance.getTickSize();\n    tickText.each(function (d, index) {\n        let yShift;\n        let xShift;\n        let datum = smartTicks[index] ? smartTicks[index].text : d;\n\n        const tickFormatter = axis.tickFormat() ? axis.tickFormat : null;\n\n        const temp = tickSize ? (tickFormatter ? tickFormatter()(d) : datum) : '';\n\n        datum = temp.toString();\n\n        const tickLabelDim = labelManager.getOriSize(datum);\n\n        const width = tickLabelDim.width * 0.5;\n        const height = tickLabelDim.height * 0.5;\n\n        if (rotation < 0) {\n            rotation = 360 + rotation;\n        }\n\n        const quadrant = 4 - Math.floor(rotation / 90);\n        const rotationNormalizer = ((quadrant % 2 === 0) ? rotation : 180 * Math.ceil(rotation / 180) - rotation) % 180;\n\n        yShift = Math.sqrt(height ** 2 + width ** 2) * Math.sin(angleToRadian(rotationNormalizer));\n\n        if ((quadrant === 3 || quadrant === 2) && !(rotationNormalizer > 67.5 && rotationNormalizer <= 90)) {\n            yShift += height * 2;\n        }\n        xShift = width;\n\n        if (rotation === 90) {\n            xShift = height;\n        } else if (rotation === 270) {\n            xShift = -height;\n        } else {\n            xShift = 0;\n        }\n\n        if (orientation === AxisOrientation.TOP) {\n            xShift = (fixedBaseline && ticks[0] === d && type === LINEAR) ? xShift + xShift / 2 : xShift;\n            selectElement(this)\n                            .attr('transform', `translate(${-xShift + tickSize}\n                                ${-yShift - tickSize}) rotate(${rotation})`);\n        } else {\n            xShift = (fixedBaseline && ticks[0] === d && type === LINEAR) ? xShift - xShift / 2 : xShift;\n\n            selectElement(this)\n                            .attr('transform', `translate(${xShift - tickSize}\n                                ${yShift + tickSize}) rotate(${rotation})`);\n        }\n        selectElement(this).transition()\n                        .duration(1000).text(datum);\n    });\n    return tickText;\n};\n\n/**\n *\n *\n * @param {*} tickText\n * @param {*} axisInstance\n */\nconst changeTickOrientation = (selectContainer, axisInstance, tickSize) => {\n    const {\n        _smartTicks\n    } = axisInstance;\n    const config = axisInstance.config();\n    const renderConfig = axisInstance.renderConfig();\n    const labelManager = axisInstance.dependencies().labelManager;\n    const {\n        orientation,\n        classPrefix\n    } = config;\n    const {\n        labels\n    } = renderConfig;\n    const {\n        rotation,\n        smartTicks: isSmartTicks\n    } = labels;\n\n    const tickText = selectContainer.selectAll('.tick text');\n    tickText.selectAll('tspan').remove();\n\n   // rotate labels if not enough space is available\n    if (rotation && (orientation === TOP || orientation === BOTTOM)) {\n        rotateAxis(axisInstance, tickText, labelManager);\n    } else if (!rotation && !isSmartTicks) {\n        tickText.attr('transform', '');\n    } else {\n        tickText.text('');\n        if (orientation === TOP || orientation === BOTTOM) {\n            tickText.attr('y', 0)\n                            .attr('x', 0)\n                            .attr('transform', '')\n                            .text('');\n            const tspan = makeElement(tickText, 'tspan', (d, i) => {\n                if (_smartTicks[i]) {\n                    return _smartTicks[i].lines;\n                } return [];\n            }, `${classPrefix}-smart-text`);\n\n            tspan.attr('dy', '0')\n                            .style('opacity', '0')\n\n                            .transition()\n                            .duration(1000)\n                            .on('end', axisInstance.registerAnimationDoneHook())\n                            .attr('dy', (d, i) => {\n                                if (orientation === BOTTOM || i !== 0) {\n                                    return _smartTicks[0].oriTextHeight;\n                                }\n                                return -_smartTicks[0].oriTextHeight * (_smartTicks[0].lines.length - 1) - tickSize;\n                            })\n                            .style('opacity', 1)\n                            .text(e => e)\n                            .attr('x', 0);\n        } else {\n            const tspan = makeElement(tickText, 'tspan', (d, i) => _smartTicks[i].lines, `${classPrefix}-smart-text`);\n            tspan.text(e => e);\n        }\n    }\n\n    return tickText;\n};\n\nconst setFixedBaseline = (axisInstance) => {\n    const {\n        fixedBaseline\n    } = axisInstance.config();\n    const domain = axisInstance.domain();\n    if (fixedBaseline && domain.length) {\n        axisInstance.setFixedBaseline();\n    }\n};\n\n/**\n *\n *\n * @param {*} textNode\n * @param {*} orientation\n * @param {*} measures\n */\nconst setAxisNamePos = (textNode, orientation, measures) => {\n    const {\n        axisNameHeight,\n        yOffset,\n        labelOffset,\n        availableSpace\n    } = measures;\n    switch (orientation) {\n    case AxisOrientation.LEFT:\n        textNode.attr('transform',\n            `translate(${-(availableSpace.width - axisNameHeight)},${yOffset + labelOffset})rotate(-90)`);\n        break;\n    case AxisOrientation.RIGHT:\n        textNode.attr('transform',\n             `translate(${(availableSpace.width - axisNameHeight)},${yOffset + labelOffset})rotate(90)`);\n        break;\n    case AxisOrientation.TOP:\n        textNode.attr('transform',\n             `translate(${availableSpace.width / 2},${-availableSpace.height + axisNameHeight})`);\n        break;\n    case AxisOrientation.BOTTOM:\n        textNode.attr('transform',\n             `translate(${availableSpace.width / 2},${availableSpace.height - axisNameHeight / 2})`);\n        break;\n    default:\n    }\n    return textNode;\n};\n\n/**\n * This method is used to render the axis inside an\n * svg container.\n *\n * @export\n * @param {Object} axisInstance the nput object required to render axis\n * @param {string} axisInstance.orientation the orientation of axis\n * @param {Object} axisInstance.scale instance of d3 scale\n * @param {SVGElement} axisInstance.container the container in which to render\n */\nexport function renderAxis (axisInstance) {\n    const config = axisInstance.config();\n    const renderConfig = axisInstance.renderConfig();\n    const labelManager = axisInstance.dependencies().labelManager;\n    const mount = axisInstance.mount();\n    const range = axisInstance.range();\n    const axis = axisInstance.axis();\n    const scale = axisInstance.scale();\n    const {\n        _axisNameStyle: axisNameStyle,\n        _tickLabelStyle: tickLabelStyle,\n        _tickFormatter: axisTickFormatter,\n        tickValues\n     } = axisInstance;\n    const {\n        orientation,\n        name,\n        xOffset,\n        yOffset,\n        axisNamePadding,\n        className,\n        id,\n        classPrefix\n     } = config;\n    const {\n        show,\n        showAxisName,\n        labels\n    } = renderConfig;\n\n    if (!show) {\n        return;\n    }\n\n    const tickSize = axisInstance.getTickSize();\n\n    const selectContainer = makeElement(selectElement(mount), 'g', [axisInstance], `${className}`, {},\n        key => key.config().id);\n\n    // Set style for tick labels\n    labelManager.setStyle(tickLabelStyle);\n\n    const labelFunc = scale.ticks || scale.quantile || scale.domain;\n\n    axis.tickFormat(axisTickFormatter(tickValues || axis.tickValues() || labelFunc()));\n\n    // Get range(length of range)\n    const availableSpace = Math.abs(range[0] - range[1]);\n\n    // Get width and height taken by axis labels\n    const labelProps = axisInstance.axisComponentDimensions().largestTickDimensions;\n\n    // Draw axis ticks\n    selectContainer.attr('transform', `translate(${xOffset},${yOffset})`);\n    setFixedBaseline(axisInstance);\n    if (labels.smartTicks === false || tickSize === 0) {\n        selectContainer.transition()\n                        .duration(1000)\n                        .on('end', axisInstance.registerAnimationDoneHook())\n                        .call(axis);\n    } else {\n        selectContainer.call(axis);\n    }\n    selectContainer.selectAll('.tick').classed(`${classPrefix}-ticks`, true);\n    selectContainer.selectAll('.tick line').classed(`${classPrefix}-tick-lines`, true);\n\n    // Set classes for ticks\n    const tickText = selectContainer.selectAll('.tick text');\n    tickText.classed(`${classPrefix}-ticks`, true)\n                    .classed(`${classPrefix}-ticks-${id}`, true);\n\n    changeTickOrientation(selectContainer, axisInstance, tickSize);\n\n    // Create axis name\n    const textNode = makeElement(selectContainer, 'text', [name], `${classPrefix}-axis-name`)\n                    .attr('text-anchor', 'middle')\n                    .classed(`${classPrefix}-axis-name-${id}`, true)\n                    .text(d => d);\n\n    // Hide axis name if show is off\n    textNode.classed(HIDDEN, !showAxisName);\n\n     // render labels based on orientation of axis\n    const labelOffset = availableSpace / 2;\n\n    // Set style for axis name\n    labelManager.setStyle(axisNameStyle);\n    const axisNameSpace = labelManager.getOriSize(name);\n    const measures = {\n        labelProps,\n        tickSize,\n        axisNamePadding,\n        axisNameHeight: axisNameSpace.height,\n        axisNameWidth: axisNameSpace.width,\n        yOffset,\n        xOffset,\n        labelOffset,\n        availableSpace: axisInstance.availableSpace()\n    };\n    // Set position for axis name\n    setAxisNamePos(textNode, orientation, measures);\n}\n","import { BOTTOM, TOP } from '../enums/axis-orientation';\n\nconst setAxisRange = (context, type, rangeBounds, offset) => {\n    context.range(rangeBounds);\n    offset && context.config({ [`${type}Offset`]: offset });\n};\n\nconst getAxisOffset = (timeDiff, range, domain) => {\n    const pvr = Math.abs(range[1] - range[0]) / (domain[1] - domain[0]);\n    const width = (pvr * timeDiff);\n    const avWidth = (range[1] - range[0]);\n    const bars = avWidth / width;\n    const barWidth = avWidth / (bars + 1);\n    const diff = avWidth - barWidth * bars;\n\n    return diff / 2;\n};\n\nexport const adjustRange = (minDiff, range, domain, orientation) => {\n    const diff = getAxisOffset(minDiff, range, domain);\n\n    if (orientation === TOP || orientation === BOTTOM) {\n        range[0] += diff;\n        range[1] -= diff;\n    } else {\n        range[0] -= diff;\n        range[1] += diff;\n    }\n    return range;\n};\n\nexport const spaceSetter = (context, spaceConfig) => {\n    let tickInterval;\n    let heightForTicks;\n    const {\n        width: availWidth,\n        height: availHeight,\n        padding\n    } = context.availableSpace();\n    const {\n        top,\n        left,\n        bottom,\n        right\n    } = padding;\n    const {\n        isOffset\n    } = spaceConfig;\n    const {\n        showAxisName,\n        labels\n    } = context.renderConfig();\n    const {\n        rotation\n    } = labels;\n    const {\n        orientation,\n        fixedBaseline,\n        axisNamePadding,\n        tickValues\n    } = context.config();\n    const {\n        tickDimensions,\n        allTickDimensions,\n        axisNameDimensions,\n        tickSize\n    } = context.getAxisDimensions();\n    const {\n        height: tickDimHeight,\n        width: tickDimWidth\n    } = tickDimensions;\n    const namePadding = showAxisName ? axisNamePadding : 0;\n    const labelConfig = { smartTicks: true, rotation: labels.rotation };\n    const minTickDistance = context._minTickDistance;\n    const minTickSpace = context._minTickSpace;\n    const minDiff = context._minDiff;\n    const domain = context.domain();\n    const axisNameHeight = axisNameDimensions.height;\n\n    return {\n        time: {\n            x: () => {\n                const tickShifter = tickDimWidth / 2;\n\n                setAxisRange(context, 'y', adjustRange(minDiff,\n                    [tickShifter, availWidth - left - right - tickShifter], domain, orientation),\n                        isOffset ? availHeight : null);\n\n                tickInterval = ((availWidth) / context.getTickValues().length)\n                                     - minTickDistance.width;\n\n                heightForTicks = availHeight - axisNameDimensions.availHeight - tickSize - namePadding;\n\n                if (tickInterval < minTickSpace.width && rotation !== 0) {\n                    // set smart ticks and rotation config\n                    labelConfig.rotation = labels.rotation === null ? -90 : rotation;\n\n                    // Remove ticks if not enough height\n                    if (tickInterval < minTickSpace.height) {\n                        heightForTicks = availHeight;\n                        tickInterval = minTickSpace.height;\n                        context.renderConfig({ showInnerTicks: false, showOuterTicks: false });\n                    }\n                }\n                if (availHeight < axisNameHeight) {\n                    context.renderConfig({ show: false });\n                }\n\n                context.maxTickSpaces({\n                    width: tickInterval,\n                    height: heightForTicks,\n                    noWrap: rotation !== null\n                });\n                return labelConfig;\n            },\n            y: () => {\n                let widthForTicks = availWidth;\n                const tickShifter = tickDimHeight / 2;\n\n                setAxisRange(context, 'x', adjustRange(minDiff,\n                    [availHeight - top - bottom - tickShifter, tickShifter], domain, orientation),\n                        isOffset ? availWidth : null);\n\n                if ((availWidth - axisNameHeight - namePadding) <= minTickDistance.width) {\n                    widthForTicks = 0;\n                    context.renderConfig({ showInnerTicks: false, showOuterTicks: false });\n                }\n\n                context.maxTickSpaces({\n                    width: widthForTicks,\n                    height: availHeight,\n                    noWrap: true\n                });\n                if (availWidth < axisNameHeight) {\n                    context.renderConfig({ show: false });\n                }\n                return labelConfig;\n            }\n        },\n        band: {\n            x: () => {\n                setAxisRange(context, 'y', [0, availWidth - left - right], isOffset ? availHeight : null);\n                const range = context.range();\n\n                // Get Tick Interval\n                tickInterval = ((range[1] - range[0]) / (tickValues || domain).length) - minTickDistance.width;\n\n                // Get height available for ticks\n                heightForTicks = availHeight - axisNameHeight - tickSize - namePadding;\n\n                if (tickInterval < minTickSpace.width && rotation !== 0) {\n                    // set smart ticks and rotation config\n                    labelConfig.rotation = rotation === null ? -90 : rotation;\n                    labelConfig.smartTicks = false;\n\n                    // Ticks with overlapping height\n                    if (tickInterval < minTickSpace.height) {\n                        heightForTicks = 0;\n                        tickInterval = 0;\n                        context.renderConfig({ showInnerTicks: false, showOuterTicks: false });\n                        context.range([minTickSpace.height / 2, availWidth - minTickSpace.height / 2]);\n                    }\n                } else if (tickValues) {\n                    const interval = (availWidth / domain.length) - minTickDistance.width;\n                    if (interval < minTickSpace.width) {\n                        context.range([minTickSpace.height / 2, availWidth - minTickSpace.height / 2]);\n                    }\n                }\n                if (availHeight < axisNameHeight) {\n                    context.renderConfig({ show: false, showInnerTicks: false, showOuterTicks: false });\n                }\n\n                context.maxTickSpaces({\n                    width: tickInterval,\n                    height: heightForTicks,\n                    noWrap: rotation !== null\n                });\n                return labelConfig;\n            },\n            y: () => {\n                setAxisRange(context, 'x', [availHeight - bottom, top], isOffset ? availWidth : null);\n\n                let widthForTicks = availWidth - axisNameHeight - tickSize - namePadding;\n                if (widthForTicks <= minTickDistance.width) {\n                    widthForTicks = 0;\n                    context.renderConfig({ showInnerTicks: false, showOuterTicks: false });\n                }\n\n                context.maxTickSpaces({\n                    width: widthForTicks,\n                    height: availHeight,\n                    noWrap: true\n                });\n                if (availWidth < axisNameHeight) {\n                    context.renderConfig({ show: false });\n                }\n                return labelConfig;\n            }\n        },\n        continous: {\n            x: () => {\n                labelConfig.smartTicks = false;\n                const tickShifter = tickDimensions.width / 2;\n                const baseline = fixedBaseline ? 0 : tickShifter;\n\n                setAxisRange(context, 'y', [baseline + left, availWidth - right - tickShifter],\n                    isOffset ? availHeight : null);\n\n                const range = context.range();\n\n                // Get Tick widths and available space\n                const totalTickWidth = allTickDimensions.length * (tickDimensions.width + minTickDistance.width);\n                const availableSpace = range[1] - range[0];\n\n                 // Rotate labels if not enough width\n                if (availableSpace < totalTickWidth && labels.rotation === null) {\n                    labelConfig.rotation = -90;\n                }\n\n                // Remove ticks if not enough height\n                if (availHeight - axisNameHeight - namePadding < tickDimensions.height) {\n                    context.renderConfig({ showInnerTicks: false });\n                    if (availHeight < axisNameHeight) {\n                        context.renderConfig({ show: false });\n                    }\n                }\n                return labelConfig;\n            },\n            y: () => {\n                labelConfig.smartTicks = false;\n                const tickShifter = tickDimensions.height / 2;\n                const baseline = fixedBaseline ? 1 : tickShifter;\n\n                setAxisRange(context, 'x', [availHeight - bottom - baseline, tickShifter + top],\n                    isOffset ? availWidth : null);\n\n                // Remove display of ticks if no space is left\n                if (availWidth < tickDimensions.width + axisNameHeight + namePadding) {\n                    context.renderConfig({ showInnerTicks: false });\n                    if (availWidth < axisNameHeight) {\n                        context.renderConfig({ show: false });\n                    }\n                }\n                return labelConfig;\n            }\n        }\n    };\n};\n","import { defaultValue } from 'muze-utils';\nimport { TOP, LEFT, BOTTOM } from '../enums/axis-orientation';\n\nexport const getRotatedSpaces = (rotation = 0, width, height) => {\n    let rotatedHeight = height;\n    let rotatedWidth = width;\n    if (rotation) {\n        const angle = ((rotation || 0) * Math.PI) / 180;\n        rotatedWidth = Math.abs(height * Math.sin(angle)) + Math.abs(width * Math.cos(angle));\n        rotatedHeight = Math.abs(width * Math.sin(angle)) + Math.abs(height * Math.cos(angle));\n    }\n    return { width: rotatedWidth, height: rotatedHeight };\n};\n\nexport const setOffset = (context) => {\n    let x = 0;\n    let y = 0;\n    const logicalSpace = context.logicalSpace();\n    const config = context.config();\n    const {\n        orientation,\n        xOffset,\n        yOffset\n    } = config;\n    if (orientation === LEFT) {\n        x = xOffset === undefined ? logicalSpace.width : xOffset;\n    }\n    if (orientation === TOP) {\n        y = yOffset === undefined ? logicalSpace.height : yOffset;\n    }\n    context.config({ xOffset: x, yOffset: y });\n};\n\nexport const getNumberOfTicks = (availableSpace, labelDim, axis, axisInstance) => {\n    const ticks = axis.scale().ticks();\n    const { numberOfTicks } = axisInstance.config();\n    const tickLength = ticks.length;\n    let numberOfValues = tickLength;\n\n    if (tickLength * (labelDim * 1.5) > availableSpace) {\n        numberOfValues = Math.floor(availableSpace / (labelDim * 1.5));\n    }\n\n    numberOfValues = Math.min(numberOfTicks, Math.max(2, numberOfValues));\n\n    return axis.scale().ticks(numberOfValues);\n};\n\nexport const getAxisComponentDimensions = (context) => {\n    let largestTick = '';\n    let largestTickDimensions = { width: 0, height: 0 };\n    let smartTick = {};\n    let axisTicks;\n    const allTickDimensions = [];\n    const scale = context.scale();\n    const { showAxisName } = context.renderConfig();\n    const { tickValues, name } = context.config();\n    const { labelManager } = context.dependencies();\n    const labelFunc = scale.ticks || scale.quantile || scale.domain;\n\n    // set the style on the shared label manager instance\n    labelManager.setStyle(context._tickLabelStyle);\n\n    // get the values along the domain\n    axisTicks = tickValues || labelFunc();\n\n    // Get the tick labels\n    axisTicks = axisTicks.map((originalLabel, i) => {\n        const label = context.getFormattedText(originalLabel, i, axisTicks);\n\n    // convert to string for quant values\n        const tickDimensions = labelManager.getOriSize(label);\n\n    // Get spaces for all labels\n        allTickDimensions.push(tickDimensions);\n\n    // Getting largest label\n        if (tickDimensions.width > largestTickDimensions.width) {\n            largestTick = label;\n            smartTick = context.smartTicks() ? context.smartTicks()[i] : {};\n            largestTickDimensions = tickDimensions;\n        }\n        return label;\n    });\n\n    labelManager.setStyle(context._axisNameStyle);\n    const axisNameDimensions = showAxisName ? labelManager.getOriSize(name) : { width: 0, height: 0 };\n\n    return {\n        axisNameDimensions,\n        largestTick,\n        largestTickDimensions,\n        allTickDimensions,\n        axisTicks,\n        smartTick,\n        tickSize: context.getTickSize()\n    };\n};\n\nexport const computeAxisDimensions = (context) => {\n    let tickDimensions = {};\n    const { labels } = context.renderConfig();\n    const { smartTicks, rotation } = labels;\n    const {\n        largestTickDimensions,\n        axisTicks,\n        smartTick,\n        axisNameDimensions,\n        allTickDimensions,\n        tickSize\n    } = getAxisComponentDimensions(context);\n    const { height: labelHeight, width: labelWidth } = largestTickDimensions;\n\n    // get the domain of axis\n    const domain = context.domain();\n    // const angle = ((rotation || 0) * Math.PI) / 180;\n\n    if (domain.length === 0) {\n        return null;\n    }\n    if (smartTicks) {\n        tickDimensions = smartTick;\n    } else {\n        tickDimensions = { width: labelWidth, height: labelHeight };\n    }\n    tickDimensions = getRotatedSpaces(rotation, tickDimensions.width, tickDimensions.height);\n\n    if (tickSize === 0) {\n        tickDimensions = { width: 0, height: 0 };\n    }\n    return {\n        allTickDimensions,\n        tickSize,\n        tickDimensions,\n        axisNameDimensions,\n        largestTickDimensions,\n        axisTicks\n    };\n};\n\n/**\n *\n *\n * @param {*} axisDimensions\n * @param {*} config\n * @param {*} range\n *\n */\nexport const getHorizontalAxisSpace = (context, axisDimensions, range) => {\n    let width;\n    let height;\n    const domain = context.domain();\n    const { tickSize, tickDimensions, axisNameDimensions } = axisDimensions;\n    const { axisNamePadding, tickValues } = context.config();\n    const { showAxisName } = context.renderConfig();\n    const { height: axisDimHeight } = axisNameDimensions;\n    const { height: tickDimHeight, width: tickDimWidth } = tickDimensions;\n\n    width = range && range.length ? range[1] - range[0] : 0;\n\n    height = 0;\n    if (tickValues) {\n        const minTickDiff = context.getMinTickDifference();\n        const [min, max] = [\n            Math.min(...tickValues, ...domain),\n            Math.max(...tickValues, ...domain)\n        ];\n\n        width = ((max - min) / Math.abs(minTickDiff)) * (tickDimWidth + context._minTickDistance.width);\n    }\n    if (!width || width === 0) {\n        height = Math.max(tickDimWidth, tickDimHeight);\n    } else {\n        height = tickDimHeight;\n    }\n    height += (showAxisName ? axisDimHeight + axisNamePadding : 0) + tickSize;\n\n    return {\n        width,\n        height\n    };\n};\n\n/**\n *\n *\n * @param {*} axisDimensions\n * @param {*} config\n * @param {*} range\n *\n */\nexport const getVerticalAxisSpace = (context, axisDimensions) => {\n    let height;\n    let width;\n    const domain = context.domain();\n    const { tickSize, tickDimensions, axisNameDimensions } = axisDimensions;\n    const { axisNamePadding, tickValues } = context.config();\n    const { showAxisName } = context.renderConfig();\n    const { height: axisDimHeight } = axisNameDimensions;\n    const { height: tickDimHeight, width: tickDimWidth } = tickDimensions;\n\n    height = 0;\n    width = tickDimWidth;\n    if (tickValues) {\n        const minTickDiff = context.getMinTickDifference();\n        const [min, max] = [\n            Math.min(...tickValues, ...domain),\n            Math.max(...tickValues, ...domain)\n        ];\n\n        height = ((max - min) / Math.abs(minTickDiff)) * tickDimHeight;\n    }\n    width += (showAxisName ? axisDimHeight : 0) + tickSize + axisNamePadding;\n\n    return {\n        height,\n        width\n    };\n};\n\n/**\n * Calculates the logical space of the axis\n * @return {Object} Width and height occupied by the axis.\n */\nexport const calculateBandSpace = (context) => {\n    const range = context.range();\n    const axisDimensions = context.getAxisDimensions();\n    const { orientation } = context.config();\n    const { show } = context.renderConfig();\n    const { largestTickDimensions, axisTicks, allTickDimensions } = axisDimensions;\n    const { height: largestDimHeight } = largestTickDimensions;\n    const minTickWidth = context._minTickDistance.width;\n    if (orientation === TOP || orientation === BOTTOM) {\n        let {\n            width,\n            height\n        } = getHorizontalAxisSpace(context, axisDimensions, range);\n\n        if (!width || width === 0) {\n            width = allTickDimensions.reduce((t, n) =>\n                t + Math.min(n.width, n.height) + minTickWidth, 0);\n        }\n        if (show === false) {\n            height = 0;\n            width = 0;\n        }\n\n        return {\n            width,\n            height\n        };\n    }\n\n    let {\n        width,\n        height\n    } = getVerticalAxisSpace(context, axisDimensions, range);\n\n    if (!height || height === 0) {\n        height = axisTicks.length * (largestDimHeight + context._minTickDistance.height) + largestDimHeight;\n    }\n    if (show === false) {\n        width = 0;\n    }\n\n    return {\n        width,\n        height\n    };\n};\n\n/**\n * Calculates the logical space of the axis\n * @return {Object} Width and height occupied by the axis.\n */\nexport const calculateContinousSpace = (context) => {\n    const range = context.range();\n    const axisDimensions = context.getAxisDimensions();\n    const { orientation } = context.config();\n    const { show, showAxisName } = context.renderConfig();\n    const { axisNameDimensions } = axisDimensions;\n\n    if (show === false) {\n        return {\n            width: 0,\n            height: 0\n        };\n    }\n\n    const { width: axisNameWidth } = axisNameDimensions;\n\n    if (orientation === TOP || orientation === BOTTOM) {\n        const {\n            width,\n            height\n        } = getHorizontalAxisSpace(context, axisDimensions, range);\n        const axisWidth = Math.max(width, axisNameWidth);\n\n        return {\n            width: axisWidth,\n            height\n        };\n    }\n    const {\n        width,\n        height\n    } = getVerticalAxisSpace(context, axisDimensions, range);\n\n    const effHeight = Math.max(height, showAxisName ? axisNameWidth : 0);\n\n    return {\n        width,\n        height: effHeight\n    };\n};\n\n/**\n * Overwrites domain with user defined domain (if present)\n * @param {Object} context reference to current axes\n * @param {Array} domain default domain\n *\n * @return {Array} domain\n */\nexport const getValidDomain = (context, domain) => {\n    const { domain: userDom } = context.config();\n\n    if (userDom) {\n        domain = userDom;\n    }\n\n    return defaultValue(domain, []);\n};\n\nexport const setContinousAxisDomain = (context, domain) => {\n    const { nice } = context.config();\n    const scale = context.scale.bind(context);\n\n    scale().domain(domain);\n    nice && scale().nice();\n    context._domain = scale().domain();\n};\n\n/**\n * Checks if any of the properties have changed between two objects\n * @param {Object} obj first object\n * @param {Object} obj1 second object\n * @param {Array} properties properties to be compared between two objects\n *\n * @return {Boolean} boolean value\n */\nexport const hasAxesConfigChanged = (obj = {}, obj1 = {}, properties) => {\n    if (!Object.keys(obj).length || !Object.keys(obj1).length) {\n        return false;\n    }\n    return properties.some(key => obj[key] !== obj1[key]);\n};\n","import { mergeRecursive } from 'muze-utils';\nimport { hasAxesConfigChanged } from './helper';\n\nexport const PROPS = {\n    availableSpace: {},\n    axisDimensions: {},\n    axisComponentDimensions: {},\n    config: {\n        sanitization: (context, value) => {\n            const oldConfig = Object.assign({}, context._config || {});\n            const mockedOldConfig = mergeRecursive({}, oldConfig);\n            value = mergeRecursive(mockedOldConfig, value);\n\n            value.axisNamePadding = Math.max(value.axisNamePadding, 0);\n            const shouldAxesScaleUpdate = hasAxesConfigChanged(\n                value, oldConfig, ['interpolator', 'exponent', 'base', 'orientation']\n            );\n            const tickFormatter = context.sanitizeTickFormatter(value);\n\n            if (shouldAxesScaleUpdate) {\n                context._scale = context.createScale(value);\n                context._axis = context.createAxis(value);\n            }\n\n            context._tickFormatter = ticks => tickFormatter(ticks);\n\n            const {\n                labels,\n                show,\n                showInnerTicks,\n                showOuterTicks,\n                showAxisName\n            } = value;\n            context.renderConfig({\n                labels,\n                show,\n                showInnerTicks,\n                showOuterTicks,\n                showAxisName\n            });\n            return value;\n        }\n    },\n    renderConfig: {\n        sanitization: (context, value) => {\n            const oldConfig = Object.assign({}, context._renderConfig || {});\n            value = mergeRecursive(oldConfig, value);\n            return value;\n        }\n    },\n    logicalSpace: {},\n    mount: {\n    },\n    range: {\n        sanitization: (context, value) => {\n            context.scale().range(value);\n            context.logicalSpace(null);\n            return value;\n        }\n    },\n\n    smartTicks: {},\n    tickSize: {},\n    maxTickSpaces: {},\n    valueParser: {\n        defaultValue: val => val\n    }\n};\n","import {\n    mergeRecursive,\n    getSmartComputedStyle,\n    selectElement,\n    generateGetterSetters,\n    getUniqueId\n} from 'muze-utils';\nimport { createScale } from '../scale-creator';\nimport { axisOrientationMap, BOTTOM, TOP } from '../enums/axis-orientation';\nimport { defaultConfig } from './default-config';\nimport { renderAxis } from '../axis-renderer';\nimport { spaceSetter } from './space-setter';\nimport {\n    getAxisComponentDimensions,\n    computeAxisDimensions,\n    calculateContinousSpace,\n    setOffset,\n    getValidDomain\n} from './helper';\nimport { PROPS } from './props';\n\nexport default class SimpleAxis {\n\n    /**\n     * Creates an instance of SimpleAxis.\n     * @memberof SimpleAxis\n     */\n    constructor (config, dependencies) {\n        this._id = getUniqueId();\n\n        this._dependencies = dependencies;\n        this._mount = null;\n        this._range = [];\n        this._domain = [];\n        this._domainLock = false;\n        this._axisDimensions = {};\n        this._smartTicks = [];\n\n        const defCon = mergeRecursive({}, this.constructor.defaultConfig());\n        const simpleConfig = mergeRecursive(defCon, config);\n\n        const bodyElem = selectElement('body');\n        const classPrefix = simpleConfig.classPrefix;\n        this._tickLabelStyle = getSmartComputedStyle(bodyElem, `${classPrefix}-ticks`);\n        this._axisNameStyle = getSmartComputedStyle(bodyElem, `${classPrefix}-axis-name`);\n\n        dependencies.labelManager.setStyle(this._tickLabelStyle);\n        const dist = dependencies.labelManager.getOriSize('w');\n\n        this._minTickDistance = { width: dist.width * 3 / 4, height: dist.height / 2 };\n        this._minTickSpace = dependencies.labelManager.getOriSize('www');\n\n        generateGetterSetters(this, PROPS);\n        this.config(simpleConfig);\n\n        this._scale = this.createScale(this._config);\n        this._axis = this.createAxis(this._config);\n        this._animationDonePromises = [];\n    }\n\n    /**\n     * Returns the default configuration of simple axis\n     *  @return {Object} default configurations\n     */\n    static defaultConfig () {\n        return defaultConfig;\n    }\n\n    /**\n     * Sets a fixed baseline for the first ticks so that they can render effectively within\n     * the given area\n     *\n     * @param {*} tickText\n     * @param {*} config\n     * @param {*} labelManager\n     */\n    setFixedBaseline () {\n        return this;\n    }\n\n    /**\n     *\n     *\n     * @readonly\n     * @memberof SimpleAxis\n     */\n    scale (...params) {\n        if (params.length) {\n            this._scale = params[0];\n            return this;\n        }\n        return this._scale;\n    }\n\n    resetDomain () {\n        this._domain = [];\n        return this;\n    }\n\n    /**\n     *\n     *\n     * @readonly\n     * @memberof SimpleAxis\n     */\n    axis (...params) {\n        if (params.length) {\n            this._axis = params[0];\n            return this;\n        }\n        return this._axis;\n    }\n\n    /**\n     *\n     *\n     * @param {*} d\n     *\n     * @memberof SimpleAxis\n     */\n    domain (...domain) {\n        if (domain.length) {\n            const domainValue = getValidDomain(this, domain[0]);\n            this.scale().domain(domainValue);\n            this._domain = this.scale().domain();\n            this.setAxisComponentDimensions();\n            this.logicalSpace(null);\n            return this;\n        }\n        return this._domain;\n    }\n\n    setAxisComponentDimensions () {\n        this.axisComponentDimensions(getAxisComponentDimensions(this));\n    }\n\n    /**\n     *\n     *\n     *\n     * @memberof SimpleAxis\n     */\n    dependencies () {\n        return this._dependencies;\n    }\n\n    /**\n     *\n     *\n     *\n     * @memberof SimpleAxis\n     */\n    createScale (config) {\n        const {\n            base,\n            padding,\n            interpolator,\n            exponent\n        } = config;\n        const range = this.range();\n        const scale = createScale({\n            padding,\n            interpolator,\n            exponent,\n            base,\n            range,\n            type: this.constructor.type()\n        });\n\n        return scale;\n    }\n\n    sanitizeTickFormatter (value) {\n        const { tickFormat, numberFormat } = value;\n\n        if (tickFormat) {\n            return ticks => (val, i) => tickFormat(numberFormat(val), val, i, ticks);\n        }\n\n        return () => val => numberFormat(val);\n    }\n\n    resetLogicalSpace () {\n        this.logicalSpace(null);\n        this.range([]);\n        const {\n            labels,\n            show,\n            showInnerTicks,\n            showOuterTicks,\n            showAxisName\n        } = this.config();\n        this.renderConfig({\n            labels,\n            show,\n            showInnerTicks,\n            showOuterTicks,\n            showAxisName\n        });\n    }\n\n    getFormattedText (text, index, axisTicks) {\n        const formatter = this._tickFormatter;\n\n        return formatter(axisTicks)(text, index);\n    }\n\n    /**\n     *\n     *\n     *\n     * @memberof SimpleAxis\n     */\n    createAxis (config) {\n        const { orientation } = config;\n        const axisClass = axisOrientationMap[orientation];\n\n        if (axisClass) {\n            const axis = axisClass(this.scale());\n            return axis;\n        }\n        return null;\n    }\n\n    /**\n     * This method is used to set the space availiable to render\n     * the SimpleCell.\n     *\n     * @param {number} width The width of SimpleCell.\n     * @param {number} height The height of SimpleCell.\n     * @memberof AxisCell\n     */\n    setAvailableSpace (width = 0, height, padding, isOffset) {\n        let labelConfig = {};\n        const {\n           orientation\n       } = this.config();\n\n        this.availableSpace({ width, height, padding });\n\n        if (orientation === TOP || orientation === BOTTOM) {\n            labelConfig = spaceSetter(this, { isOffset }).continous.x();\n        } else {\n            labelConfig = spaceSetter(this, { isOffset }).continous.y();\n        }\n\n        // Set config\n        this.renderConfig({\n            labels: labelConfig\n        });\n        this.setTickConfig();\n        this.getTickSize();\n        return this;\n    }\n\n    /**\n     *\n     *\n     * @memberof SimpleAxis\n     */\n    setTickConfig () {\n        return this;\n    }\n\n    getScaleValue (domainVal) {\n        if (domainVal === null || domainVal === undefined) {\n            return undefined;\n        }\n        return this.scale()(domainVal);\n    }\n\n    /**\n     *\n     *\n     *\n     * @memberof SimpleAxis\n     */\n    getTickSize () {\n        return this.axis().tickSize();\n    }\n\n    /**\n     * Gets the space occupied by the parts of an axis\n     *\n     * @return {Object} object with details about sizes of the axis.\n     * @memberof SimpleAxis\n     */\n    getAxisDimensions (...params) {\n        this.axisDimensions(computeAxisDimensions(this, ...params));\n        return this.axisDimensions();\n    }\n\n    /**\n     * Gets the space occupied by the axis\n     *\n     * @return {Object} object with details about size of the axis.\n     * @memberof SimpleAxis\n     */\n    getLogicalSpace () {\n        if (!this.logicalSpace()) {\n            this.logicalSpace(calculateContinousSpace(this));\n            this.logicalSpace();\n            setOffset(this);\n        }\n\n        return this.logicalSpace();\n    }\n\n    /**\n     * Returns the value from the domain when given a value from the range.\n     * @param {number} value Value from the range.\n     * @return {number} Value\n     */\n    invert (value) {\n        return this.scale().invert(value);\n    }\n\n    /**\n     * Gets the nearest range value from the given range values.\n     * @param {number} v1 Start range value\n     * @param {number} v2 End range value\n     *\n     * @return {Array} range values\n     */\n    getNearestRange (v1, v2) {\n        return [v1, v2];\n    }\n\n    invertExtent (v1, v2) {\n        return [this.invert(v1), this.invert(v2)];\n    }\n\n    getMinTickDifference () {\n        return this.domain();\n    }\n\n    getFormattedTickValues (tickValues) {\n        return tickValues;\n    }\n\n    /**\n     * This method returns the width in pixels for one\n     * unit along the axis. It is only applicable to band scale\n     * and returns undefined for other scale type.\n     *\n     * @return {number} the width of one band along band scale axis\n     * @memberof SimpleAxis\n     */\n    getUnitWidth () {\n        return 0;\n    }\n\n    /**\n     * This method returns an object that can be used to\n     * reconstruct this instance.\n     *\n     * @return {Object} the serializable props of axis\n     * @memberof SimpleAxis\n     */\n    serialize () {\n        return {\n            name: this.name,\n            type: this.type,\n            range: this.range(),\n            config: this.config()\n        };\n    }\n\n    /**\n     * Returns the id of the axis.\n     * @return {string} Unique identifier of the axis.\n     */\n    get id () {\n        return this._id;\n    }\n\n    /**\n     * This method is used to render the axis inside\n     * the supplied svg container.\n     *\n     * @param {SVGElement} svg the svg element in which to render the path\n     * @memberof SimpleAxis\n     */\n    /* istanbul ignore next */render () {\n        if (this.mount()) {\n            this.setTickConfig();\n            renderAxis(this);\n        }\n        return this;\n    }\n\n    /**\n     *\n     *\n     *\n     * @memberof SimpleAxis\n     */\n    remove () {\n        selectElement(this.mount()).remove();\n        return this;\n    }\n\n    /**\n     *\n     *\n     * @memberof SimpleAxis\n     */\n    unsubscribe () {\n        return this;\n    }\n\n    /**\n     *\n     *\n     *\n     * @memberof SimpleAxis\n     */\n    isReverse () {\n        const range = this.range();\n        return range[0] > range[1];\n    }\n\n    /**\n     *\n     *\n     *\n     * @memberof SimpleAxis\n     */\n    getPixelToValueRatio () {\n        const scale = this.scale();\n        const range = scale.range();\n        const domain = scale.domain();\n\n        return Math.abs(range[1] - range[0]) / (domain[1] - domain[0]);\n    }\n\n     /**\n     * Notifies when all animations/transitions of the axis are completed.\n     *\n     * @public\n     * @return {Promise} Returns a promise to notify the animation completion.\n     */\n    animationDone () {\n        return Promise.all(this._animationDonePromises);\n    }\n\n    registerAnimationDoneHook () {\n        let resolveFn;\n        const promise = new Promise((resolve) => {\n            resolveFn = resolve;\n        });\n        this._animationDonePromises.push(promise);\n\n        return () => {\n            resolveFn();\n        };\n    }\n}\n\n","import { scaleMap } from '../../scale-creator';\n\nexport default class LinearInterpolator {\n\n    createScale (config) {\n        const {\n            range\n        } = config;\n        const scaleFactory = scaleMap.linear;\n        this._scale = scaleFactory().range(range);\n        return this._scale;\n    }\n\n    getScaleValue (domainVal) {\n        return this._scale(domainVal) + 0.5;\n    }\n\n    sanitizeDomain (domain) {\n        if (domain.length && domain[0] === domain[1]) {\n            domain = [0, +domain[0] * 2];\n        }\n        return domain;\n    }\n}\n","import { scaleMap } from '../../scale-creator';\n\nexport default class LogInterpolator {\n\n    createScale (config) {\n        const {\n            range,\n            base\n        } = config;\n        const scaleFactory = scaleMap.log;\n        this._scale = scaleFactory().range(range).base(base);\n        return this._scale;\n    }\n\n    getScaleValue (domainVal) {\n        const scale = this._scale;\n        if (domainVal <= 0) {\n            return scale(scale.domain()[0]);\n        }\n\n        return scale(domainVal) + 0.5;\n    }\n\n    sanitizeDomain (domain) {\n        if (domain[0] <= 0) {\n            domain[0] = Math.max(1, domain[0]);\n        }\n        if (domain[1] <= 0) {\n            domain[1] = Math.max(1, domain[1]);\n        }\n        return domain;\n    }\n}\n","import { scaleMap } from '../../scale-creator';\n\nexport default class PowInterpolator {\n\n    createScale (config) {\n        const {\n            range,\n            exponent\n        } = config;\n        const scaleFactory = scaleMap.pow;\n        this._scale = scaleFactory().range(range).exponent(exponent);\n        return this._scale;\n    }\n\n    getScaleValue (domainVal) {\n        return this._scale(domainVal) + 0.5;\n    }\n\n    sanitizeDomain (domain) {\n        return domain;\n    }\n}\n","import { getSmallestDiff } from 'muze-utils';\nimport SimpleAxis from './simple-axis';\nimport { BOTTOM, TOP, LEFT, RIGHT } from '../enums/axis-orientation';\nimport { spaceSetter } from './space-setter';\nimport { LINEAR, LOG, POW } from '../enums/scale-type';\nimport { LogInterpolator, PowInterpolator, LinearInterpolator } from './interpolators';\nimport {\n    getNumberOfTicks,\n    getValidDomain,\n    setContinousAxisDomain\n} from './helper';\n\nexport const interpolatorMap = {\n    [LOG]: LogInterpolator,\n    [POW]: PowInterpolator,\n    [LINEAR]: LinearInterpolator\n};\n\nexport default class ContinousAxis extends SimpleAxis {\n    constructor (config, dependencies) {\n        config.tickFormat = config.tickFormat || (val => val);\n        super(config, dependencies);\n    }\n    /**\n     *\n     *\n     *\n     * @memberof SimpleAxis\n     */\n    createScale (config) {\n        const {\n            base,\n            padding,\n            interpolator,\n            exponent\n        } = config;\n        const range = this.range();\n        const InterpolatorCls = interpolatorMap[interpolator];\n\n        this._interpolator = new InterpolatorCls();\n        let scale = this._interpolator.createScale({\n            padding,\n            exponent,\n            base,\n            range\n        });\n\n        scale = scale.nice();\n        return scale;\n    }\n\n    /**\n     *\n     *\n     * @static\n     *\n     * @memberof ContinousAxis\n     */\n    static type () {\n        return LINEAR;\n    }\n\n    getScaleValue (domainVal) {\n        if (domainVal === null || domainVal === undefined) {\n            return undefined;\n        }\n        return this._interpolator.getScaleValue(domainVal);\n    }\n /**\n     *\n     *\n     *\n     * @memberof SimpleAxis\n     */\n    getTickSize () {\n        const {\n            showInnerTicks,\n            showOuterTicks\n        } = this.renderConfig();\n        const axis = this.axis();\n        axis.tickSizeInner(showInnerTicks === false ? 0 : 6);\n        axis.tickSizeOuter(showOuterTicks === false ? 0 : 6);\n\n        return axis.tickSize();\n    }\n\n    /**\n     *\n     *\n     * @param {*} d\n     *\n     * @memberof SimpleAxis\n     */\n    domain (...domain) {\n        if (domain.length) {\n            const domainVal = this._interpolator.sanitizeDomain(getValidDomain(this, domain[0]));\n            setContinousAxisDomain(this, domainVal);\n            this.setAxisComponentDimensions();\n            this.logicalSpace(null);\n            return this;\n        }\n        return this._domain;\n    }\n\n    /**\n     * This method is used to set the space availiable to render\n     * the SimpleCell.\n     *\n     * @param {number} width The width of SimpleCell.\n     * @param {number} height The height of SimpleCell.\n     * @memberof AxisCell\n     */\n    setAvailableSpace (width = 0, height, padding, isOffset) {\n        let labelConfig = {};\n        const {\n           orientation\n       } = this.config();\n\n        this.availableSpace({ width, height, padding });\n\n        if (orientation === TOP || orientation === BOTTOM) {\n            labelConfig = spaceSetter(this, { isOffset }).continous.x();\n        } else {\n            labelConfig = spaceSetter(this, { isOffset }).continous.y();\n        }\n\n        // Set config\n        this.renderConfig({\n            labels: labelConfig\n        });\n        this.setTickConfig();\n        this.getTickSize();\n        return this;\n    }\n\n    /**\n     *\n     *\n     * @param {*} tickValues\n     *\n     * @memberof SimpleAxis\n     */\n    setTickConfig () {\n        const {\n            tickValues\n        } = this.config();\n        const {\n            showInnerTicks\n        } = this.renderConfig();\n        const axis = this.axis();\n\n        if (!showInnerTicks) {\n            axis.tickValues([]);\n            return this;\n        }\n\n        if (tickValues) {\n            tickValues instanceof Array && this.axis().tickValues(tickValues);\n            return this;\n        }\n        axis.tickValues(this.getTickValues());\n\n        return this;\n    }\n\n    /**\n     *\n     *\n     *\n     * @memberof SimpleAxis\n     */\n    getTickValues () {\n        let labelDim = 0;\n        const {\n            orientation,\n            tickValues\n        } = this.config();\n        const range = this.range();\n        const axis = this.axis();\n\n        const availableSpace = Math.abs(range[0] - range[1]);\n\n        const labelProps = this.axisComponentDimensions().largestTickDimensions;\n\n        if (tickValues) {\n            return axis.scale().ticks(tickValues);\n        }\n        labelDim = labelProps[orientation === BOTTOM || orientation === TOP ? 'width' : 'height'];\n\n        return getNumberOfTicks(availableSpace, labelDim, axis, this);\n    }\n\n    getMinTickDifference () {\n        return getSmallestDiff(this.config().tickValues);\n    }\n\n    /**\n     * Sets a fixed baseline for the first ticks so that they can render effectively within\n     * the given area\n     *\n     * @param {*} tickText\n     * @param {*} config\n     * @param {*} labelManager\n     */\n    setFixedBaseline (tickText) {\n        const {\n            orientation\n        } = this.config();\n        const {\n            labels\n        } = this.renderConfig();\n\n        const {\n            rotation\n        } = labels;\n        const axis = this.axis();\n        const ticks = axis.scale().ticks();\n        const { width, height } = this.axisComponentDimensions().allTickDimensions[0];\n        axis.tickTransform((d) => {\n            if (d === ticks[0]) {\n                if ((orientation === LEFT || orientation === RIGHT)) {\n                    return `translate(0, -${(height) / 3}px)`;\n                }\n                if ((orientation === TOP || orientation === BOTTOM) && !rotation) {\n                    return `translate(${width / 2}px,  ${0}px)`;\n                }\n            } return '';\n        });\n        return tickText;\n    }\n\n}\n","import SimpleAxis from './simple-axis';\nimport { BAND } from '../enums/scale-type';\nimport { TOP, BOTTOM } from '../enums/axis-orientation';\nimport { calculateBandSpace, setOffset, getRotatedSpaces } from './helper';\nimport { spaceSetter } from './space-setter';\n\nexport default class BandAxis extends SimpleAxis {\n\n    /**\n     *\n     *\n     * @param {*} config axes configuration\n     *\n     * @memberof BandAxis\n     */\n    createScale (config) {\n        return super.createScale(config);\n    }\n\n    /**\n     *\n     *\n     * @static\n     *\n     * @memberof BandAxis\n     */\n    static type () {\n        return BAND;\n    }\n\n     /**\n     * This method is used to set the space availiable to render\n     * the SimpleCell.\n     *\n     * @param {number} width The width of SimpleCell.\n     * @param {number} height The height of SimpleCell.\n     * @memberof AxisCell\n     */\n    setAvailableSpace (width = 0, height, padding, isOffset) {\n        let labelConfig = {};\n        const {\n           orientation\n       } = this.config();\n\n        this.availableSpace({ width, height, padding });\n\n        if (orientation === TOP || orientation === BOTTOM) {\n            labelConfig = spaceSetter(this, { isOffset }).band.x();\n        } else {\n            labelConfig = spaceSetter(this, { isOffset }).band.y();\n        }\n\n        // Set config\n        this.renderConfig({\n            labels: labelConfig\n        });\n        this.setTickConfig();\n        return this;\n    }\n\n    /**\n     *\n     *\n     *\n     * @memberof BandAxis\n     */\n    setTickConfig () {\n        let smartTicks = '';\n        let smartlabel;\n        const domain = this.domain();\n        const { labelManager } = this._dependencies;\n        const { tickValues, padding } = this.config();\n        const { labels } = this.renderConfig();\n        const { height: availHeight, width: availWidth, noWrap } = this.maxTickSpaces();\n        const { width, height } = getRotatedSpaces(labels.rotation, availWidth, availHeight);\n\n        tickValues && this.axis().tickValues(tickValues);\n        smartTicks = tickValues || domain;\n\n        // set the style on the shared label manager instance\n        labelManager.setStyle(this._tickLabelStyle);\n\n        // Update padding between plots\n        if (typeof padding === 'number' && padding >= 0 && padding <= 1) {\n            this.scale().padding(padding);\n        }\n\n        if (domain && domain.length) {\n            const values = tickValues || domain;\n            const tickFormatter = this._tickFormatter(values);\n            smartTicks = values.map((d, i) => {\n                labelManager.useEllipsesOnOverflow(true);\n\n                smartlabel = labelManager.getSmartText(tickFormatter(d, i), width, height, noWrap);\n                return labelManager.constructor.textToLines(smartlabel);\n            });\n        }\n        this.smartTicks(smartTicks);\n        return this;\n    }\n\n    /**\n     * Gets the space occupied by the axis\n     *\n     * @return {Object} object with details about size of the axis.\n     * @memberof SimpleAxis\n     */\n    getLogicalSpace () {\n        if (!this.logicalSpace()) {\n            this.logicalSpace(calculateBandSpace(this));\n            setOffset(this);\n            this.logicalSpace();\n        }\n        return this.logicalSpace();\n    }\n\n    /**\n     *\n     *\n     * @memberof BandAxis\n     */\n    getTickValues () {\n        return this.axis().scale().domain();\n    }\n\n    sanitizeTickFormatter (value) {\n        const { tickFormat } = value;\n\n        if (tickFormat) {\n            return ticks => (val, i) => tickFormat(val, val, i, ticks);\n        }\n        return () => val => this.valueParser()(val);\n    }\n\n    /**\n     *\n     *\n     *\n     * @memberof BandAxis\n     */\n    getUnitWidth () {\n        return this.scale().bandwidth();\n    }\n\n    /**\n     *\n     *\n     *\n     * @memberof SimpleAxis\n     */\n    getTickSize () {\n        const {\n            showInnerTicks,\n            showOuterTicks\n        } = this.renderConfig();\n        const axis = this.axis();\n\n        axis.tickSizeInner(showInnerTicks ? 6 : 0);\n        axis.tickSizeOuter(showOuterTicks ? 6 : 0);\n        return axis.tickSize();\n    }\n\n    invertExtent (v1, v2) {\n        return this.scale().invertExtent(v1, v2);\n    }\n\n    /**\n     * Gets the nearest range value from the given range values.\n     * @param {number} v1 Start range value\n     * @param {number} v2 End range value\n     * @return {Array} range values\n     */\n    getNearestRange (v1, v2) {\n        const scale = this.scale();\n        const range = scale.range();\n        const reverse = range[0] > range[1];\n\n        const extent = this.invertExtent(v1, v2);\n        const p1 = scale(reverse ? extent[extent.length - 1] : extent[0]);\n        const p2 = scale(reverse ? extent[0] : extent[extent.length - 1]) + scale.bandwidth();\n        return [p1, p2];\n    }\n}\n","import { getSmallestDiff } from 'muze-utils';\nimport SimpleAxis from './simple-axis';\nimport { TIME } from '../enums/scale-type';\nimport { axisOrientationMap, BOTTOM, TOP } from '../enums/axis-orientation';\nimport { calculateBandSpace, getRotatedSpaces, getValidDomain, setContinousAxisDomain, setOffset } from './helper';\nimport { spaceSetter } from './space-setter';\n\n/**\n *\n *\n * @export\n * @class TimeAxis\n * @extends {SimpleAxis}\n */\nexport default class TimeAxis extends SimpleAxis {\n\n    constructor (...params) {\n        super(...params);\n        this._minDiff = Infinity;\n    }\n\n    /**\n     *\n     *\n     * @param {*} range\n     *\n     * @memberof TimeAxis\n     */\n    createScale (range) {\n        let scale = super.createScale(range);\n\n        scale = scale.nice();\n        return scale;\n    }\n\n    /**\n     *\n     *\n     * @static\n     *\n     * @memberof TimeAxis\n     */\n    static type () {\n        return TIME;\n    }\n\n    /**\n     *\n     *\n     * @returns\n     * @memberof SimpleAxis\n     */\n    createAxis (config) {\n        const { orientation } = config;\n        const axisClass = axisOrientationMap[orientation];\n\n        if (axisClass) {\n            const axis = axisClass(this.scale());\n            return axis;\n        }\n        return null;\n    }\n\n    sanitizeTickFormatter (value) {\n        const { tickFormat } = value;\n\n        if (tickFormat) {\n            return (ticks) => {\n                const rawTicks = ticks.map(t => t.getTime());\n                return (val, i) => tickFormat(val, val.getTime(), i, rawTicks);\n            };\n        }\n        return () => text => this.scale().tickFormat()(text);\n    }\n\n     /**\n     *\n     *\n     *\n     * @memberof SimpleAxis\n     */\n    getTickSize () {\n        const {\n            showInnerTicks,\n            showOuterTicks\n        } = this.renderConfig();\n        const axis = this.axis();\n        axis.tickSizeInner(showInnerTicks === false ? 0 : 6);\n        axis.tickSizeOuter(showOuterTicks === false ? 0 : 6);\n        return super.getTickSize();\n    }\n\n    /**\n     *\n     *\n     *\n     * @memberof TimeAxis\n     */\n    getTickValues () {\n        return this.config().tickValues || this.scale().ticks();\n    }\n\n    /**\n     *\n     *\n     * @param {*} diff\n     *\n     * @memberof TimeAxis\n     */\n    minDiff (diff) {\n        this._minDiff = Math.min(this._minDiff, diff);\n        return this;\n    }\n\n    /**\n     *\n     *\n     * @param {*} d\n     *\n     * @memberof SimpleAxis\n     */\n    domain (...domain) {\n        if (domain.length) {\n            const domainValue = getValidDomain(this, domain[0]);\n            setContinousAxisDomain(this, domainValue);\n            this.setAxisComponentDimensions();\n            this.logicalSpace(null);\n            return this;\n        }\n        return this._domain;\n    }\n\n    /**\n     * Gets the space occupied by the axis\n     *\n     * @return {Object} object with details about size of the axis.\n     * @memberof SimpleAxis\n     */\n    getLogicalSpace () {\n        if (!this.logicalSpace()) {\n            this.logicalSpace(calculateBandSpace(this));\n            this.logicalSpace();\n            setOffset(this);\n        }\n        return this.logicalSpace();\n    }\n\n    getMinTickDifference () {\n        return getSmallestDiff(this.config().tickValues);\n    }\n\n    /**\n     * This method is used to set the space availiable to render\n     * the SimpleCell.\n     *\n     * @param {number} width The width of SimpleCell.\n     * @param {number} height The height of SimpleCell.\n     * @memberof AxisCell\n     */\n    setAvailableSpace (width = 0, height, padding, isOffset) {\n        let labelConfig = {};\n        const {\n           orientation\n       } = this.config();\n\n        this.availableSpace({ width, height, padding });\n\n        if (orientation === TOP || orientation === BOTTOM) {\n            labelConfig = spaceSetter(this, { isOffset }).time.x();\n        } else {\n            labelConfig = spaceSetter(this, { isOffset }).time.y();\n        }\n\n        // Set config\n        this.renderConfig({\n            labels: labelConfig\n        });\n        this.setTickConfig();\n        this.getTickSize();\n        return this;\n    }\n\n    /**\n     *\n     *\n     * @returns\n     * @memberof BandAxis\n     */\n    setTickConfig () {\n        let smartTicks;\n        let smartlabel;\n        const { tickValues } = this.config();\n        const { labels } = this.renderConfig();\n        const { height: availHeight, width: availWidth, noWrap } = this.maxTickSpaces();\n        const { labelManager } = this._dependencies;\n        const domain = this.getTickValues();\n\n        tickValues && this.axis().tickValues(tickValues);\n\n        const { width, height } = getRotatedSpaces(labels.rotation, availWidth, availHeight);\n\n        smartTicks = tickValues || domain;\n\n        // set the style on the shared label manager instance\n        labelManager.setStyle(this._tickLabelStyle);\n\n        if (domain && domain.length) {\n            const values = tickValues || domain;\n            const tickFormatter = this._tickFormatter(values);\n            smartTicks = values.map((d, i) => {\n                labelManager.useEllipsesOnOverflow(true);\n\n                smartlabel = labelManager.getSmartText(tickFormatter(d, i), width, height, noWrap);\n                return labelManager.constructor.textToLines(smartlabel);\n            });\n        }\n        this.smartTicks(smartTicks);\n        return this;\n    }\n}\n","export const x11Colors = {\n    Pink: { hex: 'ffc0cb', rgb: '255,192,203' },\n    LightPink: { hex: 'ffb6c1', rgb: '255,182,193' },\n    HotPink: { hex: 'ff69b4', rgb: '255,105,180' },\n    DeepPink: { hex: 'ff1493', rgb: '255,20,147' },\n    PaleVioletRed: { hex: 'db7093', rgb: '219,112,147' },\n    MediumVioletRed: { hex: 'c71585', rgb: '199,21,133' },\n    LightSalmon: { hex: 'ffa07a', rgb: '255,160,122' },\n    Salmon: { hex: 'fa8072', rgb: '250,128,114' },\n    DarkSalmon: { hex: 'e9967a', rgb: '233,150,122' },\n    LightCoral: { hex: 'f08080', rgb: '240,128,128' },\n    IndianRed: { hex: 'cd5c5c', rgb: '205,92,92' },\n    Crimson: { hex: 'dc143c', rgb: '220,20,60' },\n    FireBrick: { hex: 'b22222', rgb: '178,34,34' },\n    DarkRed: { hex: '8b0000', rgb: '139,0,0' },\n    Red: { hex: 'ff0000', rgb: '255,0,0' },\n    OrangeRed: { hex: 'ff4500', rgb: '255,69,0' },\n    Tomato: { hex: 'ff6347', rgb: '255,99,71' },\n    Coral: { hex: 'ff7f50', rgb: '255,127,80' },\n    DarkOrange: { hex: 'ff8c00', rgb: '255,140,0' },\n    Orange: { hex: 'ffa500', rgb: '255,165,0' },\n    Gold: { hex: 'ffd700', rgb: '255,215,0' },\n    Yellow: { hex: 'ffff00', rgb: '255,255,0' },\n    LightYellow: { hex: 'ffffe0', rgb: '255,255,224' },\n    LemonChiffon: { hex: 'fffacd', rgb: '255,250,205' },\n    LightGoldenrodYellow: { hex: 'fafad2', rgb: '250,250,210' },\n    PapayaWhip: { hex: 'ffefd5', rgb: '255,239,213' },\n    Moccasin: { hex: 'ffe4b5', rgb: '255,228,181' },\n    PeachPuff: { hex: 'ffdab9', rgb: '255,218,185' },\n    PaleGoldenrod: { hex: 'eee8aa', rgb: '238,232,170' },\n    Khaki: { hex: 'f0e68c', rgb: '240,230,140' },\n    DarkKhaki: { hex: 'bdb76b', rgb: '189,183,107' },\n    Cornsilk: { hex: 'fff8dc', rgb: '255,248,220' },\n    BlanchedAlmond: { hex: 'ffebcd', rgb: '255,235,205' },\n    Bisque: { hex: 'ffe4c4', rgb: '255,228,196' },\n    NavajoWhite: { hex: 'ffdead', rgb: '255,222,173' },\n    Wheat: { hex: 'f5deb3', rgb: '245,222,179' },\n    BurlyWood: { hex: 'deb887', rgb: '222,184,135' },\n    Tan: { hex: 'd2b48c', rgb: '210,180,140' },\n    RosyBrown: { hex: 'bc8f8f', rgb: '188,143,143' },\n    SandyBrown: { hex: 'f4a460', rgb: '244,164,96' },\n    Goldenrod: { hex: 'daa520', rgb: '218,165,32' },\n    DarkGoldenrod: { hex: 'b8860b', rgb: '184,134,11' },\n    Peru: { hex: 'cd853f', rgb: '205,133,63' },\n    Chocolate: { hex: 'd2691e', rgb: '210,105,30' },\n    SaddleBrown: { hex: '8b4513', rgb: '139,69,19' },\n    Sienna: { hex: 'a0522d', rgb: '160,82,45' },\n    Brown: { hex: 'a52a2a', rgb: '165,42,42' },\n    Maroon: { hex: '800000', rgb: '128,0,0' },\n    DarkOliveGreen: { hex: '556b2f', rgb: '85,107,47' },\n    Olive: { hex: '808000', rgb: '128,128,0' },\n    OliveDrab: { hex: '6b8e23', rgb: '107,142,35' },\n    YellowGreen: { hex: '9acd32', rgb: '154,205,50' },\n    LimeGreen: { hex: '32cd32', rgb: '50,205,50' },\n    Lime: { hex: '00ff00', rgb: '0,255,0' },\n    LawnGreen: { hex: '7cfc00', rgb: '124,252,0' },\n    Chartreuse: { hex: '7fff00', rgb: '127,255,0' },\n    GreenYellow: { hex: 'adff2f', rgb: '173,255,47' },\n    SpringGreen: { hex: '00ff7f', rgb: '0,255,127' },\n    MediumSpringGreen: { hex: '00fa9a', rgb: '0,250,154' },\n    LightGreen: { hex: '90ee90', rgb: '144,238,144' },\n    PaleGreen: { hex: '98fb98', rgb: '152,251,152' },\n    DarkSeaGreen: { hex: '8fbc8f', rgb: '143,188,143' },\n    MediumSeaGreen: { hex: '3cb371', rgb: '60,179,113' },\n    SeaGreen: { hex: '2e8b57', rgb: '46,139,87' },\n    ForestGreen: { hex: '228b22', rgb: '34,139,34' },\n    Green: { hex: '008000', rgb: '0,128,0' },\n    DarkGreen: { hex: '006400', rgb: '0,100,0' },\n    MediumAquamarine: { hex: '66cdaa', rgb: '102,205,170' },\n    Aqua: { hex: '00ffff', rgb: '0,255,255' },\n    Cyan: { hex: '00ffff', rgb: '0,255,255' },\n    LightCyan: { hex: 'e0ffff', rgb: '224,255,255' },\n    PaleTurquoise: { hex: 'afeeee', rgb: '175,238,238' },\n    Aquamarine: { hex: '7fffd4', rgb: '127,255,212' },\n    Turquoise: { hex: '40e0d0', rgb: '64,224,208' },\n    MediumTurquoise: { hex: '48d1cc', rgb: '72,209,204' },\n    DarkTurquoise: { hex: '00ced1', rgb: '0,206,209' },\n    LightSeaGreen: { hex: '20b2aa', rgb: '32,178,170' },\n    CadetBlue: { hex: '5f9ea0', rgb: '95,158,160' },\n    DarkCyan: { hex: '008b8b', rgb: '0,139,139' },\n    Teal: { hex: '008080', rgb: '0,128,128' },\n    LightSteelBlue: { hex: 'b0c4de', rgb: '176,196,222' },\n    PowderBlue: { hex: 'b0e0e6', rgb: '176,224,230' },\n    LightBlue: { hex: 'add8e6', rgb: '173,216,230' },\n    SkyBlue: { hex: '87ceeb', rgb: '135,206,235' },\n    LightSkyBlue: { hex: '87cefa', rgb: '135,206,250' },\n    DeepSkyBlue: { hex: '00bfff', rgb: '0,191,255' },\n    DodgerBlue: { hex: '1e90ff', rgb: '30,144,255' },\n    CornflowerBlue: { hex: '6495ed', rgb: '100,149,237' },\n    SteelBlue: { hex: '4682b4', rgb: '70,130,180' },\n    RoyalBlue: { hex: '4169e1', rgb: '65,105,225' },\n    Blue: { hex: '0000ff', rgb: '0,0,255' },\n    MediumBlue: { hex: '0000cd', rgb: '0,0,205' },\n    DarkBlue: { hex: '00008b', rgb: '0,0,139' },\n    Navy: { hex: '000080', rgb: '0,0,128' },\n    MidnightBlue: { hex: '191970', rgb: '25,25,112' },\n    Lavender: { hex: 'e6e6fa', rgb: '230,230,250' },\n    Thistle: { hex: 'd8bfd8', rgb: '216,191,216' },\n    Plum: { hex: 'dda0dd', rgb: '221,160,221' },\n    Violet: { hex: 'ee82ee', rgb: '238,130,238' },\n    Orchid: { hex: 'da70d6', rgb: '218,112,214' },\n    Fuchsia: { hex: 'ff00ff', rgb: '255,0,255' },\n    Magenta: { hex: 'ff00ff', rgb: '255,0,255' },\n    MediumOrchid: { hex: 'ba55d3', rgb: '186,85,211' },\n    MediumPurple: { hex: '9370db', rgb: '147,112,219' },\n    BlueViolet: { hex: '8a2be2', rgb: '138,43,226' },\n    DarkViolet: { hex: '9400d3', rgb: '148,0,211' },\n    DarkOrchid: { hex: '9932cc', rgb: '153,50,204' },\n    DarkMagenta: { hex: '8b008b', rgb: '139,0,139' },\n    Purple: { hex: '800080', rgb: '128,0,128' },\n    Indigo: { hex: '4b0082', rgb: '75,0,130' },\n    DarkSlateBlue: { hex: '483d8b', rgb: '72,61,139' },\n    SlateBlue: { hex: '6a5acd', rgb: '106,90,205' },\n    MediumSlateBlue: { hex: '7b68ee', rgb: '123,104,238' },\n    White: { hex: 'ffffff', rgb: '255,255,255' },\n    Snow: { hex: 'fffafa', rgb: '255,250,250' },\n    Honeydew: { hex: 'f0fff0', rgb: '240,255,240' },\n    MintCream: { hex: 'f5fffa', rgb: '245,255,250' },\n    Azure: { hex: 'f0ffff', rgb: '240,255,255' },\n    AliceBlue: { hex: 'f0f8ff', rgb: '240,248,255' },\n    GhostWhite: { hex: 'f8f8ff', rgb: '248,248,255' },\n    WhiteSmoke: { hex: 'f5f5f5', rgb: '245,245,245' },\n    Seashell: { hex: 'fff5ee', rgb: '255,245,238' },\n    Beige: { hex: 'f5f5dc', rgb: '245,245,220' },\n    OldLace: { hex: 'fdf5e6', rgb: '253,245,230' },\n    FloralWhite: { hex: 'fffaf0', rgb: '255,250,240' },\n    Ivory: { hex: 'fffff0', rgb: '255,255,240' },\n    AntiqueWhite: { hex: 'faebd7', rgb: '250,235,215' },\n    Linen: { hex: 'faf0e6', rgb: '250,240,230' },\n    LavenderBlush: { hex: 'fff0f5', rgb: '255,240,245' },\n    MistyRose: { hex: 'ffe4e1', rgb: '255,228,225' },\n    Gainsboro: { hex: 'dcdcdc', rgb: '220,220,220' },\n    LightGray: { hex: 'd3d3d3', rgb: '211,211,211' },\n    Silver: { hex: 'c0c0c0', rgb: '192,192,192' },\n    DarkGrey: { hex: 'a9a9a9', rgb: '169,169,169' },\n    Grey: { hex: '808080', rgb: '128,128,128' },\n    DimGrey: { hex: '696969', rgb: '105,105,105' },\n    LightSlateGrey: { hex: '778899', rgb: '119,136,153' },\n    SlateGrey: { hex: '708090', rgb: '112,128,144' },\n    DarkSlateGrey: { hex: '2f4f4f', rgb: '47,79,79' },\n    Black: { hex: '000000', rgb: '0,0,0' }\n};\n","import {\n    LINEAR\n} from '../enums/constants';\n/**\n * Set of default colors\n */\nexport const palette = [\n    '#086bb6',\n    '#f37d45',\n    '#f5ce02',\n    '#67bda0',\n    '#c54e4e',\n    '#ae70af'\n];\n\nexport const DEFAULT_GRADIENT_COLOR = '#eaeaea';\n\nexport const DEFAULT_CONFIG = {\n    range: palette,\n    value: palette[0],\n    step: false,\n    stops: 5,\n    type: LINEAR\n};\n","import { mergeRecursive, detectColor, hexToHsv, rgbToHsv } from 'muze-utils';\nimport { x11Colors } from './color-maps';\nimport { palette, DEFAULT_GRADIENT_COLOR } from './defaults';\nimport { LINEAR, RGB, HEX, HSL, HSLA } from '../enums/constants';\n\nexport const getHslString = hslArr => `hsla(${hslArr[0] * 360},${hslArr[1] * 100}%,${hslArr[2] * 100}%,\\\n${hslArr[3] || 1})`;\n\nexport const convertToXllString = baseString => (baseString.split(' ') || [])\n                .reduce((x, e) => `${x}${e.charAt(0).toUpperCase()}${e.slice(1)}`, '');\n\nexport const getActualHslColor = (e, paletteColor) => {\n    let color = '';\n    if (typeof e === 'string') {\n        e = e.replace(/ /g, '');\n        e = e.toLowerCase();\n        if (detectColor(e) === HSL || detectColor(e) === HSLA) {\n            color = e.match(/(\\d+(\\.\\d+)?)/g);\n            color = [color[0] / 360, color[1] / 100, color[2] / 100, color[3] || 1];\n        } else if (detectColor(e) === HEX) {\n            color = hexToHsv(e);\n        } else if (detectColor(e) === RGB) {\n            const col = e.substring(e.indexOf('(') + 1, e.lastIndexOf(')')).split(/,\\s*/);\n            color = rgbToHsv(...col);\n        } else if (x11Colors[convertToXllString(e)]) {\n            color = rgbToHsv(...x11Colors[convertToXllString(e)].rgb.split(','));\n        }\n    } else if (!(e instanceof Array)) {\n        color = rgbToHsv(paletteColor);\n    } else {\n        color = e;\n    }\n    return color;\n};\n\nexport const PROPS = {\n    config: {\n        sanitization: (context, config) => {\n            const defCon = mergeRecursive({}, context.constructor.defaultConfig());\n            if (config.type === LINEAR) {\n                config.range = config.range || [defCon.range[0]];\n                config.range = config.range.length > 1 ? config.range : [DEFAULT_GRADIENT_COLOR, ...config.range];\n            }\n            const oldConfig = mergeRecursive(defCon, context.config());\n            const newConfig = mergeRecursive(oldConfig, config);\n\n            if (newConfig.range instanceof Array) {\n                newConfig.range = newConfig.range.map((e, i) => getActualHslColor(e, palette[i]));\n                newConfig.stops = config.stops || newConfig.range.length;\n            }\n            newConfig.value = getActualHslColor(newConfig.value, newConfig.value);\n            return newConfig;\n        }\n    },\n    domain: {},\n    scale: {},\n    uniqueValues: {}\n};\n","import { InvalidAwareTypes } from 'muze-utils';\n\nexport const treatNullMeasures = (domainVal, scaledVal, minDomainScaledVal) => {\n    if (domainVal instanceof InvalidAwareTypes) {\n        return minDomainScaledVal;\n    }\n    return scaledVal;\n};\n","import { numberInterpolator, piecewiseInterpolator, hslInterpolator } from 'muze-utils';\nimport { CONTINOUS, DISCRETE } from '../enums/constants';\nimport { LINEAR, SEQUENTIAL, ORDINAL, QUANTILE } from '../enums/scale-type';\nimport { getHslString } from './props';\nimport { treatNullMeasures } from '../helper';\n\nconst getStops = (domain, stops) => {\n    let newStops = [];\n\n    if (stops instanceof Array) {\n        newStops = stops.slice().sort();\n        newStops = [...new Set([domain[0], ...stops, domain[1]])].sort();\n    } else {\n        const interpolator = numberInterpolator()(...domain);\n        for (let i = 0; i <= stops; i++) {\n            newStops[i] = interpolator(i / stops);\n        }\n    }\n\n    if (newStops[0] < domain[0]) {\n        newStops.shift();\n    }\n    return { domain, newStops };\n};\n\nconst rangeStops = (newStopsLength, range) => {\n    let newRange = [];\n    const maxRangeLength = Math.min(range.length, 18);\n\n    if (newStopsLength > maxRangeLength) {\n        const interpolator = piecewiseInterpolator()(hslInterpolator(), range.map(e => getHslString(e)));\n        for (let i = 0; i < newStopsLength; i++) {\n            newRange[i] = interpolator(i / (newStopsLength - 1));\n        }\n    } else {\n        newRange = range.slice(0, newStopsLength);\n    }\n    return { newRange };\n};\n\n/**\n*\n*\n* @param {*} domain\n*\n*/\nconst indexedDomain = (domain) => {\n    const uniqueVals = domain;\n    const retDomain = domain.map((d, i) => (i) / (domain.length - 1));\n    return { domain: retDomain, uniqueVals, scaleDomain: [0, 1] };\n};\n\n/**\n *\n *\n * @param {*} domain\n *\n */\nconst indexedDomainMeasure = (domain, stops, range) => {\n    const uniqueVals = domain;\n    return { domain, uniqueVals, scaleDomain: [0, 1], range };\n};\n\n/**\n *\n *\n * @param {*} domain\n *\n */\nconst normalDomain = (domain, stops, range) => {\n    const uniqueVals = domain;\n    return { uniqueVals, domain, nice: true, range };\n};\n\n/**\n *\n *\n * @param {*} domain\n * @param {*} stops\n *\n */\nconst steppedDomain = (domain, stops, range) => {\n    const { domain: uniqueVals, newStops } = getStops(domain, stops);\n    const { newRange } = rangeStops(newStops.length - 1, range);\n\n    return { uniqueVals, domain: newStops, nice: true, range: newRange };\n};\n\nconst continousSteppedDomain = (domain, stops, range) => {\n    const { domain: uniqueVals, newStops } = getStops(domain, range.length - 1);\n    const hslRange = range.map(e => getHslString(e));\n    return { uniqueVals, domain: newStops, nice: true, range: hslRange };\n};\n\n/**\n *\n *\n * @param {*} domainValue\n * @param {*} scale\n * @param {*} domain\n * @param {*} uniqueVals\n *\n */\nconst uniqueRange = (domainValue, scale, domain, uniqueVals) => {\n    const index = uniqueVals.indexOf(domainValue);\n    const numVal = domain[index];\n    return scale(numVal);\n};\n\n/**\n *\n *\n * @param {*} domainValue\n * @param {*} scale\n * @param {*} domain\n *\n */\nconst indexedRange = (domainValue, scale, domain) => {\n    const numVal = (domainValue - domain[0]) / (domain[domain.length - 1] - domain[0]);\n\n    return treatNullMeasures(domainValue, scale(numVal), scale(0));\n};\n\n/**\n *\n *\n * @param {*} domainValue\n * @param {*} scale\n */\nconst normalRange = (domainValue, scale, domain) => treatNullMeasures(domainValue, scale(domainValue),\n    scale(domain[0]));\n\n/**\n *\n *\n * @param {*} stops\n */\nconst strategies = () => ({\n    [`${CONTINOUS}-${CONTINOUS}-${SEQUENTIAL}`]: {\n        scale: SEQUENTIAL,\n        domainRange: () => indexedDomainMeasure,\n        value: () => indexedRange\n    },\n    [`${CONTINOUS}-${DISCRETE}-${SEQUENTIAL}`]: {\n        scale: SEQUENTIAL,\n        domainRange: () => indexedDomainMeasure,\n        value: () => indexedRange\n    },\n    [`${DISCRETE}-${DISCRETE}-${SEQUENTIAL}`]: {\n        scale: SEQUENTIAL,\n        domainRange: () => indexedDomain,\n        value: () => uniqueRange\n    },\n    [`${DISCRETE}-${DISCRETE}-${ORDINAL}`]: {\n        scale: ORDINAL,\n        domainRange: () => normalDomain,\n        value: () => normalRange\n    },\n    [`${CONTINOUS}-${CONTINOUS}-${ORDINAL}`]: {\n        scale: LINEAR,\n        domainRange: () => continousSteppedDomain,\n        value: () => normalRange\n    },\n    [`${CONTINOUS}-${DISCRETE}-${ORDINAL}`]: {\n        scale: QUANTILE,\n        domainRange: () => steppedDomain,\n        value: () => normalRange\n\n    }\n});\n\n/**\n *\n *\n * @param {*} domainType\n * @param {*} rangeType\n * @param {*} schemeType\n * @param {*} stops\n */\nexport const strategyGetter = (domainType, rangeType, schemeType, stops) =>\n     strategies(stops)[`${domainType}-${rangeType}-${schemeType || ''}`];\n","/**\n * @module Axis\n * This file declares a class that is used to render an axis to add  meaning to\n * plots.\n */\nimport { getUniqueId, generateGetterSetters, rgbToHsv } from 'muze-utils';\nimport { createScale, getScheme, getSchemeType } from '../scale-creator';\nimport { CONTINOUS, DISCRETE, COLOR } from '../enums/constants';\nimport { strategyGetter } from './color-strategy';\nimport { DEFAULT_CONFIG } from './defaults';\nimport { PROPS, getHslString } from './props';\n\n/**\n* This class is used to instantiate a SimpleAxis.\n* @class SimpleAxis\n*/\nexport default class ColorAxis {\n\n    /**\n    * Creates an instance of SimpleAxis.\n    * @param {Object} config input parameters.\n    * @param {Object | undefined} params.range Type of color range.\n    * @param {string} params.name the label to show on axis.\n    * @param {string} params.type The type of scale to handle.\n    * @memberof ColorAxis\n    */\n    constructor (config) {\n        generateGetterSetters(this, PROPS);\n        this.config(config);\n\n        this._domainType = this._config.type === 'linear' ? CONTINOUS : DISCRETE;\n        this._rangeType = (this._config.type === 'linear' && !this._config.step) ? CONTINOUS : DISCRETE;\n\n        this._schemeType = getSchemeType(this._config.range);\n\n        this._colorStrategy = this.setColorStrategy(this._domainType, this._rangeType, this._schemeType);\n        this._scale = this.createScale(this._colorStrategy);\n\n        this._id = getUniqueId();\n\n        this.updateDomain(config.domain);\n    }\n\n    /**\n     *\n     *\n     * @static\n     *\n     * @memberof ColorAxis\n     */\n    static defaultConfig () {\n        return DEFAULT_CONFIG;\n    }\n\n    /**\n     *\n     *\n     * @static\n     *\n     * @memberof ColorAxis\n     */\n    static type () {\n        return COLOR;\n    }\n\n    /**\n     *\n     *\n     * @param {*} colorStrategy\n     *\n     * @memberof ColorAxis\n     */\n    createScale (colorStrategy) {\n        const { range } = this.config();\n        if (range && typeof (range) === 'string') {\n            return getScheme(range);\n        }\n        return createScale({\n            type: colorStrategy.scale,\n            range\n        });\n    }\n\n    /**\n     *\n     *\n     * @param {*} domainType\n     * @param {*} rangeType\n     * @param {*} schemeType\n     *\n     * @memberof ColorAxis\n     */\n    setColorStrategy (domainType, rangeType, schemeType) {\n        const { stops } = this.config();\n\n        return strategyGetter(domainType, rangeType, schemeType, stops);\n    }\n\n    /**\n     *\n     *\n     * @param {*} domainVal\n     *\n     * @memberof ColorAxis\n     */\n    getHslString (hslColorArray) {\n        return getHslString(hslColorArray);\n    }\n    /**\n     *\n     *\n     * @param {*} domainVal\n     *\n     * @memberof ColorAxis\n     */\n    getColor (domainVal) {\n        return this.getHslString(this.getRawColor(domainVal));\n    }\n    /**\n     *\n     *\n     * @param {*} domainVal\n     *\n     * @memberof ColorAxis\n     */\n    getRawColor (domainVal) {\n        if (this.domain() && domainVal !== undefined) {\n            const scale = this.scale();\n            const range = scale.range ? scale.range() : null;\n            const color = this._colorStrategy.value(range)(domainVal, scale, this.domain(), this.uniqueValues());\n            if (color) {\n                if (typeof color === 'string') {\n                    const col = color.substring(color.indexOf('(') + 1, color.lastIndexOf(')')).split(/,\\s*/);\n                    return rgbToHsv(...col);\n                }\n                return [...color];\n            }\n        }\n        return [...this.config().value];\n    }\n\n    /**\n     *\n     *\n     * @param {*} [domain=[]]\n     *\n     * @memberof ColorAxis\n     */\n    updateDomain (domain = []) {\n        if (domain.length) {\n            const scale = this.scale();\n            const range = scale.range ? scale.range() : null;\n            const domainRangeFn = this._colorStrategy.domainRange();\n            const scaleInfo = domainRangeFn(domain, this.config().stops, range);\n\n            this.domain(scaleInfo.domain);\n            scaleInfo.range && this.scale().range(scaleInfo.range);\n            this.uniqueValues(scaleInfo.uniqueVals);\n            this.scale().domain(scaleInfo.scaleDomain || this.domain());\n        }\n        return this;\n    }\n\n    /**\n     * This method returns an object that can be used to\n     * reconstruct this instance.\n     *\n     * @return {Object} the serializable props of axis\n     * @memberof ShapeAxis\n     */\n    serialize () {\n        return {\n            type: this.constructor.type(),\n            scale: this.scale(),\n            domain: this.domain(),\n            config: this.config()\n        };\n    }\n\n    transformColor (color, transformationArr) {\n        const h = color[0] * 360;\n        const s = color[1] * 100;\n        const l = color[2] * 100;\n        const a = color[3] || 1;\n        const newH = h + transformationArr[0];\n        const newS = s + transformationArr[1];\n        const newL = l + transformationArr[2];\n        const newA = a + transformationArr[3] || 0;\n\n        return { color: `hsla(${newH},${newS}%,${newL}%,${newA})`, hsla: [newH / 360, newS / 100, newL / 100, newA] };\n    }\n\n    /**\n     * Returns the id of the axis.\n     * @return {string} Unique identifier of the axis.\n     */\n    id () {\n        return this._id;\n    }\n\n}\n","export const DEFAULT_CONFIG = {\n    value: 36,\n    range: [36, 1000]\n};\n","import { numberInterpolator, piecewiseInterpolator } from 'muze-utils';\nimport { CONTINOUS, DISCRETE } from '../enums/constants';\nimport { LINEAR, THRESHOLD } from '../enums/scale-type';\nimport { treatNullMeasures } from '../helper';\n\n/**\n *\n *\n * @param {*} domain\n *\n */\nconst indexedDomain = (domain) => {\n    const uniqueVals = domain;\n    const retDomain = domain.map((d, i) => (i) / (domain.length - 1));\n    return { domain: retDomain, uniqueVals, scaleDomain: [0, 1] };\n};\n\n/**\n *\n *\n * @param {*} domain\n *\n */\nconst normalDomain = (domain) => {\n    const uniqueVals = domain;\n    return { uniqueVals, domain };\n};\n\n/**\n *\n *\n * @param {*} domain\n * @param {*} intervals\n *\n */\nconst steppedDomain = (domain, intervals) => {\n    let newIntervals = [];\n    if (intervals instanceof Array) {\n        newIntervals = intervals.slice().sort();\n    } else {\n        const interpolator = numberInterpolator()(...domain);\n        for (let i = 0; i < intervals; i++) {\n            newIntervals[i] = interpolator(i / (intervals - 1));\n        }\n    }\n    if (newIntervals[0] < domain[0]) {\n        newIntervals.shift();\n    }\n    const retDomain = newIntervals;\n    return { uniqueVals: newIntervals, domain: retDomain, nice: true };\n};\n\n/**\n *\n *\n * @param {*} domainValue\n * @param {*} scale\n * @param {*} domain\n * @param {*} uniqueVals\n *\n */\nconst discreteRange = (domainValue, scale, domain) => {\n    const numVal = (domainValue - domain[0]) / (domain[domain.length - 1] - domain[0]);\n    const interpolator = numberInterpolator()(...scale.range());\n    return treatNullMeasures(domainValue, interpolator(numVal), interpolator(domain[0]));\n};\n\n/**\n *\n *\n * @param {*} domainValue\n * @param {*} scale\n * @param {*} domain\n *\n */\nconst pieceWiseRange = (domainValue, scale, domain, uniqueVals) => {\n    const index = uniqueVals.indexOf(domainValue);\n    const numVal = domain[index];\n    const fn = piecewiseInterpolator()(numberInterpolator(), [...scale.range()]);\n    return fn(numVal);\n};\n\n/**\n *\n *\n * @param {*} domainValue\n * @param {*} scale\n */\nconst normalRange = (domainValue, scale, domain) =>\n    treatNullMeasures(domainValue, scale(domainValue), scale(domain[0]));\n\n/**\n *\n *\n * @param {*} intervals\n */\nconst strategies = {\n    [`${DISCRETE}-${CONTINOUS}`]: {\n        scale: LINEAR,\n        domain: indexedDomain,\n        range: pieceWiseRange\n    },\n    [`${CONTINOUS}-${CONTINOUS}`]: {\n        scale: LINEAR,\n        domain: normalDomain,\n        range: normalRange\n    },\n    [`${CONTINOUS}-${DISCRETE}`]: {\n        scale: THRESHOLD,\n        domain: steppedDomain,\n        range: discreteRange\n    }\n};\n\n/**\n *\n *\n * @param {*} domainType\n * @param {*} rangeType\n * @param {*} schemeType\n * @param {*} intervals\n */\nexport const strategyGetter = (domainType, rangeType) =>\n     strategies[`${domainType}-${rangeType}`];\n","export const PROPS = {\n    config: {},\n    domain: {\n        sanitization: (context, value) => {\n            context.scale().domain(value);\n            return value;\n        }\n    },\n    range: {},\n    scale: {},\n    uniqueValues: {}\n};\n","/**\n * @module Axis\n * This file declares a class that is used to render an axis to add  meaning to\n * plots.\n */\nimport { getUniqueId, generateGetterSetters } from 'muze-utils';\nimport { createScale } from '../scale-creator';\nimport { DEFAULT_CONFIG } from './defaults';\nimport { SIZE, CONTINOUS, DISCRETE } from '../enums/constants';\nimport { strategyGetter } from './size-strategy';\nimport { PROPS } from './props';\n\n/**\n* This class is used to instantiate a SimpleAxis.\n* @class SimpleAxis\n*/\nexport default class SizeAxis {\n\n    /**\n     * Creates an instance of SimpleAxis.\n     * @param {Object} config input parameters.\n     * @memberof SizeAxis\n     */\n    constructor (config) {\n        generateGetterSetters(this, PROPS);\n\n        this._id = getUniqueId();\n        this._config = Object.assign({}, this.constructor.defaultConfig(), config);\n        // @todo: Will use configuration override using scale decorator\n        this._domainType = this._config.type === 'linear' ? CONTINOUS : DISCRETE;\n        this._rangeType = CONTINOUS;\n\n        this._sizeStrategy = this.setStrategy(this._domainType, this._rangeType);\n        this._scale = this.createScale(this._sizeStrategy);\n        this._range = this._config.range;\n\n        this.updateDomain(config.domain);\n    }\n\n     /**\n     *\n     *\n     * @param {*} domainType\n     * @param {*} rangeType\n     * @param {*} schemeType\n     *\n     * @memberof ColorAxis\n     */\n    setStrategy (domainType, rangeType) {\n        return strategyGetter(domainType, rangeType);\n    }\n\n    /**\n     *\n     *\n     *\n     * @memberof SizeAxis\n     */\n    createScale (strategy) {\n        const {\n            range\n        } = this.config();\n        return createScale({\n            type: strategy.scale,\n            range\n        });\n    }\n\n    /**\n     *\n     *\n     * @static\n     *\n     * @memberof ColorAxis\n     */\n    static defaultConfig () {\n        return DEFAULT_CONFIG;\n    }\n\n     /**\n     *\n     *\n     * @static\n     *\n     * @memberof ColorAxis\n     */\n    static type () {\n        return SIZE;\n    }\n\n    /**\n     *\n     *\n     * @param {*} domainVal\n     *\n     * @memberof SizeAxis\n     */\n    getSize (domainVal = 0) {\n        let sizeVal = 1;\n        const {\n            value\n        } = this.config();\n        const scale = this.scale();\n        const domain = this.domain() || [1, 1];\n\n        if (!scale || domain[0] === domain[1]) {\n            sizeVal = value;\n        } else {\n            return this._sizeStrategy.range(domainVal, scale, this.domain(), this.uniqueValues());\n        }\n        return sizeVal;\n    }\n\n    /**\n     * This method is used to assign a domain to the axis.\n     *\n     * @param {Array} domain the domain of the scale\n     * @memberof SizeAxis\n     */\n    updateDomain (domain) {\n        if (domain) {\n            const domainFn = this._sizeStrategy.domain;\n\n            const domainInfo = domainFn(domain, this.config().intervals);\n\n            this.domain(domainInfo.domain);\n            this.uniqueValues(domainInfo.uniqueVals);\n\n            this.scale().domain(domainInfo.scaleDomain || this.domain());\n        }\n        return this;\n    }\n\n    /**\n     * This method returns an object that can be used to\n     * reconstruct this instance.\n     *\n     * @return {Object} the serializable props of axis\n     * @memberof ShapeAxis\n     */\n    serialize () {\n        return {\n            type: this.constructor.type(),\n            scale: this.scale(),\n            domain: this.domain(),\n            range: this.range(),\n            config: this.config()\n        };\n    }\n\n    /**\n     * Returns the id of the axis.\n     * @return {string} Unique identifier of the axis.\n     */\n    id () {\n        return this._id;\n    }\n}\n","export const DEFAULT_CONFIG = {\n    generator: null,\n    value: 'circle',\n    range: ['circle', 'diamond', 'star', 'cross', 'square', 'wye', 'triangle']\n};\n","export const PROPS = {\n    config: {},\n    domain: {},\n    scale: {},\n    uniqueValues: {},\n    generator: {}\n};\n\n","/**\n * @module Axis\n * This file declares a class that is used to render an axis to add  meaning to\n * plots.\n */\nimport { getUniqueId, getSymbol, generateGetterSetters, mergeRecursive, InvalidAwareTypes } from 'muze-utils';\nimport { createScale } from '../scale-creator';\nimport { DEFAULT_CONFIG } from './defaults';\nimport { SHAPE } from '../enums/constants';\nimport { shapeGenerator } from './helper';\nimport { PROPS } from './props';\n\n/**\n* This class is used to instantiate a SimpleAxis.\n* @class SimpleAxis\n*/\nexport default class ShapeAxis {\n    /**\n    * Creates an instance of SimpleAxis.\n    * @param {Object} params input parameters.\n    * @param {Object | undefined} params.range Type of color scheme.\n    * @memberof ShapeAxis\n    */\n    constructor (config) {\n        generateGetterSetters(this, PROPS);\n\n        this._id = getUniqueId();\n        this._config = Object.assign({}, this.constructor.defaultConfig());\n        this._config = mergeRecursive(this._config, config);\n\n        this._scale = createScale({\n            type: 'ordinal',\n            range: this._config.range\n        });\n        this.updateDomain(config.domain);\n    }\n\n     /**\n     *\n     *\n     * @static\n     *\n     * @memberof ColorAxis\n     */\n    static defaultConfig () {\n        return DEFAULT_CONFIG;\n    }\n\n     /**\n     *\n     *\n     * @static\n     *\n     * @memberof ColorAxis\n     */\n    static type () {\n        return SHAPE;\n    }\n\n    /**\n     *\n     *\n     * @param {*} value\n     *\n     * @memberof ShapeAxis\n     */\n    getShape (value) {\n        if (!this.scale() || !this.domain() || !value || value instanceof InvalidAwareTypes) {\n            return this.config().value;\n        }\n\n        if (this._generatedShapes) {\n            return this._generatedShapes[value];\n        }\n\n        const shapeType = this.scale()(value);\n        if (shapeType === 'string') {\n            return getSymbol(shapeType);\n        }\n\n        return shapeType;\n    }\n\n    /**\n     * This method is used to assign a domain to the axis.\n     *\n     * @param {Array} domain the domain of the scale\n     * @memberof ShapeAxis\n     */\n    updateDomain (domain = []) {\n        if (domain.length) {\n            this.uniqueValues(domain);\n            this.domain(domain);\n            this.scale().domain(domain);\n\n            if (this.config().generator) {\n                this._generatedShapes = shapeGenerator(domain, this.config().generator);\n            }\n        }\n        return this;\n    }\n\n    /**\n     * This method returns an object that can be used to\n     * reconstruct this instance.\n     *\n     * @return {Object} the serializable props of axis\n     * @memberof ShapeAxis\n     */\n    serialize () {\n        return {\n            type: this.constructor.type(),\n            scale: this.scale(),\n            domain: this.domain(),\n            range: this.config().range,\n            config: this.config()\n        };\n    }\n\n    /**\n     * Returns the id of the axis.\n     * @return {string} Unique identifier of the axis.\n     */\n    id () {\n        return this._id;\n    }\n}\n","/**\n *\n *\n * @param {*} domain\n * @param {*} generatorFn\n *\n */\nexport const shapeGenerator = (domain, generatorFn) => {\n    const generatedShapes = {};\n    domain.forEach((value) => {\n        generatedShapes[value] = generatorFn(value);\n    });\n    return generatedShapes;\n};\n","import * as ScaleType from './enums/scale-type';\n\nconst DATA_TYPES = {\n    DIMENSION: 'dimension',\n    CATEGORICAL: 'categorical',\n    MEASURE: 'measure',\n    TEMPORAL: 'temporal'\n};\n\n/**\n * Map of DataModel types to associated field types.\n */\nexport const dataTypeScaleMap = {\n    [DATA_TYPES.DIMENSION]: ScaleType.BAND,\n    [DATA_TYPES.MEASURE]: ScaleType.LINEAR,\n    [DATA_TYPES.TEMPORAL]: ScaleType.TIME\n};\n\n","import { nestCollection, InvalidAwareTypes } from 'muze-utils';\n\n/**\n * Create multiple datasets from a single dataset by grouping the data using\n * a dimensional field.\n * @param {Array} schema Name and type of fields are stored in schema\n * @param {Array} data Data array\n * @param {Object} config Configuration object\n * @return {Array} Grouped data array\n */\nexport default (schema, data, config) => {\n    const groupBy = config.groupBy instanceof Array ? config.groupBy : [config.groupBy];\n    const groupByIndices = groupBy.map(fieldName => schema.findIndex(d => d.name === fieldName));\n\n    if (groupByIndices.find(d => d === -1) !== undefined) {\n        throw new Error(`Groupby field ${groupBy} not found in schema`);\n    }\n\n    const groupedData = nestCollection({\n        keys: groupByIndices,\n        data\n    });\n\n    groupedData.forEach((d) => {\n        const key = d.key;\n        if (InvalidAwareTypes.isInvalid(key)) {\n            d.key = InvalidAwareTypes.getInvalidType(key);\n        }\n    });\n    return groupedData;\n};\n","/**\n * @module Transform\n * This file exports a function that is used to implement\n * the identity transform\n */\n /* eslint no-unused-vars: 0 */\n /**\n  * This function accepts data and returns the data unchanged.\n  * @param {Object} schema The schema.\n  * @param {Array} data The data array.\n  * @param {Object} config The config object.\n  * @return {Array} The unchanged data.\n  */\n function identityTransform (schema, data, config) {\n     return data;\n }\n\n export default identityTransform;\n","/**\n * @module Transform\n * This file exports the transform factory.\n */\nimport * as TransformType from '../enums/transform-type';\nimport identity from '../identity-transform';\nimport group from '../group-transform';\nimport stack from '../stack-transform';\n\n/* istanbul ignore next */\nconst transformMap = {\n    [TransformType.IDENTITY]: identity,\n    [TransformType.GROUP]: group,\n    [TransformType.STACK]: stack\n};\n\n/**\n * This function is used to retirn a transform associated\n * with the given type.\n *\n * @param {string} type The type of the transform.\n * @return {Function} The transform function.\n */\nfunction transformFactory (type) {\n    const transform = transformMap[type];\n    if (typeof transform !== 'function') {\n        throw new Error('Invalid transform type supplied.');\n    }\n    return transform;\n}\n\nexport default transformFactory;\n","/**\n * @module Transform\n * This module exports constants that are used to reference transforms in\n * a consistent manner throughout the project.\n */\n/* eslint one-var: 0 */\n export const IDENTITY = 'identity';\n export const GROUP = 'group';\n export const STACK = 'stack';\n export const FRACTURE = 'fracture';\n","import { stack } from 'muze-utils';\n\nimport group from '../group-transform';\n/*\n    Normalize the data to a form which can be given to d3 stack for stacking the data\n    ['Product', 'Sales', 'Region'],\n    0 ['A', 2000, 'North'],\n    1 ['A', 3000, 'South'],\n    2 ['B', 3000, 'South'],\n    3 ['B', 2000, 'North'],\n    4 ['C', 3000, 'South'],\n    5 ['C', 2000, 'North']\n            |\n            |\n    ['Product', 'North', 'South'],\n    ['A', 2000, 3000],\n    ['B', 2000, 3000],\n    ['C', 2000, 3000]\n*/\n// eslint-disable-next-line require-jsdoc\nconst normalizeData = (data, schema, valueField, uniqueField, groupBy) => {\n    const groupedData = group(schema, data, {\n        groupBy: uniqueField\n    });\n    const uniqueFieldIndex = schema.findIndex(d => d.name === uniqueField);\n    const valueFieldIndex = schema.findIndex(d => d.name === valueField);\n    const seriesKeyIndex = schema.findIndex(d => d.name === groupBy);\n    const seriesKeys = data.map(d => d[seriesKeyIndex]).filter((item, pos, arr) => arr.indexOf(item) === pos).sort();\n    const fieldNames = schema.reduce((acc, obj, i) => {\n        acc[i] = obj.name;\n        return acc;\n    }, {});\n    const dataArr = groupedData.map((arr) => {\n        const tuples = {};\n        const rowObj = arr.values.reduce((acc, row) => {\n            acc = row.reduce((obj, value, i) => {\n                if (i === seriesKeyIndex) {\n                    obj[value] = row[valueFieldIndex];\n                    tuples[value] = row;\n                } else if (i !== valueFieldIndex) {\n                    obj[fieldNames[i]] = value;\n                }\n                return obj;\n            }, acc);\n            return acc;\n        }, {});\n        rowObj._tuple = tuples;\n            // Set missing values field to zero value\n        seriesKeys.forEach((seriesKey) => {\n            if (rowObj[seriesKey] === undefined) {\n                rowObj[seriesKey] = 0;\n                const newArr = new Array(arr.values[0].length);\n                newArr[uniqueFieldIndex] = arr.key;\n                newArr[seriesKeyIndex] = seriesKey;\n                rowObj._tuple[seriesKey] = newArr;\n            }\n        });\n        return rowObj;\n    });\n\n    return {\n        data: dataArr,\n        keys: seriesKeys\n    };\n};\n/**\n * Generate a stacked representation of data\n * @param {Array} schema schema Array\n * @param {Array} data data array\n * @param {Object} config Configuration object\n * @return {Array} stacked data\n */\nexport default (schema, data, config) => {\n    const uniqueField = config.uniqueField;\n    const valueField = config.value;\n    const groupBy = config.groupBy;\n    const sort = config.sort || 'descending';\n    const normalizedData = normalizeData(data, schema, valueField, uniqueField, groupBy);\n    const keys = normalizedData.keys;\n    const map = {};\n    const orderBy = config.orderBy;\n    const orderIndex = schema.findIndex(d => d.name === orderBy);\n    const groupByIndex = schema.findIndex(d => d.name === groupBy);\n    if (orderIndex !== -1) {\n        keys.forEach((key) => {\n            const name = data.find(d => d[groupByIndex] === key);\n            map[key] = name[orderIndex];\n        });\n        normalizedData.keys.sort((a, b) => map[a].localeCompare(map[b]));\n    }\n\n    const stackData = stack({\n        keys: normalizedData.keys,\n        offset: config.offset || 'diverging',\n        order: sort,\n        data: normalizedData.data\n    });\n    stackData.forEach((seriesData) => {\n        seriesData.forEach((dataObj) => {\n            dataObj.data = dataObj.data._tuple[seriesData.key];\n        });\n    });\n    return stackData;\n};\n\n","import {\n    FieldType,\n    getDomainFromData,\n    setStyles,\n    easeFns,\n    selectElement,\n    DimensionSubtype,\n    STATE_NAMESPACES,\n    retrieveNearestGroupByReducers,\n    getObjProp\n} from 'muze-utils';\nimport { ScaleType } from '@chartshq/muze-axis';\nimport { transformFactory } from '@chartshq/transform';\nimport { IDENTITY, STACK, GROUP, COLOR, SHAPE, SIZE, ENCODING, AGG_FN_SUM } from '../enums/constants';\n\nconst BAND = ScaleType.BAND;\n\nexport const getLayerColor = ({ datum, index }, { colorEncoding, colorAxis, colorFieldIndex }) => {\n    let rawColor = '';\n    let color = '';\n    if (colorEncoding && colorEncoding.value instanceof Function) {\n        color = colorEncoding.value(datum, index);\n        rawColor = colorEncoding.value(datum, index);\n    } else {\n        rawColor = colorAxis.getRawColor(datum._data[colorFieldIndex]);\n        color = colorAxis.getHslString(rawColor);\n    }\n    return { color, rawColor };\n};\n\nconst transfromColor = (colorAxis, datum, styleType, intensity) => {\n    datum.meta.stateColor[styleType] = datum.meta.stateColor[styleType] || datum.meta.originalColor;\n    const fillColorInfo = colorAxis.transformColor(datum.meta.stateColor[styleType], intensity);\n    datum.meta.stateColor[styleType] = fillColorInfo.hsla;\n\n    return fillColorInfo;\n};\n\nexport const applyInteractionStyle = (context, selectionSet, interactionStyles, config) => {\n    const elements = context.getPlotElementsFromSet(selectionSet);\n    const axes = context.axes();\n    const colorAxis = axes.color;\n    const apply = config.apply;\n    const interactionType = config.interactionType;\n    interactionStyles.forEach((style) => {\n        const styleType = style.type;\n        elements.style(styleType, ((d) => {\n            const { colorTransform, stateColor, originalColor } = d.meta;\n            colorTransform[interactionType] = colorTransform[interactionType] || {};\n            if (apply && !colorTransform[interactionType][styleType]) {\n                // fade selections\n                colorTransform[interactionType][styleType] = style.intensity;\n                const color = transfromColor(colorAxis, d, styleType, style.intensity).color;\n                return color;\n            }\n            if (!apply && colorTransform[interactionType][styleType]) {\n                 // unfade selections\n                colorTransform[interactionType][styleType] = null;\n                return transfromColor(colorAxis, d, styleType, style.intensity.map(e => -e)).color;\n            }\n            const [h, s, l, a] = stateColor[styleType] ? stateColor[styleType] : originalColor;\n            return `hsla(${h * 360},${s * 100}%,${l * 100}%, ${a || 1})`;\n        }));\n    });\n};\n\n/**\n *\n *\n * @param {*} selectionSet\n * @param {*} className\n * @param {*} hasFaded\n */\nexport const fadeUnfadeSelection = (context, selectionSet, hasFaded, interaction) => {\n    const interactionConfig = { interaction, apply: hasFaded };\n    applyInteractionStyle(context, selectionSet, 'fade', interactionConfig);\n};\n\n/**\n *\n *\n * @param {*} selectionSet\n * @param {*} className\n * @param {*} hasFaded\n */\nexport const focusUnfocusSelection = (context, selectionSet, isFocussed, interaction) => {\n    const interactionConfig = { interaction, apply: isFocussed };\n    applyInteractionStyle(context, selectionSet, 'focus', interactionConfig);\n};\n\n/**\n *\n *\n * @param {*} axes\n *\n */\nexport const getAxesScales = (axes) => {\n    const [xAxis, yAxis] = [ENCODING.X, ENCODING.Y].map(e => axes[e]);\n    const [xScale, yScale] = [xAxis, yAxis].map(e => e && e.scale());\n    return {\n        xAxis,\n        yAxis,\n        xScale,\n        yScale\n    };\n};\n\n/**\n *\n *\n * @param {*} encoding\n * @param {*} fieldsConfig\n *\n */\nexport const getEncodingFieldInf = (encoding, fieldsConfig) => {\n    const [xField, yField, x0Field, y0Field, colorField, shapeField, sizeField] =\n        [ENCODING.X, ENCODING.Y, ENCODING.X0, ENCODING.Y0, COLOR, SHAPE, SIZE].map(e => encoding[e] &&\n            encoding[e].field);\n\n    const [xFieldType, yFieldType] = [xField, yField, x0Field, y0Field].map(e => fieldsConfig[e] &&\n        fieldsConfig[e].def.type);\n\n    const [xFieldSubType, yFieldSubType] = [xField, yField].map(e => fieldsConfig[e] && (fieldsConfig[e].def.subtype ||\n        fieldsConfig[e].def.type));\n\n    const [xFieldIndex, yFieldIndex, x0FieldIndex, y0FieldIndex] = [xField, yField, x0Field, y0Field]\n        .map(e => fieldsConfig[e] && fieldsConfig[e].index);\n\n    return {\n        xField,\n        yField,\n        colorField,\n        shapeField,\n        sizeField,\n        x0Field,\n        y0Field,\n        xFieldType,\n        yFieldType,\n        xFieldSubType,\n        yFieldSubType,\n        xFieldIndex,\n        yFieldIndex,\n        x0FieldIndex,\n        y0FieldIndex\n    };\n};\n\n/**\n *\n *\n * @param {*} dataModel\n * @param {*} config\n * @param {*} transformType\n *\n */\nexport const transformData = (dataModel, config, transformType, encodingFieldInf) => {\n    const data = dataModel.getData({ withUid: true });\n    const schema = data.schema;\n    const transform = config.transform;\n    const {\n        xField,\n        yField,\n        xFieldType,\n        yFieldType\n    } = encodingFieldInf;\n    const uniqueField = xFieldType === FieldType.MEASURE ? yField : xField;\n\n    return transformFactory(transformType)(schema, data.data, {\n        groupBy: transform.groupBy,\n        uniqueField,\n        sort: transform.sort || 'none',\n        offset: transform.offset,\n        orderBy: transform.orderBy,\n        value: yFieldType === FieldType.MEASURE ? yField : xField\n    }, data.uids);\n};\n\nexport const getIndividualClassName = (d, i, data, context) => {\n    const className = context.config().individualClassName;\n    let classNameStr = '';\n    if (className instanceof Function) {\n        classNameStr = className(d, i, data, context);\n    }\n    return classNameStr;\n};\n\n/*\n * This method resolves the x, y, x0 and y0 values from the transformed data.\n * It also checks the type of transformed data for example, if it is a stacked data\n * then it fetches the y and y0 values from the stacked data.\n * @param {Array.<Array>} transformedData transformed data\n * @param {Object} fieldsConfig field definitions\n * @param {string} transformType type of transformed data - stack, group or identity.\n * @return {Array.<Object>} Normalized data\n*/\nexport const getNormalizedData = (transformedData, fieldsConfig, encodingFieldInf, transformType) => {\n    const transformedDataArr = transformType === IDENTITY ? [transformedData] : transformedData;\n    const {\n        xFieldType,\n        xFieldIndex,\n        yFieldIndex,\n        x0FieldIndex,\n        y0FieldIndex\n    } = encodingFieldInf;\n    const fieldsLen = Object.keys(fieldsConfig).length;\n    /**\n     * Returns normalized data from transformed data. It recursively traverses through\n     * the transformed data if there it is nested.\n     */\n    return transformedDataArr.map((data) => {\n        const values = transformType === GROUP ? data.values : data;\n        return values.map((d) => {\n            let pointObj = {};\n            let tuple;\n            if (transformType === STACK) {\n                tuple = d.data || [];\n                let y;\n                let y0;\n                let x;\n                let x0;\n                if (d[1] >= d[0]) {\n                    y = x0 = d[1];\n                    x = y0 = d[0];\n                } else {\n                    y = x0 = d[0];\n                    x = y0 = d[1];\n                }\n\n                pointObj = xFieldType === FieldType.MEASURE ? {\n                    x,\n                    x0,\n                    y: tuple[yFieldIndex],\n                    y0: tuple[yFieldIndex]\n                } : {\n                    x: tuple[xFieldIndex],\n                    x0: tuple[xFieldIndex],\n                    y,\n                    y0\n                };\n                pointObj._data = tuple;\n                pointObj._id = tuple[fieldsLen];\n            } else {\n                pointObj = {\n                    x: d[xFieldIndex],\n                    y: d[yFieldIndex],\n                    x0: d[x0FieldIndex],\n                    y0: d[y0FieldIndex]\n                };\n                pointObj._data = d;\n                pointObj._id = d[fieldsLen];\n            }\n            return pointObj;\n        });\n    }).filter(d => d.length);\n};\n\nexport const calculateDomainFromData = (data, encodingFieldInf, transformType) => {\n    const {\n        xFieldSubType,\n        yFieldSubType,\n        xField,\n        yField,\n        x0Field,\n        y0Field\n    } = encodingFieldInf;\n    const domains = {};\n    const yEnc = ENCODING.Y;\n    const xEnc = ENCODING.X;\n    if (xField) {\n        domains.x = getDomainFromData(data, x0Field || transformType === STACK ? [xEnc, ENCODING.X0] : [xEnc, xEnc],\n            xFieldSubType);\n    }\n    if (yField) {\n        domains.y = getDomainFromData(data, y0Field || transformType === STACK ? [ENCODING.Y0, ENCODING.Y] :\n            [yEnc, yEnc], yFieldSubType);\n    }\n\n    return domains;\n};\n\nexport const attachDataToVoronoi = (voronoi, points) => {\n    voronoi.data([].concat(...points).filter(d => d._id !== undefined).map((d) => {\n        const point = d.update;\n        return {\n            x: point.x,\n            y: point.y,\n            data: d\n        };\n    }));\n};\n\n/**\n *\n *\n * @param {*} target\n * @param {*} styles\n * @param {*} remove\n */\nexport const updateStyle = (target, styles, remove) => {\n    for (const key in styles) {\n        if ({}.hasOwnProperty.call(styles, key)) {\n            target.style(key, remove ? null : styles[key]);\n        }\n    }\n};\n\n/**\n *\n *\n * @param {*} mount\n * @param {*} context\n */\nexport const animateGroup = (mount, context) => {\n    let groupTransition;\n    let update;\n    const { transition, groupAnimateStyle } = context;\n    const { duration, effect, disabled } = transition;\n    if (groupAnimateStyle) {\n        setStyles(mount.node(), groupAnimateStyle.enter);\n        update = groupAnimateStyle.update;\n        if (!disabled) {\n            groupTransition = mount.transition()\n                .ease(easeFns[effect])\n                .duration(duration)\n                .on('end', function () {\n                    updateStyle(selectElement(this), update, true);\n                });\n        } else {\n            groupTransition = mount;\n        }\n        updateStyle(groupTransition, update);\n    }\n};\n\nexport const positionPoints = (context, points) => {\n    const positioner = context.encodingTransform();\n    if (positioner) {\n        return positioner(points, context, { smartLabel: context._dependencies.smartLabel });\n    }\n    return points;\n};\n\n/**\n  * Gets the width of each group. It gets the width from axis if it is available for\n  * example when the scale is nominal else it calculates the width from the\n  * range of the axis and number of data points.\n  *\n  * @param {SimpleAxis} axis instance of axis\n  * @param {number} minDiff Minimum difference between data points\n  * @return {number} width of each bar\n  * @private\n*/\nexport const getGroupSpan = (axis, minDiff) => {\n    let groupSpan;\n    const width = axis.getUnitWidth();\n    const scale = axis.scale();\n    const range = scale.range();\n    const domain = scale.domain();\n    !width ? groupSpan = (Math.abs(range[1] - range[0]) / Math.abs(domain[1] - domain[0])) * minDiff :\n        (groupSpan = width);\n\n    return groupSpan;\n};\n\nexport const getPlotMeasurement = (context, dimensionalValues) => {\n    const fieldInfo = context.encodingFieldsInf();\n    const axes = context.axes();\n    const transformType = context.transformType();\n    const config = context.config();\n    const bandScale = context._bandScale;\n\n    return ['x', 'y'].map((type) => {\n        let span = 0;\n        let groupSpan = 0;\n        let padding = 0;\n        let offsetValues = [];\n        if (fieldInfo[`${type}FieldType`] === FieldType.DIMENSION) {\n            let actualGroupWidth;\n            const isTemporal = fieldInfo[`${type}FieldSubType`] === DimensionSubtype.TEMPORAL;\n            const timeDiff = isTemporal ? context.dataProps().timeDiffs[type] : 0;\n            const axis = axes[type];\n            const pad = config[`pad${type.toUpperCase()}`];\n            const innerPadding = config.innerPadding;\n            const keys = dimensionalValues;\n            const scale = axis.scale();\n            groupSpan = getGroupSpan(axis, timeDiff);\n            const isAxisBandScale = axis.constructor.type() === BAND;\n            const axisPadding = axis.config().padding;\n            // If it is a grouped bar then the width of each bar in a grouping is retrieved from\n            // a band scale. The band scale will have range equal to width of one group of bars and\n            // the domain is set to series keys.\n            if (transformType === 'group') {\n                const groupPadding = isAxisBandScale ? 0 : axisPadding * groupSpan / 2;\n                bandScale.range([groupPadding, groupSpan - groupPadding]).domain(keys).paddingInner(innerPadding);\n                span = bandScale.bandwidth();\n                actualGroupWidth = groupSpan - (isAxisBandScale ? 0 : axisPadding * groupSpan);\n                offsetValues = keys.map(key => bandScale(key) - (isAxisBandScale ? 0 : (groupSpan / 2)));\n            } else if (pad !== undefined) {\n                let offset;\n                if (isAxisBandScale) {\n                    const step = scale.step();\n                    offset = scale.padding() * step;\n                    span = scale.bandwidth() + offset;\n                } else {\n                    span = groupSpan;\n                }\n                offsetValues = keys.map(() => (isAxisBandScale ? -(offset / 2) : -(span / 2)));\n            } else {\n                padding = isAxisBandScale ? 0 : axisPadding * groupSpan;\n                span = groupSpan - padding;\n                actualGroupWidth = span;\n                offsetValues = keys.map(() => (isAxisBandScale ? 0 : -(span / 2)));\n            }\n\n            groupSpan = actualGroupWidth;\n            padding = isAxisBandScale ? axisPadding * axis.scale().step() : axisPadding * groupSpan;\n        }\n\n        return {\n            span,\n            offsetValues,\n            groupSpan,\n            padding\n        };\n    });\n};\n\nexport const initializeGlobalState = (context) => {\n    const store = context.store();\n    const globalState = context.constructor.getState()[0];\n    const namespace = context.metaInf().namespace;\n    for (const prop in globalState) {\n        store.append(`${STATE_NAMESPACES.LAYER_GLOBAL_NAMESPACE}.${prop}`, {\n            [namespace]: null\n        });\n    }\n};\n\nexport const resolveInvalidTransformType = (context) => {\n    const {\n        xField,\n        yField,\n        xFieldType,\n        yFieldType\n    } = context.encodingFieldsInf();\n    const groupByField = context.config().transform.groupBy;\n    const fieldsConfig = context.data().getFieldsConfig();\n    const groupByFieldMeasure = fieldsConfig[groupByField] && fieldsConfig[groupByField].def.type === FieldType.MEASURE;\n    if (!xField || !yField || groupByFieldMeasure || !groupByField || xFieldType === FieldType.DIMENSION &&\n        yFieldType === FieldType.DIMENSION) {\n        return IDENTITY;\n    }\n    return null;\n};\n\nexport const getValidTransform = context => resolveInvalidTransformType(context) || context.config().transform.type;\n\nexport const getValidTransformForAggFn = (context) => {\n    const resolvedInvalidTransformType = resolveInvalidTransformType(context);\n    if (resolvedInvalidTransformType) {\n        return resolvedInvalidTransformType;\n    }\n\n    const {\n        xField,\n        yField,\n        xFieldType,\n        yFieldType\n    } = context.encodingFieldsInf();\n    const groupByField = context.config().transform.groupBy;\n    const isCustomTransformTypeProvided = !!getObjProp(context._customConfig, 'transform', 'type');\n    let transformType = context.config().transform.type;\n\n    if (!isCustomTransformTypeProvided && groupByField && xFieldType !== yFieldType) {\n        const measureField = xFieldType === FieldType.MEASURE ? xField : yField;\n        const { [measureField]: aggFn } = retrieveNearestGroupByReducers(context.data(), measureField);\n        transformType = aggFn === AGG_FN_SUM ? STACK : GROUP;\n    }\n\n    return transformType;\n};\n\nexport const getMarkId = (source, schema) => source.filter((val, i) => schema[i] &&\n    schema[i].type === FieldType.DIMENSION).join();\n","import { CommonProps, STATE_NAMESPACES } from 'muze-utils';\nimport { getEncodingFieldInf } from '../helpers';\nimport * as PROPS from '../enums/props';\n\nconst renderLayer = (context) => {\n    const mount = context.mount();\n    if (mount) {\n        context.render(mount);\n        context.dependencies().throwback.commit(CommonProps.ON_LAYER_DRAW, true);\n    }\n};\n\nexport const listenerMap = (context, ns) => [\n    {\n        props: [`${ns.local}.${PROPS.DATA}`],\n        listener: ([, data]) => {\n            const config = context.config();\n            const encodingValue = config.encoding;\n            if (data && encodingValue) {\n                const fieldsConfig = data.getFieldsConfig();\n                const encodingFieldsInf = getEncodingFieldInf(encodingValue, fieldsConfig);\n                context.encodingFieldsInf(encodingFieldsInf);\n                context.resolveTransformType();\n                context._transformedData = context.getTransformedData(data, config,\n                    context.transformType(), encodingFieldsInf);\n                context._normalizedData = context.getNormalizedData(context._transformedData, fieldsConfig);\n                const domain = context.calculateDomainFromData(context._normalizedData, context.encodingFieldsInf(),\n                    context.data().getFieldsConfig());\n                context._domain = domain;\n                !context._updateLock && context.domain(domain);\n            }\n        },\n        type: 'registerImmediateListener'\n    },\n    {\n        props: [`${ns.local}.${PROPS.CONFIG}`],\n        listener: ([, config]) => {\n            const calculateDomain = config.calculateDomain;\n            const props = context.getRenderProps();\n            const store = context.store();\n            const namespaceInf = {\n                namespace: `${STATE_NAMESPACES.LAYER_LOCAL_NAMESPACE}.${context.metaInf().namespace}`,\n                key: 'renderListener'\n            };\n            store.unsubscribe(namespaceInf);\n            if (calculateDomain === false) {\n                props.push(`${ns.local}.${PROPS.DATA}`);\n            }\n            store.registerChangeListener(props,\n                () => {\n                    renderLayer(context);\n                }, false, namespaceInf);\n        },\n        type: 'registerImmediateListener'\n    }\n];\n\n","export const DATA = 'data';\nexport const CONFIG = 'config';\nexport const MEASUREMENT = 'measurement';\nexport const DOMAIN = 'domain';\nexport const MOUNT = 'mount';\n","import { mergeRecursive } from 'muze-utils';\nimport * as PROPS from '../enums/props';\n\nexport const defaultOptions = {\n    [PROPS.CONFIG]: {\n        value: null,\n        meta: {\n            sanitization: (config, oldConfig, context) => {\n                context._customConfig = config;\n                const constructor = context.constructor;\n                const newConf = mergeRecursive({}, constructor.defaultConfig());\n                return constructor.defaultPolicy(newConf, config);\n            }\n        }\n    },\n    [PROPS.DATA]: {\n        value: null,\n        meta: {\n            preset: (data, context) => {\n                if (context._cacheEnabled) {\n                    context._cachedData.push(data);\n                } else {\n                    context._cachedData = [data];\n                }\n            }\n        }\n    }\n    // [PROPS.MOUNT]: {\n    //     value: null\n    // },\n    // [PROPS.AXES]: {\n    //     value: null\n    // },\n    // [PROPS.MEASUREMENT]: {\n    //     value: null\n    // }\n};\n","import {\n    getUniqueId,\n    mergeRecursive,\n    FieldType,\n    selectElement,\n    ReservedFields,\n    registerListeners,\n    transactor,\n    DataModel,\n    clone,\n    generateGetterSetters,\n    STATE_NAMESPACES\n} from 'muze-utils';\nimport { SimpleLayer } from '../simple-layer';\nimport * as PROPS from '../enums/props';\nimport { props } from './props';\nimport {\n    transformData,\n    calculateDomainFromData,\n    getNormalizedData,\n    applyInteractionStyle,\n    initializeGlobalState,\n    getValidTransform\n} from '../helpers';\nimport { listenerMap } from './listener-map';\nimport { defaultOptions } from './default-options';\n\n/**\n * An abstract class which gives definition of common layer functionality like\n * - transforming data for various modes. Supported modes: identity, group and stack.\n * - calculating data domain\n * - linking dependent layers\n * - merging policy of configuration\n * - interaction sideffect helpers\n * - retrieving dom elements from data using id\n * - retrieving the physical dimensions of marks\n * - disposing layer\n *\n * Every layer has to extend base layer and give concrete definition.\n * This layer does not have any default visual. A new layer has to define the logic of `render` for rendering the\n * visuals\n *\n * @public\n * @class\n * @module BaseLayer\n */\nexport default class BaseLayer extends SimpleLayer {\n\n    /**\n     * Creates a layer using a configuration and data.\n     *\n     * @public\n     * @constructor\n     * @param {DataModel} data Instance of DataModel to be used. This DataModel instance serves as the data for a layer.\n     * @param {Object} axes Axes instances to be used for rendering the layer. Axes are used for mapping data from\n     *      value to px.\n     * @param {SimpleAxis} axes.x X axis of the layer. Based on the type of variable it gets instance of BandAxis,\n     *      TimeAxis, ContinuousAxis\n     * @param {SimpleAxis} axes.y X axis of the layer. Based on the type of variable it gets instance of BandAxis,\n     *      TimeAxis, ContinuousAxis\n     * @param {ColorAxis} axes.color Axis for coloring a layer using color interpolators\n     * @param {ShapeAxis} axes.shape Axis for providing a shape\n     * @param {SizeAxis} axes.size Axis for determining size of a mark using size interpolator\n     * @param {LayerConfig} config Configuration of the layer\n     * @param {Object} dependencies Dependencies of the layer\n     * @param {SmartLabel} dependencies.smartLabel Smartlabel singleton instance\n     */\n    constructor (data, axes, config, dependencies = {}) {\n        super();\n\n        generateGetterSetters(this, props);\n        this.data(data);\n        this.axes(axes);\n        this.config(config);\n        this.alias(this.constructor.formalName() + getUniqueId());\n        this.dependencies(dependencies);\n        this._points = [];\n        this._cachedData = [];\n        this._id = getUniqueId();\n        this._measurement = {};\n        this._animationDonePromises = [];\n        this._customConfig = null;\n    }\n\n    static getState () {\n        return [\n            {\n                domain: {}\n            },\n            {\n                config: {},\n                data: {}\n            }\n        ];\n    }\n\n    store (...params) {\n        if (params.length) {\n            this._store = params[0];\n            const metaInf = this.metaInf();\n            const localNs = `${STATE_NAMESPACES.LAYER_LOCAL_NAMESPACE}.${metaInf.namespace}`;\n            initializeGlobalState(this);\n            const store = this.store();\n            store.append(`${STATE_NAMESPACES.LAYER_LOCAL_NAMESPACE}`, {\n                [metaInf.namespace]: null\n            });\n\n            transactor(this, defaultOptions, store.model, {\n                namespace: localNs\n            });\n            registerListeners(this, listenerMap, {\n                local: localNs,\n                global: STATE_NAMESPACES.LAYER_GLOBAL_NAMESPACE\n            }, {\n                unitRowIndex: metaInf.unitRowIndex,\n                unitColIndex: metaInf.unitColIndex\n            });\n            return this;\n        }\n        return this._store;\n    }\n\n    domain (...dom) {\n        const prop = `${STATE_NAMESPACES.LAYER_GLOBAL_NAMESPACE}.${PROPS.DOMAIN}.${this.metaInf().namespace}`;\n        if (dom.length) {\n            this.store().commit(prop, dom[0]);\n            return this;\n        }\n        return this.store().get(prop);\n    }\n\n    /**\n     * Creates a layer instance\n     * @return {BaseLayer} Instance of a layer\n     */\n    static create (...params) {\n        return new this(...params);\n    }\n\n    /**\n     * Default configuration of the layer. This configuration gets merged to the user passed configuration using a\n     * plolicy. Base layer only returns part of configuraion, any layer overridding base layer should return its own\n     * configuration.\n     *\n     * @public\n     * @static\n     *\n     * @return {Object} Default configuration\n     */\n    static defaultConfig () {\n        return {\n            transform: {\n                type: 'identity'\n            }\n        };\n    }\n\n    /**\n     * Policy defines how user config gets merged to default config. The default policy here does a deep copy\n     * operation.\n     * Any policy which does more than deep copying should define the policy as a static member.\n     *\n     * @static\n     * @public\n     *\n     * @param {LayerConfig} conf Configuration with which the user config will be merged\n     * @param {LayerConfig} userConf Configuration given by the user\n     *\n     * @return {LayerConfig} Merged layer configuration\n     */\n    static defaultPolicy (conf, userConf) {\n        return mergeRecursive(conf, userConf);\n    }\n\n    /**\n     * Determines a name for a layer. This name of the layer is used in the input data to refer to this layer.\n     * ```\n     *  .layers([\n     *      mark: 'bar',\n     *      encoding: { ... }\n     *  ])\n     * ```\n     *\n     * @static\n     * @public\n     *\n     * @return {string} name of layer\n     */\n    static formalName () {\n        return 'base';\n    }\n\n    encodingFieldsInf (...fieldsInf) {\n        if (fieldsInf.length) {\n            this._encodingFieldsInf = fieldsInf[0];\n            return this;\n        }\n        return this._encodingFieldsInf;\n    }\n\n    encodingTransform (...encodingTransform) {\n        if (encodingTransform.length) {\n            this._encodingTransform = encodingTransform[0];\n            return this;\n        }\n        return this._encodingTransform;\n    }\n\n    /**\n     * Provides a alias for a layer. Like it's possible to have same layer (like bar) multiple times, but among multiple\n     * layers of same type if one layer has to be referred, alias is used. If no alias is given then `formalName` is set\n     * as the alias name.\n     *\n     *\n     * If used as setter\n     * @param  {string} alias Name of the alias\n     * @return {BaseLayer} Instance of current base layer\n     *\n     * If used as getter\n     * @return {string} Alias of the current layer\n     *\n     * @public\n     */\n    alias (...params) {\n        if (params.length) {\n            this._alias = params[0];\n            return this;\n        }\n        return this._alias || this.constructor.formalName();\n    }\n\n    dependencies (...params) {\n        if (params.length) {\n            this._dependencies = params[0];\n            return this;\n        }\n        return this._dependencies;\n    }\n\n    enableCaching () {\n        this._cacheEnabled = true;\n        return this;\n    }\n\n    clearCaching () {\n        this._cacheEnabled = false;\n        return this.data(this._cachedData[0]);\n    }\n\n    /**\n     * Serialize the schema. Merge config is used for serialization.\n     *\n     * @public\n     *\n     * @return {LayerConfig} Serialized schema\n     */\n    serialize () {\n        return this.config();\n    }\n\n    /**\n     * Returns the unique identifier of this layer. Id is auto generated during the creation proceess of a schema.\n     *\n     * @public\n     *\n     * @return {string} id of the layer\n     */\n    id () {\n        return this._id;\n    }\n\n    /**\n     * Returns the transformed data based on given transform type.\n     * It first gets the transform method from transform factory based on type of transform. It then calls the\n     * transform method with the data and passes the configuration parameters of transform such as\n     * groupBy, value field, etc.\n     *\n     * @param {DataModel} dataModel Instance of DataModel\n     * @param {Object} config Configuration for transforming data\n     * @return {Array.<Array>} Transformed data.\n     */\n    getTransformedData (dataModel, config, transformType, encodingFieldsInf) {\n        return transformData(dataModel, config, transformType, encodingFieldsInf);\n    }\n\n    /**\n     * Calculates the domain from the data.\n     * It checks the type of field and calculates the domain based on that. For example, if it\n     * is a quantitative or temporal field, then it calculates the min and max from the data or\n     * if it is a categorical field then it gets all the values from the data of that field.\n     * @param {Array} data DataArray\n     * @param {Object} fieldsConfig Configuration of fields\n     * @return {Array} Domain values array.\n     */\n    calculateDomainFromData (data) {\n        let domains = {};\n        const isEmpty = this.data().isEmpty();\n\n        if (!isEmpty) {\n            domains = calculateDomainFromData(data, this.encodingFieldsInf(), this.transformType());\n        }\n        return domains;\n    }\n\n    static shouldDrawAnchors () {\n        return false;\n    }\n\n    /**\n     * Returns the domain for the axis.\n     *\n     * @param {string} encodingType type of encoding x, y, etc.\n     * @return {Object} Axis domains\n     */\n    getDataDomain (encodingType) {\n        const domains = this.store()\n            .get(`${STATE_NAMESPACES.LAYER_GLOBAL_NAMESPACE}.${PROPS.DOMAIN}.${this.metaInf().namespace}`);\n        return encodingType !== undefined ? domains[encodingType] || [] : domains;\n    }\n\n    /**\n     * Normalizes the transformed data and returns it.\n     *\n     * @param {string} encodingType type of encoding x, y, etc.\n     * @return {Object} Axis domains\n     */\n    getNormalizedData (transformedData, fieldsConfig) {\n        return getNormalizedData(transformedData, fieldsConfig, this.encodingFieldsInf(), this.transformType());\n    }\n\n    /**\n     * Gets the nearest point closest to the given x and y coordinate. If no nearest point is found, then it returns\n     * null.\n     *\n     * @public\n     *\n     * @param {number} x X Coordinate.\n     * @param {number} y Y Coordinate.\n     *\n     * @return {Object} Information of the nearest point.\n     * ```\n     *      {\n     *          // id property contains the field names and their corresponding values in a 2d array. This is the data\n     *          // associated with the nearest point.\n     *          id: // Example data: [['Origin'], ['USA']],\n     *          dimensions: // Physical dimensions of the point.\n     *          layerId: // Id of the layer instance.\n     *      }\n     * ```\n     */\n    getNearestPoint () {\n        return null;\n    }\n\n    applyInteractionStyle (interactionType, selectionSet, apply, styles) {\n        const interactionConfig = this.config().interaction || {};\n\n        let interactionStyles = interactionConfig[interactionType];\n        interactionStyles = styles || interactionStyles;\n        if (interactionStyles) {\n            applyInteractionStyle(this, selectionSet, interactionStyles, {\n                apply,\n                interactionType\n            });\n        }\n    }\n\n    disableUpdate () {\n        this._updateLock = true;\n        return this;\n    }\n\n    enableUpdate () {\n        this._updateLock = false;\n        return this;\n    }\n\n    resolveTransformType () {\n        this._transformType = getValidTransform(this);\n    }\n\n    transformType () {\n        return this._transformType;\n    }\n\n    /**\n     * Renders the layer\n     * @return {BaseLayer} Instance of the layer.\n     */\n    render () {\n        return this;\n    }\n\n    /**\n     *\n     *\n     *\n     * @memberof BaseLayer\n     */\n    elemType () {\n        return 'g';\n    }\n\n    /**\n     * Disposes the entire layer.\n     *\n     * @return {BaseLayer} Instance of layer.\n     */\n    remove () {\n        this.store().unsubscribe({\n            namespace: `${STATE_NAMESPACES.LAYER_LOCAL_NAMESPACE}.${this.metaInf().namespace}`\n        });\n        selectElement(this.mount()).remove();\n        return this;\n    }\n\n    /**\n     * Stores point in an object with key as the categorical value or temporal value\n     *\n     * @param {string} key categorical value or temporal value\n     * @param {Object} data Information of the data point\n     * @return {BarLayer} Instance of bar layer\n     */\n    cachePoint (key, data) {\n        if (key === null) {\n            return this;\n        }\n        const pointMap = this._pointMap;\n        !pointMap[key] && (pointMap[key] = []);\n        pointMap[key].push(data);\n        return this;\n    }\n\n    /**\n     *\n     *\n     * @param {*} dataProps\n     *\n     * @memberof BaseLayer\n     */\n    dataProps (...dataProps) {\n        if (dataProps.length) {\n            this._dataProps = dataProps[0];\n            return this;\n        }\n        return this._dataProps;\n    }\n\n    /**\n     *\n     *\n     * @param {*} data\n     * @param {*} id\n     *\n     * @memberof BaseLayer\n     */\n    getIdentifiersFromData (data) {\n        const schema = this.data().getData().schema;\n        const fieldsConfig = this.data().getFieldsConfig();\n        const identifiers = [[], []];\n        const {\n                xFieldType,\n                yFieldType,\n                xField,\n                yField\n            } = this.encodingFieldsInf();\n\n        const [xMeasure, yMeasure] = [xFieldType, yFieldType].map(type => type === FieldType.MEASURE);\n        schema.forEach((d, i) => {\n            const name = d.name;\n            if (fieldsConfig[name].def.type === FieldType.DIMENSION) {\n                identifiers[0].push(name);\n                identifiers[1].push(data[i]);\n            }\n        });\n\n        if (xMeasure && yMeasure) {\n            const xMeasureIndex = fieldsConfig[xField].index;\n            const yMeasureIndex = fieldsConfig[yField].index;\n            identifiers[0].push(...[xField, yField]);\n            identifiers[1].push(...[data[xMeasureIndex], data[yMeasureIndex]]);\n        }\n        return identifiers;\n    }\n\n    getPlotSpan () {\n        return {\n            x: 0,\n            y: 0\n        };\n    }\n\n    getPlotPadding () {\n        return {\n            x: 0,\n            y: 0\n        };\n    }\n\n    /**\n     * Returns the information of the marks corresponding to the supplied identifiers. Identifiers are a set of field\n     * names and their corresponding values in an array. It can also be an instance of datamodel.\n     *\n     * For example,\n     * ```\n     *  const identifiers = [\n     *      ['Origin', 'Cylinders'],\n     *      ['USA', '8']\n     *  ];\n     *  const points = barLayer.getPointsFromIdentifiers(identifiers);\n     * ```\n     * @public\n     * @param {Array|DataModel} identifiers Identifiers of the marks.\n     * @param {Object} config Optional configuration which describes how to get the information.\n     * @param {boolean} config.getAllAttrs If true, then returns all the information of the points, else returns only\n     * the positions of the points.\n     * @param {boolean} config.getBBox If true, then returns the bounding box of all the marks.\n     *\n     * @return {Array} Array of points contains\n     */\n    getPointsFromIdentifiers (identifiers, config = {}) {\n        const getAllAttrs = config.getAllAttrs;\n        const getBBox = config.getBBox;\n        if (!this.data()) {\n            return [];\n        }\n        let fieldNames;\n        let values;\n        if (identifiers instanceof DataModel) {\n            const dataObj = identifiers.getData();\n            fieldNames = dataObj.schema.map(d => d.name);\n            values = dataObj.data;\n        } else {\n            fieldNames = identifiers[0];\n            values = identifiers.slice(1, identifiers.length);\n        }\n\n        const points = this._points;\n        const fieldsConfig = this.data().getFieldsConfig();\n\n        const filteredPoints = [].concat(...points).filter((point) => {\n            const { _data, _id } = point;\n\n            return fieldNames.every((field, idx) => {\n                if (field in fieldsConfig && fieldsConfig[field].def.type === FieldType.DIMENSION) {\n                    return values.findIndex(d => d[idx] === _data[fieldsConfig[field].index]) !== -1;\n                } else if (field === ReservedFields.ROW_ID) {\n                    return values.findIndex(d => d[idx] === _id) !== -1;\n                } return true;\n            });\n        });\n        return getAllAttrs ? filteredPoints : filteredPoints.map((d) => {\n            const obj = clone(d);\n            if (getBBox) {\n                const update = obj.update || obj;\n                if (obj.size !== undefined) {\n                    const sizeVal = Math.sqrt(obj.size / Math.PI) * 2;\n                    update.width = sizeVal;\n                    update.height = sizeVal;\n                    update.x -= sizeVal / 2;\n                    update.y -= sizeVal / 2;\n                } else {\n                    if (update.width === undefined) {\n                        update.width = 2;\n                    }\n                    if (update.height === undefined) {\n                        update.height = 2;\n                    }\n                }\n            }\n\n            return obj.update || obj;\n        }).sort((a, b) => a.y - b.y);\n    }\n\n    getTransformedDataFromIdentifiers (identifiers) {\n        const { data: identifierData, schema: identifierSchema } = identifiers.getData();\n        const normalizedData = this._normalizedData;\n        const fieldsConfig = this.data().getFieldsConfig();\n        const {\n            yField,\n            xField,\n            yFieldType,\n            xFieldType\n        } = this.encodingFieldsInf();\n        let measureIndex;\n        let enc;\n        if (xFieldType === FieldType.MEASURE) {\n            measureIndex = fieldsConfig[xField].index;\n            enc = 'x';\n        } else if (yFieldType === FieldType.MEASURE) {\n            measureIndex = fieldsConfig[yField].index;\n            enc = 'y';\n        }\n\n        const transformedData = [];\n        normalizedData.forEach((dataArr) => {\n            dataArr.forEach((dataObj) => {\n                const tupleArr = dataObj._data;\n                const exist = identifierSchema.every((obj, i) =>\n                    identifierData.findIndex(d => tupleArr[fieldsConfig[obj.name].index] === d[i]) !== -1);\n                if (exist) {\n                    const transformedVal = dataObj[enc];\n                    const row = dataObj._data;\n                    const tuple = {};\n                    for (const key in fieldsConfig) {\n                        const index = fieldsConfig[key].index;\n                        tuple[key] = row[index];\n                        if (index === measureIndex) {\n                            tuple[key] = transformedVal;\n                        }\n                    }\n                    transformedData.push(tuple);\n                }\n            });\n        });\n\n        return [transformedData, this.data().getData().schema];\n    }\n\n    /**\n     * Returns the dom elements associated with the supplied set of row ids.\n     * Each element in the layer is mapped with a row of the datamodel. When given an array of row ids, it returns all\n     * the elements which is mapped with those row ids.\n     *\n     * @public\n     * @param {Array} set Array of row ids\n     *\n     * @return {Selection} D3 Selection of dom elements.\n     */\n    getPlotElementsFromSet (set) {\n        return selectElement(this.mount()).selectAll(this.elemType()).filter(data =>\n            (data ? set.indexOf(data._id) !== -1 : false));\n    }\n\n    /**\n     * Notifies when all animations/transitions of the layer are completed.\n     *\n     * @public\n     * @return {Promise} Returns a promise to notify the animation completion.\n     */\n    animationDone () {\n        return Promise.all(this._animationDonePromises);\n    }\n\n    registerAnimationDoneHook () {\n        let resolveFn;\n        const promise = new Promise((resolve) => {\n            resolveFn = resolve;\n        });\n        this._animationDonePromises.push(promise);\n\n        return () => {\n            resolveFn();\n        };\n    }\n\n    getRenderProps () {\n        const metaInf = this.metaInf();\n        return [`${STATE_NAMESPACES.GROUP_GLOBAL_NAMESPACE}.domain.y.${metaInf.unitRowIndex}0`,\n            `${STATE_NAMESPACES.GROUP_GLOBAL_NAMESPACE}.domain.x.${metaInf.unitColIndex}0`];\n    }\n}\n","import {\n    selectElement,\n    makeElement,\n    pathInterpolators,\n    Symbols\n} from 'muze-utils';\nimport { updateStyle } from '../../helpers';\n\nconst line = Symbols.line;\n\nconst filterFn = (d) => {\n    const { update } = d;\n    return update.y !== null && update.x !== null;\n};\n\n/**\n * Draws a line from the points\n * Generates a svg path string\n * @param {Object} params Contains container, points and interpolate attribute.\n */\nexport const drawLine = (context) => {\n    let filteredPoints;\n    const { layer, container, points, interpolate, connectNullData, className, style, transition } = context;\n    const mount = selectElement(container).attr('class', className);\n    const curveInterpolatorFn = pathInterpolators[interpolate];\n    const linepath = line()\n                .curve(curveInterpolatorFn)\n                .x(d => d.update.x)\n                .y(d => d.update.y)\n                .defined(filterFn);\n\n    filteredPoints = points;\n    if (connectNullData) {\n        filteredPoints = points.filter(filterFn);\n    }\n\n    updateStyle(mount, style);\n    let element = makeElement(mount, 'path', [1]);\n    element.classed(points[0].className, true);\n    if (!transition.disabled) {\n        element = element.transition()\n        .duration(transition.duration)\n        .on('end', layer.registerAnimationDoneHook());\n    }\n    element.attr('d', linepath(filteredPoints))\n                    .style('fill-opacity', 0);\n    return element;\n};\n","import { CLASSPREFIX } from '../../enums/constants';\n\nexport const defaultConfig = {\n    classPrefix: CLASSPREFIX,\n    defClassName: 'layer-line',\n    className: '',\n    interpolate: 'linear',\n    transform: {\n        type: 'group'\n    },\n    interaction: {\n        highlight: [{\n            type: 'stroke',\n            intensity: [0, 0, -15, 0]\n        }],\n        fade: [{\n            type: 'stroke',\n            intensity: [0, 0, +15, 0]\n        }],\n        focus: [{\n            type: 'stroke',\n            intensity: [0, 0, +15, 0]\n        }]\n    },\n    nearestPointThreshold: 20,\n    encoding: {\n        color: {},\n        x: {},\n        y: {},\n        strokeOpacity: {\n            value: 1\n        }\n    },\n    transition: {\n        effect: 'cubic',\n        duration: 1000\n    },\n    connectNullData: false\n};\n\n","import {\n    Voronoi,\n    getQualifiedClassName,\n    selectElement,\n    makeElement,\n    FieldType,\n    getObjProp,\n    InvalidAwareTypes\n} from 'muze-utils';\nimport { BaseLayer } from '../../base-layer';\nimport { drawLine } from './renderer';\nimport { defaultConfig } from './default-config';\nimport { ENCODING } from '../../enums/constants';\nimport {\n    attachDataToVoronoi,\n    animateGroup,\n    getLayerColor,\n    positionPoints,\n    getIndividualClassName\n} from '../../helpers';\n\nimport './styles.scss';\n\n/**\n * This layer is used to render straight or smoothed line paths. The mark type of this layer is ```line```.\n *\n * @public\n *\n * @class\n * @module LineLayer\n * @extends BaseLayer\n */\nexport default class LineLayer extends BaseLayer {\n\n    /**\n     * Creates an instance of LineLayer.\n     * @param {*} args\n     * @memberof LineLayer\n     */\n    constructor (...args) {\n        super(...args);\n        this._voronoi = new Voronoi();\n    }\n\n    /**\n     *\n     *\n     * @static\n     *\n     * @memberof LineLayer\n     */\n    static formalName () {\n        return 'line';\n    }\n\n    /**\n     *\n     *\n     *\n     * @memberof LineLayer\n     */\n    elemType () {\n        return 'path';\n    }\n\n    /**\n     * Default configuration of line layer\n     * @return {Object} Default configuration of layer\n     */\n    static defaultConfig () {\n        return defaultConfig;\n    }\n\n    /**\n     *\n     *\n     * @static\n     * @param {*} conf\n     * @param {*} userConf\n     *\n     * @memberof LineLayer\n     */\n    static defaultPolicy (conf, userConf) {\n        const config = BaseLayer.defaultPolicy(conf, userConf);\n        const encoding = config.encoding;\n        const transform = config.transform;\n        const colorField = encoding.color && encoding.color.field;\n\n        if (colorField && !transform.groupBy) {\n            transform.groupBy = colorField;\n        }\n        return config;\n    }\n\n    /**\n     * Returns the draw method for line\n     * @return {Function} Draw method of line layer\n     */\n    getDrawFn () {\n        return drawLine;\n    }\n\n    static shouldDrawAnchors () {\n        return true;\n    }\n\n    /**\n     * Generates the x and y positions for each point\n     * @param {Array} data Data Array\n     * @param {Object} encoding Visual Encodings of the layer\n     * @param {Object} axes Contains the axis\n     * @param {number} seriesIndex index of series\n     * @return {Array} Array of points\n     */\n    translatePoints (data, encodingFieldsInf, axes) {\n        let points = [];\n        const xAxis = axes.x;\n        const yAxis = axes.y;\n        const colorAxis = axes.color;\n        const encoding = this.config().encoding;\n        const { xFieldType, yFieldType } = encodingFieldsInf;\n        const isXDim = xFieldType === FieldType.DIMENSION;\n        const isYDim = yFieldType === FieldType.DIMENSION;\n        const key = isXDim ? ENCODING.X : (isYDim ? ENCODING.Y : null);\n        const colorEncoding = encoding.color;\n        const colorField = colorEncoding.field;\n        const fieldsConfig = this.data().getFieldsConfig();\n        const colorFieldIndex = colorField && fieldsConfig[colorField].index;\n        const style = {};\n        const meta = {};\n\n        points = data.map((d, i) => {\n            const xPx = xAxis.getScaleValue(d.x) + xAxis.getUnitWidth() / 2;\n            const yPx = yAxis.getScaleValue(d.y) + yAxis.getUnitWidth() / 2;\n            const { color, rawColor } = getLayerColor({ datum: d, index: i }, {\n                colorEncoding, colorAxis, colorFieldIndex });\n\n            style.stroke = color;\n            style['fill-opacity'] = 0;\n            meta.stateColor = {};\n            meta.originalColor = rawColor;\n            meta.colorTransform = {};\n\n            const point = {\n                enter: {},\n                update: {\n                    x: d.x instanceof InvalidAwareTypes ? null : xPx,\n                    y: d.y instanceof InvalidAwareTypes ? null : yPx\n                },\n                style,\n                _data: d._data,\n                _id: d._id,\n                rowId: d._id,\n                source: d._data,\n                meta\n            };\n            point.className = getIndividualClassName(d, i, data, this);\n            this.cachePoint(d[key], point);\n            return point;\n        });\n        points = positionPoints(this, points);\n        return points;\n    }\n\n    /**\n     * Renders the line plot\n     * @param {SVGElement} container svg element\n     * @return {LineLayer} instance of line layer\n     */\n    render (container) {\n        let points;\n        let seriesClassName;\n        let style;\n\n        const config = this.config();\n        const {\n            encoding,\n            interpolate,\n            className,\n            defClassName,\n            transition\n        } = config;\n        const normalizedData = this._normalizedData;\n        const transformedData = this._transformedData;\n        const fieldsConfig = this.data().getFieldsConfig();\n        const axes = this.axes();\n        const keys = transformedData.map(d => d.key);\n        const qualifiedClassName = getQualifiedClassName(defClassName, this.id(), config.classPrefix);\n        const containerSelection = selectElement(container);\n        const colorField = encoding.color.field;\n        const colorFieldIndex = fieldsConfig[colorField] && fieldsConfig[colorField].index;\n\n        this._points = [];\n        this._pointMap = {};\n        containerSelection.classed(qualifiedClassName.join(' '), true);\n        containerSelection.classed(className, true);\n        makeElement(container, 'g', normalizedData, null, {\n            enter: (group) => {\n                animateGroup(group, {\n                    transition,\n                    groupAnimateStyle: {\n                        enter: {\n                            'stroke-opacity': 0,\n                            'fill-opacity': this.getPathStyle()['fill-opacity']\n                        },\n                        update: {\n                            'stroke-opacity': encoding.strokeOpacity.value\n                        }\n                    }\n                });\n            },\n            update: (group, dataArr, i) => {\n                points = this.translatePoints(dataArr, this.encodingFieldsInf(), axes, i);\n                this._points.push(points);\n                seriesClassName = `${qualifiedClassName[0]}-${keys[i] || i}`.toLowerCase();\n\n                let color;\n                const colorValFn = encoding.color.value;\n                const colorVal = points.find(d => d._data[colorFieldIndex] !== null &&\n                        d._data[colorFieldIndex] !== undefined);\n\n                if (colorValFn) {\n                    color = colorValFn(dataArr, i, normalizedData);\n                } else {\n                    color = axes.color.getColor(colorVal && colorVal._data[colorFieldIndex]);\n                }\n\n                style = this.getPathStyle(color);\n                this.getDrawFn()({\n                    layer: this,\n                    container: group.node(),\n                    interpolate,\n                    points,\n                    className: seriesClassName,\n                    transition,\n                    style: style || {},\n                    connectNullData: config.connectNullData\n                });\n            }\n        }, d => d[0]._data[colorFieldIndex] || d[0]._id);\n\n        attachDataToVoronoi(this._voronoi, this._points);\n        return this;\n    }\n\n    /**\n     * Get the css styles need to be applied on the line path\n     * @param {string} color Color value\n     * @return {Object} Path styles\n     */\n    getPathStyle (color) {\n        return {\n            stroke: color,\n            'fill-opacity': '0'\n        };\n    }\n\n    /**\n     * Gets the nearest point closest to the given position\n     * @param {number} x x position\n     * @param {number} y y position\n     * @return {Object} Nearest point information\n     */\n    getNearestPoint (x, y, config) {\n        let searchRadius = config.searchRadius;\n        const data = this.data();\n\n        if (!data || (data && data.isEmpty())) {\n            return null;\n        }\n\n        searchRadius = searchRadius !== undefined ? searchRadius : this.config().nearestPointThreshold;\n        const point = this._voronoi.find(x, y, searchRadius);\n        const dimensions = getObjProp(point, 'data', 'data', 'update');\n\n        if (point) {\n            const { _data, _id } = point.data.data;\n            const identifiers = this.getIdentifiersFromData(_data, _id);\n            return {\n                id: identifiers,\n                dimensions: [{\n                    x: dimensions.x,\n                    y: dimensions.y,\n                    width: 2,\n                    height: 2\n                }],\n                layerId: this.id()\n            };\n        }\n        return null;\n    }\n}\n","import {\n    easeFns,\n    selectElement,\n    pathInterpolators,\n    Symbols\n} from 'muze-utils';\n\nconst area = Symbols.area;\n/**\n * Draws a line from the points\n * Generates a svg path string\n * @param {Object} params Contains container, points and interpolate attribute.\n */\nconst /* istanbul ignore next */ drawArea = (params) => {\n    let filteredPoints;\n    const { layer, container, points, style, transition, className, connectNullData, interpolate } = params;\n\n    const { effect: easeEffect, duration } = transition;\n    const mount = selectElement(container);\n    const curveInterpolatorFn = pathInterpolators[interpolate];\n    const selection = mount.selectAll('path').data([params.points]);\n    const [enterAreaPath, updateAreaPath] = ['enter', 'update'].map(e => area().curve(curveInterpolatorFn)\n                    .x(d => d[e].x)\n                    .y1(d => d[e].y)\n                    .y0(d => d[e].y0)\n                    .defined(d => d[e].y !== null\n            ));\n\n    filteredPoints = points;\n    mount.attr('class', className);\n    if (connectNullData) {\n        filteredPoints = points.filter(d => d.update.y !== null);\n    }\n    const selectionEnter = selection.enter().append('path').attr('d', enterAreaPath(filteredPoints));\n    selection.merge(selectionEnter).transition().ease(easeFns[easeEffect])\n                    .duration(duration)\n                    .on('end', layer.registerAnimationDoneHook())\n                    .attr('d', updateAreaPath(filteredPoints))\n                    .each(function (d) {\n                        const element = selectElement(this);\n\n                        element.classed(d[0].className, true);\n                        Object.keys(style).forEach(key => element.style(key, style[key]));\n                    });\n};\n\nexport default drawArea;\n","import { FieldType, InvalidAwareTypes } from 'muze-utils';\nimport { defaultConfig } from './default-config';\nimport { LineLayer } from '../line';\nimport drawArea from './renderer';\nimport './styles.scss';\nimport { STACK, ENCODING } from '../../enums/constants';\nimport {\n    getAxesScales,\n    positionPoints,\n    getLayerColor,\n    getIndividualClassName,\n    getValidTransformForAggFn\n} from '../../helpers';\n\n/**\n * Area layer renders a closed path. The mark type of this layer is ```area```. This layer can be used\n * to create stacked or multi-series areas and vertical range area plots by using the encoding properties.\n *\n * To create this layer using layer configuration from canvas,\n * ```\n *      canvas.layers([{\n *          mark: 'area',\n *          transform: {\n *              type: 'stack' // Produces a stacked area.\n *          }\n *      }]);\n * ```\n *\n * @public\n *\n * @class\n * @module AreaLayer\n * @extends LineLayer\n */\nexport default class AreaLayer extends LineLayer {\n    /** oation of line layer\n     * @return {Object} Default configuration of layer\n     */\n    static defaultConfig () {\n        return defaultConfig;\n    }\n\n    /**\n     *\n     *\n     * @static\n     *\n     * @memberof AreaLayer\n     */\n    static formalName () {\n        return 'area';\n    }\n\n    /**\n     * Calculates the domain from data. It calls its parent class's method which is line layer\n     * to get the domain and overwrites the domain according to its need.\n     * @return {Array} Domain values\n     */\n    calculateDomainFromData (data, encodingFieldsInf, fieldsConfig) {\n        const domains = super.calculateDomainFromData(data, fieldsConfig);\n        [ENCODING.X, ENCODING.Y].forEach((type) => {\n            const { [`${type}FieldType`]: fieldType } = encodingFieldsInf;\n            if (fieldType === FieldType.MEASURE && domains[type] !== undefined) {\n                domains[type][0] = Math.min(domains[type][0], 0);\n                domains[type][1] = Math.max(0, domains[type][1]);\n            }\n        });\n        return domains;\n    }\n\n    /**\n     * Returns the drawing method of this layer\n     * @return {Function} Draw method\n     */\n    getDrawFn () {\n        return drawArea;\n    }\n\n    /**\n     * Generates the x and y positions for each point\n     * @param {Array} data Data Array\n     * @param {Object} encoding Visual Encodings of the layer\n     * @param {Object} axes Contains the axis\n     * @return {Array} Array of points\n     */\n    translatePoints (data, encodingFieldsInf, axes) {\n        let points = [];\n        const transformType = this.transformType();\n        const colorAxis = axes.color;\n        const config = this.config();\n        const encoding = config.encoding;\n        const colorEncoding = encoding.color;\n        const colorField = colorEncoding.field;\n        const fieldsConfig = this.data().getFieldsConfig();\n        const colorFieldIndex = colorField && fieldsConfig[colorField].index;\n        const { xField, yField, y0Field } = encodingFieldsInf;\n        const {\n            xAxis,\n            yAxis\n       } = getAxesScales(axes);\n        const classNameFn = config.individualClassName;\n        const isXDim = fieldsConfig[xField] && fieldsConfig[xField].def.type === FieldType.DIMENSION;\n        const isYDim = fieldsConfig[yField] && fieldsConfig[yField].def.type === FieldType.DIMENSION;\n        const key = isXDim ? 'x' : (isYDim ? 'y' : null);\n        const minYVal = yAxis.domain()[0];\n        const basePos = minYVal < 0 ? yAxis.getScaleValue(0) : yAxis.getScaleValue(minYVal);\n        points = data.map((d, i) => {\n            const xPx = xAxis.getScaleValue(d.x) + xAxis.getUnitWidth() / 2;\n            const yPx = yAxis.getScaleValue(d.y);\n            const y0Px = (y0Field || transformType === STACK) ? yAxis.getScaleValue(d.y0) : basePos;\n            const { color, rawColor } = getLayerColor({ datum: d, index: i }, {\n                colorEncoding, colorAxis, colorFieldIndex });\n            const style = {};\n            const meta = {};\n            style.fill = color;\n            // style['fill-opacity'] = 0;\n            meta.stateColor = {};\n            meta.originalColor = rawColor;\n            meta.colorTransform = {};\n            const invalidY = d.y instanceof InvalidAwareTypes;\n            const invalidY0 = d.y0 instanceof InvalidAwareTypes;\n            const point = {\n                enter: {\n                    x: xPx,\n                    y: invalidY ? null : basePos,\n                    y0: invalidY0 ? null : basePos\n                },\n                update: {\n                    x: xPx,\n                    y: invalidY ? null : yPx,\n                    y0: invalidY0 ? null : y0Px\n                },\n                _id: d._id,\n                _data: d._data,\n                source: d._data,\n                rowId: d._id,\n                className: classNameFn ? classNameFn(d, i, data, this) : '',\n                style,\n                meta\n            };\n            point.className = getIndividualClassName(d, i, data, this);\n            this.cachePoint(d[key], point);\n            return point;\n        });\n        points = positionPoints(this, points);\n        return points;\n    }\n\n    resolveTransformType () {\n        this._transformType = getValidTransformForAggFn(this);\n    }\n\n    /**\n     * Get the css styles need to be applied on the line path\n     * @param {string} color Color value\n     * @return {Object} Path styles\n     */\n    getPathStyle (color) {\n        return {\n            fill: color\n        };\n    }\n}\n\n","import { CLASSPREFIX } from '../../enums/constants';\n\nexport const defaultConfig = {\n    classPrefix: CLASSPREFIX,\n    defClassName: 'layer-arc',\n    padding: { top: 1, bottom: 1, left: 1, right: 1 },\n    className: '',\n    minOuterRadius: 10,\n    interaction: {\n        highlight: [{\n            type: 'fill',\n            intensity: [0, 0, -15, 0]\n        }],\n        fade: [{\n            type: 'fill',\n            intensity: [0, 0, +15, 0]\n        }],\n        focus: [{\n            type: 'fill',\n            intensity: [0, 0, +15, 0]\n        }]\n    },\n    height: 100,\n    width: 100,\n    sort: '',\n    cornerRadius: 0,\n    padAngle: 0,\n    padRadius: 0,\n    startAngle: 0,\n    endAngle: 360,\n    colors: ['#F44336', 'blue', 'green', 'yellow', 'orange', 'purple'],\n    transform: {\n        type: 'identity'\n    },\n    encoding: {\n        'stroke-width': {\n            value: '2px'\n        },\n        'stroke-linejoin': {\n            value: 'round'\n        },\n        angle: {\n            value: '1'\n        },\n        radius: {\n            value: '1'\n        },\n        opacity: {\n            value: '1'\n        },\n        color: {\n            value: '1'\n        },\n        shape: {\n            value: '1'\n        },\n        size: {\n            value: '1'\n        }\n    },\n    innerRadiusFixer: 10,\n    transition: {\n        effect: 'cubic',\n        duration: 500\n    },\n    states: {\n        highlight: {\n            className: `${CLASSPREFIX}-layer-arc-highlight`\n        },\n        fadeout: {\n            className: `${CLASSPREFIX}-layer-arc-fadeout`\n        },\n        selected: {\n            className: `${CLASSPREFIX}-layer-arc-selected`\n        }\n    }\n};\n\n","import {\n    makeElement,\n    selectElement,\n    getQualifiedClassName,\n    isSimpleObject,\n    getDomainFromData,\n    Symbols,\n    FieldType,\n    ReservedFields,\n    STATE_NAMESPACES\n} from 'muze-utils';\nimport { defaultConfig } from './default-config';\nimport { BaseLayer } from '../../base-layer';\nimport { ASCENDING, OUTER_RADIUS_VALUE } from '../../enums/constants';\nimport { getIndividualClassName } from '../../helpers';\nimport { getRangeValue, getRadiusRange, tweenPie, tweenExitPie, getFieldIndices, getPreviousPoint } from './arc-helper';\nimport './styles.scss';\n\nconst pie = Symbols.pie;\nconst arc = Symbols.arc;\n\n/**\n * Arc Layer creates a plot with polar coordinates.\n *\n * @public\n *\n * @class\n * @module ArcLayer\n * @extends BaseLayer\n */\nexport default class ArcLayer extends BaseLayer {\n\n    constructor (data, axes, config, dependencies) {\n        super(data, axes, config, dependencies);\n        this._prevPieData = {};\n    }\n\n    /**\n     * returns the default configuration of the layer\n     *\n     * @static\n     * @return {Object} Default configuration for arc layer\n     * @memberof ArcLayer\n     */\n    static defaultConfig () {\n        return defaultConfig;\n    }\n\n    /**\n     *\n     *\n     * @static\n     *\n     * @memberof ArcLayer\n     */\n    static formalName () {\n        return 'arc';\n    }\n\n    /**\n     *\n     *\n     *\n     * @memberof ArcLayer\n     */\n    elemType () {\n        return 'path';\n    }\n\n    /**\n     * Transforms data in the appropriate data structure to be consumed by the layer for rendering\n     *\n     * @param {Object} data data model associated with the layer\n     * @param {Object} config configuration of the layer that contains encoding and other parameters\n     * @return {Object} Transformed pie data\n     * @memberof ArcLayer\n     */\n    getTransformedData (dataModel, config) {\n        let pieData = [];\n        const pieIndex = {};\n        const {\n            startAngle,\n            endAngle,\n            encoding,\n            sort,\n            minOuterRadius\n        } = config;\n        const prevData = this._transformedData || [];\n        const fieldsConfig = this.data().getFieldsConfig();\n        const {\n            angleIndex,\n            sizeIndex,\n            radiusIndex,\n            colorIndex\n        } = getFieldIndices(encoding, fieldsConfig);\n        const dataVal = dataModel.getData();\n        const data = dataVal.data;\n        const uids = dataVal.uids;\n\n        this._prevPieData = {};\n\n        prevData.forEach((e, index) => {\n            this._prevPieData[e.uid] = [e, index];\n            pieIndex[e.index] = e;\n        });\n        // Creating pie data using angle field provided. If the angle field is a dimension,\n        // all the angles will be equal(360/number of dimensions)\n\n        pieData = pie()\n            .startAngle((startAngle / 180) * Math.PI)\n            .endAngle(Math.PI * endAngle / 180)\n            .value(d => d[angleIndex] || 1)\n            .sortValues(null);\n\n        sort.length && radiusIndex && pieData.sort((a, b) => {\n            if (sort === ASCENDING) {\n                return a[radiusIndex] - b[radiusIndex];\n            } return b[radiusIndex] - a[radiusIndex];\n        });\n        const sizeVal = data.reduce((acc, d) => acc + (d[sizeIndex] || 0), 1);\n\n        // Adding the radius field values to each data point in pie data\n        pieData = pieData(data).map((d, i) => {\n            d.outerRadiusValue = data[i][radiusIndex] || minOuterRadius;\n            d.innerRadius = config.innerRadius;\n            d.colorVal = data[i][colorIndex];\n            d.angleVal = data[i][angleIndex];\n            d.sizeVal = sizeVal;\n            d.uid = uids[i];\n            d.rowId = d.uid;\n            d.source = data[i];\n            d._previousInfo = this._prevPieData[d.uid] ? this._prevPieData[d.uid][0] :\n                getPreviousPoint(pieIndex, d.index, config);\n            return d;\n        });\n        return pieData;\n    }\n\n    /**\n     * Returns normalized data after transformation (it is the same in the case of pie layer)\n     *\n     * @param {Object} data transformed data\n     * @return {Object} normalized data\n     * @memberof ArcLayer\n     */\n    getNormalizedData (data) {\n        return data;\n    }\n\n    /**\n     *\n     *\n     * @param {Object} data\n     * @return {}\n     * @memberof ArcLayer\n     */\n    calculateDomainFromData (data) {\n        const domainKey = OUTER_RADIUS_VALUE;\n        return {\n            radius: getDomainFromData([data], [domainKey, domainKey])\n        };\n    }\n\n    /**\n     *\n     *\n     * @param {Object} x\n     * @param {Object} y\n     * @return {}\n     * @memberof ArcLayer\n     */\n    getNearestPoint (x, y, config = {}) {\n        const dataPoint = selectElement(config.event.target).data()[0];\n        if (isSimpleObject(dataPoint)) {\n            const { data, uid } = dataPoint.datum;\n            return {\n                id: this.getIdentifiersFromData(data, uid),\n                layerId: this.id()\n            };\n        }\n        return null;\n    }\n\n    /**\n     *\n     *\n     * @param {*} set\n     *\n     * @memberof ArcLayer\n     */\n    getPlotElementsFromSet (set) {\n        return selectElement(this.mount()).selectAll(this.elemType()).filter(d => set.indexOf(d.datum.uid) !== -1);\n    }\n\n    /**\n     *\n     *\n     * @param {Object} container\n     * @return {}\n     * @memberof ArcLayer\n     */\n    render (container) {\n        const {\n            height,\n            width\n        } = this.measurement();\n        const {\n            classPrefix,\n            defClassName,\n            minOuterRadius,\n            innerRadius,\n            outerRadius,\n            cornerRadius,\n            padAngle,\n            padRadius,\n            padding,\n            transition,\n            innerRadiusFixer\n       } = this.config();\n        const sizeAxis = this.axes().size;\n        const transformedData = this._transformedData;\n        const chartHeight = height - padding.top - padding.bottom;\n        const chartWidth = width - padding.left - padding.right;\n        const qualClassName = getQualifiedClassName(defClassName, this.id(), classPrefix);\n        // Sets range for radius\n        const range = getRadiusRange(chartWidth, chartHeight, {\n            minOuterRadius,\n            innerRadius,\n            outerRadius,\n            innerRadiusFixer\n        });\n        const colorAxis = this.axes().color;\n        const defaultRadius = outerRadius || Math.min(chartHeight, chartWidth) / 2;\n        const radiusDomain = this.domain().radius;\n        const rangeValueGetter = d => getRangeValue(d, range, radiusDomain, defaultRadius, sizeAxis);\n        // This returns a function that generates the arc path based on the datum provided\n        const path = arc()\n                // .outerRadius(d => rangeValueGetter(d))\n                .innerRadius(innerRadius ? Math.min(chartHeight / 2, chartWidth / 2, innerRadius) : 0)\n                .cornerRadius(cornerRadius)\n                .padAngle(padAngle)\n                .padRadius(padRadius);\n        this._chartWidth = chartWidth;\n        this._chartHeight = chartHeight;\n        // Creating the group that holds all the arcs\n        const g = makeElement(selectElement(container), 'g', [1], `${qualClassName[0]}-group`)\n                .classed(`${qualClassName[1]}-group`, true)\n                .attr('transform', `translate(${chartWidth / 2},${chartHeight / 2})`);\n        const tween = (elem) => {\n            makeElement(elem, 'path', (d, i) => [{\n                datum: d,\n                index: i,\n                arcFn: path,\n                meta: {\n                    originalColor: colorAxis.getRawColor(d.colorVal),\n                    stateColor: {},\n                    colorTransform: {}\n                }\n            }], `${qualClassName[0]}-path`)\n                            .style('fill', d => colorAxis.getColor(d.datum.colorVal))\n                            .transition()\n                            .duration(transition.duration)\n                            .on('end', this.registerAnimationDoneHook())\n                            .attrTween('d', (...params) => tweenPie(path, rangeValueGetter, params))\n                            .attr('class', (d, i) => {\n                                const individualClass = getIndividualClassName(d, i, transformedData, this);\n                                return `${qualClassName[0]}-path ${qualClassName[1]}-path-${d.index}\n                                    ${individualClass}`;\n                            });\n        };\n        const consecutiveExits = [];\n        let exitCounter = 0;\n        const tweenExit = (elem, d) => {\n            let exitArr = consecutiveExits[exitCounter];\n            const oldExitCounter = exitCounter;\n            if (!exitArr) {\n                exitArr = [{ elem, datum: d }];\n            } else if (exitArr[exitArr.length - 1].datum.index === d.index - 1) {\n                exitArr.push({ elem, datum: d });\n            } else {\n                exitCounter++;\n            }\n            consecutiveExits[oldExitCounter] = exitArr;\n        };\n        // Creating groups for all the arcs present individually\n        makeElement(g, 'g', transformedData, `${qualClassName[0]}`,\n            {\n                update: tween,\n                exit: tweenExit\n            })\n                        .attr('class', (d, i) => `${qualClassName[0]} ${qualClassName[1]}-${i}`);\n        tweenExitPie(consecutiveExits, transition, rangeValueGetter, path);\n        return this;\n    }\n\n    /**\n     *\n     *\n     * @param {*} identifiers\n     *\n     * @memberof BaseLayer\n     */\n    getPointsFromIdentifiers (identifiers) {\n        if (!this.data()) {\n            return [];\n        }\n        const fieldNames = identifiers[0];\n        const values = identifiers.slice(1, identifiers.length);\n        const pieSlices = selectElement(this.mount()).selectAll('path').data();\n        const fieldsConfig = this.data().getFieldsConfig();\n\n        const filteredPies = pieSlices.filter((tData) => {\n            const data = tData.datum.data;\n            const uid = tData.datum.uid;\n            return fieldNames.every((field, idx) => {\n                if (field in fieldsConfig && fieldsConfig[field].def.type === FieldType.DIMENSION) {\n                    return values.findIndex(d => d[idx] === data[fieldsConfig[field].index]) !== -1;\n                } else if (field === ReservedFields.ROW_ID) {\n                    return values.findIndex(d => d[idx] === uid) !== -1;\n                } return true;\n            });\n        });\n\n        const pieSliceInf = filteredPies[0];\n        if (pieSliceInf) {\n            const centroid = pieSliceInf.arcFn.centroid(pieSliceInf.datum);\n            return [{\n                x: centroid[0] + this._chartWidth / 2,\n                y: centroid[1] + this._chartHeight / 2,\n                width: 2,\n                height: 2\n            }];\n        }\n        return [];\n    }\n\n    getRenderProps () {\n        return [`${STATE_NAMESPACES.GROUP_GLOBAL_NAMESPACE}.domain.radius`];\n    }\n}\n","import { getObjProp, interpolator, FieldType, selectElement } from 'muze-utils';\nimport { ANGLE, RADIUS, SIZE, COLOR } from '../../enums/constants';\n\n/**\n * Returns the range value from a value inside the domain\n *\n * @param {Object} domainValue Value whose range has to be returned\n * @return {number} range value\n * @memberof ArcLayer\n */\nexport const getRangeValue = (datum, range, domain, defaultRadius, sizeAxis) => {\n    let domainMultiplier = 1;\n    const {\n        outerRadiusValue,\n        sizeVal\n    } = datum;\n    const sizeAxisDomain = sizeAxis.domain();\n    const sizeMultiplier = sizeAxis.getSize(sizeVal) / (sizeAxisDomain ? sizeAxis.range()[1] : sizeAxis.config().value);\n\n    domainMultiplier *= (range[1] - range[0]) / (domain[1] - domain[0]);\n    const rangeVal = (range[0] + (outerRadiusValue - domain[0]) * domainMultiplier);\n    return (rangeVal || defaultRadius) * sizeMultiplier;\n};\n\n/**\n *\n *\n * @memberof ArcLayer\n */\nexport const getRadiusRange = (width, height, config) => {\n    const {\n        minOuterRadius,\n        innerRadius,\n        outerRadius,\n        innerRadiusFixer\n    } = config;\n\n    return [Math.max((innerRadius + innerRadiusFixer || 0), minOuterRadius), outerRadius || Math.min(height,\n        width) / 2];\n};\nexport const getPreviousPoint = (prevData, currIndex, config) => {\n    const prevArc = prevData[currIndex - 1];\n    const nextArc = prevData[currIndex];\n\n    if (prevArc && nextArc) {\n        return {\n            startAngle: prevArc.endAngle,\n            endAngle: nextArc.startAngle\n        };\n    } else if (!nextArc) {\n        return {\n            startAngle: config.endAngle * Math.PI * 2 / 360,\n            endAngle: config.endAngle * Math.PI * 2 / 360\n        };\n    }\n    return {\n        startAngle: config.startAngle * Math.PI * 2 / 360,\n        endAngle: config.startAngle * Math.PI * 2 / 360\n    };\n};\n\n/**\n *\n *\n * @param {*} path\n * @param {*} b\n *\n * @memberof ArcLayer\n */\nexport const tweenPie = (path, rangeValueGetter, b) => {\n    const { datum } = b[0];\n    const outerRadius = rangeValueGetter(datum);\n    datum.outerRadius = outerRadius;\n    datum._previousInfo.outerRadius = datum._previousInfo.outerRadius || outerRadius;\n    return function (t) {\n        return path(interpolator()(datum._previousInfo, datum)(t));\n    };\n};\n\n/**\n *\n *\n * @param {*} path\n * @param {*} b\n *\n * @memberof ArcLayer\n */\nexport const tweenExitPie = (consecutiveExits, transition, rangeValueGetter, path) => {\n    if (consecutiveExits.length > 0) {\n        consecutiveExits.forEach((consecutiveExitArr) => {\n            const startAngle = consecutiveExitArr[0].datum.startAngle;\n            const endAngle = consecutiveExitArr[consecutiveExitArr.length - 1].datum.endAngle;\n            const mid = (Math.PI * 2 * startAngle) / ((Math.PI * 2) + startAngle - endAngle);\n\n            consecutiveExitArr.forEach((e) => {\n                const { elem, datum } = e;\n\n                elem.each(function () {\n                    const gElem = selectElement(this);\n                    gElem.selectAll('path')\n                                    .transition()\n                                    .duration(transition.duration)\n                                    .attrTween('d', () => function (t) {\n                                        const outerRadius = rangeValueGetter(datum);\n                                        datum.outerRadius = outerRadius;\n                                        return path(interpolator()(datum, {\n                                            startAngle: mid,\n                                            endAngle: mid,\n                                            outerRadius\n                                        })(t));\n                                    })\n                                    .remove();\n                    gElem.remove();\n                });\n            });\n        });\n    }\n};\n\nexport const getFieldIndices = (encoding, fieldsConfig) => {\n    const [angleField, radiusField, colorField, sizeField] = [ANGLE, RADIUS, COLOR, SIZE]\n            .map(e => encoding[e].field);\n    const [angleIndex, sizeIndex, radiusIndex] = [angleField, sizeField, radiusField]\n        .map((e) => {\n            const conf = fieldsConfig[e];\n            if (conf && conf.def.type === FieldType.MEASURE) {\n                return conf.index;\n            }\n            return null;\n        });\n    const colorIndex = getObjProp(fieldsConfig, colorField, 'index');\n    return {\n        angleIndex,\n        sizeIndex,\n        radiusIndex,\n        colorIndex\n    };\n};\n","import {\n    setAttrs,\n    setStyles,\n    selectElement,\n    makeElement,\n    getSmartComputedStyle\n} from 'muze-utils';\n\n/**\n * Draws svg text in the specified container.\n * @param {SVGElement} container Container where labels will be appended.\n * @param {Array.<Object>} data Data of the elements.\n * @return {Selection} d3 selection of the elements.\n */\nconst drawText = (container, data, config, smartLabel) => {\n    const selection = selectElement(container).selectAll('g').data(data);\n\n    const selectionMerge = selection.enter().append('g')\n        .each(function (dataObj) {\n            setAttrs(this, dataObj.enter);\n        })\n        .merge(selection);\n    const style = getSmartComputedStyle(selectElement(container), config.className);\n    const fontSize = parseInt(style.fontSize, 10);\n\n    smartLabel.setStyle(style);\n    selectionMerge.each(function (dataObj) {\n        const element = selectElement(this);\n        const { update, text, color, textanchor, style: textStyle } = dataObj;\n        const background = dataObj.background;\n        let backgroundVal;\n        if (backgroundVal = background.value) {\n            const backgroundPadding = background.padding;\n            let diff;\n            const { width, height } = smartLabel.getOriSize(dataObj.text);\n            const backgroundEl = makeElement(element, 'rect', [1]);\n\n            if (textanchor === 'end') {\n                diff = width;\n            } else if (textanchor === 'start') {\n                diff = 0;\n            } else {\n                diff = width / 2;\n            }\n\n            setAttrs(backgroundEl.node(), {\n                x: update.x - diff - backgroundPadding / 2,\n                y: update.y - fontSize - backgroundPadding / 2,\n                width: width + backgroundPadding,\n                height: height + backgroundPadding\n            });\n            background && setStyles(backgroundEl, {\n                background: backgroundVal\n            });\n        }\n        const textEl = makeElement(element, 'text', d => [d]).text(text);\n        const textNode = textEl.node();\n        textStyle && setStyles(textNode, textStyle);\n        color && setStyles(textNode, {\n            fill: color\n        });\n        dataObj.className && textEl.classed(dataObj.className, true);\n        setAttrs(textNode, update);\n        textEl.attr('text-anchor', textanchor);\n    });\n    selection.exit().remove();\n    return selection;\n};\n\nexport default drawText;\n","import { CLASSPREFIX } from '../../enums/constants';\n\nexport const defaultConfig = {\n    defClassName: 'layer-text',\n    classPrefix: CLASSPREFIX,\n    className: '',\n    transform: {\n        type: 'identity'\n    },\n    interaction: {\n        highlight: [{\n            type: 'fill',\n            intensity: [0, 0, -15, 0]\n        }],\n        fade: [{\n            type: 'fill',\n            intensity: [0, 0, +15, 0]\n        }],\n        focus: [{\n            type: 'fill',\n            intensity: [0, 0, +15, 0]\n        }]\n    },\n    transition: {\n        effect: 'cubic',\n        duration: 1000\n    },\n    encoding: {\n        color: {},\n        text: {\n            value: '',\n            formatter: (val, i, data, context) => {\n                const valueParser = context.valueParser();\n                return valueParser(val);\n            },\n            background: {\n                padding: 10\n            }\n        }\n    },\n    states: {\n        highlight: {\n            className: `${CLASSPREFIX}-layer-text-highlight`\n        },\n        fadeout: {\n            className: `${CLASSPREFIX}-layer-text-fadeout`\n        },\n        selected: {\n            className: `${CLASSPREFIX}-layer-text-selected`\n        }\n    }\n};\n","import {\n    getQualifiedClassName,\n    selectElement,\n    setStyles,\n    createElements\n} from 'muze-utils';\nimport { BaseLayer } from '../../base-layer';\nimport drawText from './renderer';\nimport { defaultConfig } from './default-config';\nimport { getLayerColor, positionPoints, getIndividualClassName } from '../../helpers';\nimport { TEXT_ANCHOR_MIDDLE, ENCODING } from '../../enums/constants';\n\nimport './styles.scss';\n\n/**\n * This layer is used to create labels for each data point. It has an encoding property ```text```\n * which determines from which field's data the value of the label will be taken. The text encoding\n * property is necessary for the layer to render the text.The mark type of this layer is ```text```.\n *\n * @public\n *\n * @class\n * @module TextLayer\n * @extends BaseLayer\n */\nexport default class TextLayer extends BaseLayer {\n    /**\n     * Returns the default configuration of the text layer\n     * @return {Object} Default configuration of the text layer\n     */\n    static defaultConfig () {\n        return defaultConfig;\n    }\n\n    static formalName () {\n        return 'text';\n    }\n\n    elemType () {\n        return 'text';\n    }\n\n    /**\n     * Generates an array of objects containing x, y, width and height of the points from the data\n     * @param  {Array.<Array>} data Data Array\n     * @param  {Object} encoding  Config\n     * @param  {Object} axes     Axes object\n     * @return {Array.<Object>}  Array of points\n     */\n    translatePoints (data, encoding, axes) {\n        let points = [];\n        const colorAxis = axes.color;\n        const textEncoding = encoding.text;\n        const { field: textField, value, formatter: textFormatter } = textEncoding;\n        const colorEncoding = encoding.color;\n        const colorField = colorEncoding && colorEncoding.field;\n        const fieldsConfig = this.data().getFieldsConfig();\n\n        const backgroundEncoding = encoding.text.background;\n        const backgroundPadding = backgroundEncoding.padding;\n        const backgroundValue = backgroundEncoding.value;\n        const colorFieldIndex = fieldsConfig[colorField] ? fieldsConfig[colorField].index : -1;\n        const textFieldIndex = textField ? fieldsConfig[textField] && fieldsConfig[textField].index : -1;\n        const xEnc = ENCODING.X;\n        const yEnc = ENCODING.Y;\n        for (let i = 0, len = data.length; i < len; i++) {\n            const d = data[i];\n            const row = d._data;\n            const textValue = textField ? row[textFieldIndex] : value;\n\n            const [xPx, yPx] = [xEnc, yEnc].map(type => (axes[type] ? axes[type].getScaleValue(d[type]) +\n                    axes[type].getUnitWidth() / 2 : 0));\n\n            const { color, rawColor } = getLayerColor({ datum: d, index: i },\n                { colorEncoding, colorAxis, colorFieldIndex });\n\n            const point = {\n                enter: {},\n                update: {\n                    x: xPx,\n                    y: yPx\n                },\n                text: textFormatter(textValue, i, data, this),\n                color,\n                background: {\n                    value: backgroundValue instanceof Function ? backgroundValue(d, i, data, this) : null,\n                    padding: backgroundPadding\n                },\n                meta: {\n                    stateColor: {},\n                    originalColor: rawColor,\n                    colorTransform: {}\n                },\n                style: {},\n                _data: row,\n                _id: d._id,\n                source: d._data,\n                rowId: d._id\n            };\n\n            point.className = getIndividualClassName(d, i, data, this);\n            points.push(point);\n        }\n\n        points = positionPoints(this, points);\n        points = points.filter((d) => {\n            const update = d.update;\n            return !isNaN(update.x) && !isNaN(update.y);\n        });\n        return points;\n    }\n\n    /**\n     * Renders the plot in the given container\n     * @param  {SVGElement} container SVGElement which will hold the plot\n     * @return {textLayer} Instance of text layer\n     */\n    render (container) {\n        let points;\n        const config = this.config();\n        const encoding = config.encoding;\n        const normalizedData = this._normalizedData;\n        const className = config.className;\n        const qualifiedClassName = getQualifiedClassName(config.defClassName, this.id(), config.classPrefix);\n        const axes = this.axes();\n        const containerSelection = selectElement(container);\n\n        containerSelection.classed(`${qualifiedClassName.join(' ')} ${className}`, true);\n        createElements({\n            data: normalizedData,\n            append: 'g',\n            selector: 'g',\n            container,\n            each: (dataArr, group, i) => {\n                const node = group.node();\n                points = this.translatePoints(dataArr, encoding, axes, i);\n                setStyles(node, {\n                    'text-anchor': TEXT_ANCHOR_MIDDLE\n                });\n                drawText(node, points, {\n                    className: qualifiedClassName[0]\n                }, this._dependencies.smartLabel);\n            }\n        });\n        return this;\n    }\n}\n","/* global Element, document  */\nimport {\n    makeElement,\n    selectElement,\n    easeFns,\n    objectIterator,\n    getSymbol\n} from 'muze-utils';\n\n/**\n *\n *\n * @param {*} str\n *\n */\nconst checkPath = (str) => {\n    if (/^[mzlhvcsqta]\\s*[-+.0-9][^mlhvzcsqta]+/i.test(str) && /[\\dz]$/i.test(str) && str.length > 4) {\n        return true;\n    }\n    return false;\n};\n\n/**\n *\n *\n * @param {*} d\n * @param {*} elem\n */\nconst createShape = function (d, groupElement) {\n    const { shape, size, update } = d;\n\n    if (shape instanceof Promise) {\n        shape.then((res) => {\n            d.shape = res;\n            createShape(d, groupElement);\n        });\n    } else if (shape instanceof Element) {\n        let newShape = shape.cloneNode(true);\n\n        if (newShape.nodeName.toLowerCase() === 'img') {\n            const src = newShape.src || newShape.href;\n            newShape = document.createElementNS('http://www.w3.org/2000/svg', 'image');\n            newShape.setAttribute('href', src);\n        }\n        const shapeElement = selectElement(newShape);\n        if (newShape.nodeName === 'path' || newShape.nodeName === 'image') {\n            shapeElement.attr('transform', `scale(${size / 100})`);\n        } else {\n            shapeElement.attr('height', size);\n            shapeElement.attr('width', size);\n        }\n        shapeElement.attr('x', -size / 2);\n        shapeElement.attr('y', -size / 2);\n        makeElement(groupElement, () => newShape, [1]);\n    } else if (typeof shape === 'string') {\n        let pathStr;\n        if (checkPath(shape)) {\n            pathStr = shape;\n        } else {\n            pathStr = getSymbol(shape).size(size)(update);\n        }\n        makeElement(groupElement, 'path', data => [data]).attr('d', pathStr);\n    } else {\n        d.shape = 'circle';\n        createShape(d, groupElement);\n    }\n};\n\n/**\n * Draws symbols using d3 symbol api\n * @param {Object} params Contains the svg container, points and other symbol related attributes.\n */\n/* istanbul ignore next */ const drawSymbols = (params) => {\n    const { layer, container, points, transition, className } = params;\n    const { duration, effect, disabled } = transition;\n    const mount = selectElement(container);\n\n    mount.attr('class', className);\n    return makeElement(mount, 'g', points, null, {\n        enter: (group, d) => {\n            const { enter } = d;\n            group.attr('transform', `translate(${enter.x},${enter.y})`);\n        },\n        update: (group, d) => {\n            createShape(d, group);\n            const { update, style } = d;\n            objectIterator(style, key => group.style(key, style[key]));\n            group.attr('class', className);\n            group.classed(d.className, true);\n            if (!disabled) {\n                group = group.transition()\n                    .duration(transition.duration)\n                    .on('end', layer.registerAnimationDoneHook());\n            }\n            group.attr('transform', `translate(${update.x},${update.y})`);\n        },\n        exit: (exitGroup) => {\n            if (!disabled) {\n                exitGroup.transition().ease(easeFns[effect])\n                .duration(duration)\n                .on('end', () => exitGroup.remove())\n                .style('fill-opacity', 0)\n                .style('stroke-opacity', 0);\n            } else {\n                exitGroup.remove();\n            }\n        }\n    }, params.keyFn);\n};\n\nexport default drawSymbols;\n","import { CLASSPREFIX } from '../../enums/constants';\n\nexport const defaultConfig = {\n    defClassName: 'layer-point',\n    className: '',\n    classPrefix: CLASSPREFIX,\n    defColorStyle: 'stroke',\n    interaction: {\n        highlight: [{\n            type: 'fill',\n            intensity: [0, 0, -20, 0]\n        }],\n        fade: [{\n            type: 'fill',\n            intensity: [0, 0, +20, 0]\n        }],\n        focus: [{\n            type: 'fill',\n            intensity: [0, 0, +20, 0]\n        }\n        ]\n    },\n    innerPadding: 0.1,\n    nearestPointThreshold: 10,\n    transform: {\n        type: 'identity'\n    },\n    transition: {\n        effect: 'cubic',\n        duration: 1000\n    },\n    encoding: {\n        size: {\n            value: 30\n        },\n        color: { },\n        shape: {\n            value: 'circle'\n        },\n        x: {},\n        y: {},\n        strokeOpacity: {\n            value: 0.5\n        },\n        fillOpacity: {\n            value: 0.5\n        }\n    },\n    shapes: ['circle', 'cross', 'diamond', 'square', 'star', 'wye', 'triangle'],\n    sizes: [20, 30, 40, 50, 60, 70]\n};\n","import {\n    Voronoi,\n    selectElement,\n    getQualifiedClassName,\n    makeElement,\n    FieldType,\n    Scales\n} from 'muze-utils';\nimport { BaseLayer } from '../../base-layer';\nimport drawSymbols from './renderer';\nimport { defaultConfig } from './default-config';\nimport { ENCODING } from '../../enums/constants';\nimport {\n    attachDataToVoronoi,\n    getLayerColor,\n    positionPoints,\n    getPlotMeasurement,\n    getIndividualClassName,\n    getMarkId\n} from '../../helpers';\n\nimport './styles.scss';\n\n/**\n * This layer is used to create various symbols for each data point. This is commonly used in\n * scatterplot visualizations. The mark type of this layer is ```point```.\n *\n * @public\n *\n * @class\n * @module PointLayer\n * @extends BaseLayer\n */\nexport default class PointLayer extends BaseLayer {\n\n    /**\n     * Creates an instance of PointLayer.\n     * @param {*} args\n     * @memberof PointLayer\n     */\n    constructor (...args) {\n        super(...args);\n        this._voronoi = new Voronoi();\n        this._bandScale = Scales.band();\n    }\n\n    /**\n     *\n     *\n     *\n     * @memberof PointLayer\n     */\n    elemType () {\n        return 'g';\n    }\n\n    /**\n     * Returns the default configuration of the point layer\n     * @return {Object} Default configuration of the point layer\n     */\n    static defaultConfig () {\n        return defaultConfig;\n    }\n\n    static defaultPolicy (conf, userConf) {\n        const config = BaseLayer.defaultPolicy(conf, userConf);\n        const encoding = config.encoding;\n        const transform = config.transform;\n        const colorField = encoding.color && encoding.color.field;\n\n        if (colorField) {\n            transform.groupBy = colorField;\n        }\n        return config;\n    }\n\n    /**\n     *\n     *\n     * @static\n     *\n     * @memberof PointLayer\n     */\n    static formalName () {\n        return 'point';\n    }\n\n    /**\n     *\n     *\n     * @static\n     *\n     * @memberof PointLayer\n     */\n    static drawFn () {\n        return drawSymbols;\n    }\n\n    /**\n     * Generates an array of objects containing x, y, width and height of the points from the data\n     * @param  {Array.<Array>} data Data Array\n     * @param  {Object} encoding  Config\n     * @param  {Object} axes     Axes object\n     * @return {Array.<Object>}  Array of points\n     */\n    translatePoints (data, encoding, axes, config = {}) {\n        let points = [];\n        const {\n            size: sizeEncoding,\n            shape: shapeEncoding,\n            color: colorEncoding,\n            x,\n            y\n        } = encoding;\n        const sizeField = sizeEncoding.field;\n        const sizeValue = sizeEncoding.value;\n        const shapeField = shapeEncoding.field;\n        const xField = x.field;\n        const yField = y.field;\n        const { size: sizeAxis, shape: shapeAxis } = axes;\n        const fieldsConfig = this.data().getFieldsConfig();\n        const isXDim = fieldsConfig[xField] && fieldsConfig[xField].def.type === FieldType.DIMENSION;\n        const isYDim = fieldsConfig[yField] && fieldsConfig[yField].def.type === FieldType.DIMENSION;\n        const key = isXDim ? ENCODING.X : (isYDim ? ENCODING.Y : null);\n        const colorField = colorEncoding && colorEncoding.field;\n        const colorFieldIndex = fieldsConfig[colorField] && fieldsConfig[colorField].index;\n        const measurement = this.measurement();\n        const shapeFieldIndex = fieldsConfig[shapeField] && fieldsConfig[shapeField].index;\n        const sizeFieldIndex = fieldsConfig[sizeField] && fieldsConfig[sizeField].index;\n        const colorAxis = axes.color;\n        const { x: offsetX, y: offsetY } = config.offset;\n\n        for (let i = 0, len = data.length; i < len; i++) {\n            const d = data[i];\n            const row = d._data;\n            const size = sizeValue instanceof Function ? sizeValue(d, i) : sizeAxis.getSize(row[sizeFieldIndex]);\n            const shape = shapeAxis.getShape(row[shapeFieldIndex]);\n\n            let [xPx, yPx] = [ENCODING.X, ENCODING.Y].map((type) => {\n                const value = d[type] === null ? undefined : d[type];\n                const measure = type === ENCODING.X ? measurement.width : measurement.height;\n                return !encoding[type].field ? measure / 2 : axes[type].getScaleValue(value);\n            });\n\n            xPx += offsetX;\n            yPx += offsetY;\n\n            const { color, rawColor } = getLayerColor({ datum: d, index: i },\n                { colorEncoding, colorAxis, colorFieldIndex });\n\n            const style = {\n                fill: color,\n                stroke: color\n            };\n\n            if (!isNaN(xPx) && !isNaN(yPx)) {\n                const point = {\n                    enter: {\n                        x: xPx,\n                        y: yPx\n                    },\n                    update: {\n                        x: xPx,\n                        y: yPx\n                    },\n                    shape,\n                    size: Math.abs(size),\n                    meta: {\n                        stateColor: {},\n                        originalColor: rawColor,\n                        colorTransform: {}\n                    },\n                    style,\n                    _data: row,\n                    _id: d._id,\n                    source: d._data,\n                    rowId: d._id\n                };\n                point.className = getIndividualClassName(d, i, data, this);\n                points.push(point);\n                this.cachePoint(d[key], point);\n            }\n        }\n        points = positionPoints(this, points);\n        return points;\n    }\n\n    /**\n     * Renders the plot in the given container.\n     *\n     * @param  {SVGElement} container SVGElement which will hold the plot\n     * @return {BarLayer} Instance of bar layer\n     */\n    render (container) {\n        let maxSize = 0;\n        let seriesClassName;\n        const config = this.config();\n        const keys = this._transformedData.map(d => d.key);\n        const { transition, className, defClassName, classPrefix } = config;\n        const normalizedData = this._normalizedData;\n        const containerSelection = selectElement(container);\n        const qualifiedClassName = getQualifiedClassName(defClassName, this.id(), classPrefix);\n        this._points = [];\n        this._pointMap = {};\n\n        containerSelection.classed(qualifiedClassName.join(' '), true).classed(className, true);\n\n        this._points = this.generateDataPoints(normalizedData, keys);\n        const schema = this.data().getSchema();\n        makeElement(container, 'g', this._points, null, {\n            update: (group, points) => {\n                maxSize = Math.max(maxSize, ...points.map(d => d.size));\n                seriesClassName = `${qualifiedClassName[0]}`;\n                this.constructor.drawFn()({\n                    layer: this,\n                    container: group.node(),\n                    points,\n                    className: seriesClassName,\n                    transition,\n                    keyFn: v => getMarkId(v.source, schema)\n                });\n            }\n        }, data => data[0]._id);\n        this._maxSize = Math.sqrt(maxSize / Math.PI) * 2;\n        attachDataToVoronoi(this._voronoi, this._points);\n        return this;\n    }\n\n    generateDataPoints (normalizedData, keys) {\n        const encoding = this.config().encoding;\n        const axes = this.axes();\n        const [widthMetrics, heightMetrics] = getPlotMeasurement(this, keys);\n        const offsetXValues = widthMetrics.offsetValues || [];\n        const offsetYValues = heightMetrics.offsetValues || [];\n        return normalizedData.map((dataArr, i) => {\n            const measurementConf = this.getMeasurementConfig(offsetXValues[i], offsetYValues[i], widthMetrics.span,\n                heightMetrics.span);\n            return this.translatePoints(dataArr, encoding, axes, measurementConf);\n        }).filter(d => d.length);\n    }\n\n    getMeasurementConfig (offsetX, offsetY, widthSpan, heightSpan) {\n        return {\n            offset: {\n                x: (offsetX || 0) + widthSpan / 2,\n                y: (offsetY || 0) + heightSpan / 2\n            },\n            span: {\n                x: widthSpan,\n                y: heightSpan\n            }\n        };\n    }\n\n    /**\n     * Gets the nearest point from a position.\n     * @param {number} x x position\n     * @param {number} y y position\n     * @return {Object} Point details\n     */\n    getNearestPoint (x, y) {\n        const distanceLimit = Math.max(this._maxSize, this.config().nearestPointThreshold);\n\n        if (!this.data()) {\n            return null;\n        }\n\n        const point = this._voronoi.find(x, y, distanceLimit);\n        const dimensions = point && point.data.data.update;\n        const radius = point ? Math.sqrt(point.data.data.size / Math.PI) : 0;\n\n        if (point) {\n            const { _data, _id } = point.data.data;\n            const identifiers = this.getIdentifiersFromData(_data, _id);\n            return {\n                id: identifiers,\n                dimensions: [{\n                    x: dimensions.x,\n                    y: dimensions.y,\n                    width: radius,\n                    height: radius\n                }],\n                layerId: this.id()\n            };\n        }\n        return null;\n    }\n}\n","import { makeElement, easeFns } from 'muze-utils';\n\n/**\n *\n *\n * @param {*} elem\n * @param {*} datum\n * @param {*} index\n * @param {*} context\n */\nconst transitionBars = (layer, elem, datum, index, context) => {\n    const { transition } = context;\n    const { duration, disabled, effect } = transition;\n    const selection = elem;\n\n    const selTransition = disabled ? selection :\n        selection.transition()\n        .duration(duration)\n        .ease(easeFns[effect])\n        .on('end', layer.registerAnimationDoneHook());\n    const update = datum.update || datum;\n    const updateStyle = datum.style || {};\n    datum.className && selection.classed(datum.className, true);\n    Object.entries(update).forEach(attr => (!isNaN(attr[1]) && selTransition.attr(attr[0], attr[1])));\n    Object.entries(updateStyle).forEach(styleObj => selection.style(styleObj[0], styleObj[1]));\n};\n\n/**\n *\n *\n * @param {*} elem\n * @param {*} d\n */\nconst barEnterFn = (elem, d) => {\n    const selection = elem;\n    const enter = d.enter || {};\n    Object.entries(enter).forEach(attr => (!isNaN(attr[1]) && selection.attr(attr[0], attr[1])));\n};\n\n/**\n * Draws rectangles by using d3 selection\n * @param  {Object} params Contains container element and points\n * @return {Selection} Bar Selection\n */\n/* istanbul ignore next */ export const drawRects = (params) => {\n    const { layer, points, container, keyFn } = params;\n    const updateFns = {\n        enter (elem, d) { barEnterFn(elem, d); },\n        update (elem, d, i) { transitionBars(layer, elem, d, i, params); }\n    };\n    return makeElement(container, 'rect', points, null, updateFns, keyFn);\n};\n","import { CLASSPREFIX } from '../../enums/constants';\n\nexport const defaultConfig = {\n    classPrefix: CLASSPREFIX,\n    defClassName: 'layer-bar',\n    className: '',\n    interaction: {\n        highlight: [{\n            type: 'fill',\n            intensity: [0, 0, -15, 0]\n        }],\n        fade: [{\n            type: 'fill',\n            intensity: [0, 0, +15, 0]\n        }],\n        focus: [{\n            type: 'fill',\n            intensity: [0, 0, +15, 0]\n        }]\n    },\n    transform: {\n        type: 'stack'\n    },\n    transition: {\n        effect: 'cubic',\n        duration: 1000\n    },\n    innerPadding: 0.1,\n    encoding: {\n        color: {},\n        x: {},\n        y: {},\n        x0: {},\n        y0: {}\n    },\n    states: {\n        highlight: {\n            className: `${CLASSPREFIX}-layer-bar-highlight`\n        },\n        fadeout: {\n            className: `${CLASSPREFIX}-layer-bar-fadeout`\n        },\n        selected: {\n            className: `${CLASSPREFIX}-layer-bar-selected`\n        }\n    }\n};\n\n","import { MeasureSubtype, DimensionSubtype } from 'muze-utils';\nimport { STACK } from '../../enums/constants';\nimport { getLayerColor, positionPoints, getIndividualClassName } from '../../helpers';\n\nconst positionRetriever = {\n    x: (xPx, isNegativeVal, barBasePos) => (isNegativeVal ? [xPx, barBasePos] : [barBasePos, xPx]),\n    y: (yPx, isNegativeVal, barBasePos) => (isNegativeVal ? [barBasePos, yPx] : [yPx, barBasePos])\n};\n\n/**\n *\n *\n * @param {*} type\n * @param {*} fieldInfo\n * @param {*} config\n * @param {*} data\n *\n */\nconst resolveDimByField = (type, axesInfo, config, data) => {\n    const spaceType = type === 'x' ? 'width' : 'height';\n    const [fieldType, axis] = [config[`${type}FieldType`], axesInfo[`${type}Axis`]];\n    const minDomVal = axis.domain()[0];\n    const {\n        transformType,\n        sizeEncoding,\n        sizeConfig,\n        measurement\n    } = config;\n\n    const sizeValue = sizeEncoding.value;\n    let enter = 0;\n    let pos;\n    let space = 0;\n    let enterSpace = 0;\n    if (fieldType !== undefined) {\n        if (config[`${type}0Field`]) {\n            const minVal = data[type];\n            const maxVal = data[`${type}0`];\n            let min;\n            let max;\n            if (minVal === null || maxVal === null) {\n                return {\n                    enterSpace: undefined,\n                    enter: undefined,\n                    pos: undefined,\n                    space: undefined\n                };\n            } else if (fieldType === MeasureSubtype.CONTINUOUS || fieldType === DimensionSubtype.TEMPORAL) {\n                min = Math.min(minVal, maxVal);\n                max = Math.max(minVal, maxVal);\n            } else {\n                min = minVal;\n                max = maxVal;\n            }\n            const scales = type === 'x' ? [min, max] : [max, min];\n            pos = axis.getScaleValue(scales[0]) + axis.getUnitWidth() / 2;\n            space = Math.abs(axis.getScaleValue(scales[1]) - pos) + axis.getUnitWidth() / 2;\n\n            enter = pos;\n            enterSpace = 0;\n        } else if (fieldType === DimensionSubtype.CATEGORICAL || fieldType === DimensionSubtype.TEMPORAL) {\n            pos = axis.getScaleValue(data[type]) +\n                (sizeConfig[type === 'x' ? 'barWidthOffset' : 'barHeightOffset'] || 0);\n\n            space = sizeConfig[type === 'x' ? 'barWidth' : 'barHeight'];\n            if (sizeValue !== undefined) {\n                const diffPx = sizeValue * space;\n                space -= diffPx;\n                pos += diffPx / 2;\n            }\n            enter = pos;\n            enterSpace = space;\n        } else {\n            const barBasePos = minDomVal < 0 ? axis.getScaleValue(0) : axis.getScaleValue(minDomVal);\n            pos = axis.getScaleValue(data[type]);\n            let endPos = axis.getScaleValue(data[`${type}0`]);\n\n            enterSpace = 0;\n            const isNegativeVal = data[type] < 0;\n            if (transformType !== STACK) {\n                [pos, endPos] = positionRetriever[type](pos, isNegativeVal, barBasePos);\n            }\n            space = Math.abs(pos - endPos);\n            enter = barBasePos;\n        }\n    } else {\n        pos = 0;\n        space = measurement[spaceType];\n    }\n\n    return {\n        enterSpace,\n        enter,\n        pos,\n        space\n    };\n};\n\n/**\n *\n *\n * @param {*} data\n * @param {*} config\n * @param {*} axes\n *\n */\nconst resolveDimensions = (data, config, axes) => {\n    const axesInfo = {\n        xAxis: axes.x,\n        yAxis: axes.y\n    };\n    const {\n        enterSpace: enterWidth,\n        enter: enterX,\n        pos: xPos,\n        space: width\n    } = resolveDimByField('x', axesInfo, config, data);\n\n    const {\n        enterSpace: enterHeight,\n        enter: enterY,\n        pos: yPos,\n        space: height\n    } = resolveDimByField('y', axesInfo, config, data);\n    return {\n        enter: {\n            x: enterX,\n            y: enterY,\n            width: enterWidth,\n            height: enterHeight\n        },\n        update: {\n            x: xPos,\n            y: yPos,\n            width,\n            height\n        }\n    };\n};\n\n/**\n * Generates an array of objects containing x, y, width and height of the bars from the data\n * @param  {Array.<Array>} data Data Array\n * @param  {Object} encoding  Config\n * @param  {Object} axes     Axes object\n * @param {Object} conf config object for point generation\n * @return {Array.<Object>}  Array of points\n */\nexport const getTranslatedPoints = (context, data, sizeConfig) => {\n    let points = [];\n    const encoding = context.config().encoding;\n    const axes = context.axes();\n    const colorAxis = axes.color;\n    const fieldsConfig = context.data().getFieldsConfig();\n    const colorEncoding = encoding.color;\n    const colorField = colorEncoding.field;\n    const sizeEncoding = encoding.size || {};\n    const {\n            x0Field,\n            y0Field,\n            xFieldSubType,\n            yFieldSubType\n        } = context.encodingFieldsInf();\n    const measurement = context.measurement();\n    const isXDim = xFieldSubType === DimensionSubtype.CATEGORICAL || xFieldSubType === DimensionSubtype.TEMPORAL;\n    const isYDim = yFieldSubType === DimensionSubtype.CATEGORICAL || yFieldSubType === DimensionSubtype.TEMPORAL;\n    const key = isXDim ? 'x' : (isYDim ? 'y' : null);\n    const transformType = context.transformType();\n    const colorFieldIndex = colorField && fieldsConfig[colorField] && fieldsConfig[colorField].index;\n\n    for (let i = 0, len = data.length; i < len; i++) {\n        const d = data[i];\n        const style = {};\n        const meta = {};\n        const dimensions = resolveDimensions(d, {\n            xFieldType: xFieldSubType,\n            yFieldType: yFieldSubType,\n            x0Field,\n            y0Field,\n            transformType,\n            measurement,\n            sizeConfig,\n            sizeEncoding\n        }, axes);\n\n        const { color, rawColor } = getLayerColor({ datum: d, index: i },\n            { colorEncoding, colorAxis, colorFieldIndex });\n\n        style.fill = color;\n        meta.stateColor = {};\n        meta.originalColor = rawColor;\n        meta.colorTransform = {};\n\n        const update = dimensions.update;\n\n        if (!isNaN(update.x) && !isNaN(update.y) && d._id !== undefined) {\n            let point = null;\n            point = {\n                enter: dimensions.enter,\n                update,\n                style,\n                _data: d._data,\n                _id: d._id,\n                source: d._data,\n                rowId: d._id,\n                meta\n            };\n            point.className = getIndividualClassName(d, i, data, context);\n            points.push(point);\n            // Store each point in a hashmap with key as the dimensional or temporal field value\n            context.cachePoint(d[key], point);\n        }\n    }\n\n    points = positionPoints(context, points);\n    return points;\n};\n","import {\n    getQualifiedClassName,\n    selectElement,\n    createElements,\n    clipElement,\n    DimensionSubtype,\n    FieldType,\n    MeasureSubtype,\n    Scales,\n    getNearestValue\n} from 'muze-utils';\nimport { BaseLayer } from '../../base-layer';\nimport { drawRects } from './renderer';\nimport { defaultConfig } from './default-config';\nimport { getPlotMeasurement, getValidTransformForAggFn } from '../../helpers';\nimport './styles.scss';\nimport { getTranslatedPoints } from './bar-helper';\n\nconst MEASURE = FieldType.MEASURE;\nconst scaleBand = Scales.band;\n\n/**\n * Bar layer creates rectangle marks. The mark type of this layer is ```bar```. This layer can be used\n * to create stacked or grouped bars, range bars, heatmap plots and also reference bands by using\n * the encoding properties.\n *\n * @public\n *\n * @class\n * @module BarLayer\n * @extends BaseLayer\n */\nexport default class BarLayer extends BaseLayer {\n    /**\n     * Creates an instance of bar layer\n     */\n    constructor (...params) {\n        super(...params);\n        this._bandScale = scaleBand();\n        this._plotPadding = {\n            x: 0,\n            y: 0\n        };\n        this._plotSpan = {\n            x: 0,\n            y: 0\n        };\n        this._pointMap = {};\n    }\n\n    /**\n     *\n     *\n     *\n     * @memberof BarLayer\n     */\n    elemType () {\n        return 'rect';\n    }\n\n    /**\n     *\n     *\n     * @static\n     *\n     * @memberof BarLayer\n     */\n    static formalName () {\n        return 'bar';\n    }\n\n    /**\n     * Returns the default configuration of the bar layer\n     * @return {Object} Default configuration of the bar layer\n     */\n    static defaultConfig () {\n        return defaultConfig;\n    }\n\n    /**\n     *\n     *\n     * @static\n     * @param {*} conf\n     * @param {*} userConf\n     *\n     * @memberof BarLayer\n     */\n    static defaultPolicy (conf, userConf) {\n        const config = BaseLayer.defaultPolicy(conf, userConf);\n        const encoding = config.encoding;\n        const colorField = encoding.color.field;\n        const transform = config.transform;\n\n        if (colorField) {\n            transform.groupBy = colorField;\n        }\n        return config;\n    }\n\n    /**\n     *\n     *\n     * @param {*} data\n     * @param {*} fieldsConfig\n     *\n     * @memberof BarLayer\n     */\n    calculateDomainFromData (data, encodingFieldInf, fieldsConfig) {\n        const domain = super.calculateDomainFromData(data, encodingFieldInf, fieldsConfig);\n        ['x', 'y'].forEach((d) => {\n            if (encodingFieldInf[`${d}FieldType`] === MEASURE && domain[d]) {\n                if (encodingFieldInf[`${d}0Field`]) {\n                    domain[d] = domain[d].sort((a, b) => a - b);\n                } else {\n                    domain[d][0] = Math.min(domain[d][0], 0);\n                    domain[d][1] = Math.max(0, domain[d][1]);\n                }\n            }\n        });\n        return domain;\n    }\n\n    /**\n     * Generates an array of objects containing x, y, width and height of the bars from the data\n     * @param  {Array.<Array>} data Data Array\n     * @param  {Object} encoding  Config\n     * @param  {Object} axes     Axes object\n     * @param {Object} conf config object for point generation\n     * @return {Array.<Object>}  Array of points\n     */\n    translatePoints (data, sizeConfig) {\n        return getTranslatedPoints(this, data, sizeConfig);\n    }\n\n    /**\n     * Renders the plot in the given container\n     * @param  {SVGGroup} container SVGGroup where plot will be rendered.\n     * @return {BarLayer} Instance of bar layer.\n     */\n    render (container) {\n        const config = this.config();\n        const transition = config.transition;\n        const normalizedDataArr = this._normalizedData;\n        const transformedData = this._transformedData;\n        const keys = transformedData.map(d => d.key);\n        const fieldsConfig = this.data().getFieldsConfig();\n        const axes = this.axes();\n        const height = axes.y && axes.y.scale().range()[0];\n        const width = axes.x && axes.x.scale().range()[1];\n        const defClassName = config.defClassName;\n        const qualifiedClassName = getQualifiedClassName(defClassName, this.id(), config.classPrefix);\n        const className = config.className;\n        const containerSelection = selectElement(container);\n        const dimensions = Object.values(fieldsConfig).filter(e => e.def.type === FieldType.DIMENSION)\n            .map(e => e.index);\n        containerSelection.classed(qualifiedClassName.join(' '), true);\n        containerSelection.classed(className, true);\n        clipElement(container, {\n            x: 0,\n            y: 0,\n            width,\n            height\n        }, `id-${this.id()}`);\n\n        this._points = this.generateDataPoints(normalizedDataArr, keys);\n\n        createElements({\n            data: this._points,\n            container,\n            selector: 'g',\n            append: 'g',\n            each: (points, group, i) => {\n                const seriesClassName = `${qualifiedClassName[0]}-${keys[i] || i}`.toLowerCase();\n                group.style('display', 'block');\n                drawRects({\n                    layer: this,\n                    container: group.node(),\n                    points,\n                    className: seriesClassName,\n                    transition,\n                    style: {},\n                    keyFn: d => dimensions.map(key => d._data[key]).join('-')\n                });\n            }\n        });\n        return this;\n    }\n\n    /**\n     *\n     *\n     * @param {*} normalizedData\n     * @param {*} keys\n     *\n     * @memberof BarLayer\n     */\n    generateDataPoints (normalizedData, keys) {\n        const [barWidthMetrics, barHeightMetrics] = getPlotMeasurement(this, keys);\n        const barWidthOffsets = barWidthMetrics.offsetValues || [];\n        const barHeightOffsets = barHeightMetrics.offsetValues || [];\n        this._plotSpan = {\n            x: barWidthMetrics.groupSpan || 0,\n            y: barHeightMetrics.groupSpan || 0\n        };\n        this._plotPadding = {\n            x: barWidthMetrics.padding || 0,\n            y: barHeightMetrics.padding || 0\n        };\n\n        this._pointMap = {};\n        return normalizedData.map((data, i) => this.translatePoints(data,\n            {\n                barWidth: barWidthMetrics.span,\n                barWidthOffset: barWidthOffsets[i] || 0,\n                barHeight: barHeightMetrics.span,\n                barHeightOffset: barHeightOffsets[i] || 0\n            }));\n    }\n\n    getPlotPadding () {\n        return this._plotPadding;\n    }\n\n    resolveTransformType () {\n        this._transformType = getValidTransformForAggFn(this);\n    }\n\n    /**\n     * Gets the nearest point of the position passed.\n     * @param {number} x x position\n     * @param {number} y y position\n     * @return {Object} Nearest point.\n     */\n    getNearestPoint (x, y) {\n        if (!this.data()) {\n            return null;\n        }\n        let axis;\n        let value;\n        let points;\n        let uniqueFieldType;\n        let uniqueFieldIndex;\n        let filterData;\n        let identifiers;\n        let pointFound = null;\n        const dataModel = this.data();\n        const dataObj = dataModel.getData();\n        const fieldsConfig = dataModel.getFieldsConfig();\n        const axes = this.axes();\n        const data = dataObj.data;\n        const pointMap = this._pointMap;\n        const {\n                xField,\n                yField,\n                xFieldSubType,\n                yFieldSubType\n            } = this.encodingFieldsInf();\n\n        if (xFieldSubType === MeasureSubtype.CONTINUOUS) {\n            axis = axes.y;\n            value = axis.invert(y);\n            uniqueFieldIndex = fieldsConfig[yField].index;\n            uniqueFieldType = yFieldSubType;\n        } else {\n            axis = axes.x;\n            value = axis.invert(x);\n            uniqueFieldIndex = fieldsConfig[xField].index;\n            uniqueFieldType = xFieldSubType;\n        }\n\n        if (uniqueFieldType === DimensionSubtype.CATEGORICAL) {\n            points = pointMap[value];\n        }\n\n        if (uniqueFieldType === DimensionSubtype.TEMPORAL) {\n            filterData = [...new Set(data.map(d => d[uniqueFieldIndex]))];\n            value = getNearestValue(filterData, value);\n            points = pointMap[value];\n        }\n        const len = points && points.length;\n        points && points.sort((p1, p2) => p1.update.y - p2.update.y);\n        for (let i = 0; i < len; i++) {\n            const point = points[i];\n            const update = point.update;\n            if (x >= update.x && x <= (update.width + update.x) && y >= update.y && y <= (update.height + update.y)) {\n                pointFound = point;\n                break;\n            }\n            pointFound = null;\n        }\n\n        const values = pointFound && pointFound._data;\n        if (values) {\n            identifiers = this.getIdentifiersFromData(values, pointFound._id);\n        }\n        return pointFound ? {\n            dimensions: [pointFound.update],\n            id: identifiers,\n            layerId: this.id()\n        } : pointFound;\n    }\n\n    getPlotSpan () {\n        return this._plotSpan;\n    }\n}\n","import { CLASSPREFIX } from '../../enums/constants';\n\nexport const defaultConfig = {\n    defClassName: 'layer-tick',\n    className: '',\n    classPrefix: CLASSPREFIX,\n    interaction: {\n        highlight: [{\n            type: 'stroke',\n            intensity: [0, 0, -15, 0]\n        }],\n        fade: [{\n            type: 'stroke',\n            intensity: [0, 0, 15, 0]\n        }],\n        focus: [{\n            type: 'stroke',\n            intensity: [0, 0, 15, 0]\n        }]\n    },\n    innerPadding: 0.1,\n    transform: {\n        type: 'identity'\n    },\n    transition: {\n        effect: 'cubic',\n        duration: 1000\n    },\n    encoding: {\n        color: { },\n        x: {},\n        y: {},\n        x0: {},\n        y0: {},\n        strokeOpacity: {\n            value: 0.5\n        },\n        fillOpacity: {\n            value: 0.5\n        }\n    },\n    states: {\n        highlight: {\n            className: `${CLASSPREFIX}-layer-tick-highlight`\n        },\n        fadeout: {\n            className: `${CLASSPREFIX}-layer-tick-fadeout`\n        },\n        selected: {\n            className: `${CLASSPREFIX}-layer-tick-selected`\n        }\n    }\n};\n","import { selectElement } from 'muze-utils';\n\n/**\n * Draws ticks by using d3 selection\n * @param  {Object} params Contains container element and points\n * @return {Selection} Ticks Selection\n */\nexport default /* istanbul ignore next */ (params) => {\n    const { points, container, keyFn, className } = params;\n    const mount = selectElement(container);\n    const ticks = mount.selectAll('path').data(points, keyFn);\n    const ticksEnter = ticks.enter().append('path');\n\n    mount.attr('class', className || '');\n    ticksEnter.each(function (d) {\n        const selection = selectElement(this);\n        const enter = d.enter || {};\n        Object.entries(enter).forEach(attr => (!isNaN(attr[1]) && selection.attr(attr[0], attr[1])));\n    });\n\n    ticks.exit().remove();\n    return ticks.merge(ticksEnter)\n                    .each(function (d) {\n                        const selection = selectElement(this);\n                        const update = d.update;\n                        const updateStyle = d.style || {};\n                        const x0 = update.x0 !== undefined ? update.x0 : update.x;\n                        const y0 = update.y0 !== undefined ? update.y0 : update.y;\n                        const path = `M ${update.x} ${update.y} L ${x0} ${y0}`;\n                        d.className && selection.classed(d.className, true);\n                        selection.attr('d', path);\n                        Object.entries(updateStyle).forEach(styleObj => selection.style(styleObj[0], styleObj[1]));\n                    });\n};\n\n","import { FieldType } from 'muze-utils';\nimport { PointLayer } from '../point';\nimport { defaultConfig } from './default-config';\nimport { ENCODING } from '../../enums/constants';\nimport drawTicks from './renderer';\nimport './styles.scss';\nimport { getAxesScales, getLayerColor, positionPoints, getIndividualClassName } from '../../helpers';\n\n/**\n * This layer is used to create small lines. The orientation of the line is determined by the positional\n * encoding properties x0 and y0. The mark type of the layer is ```tick```.\n *\n * @public\n *\n * @class\n * @module TickLayer\n * @extends BaseLayer\n */\nexport default class TickLayer extends PointLayer {\n\n    /**\n     *\n     *\n     * @staticg\n     *\n     * @memberof TickLayer\n     */\n    static defaultConfig () {\n        return defaultConfig;\n    }\n\n    /**\n     *\n     *\n     * @static\n     *\n     * @memberof TickLayer\n     */\n    static formalName () {\n        return 'tick';\n    }\n\n    /**\n     *\n     *\n     * @static\n     *\n     * @memberof TickLayer\n     */\n    static drawFn () {\n        return drawTicks;\n    }\n\n    /**\n     *\n     *\n     *\n     * @memberof TickLayer\n     */\n    elemType () {\n        return 'path';\n    }\n\n    /**\n     * Generates an array of objects containing x, y, width and height of the points from the data\n     * @param  {Array.<Array>} data Data Array\n     * @param  {Object} encoding  Config\n     * @param  {Object} axes     Axes object\n     * @return {Array.<Object>}  Array of points\n     */\n    translatePoints (data, encoding, axes, config = {}) {\n        let points = [];\n        const {\n                xAxis,\n                yAxis\n            } = getAxesScales(axes);\n        const fieldsConfig = this.data().getFieldsConfig();\n        const {\n                xField,\n                yField,\n                x0Field,\n                y0Field,\n                xFieldType,\n                yFieldType\n            } = this.encodingFieldsInf();\n        const isXDim = xFieldType === FieldType.DIMENSION;\n        const isYDim = yFieldType === FieldType.DIMENSION;\n        const key = isXDim ? ENCODING.X : (isYDim ? ENCODING.Y : null);\n        const colorEncoding = encoding.color;\n        const colorField = colorEncoding && colorEncoding.field;\n        const colorFieldIndex = fieldsConfig[colorField] && fieldsConfig[colorField].index;\n        const measurement = this.measurement();\n        const colorAxis = axes.color;\n        const { x: offsetX, y: offsetY } = config.offset;\n        const { x: xSpan, y: ySpan } = config.span;\n        for (let i = 0, len = data.length; i < len; i++) {\n            let xPx;\n            let x0Px;\n            let y0Px;\n            let yPx;\n            const d = data[i];\n            const row = d._data;\n            if (xField) {\n                xPx = xAxis.getScaleValue(d.x) + offsetX;\n                x0Px = xPx + xSpan;\n            }\n\n            if (yField) {\n                yPx = yAxis.getScaleValue(d.y) + offsetY;\n                y0Px = yPx !== null ? yPx + ySpan : null;\n            }\n\n            if (!xField) {\n                xPx = 0;\n                x0Px = measurement.width;\n                if (!isNaN(yPx)) {\n                    yPx += ySpan / 2;\n                    y0Px = yPx;\n                }\n            }\n\n            if (!yField) {\n                yPx = 0;\n                y0Px = measurement.height;\n                x0Px = xPx += xSpan / 2;\n            }\n\n            if (x0Field) {\n                x0Px = xAxis.getScaleValue(d.x0) + xSpan;\n                yPx += ySpan / 2;\n                y0Px -= ySpan / 2;\n            }\n\n            if (y0Field) {\n                y0Px = yAxis.getScaleValue(d.y0) + ySpan;\n                xPx += xSpan / 2;\n                x0Px -= xSpan / 2;\n            }\n            const style = {};\n            const meta = {};\n            const { color, rawColor } = getLayerColor({ datum: d, index: i },\n                { colorEncoding, colorAxis, colorFieldIndex });\n\n            style.stroke = color;\n            meta.stateColor = {};\n            meta.originalColor = rawColor;\n            meta.colorTransform = {};\n            if (!isNaN(xPx) && !isNaN(yPx)) {\n                const point = {\n                    enter: {},\n                    update: {\n                        x: xPx,\n                        y: yPx,\n                        x0: x0Px,\n                        y0: y0Px\n                    },\n                    style,\n                    _data: row,\n                    _id: d._id,\n                    source: row,\n                    rowId: d._id,\n                    meta\n                };\n                point.className = getIndividualClassName(d, i, data, this);\n                points.push(point);\n                this.cachePoint(d[key], point);\n            }\n        }\n        points = positionPoints(this, points);\n        return points;\n    }\n\n    getMeasurementConfig (offsetX, offsetY, widthSpan, heightSpan) {\n        return {\n            offset: {\n                x: (offsetX || 0),\n                y: (offsetY || 0)\n            },\n            span: {\n                x: widthSpan,\n                y: heightSpan\n            }\n        };\n    }\n}\n","export const AREA_LAYER = 'area';\nexport const ARC_LAYER = 'arc';\nexport const LINE_LAYER = 'line';\nexport const TEXT_LAYER = 'text';\nexport const POINT_LAYER = 'point';\nexport const BAR_LAYER = 'bar';\nexport const TICK_LAYER = 'tick';\nexport const SIMPLE_LAYER = 'simple';\nexport const BASE_LAYER = 'base';\n","import { isSimpleObject, mergeRecursive, getObjProp } from 'muze-utils';\n\nconst parseLayerDefinition = (sink, definition, layerDef, layerType) => {\n    for (const key in definition) {\n        if (Object.hasOwnProperty.call(definition, key)) {\n            let strs;\n            let propValue;\n            const def = definition[key];\n            if (isSimpleObject(def)) {\n                sink[key] = {};\n                parseLayerDefinition(sink[key], def, layerDef, layerType);\n            } else if (typeof def === 'string' && (strs = def.split('.')) && strs[0] === layerType) {\n                propValue = getObjProp(layerDef, ...strs.slice(1, strs.length));\n                if (propValue !== undefined) {\n                    sink[key] = propValue;\n                }\n            } else {\n                sink[key] = def;\n            }\n        }\n    }\n};\n\nconst sanitizeEncoding = (encoding) => {\n    // Create object for each encoding value if encoding value is a string\n    for (const key in encoding) {\n        if (typeof encoding[key] === 'string') {\n            encoding[key] = {\n                field: encoding[key]\n            };\n        }\n    }\n};\n\n/**\n * Layer Factory creates layers based on the layer type. All types of layers needs to register in\n * the layer factory. For getting a layer instance, getLayer method needs to invoked with the\n * layerType and other arguments. It also registers the definition of composite layers.\n *\n * @public\n *\n * @module LayerFactory\n */\nconst layerFactory = (() => {\n    const compositeLayers = {};\n    const factoryObj = {\n        setLayerRegistry: (reg) => {\n            factoryObj._layerRegistry = reg;\n        },\n        getSerializedConf: (mark, layerDef) => {\n            let serializedDefs;\n            const defs = compositeLayers[mark];\n            const newConf = mergeRecursive({}, layerDef);\n\n                // If it is a composite layer then resolve all the definitions of each unit layer\n            if (defs) {\n                serializedDefs = defs.map((unitLayerDef) => {\n                    const sDef = {};\n                    parseLayerDefinition(sDef, unitLayerDef, newConf, mark);\n                    sanitizeEncoding(sDef.encoding);\n                    return sDef;\n                });\n            } else {\n                const encoding = newConf.encoding;\n                // Create object for each encoding value if encoding value is a string\n                sanitizeEncoding(encoding);\n                serializedDefs = newConf;\n            }\n\n            return serializedDefs;\n        },\n        getLayerInstance: (layerDef, ...params) => {\n            const layerRegistry = factoryObj._layerRegistry;\n            layerDef = !(layerDef instanceof Array) ? [layerDef] : layerDef;\n            const instances = layerDef.map((layerObj) => {\n                const layerConstructor = layerRegistry[layerObj.mark];\n                return layerConstructor.create(...params);\n            });\n            return instances.length === 1 ? instances[0] : instances;\n        },\n        getLayerClass: mark => factoryObj._layerRegistry[mark],\n        /**\n         * Registers a new composite layer definition in the layer factory.\n         *\n         * @public\n         *\n         * @param {string} layerType Mark type of the new composite layer.\n         * @param {Array} layerDefs Layer definitions of the composite layer.\n         */\n        composeLayers: (layerType, layerDefs) => {\n            compositeLayers[layerType] = layerDefs;\n        },\n        sanitizeLayerConfig: (layerDef) => {\n            const newConf = mergeRecursive({}, layerDef);\n            sanitizeEncoding(newConf.encoding);\n            return newConf;\n        }\n    };\n    return factoryObj;\n})();\n\nexport default layerFactory;\n","import layerFactory from './layer-factory';\n\nexport default layerFactory;\n","import { AreaLayer } from './layers/area';\nimport { ArcLayer } from './layers/arc';\nimport { LineLayer } from './layers/line';\nimport { TextLayer } from './layers/text';\nimport { PointLayer } from './layers/point';\nimport { BarLayer } from './layers/bar';\nimport { BaseLayer } from './base-layer';\nimport * as LAYER_TYPES from './enums/layer-types';\nimport { TickLayer } from './layers/tick';\n\nexport const DEFAULT_LAYERS = {\n    [LAYER_TYPES.AREA_LAYER]: AreaLayer,\n    [LAYER_TYPES.ARC_LAYER]: ArcLayer,\n    [LAYER_TYPES.LINE_LAYER]: LineLayer,\n    [LAYER_TYPES.TEXT_LAYER]: TextLayer,\n    [LAYER_TYPES.POINT_LAYER]: PointLayer,\n    [LAYER_TYPES.TICK_LAYER]: TickLayer,\n    [LAYER_TYPES.BAR_LAYER]: BarLayer,\n    [LAYER_TYPES.BASE_LAYER]: BaseLayer\n};\n","/**\n * This file exports constants that are used as enums in the\n *  crosstab group implementation.\n */\n/**\n * Width of the crosstab.\n */\nexport const X = 'x';\n/**\n * Width of the crosstab.\n */\nexport const Y = 'y';\n/**\n * Width of the crosstab.\n */\nexport const WIDTH = 'width';\n\n/**\n * Height of the crosstab.\n */\nexport const HEIGHT = 'height';\n\n/**\n * Field referring to object storing measurement configuration.\n */\nexport const MEASUREMENT = 'measurement';\n\n/**\n * Field referring to object storing configuration properties.\n */\nexport const CONFIG = 'config';\n\n/**\n * Width of visual unit in crosstab.\n */\nexport const MIN_UNIT_WIDTH = 'minUnitWidth';\n\n/**\n * Height of visual unit.\n */\nexport const MIN_UNIT_HEIGHT = 'minUnitHeight';\n\n/**\n * Field to store the array of dimensions to facet by.\n */\nexport const DIMENSIONS = 'dimensions';\n\n/**\n * Field to store array of measures to use as x axis.\n */\nexport const MEASURES = 'measures';\n\n/**\n * Field to store the array of dimensions to facet by.\n */\nexport const DIMENSION = 'dimension';\n\n/**\n * Field to store array of measures to use as x axis.\n */\nexport const MEASURE = 'measure';\n\n/**\n * Flag to specify if model should be pivoted.\n */\nexport const PIVOT = 'pivot';\n\n/**\n * Flag to specify format\n */\nexport const FORMAT = 'format';\n\n/**\n * Mount point where the variable will be hosted\n */\nexport const MOUNT = 'mount';\n\n/**\n * Data update flag\n */\nexport const HAS_DATA_UPDATED = 'hasDataUpdated';\n\n/**\n * Field referring to object storing set of rows\n */\nexport const ROWS = 'rows';\n\n/**\n * Field referring to object storing set of columns\n */\nexport const COLUMNS = 'columns';\n\n/**\n * Field referring to object storing set of columns\n */\nexport const COL = 'col';\n\n/**\n * Field referring to object storing set of rows\n */\nexport const ROW = 'row';\n\n/**\n * Field referring to object storing set of columns\n */\nexport const COLUMN = 'column';\n\n/**\n * Field referring to object storing color field\n */\nexport const COLOR = 'color';\n\n/**\n * Field referring to object storing shape field\n */\nexport const SHAPE = 'shape';\n\n/**\n * Field referring to object storing size field\n */\nexport const SIZE = 'size';\n\n/**\n * Field referring to object storing detail field\n */\nexport const DETAIL = 'detail';\n\n/**\n * Field referring to object storing set of layers\n */\nexport const LAYERS = 'layers';\n\n/**\n * Field referring to object storing the transforms\n */\nexport const TRANSFORM = 'transform';\n\n/**\n * Field referring to object storing the transforms\n */\nexport const ORDINAL = 'ordinal';\n\n/**\n * Field referring to object storing the transforms\n */\nexport const LINEAR = 'linear';\n/**\n * Field referring to object storing the transforms\n */\nexport const LEFT = 'left';\n/**\n * Field referring to object storing the transforms\n */\nexport const RIGHT = 'right';\n/**\n * Field referring to object storing the transforms\n */\nexport const TOP = 'top';\n/**\n * Field referring to object storing the transforms\n */\nexport const BOTTOM = 'bottom';\n\n/**\n * Field referring to object storing the transforms\n */\nexport const RETINAL = 'retinal';\n/**\n * Field referring to object storing the transforms\n */\nexport const CELL = 'cell';\n/**\n * Field referring to object storing the transforms\n */\nexport const X_AXES = 'xAxes';\n/**\n * Field referring to object storing the transforms\n */\nexport const Y_AXES = 'yAxes';\n/**\n * Field referring to object storing the transforms\n */\nexport const ENTRY_CELLS = 'entryCell';\n/**\n * Field referring to object storing the transforms\n */\nexport const INITIALIZED = 'initialized';\n/**\n * Field referring to object storing the transforms\n */\nexport const EXIT_CELLS = 'exitCell';\n/**\n * Field referring to object storing the transforms\n */\nexport const AXIS = 'axis';\n/**\n * Field referring to object storing the transforms\n */\nexport const UNIT = 'unit';\n/**\n * Field referring to object storing the transforms\n */\nexport const UPDATED = 'updated';\n/**\n * Field referring to object storing the transforms\n */\nexport const BEFORE_UPDATE = 'beforeupdate';\n/**\n * Field referring to object storing the transforms\n */\nexport const VALUE_MATRIX = 'valueMatrix';\n/**\n * Field referring to object storing the transforms\n */\nexport const FACET_HEADERS = 'facet-headers';\n/**\n * Field referring to object storing the transforms\n */\nexport const RADIUS = 'radius';\n/**\n * Field referring to object storing the transforms\n */\nexport const ANGLE = 'angle';\n/**\n * Field referring to object storing the transforms\n */\nexport const ARC = 'arc';\n/**\n * Field referring to object storing the transforms\n */\nexport const CARTESIAN = 'cartesian';\n/**\n * Field referring to object storing the transforms\n */\nexport const POLAR = 'polar';\n/**\n * Field referring to object storing the transforms\n */\nexport const CATEGORICAL = 'categorical';\n/**\n * Field referring to object storing the transforms\n */\nexport const TEMPORAL = 'temporal';\n/**\n * Field referring to object storing the transforms\n */\nexport const BAR = 'bar';\n/**\n * Field referring to object storing the transforms\n */\nexport const LINE = 'line';\n/**\n * Field referring to object storing the transforms\n */\nexport const POINT = 'point';\n/**\n * Field referring to object storing the transforms\n */\nexport const PRIMARY = 'Primary';\n/**\n * Field referring to object storing the transforms\n */\nexport const SECONDARY = 'Secondary';\n/**\n * Field referring to object storing the transforms\n */\nexport const BOTH = 'both';\n/**\n * Field referring to object storing the transforms\n */\nexport const INTERACTION = 'interaction';\n/**\n * Field referring to object storing the transforms\n */\nexport const GRID_LINES = 'gridLines';\n/**\n * Field referring to object storing the transforms\n */\nexport const GRID_BANDS = 'gridBands';\n/**\n * Field referring to object storing the transforms\n */\nexport const HEADER = 'header';\n/**\n * Field referring to object storing the transforms\n */\nexport const FACET = 'facet';\n\n","import { ROWS, COLUMNS, COLOR, SHAPE, SIZE, DETAIL, LAYERS, TRANSFORM, CONFIG } from '../enums/constants';\n\n/**\n * This is the local options semantics based on which setters getters are created and reactivity is initiated.\n * This local object is only valid for Artboard.\n * Artboard merges global and local object both to the model\n *\n * Format\n *  PROPERTRY_NAME: {\n *      value: // default value of the property,\n *      meta: {\n *          typeCheck: // The setter value will be checked using this. If the value is function then the setter value\n *                     // is passed as args.\n *          typeExpected: // The output of typecheck action will be tested against this. Truthy value will set the\n *                       // value to the setter\n *          sanitizaiton: // Need for sanitization before type is checked\n *      }\n *  }\n *\n * @module\n */\n\nexport default {\n    [CONFIG]: {},\n    [ROWS]: {},\n    [COLUMNS]: {},\n    [COLOR]: {},\n    [SHAPE]: {},\n    [SIZE]: {},\n    [DETAIL]: {},\n    [LAYERS]: {},\n    [TRANSFORM]: {}\n};\n","import { ERROR_MSG } from 'muze-utils';\n\n/**\n * Interfaces for VisualGroup. Any new VisualGroup has to implement this class.\n * @class  SimpleGroup\n */\nclass SimpleGroup {\n\n    /**\n     * This method is used to set or get the DataModel instance.\n     *\n     * @param {DataModel | undefined} dataModel Instance of datamodel.\n\n     * @memberof  SimpleGroup\n     */\n    data () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    /**\n     * This method is used to set or get the group specific configuration\n     * properties\n     *\n     * @param {Object | undefined} configObj The input configuration.\n     *                                or instance of visual group.\n     * @memberof  SimpleGroup\n     */\n    config () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    /**\n     * This method is used to return a serialized representation of the\n     * instance's properties.\n     *\n     * @memberof  SimpleGroup\n     */\n    serialize () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    /**\n     * This method is used to get or set the measurement object which houses\n     * layout properties like width and height.\n     *\n     * @param {Object  | undefined} mObj The measurement properties.\n     * @memberof  SimpleGroup\n     */\n    measurement () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n}\n\nexport default SimpleGroup;\n","import { ERROR_MSG } from 'muze-utils';\n\n/**\n *\n *\n * @export\n * @class Variable\n */\nexport default class Variable {\n\n    /**\n     *\n     *\n     * @memberof Variable\n     */\n    type () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    /**\n     *\n     *\n     * @memberof Variable\n     */\n    toString () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n}\n","import Variable from './variable';\n\n/**\n * This is a wrapper on top of multiple variables which are of same type but they are shown in the same axis.This is\n * required in case of range plots or ohlc plots where one plot is mapped to multiple measure fields. At that time,\n * we need to create a composed variable from multiple variables. This class just wraps them into one variable instance\n * and provides methods to get the type and other common functionalities which can be performed on a simple variable\n * instance.\n *\n * @public\n * @class ComposeVars\n */\nclass ComposedVars extends Variable {\n\n    /**\n     * Creates an instance of ComposeVars.\n     *\n     * @param {Array} texts Array of field names\n     */\n    constructor (...texts) {\n        super(...texts);\n        this.vars(texts);\n    }\n\n    vars (...params) {\n        if (params.length) {\n            this._vars = params[0];\n            return this;\n        }\n        return this._vars;\n    }\n\n    data (...dm) {\n        if (dm.length) {\n            this.vars().forEach(d => d.data(dm[0]));\n            return this;\n        }\n        return this._data;\n    }\n\n    /**\n     * Get all the field names from composed variable instance.\n     *\n     * @public\n     * @return {Array} Array of field names.\n     */\n    getMembers () {\n        const vars = this.vars();\n        return vars.map(member => member.getMembers()[0]);\n    }\n\n    /**\n     * Type of field associated with this composed variable.\n     *\n     * @return {string} Type of variable (Measure/Dimension).\n     */\n    type () {\n        return this.vars()[0].type();\n    }\n\n    toString () {\n        return this.vars().map(d => d.toString()).join(',');\n    }\n\n    /**\n     * Returns the number formatter function of the variable.\n     *\n     * @return {Function} Number formatter function of the variable.\n     */\n    numberFormat () {\n        return this.vars()[0].numberFormat();\n    }\n\n    format (values) {\n        return this.vars()[0].format(values);\n    }\n\n    /**\n     * Returns the subtype of the fields associated with this variable instance.\n     *\n     * @public\n     * @return {string} Subtype of the variable.\n     */\n    subtype () {\n        return this.vars()[0].subtype();\n    }\n\n    /**\n     * Returns the consecutive minimum difference of the field values.\n     *\n     * @public\n     * @return {number} Minimum consecutive difference.\n     */\n    getMinDiff () {\n        return this.vars()[0].getMinDiff();\n    }\n}\n\nexport default ComposedVars;\n","import { DateTimeFormatter } from 'muze-utils';\nimport Variable from './variable';\n\n/**\n * This is a wrapper on top of fields passed in rows or columns in canvas. This is used to get the type of field or\n * get min difference from the field values.\n *\n * @public\n * @class SimpleVariable\n */\nexport default class SimpleVariable extends Variable {\n\n    /**\n     * Creates an instance of simple variable instance.\n     *\n     * @param {string} text Field name.\n     */\n    constructor (text) {\n        super();\n        this.oneVar(text);\n    }\n\n    /**\n     * Gets the field name associated with this variable instance.\n     *\n     * @public\n     * @return {string} Name of the field.\n     */\n    oneVar (...oneV) {\n        if (oneV.length) {\n            this._oneVar = oneV[0];\n            return this;\n        }\n        return this._oneVar;\n    }\n\n    data (...dm) {\n        if (dm.length) {\n            this._data = dm[0];\n            return this;\n        }\n        return this._data;\n    }\n\n    toString () {\n        return this.oneVar();\n    }\n\n    /**\n     * Gets the number formatter function of this variable.\n     *\n     * @public\n     * @return {Function} Number formatter function.\n     */\n    numberFormat () {\n        if (this.type() === 'measure') {\n            const formatter = this.data().getFieldspace().getMeasure()[this.oneVar()];\n            return formatter.numberFormat();\n        } return val => val;\n    }\n\n    format (values) {\n        if (values && this.subtype() === 'temporal') {\n            const formatter = this.data().getFieldspace().getDimension()[this.oneVar()].schema().format;\n            const dtFormat = new DateTimeFormatter(formatter);\n            values = values.map(e => dtFormat.getNativeDate(e));\n        }\n        return values;\n    }\n\n    /**\n     * Return the field names associated with this variable instance.\n     *\n     * @public\n     * @return {Array} Array of fields.\n     */\n    getMembers () {\n        return [this.oneVar()];\n    }\n\n    /**\n     * Returns the type of the variable. Whether it is measure or dimension.\n     *\n     * @public\n     * @return {string} Type of variable.\n     */\n    type () {\n        const fieldDef = this.data().getFieldsConfig()[this.oneVar()].def;\n        return fieldDef.type;\n    }\n\n    /**\n     * Returns the subtype of the variable. Subtype can be categorical or temporal. If no subtype is found, then it\n     * returns the type of the variable.\n     *\n     * @public\n     * @return {string} Subtype of variable.\n     */\n    subtype () {\n        const fieldDef = this.data().getFieldsConfig()[this.oneVar()].def;\n        return fieldDef.subtype || fieldDef.type;\n    }\n\n    /**\n     * Returns the minimum consecutive difference between the data values of this variable.\n     *\n     * @return {number} Minimum consecutive difference.\n     */\n    getMinDiff () {\n        const fieldSpace = this.data().getFieldspace();\n        return fieldSpace.fieldsObj()[this.oneVar()].minimumConsecutiveDifference();\n    }\n\n    /**\n     * Returns true if two variable instances are same.If both variable has the same field names, they are equal.\n     *\n     * @return {Boolean} Whether two variable instances are same.\n     */\n    equals (varInst) {\n        return this.oneVar() === varInst.oneVar();\n    }\n}\n","import { ComposedVars, SimpleVariable } from '../variable';\nimport { DIMENSION, COLUMNS, ROWS, TEMPORAL } from '../enums/constants';\n\n/**\n * Gets the list of fields in a sorted order by measurement and dimension\n *\n * @param {Array} fieldList List of fields in the view\n * @param {Object} fieldMap Mapping of fields in the datamodel\n * @return {Array} fields sorted by measurement and dimensions\n */\nconst orderFields = (fieldArray, type) => {\n    const dimensionArr = [[], []];\n    const measureArr = [[], []];\n    const temporalArr = [[], []];\n    const categoricalArr = [[], []];\n\n    fieldArray.forEach((fieldList, index) => {\n        fieldList.forEach((field) => {\n            if (field.type() === DIMENSION) {\n                dimensionArr[index].push(field);\n                field.subtype() === TEMPORAL ? temporalArr[index].push(field) : categoricalArr[index].push(field);\n            } else {\n                measureArr[index].push(field);\n            }\n        });\n    });\n\n    const numOfMeasures = measureArr[0].length + (measureArr[1] ? measureArr[1].length : 0);\n\n    // Single array of fields\n    if (!fieldArray[1]) {\n        // Push measures to bottom\n        measureArr[1] = type === COLUMNS ? measureArr[0] : [];\n        // Push measures to left\n        measureArr[0] = type !== COLUMNS ? measureArr[0] : [];\n        // Bottom and right dimensions empty\n        dimensionArr[1] = [];\n        // Left and top filled with dimensions\n        dimensionArr[0] = dimensionArr[0];\n        if (numOfMeasures === 0) {\n            const allDimensions = [...dimensionArr[0], ...dimensionArr[1]];\n            if (type === COLUMNS) {\n                dimensionArr[1] = allDimensions[allDimensions.length - 1] ? [allDimensions[allDimensions.length - 1]]\n                        : [];\n                allDimensions.splice(-1, 1);\n            } else {\n                dimensionArr[1] = [];\n            }\n            dimensionArr[0] = [...allDimensions];\n        }\n    }\n\n    if (dimensionArr[0].length && dimensionArr[1].length && numOfMeasures > 0) {\n        dimensionArr[0] = [...dimensionArr[0], ...dimensionArr[1]];\n        dimensionArr[1] = [];\n    }\n    return {\n        fields: dimensionArr.map((list, i) => (i === 1 ?\n            measureArr[i].concat(dimensionArr[i]) : dimensionArr[i].concat(measureArr[i]))),\n        dimensions: [...dimensionArr[0], ...dimensionArr[1]],\n        measures: [...measureArr[0], ...measureArr[1]],\n        temporal: [...temporalArr[0], ...temporalArr[1]],\n        categorical: [...categoricalArr[0], ...categoricalArr[1]]\n    };\n};\n\n/**\n * Gets the list of normalized fields\n *\n * @param {Array} fields List of fields in the view\n * @param {Object} fieldMap Mapping of fields in the datamodel\n * @return {Array} fields normalized by measurement and dimensions\n */\nconst normalizeFields = (config, type) => {\n    const fieldsArr = [];\n    const fields = config[type];\n\n    if (!(fields[0] instanceof Array)) {\n        fieldsArr[0] = fields;\n    } else {\n        fieldsArr[0] = fields[0] || [];\n        fieldsArr[1] = fields[1] || [];\n    }\n    return fieldsArr;\n};\n\n/**\n *\n *\n * @param {*} fields\n * @param {*} datamodel\n *\n */\nconst convertToVar = (datamodel, fields) => {\n    const vars = [];\n\n    fields && fields.forEach((field) => {\n        if (field instanceof ComposedVars) {\n            vars.push(field);\n            field.data(datamodel);\n        } else {\n            vars.push(new SimpleVariable(field).data(datamodel));\n        }\n    });\n    return vars;\n};\n\n/**\n *\n *\n * @param {*} rows\n * @param {*} columns\n * @param {*} datamodel\n *\n */\nexport const transformFields = (datamodel, config) => {\n    const [rowsInfo, columnsInfo] = [ROWS, COLUMNS].map((fields) => {\n        const normalizedFields = normalizeFields(config, fields);\n        const norFields = [convertToVar(datamodel, normalizedFields[0])];\n\n        if (normalizedFields[1]) {\n            norFields[1] = convertToVar(datamodel, normalizedFields[1]);\n        }\n        return orderFields(norFields, fields);\n    });\n    const {\n        fields: rows,\n        dimensions: rowDimensions,\n        measures: rowMeasures,\n        temporal: rowTemporalFields,\n        categorical: rowCategoricalFields\n    } = rowsInfo;\n    const {\n        fields: columns,\n        dimensions: columnDimensions,\n        measures: columnMeasures,\n        temporal: columnTemporalFields,\n        categorical: columnCategoricalFields\n    } = columnsInfo;\n    return {\n        rows,\n        rowDimensions,\n        rowMeasures,\n        rowTemporalFields,\n        rowCategoricalFields,\n        columns,\n        columnTemporalFields,\n        columnCategoricalFields,\n        columnDimensions,\n        columnMeasures\n    };\n};\n","import { ERROR_MSG, mergeRecursive } from 'muze-utils';\nimport { transformFields } from './field-sanitizer';\nimport { getHeaderAxisFrom } from '../group-helper/group-utils';\nimport { ROW, COLUMN } from '../enums/constants';\n\n/**\n *\n *\n * @export\n * @class VisualEncoder\n */\nexport default class VisualEncoder {\n\n    /**\n     *\n     *\n     * @memberof VisualEncoder\n     */\n    createAxis () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    /**\n     *\n     *\n     * @memberof VisualEncoder\n     */\n    setCommonDomain () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    /**\n     *\n     *\n     * @memberof VisualEncoder\n     */\n    getLayerConfig () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    fieldInfo (...info) {\n        if (info.length) {\n            this._fieldInfo = mergeRecursive(this._fieldInfo || {}, info[0]);\n            return this;\n        }\n        return this._fieldInfo;\n    }\n\n    /**\n     *\n     *\n     * @param {*} datamodel\n     * @param {*} config\n     *\n     * @memberof VisualEncoder\n     */\n    fieldSanitizer (datamodel, config) {\n        this.fieldInfo(transformFields(datamodel, config));\n        return this.fieldInfo();\n    }\n\n    /**\n     *\n     *\n     * @param {*} params\n     *\n     * @memberof VisualEncoder\n     */\n    axisFrom (...params) {\n        if (params.length) {\n            this._axisFrom = params[0];\n            return this;\n        }\n        return this._axisFrom;\n    }\n\n    /**\n     *\n     *\n     * @param {*} params\n     *\n     * @memberof VisualEncoder\n     */\n    headerFrom (...params) {\n        if (params.length) {\n            this._headerFrom = params[0];\n            return this;\n        }\n        return this.__headerFrom;\n    }\n\n    /**\n     *\n     *\n     * @param {*} axisFrom\n     *\n     * @memberof CartesianEncoder\n     */\n    setAxisAndHeaders (axisFrom = {}, fields) {\n        const [rowHeader, rowAxis] = getHeaderAxisFrom(ROW, fields.rows, axisFrom);\n        const [colHeader, colAxis] = getHeaderAxisFrom(COLUMN, fields.columns, axisFrom);\n\n        this.axisFrom({\n            row: rowAxis,\n            column: colAxis\n        });\n        this.headerFrom({\n            row: rowHeader,\n            column: colHeader\n        });\n        return this;\n    }\n}\n","import { ContinousAxis, BandAxis, TimeAxis, ColorAxis, SizeAxis, ShapeAxis } from '@chartshq/muze-axis';\n\nexport const scaleMaps = {\n    linear: ContinousAxis,\n    band: BandAxis,\n    temporal: TimeAxis,\n    size: SizeAxis,\n    color: ColorAxis,\n    shape: ShapeAxis\n};\n","import { ScaleType } from '@chartshq/muze-axis';\n\n/**\n * Map of DataModel types to associated field types.\n */\nexport const dataTypeScaleMap = {\n    dimension: ScaleType.BAND,\n    categorical: ScaleType.BAND,\n    temporal: ScaleType.TIME,\n    measure: ScaleType.LINEAR,\n    continuous: ScaleType.LINEAR\n};\n","import { mergeRecursive } from 'muze-utils';\nimport { AxisOrientation } from '@chartshq/muze-axis';\nimport { scaleMaps } from '../enums/scale-maps';\nimport { getAxisType, getAxisKey } from '../group-helper';\nimport { dataTypeScaleMap } from '../data-type-scale-map';\nimport { CATEGORICAL, TEMPORAL, BAR, LINE, POINT, BOTH, Y } from '../enums/constants';\n\n/**\n *\n *\n * @param {*} axisInfo\n * @param {*} field\n * @param {*} axesCreators\n *\n */\nconst getAxisConfig = (axisInfo, field, axesCreators) => {\n    let axisOrientation;\n    const { index, axisIndex, axisType } = axisInfo;\n    const { config, position } = axesCreators;\n    const userAxisConfig = config.axes ? (config.axes[axisType] || {}) : {};\n    const {\n        LEFT,\n        RIGHT,\n        TOP,\n        BOTTOM\n    } = AxisOrientation;\n    const allOrientations = axisType === Y ? [LEFT, RIGHT] : [TOP, BOTTOM];\n\n    if (position === BOTH) {\n        axisOrientation = allOrientations[axisIndex];\n    } else {\n        axisOrientation = position;\n    }\n    const axisConfig = {\n        id: `${axisType}-${index}-${axisIndex}`,\n        name: field.toString(),\n        field: field.toString(),\n        numberFormat: field.numberFormat(),\n        orientation: axisOrientation,\n        showAxisName: true,\n        show: true,\n        type: dataTypeScaleMap[field.subtype()]\n    };\n    userAxisConfig.tickValues = field.format(userAxisConfig.tickValues);\n    userAxisConfig.domain = field.format(userAxisConfig.domain);\n\n    return mergeRecursive(axisConfig, userAxisConfig);\n};\n\n/**\n *\n *\n * @param {*} axisInfo\n * @param {*} field\n * @param {*} axesCreators\n *\n */\nconst createSimpleAxis = (axisConfig, field, axesCreators) => {\n    const { labelManager } = axesCreators;\n    const Cls = scaleMaps[dataTypeScaleMap[field.subtype()]];\n    const simpleAxis = new Cls(axisConfig, { labelManager });\n    return simpleAxis;\n};\n\nexport const getAdjustedDomain = (max, min) => {\n    const y1ratio = max[0] / (max[0] - min[0]);\n    const y2ratio = max[1] / (max[1] - min[1]);\n\n    // adjust min/max values for positive negative values zero line etc\n    let allSameSign = false;\n\n    // if all numbers are positive set floor to zero\n    if (min[0] > 0 && min[1] > 0 && min[1] > 0 && max[1] > 0) {\n        allSameSign = true;\n        min[0] = 0;\n        min[1] = 0;\n    }\n\n    // if all numbers are negative set ceiling to zero\n    if (min[0] < 0 && min[1] < 0 && min[1] < 0 && max[1] < 0) {\n        allSameSign = true;\n        max[0] = 0;\n        max[1] = 0;\n    }\n\n    // align zero line if necessary\n    if (!allSameSign && y1ratio !== y2ratio) {\n        if (y1ratio < y2ratio) {\n                    // adjust min[1]\n            min[1] = min[0] / max[0] * max[1];\n        } else {\n                    // adjust min[0]\n            min[0] = min[1] / max[1] * max[0];\n        }\n    }\n    return [\n        [min[0], max[0]],\n        [min[1], max[1]]\n    ];\n};\n\n/**\n *\n *\n * @param {*} axisType\n * @param {*} fieldInfo\n * @param {*} axesCreators\n * @param {*} groupAxes\n *\n */\nexport const generateAxisFromMap = (axisType, fieldInfo, axesCreators, axesInfo) => {\n    let axisKey;\n    const { groupAxes, valueParser } = axesInfo;\n    const currentAxes = [];\n    const { fields, index } = fieldInfo;\n    const { cacheMaps } = axesCreators;\n    const map = cacheMaps[`${axisType}AxesMap`];\n\n    const commonAxisKey = getAxisKey(axisType, index);\n    fields.forEach((field, axisIndex) => {\n        axisKey = getAxisKey(axisType, index, axisIndex, dataTypeScaleMap[field.subtype()]);\n        const axisConfig = getAxisConfig({ index, axisIndex, axisType }, field, axesCreators);\n\n        let axis;\n        if (!map.has(axisKey)) {\n            axis = createSimpleAxis(axisConfig, field, axesCreators);\n        } else {\n            axis = map.get(axisKey);\n            axis._rotationLock = false;\n            axis.config(axisConfig);\n            axisConfig.domain ? axis.domain(axisConfig.domain) : axis.resetDomain();\n        }\n        axis.valueParser(valueParser);\n        currentAxes.push(axis);\n        map.set(axisKey, axis);\n    });\n\n    if (currentAxes.length) {\n        map.set(commonAxisKey, currentAxes);\n        groupAxes.add(commonAxisKey);\n    }\n\n    return currentAxes;\n};\n\n/**\n *\n *\n * @memberof MatrixResolver\n */\nexport const mutateAxesFromMap = (cacheMaps, axes) => {\n    const {\n        xAxesMap,\n        yAxesMap\n    } = cacheMaps;\n    const {\n        x: xAxisSet,\n        y: yAxisSet\n    } = axes;\n    const xAxes = [];\n    const yAxes = [];\n\n    xAxisSet.forEach((axisId) => {\n        const xAxis = xAxesMap.get(axisId);\n        xAxes.push(xAxis);\n    });\n    yAxisSet.forEach((axisId) => {\n        const yAxis = yAxesMap.get(axisId);\n        yAxes.push(yAxis);\n    });\n    return {\n        xAxes, yAxes\n    };\n};\n\n/**\n * return a default mark based on predefined set of rules of type and subtype of the fields\n *\n * @param {string} colFieldType dimension/measure - temporal/ordinal/nominal\n * @param {string} rowFieldType dimension/measure - temporal/ordinal/nominal\n * @return {Object} return mark type\n */\nexport const getDefaultMark = (colFieldType, rowFieldType) => {\n    let mark;\n\n    if (colFieldType === CATEGORICAL || rowFieldType === CATEGORICAL) {\n        mark = BAR;\n    } else if (colFieldType === TEMPORAL || rowFieldType === TEMPORAL) {\n        mark = LINE;\n    } else {\n        mark = POINT;\n    }\n\n    return mark;\n};\n\n/**\n *\n *\n * @param {*} axesCreators\n * @param {*} [fieldInfo=[]]\n *\n */\nexport const createRetinalAxis = (axesCreators, fieldProps = {}) => {\n    const { axisType, fieldsConfig } = axesCreators;\n    const field = fieldProps.field;\n    const axis = [];\n    const Cls = scaleMaps[axisType];\n\n    fieldProps.type = fieldProps.type ? fieldProps.type : getAxisType(fieldsConfig, field || null);\n    axis.push(new Cls(fieldProps));\n    return axis;\n};\n\n/**\n *\n *\n * @param {*} arr\n * @param {*} val\n *\n */\nexport const getIndex = (arr, val) => {\n    let i = 0;\n    let arrIndex = -1;\n\n    while (arrIndex === -1 && i < arr.length) {\n        if (arr[i].toString() === val.toString()) {\n            arrIndex = i;\n        }\n        i++;\n    }\n    return arrIndex;\n};\n\n/**\n *\n *\n * @param {*} colFields\n * @param {*} rowFields\n * @param {*} userLayerConfig\n *\n * @memberof CartesianEncoder\n */\nexport const getLayerConfFromFields = (colFields, rowFields, userLayerConfig) => userLayerConfig.filter((conf) => {\n    const userConf = conf instanceof Array ? conf : [conf];\n    const encodingArr = [].concat(...userConf.map(d => d.encoding).filter(d => d !== undefined));\n\n    if (!encodingArr.length) {\n        return true;\n    }\n\n    const xFields = [].concat(...encodingArr.map(d => [d.x && d.x.field, d.x0 && d.x0.field]))\n                .filter(d => d !== undefined && d !== null);\n    const yFields = [].concat(...encodingArr.map(d => [d.y && d.y.field, d.y0 && d.y0.field]))\n                .filter(d => d !== undefined && d !== null);\n\n    if (!xFields.length && !yFields.length) {\n        return true;\n    }\n\n    const colFieldExist = xFields.length ? xFields.every(d => colFields.indexOf(d) !== -1) : false;\n    const rowFieldExist = yFields.length ? yFields.every(d => rowFields.indexOf(d) !== -1) : false;\n    if (xFields.length && yFields.length) {\n        return colFieldExist && rowFieldExist;\n    }\n    return colFieldExist || rowFieldExist;\n});\n","import { layerFactory } from '@chartshq/visual-layer';\nimport { mergeRecursive, STATE_NAMESPACES, unionDomain } from 'muze-utils';\nimport {\n    generateAxisFromMap,\n    getDefaultMark,\n    getIndex,\n    getLayerConfFromFields,\n    getAdjustedDomain\n} from './encoder-helper';\nimport { retriveDomainFromData } from '../group-helper';\n\nimport { ROW, COLUMN, COL, LEFT, TOP, CARTESIAN, MEASURE, BOTH, X, Y } from '../enums/constants';\nimport VisualEncoder from './visual-encoder';\n\n/**\n *\n *\n * @export\n * @class CartesianEncoder\n * @extends {VisualEncoder}\n */\nexport default class CartesianEncoder extends VisualEncoder {\n\n    /**\n     *\n     *\n     *\n     * @memberof CartesianEncoder\n     */\n    static type () {\n        return CARTESIAN;\n    }\n\n    /**\n     *\n     *\n     * @param {*} axesCreators\n     * @param {*} fieldInfo\n     *\n     * @memberof CartesianEncoder\n     */\n    createAxis (axesCreators, fieldInfo, context) {\n        const geomCellAxes = {};\n        const {\n            axes\n        } = axesCreators;\n        const {\n            projections,\n            indices\n        } = fieldInfo;\n        const {\n            rowFields,\n            columnFields\n        } = projections;\n        const {\n             rowIndex,\n             columnIndex\n        } = indices;\n        const axisFields = [{\n            fields: rowFields,\n            index: rowIndex\n        }, {\n            fields: columnFields,\n            index: columnIndex\n        }];\n        const xAxes = axes.x || [];\n        const yAxes = axes.y || [];\n\n        [rowFields, columnFields].forEach((fields, i) => {\n            const type = i === 0 ? ROW : COLUMN;\n            const axis = i === 0 ? Y : X;\n\n            if (fields.length > 1) {\n                axesCreators.position = BOTH;\n            } else {\n                axesCreators.position = this.axisFrom()[type];\n            }\n            geomCellAxes[axis] = generateAxisFromMap(axis, axisFields[i], axesCreators, {\n                groupAxes: axis === X ? xAxes : yAxes,\n                valueParser: context.resolver.valueParser()\n            });\n        });\n        return geomCellAxes;\n    }\n\n    updateDomains (store, axes) {\n        const xAxes = axes.x;\n        const yAxes = axes.y;\n        store.model.lock();\n        for (let i = 0; i < xAxes.length; i++) {\n            for (let j = 0; j < xAxes[i].length; j++) {\n                store.commit(`${STATE_NAMESPACES.GROUP_GLOBAL_NAMESPACE}.domain.x.${0}${i}0`, xAxes[i][j].domain());\n            }\n        }\n        for (let i = 0; i < yAxes.length; i++) {\n            for (let j = 0; j < yAxes[i].length; j++) {\n                store.commit(`${STATE_NAMESPACES.GROUP_GLOBAL_NAMESPACE}.domain.y.${i}${0}0`, yAxes[i][j].domain());\n                yAxes[i][j]._domainLock = false;\n            }\n        }\n\n        store.model.unlock();\n    }\n\n    unionUnitDomains (context) {\n        const store = context.store();\n        const unitDomains = store.get(`${STATE_NAMESPACES.UNIT_GLOBAL_NAMESPACE}.domain`);\n        const resolver = context.resolver();\n        const units = resolver.units();\n        const domains = {\n            0: {},\n            1: {}\n        };\n\n        for (let rIdx = 0, len = units.length; rIdx < len; rIdx++) {\n            const unitsArr = units[rIdx];\n            for (let cIdx = 0, len2 = unitsArr.length; cIdx < len2; cIdx++) {\n                const unit = unitsArr[cIdx];\n                const axisFields = unit.fields();\n                [axisFields.x, axisFields.y].forEach((fieldArr, axisType) => {\n                    fieldArr.forEach((field, axisIndex) => {\n                        const key = !axisType ? `0${cIdx}${axisIndex}` : `${rIdx}0${axisIndex}`;\n                        const dom = unitDomains[`${rIdx}${cIdx}`];\n                        if (dom && Object.keys(dom).length !== 0) {\n                            domains[axisType][key] = unionDomain([(domains[axisType] && domains[axisType][key]) || [],\n                                dom[`${field}`]], field.subtype());\n                        }\n                    });\n                });\n            }\n        }\n\n        const { x: xAxes, y: yAxes } = resolver.axes();\n        store.model.lock();\n        [xAxes, yAxes].forEach((axesArr, axisType) => {\n            axesArr.forEach((axes, idx) => {\n                const min = [];\n                const max = [];\n                let domain = [];\n                let adjustedDomain = [];\n                if (axes.length > 1 && axes[0].constructor.type() === 'linear' && axes[0].config().alignZeroLine) {\n                    axes.forEach((axis, i) => {\n                        const key = !axisType ? `0${idx}${i}` : `${idx}0${i}`;\n                        domain = domains[axisType][key];\n                        min[i] = domain[0];\n                        max[i] = domain[1];\n                    });\n                    adjustedDomain = getAdjustedDomain(max, min);\n                }\n\n                axes.forEach((axis, index) => {\n                    const key = !axisType ? `0${idx}${index}` : `${idx}0${index}`;\n                    domain = adjustedDomain[index] || domains[axisType][key];\n                    axis.domain(domain);\n                    const type = !axisType ? 'x' : 'y';\n                    store.commit(`${STATE_NAMESPACES.GROUP_GLOBAL_NAMESPACE}.domain.${type}.${idx}${index}`, domain);\n                });\n            });\n        });\n        store.model.unlock();\n    }\n\n    /**\n     *\n     *\n     * @param {*} fields\n     *\n     * @memberof CartesianEncoder\n     */\n    getFacetsAndProjections (fields, type) {\n        let facets = [];\n        let projections = [];\n        let counter = 0;\n        const primaryFacets = [];\n        const secondaryFacets = [];\n        const primaryFields = fields[0];\n        const secondaryFields = fields[1];\n        const primaryLen = primaryFields.length;\n        const secondaryLen = secondaryFields.length;\n        const axisFrom = this.axisFrom();\n\n        for (let i = 0; i < primaryLen; i++) {\n            let projArr = [primaryFields[i]];\n            const primaryField = primaryFields[i];\n\n            if (primaryField.type() === MEASURE) {\n                const secondaryField = secondaryFields[counter];\n                if (secondaryField && secondaryField.type() === MEASURE) {\n                    counter++;\n                    projArr = [primaryField, secondaryField];\n                }\n                projections.push(projArr);\n            } else {\n                facets.push(primaryField);\n                primaryFacets.push(primaryField);\n            }\n        }\n        if (secondaryLen > counter) {\n            for (let i = counter; i < secondaryLen; i++) {\n                const secondaryField = secondaryFields[i];\n                const projArr = [secondaryField];\n                if (secondaryField.type() === MEASURE) {\n                    projections.push(projArr);\n                } else {\n                    facets.push(secondaryField);\n                    secondaryFacets.push(secondaryField);\n                }\n            }\n        }\n        if ((primaryFacets.length || secondaryFacets.length) && !projections.length) {\n            type = type === COL ? COLUMN : type;\n            if ((axisFrom[type] === LEFT || axisFrom[type] === TOP) && primaryFacets.length) {\n                const axisFromIndex = primaryFacets.length - 1;\n                const facet = primaryFacets[axisFromIndex];\n                projections = [[facet]];\n                const existIndex = getIndex(secondaryFacets, facet);\n                if (existIndex > -1) {\n                    projections = [[facet, facet]];\n                    secondaryFacets.splice(existIndex, 1);\n                }\n                primaryFacets.splice(axisFromIndex, 1);\n            } else {\n                const axisFromIndex = 0;\n                const facet = secondaryFacets[axisFromIndex];\n                projections = [[facet]];\n                const existIndex = getIndex(primaryFacets, facet);\n                if (existIndex > -1) {\n                    projections = [[facet, facet]];\n                    primaryFacets.splice(existIndex, 1);\n                }\n                secondaryFacets.splice(axisFromIndex, 1);\n            }\n        }\n\n        facets = [...primaryFacets, ...secondaryFacets];\n        facets = facets.filter((el, index, self) => index === self.findIndex(t => (t.toString() === el.toString())));\n        return {\n            facets,\n            projections\n        };\n    }\n\n    /**\n     *\n     *\n     * @param {*} datamodel\n     * @param {*} config\n     *\n     * @memberof CartesianEncoder\n     */\n    fieldSanitizer (datamodel, config) {\n        return super.fieldSanitizer(datamodel, config);\n    }\n\n    /**\n     *\n     *\n     * @param {*} datamodel\n     *\n     * @memberof CartesianEncoder\n     */\n    getRetinalFieldsDomain (dataModels, encoding) {\n        const groupedModel = dataModels.groupedModel;\n        const domains = {};\n        for (const key in encoding) {\n            if ({}.hasOwnProperty.call(encoding, key)) {\n                const encodingObj = encoding[key];\n                const field = encodingObj.field;\n                if (!encodingObj.domain && field) {\n                    const domain = retriveDomainFromData(groupedModel, field);\n                    domains[field] = domain;\n                }\n            }\n        }\n        return domains;\n    }\n\n    /**\n     *\n     *\n     * @param {*} layerArray\n     * @memberof CartesianEncoder\n     */\n    serializeLayerConfig (layerArray) {\n        const serializedLayers = [];\n        // let currentLayerIndex = 0;\n        layerArray.length && layerArray.forEach((layer, i) => {\n            const def = layerFactory.sanitizeLayerConfig(layer);\n            def.order = i;\n            serializedLayers.push(def);\n        });\n        return serializedLayers;\n    }\n\n    /**\n     *\n     *\n     * @param {*} fields\n     * @param {*} userLayerConfig\n     *\n     * @memberof CartesianEncoder\n     */\n    getLayerConfig (fields, userLayerConfig) {\n        const layerConfig = [];\n        const {\n            columnFields,\n            rowFields\n        } = fields;\n\n        // let currentLayerIndex = 0;\n        columnFields.forEach((colField) => {\n            const colFieldName = colField.toString();\n            rowFields.forEach((rowField) => {\n                let configs = [];\n                const rowFieldName = rowField.toString();\n                const encoding = {\n                    x: {\n                        field: colFieldName\n                    },\n                    y: {\n                        field: rowFieldName\n                    }\n                };\n                const rowFieldType = rowField.subtype();\n                const colFieldType = colField.subtype();\n                const mark = getDefaultMark(colFieldType, rowFieldType);\n\n                const defConfigs = [{\n                    mark,\n                    def: {\n                        mark,\n                        encoding\n                    }\n                }];\n\n                const layerConfigs = getLayerConfFromFields(colField.getMembers(),\n                    rowField.getMembers(), userLayerConfig || []);\n                if (layerConfigs.length) {\n                    configs = layerConfigs.map((layerConf) => {\n                        const mergedLayerConf = mergeRecursive(mergeRecursive({}, defConfigs[0].def), layerConf);\n                        const serializedLayerConfig = layerFactory.getSerializedConf(mergedLayerConf.mark,\n                            mergedLayerConf);\n                        return {\n                            mark: mergedLayerConf.mark,\n                            order: mergedLayerConf.order,\n                            def: serializedLayerConfig\n                        };\n                    });\n                } else {\n                    configs = defConfigs;\n                }\n\n                layerConfig.push(...configs);\n            });\n        });\n        return layerConfig;\n    }\n}\n","import { layerFactory } from '@chartshq/visual-layer';\nimport { mergeRecursive, STATE_NAMESPACES } from 'muze-utils';\nimport VisualEncoder from './visual-encoder';\nimport { RADIUS, ANGLE, SIZE, MEASURE, ARC, POLAR, COLOR } from '../enums/constants';\n/**\n *\n *\n * @export\n * @class PolarEncoder\n * @extends {VisualEncoder}\n */\nexport default class PolarEncoder extends VisualEncoder {\n\n    /**\n     *\n     *\n     * @param {*} axesCreators\n     * @param {*} fieldInfo\n     *\n     * @memberof PolarEncoder\n     */\n    createAxis (axesCreators, fieldInfo) {\n        const {\n            axes\n        } = axesCreators;\n        const geomCellAxes = axes;\n        const {\n            indices\n        } = fieldInfo;\n        const {\n            rowIndex,\n            columnIndex\n        } = indices;\n        // Dummy axes for polar, to create blank cells\n        const pieAxes = geomCellAxes.pie || [];\n\n        pieAxes[rowIndex] = pieAxes[rowIndex] || [];\n        pieAxes[rowIndex][columnIndex] = [];\n\n        geomCellAxes.pie = pieAxes;\n        geomCellAxes.x = null;\n        geomCellAxes.y = null;\n\n        return geomCellAxes;\n    }\n\n    /**\n     *\n     *\n     * @param {*} fields\n     *\n     * @memberof CartesianEncoder\n     */\n    getFacetsAndProjections (fields) {\n        let counter = 0;\n        const facets = [];\n        const projections = [];\n        const primaryFields = fields[0];\n        const secondaryFields = fields[1];\n        const primaryLen = primaryFields.length;\n        const secondaryLen = secondaryFields.length;\n\n        for (let i = 0; i < primaryLen; i++) {\n            const primaryField = primaryFields[i];\n            if (primaryField.type() === MEASURE) {\n                const secondaryField = secondaryFields[counter++];\n                const projArr = secondaryField ? [primaryField, secondaryField] : [primaryField];\n                projections.push(projArr);\n            } else {\n                facets.push(primaryField);\n            }\n        }\n        if (secondaryLen > counter) {\n            for (let i = counter; i < secondaryLen; i++) {\n                const secondaryField = secondaryFields[i];\n                const projArr = [secondaryField];\n                if (secondaryField.type() === MEASURE) {\n                    projections.push(projArr);\n                } else {\n                    facets.push(secondaryField);\n                }\n            }\n        }\n        return {\n            facets,\n            projections\n        };\n    }\n\n    unionUnitDomains (context) {\n        const store = context.store();\n        const domains = store.get(`${STATE_NAMESPACES.UNIT_GLOBAL_NAMESPACE}.domain`);\n        const domainProps = {\n            radius: [Infinity, -Infinity]\n        };\n        Object.values(domains).forEach((domainVal) => {\n            for (const key in domainVal) {\n                domainProps[key] = [Math.min(domainVal[key][0], domainProps[key][0]),\n                    Math.min(domainVal[key][1], domainProps[key][1])];\n            }\n        });\n        store.commit(`${STATE_NAMESPACES.GROUP_GLOBAL_NAMESPACE}.domain.radius`, domainProps.radius);\n    }\n\n    /**\n     *\n     *\n     *\n     * @memberof PolarEncoder\n     */\n    setCommonDomain () {\n        // No domain to be set\n        return this;\n    }\n\n    /**\n     *\n     *\n     *\n     * @memberof PolarEncoder\n     */\n    static type () {\n        return POLAR;\n    }\n\n    layers (...layers) {\n        if (layers.length) {\n            this._layers = layers[0];\n            return this;\n        }\n        return this._layers;\n    }\n\n    /**\n     *\n     *\n     * @param {*} datamodel\n     * @param {*} config\n     * @memberof PolarEncoder\n     */\n    fieldSanitizer (datamodel, config) {\n        let sanitizedRows = [[], []];\n        let sanitizedColumns = [[], []];\n        const fields = super.fieldSanitizer(datamodel, config);\n        const {\n            layers\n        } = config;\n        const {\n            rows,\n            columns\n        } = fields;\n        const layer = layers[0];\n        const encoding = layer.encoding;\n        const radius = encoding && encoding.radius ? encoding.radius.field : null;\n        const angle = encoding && encoding.angle ? encoding.angle.field : null;\n        const sanitizedFields = [sanitizedRows, sanitizedColumns];\n\n        [rows, columns].forEach((fieldType, typeIndex) => {\n            fieldType.forEach((fieldSet, i) => fieldSet.forEach((field) => {\n                if (field.toString() !== radius && field.toString() !== angle && field.type() !== MEASURE) {\n                    sanitizedFields[typeIndex][i].push(field);\n                }\n            }));\n        });\n        sanitizedColumns = [...new Set(sanitizedColumns)];\n        sanitizedRows = [...new Set(sanitizedRows)];\n        this.fieldInfo({ rows: sanitizedRows, columns: sanitizedColumns });\n        return this.fieldInfo();\n    }\n\n    getRetinalFieldsDomain (dataModels, encoding, facetFields, groupBy) {\n        let sizeField;\n        let colorField;\n        const fields = [];\n        const layers = this.layers();\n        const dataModel = dataModels.groupedModel;\n        const fieldsConfig = dataModel.getFieldsConfig();\n        const domains = {};\n        if (layers && layers[0]) {\n            const layer = layers[0];\n            const layerEncoding = layer.def.encoding || {};\n\n            [RADIUS, ANGLE, SIZE, COLOR].forEach((encType) => {\n                const field = layerEncoding[encType] ? layerEncoding[encType].field : '';\n                const measureField = fieldsConfig[field] && fieldsConfig[field].def.type === MEASURE;\n                if (encType === SIZE && measureField) {\n                    sizeField = field;\n                }\n                if (encType === COLOR) {\n                    colorField = field;\n                }\n                fieldsConfig[field] && !measureField && fields.push(field);\n            });\n        }\n\n        if (sizeField) {\n            domains[sizeField] = dataModel.groupBy(facetFields, {\n                [sizeField]: 'sum'\n            }).getFieldspace().fieldsObj()[sizeField].domain();\n        }\n\n        if (colorField) {\n            const dm = dataModel.groupBy([...facetFields, ...fields], groupBy.measures);\n            domains[colorField] = dm.getFieldspace().fieldsObj()[colorField].domain();\n        }\n        return domains;\n    }\n    /**\n     *\n     *\n     * @param {*} fields\n     * @param {*} userLayerConfig\n     *\n     * @memberof PolarEncoder\n     */\n    getLayerConfig (fields, userLayerConfig) {\n        let layerConfig = [];\n        const {\n                columnFields,\n                rowFields\n            } = fields;\n        const allFields = [...columnFields, ...rowFields];\n\n        allFields.forEach(() => {\n            const encoding = {};\n            let config = {\n                mark: ARC,\n                def: {\n                    encoding\n                }\n            };\n            if (userLayerConfig && userLayerConfig.length > 0) {\n                config = mergeRecursive(config, userLayerConfig[0]);\n            }\n            layerConfig.push(config);\n        });\n        if (layerConfig.length === 0) {\n            layerConfig = userLayerConfig;\n        }\n\n        this.layers(layerConfig);\n        return layerConfig;\n    }\n\n    /**\n     *\n     *\n     * @param {*} layerArray\n     *\n     * @memberof PolarEncoder\n     */\n    serializeLayerConfig (layerArray) {\n        const serializedLayers = [];\n\n        layerArray.length && layerArray.forEach((layer) => {\n            const def = layerFactory.getSerializedConf(layer.mark, layer);\n            serializedLayers.push({\n                mark: layer.mark,\n                def\n            });\n        });\n        return serializedLayers;\n    }\n}\n","import { createRetinalAxis } from './encoder-helper';\nimport { COLOR, SHAPE, SIZE } from '../enums/constants';\nimport VisualEncoder from './visual-encoder';\n\n/**\n *\n *\n * @export\n * @class RetinalEncoder\n * @extends {VisualEncoder}\n */\nexport default class RetinalEncoder extends VisualEncoder {\n\n    /**\n     *\n     *\n     * @param {*} axesCreators\n     *\n     * @memberof RetinalEncoder\n     */\n    createAxis (axesCreators) {\n        const { fieldsConfig, config } = axesCreators;\n        const newAxes = {};\n\n        [COLOR, SHAPE, SIZE].forEach((axisType) => {\n            newAxes[`${axisType}`] = createRetinalAxis({ axisType, fieldsConfig }, config[axisType]);\n        });\n        return newAxes;\n    }\n\n    /**\n     *\n     *\n     * @static\n     *\n     * @memberof RetinalEncoder\n     */\n    static type () {\n        return 'retinal';\n    }\n\n    /**\n     *\n     *\n     * @param {*} fields\n     * @param {*} userLayerConfig\n     *\n     * @memberof RetinalEncoder\n     */\n    getLayerConfig (encodingConfigs, userLayerConfig) {\n        const layerConfig = [];\n        userLayerConfig.forEach((e) => {\n            const config = e;\n            [COLOR, SHAPE, SIZE].forEach((axis) => {\n                if (encodingConfigs[axis] && encodingConfigs[axis].field) {\n                    const def = config.def;\n                    if (config.def instanceof Array) {\n                        def.forEach((conf) => {\n                            conf.encoding = conf.encoding || {};\n                            !conf.encoding[axis] && (conf.encoding[axis] = {});\n                            conf.encoding[axis].field = encodingConfigs[axis].field;\n                        });\n                    } else {\n                        def.encoding = def.encoding || {};\n                        !def.encoding[axis] && (def.encoding[axis] = {});\n                        def.encoding[axis].field = encodingConfigs[axis].field;\n                    }\n                }\n            });\n            layerConfig.push(config);\n        });\n        return layerConfig;\n    }\n\n    /**\n     *\n     *\n     * @param {*} context\n     *\n     * @memberof RetinalEncoder\n     */\n    setCommonDomain (context) {\n        const { domains, axes, encoding } = context;\n\n        Object.entries(encoding).forEach((enc) => {\n            if (enc[1] && enc[1].field) {\n                const encType = enc[0];\n                const field = enc[1].field;\n\n                if (field) {\n                    axes[encType].forEach((axis) => {\n                        const domain = domains[field];\n                        !enc[1].domain && axis.updateDomain(domain);\n                    });\n                }\n            }\n        });\n        return axes;\n    }\n}\n","import { Store, FieldType } from 'muze-utils';\nimport { DATA_UPDATE_COUNTER } from '../enums/defaults';\nimport { Variable } from '../variable';\nimport { PolarEncoder, CartesianEncoder } from '../encoder';\nimport {\n    DIMENSION,\n    MEASURE,\n    ORDINAL,\n    LINEAR,\n    ROW,\n    COLUMN,\n    COL,\n    LEFT,\n    RIGHT,\n    TOP,\n    BOTTOM,\n    COLOR,\n    SIZE,\n    TEMPORAL,\n    SHAPE,\n    INTERACTION,\n    GRID_LINES,\n    GRID_BANDS,\n    HEADER,\n    FACET,\n    X,\n    Y,\n    POLAR\n} from '../enums/constants';\n\n/**\n * Creates an instance of a store which contains the arguments to make the class reactive\n *\n * @return {Object} instance of store\n * @memberof VisualGroup\n */\nexport const initStore = () => new Store({\n    [DATA_UPDATE_COUNTER]: DATA_UPDATE_COUNTER\n});\n\n/**\n *\n *\n * @param {*} arr\n */\nexport const isDistributionEqual = arr => [...arr[0], ...arr[1]].reduce((isEqual, row) => {\n    const rowType = row.type();\n\n    if (rowType === MEASURE || rowType === TEMPORAL) {\n        isEqual = true;\n    }\n    return isEqual;\n}, false);\n\n/**\n *\n *\n */\nexport const initializeCacheMaps = () => ({\n    cellMap: new Map(),\n    xAxesMap: new Map(),\n    yAxesMap: new Map(),\n    entryCellMap: new Map(),\n    exitCellMap: new Map()\n});\n\n/**\n *\n *\n * @param {*} axisName\n * @param {*} id\n */\nexport const getAxisKey = (axisName, ...params) => `${axisName}-axis-${params.join('-')}`;\n\n/**\n *\n *\n * @param {*} rowId\n * @param {*} columnId\n */\nexport const getCellKey = (rowId, columnId) => `cell-${rowId}-${columnId}`;\n\n/**\n *\n *\n * @param {*} config\n *\n */\nexport const extractUnitConfig = (config) => {\n    const unitConfig = {};\n    const attrNames = [INTERACTION, GRID_LINES, GRID_BANDS];\n\n    attrNames.forEach((attr) => {\n        if (config[attr] !== undefined) {\n            unitConfig[attr] = config[attr];\n        }\n    });\n    return unitConfig;\n};\n\n/**\n *\n *\n * @param {*} headers\n * @param {*} index\n * @param {*} rowLength\n *\n * @memberof MatrixResolver\n */\nexport const getHeaderText = (headers, index, rowLength) => {\n    let header = '';\n\n    if (index === rowLength - 1 && headers.length > rowLength) {\n        for (let i = index; i < headers.length - 1; i++) {\n            header += `${headers[i].toString()} / `;\n        }\n        header += headers[headers.length - 1].toString();\n        return header;\n    } else if (headers[index]) {\n        return headers[index].toString();\n    }\n    return '';\n};\n\n/**\n *\n *\n * @param {*} fields\n * @param {*} fieldHeaders\n * @param {*} TextCell\n * @param {*} labelManager\n *\n */\nexport const headerCreator = (fields, fieldHeaders, TextCell, { classPrefix, labelManager }) => {\n    const headers = fields.length > 0 ? fields[0].map((cell, i) => new TextCell({\n        type: HEADER,\n        className: `${classPrefix}-grid-headers`\n    }, {\n        labelManager\n    }).source(getHeaderText(fieldHeaders, i, fields[0].length))\n                    .config({ show: cell.config().show })) : [];\n    return headers;\n};\n\n/**\n *\n *\n * @param {*} variable\n * @param {*} allFields\n *\n */\nexport const findInGroup = (variable, allFields) => {\n    let channel = null;\n\n    [COLOR, SIZE, SHAPE].forEach((e) => {\n        if (this.store.get(e) && variable === this.store.get(e)[0]) {\n            channel = e;\n        }\n    });\n\n    if (channel) {\n        return { channel };\n    }\n    [ROW, COL].forEach((facetType) => {\n        allFields[`${facetType}Facets`].forEach((e) => {\n            if (e.toString() === variable) {\n                channel = { channel: FACET, type: facetType === COL ? COLUMN : ROW };\n            }\n        });\n    });\n\n    if (channel) {\n        return channel;\n    }\n\n    [ROW, COL].forEach((projType) => {\n        allFields[`${projType}Projections`].forEach((e) => {\n            e.forEach((m) => {\n                if (m.toString() === variable) {\n                    channel = projType === COL ? X : Y;\n                }\n            });\n        });\n    });\n\n    if (channel) {\n        return { channel };\n    }\n    return null;\n};\n\n/**\n *\n *\n * @param {*} datamodel\n * @param {*} field\n */\nexport const getAxisType = (fieldsConfig, field) => {\n    let fieldType = ORDINAL;\n\n    if (field && fieldsConfig[field].def.type !== DIMENSION) {\n        fieldType = LINEAR;\n    }\n    return fieldType;\n};\n\n/**\n *\n *\n * @param {*} datamodel\n * @param {*} fieldName\n *\n */\nexport const retriveDomainFromData = (datamodel, fieldName) => {\n    const field = datamodel.getFieldspace().fields.find(d => d.name() === fieldName.toString());\n    return field.domain();\n};\n\n/**\n *\n *\n * @memberof MatrixResolver\n */\nexport const mutateAxesFromMap = (cacheMaps, axes) => {\n    let xAxes = null;\n    let yAxes = null;\n    const {\n        xAxesMap,\n        yAxesMap\n    } = cacheMaps;\n    const {\n        x: xAxisSet,\n        y: yAxisSet\n    } = axes;\n\n    xAxisSet && xAxisSet.forEach((axisId) => {\n        const xAxis = xAxesMap.get(axisId);\n        xAxes = xAxes || [];\n        xAxes.push(xAxis);\n    });\n\n    yAxisSet && yAxisSet.forEach((axisId) => {\n        const yAxis = yAxesMap.get(axisId);\n        yAxes = yAxes || [];\n        yAxes.push(yAxis);\n    });\n\n    return {\n        xAxes, yAxes\n    };\n};\n\n/**\n *\n *\n * @param {*} layers\n *\n */\nexport const getEncoder = (layers) => {\n    let encoder = new CartesianEncoder();\n\n    if (layers.length) {\n        // Figuring out the kind of layers the group will have\n        encoder = layers.every(e => e.mark === 'arc') ? new PolarEncoder() : encoder;\n    }\n    return encoder;\n};\n\n/**\n *\n *\n * @param {*} type\n * @param {*} fields\n * @param {*} userAxisFromConfig\n *\n */\nexport const getHeaderAxisFrom = (type, fields, userAxisFromConfig) => {\n    let axisFrom = userAxisFromConfig[type];\n    let headerFrom = '';\n    const options = type === ROW ? [LEFT, RIGHT] : [BOTTOM, TOP];\n    const [firstField, secondField] = fields;\n    const firstFieldType = i => (firstField.length ? firstField[i].type() : null);\n    const secondFieldType = i => (secondField.length ? secondField[i].type() : null);\n\n    if (firstFieldType(firstField.length - 1) === DIMENSION && secondFieldType(0) === DIMENSION) {\n        headerFrom = axisFrom ? options[1 - options.indexOf(axisFrom)] : options[1];\n\n        if (type === COLUMN && (firstField[firstField.length - 1].toString() === secondField[0].toString())) {\n            axisFrom = TOP;\n        } else {\n            axisFrom = axisFrom || options[0];\n        }\n    } else if (secondFieldType(secondField.length - 1) === DIMENSION) {\n        headerFrom = type === ROW ? RIGHT : BOTTOM;\n        axisFrom = type === ROW ? RIGHT : BOTTOM;\n    } else {\n        headerFrom = type === ROW ? LEFT : TOP;\n        axisFrom = type === ROW ? LEFT : TOP;\n    }\n    if (firstFieldType(firstField.length - 1) === MEASURE && secondFieldType(0) === MEASURE) {\n        axisFrom = type === ROW ? LEFT : TOP;\n    } else if (secondFieldType(0) === MEASURE) {\n        axisFrom = type === ROW ? RIGHT : BOTTOM;\n    } else if (firstFieldType(firstField.length - 1) === MEASURE) {\n        axisFrom = type === ROW ? LEFT : TOP;\n    }\n    return [headerFrom, axisFrom];\n};\n\n/**\n *\n *\n * @param {*} type\n * @param {*} fields\n * @param {*} layers\n *\n * @memberof MatrixResolver\n */\nexport const setFacetsAndProjections = (context, fieldInfo, encoder) => {\n    const {\n        fields,\n        type\n    } = fieldInfo;\n    const { facets, projections } = encoder.simpleEncoder.getFacetsAndProjections(fields, type);\n\n    context.facets({ [`${type}Facets`]: facets });\n    context.projections({ [`${type}Projections`]: projections });\n\n    return { facets, projections, fields };\n};\n\nconst getRowBorders = (left, right) => {\n    const borders = {};\n    borders.top = false;\n    borders.bottom = false;\n    if (left.length > 1 || right.length > 1) {\n        borders.top = true;\n        borders.bottom = true;\n    }\n    return borders;\n};\n\nconst getColumnsBorders = (top, bottom) => {\n    const borders = {};\n    borders.left = false;\n    borders.right = false;\n    if (top.length || bottom.length) {\n        if ((top[0] && top[0].length > 1) || (bottom[0] && bottom[0].length > 1)) {\n            borders.left = true;\n            borders.right = true;\n        }\n    }\n    return borders;\n};\n\nconst getValueBorders = (rows, columns) => {\n    const borders = { top: true, left: true, bottom: true, right: true };\n    const borderTypeRow = [LEFT, RIGHT];\n    const borderTypeCol = [TOP, BOTTOM];\n    rows.forEach((e, i) => {\n        if (e[0] && e[0].length) {\n            borders[borderTypeRow[i]] = true;\n        } else {\n            borders[borderTypeRow[i]] = false;\n        }\n    });\n    columns.forEach((e, i) => {\n        if (e.length) {\n            borders[borderTypeCol[i]] = true;\n        } else {\n            borders[borderTypeCol[i]] = false;\n        }\n    });\n\n    return borders;\n};\n\nexport const getBorders = (matrices, encoder) => {\n    let showRowBorders = { top: false, bottom: false };\n    let showColBorders = { left: false, right: false };\n    let showValueBorders = { top: false, bottom: false, left: false, right: false };\n    const {\n        rows,\n        columns,\n        values: valueMatrix\n    } = matrices;\n    const [leftRows, rightRows] = rows;\n    const [topColumns, bottomColumns] = columns;\n    const {\n        rowDimensions,\n        columnDimensions,\n        rowTemporalFields,\n        columnTemporalFields,\n        columnMeasures,\n        rowMeasures\n    } = encoder.fieldInfo();\n    const allDimensionLength = rowDimensions.length + columnDimensions.length;\n    const allMeasuresLength = rowMeasures.length + columnMeasures.length;\n    const allTemporalFieldsLength = rowTemporalFields.length + columnTemporalFields.length;\n\n    if (encoder.constructor.type() === POLAR) {\n        if (!allDimensionLength) {\n            return { showRowBorders, showColBorders, showValueBorders };\n        }\n    } else if (!allMeasuresLength && !allTemporalFieldsLength && allDimensionLength <= 2) {\n        return { showRowBorders, showColBorders, showValueBorders };\n    }\n\n    showRowBorders = getRowBorders(leftRows, rightRows);\n    showColBorders = getColumnsBorders(topColumns, bottomColumns);\n    showValueBorders = getValueBorders([leftRows, rightRows], [topColumns, bottomColumns]);\n\n    if (valueMatrix.length > 1) {\n        showValueBorders.top = true;\n        showValueBorders.bottom = true;\n    }\n    if (valueMatrix.length && valueMatrix[0].length > 1) {\n        showValueBorders.left = true;\n        showValueBorders.right = true;\n    }\n    return { showRowBorders, showColBorders, showValueBorders };\n};\n\nexport const getFieldsFromSuppliedLayers = (suppliedLayerConfig, fieldsConfig) => {\n    let fields = [];\n    const encodingArr = suppliedLayerConfig.map(conf => (conf.encoding || {}));\n    fields = [...fields, [].concat(...encodingArr.map(enc => Object.values(enc).map(d => d.field)))];\n    fields = fields.filter(field => fieldsConfig[field] && fieldsConfig[field].def.type === FieldType.DIMENSION);\n    return fields;\n};\n\nexport const extractFields = (facetsAndProjections, layerFields) => {\n    const fields = Object.values(facetsAndProjections).map((arr) => {\n        const flattenArray = [].concat(...arr);\n        return [].concat(...flattenArray.map((field) => {\n            if (field instanceof Variable) {\n                return field.getMembers();\n            }\n            return field;\n        }));\n    });\n    return [].concat(...fields, ...layerFields);\n};\n","import { BEHAVIOURS, ACTIONS } from '@chartshq/muze-firebolt';\n\nexport const actionBehaviourMap = {\n    [ACTIONS.DRAG]: {\n        behaviours: [BEHAVIOURS.BRUSH],\n        touch: false\n    },\n    [ACTIONS.HOVER]: {\n        behaviours: [BEHAVIOURS.HIGHLIGHT]\n    },\n    [ACTIONS.LONGTOUCH]: {\n        behaviours: [BEHAVIOURS.SELECT],\n        touch: true\n    },\n    [ACTIONS.TOUCHDRAG]: {\n        behaviours: [BEHAVIOURS.BRUSH],\n        touch: true\n    },\n    [ACTIONS.CLICK]: {\n        behaviours: [BEHAVIOURS.SELECT],\n        touch: false\n    }\n};\n","import {\n    FieldType,\n    getDependencyOrder,\n    getObjProp,\n    defaultValue,\n    objectIterator,\n    unionDomain,\n    makeElement,\n    DimensionSubtype,\n    toArray,\n    MeasureSubtype,\n    getNearestValue\n} from 'muze-utils';\nimport { layerFactory } from '@chartshq/visual-layer';\n\nexport const getDimensionMeasureMap = (layers, fieldsConfig) => {\n    const retinalEncodingsAndMeasures = {};\n\n    layers.forEach((layer) => {\n        const {\n            colorField,\n            sizeField,\n            shapeField,\n            xField,\n            yField\n        } = layer.encodingFieldsInf();\n        const measures = [xField, yField].filter(field => fieldsConfig[field] && fieldsConfig[field].def.type ===\n            FieldType.MEASURE);\n        [colorField, sizeField, shapeField].forEach((field) => {\n            if (fieldsConfig[field] && fieldsConfig[field].def.type === FieldType.DIMENSION) {\n                !retinalEncodingsAndMeasures[field] && (retinalEncodingsAndMeasures[field] = []);\n                retinalEncodingsAndMeasures[field].push(...measures);\n            }\n        });\n    });\n\n    for (const key in retinalEncodingsAndMeasures) {\n        if ({}.hasOwnProperty.call(retinalEncodingsAndMeasures, key)) {\n            retinalEncodingsAndMeasures[key] = [...new Set(retinalEncodingsAndMeasures[key])];\n        }\n    }\n    return retinalEncodingsAndMeasures;\n};\n\nexport const transformDataModels = (transform, dataModel) => {\n    const dataModels = {};\n    for (const key in transform) {\n        if ({}.hasOwnProperty.call(transform, key)) {\n            const transformVal = transform[key];\n            dataModels[key] = transformVal(dataModel);\n        }\n    }\n\n    return dataModels;\n};\n\nexport const getLayerFromDef = (context, definition, existingLayer, namespaces) => {\n    let instances = existingLayer;\n    const dependencies = context._layerDeps;\n    const metaInf = context.metaInf();\n    if (!existingLayer) {\n        instances = layerFactory.getLayerInstance(definition);\n        toArray(instances).forEach((inst, i) => {\n            inst.metaInf({\n                unitRowIndex: metaInf.rowIndex,\n                unitColIndex: metaInf.colIndex,\n                namespace: namespaces[i]\n            });\n            inst.store(context.store());\n        });\n    }\n    const layers = {};\n    const instanceArr = toArray(instances);\n    definition = toArray(definition);\n    definition.reduce((acc, def, idx) => {\n        const instance = instanceArr[idx];\n        instance.config(def);\n        instance.valueParser(context.valueParser());\n        instance.dependencies(dependencies);\n        instance.dataProps({\n            timeDiffs: context._timeDiffs\n        });\n        if (def.name) {\n            instance.alias(def.name);\n        }\n        layers[instance.alias()] = instance;\n        return acc;\n    }, {});\n    return layers;\n};\n\nexport const resolveEncodingTransform = (layerInst, store) => {\n    const encodingTransform = layerInst.config().encodingTransform || {};\n    const resolvable = encodingTransform.resolvable;\n    let depArr = [];\n    if (resolvable) {\n        const resolved = resolvable(store);\n        depArr = resolved.depArr;\n        layerInst.encodingTransform(resolved.fn);\n    } else if (encodingTransform instanceof Function) {\n        layerInst.encodingTransform(encodingTransform);\n    }\n    return depArr;\n};\n\nexport const createLayers = (context, layerDefinitions) => {\n    const layersMap = context._layersMap;\n    const markSet = {};\n    const store = {\n        layers: {},\n        components: {\n            unit: context\n        }\n    };\n    let layerIndex = 0;\n    let layers = layerDefinitions.sort((a, b) => a.order - b.order).reduce((layersArr, layerDef, i) => {\n        const mark = layerDef.mark;\n        const definition = layerDef.def;\n        const markId = `${mark}-${i}`;\n        const defArr = toArray(definition);\n        defArr.forEach((def) => {\n            def.order = layerDef.order + layerIndex;\n        });\n        layerIndex += defArr.length;\n        const instances = getLayerFromDef(context, definition, layersMap[markId], i);\n        store.layers = Object.assign(store.layers, instances);\n        const instanceValues = Object.values(instances);\n        layersArr = layersArr.concat(...instanceValues);\n        layersMap[markId] = instanceValues;\n        markSet[markId] = markId;\n        return layersArr;\n    }, []);\n    store.unit = context;\n    const layerdeps = {};\n    layers.forEach((layer) => {\n        const depArr = resolveEncodingTransform(layer, store);\n        layerdeps[layer.alias()] = depArr;\n    });\n\n    const order = getDependencyOrder(layerdeps);\n    layers = order.map(name => store.layers[name]);\n    for (const key in layersMap) {\n        if (!(key in markSet)) {\n            layersMap[key].forEach(layer => layer.remove());\n            delete layersMap[key];\n        }\n    }\n    return layers;\n};\n\nexport const sanitizeLayerDef = (layerDefs) => {\n    const sanitizedDefs = [];\n    layerDefs.forEach((layerDef, i) => {\n        const def = layerDef.def;\n        const mark = layerDef.mark;\n        if (!def) {\n            const sConf = layerFactory.getSerializedConf(layerDef.mark, layerDef);\n            if (!sConf.name) {\n                sConf.name = `${mark}-${i}`;\n            }\n            sanitizedDefs.push({\n                mark: layerDef.mark,\n                def: sConf\n            });\n        } else {\n            if (!def.name) {\n                def.name = `${mark}-${i}`;\n            }\n            sanitizedDefs.push(layerDef);\n        }\n    });\n    return sanitizedDefs;\n};\n\nexport const attachDataToLayers = (layers, dm, transformedDataModels) => {\n    layers.forEach((layer) => {\n        const dataSource = layer.config().source;\n        const dataModel = dataSource instanceof Function ? dataSource(dm) :\n            (transformedDataModels[dataSource] || dm);\n        if (layer.data() !== dataModel) {\n            layer.data(dataModel);\n        }\n    });\n};\n\nexport const attachAxisToLayers = (axes, layers, layerAxisIndex) => {\n    layers.forEach((layer) => {\n        const layerId = layer.id();\n        const axesObj = {};\n\n        objectIterator(axes, (key) => {\n            const axisInf = layerAxisIndex[layerId];\n            if (axisInf) {\n                axes[key] && (axesObj[key] = axes[key][axisInf[key] || 0]);\n            }\n        });\n        Object.keys(axesObj).length && layer.axes(axesObj);\n    });\n};\n\nexport const getLayerAxisIndex = (layers, fields) => {\n    const layerAxisIndex = {};\n    layers.forEach((layer) => {\n        const { axis, encoding } = layer.config();\n        const id = layer.id();\n        ['x', 'y'].forEach((type) => {\n            let index;\n            const field = defaultValue(getObjProp(axis, type), encoding[type] && encoding[type].field);\n            if (fields[type]) {\n                index = fields[type].findIndex(fieldInst => fieldInst.getMembers().indexOf(field) !== -1);\n            } else {\n                index = 0;\n            }\n            !layerAxisIndex[id] && (layerAxisIndex[id] = {});\n            layerAxisIndex[id][type] = index;\n        });\n    });\n    return layerAxisIndex;\n};\n\nexport const unionDomainFromLayers = (layers, axisFields, layerAxisIndex, fieldsConfig) => {\n    let domains = {};\n    layers = layers.filter(layer => layer.getDataDomain() !== null);\n    layers.forEach((layer) => {\n        let domainValues = {};\n        const config = layer.config();\n        const encoding = config.encoding;\n        const layerDomain = layer.getDataDomain();\n        const layerId = layer.id();\n\n        if (layerDomain !== null && config.calculateDomain !== false) {\n            domainValues = Object.entries(layerDomain);\n            domains = domainValues.reduce((fieldDomain, domain) => {\n                const encodingType = domain[0];\n                const field = encoding[encodingType].field;\n                const axisIndex = layerAxisIndex[layerId][encodingType];\n                if (encodingType in axisFields) {\n                    const fieldStr = `${axisFields[encodingType][axisIndex]}`;\n                    fieldDomain[fieldStr] = fieldDomain[fieldStr] || [];\n                    fieldDomain[fieldStr] = unionDomain(([fieldDomain[fieldStr], domain[1]]),\n                        fieldsConfig[field].def.subtype ? fieldsConfig[field].def.subtype :\n                                fieldsConfig[field].def.type);\n                } else {\n                    fieldDomain[encodingType] = domain[1];\n                }\n                return fieldDomain;\n            }, domains);\n        }\n    });\n    return domains;\n};\n\nexport const renderLayers = (context, container, layers, measurement) => {\n    context._lifeCycleManager.notify({ client: layers, action: 'beforedraw', formalName: 'layer' });\n    const config = context.config();\n    const classPrefix = config.classPrefix;\n    const orderedLayers = context.layers().sort((a, b) => a.config().order - b.config().order);\n    const layerParentGroup = makeElement(container, 'g', [1], `${classPrefix}-layer-group`);\n    const layerDepOrder = getDependencyOrder(context._layerDepOrder);\n    const groups = {};\n    makeElement(layerParentGroup, 'g', orderedLayers, null, {\n        update: (group, layer) => {\n            groups[layer.alias()] = {\n                group,\n                layer\n            };\n        }\n    });\n    const layerSeq = layerDepOrder.map(name => groups[name]);\n    layerSeq.forEach((o) => {\n        const layer = o.layer;\n        const group = o.group;\n        layer.measurement(measurement);\n        layer.dataProps({\n            timeDiffs: context._timeDiffs\n        });\n        layer.config().render !== false && layer.mount(group.node());\n    });\n    return this;\n};\n\nexport const getNearestDimensionalValue = (context, position) => {\n    const fields = context.fields();\n    if (!fields.x.length || !fields.y.length) {\n        return null;\n    }\n    const data = context.data();\n    const axes = context.axes();\n    const fieldsConfig = data.getFieldsConfig();\n    const xField = getObjProp(fields, 'x', 0).getMembers()[0];\n    const yField = getObjProp(fields, 'y', 0).getMembers()[0];\n    const xFieldType = fieldsConfig[xField].def.subtype;\n    const yFieldType = fieldsConfig[yField].def.subtype;\n\n    const entryVal = [['x', xFieldType, xField], ['y', yFieldType, yField]].find(entry =>\n        entry[1] === DimensionSubtype.CATEGORICAL || entry[1] === DimensionSubtype.TEMPORAL);\n\n    if (!entryVal || (xFieldType !== MeasureSubtype.CONTINUOUS && yFieldType !== MeasureSubtype.CONTINUOUS)) {\n        return null;\n    }\n    const field = entryVal[2];\n    const index = fieldsConfig[field].index;\n    let key = axes[entryVal[0]][0].invert(position[entryVal[0]]);\n    if (entryVal[1] === DimensionSubtype.TEMPORAL) {\n        const filterData = [...new Set(data.getData().data.map(d => d[index]))];\n        key = getNearestValue(filterData, key);\n    }\n\n    return key !== undefined ? [[field], [key]] : null;\n};\n\nexport const getLayersBy = (layers, searchBy, value) => layers.filter((layer) => {\n    const name = searchBy === 'type' ? layer.constructor.formalName() : layer.alias();\n    return name === value;\n});\n\nexport const removeLayersBy = (layers, searchBy, value) => {\n    layers.filter((inst) => {\n        const name = searchBy === 'type' ? inst.config().mark : inst.alias();\n        if (name === value) {\n            inst.remove();\n            return false;\n        }\n        return true;\n    });\n};\n\nexport const createSideEffectGroup = (container, className) => makeElement(container, 'g', [1], className).node();\n\nexport const createRenderPromise = (unit) => {\n    const renderedPromise = unit._renderedPromise;\n    renderedPromise.then(() => {\n        unit._renderedPromise = new Promise((resolve) => {\n            unit._renderedResolve = resolve;\n        });\n        createRenderPromise(unit);\n    });\n};\n","export const CLASSPREFIX = 'muze';\nexport const IDFIELD = '__id__';\nexport const GRID_LINE_PARENT_GROUP_CLASS = 'grid-lines';\nexport const GRID_BAND_PARENT_GROUP_CLASS = 'grid-bands';\nexport const GRID_PARENT_GROUP = 'grid-parent-group';\nexport const BAND = 'band';\nexport const TICK = 'tick';\nexport const GRID_BAND = 'gridBands';\nexport const GRID_LINE = 'gridLines';\nexport const CONSOLIDATED = 'consolidated';\nexport const FRAGMENTED = 'fragmented';\nexport const FACET_BY_FIELDS = 'facetByFields';\nexport const RETINAL_FIELDS = 'retinalFields';\nexport const PARENT_ALIAS = 'parentAlias';\nexport const LAYERS = 'layers';\nexport const CACHED_DATA = 'cachedData';\nexport const STORE = 'store';\n","import { getObjProp, defaultValue, makeElement, DimensionSubtype, DataModel } from 'muze-utils';\nimport { ScaleType } from '@chartshq/muze-axis';\nimport { layerFactory, LAYER_TYPES } from '@chartshq/visual-layer';\nimport {\n    GRID_BAND,\n    GRID_LINE,\n    GRID_BAND_PARENT_GROUP_CLASS,\n    GRID_LINE_PARENT_GROUP_CLASS,\n    GRID_PARENT_GROUP\n} from '../enums/constants';\n\nconst { BAR_LAYER, TICK_LAYER } = LAYER_TYPES;\n\nconst LINEAR = ScaleType.LINEAR;\n\nconst getLayerDefinition = (context, axes, type, orientation) => {\n    let encoding;\n    const config = context.config();\n    const { classPrefix, gridLines, gridBands } = config;\n    const gridLineColor = gridLines.color;\n    const zeroLineColor = gridLines.zeroLineColor;\n    const defClassName = type === GRID_BAND ? gridBands.defClassName : gridLines.defClassName;\n    const gridBandColor = gridBands[orientation].color;\n    const axis = axes[orientation][0];\n    const isLinearScale = axis.constructor.type() === LINEAR;\n\n    if (type === GRID_BAND && isLinearScale) {\n        encoding = {\n            [orientation]: `${orientation}value`,\n            [`${orientation}0`]: `${orientation}value0`\n        };\n    } else {\n        encoding = {\n            [orientation]: isLinearScale ? `${orientation}value` : `${orientation}dim`\n        };\n    }\n    encoding.color = {\n        value: (data, i) => {\n            const isNegativeDomain = isLinearScale && axis.domain()[0] < 0;\n            if (type === GRID_BAND) {\n                return gridBandColor[i % 2];\n            }\n            return isNegativeDomain && data[orientation] === 0 ? zeroLineColor : gridLineColor;\n        }\n    };\n\n    return {\n        definition: {\n            defClassName: `${defClassName}-${orientation}`,\n            className: config.className,\n            name: orientation,\n            individualClassName: (data, i) => {\n                let className;\n                const isNegativeDomain = isLinearScale && axis.domain()[0] < 0;\n                if (isNegativeDomain && data.y === 0 && type !== GRID_BAND) {\n                    className = `${classPrefix}-axis-zero-line`;\n                } else {\n                    className = `${classPrefix}-grid-${type}-${orientation}-${i % 2}`;\n                }\n                return className;\n            },\n            [`pad${orientation.toUpperCase()}`]: type === GRID_BAND ? 0 : undefined,\n            encoding\n        },\n        axes: {\n            [orientation]: axis\n        },\n        interactive: false\n    };\n};\n\nconst getDefaultVisibilty = (show, axis) => {\n    if (axis.constructor.type() === LINEAR) {\n        return show;\n    }\n    return false;\n};\n\nexport const getGridLayerDefinitions = (context, config, type) => ['x', 'y'].map((axisType) => {\n    const axes = context.axes();\n    if (!axes[axisType]) {\n        return null;\n    }\n    const show = defaultValue(config[axisType] && config[axisType].show,\n        getDefaultVisibilty(config.show, axes[axisType][0]));\n\n    return show ? getLayerDefinition(context, axes, type, axisType) : null;\n}).filter(d => d !== null);\n\nexport const getGridLayerData = (axes, fields, fieldsConfig) => {\n    const gridData = {};\n    ['x', 'y'].forEach((type) => {\n        let ticks = axes[type][0].getTickValues();\n        const subtype = getObjProp(fieldsConfig, getObjProp(fields, type, 0).getMembers()[0], 'def', 'subtype');\n        const jsonData = [];\n        const schema = [\n            {\n                name: 'yvalue',\n                type: 'measure'\n            }, {\n                name: 'xvalue',\n                type: 'measure'\n            },\n            {\n                name: 'yvalue0',\n                type: 'measure'\n            }, {\n                name: 'xvalue0',\n                type: 'measure'\n            }, {\n                name: 'xdim',\n                type: 'dimension',\n                subtype\n            }, {\n                name: 'ydim',\n                type: 'dimension',\n                subtype\n            }\n        ];\n        const len = Math.max(ticks.length);\n        ticks = subtype === DimensionSubtype.TEMPORAL ? ticks.map(d => d.getTime()) : ticks;\n        for (let i = 0; i < len; i += 1) {\n            jsonData.push({\n                [`${type}value`]: ticks[i],\n                [`${type}value0`]: ticks[i + 1],\n                [`${type}dim`]: ticks[i],\n                [`${type}dim`]: ticks[i]\n            });\n        }\n        gridData[type] = new DataModel(jsonData, schema);\n    });\n    return gridData;\n};\n\n// @todo Use dataSelect method to reuse instances when the method is fixed. #110\nexport const createGridLines = (instances = {}, createFn, definitions, iteratorFn) => {\n    const map = {};\n    definitions.forEach((def) => {\n        const name = def.definition.name;\n        let instance = instances[name];\n        if (!instance) {\n            instances[name] = instance = createFn(def);\n        }\n        iteratorFn(instance, def, name);\n        map[name] = 1;\n    });\n    for (const key in instances) {\n        if (!(key in map)) {\n            instances[key].remove();\n            delete instances[key];\n        }\n    }\n    return instances;\n};\n\nexport const createGridLineLayer = (context) => {\n    const vuConf = context.config();\n    const metaInf = context.metaInf();\n    const store = context.store();\n    const timeDiffs = context._timeDiffs;\n    [GRID_BAND, GRID_LINE].forEach((type) => {\n        let mark;\n        let config;\n        if (type === GRID_BAND) {\n            mark = BAR_LAYER;\n            config = vuConf.gridBands;\n        } else {\n            mark = TICK_LAYER;\n            config = vuConf.gridLines;\n        }\n        const definitions = getGridLayerDefinitions(context, config, type);\n\n        const sel = `_${type}Selection`;\n        context[sel] = createGridLines(context[sel], () => {\n            const inst = layerFactory.getLayerInstance({ mark });\n            inst.dependencies(context._layerDeps);\n            return inst;\n        }, definitions, (layer, atomicDef, key) => {\n            const definition = atomicDef.definition;\n            const sConf = layerFactory.getSerializedConf(mark, definition);\n            const axesObj = atomicDef.axes;\n            layer.metaInf({\n                unitRowIndex: metaInf.rowIndex,\n                unitColIndex: metaInf.colIndex,\n                namespace: `${metaInf.namespace}${type}${key}`\n            })\n                .store(store)\n                .config(sConf)\n                .dataProps({\n                    timeDiffs\n                })\n                .axes(axesObj);\n        });\n        context[`_${type}`] = Object.values(context[sel]);\n    });\n};\n\nexport const attachDataToGridLineLayers = (context) => {\n    const axes = context.axes();\n    const measurement = {\n        width: context.width(),\n        height: context.height()\n    };\n    const gridLines = context._gridLines;\n    const gridBands = context._gridBands;\n    const gridLayerData = getGridLayerData(axes, context.fields(), context.data().getFieldsConfig());\n    [].concat(...gridBands, ...gridLines).forEach((inst) => {\n        inst.data(inst.axes().x ? gridLayerData.x : gridLayerData.y).measurement(measurement);\n    });\n};\n\nexport const renderGridLineLayers = (context, container) => {\n    const config = context.config();\n    const classPrefix = config.classPrefix;\n    const gridLines = context._gridLines;\n    const gridBands = context._gridBands;\n\n    const gridLineParentGroup = makeElement(container, 'g', [1], `${classPrefix}-${GRID_PARENT_GROUP}`);\n    [[gridLines, `${classPrefix}-${GRID_LINE_PARENT_GROUP_CLASS}`],\n            [gridBands, `${classPrefix}-${GRID_BAND_PARENT_GROUP_CLASS}`]].forEach((entry) => {\n                const [instances, parentGroupClass] = entry;\n                const mountPoint = makeElement(gridLineParentGroup, 'g', [1], `.${parentGroupClass}`);\n                const className = `${parentGroupClass}-group`;\n                makeElement(mountPoint, 'g', instances, `.${className}`, {\n                    update: (group, instance) => {\n                        instance.dataProps({ timeDiffs: context._timeDiffs }).mount(group.node());\n                    }\n                });\n            });\n};\n","import { CLASSPREFIX, CONSOLIDATED } from './enums/constants';\n\n/**\n * Returns the default configuration of the visual unit\n * @return {Object} Default configuration of visual unit\n */\nexport const defaultConfig = {\n    classPrefix: CLASSPREFIX,\n    defClassName: 'visual-unit',\n    className: '',\n    trackerClassName: 'visual-unit-tracker',\n    gridLines: {\n        defClassName: 'axis-grid-lines',\n        className: '',\n        show: true,\n        color: '#efefef',\n        zeroLineColor: '#b6b6b6'\n    },\n    gridBands: {\n        defClassName: 'axis-grid-bands',\n        className: '',\n        show: false,\n        y: {\n            color: ['#fff', '#fbfbfb']\n        },\n        x: {\n            color: ['#fff', '#f9f9f9']\n        }\n    },\n    arcLayerClassName: 'layer-arc',\n    interaction: {\n        tooltip: {\n            mode: CONSOLIDATED\n        }\n    },\n    sideEffectClassName: 'side-effect-container'\n};\n","import { mergeRecursive, DataModel } from 'muze-utils';\nimport { defaultConfig } from './default-config';\nimport { CONFIG, LAYERDEFS, TRANSFORM, DATA, LAYERS, TRANSFORMEDDATA } from './enums/reactive-props';\nimport { sanitizeLayerDef } from './helper';\n\nexport default {\n    [CONFIG]: {\n        value: null,\n        meta: {\n            sanitization: (config, oldConfig) => (\n                mergeRecursive(oldConfig || mergeRecursive({}, defaultConfig), config)\n            )\n        }\n    },\n    [LAYERDEFS]: {\n        value: null,\n        meta: {\n            preset: layerDef => sanitizeLayerDef(layerDef)\n        }\n    },\n    [TRANSFORM]: {\n        value: null\n    },\n    [LAYERS]: {\n        value: null\n    },\n    [DATA]: {\n        value: null,\n        meta: {\n            typeCheck: d => d instanceof DataModel,\n            preset: (data, context) => {\n                if (context._cache) {\n                    const cachedData = context.cachedData();\n                    context.cachedData([...cachedData, data]);\n                } else {\n                    const oldData = context.data();\n                    oldData && oldData.unsubscribe('propagation');\n                    context.cachedData([data]);\n                }\n            }\n        }\n    },\n    [TRANSFORMEDDATA]: {\n        value: null,\n        meta: {\n            addAsMethod: false\n        }\n    }\n};\n","export const CONFIG = 'config';\nexport const DATA = 'data';\nexport const AXES = 'axes';\nexport const LAYERDEFS = 'layerDef';\nexport const WIDTH = 'width';\nexport const HEIGHT = 'height';\nexport const MOUNT = 'mount';\nexport const TRANSFORM = 'transform';\nexport const TRANSFORMEDDATA = 'transformedData';\nexport const DATADOMAIN = 'dataDomain';\nexport const FIELDS = 'fields';\nexport const LAYERAXISINDEX = 'layerAxisIndex';\nexport const LAYERS = 'layers';\nexport const DOMAIN = 'domain';\n\n","import { STATE_NAMESPACES, temporalFields } from 'muze-utils';\nimport * as PROPS from './enums/reactive-props';\nimport {\n    transformDataModels,\n    getDimensionMeasureMap,\n    attachDataToLayers,\n    attachAxisToLayers,\n    unionDomainFromLayers\n} from './helper';\n\nimport { createGridLineLayer, attachDataToGridLineLayers } from './helper/grid-lines';\n\nconst removeExitLayers = (layerDefs, context) => {\n    const layersMap = context._layersMap;\n    const markSet = {};\n    layerDefs.forEach((layerDef, i) => {\n        const id = `${layerDef.mark}-${i}`;\n        markSet[id] = true;\n    });\n\n    for (const key in layersMap) {\n        if (!(key in markSet)) {\n            layersMap[key].forEach(layer => layer.remove());\n            delete layersMap[key];\n        }\n    }\n};\n\nexport const calculateDomainListener = (context, namespace) => () => {\n    const domain = unionDomainFromLayers(context.layers(), context.fields(), context._layerAxisIndex,\n        context.data().getFieldsConfig());\n    context.store().commit(`${STATE_NAMESPACES.UNIT_GLOBAL_NAMESPACE}.${PROPS.DOMAIN}.${namespace}`, domain);\n};\n\nexport const listenerMap = (context, namespace, metaInf) => ([\n    {\n        type: 'registerImmediateListener',\n        props: [`${namespace.local}.${PROPS.CONFIG}`],\n        listener: ([, config]) => {\n            config && context.firebolt().config(config.interaction);\n        }\n    },\n    {\n        type: 'registerImmediateListener',\n        props: [`${namespace.local}.${PROPS.LAYERDEFS}`],\n        listener: ([, layerDefs]) => {\n            const fieldsVal = context.fields();\n            if (layerDefs && fieldsVal) {\n                removeExitLayers(layerDefs, context);\n                const axes = context.axes();\n                if (axes.x || axes.y) {\n                    const props = [`${STATE_NAMESPACES.GROUP_GLOBAL_NAMESPACE}.domain.y.${metaInf.rowIndex}0`,\n                        `${STATE_NAMESPACES.GROUP_GLOBAL_NAMESPACE}.domain.x.${metaInf.colIndex}0`];\n                    const store = context.store();\n                    const listenerInf = {\n                        namespace: namespace.local,\n                        key: 'gridLineListener'\n                    };\n                    store.unsubscribe(listenerInf);\n                    store.registerChangeListener(props, () => {\n                        attachDataToGridLineLayers(context);\n                    }, false, listenerInf);\n                }\n\n                context.addLayer(layerDefs);\n                context._lifeCycleManager.notify({\n                    client: context.layers(),\n                    action: 'initialized',\n                    formalName: 'layer'\n                });\n            }\n        }\n    },\n    {\n        type: 'registerImmediateListener',\n        props: [`${namespace.local}.${PROPS.DATA}`],\n        listener: ([, dataModel]) => {\n            const axesObj = context.axes();\n            const timeDiffs = {};\n            const timeDiffsByField = {};\n\n            Object.entries(temporalFields(dataModel)).forEach(([fieldName, fieldObj]) => {\n                timeDiffsByField[fieldName] = fieldObj.minimumConsecutiveDifference();\n            });\n\n            Object.entries(context.fields()).forEach(([type, [field]]) => {\n                if (field) {\n                    const timeDiff = timeDiffsByField[`${field}`];\n                    if (timeDiff) {\n                        timeDiffs[type] = timeDiff;\n                        axesObj[type].forEach(axis => axis.minDiff(timeDiff));\n                    }\n                }\n            });\n\n            context._timeDiffsByField = timeDiffsByField;\n            context._timeDiffs = timeDiffs;\n        }\n    },\n    {\n        type: 'registerImmediateListener',\n        props: [`${namespace.local}.${PROPS.CONFIG}`],\n        listener: () => {\n            createGridLineLayer(context);\n        }\n    },\n    {\n        type: 'registerImmediateListener',\n        props: [`${namespace.local}.${PROPS.DATA}`,\n            `${namespace.local}.${PROPS.TRANSFORM}`],\n        listener: ([, dataModel], [, transform]) => {\n            if (dataModel) {\n                const dataModels = transformDataModels(transform, dataModel);\n                context.store().commit(`${namespace.local}.${PROPS.TRANSFORMEDDATA}`, dataModels);\n            }\n        }\n    },\n    {\n        type: 'registerImmediateListener',\n        props: [`${namespace.local}.${PROPS.TRANSFORMEDDATA}`,\n            `${namespace.local}.${PROPS.LAYERS}`],\n        listener: ([, transformedData], [, layers]) => {\n            const layerAxisIndexVal = context._layerAxisIndex;\n            const axesVal = context.axes();\n            const dataModel = context.data();\n            if (transformedData && layers && axesVal && layerAxisIndexVal) {\n                context._lifeCycleManager.notify({ client: layers, action: 'beforeupdate', formalName: 'layer' });\n                const model = context.store().model;\n                layers.forEach(lyr => lyr.disableUpdate());\n                attachDataToLayers(layers, dataModel, transformedData);\n                model.lock();\n                layers.forEach((lyr) => {\n                    lyr.enableUpdate().domain(lyr._domain);\n                });\n                model.unlock();\n                context._dimensionMeasureMap = getDimensionMeasureMap(layers,\n                    dataModel.getFieldsConfig(), context.retinalFields());\n                attachAxisToLayers(axesVal, layers, layerAxisIndexVal);\n                context._lifeCycleManager.notify({ client: layers, action: 'updated', formalName: 'layer' });\n            }\n        }\n    }\n]);\n","import { FACET_BY_FIELDS, RETINAL_FIELDS, PARENT_ALIAS, LAYERS, CACHED_DATA } from './enums/constants';\n\nexport const PROPS = {\n    [FACET_BY_FIELDS]: {},\n    [RETINAL_FIELDS]: {},\n    [PARENT_ALIAS]: {},\n    [LAYERS]: {},\n    [CACHED_DATA]: {},\n    detailFields: {},\n    axes: {\n        defaultValue: {\n            x: [],\n            y: []\n        }\n    },\n    fields: {},\n    metaInf: {},\n    registry: {},\n    width: {},\n    height: {},\n    parentContainerInf: {},\n    valueParser: {\n        defaultValue: val => val\n    }\n};\n","import { CommonProps } from 'muze-utils';\nimport { SpawnableSideEffect } from '@chartshq/muze-firebolt';\nimport { DATA } from '../enums/reactive-props';\n\nexport const initSideEffects = (sideEffects, firebolt) => {\n    for (const key in sideEffects) {\n        if ({}.hasOwnProperty.call(sideEffects, key)) {\n            sideEffects[key] instanceof SpawnableSideEffect && sideEffects[key].drawingContext(() => {\n                const context = firebolt.context;\n                return context.getDrawingContext();\n            });\n            sideEffects[key].valueParser(firebolt.context.valueParser());\n        }\n    }\n};\n\nexport const clearActionHistory = (context) => {\n    const actionHistory = context._actionHistory;\n    for (const key in actionHistory) {\n        if (actionHistory[key].isMutableAction) {\n            delete context._actionHistory[key];\n        }\n    }\n};\n\nexport const dispatchQueuedSideEffects = (context) => {\n    const queuedSideEffects = context._queuedSideEffects;\n    Object.entries(queuedSideEffects).forEach((entry) => {\n        const sideEffect = entry[1];\n        context.dispatchSideEffect(sideEffect.name, ...sideEffect.params);\n    });\n    context._queuedSideEffects = {};\n};\n\nexport const registerListeners = (firebolt) => {\n    const context = firebolt.context;\n    const store = context.store();\n\n    store.registerImmediateListener([`local.units.${context.metaInf().namespace}.${DATA}`], (dataModel) => {\n        const dm = dataModel[1];\n\n        if (dm) {\n            firebolt.createSelectionSet(firebolt.context.data().getData().uids);\n            firebolt.initializeSideEffects();\n            const originalData = firebolt.context.cachedData()[0];\n            firebolt.attachPropagationListener(originalData);\n        }\n    });\n\n    store.registerChangeListener([`local.units.${context.metaInf().namespace}.${DATA}`], () => {\n        if (!firebolt.context.mount()) {\n            const originalData = firebolt.context.cachedData()[0];\n            originalData.unsubscribe('propagation');\n        }\n    });\n\n    context._layerDeps.throwback.registerChangeListener([CommonProps.ON_LAYER_DRAW],\n        ([, onlayerdraw]) => {\n            if (onlayerdraw) {\n                dispatchQueuedSideEffects(firebolt);\n                clearActionHistory(firebolt);\n            }\n        });\n};\n","import { DimensionSubtype } from 'muze-utils';\n\nconst getRangeFromData = (instance, selectionDataModel, propConfig) => {\n    let criteria;\n    const dataObj = selectionDataModel[0].getData();\n    const propCriteria = propConfig.payload.criteria;\n    const sourceIdentifiers = propConfig.sourceIdentifiers;\n    const schema = dataObj.schema;\n    const fieldMap = instance.data().getFieldsConfig();\n    const data = dataObj.data;\n    const isActionSourceSame = instance.id() === propConfig.sourceId;\n\n    if (isActionSourceSame) {\n        criteria = propCriteria;\n    } else {\n        criteria = (sourceIdentifiers !== null) ? schema.reduce((acc, obj, index) => {\n            let range;\n            const field = obj.name;\n            const fieldObj = fieldMap[field];\n            const type = fieldObj && (fieldObj.def.subtype ? fieldObj.def.subtype : fieldObj.def.type);\n            const isDimension = type === DimensionSubtype.CATEGORICAL;\n\n            if (!fieldObj) {\n                return acc;\n            }\n\n            if (!isDimension) {\n                range = [Math.min(...data.map(d => d[index])), Math.max(...data.map(d => d[index]))];\n            } else {\n                range = data.map(d => d[index]);\n            }\n            acc[field] = range;\n            return acc;\n        }, {}) : null;\n    }\n    return criteria;\n};\n\nexport const payloadGenerator = {\n    brush: (instance, selectionDataModel, propConfig) => {\n        const propPayload = propConfig.payload;\n        const criteria = getRangeFromData(instance, selectionDataModel, propConfig);\n        const payload = Object.assign({}, propPayload);\n        payload.criteria = criteria;\n        return payload;\n    },\n\n    __default: (instance, selectionDataModel, propConfig) => {\n        const propPayload = propConfig.payload;\n        const sourceIdentifiers = propConfig.sourceIdentifiers;\n        const dataObj = selectionDataModel[0].getData();\n        let schema = dataObj.schema;\n        const payload = Object.assign({}, propPayload);\n        schema = dataObj.schema;\n        const data = dataObj.data;\n        const sourceFields = schema.map(d => d.name);\n        payload.criteria = !sourceIdentifiers && selectionDataModel[0].isEmpty() ? null :\n            [sourceFields, ...data];\n        payload.sourceFields = sourceIdentifiers ? sourceIdentifiers.getSchema().map(d => d.name) : [];\n        return payload;\n    }\n};\n\n","import { isSimpleObject, FieldType, DataModel } from 'muze-utils';\n\nconst getModelWithFacetData = (dm, data) => {\n    const dataObj = dm.getData();\n    const schema1 = dataObj.schema;\n    const data1 = dataObj.data;\n    const jsonData = [];\n    const schema2 = data[0].map(d => ({\n        name: `${d}`,\n        type: FieldType.DIMENSION\n    }));\n    const data2 = data[1];\n\n    data1.forEach((d) => {\n        const tuple = {};\n        schema1.forEach((obj, i) => {\n            tuple[obj.name] = d[i];\n        });\n        schema2.forEach((obj, i) => {\n            tuple[obj.name] = data2[i];\n        });\n        jsonData.push(tuple);\n    });\n\n    return new DataModel(jsonData, [...schema1, ...schema2]);\n};\n\nexport const propagateValues = (instance, action, config = {}) => {\n    let propagationData;\n    const payload = config.payload;\n    const selectionSet = config.selectionSet;\n    const propagationFieldInf = config.propagationFields[action] || {};\n    const propagationFields = propagationFieldInf.fields || [];\n    const append = propagationFieldInf.append;\n    const criteria = payload.criteria;\n    const context = instance.context;\n    const dataModel = context.cachedData()[0];\n    const sourceId = context.id();\n    const sideEfffects = instance.sideEffects();\n    const behaviourEffectMap = instance._behaviourEffectMap;\n    const mergedModel = selectionSet.mergedEnter.model;\n    const fieldsConfig = dataModel.getFieldsConfig();\n    payload.sourceUnit = sourceId;\n    payload.action = action;\n    payload.sourceCanvas = context.parentAlias();\n    const propagationBehaviourMap = instance._propagationBehaviourMap;\n    const propagationBehaviour = propagationBehaviourMap[action] || action;\n\n    let propFields = [];\n    if (criteria === null) {\n        propagationData = null;\n    } else if (isSimpleObject(criteria)) {\n        propFields = Object.keys(criteria || {});\n        propagationData = mergedModel ? mergedModel.project(propFields) : null;\n    } else {\n        propFields = criteria[0];\n        propagationData = mergedModel ? mergedModel.project(propFields) : null;\n    }\n\n    const facetByFields = context.facetByFields();\n    if (propagationData !== null && propagationFields.length) {\n        const fields = propagationData.getData().schema.map(d => d.name);\n        propagationData = getModelWithFacetData(propagationData, facetByFields);\n        propFields = append ? [...fields, ...propagationFields] : propagationFields;\n        propagationData = propagationData.project(propFields);\n    }\n\n    let propagateInterpolatedValues = false;\n    if (propFields.length && propFields.every(field => fieldsConfig[field] &&\n        fieldsConfig[field].def.type === FieldType.MEASURE)) {\n        propagateInterpolatedValues = true;\n    }\n\n    const groupId = context.parentAlias();\n    payload.action = action;\n    const behaviourInstance = instance._actions.behavioural[propagationBehaviour];\n    const isMutableAction = behaviourInstance ? behaviourInstance.constructor.mutates() : false;\n\n    const filterFn = (entry, propagationConf) => {\n        const effects = behaviourEffectMap[entry.config.action];\n        const mutates = entry.config.groupId ?\n            effects.some(d => sideEfffects[d.name || d].constructor.mutates()) : true;\n        return entry.config.groupId !== propagationConf.groupId && mutates;\n    };\n\n    const sourceBehaviour = instance._actions.behavioural[action];\n    const mutates = sourceBehaviour ? sourceBehaviour.constructor.mutates() : false;\n    let propConfig = {\n        payload,\n        action,\n        criteria: propagationData,\n        isMutableAction: mutates,\n        propagateInterpolatedValues,\n        groupId,\n        sourceId: mutates ? groupId : sourceId,\n        filterFn,\n        enabled: (propConf, firebolt) => (action !== propagationBehaviour ?\n            propConf.payload.sourceCanvas === firebolt.context.parentAlias() : true)\n    };\n\n    dataModel.propagate(propagationData, propConfig, true);\n\n    if (action !== propagationBehaviour) {\n        propConfig = {\n            payload,\n            sourceId: isMutableAction ? groupId : sourceId,\n            criteria: propagationData,\n            isMutableAction,\n            propagateInterpolatedValues,\n            action: propagationBehaviour,\n            groupId,\n            applyOnSource: action === propagationBehaviour,\n            enabled: (propConf, firebolt) => propConf.payload.sourceCanvas !== firebolt.context.parentAlias(),\n            filterFn\n        };\n\n        dataModel.propagate(propagationData, propConfig, true, {\n            filterImmutableAction: (actionInf, propInf) => actionInf.groupId !== propInf.groupId\n        });\n    }\n};\n","import { FieldType } from 'muze-utils';\nimport { Firebolt } from '@chartshq/muze-firebolt';\nimport { registerListeners } from './helper';\nimport { payloadGenerator } from './payload-generator';\nimport { propagateValues } from './data-propagator';\n\n/**\n * This class manages the interactions of visual unit. It associates physical actions with\n * behavioural actions. It also propagates the behavioural actions to other datamodels.\n */\nexport default class UnitFireBolt extends Firebolt {\n    constructor (...params) {\n        super(...params);\n        registerListeners(this);\n    }\n\n    propagate (behaviour, payload, selectionSet, sideEffects) {\n        propagateValues(this, behaviour, {\n            payload,\n            selectionSet,\n            sideEffects,\n            propagationFields: this._propagationFields\n        });\n    }\n\n    getApplicableSideEffects (sideEffects, payload, propagationInf) {\n        const context = this.context;\n        const unitId = context.id();\n        const aliasName = context.parentAlias();\n        const propagationSourceCanvas = propagationInf.propPayload && propagationInf.propPayload.sourceCanvas;\n        const sourceUnitId = propagationInf.propPayload && propagationInf.propPayload.sourceUnit;\n        const sourceSideEffects = this._sourceSideEffects;\n        const sideEffectInstances = this.sideEffects();\n        const actionOnSource = sourceUnitId ? sourceUnitId === unitId : true;\n\n        const applicableSideEffects = payload.sideEffects ? [{\n            effects: payload.sideEffects,\n            behaviours: [payload.action]\n        }] : sideEffects;\n        applicableSideEffects.forEach((d) => {\n            let mappedEffects = d.effects;\n            mappedEffects = mappedEffects.filter((se) => {\n                const mutates = sideEffectInstances[se.name || se].constructor.mutates();\n                if (mutates && propagationInf.isMutableAction === false) {\n                    return false;\n                }\n                if (!actionOnSource && payload.criteria !== null) {\n                    const sideEffectChecker = sourceSideEffects[se.name || se];\n                    return sideEffectChecker ? sideEffectChecker(propagationInf.propPayload, context) : true;\n                }\n                if (propagationSourceCanvas === aliasName || actionOnSource) {\n                    return se.applyOnSource !== false;\n                }\n\n                return true;\n            });\n            d.effects = mappedEffects;\n        });\n        return applicableSideEffects;\n    }\n\n    shouldApplySideEffects (propagate) {\n        return propagate === false;\n    }\n\n    onDataModelPropagation () {\n        return (data, config) => {\n            let isSourceFieldPresent = true;\n            let isMutableAction = false;\n            const propPayload = config.payload;\n            const sourceIdentifiers = config.sourceIdentifiers;\n            const enabledFn = config.enabled;\n            const action = config.action;\n            const payloadFn = payloadGenerator[action] || payloadGenerator.__default;\n\n            if (sourceIdentifiers) {\n                const fieldsConfig = sourceIdentifiers.getFieldsConfig();\n                const sourceIdentifierFields = Object.keys(fieldsConfig);\n                const propFields = Object.keys(data[0].getFieldsConfig());\n                if (!Object.values(fieldsConfig).some(d => d.def.type === FieldType.MEASURE)) {\n                    isSourceFieldPresent = sourceIdentifierFields.some(d => propFields.indexOf(d) !== -1);\n                }\n            }\n\n            const payload = payloadFn(this.context, data, config);\n            const sourceBehaviours = this._sourceBehaviours;\n            const filterFn = sourceBehaviours[action] || sourceBehaviours['*'];\n            let enabled = true;\n\n            if (filterFn) {\n                enabled = filterFn(propPayload || {}, this.context);\n            }\n\n            if (enabledFn) {\n                enabled = enabledFn(config, this) && enabled !== false;\n            }\n\n            if (enabled) {\n                const effects = this._behaviourEffectMap[action];\n                const sideEffectInstances = this.sideEffects();\n                isMutableAction = config.groupId ?\n                    effects.some(d => sideEffectInstances[d.name || d].constructor.mutates()) : config.isMutableAction;\n\n                const propagationInf = {\n                    propagate: false,\n                    data,\n                    propPayload,\n                    sourceIdentifiers,\n                    persistent: false,\n                    isSourceFieldPresent,\n                    sourceId: config.propagationSourceId,\n                    isMutableAction: config.isMutableAction\n                };\n\n                this._actionHistory[action] = {\n                    payload,\n                    propagationInf,\n                    isMutableAction\n                };\n                this.dispatchBehaviour(action, payload, propagationInf);\n            }\n        };\n    }\n\n    prepareSelectionSets (behaviours) {\n        const data = this.context.data();\n        if (data) {\n            this.createSelectionSet(data.getData().uids, behaviours);\n        }\n        return this;\n    }\n\n    initializeSideEffects () {\n        if (this.context.data()) {\n            super.initializeSideEffects();\n        }\n        return this;\n    }\n\n    remove () {\n        this.context.cachedData()[0].unsubscribe('propagation');\n        return this;\n    }\n}\n","import { layerFactory } from '@chartshq/visual-layer';\nimport {\n    Store,\n    setAttrs,\n    getUniqueId,\n    getQualifiedClassName,\n    selectElement,\n    transactor,\n    makeElement,\n    registerListeners,\n    generateGetterSetters,\n    getDataModelFromIdentifiers,\n    isSimpleObject,\n    transposeArray,\n    CommonProps,\n    toArray,\n    STATE_NAMESPACES\n} from 'muze-utils';\nimport { physicalActions, sideEffects, behaviouralActions, behaviourEffectMap } from '@chartshq/muze-firebolt';\nimport { actionBehaviourMap } from './firebolt/action-behaviour-map';\nimport {\n    renderLayers,\n    getNearestDimensionalValue,\n    removeLayersBy,\n    getLayersBy,\n    getLayerFromDef,\n    getLayerAxisIndex,\n    sanitizeLayerDef,\n    createSideEffectGroup,\n    resolveEncodingTransform,\n    createRenderPromise\n} from './helper';\nimport { renderGridLineLayers } from './helper/grid-lines';\nimport localOptions from './local-options';\nimport { listenerMap, calculateDomainListener } from './listener-map';\nimport {\n    DOMAIN\n} from './enums/reactive-props';\nimport { PROPS } from './props';\nimport UnitFireBolt from './firebolt';\nimport { initSideEffects } from './firebolt/helper';\nimport './styles.scss';\n\nconst FORMAL_NAME = 'unit';\n\n/**\n * Visual Unit is hierarchical component created by {@link VisualGroup}. This component accepts layer definitions\n * and creates concrete layer instances from them, binds data and attaches axis to them. It also retreives the domain\n * from the layers and unions them and sets them on corresponding axis instances. This also creates the parent svg\n * groups for all the layers and delegates the rendering to all the layers.\n *\n * @public\n * @module VisualUnit\n * @class\n */\nexport default class VisualUnit {\n\n    /**\n     * Creates instance of visualization unit.\n     *\n     * @param {Object} registry  Component registry\n     * @param {Object} dependencies  Dependencies required by visual unit.\n     */\n    constructor (registry, dependencies) {\n        this._id = getUniqueId();\n        this._dependencies = dependencies;\n        this._layerDeps = {\n            throwback: new Store({\n                [CommonProps.ON_LAYER_DRAW]: false\n            }),\n            smartLabel: dependencies.smartLabel,\n            lifeCycleManager: dependencies.lifeCycleManager\n        };\n        this._renderedResolve = null;\n        this._renderedPromise = new Promise((resolve) => {\n            this._renderedResolve = resolve;\n        });\n        createRenderPromise(this);\n        this._layerDeps.throwback.registerChangeListener([CommonProps.ON_LAYER_DRAW], () => {\n            this._renderedResolve();\n            this._lifeCycleManager.notify({ client: this.layers(), action: 'drawn', formalName: 'layer' });\n        });\n\n        this._lifeCycleManager = dependencies.lifeCycleManager;\n        this._layersMap = {};\n        this._gridLinesSelection = {};\n        this._gridBandsSelection = {};\n        this._gridLines = [];\n        this._gridBands = [];\n        this._layerNamespaces = {};\n        this._layerAxisIndex = {};\n        this._transformedDataModels = {};\n        layerFactory.setLayerRegistry(registry.layerRegistry);\n        generateGetterSetters(this, PROPS);\n        this.registry(registry);\n        this.cachedData([]);\n    }\n\n    static formalName () {\n        return FORMAL_NAME;\n    }\n\n    static getState () {\n        return [\n            {\n                domain: {}\n            },\n            localOptions\n        ];\n    }\n\n    store (...params) {\n        if (params.length) {\n            this._store = params[0];\n            const metaInf = this.metaInf();\n            this.store().append(`${STATE_NAMESPACES.UNIT_LOCAL_NAMESPACE}`, {\n                [`${metaInf.namespace}`]: null\n            });\n            const localNs = `${STATE_NAMESPACES.UNIT_LOCAL_NAMESPACE}.${metaInf.namespace}`;\n            transactor(this, localOptions, this.store().model, {\n                namespace: localNs\n            });\n            registerListeners(this, listenerMap, {\n                local: localNs,\n                global: STATE_NAMESPACES.UNIT_GLOBAL_NAMESPACE\n            }, {\n                rowIndex: metaInf.rowIndex,\n                colIndex: metaInf.colIndex\n            });\n            this.firebolt(new UnitFireBolt(this, {\n                physical: physicalActions,\n                behavioural: behaviouralActions,\n                physicalBehaviouralMap: actionBehaviourMap\n            }, sideEffects, behaviourEffectMap));\n            return this;\n        }\n        return this._store;\n    }\n\n    /**\n     * Static helper for creates a unit instance\n     *\n     * @param {Object} [id] optional unique identifier for a unit; , id is calculated internally\n     * @param {DataModel} data instance of datamodel\n     * @param {Array.<Layer>} layers layer configuration\n     * @param {Object} config configurtion for the visual unit\n     * @return {VisualUnit} Instance of a unit\n     */\n    static create (...params) {\n        return new this(...params);\n    }\n\n    /**\n     * Returns the instance of firebolt associated with this visual unit. Firebolt dispatches the behavioural actions\n     * when any physical action happens on the elements of visual unit.\n     *\n     * @public\n     *\n     * @return {Firebolt} Instance of firebolt.\n     */\n    firebolt (...firebolt) {\n        if (firebolt.length) {\n            this._firebolt = firebolt[0];\n            return this;\n        }\n        return this._firebolt;\n    }\n\n    /**\n     * Returns the unique id of this visual unit.\n     *\n     * @public\n     * @return {string} Unique identifier.\n     */\n    id () {\n        return this._id;\n    }\n\n    lockModel () {\n        this._store.model.lock();\n        return this;\n    }\n\n    unlockModel () {\n        this._store.model.unlock();\n        return this;\n    }\n\n    timeDiffsByField (...params) {\n        if (params.length) {\n            return this;\n        }\n        return this._timeDiffsByField;\n    }\n\n    /**\n     * Renders the visual unit. It creates the layout and renders the axes and layers.\n     *\n     * @return {VisualUnit} Instance of visual unit.\n     */\n    render (container) {\n        const config = this.config();\n        const { className, defClassName, sideEffectClassName, classPrefix } = config;\n        const qualifiedClassName = getQualifiedClassName(defClassName, this.id(), config.classPrefix);\n        const width = this.width();\n        const height = this.height();\n        const containerSelection = selectElement(container).style('position', 'relative');\n\n        this._rootSvg = makeElement(containerSelection, 'svg', [null], className)\n                        .style('width', `${width}px`).style('height', `${height}px`);\n\n        const node = this._rootSvg.node();\n        setAttrs(node, {\n            width,\n            height,\n            class: qualifiedClassName.join(' ')\n        });\n        renderGridLineLayers(this, node);\n        renderLayers(this, node, this.layers(), {\n            width,\n            height\n        });\n        this._sideEffectGroup = createSideEffectGroup(node, `${classPrefix}-${sideEffectClassName}`);\n        const firebolt = this.firebolt();\n        initSideEffects(firebolt.sideEffects(), firebolt);\n        return this;\n    }\n\n    done () {\n        return this._renderedPromise;\n    }\n\n    /**\n     * Caches all the datamodels in an array from the next `data()` call on visual unit until `clearCaching()` or\n     * `resetData()` is called on it.\n     *\n     * @public\n     * @return {VisualUnit} Instance of visual unit.\n     */\n\n    enableCaching () {\n        this._cache = true;\n        return this;\n    }\n\n    /**\n     * Clears all the previous cached data.\n     *\n     * @public\n     * @segment VisualUnit\n     * @return {VisualUnit} Instance of visual unit.\n     */\n    clearCaching () {\n        this._cache = false;\n        this.cachedData([this.cachedData()[0]]);\n        return this;\n    }\n\n    /**\n     * Returns the drawing information from visual unit.Drawing context contains the dimensions of unit and the svg\n     * container of the visual unit.\n     *\n     * @public\n     *\n     * @return {Object} Drawing information.\n     *      ```\n     *          {\n     *              htmlContainer: // Html container of svg container of the visual unit\n     *              svgContainer: // Root svg container\n     *              width: // Width of the visual unit\n     *              height: // Height of the visual unit\n     *              sideEffectGroup: // Svg group for drawing side effect elements.\n     *              parentContainer: // Parent html container of the visual unit.\n     *              xOffset: // x offset space from the starting x position of the container,\n     *              yOffset: // y offset space from the starting y position of the container\n     *          }\n     *      ```\n     */\n    getDrawingContext () {\n        const rootSvg = this._rootSvg && this._rootSvg.node();\n        const width = this.width();\n        const height = this.height();\n        const { el, dimensions } = this.parentContainerInf();\n        return {\n            htmlContainer: this.mount(),\n            svgContainer: rootSvg,\n            width,\n            height,\n            sideEffectGroup: this._sideEffectGroup,\n            parentContainer: el,\n            parentContainerDimensions: dimensions,\n            xOffset: 0,\n            yOffset: 0\n        };\n    }\n\n    /**\n     * Returns the serialized configuration of visual unit.\n     *\n     * @return {Object} serialized configuration\n     */\n    serialize () {\n        return {\n            layers: this.layers().map(layer => layer.serialize()),\n            config: this.config(),\n            axes: this.axes().map(axis => axis.serialize())\n        };\n    }\n\n    mount (...mount) {\n        if (mount.length) {\n            this._mount = mount[0];\n            this.render(mount[0]);\n            this.firebolt().mapActionsAndBehaviour();\n            return this;\n        }\n        return this._mount;\n    }\n\n    /**\n     * Adds a new layer to the visual unit. It takes a layer definition and creates layer instances from them. It does\n     * not render the layers. It returns the layer instances in an array. If the layer definition is a composite layer,\n     * then multiple layer instances will be returned in the array.\n     *\n     * To add a layer in the unit,\n     * ```\n     *      unit.addLayer({\n     *          name: 'bullet',\n     *          mark: 'bar',\n     *          encoding: {\n     *              x: 'Year',\n     *              y: 'Acceleration',\n     *              color: 'Origin'\n     *          }\n     *      });\n     * ```\n     * @public\n     * @param {Object} layerDef Definition of new layer.\n     *\n     * @return {Array} Array of layer instances.\n     */\n    addLayer (layerDefinition) {\n        const layerDefinitions = sanitizeLayerDef(toArray(layerDefinition));\n\n        const layersMap = this._layersMap;\n        const markSet = {};\n        const store = {\n            layers: {},\n            components: {\n                unit: this\n            }\n        };\n        let layerIndex = 0;\n        let startIndex = [].concat(...Object.values(this._layersMap)).length;\n        const metaInf = this.metaInf();\n        const props = this._layerNamespaces;\n        const layers = layerDefinitions.sort((a, b) => a.order - b.order).reduce((layersArr, layerDef) => {\n            const definition = layerDef.def;\n            const markId = definition.name;\n            const defArr = toArray(definition);\n            const namespaces = [];\n            defArr.forEach((def) => {\n                def.order = layerDef.order + layerIndex;\n                const namespace = `${metaInf.namespace}${startIndex}`;\n                if (!layersMap[markId]) {\n                    startIndex++;\n                    if (definition.calculateDomain !== false) {\n                        props[`${STATE_NAMESPACES.LAYER_GLOBAL_NAMESPACE}.${DOMAIN}.${namespace}`] = true;\n                    }\n                }\n                namespaces.push(namespace);\n            });\n            layerIndex += defArr.length;\n            const instances = getLayerFromDef(this, definition, layersMap[markId], namespaces);\n            store.layers = Object.assign(store.layers, instances);\n            const instanceValues = Object.values(instances);\n            layersArr = layersArr.concat(...instanceValues);\n            layersMap[markId] = instanceValues;\n            markSet[markId] = markId;\n            return layersArr;\n        }, []);\n\n        store.unit = this;\n        const layerdeps = {};\n        const layersArr = [].concat(...Object.values(this._layersMap));\n\n        layersArr.forEach((layer) => {\n            const alias = layer.alias();\n            store.layers[alias] = layer;\n            layerdeps[alias] = [];\n        });\n        layers.forEach((layer) => {\n            const depArr = resolveEncodingTransform(layer, store);\n            layerdeps[layer.alias()] = depArr;\n        });\n\n        this._layerDepOrder = layerdeps;\n        this._layerAxisIndex = Object.assign(this._layerAxisIndex, getLayerAxisIndex(layers, this.fields()));\n        const stateStore = this.store();\n\n        stateStore.unsubscribe({\n            key: 'calculateDomainListener',\n            namespace: `${STATE_NAMESPACES.UNIT_LOCAL_NAMESPACE}.${metaInf.namespace}`\n        });\n        stateStore.registerImmediateListener(Object.keys(props), calculateDomainListener(this, metaInf.namespace),\n            false, {\n                key: 'calculateDomainListener',\n                namespace: `${STATE_NAMESPACES.UNIT_LOCAL_NAMESPACE}.${metaInf.namespace}`\n            });\n        this.layers(layersArr);\n        return layers;\n    }\n\n    /**\n     *\n     *\n     *\n     * @memberof VisualUnit\n     */\n    remove () {\n        const lifeCycleManager = this._dependencies.lifeCycleManager;\n        lifeCycleManager.notify({ client: this, action: 'beforeremove', formalName: 'unit' });\n        this.store().unsubscribe({\n            namespace: `${STATE_NAMESPACES.UNIT_LOCAL_NAMESPACE}.${this.metaInf().namespace}`\n        });\n        selectElement(this.mount()).remove();\n        this.firebolt().remove();\n        // Remove layers\n        lifeCycleManager.notify({ client: this.layers(), action: 'beforeremove', formalName: 'layer' });\n        this.layers().forEach(layer => layer.remove());\n        lifeCycleManager.notify({ client: this.layers(), action: 'removed', formalName: 'layer' });\n        lifeCycleManager.notify({ client: this, action: 'removed', formalName: 'unit' });\n        return this;\n    }\n\n    /**\n     *\n     *\n     * @param {*} identifiers\n     *\n     * @memberof VisualUnit\n     */\n    getDataModelFromIdentifiers (identifiers, mode, parentModel) {\n        if (identifiers === null) {\n            return null;\n        }\n        const dataModel = parentModel || this.data();\n        return getDataModelFromIdentifiers(dataModel, identifiers, mode);\n    }\n\n    /**\n     * Resets the data of visual unit to original data model. It also clears the cached data.\n     *\n     * @public\n     * @segment VisualUnit\n     * @return {VisualUnit} Instance of visual unit.\n     */\n    resetData () {\n        this.data(this.cachedData()[0]);\n        return this;\n    }\n\n    /**\n     *\n     *\n     *\n     * @memberof VisualUnit\n     */\n    getSourceInfo () {\n        return {\n            dimensionMeasureMap: this._dimensionMeasureMap,\n            fields: this.fields(),\n            data: this.data(),\n            axes: this.axes()\n        };\n    }\n\n    /**\n     *\n     *\n     *\n     * @memberof VisualUnit\n     */\n    getDefaultTargetContainer () {\n        const { classPrefix, defClassName } = this.config();\n        return [`.${classPrefix}-${defClassName}`];\n    }\n\n    /**\n     * Returns an array of layer instances which matches the supplied mark type.\n     *\n     * @public\n     *\n     * @param {string} type Mark type of layer.\n     *\n     * @return {Array} Array of layer instances.\n     */\n    getLayersByType (type) {\n        const layers = getLayersBy(this.layers(), 'type', type);\n        return layers;\n    }\n\n    /**\n     * Returns the layer instance which matches the supplied layer name. If no layer is found, then it returns\n     * undefined.\n     *\n     * @public\n     * @param {string} name Name of layer.\n     *\n     * @return {VisualUnit} Layer instance.\n     */\n    getLayerByName (name) {\n        const layers = getLayersBy(this.layers(), 'name', name);\n        return layers[0];\n    }\n\n    /**\n     * Returns the point located nearest to the supplied x and y position. It returns the unique identifiers of the\n     * point. This function also accepts an additional configuration `getAllPoints` inside `config` object in the third\n     * argument which if set to true, then it returns the identifiers of all the points which falls on the nearest\n     * x value or y value if any one of the field is a dimension. Additionally, a target property is also returned\n     * which contains the identifier of the nearest point. If no nearest point is found, then it returns identifier\n     * as null.\n     *\n     * @public\n     *\n     * @param {number} x X Position of the point from where nearest point is to be found.\n     * @param {number} y Y Position of the point from where nearest point is to be found.\n     * @param {Object} config Additional configuration options.\n     * @param {boolean} config.getAllPoints If true, then returns all the points nearest to the x value or y value if\n     * it is dimension.\n     * @param {Object} config.data Data associated with the nearest point.\n     * @return {Object} Nearest point information\n     * ```\n     *      {\n     *          id: [['Origin'], ['USA'], ['Japan']], // Identifiers of all the points closest to the x value.\n     *          target: [['Origin'], ['Japan']] // Identifier of the nearest point.\n     *      }\n     * ```\n     */\n    getNearestPoint (x, y, config) {\n        let pointObj = {\n            id: null\n        };\n        const dimValue = getNearestDimensionalValue(this, {\n            x,\n            y\n        });\n\n        if (dimValue !== null && config.getAllPoints) {\n            pointObj.id = dimValue;\n            const pointInf = this.getMarkInfFromLayers(x, y, config);\n            pointObj.target = pointInf && pointInf.id ? pointInf.id : pointObj.id;\n            return pointObj;\n        }\n\n        const markInf = this.getMarkInfFromLayers(x, y, config) || { id: null };\n        pointObj = Object.assign({}, markInf);\n\n        pointObj.target = markInf.id;\n        return pointObj;\n    }\n\n    getMarkInfFromLayers (x, y, args) {\n        const layers = this.layers();\n        const len = layers.length;\n        let point = null;\n        // Iterate through the layers array and fetch the nearest point from each layer. If a valid\n        // nearest point is found from any layer, then return that point.\n        for (let i = 0; i < len; i++) {\n            const layer = layers[i];\n            const config = layer.config();\n            if (config.interactive !== false) {\n                point = layer.getNearestPoint(x, y, args);\n            }\n            if (point) {\n                return point;\n            }\n        }\n        return point;\n    }\n\n    /**\n     * Get the information of all the marks such as x, y position and size from supplied identifiers. It\n     * returns an array of points whose data matches the given identifiers.\n     *\n     * @public\n     *\n     * @param {Array|Object} identifiers Field names and their corresponding values.\n     * ```\n     * identifiers can be given in an array of array,\n     *      ['Origin', 'Name'], // Names of the fields supplied in first array\n     *      ['USA', 'ford'], // Data values of each field supplied in rest of the arrays.\n     *      ['Japan', 'ford']\n     * or in an object,\n     *      {\n     *          Origin: ['USA']\n     *      }\n     * ```\n     * @param {Object} config Optional configurations which decides which information of the mark will\n     * be retrieved.\n     * @param {boolean} [config.getAllAttrs = false] If true, then returns all the information of each mark.\n     * @param {boolean} [config.getBBox = false] If true, then returns the bounding box of each mark.\n     *\n     * @return {Array} Array of objects containing the information of each point.\n     * ```\n     * By default, the method returns the array of points in this structure,\n     *      [\n     *          {\n     *              x: 20,\n     *              y: 100,\n     *              width: 200,\n     *              height: 100\n     *          }\n     *      ]\n     * If 'config.getAllAttrs' is true, then it returns all the information of each mark,\n     *      [\n     *      // Positions of mark on initial state of transition.\n     *          enter: {\n     *              x: 0,\n     *              y: 0\n     *          },\n     *          // Final positions of the mark\n     *          update: {\n     *              x: 20,\n     *              y: 10\n     *          },\n     *          style: // css styles of each mark\n     *          source: [200, 'USA'] // Row information of each mark\n     *          id: 20 // Row id of each mark\n     *      ]\n     * ```\n     */\n    getPlotPointsFromIdentifiers (identifiers, config = {}) {\n        let points = [];\n        let parsedIdentifiers = identifiers;\n        if (identifiers === null) {\n            return [];\n        }\n        const layers = this.layers();\n        const len = layers.length;\n        if (isSimpleObject(identifiers)) {\n            parsedIdentifiers = [Object.keys(identifiers)];\n            parsedIdentifiers = [...parsedIdentifiers, ...transposeArray(Object.values(identifiers))];\n        }\n        for (let i = 0; i < len; i++) {\n            const layer = layers[i];\n            if (layer.config().interactive !== false) {\n                points = [...points, ...layer.getPointsFromIdentifiers(parsedIdentifiers, config)];\n            }\n        }\n        return points;\n    }\n\n    /**\n     * Removes the layer instance which matches the supplied layer name.\n     *\n     * @public\n     * @param {string} name Name of layer\n     *\n     * @return {VisualUnit} Instance of visual unit.\n     */\n    removeLayerByName (name) {\n        removeLayersBy('name', name);\n        return this;\n    }\n\n    /**\n     * Removes all the layer instances which matches the supplied mark type.\n     *\n     * @public\n     * @param {string} type Mark type of layer.\n     *\n     * @return {VisualUnit} Instance of visual unit.\n     */\n    removeLayersByType (type) {\n        removeLayersBy('type', type);\n        return this;\n    }\n}\n","import { DataModel } from 'muze-utils';\n\nimport { retriveDomainFromData } from './group-utils';\n\n/**\n * Gets name of fields form the variables\n *\n * @param {*} fields1\n * @param {*} [fields2=[]]\n *\n */\nconst getFieldNames = (fields1, fields2 = []) => [fields1, fields2].map(fields => fields.reduce((acc, d) => {\n    acc = [...acc, ...d.getMembers()];\n    return acc;\n}, []));\n\n/**\n * Creates a selected datamodel from a parent datamodel and a set of field names\n *\n * @param {Object} datamodel provided as input\n * @param {Array} fieldNames schema  names\n * @param {Array} fieldValues values of those schema names to be selected\n * @return {Object} creates a new selected datamodel\n */\nconst createSelectedDataModel = (datamodel, fieldNames, fieldValues) =>\n    datamodel.select(fields => fieldNames.every((field, k) => fields[field].value === fieldValues[k]));\n\n/**\n *\n *\n * @param {*} facets\n * @param {*} keyArray\n *\n */\nconst uniqueKeyGenerator = (keyArray, context, depth = 0, val = []) => {\n    const {\n        facets,\n        dataModel,\n        uniqueValues\n    } = context;\n\n    // Get unique keys for the next depth recursively if required\n    if (facets[depth + 1]) {\n        const field = facets[depth];\n        uniqueValues.forEach((value) => {\n            const newDm = dataModel.select(fields => fields[field].value === value);\n            const nextDepthUniqueValues = retriveDomainFromData(newDm, facets[depth + 1]);\n            const newContext = {\n                facets,\n                dataModel: newDm,\n                uniqueValues: nextDepthUniqueValues\n            };\n\n            uniqueKeyGenerator(keyArray, newContext, depth + 1, [...val, value]);\n        });\n    } else {\n        uniqueValues.forEach((value) => {\n            keyArray.push([...val, value]);\n        });\n    }\n};\n\n/**\n * projects row model based on the set of row and/or column and other projection fields\n *\n * @param {Object} datamodel provided as input\n * @return {Object} Projected datamodel\n */\nconst projectRows = (datamodel, projections) => {\n    const {\n        allColumnProjections,\n        rowProjections,\n        optionalProjections\n    } = projections;\n\n    if (rowProjections.length > 0) {\n        return rowProjections.map((projectFields) => {\n            const [projFieldNames, colProjFieldNames] = getFieldNames(projectFields, allColumnProjections);\n            return datamodel.project([...projFieldNames, ...colProjFieldNames, ...optionalProjections]);\n        });\n    }\n    return [datamodel];\n};\n\n/**\n * Adds the datamodels to current row index based on column fields\n *\n * @param {Array} context current context\n * @param {Array} valueCellCreator List of facets applied to the current datamodel\n */\nconst pushToMatrix = (context, valueCellCreator) => {\n    let cells = [];\n    const {\n        matrix,\n        datamodel,\n        facetInfo,\n        fieldInfo\n    } = context;\n    // Get projected fields for current row\n    const {\n        rowProjections,\n        colProjections,\n        optionalProjections\n    } = fieldInfo;\n    const {\n        rowIndex,\n        columnIndex\n    } = facetInfo;\n    const rowProj = rowProjections[(rowIndex) % rowProjections.length] || [];\n\n    // Get the cells for the matrix from the return function of the callback on the datamodel.\n    // callback function -> (datamodel, {projections, indices}, facets)\n    if (colProjections.length > 0) {\n        cells = colProjections.map((projectFields, projIdx) => {\n            const [colProjFieldNames, rowProjFieldNames] = getFieldNames(projectFields, rowProj);\n            const projectedDm = datamodel.project([...colProjFieldNames, ...rowProjFieldNames, ...optionalProjections]);\n            const projections = { rowFields: rowProj, columnFields: projectFields };\n            const indices = { rowIndex, columnIndex: columnIndex * colProjections.length + projIdx };\n\n            return valueCellCreator(projectedDm, { projections, indices }, facetInfo);\n        });\n    } else {\n        const projections = { rowFields: rowProj, columnFields: [] };\n        const indices = { rowIndex, columnIndex };\n\n        cells = [valueCellCreator(datamodel, { projections, indices }, facetInfo)];\n    }\n\n    matrix[rowIndex] = matrix[rowIndex] || [];\n    matrix[rowIndex].push(...cells);\n};\n\n/**\n * Gets Matrixes for corresponding datamodel, facets and projections\n *\n * @param {Object} dataModel input datamodel\n * @param {Object} fieldMap corresponding fieldmap\n * @param {Array} facetsAndProjections contains the set of facets and projections for the matrices\n * @param {Function} valueCellCreator Callback executed after datamodels are prepared after sel/proj\n * @return {Object} set of matrices with the corresponding row and column keys\n */\nexport const getMatrixModel = (dataModel, facetsAndProjections, valueCellCreator) => {\n    let rowDataModels = [];\n    const rowKeys = [];\n    const columnKeys = [];\n    const allColumnProjections = [];\n    const matrix = [];\n    const facetInfo = [];\n\n    const fieldInfo = Object.assign({}, facetsAndProjections);\n    const {\n        rowFacets,\n        colFacets,\n        colProjections\n    } = fieldInfo;\n\n    colProjections.forEach((colProj) => {\n        allColumnProjections.push(...colProj);\n    });\n    fieldInfo.allColumnProjections = allColumnProjections;\n\n    // Performing row selection and projection\n    if (rowFacets.length > 0) {\n        // Get unique values for the root level of facet\n        const field = rowFacets[0].toString();\n        const firstLevelRowKeys = retriveDomainFromData(dataModel, field);\n\n        // Get unique keys in the form of an array of arrays for each row\n        uniqueKeyGenerator(rowKeys, { facets: rowFacets, dataModel, uniqueValues: firstLevelRowKeys });\n\n        // Apply selection -> projection -> row datamodels\n        rowKeys.forEach((val) => {\n            // Create faceted datamodel\n            const [rowFacetFieldNames] = getFieldNames(rowFacets);\n            const selectedDataModel = createSelectedDataModel(dataModel, rowFacetFieldNames, val);\n\n            // Project the datamodel based on the number of projections (based on last levels)\n            const newProjectedDataModels = projectRows(selectedDataModel, fieldInfo);\n            rowDataModels.push(...newProjectedDataModels);\n\n            newProjectedDataModels.forEach(() => {\n                facetInfo.push([rowFacets, val]);\n            });\n        });\n    } else {\n        // No row facets, hence only row projection\n        rowDataModels.push(...projectRows(dataModel, fieldInfo));\n    }\n\n    // Maintaining set of row datamodels for column resolution\n    rowDataModels = rowDataModels.length > 0 ? rowDataModels : [[]];\n\n    // Performing column selection and projection\n    if (colFacets.length > 0) {\n        const colFacetNames = colFacets.map(d => `${d}`);\n        // Get unique values for the root level of facet\n        const field = colFacetNames[0];\n        const firstLevelColumnKeys = retriveDomainFromData(dataModel, field);\n\n        // Get unique keys to create faceted datamodels: this time for columns\n        uniqueKeyGenerator(columnKeys, {\n            facets: colFacetNames,\n            dataModel,\n            uniqueValues: firstLevelColumnKeys\n        });\n        // For each row in the datamodel, apply selection -> projection -> push the projection to matri\n        rowDataModels.forEach((dme, rIndex) => {\n            facetInfo[rIndex] = facetInfo[rIndex] || [[], []];\n            columnKeys.forEach((val, cIndex) => {\n                matrix[rIndex] = matrix[rIndex] || [];\n\n                // If datamodel is not present in current row, choose parent datamodel\n                const datamodel = dme instanceof DataModel ? dme : dataModel;\n\n                // Selection is made on the datamodel for the current row\n                const selectedDataModel = createSelectedDataModel(datamodel, colFacetNames, val);\n                const context = {\n                    matrix,\n                    datamodel: selectedDataModel,\n                    facetInfo: {\n                        rowFacets: facetInfo[rIndex],\n                        colFacets: [colFacets, val],\n                        rowIndex: rIndex,\n                        columnIndex: cIndex\n                    },\n                    fieldInfo\n                };\n                pushToMatrix(context, valueCellCreator);\n            });\n        });\n    } else {\n        // No column facets, hence only row projection\n        rowDataModels.forEach((dme, rIndex) => {\n            facetInfo[rIndex] = facetInfo[rIndex] || [[], []];\n            const context = {\n                matrix,\n                datamodel: dme || dataModel,\n                facetInfo: {\n                    rowFacets: facetInfo[rIndex],\n                    colFacets: [[], []],\n                    rowIndex: rIndex,\n                    columnIndex: 0\n                },\n                fieldInfo\n            };\n\n            pushToMatrix(context, valueCellCreator);\n        });\n    }\n\n    // Getting column keys\n    const transposedColKeys = columnKeys.length > 0 ? columnKeys[0].map((col, i) =>\n                    columnKeys.map(row => row[i])) : columnKeys;\n\n    return { matrix, rowKeys, columnKeys: transposedColKeys };\n};\n","import { AxisOrientation } from '@chartshq/muze-axis';\nimport {\n    getObjProp,\n    FieldType,\n    STATE_NAMESPACES,\n    retrieveNearestGroupByReducers,\n    mergeRecursive,\n    createSelection\n} from 'muze-utils';\nimport { getMatrixModel } from './matrix-model';\nimport {\n    getCellKey,\n    isDistributionEqual,\n    mutateAxesFromMap,\n    getFieldsFromSuppliedLayers,\n    extractFields\n} from './group-utils';\nimport { ROW, ROWS, COLUMNS, COL, LEFT, RIGHT, TOP, BOTTOM, PRIMARY, SECONDARY, X, Y } from '../enums/constants';\n\n/**\n * Updates row and column cells with the geom cell corresponding to the facet keys\n *\n * @param {*} resolver\n * @param {*} facets\n */\nconst updateCells = (resolver, facets, geomCell) => {\n    [ROW, COL].forEach((field) => {\n        const cells = resolver[`${field}Cells`]();\n        const facetKey = facets[`${field}Facets`][1].join();\n\n        !cells[facetKey] && (cells[facetKey] = []);\n        cells[facetKey].push(geomCell);\n        resolver[`${field}Cells`](cells);\n    });\n};\n\n/**\n *\n *\n * @param {*} context\n * @param {*} datamodel\n * @param {*} fieldInfo\n * @param {*} facets\n *\n */\nexport const createValueCells = (context, datamodel, fieldInfo, facets) => {\n    const {\n        projections,\n        indices\n    } = fieldInfo;\n    const {\n        rowFields,\n        columnFields\n    } = projections;\n    const {\n         rowIndex,\n         columnIndex\n    } = indices;\n    const {\n        suppliedLayers,\n        cell: GeomCell,\n        resolver,\n        config,\n        encoder,\n        detailFields\n    } = context;\n    const axes = resolver.axes();\n    const cacheMaps = resolver.cacheMaps();\n    const matrixLayers = resolver.matrixLayers();\n    const labelManager = resolver.dependencies().smartlabel;\n    const horizontalAxis = resolver.horizontalAxis();\n    const verticalAxis = resolver.verticalAxis();\n    const datamodelTransform = resolver.datamodelTransform();\n    const {\n        entryCellMap,\n        exitCellMap\n    } = cacheMaps;\n    const layerConfigArr = encoder.getLayerConfig({ columnFields, rowFields }, suppliedLayers || []);\n    const axesCreators = { config, labelManager, axes, cacheMaps };\n\n    fieldInfo.normalizedColumns = verticalAxis.fields;\n    fieldInfo.normalizedRows = horizontalAxis.fields;\n\n    const groupAxes = encoder.createAxis(axesCreators, fieldInfo, context);\n\n    matrixLayers[rowIndex] = matrixLayers[rowIndex] ? matrixLayers[rowIndex] : [];\n    matrixLayers[rowIndex][columnIndex] = layerConfigArr;\n\n    // return from map if already there otherwise create and put in map\n    const geomCellKey = getCellKey(rowIndex, columnIndex);\n    const fields = {\n        y: rowFields,\n        x: columnFields\n    };\n\n    const allFacets = [\n        [...facets.rowFacets[0], ...facets.colFacets[0]],\n        [...facets.rowFacets[1], ...facets.colFacets[1]]\n    ];\n    const geomCell = !exitCellMap.has(geomCellKey) ? new GeomCell() : exitCellMap.get(geomCellKey);\n\n    geomCell.data(datamodel)\n                    .axes(groupAxes)\n                    .fields(fields)\n                    .transform(datamodelTransform)\n                    .detailFields(detailFields)\n                    .facetByFields(allFacets);\n    entryCellMap.set(geomCellKey, geomCell);\n    exitCellMap.delete(geomCellKey);\n\n    updateCells(resolver, facets, geomCell);\n\n    return entryCellMap.get(geomCellKey);\n};\n\n/**\n * Creates axis cells based on the set of axes\n *\n * @param {Selection} selection Contains a selection of the axis units\n * @param {Array} axes Actual axis units\n * @param {number} axisIndex 0-> primary axis, 1-> secondary axis(when dual axis is made)\n * @param {Object} cells Contains a collection of the cells\n * @return {Object} return either set of axis/blank cells depending on the config\n */\n\nconst createAxisCells = (selection, axes, axisIndex, cells) =>\n    createSelection(selection, axis => axis, axes, (item, i) => i + item.reduce((e, n) => {\n        const id = n.id + axisIndex;\n        return e + id;\n    }, '')).map((axis) => {\n        if (axis && axis[axisIndex]) {\n            const axisInst = axis[axisIndex];\n            const { orientation, show } = axisInst.config();\n\n            return new cells.AxisCell().source(axisInst).config({\n                isOffset: orientation === AxisOrientation.LEFT || orientation === AxisOrientation.TOP,\n                show\n            });\n        }\n        return new cells.BlankCell().config({ show: false });\n    });\n\n/**\n *\n *\n * @param {*} context\n * @param {*} selectionObj\n * @param {*} cells\n * @retur\n */\nconst axisPlaceholderGn = (context, selObj, cells) => {\n    const {\n        matrices\n    } = context;\n    const {\n        axesMatrix\n    } = matrices;\n\n    return (type, axisFrom) => {\n        const axes = axesMatrix[`${type}`];\n\n        if (axes && axes.length) {\n            if (type === X || type === Y) {\n                const fieldNames = type === Y ? ROWS : COLUMNS;\n\n                [PRIMARY, SECONDARY].forEach((fieldType, index) => {\n                    const selObjProp = `${fieldNames}${fieldType}`;\n                    let axisIndex = index;\n                    let axesForDraw = axes;\n                    if (axisFrom === RIGHT || axisFrom === BOTTOM) {\n                        axisIndex = 1 - axisIndex;\n                    }\n                    if (!getObjProp(axes, 0, axisIndex)) {\n                        axesForDraw = [];\n                    }\n                    selObj[selObjProp] = createAxisCells(selObj[selObjProp], axesForDraw, axisIndex, cells);\n                });\n            } else {\n                selObj.rowsPrimary = createAxisCells(selObj.rowPrime, axes.map(() => []), 0, cells);\n                selObj.columnsPrimary = createAxisCells(selObj.colPrime, axes[0], 0, cells);\n            }\n        }\n        return selObj;\n    };\n};\n\n/**\n * Creates header cells based on the set of headers\n *\n * @param {Object} selection Contains a selection of the header units\n * @param {string} headers Contains a list of the headers\n * @param {Object} cells Contains a collection of the cells\n * @param {Object} labelManager smart label instance\n * @return {Object} return either set of header cells depending on the config\n */\nconst createTextCells = (selection, headers, cells, labelManager) => createSelection(selection,\n    label => new cells.TextCell({}, { labelManager }).source(label), headers, (key, i) => key + i);\n\n/**\n *\n *\n * @param {*} context\n * @param {*} selectionObj\n * @param {*} cells\n * @param {*} labelManager\n *\n */\nconst headerPlaceholderGn = (context, selectionObj, cells, labelManager) => {\n    const {\n        axis,\n        keys,\n        type,\n        facet\n    } = context;\n    const counter = axis.length / keys.length;\n    const selectionKeys = keys.length ? axis.map((d, i) => keys[Math.floor(i / counter)]) : [];\n\n    return createSelection(selectionObj[`${type}Headers`], keySet => keySet, selectionKeys,\n        (keySet, i) => `${keySet.join(',')}-${i}`)\n                    .map(keySet => createTextCells(null, keySet, cells, labelManager)\n                                    .map((cell, k, i) => cell.source(keySet[i]).config(facet)));\n};\n\n/**\n * Creates a set of placeholders as a part of selection object\n *\n * @param {Array} normalizedOptions contains normalized rows and columns\n * @param {Array} matrices contains axis and value matrices\n * @param {aArrayny} projections contains set of row and column projections\n * @param {Object} cells Contains a collection of the cells\n * @param {Object} labelManager smart label instance\n * @return {Object} Creates a set of placeholders as a part of selections\n */\nconst generatePlaceholders = (context, cells, labelManager) => {\n    let selectionObj;\n    const {\n        matrices,\n        fields,\n        facetsAndProjections,\n        selection,\n        facet,\n        encoders,\n        resolver\n    } = context;\n    const {\n        rows,\n        columns\n    } = fields;\n    const {\n        valuesMatrix\n    } = matrices;\n    const {\n        rowProjections,\n        colProjections\n    } = facetsAndProjections;\n    const {\n        rowKeys,\n        columnKeys\n    } = valuesMatrix;\n    const takeAxisFrom = encoders.simpleEncoder._axisFrom;\n    const takeHeaderFrom = encoders.simpleEncoder._headerFrom;\n\n    selectionObj = selection || {};\n\n    ['pie', X, Y].forEach((axis) => {\n        const axisFrom = axis === X ? takeAxisFrom.column : takeAxisFrom.row;\n        selectionObj = axisPlaceholderGn(context, selectionObj, cells)(axis, axisFrom);\n    });\n\n    const {\n        rowsPrimary,\n        rowsSecondary,\n        columnsPrimary,\n        columnsSecondary\n    } = selectionObj;\n\n    const rowAxis = rowsPrimary && rowsPrimary.getObjects().length ? rowsPrimary.getObjects() :\n        (rowsSecondary && rowsSecondary.getObjects().length ? rowsSecondary.getObjects() : []);\n    const colAxis = columnsPrimary && columnsPrimary.getObjects().length ? columnsPrimary.getObjects() :\n        (columnsSecondary && columnsSecondary.getObjects().length ? columnsSecondary.getObjects() : []);\n\n    const headerConfig = [\n        { type: LEFT, section: rows[0], axis: rowAxis, headerFrom: takeHeaderFrom.row },\n        { type: RIGHT, section: rows[1], axis: rowAxis, headerFrom: takeHeaderFrom.row },\n        { type: TOP, section: columns[0], axis: colAxis, headerFrom: takeHeaderFrom.column },\n        { type: BOTTOM, section: columns[1], axis: colAxis, headerFrom: takeHeaderFrom.column }\n    ];\n\n    headerConfig.forEach((config, index) => {\n        let keys;\n        let length;\n        const {\n            type,\n            section,\n            axis,\n            headerFrom\n        } = config;\n\n        if (index < 2) {\n            keys = rowKeys;\n            length = rowProjections.length > 0 ? rowProjections.length : 1;\n        } else {\n            keys = columnKeys;\n            length = colProjections.length > 0 ? colProjections.length : 1;\n        }\n        keys = keys.map(arr => arr.map(val => resolver.valueParser()(val)));\n        if (section.length && headerFrom === type && axis && keys.length) {\n            const hContext = { axis, length, type };\n            let headers = [];\n            if (index < 2) {\n                hContext.keys = keys;\n                hContext.facet = facet.rows;\n                headers = headerPlaceholderGn(hContext, selectionObj, cells, labelManager);\n            } else {\n                hContext.facet = facet.columns;\n                hContext.keys = keys[0].map((key, i) => keys.map(e => e[i]));\n\n                headers = headerPlaceholderGn(hContext, selectionObj, cells, labelManager);\n            }\n            selectionObj[`${type}Headers`] = headers;\n        } else {\n            selectionObj[`${type}Headers`] = null;\n        }\n    });\n    return selectionObj;\n};\n\n/**\n * Generates matrices\n *\n * @param {Object} config Configuration to generate matrices\n * @param {Array} matrices Matrices containing the set of visual units and axes units\n * @param {Object} cells Contains a collection of the cells\n * @param {Object} labelManager smart label instance\n * @return {Object} contains a collection of matrices\n */\nexport const generateMatrices = (context, matrices, cells, labelManager) => {\n    const {\n        unitHeight,\n        unitWidth,\n        facetsAndProjections,\n        normalizedRows,\n        normalizedColumns,\n        selection,\n        axisFrom,\n        facet,\n        encoders,\n        resolver\n     } = context;\n    const placeholderContext = {\n        fields: {\n            rows: normalizedRows,\n            columns: normalizedColumns\n        },\n        matrices,\n        facetsAndProjections,\n        selection,\n        axisFrom,\n        facet,\n        encoders,\n        resolver\n    };\n    // Generate placeholders for all matrices\n    const selectionObj = generatePlaceholders(placeholderContext, cells, labelManager);\n    const {\n        columnsPrimary,\n        columnsSecondary,\n        rowsPrimary,\n        rowsSecondary,\n        leftHeaders,\n        topHeaders,\n        bottomHeaders,\n        rightHeaders\n    } = selectionObj;\n    const [rowPrime, rowSec, colPrime, colSec] = [rowsPrimary, rowsSecondary, columnsPrimary, columnsSecondary]\n        .map(d => (d ? d.getObjects() : []));\n    const [leftFacets, rightFacets] = [leftHeaders, rightHeaders]\n        .map(e => (e ? e.getObjects()\n                        .map(f => f.getObjects()) : []));\n    let rowPriority = rowSec.length ? 1 : -1;\n    rowPrime.length && rowPriority++;\n    let colPriority = colSec.length ? 1 : -1;\n    colPrime.length && colPriority++;\n\n    // Compute left matrix using left headers and the axes on the rows\n    let leftMatrix = leftFacets.length ? leftFacets.map((d, i) => {\n        rowPrime[i] = rowPrime[i] ? [rowPrime[i]] : [];\n        return [...d, ...rowPrime[i]];\n    }) : (rowPrime ? rowPrime.map(d => [d]) : []);\n\n    // Compute right matrix using right headers and the axes on the rows\n    const rightMatrix = rowSec.length ? rowSec.map((d, i) => [d, ...(rightFacets[i] || [])]) : (rightFacets.length ?\n        rightFacets.map(d => [...d]) : []);\n\n    const topMatrix = [];\n    if (topHeaders) {\n        const headers = topHeaders.getObjects();\n        headers.forEach((e) => {\n            const innerHeaders = e.getObjects();\n            innerHeaders.forEach((x, i) => {\n                topMatrix[i] = topMatrix[i] || [];\n                topMatrix[i].push(x);\n            });\n        });\n    }\n    // Compute top matrix using the top headers and axes on the columns\n    if (colPrime.length) {\n        topMatrix.push(colPrime);\n    }\n\n    // Bottom and right matrices are prepared using the user config.\n    let bottomMatrix = [];\n    if (colSec.length) {\n        bottomMatrix.push(colSec);\n    }\n    const currentBottomLength = bottomMatrix.length;\n    if (bottomHeaders) {\n        const headers = bottomHeaders.getObjects();\n        headers.forEach((e) => {\n            const innerHeaders = e.getObjects();\n            innerHeaders.forEach((x, i) => {\n                bottomMatrix[i + currentBottomLength] = bottomMatrix[i + currentBottomLength] || [];\n                bottomMatrix[i + currentBottomLength].push(x);\n            });\n        });\n    }\n\n    if (!leftMatrix.length && !rightMatrix.length) {\n        const cell = new cells.BlankCell();\n        cell.setAvailableSpace(unitWidth, unitHeight);\n        leftMatrix = [[cell]];\n    }\n\n    if (!topMatrix.length && (!bottomMatrix.length || !bottomMatrix[0].length)) {\n        const cell = new cells.BlankCell();\n        cell.setAvailableSpace(unitWidth, unitHeight);\n        bottomMatrix = [[cell]];\n    }\n\n    return {\n        rows: [leftMatrix, rightMatrix],\n        columns: [topMatrix, bottomMatrix],\n        selectionObj,\n        colPriority,\n        rowPriority\n    };\n};\n\n/**\n * Computes matrices for a group\n *\n * @param {Object} datamodel on which the matrices are to be computed\n * @param {Object} config configuration of the matrices\n * @param {Object} layerRegistry contains the registered layers\n * @return {Object} conputed matrices\n * @memberof MatrixResolver\n */\nexport const computeMatrices = (context, config) => {\n    const {\n        resolver,\n        datamodel,\n        componentRegistry,\n        encoders\n    } = context;\n    const {\n            globalConfig,\n            selection,\n            transform\n        } = config;\n    const groupBy = globalConfig.autoGroupBy;\n    const { smartlabel: labelManager } = resolver.dependencies();\n    const fieldMap = datamodel.getFieldsConfig();\n    const layerConfig = resolver.layerConfig();\n    const registry = resolver.registry();\n    const { fields: normalizedRows } = resolver.horizontalAxis();\n    const { fields: normalizedColumns } = resolver.verticalAxis();\n    const otherEncodings = resolver.optionalProjections(config, layerConfig);\n    const facetsAndProjections = resolver.getAllFields();\n    const matrixGnContext = {\n        // Configuration to be passed to generate the  different matrices.\n        // A common config is used for both value matrices and other matrices\n        normalizedColumns,\n        normalizedRows,\n        facetsAndProjections,\n        layers: layerConfig,\n        fieldMap,\n        otherEncodings,\n        encoders,\n        facet: globalConfig.facet || {},\n        axisFrom: globalConfig.axisFrom || {},\n        selection,\n        resolver\n    };\n    const cells = {\n        GeomCell: resolver.getCellDef(registry.GeomCell),\n        AxisCell: resolver.getCellDef(registry.AxisCell),\n        BlankCell: resolver.getCellDef(registry.BlankCell),\n        TextCell: resolver.getCellDef(registry.TextCell)\n    };\n    const isRowSizeEqual = isDistributionEqual(normalizedRows);\n    const isColumnSizeEqual = isDistributionEqual(normalizedColumns);\n\n    resolver.colCells({});\n    resolver.rowCells({});\n    resolver.datamodelTransform(transform || {});\n\n    // Cell creation begins here\n    resolver.resetSimpleAxes();\n\n    const {\n        entryCellMap\n    } = resolver.cacheMaps();\n    const newCacheMap = {\n        exitCellMap: entryCellMap,\n        entryCellMap: new Map()\n    };\n\n    resolver.cacheMaps(newCacheMap);\n\n    const valueCellContext = {\n        config: globalConfig,\n        suppliedLayers: encoders.simpleEncoder.serializeLayerConfig(resolver.layerConfig()),\n        resolver,\n        cell: cells.GeomCell,\n        encoder: encoders.simpleEncoder,\n        newCacheMap,\n        detailFields: config.detail\n    };\n    const fieldsConfig = datamodel.getFieldsConfig();\n    let groupedModel = datamodel;\n    if (!groupBy.disabled) {\n        const fields = getFieldsFromSuppliedLayers(valueCellContext.suppliedLayers, datamodel.getFieldsConfig());\n        const allFields = extractFields(facetsAndProjections, fields);\n\n        const dimensions = allFields.filter(field =>\n            fieldsConfig[field] && fieldsConfig[field].def.type === FieldType.DIMENSION);\n        const aggregationFns = groupBy.measures;\n        const measureNames = Object.keys(datamodel.getFieldspace().getMeasure());\n        const nearestAggFns = retrieveNearestGroupByReducers(datamodel, ...measureNames);\n        const resolvedAggFns = mergeRecursive(nearestAggFns, aggregationFns);\n\n        groupedModel = datamodel.groupBy(dimensions.length ? dimensions : [''], resolvedAggFns).project(allFields);\n    }\n\n    // return a callback function to create the cells from the matrix\n    const cellCreator = resolver.valueCellsCreator(valueCellContext);\n    // Creates value matrices from the datamodel and configs\n    const valueMatrixInfo = getMatrixModel(groupedModel, facetsAndProjections, cellCreator);\n\n    resolver.cacheMaps().exitCellMap.forEach((placeholder) => {\n        placeholder.remove();\n    });\n    resolver.cacheMaps().exitCellMap.clear();\n    resolver.valueMatrix(valueMatrixInfo.matrix);\n\n    const { xAxes, yAxes } = mutateAxesFromMap(resolver.cacheMaps(), resolver.axes());\n\n    resolver.axes({\n        x: xAxes,\n        y: yAxes\n    });\n    const store = resolver.store();\n\n    [xAxes, yAxes].forEach((axesArr, type) => {\n        const stateProps = {};\n        axesArr = axesArr || [];\n        axesArr.forEach((axes, idx) => {\n            axes.forEach((axis, axisIndex) => {\n                stateProps[`${idx}${axisIndex}`] = null;\n            });\n        });\n        store.append(`${STATE_NAMESPACES.GROUP_GLOBAL_NAMESPACE}.domain.${type ? 'y' : 'x'}`, stateProps);\n    });\n    resolver.createUnits(componentRegistry, config);\n\n    const matrices = {\n        valuesMatrix: valueMatrixInfo,\n        axesMatrix: resolver.axes()\n    };\n    // Create all matrices\n    const {\n        rows,\n        columns,\n        selectionObj,\n        rowPriority,\n        colPriority\n    } = generateMatrices(matrixGnContext, matrices, cells, labelManager);\n\n    resolver.rowMatrix(rows);\n    resolver.columnMatrix(columns);\n\n    return {\n        rows: resolver.rowMatrix(),\n        columns: resolver.columnMatrix(),\n        values: resolver.valueMatrix(),\n        isColumnSizeEqual,\n        isRowSizeEqual,\n        priority: {\n            row: rowPriority,\n            col: colPriority\n        },\n        selection: selectionObj,\n        dataModels: {\n            groupedModel,\n            parentModel: datamodel\n        }\n    };\n};\n","export const RESOLVER_PROPS = {\n    dependencies: {},\n    units: {},\n    datamodelTransform: {},\n    layerConfig: {},\n    matrixLayers: {},\n    colCells: {},\n    rowCells: {},\n    rowMatrix: {},\n    columnMatrix: {},\n    valueMatrix: {},\n    encoder: {},\n    valueParser: {}\n};\n","import { VisualUnit } from '@chartshq/visual-unit';\nimport { generateGetterSetters, STATE_NAMESPACES } from 'muze-utils';\nimport {\n     initializeCacheMaps,\n     headerCreator,\n     extractUnitConfig,\n     setFacetsAndProjections\n} from './group-utils';\nimport {\n     ROW, COL, LEFT, RIGHT, COLOR, SIZE, SHAPE, DETAIL, CELL, X_AXES, Y_AXES, ENTRY_CELLS, EXIT_CELLS, INITIALIZED,\n     AXIS, UNIT, BEFORE_UPDATE, UPDATED, VALUE_MATRIX, FACET_HEADERS\n} from '../enums/constants';\nimport { createValueCells, computeMatrices } from './cell-creator';\nimport { RESOLVER_PROPS } from './resolver-props';\n\n/**\n * Resolves the matrices from configuration provided\n *\n * @export\n * @class MatrixResolver\n */\nexport default class MatrixResolver {\n\n    /**\n     * Creates an instance of MatrixResolver.\n     * @param {Object} dependencies needed to run the resolver\n     * @memberof MatrixResolver\n     */\n    constructor (dependencies) {\n        this._registry = {};\n        this._layerConfig = [];\n        this._matrixLayers = [];\n        this._dependencies = dependencies;\n        this._rowMatrix = [];\n        this._columnMatrix = [];\n        this._valueMatrix = [];\n        this._facets = { rowFacets: [], colFacets: [] };\n        this._projections = { rowProjections: [], colProjections: [] };\n        this._datamodelTransform = {};\n        this._units = [];\n        this._cacheMaps = {};\n        this._axes = {\n            x: {},\n            y: {},\n            color: [],\n            size: [],\n            shape: []\n        };\n        generateGetterSetters(this, RESOLVER_PROPS);\n        this.cacheMaps(initializeCacheMaps());\n    }\n\n    /**\n     * Set:  Registers placeholders, Get: return {Object} those placeholders\n     *\n     * @param {Object} placeholders cells that will construct the group\n     * @return {Object} Either current instance or the set of placeholders\n     * @memberof MatrixResolver\n     */\n    registry (...placeholders) {\n        if (placeholders.length) {\n            Object.entries(placeholders[0]).forEach((val) => {\n                this._registry[val[0]] = val[1];\n            });\n            return this;\n        }\n        return this._registry;\n    }\n\n    /**\n     * Used to set the layer config from outside or get current layer info\n     *\n     * @param {Object} type configuration of layer provided externally\n     * @return {Object} either the layer or current instance\n     * @memberof MatrixResolver\n     */\n    cacheMaps (...maps) {\n        if (maps.length) {\n            [CELL, X_AXES, Y_AXES, ENTRY_CELLS, EXIT_CELLS].forEach((e) => {\n                this._cacheMaps[`${e}Map`] = maps[0][`${e}Map`] || this._cacheMaps[`${e}Map`];\n            });\n            return this;\n        }\n        return this._cacheMaps;\n    }\n\n    /**\n     * Used to set the layer config from outside or get current layer info\n     *\n     * @param {Object} type configuration of layer provided externally\n     * @return {Object} either the layer or current instance\n     * @memberof MatrixResolver\n     */\n    axes (...axes) {\n        if (axes.length) {\n            this._axes = Object.assign({}, this._axes, axes[0]);\n            return this;\n        }\n        return this._axes;\n    }\n\n    /**\n     *\n     *\n     * @param {*} facets\n     *\n     * @memberof MatrixResolver\n     */\n    facets (...facets) {\n        if (facets.length) {\n            Object.entries(facets[0]).forEach((e) => {\n                this._facets[e[0]] = e[1];\n            });\n            return this;\n        }\n        return this._facets;\n    }\n\n    /**\n     *\n     *\n     * @param {*} projections\n     *\n     * @memberof MatrixResolver\n     */\n    projections (...projections) {\n        if (projections.length) {\n            Object.entries(projections[0]).forEach((e) => {\n                this._projections[e[0]] = e[1];\n            });\n            return this;\n        }\n        return this._projections;\n    }\n\n    /**\n     *\n     *\n     * @param {*} config\n     * @param {*} layerConfig\n     *\n     * @memberof MatrixResolver\n     */\n    optionalProjections (config, layerConfig) {\n        const otherEncodings = {};\n        const optionalProjections = [];\n        const otherEncodingTypes = [SIZE, COLOR, SHAPE];\n\n        otherEncodingTypes.forEach((type) => {\n            if (config[type] && config[type].field) {\n                const enc = config[type];\n                otherEncodings[type] = enc.field;\n                optionalProjections.push(enc.field);\n            }\n        });\n\n        if (config[DETAIL]) {\n            optionalProjections.push(...config.detail);\n        }\n\n        if (layerConfig.length) {\n            layerConfig.forEach((layer) => {\n                if (layer.encoding) {\n                    Object.values(layer.encoding).forEach((enc) => {\n                        if (enc && optionalProjections.indexOf(enc.field) === -1) {\n                            optionalProjections.push(enc.field ? enc.field : enc);\n                        }\n                    });\n                }\n            });\n        }\n        this.projections({ optionalProjections });\n        return otherEncodings;\n    }\n\n    /**\n     * return the normalized set of rows and facets and projections\n     *\n     * @param {Object} rows parameters needed to set horizontal axis consisiting of rows\n     * @return {Object} facets, projections and normalized rows\n     * @memberof MatrixResolver\n     */\n    horizontalAxis (rows, encoder) {\n        if (rows) {\n            this._horizontalAxis = setFacetsAndProjections(this, { type: ROW, fields: rows }, encoder);\n            return this;\n        }\n        return this._horizontalAxis;\n    }\n\n    /**\n     * return the normalized set of columns and facets and projections\n     *\n     * @param {Object} columns parameters needed to set vertical axis consisiting of columns\n     * @return {Object} facets, projections and normalized columns\n     * @memberof MatrixResolver\n     */\n    verticalAxis (columns, encoder) {\n        if (columns) {\n            this._verticalAxis = setFacetsAndProjections(this, { type: COL, fields: columns }, encoder);\n            return this;\n        }\n        return this._verticalAxis;\n    }\n\n    /**\n     * Gets the class definition of a particular cell type(if the particular type has been extended, that particular\n     * definition is returned)\n     *\n     * @param {Object} cell cell whose class definition is to be retrieved\n     * @return {Object} cell definition\n     * @memberof MatrixResolver\n     */\n    getCellDef (cell) {\n        const registry = this.registry();\n\n        Object.values(registry).forEach((e) => {\n            if (e.prototype instanceof cell) {\n                cell = e;\n            }\n        });\n        return cell;\n    }\n\n    /**\n     * return a visual cell creator along with its axis information to be injected to the datamodel creation\n     * function\n     *\n     * @param {Object} GeomCell Type of cell to be created\n     * @return {Object} Created cell\n     * @memberof MatrixResolver\n     */\n    valueCellsCreator (context) {\n        // reset matrix layers\n        this.matrixLayers([]);\n\n        return (datamodel, fieldInfo, facets) => createValueCells(context, datamodel, fieldInfo, facets);\n    }\n\n    /**\n     * Callback to be applied on each cell of a matrix of a particular type\n     *\n     * @param {string} matrixType type of matrix on which callback is to be applied\n     * @param {Function} callback function to be applied to each cell\n     * @memberof MatrixResolver\n     */\n    forEach (matrixType, callback) {\n        this[matrixType]().forEach((row, rIndex) => {\n            row.forEach((col, cIndex) => {\n                callback(rIndex, cIndex, col);\n            });\n        });\n    }\n\n    /**\n     *\n     *\n     *\n     * @memberof MatrixResolver\n     */\n    getAllFields () {\n        const retObj = this.projections();\n\n        Object.entries(this.facets()).forEach((e) => {\n            retObj[e[0]] = e[1];\n        });\n        return retObj;\n    }\n\n    /**\n     *\n     *\n     * @memberof MatrixResolver\n     */\n    resetSimpleAxes () {\n        return this.axes({\n            x: new Set(),\n            y: new Set()\n        });\n    }\n\n    /**\n     *\n     *\n     * @param {*} componentRegistry\n     * @param {*} config\n     * @memberof MatrixResolver\n     */\n    createUnits (componentRegistry, config) {\n        const {\n            globalConfig,\n            alias\n        } = config;\n        const {\n            layerRegistry,\n            sideEffectRegistry\n        } = componentRegistry;\n        const {\n            smartlabel: smartLabel,\n            lifeCycleManager\n        } = this.dependencies();\n        // Provide the source for the matrix\n        const units = [[]];\n        // Setting unit configuration\n        const unitConfig = extractUnitConfig(globalConfig || {});\n        const globalState = VisualUnit.getState()[0];\n        const globalStates = {};\n        const store = this.store();\n        this.forEach(VALUE_MATRIX, (i, j, el) => {\n            let unit = el.source();\n            if (!unit) {\n                const namespace = `${i}${j}`;\n\n                unit = VisualUnit.create({\n                    layerRegistry,\n                    sideEffectRegistry\n                }, {\n                    smartLabel,\n                    lifeCycleManager\n                });\n                globalStates[namespace] = null;\n                unit.metaInf({\n                    rowIndex: i,\n                    colIndex: j,\n                    namespace\n                });\n                unit.store(store);\n                el.source(unit);\n            }\n            !units[i] && (units[i] = []);\n            units[i][j] = unit;\n            unit.parentAlias(alias);\n            unit.valueParser(this.valueParser());\n            el.config(unitConfig);\n        });\n\n        for (const key in globalState) {\n            store.append(`${STATE_NAMESPACES.UNIT_GLOBAL_NAMESPACE}.${key}`, globalStates);\n        }\n\n        lifeCycleManager.notify({ client: units, action: INITIALIZED, formalName: UNIT });\n        return this.units(units);\n    }\n\n    /**\n     *\n     *\n     * @param {*} config\n     * @memberof MatrixResolver\n     */\n    setDomains (config, datamodel, encoders) {\n        const {\n            color,\n            shape,\n            size,\n            globalConfig\n        } = config;\n        const groupBy = globalConfig.autoGroupBy;\n        const {\n            rowFacets,\n            colFacets\n        } = this.getAllFields();\n        const encoding = {\n            color,\n            shape,\n            size\n        };\n        const facetFields = [...rowFacets.map(e => e.toString()), ...colFacets.map(e => e.toString())];\n        const retContext = {\n            domains: encoders.simpleEncoder.getRetinalFieldsDomain(datamodel, encoding, facetFields, groupBy),\n            axes: this.axes(),\n            encoding\n        };\n        encoders.retinalEncoder.setCommonDomain(retContext);\n        return this;\n    }\n\n    resetFacetsAndProjections () {\n        this._facets = {};\n        this._projections = {};\n        return this;\n    }\n\n    /**\n     *\n     *\n     *\n     * @memberof MatrixResolver\n     */\n    getRetinalAxes () {\n        const {\n            color,\n            shape,\n            size\n        } = this.axes();\n\n        return {\n            color: [...color],\n            shape: [...shape],\n            size: [...size]\n        };\n    }\n\n    /**\n     *\n     *\n     * @param {*} type\n     *\n     * @memberof MatrixResolver\n     */\n    getSimpleAxes (type) {\n        return this.axes()[`${type}`];\n    }\n\n    /**\n     *\n     *\n     * @param {*} datamodel\n     * @param {*} config\n     * @memberof MatrixResolver\n     */\n    createRetinalAxes (fieldsConfig, config, encoders) {\n        const layerConfig = this.layerConfig();\n        this.optionalProjections(config, layerConfig);\n        const retinalAxes = encoders.retinalEncoder.createAxis({\n            fieldsConfig,\n            config,\n            axes: this.axes()\n        });\n        const {\n            lifeCycleManager\n        } = this.dependencies();\n\n        [COLOR, SHAPE, SIZE].forEach((e) => {\n            this.axes()[e] = retinalAxes[e];\n        });\n\n        lifeCycleManager.notify({ client: this.axes(), action: INITIALIZED, formalName: AXIS });\n        lifeCycleManager.notify({ client: this.units(), action: BEFORE_UPDATE, formalName: UNIT });\n\n        const units = [];\n        const matrixLayers = this.matrixLayers();\n\n        this.forEach(VALUE_MATRIX, (i, j, el) => {\n            el.axes(retinalAxes);\n            el.source() && el.source().retinalFields(config);\n            el.layerDef(encoders.retinalEncoder.getLayerConfig(config, matrixLayers[i][j]));\n            el.updateModel();\n\n            units.push(el.source());\n        });\n\n        lifeCycleManager.notify({ client: units, action: UPDATED, formalName: UNIT });\n        return this;\n    }\n\n    /**\n     *\n     *\n     * @param {*} placeholders\n     * @param {*} fieldNames\n     *\n     * @memberof MatrixResolver\n     */\n    createHeaders (placeholders, fieldNames, config) {\n        let bottomLeft = [];\n        let bottomRight = [];\n        const {\n            rows,\n            columns\n        } = placeholders;\n        const {\n            smartlabel: labelManager,\n            lifeCycleManager\n        } = this.dependencies();\n        const {\n            showHeaders,\n            classPrefix\n        } = config;\n        const TextCell = this.getCellDef(this.registry().TextCell);\n        const BlankCell = this.getCellDef(this.registry().BlankCell);\n        const [leftRows, rightRows] = rows;\n        const [topCols, bottomCols] = columns;\n        const rowHeaders = fieldNames.rows;\n        const blankCellCreator = cell => new BlankCell().config({ show: cell.config().show });\n\n        // Headers and footers are created based on the rows. Thereafter, using the column information\n        // they are tabularized into the current structure\n        const headers = {\n            left: headerCreator(leftRows, rowHeaders[0], showHeaders ? TextCell : BlankCell,\n                { classPrefix, labelManager }),\n            right: headerCreator(rightRows, rowHeaders[1], showHeaders ? TextCell : BlankCell,\n                { classPrefix, labelManager })\n        };\n        const footers = {\n            left: leftRows.length > 0 ? leftRows[0].map(blankCellCreator) : [],\n            right: rightRows.length > 0 ? rightRows[0].map(blankCellCreator) : []\n        };\n        const [topLeft, topRight] = [LEFT, RIGHT].map(type => topCols.map((col, i) => {\n            if (i === topCols.length - 1) {\n                return headers[type];\n            }\n            return footers[type];\n        }));\n\n        // Creating only bottom matrices if there is no information on the top\n        if (topCols.length === 0) {\n            [bottomLeft, bottomRight] = [LEFT, RIGHT].map(type => bottomCols.map((col, i) => {\n                if (i === 0) {\n                    return headers[type];\n                }\n                return footers[type];\n            }));\n        } else {\n            bottomLeft = bottomCols.map(() => (leftRows.length > 0 ? leftRows[0].map(blankCellCreator) : []));\n            bottomRight = bottomCols.map(() => (rightRows.length > 0 ? rightRows[0].map(blankCellCreator) : []));\n        }\n\n        lifeCycleManager.notify({\n            client: [topLeft, topRight, bottomLeft, bottomRight],\n            action: INITIALIZED,\n            formalName: FACET_HEADERS\n        });\n\n        return { topLeft, topRight, bottomLeft, bottomRight };\n    }\n\n    /**\n     *\n     *\n     * @param {*} datamodel\n     * @param {*} config\n     * @param {*} componentRegistry\n     * @param {*} encoders\n     *\n     * @memberof MatrixResolver\n     */\n    getMatrices (datamodel, config, componentRegistry, encoders) {\n        const context = {\n            datamodel,\n            componentRegistry,\n            encoders,\n            resolver: this\n        };\n\n        return computeMatrices(context, config);\n    }\n\n    store (...params) {\n        if (params.length) {\n            this._store = params[0];\n            return this;\n        }\n        return this._store;\n    }\n}\n","/**\n * This is a wrapper class over the matrix of cells which gets created in visual group. Visual Group creates left,\n * right, bottom and top and center matrices and wraps them using this class.\n *\n * @public\n * @class ValueMatrix\n */\nclass ValueMatrix {\n\n    /**\n     * Creates an instance of ValueMatrix.\n     *\n     * @param {Array} matrixArr Matrix array.\n     */\n    constructor (matrixArr) {\n        const instancesById = {};\n\n        this.matrix(matrixArr || []);\n        this.filter(() => true);\n\n        this.each((el, rIdx, cIdx) => {\n            const cellValue = el.valueOf();\n            if (cellValue && cellValue.id) {\n                const id = cellValue.id();\n                instancesById[id] = {\n                    instance: cellValue,\n                    rowIndex: rIdx,\n                    colIndex: cIdx\n                };\n            }\n        });\n\n        this.instancesById(instancesById);\n    }\n\n    instancesById (...id) {\n        if (id.length) {\n            this._instancesById = id[0];\n            return this;\n        }\n        return this._instancesById;\n    }\n\n    /**\n     * Returns the array of matrices contained in this instance.\n     *\n     * @public\n     * @return {Array} Array of matrices.\n     */\n    matrix (...matrix) {\n        if (matrix.length) {\n            this._matrix = matrix[0];\n            return this;\n        }\n        return this._matrix;\n    }\n\n    /**\n     * Sets a filter criteria. This filter criteria gets applied when each function is called.\n     *\n     * @public\n     * @param {Function} fn Filter function.\n     *\n     * @return {ValueMatrix} Instance of value matrix.\n     */\n    filter (...fn) {\n        if (fn.length) {\n            this._filterFn = fn[0];\n            return this;\n        }\n        return this._filterFn;\n    }\n\n    /**\n     * Returns the total width occupied by all the cells of the matrix.\n     *\n     * @return {Number} Width of the matrix.\n     */\n    width () {\n        let rowWidth = 0;\n\n        this.matrix().forEach((row) => {\n            let currentRowWidth = 0;\n            row.forEach((cell) => {\n                currentRowWidth += cell.getLogicalSpace().width;\n            });\n            rowWidth = Math.max(rowWidth, currentRowWidth);\n        });\n        return rowWidth;\n    }\n\n    /**\n     * Returns the total width occupied by all the cells of the matrix.\n     *\n     * @return {Number} Width of the matrix.\n     */\n    height () {\n        let rowHeight = 0;\n\n        this.matrix().forEach((row) => {\n            let currentRowHeight = 0;\n            row.forEach((cell) => {\n                currentRowHeight = Math.max(currentRowHeight, cell.getLogicalSpace().height);\n            });\n            rowHeight += currentRowHeight;\n        });\n        return rowHeight;\n    }\n\n    /**\n     * Iterates through the two dimensional matrix array and calls the given callback function with the cell instance,\n     * row index, column index and the matrix array.\n     *\n     * @param {Function} fn Callback function which will get called for every cell.\n     * @return {ValueMatrix} Instance of the value matrix.\n     */\n    each (fn) {\n        const matrix = this.matrix();\n        const filterFn = this.filter();\n\n        matrix.forEach((row, rIndex) => {\n            row.forEach((col, cIndex) => {\n                if (filterFn(col)) {\n                    fn(col, rIndex, cIndex, matrix);\n                }\n            });\n        });\n        return this;\n    }\n\n    findPlaceHolderById (id) {\n        return this.instancesById()[id];\n    }\n}\n\nexport default ValueMatrix;\n","import { VisualUnit } from '@chartshq/visual-unit';\nimport { STATE_NAMESPACES, CommonProps } from 'muze-utils';\nimport { BaseLayer } from '@chartshq/visual-layer';\nimport { getEncoder, getBorders } from '../group-helper';\nimport { RetinalEncoder } from '../encoder';\nimport { registerDomainChangeListener, unsubscribeChangeListeners } from './change-listener';\nimport ValueMatrix from './value-matrix';\n\nexport const createUnitState = (context) => {\n    const [globalState] = VisualUnit.getState();\n    const store = context.store();\n    store.append(STATE_NAMESPACES.UNIT_GLOBAL_NAMESPACE, globalState);\n};\n\nexport const initializeGlobalState = (context) => {\n    const globalState = context.constructor.getState()[0];\n    const store = context.store();\n    store.append(STATE_NAMESPACES.GROUP_GLOBAL_NAMESPACE, globalState);\n};\n\nexport const createLayerState = (context) => {\n    const [globalState] = BaseLayer.getState();\n    context.store().append(STATE_NAMESPACES.LAYER_GLOBAL_NAMESPACE, globalState);\n};\n\nconst sanitizeRetinalConfig = (retinalConf) => {\n    const conf = {};\n    for (const key in retinalConf) {\n        const confValue = retinalConf[key];\n        if (typeof confValue === 'string' || !confValue) {\n            conf[key] = {\n                field: retinalConf[key]\n            };\n        } else {\n            conf[key] = confValue;\n        }\n    }\n    return conf;\n};\n\nexport const setMatrixInstances = (context, placeholder) => {\n    let {\n        values,\n        rows,\n        columns\n    } = placeholder;\n    values = values || [];\n    rows = rows || [];\n    columns = columns || [];\n    context._composition.matrices = {\n        value: new ValueMatrix(values),\n        left: new ValueMatrix(rows[0]),\n        right: new ValueMatrix(rows[1]),\n        top: new ValueMatrix(columns[0]),\n        bottom: new ValueMatrix(columns[1])\n    };\n\n    context._dependencies.throwback.commit(CommonProps.MATRIX_CREATED, true);\n    return context;\n};\n\nexport const createMatrices = (context) => {\n    const rows = context.rows();\n    const columns = context.columns();\n    const color = context.color();\n    const datamodel = context.data();\n    const size = context.size();\n    const detail = context.detail();\n    const layers = context.layers();\n    const transform = context.transform();\n    const config = context.config();\n    const shape = context.shape();\n\n    // Get the resolver for the matrices\n    const resolver = context.resolver();\n    resolver.store(context.store());\n    resolver.valueParser(context.valueParser());\n    // Prepare configuration for matrix preparation\n    let matrixConfig = {\n        selection: context.selection(),\n        alias: context.alias(),\n        globalConfig: config || {},\n        rows,\n        columns,\n        detail,\n        layers,\n        transform\n    };\n\n    unsubscribeChangeListeners(context);\n\n    const retinalConfig = sanitizeRetinalConfig({\n        color,\n        shape,\n        size\n    });\n\n    matrixConfig = Object.assign(matrixConfig, retinalConfig);\n    // Create the encoders for the group\n    const encoders = {};\n    encoders.retinalEncoder = new RetinalEncoder();\n    encoders.simpleEncoder = getEncoder(layers);\n    resolver.encoder(encoders.simpleEncoder);\n\n    // Set the group type\n    context.groupType(encoders.simpleEncoder.constructor.type());\n\n    // Get sanitized fields as instances of the Vars Class\n    const fields = encoders.simpleEncoder.fieldSanitizer(datamodel, matrixConfig);\n    encoders.simpleEncoder.setAxisAndHeaders(config ? config.axisFrom : {}, fields);\n    // Setting layers for the code\n    layers && resolver.layerConfig(layers);\n    // Set the row and column axes\n    resolver.horizontalAxis(fields.rows, encoders).verticalAxis(fields.columns, encoders);\n    // Getting the placeholders\n    const placeholderInfo = resolver.getMatrices(datamodel, matrixConfig, context.registry(), encoders);\n    context._groupedDataModel = placeholderInfo.dataModels.groupedModel;\n    // Set the selection object\n    context.selection(placeholderInfo.selection);\n\n    // Create retinal axes\n    resolver.createRetinalAxes(placeholderInfo.dataModels.parentModel.getFieldsConfig(), retinalConfig,\n            encoders);\n\n    // Domains are evaluated for each of the axes for commonality\n    resolver.setDomains(matrixConfig, placeholderInfo.dataModels, encoders);\n\n    // Create matrix instances\n    setMatrixInstances(context, placeholderInfo);\n\n    // Prepare corner matrices\n    context.cornerMatrices(resolver.createHeaders(placeholderInfo, fields, config));\n\n    // Set placeholder information\n    context.placeholderInfo(placeholderInfo);\n\n    context._composition.axes = resolver.axes();\n    context.metaData({\n        border: getBorders(placeholderInfo, encoders.simpleEncoder)\n    });\n\n    resolver.encoder().unionUnitDomains(context);\n\n    registerDomainChangeListener(context);\n    return context;\n};\n","import { STATE_NAMESPACES } from 'muze-utils';\n\nexport const setupChangeListeners = (context) => {\n    const store = context.store();\n\n    store.registerChangeListener([`${STATE_NAMESPACES.GROUP_GLOBAL_NAMESPACE}.domain.x`], () => {\n        const groupAxes = context.resolver().axes();\n        groupAxes.x.forEach(axes => axes.forEach((axis) => {\n            axis.render();\n        }));\n    });\n\n    store.registerChangeListener([`${STATE_NAMESPACES.GROUP_GLOBAL_NAMESPACE}.domain.y`], () => {\n        const groupAxes = context.resolver().axes();\n        groupAxes.y.forEach(axes => axes.forEach((axis) => {\n            axis.render();\n        }));\n    });\n};\n\nexport const registerDomainChangeListener = (context) => {\n    const store = context.store();\n    store.registerChangeListener([`${STATE_NAMESPACES.UNIT_GLOBAL_NAMESPACE}.domain`], () => {\n        context.resolver().encoder().unionUnitDomains(context);\n    }, false, {\n        namespace: 'group',\n        key: 'unionDomain'\n    });\n};\n\nexport const unsubscribeChangeListeners = (context) => {\n    context.store().unsubscribe({\n        namespace: 'group',\n        key: 'unionDomain'\n    });\n};\n","import { ROWS, COLUMNS, COLOR, SHAPE, SIZE, DETAIL, LAYERS, TRANSFORM, CONFIG } from '../enums/constants';\n\nexport const PROPS = {\n    alias: {},\n    data: {},\n    cornerMatrices: {\n        defaultValue: {\n            topLeft: [],\n            topRight: [],\n            bottomLeft: [],\n            bottomRight: []\n        }\n    },\n    groupType: {},\n\n    metaData: {\n        defaultValue: {\n            border: {}\n        }\n    },\n    placeholderInfo: {\n        defaultValue: {}\n    },\n    resolver: {},\n    valueParser: {\n        defaultValue: val => val\n    },\n    registry: {\n        sanitization: (context, value) => {\n            if (context.resolver) {\n                context.resolver().registry(value.cellRegistry);\n            }\n            return value;\n        }\n    },\n    selection: {},\n    [CONFIG]: {},\n    [ROWS]: {},\n    [COLUMNS]: {},\n    [COLOR]: {},\n    [SHAPE]: {},\n    [SIZE]: {},\n    [DETAIL]: {},\n    [LAYERS]: {},\n    [TRANSFORM]: {}\n};\n","import { generateGetterSetters } from 'muze-utils';\nimport localOptions from './local-options';\nimport { SimpleGroup } from '../simple-group';\nimport {\n    MatrixResolver,\n    findInGroup\n} from '../group-helper';\nimport { createUnitState, initializeGlobalState, setMatrixInstances, createMatrices, createLayerState } from './helper';\nimport { setupChangeListeners } from './change-listener';\nimport { PROPS } from './props';\nimport {\n    CONFIG,\n    MOUNT,\n    RETINAL,\n    Y\n} from '../enums/constants';\n\n/**\n * VisualGroup is instantiated by canvas for creating {@link VisualUnit} and axes instances.It creates the\n * the matrix of visual units and axes. It also creates the layout instance which manages the allocation\n * of space of matrices.\n *\n * To get instance of visual group,\n * ```\n *      const visualGroup = canvas.composition().visualGroup;\n * ```\n * @public\n *\n * @class VisualGroup\n */\nclass VisualGroup extends SimpleGroup {\n\n    /**\n     * Creates an instance of VisualGroup. Requires dependencies and other registry options for placeholders\n     * and layers that create individual units.\n     *\n     * @param {Object} registry Key value pair of compostions for the group\n     * @param {Object} dependencies Dependencies needed to run the group\n     * @memberof VisualGroup\n     */\n    constructor (registry, dependencies) {\n        super();\n\n        const {\n            componentSubRegistry\n        } = registry;\n\n        this._dependencies = dependencies;\n        // Generate getter/setter methods for all properties of the class\n        // One can get each property by calling the method and can set it\n        // by passing paramaters for the same. Thus, one can chain setter\n        // getter methods.\n        generateGetterSetters(this, PROPS);\n        generateGetterSetters(this, localOptions);\n        // Populate the store with default values\n        // initialize group compositions\n        this._composition = {};\n        // store reference to data\n        this._data = [];\n        // store reference to mountpoint\n        this._mount = null;\n        // selection object that takes care of updating of components\n        this._selection = {};\n        // Create instance of matrix resolver\n        this.resolver(new MatrixResolver(this._dependencies));\n        // matrix instance store each of the matrices\n        setMatrixInstances(this, {});\n         // Getting indiviual registered items\n        this.registry({\n            layerRegistry: componentSubRegistry.layerRegistry.get(),\n            cellRegistry: componentSubRegistry.cellRegistry.get()\n        });\n    }\n\n    static getState () {\n        return [{\n            domain: {\n                x: {},\n                y: {},\n                radius: {}\n            }\n        }, {}];\n    }\n\n    store (...params) {\n        if (params.length) {\n            this._store = params[0];\n            initializeGlobalState(this);\n            createUnitState(this);\n            createLayerState(this);\n            // Register listeners\n            setupChangeListeners(this);\n            return this;\n        }\n        return this._store;\n    }\n\n    /**\n     * Return the instances of matrices created by the visual group.\n     *\n     * @return {Object} Instance of matrices.\n     */\n    matrixInstance (...matrices) {\n        if (matrices.length) {\n            return this;\n        }\n        return this.composition().matrices;\n    }\n\n    /**\n     * Returns the composition of visual group.\n     *\n     * @public\n     *\n     * @return {Object} Composition of visual group. It contains instance of matrices {@link ValueMatrix}\n     * and instances of axis.\n     * ```\n     *          {\n     *              matrices: {\n     *                  value: // Instance of center value matrix.\n     *                  left: // Instance of left value matrix\n     *                  right: // Instance of right value matrix\n     *                  bottom: // Instance of bottom value matrix\n     *                  top: // Instance of top value matrix.\n     *              },\n     *              axes: {\n     *                  x: // Array of x axis.\n     *                  y: // Array of y axis\n     *                  color: // Array of color axis\n     *                  shape: // Array of shape axis\n     *                  size: // Array of size axis.\n     *              }\n     *          }\n     * ```\n     */\n    composition (...params) {\n        if (params.length) {\n            return this;\n        }\n        return this._composition;\n    }\n\n    /**\n     * Locks the model to prevent change listeners to be triggered until unlocked\n     *\n     * @return {Object} Instance of class VisualGroup\n     * @memberof VisualGroup\n     */\n    lockModel () {\n        this.store().model.lock();\n        return this;\n    }\n\n    /**\n     * Unlocks the model so that all change listeners can be triggered\n     *\n     * @return {Object} Instance of class VisualGroup\n     */\n    unlockModel () {\n        this.store().model.unlock();\n        return this;\n    }\n\n    /**\n     * Returns the channel name of the variable. Channels are rows, columns, color, shape and size.\n     *\n     * @public\n     * @param {string} variable Name of the variable.\n     *\n     * @return {string} Name of the channel.\n     */\n    where (variable) {\n        return findInGroup(variable, this.resolver().getAllFields());\n    }\n\n    /**\n     * Gets the axis instances of the visual group based on the given axis type.\n     *\n     * @public\n     * @param {string} type Type of axis. X,Y or retinal axes.\n     *\n     * @return {Array} Array of axis instances.\n     */\n    getAxes (type) {\n        if (type === RETINAL) {\n            return this.resolver().getRetinalAxes();\n        }\n        return this.resolver().getSimpleAxes(type);\n    }\n\n    /**\n     * Returns the instances of cells based on the given type. Type can be given as `row' or `col`.\n     *\n     * @public\n     * @return {Array} Two dimensional array of cells.\n     */\n    getCells (type) {\n        return this.resolver()[`${type}Cells`]();\n    }\n\n    getFieldsFromChannel (channel) {\n        const {\n            rowProjections,\n            colProjections\n        } = this.resolver().getAllFields();\n        return channel === Y ? rowProjections : colProjections;\n    }\n\n    getCellsByFacetKey (facetKey) {\n        const resolver = this.resolver();\n        const cells = resolver.rowCells()[facetKey] || resolver.colCells()[facetKey] || [];\n        return cells;\n    }\n\n    getAxesByFacetKey (axisType, facetKey) {\n        const resolver = this.resolver();\n        const cells = resolver.rowCells()[facetKey] || resolver.colCells()[facetKey];\n        const axes = cells[0].valueOf().axes()[axisType] || [];\n\n        return axes;\n    }\n\n    /**\n     * This method is used to return a serialized representation of the instance's properties.\n     *\n     * @return {Object} Object with config proprties.\n     * @memberof VisualGroup\n     */\n    serialize () {\n        const store = this.store();\n\n        return {\n            [CONFIG]: store.get(CONFIG),\n            [MOUNT]: store.get(MOUNT)\n        };\n    }\n\n    /**\n     * Returns the grouped datamodel prepared by visual group. If there is no group by performed, then it returns the\n     * original data model passed to visual group.\n     *\n     * @return {DataModel} Grouped data model.\n     */\n    getGroupByData () {\n        return this._groupedDataModel;\n    }\n\n    createMatrices () {\n        createMatrices(this);\n    }\n}\n\nexport default VisualGroup;\n","import { PersistentBehaviour, SELECTION } from '@chartshq/muze-firebolt';\n\nexport default class SelectBehaviour extends PersistentBehaviour {\n    static formalName () {\n        return 'select';\n    }\n\n    setSelectionSet (addSet, selectionSet) {\n        if (addSet === null) {\n            selectionSet.reset();\n        } else if (addSet.length) {\n            // new add set\n            const existingRemoveSet = addSet.filter(d => selectionSet._set[d] === SELECTION.SELECTION_OLD_EXIT\n                || selectionSet._set[d] === SELECTION.SELECTION_NEW_EXIT);\n                // existing add set\n            if (existingRemoveSet.length) {\n                selectionSet.updateEntry();\n                selectionSet.add(existingRemoveSet);\n            } else {\n                selectionSet.updateExit();\n                selectionSet.remove(addSet);\n            }\n            const { exitSet } = selectionSet.getSets();\n            const mergedExitSet = [...new Set(exitSet[1]), ...new Set(exitSet[0])];\n            const completeSetCount = selectionSet.getCompleteSet().length;\n            if (exitSet[1].length !== completeSetCount && mergedExitSet.length === completeSetCount) {\n                selectionSet.reset();\n            }\n        } else {\n            selectionSet.remove(selectionSet.getCompleteSet());\n        }\n        return this;\n    }\n}\n","import { BEHAVIOURS, ACTIONS } from '@chartshq/muze-firebolt';\n\nconst CLASSPREFIX = 'muze';\n\nexport const actionBehaviourMap = {\n    [ACTIONS.DRAG]: {\n        target: `.${CLASSPREFIX}-gradient-rect`,\n        behaviours: [BEHAVIOURS.BRUSH]\n    },\n    [ACTIONS.HOVER]: {\n        target: [`.${CLASSPREFIX}-legend-columns`],\n        behaviours: [BEHAVIOURS.HIGHLIGHT]\n    },\n    [ACTIONS.CLICK]: {\n        target: [`.${CLASSPREFIX}-legend-columns`],\n        behaviours: [BEHAVIOURS.SELECT]\n    }\n};\n\nexport const propagationBehaviourMap = {\n    [BEHAVIOURS.SELECT]: BEHAVIOURS.FILTER,\n    [BEHAVIOURS.BRUSH]: BEHAVIOURS.HIGHLIGHT\n};\n","import * as BEHAVIOURS from '../enums/behaviours';\nimport * as sideEffects from '../enums/side-effects';\n\nexport const behaviourEffectMap = {\n    [BEHAVIOURS.BRUSH]: [sideEffects.SELECTIONBOX, {\n        name: sideEffects.Highlighter,\n        options: {\n            strategy: 'fade'\n        }\n    }],\n    [BEHAVIOURS.HIGHLIGHT]: [sideEffects.Highlighter],\n    select: [{\n        name: sideEffects.Highlighter,\n        options: {\n            strategy: 'fade'\n        }\n    }]\n};\n\nexport const propagationSideEffects = {\n    [BEHAVIOURS.BRUSH]: [{\n        name: sideEffects.Highlighter,\n        options: {\n            strategy: 'fade'\n        }\n    }],\n    [BEHAVIOURS.HIGHLIGHT]: [{\n        name: sideEffects.Highlighter,\n        options: {\n            strategy: 'fade'\n        }\n    }],\n    [BEHAVIOURS.SELECT]: ['filter']\n};\n\n","export const BRUSH = 'brush';\nexport const HIGHLIGHT = 'highlight';\nexport const TOOLTIP = 'tooltip';\nexport const FILTER = 'filter';\nexport const SELECT = 'select';\n\n","export const SELECTIONBOX = 'selectionBox';\nexport const Highlighter = 'highlighter';\n\n","export const CLASSPREFIX = 'muze';\nexport const IDFIELD = '__id__';\nexport const CONFIG = 'config';\nexport const DATAMODEL = 'dataModel';\nexport const AXES = 'axes';\nexport const LAYERDEFS = 'layerDef';\nexport const WIDTH = 'width';\nexport const MAXWIDTH = 'max-width';\nexport const HEIGHT = 'height';\nexport const MOUNTPOINT = 'mountPoint';\nexport const GRIDLINEPARENTGROUPCLASS = 'grid-lines';\nexport const TRANSFORM = 'transform';\nexport const CONSOLIDATED = 'consolidated';\nexport const FRAGMENTED = 'fragmented';\nexport const DEFAULTCOLOR = '#F44336';\nexport const DEFAULTSIZE = 50;\nexport const DEFAULTSHAPE = 'circle';\nexport const STEP = 'step';\nexport const GRADIENT = 'gradient';\nexport const ORDINAL = 'ordinal';\nexport const SCALE_FUNCTIONS = {\n    size: 'getSize',\n    shape: 'getShape',\n    color: 'getColor'\n};\nexport const TOP = 'top';\nexport const LEFT = 'left';\nexport const RIGHT = 'right';\nexport const BOTTOM = 'bottom';\nexport const HORIZONTAL = 'horizontal';\nexport const VERTICAL = 'vertical';\nexport const CENTER = 'center';\nexport const VALUE = 'value';\nexport const PATH = 'path';\nexport const SHAPE = 'shape';\nexport const ICON = 'icon';\nexport const RECT = 'rect';\nexport const START = 'start';\nexport const UPPER = 'upper';\nexport const LOWER = 'lower';\nexport const END = 'end';\nexport const SIZE = 'size';\nexport const DISCRETE = 'discrete';\nexport const MEASURE = 'measure';\n\n","import { assembleModelFromIdentifiers, getDataModelFromRange } from 'muze-utils';\nimport { propagationBehaviourMap } from './action-behaviour-map';\nimport { propagationSideEffects } from './behaviour-effect-map';\nimport { STEP, GRADIENT, DISCRETE, MEASURE } from '../enums/constants';\n\nexport const propagate = (firebolt, action, selectionSet, config = {}) => {\n    let propagationData;\n    const type = firebolt.context.constructor.type();\n    const payload = config.payload;\n    const data = firebolt.context.data();\n    const metaData = firebolt.context.metaData();\n    const fieldType = metaData.getData().schema[0].type;\n\n    const propPayload = {};\n    const sourceId = firebolt.context._id;\n    propPayload.action = propagationBehaviourMap[action] || action;\n    propPayload.sideEffects = propagationSideEffects[action];\n    propPayload.sourceCanvas = firebolt.context.canvasAlias();\n    const isMutableAction = firebolt._actions.behavioural[propPayload.action].constructor.mutates();\n    if (payload.criteria === null) {\n        propagationData = null;\n    } else {\n        const entrySet = selectionSet.mergedEnter;\n        let values = data.filter(d => entrySet.uids.indexOf(d.id) !== -1).map(d => d.rawVal);\n        if (type === STEP || (type === DISCRETE && fieldType === MEASURE)) {\n            const field = Object.keys(payload.criteria || {})[0];\n            values = data.filter(d => entrySet.uids.indexOf(d.id) !== -1).map(d => d.range);\n            propagationData = values.length ? metaData.select((fields) => {\n                let check = false;\n                for (let i = 0; i < values.length; i++) {\n                    check = fields[field].value >= values[i][0] && fields[field].value <= values[i][1];\n                    if (check === true) {\n                        break;\n                    }\n                }\n                return check;\n            }, {\n                saveChild: false\n            }) : null;\n        } else if (type === GRADIENT) {\n            propagationData = getDataModelFromRange(metaData, payload.criteria);\n        } else if (values.length) {\n            propagationData = assembleModelFromIdentifiers(metaData, [payload.criteria[0], ...values.map(d => [d])]);\n        } else {\n            propPayload.criteria = null;\n            propagationData = metaData.select(() => true, {\n                saveChild: false\n            });\n        }\n    }\n\n    let propagateInterpolatedValues = false;\n\n    if (propagationData) {\n        const schema = propagationData.getSchema();\n        propagateInterpolatedValues = schema.every(d => d.type === MEASURE);\n    }\n\n    const propConfig = {\n        sourceId: `legend-${sourceId}`,\n        payload: propPayload,\n        criteria: propPayload.criteria === null ? null : propagationData,\n        isMutableAction,\n        propagateInterpolatedValues,\n        action: propPayload.action\n    };\n\n    metaData.propagate(propagationData, propConfig, true);\n};\n","import { Firebolt } from '@chartshq/muze-firebolt';\nimport { propagate } from './helper';\nimport { STEP, GRADIENT } from '../enums/constants';\n\n/**\n * This class manages the interactions of legend.\n * @export\n * @class LegendFireBolt\n * @extends {Firebolt}\n */\nexport class LegendFireBolt extends Firebolt {\n    constructor (...params) {\n        super(...params);\n        this.initializeSideEffects();\n    }\n\n    getPropagationSelectionSet (selectionSet) {\n        return selectionSet[0];\n    }\n\n    propagate (behaviourName, payload, selectionSet) {\n        propagate(this, behaviourName, selectionSet, {\n            payload\n        });\n    }\n\n    getAddSetFromCriteria (criteria) {\n        let values;\n        let uniqueIds;\n        const type = this.context.constructor.type();\n\n        if (criteria === null) {\n            uniqueIds = null;\n        } else if (type === STEP) {\n            values = Object.values(criteria);\n            uniqueIds = this.context.data().filter(d => values.indexOf(d.range) !== -1).map(d => d.id);\n        } else if (type === GRADIENT) {\n            uniqueIds = [];\n        } else {\n            values = criteria[1];\n            if (values) {\n                uniqueIds = this.context.data().filter(d => values.indexOf(d.rawVal) !== -1).map(d => d.id);\n            } else {\n                values = Object.values(criteria);\n                uniqueIds = this.context.data().filter(d => values.indexOf(d.range) !== -1).map(d => d.id);\n            }\n        }\n        return {\n            uids: uniqueIds,\n            model: null\n        };\n    }\n\n    getFullData () {\n        return null;\n    }\n}\n","import {\n    getEvent,\n    getD3Drag\n } from 'muze-utils';\n\n/**\n * Adds dragging action to the target element.\n * @param {firebolt} firebolt firebolt\n * @param {SVGElement} targetEl Element on which brushing action is needed.\n * @param {Array} behaviours Array of behaviours\n */\n/* istanbul ignore next */ const drag = firebolt => (targetEl, behaviours) => {\n    let startPos = {};\n    let endPos = {};\n    let payload;\n    const d3Drag = getD3Drag();\n    const context = firebolt.context;\n    const boundingBox = context.measurement().gradientDimensions;\n    const axisType = context.config().align === 'horizontal' ? 'x' : 'y';\n    const axisScale = context.axis().source().scale();\n    const rangeShifter = axisScale.range()[axisType === 'x' ? 0 : 1];\n\n    targetEl.call(d3Drag().on('start', () => {\n        const event = getEvent();\n        startPos = {\n            x: event.x,\n            y: event.y\n        };\n    }).on('drag', () => {\n        const event = getEvent();\n\n        endPos = {\n            x: event.x,\n            y: event.y\n        };\n        endPos.x = Math.max(0, Math.min(endPos.x, boundingBox.width));\n        endPos.y = Math.max(0, Math.min(endPos.y, boundingBox.height));\n\n        payload = {\n            criteria: {\n                [context.fieldName()]: [axisScale.invert(startPos[axisType] + rangeShifter * 2),\n                    axisScale.invert(endPos[axisType] + rangeShifter * 2)].sort((a, b) => a - b)\n            }\n        };\n        behaviours.forEach(behaviour => firebolt.dispatchBehaviour(behaviour, payload));\n    }).on('end', () => {\n        const event = getEvent();\n\n        endPos = {\n            x: event.x,\n            y: event.y\n        };\n        endPos.x = Math.max(0, Math.min(endPos.x, boundingBox.width));\n        endPos.y = Math.max(0, Math.min(endPos.y, boundingBox.height));\n        if (startPos[axisType] === endPos[axisType]) {\n            payload = {\n                criteria: {}\n            };\n        } else {\n            payload = {\n                criteria: {\n                    [context.fieldName()]: [axisScale.invert(startPos[axisType] + rangeShifter * 2),\n                        axisScale.invert(endPos[axisType] + rangeShifter * 2)].sort((a, b) => a - b)\n                }\n            };\n        }\n        behaviours.forEach(behaviour => firebolt.dispatchBehaviour(behaviour, payload));\n    }));\n};\n\nexport default drag;\n","import { getEvent } from 'muze-utils';\n\n/**\n * Adds mouse interactions to target element.\n * @param {Firebolt} Firebolt instance of firebolt.\n * @param {SVGElement} targetEl Element on which the event listeners will be attached.\n * @param {Array} behaviours Array of behaviours\n */\n/* istanbul ignore next */ const hover = firebolt => (targetEl, behaviours) => {\n    const dispatchBehaviour = function (args) {\n        const event = getEvent();\n        const payload = {\n            criteria: firebolt.context.getCriteriaFromData(args)\n        };\n        behaviours.forEach(behaviour => firebolt.dispatchBehaviour(behaviour, payload));\n        event.stopPropagation();\n    };\n\n    targetEl.on('mouseover', dispatchBehaviour)\n                    .on('mousemove', dispatchBehaviour)\n                    .on('mouseout', () => {\n                        const event = getEvent();\n                        behaviours.forEach(behaviour => firebolt.dispatchBehaviour(behaviour, {\n                            criteria: null\n                        }));\n                        event.stopPropagation();\n                    });\n};\n\nexport default hover;\n","/**\n * Adds mouse interactions to target element.\n * @param {VisualUnit} instance instance of visual unit.\n * @param {SVGElement} targetEl Element on which the event listeners will be attached.\n * @param {Array} behaviours Array of behaviours\n */\nconst click = firebolt => (targetEl, behaviours) => {\n    const dispatchBehaviour = function (args) {\n        const payload = {\n            criteria: firebolt.context.getCriteriaFromData(args)\n        };\n        behaviours.forEach(behaviour => firebolt.dispatchBehaviour(behaviour, payload));\n    };\n\n    targetEl.on('click', dispatchBehaviour);\n};\n\nexport default click;\n","import drag from './drag';\nimport hover from './hover';\nimport click from './click';\nimport * as ACTIONNAMES from '../../enums/actions';\n\nexport const physicalActions = {\n    [ACTIONNAMES.DRAG]: drag,\n    [ACTIONNAMES.HOVER]: hover,\n    [ACTIONNAMES.CLICK]: click\n};\n\n","export const DRAG = 'drag';\nexport const HOVER = 'hover';\nexport const SELECTIONDRAG = 'selectiondrag';\nexport const CLICK = 'click';\n","import {\n    getMousePos,\n    getEvent,\n    getD3Drag\n } from 'muze-utils';\nimport { HEIGHT, WIDTH, HORIZONTAL } from '../../enums/constants';\n\nconst getSelectionCriteria = (subject, axis, measures) => {\n    let criteria = [];\n    const {\n        axisScale,\n        axisType\n    } = axis;\n    const {\n        startPos,\n        endPos,\n        selectionBoxMeasure,\n        drawingInfMeasure,\n        offset\n    } = measures;\n    const subjectStartPoint = subject[axisType];\n\n    if (startPos[axisType] === endPos[axisType]) {\n        criteria = [];\n    } else if (subjectStartPoint + selectionBoxMeasure >= drawingInfMeasure + offset) {\n        criteria = [axisScale.invert(drawingInfMeasure + offset - selectionBoxMeasure),\n            axisScale.invert(drawingInfMeasure + offset)];\n    } else if (subjectStartPoint - offset < offset) {\n        criteria = [axisScale.invert(offset * 2), axisScale.invert(selectionBoxMeasure + offset * 2)];\n    } else {\n        criteria = [axisScale.invert(subjectStartPoint), axisScale.invert(subjectStartPoint + selectionBoxMeasure)];\n    }\n    axisType === 'x' ? criteria : criteria.reverse();\n    return criteria;\n};\n\nexport const selectionBoxDrag = firebolt => (targetEl, behaviours) => {\n    let startPos = {};\n    let payload;\n    const endPos = {};\n    const d3Drag = getD3Drag();\n    const context = firebolt.context;\n    const axisScale = context.axis().source().scale();\n    const axisType = context.config().align === HORIZONTAL ? 'x' : 'y';\n    const drawingInfMeasure = context.measurement().gradientDimensions[axisType === 'x' ?\n        WIDTH : HEIGHT];\n    const offset = axisScale.range()[axisType === 'x' ? 0 : 1];\n    const measures = {\n        drawingInfMeasure,\n        offset\n    };\n    let subject = {};\n\n    targetEl.call(d3Drag().on('start', function () {\n        const event = getEvent();\n        startPos = getMousePos(this, event.sourceEvent);\n        subject = event.subject;\n    }).on('drag', () => {\n        const event = getEvent();\n        const selectionBoxMeasure = subject[axisType === 'x' ? WIDTH : HEIGHT];\n\n        subject.x += event.dx;\n        subject.y += event.dy;\n\n        measures.selectionBoxMeasure = selectionBoxMeasure;\n        measures.startPos = startPos;\n        measures.endPos = endPos;\n        const criteria = getSelectionCriteria(subject, { axisScale, axisType }, measures);\n\n        payload = {\n            criteria: {\n                [context.fieldName()]: criteria\n            },\n            fadeOut: true\n        };\n        firebolt.dispatchBehaviour(behaviours[0], payload);\n    }).on('end', () => {\n        const event = getEvent();\n        const selectionBoxMeasure = subject[axisType === 'x' ? WIDTH : HEIGHT];\n        measures.selectionBoxMeasure = selectionBoxMeasure;\n        measures.startPos = startPos;\n        measures.endPos = endPos;\n        const criteria = getSelectionCriteria(event, { axisScale, axisType }, measures);\n        payload = {\n            criteria: {\n                [context.fieldName()]: criteria\n            },\n            fadeOut: true,\n            config: {\n                transition: {\n                    duration: 200\n                }\n            }\n        };\n        firebolt.dispatchBehaviour(behaviours[0], payload);\n    }));\n};\n\n","import { makeElement } from 'muze-utils';\nimport { SpawnableSideEffect } from '@chartshq/muze-firebolt';\nimport { CLASSPREFIX, HEIGHT, WIDTH, HORIZONTAL, RECT } from '../../../enums/constants';\nimport { SELECTIONBOX } from '../../../enums/side-effects';\nimport { selectionBoxDrag } from '../../physical/selection-box-drag';\nimport './styles.scss';\n\n/**\n * This class is used to create a selection box which is used by visual unit for brushing and\n * selection in the canvas.\n * @class SelectionBox\n */\n/* istanbul ignore next */ class SelectionBox extends SpawnableSideEffect {\n    static formalName () {\n        return SELECTIONBOX;\n    }\n\n    /**\n     * It returns the default configuration needed by selectionbox.\n     * @return {Object} Default configuration of the selection box.\n     */\n    static defaultConfig () {\n        return {\n            className: 'legend-selection-box',\n            classPrefix: CLASSPREFIX\n        };\n    }\n\n    /**\n     * Draws the selectionbox with the specified dimensions.\n     */\n    /* istanbul ignore next */ apply (selectionSet, payload) {\n        let x;\n        let y;\n        let width;\n        let height;\n        const firebolt = this.firebolt;\n        const context = firebolt.context;\n        const config = this.config();\n        const axis = context.axis().source();\n        const className = `${config.classPrefix}-${config.className}`;\n\n        const domain = payload.criteria[firebolt.context.fieldName()];\n        const axisScale = axis.scale();\n        const range = domain ? [axis.getScaleValue(domain[0]), axis.getScaleValue(domain[1])] : [];\n\n        const axisType = context.config().align === HORIZONTAL ? 'x' : 'y';\n\n        const gradientDimension = firebolt.context.measurement().gradientDimensions[axisType === 'x' ?\n            HEIGHT : WIDTH];\n\n        const rangeShifter = axisScale.range()[axisType === 'x' ? 0 : 1];\n        const legendGradContainer = context.getDrawingContext().svgContainer;\n        const legendSelGroup = makeElement(legendGradContainer, 'g', [1], `${config.classPrefix}-selection-box-group`);\n\n        if (firebolt.context.config().align === HORIZONTAL) {\n            x = range[0] - rangeShifter || 0;\n            y = 0;\n            width = range[1] - range[0] || 0;\n            height = gradientDimension;\n        } else {\n            x = 0;\n            y = range[1] - rangeShifter || 0;\n            height = range[0] - range[1] || 0;\n            width = gradientDimension;\n        }\n        const enterFn = function (el) {\n            selectionBoxDrag(firebolt)(el, ['brush']);\n        };\n        const selBox = makeElement(legendSelGroup, RECT, [{ domain, x, y, width, height }], className,\n            { enter: enterFn });\n        selBox.attr('y', y)\n                        .attr('x', x)\n                        .attr(WIDTH, width)\n                        .attr(HEIGHT, height);\n    }\n}\n\nexport default SelectionBox;\n\n","import { selectElement } from 'muze-utils';\n\nexport const strategies = (firebolt) => {\n    const context = firebolt.context;\n    const classed = (set, className, change) => {\n        const classPrefix = context.config().classPrefix;\n        selectElement(context.mount())\n                        .selectAll(`.${classPrefix}-legend-columns`)\n                        .filter(d => set.uids.indexOf(d.id) !== -1)\n                        .selectAll('div')\n                        .classed(className, change);\n    };\n\n    return {\n        fade: (set, config = {}) => {\n            const classPrefix = context.config().classPrefix;\n            if (!set.mergedEnter.length && !set.mergedExit.length) {\n                classed(set.completeSet, config.className || `${classPrefix}-legend-fadeout`, false);\n            } else {\n                classed(set.mergedExit, config.className || `${classPrefix}-legend-brighten`, false);\n                classed(set.mergedExit, config.className || `${classPrefix}-legend-fadeout`, true);\n                classed(set.mergedEnter, config.className || `${classPrefix}-legend-fadeout`, false);\n            }\n        },\n        brighten: (set, config = {}) => {\n            const classPrefix = context.config().classPrefix;\n            if (!set.mergedEnter.length && !set.mergedExit.length) {\n                classed(set.completeSet, config.className || `${classPrefix}-legend-brighten`, false);\n            } else {\n                classed(set.mergedEnter, config.className || `${classPrefix}-legend-brighten`, true);\n                classed(set.mergedExit, config.className || `${classPrefix}-legend-brighten`, false);\n            }\n        }\n    };\n};\n","import { GenericSideEffect } from '@chartshq/muze-firebolt';\nimport { strategies } from './strategies';\nimport { Highlighter } from '../../../enums/side-effects';\n\nexport default class LegendHighlighter extends GenericSideEffect {\n    constructor (...params) {\n        super(...params);\n        this._strategies = strategies(this.firebolt);\n        this._strategy = 'brighten';\n    }\n\n    static formalName () {\n        return Highlighter;\n    }\n\n    apply (selectionSet, payload, options = {}) {\n        const strategy = this._strategies[options.strategy || this._strategy];\n\n        strategy(selectionSet, this);\n    }\n}\n","import { mergeRecursive } from 'muze-utils';\n\nexport const PROPS = {\n    config: {\n        sanitization: (context, value) => mergeRecursive(context._config || {}, value)\n    },\n    data: {},\n    fieldName: {},\n    legendContainer: {},\n    measurement: {\n        sanitization: (context, value) => {\n            const measurement = mergeRecursive(context._measurement, value);\n            ['padding', 'border', 'margin'].forEach((space) => {\n                measurement[space] = Math.min(measurement[space] > 0 ? measurement[space] : 0,\n                     measurement.maxWidth * 0.1, measurement.maxHeight * 0.1);\n            });\n            return measurement;\n        }\n    },\n    logicalSpace: {},\n    metaData: {},\n    range: {\n        sanitization: (context, value) => {\n            context.scale().range(value);\n            context.resetLogicalSpace();\n            context.store().commit('range', value);\n            return value;\n        }\n    },\n    scale: {},\n    smartTicks: {},\n    store: {},\n    title: {\n        sanitization: (context, value) => mergeRecursive(context._title || {}, value)\n    },\n    valueParser: {\n        defaultValue: val => val\n    }\n};\n","import { getSymbol } from 'muze-utils';\nimport {\n    CENTER,\n    LEFT,\n    RIGHT\n} from '../enums/constants';\n\nexport const ALIGN = {\n    HORIZONTAL: 'horizontal',\n    VERTICAL: 'vertical'\n};\n\nexport const DEFAULT_MEASUREMENT = {\n    height: 30,\n    width: 30,\n    maxWidth: Infinity,\n    maxHeight: Infinity,\n    padding: 2,\n    margin: 2,\n    border: 1\n};\n\nexport const LEGEND_TITLE = {\n    text: '',\n    orientation: (pos) => {\n        if (pos === LEFT || pos === RIGHT) {\n            return LEFT;\n        } return CENTER;\n    }\n};\n\nexport const DEFAULT_CONFIG = {\n    classPrefix: 'muze',\n    borderStyle: 'solid',\n    borderColor: 'rgba(0,0,0,0)',\n    formatter: {\n        bounds: {\n            lower: 'less than',\n            upper: 'more than'\n        }\n    },\n    item: {\n        text: {\n            orientation: 'right',\n            width: 10,\n            formatter: (val, i, data, context) => context.valueParser()(val)\n        },\n        icon: {\n            className: 'legend-icon',\n            height: 20,\n            width: 20,\n            color: 'rgba(0,0,0,.5)',\n            type: 'square'\n        }\n    }\n};\n\n/**\n * Creates a map of pre defined icons\n *\n * @param {string} icon Accepts a icon name like 'square', 'cross', 'diamond' etc\n * @return {Object} icon object which can be used to draw the icons\n */\nexport const ICON_MAP = (icon) => {\n    if (icon && typeof (icon) === 'string') {\n        return getSymbol(icon);\n    } return icon;\n};\n","import { makeElement, numberInterpolator } from 'muze-utils';\n\nimport {\n    SCALE_FUNCTIONS,\n    WIDTH,\n    HEIGHT,\n    LEFT,\n    RIGHT,\n    TOP,\n    BOTTOM,\n    MAXWIDTH\n} from '../enums/constants';\n\n/**\n *\n *\n * @param {*} scale\n *\n */\nexport const getScaleInfo = (scale) => {\n    const scaleType = scale.constructor.type();\n    const domain = scale.uniqueValues();\n    const steps = scale.config().stops || 1;\n    const scaleFn = SCALE_FUNCTIONS[scaleType];\n\n    return { scaleType, domain, steps, scaleFn };\n};\n\n/**\n *\n *\n * @param {*} domain\n * @param {*} steps\n *\n */\nexport const getInterpolatedData = (domain, steps) => {\n    const domainForLegend = [];\n    const interpolatedFn = numberInterpolator()(domain[0], domain[1]);\n\n    for (let i = 0; i <= steps; i++) {\n        domainForLegend[i] = interpolatedFn(i / steps);\n    }\n    return domainForLegend;\n};\n\n/**\n *\n *\n * @param {*} container\n * @param {*} text\n * @param {*} measurement\n * @param {*} classPrefix\n */\nexport const titleCreator = (container, title, measurement, config) => {\n    const titleWidth = Math.min(measurement.maxWidth, measurement.width);\n\n    const titleContainer = makeElement(container, 'table', [1], `${config.classPrefix}-legend-title`)\n            .style(WIDTH, `${titleWidth}px`)\n            .style(HEIGHT, `${measurement.height}px`)\n            .style('border-bottom', `${measurement.border}px ${config.borderStyle} ${config.borderColor}`)\n            .style('text-align', title.orientation instanceof Function ?\n            title.orientation(config.position) : title.orientation);\n    return makeElement(titleContainer, 'td', [1], `${config.classPrefix}-legend-title-text`)\n                    .style(WIDTH, `${titleWidth}px`)\n                    .style(MAXWIDTH, `${titleWidth}px`)\n                    .style(HEIGHT, '100%')\n                    .style('line-height', 1)\n                    .style('padding', `${measurement.padding}px`)\n                    .text(title.text)\n                    .style('overflow-x', 'scroll')\n                    .node();\n};\n\n/**\n *\n *\n * @param {*} data\n * @param {*} prop\n * @param {*} labelManager\n *\n */\nexport const getMaxMeasures = (data, prop, labelManager) => {\n    let maxHeight = -Infinity;\n    let maxWidth = -Infinity;\n\n    data.forEach((item) => {\n        const value = prop ? item[prop] : item;\n        const space = labelManager.getOriSize(value);\n        maxHeight = Math.max(space.height + 2, maxHeight);\n        maxWidth = Math.max(space.width + 2, maxWidth);\n    });\n\n    return { height: maxHeight, width: maxWidth };\n};\n\n/**\n *\n *\n * @param {*} data\n * @param {*} prop\n * @param {*} labelManager\n *\n */\nexport const getItemMeasures = (context, prop, formatter) => {\n    const space = [];\n    const data = context.data();\n    const labelManager = context._labelManager;\n\n    data.forEach((item, index) => {\n        const value = prop ? item[prop] : item;\n        const { height, width } = labelManager.getOriSize(formatter(value, index, data, context));\n        space[index] = { height: height + 1, width: width + 1 };\n    });\n    return space;\n};\n\n/**\n *\n *\n * @param {*} textOrientation\n * @param {*} effPadding\n * @param {*} titleSpace\n *\n * @memberof Legend\n */\nexport const computeItemSpaces = (config, measures, data) => {\n    let totalHeight = 0;\n    let totalWidth = 0;\n    let maxItemSpaces = {\n        width: 0, height: 0\n    };\n    const {\n        effPadding,\n        titleWidth,\n        labelSpaces,\n        titleHeight,\n        maxWidth\n    } = measures;\n    const {\n        item,\n        align\n    } = config;\n    const {\n        icon,\n        text\n    } = item;\n    const textOrientation = text.orientation;\n    const itemSpaces = [];\n    const iconSpaces = [];\n    let maxIconWidth = 0;\n    labelSpaces.forEach((labelSpace, i) => {\n        const itemSpace = { width: 0, height: 0 };\n        const iconSpace = { width: 0, height: 0 };\n        const datum = data[i] || {};\n            // Compute each legend item height/width\n        if (textOrientation === LEFT || textOrientation === RIGHT) {\n            // Get label, icon and item widths\n            labelSpace.width += effPadding;\n            iconSpace.width = (datum.size ? 2 * Math.sqrt(datum.size / Math.PI) : icon.width) + effPadding;\n            maxIconWidth = Math.max(iconSpace.width, maxIconWidth);\n            itemSpace.width = labelSpace.width + maxIconWidth;\n\n            // Get label, icon and item heights\n            labelSpace.height = Math.max(labelSpace.height, icon.height) + effPadding;\n            iconSpace.height = labelSpace.height;\n            itemSpace.height = labelSpace.height;\n        } else {\n            // Get label, icon and item widths\n            labelSpace.width = Math.max(labelSpace.width, datum.size ? 2 * Math.sqrt(datum.size / Math.PI)\n            : icon.width) + effPadding;\n            iconSpace.width = labelSpace.width;\n            itemSpace.width = labelSpace.width;\n            maxIconWidth = Math.max(iconSpace.width, maxIconWidth);\n\n            // Get label, icon and item heights\n            labelSpace.height += effPadding;\n            iconSpace.height = icon.height + effPadding;\n            itemSpace.height = labelSpace.height + iconSpace.height;\n        }\n        // Compute height and width of legend for each alignment\n        if (align === 'horizontal') {\n            totalHeight = Math.max(totalHeight, itemSpace.height);\n        } else {\n            totalHeight += itemSpace.height;\n            totalWidth = Math.max(totalWidth, itemSpace.width, titleWidth);\n        }\n        maxItemSpaces = {\n            width: Math.max(itemSpace.width, maxItemSpaces.width),\n            height: Math.max(itemSpace.height, maxItemSpaces.height)\n        };\n        itemSpaces.push(itemSpace);\n        iconSpaces.push(iconSpace);\n    });\n    itemSpaces.forEach((itemSpace, i) => {\n        if (align === 'horizontal') {\n            itemSpace.height = totalHeight;\n            iconSpaces[i].width = maxIconWidth;\n            if (textOrientation === LEFT || textOrientation === RIGHT) {\n                labelSpaces[i].height = totalHeight;\n                iconSpaces[i].height = totalHeight;\n                itemSpaces[i].width = labelSpaces[i].width + maxIconWidth;\n            } else {\n                labelSpaces[i].width = maxIconWidth;\n                itemSpaces[i].width = maxIconWidth;\n                labelSpaces[i].width = maxIconWidth;\n            }\n            totalWidth = Math.max(totalWidth + itemSpaces[i].width);\n        } else {\n            itemSpace.width = Math.max(totalWidth, maxWidth);\n            if (textOrientation === TOP || textOrientation === BOTTOM) {\n                labelSpaces[i].width = totalWidth;\n                iconSpaces[i].width = totalWidth;\n                maxIconWidth = totalWidth;\n            } else {\n                const labelWidth = labelSpaces[i].width;\n                const newLabelWidth = (maxItemSpaces.width - maxIconWidth);\n                iconSpaces[i].width = maxIconWidth;\n                itemSpaces[i].width = labelSpaces[i].width + maxIconWidth;\n                labelSpaces[i].width = Math.max(labelWidth, newLabelWidth);\n                totalWidth = Math.max(totalWidth, itemSpace.width);\n            }\n        }\n    });\n    totalWidth = Math.ceil(Math.max(totalWidth, titleWidth)) + effPadding;\n    totalHeight += titleHeight + effPadding;\n    totalHeight = Math.ceil(totalHeight);\n    return { totalHeight, totalWidth, itemSpaces, iconSpaces, maxItemSpaces, maxIconWidth };\n};\n\n/**\n *\n *\n * @param {*} type\n * @param {*} scaleInfo\n * @param {*} domainInfo\n *\n */\nexport const getDomainBounds = (type, scaleInfo, domainInfo) => {\n    const {\n        scaleFn,\n        scaleType,\n        scale\n    } = scaleInfo;\n    const {\n        domain,\n        domainBounds,\n        domainLeg,\n        steps\n    } = domainInfo;\n    const ele = domain[type === 'lower' ? 0 : domain.length - 1];\n    const step = steps[type === 'lower' ? 0 : steps.length - 1];\n\n    return {\n        [scaleType]: scaleType === 'size' ? scale[scaleFn](ele) * scale.getScaleFactor() : scale[scaleFn](ele),\n        value: domainBounds[type],\n        id: type === 'lower' ? 0 : domainLeg.length + 2,\n        range: [ele, step]\n    };\n};\n","import {\n    makeElement,\n    selectElement,\n    getUniqueId,\n    getSmartComputedStyle,\n    generateGetterSetters,\n    mergeRecursive\n} from 'muze-utils';\nimport { behaviouralActions } from '@chartshq/muze-firebolt';\nimport * as legendBehaviours from '../firebolt/behavioural';\n\nimport { LegendFireBolt } from '../firebolt/legend-firebolt';\nimport { actionBehaviourMap } from '../firebolt/action-behaviour-map';\nimport { physicalActions } from '../firebolt/physical';\nimport * as sideEffects from '../firebolt/side-effects';\nimport { behaviourEffectMap } from '../firebolt/behaviour-effect-map';\nimport { VALUE, PATH, RIGHT, LEFT, TOP, BOTTOM } from '../enums/constants';\nimport { PROPS } from './props';\nimport { DEFAULT_MEASUREMENT, DEFAULT_CONFIG, LEGEND_TITLE } from './defaults';\nimport { getItemMeasures, titleCreator, computeItemSpaces } from './legend-helper';\n\n/**\n * Creates a Legend from the axes of a canvas\n *\n * @param {Object} dependencies : legend data\n * @class SimpleLegend\n */\nexport default class SimpleLegend {\n\n    /**\n     * Creates an instance of Legend.\n     * @param {Object} dependencies Set of dependencies required by the legend\n     * @memberof Legend\n     */\n    constructor (dependencies) {\n        this._data = [];\n        this._metaData = [];\n        this._mount = null;\n        this._fieldName = null;\n        this._title = Object.assign({}, LEGEND_TITLE);\n        this._metaData = null;\n        this._labelManager = dependencies.labelManager;\n        this._cells = dependencies.cells;\n        this._id = getUniqueId();\n        this._measurement = Object.assign({}, this.constructor.defaultMeasurement());\n        this._config = mergeRecursive({}, this.constructor.defaultConfig());\n\n        generateGetterSetters(this, PROPS);\n        this._computedStyle = getSmartComputedStyle(selectElement('body'),\n            `${this.config().classPrefix}-legend-item-info`);\n\n        this._firebolt = new LegendFireBolt(this, {\n            behavioural: Object.assign({}, behaviouralActions, legendBehaviours),\n            physical: physicalActions,\n            physicalBehaviouralMap: actionBehaviourMap\n        }, sideEffects, behaviourEffectMap);\n    }\n\n    id () {\n        return this._id;\n    }\n    /**\n     * Initializes an instance of the class\n     *\n     * @static\n     * @param {Object} dependencies Set of dependencies required by the legend\n     * @return {Instance} returns a new instance of Legend\n     * @memberof Legend\n     */\n    static create (dependencies) {\n        return new SimpleLegend(dependencies);\n    }\n\n    /**\n     *\n     *\n     * @static\n     *\n     * @memberof SimpleLegend\n     */\n    static defaultConfig () {\n        return DEFAULT_CONFIG;\n    }\n\n    /**\n     *\n     *\n     * @static\n     *\n     * @memberof SimpleLegend\n     */\n    static defaultMeasurement () {\n        return DEFAULT_MEASUREMENT;\n    }\n\n    /**\n     *\n     *\n     * @readonly\n     * @memberof SimpleLegend\n     */\n    firebolt (...params) {\n        if (params.length) {\n            return this;\n        }\n        return this._firebolt;\n    }\n\n    /**\n     *\n     *\n     *\n     * @memberof Legend\n     */\n    elemType () {\n        return PATH;\n    }\n\n    canvasAlias (...alias) {\n        if (alias.length) {\n            this._canvasAlias = alias[0];\n            return this;\n        }\n        return this._canvasAlias;\n    }\n\n    /**\n     *\n     *\n     *\n     * @memberof Legend\n     */\n    mount (...params) {\n        if (params.length) {\n            this._mount = params[0];\n            this.render();\n            return this;\n        }\n        return this._mount;\n    }\n\n    /**\n     *\n     *\n     * @param {*} effPadding\n     * @param {*} align\n     *\n     * @memberof Legend\n     */\n    getLabelSpaces () {\n        const {\n            item,\n            classPrefix\n        } = this.config();\n        this._labelManager.setStyle(getSmartComputedStyle(selectElement('body'),\n            `${classPrefix}-legend-item-info`));\n        return getItemMeasures(this, VALUE, item.text.formatter);\n    }\n\n    /**\n     * Sets the height and width of a legend based on provided max\n     * height and width and based on its contents\n     *\n     * @return {Instance} Current instance\n     * @memberof Legend\n     */\n    setLegendMeasures () {\n        const {\n            width,\n            height,\n            maxWidth,\n            maxHeight,\n            padding,\n            margin,\n            border\n        } = this.measurement();\n        const {\n            align\n        } = this.config();\n\n        // Effective padding, margin and padding\n        const effPadding = padding * 2;\n        const effBorder = border * 2;\n        const effMargin = margin * 2;\n\n        this.data(this.dataFromScale(this.scale()));\n        // Get space occupied by title\n        const titleSpace = this.getTitleSpace();\n        const titleHeight = titleSpace.height > 0 ? titleSpace.height + effPadding : 0;\n        const titleWidth = titleSpace.width + effPadding;\n\n        // Get space occupied by labels\n        const labelSpaces = this.getLabelSpaces(effPadding, align);\n        const {\n            totalHeight, totalWidth, itemSpaces, iconSpaces, maxItemSpaces, maxIconWidth\n        } = computeItemSpaces(this.config(),\n        { effPadding, titleWidth, labelSpaces, titleHeight, maxWidth, maxHeight }, this.data());\n\n        this.measurement({\n            width: Math.max(totalWidth, width) + effMargin + effBorder,\n            height: Math.max(totalHeight, height) + effMargin + effBorder,\n            labelSpaces,\n            iconSpaces,\n            itemSpaces,\n            maxItemSpaces,\n            maxIconWidth,\n            titleSpaces: {\n                width: Math.min(maxWidth, this.measurement().width) - effMargin - effBorder,\n                height: titleHeight\n            }\n        });\n        return this;\n    }\n\n    /**\n     * Returns the space occupied by the legend title\n     *\n     * @return {Object} Space occupied by title\n     * @memberof Legend\n     */\n    getTitleSpace () {\n        this._labelManager.setStyle(getSmartComputedStyle(selectElement('body'),\n                                                `${this.config().classPrefix}-legend-title`));\n        return this._labelManager.getOriSize(this.title().text ? this.title().text : '');\n    }\n\n    /**\n     * Creates the title for the legend\n     *\n     * @param {DOM} container Container made for the title\n     * @return {Selection} Title and it's node\n     * @memberof Legend\n     */\n    renderTitle (container) {\n        const { titleSpaces, border, padding, width, maxWidth } = this.measurement();\n        const { borderStyle, borderColor } = this.config();\n        return titleCreator(container, this.title(), {\n            height: titleSpaces.height,\n            width,\n            maxWidth,\n            border,\n            padding,\n            borderStyle,\n            borderColor\n        }, this.config());\n    }\n\n    /**\n     * Render the legend with its title\n     *\n     * @param {DOM} mountPoint Point where the legend and title are to be appended\n     * @return {Instance} Current instance of legend\n     * @memberof Legend\n     */\n    render () {\n        const firebolt = this.firebolt();\n        const {\n            classPrefix,\n            borderStyle,\n            borderColor,\n            position\n        } = this.config();\n        const {\n            maxWidth,\n            maxHeight,\n            width,\n            height,\n            margin,\n            border\n        } = this.measurement();\n        const legendContainer = makeElement(selectElement(this.mount()), 'div', [1], `${classPrefix}-legend-box`);\n        let marginPosition;\n        switch (position) {\n        case TOP:\n            marginPosition = `margin-${BOTTOM}`;\n            break;\n        case LEFT:\n            marginPosition = `margin-${RIGHT}`;\n            break;\n        case BOTTOM:\n            marginPosition = `margin-${TOP}`;\n            break;\n        default:\n            marginPosition = `margin-${LEFT}`;\n        }\n        legendContainer.classed(`${classPrefix}-legend-box-${this._id}`, true);\n        legendContainer.style('float', 'left');\n        // set height and width\n        legendContainer.style('width', `${Math.min(maxWidth, width) - margin * 2}px`)\n                        .style('height', `${Math.min(maxHeight, height) - margin * 2}px`)\n                        .style(`${marginPosition}`, `${margin}px`)\n                        .style('border', `${border}px ${borderStyle} ${borderColor}`);\n        this.legendContainer(legendContainer.node());\n\n        // create title\n        this.renderTitle(legendContainer);\n        firebolt.createSelectionSet(this.data().map(d => d.id));\n        return legendContainer;\n    }\n  /**\n     *\n     *\n     * @param {*} data\n     *\n     * @memberof StepLegend\n     */\n    getCriteriaFromData (data) {\n        const fieldName = this.fieldName();\n        const type = this.metaData().getData().schema[0].type;\n        if (type === 'measure') {\n            return {\n                [fieldName]: data.range\n            };\n        }\n        return [[fieldName], [data.rawVal]];\n    }\n}\n","import {\n    LEFT,\n    RIGHT,\n    START,\n    END,\n    TOP,\n    BOTTOM,\n    HORIZONTAL,\n    VERTICAL,\n    CENTER,\n    SHAPE,\n    VALUE\n} from '../enums/constants';\n\nconst legendOrientation = {\n    [HORIZONTAL]: {\n        datasets: data => ({\n            row: [1],\n            column: data\n        }),\n        itemContainerMeasures: (measurement) => {\n            const {\n                itemSpaces,\n                width\n            } = measurement;\n            return {\n                row: {\n                    width: `${width}px`,\n                    padding: `${0}px`\n                },\n                column: {\n                    width: (d, i) => `${itemSpaces[i].width}px`,\n                    padding: `${0}px`\n                }\n            };\n        },\n        getStepSpacesInfo: (measurement) => {\n            const { maxItemSpaces, height } = measurement;\n            return {\n                iconHeight: height,\n                iconWidth: maxItemSpaces.width,\n                stepPadding: {\n                    horizontal: true,\n                    vertical: false\n                }\n            };\n        }\n    },\n    [VERTICAL]: {\n        datasets: data => ({\n            row: data,\n            column: d => [d]\n        }),\n        itemContainerMeasures: (measurement, config) => {\n            const {\n                width\n            } = measurement;\n            const { padding } = config;\n\n            return {\n                row: {\n                    width: `${width}px`,\n                    padding: `${padding}px`\n                },\n                column: {\n                    width: `${width}px`,\n                    padding: `${0}px`\n                }\n            };\n        },\n        getStepSpacesInfo: (measurement) => {\n            const { maxItemSpaces, width } = measurement;\n            return {\n                iconHeight: maxItemSpaces.height,\n                iconWidth: width,\n                stepPadding: {\n                    horizontal: false,\n                    vertical: true\n                }\n            };\n        }\n    }\n};\n\nexport const positionConfig = {\n    [LEFT]: legendOrientation[VERTICAL],\n    [RIGHT]: legendOrientation[VERTICAL],\n    [TOP]: legendOrientation[HORIZONTAL],\n    [BOTTOM]: legendOrientation[HORIZONTAL]\n};\n\nexport const alignmentMap = {\n    [LEFT]: END,\n    [RIGHT]: START,\n    [TOP]: CENTER,\n    [BOTTOM]: CENTER\n};\n\n// Reverses data for step legend\nexport const stepData = data => ({\n    [LEFT]: data.reverse(),\n    [RIGHT]: data.reverse(),\n    [TOP]: data,\n    [BOTTOM]: data\n});\n\n// Changes the item layout based on the position of the text\nexport const itemStack = {\n    [LEFT]: [VALUE, SHAPE],\n    [RIGHT]: [SHAPE, VALUE],\n    [TOP]: [VALUE, SHAPE],\n    [BOTTOM]: [SHAPE, VALUE]\n};\n","import { makeElement, selectElement, applyStyle } from 'muze-utils';\nimport { ICON_MAP } from './defaults';\nimport { positionConfig, alignmentMap, itemStack } from './position-config';\nimport {\n    WIDTH,\n    HEIGHT,\n    CENTER,\n    VALUE,\n    RECT,\n    LEFT,\n    RIGHT\n} from '../enums/constants';\n\n/**\n *\n *\n * @param {*} container\n * @param {*} data\n * @param {*} legendInstance\n * @param {*} align\n *\n */\nexport const getItemContainers = (container, data, legendInstance) => {\n    const measurement = legendInstance.measurement();\n    const config = legendInstance.config();\n    const {\n        itemSpaces\n    } = measurement;\n    const {\n        classPrefix,\n        position\n    } = config;\n    const positionObj = positionConfig[position];\n    const datasets = positionObj.datasets(data);\n    const measures = positionObj.itemContainerMeasures(measurement, config);\n\n    const rows = makeElement(container, 'div', datasets.row, `${classPrefix}-legend-row`);\n    rows.style(HEIGHT, (d, i) => `${itemSpaces[i].height}px`);\n    rows.style(WIDTH, measures.row.width);\n    rows.style('padding', measures.row.padding);\n\n    const columns = makeElement(rows, 'div', datasets.column, `${classPrefix}-legend-columns`);\n    columns.style(WIDTH, measures.column.width);\n    columns.style('padding', measures.column.padding);\n\n    return columns;\n};\n\n/**\n *\n *\n * @param {*} container\n * @param {*} classPrefix\n * @param {*} data\n *\n * @memberof DiscreteLegend\n */\nexport const createLegendSkeleton = (context, container, classPrefix, data) => {\n    let gradWidth = 0;\n    let gradHeight = 0;\n    let maxGradHeight = 0;\n    let maxGradWidth = 0;\n    const measurement = context.measurement();\n    const {\n            margin,\n            border,\n            titleSpaces,\n            width,\n            height,\n            maxWidth,\n            maxHeight\n        } = measurement;\n\n    gradHeight = height - (titleSpaces.height + 2 * margin + 2 * border);\n    gradWidth = width - (margin * 2 + border * 2);\n\n    maxGradHeight = maxHeight - (titleSpaces.height + margin * 2 + border * 2);\n    maxGradWidth = maxWidth - (margin * 2 + border * 2);\n\n    let legendBody = makeElement(container, 'div', [1], `${classPrefix}-legend-body`);\n    legendBody.select(`.${classPrefix}-legend-overflow`).remove();\n        // Create a div with scroll when overflow\n    if (maxGradWidth && maxGradWidth < gradWidth) {\n        legendBody = legendBody.style(WIDTH, `${maxGradWidth}px`).style('overflow-x', 'scroll');\n    }\n        // Create a div with scroll when overflow\n    if (maxGradHeight && maxGradHeight < gradHeight) {\n        legendBody.style(HEIGHT, `${maxGradHeight}px`).style('overflow-y', 'scroll');\n    }\n\n    legendBody = makeElement(legendBody, 'div', [1], `${classPrefix}-legend-overflow`);\n\n    legendBody.style(WIDTH, `${gradWidth}px`);\n    legendBody.style(HEIGHT, `${gradHeight}px`);\n\n    const legendItem = getItemContainers(legendBody, data, context);\n    return { legendItem };\n};\n\n/**\n * Creates legend item based on alignment and text orientation\n *\n * @param {Selection} container Point where items are to be mounted\n * @return {Instance} Current instance\n * @memberof Legend\n */\nexport const createItemSkeleton = (context, container) => {\n    const {\n        classPrefix,\n        item\n    } = context.config();\n    const textOrientation = item.text.orientation;\n\n    const stack = itemStack[textOrientation];\n    const itemSkeleton = makeElement(container, 'div', (d, i) => stack.map(e => [e, d[e], d.color, d.size,\n        d.value, context.fieldName(), i]), `${classPrefix}-legend-item-info`);\n\n    const alignClass = alignmentMap[textOrientation];\n\n    itemSkeleton.classed(alignClass, true);\n    return { itemSkeleton };\n};\n\n/**\n *\n *\n * @param {*} measureType\n * @param {*} stepColorCheck\n */\nexport const applyItemStyle = (item, measureType, stepColorCheck, context) => {\n    const {\n        padding,\n        labelSpaces,\n        iconSpaces,\n        maxIconWidth\n    } = context.measurement();\n    const diff = stepColorCheck ? -padding * 2 : 0;\n\n    if (item[0] === VALUE) {\n        return `${labelSpaces[item[6]][measureType]}px`;\n    }\n    return `${measureType === 'width' && !stepColorCheck ? maxIconWidth : iconSpaces[item[6]][measureType] - diff}px`;\n};\n\n/**\n *\n *\n * @param {*} str\n *\n */\nconst checkPath = (str) => {\n    if (/^[mzlhvcsqta]\\s*[-+.0-9][^mlhvzcsqta]+/i.test(str) && /[\\dz]$/i.test(str) && str.length > 4) {\n        return true;\n    }\n    return false;\n};\n\n/**\n *\n *\n * @param {*} d\n * @param {*} elem\n */\nconst createShape = function (d, elem, defaultIcon, width, height) {\n    const groupElement = elem;\n    // const { shape, size, update } = d;\n    const size = d[3] || Math.min(width, height) * Math.PI;\n    const shape = d[1] || defaultIcon;\n\n    if (shape instanceof Promise) {\n        shape.then((res) => {\n            d.shape = res;\n            return createShape(d, elem);\n        });\n    } else if (shape instanceof Element) {\n        let newShape = shape.cloneNode(true);\n\n        if (newShape.nodeName.toLowerCase() === 'img') {\n            const src = newShape.src || newShape.href;\n            newShape = document.createElementNS('http://www.w3.org/2000/svg', 'image');\n            newShape.setAttribute('href', src);\n        }\n        const shapeElement = selectElement(newShape);\n        shapeElement.attr('transform', `scale(${size / 100})`);\n        return selectElement(groupElement.node().appendChild(newShape));\n    } else if (typeof shape === 'string') {\n        let pathStr;\n        if (checkPath(shape)) {\n            pathStr = shape;\n        } else {\n            pathStr = ICON_MAP(shape).size(size)();\n        }\n        return makeElement(groupElement, 'path', data => [data]).attr('d', pathStr);\n    }\n    d[1] = 'circle';\n    return createShape(d, elem, 'circle');\n};\n\n/**\n * Returns the icon of the legend item\n *\n * @param {Object} datum Data property attached to the item\n * @param {number} width width of the item\n * @param {number} height height of the item\n * @return {Object|string} returns the path string or the string name of the icon\n * @memberof Legend\n */\nexport const getLegendIcon = (datum, width, height, defaultIcon) => {\n    const icon = ICON_MAP(datum[1]);\n\n    if (icon) {\n        return icon.size(datum[3] || Math.min(width, height) * Math.PI);\n    }\n    return ICON_MAP(datum[3] ? 'circle' : defaultIcon).size(datum[3] || Math.min(width, height) * Math.PI);\n};\n\n/**\n *\n *\n */\nexport const renderIcon = (icon, container, datum, context) => {\n    const {\n        classPrefix,\n        iconHeight,\n        iconWidth,\n        maxIconWidth,\n        padding,\n        color\n    } = context;\n    const svg = makeElement(container, 'svg', f => [f], `${classPrefix}-legend-icon-svg`)\n    .attr(WIDTH, maxIconWidth)\n    .attr(HEIGHT, iconHeight)\n    .style(WIDTH, `${maxIconWidth}px`)\n    .style(HEIGHT, `${iconHeight}px`);\n\n    if (icon !== RECT) {\n        const group = makeElement(svg, 'g', [datum[1]], `${classPrefix}-legend-icon`);\n        createShape(datum, group, datum[3] ? 'circle' : 'square', iconWidth, iconHeight)\n                        .attr('transform', `translate(${maxIconWidth / 2 - padding} ${iconHeight / 2})`)\n                        .attr('fill', datum[2] || color);\n    } else {\n        makeElement(svg, RECT, [datum[1]], `${classPrefix}-legend-icon`)\n                        .attr('x', 0)\n                        .attr('y', 0)\n                        .attr(WIDTH, maxIconWidth)\n                        .attr(HEIGHT, iconHeight)\n                        .attr('fill', datum[2] || color);\n    }\n};\n\n/**\n * Renders the items in the legend i.e, icon and text\n *\n * @param {DOM} container Point where item is to be mounted\n * @memberof Legend\n */\nexport const renderDiscreteItem = (context, container) => {\n    const labelManager = context._labelManager;\n    const {\n           item,\n           classPrefix\n    } = context.config();\n    const {\n        maxIconWidth,\n        padding\n    } = context.measurement();\n    const {\n            width: iconWidth,\n            height: iconHeight,\n            color,\n            className\n        } = item.icon;\n\n    const textOrientation = item.text.orientation;\n    const formatter = item.text.formatter;\n\n    labelManager.useEllipsesOnOverflow(true);\n    applyStyle(container, {\n        width: d => applyItemStyle(d, WIDTH, false, context),\n        height: d => applyItemStyle(d, HEIGHT, false, context),\n        'text-align': CENTER,\n        padding: `${padding}px`\n    });\n\n    labelManager.setStyle(context._computedStyle);\n    const dataArr = container.data();\n    container.each(function (d, i) {\n        if (d[0] === VALUE) {\n            selectElement(this).text(formatter(d[1], i, dataArr, context))\n                            .style(`padding-${textOrientation === RIGHT ? LEFT : RIGHT}`, '0px');\n        } else {\n            // const icon = getLegendIcon(d, iconWidth, iconHeight, type);\n            selectElement(this).classed(`${classPrefix}-${className}`, true);\n            selectElement(this).classed(`${classPrefix}-${className}-${i}`, true);\n            renderIcon('circle', selectElement(this), d, {\n                classPrefix,\n                iconWidth,\n                // iconWidth: 2 * Math.sqrt(d[3] / Math.PI) || iconWidth,\n                iconHeight,\n                maxIconWidth,\n                padding,\n                color\n            });\n        }\n    });\n};\n\n/**\n* Renders the items in the legend i.e, icon and text\n*\n* @param {DOM} container Point where item is to be mounted\n* @memberof Legend\n*/\nexport const renderStepItem = (context, container) => {\n    const labelManager = context._labelManager;\n    const {\n      item,\n      position,\n      classPrefix\n   } = context.config();\n    const {\n      maxItemSpaces,\n      maxIconWidth,\n      padding\n   } = context.measurement();\n    const {\n       width,\n       height,\n       color\n   } = item.icon;\n    const {\n        formatter\n   } = item.text;\n\n    labelManager.useEllipsesOnOverflow(true);\n    const { iconHeight, iconWidth, stepPadding } = positionConfig[position].getStepSpacesInfo({\n        maxItemSpaces, height, width\n    });\n\n    applyStyle(container, {\n        width: d => applyItemStyle(d, WIDTH, stepPadding.horizontal, context),\n        height: d => applyItemStyle(d, HEIGHT, stepPadding.vertical, context),\n        'text-align': 'center',\n        padding: `${padding}px`\n    });\n\n    labelManager.setStyle(context._computedStyle);\n    const dataArr = container.data();\n    container.each(function (d, i) {\n        if (d[0] === VALUE) {\n            selectElement(this).text(formatter(d[1], i, dataArr, context));\n        } else {\n            renderIcon(RECT, selectElement(this), d, {\n                classPrefix,\n                iconWidth,\n                iconHeight,\n                maxIconWidth,\n                color\n            });\n        }\n    });\n};\n","import {\n    FieldType,\n    DimensionSubtype,\n    formatTemporal\n} from 'muze-utils';\nimport SimpleLegend from './simple-legend';\nimport { DISCRETE, LEFT, SIZE } from '../enums/constants';\nimport { getScaleInfo } from './legend-helper';\nimport { createLegendSkeleton, createItemSkeleton, renderDiscreteItem } from './renderer';\nimport '../styles.scss';\n\n/**\n * Creates a Legend from the axes of a canvas\n *\n * @param {Object} dependencies : legend data\n * @class Legend\n */\nexport default class DiscreteLegend extends SimpleLegend {\n\n    /**\n     * Initializes an instance of the class\n     *\n     * @static\n     * @param {Object} dependencies Set of dependencies required by the legend\n     * @return {Instance} returns a new instance of Legend\n     * @memberof Legend\n     */\n    static create (dependencies) {\n        return new DiscreteLegend(dependencies);\n    }\n\n    /**\n     *\n     *\n     * @static\n     *\n     * @memberof DiscreteLegend\n     */\n    static type () {\n        return DISCRETE;\n    }\n\n    /**\n     *\n     *\n     * @param {*} scale\n     *\n     * @memberof DiscreteLegend\n     */\n    dataFromScale (scale) {\n        const { scaleType, domain, scaleFn } = getScaleInfo(scale);\n        let domainForLegend = [...new Set(domain)];\n        const field = this.metaData().getFieldspace().fields[0];\n        const { type, subtype } = field.schema();\n\n        domainForLegend = domainForLegend.map((ele, i) => {\n            let value = 0;\n            let range = 0;\n            const rawVal = domainForLegend[i];\n            if (type === FieldType.MEASURE) {\n                value = (+domainForLegend[i]).toFixed(0);\n                const nextVal = domainForLegend[i + 1] ? +domainForLegend[i + 1] : +value;\n                range = [value, nextVal.toFixed(0)];\n            } else {\n                let domainVal = rawVal;\n                if (subtype === DimensionSubtype.TEMPORAL) {\n                    domainVal = formatTemporal(domainForLegend[i], field.minimumConsecutiveDifference());\n                }\n                value = domainVal;\n                range = [domainVal];\n            }\n            return {\n                [scaleType]: scale[scaleFn](ele),\n                value,\n                id: i,\n                range,\n                rawVal\n            };\n        }).filter(d => d.value !== null);\n\n        domainForLegend = scaleType === SIZE ? domainForLegend.sort((a, b) => a[scaleType] - b[scaleType])\n            : domainForLegend;\n        return domainForLegend;\n    }\n\n    /**\n     * Render the legend with its title\n     *\n     * @param {DOM} mountPoint Point where the legend and title are to be appended\n     * @return {Instance} Current instance of legend\n     * @memberof Legend\n     */\n    render () {\n        const firebolt = this.firebolt();\n        const data = this.data();\n        const { classPrefix } = this.config();\n        const legendContainer = super.render(this.mount());\n        // create Legend\n        const { legendItem } = createLegendSkeleton(this, legendContainer, classPrefix, data);\n        const { itemSkeleton } = createItemSkeleton(this, legendItem);\n        renderDiscreteItem(this, itemSkeleton);\n        legendContainer.selectAll('div').style('float', LEFT);\n        firebolt.mapActionsAndBehaviour();\n        firebolt.createSelectionSet(this.data().map(d => d.id));\n        return legendContainer;\n    }\n}\n","import { makeElement, applyStyle } from 'muze-utils';\nimport { ContinousAxis } from '@chartshq/muze-axis';\nimport { BOTTOM, RIGHT } from '../enums/constants';\nimport { ALIGN } from './defaults';\nimport '../styles.scss';\n\n/**\n *\n *\n * @param {*} data\n *\n */\nexport const getGradientDomain = (data) => {\n    if (typeof data[0].value === 'number') {\n        return data.reduce((accumulator, currentValue) =>\n            [Math.min(currentValue.value, accumulator[0]), Math.max(currentValue.value, accumulator[1])],\n                [Number.MAX_VALUE, Number.MIN_VALUE]);\n    }\n    return data.map(e => e.value);\n};\n\n/**\n *\n *\n * @param {*} container\n * @param {*} data\n * @param {*} domain\n *\n */\nexport const makeLinearGradient = (container, data, domain) => {\n    const defs = makeElement(container, 'defs', [1]);\n    const linearGradient = makeElement(defs, 'linearGradient', [1])\n                .attr('id', 'linear-gradient')\n                .attr('x1', '0%')\n                .attr('y2', '0%');\n    makeElement(linearGradient, 'stop', data, 'stop-gradient')\n                    .attr('offset', d => `${(d.value - domain[0]) * 100 / (domain[1] - domain[0])}%`)\n                    .attr('stop-color', d => d.color);\n    return linearGradient;\n};\n\n/**\n * Creates an axis cell with a linear axis for computing space and\n * creating gradient legend\n *\n * @return {AxisCell} Instance of Axis Cell for the gradient axis\n * @memberof Legend\n */\nexport const createAxis = (context) => {\n    const data = context.data();\n    const { align } = context.config();\n    const AxisCell = context._cells.AxisCell;\n    const newAxis = new ContinousAxis({\n        id: `legend-${context._id}`,\n        orientation: align === ALIGN.VERTICAL ? RIGHT : BOTTOM,\n        style: context._computedStyle,\n        nice: false,\n        showAxisName: false,\n        tickValues: data.map(d => d.value),\n        fixedBaseline: false,\n        labels: {\n            rotation: 0\n        }\n    }, { labelManager: context._labelManager });\n\n    newAxis.domain(getGradientDomain(data));\n    newAxis.range([1, 1]);\n    return new AxisCell().source(newAxis).config({\n        margin: { left: 0, bottom: 0, top: 0, right: 0 }\n    });\n};\n\n/**\n *\n *\n * @param {*} container\n * @param {*} data\n * @param {*} classPrefix\n *\n * @memberof GradientLegend\n */\nconst createLegendSkeleton = (container, classPrefix, data) => {\n    const domain = getGradientDomain(data);\n    const legendContainer = makeElement(container, 'div', [1], `${classPrefix}-legend-body`);\n    const legendGradSvg = makeElement(legendContainer, 'svg', [1], `${classPrefix}-gradient`);\n    const legendGradCont = makeElement(legendGradSvg, 'g', [1], `${classPrefix}-gradient-group`);\n    const linearGradient = makeLinearGradient(legendGradSvg, data, domain);\n    const legendRect = makeElement(legendGradCont, 'rect', [1], `${classPrefix}-gradient-rect`);\n\n    return {\n        legendContainer,\n        legendGradCont,\n        legendGradSvg,\n        linearGradient,\n        legendRect\n    };\n};\n\n/**\n * Renders the axis for the gradient\n *\n * @param {Selection} container Point where axis is to be mounted\n * @param {number} height Height for axis\n * @param {number} width Width for axis\n * @memberof Legend\n */\nexport const renderAxis = (context, container, height, width) => {\n    const axis = context.axis();\n\n    axis.setAvailableSpace(width, height);\n    axis.render(container.node());\n    axis.source().render();\n};\n\n/**\n * Renders gradient legends\n *\n * @param {Selection} container Point where the legend is to be appended\n * @memberof GradientLegend\n */\nexport const renderGradient = (context, container) => {\n    let gradHeight = 0;\n    let gradWidth = 0;\n    const {\n        align,\n        classPrefix,\n        item\n    } = context.config();\n    const data = context.data();\n    // Create the skeleton for the legend\n    const {\n        legendContainer,\n        legendGradSvg,\n        legendGradCont,\n        linearGradient,\n        legendRect\n    } = createLegendSkeleton(container, classPrefix, data);\n    const labelDim = context.axis().source().getAxisDimensions().tickDimensions;\n    const {\n        padding,\n        margin,\n        border,\n        titleSpaces,\n        maxItemSpaces,\n        maxHeight,\n        maxWidth,\n        height,\n        width\n    } = context.measurement();\n    const gradientDimensions = {};\n\n    gradHeight = Math.floor(height - (titleSpaces.height + 2 * margin + 2 * border));\n    gradWidth = Math.floor(width - (margin * 2 + border * 2));\n\n    if (align === ALIGN.HORIZONTAL) {\n        gradientDimensions.height = item.icon.height;\n        gradientDimensions.width = gradWidth - 2 * padding - labelDim.width / 2;\n        linearGradient.attr('x2', '100%').attr('y1', '0%');\n        legendGradCont.attr('transform', `translate( ${labelDim.width / 2} 0)`);\n        renderAxis(context, legendContainer, gradHeight - item.icon.height - padding, gradWidth - 2 * padding - 1);\n        legendContainer.classed(`${classPrefix}-overflow-x`, width > maxWidth);\n\n        applyStyle(legendContainer, {\n            height: `${maxItemSpaces.height + border + padding}px`,\n            width: `${Math.min(width, maxWidth)}px`,\n            padding: `${padding}px`\n        });\n\n        legendRect.attr('height', gradientDimensions.height);\n        legendRect.attr('width', gradientDimensions.width - labelDim.width / 2);\n    } else {\n        gradientDimensions.height = gradHeight - 2 * padding - labelDim.height / 2;\n        gradientDimensions.width = item.icon.width;\n        linearGradient.attr('x2', '0%').attr('y1', '100%');\n        legendGradCont.attr('transform', `translate(0 ${labelDim.height / 2})`);\n        renderAxis(context, legendContainer, gradHeight - 2 * padding - 1, gradWidth - item.icon.width - padding * 2);\n        legendContainer.classed(`${classPrefix}-overflow-y`, height > maxHeight);\n        applyStyle(legendContainer, {\n            height: `${Math.min(height, maxHeight)}px`,\n            width: `${width}px`,\n            padding: `${padding}px`\n        });\n        legendRect.attr('height', gradientDimensions.height - labelDim.height / 2);\n        legendRect.attr('width', gradientDimensions.width);\n    }\n\n    // Apply Styles to the legend plot area\n    applyStyle(legendGradSvg, {\n        height: `${gradientDimensions.height}px`,\n        width: `${gradientDimensions.width}px`\n    });\n\n        // Apply styles to the legend rect\n    applyStyle(legendRect, {\n        fill: 'url(#linear-gradient)'\n    });\n    legendGradSvg.attr('height', gradientDimensions.height);\n    legendGradSvg.attr('width', gradientDimensions.width);\n\n    context.measurement({\n        gradientDimensions\n    });\n    context._legendGradientSvg = legendGradSvg;\n    return context;\n};\n","import SimpleLegend from './simple-legend';\nimport { getScaleInfo, getInterpolatedData } from './legend-helper';\nimport { GRADIENT, LEFT, SIZE } from '../enums/constants';\nimport { renderGradient, createAxis } from './gradient-helper';\nimport '../styles.scss';\n\n/**\n * Creates a Legend from the axes of a canvas\n *\n * @param {Object} dependencies : legend data\n * @class Legend\n */\nexport default class GradientLegend extends SimpleLegend {\n\n    /**\n     * Initializes an instance of the class\n     *\n     * @static\n     * @param {Object} dependencies Set of dependencies required by the legend\n     * @return {Instance} returns a new instance of Legend\n     * @memberof Legend\n     */\n    static create (dependencies) {\n        return new GradientLegend(dependencies);\n    }\n\n    /**\n     *\n     *\n     * @static\n     *\n     * @memberof GradientLegend\n     */\n    static type () {\n        return GRADIENT;\n    }\n\n    /**\n     *\n     *\n     * @param {*} axis\n     *\n     * @memberof GradientLegend\n     */\n    axis (...axis) {\n        if (axis.length) {\n            this._axis = axis[0];\n            return this;\n        }\n        return this._axis;\n    }\n\n    /**\n     *\n     *\n     * @param {*} scale\n     *\n     * @memberof GradientLegend\n     */\n    dataFromScale (scale) {\n        let domainForLegend = [];\n        const { scaleType, domain, steps, scaleFn } = getScaleInfo(scale);\n\n        if (steps instanceof Array) {\n            if (domain[0] < steps[0]) {\n                domainForLegend[0] = domain[0];\n            }\n            domainForLegend = [...domainForLegend, ...steps];\n            if (domain[domain.length - 1] > steps[steps.length - 1]) {\n                domainForLegend.push(domain[1]);\n            }\n        } else {\n            domainForLegend = getInterpolatedData(domain, steps - 1);\n        }\n        domainForLegend = [...new Set(domainForLegend)].sort((a, b) => a - b);\n\n        return domainForLegend.map((ele, i) => {\n            const value = domainForLegend[i];\n            return {\n                [scaleType]: scaleType === SIZE ? scale[scaleFn](ele) * scale.getScaleFactor()\n                    : scale[scaleFn](Math.floor(ele)),\n                value: +value.toFixed(2),\n                id: i\n            };\n        }).filter(d => d.value !== null);\n    }\n\n    /**\n     *\n     *\n     * @param {*} effPadding\n     * @param {*} align\n     *\n     * @memberof Legend\n     */\n    getLabelSpaces (effPadding) {\n        this.config({\n            item: {\n                text: {\n                    orientation: this.config().position\n                }\n            }\n        });\n        const axis = createAxis(this);\n        const axisSpace = axis.getLogicalSpace();\n        const space = { width: axisSpace.width - effPadding, height: axisSpace.height - effPadding };\n        const axisDomainLength = axis.source().domain().length;\n        const labelSpaces = new Array(axisDomainLength).fill(space);\n\n        this.axis(axis);\n        return labelSpaces;\n    }\n\n    /**\n     *\n     *\n     *\n     * @memberof GradientLegend\n     */\n    getDrawingContext () {\n        return {\n            svgContainer: this._legendGradientSvg\n        };\n    }\n\n    /**\n     * Render the legend with its title\n     *\n     * @param {DOM} mountPoint Point where the legend and title are to be appended\n     * @return {Instance} Current instance of legend\n     * @memberof Legend\n     */\n    render () {\n        const firebolt = this.firebolt();\n        const legendContainer = super.render(this.mount());\n        // create Legend\n        renderGradient(this, legendContainer);\n        legendContainer.selectAll('div').style('float', LEFT);\n        firebolt.mapActionsAndBehaviour();\n        firebolt.createSelectionSet(this.data().map(d => d.id));\n        return legendContainer;\n    }\n /**\n     *\n     *\n     * @param {*} data\n     *\n     * @memberof SimpleLegend\n     */\n    getCriteriaFromData (data) {\n        return [[this.fieldName()], [data.value]];\n    }\n}\n","import SimpleLegend from './simple-legend';\nimport {\n    getScaleInfo,\n    getInterpolatedData,\n    getDomainBounds\n} from './legend-helper';\nimport {\n    createLegendSkeleton,\n    createItemSkeleton,\n    renderStepItem\n} from './renderer';\nimport { STEP, RECT, LEFT, SIZE, UPPER, LOWER } from '../enums/constants';\nimport { stepData } from './position-config';\nimport '../styles.scss';\n\n/**\n * Creates a Legend from the axes of a canvas\n *\n * @param {Object} dependencies : legend data\n * @class Legend\n */\nexport default class StepLegend extends SimpleLegend {\n\n    /**\n     * Initializes an instance of the class\n     *\n     * @static\n     * @param {Object} dependencies Set of dependencies required by the legend\n     * @return {Instance} returns a new instance of Legend\n     * @memberof Legend\n     */\n    static create (dependencies) {\n        return new StepLegend(dependencies);\n    }\n\n    /**\n     *\n     *\n     * @static\n     *\n     * @memberof StepLegend\n     */\n    static type () {\n        return STEP;\n    }\n\n    /**\n     *\n     *\n     * @param {*} scale\n     *\n     * @memberof StepLegend\n     */\n    dataFromScale (scale) {\n        let domainLeg = [];\n        const { scaleType, domain, steps, scaleFn } = getScaleInfo(scale);\n\n        const { formatter } = this.config();\n        const domainBounds = {\n            lower: null, upper: null\n        };\n\n        if (steps instanceof Array) {\n            if (domain[0] < steps[0]) {\n                domainBounds.lower = [`${formatter.bounds.lower} ${steps[0]}`];\n            }\n            domainLeg = [...domainLeg, ...steps];\n            if (domain[domain.length - 1] > steps[steps.length - 1]) {\n                domainBounds.upper = [`${formatter.bounds.upper} ${steps[steps.length - 1]}`];\n            }\n        } else {\n            domainLeg = getInterpolatedData(domain, steps);\n        }\n\n        domainLeg = [...new Set(domainLeg)].sort((a, b) => a - b);\n        domainLeg = domainLeg.map((ele, i) => {\n            let value = null;\n            if (i < domainLeg.length - 1) {\n                value = `${(ele.toFixed(1))} - ${(+domainLeg[i + 1].toFixed(1))}`;\n            }\n            return {\n                [scaleType]: scaleType === SIZE ? scale[scaleFn](ele) * scale.getScaleFactor() : scale[scaleFn](ele),\n                value,\n                id: i + 1,\n                range: [ele, domainLeg[i + 1]]\n            };\n        }).filter(d => d.value !== null);\n\n        if (domainBounds.lower) {\n            const lowerBounds = getDomainBounds(LOWER, { scale, scaleFn, scaleType },\n                { domain, steps, domainBounds });\n            domainLeg = [lowerBounds, ...domainLeg];\n        }\n        if (domainBounds.upper) {\n            const upperBounds = getDomainBounds(UPPER, { scale, scaleFn, scaleType },\n            { domain, steps, domainBounds, domainLeg });\n            domainLeg = [...domainLeg, upperBounds];\n        }\n        return domainLeg;\n    }\n\n     /**\n     *\n     *\n     * @param {*} effPadding\n     * @param {*} align\n     *\n     * @memberof Legend\n     */\n    getLabelSpaces (effPadding, align) {\n        this.config({\n            item: {\n                text: {\n                    orientation: this.config().position\n                }\n            }\n        });\n        return super.getLabelSpaces(effPadding, align);\n    }\n\n    /**\n     *\n     *\n     *\n     * @memberof Legend\n     */\n    elemType () {\n        return RECT;\n    }\n\n     /**\n     * Render the legend with its title\n     *\n     * @param {DOM} mountPoint Point where the legend and title are to be appended\n     * @return {Instance} Current instance of legend\n     * @memberof Legend\n     */\n    render () {\n        const firebolt = this.firebolt();\n        const { classPrefix, position } = this.config();\n        const data = stepData(this.data())[position];\n\n        const legendContainer = super.render(this.mount());\n\n        // create Legend\n        const { legendItem } = createLegendSkeleton(this, legendContainer, classPrefix, data);\n        const { itemSkeleton } = createItemSkeleton(this, legendItem);\n\n        renderStepItem(this, itemSkeleton);\n        legendContainer.selectAll('div').style('float', LEFT);\n        firebolt.mapActionsAndBehaviour();\n        firebolt.createSelectionSet(this.data().map(d => d.id));\n        return legendContainer;\n    }\n\n    /**\n     *\n     *\n     * @param {*} data\n     *\n     * @memberof StepLegend\n     */\n    getCriteriaFromData (data) {\n        const fieldName = this.fieldName();\n        return {\n            [fieldName]: data.range\n        };\n    }\n}\n","import { GradientLegend, DiscreteLegend, StepLegend } from '@chartshq/muze-legend';\n\n/**\n * Contants to be used as attr\n */\nexport const ROWS = 'rows';\nexport const COLUMNS = 'columns';\nexport const DATA = 'data';\nexport const COLOR = 'color';\nexport const SHAPE = 'shape';\nexport const SIZE = 'size';\nexport const DETAIL = 'detail';\nexport const LAYERS = 'layers';\nexport const TRANSFORM = 'transform';\nexport const INITIALIZED = 'isInitialized';\nexport const SOURCE = 'source';\nexport const WIDTH = 'width';\nexport const HEIGHT = 'height';\nexport const PADDING = 'padding';\nexport const BORDER = 'border';\nexport const MARGIN = 'margin';\nexport const CONFIG = 'config';\nexport const MOUNT = 'mount';\nexport const CANVAS_UPDATED = 'canvasUpdated';\nexport const CLASSPREFIX = 'classPrefix';\nexport const POLICIES = '_policies';\nexport const LEGEND = 'legend';\nexport const TITLE = 'title';\nexport const SUB_TITLE = 'subtitle';\nexport const RESOLVE = 'resolve';\nexport const DISCRETE = 'discrete';\nexport const STEP_COLOR = 'step-color';\nexport const GRADIENT = 'gradient';\nexport const LINEAR = 'linear';\nexport const ORDINAL = 'ordinal';\nexport const MUZE_PREFIX = 'muze';\n\nexport const TITLE_TEMPLATE_NOT_ALLOWED_TAGS = [\n    'script',\n    'style'\n];\n\nexport const LEGEND_TYPE_MAP = {\n    [`${ORDINAL}-${true}-${COLOR}`]: DiscreteLegend,\n    [`${ORDINAL}-${true}-${SIZE}`]: DiscreteLegend,\n    [`${ORDINAL}-${true}-${SHAPE}`]: DiscreteLegend,\n    [`${ORDINAL}-${false}-${COLOR}`]: DiscreteLegend,\n    [`${ORDINAL}-${false}-${SHAPE}`]: DiscreteLegend,\n    [`${ORDINAL}-${false}-${SIZE}`]: DiscreteLegend,\n    [`${LINEAR}-${false}-${SIZE}`]: DiscreteLegend,\n    [`${LINEAR}-${true}-${SIZE}`]: DiscreteLegend,\n    [`${LINEAR}-${false}-${SHAPE}`]: DiscreteLegend,\n    [`${LINEAR}-${true}-${COLOR}`]: StepLegend,\n    [`${LINEAR}-${false}-${COLOR}`]: GradientLegend\n};\n\nexport const LEFT = 'left';\nexport const RIGHT = 'right';\nexport const BOTTOM = 'bottom';\nexport const TOP = 'top';\nexport const GROUP = 'group';\nexport const LAYOUT = 'layout';\nexport const RETINAL = 'retinal';\nexport const DIMENSION = 'dimension';\nexport const MEASURE = 'measure';\nexport const VERTICAL = 'vertical';\nexport const HORIZONTAL = 'horizontal';\nexport const HORIZONTAL_CENTER = 'h-center';\nexport const VERTICAL_CENTER = 'v-center';\nexport const HIDDEN = 'hidden';\nexport const OVERFLOW = 'overflow';\nexport const OVERFLOW_X = 'overflow-x';\nexport const OVERFLOW_Y = 'overflow-y';\nexport const AUTO = 'auto';\nexport const VISIBLE = 'visible';\n","import { ComposedVars, SimpleVariable } from '@chartshq/visual-group';\nimport { TITLE_TEMPLATE_NOT_ALLOWED_TAGS } from './constants';\n\n/**\n * This method creates a new composed variable instance from multiple variables. This is required when we have multiple\n * variables on a single axis and the union of domain of all the variables needs to be set on the axis.\n *\n * To create a new composed variable from multiple fields,\n * ```\n *  const sharedVar = share('open', 'high', 'low', 'close');\n *  canvas.rows([sharedVar])\n *      .columns(['date']);\n * ```\n *\n * @module Operators\n * @public\n * @function share\n * @param {Array} vars Variable names.\n *\n * @return {ComposedVars} Instance of composed variable\n */\nexport const share = (...vars) => new ComposedVars(...vars.map(variable => new SimpleVariable(variable)));\n\n/**\n *\n *\n * @param {*} node\n *\n */\nfunction treeShakeNode (node) {\n    if (node.nodeType !== Node.ELEMENT_NODE) { return; }\n\n    if (TITLE_TEMPLATE_NOT_ALLOWED_TAGS.indexOf(node.tagName.toLowerCase()) !== -1) {\n        node.parentNode.removeChild(node);\n    } else {\n        for (const childNode of node.childNodes) {\n            treeShakeNode(childNode);\n        }\n    }\n}\n\n/**\n * A string template tagged function which sanitizes input html formatted string according to the allowed html tags.\n * This is used to render html in canvas components like title and tooltip.\n *\n * To render html in canvas components,\n * ```\n *     canvas.title(html`<span style=font-size:20px;>TITLE</span>`);\n * ```\n *\n * @public\n * @module Operators\n * @function html\n * @param {Array.<string>} strings - The string parts of the template.\n * @param {Array} exps - The list of evaluated expression values.\n *\n * @return {Function} Returns a function which returns the sanitized html string.\n */\nexport function html (strings, ...exps) {\n    let htmlCode = '';\n    const expLn = exps.length;\n    let i = 0;\n\n    for (; i < expLn; ++i) {\n        htmlCode += strings[i] + exps[i];\n    }\n    htmlCode += strings[i];\n\n    const frag = document.createDocumentFragment();\n    const wrapper = document.createElement('div');\n\n    frag.appendChild(wrapper);\n    wrapper.innerHTML = htmlCode;\n\n    treeShakeNode(wrapper);\n    const { innerHTML } = wrapper;\n\n    return () => innerHTML;\n}\n","import { mergeRecursive, CommonProps } from 'muze-utils';\n\nconst defaultPolicy = (registrableComponents) => {\n    const aliases = registrableComponents.map(comp => comp.alias());\n    return {\n        behaviours: {\n            '*': (propagationPayload) => {\n                const propagationCanvas = propagationPayload.sourceCanvas;\n                return propagationCanvas ? aliases.indexOf(propagationCanvas) !== -1 : true;\n            }\n        }\n    };\n};\n\nconst listenerFn = (canvas, fn) => () => {\n    const valueMatrix = canvas.composition().visualGroup.matrixInstance().value;\n    valueMatrix.each(cell => fn(cell.valueOf().firebolt()));\n};\n\nconst canvasIterator = (canvases, iteratorFn, cFn) => {\n    canvases.forEach((canvas) => {\n        const matrix = canvas.composition().visualGroup.matrixInstance().value;\n        matrix.each(cell => iteratorFn(cell.valueOf().firebolt()));\n        cFn && cFn(canvas);\n        // Also register actions on canvas update\n        const throwback = canvas._throwback;\n\n        throwback.registerImmediateListener([CommonProps.MATRIX_CREATED],\n            listenerFn(canvas, iteratorFn));\n    });\n};\n\n/**\n * This class is initiated only once in lifecycle and is reponsible for regisration of physical and behavioural\n * actions and side effects and the mapping between them.\n *\n * To get the instance of action model\n * ```\n *  const ActionModel = muze.ActionModel;\n * ```\n *\n * @public\n * @module ActionModel\n */\nclass ActionModel {\n    constructor () {\n        this._registrableComponents = [];\n    }\n\n    /**\n     * Takes an array of canvases on which the physical and behavioural actions will get registered.\n     *\n     * @public\n     * @param  {Canvas} components Array of canvases\n     *\n     * @return {ActionModel} Instance of action model.\n     */\n    for (...components) {\n        this._registrableComponents = components;\n        return this;\n    }\n\n    /**\n     * Registers physical actions on the canvases. It takes an object with key as the name of action and value having\n     * the definition of the action.\n     *\n     * To register a {@link PhysicalAction},\n     * ```\n     *  const ActionModel = muze.ActionModel;\n     *  ActionModel\n     *       // Physical actions will be registered on these canvases.\n     *      .for(canvas)\n     *      .registerPhysicalActions({\n     *          // Key is the name of physical action.\n     *          ctrlClick: (firebolt) => (targetEl, behaviours) => {\n     *              targetEl.on('click', function (data) {\n     *                  const event = utils.getEvent();\n     *                  const pos = utils.getClientPoint(event, this);\n     *                  // Get the data point nearest to the mouse position.\n     *                  const nearestPoint = firebolt.context.getNearestPoint(pos, {\n     *                      data\n     *                  });\n     *                  // Prepare the payload\n     *                  const payload = {\n     *                      criteria: nearestPoint.id\n     *                  };\n     *                  behaviours.forEach((behaviour) => firebolt.dispatchBehaviour(behaviour, payload));\n     *              });\n     *          }\n     *      });\n     * ```\n     * @public\n     *\n     * @param {Object} action Names of physical actions and their definitions.\n     *\n     * @return {ActionModel} Instance of the action model.\n     */\n    registerPhysicalActions (action) {\n        canvasIterator(this._registrableComponents, (firebolt) => {\n            firebolt.registerPhysicalActions(action);\n        }, (canvas) => {\n            canvas.firebolt().registerPhysicalActions(action);\n        });\n\n        return this;\n    }\n\n    /**\n     * Registers behavioural actions on the canvases. It takes definitions of the behavioural actions and registers\n     * them on the canvases. Every behavioural action must inherit the {@link GenericBehaviour} class.\n     *\n     * To register a behavioural action\n     * ```\n     *  // Define a new behavioural action\n     *  class SingleSelectBehaviour extends GenericBehaviour {\n     *      static formalName () {\n     *          return 'singleSelect';\n     *      }\n     *\n     *      setSelectionSet (addSet, selectionSet) {\n     *          if (addSet === null) {\n     *              selectionSet.reset();\n     *          } else if (addSet.length) {\n     *              const existingAddSet = selectionSet.getExistingEntrySet(addSet);\n     *              if (existingAddSet.length){\n     *                  selectionSet.reset();\n     *              } else {\n     *               selectionSet.add(addSet);\n     *              }\n     *          } else {\n     *              selectionSet.reset();\n     *          }\n     *      }\n     * }\n     * muze.ActionModel.registerBehaviouralActions(SingleSelectBehaviour);\n     * ```\n     *\n     * @public\n     *\n     * @param {GenericBehaviour} actions Definition of behavioural actions.\n     *\n     * @return {ActionModel} Instance of action model.\n     */\n    registerBehaviouralActions (...actions) {\n        canvasIterator(this._registrableComponents, (firebolt) => {\n            firebolt.registerBehaviouralActions(actions);\n        }, (canvas) => {\n            canvas.firebolt().registerBehaviouralActions(actions);\n        });\n\n        return this;\n    }\n\n    /**\n     * Registers the mapping of physical and behavioural actions. This mapping is used to establish which behavioural\n     * actions should be dispatched on any triggering of physical actions.\n     *\n     * To map physical actions with behavioural actions,\n     * ```\n     *  muze.ActionModel.registerPhysicalBehaviouralMap({\n     *      ctrlClick: {\n     *          behaviours: ['select'] // This array must be the formal names of the behavioural actions.\n     *      }\n     *  });\n     * ```\n     *\n     * @public\n     * @param {Object} map Contains the physical and behavioural action map.\n     * ```\n     *   {\n     *      // Name of the physical action\n     *      click: {\n     *          // Target element selector. This is an optional field. If not passed, then by default takes the\n     *          // container element of visual unit.\n     *          target: '.muze-layers-area path',\n     *          // Behaviours which should be dispatched on triggering of the mapped physical action.\n     *          behaviours: ['select']\n     *      }\n     *   }\n     * ```\n     *\n     * @return {ActionModel} Instance of action model.\n     */\n    registerPhysicalBehaviouralMap (map) {\n        canvasIterator(this._registrableComponents, (firebolt) => {\n            firebolt.registerPhysicalBehaviouralMap(map);\n        }, (canvas) => {\n            canvas.firebolt().registerPhysicalBehaviouralMap(map);\n        });\n        return this;\n    }\n\n    /**\n     * Registers what behaviour to propagate on dispatch of a certain behavioural action. By default, when any\n     * behavioural action is dispatched, then the same behavioural action gets propagated to all the other canvases.\n     * This can be changed using this api.\n     *\n     * To register what behaviour should be propagated on dispatch of any behavioural action,\n     * ```\n     *  ActionModel.for(canvas1, canvas2).registerPropagationBehaviourMap({\n     *      select: 'filter',\n     *      brush: 'filter'\n     *  });\n     * ```\n     *\n     * @public\n     * @param {Object} map Propagation behaviour map.\n     *\n     * @return {ActionModel} Instance of action model.\n     */\n    registerPropagationBehaviourMap (map) {\n        canvasIterator(this._registrableComponents, (firebolt) => {\n            firebolt.registerPropagationBehaviourMap(map);\n        }, (canvas) => {\n            canvas.firebolt().registerPropagationBehaviourMap(map);\n        });\n\n        return this;\n    }\n\n    /**\n     * Registers the mapping of side effects and behavioural actions. It takes an object which contains key as the\n     * name of behavioural action and the side effects which will be linked to it.\n     *\n     * To map side effects to select behaviour,\n     * ```\n     *  muze.ActionModel.mapSideEffects({\n     *      select: ['infoBox'] // This array must be the formal names of the side effects\n     *  });\n     * ```\n     *\n     * To map side effects to select behaviour, but disable all the default side effects attached with this behaviour,\n     * ```\n     *  muze.ActionModel.mapSideEffects({\n     *      select: {\n     *          effects: ['infoBox'],\n     *          preventDefaultActions: true\n     *      }\n     *  });\n     * @public\n     * @param {Object} map Mapping of behavioural actions and side effects.\n     * ```\n     *     {\n     *          select: ['infoBox']\n     *     }\n     * ```\n     * @return {ActionModel} Instance of action model.\n     */\n    mapSideEffects (map) {\n        canvasIterator(this._registrableComponents, (firebolt) => {\n            firebolt.mapSideEffects(map);\n        }, (canvas) => {\n            canvas.firebolt().mapSideEffects(map);\n        });\n        return this;\n    }\n\n    /**\n     * Registers the side effects on the registered canvases. It takes definitions of side effects and registers them\n     * on the canvases. Every side effect must inherit the base class {@link GenericSideEffect} or\n     * {@link SpawnableSideEffect} or {@link SurrogateSideEffect} class.\n     *\n     * ```\n     * // Define a custom side effect\n     *  class InfoBox extends SpawnableSideEffect {\n     *      static formalName () {\n     *          return 'infoBox';\n     *      }\n     *\n     *      apply (selectionSet) {\n     *      }\n     *  }\n     *  muze.ActionModel.registerSideEffects(InfoBox);\n     * ```\n     * @public\n     * @param  {GenericSideEffect} sideEffects Definition of side effects.\n     *\n     * @return {ActionModel} Instance of action model.\n     */\n    registerSideEffects (...sideEffects) {\n        canvasIterator(this._registrableComponents, (firebolt) => {\n            firebolt.registerSideEffects(sideEffects);\n        }, (canvas) => {\n            canvas.firebolt().registerSideEffects(sideEffects);\n        });\n        return this;\n    }\n\n    /**\n     * Breaks the link between behavioural actions and physical actions. It takes an array of behavioural action\n     * and it's physical action.\n     *\n     * To dissociate behavioural actions from physical actions\n     * ```\n     *  muze.ActionModel.dissociateBehaviour(['select', 'click'], ['highlight', 'hover']);\n     * ```\n     * @public\n     * @param  {Array} maps Array of behavioural action and physical action.\n     *\n     * @return {ActionModel} Instance of action model.\n     */\n    dissociateBehaviour (...maps) {\n        canvasIterator(this._registrableComponents, (firebolt) => {\n            maps.forEach(val => firebolt.dissociateBehaviour(val[0], val[1]));\n        }, (canvas) => {\n            maps.forEach(val => canvas.firebolt().dissociateBehaviour(val[0], val[1]));\n        });\n        return this;\n    }\n\n    /**\n     * Breaks the link between side effects and behavioural actions. It takes an array of formal names of the side\n     * effects and it's linked behavioural action.\n     *\n     * To dissociate side effects from behavioural actions\n     * ```\n     *  muze.ActionModel.dissociateSideEffect(['crossline', 'highlight'], ['selectionBox', 'brush']);\n     * ```\n     * @public\n     * @param  {Array} maps Array of side effects and behavioural actions.\n     *\n     * @return {ActionModel} Instance of action model.\n     */\n    dissociateSideEffect (...maps) {\n        canvasIterator(this._registrableComponents, (firebolt) => {\n            maps.forEach(val => firebolt.dissociateSideEffect(val[0], val[1]));\n        }, (canvas) => {\n            maps.forEach(val => canvas.firebolt().dissociateSideEffect(val[0], val[1]));\n        });\n        return this;\n    }\n\n    /**\n     * By default cross interactivity is disabled between canvases. This enables cross interaction between the canvases\n     * so that any action happening in one canvas gets dispatched on other canvases as well. An optional policy can also\n     * be passed in this method. The policy can be used to control on which canvases the behavioural actions and\n     * side effects gets dispatched.\n     *\n     * To just enable cross interactivity between two canvases,\n     * ```\n     *  ActionModel.for(canvas1, canvas2)\n     *      .enableCrossInteractivity();\n     * ```\n     *\n     * To enable cross interactivity but enable any behavioural action only when it is triggered from canvas1.\n     * ```\n     *  ActionModel.for(canvas1, canvas2)\n     *      .enableCrossInteractivity({\n     *          behaviours: {\n     *              // Here * stands for any behavioural action name. We can also give any name of behavioural action\n     *              // in place of this.\n     *              '*': (propPayload, context) => {\n     *                  return propPayload.sourceCanvas === canvas1.alias();\n     *              }\n     *          }\n     *      });\n     * ```\n     *\n     * To enable cross interactivity but enable tooltip effect if the action is propagated from canvas1,\n     * ```\n     *  ActionModel.for(canvas1, canvas2)\n     *      .enableCrossInteractivity({\n     *          sideEffects: {\n     *              tooltip: (propPayload, context) => {\n     *                  return propPayload.sourceCanvas === canvas1.alias();\n     *              }\n     *          }\n     *      });\n     * ```\n     * @public\n     * @param {Object} policy Policy definition.\n     *\n     * @return {ActionModel} Instance of action model.\n     */\n    enableCrossInteractivity (policy = {}) {\n        const registrableComponents = this._registrableComponents;\n        const mergedPolicy = mergeRecursive(mergeRecursive({}, defaultPolicy(registrableComponents)), policy);\n\n        registrableComponents.forEach((canvas) => {\n            canvas.firebolt().crossInteractionPolicy(mergedPolicy);\n        });\n\n        return this;\n    }\n}\n\nexport const actionModel = (() => new ActionModel())();\n","import { MUZE_PREFIX } from '../constants';\n\nexport const TITLE_CONFIG = {\n    position: 'top',\n    align: 'left',\n    padding: 4,\n    className: `${MUZE_PREFIX}-title-container`\n};\n\nexport const SUB_TITLE_CONFIG = {\n    position: 'top',\n    align: 'left',\n    padding: 16,\n    maxLines: 2,\n    className: `${MUZE_PREFIX}-subtitle-container`\n};\n\nexport const GRID = 'grid';\n\nexport const CANVAS = 'canvas';\n\nexport const LAYOUT_ALIGN = {\n    TOP: 'top',\n    LEFT: 'left',\n    RIGHT: 'right',\n    BOTTOM: 'bottom'\n};\n","import { mergeRecursive } from 'muze-utils';\nimport {\n    ROWS,\n    COLUMNS,\n    COLOR,\n    SHAPE,\n    SIZE,\n    DETAIL,\n    LAYERS,\n    TRANSFORM,\n    TITLE,\n    SUB_TITLE\n} from '../constants';\nimport { TITLE_CONFIG, SUB_TITLE_CONFIG } from './defaults';\n/**\n * This is the local options semantics based on which setters getters are created and reactivity is initiated.\n * This local object is only valid for Canvas.\n * Canvas merges global and local object both to the model\n *\n * Format\n *  PROPERTRY_NAME: {\n *      value: // default value of the property,\n *      meta: {\n *          typeCheck: // The setter value will be checked using this. If the value is function then the setter value\n *                     // is passed as args.\n *          typeExpected: // The output of typecheck action will be tested against this. Truthy value will set the\n *                       // value to the setter\n *          sanitizaiton: // Need for sanitization before type is checked\n *      }\n *  }\n *\n * @module LocalOptions\n */\n\nexport const localOptions = {\n    [ROWS]: {\n        value: null,\n        meta: {\n            typeCheck: 'constructor',\n            typeExpected: 'Array'\n        }\n    },\n    [COLUMNS]: {\n        value: null,\n        meta: {\n            typeCheck: 'constructor',\n            typeExpected: 'Array'\n        }\n    },\n    [COLOR]: {\n        value: null,\n        meta: {\n            typeCheck: 'constructor',\n            typeExpected: 'Object',\n            sanitization: (config) => {\n                if (typeof config === 'string' || config === null) {\n                    return {\n                        field: config\n                    };\n                }\n                return config;\n            }\n        }\n    },\n    [SHAPE]: {\n        value: null,\n        meta: {\n            typeCheck: 'constructor',\n            typeExpected: 'Object',\n            sanitization: (config) => {\n                if (typeof config === 'string' || config === null) {\n                    return {\n                        field: config\n                    };\n                }\n                return config;\n            }\n        }\n    },\n    [SIZE]: {\n        value: null,\n        meta: {\n            typeCheck: 'constructor',\n            typeExpected: 'Object',\n            sanitization: (config) => {\n                if (typeof config === 'string' || config === null) {\n                    return {\n                        field: config\n                    };\n                }\n                return config;\n            }\n        }\n    },\n    [DETAIL]: {\n        value: [],\n        meta: {\n            typeCheck: 'constructor',\n            typeExpected: 'Array'\n        }\n    },\n\n    [LAYERS]: {\n        value: [],\n        meta: {\n            typeCheck: 'constructor',\n            typeExpected: 'Array'\n        }\n    },\n    [TRANSFORM]: {\n        value: null,\n        meta: {\n            typeCheck: 'constructor',\n            typeExpected: 'Object'\n        }\n    }\n};\n\nexport const canvasOptions = {\n    [TITLE]: {\n        value: [null, null],\n        meta: {\n            typeCheck: ['constructor', 'constructor'],\n            typeExpected: ['Function', 'Object'],\n            spreadParams: true,\n            sanitization: [(title) => {\n                if (typeof title === 'string') {\n                    const t = () => title;\n                    t._sanitized = true;\n                    return t;\n                }\n                return title;\n            }, (titleConfig) => {\n                const defConfig = mergeRecursive({}, TITLE_CONFIG);\n                return mergeRecursive(defConfig, titleConfig);\n            }]\n        }\n    },\n    [SUB_TITLE]: {\n        value: [null, null],\n        meta: {\n            typeCheck: ['constructor', 'constructor'],\n            typeExpected: ['Function', 'Object'],\n            spreadParams: true,\n            sanitization: [(subtitle) => {\n                if (typeof subtitle === 'string') {\n                    const sub = () => subtitle;\n                    sub._sanitized = true;\n                    return sub;\n                }\n                return subtitle;\n            }, (subtitleConfig) => {\n                const defConfig = mergeRecursive({}, SUB_TITLE_CONFIG);\n                return mergeRecursive(defConfig, subtitleConfig);\n            }]\n        }\n    }\n};\n","export default class LayoutComponent {\n    constructor (name, dimensions, seed) {\n        this._seed = seed;\n        this._boundBox = {\n            height: dimensions.height,\n            width: dimensions.width,\n            top: null,\n            left: null\n        };\n        this._renderAt = null;\n        this._alignWith = null;\n        this._alignment = null;\n        this._target = null;\n        this._position = null;\n        this._componentName = name;\n        this._className = null;\n    }\n\n    getLogicalSpace () {\n        throw new Error('getLogicalSpace is not defined');\n    }\n\n    setSpatialConfig () {\n        throw new Error('setSpatialSpace is not defined');\n    }\n\n    name (param) {\n        if (param) {\n            this._componentName = param;\n        }\n        return this._componentName;\n    }\n\n    target (param) {\n        if (param) {\n            this._target = param;\n        }\n        return this._target;\n    }\n\n    position (param) {\n        if (param) {\n            this._position = param;\n        }\n        return this._position;\n    }\n\n    alignment (param) {\n        if (param) {\n            this._alignment = param;\n        }\n        return this._alignment;\n    }\n\n    alignWith (param) {\n        if (param) {\n            this._alignWith = param;\n        }\n        return this._alignWith;\n    }\n\n    renderAt (param) {\n        if (param) {\n            this._renderAt = param;\n        }\n        return this._renderAt;\n    }\n\n    boundBox (param) {\n        if (param) {\n            Object.assign(this._boundBox, param);\n        }\n        return this._boundBox;\n    }\n\n    className (param) {\n        if (param) {\n            this._className = param;\n        }\n        return this._className;\n    }\n\n    draw () {\n        throw new Error('draw is not defined');\n    }\n  }\n\n","import LayoutComponent from './layoutComponent';\n\nclass DummyComponent extends LayoutComponent {\n    getLogicalSpace () {\n        return {\n            width: this.boundBox().width,\n            height: this.boundBox().height\n        };\n    }\n\n    setSpatialConfig (conf) {\n        this.boundBox({ top: conf.y, left: conf.x });\n        this.newDimensions = {\n            width: conf.width,\n            height: conf.height\n        };\n        this.renderAt(conf.renderAt);\n        return this;\n    }\n\n    draw () {\n        if (!this.component) {\n            throw new Error(`Component not set for ${this.componentName}`);\n        }\n        this.component.mount(document.getElementById(this.renderAt)); // Change the draw method to component draw\n        return this;\n    }\n}\n\nexport default DummyComponent;\n","export const DEFAULT_CONFIG = {\n    classPrefix: 'muze',\n    interaction: {\n        sideEffect: 'individual'\n    },\n    pagination: 'scroll',\n    scrollBar: {\n        thickness: 10,\n        speed: 2,\n        vertical: {\n            align: 'right'\n        },\n        horizontal: {\n            align: 'bottom'\n        }\n    },\n    legend: {\n        position: 'right',\n        color: {\n            show: true,\n            padding: 1,\n            margin: 3,\n            border: 1,\n            height: 20,\n            width: 20\n        },\n        shape: {\n            show: true,\n            padding: 1,\n            margin: 3,\n            border: 1,\n            height: 20,\n            width: 20\n        },\n        size: {\n            show: true,\n            padding: 1,\n            margin: 3,\n            border: 1,\n            height: 20,\n            width: 20\n        }\n    },\n    showHeaders: false,\n    minWidth: 100,\n    minHeight: 100,\n    facet: {\n        rows: {\n            minCharacters: 3\n        },\n        columns: {\n            maxLines: 2,\n            verticalAlign: 'middle',\n            minCharacters: 1\n        }\n    },\n    border: {\n        style: 'solid',\n        color: '#d6d6d6',\n        width: 2,\n        collapse: true,\n        spacing: 0\n    },\n    autoGroupBy: {\n        disabled: false\n    },\n    invalidValues: {}\n};\n","import { DEFAULT_CONFIG } from '../../../../muze/src/defaults';\n\nconst DEFAULT_WIDTH = 600;\nconst DEFAULT_HEIGHT = 400;\nconst DEFAULT_CLASS_NAME = `${DEFAULT_CONFIG.classPrefix}-layout-container-component`;\nconst NODE_PREFIX = `${DEFAULT_CONFIG.classPrefix}-layout-container`;\n\nexport {\n  DEFAULT_WIDTH,\n  DEFAULT_HEIGHT,\n  DEFAULT_CLASS_NAME,\n  NODE_PREFIX\n};\n","export default class DefinitionModel {\n    constructor (config) {\n        this._host = config.host || null;\n        this._cut = config.cut || null;\n        this._ratioWeight = config.ratioWeight === 0 ? 0 : config.ratioWeight || 1;\n        this._preferred = config.preferred || false;\n        this._lanes = config.lanes || [];\n        this._remainingHeight = 0;\n        this._remainingWidth = 0;\n    }\n\n    host (host) {\n        if (host) {\n            this._host = host;\n        }\n        return this._host;\n    }\n\n    preferred (preferred) {\n        if (preferred) {\n            this._preferred = preferred;\n        }\n        return this._preferred;\n    }\n\n    cut (cut) {\n        if (cut) {\n            this._cut = cut;\n        }\n        return this._cut;\n    }\n\n    ratioWeight (ratioWeight) {\n        if (ratioWeight) {\n            this._ratioWeight = ratioWeight;\n        }\n        return this._ratioWeight;\n    }\n\n    lanes (lanes) {\n        if (lanes) {\n            this._lanes = lanes;\n        }\n        return this._lanes;\n    }\n\n    remainingHeight (remainingHeight) {\n        if (remainingHeight) {\n            this._remainingHeight = remainingHeight;\n        }\n        return this._remainingHeight;\n    }\n\n    remainingWidth (remainingWidth) {\n        if (remainingWidth) {\n            this._remainingWidth = remainingWidth;\n        }\n        return this._remainingWidth;\n    }\n}\n","import { NODE_PREFIX } from '../../constants/defaults';\nimport DefinitionModel from '../definition-manager/definitionModel';\nimport DummyComponent from '../../layout-component/dummy-component';\n/**\n * Compares two strings in lowercase\n *\n * @export\n * @param {string} value the value to be compared\n * @param {string} compareTo whom the value would be compared\n * @return {boolean} true if values are equal\n */\nexport function isEqual (value, compareTo) {\n    if (typeof value !== 'string' || typeof compareTo !== 'string') {\n        throw new TypeError('value and compareTo must be string');\n    }\n    return value.toLowerCase() === compareTo.toLowerCase();\n}\n\nexport const getNodeId = (() => {\n    let _uid = 0;\n    return () => `${NODE_PREFIX}-${++_uid}`;\n})();\n\nexport function yExtraSpace (node) {\n    let smallestHeight = 0;\n    if (node.getCutType() === 'v') {\n        smallestHeight = smallestExtraHeightHorizontally(node); // eslint-disable-line no-use-before-define\n    } else if (node.getCutType() === 'h') {\n        node.children().forEach((child) => {\n            smallestHeight += yExtraSpace(child);\n        });\n    } else if (node.model().host() && node.model().host().getLogicalSpace) {\n        const containerHeight = node.boundBox().height;\n        const hostHeight = node.model().host().getLogicalSpace().height;\n\n        smallestHeight = containerHeight - hostHeight;\n        if (smallestHeight < 0) {\n            smallestHeight = 0;\n        }\n    } else {\n        smallestHeight = 0;\n    }\n    return smallestHeight;\n}\n\nexport function smallestExtraHeightHorizontally (node) {\n    let smallestHeight = Number.MAX_SAFE_INTEGER;\n    node.children().forEach((child) => {\n        const h = yExtraSpace(child);\n        if (h < smallestHeight) {\n            smallestHeight = h;\n        }\n    });\n    return smallestHeight;\n}\n\nexport function xExtraSpace (node) {\n    let smallestWidth = 0;\n    if (node.getCutType() === 'h') {\n        smallestWidth = smallestExtraWidthVertically(node); // eslint-disable-line no-use-before-define\n    } else if (node.getCutType() === 'v') {\n        node.children().forEach((child) => {\n            smallestWidth += xExtraSpace(child);\n        });\n    } else if (node.model().host() && node.model().host().getLogicalSpace) {\n        const containerWidth = node.boundBox().width;\n        const hostWidth = node.model().host().getLogicalSpace().width;\n        smallestWidth = containerWidth - hostWidth;\n        if (smallestWidth < 0) {\n            smallestWidth = 0;\n        }\n    } else {\n        smallestWidth = 0;\n    }\n    return smallestWidth;\n}\n\nexport function smallestExtraWidthVertically (node) {\n    let smallestWidth = Number.MAX_SAFE_INTEGER;\n    node.children().forEach((child) => {\n        const w = xExtraSpace(child);\n        if (w < smallestWidth) {\n            smallestWidth = w;\n        }\n    });\n    return smallestWidth;\n}\n\nexport function determineBoundBox (bb, i, arr, instance) {\n    if (i) {\n    // if not first sibling, take boundbox from previous sibling\n        const lastSibling = arr[i - 1];\n        const { top: _top, left: _left, height: _height, width: _width } = lastSibling.boundBox();\n        return {\n            width: bb.width,\n            height: bb.height,\n\n            top: instance.parentCut() === 'h'\n        ? _top + _height : _top,\n\n            left: instance.parentCut() === 'h'\n        ? _left : _left + _width\n        };\n    }\n  // if first sibling, take boundbox from parent\n    const { top: _top, left: _left } = instance.parent().boundBox();\n    return {\n        width: bb.width,\n        height: bb.height,\n        top: _top,\n        left: _left\n    };\n}\n\n// prepares the targetComponent Map for target Mapping ie. where a component should lie\nexport function prepareTargetComponentMap (context) {\n    context.targetComponentMap(new Map());\n    context.componentMap().forEach((value) => {\n        if (context.targetComponentMap().has(value.target())) {\n            context.targetComponentMap().get(value.target()).push(value);\n        } else {\n            const temp = [];\n            temp.push(value);\n            context.targetComponentMap().set(value.target(), temp);\n        }\n    });\n}\n\nexport function getComponent (canvasComponent, componentName) {\n    const comp = canvasComponent.find(component => component.name() === componentName);\n    return (comp && comp !== -1) ? comp : null;\n}\nexport function createPlaceHolderComponent (height, width, position) {\n    const comp = new DummyComponent(0, { height, width });\n    comp.name('placeHolder');\n    comp.position(position);\n    return comp;\n}\n\nexport function placeComponent (definitionModel, component, isPreferred = false, isGridComponent = false) {\n    let cut = '';\n    let componentRatioWidth = 1;\n    let leftOvercomponentRationWidth = 1;\n    let leftHeight = 0;\n    let leftWidth = 0;\n\n    if (!component) {\n        return { first: definitionModel, second: definitionModel };\n    }\n\n    const { height: componentHeight, width: componentWidth } = component.getLogicalSpace();\n    const position = component.position();\n    if (position === 'top' || position === 'bottom') {\n        cut = 'h';\n        componentRatioWidth = componentHeight / definitionModel.remainingHeight();\n        leftHeight = definitionModel.remainingHeight() - componentHeight;\n        leftWidth = definitionModel.remainingWidth();\n    } else {\n        cut = 'v';\n        componentRatioWidth = componentWidth / definitionModel.remainingWidth();\n        leftWidth = definitionModel.remainingWidth() - componentWidth;\n        leftHeight = definitionModel.remainingHeight();\n    }\n    leftOvercomponentRationWidth = 1 - componentRatioWidth;\n\n// update parentModel\n    definitionModel.cut(cut);\n    const firstLaneConfig = {\n        host: component.name(),\n        cut: null,\n        ratioWeight: componentRatioWidth,\n        preferred: isGridComponent ? false : isPreferred,\n        lanes: []\n    };\n    const firstLane = new DefinitionModel(firstLaneConfig);\n    firstLane.remainingHeight(componentHeight);\n    firstLane.remainingWidth(componentWidth);\n\n    const secondLaneConfig = {\n        host: null,\n        cut: null,\n        ratioWeight: leftOvercomponentRationWidth,\n        preferred: isGridComponent ? false : !isPreferred,\n        lanes: []\n    };\n    const secondLane = new DefinitionModel(secondLaneConfig);\n    secondLane.remainingHeight(leftHeight);\n    secondLane.remainingWidth(leftWidth);\n    if (isPreferred) {\n        definitionModel.lanes([firstLane]);\n    } else if (position === 'top' || position === 'left') {\n        definitionModel.lanes([firstLane, secondLane]);\n    } else {\n        definitionModel.lanes([secondLane, firstLane]);\n    }\n    return { first: firstLane, second: secondLane };\n}\n\nexport function placeGridComponent (definitionModel, gridComponents) {\n    let tempDefModel = definitionModel;\n    const rows = gridComponents.length;\n    const column = rows ? gridComponents[0].length : 0;\n    const height = gridComponents.reduce((acc, val) => (acc + val[0].getLogicalSpace().height), 0);\n\n    for (let i = 0; i < column; i++) {\n        const iscolumnPreffered = i === column - 1;\n        const columnPlaceHolderComponent = createPlaceHolderComponent(height,\n                                                    gridComponents[0][i].getLogicalSpace().width, 'left');\n        const { first, second } = placeComponent(tempDefModel, columnPlaceHolderComponent, iscolumnPreffered);\n        tempDefModel = first;\n        for (let j = 0; j < rows; j++) {\n            const rowpreffred = j === (rows - 1);\n            tempDefModel = placeComponent(tempDefModel, gridComponents[j][i], rowpreffred, true).second;\n        }\n        tempDefModel = second;\n    }\n    return tempDefModel;\n}\n\nexport function negotiateDimension (node) {\n    let preferred;\n    let cumultiveExtraSpaceAmt = 0;\n    let alteredDim;\n    let nonAlteredDim;\n\n    const childrenLength = node.children().length;\n\n    for (let index = 0; index < childrenLength; index++) {\n        let fn;\n        let extraSpaceAmt;\n        const child = node.children()[index];\n\n        if (child.parentCut() === 'h') {\n            fn = yExtraSpace;\n            alteredDim = 'height';\n            nonAlteredDim = 'width';\n        } else {\n            fn = xExtraSpace;\n            alteredDim = 'width';\n            nonAlteredDim = 'height';\n        }\n  // if vertical then get extra height from other node and push it to the preferred node.\n  // for horizontal cut the same thing is to be done with width\n        if (child.isPreferred()) {\n    // push extra space in sink. Execute it when all non preferred space are computed.\n            preferred = child;\n\n            continue; // eslint-disable-line no-continue\n        }\n  // reduce own height and save it in a var\n        cumultiveExtraSpaceAmt += (extraSpaceAmt = fn(child));\n        child.boundBox()[alteredDim] -= extraSpaceAmt;\n  // update nonaltered dim from parent for any change which happened during negotiation\n        child.boundBox()[nonAlteredDim] = child.parent().boundBox()[nonAlteredDim];\n\n        negotiateDimension(child);\n    }\n\n    if (preferred) {\n        preferred.boundBox()[alteredDim] += cumultiveExtraSpaceAmt;\n        preferred.boundBox()[nonAlteredDim] = preferred.parent().boundBox()[nonAlteredDim];\n        negotiateDimension(preferred);\n    }\n}\n\nexport function computePosition (node) {\n    node.children().forEach((child, i, children) => {\n        const boundBox = determineBoundBox(child.boundBox(), i, children, child);\n        child.boundBox(boundBox);\n        computePosition(child);\n    });\n}\n\nexport function allocateBoundingBox (node) {\n    const totalWeight = node.children()\n                            .map(child => child.model().ratioWeight())\n                            .reduce((carry, val) => carry + val, 0);\n\n    node.children().forEach((child, i, children) => {\n        const lastSibling = children[i - 1];\n        const ratio = child.model().ratioWeight() / totalWeight;\n\n        if (child.parentCut() === 'h') {\n            child.boundBox({\n                top: i ? lastSibling.boundBox().top + lastSibling.boundBox().height : 0,\n                left: child.parent().boundBox().left,\n                height: child.parent().boundBox().height * ratio,\n                width: child.parent().boundBox().width\n            });\n        } else {\n            child.boundBox({\n                top: child.parent().boundBox().top,\n                left: i ? lastSibling.boundBox().left + lastSibling.boundBox().width : 0,\n                height: child.parent().boundBox().height,\n                width: child.parent().boundBox().width * ratio\n            });\n        }\n        allocateBoundingBox(child);\n    });\n}\n\n","import { getNodeId } from '../helper';\nimport { LayoutComponent } from '../../layout-component';\n\nclass Node {\n    constructor (data) {\n        this._model = data;\n        this._parent = null;\n        this._children = [];\n        this._parentCut = null;\n        this._boundBox = {\n            top: null,\n            left: null,\n            height: null,\n            width: null\n        };\n\n        this._id = this._model.host() instanceof LayoutComponent && this._model.host().renderAt() ?\n                    this._model.host().renderAt() :\n                    getNodeId();\n    }\n\n    addChildren (entries) {\n        this._children.push(...entries);\n        entries.forEach((e) => { e.parent(this); });\n    }\n\n    isRoot () {\n        return this._parent === null;\n    }\n\n    isLeaf () {\n        return !this._children.length;\n    }\n\n    getCutType () {\n        return this._model.cut();\n    }\n\n    isPreferred () {\n        return !!this._model.preferred();\n    }\n\n    children (children) {\n        if (children) {\n            this._children = children;\n        }\n        return this._children;\n    }\n\n    parent (parent) {\n        if (parent) {\n            this._parent = parent;\n        }\n        return this._parent;\n    }\n\n    parentCut (parentCut) {\n        if (parentCut) {\n            this._parentCut = parentCut;\n        }\n        return this._parentCut;\n    }\n\n    id (id) {\n        if (id) {\n            this._id = id;\n        }\n        return this._id;\n    }\n\n    model (model) {\n        if (model) {\n            this._model = model;\n        }\n        return this._model;\n    }\n\n    boundBox (bound) {\n        if (bound) {\n            this._boundBox = {\n                top: bound.top,\n                left: bound.left,\n                height: bound.height,\n                width: bound.width\n            };\n        }\n        return this._boundBox;\n    }\n  /**\n     * function to search a node and update it with the config provided.\n     * @param  {Object} nodeconfig\n     */\n    updateNode (nodeconfig) {\n        if (this._id === nodeconfig._id) {\n            this._model.cut(nodeconfig.cut);\n            this._model.ratioWeight(nodeconfig.ratioWeight);\n        } else {\n            this._children.forEach((node) => {\n                if (node._id === nodeconfig._id) {\n                    node.model.cut(nodeconfig.cut);\n                    node.model.ratioWeight(nodeconfig.ratioWeight);\n                    return;\n                }\n                this.searchNode(node, nodeconfig);\n            });\n        }\n    }\n\n  // Recursive function to search a node\n    searchNode (node, nodeconfig) {\n        node.children().forEach((childNode) => {\n            if (childNode.id() === nodeconfig._id) {\n                childNode.model().cut(nodeconfig.cut);\n                childNode.model().ratioWeight(nodeconfig.ratioWeight);\n            } else {\n                this.searchNode(childNode, nodeconfig);\n            }\n        });\n    }\n\n  /**\n     * function to delete a node from tree Structure.\n     * @param  {String} nodeId - node Id of the Node\n     */\n    delete (nodeId) {\n        this._children.forEach((node) => {\n            if (node.id() === nodeId) {\n                const index = this._children.indexOf(node);\n                this._model.lanes().splice(index, 1);\n            }\n            this.deleteSearchNode(node, nodeId);\n        });\n    }\n\n  // Recursive function to search a node\n    deleteSearchNode (node, nodeId) {\n        node.children().forEach((childNode) => {\n            if (childNode.id() === nodeId) {\n                const index = node.children().indexOf(childNode);\n                node.model().lanes().splice(index, 1);\n            } else {\n                this.deleteSearchNode(childNode, nodeId);\n            }\n        });\n    }\n}\n\nexport default Node;\n","import Node from '../tree';\nimport {\n    allocateBoundingBox,\n    negotiateDimension,\n    computePosition\n} from '../helper';\n\nexport default class LayoutModel {\n    constructor (measurements, config) {\n        this._measurements = measurements;\n        this._config = config;\n        this._root = this.createTree(this._config, null);\n        this.setBoundBox();\n    }\n\n    createTree (config, parent) {\n        const node = new Node(config);\n        if (parent) {\n            node.parentCut(parent.getCutType());\n            parent.addChildren([node]);\n        } else {\n            this._root = node;\n        }\n        for (const lane of config.lanes()) {\n            this.createTree(lane, node);\n        }\n\n        return this._root;\n    }\n\n    setBoundBox () {\n        this._root.boundBox({\n            top: 0,\n            left: 0,\n            width: this._measurements.width,\n            height: this._measurements.height\n        });\n        allocateBoundingBox(this._root);\n    }\n\n    setHostPosition (node) {\n        node.children().forEach((child) => {\n            LayoutModel.setHostSpatialConfig(child);\n            this.setHostPosition(child);\n        });\n    }\n\n    static setHostSpatialConfig (node) {\n        const bb = node.boundBox();\n        const host = node.model().host();\n        if (host && host.setSpatialConfig) {\n            const conf = {\n                x: bb.left,\n                y: bb.top,\n                width: bb.width,\n                height: bb.height,\n                renderAt: node.id()\n            };\n            host.setSpatialConfig(conf);\n        }\n    }\n\n    negotiate () {\n        negotiateDimension(this._root);\n        computePosition(this._root);\n        return this;\n    }\n\n    broadcast () {\n        this.setHostPosition(this._root);\n        return this;\n    }\n\n    tree () {\n        return this._root;\n    }\n}\n","/* eslint no-undef: \"off\" */\n/* eslint default-case: \"off\" */\nexport class Utils {\n    static isDOMElement (element) {\n        return element instanceof Element;\n    }\n\n    static getID (element) {\n        return element.id;\n    }\n\n    static getElement (id) {\n        return document.getElementById(id);\n    }\n\n    static findContainer (data) {\n        return data.filter(coordinate => coordinate.parent == null)[0];\n    }\n  /**\n   * static method to remove the div\n   * @param  {} divId - div ID to be removed.\n   */\n    static removeDiv (divId) {\n        if (document.getElementById(divId) !== null) { document.getElementById(divId).remove(); }\n    }\n}\n","import { DEFAULT_CLASS_NAME } from '../constants/defaults';\nimport { LayoutComponent } from '../layout-component';\n\nexport default class DataPoint {\n    constructor (node) {\n        this._node = node;\n        this._className = node.model().host() instanceof LayoutComponent ?\n                            node.model().host().className() : DEFAULT_CLASS_NAME;\n    }\n\n    node () {\n        return this._node;\n    }\n\n    hasHost () {\n        return this._node.model().host() instanceof LayoutComponent;\n    }\n\n    className () {\n        return this._className || DEFAULT_CLASS_NAME;\n    }\n}\n","import { getnodePoints } from './helper';\n\nexport class DataParser {\n    constructor (data) {\n        this._data = data;\n    }\n\n    defaultDataPointLogic () {\n        const nodepoints = [];\n        getnodePoints(this._data, nodepoints);\n        return nodepoints;\n    }\n\n}\n","import DataPoint from './data-point';\n\nexport const getnodePoints = (node, nodepoints) => {\n    const datapoint = new DataPoint(node);\n    nodepoints.push(datapoint);\n    node.children().forEach((child) => {\n        getnodePoints(child, nodepoints);\n    });\n};\n","import { DataParser } from './data-parser';\n\nexport class HTMLDataAdapter extends DataParser {\n    getCoordinates () {\n        return super.defaultDataPointLogic();\n    }\n}\n","export class Renderer {\n\n    initRenderer (node, tree) {\n        node.__logicalTree = tree;\n    }\n}\n","import { HTMLDataAdapter } from '../data-adapters/html-data';\nimport { Utils } from '../utils';\nimport { Renderer } from './renderer';\n\nexport class HTMLRenderer extends Renderer {\n    constructor (data) {\n        super();\n        this._data = data;\n        this._coordinates = new HTMLDataAdapter(this._data).getCoordinates();\n    }\n\n    createhtml (mount, className) {\n        const mainDiv = mount;\n        super.initRenderer(mainDiv, this._data); // Initialise node with layout id\n        this.parentDiv = this.createAndCustomiseParent(className);\n        this._coordinates.forEach((node) => {\n            if (node.hasHost()) {\n                const host = node.node();\n                this.parentDiv.appendChild(this.createAndPositionDiv({ ...host.boundBox(),\n                    id: host.id(),\n                    className: node.className() }));\n            }\n        });\n        mainDiv.appendChild(this.parentDiv);\n    }\n\n    createAndPositionDiv (config) {\n        const { top, left, height, width, className, id } = config;\n        const existingDiv = document.getElementById(id);\n        const div = existingDiv || document.createElement('div');\n        div.style.position = 'absolute';\n        div.style.left = `${left}px`;\n        div.style.top = `${top}px`;\n        div.style.height = `${height}px`;\n        div.style.width = `${width}px`;\n        div.id = id;\n        div.className = className;\n        return div;\n    }\n\n    createAndCustomiseParent (className) {\n        const container = Utils.findContainer(this._coordinates);\n        const host = container.node();\n        const parentDiv = this.createAndPositionDiv({ ...host.boundBox(),\n            id: host.id(),\n            className: container.className() });\n        parentDiv.className = className;\n        parentDiv.style.position = 'relative';\n        return parentDiv;\n    }\n\n    coordinates () {\n        return this._coordinates;\n    }\n}\n","import { HTMLRenderer } from '../renderers/html-renderer';\nimport { LayoutComponent } from '../layout-component';\n\nexport const getChildNode = (context, config) =>\n                        context.renderer().createAndPositionDiv(config);\n\nexport const findNode = (context, nodeID) =>\n                        context.renderer().coordinates().find(point => point.node().id() === nodeID);\n\nexport const renderHTML = (context) => {\n    context.renderer(new HTMLRenderer(context.data()));\n    context.renderer().createhtml(context.mount(), context.className());\n};\n\nexport const drawLayout = (context) => {\n    switch (context.renderer()) {\n    case 'html' :\n        renderHTML(context);\n        break;\n    default:\n        renderHTML(context);\n    }\n};\n\nexport const drawComponent = (componentData) => {\n    componentData.children().forEach((node) => {\n        const host = node.model().host();\n        if (host instanceof LayoutComponent) {\n            host.draw();\n        }\n        drawComponent(node);\n    });\n};\n\nexport const removeElement = (elemID) => {\n    document.removeElement(document.getElementById(elemID));\n};\n\nexport const resolveAligment = (context, componentData) => {\n    componentData.children().forEach((component) => {\n        const host = component.model().host();\n        if (host instanceof LayoutComponent && host.alignWith()) {\n            let newNodeConfig = {};\n            const point = findNode(context, component.id()).node();\n            const node = point.boundBox();\n            const refNode = findNode(context, context.componentMap().get(host.alignWith()).renderAt())\n                                .node()\n                                .boundBox();\n            switch (host.alignment()) {\n            case 'left':\n                newNodeConfig = {\n                    top: node.top,\n                    left: refNode.left,\n                    height: node.height,\n                    width: Math.abs(node.width - Math.abs(refNode.left - node.left))\n                };\n                break;\n\n            case 'right':\n                newNodeConfig = {\n                    top: node.top,\n                    left: node.left,\n                    height: node.height,\n                    width: Math.abs(node.width - Math.abs(node.left + node.width - (refNode.left + refNode.width)))\n                };\n                break;\n\n            case 'top':\n                newNodeConfig = {\n                    top: refNode.top,\n                    left: node.left,\n                    height: Math.abs(node.height - Math.abs(refNode.top - node.top)),\n                    width: node.width\n                };\n                break;\n\n            case 'bottom':\n                newNodeConfig = {\n                    top: node.top,\n                    left: node.left,\n                    height: Math.abs(node.top - refNode.top + refNode.height),\n                    width: node.width\n                };\n                break;\n\n            case 'h-center':\n                newNodeConfig = {\n                    top: node.top,\n                    left: refNode.left,\n                    height: node.height,\n                    width: refNode.width\n                };\n                break;\n\n            case 'v-center':\n                newNodeConfig = {\n                    top: refNode.top,\n                    left: node.left,\n                    height: refNode.top,\n                    width: node.width\n                };\n                break;\n            default:\n                break;\n            }\n    // check if model in parent component\n            Object.assign(newNodeConfig, { id: point.id(), className: host.className() });\n            context.renderer().createAndPositionDiv(newNodeConfig);\n            context.componentMap().get(host.name()).setSpatialConfig({\n                x: newNodeConfig.left,\n                y: newNodeConfig.top,\n                height: newNodeConfig.height,\n                width: newNodeConfig.width\n\n            });\n        }\n        resolveAligment(context, component);\n    });\n};\n","import { Utils } from '../utils';\nimport { drawLayout, resolveAligment, drawComponent } from './helper';\n\nexport class DrawingManager {\n    constructor (data, renderer, container) {\n        this._data = data.tree;\n        this._componentMap = data.componentMap;\n        this._layoutClassName = data.layoutClassName;\n        this._renderer = renderer;\n        this._mount = Utils.isDOMElement(container) ? container : Utils.getElement(container);\n    }\n\n    draw () {\n        drawLayout(this);\n        resolveAligment(this, this._data);\n        drawComponent(this._data);\n        return this;\n    }\n\n    data (data) {\n        if (data) {\n            this._data = data;\n        }\n        return this._data;\n    }\n\n    componentMap (param) {\n        if (param) {\n            this._componentMap = param;\n        }\n        return this._componentMap;\n    }\n\n    className (param) {\n        if (param) {\n            this._layoutClassName = param;\n        }\n        return this._layoutClassName;\n    }\n\n    renderer (param) {\n        if (param) {\n            this._renderer = param;\n        }\n        return this._renderer;\n    }\n\n    mount (param) {\n        if (param) {\n            this._mount = param;\n        }\n        return this._mount;\n    }\n}\n","import DefinitionModel from './definitionModel';\nimport { prepareTargetComponentMap, getComponent, placeComponent, placeGridComponent } from '../helper';\n\nexport default class DefinitionManager {\n    constructor (componentMap, sequence, totalHeight, totalWidth) {\n        this._componentMap = componentMap;\n        this._prioritySequence = sequence;\n        this._totalHeight = totalHeight;\n        this._totalWidth = totalWidth;\n        this._targetComponentMap = null;\n    }\n\n    // create the config model\n    generateConfigModel () {\n        prepareTargetComponentMap(this);\n        const canvasComponent = this._targetComponentMap.get('canvas');\n        const definitionModel = new DefinitionModel({});\n        let tempDefModel = definitionModel;\n        definitionModel.remainingHeight(this._totalHeight);\n        definitionModel.remainingWidth(this._totalWidth);\n\n        let componentRef = null;\n\n        this._prioritySequence.forEach((name) => {\n            componentRef = getComponent(canvasComponent, name);\n            if (name !== 'grid') {\n                tempDefModel = placeComponent(tempDefModel, componentRef).second;\n            } else {\n                tempDefModel = placeGridComponent(tempDefModel, componentRef.component);\n            }\n        });\n        return definitionModel;\n    }\n\n    componentMap (param) {\n        if (param) {\n            this._componentMap = param;\n        }\n        return this._componentMap;\n    }\n\n    targetComponentMap (param) {\n        if (param) {\n            this._targetComponentMap = param;\n        }\n        return this._targetComponentMap;\n    }\n}\n","import { sanitizeConfig } from './helper';\n\nexport class LayoutDef {\n    constructor () {\n        this._componentMap = new Map();\n        this._layoutDefinition = null;\n    }\n\n    addComponent (component) {\n        this._componentMap.set(component.name(), component);\n    }\n\n    layoutDefinition (def) {\n        if (def) {\n            this._layoutDefinition = def;\n        }\n        return this._layoutDefinition;\n    }\n\n    addMultipleComponent (componentArray) {\n        componentArray.forEach((comp) => {\n            this.addComponent(comp);\n        });\n    }\n\n    sanitizedDefinition () {\n        sanitizeConfig(this, this._layoutDefinition);\n        return this.layoutDefinition();\n    }\n\n    componentMap () {\n        return this._componentMap;\n    }\n    resetComponentMap () {\n        this._componentMap.clear();\n    }\n}\n","import DefinitionManager from '../layout-definition/definition-manager';\n\nexport function sanitizeConfig (context, hostObj) {\n    const hostID = hostObj.host();\n    if (hostObj.lanes() && hostObj.lanes().length) {\n        hostObj.lanes().forEach(childHost => sanitizeConfig(context, childHost));\n    }\n    if (hostID != null && typeof (hostID) === 'string') {\n        if (context.componentMap().get(hostID) !== undefined) {\n            hostObj.host(context.componentMap().get(hostID));\n        }\n    }\n}\n\nexport function calLayOutDef (context) {\n    const { height, width } = context.dimension();\n    const defManager = new DefinitionManager(context.layoutDef().componentMap(),\n                                              context.prioritySequence(),\n                                              height,\n                                              width);\n    const genLayoutdef = defManager.generateConfigModel();\n    return genLayoutdef;\n}\n","import {\n  LayoutModel\n} from '../layout-definition';\n\nimport {\n  DEFAULT_WIDTH,\n  DEFAULT_HEIGHT\n} from '../constants/defaults';\n\nimport { DrawingManager } from '../drawing-manager';\nimport { Utils } from '../utils';\nimport { LayoutDef } from './layout-def';\nimport { calLayOutDef } from './helper';\n\nexport default class LayoutManager {\n    constructor (conf) {\n        this._renderAt = conf.renderAt;\n        this._layoutClassName = conf.className;\n        this._dimension = {\n            width: conf.width || DEFAULT_WIDTH,\n            height: conf.height || DEFAULT_HEIGHT\n        };\n\n        this._skeletonType = conf.skeletonType || 'html';\n        this._layoutDefinition = null;\n        this._layoutDef = new LayoutDef();\n        this._drawingManager = null;\n        this._prioritySequence = [];\n        this.tree = null;\n        this._rootNodeID = null;\n    }\n\n    layoutDef (param) {\n        if (param) {\n            this._layoutDef = param;\n        }\n        return this._layoutDef;\n    }\n\n    prioritySequence (param) {\n        if (param) {\n            this._prioritySequence = param;\n        }\n        return this._prioritySequence;\n    }\n\n    dimension (param) {\n        if (param) {\n            Object.assign(this._dimension, param);\n        }\n        return this._dimension;\n    }\n\n    addComponent (component) {\n        this._layoutDef.addComponent(component);\n    }\n\n    addMultipleComponent (componentArray) {\n        this._layoutDef.addMultipleComponent(componentArray);\n    }\n\n    resetNode (node) {\n        if (this.con) {\n            this.con.resetNode(node);\n        }\n    }\n\n  /**\n   * function to update the node and rerender the layout.\n   * @param  {} config - node configuration to change.\n   */\n    updateNode (config) {\n        this.tree.updateNode(config);\n        this._layoutDefinition = this.tree.model;\n        this.compute();\n    }\n\n    compute () {\n        //----\n        if (Utils.isDOMElement(this._renderAt)) {\n            this._renderAt._layout = this;\n        } else {\n            document.getElementById(this._renderAt)._layout = this;\n        }\n        //-----\n        this._layoutDefinition = calLayOutDef(this);\n        this._layoutDef.layoutDefinition(this._layoutDefinition);\n        this._layoutDefinition = this._layoutDef.sanitizedDefinition();\n        this._layout = new LayoutModel({\n            width: this._dimension.width,\n            height: this._dimension.height\n        },\n            this._layoutDefinition);\n        this.tree = this._layout.negotiate().tree();\n        this._layout.broadcast();\n        this._drawingManager = new DrawingManager({\n            tree: this.tree,\n            componentMap: this._layoutDef.componentMap(),\n            layoutClassName: this._layoutClassName\n        }, this._skeletonType, this._renderAt);\n\n        if (this._rootNodeID) {\n            this.tree.id(this._rootNodeID);\n        } else {\n            this._rootNodeID = this.tree.id();\n        }\n    // this will draw all the components by calling their draw method\n        this._drawingManager.draw();\n    }\n\n    getRootNodeId () {\n        return this._rootNodeID;\n    }\n\n  /**\n  * This function takes the LayoutComponents and Register them in component store\n  * @param {Array<LayoutComponent>} layoutComponents\n  */\n    registerComponents (layoutComponents) {\n        this._prioritySequence.length = 0;\n        this._layoutDef.resetComponentMap();\n        layoutComponents.forEach((container) => {\n            if (container) {\n                this._prioritySequence.push(container.name());\n                this.addComponent(container);\n                if (container.name() === 'grid') {\n                    container.component.forEach((componentArr) => {\n                        componentArr.forEach((compo) => {\n                            this.addComponent(compo);\n                        });\n                    });\n                }\n            }\n        });\n        return this;\n    }\n\n    getComponent (componentName) {\n        return this._layoutDef.componentMap().get(componentName);\n    }\n\n    renderAt (mount) {\n        if (mount) {\n            this._renderAt = mount;\n        }\n        return this._renderAt;\n    }\n}\n","import { isEqual, STATE_NAMESPACES, selectElement, getValueParser } from 'muze-utils';\nimport { VisualGroup } from '@chartshq/visual-group';\nimport { ROWS, COLUMNS, COLOR, SHAPE, SIZE, DETAIL, DATA, CONFIG }\n    from '../constants';\nimport { canvasOptions } from './local-options';\nimport { LayoutManager } from '../../../layout/src/tree-layout';\n\n/**\n * Instantiate high level components. Canvas knows what all high level component it has.\n * @nice-to-have dynamic high level components.\n *  - Is it even required ?\n *  - Reactive to source (canvas) streaming ?\n * @param {*} context Canvas instance\n * @return {Object.<Array>} Arrays of Title, visualGroup, Legend\n */\nexport const initCanvas = (context) => {\n    const reg = context._registry.components;\n\n    return [new reg.VisualGroup(context._registry, Object.assign({\n        throwback: context._throwback\n    }, context.dependencies()))];\n};\n\nexport const fixScrollBarConfig = (config) => {\n    config.scrollBar.thickness = Math.min(50, Math.max(10, config.scrollBar.thickness));\n    return config;\n};\n\nexport const setLayoutInfForUnits = (context) => {\n    const layoutManager = context._layoutManager;\n    const boundBox = layoutManager.getComponent('grid').getBoundBox();\n    const valueMatrix = context.composition().visualGroup.matrixInstance().value;\n    const parentContainer = selectElement(`#${layoutManager.getRootNodeId()}`).node();\n    valueMatrix.each((cell) => {\n        cell.valueOf().parentContainerInf({\n            el: parentContainer,\n            dimensions: boundBox\n        });\n    });\n};\n\n/**\n *\n *\n * @memberof Canvas\n */\nexport const dispatchProps = (context) => {\n    const lifeCycleManager = context.dependencies().lifeCycleManager;\n    lifeCycleManager.notify({ client: context, action: 'beforeupdate' });\n    const visualGroup = context.composition().visualGroup;\n\n    const allOptions = context._allOptions;\n    for (const key in allOptions) {\n        const value = context[key]();\n        if (value !== null) {\n            visualGroup[key] && visualGroup[key](value);\n        }\n    }\n    const { invalidValues } = context.config();\n\n    visualGroup.valueParser(getValueParser(invalidValues));\n    visualGroup.createMatrices();\n    context._cachedProps = {};\n    lifeCycleManager.notify({ client: context, action: 'initialized' });\n    lifeCycleManager.notify({ client: context, action: 'updated' });\n};\n\nconst equalityChecker = (props, params) => {\n    let checker = () => false;\n    return !props.every((option, i) => {\n        switch (option) {\n        case ROWS:\n        case COLUMNS:\n        case DETAIL:\n            checker = isEqual('Array');\n            break;\n\n        case SHAPE:\n        case SIZE:\n        case COLOR:\n        case DATA:\n        case CONFIG:\n            checker = isEqual('Object');\n            break;\n        default:\n            checker = () => true;\n            break;\n        }\n        const oldVal = params[i][0];\n        const newVal = params[i][1];\n\n        return checker(oldVal, newVal);\n    });\n};\n\nconst updateChecker = (props, params) => props.every((option, i) => {\n    const val = params[i][1];\n    switch (option) {\n    case ROWS:\n    case COLUMNS:\n        return val !== null;\n\n    case DATA:\n        return val && !val.isEmpty();\n\n    default:\n        return true;\n\n    }\n});\n\nexport const notifyAnimationEnd = (context) => {\n    const centerMatrix = context.layout().viewInfo().viewMatricesInfo.matrices.center[1] || [];\n    const promises = [];\n    centerMatrix.forEach((cellArr) => {\n        cellArr.forEach((cell) => {\n            promises.push(cell.valueOf().done());\n        });\n    });\n    const lifeCycleManager = context.lifeCycle();\n    if (promises.length) {\n        Promise.all(promises).then(() => {\n            // Update life cycle\n            lifeCycleManager.notify({ client: context, action: 'drawn' });\n            const animDonePromises = [];\n\n            centerMatrix.forEach((cellArr) => {\n                cellArr.forEach((cell) => {\n                    cell.valueOf().layers().forEach((layer) => {\n                        animDonePromises.push(layer.animationDone());\n                    });\n                });\n            });\n\n            [context.xAxes(), context.yAxes()].forEach((axisArr) => {\n                axisArr = axisArr || [];\n                axisArr.forEach((axes) => {\n                    axes.forEach((axisInst) => {\n                        animDonePromises.push(axisInst.animationDone());\n                    });\n                });\n            });\n\n            Promise.all(animDonePromises).then(() => {\n                lifeCycleManager.notify({ client: context, action: 'animationend' });\n            });\n        });\n    } else {\n        lifeCycleManager.notify({ client: context, action: 'animationend' });\n    }\n};\n\nexport const setupChangeListener = (context) => {\n    const store = context._store;\n\n    const allOptions = Object.keys(context._allOptions);\n    const props = [...allOptions, ...Object.keys(canvasOptions)];\n    const nameSpaceProps = [...allOptions, ...Object.keys(canvasOptions)].map(prop =>\n        `${STATE_NAMESPACES.CANVAS_LOCAL_NAMESPACE}.${prop}`);\n    store.registerChangeListener(nameSpaceProps, (...params) => {\n        let updateProps = equalityChecker(props, params);\n        updateProps = updateChecker(props, params);\n\n        // inform attached board to rerender\n        if (updateProps && context.mount()) {\n            dispatchProps(context);\n            context.render();\n        }\n        notifyAnimationEnd(context);\n    }, true);\n};\n\nexport const applyInteractionPolicy = (firebolt) => {\n    const canvas = firebolt.context;\n    const visualGroup = canvas.composition().visualGroup;\n    if (visualGroup) {\n        const valueMatrix = visualGroup.matrixInstance().value;\n        const interactionPolicy = firebolt._interactionPolicy;\n        interactionPolicy(valueMatrix, firebolt);\n        const crossInteractionPolicy = firebolt._crossInteractionPolicy;\n        const behaviours = crossInteractionPolicy.behaviours;\n        const sideEffects = crossInteractionPolicy.sideEffects;\n        valueMatrix.each((cell) => {\n            const unitFireBolt = cell.valueOf().firebolt();\n            for (const key in behaviours) {\n                unitFireBolt.changeBehaviourStateOnPropagation(key, behaviours[key]);\n            }\n            for (const key in sideEffects) {\n                unitFireBolt.changeSideEffectStateOnPropagation(key, sideEffects[key]);\n            }\n        });\n    }\n};\n\n/**\n * Sets the rotation for all x axes if any axis has the rotation config set in the\n * entire view\n *\n * @param {Array} columns Column cells that contain the axes cells\n */\nexport const setLabelRotationForAxes = (context) => {\n    let rotation = 0;\n\n    const xAxes = context.xAxes() || [];\n\n    (() => {\n        for (let i = 0; i < xAxes.length; i++) {\n            for (let j = 0; j < xAxes[i].length; j++) {\n                const rotationVal = xAxes[i][j].renderConfig().labels.rotation;\n                if (rotationVal && rotationVal !== 0) {\n                    rotation = rotationVal;\n                    return;\n                }\n            }\n        }\n    })();\n\n    if (rotation) {\n        xAxes.forEach((axes) => {\n            axes.forEach((axis) => {\n                axis.renderConfig({ labels: { rotation } });\n                axis.smartTicks(axis.setTickConfig());\n            });\n        });\n    }\n};\n\nexport const createGroupState = (context) => {\n    const [globalState, localState] = VisualGroup.getState();\n    const store = context._store;\n    store.append('app.group', globalState);\n    store.append('local.group', localState);\n};\n\nexport const removeChild = (mount) => {\n    while (mount.firstChild) {\n        mount.removeChild(mount.firstChild);\n    }\n};\n\nexport const createLayoutManager = () => {\n    const layoutManager = new LayoutManager({\n        className: 'muze-group-container'\n    });\n    return layoutManager;\n};\n","/**\n * This is the global options semantics based on which setters getters are created and reactivity is initiated.\n * Format\n *  PROPERTRY_NAME: {\n *      value: // default value of the property,\n *      meta: {\n *          typeCheck: // The setter value will be checked using this. If the value is function then the setter value\n *                     // is passed as args.\n *          typeExpected: // The output of typecheck action will be tested against this. Truthy value will set the\n *                       // value to the setter\n *          sanitizaiton: // Need for sanitization before type is checked\n *      }\n *  }\n * @module GlobalOptions\n */\n\nimport { intSanitizer, mergeRecursive, DataModel } from 'muze-utils';\nimport { fixScrollBarConfig } from './canvas/helper';\nimport { DEFAULT_CONFIG } from './defaults';\n\nexport default {\n    data: {\n        value: null,\n        meta: {\n            typeCheck: d => d instanceof DataModel\n        }\n    },\n    width: {\n        value: 0,\n        meta: {\n            sanitization: intSanitizer,\n            typeCheck: Number.isInteger\n        }\n    },\n    height: {\n        value: 0,\n        meta: {\n            sanitization: intSanitizer,\n            typeCheck: Number.isInteger\n        }\n    },\n    minUnitWidth: {\n        value: 50,\n        meta: {\n            sanitization: intSanitizer,\n            typeCheck: Number.isInteger\n        }\n    },\n    minUnitHeight: {\n        value: 50,\n        meta: {\n            sanitization: intSanitizer,\n            typeCheck: Number.isInteger\n        }\n    },\n    config: {\n        value: null,\n        meta: {\n            typeCheck: 'constructor',\n            typeExpected: 'Object',\n            sanitization: (config, oldConfig) => {\n                // Reset the configuration when null is passed\n                const oldConf = mergeRecursive({}, config === null ? {} : oldConfig);\n                const defConfig = mergeRecursive(oldConf, DEFAULT_CONFIG);\n                let newConf = mergeRecursive(defConfig, config);\n                newConf = fixScrollBarConfig(newConf);\n\n                return newConf;\n            }\n\n        }\n    }\n};\n","/**\n * This file exports constants that will be used to\n * create the state store of the table layout.\n */\n/**\n * The index of top, bottom and center in the matrix\n */\nexport const VIEW_INDEX = {\n    top: 0,\n    center: 1,\n    bottom: 2\n};\n\nexport const ROW_MATRIX_INDEX = {\n    0: 'top',\n    1: 'center',\n    2: 'bottom'\n};\n\nexport const COLUMN_MATRIX_INDEX = {\n    0: 'left',\n    1: 'middle',\n    2: 'right'\n};\n\n/**\n * The width of the grid suppied by the user.\n */\nexport const GRID_WIDTH = 'width';\n\n/**\n * The height of the grid supplied by the user.\n */\nexport const GRID_HEIGHT = 'height';\n\n/**\n  * The border for the grid\n  */\nexport const BORDER = 'border';\n\n /**\n  *  The index of the first visible row in view matrix.\n  */\nexport const ROW_POINTER = 'rowPointer';\n\n/**\n * The index of the first visible column in the view matrix.\n */\nexport const COLUMN_POINTER = 'columnPointer';\n\n/**\n * Flag to specify whether row sizes should be equal.\n */\nexport const ROW_SIZE_IS_EQUAL = 'isRowSizeEqual';\n\n/**\n * Flag to specify whether column sizes are equal.\n */\nexport const COLUMN_SIZE_IS_EQUAL = 'isColumnSizeEqual';\n\n/**\n * Field to store an array an of the widths of visible columns.\n * @computed\n */\nexport const COLUMN_WIDTHS = 'visibleColumnWidths';\n\n/**\n * Field to store an array of heights of visible rows.\n * @computed\n */\nexport const ROW_HEIGHTS = 'visibleRowHeights';\n\n/**\n * Field to store the width of the left matrix.\n * @computed\n */\nexport const LEFT_MATRIX_WIDTH = 'leftMatrixWidth';\n\n/**\n * Field to store the width of the right matrix.\n * @computed\n */\nexport const RIGHT_MATRIX_WIDTH = 'rightMatrixWidth';\n\n/**\n * Field to store the height of the top matrix.\n * @computed\n */\nexport const TOP_MATRIX_HEIGHT = 'topMatrixHeight';\n\n/**\n * Field to store the height of the bottom matrix.\n * @computed\n */\nexport const BOTTOM_MATRIX_HEIGHT = 'bottomMatrixHeight';\n\n/**\n * The dom element to render the layout inside.\n */\nexport const MOUNT_POINT = 'mount';\n\n/**\n * The id attribute of the left table element.\n */\nexport const LEFT_TABLE_ID = 'grid-left';\n\n/**\n * The id attribute of the right table element.\n */\nexport const RIGHT_TABLE_ID = 'grid-right';\n\n/**\n * The id attribute of the top table.\n */\nexport const TOP_TABLE_ID = 'grid-top';\n\n/**\n * The id attribute of the bottom table.\n */\nexport const BOTTOM_TABLE_ID = 'grid-bottom';\n\n/**\n * The id attribute of the center table.\n */\nexport const CENTER_TABLE_ID = 'grid-center';\n\n/**\n * The id attribute of the top div.\n */\nexport const TOP_DIV_ID = 'muze-div-top';\n\n/**\n * The id attribute of the bottom div.\n */\nexport const BOTTOM_DIV_ID = 'muze-div-bottom';\n\n/**\n * The id attribute of the center div.\n */\nexport const CENTER_DIV_ID = 'muze-div-center';\n\n/**\n * Field that indicates if the row configuration has changed\n */\nexport const HAVE_ROWS_CHANGED = 'haveRowsChanged';\n\n/**\n * Field that indicates if the column configuration has changed\n */\nexport const HAVE_COLUMNS_CHANGED = 'haveColumnsChanged';\n\n/**\n * Field that indicates if the values configuration for the center matrix has changed\n */\nexport const HAVE_VALUES_CHANGED = 'haveValuesChanged';\n\n/**\n * Field that indicates the width of row matrix\n */\nexport const ROW_MATRIX_WIDTH = 'rowMatrixWidth';\n\n/**\n * Field that indicates the height of row matrix\n */\nexport const COLUMN_MATRIX_HEIGHT = 'columnMatrixHeight';\n\n/**\n * Field that indicates the unit width of layout\n */\nexport const UNIT_WIDTH = 'unitWidth';\n\n/**\n * Field that indicates the unit height of layout\n */\nexport const UNIT_HEIGHT = 'unitHeight';\n\n/**\n * Field that indicates the style object\n */\nexport const STYLE = 'style';\n\n/**\n * Field that indicates the color configuration\n */\nexport const COLOR = 'color';\n\n/**\n * Field that indicates width\n */\nexport const WIDTH = 'width';\n\n/**\n * Field that indicates collpase property for border\n */\nexport const COLLAPSE = 'collapse';\n\n/**\n * Field that indicates spacing property for border\n */\nexport const SPACING = 'spacing';\n\n/**\n * Field that indicates spacing property for border\n */\nexport const DISTRIBUTION = 'distribution';\n\n/**\n * Field that indicates spacing property for border\n */\nexport const GUTTERSPACE = 'gutterSpace';\n\n/**\n * Field that indicates spacing property for border\n */\nexport const BREAK_PAGE = 'breakPage';\n\n/**\n * Field that indicates spacing property for border\n */\nexport const SHOW_ROW_BORDERS = 'showRowBorders';\n\n/**\n * Field that indicates spacing property for border\n */\nexport const SHOW_COL_BORDERS = 'showColBorders';\n\n/**\n * Field that indicates spacing property for border\n */\nexport const SHOW_VALUE_BORDERS = 'showValueBorders';\n\nexport const HEIGHT = 'height';\nexport const COLUMN = 'column';\nexport const ROW = 'row';\nexport const TOP = 'top';\nexport const LEFT = 'left';\nexport const RIGHT = 'right';\nexport const BOTTOM = 'bottom';\nexport const CENTER = 'center';\nexport const CLICK = 'click';\nexport const ROW_LEFT = 'rowLeft';\nexport const ROW_RIGHT = 'rowRight';\nexport const COLUMN_BOTTOM = 'colBottom';\nexport const COLUMN_TOP = 'colTop';\nexport const AUTO = 'auto';\nexport const ROW_SPAN = 'rowSpan';\nexport const COL_SPAN = 'colSpan';\nexport const ROW_ROOT = 'rowRoot';\nexport const COLUMN_ROOT = 'columnRoot';\nexport const PRIMARY = 'primary';\nexport const SECONDARY = 'secondary';\nexport const VERTICAL = 'vertical';\nexport const HORIZONTAL = 'horizontal';\n\nexport const BLANK_BORDERS = 'rgba(0,0,0,0)';\n\nexport const PAGINATION = 'pagination';\nexport const BUFFER = 'buffer';\nexport const HOLISTIC = 'holistic';\nexport const SCROLL = 'scroll';\nexport const MIDDLE = 'middle';\nexport const NO_BORDERS = null;\n\nexport const MAX_WIDTH_AVAIL_FOR_COL_MATRIX = 'maxWidthAvailableForColumnMatrix';\nexport const COLUMN_MATRIX = 'columnMatrix';\nexport const MAX_HEIGHT_AVAIL_FOR_ROW_MATRIX = 'maxHeightAvailableForRowMatrix';\nexport const ROW_MATRIX = 'rowMatrix';\n","import { sanitizeIP, mergeRecursive } from 'muze-utils';\nimport { TOP, CENTER, BOTTOM } from '../enums/constants';\n\n/*\n * This is the abstract implementation of the root layout. This takes care of common work which all the layouts\n * has to handle. The common work includes sanitizaion of inputs, update, rerender, dispose etc. This class can't be\n * used directly (as ofcourse this is an abstract implementaiton), the class which is implementing it has to implement\n * the necessary methods and gives its on visual.\n */\n\n/**\n * This class is used to create a generic layout. It can be extended to create layouts\n * of different types\n * @class GenericLayout\n */\nexport default class GenericLayout {\n\n    /**\n     * Creates an instance of TableLayout.\n     * @param {HTMLElement} mountPoint DOM element/d3 selection where the layout is to be mounted\n     * @param {Object} measurement The dimensions of the layout\n     * @param {Object} config configuration to be given for the layout\n     * @param {Object} dependencies external dependencies.\n     *\n     * @memberof GenericLayout\n     *\n     */\n    constructor (mountPoint, measurement, config, dependencies) {\n        this._config = {};\n        this._measurement = {};\n        this._matrices = [];\n        // External dependencies to be included for the layout. This includes the ext global dependencies like\n        // smartlabel which has one single implementation of throughout the page or per isntance\n        this._dependencies = dependencies;\n\n        this.measurement(measurement);\n        this.mountPoint(mountPoint);\n        this.config(config);\n    }\n\n    /**\n     * Returns an object which is used to recreate the layout.\n     * @return {Object} the serialized components\n     */\n    serialize () {\n        return {\n            measurement: this.measurement(),\n            config: this.config(),\n            matrices: this.matrices()\n        };\n    }\n\n     /**\n     * Sets/Gets the config for the layout\n     * @param {Object} config configuration for the layout\n     * @return {Layout|Object} Gets the Config/ Returns this instance when set\n     */\n    config (config) {\n        if (config) {\n            this._config = mergeRecursive(this._config || {}, config);\n            this._config.border.width = Math.max(0, this._config.border.width);\n            return this;\n        }\n        return this._config;\n    }\n\n    /**\n     * Sets/Gets the measurement for the layout\n     * @param {Object} measurement measurement for the layout\n     * @return {Layout|Object} Gets the measurement/ Returns this instance when set\n     */\n    measurement (measurement) {\n        if (measurement) {\n            this._measurement = mergeRecursive(this._measurement || {}, measurement);\n\n            return this;\n        }\n        return this._measurement;\n    }\n\n    /**\n     * Sets/Gets the matrices for the layout\n     * @param {Object} matrices matrices for the layout\n     * @return {Layout|Object} Gets the matrices/ Returns this instance when set\n     */\n    matrices (matrices) {\n        if (matrices) {\n            this._matrices = sanitizeIP.typeObj([TOP, CENTER, BOTTOM], matrices);\n\n            return this;\n        }\n        return this._matrices;\n    }\n\n    /**\n     * Sets/Gets the matrix for row\n     * @param {Object} matrix matrices for the layout\n     * @return {Layout|Object} Gets the matrix/ Returns this instance when set\n     */\n    rowMatrix (matrix) {\n        if (matrix) {\n            this._rowMatrix = matrix;\n            return this;\n        }\n        return this._rowMatrix;\n    }\n\n    /**\n     * Sets/Gets the matrix for columns\n     * @param {Object} matrix matrices for the layout\n     * @return {Layout|Object} Gets the matrix/ Returns this instance when set\n     */\n    columnMatrix (matrix) {\n        if (matrix) {\n            this._columnMatrix = matrix;\n            return this;\n        }\n        return this._columnMatrix;\n    }\n\n   /**\n     * Sets/Gets the matrix for value\n     * @param {Object} matrix matrices for the layout\n     * @return {Layout|Object} Gets the matrix/ Returns this instance when set\n     */\n    centerMatrix (matrix) {\n        if (matrix) {\n            this._centerMatrix = matrix;\n            return this;\n        }\n        return this._centerMatrix;\n    }\n\n    /**\n     * Sets/Gets the mountPoint for the layout\n     * @param {Object} mountPoint mountPoint for the layout\n     * @return {Layout|Object} Gets the mountPoint/ Returns this instance when set\n     */\n    mountPoint (mountPoint) {\n        if (mountPoint) {\n            this._mountPoint = mountPoint;\n\n            return this;\n        }\n        return this._mountPoint;\n    }\n}\n","import * as FieldNames from '../enums/constants';\n\n/**\n * Default configuration of the layout\n * @return {Object} returns the default configuration\n */\nexport const DEFAULT_CONFIGURATION = {\n    [FieldNames.BORDER]: {\n        [FieldNames.STYLE]: 'solid',\n        [FieldNames.COLOR]: '#d6d6d6',\n        [FieldNames.WIDTH]: 2,\n        [FieldNames.COLLAPSE]: true,\n        [FieldNames.SPACING]: 0\n    },\n    [FieldNames.PAGINATION]: 'scroll',\n    [FieldNames.BUFFER]: 20,\n    [FieldNames.GUTTERSPACE]: { rows: [], columns: [] },\n    [FieldNames.DISTRIBUTION]: { rows: [], columns: [] },\n    [FieldNames.BREAK_PAGE]: { rows: [], columns: [] },\n    [FieldNames.ROW_SIZE_IS_EQUAL]: false,\n    [FieldNames.COLUMN_SIZE_IS_EQUAL]: false,\n    [FieldNames.COLUMN_POINTER]: 0,\n    [FieldNames.ROW_POINTER]: 0\n};\n\n/**\n * Default measurements for the layout\n * @return {Object} returns the default measurements\n */\nexport const DEFAULT_MEASUREMENTS = {\n    [FieldNames.GRID_WIDTH]: 100,\n    [FieldNames.GRID_HEIGHT]: 100,\n    [FieldNames.UNIT_WIDTH]: 100,\n    [FieldNames.UNIT_HEIGHT]: 100\n};\n\nexport const BLANK_BORDERS = 'rgba(0,0,0,0)';\n","/**\n * This file exports utility functions that are used across the layout module\n */\nimport { Symbols } from 'muze-utils';\nimport { PRIMARY, SECONDARY, HEIGHT, WIDTH } from '../enums/constants';\n\nconst nest = Symbols.nest;\n/**\n *\n *\n * @param {*} isTransposed\n *\n */\nconst getMeasureInfo = (isTransposed) => {\n    if (isTransposed) {\n        return {\n            firstMeasure: HEIGHT,\n            secondMeasure: WIDTH\n        };\n    }\n    return {\n        firstMeasure: WIDTH,\n        secondMeasure: HEIGHT\n    };\n};\n\n/**\n *\n *\n * @param {*} i\n * @param {*} page\n *\n */\nconst findInPage = (i, page) => {\n    let count = 0;\n    for (const x in page) {\n        if (i < page[x]) {\n            count = x;\n            break;\n        }\n    }\n    return count;\n};\n\n/**\n * Creates a single matrix from two matrices\n *\n * @param {Array<Array>} matrix Input matrix\n * @return {Array<Array>} Joined matrix\n * @memberof VisualMatrix\n */\nexport const combineMatrices = (matrix, config) => {\n    const { isTransposed } = config;\n    let joinedMatrix = matrix[0].length > 0 ? matrix[0] : matrix[1];\n    if (isTransposed) {\n        joinedMatrix = matrix[0].length > 0 ? [...matrix[0]] : [];\n        joinedMatrix = matrix[1].length > 0 ? [...joinedMatrix, ...matrix[1]] : joinedMatrix;\n    } else {\n        joinedMatrix = joinedMatrix.map((row, rowIndex) => {\n            let rowData = [];\n            if (matrix[0].length > 0) {\n                rowData = [...matrix[0][rowIndex]];\n            }\n            if (matrix[1].length > 0) {\n                rowData = [...rowData, ...matrix[1][rowIndex]];\n            }\n            return rowData;\n        });\n    }\n    return joinedMatrix;\n};\n\n/**\n * Creates a hirachical tree from the context\n *\n * @param {Object} context context for creating tree\n * @return {Object} nested tree\n */\nexport const createTree = (context) => {\n    let matrixTree = {};\n    let lastLevelKey = 0;\n    let facet = PRIMARY;\n    const nestFn = nest();\n    const keys = [];\n    const layoutMatrix = context._layoutMatrix;\n    const primaryMatrix = context.primaryMatrix();\n    const secondaryMatrix = context.secondaryMatrix();\n    const { isTransposed, breakPage } = context.config();\n\n    if (!isTransposed) {\n        if (primaryMatrix.length === 0) {\n            facet = PRIMARY;\n        } else if (secondaryMatrix.length === 0) {\n            facet = SECONDARY;\n        } else {\n            facet = primaryMatrix.length >= secondaryMatrix.length ? PRIMARY : SECONDARY;\n        }\n        if (primaryMatrix.length > 0) {\n            for (let i = 0; i < primaryMatrix[0].length - 1; i++) {\n                keys.push(i);\n            }\n            keys.push(primaryMatrix[0].length - 1);\n            if (facet === SECONDARY || secondaryMatrix.length === 0) {\n                lastLevelKey = primaryMatrix[0].length - 1;\n            }\n        }\n        if (secondaryMatrix.length > 0) {\n            const keyLength = primaryMatrix.length > 0 ? primaryMatrix[0].length : 0;\n            for (let i = secondaryMatrix[0].length - 1; i > 0; i--) {\n                keys.push(i + keyLength);\n            }\n            keys.push(keyLength);\n\n            if (facet === PRIMARY) {\n                lastLevelKey = keyLength;\n            }\n        } else {\n            lastLevelKey = primaryMatrix.length > 0 ? primaryMatrix[0].length - 1 : 0;\n        }\n        keys.forEach((key) => {\n            let counter = -1;\n            return nestFn.key((d) => {\n                counter++;\n                return `${d[key].valueOf()}-${findInPage(counter, breakPage)}`;\n            });\n        });\n        matrixTree = nestFn.entries(layoutMatrix);\n    } else {\n        if (primaryMatrix.length === 0) {\n            facet = PRIMARY;\n        } else if (secondaryMatrix.length === 0) {\n            facet = SECONDARY;\n        } else {\n            facet = primaryMatrix.length >= secondaryMatrix.length ? PRIMARY : SECONDARY;\n        }\n        if (primaryMatrix.length > 0) {\n            for (let i = 0; i < primaryMatrix.length - 1; i++) {\n                keys.push(i);\n            }\n            // if (facet === PRIMARY) {\n            keys.push(primaryMatrix.length - 1);\n            // } else {\n            if (facet === SECONDARY) {\n                lastLevelKey = primaryMatrix.length - 1;\n            }\n        }\n        if (secondaryMatrix.length > 0) {\n            const primaryMatrixLength = primaryMatrix.length;\n            for (let i = secondaryMatrix.length - 1; i > 0; i--) {\n                keys.push(i + primaryMatrixLength);\n            }\n            // if (facet === SECONDARY) {\n            keys.push(primaryMatrixLength);\n            // }\n            if (facet === PRIMARY) {\n                lastLevelKey = primaryMatrixLength;\n            }\n        }\n        keys.forEach((key) => {\n            let counter = -1;\n            return nestFn.key((d) => {\n                counter++;\n                return `${d[key].valueOf()}-${findInPage(counter, breakPage)}`;\n            });\n        });\n        let newMatrix = [];\n        newMatrix = layoutMatrix[0].map((col, colIndex) => layoutMatrix.map(row => row[colIndex]));\n        matrixTree = nestFn.entries(newMatrix);\n    }\n    return { tree: matrixTree, lastLevelKey };\n};\n\n/**\n * Gives the min measues\n *\n * @param {boolean} isTransposed is column matrix\n * @param {Object} unitMeasures min measures to be given to cells\n * @return {Object} dimension min cell\n */\nexport const getMinMeasures = (isTransposed, unitMeasures) => {\n    if (!isTransposed) {\n        return {\n            height: unitMeasures.height,\n            width: 0\n        };\n    }\n    return {\n        height: 0,\n        width: unitMeasures.width\n    };\n};\n\n/**\n * Get the logical space from the tree\n *\n * @param {Node} item tree to be calculated\n * @param {number} measures width and height\n * @param {Array} minMeasures min measures for a cell\n * @param {Array} maxMeasure max measures for a col/row\n * @return {Object} dimension\n */\nexport const getLogicalSpace = (item, measures, minMeasures, maxMeasure = []) => {\n    const { firstMeasure, secondMeasure } = measures;\n    let firstMeasureValue = 0;\n    let secondMeasureValue = 0;\n    item.values.forEach((valueArray) => {\n        let fMeasure = 0;\n        let sMeasure = 0;\n        valueArray.forEach((placeholder, colIndex) => {\n            placeholder.setAvailableSpace();\n            const space = placeholder.getLogicalSpace();\n\n            sMeasure = Math.max(sMeasure, +space[secondMeasure], minMeasures[secondMeasure]);\n            maxMeasure[colIndex] = Math.max(maxMeasure[colIndex] || 0, space[firstMeasure]);\n            fMeasure += +maxMeasure[colIndex];\n        });\n        secondMeasureValue += sMeasure;\n        firstMeasureValue = Math.max(firstMeasureValue, fMeasure);\n        item.space = {\n            [secondMeasure]: Math.ceil(secondMeasureValue),\n            [firstMeasure]: Math.ceil(firstMeasureValue)\n        };\n    });\n    return {\n        [secondMeasure]: secondMeasureValue,\n        [firstMeasure]: firstMeasureValue\n    };\n};\n\n/**\n * Computes the logical spcae taken by the matrix tree\n *\n * @param {*} [item={}] tree to be viewed\n * @param {boolean} [isTransposed=false] is column matrix\n * @param {*} unitMeasures min measues for a cell\n * @param {Array} maxMeasure max measures for a col/row\n * @return {Object} logical space taken\n */\nexport const computeLogicalSpace = (item = {}, config, maxMeasures) => {\n    const { isTransposed = false, unitMeasures } = config;\n    const { firstMeasure, secondMeasure } = getMeasureInfo(isTransposed);\n    const { values } = item;\n    const minMeasures = getMinMeasures(isTransposed, unitMeasures);\n    if (values[0].key) {\n        const logicalSpace = { [firstMeasure]: 0, [secondMeasure]: 0 };\n\n        values.forEach((valueItem) => {\n            // Compute logical space for lowest level\n            const space = computeLogicalSpace(valueItem, config, maxMeasures);\n            // Set logical space for first measure\n            logicalSpace[firstMeasure] = Math.max(logicalSpace[firstMeasure], space[firstMeasure],\n                minMeasures[firstMeasure]);\n            // Set logical space for second measure\n            logicalSpace[secondMeasure] += +space[secondMeasure];\n        });\n        item.space = logicalSpace;\n        return logicalSpace;\n    }\n    return getLogicalSpace(item, { firstMeasure, secondMeasure }, minMeasures, maxMeasures);\n};\n\n/**\n * Gives the space taken by a row\n *\n * @param {Array} row matrix array of rows\n * @return {Object} dimension of the row\n */\nexport const spaceTakenByRow = (row) => {\n    let height = 0;\n    let width = 0;\n    row.forEach((col) => {\n        const spaces = col.getLogicalSpace();\n        height = Math.max(height, spaces.height);\n        width += spaces.width;\n    });\n    return {\n        width,\n        height\n    };\n};\n\n/**\n * Gives the space taken by a column\n *\n * @param {Array<Array>} matrix column matrix\n * @param {number} colIndex column index\n * @return {Object} dimension of the column\n */\nexport const spaceTakenByColumn = (matrix, colIndex) => {\n    let height = 0;\n    let width = 0;\n    matrix.forEach((row) => {\n        const col = row[colIndex];\n        const spaces = col.getLogicalSpace();\n        width = Math.max(width, spaces.width);\n        height += spaces.height;\n    });\n    return {\n        width,\n        height\n    };\n};\n\n/**\n * Creates different level matrices\n *\n * @param {Object} item matrix tree\n * @param {boolean} isTransposed is column matrix\n * @return {Object} matrix of each level\n */\nexport const createMatrixEachLevel = (item, isTransposed) => {\n    if (item.values[0].key) {\n        const arr = [];\n        item.values.forEach((child) => {\n            if (!isTransposed) {\n                arr.push(...createMatrixEachLevel(child, isTransposed));\n            } else {\n                const eachLevel = createMatrixEachLevel(child, isTransposed);\n                eachLevel.forEach((e, i) => {\n                    arr[i] = arr[i] || [];\n                    arr[i].push(...e);\n                });\n            }\n        });\n        item.matrix = arr;\n        return arr;\n    }\n    if (!isTransposed) {\n        item.matrix = item.values;\n    } else {\n        item.matrix = item.values[0].map((col, colIndex) => item.values.map(row => row[colIndex]));\n    }\n    return item.matrix;\n};\n\n/**\n * Breaks the matrix into two part\n *\n * @param {Array<Array>} matrix input matrix\n * @param {boolean} isTransposed is column matrix\n * @param {number} breakPointer point in matrix where it is to be broken\n * @return {Array} two broken matrix\n */\nexport const breakMatrix = (matrix, isTransposed, breakPointer) => {\n    const primaryMatrix = [];\n    const secondaryMatrix = [];\n    if (isTransposed) {\n        matrix.forEach((row, rowIndex) => {\n            if (rowIndex >= breakPointer) {\n                secondaryMatrix.push(row);\n            } else {\n                primaryMatrix.push(row);\n            }\n        });\n    } else {\n        matrix.forEach((row, rowIndex) => {\n            row.forEach((column, columnIndex) => {\n                if (columnIndex >= breakPointer) {\n                    secondaryMatrix[rowIndex] = secondaryMatrix[rowIndex] || [];\n                    secondaryMatrix[rowIndex].push(column);\n                } else {\n                    primaryMatrix[rowIndex] = primaryMatrix[rowIndex] || [];\n                    primaryMatrix[rowIndex].push(column);\n                }\n            });\n        });\n    }\n    return [primaryMatrix, secondaryMatrix];\n};\n\n/**\n * Distributed width returned\n *\n * @param {Object} context context for the width distibution\n * @return {number} distributed widths\n */\nexport const getDistributedWidth = (context, layoutConfig) => {\n    const {\n        availableWidth,\n        width,\n        row\n    } = context;\n    const {\n        isDistributionEqual,\n        isTransposed,\n        distribution\n    } = layoutConfig;\n    let distSum = 0;\n    if (distribution && distribution[0]) {\n        distSum = distribution.reduce((t, n) => {\n            t += n;\n            return t;\n        });\n    }\n    return row.map((col, colIndex) => {\n        const space = col.getLogicalSpace().width;\n        let distWidth = (space + (availableWidth - width) * (space / width));\n        if (isTransposed) {\n            if (distribution.length > 0) {\n                distWidth = (availableWidth * distribution[colIndex] / distSum);\n            } else if (isDistributionEqual || width === 0) {\n                const rowLen = row.length;\n                distWidth = (availableWidth / rowLen);\n            }\n        }\n        return Math.floor(distWidth);\n    });\n};\n\n/**\n * Distributeed heights returned\n *\n * @param {Object} context input for the height distribution\n * @return {Object} distribured heights\n */\nexport const getDistributedHeight = (context) => {\n    let distSum = 0;\n    let gutterSum = 0;\n    let heightWithoutGutter = 0;\n    const {\n        isTransposed,\n        distribution,\n        availableHeight,\n        height,\n        isDistributionEqual,\n        gutter,\n        matrix,\n        cIdx\n    } = context;\n\n    if (distribution && distribution[0] !== undefined) {\n        distSum = distribution.reduce((t, n) => {\n            t += n;\n            return t;\n        });\n    }\n    if (gutter && gutter[0] !== undefined) {\n        gutterSum = gutter.reduce((t, n) => {\n            t += n;\n            return t;\n        });\n    }\n    heightWithoutGutter = availableHeight - Math.floor(availableHeight * gutterSum);\n\n    const colLen = matrix.length;\n    return matrix.map((row, rIdx) => {\n        const col = row[cIdx];\n        const space = col.getLogicalSpace().height;\n        let distHeight = (space + (heightWithoutGutter - height) * (space / height));\n\n        if (!isTransposed) {\n            if (distribution.length > 0 && colLen === distribution.length) {\n                distHeight = (heightWithoutGutter * distribution[rIdx] / distSum);\n            } else if (isDistributionEqual || context.height === 0) {\n                distHeight = (heightWithoutGutter / colLen);\n            }\n        }\n        return Math.floor(distHeight);\n    });\n};\n\n/**\n *\n *\n * @param {*} arr\n * @param {*} beg\n * @param {*} end\n */\nexport const extraCellsRemover = (arr, beg, end) => arr.slice(beg, -end);\n\n/**\n * Creates matrix instancess\n *\n * @param {Array} [arr=[]] mutated arry\n * @param {number} depth depth of the tree\n * @param {Array} matrixInfo Details about the matrix(tree, etc) to be inserted\n * @param {boolean} layout Instance of layout\n */\nexport const createMatrixInstances = (arr = [], depth, matrixInfo, layout) => {\n    const breakPointer = layout._breakPointer;\n    const config = layout.config();\n    const {\n        isTransposed\n    } = config;\n    const {\n        tree,\n        layoutMatrix\n    } = matrixInfo;\n\n    if (depth === 0) {\n        const brokenMatrix = breakMatrix(tree.matrix, isTransposed, breakPointer);\n        arr.push({\n            matrix: tree.matrix,\n            primaryMatrix: brokenMatrix[0],\n            secondaryMatrix: brokenMatrix[1],\n            space: tree.space\n        });\n        return arr;\n    }\n    const nextLevel = depth - 1;\n    tree.values.forEach((e) => {\n        createMatrixInstances(arr, nextLevel, {\n            tree: e,\n            layoutMatrix\n        }, layout);\n    });\n    return arr;\n};\n","import { mergeRecursive } from 'muze-utils';\n\nexport const PROPS = {\n    config: {\n        sanitization: (context, value) => mergeRecursive(context._config || {}, value)\n    },\n    maxMeasures: {},\n    availableSpace: {},\n    logicalSpace: {}\n};\n","import { PRIMARY } from '../enums/constants';\n/**\n *\n *\n */\nexport const defaultConfig = {\n    distribution: [],\n    classPrefix: 'muze',\n    isDistributionEqual: true,\n    unitMeasures: {\n        height: 100,\n        width: 100,\n        border: 1\n    },\n    isTransposed: false,\n    facet: PRIMARY,\n    extraCellLengths: []\n};\n","import { mergeRecursive, generateGetterSetters, ERROR_MSG } from 'muze-utils';\nimport {\n    createTree,\n    combineMatrices,\n    createMatrixInstances\n  } from '../utils';\nimport { PROPS } from './props';\nimport { HEIGHT, WIDTH } from '../enums/constants';\nimport { defaultConfig } from './default-config';\n\n/**\n * This class used to create column / row matrix for GridLayout\n *\n * @class VisualMatrix\n */\nexport default class VisualMatrix {\n\n    /**\n     *Creates an instance of VisualMatrix.\n     * @param {any} matrix Two set of matrices\n     * @param {any} [config={}] Configuration for VisualMatrix\n     * @memberof VisualMatrix\n     */\n    constructor (matrix, config = {}) {\n        // Prepare matrices\n        this._lastLevelKey = 0;\n        this._primaryMatrix = matrix[0] || [];\n        this._secondaryMatrix = matrix[1] || [];\n        this._maxMeasures = [];\n        this._availableSpace = {};\n\n        // Store the config\n        generateGetterSetters(this, PROPS);\n        const defCon = Object.assign({}, this.constructor.defaultConfig());\n        this.config(mergeRecursive(defCon, config));\n\n        this._layoutMatrix = combineMatrices([matrix[0] || [], matrix[1] || []], this.config());\n    }\n\n     /**\n     * Computes the logical space taken by the entire matrixTree\n     *\n     * @return {Object} Logical space taken\n     * @memberof VisualMatrix\n     */\n    computeLogicalSpace () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    computeViewableSpaces () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    /**\n     *\n     *\n     * @return\n     * @memberof VisualMatrix\n     */\n    removeExtraCells () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    getPriorityDistribution () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    /**\n     * Calculates the depth of the tree that can be viewed\n     *\n     * @param {Array} widthMeasures array of widths\n     * @param {Array} heightMeasures array of heights\n     * @return {number} depth of the tree\n     * @memberof VisualMatrix\n     */\n    calculateDepth () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    /**\n     * Redistributes the provied space to all cells\n     *\n     * @param {*} viewableMatrix current viewport matrix\n     * @param {*} width provied width\n     * @param {*} height provied height\n     * @return {Object} current viewports matrixes with measures\n     * @memberof VisualMatrix\n     */\n    redistributeSpaces () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    /**\n     * Distibutes the given space row wisely\n     *\n     * @param {Object} measures Redistribution information\n     * @memberof VisualMatrix\n     */\n    redistributeViewSpaces () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    /**\n     * Dispatch the calculated cell dimensions to all the cells\n     *\n     * @param {Object} measures cell dimension information\n     * @return {Object} row and column heights / widths\n     * @memberof VisualMatrix\n     */\n    getCellDimensions () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    /**\n     *\n     *\n     * @param {*} params\n     * @returns\n     * @memberof VisualMatrix\n     */\n    primaryMatrix (...params) {\n        if (params.length) {\n            return this;\n        }\n        return this._primaryMatrix;\n    }\n\n    secondaryMatrix (...params) {\n        if (params.length) {\n            return this;\n        }\n        return this._secondaryMatrix;\n    }\n\n    tree (...params) {\n        if (params.length) {\n            return this;\n        }\n        return this._tree;\n    }\n\n    static defaultConfig () {\n        return defaultConfig;\n    }\n\n    createTree () {\n        const { tree, lastLevelKey } = createTree(this);\n        this._lastLevelKey = lastLevelKey;\n        return tree;\n    }\n\n    /**\n     * Returns the space taken by visual matrix\n     *\n     * @return {Object} space taken by the matrix\n     * @memberof VisualMatrix\n     */\n    getLogicalSpace () {\n        return this.logicalSpace();\n    }\n\n    /**\n     * Sets the provied space to the visual matrix\n     *\n     * @param {number} width width provided\n     * @param {number} height height provided\n     * @memberof VisualMatrix\n     */\n    setAvailableSpace (width, height) {\n        this.availableSpace({ width, height });\n        const tree = this.tree();\n        const heightMeasures = this.populateMaxMeasures(HEIGHT, tree);\n        const widthMeasures = this.populateMaxMeasures(WIDTH, tree);\n        const depth = this.calculateDepth(widthMeasures, heightMeasures);\n\n        this.viewableMatrix = this.createViewPortMatrix(depth);\n        this.viewableMeasures = this.redistributeSpaces(width, height);\n        return this;\n    }\n\n    /**\n     * Populate the max measures in the array\n     *\n     * @param {Array} measures array to be filled with max measures\n     * @param {Object} matrixTree matrix tree of visual matrix\n     * @param {number} measure width or height\n     * @param {number} [depth=0] depth of the tree that to be calculated\n     * @memberof VisualMatrix\n     */\n    populateMaxMeasures (type, matrixTree, depth = 0, measures = []) {\n        measures[depth] = Math.max(measures[depth] || 0, matrixTree.space[type]);\n        if (matrixTree.values) {\n            const childDepth = depth + 1;\n            matrixTree.values.forEach((child) => {\n                if (child.space) {\n                    measures = this.populateMaxMeasures(type, child, childDepth, measures);\n                }\n            });\n        }\n        return measures;\n    }\n\n    /**\n     * Gets the viewable measures for the current viewable matrix\n     *\n     * @return {Object} Set of viewable measures\n     * @memberof VisualMatrix\n     */\n    getViewableSpaces () {\n        return this.viewableMeasures;\n    }\n\n    /**\n     * Returns the matrix that can be viewed in the current viewport\n     *\n     * @return {Array} Set of matrices that can be viewed\n     * @memberof VisualMatrix\n     */\n    getViewableMatrices () {\n        return this.viewableMatrix;\n    }\n\n    /**\n     * Creates the viewport that can be viewed together\n     *\n     * @param {number} depth maxDepth that can be viewed in the viewport\n     * @return {Array<Object>} Set of matrices that can be viewed\n     * @memberof VisualMatrix\n     */\n    createViewPortMatrix (depth) {\n        const arr = [];\n        createMatrixInstances(arr, depth, this.removeExtraCells(), this);\n        return arr;\n    }\n}\n\n","import { mergeRecursive } from 'muze-utils';\nimport {\n    extraCellsRemover,\n    combineMatrices,\n    spaceTakenByColumn,\n    getDistributedHeight,\n    computeLogicalSpace,\n    createMatrixEachLevel\n  } from '../utils';\nimport { ROW_ROOT } from '../enums/constants';\nimport VisualMatrix from './visual-matrix';\n\n/**\n * This class used to create column / row matrix for GridLayout\n *\n * @class VisualMatrix\n */\nexport default class RowVisualMatrix extends VisualMatrix {\n\n    /**\n     *Creates an instance of VisualMatrix.\n     * @param {any} matrix Two set of matrices\n     * @param {any} [config={}] Configuration for VisualMatrix\n     * @memberof VisualMatrix\n     */\n    constructor (matrix, config = {}) {\n        super(matrix, config);\n\n        this._breakPointer = (matrix[0].length > 0 ? matrix[0][0].length : 0);\n        this._layoutMatrix = combineMatrices([matrix[0] || [], matrix[1] || []], this.config());\n\n        // Create Tree\n        this._tree = {\n            key: ROW_ROOT,\n            values: this.createTree()\n        };\n        this._logicalSpace = this.computeLogicalSpace();\n    }\n\n    /**\n     * Computes the logical space taken by the entire matrixTree\n     *\n     * @return {Object} Logical space taken\n     * @memberof VisualMatrix\n     */\n    computeLogicalSpace () {\n        const matrixTree = this.tree();\n        createMatrixEachLevel(matrixTree, false);\n        return computeLogicalSpace(matrixTree, this.config(), this.maxMeasures());\n    }\n\n    computeViewableSpaces (measures) {\n        const {\n            maxHeights,\n            maxWidths,\n            height\n        } = measures;\n        return this.viewableMatrix.map((matrixInst, i) => {\n            const cellDimOptions = { matrixInst, maxWidths, maxHeights, matrixIndex: i };\n            const { widths, rowHeights, columnWidths } = this.getCellDimensions(cellDimOptions);\n            const heightMeasures = [height, height];\n            const columnMeasures = widths;\n\n            return {\n                rowHeights: {\n                    primary: rowHeights[0],\n                    secondary: rowHeights[1]\n                },\n                columnWidths: {\n                    primary: columnWidths[0],\n                    secondary: columnWidths[1]\n                },\n                height: {\n                    primary: heightMeasures[0],\n                    secondary: heightMeasures[1]\n                },\n                width: {\n                    primary: columnMeasures[0],\n                    secondary: columnMeasures[1]\n                }\n            };\n        });\n    }\n\n    /**\n     *\n     *\n     * @return\n     * @memberof VisualMatrix\n     */\n    removeExtraCells () {\n        const {\n            isTransposed,\n            extraCellLengths\n        } = this.config();\n        const matrix = this._layoutMatrix;\n        const tree = mergeRecursive({}, this.tree());\n        const begCellLen = extraCellLengths[0];\n        const endCellLen = extraCellLengths[1] || Number.NEGATIVE_INFINITY;\n        const layoutMatrix = !isTransposed ? extraCellsRemover(matrix, begCellLen, endCellLen) :\n        matrix.slice(0).map(e => extraCellsRemover(e, begCellLen, endCellLen));\n\n        tree.values = extraCellsRemover(tree.values, begCellLen, endCellLen);\n        tree.matrix = extraCellsRemover(tree.matrix, begCellLen, endCellLen);\n\n        return {\n            tree,\n            layoutMatrix\n        };\n    }\n\n    getPriorityDistribution (measures) {\n        let remainaingAvailWidth;\n        let remainaingWidth;\n        let cWidths = [];\n        let conditions = [];\n        let maxPrioritySpace = 0;\n        const {\n            matrix,\n            width: availableWidth,\n            maxMeasures: maxWidths,\n            maxWidth: currentWidth,\n            height\n        } = measures;\n        const priority = this.config().priority;\n        const primaryMatrixLength = this.primaryMatrix().length ? this.primaryMatrix()[0].length : 0;\n\n        const dist = [];\n\n        remainaingAvailWidth = availableWidth;\n        remainaingWidth = currentWidth;\n\n        if (priority === 2) {\n            conditions = [primaryMatrixLength - 1, primaryMatrixLength];\n            // divider = Math.min(2, matrixLen);\n        } else {\n            conditions = priority === 0 ? [primaryMatrixLength - 1] : [primaryMatrixLength];\n            // divider = Math.min(1, matrixLen);\n        }\n        conditions.forEach((i) => {\n            dist[i] = maxWidths[i];\n            maxPrioritySpace += maxWidths[i];\n            remainaingAvailWidth -= dist[i];\n            remainaingWidth -= dist[i];\n        });\n        matrix[0].forEach((e, i) => {\n            if (conditions.indexOf(i) === -1) {\n                dist[i] = remainaingAvailWidth * (maxWidths[i] / remainaingWidth);\n            }\n        });\n        matrix.forEach(row => row.forEach((col, cIdx) => {\n            if (conditions.indexOf(cIdx) === -1) {\n                col.setAvailableSpace(dist[cIdx], height);\n\n                cWidths[cIdx] = Math.max(cWidths[cIdx] || 0, Math.floor(col.getLogicalSpace().width));\n            } else {\n                cWidths[cIdx] = 0;\n            }\n        }));\n\n        const prioritySpace = availableWidth - cWidths.reduce((t, n) => t + n);\n        if (prioritySpace < 0) {\n            cWidths = cWidths.map(() => 0);\n        } else {\n            conditions.forEach((i) => {\n                cWidths[i] = Math.floor(prioritySpace * (dist[i] / maxPrioritySpace || 1));\n            });\n        }\n        return cWidths;\n    }\n\n    /**\n     * Calculates the depth of the tree that can be viewed\n     *\n     * @param {Array} widthMeasures array of widths\n     * @param {Array} heightMeasures array of heights\n     * @return {number} depth of the tree\n     * @memberof VisualMatrix\n     */\n    calculateDepth (widthMeasures, heightMeasures) {\n        let i;\n        const { height } = this.availableSpace();\n\n        for (i = 0; i < heightMeasures.length; i++) {\n            if (heightMeasures[i] <= height) break;\n        }\n\n        return Math.min(widthMeasures.length - 1, i);\n    }\n\n    /**\n     * Redistributes the provied space to all cells\n     *\n     * @param {*} viewableMatrix current viewport matrix\n     * @param {*} width provied width\n     * @param {*} height provied height\n     * @return {Object} current viewports matrixes with measures\n     * @memberof VisualMatrix\n     */\n    redistributeSpaces (width, height) {\n        let maxHeights = [];\n        let maxWidths = [];\n        const maxMeasures = this.maxMeasures();\n\n        const maxWidth = maxMeasures.reduce((t, n) => {\n            t += n;\n            return t;\n        });\n        const logicalWidths = this.getPriorityDistribution({\n            matrix: this._layoutMatrix,\n            maxWidth,\n            maxMeasures,\n            width,\n            height\n        });\n\n        this.viewableMatrix.forEach((matrixInst) => {\n            const matrix = matrixInst.matrix;\n            const mWidth = 0;\n            const mHeight = 0;\n            const options = { mWidth, mHeight, matrix, width, height, maxHeights, maxWidths, logicalWidths };\n            const measures = this.redistributeViewSpaces(options);\n            maxWidths = measures.maxWidths;\n            maxHeights = measures.maxHeights;\n        });\n        return this.computeViewableSpaces({ height, width, maxHeights, maxWidths });\n    }\n\n    /**\n     * Distibutes the given space row wisely\n     *\n     * @param {Object} measures Redistribution information\n     * @memberof VisualMatrix\n     */\n    redistributeViewSpaces (measures) {\n        let cWidths = [];\n        let rHeights = [];\n        let mHeight = 0;\n        const maxMeasures = this.maxMeasures();\n\n        const {\n            isDistributionEqual,\n            distribution,\n            isTransposed,\n            gutter\n        } = this.config();\n        const { matrix, height, maxHeights, maxWidths, logicalWidths } = measures;\n        mHeight = spaceTakenByColumn(matrix, this._lastLevelKey).height;\n\n        const maxWidth = maxMeasures.reduce((t, n) => {\n            t += n;\n            return t;\n        });\n        measures.maxMeasures = maxMeasures;\n        measures.maxWidth = maxWidth;\n        if (maxWidth > 0) {\n            cWidths = logicalWidths;\n        } else {\n            cWidths = maxMeasures.map(() => 0);\n        }\n        rHeights = getDistributedHeight({\n            matrix,\n            cIdx: this._lastLevelKey,\n            height: mHeight,\n            availableHeight: height,\n            isDistributionEqual,\n            distribution,\n            isTransposed,\n            gutter\n        });\n        if (maxWidths.length > 0) {\n            cWidths = cWidths.map((e, i) => Math.max(e, maxWidths[0][i] || 0));\n        }\n        maxWidths.push(cWidths);\n        for (let x = 0; x < maxWidths.length; x++) {\n            maxWidths[x] = cWidths;\n        }\n        maxHeights.push(rHeights);\n        return { maxWidths, maxHeights };\n    }\n\n    /**\n     * Dispatch the calculated cell dimensions to all the cells\n     *\n     * @param {Object} measures cell dimension information\n     * @return {Object} row and column heights / widths\n     * @memberof VisualMatrix\n     */\n    getCellDimensions (measures) {\n        const {\n            unitMeasures\n        } = this.config();\n        const borderWidth = unitMeasures.border;\n        const { matrixInst, maxWidths, maxHeights, matrixIndex } = measures;\n        const matrix = matrixInst.matrix;\n        const rowHeights = [[0], [0]];\n        const columnWidths = [[0], [0]];\n        const heights = [0, 0];\n        const widths = [0, 0];\n        const breakPointer = this._breakPointer;\n\n        matrix.forEach((row, rIdx) => {\n            row.forEach((cell, cIdx) => {\n                const colHeight = maxHeights[matrixIndex][rIdx] || 0;\n                const colWidth = maxWidths[matrixIndex][cIdx];\n\n                cell.setAvailableSpace(colWidth, colHeight - borderWidth);\n\n                if (rIdx === 0 && cIdx < breakPointer) {\n                    columnWidths[0][cIdx] = colWidth;\n                    widths[0] = (widths[0] || 0) + colWidth;\n                } else if (rIdx === 0 && cIdx >= breakPointer) {\n                    columnWidths[1][cIdx - breakPointer] = colWidth;\n                    widths[1] = (widths[1] || 0) + colWidth;\n                }\n                if (cIdx === this._lastLevelKey) {\n                    rowHeights[0][rIdx] = colHeight;\n                    rowHeights[1][rIdx] = colHeight;\n                }\n            });\n        });\n        return {\n            heights,\n            widths,\n            rowHeights,\n            columnWidths\n        };\n    }\n}\n\n","import { mergeRecursive } from 'muze-utils';\nimport {\n    extraCellsRemover,\n    getDistributedWidth,\n    spaceTakenByRow,\n    createMatrixEachLevel,\n    computeLogicalSpace\n  } from '../utils';\nimport { COLUMN_ROOT } from '../enums/constants';\nimport VisualMatrix from './visual-matrix';\n\n/**\n * This class used to create column / row matrix for GridLayout\n *\n * @class VisualMatrix\n */\nexport default class ColumnVisualMatrix extends VisualMatrix {\n\n    /**\n     *Creates an instance of VisualMatrix.\n     * @param {any} matrix Two set of matrices\n     * @param {any} [config={}] Configuration for VisualMatrix\n     * @memberof VisualMatrix\n     */\n    constructor (matrix, config = {}) {\n        super(matrix, config);\n\n        this._breakPointer = matrix[0].length;\n\n        // Create Tree\n        this._tree = {\n            key: COLUMN_ROOT,\n            values: this.createTree()\n        };\n        this._logicalSpace = this.computeLogicalSpace();\n    }\n\n    /**\n     * Computes the logical space taken by the entire matrixTree\n     *\n     * @return {Object} Logical space taken\n     * @memberof VisualMatrix\n     */\n    computeLogicalSpace () {\n        const matrixTree = this.tree();\n        createMatrixEachLevel(matrixTree, true);\n        return computeLogicalSpace(matrixTree, this.config(), this.maxMeasures());\n    }\n\n    computeViewableSpaces (measures) {\n        const {\n            maxHeights,\n            maxWidths,\n            height,\n            width\n        } = measures;\n\n        return this.viewableMatrix.map((matrixInst, i) => {\n            const cellDimOptions = { matrixInst, maxWidths, maxHeights, matrixIndex: i, height };\n            const {\n                heights,\n                rowHeights,\n                columnWidths\n            } = this.getCellDimensions(cellDimOptions);\n            const heightMeasures = heights;\n            const columnMeasures = [width, width];\n\n            return {\n                rowHeights: {\n                    primary: rowHeights[0],\n                    secondary: rowHeights[1]\n                },\n                columnWidths: {\n                    primary: columnWidths[0],\n                    secondary: columnWidths[1]\n                },\n                height: {\n                    primary: heightMeasures[0],\n                    secondary: heightMeasures[1]\n                },\n                width: {\n                    primary: columnMeasures[0],\n                    secondary: columnMeasures[1]\n                }\n            };\n        });\n    }\n\n    /**\n     *\n     *\n     * @return\n     * @memberof VisualMatrix\n     */\n    removeExtraCells () {\n        const {\n            isTransposed,\n            extraCellLengths\n        } = this.config();\n        const matrix = this._layoutMatrix;\n        const tree = mergeRecursive({}, this.tree());\n        const begCellLen = extraCellLengths[0];\n        const endCellLen = extraCellLengths[1] || Number.NEGATIVE_INFINITY;\n        const layoutMatrix = !isTransposed ? extraCellsRemover(matrix, begCellLen, endCellLen) :\n        matrix.slice(0).map(e => extraCellsRemover(e, begCellLen, endCellLen));\n\n        tree.values = extraCellsRemover(tree.values, begCellLen, endCellLen);\n\n        tree.matrix = tree.matrix.map(e => extraCellsRemover(e, begCellLen, endCellLen));\n\n        return {\n            tree,\n            layoutMatrix\n        };\n    }\n\n    getPriorityDistribution (measures) {\n        const {\n            height,\n            maxHeights\n        } = measures;\n        let remainaingHeight = height;\n        let heightDist = [];\n        let conditions = [];\n        let divider = 2;\n        const priority = this.config().priority;\n        const primaryMatrixLength = this.primaryMatrix().length;\n\n        if (priority === 2) {\n            conditions = [primaryMatrixLength - 1, primaryMatrixLength];\n            divider = 2;\n        } else {\n            conditions = priority === 0 ? [primaryMatrixLength - 1] : [primaryMatrixLength];\n            divider = 1;\n        }\n        maxHeights.forEach((e, i) => {\n            if (conditions.indexOf(i) === -1) {\n                heightDist[i] = e;\n                remainaingHeight -= e;\n            }\n        });\n        if (remainaingHeight < 0) {\n            heightDist = heightDist.map(() => 0);\n        } else {\n            conditions.forEach((e) => {\n                if (remainaingHeight / divider < maxHeights[e]) {\n                    heightDist[e] = 0;\n                } else {\n                    heightDist[e] = Math.min(maxHeights[e], (remainaingHeight) / divider);\n                }\n            });\n        }\n        return heightDist;\n    }\n\n    /**\n     * Calculates the depth of the tree that can be viewed\n     *\n     * @param {Array} widthMeasures array of widths\n     * @param {Array} heightMeasures array of heights\n     * @return {number} depth of the tree\n     * @memberof VisualMatrix\n     */\n    calculateDepth (widthMeasures) {\n        let j;\n        const { width } = this.availableSpace();\n\n        for (j = 0; j < widthMeasures.length; j++) {\n            if (widthMeasures[j] <= width) break;\n        }\n        return Math.min(widthMeasures.length - 1, j);\n    }\n\n     /**\n     * Redistributes the provied space to all cells\n     *\n     * @param {*} viewableMatrix current viewport matrix\n     * @param {*} width provied width\n     * @param {*} height provied height\n     * @return {Object} current viewports matrixes with measures\n     * @memberof VisualMatrix\n     */\n    redistributeSpaces (width, height) {\n        let maxHeights = [];\n        let maxWidths = [];\n\n        this.viewableMatrix.forEach((matrixInst) => {\n            const matrix = matrixInst.matrix;\n            const mWidth = 0;\n            const mHeight = 0;\n            const options = { mWidth, mHeight, matrix, width, height, maxHeights, maxWidths };\n            const maxMeasures = this.redistributeViewSpaces(options);\n            maxWidths = maxMeasures.maxWidths;\n            maxHeights = maxMeasures.maxHeights;\n        });\n\n        return this.computeViewableSpaces({ height, width, maxHeights, maxWidths });\n    }\n\n    /**\n     * Distibutes the given space column wisely\n     *\n     * @param {Object} measures Redistribution information\n     * @memberof VisualMatrix\n     */\n    redistributeViewSpaces (measures) {\n        let rHeights = [];\n        const {\n            matrix,\n            width,\n            maxHeights,\n            maxWidths\n        } = measures;\n        const borderWidth = this.config().unitMeasures.border;\n\n        const mWidth = spaceTakenByRow(matrix[this._lastLevelKey]).width;\n        const cWidths = getDistributedWidth({\n            row: matrix[this._lastLevelKey],\n            width: mWidth,\n            availableWidth: width\n        }, this.config());\n\n        matrix.forEach((row, rIdx) => row.forEach((col, cIdx) => {\n            const oldLogicalSpace = col.getLogicalSpace();\n\n            col.setAvailableSpace(cWidths[cIdx] - borderWidth, oldLogicalSpace.height);\n            rHeights[rIdx] = Math.max(rHeights[rIdx] || 0, Math.floor(col.getLogicalSpace().height));\n        }));\n        if (maxHeights.length > 0) {\n            rHeights = rHeights.map((e, i) => Math.max(e, maxHeights[0][i]));\n        }\n        maxHeights.push(rHeights);\n        for (let x = 0; x < maxHeights.length; x++) {\n            maxHeights[x] = rHeights;\n        }\n        maxWidths.push(cWidths);\n        return { maxHeights, maxWidths };\n    }\n\n    /**\n     * Dispatch the calculated cell dimensions to all the cells\n     *\n     * @param {Object} measures cell dimension information\n     * @return {Object} row and column heights / widths\n     * @memberof VisualMatrix\n     */\n    getCellDimensions (measures) {\n        const {\n            unitMeasures\n        } = this.config();\n        const borderWidth = unitMeasures.border;\n        const { matrixInst, height, maxWidths, maxHeights, matrixIndex } = measures;\n        const matrix = matrixInst.matrix;\n        const rowHeights = [[0], [0]];\n        const columnWidths = [[0], [0]];\n        const heights = [0, 0];\n        const widths = [0, 0];\n        const breakPointer = this._breakPointer;\n\n        const heightDistribution = this.getPriorityDistribution({ height, maxHeights: maxHeights[0] || [] });\n\n        matrix.forEach((row, rIdx) => {\n            row.forEach((cell, cIdx) => {\n                const colHeight = heightDistribution[rIdx] || 0;\n                const colWidth = maxWidths[matrixIndex][cIdx];\n\n                cell.setAvailableSpace(colWidth - borderWidth, colHeight);\n\n                if (cIdx === 0 && rIdx < breakPointer) {\n                    rowHeights[0][rIdx] = colHeight;\n                    heights[0] = (heights[0] || 0) + colHeight;\n                } else if (cIdx === 0 && rIdx >= breakPointer) {\n                    rowHeights[1][rIdx - breakPointer] = colHeight;\n                    heights[1] = (heights[1] || 0) + colHeight;\n                }\n                if (rIdx === this._lastLevelKey) {\n                    columnWidths[0][cIdx] = colWidth;\n                    columnWidths[1][cIdx] = colWidth;\n                }\n            });\n        });\n        return {\n            heights,\n            widths,\n            rowHeights,\n            columnWidths\n        };\n    }\n}\n\n","import {\n    HEIGHT, WIDTH, COLUMN, ROW, HORIZONTAL, VERTICAL, HOLISTIC,\n    MAX_WIDTH_AVAIL_FOR_COL_MATRIX, COLUMN_MATRIX, MAX_HEIGHT_AVAIL_FOR_ROW_MATRIX, ROW_MATRIX, SCROLL\n} from '../enums/constants';\n\n/**\n * Gets measurement for an instance of visual matrix\n *\n * @param {Array} matrix instance of visual matrix\n * @param {string} type height/width\n * @return {Object} Logical height/width of the matrix\n */\nexport function getMatrixMeasurement (matrix, type) {\n    if (matrix) {\n        return matrix.getLogicalSpace()[type];\n    }\n    return 0;\n}\n\n/**\n * Sets available space for an instance of visual matrix\n *\n * @param {Array} matrix instance of visual matrix\n * @param {string} type height/width\n * @param {number} value Value of measurement\n */\nexport function setMatrixMeasurement (matrix, type, value) {\n    if (matrix) {\n        const spaces = matrix.getLogicalSpace();\n        if (value && spaces[type] !== value) {\n            type === HEIGHT ? matrix.setAvailableSpace(spaces.width, value) :\n                matrix.setAvailableSpace(value, spaces.height);\n        }\n    }\n}\n\nconst setAvailableSpace = (matrix, widths, heights) => {\n    matrix.forEach((row, rIdx) => {\n        row.forEach((placeholder, cIdx) => {\n            placeholder.setAvailableSpace(widths[cIdx], heights[rIdx]);\n        });\n    });\n};\n\nconst setViewSpaces = (layout, pointerType, viewSpaces) => {\n    let pointer = layout.config()[`${pointerType}Pointer`];\n    if (viewSpaces.length - 1 < pointer) {\n        pointer = 0;\n        layout.config({ [`${pointerType}Pointer`]: pointer });\n    }\n    return pointer;\n};\n\nconst paginationDetailsMap = {\n    column: {\n        maxMeasure: MAX_WIDTH_AVAIL_FOR_COL_MATRIX,\n        matrix: COLUMN_MATRIX,\n        measureType: WIDTH,\n        scrollType: HORIZONTAL\n    },\n    row: {\n        maxMeasure: MAX_HEIGHT_AVAIL_FOR_ROW_MATRIX,\n        matrix: ROW_MATRIX,\n        measureType: HEIGHT,\n        scrollType: VERTICAL\n    }\n};\n\n/**\n * This method provides the required width/height in the different pagination stages.\n * If the pagination is holistic, then only the max width/height will be provided for layouting\n * If scroll is enabled, then the entire width/height shall be provided for layouting\n * Note: width is required for scrolling the columns while height is required for scrolling rows\n *\n *\n * @param {Layout} layout Layout instance required for configuration details\n * @param {Object} measureDetails different measure details for row/column\n * @param {number} maxMeasure maximum width/height present for column/row respectively\n * @return {number} Provides the width/height based on which further calculation can occur\n */\nconst getMatrixMeasureForPagination = (layout, measureDetails, maxMeasure, buffer) => {\n    const {\n        pagination\n    } = layout.config();\n    const {\n        matrix,\n        measureType,\n        scrollType\n    } = measureDetails;\n\n    switch (pagination) {\n    case HOLISTIC:\n        return maxMeasure;\n    default: {\n        const actualMeasure = getMatrixMeasurement(layout[matrix](), measureType) + buffer;\n\n        if (actualMeasure > maxMeasure) {\n            layout.scrollInfo({ [scrollType]: true });\n        }\n        return Math.max(maxMeasure, actualMeasure);\n    }\n    }\n};\n\n/**\n * This method uses the getMatrixMeasureForPagination function to calculate maximum measure\n * depending on the layouting algorithm used\n *\n *\n * @param {Layout} layout Layout instance required for configuration details\n * @param {string} matrixType row/column\n * @param {number} relatedMaxMeasure maximum width/height present for column/row respectively\n * @return {number} Provides the width/height based on which further calculation can occur\n */\nconst paginationMeasureGetter = (layout, matrixType, relatedMaxMeasure, buffer) =>\n    getMatrixMeasureForPagination(layout, paginationDetailsMap[matrixType], relatedMaxMeasure, buffer);\n\nconst getMatrixWidthDetails = (layout) => {\n    const rowMatrix = layout.rowMatrix();\n    const {\n        width\n    } = layout.measurement();\n    const {\n        border,\n        buffer\n    } = layout.config();\n\n    // Border adjustment for each cell in the central matrix\n    const borderWidth = border.width;\n\n    // Get width of row matrix\n    const rowMatrixWidth = getMatrixMeasurement(rowMatrix, WIDTH);\n\n    // Get maximum width allowed for the row matrix\n    const maxRowMatrixWidth = Math.min(rowMatrixWidth + buffer, width / 2);\n\n    // Get maximum width available for the column matrix\n    const maxWidthAvailableForColumnMatrix = width - maxRowMatrixWidth - borderWidth;\n\n    // Set width for column matrix\n    const columnMatrixWidth = paginationMeasureGetter(layout, COLUMN, maxWidthAvailableForColumnMatrix, 0);\n\n    return {\n        rowMatrixWidth,\n        maxRowMatrixWidth,\n        columnMatrixWidth,\n        maxWidthAvailableForColumnMatrix\n    };\n};\n\nconst getHeightRequiredByColMatrix = (layout, columnMatrixWidth) => {\n    const {\n        height\n    } = layout.measurement();\n    const columnMatrix = layout.columnMatrix();\n\n    // Get maximum allowed height for colum matrix\n    const maxColumnMatrixHeight = Math.min(columnMatrix.getLogicalSpace().height, height / 2);\n\n    // Set the computed width and max height to column matrix to determine the actual height\n    // that will be taken by the column matrix\n    columnMatrix.setAvailableSpace(columnMatrixWidth, maxColumnMatrixHeight);\n\n    // Get the set of pages column view\n    const columnViewPages = columnMatrix.getViewableSpaces();\n\n    // Figuring out total space needed by current view space\n    const columnViewSpace = columnViewPages[layout.config().columnPointer];\n\n    // Getting height of column matrix\n    const columnMatrixHeight = columnViewSpace.height.primary + columnViewSpace.height.secondary;\n\n    return {\n        columnMatrixHeight,\n        maxColumnMatrixHeight\n    };\n};\n\nconst getMatrixHeightDetails = (layout, columnMatrixWidth) => {\n    const {\n        height\n    } = layout.measurement();\n    const {\n        buffer\n    } = layout.config();\n\n    // Get actual height required by column matrix\n    const { columnMatrixHeight, maxColumnMatrixHeight } = getHeightRequiredByColMatrix(layout, columnMatrixWidth);\n\n    // Based on column height, compute max height available for row matrix\n    const maxHeightAvailableForRowMatrix = height - Math.min(maxColumnMatrixHeight, columnMatrixHeight);\n\n    // Get height for row matrix\n    const rowMatrixHeight = paginationMeasureGetter(layout, ROW, maxHeightAvailableForRowMatrix, buffer);\n\n    return {\n        columnMatrixHeight,\n        maxColumnMatrixHeight,\n        rowMatrixHeight,\n        maxHeightAvailableForRowMatrix\n    };\n};\n\nconst setValueMatrixMeasurements = (layout, rowViewableSpaces, columnViewableSpaces) => {\n    const centerMatrix = layout.centerMatrix();\n\n    const {\n        border\n    } = layout.config();\n    const matrices = layout.matrices();\n    const {\n        top,\n        bottom\n    } = matrices;\n\n    // Border adjustment for each cell in the central matrix\n    const borderWidth = border.width;\n\n    // Get the heights for each cell in the row matrix\n    const rowHeights = [].concat(...rowViewableSpaces.map(e => e.rowHeights.primary));\n\n    // Get the widths for each of the row matrix cells(primary and secondary)\n    const rowWidthsPrimary = [].concat(...rowViewableSpaces.map(e => e.columnWidths.primary));\n    const rowWidthsSecondary = [].concat(...rowViewableSpaces.map(e => e.columnWidths.secondary));\n\n    // Get the widths for each cell in the column matrix\n    const columnWidths = [].concat(...columnViewableSpaces.map(e => e.columnWidths.primary));\n\n    // Get the widths for each of the column matrix cells(primary and secondary)\n    const columnHeightsPrimary = columnViewableSpaces[0].rowHeights.primary;\n    const columnHeightsSecondary = [].concat(...columnViewableSpaces.map(e => e.rowHeights.secondary));\n\n    // Setting the available space for each cell in the centre matrix computed throught the row and\n    // column matrices\n    centerMatrix.forEach((matrix, rIdx) => {\n        matrix.forEach((placeholder, cIdx) => {\n            placeholder.setAvailableSpace(columnWidths[cIdx] - borderWidth, rowHeights[rIdx] - borderWidth);\n        });\n    });\n\n    // Set the heights and widths for the corner matrices namely:\n    // TOP_LEFT\n    setAvailableSpace(top[0], rowWidthsPrimary, columnHeightsPrimary);\n    // TOP_RIGHT\n    setAvailableSpace(top[2], rowWidthsSecondary, columnHeightsPrimary);\n    // BOTTOM_LEFT\n    setAvailableSpace(bottom[0], rowWidthsPrimary, columnHeightsSecondary);\n     // BOTTOM_RIGHT\n    setAvailableSpace(bottom[2], rowWidthsSecondary, columnHeightsSecondary);\n};\n\nconst bufferCondition = {\n    isScroll: true,\n    pagination: SCROLL\n};\n\nconst getBufferFromCondition = (layout, type) => {\n    const scrollInfo = layout.scrollInfo();\n    const {\n        pagination\n    } = layout.config();\n\n    const currentBufferType = {\n        pagination,\n        isScroll: scrollInfo[type]\n    };\n\n    return Object.keys(bufferCondition).every(e => bufferCondition[e] === currentBufferType[e]);\n};\n\nconst getActualBufferFromConfig = (layout) => {\n    const {\n        buffer\n    } = layout.config();\n    const [horizontalBuffer, verticalBuffer] = [HORIZONTAL, VERTICAL].map((type) => {\n        if (getBufferFromCondition(layout, type)) {\n            return buffer;\n        }\n        return 0;\n    });\n\n    return {\n        horizontalBuffer,\n        verticalBuffer\n    };\n};\n/**\n * Computes the measurements of space for all matrices in the\n * layout\n *\n * @param {Object} layout Instance of grid layout\n * @return {Object} set of measurements for the layout\n */\nexport const computeLayoutMeasurements = (layout) => {\n    const rowMatrix = layout.rowMatrix();\n    const columnMatrix = layout.columnMatrix();\n\n    // Compute the widths of the row and column matrices\n    const {\n        rowMatrixWidth,\n        maxRowMatrixWidth,\n        maxWidthAvailableForColumnMatrix,\n        columnMatrixWidth\n    } = getMatrixWidthDetails(layout);\n\n    // Compute the heights of the row and column matrices\n    const {\n        columnMatrixHeight,\n        rowMatrixHeight,\n        maxHeightAvailableForRowMatrix\n    } = getMatrixHeightDetails(layout, columnMatrixWidth);\n\n    const {\n        horizontalBuffer,\n        verticalBuffer\n    } = getActualBufferFromConfig(layout);\n    rowMatrix.setAvailableSpace(maxRowMatrixWidth - verticalBuffer, rowMatrixHeight - horizontalBuffer);\n\n    // Get row and columns viewable spaces\n    const rowViewableSpaces = rowMatrix.getViewableSpaces();\n    const columnViewableSpaces = columnMatrix.getViewableSpaces();\n\n    // Set view spaces for row and columns\n    setViewSpaces(layout, ROW, rowViewableSpaces);\n    setViewSpaces(layout, COLUMN, columnViewableSpaces);\n\n    // Set measures for each cell of the value matrix\n    setValueMatrixMeasurements(layout, rowViewableSpaces, columnViewableSpaces);\n\n    return {\n        rowMatrixHeight: rowMatrixHeight - horizontalBuffer,\n        rowMatrixWidth: rowMatrixWidth - verticalBuffer,\n        maxHeightAvailableForRowMatrix: maxHeightAvailableForRowMatrix - horizontalBuffer,\n\n        columnMatrixHeight,\n        columnMatrixWidth,\n        maxWidthAvailableForColumnMatrix\n    };\n};\n","/**\n * Gets view matrices based on current pointers for row and column\n *\n * @param {Object} layout instance of layout\n * @param {number} rowPointer current row pointer\n * @param {number} columnPointer current column pointer\n * @return {Object} returns the view matrix and its relevant information\n */\nexport const getViewMatrices = (layout, rowPointer, columnPointer) => {\n    const rowMatrix = layout.rowMatrix();\n    const columnMatrix = layout.columnMatrix();\n    const centerMatrix = layout.centerMatrix();\n    const matrices = layout.matrices();\n    const rowMatrices = rowMatrix.getViewableMatrices();\n    const columnMatrices = columnMatrix.getViewableMatrices();\n    const centralMatrixPointer = {\n        row: 0,\n        column: 0\n    };\n\n    for (let i = rowPointer - 1; i >= 0; i--) {\n        const length = Math.max(rowMatrices[i].primaryMatrix.length,\n            rowMatrices[i].secondaryMatrix.length);\n        centralMatrixPointer.row += length;\n    }\n     /* istanbul ignore next */\n    for (let i = columnPointer - 1; i >= 0; i--) {\n        const matrix = columnMatrices[i];\n        const { primaryMatrix, secondaryMatrix } = matrix;\n        const length = Math.max(primaryMatrix[0] ? primaryMatrix[0].length : 0,\n            secondaryMatrix[0] ? secondaryMatrix[0].length : 0);\n        centralMatrixPointer.column += length;\n    }\n\n    matrices.top[1] = columnMatrices[columnPointer].primaryMatrix;\n    matrices.bottom[1] = columnMatrices[columnPointer].secondaryMatrix;\n\n    matrices.center[0] = rowMatrices[rowPointer].primaryMatrix;\n    matrices.center[2] = rowMatrices[rowPointer].secondaryMatrix;\n\n    const rowMatrixLen = Math.max(matrices.center[0].length, matrices.center[2].length);\n     /* istanbul ignore next */\n    const columnMatrixLen = Math.max(matrices.top[1][0] ? matrices.top[1][0].length : 0, matrices.bottom[1][0] ?\n            matrices.bottom[1][0].length : 0);\n    matrices.center[1] = centerMatrix.slice(centralMatrixPointer.row, centralMatrixPointer.row + rowMatrixLen)\n        .map(matrix => matrix.slice(centralMatrixPointer.column, centralMatrixPointer.column + columnMatrixLen));\n\n    return {\n        matrices,\n        rowPages: rowMatrices.length,\n        columnPages: columnMatrices.length\n    };\n};\n\nconst measureSum = measureArr => measureArr.reduce((total, measure) => total + measure, 0);\n/**\n * Returns measurements of the cells of the current matrix\n *\n * @param {Object} layout instance of layout\n * @return {Object} returns the measurements for current view matrix\n */\nexport const getViewMeasurements = (layout, maxRowHeight, maxColWidth) => {\n    const rowMatrix = layout.rowMatrix();\n    const columnMatrix = layout.columnMatrix();\n    const {\n        columnPointer,\n        rowPointer\n    } = layout.config();\n\n    const rowSpaces = rowMatrix.getViewableSpaces()[rowPointer];\n    const colSpaces = columnMatrix.getViewableSpaces()[columnPointer];\n\n    const {\n        rowHeights,\n        width: rowMatrixWidth\n    } = rowSpaces;\n    const {\n        columnWidths,\n        height: columnMatrixHeight\n    } = colSpaces;\n\n    const { primary: leftWidth, secondary: rightWidth } = rowMatrixWidth;\n    const { primary: topHeight, secondary: bottomHeight } = columnMatrixHeight;\n\n    const centerHeight = measureSum(rowHeights.primary);\n    const centerWidth = measureSum(columnWidths.primary);\n    const viewWidth = [leftWidth, Math.min(centerWidth, maxColWidth), rightWidth];\n    const viewHeight = [topHeight, Math.min(centerHeight, maxRowHeight), bottomHeight];\n\n    return {\n        viewWidth,\n        viewHeight,\n        actualCenterMeasures: {\n            height: centerHeight,\n            width: centerWidth\n        },\n        totalMeasures: {\n            width: measureSum(viewWidth),\n            height: measureSum(viewHeight)\n        },\n        unitHeights: rowHeights,\n        unitWidths: columnWidths\n    };\n};\n","/**\n * This file declares a table that can be extended to create a Datagrid, crosstab\n * and man other visualzations that require a tabular structure.\n */\n\nimport { getUniqueId, mergeRecursive } from 'muze-utils';\nimport GenericLayout from '../generic-layout';\nimport { DEFAULT_CONFIGURATION, DEFAULT_MEASUREMENTS } from './defaults';\nimport { generateVisualMatrices } from './layout-helper';\nimport { computeLayoutMeasurements } from './computations';\nimport { getViewMeasurements, getViewMatrices } from './view-info-getter';\n/**\n * This class is used to create a tabular structure that\n * can house charts and values.\n *\n * @class GridLayout\n */\nexport default class GridLayout extends GenericLayout {\n\n    /**\n     * Creates an instance of TableLayout.\n     * @param {HTMLElement} matrices Set of upto 9 matrices containing the cells to be rendered\n     * @param {HTMLElement} mountPoint DOM element/d3 selection where the layout is to be mounted\n     * @param {Object} measurement The dimensions of the layout\n     * @param {Object} config external configurations.\n     * @memberof GenericLayout\n     */\n    constructor (matrices, mountPoint, measurement, config) {\n        super(mountPoint, measurement, config);\n        this.matrices(matrices);\n        this.config(this.constructor.defaultConfig());\n        this._layoutId = getUniqueId();\n        this._viewInfo = this.constructor.defaultViewInfo();\n        this._scrollInfo = { horizontal: false, vertical: false };\n    }\n\n    static defaultViewInfo () {\n        return Object.assign({}, {\n            layoutDimensions: {\n                border: this.defaultConfig().border,\n                viewHeight: [0, 0, 0],\n                viewWidth: [0, 0, 0]\n            },\n            viewMatricesInfo: {\n                columnPages: 0,\n                rowPages: 0,\n                matrices: { top: [], center: [], bottom: [] }\n            }\n        });\n    }\n\n    /**\n     * Returns initial set of measurements for the grid layout\n     *\n     * @static\n     * @return {Object} Returns initial set of measurements\n     * @memberof GridLayout\n     */\n    static defaultMeasurement () {\n        return DEFAULT_MEASUREMENTS;\n    }\n\n    /**\n     * Returns initialconfiguration for grid layout\n     *\n     * @static\n     * @return {Object} Returns initial configuration for grid layout\n     * @memberof GridLayout\n     */\n    static defaultConfig () {\n        return DEFAULT_CONFIGURATION;\n    }\n\n    /**\n     * This function is used to return an instance of GridLayout\n     *\n     * @return {GridLayout} Instance of grid layout.\n     * @static\n     * @memberof GridLayout\n     */\n    static create () {\n        return new GridLayout(null, null, this.defaultMeasurement(), this.defaultConfig());\n    }\n\n    /**\n     * Sets/Gets the matrices for the layout\n     *\n     * @param {Array} matrices Set of matrices\n     * @return {Object} Getter/Setter\n     * @memberof GridLayout\n     */\n    matrices (matrices) {\n        if (matrices) {\n            this._matrices = generateVisualMatrices(this, matrices);\n            return this;\n        }\n        return super.matrices(matrices);\n    }\n\n    /**\n     * Triggers the computations for the layout based on the matrices available\n     * This causes a reflow in the entire layout system.\n     *\n     * @return {Object} Layout instance\n     * @memberof GridLayout\n     */\n    triggerReflow () {\n        this.scrollInfo({ horizontal: false, vertical: false });\n        const {\n            maxHeightAvailableForRowMatrix,\n            maxWidthAvailableForColumnMatrix\n        } = computeLayoutMeasurements(this);\n\n        this.setViewInformation(maxHeightAvailableForRowMatrix, maxWidthAvailableForColumnMatrix);\n        return this;\n    }\n\n    gotoPage (type, pageNumber) {\n        const pageType = type.toLowerCase();\n        const { viewMatricesInfo } = this.viewInfo();\n        const totalPages = viewMatricesInfo[`${pageType}Pages`];\n        const pointer = Math.min(Math.max(1, pageNumber), totalPages);\n        this.config({\n            [`${pageType}Pointer`]: pointer - 1\n        });\n        this.setViewInformation();\n        this.renderGrid();\n        return this;\n    }\n\n    pages (type) {\n        const { viewMatricesInfo } = this.viewInfo();\n        const pageType = type.toLowerCase();\n        return {\n            totalPages: viewMatricesInfo[`${pageType}Pages`],\n            currentPage: this.config()[`${pageType}Pointer`] + 1\n        };\n    }\n\n    viewInfo (...viewInfo) {\n        if (viewInfo.length) {\n            this._viewInfo = viewInfo[0];\n            return this;\n        }\n        return this._viewInfo;\n    }\n\n    scrollInfo (...scrollInfo) {\n        if (scrollInfo.length) {\n            this._scrollInfo = mergeRecursive(this._scrollInfo, scrollInfo[0]);\n            return this;\n        }\n        return this._scrollInfo;\n    }\n\n    /**\n     *\n     *\n     * @returns\n     * @memberof GridLayout\n     */\n    setViewInformation (maxRowHeight, maxColWidth) {\n        const {\n            rowPointer,\n            columnPointer,\n            border\n        } = this.config();\n        const viewMatricesInfo = getViewMatrices(this, rowPointer, columnPointer);\n        const layoutDimensions = getViewMeasurements(this, maxRowHeight, maxColWidth);\n        layoutDimensions.border = border;\n        this.viewInfo({\n            viewMatricesInfo,\n            layoutDimensions\n        });\n        return this;\n    }\n}\n","import RowMatrix from '../visual-matrix/row-matrix';\nimport ColumnMatrix from '../visual-matrix/column-matrix';\n\nexport const generateVisualMatrices = (context, matrices) => {\n    // Set of matrices for layout is generated starting with the left matrix\n    let leftMatrix = [];\n    let rightMatrix = [];\n    let topMatrix = [];\n    let bottomMatrix = [];\n    let begColCells;\n    let endColCells;\n    const {\n        isRowSizeEqual,\n        isColumnSizeEqual,\n        gutterSpace,\n        distribution,\n        border,\n        breakPage,\n        priority\n    } = context.config();\n    const {\n        minUnitHeight,\n        minUnitWidth\n    } = context.measurement();\n    const { top, center, bottom } = matrices;\n    const [topLeft, topColumns, topRight] = top;\n    const [leftRows, valueMatrix, rightRows] = center;\n    const [bottomLeft, bottomColumns, bottomRight] = bottom;\n\n    if (leftRows.length > 0) {\n        // If no left matrix is present, context will be empty\n        leftMatrix = [...topLeft, ...leftRows, ...bottomLeft];\n    }\n    if (rightRows.length > 0) {\n        // If no right matrix is present, context will be empty\n        rightMatrix = [...topRight, ...rightRows, ...bottomRight];\n    }\n    if (topColumns.length > 0 && topColumns[0].length > 0) {\n        // If no top matrix is present, context will be empty\n        topMatrix = topColumns.map((d, i) => [...topLeft[i], ...d, ...topRight[i]]);\n    }\n    if (bottomColumns.length > 0 && bottomColumns[0].length > 0) {\n        // If no bottom matrix is present, context will be empty\n        bottomMatrix = bottomColumns.map((d, i) => [...bottomLeft[i], ...d, ...bottomRight[i]]);\n    }\n\n    context.rowMatrix(new RowMatrix([leftMatrix, rightMatrix], {\n        isDistributionEqual: isRowSizeEqual,\n        distribution: distribution.rows,\n        gutter: gutterSpace.rows,\n        unitMeasures: {\n            width: minUnitWidth,\n            height: minUnitHeight,\n            border: border.width\n        },\n        priority: priority.row,\n        breakPage: breakPage.rows.map(e => e + Math.max(topLeft.length, topRight.length)),\n        extraCellLengths: [topLeft.length, bottomLeft.length]\n    }));\n\n    if (topLeft.length > 0) {\n        begColCells = topLeft[0].length;\n    } else {\n        begColCells = bottomLeft.length > 0 ? bottomLeft[0].length : 0;\n    }\n\n    if (topRight.length > 0) {\n        endColCells = topRight[0].length;\n    } else {\n        endColCells = bottomRight.length > 0 ? bottomRight[0].length : 0;\n    }\n\n    context.columnMatrix(new ColumnMatrix([topMatrix, bottomMatrix], {\n        isDistributionEqual: isColumnSizeEqual,\n        distribution: distribution.columns,\n        gutter: gutterSpace.columns,\n        isTransposed: true,\n        unitMeasures: {\n            width: minUnitWidth,\n            height: minUnitHeight,\n            border: border.width\n        },\n        priority: priority.col,\n        breakPage: breakPage.columns,\n        extraCellLengths: [begColCells, endColCells]\n    }));\n    context.centerMatrix(valueMatrix);\n\n    return matrices;\n};\n","import {\n    TOP, BOTTOM, LEFT, RIGHT, CENTER, BLANK_BORDERS, COLUMN, ROW,\n    VIEW_INDEX, ROW_MATRIX_INDEX, COLUMN_MATRIX_INDEX, MIDDLE, NO_BORDERS\n} from '../enums/constants';\n\nconst borderMap = {\n    [`${TOP}-${LEFT}`]: NO_BORDERS,\n    [`${TOP}-${MIDDLE}`]: COLUMN,\n    [`${TOP}-${RIGHT}`]: NO_BORDERS,\n    [`${CENTER}-${LEFT}`]: ROW,\n    [`${CENTER}-${MIDDLE}`]: CENTER,\n    [`${CENTER}-${RIGHT}`]: ROW,\n    [`${BOTTOM}-${LEFT}`]: NO_BORDERS,\n    [`${BOTTOM}-${MIDDLE}`]: COLUMN,\n    [`${BOTTOM}-${RIGHT}`]: NO_BORDERS\n};\n\nconst applySpecificBorder = (cells, color, type, style) => {\n    cells.style(`border-${type}`, `${style} ${color}`);\n};\n\nconst specificBorderApplier = (borderTypes, showBorders, cells, borderInfo) => {\n    const {\n        color,\n        width,\n        style\n    } = borderInfo;\n    const borderStyle = `${width}px ${style}`;\n\n    borderTypes.forEach((borderType) => {\n        applySpecificBorder(cells, showBorders[borderType] ? color : BLANK_BORDERS, borderType, borderStyle);\n    });\n};\n\nconst borderApplier = (cells, borderInfo) => {\n    const {\n       showRowBorders,\n      showColBorders,\n      showValueBorders\n  } = borderInfo;\n    return {\n        row: () => specificBorderApplier([TOP, BOTTOM], showRowBorders, cells, borderInfo),\n        column: () => specificBorderApplier([LEFT, RIGHT], showColBorders, cells, borderInfo),\n        center: () => specificBorderApplier([LEFT, RIGHT, TOP, BOTTOM], showValueBorders, cells, borderInfo)\n    };\n};\n\nexport const applyBorders = (cells, border, row, column) => {\n    const borderApplierFn = borderApplier(cells, border);\n    const borderMapVal = borderMap[`${ROW_MATRIX_INDEX[VIEW_INDEX[row]]}-${COLUMN_MATRIX_INDEX[column]}`];\n    if (borderMapVal) {\n        borderApplierFn[borderMapVal]();\n    }\n};\n","import { selectElement } from 'muze-utils';\nimport {\n     TOP, BOTTOM, ROW_SPAN, COL_SPAN, CENTER, ROW, COLUMN\n} from '../enums/constants';\n\nconst orderMaker = arr => Array.from(Array(arr.length).keys());\n\nconst nestByStack = (stack, updateArr, optionalParams = {}) => {\n    let {\n        order,\n        keyFn\n    } = optionalParams;\n    const arr = updateArr.slice();\n    const currStack = stack.slice();\n    const prevStack = currStack.slice();\n    // Order in which element are to be checked for nesting, default normal looping\n    // Order is always in the order of nest, i.e., left to right\n    order = order || Array.from(Array(arr.length).keys());\n\n    // Key function, if array of objects\n    keyFn = keyFn || (v => v);\n\n    // Return same array if stack is empty\n    if (currStack.length === 0) {\n        const newArr = [];\n        order.forEach((e) => {\n            newArr.push(arr[e]);\n        });\n        return { prevStack, currStack: arr, arr: newArr };\n    }\n\n    let arrVal = '';\n    let stackVal = '';\n    const newArr = [];\n\n    // Loop in order\n    for (let i = order.length - 1; i >= 0; i--) {\n        // Get current element index from the order given\n        const currElemIndex = order[i];\n\n        // Crete a hashmap for the hierarchy by joining strings of the array for both stack and input array\n        arrVal += keyFn(arr[currElemIndex]);\n        stackVal += keyFn(currStack[currElemIndex]);\n\n        // If the current value and value in stack is same, convert it to null\n        if (arrVal === stackVal) {\n            newArr[currElemIndex] = null;\n        } else {\n            stackVal = '';\n            // Loop from the current index in order to the last element in order to change the\n            // whole hierarchy\n            for (let j = i; j < order.length; j++) {\n                const newElem = order[j];\n                const arrElem = arr[newElem];\n\n                newArr[newElem] = arrElem;\n\n                // Reset stack to new stack\n                currStack[newElem] = arrElem;\n                stackVal = arrVal;\n            }\n        }\n    }\n    const returnArr = [];\n    order.forEach((e) => {\n        returnArr.push(newArr[e]);\n    });\n    return { prevStack, currStack, arr: returnArr };\n};\n\nconst spanCalculator = (colData, colIdx, matrix, rIdx) => {\n    // if data is not header cell then rowspan\n    // has to be 1\n    if (!colData) {\n        return () => 1;\n    }\n\n    const conditions = {\n        row: count => matrix[rIdx + count] && matrix[rIdx + count][colIdx],\n        column: count => matrix[rIdx][colIdx + count]\n    };\n\n    return (type) => {\n        let count = 1;\n        let isNull = false;\n\n        while (!isNull) {\n            if (conditions[type](count) === null) {\n                count += 1;\n            } else {\n                isNull = true;\n            }\n        }\n        return count;\n    };\n};\n\nconst maskCreator = (matrix, order) => ({\n    row: () => {\n        let stack = [];\n        return matrix.map((e) => {\n            const {\n                    currStack,\n                    arr\n                } = nestByStack(stack, e, { keyFn: val => val.valueOf(), order });\n\n            stack = currStack;\n            return arr;\n        });\n    },\n    column: () => {\n        let stack = [];\n        const viewMatrix = [];\n        matrix.length && matrix[0].forEach((cell, colIndex) => {\n            const hierarchy = [];\n            matrix.forEach((row) => {\n                hierarchy.push(row[colIndex]);\n            });\n            const {\n                    currStack,\n                    arr\n                } = nestByStack(stack, hierarchy, { keyFn: val => val.valueOf(), order });\n            stack = currStack;\n\n            matrix.forEach((row, rowIndex) => {\n                viewMatrix[rowIndex] = viewMatrix[rowIndex] || [];\n                viewMatrix[rowIndex][colIndex] = arr[rowIndex];\n            });\n        });\n        return viewMatrix;\n    }\n});\n\nconst spanGenerator = viewMatrix => ({\n    row: () => {\n        const spans = [];\n        viewMatrix.forEach((row, ridx) => {\n            spans[ridx] = spans[ridx] || [];\n            row.forEach((col, i) => {\n                if (viewMatrix[ridx][i]) {\n                    const currSpan = spanCalculator(col, i, viewMatrix, ridx)('row');\n                    currSpan && spans[ridx].push(currSpan);\n                }\n            });\n        });\n        return spans;\n    },\n    column: () => viewMatrix.map((row, ridx) => row.map((col, i) => spanCalculator(col, i, viewMatrix, ridx)('column'))\n                    .filter(col => col !== 1))\n});\n\nconst getOrder = isReverse => ({\n    row: (matrix) => {\n        if (isReverse) {\n            return orderMaker(matrix[0]).reverse();\n        }\n        return orderMaker(matrix[0]);\n    },\n    column: (matrix) => {\n        if (isReverse) {\n            return orderMaker(matrix).reverse();\n        }\n        return orderMaker(matrix);\n    }\n});\n\nconst matrixSpanGeneratorMap = {\n    [`${TOP}-1`]: {\n        orderGetter: getOrder(false)[COLUMN],\n        viewMatrixMaker: (...params) => maskCreator(...params)[COLUMN],\n        spanMaker: (...params) => spanGenerator(...params)[COLUMN]\n    },\n    [`${BOTTOM}-1`]: {\n        orderGetter: getOrder(true)[COLUMN],\n        viewMatrixMaker: (...params) => maskCreator(...params)[COLUMN],\n        spanMaker: (...params) => spanGenerator(...params)[COLUMN]\n    },\n    [`${CENTER}-0`]: {\n        orderGetter: getOrder(false)[ROW],\n        viewMatrixMaker: (...params) => maskCreator(...params)[ROW],\n        spanMaker: (...params) => spanGenerator(...params)[ROW]\n    },\n    [`${CENTER}-2`]: {\n        orderGetter: getOrder(true)[ROW],\n        viewMatrixMaker: (...params) => maskCreator(...params)[ROW],\n        spanMaker: (...params) => spanGenerator(...params)[ROW]\n    }\n};\n\nconst matrixSpanGenerator = (type) => {\n    const generator = matrixSpanGeneratorMap[type];\n    if (generator) {\n        return generator;\n    }\n    return {\n        orderGetter: () => null,\n        viewMatrixMaker: matrix => () => matrix,\n        spanMaker: () => () => null\n    };\n};\n\n/**\n * This function is used to set the col and row spans\n * for the matrices based on repeated/hierarchichal data\n *\n * @export\n * @param {Array} matrix The 2d array for which filtering is to be done\n * @param {string} type Type of array (center, top, bottom)\n * @param {number} index Index of array in the row\n * @return {Object} containing the view matrix and their spans\n */\nexport function cellSpanMaker (matrix, type, index) {\n    let spans = null;\n    let viewMatrix = matrix;\n    const {\n        orderGetter,\n        viewMatrixMaker,\n        spanMaker\n    } = matrixSpanGenerator(`${type}-${index}`);\n\n    if (matrix.length) {\n        const order = orderGetter(matrix);\n        viewMatrix = viewMatrixMaker(matrix, order)();\n        spans = spanMaker(viewMatrix)();\n    }\n    return { viewMatrix, spans };\n}\n\nconst spaceAllocationDueToSpan = (span, placeholder, borderWidth) => {\n    const height = placeholder.availHeight();\n    const width = placeholder.availWidth();\n\n    return {\n        [ROW_SPAN] () {\n            selectElement(this).style('height', `${height + borderWidth}px`);\n            if (span > 1) {\n                selectElement(this).style('height', `${height * span + borderWidth * (span)}px`);\n                placeholder.setAvailableSpace(width, height * span);\n            }\n        },\n        [COL_SPAN] () {\n            if (span > 1) {\n                placeholder.setAvailableSpace(width * span + borderWidth * (span - 1), height);\n            }\n            selectElement(this).style('height', `${height}px`);\n        }\n    };\n};\n\nconst spanApplier = (cells, spans, config, type) => {\n    const borderWidth = config.border.width;\n\n    cells.attr(type, function (cell, colIndex) {\n        const span = spans[cell.rowIndex][colIndex];\n        const placeholder = cell.placeholder;\n\n        spaceAllocationDueToSpan(span, placeholder, borderWidth)[type].bind(this)();\n        return span;\n    });\n};\n\nconst spanApplierMap = {\n    [`${TOP}-0`]: null,\n    [`${TOP}-1`]: (...params) => spanApplier(...params, COL_SPAN),\n    [`${TOP}-2`]: null,\n    [`${CENTER}-0`]: (...params) => spanApplier(...params, ROW_SPAN),\n    [`${CENTER}-1`]: null,\n    [`${CENTER}-2`]: (...params) => spanApplier(...params, ROW_SPAN),\n    [`${BOTTOM}-0`]: null,\n    [`${BOTTOM}-1`]: (...params) => spanApplier(...params, COL_SPAN),\n    [`${BOTTOM}-2`]: null\n};\n\nexport const applySpans = (cells, spans, config, type) => {\n    const applier = spanApplierMap[type];\n    if (applier) {\n        applier(cells, spans, config);\n    }\n};\n","import { ERROR_MSG } from 'muze-utils';\n/**\n * An Interface to be implemented if the transaction support is necessary. This class ensures reactivity to\n * global properties.\n */\nexport default class TransactionSupport {\n    /**\n     * Property accessor for data member of the class. Data is passed to the system by calling this method.\n     */\n    data () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPl);\n    }\n\n    /**\n     * Property accessor for width of the class. Width is passed as an integer.\n     */\n    width () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPl);\n    }\n\n    /**\n     * Property accessor for height of the class. Height is passed as an integer.\n     */\n    height () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPl);\n    }\n\n    /**\n     * Property accessor for config of the class. Config is passed as an object.\n     */\n    config () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPl);\n    }\n}\n","import { TOP, BOTTOM, LEFT, TITLE, SUB_TITLE, GROUP, LAYOUT, LEGEND } from '../constants';\n\n/**\n *\n *\n * @param {*} context\n *\n */\nexport const arrangeComponents = (context) => {\n    const legendConfig = context.config().legend;\n    const titleConfig = context.title()[1];\n    const subtitleConfig = context.subtitle()[1];\n    const titleLayouts = {\n        [`${TOP}-${TOP}`]: [TITLE, SUB_TITLE, GROUP],\n        [`${BOTTOM}-${BOTTOM}`]: [GROUP, SUB_TITLE, TITLE],\n        [`${TOP}-${BOTTOM}`]: [TITLE, GROUP, SUB_TITLE],\n        [`${BOTTOM}-${TOP}`]: [SUB_TITLE, GROUP, TITLE]\n    };\n    const legendLayouts = [\n        [LEGEND, LAYOUT],\n        [LAYOUT, LEGEND]\n    ];\n    const titlePosition = titleConfig.position || TOP;\n    const subtitlePosition = subtitleConfig.position || TOP;\n\n    return {\n        headers: titleLayouts[`${titlePosition}-${subtitlePosition}`],\n        legends: legendConfig.position === LEFT || legendConfig.position === TOP ?\n        legendLayouts[0] : legendLayouts[1]\n    };\n};\n","/**\n * Flag to specify whether direction is vertical.\n */\nexport const MARGIN = 'margin';\nexport const LEFT = 'left';\nexport const RIGHT = 'right';\nexport const BOTTOM = 'bottom';\nexport const TOP = 'top';\nexport const SPACE_FIXER = 'spaceFixer';\nexport const CLASSPREFIX = 'muze';\nexport const VERTICAL_ALIGN = 'verticalAlign';\nexport const TEXT_ALIGN = 'textAlign';\nexport const IS_OFFSET = 'isOffset';\nexport const MIDDLE = 'middle';\nexport const BASELINE = 'baseline';\nexport const SHOW = 'show';\nexport const CENTER = 'center';\nexport const TEXT = 'text';\nexport const HEADER = 'header';\nexport const HEIGHT = 'height';\nexport const WIDTH = 'width';\nexport const DATA = 'data';\nexport const AXES = 'axes';\nexport const FACET_BY_FIELDS = 'facetByFields';\nexport const FIELDS = 'fields';\nexport const TRANSFORM = 'transform';\nexport const LAYER_DEF = 'layerDef';\nexport const CONFIG = 'config';\nexport const DETAIL_FIELDS = 'detailFields';\nexport const MAX_LINES = 'maxLines';\nexport const MIN_CHARS = 'minCharacters';\nexport const ROTATION = 'rotation';\n\nexport const TEXT_CELL = 'text-cell';\nexport const AXIS_CELL = 'axis-cell';\nexport const GEOM_CELL = 'geom-cell';\nexport const BLANK_CELL = 'blank-cell';\n","// eneum to refer to simple cell\nexport const SIMPLE = 'simple';\n// eneum to refer to header cell\nexport const TEXT = 'text';\n// enum to refer to axis cell\nexport const AXIS = 'axis';\n// enum to refer to visual cell\nexport const GEOM = 'geom';\n// enum to refer blank cell\nexport const BLANK = 'blank';\n","import {\n    ERROR_MSG,\n    getUniqueId,\n    mergeRecursive\n} from 'muze-utils';\nimport { SIMPLE } from './enums/cell-type';\n\n/**\n * This file declares a class that is used as an interface to create new\n * SimpleCell elements.\n * @module SimpleCell\n */\n/**\n * Base class for all table cells.\n *\n * @interface\n * @class SimpleCell\n */\nclass SimpleCell {\n\n    /**\n     * Creates an instance of SimpleCell.\n     *\n     * @param {*} config The input configuration.\n     * @memberof SimpleCell\n     */\n    constructor (config) {\n        this._id = getUniqueId();\n\n        const defConfig = mergeRecursive({}, this.constructor.defaultConfig());\n        this._config = mergeRecursive(defConfig, config || {});\n\n        this._mount = null;\n    }\n\n    /**\n     * Returns the type of the placehlder.\n     *\n     * @readonly\n     * @memberof SimpleCell\n     */\n    get type () {\n        return SIMPLE;\n    }\n\n    /**\n     * Returns the type of the placehlder.\n     *\n     * @readonly\n     * @memberof SimpleCell\n     * @return {Object} Default config for the placeholder\n     */\n    static defaultConfig () {\n        return {};\n    }\n\n    /**\n     * Returns the value contained by the SimpleCell.\n     *\n     * @memberof SimpleCell\n     */\n    valueOf () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    /**\n     * Returns a unique identifier for the instance used\n     * to control selective rendering.\n     *\n     * @memberof SimpleCell\n     */\n    id () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    /**\n     * Returns a serialized representation of the instance.\n     *\n     * @memberof SimpleCell\n     */\n    serialize () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    /**\n     * Returns an object with width and height fields\n     * specifying the space taken up by this metod.\n     *\n     * @memberof SimpleCell\n     */\n    getLogicalSpace () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    /**\n     * Method used to set the space available to render the SimpleCell\n     *\n     * @param {number} width The available width.\n     * @param {number} height The available height.\n     * @memberof SimpleCell\n     */\n    setAvailableSpace () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    /**\n     * Render the SimpleCell inthe supplied mount point.\n     *\n     * @param {HTMLElement} mount The mount point to render in.\n     * @memberof SimpleCell\n     */\n    render () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n    /**\n     * Render the SimpleCell inthe supplied mount point.\n     *\n     * @param {HTMLElement} mount The mount point to render in.\n     * @memberof SimpleCell\n     */\n    remove () {\n        throw new Error(ERROR_MSG.INTERFACE_IMPL);\n    }\n\n}\n\nexport default SimpleCell;\n","/**\n * This file exports variables that are used as defaults for\n * the placeholders\n */\nimport * as CONSTANTS from './constants';\n\n /**\n * Default Configuration for the cells\n * @return {Object} Default configuration\n */\nexport const DEFAULT_CONFIG = {\n    [CONSTANTS.MARGIN]: {\n        [CONSTANTS.LEFT]: 0,\n        [CONSTANTS.RIGHT]: 0,\n        [CONSTANTS.TOP]: 0,\n        [CONSTANTS.BOTTOM]: 0\n    },\n    [CONSTANTS.SPACE_FIXER]: 2,\n    [CONSTANTS.IS_OFFSET]: false,\n    [CONSTANTS.VERTICAL_ALIGN]: null,\n    [CONSTANTS.TEXT_ALIGN]: CONSTANTS.CENTER,\n    [CONSTANTS.SHOW]: true,\n    [CONSTANTS.MAX_LINES]: 0,\n    [CONSTANTS.MIN_CHARS]: 0,\n    [CONSTANTS.ROTATION]: null\n};\n","import { mergeRecursive } from 'muze-utils';\nimport { GEOM, TEXT, AXIS, BLANK } from './enums/cell-type';\n\nconst DEFAULT_PROPS = {\n    mount: {},\n    availHeight: {},\n    availWidth: {},\n    config: {\n        sanitization: (context, value) => mergeRecursive(context._config, value)\n    },\n    logicalSpace: {},\n    minSpacing: {},\n    source: {}\n};\n\nconst geomProps = {\n    data: {},\n    caption: {},\n    config: {},\n    axes: {\n        sanitization: (context, value) => Object.assign(context._axes, value)\n    },\n    facetByFields: {},\n    fields: {},\n    transform: {},\n    layerDef: {},\n    detailFields: {}\n};\n\nconst textProps = {\n    smartText: {}\n};\nexport const PROPS = {\n    [GEOM]: mergeRecursive(geomProps, DEFAULT_PROPS),\n    [TEXT]: mergeRecursive(textProps, DEFAULT_PROPS),\n    [AXIS]: DEFAULT_PROPS,\n    [BLANK]: DEFAULT_PROPS\n};\n","/**\n * This file declares a class that represents a table cell\n * used to house an axis.\n * @module VisualCell\n */\nimport { selectElement, makeElement, generateGetterSetters } from 'muze-utils';\nimport { CLASSPREFIX, HEIGHT, WIDTH, AXIS_CELL } from './enums/constants';\nimport SimpleCell from './simple-cell';\nimport { DEFAULT_CONFIG } from './enums/defaults';\nimport { AXIS } from './enums/cell-type';\nimport { PROPS } from './props';\n\n/**\n * Computes the logical space of the an axis instance within an axis cell\n *\n * @param {Object} context Required to get the needed parameters to compute axis space\n * @return {Object} Returns the logical space for axis\n */\nconst computeAxisSpace = (context) => {\n    let logicalWidth;\n    let logicalHeight;\n    const axis = context.source();\n    const {\n        spaceFixer,\n        margin\n    } = context.config();\n    const {\n        width,\n        height\n    } = axis.getLogicalSpace();\n    const {\n            show\n        } = axis.config();\n    if (show === true) {\n        logicalHeight = Math.floor(height + margin.top + margin.bottom + spaceFixer);\n        logicalWidth = Math.floor(width + margin.left + margin.right + spaceFixer);\n    } else {\n        [logicalWidth, logicalHeight] = [width, height];\n    }\n    return {\n        width: logicalWidth,\n        height: logicalHeight\n    };\n};\n\n/**\n * Represents an axis cell.\n *\n * @class Axis\n */\nclass AxisCell extends SimpleCell {\n\n    /**\n     * Creates an instance of AxisCell.\n     *\n     * @param {Object} config The input config.\n     * @memberof AxisCell\n     */\n    constructor (config) {\n        super(config);\n\n        this._axis = null;\n        this._availHeight = null;\n        this._availWidth = null;\n        this._logicalSpace = null;\n\n        generateGetterSetters(this, PROPS[AXIS]);\n    }\n\n    /**\n     * return the type pf SimpleCell cell.\n     *\n     * @readonly\n     * @memberof AxisCell\n     */\n    get type () {\n        return AXIS;\n    }\n\n    /**\n     * This method return the value conatined by this SimpleCell.\n     *\n     * @return {SimpleAxis | ColorAxis} Instance of SimpleAxis or ColorAxis.\n     * @memberof AxisCell\n     */\n    valueOf () {\n        return this.source().id;\n    }\n\n    /**\n     * This method return the unique identififer of the axis\n     *\n     * @return {string} Id of the axis.\n     * @memberof AxisCell\n     */\n    get id () {\n        return this._id;\n    }\n\n    /**\n     * Retrns the serialized representation of this cell.\n     *\n     * @return {Object}Object with serializable props.\n     * @memberof AxisCell\n     */\n    serialize () {\n        return {\n            type: AXIS,\n            axis: this.source().serialize()\n        };\n    }\n\n    /**\n     * return the default configuration for the text cell\n     *\n     * @static\n     * @return {Object} Default configuration of the cell\n     * @memberof AxisCell\n     */\n    static defaultConfig () {\n        return DEFAULT_CONFIG;\n    }\n\n    /**\n     * return the space taken up by an axis element in the dom.\n     *\n     * @return {Object} Object with width and height fields.\n     * @memberof AxisCell\n     */\n    getLogicalSpace () {\n        if (!this.logicalSpace()) {\n            this.logicalSpace(computeAxisSpace(this));\n        }\n        return this.logicalSpace();\n    }\n\n    /**\n     * This method is used to set the space availiable to render\n     * the SimpleCell.\n     *\n     * @param {number} width The width of SimpleCell.\n     * @param {number} height The height of SimpleCell.\n     * @return {Instance} Returns current Instance\n     * @memberof AxisCell\n     */\n    setAvailableSpace (width, height) {\n        this.availWidth(width);\n        this.availHeight(height);\n        const {\n            margin,\n            isOffset\n        } = this.config();\n\n        if (width || height) {\n            this.source().setAvailableSpace(width, height, margin, isOffset);\n            this.source().logicalSpace(null);\n        } else {\n            this.source().resetLogicalSpace();\n        }\n        this.logicalSpace(null);\n        return this;\n    }\n\n    /**\n     * This method is used to render the axis inside the axis cell.\n     *\n     * @param {HTMLElement} mount The mount point.\n     * @return {Selection} node where axis mounted\n     * @memberof AxisCell\n     */\n    /* istanbul ignore next */render (mount) {\n        if (!mount) {\n            return this;\n        }\n        const axis = this.source();\n        const availHeight = this.availHeight();\n        const availWidth = this.availWidth();\n        const {\n            margin\n        } = this.config();\n        const {\n            top,\n            bottom,\n            left,\n            right\n        } = margin;\n        const {\n            show,\n            orientation\n        } = axis.config();\n        const wrapperDiv = makeElement(selectElement(mount), 'div', [this], `${CLASSPREFIX}-${AXIS_CELL}`);\n        const selection = makeElement(wrapperDiv, 'svg', [1], `${CLASSPREFIX}-axis-container`);\n        selection.classed(`${CLASSPREFIX}-axis-container-${orientation}`, true);\n\n        this.mount(mount);\n        if (!availWidth) {\n            selection.attr(WIDTH, `${0}px`);\n        }\n        if (!availHeight) {\n            selection.attr(HEIGHT, `${0}px`);\n        }\n        wrapperDiv.style(WIDTH, `${show ? Math.floor(availWidth) : 0}px`)\n                        .style(HEIGHT, `${show ? Math.floor(availHeight) : 0}px`)\n                        .style('margin-top', top)\n                        .style('margin-bottom', bottom)\n                        .style('margin-left', left)\n                        .style('margin-right', right);\n\n        axis.mount(selection.node());\n        return selection;\n    }\n\n    /**\n     * Disposes the cell\n     *\n     * @return {Instance} Current instance of AxisCell\n     * @memberof AxisCell\n     */\n    remove () {\n        this.source() && this.source().remove();\n        this.mount() && this.mount().remove();\n        return this;\n    }\n}\n\nexport default AxisCell;\n\n","/**\n * This file declares a class that represents a BLANK element in a  table.\n * @module VisualCell\n */\nimport {\n    selectElement,\n    makeElement,\n    applyStyle,\n    generateGetterSetters\n    } from 'muze-utils';\nimport SimpleCell from './simple-cell';\nimport { CLASSPREFIX, BLANK_CELL } from './enums/constants';\nimport { BLANK } from './enums/cell-type';\nimport { DEFAULT_CONFIG } from './enums/defaults';\nimport { PROPS } from './props';\n\n/**\n * Represents a table haeder.\n *\n * @class BLANK\n */\nclass BlankCell extends SimpleCell {\n\n    /**\n     * Creates an instance of BLANK.\n     * @param {Object} config The input configuration.\n     * @memberof BLANK\n     */\n    constructor (config) {\n        super(config);\n\n        generateGetterSetters(this, PROPS[BLANK]);\n    }\n\n    /**\n     * return the type pf SimpleCell cell.\n     *\n     * @readonly\n     * @memberof BlankCell\n     */\n    get type () {\n        return BLANK;\n    }\n\n    /**\n     * This method return the value contained by this SimpleCell.\n     *\n     * @return {string} The text value contained by this cell.\n     * @memberof BlankCell\n     */\n    valueOf () {\n        return this.id;\n    }\n\n    /**\n     * return the default configuration for the text cell\n     *\n     * @static\n     * @return {Object} Default configuration of the cell\n     * @memberof BlankCell\n     */\n    static defaultConfig () {\n        return DEFAULT_CONFIG;\n    }\n\n    /**\n     * This method is used to return a unique identifier for\n     * the BLANK cell.\n     *\n     * @return {string} The unique identifier for the BLANK.\n     * @memberof BlankCell\n     */\n    get id () {\n        return this._id;\n    }\n\n    /**\n     * This method is used to obtain a serialized representation of this instance.\n     *\n     * @return {Object} Object with serilizable props.\n     * @memberof BLANK\n     */\n    serialize () {\n        return {\n            type: BLANK\n        };\n    }\n\n    /**\n     * This method return the space taken up\n     * by the text with the style applied.\n     *\n     * @return {Object} width and height taken up by the text.\n     * @memberof BLANK\n     */\n    getLogicalSpace () {\n        if (!this.logicalSpace()) {\n            return {\n                width: this.width || 0,\n                height: this.height || 0\n            };\n        }\n        return this.logicalSpace();\n    }\n\n    /**\n     * This method is used to set the available space.\n     *\n     * @param {number} width The available width.\n     * @param {number} height The available height.\n     * @return {Instance} Returns current Instance\n     * @memberof BlankCell\n     */\n    setAvailableSpace (width, height) {\n        this.availWidth(width);\n        this.availHeight(height);\n        this.logicalSpace(null);\n        return this;\n    }\n\n    /**\n     * This method is used to render the BLANK cell inside\n     * the provided mount point.\n     *\n     * @param {HTMLElement} mount The mount point for this cell.\n     * @return {Instance} Returns current Instance\n     * @memberof BLANK\n     */\n    /* istanbul ignore next */render (mount) {\n        if (mount) {\n            const { style } = this.config();\n            // append span element to mount point\n            this.mount(mount);\n            const container = selectElement(mount);\n            const elem = makeElement(container, 'div', [this.id]);\n            elem.classed(`${CLASSPREFIX}-${BLANK_CELL}`, true);\n            elem.style('width', `${this.availWidth()}px`);\n            elem.style('height', `${this.availHeight()}px`);\n            elem.html('');\n            // apply style on the returned element\n            if (style) {\n                applyStyle(elem, style);\n            }\n        } return this;\n    }\n\n    /**\n     * Removes the cell(Disposal)\n     *\n     * @return {Instance} Returns current Instance\n     * @memberof BlankCell\n     */\n    remove () {\n        this.mount() && this.mount().remove();\n        return this;\n    }\n }\nexport default BlankCell;\n","/**\n * This file declares a class that represents a Text element in a  table.\n * @module VisualCell\n */\n\nimport {\n    selectElement,\n    makeElement,\n    getSmartComputedStyle,\n    generateGetterSetters\n} from 'muze-utils';\nimport SimpleCell from './simple-cell';\nimport { TEXT } from './enums/cell-type';\nimport { PROPS } from './props';\nimport { DEFAULT_CONFIG } from './enums/defaults';\nimport { CLASSPREFIX, TOP, BOTTOM, LEFT, RIGHT, HEADER, WIDTH, TEXT_CELL } from './enums/constants';\nimport './text-cell.scss';\n\nconst setSmartText = (context) => {\n    const source = context.source();\n    const {\n        height: minHeightSpace,\n        width: minWidthSpace\n    } = context.minSpacing();\n    const {\n       margin,\n       rotation\n   } = context.config();\n    const {\n        left,\n        right,\n        top,\n        bottom\n     } = margin;\n    const paddedHeight = top + bottom + minHeightSpace;\n    const paddedWidth = left + right + minWidthSpace;\n    const availHeight = context.availHeight() - paddedHeight;\n    const availWidth = context.availWidth() - paddedWidth;\n    const labelManager = context.dependencies().labelManager;\n\n    labelManager.setStyle(context._computedStyle);\n\n    !rotation && context.smartText(labelManager.getSmartText(source, availWidth, availHeight, false));\n    rotation && context.smartText(labelManager.getSmartText(source, availHeight, availWidth, true));\n\n    return context;\n};\n\n/**\n* Computes the Logical Space for the text\n*\n* @param {Object} context Required to get the needed parameters to compute text space\n* @return {Object} Logical space taken up by text\n* @memberof TextCell\n*/\nconst computeTextSpace = (context) => {\n    const { labelManager } = context.dependencies();\n    const {\n        height: minHeightSpace,\n        width: minWidthSpace\n    } = context.minSpacing();\n    const {\n       margin,\n       show,\n       maxLines,\n       minCharacters\n   } = context.config();\n    const {\n       left,\n       right,\n       top,\n       bottom\n    } = margin;\n    const paddedHeight = top + bottom + minHeightSpace;\n    const paddedWidth = left + right + minWidthSpace;\n    const availHeight = context.availHeight() - paddedHeight;\n    const availWidth = context.availWidth() - paddedWidth;\n    const source = context.source();\n    const space = context.smartText();\n    const minText = new Array(minCharacters).fill('W').join('');\n    const _minTextSpace = labelManager.getOriSize(minText);\n\n    context.config({ rotation: false });\n    if (space.width > (availWidth || 0) && maxLines) {\n        space.height = space.oriTextHeight * maxLines;\n    }\n    if (availWidth && availWidth < space.width) {\n        space.width = _minTextSpace.width;\n    }\n    if (availWidth && availWidth < Math.min(_minTextSpace.width, space.oriTextWidth)) {\n        const smartSpace = labelManager.getSmartText(source, availHeight, _minTextSpace.height, true);\n        space.width = smartSpace.height;\n        space.height = smartSpace.width;\n        context.config({ rotation: true });\n        context.smartText(smartSpace);\n    }\n\n    if (show) {\n        return {\n            width: Math.ceil(space.width) + paddedWidth,\n            height: Math.ceil(space.height) + paddedHeight\n        };\n    } return {\n        width: 0,\n        height: 0\n    };\n};\n\n/**\n * Represents a table haeder.\n *\n * @class Text\n */\nclass TextCell extends SimpleCell {\n\n    /**\n     * Creates an instance of Text.\n     * @param {Object} config The input configuration.\n     * @param {string} dependencies Dependencies for the class(labelManager)\n     * @memberof Text\n     */\n    constructor (config, dependencies) {\n        super(config);\n\n        this._dependencies = dependencies;\n        this._className = this._config.className ||\n                    (this._config.type === HEADER ? `${CLASSPREFIX}-${HEADER}-cell` : `${CLASSPREFIX}-${TEXT}-cell`);\n        this._computedStyle = getSmartComputedStyle(selectElement('body'), this._className);\n        this._dependencies.labelManager.setStyle(this._computedStyle);\n        generateGetterSetters(this, PROPS[TEXT]);\n        const space = this._dependencies.labelManager.getOriSize('w');\n        this.minSpacing({ width: Math.floor(space.width * 3 / 4), height: Math.floor(space.height / 2) });\n        setSmartText(this);\n    }\n\n    /**\n     * return the type pf SimpleCell cell.\n     *\n     * @readonly\n     * @memberof TextCell\n     */\n    get type () {\n        return TEXT;\n    }\n\n    /**\n     * This method return the value contained by this SimpleCell.\n     *\n     * @return {string} The text value contained by this cell.\n     * @memberof TextCell\n     */\n    valueOf () {\n        return this.source();\n    }\n\n    /**\n     * This method is used to return a unique identifier for\n     * the Text cell.\n     *\n     * @return {string} The unique identifier for the Text.\n     * @memberof TextCell\n     */\n    get id () {\n        return this._id;\n    }\n\n    /**\n     * Returns the dependencies of the instance\n     *\n     * @return {Object} Dependencies needed by the class\n     * @memberof TextCell\n     */\n    dependencies () {\n        return this._dependencies;\n    }\n\n    /**\n     * This method is used to obtain a serialized representation of this instance.\n     *\n     * @return {Object} Object with serilizable props.\n     * @memberof TextCell\n     */\n    serialize () {\n        return {\n            text: this.source(),\n            type: TEXT\n        };\n    }\n\n    /**\n     * return the default configuration for the text cell\n     *\n     * @static\n     * @return {Object} Default configuration of the cell\n     * @memberof TextCell\n     */\n    static defaultConfig () {\n        return DEFAULT_CONFIG;\n    }\n\n    /**\n     * This method return the space taken up\n     * by the text with the style applied.\n     *\n     * @return {Object} width and height taken up by the text.\n     * @memberof Text\n     */\n    getLogicalSpace () {\n        if (!this.logicalSpace()) {\n            this.logicalSpace(computeTextSpace(this));\n        }\n        return this.logicalSpace();\n    }\n\n    /**\n     * This method is used to set the available space.\n     *\n     * @param {number} width The available width.\n     * @param {number} height The available height.\n     * @return {Instance} Returns current Instance\n     * @memberof TextCell\n     */\n    setAvailableSpace (width, height) {\n        this.availWidth(width);\n        this.availHeight(height);\n        setSmartText(this);\n        this.logicalSpace(null);\n        return this;\n    }\n\n    /**\n     * This method is used to render the Text cell inside\n     * the provided mount point.\n     *\n     * @param {HTMLElement} mount The mount point for this cell.\n     * @return {Instance} Returns current Instance\n     * @memberof Text\n     */\n    render (mount) {\n        const availWidth = this.availWidth();\n        const availHeight = this.availHeight();\n        const {\n            margin,\n            show,\n            verticalAlign,\n            textAlign,\n            rotation\n        } = this.config();\n\n        this.mount(mount);\n        if (show) {\n            const container = selectElement(mount);\n            const elem = makeElement(container, 'div', [this.id], `${CLASSPREFIX}-${TEXT_CELL}`);\n            const vAlign = verticalAlign || rotation ? 'middle' : 'top';\n            const {\n                width,\n                height\n            } = this.smartText();\n            const {\n                height: minHeightSpace\n            } = this.minSpacing();\n            const translation = {\n                top: width + minHeightSpace / 2,\n                middle: width / 2 + minHeightSpace,\n                bottom: minHeightSpace\n            };\n\n            container.style('vertical-align', vAlign);\n\n            // Set class name\n            elem.classed(this._className, true);\n\n            // Apply styles\n            elem.style('text-align', textAlign);\n            elem.style('display', 'inline');\n            elem.style('transform', rotation ? `translate(${height / 2}px,\n                ${translation[vAlign]}px) rotate(-90deg)` : '');\n            elem.style(WIDTH, availWidth ? `${availWidth}px` : '100%');\n            [TOP, BOTTOM, LEFT, RIGHT].forEach((type) => {\n                container.style(`margin-${type}`, `${margin[type]}px`);\n            });\n            elem.style('text-align', textAlign);\n            elem.style('display', 'inline');\n            // set the text as the innerHTML\n            this._dependencies.labelManager.setStyle(this._computedStyle);\n            elem.html(this._dependencies.labelManager.getSmartText(this.source(), availWidth, availHeight, true).text);\n        }\n        return this;\n    }\n\n    /**\n     * Disposes the cell\n     *\n     * @return {Instance} Returns current Instance\n     * @memberof TextCell\n     */\n    remove () {\n        this.mount() && this.mount().remove();\n        return this;\n    }\n }\n\nexport default TextCell;\n","/**\n * This file declares a class that is used to represent a table cell\n * that houses a visual unit.\n * @module VisualCell\n */\n\nimport { selectElement, makeElement, generateGetterSetters } from 'muze-utils';\nimport SimpleCell from './simple-cell';\nimport { GEOM } from './enums/cell-type';\nimport { PROPS } from './props';\nimport {\n    CLASSPREFIX, HEIGHT, WIDTH, DATA, AXES, FACET_BY_FIELDS, FIELDS, TRANSFORM, LAYER_DEF, CONFIG, GEOM_CELL,\n    DETAIL_FIELDS\n} from './enums/constants';\nimport { DEFAULT_CONFIG } from './enums/defaults';\n\n/**\n * Calculates the logical space of the cell\n *\n * @param {Object} context Required to get the needed parameters to compute unit space\n * @return {Object} Logical space taken up by the unit\n * @memberof GeomCell\n */\nconst computeGeomSpace = (context) => {\n    const config = context.source().config();\n    const { width, height } = config;\n    return {\n        width: Math.ceil(width),\n        height: Math.ceil(height + context.getCaptionSpace().height)\n    };\n};\n\n /**\n * This class represents a SimpleCell for visual unit.\n *\n * @class GeomCell\n */\nclass GeomCell extends SimpleCell {\n\n    /**\n     * Creates an instance of GeomCell.\n     * @param {Object} config The input configuration.\n     * @memberof GeomCell\n     */\n    constructor (config) {\n        super(config);\n\n        this._unit = null;\n        this._layers = null;\n        this._axes = {};\n        this._datamodel = {};\n        this._facetByFields = {};\n        this._fields = null;\n        this._transform = null;\n        this._caption = null;\n\n        generateGetterSetters(this, PROPS[GEOM]);\n    }\n\n    /**\n     * return the type pf SimpleCell cell.\n     *\n     * @readonly\n     * @memberof GeomCell\n     */\n    get type () {\n        return GEOM;\n    }\n\n    /**\n     * This method return the value contained by this cell.\n     *\n     * @return {VisualUnit} Instance of visual unit contained by visual unit.\n     * @memberof GeomCell\n     */\n    valueOf () {\n        return this.source();\n    }\n\n    /**\n     * This method is used to return the id of the\n     * visual unit housed by this cell.\n     *\n     * @return {string} The unique id of the visual unit.\n     * @memberof GeomCell\n     */\n    get id () {\n        return this.source().id();\n    }\n\n    /**\n     * This method return a serialized representation of\n     * this instance.\n     *\n     * @return {Object} Object with serializable props.\n     * @memberof GeomCell\n     */\n    serialize () {\n        return {\n            type: GEOM,\n            unit: this.source().serialize(),\n            caption: this.caption()\n        };\n    }\n\n    /**\n     * return the default configuration for the geom cell\n     *\n     * @static\n     * @return {Object} Default configuration of the cell\n     * @memberof GeomCell\n     */\n    static defaultConfig () {\n        return DEFAULT_CONFIG;\n    }\n\n    /**\n     * Updates the model based on the changed parameters\n     *\n     * @return {Instance} return instance\n     * @memberof GeomCell\n     */\n    updateModel () {\n        const unit = this.source();\n        unit.lockModel();\n        [LAYER_DEF, TRANSFORM, AXES, FIELDS, CONFIG, DATA, AXES, FACET_BY_FIELDS, DETAIL_FIELDS].forEach((prop) => {\n            this[prop]() && unit[prop](this[prop]());\n        });\n        unit.unlockModel();\n        return this;\n    }\n\n    /**\n     * It gives the space taken by the caption of the unit\n     *\n     * @return {Object} return the space taken by caption\n     * @memberof GeomCell\n     */\n    getCaptionSpace () {\n        const caption = this.caption();\n\n        let captionSpace = { width: 0, height: 0 };\n        if (caption) {\n            captionSpace = caption.getLogicalSpace();\n        }\n        return captionSpace;\n    }\n\n    /**\n     * return the space taken up by the element in the dom.\n     *\n     * @return {Object} Object with width and height fields.\n     * @memberof GeomCell\n     */\n    getLogicalSpace () {\n        if (!this.logicalSpace()) {\n            this.logicalSpace(computeGeomSpace(this));\n        }\n        return this.logicalSpace();\n    }\n\n    /**\n     * This method is used to set the space available to\n     * render the SimpleCell.\n     *\n     * @param {number} width The available width.\n     * @param {number} height The available height.\n     * @return {Instance} Returns current Instance\n     * @memberof GeomCell\n     */\n    setAvailableSpace (width, height) {\n        const unit = this.source();\n\n        this.availWidth(width);\n        this.availHeight(height);\n        unit.lockModel();\n        unit.width(width).height(height - this.getCaptionSpace().height);\n        unit.unlockModel();\n        this.logicalSpace(null);\n        return this;\n    }\n\n    /**\n     * his method is used to render the visual unit inside the provided cell.\n     *\n     * @param {HTMLElement} mount The mountpoint in the table.\n     * @return {Instance} Returns current Instance\n     * @memberof GeomCell\n     */\n    render (mount) {\n        if (mount) {\n            this.mount(mount);\n            const availHeight = this.availHeight();\n            const availWidth = this.availWidth();\n            const caption = this.caption();\n            const wrapperDiv = makeElement(selectElement(mount), 'div', [1], `${CLASSPREFIX}-${GEOM_CELL}`);\n\n            if (caption) {\n                const captionDom = makeElement(wrapperDiv, 'div', [caption], `${CLASSPREFIX}-unit-caption`).node();\n                caption.render(captionDom);\n            }\n            const selection = makeElement(wrapperDiv, 'div', [1], `${CLASSPREFIX}-unit`);\n            wrapperDiv.style(WIDTH, `${availWidth}px`).style(HEIGHT, `${availHeight}px`);\n            selection.style(WIDTH, `${availWidth}px`)\n                            .style(HEIGHT, `${availHeight - this.getCaptionSpace().height}px`);\n            this.source().mount(selection.node());\n        }\n        return this;\n    }\n\n    /**\n     * Disposes the cell\n     *\n     * @return {Object} Current instance\n     * @memberof GeomCell\n     */\n    remove () {\n        this.mount() && this.mount().remove();\n        this.source().remove();\n        return this;\n    }\n}\n\nexport default GeomCell;\n","import AxisCell from './axis-cell';\nimport BlankCell from './blank-cell';\nimport TextCell from './text-cell';\nimport GeomCell from './geom-cell';\nimport SimpleCell from './simple-cell';\n\nimport * as CONSTANTS from './constants';\n\nexport const DEFAULT_PLACEHOLDERS = {\n    [CONSTANTS.SIMPLE_CELL]: SimpleCell,\n    [CONSTANTS.TEXT_CELL]: TextCell,\n    [CONSTANTS.AXIS_CELL]: AxisCell,\n    [CONSTANTS.GEOM_CELL]: GeomCell,\n    [CONSTANTS.BLANK_CELL]: BlankCell\n};\n\n","export const SIMPLE_CELL = 'SimpleCell';\nexport const TEXT_CELL = 'TextCell';\nexport const AXIS_CELL = 'AxisCell';\nexport const BLANK_CELL = 'BlankCell';\nexport const GEOM_CELL = 'GeomCell';\n\n","import { DEFAULT_PLACEHOLDERS } from './defaults';\n\n/**\n * Creates a registry for the cells, which can be used for\n * setting a new cell or getting the registered cells\n *\n * @return {Object} Setters and getters for registered cells\n */\nconst cellRegistry = () => {\n    const reg = DEFAULT_PLACEHOLDERS;\n    return {\n        set: (key, def) => {\n            if (key in reg) {\n                reg[key] = def;\n            }\n            return cellRegistry;\n        },\n        get: () => reg\n    };\n};\nexport default cellRegistry;\n","import { TextCell } from '@chartshq/visual-cell';\nimport { escapeHTML } from 'muze-utils';\nimport { TOP } from '../constants';\n\n/**\n *\n *\n * @param {*} rawContent\n *\n */\nconst resolveTitleSubTitleContent = (rawContent) => {\n    if (typeof rawContent === 'function' && !rawContent._sanitize) {\n        return rawContent();\n    }\n    return escapeHTML(rawContent());\n};\n\n/**\n *\n *\n * @param {*} config\n * @param {*} cellType\n * @param {*} labelManager\n * @param {*} prevCell\n *\n */\nconst headerCreator = (config, cellType, labelManager, prevCell) => {\n    let margin = {};\n    const {\n        content,\n        classPrefix,\n        maxLines\n    } = config;\n    const cell = prevCell || new TextCell(\n        {\n            type: cellType === 'title' ? 'header' : 'text',\n            className: `${classPrefix}-${cellType}-cell`\n        }, {\n            labelManager\n        })\n     .config({ maxLines }).minSpacing({ width: 0, height: 0 });\n\n    cell.source(content);\n    cell._minTickDiff = { height: 0, width: 0 };\n\n    if (config.position === TOP) {\n        margin = { top: 0, bottom: config.padding };\n    } else {\n        margin = { top: config.padding, bottom: 0 };\n    }\n    cell.config({ margin });\n\n    return {\n        height: cell.getLogicalSpace().height,\n        cell\n    };\n};\n\n/**\n *\n *\n * @param {*} config\n * @param {*} type\n * @param {*} labelManager\n * @param {*} cell\n *\n */\nconst createHeading = (config, type, labelManager, prevCell) => {\n    if (!config) { return ''; }\n\n    return headerCreator(\n        config,\n        type,\n        labelManager,\n        prevCell\n    );\n};\n\n/**\n *\n *\n * @param {*} context\n */\nexport const createHeaders = (context, canvasHeight, canvasWidth) => {\n    let headerHeight = 0;\n    const headers = {};\n    const subtitle = context.subtitle();\n    const isSubtitle = resolveTitleSubTitleContent(subtitle[0]);\n\n    canvasHeight >= 200 && canvasWidth >= 200 && ['title', 'subtitle'].forEach((type) => {\n        const headerOptions = context[type]();\n        const content = resolveTitleSubTitleContent(headerOptions[0]);\n        if (content.length) {\n            const config = headerOptions[1];\n\n            config.width = context.width();\n            config.height = context.height();\n            config.classPrefix = context.config().classPrefix;\n            config.content = content;\n            config.padding = (type === 'title' && !isSubtitle.length) ? subtitle[1].padding : config.padding;\n\n            const { height, cell } = createHeading(config, type, context.dependencies().smartlabel,\n                context[`${type}Cell`]);\n\n            headers[`${type}Cell`] = cell;\n            context._composition[type] = cell;\n            headerHeight += height;\n        }\n    });\n    return { headerHeight, headers };\n};\n\n","import { TextCell, AxisCell } from '@chartshq/visual-cell';\nimport { getValueParser } from 'muze-utils';\nimport {\n    VERTICAL, HORIZONTAL, LEFT, RIGHT, LEGEND_TYPE_MAP, PADDING, BORDER, MARGIN\n} from '../constants';\n\n/**\n *\n *\n * @param {*} legendConfig\n * @param {*} canvases\n *\n */\nexport const legendCreator = (canvas) => {\n    let LegendCls;\n    const dataset = [];\n    const axes = canvas.getRetinalAxes();\n\n    Object.entries(axes).forEach((axisInfo) => {\n        const scale = axisInfo[1][0];\n        const scaleType = axisInfo[0];\n        const scaleProps = canvas[scaleType]();\n\n        if (scaleProps.field && scale) {\n            const {\n                type,\n                step\n            } = scale.config();\n\n            const stepMapper = typeof step === 'boolean' ? step : false;\n            LegendCls = LEGEND_TYPE_MAP[`${type}-${stepMapper}-${scaleType}`];\n            dataset.push({ scale, canvas, fieldName: scaleProps.field, LegendCls, scaleType });\n        }\n    });\n\n    return dataset;\n};\n\n/**\n *\n *\n * @param {*} legendConfig\n * @param {*} canvases\n * @param {*} measurement\n * @param {*} prevLegends\n *\n */\nexport const legendInitializer = (legendConfig, canvas, measurement, prevLegends) => {\n    const legends = [];\n    const {\n        height,\n        width,\n        headerHeight\n    } = measurement;\n    const {\n        position,\n        align\n    } = legendConfig;\n\n    const legendInfo = legendCreator(canvas);\n    const { invalidValues } = canvas.config();\n\n    const parser = getValueParser(invalidValues);\n    legendInfo.forEach((dataInfo, index) => {\n        let legend = {};\n\n        const legendMeasures = {};\n        const {\n                LegendCls,\n                scale,\n                fieldName,\n                scaleType\n            } = dataInfo;\n        const config = legendConfig[scaleType] || {};\n        const title = config.title || {};\n        title.text = title.text || fieldName;\n        if (config.show) {\n            config.position = position;\n            config.align = align;\n\n            if (prevLegends[index]) {\n                legend = prevLegends[index].legend;\n            } else {\n                legend = LegendCls.create({\n                    labelManager: canvas._dependencies.smartlabel,\n                    cells: {\n                        AxisCell, TextCell\n                    }\n                });\n            }\n            legendMeasures.maxHeight = align === VERTICAL ? (height - headerHeight) : height * 0.2;\n            legendMeasures.maxWidth = align === HORIZONTAL ? width : width * 0.2;\n            legendMeasures.width = Math.min(legendMeasures.maxWidth, config.width);\n            legendMeasures.height = Math.min(legendMeasures.maxHeight, config.height);\n\n            [PADDING, BORDER, MARGIN].forEach((e) => {\n                legendMeasures[e] = config[e];\n            });\n\n            legend.scale(scale)\n                            .valueParser(parser)\n                            .title(title)\n                            .fieldName(fieldName)\n                            .config(config)\n                            .metaData(canvas.composition().visualGroup.getGroupByData().project([fieldName]))\n                            .measurement(legendMeasures)\n                            .canvasAlias(canvas.alias())\n                            .setLegendMeasures();\n\n            legends.push({ canvas, legend, scaleType });\n        }\n    });\n    return legends;\n};\n\n/**\n *\n *\n * @param {*} legends\n * @param {*} legendConfig\n * @param {*} availableHeight\n * @param {*} availableWidth\n *\n */\nexport const getLegendSpace = (legends, legendConfig, availableHeight, availableWidth) => {\n    const legendMeasures = legends.map(legendInfo => legendInfo.legend.measurement());\n    const legendSpace = { width: 0, height: 0 };\n\n    legendMeasures.forEach((space) => {\n        let height = 0;\n        let width = 0;\n        width = Math.min(space.width, space.maxWidth);\n        height = Math.min(space.height, space.maxHeight);\n\n        if (legendConfig.align === HORIZONTAL) {\n            if (legendSpace.width + width > availableWidth) {\n                legendSpace.width = availableWidth;\n                legendSpace.height += height;\n            } else {\n                legendSpace.width += width;\n                legendSpace.height = Math.max(legendSpace.height, height);\n            }\n        } else if (legendSpace.height + height > availableHeight) {\n            legendSpace.height = height;\n            legendSpace.width += width;\n        } else {\n            legendSpace.height += height;\n            legendSpace.width = Math.max(legendSpace.width, width);\n        }\n    });\n    if (legendConfig.align === HORIZONTAL) {\n        legendSpace.width = availableWidth;\n    }\n    return legendSpace;\n};\n\n/**\n *\n *\n * @param {*} context\n * @param {*} headerHeight\n *\n */\nexport const createLegend = (context, headerHeight, height, width) => {\n    const measurement = {\n        height,\n        width,\n        headerHeight\n    };\n    const { legend } = context.config();\n    const { show, position } = legend;\n\n    legend.classPrefix = context.config().classPrefix;\n    const align = (position === LEFT || position === RIGHT) ? VERTICAL : HORIZONTAL;\n\n    legend.show = show ? ((align === VERTICAL && width > 200) || (align === HORIZONTAL && height > 200)) : show;\n    legend.align = align;\n    return legendInitializer(legend, context, measurement, context.legends || []);\n};\n","import { LayoutComponent } from '../../../../layout/src/tree-layout';\n\nexport default class MuzeComponent extends LayoutComponent {\n    getLogicalSpace () {\n        const { width, height } = this.boundBox();\n        return { width, height };\n    }\n\n    setSpatialConfig (conf) {\n        this.boundBox({ top: conf.y, left: conf.x });\n        this.newDimensions = {\n            width: conf.width,\n            height: conf.height\n        };\n        this.renderAt(conf.renderAt);\n    }\n\n    getBoundBox () {\n        return this.boundBox();\n    }\n\n    updateWrapper () {\n        throw Error('Update is not implemented');\n    }\n\n    setParams () {\n        throw Error('set params is not implemented');\n    }\n}\n","import { selectElement } from 'muze-utils';\nimport MuzeComponent from './muze-chart-component';\nimport { LEFT } from '../../constants';\n\nexport default class HeaderComponent extends MuzeComponent {\n    constructor (params) {\n        super(params.name, params.component.getLogicalSpace(), 0);\n        this.setParams(params);\n    }\n\n    renderHeader (container) {\n        const layoutConfig = this.params.config;\n        container = selectElement(container);\n        const { align } = layoutConfig;\n        const sel = container\n          .selectAll(`.${layoutConfig.classPrefix}-inner-container`)\n          .data([this.name]);\n        sel.exit().remove();\n        const selEnter = sel.enter().append('div');\n\n        const cont = selEnter.merge(sel);\n        cont.classed(`${layoutConfig.classPrefix}-inner-container`, true);\n        const { height, width } = this.boundBox();\n        this.component.setAvailableSpace(width, height);\n\n        this.component && this.component.render(cont.node());\n\n        cont.selectAll('div').classed(`${layoutConfig.classPrefix}-inner-content`, true);\n        cont.style('width', `${100}%`);\n\n        if (layoutConfig && this.component) {\n            cont.style('float', LEFT)\n                            .style('text-align', align);\n                            // .style(`padding-${position === TOP ? BOTTOM : TOP}`, `${padding}px`);\n        }\n    }\n\n    draw (container) {\n        this.renderHeader(container || document.getElementById(this.renderAt()));\n    }\n\n    updateWrapper (params) {\n        this.name(params.name);\n        this.boundBox(params.component.getLogicalSpace());\n        return this;\n    }\n\n    setParams (params) {\n        this.component = params.component;\n        this.params = params;\n        this.target(params.config.target);\n        this.position(params.config.position);\n        this.className(params.config.className);\n        this.alignWith(params.config.alignWith);\n        this.alignment(params.config.alignment);\n    }\n\n    setSpatialConfig (conf) {\n        this.boundBox({ top: conf.y,\n            left: conf.x,\n            width: conf.width,\n            height: conf.height });\n        this.renderAt(conf.renderAt);\n    }\n}\n","import { makeElement, selectElement } from 'muze-utils';\nimport MuzeComponent from './muze-chart-component';\nimport {\n     LEFT, RIGHT, VERTICAL, HORIZONTAL, TOP, BOTTOM, HORIZONTAL_CENTER, VERTICAL_CENTER\n} from '../../constants';\nimport { ROW_MATRIX_INDEX, COLUMN_MATRIX_INDEX } from '../../../../layout/src/enums/constants';\n\nfunction defaultAlignmentHelper (position) {\n    let alignment = null;\n    const alignWith = `${ROW_MATRIX_INDEX[1]}-${COLUMN_MATRIX_INDEX[1]}`;\n    switch (position) {\n    case TOP:\n    case BOTTOM:\n        alignment = HORIZONTAL_CENTER;\n        break;\n    case LEFT:\n    case RIGHT:\n        alignment = VERTICAL_CENTER;\n        break;\n    default:\n        alignment = VERTICAL_CENTER;\n    }\n    return { alignment, alignWith };\n}\nexport default class LegendComponent extends MuzeComponent {\n    constructor (params) {\n        super(params.name, params.config.measurement.legendSpace, 0);\n        this.setParams(params);\n    }\n\n    renderLegend (container) {\n        container = selectElement(container);\n        const sectionComponents = [];\n        const { position, classPrefix } = this.params.config;\n        const legendMount = makeElement(container, 'div', [this.components],\n                                        `${classPrefix}-inner-content`, {}, d => d);\n        legendMount.classed(`${classPrefix}-legend`, true);\n        const align = (position === LEFT || position === RIGHT) ? VERTICAL : HORIZONTAL;\n        const legWidth = this.newDimensions.width;\n        const legHeight = this.newDimensions.height;\n\n        [container, legendMount].forEach((elem) => {\n            elem.style('width', `${Math.floor(legWidth)}px`)\n                            .style('height', `${legHeight}px`)\n                            .style('float', LEFT);\n        });\n\n        if (align === VERTICAL) {\n            let sections = -1;\n            let currHeight = legHeight;\n            let currWidth = 0;\n\n            this.components.forEach((legendInfo) => {\n                const leg = legendInfo.legend;\n                if (leg.measurement().height > currHeight) {\n                    sections++;\n                    currWidth = 0;\n                    currHeight = legHeight;\n                } else {\n                    sections < 0 && sections++;\n                }\n                sectionComponents[sections] = sectionComponents[sections] || [];\n                currHeight -= Math.min(leg.measurement().height, currHeight);\n                currWidth = Math.max(Math.min(leg.measurement().width, leg.measurement().maxWidth), currWidth);\n                sectionComponents[sections].push({\n                    legend: leg,\n                    legendHeight: legHeight,\n                    legendWidth: currWidth\n                });\n            });\n\n            const mount = makeElement(legendMount, ['div'], sectionComponents, `${classPrefix}-legend-section`);\n            // mount.each((d, i) => selectElement(this).classed(`${classPrefix}-legend-section-${i}`, true));\n            mount.classed(`${classPrefix}-legend-vertical-section`, true)\n                            .style('width', d => `${d[0].legendWidth}px`);\n            makeElement(mount, ['div'], d => d, `${classPrefix}-legend-components`, {}, d => d.legend.id())\n                            .each(function (d) {\n                                d.legend.mount(this);\n                            })\n                            .style('width', d => `${d.legendWidth}px`);\n        } else {\n            const mount = makeElement(legendMount, 'div', [1], `${classPrefix}-legend-section`);\n            mount.classed(`${classPrefix}-legend-horizontal-section`, true);\n            mount.classed(`${classPrefix}-legend-section-${0}`, true)\n                            .style('width', `${legWidth}px`);\n\n            makeElement(mount, 'div', this.components, `${classPrefix}-legend-components`, {}, d => d.legend.id())\n                            .each(function (d) { d.legend.mount(this); })\n                            .style('width', d => `${d.legend.measurement().width}px`);\n        }\n    }\n\n    draw (container) {\n        this.renderLegend(container || document.getElementById(this.renderAt()));\n    }\n\n    updateWrapper (params) {\n        this.name(params.name);\n        this.boundBox(params.config.measurement.legendSpace);\n        this.setParams(params);\n        return this;\n    }\n\n    setParams (params) {\n        this.components = params.component;\n        this.params = params;\n        this.target(params.config.target);\n        this.position(params.config.position);\n        const { alignWith, alignment } = defaultAlignmentHelper(params.config.position);\n        this.className(params.config.className);\n        this.alignWith(params.config.alignWith || alignWith);\n        this.alignment(params.config.alignment || alignment);\n    }\n\n}\n","import {\n    selectElement,\n    makeElement,\n    getD3Drag,\n    getEvent,\n    getWindow,\n    hasTouch\n} from 'muze-utils';\nimport './scroll-bar.scss';\nimport { WIDTH, HEIGHT } from '../../../constants';\n\nconst d3Drag = getD3Drag();\n\nconst arrowSizeMap = {\n    left: WIDTH,\n    right: WIDTH,\n    top: HEIGHT,\n    bottom: HEIGHT\n};\n\nexport const getUnitPositions = (unitMeasures, totalLength, viewLength) => {\n    let currentLen = 0;\n    const measures = unitMeasures.primary && unitMeasures.primary.length ?\n        unitMeasures.primary : unitMeasures.secondary;\n\n    return measures.map((e) => {\n        const unitPosition = currentLen * 100 / (totalLength - viewLength);\n        currentLen += e;\n        return unitPosition;\n    });\n};\n\nexport const createScrollBarArrow = (mount, type, config) => {\n    const {\n        classPrefix,\n        thickness\n    } = config;\n    const arrow = makeElement(mount, 'div', [type], `${classPrefix}-scroll-arrow-${type}`);\n\n    arrow.classed(`${classPrefix}-scroll-arrow`, true);\n    arrow.style(arrowSizeMap[type], `${thickness}px`);\n\n    const chevron = makeElement(arrow, 'div', [1], `${classPrefix}-scroll-arrow-chevron`);\n\n    chevron.attr('id', `${classPrefix}-scroll-arrow-chevron-${type}`);\n\n    return arrow;\n};\n\nexport const createScrollBarRect = (mount, config) => {\n    const {\n        classPrefix\n    } = config;\n    const rect = makeElement(mount, 'div', [1], `${classPrefix}-scroll-rect`);\n    const mover = makeElement(rect, 'div', [1], `${classPrefix}-scroll-mover`);\n\n    return { rect, mover };\n};\n\nexport const applyRectClick = (scrollMaker, moverRect) => {\n    const {\n        rect\n    } = moverRect;\n\n    rect.on('click', () => {\n        const event = getEvent();\n        scrollMaker.emptyScrollAreaClick(event);\n    });\n};\n\nconst applyMoverDrag = (scrollMaker, moverRect) => {\n    let startPos = {};\n    let moverStartPos = 0;\n    let endPos = {};\n    const {\n        mover,\n        rect\n    } = moverRect;\n    const rectStartPos = rect.node().getBoundingClientRect();\n\n    mover.call(d3Drag()\n                    .on('start', () => {\n                        const event = getEvent();\n\n                        moverStartPos = mover.node().getBoundingClientRect();\n                        startPos = {\n                            x: event.x,\n                            y: event.y\n                        };\n                    })\n                    .on('drag', () => {\n                        const event = getEvent();\n                        const window = getWindow();\n\n                        endPos = {\n                            x: event.x,\n                            y: event.y\n                        };\n                        const distanceMoved = {\n                            x: endPos.x - startPos.x,\n                            y: endPos.y - startPos.y\n                        };\n                        const actualPosition = {\n                            x: moverStartPos.x + distanceMoved.x - rectStartPos.x + window.pageXOffset,\n                            y: moverStartPos.y + distanceMoved.y - rectStartPos.y + window.pageYOffset\n                        };\n\n                        scrollMaker.changeMoverPosition(actualPosition);\n                    }));\n};\n\nconst applyScrollMouseDownAction = (moverRect, scrollMaker, speed) => {\n    const {\n        mover,\n        rect\n    } = moverRect;\n    const { x, y } = mover.node().getBoundingClientRect();\n    const { x: rectX, y: rectY } = rect.node().getBoundingClientRect();\n\n    scrollMaker.changeMoverPosition({ x: x - rectX + speed, y: y - rectY + speed });\n};\n\nconst registerListenerOnArrow = (scrollMaker, moverRect, arrowType, speed) => {\n    let timer = '';\n    const arrow = scrollMaker._components[arrowType];\n    const isTouchDevice = hasTouch();\n\n    arrow.on(isTouchDevice ? 'touchstart' : 'mousedown', () => {\n        const event = getEvent();\n\n        event.preventDefault();\n\n        timer = setInterval(() => {\n            applyScrollMouseDownAction(moverRect, scrollMaker, speed);\n        }, 100);\n    }).on(isTouchDevice ? 'touchend' : 'mouseup', () => {\n        const event = getEvent();\n\n        event.preventDefault();\n\n        clearInterval(timer);\n    }).on('click', () => {\n        applyScrollMouseDownAction(moverRect, scrollMaker, speed);\n    });\n};\n\nexport const registerListeners = (scrollMaker) => {\n    const {\n        moverRect\n    } = scrollMaker._components;\n\n    const speed = scrollMaker.config().speed;\n\n    registerListenerOnArrow(scrollMaker, moverRect, 'prevArrow', -speed);\n    applyMoverDrag(scrollMaker, moverRect);\n    applyRectClick(scrollMaker, moverRect);\n    registerListenerOnArrow(scrollMaker, moverRect, 'nextArrow', speed);\n};\n\nexport const scrollContainerHelper = (mountPoint, config, dimensions, type) => {\n    const {\n        classPrefix\n    } = config;\n    const scrollBarContainer = makeElement(selectElement(mountPoint), 'div', [1], `#${classPrefix}-scroll-bar-${type}`);\n\n    scrollBarContainer.classed(`${classPrefix}-scroll-bar`, true);\n    scrollBarContainer.style(WIDTH, `${dimensions.width}px`);\n    scrollBarContainer.style(HEIGHT, `${dimensions.height}px`);\n    return scrollBarContainer;\n};\n\n","import { mergeRecursive } from 'muze-utils';\n\nexport const PROPS = {\n\n    config: {\n        sanitization: (context, value) => {\n            value = mergeRecursive(context._config, value);\n            return value;\n        }\n    },\n    manager: {},\n    unitPositions: {},\n    logicalSpace: {}\n};\n\n","import { ERROR_MSG, generateGetterSetters } from 'muze-utils';\nimport {\n    scrollContainerHelper,\n    registerListeners\n} from './helper';\nimport { PROPS } from './props';\n\nexport class ScrollMaker {\n\n    constructor () {\n        this._components = {};\n        this._logicalSpace = {};\n        this._attachedScrollAction = () => {};\n        this._config = {\n            thickness: 10,\n            speed: 2\n        };\n        this._unitPositions = null;\n\n        generateGetterSetters(this, PROPS);\n    }\n\n    static type () {\n        throw new ERROR_MSG('Method not implemented');\n    }\n\n    emptyScrollAreaClick () {\n        throw new ERROR_MSG('Method not implemented');\n    }\n\n    changeMoverPosition () {\n        throw new ERROR_MSG('Method not implemented');\n    }\n\n    scrollTo () {\n        throw new ERROR_MSG('Method not implemented');\n    }\n\n    scrollDeltaTo () {\n        throw new ERROR_MSG('Method not implemented');\n    }\n\n    createScroll (mountPoint) {\n        const config = this.config();\n\n        return {\n            scrollBarContainer: scrollContainerHelper(mountPoint, config, this.logicalSpace(), this.constructor.type())\n        };\n    }\n\n    attachScrollAction (externalScrollAction) {\n        this._attachedScrollAction = externalScrollAction;\n        return this;\n    }\n\n    detachScrollAction () {\n        this._attachedScrollAction = () => {};\n        return this;\n    }\n\n    getLogicalSpace () {\n        return this.logicalSpace();\n    }\n\n    registerListeners () {\n        registerListeners(this);\n        return this;\n    }\n\n    remove () {\n        this._components.scrollBarContainer.remove();\n        return this;\n    }\n}\n\n","import MuzeComponent from './muze-chart-component';\nimport { HorizontalScrollMaker } from './scroll-bar-maker/horizontal-scroll-maker';\nimport { VerticalScrollMaker } from './scroll-bar-maker/vertical-scroll-maker';\n\nconst scrollMakerMap = {\n    horizontal: HorizontalScrollMaker,\n    vertical: VerticalScrollMaker\n};\n\n/**\n * Scroll Component acts as a wrapper over the scoll bars created using the respective Scroll Makers\n * This provides a consistent API for layouting using the tree layout system.\n *\n *\n * @class\n * @public\n * @module ScrollComponent\n */\nexport default class ScrollComponent extends MuzeComponent {\n\n    constructor (params) {\n        const ScrollMaker = scrollMakerMap[params.config.type];\n\n        params.component = new ScrollMaker();\n        params.component.config(params.config.scrollBarComponentConfig);\n        params.component.logicalSpace(params.dimensions);\n        super(params.name, params.component.getLogicalSpace(), 0);\n        this.setParams(params);\n    }\n\n    manager (...manager) {\n        if (manager.length) {\n            this.component.manager(manager[0]);\n            return this;\n        }\n        return this.component.manager();\n    }\n\n    /**\n     * Scrolls based on the actual pixel value provided. Since it's a delta change, the input will be\n     * a delta between (-Infinity, Infinity), based on which the scroll will occur. Only a delta movement in\n     * scroll occurs\n     *\n     * @public\n     *\n     * @param {number} delta Based on which the scroll will have a delta change in position\n     * @return {ScrollComponent} Instance of the ScrollComponent\n     */\n    scrollDeltaTo (delta) {\n        this.component.scrollDeltaTo(delta);\n        return this;\n    }\n\n    /**\n     * Scrolls to the specific point in the page. The input is provided as a percentage (0 - 100)\n     *\n     * @public\n     *\n     * @param {number} scrollPercentage Its the percentage based on which the scroll action will occur\n     * @return {ScrollComponent} Instance of the ScrollComponent\n     */\n    scrollTo (scrollPercentage) {\n        this.component.scrollTo(scrollPercentage);\n        return this;\n    }\n\n    /**\n     * Scrolls to the specific point in the page based on the unit index.\n     * The input is provided as a number represting the index for the unit.\n     * For vertical scroll, it's the row index that will be required.\n     * For horizontal scroll, it's the column index that will be required\n     *\n     * @public\n     *\n     * @param {number} unitIndex Index of the unit appearing in the grid\n     * @return {ScrollComponent} Instance of the ScrollComponent\n     */\n    scrollToUnitIndex (unitIndex) {\n        const unitPositions = this.component.unitPositions();\n        const sanitizedUnitIndex = Math.min(Math.max(0, unitIndex), unitPositions.length - 1);\n        this.component.scrollTo(unitPositions[sanitizedUnitIndex]);\n        return this;\n    }\n\n    /**\n     * Provides the positions of the units(either horizontal or vertical based on the type\n     * of scroll bar it wraps) relative to it's container. The position of the first unit starts at 0\n     *\n     *\n     * @public\n     *\n     * @return {Array} Positions of units either horizontal or vertical\n     */\n    getScrollPositionsForUnits () {\n        return this.component.unitPositions();\n    }\n\n    draw (container) {\n        this.component.createScroll(container || document.getElementById(this.renderAt()));\n        return this;\n    }\n\n    /**\n     * Can be used to attach a scroll action whenever scrolling occurs in the canvas\n     *\n     * @public\n     * @param {number} externalAction Action to be attached during scroll\n     * @return {ScrollComponent} Instance of the ScrollComponent\n     */\n    attachScrollAction (externalAction) {\n        this.component.attachScrollAction(externalAction);\n        return this;\n    }\n\n    /**\n     * Can be used to detach the scroll action already bound to the scroll bar\n     *\n     * @public\n     * @return {ScrollComponent} Instance of the ScrollComponent\n     */\n    detachScrollAction () {\n        this.component.detachScrollAction();\n        return this;\n    }\n\n    updateWrapper (params) {\n        this.name(params.name);\n        this.component.config(params.config.scrollBarComponentConfig);\n        this.component.logicalSpace(params.dimensions);\n        this.boundBox(this.component.getLogicalSpace());\n        this.setParams(params);\n        return this;\n    }\n\n    setParams (params) {\n        this.component = params.component || this.component;\n        this.params = params;\n        this.target(params.config.target);\n        this.position(params.config.position);\n        this.className(params.config.className);\n        this.alignWith(params.config.alignWith);\n        this.alignment(params.config.alignment);\n    }\n\n    remove () {\n        this.component.remove();\n    }\n}\n","import { ScrollMaker } from './scroll-maker';\nimport { createScrollBarRect, createScrollBarArrow, getUnitPositions } from './helper';\nimport { HORIZONTAL, HEIGHT, WIDTH, LEFT } from '../../../constants';\n\nexport class HorizontalScrollMaker extends ScrollMaker {\n\n    /**\n     * Describes the type of the ScrollMaker\n     *\n     * @public\n     *\n     * @return {String} Returns the type of scroll maker: horizontal\n     */\n    static type () {\n        return HORIZONTAL;\n    }\n\n    createScroll (mountPoint, dimensions = this.logicalSpace()) {\n        const config = this.config();\n        const { scrollBarContainer } = super.createScroll(mountPoint, config, dimensions);\n        const prevArrow = createScrollBarArrow(scrollBarContainer, 'left', config);\n        const moverRect = createScrollBarRect(scrollBarContainer, config);\n        const nextArrow = createScrollBarArrow(scrollBarContainer, 'right', config);\n        const {\n            mover,\n            rect\n        } = moverRect;\n\n        const { height, width, totalLength, viewLength, unitWidths } = this.logicalSpace();\n        const scrollBarWithouArrowLength = width - height * 2;\n\n        rect.style(WIDTH, `${dimensions.width - height * 2}px`);\n        rect.style(HEIGHT, `${100}%`);\n        mover.style(WIDTH, `${(viewLength * scrollBarWithouArrowLength) / totalLength}px`);\n        mover.style(HEIGHT, `${100}%`);\n        mover.style(LEFT, `${0}px`);\n\n        this._components = {\n            prevArrow,\n            nextArrow,\n            moverRect,\n            scrollBarContainer\n        };\n        this._scrollBarWithouArrowLength = scrollBarWithouArrowLength;\n        this.unitPositions(getUnitPositions(unitWidths, totalLength, viewLength));\n        this.registerListeners();\n    }\n\n    emptyScrollAreaClick (event) {\n        const {\n            mover,\n            rect\n        } = this._components.moverRect;\n        const speed = this.config().speed;\n        const { x, y } = mover.node().getBoundingClientRect();\n        const { x: rectX, y: rectY } = rect.node().getBoundingClientRect();\n        let positionAdjuster = speed * 10;\n        if (event.x < x) {\n            positionAdjuster = -speed * 10;\n        }\n        this.changeMoverPosition({ x: x - rectX + positionAdjuster, y: y - rectY + positionAdjuster });\n    }\n\n    changeMoverPosition (newPosition) {\n        let currentPos;\n        const {\n            mover,\n            rect\n        } = this._components.moverRect;\n        const rectStartPos = rect.node().getBoundingClientRect();\n        const moverPos = mover.node().getBoundingClientRect();\n        const {\n            totalLength\n         } = this.logicalSpace();\n\n        if (newPosition.x < 0) {\n            currentPos = 0;\n        } else if (newPosition.x + moverPos.width > rectStartPos.width) {\n            currentPos = rectStartPos.width - moverPos.width;\n        } else {\n            currentPos = newPosition.x;\n        }\n\n        mover.style(LEFT, `${currentPos}px`);\n        const totalDistance = this._scrollBarWithouArrowLength;\n        const movedViewLength = (currentPos * totalLength) / totalDistance;\n\n        this.manager().performAttachedScrollFunction(this.constructor.type(), movedViewLength);\n    }\n\n    scrollDeltaTo (delta) {\n        const {\n            mover,\n            rect\n        } = this._components.moverRect;\n        const moverPos = mover.node().getBoundingClientRect();\n        const rectStartPos = rect.node().getBoundingClientRect();\n\n        this.changeMoverPosition({ y: 0, x: moverPos.x - rectStartPos.x - delta });\n        return this;\n    }\n\n    /**\n     * Scrolls to the specific point in the page. The input is provided as a percentage (0 - 100)\n     *\n     * @public\n     *\n     * @param {number} scrollPercentage Its the percentage based on which the scroll action will occur\n     * @return {HorizontalScrollMaker} Instance of the HorizontalScrollMaker\n     */\n    scrollTo (scrollPercentage) {\n        const {\n            mover\n        } = this._components.moverRect;\n        const moverPos = mover.node().getBoundingClientRect();\n        const movement = (scrollPercentage * (this._scrollBarWithouArrowLength - moverPos.width)) / 100;\n\n        this.changeMoverPosition({ y: 0, x: movement });\n        return this;\n    }\n\n}\n\n","import { ScrollMaker } from './scroll-maker';\nimport { createScrollBarRect, createScrollBarArrow, getUnitPositions } from './helper';\nimport { VERTICAL, TOP, HEIGHT, WIDTH } from '../../../constants';\n\nexport class VerticalScrollMaker extends ScrollMaker {\n\n    /**\n     * Describes the type of the ScrollMaker\n     *\n     * @public\n     *\n     * @return {String} Returns the type of scroll maker: vertical\n     */\n    static type () {\n        return VERTICAL;\n    }\n\n    createScroll (mountPoint, dimensions = this.logicalSpace()) {\n        const config = this.config();\n        const { scrollBarContainer } = super.createScroll(mountPoint, dimensions);\n        const prevArrow = createScrollBarArrow(scrollBarContainer, 'top', config);\n        const moverRect = createScrollBarRect(scrollBarContainer, config);\n        const nextArrow = createScrollBarArrow(scrollBarContainer, 'bottom', config);\n        const {\n            mover,\n            rect\n        } = moverRect;\n        const { height, width, totalLength, viewLength, unitHeights } = this.logicalSpace();\n        const scrollBarWithouArrowLength = height - width * 2;\n\n        rect.style(HEIGHT, `${scrollBarWithouArrowLength}px`);\n        rect.style(WIDTH, `${100}%`);\n        mover.style(WIDTH, `${100}%`);\n        mover.style(HEIGHT, `${(viewLength * scrollBarWithouArrowLength) / totalLength}px`);\n        mover.style(TOP, `${0}px`);\n\n        this._components = {\n            prevArrow,\n            nextArrow,\n            moverRect,\n            scrollBarContainer\n        };\n        this._scrollBarWithouArrowLength = scrollBarWithouArrowLength;\n\n        this.unitPositions(getUnitPositions(unitHeights, totalLength, viewLength));\n        this.registerListeners();\n    }\n\n    emptyScrollAreaClick (event) {\n        const {\n            mover,\n            rect\n        } = this._components.moverRect;\n        const speed = this.config().speed;\n        const { x, y } = mover.node().getBoundingClientRect();\n        const { x: rectX, y: rectY } = rect.node().getBoundingClientRect();\n\n        let positionAdjuster = speed * 10;\n        if (event.y < y) {\n            positionAdjuster = -speed * 10;\n        }\n        this.changeMoverPosition({ x: x - rectX + positionAdjuster, y: y - rectY + positionAdjuster });\n    }\n\n    changeMoverPosition (newPosition) {\n        let currentPos;\n        const {\n            mover,\n            rect\n        } = this._components.moverRect;\n        const {\n            totalLength\n         } = this.logicalSpace();\n        const rectStartPos = rect.node().getBoundingClientRect();\n        const moverPos = mover.node().getBoundingClientRect();\n\n        if (newPosition.y < 0) {\n            currentPos = 0;\n        } else if (newPosition.y + moverPos.height > rectStartPos.height) {\n            currentPos = rectStartPos.height - moverPos.height;\n        } else {\n            currentPos = newPosition.y;\n        }\n        mover.style(TOP, `${currentPos}px`);\n        const totalDistance = this._scrollBarWithouArrowLength;\n        const movedViewLength = (currentPos * totalLength) / totalDistance;\n\n        this.manager().performAttachedScrollFunction(this.constructor.type(), movedViewLength);\n    }\n\n    /**\n     * Scrolls based on the actual pixel value provided. Since it's a delta change, the input will be\n     * a delta between (-Infinity, Infinity), based on which the scroll will occur. Only a delta movement in\n     * scroll occurs\n     *\n     * @public\n     *\n     * @param {number} delta Based on which the scroll will have a delta change in position\n     * @return {VerticalScrollMaker} Instance of the VerticalScrollMaker\n     */\n    scrollDeltaTo (delta) {\n        const {\n            mover,\n            rect\n        } = this._components.moverRect;\n        const moverPos = mover.node().getBoundingClientRect();\n        const rectStartPos = rect.node().getBoundingClientRect();\n\n        this.changeMoverPosition({ y: moverPos.y - rectStartPos.y - delta, x: 0 });\n        return this;\n    }\n\n    /**\n     * Scrolls to the specific point in the page. The input is provided as a percentage (0 - 100)\n     *\n     * @public\n     *\n     * @param {number} scrollPercentage Its the percentage based on which the scroll action will occur\n     * @return {VerticalScrollMaker} Instance of the VerticalScrollMaker\n     */\n    scrollTo (scrollPercentage) {\n        const {\n            mover\n        } = this._components.moverRect;\n        const moverPos = mover.node().getBoundingClientRect();\n        const movement = (scrollPercentage * (this._scrollBarWithouArrowLength - moverPos.height)) / 100;\n\n        this.changeMoverPosition({ x: 0, y: movement });\n        return this;\n    }\n\n}\n","import { makeElement } from 'muze-utils';\nimport { cellSpanMaker, applySpans } from '../../../../layout/src/grid-layout/span-maker';\nimport { applyBorders } from '../../../../layout/src/grid-layout/border-helper';\n\nimport {\n     TOP, CENTER\n} from '../../../../layout/src/enums/constants';\nimport MuzeComponent from './muze-chart-component';\nimport { WIDTH, HEIGHT, HIDDEN, OVERFLOW, AUTO, VISIBLE } from '../../constants';\n\nconst renderPlaceholders = (cells) => {\n    // Rendering content within placeholders\n    cells.each(function (cell) {\n        cell.placeholder.render(this);\n    });\n};\n\nexport default class MatrixComponent extends MuzeComponent {\n\n    constructor (params) {\n        super(params.name, params.config.dimensions, 0);\n        this.setParams(params);\n        this.className(params.config.className);\n    }\n\n    applyScroll (container) {\n        const row = this.params.config.row;\n        const column = this.params.config.column;\n        const { horizontal, vertical } = this.params.config.scrollInfo;\n        container.style(OVERFLOW, VISIBLE);\n        container.style(WIDTH, AUTO);\n        container.style(HEIGHT, AUTO);\n\n        if (horizontal && column === 1) {\n            container.style(OVERFLOW, HIDDEN);\n            container.style(WIDTH, '100%');\n        }\n\n        if (vertical && row === CENTER) {\n            container.style(OVERFLOW, HIDDEN);\n            container.style(HEIGHT, '100%');\n        }\n    }\n\n    renderMatrix (mountPoint) {\n        // Creating containers for each matrix individually\n        const classPrefix = this.params.config.classPrefix;\n        const row = this.params.config.row;\n        const column = this.params.config.column;\n        const dimensions = this.params.config.dimensions;\n        const border = this.params.config.border;\n\n        // Creating containers for each matrix individually\n        const containerForMatrix = makeElement(mountPoint, 'div', [1], `${classPrefix}-grid-${row}-${column + 1}`)\n            .classed(`${classPrefix}-grid-${row}`, true)\n            .classed(`${classPrefix}-grid`, true);\n\n        this.applyScroll(containerForMatrix);\n\n        const {\n            viewMatrix,\n            spans\n        } = cellSpanMaker(this.component, row, column);\n\n            // Rendering the table components\n        const { cells } = this.renderTable(containerForMatrix, `${classPrefix}-grid`, viewMatrix);\n\n        applySpans(cells, spans, { dimensions, border }, `${row}-${column}`);\n        renderPlaceholders(cells);\n\n        cells.exit().each((cell) => {\n            cell.placeholder.remove();\n        });\n\n        applyBorders(cells, border, row, column);\n    }\n\n    renderTable (mount, className, rowData) {\n        const table = makeElement(mount, 'table', ['layout'], `${className}-table`);\n        const body = makeElement(table, 'tbody', ['layout'], `${className}-body`);\n        const rows = makeElement(body, 'tr', rowData, `${className}-tr`);\n        const cells = makeElement(rows, 'td', (d, i) => d.filter(e => e !== null).map(e =>\n                                  ({ placeholder: e, rowIndex: i })), `${className}-td`, {}, key => key.placeholder.id);\n\n        return { table, body, rows, cells };\n    }\n\n    draw (container) {\n        this.renderMatrix(container || document.getElementById(this.renderAt()));\n    }\n\n    updateWrapper (params) {\n        this.name(params.name);\n        this.boundBox(params.config.dimensions);\n        this.setParams(params);\n        return this;\n    }\n\n    setParams (params) {\n        this.component = params.component;\n        this.params = params;\n        this.target(params.config.target);\n        this.position(TOP);\n        this.className(params.config.className);\n    }\n}\n","import { selectElement, getEvent } from 'muze-utils';\nimport MuzeComponent from './muze-chart-component';\nimport MatrixComponent from './matrix-component';\nimport { ROW_MATRIX_INDEX, COLUMN_MATRIX_INDEX } from '../../../../layout/src/enums/constants';\n\n/**\n * Based on the type of scroll, it changes the scrollLeft/scrollTop property of the specific\n * elements based on the scroll distance provided\n *\n *\n */\nconst applyScrollAction = (elem, classPrefix, scollDistance, type) => {\n    selectElement(elem)\n                    .selectAll(`.${classPrefix}-grid`)\n                    .property(type, scollDistance);\n};\n\n/**\n * Applies the action of the scroll by actually scrolling the respective matrices based on the\n * type of scroll. It returns a function which has both the scroll methods available\n *\n * @return {Object} contains the horizontal and vertical scroll actions on the grid component\n */\nconst scrollActionApplier = (movement, context) => {\n    const classPrefix = context.params.config.classPrefix;\n\n    return {\n        horizontal: () => {\n            [0, 1, 2].forEach(e =>\n                applyScrollAction(`#${context.component[e][1].renderAt()}`, classPrefix, movement, 'scrollLeft'));\n        },\n        vertical: () => {\n            [0, 1, 2].forEach(e =>\n                applyScrollAction(`#${context.component[1][e].renderAt()}`, classPrefix, movement, 'scrollTop'));\n        }\n    };\n};\n\nexport default class GridComponent extends MuzeComponent {\n\n    constructor (params) {\n        super(params.name, params.config.dimensions, 0);\n        this.gridComponents = [];\n        this.setParams(params);\n    }\n\n    sanitizeGrid () {\n        let height = 0;\n        let width = 0;\n        const { viewMatricesInfo, layoutDimensions } = this.component.viewInfo();\n        const scrollInfo = this.component.scrollInfo();\n\n        for (let i = 0; i < 3; i++) {\n            if (!(this.gridComponents.length && this.gridComponents[i] instanceof Array)) {\n                this.gridComponents[i] = [];\n            }\n            for (let j = 0; j < 3; j++) {\n                const matrixDim = { height: layoutDimensions.viewHeight[i], width: layoutDimensions.viewWidth[j] };\n                const matrix = viewMatricesInfo.matrices[`${ROW_MATRIX_INDEX[i]}`][j];\n                const matrixName = `${ROW_MATRIX_INDEX[i]}-${COLUMN_MATRIX_INDEX[j]}`;\n                const matrixConfig = {\n                    dimensions: matrixDim,\n                    border: layoutDimensions.border,\n                    classPrefix: this.params.config.classPrefix,\n                    scrollInfo,\n                    row: ROW_MATRIX_INDEX[i],\n                    column: j\n                };\n                if (this.gridComponents[i][j] instanceof MuzeComponent) {\n                    this.gridComponents[i][j].updateWrapper({\n                        name: matrixName,\n                        component: matrix,\n                        config: matrixConfig\n                    });\n                } else {\n                    const matrixWrapper = new MatrixComponent({\n                        name: matrixName,\n                        component: matrix,\n                        config: matrixConfig\n                    });\n                    this.gridComponents[i].push(matrixWrapper);\n                }\n                if (i === 0) {\n                    width += matrixDim.width;\n                }\n                if (j === 0) {\n                    height += matrixDim.height;\n                }\n            }\n        }\n        this.boundBox({ height, width });\n\n        this.component = this.gridComponents;\n        this.allComponents = this.gridComponents;\n    }\n\n    scrollBarManager (...manager) {\n        if (manager.length) {\n            this._scrollBarManager = manager[0];\n            return this;\n        }\n        return this._scrollBarManager;\n    }\n\n    /**\n     * Attaches a mousewheel listener to the center matrix, based on which the scrolling can occur.\n     * It uses the scroll component to change the position of the scroller, which ultimately scrolls the center matrix\n     *\n     *\n     * @return {GridComponent} Instance of the GridComponent\n     */\n    attachScrollListener () {\n        selectElement(`#${this.component[1][1].renderAt()}`)\n                        .on('wheel', () => {\n                            const event = getEvent();\n                            const {\n                                wheelDeltaX,\n                                wheelDeltaY\n                            } = event;\n\n                            // Prevent default behaviour and stop propagating\n                            event.preventDefault();\n                            event.stopPropagation();\n\n                            // Scrolling horizontally\n                            if (wheelDeltaX !== 0 && Math.abs(wheelDeltaX) > Math.abs(wheelDeltaY)) {\n                                this.scrollBarManager().triggerScrollBarAction('horizontal', wheelDeltaX);\n                            }\n\n                            // Scrolling Vertically\n                            if (wheelDeltaY !== 0 && Math.abs(wheelDeltaX) < Math.abs(wheelDeltaY)) {\n                                this.scrollBarManager().triggerScrollBarAction('vertical', wheelDeltaY);\n                            }\n                        });\n        return this;\n    }\n\n    performScrollAction (direction, movedView) {\n        scrollActionApplier(movedView, this)[direction]();\n        return this;\n    }\n\n    getBoundBox () {\n        const { top, left } = this.component[0][0].boundBox();\n        const { height, width } = this.boundBox();\n\n        return {\n            top,\n            left,\n            height,\n            width\n        };\n    }\n\n    updateWrapper (params) {\n        this.name(params.name);\n        this.boundBox(params.config.dimensions);\n        this.setParams(params);\n        return this;\n    }\n\n    setParams (params) {\n        this.component = params.component;\n        this.params = params;\n        this.target(params.config.target);\n        this.className(params.config.className);\n        this.sanitizeGrid();\n        return this;\n    }\n}\n","import { TITLE, SUB_TITLE, LEGEND, VERTICAL, HORIZONTAL, WIDTH, HEIGHT, TOP, LEFT, RIGHT } from '../constants';\nimport HeaderComponent from './components/headerComponent';\nimport LegendComponent from './components/legendComponent';\nimport ScrollComponent from './components/scroll-component';\nimport GridComponent from './components/grid-component';\nimport { TITLE_CONFIG, SUB_TITLE_CONFIG, GRID, CANVAS, LAYOUT_ALIGN } from './defaults';\nimport { ROW_MATRIX_INDEX, COLUMN_MATRIX_INDEX, CENTER } from '../../../layout/src/enums/constants';\n\n// Mapping between types of headers and their required configs for wrapper creation\nconst headerMap = {\n    title: {\n        headerCell: 'titleCell',\n        configType: TITLE_CONFIG\n    },\n    subtitle: {\n        headerCell: 'subtitleCell',\n        configType: SUB_TITLE_CONFIG\n    }\n};\n\n/**\n * Creates the wrapper for the header, i.e., title and subtitle to be used in the tree layout\n *\n *\n * @param {string} headerType type of header: title/subtite\n * @param {LayoutManager} layoutManager instance of Layout Manager which manages the layouting of the components\n * @param {Object} renderDetails Extra details required for rendering the headers\n * @return {Instance} Returns the respective wrappers\n */\nconst createHeaderWrapper = (headerType, layoutManager, renderDetails) => {\n    let wrapper = null;\n\n    const { components, layoutConfig } = renderDetails;\n    const { headerCell, configType } = headerMap[headerType];\n    const target = { target: CANVAS };\n\n    if (components.headers && components.headers[headerCell]) {\n        let headerConfig = layoutConfig[headerType];\n        const header = components.headers[headerCell];\n\n        headerConfig = Object.assign({}, headerConfig, {\n            classPrefix: layoutConfig.classPrefix,\n            ...target,\n            alignWith: `${ROW_MATRIX_INDEX[0]}-${COLUMN_MATRIX_INDEX[1]}`,\n            alignment: LAYOUT_ALIGN.LEFT,\n            className: configType.className\n        });\n\n        if (headerConfig.align === CENTER) {\n            headerConfig.alignment = null;\n            headerConfig.alignWith = null;\n        }\n        if (headerConfig.align === RIGHT) {\n            headerConfig.alignment = RIGHT;\n        }\n\n        const wrapperParams = {\n            name: headerType,\n            component: header,\n            config: headerConfig\n        };\n\n        const existingComponent = layoutManager.getComponent(headerType);\n        if (existingComponent) {\n            wrapper = existingComponent\n                      .updateWrapper(wrapperParams);\n        } else {\n            wrapper = new HeaderComponent(wrapperParams);\n        }\n    }\n    return wrapper;\n};\n\n// Mapping between types of scrollBars and their required configs for wrapper creation\nconst scrollBarMap = config => ({\n    vertical: {\n        componentName: 'verticalScrollBar',\n        width: 'thickness',\n        height: 'layoutBasedMeasure',\n        layoutBasedMeasure: HEIGHT,\n        viewMeasure: 'viewHeight',\n        rowAlign: 1,\n        colAlign: config.align === 'right' ? 2 : 0,\n        position: config.align,\n        alignment: TOP\n    },\n    horizontal: {\n        componentName: 'horizontalScrollBar',\n        width: 'layoutBasedMeasure',\n        layoutBasedMeasure: WIDTH,\n        viewMeasure: 'viewWidth',\n        height: 'thickness',\n        rowAlign: config.align === 'top' ? 0 : 2,\n        colAlign: 1,\n        position: config.align,\n        alignment: LEFT\n    }\n});\n\n/**\n * Creates the wrapper for the scroller, i.e., horizontal and vertical to be used in the tree layout\n *\n *\n * @param {string} scrollBarType type of scrollbar: horizontal/vertical\n * @param {LayoutManager} layoutManager instance of Layout Manager which manages the layouting of the components\n * @param {Object} renderDetails Extra details required for rendering the headers\n * @param {GridLayout} grid Instance of the grid layout\n * @return {Instance} Returns the respective wrappers\n */\nconst createScrollBarWrapper = (scrollBarType, layoutManager, renderDetails, grid) => {\n    let scrollBarWrapper = null;\n    const { layoutConfig } = renderDetails;\n    const target = { target: CANVAS };\n    const { scrollBar } = layoutConfig;\n    const { layoutDimensions } = grid.viewInfo();\n    const {\n        actualCenterMeasures,\n        unitHeights,\n        unitWidths\n    } = layoutDimensions;\n    const {\n        componentName, layoutBasedMeasure, width, height, rowAlign, colAlign,\n        viewMeasure, position, alignment\n    } = scrollBarMap(scrollBar[scrollBarType])[scrollBarType];\n    const dimensions = {\n        thickness: scrollBar.thickness,\n        layoutBasedMeasure: layoutDimensions[viewMeasure][1]\n    };\n    const isScroll = grid.scrollInfo()[scrollBarType];\n    const totalLength = actualCenterMeasures[layoutBasedMeasure];\n    const viewLength = layoutDimensions[viewMeasure][1];\n\n    const scrollConfig = Object.assign({}, {\n        classPrefix: layoutConfig.classPrefix,\n        ...target,\n        scrollBarComponentConfig: {\n            ...scrollBar,\n            classPrefix: layoutConfig.classPrefix\n        },\n\n        type: scrollBarType,\n        alignWith: `${ROW_MATRIX_INDEX[rowAlign]}-${COLUMN_MATRIX_INDEX[colAlign]}`,\n        alignment,\n        position\n    });\n\n    const wrapperParams = {\n        name: componentName,\n        config: scrollConfig,\n        dimensions: {\n            width: dimensions[width],\n            height: dimensions[height],\n            totalLength,\n            viewLength,\n            unitHeights,\n            unitWidths\n        }\n    };\n\n    const existingComponent = layoutManager.getComponent(componentName);\n\n    if (!isScroll) {\n        existingComponent && existingComponent.remove();\n        return null;\n    }\n\n    if (existingComponent) {\n        scrollBarWrapper = existingComponent\n                                .updateWrapper(wrapperParams);\n    } else {\n        scrollBarWrapper = new ScrollComponent(wrapperParams);\n    }\n\n    return scrollBarWrapper;\n};\n\n/**\n * Creates the wrapper for the legend to be used in the tree layout\n *\n *\n * @param {LayoutManager} layoutManager instance of Layout Manager which manages the layouting of the components\n * @param {Object} renderDetails Extra details required for rendering the headers\n * @return {Instance} Returns the respective wrappers\n */\nconst createLegendWrapper = (layoutManager, renderDetails) => {\n    let legendWrapper = null;\n    const { components, layoutConfig, measurement } = renderDetails;\n    const target = { target: CANVAS };\n\n    if (components.legends && components.legends.length) {\n        const legendConfig = { ...layoutConfig.legend, ...target, measurement };\n        const wrapperParams = {\n            name: LEGEND,\n            component: components.legends,\n            config: legendConfig\n        };\n\n        const existingComponent = layoutManager.getComponent(LEGEND);\n\n        if (existingComponent) {\n            legendWrapper = existingComponent\n                       .updateWrapper(wrapperParams);\n        } else {\n            legendWrapper = new LegendComponent(wrapperParams);\n        }\n    }\n    return legendWrapper;\n};\n\n/**\n * Creates the wrapper for the grid layout to be used in the tree layout\n *\n *\n * @param {LayoutManager} layoutManager instance of Layout Manager which manages the layouting of the components\n * @param {Object} renderDetails Extra details required for rendering the headers\n * @param {GridLayout} grid Instance of the grid layout\n * @return {Instance} Returns the respective wrappers\n */\nconst gridLayoutWrapper = (layoutManager, renderDetails, grid) => {\n    let gridWrapper = null;\n    const target = { target: CANVAS };\n    const { layoutConfig } = renderDetails;\n\n    const config = {\n        ...target,\n        pagination: layoutConfig.pagination,\n        classPrefix: layoutConfig.classPrefix,\n        dimensions: { height: 0, width: 0 }\n    };\n    const wrapperParams = {\n        name: GRID,\n        component: grid,\n        config\n    };\n    const existingComponent = layoutManager.getComponent(GRID);\n    if (existingComponent) {\n        gridWrapper = existingComponent\n                    .updateWrapper(wrapperParams);\n    } else {\n        gridWrapper = new GridComponent(wrapperParams);\n    }\n    return gridWrapper;\n};\n\n/**\n * Responsible for providing the wrapper creators for every component in Muze.\n * This function, when called, returns the set of components and their respective wrappers.\n *\n *\n *\n * @param {LayoutManager} layoutManager instance of Layout Manager which manages the layouting of the components\n * @param {GridLayout} grid Instance of the grid layout\n * @param {Object} renderDetails Extra details required for rendering the headers\n * @return {Instance} Returns the respective wrappers for each component\n */\nexport const componentWrapperMaker = (layoutManager, grid, renderDetails) => ({\n    title: createHeaderWrapper(TITLE, layoutManager, renderDetails),\n    subtitle: createHeaderWrapper(SUB_TITLE, layoutManager, renderDetails),\n    legend: createLegendWrapper(layoutManager, renderDetails),\n    grid: gridLayoutWrapper(layoutManager, renderDetails, grid),\n    verticalScrollBar: createScrollBarWrapper(VERTICAL, layoutManager, renderDetails, grid),\n    horizontalScrollBar: createScrollBarWrapper(HORIZONTAL, layoutManager, renderDetails, grid)\n});\n","export class ScrollManager {\n\n    constructor () {\n        this._scrollBarComponents = {};\n        this._attachedComponents = {};\n    }\n\n    scrollBarComponents (...sbc) {\n        if (sbc.length) {\n            this._scrollBarComponents = sbc[0];\n            return this;\n        }\n        return this._scrollBarComponents;\n    }\n\n    attachedComponents (...abc) {\n        if (abc.length) {\n            this._attachedComponents = abc[0];\n            return this;\n        }\n        return this._attachedComponents;\n    }\n\n    performAttachedScrollFunction (type, movedViewLength) {\n        Object.values(this.attachedComponents()).forEach((e) => {\n            e.performScrollAction(type, movedViewLength);\n        });\n    }\n\n    triggerScrollBarAction (type, delta) {\n        this.scrollBarComponents()[type] && this.scrollBarComponents()[type].scrollDeltaTo(delta);\n    }\n}\n","import { mergeRecursive } from 'muze-utils';\nimport { arrangeComponents } from './component-resolver';\nimport { createHeaders } from './title-maker';\nimport { createLegend, getLegendSpace } from './legend-maker';\nimport { componentWrapperMaker } from './component-wrapper-maker';\nimport { TOP, BOTTOM, LEFT, RIGHT } from '../constants';\nimport { ScrollManager } from './scroll-manager';\n\n/**\n *\n *\n * @param {*} context\n *\n */\nexport const prepareLayout = (layout, renderDetails) => {\n    const { components, layoutConfig, measurement } = renderDetails;\n    const {\n        rows,\n        columns,\n        values,\n        cornerMatrices\n    } = components;\n    const {\n        topLeft,\n        topRight,\n        bottomLeft,\n        bottomRight\n    } = cornerMatrices;\n    if (rows && columns) {\n        layout.measurement(measurement)\n                        .config(layoutConfig)\n                        .matrices({\n                            top: [topLeft, columns[0], topRight],\n                            center: [rows[0], values, rows[1]],\n                            bottom: [bottomLeft, columns[1], bottomRight]\n                        })\n                        .triggerReflow();\n    }\n};\n\n/**\n *\n *\n * @param {*} context\n * @param {*} mount\n *\n */\nexport const getRenderDetails = (context, mount) => {\n    let layoutConfig = mergeRecursive({}, context.config());\n    // Get height width of the mount point\n    let { height, width } = mount.getBoundingClientRect();\n    const heightAttr = context.height();\n    const widthAttr = context.width();\n    const visGroup = context.composition().visualGroup;\n    const {\n        isColumnSizeEqual,\n        isRowSizeEqual,\n        priority,\n        rows,\n        columns,\n        values\n    } = visGroup.placeholderInfo();\n    const {\n        minWidth,\n        minHeight,\n        classPrefix,\n        showHeaders,\n        legend,\n        pagination,\n        scrollBar\n    } = context.config();\n\n    // Get title configuration\n    const titleConfig = context.title()[1];\n     // Get subtitle configuration\n    const subtitleConfig = context.subtitle()[1];\n    // Get legend position\n    const legendPosition = legend.position;\n    // Arrange components according to config\n    const layoutArrangement = arrangeComponents(context);\n\n    height = Math.floor(height);\n    width = Math.floor(width);\n\n    const availableHeightForCanvas = Math.max(heightAttr > 0 ? heightAttr : height, minHeight);\n    const availableWidthForCanvas = Math.max(widthAttr > 0 ? widthAttr : width, minWidth);\n\n    // Create headers and determine header height\n    const { headers, headerHeight } = createHeaders(context, availableHeightForCanvas, availableWidthForCanvas);\n\n    // Create legends and determine legend space\n    const legends = createLegend(context, headerHeight, availableHeightForCanvas, availableWidthForCanvas);\n    context._composition.legend = {};\n    legends.forEach((e) => {\n        context._composition.legend[e.scaleType] = e.legend;\n    });\n\n    const legendSpace = getLegendSpace(legends, legend, availableHeightForCanvas, availableWidthForCanvas);\n    const legendWidth = (legendPosition === LEFT || legendPosition === RIGHT) ? legendSpace.width : 0;\n    const legendHeight = (legendPosition === TOP || legendPosition === BOTTOM) ? legendSpace.height : 0;\n\n    // Set components for layouting\n    const components = {\n        headers,\n        legends,\n        canvases: [context],\n        rows,\n        columns,\n        values,\n        cornerMatrices: visGroup.cornerMatrices()\n    };\n\n    const measurement = {\n        mountSpace: {\n            height,\n            width\n        },\n        headerHeight,\n        legendSpace,\n        canvasWidth: availableWidthForCanvas,\n        canvasHeight: availableHeightForCanvas,\n        width: availableWidthForCanvas - legendWidth,\n        height: availableHeightForCanvas - headerHeight - legendHeight,\n        minUnitHeight: context.minUnitHeight(),\n        minUnitWidth: context.minUnitWidth()\n    };\n    layoutConfig = mergeRecursive(layoutConfig, {\n        classPrefix,\n        showHeaders,\n        border: mergeRecursive(visGroup.metaData().border, context.config().border),\n        layoutArrangement,\n        legend,\n        buffer: scrollBar.thickness,\n        pagination,\n        title: titleConfig,\n        subtitle: subtitleConfig,\n        isColumnSizeEqual,\n        isRowSizeEqual,\n        mount,\n        priority\n    });\n    return {\n        layoutConfig,\n        components,\n        measurement\n    };\n};\n\nconst componentIndexes = {\n    title: 0,\n    subtitle: 1,\n    legend: 2,\n    verticalScrollBar: 3,\n    horizontalScrollBar: 4,\n    grid: 5\n};\n\n/**\n * Responsible for creating a scroll manager that manages interactions between the grid\n * component and the scroll bar components\n *\n * @param {Array} componentWrappers Contains the wrappers for all the components\n * @param {Canvas} canvas Instance of the current canvas\n * @return {Array} Positions of units either horizontal or vertical\n */\nconst createScrollManager = (componentWrappers, canvas) => {\n    const {\n        horizontalScrollBar,\n        verticalScrollBar,\n        grid\n    } = componentIndexes;\n\n    const horizontalScrollWrapper = componentWrappers[horizontalScrollBar];\n    const verticalScrollWrapper = componentWrappers[verticalScrollBar];\n    const gridWrapper = componentWrappers[grid];\n    const scrollBarManager = new ScrollManager();\n    const scrollBarComponents = {};\n\n    verticalScrollWrapper && (scrollBarComponents.vertical = verticalScrollWrapper);\n    horizontalScrollWrapper && (scrollBarComponents.horizontal = horizontalScrollWrapper);\n\n    scrollBarManager\n                    .scrollBarComponents(scrollBarComponents)\n                    .attachedComponents({\n                        grid: gridWrapper\n                    });\n    canvas.composition().hScrollBar = horizontalScrollWrapper;\n    canvas.composition().vScrollBar = verticalScrollWrapper;\n\n    [horizontalScrollWrapper, verticalScrollWrapper].forEach((wrapper) => {\n        wrapper && wrapper.manager(scrollBarManager);\n    });\n\n    gridWrapper.scrollBarManager(scrollBarManager);\n};\n\nexport const renderLayout = (canvas, renderDetails) => {\n    const layoutManager = canvas._layoutManager;\n    const gridLayout = canvas.layout();\n    const {\n\n        grid\n    } = componentIndexes;\n\n    // Get the component wrappers\n    const compWrappers = componentWrapperMaker(layoutManager, gridLayout, renderDetails);\n    const componentWrappers = Object.keys(componentIndexes).map(e => compWrappers[e]);\n    const gridWrapper = componentWrappers[grid];\n    createScrollManager(componentWrappers, canvas);\n\n    layoutManager.registerComponents(componentWrappers).compute();\n    gridWrapper.attachScrollListener();\n};\n\n","import {\n    getDataModelFromIdentifiers,\n    FieldType,\n    mergeRecursive,\n    isSimpleObject,\n    CommonProps\n} from 'muze-utils';\nimport { Firebolt } from '@chartshq/muze-firebolt';\n\nimport { applyInteractionPolicy } from '../helper';\n\nconst defaultInteractionPolicy = (valueMatrix, firebolt) => {\n    const isMeasure = field => field.type() === FieldType.MEASURE;\n    const canvas = firebolt.context;\n    const visualGroup = canvas.composition().visualGroup;\n    const xFields = [].concat(...visualGroup.getFieldsFromChannel('x'));\n    const yFields = [].concat(...visualGroup.getFieldsFromChannel('y'));\n    const colDim = xFields.every(field => field.type() === FieldType.DIMENSION);\n    const fieldInf = visualGroup.resolver().getAllFields();\n    const rowFacets = fieldInf.rowFacets;\n    const colFacets = fieldInf.colFacets;\n    valueMatrix.each((cell) => {\n        const unitFireBolt = cell.valueOf().firebolt();\n        if (!(xFields.every(isMeasure) && yFields.every(isMeasure))) {\n            const facetFields = cell.valueOf().facetByFields()[0];\n            const unitColFacets = facetFields.filter(d => colFacets.findIndex(v => v.equals(d)) !== -1);\n            const unitRowFacets = facetFields.filter(d => rowFacets.findIndex(v => v.equals(d)) !== -1);\n            let propFields;\n            if (colDim) {\n                propFields = unitColFacets.map(d => `${d}`);\n            } else {\n                propFields = unitRowFacets.map(d => `${d}`);\n            }\n\n            unitFireBolt.propagateWith('*', propFields, true);\n        }\n    });\n};\n\nconst defaultCrossInteractionPolicy = {\n    behaviours: {\n        '*': (propagationPayload, context) => {\n            const propagationCanvasAlias = propagationPayload.sourceCanvas;\n            const canvasAlias = context.parentAlias();\n            return propagationCanvasAlias ? canvasAlias === propagationCanvasAlias : true;\n        }\n    },\n    sideEffects: {\n        tooltip: (propagationPayload, context) => {\n            const propagationUnit = propagationPayload.sourceUnit;\n            const propagationCanvas = propagationPayload.sourceCanvas;\n            const unitId = context.id();\n            const canvasAlias = context.parentAlias();\n            if (propagationCanvas) {\n                return propagationCanvas !== canvasAlias ? true : unitId === propagationUnit;\n            }\n            return true;\n        }\n    }\n};\n\n/**\n * This class is responsible for dispatching any behavioural action to all the visual units housed by the canvas.\n * It is created by {@link Canvas}. This class does not handle any physical actions. Physical actions get triggered\n * in {@link VisualUnit} which is managed by it's own firebolt instance. The firebolt instance of canvas only\n * propagates the action to all the visual units in it's composition.\n *\n * To get the firebolt instance of {@link Canvas}\n * ```\n *  const firebolt = canvas.firebolt();\n * ```\n *\n * @class GroupFireBolt\n * @public\n */\nexport default class GroupFireBolt extends Firebolt {\n    constructor (...params) {\n        super(...params);\n        this._interactionPolicy = this.constructor.defaultInteractionPolicy();\n        this.crossInteractionPolicy(this.constructor.defaultCrossInteractionPolicy());\n    }\n\n    static defaultInteractionPolicy () {\n        return defaultInteractionPolicy;\n    }\n\n    static defaultCrossInteractionPolicy () {\n        return defaultCrossInteractionPolicy;\n    }\n\n    interactionPolicy (...policy) {\n        if (policy.length) {\n            this._interactionPolicy = policy[0] || this.constructor.defaultInteractionPolicy();\n            return this;\n        }\n        return this._interactionPolicy;\n    }\n\n    crossInteractionPolicy (...policy) {\n        if (policy.length) {\n            this._crossInteractionPolicy = mergeRecursive(mergeRecursive({},\n                this.constructor.defaultCrossInteractionPolicy()), policy[0] || {});\n            const context = this.context;\n            applyInteractionPolicy(this);\n            context._throwback.registerImmediateListener([CommonProps.MATRIX_CREATED], () => {\n                applyInteractionPolicy(this);\n            });\n            return this;\n        }\n        return this._crossInteractionPolicy;\n    }\n\n    /**\n     * Dispatches a behavioural action with a payload. It takes the name of the behavioural action and a payload\n     * object which contains the criteria aend an array of side effects which determines what side effects are\n     * going to be shown in each visual unit of the canvas. It prepares the datamodel from the given criteria\n     * and initiates a propagation from the datamodel of canvas. Then all the visual units of canvas which listens\n     * to the propagation gets informed on which rows got selected and dispatches the behavioural action sent during\n     * propagation.\n     *\n     * To dispatch a behavioural action on the canvas\n     * ```\n     *  // Get the firebolt instance of the canvas\n     *  const firebolt = canvas.firebolt();\n     *  // Dispatch a brush behaviour\n     *  firebolt.dispatchBehaviour('brush', {\n     *      // Selects all the rows with Horsepower having range between 100 and 200.\n     *      criteria: {\n     *          Horsepower: [100, 200]\n     *      }\n     *  });\n     * // On dispatch of this behavioural action, a selection box gets created and plots gets faded out which are the\n     * // default side effects mapped to this behavioural action.\n     * ```\n     *\n     * ```\n     * Additionally, it can also be passed an array of side effects in the payload.\n     *  // Dispatch a select behaviour with only crossline as side effect.\n     *  firebolt.dispatchBehaviour('select', {\n     *      criteria: {\n     *          Cylinders: ['8']\n     *      },\n     *      sideEffects: ['crossline']\n     *  });\n     * ```\n     *\n     * @public\n     *\n     * @param {string} behaviour Name of the behavioural action\n     * @param {Object} payload Object which contains the interaction information.\n     * @param {Object | Array.<Array>} payload.criteria Identifiers by which the selection happens.\n     * @param {Array.<string|Object>} payload.sideEffects Side effects which needs to be shown.\n     *\n     * @return {GroupFireBolt} Instance of firebolt.\n     */\n    dispatchBehaviour (behaviour, payload) {\n        const propPayload = Object.assign(payload);\n        const criteria = propPayload.criteria;\n        const data = this.context.composition().visualGroup.getGroupByData();\n        const fieldsConfig = data.getFieldsConfig();\n        const model = getDataModelFromIdentifiers(data, criteria);\n        const behaviouralAction = this._actions.behavioural[behaviour];\n\n        if (behaviouralAction) {\n            const fields = isSimpleObject(criteria) ? Object.keys(criteria) : (criteria ? criteria[0] : []);\n            const validFields = fields.filter(field => field in fieldsConfig);\n            const mutates = behaviouralAction.constructor.mutates();\n            const propConfig = {\n                payload: propPayload,\n                action: behaviour,\n                criteria: model,\n                sourceId: this.context.alias(),\n                isMutableAction: mutates,\n                propagateInterpolatedValues: validFields.every(field => fieldsConfig[field].def.type ===\n                    FieldType.MEASURE)\n            };\n            data.propagate(model, propConfig, true);\n        }\n        return this;\n    }\n\n    registerSideEffects (sideEffects) {\n        for (const key in sideEffects) {\n            this._sideEffectDefinitions[sideEffects[key].formalName()] = sideEffects[key];\n        }\n        return this;\n    }\n}\n","import GroupFireBolt from './group-firebolt';\n\nexport default GroupFireBolt;\n","export const APP_INITIAL_STATE = {\n    app: {\n        group: {},\n        units: {},\n        layers: {},\n        canvas: {}\n    },\n    local: {\n        canvas: {},\n        group: {},\n        units: {},\n        layers: {}\n    }\n};\n\n","import { GridLayout } from '@chartshq/layout';\nimport { transactor, Store, getUniqueId, selectElement, STATE_NAMESPACES, CommonProps } from 'muze-utils';\nimport { physicalActions, sideEffects, behaviouralActions, behaviourEffectMap } from '@chartshq/muze-firebolt';\nimport { RETINAL } from '../constants';\nimport TransactionSupport from '../transaction-support';\nimport { getRenderDetails, prepareLayout, renderLayout } from './layout-maker';\nimport { localOptions, canvasOptions } from './local-options';\nimport GroupFireBolt from './firebolt';\nimport options from '../options';\nimport { APP_INITIAL_STATE } from './app-state';\nimport { initCanvas,\n        setupChangeListener,\n        setLabelRotationForAxes,\n        createGroupState,\n        createLayoutManager,\n        setLayoutInfForUnits\n} from './helper';\n/**\n * Canvas is a logical component which houses a visualization by taking multiple variable in different encoding channel.\n * Canvas manages lifecycle of many other logical component and exposes one consistent interface for creation of chart.\n * Canvas is intialized from environment with settings from environment and singleton dependencies.\n *\n * To create an instance of canvas\n * ```\n *  const env = Muze();\n *  const canvas = env.canvas()\n * ```\n *\n *\n * @class\n * @public\n * @module Canvas\n */\nexport default class Canvas extends TransactionSupport {\n\n    /**\n     * Creates reactive property accessors.\n     * - data\n     * - height\n     * - width\n     * - config\n     * This configs are retrieved from options.\n     */\n    constructor (globalDependencies) {\n        super();\n\n        this._allOptions = Object.assign({}, options, localOptions);\n        this._registry = {};\n        this._composition = {};\n        this._cachedProps = {};\n        this._alias = null;\n        this._renderedResolve = null;\n        this._renderedPromise = new Promise((resolve) => {\n            this._renderedResolve = resolve;\n        });\n        this._composition.layout = new GridLayout();\n        this._store = new Store(APP_INITIAL_STATE);\n\n        this._throwback = new Store({\n            [CommonProps.MATRIX_CREATED]: false\n        });\n\n        // Setters and getters will be mounted on this. The object will be mutated.\n        const namespace = STATE_NAMESPACES.CANVAS_LOCAL_NAMESPACE;\n        const [, store] = transactor(this, options, this._store.model, {\n            namespace\n        });\n        transactor(this, localOptions, store, {\n            namespace\n        });\n        transactor(this, canvasOptions, store, {\n            namespace\n        });\n\n        this.dependencies(Object.assign({}, globalDependencies, this._dependencies));\n        this.firebolt(new GroupFireBolt(this, {\n            behavioural: behaviouralActions,\n            physical: physicalActions,\n            physicalBehaviouralMap: {}\n        }, sideEffects, behaviourEffectMap));\n        this.alias(`canvas-${getUniqueId()}`);\n        this.title('', {});\n        this.subtitle('', {});\n        this.legend({});\n        this.color({});\n        this.shape({});\n        this.size({});\n        setupChangeListener(this);\n         // init layoutManager\n        this._layoutManager = createLayoutManager();\n    }\n\n    /**\n     * Retrieves an instance of layout which is responsible for layouting. Layout is responsible for creating faceted\n     * presentation using table layout.\n     *\n     * @public\n     *\n     * @return {GridLayout} Instance of layout attached to canvas.\n     */\n    layout (...params) {\n        if (params.length) {\n            return this;\n        }\n        return this.composition().layout;\n    }\n\n    /**\n     * Retrieves the composition for a canvas\n     *\n     * @public\n     *\n     * @return {object} Instances of the components which canvas requires to draw the full visualization.\n     *      ```\n     *          {\n     *              layout: // Instance of {@link GridLayout}\n     *              legend: // Instance of {@link Legend}\n     *              subtitle: // Instance of {@link TextCell} using which the title is rendered\n     *              title: // Instance of {@link TextCell} using which the title is rendered\n     *              visualGroup: // Instance of {@link visualGroup}\n     *          }\n     *      ```\n     */\n    composition (...params) {\n        if (params.length) {\n            return this;\n        }\n        return this._composition;\n    }\n\n    done () {\n        return this._renderedPromise;\n    }\n\n    /**\n     * Sets or gets the alias of the canvas. Alias is a name by which the canvas can be referred.\n     *\n     * When setter\n     * @param {string} alias Name of the alias.\n     *\n     * @return {Canvas} Instance of the canvas.\n     *\n     * When getter\n     *\n     * @return {string} Alias of canvas.\n     *\n     * @public\n     */\n    alias (...params) {\n        if (params.length) {\n            const visualGroup = this.composition().visualGroup;\n            this._alias = params[0];\n            visualGroup && visualGroup.alias(this.alias());\n            return this;\n        }\n        return this._alias;\n    }\n\n    /**\n     * Creates an instance initiated with given settings.\n     *\n     * @param {Object} initialSettings Initial settings to be populated in the model\n     * @param {Object} regEntry newly created instance with the initial settings\n     * @param {Object} globalDependencies dependencies which will be created only once in the page\n     *\n     * @return {Object} newly created instance with the initial settings\n     */\n    static withSettings (initialSettings, regEntry, globalDependencies) {\n        const instance = new Canvas(globalDependencies);\n\n        for (const key in initialSettings) {\n            instance[key](initialSettings[key]);\n        }\n        // set registry for instance\n        instance.registry(regEntry);\n        return instance;\n    }\n\n    /**\n     *\n     *\n     * @static\n     *\n     * @memberof Canvas\n     */\n    static formalName () {\n        return 'canvas';\n    }\n\n    /**\n     * Returns the instance of firebolt associated with this canvas. The firebolt instance can be used to dispatch a\n     * behaviour dynamically on the canvas. This firebolt does not handle any physical actions. It is just used to\n     * propagate the action to all the visual units in it's composition.\n     *\n     * @public\n     *\n     * @return {GroupFireBolt} Instance of firebolt associated with canvas.\n     */\n    firebolt (...firebolt) {\n        if (firebolt.length) {\n            this._firebolt = firebolt[0];\n            return this;\n        }\n        return this._firebolt;\n    }\n\n    /**\n     * Registry peoperty accessor\n     *\n     * @param {Object} reg plain old javascript object keyvalue pairs. Key containing module name and value contains\n     * module definition class. The reg object has to be flat object of level 1.\n     */\n    registry (...params) {\n        if (params.length) {\n            const components = Object.assign({}, params[0].components);\n            const componentSubRegistry = Object.assign({}, params[0].componentSubRegistry);\n\n            this._registry = { components, componentSubRegistry };\n            const initedComponents = initCanvas(this);\n            // @todo is it okay to continue this tight behaviour? If not use a resolver to resolve diff component type.\n            this._composition.visualGroup = initedComponents[0];\n            createGroupState(this);\n            this.composition().visualGroup.alias(this.alias()).store(this._store);\n            return this;\n        }\n        return this._registry;\n    }\n\n    /*\n     * Prepare dependencies for top level elements\n     */\n    dependencies (...param) {\n        if (param.length) {\n            this._dependencies = param[0];\n            return this;\n        }\n        // @todo prepare dependencies here.\n        return this._dependencies;\n    }\n\n    /**\n     *\n     *\n     * @param {*} lifeCycles\n     *\n     * @memberof Canvas\n     */\n    lifeCycle (lifeCycles) {\n        const lifeCycleManager = this.dependencies().lifeCycleManager;\n        if (lifeCycles) {\n            lifeCycleManager.register(lifeCycles);\n            return this;\n        }\n        return lifeCycleManager;\n    }\n\n    /**\n     *\n     *\n     * @readonly\n     * @memberof Canvas\n     */\n    legend (...params) {\n        if (params.length) {\n            return this;\n        }\n        return this.composition().legend;\n    }\n\n    /**\n     * Returns a promise for various {@link LifecycleEvents} of the various components of canvas. The promise gets\n     * resolved once the particular event gets completed.\n     *\n     * To use this,\n     * ```\n     *      canvas.once('layer.drawn').then(() => {\n     *          // Do any post drawing work here.\n     *      });\n     * ```\n     * @public\n     *\n     * @param {string} eventName Name of the lifecycle event.\n     *\n     * @return {Promise} A pending promise waiting for resolve to be called.\n     */\n    once (eventName) {\n        const lifeCycleManager = this.dependencies().lifeCycleManager;\n        return lifeCycleManager.retrieve(eventName);\n    }\n\n    /**\n     * Internal function to trigger render, this method is cognizant of all the properties of the core modules and\n     * establish a passive reactivity. Passive reactivity is not always a bad thing :)\n     * @internal\n     */\n    render () {\n        const mount = this.mount();\n        // removeChild(mount);\n        const lifeCycleManager = this.dependencies().lifeCycleManager;\n        // Get render details including arrangement and measurement\n        const renderDetails = getRenderDetails(this, mount);\n        lifeCycleManager.notify({ client: this, action: 'beforedraw' });\n        // Prepare the layout by triggering the matrix calculation\n        prepareLayout(this.layout(), renderDetails);\n\n        this._layoutManager.dimension({\n            height: renderDetails.measurement.canvasHeight,\n            width: renderDetails.measurement.canvasWidth\n        });\n\n        this._layoutManager.renderAt(mount);\n\n        // Render each component\n        renderLayout(this, renderDetails);\n\n        setLayoutInfForUnits(this);\n\n        // setLabelRotation\n        setLabelRotationForAxes(this);\n    }\n\n    /**\n     * Returns the instances of x axis of the canvas. It returns the instances in a two dimensional array form.\n     *\n     * ```\n     *   // The first element in the sub array represents the top axis and the second element represents the bottom\n     *   // axis.\n     *   [\n     *      [X1, X2],\n     *      [X3, X4]\n     *   ]\n     * ```\n     * @public\n     *\n     * @return {Array.<Array>} Instances of x axis.\n     */\n    xAxes () {\n        return this.composition().visualGroup.getAxes('x');\n    }\n\n    /**\n     * Returns the instances of y axis of the canvas. It returns the instances in a two dimensional array form.\n     *\n     * ```\n     *   // The first element in the sub array represents the left axis and the second element represents the right\n     *   // axis.\n     *   [\n     *      [Y1, Y2],\n     *      [Y3, Y4]\n     *   ]\n     * ```\n     * @public\n     * @return {Array.<Array>} Instances of y axis.\n     */\n    yAxes () {\n        return this.composition().visualGroup.getAxes('y');\n    }\n\n    /**\n     * Returns all the retinal axis of the canvas. Color, shape and size axis are combinedly called retinal axis.\n     *\n     * @public\n     * @return {Object} Instances of retinal axis.\n     *          ```\n     *              {\n     *                  color: [ColorAxis], // Array of color axis.\n     *                  shape: [ShapeAxis], // Array of shape axis.\n     *                  size: [SizeAxis] // Array of size axis.\n     *              }\n     *          ```\n     */\n    getRetinalAxes () {\n        const visualGroup = this.composition().visualGroup;\n        return visualGroup.getAxes(RETINAL);\n    }\n\n    mount (...params) {\n        if (params.length) {\n            let value = params[0];\n            if (typeof params[0] === 'string') {\n                value = selectElement(params[0]).node();\n            }\n            this._mount = value;\n            return this;\n        }\n        return this._mount;\n    }\n}\n","import { cellRegistry, SimpleCell } from '@chartshq/visual-cell';\nimport { VisualUnit } from '@chartshq/visual-unit';\nimport { layerRegistry } from '@chartshq/visual-layer';\nimport { SimpleGroup, VisualGroup } from '@chartshq/visual-group';\n\nexport const COMPONENTS = {\n    VisualGroup,\n    VisualUnit\n};\nexport const SUBREGISTRIES = {\n    cellRegistry,\n    layerRegistry\n};\nexport const INTERFACES = {\n    SimpleGroup,\n    SimpleCell\n};\n\n","import { DEFAULT_LAYERS } from './defaults';\n\nexport default () => {\n    const reg = DEFAULT_LAYERS;\n    const regObj = {\n        set: (key, def) => {\n            reg[key] = def;\n            return regObj;\n        },\n        get: () => reg\n    };\n    return regObj;\n};\n","import {\n    transactor,\n    Smartlabel,\n    enableChainedTransaction,\n    LifeCycleManager,\n    DataModel,\n    makeElement,\n    getClientPoint,\n    selectElement,\n    getEvent,\n    require,\n    DateTimeFormatter\n} from 'muze-utils';\n\nimport {\n    SurrogateSideEffect,\n    SpawnableSideEffect,\n    sideEffects,\n    PersistentBehaviour,\n    GenericBehaviour,\n    VolatileBehaviour,\n    behaviouralActions,\n    GenericSideEffect\n} from '@chartshq/muze-firebolt';\nimport { layerFactory } from '@chartshq/visual-layer';\nimport pkg from '../package.json';\nimport * as operators from './operators';\nimport { actionModel as ActionModel } from './action-model';\nimport options from './options';\nimport { Canvas } from './canvas';\nimport { COMPONENTS, SUBREGISTRIES } from './default-registry';\nimport './muze.scss';\n\n// Cache singleton instances which should be included only once in a page\nconst globalCache = {};\nconst defaultRegistry = COMPONENTS;\n\nconst overrideRegistryDefinitions = (overrideRegistry, registry) => {\n    for (const prop in overrideRegistry) {\n        registry.set(prop, overrideRegistry[prop]);\n    }\n};\n\n/**\n * Entry point to renderer. Initializes an environment with settings and registries for canvas. This is a simple wrapper\n * over {@link Canvas} which enables common configuration passing to multiple such canvases.\n *\n * Everytime `muze()` is called it creates an environment. These environment supports subset of APIs of Canvas. If\n * common configuration is used to render multiple canvases then it can be set directly in the env. Like if data is\n * common across all the visulization then its better to set the data in env. When a canvas is created it receives all\n * those configuration from env.\n *\n * ```\n *  // Creates an environment\n *  const env = muze()\n *  // Set data property in environment, so that all the canvas created from the same environment gets this data\n *  // automatically\n *  env.data(dm);\n *  // Creates canvas, by default env pushes data to canvas instance\n *  const canvas = env.canvas();\n * ```\n *\n * If a property is set on both environment and canvas instance, property set on canvas instance gets more priority.\n *\n * @public\n * @module muze\n * @namespace Muze\n *\n * @return {Env} Instance of an environment\n */\nconst muze = () => {\n    // Setters and getters will be mounted on this. Object will be mutated.\n    const [env, globalStore] = transactor({}, options);\n    const components = Object.assign({}, COMPONENTS);\n    const componentSubRegistryDef = Object.assign(SUBREGISTRIES);\n    const componentSubRegistry = {};\n\n    for (const prop in componentSubRegistryDef) {\n        componentSubRegistry[prop] = componentSubRegistryDef[prop]();\n    }\n\n    // Apart form the setter getter, an instance method is injected to create real renderer instances\n    env.canvas = () => {\n        // Create a canvas instance with this settings\n        const settings = globalStore.serialize();\n        const canvas = Canvas.withSettings(settings, { /* registry */\n            components,\n            componentSubRegistry\n        }, env.globalDependencies());\n\n        // Whenever settings is changed canvas is updated\n        enableChainedTransaction(globalStore, canvas, Object.keys(settings));\n\n        return canvas;\n    };\n\n    // Global dependencies for for compositions. Only one copy of the same should be in the page\n    env.globalDependencies = () => {\n        if (!globalCache.smartlabel) {\n            globalCache.smartlabel = new Smartlabel(1, 'body');\n        }\n        return {\n            smartlabel: globalCache.smartlabel,\n            lifeCycleManager: new LifeCycleManager()\n        };\n    };\n\n    // Retrieves global settings. This getter is readonly so that user can't change this as change should happen\n    // only from setter to avoid unwanted sync issues.\n    env.settings = () => globalStore.serialize();\n\n    env.registry = (...overrideRegistry) => {\n        // Selectively copy the properties from COMPONENTS\n        if (overrideRegistry.length) {\n            for (const prop in overrideRegistry) {\n                if (prop in defaultRegistry) {\n                    components[prop] = overrideRegistry[prop];\n                }\n            }\n            return env;\n        }\n        return components;\n    };\n\n    env.cellRegistry = (...overrideRegistry) => {\n        const cellRegistry = componentSubRegistry.cellRegistry;\n        if (overrideRegistry.length) {\n            overrideRegistryDefinitions(overrideRegistry[0], cellRegistry);\n            return env;\n        }\n        return cellRegistry.get();\n    };\n\n    env.layerRegistry = (...overrideRegistry) => {\n        const layerRegistry = componentSubRegistry.layerRegistry;\n        if (overrideRegistry.length) {\n            overrideRegistryDefinitions(overrideRegistry[0], layerRegistry);\n            return env;\n        }\n        return layerRegistry.get();\n    };\n\n    return env;\n};\n\nconst SideEffects = {\n    sideEffects,\n    standards: {\n        SurrogateSideEffect,\n        SpawnableSideEffect,\n        GenericSideEffect\n    }\n};\n\nconst Behaviours = {\n    behaviouralActions,\n    standards: {\n        GenericBehaviour,\n        PersistentBehaviour,\n        VolatileBehaviour\n    }\n};\n\nmuze.DataModel = DataModel;\nmuze.version = pkg.version;\nmuze.SideEffects = SideEffects;\nmuze.ActionModel = ActionModel;\nmuze.layerFactory = layerFactory;\nmuze.Operators = operators;\nmuze.Behaviours = Behaviours;\nmuze.utils = {\n    getClientPoint,\n    getEvent,\n    makeElement,\n    selectElement,\n    DateTimeFormatter,\n    require\n};\n\nexport default muze;\n"],"sourceRoot":""}